UPD EnhancedForStatement@@for (Bundle bundle : bundles) {  if (bundle.getSymbolicName().startsWith(originalUserInput)) {    completions.add(bundle.getSymbolicName());  }} @TO@ for (Bundle bundle : bundles) {  String bsn=bundle.getSymbolicName();  if (bsn != null && bsn.startsWith(originalUserInput)) {    completions.add(bundle.getSymbolicName());  }} @AT@ 1933 @LENGTH@ 160
---UPD IfStatement@@if (bundle.getSymbolicName().startsWith(originalUserInput)) {  completions.add(bundle.getSymbolicName());} @TO@ if (bsn != null && bsn.startsWith(originalUserInput)) {  completions.add(bundle.getSymbolicName());} @AT@ 1970 @LENGTH@ 117
------DEL MethodInvocation@@bundle.getSymbolicName().startsWith(originalUserInput) @AT@ 1974 @LENGTH@ 54
---------DEL MethodInvocation@@MethodName:getSymbolicName:[] @AT@ 1974 @LENGTH@ 24
------INS InfixExpression@@bsn != null && bsn.startsWith(originalUserInput) @TO@ IfStatement@@if (bundle.getSymbolicName().startsWith(originalUserInput)) {  completions.add(bundle.getSymbolicName());} @AT@ 2018 @LENGTH@ 48
---------INS InfixExpression@@bsn != null @TO@ InfixExpression@@bsn != null && bsn.startsWith(originalUserInput) @AT@ 2018 @LENGTH@ 11
------------INS SimpleName@@bsn @TO@ InfixExpression@@bsn != null @AT@ 2018 @LENGTH@ 3
------------INS Operator@@!= @TO@ InfixExpression@@bsn != null @AT@ 2021 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@bsn != null @AT@ 2025 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@bsn != null && bsn.startsWith(originalUserInput) @AT@ 2029 @LENGTH@ 2
---------INS MethodInvocation@@bsn.startsWith(originalUserInput) @TO@ InfixExpression@@bsn != null && bsn.startsWith(originalUserInput) @AT@ 2033 @LENGTH@ 33
------------MOV SimpleName@@Name:bundle @TO@ MethodInvocation@@bsn.startsWith(originalUserInput) @AT@ 1974 @LENGTH@ 6
------------MOV SimpleName@@MethodName:startsWith:[originalUserInput] @TO@ MethodInvocation@@bsn.startsWith(originalUserInput) @AT@ 1999 @LENGTH@ 29
---INS VariableDeclarationStatement@@String bsn=bundle.getSymbolicName(); @TO@ EnhancedForStatement@@for (Bundle bundle : bundles) {  if (bundle.getSymbolicName().startsWith(originalUserInput)) {    completions.add(bundle.getSymbolicName());  }} @AT@ 1970 @LENGTH@ 38
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String bsn=bundle.getSymbolicName(); @AT@ 1970 @LENGTH@ 6
------INS VariableDeclarationFragment@@bsn=bundle.getSymbolicName() @TO@ VariableDeclarationStatement@@String bsn=bundle.getSymbolicName(); @AT@ 1977 @LENGTH@ 30
---------INS SimpleName@@bsn @TO@ VariableDeclarationFragment@@bsn=bundle.getSymbolicName() @AT@ 1977 @LENGTH@ 3
---------INS MethodInvocation@@bundle.getSymbolicName() @TO@ VariableDeclarationFragment@@bsn=bundle.getSymbolicName() @AT@ 1983 @LENGTH@ 24
------------INS SimpleName@@Name:bundle @TO@ MethodInvocation@@bundle.getSymbolicName() @AT@ 1983 @LENGTH@ 6
------------INS SimpleName@@MethodName:getSymbolicName:[] @TO@ MethodInvocation@@bundle.getSymbolicName() @AT@ 1990 @LENGTH@ 17


UPD TypeDeclaration@@[public, abstract]TestSupport, TestCase @TO@ [public, abstract]TestSupport, Assert @AT@ 1894 @LENGTH@ 14834
---UPD SimpleType@@TestCase @TO@ Assert @AT@ 1936 @LENGTH@ 8


UPD TryStatement@@try {  HttpConsumer consumer=resolve(request);  if (consumer == null) {    response.sendError(HttpServletResponse.SC_NOT_FOUND);    return;  }  if (consumer.isSuspended()) {    response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);    return;  }  DefaultExchange exchange=new DefaultExchange(consumer.getEndpoint(),ExchangePattern.InOut);  exchange.setIn(new HttpMessage(exchange,request,response));  consumer.getProcessor().process(exchange);  consumer.getBinding().writeResponse(exchange,response);} catch (Exception e) {  e.printStackTrace();  throw new ServletException(e);} @TO@ try {  HttpConsumer consumer=resolve(request);  if (consumer == null) {    response.sendError(HttpServletResponse.SC_NOT_FOUND);    return;  }  if (consumer.isSuspended()) {    response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);    return;  }  DefaultExchange exchange=new DefaultExchange(consumer.getEndpoint(),ExchangePattern.InOut);  if (((HttpEndpoint)consumer.getEndpoint()).isBridgeEndpoint()) {    exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  }  exchange.setIn(new HttpMessage(exchange,request,response));  consumer.getProcessor().process(exchange);  consumer.getBinding().writeResponse(exchange,response);} catch (Exception e) {  e.printStackTrace();  throw new ServletException(e);} @AT@ 1596 @LENGTH@ 1230
---INS IfStatement@@if (((HttpEndpoint)consumer.getEndpoint()).isBridgeEndpoint()) {  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);} @TO@ TryStatement@@try {  HttpConsumer consumer=resolve(request);  if (consumer == null) {    response.sendError(HttpServletResponse.SC_NOT_FOUND);    return;  }  if (consumer.isSuspended()) {    response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);    return;  }  DefaultExchange exchange=new DefaultExchange(consumer.getEndpoint(),ExchangePattern.InOut);  exchange.setIn(new HttpMessage(exchange,request,response));  consumer.getProcessor().process(exchange);  consumer.getBinding().writeResponse(exchange,response);} catch (Exception e) {  e.printStackTrace();  throw new ServletException(e);} @AT@ 2269 @LENGTH@ 159
------INS MethodInvocation@@((HttpEndpoint)consumer.getEndpoint()).isBridgeEndpoint() @TO@ IfStatement@@if (((HttpEndpoint)consumer.getEndpoint()).isBridgeEndpoint()) {  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);} @AT@ 2273 @LENGTH@ 57
---------INS ParenthesizedExpression@@((HttpEndpoint)consumer.getEndpoint()) @TO@ MethodInvocation@@((HttpEndpoint)consumer.getEndpoint()).isBridgeEndpoint() @AT@ 2273 @LENGTH@ 38
------------INS CastExpression@@(HttpEndpoint)consumer.getEndpoint() @TO@ ParenthesizedExpression@@((HttpEndpoint)consumer.getEndpoint()) @AT@ 2274 @LENGTH@ 36
---------------INS SimpleType@@HttpEndpoint @TO@ CastExpression@@(HttpEndpoint)consumer.getEndpoint() @AT@ 2275 @LENGTH@ 12
---------------INS MethodInvocation@@consumer.getEndpoint() @TO@ CastExpression@@(HttpEndpoint)consumer.getEndpoint() @AT@ 2288 @LENGTH@ 22
------------------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getEndpoint() @AT@ 2288 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@consumer.getEndpoint() @AT@ 2297 @LENGTH@ 13
---------INS SimpleName@@MethodName:isBridgeEndpoint:[] @TO@ MethodInvocation@@((HttpEndpoint)consumer.getEndpoint()).isBridgeEndpoint() @AT@ 2312 @LENGTH@ 18
------INS Block@@ThenBody:{  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);} @TO@ IfStatement@@if (((HttpEndpoint)consumer.getEndpoint()).isBridgeEndpoint()) {  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);} @AT@ 2332 @LENGTH@ 96
---------INS ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE) @TO@ Block@@ThenBody:{  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);} @AT@ 2350 @LENGTH@ 64
------------INS MethodInvocation@@exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE) @TO@ ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE) @AT@ 2350 @LENGTH@ 63
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE) @AT@ 2350 @LENGTH@ 8
---------------INS SimpleName@@MethodName:setProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.TRUE] @TO@ MethodInvocation@@exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE) @AT@ 2359 @LENGTH@ 54
------------------INS QualifiedName@@Exchange.SKIP_GZIP_ENCODING @TO@ SimpleName@@MethodName:setProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.TRUE] @AT@ 2371 @LENGTH@ 27
---------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.SKIP_GZIP_ENCODING @AT@ 2371 @LENGTH@ 8
---------------------INS SimpleName@@SKIP_GZIP_ENCODING @TO@ QualifiedName@@Exchange.SKIP_GZIP_ENCODING @AT@ 2380 @LENGTH@ 18
------------------INS QualifiedName@@Boolean.TRUE @TO@ SimpleName@@MethodName:setProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.TRUE] @AT@ 2400 @LENGTH@ 12
---------------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.TRUE @AT@ 2400 @LENGTH@ 7
---------------------INS SimpleName@@TRUE @TO@ QualifiedName@@Boolean.TRUE @AT@ 2408 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertNull(HttpConverter.toInputStream(req)) @TO@ MethodInvocation:assertNull(HttpConverter.toInputStream(req,null)) @AT@ 5625 @LENGTH@ 45
---UPD MethodInvocation@@assertNull(HttpConverter.toInputStream(req)) @TO@ assertNull(HttpConverter.toInputStream(req,null)) @AT@ 5625 @LENGTH@ 44
------UPD SimpleName@@MethodName:assertNull:[HttpConverter.toInputStream(req)] @TO@ MethodName:assertNull:[HttpConverter.toInputStream(req,null)] @AT@ 5625 @LENGTH@ 44
---------UPD MethodInvocation@@HttpConverter.toInputStream(req) @TO@ HttpConverter.toInputStream(req,null) @AT@ 5636 @LENGTH@ 32
------------UPD SimpleName@@MethodName:toInputStream:[req] @TO@ MethodName:toInputStream:[req, null] @AT@ 5650 @LENGTH@ 18
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toInputStream:[req] @AT@ 5675 @LENGTH@ 4


MOV MethodDeclaration@@public, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public, abstract]JcrAuthTestBase, CamelTestSupport @AT@ 4186 @LENGTH@ 84
---UPD ExpressionStatement@@MethodInvocation:clean() @TO@ MethodInvocation:deleteDirectory("target/repository") @AT@ 4233 @LENGTH@ 8
------UPD MethodInvocation@@MethodName:clean:[] @TO@ deleteDirectory("target/repository") @AT@ 4233 @LENGTH@ 7
---------INS SimpleName@@MethodName:deleteDirectory:["target/repository"] @TO@ MethodInvocation@@MethodName:clean:[] @AT@ 2024 @LENGTH@ 36
------------INS StringLiteral@@"target/repository" @TO@ SimpleName@@MethodName:deleteDirectory:["target/repository"] @AT@ 2040 @LENGTH@ 19


UPD ExpressionStatement@@Assignment:this.resources=resources @TO@ Assignment:this.resources=Arrays.asList(resources).toArray(new Resource[resources.length]) @AT@ 5940 @LENGTH@ 27
---UPD Assignment@@this.resources=resources @TO@ this.resources=Arrays.asList(resources).toArray(new Resource[resources.length]) @AT@ 5940 @LENGTH@ 26
------INS MethodInvocation@@Arrays.asList(resources).toArray(new Resource[resources.length]) @TO@ Assignment@@this.resources=resources @AT@ 5951 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:asList:[resources] @TO@ MethodInvocation@@Arrays.asList(resources).toArray(new Resource[resources.length]) @AT@ 5951 @LENGTH@ 24
------------INS SimpleName@@resources @TO@ MethodInvocation@@MethodName:asList:[resources] @AT@ 5965 @LENGTH@ 9
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(resources).toArray(new Resource[resources.length]) @AT@ 5951 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[new Resource[resources.length]] @TO@ MethodInvocation@@Arrays.asList(resources).toArray(new Resource[resources.length]) @AT@ 5976 @LENGTH@ 39
------------INS ArrayCreation@@new Resource[resources.length] @TO@ SimpleName@@MethodName:toArray:[new Resource[resources.length]] @AT@ 5984 @LENGTH@ 30
---------------INS ArrayType@@Resource[] @TO@ ArrayCreation@@new Resource[resources.length] @AT@ 5988 @LENGTH@ 26
------------------INS SimpleType@@Resource @TO@ ArrayType@@Resource[] @AT@ 5988 @LENGTH@ 8
---------------INS QualifiedName@@resources.length @TO@ ArrayCreation@@new Resource[resources.length] @AT@ 5997 @LENGTH@ 16
------------------INS SimpleName@@resources @TO@ QualifiedName@@resources.length @AT@ 5997 @LENGTH@ 9
------------------INS SimpleName@@length @TO@ QualifiedName@@resources.length @AT@ 6007 @LENGTH@ 6
------DEL SimpleName@@resources @AT@ 5957 @LENGTH@ 9


INS MethodDeclaration@@public, static, String, MethodName:getTestMethodName,  @TO@ TypeDeclaration@@[public, abstract]TestSupport, TestCase @AT@ 16791 @LENGTH@ 67
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:getTestMethodName,  @AT@ 16791 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:getTestMethodName,  @AT@ 16798 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:getTestMethodName,  @AT@ 16805 @LENGTH@ 6
---INS SimpleName@@MethodName:getTestMethodName @TO@ MethodDeclaration@@public, static, String, MethodName:getTestMethodName,  @AT@ 16812 @LENGTH@ 17
---INS ReturnStatement@@StringLiteral:"" @TO@ MethodDeclaration@@public, static, String, MethodName:getTestMethodName,  @AT@ 16842 @LENGTH@ 10
------INS StringLiteral@@"" @TO@ ReturnStatement@@StringLiteral:"" @AT@ 16849 @LENGTH@ 2


INS ExpressionStatement@@MethodInvocation:consumer.start() @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 3329 @LENGTH@ 17
---INS MethodInvocation@@consumer.start() @TO@ ExpressionStatement@@MethodInvocation:consumer.start() @AT@ 3329 @LENGTH@ 16
------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.start() @AT@ 3329 @LENGTH@ 8
------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@consumer.start() @AT@ 3338 @LENGTH@ 7


INS MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @TO@ TypeDeclaration@@[public]JpaShutdownCompleteCurrentTaskOnlyTest, CamelTestSupport @AT@ 2101 @LENGTH@ 64
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 2101 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 2108 @LENGTH@ 7
---INS SimpleName@@MethodName:isUseRouteBuilder @TO@ MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 2116 @LENGTH@ 17
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 2146 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2153 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:setRequiredKeys, String[] requiredKeys,  @TO@ public, final, void, MethodName:setRequiredKeys, String[] requiredKeys,  @AT@ 3583 @LENGTH@ 129
---INS Modifier@@final @TO@ MethodDeclaration@@public, void, MethodName:setRequiredKeys, String[] requiredKeys,  @AT@ 3590 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:idGenerator.generateId() @TO@ MethodInvocation:idGenerator.generateUuid() @AT@ 2922 @LENGTH@ 32
---UPD MethodInvocation@@idGenerator.generateId() @TO@ idGenerator.generateUuid() @AT@ 2929 @LENGTH@ 24
------UPD SimpleName@@MethodName:generateId:[] @TO@ MethodName:generateUuid:[] @AT@ 2941 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:from(getFtpUrl()).to("mock:result") @TO@ MethodInvocation:from(getFtpUrl()).convertBodyTo(String.class).to("mock:result") @AT@ 2639 @LENGTH@ 36
---UPD MethodInvocation@@from(getFtpUrl()).to("mock:result") @TO@ from(getFtpUrl()).convertBodyTo(String.class).to("mock:result") @AT@ 2639 @LENGTH@ 35
------INS MethodInvocation@@MethodName:convertBodyTo:[String.class] @TO@ MethodInvocation@@from(getFtpUrl()).to("mock:result") @AT@ 2639 @LENGTH@ 45
---------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:convertBodyTo:[String.class] @AT@ 2671 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:WebXmlUtils.addServlet("requestFactory","com.google.gwt.requestfactory.server.RequestFactoryServlet","gwtRequest",null,webXmlDoc,null) @TO@ MethodInvocation:WebXmlUtils.addServlet("requestFactory","com.google.gwt.requestfactory.server.RequestFactoryServlet","/gwtRequest",null,webXmlDoc,null) @AT@ 11303 @LENGTH@ 140
---UPD MethodInvocation@@WebXmlUtils.addServlet("requestFactory","com.google.gwt.requestfactory.server.RequestFactoryServlet","gwtRequest",null,webXmlDoc,null) @TO@ WebXmlUtils.addServlet("requestFactory","com.google.gwt.requestfactory.server.RequestFactoryServlet","/gwtRequest",null,webXmlDoc,null) @AT@ 11303 @LENGTH@ 139
------UPD SimpleName@@MethodName:addServlet:["requestFactory", "com.google.gwt.requestfactory.server.RequestFactoryServlet", "gwtRequest", null, webXmlDoc, null] @TO@ MethodName:addServlet:["requestFactory", "com.google.gwt.requestfactory.server.RequestFactoryServlet", "/gwtRequest", null, webXmlDoc, null] @AT@ 11315 @LENGTH@ 127
---------UPD StringLiteral@@"gwtRequest" @TO@ "/gwtRequest" @AT@ 11406 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:template.send(testQueueEndpointA,ExchangePattern.InOnly,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader("org.apache.camel.jms",10000);
    exchange.getIn().setHeader("org.apache.camel.test.jms",20000);
    exchange.getIn().setHeader("testheader",1020);
    exchange.getIn().setHeader("anotherheader",1030);
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:testHeaderFilters, Exception,  @AT@ 2290 @LENGTH@ 458
---MOV MethodInvocation@@template.send(testQueueEndpointA,ExchangePattern.InOnly,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader("org.apache.camel.jms",10000);
    exchange.getIn().setHeader("org.apache.camel.test.jms",20000);
    exchange.getIn().setHeader("testheader",1020);
    exchange.getIn().setHeader("anotherheader",1030);
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:template.send(testQueueEndpointA,ExchangePattern.InOnly,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader("org.apache.camel.jms",10000);
    exchange.getIn().setHeader("org.apache.camel.test.jms",20000);
    exchange.getIn().setHeader("testheader",1020);
    exchange.getIn().setHeader("anotherheader",1030);
  }
}
) @AT@ 2310 @LENGTH@ 457


UPD ExpressionStatement@@MethodInvocation:clean() @TO@ MethodInvocation:deleteDirectory("target/repository") @AT@ 1508 @LENGTH@ 8
---UPD MethodInvocation@@MethodName:clean:[] @TO@ deleteDirectory("target/repository") @AT@ 1508 @LENGTH@ 7
------INS SimpleName@@MethodName:deleteDirectory:["target/repository"] @TO@ MethodInvocation@@MethodName:clean:[] @AT@ 1405 @LENGTH@ 36
---------INS StringLiteral@@"target/repository" @TO@ SimpleName@@MethodName:deleteDirectory:["target/repository"] @AT@ 1421 @LENGTH@ 19


UPD ExpressionStatement@@Assignment:context=new FileSystemXmlApplicationContext("file://" + resource.getFile().getAbsolutePath()) @TO@ Assignment:context=new FileSystemXmlApplicationContext("file:///" + resource.getFile().getAbsolutePath()) @AT@ 1793 @LENGTH@ 94
---UPD Assignment@@context=new FileSystemXmlApplicationContext("file://" + resource.getFile().getAbsolutePath()) @TO@ context=new FileSystemXmlApplicationContext("file:///" + resource.getFile().getAbsolutePath()) @AT@ 1793 @LENGTH@ 93
------UPD ClassInstanceCreation@@FileSystemXmlApplicationContext["file://" + resource.getFile().getAbsolutePath()] @TO@ FileSystemXmlApplicationContext["file:///" + resource.getFile().getAbsolutePath()] @AT@ 1803 @LENGTH@ 83
---------UPD InfixExpression@@"file://" + resource.getFile().getAbsolutePath() @TO@ "file:///" + resource.getFile().getAbsolutePath() @AT@ 1839 @LENGTH@ 46
------------UPD StringLiteral@@"file://" @TO@ "file:///" @AT@ 1839 @LENGTH@ 9


UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException(t) @TO@ ClassInstanceCreation:new IllegalStateException(t) @AT@ 5678 @LENGTH@ 30
---UPD ClassInstanceCreation@@RuntimeException[t] @TO@ IllegalStateException[t] @AT@ 5684 @LENGTH@ 23
------UPD SimpleType@@RuntimeException @TO@ IllegalStateException @AT@ 5688 @LENGTH@ 16


UPD IfStatement@@if (hadSessionAlready) {  String originalSessionId=session.getId();  if (logger.isDebugEnabled()) {    logger.debug("Invalidating session with Id '" + originalSessionId + "' "+ (migrateSessionAttributes ? "and" : "without")+ " migrating attributes.");  }  HashMap<String,Object> attributesToMigrate=createMigratedAttributeMap(session);  session.invalidate();  session=request.getSession(true);  if (logger.isDebugEnabled()) {    logger.debug("Started new session: " + session.getId());  }  if (originalSessionId.equals(session.getId())) {    logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks");  }  if (attributesToMigrate != null) {    for (    Map.Entry<String,Object> entry : attributesToMigrate.entrySet()) {      session.setAttribute(entry.getKey(),entry.getValue());    }  }} @TO@ if (hadSessionAlready && request.isRequestedSessionIdValid()) {  String originalSessionId=session.getId();  if (logger.isDebugEnabled()) {    logger.debug("Invalidating session with Id '" + originalSessionId + "' "+ (migrateSessionAttributes ? "and" : "without")+ " migrating attributes.");  }  HashMap<String,Object> attributesToMigrate=createMigratedAttributeMap(session);  session.invalidate();  session=request.getSession(true);  if (logger.isDebugEnabled()) {    logger.debug("Started new session: " + session.getId());  }  if (originalSessionId.equals(session.getId())) {    logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks");  }  if (attributesToMigrate != null) {    for (    Map.Entry<String,Object> entry : attributesToMigrate.entrySet()) {      session.setAttribute(entry.getKey(),entry.getValue());    }  }} @AT@ 3073 @LENGTH@ 1312
---DEL SimpleName@@hadSessionAlready @AT@ 3077 @LENGTH@ 17
---INS InfixExpression@@hadSessionAlready && request.isRequestedSessionIdValid() @TO@ IfStatement@@if (hadSessionAlready) {  String originalSessionId=session.getId();  if (logger.isDebugEnabled()) {    logger.debug("Invalidating session with Id '" + originalSessionId + "' "+ (migrateSessionAttributes ? "and" : "without")+ " migrating attributes.");  }  HashMap<String,Object> attributesToMigrate=createMigratedAttributeMap(session);  session.invalidate();  session=request.getSession(true);  if (logger.isDebugEnabled()) {    logger.debug("Started new session: " + session.getId());  }  if (originalSessionId.equals(session.getId())) {    logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks");  }  if (attributesToMigrate != null) {    for (    Map.Entry<String,Object> entry : attributesToMigrate.entrySet()) {      session.setAttribute(entry.getKey(),entry.getValue());    }  }} @AT@ 3311 @LENGTH@ 56
------INS SimpleName@@hadSessionAlready @TO@ InfixExpression@@hadSessionAlready && request.isRequestedSessionIdValid() @AT@ 3311 @LENGTH@ 17
------INS Operator@@&& @TO@ InfixExpression@@hadSessionAlready && request.isRequestedSessionIdValid() @AT@ 3328 @LENGTH@ 2
------INS MethodInvocation@@request.isRequestedSessionIdValid() @TO@ InfixExpression@@hadSessionAlready && request.isRequestedSessionIdValid() @AT@ 3332 @LENGTH@ 35
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.isRequestedSessionIdValid() @AT@ 3332 @LENGTH@ 7
---------INS SimpleName@@MethodName:isRequestedSessionIdValid:[] @TO@ MethodInvocation@@request.isRequestedSessionIdValid() @AT@ 3340 @LENGTH@ 27


UPD MethodDeclaration@@public, void, MethodName:setDelegate, Object delegate,  @TO@ public, final, void, MethodName:setDelegate, Object delegate,  @AT@ 2501 @LENGTH@ 486
---INS Modifier@@final @TO@ MethodDeclaration@@public, void, MethodName:setDelegate, Object delegate,  @AT@ 2508 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:exchange.getContext().getTypeConverter().convertTo(String.class,file.getBody()) @TO@ MethodInvocation:exchange.getContext().getTypeConverter().convertTo(String.class,exchange,file.getBody()) @AT@ 2280 @LENGTH@ 88
---UPD MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(String.class,file.getBody()) @TO@ exchange.getContext().getTypeConverter().convertTo(String.class,exchange,file.getBody()) @AT@ 2287 @LENGTH@ 80
------UPD SimpleName@@MethodName:convertTo:[String.class, file.getBody()] @TO@ MethodName:convertTo:[String.class, exchange, file.getBody()] @AT@ 2328 @LENGTH@ 39
---------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:convertTo:[String.class, file.getBody()] @AT@ 2352 @LENGTH@ 8


UPD IfStatement@@if (path != null) {  if (!uri.endsWith("/")) {    uri=uri + "/";  }  if (path.startsWith("/")) {    path=path.substring(1);  }  uri=uri.concat(path);} @TO@ if (path.length() > 0) {  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @AT@ 1861 @LENGTH@ 347


UPD IfStatement@@if (file.isAbsolute()) {  answer.setRelativeFilePath(file.getAbsolutePath());} else {  File path;  String endpointNormalized=FileUtil.normalizePath(endpointPath);  if (file.getPath().startsWith(endpointNormalized)) {    path=new File(ObjectHelper.after(file.getPath(),endpointNormalized + File.separator));  } else {    path=new File(file.getPath());  }  if (path.getParent() != null) {    answer.setRelativeFilePath(path.getParent() + File.separator + file.getName());  } else {    answer.setRelativeFilePath(path.getName());  }} @TO@ if (answer.isAbsolute()) {  answer.setRelativeFilePath(file.getAbsolutePath());} else {  File path;  String endpointNormalized=FileUtil.normalizePath(endpointPath);  if (file.getPath().startsWith(endpointNormalized)) {    path=new File(ObjectHelper.after(file.getPath(),endpointNormalized + File.separator));  } else {    path=new File(file.getPath());  }  if (path.getParent() != null) {    answer.setRelativeFilePath(path.getParent() + File.separator + file.getName());  } else {    answer.setRelativeFilePath(path.getName());  }} @AT@ 4001 @LENGTH@ 800
---UPD MethodInvocation@@file.isAbsolute() @TO@ answer.isAbsolute() @AT@ 4005 @LENGTH@ 17
------UPD SimpleName@@Name:file @TO@ Name:answer @AT@ 4005 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:this.ranges=ranges @TO@ Assignment:this.ranges=Arrays.asList(ranges).toArray(new Range[ranges.length]) @AT@ 1650 @LENGTH@ 21
---UPD Assignment@@this.ranges=ranges @TO@ this.ranges=Arrays.asList(ranges).toArray(new Range[ranges.length]) @AT@ 1650 @LENGTH@ 20
------DEL SimpleName@@ranges @AT@ 1664 @LENGTH@ 6
------INS MethodInvocation@@Arrays.asList(ranges).toArray(new Range[ranges.length]) @TO@ Assignment@@this.ranges=ranges @AT@ 1689 @LENGTH@ 55
---------INS MethodInvocation@@MethodName:asList:[ranges] @TO@ MethodInvocation@@Arrays.asList(ranges).toArray(new Range[ranges.length]) @AT@ 1689 @LENGTH@ 21
------------INS SimpleName@@ranges @TO@ MethodInvocation@@MethodName:asList:[ranges] @AT@ 1703 @LENGTH@ 6
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(ranges).toArray(new Range[ranges.length]) @AT@ 1689 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[new Range[ranges.length]] @TO@ MethodInvocation@@Arrays.asList(ranges).toArray(new Range[ranges.length]) @AT@ 1711 @LENGTH@ 33
------------INS ArrayCreation@@new Range[ranges.length] @TO@ SimpleName@@MethodName:toArray:[new Range[ranges.length]] @AT@ 1719 @LENGTH@ 24
---------------INS ArrayType@@Range[] @TO@ ArrayCreation@@new Range[ranges.length] @AT@ 1723 @LENGTH@ 20
------------------INS SimpleType@@Range @TO@ ArrayType@@Range[] @AT@ 1723 @LENGTH@ 5
---------------INS QualifiedName@@ranges.length @TO@ ArrayCreation@@new Range[ranges.length] @AT@ 1729 @LENGTH@ 13
------------------INS SimpleName@@ranges @TO@ QualifiedName@@ranges.length @AT@ 1729 @LENGTH@ 6
------------------INS SimpleName@@length @TO@ QualifiedName@@ranges.length @AT@ 1736 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:theInstance.q=new ReferenceQueue() @TO@ Assignment:theInstance.q=new ReferenceQueue<Object>() @AT@ 2632 @LENGTH@ 37
---UPD Assignment@@theInstance.q=new ReferenceQueue() @TO@ theInstance.q=new ReferenceQueue<Object>() @AT@ 2632 @LENGTH@ 36
------UPD ClassInstanceCreation@@ReferenceQueue[] @TO@ ReferenceQueue<Object>[] @AT@ 2648 @LENGTH@ 20
---------INS ParameterizedType@@ReferenceQueue<Object> @TO@ ClassInstanceCreation@@ReferenceQueue[] @AT@ 2652 @LENGTH@ 22
------------INS SimpleType@@ReferenceQueue @TO@ ParameterizedType@@ReferenceQueue<Object> @AT@ 2652 @LENGTH@ 14
------------INS SimpleType@@Object @TO@ ParameterizedType@@ReferenceQueue<Object> @AT@ 2667 @LENGTH@ 6
---------DEL SimpleType@@ReferenceQueue @AT@ 2652 @LENGTH@ 14


UPD MethodDeclaration@@protected, ItemReader<Foo>, MethodName:getItemReader, Exception,  @TO@ protected, AbstractPagingItemReader<Foo>, MethodName:getItemReader, Exception,  @AT@ 904 @LENGTH@ 865
---UPD ParameterizedType@@ItemReader<Foo> @TO@ AbstractPagingItemReader<Foo> @AT@ 914 @LENGTH@ 15
------UPD SimpleType@@ItemReader @TO@ AbstractPagingItemReader @AT@ 914 @LENGTH@ 10


UPD MethodDeclaration@@public, static, void, MethodName:render, StringBuilder buffer, ProcessorDefinition<?> processor,  @TO@ public, static, void, MethodName:render, StringBuilder buffer, ProcessorDefinition processor,  @AT@ 1133 @LENGTH@ 975
---UPD SingleVariableDeclaration@@ProcessorDefinition<?> processor @TO@ ProcessorDefinition processor @AT@ 1181 @LENGTH@ 32
------DEL ParameterizedType@@ProcessorDefinition<?> @AT@ 1181 @LENGTH@ 22
---------DEL SimpleType@@ProcessorDefinition @AT@ 1181 @LENGTH@ 19
---------DEL WildcardType@@? @AT@ 1201 @LENGTH@ 1
------INS SimpleType@@ProcessorDefinition @TO@ SingleVariableDeclaration@@ProcessorDefinition<?> processor @AT@ 1181 @LENGTH@ 19


INS MethodDeclaration@@private, void, MethodName:checkName, String string,  @TO@ TypeDeclaration@@[public]TarUtilsTest, TestCase @AT@ 5165 @LENGTH@ 220
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:checkName, String string,  @AT@ 5165 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:checkName, String string,  @AT@ 5173 @LENGTH@ 4
---INS SimpleName@@MethodName:checkName @TO@ MethodDeclaration@@private, void, MethodName:checkName, String string,  @AT@ 5178 @LENGTH@ 9
---INS SingleVariableDeclaration@@String string @TO@ MethodDeclaration@@private, void, MethodName:checkName, String string,  @AT@ 5188 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String string @AT@ 5188 @LENGTH@ 6
------INS SimpleName@@string @TO@ SingleVariableDeclaration@@String string @AT@ 5195 @LENGTH@ 6
---INS VariableDeclarationStatement@@byte buff[]=new byte[100]; @TO@ MethodDeclaration@@private, void, MethodName:checkName, String string,  @AT@ 5213 @LENGTH@ 28
------INS PrimitiveType@@byte @TO@ VariableDeclarationStatement@@byte buff[]=new byte[100]; @AT@ 5213 @LENGTH@ 4
------INS VariableDeclarationFragment@@buff[]=new byte[100] @TO@ VariableDeclarationStatement@@byte buff[]=new byte[100]; @AT@ 5218 @LENGTH@ 22
---------INS SimpleName@@buff @TO@ VariableDeclarationFragment@@buff[]=new byte[100] @AT@ 5218 @LENGTH@ 4
---------INS ArrayCreation@@new byte[100] @TO@ VariableDeclarationFragment@@buff[]=new byte[100] @AT@ 5227 @LENGTH@ 13
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[100] @AT@ 5231 @LENGTH@ 9
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 5231 @LENGTH@ 4
------------INS NumberLiteral@@100 @TO@ ArrayCreation@@new byte[100] @AT@ 5236 @LENGTH@ 3
---INS VariableDeclarationStatement@@int len=TarUtils.formatNameBytes(string,buff,0,buff.length); @TO@ MethodDeclaration@@private, void, MethodName:checkName, String string,  @AT@ 5250 @LENGTH@ 65
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int len=TarUtils.formatNameBytes(string,buff,0,buff.length); @AT@ 5250 @LENGTH@ 3
------INS VariableDeclarationFragment@@len=TarUtils.formatNameBytes(string,buff,0,buff.length) @TO@ VariableDeclarationStatement@@int len=TarUtils.formatNameBytes(string,buff,0,buff.length); @AT@ 5254 @LENGTH@ 60
---------INS SimpleName@@len @TO@ VariableDeclarationFragment@@len=TarUtils.formatNameBytes(string,buff,0,buff.length) @AT@ 5254 @LENGTH@ 3
---------INS MethodInvocation@@TarUtils.formatNameBytes(string,buff,0,buff.length) @TO@ VariableDeclarationFragment@@len=TarUtils.formatNameBytes(string,buff,0,buff.length) @AT@ 5260 @LENGTH@ 54
------------INS SimpleName@@Name:TarUtils @TO@ MethodInvocation@@TarUtils.formatNameBytes(string,buff,0,buff.length) @AT@ 5260 @LENGTH@ 8
------------INS SimpleName@@MethodName:formatNameBytes:[string, buff, 0, buff.length] @TO@ MethodInvocation@@TarUtils.formatNameBytes(string,buff,0,buff.length) @AT@ 5269 @LENGTH@ 45
---------------INS SimpleName@@string @TO@ SimpleName@@MethodName:formatNameBytes:[string, buff, 0, buff.length] @AT@ 5285 @LENGTH@ 6
---------------INS SimpleName@@buff @TO@ SimpleName@@MethodName:formatNameBytes:[string, buff, 0, buff.length] @AT@ 5293 @LENGTH@ 4
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:formatNameBytes:[string, buff, 0, buff.length] @AT@ 5299 @LENGTH@ 1
---------------INS QualifiedName@@buff.length @TO@ SimpleName@@MethodName:formatNameBytes:[string, buff, 0, buff.length] @AT@ 5302 @LENGTH@ 11
------------------INS SimpleName@@buff @TO@ QualifiedName@@buff.length @AT@ 5302 @LENGTH@ 4
------------------INS SimpleName@@length @TO@ QualifiedName@@buff.length @AT@ 5307 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals(string,TarUtils.parseName(buff,0,len)) @TO@ MethodDeclaration@@private, void, MethodName:checkName, String string,  @AT@ 5324 @LENGTH@ 55
------INS MethodInvocation@@assertEquals(string,TarUtils.parseName(buff,0,len)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(string,TarUtils.parseName(buff,0,len)) @AT@ 5324 @LENGTH@ 54
---------INS SimpleName@@MethodName:assertEquals:[string, TarUtils.parseName(buff,0,len)] @TO@ MethodInvocation@@assertEquals(string,TarUtils.parseName(buff,0,len)) @AT@ 5324 @LENGTH@ 54
------------INS SimpleName@@string @TO@ SimpleName@@MethodName:assertEquals:[string, TarUtils.parseName(buff,0,len)] @AT@ 5337 @LENGTH@ 6
------------INS MethodInvocation@@TarUtils.parseName(buff,0,len) @TO@ SimpleName@@MethodName:assertEquals:[string, TarUtils.parseName(buff,0,len)] @AT@ 5345 @LENGTH@ 32
---------------INS SimpleName@@Name:TarUtils @TO@ MethodInvocation@@TarUtils.parseName(buff,0,len) @AT@ 5345 @LENGTH@ 8
---------------INS SimpleName@@MethodName:parseName:[buff, 0, len] @TO@ MethodInvocation@@TarUtils.parseName(buff,0,len) @AT@ 5354 @LENGTH@ 23
------------------INS SimpleName@@buff @TO@ SimpleName@@MethodName:parseName:[buff, 0, len] @AT@ 5364 @LENGTH@ 4
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:parseName:[buff, 0, len] @AT@ 5370 @LENGTH@ 1
------------------INS SimpleName@@len @TO@ SimpleName@@MethodName:parseName:[buff, 0, len] @AT@ 5373 @LENGTH@ 3


UPD Block@@ThenBody:{  LOG.debug("Waiting for response");  boolean done=latch.await(timeout,TimeUnit.MILLISECONDS);  if (!done) {    throw new ExchangeTimedOutException(exchange,timeout);  }  ResponseHandler handler=(ResponseHandler)session.getHandler();  if (handler.getCause() != null) {    throw new CamelExchangeException("Response Handler had an exception",exchange,handler.getCause());  } else   if (!handler.isMessageReceived()) {    throw new CamelExchangeException("No response received from remote server: " + endpoint.getEndpointUri(),exchange);  } else {    if (ExchangeHelper.isOutCapable(exchange)) {      MinaPayloadHelper.setOut(exchange,handler.getMessage());    } else {      MinaPayloadHelper.setIn(exchange,handler.getMessage());    }  }} @TO@ ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Waiting for response using timeout " + timeout + " millis.");  }  boolean done=latch.await(timeout,TimeUnit.MILLISECONDS);  if (!done) {    throw new ExchangeTimedOutException(exchange,timeout);  }  ResponseHandler handler=(ResponseHandler)session.getHandler();  if (handler.getCause() != null) {    throw new CamelExchangeException("Error occurred in ResponseHandler",exchange,handler.getCause());  } else   if (!handler.isMessageReceived()) {    throw new CamelExchangeException("No response received from remote server: " + endpoint.getEndpointUri(),exchange);  } else {    if (ExchangeHelper.isOutCapable(exchange)) {      MinaPayloadHelper.setOut(exchange,handler.getMessage());    } else {      MinaPayloadHelper.setIn(exchange,handler.getMessage());    }  }} @AT@ 4254 @LENGTH@ 1196
---UPD ExpressionStatement@@MethodInvocation:LOG.debug("Waiting for response") @TO@ MethodInvocation:LOG.debug("Waiting for response using timeout " + timeout + " millis.") @AT@ 4319 @LENGTH@ 34
---INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Waiting for response using timeout " + timeout + " millis.");} @TO@ Block@@ThenBody:{  LOG.debug("Waiting for response");  boolean done=latch.await(timeout,TimeUnit.MILLISECONDS);  if (!done) {    throw new ExchangeTimedOutException(exchange,timeout);  }  ResponseHandler handler=(ResponseHandler)session.getHandler();  if (handler.getCause() != null) {    throw new CamelExchangeException("Response Handler had an exception",exchange,handler.getCause());  } else   if (!handler.isMessageReceived()) {    throw new CamelExchangeException("No response received from remote server: " + endpoint.getEndpointUri(),exchange);  } else {    if (ExchangeHelper.isOutCapable(exchange)) {      MinaPayloadHelper.setOut(exchange,handler.getMessage());    } else {      MinaPayloadHelper.setIn(exchange,handler.getMessage());    }  }} @AT@ 4579 @LENGTH@ 130
------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Waiting for response using timeout " + timeout + " millis.");} @AT@ 4583 @LENGTH@ 20
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 4583 @LENGTH@ 3
---------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 4587 @LENGTH@ 16
------INS Block@@ThenBody:{  LOG.debug("Waiting for response using timeout " + timeout + " millis.");} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Waiting for response using timeout " + timeout + " millis.");} @AT@ 4605 @LENGTH@ 104
---------MOV ExpressionStatement@@MethodInvocation:LOG.debug("Waiting for response") @TO@ Block@@ThenBody:{  LOG.debug("Waiting for response using timeout " + timeout + " millis.");} @AT@ 4319 @LENGTH@ 34
------------UPD MethodInvocation@@LOG.debug("Waiting for response") @TO@ LOG.debug("Waiting for response using timeout " + timeout + " millis.") @AT@ 4319 @LENGTH@ 33
---------------UPD SimpleName@@MethodName:debug:["Waiting for response"] @TO@ MethodName:debug:["Waiting for response using timeout " + timeout + " millis."] @AT@ 4323 @LENGTH@ 29
------------------DEL StringLiteral@@"Waiting for response" @AT@ 4329 @LENGTH@ 22
------------------INS InfixExpression@@"Waiting for response using timeout " + timeout + " millis." @TO@ SimpleName@@MethodName:debug:["Waiting for response"] @AT@ 4633 @LENGTH@ 60
---------------------INS StringLiteral@@"Waiting for response using timeout " @TO@ InfixExpression@@"Waiting for response using timeout " + timeout + " millis." @AT@ 4633 @LENGTH@ 37
---------------------INS Operator@@+ @TO@ InfixExpression@@"Waiting for response using timeout " + timeout + " millis." @AT@ 4670 @LENGTH@ 1
---------------------INS SimpleName@@timeout @TO@ InfixExpression@@"Waiting for response using timeout " + timeout + " millis." @AT@ 4673 @LENGTH@ 7
---------------------INS StringLiteral@@" millis." @TO@ InfixExpression@@"Waiting for response using timeout " + timeout + " millis." @AT@ 4683 @LENGTH@ 10
---UPD IfStatement@@if (handler.getCause() != null) {  throw new CamelExchangeException("Response Handler had an exception",exchange,handler.getCause());} else if (!handler.isMessageReceived()) {  throw new CamelExchangeException("No response received from remote server: " + endpoint.getEndpointUri(),exchange);} else {  if (ExchangeHelper.isOutCapable(exchange)) {    MinaPayloadHelper.setOut(exchange,handler.getMessage());  } else {    MinaPayloadHelper.setIn(exchange,handler.getMessage());  }} @TO@ if (handler.getCause() != null) {  throw new CamelExchangeException("Error occurred in ResponseHandler",exchange,handler.getCause());} else if (!handler.isMessageReceived()) {  throw new CamelExchangeException("No response received from remote server: " + endpoint.getEndpointUri(),exchange);} else {  if (ExchangeHelper.isOutCapable(exchange)) {    MinaPayloadHelper.setOut(exchange,handler.getMessage());  } else {    MinaPayloadHelper.setIn(exchange,handler.getMessage());  }} @AT@ 4665 @LENGTH@ 775
------UPD Block@@ThenBody:{  throw new CamelExchangeException("Response Handler had an exception",exchange,handler.getCause());} @TO@ ThenBody:{  throw new CamelExchangeException("Error occurred in ResponseHandler",exchange,handler.getCause());} @AT@ 4697 @LENGTH@ 132
---------UPD ThrowStatement@@ClassInstanceCreation:new CamelExchangeException("Response Handler had an exception",exchange,handler.getCause()) @TO@ ClassInstanceCreation:new CamelExchangeException("Error occurred in ResponseHandler",exchange,handler.getCause()) @AT@ 4715 @LENGTH@ 100
------------UPD ClassInstanceCreation@@CamelExchangeException["Response Handler had an exception", exchange, handler.getCause()] @TO@ CamelExchangeException["Error occurred in ResponseHandler", exchange, handler.getCause()] @AT@ 4721 @LENGTH@ 93
---------------UPD StringLiteral@@"Response Handler had an exception" @TO@ "Error occurred in ResponseHandler" @AT@ 4748 @LENGTH@ 35


UPD MethodDeclaration@@public, static, void, MethodName:render, StringBuilder buffer, ProcessorDefinition<?> processor,  @TO@ public, static, void, MethodName:render, StringBuilder buffer, ProcessorDefinition processor,  @AT@ 1121 @LENGTH@ 825
---UPD SingleVariableDeclaration@@ProcessorDefinition<?> processor @TO@ ProcessorDefinition processor @AT@ 1169 @LENGTH@ 32
------DEL ParameterizedType@@ProcessorDefinition<?> @AT@ 1169 @LENGTH@ 22
---------DEL SimpleType@@ProcessorDefinition @AT@ 1169 @LENGTH@ 19
---------DEL WildcardType@@? @AT@ 1189 @LENGTH@ 1
------INS SimpleType@@ProcessorDefinition @TO@ SingleVariableDeclaration@@ProcessorDefinition<?> processor @AT@ 1169 @LENGTH@ 19


UPD CatchClause@@catch (RuntimeException e) {  assertEquals("foo",e.getCause().getMessage());} @TO@ catch (Error e) {  assertEquals("foo",e.getMessage());} @AT@ 5900 @LENGTH@ 83
---UPD SingleVariableDeclaration@@RuntimeException e @TO@ Error e @AT@ 5907 @LENGTH@ 18
------UPD SimpleType@@RuntimeException @TO@ Error @AT@ 5907 @LENGTH@ 16
---UPD ExpressionStatement@@MethodInvocation:assertEquals("foo",e.getCause().getMessage()) @TO@ MethodInvocation:assertEquals("foo",e.getMessage()) @AT@ 5932 @LENGTH@ 47
------UPD MethodInvocation@@assertEquals("foo",e.getCause().getMessage()) @TO@ assertEquals("foo",e.getMessage()) @AT@ 5932 @LENGTH@ 46
---------UPD SimpleName@@MethodName:assertEquals:["foo", e.getCause().getMessage()] @TO@ MethodName:assertEquals:["foo", e.getMessage()] @AT@ 5932 @LENGTH@ 46
------------UPD MethodInvocation@@e.getCause().getMessage() @TO@ e.getMessage() @AT@ 5952 @LENGTH@ 25
---------------DEL MethodInvocation@@MethodName:getCause:[] @AT@ 5952 @LENGTH@ 12


UPD FieldDeclaration@@private, ExecutorService, [myPool=ExecutorServiceHelper.newCachedThreadPool("myPool",true)] @TO@ private, ExecutorService, [myPool=ExecutorServiceHelper.newCachedThreadPool(null,"myPool",true)] @AT@ 1223 @LENGTH@ 91
---UPD VariableDeclarationFragment@@myPool=ExecutorServiceHelper.newCachedThreadPool("myPool",true) @TO@ myPool=ExecutorServiceHelper.newCachedThreadPool(null,"myPool",true) @AT@ 1247 @LENGTH@ 66
------UPD MethodInvocation@@ExecutorServiceHelper.newCachedThreadPool("myPool",true) @TO@ ExecutorServiceHelper.newCachedThreadPool(null,"myPool",true) @AT@ 1256 @LENGTH@ 57
---------UPD SimpleName@@MethodName:newCachedThreadPool:["myPool", true] @TO@ MethodName:newCachedThreadPool:[null, "myPool", true] @AT@ 1278 @LENGTH@ 35
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:newCachedThreadPool:["myPool", true] @AT@ 1298 @LENGTH@ 4


UPD ReturnStatement@@ClassInstanceCreation:new ConsoleReader(new FileInputStream(FileDescriptor.in),new PrintWriter(new OutputStreamWriter(ansiOut,System.getProperty("jline.WindowsTerminal.output.encoding",System.getProperty("file.encoding")))),null,ansiTerminal) @TO@ ClassInstanceCreation:new ConsoleReader(new FileInputStream(FileDescriptor.in),new PrintWriter(new OutputStreamWriter(ansiOut,System.getProperty("jline.WindowsTerminal.output.encoding","Cp850"))),null,ansiTerminal) @AT@ 5374 @LENGTH@ 292
---UPD ClassInstanceCreation@@ConsoleReader[new FileInputStream(FileDescriptor.in), new PrintWriter(new OutputStreamWriter(ansiOut,System.getProperty("jline.WindowsTerminal.output.encoding",System.getProperty("file.encoding")))), null, ansiTerminal] @TO@ ConsoleReader[new FileInputStream(FileDescriptor.in), new PrintWriter(new OutputStreamWriter(ansiOut,System.getProperty("jline.WindowsTerminal.output.encoding","Cp850"))), null, ansiTerminal] @AT@ 5381 @LENGTH@ 284
------UPD ClassInstanceCreation@@PrintWriter[new OutputStreamWriter(ansiOut,System.getProperty("jline.WindowsTerminal.output.encoding",System.getProperty("file.encoding")))] @TO@ PrintWriter[new OutputStreamWriter(ansiOut,System.getProperty("jline.WindowsTerminal.output.encoding","Cp850"))] @AT@ 5454 @LENGTH@ 173
---------UPD ClassInstanceCreation@@OutputStreamWriter[ansiOut, System.getProperty("jline.WindowsTerminal.output.encoding",System.getProperty("file.encoding"))] @TO@ OutputStreamWriter[ansiOut, System.getProperty("jline.WindowsTerminal.output.encoding","Cp850")] @AT@ 5483 @LENGTH@ 143
------------UPD MethodInvocation@@System.getProperty("jline.WindowsTerminal.output.encoding",System.getProperty("file.encoding")) @TO@ System.getProperty("jline.WindowsTerminal.output.encoding","Cp850") @AT@ 5529 @LENGTH@ 96
---------------UPD SimpleName@@MethodName:getProperty:["jline.WindowsTerminal.output.encoding", System.getProperty("file.encoding")] @TO@ MethodName:getProperty:["jline.WindowsTerminal.output.encoding", "Cp850"] @AT@ 5536 @LENGTH@ 89
------------------DEL MethodInvocation@@System.getProperty("file.encoding") @AT@ 5589 @LENGTH@ 35
---------------------DEL SimpleName@@Name:System @AT@ 5589 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:getProperty:["file.encoding"] @AT@ 5596 @LENGTH@ 28
------------------MOV StringLiteral@@"file.encoding" @TO@ SimpleName@@MethodName:getProperty:["jline.WindowsTerminal.output.encoding", System.getProperty("file.encoding")] @AT@ 5608 @LENGTH@ 15


UPD ExpressionStatement@@Assignment:this.args=args @TO@ Assignment:this.args=Arrays.asList(args).toArray() @AT@ 7336 @LENGTH@ 17
---UPD Assignment@@this.args=args @TO@ this.args=Arrays.asList(args).toArray() @AT@ 7336 @LENGTH@ 16
------DEL SimpleName@@args @AT@ 7348 @LENGTH@ 4
------INS MethodInvocation@@Arrays.asList(args).toArray() @TO@ Assignment@@this.args=args @AT@ 7395 @LENGTH@ 29
---------INS MethodInvocation@@MethodName:asList:[args] @TO@ MethodInvocation@@Arrays.asList(args).toArray() @AT@ 7395 @LENGTH@ 19
------------INS SimpleName@@args @TO@ MethodInvocation@@MethodName:asList:[args] @AT@ 7409 @LENGTH@ 4
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(args).toArray() @AT@ 7395 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[] @TO@ MethodInvocation@@Arrays.asList(args).toArray() @AT@ 7415 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:result.expectedMinimumMessageCount(5) @TO@ MethodInvocation:result.expectedMinimumMessageCount(4) @AT@ 5052 @LENGTH@ 38
---UPD MethodInvocation@@result.expectedMinimumMessageCount(5) @TO@ result.expectedMinimumMessageCount(4) @AT@ 5052 @LENGTH@ 37
------UPD SimpleName@@MethodName:expectedMinimumMessageCount:[5] @TO@ MethodName:expectedMinimumMessageCount:[4] @AT@ 5059 @LENGTH@ 30
---------UPD NumberLiteral@@5 @TO@ 4 @AT@ 5087 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:startService,  @TO@ public, static, void, MethodName:startService,  @AT@ 1076 @LENGTH@ 130
---INS Modifier@@static @TO@ MethodDeclaration@@public, void, MethodName:startService,  @AT@ 1093 @LENGTH@ 6


MOV FieldDeclaration@@private, NagiosNscaStub, [nagios] @TO@ TypeDeclaration@@[public]NagiosEventNotifierTest, CamelTestSupport @AT@ 1294 @LENGTH@ 30


UPD TypeDeclaration@@[public]StateTransition, [Comparable<StateTransition>] @TO@ [public, final]StateTransition, [Comparable<StateTransition>] @AT@ 1251 @LENGTH@ 4850
---INS Modifier@@final @TO@ TypeDeclaration@@[public]StateTransition, [Comparable<StateTransition>] @AT@ 1258 @LENGTH@ 5


UPD VariableDeclarationStatement@@InputStream is=HttpConverter.toInputStream(request); @TO@ InputStream is=HttpConverter.toInputStream(request,httpMessage.getExchange()); @AT@ 12856 @LENGTH@ 54
---UPD VariableDeclarationFragment@@is=HttpConverter.toInputStream(request) @TO@ is=HttpConverter.toInputStream(request,httpMessage.getExchange()) @AT@ 12868 @LENGTH@ 41
------UPD MethodInvocation@@HttpConverter.toInputStream(request) @TO@ HttpConverter.toInputStream(request,httpMessage.getExchange()) @AT@ 12873 @LENGTH@ 36
---------UPD SimpleName@@MethodName:toInputStream:[request] @TO@ MethodName:toInputStream:[request, httpMessage.getExchange()] @AT@ 12887 @LENGTH@ 22
------------INS MethodInvocation@@httpMessage.getExchange() @TO@ SimpleName@@MethodName:toInputStream:[request] @AT@ 12910 @LENGTH@ 25
---------------INS SimpleName@@Name:httpMessage @TO@ MethodInvocation@@httpMessage.getExchange() @AT@ 12910 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getExchange:[] @TO@ MethodInvocation@@httpMessage.getExchange() @AT@ 12922 @LENGTH@ 13


UPD VariableDeclarationStatement@@String dsl="from(\"direct:start\").resequencer(header(\"seqnum\")).stream().to(\"mock:result\")"; @TO@ String dsl="from(\"direct:start\").resequence(header(\"seqnum\")).stream().to(\"mock:result\")"; @AT@ 1213 @LENGTH@ 99
---UPD VariableDeclarationFragment@@dsl="from(\"direct:start\").resequencer(header(\"seqnum\")).stream().to(\"mock:result\")" @TO@ dsl="from(\"direct:start\").resequence(header(\"seqnum\")).stream().to(\"mock:result\")" @AT@ 1220 @LENGTH@ 91
------UPD StringLiteral@@"from(\"direct:start\").resequencer(header(\"seqnum\")).stream().to(\"mock:result\")" @TO@ "from(\"direct:start\").resequence(header(\"seqnum\")).stream().to(\"mock:result\")" @AT@ 1226 @LENGTH@ 85


UPD ExpressionStatement@@MethodInvocation:from("file:target/filestress?maxMessagesPerPoll=50&readLock=none").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("file:target/filestress?maxMessagesPerPoll=50&readLock=none").routeId("foo").noAutoStartup().threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 1526 @LENGTH@ 542
---UPD MethodInvocation@@from("file:target/filestress?maxMessagesPerPoll=50&readLock=none").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @TO@ from("file:target/filestress?maxMessagesPerPoll=50&readLock=none").routeId("foo").noAutoStartup().threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 1526 @LENGTH@ 541
------INS MethodInvocation@@MethodName:noAutoStartup:[] @TO@ MethodInvocation@@from("file:target/filestress?maxMessagesPerPoll=50&readLock=none").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 1526 @LENGTH@ 97
------INS MethodInvocation@@MethodName:routeId:["foo"] @TO@ MethodInvocation@@from("file:target/filestress?maxMessagesPerPoll=50&readLock=none").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 1526 @LENGTH@ 81
---------INS StringLiteral@@"foo" @TO@ MethodInvocation@@MethodName:routeId:["foo"] @AT@ 1601 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(200) @TO@ MethodInvocation:Thread.sleep(2000) @AT@ 2647 @LENGTH@ 18
---UPD MethodInvocation@@Thread.sleep(200) @TO@ Thread.sleep(2000) @AT@ 2647 @LENGTH@ 17
------UPD SimpleName@@MethodName:sleep:[200] @TO@ MethodName:sleep:[2000] @AT@ 2654 @LENGTH@ 10
---------UPD NumberLiteral@@200 @TO@ 2000 @AT@ 2660 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(executorService,"executorService") @TO@ MethodDeclaration@@public, List<Runnable>, MethodName:shutdownNow, ExecutorService executorService,  @AT@ 13404 @LENGTH@ 57
---INS MethodInvocation@@ObjectHelper.notNull(executorService,"executorService") @TO@ ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(executorService,"executorService") @AT@ 13404 @LENGTH@ 56
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.notNull(executorService,"executorService") @AT@ 13404 @LENGTH@ 12
------INS SimpleName@@MethodName:notNull:[executorService, "executorService"] @TO@ MethodInvocation@@ObjectHelper.notNull(executorService,"executorService") @AT@ 13417 @LENGTH@ 43
---------INS SimpleName@@executorService @TO@ SimpleName@@MethodName:notNull:[executorService, "executorService"] @AT@ 13425 @LENGTH@ 15
---------INS StringLiteral@@"executorService" @TO@ SimpleName@@MethodName:notNull:[executorService, "executorService"] @AT@ 13442 @LENGTH@ 17


DEL MethodDeclaration@@private, void, MethodName:testSendALargeBatch, String endpointUri, Exception,  @AT@ 4280 @LENGTH@ 578
---DEL Modifier@@private @AT@ 4280 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 4288 @LENGTH@ 4
---DEL SimpleName@@MethodName:testSendALargeBatch @AT@ 4293 @LENGTH@ 19
---DEL SingleVariableDeclaration@@String endpointUri @AT@ 4313 @LENGTH@ 18
------DEL SimpleType@@String @AT@ 4313 @LENGTH@ 6
------DEL SimpleName@@endpointUri @AT@ 4320 @LENGTH@ 11
---DEL SimpleType@@Exception @AT@ 4340 @LENGTH@ 9
---DEL VariableDeclarationStatement@@MockEndpoint resultEndpoint=resolveMandatoryEndpoint("mock:result",MockEndpoint.class); @AT@ 4360 @LENGTH@ 90
------DEL SimpleType@@MockEndpoint @AT@ 4360 @LENGTH@ 12
------DEL VariableDeclarationFragment@@resultEndpoint=resolveMandatoryEndpoint("mock:result",MockEndpoint.class) @AT@ 4373 @LENGTH@ 76
---------DEL SimpleName@@resultEndpoint @AT@ 4373 @LENGTH@ 14
---------DEL MethodInvocation@@resolveMandatoryEndpoint("mock:result",MockEndpoint.class) @AT@ 4390 @LENGTH@ 59
------------DEL SimpleName@@MethodName:resolveMandatoryEndpoint:["mock:result", MockEndpoint.class] @AT@ 4390 @LENGTH@ 59
---------------DEL StringLiteral@@"mock:result" @AT@ 4415 @LENGTH@ 13
---------------DEL TypeLiteral@@MockEndpoint.class @AT@ 4430 @LENGTH@ 18
---DEL ExpressionStatement@@MethodInvocation:resultEndpoint.expectedMinimumMessageCount((messageCount / 5) - 1) @AT@ 4508 @LENGTH@ 67
------DEL MethodInvocation@@resultEndpoint.expectedMinimumMessageCount((messageCount / 5) - 1) @AT@ 4508 @LENGTH@ 66
---------DEL SimpleName@@Name:resultEndpoint @AT@ 4508 @LENGTH@ 14
---------DEL SimpleName@@MethodName:expectedMinimumMessageCount:[(messageCount / 5) - 1] @AT@ 4523 @LENGTH@ 51
------------DEL InfixExpression@@(messageCount / 5) - 1 @AT@ 4551 @LENGTH@ 22
---------------DEL ParenthesizedExpression@@(messageCount / 5) @AT@ 4551 @LENGTH@ 18
------------------DEL InfixExpression@@messageCount / 5 @AT@ 4552 @LENGTH@ 16
---------------------DEL SimpleName@@messageCount @AT@ 4552 @LENGTH@ 12
---------------------DEL Operator@@/ @AT@ 4564 @LENGTH@ 1
---------------------DEL NumberLiteral@@5 @AT@ 4567 @LENGTH@ 1
---------------DEL Operator@@- @AT@ 4569 @LENGTH@ 1
---------------DEL NumberLiteral@@1 @AT@ 4572 @LENGTH@ 1
---DEL ForStatement@@for (int i=1; i <= messageCount; i++) {  String body="message:" + i;  template.sendBodyAndHeader(endpointUri,body,"cheese",123);} @AT@ 4631 @LENGTH@ 167
------DEL VariableDeclarationExpression@@int i=1 @AT@ 4636 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 4636 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=1 @AT@ 4640 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 4640 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 4644 @LENGTH@ 1
------DEL InfixExpression@@i <= messageCount @AT@ 4647 @LENGTH@ 17
---------DEL SimpleName@@i @AT@ 4647 @LENGTH@ 1
---------DEL Operator@@<= @AT@ 4648 @LENGTH@ 2
---------DEL SimpleName@@messageCount @AT@ 4652 @LENGTH@ 12
------DEL PostfixExpression@@i++ @AT@ 4666 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 4666 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 4668 @LENGTH@ 2
------DEL VariableDeclarationStatement@@String body="message:" + i; @AT@ 4685 @LENGTH@ 29
---------DEL SimpleType@@String @AT@ 4685 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@body="message:" + i @AT@ 4692 @LENGTH@ 21
------------DEL SimpleName@@body @AT@ 4692 @LENGTH@ 4
------------DEL InfixExpression@@"message:" + i @AT@ 4699 @LENGTH@ 14
---------------DEL StringLiteral@@"message:" @AT@ 4699 @LENGTH@ 10
---------------DEL Operator@@+ @AT@ 4709 @LENGTH@ 1
---------------DEL SimpleName@@i @AT@ 4712 @LENGTH@ 1
------DEL ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(endpointUri,body,"cheese",123) @AT@ 4727 @LENGTH@ 61
---------DEL MethodInvocation@@template.sendBodyAndHeader(endpointUri,body,"cheese",123) @AT@ 4727 @LENGTH@ 60
------------DEL SimpleName@@Name:template @AT@ 4727 @LENGTH@ 8
------------DEL SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, "cheese", 123] @AT@ 4736 @LENGTH@ 51
---------------DEL SimpleName@@endpointUri @AT@ 4754 @LENGTH@ 11
---------------DEL SimpleName@@body @AT@ 4767 @LENGTH@ 4
---------------DEL StringLiteral@@"cheese" @AT@ 4773 @LENGTH@ 8
---------------DEL NumberLiteral@@123 @AT@ 4783 @LENGTH@ 3
---DEL ExpressionStatement@@MethodInvocation:resultEndpoint.assertIsSatisfied() @AT@ 4808 @LENGTH@ 35
------DEL MethodInvocation@@resultEndpoint.assertIsSatisfied() @AT@ 4808 @LENGTH@ 34
---------DEL SimpleName@@Name:resultEndpoint @AT@ 4808 @LENGTH@ 14
---------DEL SimpleName@@MethodName:assertIsSatisfied:[] @AT@ 4823 @LENGTH@ 19


MOV FieldDeclaration@@private, NagiosNscaStub, [nagios] @TO@ TypeDeclaration@@[public]NagiosTest, CamelTestSupport @AT@ 1366 @LENGTH@ 30


INS MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]ShutdownNotDeferTest, ContextTestSupport @AT@ 1153 @LENGTH@ 114
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1153 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1163 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1168 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1183 @LENGTH@ 9
---MOV ExpressionStatement@@MethodInvocation:deleteDirectory("target/deferred") @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1204 @LENGTH@ 35
---INS ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1247 @LENGTH@ 14
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1247 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 1253 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("Hello World") @AT@ 1429 @LENGTH@ 43
---DEL MethodInvocation@@mock.expectedBodiesReceived("Hello World") @AT@ 1429 @LENGTH@ 42
------DEL SimpleName@@Name:mock @AT@ 1429 @LENGTH@ 4
------DEL SimpleName@@MethodName:expectedBodiesReceived:["Hello World"] @AT@ 1434 @LENGTH@ 37
---------DEL StringLiteral@@"Hello World" @AT@ 1457 @LENGTH@ 13


UPD IfStatement@@if (cacheSettings.containsKey("overflowToDisk")) {  setOverflowToDisk(Boolean.valueOf((String)cacheSettings.get("overflowToDisk")));  if (cacheSettings.containsKey("diskStorePath")) {    setDiskStorePath((String)cacheSettings.get("diskStorePath"));  }} @TO@ if (cacheSettings.containsKey("overflowToDisk")) {  setOverflowToDisk(Boolean.valueOf((String)cacheSettings.get("overflowToDisk")));} @AT@ 2401 @LENGTH@ 308
---UPD Block@@ThenBody:{  setOverflowToDisk(Boolean.valueOf((String)cacheSettings.get("overflowToDisk")));  if (cacheSettings.containsKey("diskStorePath")) {    setDiskStorePath((String)cacheSettings.get("diskStorePath"));  }} @TO@ ThenBody:{  setOverflowToDisk(Boolean.valueOf((String)cacheSettings.get("overflowToDisk")));} @AT@ 2450 @LENGTH@ 259


INS VariableDeclarationStatement@@String expect="errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));onException(Exception.class).to(\"mock:invalid\");" + "from(\"direct:start\").beanRef(\"myBean\").to(\"mock:valid\")"; @TO@ MethodDeclaration@@public, void, MethodName:testBeanWithException, Exception,  @AT@ 1804 @LENGTH@ 217
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String expect="errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));onException(Exception.class).to(\"mock:invalid\");" + "from(\"direct:start\").beanRef(\"myBean\").to(\"mock:valid\")"; @AT@ 1804 @LENGTH@ 6
---INS VariableDeclarationFragment@@expect="errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));onException(Exception.class).to(\"mock:invalid\");" + "from(\"direct:start\").beanRef(\"myBean\").to(\"mock:valid\")" @TO@ VariableDeclarationStatement@@String expect="errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));onException(Exception.class).to(\"mock:invalid\");" + "from(\"direct:start\").beanRef(\"myBean\").to(\"mock:valid\")"; @AT@ 1811 @LENGTH@ 209
------INS SimpleName@@expect @TO@ VariableDeclarationFragment@@expect="errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));onException(Exception.class).to(\"mock:invalid\");" + "from(\"direct:start\").beanRef(\"myBean\").to(\"mock:valid\")" @AT@ 1811 @LENGTH@ 6
------INS InfixExpression@@"errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));onException(Exception.class).to(\"mock:invalid\");" + "from(\"direct:start\").beanRef(\"myBean\").to(\"mock:valid\")" @TO@ VariableDeclarationFragment@@expect="errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));onException(Exception.class).to(\"mock:invalid\");" + "from(\"direct:start\").beanRef(\"myBean\").to(\"mock:valid\")" @AT@ 1820 @LENGTH@ 200
---------INS StringLiteral@@"errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));onException(Exception.class).to(\"mock:invalid\");" @TO@ InfixExpression@@"errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));onException(Exception.class).to(\"mock:invalid\");" + "from(\"direct:start\").beanRef(\"myBean\").to(\"mock:valid\")" @AT@ 1820 @LENGTH@ 122
---------INS Operator@@+ @TO@ InfixExpression@@"errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));onException(Exception.class).to(\"mock:invalid\");" + "from(\"direct:start\").beanRef(\"myBean\").to(\"mock:valid\")" @AT@ 1942 @LENGTH@ 1
---------INS StringLiteral@@"from(\"direct:start\").beanRef(\"myBean\").to(\"mock:valid\")" @TO@ InfixExpression@@"errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));onException(Exception.class).to(\"mock:invalid\");" + "from(\"direct:start\").beanRef(\"myBean\").to(\"mock:valid\")" @AT@ 1957 @LENGTH@ 63


UPD MethodDeclaration@@public, static, String, MethodName:getTestMethodName,  @TO@ public, String, MethodName:getTestMethodName,  @AT@ 16791 @LENGTH@ 67
---DEL Modifier@@static @AT@ 16798 @LENGTH@ 6


UPD MethodDeclaration@@public, static, void, MethodName:render, StringBuilder buffer, ProcessorDefinition<?> processor,  @TO@ public, static, void, MethodName:render, StringBuilder buffer, ProcessorDefinition processor,  @AT@ 1200 @LENGTH@ 1416
---UPD SingleVariableDeclaration@@ProcessorDefinition<?> processor @TO@ ProcessorDefinition processor @AT@ 1248 @LENGTH@ 32
------DEL ParameterizedType@@ProcessorDefinition<?> @AT@ 1248 @LENGTH@ 22
---------DEL SimpleType@@ProcessorDefinition @AT@ 1248 @LENGTH@ 19
---------DEL WildcardType@@? @AT@ 1268 @LENGTH@ 1
------INS SimpleType@@ProcessorDefinition @TO@ SingleVariableDeclaration@@ProcessorDefinition<?> processor @AT@ 1248 @LENGTH@ 19


UPD MethodDeclaration@@protected, Class, MethodName:loadClass, String name, boolean resolve, ClassNotFoundException,  @TO@ protected, Class<?>, MethodName:loadClass, String name, boolean resolve, ClassNotFoundException,  @AT@ 1995 @LENGTH@ 833
---INS ParameterizedType@@Class<?> @TO@ MethodDeclaration@@protected, Class, MethodName:loadClass, String name, boolean resolve, ClassNotFoundException,  @AT@ 2004 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 2004 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 2010 @LENGTH@ 1
---DEL SimpleType@@Class @AT@ 2005 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @TO@ TypeDeclaration@@[public]MinaConverterTest, TestCase @AT@ 1939 @LENGTH@ 634
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @AT@ 1939 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @AT@ 1946 @LENGTH@ 4
---INS SimpleName@@MethodName:testToStringTwoTimes @TO@ MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @AT@ 1951 @LENGTH@ 20
---INS SimpleType@@UnsupportedEncodingException @TO@ MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @AT@ 1981 @LENGTH@ 28
---INS VariableDeclarationStatement@@String in="Hello World \u4f60\u597d"; @TO@ MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @AT@ 2020 @LENGTH@ 39
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String in="Hello World \u4f60\u597d"; @AT@ 2020 @LENGTH@ 6
------INS VariableDeclarationFragment@@in="Hello World \u4f60\u597d" @TO@ VariableDeclarationStatement@@String in="Hello World \u4f60\u597d"; @AT@ 2027 @LENGTH@ 31
---------INS SimpleName@@in @TO@ VariableDeclarationFragment@@in="Hello World \u4f60\u597d" @AT@ 2027 @LENGTH@ 2
---------INS StringLiteral@@"Hello World \u4f60\u597d" @TO@ VariableDeclarationFragment@@in="Hello World \u4f60\u597d" @AT@ 2032 @LENGTH@ 26
---INS VariableDeclarationStatement@@ByteBuffer bb=ByteBuffer.wrap(in.getBytes("UTF-8")); @TO@ MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @AT@ 2068 @LENGTH@ 54
------INS SimpleType@@ByteBuffer @TO@ VariableDeclarationStatement@@ByteBuffer bb=ByteBuffer.wrap(in.getBytes("UTF-8")); @AT@ 2068 @LENGTH@ 10
------INS VariableDeclarationFragment@@bb=ByteBuffer.wrap(in.getBytes("UTF-8")) @TO@ VariableDeclarationStatement@@ByteBuffer bb=ByteBuffer.wrap(in.getBytes("UTF-8")); @AT@ 2079 @LENGTH@ 42
---------INS SimpleName@@bb @TO@ VariableDeclarationFragment@@bb=ByteBuffer.wrap(in.getBytes("UTF-8")) @AT@ 2079 @LENGTH@ 2
---------INS MethodInvocation@@ByteBuffer.wrap(in.getBytes("UTF-8")) @TO@ VariableDeclarationFragment@@bb=ByteBuffer.wrap(in.getBytes("UTF-8")) @AT@ 2084 @LENGTH@ 37
------------INS SimpleName@@Name:ByteBuffer @TO@ MethodInvocation@@ByteBuffer.wrap(in.getBytes("UTF-8")) @AT@ 2084 @LENGTH@ 10
------------INS SimpleName@@MethodName:wrap:[in.getBytes("UTF-8")] @TO@ MethodInvocation@@ByteBuffer.wrap(in.getBytes("UTF-8")) @AT@ 2095 @LENGTH@ 26
---------------INS MethodInvocation@@in.getBytes("UTF-8") @TO@ SimpleName@@MethodName:wrap:[in.getBytes("UTF-8")] @AT@ 2100 @LENGTH@ 20
------------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.getBytes("UTF-8") @AT@ 2100 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getBytes:["UTF-8"] @TO@ MethodInvocation@@in.getBytes("UTF-8") @AT@ 2103 @LENGTH@ 17
---------------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:getBytes:["UTF-8"] @AT@ 2112 @LENGTH@ 7
---INS VariableDeclarationStatement@@Exchange exchange=new DefaultExchange(new DefaultCamelContext()); @TO@ MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @AT@ 2131 @LENGTH@ 67
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=new DefaultExchange(new DefaultCamelContext()); @AT@ 2131 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=new DefaultExchange(new DefaultCamelContext()) @TO@ VariableDeclarationStatement@@Exchange exchange=new DefaultExchange(new DefaultCamelContext()); @AT@ 2140 @LENGTH@ 57
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=new DefaultExchange(new DefaultCamelContext()) @AT@ 2140 @LENGTH@ 8
---------INS ClassInstanceCreation@@DefaultExchange[new DefaultCamelContext()] @TO@ VariableDeclarationFragment@@exchange=new DefaultExchange(new DefaultCamelContext()) @AT@ 2151 @LENGTH@ 46
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultExchange[new DefaultCamelContext()] @AT@ 2151 @LENGTH@ 3
------------INS SimpleType@@DefaultExchange @TO@ ClassInstanceCreation@@DefaultExchange[new DefaultCamelContext()] @AT@ 2155 @LENGTH@ 15
------------INS ClassInstanceCreation@@DefaultCamelContext[] @TO@ ClassInstanceCreation@@DefaultExchange[new DefaultCamelContext()] @AT@ 2171 @LENGTH@ 25
---------------INS New@@new @TO@ ClassInstanceCreation@@DefaultCamelContext[] @AT@ 2171 @LENGTH@ 3
---------------INS SimpleType@@DefaultCamelContext @TO@ ClassInstanceCreation@@DefaultCamelContext[] @AT@ 2175 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8") @TO@ MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @AT@ 2207 @LENGTH@ 53
------INS MethodInvocation@@exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8") @TO@ ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8") @AT@ 2207 @LENGTH@ 52
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8") @AT@ 2207 @LENGTH@ 8
---------INS SimpleName@@MethodName:setProperty:[Exchange.CHARSET_NAME, "UTF-8"] @TO@ MethodInvocation@@exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8") @AT@ 2216 @LENGTH@ 43
------------INS QualifiedName@@Exchange.CHARSET_NAME @TO@ SimpleName@@MethodName:setProperty:[Exchange.CHARSET_NAME, "UTF-8"] @AT@ 2228 @LENGTH@ 21
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.CHARSET_NAME @AT@ 2228 @LENGTH@ 8
---------------INS SimpleName@@CHARSET_NAME @TO@ QualifiedName@@Exchange.CHARSET_NAME @AT@ 2237 @LENGTH@ 12
------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:setProperty:[Exchange.CHARSET_NAME, "UTF-8"] @AT@ 2251 @LENGTH@ 7
---INS VariableDeclarationStatement@@String out=MinaConverter.toString(bb,exchange); @TO@ MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @AT@ 2270 @LENGTH@ 50
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String out=MinaConverter.toString(bb,exchange); @AT@ 2270 @LENGTH@ 6
------INS VariableDeclarationFragment@@out=MinaConverter.toString(bb,exchange) @TO@ VariableDeclarationStatement@@String out=MinaConverter.toString(bb,exchange); @AT@ 2277 @LENGTH@ 42
---------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=MinaConverter.toString(bb,exchange) @AT@ 2277 @LENGTH@ 3
---------INS MethodInvocation@@MinaConverter.toString(bb,exchange) @TO@ VariableDeclarationFragment@@out=MinaConverter.toString(bb,exchange) @AT@ 2283 @LENGTH@ 36
------------INS SimpleName@@Name:MinaConverter @TO@ MethodInvocation@@MinaConverter.toString(bb,exchange) @AT@ 2283 @LENGTH@ 13
------------INS SimpleName@@MethodName:toString:[bb, exchange] @TO@ MethodInvocation@@MinaConverter.toString(bb,exchange) @AT@ 2297 @LENGTH@ 22
---------------INS SimpleName@@bb @TO@ SimpleName@@MethodName:toString:[bb, exchange] @AT@ 2306 @LENGTH@ 2
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:toString:[bb, exchange] @AT@ 2310 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals("Hello World \u4f60\u597d",out) @TO@ MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @AT@ 2329 @LENGTH@ 46
------INS MethodInvocation@@assertEquals("Hello World \u4f60\u597d",out) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Hello World \u4f60\u597d",out) @AT@ 2329 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertEquals:["Hello World \u4f60\u597d", out] @TO@ MethodInvocation@@assertEquals("Hello World \u4f60\u597d",out) @AT@ 2329 @LENGTH@ 45
------------INS StringLiteral@@"Hello World \u4f60\u597d" @TO@ SimpleName@@MethodName:assertEquals:["Hello World \u4f60\u597d", out] @AT@ 2342 @LENGTH@ 26
------------INS SimpleName@@out @TO@ SimpleName@@MethodName:assertEquals:["Hello World \u4f60\u597d", out] @AT@ 2370 @LENGTH@ 3
---INS ExpressionStatement@@Assignment:out=MinaConverter.toString(bb,exchange) @TO@ MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @AT@ 2469 @LENGTH@ 43
------INS Assignment@@out=MinaConverter.toString(bb,exchange) @TO@ ExpressionStatement@@Assignment:out=MinaConverter.toString(bb,exchange) @AT@ 2469 @LENGTH@ 42
---------INS SimpleName@@out @TO@ Assignment@@out=MinaConverter.toString(bb,exchange) @AT@ 2469 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@out=MinaConverter.toString(bb,exchange) @AT@ 2472 @LENGTH@ 1
---------INS MethodInvocation@@MinaConverter.toString(bb,exchange) @TO@ Assignment@@out=MinaConverter.toString(bb,exchange) @AT@ 2475 @LENGTH@ 36
------------INS SimpleName@@Name:MinaConverter @TO@ MethodInvocation@@MinaConverter.toString(bb,exchange) @AT@ 2475 @LENGTH@ 13
------------INS SimpleName@@MethodName:toString:[bb, exchange] @TO@ MethodInvocation@@MinaConverter.toString(bb,exchange) @AT@ 2489 @LENGTH@ 22
---------------INS SimpleName@@bb @TO@ SimpleName@@MethodName:toString:[bb, exchange] @AT@ 2498 @LENGTH@ 2
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:toString:[bb, exchange] @AT@ 2502 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals("Hello World \u4f60\u597d",out) @TO@ MethodDeclaration@@public, void, MethodName:testToStringTwoTimes, UnsupportedEncodingException,  @AT@ 2521 @LENGTH@ 46
------INS MethodInvocation@@assertEquals("Hello World \u4f60\u597d",out) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Hello World \u4f60\u597d",out) @AT@ 2521 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertEquals:["Hello World \u4f60\u597d", out] @TO@ MethodInvocation@@assertEquals("Hello World \u4f60\u597d",out) @AT@ 2521 @LENGTH@ 45
------------INS StringLiteral@@"Hello World \u4f60\u597d" @TO@ SimpleName@@MethodName:assertEquals:["Hello World \u4f60\u597d", out] @AT@ 2534 @LENGTH@ 26
------------INS SimpleName@@out @TO@ SimpleName@@MethodName:assertEquals:["Hello World \u4f60\u597d", out] @AT@ 2562 @LENGTH@ 3


UPD VariableDeclarationStatement@@String result=controller.listForInstance(model,"foo",11L); @TO@ String result=controller.listForInstance(model,"foo",11L,null,null); @AT@ 4198 @LENGTH@ 62
---UPD VariableDeclarationFragment@@result=controller.listForInstance(model,"foo",11L) @TO@ result=controller.listForInstance(model,"foo",11L,null,null) @AT@ 4205 @LENGTH@ 54
------UPD MethodInvocation@@controller.listForInstance(model,"foo",11L) @TO@ controller.listForInstance(model,"foo",11L,null,null) @AT@ 4214 @LENGTH@ 45
---------UPD SimpleName@@MethodName:listForInstance:[model, "foo", 11L] @TO@ MethodName:listForInstance:[model, "foo", 11L, null, null] @AT@ 4225 @LENGTH@ 34
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:listForInstance:[model, "foo", 11L] @AT@ 4260 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:listForInstance:[model, "foo", 11L] @AT@ 4266 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:mock.message(0).constant("<span style=\"color:yellow;\">48</span>") @TO@ MethodInvocation:mock.message(0).body().contains("<span style=\"color:yellow;\">48</span>") @AT@ 1336 @LENGTH@ 68
---UPD MethodInvocation@@mock.message(0).constant("<span style=\"color:yellow;\">48</span>") @TO@ mock.message(0).body().contains("<span style=\"color:yellow;\">48</span>") @AT@ 1336 @LENGTH@ 67
------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@mock.message(0).constant("<span style=\"color:yellow;\">48</span>") @AT@ 1336 @LENGTH@ 22
------UPD SimpleName@@MethodName:constant:["<span style=\"color:yellow;\">48</span>"] @TO@ MethodName:contains:["<span style=\"color:yellow;\">48</span>"] @AT@ 1352 @LENGTH@ 51


INS MethodDeclaration@@public, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]MailConvertersTest, CamelTestSupport @AT@ 1326 @LENGTH@ 95
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1326 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1333 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1338 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1353 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1373 @LENGTH@ 19
------INS MethodInvocation@@Mailbox.clearAll() @TO@ ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @AT@ 1373 @LENGTH@ 18
---------INS SimpleName@@Name:Mailbox @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 1373 @LENGTH@ 7
---------INS SimpleName@@MethodName:clearAll:[] @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 1381 @LENGTH@ 10
---INS ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1401 @LENGTH@ 14
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1401 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 1407 @LENGTH@ 5


UPD FieldDeclaration@@private, UuidGenerator, [idGenerator=new UuidGenerator()] @TO@ private, UuidGenerator, [idGenerator=UuidGenerator.get()] @AT@ 1836 @LENGTH@ 56
---UPD VariableDeclarationFragment@@idGenerator=new UuidGenerator() @TO@ idGenerator=UuidGenerator.get() @AT@ 1858 @LENGTH@ 33
------DEL ClassInstanceCreation@@UuidGenerator[] @AT@ 1872 @LENGTH@ 19
---------DEL New@@new @AT@ 1872 @LENGTH@ 3
---------DEL SimpleType@@UuidGenerator @AT@ 1876 @LENGTH@ 13
------INS MethodInvocation@@UuidGenerator.get() @TO@ VariableDeclarationFragment@@idGenerator=new UuidGenerator() @AT@ 1872 @LENGTH@ 19
---------INS SimpleName@@Name:UuidGenerator @TO@ MethodInvocation@@UuidGenerator.get() @AT@ 1872 @LENGTH@ 13
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@UuidGenerator.get() @AT@ 1886 @LENGTH@ 5


UPD IfStatement@@if (b.getSymbolicName().equals(getKey())) {  return b.getBundleId();} @TO@ if (getKey().equals(b.getSymbolicName())) {  return b.getBundleId();} @AT@ 1016 @LENGTH@ 76
---UPD MethodInvocation@@b.getSymbolicName().equals(getKey()) @TO@ getKey().equals(b.getSymbolicName()) @AT@ 1020 @LENGTH@ 36
------UPD MethodInvocation@@MethodName:getSymbolicName:[] @TO@ MethodName:getKey:[] @AT@ 1020 @LENGTH@ 19
------DEL SimpleName@@Name:b @AT@ 1020 @LENGTH@ 1
------UPD SimpleName@@MethodName:equals:[getKey()] @TO@ MethodName:equals:[b.getSymbolicName()] @AT@ 1040 @LENGTH@ 16
---------UPD MethodInvocation@@MethodName:getKey:[] @TO@ b.getSymbolicName() @AT@ 1047 @LENGTH@ 8
------------INS SimpleName@@Name:b @TO@ MethodInvocation@@MethodName:getKey:[] @AT@ 1036 @LENGTH@ 1
------------INS SimpleName@@MethodName:getSymbolicName:[] @TO@ MethodInvocation@@MethodName:getKey:[] @AT@ 1038 @LENGTH@ 17


UPD VariableDeclarationStatement@@int delay=ran.nextInt(500) + 10; @TO@ int delay=ran.nextInt(250) + 10; @AT@ 1921 @LENGTH@ 34
---UPD VariableDeclarationFragment@@delay=ran.nextInt(500) + 10 @TO@ delay=ran.nextInt(250) + 10 @AT@ 1925 @LENGTH@ 29
------UPD InfixExpression@@ran.nextInt(500) + 10 @TO@ ran.nextInt(250) + 10 @AT@ 1933 @LENGTH@ 21
---------UPD MethodInvocation@@ran.nextInt(500) @TO@ ran.nextInt(250) @AT@ 1933 @LENGTH@ 16
------------UPD SimpleName@@MethodName:nextInt:[500] @TO@ MethodName:nextInt:[250] @AT@ 1937 @LENGTH@ 12
---------------UPD NumberLiteral@@500 @TO@ 250 @AT@ 1945 @LENGTH@ 3


UPD Block@@WhileBody:{  attempts++;  if (maximumFailoverAttempts > -1 && attempts > maximumFailoverAttempts) {    if (log.isDebugEnabled()) {      log.debug("Braking out of failover after " + attempts + " failover attempts");    }    break;  }  index++;  counter++;  if (index < list.size()) {    prepareExchangeForFailover(exchange);    processor=list.get(index);    processExchange(processor,exchange,attempts);  } else {    if (isRoundRobin()) {      log.debug("Failover is round robin enabled and therefore starting from the first endpoint");      index=0;      counter=0;    } else {      log.debug("Braking out of failover as we reach the end of endpoints to use for failover");      break;    }  }} @TO@ WhileBody:{  attempts++;  if (maximumFailoverAttempts > -1 && attempts > maximumFailoverAttempts) {    if (log.isDebugEnabled()) {      log.debug("Braking out of failover after " + attempts + " failover attempts");    }    break;  }  index++;  counter++;  if (index >= list.size()) {    if (isRoundRobin()) {      log.debug("Failover is round robin enabled and therefore starting from the first endpoint");      index=0;      counter=0;    } else {      log.debug("Braking out of failover as we reach the end of endpoints to use for failover");      break;    }  }  prepareExchangeForFailover(exchange);  processor=list.get(index);  processExchange(processor,exchange,attempts);} @AT@ 3786 @LENGTH@ 1161
---UPD IfStatement@@if (index < list.size()) {  prepareExchangeForFailover(exchange);  processor=list.get(index);  processExchange(processor,exchange,attempts);} else {  if (isRoundRobin()) {    log.debug("Failover is round robin enabled and therefore starting from the first endpoint");    index=0;    counter=0;  } else {    log.debug("Braking out of failover as we reach the end of endpoints to use for failover");    break;  }} @TO@ if (index >= list.size()) {  if (isRoundRobin()) {    log.debug("Failover is round robin enabled and therefore starting from the first endpoint");    index=0;    counter=0;  } else {    log.debug("Braking out of failover as we reach the end of endpoints to use for failover");    break;  }} @AT@ 4199 @LENGTH@ 738
------UPD InfixExpression@@index < list.size() @TO@ index >= list.size() @AT@ 4203 @LENGTH@ 19
---------UPD Operator@@< @TO@ >= @AT@ 4208 @LENGTH@ 1
------DEL Block@@ThenBody:{  prepareExchangeForFailover(exchange);  processor=list.get(index);  processExchange(processor,exchange,attempts);} @AT@ 4224 @LENGTH@ 247
------UPD Block@@ElseBody:{  if (isRoundRobin()) {    log.debug("Failover is round robin enabled and therefore starting from the first endpoint");    index=0;    counter=0;  } else {    log.debug("Braking out of failover as we reach the end of endpoints to use for failover");    break;  }} @TO@ ThenBody:{  if (isRoundRobin()) {    log.debug("Failover is round robin enabled and therefore starting from the first endpoint");    index=0;    counter=0;  } else {    log.debug("Braking out of failover as we reach the end of endpoints to use for failover");    break;  }} @AT@ 4477 @LENGTH@ 460
---MOV ExpressionStatement@@MethodInvocation:prepareExchangeForFailover(exchange) @TO@ Block@@WhileBody:{  attempts++;  if (maximumFailoverAttempts > -1 && attempts > maximumFailoverAttempts) {    if (log.isDebugEnabled()) {      log.debug("Braking out of failover after " + attempts + " failover attempts");    }    break;  }  index++;  counter++;  if (index < list.size()) {    prepareExchangeForFailover(exchange);    processor=list.get(index);    processExchange(processor,exchange,attempts);  } else {    if (isRoundRobin()) {      log.debug("Failover is round robin enabled and therefore starting from the first endpoint");      index=0;      counter=0;    } else {      log.debug("Braking out of failover as we reach the end of endpoints to use for failover");      break;    }  }} @AT@ 4311 @LENGTH@ 37
---MOV ExpressionStatement@@Assignment:processor=list.get(index) @TO@ Block@@WhileBody:{  attempts++;  if (maximumFailoverAttempts > -1 && attempts > maximumFailoverAttempts) {    if (log.isDebugEnabled()) {      log.debug("Braking out of failover after " + attempts + " failover attempts");    }    break;  }  index++;  counter++;  if (index < list.size()) {    prepareExchangeForFailover(exchange);    processor=list.get(index);    processExchange(processor,exchange,attempts);  } else {    if (isRoundRobin()) {      log.debug("Failover is round robin enabled and therefore starting from the first endpoint");      index=0;      counter=0;    } else {      log.debug("Braking out of failover as we reach the end of endpoints to use for failover");      break;    }  }} @AT@ 4365 @LENGTH@ 28
---MOV ExpressionStatement@@MethodInvocation:processExchange(processor,exchange,attempts) @TO@ Block@@WhileBody:{  attempts++;  if (maximumFailoverAttempts > -1 && attempts > maximumFailoverAttempts) {    if (log.isDebugEnabled()) {      log.debug("Braking out of failover after " + attempts + " failover attempts");    }    break;  }  index++;  counter++;  if (index < list.size()) {    prepareExchangeForFailover(exchange);    processor=list.get(index);    processExchange(processor,exchange,attempts);  } else {    if (isRoundRobin()) {      log.debug("Failover is round robin enabled and therefore starting from the first endpoint");      index=0;      counter=0;    } else {      log.debug("Braking out of failover as we reach the end of endpoints to use for failover");      break;    }  }} @AT@ 4410 @LENGTH@ 47


MOV FieldDeclaration@@private, String, [imagePrefix="http://camel.apache.org/images/eip/"] @TO@ TypeDeclaration@@[public]GraphSupport,  @AT@ 1709 @LENGTH@ 67


UPD FieldDeclaration@@protected, Comparator, [reverse] @TO@ protected, Comparator<File>, [reverse] @AT@ 1309 @LENGTH@ 29
---INS ParameterizedType@@Comparator<File> @TO@ FieldDeclaration@@protected, Comparator, [reverse] @AT@ 1319 @LENGTH@ 16
------INS SimpleType@@Comparator @TO@ ParameterizedType@@Comparator<File> @AT@ 1319 @LENGTH@ 10
------INS SimpleType@@File @TO@ ParameterizedType@@Comparator<File> @AT@ 1330 @LENGTH@ 4
---DEL SimpleType@@Comparator @AT@ 1319 @LENGTH@ 10


DEL FieldDeclaration@@private, Logger, [log=Logger.getLogger(getClass())] @AT@ 1541 @LENGTH@ 50
---DEL Modifier@@private @AT@ 1541 @LENGTH@ 7
---DEL SimpleType@@Logger @AT@ 1549 @LENGTH@ 6
---DEL VariableDeclarationFragment@@log=Logger.getLogger(getClass()) @AT@ 1556 @LENGTH@ 34
------DEL SimpleName@@log @AT@ 1556 @LENGTH@ 3
------DEL MethodInvocation@@Logger.getLogger(getClass()) @AT@ 1562 @LENGTH@ 28
---------DEL SimpleName@@Name:Logger @AT@ 1562 @LENGTH@ 6
---------DEL SimpleName@@MethodName:getLogger:[getClass()] @AT@ 1569 @LENGTH@ 21
------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 1579 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertTrue("Port number is not initialized in an expected range: " + port,port > 21000) @TO@ MethodInvocation:assertTrue("Port number is not initialized in an expected range: " + port,port >= 21000) @AT@ 4825 @LENGTH@ 89
---UPD MethodInvocation@@assertTrue("Port number is not initialized in an expected range: " + port,port > 21000) @TO@ assertTrue("Port number is not initialized in an expected range: " + port,port >= 21000) @AT@ 4825 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertTrue:["Port number is not initialized in an expected range: " + port, port > 21000] @TO@ MethodName:assertTrue:["Port number is not initialized in an expected range: " + port, port >= 21000] @AT@ 4825 @LENGTH@ 88
---------UPD InfixExpression@@port > 21000 @TO@ port >= 21000 @AT@ 4900 @LENGTH@ 12
------------UPD Operator@@> @TO@ >= @AT@ 4904 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:result.expectedBodiesReceivedInAnyOrder("Message 1","Message 2","Message 3","Message 4","Message 5") @TO@ MethodInvocation:result.expectedBodiesReceived(5) @AT@ 1702 @LENGTH@ 105
---UPD MethodInvocation@@result.expectedBodiesReceivedInAnyOrder("Message 1","Message 2","Message 3","Message 4","Message 5") @TO@ result.expectedBodiesReceived(5) @AT@ 1702 @LENGTH@ 104
------UPD SimpleName@@MethodName:expectedBodiesReceivedInAnyOrder:["Message 1", "Message 2", "Message 3", "Message 4", "Message 5"] @TO@ MethodName:expectedBodiesReceived:[5] @AT@ 1709 @LENGTH@ 97
---------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:expectedBodiesReceivedInAnyOrder:["Message 1", "Message 2", "Message 3", "Message 4", "Message 5"] @AT@ 1732 @LENGTH@ 1
---------DEL StringLiteral@@"Message 1" @AT@ 1742 @LENGTH@ 11
---------DEL StringLiteral@@"Message 2" @AT@ 1755 @LENGTH@ 11
---------DEL StringLiteral@@"Message 3" @AT@ 1768 @LENGTH@ 11
---------DEL StringLiteral@@"Message 4" @AT@ 1781 @LENGTH@ 11
---------DEL StringLiteral@@"Message 5" @AT@ 1794 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:listener.setStrict(true) @TO@ MethodDeclaration@@public, void, MethodName:promoteEntryStatusFound, Exception,  @AT@ 2281 @LENGTH@ 25
---INS MethodInvocation@@listener.setStrict(true) @TO@ ExpressionStatement@@MethodInvocation:listener.setStrict(true) @AT@ 2281 @LENGTH@ 24
------INS SimpleName@@Name:listener @TO@ MethodInvocation@@listener.setStrict(true) @AT@ 2281 @LENGTH@ 8
------INS SimpleName@@MethodName:setStrict:[true] @TO@ MethodInvocation@@listener.setStrict(true) @AT@ 2290 @LENGTH@ 15
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setStrict:[true] @AT@ 2300 @LENGTH@ 4


UPD VariableDeclarationStatement@@String serviceName=exchange.getIn().getHeader(SERIVCE_NAME,exchange.getContext().getName(),String.class); @TO@ String serviceName=exchange.getIn().getHeader(SERVICE_NAME,exchange.getContext().getName(),String.class); @AT@ 2118 @LENGTH@ 109
---UPD VariableDeclarationFragment@@serviceName=exchange.getIn().getHeader(SERIVCE_NAME,exchange.getContext().getName(),String.class) @TO@ serviceName=exchange.getIn().getHeader(SERVICE_NAME,exchange.getContext().getName(),String.class) @AT@ 2125 @LENGTH@ 101
------UPD MethodInvocation@@exchange.getIn().getHeader(SERIVCE_NAME,exchange.getContext().getName(),String.class) @TO@ exchange.getIn().getHeader(SERVICE_NAME,exchange.getContext().getName(),String.class) @AT@ 2139 @LENGTH@ 87
---------UPD SimpleName@@MethodName:getHeader:[SERIVCE_NAME, exchange.getContext().getName(), String.class] @TO@ MethodName:getHeader:[SERVICE_NAME, exchange.getContext().getName(), String.class] @AT@ 2156 @LENGTH@ 70
------------UPD SimpleName@@SERIVCE_NAME @TO@ SERVICE_NAME @AT@ 2166 @LENGTH@ 12


UPD VariableDeclarationStatement@@int delay=ran.nextInt(500) + 10; @TO@ int delay=ran.nextInt(250) + 10; @AT@ 1925 @LENGTH@ 34
---UPD VariableDeclarationFragment@@delay=ran.nextInt(500) + 10 @TO@ delay=ran.nextInt(250) + 10 @AT@ 1929 @LENGTH@ 29
------UPD InfixExpression@@ran.nextInt(500) + 10 @TO@ ran.nextInt(250) + 10 @AT@ 1937 @LENGTH@ 21
---------UPD MethodInvocation@@ran.nextInt(500) @TO@ ran.nextInt(250) @AT@ 1937 @LENGTH@ 16
------------UPD SimpleName@@MethodName:nextInt:[500] @TO@ MethodName:nextInt:[250] @AT@ 1941 @LENGTH@ 12
---------------UPD NumberLiteral@@500 @TO@ 250 @AT@ 1949 @LENGTH@ 3


UPD TypeDeclaration@@[private, final]RedeliveryPolicyDefinitionParser, BeanDefinitionParser @TO@ [protected]RedeliveryPolicyDefinitionParser, BeanDefinitionParser @AT@ 5305 @LENGTH@ 269
---UPD Modifier@@private @TO@ protected @AT@ 5305 @LENGTH@ 7
---DEL Modifier@@final @AT@ 5313 @LENGTH@ 5


INS MethodDeclaration@@public, voidMethodName:InvalidPayloadRuntimeException, Exchange exchange, Class<?> type, Throwable cause,  @TO@ TypeDeclaration@@[public]InvalidPayloadRuntimeException, RuntimeExchangeException @AT@ 1259 @LENGTH@ 151
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadRuntimeException, Exchange exchange, Class<?> type, Throwable cause,  @AT@ 1259 @LENGTH@ 6
---INS SimpleName@@MethodName:InvalidPayloadRuntimeException @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadRuntimeException, Exchange exchange, Class<?> type, Throwable cause,  @AT@ 1266 @LENGTH@ 30
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadRuntimeException, Exchange exchange, Class<?> type, Throwable cause,  @AT@ 1297 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1297 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1306 @LENGTH@ 8
---INS SingleVariableDeclaration@@Class<?> type @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadRuntimeException, Exchange exchange, Class<?> type, Throwable cause,  @AT@ 1316 @LENGTH@ 13
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> type @AT@ 1316 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1316 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1322 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<?> type @AT@ 1325 @LENGTH@ 4
---INS SingleVariableDeclaration@@Throwable cause @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadRuntimeException, Exchange exchange, Class<?> type, Throwable cause,  @AT@ 1331 @LENGTH@ 15
------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable cause @AT@ 1331 @LENGTH@ 9
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@Throwable cause @AT@ 1341 @LENGTH@ 5
---INS ConstructorInvocation@@this(exchange,type,exchange.getIn(),cause); @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadRuntimeException, Exchange exchange, Class<?> type, Throwable cause,  @AT@ 1358 @LENGTH@ 46
------INS SimpleName@@exchange @TO@ ConstructorInvocation@@this(exchange,type,exchange.getIn(),cause); @AT@ 1363 @LENGTH@ 8
------INS SimpleName@@type @TO@ ConstructorInvocation@@this(exchange,type,exchange.getIn(),cause); @AT@ 1373 @LENGTH@ 4
------INS MethodInvocation@@exchange.getIn() @TO@ ConstructorInvocation@@this(exchange,type,exchange.getIn(),cause); @AT@ 1379 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 1379 @LENGTH@ 8
---------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 1388 @LENGTH@ 7
------INS SimpleName@@cause @TO@ ConstructorInvocation@@this(exchange,type,exchange.getIn(),cause); @AT@ 1397 @LENGTH@ 5


UPD IfStatement@@if (t instanceof RuntimeException) {  throw (RuntimeException)t;} @TO@ if (t instanceof RuntimeException) {  throw (RuntimeException)t;} else if (t instanceof Error) {  throw (Error)t;} @AT@ 5595 @LENGTH@ 77
---INS Block@@ElseBody:if (t instanceof Error) {  throw (Error)t;} @TO@ IfStatement@@if (t instanceof RuntimeException) {  throw (RuntimeException)t;} @AT@ 5683 @LENGTH@ 55
------INS IfStatement@@if (t instanceof Error) {  throw (Error)t;} @TO@ Block@@ElseBody:if (t instanceof Error) {  throw (Error)t;} @AT@ 5683 @LENGTH@ 55
---------INS InstanceofExpression@@t instanceof Error @TO@ IfStatement@@if (t instanceof Error) {  throw (Error)t;} @AT@ 5687 @LENGTH@ 18
------------INS SimpleName@@t @TO@ InstanceofExpression@@t instanceof Error @AT@ 5687 @LENGTH@ 1
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@t instanceof Error @AT@ 5689 @LENGTH@ 10
------------INS SimpleType@@Error @TO@ InstanceofExpression@@t instanceof Error @AT@ 5700 @LENGTH@ 5
---------INS Block@@ThenBody:{  throw (Error)t;} @TO@ IfStatement@@if (t instanceof Error) {  throw (Error)t;} @AT@ 5707 @LENGTH@ 31
------------INS ThrowStatement@@CastExpression:(Error)t @TO@ Block@@ThenBody:{  throw (Error)t;} @AT@ 5715 @LENGTH@ 16
---------------INS CastExpression@@(Error)t @TO@ ThrowStatement@@CastExpression:(Error)t @AT@ 5721 @LENGTH@ 9
------------------INS SimpleType@@Error @TO@ CastExpression@@(Error)t @AT@ 5722 @LENGTH@ 5
------------------INS SimpleName@@t @TO@ CastExpression@@(Error)t @AT@ 5729 @LENGTH@ 1


MOV FieldDeclaration@@private, NagiosNscaStub, [nagios] @TO@ TypeDeclaration@@[public]NagiosConfiguraitonRefTest, CamelTestSupport @AT@ 1376 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(500) @TO@ MethodInvocation:Thread.sleep(1000) @AT@ 2054 @LENGTH@ 18
---UPD MethodInvocation@@Thread.sleep(500) @TO@ Thread.sleep(1000) @AT@ 2054 @LENGTH@ 17
------UPD SimpleName@@MethodName:sleep:[500] @TO@ MethodName:sleep:[1000] @AT@ 2061 @LENGTH@ 10
---------UPD NumberLiteral@@500 @TO@ 1000 @AT@ 2067 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong response","/test/hello",response) @TO@ MethodInvocation:assertEquals("Get a wrong response","/",response) @AT@ 1469 @LENGTH@ 62
---UPD MethodInvocation@@assertEquals("Get a wrong response","/test/hello",response) @TO@ assertEquals("Get a wrong response","/",response) @AT@ 1469 @LENGTH@ 61
------UPD SimpleName@@MethodName:assertEquals:["Get a wrong response", "/test/hello", response] @TO@ MethodName:assertEquals:["Get a wrong response", "/", response] @AT@ 1469 @LENGTH@ 61
---------UPD StringLiteral@@"/test/hello" @TO@ "/" @AT@ 1506 @LENGTH@ 13


DEL MethodDeclaration@@public, void, MethodName:testPredicate, Exception,  @AT@ 1853 @LENGTH@ 101
---DEL Modifier@@public @AT@ 1853 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1860 @LENGTH@ 4
---DEL SimpleName@@MethodName:testPredicate @AT@ 1865 @LENGTH@ 13
---DEL SimpleType@@Exception @AT@ 1888 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:testSendALargeBatch("direct:predicate") @AT@ 1908 @LENGTH@ 40
------DEL MethodInvocation@@testSendALargeBatch("direct:predicate") @AT@ 1908 @LENGTH@ 39
---------DEL SimpleName@@MethodName:testSendALargeBatch:["direct:predicate"] @AT@ 1908 @LENGTH@ 39
------------DEL StringLiteral@@"direct:predicate" @AT@ 1928 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:log.info("Testing: " + getName() + "("+ getClass().getName()+ ")") @TO@ MethodInvocation:log.info("Testing: " + getTestMethodName() + "("+ getClass().getName()+ ")") @AT@ 3039 @LENGTH@ 69
---UPD MethodInvocation@@log.info("Testing: " + getName() + "("+ getClass().getName()+ ")") @TO@ log.info("Testing: " + getTestMethodName() + "("+ getClass().getName()+ ")") @AT@ 3039 @LENGTH@ 68
------UPD SimpleName@@MethodName:info:["Testing: " + getName() + "("+ getClass().getName()+ ")"] @TO@ MethodName:info:["Testing: " + getTestMethodName() + "("+ getClass().getName()+ ")"] @AT@ 3043 @LENGTH@ 64
---------UPD InfixExpression@@"Testing: " + getName() + "("+ getClass().getName()+ ")" @TO@ "Testing: " + getTestMethodName() + "("+ getClass().getName()+ ")" @AT@ 3048 @LENGTH@ 58
------------UPD MethodInvocation@@MethodName:getName:[] @TO@ MethodName:getTestMethodName:[] @AT@ 3062 @LENGTH@ 9


UPD ReturnStatement@@ClassInstanceCreation:new User(user.getUsername(),user.getPassword(),user.isEnabled(),true,true,true,user.getAuthorities()) @TO@ ClassInstanceCreation:new User(user.getUsername(),user.getPassword(),user.isEnabled(),user.isAccountNonExpired(),user.isCredentialsNonExpired(),user.isAccountNonLocked(),user.getAuthorities()) @AT@ 4452 @LENGTH@ 131
---UPD ClassInstanceCreation@@User[user.getUsername(), user.getPassword(), user.isEnabled(), true, true, true, user.getAuthorities()] @TO@ User[user.getUsername(), user.getPassword(), user.isEnabled(), user.isAccountNonExpired(), user.isCredentialsNonExpired(), user.isAccountNonLocked(), user.getAuthorities()] @AT@ 4459 @LENGTH@ 123
------INS MethodInvocation@@user.isAccountNonExpired() @TO@ ClassInstanceCreation@@User[user.getUsername(), user.getPassword(), user.isEnabled(), true, true, true, user.getAuthorities()] @AT@ 4526 @LENGTH@ 26
---------INS SimpleName@@Name:user @TO@ MethodInvocation@@user.isAccountNonExpired() @AT@ 4526 @LENGTH@ 4
---------INS SimpleName@@MethodName:isAccountNonExpired:[] @TO@ MethodInvocation@@user.isAccountNonExpired() @AT@ 4531 @LENGTH@ 21
------DEL BooleanLiteral@@true @AT@ 4526 @LENGTH@ 4
------DEL BooleanLiteral@@true @AT@ 4532 @LENGTH@ 4
------DEL BooleanLiteral@@true @AT@ 4538 @LENGTH@ 4
------INS MethodInvocation@@user.isCredentialsNonExpired() @TO@ ClassInstanceCreation@@User[user.getUsername(), user.getPassword(), user.isEnabled(), true, true, true, user.getAuthorities()] @AT@ 4570 @LENGTH@ 30
---------INS SimpleName@@Name:user @TO@ MethodInvocation@@user.isCredentialsNonExpired() @AT@ 4570 @LENGTH@ 4
---------INS SimpleName@@MethodName:isCredentialsNonExpired:[] @TO@ MethodInvocation@@user.isCredentialsNonExpired() @AT@ 4575 @LENGTH@ 25
------INS MethodInvocation@@user.isAccountNonLocked() @TO@ ClassInstanceCreation@@User[user.getUsername(), user.getPassword(), user.isEnabled(), true, true, true, user.getAuthorities()] @AT@ 4602 @LENGTH@ 25
---------INS SimpleName@@Name:user @TO@ MethodInvocation@@user.isAccountNonLocked() @AT@ 4602 @LENGTH@ 4
---------INS SimpleName@@MethodName:isAccountNonLocked:[] @TO@ MethodInvocation@@user.isAccountNonLocked() @AT@ 4607 @LENGTH@ 20


UPD ThrowStatement@@ClassInstanceCreation:new FailedToStartRouteException(routeService.getId(),"Multiple consumers for the same endpoint is now allowed: " + endpoint) @TO@ ClassInstanceCreation:new FailedToStartRouteException(routeService.getId(),"Multiple consumers for the same endpoint is not allowed: " + endpoint) @AT@ 37939 @LENGTH@ 160
---UPD ClassInstanceCreation@@FailedToStartRouteException[routeService.getId(), "Multiple consumers for the same endpoint is now allowed: " + endpoint] @TO@ FailedToStartRouteException[routeService.getId(), "Multiple consumers for the same endpoint is not allowed: " + endpoint] @AT@ 37945 @LENGTH@ 153
------UPD InfixExpression@@"Multiple consumers for the same endpoint is now allowed: " + endpoint @TO@ "Multiple consumers for the same endpoint is not allowed: " + endpoint @AT@ 38027 @LENGTH@ 70
---------UPD StringLiteral@@"Multiple consumers for the same endpoint is now allowed: " @TO@ "Multiple consumers for the same endpoint is not allowed: " @AT@ 38027 @LENGTH@ 59


UPD ExpressionStatement@@MethodInvocation:assertTrue("Should be faster than 3000 millis, was: " + delta,delta < 3000) @TO@ MethodInvocation:assertTrue("Should be faster than 4000 millis, was: " + delta,delta < 4000) @AT@ 1762 @LENGTH@ 77
---UPD MethodInvocation@@assertTrue("Should be faster than 3000 millis, was: " + delta,delta < 3000) @TO@ assertTrue("Should be faster than 4000 millis, was: " + delta,delta < 4000) @AT@ 1762 @LENGTH@ 76
------UPD SimpleName@@MethodName:assertTrue:["Should be faster than 3000 millis, was: " + delta, delta < 3000] @TO@ MethodName:assertTrue:["Should be faster than 4000 millis, was: " + delta, delta < 4000] @AT@ 1762 @LENGTH@ 76
---------UPD InfixExpression@@"Should be faster than 3000 millis, was: " + delta @TO@ "Should be faster than 4000 millis, was: " + delta @AT@ 1773 @LENGTH@ 50
------------UPD StringLiteral@@"Should be faster than 3000 millis, was: " @TO@ "Should be faster than 4000 millis, was: " @AT@ 1773 @LENGTH@ 42
---------UPD InfixExpression@@delta < 3000 @TO@ delta < 4000 @AT@ 1825 @LENGTH@ 12
------------UPD NumberLiteral@@3000 @TO@ 4000 @AT@ 1833 @LENGTH@ 4


UPD IfStatement@@if ((node).getNamespaceURI().startsWith(SPRING_NS + "/v")) {  doc.renameNode(node,SPRING_NS,node.getNodeName());} @TO@ if (node.getNamespaceURI().startsWith(SPRING_NS + "/v")) {  doc.renameNode(node,SPRING_NS,node.getNodeName());} @AT@ 3603 @LENGTH@ 143
---UPD MethodInvocation@@(node).getNamespaceURI().startsWith(SPRING_NS + "/v") @TO@ node.getNamespaceURI().startsWith(SPRING_NS + "/v") @AT@ 3607 @LENGTH@ 53
------DEL ParenthesizedExpression@@(node) @AT@ 3607 @LENGTH@ 6
---------DEL SimpleName@@node @AT@ 3608 @LENGTH@ 4
------INS SimpleName@@Name:node @TO@ MethodInvocation@@(node).getNamespaceURI().startsWith(SPRING_NS + "/v") @AT@ 3608 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("mina:tcp://localhost:6201?textline=true&sync=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    exchange.getOut().setBody("Bye " + body);
  }
}
) @TO@ MethodInvocation:from("mina:tcp://localhost:9201?textline=true&sync=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    exchange.getOut().setBody("Bye " + body);
  }
}
) @AT@ 2201 @LENGTH@ 347
---UPD MethodInvocation@@from("mina:tcp://localhost:6201?textline=true&sync=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    exchange.getOut().setBody("Bye " + body);
  }
}
) @TO@ from("mina:tcp://localhost:9201?textline=true&sync=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    exchange.getOut().setBody("Bye " + body);
  }
}
) @AT@ 2201 @LENGTH@ 346
------UPD MethodInvocation@@MethodName:from:["mina:tcp://localhost:6201?textline=true&sync=true"] @TO@ MethodName:from:["mina:tcp://localhost:9201?textline=true&sync=true"] @AT@ 2201 @LENGTH@ 57
---------UPD StringLiteral@@"mina:tcp://localhost:6201?textline=true&sync=true" @TO@ "mina:tcp://localhost:9201?textline=true&sync=true" @AT@ 2206 @LENGTH@ 51


UPD VariableDeclarationStatement@@Map answer=new HashMap(); @TO@ Map<String,Object> answer=new HashMap<String,Object>(); @AT@ 1112 @LENGTH@ 27
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map answer=new HashMap(); @AT@ 1112 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1112 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1116 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1124 @LENGTH@ 6
---DEL SimpleType@@Map @AT@ 1112 @LENGTH@ 3
---UPD VariableDeclarationFragment@@answer=new HashMap() @TO@ answer=new HashMap<String,Object>() @AT@ 1116 @LENGTH@ 22
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 1125 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 1129 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 1145 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1145 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1153 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1161 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:writer.setTransactional(false) @TO@ MethodDeclaration@@public, void, MethodName:testWriteStringWithBogusEncoding, Exception,  @AT@ 12082 @LENGTH@ 31
---INS MethodInvocation@@writer.setTransactional(false) @TO@ ExpressionStatement@@MethodInvocation:writer.setTransactional(false) @AT@ 12082 @LENGTH@ 30
------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.setTransactional(false) @AT@ 12082 @LENGTH@ 6
------INS SimpleName@@MethodName:setTransactional:[false] @TO@ MethodInvocation@@writer.setTransactional(false) @AT@ 12089 @LENGTH@ 23
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setTransactional:[false] @AT@ 12106 @LENGTH@ 5


UPD VariableDeclarationStatement@@Map headers=new HashMap(); @TO@ Map<String,Object> headers=new HashMap<String,Object>(); @AT@ 2909 @LENGTH@ 28
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map headers=new HashMap(); @AT@ 2909 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 2909 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 2913 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 2921 @LENGTH@ 6
---DEL SimpleType@@Map @AT@ 2909 @LENGTH@ 3
---UPD VariableDeclarationFragment@@headers=new HashMap() @TO@ headers=new HashMap<String,Object>() @AT@ 2913 @LENGTH@ 23
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 2923 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 2927 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2943 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2943 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2951 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2959 @LENGTH@ 6


UPD VariableDeclarationStatement@@int delay=ran.nextInt(500) + 10; @TO@ int delay=ran.nextInt(250) + 10; @AT@ 2526 @LENGTH@ 34
---UPD VariableDeclarationFragment@@delay=ran.nextInt(500) + 10 @TO@ delay=ran.nextInt(250) + 10 @AT@ 2530 @LENGTH@ 29
------UPD InfixExpression@@ran.nextInt(500) + 10 @TO@ ran.nextInt(250) + 10 @AT@ 2538 @LENGTH@ 21
---------UPD MethodInvocation@@ran.nextInt(500) @TO@ ran.nextInt(250) @AT@ 2538 @LENGTH@ 16
------------UPD SimpleName@@MethodName:nextInt:[500] @TO@ MethodName:nextInt:[250] @AT@ 2542 @LENGTH@ 12
---------------UPD NumberLiteral@@500 @TO@ 250 @AT@ 2550 @LENGTH@ 3


INS IfStatement@@if (sessionType == null) return false; @TO@ MethodDeclaration@@public, boolean, MethodName:isStateless,  @AT@ 10440 @LENGTH@ 47
---INS InfixExpression@@sessionType == null @TO@ IfStatement@@if (sessionType == null) return false; @AT@ 10444 @LENGTH@ 19
------INS SimpleName@@sessionType @TO@ InfixExpression@@sessionType == null @AT@ 10444 @LENGTH@ 11
------INS Operator@@== @TO@ InfixExpression@@sessionType == null @AT@ 10455 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@sessionType == null @AT@ 10459 @LENGTH@ 4
---INS Block@@ThenBody:return false; @TO@ IfStatement@@if (sessionType == null) return false; @AT@ 10474 @LENGTH@ 13
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:return false; @AT@ 10474 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 10481 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:mimeMessage.setHeader("Subject",subject) @TO@ MethodInvocation:mimeMessage.setSubject(subject,IOConverter.getCharsetName(exchange)) @AT@ 3726 @LENGTH@ 42
---UPD MethodInvocation@@mimeMessage.setHeader("Subject",subject) @TO@ mimeMessage.setSubject(subject,IOConverter.getCharsetName(exchange)) @AT@ 3726 @LENGTH@ 41
------UPD SimpleName@@MethodName:setHeader:["Subject", subject] @TO@ MethodName:setSubject:[subject, IOConverter.getCharsetName(exchange)] @AT@ 3738 @LENGTH@ 29
---------DEL StringLiteral@@"Subject" @AT@ 3748 @LENGTH@ 9
---------INS MethodInvocation@@IOConverter.getCharsetName(exchange) @TO@ SimpleName@@MethodName:setHeader:["Subject", subject] @AT@ 3805 @LENGTH@ 36
------------INS SimpleName@@Name:IOConverter @TO@ MethodInvocation@@IOConverter.getCharsetName(exchange) @AT@ 3805 @LENGTH@ 11
------------INS SimpleName@@MethodName:getCharsetName:[exchange] @TO@ MethodInvocation@@IOConverter.getCharsetName(exchange) @AT@ 3817 @LENGTH@ 24
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getCharsetName:[exchange] @AT@ 3832 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testCacheProducerAcquireAndRelease, Exception,  @TO@ TypeDeclaration@@[public]DefaultProducerCacheTest, ContextTestSupport @AT@ 1597 @LENGTH@ 600
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducerAcquireAndRelease, Exception,  @AT@ 1597 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducerAcquireAndRelease, Exception,  @AT@ 1604 @LENGTH@ 4
---INS SimpleName@@MethodName:testCacheProducerAcquireAndRelease @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducerAcquireAndRelease, Exception,  @AT@ 1609 @LENGTH@ 34
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducerAcquireAndRelease, Exception,  @AT@ 1653 @LENGTH@ 9
---INS VariableDeclarationStatement@@ProducerCache cache=new ProducerCache(context); @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducerAcquireAndRelease, Exception,  @AT@ 1673 @LENGTH@ 49
------INS SimpleType@@ProducerCache @TO@ VariableDeclarationStatement@@ProducerCache cache=new ProducerCache(context); @AT@ 1673 @LENGTH@ 13
------INS VariableDeclarationFragment@@cache=new ProducerCache(context) @TO@ VariableDeclarationStatement@@ProducerCache cache=new ProducerCache(context); @AT@ 1687 @LENGTH@ 34
---------INS SimpleName@@cache @TO@ VariableDeclarationFragment@@cache=new ProducerCache(context) @AT@ 1687 @LENGTH@ 5
---------INS ClassInstanceCreation@@ProducerCache[context] @TO@ VariableDeclarationFragment@@cache=new ProducerCache(context) @AT@ 1695 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@ProducerCache[context] @AT@ 1695 @LENGTH@ 3
------------INS SimpleType@@ProducerCache @TO@ ClassInstanceCreation@@ProducerCache[context] @AT@ 1699 @LENGTH@ 13
------------INS SimpleName@@context @TO@ ClassInstanceCreation@@ProducerCache[context] @AT@ 1713 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:cache.start() @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducerAcquireAndRelease, Exception,  @AT@ 1731 @LENGTH@ 14
------INS MethodInvocation@@cache.start() @TO@ ExpressionStatement@@MethodInvocation:cache.start() @AT@ 1731 @LENGTH@ 13
---------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.start() @AT@ 1731 @LENGTH@ 5
---------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@cache.start() @AT@ 1737 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertEquals("Size should be 0",0,cache.size()) @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducerAcquireAndRelease, Exception,  @AT@ 1755 @LENGTH@ 50
------INS MethodInvocation@@assertEquals("Size should be 0",0,cache.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Size should be 0",0,cache.size()) @AT@ 1755 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertEquals:["Size should be 0", 0, cache.size()] @TO@ MethodInvocation@@assertEquals("Size should be 0",0,cache.size()) @AT@ 1755 @LENGTH@ 49
------------INS StringLiteral@@"Size should be 0" @TO@ SimpleName@@MethodName:assertEquals:["Size should be 0", 0, cache.size()] @AT@ 1768 @LENGTH@ 18
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:["Size should be 0", 0, cache.size()] @AT@ 1788 @LENGTH@ 1
------------INS MethodInvocation@@cache.size() @TO@ SimpleName@@MethodName:assertEquals:["Size should be 0", 0, cache.size()] @AT@ 1791 @LENGTH@ 12
---------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.size() @AT@ 1791 @LENGTH@ 5
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@cache.size() @AT@ 1797 @LENGTH@ 6
---INS ForStatement@@for (int i=0; i < 1003; i++) {  Endpoint e=context.getEndpoint("direct:queue:" + i);  Producer p=cache.acquireProducer(e);  cache.releaseProducer(e,p);} @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducerAcquireAndRelease, Exception,  @AT@ 1902 @LENGTH@ 201
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < 1003; i++) {  Endpoint e=context.getEndpoint("direct:queue:" + i);  Producer p=cache.acquireProducer(e);  cache.releaseProducer(e,p);} @AT@ 1907 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 1907 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 1911 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 1911 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 1915 @LENGTH@ 1
------INS InfixExpression@@i < 1003 @TO@ ForStatement@@for (int i=0; i < 1003; i++) {  Endpoint e=context.getEndpoint("direct:queue:" + i);  Producer p=cache.acquireProducer(e);  cache.releaseProducer(e,p);} @AT@ 1918 @LENGTH@ 8
---------INS SimpleName@@i @TO@ InfixExpression@@i < 1003 @AT@ 1918 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < 1003 @AT@ 1919 @LENGTH@ 1
---------INS NumberLiteral@@1003 @TO@ InfixExpression@@i < 1003 @AT@ 1922 @LENGTH@ 4
------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < 1003; i++) {  Endpoint e=context.getEndpoint("direct:queue:" + i);  Producer p=cache.acquireProducer(e);  cache.releaseProducer(e,p);} @AT@ 1928 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 1928 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 1930 @LENGTH@ 2
------INS VariableDeclarationStatement@@Endpoint e=context.getEndpoint("direct:queue:" + i); @TO@ ForStatement@@for (int i=0; i < 1003; i++) {  Endpoint e=context.getEndpoint("direct:queue:" + i);  Producer p=cache.acquireProducer(e);  cache.releaseProducer(e,p);} @AT@ 1947 @LENGTH@ 54
---------INS SimpleType@@Endpoint @TO@ VariableDeclarationStatement@@Endpoint e=context.getEndpoint("direct:queue:" + i); @AT@ 1947 @LENGTH@ 8
---------INS VariableDeclarationFragment@@e=context.getEndpoint("direct:queue:" + i) @TO@ VariableDeclarationStatement@@Endpoint e=context.getEndpoint("direct:queue:" + i); @AT@ 1956 @LENGTH@ 44
------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e=context.getEndpoint("direct:queue:" + i) @AT@ 1956 @LENGTH@ 1
------------INS MethodInvocation@@context.getEndpoint("direct:queue:" + i) @TO@ VariableDeclarationFragment@@e=context.getEndpoint("direct:queue:" + i) @AT@ 1960 @LENGTH@ 40
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getEndpoint("direct:queue:" + i) @AT@ 1960 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getEndpoint:["direct:queue:" + i] @TO@ MethodInvocation@@context.getEndpoint("direct:queue:" + i) @AT@ 1968 @LENGTH@ 32
------------------INS InfixExpression@@"direct:queue:" + i @TO@ SimpleName@@MethodName:getEndpoint:["direct:queue:" + i] @AT@ 1980 @LENGTH@ 19
---------------------INS StringLiteral@@"direct:queue:" @TO@ InfixExpression@@"direct:queue:" + i @AT@ 1980 @LENGTH@ 15
---------------------INS Operator@@+ @TO@ InfixExpression@@"direct:queue:" + i @AT@ 1995 @LENGTH@ 1
---------------------INS SimpleName@@i @TO@ InfixExpression@@"direct:queue:" + i @AT@ 1998 @LENGTH@ 1
------INS VariableDeclarationStatement@@Producer p=cache.acquireProducer(e); @TO@ ForStatement@@for (int i=0; i < 1003; i++) {  Endpoint e=context.getEndpoint("direct:queue:" + i);  Producer p=cache.acquireProducer(e);  cache.releaseProducer(e,p);} @AT@ 2014 @LENGTH@ 38
---------INS SimpleType@@Producer @TO@ VariableDeclarationStatement@@Producer p=cache.acquireProducer(e); @AT@ 2014 @LENGTH@ 8
---------INS VariableDeclarationFragment@@p=cache.acquireProducer(e) @TO@ VariableDeclarationStatement@@Producer p=cache.acquireProducer(e); @AT@ 2023 @LENGTH@ 28
------------INS SimpleName@@p @TO@ VariableDeclarationFragment@@p=cache.acquireProducer(e) @AT@ 2023 @LENGTH@ 1
------------INS MethodInvocation@@cache.acquireProducer(e) @TO@ VariableDeclarationFragment@@p=cache.acquireProducer(e) @AT@ 2027 @LENGTH@ 24
---------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.acquireProducer(e) @AT@ 2027 @LENGTH@ 5
---------------INS SimpleName@@MethodName:acquireProducer:[e] @TO@ MethodInvocation@@cache.acquireProducer(e) @AT@ 2033 @LENGTH@ 18
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:acquireProducer:[e] @AT@ 2049 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:cache.releaseProducer(e,p) @TO@ ForStatement@@for (int i=0; i < 1003; i++) {  Endpoint e=context.getEndpoint("direct:queue:" + i);  Producer p=cache.acquireProducer(e);  cache.releaseProducer(e,p);} @AT@ 2065 @LENGTH@ 28
---------INS MethodInvocation@@cache.releaseProducer(e,p) @TO@ ExpressionStatement@@MethodInvocation:cache.releaseProducer(e,p) @AT@ 2065 @LENGTH@ 27
------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.releaseProducer(e,p) @AT@ 2065 @LENGTH@ 5
------------INS SimpleName@@MethodName:releaseProducer:[e, p] @TO@ MethodInvocation@@cache.releaseProducer(e,p) @AT@ 2071 @LENGTH@ 21
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:releaseProducer:[e, p] @AT@ 2087 @LENGTH@ 1
---------------INS SimpleName@@p @TO@ SimpleName@@MethodName:releaseProducer:[e, p] @AT@ 2090 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals("Size should be 1000",1000,cache.size()) @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducerAcquireAndRelease, Exception,  @AT@ 2113 @LENGTH@ 56
------INS MethodInvocation@@assertEquals("Size should be 1000",1000,cache.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Size should be 1000",1000,cache.size()) @AT@ 2113 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertEquals:["Size should be 1000", 1000, cache.size()] @TO@ MethodInvocation@@assertEquals("Size should be 1000",1000,cache.size()) @AT@ 2113 @LENGTH@ 55
------------INS StringLiteral@@"Size should be 1000" @TO@ SimpleName@@MethodName:assertEquals:["Size should be 1000", 1000, cache.size()] @AT@ 2126 @LENGTH@ 21
------------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:assertEquals:["Size should be 1000", 1000, cache.size()] @AT@ 2149 @LENGTH@ 4
------------INS MethodInvocation@@cache.size() @TO@ SimpleName@@MethodName:assertEquals:["Size should be 1000", 1000, cache.size()] @AT@ 2155 @LENGTH@ 12
---------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.size() @AT@ 2155 @LENGTH@ 5
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@cache.size() @AT@ 2161 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:cache.stop() @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducerAcquireAndRelease, Exception,  @AT@ 2178 @LENGTH@ 13
------INS MethodInvocation@@cache.stop() @TO@ ExpressionStatement@@MethodInvocation:cache.stop() @AT@ 2178 @LENGTH@ 12
---------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.stop() @AT@ 2178 @LENGTH@ 5
---------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@cache.stop() @AT@ 2184 @LENGTH@ 6


UPD TryStatement@@try {  return this.launcher.run(job,jobParameters);} catch (JobExecutionAlreadyRunningException e) {  throw new RuntimeException(e);}catch (JobRestartException e) {  throw new RuntimeException(e);}catch (JobInstanceAlreadyCompleteException e) {  throw new RuntimeException(e);}catch (JobParametersInvalidException e) {  throw new RuntimeException(e);} @TO@ try {  return this.launcher.run(job,jobParameters);} catch (JobExecutionAlreadyRunningException e) {  throw new UnexpectedJobExecutionException("Step runner encountered exception.",e);}catch (JobRestartException e) {  throw new UnexpectedJobExecutionException("Step runner encountered exception.",e);}catch (JobInstanceAlreadyCompleteException e) {  throw new UnexpectedJobExecutionException("Step runner encountered exception.",e);}catch (JobParametersInvalidException e) {  throw new UnexpectedJobExecutionException("Step runner encountered exception.",e);} @AT@ 6052 @LENGTH@ 388
---UPD CatchClause@@catch (JobExecutionAlreadyRunningException e) {  throw new RuntimeException(e);} @TO@ catch (JobExecutionAlreadyRunningException e) {  throw new UnexpectedJobExecutionException("Step runner encountered exception.",e);} @AT@ 6113 @LENGTH@ 85
------UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ ClassInstanceCreation:new UnexpectedJobExecutionException("Step runner encountered exception.",e) @AT@ 6164 @LENGTH@ 30
---------UPD ClassInstanceCreation@@RuntimeException[e] @TO@ UnexpectedJobExecutionException["Step runner encountered exception.", e] @AT@ 6170 @LENGTH@ 23
------------UPD SimpleType@@RuntimeException @TO@ UnexpectedJobExecutionException @AT@ 6174 @LENGTH@ 16
------------INS StringLiteral@@"Step runner encountered exception." @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 6277 @LENGTH@ 36
---UPD CatchClause@@catch (JobRestartException e) {  throw new RuntimeException(e);} @TO@ catch (JobRestartException e) {  throw new UnexpectedJobExecutionException("Step runner encountered exception.",e);} @AT@ 6201 @LENGTH@ 69
------UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ ClassInstanceCreation:new UnexpectedJobExecutionException("Step runner encountered exception.",e) @AT@ 6236 @LENGTH@ 30
---------UPD ClassInstanceCreation@@RuntimeException[e] @TO@ UnexpectedJobExecutionException["Step runner encountered exception.", e] @AT@ 6242 @LENGTH@ 23
------------UPD SimpleType@@RuntimeException @TO@ UnexpectedJobExecutionException @AT@ 6246 @LENGTH@ 16
------------INS StringLiteral@@"Step runner encountered exception." @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 6402 @LENGTH@ 36
---UPD CatchClause@@catch (JobInstanceAlreadyCompleteException e) {  throw new RuntimeException(e);} @TO@ catch (JobInstanceAlreadyCompleteException e) {  throw new UnexpectedJobExecutionException("Step runner encountered exception.",e);} @AT@ 6273 @LENGTH@ 85
------UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ ClassInstanceCreation:new UnexpectedJobExecutionException("Step runner encountered exception.",e) @AT@ 6324 @LENGTH@ 30
---------UPD ClassInstanceCreation@@RuntimeException[e] @TO@ UnexpectedJobExecutionException["Step runner encountered exception.", e] @AT@ 6330 @LENGTH@ 23
------------UPD SimpleType@@RuntimeException @TO@ UnexpectedJobExecutionException @AT@ 6334 @LENGTH@ 16
------------INS StringLiteral@@"Step runner encountered exception." @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 6543 @LENGTH@ 36
---UPD CatchClause@@catch (JobParametersInvalidException e) {  throw new RuntimeException(e);} @TO@ catch (JobParametersInvalidException e) {  throw new UnexpectedJobExecutionException("Step runner encountered exception.",e);} @AT@ 6361 @LENGTH@ 79
------UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ ClassInstanceCreation:new UnexpectedJobExecutionException("Step runner encountered exception.",e) @AT@ 6406 @LENGTH@ 30
---------UPD ClassInstanceCreation@@RuntimeException[e] @TO@ UnexpectedJobExecutionException["Step runner encountered exception.", e] @AT@ 6412 @LENGTH@ 23
------------UPD SimpleType@@RuntimeException @TO@ UnexpectedJobExecutionException @AT@ 6416 @LENGTH@ 16
------------INS StringLiteral@@"Step runner encountered exception." @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 6678 @LENGTH@ 36


INS IfStatement@@if (cache != null) {  cache.reset();} @TO@ MethodDeclaration@@public, void, MethodName:readRequest, HttpServletRequest request, HttpMessage message,  @AT@ 3649 @LENGTH@ 57
---INS InfixExpression@@cache != null @TO@ IfStatement@@if (cache != null) {  cache.reset();} @AT@ 3653 @LENGTH@ 13
------INS SimpleName@@cache @TO@ InfixExpression@@cache != null @AT@ 3653 @LENGTH@ 5
------INS Operator@@!= @TO@ InfixExpression@@cache != null @AT@ 3658 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@cache != null @AT@ 3662 @LENGTH@ 4
---INS Block@@ThenBody:{  cache.reset();} @TO@ IfStatement@@if (cache != null) {  cache.reset();} @AT@ 3668 @LENGTH@ 38
------MOV ExpressionStatement@@MethodInvocation:cache.reset() @TO@ Block@@ThenBody:{  cache.reset();} @AT@ 3649 @LENGTH@ 14


UPD IfStatement@@if (executor != null) {  camelContext.getExecutorServiceStrategy().shutdownNow(executor);} @TO@ if (executor != null) {  camelContext.getExecutorServiceStrategy().shutdownNow(executor);  executor=null;} @AT@ 9320 @LENGTH@ 110
---UPD Block@@ThenBody:{  camelContext.getExecutorServiceStrategy().shutdownNow(executor);} @TO@ ThenBody:{  camelContext.getExecutorServiceStrategy().shutdownNow(executor);  executor=null;} @AT@ 9342 @LENGTH@ 88
------INS ExpressionStatement@@Assignment:executor=null @TO@ Block@@ThenBody:{  camelContext.getExecutorServiceStrategy().shutdownNow(executor);} @AT@ 9518 @LENGTH@ 16
---------INS Assignment@@executor=null @TO@ ExpressionStatement@@Assignment:executor=null @AT@ 9518 @LENGTH@ 15
------------INS SimpleName@@executor @TO@ Assignment@@executor=null @AT@ 9518 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@executor=null @AT@ 9526 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@executor=null @AT@ 9529 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:gold").expectedMessageCount((size / 2) - (size / 10)) @TO@ MethodInvocation:getMockEndpoint("mock:gold").expectedMinimumMessageCount((size / 2) - (size / 10)) @AT@ 1644 @LENGTH@ 76
---UPD MethodInvocation@@getMockEndpoint("mock:gold").expectedMessageCount((size / 2) - (size / 10)) @TO@ getMockEndpoint("mock:gold").expectedMinimumMessageCount((size / 2) - (size / 10)) @AT@ 1644 @LENGTH@ 75
------UPD SimpleName@@MethodName:expectedMessageCount:[(size / 2) - (size / 10)] @TO@ MethodName:expectedMinimumMessageCount:[(size / 2) - (size / 10)] @AT@ 1673 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(500) @TO@ MethodInvocation:Thread.sleep(1000) @AT@ 2259 @LENGTH@ 18
---UPD MethodInvocation@@Thread.sleep(500) @TO@ Thread.sleep(1000) @AT@ 2259 @LENGTH@ 17
------UPD SimpleName@@MethodName:sleep:[500] @TO@ MethodName:sleep:[1000] @AT@ 2266 @LENGTH@ 10
---------UPD NumberLiteral@@500 @TO@ 1000 @AT@ 2272 @LENGTH@ 3


UPD MethodDeclaration@@public, static, void, MethodName:render, StringBuilder buffer, ProcessorDefinition<?> processor,  @TO@ public, static, void, MethodName:render, StringBuilder buffer, ProcessorDefinition processor,  @AT@ 1205 @LENGTH@ 2262
---UPD SingleVariableDeclaration@@ProcessorDefinition<?> processor @TO@ ProcessorDefinition processor @AT@ 1253 @LENGTH@ 32
------DEL ParameterizedType@@ProcessorDefinition<?> @AT@ 1253 @LENGTH@ 22
---------DEL SimpleType@@ProcessorDefinition @AT@ 1253 @LENGTH@ 19
---------DEL WildcardType@@? @AT@ 1273 @LENGTH@ 1
------INS SimpleType@@ProcessorDefinition @TO@ SingleVariableDeclaration@@ProcessorDefinition<?> processor @AT@ 1253 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertTrue(e.getMessage().endsWith("Multiple consumers for the same endpoint is now allowed: Endpoint[MyEndpoint]")) @TO@ MethodInvocation:assertTrue(e.getMessage().endsWith("Multiple consumers for the same endpoint is not allowed: Endpoint[MyEndpoint]")) @AT@ 1881 @LENGTH@ 117
---UPD MethodInvocation@@assertTrue(e.getMessage().endsWith("Multiple consumers for the same endpoint is now allowed: Endpoint[MyEndpoint]")) @TO@ assertTrue(e.getMessage().endsWith("Multiple consumers for the same endpoint is not allowed: Endpoint[MyEndpoint]")) @AT@ 1881 @LENGTH@ 116
------UPD SimpleName@@MethodName:assertTrue:[e.getMessage().endsWith("Multiple consumers for the same endpoint is now allowed: Endpoint[MyEndpoint]")] @TO@ MethodName:assertTrue:[e.getMessage().endsWith("Multiple consumers for the same endpoint is not allowed: Endpoint[MyEndpoint]")] @AT@ 1881 @LENGTH@ 116
---------UPD MethodInvocation@@e.getMessage().endsWith("Multiple consumers for the same endpoint is now allowed: Endpoint[MyEndpoint]") @TO@ e.getMessage().endsWith("Multiple consumers for the same endpoint is not allowed: Endpoint[MyEndpoint]") @AT@ 1892 @LENGTH@ 104
------------UPD SimpleName@@MethodName:endsWith:["Multiple consumers for the same endpoint is now allowed: Endpoint[MyEndpoint]"] @TO@ MethodName:endsWith:["Multiple consumers for the same endpoint is not allowed: Endpoint[MyEndpoint]"] @AT@ 1907 @LENGTH@ 89
---------------UPD StringLiteral@@"Multiple consumers for the same endpoint is now allowed: Endpoint[MyEndpoint]" @TO@ "Multiple consumers for the same endpoint is not allowed: Endpoint[MyEndpoint]" @AT@ 1916 @LENGTH@ 79


UPD ExpressionStatement@@MethodInvocation:from("file:target/filestress?maxMessagesPerPoll=50").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(50) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("file:target/filestress?maxMessagesPerPoll=50").routeId("foo").noAutoStartup().threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(50) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 2188 @LENGTH@ 527
---UPD MethodInvocation@@from("file:target/filestress?maxMessagesPerPoll=50").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(50) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @TO@ from("file:target/filestress?maxMessagesPerPoll=50").routeId("foo").noAutoStartup().threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(50) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 2188 @LENGTH@ 526
------INS MethodInvocation@@MethodName:noAutoStartup:[] @TO@ MethodInvocation@@from("file:target/filestress?maxMessagesPerPoll=50").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(50) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 2284 @LENGTH@ 83
------INS MethodInvocation@@MethodName:routeId:["foo"] @TO@ MethodInvocation@@from("file:target/filestress?maxMessagesPerPoll=50").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(50) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 2284 @LENGTH@ 67
---------INS StringLiteral@@"foo" @TO@ MethodInvocation@@MethodName:routeId:["foo"] @AT@ 2345 @LENGTH@ 5


UPD Block@@ElseBody:if (endpoint.getFileExist() == GenericFileExist.Override) {  if (log.isTraceEnabled()) {    log.trace("Deleting existing file: " + tempTarget);  }  if (!operations.deleteFile(target)) {    throw new GenericFileOperationFailedException("Cannot delete file: " + target);  }} @TO@ ElseBody:if (endpoint.getFileExist() == GenericFileExist.Override) {  if (log.isTraceEnabled()) {    log.trace("Deleting existing file: " + target);  }  if (!operations.deleteFile(target)) {    throw new GenericFileOperationFailedException("Cannot delete file: " + target);  }} @AT@ 4077 @LENGTH@ 639
---UPD IfStatement@@if (endpoint.getFileExist() == GenericFileExist.Override) {  if (log.isTraceEnabled()) {    log.trace("Deleting existing file: " + tempTarget);  }  if (!operations.deleteFile(target)) {    throw new GenericFileOperationFailedException("Cannot delete file: " + target);  }} @TO@ if (endpoint.getFileExist() == GenericFileExist.Override) {  if (log.isTraceEnabled()) {    log.trace("Deleting existing file: " + target);  }  if (!operations.deleteFile(target)) {    throw new GenericFileOperationFailedException("Cannot delete file: " + target);  }} @AT@ 4077 @LENGTH@ 639
------UPD Block@@ThenBody:{  if (log.isTraceEnabled()) {    log.trace("Deleting existing file: " + tempTarget);  }  if (!operations.deleteFile(target)) {    throw new GenericFileOperationFailedException("Cannot delete file: " + target);  }} @TO@ ThenBody:{  if (log.isTraceEnabled()) {    log.trace("Deleting existing file: " + target);  }  if (!operations.deleteFile(target)) {    throw new GenericFileOperationFailedException("Cannot delete file: " + target);  }} @AT@ 4135 @LENGTH@ 581
---------UPD IfStatement@@if (log.isTraceEnabled()) {  log.trace("Deleting existing file: " + tempTarget);} @TO@ if (log.isTraceEnabled()) {  log.trace("Deleting existing file: " + target);} @AT@ 4364 @LENGTH@ 133
------------UPD Block@@ThenBody:{  log.trace("Deleting existing file: " + tempTarget);} @TO@ ThenBody:{  log.trace("Deleting existing file: " + target);} @AT@ 4390 @LENGTH@ 107
---------------UPD ExpressionStatement@@MethodInvocation:log.trace("Deleting existing file: " + tempTarget) @TO@ MethodInvocation:log.trace("Deleting existing file: " + target) @AT@ 4420 @LENGTH@ 51
------------------UPD MethodInvocation@@log.trace("Deleting existing file: " + tempTarget) @TO@ log.trace("Deleting existing file: " + target) @AT@ 4420 @LENGTH@ 50
---------------------UPD SimpleName@@MethodName:trace:["Deleting existing file: " + tempTarget] @TO@ MethodName:trace:["Deleting existing file: " + target] @AT@ 4424 @LENGTH@ 46
------------------------UPD InfixExpression@@"Deleting existing file: " + tempTarget @TO@ "Deleting existing file: " + target @AT@ 4430 @LENGTH@ 39
---------------------------UPD SimpleName@@tempTarget @TO@ target @AT@ 4459 @LENGTH@ 10
---UPD IfStatement@@if (endpoint.getFileExist() == GenericFileExist.Override) {  if (log.isTraceEnabled()) {    log.trace("Deleting existing file: " + tempTarget);  }  if (!operations.deleteFile(target)) {    throw new GenericFileOperationFailedException("Cannot delete file: " + target);  }} @TO@ if (endpoint.getFileExist() == GenericFileExist.Override) {  if (log.isTraceEnabled()) {    log.trace("Deleting existing file: " + target);  }  if (!operations.deleteFile(target)) {    throw new GenericFileOperationFailedException("Cannot delete file: " + target);  }} @AT@ 4077 @LENGTH@ 639
------UPD Block@@ThenBody:{  if (log.isTraceEnabled()) {    log.trace("Deleting existing file: " + tempTarget);  }  if (!operations.deleteFile(target)) {    throw new GenericFileOperationFailedException("Cannot delete file: " + target);  }} @TO@ ThenBody:{  if (log.isTraceEnabled()) {    log.trace("Deleting existing file: " + target);  }  if (!operations.deleteFile(target)) {    throw new GenericFileOperationFailedException("Cannot delete file: " + target);  }} @AT@ 4135 @LENGTH@ 581
---------UPD IfStatement@@if (log.isTraceEnabled()) {  log.trace("Deleting existing file: " + tempTarget);} @TO@ if (log.isTraceEnabled()) {  log.trace("Deleting existing file: " + target);} @AT@ 4364 @LENGTH@ 133
------------UPD Block@@ThenBody:{  log.trace("Deleting existing file: " + tempTarget);} @TO@ ThenBody:{  log.trace("Deleting existing file: " + target);} @AT@ 4390 @LENGTH@ 107
---------------UPD ExpressionStatement@@MethodInvocation:log.trace("Deleting existing file: " + tempTarget) @TO@ MethodInvocation:log.trace("Deleting existing file: " + target) @AT@ 4420 @LENGTH@ 51
------------------UPD MethodInvocation@@log.trace("Deleting existing file: " + tempTarget) @TO@ log.trace("Deleting existing file: " + target) @AT@ 4420 @LENGTH@ 50
---------------------UPD SimpleName@@MethodName:trace:["Deleting existing file: " + tempTarget] @TO@ MethodName:trace:["Deleting existing file: " + target] @AT@ 4424 @LENGTH@ 46
------------------------UPD InfixExpression@@"Deleting existing file: " + tempTarget @TO@ "Deleting existing file: " + target @AT@ 4430 @LENGTH@ 39
---------------------------UPD SimpleName@@tempTarget @TO@ target @AT@ 4459 @LENGTH@ 10


UPD TryStatement@@try {  context.start();  fail("Should throw exception");} catch (FailedToCreateRouteException e) {  ResolveEndpointFailedException cause=assertIsInstanceOf(ResolveEndpointFailedException.class,e.getCause());  IllegalArgumentException iae=assertIsInstanceOf(IllegalArgumentException.class,cause.getCause());  assertEquals("PropertiesComponent with name properties must be defined in CamelContext to support property placeholders in endpoint URIs",iae.getMessage());} @TO@ try {  context.addRoutes(new RouteBuilder(){    @Override public void configure() throws Exception {      from("#{cool.start}").to("log:#{cool.start}?showBodyType=false&showExchangeId=#{cool.showid}").to("mock:#{cool.result}");    }  });  context.start();  fail("Should throw exception");} catch (FailedToCreateRouteException e) {  ResolveEndpointFailedException cause=assertIsInstanceOf(ResolveEndpointFailedException.class,e.getCause());  IllegalArgumentException iae=assertIsInstanceOf(IllegalArgumentException.class,cause.getCause());  assertEquals("PropertiesComponent with name properties must be defined in CamelContext to support property placeholders in endpoint URIs",iae.getMessage());} @AT@ 2822 @LENGTH@ 545
---MOV ExpressionStatement@@MethodInvocation:context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("#{cool.start}").to("log:#{cool.start}?showBodyType=false&showExchangeId=#{cool.showid}").to("mock:#{cool.result}");
  }
}
) @TO@ TryStatement@@try {  context.start();  fail("Should throw exception");} catch (FailedToCreateRouteException e) {  ResolveEndpointFailedException cause=assertIsInstanceOf(ResolveEndpointFailedException.class,e.getCause());  IllegalArgumentException iae=assertIsInstanceOf(IllegalArgumentException.class,cause.getCause());  assertEquals("PropertiesComponent with name properties must be defined in CamelContext to support property placeholders in endpoint URIs",iae.getMessage());} @AT@ 2492 @LENGTH@ 321


UPD ExpressionStatement@@MethodInvocation:result.add(new ProcessorExchangePair(getProcessors().iterator().next(),newExchange)) @TO@ MethodInvocation:result.add(createProcessorExchangePair(getProcessors().iterator().next(),newExchange)) @AT@ 5259 @LENGTH@ 86
---UPD MethodInvocation@@result.add(new ProcessorExchangePair(getProcessors().iterator().next(),newExchange)) @TO@ result.add(createProcessorExchangePair(getProcessors().iterator().next(),newExchange)) @AT@ 5259 @LENGTH@ 85
------UPD SimpleName@@MethodName:add:[new ProcessorExchangePair(getProcessors().iterator().next(),newExchange)] @TO@ MethodName:add:[createProcessorExchangePair(getProcessors().iterator().next(),newExchange)] @AT@ 5266 @LENGTH@ 78
---------DEL ClassInstanceCreation@@ProcessorExchangePair[getProcessors().iterator().next(), newExchange] @AT@ 5270 @LENGTH@ 73
------------DEL New@@new @AT@ 5270 @LENGTH@ 3
------------DEL SimpleType@@ProcessorExchangePair @AT@ 5274 @LENGTH@ 21
------------DEL MethodInvocation@@getProcessors().iterator().next() @AT@ 5296 @LENGTH@ 33
------------DEL SimpleName@@newExchange @AT@ 5331 @LENGTH@ 11
---------INS MethodInvocation@@createProcessorExchangePair(getProcessors().iterator().next(),newExchange) @TO@ SimpleName@@MethodName:add:[new ProcessorExchangePair(getProcessors().iterator().next(),newExchange)] @AT@ 5272 @LENGTH@ 75
------------INS SimpleName@@MethodName:createProcessorExchangePair:[getProcessors().iterator().next(), newExchange] @TO@ MethodInvocation@@createProcessorExchangePair(getProcessors().iterator().next(),newExchange) @AT@ 5272 @LENGTH@ 75
---------------INS MethodInvocation@@getProcessors().iterator().next() @TO@ SimpleName@@MethodName:createProcessorExchangePair:[getProcessors().iterator().next(), newExchange] @AT@ 5300 @LENGTH@ 33
------------------MOV MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@getProcessors().iterator().next() @AT@ 5296 @LENGTH@ 26
------------------MOV MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@getProcessors().iterator().next() @AT@ 5296 @LENGTH@ 26
------------------MOV MethodInvocation@@MethodName:getProcessors:[] @TO@ MethodInvocation@@getProcessors().iterator().next() @AT@ 5296 @LENGTH@ 15
------------------MOV MethodInvocation@@MethodName:getProcessors:[] @TO@ MethodInvocation@@getProcessors().iterator().next() @AT@ 5296 @LENGTH@ 15
------------------MOV SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@getProcessors().iterator().next() @AT@ 5323 @LENGTH@ 6
---------------INS SimpleName@@newExchange @TO@ SimpleName@@MethodName:createProcessorExchangePair:[getProcessors().iterator().next(), newExchange] @AT@ 5335 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:clean() @TO@ MethodInvocation:deleteDirectory("target/repository") @AT@ 1497 @LENGTH@ 8
---UPD MethodInvocation@@MethodName:clean:[] @TO@ deleteDirectory("target/repository") @AT@ 1497 @LENGTH@ 7
------INS SimpleName@@MethodName:deleteDirectory:["target/repository"] @TO@ MethodInvocation@@MethodName:clean:[] @AT@ 1394 @LENGTH@ 36
---------INS StringLiteral@@"target/repository" @TO@ SimpleName@@MethodName:deleteDirectory:["target/repository"] @AT@ 1410 @LENGTH@ 19


MOV IfStatement@@if (cacheSettings.containsKey("diskStorePath")) {  setDiskStorePath((String)cacheSettings.get("diskStorePath"));} @TO@ MethodDeclaration@@public, void, MethodName:parseURI, URI uri, Exception,  @AT@ 2558 @LENGTH@ 141


INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodDeclaration@@public, void, MethodName:testHawtDBAggregateNotLost, Exception,  @AT@ 2136 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 2136 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 2136 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 2143 @LENGTH@ 11
---------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 2149 @LENGTH@ 4


UPD Block@@ElseBody:if (exchangeState == HttpExchange.STATUS_EXCEPTED) {  throw new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange);} @TO@ ElseBody:{  if (exchange.getException() != null) {    throw exchange.getException();  } else {    exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange));  }} @AT@ 4350 @LENGTH@ 208
---UPD IfStatement@@if (exchangeState == HttpExchange.STATUS_EXCEPTED) {  throw new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange);} @TO@ if (exchange.getException() != null) {  throw exchange.getException();} else {  exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange));} @AT@ 4350 @LENGTH@ 208
------DEL InfixExpression@@exchangeState == HttpExchange.STATUS_EXCEPTED @AT@ 4354 @LENGTH@ 45
---------DEL SimpleName@@exchangeState @AT@ 4354 @LENGTH@ 13
---------DEL QualifiedName@@HttpExchange.STATUS_EXCEPTED @AT@ 4371 @LENGTH@ 28
------------DEL SimpleName@@HttpExchange @AT@ 4371 @LENGTH@ 12
------------DEL SimpleName@@STATUS_EXCEPTED @AT@ 4384 @LENGTH@ 15
------UPD Block@@ThenBody:{  throw new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange);} @TO@ ElseBody:{  exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange));} @AT@ 4401 @LENGTH@ 157
---------DEL ThrowStatement@@ClassInstanceCreation:new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange) @AT@ 4455 @LENGTH@ 93
---------INS ExpressionStatement@@MethodInvocation:exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)) @TO@ Block@@ThenBody:{  throw new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange);} @AT@ 4527 @LENGTH@ 110
------------INS MethodInvocation@@exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)) @TO@ ExpressionStatement@@MethodInvocation:exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)) @AT@ 4527 @LENGTH@ 109
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)) @AT@ 4527 @LENGTH@ 8
---------------INS SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @TO@ MethodInvocation@@exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)) @AT@ 4536 @LENGTH@ 100
------------------MOV ClassInstanceCreation@@CamelExchangeException["JettyClient failed with state " + exchangeState, exchange] @TO@ SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @AT@ 4461 @LENGTH@ 86
------------------MOV ClassInstanceCreation@@CamelExchangeException["JettyClient failed with state " + exchangeState, exchange] @TO@ SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @AT@ 4461 @LENGTH@ 86
------------------MOV ClassInstanceCreation@@CamelExchangeException["JettyClient failed with state " + exchangeState, exchange] @TO@ SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @AT@ 4461 @LENGTH@ 86
------------------MOV ClassInstanceCreation@@CamelExchangeException["JettyClient failed with state " + exchangeState, exchange] @TO@ SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @AT@ 4461 @LENGTH@ 86
------------------MOV ClassInstanceCreation@@CamelExchangeException["JettyClient failed with state " + exchangeState, exchange] @TO@ SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @AT@ 4461 @LENGTH@ 86
------INS InfixExpression@@exchange.getException() != null @TO@ IfStatement@@if (exchangeState == HttpExchange.STATUS_EXCEPTED) {  throw new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange);} @AT@ 4408 @LENGTH@ 31
---------MOV Operator@@== @TO@ InfixExpression@@exchange.getException() != null @AT@ 4367 @LENGTH@ 2
---------MOV Operator@@== @TO@ InfixExpression@@exchange.getException() != null @AT@ 4367 @LENGTH@ 2
---------MOV Operator@@== @TO@ InfixExpression@@exchange.getException() != null @AT@ 4367 @LENGTH@ 2
---------MOV Operator@@== @TO@ InfixExpression@@exchange.getException() != null @AT@ 4367 @LENGTH@ 2
---------MOV Operator@@== @TO@ InfixExpression@@exchange.getException() != null @AT@ 4367 @LENGTH@ 2
---------INS MethodInvocation@@exchange.getException() @TO@ InfixExpression@@exchange.getException() != null @AT@ 4408 @LENGTH@ 23
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException() @AT@ 4408 @LENGTH@ 8
------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException() @AT@ 4417 @LENGTH@ 14
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getException() != null @AT@ 4435 @LENGTH@ 4
------INS Block@@ThenBody:{  throw exchange.getException();} @TO@ IfStatement@@if (exchangeState == HttpExchange.STATUS_EXCEPTED) {  throw new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange);} @AT@ 4441 @LENGTH@ 62
---------INS ThrowStatement@@MethodInvocation:exchange.getException() @TO@ Block@@ThenBody:{  throw exchange.getException();} @AT@ 4459 @LENGTH@ 30
------------INS MethodInvocation@@exchange.getException() @TO@ ThrowStatement@@MethodInvocation:exchange.getException() @AT@ 4465 @LENGTH@ 23
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException() @AT@ 4465 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException() @AT@ 4474 @LENGTH@ 14
---UPD IfStatement@@if (exchangeState == HttpExchange.STATUS_EXCEPTED) {  throw new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange);} @TO@ if (exchange.getException() != null) {  throw exchange.getException();} else {  exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange));} @AT@ 4350 @LENGTH@ 208
------DEL InfixExpression@@exchangeState == HttpExchange.STATUS_EXCEPTED @AT@ 4354 @LENGTH@ 45
---------DEL SimpleName@@exchangeState @AT@ 4354 @LENGTH@ 13
---------DEL QualifiedName@@HttpExchange.STATUS_EXCEPTED @AT@ 4371 @LENGTH@ 28
------------DEL SimpleName@@HttpExchange @AT@ 4371 @LENGTH@ 12
------------DEL SimpleName@@STATUS_EXCEPTED @AT@ 4384 @LENGTH@ 15
------UPD Block@@ThenBody:{  throw new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange);} @TO@ ElseBody:{  exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange));} @AT@ 4401 @LENGTH@ 157
---------DEL ThrowStatement@@ClassInstanceCreation:new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange) @AT@ 4455 @LENGTH@ 93
---------INS ExpressionStatement@@MethodInvocation:exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)) @TO@ Block@@ThenBody:{  throw new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange);} @AT@ 4527 @LENGTH@ 110
------------INS MethodInvocation@@exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)) @TO@ ExpressionStatement@@MethodInvocation:exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)) @AT@ 4527 @LENGTH@ 109
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)) @AT@ 4527 @LENGTH@ 8
---------------INS SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @TO@ MethodInvocation@@exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)) @AT@ 4536 @LENGTH@ 100
------------------MOV ClassInstanceCreation@@CamelExchangeException["JettyClient failed with state " + exchangeState, exchange] @TO@ SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @AT@ 4461 @LENGTH@ 86
------------------MOV ClassInstanceCreation@@CamelExchangeException["JettyClient failed with state " + exchangeState, exchange] @TO@ SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @AT@ 4461 @LENGTH@ 86
------------------MOV ClassInstanceCreation@@CamelExchangeException["JettyClient failed with state " + exchangeState, exchange] @TO@ SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @AT@ 4461 @LENGTH@ 86
------------------MOV ClassInstanceCreation@@CamelExchangeException["JettyClient failed with state " + exchangeState, exchange] @TO@ SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @AT@ 4461 @LENGTH@ 86
------------------MOV ClassInstanceCreation@@CamelExchangeException["JettyClient failed with state " + exchangeState, exchange] @TO@ SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @AT@ 4461 @LENGTH@ 86
------INS InfixExpression@@exchange.getException() != null @TO@ IfStatement@@if (exchangeState == HttpExchange.STATUS_EXCEPTED) {  throw new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange);} @AT@ 4408 @LENGTH@ 31
---------MOV Operator@@== @TO@ InfixExpression@@exchange.getException() != null @AT@ 4367 @LENGTH@ 2
---------MOV Operator@@== @TO@ InfixExpression@@exchange.getException() != null @AT@ 4367 @LENGTH@ 2
---------MOV Operator@@== @TO@ InfixExpression@@exchange.getException() != null @AT@ 4367 @LENGTH@ 2
---------MOV Operator@@== @TO@ InfixExpression@@exchange.getException() != null @AT@ 4367 @LENGTH@ 2
---------MOV Operator@@== @TO@ InfixExpression@@exchange.getException() != null @AT@ 4367 @LENGTH@ 2
---------INS MethodInvocation@@exchange.getException() @TO@ InfixExpression@@exchange.getException() != null @AT@ 4408 @LENGTH@ 23
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException() @AT@ 4408 @LENGTH@ 8
------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException() @AT@ 4417 @LENGTH@ 14
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getException() != null @AT@ 4435 @LENGTH@ 4
------INS Block@@ThenBody:{  throw exchange.getException();} @TO@ IfStatement@@if (exchangeState == HttpExchange.STATUS_EXCEPTED) {  throw new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange);} @AT@ 4441 @LENGTH@ 62
---------INS ThrowStatement@@MethodInvocation:exchange.getException() @TO@ Block@@ThenBody:{  throw exchange.getException();} @AT@ 4459 @LENGTH@ 30
------------INS MethodInvocation@@exchange.getException() @TO@ ThrowStatement@@MethodInvocation:exchange.getException() @AT@ 4465 @LENGTH@ 23
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException() @AT@ 4465 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException() @AT@ 4474 @LENGTH@ 14


UPD TypeDeclaration@@[public]SpringCamelContext, DefaultCamelContext[InitializingBean, DisposableBean, ApplicationContextAware, ApplicationListener] @TO@ [public]SpringCamelContext, DefaultCamelContext[InitializingBean, DisposableBean, ApplicationContextAware] @AT@ 2558 @LENGTH@ 6387
---DEL SimpleType@@ApplicationListener @AT@ 2696 @LENGTH@ 19


INS FieldDeclaration@@String, [SKIP_GZIP_ENCODING="CamelSkipGzipEncoding"] @TO@ TypeDeclaration@@[public]Exchange,  @AT@ 4631 @LENGTH@ 52
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [SKIP_GZIP_ENCODING="CamelSkipGzipEncoding"] @AT@ 4631 @LENGTH@ 6
---INS VariableDeclarationFragment@@SKIP_GZIP_ENCODING="CamelSkipGzipEncoding" @TO@ FieldDeclaration@@String, [SKIP_GZIP_ENCODING="CamelSkipGzipEncoding"] @AT@ 4638 @LENGTH@ 44
------INS SimpleName@@SKIP_GZIP_ENCODING @TO@ VariableDeclarationFragment@@SKIP_GZIP_ENCODING="CamelSkipGzipEncoding" @AT@ 4638 @LENGTH@ 18
------INS StringLiteral@@"CamelSkipGzipEncoding" @TO@ VariableDeclarationFragment@@SKIP_GZIP_ENCODING="CamelSkipGzipEncoding" @AT@ 4659 @LENGTH@ 23


INS IfStatement@@if (exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class)) {  return new InputStreamRequestEntity(GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),data),ExchangeHelper.getContentType(exchange));} else {  return new InputStreamRequestEntity(new ByteArrayInputStream(data));} @TO@ MethodDeclaration@@private, RequestEntity, MethodName:asRequestEntity, byte[] data, Exchange exchange, Exception,  @AT@ 2784 @LENGTH@ 451
---INS InfixExpression@@exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @TO@ IfStatement@@if (exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class)) {  return new InputStreamRequestEntity(GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),data),ExchangeHelper.getContentType(exchange));} else {  return new InputStreamRequestEntity(new ByteArrayInputStream(data));} @AT@ 2788 @LENGTH@ 112
------INS InfixExpression@@exchange == null @TO@ InfixExpression@@exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2788 @LENGTH@ 16
---------INS SimpleName@@exchange @TO@ InfixExpression@@exchange == null @AT@ 2788 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@exchange == null @AT@ 2796 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange == null @AT@ 2800 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2804 @LENGTH@ 2
------INS PrefixExpression@@!exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @TO@ InfixExpression@@exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2820 @LENGTH@ 80
---------INS Operator@@! @TO@ PrefixExpression@@!exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2820 @LENGTH@ 1
---------INS MethodInvocation@@exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @TO@ PrefixExpression@@!exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2821 @LENGTH@ 79
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2821 @LENGTH@ 8
------------INS SimpleName@@MethodName:getProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.FALSE, Boolean.class] @TO@ MethodInvocation@@exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2830 @LENGTH@ 70
---------------INS QualifiedName@@Exchange.SKIP_GZIP_ENCODING @TO@ SimpleName@@MethodName:getProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.FALSE, Boolean.class] @AT@ 2842 @LENGTH@ 27
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.SKIP_GZIP_ENCODING @AT@ 2842 @LENGTH@ 8
------------------INS SimpleName@@SKIP_GZIP_ENCODING @TO@ QualifiedName@@Exchange.SKIP_GZIP_ENCODING @AT@ 2851 @LENGTH@ 18
---------------INS QualifiedName@@Boolean.FALSE @TO@ SimpleName@@MethodName:getProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.FALSE, Boolean.class] @AT@ 2871 @LENGTH@ 13
------------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.FALSE @AT@ 2871 @LENGTH@ 7
------------------INS SimpleName@@FALSE @TO@ QualifiedName@@Boolean.FALSE @AT@ 2879 @LENGTH@ 5
---------------INS TypeLiteral@@Boolean.class @TO@ SimpleName@@MethodName:getProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.FALSE, Boolean.class] @AT@ 2886 @LENGTH@ 13
---INS Block@@ThenBody:{  return new InputStreamRequestEntity(GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),data),ExchangeHelper.getContentType(exchange));} @TO@ IfStatement@@if (exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class)) {  return new InputStreamRequestEntity(GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),data),ExchangeHelper.getContentType(exchange));} else {  return new InputStreamRequestEntity(new ByteArrayInputStream(data));} @AT@ 2902 @LENGTH@ 235
------MOV ReturnStatement@@ClassInstanceCreation:new InputStreamRequestEntity(GZIPHelper.toGZIPInputStream(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),in),ExchangeHelper.getContentType(exchange)) @TO@ Block@@ThenBody:{  return new InputStreamRequestEntity(GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),data),ExchangeHelper.getContentType(exchange));} @AT@ 2217 @LENGTH@ 246
---------UPD ClassInstanceCreation@@InputStreamRequestEntity[GZIPHelper.toGZIPInputStream(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),in), ExchangeHelper.getContentType(exchange)] @TO@ InputStreamRequestEntity[GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),data), ExchangeHelper.getContentType(exchange)] @AT@ 2224 @LENGTH@ 238
------------UPD MethodInvocation@@GZIPHelper.toGZIPInputStream(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),in) @TO@ GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),data) @AT@ 2270 @LENGTH@ 150
---------------UPD SimpleName@@MethodName:toGZIPInputStream:[exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class), in] @TO@ MethodName:compressGzip:[exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class), data] @AT@ 2281 @LENGTH@ 139
------------------UPD SimpleName@@in @TO@ data @AT@ 2417 @LENGTH@ 2
---INS Block@@ElseBody:{  return new InputStreamRequestEntity(new ByteArrayInputStream(data));} @TO@ IfStatement@@if (exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class)) {  return new InputStreamRequestEntity(GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),data),ExchangeHelper.getContentType(exchange));} else {  return new InputStreamRequestEntity(new ByteArrayInputStream(data));} @AT@ 3143 @LENGTH@ 92
------INS ReturnStatement@@ClassInstanceCreation:new InputStreamRequestEntity(new ByteArrayInputStream(data)) @TO@ Block@@ElseBody:{  return new InputStreamRequestEntity(new ByteArrayInputStream(data));} @AT@ 3157 @LENGTH@ 68
---------INS ClassInstanceCreation@@InputStreamRequestEntity[new ByteArrayInputStream(data)] @TO@ ReturnStatement@@ClassInstanceCreation:new InputStreamRequestEntity(new ByteArrayInputStream(data)) @AT@ 3164 @LENGTH@ 60
------------INS New@@new @TO@ ClassInstanceCreation@@InputStreamRequestEntity[new ByteArrayInputStream(data)] @AT@ 3164 @LENGTH@ 3
------------INS SimpleType@@InputStreamRequestEntity @TO@ ClassInstanceCreation@@InputStreamRequestEntity[new ByteArrayInputStream(data)] @AT@ 3168 @LENGTH@ 24
------------INS ClassInstanceCreation@@ByteArrayInputStream[data] @TO@ ClassInstanceCreation@@InputStreamRequestEntity[new ByteArrayInputStream(data)] @AT@ 3193 @LENGTH@ 30
---------------INS New@@new @TO@ ClassInstanceCreation@@ByteArrayInputStream[data] @AT@ 3193 @LENGTH@ 3
---------------INS SimpleType@@ByteArrayInputStream @TO@ ClassInstanceCreation@@ByteArrayInputStream[data] @AT@ 3197 @LENGTH@ 20
---------------INS SimpleName@@data @TO@ ClassInstanceCreation@@ByteArrayInputStream[data] @AT@ 3218 @LENGTH@ 4


UPD VariableDeclarationStatement@@int numMessages=500; @TO@ int numMessages=200; @AT@ 2506 @LENGTH@ 22
---UPD VariableDeclarationFragment@@numMessages=500 @TO@ numMessages=200 @AT@ 2510 @LENGTH@ 17
------UPD NumberLiteral@@500 @TO@ 200 @AT@ 2524 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @TO@ MethodDeclaration@@private, void, MethodName:sendMultipartEmail, boolean useInlineattachments, Exception,  @AT@ 1724 @LENGTH@ 19
---INS MethodInvocation@@Mailbox.clearAll() @TO@ ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @AT@ 1724 @LENGTH@ 18
------INS SimpleName@@Name:Mailbox @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 1724 @LENGTH@ 7
------INS SimpleName@@MethodName:clearAll:[] @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 1732 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:this.names=Arrays.asList(names).toArray(new String[names.length]) @TO@ Assignment:this.names=names == null ? null : Arrays.asList(names).toArray(new String[names.length]) @AT@ 2408 @LENGTH@ 68
---UPD Assignment@@this.names=Arrays.asList(names).toArray(new String[names.length]) @TO@ this.names=names == null ? null : Arrays.asList(names).toArray(new String[names.length]) @AT@ 2408 @LENGTH@ 67
------INS ConditionalExpression@@names == null ? null : Arrays.asList(names).toArray(new String[names.length]) @TO@ Assignment@@this.names=Arrays.asList(names).toArray(new String[names.length]) @AT@ 2421 @LENGTH@ 75
---------MOV MethodInvocation@@Arrays.asList(names).toArray(new String[names.length]) @TO@ ConditionalExpression@@names == null ? null : Arrays.asList(names).toArray(new String[names.length]) @AT@ 2421 @LENGTH@ 54
---------INS InfixExpression@@names == null @TO@ ConditionalExpression@@names == null ? null : Arrays.asList(names).toArray(new String[names.length]) @AT@ 2421 @LENGTH@ 11
------------INS SimpleName@@names @TO@ InfixExpression@@names == null @AT@ 2421 @LENGTH@ 5
------------INS Operator@@== @TO@ InfixExpression@@names == null @AT@ 2426 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@names == null @AT@ 2428 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ConditionalExpression@@names == null ? null : Arrays.asList(names).toArray(new String[names.length]) @AT@ 2435 @LENGTH@ 4


UPD IfStatement@@if (isUseReaderForPayload()) {  return request.getReader();} else {  InputStream is=HttpConverter.toInputStream(request);  try {    CachedOutputStream cos=new CachedOutputStream(httpMessage.getExchange());    IOHelper.copy(is,cos);    return cos.getStreamCache();  }  finally {    is.close();  }} @TO@ if (isUseReaderForPayload()) {  return request.getReader();} else {  InputStream is=HttpConverter.toInputStream(request);  if (is == null) {    return is;  }  try {    CachedOutputStream cos=new CachedOutputStream(httpMessage.getExchange());    IOHelper.copy(is,cos);    return cos.getStreamCache();  }  finally {    is.close();  }} @AT@ 12684 @LENGTH@ 511
---UPD Block@@ElseBody:{  InputStream is=HttpConverter.toInputStream(request);  try {    CachedOutputStream cos=new CachedOutputStream(httpMessage.getExchange());    IOHelper.copy(is,cos);    return cos.getStreamCache();  }  finally {    is.close();  }} @TO@ ElseBody:{  InputStream is=HttpConverter.toInputStream(request);  if (is == null) {    return is;  }  try {    CachedOutputStream cos=new CachedOutputStream(httpMessage.getExchange());    IOHelper.copy(is,cos);    return cos.getStreamCache();  }  finally {    is.close();  }} @AT@ 12770 @LENGTH@ 425
------INS IfStatement@@if (is == null) {  return is;} @TO@ Block@@ElseBody:{  InputStream is=HttpConverter.toInputStream(request);  try {    CachedOutputStream cos=new CachedOutputStream(httpMessage.getExchange());    IOHelper.copy(is,cos);    return cos.getStreamCache();  }  finally {    is.close();  }} @AT@ 12923 @LENGTH@ 58
---------INS InfixExpression@@is == null @TO@ IfStatement@@if (is == null) {  return is;} @AT@ 12927 @LENGTH@ 10
------------INS SimpleName@@is @TO@ InfixExpression@@is == null @AT@ 12927 @LENGTH@ 2
------------INS Operator@@== @TO@ InfixExpression@@is == null @AT@ 12929 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@is == null @AT@ 12933 @LENGTH@ 4
---------INS Block@@ThenBody:{  return is;} @TO@ IfStatement@@if (is == null) {  return is;} @AT@ 12939 @LENGTH@ 42
------------INS ReturnStatement@@SimpleName:is @TO@ Block@@ThenBody:{  return is;} @AT@ 12957 @LENGTH@ 10
---------------INS SimpleName@@is @TO@ ReturnStatement@@SimpleName:is @AT@ 12964 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:bus=BusFactory.getDefaultBus() @TO@ Assignment:bus=BusFactory.newInstance().createBus() @AT@ 2827 @LENGTH@ 33
---UPD Assignment@@bus=BusFactory.getDefaultBus() @TO@ bus=BusFactory.newInstance().createBus() @AT@ 2827 @LENGTH@ 32
------UPD MethodInvocation@@BusFactory.getDefaultBus() @TO@ BusFactory.newInstance().createBus() @AT@ 2833 @LENGTH@ 26
---------INS MethodInvocation@@MethodName:newInstance:[] @TO@ MethodInvocation@@BusFactory.getDefaultBus() @AT@ 2833 @LENGTH@ 24
---------UPD SimpleName@@MethodName:getDefaultBus:[] @TO@ MethodName:createBus:[] @AT@ 2844 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:from("timer://foo?period=100").startupOrder(2).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getOut().setBody(messageIndex++);
    exchange.getOut().setHeader("aggregateGroup","group1");
  }
}
).to("direct:aggregator") @TO@ MethodInvocation:from("timer://foo?period=100&delay=1000").startupOrder(2).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getOut().setBody(messageIndex++);
    exchange.getOut().setHeader("aggregateGroup","group1");
  }
}
).to("direct:aggregator") @AT@ 1883 @LENGTH@ 429
---UPD MethodInvocation@@from("timer://foo?period=100").startupOrder(2).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getOut().setBody(messageIndex++);
    exchange.getOut().setHeader("aggregateGroup","group1");
  }
}
).to("direct:aggregator") @TO@ from("timer://foo?period=100&delay=1000").startupOrder(2).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getOut().setBody(messageIndex++);
    exchange.getOut().setHeader("aggregateGroup","group1");
  }
}
).to("direct:aggregator") @AT@ 1883 @LENGTH@ 428
------UPD MethodInvocation@@MethodName:from:["timer://foo?period=100"] @TO@ MethodName:from:["timer://foo?period=100&delay=1000"] @AT@ 1883 @LENGTH@ 30
---------UPD StringLiteral@@"timer://foo?period=100" @TO@ "timer://foo?period=100&delay=1000" @AT@ 1888 @LENGTH@ 24


UPD CatchClause@@catch (NoSuchAlgorithmException e) {  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ e.getMessage());} @TO@ catch (Exception e) {  NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e);  if (nsae != null) {    String name=System.getProperty("os.name");    System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());  } else {    throw e;  }} @AT@ 1748 @LENGTH@ 241
---UPD SingleVariableDeclaration@@NoSuchAlgorithmException e @TO@ Exception e @AT@ 1755 @LENGTH@ 26
------UPD SimpleType@@NoSuchAlgorithmException @TO@ Exception @AT@ 1755 @LENGTH@ 24
---DEL ExpressionStatement@@MethodInvocation:System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ e.getMessage()) @AT@ 1854 @LENGTH@ 125
---INS VariableDeclarationStatement@@NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e); @TO@ CatchClause@@catch (NoSuchAlgorithmException e) {  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ e.getMessage());} @AT@ 1877 @LENGTH@ 93
------INS SimpleType@@NoSuchAlgorithmException @TO@ VariableDeclarationStatement@@NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e); @AT@ 1877 @LENGTH@ 24
------INS VariableDeclarationFragment@@nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e) @TO@ VariableDeclarationStatement@@NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e); @AT@ 1902 @LENGTH@ 67
---------INS SimpleName@@nsae @TO@ VariableDeclarationFragment@@nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e) @AT@ 1902 @LENGTH@ 4
---------INS MethodInvocation@@ObjectHelper.getException(NoSuchAlgorithmException.class,e) @TO@ VariableDeclarationFragment@@nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e) @AT@ 1909 @LENGTH@ 60
------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.getException(NoSuchAlgorithmException.class,e) @AT@ 1909 @LENGTH@ 12
------------INS SimpleName@@MethodName:getException:[NoSuchAlgorithmException.class, e] @TO@ MethodInvocation@@ObjectHelper.getException(NoSuchAlgorithmException.class,e) @AT@ 1922 @LENGTH@ 47
---------------INS TypeLiteral@@NoSuchAlgorithmException.class @TO@ SimpleName@@MethodName:getException:[NoSuchAlgorithmException.class, e] @AT@ 1935 @LENGTH@ 30
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:getException:[NoSuchAlgorithmException.class, e] @AT@ 1967 @LENGTH@ 1
---INS IfStatement@@if (nsae != null) {  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} else {  throw e;} @TO@ CatchClause@@catch (NoSuchAlgorithmException e) {  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ e.getMessage());} @AT@ 1983 @LENGTH@ 356
------INS InfixExpression@@nsae != null @TO@ IfStatement@@if (nsae != null) {  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} else {  throw e;} @AT@ 1987 @LENGTH@ 12
---------INS SimpleName@@nsae @TO@ InfixExpression@@nsae != null @AT@ 1987 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@nsae != null @AT@ 1991 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@nsae != null @AT@ 1995 @LENGTH@ 4
------INS Block@@ThenBody:{  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} @TO@ IfStatement@@if (nsae != null) {  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} else {  throw e;} @AT@ 2001 @LENGTH@ 221
---------MOV VariableDeclarationStatement@@String name=System.getProperty("os.name"); @TO@ Block@@ThenBody:{  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} @AT@ 1797 @LENGTH@ 44
---------INS ExpressionStatement@@MethodInvocation:System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage()) @TO@ Block@@ThenBody:{  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} @AT@ 2080 @LENGTH@ 128
------------MOV MethodInvocation@@System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ e.getMessage()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage()) @AT@ 1854 @LENGTH@ 124
---------------UPD SimpleName@@MethodName:println:["SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ e.getMessage()] @TO@ MethodName:println:["SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage()] @AT@ 1865 @LENGTH@ 113
------------------UPD InfixExpression@@"SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ e.getMessage() @TO@ "SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage() @AT@ 1873 @LENGTH@ 104
---------------------UPD MethodInvocation@@e.getMessage() @TO@ nsae.getMessage() @AT@ 1963 @LENGTH@ 14
------------------------UPD SimpleName@@Name:e @TO@ Name:nsae @AT@ 1963 @LENGTH@ 1
------INS Block@@ElseBody:{  throw e;} @TO@ IfStatement@@if (nsae != null) {  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} else {  throw e;} @AT@ 2228 @LENGTH@ 111
---------INS ThrowStatement@@SimpleName:e @TO@ Block@@ElseBody:{  throw e;} @AT@ 2317 @LENGTH@ 8
------------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 2323 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:setNumberFormat, NumberFormat numberFormat,  @TO@ public, final, void, MethodName:setNumberFormat, NumberFormat numberFormat,  @AT@ 2043 @LENGTH@ 338
---INS Modifier@@final @TO@ MethodDeclaration@@public, void, MethodName:setNumberFormat, NumberFormat numberFormat,  @AT@ 2050 @LENGTH@ 5


UPD IfStatement@@if (bytesReadFromStream <= current.getCompressedSize() && !hasDataDescriptor) {  long remaining=current.getCompressedSize() - bytesReadFromStream;  while (remaining > 0) {    long n=in.skip(remaining);    if (n == 0) {      n=in.read(buf,0,(int)Math.min(buf.length,remaining));    }    if (n < 0) {      throw new EOFException("Truncated ZIP entry: " + current.getName());    } else {      remaining-=n;    }  }} else {  skip(Long.MAX_VALUE);  int inB;  if (current.getMethod() == ZipArchiveOutputStream.DEFLATED) {    inB=inf.getTotalIn();  } else {    inB=readBytesOfEntry;  }  int diff=0;  if ((diff=bytesReadFromStream - inB) != 0) {    ((PushbackInputStream)in).unread(buf,lengthOfLastRead - diff,diff);  }} @TO@ if (bytesReadFromStream <= current.getCompressedSize() && !hasDataDescriptor) {  long remaining=current.getCompressedSize() - bytesReadFromStream;  while (remaining > 0) {    long n=in.read(buf,0,(int)Math.min(buf.length,remaining));    if (n < 0) {      throw new EOFException("Truncated ZIP entry: " + current.getName());    } else {      remaining-=n;    }  }} else {  skip(Long.MAX_VALUE);  int inB;  if (current.getMethod() == ZipArchiveOutputStream.DEFLATED) {    inB=inf.getTotalIn();  } else {    inB=readBytesOfEntry;  }  int diff=0;  if ((diff=bytesReadFromStream - inB) != 0) {    ((PushbackInputStream)in).unread(buf,lengthOfLastRead - diff,diff);  }} @AT@ 11464 @LENGTH@ 1201
---DEL Block@@ThenBody:{  long remaining=current.getCompressedSize() - bytesReadFromStream;  while (remaining > 0) {    long n=in.skip(remaining);    if (n == 0) {      n=in.read(buf,0,(int)Math.min(buf.length,remaining));    }    if (n < 0) {      throw new EOFException("Truncated ZIP entry: " + current.getName());    } else {      remaining-=n;    }  }} @AT@ 11558 @LENGTH@ 589
------DEL WhileStatement@@while (remaining > 0) {  long n=in.skip(remaining);  if (n == 0) {    n=in.read(buf,0,(int)Math.min(buf.length,remaining));  }  if (n < 0) {    throw new EOFException("Truncated ZIP entry: " + current.getName());  } else {    remaining-=n;  }} @AT@ 11652 @LENGTH@ 485
---------DEL InfixExpression@@remaining > 0 @AT@ 11659 @LENGTH@ 13
------------DEL SimpleName@@remaining @AT@ 11659 @LENGTH@ 9
------------DEL Operator@@> @AT@ 11668 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 11671 @LENGTH@ 1
---MOV Block@@WhileBody:{  long n=in.skip(remaining);  if (n == 0) {    n=in.read(buf,0,(int)Math.min(buf.length,remaining));  }  if (n < 0) {    throw new EOFException("Truncated ZIP entry: " + current.getName());  } else {    remaining-=n;  }} @TO@ IfStatement@@if (bytesReadFromStream <= current.getCompressedSize() && !hasDataDescriptor) {  long remaining=current.getCompressedSize() - bytesReadFromStream;  while (remaining > 0) {    long n=in.skip(remaining);    if (n == 0) {      n=in.read(buf,0,(int)Math.min(buf.length,remaining));    }    if (n < 0) {      throw new EOFException("Truncated ZIP entry: " + current.getName());    } else {      remaining-=n;    }  }} else {  skip(Long.MAX_VALUE);  int inB;  if (current.getMethod() == ZipArchiveOutputStream.DEFLATED) {    inB=inf.getTotalIn();  } else {    inB=readBytesOfEntry;  }  int diff=0;  if ((diff=bytesReadFromStream - inB) != 0) {    ((PushbackInputStream)in).unread(buf,lengthOfLastRead - diff,diff);  }} @AT@ 11674 @LENGTH@ 463
------MOV VariableDeclarationStatement@@long remaining=current.getCompressedSize() - bytesReadFromStream; @TO@ Block@@WhileBody:{  long n=in.skip(remaining);  if (n == 0) {    n=in.read(buf,0,(int)Math.min(buf.length,remaining));  }  if (n < 0) {    throw new EOFException("Truncated ZIP entry: " + current.getName());  } else {    remaining-=n;  }} @AT@ 11572 @LENGTH@ 67
------INS WhileStatement@@while (remaining > 0) {  long n=in.read(buf,0,(int)Math.min(buf.length,remaining));  if (n < 0) {    throw new EOFException("Truncated ZIP entry: " + current.getName());  } else {    remaining-=n;  }} @TO@ Block@@WhileBody:{  long n=in.skip(remaining);  if (n == 0) {    n=in.read(buf,0,(int)Math.min(buf.length,remaining));  }  if (n < 0) {    throw new EOFException("Truncated ZIP entry: " + current.getName());  } else {    remaining-=n;  }} @AT@ 11652 @LENGTH@ 344
---------INS InfixExpression@@remaining > 0 @TO@ WhileStatement@@while (remaining > 0) {  long n=in.read(buf,0,(int)Math.min(buf.length,remaining));  if (n < 0) {    throw new EOFException("Truncated ZIP entry: " + current.getName());  } else {    remaining-=n;  }} @AT@ 11659 @LENGTH@ 13
------------MOV SimpleName@@n @TO@ InfixExpression@@remaining > 0 @AT@ 11918 @LENGTH@ 1
------------MOV Operator@@< @TO@ InfixExpression@@remaining > 0 @AT@ 11919 @LENGTH@ 1
------------MOV NumberLiteral@@0 @TO@ InfixExpression@@remaining > 0 @AT@ 11922 @LENGTH@ 1
---------MOV Block@@ThenBody:{  n=in.read(buf,0,(int)Math.min(buf.length,remaining));} @TO@ WhileStatement@@while (remaining > 0) {  long n=in.read(buf,0,(int)Math.min(buf.length,remaining));  if (n < 0) {    throw new EOFException("Truncated ZIP entry: " + current.getName());  } else {    remaining-=n;  }} @AT@ 11749 @LENGTH@ 148
------------INS VariableDeclarationStatement@@long n=in.read(buf,0,(int)Math.min(buf.length,remaining)); @TO@ Block@@ThenBody:{  n=in.read(buf,0,(int)Math.min(buf.length,remaining));} @AT@ 11692 @LENGTH@ 64
---------------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long n=in.read(buf,0,(int)Math.min(buf.length,remaining)); @AT@ 11692 @LENGTH@ 4
---------------INS VariableDeclarationFragment@@n=in.read(buf,0,(int)Math.min(buf.length,remaining)) @TO@ VariableDeclarationStatement@@long n=in.read(buf,0,(int)Math.min(buf.length,remaining)); @AT@ 11697 @LENGTH@ 58
------------------INS SimpleName@@n @TO@ VariableDeclarationFragment@@n=in.read(buf,0,(int)Math.min(buf.length,remaining)) @AT@ 11697 @LENGTH@ 1
------------------MOV MethodInvocation@@in.read(buf,0,(int)Math.min(buf.length,remaining)) @TO@ VariableDeclarationFragment@@n=in.read(buf,0,(int)Math.min(buf.length,remaining)) @AT@ 11824 @LENGTH@ 54
------------INS VariableDeclarationStatement@@long n=in.read(buf,0,(int)Math.min(buf.length,remaining)); @TO@ Block@@ThenBody:{  n=in.read(buf,0,(int)Math.min(buf.length,remaining));} @AT@ 11692 @LENGTH@ 64
---------------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long n=in.read(buf,0,(int)Math.min(buf.length,remaining)); @AT@ 11692 @LENGTH@ 4
---------------INS VariableDeclarationFragment@@n=in.read(buf,0,(int)Math.min(buf.length,remaining)) @TO@ VariableDeclarationStatement@@long n=in.read(buf,0,(int)Math.min(buf.length,remaining)); @AT@ 11697 @LENGTH@ 58
------------------INS SimpleName@@n @TO@ VariableDeclarationFragment@@n=in.read(buf,0,(int)Math.min(buf.length,remaining)) @AT@ 11697 @LENGTH@ 1
------------------MOV MethodInvocation@@in.read(buf,0,(int)Math.min(buf.length,remaining)) @TO@ VariableDeclarationFragment@@n=in.read(buf,0,(int)Math.min(buf.length,remaining)) @AT@ 11824 @LENGTH@ 54
------------MOV IfStatement@@if (n < 0) {  throw new EOFException("Truncated ZIP entry: " + current.getName());} else {  remaining-=n;} @TO@ Block@@ThenBody:{  n=in.read(buf,0,(int)Math.min(buf.length,remaining));} @AT@ 11914 @LENGTH@ 209
------DEL VariableDeclarationStatement@@long n=in.skip(remaining); @AT@ 11692 @LENGTH@ 28
---------DEL PrimitiveType@@long @AT@ 11692 @LENGTH@ 4
---------DEL VariableDeclarationFragment@@n=in.skip(remaining) @AT@ 11697 @LENGTH@ 22
------------DEL SimpleName@@n @AT@ 11697 @LENGTH@ 1
------------DEL MethodInvocation@@in.skip(remaining) @AT@ 11701 @LENGTH@ 18
---------------DEL SimpleName@@Name:in @AT@ 11701 @LENGTH@ 2
---------------DEL SimpleName@@MethodName:skip:[remaining] @AT@ 11704 @LENGTH@ 15
------------------DEL SimpleName@@remaining @AT@ 11709 @LENGTH@ 9
------DEL IfStatement@@if (n == 0) {  n=in.read(buf,0,(int)Math.min(buf.length,remaining));} @AT@ 11737 @LENGTH@ 160
---------DEL InfixExpression@@n == 0 @AT@ 11741 @LENGTH@ 6
------------DEL SimpleName@@n @AT@ 11741 @LENGTH@ 1
------------DEL Operator@@== @AT@ 11742 @LENGTH@ 2
------------DEL NumberLiteral@@0 @AT@ 11746 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:this.policies=policies @TO@ Assignment:this.policies=Arrays.asList(policies).toArray(new RetryPolicy[policies.length]) @AT@ 1259 @LENGTH@ 25
---UPD Assignment@@this.policies=policies @TO@ this.policies=Arrays.asList(policies).toArray(new RetryPolicy[policies.length]) @AT@ 1259 @LENGTH@ 24
------DEL SimpleName@@policies @AT@ 1275 @LENGTH@ 8
------INS MethodInvocation@@Arrays.asList(policies).toArray(new RetryPolicy[policies.length]) @TO@ Assignment@@this.policies=policies @AT@ 1300 @LENGTH@ 65
---------INS MethodInvocation@@MethodName:asList:[policies] @TO@ MethodInvocation@@Arrays.asList(policies).toArray(new RetryPolicy[policies.length]) @AT@ 1300 @LENGTH@ 23
------------INS SimpleName@@policies @TO@ MethodInvocation@@MethodName:asList:[policies] @AT@ 1314 @LENGTH@ 8
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(policies).toArray(new RetryPolicy[policies.length]) @AT@ 1300 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[new RetryPolicy[policies.length]] @TO@ MethodInvocation@@Arrays.asList(policies).toArray(new RetryPolicy[policies.length]) @AT@ 1324 @LENGTH@ 41
------------INS ArrayCreation@@new RetryPolicy[policies.length] @TO@ SimpleName@@MethodName:toArray:[new RetryPolicy[policies.length]] @AT@ 1332 @LENGTH@ 32
---------------INS ArrayType@@RetryPolicy[] @TO@ ArrayCreation@@new RetryPolicy[policies.length] @AT@ 1336 @LENGTH@ 28
------------------INS SimpleType@@RetryPolicy @TO@ ArrayType@@RetryPolicy[] @AT@ 1336 @LENGTH@ 11
---------------INS QualifiedName@@policies.length @TO@ ArrayCreation@@new RetryPolicy[policies.length] @AT@ 1348 @LENGTH@ 15
------------------INS SimpleName@@policies @TO@ QualifiedName@@policies.length @AT@ 1348 @LENGTH@ 8
------------------INS SimpleName@@length @TO@ QualifiedName@@policies.length @AT@ 1357 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(200) @TO@ MethodInvocation:Thread.sleep(2000) @AT@ 2553 @LENGTH@ 18
---UPD MethodInvocation@@Thread.sleep(200) @TO@ Thread.sleep(2000) @AT@ 2553 @LENGTH@ 17
------UPD SimpleName@@MethodName:sleep:[200] @TO@ MethodName:sleep:[2000] @AT@ 2560 @LENGTH@ 10
---------UPD NumberLiteral@@200 @TO@ 2000 @AT@ 2566 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testSkipEntryWithUnsupportedCompressionMethod, IOException,  @TO@ TypeDeclaration@@[public, final]ZipTestCase, AbstractTestCase @AT@ 5178 @LENGTH@ 658
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSkipEntryWithUnsupportedCompressionMethod, IOException,  @AT@ 5178 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSkipEntryWithUnsupportedCompressionMethod, IOException,  @AT@ 5185 @LENGTH@ 4
---INS SimpleName@@MethodName:testSkipEntryWithUnsupportedCompressionMethod @TO@ MethodDeclaration@@public, void, MethodName:testSkipEntryWithUnsupportedCompressionMethod, IOException,  @AT@ 5190 @LENGTH@ 45
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:testSkipEntryWithUnsupportedCompressionMethod, IOException,  @AT@ 5257 @LENGTH@ 11
---INS VariableDeclarationStatement@@ZipArchiveInputStream zip=new ZipArchiveInputStream(new FileInputStream(getFile("moby.zip"))); @TO@ MethodDeclaration@@public, void, MethodName:testSkipEntryWithUnsupportedCompressionMethod, IOException,  @AT@ 5279 @LENGTH@ 108
------INS SimpleType@@ZipArchiveInputStream @TO@ VariableDeclarationStatement@@ZipArchiveInputStream zip=new ZipArchiveInputStream(new FileInputStream(getFile("moby.zip"))); @AT@ 5279 @LENGTH@ 21
------INS VariableDeclarationFragment@@zip=new ZipArchiveInputStream(new FileInputStream(getFile("moby.zip"))) @TO@ VariableDeclarationStatement@@ZipArchiveInputStream zip=new ZipArchiveInputStream(new FileInputStream(getFile("moby.zip"))); @AT@ 5301 @LENGTH@ 85
---------INS SimpleName@@zip @TO@ VariableDeclarationFragment@@zip=new ZipArchiveInputStream(new FileInputStream(getFile("moby.zip"))) @AT@ 5301 @LENGTH@ 3
---------INS ClassInstanceCreation@@ZipArchiveInputStream[new FileInputStream(getFile("moby.zip"))] @TO@ VariableDeclarationFragment@@zip=new ZipArchiveInputStream(new FileInputStream(getFile("moby.zip"))) @AT@ 5319 @LENGTH@ 67
------------INS New@@new @TO@ ClassInstanceCreation@@ZipArchiveInputStream[new FileInputStream(getFile("moby.zip"))] @AT@ 5319 @LENGTH@ 3
------------INS SimpleType@@ZipArchiveInputStream @TO@ ClassInstanceCreation@@ZipArchiveInputStream[new FileInputStream(getFile("moby.zip"))] @AT@ 5323 @LENGTH@ 21
------------INS ClassInstanceCreation@@FileInputStream[getFile("moby.zip")] @TO@ ClassInstanceCreation@@ZipArchiveInputStream[new FileInputStream(getFile("moby.zip"))] @AT@ 5345 @LENGTH@ 40
---------------INS New@@new @TO@ ClassInstanceCreation@@FileInputStream[getFile("moby.zip")] @AT@ 5345 @LENGTH@ 3
---------------INS SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[getFile("moby.zip")] @AT@ 5349 @LENGTH@ 15
---------------INS MethodInvocation@@getFile("moby.zip") @TO@ ClassInstanceCreation@@FileInputStream[getFile("moby.zip")] @AT@ 5365 @LENGTH@ 19
------------------INS SimpleName@@MethodName:getFile:["moby.zip"] @TO@ MethodInvocation@@getFile("moby.zip") @AT@ 5365 @LENGTH@ 19
---------------------INS StringLiteral@@"moby.zip" @TO@ SimpleName@@MethodName:getFile:["moby.zip"] @AT@ 5373 @LENGTH@ 10
---INS TryStatement@@try {  ZipArchiveEntry entry=zip.getNextZipEntry();  assertEquals("README",entry.getName());  assertFalse(entry.isSupportedCompressionMethod());  try {    assertNull(zip.getNextZipEntry());  } catch (  IOException e) {    fail("COMPRESS-93: Unable to skip an unsupported zip entry");  }}  finally {  zip.close();} @TO@ MethodDeclaration@@public, void, MethodName:testSkipEntryWithUnsupportedCompressionMethod, IOException,  @AT@ 5396 @LENGTH@ 434
------INS VariableDeclarationStatement@@ZipArchiveEntry entry=zip.getNextZipEntry(); @TO@ TryStatement@@try {  ZipArchiveEntry entry=zip.getNextZipEntry();  assertEquals("README",entry.getName());  assertFalse(entry.isSupportedCompressionMethod());  try {    assertNull(zip.getNextZipEntry());  } catch (  IOException e) {    fail("COMPRESS-93: Unable to skip an unsupported zip entry");  }}  finally {  zip.close();} @AT@ 5414 @LENGTH@ 46
---------INS SimpleType@@ZipArchiveEntry @TO@ VariableDeclarationStatement@@ZipArchiveEntry entry=zip.getNextZipEntry(); @AT@ 5414 @LENGTH@ 15
---------INS VariableDeclarationFragment@@entry=zip.getNextZipEntry() @TO@ VariableDeclarationStatement@@ZipArchiveEntry entry=zip.getNextZipEntry(); @AT@ 5430 @LENGTH@ 29
------------INS SimpleName@@entry @TO@ VariableDeclarationFragment@@entry=zip.getNextZipEntry() @AT@ 5430 @LENGTH@ 5
------------INS MethodInvocation@@zip.getNextZipEntry() @TO@ VariableDeclarationFragment@@entry=zip.getNextZipEntry() @AT@ 5438 @LENGTH@ 21
---------------INS SimpleName@@Name:zip @TO@ MethodInvocation@@zip.getNextZipEntry() @AT@ 5438 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getNextZipEntry:[] @TO@ MethodInvocation@@zip.getNextZipEntry() @AT@ 5442 @LENGTH@ 17
------INS ExpressionStatement@@MethodInvocation:assertEquals("README",entry.getName()) @TO@ TryStatement@@try {  ZipArchiveEntry entry=zip.getNextZipEntry();  assertEquals("README",entry.getName());  assertFalse(entry.isSupportedCompressionMethod());  try {    assertNull(zip.getNextZipEntry());  } catch (  IOException e) {    fail("COMPRESS-93: Unable to skip an unsupported zip entry");  }}  finally {  zip.close();} @AT@ 5473 @LENGTH@ 40
---------INS MethodInvocation@@assertEquals("README",entry.getName()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("README",entry.getName()) @AT@ 5473 @LENGTH@ 39
------------INS SimpleName@@MethodName:assertEquals:["README", entry.getName()] @TO@ MethodInvocation@@assertEquals("README",entry.getName()) @AT@ 5473 @LENGTH@ 39
---------------INS StringLiteral@@"README" @TO@ SimpleName@@MethodName:assertEquals:["README", entry.getName()] @AT@ 5486 @LENGTH@ 8
---------------INS MethodInvocation@@entry.getName() @TO@ SimpleName@@MethodName:assertEquals:["README", entry.getName()] @AT@ 5496 @LENGTH@ 15
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getName() @AT@ 5496 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@entry.getName() @AT@ 5502 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:assertFalse(entry.isSupportedCompressionMethod()) @TO@ TryStatement@@try {  ZipArchiveEntry entry=zip.getNextZipEntry();  assertEquals("README",entry.getName());  assertFalse(entry.isSupportedCompressionMethod());  try {    assertNull(zip.getNextZipEntry());  } catch (  IOException e) {    fail("COMPRESS-93: Unable to skip an unsupported zip entry");  }}  finally {  zip.close();} @AT@ 5526 @LENGTH@ 50
---------INS MethodInvocation@@assertFalse(entry.isSupportedCompressionMethod()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(entry.isSupportedCompressionMethod()) @AT@ 5526 @LENGTH@ 49
------------INS SimpleName@@MethodName:assertFalse:[entry.isSupportedCompressionMethod()] @TO@ MethodInvocation@@assertFalse(entry.isSupportedCompressionMethod()) @AT@ 5526 @LENGTH@ 49
---------------INS MethodInvocation@@entry.isSupportedCompressionMethod() @TO@ SimpleName@@MethodName:assertFalse:[entry.isSupportedCompressionMethod()] @AT@ 5538 @LENGTH@ 36
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.isSupportedCompressionMethod() @AT@ 5538 @LENGTH@ 5
------------------INS SimpleName@@MethodName:isSupportedCompressionMethod:[] @TO@ MethodInvocation@@entry.isSupportedCompressionMethod() @AT@ 5544 @LENGTH@ 30
------INS TryStatement@@try {  assertNull(zip.getNextZipEntry());} catch (IOException e) {  fail("COMPRESS-93: Unable to skip an unsupported zip entry");} @TO@ TryStatement@@try {  ZipArchiveEntry entry=zip.getNextZipEntry();  assertEquals("README",entry.getName());  assertFalse(entry.isSupportedCompressionMethod());  try {    assertNull(zip.getNextZipEntry());  } catch (  IOException e) {    fail("COMPRESS-93: Unable to skip an unsupported zip entry");  }}  finally {  zip.close();} @AT@ 5589 @LENGTH@ 186
---------INS ExpressionStatement@@MethodInvocation:assertNull(zip.getNextZipEntry()) @TO@ TryStatement@@try {  assertNull(zip.getNextZipEntry());} catch (IOException e) {  fail("COMPRESS-93: Unable to skip an unsupported zip entry");} @AT@ 5611 @LENGTH@ 34
------------INS MethodInvocation@@assertNull(zip.getNextZipEntry()) @TO@ ExpressionStatement@@MethodInvocation:assertNull(zip.getNextZipEntry()) @AT@ 5611 @LENGTH@ 33
---------------INS SimpleName@@MethodName:assertNull:[zip.getNextZipEntry()] @TO@ MethodInvocation@@assertNull(zip.getNextZipEntry()) @AT@ 5611 @LENGTH@ 33
------------------INS MethodInvocation@@zip.getNextZipEntry() @TO@ SimpleName@@MethodName:assertNull:[zip.getNextZipEntry()] @AT@ 5622 @LENGTH@ 21
---------------------INS SimpleName@@Name:zip @TO@ MethodInvocation@@zip.getNextZipEntry() @AT@ 5622 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:getNextZipEntry:[] @TO@ MethodInvocation@@zip.getNextZipEntry() @AT@ 5626 @LENGTH@ 17
---------INS CatchClause@@catch (IOException e) {  fail("COMPRESS-93: Unable to skip an unsupported zip entry");} @TO@ TryStatement@@try {  assertNull(zip.getNextZipEntry());} catch (IOException e) {  fail("COMPRESS-93: Unable to skip an unsupported zip entry");} @AT@ 5660 @LENGTH@ 115
------------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  fail("COMPRESS-93: Unable to skip an unsupported zip entry");} @AT@ 5667 @LENGTH@ 13
---------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 5667 @LENGTH@ 11
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 5679 @LENGTH@ 1
------------INS ExpressionStatement@@MethodInvocation:fail("COMPRESS-93: Unable to skip an unsupported zip entry") @TO@ CatchClause@@catch (IOException e) {  fail("COMPRESS-93: Unable to skip an unsupported zip entry");} @AT@ 5700 @LENGTH@ 61
---------------INS MethodInvocation@@fail("COMPRESS-93: Unable to skip an unsupported zip entry") @TO@ ExpressionStatement@@MethodInvocation:fail("COMPRESS-93: Unable to skip an unsupported zip entry") @AT@ 5700 @LENGTH@ 60
------------------INS SimpleName@@MethodName:fail:["COMPRESS-93: Unable to skip an unsupported zip entry"] @TO@ MethodInvocation@@fail("COMPRESS-93: Unable to skip an unsupported zip entry") @AT@ 5700 @LENGTH@ 60
---------------------INS StringLiteral@@"COMPRESS-93: Unable to skip an unsupported zip entry" @TO@ SimpleName@@MethodName:fail:["COMPRESS-93: Unable to skip an unsupported zip entry"] @AT@ 5705 @LENGTH@ 54
------INS Block@@FinallyBody:{  zip.close();} @TO@ TryStatement@@try {  ZipArchiveEntry entry=zip.getNextZipEntry();  assertEquals("README",entry.getName());  assertFalse(entry.isSupportedCompressionMethod());  try {    assertNull(zip.getNextZipEntry());  } catch (  IOException e) {    fail("COMPRESS-93: Unable to skip an unsupported zip entry");  }}  finally {  zip.close();} @AT@ 5794 @LENGTH@ 36
---------INS ExpressionStatement@@MethodInvocation:zip.close() @TO@ Block@@FinallyBody:{  zip.close();} @AT@ 5808 @LENGTH@ 12
------------INS MethodInvocation@@zip.close() @TO@ ExpressionStatement@@MethodInvocation:zip.close() @AT@ 5808 @LENGTH@ 11
---------------INS SimpleName@@Name:zip @TO@ MethodInvocation@@zip.close() @AT@ 5808 @LENGTH@ 3
---------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@zip.close() @AT@ 5812 @LENGTH@ 7


UPD FieldDeclaration@@protected, String, [badUri="mina:tcp://localhost:5130?sync=true&codec=#XXX"] @TO@ protected, String, [badUri="mina:tcp://localhost:9130?sync=true&codec=#XXX"] @AT@ 1709 @LENGTH@ 75
---UPD VariableDeclarationFragment@@badUri="mina:tcp://localhost:5130?sync=true&codec=#XXX" @TO@ badUri="mina:tcp://localhost:9130?sync=true&codec=#XXX" @AT@ 1726 @LENGTH@ 57
------UPD StringLiteral@@"mina:tcp://localhost:5130?sync=true&codec=#XXX" @TO@ "mina:tcp://localhost:9130?sync=true&codec=#XXX" @AT@ 1735 @LENGTH@ 48


UPD MethodDeclaration@@protected, ItemReader<Foo>, MethodName:getItemReader, Exception,  @TO@ protected, AbstractPagingItemReader<Foo>, MethodName:getItemReader, Exception,  @AT@ 786 @LENGTH@ 646
---UPD ParameterizedType@@ItemReader<Foo> @TO@ AbstractPagingItemReader<Foo> @AT@ 796 @LENGTH@ 15
------UPD SimpleType@@ItemReader @TO@ AbstractPagingItemReader @AT@ 796 @LENGTH@ 10


UPD TypeDeclaration@@[public]RepeatSynchronizationManager,  @TO@ [public, final]RepeatSynchronizationManager,  @AT@ 1444 @LENGTH@ 2008
---INS Modifier@@final @TO@ TypeDeclaration@@[public]RepeatSynchronizationManager,  @AT@ 1451 @LENGTH@ 5


UPD TypeDeclaration@@[public]HawtDBAggregateLoadAndRecoverTest, CamelTestSupport @TO@ [@Ignore("Test manually as its aggressive on the file system with sync each write"), public]HawtDBAggregateLoadAndRecoverTest, CamelTestSupport @AT@ 1368 @LENGTH@ 3549
---INS SingleMemberAnnotation@@@Ignore("Test manually as its aggressive on the file system with sync each write") @TO@ TypeDeclaration@@[public]HawtDBAggregateLoadAndRecoverTest, CamelTestSupport @AT@ 1393 @LENGTH@ 82


DEL VariableDeclarationStatement@@Exchange exchange=template.send(testQueueEndpointA,ExchangePattern.InOnly,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader("org.apache.camel.jms",10000);
    exchange.getIn().setHeader("org.apache.camel.test.jms",20000);
    exchange.getIn().setHeader("testheader",1020);
    exchange.getIn().setHeader("anotherheader",1030);
  }
}
); @AT@ 2290 @LENGTH@ 478
---DEL SimpleType@@Exchange @AT@ 2290 @LENGTH@ 8
---DEL VariableDeclarationFragment@@exchange=template.send(testQueueEndpointA,ExchangePattern.InOnly,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader("org.apache.camel.jms",10000);
    exchange.getIn().setHeader("org.apache.camel.test.jms",20000);
    exchange.getIn().setHeader("testheader",1020);
    exchange.getIn().setHeader("anotherheader",1030);
  }
}
) @AT@ 2299 @LENGTH@ 468
------DEL SimpleName@@exchange @AT@ 2299 @LENGTH@ 8


UPD IfStatement@@if (clazz.getName().indexOf(CGLIB_CLASS_SEPARATOR) != -1) {  return clazz.getSuperclass();} @TO@ if (clazz != null && clazz.getName().contains(CGLIB_CLASS_SEPARATOR)) {  Class<?> superClass=clazz.getSuperclass();  if (superClass != null && !Object.class.equals(superClass)) {    return superClass;  }} @AT@ 29136 @LENGTH@ 111
---UPD InfixExpression@@clazz.getName().indexOf(CGLIB_CLASS_SEPARATOR) != -1 @TO@ clazz != null && clazz.getName().contains(CGLIB_CLASS_SEPARATOR) @AT@ 29140 @LENGTH@ 52
------UPD MethodInvocation@@clazz.getName().indexOf(CGLIB_CLASS_SEPARATOR) @TO@ clazz.getName().contains(CGLIB_CLASS_SEPARATOR) @AT@ 29140 @LENGTH@ 46
---------UPD SimpleName@@MethodName:indexOf:[CGLIB_CLASS_SEPARATOR] @TO@ MethodName:contains:[CGLIB_CLASS_SEPARATOR] @AT@ 29156 @LENGTH@ 30
------INS InfixExpression@@clazz != null @TO@ InfixExpression@@clazz.getName().indexOf(CGLIB_CLASS_SEPARATOR) != -1 @AT@ 29140 @LENGTH@ 13
---------INS SimpleName@@clazz @TO@ InfixExpression@@clazz != null @AT@ 29140 @LENGTH@ 5
---------INS Operator@@!= @TO@ InfixExpression@@clazz != null @AT@ 29145 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@clazz != null @AT@ 29149 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@clazz.getName().indexOf(CGLIB_CLASS_SEPARATOR) != -1 @AT@ 29153 @LENGTH@ 2
------DEL Operator@@!= @AT@ 29186 @LENGTH@ 2
------DEL PrefixExpression@@-1 @AT@ 29190 @LENGTH@ 2
---------DEL Operator@@- @AT@ 29190 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 29191 @LENGTH@ 1
---UPD Block@@ThenBody:{  return clazz.getSuperclass();} @TO@ ThenBody:{  Class<?> superClass=clazz.getSuperclass();  if (superClass != null && !Object.class.equals(superClass)) {    return superClass;  }} @AT@ 29194 @LENGTH@ 53
------DEL ReturnStatement@@MethodInvocation:clazz.getSuperclass() @AT@ 29208 @LENGTH@ 29
---------DEL MethodInvocation@@clazz.getSuperclass() @AT@ 29215 @LENGTH@ 21
------INS VariableDeclarationStatement@@Class<?> superClass=clazz.getSuperclass(); @TO@ Block@@ThenBody:{  return clazz.getSuperclass();} @AT@ 29220 @LENGTH@ 44
---------INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class<?> superClass=clazz.getSuperclass(); @AT@ 29220 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 29220 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 29226 @LENGTH@ 1
---------INS VariableDeclarationFragment@@superClass=clazz.getSuperclass() @TO@ VariableDeclarationStatement@@Class<?> superClass=clazz.getSuperclass(); @AT@ 29229 @LENGTH@ 34
------------INS SimpleName@@superClass @TO@ VariableDeclarationFragment@@superClass=clazz.getSuperclass() @AT@ 29229 @LENGTH@ 10
------------INS MethodInvocation@@clazz.getSuperclass() @TO@ VariableDeclarationFragment@@superClass=clazz.getSuperclass() @AT@ 29242 @LENGTH@ 21
---------------MOV SimpleName@@Name:clazz @TO@ MethodInvocation@@clazz.getSuperclass() @AT@ 29215 @LENGTH@ 5
---------------MOV SimpleName@@MethodName:getSuperclass:[] @TO@ MethodInvocation@@clazz.getSuperclass() @AT@ 29221 @LENGTH@ 15
------INS IfStatement@@if (superClass != null && !Object.class.equals(superClass)) {  return superClass;} @TO@ Block@@ThenBody:{  return clazz.getSuperclass();} @AT@ 29277 @LENGTH@ 110
---------INS InfixExpression@@superClass != null && !Object.class.equals(superClass) @TO@ IfStatement@@if (superClass != null && !Object.class.equals(superClass)) {  return superClass;} @AT@ 29281 @LENGTH@ 54
------------INS InfixExpression@@superClass != null @TO@ InfixExpression@@superClass != null && !Object.class.equals(superClass) @AT@ 29281 @LENGTH@ 18
---------------INS SimpleName@@superClass @TO@ InfixExpression@@superClass != null @AT@ 29281 @LENGTH@ 10
---------------INS Operator@@!= @TO@ InfixExpression@@superClass != null @AT@ 29291 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@superClass != null @AT@ 29295 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@superClass != null && !Object.class.equals(superClass) @AT@ 29299 @LENGTH@ 2
------------INS PrefixExpression@@!Object.class.equals(superClass) @TO@ InfixExpression@@superClass != null && !Object.class.equals(superClass) @AT@ 29303 @LENGTH@ 32
---------------INS Operator@@! @TO@ PrefixExpression@@!Object.class.equals(superClass) @AT@ 29303 @LENGTH@ 1
---------------INS MethodInvocation@@Object.class.equals(superClass) @TO@ PrefixExpression@@!Object.class.equals(superClass) @AT@ 29304 @LENGTH@ 31
------------------INS TypeLiteral@@Object.class @TO@ MethodInvocation@@Object.class.equals(superClass) @AT@ 29304 @LENGTH@ 12
------------------INS SimpleName@@MethodName:equals:[superClass] @TO@ MethodInvocation@@Object.class.equals(superClass) @AT@ 29317 @LENGTH@ 18
---------------------INS SimpleName@@superClass @TO@ SimpleName@@MethodName:equals:[superClass] @AT@ 29324 @LENGTH@ 10
---------INS Block@@ThenBody:{  return superClass;} @TO@ IfStatement@@if (superClass != null && !Object.class.equals(superClass)) {  return superClass;} @AT@ 29337 @LENGTH@ 50
------------INS ReturnStatement@@SimpleName:superClass @TO@ Block@@ThenBody:{  return superClass;} @AT@ 29355 @LENGTH@ 18
---------------INS SimpleName@@superClass @TO@ ReturnStatement@@SimpleName:superClass @AT@ 29362 @LENGTH@ 10


INS IfStatement@@if (endpoint.getConfiguration().isTextline()) {  body=endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body);} @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3486 @LENGTH@ 163
---INS MethodInvocation@@endpoint.getConfiguration().isTextline() @TO@ IfStatement@@if (endpoint.getConfiguration().isTextline()) {  body=endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body);} @AT@ 3490 @LENGTH@ 40
------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@endpoint.getConfiguration().isTextline() @AT@ 3490 @LENGTH@ 27
------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getConfiguration().isTextline() @AT@ 3490 @LENGTH@ 8
------INS SimpleName@@MethodName:isTextline:[] @TO@ MethodInvocation@@endpoint.getConfiguration().isTextline() @AT@ 3518 @LENGTH@ 12
---INS Block@@ThenBody:{  body=endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body);} @TO@ IfStatement@@if (endpoint.getConfiguration().isTextline()) {  body=endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body);} @AT@ 3532 @LENGTH@ 117
------INS ExpressionStatement@@Assignment:body=endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body) @TO@ Block@@ThenBody:{  body=endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body);} @AT@ 3546 @LENGTH@ 93
---------INS Assignment@@body=endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body) @TO@ ExpressionStatement@@Assignment:body=endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body) @AT@ 3546 @LENGTH@ 92
------------INS SimpleName@@body @TO@ Assignment@@body=endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body) @AT@ 3546 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@body=endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body) @AT@ 3550 @LENGTH@ 1
------------INS MethodInvocation@@endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body) @TO@ Assignment@@body=endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body) @AT@ 3553 @LENGTH@ 85
---------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body) @AT@ 3553 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body) @AT@ 3553 @LENGTH@ 26
---------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body) @AT@ 3553 @LENGTH@ 8
---------------INS SimpleName@@MethodName:convertTo:[String.class, exchange, body] @TO@ MethodInvocation@@endpoint.getCamelContext().getTypeConverter().convertTo(String.class,exchange,body) @AT@ 3599 @LENGTH@ 39
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:convertTo:[String.class, exchange, body] @AT@ 3609 @LENGTH@ 12
------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:convertTo:[String.class, exchange, body] @AT@ 3623 @LENGTH@ 8
------------------INS SimpleName@@body @TO@ SimpleName@@MethodName:convertTo:[String.class, exchange, body] @AT@ 3633 @LENGTH@ 4


INS MethodDeclaration@@protected, void, MethodName:resetFirstStartDone,  @TO@ TypeDeclaration@@[public]DefaultCamelContext, ServiceSupport[CamelContext] @AT@ 53818 @LENGTH@ 177
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:resetFirstStartDone,  @AT@ 53818 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:resetFirstStartDone,  @AT@ 53828 @LENGTH@ 4
---INS SimpleName@@MethodName:resetFirstStartDone @TO@ MethodDeclaration@@protected, void, MethodName:resetFirstStartDone,  @AT@ 53833 @LENGTH@ 19
---INS ExpressionStatement@@Assignment:firstStartDone=false @TO@ MethodDeclaration@@protected, void, MethodName:resetFirstStartDone,  @AT@ 53966 @LENGTH@ 23
------INS Assignment@@firstStartDone=false @TO@ ExpressionStatement@@Assignment:firstStartDone=false @AT@ 53966 @LENGTH@ 22
---------INS SimpleName@@firstStartDone @TO@ Assignment@@firstStartDone=false @AT@ 53966 @LENGTH@ 14
---------INS Operator@@= @TO@ Assignment@@firstStartDone=false @AT@ 53980 @LENGTH@ 1
---------INS BooleanLiteral@@false @TO@ Assignment@@firstStartDone=false @AT@ 53983 @LENGTH@ 5


UPD VariableDeclarationStatement@@int delay=ran.nextInt(250) + 10; @TO@ int delay=ran.nextInt(50) + 10; @AT@ 2526 @LENGTH@ 34
---UPD VariableDeclarationFragment@@delay=ran.nextInt(250) + 10 @TO@ delay=ran.nextInt(50) + 10 @AT@ 2530 @LENGTH@ 29
------UPD InfixExpression@@ran.nextInt(250) + 10 @TO@ ran.nextInt(50) + 10 @AT@ 2538 @LENGTH@ 21
---------UPD MethodInvocation@@ran.nextInt(250) @TO@ ran.nextInt(50) @AT@ 2538 @LENGTH@ 16
------------UPD SimpleName@@MethodName:nextInt:[250] @TO@ MethodName:nextInt:[50] @AT@ 2542 @LENGTH@ 12
---------------UPD NumberLiteral@@250 @TO@ 50 @AT@ 2550 @LENGTH@ 3


INS MethodDeclaration@@public, static, void, MethodName:done, Exchange exchange,  @TO@ TypeDeclaration@@[public, final]ExchangeHelper,  @AT@ 2590 @LENGTH@ 260
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:done, Exchange exchange,  @AT@ 2590 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:done, Exchange exchange,  @AT@ 2597 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:done, Exchange exchange,  @AT@ 2604 @LENGTH@ 4
---INS SimpleName@@MethodName:done @TO@ MethodDeclaration@@public, static, void, MethodName:done, Exchange exchange,  @AT@ 2609 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, static, void, MethodName:done, Exchange exchange,  @AT@ 2614 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2614 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2623 @LENGTH@ 8
---INS IfStatement@@if (exchange.getUnitOfWork() == null) {  UnitOfWork uow=new DefaultUnitOfWork(exchange);  exchange.setUnitOfWork(uow);} @TO@ MethodDeclaration@@public, static, void, MethodName:done, Exchange exchange,  @AT@ 2643 @LENGTH@ 152
------INS InfixExpression@@exchange.getUnitOfWork() == null @TO@ IfStatement@@if (exchange.getUnitOfWork() == null) {  UnitOfWork uow=new DefaultUnitOfWork(exchange);  exchange.setUnitOfWork(uow);} @AT@ 2647 @LENGTH@ 32
---------INS MethodInvocation@@exchange.getUnitOfWork() @TO@ InfixExpression@@exchange.getUnitOfWork() == null @AT@ 2647 @LENGTH@ 24
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getUnitOfWork() @AT@ 2647 @LENGTH@ 8
------------INS SimpleName@@MethodName:getUnitOfWork:[] @TO@ MethodInvocation@@exchange.getUnitOfWork() @AT@ 2656 @LENGTH@ 15
---------INS Operator@@== @TO@ InfixExpression@@exchange.getUnitOfWork() == null @AT@ 2671 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getUnitOfWork() == null @AT@ 2675 @LENGTH@ 4
------INS Block@@ThenBody:{  UnitOfWork uow=new DefaultUnitOfWork(exchange);  exchange.setUnitOfWork(uow);} @TO@ IfStatement@@if (exchange.getUnitOfWork() == null) {  UnitOfWork uow=new DefaultUnitOfWork(exchange);  exchange.setUnitOfWork(uow);} @AT@ 2681 @LENGTH@ 114
---------INS VariableDeclarationStatement@@UnitOfWork uow=new DefaultUnitOfWork(exchange); @TO@ Block@@ThenBody:{  UnitOfWork uow=new DefaultUnitOfWork(exchange);  exchange.setUnitOfWork(uow);} @AT@ 2695 @LENGTH@ 49
------------INS SimpleType@@UnitOfWork @TO@ VariableDeclarationStatement@@UnitOfWork uow=new DefaultUnitOfWork(exchange); @AT@ 2695 @LENGTH@ 10
------------INS VariableDeclarationFragment@@uow=new DefaultUnitOfWork(exchange) @TO@ VariableDeclarationStatement@@UnitOfWork uow=new DefaultUnitOfWork(exchange); @AT@ 2706 @LENGTH@ 37
---------------INS SimpleName@@uow @TO@ VariableDeclarationFragment@@uow=new DefaultUnitOfWork(exchange) @AT@ 2706 @LENGTH@ 3
---------------INS ClassInstanceCreation@@DefaultUnitOfWork[exchange] @TO@ VariableDeclarationFragment@@uow=new DefaultUnitOfWork(exchange) @AT@ 2712 @LENGTH@ 31
------------------INS New@@new @TO@ ClassInstanceCreation@@DefaultUnitOfWork[exchange] @AT@ 2712 @LENGTH@ 3
------------------INS SimpleType@@DefaultUnitOfWork @TO@ ClassInstanceCreation@@DefaultUnitOfWork[exchange] @AT@ 2716 @LENGTH@ 17
------------------INS SimpleName@@exchange @TO@ ClassInstanceCreation@@DefaultUnitOfWork[exchange] @AT@ 2734 @LENGTH@ 8
---------INS ExpressionStatement@@MethodInvocation:exchange.setUnitOfWork(uow) @TO@ Block@@ThenBody:{  UnitOfWork uow=new DefaultUnitOfWork(exchange);  exchange.setUnitOfWork(uow);} @AT@ 2757 @LENGTH@ 28
------------INS MethodInvocation@@exchange.setUnitOfWork(uow) @TO@ ExpressionStatement@@MethodInvocation:exchange.setUnitOfWork(uow) @AT@ 2757 @LENGTH@ 27
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setUnitOfWork(uow) @AT@ 2757 @LENGTH@ 8
---------------INS SimpleName@@MethodName:setUnitOfWork:[uow] @TO@ MethodInvocation@@exchange.setUnitOfWork(uow) @AT@ 2766 @LENGTH@ 18
------------------INS SimpleName@@uow @TO@ SimpleName@@MethodName:setUnitOfWork:[uow] @AT@ 2780 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:exchange.getUnitOfWork().done(exchange) @TO@ MethodDeclaration@@public, static, void, MethodName:done, Exchange exchange,  @AT@ 2804 @LENGTH@ 40
------INS MethodInvocation@@exchange.getUnitOfWork().done(exchange) @TO@ ExpressionStatement@@MethodInvocation:exchange.getUnitOfWork().done(exchange) @AT@ 2804 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:getUnitOfWork:[] @TO@ MethodInvocation@@exchange.getUnitOfWork().done(exchange) @AT@ 2804 @LENGTH@ 24
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getUnitOfWork().done(exchange) @AT@ 2804 @LENGTH@ 8
---------INS SimpleName@@MethodName:done:[exchange] @TO@ MethodInvocation@@exchange.getUnitOfWork().done(exchange) @AT@ 2829 @LENGTH@ 14
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:done:[exchange] @AT@ 2834 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:from("mina:tcp://localhost:8080?sync=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    exchange.getOut().setBody("Bye " + body);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("mina:tcp://localhost:9090?sync=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    exchange.getOut().setBody("Bye " + body);
  }
}
).to("mock:result") @AT@ 2868 @LENGTH@ 351
---UPD MethodInvocation@@from("mina:tcp://localhost:8080?sync=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    exchange.getOut().setBody("Bye " + body);
  }
}
).to("mock:result") @TO@ from("mina:tcp://localhost:9090?sync=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    exchange.getOut().setBody("Bye " + body);
  }
}
).to("mock:result") @AT@ 2868 @LENGTH@ 350
------UPD MethodInvocation@@MethodName:from:["mina:tcp://localhost:8080?sync=true"] @TO@ MethodName:from:["mina:tcp://localhost:9090?sync=true"] @AT@ 2868 @LENGTH@ 43
---------UPD StringLiteral@@"mina:tcp://localhost:8080?sync=true" @TO@ "mina:tcp://localhost:9090?sync=true" @AT@ 2873 @LENGTH@ 37


UPD VariableDeclarationStatement@@int delay=ran.nextInt(500) + 10; @TO@ int delay=ran.nextInt(250) + 10; @AT@ 1917 @LENGTH@ 34
---UPD VariableDeclarationFragment@@delay=ran.nextInt(500) + 10 @TO@ delay=ran.nextInt(250) + 10 @AT@ 1921 @LENGTH@ 29
------UPD InfixExpression@@ran.nextInt(500) + 10 @TO@ ran.nextInt(250) + 10 @AT@ 1929 @LENGTH@ 21
---------UPD MethodInvocation@@ran.nextInt(500) @TO@ ran.nextInt(250) @AT@ 1929 @LENGTH@ 16
------------UPD SimpleName@@MethodName:nextInt:[500] @TO@ MethodName:nextInt:[250] @AT@ 1933 @LENGTH@ 12
---------------UPD NumberLiteral@@500 @TO@ 250 @AT@ 1941 @LENGTH@ 3


UPD ExpressionStatement@@Assignment:this.fieldsUsedAsTargetMethodArguments=fieldsUsedAsMethodArguments @TO@ Assignment:this.fieldsUsedAsTargetMethodArguments=Arrays.asList(fieldsUsedAsMethodArguments).toArray(new String[fieldsUsedAsMethodArguments.length]) @AT@ 2398 @LENGTH@ 69
---UPD Assignment@@this.fieldsUsedAsTargetMethodArguments=fieldsUsedAsMethodArguments @TO@ this.fieldsUsedAsTargetMethodArguments=Arrays.asList(fieldsUsedAsMethodArguments).toArray(new String[fieldsUsedAsMethodArguments.length]) @AT@ 2398 @LENGTH@ 68
------DEL SimpleName@@fieldsUsedAsMethodArguments @AT@ 2439 @LENGTH@ 27
------INS MethodInvocation@@Arrays.asList(fieldsUsedAsMethodArguments).toArray(new String[fieldsUsedAsMethodArguments.length]) @TO@ Assignment@@this.fieldsUsedAsTargetMethodArguments=fieldsUsedAsMethodArguments @AT@ 2464 @LENGTH@ 103
---------INS MethodInvocation@@MethodName:asList:[fieldsUsedAsMethodArguments] @TO@ MethodInvocation@@Arrays.asList(fieldsUsedAsMethodArguments).toArray(new String[fieldsUsedAsMethodArguments.length]) @AT@ 2464 @LENGTH@ 42
------------INS SimpleName@@fieldsUsedAsMethodArguments @TO@ MethodInvocation@@MethodName:asList:[fieldsUsedAsMethodArguments] @AT@ 2478 @LENGTH@ 27
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(fieldsUsedAsMethodArguments).toArray(new String[fieldsUsedAsMethodArguments.length]) @AT@ 2464 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[new String[fieldsUsedAsMethodArguments.length]] @TO@ MethodInvocation@@Arrays.asList(fieldsUsedAsMethodArguments).toArray(new String[fieldsUsedAsMethodArguments.length]) @AT@ 2507 @LENGTH@ 60
------------INS ArrayCreation@@new String[fieldsUsedAsMethodArguments.length] @TO@ SimpleName@@MethodName:toArray:[new String[fieldsUsedAsMethodArguments.length]] @AT@ 2520 @LENGTH@ 46
---------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[fieldsUsedAsMethodArguments.length] @AT@ 2524 @LENGTH@ 42
------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 2524 @LENGTH@ 6
---------------INS QualifiedName@@fieldsUsedAsMethodArguments.length @TO@ ArrayCreation@@new String[fieldsUsedAsMethodArguments.length] @AT@ 2531 @LENGTH@ 34
------------------INS SimpleName@@fieldsUsedAsMethodArguments @TO@ QualifiedName@@fieldsUsedAsMethodArguments.length @AT@ 2531 @LENGTH@ 27
------------------INS SimpleName@@length @TO@ QualifiedName@@fieldsUsedAsMethodArguments.length @AT@ 2559 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("file://target/concurrent").setHeader("id",simple("${file:onlyname.noext}")).beanRef("business").aggregate(header("country"),new BodyInAggregatingStrategy()).completionFromBatchConsumer().to("mock:result") @TO@ MethodInvocation:from("file://target/concurrent?sortBy=file:name").setHeader("id",simple("${file:onlyname.noext}")).beanRef("business").aggregate(header("country"),new BodyInAggregatingStrategy()).completionFromBatchConsumer().to("mock:result") @AT@ 3631 @LENGTH@ 326
---UPD MethodInvocation@@from("file://target/concurrent").setHeader("id",simple("${file:onlyname.noext}")).beanRef("business").aggregate(header("country"),new BodyInAggregatingStrategy()).completionFromBatchConsumer().to("mock:result") @TO@ from("file://target/concurrent?sortBy=file:name").setHeader("id",simple("${file:onlyname.noext}")).beanRef("business").aggregate(header("country"),new BodyInAggregatingStrategy()).completionFromBatchConsumer().to("mock:result") @AT@ 3631 @LENGTH@ 325
------UPD MethodInvocation@@MethodName:from:["file://target/concurrent"] @TO@ MethodName:from:["file://target/concurrent?sortBy=file:name"] @AT@ 3631 @LENGTH@ 32
---------UPD StringLiteral@@"file://target/concurrent" @TO@ "file://target/concurrent?sortBy=file:name" @AT@ 3636 @LENGTH@ 26


UPD IfStatement@@if (beanFactory.containsBean(newViewName)) {  modelAndView.setViewName(newViewName);} @TO@ if (beanFactory == null || beanFactory.containsBean(newViewName)) {  modelAndView.setViewName(newViewName);} @AT@ 3237 @LENGTH@ 160
---INS InfixExpression@@beanFactory == null || beanFactory.containsBean(newViewName) @TO@ IfStatement@@if (beanFactory.containsBean(newViewName)) {  modelAndView.setViewName(newViewName);} @AT@ 3241 @LENGTH@ 58
------MOV MethodInvocation@@beanFactory.containsBean(newViewName) @TO@ InfixExpression@@beanFactory == null || beanFactory.containsBean(newViewName) @AT@ 3241 @LENGTH@ 37
------INS InfixExpression@@beanFactory == null @TO@ InfixExpression@@beanFactory == null || beanFactory.containsBean(newViewName) @AT@ 3241 @LENGTH@ 17
---------INS SimpleName@@beanFactory @TO@ InfixExpression@@beanFactory == null @AT@ 3241 @LENGTH@ 11
---------INS Operator@@== @TO@ InfixExpression@@beanFactory == null @AT@ 3252 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@beanFactory == null @AT@ 3254 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@beanFactory == null || beanFactory.containsBean(newViewName) @AT@ 3258 @LENGTH@ 2


UPD IfStatement@@if (Boolean.valueOf(getClientAuth()).booleanValue() == true) {  sslConfigFactory.setTruststoreFile(FTPSERVER_KEYSTORE);  sslConfigFactory.setTruststoreType("JKS");  sslConfigFactory.setTruststoreAlgorithm("SunX509");  sslConfigFactory.setTruststorePassword(FTPSERVER_KEYSTORE_PASSWORD);} @TO@ if (Boolean.valueOf(getClientAuth())) {  sslConfigFactory.setTruststoreFile(FTPSERVER_KEYSTORE);  sslConfigFactory.setTruststoreType("JKS");  sslConfigFactory.setTruststoreAlgorithm("SunX509");  sslConfigFactory.setTruststorePassword(FTPSERVER_KEYSTORE_PASSWORD);} @AT@ 2899 @LENGTH@ 352
---DEL InfixExpression@@Boolean.valueOf(getClientAuth()).booleanValue() == true @AT@ 2903 @LENGTH@ 55
------DEL MethodInvocation@@Boolean.valueOf(getClientAuth()).booleanValue() @AT@ 2903 @LENGTH@ 47
---------DEL MethodInvocation@@MethodName:valueOf:[getClientAuth()] @AT@ 2903 @LENGTH@ 32
------------DEL MethodInvocation@@MethodName:getClientAuth:[] @AT@ 2919 @LENGTH@ 15
---------DEL SimpleName@@MethodName:booleanValue:[] @AT@ 2936 @LENGTH@ 14
------DEL Operator@@== @AT@ 2950 @LENGTH@ 2
------DEL BooleanLiteral@@true @AT@ 2954 @LENGTH@ 4
---INS MethodInvocation@@Boolean.valueOf(getClientAuth()) @TO@ IfStatement@@if (Boolean.valueOf(getClientAuth()).booleanValue() == true) {  sslConfigFactory.setTruststoreFile(FTPSERVER_KEYSTORE);  sslConfigFactory.setTruststoreType("JKS");  sslConfigFactory.setTruststoreAlgorithm("SunX509");  sslConfigFactory.setTruststorePassword(FTPSERVER_KEYSTORE_PASSWORD);} @AT@ 2903 @LENGTH@ 32
------MOV SimpleName@@Name:Boolean @TO@ MethodInvocation@@Boolean.valueOf(getClientAuth()) @AT@ 2903 @LENGTH@ 7
------INS SimpleName@@MethodName:valueOf:[getClientAuth()] @TO@ MethodInvocation@@Boolean.valueOf(getClientAuth()) @AT@ 2911 @LENGTH@ 24
---------INS MethodInvocation@@MethodName:getClientAuth:[] @TO@ SimpleName@@MethodName:valueOf:[getClientAuth()] @AT@ 2919 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:from("mina:tcp://localhost:8080?sync=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    exchange.getOut().setBody("Bye " + body);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("mina:tcp://localhost:9080?sync=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    exchange.getOut().setBody("Bye " + body);
  }
}
).to("mock:result") @AT@ 2889 @LENGTH@ 351
---UPD MethodInvocation@@from("mina:tcp://localhost:8080?sync=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    exchange.getOut().setBody("Bye " + body);
  }
}
).to("mock:result") @TO@ from("mina:tcp://localhost:9080?sync=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    exchange.getOut().setBody("Bye " + body);
  }
}
).to("mock:result") @AT@ 2889 @LENGTH@ 350
------UPD MethodInvocation@@MethodName:from:["mina:tcp://localhost:8080?sync=true"] @TO@ MethodName:from:["mina:tcp://localhost:9080?sync=true"] @AT@ 2889 @LENGTH@ 43
---------UPD StringLiteral@@"mina:tcp://localhost:8080?sync=true" @TO@ "mina:tcp://localhost:9080?sync=true" @AT@ 2894 @LENGTH@ 37


UPD MethodDeclaration@@public, void, MethodName:setDataSource, DataSource dataSource,  @TO@ public, final, void, MethodName:setDataSource, DataSource dataSource,  @AT@ 3455 @LENGTH@ 108
---INS Modifier@@final @TO@ MethodDeclaration@@public, void, MethodName:setDataSource, DataSource dataSource,  @AT@ 3462 @LENGTH@ 5


UPD TypeDeclaration@@[public]HawtDBAggregateLoadConcurrentTest, CamelTestSupport @TO@ [@Ignore("Test manually as its aggressive on the file system with sync each write"), public]HawtDBAggregateLoadConcurrentTest, CamelTestSupport @AT@ 1357 @LENGTH@ 2871
---INS SingleMemberAnnotation@@@Ignore("Test manually as its aggressive on the file system with sync each write") @TO@ TypeDeclaration@@[public]HawtDBAggregateLoadConcurrentTest, CamelTestSupport @AT@ 1382 @LENGTH@ 82


UPD ExpressionStatement@@MethodInvocation:from("file://target/concurrent").setHeader("id",simple("${file:onlyname.noext}")).threads(10).beanRef("business").aggregate(header("country"),new BodyInAggregatingStrategy()).completionFromBatchConsumer().to("mock:result") @TO@ MethodInvocation:from("file://target/concurrent?sortBy=file:name").setHeader("id",simple("${file:onlyname.noext}")).threads(10).beanRef("business").aggregate(header("country"),new BodyInAggregatingStrategy()).completionFromBatchConsumer().to("mock:result") @AT@ 1663 @LENGTH@ 359
---UPD MethodInvocation@@from("file://target/concurrent").setHeader("id",simple("${file:onlyname.noext}")).threads(10).beanRef("business").aggregate(header("country"),new BodyInAggregatingStrategy()).completionFromBatchConsumer().to("mock:result") @TO@ from("file://target/concurrent?sortBy=file:name").setHeader("id",simple("${file:onlyname.noext}")).threads(10).beanRef("business").aggregate(header("country"),new BodyInAggregatingStrategy()).completionFromBatchConsumer().to("mock:result") @AT@ 1663 @LENGTH@ 358
------UPD MethodInvocation@@MethodName:from:["file://target/concurrent"] @TO@ MethodName:from:["file://target/concurrent?sortBy=file:name"] @AT@ 1663 @LENGTH@ 32
---------UPD StringLiteral@@"file://target/concurrent" @TO@ "file://target/concurrent?sortBy=file:name" @AT@ 1668 @LENGTH@ 26


INS MethodDeclaration@@public, boolean, MethodName:isGlobalPaxHeader,  @TO@ TypeDeclaration@@[public]TarArchiveEntry, [TarConstants, ArchiveEntry] @AT@ 15549 @LENGTH@ 99
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isGlobalPaxHeader,  @AT@ 15549 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isGlobalPaxHeader,  @AT@ 15556 @LENGTH@ 7
---INS SimpleName@@MethodName:isGlobalPaxHeader @TO@ MethodDeclaration@@public, boolean, MethodName:isGlobalPaxHeader,  @AT@ 15564 @LENGTH@ 17
---INS ReturnStatement@@InfixExpression:linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER @TO@ MethodDeclaration@@public, boolean, MethodName:isGlobalPaxHeader,  @AT@ 15593 @LENGTH@ 49
------INS InfixExpression@@linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER @TO@ ReturnStatement@@InfixExpression:linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER @AT@ 15600 @LENGTH@ 41
---------INS SimpleName@@linkFlag @TO@ InfixExpression@@linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER @AT@ 15600 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER @AT@ 15608 @LENGTH@ 2
---------INS SimpleName@@LF_PAX_GLOBAL_EXTENDED_HEADER @TO@ InfixExpression@@linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER @AT@ 15612 @LENGTH@ 29


UPD ExpressionStatement@@Assignment:this.executor=endpoint.getCamelContext().getExecutorServiceStrategy().newScheduledThreadPool(this,getEndpoint().getEndpointUri(),DEFAULT_THREADPOOL_SIZE) @TO@ Assignment:this.executor=endpoint.getCamelContext().getExecutorServiceStrategy().newScheduledThreadPool(this,endpoint.getEndpointUri(),DEFAULT_THREADPOOL_SIZE) @AT@ 2338 @LENGTH@ 187
---UPD Assignment@@this.executor=endpoint.getCamelContext().getExecutorServiceStrategy().newScheduledThreadPool(this,getEndpoint().getEndpointUri(),DEFAULT_THREADPOOL_SIZE) @TO@ this.executor=endpoint.getCamelContext().getExecutorServiceStrategy().newScheduledThreadPool(this,endpoint.getEndpointUri(),DEFAULT_THREADPOOL_SIZE) @AT@ 2338 @LENGTH@ 186
------UPD MethodInvocation@@endpoint.getCamelContext().getExecutorServiceStrategy().newScheduledThreadPool(this,getEndpoint().getEndpointUri(),DEFAULT_THREADPOOL_SIZE) @TO@ endpoint.getCamelContext().getExecutorServiceStrategy().newScheduledThreadPool(this,endpoint.getEndpointUri(),DEFAULT_THREADPOOL_SIZE) @AT@ 2354 @LENGTH@ 170
---------UPD SimpleName@@MethodName:newScheduledThreadPool:[this, getEndpoint().getEndpointUri(), DEFAULT_THREADPOOL_SIZE] @TO@ MethodName:newScheduledThreadPool:[this, endpoint.getEndpointUri(), DEFAULT_THREADPOOL_SIZE] @AT@ 2439 @LENGTH@ 85
------------UPD MethodInvocation@@getEndpoint().getEndpointUri() @TO@ endpoint.getEndpointUri() @AT@ 2468 @LENGTH@ 30
---------------DEL MethodInvocation@@MethodName:getEndpoint:[] @AT@ 2468 @LENGTH@ 13
---------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@getEndpoint().getEndpointUri() @AT@ 2468 @LENGTH@ 8


INS IfStatement@@if (applicationContext == null || beanName == null) {  return super.isSingleton(bean,beanName);} else {  return applicationContext.isSingleton(beanName);} @TO@ MethodDeclaration@@protected, boolean, MethodName:isSingleton, Object bean, String beanName,  @AT@ 6601 @LENGTH@ 227
---INS InfixExpression@@applicationContext == null || beanName == null @TO@ IfStatement@@if (applicationContext == null || beanName == null) {  return super.isSingleton(bean,beanName);} else {  return applicationContext.isSingleton(beanName);} @AT@ 6605 @LENGTH@ 46
------INS InfixExpression@@applicationContext == null @TO@ InfixExpression@@applicationContext == null || beanName == null @AT@ 6605 @LENGTH@ 26
---------INS SimpleName@@applicationContext @TO@ InfixExpression@@applicationContext == null @AT@ 6605 @LENGTH@ 18
---------INS Operator@@== @TO@ InfixExpression@@applicationContext == null @AT@ 6623 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@applicationContext == null @AT@ 6627 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@applicationContext == null || beanName == null @AT@ 6631 @LENGTH@ 2
------INS InfixExpression@@beanName == null @TO@ InfixExpression@@applicationContext == null || beanName == null @AT@ 6635 @LENGTH@ 16
---------INS SimpleName@@beanName @TO@ InfixExpression@@beanName == null @AT@ 6635 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@beanName == null @AT@ 6643 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@beanName == null @AT@ 6647 @LENGTH@ 4
---INS Block@@ThenBody:{  return super.isSingleton(bean,beanName);} @TO@ IfStatement@@if (applicationContext == null || beanName == null) {  return super.isSingleton(bean,beanName);} else {  return applicationContext.isSingleton(beanName);} @AT@ 6653 @LENGTH@ 81
------INS ReturnStatement@@SuperMethodInvocation:super.isSingleton(bean,beanName) @TO@ Block@@ThenBody:{  return super.isSingleton(bean,beanName);} @AT@ 6675 @LENGTH@ 41
---------INS SuperMethodInvocation@@super.isSingleton(bean,beanName) @TO@ ReturnStatement@@SuperMethodInvocation:super.isSingleton(bean,beanName) @AT@ 6682 @LENGTH@ 33
------------INS SimpleName@@MethodName:isSingleton:[bean, beanName] @TO@ SuperMethodInvocation@@super.isSingleton(bean,beanName) @AT@ 6688 @LENGTH@ 11
------------INS SimpleName@@bean @TO@ SuperMethodInvocation@@super.isSingleton(bean,beanName) @AT@ 6700 @LENGTH@ 4
------------INS SimpleName@@beanName @TO@ SuperMethodInvocation@@super.isSingleton(bean,beanName) @AT@ 6706 @LENGTH@ 8
---INS Block@@ElseBody:{  return applicationContext.isSingleton(beanName);} @TO@ IfStatement@@if (applicationContext == null || beanName == null) {  return super.isSingleton(bean,beanName);} else {  return applicationContext.isSingleton(beanName);} @AT@ 6740 @LENGTH@ 88
------MOV ReturnStatement@@MethodInvocation:applicationContext.isSingleton(beanName) @TO@ Block@@ElseBody:{  return applicationContext.isSingleton(beanName);} @AT@ 6449 @LENGTH@ 48


UPD IfStatement@@if (limitConcurrentConsumers) {  consumers=(consumers < maxConcurrentConsumers) ? consumers : maxConcurrentConsumers;  if (consumers == maxConcurrentConsumers) {    LOG.info("The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than  " + maxConcurrentConsumers);    LOG.info("Concurrent Consumers set to " + maxConcurrentConsumers);  }} @TO@ if ((limitConcurrentConsumers) && (consumers > maxConcurrentConsumers)) {  throw new IllegalArgumentException("The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than " + maxConcurrentConsumers);} @AT@ 2698 @LENGTH@ 457
---INS InfixExpression@@(limitConcurrentConsumers) && (consumers > maxConcurrentConsumers) @TO@ IfStatement@@if (limitConcurrentConsumers) {  consumers=(consumers < maxConcurrentConsumers) ? consumers : maxConcurrentConsumers;  if (consumers == maxConcurrentConsumers) {    LOG.info("The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than  " + maxConcurrentConsumers);    LOG.info("Concurrent Consumers set to " + maxConcurrentConsumers);  }} @AT@ 2702 @LENGTH@ 67
------INS ParenthesizedExpression@@(limitConcurrentConsumers) @TO@ InfixExpression@@(limitConcurrentConsumers) && (consumers > maxConcurrentConsumers) @AT@ 2702 @LENGTH@ 26
---------INS SimpleName@@limitConcurrentConsumers @TO@ ParenthesizedExpression@@(limitConcurrentConsumers) @AT@ 2703 @LENGTH@ 24
------INS Operator@@&& @TO@ InfixExpression@@(limitConcurrentConsumers) && (consumers > maxConcurrentConsumers) @AT@ 2728 @LENGTH@ 2
------INS ParenthesizedExpression@@(consumers > maxConcurrentConsumers) @TO@ InfixExpression@@(limitConcurrentConsumers) && (consumers > maxConcurrentConsumers) @AT@ 2732 @LENGTH@ 37
---------MOV InfixExpression@@consumers < maxConcurrentConsumers @TO@ ParenthesizedExpression@@(consumers > maxConcurrentConsumers) @AT@ 2755 @LENGTH@ 34
---DEL SimpleName@@limitConcurrentConsumers @AT@ 2702 @LENGTH@ 24
---DEL Block@@ThenBody:{  consumers=(consumers < maxConcurrentConsumers) ? consumers : maxConcurrentConsumers;  if (consumers == maxConcurrentConsumers) {    LOG.info("The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than  " + maxConcurrentConsumers);    LOG.info("Concurrent Consumers set to " + maxConcurrentConsumers);  }} @AT@ 2728 @LENGTH@ 427
------DEL ExpressionStatement@@Assignment:consumers=(consumers < maxConcurrentConsumers) ? consumers : maxConcurrentConsumers @AT@ 2742 @LENGTH@ 86
---------DEL Assignment@@consumers=(consumers < maxConcurrentConsumers) ? consumers : maxConcurrentConsumers @AT@ 2742 @LENGTH@ 85
------------DEL SimpleName@@consumers @AT@ 2742 @LENGTH@ 9
------------DEL Operator@@= @AT@ 2751 @LENGTH@ 1
------------DEL ConditionalExpression@@(consumers < maxConcurrentConsumers) ? consumers : maxConcurrentConsumers @AT@ 2754 @LENGTH@ 73
---------------DEL ParenthesizedExpression@@(consumers < maxConcurrentConsumers) @AT@ 2754 @LENGTH@ 36
---------------DEL SimpleName@@consumers @AT@ 2793 @LENGTH@ 9
---------------DEL SimpleName@@maxConcurrentConsumers @AT@ 2805 @LENGTH@ 22
------DEL IfStatement@@if (consumers == maxConcurrentConsumers) {  LOG.info("The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than  " + maxConcurrentConsumers);  LOG.info("Concurrent Consumers set to " + maxConcurrentConsumers);} @AT@ 2841 @LENGTH@ 304
---------DEL InfixExpression@@consumers == maxConcurrentConsumers @AT@ 2845 @LENGTH@ 35
------------DEL SimpleName@@consumers @AT@ 2845 @LENGTH@ 9
------------DEL Operator@@== @AT@ 2854 @LENGTH@ 2
------------DEL SimpleName@@maxConcurrentConsumers @AT@ 2858 @LENGTH@ 22
---MOV Block@@ThenBody:{  LOG.info("The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than  " + maxConcurrentConsumers);  LOG.info("Concurrent Consumers set to " + maxConcurrentConsumers);} @TO@ IfStatement@@if (limitConcurrentConsumers) {  consumers=(consumers < maxConcurrentConsumers) ? consumers : maxConcurrentConsumers;  if (consumers == maxConcurrentConsumers) {    LOG.info("The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than  " + maxConcurrentConsumers);    LOG.info("Concurrent Consumers set to " + maxConcurrentConsumers);  }} @AT@ 2882 @LENGTH@ 263
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than " + maxConcurrentConsumers) @TO@ Block@@ThenBody:{  LOG.info("The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than  " + maxConcurrentConsumers);  LOG.info("Concurrent Consumers set to " + maxConcurrentConsumers);} @AT@ 2785 @LENGTH@ 173
---------INS ClassInstanceCreation@@IllegalArgumentException["The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than " + maxConcurrentConsumers] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than " + maxConcurrentConsumers) @AT@ 2791 @LENGTH@ 166
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than " + maxConcurrentConsumers] @AT@ 2791 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than " + maxConcurrentConsumers] @AT@ 2795 @LENGTH@ 24
------------INS InfixExpression@@"The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than " + maxConcurrentConsumers @TO@ ClassInstanceCreation@@IllegalArgumentException["The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than " + maxConcurrentConsumers] @AT@ 2820 @LENGTH@ 136
---------------MOV StringLiteral@@"The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than  " @TO@ InfixExpression@@"The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than " + maxConcurrentConsumers @AT@ 2909 @LENGTH@ 112
---------------MOV Operator@@+ @TO@ InfixExpression@@"The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than " + maxConcurrentConsumers @AT@ 3021 @LENGTH@ 1
---------------MOV SimpleName@@maxConcurrentConsumers @TO@ InfixExpression@@"The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than " + maxConcurrentConsumers @AT@ 3024 @LENGTH@ 22
------DEL ExpressionStatement@@MethodInvocation:LOG.info("The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than  " + maxConcurrentConsumers) @AT@ 2900 @LENGTH@ 148
---------DEL MethodInvocation@@LOG.info("The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than  " + maxConcurrentConsumers) @AT@ 2900 @LENGTH@ 147
------------DEL SimpleName@@Name:LOG @AT@ 2900 @LENGTH@ 3
------------DEL SimpleName@@MethodName:info:["The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than  " + maxConcurrentConsumers] @AT@ 2904 @LENGTH@ 143
---------------DEL InfixExpression@@"The limitConcurrentConsumers flag in set to true. Concurrent Consumers cannot be set at a value greater than  " + maxConcurrentConsumers @AT@ 2909 @LENGTH@ 137
------DEL ExpressionStatement@@MethodInvocation:LOG.info("Concurrent Consumers set to " + maxConcurrentConsumers) @AT@ 3065 @LENGTH@ 66
---------DEL MethodInvocation@@LOG.info("Concurrent Consumers set to " + maxConcurrentConsumers) @AT@ 3065 @LENGTH@ 65
------------DEL SimpleName@@Name:LOG @AT@ 3065 @LENGTH@ 3
------------DEL SimpleName@@MethodName:info:["Concurrent Consumers set to " + maxConcurrentConsumers] @AT@ 3069 @LENGTH@ 61
---------------DEL InfixExpression@@"Concurrent Consumers set to " + maxConcurrentConsumers @AT@ 3074 @LENGTH@ 55
------------------DEL StringLiteral@@"Concurrent Consumers set to " @AT@ 3074 @LENGTH@ 30
------------------DEL Operator@@+ @AT@ 3104 @LENGTH@ 1
------------------DEL SimpleName@@maxConcurrentConsumers @AT@ 3107 @LENGTH@ 22


INS ExpressionStatement@@MethodInvocation:cookie.setPath("/") @TO@ MethodDeclaration@@private, Cookie[], MethodName:createLoginCookie, String cookieToken,  @AT@ 10690 @LENGTH@ 20
---INS MethodInvocation@@cookie.setPath("/") @TO@ ExpressionStatement@@MethodInvocation:cookie.setPath("/") @AT@ 10690 @LENGTH@ 19
------INS SimpleName@@Name:cookie @TO@ MethodInvocation@@cookie.setPath("/") @AT@ 10690 @LENGTH@ 6
------INS SimpleName@@MethodName:setPath:["/"] @TO@ MethodInvocation@@cookie.setPath("/") @AT@ 10697 @LENGTH@ 12
---------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:setPath:["/"] @AT@ 10705 @LENGTH@ 3


UPD Block@@ElseBody:if (possibles.isEmpty()) {  if (LOG.isTraceEnabled()) {    LOG.trace("No possible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} else {  if (operationsWithCustomAnnotation.size() == 1) {    MethodInfo answer=operationsWithCustomAnnotation.get(0);    if (LOG.isTraceEnabled()) {      LOG.trace("There are only one method with annotations so we choose it: " + answer);    }    return answer;  }  return chooseMethodWithCustomAnnotations(exchange,possibles);} @TO@ ElseBody:if (possibles.isEmpty()) {  if (LOG.isTraceEnabled()) {    LOG.trace("No possible methods so now trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} else {  if (operationsWithCustomAnnotation.size() == 1) {    MethodInfo answer=operationsWithCustomAnnotation.get(0);    if (LOG.isTraceEnabled()) {      LOG.trace("There are only one method with annotations so we choose it: " + answer);    }    return answer;  }  return chooseMethodWithCustomAnnotations(exchange,possibles);} @AT@ 20364 @LENGTH@ 2128
---UPD IfStatement@@if (possibles.isEmpty()) {  if (LOG.isTraceEnabled()) {    LOG.trace("No possible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} else {  if (operationsWithCustomAnnotation.size() == 1) {    MethodInfo answer=operationsWithCustomAnnotation.get(0);    if (LOG.isTraceEnabled()) {      LOG.trace("There are only one method with annotations so we choose it: " + answer);    }    return answer;  }  return chooseMethodWithCustomAnnotations(exchange,possibles);} @TO@ if (possibles.isEmpty()) {  if (LOG.isTraceEnabled()) {    LOG.trace("No possible methods so now trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} else {  if (operationsWithCustomAnnotation.size() == 1) {    MethodInfo answer=operationsWithCustomAnnotation.get(0);    if (LOG.isTraceEnabled()) {      LOG.trace("There are only one method with annotations so we choose it: " + answer);    }    return answer;  }  return chooseMethodWithCustomAnnotations(exchange,possibles);} @AT@ 20364 @LENGTH@ 2128
------UPD Block@@ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("No possible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} @TO@ ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("No possible methods so now trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} @AT@ 20389 @LENGTH@ 1499
---------UPD IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("No possible methods trying to convert body to parameter types");} @TO@ if (LOG.isTraceEnabled()) {  LOG.trace("No possible methods so now trying to convert body to parameter types");} @AT@ 20403 @LENGTH@ 133
------------UPD Block@@ThenBody:{  LOG.trace("No possible methods trying to convert body to parameter types");} @TO@ ThenBody:{  LOG.trace("No possible methods so now trying to convert body to parameter types");} @AT@ 20429 @LENGTH@ 107
---------------UPD ExpressionStatement@@MethodInvocation:LOG.trace("No possible methods trying to convert body to parameter types") @TO@ MethodInvocation:LOG.trace("No possible methods so now trying to convert body to parameter types") @AT@ 20447 @LENGTH@ 75
------------------UPD MethodInvocation@@LOG.trace("No possible methods trying to convert body to parameter types") @TO@ LOG.trace("No possible methods so now trying to convert body to parameter types") @AT@ 20447 @LENGTH@ 74
---------------------UPD SimpleName@@MethodName:trace:["No possible methods trying to convert body to parameter types"] @TO@ MethodName:trace:["No possible methods so now trying to convert body to parameter types"] @AT@ 20451 @LENGTH@ 70
------------------------UPD StringLiteral@@"No possible methods trying to convert body to parameter types" @TO@ "No possible methods so now trying to convert body to parameter types" @AT@ 20457 @LENGTH@ 63
---UPD IfStatement@@if (possibles.isEmpty()) {  if (LOG.isTraceEnabled()) {    LOG.trace("No possible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} else {  if (operationsWithCustomAnnotation.size() == 1) {    MethodInfo answer=operationsWithCustomAnnotation.get(0);    if (LOG.isTraceEnabled()) {      LOG.trace("There are only one method with annotations so we choose it: " + answer);    }    return answer;  }  return chooseMethodWithCustomAnnotations(exchange,possibles);} @TO@ if (possibles.isEmpty()) {  if (LOG.isTraceEnabled()) {    LOG.trace("No possible methods so now trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} else {  if (operationsWithCustomAnnotation.size() == 1) {    MethodInfo answer=operationsWithCustomAnnotation.get(0);    if (LOG.isTraceEnabled()) {      LOG.trace("There are only one method with annotations so we choose it: " + answer);    }    return answer;  }  return chooseMethodWithCustomAnnotations(exchange,possibles);} @AT@ 20364 @LENGTH@ 2128
------UPD Block@@ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("No possible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} @TO@ ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("No possible methods so now trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} @AT@ 20389 @LENGTH@ 1499
---------UPD IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("No possible methods trying to convert body to parameter types");} @TO@ if (LOG.isTraceEnabled()) {  LOG.trace("No possible methods so now trying to convert body to parameter types");} @AT@ 20403 @LENGTH@ 133
------------UPD Block@@ThenBody:{  LOG.trace("No possible methods trying to convert body to parameter types");} @TO@ ThenBody:{  LOG.trace("No possible methods so now trying to convert body to parameter types");} @AT@ 20429 @LENGTH@ 107
---------------UPD ExpressionStatement@@MethodInvocation:LOG.trace("No possible methods trying to convert body to parameter types") @TO@ MethodInvocation:LOG.trace("No possible methods so now trying to convert body to parameter types") @AT@ 20447 @LENGTH@ 75
------------------UPD MethodInvocation@@LOG.trace("No possible methods trying to convert body to parameter types") @TO@ LOG.trace("No possible methods so now trying to convert body to parameter types") @AT@ 20447 @LENGTH@ 74
---------------------UPD SimpleName@@MethodName:trace:["No possible methods trying to convert body to parameter types"] @TO@ MethodName:trace:["No possible methods so now trying to convert body to parameter types"] @AT@ 20451 @LENGTH@ 70
------------------------UPD StringLiteral@@"No possible methods trying to convert body to parameter types" @TO@ "No possible methods so now trying to convert body to parameter types" @AT@ 20457 @LENGTH@ 63


UPD TypeDeclaration@@[@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]JobViewTests, AbstractManagerViewTests @TO@ [@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]JobViewTests, AbstractManagerViewTests @AT@ 1508 @LENGTH@ 2542
---UPD NormalAnnotation@@@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml") @TO@ @ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml") @AT@ 1508 @LENGTH@ 142


UPD VariableDeclarationStatement@@Consumer consumer=(SedaConsumer)seda.createConsumer(new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @TO@ Consumer consumer=seda.createConsumer(new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @AT@ 3987 @LENGTH@ 198
---UPD VariableDeclarationFragment@@consumer=(SedaConsumer)seda.createConsumer(new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @TO@ consumer=seda.createConsumer(new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 3996 @LENGTH@ 188
------DEL CastExpression@@(SedaConsumer)seda.createConsumer(new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 4007 @LENGTH@ 177
---------DEL SimpleType@@SedaConsumer @AT@ 4008 @LENGTH@ 12
------MOV MethodInvocation@@seda.createConsumer(new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @TO@ VariableDeclarationFragment@@consumer=(SedaConsumer)seda.createConsumer(new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 4022 @LENGTH@ 162


UPD ExpressionStatement@@Assignment:this.names=names @TO@ Assignment:this.names=Arrays.asList(names).toArray(new String[names.length]) @AT@ 1402 @LENGTH@ 19
---UPD Assignment@@this.names=names @TO@ this.names=Arrays.asList(names).toArray(new String[names.length]) @AT@ 1402 @LENGTH@ 18
------DEL SimpleName@@names @AT@ 1415 @LENGTH@ 5
------INS MethodInvocation@@Arrays.asList(names).toArray(new String[names.length]) @TO@ Assignment@@this.names=names @AT@ 1440 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:asList:[names] @TO@ MethodInvocation@@Arrays.asList(names).toArray(new String[names.length]) @AT@ 1440 @LENGTH@ 20
------------INS SimpleName@@names @TO@ MethodInvocation@@MethodName:asList:[names] @AT@ 1454 @LENGTH@ 5
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(names).toArray(new String[names.length]) @AT@ 1440 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[new String[names.length]] @TO@ MethodInvocation@@Arrays.asList(names).toArray(new String[names.length]) @AT@ 1461 @LENGTH@ 33
------------INS ArrayCreation@@new String[names.length] @TO@ SimpleName@@MethodName:toArray:[new String[names.length]] @AT@ 1469 @LENGTH@ 24
---------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[names.length] @AT@ 1473 @LENGTH@ 20
------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 1473 @LENGTH@ 6
---------------INS QualifiedName@@names.length @TO@ ArrayCreation@@new String[names.length] @AT@ 1480 @LENGTH@ 12
------------------INS SimpleName@@names @TO@ QualifiedName@@names.length @AT@ 1480 @LENGTH@ 5
------------------INS SimpleName@@length @TO@ QualifiedName@@names.length @AT@ 1486 @LENGTH@ 6


UPD VariableDeclarationStatement@@ErrorHandlerBuilder b=deadLetterChannel("mock:b").maximumRedeliveries(2).redeliverDelay(0).logStackTrace(false).handled(true); @TO@ ErrorHandlerBuilder b=deadLetterChannel("mock:b").maximumRedeliveries(2).redeliveryDelay(0).logStackTrace(false).handled(true); @AT@ 2510 @LENGTH@ 149
---UPD VariableDeclarationFragment@@b=deadLetterChannel("mock:b").maximumRedeliveries(2).redeliverDelay(0).logStackTrace(false).handled(true) @TO@ b=deadLetterChannel("mock:b").maximumRedeliveries(2).redeliveryDelay(0).logStackTrace(false).handled(true) @AT@ 2530 @LENGTH@ 128
------UPD MethodInvocation@@deadLetterChannel("mock:b").maximumRedeliveries(2).redeliverDelay(0).logStackTrace(false).handled(true) @TO@ deadLetterChannel("mock:b").maximumRedeliveries(2).redeliveryDelay(0).logStackTrace(false).handled(true) @AT@ 2534 @LENGTH@ 124
---------UPD MethodInvocation@@MethodName:redeliverDelay:[0] @TO@ MethodName:redeliveryDelay:[0] @AT@ 2534 @LENGTH@ 89


UPD EnhancedForStatement@@for (ProcessorDefinition<?> processor : outputs) {  if (processor.getParent() == null && !(processor instanceof SendDefinition)) {    ProcessorDefinitionRenderer.render(buffer,processor);    buffer.append(";");  }} @TO@ for (ProcessorDefinition processor : outputs) {  if (processor.getParent() == null && !(processor instanceof SendDefinition)) {    ProcessorDefinitionRenderer.render(buffer,processor);    buffer.append(";");  }} @AT@ 2188 @LENGTH@ 272
---UPD SingleVariableDeclaration@@ProcessorDefinition<?> processor @TO@ ProcessorDefinition processor @AT@ 2193 @LENGTH@ 32
------DEL ParameterizedType@@ProcessorDefinition<?> @AT@ 2193 @LENGTH@ 22
---------DEL SimpleType@@ProcessorDefinition @AT@ 2193 @LENGTH@ 19
---------DEL WildcardType@@? @AT@ 2213 @LENGTH@ 1
------INS SimpleType@@ProcessorDefinition @TO@ SingleVariableDeclaration@@ProcessorDefinition<?> processor @AT@ 2193 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:onException(Exception.class).handled(true).useOriginalBody().redeliverDelay(0).maximumRedeliveries(2).to("mock:error") @TO@ MethodInvocation:onException(Exception.class).handled(true).useOriginalBody().redeliveryDelay(0).maximumRedeliveries(2).to("mock:error") @AT@ 3786 @LENGTH@ 224
---UPD MethodInvocation@@onException(Exception.class).handled(true).useOriginalBody().redeliverDelay(0).maximumRedeliveries(2).to("mock:error") @TO@ onException(Exception.class).handled(true).useOriginalBody().redeliveryDelay(0).maximumRedeliveries(2).to("mock:error") @AT@ 3786 @LENGTH@ 223
------UPD MethodInvocation@@MethodName:redeliverDelay:[0] @TO@ MethodName:redeliveryDelay:[0] @AT@ 3786 @LENGTH@ 141


INS ExpressionStatement@@MethodInvocation:context.startRoute("foo") @TO@ MethodDeclaration@@public, void, MethodName:testAsyncStress, Exception,  @AT@ 1638 @LENGTH@ 26
---INS MethodInvocation@@context.startRoute("foo") @TO@ ExpressionStatement@@MethodInvocation:context.startRoute("foo") @AT@ 1638 @LENGTH@ 25
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.startRoute("foo") @AT@ 1638 @LENGTH@ 7
------INS SimpleName@@MethodName:startRoute:["foo"] @TO@ MethodInvocation@@context.startRoute("foo") @AT@ 1646 @LENGTH@ 17
---------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:startRoute:["foo"] @AT@ 1657 @LENGTH@ 5


UPD VariableDeclarationStatement@@Class from=file.getBody().getClass(); @TO@ Class<?> from=file.getBody().getClass(); @AT@ 2235 @LENGTH@ 39
---INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class from=file.getBody().getClass(); @AT@ 2235 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 2235 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 2241 @LENGTH@ 1
---DEL SimpleType@@Class @AT@ 2235 @LENGTH@ 5


UPD VariableDeclarationStatement@@Map headers=new HashMap(); @TO@ Map<String,Object> headers=new HashMap<String,Object>(); @AT@ 1820 @LENGTH@ 28
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map headers=new HashMap(); @AT@ 1820 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1820 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1824 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1832 @LENGTH@ 6
---DEL SimpleType@@Map @AT@ 1820 @LENGTH@ 3
---UPD VariableDeclarationFragment@@headers=new HashMap() @TO@ headers=new HashMap<String,Object>() @AT@ 1824 @LENGTH@ 23
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 1834 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 1838 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 1854 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1854 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1862 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1870 @LENGTH@ 6


UPD Block@@ThenBody:{  Component component=getComponent("properties");  if (component == null) {    throw new IllegalArgumentException("PropertiesComponent with name properties must be defined" + " in CamelContext to support property placeholders in endpoint URIs");  }  PropertiesComponent pc=getTypeConverter().mandatoryConvertTo(PropertiesComponent.class,component);  String answer=pc.parseUri(uri);  if (LOG.isDebugEnabled()) {    LOG.debug("Resolved uri: " + uri + " --> "+ answer);  }  return answer;} @TO@ ThenBody:{  Component component=hasComponent("properties");  if (component == null) {    component=getRegistry().lookup("properties",Component.class);  }  if (component == null) {    throw new IllegalArgumentException("PropertiesComponent with name properties must be defined" + " in CamelContext to support property placeholders in endpoint URIs");  }  PropertiesComponent pc=getComponent("properties",PropertiesComponent.class);  String answer=pc.parseUri(uri);  if (LOG.isDebugEnabled()) {    LOG.debug("Resolved uri: " + uri + " --> "+ answer);  }  return answer;} @AT@ 29204 @LENGTH@ 834
---UPD VariableDeclarationStatement@@Component component=getComponent("properties"); @TO@ Component component=hasComponent("properties"); @AT@ 29333 @LENGTH@ 49
------UPD VariableDeclarationFragment@@component=getComponent("properties") @TO@ component=hasComponent("properties") @AT@ 29343 @LENGTH@ 38
---------UPD MethodInvocation@@getComponent("properties") @TO@ hasComponent("properties") @AT@ 29355 @LENGTH@ 26
------------UPD SimpleName@@MethodName:getComponent:["properties"] @TO@ MethodName:hasComponent:["properties"] @AT@ 29355 @LENGTH@ 26
---INS IfStatement@@if (component == null) {  component=getRegistry().lookup("properties",Component.class);} @TO@ Block@@ThenBody:{  Component component=getComponent("properties");  if (component == null) {    throw new IllegalArgumentException("PropertiesComponent with name properties must be defined" + " in CamelContext to support property placeholders in endpoint URIs");  }  PropertiesComponent pc=getTypeConverter().mandatoryConvertTo(PropertiesComponent.class,component);  String answer=pc.parseUri(uri);  if (LOG.isDebugEnabled()) {    LOG.debug("Resolved uri: " + uri + " --> "+ answer);  }  return answer;} @AT@ 29395 @LENGTH@ 176
------INS InfixExpression@@component == null @TO@ IfStatement@@if (component == null) {  component=getRegistry().lookup("properties",Component.class);} @AT@ 29399 @LENGTH@ 17
---------INS SimpleName@@component @TO@ InfixExpression@@component == null @AT@ 29399 @LENGTH@ 9
---------INS Operator@@== @TO@ InfixExpression@@component == null @AT@ 29408 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@component == null @AT@ 29412 @LENGTH@ 4
------INS Block@@ThenBody:{  component=getRegistry().lookup("properties",Component.class);} @TO@ IfStatement@@if (component == null) {  component=getRegistry().lookup("properties",Component.class);} @AT@ 29418 @LENGTH@ 153
---------INS ExpressionStatement@@Assignment:component=getRegistry().lookup("properties",Component.class) @TO@ Block@@ThenBody:{  component=getRegistry().lookup("properties",Component.class);} @AT@ 29493 @LENGTH@ 64
------------INS Assignment@@component=getRegistry().lookup("properties",Component.class) @TO@ ExpressionStatement@@Assignment:component=getRegistry().lookup("properties",Component.class) @AT@ 29493 @LENGTH@ 63
---------------INS SimpleName@@component @TO@ Assignment@@component=getRegistry().lookup("properties",Component.class) @AT@ 29493 @LENGTH@ 9
---------------INS Operator@@= @TO@ Assignment@@component=getRegistry().lookup("properties",Component.class) @AT@ 29502 @LENGTH@ 1
---------------INS MethodInvocation@@getRegistry().lookup("properties",Component.class) @TO@ Assignment@@component=getRegistry().lookup("properties",Component.class) @AT@ 29505 @LENGTH@ 51
------------------INS MethodInvocation@@MethodName:getRegistry:[] @TO@ MethodInvocation@@getRegistry().lookup("properties",Component.class) @AT@ 29505 @LENGTH@ 13
------------------INS SimpleName@@MethodName:lookup:["properties", Component.class] @TO@ MethodInvocation@@getRegistry().lookup("properties",Component.class) @AT@ 29519 @LENGTH@ 37
---------------------INS StringLiteral@@"properties" @TO@ SimpleName@@MethodName:lookup:["properties", Component.class] @AT@ 29526 @LENGTH@ 12
---------------------INS TypeLiteral@@Component.class @TO@ SimpleName@@MethodName:lookup:["properties", Component.class] @AT@ 29540 @LENGTH@ 15
---UPD VariableDeclarationStatement@@PropertiesComponent pc=getTypeConverter().mandatoryConvertTo(PropertiesComponent.class,component); @TO@ PropertiesComponent pc=getComponent("properties",PropertiesComponent.class); @AT@ 29653 @LENGTH@ 101
------UPD VariableDeclarationFragment@@pc=getTypeConverter().mandatoryConvertTo(PropertiesComponent.class,component) @TO@ pc=getComponent("properties",PropertiesComponent.class) @AT@ 29673 @LENGTH@ 80
---------UPD MethodInvocation@@getTypeConverter().mandatoryConvertTo(PropertiesComponent.class,component) @TO@ getComponent("properties",PropertiesComponent.class) @AT@ 29678 @LENGTH@ 75
------------DEL MethodInvocation@@MethodName:getTypeConverter:[] @AT@ 29678 @LENGTH@ 18
------------UPD SimpleName@@MethodName:mandatoryConvertTo:[PropertiesComponent.class, component] @TO@ MethodName:getComponent:["properties", PropertiesComponent.class] @AT@ 29697 @LENGTH@ 56
---------------DEL SimpleName@@component @AT@ 29743 @LENGTH@ 9
---------------INS StringLiteral@@"properties" @TO@ SimpleName@@MethodName:mandatoryConvertTo:[PropertiesComponent.class, component] @AT@ 29955 @LENGTH@ 12


UPD FieldDeclaration@@byte, [LF_PAX_EXTENDED_HEADER=(byte)'x'] @TO@ byte, [LF_PAX_EXTENDED_HEADER_LC=(byte)'x'] @AT@ 3826 @LENGTH@ 41
---UPD VariableDeclarationFragment@@LF_PAX_EXTENDED_HEADER=(byte)'x' @TO@ LF_PAX_EXTENDED_HEADER_LC=(byte)'x' @AT@ 3831 @LENGTH@ 35
------UPD SimpleName@@LF_PAX_EXTENDED_HEADER @TO@ LF_PAX_EXTENDED_HEADER_LC @AT@ 3831 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:assertTrue(endpoint.getBus().getInInterceptors().size() == 1) @TO@ MethodInvocation:assertTrue(endpoint.getBus().getInInterceptors().size() >= 1) @AT@ 1827 @LENGTH@ 62
---UPD MethodInvocation@@assertTrue(endpoint.getBus().getInInterceptors().size() == 1) @TO@ assertTrue(endpoint.getBus().getInInterceptors().size() >= 1) @AT@ 1827 @LENGTH@ 61
------UPD SimpleName@@MethodName:assertTrue:[endpoint.getBus().getInInterceptors().size() == 1] @TO@ MethodName:assertTrue:[endpoint.getBus().getInInterceptors().size() >= 1] @AT@ 1827 @LENGTH@ 61
---------UPD InfixExpression@@endpoint.getBus().getInInterceptors().size() == 1 @TO@ endpoint.getBus().getInInterceptors().size() >= 1 @AT@ 1838 @LENGTH@ 49
------------UPD Operator@@== @TO@ >= @AT@ 1882 @LENGTH@ 2


INS IfStatement@@if (exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class)) {  return new InputStreamRequestEntity(GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),in),ExchangeHelper.getContentType(exchange));} else {  return new InputStreamRequestEntity(in);} @TO@ MethodDeclaration@@private, RequestEntity, MethodName:asRequestEntity, InputStream in, Exchange exchange, IOException,  @AT@ 2254 @LENGTH@ 421
---INS InfixExpression@@exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @TO@ IfStatement@@if (exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class)) {  return new InputStreamRequestEntity(GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),in),ExchangeHelper.getContentType(exchange));} else {  return new InputStreamRequestEntity(in);} @AT@ 2258 @LENGTH@ 112
------INS InfixExpression@@exchange == null @TO@ InfixExpression@@exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2258 @LENGTH@ 16
---------INS SimpleName@@exchange @TO@ InfixExpression@@exchange == null @AT@ 2258 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@exchange == null @AT@ 2266 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange == null @AT@ 2270 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2274 @LENGTH@ 2
------INS PrefixExpression@@!exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @TO@ InfixExpression@@exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2290 @LENGTH@ 80
---------INS Operator@@! @TO@ PrefixExpression@@!exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2290 @LENGTH@ 1
---------INS MethodInvocation@@exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @TO@ PrefixExpression@@!exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2291 @LENGTH@ 79
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2291 @LENGTH@ 8
------------INS SimpleName@@MethodName:getProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.FALSE, Boolean.class] @TO@ MethodInvocation@@exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 2300 @LENGTH@ 70
---------------INS QualifiedName@@Exchange.SKIP_GZIP_ENCODING @TO@ SimpleName@@MethodName:getProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.FALSE, Boolean.class] @AT@ 2312 @LENGTH@ 27
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.SKIP_GZIP_ENCODING @AT@ 2312 @LENGTH@ 8
------------------INS SimpleName@@SKIP_GZIP_ENCODING @TO@ QualifiedName@@Exchange.SKIP_GZIP_ENCODING @AT@ 2321 @LENGTH@ 18
---------------INS QualifiedName@@Boolean.FALSE @TO@ SimpleName@@MethodName:getProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.FALSE, Boolean.class] @AT@ 2341 @LENGTH@ 13
------------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.FALSE @AT@ 2341 @LENGTH@ 7
------------------INS SimpleName@@FALSE @TO@ QualifiedName@@Boolean.FALSE @AT@ 2349 @LENGTH@ 5
---------------INS TypeLiteral@@Boolean.class @TO@ SimpleName@@MethodName:getProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.FALSE, Boolean.class] @AT@ 2356 @LENGTH@ 13
---INS Block@@ThenBody:{  return new InputStreamRequestEntity(GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),in),ExchangeHelper.getContentType(exchange));} @TO@ IfStatement@@if (exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class)) {  return new InputStreamRequestEntity(GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),in),ExchangeHelper.getContentType(exchange));} else {  return new InputStreamRequestEntity(in);} @AT@ 2372 @LENGTH@ 233
------MOV ReturnStatement@@ClassInstanceCreation:new InputStreamRequestEntity(GZIPHelper.toGZIPInputStream(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),data),ExchangeHelper.getContentType(exchange)) @TO@ Block@@ThenBody:{  return new InputStreamRequestEntity(GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),in),ExchangeHelper.getContentType(exchange));} @AT@ 2572 @LENGTH@ 236
---INS Block@@ElseBody:{  return new InputStreamRequestEntity(in);} @TO@ IfStatement@@if (exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class)) {  return new InputStreamRequestEntity(GZIPHelper.compressGzip(exchange.getIn().getHeader(Exchange.CONTENT_ENCODING,String.class),in),ExchangeHelper.getContentType(exchange));} else {  return new InputStreamRequestEntity(in);} @AT@ 2611 @LENGTH@ 64
------INS ReturnStatement@@ClassInstanceCreation:new InputStreamRequestEntity(in) @TO@ Block@@ElseBody:{  return new InputStreamRequestEntity(in);} @AT@ 2625 @LENGTH@ 40
---------INS ClassInstanceCreation@@InputStreamRequestEntity[in] @TO@ ReturnStatement@@ClassInstanceCreation:new InputStreamRequestEntity(in) @AT@ 2632 @LENGTH@ 32
------------INS New@@new @TO@ ClassInstanceCreation@@InputStreamRequestEntity[in] @AT@ 2632 @LENGTH@ 3
------------INS SimpleType@@InputStreamRequestEntity @TO@ ClassInstanceCreation@@InputStreamRequestEntity[in] @AT@ 2636 @LENGTH@ 24
------------INS SimpleName@@in @TO@ ClassInstanceCreation@@InputStreamRequestEntity[in] @AT@ 2661 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:buffer.append(names[i] + "=" + getAttribute(name)) @TO@ MethodInvocation:buffer.append(names[i]).append("=").append(getAttribute(name)) @AT@ 3834 @LENGTH@ 51
---UPD MethodInvocation@@buffer.append(names[i] + "=" + getAttribute(name)) @TO@ buffer.append(names[i]).append("=").append(getAttribute(name)) @AT@ 3834 @LENGTH@ 50
------INS MethodInvocation@@MethodName:append:["="] @TO@ MethodInvocation@@buffer.append(names[i] + "=" + getAttribute(name)) @AT@ 3834 @LENGTH@ 35
---------INS StringLiteral@@"=" @TO@ MethodInvocation@@MethodName:append:["="] @AT@ 3865 @LENGTH@ 3
------INS MethodInvocation@@MethodName:append:[names[i]] @TO@ MethodInvocation@@buffer.append(names[i] + "=" + getAttribute(name)) @AT@ 3834 @LENGTH@ 23
---------INS ArrayAccess@@names[i] @TO@ MethodInvocation@@MethodName:append:[names[i]] @AT@ 3848 @LENGTH@ 8
------------INS SimpleName@@names @TO@ ArrayAccess@@names[i] @AT@ 3848 @LENGTH@ 5
------------INS SimpleName@@i @TO@ ArrayAccess@@names[i] @AT@ 3854 @LENGTH@ 1
------UPD SimpleName@@MethodName:append:[names[i] + "=" + getAttribute(name)] @TO@ MethodName:append:[getAttribute(name)] @AT@ 3841 @LENGTH@ 43
---------DEL InfixExpression@@names[i] + "=" + getAttribute(name) @AT@ 3848 @LENGTH@ 35
------------DEL ArrayAccess@@names[i] @AT@ 3848 @LENGTH@ 8
---------------DEL SimpleName@@names @AT@ 3848 @LENGTH@ 5
---------------DEL SimpleName@@i @AT@ 3854 @LENGTH@ 1
------------DEL Operator@@+ @AT@ 3856 @LENGTH@ 1
------------DEL StringLiteral@@"=" @AT@ 3859 @LENGTH@ 3
---------MOV MethodInvocation@@getAttribute(name) @TO@ SimpleName@@MethodName:append:[names[i] + "=" + getAttribute(name)] @AT@ 3865 @LENGTH@ 18


INS MethodDeclaration@@private, voidMethodName:NettyPayloadHelper,  @TO@ TypeDeclaration@@[public, final]NettyPayloadHelper,  @AT@ 1319 @LENGTH@ 59
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:NettyPayloadHelper,  @AT@ 1319 @LENGTH@ 7
---INS SimpleName@@MethodName:NettyPayloadHelper @TO@ MethodDeclaration@@private, voidMethodName:NettyPayloadHelper,  @AT@ 1327 @LENGTH@ 18


UPD IfStatement@@if (this.concurrentMethods == null) {  return Collections.EMPTY_MAP;} @TO@ if (this.concurrentMethods == null) {  this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>();} @AT@ 6287 @LENGTH@ 90
---UPD Block@@ThenBody:{  return Collections.EMPTY_MAP;} @TO@ ThenBody:{  this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>();} @AT@ 6329 @LENGTH@ 48
------INS ExpressionStatement@@Assignment:this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>() @TO@ Block@@ThenBody:{  return Collections.EMPTY_MAP;} @AT@ 6340 @LENGTH@ 86
---------INS Assignment@@this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>() @TO@ ExpressionStatement@@Assignment:this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>() @AT@ 6340 @LENGTH@ 85
------------INS FieldAccess@@this.concurrentMethods @TO@ Assignment@@this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>() @AT@ 6340 @LENGTH@ 22
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.concurrentMethods @AT@ 6340 @LENGTH@ 4
---------------INS SimpleName@@concurrentMethods @TO@ FieldAccess@@this.concurrentMethods @AT@ 6345 @LENGTH@ 17
------------INS Operator@@= @TO@ Assignment@@this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>() @AT@ 6362 @LENGTH@ 1
------------INS ClassInstanceCreation@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>[] @TO@ Assignment@@this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>() @AT@ 6365 @LENGTH@ 60
---------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>[] @AT@ 6365 @LENGTH@ 3
---------------INS ParameterizedType@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData> @TO@ ClassInstanceCreation@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>[] @AT@ 6369 @LENGTH@ 54
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData> @AT@ 6369 @LENGTH@ 7
------------------INS SimpleType@@NamedMethodMetaData @TO@ ParameterizedType@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData> @AT@ 6377 @LENGTH@ 19
------------------INS SimpleType@@ConcurrentMethodMetaData @TO@ ParameterizedType@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData> @AT@ 6398 @LENGTH@ 24
------DEL ReturnStatement@@QualifiedName:Collections.EMPTY_MAP @AT@ 6340 @LENGTH@ 29
---------DEL QualifiedName@@Collections.EMPTY_MAP @AT@ 6347 @LENGTH@ 21
------------DEL SimpleName@@Collections @AT@ 6347 @LENGTH@ 11
------------DEL SimpleName@@EMPTY_MAP @AT@ 6359 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testDummy,  @TO@ TypeDeclaration@@[public]FileConsumerAbsoluteRootPathDefaultMoveTest, ContextTestSupport @AT@ 1388 @LENGTH@ 46
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDummy,  @AT@ 1388 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDummy,  @AT@ 1395 @LENGTH@ 4
---INS SimpleName@@MethodName:testDummy @TO@ MethodDeclaration@@public, void, MethodName:testDummy,  @AT@ 1400 @LENGTH@ 9


DEL MethodDeclaration@@public, void, MethodName:testCacheProducers, Exception,  @AT@ 1052 @LENGTH@ 539
---DEL Modifier@@public @AT@ 1052 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1059 @LENGTH@ 4
---DEL SimpleName@@MethodName:testCacheProducers @AT@ 1064 @LENGTH@ 18
---DEL SimpleType@@Exception @AT@ 1092 @LENGTH@ 9
---DEL VariableDeclarationStatement@@ProducerCache cache=new ProducerCache(context); @AT@ 1112 @LENGTH@ 49
------DEL SimpleType@@ProducerCache @AT@ 1112 @LENGTH@ 13
------DEL VariableDeclarationFragment@@cache=new ProducerCache(context) @AT@ 1126 @LENGTH@ 34
---------DEL SimpleName@@cache @AT@ 1126 @LENGTH@ 5
---------DEL ClassInstanceCreation@@ProducerCache[context] @AT@ 1134 @LENGTH@ 26
------------DEL New@@new @AT@ 1134 @LENGTH@ 3
------------DEL SimpleType@@ProducerCache @AT@ 1138 @LENGTH@ 13
------------DEL SimpleName@@context @AT@ 1152 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:cache.start() @AT@ 1170 @LENGTH@ 14
------DEL MethodInvocation@@cache.start() @AT@ 1170 @LENGTH@ 13
---------DEL SimpleName@@Name:cache @AT@ 1170 @LENGTH@ 5
---------DEL SimpleName@@MethodName:start:[] @AT@ 1176 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:assertEquals("Size should be 0",0,cache.size()) @AT@ 1194 @LENGTH@ 50
------DEL MethodInvocation@@assertEquals("Size should be 0",0,cache.size()) @AT@ 1194 @LENGTH@ 49
---------DEL SimpleName@@MethodName:assertEquals:["Size should be 0", 0, cache.size()] @AT@ 1194 @LENGTH@ 49
------------DEL StringLiteral@@"Size should be 0" @AT@ 1207 @LENGTH@ 18
------------DEL NumberLiteral@@0 @AT@ 1227 @LENGTH@ 1
------------DEL MethodInvocation@@cache.size() @AT@ 1230 @LENGTH@ 12
---------------DEL SimpleName@@Name:cache @AT@ 1230 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:size:[] @AT@ 1236 @LENGTH@ 6
---DEL ForStatement@@for (int i=0; i < 1003; i++) {  Endpoint e=context.getEndpoint("direct:queue:" + i);  Producer p=cache.getProducer(e);} @AT@ 1341 @LENGTH@ 156
------DEL VariableDeclarationExpression@@int i=0 @AT@ 1346 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 1346 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 1350 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 1350 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 1354 @LENGTH@ 1
------DEL InfixExpression@@i < 1003 @AT@ 1357 @LENGTH@ 8
---------DEL SimpleName@@i @AT@ 1357 @LENGTH@ 1
---------DEL Operator@@< @AT@ 1358 @LENGTH@ 1
---------DEL NumberLiteral@@1003 @AT@ 1361 @LENGTH@ 4
------DEL PostfixExpression@@i++ @AT@ 1367 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 1367 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 1369 @LENGTH@ 2
------DEL VariableDeclarationStatement@@Endpoint e=context.getEndpoint("direct:queue:" + i); @AT@ 1386 @LENGTH@ 54
---------DEL SimpleType@@Endpoint @AT@ 1386 @LENGTH@ 8
---------DEL VariableDeclarationFragment@@e=context.getEndpoint("direct:queue:" + i) @AT@ 1395 @LENGTH@ 44
------------DEL SimpleName@@e @AT@ 1395 @LENGTH@ 1
------------DEL MethodInvocation@@context.getEndpoint("direct:queue:" + i) @AT@ 1399 @LENGTH@ 40
---------------DEL SimpleName@@Name:context @AT@ 1399 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getEndpoint:["direct:queue:" + i] @AT@ 1407 @LENGTH@ 32
------------------DEL InfixExpression@@"direct:queue:" + i @AT@ 1419 @LENGTH@ 19
---------------------DEL StringLiteral@@"direct:queue:" @AT@ 1419 @LENGTH@ 15
---------------------DEL Operator@@+ @AT@ 1434 @LENGTH@ 1
---------------------DEL SimpleName@@i @AT@ 1437 @LENGTH@ 1
------DEL VariableDeclarationStatement@@Producer p=cache.getProducer(e); @AT@ 1453 @LENGTH@ 34
---------DEL SimpleType@@Producer @AT@ 1453 @LENGTH@ 8
---------DEL VariableDeclarationFragment@@p=cache.getProducer(e) @AT@ 1462 @LENGTH@ 24
------------DEL SimpleName@@p @AT@ 1462 @LENGTH@ 1
------------DEL MethodInvocation@@cache.getProducer(e) @AT@ 1466 @LENGTH@ 20
---------------DEL SimpleName@@Name:cache @AT@ 1466 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getProducer:[e] @AT@ 1472 @LENGTH@ 14
------------------DEL SimpleName@@e @AT@ 1484 @LENGTH@ 1
---DEL ExpressionStatement@@MethodInvocation:assertEquals("Size should be 1000",1000,cache.size()) @AT@ 1507 @LENGTH@ 56
------DEL MethodInvocation@@assertEquals("Size should be 1000",1000,cache.size()) @AT@ 1507 @LENGTH@ 55
---------DEL SimpleName@@MethodName:assertEquals:["Size should be 1000", 1000, cache.size()] @AT@ 1507 @LENGTH@ 55
------------DEL StringLiteral@@"Size should be 1000" @AT@ 1520 @LENGTH@ 21
------------DEL NumberLiteral@@1000 @AT@ 1543 @LENGTH@ 4
------------DEL MethodInvocation@@cache.size() @AT@ 1549 @LENGTH@ 12
---------------DEL SimpleName@@Name:cache @AT@ 1549 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:size:[] @AT@ 1555 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:cache.stop() @AT@ 1572 @LENGTH@ 13
------DEL MethodInvocation@@cache.stop() @AT@ 1572 @LENGTH@ 12
---------DEL SimpleName@@Name:cache @AT@ 1572 @LENGTH@ 5
---------DEL SimpleName@@MethodName:stop:[] @AT@ 1578 @LENGTH@ 6


UPD FieldDeclaration@@private, boolean, [isImplicit=false] @TO@ private, boolean, [isImplicit] @AT@ 1085 @LENGTH@ 35
---UPD VariableDeclarationFragment@@isImplicit=false @TO@ isImplicit @AT@ 1101 @LENGTH@ 18
------DEL BooleanLiteral@@false @AT@ 1114 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:assertEquals("",Base64.encodeBase64String(StringUtils.getBytesUtf8(""))) @TO@ MethodDeclaration@@public, void, MethodName:testRfc4648Section10Encode,  @AT@ 24710 @LENGTH@ 74
---INS MethodInvocation@@assertEquals("",Base64.encodeBase64String(StringUtils.getBytesUtf8(""))) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("",Base64.encodeBase64String(StringUtils.getBytesUtf8(""))) @AT@ 24710 @LENGTH@ 73
------INS SimpleName@@MethodName:assertEquals:["", Base64.encodeBase64String(StringUtils.getBytesUtf8(""))] @TO@ MethodInvocation@@assertEquals("",Base64.encodeBase64String(StringUtils.getBytesUtf8(""))) @AT@ 24710 @LENGTH@ 73
---------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertEquals:["", Base64.encodeBase64String(StringUtils.getBytesUtf8(""))] @AT@ 24723 @LENGTH@ 2
---------INS MethodInvocation@@Base64.encodeBase64String(StringUtils.getBytesUtf8("")) @TO@ SimpleName@@MethodName:assertEquals:["", Base64.encodeBase64String(StringUtils.getBytesUtf8(""))] @AT@ 24727 @LENGTH@ 55
------------INS SimpleName@@Name:Base64 @TO@ MethodInvocation@@Base64.encodeBase64String(StringUtils.getBytesUtf8("")) @AT@ 24727 @LENGTH@ 6
------------INS SimpleName@@MethodName:encodeBase64String:[StringUtils.getBytesUtf8("")] @TO@ MethodInvocation@@Base64.encodeBase64String(StringUtils.getBytesUtf8("")) @AT@ 24734 @LENGTH@ 48
---------------INS MethodInvocation@@StringUtils.getBytesUtf8("") @TO@ SimpleName@@MethodName:encodeBase64String:[StringUtils.getBytesUtf8("")] @AT@ 24753 @LENGTH@ 28
------------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.getBytesUtf8("") @AT@ 24753 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getBytesUtf8:[""] @TO@ MethodInvocation@@StringUtils.getBytesUtf8("") @AT@ 24765 @LENGTH@ 16
---------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:getBytesUtf8:[""] @AT@ 24778 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:mock.message(0).constant("<span style=\"font-size=22px;\">Minnie Mouse</span>") @TO@ MethodInvocation:mock.message(0).body().contains("<span style=\"font-size=22px;\">Minnie Mouse</span>") @AT@ 1310 @LENGTH@ 80
---UPD MethodInvocation@@mock.message(0).constant("<span style=\"font-size=22px;\">Minnie Mouse</span>") @TO@ mock.message(0).body().contains("<span style=\"font-size=22px;\">Minnie Mouse</span>") @AT@ 1310 @LENGTH@ 79
------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@mock.message(0).constant("<span style=\"font-size=22px;\">Minnie Mouse</span>") @AT@ 1310 @LENGTH@ 22
------UPD SimpleName@@MethodName:constant:["<span style=\"font-size=22px;\">Minnie Mouse</span>"] @TO@ MethodName:contains:["<span style=\"font-size=22px;\">Minnie Mouse</span>"] @AT@ 1326 @LENGTH@ 63


UPD TryStatement@@try {  while ((read=plaintextStream.read(buffer)) > 0) {    cipherStream.write(buffer,0,read);    cipherStream.flush();    hmac.encryptUpdate(buffer,read);  }  cipherStream.write(hmac.getCalculatedMac());}  finally {  ObjectHelper.close(cipherStream,"cipher",LOG);} @TO@ try {  while ((read=plaintextStream.read(buffer)) > 0) {    cipherStream.write(buffer,0,read);    cipherStream.flush();    hmac.encryptUpdate(buffer,read);  }  byte[] mac=hmac.getCalculatedMac();  if (mac != null && mac.length > 0) {    cipherStream.write(mac);  }}  finally {  ObjectHelper.close(cipherStream,"cipher",LOG);} @AT@ 5594 @LENGTH@ 408
---DEL ExpressionStatement@@MethodInvocation:cipherStream.write(hmac.getCalculatedMac()) @AT@ 5855 @LENGTH@ 44
---INS VariableDeclarationStatement@@byte[] mac=hmac.getCalculatedMac(); @TO@ TryStatement@@try {  while ((read=plaintextStream.read(buffer)) > 0) {    cipherStream.write(buffer,0,read);    cipherStream.flush();    hmac.encryptUpdate(buffer,read);  }  cipherStream.write(hmac.getCalculatedMac());}  finally {  ObjectHelper.close(cipherStream,"cipher",LOG);} @AT@ 5949 @LENGTH@ 37
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] mac=hmac.getCalculatedMac(); @AT@ 5949 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 5949 @LENGTH@ 4
------INS VariableDeclarationFragment@@mac=hmac.getCalculatedMac() @TO@ VariableDeclarationStatement@@byte[] mac=hmac.getCalculatedMac(); @AT@ 5956 @LENGTH@ 29
---------INS SimpleName@@mac @TO@ VariableDeclarationFragment@@mac=hmac.getCalculatedMac() @AT@ 5956 @LENGTH@ 3
---------INS MethodInvocation@@hmac.getCalculatedMac() @TO@ VariableDeclarationFragment@@mac=hmac.getCalculatedMac() @AT@ 5962 @LENGTH@ 23
------------INS SimpleName@@Name:hmac @TO@ MethodInvocation@@hmac.getCalculatedMac() @AT@ 5962 @LENGTH@ 4
------------INS SimpleName@@MethodName:getCalculatedMac:[] @TO@ MethodInvocation@@hmac.getCalculatedMac() @AT@ 5967 @LENGTH@ 18
---INS IfStatement@@if (mac != null && mac.length > 0) {  cipherStream.write(mac);} @TO@ TryStatement@@try {  while ((read=plaintextStream.read(buffer)) > 0) {    cipherStream.write(buffer,0,read);    cipherStream.flush();    hmac.encryptUpdate(buffer,read);  }  cipherStream.write(hmac.getCalculatedMac());}  finally {  ObjectHelper.close(cipherStream,"cipher",LOG);} @AT@ 6003 @LENGTH@ 99
------INS InfixExpression@@mac != null && mac.length > 0 @TO@ IfStatement@@if (mac != null && mac.length > 0) {  cipherStream.write(mac);} @AT@ 6007 @LENGTH@ 29
---------INS InfixExpression@@mac != null @TO@ InfixExpression@@mac != null && mac.length > 0 @AT@ 6007 @LENGTH@ 11
------------INS SimpleName@@mac @TO@ InfixExpression@@mac != null @AT@ 6007 @LENGTH@ 3
------------INS Operator@@!= @TO@ InfixExpression@@mac != null @AT@ 6010 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@mac != null @AT@ 6014 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@mac != null && mac.length > 0 @AT@ 6018 @LENGTH@ 2
---------INS InfixExpression@@mac.length > 0 @TO@ InfixExpression@@mac != null && mac.length > 0 @AT@ 6022 @LENGTH@ 14
------------INS QualifiedName@@mac.length @TO@ InfixExpression@@mac.length > 0 @AT@ 6022 @LENGTH@ 10
---------------INS SimpleName@@mac @TO@ QualifiedName@@mac.length @AT@ 6022 @LENGTH@ 3
---------------INS SimpleName@@length @TO@ QualifiedName@@mac.length @AT@ 6026 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@mac.length > 0 @AT@ 6032 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@mac.length > 0 @AT@ 6035 @LENGTH@ 1
------INS Block@@ThenBody:{  cipherStream.write(mac);} @TO@ IfStatement@@if (mac != null && mac.length > 0) {  cipherStream.write(mac);} @AT@ 6038 @LENGTH@ 64
---------INS ExpressionStatement@@MethodInvocation:cipherStream.write(mac) @TO@ Block@@ThenBody:{  cipherStream.write(mac);} @AT@ 6060 @LENGTH@ 24
------------MOV MethodInvocation@@cipherStream.write(hmac.getCalculatedMac()) @TO@ ExpressionStatement@@MethodInvocation:cipherStream.write(mac) @AT@ 5855 @LENGTH@ 43
---------------UPD SimpleName@@MethodName:write:[hmac.getCalculatedMac()] @TO@ MethodName:write:[mac] @AT@ 5868 @LENGTH@ 30
------------------DEL MethodInvocation@@hmac.getCalculatedMac() @AT@ 5874 @LENGTH@ 23
---------------------DEL SimpleName@@Name:hmac @AT@ 5874 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getCalculatedMac:[] @AT@ 5879 @LENGTH@ 18
------------------INS SimpleName@@mac @TO@ SimpleName@@MethodName:write:[hmac.getCalculatedMac()] @AT@ 6079 @LENGTH@ 3


UPD VariableDeclarationStatement@@JobParameters jobParameters=new JobParametersBuilder().addString("fileName","file:./target/test-outputs/delimitedOutput.csv").toJobParameters(); @TO@ JobParameters jobParameters=new JobParametersBuilder().addString("inputFile","file:./target/test-outputs/delimitedOutput.csv").toJobParameters(); @AT@ 2793 @LENGTH@ 151
---UPD VariableDeclarationFragment@@jobParameters=new JobParametersBuilder().addString("fileName","file:./target/test-outputs/delimitedOutput.csv").toJobParameters() @TO@ jobParameters=new JobParametersBuilder().addString("inputFile","file:./target/test-outputs/delimitedOutput.csv").toJobParameters() @AT@ 2807 @LENGTH@ 136
------UPD MethodInvocation@@new JobParametersBuilder().addString("fileName","file:./target/test-outputs/delimitedOutput.csv").toJobParameters() @TO@ new JobParametersBuilder().addString("inputFile","file:./target/test-outputs/delimitedOutput.csv").toJobParameters() @AT@ 2823 @LENGTH@ 120
---------UPD MethodInvocation@@MethodName:addString:["fileName", "file:./target/test-outputs/delimitedOutput.csv"] @TO@ MethodName:addString:["inputFile", "file:./target/test-outputs/delimitedOutput.csv"] @AT@ 2823 @LENGTH@ 102
------------UPD StringLiteral@@"fileName" @TO@ "inputFile" @AT@ 2860 @LENGTH@ 10


UPD VariableDeclarationStatement@@final String uri="mina:tcp://localhost:9085?encoding=UTF-8&sync=false"; @TO@ final String uri="mina:tcp://localhost:9083?encoding=UTF-8&sync=false"; @AT@ 1471 @LENGTH@ 73
---UPD VariableDeclarationFragment@@uri="mina:tcp://localhost:9085?encoding=UTF-8&sync=false" @TO@ uri="mina:tcp://localhost:9083?encoding=UTF-8&sync=false" @AT@ 1484 @LENGTH@ 59
------UPD StringLiteral@@"mina:tcp://localhost:9085?encoding=UTF-8&sync=false" @TO@ "mina:tcp://localhost:9083?encoding=UTF-8&sync=false" @AT@ 1490 @LENGTH@ 53


UPD TypeDeclaration@@[public]HawtDBAggregateLoadTest, CamelTestSupport @TO@ [@Ignore("Test manually as its aggressive on the file system with sync each write"), public]HawtDBAggregateLoadTest, CamelTestSupport @AT@ 1234 @LENGTH@ 2362
---INS SingleMemberAnnotation@@@Ignore("Test manually as its aggressive on the file system with sync each write") @TO@ TypeDeclaration@@[public]HawtDBAggregateLoadTest, CamelTestSupport @AT@ 1259 @LENGTH@ 82


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel("mock:error").redeliverDelay(0)) @TO@ MethodInvocation:errorHandler(deadLetterChannel("mock:error").redeliveryDelay(0)) @AT@ 7242 @LENGTH@ 64
---UPD MethodInvocation@@errorHandler(deadLetterChannel("mock:error").redeliverDelay(0)) @TO@ errorHandler(deadLetterChannel("mock:error").redeliveryDelay(0)) @AT@ 7242 @LENGTH@ 63
------UPD SimpleName@@MethodName:errorHandler:[deadLetterChannel("mock:error").redeliverDelay(0)] @TO@ MethodName:errorHandler:[deadLetterChannel("mock:error").redeliveryDelay(0)] @AT@ 7242 @LENGTH@ 63
---------UPD MethodInvocation@@deadLetterChannel("mock:error").redeliverDelay(0) @TO@ deadLetterChannel("mock:error").redeliveryDelay(0) @AT@ 7255 @LENGTH@ 49
------------UPD SimpleName@@MethodName:redeliverDelay:[0] @TO@ MethodName:redeliveryDelay:[0] @AT@ 7287 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertNull(HttpConverter.toInputStream(msg)) @TO@ MethodInvocation:assertNull(HttpConverter.toInputStream(msg,null)) @AT@ 5355 @LENGTH@ 45
---UPD MethodInvocation@@assertNull(HttpConverter.toInputStream(msg)) @TO@ assertNull(HttpConverter.toInputStream(msg,null)) @AT@ 5355 @LENGTH@ 44
------UPD SimpleName@@MethodName:assertNull:[HttpConverter.toInputStream(msg)] @TO@ MethodName:assertNull:[HttpConverter.toInputStream(msg,null)] @AT@ 5355 @LENGTH@ 44
---------UPD MethodInvocation@@HttpConverter.toInputStream(msg) @TO@ HttpConverter.toInputStream(msg,null) @AT@ 5366 @LENGTH@ 32
------------UPD SimpleName@@MethodName:toInputStream:[msg] @TO@ MethodName:toInputStream:[msg, null] @AT@ 5380 @LENGTH@ 18
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toInputStream:[msg] @AT@ 5399 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:this.names=names @TO@ Assignment:this.names=Arrays.asList(names).toArray(new String[names.length]) @AT@ 2383 @LENGTH@ 19
---UPD Assignment@@this.names=names @TO@ this.names=Arrays.asList(names).toArray(new String[names.length]) @AT@ 2383 @LENGTH@ 18
------DEL SimpleName@@names @AT@ 2396 @LENGTH@ 5
------INS MethodInvocation@@Arrays.asList(names).toArray(new String[names.length]) @TO@ Assignment@@this.names=names @AT@ 2421 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:asList:[names] @TO@ MethodInvocation@@Arrays.asList(names).toArray(new String[names.length]) @AT@ 2421 @LENGTH@ 20
------------INS SimpleName@@names @TO@ MethodInvocation@@MethodName:asList:[names] @AT@ 2435 @LENGTH@ 5
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(names).toArray(new String[names.length]) @AT@ 2421 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[new String[names.length]] @TO@ MethodInvocation@@Arrays.asList(names).toArray(new String[names.length]) @AT@ 2442 @LENGTH@ 33
------------INS ArrayCreation@@new String[names.length] @TO@ SimpleName@@MethodName:toArray:[new String[names.length]] @AT@ 2450 @LENGTH@ 24
---------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[names.length] @AT@ 2454 @LENGTH@ 20
------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 2454 @LENGTH@ 6
---------------INS QualifiedName@@names.length @TO@ ArrayCreation@@new String[names.length] @AT@ 2461 @LENGTH@ 12
------------------INS SimpleName@@names @TO@ QualifiedName@@names.length @AT@ 2461 @LENGTH@ 5
------------------INS SimpleName@@length @TO@ QualifiedName@@names.length @AT@ 2467 @LENGTH@ 6


DEL MethodDeclaration@@private, void, MethodName:clean, IOException,  @AT@ 2033 @LENGTH@ 291
---DEL Modifier@@private @AT@ 2033 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 2041 @LENGTH@ 4
---DEL SimpleName@@MethodName:clean @AT@ 2046 @LENGTH@ 5
---DEL SimpleType@@IOException @AT@ 2061 @LENGTH@ 11
---DEL VariableDeclarationStatement@@File[] files={new File("target/repository_with_auth"),new File("derby.log")}; @AT@ 2083 @LENGTH@ 105
------DEL ArrayType@@File[] @AT@ 2083 @LENGTH@ 6
---------DEL SimpleType@@File @AT@ 2083 @LENGTH@ 4
------DEL VariableDeclarationFragment@@files={new File("target/repository_with_auth"),new File("derby.log")} @AT@ 2090 @LENGTH@ 97
---------DEL SimpleName@@files @AT@ 2090 @LENGTH@ 5
---------DEL ArrayInitializer@@{new File("target/repository_with_auth"),new File("derby.log")} @AT@ 2098 @LENGTH@ 89
------------DEL ClassInstanceCreation@@File["target/repository_with_auth"] @AT@ 2099 @LENGTH@ 39
---------------DEL New@@new @AT@ 2099 @LENGTH@ 3
---------------DEL SimpleType@@File @AT@ 2103 @LENGTH@ 4
---------------DEL StringLiteral@@"target/repository_with_auth" @AT@ 2108 @LENGTH@ 29
------------DEL ClassInstanceCreation@@File["derby.log"] @AT@ 2164 @LENGTH@ 21
---------------DEL New@@new @AT@ 2164 @LENGTH@ 3
---------------DEL SimpleType@@File @AT@ 2168 @LENGTH@ 4
---------------DEL StringLiteral@@"derby.log" @AT@ 2173 @LENGTH@ 11
---DEL EnhancedForStatement@@for (File file : files) {  if (file.exists()) {    FileUtil.delete(file);  }} @AT@ 2197 @LENGTH@ 121
------DEL SingleVariableDeclaration@@File file @AT@ 2202 @LENGTH@ 9
---------DEL SimpleType@@File @AT@ 2202 @LENGTH@ 4
---------DEL SimpleName@@file @AT@ 2207 @LENGTH@ 4
------DEL SimpleName@@files @AT@ 2214 @LENGTH@ 5
------DEL IfStatement@@if (file.exists()) {  FileUtil.delete(file);} @AT@ 2235 @LENGTH@ 73
---------DEL MethodInvocation@@file.exists() @AT@ 2239 @LENGTH@ 13
------------DEL SimpleName@@Name:file @AT@ 2239 @LENGTH@ 4
------------DEL SimpleName@@MethodName:exists:[] @AT@ 2244 @LENGTH@ 8
---------DEL Block@@ThenBody:{  FileUtil.delete(file);} @AT@ 2254 @LENGTH@ 54
------------DEL ExpressionStatement@@MethodInvocation:FileUtil.delete(file) @AT@ 2272 @LENGTH@ 22
---------------DEL MethodInvocation@@FileUtil.delete(file) @AT@ 2272 @LENGTH@ 21
------------------DEL SimpleName@@Name:FileUtil @AT@ 2272 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:delete:[file] @AT@ 2281 @LENGTH@ 12
---------------------DEL SimpleName@@file @AT@ 2288 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals(10,events.size()) @TO@ MethodInvocation:assertEquals(12,events.size()) @AT@ 2443 @LENGTH@ 32
---UPD MethodInvocation@@assertEquals(10,events.size()) @TO@ assertEquals(12,events.size()) @AT@ 2443 @LENGTH@ 31
------UPD SimpleName@@MethodName:assertEquals:[10, events.size()] @TO@ MethodName:assertEquals:[12, events.size()] @AT@ 2443 @LENGTH@ 31
---------UPD NumberLiteral@@10 @TO@ 12 @AT@ 2456 @LENGTH@ 2


UPD FieldDeclaration@@private, static, int, [count=0] @TO@ private, static, int, [count] @AT@ 923 @LENGTH@ 29
---UPD VariableDeclarationFragment@@count=0 @TO@ count @AT@ 942 @LENGTH@ 9
------DEL NumberLiteral@@0 @AT@ 950 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:LOG.trace("This method is already overriden in a subclass, so the method from the sub class is preferred: " + existingMethodInfo) @TO@ MethodInvocation:LOG.trace("This method is already overridden in a subclass, so the method from the sub class is preferred: " + existingMethodInfo) @AT@ 9056 @LENGTH@ 130
---UPD MethodInvocation@@LOG.trace("This method is already overriden in a subclass, so the method from the sub class is preferred: " + existingMethodInfo) @TO@ LOG.trace("This method is already overridden in a subclass, so the method from the sub class is preferred: " + existingMethodInfo) @AT@ 9056 @LENGTH@ 129
------UPD SimpleName@@MethodName:trace:["This method is already overriden in a subclass, so the method from the sub class is preferred: " + existingMethodInfo] @TO@ MethodName:trace:["This method is already overridden in a subclass, so the method from the sub class is preferred: " + existingMethodInfo] @AT@ 9060 @LENGTH@ 125
---------UPD InfixExpression@@"This method is already overriden in a subclass, so the method from the sub class is preferred: " + existingMethodInfo @TO@ "This method is already overridden in a subclass, so the method from the sub class is preferred: " + existingMethodInfo @AT@ 9066 @LENGTH@ 118
------------UPD StringLiteral@@"This method is already overriden in a subclass, so the method from the sub class is preferred: " @TO@ "This method is already overridden in a subclass, so the method from the sub class is preferred: " @AT@ 9066 @LENGTH@ 97


INS ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @TO@ MethodDeclaration@@private, void, MethodName:sendMultipartEmail, boolean useInlineattachments, Exception,  @AT@ 1753 @LENGTH@ 19
---INS MethodInvocation@@Mailbox.clearAll() @TO@ ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @AT@ 1753 @LENGTH@ 18
------INS SimpleName@@Name:Mailbox @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 1753 @LENGTH@ 7
------INS SimpleName@@MethodName:clearAll:[] @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 1761 @LENGTH@ 10


UPD VariableDeclarationStatement@@InputStream is=conv.toInputStrean(doc); @TO@ InputStream is=conv.toInputStream(doc); @AT@ 12543 @LENGTH@ 41
---UPD VariableDeclarationFragment@@is=conv.toInputStrean(doc) @TO@ is=conv.toInputStream(doc) @AT@ 12555 @LENGTH@ 28
------UPD MethodInvocation@@conv.toInputStrean(doc) @TO@ conv.toInputStream(doc) @AT@ 12560 @LENGTH@ 23
---------UPD SimpleName@@MethodName:toInputStrean:[doc] @TO@ MethodName:toInputStream:[doc] @AT@ 12565 @LENGTH@ 18


UPD VariableDeclarationStatement@@Map<String,Object> model=new HashMap<String,Object>(); @TO@ Map<String,Object> model=new LinkedHashMap<String,Object>(); @AT@ 2343 @LENGTH@ 58
---UPD VariableDeclarationFragment@@model=new HashMap<String,Object>() @TO@ model=new LinkedHashMap<String,Object>() @AT@ 2363 @LENGTH@ 37
------UPD ClassInstanceCreation@@HashMap<String,Object>[] @TO@ LinkedHashMap<String,Object>[] @AT@ 2371 @LENGTH@ 29
---------UPD ParameterizedType@@HashMap<String,Object> @TO@ LinkedHashMap<String,Object> @AT@ 2375 @LENGTH@ 23
------------UPD SimpleType@@HashMap @TO@ LinkedHashMap @AT@ 2375 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:this.listeners=listeners @TO@ Assignment:this.listeners=Arrays.asList(listeners).toArray(new RepeatListener[listeners.length]) @AT@ 3576 @LENGTH@ 27
---UPD Assignment@@this.listeners=listeners @TO@ this.listeners=Arrays.asList(listeners).toArray(new RepeatListener[listeners.length]) @AT@ 3576 @LENGTH@ 26
------INS MethodInvocation@@Arrays.asList(listeners).toArray(new RepeatListener[listeners.length]) @TO@ Assignment@@this.listeners=listeners @AT@ 3593 @LENGTH@ 70
---------INS MethodInvocation@@MethodName:asList:[listeners] @TO@ MethodInvocation@@Arrays.asList(listeners).toArray(new RepeatListener[listeners.length]) @AT@ 3593 @LENGTH@ 24
------------INS SimpleName@@listeners @TO@ MethodInvocation@@MethodName:asList:[listeners] @AT@ 3607 @LENGTH@ 9
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(listeners).toArray(new RepeatListener[listeners.length]) @AT@ 3593 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[new RepeatListener[listeners.length]] @TO@ MethodInvocation@@Arrays.asList(listeners).toArray(new RepeatListener[listeners.length]) @AT@ 3618 @LENGTH@ 45
------------INS ArrayCreation@@new RepeatListener[listeners.length] @TO@ SimpleName@@MethodName:toArray:[new RepeatListener[listeners.length]] @AT@ 3626 @LENGTH@ 36
---------------INS ArrayType@@RepeatListener[] @TO@ ArrayCreation@@new RepeatListener[listeners.length] @AT@ 3630 @LENGTH@ 32
------------------INS SimpleType@@RepeatListener @TO@ ArrayType@@RepeatListener[] @AT@ 3630 @LENGTH@ 14
---------------INS QualifiedName@@listeners.length @TO@ ArrayCreation@@new RepeatListener[listeners.length] @AT@ 3645 @LENGTH@ 16
------------------INS SimpleName@@listeners @TO@ QualifiedName@@listeners.length @AT@ 3645 @LENGTH@ 9
------------------INS SimpleName@@length @TO@ QualifiedName@@listeners.length @AT@ 3655 @LENGTH@ 6
------DEL SimpleName@@listeners @AT@ 3593 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(2).redeliverDelay(0).logStackTrace(false).handled(false)) @TO@ MethodInvocation:errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(2).redeliveryDelay(0).logStackTrace(false).handled(false)) @AT@ 3369 @LENGTH@ 122
---UPD MethodInvocation@@errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(2).redeliverDelay(0).logStackTrace(false).handled(false)) @TO@ errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(2).redeliveryDelay(0).logStackTrace(false).handled(false)) @AT@ 3369 @LENGTH@ 121
------UPD SimpleName@@MethodName:errorHandler:[deadLetterChannel("mock:dead").maximumRedeliveries(2).redeliverDelay(0).logStackTrace(false).handled(false)] @TO@ MethodName:errorHandler:[deadLetterChannel("mock:dead").maximumRedeliveries(2).redeliveryDelay(0).logStackTrace(false).handled(false)] @AT@ 3369 @LENGTH@ 121
---------UPD MethodInvocation@@deadLetterChannel("mock:dead").maximumRedeliveries(2).redeliverDelay(0).logStackTrace(false).handled(false) @TO@ deadLetterChannel("mock:dead").maximumRedeliveries(2).redeliveryDelay(0).logStackTrace(false).handled(false) @AT@ 3382 @LENGTH@ 107
------------UPD MethodInvocation@@MethodName:redeliverDelay:[0] @TO@ MethodName:redeliveryDelay:[0] @AT@ 3382 @LENGTH@ 71


UPD ExpressionStatement@@MethodInvocation:config.setPort(25667) @TO@ MethodInvocation:config.setPort(25668) @AT@ 1937 @LENGTH@ 22
---UPD MethodInvocation@@config.setPort(25667) @TO@ config.setPort(25668) @AT@ 1937 @LENGTH@ 21
------UPD SimpleName@@MethodName:setPort:[25667] @TO@ MethodName:setPort:[25668] @AT@ 1944 @LENGTH@ 14
---------UPD NumberLiteral@@25667 @TO@ 25668 @AT@ 1952 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:this.resources=resources @TO@ Assignment:this.resources=Arrays.asList(resources).toArray(new Resource[resources.length]) @AT@ 1701 @LENGTH@ 27
---UPD Assignment@@this.resources=resources @TO@ this.resources=Arrays.asList(resources).toArray(new Resource[resources.length]) @AT@ 1701 @LENGTH@ 26
------DEL SimpleName@@resources @AT@ 1718 @LENGTH@ 9
------INS MethodInvocation@@Arrays.asList(resources).toArray(new Resource[resources.length]) @TO@ Assignment@@this.resources=resources @AT@ 1744 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:asList:[resources] @TO@ MethodInvocation@@Arrays.asList(resources).toArray(new Resource[resources.length]) @AT@ 1744 @LENGTH@ 24
------------INS SimpleName@@resources @TO@ MethodInvocation@@MethodName:asList:[resources] @AT@ 1758 @LENGTH@ 9
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(resources).toArray(new Resource[resources.length]) @AT@ 1744 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[new Resource[resources.length]] @TO@ MethodInvocation@@Arrays.asList(resources).toArray(new Resource[resources.length]) @AT@ 1769 @LENGTH@ 39
------------INS ArrayCreation@@new Resource[resources.length] @TO@ SimpleName@@MethodName:toArray:[new Resource[resources.length]] @AT@ 1777 @LENGTH@ 30
---------------INS ArrayType@@Resource[] @TO@ ArrayCreation@@new Resource[resources.length] @AT@ 1781 @LENGTH@ 26
------------------INS SimpleType@@Resource @TO@ ArrayType@@Resource[] @AT@ 1781 @LENGTH@ 8
---------------INS QualifiedName@@resources.length @TO@ ArrayCreation@@new Resource[resources.length] @AT@ 1790 @LENGTH@ 16
------------------INS SimpleName@@resources @TO@ QualifiedName@@resources.length @AT@ 1790 @LENGTH@ 9
------------------INS SimpleName@@length @TO@ QualifiedName@@resources.length @AT@ 1800 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("seda:coldDrinks?concurrentConsumers=2").to("bean: ?method=prepareColdDrink").to("direct:deliveries") @TO@ MethodInvocation:from("seda:coldDrinks?concurrentConsumers=2").to("bean:barista?method=prepareColdDrink").to("direct:deliveries") @AT@ 3036 @LENGTH@ 107
---UPD MethodInvocation@@from("seda:coldDrinks?concurrentConsumers=2").to("bean: ?method=prepareColdDrink").to("direct:deliveries") @TO@ from("seda:coldDrinks?concurrentConsumers=2").to("bean:barista?method=prepareColdDrink").to("direct:deliveries") @AT@ 3036 @LENGTH@ 106
------UPD MethodInvocation@@MethodName:to:["bean: ?method=prepareColdDrink"] @TO@ MethodName:to:["bean:barista?method=prepareColdDrink"] @AT@ 3036 @LENGTH@ 82
---------UPD StringLiteral@@"bean: ?method=prepareColdDrink" @TO@ "bean:barista?method=prepareColdDrink" @AT@ 3085 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:from("direct:start").pollEnrichRef("cool",0,"agg") @TO@ MethodInvocation:from("direct:start").pollEnrichRef("cool",1000,"agg") @AT@ 2284 @LENGTH@ 53
---UPD MethodInvocation@@from("direct:start").pollEnrichRef("cool",0,"agg") @TO@ from("direct:start").pollEnrichRef("cool",1000,"agg") @AT@ 2284 @LENGTH@ 52
------UPD SimpleName@@MethodName:pollEnrichRef:["cool", 0, "agg"] @TO@ MethodName:pollEnrichRef:["cool", 1000, "agg"] @AT@ 2305 @LENGTH@ 31
---------UPD NumberLiteral@@0 @TO@ 1000 @AT@ 2327 @LENGTH@ 1


UPD ThrowStatement@@ClassInstanceCreation:new FailedToStartRouteException(holder.getRoute().getId(),"starupOrder clash. Route " + otherId + " already has startupOrder "+ startupOrder+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.") @TO@ ClassInstanceCreation:new FailedToStartRouteException(holder.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ startupOrder+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.") @AT@ 36034 @LENGTH@ 293
---UPD ClassInstanceCreation@@FailedToStartRouteException[holder.getRoute().getId(), "starupOrder clash. Route " + otherId + " already has startupOrder "+ startupOrder+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes."] @TO@ FailedToStartRouteException[holder.getRoute().getId(), "startupOrder clash. Route " + otherId + " already has startupOrder "+ startupOrder+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes."] @AT@ 36040 @LENGTH@ 286
------UPD InfixExpression@@"starupOrder clash. Route " + otherId + " already has startupOrder "+ startupOrder+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes." @TO@ "startupOrder clash. Route " + otherId + " already has startupOrder "+ startupOrder+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes." @AT@ 36099 @LENGTH@ 226
---------UPD StringLiteral@@"starupOrder clash. Route " @TO@ "startupOrder clash. Route " @AT@ 36099 @LENGTH@ 27


INS MethodDeclaration@@public, void, MethodName:testGetPropertyLocaleIndependend, Exception,  @TO@ TypeDeclaration@@[public]IntrospectionSupportTest, ContextTestSupport @AT@ 5072 @LENGTH@ 765
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetPropertyLocaleIndependend, Exception,  @AT@ 5072 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetPropertyLocaleIndependend, Exception,  @AT@ 5079 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetPropertyLocaleIndependend @TO@ MethodDeclaration@@public, void, MethodName:testGetPropertyLocaleIndependend, Exception,  @AT@ 5084 @LENGTH@ 32
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testGetPropertyLocaleIndependend, Exception,  @AT@ 5126 @LENGTH@ 9
---INS VariableDeclarationStatement@@Locale oldLocale=Locale.getDefault(); @TO@ MethodDeclaration@@public, void, MethodName:testGetPropertyLocaleIndependend, Exception,  @AT@ 5146 @LENGTH@ 39
------INS SimpleType@@Locale @TO@ VariableDeclarationStatement@@Locale oldLocale=Locale.getDefault(); @AT@ 5146 @LENGTH@ 6
------INS VariableDeclarationFragment@@oldLocale=Locale.getDefault() @TO@ VariableDeclarationStatement@@Locale oldLocale=Locale.getDefault(); @AT@ 5153 @LENGTH@ 31
---------INS SimpleName@@oldLocale @TO@ VariableDeclarationFragment@@oldLocale=Locale.getDefault() @AT@ 5153 @LENGTH@ 9
---------INS MethodInvocation@@Locale.getDefault() @TO@ VariableDeclarationFragment@@oldLocale=Locale.getDefault() @AT@ 5165 @LENGTH@ 19
------------INS SimpleName@@Name:Locale @TO@ MethodInvocation@@Locale.getDefault() @AT@ 5165 @LENGTH@ 6
------------INS SimpleName@@MethodName:getDefault:[] @TO@ MethodInvocation@@Locale.getDefault() @AT@ 5172 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:Locale.setDefault(new Locale("tr","TR")) @TO@ MethodDeclaration@@public, void, MethodName:testGetPropertyLocaleIndependend, Exception,  @AT@ 5194 @LENGTH@ 42
------INS MethodInvocation@@Locale.setDefault(new Locale("tr","TR")) @TO@ ExpressionStatement@@MethodInvocation:Locale.setDefault(new Locale("tr","TR")) @AT@ 5194 @LENGTH@ 41
---------INS SimpleName@@Name:Locale @TO@ MethodInvocation@@Locale.setDefault(new Locale("tr","TR")) @AT@ 5194 @LENGTH@ 6
---------INS SimpleName@@MethodName:setDefault:[new Locale("tr","TR")] @TO@ MethodInvocation@@Locale.setDefault(new Locale("tr","TR")) @AT@ 5201 @LENGTH@ 34
------------INS ClassInstanceCreation@@Locale["tr", "TR"] @TO@ SimpleName@@MethodName:setDefault:[new Locale("tr","TR")] @AT@ 5212 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@Locale["tr", "TR"] @AT@ 5212 @LENGTH@ 3
---------------INS SimpleType@@Locale @TO@ ClassInstanceCreation@@Locale["tr", "TR"] @AT@ 5216 @LENGTH@ 6
---------------INS StringLiteral@@"tr" @TO@ ClassInstanceCreation@@Locale["tr", "TR"] @AT@ 5223 @LENGTH@ 4
---------------INS StringLiteral@@"TR" @TO@ ClassInstanceCreation@@Locale["tr", "TR"] @AT@ 5229 @LENGTH@ 4
---INS TryStatement@@try {  ExampleBean bean=new ExampleBean();  bean.setName("Claus");  bean.setPrice(10.0);  bean.setId("1");  Object name=IntrospectionSupport.getProperty(bean,"name");  Object id=IntrospectionSupport.getProperty(bean,"id");  Object price=IntrospectionSupport.getProperty(bean,"price");  assertEquals("Claus",name);  assertEquals(10.0,price);  assertEquals("1",id);}  finally {  Locale.setDefault(oldLocale);} @TO@ MethodDeclaration@@public, void, MethodName:testGetPropertyLocaleIndependend, Exception,  @AT@ 5254 @LENGTH@ 577
------INS VariableDeclarationStatement@@ExampleBean bean=new ExampleBean(); @TO@ TryStatement@@try {  ExampleBean bean=new ExampleBean();  bean.setName("Claus");  bean.setPrice(10.0);  bean.setId("1");  Object name=IntrospectionSupport.getProperty(bean,"name");  Object id=IntrospectionSupport.getProperty(bean,"id");  Object price=IntrospectionSupport.getProperty(bean,"price");  assertEquals("Claus",name);  assertEquals(10.0,price);  assertEquals("1",id);}  finally {  Locale.setDefault(oldLocale);} @AT@ 5272 @LENGTH@ 37
---------INS SimpleType@@ExampleBean @TO@ VariableDeclarationStatement@@ExampleBean bean=new ExampleBean(); @AT@ 5272 @LENGTH@ 11
---------INS VariableDeclarationFragment@@bean=new ExampleBean() @TO@ VariableDeclarationStatement@@ExampleBean bean=new ExampleBean(); @AT@ 5284 @LENGTH@ 24
------------INS SimpleName@@bean @TO@ VariableDeclarationFragment@@bean=new ExampleBean() @AT@ 5284 @LENGTH@ 4
------------INS ClassInstanceCreation@@ExampleBean[] @TO@ VariableDeclarationFragment@@bean=new ExampleBean() @AT@ 5291 @LENGTH@ 17
---------------INS New@@new @TO@ ClassInstanceCreation@@ExampleBean[] @AT@ 5291 @LENGTH@ 3
---------------INS SimpleType@@ExampleBean @TO@ ClassInstanceCreation@@ExampleBean[] @AT@ 5295 @LENGTH@ 11
------INS ExpressionStatement@@MethodInvocation:bean.setName("Claus") @TO@ TryStatement@@try {  ExampleBean bean=new ExampleBean();  bean.setName("Claus");  bean.setPrice(10.0);  bean.setId("1");  Object name=IntrospectionSupport.getProperty(bean,"name");  Object id=IntrospectionSupport.getProperty(bean,"id");  Object price=IntrospectionSupport.getProperty(bean,"price");  assertEquals("Claus",name);  assertEquals(10.0,price);  assertEquals("1",id);}  finally {  Locale.setDefault(oldLocale);} @AT@ 5322 @LENGTH@ 22
---------INS MethodInvocation@@bean.setName("Claus") @TO@ ExpressionStatement@@MethodInvocation:bean.setName("Claus") @AT@ 5322 @LENGTH@ 21
------------INS SimpleName@@Name:bean @TO@ MethodInvocation@@bean.setName("Claus") @AT@ 5322 @LENGTH@ 4
------------INS SimpleName@@MethodName:setName:["Claus"] @TO@ MethodInvocation@@bean.setName("Claus") @AT@ 5327 @LENGTH@ 16
---------------INS StringLiteral@@"Claus" @TO@ SimpleName@@MethodName:setName:["Claus"] @AT@ 5335 @LENGTH@ 7
------INS ExpressionStatement@@MethodInvocation:bean.setPrice(10.0) @TO@ TryStatement@@try {  ExampleBean bean=new ExampleBean();  bean.setName("Claus");  bean.setPrice(10.0);  bean.setId("1");  Object name=IntrospectionSupport.getProperty(bean,"name");  Object id=IntrospectionSupport.getProperty(bean,"id");  Object price=IntrospectionSupport.getProperty(bean,"price");  assertEquals("Claus",name);  assertEquals(10.0,price);  assertEquals("1",id);}  finally {  Locale.setDefault(oldLocale);} @AT@ 5357 @LENGTH@ 20
---------INS MethodInvocation@@bean.setPrice(10.0) @TO@ ExpressionStatement@@MethodInvocation:bean.setPrice(10.0) @AT@ 5357 @LENGTH@ 19
------------INS SimpleName@@Name:bean @TO@ MethodInvocation@@bean.setPrice(10.0) @AT@ 5357 @LENGTH@ 4
------------INS SimpleName@@MethodName:setPrice:[10.0] @TO@ MethodInvocation@@bean.setPrice(10.0) @AT@ 5362 @LENGTH@ 14
---------------INS NumberLiteral@@10.0 @TO@ SimpleName@@MethodName:setPrice:[10.0] @AT@ 5371 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:bean.setId("1") @TO@ TryStatement@@try {  ExampleBean bean=new ExampleBean();  bean.setName("Claus");  bean.setPrice(10.0);  bean.setId("1");  Object name=IntrospectionSupport.getProperty(bean,"name");  Object id=IntrospectionSupport.getProperty(bean,"id");  Object price=IntrospectionSupport.getProperty(bean,"price");  assertEquals("Claus",name);  assertEquals(10.0,price);  assertEquals("1",id);}  finally {  Locale.setDefault(oldLocale);} @AT@ 5390 @LENGTH@ 16
---------INS MethodInvocation@@bean.setId("1") @TO@ ExpressionStatement@@MethodInvocation:bean.setId("1") @AT@ 5390 @LENGTH@ 15
------------INS SimpleName@@Name:bean @TO@ MethodInvocation@@bean.setId("1") @AT@ 5390 @LENGTH@ 4
------------INS SimpleName@@MethodName:setId:["1"] @TO@ MethodInvocation@@bean.setId("1") @AT@ 5395 @LENGTH@ 10
---------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:setId:["1"] @AT@ 5401 @LENGTH@ 3
------INS VariableDeclarationStatement@@Object name=IntrospectionSupport.getProperty(bean,"name"); @TO@ TryStatement@@try {  ExampleBean bean=new ExampleBean();  bean.setName("Claus");  bean.setPrice(10.0);  bean.setId("1");  Object name=IntrospectionSupport.getProperty(bean,"name");  Object id=IntrospectionSupport.getProperty(bean,"id");  Object price=IntrospectionSupport.getProperty(bean,"price");  assertEquals("Claus",name);  assertEquals(10.0,price);  assertEquals("1",id);}  finally {  Locale.setDefault(oldLocale);} @AT@ 5424 @LENGTH@ 61
---------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object name=IntrospectionSupport.getProperty(bean,"name"); @AT@ 5424 @LENGTH@ 6
---------INS VariableDeclarationFragment@@name=IntrospectionSupport.getProperty(bean,"name") @TO@ VariableDeclarationStatement@@Object name=IntrospectionSupport.getProperty(bean,"name"); @AT@ 5431 @LENGTH@ 53
------------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=IntrospectionSupport.getProperty(bean,"name") @AT@ 5431 @LENGTH@ 4
------------INS MethodInvocation@@IntrospectionSupport.getProperty(bean,"name") @TO@ VariableDeclarationFragment@@name=IntrospectionSupport.getProperty(bean,"name") @AT@ 5438 @LENGTH@ 46
---------------INS SimpleName@@Name:IntrospectionSupport @TO@ MethodInvocation@@IntrospectionSupport.getProperty(bean,"name") @AT@ 5438 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getProperty:[bean, "name"] @TO@ MethodInvocation@@IntrospectionSupport.getProperty(bean,"name") @AT@ 5459 @LENGTH@ 25
------------------INS SimpleName@@bean @TO@ SimpleName@@MethodName:getProperty:[bean, "name"] @AT@ 5471 @LENGTH@ 4
------------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:getProperty:[bean, "name"] @AT@ 5477 @LENGTH@ 6
------INS VariableDeclarationStatement@@Object id=IntrospectionSupport.getProperty(bean,"id"); @TO@ TryStatement@@try {  ExampleBean bean=new ExampleBean();  bean.setName("Claus");  bean.setPrice(10.0);  bean.setId("1");  Object name=IntrospectionSupport.getProperty(bean,"name");  Object id=IntrospectionSupport.getProperty(bean,"id");  Object price=IntrospectionSupport.getProperty(bean,"price");  assertEquals("Claus",name);  assertEquals(10.0,price);  assertEquals("1",id);}  finally {  Locale.setDefault(oldLocale);} @AT@ 5498 @LENGTH@ 57
---------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object id=IntrospectionSupport.getProperty(bean,"id"); @AT@ 5498 @LENGTH@ 6
---------INS VariableDeclarationFragment@@id=IntrospectionSupport.getProperty(bean,"id") @TO@ VariableDeclarationStatement@@Object id=IntrospectionSupport.getProperty(bean,"id"); @AT@ 5505 @LENGTH@ 49
------------INS SimpleName@@id @TO@ VariableDeclarationFragment@@id=IntrospectionSupport.getProperty(bean,"id") @AT@ 5505 @LENGTH@ 2
------------INS MethodInvocation@@IntrospectionSupport.getProperty(bean,"id") @TO@ VariableDeclarationFragment@@id=IntrospectionSupport.getProperty(bean,"id") @AT@ 5510 @LENGTH@ 44
---------------INS SimpleName@@Name:IntrospectionSupport @TO@ MethodInvocation@@IntrospectionSupport.getProperty(bean,"id") @AT@ 5510 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getProperty:[bean, "id"] @TO@ MethodInvocation@@IntrospectionSupport.getProperty(bean,"id") @AT@ 5531 @LENGTH@ 23
------------------INS SimpleName@@bean @TO@ SimpleName@@MethodName:getProperty:[bean, "id"] @AT@ 5543 @LENGTH@ 4
------------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:getProperty:[bean, "id"] @AT@ 5549 @LENGTH@ 4
------INS VariableDeclarationStatement@@Object price=IntrospectionSupport.getProperty(bean,"price"); @TO@ TryStatement@@try {  ExampleBean bean=new ExampleBean();  bean.setName("Claus");  bean.setPrice(10.0);  bean.setId("1");  Object name=IntrospectionSupport.getProperty(bean,"name");  Object id=IntrospectionSupport.getProperty(bean,"id");  Object price=IntrospectionSupport.getProperty(bean,"price");  assertEquals("Claus",name);  assertEquals(10.0,price);  assertEquals("1",id);}  finally {  Locale.setDefault(oldLocale);} @AT@ 5568 @LENGTH@ 63
---------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object price=IntrospectionSupport.getProperty(bean,"price"); @AT@ 5568 @LENGTH@ 6
---------INS VariableDeclarationFragment@@price=IntrospectionSupport.getProperty(bean,"price") @TO@ VariableDeclarationStatement@@Object price=IntrospectionSupport.getProperty(bean,"price"); @AT@ 5575 @LENGTH@ 55
------------INS SimpleName@@price @TO@ VariableDeclarationFragment@@price=IntrospectionSupport.getProperty(bean,"price") @AT@ 5575 @LENGTH@ 5
------------INS MethodInvocation@@IntrospectionSupport.getProperty(bean,"price") @TO@ VariableDeclarationFragment@@price=IntrospectionSupport.getProperty(bean,"price") @AT@ 5583 @LENGTH@ 47
---------------INS SimpleName@@Name:IntrospectionSupport @TO@ MethodInvocation@@IntrospectionSupport.getProperty(bean,"price") @AT@ 5583 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getProperty:[bean, "price"] @TO@ MethodInvocation@@IntrospectionSupport.getProperty(bean,"price") @AT@ 5604 @LENGTH@ 26
------------------INS SimpleName@@bean @TO@ SimpleName@@MethodName:getProperty:[bean, "price"] @AT@ 5616 @LENGTH@ 4
------------------INS StringLiteral@@"price" @TO@ SimpleName@@MethodName:getProperty:[bean, "price"] @AT@ 5622 @LENGTH@ 7
------INS ExpressionStatement@@MethodInvocation:assertEquals("Claus",name) @TO@ TryStatement@@try {  ExampleBean bean=new ExampleBean();  bean.setName("Claus");  bean.setPrice(10.0);  bean.setId("1");  Object name=IntrospectionSupport.getProperty(bean,"name");  Object id=IntrospectionSupport.getProperty(bean,"id");  Object price=IntrospectionSupport.getProperty(bean,"price");  assertEquals("Claus",name);  assertEquals(10.0,price);  assertEquals("1",id);}  finally {  Locale.setDefault(oldLocale);} @AT@ 5657 @LENGTH@ 28
---------INS MethodInvocation@@assertEquals("Claus",name) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Claus",name) @AT@ 5657 @LENGTH@ 27
------------INS SimpleName@@MethodName:assertEquals:["Claus", name] @TO@ MethodInvocation@@assertEquals("Claus",name) @AT@ 5657 @LENGTH@ 27
---------------INS StringLiteral@@"Claus" @TO@ SimpleName@@MethodName:assertEquals:["Claus", name] @AT@ 5670 @LENGTH@ 7
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:assertEquals:["Claus", name] @AT@ 5679 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:assertEquals(10.0,price) @TO@ TryStatement@@try {  ExampleBean bean=new ExampleBean();  bean.setName("Claus");  bean.setPrice(10.0);  bean.setId("1");  Object name=IntrospectionSupport.getProperty(bean,"name");  Object id=IntrospectionSupport.getProperty(bean,"id");  Object price=IntrospectionSupport.getProperty(bean,"price");  assertEquals("Claus",name);  assertEquals(10.0,price);  assertEquals("1",id);}  finally {  Locale.setDefault(oldLocale);} @AT@ 5698 @LENGTH@ 26
---------INS MethodInvocation@@assertEquals(10.0,price) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(10.0,price) @AT@ 5698 @LENGTH@ 25
------------INS SimpleName@@MethodName:assertEquals:[10.0, price] @TO@ MethodInvocation@@assertEquals(10.0,price) @AT@ 5698 @LENGTH@ 25
---------------INS NumberLiteral@@10.0 @TO@ SimpleName@@MethodName:assertEquals:[10.0, price] @AT@ 5711 @LENGTH@ 4
---------------INS SimpleName@@price @TO@ SimpleName@@MethodName:assertEquals:[10.0, price] @AT@ 5717 @LENGTH@ 5
------INS ExpressionStatement@@MethodInvocation:assertEquals("1",id) @TO@ TryStatement@@try {  ExampleBean bean=new ExampleBean();  bean.setName("Claus");  bean.setPrice(10.0);  bean.setId("1");  Object name=IntrospectionSupport.getProperty(bean,"name");  Object id=IntrospectionSupport.getProperty(bean,"id");  Object price=IntrospectionSupport.getProperty(bean,"price");  assertEquals("Claus",name);  assertEquals(10.0,price);  assertEquals("1",id);}  finally {  Locale.setDefault(oldLocale);} @AT@ 5737 @LENGTH@ 22
---------INS MethodInvocation@@assertEquals("1",id) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("1",id) @AT@ 5737 @LENGTH@ 21
------------INS SimpleName@@MethodName:assertEquals:["1", id] @TO@ MethodInvocation@@assertEquals("1",id) @AT@ 5737 @LENGTH@ 21
---------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:assertEquals:["1", id] @AT@ 5750 @LENGTH@ 3
---------------INS SimpleName@@id @TO@ SimpleName@@MethodName:assertEquals:["1", id] @AT@ 5755 @LENGTH@ 2
------INS Block@@FinallyBody:{  Locale.setDefault(oldLocale);} @TO@ TryStatement@@try {  ExampleBean bean=new ExampleBean();  bean.setName("Claus");  bean.setPrice(10.0);  bean.setId("1");  Object name=IntrospectionSupport.getProperty(bean,"name");  Object id=IntrospectionSupport.getProperty(bean,"id");  Object price=IntrospectionSupport.getProperty(bean,"price");  assertEquals("Claus",name);  assertEquals(10.0,price);  assertEquals("1",id);}  finally {  Locale.setDefault(oldLocale);} @AT@ 5778 @LENGTH@ 53
---------INS ExpressionStatement@@MethodInvocation:Locale.setDefault(oldLocale) @TO@ Block@@FinallyBody:{  Locale.setDefault(oldLocale);} @AT@ 5792 @LENGTH@ 29
------------INS MethodInvocation@@Locale.setDefault(oldLocale) @TO@ ExpressionStatement@@MethodInvocation:Locale.setDefault(oldLocale) @AT@ 5792 @LENGTH@ 28
---------------INS SimpleName@@Name:Locale @TO@ MethodInvocation@@Locale.setDefault(oldLocale) @AT@ 5792 @LENGTH@ 6
---------------INS SimpleName@@MethodName:setDefault:[oldLocale] @TO@ MethodInvocation@@Locale.setDefault(oldLocale) @AT@ 5799 @LENGTH@ 21
------------------INS SimpleName@@oldLocale @TO@ SimpleName@@MethodName:setDefault:[oldLocale] @AT@ 5810 @LENGTH@ 9


UPD FieldDeclaration@@public, static, final, String, [SERIVCE_NAME="CamelNagiosServiceName"] @TO@ public, static, final, String, [SERVICE_NAME="CamelNagiosServiceName"] @AT@ 1046 @LENGTH@ 67
---UPD VariableDeclarationFragment@@SERIVCE_NAME="CamelNagiosServiceName" @TO@ SERVICE_NAME="CamelNagiosServiceName" @AT@ 1073 @LENGTH@ 39
------UPD SimpleName@@SERIVCE_NAME @TO@ SERVICE_NAME @AT@ 1073 @LENGTH@ 12


UPD MethodDeclaration@@protected, ItemReader<Foo>, MethodName:getItemReader, Exception,  @TO@ protected, AbstractPagingItemReader<Foo>, MethodName:getItemReader, Exception,  @AT@ 823 @LENGTH@ 961
---UPD ParameterizedType@@ItemReader<Foo> @TO@ AbstractPagingItemReader<Foo> @AT@ 833 @LENGTH@ 15
------UPD SimpleType@@ItemReader @TO@ AbstractPagingItemReader @AT@ 833 @LENGTH@ 10


INS FieldDeclaration@@byte, [LF_PAX_EXTENDED_HEADER_UC=(byte)'X'] @TO@ TypeDeclaration@@[public]TarConstants,  @AT@ 3878 @LENGTH@ 44
---INS PrimitiveType@@byte @TO@ FieldDeclaration@@byte, [LF_PAX_EXTENDED_HEADER_UC=(byte)'X'] @AT@ 3878 @LENGTH@ 4
---INS VariableDeclarationFragment@@LF_PAX_EXTENDED_HEADER_UC=(byte)'X' @TO@ FieldDeclaration@@byte, [LF_PAX_EXTENDED_HEADER_UC=(byte)'X'] @AT@ 3883 @LENGTH@ 38
------INS SimpleName@@LF_PAX_EXTENDED_HEADER_UC @TO@ VariableDeclarationFragment@@LF_PAX_EXTENDED_HEADER_UC=(byte)'X' @AT@ 3883 @LENGTH@ 25
------INS CastExpression@@(byte)'X' @TO@ VariableDeclarationFragment@@LF_PAX_EXTENDED_HEADER_UC=(byte)'X' @AT@ 3911 @LENGTH@ 10
---------INS PrimitiveType@@byte @TO@ CastExpression@@(byte)'X' @AT@ 3912 @LENGTH@ 4
---------INS CharacterLiteral@@'X' @TO@ CastExpression@@(byte)'X' @AT@ 3918 @LENGTH@ 3


UPD MethodDeclaration@@protected, ItemReader<Foo>, MethodName:getItemReader, Exception,  @TO@ protected, AbstractPagingItemReader<Foo>, MethodName:getItemReader, Exception,  @AT@ 683 @LENGTH@ 479
---UPD ParameterizedType@@ItemReader<Foo> @TO@ AbstractPagingItemReader<Foo> @AT@ 693 @LENGTH@ 15
------UPD SimpleType@@ItemReader @TO@ AbstractPagingItemReader @AT@ 693 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:headers.put(NagiosConstants.SERIVCE_NAME,"myService") @TO@ MethodInvocation:headers.put(NagiosConstants.SERVICE_NAME,"myService") @AT@ 5637 @LENGTH@ 55
---UPD MethodInvocation@@headers.put(NagiosConstants.SERIVCE_NAME,"myService") @TO@ headers.put(NagiosConstants.SERVICE_NAME,"myService") @AT@ 5637 @LENGTH@ 54
------UPD SimpleName@@MethodName:put:[NagiosConstants.SERIVCE_NAME, "myService"] @TO@ MethodName:put:[NagiosConstants.SERVICE_NAME, "myService"] @AT@ 5645 @LENGTH@ 46
---------UPD QualifiedName@@NagiosConstants.SERIVCE_NAME @TO@ NagiosConstants.SERVICE_NAME @AT@ 5649 @LENGTH@ 28
------------UPD SimpleName@@SERIVCE_NAME @TO@ SERVICE_NAME @AT@ 5665 @LENGTH@ 12


UPD IfStatement@@if (channelPipeline != null) {  return channelPipeline;} @TO@ if (channelPipeline != null) {  if (channelPipeline.remove("ssl") != null) {    if (LOG.isDebugEnabled()) {      LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");    }    channelPipeline.addFirst("ssl",configureClientSSLOnDemand());  }  return channelPipeline;} @AT@ 1849 @LENGTH@ 76
---UPD Block@@ThenBody:{  return channelPipeline;} @TO@ ThenBody:{  if (channelPipeline.remove("ssl") != null) {    if (LOG.isDebugEnabled()) {      LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");    }    channelPipeline.addFirst("ssl",configureClientSSLOnDemand());  }  return channelPipeline;} @AT@ 1878 @LENGTH@ 47
------INS IfStatement@@if (channelPipeline.remove("ssl") != null) {  if (LOG.isDebugEnabled()) {    LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");  }  channelPipeline.addFirst("ssl",configureClientSSLOnDemand());} @TO@ Block@@ThenBody:{  return channelPipeline;} @AT@ 2254 @LENGTH@ 340
---------INS InfixExpression@@channelPipeline.remove("ssl") != null @TO@ IfStatement@@if (channelPipeline.remove("ssl") != null) {  if (LOG.isDebugEnabled()) {    LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");  }  channelPipeline.addFirst("ssl",configureClientSSLOnDemand());} @AT@ 2258 @LENGTH@ 37
------------INS MethodInvocation@@channelPipeline.remove("ssl") @TO@ InfixExpression@@channelPipeline.remove("ssl") != null @AT@ 2258 @LENGTH@ 29
---------------INS SimpleName@@Name:channelPipeline @TO@ MethodInvocation@@channelPipeline.remove("ssl") @AT@ 2258 @LENGTH@ 15
---------------INS SimpleName@@MethodName:remove:["ssl"] @TO@ MethodInvocation@@channelPipeline.remove("ssl") @AT@ 2274 @LENGTH@ 13
------------------INS StringLiteral@@"ssl" @TO@ SimpleName@@MethodName:remove:["ssl"] @AT@ 2281 @LENGTH@ 5
------------INS Operator@@!= @TO@ InfixExpression@@channelPipeline.remove("ssl") != null @AT@ 2287 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@channelPipeline.remove("ssl") != null @AT@ 2291 @LENGTH@ 4
---------INS Block@@ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");  }  channelPipeline.addFirst("ssl",configureClientSSLOnDemand());} @TO@ IfStatement@@if (channelPipeline.remove("ssl") != null) {  if (LOG.isDebugEnabled()) {    LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");  }  channelPipeline.addFirst("ssl",configureClientSSLOnDemand());} @AT@ 2297 @LENGTH@ 297
------------INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");} @TO@ Block@@ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");  }  channelPipeline.addFirst("ssl",configureClientSSLOnDemand());} @AT@ 2365 @LENGTH@ 136
---------------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");} @AT@ 2369 @LENGTH@ 20
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 2369 @LENGTH@ 3
------------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 2373 @LENGTH@ 16
---------------INS Block@@ThenBody:{  LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");} @AT@ 2391 @LENGTH@ 110
------------------INS ExpressionStatement@@MethodInvocation:LOG.debug("Client SSL handler re-initialized on the ChannelPipeline") @TO@ Block@@ThenBody:{  LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");} @AT@ 2413 @LENGTH@ 70
---------------------INS MethodInvocation@@LOG.debug("Client SSL handler re-initialized on the ChannelPipeline") @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Client SSL handler re-initialized on the ChannelPipeline") @AT@ 2413 @LENGTH@ 69
------------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Client SSL handler re-initialized on the ChannelPipeline") @AT@ 2413 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:debug:["Client SSL handler re-initialized on the ChannelPipeline"] @TO@ MethodInvocation@@LOG.debug("Client SSL handler re-initialized on the ChannelPipeline") @AT@ 2417 @LENGTH@ 65
---------------------------INS StringLiteral@@"Client SSL handler re-initialized on the ChannelPipeline" @TO@ SimpleName@@MethodName:debug:["Client SSL handler re-initialized on the ChannelPipeline"] @AT@ 2423 @LENGTH@ 58
------------INS ExpressionStatement@@MethodInvocation:channelPipeline.addFirst("ssl",configureClientSSLOnDemand()) @TO@ Block@@ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Client SSL handler re-initialized on the ChannelPipeline");  }  channelPipeline.addFirst("ssl",configureClientSSLOnDemand());} @AT@ 2518 @LENGTH@ 62
---------------INS MethodInvocation@@channelPipeline.addFirst("ssl",configureClientSSLOnDemand()) @TO@ ExpressionStatement@@MethodInvocation:channelPipeline.addFirst("ssl",configureClientSSLOnDemand()) @AT@ 2518 @LENGTH@ 61
------------------INS SimpleName@@Name:channelPipeline @TO@ MethodInvocation@@channelPipeline.addFirst("ssl",configureClientSSLOnDemand()) @AT@ 2518 @LENGTH@ 15
------------------INS SimpleName@@MethodName:addFirst:["ssl", configureClientSSLOnDemand()] @TO@ MethodInvocation@@channelPipeline.addFirst("ssl",configureClientSSLOnDemand()) @AT@ 2534 @LENGTH@ 45
---------------------INS StringLiteral@@"ssl" @TO@ SimpleName@@MethodName:addFirst:["ssl", configureClientSSLOnDemand()] @AT@ 2543 @LENGTH@ 5
---------------------INS MethodInvocation@@MethodName:configureClientSSLOnDemand:[] @TO@ SimpleName@@MethodName:addFirst:["ssl", configureClientSSLOnDemand()] @AT@ 2550 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:from("file:target/oldlock?recursive=true").routeId("foo").noAutoStartup().to("mock:result") @TO@ MethodInvocation:from("file:target/oldlock?recursive=true&sortBy=file:name").routeId("foo").noAutoStartup().to("mock:result") @AT@ 2478 @LENGTH@ 92
---UPD MethodInvocation@@from("file:target/oldlock?recursive=true").routeId("foo").noAutoStartup().to("mock:result") @TO@ from("file:target/oldlock?recursive=true&sortBy=file:name").routeId("foo").noAutoStartup().to("mock:result") @AT@ 2478 @LENGTH@ 91
------UPD MethodInvocation@@MethodName:from:["file:target/oldlock?recursive=true"] @TO@ MethodName:from:["file:target/oldlock?recursive=true&sortBy=file:name"] @AT@ 2478 @LENGTH@ 42
---------UPD StringLiteral@@"file:target/oldlock?recursive=true" @TO@ "file:target/oldlock?recursive=true&sortBy=file:name" @AT@ 2483 @LENGTH@ 36


UPD VariableDeclarationStatement@@String body=IOConverter.toString(file); @TO@ String body=IOConverter.toString(file,null); @AT@ 2156 @LENGTH@ 41
---UPD VariableDeclarationFragment@@body=IOConverter.toString(file) @TO@ body=IOConverter.toString(file,null) @AT@ 2163 @LENGTH@ 33
------UPD MethodInvocation@@IOConverter.toString(file) @TO@ IOConverter.toString(file,null) @AT@ 2170 @LENGTH@ 26
---------UPD SimpleName@@MethodName:toString:[file] @TO@ MethodName:toString:[file, null] @AT@ 2182 @LENGTH@ 14
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toString:[file] @AT@ 2197 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("file:target/filestress?maxMessagesPerPoll=50&readLock=lockFile").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("file:target/filestress?maxMessagesPerPoll=50&readLock=lockFile").routeId("foo").noAutoStartup().threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 1530 @LENGTH@ 546
---UPD MethodInvocation@@from("file:target/filestress?maxMessagesPerPoll=50&readLock=lockFile").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @TO@ from("file:target/filestress?maxMessagesPerPoll=50&readLock=lockFile").routeId("foo").noAutoStartup().threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 1530 @LENGTH@ 545
------INS MethodInvocation@@MethodName:noAutoStartup:[] @TO@ MethodInvocation@@from("file:target/filestress?maxMessagesPerPoll=50&readLock=lockFile").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 1530 @LENGTH@ 101
------INS MethodInvocation@@MethodName:routeId:["foo"] @TO@ MethodInvocation@@from("file:target/filestress?maxMessagesPerPoll=50&readLock=lockFile").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 1530 @LENGTH@ 85
---------INS StringLiteral@@"foo" @TO@ MethodInvocation@@MethodName:routeId:["foo"] @AT@ 1609 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:new JobParametersBuilder().addLong("timestamp",new Date().getTime()).addString("fileName",fileName).toJobParameters() @TO@ MethodInvocation:new JobParametersBuilder().addLong("timestamp",new Date().getTime()).addString("inputFile",fileName).addString("outputFile","file:./target/test-outputs/delimitedOutput.csv").toJobParameters() @AT@ 3495 @LENGTH@ 132
---UPD MethodInvocation@@new JobParametersBuilder().addLong("timestamp",new Date().getTime()).addString("fileName",fileName).toJobParameters() @TO@ new JobParametersBuilder().addLong("timestamp",new Date().getTime()).addString("inputFile",fileName).addString("outputFile","file:./target/test-outputs/delimitedOutput.csv").toJobParameters() @AT@ 3502 @LENGTH@ 124
------UPD MethodInvocation@@MethodName:addString:["fileName", fileName] @TO@ MethodName:addString:["inputFile", fileName] @AT@ 3502 @LENGTH@ 101
---------UPD StringLiteral@@"fileName" @TO@ "inputFile" @AT@ 3582 @LENGTH@ 10
------INS MethodInvocation@@MethodName:addString:["outputFile", "file:./target/test-outputs/delimitedOutput.csv"] @TO@ MethodInvocation@@new JobParametersBuilder().addLong("timestamp",new Date().getTime()).addString("fileName",fileName).toJobParameters() @AT@ 3503 @LENGTH@ 181
---------INS StringLiteral@@"outputFile" @TO@ MethodInvocation@@MethodName:addString:["outputFile", "file:./target/test-outputs/delimitedOutput.csv"] @AT@ 3621 @LENGTH@ 12
---------INS StringLiteral@@"file:./target/test-outputs/delimitedOutput.csv" @TO@ MethodInvocation@@MethodName:addString:["outputFile", "file:./target/test-outputs/delimitedOutput.csv"] @AT@ 3635 @LENGTH@ 48


INS MethodDeclaration@@public, void, MethodName:testTransactionalContains, Exception,  @TO@ TypeDeclaration@@[public]ConcurrentTransactionAwareProxyTests,  @AT@ 2969 @LENGTH@ 419
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testTransactionalContains, Exception,  @AT@ 2969 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testTransactionalContains, Exception,  @AT@ 2976 @LENGTH@ 4
---INS SimpleName@@MethodName:testTransactionalContains @TO@ MethodDeclaration@@public, void, MethodName:testTransactionalContains, Exception,  @AT@ 2981 @LENGTH@ 25
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testTransactionalContains, Exception,  @AT@ 3016 @LENGTH@ 9
---INS VariableDeclarationStatement@@final Map<Long,Map<String,String>> map=TransactionAwareProxyFactory.createAppendOnlyTransactionalMap(); @TO@ MethodDeclaration@@public, void, MethodName:testTransactionalContains, Exception,  @AT@ 3031 @LENGTH@ 107
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Map<Long,Map<String,String>> map=TransactionAwareProxyFactory.createAppendOnlyTransactionalMap(); @AT@ 3031 @LENGTH@ 5
------INS ParameterizedType@@Map<Long,Map<String,String>> @TO@ VariableDeclarationStatement@@final Map<Long,Map<String,String>> map=TransactionAwareProxyFactory.createAppendOnlyTransactionalMap(); @AT@ 3037 @LENGTH@ 30
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<Long,Map<String,String>> @AT@ 3037 @LENGTH@ 3
---------INS SimpleType@@Long @TO@ ParameterizedType@@Map<Long,Map<String,String>> @AT@ 3041 @LENGTH@ 4
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@Map<Long,Map<String,String>> @AT@ 3047 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 3047 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 3051 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 3059 @LENGTH@ 6
------INS VariableDeclarationFragment@@map=TransactionAwareProxyFactory.createAppendOnlyTransactionalMap() @TO@ VariableDeclarationStatement@@final Map<Long,Map<String,String>> map=TransactionAwareProxyFactory.createAppendOnlyTransactionalMap(); @AT@ 3068 @LENGTH@ 69
---------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=TransactionAwareProxyFactory.createAppendOnlyTransactionalMap() @AT@ 3068 @LENGTH@ 3
---------INS MethodInvocation@@TransactionAwareProxyFactory.createAppendOnlyTransactionalMap() @TO@ VariableDeclarationFragment@@map=TransactionAwareProxyFactory.createAppendOnlyTransactionalMap() @AT@ 3074 @LENGTH@ 63
------------INS SimpleName@@Name:TransactionAwareProxyFactory @TO@ MethodInvocation@@TransactionAwareProxyFactory.createAppendOnlyTransactionalMap() @AT@ 3074 @LENGTH@ 28
------------INS SimpleName@@MethodName:createAppendOnlyTransactionalMap:[] @TO@ MethodInvocation@@TransactionAwareProxyFactory.createAppendOnlyTransactionalMap() @AT@ 3103 @LENGTH@ 34
---INS VariableDeclarationStatement@@boolean result=(Boolean)new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:testTransactionalContains, Exception,  @AT@ 3142 @LENGTH@ 217
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean result=(Boolean)new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
); @AT@ 3142 @LENGTH@ 7
------INS VariableDeclarationFragment@@result=(Boolean)new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
) @TO@ VariableDeclarationStatement@@boolean result=(Boolean)new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
); @AT@ 3150 @LENGTH@ 208
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=(Boolean)new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
) @AT@ 3150 @LENGTH@ 6
---------INS CastExpression@@(Boolean)new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
) @TO@ VariableDeclarationFragment@@result=(Boolean)new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
) @AT@ 3159 @LENGTH@ 199
------------INS SimpleType@@Boolean @TO@ CastExpression@@(Boolean)new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
) @AT@ 3160 @LENGTH@ 7
------------INS MethodInvocation@@new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
) @TO@ CastExpression@@(Boolean)new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
) @AT@ 3169 @LENGTH@ 189
---------------INS ClassInstanceCreation@@TransactionTemplate[transactionManager] @TO@ MethodInvocation@@new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
) @AT@ 3169 @LENGTH@ 43
------------------INS New@@new @TO@ ClassInstanceCreation@@TransactionTemplate[transactionManager] @AT@ 3169 @LENGTH@ 3
------------------INS SimpleType@@TransactionTemplate @TO@ ClassInstanceCreation@@TransactionTemplate[transactionManager] @AT@ 3173 @LENGTH@ 19
------------------INS SimpleName@@transactionManager @TO@ ClassInstanceCreation@@TransactionTemplate[transactionManager] @AT@ 3193 @LENGTH@ 18
---------------INS SimpleName@@MethodName:execute:[new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
] @TO@ MethodInvocation@@new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
) @AT@ 3213 @LENGTH@ 145
------------------INS ClassInstanceCreation@@TransactionCallback[] @TO@ SimpleName@@MethodName:execute:[new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    return map.containsKey("foo");
  }
}
] @AT@ 3221 @LENGTH@ 136
---------------------INS New@@new @TO@ ClassInstanceCreation@@TransactionCallback[] @AT@ 3221 @LENGTH@ 3
---------------------INS SimpleType@@TransactionCallback @TO@ ClassInstanceCreation@@TransactionCallback[] @AT@ 3225 @LENGTH@ 19
---------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@TransactionCallback[] @AT@ 3247 @LENGTH@ 110
------------------------INS MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3253 @LENGTH@ 99
---------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @AT@ 3253 @LENGTH@ 6
---------------------------INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @AT@ 3260 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:doInTransaction @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @AT@ 3267 @LENGTH@ 15
---------------------------INS SingleVariableDeclaration@@TransactionStatus status @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @AT@ 3283 @LENGTH@ 24
------------------------------INS SimpleType@@TransactionStatus @TO@ SingleVariableDeclaration@@TransactionStatus status @AT@ 3283 @LENGTH@ 17
------------------------------INS SimpleName@@status @TO@ SingleVariableDeclaration@@TransactionStatus status @AT@ 3301 @LENGTH@ 6
---------------------------INS ReturnStatement@@MethodInvocation:map.containsKey("foo") @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @AT@ 3316 @LENGTH@ 30
------------------------------INS MethodInvocation@@map.containsKey("foo") @TO@ ReturnStatement@@MethodInvocation:map.containsKey("foo") @AT@ 3323 @LENGTH@ 22
---------------------------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.containsKey("foo") @AT@ 3323 @LENGTH@ 3
---------------------------------INS SimpleName@@MethodName:containsKey:["foo"] @TO@ MethodInvocation@@map.containsKey("foo") @AT@ 3327 @LENGTH@ 18
------------------------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:containsKey:["foo"] @AT@ 3339 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertFalse(result) @TO@ MethodDeclaration@@public, void, MethodName:testTransactionalContains, Exception,  @AT@ 3363 @LENGTH@ 20
------INS MethodInvocation@@assertFalse(result) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(result) @AT@ 3363 @LENGTH@ 19
---------INS SimpleName@@MethodName:assertFalse:[result] @TO@ MethodInvocation@@assertFalse(result) @AT@ 3363 @LENGTH@ 19
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertFalse:[result] @AT@ 3375 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @TO@ MethodDeclaration@@public, void, MethodName:testSencUnsupportedCharsetDisabledOption, Exception,  @AT@ 2767 @LENGTH@ 19
---INS MethodInvocation@@Mailbox.clearAll() @TO@ ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @AT@ 2767 @LENGTH@ 18
------INS SimpleName@@Name:Mailbox @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 2767 @LENGTH@ 7
------INS SimpleName@@MethodName:clearAll:[] @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 2775 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:this.listeners=listeners @TO@ Assignment:this.listeners=Arrays.asList(listeners).toArray(new RetryListener[listeners.length]) @AT@ 4238 @LENGTH@ 27
---UPD Assignment@@this.listeners=listeners @TO@ this.listeners=Arrays.asList(listeners).toArray(new RetryListener[listeners.length]) @AT@ 4238 @LENGTH@ 26
------INS MethodInvocation@@Arrays.asList(listeners).toArray(new RetryListener[listeners.length]) @TO@ Assignment@@this.listeners=listeners @AT@ 4255 @LENGTH@ 69
---------INS MethodInvocation@@MethodName:asList:[listeners] @TO@ MethodInvocation@@Arrays.asList(listeners).toArray(new RetryListener[listeners.length]) @AT@ 4255 @LENGTH@ 24
------------INS SimpleName@@listeners @TO@ MethodInvocation@@MethodName:asList:[listeners] @AT@ 4269 @LENGTH@ 9
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(listeners).toArray(new RetryListener[listeners.length]) @AT@ 4255 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[new RetryListener[listeners.length]] @TO@ MethodInvocation@@Arrays.asList(listeners).toArray(new RetryListener[listeners.length]) @AT@ 4280 @LENGTH@ 44
------------INS ArrayCreation@@new RetryListener[listeners.length] @TO@ SimpleName@@MethodName:toArray:[new RetryListener[listeners.length]] @AT@ 4288 @LENGTH@ 35
---------------INS ArrayType@@RetryListener[] @TO@ ArrayCreation@@new RetryListener[listeners.length] @AT@ 4292 @LENGTH@ 31
------------------INS SimpleType@@RetryListener @TO@ ArrayType@@RetryListener[] @AT@ 4292 @LENGTH@ 13
---------------INS QualifiedName@@listeners.length @TO@ ArrayCreation@@new RetryListener[listeners.length] @AT@ 4306 @LENGTH@ 16
------------------INS SimpleName@@listeners @TO@ QualifiedName@@listeners.length @AT@ 4306 @LENGTH@ 9
------------------INS SimpleName@@length @TO@ QualifiedName@@listeners.length @AT@ 4316 @LENGTH@ 6
------DEL SimpleName@@listeners @AT@ 4255 @LENGTH@ 9


UPD TypeDeclaration@@[@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]JobExecutionViewTests, AbstractManagerViewTests @TO@ [@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]JobExecutionViewTests, AbstractManagerViewTests @AT@ 1616 @LENGTH@ 2948
---UPD NormalAnnotation@@@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml") @TO@ @ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml") @AT@ 1616 @LENGTH@ 142


INS ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @TO@ MethodDeclaration@@public, void, MethodName:testSendAndReceiveMails, Exception,  @AT@ 1878 @LENGTH@ 19
---INS MethodInvocation@@Mailbox.clearAll() @TO@ ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @AT@ 1878 @LENGTH@ 18
------INS SimpleName@@Name:Mailbox @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 1878 @LENGTH@ 7
------INS SimpleName@@MethodName:clearAll:[] @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 1886 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testConsumerTemplate, Exception,  @TO@ TypeDeclaration@@[public]JmsSelectorOptionTest, CamelTestSupport @AT@ 2684 @LENGTH@ 980
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testConsumerTemplate, Exception,  @AT@ 2684 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testConsumerTemplate, Exception,  @AT@ 2691 @LENGTH@ 4
---INS SimpleName@@MethodName:testConsumerTemplate @TO@ MethodDeclaration@@public, void, MethodName:testConsumerTemplate, Exception,  @AT@ 2696 @LENGTH@ 20
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testConsumerTemplate, Exception,  @AT@ 2726 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("activemq:queue:consumer","Message1","SIZE_NUMBER",1505) @TO@ MethodDeclaration@@public, void, MethodName:testConsumerTemplate, Exception,  @AT@ 2746 @LENGTH@ 87
------INS MethodInvocation@@template.sendBodyAndHeader("activemq:queue:consumer","Message1","SIZE_NUMBER",1505) @TO@ ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("activemq:queue:consumer","Message1","SIZE_NUMBER",1505) @AT@ 2746 @LENGTH@ 86
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBodyAndHeader("activemq:queue:consumer","Message1","SIZE_NUMBER",1505) @AT@ 2746 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message1", "SIZE_NUMBER", 1505] @TO@ MethodInvocation@@template.sendBodyAndHeader("activemq:queue:consumer","Message1","SIZE_NUMBER",1505) @AT@ 2755 @LENGTH@ 77
------------INS StringLiteral@@"activemq:queue:consumer" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message1", "SIZE_NUMBER", 1505] @AT@ 2773 @LENGTH@ 25
------------INS StringLiteral@@"Message1" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message1", "SIZE_NUMBER", 1505] @AT@ 2800 @LENGTH@ 10
------------INS StringLiteral@@"SIZE_NUMBER" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message1", "SIZE_NUMBER", 1505] @AT@ 2812 @LENGTH@ 13
------------INS NumberLiteral@@1505 @TO@ SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message1", "SIZE_NUMBER", 1505] @AT@ 2827 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("activemq:queue:consumer","Message3","SIZE_NUMBER",1300) @TO@ MethodDeclaration@@public, void, MethodName:testConsumerTemplate, Exception,  @AT@ 2842 @LENGTH@ 87
------INS MethodInvocation@@template.sendBodyAndHeader("activemq:queue:consumer","Message3","SIZE_NUMBER",1300) @TO@ ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("activemq:queue:consumer","Message3","SIZE_NUMBER",1300) @AT@ 2842 @LENGTH@ 86
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBodyAndHeader("activemq:queue:consumer","Message3","SIZE_NUMBER",1300) @AT@ 2842 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message3", "SIZE_NUMBER", 1300] @TO@ MethodInvocation@@template.sendBodyAndHeader("activemq:queue:consumer","Message3","SIZE_NUMBER",1300) @AT@ 2851 @LENGTH@ 77
------------INS StringLiteral@@"activemq:queue:consumer" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message3", "SIZE_NUMBER", 1300] @AT@ 2869 @LENGTH@ 25
------------INS StringLiteral@@"Message3" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message3", "SIZE_NUMBER", 1300] @AT@ 2896 @LENGTH@ 10
------------INS StringLiteral@@"SIZE_NUMBER" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message3", "SIZE_NUMBER", 1300] @AT@ 2908 @LENGTH@ 13
------------INS NumberLiteral@@1300 @TO@ SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message3", "SIZE_NUMBER", 1300] @AT@ 2923 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("activemq:queue:consumer","Message2","SIZE_NUMBER",1600) @TO@ MethodDeclaration@@public, void, MethodName:testConsumerTemplate, Exception,  @AT@ 2938 @LENGTH@ 87
------INS MethodInvocation@@template.sendBodyAndHeader("activemq:queue:consumer","Message2","SIZE_NUMBER",1600) @TO@ ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("activemq:queue:consumer","Message2","SIZE_NUMBER",1600) @AT@ 2938 @LENGTH@ 86
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBodyAndHeader("activemq:queue:consumer","Message2","SIZE_NUMBER",1600) @AT@ 2938 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message2", "SIZE_NUMBER", 1600] @TO@ MethodInvocation@@template.sendBodyAndHeader("activemq:queue:consumer","Message2","SIZE_NUMBER",1600) @AT@ 2947 @LENGTH@ 77
------------INS StringLiteral@@"activemq:queue:consumer" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message2", "SIZE_NUMBER", 1600] @AT@ 2965 @LENGTH@ 25
------------INS StringLiteral@@"Message2" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message2", "SIZE_NUMBER", 1600] @AT@ 2992 @LENGTH@ 10
------------INS StringLiteral@@"SIZE_NUMBER" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message2", "SIZE_NUMBER", 1600] @AT@ 3004 @LENGTH@ 13
------------INS NumberLiteral@@1600 @TO@ SimpleName@@MethodName:sendBodyAndHeader:["activemq:queue:consumer", "Message2", "SIZE_NUMBER", 1600] @AT@ 3019 @LENGTH@ 4
---INS WhileStatement@@while (true) {  Exchange ex=consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500");  if (ex != null) {    Message message=ex.getIn();    int size=message.getHeader("SIZE_NUMBER",int.class);    assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);    assertEquals("The message body is wrong","Message3",message.getBody());  } else {    break;  }} @TO@ MethodDeclaration@@public, void, MethodName:testConsumerTemplate, Exception,  @AT@ 3134 @LENGTH@ 523
------INS BooleanLiteral@@true @TO@ WhileStatement@@while (true) {  Exchange ex=consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500");  if (ex != null) {    Message message=ex.getIn();    int size=message.getHeader("SIZE_NUMBER",int.class);    assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);    assertEquals("The message body is wrong","Message3",message.getBody());  } else {    break;  }} @AT@ 3141 @LENGTH@ 4
------INS Block@@WhileBody:{  Exchange ex=consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500");  if (ex != null) {    Message message=ex.getIn();    int size=message.getHeader("SIZE_NUMBER",int.class);    assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);    assertEquals("The message body is wrong","Message3",message.getBody());  } else {    break;  }} @TO@ WhileStatement@@while (true) {  Exchange ex=consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500");  if (ex != null) {    Message message=ex.getIn();    int size=message.getHeader("SIZE_NUMBER",int.class);    assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);    assertEquals("The message body is wrong","Message3",message.getBody());  } else {    break;  }} @AT@ 3147 @LENGTH@ 510
---------INS VariableDeclarationStatement@@Exchange ex=consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500"); @TO@ Block@@WhileBody:{  Exchange ex=consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500");  if (ex != null) {    Message message=ex.getIn();    int size=message.getHeader("SIZE_NUMBER",int.class);    assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);    assertEquals("The message body is wrong","Message3",message.getBody());  } else {    break;  }} @AT@ 3161 @LENGTH@ 90
------------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange ex=consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500"); @AT@ 3161 @LENGTH@ 8
------------INS VariableDeclarationFragment@@ex=consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500") @TO@ VariableDeclarationStatement@@Exchange ex=consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500"); @AT@ 3170 @LENGTH@ 80
---------------INS SimpleName@@ex @TO@ VariableDeclarationFragment@@ex=consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500") @AT@ 3170 @LENGTH@ 2
---------------INS MethodInvocation@@consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500") @TO@ VariableDeclarationFragment@@ex=consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500") @AT@ 3175 @LENGTH@ 75
------------------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500") @AT@ 3175 @LENGTH@ 8
------------------INS SimpleName@@MethodName:receiveNoWait:["activemq:queue:consumer?selector=SIZE_NUMBER<1500"] @TO@ MethodInvocation@@consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500") @AT@ 3184 @LENGTH@ 66
---------------------INS StringLiteral@@"activemq:queue:consumer?selector=SIZE_NUMBER<1500" @TO@ SimpleName@@MethodName:receiveNoWait:["activemq:queue:consumer?selector=SIZE_NUMBER<1500"] @AT@ 3198 @LENGTH@ 51
---------INS IfStatement@@if (ex != null) {  Message message=ex.getIn();  int size=message.getHeader("SIZE_NUMBER",int.class);  assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);  assertEquals("The message body is wrong","Message3",message.getBody());} else {  break;} @TO@ Block@@WhileBody:{  Exchange ex=consumer.receiveNoWait("activemq:queue:consumer?selector=SIZE_NUMBER<1500");  if (ex != null) {    Message message=ex.getIn();    int size=message.getHeader("SIZE_NUMBER",int.class);    assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);    assertEquals("The message body is wrong","Message3",message.getBody());  } else {    break;  }} @AT@ 3264 @LENGTH@ 383
------------INS InfixExpression@@ex != null @TO@ IfStatement@@if (ex != null) {  Message message=ex.getIn();  int size=message.getHeader("SIZE_NUMBER",int.class);  assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);  assertEquals("The message body is wrong","Message3",message.getBody());} else {  break;} @AT@ 3268 @LENGTH@ 10
---------------INS SimpleName@@ex @TO@ InfixExpression@@ex != null @AT@ 3268 @LENGTH@ 2
---------------INS Operator@@!= @TO@ InfixExpression@@ex != null @AT@ 3270 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@ex != null @AT@ 3274 @LENGTH@ 4
------------INS Block@@ThenBody:{  Message message=ex.getIn();  int size=message.getHeader("SIZE_NUMBER",int.class);  assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);  assertEquals("The message body is wrong","Message3",message.getBody());} @TO@ IfStatement@@if (ex != null) {  Message message=ex.getIn();  int size=message.getHeader("SIZE_NUMBER",int.class);  assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);  assertEquals("The message body is wrong","Message3",message.getBody());} else {  break;} @AT@ 3280 @LENGTH@ 323
---------------INS VariableDeclarationStatement@@Message message=ex.getIn(); @TO@ Block@@ThenBody:{  Message message=ex.getIn();  int size=message.getHeader("SIZE_NUMBER",int.class);  assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);  assertEquals("The message body is wrong","Message3",message.getBody());} @AT@ 3298 @LENGTH@ 29
------------------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message message=ex.getIn(); @AT@ 3298 @LENGTH@ 7
------------------INS VariableDeclarationFragment@@message=ex.getIn() @TO@ VariableDeclarationStatement@@Message message=ex.getIn(); @AT@ 3306 @LENGTH@ 20
---------------------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=ex.getIn() @AT@ 3306 @LENGTH@ 7
---------------------INS MethodInvocation@@ex.getIn() @TO@ VariableDeclarationFragment@@message=ex.getIn() @AT@ 3316 @LENGTH@ 10
------------------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getIn() @AT@ 3316 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@ex.getIn() @AT@ 3319 @LENGTH@ 7
---------------INS VariableDeclarationStatement@@int size=message.getHeader("SIZE_NUMBER",int.class); @TO@ Block@@ThenBody:{  Message message=ex.getIn();  int size=message.getHeader("SIZE_NUMBER",int.class);  assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);  assertEquals("The message body is wrong","Message3",message.getBody());} @AT@ 3344 @LENGTH@ 55
------------------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int size=message.getHeader("SIZE_NUMBER",int.class); @AT@ 3344 @LENGTH@ 3
------------------INS VariableDeclarationFragment@@size=message.getHeader("SIZE_NUMBER",int.class) @TO@ VariableDeclarationStatement@@int size=message.getHeader("SIZE_NUMBER",int.class); @AT@ 3348 @LENGTH@ 50
---------------------INS SimpleName@@size @TO@ VariableDeclarationFragment@@size=message.getHeader("SIZE_NUMBER",int.class) @AT@ 3348 @LENGTH@ 4
---------------------INS MethodInvocation@@message.getHeader("SIZE_NUMBER",int.class) @TO@ VariableDeclarationFragment@@size=message.getHeader("SIZE_NUMBER",int.class) @AT@ 3355 @LENGTH@ 43
------------------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getHeader("SIZE_NUMBER",int.class) @AT@ 3355 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getHeader:["SIZE_NUMBER", int.class] @TO@ MethodInvocation@@message.getHeader("SIZE_NUMBER",int.class) @AT@ 3363 @LENGTH@ 35
---------------------------INS StringLiteral@@"SIZE_NUMBER" @TO@ SimpleName@@MethodName:getHeader:["SIZE_NUMBER", int.class] @AT@ 3373 @LENGTH@ 13
---------------------------INS TypeLiteral@@int.class @TO@ SimpleName@@MethodName:getHeader:["SIZE_NUMBER", int.class] @AT@ 3388 @LENGTH@ 9
---------------INS ExpressionStatement@@MethodInvocation:assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500) @TO@ Block@@ThenBody:{  Message message=ex.getIn();  int size=message.getHeader("SIZE_NUMBER",int.class);  assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);  assertEquals("The message body is wrong","Message3",message.getBody());} @AT@ 3416 @LENGTH@ 83
------------------INS MethodInvocation@@assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500) @AT@ 3416 @LENGTH@ 82
---------------------INS SimpleName@@MethodName:assertTrue:["The message header SIZE_NUMBER should be less than 1500", size < 1500] @TO@ MethodInvocation@@assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500) @AT@ 3416 @LENGTH@ 82
------------------------INS StringLiteral@@"The message header SIZE_NUMBER should be less than 1500" @TO@ SimpleName@@MethodName:assertTrue:["The message header SIZE_NUMBER should be less than 1500", size < 1500] @AT@ 3427 @LENGTH@ 57
------------------------INS InfixExpression@@size < 1500 @TO@ SimpleName@@MethodName:assertTrue:["The message header SIZE_NUMBER should be less than 1500", size < 1500] @AT@ 3486 @LENGTH@ 11
---------------------------INS SimpleName@@size @TO@ InfixExpression@@size < 1500 @AT@ 3486 @LENGTH@ 4
---------------------------INS Operator@@< @TO@ InfixExpression@@size < 1500 @AT@ 3490 @LENGTH@ 1
---------------------------INS NumberLiteral@@1500 @TO@ InfixExpression@@size < 1500 @AT@ 3493 @LENGTH@ 4
---------------INS ExpressionStatement@@MethodInvocation:assertEquals("The message body is wrong","Message3",message.getBody()) @TO@ Block@@ThenBody:{  Message message=ex.getIn();  int size=message.getHeader("SIZE_NUMBER",int.class);  assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);  assertEquals("The message body is wrong","Message3",message.getBody());} @AT@ 3516 @LENGTH@ 73
------------------INS MethodInvocation@@assertEquals("The message body is wrong","Message3",message.getBody()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("The message body is wrong","Message3",message.getBody()) @AT@ 3516 @LENGTH@ 72
---------------------INS SimpleName@@MethodName:assertEquals:["The message body is wrong", "Message3", message.getBody()] @TO@ MethodInvocation@@assertEquals("The message body is wrong","Message3",message.getBody()) @AT@ 3516 @LENGTH@ 72
------------------------INS StringLiteral@@"The message body is wrong" @TO@ SimpleName@@MethodName:assertEquals:["The message body is wrong", "Message3", message.getBody()] @AT@ 3529 @LENGTH@ 27
------------------------INS StringLiteral@@"Message3" @TO@ SimpleName@@MethodName:assertEquals:["The message body is wrong", "Message3", message.getBody()] @AT@ 3558 @LENGTH@ 10
------------------------INS MethodInvocation@@message.getBody() @TO@ SimpleName@@MethodName:assertEquals:["The message body is wrong", "Message3", message.getBody()] @AT@ 3570 @LENGTH@ 17
---------------------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getBody() @AT@ 3570 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@message.getBody() @AT@ 3578 @LENGTH@ 9
------------INS Block@@ElseBody:{  break;} @TO@ IfStatement@@if (ex != null) {  Message message=ex.getIn();  int size=message.getHeader("SIZE_NUMBER",int.class);  assertTrue("The message header SIZE_NUMBER should be less than 1500",size < 1500);  assertEquals("The message body is wrong","Message3",message.getBody());} else {  break;} @AT@ 3609 @LENGTH@ 38
---------------INS BreakStatement@@ @TO@ Block@@ElseBody:{  break;} @AT@ 3627 @LENGTH@ 6


UPD TryStatement@@try {  assertEquals(200,httpclient.executeMethod(get));  assertEquals("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>",get.getResponseBodyAsString());}  finally {  get.releaseConnection();} @TO@ try {  assertEquals(200,httpclient.executeMethod(get));  String s=get.getResponseBodyAsString();  boolean m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s);  boolean m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s);  if (!m1 && !m2) {    fail("Not expected body returned: " + s);  }}  finally {  get.releaseConnection();} @AT@ 2759 @LENGTH@ 343
---DEL ExpressionStatement@@MethodInvocation:assertEquals("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>",get.getResponseBodyAsString()) @AT@ 2839 @LENGTH@ 196
------DEL MethodInvocation@@assertEquals("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>",get.getResponseBodyAsString()) @AT@ 2839 @LENGTH@ 195
---------DEL SimpleName@@MethodName:assertEquals:["<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>", get.getResponseBodyAsString()] @AT@ 2839 @LENGTH@ 195
------------DEL StringLiteral@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>" @AT@ 2852 @LENGTH@ 124
------------DEL MethodInvocation@@get.getResponseBodyAsString() @AT@ 3004 @LENGTH@ 29
---INS VariableDeclarationStatement@@String s=get.getResponseBodyAsString(); @TO@ TryStatement@@try {  assertEquals(200,httpclient.executeMethod(get));  assertEquals("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>",get.getResponseBodyAsString());}  finally {  get.releaseConnection();} @AT@ 2911 @LENGTH@ 41
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=get.getResponseBodyAsString(); @AT@ 2911 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=get.getResponseBodyAsString() @TO@ VariableDeclarationStatement@@String s=get.getResponseBodyAsString(); @AT@ 2918 @LENGTH@ 33
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=get.getResponseBodyAsString() @AT@ 2918 @LENGTH@ 1
---------INS MethodInvocation@@get.getResponseBodyAsString() @TO@ VariableDeclarationFragment@@s=get.getResponseBodyAsString() @AT@ 2922 @LENGTH@ 29
------------MOV SimpleName@@Name:get @TO@ MethodInvocation@@get.getResponseBodyAsString() @AT@ 3004 @LENGTH@ 3
------------MOV SimpleName@@MethodName:getResponseBodyAsString:[] @TO@ MethodInvocation@@get.getResponseBodyAsString() @AT@ 3008 @LENGTH@ 25
---INS VariableDeclarationStatement@@boolean m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s); @TO@ TryStatement@@try {  assertEquals(200,httpclient.executeMethod(get));  assertEquals("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>",get.getResponseBodyAsString());}  finally {  get.releaseConnection();} @AT@ 2965 @LENGTH@ 148
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s); @AT@ 2965 @LENGTH@ 7
------INS VariableDeclarationFragment@@m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @TO@ VariableDeclarationStatement@@boolean m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s); @AT@ 2973 @LENGTH@ 139
---------INS SimpleName@@m1 @TO@ VariableDeclarationFragment@@m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @AT@ 2973 @LENGTH@ 2
---------INS MethodInvocation@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @TO@ VariableDeclarationFragment@@m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @AT@ 2978 @LENGTH@ 134
------------INS StringLiteral@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>" @TO@ MethodInvocation@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @AT@ 2978 @LENGTH@ 124
------------INS SimpleName@@MethodName:equals:[s] @TO@ MethodInvocation@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @AT@ 3103 @LENGTH@ 9
---------------INS SimpleName@@s @TO@ SimpleName@@MethodName:equals:[s] @AT@ 3110 @LENGTH@ 1
---INS VariableDeclarationStatement@@boolean m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s); @TO@ TryStatement@@try {  assertEquals(200,httpclient.executeMethod(get));  assertEquals("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>",get.getResponseBodyAsString());}  finally {  get.releaseConnection();} @AT@ 3126 @LENGTH@ 148
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s); @AT@ 3126 @LENGTH@ 7
------INS VariableDeclarationFragment@@m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @TO@ VariableDeclarationStatement@@boolean m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s); @AT@ 3134 @LENGTH@ 139
---------INS SimpleName@@m2 @TO@ VariableDeclarationFragment@@m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @AT@ 3134 @LENGTH@ 2
---------INS MethodInvocation@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @TO@ VariableDeclarationFragment@@m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @AT@ 3139 @LENGTH@ 134
------------INS StringLiteral@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>" @TO@ MethodInvocation@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @AT@ 3139 @LENGTH@ 124
------------INS SimpleName@@MethodName:equals:[s] @TO@ MethodInvocation@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @AT@ 3264 @LENGTH@ 9
---------------INS SimpleName@@s @TO@ SimpleName@@MethodName:equals:[s] @AT@ 3271 @LENGTH@ 1
---INS IfStatement@@if (!m1 && !m2) {  fail("Not expected body returned: " + s);} @TO@ TryStatement@@try {  assertEquals(200,httpclient.executeMethod(get));  assertEquals("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>",get.getResponseBodyAsString());}  finally {  get.releaseConnection();} @AT@ 3288 @LENGTH@ 89
------INS InfixExpression@@!m1 && !m2 @TO@ IfStatement@@if (!m1 && !m2) {  fail("Not expected body returned: " + s);} @AT@ 3292 @LENGTH@ 10
---------INS PrefixExpression@@!m1 @TO@ InfixExpression@@!m1 && !m2 @AT@ 3292 @LENGTH@ 3
------------INS Operator@@! @TO@ PrefixExpression@@!m1 @AT@ 3292 @LENGTH@ 1
------------INS SimpleName@@m1 @TO@ PrefixExpression@@!m1 @AT@ 3293 @LENGTH@ 2
---------INS Operator@@&& @TO@ InfixExpression@@!m1 && !m2 @AT@ 3295 @LENGTH@ 2
---------INS PrefixExpression@@!m2 @TO@ InfixExpression@@!m1 && !m2 @AT@ 3299 @LENGTH@ 3
------------INS Operator@@! @TO@ PrefixExpression@@!m2 @AT@ 3299 @LENGTH@ 1
------------INS SimpleName@@m2 @TO@ PrefixExpression@@!m2 @AT@ 3300 @LENGTH@ 2
------INS Block@@ThenBody:{  fail("Not expected body returned: " + s);} @TO@ IfStatement@@if (!m1 && !m2) {  fail("Not expected body returned: " + s);} @AT@ 3304 @LENGTH@ 73
---------INS ExpressionStatement@@MethodInvocation:fail("Not expected body returned: " + s) @TO@ Block@@ThenBody:{  fail("Not expected body returned: " + s);} @AT@ 3322 @LENGTH@ 41
------------INS MethodInvocation@@fail("Not expected body returned: " + s) @TO@ ExpressionStatement@@MethodInvocation:fail("Not expected body returned: " + s) @AT@ 3322 @LENGTH@ 40
---------------INS SimpleName@@MethodName:fail:["Not expected body returned: " + s] @TO@ MethodInvocation@@fail("Not expected body returned: " + s) @AT@ 3322 @LENGTH@ 40
------------------INS InfixExpression@@"Not expected body returned: " + s @TO@ SimpleName@@MethodName:fail:["Not expected body returned: " + s] @AT@ 3327 @LENGTH@ 34
---------------------INS StringLiteral@@"Not expected body returned: " @TO@ InfixExpression@@"Not expected body returned: " + s @AT@ 3327 @LENGTH@ 30
---------------------INS Operator@@+ @TO@ InfixExpression@@"Not expected body returned: " + s @AT@ 3357 @LENGTH@ 1
---------------------INS SimpleName@@s @TO@ InfixExpression@@"Not expected body returned: " + s @AT@ 3360 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived(body) @TO@ MethodInvocation:mock.expectedMinimumMessageCount(1) @AT@ 1649 @LENGTH@ 34
---UPD MethodInvocation@@mock.expectedBodiesReceived(body) @TO@ mock.expectedMinimumMessageCount(1) @AT@ 1649 @LENGTH@ 33
------UPD SimpleName@@MethodName:expectedBodiesReceived:[body] @TO@ MethodName:expectedMinimumMessageCount:[1] @AT@ 1654 @LENGTH@ 28
---------DEL SimpleName@@body @AT@ 1677 @LENGTH@ 4
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedBodiesReceived:[body] @AT@ 1814 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:property=property.substring(0,1).toUpperCase() + property.substring(1) @TO@ Assignment:property=property.substring(0,1).toUpperCase(Locale.ENGLISH) + property.substring(1) @AT@ 5544 @LENGTH@ 74
---UPD Assignment@@property=property.substring(0,1).toUpperCase() + property.substring(1) @TO@ property=property.substring(0,1).toUpperCase(Locale.ENGLISH) + property.substring(1) @AT@ 5544 @LENGTH@ 73
------UPD InfixExpression@@property.substring(0,1).toUpperCase() + property.substring(1) @TO@ property.substring(0,1).toUpperCase(Locale.ENGLISH) + property.substring(1) @AT@ 5555 @LENGTH@ 62
---------UPD MethodInvocation@@property.substring(0,1).toUpperCase() @TO@ property.substring(0,1).toUpperCase(Locale.ENGLISH) @AT@ 5555 @LENGTH@ 38
------------UPD SimpleName@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 5580 @LENGTH@ 13
---------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toUpperCase:[] @AT@ 5617 @LENGTH@ 14
------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 5617 @LENGTH@ 6
------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 5624 @LENGTH@ 7


UPD TypeDeclaration@@[public, abstract]TestSupport, Assert @TO@ [public, abstract]TestSupport, TestCase @AT@ 1861 @LENGTH@ 14832
---UPD SimpleType@@Assert @TO@ TestCase @AT@ 1903 @LENGTH@ 6


UPD ReturnStatement@@InfixExpression:obj != null && obj instanceof BundleSymbolicName && this.compareTo((BundleSymbolicName)obj) == 0 @TO@ InfixExpression:obj instanceof BundleSymbolicName && this.compareTo((BundleSymbolicName)obj) == 0 @AT@ 1370 @LENGTH@ 104
---UPD InfixExpression@@obj != null && obj instanceof BundleSymbolicName && this.compareTo((BundleSymbolicName)obj) == 0 @TO@ obj instanceof BundleSymbolicName && this.compareTo((BundleSymbolicName)obj) == 0 @AT@ 1377 @LENGTH@ 96
------DEL InfixExpression@@obj != null && obj instanceof BundleSymbolicName @AT@ 1377 @LENGTH@ 48
---------DEL InfixExpression@@obj != null @AT@ 1377 @LENGTH@ 11
------------DEL SimpleName@@obj @AT@ 1377 @LENGTH@ 3
------------DEL Operator@@!= @AT@ 1380 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 1384 @LENGTH@ 4
---------DEL Operator@@&& @AT@ 1388 @LENGTH@ 2
------MOV InstanceofExpression@@obj instanceof BundleSymbolicName @TO@ InfixExpression@@obj != null && obj instanceof BundleSymbolicName && this.compareTo((BundleSymbolicName)obj) == 0 @AT@ 1392 @LENGTH@ 33


UPD MethodDeclaration@@protected, Class, MethodName:findClass, String name, ClassNotFoundException,  @TO@ protected, Class<?>, MethodName:findClass, String name, ClassNotFoundException,  @AT@ 1505 @LENGTH@ 115
---INS ParameterizedType@@Class<?> @TO@ MethodDeclaration@@protected, Class, MethodName:findClass, String name, ClassNotFoundException,  @AT@ 1511 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1511 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1517 @LENGTH@ 1
---DEL SimpleType@@Class @AT@ 1515 @LENGTH@ 5


UPD TryStatement@@try {  if (baseURIString == null) {    if (exchange.getFromEndpoint() != null) {      baseURIString=exchange.getFromEndpoint().getEndpointUri();    } else {      baseURIString="/";    }  }  baseURI=new URI(baseURIString);  String basePath=baseURI.getPath();  if (path.startsWith(basePath)) {    path=path.substring(basePath.length());    if (path.startsWith("/")) {      path=path.substring(1);    }  } else {    throw new RuntimeCamelException("Can't anylze the Exchange.HTTP_PATH header, due to: can't find the right HTTP_BASE_URI");  }} catch (Throwable t) {  throw new RuntimeCamelException("Can't anylze the Exchange.HTTP_PATH header, due to: " + t.getMessage(),t);} @TO@ try {  if (baseURIString == null) {    if (exchange.getFromEndpoint() != null) {      baseURIString=exchange.getFromEndpoint().getEndpointUri();    } else {      baseURIString="/";    }  }  baseURI=new URI(baseURIString);  String basePath=baseURI.getPath();  if (path.startsWith(basePath)) {    path=path.substring(basePath.length());    if (path.startsWith("/")) {      path=path.substring(1);    }  } else {    throw new RuntimeCamelException("Cannot analyze the Exchange.HTTP_PATH header, due to: cannot find the right HTTP_BASE_URI");  }} catch (Throwable t) {  throw new RuntimeCamelException("Cannot analyze the Exchange.HTTP_PATH header, due to: " + t.getMessage(),t);} @AT@ 2120 @LENGTH@ 1199
---UPD IfStatement@@if (path.startsWith(basePath)) {  path=path.substring(basePath.length());  if (path.startsWith("/")) {    path=path.substring(1);  }} else {  throw new RuntimeCamelException("Can't anylze the Exchange.HTTP_PATH header, due to: can't find the right HTTP_BASE_URI");} @TO@ if (path.startsWith(basePath)) {  path=path.substring(basePath.length());  if (path.startsWith("/")) {    path=path.substring(1);  }} else {  throw new RuntimeCamelException("Cannot analyze the Exchange.HTTP_PATH header, due to: cannot find the right HTTP_BASE_URI");} @AT@ 2652 @LENGTH@ 428
------UPD Block@@ElseBody:{  throw new RuntimeCamelException("Can't anylze the Exchange.HTTP_PATH header, due to: can't find the right HTTP_BASE_URI");} @TO@ ElseBody:{  throw new RuntimeCamelException("Cannot analyze the Exchange.HTTP_PATH header, due to: cannot find the right HTTP_BASE_URI");} @AT@ 2910 @LENGTH@ 170
---------UPD ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException("Can't anylze the Exchange.HTTP_PATH header, due to: can't find the right HTTP_BASE_URI") @TO@ ClassInstanceCreation:new RuntimeCamelException("Cannot analyze the Exchange.HTTP_PATH header, due to: cannot find the right HTTP_BASE_URI") @AT@ 2936 @LENGTH@ 122
------------UPD ClassInstanceCreation@@RuntimeCamelException["Can't anylze the Exchange.HTTP_PATH header, due to: can't find the right HTTP_BASE_URI"] @TO@ RuntimeCamelException["Cannot analyze the Exchange.HTTP_PATH header, due to: cannot find the right HTTP_BASE_URI"] @AT@ 2942 @LENGTH@ 115
---------------UPD StringLiteral@@"Can't anylze the Exchange.HTTP_PATH header, due to: can't find the right HTTP_BASE_URI" @TO@ "Cannot analyze the Exchange.HTTP_PATH header, due to: cannot find the right HTTP_BASE_URI" @AT@ 2968 @LENGTH@ 88
---UPD CatchClause@@catch (Throwable t) {  throw new RuntimeCamelException("Can't anylze the Exchange.HTTP_PATH header, due to: " + t.getMessage(),t);} @TO@ catch (Throwable t) {  throw new RuntimeCamelException("Cannot analyze the Exchange.HTTP_PATH header, due to: " + t.getMessage(),t);} @AT@ 3099 @LENGTH@ 220
------UPD ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException("Can't anylze the Exchange.HTTP_PATH header, due to: " + t.getMessage(),t) @TO@ ClassInstanceCreation:new RuntimeCamelException("Cannot analyze the Exchange.HTTP_PATH header, due to: " + t.getMessage(),t) @AT@ 3141 @LENGTH@ 160
---------UPD ClassInstanceCreation@@RuntimeCamelException["Can't anylze the Exchange.HTTP_PATH header, due to: " + t.getMessage(), t] @TO@ RuntimeCamelException["Cannot analyze the Exchange.HTTP_PATH header, due to: " + t.getMessage(), t] @AT@ 3147 @LENGTH@ 153
------------UPD InfixExpression@@"Can't anylze the Exchange.HTTP_PATH header, due to: " + t.getMessage() @TO@ "Cannot analyze the Exchange.HTTP_PATH header, due to: " + t.getMessage() @AT@ 3173 @LENGTH@ 123
---------------UPD StringLiteral@@"Can't anylze the Exchange.HTTP_PATH header, due to: " @TO@ "Cannot analyze the Exchange.HTTP_PATH header, due to: " @AT@ 3173 @LENGTH@ 54


INS ExpressionStatement@@MethodInvocation:Assert.state(refCursorPosition >= 0,"invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number.") @TO@ MethodDeclaration@@protected, void, MethodName:openCursor, Connection con,  @AT@ 4800 @LENGTH@ 164
---INS MethodInvocation@@Assert.state(refCursorPosition >= 0,"invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number.") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(refCursorPosition >= 0,"invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number.") @AT@ 4800 @LENGTH@ 163
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(refCursorPosition >= 0,"invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number.") @AT@ 4800 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[refCursorPosition >= 0, "invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number."] @TO@ MethodInvocation@@Assert.state(refCursorPosition >= 0,"invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number.") @AT@ 4807 @LENGTH@ 156
---------INS InfixExpression@@refCursorPosition >= 0 @TO@ SimpleName@@MethodName:state:[refCursorPosition >= 0, "invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number."] @AT@ 4813 @LENGTH@ 22
------------INS SimpleName@@refCursorPosition @TO@ InfixExpression@@refCursorPosition >= 0 @AT@ 4813 @LENGTH@ 17
------------INS Operator@@>= @TO@ InfixExpression@@refCursorPosition >= 0 @AT@ 4830 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@refCursorPosition >= 0 @AT@ 4834 @LENGTH@ 1
---------INS InfixExpression@@"invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number." @TO@ SimpleName@@MethodName:state:[refCursorPosition >= 0, "invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number."] @AT@ 4842 @LENGTH@ 120
------------INS StringLiteral@@"invalid refCursorPosition specified as " @TO@ InfixExpression@@"invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number." @AT@ 4842 @LENGTH@ 41
------------INS Operator@@+ @TO@ InfixExpression@@"invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number." @AT@ 4883 @LENGTH@ 1
------------INS SimpleName@@refCursorPosition @TO@ InfixExpression@@"invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number." @AT@ 4886 @LENGTH@ 17
------------INS StringLiteral@@"; it can't be " @TO@ InfixExpression@@"invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number." @AT@ 4906 @LENGTH@ 16
------------INS StringLiteral@@"specified as a negative number." @TO@ InfixExpression@@"invalid refCursorPosition specified as " + refCursorPosition + "; it can't be "+ "specified as a negative number." @AT@ 4929 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:mock.setResultWaitTime(1000L) @TO@ MethodInvocation:mock.setResultWaitTime(3000L) @AT@ 1310 @LENGTH@ 30
---UPD MethodInvocation@@mock.setResultWaitTime(1000L) @TO@ mock.setResultWaitTime(3000L) @AT@ 1310 @LENGTH@ 29
------UPD SimpleName@@MethodName:setResultWaitTime:[1000L] @TO@ MethodName:setResultWaitTime:[3000L] @AT@ 1315 @LENGTH@ 24
---------UPD NumberLiteral@@1000L @TO@ 3000L @AT@ 1333 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:executionContext.putInt("JdbcPagingItemReader.start.after",2) @TO@ MethodInvocation:executionContext.putInt("JdbcPagingItemReader.start.after",count) @AT@ 2843 @LENGTH@ 63
---UPD MethodInvocation@@executionContext.putInt("JdbcPagingItemReader.start.after",2) @TO@ executionContext.putInt("JdbcPagingItemReader.start.after",count) @AT@ 2843 @LENGTH@ 62
------UPD SimpleName@@MethodName:putInt:["JdbcPagingItemReader.start.after", 2] @TO@ MethodName:putInt:["JdbcPagingItemReader.start.after", count] @AT@ 2860 @LENGTH@ 45
---------DEL NumberLiteral@@2 @AT@ 2903 @LENGTH@ 1
---------INS SimpleName@@count @TO@ SimpleName@@MethodName:putInt:["JdbcPagingItemReader.start.after", 2] @AT@ 2945 @LENGTH@ 5


UPD ReturnStatement@@InfixExpression:linkFlag == LF_PAX_EXTENDED_HEADER || linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER @TO@ InfixExpression:linkFlag == LF_PAX_EXTENDED_HEADER_LC || linkFlag == LF_PAX_EXTENDED_HEADER_UC @AT@ 15319 @LENGTH@ 87
---UPD InfixExpression@@linkFlag == LF_PAX_EXTENDED_HEADER || linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER @TO@ linkFlag == LF_PAX_EXTENDED_HEADER_LC || linkFlag == LF_PAX_EXTENDED_HEADER_UC @AT@ 15326 @LENGTH@ 79
------UPD InfixExpression@@linkFlag == LF_PAX_EXTENDED_HEADER @TO@ linkFlag == LF_PAX_EXTENDED_HEADER_LC @AT@ 15326 @LENGTH@ 34
---------UPD SimpleName@@LF_PAX_EXTENDED_HEADER @TO@ LF_PAX_EXTENDED_HEADER_LC @AT@ 15338 @LENGTH@ 22
------UPD InfixExpression@@linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER @TO@ linkFlag == LF_PAX_EXTENDED_HEADER_UC @AT@ 15364 @LENGTH@ 41
---------UPD SimpleName@@LF_PAX_GLOBAL_EXTENDED_HEADER @TO@ LF_PAX_EXTENDED_HEADER_UC @AT@ 15376 @LENGTH@ 29


DEL MethodDeclaration@@public, void, MethodName:testDefaultEH, Exception,  @AT@ 1409 @LENGTH@ 797
---DEL Modifier@@public @AT@ 1409 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1416 @LENGTH@ 4
---DEL SimpleName@@MethodName:testDefaultEH @AT@ 1421 @LENGTH@ 13
---DEL SimpleType@@Exception @AT@ 1444 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedMessageCount(0) @AT@ 1505 @LENGTH@ 55
------DEL MethodInvocation@@getMockEndpoint("mock:result").expectedMessageCount(0) @AT@ 1505 @LENGTH@ 54
---------DEL MethodInvocation@@MethodName:getMockEndpoint:["mock:result"] @AT@ 1505 @LENGTH@ 30
------------DEL StringLiteral@@"mock:result" @AT@ 1521 @LENGTH@ 13
---------DEL SimpleName@@MethodName:expectedMessageCount:[0] @AT@ 1536 @LENGTH@ 23
------------DEL NumberLiteral@@0 @AT@ 1557 @LENGTH@ 1
---DEL ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:dlc").expectedMessageCount(0) @AT@ 1569 @LENGTH@ 52
------DEL MethodInvocation@@getMockEndpoint("mock:dlc").expectedMessageCount(0) @AT@ 1569 @LENGTH@ 51
---------DEL MethodInvocation@@MethodName:getMockEndpoint:["mock:dlc"] @AT@ 1569 @LENGTH@ 27
------------DEL StringLiteral@@"mock:dlc" @AT@ 1585 @LENGTH@ 10
---------DEL SimpleName@@MethodName:expectedMessageCount:[0] @AT@ 1597 @LENGTH@ 23
------------DEL NumberLiteral@@0 @AT@ 1618 @LENGTH@ 1
---DEL VariableDeclarationStatement@@Exchange exchange=template.send("direct:start",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setBody("Damn");
  }
}
); @AT@ 1631 @LENGTH@ 213
------DEL SimpleType@@Exchange @AT@ 1631 @LENGTH@ 8
------DEL VariableDeclarationFragment@@exchange=template.send("direct:start",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setBody("Damn");
  }
}
) @AT@ 1640 @LENGTH@ 203
---------DEL SimpleName@@exchange @AT@ 1640 @LENGTH@ 8
---------DEL MethodInvocation@@template.send("direct:start",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setBody("Damn");
  }
}
) @AT@ 1651 @LENGTH@ 192
------------DEL SimpleName@@Name:template @AT@ 1651 @LENGTH@ 8
------------DEL SimpleName@@MethodName:send:["direct:start", new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setBody("Damn");
  }
}
] @AT@ 1660 @LENGTH@ 183
---------------DEL StringLiteral@@"direct:start" @AT@ 1665 @LENGTH@ 14
---------------DEL ClassInstanceCreation@@Processor[] @AT@ 1681 @LENGTH@ 161
------------------DEL New@@new @AT@ 1681 @LENGTH@ 3
------------------DEL SimpleType@@Processor @AT@ 1685 @LENGTH@ 9
------------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 1697 @LENGTH@ 145
---------------------DEL MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 1711 @LENGTH@ 121
------------------------DEL Modifier@@public @AT@ 1711 @LENGTH@ 6
------------------------DEL PrimitiveType@@void @AT@ 1718 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:process @AT@ 1723 @LENGTH@ 7
------------------------DEL SingleVariableDeclaration@@Exchange exchange @AT@ 1731 @LENGTH@ 17
---------------------------DEL SimpleType@@Exchange @AT@ 1731 @LENGTH@ 8
---------------------------DEL SimpleName@@exchange @AT@ 1740 @LENGTH@ 8
------------------------DEL SimpleType@@Exception @AT@ 1757 @LENGTH@ 9
------------------------DEL ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("Damn") @AT@ 1785 @LENGTH@ 33
---------------------------DEL MethodInvocation@@exchange.getIn().setBody("Damn") @AT@ 1785 @LENGTH@ 32
------------------------------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 1785 @LENGTH@ 16
------------------------------DEL SimpleName@@Name:exchange @AT@ 1785 @LENGTH@ 8
------------------------------DEL SimpleName@@MethodName:setBody:["Damn"] @AT@ 1802 @LENGTH@ 15
---------------------------------DEL StringLiteral@@"Damn" @AT@ 1810 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @AT@ 1854 @LENGTH@ 31
------DEL MethodInvocation@@MethodName:assertMockEndpointsSatisfied:[] @AT@ 1854 @LENGTH@ 30
---DEL ExpressionStatement@@MethodInvocation:assertTrue(exchange.isFailed()) @AT@ 1895 @LENGTH@ 32
------DEL MethodInvocation@@assertTrue(exchange.isFailed()) @AT@ 1895 @LENGTH@ 31
---------DEL SimpleName@@MethodName:assertTrue:[exchange.isFailed()] @AT@ 1895 @LENGTH@ 31
------------DEL MethodInvocation@@exchange.isFailed() @AT@ 1906 @LENGTH@ 19
---------------DEL SimpleName@@Name:exchange @AT@ 1906 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:isFailed:[] @AT@ 1915 @LENGTH@ 10
---DEL ExpressionStatement@@MethodInvocation:assertEquals("Damn cannot do this",exchange.getException(IllegalArgumentException.class).getMessage()) @AT@ 1936 @LENGTH@ 104
------DEL MethodInvocation@@assertEquals("Damn cannot do this",exchange.getException(IllegalArgumentException.class).getMessage()) @AT@ 1936 @LENGTH@ 103
---------DEL SimpleName@@MethodName:assertEquals:["Damn cannot do this", exchange.getException(IllegalArgumentException.class).getMessage()] @AT@ 1936 @LENGTH@ 103
------------DEL StringLiteral@@"Damn cannot do this" @AT@ 1949 @LENGTH@ 21
------------DEL MethodInvocation@@exchange.getException(IllegalArgumentException.class).getMessage() @AT@ 1972 @LENGTH@ 66
---------------DEL MethodInvocation@@MethodName:getException:[IllegalArgumentException.class] @AT@ 1972 @LENGTH@ 53
------------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 1994 @LENGTH@ 30
---------------DEL SimpleName@@Name:exchange @AT@ 1972 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getMessage:[] @AT@ 2026 @LENGTH@ 12
---DEL ExpressionStatement@@MethodInvocation:assertEquals(true,exchange.getIn().getHeader(Exchange.REDELIVERED)) @AT@ 2049 @LENGTH@ 69
------DEL MethodInvocation@@assertEquals(true,exchange.getIn().getHeader(Exchange.REDELIVERED)) @AT@ 2049 @LENGTH@ 68
---------DEL SimpleName@@MethodName:assertEquals:[true, exchange.getIn().getHeader(Exchange.REDELIVERED)] @AT@ 2049 @LENGTH@ 68
------------DEL BooleanLiteral@@true @AT@ 2062 @LENGTH@ 4
------------DEL MethodInvocation@@exchange.getIn().getHeader(Exchange.REDELIVERED) @AT@ 2068 @LENGTH@ 48
---------------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 2068 @LENGTH@ 16
---------------DEL SimpleName@@Name:exchange @AT@ 2068 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getHeader:[Exchange.REDELIVERED] @AT@ 2085 @LENGTH@ 31
------------------DEL QualifiedName@@Exchange.REDELIVERED @AT@ 2095 @LENGTH@ 20
---------------------DEL SimpleName@@Exchange @AT@ 2095 @LENGTH@ 8
---------------------DEL SimpleName@@REDELIVERED @AT@ 2104 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:assertEquals(2,exchange.getIn().getHeader(Exchange.REDELIVERY_COUNTER)) @AT@ 2127 @LENGTH@ 73
------DEL MethodInvocation@@assertEquals(2,exchange.getIn().getHeader(Exchange.REDELIVERY_COUNTER)) @AT@ 2127 @LENGTH@ 72
---------DEL SimpleName@@MethodName:assertEquals:[2, exchange.getIn().getHeader(Exchange.REDELIVERY_COUNTER)] @AT@ 2127 @LENGTH@ 72
------------DEL NumberLiteral@@2 @AT@ 2140 @LENGTH@ 1
------------DEL MethodInvocation@@exchange.getIn().getHeader(Exchange.REDELIVERY_COUNTER) @AT@ 2143 @LENGTH@ 55
---------------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 2143 @LENGTH@ 16
---------------DEL SimpleName@@Name:exchange @AT@ 2143 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getHeader:[Exchange.REDELIVERY_COUNTER] @AT@ 2160 @LENGTH@ 38
------------------DEL QualifiedName@@Exchange.REDELIVERY_COUNTER @AT@ 2170 @LENGTH@ 27
---------------------DEL SimpleName@@Exchange @AT@ 2170 @LENGTH@ 8
---------------------DEL SimpleName@@REDELIVERY_COUNTER @AT@ 2179 @LENGTH@ 18


UPD ReturnStatement@@MethodInvocation:template.requestBody("mina:tcp://localhost:8080?sync=true",index,String.class) @TO@ MethodInvocation:template.requestBody("mina:tcp://localhost:9090?sync=true",index,String.class) @AT@ 2102 @LENGTH@ 88
---UPD MethodInvocation@@template.requestBody("mina:tcp://localhost:8080?sync=true",index,String.class) @TO@ template.requestBody("mina:tcp://localhost:9090?sync=true",index,String.class) @AT@ 2109 @LENGTH@ 80
------UPD SimpleName@@MethodName:requestBody:["mina:tcp://localhost:8080?sync=true", index, String.class] @TO@ MethodName:requestBody:["mina:tcp://localhost:9090?sync=true", index, String.class] @AT@ 2118 @LENGTH@ 71
---------UPD StringLiteral@@"mina:tcp://localhost:8080?sync=true" @TO@ "mina:tcp://localhost:9090?sync=true" @AT@ 2130 @LENGTH@ 37


INS IfStatement@@if (recoverService != null) {  camelContext.getExecutorServiceStrategy().shutdownNow(recoverService);} @TO@ MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 33744 @LENGTH@ 122
---INS InfixExpression@@recoverService != null @TO@ IfStatement@@if (recoverService != null) {  camelContext.getExecutorServiceStrategy().shutdownNow(recoverService);} @AT@ 33748 @LENGTH@ 22
------INS SimpleName@@recoverService @TO@ InfixExpression@@recoverService != null @AT@ 33748 @LENGTH@ 14
------INS Operator@@!= @TO@ InfixExpression@@recoverService != null @AT@ 33762 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@recoverService != null @AT@ 33766 @LENGTH@ 4
---INS Block@@ThenBody:{  camelContext.getExecutorServiceStrategy().shutdownNow(recoverService);} @TO@ IfStatement@@if (recoverService != null) {  camelContext.getExecutorServiceStrategy().shutdownNow(recoverService);} @AT@ 33772 @LENGTH@ 94
------MOV ExpressionStatement@@MethodInvocation:camelContext.getExecutorServiceStrategy().shutdownNow(recoverService) @TO@ Block@@ThenBody:{  camelContext.getExecutorServiceStrategy().shutdownNow(recoverService);} @AT@ 33744 @LENGTH@ 70


UPD VariableDeclarationStatement@@String response=(String)template.requestBody("mina:tcp://localhost:6201?textline=true&sync=true","World"); @TO@ String response=(String)template.requestBody("mina:tcp://localhost:9201?textline=true&sync=true","World"); @AT@ 1634 @LENGTH@ 109
---UPD VariableDeclarationFragment@@response=(String)template.requestBody("mina:tcp://localhost:6201?textline=true&sync=true","World") @TO@ response=(String)template.requestBody("mina:tcp://localhost:9201?textline=true&sync=true","World") @AT@ 1641 @LENGTH@ 101
------UPD CastExpression@@(String)template.requestBody("mina:tcp://localhost:6201?textline=true&sync=true","World") @TO@ (String)template.requestBody("mina:tcp://localhost:9201?textline=true&sync=true","World") @AT@ 1652 @LENGTH@ 90
---------UPD MethodInvocation@@template.requestBody("mina:tcp://localhost:6201?textline=true&sync=true","World") @TO@ template.requestBody("mina:tcp://localhost:9201?textline=true&sync=true","World") @AT@ 1660 @LENGTH@ 82
------------UPD SimpleName@@MethodName:requestBody:["mina:tcp://localhost:6201?textline=true&sync=true", "World"] @TO@ MethodName:requestBody:["mina:tcp://localhost:9201?textline=true&sync=true", "World"] @AT@ 1669 @LENGTH@ 73
---------------UPD StringLiteral@@"mina:tcp://localhost:6201?textline=true&sync=true" @TO@ "mina:tcp://localhost:9201?textline=true&sync=true" @AT@ 1681 @LENGTH@ 51


INS ExpressionStatement@@MethodInvocation:Assert.notNull(names,"Names must be non-null") @TO@ MethodDeclaration@@public, void, MethodName:setNames, String[] names,  @AT@ 1427 @LENGTH@ 48
---INS MethodInvocation@@Assert.notNull(names,"Names must be non-null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(names,"Names must be non-null") @AT@ 1427 @LENGTH@ 47
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(names,"Names must be non-null") @AT@ 1427 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[names, "Names must be non-null"] @TO@ MethodInvocation@@Assert.notNull(names,"Names must be non-null") @AT@ 1434 @LENGTH@ 40
---------INS SimpleName@@names @TO@ SimpleName@@MethodName:notNull:[names, "Names must be non-null"] @AT@ 1442 @LENGTH@ 5
---------INS StringLiteral@@"Names must be non-null" @TO@ SimpleName@@MethodName:notNull:[names, "Names must be non-null"] @AT@ 1449 @LENGTH@ 24


UPD ExpressionStatement@@Assignment:url=customerResourceLocator(url) @TO@ Assignment:url=customResourceLocator(url) @AT@ 7307 @LENGTH@ 35
---UPD Assignment@@url=customerResourceLocator(url) @TO@ url=customResourceLocator(url) @AT@ 7307 @LENGTH@ 34
------UPD MethodInvocation@@customerResourceLocator(url) @TO@ customResourceLocator(url) @AT@ 7313 @LENGTH@ 28
---------UPD SimpleName@@MethodName:customerResourceLocator:[url] @TO@ MethodName:customResourceLocator:[url] @AT@ 7313 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:Assert.state(refCursorPosition == 0 || refCursorPosition > parameters.length,"refCursorPosition specified as " + refCursorPosition + " but there are only "+ parameters.length+ " parameters defined.") @TO@ MethodInvocation:Assert.state(refCursorPosition == 0 || refCursorPosition > 0,"invalid refCursorPosition specified as " + refCursorPosition + "; there are "+ parameters.length+ " parameters defined.") @AT@ 4800 @LENGTH@ 213
---UPD MethodInvocation@@Assert.state(refCursorPosition == 0 || refCursorPosition > parameters.length,"refCursorPosition specified as " + refCursorPosition + " but there are only "+ parameters.length+ " parameters defined.") @TO@ Assert.state(refCursorPosition == 0 || refCursorPosition > 0,"invalid refCursorPosition specified as " + refCursorPosition + "; there are "+ parameters.length+ " parameters defined.") @AT@ 4800 @LENGTH@ 212
------UPD SimpleName@@MethodName:state:[refCursorPosition == 0 || refCursorPosition > parameters.length, "refCursorPosition specified as " + refCursorPosition + " but there are only "+ parameters.length+ " parameters defined."] @TO@ MethodName:state:[refCursorPosition == 0 || refCursorPosition > 0, "invalid refCursorPosition specified as " + refCursorPosition + "; there are "+ parameters.length+ " parameters defined."] @AT@ 4807 @LENGTH@ 205
---------UPD InfixExpression@@refCursorPosition == 0 || refCursorPosition > parameters.length @TO@ refCursorPosition == 0 || refCursorPosition > 0 @AT@ 4813 @LENGTH@ 63
------------UPD InfixExpression@@refCursorPosition > parameters.length @TO@ refCursorPosition > 0 @AT@ 4839 @LENGTH@ 37
---------------DEL QualifiedName@@parameters.length @AT@ 4859 @LENGTH@ 17
------------------DEL SimpleName@@parameters @AT@ 4859 @LENGTH@ 10
------------------DEL SimpleName@@length @AT@ 4870 @LENGTH@ 6
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@refCursorPosition > parameters.length @AT@ 5026 @LENGTH@ 1
---------UPD InfixExpression@@"refCursorPosition specified as " + refCursorPosition + " but there are only "+ parameters.length+ " parameters defined." @TO@ "invalid refCursorPosition specified as " + refCursorPosition + "; there are "+ parameters.length+ " parameters defined." @AT@ 4883 @LENGTH@ 128
------------UPD StringLiteral@@"refCursorPosition specified as " @TO@ "invalid refCursorPosition specified as " @AT@ 4883 @LENGTH@ 33
------------UPD StringLiteral@@" but there are only " @TO@ "; there are " @AT@ 4939 @LENGTH@ 22


UPD TryStatement@@try {  FactoryFinder finder=context.getFactoryFinder("META-INF/services/org/apache/camel/component/");  Class<?> clazz=finder.findClass("juel","impl.");  if (clazz != null) {    expressionFactory=(ExpressionFactory)clazz.newInstance();  }} catch (ClassNotFoundException e) {  LOG.debug("'impl.class' not found",e);}catch (IOException e) {  LOG.debug("No impl class for juel ExpressionFactory defined in 'META-INF/services/org/apache/camel/component/el'",e);}catch (InstantiationException e) {  LOG.debug("Failed to instantiate juel ExpressionFactory implementation class.",e);}catch (IllegalAccessException e) {  LOG.debug("Failed to instantiate juel ExpressionFactory implementation class.",e);} @TO@ try {  FactoryFinder finder=context.getFactoryFinder("META-INF/services/org/apache/camel/language/");  Class<?> clazz=finder.findClass("el","impl.");  if (clazz != null) {    expressionFactory=(ExpressionFactory)clazz.newInstance();  }} catch (ClassNotFoundException e) {  LOG.debug("'impl.class' not found",e);}catch (IOException e) {  LOG.debug("No impl class for juel ExpressionFactory defined in 'META-INF/services/org/apache/camel/language/el'",e);}catch (InstantiationException e) {  LOG.debug("Failed to instantiate juel ExpressionFactory implementation class.",e);}catch (IllegalAccessException e) {  LOG.debug("Failed to instantiate juel ExpressionFactory implementation class.",e);} @AT@ 3242 @LENGTH@ 912
---UPD VariableDeclarationStatement@@FactoryFinder finder=context.getFactoryFinder("META-INF/services/org/apache/camel/component/"); @TO@ FactoryFinder finder=context.getFactoryFinder("META-INF/services/org/apache/camel/language/"); @AT@ 3264 @LENGTH@ 97
------UPD VariableDeclarationFragment@@finder=context.getFactoryFinder("META-INF/services/org/apache/camel/component/") @TO@ finder=context.getFactoryFinder("META-INF/services/org/apache/camel/language/") @AT@ 3278 @LENGTH@ 82
---------UPD MethodInvocation@@context.getFactoryFinder("META-INF/services/org/apache/camel/component/") @TO@ context.getFactoryFinder("META-INF/services/org/apache/camel/language/") @AT@ 3287 @LENGTH@ 73
------------UPD SimpleName@@MethodName:getFactoryFinder:["META-INF/services/org/apache/camel/component/"] @TO@ MethodName:getFactoryFinder:["META-INF/services/org/apache/camel/language/"] @AT@ 3295 @LENGTH@ 65
---------------UPD StringLiteral@@"META-INF/services/org/apache/camel/component/" @TO@ "META-INF/services/org/apache/camel/language/" @AT@ 3312 @LENGTH@ 47
---UPD VariableDeclarationStatement@@Class<?> clazz=finder.findClass("juel","impl."); @TO@ Class<?> clazz=finder.findClass("el","impl."); @AT@ 3378 @LENGTH@ 51
------UPD VariableDeclarationFragment@@clazz=finder.findClass("juel","impl.") @TO@ clazz=finder.findClass("el","impl.") @AT@ 3387 @LENGTH@ 41
---------UPD MethodInvocation@@finder.findClass("juel","impl.") @TO@ finder.findClass("el","impl.") @AT@ 3395 @LENGTH@ 33
------------UPD SimpleName@@MethodName:findClass:["juel", "impl."] @TO@ MethodName:findClass:["el", "impl."] @AT@ 3402 @LENGTH@ 26
---------------UPD StringLiteral@@"juel" @TO@ "el" @AT@ 3412 @LENGTH@ 6
---UPD CatchClause@@catch (IOException e) {  LOG.debug("No impl class for juel ExpressionFactory defined in 'META-INF/services/org/apache/camel/component/el'",e);} @TO@ catch (IOException e) {  LOG.debug("No impl class for juel ExpressionFactory defined in 'META-INF/services/org/apache/camel/language/el'",e);} @AT@ 3684 @LENGTH@ 172
------UPD ExpressionStatement@@MethodInvocation:LOG.debug("No impl class for juel ExpressionFactory defined in 'META-INF/services/org/apache/camel/component/el'",e) @TO@ MethodInvocation:LOG.debug("No impl class for juel ExpressionFactory defined in 'META-INF/services/org/apache/camel/language/el'",e) @AT@ 3724 @LENGTH@ 118
---------UPD MethodInvocation@@LOG.debug("No impl class for juel ExpressionFactory defined in 'META-INF/services/org/apache/camel/component/el'",e) @TO@ LOG.debug("No impl class for juel ExpressionFactory defined in 'META-INF/services/org/apache/camel/language/el'",e) @AT@ 3724 @LENGTH@ 117
------------UPD SimpleName@@MethodName:debug:["No impl class for juel ExpressionFactory defined in 'META-INF/services/org/apache/camel/component/el'", e] @TO@ MethodName:debug:["No impl class for juel ExpressionFactory defined in 'META-INF/services/org/apache/camel/language/el'", e] @AT@ 3728 @LENGTH@ 113
---------------UPD StringLiteral@@"No impl class for juel ExpressionFactory defined in 'META-INF/services/org/apache/camel/component/el'" @TO@ "No impl class for juel ExpressionFactory defined in 'META-INF/services/org/apache/camel/language/el'" @AT@ 3734 @LENGTH@ 103


UPD MethodDeclaration@@public, static, void, MethodName:render, StringBuilder buffer, ProcessorDefinition<?> processor,  @TO@ public, static, void, MethodName:render, StringBuilder buffer, ProcessorDefinition processor,  @AT@ 1552 @LENGTH@ 1587
---UPD SingleVariableDeclaration@@ProcessorDefinition<?> processor @TO@ ProcessorDefinition processor @AT@ 1600 @LENGTH@ 32
------DEL ParameterizedType@@ProcessorDefinition<?> @AT@ 1600 @LENGTH@ 22
---------DEL SimpleType@@ProcessorDefinition @AT@ 1600 @LENGTH@ 19
---------DEL WildcardType@@? @AT@ 1620 @LENGTH@ 1
------INS SimpleType@@ProcessorDefinition @TO@ SingleVariableDeclaration@@ProcessorDefinition<?> processor @AT@ 1600 @LENGTH@ 19


UPD MethodDeclaration@@protected, ItemReader<Foo>, MethodName:getItemReader, Exception,  @TO@ protected, AbstractPagingItemReader<Foo>, MethodName:getItemReader, Exception,  @AT@ 826 @LENGTH@ 956
---UPD ParameterizedType@@ItemReader<Foo> @TO@ AbstractPagingItemReader<Foo> @AT@ 836 @LENGTH@ 15
------UPD SimpleType@@ItemReader @TO@ AbstractPagingItemReader @AT@ 836 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodDeclaration@@public, void, MethodName:testHawtDBAggregateNotLostRemovedWhenConfirmed, Exception,  @AT@ 2108 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 2108 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 2108 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 2115 @LENGTH@ 11
---------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 2121 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:mock.message(0).constant("<span style=\"font-size=22px;\">Minnie Mouse</span>") @TO@ MethodInvocation:mock.message(0).body().contains("<span style=\"font-size=22px;\">Minnie Mouse</span>") @AT@ 1328 @LENGTH@ 80
---UPD MethodInvocation@@mock.message(0).constant("<span style=\"font-size=22px;\">Minnie Mouse</span>") @TO@ mock.message(0).body().contains("<span style=\"font-size=22px;\">Minnie Mouse</span>") @AT@ 1328 @LENGTH@ 79
------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@mock.message(0).constant("<span style=\"font-size=22px;\">Minnie Mouse</span>") @AT@ 1328 @LENGTH@ 22
------UPD SimpleName@@MethodName:constant:["<span style=\"font-size=22px;\">Minnie Mouse</span>"] @TO@ MethodName:contains:["<span style=\"font-size=22px;\">Minnie Mouse</span>"] @AT@ 1344 @LENGTH@ 63


UPD ExpressionStatement@@MethodInvocation:assertEquals("Could not find 2 producers: " + s,2,s.size()) @TO@ MethodInvocation:assertEquals("Could not find 2 producers: " + s,0,s.size()) @AT@ 2975 @LENGTH@ 62
---UPD MethodInvocation@@assertEquals("Could not find 2 producers: " + s,2,s.size()) @TO@ assertEquals("Could not find 2 producers: " + s,0,s.size()) @AT@ 2975 @LENGTH@ 61
------UPD SimpleName@@MethodName:assertEquals:["Could not find 2 producers: " + s, 2, s.size()] @TO@ MethodName:assertEquals:["Could not find 2 producers: " + s, 0, s.size()] @AT@ 2975 @LENGTH@ 61
---------UPD NumberLiteral@@2 @TO@ 0 @AT@ 3024 @LENGTH@ 1


UPD VariableDeclarationStatement@@Comparator<File> c=new CompositeFileComparator((Iterable)null); @TO@ Comparator<File> c=new CompositeFileComparator((Iterable<Comparator<File>>)null); @AT@ 3148 @LENGTH@ 65
---UPD VariableDeclarationFragment@@c=new CompositeFileComparator((Iterable)null) @TO@ c=new CompositeFileComparator((Iterable<Comparator<File>>)null) @AT@ 3165 @LENGTH@ 47
------UPD ClassInstanceCreation@@CompositeFileComparator[(Iterable)null] @TO@ CompositeFileComparator[(Iterable<Comparator<File>>)null] @AT@ 3169 @LENGTH@ 43
---------UPD CastExpression@@(Iterable)null @TO@ (Iterable<Comparator<File>>)null @AT@ 3197 @LENGTH@ 14
------------INS ParameterizedType@@Iterable<Comparator<File>> @TO@ CastExpression@@(Iterable)null @AT@ 3198 @LENGTH@ 26
---------------INS SimpleType@@Iterable @TO@ ParameterizedType@@Iterable<Comparator<File>> @AT@ 3198 @LENGTH@ 8
---------------INS ParameterizedType@@Comparator<File> @TO@ ParameterizedType@@Iterable<Comparator<File>> @AT@ 3207 @LENGTH@ 16
------------------INS SimpleType@@Comparator @TO@ ParameterizedType@@Comparator<File> @AT@ 3207 @LENGTH@ 10
------------------INS SimpleType@@File @TO@ ParameterizedType@@Comparator<File> @AT@ 3218 @LENGTH@ 4
------------DEL SimpleType@@Iterable @AT@ 3198 @LENGTH@ 8


DEL FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(PersistentReplyToFutureHandler.class)] @AT@ 1375 @LENGTH@ 97
---DEL Modifier@@private @AT@ 1375 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1383 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1390 @LENGTH@ 5
---DEL Modifier@@transient @AT@ 1396 @LENGTH@ 9
---DEL SimpleType@@Log @AT@ 1406 @LENGTH@ 3
---DEL VariableDeclarationFragment@@LOG=LogFactory.getLog(PersistentReplyToFutureHandler.class) @AT@ 1410 @LENGTH@ 61
------DEL SimpleName@@LOG @AT@ 1410 @LENGTH@ 3
------DEL MethodInvocation@@LogFactory.getLog(PersistentReplyToFutureHandler.class) @AT@ 1416 @LENGTH@ 55
---------DEL SimpleName@@Name:LogFactory @AT@ 1416 @LENGTH@ 10
---------DEL SimpleName@@MethodName:getLog:[PersistentReplyToFutureHandler.class] @AT@ 1427 @LENGTH@ 44
------------DEL TypeLiteral@@PersistentReplyToFutureHandler.class @AT@ 1434 @LENGTH@ 36


UPD VariableDeclarationStatement@@Map body=new HashMap(); @TO@ Map<String,Object> body=new HashMap<String,Object>(); @AT@ 5990 @LENGTH@ 25
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map body=new HashMap(); @AT@ 5990 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 5990 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 5994 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 6002 @LENGTH@ 6
---DEL SimpleType@@Map @AT@ 5990 @LENGTH@ 3
---UPD VariableDeclarationFragment@@body=new HashMap() @TO@ body=new HashMap<String,Object>() @AT@ 5994 @LENGTH@ 20
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 6001 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 6005 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 6021 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 6021 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 6029 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 6037 @LENGTH@ 6


INS MethodDeclaration@@public, String, MethodName:getTestMethodName,  @TO@ TypeDeclaration@@[public, abstract]TestSupport, TestCase @AT@ 16837 @LENGTH@ 67
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getTestMethodName,  @AT@ 16837 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getTestMethodName,  @AT@ 16844 @LENGTH@ 6
---INS SimpleName@@MethodName:getTestMethodName @TO@ MethodDeclaration@@public, String, MethodName:getTestMethodName,  @AT@ 16851 @LENGTH@ 17
---INS ReturnStatement@@MethodInvocation:getName() @TO@ MethodDeclaration@@public, String, MethodName:getTestMethodName,  @AT@ 16881 @LENGTH@ 17
------INS MethodInvocation@@MethodName:getName:[] @TO@ ReturnStatement@@MethodInvocation:getName() @AT@ 16888 @LENGTH@ 9


UPD TryStatement@@try {  maybeStart();} catch (Exception e) {  throw wrapRuntimeCamelException(e);} @TO@ try {  resetFirstStartDone();  maybeStart();} catch (Exception e) {  throw wrapRuntimeCamelException(e);} @AT@ 4376 @LENGTH@ 137
---INS ExpressionStatement@@MethodInvocation:resetFirstStartDone() @TO@ TryStatement@@try {  maybeStart();} catch (Exception e) {  throw wrapRuntimeCamelException(e);} @AT@ 4558 @LENGTH@ 22
------INS MethodInvocation@@MethodName:resetFirstStartDone:[] @TO@ ExpressionStatement@@MethodInvocation:resetFirstStartDone() @AT@ 4558 @LENGTH@ 21


UPD ReturnStatement@@SimpleName:answer @TO@ ClassInstanceCreation:new UnitOfWorkProcessor(answer) @AT@ 4941 @LENGTH@ 14
---DEL SimpleName@@answer @AT@ 4948 @LENGTH@ 6
---INS ClassInstanceCreation@@UnitOfWorkProcessor[answer] @TO@ ReturnStatement@@SimpleName:answer @AT@ 5120 @LENGTH@ 31
------INS New@@new @TO@ ClassInstanceCreation@@UnitOfWorkProcessor[answer] @AT@ 5120 @LENGTH@ 3
------INS SimpleType@@UnitOfWorkProcessor @TO@ ClassInstanceCreation@@UnitOfWorkProcessor[answer] @AT@ 5124 @LENGTH@ 19
------INS SimpleName@@answer @TO@ ClassInstanceCreation@@UnitOfWorkProcessor[answer] @AT@ 5144 @LENGTH@ 6


UPD Block@@ThenBody:{  String[] parts=remainder.split(":");  if (parts.length != 2) {    throw new ExpressionIllegalSyntaxException("Valid syntax: ${date:command:pattern} was: " + expression);  }  String command=parts[0];  String pattern=parts[1];  return ExpressionBuilder.dateExpression(command,pattern);} @TO@ ThenBody:{  String[] parts=remainder.split(":");  if (parts.length < 2) {    throw new ExpressionIllegalSyntaxException("Valid syntax: ${date:command:pattern} was: " + expression);  }  String command=ObjectHelper.before(remainder,":");  String pattern=ObjectHelper.after(remainder,":");  return ExpressionBuilder.dateExpression(command,pattern);} @AT@ 6489 @LENGTH@ 382
---UPD IfStatement@@if (parts.length != 2) {  throw new ExpressionIllegalSyntaxException("Valid syntax: ${date:command:pattern} was: " + expression);} @TO@ if (parts.length < 2) {  throw new ExpressionIllegalSyntaxException("Valid syntax: ${date:command:pattern} was: " + expression);} @AT@ 6554 @LENGTH@ 158
------UPD InfixExpression@@parts.length != 2 @TO@ parts.length < 2 @AT@ 6558 @LENGTH@ 17
---------UPD Operator@@!= @TO@ < @AT@ 6570 @LENGTH@ 2
---UPD VariableDeclarationStatement@@String command=parts[0]; @TO@ String command=ObjectHelper.before(remainder,":"); @AT@ 6725 @LENGTH@ 26
------UPD VariableDeclarationFragment@@command=parts[0] @TO@ command=ObjectHelper.before(remainder,":") @AT@ 6732 @LENGTH@ 18
---------INS MethodInvocation@@ObjectHelper.before(remainder,":") @TO@ VariableDeclarationFragment@@command=parts[0] @AT@ 6741 @LENGTH@ 35
------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.before(remainder,":") @AT@ 6741 @LENGTH@ 12
------------INS SimpleName@@MethodName:before:[remainder, ":"] @TO@ MethodInvocation@@ObjectHelper.before(remainder,":") @AT@ 6754 @LENGTH@ 22
---------------INS SimpleName@@remainder @TO@ SimpleName@@MethodName:before:[remainder, ":"] @AT@ 6761 @LENGTH@ 9
---------------INS StringLiteral@@":" @TO@ SimpleName@@MethodName:before:[remainder, ":"] @AT@ 6772 @LENGTH@ 3
---------DEL ArrayAccess@@parts[0] @AT@ 6742 @LENGTH@ 8
------------DEL SimpleName@@parts @AT@ 6742 @LENGTH@ 5
------------DEL NumberLiteral@@0 @AT@ 6748 @LENGTH@ 1
---UPD VariableDeclarationStatement@@String pattern=parts[1]; @TO@ String pattern=ObjectHelper.after(remainder,":"); @AT@ 6764 @LENGTH@ 26
------UPD VariableDeclarationFragment@@pattern=parts[1] @TO@ pattern=ObjectHelper.after(remainder,":") @AT@ 6771 @LENGTH@ 18
---------DEL ArrayAccess@@parts[1] @AT@ 6781 @LENGTH@ 8
------------DEL SimpleName@@parts @AT@ 6781 @LENGTH@ 5
------------DEL NumberLiteral@@1 @AT@ 6787 @LENGTH@ 1
---------INS MethodInvocation@@ObjectHelper.after(remainder,":") @TO@ VariableDeclarationFragment@@pattern=parts[1] @AT@ 6807 @LENGTH@ 34
------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.after(remainder,":") @AT@ 6807 @LENGTH@ 12
------------INS SimpleName@@MethodName:after:[remainder, ":"] @TO@ MethodInvocation@@ObjectHelper.after(remainder,":") @AT@ 6820 @LENGTH@ 21
---------------INS SimpleName@@remainder @TO@ SimpleName@@MethodName:after:[remainder, ":"] @AT@ 6826 @LENGTH@ 9
---------------INS StringLiteral@@":" @TO@ SimpleName@@MethodName:after:[remainder, ":"] @AT@ 6837 @LENGTH@ 3


MOV FieldDeclaration@@protected, volatile, int, [pendingExchanges] @TO@ TypeDeclaration@@[public]IBatisPollingConsumer, ScheduledPollConsumer[BatchConsumer, ShutdownAware] @AT@ 3978 @LENGTH@ 40


UPD TypeDeclaration@@[@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]StepExecutionsViewTests, AbstractManagerViewTests @TO@ [@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]StepExecutionsViewTests, AbstractManagerViewTests @AT@ 1475 @LENGTH@ 1174
---UPD NormalAnnotation@@@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml") @TO@ @ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml") @AT@ 1475 @LENGTH@ 142


INS ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(executorService,"executorService") @TO@ MethodDeclaration@@public, void, MethodName:shutdown, ExecutorService executorService,  @AT@ 12897 @LENGTH@ 57
---INS MethodInvocation@@ObjectHelper.notNull(executorService,"executorService") @TO@ ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(executorService,"executorService") @AT@ 12897 @LENGTH@ 56
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.notNull(executorService,"executorService") @AT@ 12897 @LENGTH@ 12
------INS SimpleName@@MethodName:notNull:[executorService, "executorService"] @TO@ MethodInvocation@@ObjectHelper.notNull(executorService,"executorService") @AT@ 12910 @LENGTH@ 43
---------INS SimpleName@@executorService @TO@ SimpleName@@MethodName:notNull:[executorService, "executorService"] @AT@ 12918 @LENGTH@ 15
---------INS StringLiteral@@"executorService" @TO@ SimpleName@@MethodName:notNull:[executorService, "executorService"] @AT@ 12935 @LENGTH@ 17


INS TryStatement@@try {  ModelFileGenerator generator=new ModelFileGenerator(JAXBContext.newInstance("org.apache.camel.model"));  generator.marshalRoutesUsingJaxb(outputDirectory + "/route.xml",context.getRouteDefinitions());} catch (IllegalArgumentException e) {  if (e.getMessage().startsWith("Not supported")) {    return;  } else {    throw e;  }} @TO@ MethodDeclaration@@public, void, MethodName:testGenerateModel, Exception,  @AT@ 1247 @LENGTH@ 508
---MOV VariableDeclarationStatement@@ModelFileGenerator generator=new ModelFileGenerator(JAXBContext.newInstance("org.apache.camel.model")); @TO@ TryStatement@@try {  ModelFileGenerator generator=new ModelFileGenerator(JAXBContext.newInstance("org.apache.camel.model"));  generator.marshalRoutesUsingJaxb(outputDirectory + "/route.xml",context.getRouteDefinitions());} catch (IllegalArgumentException e) {  if (e.getMessage().startsWith("Not supported")) {    return;  } else {    throw e;  }} @AT@ 1247 @LENGTH@ 105
---MOV ExpressionStatement@@MethodInvocation:generator.marshalRoutesUsingJaxb(outputDirectory + "/route.xml",context.getRouteDefinitions()) @TO@ TryStatement@@try {  ModelFileGenerator generator=new ModelFileGenerator(JAXBContext.newInstance("org.apache.camel.model"));  generator.marshalRoutesUsingJaxb(outputDirectory + "/route.xml",context.getRouteDefinitions());} catch (IllegalArgumentException e) {  if (e.getMessage().startsWith("Not supported")) {    return;  } else {    throw e;  }} @AT@ 1361 @LENGTH@ 96
---INS CatchClause@@catch (IllegalArgumentException e) {  if (e.getMessage().startsWith("Not supported")) {    return;  } else {    throw e;  }} @TO@ TryStatement@@try {  ModelFileGenerator generator=new ModelFileGenerator(JAXBContext.newInstance("org.apache.camel.model"));  generator.marshalRoutesUsingJaxb(outputDirectory + "/route.xml",context.getRouteDefinitions());} catch (IllegalArgumentException e) {  if (e.getMessage().startsWith("Not supported")) {    return;  } else {    throw e;  }} @AT@ 1490 @LENGTH@ 265
------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  if (e.getMessage().startsWith("Not supported")) {    return;  } else {    throw e;  }} @AT@ 1497 @LENGTH@ 26
---------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 1497 @LENGTH@ 24
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 1522 @LENGTH@ 1
------INS IfStatement@@if (e.getMessage().startsWith("Not supported")) {  return;} else {  throw e;} @TO@ CatchClause@@catch (IllegalArgumentException e) {  if (e.getMessage().startsWith("Not supported")) {    return;  } else {    throw e;  }} @AT@ 1539 @LENGTH@ 206
---------INS MethodInvocation@@e.getMessage().startsWith("Not supported") @TO@ IfStatement@@if (e.getMessage().startsWith("Not supported")) {  return;} else {  throw e;} @AT@ 1543 @LENGTH@ 42
------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage().startsWith("Not supported") @AT@ 1543 @LENGTH@ 14
------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage().startsWith("Not supported") @AT@ 1543 @LENGTH@ 1
------------INS SimpleName@@MethodName:startsWith:["Not supported"] @TO@ MethodInvocation@@e.getMessage().startsWith("Not supported") @AT@ 1558 @LENGTH@ 27
---------------INS StringLiteral@@"Not supported" @TO@ SimpleName@@MethodName:startsWith:["Not supported"] @AT@ 1569 @LENGTH@ 15
---------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (e.getMessage().startsWith("Not supported")) {  return;} else {  throw e;} @AT@ 1587 @LENGTH@ 112
------------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 1678 @LENGTH@ 7
---------INS Block@@ElseBody:{  throw e;} @TO@ IfStatement@@if (e.getMessage().startsWith("Not supported")) {  return;} else {  throw e;} @AT@ 1705 @LENGTH@ 40
------------INS ThrowStatement@@SimpleName:e @TO@ Block@@ElseBody:{  throw e;} @AT@ 1723 @LENGTH@ 8
---------------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 1729 @LENGTH@ 1


UPD MethodDeclaration@@public, ResequenceDefinition, MethodName:resequencer, Expression... expressions,  @TO@ public, ResequenceDefinition, MethodName:resequence, Expression... expressions,  @AT@ 50324 @LENGTH@ 217
---UPD SimpleName@@MethodName:resequencer @TO@ MethodName:resequence @AT@ 50352 @LENGTH@ 11


INS MethodDeclaration@@public, static, boolean, MethodName:isAbsolute, File file,  @TO@ TypeDeclaration@@[public, final]FileUtil,  @AT@ 10206 @LENGTH@ 293
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isAbsolute, File file,  @AT@ 10206 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isAbsolute, File file,  @AT@ 10213 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isAbsolute, File file,  @AT@ 10220 @LENGTH@ 7
---INS SimpleName@@MethodName:isAbsolute @TO@ MethodDeclaration@@public, static, boolean, MethodName:isAbsolute, File file,  @AT@ 10228 @LENGTH@ 10
---INS SingleVariableDeclaration@@File file @TO@ MethodDeclaration@@public, static, boolean, MethodName:isAbsolute, File file,  @AT@ 10239 @LENGTH@ 9
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File file @AT@ 10239 @LENGTH@ 4
------INS SimpleName@@file @TO@ SingleVariableDeclaration@@File file @AT@ 10244 @LENGTH@ 4
---INS IfStatement@@if (isWindows()) {  String path=file.getPath();  if (path.startsWith(File.separator)) {    return true;  }} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isAbsolute, File file,  @AT@ 10260 @LENGTH@ 199
------INS MethodInvocation@@MethodName:isWindows:[] @TO@ IfStatement@@if (isWindows()) {  String path=file.getPath();  if (path.startsWith(File.separator)) {    return true;  }} @AT@ 10264 @LENGTH@ 11
------INS Block@@ThenBody:{  String path=file.getPath();  if (path.startsWith(File.separator)) {    return true;  }} @TO@ IfStatement@@if (isWindows()) {  String path=file.getPath();  if (path.startsWith(File.separator)) {    return true;  }} @AT@ 10277 @LENGTH@ 182
---------INS VariableDeclarationStatement@@String path=file.getPath(); @TO@ Block@@ThenBody:{  String path=file.getPath();  if (path.startsWith(File.separator)) {    return true;  }} @AT@ 10326 @LENGTH@ 29
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String path=file.getPath(); @AT@ 10326 @LENGTH@ 6
------------INS VariableDeclarationFragment@@path=file.getPath() @TO@ VariableDeclarationStatement@@String path=file.getPath(); @AT@ 10333 @LENGTH@ 21
---------------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=file.getPath() @AT@ 10333 @LENGTH@ 4
---------------INS MethodInvocation@@file.getPath() @TO@ VariableDeclarationFragment@@path=file.getPath() @AT@ 10340 @LENGTH@ 14
------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getPath() @AT@ 10340 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@file.getPath() @AT@ 10345 @LENGTH@ 9
---------INS IfStatement@@if (path.startsWith(File.separator)) {  return true;} @TO@ Block@@ThenBody:{  String path=file.getPath();  if (path.startsWith(File.separator)) {    return true;  }} @AT@ 10368 @LENGTH@ 81
------------INS MethodInvocation@@path.startsWith(File.separator) @TO@ IfStatement@@if (path.startsWith(File.separator)) {  return true;} @AT@ 10372 @LENGTH@ 31
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.startsWith(File.separator) @AT@ 10372 @LENGTH@ 4
---------------INS SimpleName@@MethodName:startsWith:[File.separator] @TO@ MethodInvocation@@path.startsWith(File.separator) @AT@ 10377 @LENGTH@ 26
------------------INS QualifiedName@@File.separator @TO@ SimpleName@@MethodName:startsWith:[File.separator] @AT@ 10388 @LENGTH@ 14
---------------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 10388 @LENGTH@ 4
---------------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 10393 @LENGTH@ 9
------------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (path.startsWith(File.separator)) {  return true;} @AT@ 10405 @LENGTH@ 44
---------------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 10423 @LENGTH@ 12
------------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 10430 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:file.isAbsolute() @TO@ MethodDeclaration@@public, static, boolean, MethodName:isAbsolute, File file,  @AT@ 10468 @LENGTH@ 25
------INS MethodInvocation@@file.isAbsolute() @TO@ ReturnStatement@@MethodInvocation:file.isAbsolute() @AT@ 10475 @LENGTH@ 17
---------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.isAbsolute() @AT@ 10475 @LENGTH@ 4
---------INS SimpleName@@MethodName:isAbsolute:[] @TO@ MethodInvocation@@file.isAbsolute() @AT@ 10480 @LENGTH@ 12


UPD EnhancedForStatement@@for (Element child : (List<Element>)DomUtils.getChildElementsByTagName(exceptionClassesElement,elementName)) {  String className=child.getAttribute("class");  try {    Class<Object> cls=(Class<Object>)Class.forName(className);    if (!Throwable.class.isAssignableFrom(cls)) {      parserContext.getReaderContext().error("Non-Throwable class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement);    }    if (map.containsKey(cls)) {      parserContext.getReaderContext().error("Duplicate entry for class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement);    }    map.put(cls,include);  } catch (  ClassNotFoundException e) {    parserContext.getReaderContext().error("Cannot find class \'" + className + "\', given as an attribute of the <"+ elementName+ "/> element.",child);  }} @TO@ for (Element child : (List<Element>)DomUtils.getChildElementsByTagName(exceptionClassesElement,elementName)) {  String className=child.getAttribute("class");  map.put(new TypedStringValue(className,Class.class),include);} @AT@ 12787 @LENGTH@ 986
---DEL TryStatement@@try {  Class<Object> cls=(Class<Object>)Class.forName(className);  if (!Throwable.class.isAssignableFrom(cls)) {    parserContext.getReaderContext().error("Non-Throwable class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement);  }  if (map.containsKey(cls)) {    parserContext.getReaderContext().error("Duplicate entry for class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement);  }  map.put(cls,include);} catch (ClassNotFoundException e) {  parserContext.getReaderContext().error("Cannot find class \'" + className + "\', given as an attribute of the <"+ elementName+ "/> element.",child);} @AT@ 12954 @LENGTH@ 815
------DEL VariableDeclarationStatement@@Class<Object> cls=(Class<Object>)Class.forName(className); @AT@ 12964 @LENGTH@ 61
---------DEL ParameterizedType@@Class<Object> @AT@ 12964 @LENGTH@ 13
------------DEL SimpleType@@Class @AT@ 12964 @LENGTH@ 5
------------DEL SimpleType@@Object @AT@ 12970 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@cls=(Class<Object>)Class.forName(className) @AT@ 12978 @LENGTH@ 46
------------DEL SimpleName@@cls @AT@ 12978 @LENGTH@ 3
------------DEL CastExpression@@(Class<Object>)Class.forName(className) @AT@ 12984 @LENGTH@ 40
---------------DEL ParameterizedType@@Class<Object> @AT@ 12985 @LENGTH@ 13
------------------DEL SimpleType@@Class @AT@ 12985 @LENGTH@ 5
------------------DEL SimpleType@@Object @AT@ 12991 @LENGTH@ 6
---------------DEL MethodInvocation@@Class.forName(className) @AT@ 13000 @LENGTH@ 24
------------------DEL SimpleName@@Name:Class @AT@ 13000 @LENGTH@ 5
------------------DEL SimpleName@@MethodName:forName:[className] @AT@ 13006 @LENGTH@ 18
---------------------DEL SimpleName@@className @AT@ 13014 @LENGTH@ 9
------DEL IfStatement@@if (!Throwable.class.isAssignableFrom(cls)) {  parserContext.getReaderContext().error("Non-Throwable class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement);} @AT@ 13030 @LENGTH@ 250
---------DEL PrefixExpression@@!Throwable.class.isAssignableFrom(cls) @AT@ 13034 @LENGTH@ 38
------------DEL Operator@@! @AT@ 13034 @LENGTH@ 1
------------DEL MethodInvocation@@Throwable.class.isAssignableFrom(cls) @AT@ 13035 @LENGTH@ 37
---------------DEL TypeLiteral@@Throwable.class @AT@ 13035 @LENGTH@ 15
---------------DEL SimpleName@@MethodName:isAssignableFrom:[cls] @AT@ 13051 @LENGTH@ 21
------------------DEL SimpleName@@cls @AT@ 13068 @LENGTH@ 3
---------DEL Block@@ThenBody:{  parserContext.getReaderContext().error("Non-Throwable class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement);} @AT@ 13074 @LENGTH@ 206
------------DEL ExpressionStatement@@MethodInvocation:parserContext.getReaderContext().error("Non-Throwable class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement) @AT@ 13081 @LENGTH@ 193
---------------DEL MethodInvocation@@parserContext.getReaderContext().error("Non-Throwable class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement) @AT@ 13081 @LENGTH@ 192
------------------DEL MethodInvocation@@MethodName:getReaderContext:[] @AT@ 13081 @LENGTH@ 32
------------------DEL SimpleName@@Name:parserContext @AT@ 13081 @LENGTH@ 13
------------------DEL SimpleName@@MethodName:error:["Non-Throwable class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.", exceptionClassesElement] @AT@ 13114 @LENGTH@ 159
---------------------DEL InfixExpression@@"Non-Throwable class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element." @AT@ 13128 @LENGTH@ 119
------------------------DEL StringLiteral@@"Non-Throwable class \'" @AT@ 13128 @LENGTH@ 24
------------------------DEL Operator@@+ @AT@ 13152 @LENGTH@ 1
------------------------DEL SimpleName@@className @AT@ 13155 @LENGTH@ 9
------------------------DEL StringLiteral@@"\' found in <" @AT@ 13167 @LENGTH@ 15
------------------------DEL MethodInvocation@@exceptionClassesElement.getNodeName() @AT@ 13194 @LENGTH@ 37
---------------------------DEL SimpleName@@Name:exceptionClassesElement @AT@ 13194 @LENGTH@ 23
---------------------------DEL SimpleName@@MethodName:getNodeName:[] @AT@ 13218 @LENGTH@ 13
------------------------DEL StringLiteral@@"/> element." @AT@ 13234 @LENGTH@ 13
---------------------DEL SimpleName@@exceptionClassesElement @AT@ 13249 @LENGTH@ 23
------DEL IfStatement@@if (map.containsKey(cls)) {  parserContext.getReaderContext().error("Duplicate entry for class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement);} @AT@ 13285 @LENGTH@ 238
---------DEL MethodInvocation@@map.containsKey(cls) @AT@ 13289 @LENGTH@ 20
------------DEL SimpleName@@Name:map @AT@ 13289 @LENGTH@ 3
------------DEL SimpleName@@MethodName:containsKey:[cls] @AT@ 13293 @LENGTH@ 16
---------------DEL SimpleName@@cls @AT@ 13305 @LENGTH@ 3
---------DEL Block@@ThenBody:{  parserContext.getReaderContext().error("Duplicate entry for class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement);} @AT@ 13311 @LENGTH@ 212
------------DEL ExpressionStatement@@MethodInvocation:parserContext.getReaderContext().error("Duplicate entry for class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement) @AT@ 13318 @LENGTH@ 199
---------------DEL MethodInvocation@@parserContext.getReaderContext().error("Duplicate entry for class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement) @AT@ 13318 @LENGTH@ 198
------------------DEL MethodInvocation@@MethodName:getReaderContext:[] @AT@ 13318 @LENGTH@ 32
------------------DEL SimpleName@@Name:parserContext @AT@ 13318 @LENGTH@ 13
------------------DEL SimpleName@@MethodName:error:["Duplicate entry for class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.", exceptionClassesElement] @AT@ 13351 @LENGTH@ 165
---------------------DEL InfixExpression@@"Duplicate entry for class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element." @AT@ 13365 @LENGTH@ 125
------------------------DEL StringLiteral@@"Duplicate entry for class \'" @AT@ 13365 @LENGTH@ 30
------------------------DEL Operator@@+ @AT@ 13395 @LENGTH@ 1
------------------------DEL SimpleName@@className @AT@ 13398 @LENGTH@ 9
------------------------DEL StringLiteral@@"\' found in <" @AT@ 13410 @LENGTH@ 15
------------------------DEL MethodInvocation@@exceptionClassesElement.getNodeName() @AT@ 13437 @LENGTH@ 37
---------------------------DEL SimpleName@@Name:exceptionClassesElement @AT@ 13437 @LENGTH@ 23
---------------------------DEL SimpleName@@MethodName:getNodeName:[] @AT@ 13461 @LENGTH@ 13
------------------------DEL StringLiteral@@"/> element." @AT@ 13477 @LENGTH@ 13
---------------------DEL SimpleName@@exceptionClassesElement @AT@ 13492 @LENGTH@ 23
------DEL ExpressionStatement@@MethodInvocation:map.put(cls,include) @AT@ 13528 @LENGTH@ 22
------DEL CatchClause@@catch (ClassNotFoundException e) {  parserContext.getReaderContext().error("Cannot find class \'" + className + "\', given as an attribute of the <"+ elementName+ "/> element.",child);} @AT@ 13559 @LENGTH@ 210
---------DEL SingleVariableDeclaration@@ClassNotFoundException e @AT@ 13566 @LENGTH@ 24
------------DEL SimpleType@@ClassNotFoundException @AT@ 13566 @LENGTH@ 22
------------DEL SimpleName@@e @AT@ 13589 @LENGTH@ 1
---------DEL ExpressionStatement@@MethodInvocation:parserContext.getReaderContext().error("Cannot find class \'" + className + "\', given as an attribute of the <"+ elementName+ "/> element.",child) @AT@ 13598 @LENGTH@ 166
------------DEL MethodInvocation@@parserContext.getReaderContext().error("Cannot find class \'" + className + "\', given as an attribute of the <"+ elementName+ "/> element.",child) @AT@ 13598 @LENGTH@ 165
---------------DEL MethodInvocation@@MethodName:getReaderContext:[] @AT@ 13598 @LENGTH@ 32
---------------DEL SimpleName@@Name:parserContext @AT@ 13598 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:error:["Cannot find class \'" + className + "\', given as an attribute of the <"+ elementName+ "/> element.", child] @AT@ 13631 @LENGTH@ 132
------------------DEL InfixExpression@@"Cannot find class \'" + className + "\', given as an attribute of the <"+ elementName+ "/> element." @AT@ 13644 @LENGTH@ 111
---------------------DEL StringLiteral@@"Cannot find class \'" @AT@ 13644 @LENGTH@ 22
---------------------DEL Operator@@+ @AT@ 13666 @LENGTH@ 1
---------------------DEL SimpleName@@className @AT@ 13669 @LENGTH@ 9
---------------------DEL StringLiteral@@"\', given as an attribute of the <" @AT@ 13681 @LENGTH@ 36
---------------------DEL SimpleName@@elementName @AT@ 13720 @LENGTH@ 11
---------------------DEL StringLiteral@@"/> element." @AT@ 13742 @LENGTH@ 13
------------------DEL SimpleName@@child @AT@ 13757 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:map.put(new TypedStringValue(className,Class.class),include) @TO@ EnhancedForStatement@@for (Element child : (List<Element>)DomUtils.getChildElementsByTagName(exceptionClassesElement,elementName)) {  String className=child.getAttribute("class");  try {    Class<Object> cls=(Class<Object>)Class.forName(className);    if (!Throwable.class.isAssignableFrom(cls)) {      parserContext.getReaderContext().error("Non-Throwable class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement);    }    if (map.containsKey(cls)) {      parserContext.getReaderContext().error("Duplicate entry for class \'" + className + "\' found in <"+ exceptionClassesElement.getNodeName()+ "/> element.",exceptionClassesElement);    }    map.put(cls,include);  } catch (  ClassNotFoundException e) {    parserContext.getReaderContext().error("Cannot find class \'" + className + "\', given as an attribute of the <"+ elementName+ "/> element.",child);  }} @AT@ 13021 @LENGTH@ 63
------MOV MethodInvocation@@map.put(cls,include) @TO@ ExpressionStatement@@MethodInvocation:map.put(new TypedStringValue(className,Class.class),include) @AT@ 13528 @LENGTH@ 21


UPD FieldDeclaration@@private, final, int, [maxConcurrentConsumers=500] @TO@ protected, final, int, [maxConcurrentConsumers=500] @AT@ 1483 @LENGTH@ 47
---UPD Modifier@@private @TO@ protected @AT@ 1483 @LENGTH@ 7


UPD IfStatement@@if (tokens[0].equalsIgnoreCase("http") && tokens[1].startsWith("//")) {  String[] newTokens=new String[tokens.length - 1];  newTokens[0]="http:" + tokens[1];  System.arraycopy(tokens,2,newTokens,1,newTokens.length - 1);  tokens=newTokens;} @TO@ if ((tokens[0].equalsIgnoreCase("http") || tokens[0].equalsIgnoreCase("https")) && tokens[1].startsWith("//")) {  String[] newTokens=new String[tokens.length - 1];  newTokens[0]=tokens[0] + ":" + tokens[1];  System.arraycopy(tokens,2,newTokens,1,newTokens.length - 1);  tokens=newTokens;} @AT@ 7629 @LENGTH@ 375
---UPD InfixExpression@@tokens[0].equalsIgnoreCase("http") && tokens[1].startsWith("//") @TO@ (tokens[0].equalsIgnoreCase("http") || tokens[0].equalsIgnoreCase("https")) && tokens[1].startsWith("//") @AT@ 7633 @LENGTH@ 64
------INS ParenthesizedExpression@@(tokens[0].equalsIgnoreCase("http") || tokens[0].equalsIgnoreCase("https")) @TO@ InfixExpression@@tokens[0].equalsIgnoreCase("http") && tokens[1].startsWith("//") @AT@ 7633 @LENGTH@ 75
---------INS InfixExpression@@tokens[0].equalsIgnoreCase("http") || tokens[0].equalsIgnoreCase("https") @TO@ ParenthesizedExpression@@(tokens[0].equalsIgnoreCase("http") || tokens[0].equalsIgnoreCase("https")) @AT@ 7634 @LENGTH@ 73
------------MOV MethodInvocation@@tokens[0].equalsIgnoreCase("http") @TO@ InfixExpression@@tokens[0].equalsIgnoreCase("http") || tokens[0].equalsIgnoreCase("https") @AT@ 7633 @LENGTH@ 34
------------MOV MethodInvocation@@tokens[0].equalsIgnoreCase("http") @TO@ InfixExpression@@tokens[0].equalsIgnoreCase("http") || tokens[0].equalsIgnoreCase("https") @AT@ 7633 @LENGTH@ 34
------------INS Operator@@|| @TO@ InfixExpression@@tokens[0].equalsIgnoreCase("http") || tokens[0].equalsIgnoreCase("https") @AT@ 7668 @LENGTH@ 2
------------INS MethodInvocation@@tokens[0].equalsIgnoreCase("https") @TO@ InfixExpression@@tokens[0].equalsIgnoreCase("http") || tokens[0].equalsIgnoreCase("https") @AT@ 7672 @LENGTH@ 35
---------------INS ArrayAccess@@tokens[0] @TO@ MethodInvocation@@tokens[0].equalsIgnoreCase("https") @AT@ 7672 @LENGTH@ 9
------------------INS SimpleName@@tokens @TO@ ArrayAccess@@tokens[0] @AT@ 7672 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@tokens[0] @AT@ 7679 @LENGTH@ 1
---------------INS SimpleName@@MethodName:equalsIgnoreCase:["https"] @TO@ MethodInvocation@@tokens[0].equalsIgnoreCase("https") @AT@ 7682 @LENGTH@ 25
------------------INS StringLiteral@@"https" @TO@ SimpleName@@MethodName:equalsIgnoreCase:["https"] @AT@ 7699 @LENGTH@ 7
---UPD Block@@ThenBody:{  String[] newTokens=new String[tokens.length - 1];  newTokens[0]="http:" + tokens[1];  System.arraycopy(tokens,2,newTokens,1,newTokens.length - 1);  tokens=newTokens;} @TO@ ThenBody:{  String[] newTokens=new String[tokens.length - 1];  newTokens[0]=tokens[0] + ":" + tokens[1];  System.arraycopy(tokens,2,newTokens,1,newTokens.length - 1);  tokens=newTokens;} @AT@ 7699 @LENGTH@ 305
------UPD ExpressionStatement@@Assignment:newTokens[0]="http:" + tokens[1] @TO@ Assignment:newTokens[0]=tokens[0] + ":" + tokens[1] @AT@ 7850 @LENGTH@ 35
---------UPD Assignment@@newTokens[0]="http:" + tokens[1] @TO@ newTokens[0]=tokens[0] + ":" + tokens[1] @AT@ 7850 @LENGTH@ 34
------------UPD InfixExpression@@"http:" + tokens[1] @TO@ tokens[0] + ":" + tokens[1] @AT@ 7865 @LENGTH@ 19
---------------DEL StringLiteral@@"http:" @AT@ 7865 @LENGTH@ 7
---------------INS ArrayAccess@@tokens[0] @TO@ InfixExpression@@"http:" + tokens[1] @AT@ 7906 @LENGTH@ 9
------------------INS SimpleName@@tokens @TO@ ArrayAccess@@tokens[0] @AT@ 7906 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@tokens[0] @AT@ 7913 @LENGTH@ 1
---------------INS StringLiteral@@":" @TO@ InfixExpression@@"http:" + tokens[1] @AT@ 7918 @LENGTH@ 3


UPD EnhancedForStatement@@for (ProcessorDefinition<?> processor : outputs) {  if (processor.getParent() == route || processor instanceof SendDefinition) {    ProcessorDefinitionRenderer.render(buffer,processor);  }} @TO@ for (ProcessorDefinition processor : outputs) {  if (processor.getParent() == route || processor instanceof SendDefinition) {    ProcessorDefinitionRenderer.render(buffer,processor);  }} @AT@ 3235 @LENGTH@ 234
---UPD SingleVariableDeclaration@@ProcessorDefinition<?> processor @TO@ ProcessorDefinition processor @AT@ 3240 @LENGTH@ 32
------INS SimpleType@@ProcessorDefinition @TO@ SingleVariableDeclaration@@ProcessorDefinition<?> processor @AT@ 3237 @LENGTH@ 19
------DEL ParameterizedType@@ProcessorDefinition<?> @AT@ 3240 @LENGTH@ 22
---------DEL SimpleType@@ProcessorDefinition @AT@ 3240 @LENGTH@ 19
---------DEL WildcardType@@? @AT@ 3260 @LENGTH@ 1


DEL FieldDeclaration@@private, Logger, [log=Logger.getLogger(getClass())] @AT@ 1289 @LENGTH@ 50
---DEL Modifier@@private @AT@ 1289 @LENGTH@ 7
---DEL SimpleType@@Logger @AT@ 1297 @LENGTH@ 6
---DEL VariableDeclarationFragment@@log=Logger.getLogger(getClass()) @AT@ 1304 @LENGTH@ 34
------DEL SimpleName@@log @AT@ 1304 @LENGTH@ 3
------DEL MethodInvocation@@Logger.getLogger(getClass()) @AT@ 1310 @LENGTH@ 28
---------DEL SimpleName@@Name:Logger @AT@ 1310 @LENGTH@ 6
---------DEL SimpleName@@MethodName:getLogger:[getClass()] @AT@ 1317 @LENGTH@ 21
------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 1327 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:baz").expectedMessageCount(1) @TO@ MethodInvocation:getMockEndpoint("mock:baz").expectedMinimumMessageCount(0) @AT@ 2655 @LENGTH@ 52
---UPD MethodInvocation@@getMockEndpoint("mock:baz").expectedMessageCount(1) @TO@ getMockEndpoint("mock:baz").expectedMinimumMessageCount(0) @AT@ 2655 @LENGTH@ 51
------UPD SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodName:expectedMinimumMessageCount:[0] @AT@ 2683 @LENGTH@ 23
---------UPD NumberLiteral@@1 @TO@ 0 @AT@ 2704 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:silver").expectedMessageCount(size / 10) @TO@ MethodInvocation:getMockEndpoint("mock:silver").expectedMinimumMessageCount(size / 10) @AT@ 1729 @LENGTH@ 63
---UPD MethodInvocation@@getMockEndpoint("mock:silver").expectedMessageCount(size / 10) @TO@ getMockEndpoint("mock:silver").expectedMinimumMessageCount(size / 10) @AT@ 1729 @LENGTH@ 62
------UPD SimpleName@@MethodName:expectedMessageCount:[size / 10] @TO@ MethodName:expectedMinimumMessageCount:[size / 10] @AT@ 1760 @LENGTH@ 31


UPD Block@@ThenBody:{  String jumpToItemSql;  jumpToItemSql=queryProvider.generateJumpToItemQuery(itemIndex,getPageSize());  if (logger.isDebugEnabled()) {    logger.debug("SQL used for jumping: [" + jumpToItemSql + "]");  }  startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,new RowMapper(){    public Object mapRow(    ResultSet rs,    int i) throws SQLException {      return rs.getObject(1);    }  });} @TO@ ThenBody:{  String jumpToItemSql;  jumpToItemSql=queryProvider.generateJumpToItemQuery(itemIndex,getPageSize());  if (logger.isDebugEnabled()) {    logger.debug("SQL used for jumping: [" + jumpToItemSql + "]");  }  RowMapper startMapper=new RowMapper(){    public Object mapRow(    ResultSet rs,    int i) throws SQLException {      return rs.getObject(1);    }  };  if (this.queryProvider.isUsingNamedParameters()) {    startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper);  } else {    startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,getParameterList(parameterValues,startAfterValue).toArray(),startMapper);  }} @AT@ 6773 @LENGTH@ 442
---UPD ExpressionStatement@@Assignment:startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
) @TO@ Assignment:startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,getParameterList(parameterValues,startAfterValue).toArray(),startMapper) @AT@ 6996 @LENGTH@ 214
---INS VariableDeclarationStatement@@RowMapper startMapper=new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
; @TO@ Block@@ThenBody:{  String jumpToItemSql;  jumpToItemSql=queryProvider.generateJumpToItemQuery(itemIndex,getPageSize());  if (logger.isDebugEnabled()) {    logger.debug("SQL used for jumping: [" + jumpToItemSql + "]");  }  startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,new RowMapper(){    public Object mapRow(    ResultSet rs,    int i) throws SQLException {      return rs.getObject(1);    }  });} @AT@ 6996 @LENGTH@ 150
------INS SimpleType@@RowMapper @TO@ VariableDeclarationStatement@@RowMapper startMapper=new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
; @AT@ 6996 @LENGTH@ 9
------INS VariableDeclarationFragment@@startMapper=new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
 @TO@ VariableDeclarationStatement@@RowMapper startMapper=new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
; @AT@ 7006 @LENGTH@ 139
---------INS SimpleName@@startMapper @TO@ VariableDeclarationFragment@@startMapper=new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
 @AT@ 7006 @LENGTH@ 11
---------MOV ClassInstanceCreation@@RowMapper[] @TO@ VariableDeclarationFragment@@startMapper=new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
 @AT@ 7083 @LENGTH@ 125
---INS IfStatement@@if (this.queryProvider.isUsingNamedParameters()) {  startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper);} else {  startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,getParameterList(parameterValues,startAfterValue).toArray(),startMapper);} @TO@ Block@@ThenBody:{  String jumpToItemSql;  jumpToItemSql=queryProvider.generateJumpToItemQuery(itemIndex,getPageSize());  if (logger.isDebugEnabled()) {    logger.debug("SQL used for jumping: [" + jumpToItemSql + "]");  }  startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,new RowMapper(){    public Object mapRow(    ResultSet rs,    int i) throws SQLException {      return rs.getObject(1);    }  });} @AT@ 7150 @LENGTH@ 419
------INS MethodInvocation@@this.queryProvider.isUsingNamedParameters() @TO@ IfStatement@@if (this.queryProvider.isUsingNamedParameters()) {  startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper);} else {  startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,getParameterList(parameterValues,startAfterValue).toArray(),startMapper);} @AT@ 7154 @LENGTH@ 43
---------INS FieldAccess@@this.queryProvider @TO@ MethodInvocation@@this.queryProvider.isUsingNamedParameters() @AT@ 7154 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.queryProvider @AT@ 7154 @LENGTH@ 4
------------INS SimpleName@@queryProvider @TO@ FieldAccess@@this.queryProvider @AT@ 7159 @LENGTH@ 13
---------INS SimpleName@@MethodName:isUsingNamedParameters:[] @TO@ MethodInvocation@@this.queryProvider.isUsingNamedParameters() @AT@ 7173 @LENGTH@ 24
------INS Block@@ThenBody:{  startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper);} @TO@ IfStatement@@if (this.queryProvider.isUsingNamedParameters()) {  startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper);} else {  startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,getParameterList(parameterValues,startAfterValue).toArray(),startMapper);} @AT@ 7199 @LENGTH@ 182
---------INS ExpressionStatement@@Assignment:startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper) @TO@ Block@@ThenBody:{  startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper);} @AT@ 7205 @LENGTH@ 171
------------INS Assignment@@startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper) @TO@ ExpressionStatement@@Assignment:startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper) @AT@ 7205 @LENGTH@ 170
---------------INS SimpleName@@startAfterValue @TO@ Assignment@@startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper) @AT@ 7205 @LENGTH@ 15
---------------INS Operator@@= @TO@ Assignment@@startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper) @AT@ 7220 @LENGTH@ 1
---------------INS MethodInvocation@@simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper) @TO@ Assignment@@startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper) @AT@ 7223 @LENGTH@ 152
------------------INS MethodInvocation@@MethodName:getNamedParameterJdbcOperations:[] @TO@ MethodInvocation@@simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper) @AT@ 7223 @LENGTH@ 52
------------------INS SimpleName@@Name:simpleJdbcTemplate @TO@ MethodInvocation@@simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper) @AT@ 7223 @LENGTH@ 18
------------------INS SimpleName@@MethodName:queryForObject:[jumpToItemSql, getParameterMap(parameterValues,startAfterValue), startMapper] @TO@ MethodInvocation@@simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper) @AT@ 7276 @LENGTH@ 99
---------------------INS SimpleName@@jumpToItemSql @TO@ SimpleName@@MethodName:queryForObject:[jumpToItemSql, getParameterMap(parameterValues,startAfterValue), startMapper] @AT@ 7291 @LENGTH@ 13
---------------------INS MethodInvocation@@getParameterMap(parameterValues,startAfterValue) @TO@ SimpleName@@MethodName:queryForObject:[jumpToItemSql, getParameterMap(parameterValues,startAfterValue), startMapper] @AT@ 7312 @LENGTH@ 49
------------------------INS SimpleName@@MethodName:getParameterMap:[parameterValues, startAfterValue] @TO@ MethodInvocation@@getParameterMap(parameterValues,startAfterValue) @AT@ 7312 @LENGTH@ 49
---------------------------INS SimpleName@@parameterValues @TO@ SimpleName@@MethodName:getParameterMap:[parameterValues, startAfterValue] @AT@ 7328 @LENGTH@ 15
---------------------------INS SimpleName@@startAfterValue @TO@ SimpleName@@MethodName:getParameterMap:[parameterValues, startAfterValue] @AT@ 7345 @LENGTH@ 15
---------------------INS SimpleName@@startMapper @TO@ SimpleName@@MethodName:queryForObject:[jumpToItemSql, getParameterMap(parameterValues,startAfterValue), startMapper] @AT@ 7363 @LENGTH@ 11
------INS Block@@ElseBody:{  startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,getParameterList(parameterValues,startAfterValue).toArray(),startMapper);} @TO@ IfStatement@@if (this.queryProvider.isUsingNamedParameters()) {  startAfterValue=simpleJdbcTemplate.getNamedParameterJdbcOperations().queryForObject(jumpToItemSql,getParameterMap(parameterValues,startAfterValue),startMapper);} else {  startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,getParameterList(parameterValues,startAfterValue).toArray(),startMapper);} @AT@ 7390 @LENGTH@ 179
---------MOV ExpressionStatement@@Assignment:startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
) @TO@ Block@@ElseBody:{  startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,getParameterList(parameterValues,startAfterValue).toArray(),startMapper);} @AT@ 6996 @LENGTH@ 214
------------UPD Assignment@@startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
) @TO@ startAfterValue=simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,getParameterList(parameterValues,startAfterValue).toArray(),startMapper) @AT@ 6996 @LENGTH@ 213
---------------UPD MethodInvocation@@simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
) @TO@ simpleJdbcTemplate.getJdbcOperations().queryForObject(jumpToItemSql,getParameterList(parameterValues,startAfterValue).toArray(),startMapper) @AT@ 7014 @LENGTH@ 195
------------------UPD SimpleName@@MethodName:queryForObject:[jumpToItemSql, new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
] @TO@ MethodName:queryForObject:[jumpToItemSql, getParameterList(parameterValues,startAfterValue).toArray(), startMapper] @AT@ 7053 @LENGTH@ 156
---------------------INS MethodInvocation@@getParameterList(parameterValues,startAfterValue).toArray() @TO@ SimpleName@@MethodName:queryForObject:[jumpToItemSql, new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
] @AT@ 7489 @LENGTH@ 60
------------------------INS MethodInvocation@@MethodName:getParameterList:[parameterValues, startAfterValue] @TO@ MethodInvocation@@getParameterList(parameterValues,startAfterValue).toArray() @AT@ 7489 @LENGTH@ 50
---------------------------INS SimpleName@@parameterValues @TO@ MethodInvocation@@MethodName:getParameterList:[parameterValues, startAfterValue] @AT@ 7506 @LENGTH@ 15
---------------------------INS SimpleName@@startAfterValue @TO@ MethodInvocation@@MethodName:getParameterList:[parameterValues, startAfterValue] @AT@ 7523 @LENGTH@ 15
------------------------INS SimpleName@@MethodName:toArray:[] @TO@ MethodInvocation@@getParameterList(parameterValues,startAfterValue).toArray() @AT@ 7540 @LENGTH@ 9
---------------------INS SimpleName@@startMapper @TO@ SimpleName@@MethodName:queryForObject:[jumpToItemSql, new RowMapper(){
  public Object mapRow(  ResultSet rs,  int i) throws SQLException {
    return rs.getObject(1);
  }
}
] @AT@ 7551 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:from("file://target/concurrent").setHeader("id",simple("${file:onlyname.noext}")).threads(10).beanRef("business").log("Country is ${in.header.country}").aggregate(header("country"),new BodyInAggregatingStrategy()).completionTimeout(2000L).to("mock:result") @TO@ MethodInvocation:from("file://target/concurrent?sortBy=file:name").setHeader("id",simple("${file:onlyname.noext}")).threads(10).beanRef("business").log("Country is ${in.header.country}").aggregate(header("country"),new BodyInAggregatingStrategy()).completionTimeout(2000L).to("mock:result") @AT@ 2763 @LENGTH@ 414
---UPD MethodInvocation@@from("file://target/concurrent").setHeader("id",simple("${file:onlyname.noext}")).threads(10).beanRef("business").log("Country is ${in.header.country}").aggregate(header("country"),new BodyInAggregatingStrategy()).completionTimeout(2000L).to("mock:result") @TO@ from("file://target/concurrent?sortBy=file:name").setHeader("id",simple("${file:onlyname.noext}")).threads(10).beanRef("business").log("Country is ${in.header.country}").aggregate(header("country"),new BodyInAggregatingStrategy()).completionTimeout(2000L).to("mock:result") @AT@ 2763 @LENGTH@ 413
------UPD MethodInvocation@@MethodName:from:["file://target/concurrent"] @TO@ MethodName:from:["file://target/concurrent?sortBy=file:name"] @AT@ 2763 @LENGTH@ 32
---------UPD StringLiteral@@"file://target/concurrent" @TO@ "file://target/concurrent?sortBy=file:name" @AT@ 2768 @LENGTH@ 26


UPD ReturnStatement@@InfixExpression:attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") && !attributeName.equals("type") && !attributeName.equals("onRedeliveryRef") && !attributeName.equals("transactionTemplateRef") @TO@ InfixExpression:!attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") && !attributeName.equals("type")&& !attributeName.equals("onRedeliveryRef")&& !attributeName.equals("transactionTemplateRef")&& !attributeName.equals("transactionManagerRef") @AT@ 2269 @LENGTH@ 317
---DEL InfixExpression@@attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") && !attributeName.equals("type") && !attributeName.equals("onRedeliveryRef") && !attributeName.equals("transactionTemplateRef") @AT@ 2276 @LENGTH@ 309
------DEL InfixExpression@@attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") && !attributeName.equals("type") && !attributeName.equals("onRedeliveryRef") @AT@ 2276 @LENGTH@ 242
---------DEL Operator@@&& @AT@ 2474 @LENGTH@ 2
------DEL Operator@@&& @AT@ 2518 @LENGTH@ 2
---MOV InfixExpression@@attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") && !attributeName.equals("type") @TO@ ReturnStatement@@InfixExpression:attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") && !attributeName.equals("type") && !attributeName.equals("onRedeliveryRef") && !attributeName.equals("transactionTemplateRef") @AT@ 2276 @LENGTH@ 198
------DEL InfixExpression@@attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") @AT@ 2276 @LENGTH@ 149
---------DEL InfixExpression@@attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") @AT@ 2276 @LENGTH@ 110
------------DEL InfixExpression@@attributeName != null && !ID_ATTRIBUTE.equals(attributeName) @AT@ 2276 @LENGTH@ 60
---------------DEL InfixExpression@@attributeName != null @AT@ 2276 @LENGTH@ 21
------------------DEL SimpleName@@attributeName @AT@ 2276 @LENGTH@ 13
------------------DEL Operator@@!= @AT@ 2289 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 2293 @LENGTH@ 4
------------DEL Operator@@&& @AT@ 2336 @LENGTH@ 2
---------DEL Operator@@&& @AT@ 2386 @LENGTH@ 2
------MOV Operator@@&& @TO@ InfixExpression@@attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") && !attributeName.equals("type") @AT@ 2297 @LENGTH@ 2
------MOV PrefixExpression@@!ID_ATTRIBUTE.equals(attributeName) @TO@ InfixExpression@@attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") && !attributeName.equals("type") @AT@ 2301 @LENGTH@ 35
---------MOV MethodInvocation@@attributeName.equals("onRedeliveryRef") @TO@ PrefixExpression@@!ID_ATTRIBUTE.equals(attributeName) @AT@ 2479 @LENGTH@ 39
------MOV PrefixExpression@@!attributeName.equals("xmlns") @TO@ InfixExpression@@attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") && !attributeName.equals("type") @AT@ 2356 @LENGTH@ 30
------MOV PrefixExpression@@!attributeName.startsWith("xmlns:") @TO@ InfixExpression@@attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") && !attributeName.equals("type") @AT@ 2390 @LENGTH@ 35
------DEL Operator@@&& @AT@ 2425 @LENGTH@ 2
------MOV PrefixExpression@@!attributeName.equals("transactionTemplateRef") @TO@ InfixExpression@@attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") && !attributeName.equals("type") @AT@ 2538 @LENGTH@ 47
------INS PrefixExpression@@!attributeName.equals("transactionManagerRef") @TO@ InfixExpression@@attributeName != null && !ID_ATTRIBUTE.equals(attributeName) && !attributeName.equals("xmlns") && !attributeName.startsWith("xmlns:") && !attributeName.equals("type") @AT@ 2557 @LENGTH@ 46
---------INS Operator@@! @TO@ PrefixExpression@@!attributeName.equals("transactionManagerRef") @AT@ 2557 @LENGTH@ 1
---------INS MethodInvocation@@attributeName.equals("transactionManagerRef") @TO@ PrefixExpression@@!attributeName.equals("transactionManagerRef") @AT@ 2558 @LENGTH@ 45
------------INS SimpleName@@Name:attributeName @TO@ MethodInvocation@@attributeName.equals("transactionManagerRef") @AT@ 2558 @LENGTH@ 13
------------INS SimpleName@@MethodName:equals:["transactionManagerRef"] @TO@ MethodInvocation@@attributeName.equals("transactionManagerRef") @AT@ 2572 @LENGTH@ 31
---------------INS StringLiteral@@"transactionManagerRef" @TO@ SimpleName@@MethodName:equals:["transactionManagerRef"] @AT@ 2579 @LENGTH@ 23


INS IfStatement@@if (result.getReceivedCounter() > 4) {  assertEquals("Message 1d",result.getExchanges().get(4).getIn().getBody());} @TO@ MethodDeclaration@@public, void, MethodName:testAggregateBatchSize, Exception,  @AT@ 6559 @LENGTH@ 136
---INS InfixExpression@@result.getReceivedCounter() > 4 @TO@ IfStatement@@if (result.getReceivedCounter() > 4) {  assertEquals("Message 1d",result.getExchanges().get(4).getIn().getBody());} @AT@ 6563 @LENGTH@ 31
------INS MethodInvocation@@result.getReceivedCounter() @TO@ InfixExpression@@result.getReceivedCounter() > 4 @AT@ 6563 @LENGTH@ 27
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getReceivedCounter() @AT@ 6563 @LENGTH@ 6
---------INS SimpleName@@MethodName:getReceivedCounter:[] @TO@ MethodInvocation@@result.getReceivedCounter() @AT@ 6570 @LENGTH@ 20
------INS Operator@@> @TO@ InfixExpression@@result.getReceivedCounter() > 4 @AT@ 6590 @LENGTH@ 1
------INS NumberLiteral@@4 @TO@ InfixExpression@@result.getReceivedCounter() > 4 @AT@ 6593 @LENGTH@ 1
---INS Block@@ThenBody:{  assertEquals("Message 1d",result.getExchanges().get(4).getIn().getBody());} @TO@ IfStatement@@if (result.getReceivedCounter() > 4) {  assertEquals("Message 1d",result.getExchanges().get(4).getIn().getBody());} @AT@ 6596 @LENGTH@ 99
------MOV ExpressionStatement@@MethodInvocation:assertEquals("Message 1d",result.getExchanges().get(4).getIn().getBody()) @TO@ Block@@ThenBody:{  assertEquals("Message 1d",result.getExchanges().get(4).getIn().getBody());} @AT@ 6559 @LENGTH@ 75


INS ExpressionStatement@@MethodInvocation:mock.setResultWaitTime(30000) @TO@ MethodDeclaration@@public, void, MethodName:testFTPConsumerAsyncStress, Exception,  @AT@ 1846 @LENGTH@ 30
---INS MethodInvocation@@mock.setResultWaitTime(30000) @TO@ ExpressionStatement@@MethodInvocation:mock.setResultWaitTime(30000) @AT@ 1846 @LENGTH@ 29
------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.setResultWaitTime(30000) @AT@ 1846 @LENGTH@ 4
------INS SimpleName@@MethodName:setResultWaitTime:[30000] @TO@ MethodInvocation@@mock.setResultWaitTime(30000) @AT@ 1851 @LENGTH@ 24
---------INS NumberLiteral@@30000 @TO@ SimpleName@@MethodName:setResultWaitTime:[30000] @AT@ 1869 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:setTypeMap(typeMap) @TO@ Assignment:this.classified=new HashMap<Class<? extends T>,C>(typeMap) @AT@ 1990 @LENGTH@ 20
---DEL MethodInvocation@@setTypeMap(typeMap) @AT@ 1990 @LENGTH@ 19
------DEL SimpleName@@MethodName:setTypeMap:[typeMap] @AT@ 1990 @LENGTH@ 19
---------DEL SimpleName@@typeMap @AT@ 2001 @LENGTH@ 7
---INS Assignment@@this.classified=new HashMap<Class<? extends T>,C>(typeMap) @TO@ ExpressionStatement@@MethodInvocation:setTypeMap(typeMap) @AT@ 1990 @LENGTH@ 61
------INS FieldAccess@@this.classified @TO@ Assignment@@this.classified=new HashMap<Class<? extends T>,C>(typeMap) @AT@ 1990 @LENGTH@ 15
---------INS ThisExpression@@this @TO@ FieldAccess@@this.classified @AT@ 1990 @LENGTH@ 4
---------INS SimpleName@@classified @TO@ FieldAccess@@this.classified @AT@ 1995 @LENGTH@ 10
------INS Operator@@= @TO@ Assignment@@this.classified=new HashMap<Class<? extends T>,C>(typeMap) @AT@ 2005 @LENGTH@ 1
------INS ClassInstanceCreation@@HashMap<Class<? extends T>,C>[typeMap] @TO@ Assignment@@this.classified=new HashMap<Class<? extends T>,C>(typeMap) @AT@ 2008 @LENGTH@ 43
---------INS New@@new @TO@ ClassInstanceCreation@@HashMap<Class<? extends T>,C>[typeMap] @AT@ 2008 @LENGTH@ 3
---------INS ParameterizedType@@HashMap<Class<? extends T>,C> @TO@ ClassInstanceCreation@@HashMap<Class<? extends T>,C>[typeMap] @AT@ 2012 @LENGTH@ 30
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<Class<? extends T>,C> @AT@ 2012 @LENGTH@ 7
------------INS ParameterizedType@@Class<? extends T> @TO@ ParameterizedType@@HashMap<Class<? extends T>,C> @AT@ 2020 @LENGTH@ 18
---------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends T> @AT@ 2020 @LENGTH@ 5
---------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends T> @AT@ 2026 @LENGTH@ 11
------------INS SimpleType@@C @TO@ ParameterizedType@@HashMap<Class<? extends T>,C> @AT@ 2040 @LENGTH@ 1
---------INS SimpleName@@typeMap @TO@ ClassInstanceCreation@@HashMap<Class<? extends T>,C>[typeMap] @AT@ 2043 @LENGTH@ 7


UPD EnhancedForStatement@@for (String headerName : in.getHeaders().keySet()) {  String headerValue=in.getHeader(headerName,String.class);  if (strategy != null && !strategy.applyFilterToCamelHeaders(headerName,headerValue,exchange)) {    method.addRequestHeader(headerName,headerValue);  }} @TO@ for (Map.Entry<String,Object> entry : in.getHeaders().entrySet()) {  String headerValue=(String)entry.getValue();  if (strategy != null && !strategy.applyFilterToCamelHeaders(entry.getKey(),headerValue,exchange)) {    method.addRequestHeader(entry.getKey(),headerValue);  }} @AT@ 2823 @LENGTH@ 325
---UPD SingleVariableDeclaration@@String headerName @TO@ Map.Entry<String,Object> entry @AT@ 2828 @LENGTH@ 17
------DEL SimpleType@@String @AT@ 2828 @LENGTH@ 6
------INS ParameterizedType@@Map.Entry<String,Object> @TO@ SingleVariableDeclaration@@String headerName @AT@ 2828 @LENGTH@ 25
---------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,Object> @AT@ 2828 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,Object> @AT@ 2838 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map.Entry<String,Object> @AT@ 2846 @LENGTH@ 6
------UPD SimpleName@@headerName @TO@ entry @AT@ 2835 @LENGTH@ 10
---UPD MethodInvocation@@in.getHeaders().keySet() @TO@ in.getHeaders().entrySet() @AT@ 2848 @LENGTH@ 24
------UPD SimpleName@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 2864 @LENGTH@ 8
---UPD VariableDeclarationStatement@@String headerValue=in.getHeader(headerName,String.class); @TO@ String headerValue=(String)entry.getValue(); @AT@ 2888 @LENGTH@ 60
------UPD VariableDeclarationFragment@@headerValue=in.getHeader(headerName,String.class) @TO@ headerValue=(String)entry.getValue() @AT@ 2895 @LENGTH@ 52
---------DEL MethodInvocation@@in.getHeader(headerName,String.class) @AT@ 2909 @LENGTH@ 38
---------INS CastExpression@@(String)entry.getValue() @TO@ VariableDeclarationFragment@@headerValue=in.getHeader(headerName,String.class) @AT@ 2925 @LENGTH@ 25
------------INS SimpleType@@String @TO@ CastExpression@@(String)entry.getValue() @AT@ 2926 @LENGTH@ 6
------------INS MethodInvocation@@entry.getValue() @TO@ CastExpression@@(String)entry.getValue() @AT@ 2934 @LENGTH@ 16
---------------MOV SimpleName@@Name:in @TO@ MethodInvocation@@entry.getValue() @AT@ 2909 @LENGTH@ 2
---------------MOV SimpleName@@MethodName:getHeader:[headerName, String.class] @TO@ MethodInvocation@@entry.getValue() @AT@ 2912 @LENGTH@ 35
------------------DEL SimpleName@@headerName @AT@ 2922 @LENGTH@ 10
------------------DEL TypeLiteral@@String.class @AT@ 2934 @LENGTH@ 12
---UPD IfStatement@@if (strategy != null && !strategy.applyFilterToCamelHeaders(headerName,headerValue,exchange)) {  method.addRequestHeader(headerName,headerValue);} @TO@ if (strategy != null && !strategy.applyFilterToCamelHeaders(entry.getKey(),headerValue,exchange)) {  method.addRequestHeader(entry.getKey(),headerValue);} @AT@ 2961 @LENGTH@ 177
------UPD InfixExpression@@strategy != null && !strategy.applyFilterToCamelHeaders(headerName,headerValue,exchange) @TO@ strategy != null && !strategy.applyFilterToCamelHeaders(entry.getKey(),headerValue,exchange) @AT@ 2965 @LENGTH@ 90
---------UPD PrefixExpression@@!strategy.applyFilterToCamelHeaders(headerName,headerValue,exchange) @TO@ !strategy.applyFilterToCamelHeaders(entry.getKey(),headerValue,exchange) @AT@ 2985 @LENGTH@ 70
------------UPD MethodInvocation@@strategy.applyFilterToCamelHeaders(headerName,headerValue,exchange) @TO@ strategy.applyFilterToCamelHeaders(entry.getKey(),headerValue,exchange) @AT@ 2986 @LENGTH@ 69
---------------UPD SimpleName@@MethodName:applyFilterToCamelHeaders:[headerName, headerValue, exchange] @TO@ MethodName:applyFilterToCamelHeaders:[entry.getKey(), headerValue, exchange] @AT@ 2995 @LENGTH@ 60
------------------DEL SimpleName@@headerName @AT@ 3021 @LENGTH@ 10
------------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:applyFilterToCamelHeaders:[headerName, headerValue, exchange] @AT@ 3024 @LENGTH@ 14
---------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 3024 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 3030 @LENGTH@ 8
------UPD Block@@ThenBody:{  method.addRequestHeader(headerName,headerValue);} @TO@ ThenBody:{  method.addRequestHeader(entry.getKey(),headerValue);} @AT@ 3057 @LENGTH@ 81
---------UPD ExpressionStatement@@MethodInvocation:method.addRequestHeader(headerName,headerValue) @TO@ MethodInvocation:method.addRequestHeader(entry.getKey(),headerValue) @AT@ 3075 @LENGTH@ 49
------------UPD MethodInvocation@@method.addRequestHeader(headerName,headerValue) @TO@ method.addRequestHeader(entry.getKey(),headerValue) @AT@ 3075 @LENGTH@ 48
---------------UPD SimpleName@@MethodName:addRequestHeader:[headerName, headerValue] @TO@ MethodName:addRequestHeader:[entry.getKey(), headerValue] @AT@ 3082 @LENGTH@ 41
------------------DEL SimpleName@@headerName @AT@ 3099 @LENGTH@ 10
------------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:addRequestHeader:[headerName, headerValue] @AT@ 3106 @LENGTH@ 14
---------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 3106 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 3112 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:mock.message(0).constant("<span style=\"font-size=22px;\">Minnie Mouse</span>") @TO@ MethodInvocation:mock.message(0).body().contains("<span style=\"font-size=22px;\">Minnie Mouse</span>") @AT@ 1326 @LENGTH@ 80
---UPD MethodInvocation@@mock.message(0).constant("<span style=\"font-size=22px;\">Minnie Mouse</span>") @TO@ mock.message(0).body().contains("<span style=\"font-size=22px;\">Minnie Mouse</span>") @AT@ 1326 @LENGTH@ 79
------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@mock.message(0).constant("<span style=\"font-size=22px;\">Minnie Mouse</span>") @AT@ 1326 @LENGTH@ 22
------UPD SimpleName@@MethodName:constant:["<span style=\"font-size=22px;\">Minnie Mouse</span>"] @TO@ MethodName:contains:["<span style=\"font-size=22px;\">Minnie Mouse</span>"] @AT@ 1342 @LENGTH@ 63


INS ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @TO@ MethodDeclaration@@public, void, MethodName:testSencUnsupportedCharset, Exception,  @AT@ 1570 @LENGTH@ 19
---INS MethodInvocation@@Mailbox.clearAll() @TO@ ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @AT@ 1570 @LENGTH@ 18
------INS SimpleName@@Name:Mailbox @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 1570 @LENGTH@ 7
------INS SimpleName@@MethodName:clearAll:[] @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 1578 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 3314 @LENGTH@ 19
---INS MethodInvocation@@Mailbox.clearAll() @TO@ ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @AT@ 3314 @LENGTH@ 18
------INS SimpleName@@Name:Mailbox @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 3314 @LENGTH@ 7
------INS SimpleName@@MethodName:clearAll:[] @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 3322 @LENGTH@ 10


INS IfStatement@@if (isDirectory() && !name.endsWith("/")) {  name=name + "/";} @TO@ MethodDeclaration@@public, void, MethodName:parseTarHeader, byte[] header,  @AT@ 20030 @LENGTH@ 83
---INS InfixExpression@@isDirectory() && !name.endsWith("/") @TO@ IfStatement@@if (isDirectory() && !name.endsWith("/")) {  name=name + "/";} @AT@ 20034 @LENGTH@ 36
------INS MethodInvocation@@MethodName:isDirectory:[] @TO@ InfixExpression@@isDirectory() && !name.endsWith("/") @AT@ 20034 @LENGTH@ 13
------INS Operator@@&& @TO@ InfixExpression@@isDirectory() && !name.endsWith("/") @AT@ 20047 @LENGTH@ 2
------INS PrefixExpression@@!name.endsWith("/") @TO@ InfixExpression@@isDirectory() && !name.endsWith("/") @AT@ 20051 @LENGTH@ 19
---------INS Operator@@! @TO@ PrefixExpression@@!name.endsWith("/") @AT@ 20051 @LENGTH@ 1
---------INS MethodInvocation@@name.endsWith("/") @TO@ PrefixExpression@@!name.endsWith("/") @AT@ 20052 @LENGTH@ 18
------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.endsWith("/") @AT@ 20052 @LENGTH@ 4
------------INS SimpleName@@MethodName:endsWith:["/"] @TO@ MethodInvocation@@name.endsWith("/") @AT@ 20057 @LENGTH@ 13
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:endsWith:["/"] @AT@ 20066 @LENGTH@ 3
---INS Block@@ThenBody:{  name=name + "/";} @TO@ IfStatement@@if (isDirectory() && !name.endsWith("/")) {  name=name + "/";} @AT@ 20071 @LENGTH@ 42
------INS ExpressionStatement@@Assignment:name=name + "/" @TO@ Block@@ThenBody:{  name=name + "/";} @AT@ 20085 @LENGTH@ 18
---------INS Assignment@@name=name + "/" @TO@ ExpressionStatement@@Assignment:name=name + "/" @AT@ 20085 @LENGTH@ 17
------------INS SimpleName@@name @TO@ Assignment@@name=name + "/" @AT@ 20085 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@name=name + "/" @AT@ 20089 @LENGTH@ 1
------------INS InfixExpression@@name + "/" @TO@ Assignment@@name=name + "/" @AT@ 20092 @LENGTH@ 10
---------------INS SimpleName@@name @TO@ InfixExpression@@name + "/" @AT@ 20092 @LENGTH@ 4
---------------INS Operator@@+ @TO@ InfixExpression@@name + "/" @AT@ 20096 @LENGTH@ 1
---------------INS StringLiteral@@"/" @TO@ InfixExpression@@name + "/" @AT@ 20099 @LENGTH@ 3


UPD TypeDeclaration@@[@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]JobExecutionsViewTests, AbstractManagerViewTests @TO@ [@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]JobExecutionsViewTests, AbstractManagerViewTests @AT@ 1521 @LENGTH@ 2088
---UPD NormalAnnotation@@@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml") @TO@ @ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml") @AT@ 1521 @LENGTH@ 142


UPD TypeDeclaration@@[public]FileUtils,  @TO@ [public, final]FileUtils,  @AT@ 908 @LENGTH@ 1852
---INS Modifier@@final @TO@ TypeDeclaration@@[public]FileUtils,  @AT@ 915 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("file://target/concurrent").setHeader("id",simple("${file:onlyname.noext}")).beanRef("business").aggregate(header("country"),new BodyInAggregatingStrategy()).completionTimeout(2000L).to("mock:result") @TO@ MethodInvocation:from("file://target/concurrent?sortBy=file:name").setHeader("id",simple("${file:onlyname.noext}")).beanRef("business").aggregate(header("country"),new BodyInAggregatingStrategy()).completionTimeout(2000L).to("mock:result") @AT@ 4786 @LENGTH@ 321
---UPD MethodInvocation@@from("file://target/concurrent").setHeader("id",simple("${file:onlyname.noext}")).beanRef("business").aggregate(header("country"),new BodyInAggregatingStrategy()).completionTimeout(2000L).to("mock:result") @TO@ from("file://target/concurrent?sortBy=file:name").setHeader("id",simple("${file:onlyname.noext}")).beanRef("business").aggregate(header("country"),new BodyInAggregatingStrategy()).completionTimeout(2000L).to("mock:result") @AT@ 4786 @LENGTH@ 320
------UPD MethodInvocation@@MethodName:from:["file://target/concurrent"] @TO@ MethodName:from:["file://target/concurrent?sortBy=file:name"] @AT@ 4786 @LENGTH@ 32
---------UPD StringLiteral@@"file://target/concurrent" @TO@ "file://target/concurrent?sortBy=file:name" @AT@ 4791 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:logger.warn("Synchronous TaskExecutor detected (" + taskExecutor.getClass() + ") with ItemStream reader.  This is probably an error, "+ "and may lead to incorrect restart data being stored.") @TO@ MethodInvocation:logger.warn("Asynchronous TaskExecutor detected (" + taskExecutor.getClass() + ") with ItemStream reader.  This is probably an error, "+ "and may lead to incorrect restart data being stored.") @AT@ 12547 @LENGTH@ 205
---UPD MethodInvocation@@logger.warn("Synchronous TaskExecutor detected (" + taskExecutor.getClass() + ") with ItemStream reader.  This is probably an error, "+ "and may lead to incorrect restart data being stored.") @TO@ logger.warn("Asynchronous TaskExecutor detected (" + taskExecutor.getClass() + ") with ItemStream reader.  This is probably an error, "+ "and may lead to incorrect restart data being stored.") @AT@ 12547 @LENGTH@ 204
------UPD SimpleName@@MethodName:warn:["Synchronous TaskExecutor detected (" + taskExecutor.getClass() + ") with ItemStream reader.  This is probably an error, "+ "and may lead to incorrect restart data being stored."] @TO@ MethodName:warn:["Asynchronous TaskExecutor detected (" + taskExecutor.getClass() + ") with ItemStream reader.  This is probably an error, "+ "and may lead to incorrect restart data being stored."] @AT@ 12554 @LENGTH@ 197
---------UPD InfixExpression@@"Synchronous TaskExecutor detected (" + taskExecutor.getClass() + ") with ItemStream reader.  This is probably an error, "+ "and may lead to incorrect restart data being stored." @TO@ "Asynchronous TaskExecutor detected (" + taskExecutor.getClass() + ") with ItemStream reader.  This is probably an error, "+ "and may lead to incorrect restart data being stored." @AT@ 12559 @LENGTH@ 191
------------UPD StringLiteral@@"Synchronous TaskExecutor detected (" @TO@ "Asynchronous TaskExecutor detected (" @AT@ 12559 @LENGTH@ 37


UPD MethodDeclaration@@public, String, MethodName:listForInstance, Model model, @PathVariable String jobName, @PathVariable long jobInstanceId,  @TO@ public, String, MethodName:listForInstance, Model model, @PathVariable String jobName, @PathVariable long jobInstanceId, @ModelAttribute("date") Date date, Errors errors,  @AT@ 5616 @LENGTH@ 609
---INS SingleVariableDeclaration@@@ModelAttribute("date") Date date @TO@ MethodDeclaration@@public, String, MethodName:listForInstance, Model model, @PathVariable String jobName, @PathVariable long jobInstanceId,  @AT@ 5726 @LENGTH@ 33
------INS SimpleType@@Date @TO@ SingleVariableDeclaration@@@ModelAttribute("date") Date date @AT@ 5750 @LENGTH@ 4
------INS SimpleName@@date @TO@ SingleVariableDeclaration@@@ModelAttribute("date") Date date @AT@ 5755 @LENGTH@ 4
---INS SingleVariableDeclaration@@Errors errors @TO@ MethodDeclaration@@public, String, MethodName:listForInstance, Model model, @PathVariable String jobName, @PathVariable long jobInstanceId,  @AT@ 5761 @LENGTH@ 13
------INS SimpleType@@Errors @TO@ SingleVariableDeclaration@@Errors errors @AT@ 5761 @LENGTH@ 6
------INS SimpleName@@errors @TO@ SingleVariableDeclaration@@Errors errors @AT@ 5768 @LENGTH@ 6
---UPD TryStatement@@try {  for (  JobExecution jobExecution : jobService.getJobExecutionsForJobInstance(jobName,jobInstanceId)) {    result.add(new JobExecutionInfo(jobExecution,TimeZone.getTimeZone("GMT")));  }} catch (NoSuchJobException e) {} @TO@ try {  for (  JobExecution jobExecution : jobService.getJobExecutionsForJobInstance(jobName,jobInstanceId)) {    result.add(new JobExecutionInfo(jobExecution,TimeZone.getTimeZone("GMT")));  }} catch (NoSuchJobException e) {  errors.reject("no.such.job",new Object[]{jobName},"There is no such job (" + jobName + ")");} @AT@ 5803 @LENGTH@ 263
------UPD CatchClause@@catch (NoSuchJobException e) {} @TO@ catch (NoSuchJobException e) {  errors.reject("no.such.job",new Object[]{jobName},"There is no such job (" + jobName + ")");} @AT@ 6006 @LENGTH@ 60
---------INS ExpressionStatement@@MethodInvocation:errors.reject("no.such.job",new Object[]{jobName},"There is no such job (" + jobName + ")") @TO@ CatchClause@@catch (NoSuchJobException e) {} @AT@ 6093 @LENGTH@ 97
------------INS MethodInvocation@@errors.reject("no.such.job",new Object[]{jobName},"There is no such job (" + jobName + ")") @TO@ ExpressionStatement@@MethodInvocation:errors.reject("no.such.job",new Object[]{jobName},"There is no such job (" + jobName + ")") @AT@ 6093 @LENGTH@ 96
---------------INS SimpleName@@Name:errors @TO@ MethodInvocation@@errors.reject("no.such.job",new Object[]{jobName},"There is no such job (" + jobName + ")") @AT@ 6093 @LENGTH@ 6
---------------INS SimpleName@@MethodName:reject:["no.such.job", new Object[]{jobName}, "There is no such job (" + jobName + ")"] @TO@ MethodInvocation@@errors.reject("no.such.job",new Object[]{jobName},"There is no such job (" + jobName + ")") @AT@ 6100 @LENGTH@ 89
------------------INS StringLiteral@@"no.such.job" @TO@ SimpleName@@MethodName:reject:["no.such.job", new Object[]{jobName}, "There is no such job (" + jobName + ")"] @AT@ 6107 @LENGTH@ 13
------------------INS ArrayCreation@@new Object[]{jobName} @TO@ SimpleName@@MethodName:reject:["no.such.job", new Object[]{jobName}, "There is no such job (" + jobName + ")"] @AT@ 6122 @LENGTH@ 24
---------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{jobName} @AT@ 6126 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 6126 @LENGTH@ 6
---------------------INS ArrayInitializer@@{jobName} @TO@ ArrayCreation@@new Object[]{jobName} @AT@ 6135 @LENGTH@ 11
------------------------INS SimpleName@@jobName @TO@ ArrayInitializer@@{jobName} @AT@ 6137 @LENGTH@ 7
------------------INS InfixExpression@@"There is no such job (" + jobName + ")" @TO@ SimpleName@@MethodName:reject:["no.such.job", new Object[]{jobName}, "There is no such job (" + jobName + ")"] @AT@ 6148 @LENGTH@ 40
---------------------INS StringLiteral@@"There is no such job (" @TO@ InfixExpression@@"There is no such job (" + jobName + ")" @AT@ 6148 @LENGTH@ 24
---------------------INS Operator@@+ @TO@ InfixExpression@@"There is no such job (" + jobName + ")" @AT@ 6172 @LENGTH@ 1
---------------------INS SimpleName@@jobName @TO@ InfixExpression@@"There is no such job (" + jobName + ")" @AT@ 6175 @LENGTH@ 7
---------------------INS StringLiteral@@")" @TO@ InfixExpression@@"There is no such job (" + jobName + ")" @AT@ 6185 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:from("direct:start").resequencer(header("seqnum")).stream().to("mock:result") @TO@ MethodInvocation:from("direct:start").resequence(header("seqnum")).stream().to("mock:result") @AT@ 3583 @LENGTH@ 78
---UPD MethodInvocation@@from("direct:start").resequencer(header("seqnum")).stream().to("mock:result") @TO@ from("direct:start").resequence(header("seqnum")).stream().to("mock:result") @AT@ 3583 @LENGTH@ 77
------UPD MethodInvocation@@MethodName:resequencer:[header("seqnum")] @TO@ MethodName:resequence:[header("seqnum")] @AT@ 3583 @LENGTH@ 50


UPD TypeDeclaration@@[private]MyDynamcRouteBuilder, RouteBuilder @TO@ [private, final]MyDynamcRouteBuilder, RouteBuilder @AT@ 2369 @LENGTH@ 422
---INS Modifier@@final @TO@ TypeDeclaration@@[private]MyDynamcRouteBuilder, RouteBuilder @AT@ 2377 @LENGTH@ 5


UPD VariableDeclarationStatement@@final String uri="mina:tcp://localhost:9085?encoding=UTF-8&sync=false"; @TO@ final String uri="mina:tcp://localhost:9084?encoding=UTF-8&sync=false"; @AT@ 2164 @LENGTH@ 73
---UPD VariableDeclarationFragment@@uri="mina:tcp://localhost:9085?encoding=UTF-8&sync=false" @TO@ uri="mina:tcp://localhost:9084?encoding=UTF-8&sync=false" @AT@ 2177 @LENGTH@ 59
------UPD StringLiteral@@"mina:tcp://localhost:9085?encoding=UTF-8&sync=false" @TO@ "mina:tcp://localhost:9084?encoding=UTF-8&sync=false" @AT@ 2183 @LENGTH@ 53


INS IfStatement@@if (appendOnly) {  String methodName=invocation.getMethod().getName();  if ((result == null && methodName.equals("get")) || (Boolean.FALSE.equals(result) && methodName.startsWith("contains"))) {    return invocation.proceed();  }} @TO@ MethodDeclaration@@public, Object, MethodName:invoke, MethodInvocation invocation, Throwable,  @AT@ 5381 @LENGTH@ 345
---INS SimpleName@@appendOnly @TO@ IfStatement@@if (appendOnly) {  String methodName=invocation.getMethod().getName();  if ((result == null && methodName.equals("get")) || (Boolean.FALSE.equals(result) && methodName.startsWith("contains"))) {    return invocation.proceed();  }} @AT@ 5385 @LENGTH@ 10
---INS Block@@ThenBody:{  String methodName=invocation.getMethod().getName();  if ((result == null && methodName.equals("get")) || (Boolean.FALSE.equals(result) && methodName.startsWith("contains"))) {    return invocation.proceed();  }} @TO@ IfStatement@@if (appendOnly) {  String methodName=invocation.getMethod().getName();  if ((result == null && methodName.equals("get")) || (Boolean.FALSE.equals(result) && methodName.startsWith("contains"))) {    return invocation.proceed();  }} @AT@ 5397 @LENGTH@ 329
------MOV VariableDeclarationStatement@@String methodName=invocation.getMethod().getName(); @TO@ Block@@ThenBody:{  String methodName=invocation.getMethod().getName();  if ((result == null && methodName.equals("get")) || (Boolean.FALSE.equals(result) && methodName.startsWith("contains"))) {    return invocation.proceed();  }} @AT@ 5385 @LENGTH@ 53
------INS IfStatement@@if ((result == null && methodName.equals("get")) || (Boolean.FALSE.equals(result) && methodName.startsWith("contains"))) {  return invocation.proceed();} @TO@ Block@@ThenBody:{  String methodName=invocation.getMethod().getName();  if ((result == null && methodName.equals("get")) || (Boolean.FALSE.equals(result) && methodName.startsWith("contains"))) {    return invocation.proceed();  }} @AT@ 5463 @LENGTH@ 257
---------MOV InfixExpression@@appendOnly && result == null && (methodName.equals("get") || methodName.equals("contains")) @TO@ IfStatement@@if ((result == null && methodName.equals("get")) || (Boolean.FALSE.equals(result) && methodName.startsWith("contains"))) {  return invocation.proceed();} @AT@ 5447 @LENGTH@ 89
------------DEL InfixExpression@@appendOnly && result == null @AT@ 5447 @LENGTH@ 26
---------------DEL SimpleName@@appendOnly @AT@ 5447 @LENGTH@ 10
---------------DEL Operator@@&& @AT@ 5457 @LENGTH@ 2
------------INS ParenthesizedExpression@@(result == null && methodName.equals("get")) @TO@ InfixExpression@@appendOnly && result == null && (methodName.equals("get") || methodName.equals("contains")) @AT@ 5467 @LENGTH@ 44
---------------INS InfixExpression@@result == null && methodName.equals("get") @TO@ ParenthesizedExpression@@(result == null && methodName.equals("get")) @AT@ 5468 @LENGTH@ 42
------------------MOV InfixExpression@@result == null @TO@ InfixExpression@@result == null && methodName.equals("get") @AT@ 5461 @LENGTH@ 12
------------------MOV InfixExpression@@result == null @TO@ InfixExpression@@result == null && methodName.equals("get") @AT@ 5461 @LENGTH@ 12
------------------MOV MethodInvocation@@methodName.equals("get") @TO@ InfixExpression@@result == null && methodName.equals("get") @AT@ 5478 @LENGTH@ 24
------------------INS Operator@@&& @TO@ InfixExpression@@result == null && methodName.equals("get") @AT@ 5482 @LENGTH@ 2
------------UPD Operator@@&& @TO@ || @AT@ 5473 @LENGTH@ 2
------------UPD ParenthesizedExpression@@(methodName.equals("get") || methodName.equals("contains")) @TO@ (Boolean.FALSE.equals(result) && methodName.startsWith("contains")) @AT@ 5477 @LENGTH@ 59
---------------UPD InfixExpression@@methodName.equals("get") || methodName.equals("contains") @TO@ Boolean.FALSE.equals(result) && methodName.startsWith("contains") @AT@ 5478 @LENGTH@ 57
------------------UPD Operator@@|| @TO@ && @AT@ 5502 @LENGTH@ 2
------------------UPD MethodInvocation@@methodName.equals("contains") @TO@ methodName.startsWith("contains") @AT@ 5506 @LENGTH@ 29
---------------------UPD SimpleName@@MethodName:equals:["contains"] @TO@ MethodName:startsWith:["contains"] @AT@ 5517 @LENGTH@ 18
------------------INS MethodInvocation@@Boolean.FALSE.equals(result) @TO@ InfixExpression@@methodName.equals("get") || methodName.equals("contains") @AT@ 5523 @LENGTH@ 28
---------------------INS QualifiedName@@Name:Boolean.FALSE @TO@ MethodInvocation@@Boolean.FALSE.equals(result) @AT@ 5523 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:equals:[result] @TO@ MethodInvocation@@Boolean.FALSE.equals(result) @AT@ 5537 @LENGTH@ 14
------------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:equals:[result] @AT@ 5544 @LENGTH@ 6
---------MOV Block@@ThenBody:{  return invocation.proceed();} @TO@ IfStatement@@if ((result == null && methodName.equals("get")) || (Boolean.FALSE.equals(result) && methodName.startsWith("contains"))) {  return invocation.proceed();} @AT@ 5538 @LENGTH@ 117


UPD FieldDeclaration@@protected, String, [uri="mina:tcp://localhost:5130?sync=true&codec=#myCodec"] @TO@ protected, String, [uri="mina:tcp://localhost:9130?sync=true&codec=#myCodec"] @AT@ 1624 @LENGTH@ 76
---UPD VariableDeclarationFragment@@uri="mina:tcp://localhost:5130?sync=true&codec=#myCodec" @TO@ uri="mina:tcp://localhost:9130?sync=true&codec=#myCodec" @AT@ 1641 @LENGTH@ 58
------UPD StringLiteral@@"mina:tcp://localhost:5130?sync=true&codec=#myCodec" @TO@ "mina:tcp://localhost:9130?sync=true&codec=#myCodec" @AT@ 1647 @LENGTH@ 52


INS ExpressionStatement@@MethodInvocation:XmlUtils.removeTextNodes(root) @TO@ MethodDeclaration@@private, void, MethodName:updateApplicationContext, OrmProvider ormProvider, JdbcDatabase database, String jndi,  @AT@ 8102 @LENGTH@ 31
---INS MethodInvocation@@XmlUtils.removeTextNodes(root) @TO@ ExpressionStatement@@MethodInvocation:XmlUtils.removeTextNodes(root) @AT@ 8102 @LENGTH@ 30
------INS SimpleName@@Name:XmlUtils @TO@ MethodInvocation@@XmlUtils.removeTextNodes(root) @AT@ 8102 @LENGTH@ 8
------INS SimpleName@@MethodName:removeTextNodes:[root] @TO@ MethodInvocation@@XmlUtils.removeTextNodes(root) @AT@ 8111 @LENGTH@ 21
---------INS SimpleName@@root @TO@ SimpleName@@MethodName:removeTextNodes:[root] @AT@ 8127 @LENGTH@ 4


UPD TryStatement@@try {  out=prepareOutputFileChannel(target,out);  if (LOG.isTraceEnabled()) {    LOG.trace("Using InputStream to transfer from: " + in + " to: "+ out);  }  int size=endpoint.getBufferSize();  byte[] buffer=new byte[size];  ByteBuffer byteBuffer=ByteBuffer.wrap(buffer);  while (true) {    int count=in.read(buffer);    if (count <= 0) {      break;    } else     if (count < size) {      byteBuffer=ByteBuffer.wrap(buffer,0,count);      out.write(byteBuffer);      break;    } else {      out.write(byteBuffer);      byteBuffer.clear();    }  }}  finally {  ObjectHelper.close(in,target.getName(),LOG);  ObjectHelper.close(out,target.getName(),LOG);} @TO@ try {  out=prepareOutputFileChannel(target,out);  if (LOG.isTraceEnabled()) {    LOG.trace("Using InputStream to transfer from: " + in + " to: "+ out);  }  int size=endpoint.getBufferSize();  byte[] buffer=new byte[size];  ByteBuffer byteBuffer=ByteBuffer.wrap(buffer);  int bytesRead;  while ((bytesRead=in.read(buffer)) != -1) {    if (bytesRead < size) {      byteBuffer.limit(bytesRead);    }    out.write(byteBuffer);    byteBuffer.clear();  }}  finally {  ObjectHelper.close(in,target.getName(),LOG);  ObjectHelper.close(out,target.getName(),LOG);} @AT@ 10328 @LENGTH@ 962
---DEL WhileStatement@@while (true) {  int count=in.read(buffer);  if (count <= 0) {    break;  } else   if (count < size) {    byteBuffer=ByteBuffer.wrap(buffer,0,count);    out.write(byteBuffer);    break;  } else {    out.write(byteBuffer);    byteBuffer.clear();  }} @AT@ 10700 @LENGTH@ 441
------DEL BooleanLiteral@@true @AT@ 10707 @LENGTH@ 4
------DEL Block@@WhileBody:{  int count=in.read(buffer);  if (count <= 0) {    break;  } else   if (count < size) {    byteBuffer=ByteBuffer.wrap(buffer,0,count);    out.write(byteBuffer);    break;  } else {    out.write(byteBuffer);    byteBuffer.clear();  }} @AT@ 10713 @LENGTH@ 428
---------DEL VariableDeclarationStatement@@int count=in.read(buffer); @AT@ 10731 @LENGTH@ 28
---------DEL IfStatement@@if (count <= 0) {  break;} else if (count < size) {  byteBuffer=ByteBuffer.wrap(buffer,0,count);  out.write(byteBuffer);  break;} else {  out.write(byteBuffer);  byteBuffer.clear();} @AT@ 10776 @LENGTH@ 351
------------DEL InfixExpression@@count <= 0 @AT@ 10780 @LENGTH@ 10
---------------DEL SimpleName@@count @AT@ 10780 @LENGTH@ 5
---------------DEL Operator@@<= @AT@ 10785 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 10789 @LENGTH@ 1
------------DEL Block@@ThenBody:{  break;} @AT@ 10792 @LENGTH@ 46
---------------DEL BreakStatement@@ @AT@ 10814 @LENGTH@ 6
------------DEL Block@@ElseBody:if (count < size) {  byteBuffer=ByteBuffer.wrap(buffer,0,count);  out.write(byteBuffer);  break;} else {  out.write(byteBuffer);  byteBuffer.clear();} @AT@ 10844 @LENGTH@ 283
---------------DEL IfStatement@@if (count < size) {  byteBuffer=ByteBuffer.wrap(buffer,0,count);  out.write(byteBuffer);  break;} else {  out.write(byteBuffer);  byteBuffer.clear();} @AT@ 10844 @LENGTH@ 283
------------------DEL InfixExpression@@count < size @AT@ 10848 @LENGTH@ 12
---------------------DEL SimpleName@@count @AT@ 10848 @LENGTH@ 5
---------------------DEL SimpleName@@size @AT@ 10856 @LENGTH@ 4
------------------DEL Block@@ThenBody:{  byteBuffer=ByteBuffer.wrap(buffer,0,count);  out.write(byteBuffer);  break;} @AT@ 10862 @LENGTH@ 157
---------------------DEL ExpressionStatement@@Assignment:byteBuffer=ByteBuffer.wrap(buffer,0,count) @AT@ 10884 @LENGTH@ 47
------------------------DEL Assignment@@byteBuffer=ByteBuffer.wrap(buffer,0,count) @AT@ 10884 @LENGTH@ 46
---------------------------DEL SimpleName@@byteBuffer @AT@ 10884 @LENGTH@ 10
---------------------------DEL Operator@@= @AT@ 10894 @LENGTH@ 1
---------------------------DEL MethodInvocation@@ByteBuffer.wrap(buffer,0,count) @AT@ 10897 @LENGTH@ 33
------------------------------DEL SimpleName@@Name:ByteBuffer @AT@ 10897 @LENGTH@ 10
------------------------------DEL SimpleName@@MethodName:wrap:[buffer, 0, count] @AT@ 10908 @LENGTH@ 22
---------------------------------DEL SimpleName@@buffer @AT@ 10913 @LENGTH@ 6
---------------------------------DEL NumberLiteral@@0 @AT@ 10921 @LENGTH@ 1
---------------------------------DEL SimpleName@@count @AT@ 10924 @LENGTH@ 5
---------------------DEL ExpressionStatement@@MethodInvocation:out.write(byteBuffer) @AT@ 10952 @LENGTH@ 22
------------------------DEL MethodInvocation@@out.write(byteBuffer) @AT@ 10952 @LENGTH@ 21
---------------------------DEL SimpleName@@Name:out @AT@ 10952 @LENGTH@ 3
---------------------------DEL SimpleName@@MethodName:write:[byteBuffer] @AT@ 10956 @LENGTH@ 17
------------------------------DEL SimpleName@@byteBuffer @AT@ 10962 @LENGTH@ 10
---------------------DEL BreakStatement@@ @AT@ 10995 @LENGTH@ 6
---INS VariableDeclarationStatement@@int bytesRead; @TO@ TryStatement@@try {  out=prepareOutputFileChannel(target,out);  if (LOG.isTraceEnabled()) {    LOG.trace("Using InputStream to transfer from: " + in + " to: "+ out);  }  int size=endpoint.getBufferSize();  byte[] buffer=new byte[size];  ByteBuffer byteBuffer=ByteBuffer.wrap(buffer);  while (true) {    int count=in.read(buffer);    if (count <= 0) {      break;    } else     if (count < size) {      byteBuffer=ByteBuffer.wrap(buffer,0,count);      out.write(byteBuffer);      break;    } else {      out.write(byteBuffer);      byteBuffer.clear();    }  }}  finally {  ObjectHelper.close(in,target.getName(),LOG);  ObjectHelper.close(out,target.getName(),LOG);} @AT@ 10700 @LENGTH@ 14
------MOV PrimitiveType@@int @TO@ VariableDeclarationStatement@@int bytesRead; @AT@ 10731 @LENGTH@ 3
------MOV VariableDeclarationFragment@@count=in.read(buffer) @TO@ VariableDeclarationStatement@@int bytesRead; @AT@ 10735 @LENGTH@ 23
---INS WhileStatement@@while ((bytesRead=in.read(buffer)) != -1) {  if (bytesRead < size) {    byteBuffer.limit(bytesRead);  }  out.write(byteBuffer);  byteBuffer.clear();} @TO@ TryStatement@@try {  out=prepareOutputFileChannel(target,out);  if (LOG.isTraceEnabled()) {    LOG.trace("Using InputStream to transfer from: " + in + " to: "+ out);  }  int size=endpoint.getBufferSize();  byte[] buffer=new byte[size];  ByteBuffer byteBuffer=ByteBuffer.wrap(buffer);  while (true) {    int count=in.read(buffer);    if (count <= 0) {      break;    } else     if (count < size) {      byteBuffer=ByteBuffer.wrap(buffer,0,count);      out.write(byteBuffer);      break;    } else {      out.write(byteBuffer);      byteBuffer.clear();    }  }}  finally {  ObjectHelper.close(in,target.getName(),LOG);  ObjectHelper.close(out,target.getName(),LOG);} @AT@ 10727 @LENGTH@ 241
------INS InfixExpression@@(bytesRead=in.read(buffer)) != -1 @TO@ WhileStatement@@while ((bytesRead=in.read(buffer)) != -1) {  if (bytesRead < size) {    byteBuffer.limit(bytesRead);  }  out.write(byteBuffer);  byteBuffer.clear();} @AT@ 10734 @LENGTH@ 35
---------INS ParenthesizedExpression@@(bytesRead=in.read(buffer)) @TO@ InfixExpression@@(bytesRead=in.read(buffer)) != -1 @AT@ 10734 @LENGTH@ 29
------------INS Assignment@@bytesRead=in.read(buffer) @TO@ ParenthesizedExpression@@(bytesRead=in.read(buffer)) @AT@ 10735 @LENGTH@ 27
---------------INS SimpleName@@bytesRead @TO@ Assignment@@bytesRead=in.read(buffer) @AT@ 10735 @LENGTH@ 9
---------------MOV MethodInvocation@@in.read(buffer) @TO@ Assignment@@bytesRead=in.read(buffer) @AT@ 10743 @LENGTH@ 15
---------------INS Operator@@= @TO@ Assignment@@bytesRead=in.read(buffer) @AT@ 10744 @LENGTH@ 1
---------INS PrefixExpression@@-1 @TO@ InfixExpression@@(bytesRead=in.read(buffer)) != -1 @AT@ 10767 @LENGTH@ 2
------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 10767 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 10768 @LENGTH@ 1
---------MOV Operator@@< @TO@ InfixExpression@@(bytesRead=in.read(buffer)) != -1 @AT@ 10853 @LENGTH@ 1
------MOV Block@@ElseBody:{  out.write(byteBuffer);  byteBuffer.clear();} @TO@ WhileStatement@@while ((bytesRead=in.read(buffer)) != -1) {  if (bytesRead < size) {    byteBuffer.limit(bytesRead);  }  out.write(byteBuffer);  byteBuffer.clear();} @AT@ 11025 @LENGTH@ 102
---------INS IfStatement@@if (bytesRead < size) {  byteBuffer.limit(bytesRead);} @TO@ Block@@ElseBody:{  out.write(byteBuffer);  byteBuffer.clear();} @AT@ 10789 @LENGTH@ 90
------------INS InfixExpression@@bytesRead < size @TO@ IfStatement@@if (bytesRead < size) {  byteBuffer.limit(bytesRead);} @AT@ 10793 @LENGTH@ 16
---------------INS SimpleName@@bytesRead @TO@ InfixExpression@@bytesRead < size @AT@ 10793 @LENGTH@ 9
---------------INS Operator@@< @TO@ InfixExpression@@bytesRead < size @AT@ 10802 @LENGTH@ 1
---------------INS SimpleName@@size @TO@ InfixExpression@@bytesRead < size @AT@ 10805 @LENGTH@ 4
------------INS Block@@ThenBody:{  byteBuffer.limit(bytesRead);} @TO@ IfStatement@@if (bytesRead < size) {  byteBuffer.limit(bytesRead);} @AT@ 10811 @LENGTH@ 68
---------------INS ExpressionStatement@@MethodInvocation:byteBuffer.limit(bytesRead) @TO@ Block@@ThenBody:{  byteBuffer.limit(bytesRead);} @AT@ 10833 @LENGTH@ 28
------------------INS MethodInvocation@@byteBuffer.limit(bytesRead) @TO@ ExpressionStatement@@MethodInvocation:byteBuffer.limit(bytesRead) @AT@ 10833 @LENGTH@ 27
---------------------INS SimpleName@@Name:byteBuffer @TO@ MethodInvocation@@byteBuffer.limit(bytesRead) @AT@ 10833 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:limit:[bytesRead] @TO@ MethodInvocation@@byteBuffer.limit(bytesRead) @AT@ 10844 @LENGTH@ 16
------------------------INS SimpleName@@bytesRead @TO@ SimpleName@@MethodName:limit:[bytesRead] @AT@ 10850 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertEquals("Hello World",IOConverter.toString(out)) @TO@ MethodInvocation:assertEquals("Hello World",IOConverter.toString(out,null)) @AT@ 2951 @LENGTH@ 55
---UPD MethodInvocation@@assertEquals("Hello World",IOConverter.toString(out)) @TO@ assertEquals("Hello World",IOConverter.toString(out,null)) @AT@ 2951 @LENGTH@ 54
------UPD SimpleName@@MethodName:assertEquals:["Hello World", IOConverter.toString(out)] @TO@ MethodName:assertEquals:["Hello World", IOConverter.toString(out,null)] @AT@ 2951 @LENGTH@ 54
---------UPD MethodInvocation@@IOConverter.toString(out) @TO@ IOConverter.toString(out,null) @AT@ 2979 @LENGTH@ 25
------------UPD SimpleName@@MethodName:toString:[out] @TO@ MethodName:toString:[out, null] @AT@ 2991 @LENGTH@ 13
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toString:[out] @AT@ 3061 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:baz").expectedMessageCount(1) @TO@ MethodInvocation:getMockEndpoint("mock:baz").expectedMinimumMessageCount(0) @AT@ 4117 @LENGTH@ 52
---UPD MethodInvocation@@getMockEndpoint("mock:baz").expectedMessageCount(1) @TO@ getMockEndpoint("mock:baz").expectedMinimumMessageCount(0) @AT@ 4117 @LENGTH@ 51
------UPD SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodName:expectedMinimumMessageCount:[0] @AT@ 4145 @LENGTH@ 23
---------UPD NumberLiteral@@1 @TO@ 0 @AT@ 4166 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:this.handlers=handlers @TO@ Assignment:this.handlers=Arrays.asList(handlers).toArray(new ExceptionHandler[handlers.length]) @AT@ 1040 @LENGTH@ 25
---UPD Assignment@@this.handlers=handlers @TO@ this.handlers=Arrays.asList(handlers).toArray(new ExceptionHandler[handlers.length]) @AT@ 1040 @LENGTH@ 24
------DEL SimpleName@@handlers @AT@ 1056 @LENGTH@ 8
------INS MethodInvocation@@Arrays.asList(handlers).toArray(new ExceptionHandler[handlers.length]) @TO@ Assignment@@this.handlers=handlers @AT@ 1081 @LENGTH@ 70
---------INS MethodInvocation@@MethodName:asList:[handlers] @TO@ MethodInvocation@@Arrays.asList(handlers).toArray(new ExceptionHandler[handlers.length]) @AT@ 1081 @LENGTH@ 23
------------INS SimpleName@@handlers @TO@ MethodInvocation@@MethodName:asList:[handlers] @AT@ 1095 @LENGTH@ 8
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(handlers).toArray(new ExceptionHandler[handlers.length]) @AT@ 1081 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[new ExceptionHandler[handlers.length]] @TO@ MethodInvocation@@Arrays.asList(handlers).toArray(new ExceptionHandler[handlers.length]) @AT@ 1105 @LENGTH@ 46
------------INS ArrayCreation@@new ExceptionHandler[handlers.length] @TO@ SimpleName@@MethodName:toArray:[new ExceptionHandler[handlers.length]] @AT@ 1113 @LENGTH@ 37
---------------INS ArrayType@@ExceptionHandler[] @TO@ ArrayCreation@@new ExceptionHandler[handlers.length] @AT@ 1117 @LENGTH@ 33
------------------INS SimpleType@@ExceptionHandler @TO@ ArrayType@@ExceptionHandler[] @AT@ 1117 @LENGTH@ 16
---------------INS QualifiedName@@handlers.length @TO@ ArrayCreation@@new ExceptionHandler[handlers.length] @AT@ 1134 @LENGTH@ 15
------------------INS SimpleName@@handlers @TO@ QualifiedName@@handlers.length @AT@ 1134 @LENGTH@ 8
------------------INS SimpleName@@length @TO@ QualifiedName@@handlers.length @AT@ 1143 @LENGTH@ 6


DEL MethodDeclaration@@private, void, MethodName:clean, IOException,  @AT@ 1540 @LENGTH@ 315
---DEL Modifier@@private @AT@ 1540 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 1548 @LENGTH@ 4
---DEL SimpleName@@MethodName:clean @AT@ 1553 @LENGTH@ 5
---DEL SimpleType@@IOException @AT@ 1568 @LENGTH@ 11
---DEL VariableDeclarationStatement@@File[] files={new File("target/repository"),new File("target/repository.xml"),new File("derby.log")}; @AT@ 1590 @LENGTH@ 129
------DEL ArrayType@@File[] @AT@ 1590 @LENGTH@ 6
---------DEL SimpleType@@File @AT@ 1590 @LENGTH@ 4
------DEL VariableDeclarationFragment@@files={new File("target/repository"),new File("target/repository.xml"),new File("derby.log")} @AT@ 1597 @LENGTH@ 121
---------DEL SimpleName@@files @AT@ 1597 @LENGTH@ 5
---------DEL ArrayInitializer@@{new File("target/repository"),new File("target/repository.xml"),new File("derby.log")} @AT@ 1605 @LENGTH@ 113
------------DEL ClassInstanceCreation@@File["target/repository"] @AT@ 1606 @LENGTH@ 29
---------------DEL New@@new @AT@ 1606 @LENGTH@ 3
---------------DEL SimpleType@@File @AT@ 1610 @LENGTH@ 4
---------------DEL StringLiteral@@"target/repository" @AT@ 1615 @LENGTH@ 19
------------DEL ClassInstanceCreation@@File["target/repository.xml"] @AT@ 1637 @LENGTH@ 33
---------------DEL New@@new @AT@ 1637 @LENGTH@ 3
---------------DEL SimpleType@@File @AT@ 1641 @LENGTH@ 4
---------------DEL StringLiteral@@"target/repository.xml" @AT@ 1646 @LENGTH@ 23
------------DEL ClassInstanceCreation@@File["derby.log"] @AT@ 1696 @LENGTH@ 21
---------------DEL New@@new @AT@ 1696 @LENGTH@ 3
---------------DEL SimpleType@@File @AT@ 1700 @LENGTH@ 4
---------------DEL StringLiteral@@"derby.log" @AT@ 1705 @LENGTH@ 11
---DEL EnhancedForStatement@@for (File file : files) {  if (file.exists()) {    FileUtil.delete(file);  }} @AT@ 1728 @LENGTH@ 121
------DEL SingleVariableDeclaration@@File file @AT@ 1733 @LENGTH@ 9
---------DEL SimpleType@@File @AT@ 1733 @LENGTH@ 4
---------DEL SimpleName@@file @AT@ 1738 @LENGTH@ 4
------DEL SimpleName@@files @AT@ 1745 @LENGTH@ 5
------DEL IfStatement@@if (file.exists()) {  FileUtil.delete(file);} @AT@ 1766 @LENGTH@ 73
---------DEL MethodInvocation@@file.exists() @AT@ 1770 @LENGTH@ 13
------------DEL SimpleName@@Name:file @AT@ 1770 @LENGTH@ 4
------------DEL SimpleName@@MethodName:exists:[] @AT@ 1775 @LENGTH@ 8
---------DEL Block@@ThenBody:{  FileUtil.delete(file);} @AT@ 1785 @LENGTH@ 54
------------DEL ExpressionStatement@@MethodInvocation:FileUtil.delete(file) @AT@ 1803 @LENGTH@ 22
---------------DEL MethodInvocation@@FileUtil.delete(file) @AT@ 1803 @LENGTH@ 21
------------------DEL SimpleName@@Name:FileUtil @AT@ 1803 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:delete:[file] @AT@ 1812 @LENGTH@ 12
---------------------DEL SimpleName@@file @AT@ 1819 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:this.arguments=arguments @TO@ Assignment:this.arguments=Arrays.asList(arguments).toArray() @AT@ 6851 @LENGTH@ 27
---UPD Assignment@@this.arguments=arguments @TO@ this.arguments=Arrays.asList(arguments).toArray() @AT@ 6851 @LENGTH@ 26
------INS MethodInvocation@@Arrays.asList(arguments).toArray() @TO@ Assignment@@this.arguments=arguments @AT@ 6868 @LENGTH@ 34
---------INS MethodInvocation@@MethodName:asList:[arguments] @TO@ MethodInvocation@@Arrays.asList(arguments).toArray() @AT@ 6868 @LENGTH@ 24
------------INS SimpleName@@arguments @TO@ MethodInvocation@@MethodName:asList:[arguments] @AT@ 6882 @LENGTH@ 9
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(arguments).toArray() @AT@ 6868 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[] @TO@ MethodInvocation@@Arrays.asList(arguments).toArray() @AT@ 6893 @LENGTH@ 9
------DEL SimpleName@@arguments @AT@ 6868 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:nagios=new NagiosNscaStub(25667,"secret") @TO@ Assignment:nagios=new NagiosNscaStub(25668,"secret") @AT@ 1485 @LENGTH@ 45
---UPD Assignment@@nagios=new NagiosNscaStub(25667,"secret") @TO@ nagios=new NagiosNscaStub(25668,"secret") @AT@ 1485 @LENGTH@ 44
------UPD ClassInstanceCreation@@NagiosNscaStub[25667, "secret"] @TO@ NagiosNscaStub[25668, "secret"] @AT@ 1494 @LENGTH@ 35
---------UPD NumberLiteral@@25667 @TO@ 25668 @AT@ 1513 @LENGTH@ 5


UPD TypeDeclaration@@[static]ProcessorExchangePair,  @TO@ [static, final]ProcessorExchangePair,  @AT@ 2856 @LENGTH@ 1110
---INS Modifier@@final @TO@ TypeDeclaration@@[static]ProcessorExchangePair,  @AT@ 2863 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:result.expectedMessageCount(1) @TO@ MethodInvocation:result.expectedMinimumMessageCount(1) @AT@ 1401 @LENGTH@ 31
---UPD MethodInvocation@@result.expectedMessageCount(1) @TO@ result.expectedMinimumMessageCount(1) @AT@ 1401 @LENGTH@ 30
------UPD SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodName:expectedMinimumMessageCount:[1] @AT@ 1408 @LENGTH@ 23


UPD TypeDeclaration@@[@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]JobExecutionsRssViewTests, AbstractManagerViewTests @TO@ [@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]JobExecutionsRssViewTests, AbstractManagerViewTests @AT@ 1435 @LENGTH@ 1931
---UPD NormalAnnotation@@@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml") @TO@ @ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml") @AT@ 1435 @LENGTH@ 142


UPD VariableDeclarationStatement@@Map headers=new HashMap(); @TO@ Map<String,Object> headers=new HashMap<String,Object>(); @AT@ 1730 @LENGTH@ 28
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map headers=new HashMap(); @AT@ 1730 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1730 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1734 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1742 @LENGTH@ 6
---DEL SimpleType@@Map @AT@ 1730 @LENGTH@ 3
---UPD VariableDeclarationFragment@@headers=new HashMap() @TO@ headers=new HashMap<String,Object>() @AT@ 1734 @LENGTH@ 23
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 1744 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 1748 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 1764 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1764 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1772 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1780 @LENGTH@ 6


INS MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @TO@ TypeDeclaration@@[public]JpaShutdownCompleteAllTasksTest, CamelTestSupport @AT@ 2094 @LENGTH@ 64
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 2094 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 2101 @LENGTH@ 7
---INS SimpleName@@MethodName:isUseRouteBuilder @TO@ MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 2109 @LENGTH@ 17
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 2139 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2146 @LENGTH@ 5


UPD TypeDeclaration@@[public]RetrySynchronizationManager,  @TO@ [public, final]RetrySynchronizationManager,  @AT@ 1489 @LENGTH@ 1309
---INS Modifier@@final @TO@ TypeDeclaration@@[public]RetrySynchronizationManager,  @AT@ 1496 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertExpression("${file:absolute}",file.isAbsolute()) @TO@ MethodInvocation:assertExpression("${file:absolute}",FileUtil.isAbsolute(file)) @AT@ 2636 @LENGTH@ 56
---UPD MethodInvocation@@assertExpression("${file:absolute}",file.isAbsolute()) @TO@ assertExpression("${file:absolute}",FileUtil.isAbsolute(file)) @AT@ 2636 @LENGTH@ 55
------UPD SimpleName@@MethodName:assertExpression:["${file:absolute}", file.isAbsolute()] @TO@ MethodName:assertExpression:["${file:absolute}", FileUtil.isAbsolute(file)] @AT@ 2636 @LENGTH@ 55
---------UPD MethodInvocation@@file.isAbsolute() @TO@ FileUtil.isAbsolute(file) @AT@ 2673 @LENGTH@ 17
------------UPD SimpleName@@Name:file @TO@ Name:FileUtil @AT@ 2673 @LENGTH@ 4
------------UPD SimpleName@@MethodName:isAbsolute:[] @TO@ MethodName:isAbsolute:[file] @AT@ 2678 @LENGTH@ 12
---------------INS SimpleName@@file @TO@ SimpleName@@MethodName:isAbsolute:[] @AT@ 2732 @LENGTH@ 4


UPD Block@@ElseBody:{  String name=file.isAbsolute() ? file.getAbsoluteFilePath() : file.getRelativeFilePath();  String endpointPath=getConfiguration().getDirectory();  if (ObjectHelper.isNotEmpty(endpointPath) && name.startsWith(endpointPath)) {    name=ObjectHelper.after(name,getConfiguration().getDirectory() + File.separator);  }  message.setHeader(Exchange.FILE_NAME,name);} @TO@ ElseBody:{  String name=file.isAbsolute() ? file.getAbsoluteFilePath() : file.getRelativeFilePath();  String endpointPath=getConfiguration().getDirectory() + getFileSeparator();  if (ObjectHelper.isNotEmpty(endpointPath) && name.startsWith(endpointPath)) {    name=ObjectHelper.after(name,endpointPath);  }  message.setHeader(Exchange.FILE_NAME,name);} @AT@ 14458 @LENGTH@ 627
---UPD VariableDeclarationStatement@@String endpointPath=getConfiguration().getDirectory(); @TO@ String endpointPath=getConfiguration().getDirectory() + getFileSeparator(); @AT@ 14725 @LENGTH@ 56
------UPD VariableDeclarationFragment@@endpointPath=getConfiguration().getDirectory() @TO@ endpointPath=getConfiguration().getDirectory() + getFileSeparator() @AT@ 14732 @LENGTH@ 48
---------INS InfixExpression@@getConfiguration().getDirectory() + getFileSeparator() @TO@ VariableDeclarationFragment@@endpointPath=getConfiguration().getDirectory() @AT@ 14747 @LENGTH@ 54
------------INS MethodInvocation@@getConfiguration().getDirectory() @TO@ InfixExpression@@getConfiguration().getDirectory() + getFileSeparator() @AT@ 14747 @LENGTH@ 33
---------------MOV MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@getConfiguration().getDirectory() @AT@ 14747 @LENGTH@ 18
---------------MOV SimpleName@@MethodName:getDirectory:[] @TO@ MethodInvocation@@getConfiguration().getDirectory() @AT@ 14766 @LENGTH@ 14
------------INS Operator@@+ @TO@ InfixExpression@@getConfiguration().getDirectory() + getFileSeparator() @AT@ 14780 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getFileSeparator:[] @TO@ InfixExpression@@getConfiguration().getDirectory() + getFileSeparator() @AT@ 14783 @LENGTH@ 18
---------DEL MethodInvocation@@getConfiguration().getDirectory() @AT@ 14747 @LENGTH@ 33
---UPD IfStatement@@if (ObjectHelper.isNotEmpty(endpointPath) && name.startsWith(endpointPath)) {  name=ObjectHelper.after(name,getConfiguration().getDirectory() + File.separator);} @TO@ if (ObjectHelper.isNotEmpty(endpointPath) && name.startsWith(endpointPath)) {  name=ObjectHelper.after(name,endpointPath);} @AT@ 14794 @LENGTH@ 192
------UPD Block@@ThenBody:{  name=ObjectHelper.after(name,getConfiguration().getDirectory() + File.separator);} @TO@ ThenBody:{  name=ObjectHelper.after(name,endpointPath);} @AT@ 14870 @LENGTH@ 116
---------UPD ExpressionStatement@@Assignment:name=ObjectHelper.after(name,getConfiguration().getDirectory() + File.separator) @TO@ Assignment:name=ObjectHelper.after(name,endpointPath) @AT@ 14888 @LENGTH@ 84
------------UPD Assignment@@name=ObjectHelper.after(name,getConfiguration().getDirectory() + File.separator) @TO@ name=ObjectHelper.after(name,endpointPath) @AT@ 14888 @LENGTH@ 83
---------------UPD MethodInvocation@@ObjectHelper.after(name,getConfiguration().getDirectory() + File.separator) @TO@ ObjectHelper.after(name,endpointPath) @AT@ 14895 @LENGTH@ 76
------------------UPD SimpleName@@MethodName:after:[name, getConfiguration().getDirectory() + File.separator] @TO@ MethodName:after:[name, endpointPath] @AT@ 14908 @LENGTH@ 63
---------------------DEL InfixExpression@@getConfiguration().getDirectory() + File.separator @AT@ 14920 @LENGTH@ 50
------------------------DEL MethodInvocation@@getConfiguration().getDirectory() @AT@ 14920 @LENGTH@ 33
---------------------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 14920 @LENGTH@ 18
---------------------------DEL SimpleName@@MethodName:getDirectory:[] @AT@ 14939 @LENGTH@ 14
------------------------DEL Operator@@+ @AT@ 14953 @LENGTH@ 1
------------------------DEL QualifiedName@@File.separator @AT@ 14956 @LENGTH@ 14
---------------------------DEL SimpleName@@File @AT@ 14956 @LENGTH@ 4
---------------------------DEL SimpleName@@separator @AT@ 14961 @LENGTH@ 9
---------------------INS SimpleName@@endpointPath @TO@ SimpleName@@MethodName:after:[name, getConfiguration().getDirectory() + File.separator] @AT@ 14941 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertEquals(builder,writer.getBuilder()) @TO@ MethodInvocation:assertSame(builder,writer.getBuilder()) @AT@ 1921 @LENGTH@ 43
---UPD MethodInvocation@@assertEquals(builder,writer.getBuilder()) @TO@ assertSame(builder,writer.getBuilder()) @AT@ 1921 @LENGTH@ 42
------UPD SimpleName@@MethodName:assertEquals:[builder, writer.getBuilder()] @TO@ MethodName:assertSame:[builder, writer.getBuilder()] @AT@ 1921 @LENGTH@ 42


UPD TypeDeclaration@@[@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]StepExecutionHistoryViewTests, AbstractManagerViewTests @TO@ [@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]StepExecutionHistoryViewTests, AbstractManagerViewTests @AT@ 1543 @LENGTH@ 2315
---UPD NormalAnnotation@@@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml") @TO@ @ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml") @AT@ 1543 @LENGTH@ 142


UPD ExpressionStatement@@MethodInvocation:endpoint.expectedMessageCount(2) @TO@ MethodInvocation:endpoint.expectedMessageCount(1) @AT@ 1275 @LENGTH@ 33
---UPD MethodInvocation@@endpoint.expectedMessageCount(2) @TO@ endpoint.expectedMessageCount(1) @AT@ 1275 @LENGTH@ 32
------UPD SimpleName@@MethodName:expectedMessageCount:[2] @TO@ MethodName:expectedMessageCount:[1] @AT@ 1284 @LENGTH@ 23
---------UPD NumberLiteral@@2 @TO@ 1 @AT@ 1305 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:logger.fine("Created " + filenameResolver.getMeaningfulName(actual)) @AT@ 1144 @LENGTH@ 69
---DEL MethodInvocation@@logger.fine("Created " + filenameResolver.getMeaningfulName(actual)) @AT@ 1144 @LENGTH@ 68
------DEL SimpleName@@Name:logger @AT@ 1144 @LENGTH@ 6
------DEL SimpleName@@MethodName:fine:["Created " + filenameResolver.getMeaningfulName(actual)] @AT@ 1151 @LENGTH@ 61
---------DEL InfixExpression@@"Created " + filenameResolver.getMeaningfulName(actual) @AT@ 1156 @LENGTH@ 55
------------DEL StringLiteral@@"Created " @AT@ 1156 @LENGTH@ 10
------------DEL Operator@@+ @AT@ 1166 @LENGTH@ 1
------------DEL MethodInvocation@@filenameResolver.getMeaningfulName(actual) @AT@ 1169 @LENGTH@ 42
---------------DEL SimpleName@@Name:filenameResolver @AT@ 1169 @LENGTH@ 16
---------------DEL SimpleName@@MethodName:getMeaningfulName:[actual] @AT@ 1186 @LENGTH@ 25
------------------DEL SimpleName@@actual @AT@ 1204 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:this.policies=policies @TO@ Assignment:this.policies=Arrays.asList(policies).toArray(new CompletionPolicy[policies.length]) @AT@ 1352 @LENGTH@ 25
---UPD Assignment@@this.policies=policies @TO@ this.policies=Arrays.asList(policies).toArray(new CompletionPolicy[policies.length]) @AT@ 1352 @LENGTH@ 24
------DEL SimpleName@@policies @AT@ 1368 @LENGTH@ 8
------INS MethodInvocation@@Arrays.asList(policies).toArray(new CompletionPolicy[policies.length]) @TO@ Assignment@@this.policies=policies @AT@ 1393 @LENGTH@ 70
---------INS MethodInvocation@@MethodName:asList:[policies] @TO@ MethodInvocation@@Arrays.asList(policies).toArray(new CompletionPolicy[policies.length]) @AT@ 1393 @LENGTH@ 23
------------INS SimpleName@@policies @TO@ MethodInvocation@@MethodName:asList:[policies] @AT@ 1407 @LENGTH@ 8
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(policies).toArray(new CompletionPolicy[policies.length]) @AT@ 1393 @LENGTH@ 6
---------INS SimpleName@@MethodName:toArray:[new CompletionPolicy[policies.length]] @TO@ MethodInvocation@@Arrays.asList(policies).toArray(new CompletionPolicy[policies.length]) @AT@ 1417 @LENGTH@ 46
------------INS ArrayCreation@@new CompletionPolicy[policies.length] @TO@ SimpleName@@MethodName:toArray:[new CompletionPolicy[policies.length]] @AT@ 1425 @LENGTH@ 37
---------------INS ArrayType@@CompletionPolicy[] @TO@ ArrayCreation@@new CompletionPolicy[policies.length] @AT@ 1429 @LENGTH@ 33
------------------INS SimpleType@@CompletionPolicy @TO@ ArrayType@@CompletionPolicy[] @AT@ 1429 @LENGTH@ 16
---------------INS QualifiedName@@policies.length @TO@ ArrayCreation@@new CompletionPolicy[policies.length] @AT@ 1446 @LENGTH@ 15
------------------INS SimpleName@@policies @TO@ QualifiedName@@policies.length @AT@ 1446 @LENGTH@ 8
------------------INS SimpleName@@length @TO@ QualifiedName@@policies.length @AT@ 1455 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:resultEndpoint.expectedMessageCount(messageCount / 5) @TO@ MethodInvocation:resultEndpoint.expectedMinimumMessageCount((messageCount / 5) - 1) @AT@ 4460 @LENGTH@ 54
---UPD MethodInvocation@@resultEndpoint.expectedMessageCount(messageCount / 5) @TO@ resultEndpoint.expectedMinimumMessageCount((messageCount / 5) - 1) @AT@ 4460 @LENGTH@ 53
------UPD SimpleName@@MethodName:expectedMessageCount:[messageCount / 5] @TO@ MethodName:expectedMinimumMessageCount:[(messageCount / 5) - 1] @AT@ 4475 @LENGTH@ 38
---------DEL InfixExpression@@messageCount / 5 @AT@ 4496 @LENGTH@ 16
---------INS InfixExpression@@(messageCount / 5) - 1 @TO@ SimpleName@@MethodName:expectedMessageCount:[messageCount / 5] @AT@ 4551 @LENGTH@ 22
------------INS ParenthesizedExpression@@(messageCount / 5) @TO@ InfixExpression@@(messageCount / 5) - 1 @AT@ 4551 @LENGTH@ 18
---------------INS InfixExpression@@messageCount / 5 @TO@ ParenthesizedExpression@@(messageCount / 5) @AT@ 4552 @LENGTH@ 16
------------------MOV SimpleName@@messageCount @TO@ InfixExpression@@messageCount / 5 @AT@ 4496 @LENGTH@ 12
------------------MOV Operator@@/ @TO@ InfixExpression@@messageCount / 5 @AT@ 4508 @LENGTH@ 1
------------------MOV NumberLiteral@@5 @TO@ InfixExpression@@messageCount / 5 @AT@ 4511 @LENGTH@ 1
------------INS Operator@@- @TO@ InfixExpression@@(messageCount / 5) - 1 @AT@ 4569 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ InfixExpression@@(messageCount / 5) - 1 @AT@ 4572 @LENGTH@ 1


UPD ThrowStatement@@ClassInstanceCreation:new InvalidPayloadRuntimeException(exchange,getEntityType()) @TO@ ClassInstanceCreation:new InvalidPayloadRuntimeException(exchange,getEntityType(),e.getCause()) @AT@ 8838 @LENGTH@ 68
---UPD ClassInstanceCreation@@InvalidPayloadRuntimeException[exchange, getEntityType()] @TO@ InvalidPayloadRuntimeException[exchange, getEntityType(), e.getCause()] @AT@ 8844 @LENGTH@ 61
------INS MethodInvocation@@e.getCause() @TO@ ClassInstanceCreation@@InvalidPayloadRuntimeException[exchange, getEntityType()] @AT@ 8906 @LENGTH@ 12
---------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 8906 @LENGTH@ 1
---------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 8908 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:from("file:src/test/data?noop=true&delay=2000").to("mina:vm://localhost:9123?sync=false&textline=true") @TO@ MethodInvocation:from("file:src/test/data?noop=true&fileName=message1.txt").to("mina:vm://localhost:9123?sync=false&textline=true") @AT@ 1693 @LENGTH@ 125
---UPD MethodInvocation@@from("file:src/test/data?noop=true&delay=2000").to("mina:vm://localhost:9123?sync=false&textline=true") @TO@ from("file:src/test/data?noop=true&fileName=message1.txt").to("mina:vm://localhost:9123?sync=false&textline=true") @AT@ 1693 @LENGTH@ 124
------UPD MethodInvocation@@MethodName:from:["file:src/test/data?noop=true&delay=2000"] @TO@ MethodName:from:["file:src/test/data?noop=true&fileName=message1.txt"] @AT@ 1693 @LENGTH@ 47
---------UPD StringLiteral@@"file:src/test/data?noop=true&delay=2000" @TO@ "file:src/test/data?noop=true&fileName=message1.txt" @AT@ 1698 @LENGTH@ 41


INS MethodDeclaration@@public, void, MethodName:testMailSubjectWithUnicode, Exception,  @TO@ TypeDeclaration@@[public]MailRouteTest, CamelTestSupport @AT@ 2510 @LENGTH@ 951
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMailSubjectWithUnicode, Exception,  @AT@ 2510 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMailSubjectWithUnicode, Exception,  @AT@ 2517 @LENGTH@ 4
---INS SimpleName@@MethodName:testMailSubjectWithUnicode @TO@ MethodDeclaration@@public, void, MethodName:testMailSubjectWithUnicode, Exception,  @AT@ 2522 @LENGTH@ 26
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testMailSubjectWithUnicode, Exception,  @AT@ 2558 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @TO@ MethodDeclaration@@public, void, MethodName:testMailSubjectWithUnicode, Exception,  @AT@ 2578 @LENGTH@ 19
------INS MethodInvocation@@Mailbox.clearAll() @TO@ ExpressionStatement@@MethodInvocation:Mailbox.clearAll() @AT@ 2578 @LENGTH@ 18
---------INS SimpleName@@Name:Mailbox @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 2578 @LENGTH@ 7
---------INS SimpleName@@MethodName:clearAll:[] @TO@ MethodInvocation@@Mailbox.clearAll() @AT@ 2586 @LENGTH@ 10
---INS VariableDeclarationStatement@@String body="Hello Camel Riders!"; @TO@ MethodDeclaration@@public, void, MethodName:testMailSubjectWithUnicode, Exception,  @AT@ 2607 @LENGTH@ 36
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String body="Hello Camel Riders!"; @AT@ 2607 @LENGTH@ 6
------INS VariableDeclarationFragment@@body="Hello Camel Riders!" @TO@ VariableDeclarationStatement@@String body="Hello Camel Riders!"; @AT@ 2614 @LENGTH@ 28
---------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body="Hello Camel Riders!" @AT@ 2614 @LENGTH@ 4
---------INS StringLiteral@@"Hello Camel Riders!" @TO@ VariableDeclarationFragment@@body="Hello Camel Riders!" @AT@ 2621 @LENGTH@ 21
---INS VariableDeclarationStatement@@String subject="My Camel \u2122"; @TO@ MethodDeclaration@@public, void, MethodName:testMailSubjectWithUnicode, Exception,  @AT@ 2652 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String subject="My Camel \u2122"; @AT@ 2652 @LENGTH@ 6
------INS VariableDeclarationFragment@@subject="My Camel \u2122" @TO@ VariableDeclarationStatement@@String subject="My Camel \u2122"; @AT@ 2659 @LENGTH@ 27
---------INS SimpleName@@subject @TO@ VariableDeclarationFragment@@subject="My Camel \u2122" @AT@ 2659 @LENGTH@ 7
---------INS StringLiteral@@"My Camel \u2122" @TO@ VariableDeclarationFragment@@subject="My Camel \u2122" @AT@ 2669 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:System.setProperty(Exchange.DEFAULT_CHARSET_PROPERTY,"US-ASCII") @TO@ MethodDeclaration@@public, void, MethodName:testMailSubjectWithUnicode, Exception,  @AT@ 2705 @LENGTH@ 66
------INS MethodInvocation@@System.setProperty(Exchange.DEFAULT_CHARSET_PROPERTY,"US-ASCII") @TO@ ExpressionStatement@@MethodInvocation:System.setProperty(Exchange.DEFAULT_CHARSET_PROPERTY,"US-ASCII") @AT@ 2705 @LENGTH@ 65
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.setProperty(Exchange.DEFAULT_CHARSET_PROPERTY,"US-ASCII") @AT@ 2705 @LENGTH@ 6
---------INS SimpleName@@MethodName:setProperty:[Exchange.DEFAULT_CHARSET_PROPERTY, "US-ASCII"] @TO@ MethodInvocation@@System.setProperty(Exchange.DEFAULT_CHARSET_PROPERTY,"US-ASCII") @AT@ 2712 @LENGTH@ 58
------------INS QualifiedName@@Exchange.DEFAULT_CHARSET_PROPERTY @TO@ SimpleName@@MethodName:setProperty:[Exchange.DEFAULT_CHARSET_PROPERTY, "US-ASCII"] @AT@ 2724 @LENGTH@ 33
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.DEFAULT_CHARSET_PROPERTY @AT@ 2724 @LENGTH@ 8
---------------INS SimpleName@@DEFAULT_CHARSET_PROPERTY @TO@ QualifiedName@@Exchange.DEFAULT_CHARSET_PROPERTY @AT@ 2733 @LENGTH@ 24
------------INS StringLiteral@@"US-ASCII" @TO@ SimpleName@@MethodName:setProperty:[Exchange.DEFAULT_CHARSET_PROPERTY, "US-ASCII"] @AT@ 2759 @LENGTH@ 10
---INS TryStatement@@try {  MockEndpoint mock=getMockEndpoint("mock:result");  mock.expectedMessageCount(1);  mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=");  mock.expectedBodiesReceived(body);  template.sendBodyAndHeader("direct:a",body,"subject",subject);  mock.assertIsSatisfied();  assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments());}  finally {  System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY);} @TO@ MethodDeclaration@@public, void, MethodName:testMailSubjectWithUnicode, Exception,  @AT@ 2781 @LENGTH@ 665
------INS VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:result"); @TO@ TryStatement@@try {  MockEndpoint mock=getMockEndpoint("mock:result");  mock.expectedMessageCount(1);  mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=");  mock.expectedBodiesReceived(body);  template.sendBodyAndHeader("direct:a",body,"subject",subject);  mock.assertIsSatisfied();  assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments());}  finally {  System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY);} @AT@ 2799 @LENGTH@ 51
---------INS SimpleType@@MockEndpoint @TO@ VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:result"); @AT@ 2799 @LENGTH@ 12
---------INS VariableDeclarationFragment@@mock=getMockEndpoint("mock:result") @TO@ VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:result"); @AT@ 2812 @LENGTH@ 37
------------INS SimpleName@@mock @TO@ VariableDeclarationFragment@@mock=getMockEndpoint("mock:result") @AT@ 2812 @LENGTH@ 4
------------INS MethodInvocation@@getMockEndpoint("mock:result") @TO@ VariableDeclarationFragment@@mock=getMockEndpoint("mock:result") @AT@ 2819 @LENGTH@ 30
---------------INS SimpleName@@MethodName:getMockEndpoint:["mock:result"] @TO@ MethodInvocation@@getMockEndpoint("mock:result") @AT@ 2819 @LENGTH@ 30
------------------INS StringLiteral@@"mock:result" @TO@ SimpleName@@MethodName:getMockEndpoint:["mock:result"] @AT@ 2835 @LENGTH@ 13
------INS ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(1) @TO@ TryStatement@@try {  MockEndpoint mock=getMockEndpoint("mock:result");  mock.expectedMessageCount(1);  mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=");  mock.expectedBodiesReceived(body);  template.sendBodyAndHeader("direct:a",body,"subject",subject);  mock.assertIsSatisfied();  assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments());}  finally {  System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY);} @AT@ 2872 @LENGTH@ 29
---------INS MethodInvocation@@mock.expectedMessageCount(1) @TO@ ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(1) @AT@ 2872 @LENGTH@ 28
------------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.expectedMessageCount(1) @AT@ 2872 @LENGTH@ 4
------------INS SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodInvocation@@mock.expectedMessageCount(1) @AT@ 2877 @LENGTH@ 23
---------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedMessageCount:[1] @AT@ 2898 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=") @TO@ TryStatement@@try {  MockEndpoint mock=getMockEndpoint("mock:result");  mock.expectedMessageCount(1);  mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=");  mock.expectedBodiesReceived(body);  template.sendBodyAndHeader("direct:a",body,"subject",subject);  mock.assertIsSatisfied();  assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments());}  finally {  System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY);} @AT@ 2965 @LENGTH@ 70
---------INS MethodInvocation@@mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=") @TO@ ExpressionStatement@@MethodInvocation:mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=") @AT@ 2965 @LENGTH@ 69
------------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=") @AT@ 2965 @LENGTH@ 4
------------INS SimpleName@@MethodName:expectedHeaderReceived:["subject", "=?US-ASCII?Q?My_Camel_=3F?="] @TO@ MethodInvocation@@mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=") @AT@ 2970 @LENGTH@ 64
---------------INS StringLiteral@@"subject" @TO@ SimpleName@@MethodName:expectedHeaderReceived:["subject", "=?US-ASCII?Q?My_Camel_=3F?="] @AT@ 2993 @LENGTH@ 9
---------------INS StringLiteral@@"=?US-ASCII?Q?My_Camel_=3F?=" @TO@ SimpleName@@MethodName:expectedHeaderReceived:["subject", "=?US-ASCII?Q?My_Camel_=3F?="] @AT@ 3004 @LENGTH@ 29
------INS ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived(body) @TO@ TryStatement@@try {  MockEndpoint mock=getMockEndpoint("mock:result");  mock.expectedMessageCount(1);  mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=");  mock.expectedBodiesReceived(body);  template.sendBodyAndHeader("direct:a",body,"subject",subject);  mock.assertIsSatisfied();  assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments());}  finally {  System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY);} @AT@ 3048 @LENGTH@ 34
---------INS MethodInvocation@@mock.expectedBodiesReceived(body) @TO@ ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived(body) @AT@ 3048 @LENGTH@ 33
------------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.expectedBodiesReceived(body) @AT@ 3048 @LENGTH@ 4
------------INS SimpleName@@MethodName:expectedBodiesReceived:[body] @TO@ MethodInvocation@@mock.expectedBodiesReceived(body) @AT@ 3053 @LENGTH@ 28
---------------INS SimpleName@@body @TO@ SimpleName@@MethodName:expectedBodiesReceived:[body] @AT@ 3076 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("direct:a",body,"subject",subject) @TO@ TryStatement@@try {  MockEndpoint mock=getMockEndpoint("mock:result");  mock.expectedMessageCount(1);  mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=");  mock.expectedBodiesReceived(body);  template.sendBodyAndHeader("direct:a",body,"subject",subject);  mock.assertIsSatisfied();  assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments());}  finally {  System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY);} @AT@ 3100 @LENGTH@ 65
---------INS MethodInvocation@@template.sendBodyAndHeader("direct:a",body,"subject",subject) @TO@ ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("direct:a",body,"subject",subject) @AT@ 3100 @LENGTH@ 64
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBodyAndHeader("direct:a",body,"subject",subject) @AT@ 3100 @LENGTH@ 8
------------INS SimpleName@@MethodName:sendBodyAndHeader:["direct:a", body, "subject", subject] @TO@ MethodInvocation@@template.sendBodyAndHeader("direct:a",body,"subject",subject) @AT@ 3109 @LENGTH@ 55
---------------INS StringLiteral@@"direct:a" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["direct:a", body, "subject", subject] @AT@ 3127 @LENGTH@ 10
---------------INS SimpleName@@body @TO@ SimpleName@@MethodName:sendBodyAndHeader:["direct:a", body, "subject", subject] @AT@ 3139 @LENGTH@ 4
---------------INS StringLiteral@@"subject" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["direct:a", body, "subject", subject] @AT@ 3145 @LENGTH@ 9
---------------INS SimpleName@@subject @TO@ SimpleName@@MethodName:sendBodyAndHeader:["direct:a", body, "subject", subject] @AT@ 3156 @LENGTH@ 7
------INS ExpressionStatement@@MethodInvocation:mock.assertIsSatisfied() @TO@ TryStatement@@try {  MockEndpoint mock=getMockEndpoint("mock:result");  mock.expectedMessageCount(1);  mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=");  mock.expectedBodiesReceived(body);  template.sendBodyAndHeader("direct:a",body,"subject",subject);  mock.assertIsSatisfied();  assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments());}  finally {  System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY);} @AT@ 3183 @LENGTH@ 25
---------INS MethodInvocation@@mock.assertIsSatisfied() @TO@ ExpressionStatement@@MethodInvocation:mock.assertIsSatisfied() @AT@ 3183 @LENGTH@ 24
------------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.assertIsSatisfied() @AT@ 3183 @LENGTH@ 4
------------INS SimpleName@@MethodName:assertIsSatisfied:[] @TO@ MethodInvocation@@mock.assertIsSatisfied() @AT@ 3188 @LENGTH@ 19
------INS ExpressionStatement@@MethodInvocation:assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments()) @TO@ TryStatement@@try {  MockEndpoint mock=getMockEndpoint("mock:result");  mock.expectedMessageCount(1);  mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=");  mock.expectedBodiesReceived(body);  template.sendBodyAndHeader("direct:a",body,"subject",subject);  mock.assertIsSatisfied();  assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments());}  finally {  System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY);} @AT@ 3226 @LENGTH@ 121
---------INS MethodInvocation@@assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments()) @AT@ 3226 @LENGTH@ 120
------------INS SimpleName@@MethodName:assertFalse:["Should not have attachements", mock.getExchanges().get(0).getIn().hasAttachments()] @TO@ MethodInvocation@@assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments()) @AT@ 3226 @LENGTH@ 120
---------------INS StringLiteral@@"Should not have attachements" @TO@ SimpleName@@MethodName:assertFalse:["Should not have attachements", mock.getExchanges().get(0).getIn().hasAttachments()] @AT@ 3238 @LENGTH@ 30
---------------INS MethodInvocation@@mock.getExchanges().get(0).getIn().hasAttachments() @TO@ SimpleName@@MethodName:assertFalse:["Should not have attachements", mock.getExchanges().get(0).getIn().hasAttachments()] @AT@ 3294 @LENGTH@ 51
------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@mock.getExchanges().get(0).getIn().hasAttachments() @AT@ 3294 @LENGTH@ 34
------------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@mock.getExchanges().get(0).getIn().hasAttachments() @AT@ 3294 @LENGTH@ 26
---------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 3318 @LENGTH@ 1
------------------INS MethodInvocation@@MethodName:getExchanges:[] @TO@ MethodInvocation@@mock.getExchanges().get(0).getIn().hasAttachments() @AT@ 3294 @LENGTH@ 19
------------------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.getExchanges().get(0).getIn().hasAttachments() @AT@ 3294 @LENGTH@ 4
------------------INS SimpleName@@MethodName:hasAttachments:[] @TO@ MethodInvocation@@mock.getExchanges().get(0).getIn().hasAttachments() @AT@ 3329 @LENGTH@ 16
------INS Block@@FinallyBody:{  System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY);} @TO@ TryStatement@@try {  MockEndpoint mock=getMockEndpoint("mock:result");  mock.expectedMessageCount(1);  mock.expectedHeaderReceived("subject","=?US-ASCII?Q?My_Camel_=3F?=");  mock.expectedBodiesReceived(body);  template.sendBodyAndHeader("direct:a",body,"subject",subject);  mock.assertIsSatisfied();  assertFalse("Should not have attachements",mock.getExchanges().get(0).getIn().hasAttachments());}  finally {  System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY);} @AT@ 3366 @LENGTH@ 80
---------INS ExpressionStatement@@MethodInvocation:System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY) @TO@ Block@@FinallyBody:{  System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY);} @AT@ 3380 @LENGTH@ 56
------------INS MethodInvocation@@System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY) @TO@ ExpressionStatement@@MethodInvocation:System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY) @AT@ 3380 @LENGTH@ 55
---------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY) @AT@ 3380 @LENGTH@ 6
---------------INS SimpleName@@MethodName:clearProperty:[Exchange.DEFAULT_CHARSET_PROPERTY] @TO@ MethodInvocation@@System.clearProperty(Exchange.DEFAULT_CHARSET_PROPERTY) @AT@ 3387 @LENGTH@ 48
------------------INS QualifiedName@@Exchange.DEFAULT_CHARSET_PROPERTY @TO@ SimpleName@@MethodName:clearProperty:[Exchange.DEFAULT_CHARSET_PROPERTY] @AT@ 3401 @LENGTH@ 33
---------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.DEFAULT_CHARSET_PROPERTY @AT@ 3401 @LENGTH@ 8
---------------------INS SimpleName@@DEFAULT_CHARSET_PROPERTY @TO@ QualifiedName@@Exchange.DEFAULT_CHARSET_PROPERTY @AT@ 3410 @LENGTH@ 24


INS MethodDeclaration@@public, void, MethodName:testDateAndTimeExpressions, Exception,  @TO@ TypeDeclaration@@[public]SimpleTest, LanguageTestSupport @AT@ 2903 @LENGTH@ 385
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDateAndTimeExpressions, Exception,  @AT@ 2903 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDateAndTimeExpressions, Exception,  @AT@ 2910 @LENGTH@ 4
---INS SimpleName@@MethodName:testDateAndTimeExpressions @TO@ MethodDeclaration@@public, void, MethodName:testDateAndTimeExpressions, Exception,  @AT@ 2915 @LENGTH@ 26
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDateAndTimeExpressions, Exception,  @AT@ 2951 @LENGTH@ 9
---INS VariableDeclarationStatement@@Calendar cal=GregorianCalendar.getInstance(); @TO@ MethodDeclaration@@public, void, MethodName:testDateAndTimeExpressions, Exception,  @AT@ 2971 @LENGTH@ 47
------INS SimpleType@@Calendar @TO@ VariableDeclarationStatement@@Calendar cal=GregorianCalendar.getInstance(); @AT@ 2971 @LENGTH@ 8
------INS VariableDeclarationFragment@@cal=GregorianCalendar.getInstance() @TO@ VariableDeclarationStatement@@Calendar cal=GregorianCalendar.getInstance(); @AT@ 2980 @LENGTH@ 37
---------INS SimpleName@@cal @TO@ VariableDeclarationFragment@@cal=GregorianCalendar.getInstance() @AT@ 2980 @LENGTH@ 3
---------INS MethodInvocation@@GregorianCalendar.getInstance() @TO@ VariableDeclarationFragment@@cal=GregorianCalendar.getInstance() @AT@ 2986 @LENGTH@ 31
------------INS SimpleName@@Name:GregorianCalendar @TO@ MethodInvocation@@GregorianCalendar.getInstance() @AT@ 2986 @LENGTH@ 17
------------INS SimpleName@@MethodName:getInstance:[] @TO@ MethodInvocation@@GregorianCalendar.getInstance() @AT@ 3004 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:cal.set(1974,Calendar.APRIL,20,8,55,47) @TO@ MethodDeclaration@@public, void, MethodName:testDateAndTimeExpressions, Exception,  @AT@ 3027 @LENGTH@ 44
------INS MethodInvocation@@cal.set(1974,Calendar.APRIL,20,8,55,47) @TO@ ExpressionStatement@@MethodInvocation:cal.set(1974,Calendar.APRIL,20,8,55,47) @AT@ 3027 @LENGTH@ 43
---------INS SimpleName@@Name:cal @TO@ MethodInvocation@@cal.set(1974,Calendar.APRIL,20,8,55,47) @AT@ 3027 @LENGTH@ 3
---------INS SimpleName@@MethodName:set:[1974, Calendar.APRIL, 20, 8, 55, 47] @TO@ MethodInvocation@@cal.set(1974,Calendar.APRIL,20,8,55,47) @AT@ 3031 @LENGTH@ 39
------------INS NumberLiteral@@1974 @TO@ SimpleName@@MethodName:set:[1974, Calendar.APRIL, 20, 8, 55, 47] @AT@ 3035 @LENGTH@ 4
------------INS QualifiedName@@Calendar.APRIL @TO@ SimpleName@@MethodName:set:[1974, Calendar.APRIL, 20, 8, 55, 47] @AT@ 3041 @LENGTH@ 14
---------------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.APRIL @AT@ 3041 @LENGTH@ 8
---------------INS SimpleName@@APRIL @TO@ QualifiedName@@Calendar.APRIL @AT@ 3050 @LENGTH@ 5
------------INS NumberLiteral@@20 @TO@ SimpleName@@MethodName:set:[1974, Calendar.APRIL, 20, 8, 55, 47] @AT@ 3057 @LENGTH@ 2
------------INS NumberLiteral@@8 @TO@ SimpleName@@MethodName:set:[1974, Calendar.APRIL, 20, 8, 55, 47] @AT@ 3061 @LENGTH@ 1
------------INS NumberLiteral@@55 @TO@ SimpleName@@MethodName:set:[1974, Calendar.APRIL, 20, 8, 55, 47] @AT@ 3063 @LENGTH@ 2
------------INS NumberLiteral@@47 @TO@ SimpleName@@MethodName:set:[1974, Calendar.APRIL, 20, 8, 55, 47] @AT@ 3067 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:cal.set(Calendar.MILLISECOND,123) @TO@ MethodDeclaration@@public, void, MethodName:testDateAndTimeExpressions, Exception,  @AT@ 3080 @LENGTH@ 35
------INS MethodInvocation@@cal.set(Calendar.MILLISECOND,123) @TO@ ExpressionStatement@@MethodInvocation:cal.set(Calendar.MILLISECOND,123) @AT@ 3080 @LENGTH@ 34
---------INS SimpleName@@Name:cal @TO@ MethodInvocation@@cal.set(Calendar.MILLISECOND,123) @AT@ 3080 @LENGTH@ 3
---------INS SimpleName@@MethodName:set:[Calendar.MILLISECOND, 123] @TO@ MethodInvocation@@cal.set(Calendar.MILLISECOND,123) @AT@ 3084 @LENGTH@ 30
------------INS QualifiedName@@Calendar.MILLISECOND @TO@ SimpleName@@MethodName:set:[Calendar.MILLISECOND, 123] @AT@ 3088 @LENGTH@ 20
---------------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.MILLISECOND @AT@ 3088 @LENGTH@ 8
---------------INS SimpleName@@MILLISECOND @TO@ QualifiedName@@Calendar.MILLISECOND @AT@ 3097 @LENGTH@ 11
------------INS NumberLiteral@@123 @TO@ SimpleName@@MethodName:set:[Calendar.MILLISECOND, 123] @AT@ 3110 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("birthday",cal.getTime()) @TO@ MethodDeclaration@@public, void, MethodName:testDateAndTimeExpressions, Exception,  @AT@ 3124 @LENGTH@ 54
------INS MethodInvocation@@exchange.getIn().setHeader("birthday",cal.getTime()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("birthday",cal.getTime()) @AT@ 3124 @LENGTH@ 53
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader("birthday",cal.getTime()) @AT@ 3124 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader("birthday",cal.getTime()) @AT@ 3124 @LENGTH@ 8
---------INS SimpleName@@MethodName:setHeader:["birthday", cal.getTime()] @TO@ MethodInvocation@@exchange.getIn().setHeader("birthday",cal.getTime()) @AT@ 3141 @LENGTH@ 36
------------INS StringLiteral@@"birthday" @TO@ SimpleName@@MethodName:setHeader:["birthday", cal.getTime()] @AT@ 3151 @LENGTH@ 10
------------INS MethodInvocation@@cal.getTime() @TO@ SimpleName@@MethodName:setHeader:["birthday", cal.getTime()] @AT@ 3163 @LENGTH@ 13
---------------INS SimpleName@@Name:cal @TO@ MethodInvocation@@cal.getTime() @AT@ 3163 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getTime:[] @TO@ MethodInvocation@@cal.getTime() @AT@ 3167 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertExpression("date:header.birthday:yyyy-MM-dd'T'HH:mm:ss:SSS","1974-04-20T08:55:47:123") @TO@ MethodDeclaration@@public, void, MethodName:testDateAndTimeExpressions, Exception,  @AT@ 3188 @LENGTH@ 94
------INS MethodInvocation@@assertExpression("date:header.birthday:yyyy-MM-dd'T'HH:mm:ss:SSS","1974-04-20T08:55:47:123") @TO@ ExpressionStatement@@MethodInvocation:assertExpression("date:header.birthday:yyyy-MM-dd'T'HH:mm:ss:SSS","1974-04-20T08:55:47:123") @AT@ 3188 @LENGTH@ 93
---------INS SimpleName@@MethodName:assertExpression:["date:header.birthday:yyyy-MM-dd'T'HH:mm:ss:SSS", "1974-04-20T08:55:47:123"] @TO@ MethodInvocation@@assertExpression("date:header.birthday:yyyy-MM-dd'T'HH:mm:ss:SSS","1974-04-20T08:55:47:123") @AT@ 3188 @LENGTH@ 93
------------INS StringLiteral@@"date:header.birthday:yyyy-MM-dd'T'HH:mm:ss:SSS" @TO@ SimpleName@@MethodName:assertExpression:["date:header.birthday:yyyy-MM-dd'T'HH:mm:ss:SSS", "1974-04-20T08:55:47:123"] @AT@ 3205 @LENGTH@ 48
------------INS StringLiteral@@"1974-04-20T08:55:47:123" @TO@ SimpleName@@MethodName:assertExpression:["date:header.birthday:yyyy-MM-dd'T'HH:mm:ss:SSS", "1974-04-20T08:55:47:123"] @AT@ 3255 @LENGTH@ 25


MOV FieldDeclaration@@private, final, List<Processor>, [processors=new CopyOnWriteArrayList<Processor>()] @TO@ TypeDeclaration@@[public, abstract]LoadBalancerSupport, ServiceSupport[LoadBalancer, Navigate<Processor>] @AT@ 1417 @LENGTH@ 81


UPD ReturnStatement@@InfixExpression:isStateful() == false @TO@ InfixExpression:sessionType == SessionType.Stateless @AT@ 10440 @LENGTH@ 29
---UPD InfixExpression@@isStateful() == false @TO@ sessionType == SessionType.Stateless @AT@ 10447 @LENGTH@ 21
------DEL MethodInvocation@@MethodName:isStateful:[] @AT@ 10447 @LENGTH@ 12
------DEL BooleanLiteral@@false @AT@ 10463 @LENGTH@ 5
------INS SimpleName@@sessionType @TO@ InfixExpression@@isStateful() == false @AT@ 10501 @LENGTH@ 11
------INS QualifiedName@@SessionType.Stateless @TO@ InfixExpression@@isStateful() == false @AT@ 10516 @LENGTH@ 21
---------INS SimpleName@@SessionType @TO@ QualifiedName@@SessionType.Stateless @AT@ 10516 @LENGTH@ 11
---------INS SimpleName@@Stateless @TO@ QualifiedName@@SessionType.Stateless @AT@ 10528 @LENGTH@ 9


INS ExpressionStatement@@Assignment:resources=(Resource[])ReflectionTestUtils.getField(tested,"resources") @TO@ MethodDeclaration@@public, void, MethodName:testResourceOrderingWithCustomComparator,  @AT@ 6225 @LENGTH@ 75
---INS Assignment@@resources=(Resource[])ReflectionTestUtils.getField(tested,"resources") @TO@ ExpressionStatement@@Assignment:resources=(Resource[])ReflectionTestUtils.getField(tested,"resources") @AT@ 6225 @LENGTH@ 74
------INS SimpleName@@resources @TO@ Assignment@@resources=(Resource[])ReflectionTestUtils.getField(tested,"resources") @AT@ 6225 @LENGTH@ 9
------INS Operator@@= @TO@ Assignment@@resources=(Resource[])ReflectionTestUtils.getField(tested,"resources") @AT@ 6234 @LENGTH@ 1
------INS CastExpression@@(Resource[])ReflectionTestUtils.getField(tested,"resources") @TO@ Assignment@@resources=(Resource[])ReflectionTestUtils.getField(tested,"resources") @AT@ 6237 @LENGTH@ 62
---------INS ArrayType@@Resource[] @TO@ CastExpression@@(Resource[])ReflectionTestUtils.getField(tested,"resources") @AT@ 6238 @LENGTH@ 10
------------INS SimpleType@@Resource @TO@ ArrayType@@Resource[] @AT@ 6238 @LENGTH@ 8
---------INS MethodInvocation@@ReflectionTestUtils.getField(tested,"resources") @TO@ CastExpression@@(Resource[])ReflectionTestUtils.getField(tested,"resources") @AT@ 6250 @LENGTH@ 49
------------INS SimpleName@@Name:ReflectionTestUtils @TO@ MethodInvocation@@ReflectionTestUtils.getField(tested,"resources") @AT@ 6250 @LENGTH@ 19
------------INS SimpleName@@MethodName:getField:[tested, "resources"] @TO@ MethodInvocation@@ReflectionTestUtils.getField(tested,"resources") @AT@ 6270 @LENGTH@ 29
---------------INS SimpleName@@tested @TO@ SimpleName@@MethodName:getField:[tested, "resources"] @AT@ 6279 @LENGTH@ 6
---------------INS StringLiteral@@"resources" @TO@ SimpleName@@MethodName:getField:[tested, "resources"] @AT@ 6287 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals(10,events.size()) @TO@ MethodInvocation:assertEquals(11,events.size()) @AT@ 2800 @LENGTH@ 32
---UPD MethodInvocation@@assertEquals(10,events.size()) @TO@ assertEquals(11,events.size()) @AT@ 2800 @LENGTH@ 31
------UPD SimpleName@@MethodName:assertEquals:[10, events.size()] @TO@ MethodName:assertEquals:[11, events.size()] @AT@ 2800 @LENGTH@ 31
---------UPD NumberLiteral@@10 @TO@ 11 @AT@ 2813 @LENGTH@ 2


UPD VariableDeclarationStatement@@ScheduledExecutorService e=ExecutorServiceHelper.newScheduledThreadPool(2,"foo",true); @TO@ ScheduledExecutorService e=ExecutorServiceHelper.newScheduledThreadPool(2,null,"foo",true); @AT@ 3150 @LENGTH@ 90
---UPD VariableDeclarationFragment@@e=ExecutorServiceHelper.newScheduledThreadPool(2,"foo",true) @TO@ e=ExecutorServiceHelper.newScheduledThreadPool(2,null,"foo",true) @AT@ 3175 @LENGTH@ 64
------UPD MethodInvocation@@ExecutorServiceHelper.newScheduledThreadPool(2,"foo",true) @TO@ ExecutorServiceHelper.newScheduledThreadPool(2,null,"foo",true) @AT@ 3179 @LENGTH@ 60
---------UPD SimpleName@@MethodName:newScheduledThreadPool:[2, "foo", true] @TO@ MethodName:newScheduledThreadPool:[2, null, "foo", true] @AT@ 3201 @LENGTH@ 38
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:newScheduledThreadPool:[2, "foo", true] @AT@ 3227 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean absolute=file.isAbsolute(); @TO@ boolean absolute=FileUtil.isAbsolute(file); @AT@ 7412 @LENGTH@ 37
---UPD VariableDeclarationFragment@@absolute=file.isAbsolute() @TO@ absolute=FileUtil.isAbsolute(file) @AT@ 7420 @LENGTH@ 28
------UPD MethodInvocation@@file.isAbsolute() @TO@ FileUtil.isAbsolute(file) @AT@ 7431 @LENGTH@ 17
---------UPD SimpleName@@Name:file @TO@ Name:FileUtil @AT@ 7431 @LENGTH@ 4
---------UPD SimpleName@@MethodName:isAbsolute:[] @TO@ MethodName:isAbsolute:[file] @AT@ 7436 @LENGTH@ 12
------------INS SimpleName@@file @TO@ SimpleName@@MethodName:isAbsolute:[] @AT@ 7451 @LENGTH@ 4


MOV FieldDeclaration@@private, final, Map<String,BlockingQueue<Exchange>>, [queues=new HashMap<String,BlockingQueue<Exchange>>()] @TO@ TypeDeclaration@@[public]SedaComponent, DefaultComponent @AT@ 1371 @LENGTH@ 107


UPD MethodDeclaration@@public, JAXBContext, MethodName:getContext, Class<?> objectType,  @TO@ public, JAXBContext, MethodName:getContext, Class objectType,  @AT@ 1798 @LENGTH@ 371
---UPD SingleVariableDeclaration@@Class<?> objectType @TO@ Class objectType @AT@ 1828 @LENGTH@ 19
------DEL ParameterizedType@@Class<?> @AT@ 1828 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 1828 @LENGTH@ 5
---------DEL WildcardType@@? @AT@ 1834 @LENGTH@ 1
------INS SimpleType@@Class @TO@ SingleVariableDeclaration@@Class<?> objectType @AT@ 1828 @LENGTH@ 5


UPD TypeDeclaration@@[@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]StepExecutionViewTests, AbstractManagerViewTests @TO@ [@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml"), @RunWith(SpringJUnit4ClassRunner.class), public]StepExecutionViewTests, AbstractManagerViewTests @AT@ 1336 @LENGTH@ 935
---UPD NormalAnnotation@@@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=true,locations="AbstractManagerViewTests-context.xml") @TO@ @ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations="AbstractManagerViewTests-context.xml") @AT@ 1336 @LENGTH@ 142


UPD VariableDeclarationStatement@@Map headers=new HashMap(); @TO@ Map<String,Object> headers=new HashMap<String,Object>(); @AT@ 1577 @LENGTH@ 28
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map headers=new HashMap(); @AT@ 1577 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1577 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1581 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1589 @LENGTH@ 6
---DEL SimpleType@@Map @AT@ 1577 @LENGTH@ 3
---UPD VariableDeclarationFragment@@headers=new HashMap() @TO@ headers=new HashMap<String,Object>() @AT@ 1581 @LENGTH@ 23
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 1591 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 1595 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 1611 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1611 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1619 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1627 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("direct:start").to("mina:tcp://localhost:8080?sync=true") @TO@ MethodInvocation:from("direct:start").to("mina:tcp://localhost:9080?sync=true") @AT@ 2808 @LENGTH@ 63
---UPD MethodInvocation@@from("direct:start").to("mina:tcp://localhost:8080?sync=true") @TO@ from("direct:start").to("mina:tcp://localhost:9080?sync=true") @AT@ 2808 @LENGTH@ 62
------UPD SimpleName@@MethodName:to:["mina:tcp://localhost:8080?sync=true"] @TO@ MethodName:to:["mina:tcp://localhost:9080?sync=true"] @AT@ 2829 @LENGTH@ 41
---------UPD StringLiteral@@"mina:tcp://localhost:8080?sync=true" @TO@ "mina:tcp://localhost:9080?sync=true" @AT@ 2832 @LENGTH@ 37


DEL IfStatement@@if (appendOnly && result == null && (methodName.equals("get") || methodName.equals("contains"))) {  return invocation.proceed();} @AT@ 5443 @LENGTH@ 212


UPD MethodDeclaration@@public, void, MethodName:setOptionalKeys, String[] optionalKeys,  @TO@ public, final, void, MethodName:setOptionalKeys, String[] optionalKeys,  @AT@ 4077 @LENGTH@ 129
---INS Modifier@@final @TO@ MethodDeclaration@@public, void, MethodName:setOptionalKeys, String[] optionalKeys,  @AT@ 4090 @LENGTH@ 5


UPD VariableDeclarationStatement@@ErrorHandlerBuilder a=deadLetterChannel("mock:a").maximumRedeliveries(2).redeliverDelay(0).logStackTrace(false).useOriginalMessage().handled(true); @TO@ ErrorHandlerBuilder a=deadLetterChannel("mock:a").maximumRedeliveries(2).redeliveryDelay(0).logStackTrace(false).useOriginalMessage().handled(true); @AT@ 2281 @LENGTH@ 170
---UPD VariableDeclarationFragment@@a=deadLetterChannel("mock:a").maximumRedeliveries(2).redeliverDelay(0).logStackTrace(false).useOriginalMessage().handled(true) @TO@ a=deadLetterChannel("mock:a").maximumRedeliveries(2).redeliveryDelay(0).logStackTrace(false).useOriginalMessage().handled(true) @AT@ 2301 @LENGTH@ 149
------UPD MethodInvocation@@deadLetterChannel("mock:a").maximumRedeliveries(2).redeliverDelay(0).logStackTrace(false).useOriginalMessage().handled(true) @TO@ deadLetterChannel("mock:a").maximumRedeliveries(2).redeliveryDelay(0).logStackTrace(false).useOriginalMessage().handled(true) @AT@ 2305 @LENGTH@ 145
---------UPD MethodInvocation@@MethodName:redeliverDelay:[0] @TO@ MethodName:redeliveryDelay:[0] @AT@ 2305 @LENGTH@ 89


UPD ExpressionStatement@@MethodInvocation:LOG.info("Using CompletionTimeout to trigger after " + getCompletionInterval() + " millis of inactivity.") @TO@ MethodInvocation:LOG.info("Using CompletionTimeout to trigger after " + getCompletionTimeout() + " millis of inactivity.") @AT@ 33136 @LENGTH@ 107
---UPD MethodInvocation@@LOG.info("Using CompletionTimeout to trigger after " + getCompletionInterval() + " millis of inactivity.") @TO@ LOG.info("Using CompletionTimeout to trigger after " + getCompletionTimeout() + " millis of inactivity.") @AT@ 33136 @LENGTH@ 106
------UPD SimpleName@@MethodName:info:["Using CompletionTimeout to trigger after " + getCompletionInterval() + " millis of inactivity."] @TO@ MethodName:info:["Using CompletionTimeout to trigger after " + getCompletionTimeout() + " millis of inactivity."] @AT@ 33140 @LENGTH@ 102
---------UPD InfixExpression@@"Using CompletionTimeout to trigger after " + getCompletionInterval() + " millis of inactivity." @TO@ "Using CompletionTimeout to trigger after " + getCompletionTimeout() + " millis of inactivity." @AT@ 33145 @LENGTH@ 96
------------UPD MethodInvocation@@MethodName:getCompletionInterval:[] @TO@ MethodName:getCompletionTimeout:[] @AT@ 33191 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:assertEquals(dsl,render(dsl)) @TO@ MethodInvocation:assertEquals(expect,render(dsl)) @AT@ 1804 @LENGTH@ 31
---UPD MethodInvocation@@assertEquals(dsl,render(dsl)) @TO@ assertEquals(expect,render(dsl)) @AT@ 1804 @LENGTH@ 30
------UPD SimpleName@@MethodName:assertEquals:[dsl, render(dsl)] @TO@ MethodName:assertEquals:[expect, render(dsl)] @AT@ 1804 @LENGTH@ 30
---------UPD SimpleName@@dsl @TO@ expect @AT@ 1817 @LENGTH@ 3


UPD MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, HttpServletRequest request, IOException,  @TO@ public, static, InputStream, MethodName:toInputStream, HttpServletRequest request, Exchange exchange, IOException,  @AT@ 2810 @LENGTH@ 327
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, HttpServletRequest request, IOException,  @AT@ 2907 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2907 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2916 @LENGTH@ 8
---INS IfStatement@@if (exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class)) {  String contentEncoding=request.getHeader(Exchange.CONTENT_ENCODING);  return GZIPHelper.uncompressGzip(contentEncoding,request.getInputStream());} else {  return request.getInputStream();} @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, HttpServletRequest request, IOException,  @AT@ 3021 @LENGTH@ 351
------INS InfixExpression@@exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @TO@ IfStatement@@if (exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class)) {  String contentEncoding=request.getHeader(Exchange.CONTENT_ENCODING);  return GZIPHelper.uncompressGzip(contentEncoding,request.getInputStream());} else {  return request.getInputStream();} @AT@ 3025 @LENGTH@ 100
---------INS InfixExpression@@exchange == null @TO@ InfixExpression@@exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 3025 @LENGTH@ 16
------------INS SimpleName@@exchange @TO@ InfixExpression@@exchange == null @AT@ 3025 @LENGTH@ 8
------------INS Operator@@== @TO@ InfixExpression@@exchange == null @AT@ 3033 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@exchange == null @AT@ 3037 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 3041 @LENGTH@ 2
---------INS PrefixExpression@@!exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @TO@ InfixExpression@@exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 3045 @LENGTH@ 80
------------INS Operator@@! @TO@ PrefixExpression@@!exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 3045 @LENGTH@ 1
------------INS MethodInvocation@@exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @TO@ PrefixExpression@@!exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 3046 @LENGTH@ 79
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 3046 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.FALSE, Boolean.class] @TO@ MethodInvocation@@exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class) @AT@ 3055 @LENGTH@ 70
------------------INS QualifiedName@@Exchange.SKIP_GZIP_ENCODING @TO@ SimpleName@@MethodName:getProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.FALSE, Boolean.class] @AT@ 3067 @LENGTH@ 27
---------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.SKIP_GZIP_ENCODING @AT@ 3067 @LENGTH@ 8
---------------------INS SimpleName@@SKIP_GZIP_ENCODING @TO@ QualifiedName@@Exchange.SKIP_GZIP_ENCODING @AT@ 3076 @LENGTH@ 18
------------------INS QualifiedName@@Boolean.FALSE @TO@ SimpleName@@MethodName:getProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.FALSE, Boolean.class] @AT@ 3096 @LENGTH@ 13
---------------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.FALSE @AT@ 3096 @LENGTH@ 7
---------------------INS SimpleName@@FALSE @TO@ QualifiedName@@Boolean.FALSE @AT@ 3104 @LENGTH@ 5
------------------INS TypeLiteral@@Boolean.class @TO@ SimpleName@@MethodName:getProperty:[Exchange.SKIP_GZIP_ENCODING, Boolean.FALSE, Boolean.class] @AT@ 3111 @LENGTH@ 13
------INS Block@@ThenBody:{  String contentEncoding=request.getHeader(Exchange.CONTENT_ENCODING);  return GZIPHelper.uncompressGzip(contentEncoding,request.getInputStream());} @TO@ IfStatement@@if (exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class)) {  String contentEncoding=request.getHeader(Exchange.CONTENT_ENCODING);  return GZIPHelper.uncompressGzip(contentEncoding,request.getInputStream());} else {  return request.getInputStream();} @AT@ 3127 @LENGTH@ 183
---------MOV VariableDeclarationStatement@@String contentEncoding=request.getHeader(Exchange.CONTENT_ENCODING); @TO@ Block@@ThenBody:{  String contentEncoding=request.getHeader(Exchange.CONTENT_ENCODING);  return GZIPHelper.uncompressGzip(contentEncoding,request.getInputStream());} @AT@ 2973 @LENGTH@ 70
---------INS ReturnStatement@@MethodInvocation:GZIPHelper.uncompressGzip(contentEncoding,request.getInputStream()) @TO@ Block@@ThenBody:{  String contentEncoding=request.getHeader(Exchange.CONTENT_ENCODING);  return GZIPHelper.uncompressGzip(contentEncoding,request.getInputStream());} @AT@ 3224 @LENGTH@ 76
------------MOV MethodInvocation@@GZIPHelper.toGZIPInputStream(contentEncoding,request.getInputStream()) @TO@ ReturnStatement@@MethodInvocation:GZIPHelper.uncompressGzip(contentEncoding,request.getInputStream()) @AT@ 3059 @LENGTH@ 71
---------------UPD SimpleName@@MethodName:toGZIPInputStream:[contentEncoding, request.getInputStream()] @TO@ MethodName:uncompressGzip:[contentEncoding, request.getInputStream()] @AT@ 3070 @LENGTH@ 60
------INS Block@@ElseBody:{  return request.getInputStream();} @TO@ IfStatement@@if (exchange == null || !exchange.getProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.FALSE,Boolean.class)) {  String contentEncoding=request.getHeader(Exchange.CONTENT_ENCODING);  return GZIPHelper.uncompressGzip(contentEncoding,request.getInputStream());} else {  return request.getInputStream();} @AT@ 3316 @LENGTH@ 56
---------INS ReturnStatement@@MethodInvocation:request.getInputStream() @TO@ Block@@ElseBody:{  return request.getInputStream();} @AT@ 3330 @LENGTH@ 32
------------INS MethodInvocation@@request.getInputStream() @TO@ ReturnStatement@@MethodInvocation:request.getInputStream() @AT@ 3337 @LENGTH@ 24
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getInputStream() @AT@ 3337 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getInputStream:[] @TO@ MethodInvocation@@request.getInputStream() @AT@ 3345 @LENGTH@ 16
---DEL ReturnStatement@@MethodInvocation:GZIPHelper.toGZIPInputStream(contentEncoding,request.getInputStream()) @AT@ 3052 @LENGTH@ 79


UPD TryStatement@@try {  template.requestBody("jetty://http://localhost:9999/myservice",null,Object.class);} catch (CamelExecutionException e) {  CamelExchangeException cause=assertIsInstanceOf(CamelExchangeException.class,e.getCause());  assertIsInstanceOf(ConnectException.class,cause.getCause());} @TO@ try {  template.requestBody("jetty://http://localhost:9999/myservice",null,Object.class);  fail("Should have thrown an exception");} catch (Exception e) {  CamelExchangeException cause=assertIsInstanceOf(CamelExchangeException.class,e.getCause());  assertIsInstanceOf(ConnectException.class,cause.getCause());} @AT@ 1732 @LENGTH@ 339
---UPD CatchClause@@catch (CamelExecutionException e) {  CamelExchangeException cause=assertIsInstanceOf(CamelExchangeException.class,e.getCause());  assertIsInstanceOf(ConnectException.class,cause.getCause());} @TO@ catch (Exception e) {  CamelExchangeException cause=assertIsInstanceOf(CamelExchangeException.class,e.getCause());  assertIsInstanceOf(ConnectException.class,cause.getCause());} @AT@ 1845 @LENGTH@ 226
------UPD SingleVariableDeclaration@@CamelExecutionException e @TO@ Exception e @AT@ 1852 @LENGTH@ 25
---------UPD SimpleType@@CamelExecutionException @TO@ Exception @AT@ 1852 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:fail("Should have thrown an exception") @TO@ TryStatement@@try {  template.requestBody("jetty://http://localhost:9999/myservice",null,Object.class);} catch (CamelExecutionException e) {  CamelExchangeException cause=assertIsInstanceOf(CamelExchangeException.class,e.getCause());  assertIsInstanceOf(ConnectException.class,cause.getCause());} @AT@ 1847 @LENGTH@ 40
------INS MethodInvocation@@fail("Should have thrown an exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Should have thrown an exception") @AT@ 1847 @LENGTH@ 39
---------INS SimpleName@@MethodName:fail:["Should have thrown an exception"] @TO@ MethodInvocation@@fail("Should have thrown an exception") @AT@ 1847 @LENGTH@ 39
------------INS StringLiteral@@"Should have thrown an exception" @TO@ SimpleName@@MethodName:fail:["Should have thrown an exception"] @AT@ 1852 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:from("direct:start").resequencer(body()).to("mock:result") @TO@ MethodInvocation:from("direct:start").resequence(body()).to("mock:result") @AT@ 2215 @LENGTH@ 59
---UPD MethodInvocation@@from("direct:start").resequencer(body()).to("mock:result") @TO@ from("direct:start").resequence(body()).to("mock:result") @AT@ 2215 @LENGTH@ 58
------UPD MethodInvocation@@MethodName:resequencer:[body()] @TO@ MethodName:resequence:[body()] @AT@ 2215 @LENGTH@ 40


DEL MethodDeclaration@@public, void, MethodName:testRetryUntilRecipientListOkAndFail, Exception,  @AT@ 1040 @LENGTH@ 431
---DEL Modifier@@public @AT@ 1040 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1047 @LENGTH@ 4
---DEL SimpleName@@MethodName:testRetryUntilRecipientListOkAndFail @AT@ 1052 @LENGTH@ 36
---DEL SimpleType@@Exception @AT@ 1098 @LENGTH@ 9
---DEL ExpressionStatement@@Assignment:invoked=0 @AT@ 1118 @LENGTH@ 12
------DEL Assignment@@invoked=0 @AT@ 1118 @LENGTH@ 11
---------DEL SimpleName@@invoked @AT@ 1118 @LENGTH@ 7
---------DEL Operator@@= @AT@ 1125 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 1128 @LENGTH@ 1
---DEL ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedMessageCount(0) @AT@ 1140 @LENGTH@ 55
------DEL MethodInvocation@@getMockEndpoint("mock:result").expectedMessageCount(0) @AT@ 1140 @LENGTH@ 54
---------DEL MethodInvocation@@MethodName:getMockEndpoint:["mock:result"] @AT@ 1140 @LENGTH@ 30
------------DEL StringLiteral@@"mock:result" @AT@ 1156 @LENGTH@ 13
---------DEL SimpleName@@MethodName:expectedMessageCount:[0] @AT@ 1171 @LENGTH@ 23
------------DEL NumberLiteral@@0 @AT@ 1192 @LENGTH@ 1
---DEL ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:foo").expectedMessageCount(1) @AT@ 1204 @LENGTH@ 52
------DEL MethodInvocation@@getMockEndpoint("mock:foo").expectedMessageCount(1) @AT@ 1204 @LENGTH@ 51
---------DEL MethodInvocation@@MethodName:getMockEndpoint:["mock:foo"] @AT@ 1204 @LENGTH@ 27
------------DEL StringLiteral@@"mock:foo" @AT@ 1220 @LENGTH@ 10
---------DEL SimpleName@@MethodName:expectedMessageCount:[1] @AT@ 1232 @LENGTH@ 23
------------DEL NumberLiteral@@1 @AT@ 1253 @LENGTH@ 1
---DEL ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("seda:start","Hello World","recipientListHeader","direct:foo,fail") @AT@ 1266 @LENGTH@ 98
------DEL MethodInvocation@@template.sendBodyAndHeader("seda:start","Hello World","recipientListHeader","direct:foo,fail") @AT@ 1266 @LENGTH@ 97
---------DEL SimpleName@@Name:template @AT@ 1266 @LENGTH@ 8
---------DEL SimpleName@@MethodName:sendBodyAndHeader:["seda:start", "Hello World", "recipientListHeader", "direct:foo,fail"] @AT@ 1275 @LENGTH@ 88
------------DEL StringLiteral@@"seda:start" @AT@ 1293 @LENGTH@ 12
------------DEL StringLiteral@@"Hello World" @AT@ 1307 @LENGTH@ 13
------------DEL StringLiteral@@"recipientListHeader" @AT@ 1322 @LENGTH@ 21
------------DEL StringLiteral@@"direct:foo,fail" @AT@ 1345 @LENGTH@ 17
---DEL ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @AT@ 1374 @LENGTH@ 31
------DEL MethodInvocation@@MethodName:assertMockEndpointsSatisfied:[] @AT@ 1374 @LENGTH@ 30
---DEL ExpressionStatement@@MethodInvocation:context.stop() @AT@ 1415 @LENGTH@ 15
------DEL MethodInvocation@@context.stop() @AT@ 1415 @LENGTH@ 14
---------DEL SimpleName@@Name:context @AT@ 1415 @LENGTH@ 7
---------DEL SimpleName@@MethodName:stop:[] @AT@ 1423 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:assertEquals(3,invoked) @AT@ 1440 @LENGTH@ 25
------DEL MethodInvocation@@assertEquals(3,invoked) @AT@ 1440 @LENGTH@ 24
---------DEL SimpleName@@MethodName:assertEquals:[3, invoked] @AT@ 1440 @LENGTH@ 24
------------DEL NumberLiteral@@3 @AT@ 1453 @LENGTH@ 1
------------DEL SimpleName@@invoked @AT@ 1456 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:LOG.trace("This method is already overriden in a subclass, so the method from the sub class is prefered: " + existingMethodInfo) @TO@ MethodInvocation:LOG.trace("This method is already overriden in a subclass, so the method from the sub class is preferred: " + existingMethodInfo) @AT@ 9056 @LENGTH@ 129
---UPD MethodInvocation@@LOG.trace("This method is already overriden in a subclass, so the method from the sub class is prefered: " + existingMethodInfo) @TO@ LOG.trace("This method is already overriden in a subclass, so the method from the sub class is preferred: " + existingMethodInfo) @AT@ 9056 @LENGTH@ 128
------UPD SimpleName@@MethodName:trace:["This method is already overriden in a subclass, so the method from the sub class is prefered: " + existingMethodInfo] @TO@ MethodName:trace:["This method is already overriden in a subclass, so the method from the sub class is preferred: " + existingMethodInfo] @AT@ 9060 @LENGTH@ 124
---------UPD InfixExpression@@"This method is already overriden in a subclass, so the method from the sub class is prefered: " + existingMethodInfo @TO@ "This method is already overriden in a subclass, so the method from the sub class is preferred: " + existingMethodInfo @AT@ 9066 @LENGTH@ 117
------------UPD StringLiteral@@"This method is already overriden in a subclass, so the method from the sub class is prefered: " @TO@ "This method is already overriden in a subclass, so the method from the sub class is preferred: " @AT@ 9066 @LENGTH@ 96


UPD ExpressionStatement@@MethodInvocation:setDataFormatName("bindy-kv") @TO@ MethodInvocation:setDataFormatName("bindy-kvp") @AT@ 1884 @LENGTH@ 30
---UPD MethodInvocation@@setDataFormatName("bindy-kv") @TO@ setDataFormatName("bindy-kvp") @AT@ 1884 @LENGTH@ 29
------UPD SimpleName@@MethodName:setDataFormatName:["bindy-kv"] @TO@ MethodName:setDataFormatName:["bindy-kvp"] @AT@ 1884 @LENGTH@ 29
---------UPD StringLiteral@@"bindy-kv" @TO@ "bindy-kvp" @AT@ 1902 @LENGTH@ 10


UPD EnhancedForStatement@@for (String headerName : in.getHeaders().keySet()) {  String headerValue=in.getHeader(headerName,String.class);  if (strategy != null && !strategy.applyFilterToCamelHeaders(headerName,headerValue,exchange)) {    httpRequest.addHeader(headerName,headerValue);  }} @TO@ for (Map.Entry<String,Object> entry : in.getHeaders().entrySet()) {  String headerValue=in.getHeader(entry.getKey(),String.class);  if (strategy != null && !strategy.applyFilterToCamelHeaders(entry.getKey(),headerValue,exchange)) {    httpRequest.addHeader(entry.getKey(),headerValue);  }} @AT@ 2959 @LENGTH@ 323
---UPD SingleVariableDeclaration@@String headerName @TO@ Map.Entry<String,Object> entry @AT@ 2964 @LENGTH@ 17
------DEL SimpleType@@String @AT@ 2964 @LENGTH@ 6
------INS ParameterizedType@@Map.Entry<String,Object> @TO@ SingleVariableDeclaration@@String headerName @AT@ 2964 @LENGTH@ 25
---------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,Object> @AT@ 2964 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,Object> @AT@ 2974 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map.Entry<String,Object> @AT@ 2982 @LENGTH@ 6
------UPD SimpleName@@headerName @TO@ entry @AT@ 2971 @LENGTH@ 10
---UPD MethodInvocation@@in.getHeaders().keySet() @TO@ in.getHeaders().entrySet() @AT@ 2984 @LENGTH@ 24
------UPD SimpleName@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 3000 @LENGTH@ 8
---UPD VariableDeclarationStatement@@String headerValue=in.getHeader(headerName,String.class); @TO@ String headerValue=in.getHeader(entry.getKey(),String.class); @AT@ 3024 @LENGTH@ 60
------UPD VariableDeclarationFragment@@headerValue=in.getHeader(headerName,String.class) @TO@ headerValue=in.getHeader(entry.getKey(),String.class) @AT@ 3031 @LENGTH@ 52
---------UPD MethodInvocation@@in.getHeader(headerName,String.class) @TO@ in.getHeader(entry.getKey(),String.class) @AT@ 3045 @LENGTH@ 38
------------UPD SimpleName@@MethodName:getHeader:[headerName, String.class] @TO@ MethodName:getHeader:[entry.getKey(), String.class] @AT@ 3048 @LENGTH@ 35
---------------DEL SimpleName@@headerName @AT@ 3058 @LENGTH@ 10
---------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:getHeader:[headerName, String.class] @AT@ 3074 @LENGTH@ 14
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 3074 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 3080 @LENGTH@ 8
---UPD IfStatement@@if (strategy != null && !strategy.applyFilterToCamelHeaders(headerName,headerValue,exchange)) {  httpRequest.addHeader(headerName,headerValue);} @TO@ if (strategy != null && !strategy.applyFilterToCamelHeaders(entry.getKey(),headerValue,exchange)) {  httpRequest.addHeader(entry.getKey(),headerValue);} @AT@ 3097 @LENGTH@ 175
------UPD InfixExpression@@strategy != null && !strategy.applyFilterToCamelHeaders(headerName,headerValue,exchange) @TO@ strategy != null && !strategy.applyFilterToCamelHeaders(entry.getKey(),headerValue,exchange) @AT@ 3101 @LENGTH@ 90
---------UPD PrefixExpression@@!strategy.applyFilterToCamelHeaders(headerName,headerValue,exchange) @TO@ !strategy.applyFilterToCamelHeaders(entry.getKey(),headerValue,exchange) @AT@ 3121 @LENGTH@ 70
------------UPD MethodInvocation@@strategy.applyFilterToCamelHeaders(headerName,headerValue,exchange) @TO@ strategy.applyFilterToCamelHeaders(entry.getKey(),headerValue,exchange) @AT@ 3122 @LENGTH@ 69
---------------UPD SimpleName@@MethodName:applyFilterToCamelHeaders:[headerName, headerValue, exchange] @TO@ MethodName:applyFilterToCamelHeaders:[entry.getKey(), headerValue, exchange] @AT@ 3131 @LENGTH@ 60
------------------DEL SimpleName@@headerName @AT@ 3157 @LENGTH@ 10
------------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:applyFilterToCamelHeaders:[headerName, headerValue, exchange] @AT@ 3177 @LENGTH@ 14
---------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 3177 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 3183 @LENGTH@ 8
------UPD Block@@ThenBody:{  httpRequest.addHeader(headerName,headerValue);} @TO@ ThenBody:{  httpRequest.addHeader(entry.getKey(),headerValue);} @AT@ 3193 @LENGTH@ 79
---------UPD ExpressionStatement@@MethodInvocation:httpRequest.addHeader(headerName,headerValue) @TO@ MethodInvocation:httpRequest.addHeader(entry.getKey(),headerValue) @AT@ 3211 @LENGTH@ 47
------------UPD MethodInvocation@@httpRequest.addHeader(headerName,headerValue) @TO@ httpRequest.addHeader(entry.getKey(),headerValue) @AT@ 3211 @LENGTH@ 46
---------------UPD SimpleName@@MethodName:addHeader:[headerName, headerValue] @TO@ MethodName:addHeader:[entry.getKey(), headerValue] @AT@ 3223 @LENGTH@ 34
------------------DEL SimpleName@@headerName @AT@ 3233 @LENGTH@ 10
------------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:addHeader:[headerName, headerValue] @AT@ 3257 @LENGTH@ 14
---------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 3257 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 3263 @LENGTH@ 8


UPD MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, HttpMessage message, Exception,  @TO@ public, static, InputStream, MethodName:toInputStream, HttpMessage message, Exchange exchange, Exception,  @AT@ 2375 @LENGTH@ 142
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, HttpMessage message, Exception,  @AT@ 2436 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2436 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2445 @LENGTH@ 8
---UPD ReturnStatement@@MethodInvocation:toInputStream(toServletRequest(message)) @TO@ MethodInvocation:toInputStream(toServletRequest(message),exchange) @AT@ 2463 @LENGTH@ 48
------UPD MethodInvocation@@toInputStream(toServletRequest(message)) @TO@ toInputStream(toServletRequest(message),exchange) @AT@ 2470 @LENGTH@ 40
---------UPD SimpleName@@MethodName:toInputStream:[toServletRequest(message)] @TO@ MethodName:toInputStream:[toServletRequest(message), exchange] @AT@ 2470 @LENGTH@ 40
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:toInputStream:[toServletRequest(message)] @AT@ 2530 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:this.arguments=Arrays.asList(arguments).toArray() @TO@ Assignment:this.arguments=arguments == null ? null : Arrays.asList(arguments).toArray() @AT@ 6851 @LENGTH@ 52
---UPD Assignment@@this.arguments=Arrays.asList(arguments).toArray() @TO@ this.arguments=arguments == null ? null : Arrays.asList(arguments).toArray() @AT@ 6851 @LENGTH@ 51
------INS ConditionalExpression@@arguments == null ? null : Arrays.asList(arguments).toArray() @TO@ Assignment@@this.arguments=Arrays.asList(arguments).toArray() @AT@ 6868 @LENGTH@ 61
---------MOV MethodInvocation@@Arrays.asList(arguments).toArray() @TO@ ConditionalExpression@@arguments == null ? null : Arrays.asList(arguments).toArray() @AT@ 6868 @LENGTH@ 34
---------INS InfixExpression@@arguments == null @TO@ ConditionalExpression@@arguments == null ? null : Arrays.asList(arguments).toArray() @AT@ 6868 @LENGTH@ 17
------------INS SimpleName@@arguments @TO@ InfixExpression@@arguments == null @AT@ 6868 @LENGTH@ 9
------------INS Operator@@== @TO@ InfixExpression@@arguments == null @AT@ 6877 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@arguments == null @AT@ 6881 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ConditionalExpression@@arguments == null ? null : Arrays.asList(arguments).toArray() @AT@ 6888 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("file://target/file/splitprop?move=done").split(new MyCustomExpression()).recipientList(header("myCustomDestination")) @TO@ MethodInvocation:from("file://target/file/splitprop?move=done").convertBodyTo(String.class).split(new MyCustomExpression()).recipientList(header("myCustomDestination")) @AT@ 2237 @LENGTH@ 166
---UPD MethodInvocation@@from("file://target/file/splitprop?move=done").split(new MyCustomExpression()).recipientList(header("myCustomDestination")) @TO@ from("file://target/file/splitprop?move=done").convertBodyTo(String.class).split(new MyCustomExpression()).recipientList(header("myCustomDestination")) @AT@ 2237 @LENGTH@ 165
------INS MethodInvocation@@MethodName:convertBodyTo:[String.class] @TO@ MethodInvocation@@from("file://target/file/splitprop?move=done").split(new MyCustomExpression()).recipientList(header("myCustomDestination")) @AT@ 2237 @LENGTH@ 95
---------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:convertBodyTo:[String.class] @AT@ 2319 @LENGTH@ 12


INS TryStatement@@try {  uri=URISupport.normalizeUri(uri);} catch (Exception e) {  throw new ResolveEndpointFailedException(uri,e);} @TO@ MethodDeclaration@@public, static, boolean, MethodName:matchEndpoint, String uri, String pattern,  @AT@ 3764 @LENGTH@ 157
---INS ExpressionStatement@@Assignment:uri=URISupport.normalizeUri(uri) @TO@ TryStatement@@try {  uri=URISupport.normalizeUri(uri);} catch (Exception e) {  throw new ResolveEndpointFailedException(uri,e);} @AT@ 3782 @LENGTH@ 35
------INS Assignment@@uri=URISupport.normalizeUri(uri) @TO@ ExpressionStatement@@Assignment:uri=URISupport.normalizeUri(uri) @AT@ 3782 @LENGTH@ 34
---------INS SimpleName@@uri @TO@ Assignment@@uri=URISupport.normalizeUri(uri) @AT@ 3782 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@uri=URISupport.normalizeUri(uri) @AT@ 3785 @LENGTH@ 1
---------INS MethodInvocation@@URISupport.normalizeUri(uri) @TO@ Assignment@@uri=URISupport.normalizeUri(uri) @AT@ 3788 @LENGTH@ 28
------------INS SimpleName@@Name:URISupport @TO@ MethodInvocation@@URISupport.normalizeUri(uri) @AT@ 3788 @LENGTH@ 10
------------INS SimpleName@@MethodName:normalizeUri:[uri] @TO@ MethodInvocation@@URISupport.normalizeUri(uri) @AT@ 3799 @LENGTH@ 17
---------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:normalizeUri:[uri] @AT@ 3812 @LENGTH@ 3
---INS CatchClause@@catch (Exception e) {  throw new ResolveEndpointFailedException(uri,e);} @TO@ TryStatement@@try {  uri=URISupport.normalizeUri(uri);} catch (Exception e) {  throw new ResolveEndpointFailedException(uri,e);} @AT@ 3828 @LENGTH@ 93
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new ResolveEndpointFailedException(uri,e);} @AT@ 3835 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3835 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3845 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new ResolveEndpointFailedException(uri,e) @TO@ CatchClause@@catch (Exception e) {  throw new ResolveEndpointFailedException(uri,e);} @AT@ 3862 @LENGTH@ 49
---------INS ClassInstanceCreation@@ResolveEndpointFailedException[uri, e] @TO@ ThrowStatement@@ClassInstanceCreation:new ResolveEndpointFailedException(uri,e) @AT@ 3868 @LENGTH@ 42
------------INS New@@new @TO@ ClassInstanceCreation@@ResolveEndpointFailedException[uri, e] @AT@ 3868 @LENGTH@ 3
------------INS SimpleType@@ResolveEndpointFailedException @TO@ ClassInstanceCreation@@ResolveEndpointFailedException[uri, e] @AT@ 3872 @LENGTH@ 30
------------INS SimpleName@@uri @TO@ ClassInstanceCreation@@ResolveEndpointFailedException[uri, e] @AT@ 3903 @LENGTH@ 3
------------INS SimpleName@@e @TO@ ClassInstanceCreation@@ResolveEndpointFailedException[uri, e] @AT@ 3908 @LENGTH@ 1


UPD VariableDeclarationStatement@@Map headers=new HashMap(); @TO@ Map<String,Object> headers=new HashMap<String,Object>(); @AT@ 2229 @LENGTH@ 28
---DEL SimpleType@@Map @AT@ 2229 @LENGTH@ 3
---UPD VariableDeclarationFragment@@headers=new HashMap() @TO@ headers=new HashMap<String,Object>() @AT@ 2233 @LENGTH@ 23
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 2243 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 2247 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2295 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2295 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2303 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2311 @LENGTH@ 6
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map headers=new HashMap(); @AT@ 2261 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 2261 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 2265 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 2273 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:init, Exception,  @TO@ TypeDeclaration@@[public]JcrConverterTest, Assert @AT@ 1733 @LENGTH@ 309
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:init, Exception,  @AT@ 1733 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:init, Exception,  @AT@ 1740 @LENGTH@ 4
---INS SimpleName@@MethodName:init @TO@ MethodDeclaration@@public, void, MethodName:init, Exception,  @AT@ 1745 @LENGTH@ 4
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:init, Exception,  @AT@ 1759 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:converter=new DefaultTypeConverter(new DefaultPackageScanClassResolver(),new ReflectionInjector(),new DefaultFactoryFinderResolver().resolveDefaultFactoryFinder(new DefaultClassResolver())) @TO@ MethodDeclaration@@public, void, MethodName:init, Exception,  @AT@ 1779 @LENGTH@ 210
------INS Assignment@@converter=new DefaultTypeConverter(new DefaultPackageScanClassResolver(),new ReflectionInjector(),new DefaultFactoryFinderResolver().resolveDefaultFactoryFinder(new DefaultClassResolver())) @TO@ ExpressionStatement@@Assignment:converter=new DefaultTypeConverter(new DefaultPackageScanClassResolver(),new ReflectionInjector(),new DefaultFactoryFinderResolver().resolveDefaultFactoryFinder(new DefaultClassResolver())) @AT@ 1779 @LENGTH@ 209
---------MOV ClassInstanceCreation@@DefaultTypeConverter[new DefaultPackageScanClassResolver(), new ReflectionInjector(), new DefaultFactoryFinderResolver().resolveDefaultFactoryFinder(new DefaultClassResolver())] @TO@ Assignment@@converter=new DefaultTypeConverter(new DefaultPackageScanClassResolver(),new ReflectionInjector(),new DefaultFactoryFinderResolver().resolveDefaultFactoryFinder(new DefaultClassResolver())) @AT@ 1648 @LENGTH@ 193
---------INS SimpleName@@converter @TO@ Assignment@@converter=new DefaultTypeConverter(new DefaultPackageScanClassResolver(),new ReflectionInjector(),new DefaultFactoryFinderResolver().resolveDefaultFactoryFinder(new DefaultClassResolver())) @AT@ 1779 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@converter=new DefaultTypeConverter(new DefaultPackageScanClassResolver(),new ReflectionInjector(),new DefaultFactoryFinderResolver().resolveDefaultFactoryFinder(new DefaultClassResolver())) @AT@ 1788 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:ServiceHelper.startService(converter) @TO@ MethodDeclaration@@public, void, MethodName:init, Exception,  @AT@ 1998 @LENGTH@ 38
------INS MethodInvocation@@ServiceHelper.startService(converter) @TO@ ExpressionStatement@@MethodInvocation:ServiceHelper.startService(converter) @AT@ 1998 @LENGTH@ 37
---------INS SimpleName@@Name:ServiceHelper @TO@ MethodInvocation@@ServiceHelper.startService(converter) @AT@ 1998 @LENGTH@ 13
---------INS SimpleName@@MethodName:startService:[converter] @TO@ MethodInvocation@@ServiceHelper.startService(converter) @AT@ 2012 @LENGTH@ 23
------------INS SimpleName@@converter @TO@ SimpleName@@MethodName:startService:[converter] @AT@ 2025 @LENGTH@ 9


UPD IfStatement@@if (headerFilterStrategy != null && !headerFilterStrategy.applyFilterToCamelHeaders(headerName,headerValue,exchange)) {  if (isRecipientHeader(headerName)) {    continue;  }  if (headerName.equalsIgnoreCase(configuration.getAlternativeBodyHeader())) {    continue;  }  if (ObjectConverter.isCollection(headerValue)) {    Iterator iter=ObjectHelper.createIterator(headerValue);    while (iter.hasNext()) {      Object value=iter.next();      mimeMessage.addHeader(headerName,asString(exchange,value));    }  } else {    mimeMessage.setHeader(headerName,asString(exchange,headerValue));  }} @TO@ if (headerFilterStrategy != null && !headerFilterStrategy.applyFilterToCamelHeaders(headerName,headerValue,exchange)) {  if (headerName.equalsIgnoreCase("subject")) {    mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange));    continue;  }  if (isRecipientHeader(headerName)) {    continue;  }  if (headerName.equalsIgnoreCase(configuration.getAlternativeBodyHeader())) {    continue;  }  if (ObjectConverter.isCollection(headerValue)) {    Iterator iter=ObjectHelper.createIterator(headerValue);    while (iter.hasNext()) {      Object value=iter.next();      mimeMessage.addHeader(headerName,asString(exchange,value));    }  } else {    mimeMessage.setHeader(headerName,asString(exchange,headerValue));  }} @AT@ 14330 @LENGTH@ 1203
---UPD Block@@ThenBody:{  if (isRecipientHeader(headerName)) {    continue;  }  if (headerName.equalsIgnoreCase(configuration.getAlternativeBodyHeader())) {    continue;  }  if (ObjectConverter.isCollection(headerValue)) {    Iterator iter=ObjectHelper.createIterator(headerValue);    while (iter.hasNext()) {      Object value=iter.next();      mimeMessage.addHeader(headerName,asString(exchange,value));    }  } else {    mimeMessage.setHeader(headerName,asString(exchange,headerValue));  }} @TO@ ThenBody:{  if (headerName.equalsIgnoreCase("subject")) {    mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange));    continue;  }  if (isRecipientHeader(headerName)) {    continue;  }  if (headerName.equalsIgnoreCase(configuration.getAlternativeBodyHeader())) {    continue;  }  if (ObjectConverter.isCollection(headerValue)) {    Iterator iter=ObjectHelper.createIterator(headerValue);    while (iter.hasNext()) {      Object value=iter.next();      mimeMessage.addHeader(headerName,asString(exchange,value));    }  } else {    mimeMessage.setHeader(headerName,asString(exchange,headerValue));  }} @AT@ 14474 @LENGTH@ 1059
------INS IfStatement@@if (headerName.equalsIgnoreCase("subject")) {  mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange));  continue;} @TO@ Block@@ThenBody:{  if (isRecipientHeader(headerName)) {    continue;  }  if (headerName.equalsIgnoreCase(configuration.getAlternativeBodyHeader())) {    continue;  }  if (ObjectConverter.isCollection(headerValue)) {    Iterator iter=ObjectHelper.createIterator(headerValue);    while (iter.hasNext()) {      Object value=iter.next();      mimeMessage.addHeader(headerName,asString(exchange,value));    }  } else {    mimeMessage.setHeader(headerName,asString(exchange,headerValue));  }} @AT@ 14571 @LENGTH@ 220
---------INS MethodInvocation@@headerName.equalsIgnoreCase("subject") @TO@ IfStatement@@if (headerName.equalsIgnoreCase("subject")) {  mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange));  continue;} @AT@ 14575 @LENGTH@ 38
------------INS SimpleName@@Name:headerName @TO@ MethodInvocation@@headerName.equalsIgnoreCase("subject") @AT@ 14575 @LENGTH@ 10
------------INS SimpleName@@MethodName:equalsIgnoreCase:["subject"] @TO@ MethodInvocation@@headerName.equalsIgnoreCase("subject") @AT@ 14586 @LENGTH@ 27
---------------INS StringLiteral@@"subject" @TO@ SimpleName@@MethodName:equalsIgnoreCase:["subject"] @AT@ 14603 @LENGTH@ 9
---------INS Block@@ThenBody:{  mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange));  continue;} @TO@ IfStatement@@if (headerName.equalsIgnoreCase("subject")) {  mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange));  continue;} @AT@ 14615 @LENGTH@ 176
------------INS ExpressionStatement@@MethodInvocation:mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange)) @TO@ Block@@ThenBody:{  mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange));  continue;} @AT@ 14641 @LENGTH@ 94
---------------INS MethodInvocation@@mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange)) @TO@ ExpressionStatement@@MethodInvocation:mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange)) @AT@ 14641 @LENGTH@ 93
------------------INS SimpleName@@Name:mimeMessage @TO@ MethodInvocation@@mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange)) @AT@ 14641 @LENGTH@ 11
------------------INS SimpleName@@MethodName:setSubject:[asString(exchange,headerValue), IOConverter.getCharsetName(exchange)] @TO@ MethodInvocation@@mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange)) @AT@ 14653 @LENGTH@ 81
---------------------INS MethodInvocation@@asString(exchange,headerValue) @TO@ SimpleName@@MethodName:setSubject:[asString(exchange,headerValue), IOConverter.getCharsetName(exchange)] @AT@ 14664 @LENGTH@ 31
------------------------INS SimpleName@@MethodName:asString:[exchange, headerValue] @TO@ MethodInvocation@@asString(exchange,headerValue) @AT@ 14664 @LENGTH@ 31
---------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:asString:[exchange, headerValue] @AT@ 14673 @LENGTH@ 8
---------------------------INS SimpleName@@headerValue @TO@ SimpleName@@MethodName:asString:[exchange, headerValue] @AT@ 14683 @LENGTH@ 11
---------------------INS MethodInvocation@@IOConverter.getCharsetName(exchange) @TO@ SimpleName@@MethodName:setSubject:[asString(exchange,headerValue), IOConverter.getCharsetName(exchange)] @AT@ 14697 @LENGTH@ 36
------------------------INS SimpleName@@Name:IOConverter @TO@ MethodInvocation@@IOConverter.getCharsetName(exchange) @AT@ 14697 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:getCharsetName:[exchange] @TO@ MethodInvocation@@IOConverter.getCharsetName(exchange) @AT@ 14709 @LENGTH@ 24
---------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getCharsetName:[exchange] @AT@ 14724 @LENGTH@ 8
------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  mimeMessage.setSubject(asString(exchange,headerValue),IOConverter.getCharsetName(exchange));  continue;} @AT@ 14760 @LENGTH@ 9


UPD VariableDeclarationStatement@@String response=template.extractFutureBody(future,String.class); @TO@ String response=(String)template.extractFutureBody(future,String.class); @AT@ 2489 @LENGTH@ 67
---UPD VariableDeclarationFragment@@response=template.extractFutureBody(future,String.class) @TO@ response=(String)template.extractFutureBody(future,String.class) @AT@ 2496 @LENGTH@ 59
------INS CastExpression@@(String)template.extractFutureBody(future,String.class) @TO@ VariableDeclarationFragment@@response=template.extractFutureBody(future,String.class) @AT@ 2543 @LENGTH@ 56
---------MOV MethodInvocation@@template.extractFutureBody(future,String.class) @TO@ CastExpression@@(String)template.extractFutureBody(future,String.class) @AT@ 2507 @LENGTH@ 48
---------INS SimpleType@@String @TO@ CastExpression@@(String)template.extractFutureBody(future,String.class) @AT@ 2544 @LENGTH@ 6


UPD VariableDeclarationStatement@@InputStream out=conv.toInputStrean(source); @TO@ InputStream out=conv.toInputStream(source); @AT@ 13349 @LENGTH@ 45
---UPD VariableDeclarationFragment@@out=conv.toInputStrean(source) @TO@ out=conv.toInputStream(source) @AT@ 13361 @LENGTH@ 32
------UPD MethodInvocation@@conv.toInputStrean(source) @TO@ conv.toInputStream(source) @AT@ 13367 @LENGTH@ 26
---------UPD SimpleName@@MethodName:toInputStrean:[source] @TO@ MethodName:toInputStream:[source] @AT@ 13372 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:from("activemq:queue:batch").to(callExecuteOnBean("myBean1")).resequencer(header("seqnum")).batch(new BatchResequencerConfig(100,2000L)).to(callExecuteOnBean("myBean2")).to("activemq:queue:stop") @TO@ MethodInvocation:from("activemq:queue:batch").to(callExecuteOnBean("myBean1")).resequence(header("seqnum")).batch(new BatchResequencerConfig(100,2000L)).to(callExecuteOnBean("myBean2")).to("activemq:queue:stop") @AT@ 4387 @LENGTH@ 302
---UPD MethodInvocation@@from("activemq:queue:batch").to(callExecuteOnBean("myBean1")).resequencer(header("seqnum")).batch(new BatchResequencerConfig(100,2000L)).to(callExecuteOnBean("myBean2")).to("activemq:queue:stop") @TO@ from("activemq:queue:batch").to(callExecuteOnBean("myBean1")).resequence(header("seqnum")).batch(new BatchResequencerConfig(100,2000L)).to(callExecuteOnBean("myBean2")).to("activemq:queue:stop") @AT@ 4387 @LENGTH@ 301
------UPD MethodInvocation@@MethodName:resequencer:[header("seqnum")] @TO@ MethodName:resequence:[header("seqnum")] @AT@ 4387 @LENGTH@ 133


UPD VariableDeclarationStatement@@Comparator<File> c=new CompositeFileComparator((Comparator[])null); @TO@ Comparator<File> c=new CompositeFileComparator((Comparator<File>[])null); @AT@ 3545 @LENGTH@ 69
---UPD VariableDeclarationFragment@@c=new CompositeFileComparator((Comparator[])null) @TO@ c=new CompositeFileComparator((Comparator<File>[])null) @AT@ 3562 @LENGTH@ 51
------UPD ClassInstanceCreation@@CompositeFileComparator[(Comparator[])null] @TO@ CompositeFileComparator[(Comparator<File>[])null] @AT@ 3566 @LENGTH@ 47
---------UPD CastExpression@@(Comparator[])null @TO@ (Comparator<File>[])null @AT@ 3594 @LENGTH@ 18
------------UPD ArrayType@@Comparator[] @TO@ Comparator<File>[] @AT@ 3595 @LENGTH@ 12
---------------DEL SimpleType@@Comparator @AT@ 3595 @LENGTH@ 10
---------------INS ParameterizedType@@Comparator<File> @TO@ ArrayType@@Comparator[] @AT@ 3613 @LENGTH@ 16
------------------INS SimpleType@@Comparator @TO@ ParameterizedType@@Comparator<File> @AT@ 3613 @LENGTH@ 10
------------------INS SimpleType@@File @TO@ ParameterizedType@@Comparator<File> @AT@ 3624 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("Hello World",IOConverter.toString(out)) @TO@ MethodInvocation:assertEquals("Hello World",IOConverter.toString(out,null)) @AT@ 3045 @LENGTH@ 55
---UPD MethodInvocation@@assertEquals("Hello World",IOConverter.toString(out)) @TO@ assertEquals("Hello World",IOConverter.toString(out,null)) @AT@ 3045 @LENGTH@ 54
------UPD SimpleName@@MethodName:assertEquals:["Hello World", IOConverter.toString(out)] @TO@ MethodName:assertEquals:["Hello World", IOConverter.toString(out,null)] @AT@ 3045 @LENGTH@ 54
---------UPD MethodInvocation@@IOConverter.toString(out) @TO@ IOConverter.toString(out,null) @AT@ 3073 @LENGTH@ 25
------------UPD SimpleName@@MethodName:toString:[out] @TO@ MethodName:toString:[out, null] @AT@ 3085 @LENGTH@ 13
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toString:[out] @AT@ 3155 @LENGTH@ 4


UPD ForStatement@@for (int i=offset; i < end; ++i) {  if (buffer[i] == 0) {    break;  }  result.append((char)buffer[i]);} @TO@ for (int i=offset; i < end; ++i) {  byte b=buffer[i];  if (b == 0) {    break;  }  result.append((char)(b & 0xFF));} @AT@ 3478 @LENGTH@ 180
---DEL IfStatement@@if (buffer[i] == 0) {  break;} @AT@ 3527 @LENGTH@ 75
------DEL InfixExpression@@buffer[i] == 0 @AT@ 3531 @LENGTH@ 14
---------DEL ArrayAccess@@buffer[i] @AT@ 3531 @LENGTH@ 9
---INS VariableDeclarationStatement@@byte b=buffer[i]; @TO@ ForStatement@@for (int i=offset; i < end; ++i) {  if (buffer[i] == 0) {    break;  }  result.append((char)buffer[i]);} @AT@ 3527 @LENGTH@ 19
------INS PrimitiveType@@byte @TO@ VariableDeclarationStatement@@byte b=buffer[i]; @AT@ 3527 @LENGTH@ 4
------INS VariableDeclarationFragment@@b=buffer[i] @TO@ VariableDeclarationStatement@@byte b=buffer[i]; @AT@ 3532 @LENGTH@ 13
---------INS SimpleName@@b @TO@ VariableDeclarationFragment@@b=buffer[i] @AT@ 3532 @LENGTH@ 1
---------INS ArrayAccess@@buffer[i] @TO@ VariableDeclarationFragment@@b=buffer[i] @AT@ 3536 @LENGTH@ 9
------------MOV SimpleName@@buffer @TO@ ArrayAccess@@buffer[i] @AT@ 3531 @LENGTH@ 6
------------MOV SimpleName@@i @TO@ ArrayAccess@@buffer[i] @AT@ 3538 @LENGTH@ 1
---INS IfStatement@@if (b == 0) {  break;} @TO@ ForStatement@@for (int i=offset; i < end; ++i) {  if (buffer[i] == 0) {    break;  }  result.append((char)buffer[i]);} @AT@ 3559 @LENGTH@ 67
------MOV Block@@ThenBody:{  break;} @TO@ IfStatement@@if (b == 0) {  break;} @AT@ 3547 @LENGTH@ 55
------INS InfixExpression@@b == 0 @TO@ IfStatement@@if (b == 0) {  break;} @AT@ 3563 @LENGTH@ 6
---------MOV Operator@@== @TO@ InfixExpression@@b == 0 @AT@ 3540 @LENGTH@ 2
---------MOV NumberLiteral@@0 @TO@ InfixExpression@@b == 0 @AT@ 3544 @LENGTH@ 1
---------INS SimpleName@@b @TO@ InfixExpression@@b == 0 @AT@ 3563 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:result.append((char)buffer[i]) @TO@ MethodInvocation:result.append((char)(b & 0xFF)) @AT@ 3616 @LENGTH@ 32
------UPD MethodInvocation@@result.append((char)buffer[i]) @TO@ result.append((char)(b & 0xFF)) @AT@ 3616 @LENGTH@ 31
---------UPD SimpleName@@MethodName:append:[(char)buffer[i]] @TO@ MethodName:append:[(char)(b & 0xFF)] @AT@ 3623 @LENGTH@ 24
------------UPD CastExpression@@(char)buffer[i] @TO@ (char)(b & 0xFF) @AT@ 3630 @LENGTH@ 16
---------------DEL ArrayAccess@@buffer[i] @AT@ 3637 @LENGTH@ 9
------------------DEL SimpleName@@buffer @AT@ 3637 @LENGTH@ 6
------------------DEL SimpleName@@i @AT@ 3644 @LENGTH@ 1
---------------INS ParenthesizedExpression@@(b & 0xFF) @TO@ CastExpression@@(char)buffer[i] @AT@ 3660 @LENGTH@ 10
------------------INS InfixExpression@@b & 0xFF @TO@ ParenthesizedExpression@@(b & 0xFF) @AT@ 3661 @LENGTH@ 8
---------------------INS SimpleName@@b @TO@ InfixExpression@@b & 0xFF @AT@ 3661 @LENGTH@ 1
---------------------INS Operator@@& @TO@ InfixExpression@@b & 0xFF @AT@ 3662 @LENGTH@ 1
---------------------INS NumberLiteral@@0xFF @TO@ InfixExpression@@b & 0xFF @AT@ 3665 @LENGTH@ 4


UPD MethodDeclaration@@public, voidMethodName:DefaultMutableFile, File file, NotifiableFileMonitorService fileMonitorService, FilenameResolver filenameResolver,  @TO@ public, voidMethodName:DefaultMutableFile, File file, NotifiableFileMonitorService fileMonitorService, ManagedMessageRenderer managedMessageRenderer,  @AT@ 984 @LENGTH@ 569
---UPD SingleVariableDeclaration@@FilenameResolver filenameResolver @TO@ ManagedMessageRenderer managedMessageRenderer @AT@ 1070 @LENGTH@ 33
------UPD SimpleType@@FilenameResolver @TO@ ManagedMessageRenderer @AT@ 1070 @LENGTH@ 16
------UPD SimpleName@@filenameResolver @TO@ managedMessageRenderer @AT@ 1087 @LENGTH@ 16
---UPD ExpressionStatement@@MethodInvocation:Assert.notNull(filenameResolver,"Filename resolver required") @TO@ MethodInvocation:Assert.notNull(managedMessageRenderer,"Message renderer required") @AT@ 1150 @LENGTH@ 63
------UPD MethodInvocation@@Assert.notNull(filenameResolver,"Filename resolver required") @TO@ Assert.notNull(managedMessageRenderer,"Message renderer required") @AT@ 1150 @LENGTH@ 62
---------UPD SimpleName@@MethodName:notNull:[filenameResolver, "Filename resolver required"] @TO@ MethodName:notNull:[managedMessageRenderer, "Message renderer required"] @AT@ 1157 @LENGTH@ 55
------------UPD SimpleName@@filenameResolver @TO@ managedMessageRenderer @AT@ 1165 @LENGTH@ 16
------------UPD StringLiteral@@"Filename resolver required" @TO@ "Message renderer required" @AT@ 1183 @LENGTH@ 28
---UPD ExpressionStatement@@Assignment:this.managedMessageRenderer=new ManagedMessageRenderer(filenameResolver,file) @TO@ Assignment:this.managedMessageRenderer=managedMessageRenderer @AT@ 1398 @LENGTH@ 81
------UPD Assignment@@this.managedMessageRenderer=new ManagedMessageRenderer(filenameResolver,file) @TO@ this.managedMessageRenderer=managedMessageRenderer @AT@ 1398 @LENGTH@ 80
---------INS SimpleName@@managedMessageRenderer @TO@ Assignment@@this.managedMessageRenderer=new ManagedMessageRenderer(filenameResolver,file) @AT@ 1386 @LENGTH@ 22
---------DEL ClassInstanceCreation@@ManagedMessageRenderer[filenameResolver, file] @AT@ 1428 @LENGTH@ 50
------------DEL New@@new @AT@ 1428 @LENGTH@ 3
------------DEL SimpleType@@ManagedMessageRenderer @AT@ 1432 @LENGTH@ 22
------------DEL SimpleName@@filenameResolver @AT@ 1455 @LENGTH@ 16
------------DEL SimpleName@@file @AT@ 1473 @LENGTH@ 4


UPD MethodDeclaration@@public, static, List<Object[]>, MethodName:data,  @TO@ public, static, List<Object[]>, MethodName:data, Exception,  @AT@ 2628 @LENGTH@ 424
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, static, List<Object[]>, MethodName:data,  @AT@ 2672 @LENGTH@ 9
---UPD EnhancedForStatement@@for (Resource resource : resources) {  list.add(new Object[]{resource});} @TO@ for (Resource resource : resources) {  if (resource.getFile().getName().contains("WrongSchema")) {    continue;  }  list.add(new Object[]{resource});} @AT@ 2955 @LENGTH@ 79
------INS IfStatement@@if (resource.getFile().getName().contains("WrongSchema")) {  continue;} @TO@ EnhancedForStatement@@for (Resource resource : resources) {  list.add(new Object[]{resource});} @AT@ 3014 @LENGTH@ 78
---------INS MethodInvocation@@resource.getFile().getName().contains("WrongSchema") @TO@ IfStatement@@if (resource.getFile().getName().contains("WrongSchema")) {  continue;} @AT@ 3018 @LENGTH@ 52
------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@resource.getFile().getName().contains("WrongSchema") @AT@ 3018 @LENGTH@ 28
------------INS MethodInvocation@@MethodName:getFile:[] @TO@ MethodInvocation@@resource.getFile().getName().contains("WrongSchema") @AT@ 3018 @LENGTH@ 18
------------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.getFile().getName().contains("WrongSchema") @AT@ 3018 @LENGTH@ 8
------------INS SimpleName@@MethodName:contains:["WrongSchema"] @TO@ MethodInvocation@@resource.getFile().getName().contains("WrongSchema") @AT@ 3047 @LENGTH@ 23
---------------INS StringLiteral@@"WrongSchema" @TO@ SimpleName@@MethodName:contains:["WrongSchema"] @AT@ 3056 @LENGTH@ 13
---------INS Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (resource.getFile().getName().contains("WrongSchema")) {  continue;} @AT@ 3072 @LENGTH@ 20
------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 3078 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertNull(comparator.sort((List)null)) @TO@ MethodInvocation:assertNull(comparator.sort((List<File>)null)) @AT@ 4190 @LENGTH@ 40
---UPD MethodInvocation@@assertNull(comparator.sort((List)null)) @TO@ assertNull(comparator.sort((List<File>)null)) @AT@ 4190 @LENGTH@ 39
------UPD SimpleName@@MethodName:assertNull:[comparator.sort((List)null)] @TO@ MethodName:assertNull:[comparator.sort((List<File>)null)] @AT@ 4190 @LENGTH@ 39
---------UPD MethodInvocation@@comparator.sort((List)null) @TO@ comparator.sort((List<File>)null) @AT@ 4201 @LENGTH@ 27
------------UPD SimpleName@@MethodName:sort:[(List)null] @TO@ MethodName:sort:[(List<File>)null] @AT@ 4212 @LENGTH@ 16
---------------UPD CastExpression@@(List)null @TO@ (List<File>)null @AT@ 4217 @LENGTH@ 10
------------------DEL SimpleType@@List @AT@ 4218 @LENGTH@ 4
------------------INS ParameterizedType@@List<File> @TO@ CastExpression@@(List)null @AT@ 4224 @LENGTH@ 10
---------------------INS SimpleType@@List @TO@ ParameterizedType@@List<File> @AT@ 4224 @LENGTH@ 4
---------------------INS SimpleType@@File @TO@ ParameterizedType@@List<File> @AT@ 4229 @LENGTH@ 4


UPD ReturnStatement@@ClassInstanceCreation:new ProcessorExchangePair(getProcessors().iterator().next(),newExchange) @TO@ MethodInvocation:createProcessorExchangePair(getProcessors().iterator().next(),newExchange) @AT@ 4092 @LENGTH@ 81
---INS MethodInvocation@@createProcessorExchangePair(getProcessors().iterator().next(),newExchange) @TO@ ReturnStatement@@ClassInstanceCreation:new ProcessorExchangePair(getProcessors().iterator().next(),newExchange) @AT@ 4099 @LENGTH@ 75
------INS SimpleName@@MethodName:createProcessorExchangePair:[getProcessors().iterator().next(), newExchange] @TO@ MethodInvocation@@createProcessorExchangePair(getProcessors().iterator().next(),newExchange) @AT@ 4099 @LENGTH@ 75
---------INS MethodInvocation@@getProcessors().iterator().next() @TO@ SimpleName@@MethodName:createProcessorExchangePair:[getProcessors().iterator().next(), newExchange] @AT@ 4127 @LENGTH@ 33
------------MOV MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@getProcessors().iterator().next() @AT@ 4125 @LENGTH@ 26
------------MOV MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@getProcessors().iterator().next() @AT@ 4125 @LENGTH@ 26
------------MOV MethodInvocation@@MethodName:getProcessors:[] @TO@ MethodInvocation@@getProcessors().iterator().next() @AT@ 4125 @LENGTH@ 15
------------MOV MethodInvocation@@MethodName:getProcessors:[] @TO@ MethodInvocation@@getProcessors().iterator().next() @AT@ 4125 @LENGTH@ 15
------------MOV SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@getProcessors().iterator().next() @AT@ 4152 @LENGTH@ 6
---------INS SimpleName@@newExchange @TO@ SimpleName@@MethodName:createProcessorExchangePair:[getProcessors().iterator().next(), newExchange] @AT@ 4162 @LENGTH@ 11
---DEL ClassInstanceCreation@@ProcessorExchangePair[getProcessors().iterator().next(), newExchange] @AT@ 4099 @LENGTH@ 73
------DEL New@@new @AT@ 4099 @LENGTH@ 3
------DEL SimpleType@@ProcessorExchangePair @AT@ 4103 @LENGTH@ 21
------DEL MethodInvocation@@getProcessors().iterator().next() @AT@ 4125 @LENGTH@ 33
------DEL SimpleName@@newExchange @AT@ 4160 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:answer.setAbsolute(file.isAbsolute()) @TO@ MethodInvocation:answer.setAbsolute(FileUtil.isAbsolute(file)) @AT@ 3841 @LENGTH@ 38
---UPD MethodInvocation@@answer.setAbsolute(file.isAbsolute()) @TO@ answer.setAbsolute(FileUtil.isAbsolute(file)) @AT@ 3841 @LENGTH@ 37
------UPD SimpleName@@MethodName:setAbsolute:[file.isAbsolute()] @TO@ MethodName:setAbsolute:[FileUtil.isAbsolute(file)] @AT@ 3848 @LENGTH@ 30
---------UPD MethodInvocation@@file.isAbsolute() @TO@ FileUtil.isAbsolute(file) @AT@ 3860 @LENGTH@ 17
------------UPD SimpleName@@Name:file @TO@ Name:FileUtil @AT@ 3860 @LENGTH@ 4
------------UPD SimpleName@@MethodName:isAbsolute:[] @TO@ MethodName:isAbsolute:[file] @AT@ 3865 @LENGTH@ 12
---------------INS SimpleName@@file @TO@ SimpleName@@MethodName:isAbsolute:[] @AT@ 4294 @LENGTH@ 4


INS TryStatement@@try {  super.setUp();} catch (Exception e) {  NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e);  if (nsae != null) {    canTest=false;    String name=System.getProperty("os.name");    System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());  } else {    throw e;  }} @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 3347 @LENGTH@ 634
---MOV ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ TryStatement@@try {  super.setUp();} catch (Exception e) {  NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e);  if (nsae != null) {    canTest=false;    String name=System.getProperty("os.name");    System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());  } else {    throw e;  }} @AT@ 3265 @LENGTH@ 14
---INS CatchClause@@catch (Exception e) {  NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e);  if (nsae != null) {    canTest=false;    String name=System.getProperty("os.name");    System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());  } else {    throw e;  }} @TO@ TryStatement@@try {  super.setUp();} catch (Exception e) {  NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e);  if (nsae != null) {    canTest=false;    String name=System.getProperty("os.name");    System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());  } else {    throw e;  }} @AT@ 3390 @LENGTH@ 591
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e);  if (nsae != null) {    canTest=false;    String name=System.getProperty("os.name");    System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());  } else {    throw e;  }} @AT@ 3397 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3397 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3407 @LENGTH@ 1
------INS VariableDeclarationStatement@@NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e); @TO@ CatchClause@@catch (Exception e) {  NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e);  if (nsae != null) {    canTest=false;    String name=System.getProperty("os.name");    System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());  } else {    throw e;  }} @AT@ 3476 @LENGTH@ 93
---------INS SimpleType@@NoSuchAlgorithmException @TO@ VariableDeclarationStatement@@NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e); @AT@ 3476 @LENGTH@ 24
---------INS VariableDeclarationFragment@@nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e) @TO@ VariableDeclarationStatement@@NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e); @AT@ 3501 @LENGTH@ 67
------------INS SimpleName@@nsae @TO@ VariableDeclarationFragment@@nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e) @AT@ 3501 @LENGTH@ 4
------------INS MethodInvocation@@ObjectHelper.getException(NoSuchAlgorithmException.class,e) @TO@ VariableDeclarationFragment@@nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e) @AT@ 3508 @LENGTH@ 60
---------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.getException(NoSuchAlgorithmException.class,e) @AT@ 3508 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getException:[NoSuchAlgorithmException.class, e] @TO@ MethodInvocation@@ObjectHelper.getException(NoSuchAlgorithmException.class,e) @AT@ 3521 @LENGTH@ 47
------------------INS TypeLiteral@@NoSuchAlgorithmException.class @TO@ SimpleName@@MethodName:getException:[NoSuchAlgorithmException.class, e] @AT@ 3534 @LENGTH@ 30
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:getException:[NoSuchAlgorithmException.class, e] @AT@ 3566 @LENGTH@ 1
------INS IfStatement@@if (nsae != null) {  canTest=false;  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} else {  throw e;} @TO@ CatchClause@@catch (Exception e) {  NoSuchAlgorithmException nsae=ObjectHelper.getException(NoSuchAlgorithmException.class,e);  if (nsae != null) {    canTest=false;    String name=System.getProperty("os.name");    System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());  } else {    throw e;  }} @AT@ 3582 @LENGTH@ 389
---------INS InfixExpression@@nsae != null @TO@ IfStatement@@if (nsae != null) {  canTest=false;  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} else {  throw e;} @AT@ 3586 @LENGTH@ 12
------------INS SimpleName@@nsae @TO@ InfixExpression@@nsae != null @AT@ 3586 @LENGTH@ 4
------------INS Operator@@!= @TO@ InfixExpression@@nsae != null @AT@ 3590 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@nsae != null @AT@ 3594 @LENGTH@ 4
---------INS Block@@ThenBody:{  canTest=false;  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} @TO@ IfStatement@@if (nsae != null) {  canTest=false;  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} else {  throw e;} @AT@ 3600 @LENGTH@ 254
------------INS ExpressionStatement@@Assignment:canTest=false @TO@ Block@@ThenBody:{  canTest=false;  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} @AT@ 3618 @LENGTH@ 16
---------------INS Assignment@@canTest=false @TO@ ExpressionStatement@@Assignment:canTest=false @AT@ 3618 @LENGTH@ 15
------------------INS SimpleName@@canTest @TO@ Assignment@@canTest=false @AT@ 3618 @LENGTH@ 7
------------------INS Operator@@= @TO@ Assignment@@canTest=false @AT@ 3625 @LENGTH@ 1
------------------INS BooleanLiteral@@false @TO@ Assignment@@canTest=false @AT@ 3628 @LENGTH@ 5
------------INS VariableDeclarationStatement@@String name=System.getProperty("os.name"); @TO@ Block@@ThenBody:{  canTest=false;  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} @AT@ 3651 @LENGTH@ 44
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String name=System.getProperty("os.name"); @AT@ 3651 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@name=System.getProperty("os.name") @TO@ VariableDeclarationStatement@@String name=System.getProperty("os.name"); @AT@ 3658 @LENGTH@ 36
------------------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=System.getProperty("os.name") @AT@ 3658 @LENGTH@ 4
------------------INS MethodInvocation@@System.getProperty("os.name") @TO@ VariableDeclarationFragment@@name=System.getProperty("os.name") @AT@ 3665 @LENGTH@ 29
---------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("os.name") @AT@ 3665 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getProperty:["os.name"] @TO@ MethodInvocation@@System.getProperty("os.name") @AT@ 3672 @LENGTH@ 22
------------------------INS StringLiteral@@"os.name" @TO@ SimpleName@@MethodName:getProperty:["os.name"] @AT@ 3684 @LENGTH@ 9
------------INS ExpressionStatement@@MethodInvocation:System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage()) @TO@ Block@@ThenBody:{  canTest=false;  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} @AT@ 3712 @LENGTH@ 128
---------------INS MethodInvocation@@System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage()) @AT@ 3712 @LENGTH@ 127
------------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage()) @AT@ 3712 @LENGTH@ 10
------------------INS SimpleName@@MethodName:println:["SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage()] @TO@ MethodInvocation@@System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage()) @AT@ 3723 @LENGTH@ 116
---------------------INS InfixExpression@@"SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage() @TO@ SimpleName@@MethodName:println:["SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage()] @AT@ 3731 @LENGTH@ 107
------------------------INS StringLiteral@@"SunX509 is not avail on this platform [" @TO@ InfixExpression@@"SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage() @AT@ 3731 @LENGTH@ 41
------------------------INS Operator@@+ @TO@ InfixExpression@@"SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage() @AT@ 3772 @LENGTH@ 1
------------------------INS SimpleName@@name @TO@ InfixExpression@@"SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage() @AT@ 3775 @LENGTH@ 4
------------------------INS StringLiteral@@"] Testing is skipped! Real cause: " @TO@ InfixExpression@@"SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage() @AT@ 3782 @LENGTH@ 36
------------------------INS MethodInvocation@@nsae.getMessage() @TO@ InfixExpression@@"SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage() @AT@ 3821 @LENGTH@ 17
---------------------------INS SimpleName@@Name:nsae @TO@ MethodInvocation@@nsae.getMessage() @AT@ 3821 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@nsae.getMessage() @AT@ 3826 @LENGTH@ 12
---------INS Block@@ElseBody:{  throw e;} @TO@ IfStatement@@if (nsae != null) {  canTest=false;  String name=System.getProperty("os.name");  System.out.println("SunX509 is not avail on this platform [" + name + "] Testing is skipped! Real cause: "+ nsae.getMessage());} else {  throw e;} @AT@ 3860 @LENGTH@ 111
------------INS ThrowStatement@@SimpleName:e @TO@ Block@@ElseBody:{  throw e;} @AT@ 3949 @LENGTH@ 8
---------------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 3955 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("file:/" + base).convertBodyTo(String.class).to("mock:report") @TO@ MethodInvocation:from("file:" + base).convertBodyTo(String.class).to("mock:report") @AT@ 2025 @LENGTH@ 68
---UPD MethodInvocation@@from("file:/" + base).convertBodyTo(String.class).to("mock:report") @TO@ from("file:" + base).convertBodyTo(String.class).to("mock:report") @AT@ 2025 @LENGTH@ 67
------UPD MethodInvocation@@MethodName:from:["file:/" + base] @TO@ MethodName:from:["file:" + base] @AT@ 2025 @LENGTH@ 21
---------UPD InfixExpression@@"file:/" + base @TO@ "file:" + base @AT@ 2030 @LENGTH@ 15
------------UPD StringLiteral@@"file:/" @TO@ "file:" @AT@ 2030 @LENGTH@ 8


DEL MethodDeclaration@@private, void, MethodName:clean, IOException,  @AT@ 1551 @LENGTH@ 315
---DEL Modifier@@private @AT@ 1551 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 1559 @LENGTH@ 4
---DEL SimpleName@@MethodName:clean @AT@ 1564 @LENGTH@ 5
---DEL SimpleType@@IOException @AT@ 1579 @LENGTH@ 11
---DEL VariableDeclarationStatement@@File[] files={new File("target/repository"),new File("target/repository.xml"),new File("derby.log")}; @AT@ 1601 @LENGTH@ 129
------DEL ArrayType@@File[] @AT@ 1601 @LENGTH@ 6
---------DEL SimpleType@@File @AT@ 1601 @LENGTH@ 4
------DEL VariableDeclarationFragment@@files={new File("target/repository"),new File("target/repository.xml"),new File("derby.log")} @AT@ 1608 @LENGTH@ 121
---------DEL SimpleName@@files @AT@ 1608 @LENGTH@ 5
---------DEL ArrayInitializer@@{new File("target/repository"),new File("target/repository.xml"),new File("derby.log")} @AT@ 1616 @LENGTH@ 113
------------DEL ClassInstanceCreation@@File["target/repository"] @AT@ 1617 @LENGTH@ 29
---------------DEL New@@new @AT@ 1617 @LENGTH@ 3
---------------DEL SimpleType@@File @AT@ 1621 @LENGTH@ 4
---------------DEL StringLiteral@@"target/repository" @AT@ 1626 @LENGTH@ 19
------------DEL ClassInstanceCreation@@File["target/repository.xml"] @AT@ 1648 @LENGTH@ 33
---------------DEL New@@new @AT@ 1648 @LENGTH@ 3
---------------DEL SimpleType@@File @AT@ 1652 @LENGTH@ 4
---------------DEL StringLiteral@@"target/repository.xml" @AT@ 1657 @LENGTH@ 23
------------DEL ClassInstanceCreation@@File["derby.log"] @AT@ 1707 @LENGTH@ 21
---------------DEL New@@new @AT@ 1707 @LENGTH@ 3
---------------DEL SimpleType@@File @AT@ 1711 @LENGTH@ 4
---------------DEL StringLiteral@@"derby.log" @AT@ 1716 @LENGTH@ 11
---DEL EnhancedForStatement@@for (File file : files) {  if (file.exists()) {    FileUtil.delete(file);  }} @AT@ 1739 @LENGTH@ 121
------DEL SingleVariableDeclaration@@File file @AT@ 1744 @LENGTH@ 9
---------DEL SimpleType@@File @AT@ 1744 @LENGTH@ 4
---------DEL SimpleName@@file @AT@ 1749 @LENGTH@ 4
------DEL SimpleName@@files @AT@ 1756 @LENGTH@ 5
------DEL IfStatement@@if (file.exists()) {  FileUtil.delete(file);} @AT@ 1777 @LENGTH@ 73
---------DEL MethodInvocation@@file.exists() @AT@ 1781 @LENGTH@ 13
------------DEL SimpleName@@Name:file @AT@ 1781 @LENGTH@ 4
------------DEL SimpleName@@MethodName:exists:[] @AT@ 1786 @LENGTH@ 8
---------DEL Block@@ThenBody:{  FileUtil.delete(file);} @AT@ 1796 @LENGTH@ 54
------------DEL ExpressionStatement@@MethodInvocation:FileUtil.delete(file) @AT@ 1814 @LENGTH@ 22
---------------DEL MethodInvocation@@FileUtil.delete(file) @AT@ 1814 @LENGTH@ 21
------------------DEL SimpleName@@Name:FileUtil @AT@ 1814 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:delete:[file] @AT@ 1823 @LENGTH@ 12
---------------------DEL SimpleName@@file @AT@ 1830 @LENGTH@ 4


UPD TypeDeclaration@@[@ContextConfiguration(loader=WebApplicationContextLoader.class,locations={"AbstractResourceViewTests-context.xml"}), @RunWith(SpringJUnit4ClassRunner.class), public]HomeViewTests, AbstractResourceViewTests @TO@ [@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations={"AbstractResourceViewTests-context.xml"}), @RunWith(SpringJUnit4ClassRunner.class), public]HomeViewTests, AbstractResourceViewTests @AT@ 1359 @LENGTH@ 1693
---UPD NormalAnnotation@@@ContextConfiguration(loader=WebApplicationContextLoader.class,locations={"AbstractResourceViewTests-context.xml"}) @TO@ @ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations={"AbstractResourceViewTests-context.xml"}) @AT@ 1359 @LENGTH@ 118


UPD IfStatement@@if (contentCache) {synchronized (resource) {    if (buffer == null) {      if (log.isDebugEnabled()) {        log.debug("Reading resource: " + resourceUri + " into the content cache");      }      is=getResourceAsInputStreamWithoutCache();      buffer=IOConverter.toBytes(is);    }  }  if (log.isDebugEnabled()) {    log.debug("Using resource: " + resourceUri + " from the content cache");  }  is=new ByteArrayInputStream(buffer);} @TO@ if (contentCache) {synchronized (resource) {    if (buffer == null) {      if (log.isDebugEnabled()) {        log.debug("Reading resource: " + resourceUri + " into the content cache");      }      is=getResourceAsInputStreamWithoutCache();      buffer=IOConverter.toBytes(is);    }  }  if (log.isDebugEnabled()) {    log.debug("Using resource: " + resourceUri + " from the content cache");  }  return new ByteArrayInputStream(buffer);} @AT@ 3547 @LENGTH@ 640
---UPD Block@@ThenBody:{synchronized (resource) {    if (buffer == null) {      if (log.isDebugEnabled()) {        log.debug("Reading resource: " + resourceUri + " into the content cache");      }      is=getResourceAsInputStreamWithoutCache();      buffer=IOConverter.toBytes(is);    }  }  if (log.isDebugEnabled()) {    log.debug("Using resource: " + resourceUri + " from the content cache");  }  is=new ByteArrayInputStream(buffer);} @TO@ ThenBody:{synchronized (resource) {    if (buffer == null) {      if (log.isDebugEnabled()) {        log.debug("Reading resource: " + resourceUri + " into the content cache");      }      is=getResourceAsInputStreamWithoutCache();      buffer=IOConverter.toBytes(is);    }  }  if (log.isDebugEnabled()) {    log.debug("Using resource: " + resourceUri + " from the content cache");  }  return new ByteArrayInputStream(buffer);} @AT@ 3565 @LENGTH@ 622
------INS ReturnStatement@@ClassInstanceCreation:new ByteArrayInputStream(buffer) @TO@ Block@@ThenBody:{synchronized (resource) {    if (buffer == null) {      if (log.isDebugEnabled()) {        log.debug("Reading resource: " + resourceUri + " into the content cache");      }      is=getResourceAsInputStreamWithoutCache();      buffer=IOConverter.toBytes(is);    }  }  if (log.isDebugEnabled()) {    log.debug("Using resource: " + resourceUri + " from the content cache");  }  is=new ByteArrayInputStream(buffer);} @AT@ 4139 @LENGTH@ 40
---------INS ClassInstanceCreation@@ByteArrayInputStream[buffer] @TO@ ReturnStatement@@ClassInstanceCreation:new ByteArrayInputStream(buffer) @AT@ 4146 @LENGTH@ 32
------------MOV New@@new @TO@ ClassInstanceCreation@@ByteArrayInputStream[buffer] @AT@ 4144 @LENGTH@ 3
------------MOV SimpleType@@ByteArrayInputStream @TO@ ClassInstanceCreation@@ByteArrayInputStream[buffer] @AT@ 4148 @LENGTH@ 20
------------MOV SimpleName@@buffer @TO@ ClassInstanceCreation@@ByteArrayInputStream[buffer] @AT@ 4169 @LENGTH@ 6
------DEL ExpressionStatement@@Assignment:is=new ByteArrayInputStream(buffer) @AT@ 4139 @LENGTH@ 38
---------DEL Assignment@@is=new ByteArrayInputStream(buffer) @AT@ 4139 @LENGTH@ 37
------------DEL SimpleName@@is @AT@ 4139 @LENGTH@ 2
------------DEL Operator@@= @AT@ 4141 @LENGTH@ 1
------------DEL ClassInstanceCreation@@ByteArrayInputStream[buffer] @AT@ 4144 @LENGTH@ 32


UPD VariableDeclarationStatement@@String expected="errorHandler(deadLetterChannel(\"mock://error\"));" + "onException(CamelException.class).maximumRedeliveries(2);" + "from(\"direct:start\").aggregate().header(\"id\").to(\"mock:result\")"; @TO@ String expected="errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));" + "onException(CamelException.class).maximumRedeliveries(2);" + "from(\"direct:start\").aggregate().header(\"id\").to(\"mock:result\")"; @AT@ 2531 @LENGTH@ 233
---UPD VariableDeclarationFragment@@expected="errorHandler(deadLetterChannel(\"mock://error\"));" + "onException(CamelException.class).maximumRedeliveries(2);" + "from(\"direct:start\").aggregate().header(\"id\").to(\"mock:result\")" @TO@ expected="errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));" + "onException(CamelException.class).maximumRedeliveries(2);" + "from(\"direct:start\").aggregate().header(\"id\").to(\"mock:result\")" @AT@ 2538 @LENGTH@ 225
------UPD InfixExpression@@"errorHandler(deadLetterChannel(\"mock://error\"));" + "onException(CamelException.class).maximumRedeliveries(2);" + "from(\"direct:start\").aggregate().header(\"id\").to(\"mock:result\")" @TO@ "errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));" + "onException(CamelException.class).maximumRedeliveries(2);" + "from(\"direct:start\").aggregate().header(\"id\").to(\"mock:result\")" @AT@ 2549 @LENGTH@ 214
---------UPD StringLiteral@@"errorHandler(deadLetterChannel(\"mock://error\"));" @TO@ "errorHandler(deadLetterChannel(\"mock://error\").logStackTrace(true));" @AT@ 2549 @LENGTH@ 52


INS ExpressionStatement@@MethodInvocation:template.start() @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 3250 @LENGTH@ 17
---INS MethodInvocation@@template.start() @TO@ ExpressionStatement@@MethodInvocation:template.start() @AT@ 3250 @LENGTH@ 16
------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.start() @AT@ 3250 @LENGTH@ 8
------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@template.start() @AT@ 3259 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("activemq:queue:stream").to(callExecuteOnBean("myBean1")).resequencer(header("seqnum")).stream().to(callExecuteOnBean("myBean2")).to("activemq:queue:stop") @TO@ MethodInvocation:from("activemq:queue:stream").to(callExecuteOnBean("myBean1")).resequence(header("seqnum")).stream().to(callExecuteOnBean("myBean2")).to("activemq:queue:stop") @AT@ 4723 @LENGTH@ 266
---UPD MethodInvocation@@from("activemq:queue:stream").to(callExecuteOnBean("myBean1")).resequencer(header("seqnum")).stream().to(callExecuteOnBean("myBean2")).to("activemq:queue:stop") @TO@ from("activemq:queue:stream").to(callExecuteOnBean("myBean1")).resequence(header("seqnum")).stream().to(callExecuteOnBean("myBean2")).to("activemq:queue:stop") @AT@ 4723 @LENGTH@ 265
------UPD MethodInvocation@@MethodName:resequencer:[header("seqnum")] @TO@ MethodName:resequence:[header("seqnum")] @AT@ 4723 @LENGTH@ 134


INS ExpressionStatement@@MethodInvocation:mock.setResultWaitTime(20000) @TO@ MethodDeclaration@@public, void, MethodName:testAsyncStress, Exception,  @AT@ 1685 @LENGTH@ 30
---INS MethodInvocation@@mock.setResultWaitTime(20000) @TO@ ExpressionStatement@@MethodInvocation:mock.setResultWaitTime(20000) @AT@ 1685 @LENGTH@ 29
------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.setResultWaitTime(20000) @AT@ 1685 @LENGTH@ 4
------INS SimpleName@@MethodName:setResultWaitTime:[20000] @TO@ MethodInvocation@@mock.setResultWaitTime(20000) @AT@ 1690 @LENGTH@ 24
---------INS NumberLiteral@@20000 @TO@ SimpleName@@MethodName:setResultWaitTime:[20000] @AT@ 1708 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testRoundTripNames,  @TO@ TypeDeclaration@@[public]TarUtilsTest, TestCase @AT@ 4839 @LENGTH@ 320
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRoundTripNames,  @AT@ 4839 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRoundTripNames,  @AT@ 4846 @LENGTH@ 4
---INS SimpleName@@MethodName:testRoundTripNames @TO@ MethodDeclaration@@public, void, MethodName:testRoundTripNames,  @AT@ 4851 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:checkName("") @TO@ MethodDeclaration@@public, void, MethodName:testRoundTripNames,  @AT@ 4881 @LENGTH@ 14
------INS MethodInvocation@@checkName("") @TO@ ExpressionStatement@@MethodInvocation:checkName("") @AT@ 4881 @LENGTH@ 13
---------INS SimpleName@@MethodName:checkName:[""] @TO@ MethodInvocation@@checkName("") @AT@ 4881 @LENGTH@ 13
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:checkName:[""] @AT@ 4891 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:checkName("The quick brown fox\n") @TO@ MethodDeclaration@@public, void, MethodName:testRoundTripNames,  @AT@ 4904 @LENGTH@ 35
------INS MethodInvocation@@checkName("The quick brown fox\n") @TO@ ExpressionStatement@@MethodInvocation:checkName("The quick brown fox\n") @AT@ 4904 @LENGTH@ 34
---------INS SimpleName@@MethodName:checkName:["The quick brown fox\n"] @TO@ MethodInvocation@@checkName("The quick brown fox\n") @AT@ 4904 @LENGTH@ 34
------------INS StringLiteral@@"The quick brown fox\n" @TO@ SimpleName@@MethodName:checkName:["The quick brown fox\n"] @AT@ 4914 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:checkName("\177") @TO@ MethodDeclaration@@public, void, MethodName:testRoundTripNames,  @AT@ 4948 @LENGTH@ 18
------INS MethodInvocation@@checkName("\177") @TO@ ExpressionStatement@@MethodInvocation:checkName("\177") @AT@ 4948 @LENGTH@ 17
---------INS SimpleName@@MethodName:checkName:["\177"] @TO@ MethodInvocation@@checkName("\177") @AT@ 4948 @LENGTH@ 17
------------INS StringLiteral@@"\177" @TO@ SimpleName@@MethodName:checkName:["\177"] @AT@ 4958 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:checkName("0302-0601-3���F06�W220�ZB�LALALA����������CAN��DC���04�060302�MOE.model") @TO@ MethodDeclaration@@public, void, MethodName:testRoundTripNames,  @AT@ 5068 @LENGTH@ 85
------INS MethodInvocation@@checkName("0302-0601-3���F06�W220�ZB�LALALA����������CAN��DC���04�060302�MOE.model") @TO@ ExpressionStatement@@MethodInvocation:checkName("0302-0601-3���F06�W220�ZB�LALALA����������CAN��DC���04�060302�MOE.model") @AT@ 5068 @LENGTH@ 84
---------INS SimpleName@@MethodName:checkName:["0302-0601-3���F06�W220�ZB�LALALA����������CAN��DC���04�060302�MOE.model"] @TO@ MethodInvocation@@checkName("0302-0601-3���F06�W220�ZB�LALALA����������CAN��DC���04�060302�MOE.model") @AT@ 5068 @LENGTH@ 84
------------INS StringLiteral@@"0302-0601-3���F06�W220�ZB�LALALA����������CAN��DC���04�060302�MOE.model" @TO@ SimpleName@@MethodName:checkName:["0302-0601-3���F06�W220�ZB�LALALA����������CAN��DC���04�060302�MOE.model"] @AT@ 5078 @LENGTH@ 73


MOV FieldDeclaration@@protected, volatile, ShutdownRunningTask, [shutdownRunningTask] @TO@ TypeDeclaration@@[public]IBatisPollingConsumer, ScheduledPollConsumer[BatchConsumer, ShutdownAware] @AT@ 3914 @LENGTH@ 59


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Client SSL handler configured and added as an interceptor against the ChannelPipeline") @TO@ MethodInvocation:LOG.debug("Client SSL handler configured and added to the ChannelPipeline") @AT@ 2135 @LENGTH@ 99
---UPD MethodInvocation@@LOG.debug("Client SSL handler configured and added as an interceptor against the ChannelPipeline") @TO@ LOG.debug("Client SSL handler configured and added to the ChannelPipeline") @AT@ 2135 @LENGTH@ 98
------UPD SimpleName@@MethodName:debug:["Client SSL handler configured and added as an interceptor against the ChannelPipeline"] @TO@ MethodName:debug:["Client SSL handler configured and added to the ChannelPipeline"] @AT@ 2139 @LENGTH@ 94
---------UPD StringLiteral@@"Client SSL handler configured and added as an interceptor against the ChannelPipeline" @TO@ "Client SSL handler configured and added to the ChannelPipeline" @AT@ 2145 @LENGTH@ 87


UPD ExpressionStatement@@MethodInvocation:assertEquals("get worng deadletteruri","log:dead",errorHandler.getDeadLetterUri()) @TO@ MethodInvocation:assertEquals("Get wrong deadletteruri","log:dead",errorHandler.getDeadLetterUri()) @AT@ 3637 @LENGTH@ 85
---UPD MethodInvocation@@assertEquals("get worng deadletteruri","log:dead",errorHandler.getDeadLetterUri()) @TO@ assertEquals("Get wrong deadletteruri","log:dead",errorHandler.getDeadLetterUri()) @AT@ 3637 @LENGTH@ 84
------UPD SimpleName@@MethodName:assertEquals:["get worng deadletteruri", "log:dead", errorHandler.getDeadLetterUri()] @TO@ MethodName:assertEquals:["Get wrong deadletteruri", "log:dead", errorHandler.getDeadLetterUri()] @AT@ 3637 @LENGTH@ 84
---------UPD StringLiteral@@"get worng deadletteruri" @TO@ "Get wrong deadletteruri" @AT@ 3650 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:assertTrue("Should be faster than 3000 millis, was: " + delta,delta < 3000) @TO@ MethodInvocation:assertTrue("Should be faster than 4000 millis, was: " + delta,delta < 4000) @AT@ 1754 @LENGTH@ 77
---UPD MethodInvocation@@assertTrue("Should be faster than 3000 millis, was: " + delta,delta < 3000) @TO@ assertTrue("Should be faster than 4000 millis, was: " + delta,delta < 4000) @AT@ 1754 @LENGTH@ 76
------UPD SimpleName@@MethodName:assertTrue:["Should be faster than 3000 millis, was: " + delta, delta < 3000] @TO@ MethodName:assertTrue:["Should be faster than 4000 millis, was: " + delta, delta < 4000] @AT@ 1754 @LENGTH@ 76
---------UPD InfixExpression@@"Should be faster than 3000 millis, was: " + delta @TO@ "Should be faster than 4000 millis, was: " + delta @AT@ 1765 @LENGTH@ 50
------------UPD StringLiteral@@"Should be faster than 3000 millis, was: " @TO@ "Should be faster than 4000 millis, was: " @AT@ 1765 @LENGTH@ 42
---------UPD InfixExpression@@delta < 3000 @TO@ delta < 4000 @AT@ 1817 @LENGTH@ 12
------------UPD NumberLiteral@@3000 @TO@ 4000 @AT@ 1825 @LENGTH@ 4


INS IfStatement@@if (attributeName == null || ID_ATTRIBUTE.equals(attributeName)) {  return false;} @TO@ MethodDeclaration@@protected, boolean, MethodName:isEligibleAttribute, String attributeName,  @AT@ 2189 @LENGTH@ 102
---INS InfixExpression@@attributeName == null || ID_ATTRIBUTE.equals(attributeName) @TO@ IfStatement@@if (attributeName == null || ID_ATTRIBUTE.equals(attributeName)) {  return false;} @AT@ 2193 @LENGTH@ 59
------INS InfixExpression@@attributeName == null @TO@ InfixExpression@@attributeName == null || ID_ATTRIBUTE.equals(attributeName) @AT@ 2193 @LENGTH@ 21
---------INS SimpleName@@attributeName @TO@ InfixExpression@@attributeName == null @AT@ 2193 @LENGTH@ 13
---------INS Operator@@== @TO@ InfixExpression@@attributeName == null @AT@ 2206 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@attributeName == null @AT@ 2210 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@attributeName == null || ID_ATTRIBUTE.equals(attributeName) @AT@ 2214 @LENGTH@ 2
------MOV MethodInvocation@@ID_ATTRIBUTE.equals(attributeName) @TO@ InfixExpression@@attributeName == null || ID_ATTRIBUTE.equals(attributeName) @AT@ 2302 @LENGTH@ 34
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (attributeName == null || ID_ATTRIBUTE.equals(attributeName)) {  return false;} @AT@ 2254 @LENGTH@ 37
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 2268 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2275 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("file:target/filestress?maxMessagesPerPoll=50&readLock=rename").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("file:target/filestress?maxMessagesPerPoll=50&readLock=rename").routeId("foo").noAutoStartup().threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 1528 @LENGTH@ 544
---UPD MethodInvocation@@from("file:target/filestress?maxMessagesPerPoll=50&readLock=rename").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @TO@ from("file:target/filestress?maxMessagesPerPoll=50&readLock=rename").routeId("foo").noAutoStartup().threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 1528 @LENGTH@ 543
------INS MethodInvocation@@MethodName:noAutoStartup:[] @TO@ MethodInvocation@@from("file:target/filestress?maxMessagesPerPoll=50&readLock=rename").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 1528 @LENGTH@ 99
------INS MethodInvocation@@MethodName:routeId:["foo"] @TO@ MethodInvocation@@from("file:target/filestress?maxMessagesPerPoll=50&readLock=rename").threads(10).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Random ran=new Random();
    int delay=ran.nextInt(250) + 10;
    Thread.sleep(delay);
  }
}
).to("mock:result") @AT@ 1528 @LENGTH@ 83
---------INS StringLiteral@@"foo" @TO@ MethodInvocation@@MethodName:routeId:["foo"] @AT@ 1605 @LENGTH@ 5


INS IfStatement@@if (cache != null) {  cache.reset();} @TO@ MethodDeclaration@@public, void, MethodName:readRequest, HttpServletRequest request, HttpMessage message,  @AT@ 3626 @LENGTH@ 57
---INS InfixExpression@@cache != null @TO@ IfStatement@@if (cache != null) {  cache.reset();} @AT@ 3630 @LENGTH@ 13
------INS SimpleName@@cache @TO@ InfixExpression@@cache != null @AT@ 3630 @LENGTH@ 5
------INS Operator@@!= @TO@ InfixExpression@@cache != null @AT@ 3635 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@cache != null @AT@ 3639 @LENGTH@ 4
---INS Block@@ThenBody:{  cache.reset();} @TO@ IfStatement@@if (cache != null) {  cache.reset();} @AT@ 3645 @LENGTH@ 38
------MOV ExpressionStatement@@MethodInvocation:cache.reset() @TO@ Block@@ThenBody:{  cache.reset();} @AT@ 3626 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:log.info("Testing: " + getName() + "("+ getClass().getName()+ ")") @TO@ MethodInvocation:log.info("Testing: " + getTestMethodName() + "("+ getClass().getName()+ ")") @AT@ 3090 @LENGTH@ 69
---UPD MethodInvocation@@log.info("Testing: " + getName() + "("+ getClass().getName()+ ")") @TO@ log.info("Testing: " + getTestMethodName() + "("+ getClass().getName()+ ")") @AT@ 3090 @LENGTH@ 68
------UPD SimpleName@@MethodName:info:["Testing: " + getName() + "("+ getClass().getName()+ ")"] @TO@ MethodName:info:["Testing: " + getTestMethodName() + "("+ getClass().getName()+ ")"] @AT@ 3094 @LENGTH@ 64
---------UPD InfixExpression@@"Testing: " + getName() + "("+ getClass().getName()+ ")" @TO@ "Testing: " + getTestMethodName() + "("+ getClass().getName()+ ")" @AT@ 3099 @LENGTH@ 58
------------UPD MethodInvocation@@MethodName:getName:[] @TO@ MethodName:getTestMethodName:[] @AT@ 3113 @LENGTH@ 9


UPD IfStatement@@if (this.concurrentMethods == null) {  return Collections.EMPTY_MAP;} @TO@ if (this.concurrentMethods == null) {  this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>();} @AT@ 7144 @LENGTH@ 90
---UPD Block@@ThenBody:{  return Collections.EMPTY_MAP;} @TO@ ThenBody:{  this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>();} @AT@ 7186 @LENGTH@ 48
------INS ExpressionStatement@@Assignment:this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>() @TO@ Block@@ThenBody:{  return Collections.EMPTY_MAP;} @AT@ 7197 @LENGTH@ 86
---------INS Assignment@@this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>() @TO@ ExpressionStatement@@Assignment:this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>() @AT@ 7197 @LENGTH@ 85
------------INS FieldAccess@@this.concurrentMethods @TO@ Assignment@@this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>() @AT@ 7197 @LENGTH@ 22
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.concurrentMethods @AT@ 7197 @LENGTH@ 4
---------------INS SimpleName@@concurrentMethods @TO@ FieldAccess@@this.concurrentMethods @AT@ 7202 @LENGTH@ 17
------------INS Operator@@= @TO@ Assignment@@this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>() @AT@ 7219 @LENGTH@ 1
------------INS ClassInstanceCreation@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>[] @TO@ Assignment@@this.concurrentMethods=new HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>() @AT@ 7222 @LENGTH@ 60
---------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>[] @AT@ 7222 @LENGTH@ 3
---------------INS ParameterizedType@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData> @TO@ ClassInstanceCreation@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData>[] @AT@ 7226 @LENGTH@ 54
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData> @AT@ 7226 @LENGTH@ 7
------------------INS SimpleType@@NamedMethodMetaData @TO@ ParameterizedType@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData> @AT@ 7234 @LENGTH@ 19
------------------INS SimpleType@@ConcurrentMethodMetaData @TO@ ParameterizedType@@HashMap<NamedMethodMetaData,ConcurrentMethodMetaData> @AT@ 7255 @LENGTH@ 24
------DEL ReturnStatement@@QualifiedName:Collections.EMPTY_MAP @AT@ 7197 @LENGTH@ 29
---------DEL QualifiedName@@Collections.EMPTY_MAP @AT@ 7204 @LENGTH@ 21
------------DEL SimpleName@@Collections @AT@ 7204 @LENGTH@ 11
------------DEL SimpleName@@EMPTY_MAP @AT@ 7216 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/expenses/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/expenses/$1").build()).build(),firstRule) @TO@ MethodInvocation:root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/gwtRequest").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/gwtRequest").build()).build(),firstRule) @AT@ 12837 @LENGTH@ 310
---UPD MethodInvocation@@root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/expenses/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/expenses/$1").build()).build(),firstRule) @TO@ root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/gwtRequest").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/gwtRequest").build()).build(),firstRule) @AT@ 12837 @LENGTH@ 309
------UPD SimpleName@@MethodName:insertBefore:[new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/expenses/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/expenses/$1").build()).build(), firstRule] @TO@ MethodName:insertBefore:[new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/gwtRequest").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/gwtRequest").build()).build(), firstRule] @AT@ 12842 @LENGTH@ 304
---------UPD MethodInvocation@@new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/expenses/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/expenses/$1").build()).build() @TO@ new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/gwtRequest").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/gwtRequest").build()).build() @AT@ 12855 @LENGTH@ 279
------------UPD MethodInvocation@@MethodName:addChild:[new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/expenses/$1").build()] @TO@ MethodName:addChild:[new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/gwtRequest").build()] @AT@ 12855 @LENGTH@ 263
---------------UPD MethodInvocation@@new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/expenses/$1").build() @TO@ new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/gwtRequest").build() @AT@ 13014 @LENGTH@ 103
------------------UPD MethodInvocation@@MethodName:setText:["/expenses/$1"] @TO@ MethodName:setText:["/gwtRequest"] @AT@ 13014 @LENGTH@ 95
---------------------UPD StringLiteral@@"/expenses/$1" @TO@ "/gwtRequest" @AT@ 13094 @LENGTH@ 14
------------UPD MethodInvocation@@MethodName:addChild:[new XmlElementBuilder("from",urlRewriteDoc).setText("/expenses/**").build()] @TO@ MethodName:addChild:[new XmlElementBuilder("from",urlRewriteDoc).setText("/gwtRequest").build()] @AT@ 12855 @LENGTH@ 140
---------------UPD MethodInvocation@@new XmlElementBuilder("from",urlRewriteDoc).setText("/expenses/**").build() @TO@ new XmlElementBuilder("from",urlRewriteDoc).setText("/gwtRequest").build() @AT@ 12918 @LENGTH@ 76
------------------UPD MethodInvocation@@MethodName:setText:["/expenses/**"] @TO@ MethodName:setText:["/gwtRequest"] @AT@ 12918 @LENGTH@ 68
---------------------UPD StringLiteral@@"/expenses/**" @TO@ "/gwtRequest" @AT@ 12971 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:Assert.notNull(resources,"The resources must not be null") @TO@ MethodDeclaration@@public, void, MethodName:setResources, Resource[] resources,  @AT@ 5934 @LENGTH@ 60
---INS MethodInvocation@@Assert.notNull(resources,"The resources must not be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(resources,"The resources must not be null") @AT@ 5934 @LENGTH@ 59
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(resources,"The resources must not be null") @AT@ 5934 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[resources, "The resources must not be null"] @TO@ MethodInvocation@@Assert.notNull(resources,"The resources must not be null") @AT@ 5941 @LENGTH@ 52
---------INS SimpleName@@resources @TO@ SimpleName@@MethodName:notNull:[resources, "The resources must not be null"] @AT@ 5949 @LENGTH@ 9
---------INS StringLiteral@@"The resources must not be null" @TO@ SimpleName@@MethodName:notNull:[resources, "The resources must not be null"] @AT@ 5960 @LENGTH@ 32


DEL FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(TransactedJmsRouteTest.class)] @AT@ 2288 @LENGTH@ 89
---DEL Modifier@@private @AT@ 2288 @LENGTH@ 7
---DEL Modifier@@static @AT@ 2296 @LENGTH@ 6
---DEL Modifier@@final @AT@ 2303 @LENGTH@ 5
---DEL Modifier@@transient @AT@ 2309 @LENGTH@ 9
---DEL SimpleType@@Log @AT@ 2319 @LENGTH@ 3
---DEL VariableDeclarationFragment@@LOG=LogFactory.getLog(TransactedJmsRouteTest.class) @AT@ 2323 @LENGTH@ 53
------DEL SimpleName@@LOG @AT@ 2323 @LENGTH@ 3
------DEL MethodInvocation@@LogFactory.getLog(TransactedJmsRouteTest.class) @AT@ 2329 @LENGTH@ 47
---------DEL SimpleName@@Name:LogFactory @AT@ 2329 @LENGTH@ 10
---------DEL SimpleName@@MethodName:getLog:[TransactedJmsRouteTest.class] @AT@ 2340 @LENGTH@ 36
------------DEL TypeLiteral@@TransactedJmsRouteTest.class @AT@ 2347 @LENGTH@ 28


UPD TypeDeclaration@@[@ContextConfiguration(loader=WebApplicationContextLoader.class,locations={"AbstractResourceViewTests-context.xml"}), @RunWith(SpringJUnit4ClassRunner.class), public]RssViewTests, AbstractResourceViewTests @TO@ [@ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations={"AbstractResourceViewTests-context.xml"}), @RunWith(SpringJUnit4ClassRunner.class), public]RssViewTests, AbstractResourceViewTests @AT@ 1359 @LENGTH@ 887
---UPD NormalAnnotation@@@ContextConfiguration(loader=WebApplicationContextLoader.class,locations={"AbstractResourceViewTests-context.xml"}) @TO@ @ContextConfiguration(loader=WebApplicationContextLoader.class,inheritLocations=false,locations={"AbstractResourceViewTests-context.xml"}) @AT@ 1359 @LENGTH@ 118


UPD MethodDeclaration@@public, T, MethodName:body, Class<?> expectedType,  @TO@ public, T, MethodName:body, Class expectedType,  @AT@ 2847 @LENGTH@ 119
---UPD SingleVariableDeclaration@@Class<?> expectedType @TO@ Class expectedType @AT@ 2861 @LENGTH@ 21
------DEL ParameterizedType@@Class<?> @AT@ 2861 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 2861 @LENGTH@ 5
---------DEL WildcardType@@? @AT@ 2867 @LENGTH@ 1
------INS SimpleType@@Class @TO@ SingleVariableDeclaration@@Class<?> expectedType @AT@ 2861 @LENGTH@ 5


UPD VariableDeclarationStatement@@String headerValue=(String)entry.getValue(); @TO@ String headerValue=in.getHeader(entry.getKey(),String.class); @AT@ 2904 @LENGTH@ 47
---UPD VariableDeclarationFragment@@headerValue=(String)entry.getValue() @TO@ headerValue=in.getHeader(entry.getKey(),String.class) @AT@ 2911 @LENGTH@ 39
------INS MethodInvocation@@in.getHeader(entry.getKey(),String.class) @TO@ VariableDeclarationFragment@@headerValue=(String)entry.getValue() @AT@ 2925 @LENGTH@ 42
---------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.getHeader(entry.getKey(),String.class) @AT@ 2925 @LENGTH@ 2
---------INS SimpleName@@MethodName:getHeader:[entry.getKey(), String.class] @TO@ MethodInvocation@@in.getHeader(entry.getKey(),String.class) @AT@ 2928 @LENGTH@ 39
------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:getHeader:[entry.getKey(), String.class] @AT@ 2938 @LENGTH@ 14
---------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 2934 @LENGTH@ 5
---------------MOV SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 2940 @LENGTH@ 10
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getHeader:[entry.getKey(), String.class] @AT@ 2954 @LENGTH@ 12
------DEL CastExpression@@(String)entry.getValue() @AT@ 2925 @LENGTH@ 25
---------DEL SimpleType@@String @AT@ 2926 @LENGTH@ 6
---------DEL MethodInvocation@@entry.getValue() @AT@ 2934 @LENGTH@ 16

UPD ReturnStatement@@ConditionalExpression:entity != null ? entity.getRequiredPersistentProperty(path.getMetadata().getName()) : null @TO@ ConditionalExpression:entity != null ? entity.getPersistentProperty(path.getMetadata().getName()) : null @AT@ 7052 @LENGTH@ 98
---UPD ConditionalExpression@@entity != null ? entity.getRequiredPersistentProperty(path.getMetadata().getName()) : null @TO@ entity != null ? entity.getPersistentProperty(path.getMetadata().getName()) : null @AT@ 7059 @LENGTH@ 90
------UPD MethodInvocation@@entity.getRequiredPersistentProperty(path.getMetadata().getName()) @TO@ entity.getPersistentProperty(path.getMetadata().getName()) @AT@ 7076 @LENGTH@ 66
---------UPD SimpleName@@MethodName:getRequiredPersistentProperty:[path.getMetadata().getName()] @TO@ MethodName:getPersistentProperty:[path.getMetadata().getName()] @AT@ 7083 @LENGTH@ 59


UPD TypeDeclaration@@[public]AmazonIAMClientMock, AbstractAmazonIdentityManagement @TO@ [public]AmazonIAMClientMock, AmazonIdentityManagementClient @AT@ 21685 @LENGTH@ 27237
---UPD SimpleType@@AbstractAmazonIdentityManagement @TO@ AmazonIdentityManagementClient @AT@ 21726 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:rest("/geocoder").description("Geocoder REST service").consumes("application/json").produces("application/json").get().description("Geocoder address lookup").outType(GeocodeResponse.class).param().name("address").type(query).description("The address to lookup").dataType("string").endParam().responseMessage().code(200).message("Geocoder successful").endResponseMessage().toD("geocoder:address:${header.address}") @TO@ MethodInvocation:rest("/geocoder").description("Geocoder REST service").consumes("application/json").produces("application/json").get().description("Geocoder address lookup").outType(GeocodingResult[].class).param().name("address").type(query).description("The address to lookup").dataType("string").endParam().responseMessage().code(200).message("Geocoder successful").endResponseMessage().toD("geocoder:address:${header.address})") @AT@ 1391 @LENGTH@ 586
---UPD MethodInvocation@@rest("/geocoder").description("Geocoder REST service").consumes("application/json").produces("application/json").get().description("Geocoder address lookup").outType(GeocodeResponse.class).param().name("address").type(query).description("The address to lookup").dataType("string").endParam().responseMessage().code(200).message("Geocoder successful").endResponseMessage().toD("geocoder:address:${header.address}") @TO@ rest("/geocoder").description("Geocoder REST service").consumes("application/json").produces("application/json").get().description("Geocoder address lookup").outType(GeocodingResult[].class).param().name("address").type(query).description("The address to lookup").dataType("string").endParam().responseMessage().code(200).message("Geocoder successful").endResponseMessage().toD("geocoder:address:${header.address})") @AT@ 1391 @LENGTH@ 585
------UPD MethodInvocation@@MethodName:outType:[GeocodeResponse.class] @TO@ MethodName:outType:[GeocodingResult[].class] @AT@ 1391 @LENGTH@ 228
---------UPD TypeLiteral@@GeocodeResponse.class @TO@ GeocodingResult[].class @AT@ 1597 @LENGTH@ 21
------UPD SimpleName@@MethodName:toD:["geocoder:address:${header.address}"] @TO@ MethodName:toD:["geocoder:address:${header.address})"] @AT@ 1935 @LENGTH@ 41
---------UPD StringLiteral@@"geocoder:address:${header.address}" @TO@ "geocoder:address:${header.address})" @AT@ 1939 @LENGTH@ 36


UPD SuperConstructorInvocation@@super((name,containerName,cacheName) -> new LocalCacheGroupBuilder(name));
 @TO@ super((name,containerName,cacheName) -> new LocalCacheGroupServiceConfigurator(name));
 @AT@ 1627 @LENGTH@ 76
---UPD LambdaExpression@@(name,containerName,cacheName) -> new LocalCacheGroupBuilder(name) @TO@ (name,containerName,cacheName) -> new LocalCacheGroupServiceConfigurator(name) @AT@ 1633 @LENGTH@ 68
------UPD ClassInstanceCreation@@LocalCacheGroupBuilder[name] @TO@ LocalCacheGroupServiceConfigurator[name] @AT@ 1669 @LENGTH@ 32
---------UPD SimpleType@@LocalCacheGroupBuilder @TO@ LocalCacheGroupServiceConfigurator @AT@ 1673 @LENGTH@ 22


UPD MethodDeclaration@@public, void, MethodName:onCreate, Connection connection,  @TO@ public, void, MethodName:onCreate, @Nullable Connection connection,  @AT@ 7101 @LENGTH@ 541
---UPD SingleVariableDeclaration@@Connection connection @TO@ @Nullable Connection connection @AT@ 7122 @LENGTH@ 21


UPD MethodDeclaration@@protected, void, MethodName:doInitialize, Exception,  @TO@ protected, void, MethodName:doInitialize,  @AT@ 17881 @LENGTH@ 52
---DEL SimpleType@@Exception @AT@ 17918 @LENGTH@ 9


UPD VariableDeclarationStatement@@Set<PathType> pathTypes=new HashSet<PathType>(); @TO@ Set<PathType> pathTypes=new HashSet<>(); @AT@ 2028 @LENGTH@ 50
---UPD VariableDeclarationFragment@@pathTypes=new HashSet<PathType>() @TO@ pathTypes=new HashSet<>() @AT@ 2042 @LENGTH@ 35
------UPD ClassInstanceCreation@@HashSet<PathType>[] @TO@ HashSet<>[] @AT@ 2054 @LENGTH@ 23
---------UPD ParameterizedType@@HashSet<PathType> @TO@ HashSet<> @AT@ 2058 @LENGTH@ 17
------------DEL SimpleType@@PathType @AT@ 2066 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:StepVerifier.create(template.save(person1)).expectNextCount(1).verifyComplete() @TO@ MethodInvocation:StepVerifier.create(template.save(person1).delayElement(Duration.ofSeconds(1))).expectNextCount(1).verifyComplete() @AT@ 49476 @LENGTH@ 80
---UPD MethodInvocation@@StepVerifier.create(template.save(person1)).expectNextCount(1).verifyComplete() @TO@ StepVerifier.create(template.save(person1).delayElement(Duration.ofSeconds(1))).expectNextCount(1).verifyComplete() @AT@ 49476 @LENGTH@ 79
------UPD MethodInvocation@@MethodName:create:[template.save(person1)] @TO@ MethodName:create:[template.save(person1).delayElement(Duration.ofSeconds(1))] @AT@ 49476 @LENGTH@ 43
---------UPD MethodInvocation@@template.save(person1) @TO@ template.save(person1).delayElement(Duration.ofSeconds(1)) @AT@ 49496 @LENGTH@ 22
------------UPD SimpleName@@MethodName:save:[person1] @TO@ MethodName:delayElement:[Duration.ofSeconds(1)] @AT@ 49505 @LENGTH@ 13
---------------DEL SimpleName@@person1 @AT@ 49510 @LENGTH@ 7
---------------INS MethodInvocation@@Duration.ofSeconds(1) @TO@ SimpleName@@MethodName:save:[person1] @AT@ 49575 @LENGTH@ 21
------------------INS SimpleName@@Name:Duration @TO@ MethodInvocation@@Duration.ofSeconds(1) @AT@ 49575 @LENGTH@ 8
------------------INS SimpleName@@MethodName:ofSeconds:[1] @TO@ MethodInvocation@@Duration.ofSeconds(1) @AT@ 49584 @LENGTH@ 12
---------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:ofSeconds:[1] @AT@ 49594 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:save:[person1] @TO@ MethodInvocation@@template.save(person1) @AT@ 49539 @LENGTH@ 22
---------------INS SimpleName@@person1 @TO@ MethodInvocation@@MethodName:save:[person1] @AT@ 49553 @LENGTH@ 7


INS VariableDeclarationStatement@@Map<String,Object> additionalParameters=accessTokenResponse.getAdditionalParameters(); @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 5300 @LENGTH@ 89
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> additionalParameters=accessTokenResponse.getAdditionalParameters(); @AT@ 5300 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 5300 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 5304 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 5312 @LENGTH@ 6
---INS VariableDeclarationFragment@@additionalParameters=accessTokenResponse.getAdditionalParameters() @TO@ VariableDeclarationStatement@@Map<String,Object> additionalParameters=accessTokenResponse.getAdditionalParameters(); @AT@ 5320 @LENGTH@ 68
------INS SimpleName@@additionalParameters @TO@ VariableDeclarationFragment@@additionalParameters=accessTokenResponse.getAdditionalParameters() @AT@ 5320 @LENGTH@ 20
------INS MethodInvocation@@accessTokenResponse.getAdditionalParameters() @TO@ VariableDeclarationFragment@@additionalParameters=accessTokenResponse.getAdditionalParameters() @AT@ 5343 @LENGTH@ 45
---------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getAdditionalParameters() @AT@ 5343 @LENGTH@ 19
---------INS SimpleName@@MethodName:getAdditionalParameters:[] @TO@ MethodInvocation@@accessTokenResponse.getAdditionalParameters() @AT@ 5363 @LENGTH@ 25


INS MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingReturnsGenericErrorMessage, Exception,  @TO@ TypeDeclaration@@[public]DefaultRedirectResolverTests,  @AT@ 7898 @LENGTH@ 537
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingReturnsGenericErrorMessage, Exception,  @AT@ 7898 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingReturnsGenericErrorMessage, Exception,  @AT@ 7905 @LENGTH@ 4
---INS SimpleName@@MethodName:testRedirectNotMatchingReturnsGenericErrorMessage @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingReturnsGenericErrorMessage, Exception,  @AT@ 7910 @LENGTH@ 49
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingReturnsGenericErrorMessage, Exception,  @AT@ 7969 @LENGTH@ 9
---INS VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("http://nowhere.com")); @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingReturnsGenericErrorMessage, Exception,  @AT@ 7983 @LENGTH@ 84
------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("http://nowhere.com")); @AT@ 7983 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 7983 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 7987 @LENGTH@ 6
------INS VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("http://nowhere.com")) @TO@ VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("http://nowhere.com")); @AT@ 7995 @LENGTH@ 71
---------INS SimpleName@@redirectUris @TO@ VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("http://nowhere.com")) @AT@ 7995 @LENGTH@ 12
---------INS ClassInstanceCreation@@HashSet<String>[Arrays.asList("http://nowhere.com")] @TO@ VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("http://nowhere.com")) @AT@ 8010 @LENGTH@ 56
------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("http://nowhere.com")] @AT@ 8010 @LENGTH@ 3
------------INS ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("http://nowhere.com")] @AT@ 8014 @LENGTH@ 15
---------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 8014 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 8022 @LENGTH@ 6
------------INS MethodInvocation@@Arrays.asList("http://nowhere.com") @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("http://nowhere.com")] @AT@ 8030 @LENGTH@ 35
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("http://nowhere.com") @AT@ 8030 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["http://nowhere.com"] @TO@ MethodInvocation@@Arrays.asList("http://nowhere.com") @AT@ 8037 @LENGTH@ 28
------------------INS StringLiteral@@"http://nowhere.com" @TO@ SimpleName@@MethodName:asList:["http://nowhere.com"] @AT@ 8044 @LENGTH@ 20
---INS VariableDeclarationStatement@@String requestedRedirect="http://anywhere.com/myendpoint"; @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingReturnsGenericErrorMessage, Exception,  @AT@ 8070 @LENGTH@ 60
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String requestedRedirect="http://anywhere.com/myendpoint"; @AT@ 8070 @LENGTH@ 6
------INS VariableDeclarationFragment@@requestedRedirect="http://anywhere.com/myendpoint" @TO@ VariableDeclarationStatement@@String requestedRedirect="http://anywhere.com/myendpoint"; @AT@ 8077 @LENGTH@ 52
---------INS SimpleName@@requestedRedirect @TO@ VariableDeclarationFragment@@requestedRedirect="http://anywhere.com/myendpoint" @AT@ 8077 @LENGTH@ 17
---------INS StringLiteral@@"http://anywhere.com/myendpoint" @TO@ VariableDeclarationFragment@@requestedRedirect="http://anywhere.com/myendpoint" @AT@ 8097 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:client.setRegisteredRedirectUri(redirectUris) @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingReturnsGenericErrorMessage, Exception,  @AT@ 8133 @LENGTH@ 46
------INS MethodInvocation@@client.setRegisteredRedirectUri(redirectUris) @TO@ ExpressionStatement@@MethodInvocation:client.setRegisteredRedirectUri(redirectUris) @AT@ 8133 @LENGTH@ 45
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.setRegisteredRedirectUri(redirectUris) @AT@ 8133 @LENGTH@ 6
---------INS SimpleName@@MethodName:setRegisteredRedirectUri:[redirectUris] @TO@ MethodInvocation@@client.setRegisteredRedirectUri(redirectUris) @AT@ 8140 @LENGTH@ 38
------------INS SimpleName@@redirectUris @TO@ SimpleName@@MethodName:setRegisteredRedirectUri:[redirectUris] @AT@ 8165 @LENGTH@ 12
---INS TryStatement@@try {  resolver.resolveRedirect(requestedRedirect,client);  fail();} catch (RedirectMismatchException ex) {  assertEquals("Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.",ex.getMessage());} @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingReturnsGenericErrorMessage, Exception,  @AT@ 8182 @LENGTH@ 250
------INS ExpressionStatement@@MethodInvocation:resolver.resolveRedirect(requestedRedirect,client) @TO@ TryStatement@@try {  resolver.resolveRedirect(requestedRedirect,client);  fail();} catch (RedirectMismatchException ex) {  assertEquals("Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.",ex.getMessage());} @AT@ 8191 @LENGTH@ 52
---------INS MethodInvocation@@resolver.resolveRedirect(requestedRedirect,client) @TO@ ExpressionStatement@@MethodInvocation:resolver.resolveRedirect(requestedRedirect,client) @AT@ 8191 @LENGTH@ 51
------------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.resolveRedirect(requestedRedirect,client) @AT@ 8191 @LENGTH@ 8
------------INS SimpleName@@MethodName:resolveRedirect:[requestedRedirect, client] @TO@ MethodInvocation@@resolver.resolveRedirect(requestedRedirect,client) @AT@ 8200 @LENGTH@ 42
---------------INS SimpleName@@requestedRedirect @TO@ SimpleName@@MethodName:resolveRedirect:[requestedRedirect, client] @AT@ 8216 @LENGTH@ 17
---------------INS SimpleName@@client @TO@ SimpleName@@MethodName:resolveRedirect:[requestedRedirect, client] @AT@ 8235 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:fail() @TO@ TryStatement@@try {  resolver.resolveRedirect(requestedRedirect,client);  fail();} catch (RedirectMismatchException ex) {  assertEquals("Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.",ex.getMessage());} @AT@ 8247 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:fail:[] @TO@ ExpressionStatement@@MethodInvocation:fail() @AT@ 8247 @LENGTH@ 6
------INS CatchClause@@catch (RedirectMismatchException ex) {  assertEquals("Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.",ex.getMessage());} @TO@ TryStatement@@try {  resolver.resolveRedirect(requestedRedirect,client);  fail();} catch (RedirectMismatchException ex) {  assertEquals("Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.",ex.getMessage());} @AT@ 8259 @LENGTH@ 173
---------INS SingleVariableDeclaration@@RedirectMismatchException ex @TO@ CatchClause@@catch (RedirectMismatchException ex) {  assertEquals("Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.",ex.getMessage());} @AT@ 8266 @LENGTH@ 28
------------INS SimpleType@@RedirectMismatchException @TO@ SingleVariableDeclaration@@RedirectMismatchException ex @AT@ 8266 @LENGTH@ 25
------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@RedirectMismatchException ex @AT@ 8292 @LENGTH@ 2
---------INS ExpressionStatement@@MethodInvocation:assertEquals("Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.",ex.getMessage()) @TO@ CatchClause@@catch (RedirectMismatchException ex) {  assertEquals("Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.",ex.getMessage());} @AT@ 8301 @LENGTH@ 127
------------INS MethodInvocation@@assertEquals("Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.",ex.getMessage()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.",ex.getMessage()) @AT@ 8301 @LENGTH@ 126
---------------INS SimpleName@@MethodName:assertEquals:["Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.", ex.getMessage()] @TO@ MethodInvocation@@assertEquals("Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.",ex.getMessage()) @AT@ 8301 @LENGTH@ 126
------------------INS StringLiteral@@"Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values." @TO@ SimpleName@@MethodName:assertEquals:["Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.", ex.getMessage()] @AT@ 8314 @LENGTH@ 95
------------------INS MethodInvocation@@ex.getMessage() @TO@ SimpleName@@MethodName:assertEquals:["Invalid redirect: http://anywhere.com/myendpoint does not match one of the registered values.", ex.getMessage()] @AT@ 8411 @LENGTH@ 15
---------------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getMessage() @AT@ 8411 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@ex.getMessage() @AT@ 8414 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:findByRegexWithPattern,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 39447 @LENGTH@ 139
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findByRegexWithPattern,  @AT@ 39447 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findByRegexWithPattern,  @AT@ 39454 @LENGTH@ 4
---INS SimpleName@@MethodName:findByRegexWithPattern @TO@ MethodDeclaration@@public, void, MethodName:findByRegexWithPattern,  @AT@ 39459 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:assertThat(repository.findByFirstnameRegex(Pattern.compile(alicia.getFirstname()))).hasSize(1) @TO@ MethodDeclaration@@public, void, MethodName:findByRegexWithPattern,  @AT@ 39488 @LENGTH@ 95
------INS MethodInvocation@@assertThat(repository.findByFirstnameRegex(Pattern.compile(alicia.getFirstname()))).hasSize(1) @TO@ ExpressionStatement@@MethodInvocation:assertThat(repository.findByFirstnameRegex(Pattern.compile(alicia.getFirstname()))).hasSize(1) @AT@ 39488 @LENGTH@ 94
---------INS MethodInvocation@@MethodName:assertThat:[repository.findByFirstnameRegex(Pattern.compile(alicia.getFirstname()))] @TO@ MethodInvocation@@assertThat(repository.findByFirstnameRegex(Pattern.compile(alicia.getFirstname()))).hasSize(1) @AT@ 39488 @LENGTH@ 83
------------INS MethodInvocation@@repository.findByFirstnameRegex(Pattern.compile(alicia.getFirstname())) @TO@ MethodInvocation@@MethodName:assertThat:[repository.findByFirstnameRegex(Pattern.compile(alicia.getFirstname()))] @AT@ 39499 @LENGTH@ 71
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByFirstnameRegex(Pattern.compile(alicia.getFirstname())) @AT@ 39499 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findByFirstnameRegex:[Pattern.compile(alicia.getFirstname())] @TO@ MethodInvocation@@repository.findByFirstnameRegex(Pattern.compile(alicia.getFirstname())) @AT@ 39510 @LENGTH@ 60
------------------INS MethodInvocation@@Pattern.compile(alicia.getFirstname()) @TO@ SimpleName@@MethodName:findByFirstnameRegex:[Pattern.compile(alicia.getFirstname())] @AT@ 39531 @LENGTH@ 38
---------------------INS SimpleName@@Name:Pattern @TO@ MethodInvocation@@Pattern.compile(alicia.getFirstname()) @AT@ 39531 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:compile:[alicia.getFirstname()] @TO@ MethodInvocation@@Pattern.compile(alicia.getFirstname()) @AT@ 39539 @LENGTH@ 30
------------------------INS MethodInvocation@@alicia.getFirstname() @TO@ SimpleName@@MethodName:compile:[alicia.getFirstname()] @AT@ 39547 @LENGTH@ 21
---------------------------INS SimpleName@@Name:alicia @TO@ MethodInvocation@@alicia.getFirstname() @AT@ 39547 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:getFirstname:[] @TO@ MethodInvocation@@alicia.getFirstname() @AT@ 39554 @LENGTH@ 14
---------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@assertThat(repository.findByFirstnameRegex(Pattern.compile(alicia.getFirstname()))).hasSize(1) @AT@ 39572 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 39580 @LENGTH@ 1


UPD ReturnStatement@@ClassInstanceCreation:new InfinispanSessionManagerFactoryBuilder<>(config) @TO@ ClassInstanceCreation:new InfinispanSessionManagerFactoryServiceConfigurator<>(config) @AT@ 1899 @LENGTH@ 60
---UPD ClassInstanceCreation@@InfinispanSessionManagerFactoryBuilder<>[config] @TO@ InfinispanSessionManagerFactoryServiceConfigurator<>[config] @AT@ 1906 @LENGTH@ 52
------UPD ParameterizedType@@InfinispanSessionManagerFactoryBuilder<> @TO@ InfinispanSessionManagerFactoryServiceConfigurator<> @AT@ 1910 @LENGTH@ 40
---------UPD SimpleType@@InfinispanSessionManagerFactoryBuilder @TO@ InfinispanSessionManagerFactoryServiceConfigurator @AT@ 1910 @LENGTH@ 38


UPD EnhancedForStatement@@for (CacheBuilderProvider provider : ServiceLoader.load(DistributedCacheBuilderProvider.class,DistributedCacheBuilderProvider.class.getClassLoader())) {  builders.addAll(provider.getBuilders(registry,containerName,serverName));} @TO@ for (CacheServiceConfiguratorProvider provider : ServiceLoader.load(DistributedCacheServiceConfiguratorProvider.class,DistributedCacheServiceConfiguratorProvider.class.getClassLoader())) {  builders.addAll(provider.getServiceConfigurators(registry,containerName,serverName));} @AT@ 3887 @LENGTH@ 251
---UPD SingleVariableDeclaration@@CacheBuilderProvider provider @TO@ CacheServiceConfiguratorProvider provider @AT@ 3892 @LENGTH@ 29
------UPD SimpleType@@CacheBuilderProvider @TO@ CacheServiceConfiguratorProvider @AT@ 3892 @LENGTH@ 20
---UPD MethodInvocation@@ServiceLoader.load(DistributedCacheBuilderProvider.class,DistributedCacheBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(DistributedCacheServiceConfiguratorProvider.class,DistributedCacheServiceConfiguratorProvider.class.getClassLoader()) @AT@ 3924 @LENGTH@ 113
------UPD SimpleName@@MethodName:load:[DistributedCacheBuilderProvider.class, DistributedCacheBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[DistributedCacheServiceConfiguratorProvider.class, DistributedCacheServiceConfiguratorProvider.class.getClassLoader()] @AT@ 3938 @LENGTH@ 99
---------UPD TypeLiteral@@DistributedCacheBuilderProvider.class @TO@ DistributedCacheServiceConfiguratorProvider.class @AT@ 3943 @LENGTH@ 37
---------UPD MethodInvocation@@DistributedCacheBuilderProvider.class.getClassLoader() @TO@ DistributedCacheServiceConfiguratorProvider.class.getClassLoader() @AT@ 3982 @LENGTH@ 54
------------UPD TypeLiteral@@DistributedCacheBuilderProvider.class @TO@ DistributedCacheServiceConfiguratorProvider.class @AT@ 3982 @LENGTH@ 37
---UPD ExpressionStatement@@MethodInvocation:builders.addAll(provider.getBuilders(registry,containerName,serverName)) @TO@ MethodInvocation:builders.addAll(provider.getServiceConfigurators(registry,containerName,serverName)) @AT@ 4053 @LENGTH@ 75
------UPD MethodInvocation@@builders.addAll(provider.getBuilders(registry,containerName,serverName)) @TO@ builders.addAll(provider.getServiceConfigurators(registry,containerName,serverName)) @AT@ 4053 @LENGTH@ 74
---------UPD SimpleName@@MethodName:addAll:[provider.getBuilders(registry,containerName,serverName)] @TO@ MethodName:addAll:[provider.getServiceConfigurators(registry,containerName,serverName)] @AT@ 4062 @LENGTH@ 65
------------UPD MethodInvocation@@provider.getBuilders(registry,containerName,serverName) @TO@ provider.getServiceConfigurators(registry,containerName,serverName) @AT@ 4069 @LENGTH@ 57
---------------UPD SimpleName@@MethodName:getBuilders:[registry, containerName, serverName] @TO@ MethodName:getServiceConfigurators:[registry, containerName, serverName] @AT@ 4078 @LENGTH@ 48


DEL ExpressionStatement@@MethodInvocation:this.metaStore.start() @AT@ 2989 @LENGTH@ 23
---DEL MethodInvocation@@this.metaStore.start() @AT@ 2989 @LENGTH@ 22
------DEL FieldAccess@@this.metaStore @AT@ 2989 @LENGTH@ 14
---------DEL ThisExpression@@this @AT@ 2989 @LENGTH@ 4
---------DEL SimpleName@@metaStore @AT@ 2994 @LENGTH@ 9
------DEL SimpleName@@MethodName:start:[] @AT@ 3004 @LENGTH@ 7


INS IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(state);} else {  ReactiveHelper.scheduleMain(state);} @TO@ MethodDeclaration@@public, boolean, MethodName:process, final Exchange exchange, final AsyncCallback callback,  @AT@ 7363 @LENGTH@ 153
---INS MethodInvocation@@exchange.isTransacted() @TO@ IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(state);} else {  ReactiveHelper.scheduleMain(state);} @AT@ 7367 @LENGTH@ 23
------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.isTransacted() @AT@ 7367 @LENGTH@ 8
------INS SimpleName@@MethodName:isTransacted:[] @TO@ MethodInvocation@@exchange.isTransacted() @AT@ 7376 @LENGTH@ 14
---INS Block@@ThenBody:{  ReactiveHelper.scheduleSync(state);} @TO@ IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(state);} else {  ReactiveHelper.scheduleMain(state);} @AT@ 7392 @LENGTH@ 59
------INS ExpressionStatement@@MethodInvocation:ReactiveHelper.scheduleSync(state) @TO@ Block@@ThenBody:{  ReactiveHelper.scheduleSync(state);} @AT@ 7406 @LENGTH@ 35
---------INS MethodInvocation@@ReactiveHelper.scheduleSync(state) @TO@ ExpressionStatement@@MethodInvocation:ReactiveHelper.scheduleSync(state) @AT@ 7406 @LENGTH@ 34
------------INS SimpleName@@Name:ReactiveHelper @TO@ MethodInvocation@@ReactiveHelper.scheduleSync(state) @AT@ 7406 @LENGTH@ 14
------------INS SimpleName@@MethodName:scheduleSync:[state] @TO@ MethodInvocation@@ReactiveHelper.scheduleSync(state) @AT@ 7421 @LENGTH@ 19
---------------INS SimpleName@@state @TO@ SimpleName@@MethodName:scheduleSync:[state] @AT@ 7434 @LENGTH@ 5
---INS Block@@ElseBody:{  ReactiveHelper.scheduleMain(state);} @TO@ IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(state);} else {  ReactiveHelper.scheduleMain(state);} @AT@ 7457 @LENGTH@ 59
------MOV ExpressionStatement@@MethodInvocation:ReactiveHelper.scheduleMain(state) @TO@ Block@@ElseBody:{  ReactiveHelper.scheduleMain(state);} @AT@ 7363 @LENGTH@ 35


UPD MethodDeclaration@@protected, voidMethodName:RegistryFactoryServiceConfiguratorProvider, CacheCapabilityServiceBuilderFactory<RegistryFactory<Object,Object>> factory,  @TO@ protected, voidMethodName:RegistryFactoryServiceConfiguratorProvider, CacheCapabilityServiceConfiguratorFactory<RegistryFactory<Object,Object>> factory,  @AT@ 1907 @LENGTH@ 247
---UPD SingleVariableDeclaration@@CacheCapabilityServiceBuilderFactory<RegistryFactory<Object,Object>> factory @TO@ CacheCapabilityServiceConfiguratorFactory<RegistryFactory<Object,Object>> factory @AT@ 1960 @LENGTH@ 77
------UPD ParameterizedType@@CacheCapabilityServiceBuilderFactory<RegistryFactory<Object,Object>> @TO@ CacheCapabilityServiceConfiguratorFactory<RegistryFactory<Object,Object>> @AT@ 1960 @LENGTH@ 69
---------UPD SimpleType@@CacheCapabilityServiceBuilderFactory @TO@ CacheCapabilityServiceConfiguratorFactory @AT@ 1960 @LENGTH@ 36


UPD MethodInvocation@@ifNotException(ex2,exchange,callback,() -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
) @TO@ ifNotException(ex2,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
) @AT@ 2351 @LENGTH@ 669
---UPD SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
] @TO@ MethodName:ifNotException:[ex2, exchange, !inheritedCoordinator, coordinator, existingCoordinator, callback, () -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
] @AT@ 2351 @LENGTH@ 669
------INS PrefixExpression@@!inheritedCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
] @AT@ 2381 @LENGTH@ 21
---------INS Operator@@! @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2381 @LENGTH@ 1
---------INS SimpleName@@inheritedCoordinator @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2382 @LENGTH@ 20
------UPD LambdaExpression@@() -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
 @TO@ () -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
 @AT@ 2391 @LENGTH@ 628
---------UPD ExpressionStatement@@MethodInvocation:coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
)) @TO@ MethodInvocation:coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
)) @AT@ 2481 @LENGTH@ 524
------------UPD MethodInvocation@@coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
)) @TO@ coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
)) @AT@ 2481 @LENGTH@ 523
---------------UPD SimpleName@@MethodName:whenComplete:[(done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
)] @TO@ MethodName:whenComplete:[(done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
)] @AT@ 2519 @LENGTH@ 485
------------------UPD LambdaExpression@@(done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
) @TO@ (done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
) @AT@ 2532 @LENGTH@ 471
---------------------UPD MethodInvocation@@ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
) @TO@ ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
) @AT@ 2547 @LENGTH@ 456
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @TO@ MethodName:ifNotException:[ex3, exchange, !inheritedCoordinator, coordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2547 @LENGTH@ 456
---------------------------INS PrefixExpression@@!inheritedCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2634 @LENGTH@ 21
------------------------------INS Operator@@! @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2634 @LENGTH@ 1
------------------------------INS SimpleName@@inheritedCoordinator @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2635 @LENGTH@ 20
---------------------------INS SimpleName@@coordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2657 @LENGTH@ 11
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2670 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @TO@ MethodName:ifNotException:[ex3, exchange, !inheritedCoordinator, coordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2547 @LENGTH@ 456
---------------------------INS PrefixExpression@@!inheritedCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2634 @LENGTH@ 21
------------------------------INS Operator@@! @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2634 @LENGTH@ 1
------------------------------INS SimpleName@@inheritedCoordinator @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2635 @LENGTH@ 20
---------------------------INS SimpleName@@coordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2657 @LENGTH@ 11
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2670 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @TO@ MethodName:ifNotException:[ex3, exchange, !inheritedCoordinator, coordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2547 @LENGTH@ 456
---------------------------INS PrefixExpression@@!inheritedCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2634 @LENGTH@ 21
------------------------------INS Operator@@! @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2634 @LENGTH@ 1
------------------------------INS SimpleName@@inheritedCoordinator @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2635 @LENGTH@ 20
---------------------------INS SimpleName@@coordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2657 @LENGTH@ 11
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2670 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @TO@ MethodName:ifNotException:[ex3, exchange, !inheritedCoordinator, coordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2547 @LENGTH@ 456
---------------------------INS PrefixExpression@@!inheritedCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2634 @LENGTH@ 21
------------------------------INS Operator@@! @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2634 @LENGTH@ 1
------------------------------INS SimpleName@@inheritedCoordinator @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2635 @LENGTH@ 20
---------------------------INS SimpleName@@coordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2657 @LENGTH@ 11
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2670 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @TO@ MethodName:ifNotException:[ex3, exchange, !inheritedCoordinator, coordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2547 @LENGTH@ 456
---------------------------INS PrefixExpression@@!inheritedCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2634 @LENGTH@ 21
------------------------------INS Operator@@! @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2634 @LENGTH@ 1
------------------------------INS SimpleName@@inheritedCoordinator @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2635 @LENGTH@ 20
---------------------------INS SimpleName@@coordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2657 @LENGTH@ 11
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2670 @LENGTH@ 19
------INS SimpleName@@coordinator @TO@ SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
] @AT@ 2404 @LENGTH@ 11
------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
] @AT@ 2417 @LENGTH@ 19
---UPD SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
] @TO@ MethodName:ifNotException:[ex2, exchange, !inheritedCoordinator, coordinator, existingCoordinator, callback, () -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
] @AT@ 2351 @LENGTH@ 669
------INS PrefixExpression@@!inheritedCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
] @AT@ 2381 @LENGTH@ 21
---------INS Operator@@! @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2381 @LENGTH@ 1
---------INS SimpleName@@inheritedCoordinator @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2382 @LENGTH@ 20
------UPD LambdaExpression@@() -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
 @TO@ () -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
 @AT@ 2391 @LENGTH@ 628
---------UPD ExpressionStatement@@MethodInvocation:coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
)) @TO@ MethodInvocation:coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
)) @AT@ 2481 @LENGTH@ 524
------------UPD MethodInvocation@@coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
)) @TO@ coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
)) @AT@ 2481 @LENGTH@ 523
---------------UPD SimpleName@@MethodName:whenComplete:[(done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
)] @TO@ MethodName:whenComplete:[(done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
)] @AT@ 2519 @LENGTH@ 485
------------------UPD LambdaExpression@@(done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
) @TO@ (done,ex3) -> ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
) @AT@ 2532 @LENGTH@ 471
---------------------UPD MethodInvocation@@ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
) @TO@ ifNotException(ex3,exchange,!inheritedCoordinator,coordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
) @AT@ 2547 @LENGTH@ 456
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @TO@ MethodName:ifNotException:[ex3, exchange, !inheritedCoordinator, coordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2547 @LENGTH@ 456
---------------------------INS PrefixExpression@@!inheritedCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2634 @LENGTH@ 21
------------------------------INS Operator@@! @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2634 @LENGTH@ 1
------------------------------INS SimpleName@@inheritedCoordinator @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2635 @LENGTH@ 20
---------------------------INS SimpleName@@coordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2657 @LENGTH@ 11
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2670 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @TO@ MethodName:ifNotException:[ex3, exchange, !inheritedCoordinator, coordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2547 @LENGTH@ 456
---------------------------INS PrefixExpression@@!inheritedCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2634 @LENGTH@ 21
------------------------------INS Operator@@! @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2634 @LENGTH@ 1
------------------------------INS SimpleName@@inheritedCoordinator @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2635 @LENGTH@ 20
---------------------------INS SimpleName@@coordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2657 @LENGTH@ 11
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2670 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @TO@ MethodName:ifNotException:[ex3, exchange, !inheritedCoordinator, coordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2547 @LENGTH@ 456
---------------------------INS PrefixExpression@@!inheritedCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2634 @LENGTH@ 21
------------------------------INS Operator@@! @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2634 @LENGTH@ 1
------------------------------INS SimpleName@@inheritedCoordinator @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2635 @LENGTH@ 20
---------------------------INS SimpleName@@coordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2657 @LENGTH@ 11
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2670 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @TO@ MethodName:ifNotException:[ex3, exchange, !inheritedCoordinator, coordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2547 @LENGTH@ 456
---------------------------INS PrefixExpression@@!inheritedCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2634 @LENGTH@ 21
------------------------------INS Operator@@! @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2634 @LENGTH@ 1
------------------------------INS SimpleName@@inheritedCoordinator @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2635 @LENGTH@ 20
---------------------------INS SimpleName@@coordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2657 @LENGTH@ 11
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2670 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @TO@ MethodName:ifNotException:[ex3, exchange, !inheritedCoordinator, coordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2547 @LENGTH@ 456
---------------------------INS PrefixExpression@@!inheritedCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2634 @LENGTH@ 21
------------------------------INS Operator@@! @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2634 @LENGTH@ 1
------------------------------INS SimpleName@@inheritedCoordinator @TO@ PrefixExpression@@!inheritedCoordinator @AT@ 2635 @LENGTH@ 20
---------------------------INS SimpleName@@coordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2657 @LENGTH@ 11
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> {
    if (!inheritedCoordinator) {
      handleSagaCompletion(exchange,coordinator,null,callback);
    }
 else {
      callback.done(false);
    }
  }
);
}
] @AT@ 2670 @LENGTH@ 19
------INS SimpleName@@coordinator @TO@ SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
] @AT@ 2404 @LENGTH@ 11
------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,coordinator);
  coordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> {
      if (!inheritedCoordinator) {
        handleSagaCompletion(exchange,coordinator,null,callback);
      }
 else {
        callback.done(false);
      }
    }
);
  }
));
}
] @AT@ 2417 @LENGTH@ 19


UPD MethodDeclaration@@public, voidMethodName:ListenerContainerConsumerFailedEvent, Object source, String reason, Throwable throwable, boolean fatal,  @TO@ public, voidMethodName:ListenerContainerConsumerFailedEvent, Object source, String reason, @Nullable Throwable throwable, boolean fatal,  @AT@ 1310 @LENGTH@ 210
---UPD SingleVariableDeclaration@@Throwable throwable @TO@ @Nullable Throwable throwable @AT@ 1387 @LENGTH@ 19


UPD MethodDeclaration@@public, String, MethodName:index, Model model, @OAuth2Client OAuth2AuthorizedClient authorizedClient, @AuthenticationPrincipal OAuth2User oauth2User,  @TO@ public, String, MethodName:index, Model model, @RegisteredOAuth2AuthorizedClient OAuth2AuthorizedClient authorizedClient, @AuthenticationPrincipal OAuth2User oauth2User,  @AT@ 1201 @LENGTH@ 388
---UPD SingleVariableDeclaration@@@OAuth2Client OAuth2AuthorizedClient authorizedClient @TO@ @RegisteredOAuth2AuthorizedClient OAuth2AuthorizedClient authorizedClient @AT@ 1240 @LENGTH@ 53


INS VariableDeclarationStatement@@Map<String,Object> configurationMetadata=new LinkedHashMap<>(metadata.toJSONObject()); @TO@ MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:fromOidcIssuerLocation, String issuer,  @AT@ 4036 @LENGTH@ 89
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> configurationMetadata=new LinkedHashMap<>(metadata.toJSONObject()); @AT@ 4036 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 4036 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 4040 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 4048 @LENGTH@ 6
---INS VariableDeclarationFragment@@configurationMetadata=new LinkedHashMap<>(metadata.toJSONObject()) @TO@ VariableDeclarationStatement@@Map<String,Object> configurationMetadata=new LinkedHashMap<>(metadata.toJSONObject()); @AT@ 4056 @LENGTH@ 68
------INS SimpleName@@configurationMetadata @TO@ VariableDeclarationFragment@@configurationMetadata=new LinkedHashMap<>(metadata.toJSONObject()) @AT@ 4056 @LENGTH@ 21
------INS ClassInstanceCreation@@LinkedHashMap<>[metadata.toJSONObject()] @TO@ VariableDeclarationFragment@@configurationMetadata=new LinkedHashMap<>(metadata.toJSONObject()) @AT@ 4080 @LENGTH@ 44
---------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashMap<>[metadata.toJSONObject()] @AT@ 4080 @LENGTH@ 3
---------INS ParameterizedType@@LinkedHashMap<> @TO@ ClassInstanceCreation@@LinkedHashMap<>[metadata.toJSONObject()] @AT@ 4084 @LENGTH@ 15
------------INS SimpleType@@LinkedHashMap @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 4084 @LENGTH@ 13
---------INS MethodInvocation@@metadata.toJSONObject() @TO@ ClassInstanceCreation@@LinkedHashMap<>[metadata.toJSONObject()] @AT@ 4100 @LENGTH@ 23
------------INS SimpleName@@Name:metadata @TO@ MethodInvocation@@metadata.toJSONObject() @AT@ 4100 @LENGTH@ 8
------------INS SimpleName@@MethodName:toJSONObject:[] @TO@ MethodInvocation@@metadata.toJSONObject() @AT@ 4109 @LENGTH@ 14


UPD MethodDeclaration@@public, Class, MethodName:getObjectType,  @TO@ public, Class<?>, MethodName:getObjectType,  @AT@ 3319 @LENGTH@ 83
---INS ParameterizedType@@Class<?> @TO@ MethodDeclaration@@public, Class, MethodName:getObjectType,  @AT@ 3326 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3326 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3332 @LENGTH@ 1
---DEL SimpleType@@Class @AT@ 3326 @LENGTH@ 5


UPD IfStatement@@if (rowInBatch >= batch.size) {  return super.nextBatch(theirBatch);} @TO@ if (rowInBatch >= batch.size) {  if (batch.size > 0) {    batch.reset();  }  baseRow=super.getRowNumber();  rowInBatch=0;  return super.nextBatch(theirBatch);} @AT@ 5529 @LENGTH@ 79
---UPD Block@@ThenBody:{  return super.nextBatch(theirBatch);} @TO@ ThenBody:{  if (batch.size > 0) {    batch.reset();  }  baseRow=super.getRowNumber();  rowInBatch=0;  return super.nextBatch(theirBatch);} @AT@ 5559 @LENGTH@ 49
------INS IfStatement@@if (batch.size > 0) {  batch.reset();} @TO@ Block@@ThenBody:{  return super.nextBatch(theirBatch);} @AT@ 5567 @LENGTH@ 116
---------INS InfixExpression@@batch.size > 0 @TO@ IfStatement@@if (batch.size > 0) {  batch.reset();} @AT@ 5571 @LENGTH@ 14
------------INS QualifiedName@@batch.size @TO@ InfixExpression@@batch.size > 0 @AT@ 5571 @LENGTH@ 10
---------------INS SimpleName@@batch @TO@ QualifiedName@@batch.size @AT@ 5571 @LENGTH@ 5
---------------INS SimpleName@@size @TO@ QualifiedName@@batch.size @AT@ 5577 @LENGTH@ 4
------------INS Operator@@> @TO@ InfixExpression@@batch.size > 0 @AT@ 5581 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@batch.size > 0 @AT@ 5584 @LENGTH@ 1
---------INS Block@@ThenBody:{  batch.reset();} @TO@ IfStatement@@if (batch.size > 0) {  batch.reset();} @AT@ 5587 @LENGTH@ 96
------------INS ExpressionStatement@@MethodInvocation:batch.reset() @TO@ Block@@ThenBody:{  batch.reset();} @AT@ 5661 @LENGTH@ 14
---------------INS MethodInvocation@@batch.reset() @TO@ ExpressionStatement@@MethodInvocation:batch.reset() @AT@ 5661 @LENGTH@ 13
------------------INS SimpleName@@Name:batch @TO@ MethodInvocation@@batch.reset() @AT@ 5661 @LENGTH@ 5
------------------INS SimpleName@@MethodName:reset:[] @TO@ MethodInvocation@@batch.reset() @AT@ 5667 @LENGTH@ 7
------INS ExpressionStatement@@Assignment:baseRow=super.getRowNumber() @TO@ Block@@ThenBody:{  return super.nextBatch(theirBatch);} @AT@ 5690 @LENGTH@ 31
---------INS Assignment@@baseRow=super.getRowNumber() @TO@ ExpressionStatement@@Assignment:baseRow=super.getRowNumber() @AT@ 5690 @LENGTH@ 30
------------INS SimpleName@@baseRow @TO@ Assignment@@baseRow=super.getRowNumber() @AT@ 5690 @LENGTH@ 7
------------INS Operator@@= @TO@ Assignment@@baseRow=super.getRowNumber() @AT@ 5697 @LENGTH@ 1
------------INS SuperMethodInvocation@@super.getRowNumber() @TO@ Assignment@@baseRow=super.getRowNumber() @AT@ 5700 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getRowNumber:[] @TO@ SuperMethodInvocation@@super.getRowNumber() @AT@ 5706 @LENGTH@ 12
------INS ExpressionStatement@@Assignment:rowInBatch=0 @TO@ Block@@ThenBody:{  return super.nextBatch(theirBatch);} @AT@ 5728 @LENGTH@ 15
---------INS Assignment@@rowInBatch=0 @TO@ ExpressionStatement@@Assignment:rowInBatch=0 @AT@ 5728 @LENGTH@ 14
------------INS SimpleName@@rowInBatch @TO@ Assignment@@rowInBatch=0 @AT@ 5728 @LENGTH@ 10
------------INS Operator@@= @TO@ Assignment@@rowInBatch=0 @AT@ 5738 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ Assignment@@rowInBatch=0 @AT@ 5741 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString,  @TO@ TypeDeclaration@@[public]DefaultOAuth2AuthorizationRequestResolverTests,  @AT@ 8382 @LENGTH@ 783
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString,  @AT@ 8382 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString,  @AT@ 8389 @LENGTH@ 4
---INS SimpleName@@MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString,  @AT@ 8394 @LENGTH@ 93
---INS VariableDeclarationStatement@@ClientRegistration clientRegistration=this.registration2; @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString,  @AT@ 8494 @LENGTH@ 59
------INS SimpleType@@ClientRegistration @TO@ VariableDeclarationStatement@@ClientRegistration clientRegistration=this.registration2; @AT@ 8494 @LENGTH@ 18
------INS VariableDeclarationFragment@@clientRegistration=this.registration2 @TO@ VariableDeclarationStatement@@ClientRegistration clientRegistration=this.registration2; @AT@ 8513 @LENGTH@ 39
---------INS SimpleName@@clientRegistration @TO@ VariableDeclarationFragment@@clientRegistration=this.registration2 @AT@ 8513 @LENGTH@ 18
---------INS FieldAccess@@this.registration2 @TO@ VariableDeclarationFragment@@clientRegistration=this.registration2 @AT@ 8534 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration2 @AT@ 8534 @LENGTH@ 4
------------INS SimpleName@@registration2 @TO@ FieldAccess@@this.registration2 @AT@ 8539 @LENGTH@ 13
---INS VariableDeclarationStatement@@String requestUri=this.authorizationRequestBaseUri + "/" + clientRegistration.getRegistrationId(); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString,  @AT@ 8556 @LENGTH@ 100
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String requestUri=this.authorizationRequestBaseUri + "/" + clientRegistration.getRegistrationId(); @AT@ 8556 @LENGTH@ 6
------INS VariableDeclarationFragment@@requestUri=this.authorizationRequestBaseUri + "/" + clientRegistration.getRegistrationId() @TO@ VariableDeclarationStatement@@String requestUri=this.authorizationRequestBaseUri + "/" + clientRegistration.getRegistrationId(); @AT@ 8563 @LENGTH@ 92
---------INS SimpleName@@requestUri @TO@ VariableDeclarationFragment@@requestUri=this.authorizationRequestBaseUri + "/" + clientRegistration.getRegistrationId() @AT@ 8563 @LENGTH@ 10
---------INS InfixExpression@@this.authorizationRequestBaseUri + "/" + clientRegistration.getRegistrationId() @TO@ VariableDeclarationFragment@@requestUri=this.authorizationRequestBaseUri + "/" + clientRegistration.getRegistrationId() @AT@ 8576 @LENGTH@ 79
------------INS FieldAccess@@this.authorizationRequestBaseUri @TO@ InfixExpression@@this.authorizationRequestBaseUri + "/" + clientRegistration.getRegistrationId() @AT@ 8576 @LENGTH@ 32
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationRequestBaseUri @AT@ 8576 @LENGTH@ 4
---------------INS SimpleName@@authorizationRequestBaseUri @TO@ FieldAccess@@this.authorizationRequestBaseUri @AT@ 8581 @LENGTH@ 27
------------INS Operator@@+ @TO@ InfixExpression@@this.authorizationRequestBaseUri + "/" + clientRegistration.getRegistrationId() @AT@ 8608 @LENGTH@ 1
------------INS StringLiteral@@"/" @TO@ InfixExpression@@this.authorizationRequestBaseUri + "/" + clientRegistration.getRegistrationId() @AT@ 8611 @LENGTH@ 3
------------INS MethodInvocation@@clientRegistration.getRegistrationId() @TO@ InfixExpression@@this.authorizationRequestBaseUri + "/" + clientRegistration.getRegistrationId() @AT@ 8617 @LENGTH@ 38
---------------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getRegistrationId() @AT@ 8617 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@clientRegistration.getRegistrationId() @AT@ 8636 @LENGTH@ 19
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("GET",requestUri); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString,  @AT@ 8659 @LENGTH@ 79
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("GET",requestUri); @AT@ 8659 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest("GET",requestUri) @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("GET",requestUri); @AT@ 8682 @LENGTH@ 55
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest("GET",requestUri) @AT@ 8682 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest["GET", requestUri] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest("GET",requestUri) @AT@ 8692 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", requestUri] @AT@ 8692 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", requestUri] @AT@ 8696 @LENGTH@ 22
------------INS StringLiteral@@"GET" @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", requestUri] @AT@ 8719 @LENGTH@ 5
------------INS SimpleName@@requestUri @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", requestUri] @AT@ 8726 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:request.setServletPath(requestUri) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString,  @AT@ 8741 @LENGTH@ 35
------INS MethodInvocation@@request.setServletPath(requestUri) @TO@ ExpressionStatement@@MethodInvocation:request.setServletPath(requestUri) @AT@ 8741 @LENGTH@ 34
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setServletPath(requestUri) @AT@ 8741 @LENGTH@ 7
---------INS SimpleName@@MethodName:setServletPath:[requestUri] @TO@ MethodInvocation@@request.setServletPath(requestUri) @AT@ 8749 @LENGTH@ 26
------------INS SimpleName@@requestUri @TO@ SimpleName@@MethodName:setServletPath:[requestUri] @AT@ 8764 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:request.setQueryString("foo=bar") @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString,  @AT@ 8779 @LENGTH@ 34
------INS MethodInvocation@@request.setQueryString("foo=bar") @TO@ ExpressionStatement@@MethodInvocation:request.setQueryString("foo=bar") @AT@ 8779 @LENGTH@ 33
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setQueryString("foo=bar") @AT@ 8779 @LENGTH@ 7
---------INS SimpleName@@MethodName:setQueryString:["foo=bar"] @TO@ MethodInvocation@@request.setQueryString("foo=bar") @AT@ 8787 @LENGTH@ 25
------------INS StringLiteral@@"foo=bar" @TO@ SimpleName@@MethodName:setQueryString:["foo=bar"] @AT@ 8802 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=this.resolver.resolve(request); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString,  @AT@ 8817 @LENGTH@ 81
------INS SimpleType@@OAuth2AuthorizationRequest @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=this.resolver.resolve(request); @AT@ 8817 @LENGTH@ 26
------INS VariableDeclarationFragment@@authorizationRequest=this.resolver.resolve(request) @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=this.resolver.resolve(request); @AT@ 8844 @LENGTH@ 53
---------INS SimpleName@@authorizationRequest @TO@ VariableDeclarationFragment@@authorizationRequest=this.resolver.resolve(request) @AT@ 8844 @LENGTH@ 20
---------INS MethodInvocation@@this.resolver.resolve(request) @TO@ VariableDeclarationFragment@@authorizationRequest=this.resolver.resolve(request) @AT@ 8867 @LENGTH@ 30
------------INS FieldAccess@@this.resolver @TO@ MethodInvocation@@this.resolver.resolve(request) @AT@ 8867 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.resolver @AT@ 8867 @LENGTH@ 4
---------------INS SimpleName@@resolver @TO@ FieldAccess@@this.resolver @AT@ 8872 @LENGTH@ 8
------------INS SimpleName@@MethodName:resolve:[request] @TO@ MethodInvocation@@this.resolver.resolve(request) @AT@ 8881 @LENGTH@ 16
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:resolve:[request] @AT@ 8889 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getRedirectUri()).isNotEqualTo(clientRegistration.getRedirectUriTemplate()) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString,  @AT@ 8901 @LENGTH@ 113
------INS MethodInvocation@@assertThat(authorizationRequest.getRedirectUri()).isNotEqualTo(clientRegistration.getRedirectUriTemplate()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getRedirectUri()).isNotEqualTo(clientRegistration.getRedirectUriTemplate()) @AT@ 8901 @LENGTH@ 112
---------INS MethodInvocation@@MethodName:assertThat:[authorizationRequest.getRedirectUri()] @TO@ MethodInvocation@@assertThat(authorizationRequest.getRedirectUri()).isNotEqualTo(clientRegistration.getRedirectUriTemplate()) @AT@ 8901 @LENGTH@ 49
------------INS MethodInvocation@@authorizationRequest.getRedirectUri() @TO@ MethodInvocation@@MethodName:assertThat:[authorizationRequest.getRedirectUri()] @AT@ 8912 @LENGTH@ 37
---------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getRedirectUri() @AT@ 8912 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getRedirectUri:[] @TO@ MethodInvocation@@authorizationRequest.getRedirectUri() @AT@ 8933 @LENGTH@ 16
---------INS SimpleName@@MethodName:isNotEqualTo:[clientRegistration.getRedirectUriTemplate()] @TO@ MethodInvocation@@assertThat(authorizationRequest.getRedirectUri()).isNotEqualTo(clientRegistration.getRedirectUriTemplate()) @AT@ 8951 @LENGTH@ 62
------------INS MethodInvocation@@clientRegistration.getRedirectUriTemplate() @TO@ SimpleName@@MethodName:isNotEqualTo:[clientRegistration.getRedirectUriTemplate()] @AT@ 8969 @LENGTH@ 43
---------------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getRedirectUriTemplate() @AT@ 8969 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getRedirectUriTemplate:[] @TO@ MethodInvocation@@clientRegistration.getRedirectUriTemplate() @AT@ 8988 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getRedirectUri()).isEqualTo("http://localhost/login/oauth2/code/" + clientRegistration.getRegistrationId()) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpandedExcludesQueryString,  @AT@ 9017 @LENGTH@ 145
------INS MethodInvocation@@assertThat(authorizationRequest.getRedirectUri()).isEqualTo("http://localhost/login/oauth2/code/" + clientRegistration.getRegistrationId()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getRedirectUri()).isEqualTo("http://localhost/login/oauth2/code/" + clientRegistration.getRegistrationId()) @AT@ 9017 @LENGTH@ 144
---------INS MethodInvocation@@MethodName:assertThat:[authorizationRequest.getRedirectUri()] @TO@ MethodInvocation@@assertThat(authorizationRequest.getRedirectUri()).isEqualTo("http://localhost/login/oauth2/code/" + clientRegistration.getRegistrationId()) @AT@ 9017 @LENGTH@ 49
------------INS MethodInvocation@@authorizationRequest.getRedirectUri() @TO@ MethodInvocation@@MethodName:assertThat:[authorizationRequest.getRedirectUri()] @AT@ 9028 @LENGTH@ 37
---------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getRedirectUri() @AT@ 9028 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getRedirectUri:[] @TO@ MethodInvocation@@authorizationRequest.getRedirectUri() @AT@ 9049 @LENGTH@ 16
---------INS SimpleName@@MethodName:isEqualTo:["http://localhost/login/oauth2/code/" + clientRegistration.getRegistrationId()] @TO@ MethodInvocation@@assertThat(authorizationRequest.getRedirectUri()).isEqualTo("http://localhost/login/oauth2/code/" + clientRegistration.getRegistrationId()) @AT@ 9067 @LENGTH@ 94
------------INS InfixExpression@@"http://localhost/login/oauth2/code/" + clientRegistration.getRegistrationId() @TO@ SimpleName@@MethodName:isEqualTo:["http://localhost/login/oauth2/code/" + clientRegistration.getRegistrationId()] @AT@ 9082 @LENGTH@ 78
---------------INS StringLiteral@@"http://localhost/login/oauth2/code/" @TO@ InfixExpression@@"http://localhost/login/oauth2/code/" + clientRegistration.getRegistrationId() @AT@ 9082 @LENGTH@ 37
---------------INS Operator@@+ @TO@ InfixExpression@@"http://localhost/login/oauth2/code/" + clientRegistration.getRegistrationId() @AT@ 9119 @LENGTH@ 1
---------------INS MethodInvocation@@clientRegistration.getRegistrationId() @TO@ InfixExpression@@"http://localhost/login/oauth2/code/" + clientRegistration.getRegistrationId() @AT@ 9122 @LENGTH@ 38
------------------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getRegistrationId() @AT@ 9122 @LENGTH@ 18
------------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@clientRegistration.getRegistrationId() @AT@ 9141 @LENGTH@ 19


UPD IfStatement@@if (printerName.endsWith(printer)) {  position=i;  break;} @TO@ if (printer.endsWith(printerName)) {  position=i;  break;} @AT@ 6477 @LENGTH@ 103
---UPD MethodInvocation@@printerName.endsWith(printer) @TO@ printer.endsWith(printerName) @AT@ 6481 @LENGTH@ 29
------UPD SimpleName@@Name:printerName @TO@ Name:printer @AT@ 6481 @LENGTH@ 11
------UPD SimpleName@@MethodName:endsWith:[printer] @TO@ MethodName:endsWith:[printerName] @AT@ 6493 @LENGTH@ 17
---------UPD SimpleName@@printer @TO@ printerName @AT@ 6502 @LENGTH@ 7


UPD VariableDeclarationStatement@@int broken_index=(i + 4) % test_vectors.length; @TO@ int broken_index=(i + 8) % test_vectors.length; @AT@ 5727 @LENGTH@ 49
---UPD VariableDeclarationFragment@@broken_index=(i + 4) % test_vectors.length @TO@ broken_index=(i + 8) % test_vectors.length @AT@ 5731 @LENGTH@ 44
------UPD InfixExpression@@(i + 4) % test_vectors.length @TO@ (i + 8) % test_vectors.length @AT@ 5746 @LENGTH@ 29
---------UPD ParenthesizedExpression@@(i + 4) @TO@ (i + 8) @AT@ 5746 @LENGTH@ 7
------------UPD InfixExpression@@i + 4 @TO@ i + 8 @AT@ 5747 @LENGTH@ 5
---------------UPD NumberLiteral@@4 @TO@ 8 @AT@ 5751 @LENGTH@ 1


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(SecurityBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(SecurityServiceConfigurator::new); @AT@ 4830 @LENGTH@ 88
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(SecurityBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(SecurityServiceConfigurator::new) @AT@ 4853 @LENGTH@ 64
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[SecurityBuilder::new] @TO@ SimpleResourceServiceHandler[SecurityServiceConfigurator::new] @AT@ 4863 @LENGTH@ 54


UPD TypeDeclaration@@[final]AesBytesEncryptor, [BytesEncryptor] @TO@ [public, final]AesBytesEncryptor, [BytesEncryptor] @AT@ 1728 @LENGTH@ 3260
---INS Modifier@@public @TO@ TypeDeclaration@@[final]AesBytesEncryptor, [BytesEncryptor] @AT@ 1728 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:constructorMapClientRegistrationWhenNullThenIllegalArgumentException,  @TO@ TypeDeclaration@@[public]InMemoryClientRegistrationRepositoryTests,  @AT@ 2169 @LENGTH@ 171
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:constructorMapClientRegistrationWhenNullThenIllegalArgumentException,  @AT@ 2169 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:constructorMapClientRegistrationWhenNullThenIllegalArgumentException,  @AT@ 2176 @LENGTH@ 4
---INS SimpleName@@MethodName:constructorMapClientRegistrationWhenNullThenIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:constructorMapClientRegistrationWhenNullThenIllegalArgumentException,  @AT@ 2181 @LENGTH@ 68
---INS ExpressionStatement@@ClassInstanceCreation:new InMemoryClientRegistrationRepository((Map<String,ClientRegistration>)null) @TO@ MethodDeclaration@@public, void, MethodName:constructorMapClientRegistrationWhenNullThenIllegalArgumentException,  @AT@ 2256 @LENGTH@ 81
------INS ClassInstanceCreation@@InMemoryClientRegistrationRepository[(Map<String,ClientRegistration>)null] @TO@ ExpressionStatement@@ClassInstanceCreation:new InMemoryClientRegistrationRepository((Map<String,ClientRegistration>)null) @AT@ 2256 @LENGTH@ 80
---------INS New@@new @TO@ ClassInstanceCreation@@InMemoryClientRegistrationRepository[(Map<String,ClientRegistration>)null] @AT@ 2256 @LENGTH@ 3
---------INS SimpleType@@InMemoryClientRegistrationRepository @TO@ ClassInstanceCreation@@InMemoryClientRegistrationRepository[(Map<String,ClientRegistration>)null] @AT@ 2260 @LENGTH@ 36
---------INS CastExpression@@(Map<String,ClientRegistration>)null @TO@ ClassInstanceCreation@@InMemoryClientRegistrationRepository[(Map<String,ClientRegistration>)null] @AT@ 2297 @LENGTH@ 38
------------INS ParameterizedType@@Map<String,ClientRegistration> @TO@ CastExpression@@(Map<String,ClientRegistration>)null @AT@ 2298 @LENGTH@ 31
---------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,ClientRegistration> @AT@ 2298 @LENGTH@ 3
---------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,ClientRegistration> @AT@ 2302 @LENGTH@ 6
---------------INS SimpleType@@ClientRegistration @TO@ ParameterizedType@@Map<String,ClientRegistration> @AT@ 2310 @LENGTH@ 18
------------INS NullLiteral@@null @TO@ CastExpression@@(Map<String,ClientRegistration>)null @AT@ 2331 @LENGTH@ 4


UPD IfStatement@@if (authorization == null) {  return Mono.empty();} @TO@ if (authorization == null || !authorization.toLowerCase().startsWith("basic ")) {  return Mono.empty();} @AT@ 1610 @LENGTH@ 55
---INS InfixExpression@@authorization == null || !authorization.toLowerCase().startsWith("basic ") @TO@ IfStatement@@if (authorization == null) {  return Mono.empty();} @AT@ 1613 @LENGTH@ 74
------INS InfixExpression@@authorization == null @TO@ InfixExpression@@authorization == null || !authorization.toLowerCase().startsWith("basic ") @AT@ 1613 @LENGTH@ 21
---------MOV SimpleName@@authorization @TO@ InfixExpression@@authorization == null @AT@ 1613 @LENGTH@ 13
---------MOV Operator@@== @TO@ InfixExpression@@authorization == null @AT@ 1626 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@authorization == null @AT@ 1630 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@authorization == null || !authorization.toLowerCase().startsWith("basic ") @AT@ 1634 @LENGTH@ 2
------INS PrefixExpression@@!authorization.toLowerCase().startsWith("basic ") @TO@ InfixExpression@@authorization == null || !authorization.toLowerCase().startsWith("basic ") @AT@ 1638 @LENGTH@ 49
---------INS Operator@@! @TO@ PrefixExpression@@!authorization.toLowerCase().startsWith("basic ") @AT@ 1638 @LENGTH@ 1
---------INS MethodInvocation@@authorization.toLowerCase().startsWith("basic ") @TO@ PrefixExpression@@!authorization.toLowerCase().startsWith("basic ") @AT@ 1639 @LENGTH@ 48
------------INS MethodInvocation@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@authorization.toLowerCase().startsWith("basic ") @AT@ 1639 @LENGTH@ 27
------------INS SimpleName@@Name:authorization @TO@ MethodInvocation@@authorization.toLowerCase().startsWith("basic ") @AT@ 1639 @LENGTH@ 13
------------INS SimpleName@@MethodName:startsWith:["basic "] @TO@ MethodInvocation@@authorization.toLowerCase().startsWith("basic ") @AT@ 1667 @LENGTH@ 20
---------------INS StringLiteral@@"basic " @TO@ SimpleName@@MethodName:startsWith:["basic "] @AT@ 1678 @LENGTH@ 8
---DEL InfixExpression@@authorization == null @AT@ 1613 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().requestCache().requestCache(requestCache).and().oauth2().client().authorizationCodeGrant().authorizationEndpoint().authorizationRequestResolver(authorizationRequestResolver).and().tokenEndpoint().accessTokenResponseClient(accessTokenResponseClient) @TO@ MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().requestCache().requestCache(requestCache).and().oauth2().client().authorizationCodeGrant().authorizationRequestResolver(authorizationRequestResolver).accessTokenResponseClient(accessTokenResponseClient) @AT@ 10870 @LENGTH@ 404
---UPD MethodInvocation@@http.authorizeRequests().anyRequest().authenticated().and().requestCache().requestCache(requestCache).and().oauth2().client().authorizationCodeGrant().authorizationEndpoint().authorizationRequestResolver(authorizationRequestResolver).and().tokenEndpoint().accessTokenResponseClient(accessTokenResponseClient) @TO@ http.authorizeRequests().anyRequest().authenticated().and().requestCache().requestCache(requestCache).and().oauth2().client().authorizationCodeGrant().authorizationRequestResolver(authorizationRequestResolver).accessTokenResponseClient(accessTokenResponseClient) @AT@ 10870 @LENGTH@ 403
------DEL MethodInvocation@@MethodName:tokenEndpoint:[] @AT@ 10870 @LENGTH@ 341
------DEL MethodInvocation@@MethodName:and:[] @AT@ 10870 @LENGTH@ 317
------DEL MethodInvocation@@MethodName:authorizationEndpoint:[] @AT@ 10870 @LENGTH@ 234


UPD ExpressionStatement@@MethodInvocation:this.headers.hsts().includeSubdomains(false) @TO@ MethodInvocation:this.headers.hsts().maxAge(Duration.ofSeconds(60)).includeSubdomains(false) @AT@ 4017 @LENGTH@ 45
---UPD MethodInvocation@@this.headers.hsts().includeSubdomains(false) @TO@ this.headers.hsts().maxAge(Duration.ofSeconds(60)).includeSubdomains(false) @AT@ 4017 @LENGTH@ 44
------MOV MethodInvocation@@this.headers.hsts().maxAge(Duration.ofSeconds(60)) @TO@ MethodInvocation@@this.headers.hsts().includeSubdomains(false) @AT@ 3963 @LENGTH@ 50
---------DEL MethodInvocation@@MethodName:hsts:[] @AT@ 3963 @LENGTH@ 19
---------DEL FieldAccess@@this.headers @AT@ 3963 @LENGTH@ 12
------------DEL ThisExpression@@this @AT@ 3963 @LENGTH@ 4
------------DEL SimpleName@@headers @AT@ 3968 @LENGTH@ 7
---------DEL SimpleName@@MethodName:maxAge:[Duration.ofSeconds(60)] @AT@ 3983 @LENGTH@ 30
---------MOV MethodInvocation@@Duration.ofSeconds(60) @TO@ MethodInvocation@@this.headers.hsts().maxAge(Duration.ofSeconds(60)) @AT@ 3990 @LENGTH@ 22


INS MethodDeclaration@@public, void, MethodName:toStringThenFormatted,  @TO@ TypeDeclaration@@[public]ELRequestMatcherTests,  @AT@ 3047 @LENGTH@ 234
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:toStringThenFormatted,  @AT@ 3047 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:toStringThenFormatted,  @AT@ 3054 @LENGTH@ 4
---INS SimpleName@@MethodName:toStringThenFormatted @TO@ MethodDeclaration@@public, void, MethodName:toStringThenFormatted,  @AT@ 3059 @LENGTH@ 21
---INS VariableDeclarationStatement@@ELRequestMatcher requestMatcher=new ELRequestMatcher("hasHeader('User-Agent','MSIE')"); @TO@ MethodDeclaration@@public, void, MethodName:toStringThenFormatted,  @AT@ 3087 @LENGTH@ 94
------INS SimpleType@@ELRequestMatcher @TO@ VariableDeclarationStatement@@ELRequestMatcher requestMatcher=new ELRequestMatcher("hasHeader('User-Agent','MSIE')"); @AT@ 3087 @LENGTH@ 16
------INS VariableDeclarationFragment@@requestMatcher=new ELRequestMatcher("hasHeader('User-Agent','MSIE')") @TO@ VariableDeclarationStatement@@ELRequestMatcher requestMatcher=new ELRequestMatcher("hasHeader('User-Agent','MSIE')"); @AT@ 3104 @LENGTH@ 76
---------INS SimpleName@@requestMatcher @TO@ VariableDeclarationFragment@@requestMatcher=new ELRequestMatcher("hasHeader('User-Agent','MSIE')") @AT@ 3104 @LENGTH@ 14
---------INS ClassInstanceCreation@@ELRequestMatcher["hasHeader('User-Agent','MSIE')"] @TO@ VariableDeclarationFragment@@requestMatcher=new ELRequestMatcher("hasHeader('User-Agent','MSIE')") @AT@ 3121 @LENGTH@ 59
------------INS New@@new @TO@ ClassInstanceCreation@@ELRequestMatcher["hasHeader('User-Agent','MSIE')"] @AT@ 3121 @LENGTH@ 3
------------INS SimpleType@@ELRequestMatcher @TO@ ClassInstanceCreation@@ELRequestMatcher["hasHeader('User-Agent','MSIE')"] @AT@ 3125 @LENGTH@ 16
------------INS StringLiteral@@"hasHeader('User-Agent','MSIE')" @TO@ ClassInstanceCreation@@ELRequestMatcher["hasHeader('User-Agent','MSIE')"] @AT@ 3147 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:assertThat(requestMatcher.toString()).isEqualTo("EL [el=\"hasHeader('User-Agent','MSIE')\"]") @TO@ MethodDeclaration@@public, void, MethodName:toStringThenFormatted,  @AT@ 3184 @LENGTH@ 94
------INS MethodInvocation@@assertThat(requestMatcher.toString()).isEqualTo("EL [el=\"hasHeader('User-Agent','MSIE')\"]") @TO@ ExpressionStatement@@MethodInvocation:assertThat(requestMatcher.toString()).isEqualTo("EL [el=\"hasHeader('User-Agent','MSIE')\"]") @AT@ 3184 @LENGTH@ 93
---------INS MethodInvocation@@MethodName:assertThat:[requestMatcher.toString()] @TO@ MethodInvocation@@assertThat(requestMatcher.toString()).isEqualTo("EL [el=\"hasHeader('User-Agent','MSIE')\"]") @AT@ 3184 @LENGTH@ 37
------------INS MethodInvocation@@requestMatcher.toString() @TO@ MethodInvocation@@MethodName:assertThat:[requestMatcher.toString()] @AT@ 3195 @LENGTH@ 25
---------------INS SimpleName@@Name:requestMatcher @TO@ MethodInvocation@@requestMatcher.toString() @AT@ 3195 @LENGTH@ 14
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@requestMatcher.toString() @AT@ 3210 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:["EL [el=\"hasHeader('User-Agent','MSIE')\"]"] @TO@ MethodInvocation@@assertThat(requestMatcher.toString()).isEqualTo("EL [el=\"hasHeader('User-Agent','MSIE')\"]") @AT@ 3222 @LENGTH@ 55
------------INS StringLiteral@@"EL [el=\"hasHeader('User-Agent','MSIE')\"]" @TO@ SimpleName@@MethodName:isEqualTo:["EL [el=\"hasHeader('User-Agent','MSIE')\"]"] @AT@ 3232 @LENGTH@ 44


UPD IfStatement@@if (this.context != null) {  CachingConnectionFactory cf=this.context.getBean(CachingConnectionFactory.class);  this.context.close();  assertTrue(TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class).isTerminated());} @TO@ if (this.context != null) {  CachingConnectionFactory cf=this.context.getBean(CachingConnectionFactory.class);  this.context.close();  ExecutorService es=TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class);  if (es != null) {    assertTrue(es.isTerminated());  }} @AT@ 2111 @LENGTH@ 262
---UPD Block@@ThenBody:{  CachingConnectionFactory cf=this.context.getBean(CachingConnectionFactory.class);  this.context.close();  assertTrue(TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class).isTerminated());} @TO@ ThenBody:{  CachingConnectionFactory cf=this.context.getBean(CachingConnectionFactory.class);  this.context.close();  ExecutorService es=TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class);  if (es != null) {    assertTrue(es.isTerminated());  }} @AT@ 2137 @LENGTH@ 236
------DEL ExpressionStatement@@MethodInvocation:assertTrue(TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class).isTerminated()) @AT@ 2254 @LENGTH@ 115
---------DEL MethodInvocation@@assertTrue(TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class).isTerminated()) @AT@ 2254 @LENGTH@ 114
------------DEL SimpleName@@MethodName:assertTrue:[TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class).isTerminated()] @AT@ 2254 @LENGTH@ 114
---------------DEL MethodInvocation@@TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class).isTerminated() @AT@ 2265 @LENGTH@ 102
------------------DEL MethodInvocation@@MethodName:getPropertyValue:[cf, "deferredCloseExecutor", ThreadPoolExecutor.class] @AT@ 2265 @LENGTH@ 81
---------------------DEL SimpleName@@cf @AT@ 2292 @LENGTH@ 2
---------------------DEL StringLiteral@@"deferredCloseExecutor" @AT@ 2296 @LENGTH@ 23
---------------------DEL TypeLiteral@@ThreadPoolExecutor.class @AT@ 2321 @LENGTH@ 24
------------------DEL SimpleName@@Name:TestUtils @AT@ 2265 @LENGTH@ 9
------INS VariableDeclarationStatement@@ExecutorService es=TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class); @TO@ Block@@ThenBody:{  CachingConnectionFactory cf=this.context.getBean(CachingConnectionFactory.class);  this.context.close();  assertTrue(TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class).isTerminated());} @AT@ 2322 @LENGTH@ 103
---------INS SimpleType@@ExecutorService @TO@ VariableDeclarationStatement@@ExecutorService es=TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class); @AT@ 2322 @LENGTH@ 15
---------INS VariableDeclarationFragment@@es=TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class) @TO@ VariableDeclarationStatement@@ExecutorService es=TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class); @AT@ 2338 @LENGTH@ 86
------------INS SimpleName@@es @TO@ VariableDeclarationFragment@@es=TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class) @AT@ 2338 @LENGTH@ 2
------------INS MethodInvocation@@TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class) @TO@ VariableDeclarationFragment@@es=TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class) @AT@ 2343 @LENGTH@ 81
---------------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class) @AT@ 2343 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getPropertyValue:[cf, "deferredCloseExecutor", ThreadPoolExecutor.class] @TO@ MethodInvocation@@TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class) @AT@ 2353 @LENGTH@ 71
------------------INS SimpleName@@cf @TO@ SimpleName@@MethodName:getPropertyValue:[cf, "deferredCloseExecutor", ThreadPoolExecutor.class] @AT@ 2370 @LENGTH@ 2
------------------INS StringLiteral@@"deferredCloseExecutor" @TO@ SimpleName@@MethodName:getPropertyValue:[cf, "deferredCloseExecutor", ThreadPoolExecutor.class] @AT@ 2374 @LENGTH@ 23
------------------INS TypeLiteral@@ThreadPoolExecutor.class @TO@ SimpleName@@MethodName:getPropertyValue:[cf, "deferredCloseExecutor", ThreadPoolExecutor.class] @AT@ 2399 @LENGTH@ 24
------INS IfStatement@@if (es != null) {  assertTrue(es.isTerminated());} @TO@ Block@@ThenBody:{  CachingConnectionFactory cf=this.context.getBean(CachingConnectionFactory.class);  this.context.close();  assertTrue(TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class).isTerminated());} @AT@ 2429 @LENGTH@ 110
---------INS InfixExpression@@es != null @TO@ IfStatement@@if (es != null) {  assertTrue(es.isTerminated());} @AT@ 2433 @LENGTH@ 10
------------INS SimpleName@@es @TO@ InfixExpression@@es != null @AT@ 2433 @LENGTH@ 2
------------INS Operator@@!= @TO@ InfixExpression@@es != null @AT@ 2435 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@es != null @AT@ 2439 @LENGTH@ 4
---------INS Block@@ThenBody:{  assertTrue(es.isTerminated());} @TO@ IfStatement@@if (es != null) {  assertTrue(es.isTerminated());} @AT@ 2445 @LENGTH@ 94
------------INS ExpressionStatement@@MethodInvocation:assertTrue(es.isTerminated()) @TO@ Block@@ThenBody:{  assertTrue(es.isTerminated());} @AT@ 2504 @LENGTH@ 30
---------------INS MethodInvocation@@assertTrue(es.isTerminated()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(es.isTerminated()) @AT@ 2504 @LENGTH@ 29
------------------INS SimpleName@@MethodName:assertTrue:[es.isTerminated()] @TO@ MethodInvocation@@assertTrue(es.isTerminated()) @AT@ 2504 @LENGTH@ 29
---------------------INS MethodInvocation@@es.isTerminated() @TO@ SimpleName@@MethodName:assertTrue:[es.isTerminated()] @AT@ 2515 @LENGTH@ 17
------------------------MOV SimpleName@@MethodName:isTerminated:[] @TO@ MethodInvocation@@es.isTerminated() @AT@ 2353 @LENGTH@ 14
------------------------INS SimpleName@@Name:es @TO@ MethodInvocation@@es.isTerminated() @AT@ 2515 @LENGTH@ 2


UPD TryStatement@@try {  return doSendAndReceiveAsListener(exchange,routingKey,message,correlationData,channelHolder.getChannel());} catch (Exception e) {  container.releaseConsumerFor(channelHolder,false,null);  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @TO@ try {  Channel channel=channelHolder.getChannel();  if (this.confirmsOrReturnsCapable) {    addListener(channel);  }  return doSendAndReceiveAsListener(exchange,routingKey,message,correlationData,channel);} catch (Exception e) {  container.releaseConsumerFor(channelHolder,false,null);  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 66121 @LENGTH@ 285
---UPD ReturnStatement@@MethodInvocation:doSendAndReceiveAsListener(exchange,routingKey,message,correlationData,channelHolder.getChannel()) @TO@ MethodInvocation:doSendAndReceiveAsListener(exchange,routingKey,message,correlationData,channel) @AT@ 66130 @LENGTH@ 115
------UPD MethodInvocation@@doSendAndReceiveAsListener(exchange,routingKey,message,correlationData,channelHolder.getChannel()) @TO@ doSendAndReceiveAsListener(exchange,routingKey,message,correlationData,channel) @AT@ 66137 @LENGTH@ 107
---------UPD SimpleName@@MethodName:doSendAndReceiveAsListener:[exchange, routingKey, message, correlationData, channelHolder.getChannel()] @TO@ MethodName:doSendAndReceiveAsListener:[exchange, routingKey, message, correlationData, channel] @AT@ 66137 @LENGTH@ 107
------------DEL MethodInvocation@@channelHolder.getChannel() @AT@ 66217 @LENGTH@ 26
---------------DEL SimpleName@@Name:channelHolder @AT@ 66217 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:getChannel:[] @AT@ 66231 @LENGTH@ 12
------------INS SimpleName@@channel @TO@ SimpleName@@MethodName:doSendAndReceiveAsListener:[exchange, routingKey, message, correlationData, channelHolder.getChannel()] @AT@ 66332 @LENGTH@ 7
---INS VariableDeclarationStatement@@Channel channel=channelHolder.getChannel(); @TO@ TryStatement@@try {  return doSendAndReceiveAsListener(exchange,routingKey,message,correlationData,channelHolder.getChannel());} catch (Exception e) {  container.releaseConsumerFor(channelHolder,false,null);  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 66130 @LENGTH@ 45
------INS SimpleType@@Channel @TO@ VariableDeclarationStatement@@Channel channel=channelHolder.getChannel(); @AT@ 66130 @LENGTH@ 7
------INS VariableDeclarationFragment@@channel=channelHolder.getChannel() @TO@ VariableDeclarationStatement@@Channel channel=channelHolder.getChannel(); @AT@ 66138 @LENGTH@ 36
---------INS SimpleName@@channel @TO@ VariableDeclarationFragment@@channel=channelHolder.getChannel() @AT@ 66138 @LENGTH@ 7
---------INS MethodInvocation@@channelHolder.getChannel() @TO@ VariableDeclarationFragment@@channel=channelHolder.getChannel() @AT@ 66148 @LENGTH@ 26
------------INS SimpleName@@Name:channelHolder @TO@ MethodInvocation@@channelHolder.getChannel() @AT@ 66148 @LENGTH@ 13
------------INS SimpleName@@MethodName:getChannel:[] @TO@ MethodInvocation@@channelHolder.getChannel() @AT@ 66162 @LENGTH@ 12
---INS IfStatement@@if (this.confirmsOrReturnsCapable) {  addListener(channel);} @TO@ TryStatement@@try {  return doSendAndReceiveAsListener(exchange,routingKey,message,correlationData,channelHolder.getChannel());} catch (Exception e) {  container.releaseConsumerFor(channelHolder,false,null);  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 66179 @LENGTH@ 67
------INS FieldAccess@@this.confirmsOrReturnsCapable @TO@ IfStatement@@if (this.confirmsOrReturnsCapable) {  addListener(channel);} @AT@ 66183 @LENGTH@ 29
---------INS ThisExpression@@this @TO@ FieldAccess@@this.confirmsOrReturnsCapable @AT@ 66183 @LENGTH@ 4
---------INS SimpleName@@confirmsOrReturnsCapable @TO@ FieldAccess@@this.confirmsOrReturnsCapable @AT@ 66188 @LENGTH@ 24
------INS Block@@ThenBody:{  addListener(channel);} @TO@ IfStatement@@if (this.confirmsOrReturnsCapable) {  addListener(channel);} @AT@ 66214 @LENGTH@ 32
---------INS ExpressionStatement@@MethodInvocation:addListener(channel) @TO@ Block@@ThenBody:{  addListener(channel);} @AT@ 66220 @LENGTH@ 21
------------INS MethodInvocation@@addListener(channel) @TO@ ExpressionStatement@@MethodInvocation:addListener(channel) @AT@ 66220 @LENGTH@ 20
---------------INS SimpleName@@MethodName:addListener:[channel] @TO@ MethodInvocation@@addListener(channel) @AT@ 66220 @LENGTH@ 20
------------------INS SimpleName@@channel @TO@ SimpleName@@MethodName:addListener:[channel] @AT@ 66232 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:PartTreeNeo4jQuery, GraphQueryMethod graphQueryMethod, Session session,  @TO@ public, voidMethodName:PartTreeNeo4jQuery, GraphQueryMethod graphQueryMethod, MetaData metaData, Session session,  @AT@ 1505 @LENGTH@ 399
---UPD SuperConstructorInvocation@@super(graphQueryMethod,session);
 @TO@ super(graphQueryMethod,metaData,session);
 @AT@ 1587 @LENGTH@ 33
------INS SimpleName@@metaData @TO@ SuperConstructorInvocation@@super(graphQueryMethod,session);
 @AT@ 1670 @LENGTH@ 8
---INS SingleVariableDeclaration@@MetaData metaData @TO@ MethodDeclaration@@public, voidMethodName:PartTreeNeo4jQuery, GraphQueryMethod graphQueryMethod, Session session,  @AT@ 1606 @LENGTH@ 17
------INS SimpleType@@MetaData @TO@ SingleVariableDeclaration@@MetaData metaData @AT@ 1606 @LENGTH@ 8
------INS SimpleName@@metaData @TO@ SingleVariableDeclaration@@MetaData metaData @AT@ 1615 @LENGTH@ 8


UPD MethodDeclaration@@public, voidMethodName:OAuth2RefreshToken, String tokenValue, Instant issuedAt, Instant expiresAt,  @TO@ public, voidMethodName:OAuth2RefreshToken, String tokenValue, Instant issuedAt,  @AT@ 1638 @LENGTH@ 128
---DEL SingleVariableDeclaration@@Instant expiresAt @AT@ 1701 @LENGTH@ 17
------DEL SimpleType@@Instant @AT@ 1701 @LENGTH@ 7
------DEL SimpleName@@expiresAt @AT@ 1709 @LENGTH@ 9
---UPD SuperConstructorInvocation@@super(tokenValue,issuedAt,expiresAt);
 @TO@ super(tokenValue,issuedAt,null);
 @AT@ 1724 @LENGTH@ 39
------INS NullLiteral@@null @TO@ SuperConstructorInvocation@@super(tokenValue,issuedAt,expiresAt);
 @AT@ 1643 @LENGTH@ 4
------DEL SimpleName@@expiresAt @AT@ 1752 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:interruptAtStart, Exception,  @TO@ public, void, MethodName:interruptAtStart,  @AT@ 2558 @LENGTH@ 521
---DEL SimpleType@@Exception @AT@ 2596 @LENGTH@ 9
---UPD VariableDeclarationStatement@@final Thread main=Thread.currentThread(); @TO@ Thread main=Thread.currentThread(); @AT@ 2611 @LENGTH@ 43
------DEL Modifier@@final @AT@ 2611 @LENGTH@ 5


UPD MethodDeclaration@@protected, voidMethodName:SingletonServiceBuilderFactoryServiceConfiguratorProvider, CacheCapabilityServiceBuilderFactory<SingletonServiceBuilderFactory> factory,  @TO@ protected, voidMethodName:SingletonServiceBuilderFactoryServiceConfiguratorProvider, CacheCapabilityServiceConfiguratorFactory<SingletonServiceBuilderFactory> factory,  @AT@ 1560 @LENGTH@ 239
---UPD SingleVariableDeclaration@@CacheCapabilityServiceBuilderFactory<SingletonServiceBuilderFactory> factory @TO@ CacheCapabilityServiceConfiguratorFactory<SingletonServiceBuilderFactory> factory @AT@ 1628 @LENGTH@ 76
------UPD ParameterizedType@@CacheCapabilityServiceBuilderFactory<SingletonServiceBuilderFactory> @TO@ CacheCapabilityServiceConfiguratorFactory<SingletonServiceBuilderFactory> @AT@ 1628 @LENGTH@ 68
---------UPD SimpleType@@CacheCapabilityServiceBuilderFactory @TO@ CacheCapabilityServiceConfiguratorFactory @AT@ 1628 @LENGTH@ 36


UPD MethodDeclaration@@voidMethodName:AuthProtocolResourceDefinition, String name, UnaryOperator<ResourceDescriptor> configurator, ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory,  @TO@ voidMethodName:AuthProtocolResourceDefinition, String name, UnaryOperator<ResourceDescriptor> configurator, ResourceServiceConfiguratorFactory parentServiceConfiguratorFactory,  @AT@ 2894 @LENGTH@ 312
---UPD SingleVariableDeclaration@@ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory @TO@ ResourceServiceConfiguratorFactory parentServiceConfiguratorFactory @AT@ 2986 @LENGTH@ 66
------INS SimpleType@@ResourceServiceConfiguratorFactory @TO@ SingleVariableDeclaration@@ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory @AT@ 2892 @LENGTH@ 34
------DEL ParameterizedType@@ResourceServiceBuilderFactory<ChannelFactory> @AT@ 2986 @LENGTH@ 45
---------DEL SimpleType@@ResourceServiceBuilderFactory @AT@ 2986 @LENGTH@ 29
---------DEL SimpleType@@ChannelFactory @AT@ 3016 @LENGTH@ 14
------UPD SimpleName@@parentBuilderFactory @TO@ parentServiceConfiguratorFactory @AT@ 3032 @LENGTH@ 20
---UPD SuperConstructorInvocation@@super(pathElement(name),new ResourceDescriptorConfigurator(configurator),AuthProtocolConfigurationBuilder::new,parentBuilderFactory);
 @TO@ super(pathElement(name),new ResourceDescriptorConfigurator(configurator),AuthProtocolConfigurationServiceConfigurator::new,parentServiceConfiguratorFactory);
 @AT@ 3064 @LENGTH@ 136
------UPD SimpleName@@parentBuilderFactory @TO@ parentServiceConfiguratorFactory @AT@ 3178 @LENGTH@ 20


UPD VariableDeclarationStatement@@OAuth2User oauth2User=this.userService.loadUser(new OAuth2UserRequest(authorizationCodeAuthentication.getClientRegistration(),accessToken)); @TO@ OAuth2User oauth2User=this.userService.loadUser(new OAuth2UserRequest(authorizationCodeAuthentication.getClientRegistration(),accessToken,additionalParameters)); @AT@ 5279 @LENGTH@ 147
---UPD VariableDeclarationFragment@@oauth2User=this.userService.loadUser(new OAuth2UserRequest(authorizationCodeAuthentication.getClientRegistration(),accessToken)) @TO@ oauth2User=this.userService.loadUser(new OAuth2UserRequest(authorizationCodeAuthentication.getClientRegistration(),accessToken,additionalParameters)) @AT@ 5290 @LENGTH@ 135
------UPD MethodInvocation@@this.userService.loadUser(new OAuth2UserRequest(authorizationCodeAuthentication.getClientRegistration(),accessToken)) @TO@ this.userService.loadUser(new OAuth2UserRequest(authorizationCodeAuthentication.getClientRegistration(),accessToken,additionalParameters)) @AT@ 5303 @LENGTH@ 122
---------UPD SimpleName@@MethodName:loadUser:[new OAuth2UserRequest(authorizationCodeAuthentication.getClientRegistration(),accessToken)] @TO@ MethodName:loadUser:[new OAuth2UserRequest(authorizationCodeAuthentication.getClientRegistration(),accessToken,additionalParameters)] @AT@ 5320 @LENGTH@ 105
------------UPD ClassInstanceCreation@@OAuth2UserRequest[authorizationCodeAuthentication.getClientRegistration(), accessToken] @TO@ OAuth2UserRequest[authorizationCodeAuthentication.getClientRegistration(), accessToken, additionalParameters] @AT@ 5333 @LENGTH@ 91
---------------INS SimpleName@@additionalParameters @TO@ ClassInstanceCreation@@OAuth2UserRequest[authorizationCodeAuthentication.getClientRegistration(), accessToken] @AT@ 5540 @LENGTH@ 20


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @TO@ TypeDeclaration@@[public]OAuth2AuthorizedClient,  @AT@ 1699 @LENGTH@ 90
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1699 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1707 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1714 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1720 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1725 @LENGTH@ 63
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 1725 @LENGTH@ 16
------INS QualifiedName@@SpringSecurityCoreVersion.SERIAL_VERSION_UID @TO@ VariableDeclarationFragment@@serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 1744 @LENGTH@ 44
---------INS SimpleName@@SpringSecurityCoreVersion @TO@ QualifiedName@@SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 1744 @LENGTH@ 25
---------INS SimpleName@@SERIAL_VERSION_UID @TO@ QualifiedName@@SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 1770 @LENGTH@ 18


UPD MethodDeclaration@@public, int, MethodName:getHeaderPadCount,  @TO@ public, int, MethodName:getHeaderPadCount, Charset charset,  @AT@ 14725 @LENGTH@ 139
---DEL VariableDeclarationStatement@@long namesize=name != null ? name.length() : 0; @AT@ 14765 @LENGTH@ 49
------DEL PrimitiveType@@long @AT@ 14765 @LENGTH@ 4
------DEL VariableDeclarationFragment@@namesize=name != null ? name.length() : 0 @AT@ 14770 @LENGTH@ 43
---------DEL SimpleName@@namesize @AT@ 14770 @LENGTH@ 8
---------DEL ConditionalExpression@@name != null ? name.length() : 0 @AT@ 14781 @LENGTH@ 32
------------DEL InfixExpression@@name != null @AT@ 14781 @LENGTH@ 12
------------DEL MethodInvocation@@name.length() @AT@ 14796 @LENGTH@ 13
------------DEL NumberLiteral@@0 @AT@ 14812 @LENGTH@ 1
---UPD ReturnStatement@@MethodInvocation:getHeaderPadCount(namesize) @TO@ MethodInvocation:getHeaderPadCount(name.getBytes(charset).length) @AT@ 14823 @LENGTH@ 35
------UPD MethodInvocation@@getHeaderPadCount(namesize) @TO@ getHeaderPadCount(name.getBytes(charset).length) @AT@ 14830 @LENGTH@ 27
---------UPD SimpleName@@MethodName:getHeaderPadCount:[namesize] @TO@ MethodName:getHeaderPadCount:[name.getBytes(charset).length] @AT@ 14830 @LENGTH@ 27
------------DEL SimpleName@@namesize @AT@ 14848 @LENGTH@ 8
------------INS FieldAccess@@name.getBytes(charset).length @TO@ SimpleName@@MethodName:getHeaderPadCount:[namesize] @AT@ 15623 @LENGTH@ 29
---------------INS MethodInvocation@@name.getBytes(charset) @TO@ FieldAccess@@name.getBytes(charset).length @AT@ 15623 @LENGTH@ 22
------------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.getBytes(charset) @AT@ 15623 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getBytes:[charset] @TO@ MethodInvocation@@name.getBytes(charset) @AT@ 15628 @LENGTH@ 17
---------------------INS SimpleName@@charset @TO@ SimpleName@@MethodName:getBytes:[charset] @AT@ 15637 @LENGTH@ 7
---------------INS SimpleName@@length @TO@ FieldAccess@@name.getBytes(charset).length @AT@ 15646 @LENGTH@ 6
---INS SingleVariableDeclaration@@Charset charset @TO@ MethodDeclaration@@public, int, MethodName:getHeaderPadCount,  @AT@ 15422 @LENGTH@ 15
------INS SimpleType@@Charset @TO@ SingleVariableDeclaration@@Charset charset @AT@ 15422 @LENGTH@ 7
------INS SimpleName@@charset @TO@ SingleVariableDeclaration@@Charset charset @AT@ 15430 @LENGTH@ 7
---INS IfStatement@@if (name == null) {  return 0;} @TO@ MethodDeclaration@@public, int, MethodName:getHeaderPadCount,  @AT@ 15448 @LENGTH@ 49
------INS InfixExpression@@name == null @TO@ IfStatement@@if (name == null) {  return 0;} @AT@ 15452 @LENGTH@ 10
---------MOV SimpleName@@name @TO@ InfixExpression@@name == null @AT@ 14781 @LENGTH@ 4
---------MOV Operator@@!= @TO@ InfixExpression@@name == null @AT@ 14785 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@name == null @AT@ 14789 @LENGTH@ 4
------INS Block@@ThenBody:{  return 0;} @TO@ IfStatement@@if (name == null) {  return 0;} @AT@ 15464 @LENGTH@ 33
---------INS ReturnStatement@@NumberLiteral:0 @TO@ Block@@ThenBody:{  return 0;} @AT@ 15478 @LENGTH@ 9
------------INS NumberLiteral@@0 @TO@ ReturnStatement@@NumberLiteral:0 @AT@ 15485 @LENGTH@ 1
---INS IfStatement@@if (charset == null) {  return getHeaderPadCount(name.length());} @TO@ MethodDeclaration@@public, int, MethodName:getHeaderPadCount,  @AT@ 15506 @LENGTH@ 83
------INS InfixExpression@@charset == null @TO@ IfStatement@@if (charset == null) {  return getHeaderPadCount(name.length());} @AT@ 15510 @LENGTH@ 13
---------INS SimpleName@@charset @TO@ InfixExpression@@charset == null @AT@ 15510 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@charset == null @AT@ 15517 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@charset == null @AT@ 15519 @LENGTH@ 4
------INS Block@@ThenBody:{  return getHeaderPadCount(name.length());} @TO@ IfStatement@@if (charset == null) {  return getHeaderPadCount(name.length());} @AT@ 15525 @LENGTH@ 64
---------INS ReturnStatement@@MethodInvocation:getHeaderPadCount(name.length()) @TO@ Block@@ThenBody:{  return getHeaderPadCount(name.length());} @AT@ 15539 @LENGTH@ 40
------------INS MethodInvocation@@getHeaderPadCount(name.length()) @TO@ ReturnStatement@@MethodInvocation:getHeaderPadCount(name.length()) @AT@ 15546 @LENGTH@ 32
---------------INS SimpleName@@MethodName:getHeaderPadCount:[name.length()] @TO@ MethodInvocation@@getHeaderPadCount(name.length()) @AT@ 15546 @LENGTH@ 32
------------------INS MethodInvocation@@name.length() @TO@ SimpleName@@MethodName:getHeaderPadCount:[name.length()] @AT@ 15564 @LENGTH@ 13
---------------------MOV SimpleName@@Name:name @TO@ MethodInvocation@@name.length() @AT@ 14796 @LENGTH@ 4
---------------------MOV SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@name.length() @AT@ 14801 @LENGTH@ 8


DEL MethodDeclaration@@protected, Converter<String,? extends Name>, MethodName:stringToNameConverter,  @AT@ 28279 @LENGTH@ 118
---DEL Modifier@@protected @AT@ 28279 @LENGTH@ 9
---DEL ParameterizedType@@Converter<String,? extends Name> @AT@ 28289 @LENGTH@ 33
------DEL SimpleType@@Converter @AT@ 28289 @LENGTH@ 9
------DEL SimpleType@@String @AT@ 28299 @LENGTH@ 6
------DEL WildcardType@@? @AT@ 28307 @LENGTH@ 14
---DEL SimpleName@@MethodName:stringToNameConverter @AT@ 28323 @LENGTH@ 21
---DEL ReturnStatement@@QualifiedName:StringToLdapNameConverter.INSTANCE @AT@ 28352 @LENGTH@ 42
------DEL QualifiedName@@StringToLdapNameConverter.INSTANCE @AT@ 28359 @LENGTH@ 34
---------DEL SimpleName@@StringToLdapNameConverter @AT@ 28359 @LENGTH@ 25
---------DEL SimpleName@@INSTANCE @AT@ 28385 @LENGTH@ 8


UPD EnhancedForStatement@@for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader())) {  for (  CapabilityServiceBuilder<?> builder : provider.getBuilders(registry,name,channel)) {    builder.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();  }} @TO@ for (IdentityGroupServiceConfiguratorProvider provider : ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader())) {  for (  CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(registry,name,channel)) {    configurator.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();  }} @AT@ 2890 @LENGTH@ 391
---UPD SingleVariableDeclaration@@GroupAliasBuilderProvider provider @TO@ IdentityGroupServiceConfiguratorProvider provider @AT@ 2895 @LENGTH@ 34
------UPD SimpleType@@GroupAliasBuilderProvider @TO@ IdentityGroupServiceConfiguratorProvider @AT@ 2895 @LENGTH@ 25
---UPD MethodInvocation@@ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader()) @AT@ 2932 @LENGTH@ 101
------UPD SimpleName@@MethodName:load:[GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[IdentityGroupServiceConfiguratorProvider.class, IdentityGroupServiceConfiguratorProvider.class.getClassLoader()] @AT@ 2946 @LENGTH@ 87
---------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 2951 @LENGTH@ 31
---------UPD MethodInvocation@@GroupAliasBuilderProvider.class.getClassLoader() @TO@ IdentityGroupServiceConfiguratorProvider.class.getClassLoader() @AT@ 2984 @LENGTH@ 48
------------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 2984 @LENGTH@ 31
---UPD EnhancedForStatement@@for (CapabilityServiceBuilder<?> builder : provider.getBuilders(registry,name,channel)) {  builder.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();} @TO@ for (CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(registry,name,channel)) {  configurator.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();} @AT@ 3049 @LENGTH@ 222
------UPD SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @TO@ CapabilityServiceConfigurator configurator @AT@ 3054 @LENGTH@ 35
---------DEL ParameterizedType@@CapabilityServiceBuilder<?> @AT@ 3054 @LENGTH@ 27
------------DEL SimpleType@@CapabilityServiceBuilder @AT@ 3054 @LENGTH@ 24
------------DEL WildcardType@@? @AT@ 3079 @LENGTH@ 1
---------UPD SimpleName@@builder @TO@ configurator @AT@ 3082 @LENGTH@ 7
---------INS SimpleType@@CapabilityServiceConfigurator @TO@ SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @AT@ 3119 @LENGTH@ 29
------UPD MethodInvocation@@provider.getBuilders(registry,name,channel) @TO@ provider.getServiceConfigurators(registry,name,channel) @AT@ 3092 @LENGTH@ 45
---------UPD SimpleName@@MethodName:getBuilders:[registry, name, channel] @TO@ MethodName:getServiceConfigurators:[registry, name, channel] @AT@ 3101 @LENGTH@ 36
------UPD ExpressionStatement@@MethodInvocation:builder.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ MethodInvocation:configurator.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 3157 @LENGTH@ 100
---------UPD MethodInvocation@@builder.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ configurator.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 3157 @LENGTH@ 99
------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 3157 @LENGTH@ 7


UPD MethodDeclaration@@public, static, void, MethodName:releaseResources, RabbitResourceHolder resourceHolder,  @TO@ public, static, void, MethodName:releaseResources, @Nullable RabbitResourceHolder resourceHolder,  @AT@ 7235 @LENGTH@ 294
---UPD SingleVariableDeclaration@@RabbitResourceHolder resourceHolder @TO@ @Nullable RabbitResourceHolder resourceHolder @AT@ 7271 @LENGTH@ 35


INS MethodDeclaration@@public, void, MethodName:afterTestMethodWhenDifferentHookIsRegistered, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]ReactorContextTestExecutionListenerTests,  @AT@ 5919 @LENGTH@ 285
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:afterTestMethodWhenDifferentHookIsRegistered, Exception,  @AT@ 5919 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:afterTestMethodWhenDifferentHookIsRegistered, Exception,  @AT@ 5926 @LENGTH@ 4
---INS SimpleName@@MethodName:afterTestMethodWhenDifferentHookIsRegistered @TO@ MethodDeclaration@@public, void, MethodName:afterTestMethodWhenDifferentHookIsRegistered, Exception,  @AT@ 5931 @LENGTH@ 44
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:afterTestMethodWhenDifferentHookIsRegistered, Exception,  @AT@ 5985 @LENGTH@ 9
---INS VariableDeclarationStatement@@Object obj=new Object(); @TO@ MethodDeclaration@@public, void, MethodName:afterTestMethodWhenDifferentHookIsRegistered, Exception,  @AT@ 5999 @LENGTH@ 26
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object obj=new Object(); @AT@ 5999 @LENGTH@ 6
------INS VariableDeclarationFragment@@obj=new Object() @TO@ VariableDeclarationStatement@@Object obj=new Object(); @AT@ 6006 @LENGTH@ 18
---------INS SimpleName@@obj @TO@ VariableDeclarationFragment@@obj=new Object() @AT@ 6006 @LENGTH@ 3
---------INS ClassInstanceCreation@@Object[] @TO@ VariableDeclarationFragment@@obj=new Object() @AT@ 6012 @LENGTH@ 12
------------INS New@@new @TO@ ClassInstanceCreation@@Object[] @AT@ 6012 @LENGTH@ 3
------------INS SimpleType@@Object @TO@ ClassInstanceCreation@@Object[] @AT@ 6016 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:Hooks.onLastOperator("CUSTOM_HOOK",p -> Mono.just(obj)) @TO@ MethodDeclaration@@public, void, MethodName:afterTestMethodWhenDifferentHookIsRegistered, Exception,  @AT@ 6029 @LENGTH@ 57
------INS MethodInvocation@@Hooks.onLastOperator("CUSTOM_HOOK",p -> Mono.just(obj)) @TO@ ExpressionStatement@@MethodInvocation:Hooks.onLastOperator("CUSTOM_HOOK",p -> Mono.just(obj)) @AT@ 6029 @LENGTH@ 56
---------INS SimpleName@@Name:Hooks @TO@ MethodInvocation@@Hooks.onLastOperator("CUSTOM_HOOK",p -> Mono.just(obj)) @AT@ 6029 @LENGTH@ 5
---------INS SimpleName@@MethodName:onLastOperator:["CUSTOM_HOOK", p -> Mono.just(obj)] @TO@ MethodInvocation@@Hooks.onLastOperator("CUSTOM_HOOK",p -> Mono.just(obj)) @AT@ 6035 @LENGTH@ 50
------------INS StringLiteral@@"CUSTOM_HOOK" @TO@ SimpleName@@MethodName:onLastOperator:["CUSTOM_HOOK", p -> Mono.just(obj)] @AT@ 6050 @LENGTH@ 13
------------INS LambdaExpression@@p -> Mono.just(obj) @TO@ SimpleName@@MethodName:onLastOperator:["CUSTOM_HOOK", p -> Mono.just(obj)] @AT@ 6065 @LENGTH@ 19
---------------INS VariableDeclarationFragment@@p @TO@ LambdaExpression@@p -> Mono.just(obj) @AT@ 6065 @LENGTH@ 1
------------------INS SimpleName@@p @TO@ VariableDeclarationFragment@@p @AT@ 6065 @LENGTH@ 1
---------------INS MethodInvocation@@Mono.just(obj) @TO@ LambdaExpression@@p -> Mono.just(obj) @AT@ 6070 @LENGTH@ 14
------------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.just(obj) @AT@ 6070 @LENGTH@ 4
------------------INS SimpleName@@MethodName:just:[obj] @TO@ MethodInvocation@@Mono.just(obj) @AT@ 6075 @LENGTH@ 9
---------------------INS SimpleName@@obj @TO@ SimpleName@@MethodName:just:[obj] @AT@ 6080 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:this.listener.afterTestMethod(this.testContext) @TO@ MethodDeclaration@@public, void, MethodName:afterTestMethodWhenDifferentHookIsRegistered, Exception,  @AT@ 6089 @LENGTH@ 48
------INS MethodInvocation@@this.listener.afterTestMethod(this.testContext) @TO@ ExpressionStatement@@MethodInvocation:this.listener.afterTestMethod(this.testContext) @AT@ 6089 @LENGTH@ 47
---------INS FieldAccess@@this.listener @TO@ MethodInvocation@@this.listener.afterTestMethod(this.testContext) @AT@ 6089 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.listener @AT@ 6089 @LENGTH@ 4
------------INS SimpleName@@listener @TO@ FieldAccess@@this.listener @AT@ 6094 @LENGTH@ 8
---------INS SimpleName@@MethodName:afterTestMethod:[this.testContext] @TO@ MethodInvocation@@this.listener.afterTestMethod(this.testContext) @AT@ 6103 @LENGTH@ 33
------------INS FieldAccess@@this.testContext @TO@ SimpleName@@MethodName:afterTestMethod:[this.testContext] @AT@ 6119 @LENGTH@ 16
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.testContext @AT@ 6119 @LENGTH@ 4
---------------INS SimpleName@@testContext @TO@ FieldAccess@@this.testContext @AT@ 6124 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(Mono.subscriberContext().block()).isEqualTo(obj) @TO@ MethodDeclaration@@public, void, MethodName:afterTestMethodWhenDifferentHookIsRegistered, Exception,  @AT@ 6141 @LENGTH@ 60
------INS MethodInvocation@@assertThat(Mono.subscriberContext().block()).isEqualTo(obj) @TO@ ExpressionStatement@@MethodInvocation:assertThat(Mono.subscriberContext().block()).isEqualTo(obj) @AT@ 6141 @LENGTH@ 59
---------INS MethodInvocation@@MethodName:assertThat:[Mono.subscriberContext().block()] @TO@ MethodInvocation@@assertThat(Mono.subscriberContext().block()).isEqualTo(obj) @AT@ 6141 @LENGTH@ 44
------------INS MethodInvocation@@Mono.subscriberContext().block() @TO@ MethodInvocation@@MethodName:assertThat:[Mono.subscriberContext().block()] @AT@ 6152 @LENGTH@ 32
---------------INS MethodInvocation@@MethodName:subscriberContext:[] @TO@ MethodInvocation@@Mono.subscriberContext().block() @AT@ 6152 @LENGTH@ 24
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.subscriberContext().block() @AT@ 6152 @LENGTH@ 4
---------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@Mono.subscriberContext().block() @AT@ 6177 @LENGTH@ 7
---------INS SimpleName@@MethodName:isEqualTo:[obj] @TO@ MethodInvocation@@assertThat(Mono.subscriberContext().block()).isEqualTo(obj) @AT@ 6186 @LENGTH@ 14
------------INS SimpleName@@obj @TO@ SimpleName@@MethodName:isEqualTo:[obj] @AT@ 6196 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals(keySize,((ECPublicKeyImpl)signedCert.getPublicKey()).getParams().getCurve().getField().getFieldSize()) @TO@ MethodInvocation:assertEquals(keySize,((ECPublicKey)signedCert.getPublicKey()).getParams().getCurve().getField().getFieldSize()) @AT@ 13561 @LENGTH@ 118
---UPD MethodInvocation@@assertEquals(keySize,((ECPublicKeyImpl)signedCert.getPublicKey()).getParams().getCurve().getField().getFieldSize()) @TO@ assertEquals(keySize,((ECPublicKey)signedCert.getPublicKey()).getParams().getCurve().getField().getFieldSize()) @AT@ 13561 @LENGTH@ 117
------UPD SimpleName@@MethodName:assertEquals:[keySize, ((ECPublicKeyImpl)signedCert.getPublicKey()).getParams().getCurve().getField().getFieldSize()] @TO@ MethodName:assertEquals:[keySize, ((ECPublicKey)signedCert.getPublicKey()).getParams().getCurve().getField().getFieldSize()] @AT@ 13561 @LENGTH@ 117
---------UPD MethodInvocation@@((ECPublicKeyImpl)signedCert.getPublicKey()).getParams().getCurve().getField().getFieldSize() @TO@ ((ECPublicKey)signedCert.getPublicKey()).getParams().getCurve().getField().getFieldSize() @AT@ 13583 @LENGTH@ 94
------------UPD ParenthesizedExpression@@((ECPublicKeyImpl)signedCert.getPublicKey()) @TO@ ((ECPublicKey)signedCert.getPublicKey()) @AT@ 13583 @LENGTH@ 45
---------------UPD CastExpression@@(ECPublicKeyImpl)signedCert.getPublicKey() @TO@ (ECPublicKey)signedCert.getPublicKey() @AT@ 13584 @LENGTH@ 43
------------------UPD SimpleType@@ECPublicKeyImpl @TO@ ECPublicKey @AT@ 13585 @LENGTH@ 15


UPD MethodDeclaration@@public, static, void, MethodName:enableNative, CommandContext ctx, CommandLineException,  @TO@ public, static, void, MethodName:enableNative, CommandContext ctx, Exception,  @AT@ 34991 @LENGTH@ 374
---UPD SimpleType@@CommandLineException @TO@ Exception @AT@ 35050 @LENGTH@ 20
---UPD ExpressionStatement@@MethodInvocation:ctx.handle("/core-service=management/management-interface=native-interface:add(security-realm=ManagementRealm, socket-binding=management-native)") @TO@ MethodInvocation:ctx.handle("/core-service=management/management-interface=native-interface:add(security-realm=native-realm, socket-binding=management-native)") @AT@ 35212 @LENGTH@ 147
------UPD MethodInvocation@@ctx.handle("/core-service=management/management-interface=native-interface:add(security-realm=ManagementRealm, socket-binding=management-native)") @TO@ ctx.handle("/core-service=management/management-interface=native-interface:add(security-realm=native-realm, socket-binding=management-native)") @AT@ 35212 @LENGTH@ 146
---------UPD SimpleName@@MethodName:handle:["/core-service=management/management-interface=native-interface:add(security-realm=ManagementRealm, socket-binding=management-native)"] @TO@ MethodName:handle:["/core-service=management/management-interface=native-interface:add(security-realm=native-realm, socket-binding=management-native)"] @AT@ 35216 @LENGTH@ 142
------------UPD StringLiteral@@"/core-service=management/management-interface=native-interface:add(security-realm=ManagementRealm, socket-binding=management-native)" @TO@ "/core-service=management/management-interface=native-interface:add(security-realm=native-realm, socket-binding=management-native)" @AT@ 35223 @LENGTH@ 134
---INS VariableDeclarationStatement@@ModelNode operation=org.jboss.as.controller.operations.common.Util.createEmptyOperation("composite",PathAddress.EMPTY_ADDRESS); @TO@ MethodDeclaration@@public, static, void, MethodName:enableNative, CommandContext ctx, CommandLineException,  @AT@ 35464 @LENGTH@ 130
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode operation=org.jboss.as.controller.operations.common.Util.createEmptyOperation("composite",PathAddress.EMPTY_ADDRESS); @AT@ 35464 @LENGTH@ 9
------INS VariableDeclarationFragment@@operation=org.jboss.as.controller.operations.common.Util.createEmptyOperation("composite",PathAddress.EMPTY_ADDRESS) @TO@ VariableDeclarationStatement@@ModelNode operation=org.jboss.as.controller.operations.common.Util.createEmptyOperation("composite",PathAddress.EMPTY_ADDRESS); @AT@ 35474 @LENGTH@ 119
---------INS SimpleName@@operation @TO@ VariableDeclarationFragment@@operation=org.jboss.as.controller.operations.common.Util.createEmptyOperation("composite",PathAddress.EMPTY_ADDRESS) @AT@ 35474 @LENGTH@ 9
---------INS MethodInvocation@@org.jboss.as.controller.operations.common.Util.createEmptyOperation("composite",PathAddress.EMPTY_ADDRESS) @TO@ VariableDeclarationFragment@@operation=org.jboss.as.controller.operations.common.Util.createEmptyOperation("composite",PathAddress.EMPTY_ADDRESS) @AT@ 35486 @LENGTH@ 107
------------INS QualifiedName@@Name:org.jboss.as.controller.operations.common.Util @TO@ MethodInvocation@@org.jboss.as.controller.operations.common.Util.createEmptyOperation("composite",PathAddress.EMPTY_ADDRESS) @AT@ 35486 @LENGTH@ 46
------------INS SimpleName@@MethodName:createEmptyOperation:["composite", PathAddress.EMPTY_ADDRESS] @TO@ MethodInvocation@@org.jboss.as.controller.operations.common.Util.createEmptyOperation("composite",PathAddress.EMPTY_ADDRESS) @AT@ 35533 @LENGTH@ 60
---------------INS StringLiteral@@"composite" @TO@ SimpleName@@MethodName:createEmptyOperation:["composite", PathAddress.EMPTY_ADDRESS] @AT@ 35554 @LENGTH@ 11
---------------INS QualifiedName@@PathAddress.EMPTY_ADDRESS @TO@ SimpleName@@MethodName:createEmptyOperation:["composite", PathAddress.EMPTY_ADDRESS] @AT@ 35567 @LENGTH@ 25
------------------INS SimpleName@@PathAddress @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 35567 @LENGTH@ 11
------------------INS SimpleName@@EMPTY_ADDRESS @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 35579 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:operation.get("steps").add(createOpNode("core-service=management/security-realm=native-realm",ModelDescriptionConstants.ADD)) @TO@ MethodDeclaration@@public, static, void, MethodName:enableNative, CommandContext ctx, CommandLineException,  @AT@ 35603 @LENGTH@ 127
------INS MethodInvocation@@operation.get("steps").add(createOpNode("core-service=management/security-realm=native-realm",ModelDescriptionConstants.ADD)) @TO@ ExpressionStatement@@MethodInvocation:operation.get("steps").add(createOpNode("core-service=management/security-realm=native-realm",ModelDescriptionConstants.ADD)) @AT@ 35603 @LENGTH@ 126
---------INS MethodInvocation@@MethodName:get:["steps"] @TO@ MethodInvocation@@operation.get("steps").add(createOpNode("core-service=management/security-realm=native-realm",ModelDescriptionConstants.ADD)) @AT@ 35603 @LENGTH@ 22
------------INS StringLiteral@@"steps" @TO@ MethodInvocation@@MethodName:get:["steps"] @AT@ 35617 @LENGTH@ 7
---------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.get("steps").add(createOpNode("core-service=management/security-realm=native-realm",ModelDescriptionConstants.ADD)) @AT@ 35603 @LENGTH@ 9
---------INS SimpleName@@MethodName:add:[createOpNode("core-service=management/security-realm=native-realm",ModelDescriptionConstants.ADD)] @TO@ MethodInvocation@@operation.get("steps").add(createOpNode("core-service=management/security-realm=native-realm",ModelDescriptionConstants.ADD)) @AT@ 35626 @LENGTH@ 103
------------INS MethodInvocation@@createOpNode("core-service=management/security-realm=native-realm",ModelDescriptionConstants.ADD) @TO@ SimpleName@@MethodName:add:[createOpNode("core-service=management/security-realm=native-realm",ModelDescriptionConstants.ADD)] @AT@ 35630 @LENGTH@ 98
---------------INS SimpleName@@MethodName:createOpNode:["core-service=management/security-realm=native-realm", ModelDescriptionConstants.ADD] @TO@ MethodInvocation@@createOpNode("core-service=management/security-realm=native-realm",ModelDescriptionConstants.ADD) @AT@ 35630 @LENGTH@ 98
------------------INS StringLiteral@@"core-service=management/security-realm=native-realm" @TO@ SimpleName@@MethodName:createOpNode:["core-service=management/security-realm=native-realm", ModelDescriptionConstants.ADD] @AT@ 35643 @LENGTH@ 53
------------------INS QualifiedName@@ModelDescriptionConstants.ADD @TO@ SimpleName@@MethodName:createOpNode:["core-service=management/security-realm=native-realm", ModelDescriptionConstants.ADD] @AT@ 35698 @LENGTH@ 29
---------------------INS SimpleName@@ModelDescriptionConstants @TO@ QualifiedName@@ModelDescriptionConstants.ADD @AT@ 35698 @LENGTH@ 25
---------------------INS SimpleName@@ADD @TO@ QualifiedName@@ModelDescriptionConstants.ADD @AT@ 35724 @LENGTH@ 3
---INS VariableDeclarationStatement@@ModelNode localAuth=createOpNode("core-service=management/security-realm=native-realm/authentication=local",ModelDescriptionConstants.ADD); @TO@ MethodDeclaration@@public, static, void, MethodName:enableNative, CommandContext ctx, CommandLineException,  @AT@ 35739 @LENGTH@ 142
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode localAuth=createOpNode("core-service=management/security-realm=native-realm/authentication=local",ModelDescriptionConstants.ADD); @AT@ 35739 @LENGTH@ 9
------INS VariableDeclarationFragment@@localAuth=createOpNode("core-service=management/security-realm=native-realm/authentication=local",ModelDescriptionConstants.ADD) @TO@ VariableDeclarationStatement@@ModelNode localAuth=createOpNode("core-service=management/security-realm=native-realm/authentication=local",ModelDescriptionConstants.ADD); @AT@ 35749 @LENGTH@ 131
---------INS SimpleName@@localAuth @TO@ VariableDeclarationFragment@@localAuth=createOpNode("core-service=management/security-realm=native-realm/authentication=local",ModelDescriptionConstants.ADD) @AT@ 35749 @LENGTH@ 9
---------INS MethodInvocation@@createOpNode("core-service=management/security-realm=native-realm/authentication=local",ModelDescriptionConstants.ADD) @TO@ VariableDeclarationFragment@@localAuth=createOpNode("core-service=management/security-realm=native-realm/authentication=local",ModelDescriptionConstants.ADD) @AT@ 35761 @LENGTH@ 119
------------INS SimpleName@@MethodName:createOpNode:["core-service=management/security-realm=native-realm/authentication=local", ModelDescriptionConstants.ADD] @TO@ MethodInvocation@@createOpNode("core-service=management/security-realm=native-realm/authentication=local",ModelDescriptionConstants.ADD) @AT@ 35761 @LENGTH@ 119
---------------INS StringLiteral@@"core-service=management/security-realm=native-realm/authentication=local" @TO@ SimpleName@@MethodName:createOpNode:["core-service=management/security-realm=native-realm/authentication=local", ModelDescriptionConstants.ADD] @AT@ 35774 @LENGTH@ 74
---------------INS QualifiedName@@ModelDescriptionConstants.ADD @TO@ SimpleName@@MethodName:createOpNode:["core-service=management/security-realm=native-realm/authentication=local", ModelDescriptionConstants.ADD] @AT@ 35850 @LENGTH@ 29
------------------INS SimpleName@@ModelDescriptionConstants @TO@ QualifiedName@@ModelDescriptionConstants.ADD @AT@ 35850 @LENGTH@ 25
------------------INS SimpleName@@ADD @TO@ QualifiedName@@ModelDescriptionConstants.ADD @AT@ 35876 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:localAuth.get("default-user").set("$local") @TO@ MethodDeclaration@@public, static, void, MethodName:enableNative, CommandContext ctx, CommandLineException,  @AT@ 35890 @LENGTH@ 44
------INS MethodInvocation@@localAuth.get("default-user").set("$local") @TO@ ExpressionStatement@@MethodInvocation:localAuth.get("default-user").set("$local") @AT@ 35890 @LENGTH@ 43
---------INS MethodInvocation@@MethodName:get:["default-user"] @TO@ MethodInvocation@@localAuth.get("default-user").set("$local") @AT@ 35890 @LENGTH@ 29
------------INS StringLiteral@@"default-user" @TO@ MethodInvocation@@MethodName:get:["default-user"] @AT@ 35904 @LENGTH@ 14
---------INS SimpleName@@Name:localAuth @TO@ MethodInvocation@@localAuth.get("default-user").set("$local") @AT@ 35890 @LENGTH@ 9
---------INS SimpleName@@MethodName:set:["$local"] @TO@ MethodInvocation@@localAuth.get("default-user").set("$local") @AT@ 35920 @LENGTH@ 13
------------INS StringLiteral@@"$local" @TO@ SimpleName@@MethodName:set:["$local"] @AT@ 35924 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:operation.get("steps").add(localAuth) @TO@ MethodDeclaration@@public, static, void, MethodName:enableNative, CommandContext ctx, CommandLineException,  @AT@ 35943 @LENGTH@ 38
------INS MethodInvocation@@operation.get("steps").add(localAuth) @TO@ ExpressionStatement@@MethodInvocation:operation.get("steps").add(localAuth) @AT@ 35943 @LENGTH@ 37
---------INS MethodInvocation@@MethodName:get:["steps"] @TO@ MethodInvocation@@operation.get("steps").add(localAuth) @AT@ 35943 @LENGTH@ 22
------------INS StringLiteral@@"steps" @TO@ MethodInvocation@@MethodName:get:["steps"] @AT@ 35957 @LENGTH@ 7
---------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.get("steps").add(localAuth) @AT@ 35943 @LENGTH@ 9
---------INS SimpleName@@MethodName:add:[localAuth] @TO@ MethodInvocation@@operation.get("steps").add(localAuth) @AT@ 35966 @LENGTH@ 14
------------INS SimpleName@@localAuth @TO@ SimpleName@@MethodName:add:[localAuth] @AT@ 35970 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:CoreUtils.applyUpdate(operation,ctx.getModelControllerClient()) @TO@ MethodDeclaration@@public, static, void, MethodName:enableNative, CommandContext ctx, CommandLineException,  @AT@ 35990 @LENGTH@ 65
------INS MethodInvocation@@CoreUtils.applyUpdate(operation,ctx.getModelControllerClient()) @TO@ ExpressionStatement@@MethodInvocation:CoreUtils.applyUpdate(operation,ctx.getModelControllerClient()) @AT@ 35990 @LENGTH@ 64
---------INS SimpleName@@Name:CoreUtils @TO@ MethodInvocation@@CoreUtils.applyUpdate(operation,ctx.getModelControllerClient()) @AT@ 35990 @LENGTH@ 9
---------INS SimpleName@@MethodName:applyUpdate:[operation, ctx.getModelControllerClient()] @TO@ MethodInvocation@@CoreUtils.applyUpdate(operation,ctx.getModelControllerClient()) @AT@ 36000 @LENGTH@ 54
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:applyUpdate:[operation, ctx.getModelControllerClient()] @AT@ 36012 @LENGTH@ 9
------------INS MethodInvocation@@ctx.getModelControllerClient() @TO@ SimpleName@@MethodName:applyUpdate:[operation, ctx.getModelControllerClient()] @AT@ 36023 @LENGTH@ 30
---------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getModelControllerClient() @AT@ 36023 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getModelControllerClient:[] @TO@ MethodInvocation@@ctx.getModelControllerClient() @AT@ 36027 @LENGTH@ 26


UPD IfStatement@@if (this.shouldRetrieveUserInfo(userRequest)) {  OAuth2User oauth2User=this.defaultUserService.loadUser(userRequest);  userInfo=new OidcUserInfo(oauth2User.getAttributes());  if (!userInfo.getSubject().equals(userRequest.getIdToken().getSubject())) {    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());  }} @TO@ if (this.shouldRetrieveUserInfo(userRequest)) {  OAuth2User oauth2User=this.defaultUserService.loadUser(userRequest);  userInfo=new OidcUserInfo(oauth2User.getAttributes());  if (userInfo.getSubject() == null) {    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());  }  if (!userInfo.getSubject().equals(userRequest.getIdToken().getSubject())) {    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());  }} @AT@ 2741 @LENGTH@ 919
---UPD Block@@ThenBody:{  OAuth2User oauth2User=this.defaultUserService.loadUser(userRequest);  userInfo=new OidcUserInfo(oauth2User.getAttributes());  if (!userInfo.getSubject().equals(userRequest.getIdToken().getSubject())) {    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());  }} @TO@ ThenBody:{  OAuth2User oauth2User=this.defaultUserService.loadUser(userRequest);  userInfo=new OidcUserInfo(oauth2User.getAttributes());  if (userInfo.getSubject() == null) {    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());  }  if (!userInfo.getSubject().equals(userRequest.getIdToken().getSubject())) {    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());  }} @AT@ 2787 @LENGTH@ 873
------INS IfStatement@@if (userInfo.getSubject() == null) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ Block@@ThenBody:{  OAuth2User oauth2User=this.defaultUserService.loadUser(userRequest);  userInfo=new OidcUserInfo(oauth2User.getAttributes());  if (!userInfo.getSubject().equals(userRequest.getIdToken().getSubject())) {    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());  }} @AT@ 3086 @LENGTH@ 209
---------INS InfixExpression@@userInfo.getSubject() == null @TO@ IfStatement@@if (userInfo.getSubject() == null) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 3090 @LENGTH@ 29
------------INS MethodInvocation@@userInfo.getSubject() @TO@ InfixExpression@@userInfo.getSubject() == null @AT@ 3090 @LENGTH@ 21
---------------INS SimpleName@@Name:userInfo @TO@ MethodInvocation@@userInfo.getSubject() @AT@ 3090 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getSubject:[] @TO@ MethodInvocation@@userInfo.getSubject() @AT@ 3099 @LENGTH@ 12
------------INS Operator@@== @TO@ InfixExpression@@userInfo.getSubject() == null @AT@ 3111 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@userInfo.getSubject() == null @AT@ 3115 @LENGTH@ 4
---------INS Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ IfStatement@@if (userInfo.getSubject() == null) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 3121 @LENGTH@ 174
------------INS VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE); @TO@ Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 3127 @LENGTH@ 81
---------------INS SimpleType@@OAuth2Error @TO@ VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE); @AT@ 3127 @LENGTH@ 11
---------------INS VariableDeclarationFragment@@oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE) @TO@ VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE); @AT@ 3139 @LENGTH@ 68
------------------INS SimpleName@@oauth2Error @TO@ VariableDeclarationFragment@@oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE) @AT@ 3139 @LENGTH@ 11
------------------INS ClassInstanceCreation@@OAuth2Error[INVALID_USER_INFO_RESPONSE_ERROR_CODE] @TO@ VariableDeclarationFragment@@oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE) @AT@ 3153 @LENGTH@ 54
---------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Error[INVALID_USER_INFO_RESPONSE_ERROR_CODE] @AT@ 3153 @LENGTH@ 3
---------------------INS SimpleType@@OAuth2Error @TO@ ClassInstanceCreation@@OAuth2Error[INVALID_USER_INFO_RESPONSE_ERROR_CODE] @AT@ 3157 @LENGTH@ 11
---------------------INS SimpleName@@INVALID_USER_INFO_RESPONSE_ERROR_CODE @TO@ ClassInstanceCreation@@OAuth2Error[INVALID_USER_INFO_RESPONSE_ERROR_CODE] @AT@ 3169 @LENGTH@ 37
------------INS ThrowStatement@@ClassInstanceCreation:new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString()) @TO@ Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 3213 @LENGTH@ 77
---------------INS ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @TO@ ThrowStatement@@ClassInstanceCreation:new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString()) @AT@ 3219 @LENGTH@ 70
------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 3219 @LENGTH@ 3
------------------INS SimpleType@@OAuth2AuthenticationException @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 3223 @LENGTH@ 29
------------------INS SimpleName@@oauth2Error @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 3253 @LENGTH@ 11
------------------INS MethodInvocation@@oauth2Error.toString() @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 3266 @LENGTH@ 22
---------------------INS SimpleName@@Name:oauth2Error @TO@ MethodInvocation@@oauth2Error.toString() @AT@ 3266 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@oauth2Error.toString() @AT@ 3278 @LENGTH@ 10


UPD ReturnStatement@@ClassInstanceCreation:new Query(cypherQuery,resolveParams(getGraphQueryMethod().getParameters(),parameters)) @TO@ ClassInstanceCreation:new Query(cypherQuery,resolveParams(method.getParameters(),parameters)) @AT@ 1350 @LENGTH@ 96
---UPD ClassInstanceCreation@@Query[cypherQuery, resolveParams(getGraphQueryMethod().getParameters(),parameters)] @TO@ Query[cypherQuery, resolveParams(method.getParameters(),parameters)] @AT@ 1357 @LENGTH@ 88
------UPD MethodInvocation@@resolveParams(getGraphQueryMethod().getParameters(),parameters) @TO@ resolveParams(method.getParameters(),parameters) @AT@ 1380 @LENGTH@ 64
---------UPD SimpleName@@MethodName:resolveParams:[getGraphQueryMethod().getParameters(), parameters] @TO@ MethodName:resolveParams:[method.getParameters(), parameters] @AT@ 1380 @LENGTH@ 64
------------UPD MethodInvocation@@getGraphQueryMethod().getParameters() @TO@ method.getParameters() @AT@ 1394 @LENGTH@ 37
---------------DEL MethodInvocation@@MethodName:getGraphQueryMethod:[] @AT@ 1394 @LENGTH@ 21
---------------INS SimpleName@@Name:method @TO@ MethodInvocation@@getGraphQueryMethod().getParameters() @AT@ 1493 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:url=StringUtils.hasLength(url) ? pathInfo : url + pathInfo @TO@ Assignment:url=StringUtils.hasLength(url) ? url + pathInfo : pathInfo @AT@ 6018 @LENGTH@ 61
---UPD Assignment@@url=StringUtils.hasLength(url) ? pathInfo : url + pathInfo @TO@ url=StringUtils.hasLength(url) ? url + pathInfo : pathInfo @AT@ 6018 @LENGTH@ 60
------UPD ConditionalExpression@@StringUtils.hasLength(url) ? pathInfo : url + pathInfo @TO@ StringUtils.hasLength(url) ? url + pathInfo : pathInfo @AT@ 6024 @LENGTH@ 54
---------DEL SimpleName@@pathInfo @AT@ 6053 @LENGTH@ 8
---------INS SimpleName@@pathInfo @TO@ ConditionalExpression@@StringUtils.hasLength(url) ? pathInfo : url + pathInfo @AT@ 6070 @LENGTH@ 8


INS MethodDeclaration@@int, MethodName:purgeQueue, String queueName,  @TO@ TypeDeclaration@@[public]AmqpAdmin,  @AT@ 2742 @LENGTH@ 29
---INS PrimitiveType@@int @TO@ MethodDeclaration@@int, MethodName:purgeQueue, String queueName,  @AT@ 2738 @LENGTH@ 3
---INS SimpleName@@MethodName:purgeQueue @TO@ MethodDeclaration@@int, MethodName:purgeQueue, String queueName,  @AT@ 2742 @LENGTH@ 10
---INS SingleVariableDeclaration@@String queueName @TO@ MethodDeclaration@@int, MethodName:purgeQueue, String queueName,  @AT@ 2753 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String queueName @AT@ 2753 @LENGTH@ 6
------INS SimpleName@@queueName @TO@ SingleVariableDeclaration@@String queueName @AT@ 2760 @LENGTH@ 9


UPD Block@@ThenBody:{  String s;  if (consumer.getEndpoint().getHttpMethodRestrict() != null) {    s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();  } else {    s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";  }  response.addHeader("Allow",s);  response.setStatus(HttpServletResponse.SC_OK);  return;} @TO@ ThenBody:{  String allowedMethods=METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(","));  if (allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null) {    allowedMethods=consumer.getEndpoint().getHttpMethodRestrict();  }  if (allowedMethods == null) {    allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";  }  if (!allowedMethods.contains("OPTIONS")) {    allowedMethods=allowedMethods + ",OPTIONS";  }  response.addHeader("Allow",allowedMethods);  response.setStatus(HttpServletResponse.SC_OK);  return;} @AT@ 6107 @LENGTH@ 456
---UPD VariableDeclarationStatement@@String s; @TO@ String allowedMethods=METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")); @AT@ 6121 @LENGTH@ 9
------UPD VariableDeclarationFragment@@s @TO@ allowedMethods=METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")) @AT@ 6128 @LENGTH@ 1
---------UPD SimpleName@@s @TO@ allowedMethods @AT@ 6128 @LENGTH@ 1
---------INS MethodInvocation@@METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")) @TO@ VariableDeclarationFragment@@s @AT@ 6216 @LENGTH@ 146
------------INS MethodInvocation@@MethodName:filter:[m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())] @TO@ MethodInvocation@@METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")) @AT@ 6216 @LENGTH@ 113
---------------INS LambdaExpression@@m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers()) @TO@ MethodInvocation@@MethodName:filter:[m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())] @AT@ 6240 @LENGTH@ 88
------------------INS VariableDeclarationFragment@@m @TO@ LambdaExpression@@m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers()) @AT@ 6240 @LENGTH@ 1
---------------------INS SimpleName@@m @TO@ VariableDeclarationFragment@@m @AT@ 6240 @LENGTH@ 1
------------------INS MethodInvocation@@getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers()) @TO@ LambdaExpression@@m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers()) @AT@ 6245 @LENGTH@ 83
---------------------INS MethodInvocation@@MethodName:getServletResolveConsumerStrategy:[] @TO@ MethodInvocation@@getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers()) @AT@ 6245 @LENGTH@ 35
---------------------INS SimpleName@@MethodName:isHttpMethodAllowed:[request, m, getConsumers()] @TO@ MethodInvocation@@getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers()) @AT@ 6281 @LENGTH@ 47
------------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:isHttpMethodAllowed:[request, m, getConsumers()] @AT@ 6301 @LENGTH@ 7
------------------------INS SimpleName@@m @TO@ SimpleName@@MethodName:isHttpMethodAllowed:[request, m, getConsumers()] @AT@ 6310 @LENGTH@ 1
------------------------INS MethodInvocation@@MethodName:getConsumers:[] @TO@ SimpleName@@MethodName:isHttpMethodAllowed:[request, m, getConsumers()] @AT@ 6313 @LENGTH@ 14
------------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")) @AT@ 6216 @LENGTH@ 16
------------INS SimpleName@@Name:METHODS @TO@ MethodInvocation@@METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")) @AT@ 6216 @LENGTH@ 7
------------INS SimpleName@@MethodName:collect:[Collectors.joining(",")] @TO@ MethodInvocation@@METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")) @AT@ 6330 @LENGTH@ 32
---------------INS MethodInvocation@@Collectors.joining(",") @TO@ SimpleName@@MethodName:collect:[Collectors.joining(",")] @AT@ 6338 @LENGTH@ 23
------------------INS SimpleName@@Name:Collectors @TO@ MethodInvocation@@Collectors.joining(",") @AT@ 6338 @LENGTH@ 10
------------------INS SimpleName@@MethodName:joining:[","] @TO@ MethodInvocation@@Collectors.joining(",") @AT@ 6349 @LENGTH@ 12
---------------------INS StringLiteral@@"," @TO@ SimpleName@@MethodName:joining:[","] @AT@ 6357 @LENGTH@ 3
---DEL IfStatement@@if (consumer.getEndpoint().getHttpMethodRestrict() != null) {  s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();} else {  s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";} @AT@ 6143 @LENGTH@ 287
---INS IfStatement@@if (allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null) {  allowedMethods=consumer.getEndpoint().getHttpMethodRestrict();} @TO@ Block@@ThenBody:{  String s;  if (consumer.getEndpoint().getHttpMethodRestrict() != null) {    s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();  } else {    s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";  }  response.addHeader("Allow",s);  response.setStatus(HttpServletResponse.SC_OK);  return;} @AT@ 6376 @LENGTH@ 182
------MOV Block@@ThenBody:{  s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();} @TO@ IfStatement@@if (allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null) {  allowedMethods=consumer.getEndpoint().getHttpMethodRestrict();} @AT@ 6203 @LENGTH@ 96
---------UPD ExpressionStatement@@Assignment:s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict() @TO@ Assignment:allowedMethods=consumer.getEndpoint().getHttpMethodRestrict() @AT@ 6221 @LENGTH@ 64
------------UPD Assignment@@s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict() @TO@ allowedMethods=consumer.getEndpoint().getHttpMethodRestrict() @AT@ 6221 @LENGTH@ 63
---------------UPD SimpleName@@s @TO@ allowedMethods @AT@ 6221 @LENGTH@ 1
---------------DEL InfixExpression@@"OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict() @AT@ 6225 @LENGTH@ 59
------------------DEL StringLiteral@@"OPTIONS," @AT@ 6225 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 6235 @LENGTH@ 1
------------------DEL MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 6238 @LENGTH@ 46
---------------INS MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @TO@ Assignment@@s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict() @AT@ 6497 @LENGTH@ 46
------------------MOV MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 6238 @LENGTH@ 22
------------------MOV MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 6238 @LENGTH@ 22
------------------MOV SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 6238 @LENGTH@ 8
------------------MOV SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 6238 @LENGTH@ 8
------------------MOV SimpleName@@MethodName:getHttpMethodRestrict:[] @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 6261 @LENGTH@ 23
------------------MOV SimpleName@@MethodName:getHttpMethodRestrict:[] @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 6261 @LENGTH@ 23
------INS InfixExpression@@allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null @TO@ IfStatement@@if (allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null) {  allowedMethods=consumer.getEndpoint().getHttpMethodRestrict();} @AT@ 6380 @LENGTH@ 80
---------MOV InfixExpression@@consumer.getEndpoint().getHttpMethodRestrict() != null @TO@ InfixExpression@@allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null @AT@ 6147 @LENGTH@ 54
---------INS InfixExpression@@allowedMethods == null @TO@ InfixExpression@@allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null @AT@ 6380 @LENGTH@ 22
------------INS SimpleName@@allowedMethods @TO@ InfixExpression@@allowedMethods == null @AT@ 6380 @LENGTH@ 14
------------INS Operator@@== @TO@ InfixExpression@@allowedMethods == null @AT@ 6394 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@allowedMethods == null @AT@ 6398 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null @AT@ 6402 @LENGTH@ 2
---UPD ExpressionStatement@@MethodInvocation:response.addHeader("Allow",s) @TO@ MethodInvocation:response.addHeader("Allow",allowedMethods) @AT@ 6443 @LENGTH@ 31
------UPD MethodInvocation@@response.addHeader("Allow",s) @TO@ response.addHeader("Allow",allowedMethods) @AT@ 6443 @LENGTH@ 30
---------UPD SimpleName@@MethodName:addHeader:["Allow", s] @TO@ MethodName:addHeader:["Allow", allowedMethods] @AT@ 6452 @LENGTH@ 21
------------UPD SimpleName@@s @TO@ allowedMethods @AT@ 6471 @LENGTH@ 1
---INS IfStatement@@if (allowedMethods == null) {  allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";} @TO@ Block@@ThenBody:{  String s;  if (consumer.getEndpoint().getHttpMethodRestrict() != null) {    s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();  } else {    s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";  }  response.addHeader("Allow",s);  response.setStatus(HttpServletResponse.SC_OK);  return;} @AT@ 6571 @LENGTH@ 165
------MOV Block@@ElseBody:{  s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";} @TO@ IfStatement@@if (allowedMethods == null) {  allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";} @AT@ 6305 @LENGTH@ 125
---------UPD ExpressionStatement@@Assignment:s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH" @TO@ Assignment:allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH" @AT@ 6357 @LENGTH@ 59
------------UPD Assignment@@s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH" @TO@ allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH" @AT@ 6357 @LENGTH@ 58
---------------UPD SimpleName@@s @TO@ allowedMethods @AT@ 6357 @LENGTH@ 1
------INS InfixExpression@@allowedMethods == null @TO@ IfStatement@@if (allowedMethods == null) {  allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";} @AT@ 6575 @LENGTH@ 22
---------INS SimpleName@@allowedMethods @TO@ InfixExpression@@allowedMethods == null @AT@ 6575 @LENGTH@ 14
---------INS Operator@@== @TO@ InfixExpression@@allowedMethods == null @AT@ 6589 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@allowedMethods == null @AT@ 6593 @LENGTH@ 4
---INS IfStatement@@if (!allowedMethods.contains("OPTIONS")) {  allowedMethods=allowedMethods + ",OPTIONS";} @TO@ Block@@ThenBody:{  String s;  if (consumer.getEndpoint().getHttpMethodRestrict() != null) {    s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();  } else {    s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";  }  response.addHeader("Allow",s);  response.setStatus(HttpServletResponse.SC_OK);  return;} @AT@ 6749 @LENGTH@ 118
------INS PrefixExpression@@!allowedMethods.contains("OPTIONS") @TO@ IfStatement@@if (!allowedMethods.contains("OPTIONS")) {  allowedMethods=allowedMethods + ",OPTIONS";} @AT@ 6753 @LENGTH@ 35
---------INS Operator@@! @TO@ PrefixExpression@@!allowedMethods.contains("OPTIONS") @AT@ 6753 @LENGTH@ 1
---------INS MethodInvocation@@allowedMethods.contains("OPTIONS") @TO@ PrefixExpression@@!allowedMethods.contains("OPTIONS") @AT@ 6754 @LENGTH@ 34
------------INS SimpleName@@Name:allowedMethods @TO@ MethodInvocation@@allowedMethods.contains("OPTIONS") @AT@ 6754 @LENGTH@ 14
------------INS SimpleName@@MethodName:contains:["OPTIONS"] @TO@ MethodInvocation@@allowedMethods.contains("OPTIONS") @AT@ 6769 @LENGTH@ 19
---------------INS StringLiteral@@"OPTIONS" @TO@ SimpleName@@MethodName:contains:["OPTIONS"] @AT@ 6778 @LENGTH@ 9
------INS Block@@ThenBody:{  allowedMethods=allowedMethods + ",OPTIONS";} @TO@ IfStatement@@if (!allowedMethods.contains("OPTIONS")) {  allowedMethods=allowedMethods + ",OPTIONS";} @AT@ 6790 @LENGTH@ 77
---------INS ExpressionStatement@@Assignment:allowedMethods=allowedMethods + ",OPTIONS" @TO@ Block@@ThenBody:{  allowedMethods=allowedMethods + ",OPTIONS";} @AT@ 6808 @LENGTH@ 45
------------INS Assignment@@allowedMethods=allowedMethods + ",OPTIONS" @TO@ ExpressionStatement@@Assignment:allowedMethods=allowedMethods + ",OPTIONS" @AT@ 6808 @LENGTH@ 44
---------------INS SimpleName@@allowedMethods @TO@ Assignment@@allowedMethods=allowedMethods + ",OPTIONS" @AT@ 6808 @LENGTH@ 14
---------------INS Operator@@= @TO@ Assignment@@allowedMethods=allowedMethods + ",OPTIONS" @AT@ 6822 @LENGTH@ 1
---------------INS InfixExpression@@allowedMethods + ",OPTIONS" @TO@ Assignment@@allowedMethods=allowedMethods + ",OPTIONS" @AT@ 6825 @LENGTH@ 27
------------------INS SimpleName@@allowedMethods @TO@ InfixExpression@@allowedMethods + ",OPTIONS" @AT@ 6825 @LENGTH@ 14
------------------INS Operator@@+ @TO@ InfixExpression@@allowedMethods + ",OPTIONS" @AT@ 6839 @LENGTH@ 1
------------------INS StringLiteral@@",OPTIONS" @TO@ InfixExpression@@allowedMethods + ",OPTIONS" @AT@ 6842 @LENGTH@ 10


INS VariableDeclarationStatement@@long lastRowNumber=-1; @TO@ MethodDeclaration@@private, void, MethodName:checkVectorizedReader, Exception,  @AT@ 6296 @LENGTH@ 24
---INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long lastRowNumber=-1; @AT@ 6296 @LENGTH@ 4
---INS VariableDeclarationFragment@@lastRowNumber=-1 @TO@ VariableDeclarationStatement@@long lastRowNumber=-1; @AT@ 6301 @LENGTH@ 18
------INS SimpleName@@lastRowNumber @TO@ VariableDeclarationFragment@@lastRowNumber=-1 @AT@ 6301 @LENGTH@ 13
------INS PrefixExpression@@-1 @TO@ VariableDeclarationFragment@@lastRowNumber=-1 @AT@ 6317 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 6317 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 6318 @LENGTH@ 1


UPD FieldDeclaration@@public, LogLevelAdjuster, [logAdjuster=new LogLevelAdjuster(Level.DEBUG,RabbitTemplate.class,RabbitAdmin.class,RabbitTemplateIntegrationTests.class,BrokerRunning.class)] @TO@ public, LogLevelAdjuster, [logAdjuster=new LogLevelAdjuster(Level.DEBUG,RabbitTemplate.class,RabbitAdmin.class,RabbitTemplateIntegrationTests.class,BrokerRunning.class,ClosingRecoveryListener.class)] @AT@ 7433 @LENGTH@ 175
---UPD VariableDeclarationFragment@@logAdjuster=new LogLevelAdjuster(Level.DEBUG,RabbitTemplate.class,RabbitAdmin.class,RabbitTemplateIntegrationTests.class,BrokerRunning.class) @TO@ logAdjuster=new LogLevelAdjuster(Level.DEBUG,RabbitTemplate.class,RabbitAdmin.class,RabbitTemplateIntegrationTests.class,BrokerRunning.class,ClosingRecoveryListener.class) @AT@ 7457 @LENGTH@ 150
------UPD ClassInstanceCreation@@LogLevelAdjuster[Level.DEBUG, RabbitTemplate.class, RabbitAdmin.class, RabbitTemplateIntegrationTests.class, BrokerRunning.class] @TO@ LogLevelAdjuster[Level.DEBUG, RabbitTemplate.class, RabbitAdmin.class, RabbitTemplateIntegrationTests.class, BrokerRunning.class, ClosingRecoveryListener.class] @AT@ 7471 @LENGTH@ 136
---------INS TypeLiteral@@ClosingRecoveryListener.class @TO@ ClassInstanceCreation@@LogLevelAdjuster[Level.DEBUG, RabbitTemplate.class, RabbitAdmin.class, RabbitTemplateIntegrationTests.class, BrokerRunning.class] @AT@ 7734 @LENGTH@ 29


UPD TypeDeclaration@@[public, static, final]TokenType,  @TO@ [public, static, final]TokenType, [Serializable] @AT@ 3182 @LENGTH@ 767
---INS SimpleType@@Serializable @TO@ TypeDeclaration@@[public, static, final]TokenType,  @AT@ 3326 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertThat(registration.getScopes()).containsOnly("openid","profile","email","address","phone") @TO@ MethodInvocation:assertThat(registration.getScopes()).containsOnly("openid","profile","email") @AT@ 6382 @LENGTH@ 103
---UPD MethodInvocation@@assertThat(registration.getScopes()).containsOnly("openid","profile","email","address","phone") @TO@ assertThat(registration.getScopes()).containsOnly("openid","profile","email") @AT@ 6382 @LENGTH@ 102
------UPD SimpleName@@MethodName:containsOnly:["openid", "profile", "email", "address", "phone"] @TO@ MethodName:containsOnly:["openid", "profile", "email"] @AT@ 6419 @LENGTH@ 65
---------DEL StringLiteral@@"address" @AT@ 6465 @LENGTH@ 9
---------DEL StringLiteral@@"phone" @AT@ 6476 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:configurator.configure(support).build(serviceTarget).setInitialMode(Mode.ON_DEMAND).install() @TO@ MethodInvocation:configurator.configure(support).build(serviceTarget).install() @AT@ 24180 @LENGTH@ 94
---UPD MethodInvocation@@configurator.configure(support).build(serviceTarget).setInitialMode(Mode.ON_DEMAND).install() @TO@ configurator.configure(support).build(serviceTarget).install() @AT@ 24180 @LENGTH@ 93
------DEL MethodInvocation@@MethodName:setInitialMode:[Mode.ON_DEMAND] @AT@ 24180 @LENGTH@ 83
---------DEL QualifiedName@@Mode.ON_DEMAND @AT@ 24248 @LENGTH@ 14
------------DEL SimpleName@@Mode @AT@ 24248 @LENGTH@ 4
------------DEL SimpleName@@ON_DEMAND @AT@ 24253 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @TO@ TypeDeclaration@@[public]WebClientReactiveAuthorizationCodeTokenResponseClientTests,  @AT@ 7998 @LENGTH@ 486
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 7998 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 8005 @LENGTH@ 4
---INS SimpleName@@MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 8010 @LENGTH@ 77
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 8097 @LENGTH@ 9
---INS VariableDeclarationStatement@@String accessTokenErrorResponse="{}"; @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 8111 @LENGTH@ 39
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String accessTokenErrorResponse="{}"; @AT@ 8111 @LENGTH@ 6
------INS VariableDeclarationFragment@@accessTokenErrorResponse="{}" @TO@ VariableDeclarationStatement@@String accessTokenErrorResponse="{}"; @AT@ 8118 @LENGTH@ 31
---------INS SimpleName@@accessTokenErrorResponse @TO@ VariableDeclarationFragment@@accessTokenErrorResponse="{}" @AT@ 8118 @LENGTH@ 24
---------INS StringLiteral@@"{}" @TO@ VariableDeclarationFragment@@accessTokenErrorResponse="{}" @AT@ 8145 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:this.server.enqueue(jsonResponse(accessTokenErrorResponse).setResponseCode(HttpStatus.INTERNAL_SERVER_ERROR.value())) @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 8153 @LENGTH@ 118
------INS MethodInvocation@@this.server.enqueue(jsonResponse(accessTokenErrorResponse).setResponseCode(HttpStatus.INTERNAL_SERVER_ERROR.value())) @TO@ ExpressionStatement@@MethodInvocation:this.server.enqueue(jsonResponse(accessTokenErrorResponse).setResponseCode(HttpStatus.INTERNAL_SERVER_ERROR.value())) @AT@ 8153 @LENGTH@ 117
---------INS FieldAccess@@this.server @TO@ MethodInvocation@@this.server.enqueue(jsonResponse(accessTokenErrorResponse).setResponseCode(HttpStatus.INTERNAL_SERVER_ERROR.value())) @AT@ 8153 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.server @AT@ 8153 @LENGTH@ 4
------------INS SimpleName@@server @TO@ FieldAccess@@this.server @AT@ 8158 @LENGTH@ 6
---------INS SimpleName@@MethodName:enqueue:[jsonResponse(accessTokenErrorResponse).setResponseCode(HttpStatus.INTERNAL_SERVER_ERROR.value())] @TO@ MethodInvocation@@this.server.enqueue(jsonResponse(accessTokenErrorResponse).setResponseCode(HttpStatus.INTERNAL_SERVER_ERROR.value())) @AT@ 8165 @LENGTH@ 105
------------INS MethodInvocation@@jsonResponse(accessTokenErrorResponse).setResponseCode(HttpStatus.INTERNAL_SERVER_ERROR.value()) @TO@ SimpleName@@MethodName:enqueue:[jsonResponse(accessTokenErrorResponse).setResponseCode(HttpStatus.INTERNAL_SERVER_ERROR.value())] @AT@ 8173 @LENGTH@ 96
---------------INS MethodInvocation@@MethodName:jsonResponse:[accessTokenErrorResponse] @TO@ MethodInvocation@@jsonResponse(accessTokenErrorResponse).setResponseCode(HttpStatus.INTERNAL_SERVER_ERROR.value()) @AT@ 8173 @LENGTH@ 38
------------------INS SimpleName@@accessTokenErrorResponse @TO@ MethodInvocation@@MethodName:jsonResponse:[accessTokenErrorResponse] @AT@ 8186 @LENGTH@ 24
---------------INS SimpleName@@MethodName:setResponseCode:[HttpStatus.INTERNAL_SERVER_ERROR.value()] @TO@ MethodInvocation@@jsonResponse(accessTokenErrorResponse).setResponseCode(HttpStatus.INTERNAL_SERVER_ERROR.value()) @AT@ 8212 @LENGTH@ 57
------------------INS MethodInvocation@@HttpStatus.INTERNAL_SERVER_ERROR.value() @TO@ SimpleName@@MethodName:setResponseCode:[HttpStatus.INTERNAL_SERVER_ERROR.value()] @AT@ 8228 @LENGTH@ 40
---------------------INS QualifiedName@@Name:HttpStatus.INTERNAL_SERVER_ERROR @TO@ MethodInvocation@@HttpStatus.INTERNAL_SERVER_ERROR.value() @AT@ 8228 @LENGTH@ 32
---------------------INS SimpleName@@MethodName:value:[] @TO@ MethodInvocation@@HttpStatus.INTERNAL_SERVER_ERROR.value() @AT@ 8261 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block()).isInstanceOf(OAuth2AuthenticationException.class).hasMessageContaining("server_error") @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 8275 @LENGTH@ 206
------INS MethodInvocation@@assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block()).isInstanceOf(OAuth2AuthenticationException.class).hasMessageContaining("server_error") @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block()).isInstanceOf(OAuth2AuthenticationException.class).hasMessageContaining("server_error") @AT@ 8275 @LENGTH@ 205
---------INS MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthenticationException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block()).isInstanceOf(OAuth2AuthenticationException.class).hasMessageContaining("server_error") @AT@ 8275 @LENGTH@ 163
------------INS TypeLiteral@@OAuth2AuthenticationException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthenticationException.class] @AT@ 8402 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block()] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block()).isInstanceOf(OAuth2AuthenticationException.class).hasMessageContaining("server_error") @AT@ 8275 @LENGTH@ 108
------------INS LambdaExpression@@() -> this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block()] @AT@ 8294 @LENGTH@ 88
---------------INS MethodInvocation@@this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @TO@ LambdaExpression@@() -> this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @AT@ 8300 @LENGTH@ 82
------------------INS MethodInvocation@@MethodName:getTokenResponse:[authorizationCodeGrantRequest()] @TO@ MethodInvocation@@this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @AT@ 8300 @LENGTH@ 74
---------------------INS MethodInvocation@@MethodName:authorizationCodeGrantRequest:[] @TO@ MethodInvocation@@MethodName:getTokenResponse:[authorizationCodeGrantRequest()] @AT@ 8342 @LENGTH@ 31
------------------INS FieldAccess@@this.tokenResponseClient @TO@ MethodInvocation@@this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @AT@ 8300 @LENGTH@ 24
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.tokenResponseClient @AT@ 8300 @LENGTH@ 4
---------------------INS SimpleName@@tokenResponseClient @TO@ FieldAccess@@this.tokenResponseClient @AT@ 8305 @LENGTH@ 19
------------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @AT@ 8375 @LENGTH@ 7
---------INS SimpleName@@MethodName:hasMessageContaining:["server_error"] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block()).isInstanceOf(OAuth2AuthenticationException.class).hasMessageContaining("server_error") @AT@ 8444 @LENGTH@ 36
------------INS StringLiteral@@"server_error" @TO@ SimpleName@@MethodName:hasMessageContaining:["server_error"] @AT@ 8465 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:testFilteringStream,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]DefaultMethodSecurityExpressionHandlerTests,  @AT@ 2402 @LENGTH@ 652
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testFilteringStream,  @AT@ 2402 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testFilteringStream,  @AT@ 2409 @LENGTH@ 4
---INS SimpleName@@MethodName:testFilteringStream @TO@ MethodDeclaration@@public, void, MethodName:testFilteringStream,  @AT@ 2414 @LENGTH@ 19
---INS VariableDeclarationStatement@@final Stream<String> stream=Stream.of("1","2","3"); @TO@ MethodDeclaration@@public, void, MethodName:testFilteringStream,  @AT@ 2440 @LENGTH@ 55
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Stream<String> stream=Stream.of("1","2","3"); @AT@ 2440 @LENGTH@ 5
------INS ParameterizedType@@Stream<String> @TO@ VariableDeclarationStatement@@final Stream<String> stream=Stream.of("1","2","3"); @AT@ 2446 @LENGTH@ 14
---------INS SimpleType@@Stream @TO@ ParameterizedType@@Stream<String> @AT@ 2446 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Stream<String> @AT@ 2453 @LENGTH@ 6
------INS VariableDeclarationFragment@@stream=Stream.of("1","2","3") @TO@ VariableDeclarationStatement@@final Stream<String> stream=Stream.of("1","2","3"); @AT@ 2461 @LENGTH@ 33
---------INS SimpleName@@stream @TO@ VariableDeclarationFragment@@stream=Stream.of("1","2","3") @AT@ 2461 @LENGTH@ 6
---------INS MethodInvocation@@Stream.of("1","2","3") @TO@ VariableDeclarationFragment@@stream=Stream.of("1","2","3") @AT@ 2470 @LENGTH@ 24
------------INS SimpleName@@Name:Stream @TO@ MethodInvocation@@Stream.of("1","2","3") @AT@ 2470 @LENGTH@ 6
------------INS SimpleName@@MethodName:of:["1", "2", "3"] @TO@ MethodInvocation@@Stream.of("1","2","3") @AT@ 2477 @LENGTH@ 17
---------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:of:["1", "2", "3"] @AT@ 2480 @LENGTH@ 3
---------------INS StringLiteral@@"2" @TO@ SimpleName@@MethodName:of:["1", "2", "3"] @AT@ 2485 @LENGTH@ 3
---------------INS StringLiteral@@"3" @TO@ SimpleName@@MethodName:of:["1", "2", "3"] @AT@ 2490 @LENGTH@ 3
---INS VariableDeclarationStatement@@Expression expression=handler.getExpressionParser().parseExpression("filterObject ne '2'"); @TO@ MethodDeclaration@@public, void, MethodName:testFilteringStream,  @AT@ 2499 @LENGTH@ 93
------INS SimpleType@@Expression @TO@ VariableDeclarationStatement@@Expression expression=handler.getExpressionParser().parseExpression("filterObject ne '2'"); @AT@ 2499 @LENGTH@ 10
------INS VariableDeclarationFragment@@expression=handler.getExpressionParser().parseExpression("filterObject ne '2'") @TO@ VariableDeclarationStatement@@Expression expression=handler.getExpressionParser().parseExpression("filterObject ne '2'"); @AT@ 2510 @LENGTH@ 81
---------INS SimpleName@@expression @TO@ VariableDeclarationFragment@@expression=handler.getExpressionParser().parseExpression("filterObject ne '2'") @AT@ 2510 @LENGTH@ 10
---------INS MethodInvocation@@handler.getExpressionParser().parseExpression("filterObject ne '2'") @TO@ VariableDeclarationFragment@@expression=handler.getExpressionParser().parseExpression("filterObject ne '2'") @AT@ 2523 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getExpressionParser:[] @TO@ MethodInvocation@@handler.getExpressionParser().parseExpression("filterObject ne '2'") @AT@ 2523 @LENGTH@ 29
------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.getExpressionParser().parseExpression("filterObject ne '2'") @AT@ 2523 @LENGTH@ 7
------------INS SimpleName@@MethodName:parseExpression:["filterObject ne '2'"] @TO@ MethodInvocation@@handler.getExpressionParser().parseExpression("filterObject ne '2'") @AT@ 2553 @LENGTH@ 38
---------------INS StringLiteral@@"filterObject ne '2'" @TO@ SimpleName@@MethodName:parseExpression:["filterObject ne '2'"] @AT@ 2569 @LENGTH@ 21
---INS VariableDeclarationStatement@@EvaluationContext context=handler.createEvaluationContext(authentication,methodInvocation); @TO@ MethodDeclaration@@public, void, MethodName:testFilteringStream,  @AT@ 2596 @LENGTH@ 98
------INS SimpleType@@EvaluationContext @TO@ VariableDeclarationStatement@@EvaluationContext context=handler.createEvaluationContext(authentication,methodInvocation); @AT@ 2596 @LENGTH@ 17
------INS VariableDeclarationFragment@@context=handler.createEvaluationContext(authentication,methodInvocation) @TO@ VariableDeclarationStatement@@EvaluationContext context=handler.createEvaluationContext(authentication,methodInvocation); @AT@ 2614 @LENGTH@ 79
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=handler.createEvaluationContext(authentication,methodInvocation) @AT@ 2614 @LENGTH@ 7
---------INS MethodInvocation@@handler.createEvaluationContext(authentication,methodInvocation) @TO@ VariableDeclarationFragment@@context=handler.createEvaluationContext(authentication,methodInvocation) @AT@ 2624 @LENGTH@ 69
------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.createEvaluationContext(authentication,methodInvocation) @AT@ 2624 @LENGTH@ 7
------------INS SimpleName@@MethodName:createEvaluationContext:[authentication, methodInvocation] @TO@ MethodInvocation@@handler.createEvaluationContext(authentication,methodInvocation) @AT@ 2632 @LENGTH@ 61
---------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:createEvaluationContext:[authentication, methodInvocation] @AT@ 2656 @LENGTH@ 14
---------------INS SimpleName@@methodInvocation @TO@ SimpleName@@MethodName:createEvaluationContext:[authentication, methodInvocation] @AT@ 2676 @LENGTH@ 16
---INS VariableDeclarationStatement@@Object filtered=handler.filter(stream,expression,context); @TO@ MethodDeclaration@@public, void, MethodName:testFilteringStream,  @AT@ 2698 @LENGTH@ 62
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object filtered=handler.filter(stream,expression,context); @AT@ 2698 @LENGTH@ 6
------INS VariableDeclarationFragment@@filtered=handler.filter(stream,expression,context) @TO@ VariableDeclarationStatement@@Object filtered=handler.filter(stream,expression,context); @AT@ 2705 @LENGTH@ 54
---------INS SimpleName@@filtered @TO@ VariableDeclarationFragment@@filtered=handler.filter(stream,expression,context) @AT@ 2705 @LENGTH@ 8
---------INS MethodInvocation@@handler.filter(stream,expression,context) @TO@ VariableDeclarationFragment@@filtered=handler.filter(stream,expression,context) @AT@ 2716 @LENGTH@ 43
------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.filter(stream,expression,context) @AT@ 2716 @LENGTH@ 7
------------INS SimpleName@@MethodName:filter:[stream, expression, context] @TO@ MethodInvocation@@handler.filter(stream,expression,context) @AT@ 2724 @LENGTH@ 35
---------------INS SimpleName@@stream @TO@ SimpleName@@MethodName:filter:[stream, expression, context] @AT@ 2731 @LENGTH@ 6
---------------INS SimpleName@@expression @TO@ SimpleName@@MethodName:filter:[stream, expression, context] @AT@ 2739 @LENGTH@ 10
---------------INS SimpleName@@context @TO@ SimpleName@@MethodName:filter:[stream, expression, context] @AT@ 2751 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue("response was wrong type",Stream.class.isAssignableFrom(filtered.getClass())) @TO@ MethodDeclaration@@public, void, MethodName:testFilteringStream,  @AT@ 2764 @LENGTH@ 97
------INS MethodInvocation@@Assert.assertTrue("response was wrong type",Stream.class.isAssignableFrom(filtered.getClass())) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue("response was wrong type",Stream.class.isAssignableFrom(filtered.getClass())) @AT@ 2764 @LENGTH@ 96
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue("response was wrong type",Stream.class.isAssignableFrom(filtered.getClass())) @AT@ 2764 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:["response was wrong type", Stream.class.isAssignableFrom(filtered.getClass())] @TO@ MethodInvocation@@Assert.assertTrue("response was wrong type",Stream.class.isAssignableFrom(filtered.getClass())) @AT@ 2771 @LENGTH@ 89
------------INS StringLiteral@@"response was wrong type" @TO@ SimpleName@@MethodName:assertTrue:["response was wrong type", Stream.class.isAssignableFrom(filtered.getClass())] @AT@ 2782 @LENGTH@ 25
------------INS MethodInvocation@@Stream.class.isAssignableFrom(filtered.getClass()) @TO@ SimpleName@@MethodName:assertTrue:["response was wrong type", Stream.class.isAssignableFrom(filtered.getClass())] @AT@ 2809 @LENGTH@ 50
---------------INS TypeLiteral@@Stream.class @TO@ MethodInvocation@@Stream.class.isAssignableFrom(filtered.getClass()) @AT@ 2809 @LENGTH@ 12
---------------INS SimpleName@@MethodName:isAssignableFrom:[filtered.getClass()] @TO@ MethodInvocation@@Stream.class.isAssignableFrom(filtered.getClass()) @AT@ 2822 @LENGTH@ 37
------------------INS MethodInvocation@@filtered.getClass() @TO@ SimpleName@@MethodName:isAssignableFrom:[filtered.getClass()] @AT@ 2839 @LENGTH@ 19
---------------------INS SimpleName@@Name:filtered @TO@ MethodInvocation@@filtered.getClass() @AT@ 2839 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@filtered.getClass() @AT@ 2848 @LENGTH@ 10
---INS VariableDeclarationStatement@@List<String> list=((Stream<String>)filtered).collect(Collectors.toList()); @TO@ MethodDeclaration@@public, void, MethodName:testFilteringStream,  @AT@ 2864 @LENGTH@ 77
------INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> list=((Stream<String>)filtered).collect(Collectors.toList()); @AT@ 2864 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 2864 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 2869 @LENGTH@ 6
------INS VariableDeclarationFragment@@list=((Stream<String>)filtered).collect(Collectors.toList()) @TO@ VariableDeclarationStatement@@List<String> list=((Stream<String>)filtered).collect(Collectors.toList()); @AT@ 2877 @LENGTH@ 63
---------INS SimpleName@@list @TO@ VariableDeclarationFragment@@list=((Stream<String>)filtered).collect(Collectors.toList()) @AT@ 2877 @LENGTH@ 4
---------INS MethodInvocation@@((Stream<String>)filtered).collect(Collectors.toList()) @TO@ VariableDeclarationFragment@@list=((Stream<String>)filtered).collect(Collectors.toList()) @AT@ 2884 @LENGTH@ 56
------------INS ParenthesizedExpression@@((Stream<String>)filtered) @TO@ MethodInvocation@@((Stream<String>)filtered).collect(Collectors.toList()) @AT@ 2884 @LENGTH@ 27
---------------INS CastExpression@@(Stream<String>)filtered @TO@ ParenthesizedExpression@@((Stream<String>)filtered) @AT@ 2885 @LENGTH@ 25
------------------INS ParameterizedType@@Stream<String> @TO@ CastExpression@@(Stream<String>)filtered @AT@ 2886 @LENGTH@ 14
---------------------INS SimpleType@@Stream @TO@ ParameterizedType@@Stream<String> @AT@ 2886 @LENGTH@ 6
---------------------INS SimpleType@@String @TO@ ParameterizedType@@Stream<String> @AT@ 2893 @LENGTH@ 6
------------------INS SimpleName@@filtered @TO@ CastExpression@@(Stream<String>)filtered @AT@ 2902 @LENGTH@ 8
------------INS SimpleName@@MethodName:collect:[Collectors.toList()] @TO@ MethodInvocation@@((Stream<String>)filtered).collect(Collectors.toList()) @AT@ 2912 @LENGTH@ 28
---------------INS MethodInvocation@@Collectors.toList() @TO@ SimpleName@@MethodName:collect:[Collectors.toList()] @AT@ 2920 @LENGTH@ 19
------------------INS SimpleName@@Name:Collectors @TO@ MethodInvocation@@Collectors.toList() @AT@ 2920 @LENGTH@ 10
------------------INS SimpleName@@MethodName:toList:[] @TO@ MethodInvocation@@Collectors.toList() @AT@ 2931 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(2,list.size()) @TO@ MethodDeclaration@@public, void, MethodName:testFilteringStream,  @AT@ 2944 @LENGTH@ 36
------INS MethodInvocation@@Assert.assertEquals(2,list.size()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(2,list.size()) @AT@ 2944 @LENGTH@ 35
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(2,list.size()) @AT@ 2944 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:[2, list.size()] @TO@ MethodInvocation@@Assert.assertEquals(2,list.size()) @AT@ 2951 @LENGTH@ 28
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:[2, list.size()] @AT@ 2964 @LENGTH@ 1
------------INS MethodInvocation@@list.size() @TO@ SimpleName@@MethodName:assertEquals:[2, list.size()] @AT@ 2967 @LENGTH@ 11
---------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.size() @AT@ 2967 @LENGTH@ 4
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@list.size() @AT@ 2972 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:Assert.assertFalse("contains filtered element",list.contains("2")) @TO@ MethodDeclaration@@public, void, MethodName:testFilteringStream,  @AT@ 2983 @LENGTH@ 68
------INS MethodInvocation@@Assert.assertFalse("contains filtered element",list.contains("2")) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertFalse("contains filtered element",list.contains("2")) @AT@ 2983 @LENGTH@ 67
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertFalse("contains filtered element",list.contains("2")) @AT@ 2983 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertFalse:["contains filtered element", list.contains("2")] @TO@ MethodInvocation@@Assert.assertFalse("contains filtered element",list.contains("2")) @AT@ 2990 @LENGTH@ 60
------------INS StringLiteral@@"contains filtered element" @TO@ SimpleName@@MethodName:assertFalse:["contains filtered element", list.contains("2")] @AT@ 3002 @LENGTH@ 27
------------INS MethodInvocation@@list.contains("2") @TO@ SimpleName@@MethodName:assertFalse:["contains filtered element", list.contains("2")] @AT@ 3031 @LENGTH@ 18
---------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.contains("2") @AT@ 3031 @LENGTH@ 4
---------------INS SimpleName@@MethodName:contains:["2"] @TO@ MethodInvocation@@list.contains("2") @AT@ 3036 @LENGTH@ 13
------------------INS StringLiteral@@"2" @TO@ SimpleName@@MethodName:contains:["2"] @AT@ 3045 @LENGTH@ 3


INS FieldDeclaration@@public, static, final, AuthorizationGrantType, [CLIENT_CREDENTIALS=new AuthorizationGrantType("client_credentials")] @TO@ TypeDeclaration@@[public, final]AuthorizationGrantType, [Serializable] @AT@ 1911 @LENGTH@ 113
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [CLIENT_CREDENTIALS=new AuthorizationGrantType("client_credentials")] @AT@ 1911 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [CLIENT_CREDENTIALS=new AuthorizationGrantType("client_credentials")] @AT@ 1918 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [CLIENT_CREDENTIALS=new AuthorizationGrantType("client_credentials")] @AT@ 1925 @LENGTH@ 5
---INS SimpleType@@AuthorizationGrantType @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [CLIENT_CREDENTIALS=new AuthorizationGrantType("client_credentials")] @AT@ 1931 @LENGTH@ 22
---INS VariableDeclarationFragment@@CLIENT_CREDENTIALS=new AuthorizationGrantType("client_credentials") @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [CLIENT_CREDENTIALS=new AuthorizationGrantType("client_credentials")] @AT@ 1954 @LENGTH@ 69
------INS SimpleName@@CLIENT_CREDENTIALS @TO@ VariableDeclarationFragment@@CLIENT_CREDENTIALS=new AuthorizationGrantType("client_credentials") @AT@ 1954 @LENGTH@ 18
------INS ClassInstanceCreation@@AuthorizationGrantType["client_credentials"] @TO@ VariableDeclarationFragment@@CLIENT_CREDENTIALS=new AuthorizationGrantType("client_credentials") @AT@ 1975 @LENGTH@ 48
---------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationGrantType["client_credentials"] @AT@ 1975 @LENGTH@ 3
---------INS SimpleType@@AuthorizationGrantType @TO@ ClassInstanceCreation@@AuthorizationGrantType["client_credentials"] @AT@ 1979 @LENGTH@ 22
---------INS StringLiteral@@"client_credentials" @TO@ ClassInstanceCreation@@AuthorizationGrantType["client_credentials"] @AT@ 2002 @LENGTH@ 20


INS ExpressionStatement@@MethodInvocation:Assert.state(this.endpointRegistry != null,"No registry available") @TO@ MethodDeclaration@@protected, void, MethodName:registerAllEndpoints,  @AT@ 4974 @LENGTH@ 69
---INS MethodInvocation@@Assert.state(this.endpointRegistry != null,"No registry available") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(this.endpointRegistry != null,"No registry available") @AT@ 4974 @LENGTH@ 68
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(this.endpointRegistry != null,"No registry available") @AT@ 4974 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[this.endpointRegistry != null, "No registry available"] @TO@ MethodInvocation@@Assert.state(this.endpointRegistry != null,"No registry available") @AT@ 4981 @LENGTH@ 61
---------INS InfixExpression@@this.endpointRegistry != null @TO@ SimpleName@@MethodName:state:[this.endpointRegistry != null, "No registry available"] @AT@ 4987 @LENGTH@ 29
------------INS FieldAccess@@this.endpointRegistry @TO@ InfixExpression@@this.endpointRegistry != null @AT@ 4987 @LENGTH@ 21
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.endpointRegistry @AT@ 4987 @LENGTH@ 4
---------------INS SimpleName@@endpointRegistry @TO@ FieldAccess@@this.endpointRegistry @AT@ 4992 @LENGTH@ 16
------------INS Operator@@!= @TO@ InfixExpression@@this.endpointRegistry != null @AT@ 5008 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@this.endpointRegistry != null @AT@ 5012 @LENGTH@ 4
---------INS StringLiteral@@"No registry available" @TO@ SimpleName@@MethodName:state:[this.endpointRegistry != null, "No registry available"] @AT@ 5018 @LENGTH@ 23


UPD Block@@ThenBody:{  CapabilityServiceSupport support=context.getCapabilityServiceSupport();  for (  GroupBuilderProvider provider : ServiceLoader.load(LocalGroupBuilderProvider.class,LocalGroupBuilderProvider.class.getClassLoader())) {    for (    CapabilityServiceBuilder<?> builder : provider.getBuilders(requirement -> requirement.getServiceName(support,clientMappingsClusterName),clientMappingsClusterName)) {      builder.configure(support).build(target).install();    }  }  for (  CacheBuilderProvider provider : ServiceLoader.load(LocalCacheBuilderProvider.class,LocalCacheBuilderProvider.class.getClassLoader())) {    for (    CapabilityServiceBuilder<?> builder : provider.getBuilders(requirement -> requirement.getServiceName(support,clientMappingsClusterName,null),clientMappingsClusterName,null)) {      builder.configure(support).build(target).install();    }  }} @TO@ ThenBody:{  CapabilityServiceSupport support=context.getCapabilityServiceSupport();  for (  GroupServiceConfiguratorProvider provider : ServiceLoader.load(LocalGroupServiceConfiguratorProvider.class,LocalGroupServiceConfiguratorProvider.class.getClassLoader())) {    for (    CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(requirement -> requirement.getServiceName(support,clientMappingsClusterName),clientMappingsClusterName)) {      configurator.configure(support).build(target).install();    }  }  for (  CacheServiceConfiguratorProvider provider : ServiceLoader.load(LocalCacheServiceConfiguratorProvider.class,LocalCacheServiceConfiguratorProvider.class.getClassLoader())) {    for (    CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(requirement -> requirement.getServiceName(support,clientMappingsClusterName,null),clientMappingsClusterName,null)) {      configurator.configure(support).build(target).install();    }  }} @AT@ 5276 @LENGTH@ 1092
---UPD EnhancedForStatement@@for (GroupBuilderProvider provider : ServiceLoader.load(LocalGroupBuilderProvider.class,LocalGroupBuilderProvider.class.getClassLoader())) {  for (  CapabilityServiceBuilder<?> builder : provider.getBuilders(requirement -> requirement.getServiceName(support,clientMappingsClusterName),clientMappingsClusterName)) {    builder.configure(support).build(target).install();  }} @TO@ for (GroupServiceConfiguratorProvider provider : ServiceLoader.load(LocalGroupServiceConfiguratorProvider.class,LocalGroupServiceConfiguratorProvider.class.getClassLoader())) {  for (  CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(requirement -> requirement.getServiceName(support,clientMappingsClusterName),clientMappingsClusterName)) {    configurator.configure(support).build(target).install();  }} @AT@ 5465 @LENGTH@ 434
------UPD SingleVariableDeclaration@@GroupBuilderProvider provider @TO@ GroupServiceConfiguratorProvider provider @AT@ 5470 @LENGTH@ 29
---------UPD SimpleType@@GroupBuilderProvider @TO@ GroupServiceConfiguratorProvider @AT@ 5470 @LENGTH@ 20
------UPD MethodInvocation@@ServiceLoader.load(LocalGroupBuilderProvider.class,LocalGroupBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(LocalGroupServiceConfiguratorProvider.class,LocalGroupServiceConfiguratorProvider.class.getClassLoader()) @AT@ 5502 @LENGTH@ 101
---------UPD SimpleName@@MethodName:load:[LocalGroupBuilderProvider.class, LocalGroupBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[LocalGroupServiceConfiguratorProvider.class, LocalGroupServiceConfiguratorProvider.class.getClassLoader()] @AT@ 5516 @LENGTH@ 87
------------UPD TypeLiteral@@LocalGroupBuilderProvider.class @TO@ LocalGroupServiceConfiguratorProvider.class @AT@ 5521 @LENGTH@ 31
------------UPD MethodInvocation@@LocalGroupBuilderProvider.class.getClassLoader() @TO@ LocalGroupServiceConfiguratorProvider.class.getClassLoader() @AT@ 5554 @LENGTH@ 48
---------------UPD TypeLiteral@@LocalGroupBuilderProvider.class @TO@ LocalGroupServiceConfiguratorProvider.class @AT@ 5554 @LENGTH@ 31
------UPD EnhancedForStatement@@for (CapabilityServiceBuilder<?> builder : provider.getBuilders(requirement -> requirement.getServiceName(support,clientMappingsClusterName),clientMappingsClusterName)) {  builder.configure(support).build(target).install();} @TO@ for (CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(requirement -> requirement.getServiceName(support,clientMappingsClusterName),clientMappingsClusterName)) {  configurator.configure(support).build(target).install();} @AT@ 5623 @LENGTH@ 262
---------UPD SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @TO@ CapabilityServiceConfigurator configurator @AT@ 5628 @LENGTH@ 35
------------DEL ParameterizedType@@CapabilityServiceBuilder<?> @AT@ 5628 @LENGTH@ 27
---------------DEL SimpleType@@CapabilityServiceBuilder @AT@ 5628 @LENGTH@ 24
---------------DEL WildcardType@@? @AT@ 5653 @LENGTH@ 1
------------UPD SimpleName@@builder @TO@ configurator @AT@ 5656 @LENGTH@ 7
------------INS SimpleType@@CapabilityServiceConfigurator @TO@ SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @AT@ 5717 @LENGTH@ 29
---------UPD MethodInvocation@@provider.getBuilders(requirement -> requirement.getServiceName(support,clientMappingsClusterName),clientMappingsClusterName) @TO@ provider.getServiceConfigurators(requirement -> requirement.getServiceName(support,clientMappingsClusterName),clientMappingsClusterName) @AT@ 5666 @LENGTH@ 126
------------UPD SimpleName@@MethodName:getBuilders:[requirement -> requirement.getServiceName(support,clientMappingsClusterName), clientMappingsClusterName] @TO@ MethodName:getServiceConfigurators:[requirement -> requirement.getServiceName(support,clientMappingsClusterName), clientMappingsClusterName] @AT@ 5675 @LENGTH@ 117
---------UPD ExpressionStatement@@MethodInvocation:builder.configure(support).build(target).install() @TO@ MethodInvocation:configurator.configure(support).build(target).install() @AT@ 5816 @LENGTH@ 51
------------UPD MethodInvocation@@builder.configure(support).build(target).install() @TO@ configurator.configure(support).build(target).install() @AT@ 5816 @LENGTH@ 50
---------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 5816 @LENGTH@ 7
---UPD EnhancedForStatement@@for (CacheBuilderProvider provider : ServiceLoader.load(LocalCacheBuilderProvider.class,LocalCacheBuilderProvider.class.getClassLoader())) {  for (  CapabilityServiceBuilder<?> builder : provider.getBuilders(requirement -> requirement.getServiceName(support,clientMappingsClusterName,null),clientMappingsClusterName,null)) {    builder.configure(support).build(target).install();  }} @TO@ for (CacheServiceConfiguratorProvider provider : ServiceLoader.load(LocalCacheServiceConfiguratorProvider.class,LocalCacheServiceConfiguratorProvider.class.getClassLoader())) {  for (  CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(requirement -> requirement.getServiceName(support,clientMappingsClusterName,null),clientMappingsClusterName,null)) {    configurator.configure(support).build(target).install();  }} @AT@ 5912 @LENGTH@ 446
------UPD SingleVariableDeclaration@@CacheBuilderProvider provider @TO@ CacheServiceConfiguratorProvider provider @AT@ 5917 @LENGTH@ 29
---------UPD SimpleType@@CacheBuilderProvider @TO@ CacheServiceConfiguratorProvider @AT@ 5917 @LENGTH@ 20
------UPD MethodInvocation@@ServiceLoader.load(LocalCacheBuilderProvider.class,LocalCacheBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(LocalCacheServiceConfiguratorProvider.class,LocalCacheServiceConfiguratorProvider.class.getClassLoader()) @AT@ 5949 @LENGTH@ 101
---------UPD SimpleName@@MethodName:load:[LocalCacheBuilderProvider.class, LocalCacheBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[LocalCacheServiceConfiguratorProvider.class, LocalCacheServiceConfiguratorProvider.class.getClassLoader()] @AT@ 5963 @LENGTH@ 87
------------UPD TypeLiteral@@LocalCacheBuilderProvider.class @TO@ LocalCacheServiceConfiguratorProvider.class @AT@ 5968 @LENGTH@ 31
------------UPD MethodInvocation@@LocalCacheBuilderProvider.class.getClassLoader() @TO@ LocalCacheServiceConfiguratorProvider.class.getClassLoader() @AT@ 6001 @LENGTH@ 48
---------------UPD TypeLiteral@@LocalCacheBuilderProvider.class @TO@ LocalCacheServiceConfiguratorProvider.class @AT@ 6001 @LENGTH@ 31
------UPD EnhancedForStatement@@for (CapabilityServiceBuilder<?> builder : provider.getBuilders(requirement -> requirement.getServiceName(support,clientMappingsClusterName,null),clientMappingsClusterName,null)) {  builder.configure(support).build(target).install();} @TO@ for (CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(requirement -> requirement.getServiceName(support,clientMappingsClusterName,null),clientMappingsClusterName,null)) {  configurator.configure(support).build(target).install();} @AT@ 6070 @LENGTH@ 274
---------UPD SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @TO@ CapabilityServiceConfigurator configurator @AT@ 6075 @LENGTH@ 35
------------DEL ParameterizedType@@CapabilityServiceBuilder<?> @AT@ 6075 @LENGTH@ 27
---------------DEL SimpleType@@CapabilityServiceBuilder @AT@ 6075 @LENGTH@ 24
---------------DEL WildcardType@@? @AT@ 6100 @LENGTH@ 1
------------UPD SimpleName@@builder @TO@ configurator @AT@ 6103 @LENGTH@ 7
------------INS SimpleType@@CapabilityServiceConfigurator @TO@ SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @AT@ 6224 @LENGTH@ 29
---------UPD MethodInvocation@@provider.getBuilders(requirement -> requirement.getServiceName(support,clientMappingsClusterName,null),clientMappingsClusterName,null) @TO@ provider.getServiceConfigurators(requirement -> requirement.getServiceName(support,clientMappingsClusterName,null),clientMappingsClusterName,null) @AT@ 6113 @LENGTH@ 138
------------UPD SimpleName@@MethodName:getBuilders:[requirement -> requirement.getServiceName(support,clientMappingsClusterName,null), clientMappingsClusterName, null] @TO@ MethodName:getServiceConfigurators:[requirement -> requirement.getServiceName(support,clientMappingsClusterName,null), clientMappingsClusterName, null] @AT@ 6122 @LENGTH@ 129
---------UPD ExpressionStatement@@MethodInvocation:builder.configure(support).build(target).install() @TO@ MethodInvocation:configurator.configure(support).build(target).install() @AT@ 6275 @LENGTH@ 51
------------UPD MethodInvocation@@builder.configure(support).build(target).install() @TO@ configurator.configure(support).build(target).install() @AT@ 6275 @LENGTH@ 50
---------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 6275 @LENGTH@ 7


UPD VariableDeclarationStatement@@Object lookupKey=this.determineCurrentLookupKey(); @TO@ Object lookupKey=determineCurrentLookupKey(); @AT@ 4570 @LENGTH@ 52
---UPD VariableDeclarationFragment@@lookupKey=this.determineCurrentLookupKey() @TO@ lookupKey=determineCurrentLookupKey() @AT@ 4577 @LENGTH@ 44
------UPD MethodInvocation@@this.determineCurrentLookupKey() @TO@ MethodName:determineCurrentLookupKey:[] @AT@ 4589 @LENGTH@ 32
---------DEL ThisExpression@@this @AT@ 4589 @LENGTH@ 4
---------DEL SimpleName@@MethodName:determineCurrentLookupKey:[] @AT@ 4594 @LENGTH@ 27


INS MethodDeclaration@@public, boolean, MethodName:isTransactionActive,  @TO@ TypeDeclaration@@[@Value, static]ClientSessionBoundMongoDbFactory, [MongoDbFactory] @AT@ 7072 @LENGTH@ 103
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isTransactionActive,  @AT@ 7072 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isTransactionActive,  @AT@ 7079 @LENGTH@ 7
---INS SimpleName@@MethodName:isTransactionActive @TO@ MethodDeclaration@@public, boolean, MethodName:isTransactionActive,  @AT@ 7087 @LENGTH@ 19
---INS ReturnStatement@@InfixExpression:session != null && session.hasActiveTransaction() @TO@ MethodDeclaration@@public, boolean, MethodName:isTransactionActive,  @AT@ 7114 @LENGTH@ 57
------INS InfixExpression@@session != null && session.hasActiveTransaction() @TO@ ReturnStatement@@InfixExpression:session != null && session.hasActiveTransaction() @AT@ 7121 @LENGTH@ 49
---------INS InfixExpression@@session != null @TO@ InfixExpression@@session != null && session.hasActiveTransaction() @AT@ 7121 @LENGTH@ 15
------------INS SimpleName@@session @TO@ InfixExpression@@session != null @AT@ 7121 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@session != null @AT@ 7128 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@session != null @AT@ 7132 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@session != null && session.hasActiveTransaction() @AT@ 7136 @LENGTH@ 2
---------INS MethodInvocation@@session.hasActiveTransaction() @TO@ InfixExpression@@session != null && session.hasActiveTransaction() @AT@ 7140 @LENGTH@ 30
------------INS SimpleName@@Name:session @TO@ MethodInvocation@@session.hasActiveTransaction() @AT@ 7140 @LENGTH@ 7
------------INS SimpleName@@MethodName:hasActiveTransaction:[] @TO@ MethodInvocation@@session.hasActiveTransaction() @AT@ 7148 @LENGTH@ 22


UPD VariableDeclarationStatement@@Cache<?,?> cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2077 @LENGTH@ 172
---UPD VariableDeclarationFragment@@cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2089 @LENGTH@ 159
------UPD MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2097 @LENGTH@ 151
---------DEL SimpleName@@Name:ServiceContainerHelper @AT@ 2097 @LENGTH@ 22
---------INS ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2100 @LENGTH@ 157
------------INS New@@new @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2100 @LENGTH@ 3
------------INS ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2104 @LENGTH@ 35
---------------INS SimpleType@@PassiveServiceSupplier @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2104 @LENGTH@ 22
---------------INS ParameterizedType@@Cache<?,?> @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2127 @LENGTH@ 11
------------------INS SimpleType@@Cache @TO@ ParameterizedType@@Cache<?,?> @AT@ 2127 @LENGTH@ 5
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2133 @LENGTH@ 1
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2136 @LENGTH@ 1
------------INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2140 @LENGTH@ 32
---------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2130 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2138 @LENGTH@ 25
------------------UPD BooleanLiteral@@false @TO@ true @AT@ 2157 @LENGTH@ 5
------------MOV MethodInvocation@@InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2165 @LENGTH@ 82
---------DEL SimpleName@@MethodName:findValue:[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2120 @LENGTH@ 128
------------DEL MethodInvocation@@context.getServiceRegistry(false) @AT@ 2130 @LENGTH@ 33
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2258 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:when(authentication.getRefreshToken()).thenReturn(mock(OAuth2RefreshToken.class)) @TO@ MethodDeclaration@@private, void, MethodName:setUpAuthenticationResult, ClientRegistration registration,  @AT@ 14689 @LENGTH@ 82
---INS MethodInvocation@@when(authentication.getRefreshToken()).thenReturn(mock(OAuth2RefreshToken.class)) @TO@ ExpressionStatement@@MethodInvocation:when(authentication.getRefreshToken()).thenReturn(mock(OAuth2RefreshToken.class)) @AT@ 14689 @LENGTH@ 81
------INS MethodInvocation@@MethodName:when:[authentication.getRefreshToken()] @TO@ MethodInvocation@@when(authentication.getRefreshToken()).thenReturn(mock(OAuth2RefreshToken.class)) @AT@ 14689 @LENGTH@ 38
---------INS MethodInvocation@@authentication.getRefreshToken() @TO@ MethodInvocation@@MethodName:when:[authentication.getRefreshToken()] @AT@ 14694 @LENGTH@ 32
------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getRefreshToken() @AT@ 14694 @LENGTH@ 14
------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@authentication.getRefreshToken() @AT@ 14709 @LENGTH@ 17
------INS SimpleName@@MethodName:thenReturn:[mock(OAuth2RefreshToken.class)] @TO@ MethodInvocation@@when(authentication.getRefreshToken()).thenReturn(mock(OAuth2RefreshToken.class)) @AT@ 14728 @LENGTH@ 42
---------INS MethodInvocation@@mock(OAuth2RefreshToken.class) @TO@ SimpleName@@MethodName:thenReturn:[mock(OAuth2RefreshToken.class)] @AT@ 14739 @LENGTH@ 30
------------INS SimpleName@@MethodName:mock:[OAuth2RefreshToken.class] @TO@ MethodInvocation@@mock(OAuth2RefreshToken.class) @AT@ 14739 @LENGTH@ 30
---------------INS TypeLiteral@@OAuth2RefreshToken.class @TO@ SimpleName@@MethodName:mock:[OAuth2RefreshToken.class] @AT@ 14744 @LENGTH@ 24


DEL FieldDeclaration@@Session, [session] @AT@ 1295 @LENGTH@ 16
---DEL SimpleType@@Session @AT@ 1295 @LENGTH@ 7
---DEL VariableDeclarationFragment@@session @AT@ 1303 @LENGTH@ 7
------DEL SimpleName@@session @AT@ 1303 @LENGTH@ 7


UPD VariableDeclarationStatement@@NonNamespaceOperation<Deployment,DeploymentList,DoneableDeployment,ScalableResource<Deployment,DoneableDeployment>> w=getEndpoint().getKubernetesClient().extensions().deployments(); @TO@ NonNamespaceOperation<Deployment,DeploymentList,DoneableDeployment,ScalableResource<Deployment,DoneableDeployment>> w=getEndpoint().getKubernetesClient().apps().deployments(); @AT@ 3586 @LENGTH@ 187
---UPD VariableDeclarationFragment@@w=getEndpoint().getKubernetesClient().extensions().deployments() @TO@ w=getEndpoint().getKubernetesClient().apps().deployments() @AT@ 3706 @LENGTH@ 66
------UPD MethodInvocation@@getEndpoint().getKubernetesClient().extensions().deployments() @TO@ getEndpoint().getKubernetesClient().apps().deployments() @AT@ 3710 @LENGTH@ 62
---------UPD MethodInvocation@@MethodName:extensions:[] @TO@ MethodName:apps:[] @AT@ 3710 @LENGTH@ 48


UPD FieldDeclaration@@static, final, SimpleAttributeDefinition, [CACHE_CONTAINER=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CACHE_CONTAINER,ModelType.STRING,true).setXmlName(EJB3SubsystemXMLAttribute.CACHE_CONTAINER.getLocalName()).setDefaultValue(new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build()] @TO@ static, final, SimpleAttributeDefinition, [CACHE_CONTAINER=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CACHE_CONTAINER,ModelType.STRING,true).setXmlName(EJB3SubsystemXMLAttribute.CACHE_CONTAINER.getLocalName()).setDefaultValue(new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build()] @AT@ 1404 @LENGTH@ 477
---UPD VariableDeclarationFragment@@CACHE_CONTAINER=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CACHE_CONTAINER,ModelType.STRING,true).setXmlName(EJB3SubsystemXMLAttribute.CACHE_CONTAINER.getLocalName()).setDefaultValue(new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ CACHE_CONTAINER=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CACHE_CONTAINER,ModelType.STRING,true).setXmlName(EJB3SubsystemXMLAttribute.CACHE_CONTAINER.getLocalName()).setDefaultValue(new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 1443 @LENGTH@ 432
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CACHE_CONTAINER,ModelType.STRING,true).setXmlName(EJB3SubsystemXMLAttribute.CACHE_CONTAINER.getLocalName()).setDefaultValue(new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CACHE_CONTAINER,ModelType.STRING,true).setXmlName(EJB3SubsystemXMLAttribute.CACHE_CONTAINER.getLocalName()).setDefaultValue(new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 1461 @LENGTH@ 414
---------UPD MethodInvocation@@MethodName:setDefaultValue:[new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)] @TO@ MethodName:setDefaultValue:[new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)] @AT@ 1461 @LENGTH@ 285
------------UPD ClassInstanceCreation@@ModelNode[BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME] @TO@ ModelNode[BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME] @AT@ 1669 @LENGTH@ 76
---------------UPD QualifiedName@@BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME @TO@ BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME @AT@ 1683 @LENGTH@ 61
------------------UPD SimpleName@@BeanManagerFactoryBuilderConfiguration @TO@ BeanManagerFactoryServiceConfiguratorConfiguration @AT@ 1683 @LENGTH@ 38


UPD FieldDeclaration@@private, RepositoryMethodReference, [repositoryMethodReference] @TO@ private, RepositoryMethodReference<?>, [repositoryMethodReference] @AT@ 1732 @LENGTH@ 60
---INS ParameterizedType@@RepositoryMethodReference<?> @TO@ FieldDeclaration@@private, RepositoryMethodReference, [repositoryMethodReference] @AT@ 1740 @LENGTH@ 28
------INS SimpleType@@RepositoryMethodReference @TO@ ParameterizedType@@RepositoryMethodReference<?> @AT@ 1740 @LENGTH@ 25
------INS WildcardType@@? @TO@ ParameterizedType@@RepositoryMethodReference<?> @AT@ 1766 @LENGTH@ 1
---DEL SimpleType@@RepositoryMethodReference @AT@ 1740 @LENGTH@ 25


UPD ReturnStatement@@MethodInvocation:interfaceResourcePaths.toArray(new String[interfaceResourcePaths.size()]) @TO@ MethodInvocation:interfaceResourcePaths.toArray(new String[0]) @AT@ 5384 @LENGTH@ 81
---UPD MethodInvocation@@interfaceResourcePaths.toArray(new String[interfaceResourcePaths.size()]) @TO@ interfaceResourcePaths.toArray(new String[0]) @AT@ 5391 @LENGTH@ 73
------UPD SimpleName@@MethodName:toArray:[new String[interfaceResourcePaths.size()]] @TO@ MethodName:toArray:[new String[0]] @AT@ 5414 @LENGTH@ 50
---------UPD ArrayCreation@@new String[interfaceResourcePaths.size()] @TO@ new String[0] @AT@ 5422 @LENGTH@ 41
------------INS NumberLiteral@@0 @TO@ ArrayCreation@@new String[interfaceResourcePaths.size()] @AT@ 5427 @LENGTH@ 1
------------DEL MethodInvocation@@interfaceResourcePaths.size() @AT@ 5433 @LENGTH@ 29
---------------DEL SimpleName@@Name:interfaceResourcePaths @AT@ 5433 @LENGTH@ 22
---------------DEL SimpleName@@MethodName:size:[] @AT@ 5456 @LENGTH@ 6


INS FieldDeclaration@@private, String, [unsignedToken="eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJleHAiOi0yMDMzMjI0OTcsImp0aSI6IjEyMyIsInR5cCI6IkpXVCJ9."] @TO@ TypeDeclaration@@[public]NimbusReactiveJwtDecoderTests,  @AT@ 2180 @LENGTH@ 127
---INS Modifier@@private @TO@ FieldDeclaration@@private, String, [unsignedToken="eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJleHAiOi0yMDMzMjI0OTcsImp0aSI6IjEyMyIsInR5cCI6IkpXVCJ9."] @AT@ 2180 @LENGTH@ 7
---INS SimpleType@@String @TO@ FieldDeclaration@@private, String, [unsignedToken="eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJleHAiOi0yMDMzMjI0OTcsImp0aSI6IjEyMyIsInR5cCI6IkpXVCJ9."] @AT@ 2188 @LENGTH@ 6
---INS VariableDeclarationFragment@@unsignedToken="eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJleHAiOi0yMDMzMjI0OTcsImp0aSI6IjEyMyIsInR5cCI6IkpXVCJ9." @TO@ FieldDeclaration@@private, String, [unsignedToken="eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJleHAiOi0yMDMzMjI0OTcsImp0aSI6IjEyMyIsInR5cCI6IkpXVCJ9."] @AT@ 2195 @LENGTH@ 111
------INS SimpleName@@unsignedToken @TO@ VariableDeclarationFragment@@unsignedToken="eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJleHAiOi0yMDMzMjI0OTcsImp0aSI6IjEyMyIsInR5cCI6IkpXVCJ9." @AT@ 2195 @LENGTH@ 13
------INS StringLiteral@@"eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJleHAiOi0yMDMzMjI0OTcsImp0aSI6IjEyMyIsInR5cCI6IkpXVCJ9." @TO@ VariableDeclarationFragment@@unsignedToken="eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJleHAiOi0yMDMzMjI0OTcsImp0aSI6IjEyMyIsInR5cCI6IkpXVCJ9." @AT@ 2211 @LENGTH@ 95


UPD EnhancedForStatement@@for (Task<? extends Serializable> task : rootTasks) {  Assert.assertEquals(0,task.executeTask(null));} @TO@ for (Task<?> task : rootTasks) {  Assert.assertEquals(0,task.executeTask(null));} @AT@ 2130 @LENGTH@ 112
---UPD SingleVariableDeclaration@@Task<? extends Serializable> task @TO@ Task<?> task @AT@ 2134 @LENGTH@ 33
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2134 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:builders.add(new CacheBuilder<Object,Object>(ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)),containerName,cacheName){
  @Override public ServiceBuilder<Cache<Object,Object>> build(  ServiceTarget target){
    return super.build(target).addDependency(name.append("marshalling"));
  }
}
) @TO@ MethodInvocation:builders.add(new CacheServiceConfigurator<>(ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)),containerName,cacheName).require(new ServiceDependency(name.append("marshalling")))) @AT@ 6048 @LENGTH@ 381
---UPD MethodInvocation@@builders.add(new CacheBuilder<Object,Object>(ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)),containerName,cacheName){
  @Override public ServiceBuilder<Cache<Object,Object>> build(  ServiceTarget target){
    return super.build(target).addDependency(name.append("marshalling"));
  }
}
) @TO@ builders.add(new CacheServiceConfigurator<>(ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)),containerName,cacheName).require(new ServiceDependency(name.append("marshalling")))) @AT@ 6048 @LENGTH@ 380
------UPD SimpleName@@MethodName:add:[new CacheBuilder<Object,Object>(ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)),containerName,cacheName){
  @Override public ServiceBuilder<Cache<Object,Object>> build(  ServiceTarget target){
    return super.build(target).addDependency(name.append("marshalling"));
  }
}
] @TO@ MethodName:add:[new CacheServiceConfigurator<>(ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)),containerName,cacheName).require(new ServiceDependency(name.append("marshalling")))] @AT@ 6057 @LENGTH@ 371
---------INS MethodInvocation@@new CacheServiceConfigurator<>(ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)),containerName,cacheName).require(new ServiceDependency(name.append("marshalling"))) @TO@ SimpleName@@MethodName:add:[new CacheBuilder<Object,Object>(ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)),containerName,cacheName){
  @Override public ServiceBuilder<Cache<Object,Object>> build(  ServiceTarget target){
    return super.build(target).addDependency(name.append("marshalling"));
  }
}
] @AT@ 5974 @LENGTH@ 202
------------INS ClassInstanceCreation@@CacheServiceConfigurator<>[ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)), containerName, cacheName] @TO@ MethodInvocation@@new CacheServiceConfigurator<>(ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)),containerName,cacheName).require(new ServiceDependency(name.append("marshalling"))) @AT@ 5974 @LENGTH@ 143
---------------MOV New@@new @TO@ ClassInstanceCreation@@CacheServiceConfigurator<>[ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)), containerName, cacheName] @AT@ 6061 @LENGTH@ 3
---------------MOV ParameterizedType@@CacheBuilder<Object,Object> @TO@ ClassInstanceCreation@@CacheServiceConfigurator<>[ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)), containerName, cacheName] @AT@ 6065 @LENGTH@ 28
---------------MOV MethodInvocation@@ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)) @TO@ ClassInstanceCreation@@CacheServiceConfigurator<>[ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)), containerName, cacheName] @AT@ 6094 @LENGTH@ 85
---------------MOV SimpleName@@containerName @TO@ ClassInstanceCreation@@CacheServiceConfigurator<>[ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)), containerName, cacheName] @AT@ 6181 @LENGTH@ 13
---------------MOV SimpleName@@cacheName @TO@ ClassInstanceCreation@@CacheServiceConfigurator<>[ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)), containerName, cacheName] @AT@ 6196 @LENGTH@ 9
------------MOV SimpleName@@MethodName:addDependency:[name.append("marshalling")] @TO@ MethodInvocation@@new CacheServiceConfigurator<>(ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)),containerName,cacheName).require(new ServiceDependency(name.append("marshalling"))) @AT@ 6361 @LENGTH@ 41
---------------INS ClassInstanceCreation@@ServiceDependency[name.append("marshalling")] @TO@ SimpleName@@MethodName:addDependency:[name.append("marshalling")] @AT@ 6126 @LENGTH@ 49
------------------INS New@@new @TO@ ClassInstanceCreation@@ServiceDependency[name.append("marshalling")] @AT@ 6126 @LENGTH@ 3
------------------INS SimpleType@@ServiceDependency @TO@ ClassInstanceCreation@@ServiceDependency[name.append("marshalling")] @AT@ 6130 @LENGTH@ 17
------------------MOV MethodInvocation@@name.append("marshalling") @TO@ ClassInstanceCreation@@ServiceDependency[name.append("marshalling")] @AT@ 6375 @LENGTH@ 26
---------------INS ClassInstanceCreation@@ServiceDependency[name.append("marshalling")] @TO@ SimpleName@@MethodName:addDependency:[name.append("marshalling")] @AT@ 6126 @LENGTH@ 49
------------------INS New@@new @TO@ ClassInstanceCreation@@ServiceDependency[name.append("marshalling")] @AT@ 6126 @LENGTH@ 3
------------------INS SimpleType@@ServiceDependency @TO@ ClassInstanceCreation@@ServiceDependency[name.append("marshalling")] @AT@ 6130 @LENGTH@ 17
------------------MOV MethodInvocation@@name.append("marshalling") @TO@ ClassInstanceCreation@@ServiceDependency[name.append("marshalling")] @AT@ 6375 @LENGTH@ 26
---------DEL ClassInstanceCreation@@CacheBuilder<Object,Object>[ServiceName.parse(InfinispanCacheRequirement.CACHE.resolve(containerName,cacheName)), containerName, cacheName] @AT@ 6061 @LENGTH@ 366
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 6207 @LENGTH@ 220
---------------DEL MethodDeclaration@@public, ServiceBuilder<Cache<Object,Object>>, MethodName:build, ServiceTarget target,  @AT@ 6243 @LENGTH@ 174
------------------DEL Modifier@@public @AT@ 6243 @LENGTH@ 6
------------------DEL ParameterizedType@@ServiceBuilder<Cache<Object,Object>> @AT@ 6250 @LENGTH@ 37
---------------------DEL SimpleType@@ServiceBuilder @AT@ 6250 @LENGTH@ 14
---------------------DEL ParameterizedType@@Cache<Object,Object> @AT@ 6265 @LENGTH@ 21
------------------------DEL SimpleType@@Cache @AT@ 6265 @LENGTH@ 5
------------------------DEL SimpleType@@Object @AT@ 6271 @LENGTH@ 6
------------------------DEL SimpleType@@Object @AT@ 6279 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:build @AT@ 6288 @LENGTH@ 5
------------------DEL SingleVariableDeclaration@@ServiceTarget target @AT@ 6294 @LENGTH@ 20
---------------------DEL SimpleType@@ServiceTarget @AT@ 6294 @LENGTH@ 13
---------------------DEL SimpleName@@target @AT@ 6308 @LENGTH@ 6
------------------DEL ReturnStatement@@MethodInvocation:super.build(target).addDependency(name.append("marshalling")) @AT@ 6334 @LENGTH@ 69
---------------------DEL MethodInvocation@@super.build(target).addDependency(name.append("marshalling")) @AT@ 6341 @LENGTH@ 61
------------------------DEL SuperMethodInvocation@@super.build(target) @AT@ 6341 @LENGTH@ 19
---------------------------DEL SimpleName@@MethodName:build:[target] @AT@ 6347 @LENGTH@ 5
---------------------------DEL SimpleName@@target @AT@ 6353 @LENGTH@ 6


UPD MethodDeclaration@@private, static, Set<String>, MethodName:getInititalEntityClasses, Element element,  @TO@ private, static, Set<String>, MethodName:getInitialEntityClasses, Element element,  @AT@ 13332 @LENGTH@ 699
---UPD SimpleName@@MethodName:getInititalEntityClasses @TO@ MethodName:getInitialEntityClasses @AT@ 13359 @LENGTH@ 24


INS ExpressionStatement@@MethodInvocation:callback.done(false) @TO@ MethodDeclaration@@public, boolean, MethodName:process, Exchange exchange, AsyncCallback callback,  @AT@ 8995 @LENGTH@ 21
---INS MethodInvocation@@callback.done(false) @TO@ ExpressionStatement@@MethodInvocation:callback.done(false) @AT@ 8995 @LENGTH@ 20
------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(false) @AT@ 8995 @LENGTH@ 8
------INS SimpleName@@MethodName:done:[false] @TO@ MethodInvocation@@callback.done(false) @AT@ 9004 @LENGTH@ 11
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:done:[false] @AT@ 9009 @LENGTH@ 5


UPD ReturnStatement@@InfixExpression:endTime == null @TO@ InfixExpression:startTime != null && endTime == null @AT@ 6948 @LENGTH@ 23
---DEL InfixExpression@@endTime == null @AT@ 6955 @LENGTH@ 15
---INS InfixExpression@@startTime != null && endTime == null @TO@ ReturnStatement@@InfixExpression:endTime == null @AT@ 7014 @LENGTH@ 36
------INS InfixExpression@@startTime != null @TO@ InfixExpression@@startTime != null && endTime == null @AT@ 7014 @LENGTH@ 17
---------INS SimpleName@@startTime @TO@ InfixExpression@@startTime != null @AT@ 7014 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@startTime != null @AT@ 7023 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@startTime != null @AT@ 7027 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@startTime != null && endTime == null @AT@ 7031 @LENGTH@ 2
------INS InfixExpression@@endTime == null @TO@ InfixExpression@@startTime != null && endTime == null @AT@ 7035 @LENGTH@ 15
---------MOV SimpleName@@endTime @TO@ InfixExpression@@endTime == null @AT@ 6955 @LENGTH@ 7
---------MOV Operator@@== @TO@ InfixExpression@@endTime == null @AT@ 6962 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@endTime == null @AT@ 6966 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(OPERATION,QUERY) @TO@ MethodInvocation:exchange.getIn().setHeader(OPERATION,InfinispanOperation.QUERY) @AT@ 5999 @LENGTH@ 45
---UPD MethodInvocation@@exchange.getIn().setHeader(OPERATION,QUERY) @TO@ exchange.getIn().setHeader(OPERATION,InfinispanOperation.QUERY) @AT@ 5999 @LENGTH@ 44
------UPD SimpleName@@MethodName:setHeader:[OPERATION, QUERY] @TO@ MethodName:setHeader:[OPERATION, InfinispanOperation.QUERY] @AT@ 6016 @LENGTH@ 27
---------INS QualifiedName@@InfinispanOperation.QUERY @TO@ SimpleName@@MethodName:setHeader:[OPERATION, QUERY] @AT@ 6037 @LENGTH@ 25
------------INS SimpleName@@InfinispanOperation @TO@ QualifiedName@@InfinispanOperation.QUERY @AT@ 6037 @LENGTH@ 19
------------INS SimpleName@@QUERY @TO@ QualifiedName@@InfinispanOperation.QUERY @AT@ 6057 @LENGTH@ 5
---------DEL SimpleName@@QUERY @AT@ 6037 @LENGTH@ 5


UPD SuperConstructorInvocation@@super((name,group) -> new LocalGroupBuilder(name));
 @TO@ super((name,group) -> new LocalGroupServiceConfigurator(name));
 @AT@ 1580 @LENGTH@ 52
---UPD LambdaExpression@@(name,group) -> new LocalGroupBuilder(name) @TO@ (name,group) -> new LocalGroupServiceConfigurator(name) @AT@ 1586 @LENGTH@ 44
------UPD ClassInstanceCreation@@LocalGroupBuilder[name] @TO@ LocalGroupServiceConfigurator[name] @AT@ 1603 @LENGTH@ 27
---------UPD SimpleType@@LocalGroupBuilder @TO@ LocalGroupServiceConfigurator @AT@ 1607 @LENGTH@ 17


INS MethodDeclaration@@public, voidMethodName:OidcUserRequest, ClientRegistration clientRegistration, OAuth2AccessToken accessToken, OidcIdToken idToken,  @TO@ TypeDeclaration@@[public]OidcUserRequest, OAuth2UserRequest @AT@ 1652 @LENGTH@ 200
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:OidcUserRequest, ClientRegistration clientRegistration, OAuth2AccessToken accessToken, OidcIdToken idToken,  @AT@ 1652 @LENGTH@ 6
---INS SimpleName@@MethodName:OidcUserRequest @TO@ MethodDeclaration@@public, voidMethodName:OidcUserRequest, ClientRegistration clientRegistration, OAuth2AccessToken accessToken, OidcIdToken idToken,  @AT@ 1659 @LENGTH@ 15
---INS SingleVariableDeclaration@@ClientRegistration clientRegistration @TO@ MethodDeclaration@@public, voidMethodName:OidcUserRequest, ClientRegistration clientRegistration, OAuth2AccessToken accessToken, OidcIdToken idToken,  @AT@ 1675 @LENGTH@ 37
------INS SimpleType@@ClientRegistration @TO@ SingleVariableDeclaration@@ClientRegistration clientRegistration @AT@ 1675 @LENGTH@ 18
------INS SimpleName@@clientRegistration @TO@ SingleVariableDeclaration@@ClientRegistration clientRegistration @AT@ 1694 @LENGTH@ 18
---INS SingleVariableDeclaration@@OAuth2AccessToken accessToken @TO@ MethodDeclaration@@public, voidMethodName:OidcUserRequest, ClientRegistration clientRegistration, OAuth2AccessToken accessToken, OidcIdToken idToken,  @AT@ 1721 @LENGTH@ 29
------INS SimpleType@@OAuth2AccessToken @TO@ SingleVariableDeclaration@@OAuth2AccessToken accessToken @AT@ 1721 @LENGTH@ 17
------INS SimpleName@@accessToken @TO@ SingleVariableDeclaration@@OAuth2AccessToken accessToken @AT@ 1739 @LENGTH@ 11
---INS SingleVariableDeclaration@@OidcIdToken idToken @TO@ MethodDeclaration@@public, voidMethodName:OidcUserRequest, ClientRegistration clientRegistration, OAuth2AccessToken accessToken, OidcIdToken idToken,  @AT@ 1752 @LENGTH@ 19
------INS SimpleType@@OidcIdToken @TO@ SingleVariableDeclaration@@OidcIdToken idToken @AT@ 1752 @LENGTH@ 11
------INS SimpleName@@idToken @TO@ SingleVariableDeclaration@@OidcIdToken idToken @AT@ 1764 @LENGTH@ 7
---INS ConstructorInvocation@@this(clientRegistration,accessToken,idToken,Collections.emptyMap()); @TO@ MethodDeclaration@@public, voidMethodName:OidcUserRequest, ClientRegistration clientRegistration, OAuth2AccessToken accessToken, OidcIdToken idToken,  @AT@ 1778 @LENGTH@ 71
------INS SimpleName@@clientRegistration @TO@ ConstructorInvocation@@this(clientRegistration,accessToken,idToken,Collections.emptyMap()); @AT@ 1783 @LENGTH@ 18
------INS SimpleName@@accessToken @TO@ ConstructorInvocation@@this(clientRegistration,accessToken,idToken,Collections.emptyMap()); @AT@ 1803 @LENGTH@ 11
------INS SimpleName@@idToken @TO@ ConstructorInvocation@@this(clientRegistration,accessToken,idToken,Collections.emptyMap()); @AT@ 1816 @LENGTH@ 7
------INS MethodInvocation@@Collections.emptyMap() @TO@ ConstructorInvocation@@this(clientRegistration,accessToken,idToken,Collections.emptyMap()); @AT@ 1825 @LENGTH@ 22
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 1825 @LENGTH@ 11
---------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 1837 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthenticationException.class).hasMessage("[unauthorized_client] The client is not authorized") @TO@ MethodInvocation:assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[unauthorized_client] The client is not authorized") @AT@ 1593 @LENGTH@ 191
---UPD MethodInvocation@@assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthenticationException.class).hasMessage("[unauthorized_client] The client is not authorized") @TO@ assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[unauthorized_client] The client is not authorized") @AT@ 1593 @LENGTH@ 190
------UPD MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthenticationException.class] @TO@ MethodName:isInstanceOf:[OAuth2AuthorizationException.class] @AT@ 1593 @LENGTH@ 120
---------UPD TypeLiteral@@OAuth2AuthenticationException.class @TO@ OAuth2AuthorizationException.class @AT@ 1677 @LENGTH@ 35


INS MethodDeclaration@@public, void, MethodName:filterWhenDoesMatchThenResolveRedirectUriExpandedExcludesQueryString,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]OAuth2AuthorizationRequestRedirectWebFilterTests,  @AT@ 5638 @LENGTH@ 753
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:filterWhenDoesMatchThenResolveRedirectUriExpandedExcludesQueryString,  @AT@ 5638 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:filterWhenDoesMatchThenResolveRedirectUriExpandedExcludesQueryString,  @AT@ 5645 @LENGTH@ 4
---INS SimpleName@@MethodName:filterWhenDoesMatchThenResolveRedirectUriExpandedExcludesQueryString @TO@ MethodDeclaration@@public, void, MethodName:filterWhenDoesMatchThenResolveRedirectUriExpandedExcludesQueryString,  @AT@ 5650 @LENGTH@ 68
---INS VariableDeclarationStatement@@FluxExchangeResult<String> result=this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenDoesMatchThenResolveRedirectUriExpandedExcludesQueryString,  @AT@ 5725 @LENGTH@ 199
------INS ParameterizedType@@FluxExchangeResult<String> @TO@ VariableDeclarationStatement@@FluxExchangeResult<String> result=this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class); @AT@ 5725 @LENGTH@ 26
---------INS SimpleType@@FluxExchangeResult @TO@ ParameterizedType@@FluxExchangeResult<String> @AT@ 5725 @LENGTH@ 18
---------INS SimpleType@@String @TO@ ParameterizedType@@FluxExchangeResult<String> @AT@ 5744 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @TO@ VariableDeclarationStatement@@FluxExchangeResult<String> result=this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class); @AT@ 5752 @LENGTH@ 171
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5752 @LENGTH@ 6
---------INS MethodInvocation@@this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @TO@ VariableDeclarationFragment@@result=this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5761 @LENGTH@ 162
------------INS MethodInvocation@@MethodName:is3xxRedirection:[] @TO@ MethodInvocation@@this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5761 @LENGTH@ 135
------------INS MethodInvocation@@MethodName:expectStatus:[] @TO@ MethodInvocation@@this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5761 @LENGTH@ 116
------------INS MethodInvocation@@MethodName:exchange:[] @TO@ MethodInvocation@@this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5761 @LENGTH@ 96
------------INS MethodInvocation@@MethodName:uri:["https://example.com/oauth2/authorization/github?foo=bar"] @TO@ MethodInvocation@@this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5761 @LENGTH@ 85
---------------INS StringLiteral@@"https://example.com/oauth2/authorization/github?foo=bar" @TO@ MethodInvocation@@MethodName:uri:["https://example.com/oauth2/authorization/github?foo=bar"] @AT@ 5788 @LENGTH@ 57
------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5761 @LENGTH@ 17
------------INS FieldAccess@@this.client @TO@ MethodInvocation@@this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5761 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.client @AT@ 5761 @LENGTH@ 4
---------------INS SimpleName@@client @TO@ FieldAccess@@this.client @AT@ 5766 @LENGTH@ 6
------------INS SimpleName@@MethodName:returnResult:[String.class] @TO@ MethodInvocation@@this.client.get().uri("https://example.com/oauth2/authorization/github?foo=bar").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5897 @LENGTH@ 26
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:returnResult:[String.class] @AT@ 5910 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:result.assertWithDiagnostics(() -> {
  URI location=result.getResponseHeaders().getLocation();
  assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github");
}
) @TO@ MethodDeclaration@@public, void, MethodName:filterWhenDoesMatchThenResolveRedirectUriExpandedExcludesQueryString,  @AT@ 5927 @LENGTH@ 461
------INS MethodInvocation@@result.assertWithDiagnostics(() -> {
  URI location=result.getResponseHeaders().getLocation();
  assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github");
}
) @TO@ ExpressionStatement@@MethodInvocation:result.assertWithDiagnostics(() -> {
  URI location=result.getResponseHeaders().getLocation();
  assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github");
}
) @AT@ 5927 @LENGTH@ 460
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.assertWithDiagnostics(() -> {
  URI location=result.getResponseHeaders().getLocation();
  assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github");
}
) @AT@ 5927 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertWithDiagnostics:[() -> {
  URI location=result.getResponseHeaders().getLocation();
  assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github");
}
] @TO@ MethodInvocation@@result.assertWithDiagnostics(() -> {
  URI location=result.getResponseHeaders().getLocation();
  assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github");
}
) @AT@ 5934 @LENGTH@ 453
------------INS LambdaExpression@@() -> {
  URI location=result.getResponseHeaders().getLocation();
  assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github");
}
 @TO@ SimpleName@@MethodName:assertWithDiagnostics:[() -> {
  URI location=result.getResponseHeaders().getLocation();
  assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github");
}
] @AT@ 5956 @LENGTH@ 430
---------------INS VariableDeclarationStatement@@URI location=result.getResponseHeaders().getLocation(); @TO@ LambdaExpression@@() -> {
  URI location=result.getResponseHeaders().getLocation();
  assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github");
}
 @AT@ 5967 @LENGTH@ 57
------------------INS SimpleType@@URI @TO@ VariableDeclarationStatement@@URI location=result.getResponseHeaders().getLocation(); @AT@ 5967 @LENGTH@ 3
------------------INS VariableDeclarationFragment@@location=result.getResponseHeaders().getLocation() @TO@ VariableDeclarationStatement@@URI location=result.getResponseHeaders().getLocation(); @AT@ 5971 @LENGTH@ 52
---------------------INS SimpleName@@location @TO@ VariableDeclarationFragment@@location=result.getResponseHeaders().getLocation() @AT@ 5971 @LENGTH@ 8
---------------------INS MethodInvocation@@result.getResponseHeaders().getLocation() @TO@ VariableDeclarationFragment@@location=result.getResponseHeaders().getLocation() @AT@ 5982 @LENGTH@ 41
------------------------INS MethodInvocation@@MethodName:getResponseHeaders:[] @TO@ MethodInvocation@@result.getResponseHeaders().getLocation() @AT@ 5982 @LENGTH@ 27
------------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getResponseHeaders().getLocation() @AT@ 5982 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getLocation:[] @TO@ MethodInvocation@@result.getResponseHeaders().getLocation() @AT@ 6010 @LENGTH@ 13
---------------INS ExpressionStatement@@MethodInvocation:assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github") @TO@ LambdaExpression@@() -> {
  URI location=result.getResponseHeaders().getLocation();
  assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github");
}
 @AT@ 6028 @LENGTH@ 354
------------------INS MethodInvocation@@assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github") @TO@ ExpressionStatement@@MethodInvocation:assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github") @AT@ 6028 @LENGTH@ 353
---------------------INS MethodInvocation@@MethodName:hasParameter:["state"] @TO@ MethodInvocation@@assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github") @AT@ 6028 @LENGTH@ 270
------------------------INS StringLiteral@@"state" @TO@ MethodInvocation@@MethodName:hasParameter:["state"] @AT@ 6290 @LENGTH@ 7
---------------------INS MethodInvocation@@MethodName:hasParameter:["scope", "read:user"] @TO@ MethodInvocation@@assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github") @AT@ 6028 @LENGTH@ 242
------------------------INS StringLiteral@@"scope" @TO@ MethodInvocation@@MethodName:hasParameter:["scope", "read:user"] @AT@ 6249 @LENGTH@ 7
------------------------INS StringLiteral@@"read:user" @TO@ MethodInvocation@@MethodName:hasParameter:["scope", "read:user"] @AT@ 6258 @LENGTH@ 11
---------------------INS MethodInvocation@@MethodName:hasParameter:["client_id", "clientId"] @TO@ MethodInvocation@@assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github") @AT@ 6028 @LENGTH@ 201
------------------------INS StringLiteral@@"client_id" @TO@ MethodInvocation@@MethodName:hasParameter:["client_id", "clientId"] @AT@ 6205 @LENGTH@ 11
------------------------INS StringLiteral@@"clientId" @TO@ MethodInvocation@@MethodName:hasParameter:["client_id", "clientId"] @AT@ 6218 @LENGTH@ 10
---------------------INS MethodInvocation@@MethodName:hasParameter:["response_type", "code"] @TO@ MethodInvocation@@assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github") @AT@ 6028 @LENGTH@ 157
------------------------INS StringLiteral@@"response_type" @TO@ MethodInvocation@@MethodName:hasParameter:["response_type", "code"] @AT@ 6161 @LENGTH@ 15
------------------------INS StringLiteral@@"code" @TO@ MethodInvocation@@MethodName:hasParameter:["response_type", "code"] @AT@ 6178 @LENGTH@ 6
---------------------INS MethodInvocation@@MethodName:hasPath:["/login/oauth/authorize"] @TO@ MethodInvocation@@assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github") @AT@ 6028 @LENGTH@ 113
------------------------INS StringLiteral@@"/login/oauth/authorize" @TO@ MethodInvocation@@MethodName:hasPath:["/login/oauth/authorize"] @AT@ 6116 @LENGTH@ 24
---------------------INS MethodInvocation@@MethodName:hasHost:["github.com"] @TO@ MethodInvocation@@assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github") @AT@ 6028 @LENGTH@ 73
------------------------INS StringLiteral@@"github.com" @TO@ MethodInvocation@@MethodName:hasHost:["github.com"] @AT@ 6088 @LENGTH@ 12
---------------------INS MethodInvocation@@MethodName:hasScheme:["https"] @TO@ MethodInvocation@@assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github") @AT@ 6028 @LENGTH@ 45
------------------------INS StringLiteral@@"https" @TO@ MethodInvocation@@MethodName:hasScheme:["https"] @AT@ 6065 @LENGTH@ 7
---------------------INS MethodInvocation@@MethodName:assertThat:[location] @TO@ MethodInvocation@@assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github") @AT@ 6028 @LENGTH@ 20
------------------------INS SimpleName@@location @TO@ MethodInvocation@@MethodName:assertThat:[location] @AT@ 6039 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:hasParameter:["redirect_uri", "https://example.com/login/oauth2/code/github"] @TO@ MethodInvocation@@assertThat(location).hasScheme("https").hasHost("github.com").hasPath("/login/oauth/authorize").hasParameter("response_type","code").hasParameter("client_id","clientId").hasParameter("scope","read:user").hasParameter("state").hasParameter("redirect_uri","https://example.com/login/oauth2/code/github") @AT@ 6305 @LENGTH@ 76
------------------------INS StringLiteral@@"redirect_uri" @TO@ SimpleName@@MethodName:hasParameter:["redirect_uri", "https://example.com/login/oauth2/code/github"] @AT@ 6318 @LENGTH@ 14
------------------------INS StringLiteral@@"https://example.com/login/oauth2/code/github" @TO@ SimpleName@@MethodName:hasParameter:["redirect_uri", "https://example.com/login/oauth2/code/github"] @AT@ 6334 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:LOG.trace(String.format("Recieved event of type %s did not match any watched types %s",received,awaitedTypes)) @TO@ MethodInvocation:LOG.trace(String.format("Recieved event of type %s did not match any watched types %s",received,Arrays.toString(awaitedTypes))) @AT@ 2769 @LENGTH@ 113
---UPD MethodInvocation@@LOG.trace(String.format("Recieved event of type %s did not match any watched types %s",received,awaitedTypes)) @TO@ LOG.trace(String.format("Recieved event of type %s did not match any watched types %s",received,Arrays.toString(awaitedTypes))) @AT@ 2769 @LENGTH@ 112
------UPD SimpleName@@MethodName:trace:[String.format("Recieved event of type %s did not match any watched types %s",received,awaitedTypes)] @TO@ MethodName:trace:[String.format("Recieved event of type %s did not match any watched types %s",received,Arrays.toString(awaitedTypes))] @AT@ 2773 @LENGTH@ 108
---------UPD MethodInvocation@@String.format("Recieved event of type %s did not match any watched types %s",received,awaitedTypes) @TO@ String.format("Recieved event of type %s did not match any watched types %s",received,Arrays.toString(awaitedTypes)) @AT@ 2779 @LENGTH@ 101
------------UPD SimpleName@@MethodName:format:["Recieved event of type %s did not match any watched types %s", received, awaitedTypes] @TO@ MethodName:format:["Recieved event of type %s did not match any watched types %s", received, Arrays.toString(awaitedTypes)] @AT@ 2786 @LENGTH@ 94
---------------INS MethodInvocation@@Arrays.toString(awaitedTypes) @TO@ SimpleName@@MethodName:format:["Recieved event of type %s did not match any watched types %s", received, awaitedTypes] @AT@ 2892 @LENGTH@ 29
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(awaitedTypes) @AT@ 2892 @LENGTH@ 6
------------------INS SimpleName@@MethodName:toString:[awaitedTypes] @TO@ MethodInvocation@@Arrays.toString(awaitedTypes) @AT@ 2899 @LENGTH@ 22
---------------------MOV SimpleName@@awaitedTypes @TO@ SimpleName@@MethodName:toString:[awaitedTypes] @AT@ 2867 @LENGTH@ 12


UPD ThrowStatement@@ClassInstanceCreation:new UDFArgumentException("UPPER only takes primitive types, got " + argumentOI.getTypeName()) @TO@ ClassInstanceCreation:new UDFArgumentException("UPPER only takes primitive types, got " + arguments[0].getTypeName()) @AT@ 2900 @LENGTH@ 111
---UPD ClassInstanceCreation@@UDFArgumentException["UPPER only takes primitive types, got " + argumentOI.getTypeName()] @TO@ UDFArgumentException["UPPER only takes primitive types, got " + arguments[0].getTypeName()] @AT@ 2906 @LENGTH@ 104
------UPD InfixExpression@@"UPPER only takes primitive types, got " + argumentOI.getTypeName() @TO@ "UPPER only takes primitive types, got " + arguments[0].getTypeName() @AT@ 2942 @LENGTH@ 67
---------UPD MethodInvocation@@argumentOI.getTypeName() @TO@ arguments[0].getTypeName() @AT@ 2985 @LENGTH@ 24
------------INS ArrayAccess@@arguments[0] @TO@ MethodInvocation@@argumentOI.getTypeName() @AT@ 2985 @LENGTH@ 12
---------------INS SimpleName@@arguments @TO@ ArrayAccess@@arguments[0] @AT@ 2985 @LENGTH@ 9
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@arguments[0] @AT@ 2995 @LENGTH@ 1
------------DEL SimpleName@@Name:argumentOI @AT@ 2985 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @TO@ public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultTrueAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @AT@ 9270 @LENGTH@ 1003
---UPD SimpleName@@MethodName:defaultRequestOAuth2AuthorizedClientWhenAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient @TO@ MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultTrueAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient @AT@ 9282 @LENGTH@ 107
---INS ExpressionStatement@@MethodInvocation:this.function.setDefaultOAuth2AuthorizedClient(true) @TO@ MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @AT@ 9518 @LENGTH@ 53
------INS MethodInvocation@@this.function.setDefaultOAuth2AuthorizedClient(true) @TO@ ExpressionStatement@@MethodInvocation:this.function.setDefaultOAuth2AuthorizedClient(true) @AT@ 9518 @LENGTH@ 52
---------INS FieldAccess@@this.function @TO@ MethodInvocation@@this.function.setDefaultOAuth2AuthorizedClient(true) @AT@ 9518 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.function @AT@ 9518 @LENGTH@ 4
------------INS SimpleName@@function @TO@ FieldAccess@@this.function @AT@ 9523 @LENGTH@ 8
---------INS SimpleName@@MethodName:setDefaultOAuth2AuthorizedClient:[true] @TO@ MethodInvocation@@this.function.setDefaultOAuth2AuthorizedClient(true) @AT@ 9532 @LENGTH@ 38
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setDefaultOAuth2AuthorizedClient:[true] @AT@ 9565 @LENGTH@ 4


UPD VariableDeclarationStatement@@MutableUserDetails mutableUser=this.users.get(username); @TO@ MutableUserDetails mutableUser=this.users.get(username.toLowerCase()); @AT@ 4937 @LENGTH@ 58
---UPD VariableDeclarationFragment@@mutableUser=this.users.get(username) @TO@ mutableUser=this.users.get(username.toLowerCase()) @AT@ 4956 @LENGTH@ 38
------UPD MethodInvocation@@this.users.get(username) @TO@ this.users.get(username.toLowerCase()) @AT@ 4970 @LENGTH@ 24
---------UPD SimpleName@@MethodName:get:[username] @TO@ MethodName:get:[username.toLowerCase()] @AT@ 4981 @LENGTH@ 13
------------INS MethodInvocation@@username.toLowerCase() @TO@ SimpleName@@MethodName:get:[username] @AT@ 4985 @LENGTH@ 22
---------------INS SimpleName@@Name:username @TO@ MethodInvocation@@username.toLowerCase() @AT@ 4985 @LENGTH@ 8
---------------INS SimpleName@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@username.toLowerCase() @AT@ 4994 @LENGTH@ 13
------------DEL SimpleName@@username @AT@ 4985 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:handleErrorWhenStatusBadRequestThenHandled,  @TO@ public, void, MethodName:handleErrorWhenErrorResponseBodyThenHandled,  @AT@ 1205 @LENGTH@ 536
---UPD SimpleName@@MethodName:handleErrorWhenStatusBadRequestThenHandled @TO@ MethodName:handleErrorWhenErrorResponseBodyThenHandled @AT@ 1217 @LENGTH@ 42


INS ExpressionStatement@@MethodInvocation:jobExecution.setStartTime(new Date()) @TO@ MethodDeclaration@@public, void, MethodName:testCreateJobExecutionAlreadyRunning, Exception,  @AT@ 7304 @LENGTH@ 38
---INS MethodInvocation@@jobExecution.setStartTime(new Date()) @TO@ ExpressionStatement@@MethodInvocation:jobExecution.setStartTime(new Date()) @AT@ 7304 @LENGTH@ 37
------INS SimpleName@@Name:jobExecution @TO@ MethodInvocation@@jobExecution.setStartTime(new Date()) @AT@ 7304 @LENGTH@ 12
------INS SimpleName@@MethodName:setStartTime:[new Date()] @TO@ MethodInvocation@@jobExecution.setStartTime(new Date()) @AT@ 7317 @LENGTH@ 24
---------INS ClassInstanceCreation@@Date[] @TO@ SimpleName@@MethodName:setStartTime:[new Date()] @AT@ 7330 @LENGTH@ 10
------------INS New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 7330 @LENGTH@ 3
------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 7334 @LENGTH@ 4


UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> rootTasks=getRootTasks(); @TO@ List<Task<?>> rootTasks=getRootTasks(); @AT@ 10362 @LENGTH@ 62
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 10362 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 10367 @LENGTH@ 28


INS MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @TO@ TypeDeclaration@@[public]HttpHandlerRegistrationInfo,  @AT@ 1681 @LENGTH@ 450
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1681 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1688 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1696 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object o @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1703 @LENGTH@ 8
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object o @AT@ 1703 @LENGTH@ 6
------INS SimpleName@@o @TO@ SingleVariableDeclaration@@Object o @AT@ 1710 @LENGTH@ 1
---INS IfStatement@@if (this == o) {  return true;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1723 @LENGTH@ 51
------INS InfixExpression@@this == o @TO@ IfStatement@@if (this == o) {  return true;} @AT@ 1727 @LENGTH@ 9
---------INS ThisExpression@@this @TO@ InfixExpression@@this == o @AT@ 1727 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@this == o @AT@ 1731 @LENGTH@ 2
---------INS SimpleName@@o @TO@ InfixExpression@@this == o @AT@ 1735 @LENGTH@ 1
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (this == o) {  return true;} @AT@ 1738 @LENGTH@ 36
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 1752 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 1759 @LENGTH@ 4
---INS IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1783 @LENGTH@ 82
------INS InfixExpression@@o == null || getClass() != o.getClass() @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @AT@ 1787 @LENGTH@ 39
---------INS InfixExpression@@o == null @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 1787 @LENGTH@ 9
------------INS SimpleName@@o @TO@ InfixExpression@@o == null @AT@ 1787 @LENGTH@ 1
------------INS Operator@@== @TO@ InfixExpression@@o == null @AT@ 1788 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@o == null @AT@ 1792 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 1796 @LENGTH@ 2
---------INS InfixExpression@@getClass() != o.getClass() @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 1800 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 1800 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 1810 @LENGTH@ 2
------------INS MethodInvocation@@o.getClass() @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 1814 @LENGTH@ 12
---------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.getClass() @AT@ 1814 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@o.getClass() @AT@ 1816 @LENGTH@ 10
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @AT@ 1828 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1842 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1849 @LENGTH@ 5
---INS VariableDeclarationStatement@@HttpHandlerRegistrationInfo that=(HttpHandlerRegistrationInfo)o; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1874 @LENGTH@ 67
------INS SimpleType@@HttpHandlerRegistrationInfo @TO@ VariableDeclarationStatement@@HttpHandlerRegistrationInfo that=(HttpHandlerRegistrationInfo)o; @AT@ 1874 @LENGTH@ 27
------INS VariableDeclarationFragment@@that=(HttpHandlerRegistrationInfo)o @TO@ VariableDeclarationStatement@@HttpHandlerRegistrationInfo that=(HttpHandlerRegistrationInfo)o; @AT@ 1902 @LENGTH@ 38
---------INS SimpleName@@that @TO@ VariableDeclarationFragment@@that=(HttpHandlerRegistrationInfo)o @AT@ 1902 @LENGTH@ 4
---------INS CastExpression@@(HttpHandlerRegistrationInfo)o @TO@ VariableDeclarationFragment@@that=(HttpHandlerRegistrationInfo)o @AT@ 1909 @LENGTH@ 31
------------INS SimpleType@@HttpHandlerRegistrationInfo @TO@ CastExpression@@(HttpHandlerRegistrationInfo)o @AT@ 1910 @LENGTH@ 27
------------INS SimpleName@@o @TO@ CastExpression@@(HttpHandlerRegistrationInfo)o @AT@ 1939 @LENGTH@ 1
---INS ReturnStatement@@InfixExpression:Objects.equals(matchOnUriPrefix,that.matchOnUriPrefix) && Objects.equals(methodRestrict,that.methodRestrict) && Objects.equals(uri,that.uri) @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1950 @LENGTH@ 175
------INS InfixExpression@@Objects.equals(matchOnUriPrefix,that.matchOnUriPrefix) && Objects.equals(methodRestrict,that.methodRestrict) && Objects.equals(uri,that.uri) @TO@ ReturnStatement@@InfixExpression:Objects.equals(matchOnUriPrefix,that.matchOnUriPrefix) && Objects.equals(methodRestrict,that.methodRestrict) && Objects.equals(uri,that.uri) @AT@ 1957 @LENGTH@ 167
---------INS MethodInvocation@@Objects.equals(matchOnUriPrefix,that.matchOnUriPrefix) @TO@ InfixExpression@@Objects.equals(matchOnUriPrefix,that.matchOnUriPrefix) && Objects.equals(methodRestrict,that.methodRestrict) && Objects.equals(uri,that.uri) @AT@ 1957 @LENGTH@ 55
------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(matchOnUriPrefix,that.matchOnUriPrefix) @AT@ 1957 @LENGTH@ 7
------------INS SimpleName@@MethodName:equals:[matchOnUriPrefix, that.matchOnUriPrefix] @TO@ MethodInvocation@@Objects.equals(matchOnUriPrefix,that.matchOnUriPrefix) @AT@ 1965 @LENGTH@ 47
---------------INS SimpleName@@matchOnUriPrefix @TO@ SimpleName@@MethodName:equals:[matchOnUriPrefix, that.matchOnUriPrefix] @AT@ 1972 @LENGTH@ 16
---------------INS QualifiedName@@that.matchOnUriPrefix @TO@ SimpleName@@MethodName:equals:[matchOnUriPrefix, that.matchOnUriPrefix] @AT@ 1990 @LENGTH@ 21
------------------INS SimpleName@@that @TO@ QualifiedName@@that.matchOnUriPrefix @AT@ 1990 @LENGTH@ 4
------------------INS SimpleName@@matchOnUriPrefix @TO@ QualifiedName@@that.matchOnUriPrefix @AT@ 1995 @LENGTH@ 16
---------INS Operator@@&& @TO@ InfixExpression@@Objects.equals(matchOnUriPrefix,that.matchOnUriPrefix) && Objects.equals(methodRestrict,that.methodRestrict) && Objects.equals(uri,that.uri) @AT@ 2012 @LENGTH@ 2
---------INS MethodInvocation@@Objects.equals(methodRestrict,that.methodRestrict) @TO@ InfixExpression@@Objects.equals(matchOnUriPrefix,that.matchOnUriPrefix) && Objects.equals(methodRestrict,that.methodRestrict) && Objects.equals(uri,that.uri) @AT@ 2028 @LENGTH@ 51
------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(methodRestrict,that.methodRestrict) @AT@ 2028 @LENGTH@ 7
------------INS SimpleName@@MethodName:equals:[methodRestrict, that.methodRestrict] @TO@ MethodInvocation@@Objects.equals(methodRestrict,that.methodRestrict) @AT@ 2036 @LENGTH@ 43
---------------INS SimpleName@@methodRestrict @TO@ SimpleName@@MethodName:equals:[methodRestrict, that.methodRestrict] @AT@ 2043 @LENGTH@ 14
---------------INS QualifiedName@@that.methodRestrict @TO@ SimpleName@@MethodName:equals:[methodRestrict, that.methodRestrict] @AT@ 2059 @LENGTH@ 19
------------------INS SimpleName@@that @TO@ QualifiedName@@that.methodRestrict @AT@ 2059 @LENGTH@ 4
------------------INS SimpleName@@methodRestrict @TO@ QualifiedName@@that.methodRestrict @AT@ 2064 @LENGTH@ 14
---------INS MethodInvocation@@Objects.equals(uri,that.uri) @TO@ InfixExpression@@Objects.equals(matchOnUriPrefix,that.matchOnUriPrefix) && Objects.equals(methodRestrict,that.methodRestrict) && Objects.equals(uri,that.uri) @AT@ 2095 @LENGTH@ 29
------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(uri,that.uri) @AT@ 2095 @LENGTH@ 7
------------INS SimpleName@@MethodName:equals:[uri, that.uri] @TO@ MethodInvocation@@Objects.equals(uri,that.uri) @AT@ 2103 @LENGTH@ 21
---------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:equals:[uri, that.uri] @AT@ 2110 @LENGTH@ 3
---------------INS QualifiedName@@that.uri @TO@ SimpleName@@MethodName:equals:[uri, that.uri] @AT@ 2115 @LENGTH@ 8
------------------INS SimpleName@@that @TO@ QualifiedName@@that.uri @AT@ 2115 @LENGTH@ 4
------------------INS SimpleName@@uri @TO@ QualifiedName@@that.uri @AT@ 2120 @LENGTH@ 3


UPD IfStatement@@if (confirm != null) {  MessageProperties messageProperties=converter.toMessageProperties(properties,new Envelope(0L,false,exchange,routingKey),StandardCharsets.UTF_8.name());  confirm.getCorrelationData().setReturnedMessage(new Message(body,messageProperties));} @TO@ if (confirm != null) {  MessageProperties messageProperties=converter.toMessageProperties(properties,new Envelope(0L,false,exchange,routingKey),StandardCharsets.UTF_8.name());  if (confirm.getCorrelationData() != null) {    confirm.getCorrelationData().setReturnedMessage(new Message(body,messageProperties));  }} @AT@ 34382 @LENGTH@ 287
---UPD Block@@ThenBody:{  MessageProperties messageProperties=converter.toMessageProperties(properties,new Envelope(0L,false,exchange,routingKey),StandardCharsets.UTF_8.name());  confirm.getCorrelationData().setReturnedMessage(new Message(body,messageProperties));} @TO@ ThenBody:{  MessageProperties messageProperties=converter.toMessageProperties(properties,new Envelope(0L,false,exchange,routingKey),StandardCharsets.UTF_8.name());  if (confirm.getCorrelationData() != null) {    confirm.getCorrelationData().setReturnedMessage(new Message(body,messageProperties));  }} @AT@ 34403 @LENGTH@ 266
------INS IfStatement@@if (confirm.getCorrelationData() != null) {  confirm.getCorrelationData().setReturnedMessage(new Message(body,messageProperties));} @TO@ Block@@ThenBody:{  MessageProperties messageProperties=converter.toMessageProperties(properties,new Envelope(0L,false,exchange,routingKey),StandardCharsets.UTF_8.name());  confirm.getCorrelationData().setReturnedMessage(new Message(body,messageProperties));} @AT@ 34695 @LENGTH@ 163
---------INS InfixExpression@@confirm.getCorrelationData() != null @TO@ IfStatement@@if (confirm.getCorrelationData() != null) {  confirm.getCorrelationData().setReturnedMessage(new Message(body,messageProperties));} @AT@ 34699 @LENGTH@ 36
------------INS MethodInvocation@@confirm.getCorrelationData() @TO@ InfixExpression@@confirm.getCorrelationData() != null @AT@ 34699 @LENGTH@ 28
---------------INS SimpleName@@Name:confirm @TO@ MethodInvocation@@confirm.getCorrelationData() @AT@ 34699 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getCorrelationData:[] @TO@ MethodInvocation@@confirm.getCorrelationData() @AT@ 34707 @LENGTH@ 20
------------INS Operator@@!= @TO@ InfixExpression@@confirm.getCorrelationData() != null @AT@ 34727 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@confirm.getCorrelationData() != null @AT@ 34731 @LENGTH@ 4
---------INS Block@@ThenBody:{  confirm.getCorrelationData().setReturnedMessage(new Message(body,messageProperties));} @TO@ IfStatement@@if (confirm.getCorrelationData() != null) {  confirm.getCorrelationData().setReturnedMessage(new Message(body,messageProperties));} @AT@ 34737 @LENGTH@ 121
------------MOV ExpressionStatement@@MethodInvocation:confirm.getCorrelationData().setReturnedMessage(new Message(body,messageProperties)) @TO@ Block@@ThenBody:{  confirm.getCorrelationData().setReturnedMessage(new Message(body,messageProperties));} @AT@ 34578 @LENGTH@ 86


UPD MethodDeclaration@@public, HibernatePagingItemReaderBuilder<T>, MethodName:useSatelessSession, boolean useStatelessSession,  @TO@ public, HibernatePagingItemReaderBuilder<T>, MethodName:useStatelessSession, boolean useStatelessSession,  @AT@ 6860 @LENGTH@ 158
---UPD SimpleName@@MethodName:useSatelessSession @TO@ MethodName:useStatelessSession @AT@ 6903 @LENGTH@ 18


UPD VariableDeclarationStatement@@final Cache<?,?> cache=ServiceContainerHelper.findValue(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2252 @LENGTH@ 177
---DEL Modifier@@final @AT@ 2252 @LENGTH@ 5
---UPD VariableDeclarationFragment@@cache=ServiceContainerHelper.findValue(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2270 @LENGTH@ 158
------UPD MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2278 @LENGTH@ 150
---------INS ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2269 @LENGTH@ 157
------------INS New@@new @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2269 @LENGTH@ 3
------------INS ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2273 @LENGTH@ 35
---------------INS SimpleType@@PassiveServiceSupplier @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2273 @LENGTH@ 22
---------------INS ParameterizedType@@Cache<?,?> @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2296 @LENGTH@ 11
------------------INS SimpleType@@Cache @TO@ ParameterizedType@@Cache<?,?> @AT@ 2296 @LENGTH@ 5
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2302 @LENGTH@ 1
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2305 @LENGTH@ 1
------------MOV MethodInvocation@@context.getServiceRegistry(true) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2311 @LENGTH@ 32
------------MOV MethodInvocation@@InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2345 @LENGTH@ 82
---------DEL SimpleName@@Name:ServiceContainerHelper @AT@ 2278 @LENGTH@ 22
---------UPD SimpleName@@MethodName:findValue:[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ MethodName:get:[] @AT@ 2301 @LENGTH@ 127


INS ExpressionStatement@@MethodInvocation:Assert.state(step != null,"A Step must be provided.") @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet, Exception,  @AT@ 2102 @LENGTH@ 55
---INS MethodInvocation@@Assert.state(step != null,"A Step must be provided.") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(step != null,"A Step must be provided.") @AT@ 2102 @LENGTH@ 54
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(step != null,"A Step must be provided.") @AT@ 2102 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[step != null, "A Step must be provided."] @TO@ MethodInvocation@@Assert.state(step != null,"A Step must be provided.") @AT@ 2109 @LENGTH@ 47
---------INS InfixExpression@@step != null @TO@ SimpleName@@MethodName:state:[step != null, "A Step must be provided."] @AT@ 2115 @LENGTH@ 12
------------INS SimpleName@@step @TO@ InfixExpression@@step != null @AT@ 2115 @LENGTH@ 4
------------INS Operator@@!= @TO@ InfixExpression@@step != null @AT@ 2119 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@step != null @AT@ 2123 @LENGTH@ 4
---------INS StringLiteral@@"A Step must be provided." @TO@ SimpleName@@MethodName:state:[step != null, "A Step must be provided."] @AT@ 2129 @LENGTH@ 26


UPD SuperConstructorInvocation@@super(ChannelCommandDispatcherFactoryBuilder::new);
 @TO@ super(ChannelCommandDispatcherFactoryServiceConfigurator::new);
 @AT@ 1694 @LENGTH@ 51


UPD TryStatement@@try {switch (executionTypeFor(exchange)) {case CALL:    doCall(exchange,callback,compute);  break;case BROADCAST:doBroadcast(exchange,callback,compute);break;case EXECUTE:doExecute(exchange,callback,compute);break;case RUN:doRun(exchange,callback,compute);break;case APPLY:doApply(exchange,callback,compute);break;case AFFINITY_CALL:doAffinityCall(exchange,callback,compute);break;case AFFINITY_RUN:doAffinityRun(exchange,callback,compute);break;default :exchange.setException(new UnsupportedOperationException("Operation not supported by Ignite Compute producer."));return true;}compute.future().listen(IgniteInCamelClosure.create(exchange,callback));} catch (Exception e) {exchange.setException(e);return true;} @TO@ try {switch (executionTypeFor(exchange)) {case CALL:    doCall(exchange,callback,compute);  break;case BROADCAST:doBroadcast(exchange,callback,compute);break;case EXECUTE:doExecute(exchange,callback,compute);break;case RUN:doRun(exchange,callback,compute);break;case APPLY:doApply(exchange,callback,compute);break;case AFFINITY_CALL:doAffinityCall(exchange,callback,compute);break;case AFFINITY_RUN:doAffinityRun(exchange,callback,compute);break;default :exchange.setException(new UnsupportedOperationException("Operation not supported by Ignite Compute producer."));callback.done(false);return false;}compute.future().listen(IgniteInCamelClosure.create(exchange,callback));return false;} catch (Exception e) {exchange.setException(e);callback.done(false);return false;} @AT@ 2077 @LENGTH@ 1314
---UPD SwitchStatement@@switch (executionTypeFor(exchange)) {case CALL:  doCall(exchange,callback,compute);break;case BROADCAST:doBroadcast(exchange,callback,compute);break;case EXECUTE:doExecute(exchange,callback,compute);break;case RUN:doRun(exchange,callback,compute);break;case APPLY:doApply(exchange,callback,compute);break;case AFFINITY_CALL:doAffinityCall(exchange,callback,compute);break;case AFFINITY_RUN:doAffinityRun(exchange,callback,compute);break;default :exchange.setException(new UnsupportedOperationException("Operation not supported by Ignite Compute producer."));return true;} @TO@ switch (executionTypeFor(exchange)) {case CALL:  doCall(exchange,callback,compute);break;case BROADCAST:doBroadcast(exchange,callback,compute);break;case EXECUTE:doExecute(exchange,callback,compute);break;case RUN:doRun(exchange,callback,compute);break;case APPLY:doApply(exchange,callback,compute);break;case AFFINITY_CALL:doAffinityCall(exchange,callback,compute);break;case AFFINITY_RUN:doAffinityRun(exchange,callback,compute);break;default :exchange.setException(new UnsupportedOperationException("Operation not supported by Ignite Compute producer."));callback.done(false);return false;} @AT@ 2095 @LENGTH@ 1103
------INS ExpressionStatement@@MethodInvocation:callback.done(false) @TO@ SwitchStatement@@switch (executionTypeFor(exchange)) {case CALL:  doCall(exchange,callback,compute);break;case BROADCAST:doBroadcast(exchange,callback,compute);break;case EXECUTE:doExecute(exchange,callback,compute);break;case RUN:doRun(exchange,callback,compute);break;case APPLY:doApply(exchange,callback,compute);break;case AFFINITY_CALL:doAffinityCall(exchange,callback,compute);break;case AFFINITY_RUN:doAffinityRun(exchange,callback,compute);break;default :exchange.setException(new UnsupportedOperationException("Operation not supported by Ignite Compute producer."));return true;} @AT@ 3172 @LENGTH@ 21
---------INS MethodInvocation@@callback.done(false) @TO@ ExpressionStatement@@MethodInvocation:callback.done(false) @AT@ 3172 @LENGTH@ 20
------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(false) @AT@ 3172 @LENGTH@ 8
------------INS SimpleName@@MethodName:done:[false] @TO@ MethodInvocation@@callback.done(false) @AT@ 3181 @LENGTH@ 11
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:done:[false] @AT@ 3186 @LENGTH@ 5
------UPD ReturnStatement@@BooleanLiteral:true @TO@ BooleanLiteral:false @AT@ 3172 @LENGTH@ 12
---------UPD BooleanLiteral@@true @TO@ false @AT@ 3179 @LENGTH@ 4
---UPD CatchClause@@catch (Exception e) {  exchange.setException(e);  return true;} @TO@ catch (Exception e) {  exchange.setException(e);  callback.done(false);  return false;} @AT@ 3297 @LENGTH@ 94
------UPD ReturnStatement@@BooleanLiteral:true @TO@ BooleanLiteral:false @AT@ 3369 @LENGTH@ 12
---------UPD BooleanLiteral@@true @TO@ false @AT@ 3376 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:callback.done(false) @TO@ CatchClause@@catch (Exception e) {  exchange.setException(e);  return true;} @AT@ 3434 @LENGTH@ 21
---------INS MethodInvocation@@callback.done(false) @TO@ ExpressionStatement@@MethodInvocation:callback.done(false) @AT@ 3434 @LENGTH@ 20
------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(false) @AT@ 3434 @LENGTH@ 8
------------INS SimpleName@@MethodName:done:[false] @TO@ MethodInvocation@@callback.done(false) @AT@ 3443 @LENGTH@ 11
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:done:[false] @AT@ 3448 @LENGTH@ 5
---INS ReturnStatement@@BooleanLiteral:false @TO@ TryStatement@@try {switch (executionTypeFor(exchange)) {case CALL:    doCall(exchange,callback,compute);  break;case BROADCAST:doBroadcast(exchange,callback,compute);break;case EXECUTE:doExecute(exchange,callback,compute);break;case RUN:doRun(exchange,callback,compute);break;case APPLY:doApply(exchange,callback,compute);break;case AFFINITY_CALL:doAffinityCall(exchange,callback,compute);break;case AFFINITY_RUN:doAffinityRun(exchange,callback,compute);break;default :exchange.setException(new UnsupportedOperationException("Operation not supported by Ignite Compute producer."));return true;}compute.future().listen(IgniteInCamelClosure.create(exchange,callback));} catch (Exception e) {exchange.setException(e);return true;} @AT@ 3337 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3344 @LENGTH@ 5


UPD VariableDeclarationStatement@@Component comp=setupComponent(getComponentName(),getCamelContext(),(Map<String,Object>)parameters.get("component")); @TO@ Component comp=setupComponent(name,getCamelContext(),(Map<String,Object>)parameters.get("component")); @AT@ 10838 @LENGTH@ 122
---UPD VariableDeclarationFragment@@comp=setupComponent(getComponentName(),getCamelContext(),(Map<String,Object>)parameters.get("component")) @TO@ comp=setupComponent(name,getCamelContext(),(Map<String,Object>)parameters.get("component")) @AT@ 10848 @LENGTH@ 111
------UPD MethodInvocation@@setupComponent(getComponentName(),getCamelContext(),(Map<String,Object>)parameters.get("component")) @TO@ setupComponent(name,getCamelContext(),(Map<String,Object>)parameters.get("component")) @AT@ 10855 @LENGTH@ 104
---------UPD SimpleName@@MethodName:setupComponent:[getComponentName(), getCamelContext(), (Map<String,Object>)parameters.get("component")] @TO@ MethodName:setupComponent:[name, getCamelContext(), (Map<String,Object>)parameters.get("component")] @AT@ 10855 @LENGTH@ 104
------------DEL MethodInvocation@@MethodName:getComponentName:[] @AT@ 10870 @LENGTH@ 18
------------INS SimpleName@@name @TO@ SimpleName@@MethodName:setupComponent:[getComponentName(), getCamelContext(), (Map<String,Object>)parameters.get("component")] @AT@ 10870 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:this.metaStore.start() @AT@ 3017 @LENGTH@ 23
---DEL MethodInvocation@@this.metaStore.start() @AT@ 3017 @LENGTH@ 22
------DEL FieldAccess@@this.metaStore @AT@ 3017 @LENGTH@ 14
---------DEL ThisExpression@@this @AT@ 3017 @LENGTH@ 4
---------DEL SimpleName@@metaStore @AT@ 3022 @LENGTH@ 9
------DEL SimpleName@@MethodName:start:[] @AT@ 3032 @LENGTH@ 7


UPD MethodDeclaration@@public, static, void, MethodName:makeLocationQualified, String databaseName, StorageDescriptor sd, String name, HiveConf conf, HiveException,  @TO@ public, static, void, MethodName:makeLocationQualified, String databaseName, Table table, HiveConf conf, HiveException,  @AT@ 211077 @LENGTH@ 821
---DEL SingleVariableDeclaration@@StorageDescriptor sd @AT@ 211139 @LENGTH@ 20
------DEL SimpleType@@StorageDescriptor @AT@ 211139 @LENGTH@ 17
------DEL SimpleName@@sd @AT@ 211157 @LENGTH@ 2
---UPD SingleVariableDeclaration@@String name @TO@ Table table @AT@ 211167 @LENGTH@ 11
------UPD SimpleType@@String @TO@ Table @AT@ 211167 @LENGTH@ 6
------UPD SimpleName@@name @TO@ table @AT@ 211174 @LENGTH@ 4
---INS VariableDeclarationStatement@@StorageDescriptor sd=table.getTTable().getSd(); @TO@ MethodDeclaration@@public, static, void, MethodName:makeLocationQualified, String databaseName, StorageDescriptor sd, String name, HiveConf conf, HiveException,  @AT@ 211176 @LENGTH@ 49
------INS SimpleType@@StorageDescriptor @TO@ VariableDeclarationStatement@@StorageDescriptor sd=table.getTTable().getSd(); @AT@ 211176 @LENGTH@ 17
------INS VariableDeclarationFragment@@sd=table.getTTable().getSd() @TO@ VariableDeclarationStatement@@StorageDescriptor sd=table.getTTable().getSd(); @AT@ 211194 @LENGTH@ 30
---------INS SimpleName@@sd @TO@ VariableDeclarationFragment@@sd=table.getTTable().getSd() @AT@ 211194 @LENGTH@ 2
---------INS MethodInvocation@@table.getTTable().getSd() @TO@ VariableDeclarationFragment@@sd=table.getTTable().getSd() @AT@ 211199 @LENGTH@ 25
------------INS MethodInvocation@@MethodName:getTTable:[] @TO@ MethodInvocation@@table.getTTable().getSd() @AT@ 211199 @LENGTH@ 17
------------INS SimpleName@@Name:table @TO@ MethodInvocation@@table.getTTable().getSd() @AT@ 211199 @LENGTH@ 5
------------INS SimpleName@@MethodName:getSd:[] @TO@ MethodInvocation@@table.getTTable().getSd() @AT@ 211217 @LENGTH@ 7
---INS VariableDeclarationStatement@@String name=table.getTableName(); @TO@ MethodDeclaration@@public, static, void, MethodName:makeLocationQualified, String databaseName, StorageDescriptor sd, String name, HiveConf conf, HiveException,  @AT@ 211230 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String name=table.getTableName(); @AT@ 211230 @LENGTH@ 6
------INS VariableDeclarationFragment@@name=table.getTableName() @TO@ VariableDeclarationStatement@@String name=table.getTableName(); @AT@ 211237 @LENGTH@ 27
---------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=table.getTableName() @AT@ 211237 @LENGTH@ 4
---------INS MethodInvocation@@table.getTableName() @TO@ VariableDeclarationFragment@@name=table.getTableName() @AT@ 211244 @LENGTH@ 20
------------INS SimpleName@@Name:table @TO@ MethodInvocation@@table.getTableName() @AT@ 211244 @LENGTH@ 5
------------INS SimpleName@@MethodName:getTableName:[] @TO@ MethodInvocation@@table.getTableName() @AT@ 211250 @LENGTH@ 14
---UPD IfStatement@@if (!sd.isSetLocation()) {  if (databaseName.equalsIgnoreCase(Warehouse.DEFAULT_DATABASE_NAME)) {    path=new Path(HiveConf.getVar(conf,HiveConf.ConfVars.METASTOREWAREHOUSE),org.apache.hadoop.hive.metastore.utils.MetaStoreUtils.encodeTableName(name.toLowerCase()));  }} else {  path=new Path(sd.getLocation());} @TO@ if (!sd.isSetLocation()) {  if (!table.isTemporary()) {    if (databaseName.equalsIgnoreCase(Warehouse.DEFAULT_DATABASE_NAME)) {      path=new Path(HiveConf.getVar(conf,HiveConf.ConfVars.METASTOREWAREHOUSE),org.apache.hadoop.hive.metastore.utils.MetaStoreUtils.encodeTableName(name.toLowerCase()));    }  }} else {  path=new Path(sd.getLocation());} @AT@ 211244 @LENGTH@ 553
------INS Block@@ThenBody:{  if (!table.isTemporary()) {    if (databaseName.equalsIgnoreCase(Warehouse.DEFAULT_DATABASE_NAME)) {      path=new Path(HiveConf.getVar(conf,HiveConf.ConfVars.METASTOREWAREHOUSE),org.apache.hadoop.hive.metastore.utils.MetaStoreUtils.encodeTableName(name.toLowerCase()));    }  }} @TO@ IfStatement@@if (!sd.isSetLocation()) {  if (databaseName.equalsIgnoreCase(Warehouse.DEFAULT_DATABASE_NAME)) {    path=new Path(HiveConf.getVar(conf,HiveConf.ConfVars.METASTOREWAREHOUSE),org.apache.hadoop.hive.metastore.utils.MetaStoreUtils.encodeTableName(name.toLowerCase()));  }} else {  path=new Path(sd.getLocation());} @AT@ 211299 @LENGTH@ 616
---------INS IfStatement@@if (!table.isTemporary()) {  if (databaseName.equalsIgnoreCase(Warehouse.DEFAULT_DATABASE_NAME)) {    path=new Path(HiveConf.getVar(conf,HiveConf.ConfVars.METASTOREWAREHOUSE),org.apache.hadoop.hive.metastore.utils.MetaStoreUtils.encodeTableName(name.toLowerCase()));  }} @TO@ Block@@ThenBody:{  if (!table.isTemporary()) {    if (databaseName.equalsIgnoreCase(Warehouse.DEFAULT_DATABASE_NAME)) {      path=new Path(HiveConf.getVar(conf,HiveConf.ConfVars.METASTOREWAREHOUSE),org.apache.hadoop.hive.metastore.utils.MetaStoreUtils.encodeTableName(name.toLowerCase()));    }  }} @AT@ 211405 @LENGTH@ 504
------------MOV Block@@ThenBody:{  if (databaseName.equalsIgnoreCase(Warehouse.DEFAULT_DATABASE_NAME)) {    path=new Path(HiveConf.getVar(conf,HiveConf.ConfVars.METASTOREWAREHOUSE),org.apache.hadoop.hive.metastore.utils.MetaStoreUtils.encodeTableName(name.toLowerCase()));  }} @TO@ IfStatement@@if (!table.isTemporary()) {  if (databaseName.equalsIgnoreCase(Warehouse.DEFAULT_DATABASE_NAME)) {    path=new Path(HiveConf.getVar(conf,HiveConf.ConfVars.METASTOREWAREHOUSE),org.apache.hadoop.hive.metastore.utils.MetaStoreUtils.encodeTableName(name.toLowerCase()));  }} @AT@ 211273 @LENGTH@ 462
------------INS PrefixExpression@@!table.isTemporary() @TO@ IfStatement@@if (!table.isTemporary()) {  if (databaseName.equalsIgnoreCase(Warehouse.DEFAULT_DATABASE_NAME)) {    path=new Path(HiveConf.getVar(conf,HiveConf.ConfVars.METASTOREWAREHOUSE),org.apache.hadoop.hive.metastore.utils.MetaStoreUtils.encodeTableName(name.toLowerCase()));  }} @AT@ 211409 @LENGTH@ 20
---------------INS Operator@@! @TO@ PrefixExpression@@!table.isTemporary() @AT@ 211409 @LENGTH@ 1
---------------INS MethodInvocation@@table.isTemporary() @TO@ PrefixExpression@@!table.isTemporary() @AT@ 211410 @LENGTH@ 19
------------------INS SimpleName@@Name:table @TO@ MethodInvocation@@table.isTemporary() @AT@ 211410 @LENGTH@ 5
------------------INS SimpleName@@MethodName:isTemporary:[] @TO@ MethodInvocation@@table.isTemporary() @AT@ 211416 @LENGTH@ 13


UPD Block@@ThenBody:{  String s;  if (consumer.getEndpoint().getHttpMethodRestrict() != null) {    s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();  } else {    s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";  }  response.addHeader("Allow",s);  response.setStatus(HttpServletResponse.SC_OK);  return;} @TO@ ThenBody:{  String allowedMethods=METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(","));  if (allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null) {    allowedMethods=consumer.getEndpoint().getHttpMethodRestrict();  }  if (allowedMethods == null) {    allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";  }  if (!allowedMethods.contains("OPTIONS")) {    allowedMethods=allowedMethods + ",OPTIONS";  }  response.addHeader("Allow",allowedMethods);  response.setStatus(HttpServletResponse.SC_OK);  return;} @AT@ 5334 @LENGTH@ 456
---UPD VariableDeclarationStatement@@String s; @TO@ String allowedMethods=METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")); @AT@ 5348 @LENGTH@ 9
------UPD VariableDeclarationFragment@@s @TO@ allowedMethods=METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")) @AT@ 5355 @LENGTH@ 1
---------UPD SimpleName@@s @TO@ allowedMethods @AT@ 5355 @LENGTH@ 1
---------INS MethodInvocation@@METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")) @TO@ VariableDeclarationFragment@@s @AT@ 5408 @LENGTH@ 146
------------INS MethodInvocation@@MethodName:filter:[m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())] @TO@ MethodInvocation@@METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")) @AT@ 5408 @LENGTH@ 113
---------------INS LambdaExpression@@m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers()) @TO@ MethodInvocation@@MethodName:filter:[m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())] @AT@ 5432 @LENGTH@ 88
------------------INS VariableDeclarationFragment@@m @TO@ LambdaExpression@@m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers()) @AT@ 5432 @LENGTH@ 1
---------------------INS SimpleName@@m @TO@ VariableDeclarationFragment@@m @AT@ 5432 @LENGTH@ 1
------------------INS MethodInvocation@@getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers()) @TO@ LambdaExpression@@m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers()) @AT@ 5437 @LENGTH@ 83
---------------------INS MethodInvocation@@MethodName:getServletResolveConsumerStrategy:[] @TO@ MethodInvocation@@getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers()) @AT@ 5437 @LENGTH@ 35
---------------------INS SimpleName@@MethodName:isHttpMethodAllowed:[request, m, getConsumers()] @TO@ MethodInvocation@@getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers()) @AT@ 5473 @LENGTH@ 47
------------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:isHttpMethodAllowed:[request, m, getConsumers()] @AT@ 5493 @LENGTH@ 7
------------------------INS SimpleName@@m @TO@ SimpleName@@MethodName:isHttpMethodAllowed:[request, m, getConsumers()] @AT@ 5502 @LENGTH@ 1
------------------------INS MethodInvocation@@MethodName:getConsumers:[] @TO@ SimpleName@@MethodName:isHttpMethodAllowed:[request, m, getConsumers()] @AT@ 5505 @LENGTH@ 14
------------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")) @AT@ 5408 @LENGTH@ 16
------------INS SimpleName@@Name:METHODS @TO@ MethodInvocation@@METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")) @AT@ 5408 @LENGTH@ 7
------------INS SimpleName@@MethodName:collect:[Collectors.joining(",")] @TO@ MethodInvocation@@METHODS.stream().filter(m -> getServletResolveConsumerStrategy().isHttpMethodAllowed(request,m,getConsumers())).collect(Collectors.joining(",")) @AT@ 5522 @LENGTH@ 32
---------------INS MethodInvocation@@Collectors.joining(",") @TO@ SimpleName@@MethodName:collect:[Collectors.joining(",")] @AT@ 5530 @LENGTH@ 23
------------------INS SimpleName@@Name:Collectors @TO@ MethodInvocation@@Collectors.joining(",") @AT@ 5530 @LENGTH@ 10
------------------INS SimpleName@@MethodName:joining:[","] @TO@ MethodInvocation@@Collectors.joining(",") @AT@ 5541 @LENGTH@ 12
---------------------INS StringLiteral@@"," @TO@ SimpleName@@MethodName:joining:[","] @AT@ 5549 @LENGTH@ 3
---DEL IfStatement@@if (consumer.getEndpoint().getHttpMethodRestrict() != null) {  s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();} else {  s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";} @AT@ 5370 @LENGTH@ 287
---INS IfStatement@@if (allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null) {  allowedMethods=consumer.getEndpoint().getHttpMethodRestrict();} @TO@ Block@@ThenBody:{  String s;  if (consumer.getEndpoint().getHttpMethodRestrict() != null) {    s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();  } else {    s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";  }  response.addHeader("Allow",s);  response.setStatus(HttpServletResponse.SC_OK);  return;} @AT@ 5568 @LENGTH@ 182
------MOV Block@@ThenBody:{  s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();} @TO@ IfStatement@@if (allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null) {  allowedMethods=consumer.getEndpoint().getHttpMethodRestrict();} @AT@ 5430 @LENGTH@ 96
---------UPD ExpressionStatement@@Assignment:s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict() @TO@ Assignment:allowedMethods=consumer.getEndpoint().getHttpMethodRestrict() @AT@ 5448 @LENGTH@ 64
------------UPD Assignment@@s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict() @TO@ allowedMethods=consumer.getEndpoint().getHttpMethodRestrict() @AT@ 5448 @LENGTH@ 63
---------------UPD SimpleName@@s @TO@ allowedMethods @AT@ 5448 @LENGTH@ 1
---------------DEL InfixExpression@@"OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict() @AT@ 5452 @LENGTH@ 59
------------------DEL StringLiteral@@"OPTIONS," @AT@ 5452 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 5462 @LENGTH@ 1
------------------DEL MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 5465 @LENGTH@ 46
---------------INS MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @TO@ Assignment@@s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict() @AT@ 5689 @LENGTH@ 46
------------------MOV MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 5465 @LENGTH@ 22
------------------MOV MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 5465 @LENGTH@ 22
------------------MOV SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 5465 @LENGTH@ 8
------------------MOV SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 5465 @LENGTH@ 8
------------------MOV SimpleName@@MethodName:getHttpMethodRestrict:[] @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 5488 @LENGTH@ 23
------------------MOV SimpleName@@MethodName:getHttpMethodRestrict:[] @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 5488 @LENGTH@ 23
------INS InfixExpression@@allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null @TO@ IfStatement@@if (allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null) {  allowedMethods=consumer.getEndpoint().getHttpMethodRestrict();} @AT@ 5572 @LENGTH@ 80
---------MOV InfixExpression@@consumer.getEndpoint().getHttpMethodRestrict() != null @TO@ InfixExpression@@allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null @AT@ 5374 @LENGTH@ 54
---------INS InfixExpression@@allowedMethods == null @TO@ InfixExpression@@allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null @AT@ 5572 @LENGTH@ 22
------------INS SimpleName@@allowedMethods @TO@ InfixExpression@@allowedMethods == null @AT@ 5572 @LENGTH@ 14
------------INS Operator@@== @TO@ InfixExpression@@allowedMethods == null @AT@ 5586 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@allowedMethods == null @AT@ 5590 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@allowedMethods == null && consumer.getEndpoint().getHttpMethodRestrict() != null @AT@ 5594 @LENGTH@ 2
---UPD ExpressionStatement@@MethodInvocation:response.addHeader("Allow",s) @TO@ MethodInvocation:response.addHeader("Allow",allowedMethods) @AT@ 5670 @LENGTH@ 31
------UPD MethodInvocation@@response.addHeader("Allow",s) @TO@ response.addHeader("Allow",allowedMethods) @AT@ 5670 @LENGTH@ 30
---------UPD SimpleName@@MethodName:addHeader:["Allow", s] @TO@ MethodName:addHeader:["Allow", allowedMethods] @AT@ 5679 @LENGTH@ 21
------------UPD SimpleName@@s @TO@ allowedMethods @AT@ 5698 @LENGTH@ 1
---INS IfStatement@@if (allowedMethods == null) {  allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";} @TO@ Block@@ThenBody:{  String s;  if (consumer.getEndpoint().getHttpMethodRestrict() != null) {    s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();  } else {    s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";  }  response.addHeader("Allow",s);  response.setStatus(HttpServletResponse.SC_OK);  return;} @AT@ 5763 @LENGTH@ 166
------MOV Block@@ElseBody:{  s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";} @TO@ IfStatement@@if (allowedMethods == null) {  allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";} @AT@ 5532 @LENGTH@ 125
---------UPD ExpressionStatement@@Assignment:s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH" @TO@ Assignment:allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH" @AT@ 5584 @LENGTH@ 59
------------UPD Assignment@@s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH" @TO@ allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH" @AT@ 5584 @LENGTH@ 58
---------------UPD SimpleName@@s @TO@ allowedMethods @AT@ 5584 @LENGTH@ 1
------INS InfixExpression@@allowedMethods == null @TO@ IfStatement@@if (allowedMethods == null) {  allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";} @AT@ 5767 @LENGTH@ 22
---------INS SimpleName@@allowedMethods @TO@ InfixExpression@@allowedMethods == null @AT@ 5767 @LENGTH@ 14
---------INS Operator@@== @TO@ InfixExpression@@allowedMethods == null @AT@ 5781 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@allowedMethods == null @AT@ 5785 @LENGTH@ 4
---INS IfStatement@@if (!allowedMethods.contains("OPTIONS")) {  allowedMethods=allowedMethods + ",OPTIONS";} @TO@ Block@@ThenBody:{  String s;  if (consumer.getEndpoint().getHttpMethodRestrict() != null) {    s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();  } else {    s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";  }  response.addHeader("Allow",s);  response.setStatus(HttpServletResponse.SC_OK);  return;} @AT@ 5942 @LENGTH@ 118
------INS PrefixExpression@@!allowedMethods.contains("OPTIONS") @TO@ IfStatement@@if (!allowedMethods.contains("OPTIONS")) {  allowedMethods=allowedMethods + ",OPTIONS";} @AT@ 5946 @LENGTH@ 35
---------INS Operator@@! @TO@ PrefixExpression@@!allowedMethods.contains("OPTIONS") @AT@ 5946 @LENGTH@ 1
---------INS MethodInvocation@@allowedMethods.contains("OPTIONS") @TO@ PrefixExpression@@!allowedMethods.contains("OPTIONS") @AT@ 5947 @LENGTH@ 34
------------INS SimpleName@@Name:allowedMethods @TO@ MethodInvocation@@allowedMethods.contains("OPTIONS") @AT@ 5947 @LENGTH@ 14
------------INS SimpleName@@MethodName:contains:["OPTIONS"] @TO@ MethodInvocation@@allowedMethods.contains("OPTIONS") @AT@ 5962 @LENGTH@ 19
---------------INS StringLiteral@@"OPTIONS" @TO@ SimpleName@@MethodName:contains:["OPTIONS"] @AT@ 5971 @LENGTH@ 9
------INS Block@@ThenBody:{  allowedMethods=allowedMethods + ",OPTIONS";} @TO@ IfStatement@@if (!allowedMethods.contains("OPTIONS")) {  allowedMethods=allowedMethods + ",OPTIONS";} @AT@ 5983 @LENGTH@ 77
---------INS ExpressionStatement@@Assignment:allowedMethods=allowedMethods + ",OPTIONS" @TO@ Block@@ThenBody:{  allowedMethods=allowedMethods + ",OPTIONS";} @AT@ 6001 @LENGTH@ 45
------------INS Assignment@@allowedMethods=allowedMethods + ",OPTIONS" @TO@ ExpressionStatement@@Assignment:allowedMethods=allowedMethods + ",OPTIONS" @AT@ 6001 @LENGTH@ 44
---------------INS SimpleName@@allowedMethods @TO@ Assignment@@allowedMethods=allowedMethods + ",OPTIONS" @AT@ 6001 @LENGTH@ 14
---------------INS Operator@@= @TO@ Assignment@@allowedMethods=allowedMethods + ",OPTIONS" @AT@ 6015 @LENGTH@ 1
---------------INS InfixExpression@@allowedMethods + ",OPTIONS" @TO@ Assignment@@allowedMethods=allowedMethods + ",OPTIONS" @AT@ 6018 @LENGTH@ 27
------------------INS SimpleName@@allowedMethods @TO@ InfixExpression@@allowedMethods + ",OPTIONS" @AT@ 6018 @LENGTH@ 14
------------------INS Operator@@+ @TO@ InfixExpression@@allowedMethods + ",OPTIONS" @AT@ 6032 @LENGTH@ 1
------------------INS StringLiteral@@",OPTIONS" @TO@ InfixExpression@@allowedMethods + ",OPTIONS" @AT@ 6035 @LENGTH@ 10


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(InvalidationNearCacheBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(InvalidationNearCacheServiceConfigurator::new); @AT@ 3516 @LENGTH@ 101
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(InvalidationNearCacheBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(InvalidationNearCacheServiceConfigurator::new) @AT@ 3539 @LENGTH@ 77
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[InvalidationNearCacheBuilder::new] @TO@ SimpleResourceServiceHandler[InvalidationNearCacheServiceConfigurator::new] @AT@ 3549 @LENGTH@ 67


INS ExpressionStatement@@MethodInvocation:callback.done(false) @TO@ MethodDeclaration@@public, boolean, MethodName:process, Exchange exchange, AsyncCallback callback,  @AT@ 2795 @LENGTH@ 21
---INS MethodInvocation@@callback.done(false) @TO@ ExpressionStatement@@MethodInvocation:callback.done(false) @AT@ 2795 @LENGTH@ 20
------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(false) @AT@ 2795 @LENGTH@ 8
------INS SimpleName@@MethodName:done:[false] @TO@ MethodInvocation@@callback.done(false) @AT@ 2804 @LENGTH@ 11
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:done:[false] @AT@ 2809 @LENGTH@ 5


INS MethodDeclaration@@private, static, URL, MethodName:findResourceInClassLoader, ClassLoader cl, String path, IOException,  @TO@ TypeDeclaration@@[public]ClasspathModuleFinder, [ModuleFinder] @AT@ 4485 @LENGTH@ 486
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, URL, MethodName:findResourceInClassLoader, ClassLoader cl, String path, IOException,  @AT@ 4485 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, URL, MethodName:findResourceInClassLoader, ClassLoader cl, String path, IOException,  @AT@ 4493 @LENGTH@ 6
---INS SimpleType@@URL @TO@ MethodDeclaration@@private, static, URL, MethodName:findResourceInClassLoader, ClassLoader cl, String path, IOException,  @AT@ 4500 @LENGTH@ 3
---INS SimpleName@@MethodName:findResourceInClassLoader @TO@ MethodDeclaration@@private, static, URL, MethodName:findResourceInClassLoader, ClassLoader cl, String path, IOException,  @AT@ 4504 @LENGTH@ 25
---INS SingleVariableDeclaration@@ClassLoader cl @TO@ MethodDeclaration@@private, static, URL, MethodName:findResourceInClassLoader, ClassLoader cl, String path, IOException,  @AT@ 4530 @LENGTH@ 14
------INS SimpleType@@ClassLoader @TO@ SingleVariableDeclaration@@ClassLoader cl @AT@ 4530 @LENGTH@ 11
------INS SimpleName@@cl @TO@ SingleVariableDeclaration@@ClassLoader cl @AT@ 4542 @LENGTH@ 2
---INS SingleVariableDeclaration@@String path @TO@ MethodDeclaration@@private, static, URL, MethodName:findResourceInClassLoader, ClassLoader cl, String path, IOException,  @AT@ 4546 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String path @AT@ 4546 @LENGTH@ 6
------INS SimpleName@@path @TO@ SingleVariableDeclaration@@String path @AT@ 4553 @LENGTH@ 4
---INS SimpleType@@IOException @TO@ MethodDeclaration@@private, static, URL, MethodName:findResourceInClassLoader, ClassLoader cl, String path, IOException,  @AT@ 4566 @LENGTH@ 11
---INS VariableDeclarationStatement@@Enumeration<URL> resources=cl.getResources(path); @TO@ MethodDeclaration@@private, static, URL, MethodName:findResourceInClassLoader, ClassLoader cl, String path, IOException,  @AT@ 4588 @LENGTH@ 51
------INS ParameterizedType@@Enumeration<URL> @TO@ VariableDeclarationStatement@@Enumeration<URL> resources=cl.getResources(path); @AT@ 4588 @LENGTH@ 16
---------INS SimpleType@@Enumeration @TO@ ParameterizedType@@Enumeration<URL> @AT@ 4588 @LENGTH@ 11
---------INS SimpleType@@URL @TO@ ParameterizedType@@Enumeration<URL> @AT@ 4600 @LENGTH@ 3
------INS VariableDeclarationFragment@@resources=cl.getResources(path) @TO@ VariableDeclarationStatement@@Enumeration<URL> resources=cl.getResources(path); @AT@ 4605 @LENGTH@ 33
---------INS SimpleName@@resources @TO@ VariableDeclarationFragment@@resources=cl.getResources(path) @AT@ 4605 @LENGTH@ 9
---------INS MethodInvocation@@cl.getResources(path) @TO@ VariableDeclarationFragment@@resources=cl.getResources(path) @AT@ 4617 @LENGTH@ 21
------------INS SimpleName@@Name:cl @TO@ MethodInvocation@@cl.getResources(path) @AT@ 4617 @LENGTH@ 2
------------INS SimpleName@@MethodName:getResources:[path] @TO@ MethodInvocation@@cl.getResources(path) @AT@ 4620 @LENGTH@ 18
---------------INS SimpleName@@path @TO@ SimpleName@@MethodName:getResources:[path] @AT@ 4633 @LENGTH@ 4
---INS WhileStatement@@while (resources.hasMoreElements()) {  URL candidate=resources.nextElement();  if (candidate.toString().contains("redhat-")) {    return candidate;  }} @TO@ MethodDeclaration@@private, static, URL, MethodName:findResourceInClassLoader, ClassLoader cl, String path, IOException,  @AT@ 4648 @LENGTH@ 279
------INS MethodInvocation@@resources.hasMoreElements() @TO@ WhileStatement@@while (resources.hasMoreElements()) {  URL candidate=resources.nextElement();  if (candidate.toString().contains("redhat-")) {    return candidate;  }} @AT@ 4655 @LENGTH@ 27
---------INS SimpleName@@Name:resources @TO@ MethodInvocation@@resources.hasMoreElements() @AT@ 4655 @LENGTH@ 9
---------INS SimpleName@@MethodName:hasMoreElements:[] @TO@ MethodInvocation@@resources.hasMoreElements() @AT@ 4665 @LENGTH@ 17
------INS Block@@WhileBody:{  URL candidate=resources.nextElement();  if (candidate.toString().contains("redhat-")) {    return candidate;  }} @TO@ WhileStatement@@while (resources.hasMoreElements()) {  URL candidate=resources.nextElement();  if (candidate.toString().contains("redhat-")) {    return candidate;  }} @AT@ 4684 @LENGTH@ 243
---------INS VariableDeclarationStatement@@URL candidate=resources.nextElement(); @TO@ Block@@WhileBody:{  URL candidate=resources.nextElement();  if (candidate.toString().contains("redhat-")) {    return candidate;  }} @AT@ 4698 @LENGTH@ 40
------------INS SimpleType@@URL @TO@ VariableDeclarationStatement@@URL candidate=resources.nextElement(); @AT@ 4698 @LENGTH@ 3
------------INS VariableDeclarationFragment@@candidate=resources.nextElement() @TO@ VariableDeclarationStatement@@URL candidate=resources.nextElement(); @AT@ 4702 @LENGTH@ 35
---------------INS SimpleName@@candidate @TO@ VariableDeclarationFragment@@candidate=resources.nextElement() @AT@ 4702 @LENGTH@ 9
---------------INS MethodInvocation@@resources.nextElement() @TO@ VariableDeclarationFragment@@candidate=resources.nextElement() @AT@ 4714 @LENGTH@ 23
------------------INS SimpleName@@Name:resources @TO@ MethodInvocation@@resources.nextElement() @AT@ 4714 @LENGTH@ 9
------------------INS SimpleName@@MethodName:nextElement:[] @TO@ MethodInvocation@@resources.nextElement() @AT@ 4724 @LENGTH@ 13
---------INS IfStatement@@if (candidate.toString().contains("redhat-")) {  return candidate;} @TO@ Block@@WhileBody:{  URL candidate=resources.nextElement();  if (candidate.toString().contains("redhat-")) {    return candidate;  }} @AT@ 4822 @LENGTH@ 95
------------INS MethodInvocation@@candidate.toString().contains("redhat-") @TO@ IfStatement@@if (candidate.toString().contains("redhat-")) {  return candidate;} @AT@ 4826 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@candidate.toString().contains("redhat-") @AT@ 4826 @LENGTH@ 20
---------------INS SimpleName@@Name:candidate @TO@ MethodInvocation@@candidate.toString().contains("redhat-") @AT@ 4826 @LENGTH@ 9
---------------INS SimpleName@@MethodName:contains:["redhat-"] @TO@ MethodInvocation@@candidate.toString().contains("redhat-") @AT@ 4847 @LENGTH@ 19
------------------INS StringLiteral@@"redhat-" @TO@ SimpleName@@MethodName:contains:["redhat-"] @AT@ 4856 @LENGTH@ 9
------------INS Block@@ThenBody:{  return candidate;} @TO@ IfStatement@@if (candidate.toString().contains("redhat-")) {  return candidate;} @AT@ 4868 @LENGTH@ 49
---------------INS ReturnStatement@@SimpleName:candidate @TO@ Block@@ThenBody:{  return candidate;} @AT@ 4886 @LENGTH@ 17
------------------INS SimpleName@@candidate @TO@ ReturnStatement@@SimpleName:candidate @AT@ 4893 @LENGTH@ 9
---INS ReturnStatement@@MethodInvocation:cl.getResource(path) @TO@ MethodDeclaration@@private, static, URL, MethodName:findResourceInClassLoader, ClassLoader cl, String path, IOException,  @AT@ 4937 @LENGTH@ 28
------MOV MethodInvocation@@cl.getResource(path) @TO@ ReturnStatement@@MethodInvocation:cl.getResource(path) @AT@ 2371 @LENGTH@ 20


UPD MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ protected, void, MethodName:doStart,  @AT@ 7039 @LENGTH@ 66
---DEL SimpleType@@Exception @AT@ 7071 @LENGTH@ 9


INS MethodDeclaration@@public, voidMethodName:DelegatingOAuth2TokenValidator, OAuth2TokenValidator<T>... tokenValidators,  @TO@ TypeDeclaration@@[public, final]DelegatingOAuth2TokenValidator, [OAuth2TokenValidator<T>] @AT@ 1760 @LENGTH@ 126
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:DelegatingOAuth2TokenValidator, OAuth2TokenValidator<T>... tokenValidators,  @AT@ 1760 @LENGTH@ 6
---INS SimpleName@@MethodName:DelegatingOAuth2TokenValidator @TO@ MethodDeclaration@@public, voidMethodName:DelegatingOAuth2TokenValidator, OAuth2TokenValidator<T>... tokenValidators,  @AT@ 1767 @LENGTH@ 30
---INS SingleVariableDeclaration@@OAuth2TokenValidator<T>... tokenValidators @TO@ MethodDeclaration@@public, voidMethodName:DelegatingOAuth2TokenValidator, OAuth2TokenValidator<T>... tokenValidators,  @AT@ 1798 @LENGTH@ 42
------INS ParameterizedType@@OAuth2TokenValidator<T> @TO@ SingleVariableDeclaration@@OAuth2TokenValidator<T>... tokenValidators @AT@ 1798 @LENGTH@ 23
---------INS SimpleType@@OAuth2TokenValidator @TO@ ParameterizedType@@OAuth2TokenValidator<T> @AT@ 1798 @LENGTH@ 20
---------INS SimpleType@@T @TO@ ParameterizedType@@OAuth2TokenValidator<T> @AT@ 1819 @LENGTH@ 1
------INS SimpleName@@tokenValidators @TO@ SingleVariableDeclaration@@OAuth2TokenValidator<T>... tokenValidators @AT@ 1825 @LENGTH@ 15
---INS ConstructorInvocation@@this(Arrays.asList(tokenValidators)); @TO@ MethodDeclaration@@public, voidMethodName:DelegatingOAuth2TokenValidator, OAuth2TokenValidator<T>... tokenValidators,  @AT@ 1846 @LENGTH@ 37
------INS MethodInvocation@@Arrays.asList(tokenValidators) @TO@ ConstructorInvocation@@this(Arrays.asList(tokenValidators)); @AT@ 1851 @LENGTH@ 30
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(tokenValidators) @AT@ 1851 @LENGTH@ 6
---------INS SimpleName@@MethodName:asList:[tokenValidators] @TO@ MethodInvocation@@Arrays.asList(tokenValidators) @AT@ 1858 @LENGTH@ 23
------------INS SimpleName@@tokenValidators @TO@ SimpleName@@MethodName:asList:[tokenValidators] @AT@ 1865 @LENGTH@ 15


INS MethodDeclaration@@public, ServerHttpSecurity, MethodName:and,  @TO@ TypeDeclaration@@[public]OAuth2LoginSpec,  @AT@ 17193 @LENGTH@ 72
---INS Modifier@@public @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:and,  @AT@ 17193 @LENGTH@ 6
---INS SimpleType@@ServerHttpSecurity @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:and,  @AT@ 17200 @LENGTH@ 18
---INS SimpleName@@MethodName:and @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:and,  @AT@ 17219 @LENGTH@ 3
---INS ReturnStatement@@ThisExpression:ServerHttpSecurity.this @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:and,  @AT@ 17230 @LENGTH@ 31
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:ServerHttpSecurity.this @AT@ 17237 @LENGTH@ 23


INS MethodDeclaration@@public, void, MethodName:writeHeadersWhenNotModifiedThenNoCacheControlHeaders,  @TO@ TypeDeclaration@@[public]CacheControlServerHttpHeadersWriterTests,  @AT@ 2811 @LENGTH@ 208
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:writeHeadersWhenNotModifiedThenNoCacheControlHeaders,  @AT@ 2811 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:writeHeadersWhenNotModifiedThenNoCacheControlHeaders,  @AT@ 2818 @LENGTH@ 4
---INS SimpleName@@MethodName:writeHeadersWhenNotModifiedThenNoCacheControlHeaders @TO@ MethodDeclaration@@public, void, MethodName:writeHeadersWhenNotModifiedThenNoCacheControlHeaders,  @AT@ 2823 @LENGTH@ 52
---INS ExpressionStatement@@MethodInvocation:exchange.getResponse().setStatusCode(HttpStatus.NOT_MODIFIED) @TO@ MethodDeclaration@@public, void, MethodName:writeHeadersWhenNotModifiedThenNoCacheControlHeaders,  @AT@ 2882 @LENGTH@ 62
------INS MethodInvocation@@exchange.getResponse().setStatusCode(HttpStatus.NOT_MODIFIED) @TO@ ExpressionStatement@@MethodInvocation:exchange.getResponse().setStatusCode(HttpStatus.NOT_MODIFIED) @AT@ 2882 @LENGTH@ 61
---------INS MethodInvocation@@MethodName:getResponse:[] @TO@ MethodInvocation@@exchange.getResponse().setStatusCode(HttpStatus.NOT_MODIFIED) @AT@ 2882 @LENGTH@ 22
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getResponse().setStatusCode(HttpStatus.NOT_MODIFIED) @AT@ 2882 @LENGTH@ 8
---------INS SimpleName@@MethodName:setStatusCode:[HttpStatus.NOT_MODIFIED] @TO@ MethodInvocation@@exchange.getResponse().setStatusCode(HttpStatus.NOT_MODIFIED) @AT@ 2905 @LENGTH@ 38
------------INS QualifiedName@@HttpStatus.NOT_MODIFIED @TO@ SimpleName@@MethodName:setStatusCode:[HttpStatus.NOT_MODIFIED] @AT@ 2919 @LENGTH@ 23
---------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.NOT_MODIFIED @AT@ 2919 @LENGTH@ 10
---------------INS SimpleName@@NOT_MODIFIED @TO@ QualifiedName@@HttpStatus.NOT_MODIFIED @AT@ 2930 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:writer.writeHttpHeaders(exchange) @TO@ MethodDeclaration@@public, void, MethodName:writeHeadersWhenNotModifiedThenNoCacheControlHeaders,  @AT@ 2948 @LENGTH@ 34
------INS MethodInvocation@@writer.writeHttpHeaders(exchange) @TO@ ExpressionStatement@@MethodInvocation:writer.writeHttpHeaders(exchange) @AT@ 2948 @LENGTH@ 33
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeHttpHeaders(exchange) @AT@ 2948 @LENGTH@ 6
---------INS SimpleName@@MethodName:writeHttpHeaders:[exchange] @TO@ MethodInvocation@@writer.writeHttpHeaders(exchange) @AT@ 2955 @LENGTH@ 26
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:writeHttpHeaders:[exchange] @AT@ 2972 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(headers).isEmpty() @TO@ MethodDeclaration@@public, void, MethodName:writeHeadersWhenNotModifiedThenNoCacheControlHeaders,  @AT@ 2986 @LENGTH@ 30
------INS MethodInvocation@@assertThat(headers).isEmpty() @TO@ ExpressionStatement@@MethodInvocation:assertThat(headers).isEmpty() @AT@ 2986 @LENGTH@ 29
---------INS MethodInvocation@@MethodName:assertThat:[headers] @TO@ MethodInvocation@@assertThat(headers).isEmpty() @AT@ 2986 @LENGTH@ 19
------------INS SimpleName@@headers @TO@ MethodInvocation@@MethodName:assertThat:[headers] @AT@ 2997 @LENGTH@ 7
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@assertThat(headers).isEmpty() @AT@ 3006 @LENGTH@ 9


UPD EnhancedForStatement@@for (String line : lines) {  line=line.trim();  if (line.startsWith("@param") || line.startsWith("@return") || line.startsWith("@deprecated")) {    break;  }  if (line.startsWith("@")) {    continue;  }  line=line.replaceAll("<.*?>","");  line=line.replaceAll("\\{\\@\\w+\\s([\\w.]+)\\}","$1");  if (!first) {    sb.append(' ');  }  StringBuilder cb=new StringBuilder();  for (  char c : line.toCharArray()) {    if (Character.isJavaIdentifierPart(c) || VALID_CHARS.indexOf(c) != -1) {      cb.append(c);    } else     if (Character.isWhitespace(c)) {      cb.append(' ');    }  }  String s=cb.toString().trim();  sb.append(s);  boolean empty=Strings.isNullOrEmpty(s);  boolean endWithDot=s.endsWith(".");  boolean haveText=sb.length() > 0;  if (haveText && summary && (empty || endWithDot)) {    break;  }  first=false;} @TO@ for (String line : lines) {  line=line.trim();  if (line.startsWith("**")) {    continue;  }  if (line.startsWith("*")) {    line=line.substring(1);    line=line.trim();  }  if (line.startsWith("@param") || line.startsWith("@return") || line.startsWith("@deprecated")) {    break;  }  if (line.startsWith("@")) {    continue;  }  line=line.replaceAll("<.*?>","");  line=line.replaceAll("\\{\\@\\w+\\s#?([\\w.#(\\d,)]+)\\}","$1");  if (!first) {    sb.append(' ');  }  StringBuilder cb=new StringBuilder();  for (  char c : line.toCharArray()) {    if (Character.isJavaIdentifierPart(c) || VALID_CHARS.indexOf(c) != -1) {      cb.append(c);    } else     if (Character.isWhitespace(c)) {      cb.append(' ');    }  }  String s=cb.toString().trim();  sb.append(s);  boolean empty=Strings.isNullOrEmpty(s);  boolean endWithDot=s.endsWith(".");  boolean haveText=sb.length() > 0;  if (haveText && summary && (empty || endWithDot)) {    break;  }  first=false;} @AT@ 10134 @LENGTH@ 1818
---INS IfStatement@@if (line.startsWith("**")) {  continue;} @TO@ EnhancedForStatement@@for (String line : lines) {  line=line.trim();  if (line.startsWith("@param") || line.startsWith("@return") || line.startsWith("@deprecated")) {    break;  }  if (line.startsWith("@")) {    continue;  }  line=line.replaceAll("<.*?>","");  line=line.replaceAll("\\{\\@\\w+\\s([\\w.]+)\\}","$1");  if (!first) {    sb.append(' ');  }  StringBuilder cb=new StringBuilder();  for (  char c : line.toCharArray()) {    if (Character.isJavaIdentifierPart(c) || VALID_CHARS.indexOf(c) != -1) {      cb.append(c);    } else     if (Character.isWhitespace(c)) {      cb.append(' ');    }  }  String s=cb.toString().trim();  sb.append(s);  boolean empty=Strings.isNullOrEmpty(s);  boolean endWithDot=s.endsWith(".");  boolean haveText=sb.length() > 0;  if (haveText && summary && (empty || endWithDot)) {    break;  }  first=false;} @AT@ 10208 @LENGTH@ 68
------INS MethodInvocation@@line.startsWith("**") @TO@ IfStatement@@if (line.startsWith("**")) {  continue;} @AT@ 10212 @LENGTH@ 21
---------INS SimpleName@@Name:line @TO@ MethodInvocation@@line.startsWith("**") @AT@ 10212 @LENGTH@ 4
---------INS SimpleName@@MethodName:startsWith:["**"] @TO@ MethodInvocation@@line.startsWith("**") @AT@ 10217 @LENGTH@ 16
------------INS StringLiteral@@"**" @TO@ SimpleName@@MethodName:startsWith:["**"] @AT@ 10228 @LENGTH@ 4
------INS Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (line.startsWith("**")) {  continue;} @AT@ 10235 @LENGTH@ 41
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 10253 @LENGTH@ 9
---INS IfStatement@@if (line.startsWith("*")) {  line=line.substring(1);  line=line.trim();} @TO@ EnhancedForStatement@@for (String line : lines) {  line=line.trim();  if (line.startsWith("@param") || line.startsWith("@return") || line.startsWith("@deprecated")) {    break;  }  if (line.startsWith("@")) {    continue;  }  line=line.replaceAll("<.*?>","");  line=line.replaceAll("\\{\\@\\w+\\s([\\w.]+)\\}","$1");  if (!first) {    sb.append(' ');  }  StringBuilder cb=new StringBuilder();  for (  char c : line.toCharArray()) {    if (Character.isJavaIdentifierPart(c) || VALID_CHARS.indexOf(c) != -1) {      cb.append(c);    } else     if (Character.isWhitespace(c)) {      cb.append(' ');    }  }  String s=cb.toString().trim();  sb.append(s);  boolean empty=Strings.isNullOrEmpty(s);  boolean endWithDot=s.endsWith(".");  boolean haveText=sb.length() > 0;  if (haveText && summary && (empty || endWithDot)) {    break;  }  first=false;} @AT@ 10329 @LENGTH@ 119
------INS MethodInvocation@@line.startsWith("*") @TO@ IfStatement@@if (line.startsWith("*")) {  line=line.substring(1);  line=line.trim();} @AT@ 10333 @LENGTH@ 20
---------INS SimpleName@@Name:line @TO@ MethodInvocation@@line.startsWith("*") @AT@ 10333 @LENGTH@ 4
---------INS SimpleName@@MethodName:startsWith:["*"] @TO@ MethodInvocation@@line.startsWith("*") @AT@ 10338 @LENGTH@ 15
------------INS StringLiteral@@"*" @TO@ SimpleName@@MethodName:startsWith:["*"] @AT@ 10349 @LENGTH@ 3
------INS Block@@ThenBody:{  line=line.substring(1);  line=line.trim();} @TO@ IfStatement@@if (line.startsWith("*")) {  line=line.substring(1);  line=line.trim();} @AT@ 10355 @LENGTH@ 93
---------INS ExpressionStatement@@Assignment:line=line.substring(1) @TO@ Block@@ThenBody:{  line=line.substring(1);  line=line.trim();} @AT@ 10373 @LENGTH@ 25
------------INS Assignment@@line=line.substring(1) @TO@ ExpressionStatement@@Assignment:line=line.substring(1) @AT@ 10373 @LENGTH@ 24
---------------INS SimpleName@@line @TO@ Assignment@@line=line.substring(1) @AT@ 10373 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@line=line.substring(1) @AT@ 10377 @LENGTH@ 1
---------------INS MethodInvocation@@line.substring(1) @TO@ Assignment@@line=line.substring(1) @AT@ 10380 @LENGTH@ 17
------------------INS SimpleName@@Name:line @TO@ MethodInvocation@@line.substring(1) @AT@ 10380 @LENGTH@ 4
------------------INS SimpleName@@MethodName:substring:[1] @TO@ MethodInvocation@@line.substring(1) @AT@ 10385 @LENGTH@ 12
---------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:substring:[1] @AT@ 10395 @LENGTH@ 1
---------INS ExpressionStatement@@Assignment:line=line.trim() @TO@ Block@@ThenBody:{  line=line.substring(1);  line=line.trim();} @AT@ 10415 @LENGTH@ 19
------------INS Assignment@@line=line.trim() @TO@ ExpressionStatement@@Assignment:line=line.trim() @AT@ 10415 @LENGTH@ 18
---------------INS SimpleName@@line @TO@ Assignment@@line=line.trim() @AT@ 10415 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@line=line.trim() @AT@ 10419 @LENGTH@ 1
---------------INS MethodInvocation@@line.trim() @TO@ Assignment@@line=line.trim() @AT@ 10422 @LENGTH@ 11
------------------INS SimpleName@@Name:line @TO@ MethodInvocation@@line.trim() @AT@ 10422 @LENGTH@ 4
------------------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@line.trim() @AT@ 10427 @LENGTH@ 6
---UPD ExpressionStatement@@Assignment:line=line.replaceAll("\\{\\@\\w+\\s([\\w.]+)\\}","$1") @TO@ Assignment:line=line.replaceAll("\\{\\@\\w+\\s#?([\\w.#(\\d,)]+)\\}","$1") @AT@ 10776 @LENGTH@ 58
------UPD Assignment@@line=line.replaceAll("\\{\\@\\w+\\s([\\w.]+)\\}","$1") @TO@ line=line.replaceAll("\\{\\@\\w+\\s#?([\\w.#(\\d,)]+)\\}","$1") @AT@ 10776 @LENGTH@ 57
---------UPD MethodInvocation@@line.replaceAll("\\{\\@\\w+\\s([\\w.]+)\\}","$1") @TO@ line.replaceAll("\\{\\@\\w+\\s#?([\\w.#(\\d,)]+)\\}","$1") @AT@ 10783 @LENGTH@ 50
------------UPD SimpleName@@MethodName:replaceAll:["\\{\\@\\w+\\s([\\w.]+)\\}", "$1"] @TO@ MethodName:replaceAll:["\\{\\@\\w+\\s#?([\\w.#(\\d,)]+)\\}", "$1"] @AT@ 10788 @LENGTH@ 45
---------------UPD StringLiteral@@"\\{\\@\\w+\\s([\\w.]+)\\}" @TO@ "\\{\\@\\w+\\s#?([\\w.#(\\d,)]+)\\}" @AT@ 10799 @LENGTH@ 27


INS MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @TO@ TypeDeclaration@@[public]BasicAuthenticationFilterTests,  @AT@ 6108 @LENGTH@ 804
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6108 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6115 @LENGTH@ 4
---INS SimpleName@@MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6120 @LENGTH@ 55
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6185 @LENGTH@ 9
---INS VariableDeclarationStatement@@String token="rod:koala"; @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6199 @LENGTH@ 27
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String token="rod:koala"; @AT@ 6199 @LENGTH@ 6
------INS VariableDeclarationFragment@@token="rod:koala" @TO@ VariableDeclarationStatement@@String token="rod:koala"; @AT@ 6206 @LENGTH@ 19
---------INS SimpleName@@token @TO@ VariableDeclarationFragment@@token="rod:koala" @AT@ 6206 @LENGTH@ 5
---------INS StringLiteral@@"rod:koala" @TO@ VariableDeclarationFragment@@token="rod:koala" @AT@ 6214 @LENGTH@ 11
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6229 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 6229 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 6252 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 6252 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 6262 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 6262 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 6266 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.addHeader("Authorization","basic " + new String(Base64.encodeBase64(token.getBytes()))) @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6294 @LENGTH@ 101
------INS MethodInvocation@@request.addHeader("Authorization","basic " + new String(Base64.encodeBase64(token.getBytes()))) @TO@ ExpressionStatement@@MethodInvocation:request.addHeader("Authorization","basic " + new String(Base64.encodeBase64(token.getBytes()))) @AT@ 6294 @LENGTH@ 100
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addHeader("Authorization","basic " + new String(Base64.encodeBase64(token.getBytes()))) @AT@ 6294 @LENGTH@ 7
---------INS SimpleName@@MethodName:addHeader:["Authorization", "basic " + new String(Base64.encodeBase64(token.getBytes()))] @TO@ MethodInvocation@@request.addHeader("Authorization","basic " + new String(Base64.encodeBase64(token.getBytes()))) @AT@ 6302 @LENGTH@ 92
------------INS StringLiteral@@"Authorization" @TO@ SimpleName@@MethodName:addHeader:["Authorization", "basic " + new String(Base64.encodeBase64(token.getBytes()))] @AT@ 6312 @LENGTH@ 15
------------INS InfixExpression@@"basic " + new String(Base64.encodeBase64(token.getBytes())) @TO@ SimpleName@@MethodName:addHeader:["Authorization", "basic " + new String(Base64.encodeBase64(token.getBytes()))] @AT@ 6333 @LENGTH@ 60
---------------INS StringLiteral@@"basic " @TO@ InfixExpression@@"basic " + new String(Base64.encodeBase64(token.getBytes())) @AT@ 6333 @LENGTH@ 8
---------------INS Operator@@+ @TO@ InfixExpression@@"basic " + new String(Base64.encodeBase64(token.getBytes())) @AT@ 6341 @LENGTH@ 1
---------------INS ClassInstanceCreation@@String[Base64.encodeBase64(token.getBytes())] @TO@ InfixExpression@@"basic " + new String(Base64.encodeBase64(token.getBytes())) @AT@ 6344 @LENGTH@ 49
------------------INS New@@new @TO@ ClassInstanceCreation@@String[Base64.encodeBase64(token.getBytes())] @AT@ 6344 @LENGTH@ 3
------------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[Base64.encodeBase64(token.getBytes())] @AT@ 6348 @LENGTH@ 6
------------------INS MethodInvocation@@Base64.encodeBase64(token.getBytes()) @TO@ ClassInstanceCreation@@String[Base64.encodeBase64(token.getBytes())] @AT@ 6355 @LENGTH@ 37
---------------------INS SimpleName@@Name:Base64 @TO@ MethodInvocation@@Base64.encodeBase64(token.getBytes()) @AT@ 6355 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:encodeBase64:[token.getBytes()] @TO@ MethodInvocation@@Base64.encodeBase64(token.getBytes()) @AT@ 6362 @LENGTH@ 30
------------------------INS MethodInvocation@@token.getBytes() @TO@ SimpleName@@MethodName:encodeBase64:[token.getBytes()] @AT@ 6375 @LENGTH@ 16
---------------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getBytes() @AT@ 6375 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@token.getBytes() @AT@ 6381 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:request.setServletPath("/some_file.html") @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6398 @LENGTH@ 42
------INS MethodInvocation@@request.setServletPath("/some_file.html") @TO@ ExpressionStatement@@MethodInvocation:request.setServletPath("/some_file.html") @AT@ 6398 @LENGTH@ 41
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setServletPath("/some_file.html") @AT@ 6398 @LENGTH@ 7
---------INS SimpleName@@MethodName:setServletPath:["/some_file.html"] @TO@ MethodInvocation@@request.setServletPath("/some_file.html") @AT@ 6406 @LENGTH@ 33
------------INS StringLiteral@@"/some_file.html" @TO@ SimpleName@@MethodName:setServletPath:["/some_file.html"] @AT@ 6421 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6454 @LENGTH@ 76
------INS MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @AT@ 6454 @LENGTH@ 75
---------INS MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @AT@ 6454 @LENGTH@ 66
------------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @AT@ 6465 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 6465 @LENGTH@ 34
---------------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 6465 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 6500 @LENGTH@ 19
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @AT@ 6521 @LENGTH@ 8
---INS VariableDeclarationStatement@@FilterChain chain=mock(FilterChain.class); @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6533 @LENGTH@ 44
------INS SimpleType@@FilterChain @TO@ VariableDeclarationStatement@@FilterChain chain=mock(FilterChain.class); @AT@ 6533 @LENGTH@ 11
------INS VariableDeclarationFragment@@chain=mock(FilterChain.class) @TO@ VariableDeclarationStatement@@FilterChain chain=mock(FilterChain.class); @AT@ 6545 @LENGTH@ 31
---------INS SimpleName@@chain @TO@ VariableDeclarationFragment@@chain=mock(FilterChain.class) @AT@ 6545 @LENGTH@ 5
---------INS MethodInvocation@@mock(FilterChain.class) @TO@ VariableDeclarationFragment@@chain=mock(FilterChain.class) @AT@ 6553 @LENGTH@ 23
------------INS SimpleName@@MethodName:mock:[FilterChain.class] @TO@ MethodInvocation@@mock(FilterChain.class) @AT@ 6553 @LENGTH@ 23
---------------INS TypeLiteral@@FilterChain.class @TO@ SimpleName@@MethodName:mock:[FilterChain.class] @AT@ 6558 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:filter.doFilter(request,new MockHttpServletResponse(),chain) @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6580 @LENGTH@ 63
------INS MethodInvocation@@filter.doFilter(request,new MockHttpServletResponse(),chain) @TO@ ExpressionStatement@@MethodInvocation:filter.doFilter(request,new MockHttpServletResponse(),chain) @AT@ 6580 @LENGTH@ 62
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.doFilter(request,new MockHttpServletResponse(),chain) @AT@ 6580 @LENGTH@ 6
---------INS SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), chain] @TO@ MethodInvocation@@filter.doFilter(request,new MockHttpServletResponse(),chain) @AT@ 6587 @LENGTH@ 55
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), chain] @AT@ 6596 @LENGTH@ 7
------------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), chain] @AT@ 6605 @LENGTH@ 29
---------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 6605 @LENGTH@ 3
---------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 6609 @LENGTH@ 23
------------INS SimpleName@@chain @TO@ SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), chain] @AT@ 6636 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:verify(chain).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6647 @LENGTH@ 78
------INS MethodInvocation@@verify(chain).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @TO@ ExpressionStatement@@MethodInvocation:verify(chain).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @AT@ 6647 @LENGTH@ 77
---------INS MethodInvocation@@MethodName:verify:[chain] @TO@ MethodInvocation@@verify(chain).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @AT@ 6647 @LENGTH@ 13
------------INS SimpleName@@chain @TO@ MethodInvocation@@MethodName:verify:[chain] @AT@ 6654 @LENGTH@ 5
---------INS SimpleName@@MethodName:doFilter:[any(ServletRequest.class), any(ServletResponse.class)] @TO@ MethodInvocation@@verify(chain).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @AT@ 6661 @LENGTH@ 63
------------INS MethodInvocation@@any(ServletRequest.class) @TO@ SimpleName@@MethodName:doFilter:[any(ServletRequest.class), any(ServletResponse.class)] @AT@ 6670 @LENGTH@ 25
---------------INS SimpleName@@MethodName:any:[ServletRequest.class] @TO@ MethodInvocation@@any(ServletRequest.class) @AT@ 6670 @LENGTH@ 25
------------------INS TypeLiteral@@ServletRequest.class @TO@ SimpleName@@MethodName:any:[ServletRequest.class] @AT@ 6674 @LENGTH@ 20
------------INS MethodInvocation@@any(ServletResponse.class) @TO@ SimpleName@@MethodName:doFilter:[any(ServletRequest.class), any(ServletResponse.class)] @AT@ 6697 @LENGTH@ 26
---------------INS SimpleName@@MethodName:any:[ServletResponse.class] @TO@ MethodInvocation@@any(ServletResponse.class) @AT@ 6697 @LENGTH@ 26
------------------INS TypeLiteral@@ServletResponse.class @TO@ SimpleName@@MethodName:any:[ServletResponse.class] @AT@ 6701 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6728 @LENGTH@ 79
------INS MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isNotNull() @AT@ 6728 @LENGTH@ 78
---------INS MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNotNull() @AT@ 6728 @LENGTH@ 66
------------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @AT@ 6739 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 6739 @LENGTH@ 34
---------------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 6739 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 6774 @LENGTH@ 19
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNotNull() @AT@ 6795 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeLowercaseThenCaseInsensitveMatchWorks, Exception,  @AT@ 6810 @LENGTH@ 99
------INS MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @TO@ ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @AT@ 6810 @LENGTH@ 98
---------INS MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication().getName()] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @AT@ 6810 @LENGTH@ 76
------------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication().getName() @TO@ MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication().getName()] @AT@ 6821 @LENGTH@ 64
---------------INS MethodInvocation@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication().getName() @AT@ 6821 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication().getName() @AT@ 6821 @LENGTH@ 34
---------------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication().getName() @AT@ 6821 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication().getName() @AT@ 6876 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["rod"] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @AT@ 6892 @LENGTH@ 16
------------INS StringLiteral@@"rod" @TO@ SimpleName@@MethodName:isEqualTo:["rod"] @AT@ 6902 @LENGTH@ 5


INS IfStatement@@if (exchange.getResponse().getStatusCode() == HttpStatus.NOT_MODIFIED) {  return Mono.empty();} @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:writeHttpHeaders, ServerWebExchange exchange,  @AT@ 2030 @LENGTH@ 100
---INS InfixExpression@@exchange.getResponse().getStatusCode() == HttpStatus.NOT_MODIFIED @TO@ IfStatement@@if (exchange.getResponse().getStatusCode() == HttpStatus.NOT_MODIFIED) {  return Mono.empty();} @AT@ 2034 @LENGTH@ 65
------INS MethodInvocation@@exchange.getResponse().getStatusCode() @TO@ InfixExpression@@exchange.getResponse().getStatusCode() == HttpStatus.NOT_MODIFIED @AT@ 2034 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:getResponse:[] @TO@ MethodInvocation@@exchange.getResponse().getStatusCode() @AT@ 2034 @LENGTH@ 22
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getResponse().getStatusCode() @AT@ 2034 @LENGTH@ 8
---------INS SimpleName@@MethodName:getStatusCode:[] @TO@ MethodInvocation@@exchange.getResponse().getStatusCode() @AT@ 2057 @LENGTH@ 15
------INS Operator@@== @TO@ InfixExpression@@exchange.getResponse().getStatusCode() == HttpStatus.NOT_MODIFIED @AT@ 2072 @LENGTH@ 2
------INS QualifiedName@@HttpStatus.NOT_MODIFIED @TO@ InfixExpression@@exchange.getResponse().getStatusCode() == HttpStatus.NOT_MODIFIED @AT@ 2076 @LENGTH@ 23
---------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.NOT_MODIFIED @AT@ 2076 @LENGTH@ 10
---------INS SimpleName@@NOT_MODIFIED @TO@ QualifiedName@@HttpStatus.NOT_MODIFIED @AT@ 2087 @LENGTH@ 12
---INS Block@@ThenBody:{  return Mono.empty();} @TO@ IfStatement@@if (exchange.getResponse().getStatusCode() == HttpStatus.NOT_MODIFIED) {  return Mono.empty();} @AT@ 2101 @LENGTH@ 29
------INS ReturnStatement@@MethodInvocation:Mono.empty() @TO@ Block@@ThenBody:{  return Mono.empty();} @AT@ 2106 @LENGTH@ 20
---------INS MethodInvocation@@Mono.empty() @TO@ ReturnStatement@@MethodInvocation:Mono.empty() @AT@ 2113 @LENGTH@ 12
------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.empty() @AT@ 2113 @LENGTH@ 4
------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Mono.empty() @AT@ 2118 @LENGTH@ 7


UPD VariableDeclarationStatement@@BooleanExpression criteria=QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not(); @TO@ BooleanExpression criteria=QPerson.person.lastname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not(); @AT@ 6521 @LENGTH@ 134
---UPD VariableDeclarationFragment@@criteria=QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not() @TO@ criteria=QPerson.person.lastname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not() @AT@ 6539 @LENGTH@ 115
------UPD MethodInvocation@@QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not() @TO@ QPerson.person.lastname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not() @AT@ 6550 @LENGTH@ 104
---------UPD QualifiedName@@Name:QPerson.person.firstname @TO@ Name:QPerson.person.lastname @AT@ 6550 @LENGTH@ 24


UPD EnhancedForStatement@@for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader())) {  for (  ServiceNameProvider builder : provider.getBuilders(registry,name,LocalGroupBuilderProvider.LOCAL)) {    context.removeService(builder.getServiceName());  }} @TO@ for (IdentityGroupServiceConfiguratorProvider provider : ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader())) {  for (  ServiceNameProvider configurator : provider.getServiceConfigurators(registry,name,LocalGroupServiceConfiguratorProvider.LOCAL)) {    context.removeService(configurator.getServiceName());  }} @AT@ 3606 @LENGTH@ 355
---UPD SingleVariableDeclaration@@GroupAliasBuilderProvider provider @TO@ IdentityGroupServiceConfiguratorProvider provider @AT@ 3611 @LENGTH@ 34
------UPD SimpleType@@GroupAliasBuilderProvider @TO@ IdentityGroupServiceConfiguratorProvider @AT@ 3611 @LENGTH@ 25
---UPD MethodInvocation@@ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader()) @AT@ 3648 @LENGTH@ 101
------UPD SimpleName@@MethodName:load:[GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[IdentityGroupServiceConfiguratorProvider.class, IdentityGroupServiceConfiguratorProvider.class.getClassLoader()] @AT@ 3662 @LENGTH@ 87
---------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 3667 @LENGTH@ 31
---------UPD MethodInvocation@@GroupAliasBuilderProvider.class.getClassLoader() @TO@ IdentityGroupServiceConfiguratorProvider.class.getClassLoader() @AT@ 3700 @LENGTH@ 48
------------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 3700 @LENGTH@ 31
---UPD EnhancedForStatement@@for (ServiceNameProvider builder : provider.getBuilders(registry,name,LocalGroupBuilderProvider.LOCAL)) {  context.removeService(builder.getServiceName());} @TO@ for (ServiceNameProvider configurator : provider.getServiceConfigurators(registry,name,LocalGroupServiceConfiguratorProvider.LOCAL)) {  context.removeService(configurator.getServiceName());} @AT@ 3765 @LENGTH@ 186
------UPD SingleVariableDeclaration@@ServiceNameProvider builder @TO@ ServiceNameProvider configurator @AT@ 3770 @LENGTH@ 27
---------UPD SimpleName@@builder @TO@ configurator @AT@ 3790 @LENGTH@ 7
------UPD MethodInvocation@@provider.getBuilders(registry,name,LocalGroupBuilderProvider.LOCAL) @TO@ provider.getServiceConfigurators(registry,name,LocalGroupServiceConfiguratorProvider.LOCAL) @AT@ 3800 @LENGTH@ 69
---------UPD SimpleName@@MethodName:getBuilders:[registry, name, LocalGroupBuilderProvider.LOCAL] @TO@ MethodName:getServiceConfigurators:[registry, name, LocalGroupServiceConfiguratorProvider.LOCAL] @AT@ 3809 @LENGTH@ 60
------------UPD QualifiedName@@LocalGroupBuilderProvider.LOCAL @TO@ LocalGroupServiceConfiguratorProvider.LOCAL @AT@ 3837 @LENGTH@ 31
---------------UPD SimpleName@@LocalGroupBuilderProvider @TO@ LocalGroupServiceConfiguratorProvider @AT@ 3837 @LENGTH@ 25
------UPD ExpressionStatement@@MethodInvocation:context.removeService(builder.getServiceName()) @TO@ MethodInvocation:context.removeService(configurator.getServiceName()) @AT@ 3889 @LENGTH@ 48
---------UPD MethodInvocation@@context.removeService(builder.getServiceName()) @TO@ context.removeService(configurator.getServiceName()) @AT@ 3889 @LENGTH@ 47
------------UPD SimpleName@@MethodName:removeService:[builder.getServiceName()] @TO@ MethodName:removeService:[configurator.getServiceName()] @AT@ 3897 @LENGTH@ 39
---------------UPD MethodInvocation@@builder.getServiceName() @TO@ configurator.getServiceName() @AT@ 3911 @LENGTH@ 24
------------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 3911 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:setTrustedPackages, String... trustedPackages,  @TO@ public, void, MethodName:setTrustedPackages, @Nullable String... trustedPackages,  @AT@ 3134 @LENGTH@ 310
---UPD SingleVariableDeclaration@@String... trustedPackages @TO@ @Nullable String... trustedPackages @AT@ 3165 @LENGTH@ 25


UPD VariableDeclarationStatement@@OAuth2RefreshToken refreshToken=new OAuth2RefreshToken("refresh-token",this.accessToken.getIssuedAt(),this.accessToken.getExpiresAt()); @TO@ OAuth2RefreshToken refreshToken=new OAuth2RefreshToken("refresh-token",this.accessToken.getIssuedAt()); @AT@ 14201 @LENGTH@ 139
---UPD VariableDeclarationFragment@@refreshToken=new OAuth2RefreshToken("refresh-token",this.accessToken.getIssuedAt(),this.accessToken.getExpiresAt()) @TO@ refreshToken=new OAuth2RefreshToken("refresh-token",this.accessToken.getIssuedAt()) @AT@ 14220 @LENGTH@ 119
------UPD ClassInstanceCreation@@OAuth2RefreshToken["refresh-token", this.accessToken.getIssuedAt(), this.accessToken.getExpiresAt()] @TO@ OAuth2RefreshToken["refresh-token", this.accessToken.getIssuedAt()] @AT@ 14235 @LENGTH@ 104
---------DEL MethodInvocation@@this.accessToken.getExpiresAt() @AT@ 14307 @LENGTH@ 31
------------DEL FieldAccess@@this.accessToken @AT@ 14307 @LENGTH@ 16
---------------DEL ThisExpression@@this @AT@ 14307 @LENGTH@ 4
---------------DEL SimpleName@@accessToken @AT@ 14312 @LENGTH@ 11
------------DEL SimpleName@@MethodName:getExpiresAt:[] @AT@ 14324 @LENGTH@ 14


UPD FieldDeclaration@@static, final, SimpleAttributeDefinition, [CLIENT_MAPPINGS_CLUSTER_NAME=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CLIENT_MAPPINGS_CLUSTER_NAME,ModelType.STRING,true).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)).build()] @TO@ static, final, SimpleAttributeDefinition, [CLIENT_MAPPINGS_CLUSTER_NAME=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CLIENT_MAPPINGS_CLUSTER_NAME,ModelType.STRING,true).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)).build()] @AT@ 2445 @LENGTH@ 455
---UPD VariableDeclarationFragment@@CLIENT_MAPPINGS_CLUSTER_NAME=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CLIENT_MAPPINGS_CLUSTER_NAME,ModelType.STRING,true).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)).build() @TO@ CLIENT_MAPPINGS_CLUSTER_NAME=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CLIENT_MAPPINGS_CLUSTER_NAME,ModelType.STRING,true).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)).build() @AT@ 2484 @LENGTH@ 415
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CLIENT_MAPPINGS_CLUSTER_NAME,ModelType.STRING,true).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)).build() @TO@ new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CLIENT_MAPPINGS_CLUSTER_NAME,ModelType.STRING,true).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)).build() @AT@ 2527 @LENGTH@ 372
---------UPD MethodInvocation@@MethodName:setDefaultValue:[new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)] @TO@ MethodName:setDefaultValue:[new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)] @AT@ 2527 @LENGTH@ 343
------------UPD ClassInstanceCreation@@ModelNode[BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME] @TO@ ModelNode[BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME] @AT@ 2793 @LENGTH@ 76
---------------UPD QualifiedName@@BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME @TO@ BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME @AT@ 2807 @LENGTH@ 61
------------------UPD SimpleName@@BeanManagerFactoryBuilderConfiguration @TO@ BeanManagerFactoryServiceConfiguratorConfiguration @AT@ 2807 @LENGTH@ 38


DEL ExpressionStatement@@MethodInvocation:converter.setJavaTypeMapper(null) @AT@ 3969 @LENGTH@ 34
---DEL MethodInvocation@@converter.setJavaTypeMapper(null) @AT@ 3969 @LENGTH@ 33
------DEL SimpleName@@Name:converter @AT@ 3969 @LENGTH@ 9
------DEL SimpleName@@MethodName:setJavaTypeMapper:[null] @AT@ 3979 @LENGTH@ 23
---------DEL NullLiteral@@null @AT@ 3997 @LENGTH@ 4


UPD VariableDeclarationStatement@@Set<Class<?>> classes=new HashSet<Class<?>>(); @TO@ Set<Class<?>> classes=new HashSet<>(); @AT@ 1434 @LENGTH@ 48
---UPD VariableDeclarationFragment@@classes=new HashSet<Class<?>>() @TO@ classes=new HashSet<>() @AT@ 1448 @LENGTH@ 33
------UPD ClassInstanceCreation@@HashSet<Class<?>>[] @TO@ HashSet<>[] @AT@ 1458 @LENGTH@ 23
---------UPD ParameterizedType@@HashSet<Class<?>> @TO@ HashSet<> @AT@ 1462 @LENGTH@ 17
------------DEL ParameterizedType@@Class<?> @AT@ 1470 @LENGTH@ 8
---------------DEL SimpleType@@Class @AT@ 1470 @LENGTH@ 5
---------------DEL WildcardType@@? @AT@ 1476 @LENGTH@ 1


UPD VariableDeclarationStatement@@String redirectUri=request.getRequestURL().toString(); @TO@ String redirectUri=UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replaceQuery(null).build().toUriString(); @AT@ 9132 @LENGTH@ 56
---UPD VariableDeclarationFragment@@redirectUri=request.getRequestURL().toString() @TO@ redirectUri=UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replaceQuery(null).build().toUriString() @AT@ 9139 @LENGTH@ 48
------UPD MethodInvocation@@request.getRequestURL().toString() @TO@ UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replaceQuery(null).build().toUriString() @AT@ 9153 @LENGTH@ 34
---------UPD MethodInvocation@@MethodName:getRequestURL:[] @TO@ MethodName:build:[] @AT@ 9153 @LENGTH@ 23
---------DEL SimpleName@@Name:request @AT@ 9153 @LENGTH@ 7
---------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:toUriString:[] @AT@ 9177 @LENGTH@ 10
---------INS MethodInvocation@@MethodName:replaceQuery:[null] @TO@ MethodInvocation@@request.getRequestURL().toString() @AT@ 9266 @LENGTH@ 95
------------INS NullLiteral@@null @TO@ MethodInvocation@@MethodName:replaceQuery:[null] @AT@ 9356 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:fromHttpUrl:[UrlUtils.buildFullRequestUrl(request)] @TO@ MethodInvocation@@request.getRequestURL().toString() @AT@ 9266 @LENGTH@ 71
------------INS MethodInvocation@@UrlUtils.buildFullRequestUrl(request) @TO@ MethodInvocation@@MethodName:fromHttpUrl:[UrlUtils.buildFullRequestUrl(request)] @AT@ 9299 @LENGTH@ 37
---------------INS SimpleName@@Name:UrlUtils @TO@ MethodInvocation@@UrlUtils.buildFullRequestUrl(request) @AT@ 9299 @LENGTH@ 8
---------------INS SimpleName@@MethodName:buildFullRequestUrl:[request] @TO@ MethodInvocation@@UrlUtils.buildFullRequestUrl(request) @AT@ 9308 @LENGTH@ 28
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:buildFullRequestUrl:[request] @AT@ 9328 @LENGTH@ 7
---------INS SimpleName@@Name:UriComponentsBuilder @TO@ MethodInvocation@@request.getRequestURL().toString() @AT@ 9266 @LENGTH@ 20


UPD FieldDeclaration@@private, static, final, Pattern, [SYNTAX_PATTERN=Pattern.compile("(\\w+)")] @TO@ private, static, final, Pattern, [SYNTAX_PATTERN=Pattern.compile("([\\w.]+)")] @AT@ 3495 @LENGTH@ 72
---UPD VariableDeclarationFragment@@SYNTAX_PATTERN=Pattern.compile("(\\w+)") @TO@ SYNTAX_PATTERN=Pattern.compile("([\\w.]+)") @AT@ 3524 @LENGTH@ 42
------UPD MethodInvocation@@Pattern.compile("(\\w+)") @TO@ Pattern.compile("([\\w.]+)") @AT@ 3541 @LENGTH@ 25
---------UPD SimpleName@@MethodName:compile:["(\\w+)"] @TO@ MethodName:compile:["([\\w.]+)"] @AT@ 3549 @LENGTH@ 17
------------UPD StringLiteral@@"(\\w+)" @TO@ "([\\w.]+)" @AT@ 3557 @LENGTH@ 8


UPD TypeDeclaration@@[public]StepExecutionInterceptor, ChannelInterceptorAdapter @TO@ [public]StepExecutionInterceptor, [ChannelInterceptor] @AT@ 1558 @LENGTH@ 485
---UPD SimpleType@@ChannelInterceptorAdapter @TO@ ChannelInterceptor @AT@ 1604 @LENGTH@ 25


UPD ExpressionStatement@@Assignment:exclude=processor.getExcludePattern().toString() @TO@ Assignment:exclude=Arrays.toString(processor.getExcludePattern()) @AT@ 1659 @LENGTH@ 51
---UPD Assignment@@exclude=processor.getExcludePattern().toString() @TO@ exclude=Arrays.toString(processor.getExcludePattern()) @AT@ 1659 @LENGTH@ 50
------DEL MethodInvocation@@processor.getExcludePattern().toString() @AT@ 1669 @LENGTH@ 40
---------DEL MethodInvocation@@MethodName:getExcludePattern:[] @AT@ 1669 @LENGTH@ 29
------INS MethodInvocation@@Arrays.toString(processor.getExcludePattern()) @TO@ Assignment@@exclude=processor.getExcludePattern().toString() @AT@ 1695 @LENGTH@ 46
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(processor.getExcludePattern()) @AT@ 1695 @LENGTH@ 6
---------INS SimpleName@@MethodName:toString:[processor.getExcludePattern()] @TO@ MethodInvocation@@Arrays.toString(processor.getExcludePattern()) @AT@ 1702 @LENGTH@ 39
------------INS MethodInvocation@@processor.getExcludePattern() @TO@ SimpleName@@MethodName:toString:[processor.getExcludePattern()] @AT@ 1711 @LENGTH@ 29
---------------MOV SimpleName@@Name:processor @TO@ MethodInvocation@@processor.getExcludePattern() @AT@ 1669 @LENGTH@ 9
---------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@processor.getExcludePattern() @AT@ 1699 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:shouldParseFieldsProjectionWithSliceCorrectly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]StringBasedMongoQueryUnitTests,  @AT@ 27397 @LENGTH@ 508
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldParseFieldsProjectionWithSliceCorrectly,  @AT@ 27397 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldParseFieldsProjectionWithSliceCorrectly,  @AT@ 27404 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldParseFieldsProjectionWithSliceCorrectly @TO@ MethodDeclaration@@public, void, MethodName:shouldParseFieldsProjectionWithSliceCorrectly,  @AT@ 27409 @LENGTH@ 45
---INS VariableDeclarationStatement@@StringBasedMongoQuery mongoQuery=createQueryForMethod("findWithSliceInProjection",String.class,int.class,int.class); @TO@ MethodDeclaration@@public, void, MethodName:shouldParseFieldsProjectionWithSliceCorrectly,  @AT@ 27462 @LENGTH@ 125
------INS SimpleType@@StringBasedMongoQuery @TO@ VariableDeclarationStatement@@StringBasedMongoQuery mongoQuery=createQueryForMethod("findWithSliceInProjection",String.class,int.class,int.class); @AT@ 27462 @LENGTH@ 21
------INS VariableDeclarationFragment@@mongoQuery=createQueryForMethod("findWithSliceInProjection",String.class,int.class,int.class) @TO@ VariableDeclarationStatement@@StringBasedMongoQuery mongoQuery=createQueryForMethod("findWithSliceInProjection",String.class,int.class,int.class); @AT@ 27484 @LENGTH@ 102
---------INS SimpleName@@mongoQuery @TO@ VariableDeclarationFragment@@mongoQuery=createQueryForMethod("findWithSliceInProjection",String.class,int.class,int.class) @AT@ 27484 @LENGTH@ 10
---------INS MethodInvocation@@createQueryForMethod("findWithSliceInProjection",String.class,int.class,int.class) @TO@ VariableDeclarationFragment@@mongoQuery=createQueryForMethod("findWithSliceInProjection",String.class,int.class,int.class) @AT@ 27497 @LENGTH@ 89
------------INS SimpleName@@MethodName:createQueryForMethod:["findWithSliceInProjection", String.class, int.class, int.class] @TO@ MethodInvocation@@createQueryForMethod("findWithSliceInProjection",String.class,int.class,int.class) @AT@ 27497 @LENGTH@ 89
---------------INS StringLiteral@@"findWithSliceInProjection" @TO@ SimpleName@@MethodName:createQueryForMethod:["findWithSliceInProjection", String.class, int.class, int.class] @AT@ 27518 @LENGTH@ 27
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:createQueryForMethod:["findWithSliceInProjection", String.class, int.class, int.class] @AT@ 27547 @LENGTH@ 12
---------------INS TypeLiteral@@int.class @TO@ SimpleName@@MethodName:createQueryForMethod:["findWithSliceInProjection", String.class, int.class, int.class] @AT@ 27561 @LENGTH@ 9
---------------INS TypeLiteral@@int.class @TO@ SimpleName@@MethodName:createQueryForMethod:["findWithSliceInProjection", String.class, int.class, int.class] @AT@ 27576 @LENGTH@ 9
---INS VariableDeclarationStatement@@ConvertingParameterAccessor accessor=StubParameterAccessor.getAccessor(converter,"Bruce Banner",0,5); @TO@ MethodDeclaration@@public, void, MethodName:shouldParseFieldsProjectionWithSliceCorrectly,  @AT@ 27590 @LENGTH@ 106
------INS SimpleType@@ConvertingParameterAccessor @TO@ VariableDeclarationStatement@@ConvertingParameterAccessor accessor=StubParameterAccessor.getAccessor(converter,"Bruce Banner",0,5); @AT@ 27590 @LENGTH@ 27
------INS VariableDeclarationFragment@@accessor=StubParameterAccessor.getAccessor(converter,"Bruce Banner",0,5) @TO@ VariableDeclarationStatement@@ConvertingParameterAccessor accessor=StubParameterAccessor.getAccessor(converter,"Bruce Banner",0,5); @AT@ 27618 @LENGTH@ 77
---------INS SimpleName@@accessor @TO@ VariableDeclarationFragment@@accessor=StubParameterAccessor.getAccessor(converter,"Bruce Banner",0,5) @AT@ 27618 @LENGTH@ 8
---------INS MethodInvocation@@StubParameterAccessor.getAccessor(converter,"Bruce Banner",0,5) @TO@ VariableDeclarationFragment@@accessor=StubParameterAccessor.getAccessor(converter,"Bruce Banner",0,5) @AT@ 27629 @LENGTH@ 66
------------INS SimpleName@@Name:StubParameterAccessor @TO@ MethodInvocation@@StubParameterAccessor.getAccessor(converter,"Bruce Banner",0,5) @AT@ 27629 @LENGTH@ 21
------------INS SimpleName@@MethodName:getAccessor:[converter, "Bruce Banner", 0, 5] @TO@ MethodInvocation@@StubParameterAccessor.getAccessor(converter,"Bruce Banner",0,5) @AT@ 27651 @LENGTH@ 44
---------------INS SimpleName@@converter @TO@ SimpleName@@MethodName:getAccessor:[converter, "Bruce Banner", 0, 5] @AT@ 27663 @LENGTH@ 9
---------------INS StringLiteral@@"Bruce Banner" @TO@ SimpleName@@MethodName:getAccessor:[converter, "Bruce Banner", 0, 5] @AT@ 27674 @LENGTH@ 14
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:getAccessor:[converter, "Bruce Banner", 0, 5] @AT@ 27690 @LENGTH@ 1
---------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:getAccessor:[converter, "Bruce Banner", 0, 5] @AT@ 27693 @LENGTH@ 1
---INS VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=mongoQuery.createQuery(accessor); @TO@ MethodDeclaration@@public, void, MethodName:shouldParseFieldsProjectionWithSliceCorrectly,  @AT@ 27700 @LENGTH@ 91
------INS SimpleType@@org.springframework.data.mongodb.core.query.Query @TO@ VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=mongoQuery.createQuery(accessor); @AT@ 27700 @LENGTH@ 49
------INS VariableDeclarationFragment@@query=mongoQuery.createQuery(accessor) @TO@ VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=mongoQuery.createQuery(accessor); @AT@ 27750 @LENGTH@ 40
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=mongoQuery.createQuery(accessor) @AT@ 27750 @LENGTH@ 5
---------INS MethodInvocation@@mongoQuery.createQuery(accessor) @TO@ VariableDeclarationFragment@@query=mongoQuery.createQuery(accessor) @AT@ 27758 @LENGTH@ 32
------------INS SimpleName@@Name:mongoQuery @TO@ MethodInvocation@@mongoQuery.createQuery(accessor) @AT@ 27758 @LENGTH@ 10
------------INS SimpleName@@MethodName:createQuery:[accessor] @TO@ MethodInvocation@@mongoQuery.createQuery(accessor) @AT@ 27769 @LENGTH@ 21
---------------INS SimpleName@@accessor @TO@ SimpleName@@MethodName:createQuery:[accessor] @AT@ 27781 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(query.getFieldsObject(),is(equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")))) @TO@ MethodDeclaration@@public, void, MethodName:shouldParseFieldsProjectionWithSliceCorrectly,  @AT@ 27795 @LENGTH@ 107
------INS MethodInvocation@@assertThat(query.getFieldsObject(),is(equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.getFieldsObject(),is(equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")))) @AT@ 27795 @LENGTH@ 106
---------INS SimpleName@@MethodName:assertThat:[query.getFieldsObject(), is(equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")))] @TO@ MethodInvocation@@assertThat(query.getFieldsObject(),is(equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")))) @AT@ 27795 @LENGTH@ 106
------------INS MethodInvocation@@query.getFieldsObject() @TO@ SimpleName@@MethodName:assertThat:[query.getFieldsObject(), is(equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")))] @AT@ 27806 @LENGTH@ 23
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getFieldsObject() @AT@ 27806 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getFieldsObject:[] @TO@ MethodInvocation@@query.getFieldsObject() @AT@ 27812 @LENGTH@ 17
------------INS MethodInvocation@@is(equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }"))) @TO@ SimpleName@@MethodName:assertThat:[query.getFieldsObject(), is(equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")))] @AT@ 27831 @LENGTH@ 69
---------------INS SimpleName@@MethodName:is:[equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }"))] @TO@ MethodInvocation@@is(equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }"))) @AT@ 27831 @LENGTH@ 69
------------------INS MethodInvocation@@equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")) @TO@ SimpleName@@MethodName:is:[equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }"))] @AT@ 27834 @LENGTH@ 65
---------------------INS SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @TO@ MethodInvocation@@equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")) @AT@ 27834 @LENGTH@ 65
------------------------INS MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @TO@ SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @AT@ 27842 @LENGTH@ 56
---------------------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27842 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27851 @LENGTH@ 47
------------------------------INS StringLiteral@@"{ \"fans\" : { \"$slice\" : [0, 5] } }" @TO@ SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @AT@ 27857 @LENGTH@ 40
---------------------INS SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @TO@ MethodInvocation@@equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")) @AT@ 27834 @LENGTH@ 65
------------------------INS MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @TO@ SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @AT@ 27842 @LENGTH@ 56
---------------------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27842 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27851 @LENGTH@ 47
------------------------------INS StringLiteral@@"{ \"fans\" : { \"$slice\" : [0, 5] } }" @TO@ SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @AT@ 27857 @LENGTH@ 40
---------------------INS SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @TO@ MethodInvocation@@equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")) @AT@ 27834 @LENGTH@ 65
------------------------INS MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @TO@ SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @AT@ 27842 @LENGTH@ 56
---------------------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27842 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27851 @LENGTH@ 47
------------------------------INS StringLiteral@@"{ \"fans\" : { \"$slice\" : [0, 5] } }" @TO@ SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @AT@ 27857 @LENGTH@ 40
---------------------INS SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @TO@ MethodInvocation@@equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")) @AT@ 27834 @LENGTH@ 65
------------------------INS MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @TO@ SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @AT@ 27842 @LENGTH@ 56
---------------------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27842 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27851 @LENGTH@ 47
------------------------------INS StringLiteral@@"{ \"fans\" : { \"$slice\" : [0, 5] } }" @TO@ SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @AT@ 27857 @LENGTH@ 40
---------------------INS SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @TO@ MethodInvocation@@equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")) @AT@ 27834 @LENGTH@ 65
------------------------INS MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @TO@ SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @AT@ 27842 @LENGTH@ 56
---------------------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27842 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27851 @LENGTH@ 47
------------------------------INS StringLiteral@@"{ \"fans\" : { \"$slice\" : [0, 5] } }" @TO@ SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @AT@ 27857 @LENGTH@ 40
---------------INS SimpleName@@MethodName:is:[equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }"))] @TO@ MethodInvocation@@is(equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }"))) @AT@ 27831 @LENGTH@ 69
------------------INS MethodInvocation@@equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")) @TO@ SimpleName@@MethodName:is:[equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }"))] @AT@ 27834 @LENGTH@ 65
---------------------INS SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @TO@ MethodInvocation@@equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")) @AT@ 27834 @LENGTH@ 65
------------------------INS MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @TO@ SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @AT@ 27842 @LENGTH@ 56
---------------------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27842 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27851 @LENGTH@ 47
------------------------------INS StringLiteral@@"{ \"fans\" : { \"$slice\" : [0, 5] } }" @TO@ SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @AT@ 27857 @LENGTH@ 40
---------------------INS SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @TO@ MethodInvocation@@equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")) @AT@ 27834 @LENGTH@ 65
------------------------INS MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @TO@ SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @AT@ 27842 @LENGTH@ 56
---------------------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27842 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27851 @LENGTH@ 47
------------------------------INS StringLiteral@@"{ \"fans\" : { \"$slice\" : [0, 5] } }" @TO@ SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @AT@ 27857 @LENGTH@ 40
---------------------INS SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @TO@ MethodInvocation@@equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")) @AT@ 27834 @LENGTH@ 65
------------------------INS MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @TO@ SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @AT@ 27842 @LENGTH@ 56
---------------------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27842 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27851 @LENGTH@ 47
------------------------------INS StringLiteral@@"{ \"fans\" : { \"$slice\" : [0, 5] } }" @TO@ SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @AT@ 27857 @LENGTH@ 40
---------------------INS SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @TO@ MethodInvocation@@equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")) @AT@ 27834 @LENGTH@ 65
------------------------INS MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @TO@ SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @AT@ 27842 @LENGTH@ 56
---------------------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27842 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27851 @LENGTH@ 47
------------------------------INS StringLiteral@@"{ \"fans\" : { \"$slice\" : [0, 5] } }" @TO@ SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @AT@ 27857 @LENGTH@ 40
---------------------INS SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @TO@ MethodInvocation@@equalTo(Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")) @AT@ 27834 @LENGTH@ 65
------------------------INS MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @TO@ SimpleName@@MethodName:equalTo:[Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }")] @AT@ 27842 @LENGTH@ 56
---------------------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27842 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @TO@ MethodInvocation@@Document.parse("{ \"fans\" : { \"$slice\" : [0, 5] } }") @AT@ 27851 @LENGTH@ 47
------------------------------INS StringLiteral@@"{ \"fans\" : { \"$slice\" : [0, 5] } }" @TO@ SimpleName@@MethodName:parse:["{ \"fans\" : { \"$slice\" : [0, 5] } }"] @AT@ 27857 @LENGTH@ 40


DEL MethodDeclaration@@public, DomainObjectMerger, MethodName:domainObjectMerger, Exception,  @AT@ 16534 @LENGTH@ 145
---DEL Modifier@@public @AT@ 16534 @LENGTH@ 6
---DEL SimpleType@@DomainObjectMerger @AT@ 16541 @LENGTH@ 18
---DEL SimpleName@@MethodName:domainObjectMerger @AT@ 16560 @LENGTH@ 18
---DEL SimpleType@@Exception @AT@ 16588 @LENGTH@ 9
---DEL ReturnStatement@@ClassInstanceCreation:new DomainObjectMerger(repositories(),defaultConversionService()) @AT@ 16602 @LENGTH@ 74
------DEL ClassInstanceCreation@@DomainObjectMerger[repositories(), defaultConversionService()] @AT@ 16609 @LENGTH@ 66
---------DEL New@@new @AT@ 16609 @LENGTH@ 3
---------DEL SimpleType@@DomainObjectMerger @AT@ 16613 @LENGTH@ 18
---------DEL MethodInvocation@@MethodName:repositories:[] @AT@ 16632 @LENGTH@ 14
---------DEL MethodInvocation@@MethodName:defaultConversionService:[] @AT@ 16648 @LENGTH@ 26


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3353 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3373 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 3383 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3383 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3425 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 3432 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3432 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3442 @LENGTH@ 1


UPD MethodDeclaration@@public, static, String, MethodName:getBoundaryParameterValue, HttpMessage message, String headerName,  @TO@ public, static, String, MethodName:getParameterValue, HttpMessage message, String headerName, String parameterName,  @AT@ 4056 @LENGTH@ 648
---UPD SimpleName@@MethodName:getBoundaryParameterValue @TO@ MethodName:getParameterValue @AT@ 4077 @LENGTH@ 25
---INS SingleVariableDeclaration@@String parameterName @TO@ MethodDeclaration@@public, static, String, MethodName:getBoundaryParameterValue, HttpMessage message, String headerName,  @AT@ 4135 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String parameterName @AT@ 4135 @LENGTH@ 6
------INS SimpleName@@parameterName @TO@ SingleVariableDeclaration@@String parameterName @AT@ 4142 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:Args.notNull(parameterName,"parameterName") @TO@ MethodDeclaration@@public, static, String, MethodName:getBoundaryParameterValue, HttpMessage message, String headerName,  @AT@ 4257 @LENGTH@ 45
------INS MethodInvocation@@Args.notNull(parameterName,"parameterName") @TO@ ExpressionStatement@@MethodInvocation:Args.notNull(parameterName,"parameterName") @AT@ 4257 @LENGTH@ 44
---------INS SimpleName@@Name:Args @TO@ MethodInvocation@@Args.notNull(parameterName,"parameterName") @AT@ 4257 @LENGTH@ 4
---------INS SimpleName@@MethodName:notNull:[parameterName, "parameterName"] @TO@ MethodInvocation@@Args.notNull(parameterName,"parameterName") @AT@ 4262 @LENGTH@ 39
------------INS SimpleName@@parameterName @TO@ SimpleName@@MethodName:notNull:[parameterName, "parameterName"] @AT@ 4270 @LENGTH@ 13
------------INS StringLiteral@@"parameterName" @TO@ SimpleName@@MethodName:notNull:[parameterName, "parameterName"] @AT@ 4285 @LENGTH@ 15
---UPD EnhancedForStatement@@for (HeaderElement headerElement : header.getElements()) {  for (  NameValuePair nameValuePair : headerElement.getParameters()) {    if (nameValuePair.getName().equalsIgnoreCase("boundary")) {      return nameValuePair.getValue();    }  }} @TO@ for (HeaderElement headerElement : header.getElements()) {  for (  NameValuePair nameValuePair : headerElement.getParameters()) {    if (nameValuePair.getName().equalsIgnoreCase(parameterName)) {      return nameValuePair.getValue();    }  }} @AT@ 4368 @LENGTH@ 309
------UPD EnhancedForStatement@@for (NameValuePair nameValuePair : headerElement.getParameters()) {  if (nameValuePair.getName().equalsIgnoreCase("boundary")) {    return nameValuePair.getValue();  }} @TO@ for (NameValuePair nameValuePair : headerElement.getParameters()) {  if (nameValuePair.getName().equalsIgnoreCase(parameterName)) {    return nameValuePair.getValue();  }} @AT@ 4439 @LENGTH@ 228
---------UPD IfStatement@@if (nameValuePair.getName().equalsIgnoreCase("boundary")) {  return nameValuePair.getValue();} @TO@ if (nameValuePair.getName().equalsIgnoreCase(parameterName)) {  return nameValuePair.getValue();} @AT@ 4523 @LENGTH@ 130
------------UPD MethodInvocation@@nameValuePair.getName().equalsIgnoreCase("boundary") @TO@ nameValuePair.getName().equalsIgnoreCase(parameterName) @AT@ 4527 @LENGTH@ 52
---------------UPD SimpleName@@MethodName:equalsIgnoreCase:["boundary"] @TO@ MethodName:equalsIgnoreCase:[parameterName] @AT@ 4551 @LENGTH@ 28
------------------DEL StringLiteral@@"boundary" @AT@ 4568 @LENGTH@ 10
------------------INS SimpleName@@parameterName @TO@ SimpleName@@MethodName:equalsIgnoreCase:["boundary"] @AT@ 4636 @LENGTH@ 13


UPD TypeDeclaration@@[public]NimbusAuthorizationCodeTokenResponseClient, [OAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>] @TO@ [@Deprecated, public]NimbusAuthorizationCodeTokenResponseClient, [OAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>] @AT@ 3037 @LENGTH@ 4803
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]NimbusAuthorizationCodeTokenResponseClient, [OAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>] @AT@ 3108 @LENGTH@ 11


UPD TryStatement@@try {  InMemoryDirectoryServerConfig config=new InMemoryDirectoryServerConfig(this.defaultPartitionSuffix);  config.addAdditionalBindCredentials("uid=admin,ou=system","secret");  config.setListenerConfigs(InMemoryListenerConfig.createLDAPConfig("LDAP",this.port));  config.setEnforceSingleStructuralObjectClass(false);  config.setEnforceAttributeSyntaxCompliance(true);  DN dn=new DN(this.defaultPartitionSuffix);  Entry entry=new Entry(dn);  entry.addAttribute("objectClass","top","domain","extensibleObject");  entry.addAttribute("dc",dn.getRDN().getAttributeValues()[0]);  InMemoryDirectoryServer directoryServer=new InMemoryDirectoryServer(config);  directoryServer.add(entry);  importLdif(directoryServer);  directoryServer.startListening();  this.directoryServer=directoryServer;  this.running=true;} catch (LDAPException ex) {  throw new RuntimeException("Server startup failed",ex);} @TO@ try {  InMemoryDirectoryServerConfig config=new InMemoryDirectoryServerConfig(this.defaultPartitionSuffix);  config.addAdditionalBindCredentials("uid=admin,ou=system","secret");  config.setListenerConfigs(InMemoryListenerConfig.createLDAPConfig("LDAP",this.port));  config.setEnforceSingleStructuralObjectClass(false);  config.setEnforceAttributeSyntaxCompliance(true);  DN dn=new DN(this.defaultPartitionSuffix);  Entry entry=new Entry(dn);  entry.addAttribute("objectClass","top","domain","extensibleObject");  entry.addAttribute("dc",dn.getRDN().getAttributeValues()[0]);  InMemoryDirectoryServer directoryServer=new InMemoryDirectoryServer(config);  directoryServer.add(entry);  importLdif(directoryServer);  directoryServer.startListening();  this.port=directoryServer.getListenPort();  this.directoryServer=directoryServer;  this.running=true;} catch (LDAPException ex) {  throw new RuntimeException("Server startup failed",ex);} @AT@ 2443 @LENGTH@ 951
---INS ExpressionStatement@@Assignment:this.port=directoryServer.getListenPort() @TO@ TryStatement@@try {  InMemoryDirectoryServerConfig config=new InMemoryDirectoryServerConfig(this.defaultPartitionSuffix);  config.addAdditionalBindCredentials("uid=admin,ou=system","secret");  config.setListenerConfigs(InMemoryListenerConfig.createLDAPConfig("LDAP",this.port));  config.setEnforceSingleStructuralObjectClass(false);  config.setEnforceAttributeSyntaxCompliance(true);  DN dn=new DN(this.defaultPartitionSuffix);  Entry entry=new Entry(dn);  entry.addAttribute("objectClass","top","domain","extensibleObject");  entry.addAttribute("dc",dn.getRDN().getAttributeValues()[0]);  InMemoryDirectoryServer directoryServer=new InMemoryDirectoryServer(config);  directoryServer.add(entry);  importLdif(directoryServer);  directoryServer.startListening();  this.directoryServer=directoryServer;  this.running=true;} catch (LDAPException ex) {  throw new RuntimeException("Server startup failed",ex);} @AT@ 3236 @LENGTH@ 44
------INS Assignment@@this.port=directoryServer.getListenPort() @TO@ ExpressionStatement@@Assignment:this.port=directoryServer.getListenPort() @AT@ 3236 @LENGTH@ 43
---------INS FieldAccess@@this.port @TO@ Assignment@@this.port=directoryServer.getListenPort() @AT@ 3236 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.port @AT@ 3236 @LENGTH@ 4
------------INS SimpleName@@port @TO@ FieldAccess@@this.port @AT@ 3241 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@this.port=directoryServer.getListenPort() @AT@ 3245 @LENGTH@ 1
---------INS MethodInvocation@@directoryServer.getListenPort() @TO@ Assignment@@this.port=directoryServer.getListenPort() @AT@ 3248 @LENGTH@ 31
------------INS SimpleName@@Name:directoryServer @TO@ MethodInvocation@@directoryServer.getListenPort() @AT@ 3248 @LENGTH@ 15
------------INS SimpleName@@MethodName:getListenPort:[] @TO@ MethodInvocation@@directoryServer.getListenPort() @AT@ 3264 @LENGTH@ 15


UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> tasks=sem.getAllRootTasks(); @TO@ List<Task<?>> tasks=sem.getAllRootTasks(); @AT@ 7065 @LENGTH@ 65
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 7065 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 7070 @LENGTH@ 28


UPD MethodDeclaration@@public, voidMethodName:DeclarationExceptionEvent, Object source, Declarable declarable, Throwable t,  @TO@ public, voidMethodName:DeclarationExceptionEvent, Object source, @Nullable Declarable declarable, Throwable t,  @AT@ 1048 @LENGTH@ 159
---UPD SingleVariableDeclaration@@Declarable declarable @TO@ @Nullable Declarable declarable @AT@ 1096 @LENGTH@ 21


UPD VariableDeclarationStatement@@TargetTypes targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new); @TO@ TargetTypes targetTypes=customReadTargetTypes.get(sourceType); @AT@ 14656 @LENGTH@ 94
---UPD VariableDeclarationFragment@@targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new) @TO@ targetTypes=customReadTargetTypes.get(sourceType) @AT@ 14668 @LENGTH@ 81
------INS MethodInvocation@@customReadTargetTypes.get(sourceType) @TO@ VariableDeclarationFragment@@targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new) @AT@ 14682 @LENGTH@ 37
---------INS SimpleName@@Name:customReadTargetTypes @TO@ MethodInvocation@@customReadTargetTypes.get(sourceType) @AT@ 14682 @LENGTH@ 21
---------INS SimpleName@@MethodName:get:[sourceType] @TO@ MethodInvocation@@customReadTargetTypes.get(sourceType) @AT@ 14704 @LENGTH@ 15
------------INS SimpleName@@sourceType @TO@ SimpleName@@MethodName:get:[sourceType] @AT@ 14708 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:assertEquals(new BigInteger("14350442579497085228"),ObjectConverter.toBigInteger("14350442579497085228")) @TO@ MethodDeclaration@@public, void, MethodName:testToBigInteger,  @AT@ 6406 @LENGTH@ 107
---INS MethodInvocation@@assertEquals(new BigInteger("14350442579497085228"),ObjectConverter.toBigInteger("14350442579497085228")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(new BigInteger("14350442579497085228"),ObjectConverter.toBigInteger("14350442579497085228")) @AT@ 6406 @LENGTH@ 106
------INS SimpleName@@MethodName:assertEquals:[new BigInteger("14350442579497085228"), ObjectConverter.toBigInteger("14350442579497085228")] @TO@ MethodInvocation@@assertEquals(new BigInteger("14350442579497085228"),ObjectConverter.toBigInteger("14350442579497085228")) @AT@ 6406 @LENGTH@ 106
---------INS ClassInstanceCreation@@BigInteger["14350442579497085228"] @TO@ SimpleName@@MethodName:assertEquals:[new BigInteger("14350442579497085228"), ObjectConverter.toBigInteger("14350442579497085228")] @AT@ 6419 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@BigInteger["14350442579497085228"] @AT@ 6419 @LENGTH@ 3
------------INS SimpleType@@BigInteger @TO@ ClassInstanceCreation@@BigInteger["14350442579497085228"] @AT@ 6423 @LENGTH@ 10
------------INS StringLiteral@@"14350442579497085228" @TO@ ClassInstanceCreation@@BigInteger["14350442579497085228"] @AT@ 6434 @LENGTH@ 22
---------INS MethodInvocation@@ObjectConverter.toBigInteger("14350442579497085228") @TO@ SimpleName@@MethodName:assertEquals:[new BigInteger("14350442579497085228"), ObjectConverter.toBigInteger("14350442579497085228")] @AT@ 6459 @LENGTH@ 52
------------INS SimpleName@@Name:ObjectConverter @TO@ MethodInvocation@@ObjectConverter.toBigInteger("14350442579497085228") @AT@ 6459 @LENGTH@ 15
------------INS SimpleName@@MethodName:toBigInteger:["14350442579497085228"] @TO@ MethodInvocation@@ObjectConverter.toBigInteger("14350442579497085228") @AT@ 6475 @LENGTH@ 36
---------------INS StringLiteral@@"14350442579497085228" @TO@ SimpleName@@MethodName:toBigInteger:["14350442579497085228"] @AT@ 6488 @LENGTH@ 22


UPD FieldDeclaration@@String, [test_vectors[][]={{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}}] @TO@ String, [test_vectors[][]={{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"","$2b$06$8eVN9RiU8Yki430X.wBvN.","$2b$06$8eVN9RiU8Yki430X.wBvN.LWaqh2962emLVSVXVZIXJvDYLsV0oFu"},{"","$2b$06$NlgfNgpIc6GlHciCkMEW8u","$2b$06$NlgfNgpIc6GlHciCkMEW8uKOBsyvAp7QwlHpysOlKdtyEw50WQua2"},{"","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO3OFWzNEdcY84ELw6iHCPruuQfSAXBLK"},{"","$2y$06$88kSqVttBx.e9iXTPCLa5u","$2y$06$88kSqVttBx.e9iXTPCLa5uFPrVFjfLH4D.KcO6pBiAmvUkvdg0EYy"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"a","$2b$06$ehKGYiS4wt2HAr7KQXS5z.","$2b$06$ehKGYiS4wt2HAr7KQXS5z.OaRjB4jHO7rBHJKlGXbqEH3QVJfO7iO"},{"a","$2b$06$PWxFFHA3HiCD46TNOZh30e","$2b$06$PWxFFHA3HiCD46TNOZh30eNto1hg5uM9tHBlI4q/b03SW/gGKUYk6"},{"a","$2y$06$LUdD6/aD0e/UbnxVAVbvGu","$2y$06$LUdD6/aD0e/UbnxVAVbvGuUmIoJ3l/OK94ThhadpMWwKC34LrGEey"},{"a","$2y$06$eqgY.T2yloESMZxgp76deO","$2y$06$eqgY.T2yloESMZxgp76deOROa7nzXDxbO0k.PJvuClTa.Vu1AuemG"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abc","$2b$06$5FyQoicpbox1xSHFfhhdXu","$2b$06$5FyQoicpbox1xSHFfhhdXuR2oxLpO1rYsQh5RTkI/9.RIjtoF0/ta"},{"abc","$2b$06$1kJyuho8MCVP3HHsjnRMkO","$2b$06$1kJyuho8MCVP3HHsjnRMkO1nvCOaKTqLnjG2TX1lyMFbXH/aOkgc."},{"abc","$2y$06$ACfku9dT6.H8VjdKb8nhlu","$2y$06$ACfku9dT6.H8VjdKb8nhluaoBmhJyK7GfoNScEfOfrJffUxoUeCjK"},{"abc","$2y$06$9JujYcoWPmifvFA3RUP90e","$2y$06$9JujYcoWPmifvFA3RUP90e5rSEHAb5Ye6iv3.G9ikiHNv5cxjNEse"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"abcdefghijklmnopqrstuvwxyz","$2b$06$O8E89AQPj1zJQA05YvIAU.","$2b$06$O8E89AQPj1zJQA05YvIAU.hMpj25BXri1bupl/Q7CJMlpLwZDNBoO"},{"abcdefghijklmnopqrstuvwxyz","$2b$06$PDqIWr./o/P3EE/P.Q0A/u","$2b$06$PDqIWr./o/P3EE/P.Q0A/uFg86WL/PXTbaW267TDALEwDylqk00Z."},{"abcdefghijklmnopqrstuvwxyz","$2y$06$34MG90ZLah8/ZNr3ltlHCu","$2y$06$34MG90ZLah8/ZNr3ltlHCuz6bachF8/3S5jTuzF1h2qg2cUk11sFW"},{"abcdefghijklmnopqrstuvwxyz","$2y$06$AK.hSLfMyw706iEW24i68u","$2y$06$AK.hSLfMyw706iEW24i68uKAc2yorPTrB0cimvjJHEBUrPkOq7VvG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$FGWA8OlY6RtQhXBXuCJ8Wu","$2b$06$FGWA8OlY6RtQhXBXuCJ8WusVipRI15cWOgJK8MYpBHEkktMfbHRIG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$G6aYU7UhUEUDJBdTgq3CRe","$2b$06$G6aYU7UhUEUDJBdTgq3CRekiopCN4O4sNitFXrf5NUscsVZj3a2r6"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$sYDFHqOcXTjBgOsqC0WCKe","$2y$06$sYDFHqOcXTjBgOsqC0WCKeMd3T1UhHuWQSxncLGtXDLMrcE6vFDti"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$6Xm0gCw4g7ZNDCEp4yTise","$2y$06$6Xm0gCw4g7ZNDCEp4yTisez0kSdpXEl66MvdxGidnmChIe8dFmMnq"}}] @AT@ 1190 @LENGTH@ 2545
---UPD VariableDeclarationFragment@@test_vectors[][]={{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @TO@ test_vectors[][]={{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"","$2b$06$8eVN9RiU8Yki430X.wBvN.","$2b$06$8eVN9RiU8Yki430X.wBvN.LWaqh2962emLVSVXVZIXJvDYLsV0oFu"},{"","$2b$06$NlgfNgpIc6GlHciCkMEW8u","$2b$06$NlgfNgpIc6GlHciCkMEW8uKOBsyvAp7QwlHpysOlKdtyEw50WQua2"},{"","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO3OFWzNEdcY84ELw6iHCPruuQfSAXBLK"},{"","$2y$06$88kSqVttBx.e9iXTPCLa5u","$2y$06$88kSqVttBx.e9iXTPCLa5uFPrVFjfLH4D.KcO6pBiAmvUkvdg0EYy"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"a","$2b$06$ehKGYiS4wt2HAr7KQXS5z.","$2b$06$ehKGYiS4wt2HAr7KQXS5z.OaRjB4jHO7rBHJKlGXbqEH3QVJfO7iO"},{"a","$2b$06$PWxFFHA3HiCD46TNOZh30e","$2b$06$PWxFFHA3HiCD46TNOZh30eNto1hg5uM9tHBlI4q/b03SW/gGKUYk6"},{"a","$2y$06$LUdD6/aD0e/UbnxVAVbvGu","$2y$06$LUdD6/aD0e/UbnxVAVbvGuUmIoJ3l/OK94ThhadpMWwKC34LrGEey"},{"a","$2y$06$eqgY.T2yloESMZxgp76deO","$2y$06$eqgY.T2yloESMZxgp76deOROa7nzXDxbO0k.PJvuClTa.Vu1AuemG"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abc","$2b$06$5FyQoicpbox1xSHFfhhdXu","$2b$06$5FyQoicpbox1xSHFfhhdXuR2oxLpO1rYsQh5RTkI/9.RIjtoF0/ta"},{"abc","$2b$06$1kJyuho8MCVP3HHsjnRMkO","$2b$06$1kJyuho8MCVP3HHsjnRMkO1nvCOaKTqLnjG2TX1lyMFbXH/aOkgc."},{"abc","$2y$06$ACfku9dT6.H8VjdKb8nhlu","$2y$06$ACfku9dT6.H8VjdKb8nhluaoBmhJyK7GfoNScEfOfrJffUxoUeCjK"},{"abc","$2y$06$9JujYcoWPmifvFA3RUP90e","$2y$06$9JujYcoWPmifvFA3RUP90e5rSEHAb5Ye6iv3.G9ikiHNv5cxjNEse"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"abcdefghijklmnopqrstuvwxyz","$2b$06$O8E89AQPj1zJQA05YvIAU.","$2b$06$O8E89AQPj1zJQA05YvIAU.hMpj25BXri1bupl/Q7CJMlpLwZDNBoO"},{"abcdefghijklmnopqrstuvwxyz","$2b$06$PDqIWr./o/P3EE/P.Q0A/u","$2b$06$PDqIWr./o/P3EE/P.Q0A/uFg86WL/PXTbaW267TDALEwDylqk00Z."},{"abcdefghijklmnopqrstuvwxyz","$2y$06$34MG90ZLah8/ZNr3ltlHCu","$2y$06$34MG90ZLah8/ZNr3ltlHCuz6bachF8/3S5jTuzF1h2qg2cUk11sFW"},{"abcdefghijklmnopqrstuvwxyz","$2y$06$AK.hSLfMyw706iEW24i68u","$2y$06$AK.hSLfMyw706iEW24i68uKAc2yorPTrB0cimvjJHEBUrPkOq7VvG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$FGWA8OlY6RtQhXBXuCJ8Wu","$2b$06$FGWA8OlY6RtQhXBXuCJ8WusVipRI15cWOgJK8MYpBHEkktMfbHRIG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$G6aYU7UhUEUDJBdTgq3CRe","$2b$06$G6aYU7UhUEUDJBdTgq3CRekiopCN4O4sNitFXrf5NUscsVZj3a2r6"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$sYDFHqOcXTjBgOsqC0WCKe","$2y$06$sYDFHqOcXTjBgOsqC0WCKeMd3T1UhHuWQSxncLGtXDLMrcE6vFDti"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$6Xm0gCw4g7ZNDCEp4yTise","$2y$06$6Xm0gCw4g7ZNDCEp4yTisez0kSdpXEl66MvdxGidnmChIe8dFmMnq"}} @AT@ 1197 @LENGTH@ 2537
------UPD ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @TO@ {{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"","$2b$06$8eVN9RiU8Yki430X.wBvN.","$2b$06$8eVN9RiU8Yki430X.wBvN.LWaqh2962emLVSVXVZIXJvDYLsV0oFu"},{"","$2b$06$NlgfNgpIc6GlHciCkMEW8u","$2b$06$NlgfNgpIc6GlHciCkMEW8uKOBsyvAp7QwlHpysOlKdtyEw50WQua2"},{"","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO3OFWzNEdcY84ELw6iHCPruuQfSAXBLK"},{"","$2y$06$88kSqVttBx.e9iXTPCLa5u","$2y$06$88kSqVttBx.e9iXTPCLa5uFPrVFjfLH4D.KcO6pBiAmvUkvdg0EYy"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"a","$2b$06$ehKGYiS4wt2HAr7KQXS5z.","$2b$06$ehKGYiS4wt2HAr7KQXS5z.OaRjB4jHO7rBHJKlGXbqEH3QVJfO7iO"},{"a","$2b$06$PWxFFHA3HiCD46TNOZh30e","$2b$06$PWxFFHA3HiCD46TNOZh30eNto1hg5uM9tHBlI4q/b03SW/gGKUYk6"},{"a","$2y$06$LUdD6/aD0e/UbnxVAVbvGu","$2y$06$LUdD6/aD0e/UbnxVAVbvGuUmIoJ3l/OK94ThhadpMWwKC34LrGEey"},{"a","$2y$06$eqgY.T2yloESMZxgp76deO","$2y$06$eqgY.T2yloESMZxgp76deOROa7nzXDxbO0k.PJvuClTa.Vu1AuemG"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abc","$2b$06$5FyQoicpbox1xSHFfhhdXu","$2b$06$5FyQoicpbox1xSHFfhhdXuR2oxLpO1rYsQh5RTkI/9.RIjtoF0/ta"},{"abc","$2b$06$1kJyuho8MCVP3HHsjnRMkO","$2b$06$1kJyuho8MCVP3HHsjnRMkO1nvCOaKTqLnjG2TX1lyMFbXH/aOkgc."},{"abc","$2y$06$ACfku9dT6.H8VjdKb8nhlu","$2y$06$ACfku9dT6.H8VjdKb8nhluaoBmhJyK7GfoNScEfOfrJffUxoUeCjK"},{"abc","$2y$06$9JujYcoWPmifvFA3RUP90e","$2y$06$9JujYcoWPmifvFA3RUP90e5rSEHAb5Ye6iv3.G9ikiHNv5cxjNEse"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"abcdefghijklmnopqrstuvwxyz","$2b$06$O8E89AQPj1zJQA05YvIAU.","$2b$06$O8E89AQPj1zJQA05YvIAU.hMpj25BXri1bupl/Q7CJMlpLwZDNBoO"},{"abcdefghijklmnopqrstuvwxyz","$2b$06$PDqIWr./o/P3EE/P.Q0A/u","$2b$06$PDqIWr./o/P3EE/P.Q0A/uFg86WL/PXTbaW267TDALEwDylqk00Z."},{"abcdefghijklmnopqrstuvwxyz","$2y$06$34MG90ZLah8/ZNr3ltlHCu","$2y$06$34MG90ZLah8/ZNr3ltlHCuz6bachF8/3S5jTuzF1h2qg2cUk11sFW"},{"abcdefghijklmnopqrstuvwxyz","$2y$06$AK.hSLfMyw706iEW24i68u","$2y$06$AK.hSLfMyw706iEW24i68uKAc2yorPTrB0cimvjJHEBUrPkOq7VvG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$FGWA8OlY6RtQhXBXuCJ8Wu","$2b$06$FGWA8OlY6RtQhXBXuCJ8WusVipRI15cWOgJK8MYpBHEkktMfbHRIG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$G6aYU7UhUEUDJBdTgq3CRe","$2b$06$G6aYU7UhUEUDJBdTgq3CRekiopCN4O4sNitFXrf5NUscsVZj3a2r6"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$sYDFHqOcXTjBgOsqC0WCKe","$2y$06$sYDFHqOcXTjBgOsqC0WCKeMd3T1UhHuWQSxncLGtXDLMrcE6vFDti"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$6Xm0gCw4g7ZNDCEp4yTise","$2y$06$6Xm0gCw4g7ZNDCEp4yTisez0kSdpXEl66MvdxGidnmChIe8dFmMnq"}} @AT@ 1216 @LENGTH@ 2518
---------INS ArrayInitializer@@{"","$2b$06$8eVN9RiU8Yki430X.wBvN.","$2b$06$8eVN9RiU8Yki430X.wBvN.LWaqh2962emLVSVXVZIXJvDYLsV0oFu"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 1673 @LENGTH@ 108
------------INS StringLiteral@@"" @TO@ ArrayInitializer@@{"","$2b$06$8eVN9RiU8Yki430X.wBvN.","$2b$06$8eVN9RiU8Yki430X.wBvN.LWaqh2962emLVSVXVZIXJvDYLsV0oFu"} @AT@ 1675 @LENGTH@ 2
------------INS StringLiteral@@"$2b$06$8eVN9RiU8Yki430X.wBvN." @TO@ ArrayInitializer@@{"","$2b$06$8eVN9RiU8Yki430X.wBvN.","$2b$06$8eVN9RiU8Yki430X.wBvN.LWaqh2962emLVSVXVZIXJvDYLsV0oFu"} @AT@ 1679 @LENGTH@ 31
------------INS StringLiteral@@"$2b$06$8eVN9RiU8Yki430X.wBvN.LWaqh2962emLVSVXVZIXJvDYLsV0oFu" @TO@ ArrayInitializer@@{"","$2b$06$8eVN9RiU8Yki430X.wBvN.","$2b$06$8eVN9RiU8Yki430X.wBvN.LWaqh2962emLVSVXVZIXJvDYLsV0oFu"} @AT@ 1717 @LENGTH@ 62
---------INS ArrayInitializer@@{"","$2b$06$NlgfNgpIc6GlHciCkMEW8u","$2b$06$NlgfNgpIc6GlHciCkMEW8uKOBsyvAp7QwlHpysOlKdtyEw50WQua2"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 1786 @LENGTH@ 108
------------INS StringLiteral@@"" @TO@ ArrayInitializer@@{"","$2b$06$NlgfNgpIc6GlHciCkMEW8u","$2b$06$NlgfNgpIc6GlHciCkMEW8uKOBsyvAp7QwlHpysOlKdtyEw50WQua2"} @AT@ 1788 @LENGTH@ 2
------------INS StringLiteral@@"$2b$06$NlgfNgpIc6GlHciCkMEW8u" @TO@ ArrayInitializer@@{"","$2b$06$NlgfNgpIc6GlHciCkMEW8u","$2b$06$NlgfNgpIc6GlHciCkMEW8uKOBsyvAp7QwlHpysOlKdtyEw50WQua2"} @AT@ 1792 @LENGTH@ 31
------------INS StringLiteral@@"$2b$06$NlgfNgpIc6GlHciCkMEW8uKOBsyvAp7QwlHpysOlKdtyEw50WQua2" @TO@ ArrayInitializer@@{"","$2b$06$NlgfNgpIc6GlHciCkMEW8u","$2b$06$NlgfNgpIc6GlHciCkMEW8uKOBsyvAp7QwlHpysOlKdtyEw50WQua2"} @AT@ 1830 @LENGTH@ 62
---------INS ArrayInitializer@@{"","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO3OFWzNEdcY84ELw6iHCPruuQfSAXBLK"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 1899 @LENGTH@ 108
------------INS StringLiteral@@"" @TO@ ArrayInitializer@@{"","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO3OFWzNEdcY84ELw6iHCPruuQfSAXBLK"} @AT@ 1901 @LENGTH@ 2
------------INS StringLiteral@@"$2y$06$mFDtkz6UN7B3GZ2qi2hhaO" @TO@ ArrayInitializer@@{"","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO3OFWzNEdcY84ELw6iHCPruuQfSAXBLK"} @AT@ 1905 @LENGTH@ 31
------------INS StringLiteral@@"$2y$06$mFDtkz6UN7B3GZ2qi2hhaO3OFWzNEdcY84ELw6iHCPruuQfSAXBLK" @TO@ ArrayInitializer@@{"","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO","$2y$06$mFDtkz6UN7B3GZ2qi2hhaO3OFWzNEdcY84ELw6iHCPruuQfSAXBLK"} @AT@ 1943 @LENGTH@ 62
---------INS ArrayInitializer@@{"","$2y$06$88kSqVttBx.e9iXTPCLa5u","$2y$06$88kSqVttBx.e9iXTPCLa5uFPrVFjfLH4D.KcO6pBiAmvUkvdg0EYy"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 2012 @LENGTH@ 108
------------INS StringLiteral@@"" @TO@ ArrayInitializer@@{"","$2y$06$88kSqVttBx.e9iXTPCLa5u","$2y$06$88kSqVttBx.e9iXTPCLa5uFPrVFjfLH4D.KcO6pBiAmvUkvdg0EYy"} @AT@ 2014 @LENGTH@ 2
------------INS StringLiteral@@"$2y$06$88kSqVttBx.e9iXTPCLa5u" @TO@ ArrayInitializer@@{"","$2y$06$88kSqVttBx.e9iXTPCLa5u","$2y$06$88kSqVttBx.e9iXTPCLa5uFPrVFjfLH4D.KcO6pBiAmvUkvdg0EYy"} @AT@ 2018 @LENGTH@ 31
------------INS StringLiteral@@"$2y$06$88kSqVttBx.e9iXTPCLa5uFPrVFjfLH4D.KcO6pBiAmvUkvdg0EYy" @TO@ ArrayInitializer@@{"","$2y$06$88kSqVttBx.e9iXTPCLa5u","$2y$06$88kSqVttBx.e9iXTPCLa5uFPrVFjfLH4D.KcO6pBiAmvUkvdg0EYy"} @AT@ 2056 @LENGTH@ 62
---------INS ArrayInitializer@@{"a","$2b$06$ehKGYiS4wt2HAr7KQXS5z.","$2b$06$ehKGYiS4wt2HAr7KQXS5z.OaRjB4jHO7rBHJKlGXbqEH3QVJfO7iO"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 2581 @LENGTH@ 109
------------INS StringLiteral@@"a" @TO@ ArrayInitializer@@{"a","$2b$06$ehKGYiS4wt2HAr7KQXS5z.","$2b$06$ehKGYiS4wt2HAr7KQXS5z.OaRjB4jHO7rBHJKlGXbqEH3QVJfO7iO"} @AT@ 2583 @LENGTH@ 3
------------INS StringLiteral@@"$2b$06$ehKGYiS4wt2HAr7KQXS5z." @TO@ ArrayInitializer@@{"a","$2b$06$ehKGYiS4wt2HAr7KQXS5z.","$2b$06$ehKGYiS4wt2HAr7KQXS5z.OaRjB4jHO7rBHJKlGXbqEH3QVJfO7iO"} @AT@ 2588 @LENGTH@ 31
------------INS StringLiteral@@"$2b$06$ehKGYiS4wt2HAr7KQXS5z.OaRjB4jHO7rBHJKlGXbqEH3QVJfO7iO" @TO@ ArrayInitializer@@{"a","$2b$06$ehKGYiS4wt2HAr7KQXS5z.","$2b$06$ehKGYiS4wt2HAr7KQXS5z.OaRjB4jHO7rBHJKlGXbqEH3QVJfO7iO"} @AT@ 2626 @LENGTH@ 62
---------INS ArrayInitializer@@{"a","$2b$06$PWxFFHA3HiCD46TNOZh30e","$2b$06$PWxFFHA3HiCD46TNOZh30eNto1hg5uM9tHBlI4q/b03SW/gGKUYk6"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 2695 @LENGTH@ 109
------------INS StringLiteral@@"a" @TO@ ArrayInitializer@@{"a","$2b$06$PWxFFHA3HiCD46TNOZh30e","$2b$06$PWxFFHA3HiCD46TNOZh30eNto1hg5uM9tHBlI4q/b03SW/gGKUYk6"} @AT@ 2697 @LENGTH@ 3
------------INS StringLiteral@@"$2b$06$PWxFFHA3HiCD46TNOZh30e" @TO@ ArrayInitializer@@{"a","$2b$06$PWxFFHA3HiCD46TNOZh30e","$2b$06$PWxFFHA3HiCD46TNOZh30eNto1hg5uM9tHBlI4q/b03SW/gGKUYk6"} @AT@ 2702 @LENGTH@ 31
------------INS StringLiteral@@"$2b$06$PWxFFHA3HiCD46TNOZh30eNto1hg5uM9tHBlI4q/b03SW/gGKUYk6" @TO@ ArrayInitializer@@{"a","$2b$06$PWxFFHA3HiCD46TNOZh30e","$2b$06$PWxFFHA3HiCD46TNOZh30eNto1hg5uM9tHBlI4q/b03SW/gGKUYk6"} @AT@ 2740 @LENGTH@ 62
---------INS ArrayInitializer@@{"a","$2y$06$LUdD6/aD0e/UbnxVAVbvGu","$2y$06$LUdD6/aD0e/UbnxVAVbvGuUmIoJ3l/OK94ThhadpMWwKC34LrGEey"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 2809 @LENGTH@ 109
------------INS StringLiteral@@"a" @TO@ ArrayInitializer@@{"a","$2y$06$LUdD6/aD0e/UbnxVAVbvGu","$2y$06$LUdD6/aD0e/UbnxVAVbvGuUmIoJ3l/OK94ThhadpMWwKC34LrGEey"} @AT@ 2811 @LENGTH@ 3
------------INS StringLiteral@@"$2y$06$LUdD6/aD0e/UbnxVAVbvGu" @TO@ ArrayInitializer@@{"a","$2y$06$LUdD6/aD0e/UbnxVAVbvGu","$2y$06$LUdD6/aD0e/UbnxVAVbvGuUmIoJ3l/OK94ThhadpMWwKC34LrGEey"} @AT@ 2816 @LENGTH@ 31
------------INS StringLiteral@@"$2y$06$LUdD6/aD0e/UbnxVAVbvGuUmIoJ3l/OK94ThhadpMWwKC34LrGEey" @TO@ ArrayInitializer@@{"a","$2y$06$LUdD6/aD0e/UbnxVAVbvGu","$2y$06$LUdD6/aD0e/UbnxVAVbvGuUmIoJ3l/OK94ThhadpMWwKC34LrGEey"} @AT@ 2854 @LENGTH@ 62
---------INS ArrayInitializer@@{"a","$2y$06$eqgY.T2yloESMZxgp76deO","$2y$06$eqgY.T2yloESMZxgp76deOROa7nzXDxbO0k.PJvuClTa.Vu1AuemG"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 2923 @LENGTH@ 109
------------INS StringLiteral@@"a" @TO@ ArrayInitializer@@{"a","$2y$06$eqgY.T2yloESMZxgp76deO","$2y$06$eqgY.T2yloESMZxgp76deOROa7nzXDxbO0k.PJvuClTa.Vu1AuemG"} @AT@ 2925 @LENGTH@ 3
------------INS StringLiteral@@"$2y$06$eqgY.T2yloESMZxgp76deO" @TO@ ArrayInitializer@@{"a","$2y$06$eqgY.T2yloESMZxgp76deO","$2y$06$eqgY.T2yloESMZxgp76deOROa7nzXDxbO0k.PJvuClTa.Vu1AuemG"} @AT@ 2930 @LENGTH@ 31
------------INS StringLiteral@@"$2y$06$eqgY.T2yloESMZxgp76deOROa7nzXDxbO0k.PJvuClTa.Vu1AuemG" @TO@ ArrayInitializer@@{"a","$2y$06$eqgY.T2yloESMZxgp76deO","$2y$06$eqgY.T2yloESMZxgp76deOROa7nzXDxbO0k.PJvuClTa.Vu1AuemG"} @AT@ 2968 @LENGTH@ 62
---------INS ArrayInitializer@@{"abc","$2b$06$5FyQoicpbox1xSHFfhhdXu","$2b$06$5FyQoicpbox1xSHFfhhdXuR2oxLpO1rYsQh5RTkI/9.RIjtoF0/ta"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 3501 @LENGTH@ 111
------------INS StringLiteral@@"abc" @TO@ ArrayInitializer@@{"abc","$2b$06$5FyQoicpbox1xSHFfhhdXu","$2b$06$5FyQoicpbox1xSHFfhhdXuR2oxLpO1rYsQh5RTkI/9.RIjtoF0/ta"} @AT@ 3503 @LENGTH@ 5
------------INS StringLiteral@@"$2b$06$5FyQoicpbox1xSHFfhhdXu" @TO@ ArrayInitializer@@{"abc","$2b$06$5FyQoicpbox1xSHFfhhdXu","$2b$06$5FyQoicpbox1xSHFfhhdXuR2oxLpO1rYsQh5RTkI/9.RIjtoF0/ta"} @AT@ 3510 @LENGTH@ 31
------------INS StringLiteral@@"$2b$06$5FyQoicpbox1xSHFfhhdXuR2oxLpO1rYsQh5RTkI/9.RIjtoF0/ta" @TO@ ArrayInitializer@@{"abc","$2b$06$5FyQoicpbox1xSHFfhhdXu","$2b$06$5FyQoicpbox1xSHFfhhdXuR2oxLpO1rYsQh5RTkI/9.RIjtoF0/ta"} @AT@ 3548 @LENGTH@ 62
---------INS ArrayInitializer@@{"abc","$2b$06$1kJyuho8MCVP3HHsjnRMkO","$2b$06$1kJyuho8MCVP3HHsjnRMkO1nvCOaKTqLnjG2TX1lyMFbXH/aOkgc."} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 3617 @LENGTH@ 111
------------INS StringLiteral@@"abc" @TO@ ArrayInitializer@@{"abc","$2b$06$1kJyuho8MCVP3HHsjnRMkO","$2b$06$1kJyuho8MCVP3HHsjnRMkO1nvCOaKTqLnjG2TX1lyMFbXH/aOkgc."} @AT@ 3619 @LENGTH@ 5
------------INS StringLiteral@@"$2b$06$1kJyuho8MCVP3HHsjnRMkO" @TO@ ArrayInitializer@@{"abc","$2b$06$1kJyuho8MCVP3HHsjnRMkO","$2b$06$1kJyuho8MCVP3HHsjnRMkO1nvCOaKTqLnjG2TX1lyMFbXH/aOkgc."} @AT@ 3626 @LENGTH@ 31
------------INS StringLiteral@@"$2b$06$1kJyuho8MCVP3HHsjnRMkO1nvCOaKTqLnjG2TX1lyMFbXH/aOkgc." @TO@ ArrayInitializer@@{"abc","$2b$06$1kJyuho8MCVP3HHsjnRMkO","$2b$06$1kJyuho8MCVP3HHsjnRMkO1nvCOaKTqLnjG2TX1lyMFbXH/aOkgc."} @AT@ 3664 @LENGTH@ 62
---------INS ArrayInitializer@@{"abc","$2y$06$ACfku9dT6.H8VjdKb8nhlu","$2y$06$ACfku9dT6.H8VjdKb8nhluaoBmhJyK7GfoNScEfOfrJffUxoUeCjK"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 3733 @LENGTH@ 111
------------INS StringLiteral@@"abc" @TO@ ArrayInitializer@@{"abc","$2y$06$ACfku9dT6.H8VjdKb8nhlu","$2y$06$ACfku9dT6.H8VjdKb8nhluaoBmhJyK7GfoNScEfOfrJffUxoUeCjK"} @AT@ 3735 @LENGTH@ 5
------------INS StringLiteral@@"$2y$06$ACfku9dT6.H8VjdKb8nhlu" @TO@ ArrayInitializer@@{"abc","$2y$06$ACfku9dT6.H8VjdKb8nhlu","$2y$06$ACfku9dT6.H8VjdKb8nhluaoBmhJyK7GfoNScEfOfrJffUxoUeCjK"} @AT@ 3742 @LENGTH@ 31
------------INS StringLiteral@@"$2y$06$ACfku9dT6.H8VjdKb8nhluaoBmhJyK7GfoNScEfOfrJffUxoUeCjK" @TO@ ArrayInitializer@@{"abc","$2y$06$ACfku9dT6.H8VjdKb8nhlu","$2y$06$ACfku9dT6.H8VjdKb8nhluaoBmhJyK7GfoNScEfOfrJffUxoUeCjK"} @AT@ 3780 @LENGTH@ 62
---------INS ArrayInitializer@@{"abc","$2y$06$9JujYcoWPmifvFA3RUP90e","$2y$06$9JujYcoWPmifvFA3RUP90e5rSEHAb5Ye6iv3.G9ikiHNv5cxjNEse"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 3849 @LENGTH@ 111
------------INS StringLiteral@@"abc" @TO@ ArrayInitializer@@{"abc","$2y$06$9JujYcoWPmifvFA3RUP90e","$2y$06$9JujYcoWPmifvFA3RUP90e5rSEHAb5Ye6iv3.G9ikiHNv5cxjNEse"} @AT@ 3851 @LENGTH@ 5
------------INS StringLiteral@@"$2y$06$9JujYcoWPmifvFA3RUP90e" @TO@ ArrayInitializer@@{"abc","$2y$06$9JujYcoWPmifvFA3RUP90e","$2y$06$9JujYcoWPmifvFA3RUP90e5rSEHAb5Ye6iv3.G9ikiHNv5cxjNEse"} @AT@ 3858 @LENGTH@ 31
------------INS StringLiteral@@"$2y$06$9JujYcoWPmifvFA3RUP90e5rSEHAb5Ye6iv3.G9ikiHNv5cxjNEse" @TO@ ArrayInitializer@@{"abc","$2y$06$9JujYcoWPmifvFA3RUP90e","$2y$06$9JujYcoWPmifvFA3RUP90e5rSEHAb5Ye6iv3.G9ikiHNv5cxjNEse"} @AT@ 3896 @LENGTH@ 62
---------INS ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2b$06$O8E89AQPj1zJQA05YvIAU.","$2b$06$O8E89AQPj1zJQA05YvIAU.hMpj25BXri1bupl/Q7CJMlpLwZDNBoO"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 4521 @LENGTH@ 134
------------INS StringLiteral@@"abcdefghijklmnopqrstuvwxyz" @TO@ ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2b$06$O8E89AQPj1zJQA05YvIAU.","$2b$06$O8E89AQPj1zJQA05YvIAU.hMpj25BXri1bupl/Q7CJMlpLwZDNBoO"} @AT@ 4523 @LENGTH@ 28
------------INS StringLiteral@@"$2b$06$O8E89AQPj1zJQA05YvIAU." @TO@ ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2b$06$O8E89AQPj1zJQA05YvIAU.","$2b$06$O8E89AQPj1zJQA05YvIAU.hMpj25BXri1bupl/Q7CJMlpLwZDNBoO"} @AT@ 4553 @LENGTH@ 31
------------INS StringLiteral@@"$2b$06$O8E89AQPj1zJQA05YvIAU.hMpj25BXri1bupl/Q7CJMlpLwZDNBoO" @TO@ ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2b$06$O8E89AQPj1zJQA05YvIAU.","$2b$06$O8E89AQPj1zJQA05YvIAU.hMpj25BXri1bupl/Q7CJMlpLwZDNBoO"} @AT@ 4591 @LENGTH@ 62
---------INS ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2b$06$PDqIWr./o/P3EE/P.Q0A/u","$2b$06$PDqIWr./o/P3EE/P.Q0A/uFg86WL/PXTbaW267TDALEwDylqk00Z."} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 4660 @LENGTH@ 134
------------INS StringLiteral@@"abcdefghijklmnopqrstuvwxyz" @TO@ ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2b$06$PDqIWr./o/P3EE/P.Q0A/u","$2b$06$PDqIWr./o/P3EE/P.Q0A/uFg86WL/PXTbaW267TDALEwDylqk00Z."} @AT@ 4662 @LENGTH@ 28
------------INS StringLiteral@@"$2b$06$PDqIWr./o/P3EE/P.Q0A/u" @TO@ ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2b$06$PDqIWr./o/P3EE/P.Q0A/u","$2b$06$PDqIWr./o/P3EE/P.Q0A/uFg86WL/PXTbaW267TDALEwDylqk00Z."} @AT@ 4692 @LENGTH@ 31
------------INS StringLiteral@@"$2b$06$PDqIWr./o/P3EE/P.Q0A/uFg86WL/PXTbaW267TDALEwDylqk00Z." @TO@ ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2b$06$PDqIWr./o/P3EE/P.Q0A/u","$2b$06$PDqIWr./o/P3EE/P.Q0A/uFg86WL/PXTbaW267TDALEwDylqk00Z."} @AT@ 4730 @LENGTH@ 62
---------INS ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2y$06$34MG90ZLah8/ZNr3ltlHCu","$2y$06$34MG90ZLah8/ZNr3ltlHCuz6bachF8/3S5jTuzF1h2qg2cUk11sFW"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 4799 @LENGTH@ 134
------------INS StringLiteral@@"abcdefghijklmnopqrstuvwxyz" @TO@ ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2y$06$34MG90ZLah8/ZNr3ltlHCu","$2y$06$34MG90ZLah8/ZNr3ltlHCuz6bachF8/3S5jTuzF1h2qg2cUk11sFW"} @AT@ 4801 @LENGTH@ 28
------------INS StringLiteral@@"$2y$06$34MG90ZLah8/ZNr3ltlHCu" @TO@ ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2y$06$34MG90ZLah8/ZNr3ltlHCu","$2y$06$34MG90ZLah8/ZNr3ltlHCuz6bachF8/3S5jTuzF1h2qg2cUk11sFW"} @AT@ 4831 @LENGTH@ 31
------------INS StringLiteral@@"$2y$06$34MG90ZLah8/ZNr3ltlHCuz6bachF8/3S5jTuzF1h2qg2cUk11sFW" @TO@ ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2y$06$34MG90ZLah8/ZNr3ltlHCu","$2y$06$34MG90ZLah8/ZNr3ltlHCuz6bachF8/3S5jTuzF1h2qg2cUk11sFW"} @AT@ 4869 @LENGTH@ 62
---------INS ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2y$06$AK.hSLfMyw706iEW24i68u","$2y$06$AK.hSLfMyw706iEW24i68uKAc2yorPTrB0cimvjJHEBUrPkOq7VvG"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 4938 @LENGTH@ 134
------------INS StringLiteral@@"abcdefghijklmnopqrstuvwxyz" @TO@ ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2y$06$AK.hSLfMyw706iEW24i68u","$2y$06$AK.hSLfMyw706iEW24i68uKAc2yorPTrB0cimvjJHEBUrPkOq7VvG"} @AT@ 4940 @LENGTH@ 28
------------INS StringLiteral@@"$2y$06$AK.hSLfMyw706iEW24i68u" @TO@ ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2y$06$AK.hSLfMyw706iEW24i68u","$2y$06$AK.hSLfMyw706iEW24i68uKAc2yorPTrB0cimvjJHEBUrPkOq7VvG"} @AT@ 4970 @LENGTH@ 31
------------INS StringLiteral@@"$2y$06$AK.hSLfMyw706iEW24i68uKAc2yorPTrB0cimvjJHEBUrPkOq7VvG" @TO@ ArrayInitializer@@{"abcdefghijklmnopqrstuvwxyz","$2y$06$AK.hSLfMyw706iEW24i68u","$2y$06$AK.hSLfMyw706iEW24i68uKAc2yorPTrB0cimvjJHEBUrPkOq7VvG"} @AT@ 5008 @LENGTH@ 62
---------INS ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$FGWA8OlY6RtQhXBXuCJ8Wu","$2b$06$FGWA8OlY6RtQhXBXuCJ8WusVipRI15cWOgJK8MYpBHEkktMfbHRIG"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 5665 @LENGTH@ 142
------------INS StringLiteral@@"~!@#$%^&*()      ~!@#$%^&*()PNBFRD" @TO@ ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$FGWA8OlY6RtQhXBXuCJ8Wu","$2b$06$FGWA8OlY6RtQhXBXuCJ8WusVipRI15cWOgJK8MYpBHEkktMfbHRIG"} @AT@ 5667 @LENGTH@ 36
------------INS StringLiteral@@"$2b$06$FGWA8OlY6RtQhXBXuCJ8Wu" @TO@ ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$FGWA8OlY6RtQhXBXuCJ8Wu","$2b$06$FGWA8OlY6RtQhXBXuCJ8WusVipRI15cWOgJK8MYpBHEkktMfbHRIG"} @AT@ 5705 @LENGTH@ 31
------------INS StringLiteral@@"$2b$06$FGWA8OlY6RtQhXBXuCJ8WusVipRI15cWOgJK8MYpBHEkktMfbHRIG" @TO@ ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$FGWA8OlY6RtQhXBXuCJ8Wu","$2b$06$FGWA8OlY6RtQhXBXuCJ8WusVipRI15cWOgJK8MYpBHEkktMfbHRIG"} @AT@ 5743 @LENGTH@ 62
---------INS ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$G6aYU7UhUEUDJBdTgq3CRe","$2b$06$G6aYU7UhUEUDJBdTgq3CRekiopCN4O4sNitFXrf5NUscsVZj3a2r6"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 5812 @LENGTH@ 142
------------INS StringLiteral@@"~!@#$%^&*()      ~!@#$%^&*()PNBFRD" @TO@ ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$G6aYU7UhUEUDJBdTgq3CRe","$2b$06$G6aYU7UhUEUDJBdTgq3CRekiopCN4O4sNitFXrf5NUscsVZj3a2r6"} @AT@ 5814 @LENGTH@ 36
------------INS StringLiteral@@"$2b$06$G6aYU7UhUEUDJBdTgq3CRe" @TO@ ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$G6aYU7UhUEUDJBdTgq3CRe","$2b$06$G6aYU7UhUEUDJBdTgq3CRekiopCN4O4sNitFXrf5NUscsVZj3a2r6"} @AT@ 5852 @LENGTH@ 31
------------INS StringLiteral@@"$2b$06$G6aYU7UhUEUDJBdTgq3CRekiopCN4O4sNitFXrf5NUscsVZj3a2r6" @TO@ ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2b$06$G6aYU7UhUEUDJBdTgq3CRe","$2b$06$G6aYU7UhUEUDJBdTgq3CRekiopCN4O4sNitFXrf5NUscsVZj3a2r6"} @AT@ 5890 @LENGTH@ 62
---------INS ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$sYDFHqOcXTjBgOsqC0WCKe","$2y$06$sYDFHqOcXTjBgOsqC0WCKeMd3T1UhHuWQSxncLGtXDLMrcE6vFDti"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 5959 @LENGTH@ 142
------------INS StringLiteral@@"~!@#$%^&*()      ~!@#$%^&*()PNBFRD" @TO@ ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$sYDFHqOcXTjBgOsqC0WCKe","$2y$06$sYDFHqOcXTjBgOsqC0WCKeMd3T1UhHuWQSxncLGtXDLMrcE6vFDti"} @AT@ 5961 @LENGTH@ 36
------------INS StringLiteral@@"$2y$06$sYDFHqOcXTjBgOsqC0WCKe" @TO@ ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$sYDFHqOcXTjBgOsqC0WCKe","$2y$06$sYDFHqOcXTjBgOsqC0WCKeMd3T1UhHuWQSxncLGtXDLMrcE6vFDti"} @AT@ 5999 @LENGTH@ 31
------------INS StringLiteral@@"$2y$06$sYDFHqOcXTjBgOsqC0WCKeMd3T1UhHuWQSxncLGtXDLMrcE6vFDti" @TO@ ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$sYDFHqOcXTjBgOsqC0WCKe","$2y$06$sYDFHqOcXTjBgOsqC0WCKeMd3T1UhHuWQSxncLGtXDLMrcE6vFDti"} @AT@ 6037 @LENGTH@ 62
---------INS ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$6Xm0gCw4g7ZNDCEp4yTise","$2y$06$6Xm0gCw4g7ZNDCEp4yTisez0kSdpXEl66MvdxGidnmChIe8dFmMnq"} @TO@ ArrayInitializer@@{{"","$2a$06$DCq7YPn5Rq63x1Lad4cll.","$2a$06$DCq7YPn5Rq63x1Lad4cll.TV4S6ytwfsfvkgY8jIucDrjc8deX1s."},{"","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.","$2a$08$HqWuK6/Ng6sg9gQzbLrgb.Tl.ZHfXLhvt/SgVyWhQqgqcZ7ZuUtye"},{"","$2a$10$k1wbIrmNyFAPwPVPSVa/ze","$2a$10$k1wbIrmNyFAPwPVPSVa/zecw2BCEnBwVS2GbrmgzxFUOqW9dk4TCW"},{"","$2a$12$k42ZFHFWqBp3vWli.nIn8u","$2a$12$k42ZFHFWqBp3vWli.nIn8uYyIkbvYRvodzbfbK18SSsY.CsIQPlxO"},{"a","$2a$06$m0CrhHm10qJ3lXRY.5zDGO","$2a$06$m0CrhHm10qJ3lXRY.5zDGO3rS2KdeeWLuGmsfGlMfOxih58VYVfxe"},{"a","$2a$08$cfcvVd2aQ8CMvoMpP2EBfe","$2a$08$cfcvVd2aQ8CMvoMpP2EBfeodLEkkFJ9umNEfPD18.hUF62qqlC/V."},{"a","$2a$10$k87L/MF28Q673VKh8/cPi.","$2a$10$k87L/MF28Q673VKh8/cPi.SUl7MU/rWuSiIDDFayrKk/1tBsSQu4u"},{"a","$2a$12$8NJH3LsPrANStV6XtBakCe","$2a$12$8NJH3LsPrANStV6XtBakCez0cKHXVxmvxIlcz785vxAIZrihHZpeS"},{"abc","$2a$06$If6bvum7DFjUnE9p2uDeDu","$2a$06$If6bvum7DFjUnE9p2uDeDu0YHzrHM6tf.iqN8.yx.jNN1ILEf7h0i"},{"abc","$2a$08$Ro0CUfOqk6cXEKf3dyaM7O","$2a$08$Ro0CUfOqk6cXEKf3dyaM7OhSCvnwM9s4wIX9JeLapehKK5YdLxKcm"},{"abc","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.","$2a$10$WvvTPHKwdBJ3uk0Z37EMR.hLA2W6N9AEBhEgrAOljy2Ae5MtaSIUi"},{"abc","$2a$12$EXRkfkdmXn2gzds2SSitu.","$2a$12$EXRkfkdmXn2gzds2SSitu.MW9.gAVqa9eLS1//RYtYCmB1eLHg.9q"},{"abcdefghijklmnopqrstuvwxyz","$2a$06$.rCVZVOThsIa97pEDOxvGu","$2a$06$.rCVZVOThsIa97pEDOxvGuRRgzG64bvtJ0938xuqzv18d3ZpQhstC"},{"abcdefghijklmnopqrstuvwxyz","$2a$08$aTsUwsyowQuzRrDqFflhge","$2a$08$aTsUwsyowQuzRrDqFflhgekJ8d9/7Z3GV3UcgvzQW3J5zMyrTvlz."},{"abcdefghijklmnopqrstuvwxyz","$2a$10$fVH8e28OQRj9tqiDXs1e1u","$2a$10$fVH8e28OQRj9tqiDXs1e1uxpsjN0c7II7YPKXua2NAKYvM6iQk7dq"},{"abcdefghijklmnopqrstuvwxyz","$2a$12$D4G5f18o7aMMfwasBL7Gpu","$2a$12$D4G5f18o7aMMfwasBL7GpuQWuP3pkrZrOAnqP.bmezbMng.QwJ/pG"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$06$fPIsBO8qRqkjj273rfaOI.","$2a$06$fPIsBO8qRqkjj273rfaOI.HtSV9jLDpTbZn782DC6/t7qT67P6FfO"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$08$Eq2r4G/76Wv39MzSX262hu","$2a$08$Eq2r4G/76Wv39MzSX262huzPz612MZiYHVUJe/OcOql2jo4.9UxTW"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$10$LgfYWkbzEvQ4JakH7rOvHe","$2a$10$LgfYWkbzEvQ4JakH7rOvHe0y8pHKF9OaFgwUZ2q7W2FFZmZzJYlfS"},{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2a$12$WApznUOJfkEGSmYRfnkrPO","$2a$12$WApznUOJfkEGSmYRfnkrPOr466oFDCaj4b6HY3EXGvfxm43seyhgC"}} @AT@ 6106 @LENGTH@ 142
------------INS StringLiteral@@"~!@#$%^&*()      ~!@#$%^&*()PNBFRD" @TO@ ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$6Xm0gCw4g7ZNDCEp4yTise","$2y$06$6Xm0gCw4g7ZNDCEp4yTisez0kSdpXEl66MvdxGidnmChIe8dFmMnq"} @AT@ 6108 @LENGTH@ 36
------------INS StringLiteral@@"$2y$06$6Xm0gCw4g7ZNDCEp4yTise" @TO@ ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$6Xm0gCw4g7ZNDCEp4yTise","$2y$06$6Xm0gCw4g7ZNDCEp4yTisez0kSdpXEl66MvdxGidnmChIe8dFmMnq"} @AT@ 6146 @LENGTH@ 31
------------INS StringLiteral@@"$2y$06$6Xm0gCw4g7ZNDCEp4yTisez0kSdpXEl66MvdxGidnmChIe8dFmMnq" @TO@ ArrayInitializer@@{"~!@#$%^&*()      ~!@#$%^&*()PNBFRD","$2y$06$6Xm0gCw4g7ZNDCEp4yTise","$2y$06$6Xm0gCw4g7ZNDCEp4yTisez0kSdpXEl66MvdxGidnmChIe8dFmMnq"} @AT@ 6184 @LENGTH@ 62


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(StateTransferBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(StateTransferServiceConfigurator::new); @AT@ 6931 @LENGTH@ 93
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(StateTransferBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(StateTransferServiceConfigurator::new) @AT@ 6954 @LENGTH@ 69
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[StateTransferBuilder::new] @TO@ SimpleResourceServiceHandler[StateTransferServiceConfigurator::new] @AT@ 6964 @LENGTH@ 59


UPD TypeDeclaration@@[public]JsonFileItemWriterTests,  @TO@ [@RunWith(MockitoJUnitRunner.class), public]JsonFileItemWriterTests,  @AT@ 1012 @LENGTH@ 1134
---INS SingleMemberAnnotation@@@RunWith(MockitoJUnitRunner.class) @TO@ TypeDeclaration@@[public]JsonFileItemWriterTests,  @AT@ 1115 @LENGTH@ 34


UPD TypeDeclaration@@[@MetaInfServices(DistributableHostSingleSignOnManagerBuilderProvider.class), public]DistributableSingleSignOnManagerServiceConfiguratorProvider, [DistributableHostSingleSignOnManagerBuilderProvider] @TO@ [@MetaInfServices(DistributableHostSingleSignOnManagerServiceConfiguratorProvider.class), public]DistributableSingleSignOnManagerServiceConfiguratorProvider, [DistributableHostSingleSignOnManagerServiceConfiguratorProvider] @AT@ 1621 @LENGTH@ 1018
---UPD SingleMemberAnnotation@@@MetaInfServices(DistributableHostSingleSignOnManagerBuilderProvider.class) @TO@ @MetaInfServices(DistributableHostSingleSignOnManagerServiceConfiguratorProvider.class) @AT@ 1621 @LENGTH@ 75
---UPD SimpleType@@DistributableHostSingleSignOnManagerBuilderProvider @TO@ DistributableHostSingleSignOnManagerServiceConfiguratorProvider @AT@ 1781 @LENGTH@ 51


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Jwt is the only supported format for bearer tokens " + "in Spring Security and no Jwt configuration was found. Make sure to specify " + "a jwk set uri by doing http.oauth2().resourceServer().jwt().jwkSetUri(uri), or wire a "+ "JwtDecoder instance by doing http.oauth2().resourceServer().jwt().decoder(decoder), or "+ "expose a JwtDecoder instance as a bean and do http.oauth2().resourceServer().jwt().") @TO@ ClassInstanceCreation:new IllegalStateException("Jwt is the only supported format for bearer tokens " + "in Spring Security and no Jwt configuration was found. Make sure to specify " + "a jwk set uri by doing http.oauth2ResourceServer().jwt().jwkSetUri(uri), or wire a "+ "JwtDecoder instance by doing http.oauth2ResourceServer().jwt().decoder(decoder), or "+ "expose a JwtDecoder instance as a bean and do http.oauth2ResourceServer().jwt().") @AT@ 7039 @LENGTH@ 459
---UPD ClassInstanceCreation@@IllegalStateException["Jwt is the only supported format for bearer tokens " + "in Spring Security and no Jwt configuration was found. Make sure to specify " + "a jwk set uri by doing http.oauth2().resourceServer().jwt().jwkSetUri(uri), or wire a "+ "JwtDecoder instance by doing http.oauth2().resourceServer().jwt().decoder(decoder), or "+ "expose a JwtDecoder instance as a bean and do http.oauth2().resourceServer().jwt()."] @TO@ IllegalStateException["Jwt is the only supported format for bearer tokens " + "in Spring Security and no Jwt configuration was found. Make sure to specify " + "a jwk set uri by doing http.oauth2ResourceServer().jwt().jwkSetUri(uri), or wire a "+ "JwtDecoder instance by doing http.oauth2ResourceServer().jwt().decoder(decoder), or "+ "expose a JwtDecoder instance as a bean and do http.oauth2ResourceServer().jwt()."] @AT@ 7045 @LENGTH@ 452
------UPD InfixExpression@@"Jwt is the only supported format for bearer tokens " + "in Spring Security and no Jwt configuration was found. Make sure to specify " + "a jwk set uri by doing http.oauth2().resourceServer().jwt().jwkSetUri(uri), or wire a "+ "JwtDecoder instance by doing http.oauth2().resourceServer().jwt().decoder(decoder), or "+ "expose a JwtDecoder instance as a bean and do http.oauth2().resourceServer().jwt()." @TO@ "Jwt is the only supported format for bearer tokens " + "in Spring Security and no Jwt configuration was found. Make sure to specify " + "a jwk set uri by doing http.oauth2ResourceServer().jwt().jwkSetUri(uri), or wire a "+ "JwtDecoder instance by doing http.oauth2ResourceServer().jwt().decoder(decoder), or "+ "expose a JwtDecoder instance as a bean and do http.oauth2ResourceServer().jwt()." @AT@ 7071 @LENGTH@ 425
---------UPD StringLiteral@@"a jwk set uri by doing http.oauth2().resourceServer().jwt().jwkSetUri(uri), or wire a " @TO@ "a jwk set uri by doing http.oauth2ResourceServer().jwt().jwkSetUri(uri), or wire a " @AT@ 7218 @LENGTH@ 88
---------UPD StringLiteral@@"JwtDecoder instance by doing http.oauth2().resourceServer().jwt().decoder(decoder), or " @TO@ "JwtDecoder instance by doing http.oauth2ResourceServer().jwt().decoder(decoder), or " @AT@ 7314 @LENGTH@ 89
---------UPD StringLiteral@@"expose a JwtDecoder instance as a bean and do http.oauth2().resourceServer().jwt()." @TO@ "expose a JwtDecoder instance as a bean and do http.oauth2ResourceServer().jwt()." @AT@ 7411 @LENGTH@ 85


INS MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @TO@ TypeDeclaration@@[@SpringBootApplication, public]OAuth2LoginApplication,  @AT@ 1298 @LENGTH@ 220
---INS Modifier@@public @TO@ MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @AT@ 1298 @LENGTH@ 6
---INS SimpleType@@OAuth2AuthorizedClientRepository @TO@ MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @AT@ 1305 @LENGTH@ 32
---INS SimpleName@@MethodName:authorizedClientRepository @TO@ MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @AT@ 1338 @LENGTH@ 26
---INS SingleVariableDeclaration@@OAuth2AuthorizedClientService authorizedClientService @TO@ MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @AT@ 1365 @LENGTH@ 53
------INS SimpleType@@OAuth2AuthorizedClientService @TO@ SingleVariableDeclaration@@OAuth2AuthorizedClientService authorizedClientService @AT@ 1365 @LENGTH@ 29
------INS SimpleName@@authorizedClientService @TO@ SingleVariableDeclaration@@OAuth2AuthorizedClientService authorizedClientService @AT@ 1395 @LENGTH@ 23
---INS ReturnStatement@@ClassInstanceCreation:new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(authorizedClientService) @TO@ MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @AT@ 1424 @LENGTH@ 91
------INS ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[authorizedClientService] @TO@ ReturnStatement@@ClassInstanceCreation:new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(authorizedClientService) @AT@ 1431 @LENGTH@ 83
---------INS New@@new @TO@ ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[authorizedClientService] @AT@ 1431 @LENGTH@ 3
---------INS SimpleType@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository @TO@ ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[authorizedClientService] @AT@ 1435 @LENGTH@ 54
---------INS SimpleName@@authorizedClientService @TO@ ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[authorizedClientService] @AT@ 1490 @LENGTH@ 23


INS MethodDeclaration@@protected, int, MethodName:findIdleConsumer,  @TO@ TypeDeclaration@@[public]DirectMessageListenerContainer, AbstractMessageListenerContainer @AT@ 11241 @LENGTH@ 49
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, int, MethodName:findIdleConsumer,  @AT@ 11241 @LENGTH@ 9
---INS PrimitiveType@@int @TO@ MethodDeclaration@@protected, int, MethodName:findIdleConsumer,  @AT@ 11251 @LENGTH@ 3
---INS SimpleName@@MethodName:findIdleConsumer @TO@ MethodDeclaration@@protected, int, MethodName:findIdleConsumer,  @AT@ 11255 @LENGTH@ 16
---INS ReturnStatement@@NumberLiteral:0 @TO@ MethodDeclaration@@protected, int, MethodName:findIdleConsumer,  @AT@ 11278 @LENGTH@ 9
------INS NumberLiteral@@0 @TO@ ReturnStatement@@NumberLiteral:0 @AT@ 11285 @LENGTH@ 1


UPD MethodDeclaration@@public, static, AttributeDefinition, MethodName:createNillableAttribute, String name, ModelType type,  @TO@ public, static, AttributeDefinition, MethodName:createNillableAttribute, String name, ModelType type, boolean runtimeOnly,  @AT@ 1965 @LENGTH@ 150
---UPD ReturnStatement@@MethodInvocation:createAttribute(name,type,null,true) @TO@ MethodInvocation:createAttribute(name,type,null,runtimeOnly,false,true) @AT@ 2062 @LENGTH@ 47
------UPD MethodInvocation@@createAttribute(name,type,null,true) @TO@ createAttribute(name,type,null,runtimeOnly,false,true) @AT@ 2069 @LENGTH@ 39
---------UPD SimpleName@@MethodName:createAttribute:[name, type, null, true] @TO@ MethodName:createAttribute:[name, type, null, runtimeOnly, false, true] @AT@ 2069 @LENGTH@ 39
------------INS SimpleName@@runtimeOnly @TO@ SimpleName@@MethodName:createAttribute:[name, type, null, true] @AT@ 2284 @LENGTH@ 11
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:createAttribute:[name, type, null, true] @AT@ 2297 @LENGTH@ 5
---INS SingleVariableDeclaration@@boolean runtimeOnly @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createNillableAttribute, String name, ModelType type,  @AT@ 2212 @LENGTH@ 19
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean runtimeOnly @AT@ 2212 @LENGTH@ 7
------INS SimpleName@@runtimeOnly @TO@ SingleVariableDeclaration@@boolean runtimeOnly @AT@ 2220 @LENGTH@ 11


UPD MethodDeclaration@@public, static, void, MethodName:closeConnection, Connection connection,  @TO@ public, static, void, MethodName:closeConnection, @Nullable Connection connection,  @AT@ 1807 @LENGTH@ 322
---UPD SingleVariableDeclaration@@Connection connection @TO@ @Nullable Connection connection @AT@ 1842 @LENGTH@ 21


INS MethodDeclaration@@protected, int, MethodName:findIdleConsumer,  @TO@ TypeDeclaration@@[public]DirectReplyToMessageListenerContainer, DirectMessageListenerContainer @AT@ 4573 @LENGTH@ 200
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, int, MethodName:findIdleConsumer,  @AT@ 4573 @LENGTH@ 9
---INS PrimitiveType@@int @TO@ MethodDeclaration@@protected, int, MethodName:findIdleConsumer,  @AT@ 4583 @LENGTH@ 3
---INS SimpleName@@MethodName:findIdleConsumer @TO@ MethodDeclaration@@protected, int, MethodName:findIdleConsumer,  @AT@ 4587 @LENGTH@ 16
---INS ForStatement@@for (int i=0; i < this.consumers.size(); i++) {  if (!this.inUseConsumerChannels.containsValue(this.consumers.get(i))) {    return i;  }} @TO@ MethodDeclaration@@protected, int, MethodName:findIdleConsumer,  @AT@ 4610 @LENGTH@ 147
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < this.consumers.size(); i++) {  if (!this.inUseConsumerChannels.containsValue(this.consumers.get(i))) {    return i;  }} @AT@ 4615 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 4615 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 4619 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 4619 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 4623 @LENGTH@ 1
------INS InfixExpression@@i < this.consumers.size() @TO@ ForStatement@@for (int i=0; i < this.consumers.size(); i++) {  if (!this.inUseConsumerChannels.containsValue(this.consumers.get(i))) {    return i;  }} @AT@ 4626 @LENGTH@ 25
---------INS SimpleName@@i @TO@ InfixExpression@@i < this.consumers.size() @AT@ 4626 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < this.consumers.size() @AT@ 4627 @LENGTH@ 1
---------INS MethodInvocation@@this.consumers.size() @TO@ InfixExpression@@i < this.consumers.size() @AT@ 4630 @LENGTH@ 21
------------INS FieldAccess@@this.consumers @TO@ MethodInvocation@@this.consumers.size() @AT@ 4630 @LENGTH@ 14
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.consumers @AT@ 4630 @LENGTH@ 4
---------------INS SimpleName@@consumers @TO@ FieldAccess@@this.consumers @AT@ 4635 @LENGTH@ 9
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@this.consumers.size() @AT@ 4645 @LENGTH@ 6
------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < this.consumers.size(); i++) {  if (!this.inUseConsumerChannels.containsValue(this.consumers.get(i))) {    return i;  }} @AT@ 4653 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 4653 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 4655 @LENGTH@ 2
------INS IfStatement@@if (!this.inUseConsumerChannels.containsValue(this.consumers.get(i))) {  return i;} @TO@ ForStatement@@for (int i=0; i < this.consumers.size(); i++) {  if (!this.inUseConsumerChannels.containsValue(this.consumers.get(i))) {    return i;  }} @AT@ 4663 @LENGTH@ 90
---------INS PrefixExpression@@!this.inUseConsumerChannels.containsValue(this.consumers.get(i)) @TO@ IfStatement@@if (!this.inUseConsumerChannels.containsValue(this.consumers.get(i))) {  return i;} @AT@ 4667 @LENGTH@ 64
------------INS Operator@@! @TO@ PrefixExpression@@!this.inUseConsumerChannels.containsValue(this.consumers.get(i)) @AT@ 4667 @LENGTH@ 1
------------INS MethodInvocation@@this.inUseConsumerChannels.containsValue(this.consumers.get(i)) @TO@ PrefixExpression@@!this.inUseConsumerChannels.containsValue(this.consumers.get(i)) @AT@ 4668 @LENGTH@ 63
---------------INS FieldAccess@@this.inUseConsumerChannels @TO@ MethodInvocation@@this.inUseConsumerChannels.containsValue(this.consumers.get(i)) @AT@ 4668 @LENGTH@ 26
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.inUseConsumerChannels @AT@ 4668 @LENGTH@ 4
------------------INS SimpleName@@inUseConsumerChannels @TO@ FieldAccess@@this.inUseConsumerChannels @AT@ 4673 @LENGTH@ 21
---------------INS SimpleName@@MethodName:containsValue:[this.consumers.get(i)] @TO@ MethodInvocation@@this.inUseConsumerChannels.containsValue(this.consumers.get(i)) @AT@ 4695 @LENGTH@ 36
------------------INS MethodInvocation@@this.consumers.get(i) @TO@ SimpleName@@MethodName:containsValue:[this.consumers.get(i)] @AT@ 4709 @LENGTH@ 21
---------------------INS FieldAccess@@this.consumers @TO@ MethodInvocation@@this.consumers.get(i) @AT@ 4709 @LENGTH@ 14
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.consumers @AT@ 4709 @LENGTH@ 4
------------------------INS SimpleName@@consumers @TO@ FieldAccess@@this.consumers @AT@ 4714 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:get:[i] @TO@ MethodInvocation@@this.consumers.get(i) @AT@ 4724 @LENGTH@ 6
------------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:get:[i] @AT@ 4728 @LENGTH@ 1
---------INS Block@@ThenBody:{  return i;} @TO@ IfStatement@@if (!this.inUseConsumerChannels.containsValue(this.consumers.get(i))) {  return i;} @AT@ 4733 @LENGTH@ 20
------------INS ReturnStatement@@SimpleName:i @TO@ Block@@ThenBody:{  return i;} @AT@ 4739 @LENGTH@ 9
---------------INS SimpleName@@i @TO@ ReturnStatement@@SimpleName:i @AT@ 4746 @LENGTH@ 1
---INS ReturnStatement@@PrefixExpression:-1 @TO@ MethodDeclaration@@protected, int, MethodName:findIdleConsumer,  @AT@ 4760 @LENGTH@ 10
------INS PrefixExpression@@-1 @TO@ ReturnStatement@@PrefixExpression:-1 @AT@ 4767 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 4767 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 4768 @LENGTH@ 1


UPD VariableDeclarationStatement@@Method m=s.getClass().getDeclaredMethod("getXMLEventReader",new Class[]{}); @TO@ Method m=s.getClass().getDeclaredMethod("getXMLEventReader"); @AT@ 1357 @LENGTH@ 78
---UPD VariableDeclarationFragment@@m=s.getClass().getDeclaredMethod("getXMLEventReader",new Class[]{}) @TO@ m=s.getClass().getDeclaredMethod("getXMLEventReader") @AT@ 1364 @LENGTH@ 70
------UPD MethodInvocation@@s.getClass().getDeclaredMethod("getXMLEventReader",new Class[]{}) @TO@ s.getClass().getDeclaredMethod("getXMLEventReader") @AT@ 1368 @LENGTH@ 66
---------UPD SimpleName@@MethodName:getDeclaredMethod:["getXMLEventReader", new Class[]{}] @TO@ MethodName:getDeclaredMethod:["getXMLEventReader"] @AT@ 1381 @LENGTH@ 53
------------DEL ArrayCreation@@new Class[]{} @AT@ 1420 @LENGTH@ 13
---------------DEL ArrayType@@Class[] @AT@ 1424 @LENGTH@ 7
------------------DEL SimpleType@@Class @AT@ 1424 @LENGTH@ 5
---------------DEL ArrayInitializer@@{} @AT@ 1431 @LENGTH@ 2


INS MethodDeclaration@@private, void, MethodName:validateClientCredentialsGrantType,  @TO@ TypeDeclaration@@[public, static]Builder,  @AT@ 15620 @LENGTH@ 618
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:validateClientCredentialsGrantType,  @AT@ 15620 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:validateClientCredentialsGrantType,  @AT@ 15628 @LENGTH@ 4
---INS SimpleName@@MethodName:validateClientCredentialsGrantType @TO@ MethodDeclaration@@private, void, MethodName:validateClientCredentialsGrantType,  @AT@ 15633 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:Assert.isTrue(AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType),() -> "authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue()) @TO@ MethodDeclaration@@private, void, MethodName:validateClientCredentialsGrantType,  @AT@ 15675 @LENGTH@ 194
------INS MethodInvocation@@Assert.isTrue(AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType),() -> "authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue()) @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue(AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType),() -> "authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue()) @AT@ 15675 @LENGTH@ 193
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue(AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType),() -> "authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue()) @AT@ 15675 @LENGTH@ 6
---------INS SimpleName@@MethodName:isTrue:[AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType), () -> "authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue()] @TO@ MethodInvocation@@Assert.isTrue(AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType),() -> "authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue()) @AT@ 15682 @LENGTH@ 186
------------INS MethodInvocation@@AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType) @TO@ SimpleName@@MethodName:isTrue:[AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType), () -> "authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue()] @AT@ 15689 @LENGTH@ 77
---------------INS QualifiedName@@Name:AuthorizationGrantType.CLIENT_CREDENTIALS @TO@ MethodInvocation@@AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType) @AT@ 15689 @LENGTH@ 41
---------------INS SimpleName@@MethodName:equals:[this.authorizationGrantType] @TO@ MethodInvocation@@AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType) @AT@ 15731 @LENGTH@ 35
------------------INS FieldAccess@@this.authorizationGrantType @TO@ SimpleName@@MethodName:equals:[this.authorizationGrantType] @AT@ 15738 @LENGTH@ 27
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationGrantType @AT@ 15738 @LENGTH@ 4
---------------------INS SimpleName@@authorizationGrantType @TO@ FieldAccess@@this.authorizationGrantType @AT@ 15743 @LENGTH@ 22
------------INS LambdaExpression@@() -> "authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue() @TO@ SimpleName@@MethodName:isTrue:[AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType), () -> "authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue()] @AT@ 15773 @LENGTH@ 94
---------------INS InfixExpression@@"authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue() @TO@ LambdaExpression@@() -> "authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue() @AT@ 15779 @LENGTH@ 88
------------------INS StringLiteral@@"authorizationGrantType must be " @TO@ InfixExpression@@"authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue() @AT@ 15779 @LENGTH@ 33
------------------INS Operator@@+ @TO@ InfixExpression@@"authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue() @AT@ 15812 @LENGTH@ 1
------------------INS MethodInvocation@@AuthorizationGrantType.CLIENT_CREDENTIALS.getValue() @TO@ InfixExpression@@"authorizationGrantType must be " + AuthorizationGrantType.CLIENT_CREDENTIALS.getValue() @AT@ 15815 @LENGTH@ 52
---------------------INS QualifiedName@@Name:AuthorizationGrantType.CLIENT_CREDENTIALS @TO@ MethodInvocation@@AuthorizationGrantType.CLIENT_CREDENTIALS.getValue() @AT@ 15815 @LENGTH@ 41
---------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@AuthorizationGrantType.CLIENT_CREDENTIALS.getValue() @AT@ 15857 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:Assert.hasText(this.registrationId,"registrationId cannot be empty") @TO@ MethodDeclaration@@private, void, MethodName:validateClientCredentialsGrantType,  @AT@ 15873 @LENGTH@ 70
------INS MethodInvocation@@Assert.hasText(this.registrationId,"registrationId cannot be empty") @TO@ ExpressionStatement@@MethodInvocation:Assert.hasText(this.registrationId,"registrationId cannot be empty") @AT@ 15873 @LENGTH@ 69
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.hasText(this.registrationId,"registrationId cannot be empty") @AT@ 15873 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasText:[this.registrationId, "registrationId cannot be empty"] @TO@ MethodInvocation@@Assert.hasText(this.registrationId,"registrationId cannot be empty") @AT@ 15880 @LENGTH@ 62
------------INS FieldAccess@@this.registrationId @TO@ SimpleName@@MethodName:hasText:[this.registrationId, "registrationId cannot be empty"] @AT@ 15888 @LENGTH@ 19
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.registrationId @AT@ 15888 @LENGTH@ 4
---------------INS SimpleName@@registrationId @TO@ FieldAccess@@this.registrationId @AT@ 15893 @LENGTH@ 14
------------INS StringLiteral@@"registrationId cannot be empty" @TO@ SimpleName@@MethodName:hasText:[this.registrationId, "registrationId cannot be empty"] @AT@ 15909 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:Assert.hasText(this.clientId,"clientId cannot be empty") @TO@ MethodDeclaration@@private, void, MethodName:validateClientCredentialsGrantType,  @AT@ 15947 @LENGTH@ 58
------INS MethodInvocation@@Assert.hasText(this.clientId,"clientId cannot be empty") @TO@ ExpressionStatement@@MethodInvocation:Assert.hasText(this.clientId,"clientId cannot be empty") @AT@ 15947 @LENGTH@ 57
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.hasText(this.clientId,"clientId cannot be empty") @AT@ 15947 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasText:[this.clientId, "clientId cannot be empty"] @TO@ MethodInvocation@@Assert.hasText(this.clientId,"clientId cannot be empty") @AT@ 15954 @LENGTH@ 50
------------INS FieldAccess@@this.clientId @TO@ SimpleName@@MethodName:hasText:[this.clientId, "clientId cannot be empty"] @AT@ 15962 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientId @AT@ 15962 @LENGTH@ 4
---------------INS SimpleName@@clientId @TO@ FieldAccess@@this.clientId @AT@ 15967 @LENGTH@ 8
------------INS StringLiteral@@"clientId cannot be empty" @TO@ SimpleName@@MethodName:hasText:[this.clientId, "clientId cannot be empty"] @AT@ 15977 @LENGTH@ 26
---INS ExpressionStatement@@MethodInvocation:Assert.hasText(this.clientSecret,"clientSecret cannot be empty") @TO@ MethodDeclaration@@private, void, MethodName:validateClientCredentialsGrantType,  @AT@ 16009 @LENGTH@ 66
------INS MethodInvocation@@Assert.hasText(this.clientSecret,"clientSecret cannot be empty") @TO@ ExpressionStatement@@MethodInvocation:Assert.hasText(this.clientSecret,"clientSecret cannot be empty") @AT@ 16009 @LENGTH@ 65
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.hasText(this.clientSecret,"clientSecret cannot be empty") @AT@ 16009 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasText:[this.clientSecret, "clientSecret cannot be empty"] @TO@ MethodInvocation@@Assert.hasText(this.clientSecret,"clientSecret cannot be empty") @AT@ 16016 @LENGTH@ 58
------------INS FieldAccess@@this.clientSecret @TO@ SimpleName@@MethodName:hasText:[this.clientSecret, "clientSecret cannot be empty"] @AT@ 16024 @LENGTH@ 17
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientSecret @AT@ 16024 @LENGTH@ 4
---------------INS SimpleName@@clientSecret @TO@ FieldAccess@@this.clientSecret @AT@ 16029 @LENGTH@ 12
------------INS StringLiteral@@"clientSecret cannot be empty" @TO@ SimpleName@@MethodName:hasText:[this.clientSecret, "clientSecret cannot be empty"] @AT@ 16043 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(this.clientAuthenticationMethod,"clientAuthenticationMethod cannot be null") @TO@ MethodDeclaration@@private, void, MethodName:validateClientCredentialsGrantType,  @AT@ 16079 @LENGTH@ 93
------INS MethodInvocation@@Assert.notNull(this.clientAuthenticationMethod,"clientAuthenticationMethod cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(this.clientAuthenticationMethod,"clientAuthenticationMethod cannot be null") @AT@ 16079 @LENGTH@ 92
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(this.clientAuthenticationMethod,"clientAuthenticationMethod cannot be null") @AT@ 16079 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[this.clientAuthenticationMethod, "clientAuthenticationMethod cannot be null"] @TO@ MethodInvocation@@Assert.notNull(this.clientAuthenticationMethod,"clientAuthenticationMethod cannot be null") @AT@ 16086 @LENGTH@ 85
------------INS FieldAccess@@this.clientAuthenticationMethod @TO@ SimpleName@@MethodName:notNull:[this.clientAuthenticationMethod, "clientAuthenticationMethod cannot be null"] @AT@ 16094 @LENGTH@ 31
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientAuthenticationMethod @AT@ 16094 @LENGTH@ 4
---------------INS SimpleName@@clientAuthenticationMethod @TO@ FieldAccess@@this.clientAuthenticationMethod @AT@ 16099 @LENGTH@ 26
------------INS StringLiteral@@"clientAuthenticationMethod cannot be null" @TO@ SimpleName@@MethodName:notNull:[this.clientAuthenticationMethod, "clientAuthenticationMethod cannot be null"] @AT@ 16127 @LENGTH@ 43
---INS ExpressionStatement@@MethodInvocation:Assert.hasText(this.tokenUri,"tokenUri cannot be empty") @TO@ MethodDeclaration@@private, void, MethodName:validateClientCredentialsGrantType,  @AT@ 16176 @LENGTH@ 58
------INS MethodInvocation@@Assert.hasText(this.tokenUri,"tokenUri cannot be empty") @TO@ ExpressionStatement@@MethodInvocation:Assert.hasText(this.tokenUri,"tokenUri cannot be empty") @AT@ 16176 @LENGTH@ 57
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.hasText(this.tokenUri,"tokenUri cannot be empty") @AT@ 16176 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasText:[this.tokenUri, "tokenUri cannot be empty"] @TO@ MethodInvocation@@Assert.hasText(this.tokenUri,"tokenUri cannot be empty") @AT@ 16183 @LENGTH@ 50
------------INS FieldAccess@@this.tokenUri @TO@ SimpleName@@MethodName:hasText:[this.tokenUri, "tokenUri cannot be empty"] @AT@ 16191 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.tokenUri @AT@ 16191 @LENGTH@ 4
---------------INS SimpleName@@tokenUri @TO@ FieldAccess@@this.tokenUri @AT@ 16196 @LENGTH@ 8
------------INS StringLiteral@@"tokenUri cannot be empty" @TO@ SimpleName@@MethodName:hasText:[this.tokenUri, "tokenUri cannot be empty"] @AT@ 16206 @LENGTH@ 26


UPD IfStatement@@if (opts.contains("-next")) {  JobParameters nextParameters=getNextJobParameters(job);  Map<String,JobParameter> map=new HashMap<String,JobParameter>(nextParameters.getParameters());  map.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map);} @TO@ if (opts.contains("-next")) {  jobParameters=new JobParametersBuilder(jobParameters,jobExplorer).getNextJobParameters(job).toJobParameters();} @AT@ 13624 @LENGTH@ 290
---UPD Block@@ThenBody:{  JobParameters nextParameters=getNextJobParameters(job);  Map<String,JobParameter> map=new HashMap<String,JobParameter>(nextParameters.getParameters());  map.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map);} @TO@ ThenBody:{  jobParameters=new JobParametersBuilder(jobParameters,jobExplorer).getNextJobParameters(job).toJobParameters();} @AT@ 13652 @LENGTH@ 262
------INS ExpressionStatement@@Assignment:jobParameters=new JobParametersBuilder(jobParameters,jobExplorer).getNextJobParameters(job).toJobParameters() @TO@ Block@@ThenBody:{  JobParameters nextParameters=getNextJobParameters(job);  Map<String,JobParameter> map=new HashMap<String,JobParameter>(nextParameters.getParameters());  map.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map);} @AT@ 13541 @LENGTH@ 127
---------INS Assignment@@jobParameters=new JobParametersBuilder(jobParameters,jobExplorer).getNextJobParameters(job).toJobParameters() @TO@ ExpressionStatement@@Assignment:jobParameters=new JobParametersBuilder(jobParameters,jobExplorer).getNextJobParameters(job).toJobParameters() @AT@ 13541 @LENGTH@ 126
------------INS SimpleName@@jobParameters @TO@ Assignment@@jobParameters=new JobParametersBuilder(jobParameters,jobExplorer).getNextJobParameters(job).toJobParameters() @AT@ 13541 @LENGTH@ 13
------------INS Operator@@= @TO@ Assignment@@jobParameters=new JobParametersBuilder(jobParameters,jobExplorer).getNextJobParameters(job).toJobParameters() @AT@ 13554 @LENGTH@ 1
------------INS MethodInvocation@@new JobParametersBuilder(jobParameters,jobExplorer).getNextJobParameters(job).toJobParameters() @TO@ Assignment@@jobParameters=new JobParametersBuilder(jobParameters,jobExplorer).getNextJobParameters(job).toJobParameters() @AT@ 13557 @LENGTH@ 110
---------------INS MethodInvocation@@MethodName:getNextJobParameters:[job] @TO@ MethodInvocation@@new JobParametersBuilder(jobParameters,jobExplorer).getNextJobParameters(job).toJobParameters() @AT@ 13557 @LENGTH@ 85
------------------MOV SimpleName@@Name:jobParameters @TO@ MethodInvocation@@MethodName:getNextJobParameters:[job] @AT@ 13834 @LENGTH@ 13
---------------INS ClassInstanceCreation@@JobParametersBuilder[jobParameters, jobExplorer] @TO@ MethodInvocation@@new JobParametersBuilder(jobParameters,jobExplorer).getNextJobParameters(job).toJobParameters() @AT@ 13557 @LENGTH@ 52
------------------INS SimpleType@@JobParametersBuilder @TO@ ClassInstanceCreation@@JobParametersBuilder[jobParameters, jobExplorer] @AT@ 13561 @LENGTH@ 20
------------------INS SimpleName@@jobParameters @TO@ ClassInstanceCreation@@JobParametersBuilder[jobParameters, jobExplorer] @AT@ 13582 @LENGTH@ 13
------------------INS SimpleName@@jobExplorer @TO@ ClassInstanceCreation@@JobParametersBuilder[jobParameters, jobExplorer] @AT@ 13597 @LENGTH@ 11
------------------MOV New@@new @TO@ ClassInstanceCreation@@JobParametersBuilder[jobParameters, jobExplorer] @AT@ 13752 @LENGTH@ 3
---------------INS SimpleName@@MethodName:toJobParameters:[] @TO@ MethodInvocation@@new JobParametersBuilder(jobParameters,jobExplorer).getNextJobParameters(job).toJobParameters() @AT@ 13650 @LENGTH@ 17
------DEL VariableDeclarationStatement@@JobParameters nextParameters=getNextJobParameters(job); @AT@ 13658 @LENGTH@ 57
---------DEL SimpleType@@JobParameters @AT@ 13658 @LENGTH@ 13
---------DEL VariableDeclarationFragment@@nextParameters=getNextJobParameters(job) @AT@ 13672 @LENGTH@ 42
------------DEL SimpleName@@nextParameters @AT@ 13672 @LENGTH@ 14
------------DEL MethodInvocation@@getNextJobParameters(job) @AT@ 13689 @LENGTH@ 25
---------------DEL SimpleName@@MethodName:getNextJobParameters:[job] @AT@ 13689 @LENGTH@ 25
------------------DEL SimpleName@@job @AT@ 13710 @LENGTH@ 3
------DEL VariableDeclarationStatement@@Map<String,JobParameter> map=new HashMap<String,JobParameter>(nextParameters.getParameters()); @AT@ 13720 @LENGTH@ 98
---------DEL ParameterizedType@@Map<String,JobParameter> @AT@ 13720 @LENGTH@ 25
------------DEL SimpleType@@Map @AT@ 13720 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 13724 @LENGTH@ 6
------------DEL SimpleType@@JobParameter @AT@ 13732 @LENGTH@ 12
---------DEL VariableDeclarationFragment@@map=new HashMap<String,JobParameter>(nextParameters.getParameters()) @AT@ 13746 @LENGTH@ 71
------------DEL SimpleName@@map @AT@ 13746 @LENGTH@ 3
------------DEL ClassInstanceCreation@@HashMap<String,JobParameter>[nextParameters.getParameters()] @AT@ 13752 @LENGTH@ 65
---------------DEL ParameterizedType@@HashMap<String,JobParameter> @AT@ 13756 @LENGTH@ 29
------------------DEL SimpleType@@HashMap @AT@ 13756 @LENGTH@ 7
------------------DEL SimpleType@@String @AT@ 13764 @LENGTH@ 6
------------------DEL SimpleType@@JobParameter @AT@ 13772 @LENGTH@ 12
---------------DEL MethodInvocation@@nextParameters.getParameters() @AT@ 13786 @LENGTH@ 30
------------------DEL SimpleName@@Name:nextParameters @AT@ 13786 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:getParameters:[] @AT@ 13801 @LENGTH@ 15
------DEL ExpressionStatement@@MethodInvocation:map.putAll(jobParameters.getParameters()) @AT@ 13823 @LENGTH@ 42
---------DEL MethodInvocation@@map.putAll(jobParameters.getParameters()) @AT@ 13823 @LENGTH@ 41
------------DEL SimpleName@@Name:map @AT@ 13823 @LENGTH@ 3
------------DEL SimpleName@@MethodName:putAll:[jobParameters.getParameters()] @AT@ 13827 @LENGTH@ 37
---------------DEL MethodInvocation@@jobParameters.getParameters() @AT@ 13834 @LENGTH@ 29
------------------DEL SimpleName@@MethodName:getParameters:[] @AT@ 13848 @LENGTH@ 15
------DEL ExpressionStatement@@Assignment:jobParameters=new JobParameters(map) @AT@ 13870 @LENGTH@ 39
---------DEL Assignment@@jobParameters=new JobParameters(map) @AT@ 13870 @LENGTH@ 38
------------DEL SimpleName@@jobParameters @AT@ 13870 @LENGTH@ 13
------------DEL Operator@@= @AT@ 13883 @LENGTH@ 1
------------DEL ClassInstanceCreation@@JobParameters[map] @AT@ 13886 @LENGTH@ 22
---------------DEL New@@new @AT@ 13886 @LENGTH@ 3
---------------DEL SimpleType@@JobParameters @AT@ 13890 @LENGTH@ 13
---------------DEL SimpleName@@map @AT@ 13904 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:setClaimSetConverterWhenIsNullThenThrowsIllegalArgumentException,  @TO@ TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareForTest({NimbusJwtDecoderJwkSupport.class,JWTParser.class}), @PowerMockIgnore("okhttp3.*"), public]NimbusJwtDecoderJwkSupportTests,  @AT@ 13262 @LENGTH@ 196
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setClaimSetConverterWhenIsNullThenThrowsIllegalArgumentException,  @AT@ 13262 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setClaimSetConverterWhenIsNullThenThrowsIllegalArgumentException,  @AT@ 13269 @LENGTH@ 4
---INS SimpleName@@MethodName:setClaimSetConverterWhenIsNullThenThrowsIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setClaimSetConverterWhenIsNullThenThrowsIllegalArgumentException,  @AT@ 13274 @LENGTH@ 64
---INS ExpressionStatement@@MethodInvocation:assertThatCode(() -> jwtDecoder.setClaimSetConverter(null)).isInstanceOf(IllegalArgumentException.class) @TO@ MethodDeclaration@@public, void, MethodName:setClaimSetConverterWhenIsNullThenThrowsIllegalArgumentException,  @AT@ 13345 @LENGTH@ 110
------INS MethodInvocation@@assertThatCode(() -> jwtDecoder.setClaimSetConverter(null)).isInstanceOf(IllegalArgumentException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatCode(() -> jwtDecoder.setClaimSetConverter(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 13345 @LENGTH@ 109
---------INS MethodInvocation@@MethodName:assertThatCode:[() -> jwtDecoder.setClaimSetConverter(null)] @TO@ MethodInvocation@@assertThatCode(() -> jwtDecoder.setClaimSetConverter(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 13345 @LENGTH@ 59
------------INS LambdaExpression@@() -> jwtDecoder.setClaimSetConverter(null) @TO@ MethodInvocation@@MethodName:assertThatCode:[() -> jwtDecoder.setClaimSetConverter(null)] @AT@ 13360 @LENGTH@ 43
---------------INS MethodInvocation@@jwtDecoder.setClaimSetConverter(null) @TO@ LambdaExpression@@() -> jwtDecoder.setClaimSetConverter(null) @AT@ 13366 @LENGTH@ 37
------------------INS SimpleName@@Name:jwtDecoder @TO@ MethodInvocation@@jwtDecoder.setClaimSetConverter(null) @AT@ 13366 @LENGTH@ 10
------------------INS SimpleName@@MethodName:setClaimSetConverter:[null] @TO@ MethodInvocation@@jwtDecoder.setClaimSetConverter(null) @AT@ 13377 @LENGTH@ 26
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setClaimSetConverter:[null] @AT@ 13398 @LENGTH@ 4
---------INS SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatCode(() -> jwtDecoder.setClaimSetConverter(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 13410 @LENGTH@ 44
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 13423 @LENGTH@ 30


INS MethodDeclaration@@private, void, MethodName:handleResolveObj, NamingException exception,  @TO@ TypeDeclaration@@[public, final]ActiveDirectoryLdapAuthenticationProvider, AbstractLdapAuthenticationProvider @AT@ 9067 @LENGTH@ 259
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:handleResolveObj, NamingException exception,  @AT@ 9067 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:handleResolveObj, NamingException exception,  @AT@ 9075 @LENGTH@ 4
---INS SimpleName@@MethodName:handleResolveObj @TO@ MethodDeclaration@@private, void, MethodName:handleResolveObj, NamingException exception,  @AT@ 9080 @LENGTH@ 16
---INS SingleVariableDeclaration@@NamingException exception @TO@ MethodDeclaration@@private, void, MethodName:handleResolveObj, NamingException exception,  @AT@ 9097 @LENGTH@ 25
------INS SimpleType@@NamingException @TO@ SingleVariableDeclaration@@NamingException exception @AT@ 9097 @LENGTH@ 15
------INS SimpleName@@exception @TO@ SingleVariableDeclaration@@NamingException exception @AT@ 9113 @LENGTH@ 9
---INS VariableDeclarationStatement@@Object resolvedObj=exception.getResolvedObj(); @TO@ MethodDeclaration@@private, void, MethodName:handleResolveObj, NamingException exception,  @AT@ 9128 @LENGTH@ 48
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object resolvedObj=exception.getResolvedObj(); @AT@ 9128 @LENGTH@ 6
------INS VariableDeclarationFragment@@resolvedObj=exception.getResolvedObj() @TO@ VariableDeclarationStatement@@Object resolvedObj=exception.getResolvedObj(); @AT@ 9135 @LENGTH@ 40
---------INS SimpleName@@resolvedObj @TO@ VariableDeclarationFragment@@resolvedObj=exception.getResolvedObj() @AT@ 9135 @LENGTH@ 11
---------INS MethodInvocation@@exception.getResolvedObj() @TO@ VariableDeclarationFragment@@resolvedObj=exception.getResolvedObj() @AT@ 9149 @LENGTH@ 26
------------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.getResolvedObj() @AT@ 9149 @LENGTH@ 9
------------INS SimpleName@@MethodName:getResolvedObj:[] @TO@ MethodInvocation@@exception.getResolvedObj() @AT@ 9159 @LENGTH@ 16
---INS VariableDeclarationStatement@@boolean serializable=resolvedObj instanceof Serializable; @TO@ MethodDeclaration@@private, void, MethodName:handleResolveObj, NamingException exception,  @AT@ 9179 @LENGTH@ 59
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean serializable=resolvedObj instanceof Serializable; @AT@ 9179 @LENGTH@ 7
------INS VariableDeclarationFragment@@serializable=resolvedObj instanceof Serializable @TO@ VariableDeclarationStatement@@boolean serializable=resolvedObj instanceof Serializable; @AT@ 9187 @LENGTH@ 50
---------INS SimpleName@@serializable @TO@ VariableDeclarationFragment@@serializable=resolvedObj instanceof Serializable @AT@ 9187 @LENGTH@ 12
---------INS InstanceofExpression@@resolvedObj instanceof Serializable @TO@ VariableDeclarationFragment@@serializable=resolvedObj instanceof Serializable @AT@ 9202 @LENGTH@ 35
------------INS SimpleName@@resolvedObj @TO@ InstanceofExpression@@resolvedObj instanceof Serializable @AT@ 9202 @LENGTH@ 11
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@resolvedObj instanceof Serializable @AT@ 9214 @LENGTH@ 10
------------INS SimpleType@@Serializable @TO@ InstanceofExpression@@resolvedObj instanceof Serializable @AT@ 9225 @LENGTH@ 12
---INS IfStatement@@if (resolvedObj != null && !serializable) {  exception.setResolvedObj(null);} @TO@ MethodDeclaration@@private, void, MethodName:handleResolveObj, NamingException exception,  @AT@ 9241 @LENGTH@ 82
------INS InfixExpression@@resolvedObj != null && !serializable @TO@ IfStatement@@if (resolvedObj != null && !serializable) {  exception.setResolvedObj(null);} @AT@ 9245 @LENGTH@ 36
---------INS InfixExpression@@resolvedObj != null @TO@ InfixExpression@@resolvedObj != null && !serializable @AT@ 9245 @LENGTH@ 19
------------INS SimpleName@@resolvedObj @TO@ InfixExpression@@resolvedObj != null @AT@ 9245 @LENGTH@ 11
------------INS Operator@@!= @TO@ InfixExpression@@resolvedObj != null @AT@ 9256 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@resolvedObj != null @AT@ 9260 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@resolvedObj != null && !serializable @AT@ 9264 @LENGTH@ 2
---------INS PrefixExpression@@!serializable @TO@ InfixExpression@@resolvedObj != null && !serializable @AT@ 9268 @LENGTH@ 13
------------INS Operator@@! @TO@ PrefixExpression@@!serializable @AT@ 9268 @LENGTH@ 1
------------INS SimpleName@@serializable @TO@ PrefixExpression@@!serializable @AT@ 9269 @LENGTH@ 12
------INS Block@@ThenBody:{  exception.setResolvedObj(null);} @TO@ IfStatement@@if (resolvedObj != null && !serializable) {  exception.setResolvedObj(null);} @AT@ 9283 @LENGTH@ 40
---------INS ExpressionStatement@@MethodInvocation:exception.setResolvedObj(null) @TO@ Block@@ThenBody:{  exception.setResolvedObj(null);} @AT@ 9288 @LENGTH@ 31
------------INS MethodInvocation@@exception.setResolvedObj(null) @TO@ ExpressionStatement@@MethodInvocation:exception.setResolvedObj(null) @AT@ 9288 @LENGTH@ 30
---------------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.setResolvedObj(null) @AT@ 9288 @LENGTH@ 9
---------------INS SimpleName@@MethodName:setResolvedObj:[null] @TO@ MethodInvocation@@exception.setResolvedObj(null) @AT@ 9298 @LENGTH@ 20
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setResolvedObj:[null] @AT@ 9313 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenSuccessResponseThenReturnAccessTokenResponse, Exception,  @AT@ 5619 @LENGTH@ 98
---INS MethodInvocation@@assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @AT@ 5619 @LENGTH@ 97
------INS MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getRefreshToken().getTokenValue()] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @AT@ 5619 @LENGTH@ 65
---------INS MethodInvocation@@accessTokenResponse.getRefreshToken().getTokenValue() @TO@ MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getRefreshToken().getTokenValue()] @AT@ 5630 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken().getTokenValue() @AT@ 5630 @LENGTH@ 37
------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken().getTokenValue() @AT@ 5630 @LENGTH@ 19
------------INS SimpleName@@MethodName:getTokenValue:[] @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken().getTokenValue() @AT@ 5668 @LENGTH@ 15
------INS SimpleName@@MethodName:isEqualTo:["refresh-token-1234"] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @AT@ 5685 @LENGTH@ 31
---------INS StringLiteral@@"refresh-token-1234" @TO@ SimpleName@@MethodName:isEqualTo:["refresh-token-1234"] @AT@ 5695 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:decodeWhenInvalidUrl,  @TO@ TypeDeclaration@@[public]NimbusReactiveJwtDecoderTests,  @AT@ 3387 @LENGTH@ 274
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenInvalidUrl,  @AT@ 3387 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenInvalidUrl,  @AT@ 3394 @LENGTH@ 4
---INS SimpleName@@MethodName:decodeWhenInvalidUrl @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenInvalidUrl,  @AT@ 3399 @LENGTH@ 20
---INS ExpressionStatement@@Assignment:this.decoder=new NimbusReactiveJwtDecoder("https://s") @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenInvalidUrl,  @AT@ 3426 @LENGTH@ 57
------INS Assignment@@this.decoder=new NimbusReactiveJwtDecoder("https://s") @TO@ ExpressionStatement@@Assignment:this.decoder=new NimbusReactiveJwtDecoder("https://s") @AT@ 3426 @LENGTH@ 56
---------INS FieldAccess@@this.decoder @TO@ Assignment@@this.decoder=new NimbusReactiveJwtDecoder("https://s") @AT@ 3426 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.decoder @AT@ 3426 @LENGTH@ 4
------------INS SimpleName@@decoder @TO@ FieldAccess@@this.decoder @AT@ 3431 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.decoder=new NimbusReactiveJwtDecoder("https://s") @AT@ 3438 @LENGTH@ 1
---------INS ClassInstanceCreation@@NimbusReactiveJwtDecoder["https://s"] @TO@ Assignment@@this.decoder=new NimbusReactiveJwtDecoder("https://s") @AT@ 3441 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@NimbusReactiveJwtDecoder["https://s"] @AT@ 3441 @LENGTH@ 3
------------INS SimpleType@@NimbusReactiveJwtDecoder @TO@ ClassInstanceCreation@@NimbusReactiveJwtDecoder["https://s"] @AT@ 3445 @LENGTH@ 24
------------INS StringLiteral@@"https://s" @TO@ ClassInstanceCreation@@NimbusReactiveJwtDecoder["https://s"] @AT@ 3470 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.decoder.decode(this.messageReadToken).block()).isInstanceOf(IllegalStateException.class).hasCauseInstanceOf(UnknownHostException.class) @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenInvalidUrl,  @AT@ 3487 @LENGTH@ 170
------INS MethodInvocation@@assertThatCode(() -> this.decoder.decode(this.messageReadToken).block()).isInstanceOf(IllegalStateException.class).hasCauseInstanceOf(UnknownHostException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.decoder.decode(this.messageReadToken).block()).isInstanceOf(IllegalStateException.class).hasCauseInstanceOf(UnknownHostException.class) @AT@ 3487 @LENGTH@ 169
---------INS MethodInvocation@@MethodName:isInstanceOf:[IllegalStateException.class] @TO@ MethodInvocation@@assertThatCode(() -> this.decoder.decode(this.messageReadToken).block()).isInstanceOf(IllegalStateException.class).hasCauseInstanceOf(UnknownHostException.class) @AT@ 3487 @LENGTH@ 118
------------INS TypeLiteral@@IllegalStateException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[IllegalStateException.class] @AT@ 3577 @LENGTH@ 27
---------INS MethodInvocation@@MethodName:assertThatCode:[() -> this.decoder.decode(this.messageReadToken).block()] @TO@ MethodInvocation@@assertThatCode(() -> this.decoder.decode(this.messageReadToken).block()).isInstanceOf(IllegalStateException.class).hasCauseInstanceOf(UnknownHostException.class) @AT@ 3487 @LENGTH@ 72
------------INS LambdaExpression@@() -> this.decoder.decode(this.messageReadToken).block() @TO@ MethodInvocation@@MethodName:assertThatCode:[() -> this.decoder.decode(this.messageReadToken).block()] @AT@ 3502 @LENGTH@ 56
---------------INS MethodInvocation@@this.decoder.decode(this.messageReadToken).block() @TO@ LambdaExpression@@() -> this.decoder.decode(this.messageReadToken).block() @AT@ 3508 @LENGTH@ 50
------------------INS MethodInvocation@@MethodName:decode:[this.messageReadToken] @TO@ MethodInvocation@@this.decoder.decode(this.messageReadToken).block() @AT@ 3508 @LENGTH@ 42
---------------------INS FieldAccess@@this.messageReadToken @TO@ MethodInvocation@@MethodName:decode:[this.messageReadToken] @AT@ 3528 @LENGTH@ 21
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.messageReadToken @AT@ 3528 @LENGTH@ 4
------------------------INS SimpleName@@messageReadToken @TO@ FieldAccess@@this.messageReadToken @AT@ 3533 @LENGTH@ 16
------------------INS FieldAccess@@this.decoder @TO@ MethodInvocation@@this.decoder.decode(this.messageReadToken).block() @AT@ 3508 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.decoder @AT@ 3508 @LENGTH@ 4
---------------------INS SimpleName@@decoder @TO@ FieldAccess@@this.decoder @AT@ 3513 @LENGTH@ 7
------------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@this.decoder.decode(this.messageReadToken).block() @AT@ 3551 @LENGTH@ 7
---------INS SimpleName@@MethodName:hasCauseInstanceOf:[UnknownHostException.class] @TO@ MethodInvocation@@assertThatCode(() -> this.decoder.decode(this.messageReadToken).block()).isInstanceOf(IllegalStateException.class).hasCauseInstanceOf(UnknownHostException.class) @AT@ 3610 @LENGTH@ 46
------------INS TypeLiteral@@UnknownHostException.class @TO@ SimpleName@@MethodName:hasCauseInstanceOf:[UnknownHostException.class] @AT@ 3629 @LENGTH@ 26


UPD VariableDeclarationStatement@@Cache<?,?> cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2013 @LENGTH@ 172
---UPD VariableDeclarationFragment@@cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2025 @LENGTH@ 159
------UPD MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2033 @LENGTH@ 151
---------DEL SimpleName@@Name:ServiceContainerHelper @AT@ 2033 @LENGTH@ 22
---------INS ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2036 @LENGTH@ 157
------------INS New@@new @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2036 @LENGTH@ 3
------------INS ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2040 @LENGTH@ 35
---------------INS SimpleType@@PassiveServiceSupplier @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2040 @LENGTH@ 22
---------------INS ParameterizedType@@Cache<?,?> @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2063 @LENGTH@ 11
------------------INS SimpleType@@Cache @TO@ ParameterizedType@@Cache<?,?> @AT@ 2063 @LENGTH@ 5
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2069 @LENGTH@ 1
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2072 @LENGTH@ 1
------------INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2076 @LENGTH@ 32
---------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2066 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2074 @LENGTH@ 25
------------------UPD BooleanLiteral@@false @TO@ true @AT@ 2093 @LENGTH@ 5
------------MOV MethodInvocation@@InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2101 @LENGTH@ 82
---------DEL SimpleName@@MethodName:findValue:[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2056 @LENGTH@ 128
------------DEL MethodInvocation@@context.getServiceRegistry(false) @AT@ 2066 @LENGTH@ 33
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2194 @LENGTH@ 5


UPD TypeDeclaration@@[public]CustomStoreConfiguration, AbstractStoreConfiguration @TO@ [@SuppressWarnings("deprecation"), public]CustomStoreConfiguration, AbstractStoreConfiguration @AT@ 1389 @LENGTH@ 304
---INS SingleMemberAnnotation@@@SuppressWarnings("deprecation") @TO@ TypeDeclaration@@[public]CustomStoreConfiguration, AbstractStoreConfiguration @AT@ 1389 @LENGTH@ 32


UPD TypeDeclaration@@[@Configuration, @ConditionalOnProperty(value="camel.springboot.typeConversion",matchIfMissing=true), public]TypeConversionConfiguration,  @TO@ [@Configuration, @ConditionalOnProperty(value="camel.springboot.type-conversion",matchIfMissing=true), public]TypeConversionConfiguration,  @AT@ 1484 @LENGTH@ 1470
---UPD NormalAnnotation@@@ConditionalOnProperty(value="camel.springboot.typeConversion",matchIfMissing=true) @TO@ @ConditionalOnProperty(value="camel.springboot.type-conversion",matchIfMissing=true) @AT@ 1499 @LENGTH@ 88


UPD ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthenticationException.class).hasMessage("[insufficient_scope] The access token expired") @TO@ MethodInvocation:assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[insufficient_scope] The access token expired") @AT@ 2206 @LENGTH@ 186
---UPD MethodInvocation@@assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthenticationException.class).hasMessage("[insufficient_scope] The access token expired") @TO@ assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[insufficient_scope] The access token expired") @AT@ 2206 @LENGTH@ 185
------UPD MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthenticationException.class] @TO@ MethodName:isInstanceOf:[OAuth2AuthorizationException.class] @AT@ 2206 @LENGTH@ 120
---------UPD TypeLiteral@@OAuth2AuthenticationException.class @TO@ OAuth2AuthorizationException.class @AT@ 2290 @LENGTH@ 35


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(SingletonPolicyBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(SingletonPolicyServiceConfigurator::new); @AT@ 6755 @LENGTH@ 95
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(SingletonPolicyBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(SingletonPolicyServiceConfigurator::new) @AT@ 6778 @LENGTH@ 71
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[SingletonPolicyBuilder::new] @TO@ SimpleResourceServiceHandler[SingletonPolicyServiceConfigurator::new] @AT@ 6788 @LENGTH@ 61


DEL MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizationRequestBaseUriNullThenIllegalArgumentException,  @AT@ 3341 @LENGTH@ 317
---DEL Modifier@@public @AT@ 3341 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3348 @LENGTH@ 4
---DEL SimpleName@@MethodName:constructorWhenAuthorizationRequestBaseUriNullThenIllegalArgumentException @AT@ 3353 @LENGTH@ 74
---DEL VariableDeclarationStatement@@String authorizationRequestBaseUri=null; @AT@ 3434 @LENGTH@ 42
------DEL SimpleType@@String @AT@ 3434 @LENGTH@ 6
------DEL VariableDeclarationFragment@@authorizationRequestBaseUri=null @AT@ 3441 @LENGTH@ 34
---------DEL SimpleName@@authorizationRequestBaseUri @AT@ 3441 @LENGTH@ 27
---------DEL NullLiteral@@null @AT@ 3471 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> new OAuth2AuthorizationRequestRedirectWebFilter(this.clientRepository,authorizationRequestBaseUri)).isInstanceOf(IllegalArgumentException.class) @AT@ 3479 @LENGTH@ 176
------DEL MethodInvocation@@assertThatThrownBy(() -> new OAuth2AuthorizationRequestRedirectWebFilter(this.clientRepository,authorizationRequestBaseUri)).isInstanceOf(IllegalArgumentException.class) @AT@ 3479 @LENGTH@ 175
---------DEL MethodInvocation@@MethodName:assertThatThrownBy:[() -> new OAuth2AuthorizationRequestRedirectWebFilter(this.clientRepository,authorizationRequestBaseUri)] @AT@ 3479 @LENGTH@ 125
------------DEL LambdaExpression@@() -> new OAuth2AuthorizationRequestRedirectWebFilter(this.clientRepository,authorizationRequestBaseUri) @AT@ 3498 @LENGTH@ 105
---------------DEL ClassInstanceCreation@@OAuth2AuthorizationRequestRedirectWebFilter[this.clientRepository, authorizationRequestBaseUri] @AT@ 3504 @LENGTH@ 99
------------------DEL New@@new @AT@ 3504 @LENGTH@ 3
------------------DEL SimpleType@@OAuth2AuthorizationRequestRedirectWebFilter @AT@ 3508 @LENGTH@ 43
------------------DEL FieldAccess@@this.clientRepository @AT@ 3552 @LENGTH@ 21
---------------------DEL ThisExpression@@this @AT@ 3552 @LENGTH@ 4
---------------------DEL SimpleName@@clientRepository @AT@ 3557 @LENGTH@ 16
------------------DEL SimpleName@@authorizationRequestBaseUri @AT@ 3575 @LENGTH@ 27
---------DEL SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 3610 @LENGTH@ 44
------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 3623 @LENGTH@ 30


INS MethodDeclaration@@public, void, MethodName:matchesWhenUrlPathHelperThenMatchesOnRequestUri,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]AntPathRequestMatcherTests,  @AT@ 1246 @LENGTH@ 304
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenUrlPathHelperThenMatchesOnRequestUri,  @AT@ 1246 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenUrlPathHelperThenMatchesOnRequestUri,  @AT@ 1253 @LENGTH@ 4
---INS SimpleName@@MethodName:matchesWhenUrlPathHelperThenMatchesOnRequestUri @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenUrlPathHelperThenMatchesOnRequestUri,  @AT@ 1258 @LENGTH@ 47
---INS VariableDeclarationStatement@@AntPathRequestMatcher matcher=new AntPathRequestMatcher("/foo/bar",null,true,new UrlPathHelper()); @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenUrlPathHelperThenMatchesOnRequestUri,  @AT@ 1312 @LENGTH@ 103
------INS SimpleType@@AntPathRequestMatcher @TO@ VariableDeclarationStatement@@AntPathRequestMatcher matcher=new AntPathRequestMatcher("/foo/bar",null,true,new UrlPathHelper()); @AT@ 1312 @LENGTH@ 21
------INS VariableDeclarationFragment@@matcher=new AntPathRequestMatcher("/foo/bar",null,true,new UrlPathHelper()) @TO@ VariableDeclarationStatement@@AntPathRequestMatcher matcher=new AntPathRequestMatcher("/foo/bar",null,true,new UrlPathHelper()); @AT@ 1334 @LENGTH@ 80
---------INS SimpleName@@matcher @TO@ VariableDeclarationFragment@@matcher=new AntPathRequestMatcher("/foo/bar",null,true,new UrlPathHelper()) @AT@ 1334 @LENGTH@ 7
---------INS ClassInstanceCreation@@AntPathRequestMatcher["/foo/bar", null, true, new UrlPathHelper()] @TO@ VariableDeclarationFragment@@matcher=new AntPathRequestMatcher("/foo/bar",null,true,new UrlPathHelper()) @AT@ 1344 @LENGTH@ 70
------------INS New@@new @TO@ ClassInstanceCreation@@AntPathRequestMatcher["/foo/bar", null, true, new UrlPathHelper()] @AT@ 1344 @LENGTH@ 3
------------INS SimpleType@@AntPathRequestMatcher @TO@ ClassInstanceCreation@@AntPathRequestMatcher["/foo/bar", null, true, new UrlPathHelper()] @AT@ 1348 @LENGTH@ 21
------------INS StringLiteral@@"/foo/bar" @TO@ ClassInstanceCreation@@AntPathRequestMatcher["/foo/bar", null, true, new UrlPathHelper()] @AT@ 1370 @LENGTH@ 10
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AntPathRequestMatcher["/foo/bar", null, true, new UrlPathHelper()] @AT@ 1382 @LENGTH@ 4
------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@AntPathRequestMatcher["/foo/bar", null, true, new UrlPathHelper()] @AT@ 1388 @LENGTH@ 4
------------INS ClassInstanceCreation@@UrlPathHelper[] @TO@ ClassInstanceCreation@@AntPathRequestMatcher["/foo/bar", null, true, new UrlPathHelper()] @AT@ 1394 @LENGTH@ 19
---------------INS New@@new @TO@ ClassInstanceCreation@@UrlPathHelper[] @AT@ 1394 @LENGTH@ 3
---------------INS SimpleType@@UrlPathHelper @TO@ ClassInstanceCreation@@UrlPathHelper[] @AT@ 1398 @LENGTH@ 13
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("GET","/foo/bar"); @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenUrlPathHelperThenMatchesOnRequestUri,  @AT@ 1418 @LENGTH@ 79
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("GET","/foo/bar"); @AT@ 1418 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest("GET","/foo/bar") @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("GET","/foo/bar"); @AT@ 1441 @LENGTH@ 55
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest("GET","/foo/bar") @AT@ 1441 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest["GET", "/foo/bar"] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest("GET","/foo/bar") @AT@ 1451 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/foo/bar"] @AT@ 1451 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/foo/bar"] @AT@ 1455 @LENGTH@ 22
------------INS StringLiteral@@"GET" @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/foo/bar"] @AT@ 1478 @LENGTH@ 5
------------INS StringLiteral@@"/foo/bar" @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/foo/bar"] @AT@ 1485 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(matcher.matches(request)).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenUrlPathHelperThenMatchesOnRequestUri,  @AT@ 1501 @LENGTH@ 46
------INS MethodInvocation@@assertThat(matcher.matches(request)).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(matcher.matches(request)).isTrue() @AT@ 1501 @LENGTH@ 45
---------INS MethodInvocation@@MethodName:assertThat:[matcher.matches(request)] @TO@ MethodInvocation@@assertThat(matcher.matches(request)).isTrue() @AT@ 1501 @LENGTH@ 36
------------INS MethodInvocation@@matcher.matches(request) @TO@ MethodInvocation@@MethodName:assertThat:[matcher.matches(request)] @AT@ 1512 @LENGTH@ 24
---------------INS SimpleName@@Name:matcher @TO@ MethodInvocation@@matcher.matches(request) @AT@ 1512 @LENGTH@ 7
---------------INS SimpleName@@MethodName:matches:[request] @TO@ MethodInvocation@@matcher.matches(request) @AT@ 1520 @LENGTH@ 16
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:matches:[request] @AT@ 1528 @LENGTH@ 7
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(matcher.matches(request)).isTrue() @AT@ 1538 @LENGTH@ 8


UPD SuperConstructorInvocation@@super(WILDCARD_PATH,new SimpleResourceDescriptorConfigurator<>(Attribute.class),new ClusteredCacheServiceHandler(ScatteredCacheBuilder::new));
 @TO@ super(WILDCARD_PATH,new SimpleResourceDescriptorConfigurator<>(Attribute.class),new ClusteredCacheServiceHandler(ScatteredCacheServiceConfigurator::new));
 @AT@ 4326 @LENGTH@ 144
---UPD ClassInstanceCreation@@ClusteredCacheServiceHandler[ScatteredCacheBuilder::new] @TO@ ClusteredCacheServiceHandler[ScatteredCacheServiceConfigurator::new] @AT@ 4408 @LENGTH@ 60


INS VariableDeclarationStatement@@RequestMatcher authenticationNullMatcher=request -> SecurityContextHolder.getContext().getAuthentication() == null; @TO@ MethodDeclaration@@public, void, MethodName:init, B http, Exception,  @AT@ 18869 @LENGTH@ 117
---INS SimpleType@@RequestMatcher @TO@ VariableDeclarationStatement@@RequestMatcher authenticationNullMatcher=request -> SecurityContextHolder.getContext().getAuthentication() == null; @AT@ 18869 @LENGTH@ 14
---INS VariableDeclarationFragment@@authenticationNullMatcher=request -> SecurityContextHolder.getContext().getAuthentication() == null @TO@ VariableDeclarationStatement@@RequestMatcher authenticationNullMatcher=request -> SecurityContextHolder.getContext().getAuthentication() == null; @AT@ 18884 @LENGTH@ 101
------INS SimpleName@@authenticationNullMatcher @TO@ VariableDeclarationFragment@@authenticationNullMatcher=request -> SecurityContextHolder.getContext().getAuthentication() == null @AT@ 18884 @LENGTH@ 25
------INS LambdaExpression@@request -> SecurityContextHolder.getContext().getAuthentication() == null @TO@ VariableDeclarationFragment@@authenticationNullMatcher=request -> SecurityContextHolder.getContext().getAuthentication() == null @AT@ 18912 @LENGTH@ 73
---------INS VariableDeclarationFragment@@request @TO@ LambdaExpression@@request -> SecurityContextHolder.getContext().getAuthentication() == null @AT@ 18912 @LENGTH@ 7
------------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request @AT@ 18912 @LENGTH@ 7
---------INS InfixExpression@@SecurityContextHolder.getContext().getAuthentication() == null @TO@ LambdaExpression@@request -> SecurityContextHolder.getContext().getAuthentication() == null @AT@ 18923 @LENGTH@ 62
------------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ InfixExpression@@SecurityContextHolder.getContext().getAuthentication() == null @AT@ 18923 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 18923 @LENGTH@ 34
---------------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 18923 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 18958 @LENGTH@ 19
------------INS Operator@@== @TO@ InfixExpression@@SecurityContextHolder.getContext().getAuthentication() == null @AT@ 18977 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@SecurityContextHolder.getContext().getAuthentication() == null @AT@ 18981 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:callback.done(false) @TO@ MethodDeclaration@@public, boolean, MethodName:process, Exchange exchange, AsyncCallback callback,  @AT@ 2487 @LENGTH@ 21
---INS MethodInvocation@@callback.done(false) @TO@ ExpressionStatement@@MethodInvocation:callback.done(false) @AT@ 2487 @LENGTH@ 20
------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(false) @AT@ 2487 @LENGTH@ 8
------INS SimpleName@@MethodName:done:[false] @TO@ MethodInvocation@@callback.done(false) @AT@ 2496 @LENGTH@ 11
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:done:[false] @AT@ 2501 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(mvcResult.getResponse().getRedirectedUrl()).matches("https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http://localhost/client-1") @TO@ MethodInvocation:assertThat(mvcResult.getResponse().getRedirectedUrl()).matches("https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fclient-1") @AT@ 8339 @LENGTH@ 207
---UPD MethodInvocation@@assertThat(mvcResult.getResponse().getRedirectedUrl()).matches("https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http://localhost/client-1") @TO@ assertThat(mvcResult.getResponse().getRedirectedUrl()).matches("https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fclient-1") @AT@ 8339 @LENGTH@ 206
------UPD SimpleName@@MethodName:matches:["https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http://localhost/client-1"] @TO@ MethodName:matches:["https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fclient-1"] @AT@ 8394 @LENGTH@ 151
---------UPD StringLiteral@@"https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http://localhost/client-1" @TO@ "https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fclient-1" @AT@ 8402 @LENGTH@ 142


UPD VariableDeclarationStatement@@ExecutorService es=TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class); @TO@ ExecutorService es=TestUtils.getPropertyValue(cf,"channelsExecutor",ThreadPoolExecutor.class); @AT@ 2322 @LENGTH@ 103
---UPD VariableDeclarationFragment@@es=TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class) @TO@ es=TestUtils.getPropertyValue(cf,"channelsExecutor",ThreadPoolExecutor.class) @AT@ 2338 @LENGTH@ 86
------UPD MethodInvocation@@TestUtils.getPropertyValue(cf,"deferredCloseExecutor",ThreadPoolExecutor.class) @TO@ TestUtils.getPropertyValue(cf,"channelsExecutor",ThreadPoolExecutor.class) @AT@ 2343 @LENGTH@ 81
---------UPD SimpleName@@MethodName:getPropertyValue:[cf, "deferredCloseExecutor", ThreadPoolExecutor.class] @TO@ MethodName:getPropertyValue:[cf, "channelsExecutor", ThreadPoolExecutor.class] @AT@ 2353 @LENGTH@ 71
------------UPD StringLiteral@@"deferredCloseExecutor" @TO@ "channelsExecutor" @AT@ 2374 @LENGTH@ 23


UPD MethodDeclaration@@public, voidMethodName:CachingConnectionFactory, String hostname, int port,  @TO@ public, voidMethodName:CachingConnectionFactory, @Nullable String hostname, int port,  @AT@ 8049 @LENGTH@ 388
---UPD SingleVariableDeclaration@@String hostname @TO@ @Nullable String hostname @AT@ 8081 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(key,"ExpireTimeout must not be null!") @TO@ MethodInvocation:Assert.notNull(expireTimeout,"ExpireTimeout must not be null!") @AT@ 11326 @LENGTH@ 55
---UPD MethodInvocation@@Assert.notNull(key,"ExpireTimeout must not be null!") @TO@ Assert.notNull(expireTimeout,"ExpireTimeout must not be null!") @AT@ 11326 @LENGTH@ 54
------UPD SimpleName@@MethodName:notNull:[key, "ExpireTimeout must not be null!"] @TO@ MethodName:notNull:[expireTimeout, "ExpireTimeout must not be null!"] @AT@ 11333 @LENGTH@ 47
---------UPD SimpleName@@key @TO@ expireTimeout @AT@ 11341 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:mapsStringObjectIdRepresentationToObjectIdWhenReferencingIdProperty,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]QueryMapperUnitTests,  @AT@ 29020 @LENGTH@ 372
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:mapsStringObjectIdRepresentationToObjectIdWhenReferencingIdProperty,  @AT@ 29020 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:mapsStringObjectIdRepresentationToObjectIdWhenReferencingIdProperty,  @AT@ 29027 @LENGTH@ 4
---INS SimpleName@@MethodName:mapsStringObjectIdRepresentationToObjectIdWhenReferencingIdProperty @TO@ MethodDeclaration@@public, void, MethodName:mapsStringObjectIdRepresentationToObjectIdWhenReferencingIdProperty,  @AT@ 29032 @LENGTH@ 67
---INS VariableDeclarationStatement@@Query query=query(where("sample.foo").is(new ObjectId().toHexString())); @TO@ MethodDeclaration@@public, void, MethodName:mapsStringObjectIdRepresentationToObjectIdWhenReferencingIdProperty,  @AT@ 29107 @LENGTH@ 74
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=query(where("sample.foo").is(new ObjectId().toHexString())); @AT@ 29107 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=query(where("sample.foo").is(new ObjectId().toHexString())) @TO@ VariableDeclarationStatement@@Query query=query(where("sample.foo").is(new ObjectId().toHexString())); @AT@ 29113 @LENGTH@ 67
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=query(where("sample.foo").is(new ObjectId().toHexString())) @AT@ 29113 @LENGTH@ 5
---------INS MethodInvocation@@query(where("sample.foo").is(new ObjectId().toHexString())) @TO@ VariableDeclarationFragment@@query=query(where("sample.foo").is(new ObjectId().toHexString())) @AT@ 29121 @LENGTH@ 59
------------INS SimpleName@@MethodName:query:[where("sample.foo").is(new ObjectId().toHexString())] @TO@ MethodInvocation@@query(where("sample.foo").is(new ObjectId().toHexString())) @AT@ 29121 @LENGTH@ 59
---------------INS MethodInvocation@@where("sample.foo").is(new ObjectId().toHexString()) @TO@ SimpleName@@MethodName:query:[where("sample.foo").is(new ObjectId().toHexString())] @AT@ 29127 @LENGTH@ 52
------------------INS MethodInvocation@@MethodName:where:["sample.foo"] @TO@ MethodInvocation@@where("sample.foo").is(new ObjectId().toHexString()) @AT@ 29127 @LENGTH@ 19
---------------------INS StringLiteral@@"sample.foo" @TO@ MethodInvocation@@MethodName:where:["sample.foo"] @AT@ 29133 @LENGTH@ 12
------------------INS SimpleName@@MethodName:is:[new ObjectId().toHexString()] @TO@ MethodInvocation@@where("sample.foo").is(new ObjectId().toHexString()) @AT@ 29147 @LENGTH@ 32
---------------------INS MethodInvocation@@new ObjectId().toHexString() @TO@ SimpleName@@MethodName:is:[new ObjectId().toHexString()] @AT@ 29150 @LENGTH@ 28
------------------------INS ClassInstanceCreation@@ObjectId[] @TO@ MethodInvocation@@new ObjectId().toHexString() @AT@ 29150 @LENGTH@ 14
---------------------------INS New@@new @TO@ ClassInstanceCreation@@ObjectId[] @AT@ 29150 @LENGTH@ 3
---------------------------INS SimpleType@@ObjectId @TO@ ClassInstanceCreation@@ObjectId[] @AT@ 29154 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:toHexString:[] @TO@ MethodInvocation@@new ObjectId().toHexString() @AT@ 29165 @LENGTH@ 13
---INS VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)); @TO@ MethodDeclaration@@public, void, MethodName:mapsStringObjectIdRepresentationToObjectIdWhenReferencingIdProperty,  @AT@ 29184 @LENGTH@ 134
------INS SimpleType@@org.bson.Document @TO@ VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)); @AT@ 29184 @LENGTH@ 17
------INS VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)) @TO@ VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)); @AT@ 29202 @LENGTH@ 115
---------INS SimpleName@@document @TO@ VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)) @AT@ 29202 @LENGTH@ 8
---------INS MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)) @TO@ VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)) @AT@ 29213 @LENGTH@ 104
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)) @AT@ 29213 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(ClassWithEmbedded.class)] @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)) @AT@ 29220 @LENGTH@ 97
---------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(ClassWithEmbedded.class)] @AT@ 29236 @LENGTH@ 22
------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 29236 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 29242 @LENGTH@ 16
---------------INS MethodInvocation@@context.getPersistentEntity(ClassWithEmbedded.class) @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(ClassWithEmbedded.class)] @AT@ 29264 @LENGTH@ 52
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(ClassWithEmbedded.class) @AT@ 29264 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getPersistentEntity:[ClassWithEmbedded.class] @TO@ MethodInvocation@@context.getPersistentEntity(ClassWithEmbedded.class) @AT@ 29272 @LENGTH@ 44
---------------------INS TypeLiteral@@ClassWithEmbedded.class @TO@ SimpleName@@MethodName:getPersistentEntity:[ClassWithEmbedded.class] @AT@ 29292 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertThat(document.get("sample._id"),instanceOf(ObjectId.class)) @TO@ MethodDeclaration@@public, void, MethodName:mapsStringObjectIdRepresentationToObjectIdWhenReferencingIdProperty,  @AT@ 29322 @LENGTH@ 67
------INS MethodInvocation@@assertThat(document.get("sample._id"),instanceOf(ObjectId.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(document.get("sample._id"),instanceOf(ObjectId.class)) @AT@ 29322 @LENGTH@ 66
---------INS SimpleName@@MethodName:assertThat:[document.get("sample._id"), instanceOf(ObjectId.class)] @TO@ MethodInvocation@@assertThat(document.get("sample._id"),instanceOf(ObjectId.class)) @AT@ 29322 @LENGTH@ 66
------------INS MethodInvocation@@document.get("sample._id") @TO@ SimpleName@@MethodName:assertThat:[document.get("sample._id"), instanceOf(ObjectId.class)] @AT@ 29333 @LENGTH@ 26
---------------INS SimpleName@@Name:document @TO@ MethodInvocation@@document.get("sample._id") @AT@ 29333 @LENGTH@ 8
---------------INS SimpleName@@MethodName:get:["sample._id"] @TO@ MethodInvocation@@document.get("sample._id") @AT@ 29342 @LENGTH@ 17
------------------INS StringLiteral@@"sample._id" @TO@ SimpleName@@MethodName:get:["sample._id"] @AT@ 29346 @LENGTH@ 12
------------INS MethodInvocation@@instanceOf(ObjectId.class) @TO@ SimpleName@@MethodName:assertThat:[document.get("sample._id"), instanceOf(ObjectId.class)] @AT@ 29361 @LENGTH@ 26
---------------INS SimpleName@@MethodName:instanceOf:[ObjectId.class] @TO@ MethodInvocation@@instanceOf(ObjectId.class) @AT@ 29361 @LENGTH@ 26
------------------INS TypeLiteral@@ObjectId.class @TO@ SimpleName@@MethodName:instanceOf:[ObjectId.class] @AT@ 29372 @LENGTH@ 14
---------------INS SimpleName@@MethodName:instanceOf:[ObjectId.class] @TO@ MethodInvocation@@instanceOf(ObjectId.class) @AT@ 29361 @LENGTH@ 26
------------------INS TypeLiteral@@ObjectId.class @TO@ SimpleName@@MethodName:instanceOf:[ObjectId.class] @AT@ 29372 @LENGTH@ 14


UPD VariableDeclarationStatement@@AcidUtils.TableSnapshot tableSnapshot=AcidUtils.getTableSnapshot(hive.getConf(),tbl,true); @TO@ AcidUtils.TableSnapshot tableSnapshot=AcidUtils.getTableSnapshot(hive.getConf(),tbl); @AT@ 41927 @LENGTH@ 104
---UPD VariableDeclarationFragment@@tableSnapshot=AcidUtils.getTableSnapshot(hive.getConf(),tbl,true) @TO@ tableSnapshot=AcidUtils.getTableSnapshot(hive.getConf(),tbl) @AT@ 41951 @LENGTH@ 79
------UPD MethodInvocation@@AcidUtils.getTableSnapshot(hive.getConf(),tbl,true) @TO@ AcidUtils.getTableSnapshot(hive.getConf(),tbl) @AT@ 41977 @LENGTH@ 53
---------UPD SimpleName@@MethodName:getTableSnapshot:[hive.getConf(), tbl, true] @TO@ MethodName:getTableSnapshot:[hive.getConf(), tbl] @AT@ 41987 @LENGTH@ 43
------------DEL BooleanLiteral@@true @AT@ 42025 @LENGTH@ 4


INS MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @TO@ TypeDeclaration@@[public]XPathFeatureTest, ContextTestSupport @AT@ 2125 @LENGTH@ 546
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @AT@ 2125 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @AT@ 2133 @LENGTH@ 4
---INS SimpleName@@MethodName:resetCoreConverters @TO@ MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @AT@ 2138 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @AT@ 2167 @LENGTH@ 9
---INS VariableDeclarationStatement@@Field field=CoreStaticTypeConverterLoader.class.getDeclaredField("INSTANCE"); @TO@ MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @AT@ 2187 @LENGTH@ 79
------INS SimpleType@@Field @TO@ VariableDeclarationStatement@@Field field=CoreStaticTypeConverterLoader.class.getDeclaredField("INSTANCE"); @AT@ 2187 @LENGTH@ 5
------INS VariableDeclarationFragment@@field=CoreStaticTypeConverterLoader.class.getDeclaredField("INSTANCE") @TO@ VariableDeclarationStatement@@Field field=CoreStaticTypeConverterLoader.class.getDeclaredField("INSTANCE"); @AT@ 2193 @LENGTH@ 72
---------INS SimpleName@@field @TO@ VariableDeclarationFragment@@field=CoreStaticTypeConverterLoader.class.getDeclaredField("INSTANCE") @AT@ 2193 @LENGTH@ 5
---------INS MethodInvocation@@CoreStaticTypeConverterLoader.class.getDeclaredField("INSTANCE") @TO@ VariableDeclarationFragment@@field=CoreStaticTypeConverterLoader.class.getDeclaredField("INSTANCE") @AT@ 2201 @LENGTH@ 64
------------INS TypeLiteral@@CoreStaticTypeConverterLoader.class @TO@ MethodInvocation@@CoreStaticTypeConverterLoader.class.getDeclaredField("INSTANCE") @AT@ 2201 @LENGTH@ 35
------------INS SimpleName@@MethodName:getDeclaredField:["INSTANCE"] @TO@ MethodInvocation@@CoreStaticTypeConverterLoader.class.getDeclaredField("INSTANCE") @AT@ 2237 @LENGTH@ 28
---------------INS StringLiteral@@"INSTANCE" @TO@ SimpleName@@MethodName:getDeclaredField:["INSTANCE"] @AT@ 2254 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:field.setAccessible(true) @TO@ MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @AT@ 2275 @LENGTH@ 26
------INS MethodInvocation@@field.setAccessible(true) @TO@ ExpressionStatement@@MethodInvocation:field.setAccessible(true) @AT@ 2275 @LENGTH@ 25
---------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.setAccessible(true) @AT@ 2275 @LENGTH@ 5
---------INS SimpleName@@MethodName:setAccessible:[true] @TO@ MethodInvocation@@field.setAccessible(true) @AT@ 2281 @LENGTH@ 19
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setAccessible:[true] @AT@ 2295 @LENGTH@ 4
---INS VariableDeclarationStatement@@Field modifiersField=Field.class.getDeclaredField("modifiers"); @TO@ MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @AT@ 2310 @LENGTH@ 65
------INS SimpleType@@Field @TO@ VariableDeclarationStatement@@Field modifiersField=Field.class.getDeclaredField("modifiers"); @AT@ 2310 @LENGTH@ 5
------INS VariableDeclarationFragment@@modifiersField=Field.class.getDeclaredField("modifiers") @TO@ VariableDeclarationStatement@@Field modifiersField=Field.class.getDeclaredField("modifiers"); @AT@ 2316 @LENGTH@ 58
---------INS SimpleName@@modifiersField @TO@ VariableDeclarationFragment@@modifiersField=Field.class.getDeclaredField("modifiers") @AT@ 2316 @LENGTH@ 14
---------INS MethodInvocation@@Field.class.getDeclaredField("modifiers") @TO@ VariableDeclarationFragment@@modifiersField=Field.class.getDeclaredField("modifiers") @AT@ 2333 @LENGTH@ 41
------------INS TypeLiteral@@Field.class @TO@ MethodInvocation@@Field.class.getDeclaredField("modifiers") @AT@ 2333 @LENGTH@ 11
------------INS SimpleName@@MethodName:getDeclaredField:["modifiers"] @TO@ MethodInvocation@@Field.class.getDeclaredField("modifiers") @AT@ 2345 @LENGTH@ 29
---------------INS StringLiteral@@"modifiers" @TO@ SimpleName@@MethodName:getDeclaredField:["modifiers"] @AT@ 2362 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:modifiersField.setAccessible(true) @TO@ MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @AT@ 2384 @LENGTH@ 35
------INS MethodInvocation@@modifiersField.setAccessible(true) @TO@ ExpressionStatement@@MethodInvocation:modifiersField.setAccessible(true) @AT@ 2384 @LENGTH@ 34
---------INS SimpleName@@Name:modifiersField @TO@ MethodInvocation@@modifiersField.setAccessible(true) @AT@ 2384 @LENGTH@ 14
---------INS SimpleName@@MethodName:setAccessible:[true] @TO@ MethodInvocation@@modifiersField.setAccessible(true) @AT@ 2399 @LENGTH@ 19
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setAccessible:[true] @AT@ 2413 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:modifiersField.setInt(field,field.getModifiers() & ~Modifier.FINAL) @TO@ MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @AT@ 2428 @LENGTH@ 69
------INS MethodInvocation@@modifiersField.setInt(field,field.getModifiers() & ~Modifier.FINAL) @TO@ ExpressionStatement@@MethodInvocation:modifiersField.setInt(field,field.getModifiers() & ~Modifier.FINAL) @AT@ 2428 @LENGTH@ 68
---------INS SimpleName@@Name:modifiersField @TO@ MethodInvocation@@modifiersField.setInt(field,field.getModifiers() & ~Modifier.FINAL) @AT@ 2428 @LENGTH@ 14
---------INS SimpleName@@MethodName:setInt:[field, field.getModifiers() & ~Modifier.FINAL] @TO@ MethodInvocation@@modifiersField.setInt(field,field.getModifiers() & ~Modifier.FINAL) @AT@ 2443 @LENGTH@ 53
------------INS SimpleName@@field @TO@ SimpleName@@MethodName:setInt:[field, field.getModifiers() & ~Modifier.FINAL] @AT@ 2450 @LENGTH@ 5
------------INS InfixExpression@@field.getModifiers() & ~Modifier.FINAL @TO@ SimpleName@@MethodName:setInt:[field, field.getModifiers() & ~Modifier.FINAL] @AT@ 2457 @LENGTH@ 38
---------------INS MethodInvocation@@field.getModifiers() @TO@ InfixExpression@@field.getModifiers() & ~Modifier.FINAL @AT@ 2457 @LENGTH@ 20
------------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.getModifiers() @AT@ 2457 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getModifiers:[] @TO@ MethodInvocation@@field.getModifiers() @AT@ 2463 @LENGTH@ 14
---------------INS Operator@@& @TO@ InfixExpression@@field.getModifiers() & ~Modifier.FINAL @AT@ 2477 @LENGTH@ 1
---------------INS PrefixExpression@@~Modifier.FINAL @TO@ InfixExpression@@field.getModifiers() & ~Modifier.FINAL @AT@ 2480 @LENGTH@ 15
------------------INS Operator@@~ @TO@ PrefixExpression@@~Modifier.FINAL @AT@ 2480 @LENGTH@ 1
------------------INS QualifiedName@@Modifier.FINAL @TO@ PrefixExpression@@~Modifier.FINAL @AT@ 2481 @LENGTH@ 14
---------------------INS SimpleName@@Modifier @TO@ QualifiedName@@Modifier.FINAL @AT@ 2481 @LENGTH@ 8
---------------------INS SimpleName@@FINAL @TO@ QualifiedName@@Modifier.FINAL @AT@ 2490 @LENGTH@ 5
---INS VariableDeclarationStatement@@Constructor<?> cns=CoreStaticTypeConverterLoader.class.getDeclaredConstructor(); @TO@ MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @AT@ 2506 @LENGTH@ 82
------INS ParameterizedType@@Constructor<?> @TO@ VariableDeclarationStatement@@Constructor<?> cns=CoreStaticTypeConverterLoader.class.getDeclaredConstructor(); @AT@ 2506 @LENGTH@ 14
---------INS SimpleType@@Constructor @TO@ ParameterizedType@@Constructor<?> @AT@ 2506 @LENGTH@ 11
---------INS WildcardType@@? @TO@ ParameterizedType@@Constructor<?> @AT@ 2518 @LENGTH@ 1
------INS VariableDeclarationFragment@@cns=CoreStaticTypeConverterLoader.class.getDeclaredConstructor() @TO@ VariableDeclarationStatement@@Constructor<?> cns=CoreStaticTypeConverterLoader.class.getDeclaredConstructor(); @AT@ 2521 @LENGTH@ 66
---------INS SimpleName@@cns @TO@ VariableDeclarationFragment@@cns=CoreStaticTypeConverterLoader.class.getDeclaredConstructor() @AT@ 2521 @LENGTH@ 3
---------INS MethodInvocation@@CoreStaticTypeConverterLoader.class.getDeclaredConstructor() @TO@ VariableDeclarationFragment@@cns=CoreStaticTypeConverterLoader.class.getDeclaredConstructor() @AT@ 2527 @LENGTH@ 60
------------INS TypeLiteral@@CoreStaticTypeConverterLoader.class @TO@ MethodInvocation@@CoreStaticTypeConverterLoader.class.getDeclaredConstructor() @AT@ 2527 @LENGTH@ 35
------------INS SimpleName@@MethodName:getDeclaredConstructor:[] @TO@ MethodInvocation@@CoreStaticTypeConverterLoader.class.getDeclaredConstructor() @AT@ 2563 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:cns.setAccessible(true) @TO@ MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @AT@ 2597 @LENGTH@ 24
------INS MethodInvocation@@cns.setAccessible(true) @TO@ ExpressionStatement@@MethodInvocation:cns.setAccessible(true) @AT@ 2597 @LENGTH@ 23
---------INS SimpleName@@Name:cns @TO@ MethodInvocation@@cns.setAccessible(true) @AT@ 2597 @LENGTH@ 3
---------INS SimpleName@@MethodName:setAccessible:[true] @TO@ MethodInvocation@@cns.setAccessible(true) @AT@ 2601 @LENGTH@ 19
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setAccessible:[true] @AT@ 2615 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:field.set(null,cns.newInstance()) @TO@ MethodDeclaration@@private, void, MethodName:resetCoreConverters, Exception,  @AT@ 2630 @LENGTH@ 35
------INS MethodInvocation@@field.set(null,cns.newInstance()) @TO@ ExpressionStatement@@MethodInvocation:field.set(null,cns.newInstance()) @AT@ 2630 @LENGTH@ 34
---------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.set(null,cns.newInstance()) @AT@ 2630 @LENGTH@ 5
---------INS SimpleName@@MethodName:set:[null, cns.newInstance()] @TO@ MethodInvocation@@field.set(null,cns.newInstance()) @AT@ 2636 @LENGTH@ 28
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:set:[null, cns.newInstance()] @AT@ 2640 @LENGTH@ 4
------------INS MethodInvocation@@cns.newInstance() @TO@ SimpleName@@MethodName:set:[null, cns.newInstance()] @AT@ 2646 @LENGTH@ 17
---------------INS SimpleName@@Name:cns @TO@ MethodInvocation@@cns.newInstance() @AT@ 2646 @LENGTH@ 3
---------------INS SimpleName@@MethodName:newInstance:[] @TO@ MethodInvocation@@cns.newInstance() @AT@ 2650 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:http.authorizeRequests().antMatchers("/message/**").access("hasAuthority('SCOPE_message:read')").anyRequest().authenticated().and().oauth2().resourceServer().jwt().jwkSetUri(this.jwkSetUri) @TO@ MethodInvocation:http.authorizeRequests().antMatchers("/message/**").access("hasAuthority('SCOPE_message:read')").anyRequest().authenticated().and().oauth2ResourceServer().jwt().jwkSetUri(this.jwkSetUri) @AT@ 1268 @LENGTH@ 231
---UPD MethodInvocation@@http.authorizeRequests().antMatchers("/message/**").access("hasAuthority('SCOPE_message:read')").anyRequest().authenticated().and().oauth2().resourceServer().jwt().jwkSetUri(this.jwkSetUri) @TO@ http.authorizeRequests().antMatchers("/message/**").access("hasAuthority('SCOPE_message:read')").anyRequest().authenticated().and().oauth2ResourceServer().jwt().jwkSetUri(this.jwkSetUri) @AT@ 1268 @LENGTH@ 230
------UPD MethodInvocation@@MethodName:resourceServer:[] @TO@ MethodName:oauth2ResourceServer:[] @AT@ 1268 @LENGTH@ 185
------DEL MethodInvocation@@MethodName:oauth2:[] @AT@ 1268 @LENGTH@ 163


UPD TryStatement@@try {  connection=this.connectionFactory.createConnection();  if (connection == null) {    return;  }  channel=connection.createChannel(false);  channel.queueDeclarePassive(queue);  if (logger.isInfoEnabled()) {    logger.info("Queue '" + queue + "' is now available");  }} catch (IOException e) {  available=false;  if (logger.isWarnEnabled()) {    logger.warn("Queue '" + queue + "' is still not available");  }} finally {  RabbitUtils.closeChannel(channel);  RabbitUtils.closeConnection(connection);} @TO@ try {  channel=this.connectionFactory.createConnection().createChannel(false);  channel.queueDeclarePassive(queue);  if (logger.isInfoEnabled()) {    logger.info("Queue '" + queue + "' is now available");  }} catch (IOException e) {  available=false;  if (logger.isWarnEnabled()) {    logger.warn("Queue '" + queue + "' is still not available");  }} finally {  RabbitUtils.closeChannel(channel);  RabbitUtils.closeConnection(connection);} @AT@ 19402 @LENGTH@ 634
---UPD ExpressionStatement@@Assignment:connection=this.connectionFactory.createConnection() @TO@ Assignment:channel=this.connectionFactory.createConnection().createChannel(false) @AT@ 19414 @LENGTH@ 55
------UPD Assignment@@connection=this.connectionFactory.createConnection() @TO@ channel=this.connectionFactory.createConnection().createChannel(false) @AT@ 19414 @LENGTH@ 54
---------UPD SimpleName@@connection @TO@ channel @AT@ 19414 @LENGTH@ 10
---------UPD MethodInvocation@@this.connectionFactory.createConnection() @TO@ this.connectionFactory.createConnection().createChannel(false) @AT@ 19427 @LENGTH@ 41
------------INS MethodInvocation@@MethodName:createConnection:[] @TO@ MethodInvocation@@this.connectionFactory.createConnection() @AT@ 19445 @LENGTH@ 41
------------UPD SimpleName@@MethodName:createConnection:[] @TO@ MethodName:createChannel:[false] @AT@ 19450 @LENGTH@ 18
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:createConnection:[] @AT@ 19501 @LENGTH@ 5
---DEL IfStatement@@if (connection == null) {  return;} @AT@ 19501 @LENGTH@ 48
------DEL InfixExpression@@connection == null @AT@ 19505 @LENGTH@ 18
---------DEL SimpleName@@connection @AT@ 19505 @LENGTH@ 10
---------DEL Operator@@== @AT@ 19515 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 19519 @LENGTH@ 4
------DEL Block@@ThenBody:{  return;} @AT@ 19525 @LENGTH@ 24
---------DEL ReturnStatement@@ @AT@ 19534 @LENGTH@ 7
---DEL ExpressionStatement@@Assignment:channel=connection.createChannel(false) @AT@ 19556 @LENGTH@ 42
------DEL Assignment@@channel=connection.createChannel(false) @AT@ 19556 @LENGTH@ 41
---------DEL SimpleName@@channel @AT@ 19556 @LENGTH@ 7
---------DEL Operator@@= @AT@ 19563 @LENGTH@ 1
---------DEL MethodInvocation@@connection.createChannel(false) @AT@ 19566 @LENGTH@ 31
------------DEL SimpleName@@Name:connection @AT@ 19566 @LENGTH@ 10
------------DEL SimpleName@@MethodName:createChannel:[false] @AT@ 19577 @LENGTH@ 20
---------------DEL BooleanLiteral@@false @AT@ 19591 @LENGTH@ 5


UPD TryStatement@@try {  setQueryDir("ql/src/test/queries/clientpositive");  includesFrom(testConfigProps,"minillap.query.files");  includesFrom(testConfigProps,"minillap.shared.query.files");  setResultsDir("ql/src/test/results/clientpositive/llap");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("data/conf/llap");  setClusterType(MiniClusterType.llap);  setMetastoreType(MetastoreType.sql);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @TO@ try {  setQueryDir("ql/src/test/queries/clientpositive");  includesFrom(testConfigProps,"minillap.query.files");  includesFrom(testConfigProps,"minillap.shared.query.files");  excludeQuery("cbo_limit.q");  setResultsDir("ql/src/test/results/clientpositive/llap");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("data/conf/llap");  setClusterType(MiniClusterType.llap);  setMetastoreType(MetastoreType.sql);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @AT@ 5638 @LENGTH@ 667
---INS ExpressionStatement@@MethodInvocation:excludeQuery("cbo_limit.q") @TO@ TryStatement@@try {  setQueryDir("ql/src/test/queries/clientpositive");  includesFrom(testConfigProps,"minillap.query.files");  includesFrom(testConfigProps,"minillap.shared.query.files");  setResultsDir("ql/src/test/results/clientpositive/llap");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("data/conf/llap");  setClusterType(MiniClusterType.llap);  setMetastoreType(MetastoreType.sql);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @AT@ 5845 @LENGTH@ 28
------INS MethodInvocation@@excludeQuery("cbo_limit.q") @TO@ ExpressionStatement@@MethodInvocation:excludeQuery("cbo_limit.q") @AT@ 5845 @LENGTH@ 27
---------INS SimpleName@@MethodName:excludeQuery:["cbo_limit.q"] @TO@ MethodInvocation@@excludeQuery("cbo_limit.q") @AT@ 5845 @LENGTH@ 27
------------INS StringLiteral@@"cbo_limit.q" @TO@ SimpleName@@MethodName:excludeQuery:["cbo_limit.q"] @AT@ 5858 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:changePasswordWhenUsernameIsNotInLowercase,  @TO@ TypeDeclaration@@[public]InMemoryUserDetailsManagerTests,  @AT@ 1443 @LENGTH@ 396
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:changePasswordWhenUsernameIsNotInLowercase,  @AT@ 1443 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:changePasswordWhenUsernameIsNotInLowercase,  @AT@ 1450 @LENGTH@ 4
---INS SimpleName@@MethodName:changePasswordWhenUsernameIsNotInLowercase @TO@ MethodDeclaration@@public, void, MethodName:changePasswordWhenUsernameIsNotInLowercase,  @AT@ 1455 @LENGTH@ 42
---INS VariableDeclarationStatement@@UserDetails userNotLowerCase=User.withUserDetails(PasswordEncodedUser.user()).username("User").build(); @TO@ MethodDeclaration@@public, void, MethodName:changePasswordWhenUsernameIsNotInLowercase,  @AT@ 1504 @LENGTH@ 115
------INS SimpleType@@UserDetails @TO@ VariableDeclarationStatement@@UserDetails userNotLowerCase=User.withUserDetails(PasswordEncodedUser.user()).username("User").build(); @AT@ 1504 @LENGTH@ 11
------INS VariableDeclarationFragment@@userNotLowerCase=User.withUserDetails(PasswordEncodedUser.user()).username("User").build() @TO@ VariableDeclarationStatement@@UserDetails userNotLowerCase=User.withUserDetails(PasswordEncodedUser.user()).username("User").build(); @AT@ 1516 @LENGTH@ 102
---------INS SimpleName@@userNotLowerCase @TO@ VariableDeclarationFragment@@userNotLowerCase=User.withUserDetails(PasswordEncodedUser.user()).username("User").build() @AT@ 1516 @LENGTH@ 16
---------INS MethodInvocation@@User.withUserDetails(PasswordEncodedUser.user()).username("User").build() @TO@ VariableDeclarationFragment@@userNotLowerCase=User.withUserDetails(PasswordEncodedUser.user()).username("User").build() @AT@ 1535 @LENGTH@ 83
------------INS MethodInvocation@@MethodName:username:["User"] @TO@ MethodInvocation@@User.withUserDetails(PasswordEncodedUser.user()).username("User").build() @AT@ 1535 @LENGTH@ 70
---------------INS StringLiteral@@"User" @TO@ MethodInvocation@@MethodName:username:["User"] @AT@ 1598 @LENGTH@ 6
------------INS MethodInvocation@@MethodName:withUserDetails:[PasswordEncodedUser.user()] @TO@ MethodInvocation@@User.withUserDetails(PasswordEncodedUser.user()).username("User").build() @AT@ 1535 @LENGTH@ 48
---------------INS MethodInvocation@@PasswordEncodedUser.user() @TO@ MethodInvocation@@MethodName:withUserDetails:[PasswordEncodedUser.user()] @AT@ 1556 @LENGTH@ 26
------------------INS SimpleName@@Name:PasswordEncodedUser @TO@ MethodInvocation@@PasswordEncodedUser.user() @AT@ 1556 @LENGTH@ 19
------------------INS SimpleName@@MethodName:user:[] @TO@ MethodInvocation@@PasswordEncodedUser.user() @AT@ 1576 @LENGTH@ 6
------------INS SimpleName@@Name:User @TO@ MethodInvocation@@User.withUserDetails(PasswordEncodedUser.user()).username("User").build() @AT@ 1535 @LENGTH@ 4
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@User.withUserDetails(PasswordEncodedUser.user()).username("User").build() @AT@ 1611 @LENGTH@ 7
---INS VariableDeclarationStatement@@String newPassword="newPassword"; @TO@ MethodDeclaration@@public, void, MethodName:changePasswordWhenUsernameIsNotInLowercase,  @AT@ 1623 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String newPassword="newPassword"; @AT@ 1623 @LENGTH@ 6
------INS VariableDeclarationFragment@@newPassword="newPassword" @TO@ VariableDeclarationStatement@@String newPassword="newPassword"; @AT@ 1630 @LENGTH@ 27
---------INS SimpleName@@newPassword @TO@ VariableDeclarationFragment@@newPassword="newPassword" @AT@ 1630 @LENGTH@ 11
---------INS StringLiteral@@"newPassword" @TO@ VariableDeclarationFragment@@newPassword="newPassword" @AT@ 1644 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:this.manager.updatePassword(userNotLowerCase,newPassword) @TO@ MethodDeclaration@@public, void, MethodName:changePasswordWhenUsernameIsNotInLowercase,  @AT@ 1661 @LENGTH@ 59
------INS MethodInvocation@@this.manager.updatePassword(userNotLowerCase,newPassword) @TO@ ExpressionStatement@@MethodInvocation:this.manager.updatePassword(userNotLowerCase,newPassword) @AT@ 1661 @LENGTH@ 58
---------INS FieldAccess@@this.manager @TO@ MethodInvocation@@this.manager.updatePassword(userNotLowerCase,newPassword) @AT@ 1661 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.manager @AT@ 1661 @LENGTH@ 4
------------INS SimpleName@@manager @TO@ FieldAccess@@this.manager @AT@ 1666 @LENGTH@ 7
---------INS SimpleName@@MethodName:updatePassword:[userNotLowerCase, newPassword] @TO@ MethodInvocation@@this.manager.updatePassword(userNotLowerCase,newPassword) @AT@ 1674 @LENGTH@ 45
------------INS SimpleName@@userNotLowerCase @TO@ SimpleName@@MethodName:updatePassword:[userNotLowerCase, newPassword] @AT@ 1689 @LENGTH@ 16
------------INS SimpleName@@newPassword @TO@ SimpleName@@MethodName:updatePassword:[userNotLowerCase, newPassword] @AT@ 1707 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(this.manager.loadUserByUsername(userNotLowerCase.getUsername()).getPassword()).isEqualTo(newPassword) @TO@ MethodDeclaration@@public, void, MethodName:changePasswordWhenUsernameIsNotInLowercase,  @AT@ 1723 @LENGTH@ 113
------INS MethodInvocation@@assertThat(this.manager.loadUserByUsername(userNotLowerCase.getUsername()).getPassword()).isEqualTo(newPassword) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.manager.loadUserByUsername(userNotLowerCase.getUsername()).getPassword()).isEqualTo(newPassword) @AT@ 1723 @LENGTH@ 112
---------INS MethodInvocation@@MethodName:assertThat:[this.manager.loadUserByUsername(userNotLowerCase.getUsername()).getPassword()] @TO@ MethodInvocation@@assertThat(this.manager.loadUserByUsername(userNotLowerCase.getUsername()).getPassword()).isEqualTo(newPassword) @AT@ 1723 @LENGTH@ 89
------------INS MethodInvocation@@this.manager.loadUserByUsername(userNotLowerCase.getUsername()).getPassword() @TO@ MethodInvocation@@MethodName:assertThat:[this.manager.loadUserByUsername(userNotLowerCase.getUsername()).getPassword()] @AT@ 1734 @LENGTH@ 77
---------------INS MethodInvocation@@MethodName:loadUserByUsername:[userNotLowerCase.getUsername()] @TO@ MethodInvocation@@this.manager.loadUserByUsername(userNotLowerCase.getUsername()).getPassword() @AT@ 1734 @LENGTH@ 63
------------------INS MethodInvocation@@userNotLowerCase.getUsername() @TO@ MethodInvocation@@MethodName:loadUserByUsername:[userNotLowerCase.getUsername()] @AT@ 1766 @LENGTH@ 30
---------------------INS SimpleName@@Name:userNotLowerCase @TO@ MethodInvocation@@userNotLowerCase.getUsername() @AT@ 1766 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:getUsername:[] @TO@ MethodInvocation@@userNotLowerCase.getUsername() @AT@ 1783 @LENGTH@ 13
---------------INS FieldAccess@@this.manager @TO@ MethodInvocation@@this.manager.loadUserByUsername(userNotLowerCase.getUsername()).getPassword() @AT@ 1734 @LENGTH@ 12
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.manager @AT@ 1734 @LENGTH@ 4
------------------INS SimpleName@@manager @TO@ FieldAccess@@this.manager @AT@ 1739 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getPassword:[] @TO@ MethodInvocation@@this.manager.loadUserByUsername(userNotLowerCase.getUsername()).getPassword() @AT@ 1798 @LENGTH@ 13
---------INS SimpleName@@MethodName:isEqualTo:[newPassword] @TO@ MethodInvocation@@assertThat(this.manager.loadUserByUsername(userNotLowerCase.getUsername()).getPassword()).isEqualTo(newPassword) @AT@ 1813 @LENGTH@ 22
------------INS SimpleName@@newPassword @TO@ SimpleName@@MethodName:isEqualTo:[newPassword] @AT@ 1823 @LENGTH@ 11


UPD Block@@ThenBody:{  String defaultCacheRequirementName=InfinispanDefaultCacheRequirement.CONFIGURATION.resolve(CACHE_CONTAINER_NAME);  String legacyCacheRequirementName=InfinispanCacheRequirement.CONFIGURATION.resolve(CACHE_CONTAINER_NAME,LEGACY_CACHE_NAME);  String capabilityName=LEGACY_SECURITY_DOMAIN.getDynamicName(context.getCurrentAddress());  String cacheTypeAttributeName=SecurityDomainResourceDefinition.CACHE_TYPE.getName();  String templateCacheName=null;  if (!context.hasOptionalCapability(defaultCacheRequirementName,capabilityName,cacheTypeAttributeName) && context.hasOptionalCapability(legacyCacheRequirementName,capabilityName,cacheTypeAttributeName)) {    SecurityLogger.ROOT_LOGGER.defaultCacheRequirementMissing(CACHE_CONTAINER_NAME,LEGACY_CACHE_NAME);    templateCacheName=LEGACY_CACHE_NAME;  }  context.requireOptionalCapability(InfinispanCacheRequirement.CONFIGURATION.resolve(CACHE_CONTAINER_NAME,templateCacheName),capabilityName,cacheTypeAttributeName);  ServiceName configurationServiceName=InfinispanCacheRequirement.CONFIGURATION.getServiceName(context,CACHE_CONTAINER_NAME,securityDomain);  new TemplateConfigurationBuilder(configurationServiceName,CACHE_CONTAINER_NAME,securityDomain,templateCacheName).configure(context).build(target).install();  ServiceName cacheServiceName=InfinispanCacheRequirement.CACHE.getServiceName(context,CACHE_CONTAINER_NAME,securityDomain);  new CacheBuilder<>(cacheServiceName,CACHE_CONTAINER_NAME,securityDomain).configure(context).build(target).install();  builder.addDependency(cacheServiceName,ConcurrentMap.class,securityDomainService.getCacheInjector());} @TO@ ThenBody:{  String defaultCacheRequirementName=InfinispanDefaultCacheRequirement.CONFIGURATION.resolve(CACHE_CONTAINER_NAME);  String legacyCacheRequirementName=InfinispanCacheRequirement.CONFIGURATION.resolve(CACHE_CONTAINER_NAME,LEGACY_CACHE_NAME);  String capabilityName=LEGACY_SECURITY_DOMAIN.getDynamicName(context.getCurrentAddress());  String cacheTypeAttributeName=SecurityDomainResourceDefinition.CACHE_TYPE.getName();  String templateCacheName=null;  if (!context.hasOptionalCapability(defaultCacheRequirementName,capabilityName,cacheTypeAttributeName) && context.hasOptionalCapability(legacyCacheRequirementName,capabilityName,cacheTypeAttributeName)) {    SecurityLogger.ROOT_LOGGER.defaultCacheRequirementMissing(CACHE_CONTAINER_NAME,LEGACY_CACHE_NAME);    templateCacheName=LEGACY_CACHE_NAME;  }  context.requireOptionalCapability(InfinispanCacheRequirement.CONFIGURATION.resolve(CACHE_CONTAINER_NAME,templateCacheName),capabilityName,cacheTypeAttributeName);  ServiceName configurationServiceName=InfinispanCacheRequirement.CONFIGURATION.getServiceName(context,CACHE_CONTAINER_NAME,securityDomain);  new TemplateConfigurationServiceConfigurator(configurationServiceName,CACHE_CONTAINER_NAME,securityDomain,templateCacheName).configure(context).build(target).install();  ServiceName cacheServiceName=InfinispanCacheRequirement.CACHE.getServiceName(context,CACHE_CONTAINER_NAME,securityDomain);  new CacheServiceConfigurator<>(cacheServiceName,CACHE_CONTAINER_NAME,securityDomain).configure(context).build(target).install();  builder.addDependency(cacheServiceName,ConcurrentMap.class,securityDomainService.getCacheInjector());} @AT@ 9912 @LENGTH@ 1826
---UPD ExpressionStatement@@MethodInvocation:new TemplateConfigurationBuilder(configurationServiceName,CACHE_CONTAINER_NAME,securityDomain,templateCacheName).configure(context).build(target).install() @TO@ MethodInvocation:new TemplateConfigurationServiceConfigurator(configurationServiceName,CACHE_CONTAINER_NAME,securityDomain,templateCacheName).configure(context).build(target).install() @AT@ 11182 @LENGTH@ 159
------UPD MethodInvocation@@new TemplateConfigurationBuilder(configurationServiceName,CACHE_CONTAINER_NAME,securityDomain,templateCacheName).configure(context).build(target).install() @TO@ new TemplateConfigurationServiceConfigurator(configurationServiceName,CACHE_CONTAINER_NAME,securityDomain,templateCacheName).configure(context).build(target).install() @AT@ 11182 @LENGTH@ 158
---------UPD ClassInstanceCreation@@TemplateConfigurationBuilder[configurationServiceName, CACHE_CONTAINER_NAME, securityDomain, templateCacheName] @TO@ TemplateConfigurationServiceConfigurator[configurationServiceName, CACHE_CONTAINER_NAME, securityDomain, templateCacheName] @AT@ 11182 @LENGTH@ 115
------------UPD SimpleType@@TemplateConfigurationBuilder @TO@ TemplateConfigurationServiceConfigurator @AT@ 11186 @LENGTH@ 28
---UPD ExpressionStatement@@MethodInvocation:new CacheBuilder<>(cacheServiceName,CACHE_CONTAINER_NAME,securityDomain).configure(context).build(target).install() @TO@ MethodInvocation:new CacheServiceConfigurator<>(cacheServiceName,CACHE_CONTAINER_NAME,securityDomain).configure(context).build(target).install() @AT@ 11493 @LENGTH@ 118
------UPD MethodInvocation@@new CacheBuilder<>(cacheServiceName,CACHE_CONTAINER_NAME,securityDomain).configure(context).build(target).install() @TO@ new CacheServiceConfigurator<>(cacheServiceName,CACHE_CONTAINER_NAME,securityDomain).configure(context).build(target).install() @AT@ 11493 @LENGTH@ 117
---------UPD ClassInstanceCreation@@CacheBuilder<>[cacheServiceName, CACHE_CONTAINER_NAME, securityDomain] @TO@ CacheServiceConfigurator<>[cacheServiceName, CACHE_CONTAINER_NAME, securityDomain] @AT@ 11493 @LENGTH@ 74
------------UPD ParameterizedType@@CacheBuilder<> @TO@ CacheServiceConfigurator<> @AT@ 11497 @LENGTH@ 14
---------------UPD SimpleType@@CacheBuilder @TO@ CacheServiceConfigurator @AT@ 11497 @LENGTH@ 12


UPD TypeDeclaration@@[public]SocketBindingProtocolResourceDefinition, ProtocolResourceDefinition<P> @TO@ [public]SocketBindingProtocolResourceDefinition, ProtocolResourceDefinition @AT@ 2159 @LENGTH@ 2315
---INS SimpleType@@ProtocolResourceDefinition @TO@ TypeDeclaration@@[public]SocketBindingProtocolResourceDefinition, ProtocolResourceDefinition<P> @AT@ 2067 @LENGTH@ 26
---DEL ParameterizedType@@ProtocolResourceDefinition<P> @AT@ 2240 @LENGTH@ 29
------DEL SimpleType@@ProtocolResourceDefinition @AT@ 2240 @LENGTH@ 26
------DEL SimpleType@@P @AT@ 2267 @LENGTH@ 1


INS MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @TO@ TypeDeclaration@@[public]SpringBootAutoConfigurationMojo, AbstractMojo @AT@ 34285 @LENGTH@ 6340
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34285 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34293 @LENGTH@ 4
---INS SimpleName@@MethodName:createComponentConfigurationSource @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34298 @LENGTH@ 34
---INS SingleVariableDeclaration@@String packageName @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34333 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String packageName @AT@ 34333 @LENGTH@ 6
------INS SimpleName@@packageName @TO@ SingleVariableDeclaration@@String packageName @AT@ 34340 @LENGTH@ 11
---INS SingleVariableDeclaration@@ComponentModel model @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34353 @LENGTH@ 20
------INS SimpleType@@ComponentModel @TO@ SingleVariableDeclaration@@ComponentModel model @AT@ 34353 @LENGTH@ 14
------INS SimpleName@@model @TO@ SingleVariableDeclaration@@ComponentModel model @AT@ 34368 @LENGTH@ 5
---INS SingleVariableDeclaration@@String overrideComponentName @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34375 @LENGTH@ 28
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String overrideComponentName @AT@ 34375 @LENGTH@ 6
------INS SimpleName@@overrideComponentName @TO@ SingleVariableDeclaration@@String overrideComponentName @AT@ 34382 @LENGTH@ 21
---INS SimpleType@@MojoFailureException @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34412 @LENGTH@ 20
---MOV VariableDeclarationStatement@@final JavaClassSource javaClass=Roaster.create(JavaClassSource.class); @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34443 @LENGTH@ 72
---MOV VariableDeclarationStatement@@int pos=model.getJavaType().lastIndexOf("."); @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34525 @LENGTH@ 47
---MOV VariableDeclarationStatement@@String name=model.getJavaType().substring(pos + 1); @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34581 @LENGTH@ 53
---MOV ExpressionStatement@@Assignment:name=name.replace("Component","ComponentConfiguration") @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34643 @LENGTH@ 59
---MOV ExpressionStatement@@MethodInvocation:javaClass.setPackage(packageName).setName(name) @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34711 @LENGTH@ 48
---MOV ExpressionStatement@@MethodInvocation:javaClass.extendSuperType(Roaster.create(JavaClassSource.class).setName("ComponentConfigurationPropertiesCommon")) @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34768 @LENGTH@ 115
---MOV ExpressionStatement@@MethodInvocation:javaClass.addImport("org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon") @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 34892 @LENGTH@ 91
---MOV VariableDeclarationStatement@@PropertySource<JavaClassSource> bogus=javaClass.addProperty("java.lang.Boolean","enabled"); @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 35106 @LENGTH@ 94
---MOV VariableDeclarationStatement@@String scheme=overrideComponentName != null ? overrideComponentName : model.getScheme(); @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 35209 @LENGTH@ 90
---MOV ExpressionStatement@@MethodInvocation:bogus.getField().getJavaDoc().setText("Whether to enable auto configuration of the " + scheme + " component. This is enabled by default.") @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 35308 @LENGTH@ 139
---MOV ExpressionStatement@@MethodInvocation:bogus.removeAccessor() @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 35456 @LENGTH@ 23
---MOV ExpressionStatement@@MethodInvocation:bogus.removeMutator() @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 35488 @LENGTH@ 22
---MOV VariableDeclarationStatement@@String doc="Generated by camel-package-maven-plugin - do not edit this file!"; @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 35520 @LENGTH@ 80
---MOV IfStatement@@if (!Strings.isBlank(model.getDescription())) {  doc=model.getDescription() + "\n\n" + doc;} @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 35609 @LENGTH@ 114
---MOV ExpressionStatement@@MethodInvocation:javaClass.getJavaDoc().setFullText(doc) @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 35732 @LENGTH@ 40
---MOV VariableDeclarationStatement@@String prefix="camel.component." + (overrideComponentName != null ? overrideComponentName : model.getScheme()); @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 35782 @LENGTH@ 113
---MOV ExpressionStatement@@Assignment:prefix=prefix.toLowerCase(Locale.US) @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 35949 @LENGTH@ 39
---MOV ExpressionStatement@@MethodInvocation:javaClass.addAnnotation(Generated.class).setStringValue("value",SpringBootAutoConfigurationMojo.class.getName()) @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 35997 @LENGTH@ 114
---MOV ExpressionStatement@@MethodInvocation:javaClass.addAnnotation("org.springframework.boot.context.properties.ConfigurationProperties").setStringValue("prefix",prefix) @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 36120 @LENGTH@ 128
---MOV VariableDeclarationStatement@@Set<JavaClassSource> nestedTypes=new HashSet<>(); @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 36258 @LENGTH@ 51
---MOV EnhancedForStatement@@for (ComponentOptionModel option : model.getComponentOptions()) {  if (skipComponentOption(model,option)) {    continue;  }  String type=option.getJavaType();  type=getSimpleJavaType(type);  JavaClassSource javaClassSource=readJavaType(type);  boolean isNestedProperty=isNestedProperty(nestedTypes,javaClassSource);  if (isNestedProperty) {    type=option.getShortJavaType() + INNER_TYPE_SUFFIX;  }  boolean complex=isComplexType(option) && !isNestedProperty && Strings.isBlank(option.getEnums());  if (complex) {    type="java.lang.String";  }  PropertySource<JavaClassSource> prop=javaClass.addProperty(type,option.getName());  if (ADD_NESTED_CONFIGURATION_PROPERTY) {    if (!type.endsWith(INNER_TYPE_SUFFIX) && type.indexOf('[') == -1 && INCLUDE_INNER_PATTERN.matcher(type).matches() && Strings.isBlank(option.getEnums()) && (javaClassSource == null || (javaClassSource.isClass() && !javaClassSource.isAbstract()))) {      prop.getField().addAnnotation(NestedConfigurationProperty.class);    }  }  if ("true".equals(option.getDeprecated())) {    prop.getField().addAnnotation(Deprecated.class);    prop.getAccessor().addAnnotation(Deprecated.class);    prop.getMutator().addAnnotation(Deprecated.class);    prop.getAccessor().addAnnotation(DeprecatedConfigurationProperty.class);  }  if (!Strings.isBlank(option.getDescription())) {    String desc=option.getDescription();    if (complex) {      if (!desc.endsWith(".")) {        desc=desc + ".";      }      desc=desc + " The option is a " + option.getJavaType()+ " type.";    }    prop.getField().getJavaDoc().setFullText(desc);  }  if (!Strings.isBlank(option.getDefaultValue())) {    if ("java.lang.String".equals(option.getJavaType())) {      prop.getField().setStringInitializer(option.getDefaultValue());    } else     if ("long".equals(option.getJavaType()) || "java.lang.Long".equals(option.getJavaType())) {      String value=option.getDefaultValue() + "L";      prop.getField().setLiteralInitializer(value);    } else     if ("integer".equals(option.getType()) || "boolean".equals(option.getType())) {      prop.getField().setLiteralInitializer(option.getDefaultValue());    } else     if (!Strings.isBlank(option.getEnums())) {      String enumShortName=type.substring(type.lastIndexOf(".") + 1);      prop.getField().setLiteralInitializer(enumShortName + "." + option.getDefaultValue());      javaClass.addImport(model.getJavaType());    }  }} @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 36318 @LENGTH@ 4042
---INS ExpressionStatement@@MethodInvocation:createComponentConfigurationSourceInnerClass(javaClass,nestedTypes,model) @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 40370 @LENGTH@ 76
------INS MethodInvocation@@createComponentConfigurationSourceInnerClass(javaClass,nestedTypes,model) @TO@ ExpressionStatement@@MethodInvocation:createComponentConfigurationSourceInnerClass(javaClass,nestedTypes,model) @AT@ 40370 @LENGTH@ 75
---------INS SimpleName@@MethodName:createComponentConfigurationSourceInnerClass:[javaClass, nestedTypes, model] @TO@ MethodInvocation@@createComponentConfigurationSourceInnerClass(javaClass,nestedTypes,model) @AT@ 40370 @LENGTH@ 75
------------INS SimpleName@@javaClass @TO@ SimpleName@@MethodName:createComponentConfigurationSourceInnerClass:[javaClass, nestedTypes, model] @AT@ 40415 @LENGTH@ 9
------------INS SimpleName@@nestedTypes @TO@ SimpleName@@MethodName:createComponentConfigurationSourceInnerClass:[javaClass, nestedTypes, model] @AT@ 40426 @LENGTH@ 11
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:createComponentConfigurationSourceInnerClass:[javaClass, nestedTypes, model] @AT@ 40439 @LENGTH@ 5
---MOV ExpressionStatement@@MethodInvocation:sortImports(javaClass) @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 48787 @LENGTH@ 23
---MOV VariableDeclarationStatement@@String fileName=packageName.replaceAll("\\.","\\/") + "/" + name+ ".java"; @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 48820 @LENGTH@ 78
---MOV ExpressionStatement@@MethodInvocation:writeSourceIfChanged(javaClass,fileName) @TO@ MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @AT@ 48908 @LENGTH@ 42


UPD ReturnStatement@@BooleanLiteral:true @TO@ BooleanLiteral:false @AT@ 2795 @LENGTH@ 12
---UPD BooleanLiteral@@true @TO@ false @AT@ 2802 @LENGTH@ 4


UPD MethodDeclaration@@public, RepositoryItemReaderBuilder<T>, MethodName:repository, RepositoryMethodReference repositoryMethodReference,  @TO@ public, RepositoryItemReaderBuilder<T>, MethodName:repository, RepositoryMethodReference<?> repositoryMethodReference,  @AT@ 6816 @LENGTH@ 184
---UPD SingleVariableDeclaration@@RepositoryMethodReference repositoryMethodReference @TO@ RepositoryMethodReference<?> repositoryMethodReference @AT@ 6865 @LENGTH@ 51
------DEL SimpleType@@RepositoryMethodReference @AT@ 6865 @LENGTH@ 25
------INS ParameterizedType@@RepositoryMethodReference<?> @TO@ SingleVariableDeclaration@@RepositoryMethodReference repositoryMethodReference @AT@ 6868 @LENGTH@ 28
---------INS SimpleType@@RepositoryMethodReference @TO@ ParameterizedType@@RepositoryMethodReference<?> @AT@ 6868 @LENGTH@ 25
---------INS WildcardType@@? @TO@ ParameterizedType@@RepositoryMethodReference<?> @AT@ 6894 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:result.add(new RegistryBuilder<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY),containerName,cacheName)) @TO@ MethodInvocation:result.add(new RegistryServiceConfigurator<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY),containerName,cacheName)) @AT@ 2607 @LENGTH@ 122
---UPD MethodInvocation@@result.add(new RegistryBuilder<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY),containerName,cacheName)) @TO@ result.add(new RegistryServiceConfigurator<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY),containerName,cacheName)) @AT@ 2607 @LENGTH@ 121
------UPD SimpleName@@MethodName:add:[new RegistryBuilder<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY),containerName,cacheName)] @TO@ MethodName:add:[new RegistryServiceConfigurator<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY),containerName,cacheName)] @AT@ 2614 @LENGTH@ 114
---------UPD ClassInstanceCreation@@RegistryBuilder<>[registry.getServiceName(ClusteringCacheRequirement.REGISTRY), containerName, cacheName] @TO@ RegistryServiceConfigurator<>[registry.getServiceName(ClusteringCacheRequirement.REGISTRY), containerName, cacheName] @AT@ 2618 @LENGTH@ 109
------------UPD ParameterizedType@@RegistryBuilder<> @TO@ RegistryServiceConfigurator<> @AT@ 2622 @LENGTH@ 17
---------------UPD SimpleType@@RegistryBuilder @TO@ RegistryServiceConfigurator @AT@ 2622 @LENGTH@ 15


UPD TryStatement@@try {  if (client != null) {    client.close();  }}  finally {  client=null;} @TO@ try {  try {    client.close();  } catch (  Exception e) {  }}  finally {  client=null;} @AT@ 3822 @LENGTH@ 108
---INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ TryStatement@@try {  if (client != null) {    client.close();  }}  finally {  client=null;} @AT@ 3834 @LENGTH@ 149
------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3864 @LENGTH@ 15
------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3872 @LENGTH@ 111
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 3879 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3879 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3889 @LENGTH@ 1
---DEL IfStatement@@if (client != null) {  client.close();} @AT@ 3834 @LENGTH@ 53
------DEL InfixExpression@@client != null @AT@ 3838 @LENGTH@ 14
---------DEL SimpleName@@client @AT@ 3838 @LENGTH@ 6
---------DEL Operator@@!= @AT@ 3844 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 3848 @LENGTH@ 4
------DEL Block@@ThenBody:{  client.close();} @AT@ 3854 @LENGTH@ 33


DEL FieldDeclaration@@private, ClientRegistrationRepository, [clientRegistrationRepository] @AT@ 2567 @LENGTH@ 66
---DEL Modifier@@private @AT@ 2567 @LENGTH@ 7
---DEL SimpleType@@ClientRegistrationRepository @AT@ 2575 @LENGTH@ 28
---DEL VariableDeclarationFragment@@clientRegistrationRepository @AT@ 2604 @LENGTH@ 28
------DEL SimpleName@@clientRegistrationRepository @AT@ 2604 @LENGTH@ 28


UPD ReturnStatement@@ClassInstanceCreation:new DistributableSessionManagerFactoryBuilder(name,configuration,PROVIDER) @TO@ ClassInstanceCreation:new DistributableSessionManagerFactoryServiceConfigurator(name,configuration,PROVIDER) @AT@ 2883 @LENGTH@ 84
---UPD ClassInstanceCreation@@DistributableSessionManagerFactoryBuilder[name, configuration, PROVIDER] @TO@ DistributableSessionManagerFactoryServiceConfigurator[name, configuration, PROVIDER] @AT@ 2890 @LENGTH@ 76
------UPD SimpleType@@DistributableSessionManagerFactoryBuilder @TO@ DistributableSessionManagerFactoryServiceConfigurator @AT@ 2894 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Creating folder with path '" + path + "' in parent_folder(id="+ parentFolderId+ ")") @TO@ MethodInvocation:LOG.debug("Creating folder with path '" + Arrays.toString(path) + "' in parent_folder(id="+ parentFolderId+ ")") @AT@ 7766 @LENGTH@ 98
---UPD MethodInvocation@@LOG.debug("Creating folder with path '" + path + "' in parent_folder(id="+ parentFolderId+ ")") @TO@ LOG.debug("Creating folder with path '" + Arrays.toString(path) + "' in parent_folder(id="+ parentFolderId+ ")") @AT@ 7766 @LENGTH@ 97
------UPD SimpleName@@MethodName:debug:["Creating folder with path '" + path + "' in parent_folder(id="+ parentFolderId+ ")"] @TO@ MethodName:debug:["Creating folder with path '" + Arrays.toString(path) + "' in parent_folder(id="+ parentFolderId+ ")"] @AT@ 7770 @LENGTH@ 93
---------UPD InfixExpression@@"Creating folder with path '" + path + "' in parent_folder(id="+ parentFolderId+ ")" @TO@ "Creating folder with path '" + Arrays.toString(path) + "' in parent_folder(id="+ parentFolderId+ ")" @AT@ 7776 @LENGTH@ 86
------------INS MethodInvocation@@Arrays.toString(path) @TO@ InfixExpression@@"Creating folder with path '" + path + "' in parent_folder(id="+ parentFolderId+ ")" @AT@ 7808 @LENGTH@ 21
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(path) @AT@ 7808 @LENGTH@ 6
---------------INS SimpleName@@MethodName:toString:[path] @TO@ MethodInvocation@@Arrays.toString(path) @AT@ 7815 @LENGTH@ 14
------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:toString:[path] @AT@ 7824 @LENGTH@ 4
------------DEL SimpleName@@path @AT@ 7808 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:makeLocationQualified(tbl.getDbName(),tbl.getTTable().getSd(),tbl.getTableName(),conf) @TO@ MethodInvocation:makeLocationQualified(tbl.getDbName(),tbl,conf) @AT@ 204033 @LENGTH@ 90
---UPD MethodInvocation@@makeLocationQualified(tbl.getDbName(),tbl.getTTable().getSd(),tbl.getTableName(),conf) @TO@ makeLocationQualified(tbl.getDbName(),tbl,conf) @AT@ 204033 @LENGTH@ 89
------UPD SimpleName@@MethodName:makeLocationQualified:[tbl.getDbName(), tbl.getTTable().getSd(), tbl.getTableName(), conf] @TO@ MethodName:makeLocationQualified:[tbl.getDbName(), tbl, conf] @AT@ 204033 @LENGTH@ 89
---------DEL MethodInvocation@@tbl.getTTable().getSd() @AT@ 204072 @LENGTH@ 23
------------DEL MethodInvocation@@MethodName:getTTable:[] @AT@ 204072 @LENGTH@ 15
------------DEL SimpleName@@Name:tbl @AT@ 204072 @LENGTH@ 3
------------DEL SimpleName@@MethodName:getSd:[] @AT@ 204088 @LENGTH@ 7
---------INS SimpleName@@tbl @TO@ SimpleName@@MethodName:makeLocationQualified:[tbl.getDbName(), tbl.getTTable().getSd(), tbl.getTableName(), conf] @AT@ 204072 @LENGTH@ 3
---------DEL MethodInvocation@@tbl.getTableName() @AT@ 204097 @LENGTH@ 18
------------DEL SimpleName@@Name:tbl @AT@ 204097 @LENGTH@ 3
------------DEL SimpleName@@MethodName:getTableName:[] @AT@ 204101 @LENGTH@ 14


UPD ReturnStatement@@MethodInvocation:this.reactiveJwkSource.get(selector).map(jwkList -> createClaimsSet(parsedToken,jwkList)).map(set -> createJwt(parsedToken,set)).onErrorMap(e -> new JwtException("An error occurred while attempting to decode the Jwt: ",e)) @TO@ MethodInvocation:this.reactiveJwkSource.get(selector).onErrorMap(e -> new IllegalStateException("Could not obtain the keys",e)).map(jwkList -> createClaimsSet(parsedToken,jwkList)).map(set -> createJwt(parsedToken,set)).onErrorMap(e -> !(e instanceof IllegalStateException),e -> new JwtException("An error occurred while attempting to decode the Jwt: ",e)) @AT@ 4911 @LENGTH@ 248
---UPD MethodInvocation@@this.reactiveJwkSource.get(selector).map(jwkList -> createClaimsSet(parsedToken,jwkList)).map(set -> createJwt(parsedToken,set)).onErrorMap(e -> new JwtException("An error occurred while attempting to decode the Jwt: ",e)) @TO@ this.reactiveJwkSource.get(selector).onErrorMap(e -> new IllegalStateException("Could not obtain the keys",e)).map(jwkList -> createClaimsSet(parsedToken,jwkList)).map(set -> createJwt(parsedToken,set)).onErrorMap(e -> !(e instanceof IllegalStateException),e -> new JwtException("An error occurred while attempting to decode the Jwt: ",e)) @AT@ 4918 @LENGTH@ 240
------INS MethodInvocation@@MethodName:onErrorMap:[e -> new IllegalStateException("Could not obtain the keys",e)] @TO@ MethodInvocation@@this.reactiveJwkSource.get(selector).map(jwkList -> createClaimsSet(parsedToken,jwkList)).map(set -> createJwt(parsedToken,set)).onErrorMap(e -> new JwtException("An error occurred while attempting to decode the Jwt: ",e)) @AT@ 4918 @LENGTH@ 116
---------INS LambdaExpression@@e -> new IllegalStateException("Could not obtain the keys",e) @TO@ MethodInvocation@@MethodName:onErrorMap:[e -> new IllegalStateException("Could not obtain the keys",e)] @AT@ 4971 @LENGTH@ 62
------------INS VariableDeclarationFragment@@e @TO@ LambdaExpression@@e -> new IllegalStateException("Could not obtain the keys",e) @AT@ 4971 @LENGTH@ 1
---------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e @AT@ 4971 @LENGTH@ 1
------------INS ClassInstanceCreation@@IllegalStateException["Could not obtain the keys", e] @TO@ LambdaExpression@@e -> new IllegalStateException("Could not obtain the keys",e) @AT@ 4976 @LENGTH@ 57
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["Could not obtain the keys", e] @AT@ 4976 @LENGTH@ 3
---------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["Could not obtain the keys", e] @AT@ 4980 @LENGTH@ 21
---------------INS StringLiteral@@"Could not obtain the keys" @TO@ ClassInstanceCreation@@IllegalStateException["Could not obtain the keys", e] @AT@ 5002 @LENGTH@ 27
---------------INS SimpleName@@e @TO@ ClassInstanceCreation@@IllegalStateException["Could not obtain the keys", e] @AT@ 5031 @LENGTH@ 1
------UPD SimpleName@@MethodName:onErrorMap:[e -> new JwtException("An error occurred while attempting to decode the Jwt: ",e)] @TO@ MethodName:onErrorMap:[e -> !(e instanceof IllegalStateException), e -> new JwtException("An error occurred while attempting to decode the Jwt: ",e)] @AT@ 5064 @LENGTH@ 94
---------INS LambdaExpression@@e -> !(e instanceof IllegalStateException) @TO@ SimpleName@@MethodName:onErrorMap:[e -> new JwtException("An error occurred while attempting to decode the Jwt: ",e)] @AT@ 5155 @LENGTH@ 42
------------INS VariableDeclarationFragment@@e @TO@ LambdaExpression@@e -> !(e instanceof IllegalStateException) @AT@ 5155 @LENGTH@ 1
---------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e @AT@ 5155 @LENGTH@ 1
------------INS PrefixExpression@@!(e instanceof IllegalStateException) @TO@ LambdaExpression@@e -> !(e instanceof IllegalStateException) @AT@ 5160 @LENGTH@ 37
---------------INS Operator@@! @TO@ PrefixExpression@@!(e instanceof IllegalStateException) @AT@ 5160 @LENGTH@ 1
---------------INS ParenthesizedExpression@@(e instanceof IllegalStateException) @TO@ PrefixExpression@@!(e instanceof IllegalStateException) @AT@ 5161 @LENGTH@ 36
------------------INS InstanceofExpression@@e instanceof IllegalStateException @TO@ ParenthesizedExpression@@(e instanceof IllegalStateException) @AT@ 5162 @LENGTH@ 34
---------------------INS SimpleName@@e @TO@ InstanceofExpression@@e instanceof IllegalStateException @AT@ 5162 @LENGTH@ 1
---------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@e instanceof IllegalStateException @AT@ 5164 @LENGTH@ 10
---------------------INS SimpleType@@IllegalStateException @TO@ InstanceofExpression@@e instanceof IllegalStateException @AT@ 5175 @LENGTH@ 21


UPD VariableDeclarationStatement@@String baseUrl=UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replacePath(request.getContextPath()).build().toUriString(); @TO@ String baseUrl=UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replaceQuery(null).replacePath(request.getContextPath()).build().toUriString(); @AT@ 7552 @LENGTH@ 164
---UPD VariableDeclarationFragment@@baseUrl=UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replacePath(request.getContextPath()).build().toUriString() @TO@ baseUrl=UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replaceQuery(null).replacePath(request.getContextPath()).build().toUriString() @AT@ 7559 @LENGTH@ 156
------UPD MethodInvocation@@UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replacePath(request.getContextPath()).build().toUriString() @TO@ UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replaceQuery(null).replacePath(request.getContextPath()).build().toUriString() @AT@ 7569 @LENGTH@ 146
---------INS MethodInvocation@@MethodName:replaceQuery:[null] @TO@ MethodInvocation@@UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replacePath(request.getContextPath()).build().toUriString() @AT@ 7569 @LENGTH@ 95
------------INS NullLiteral@@null @TO@ MethodInvocation@@MethodName:replaceQuery:[null] @AT@ 7659 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:authenticationWhenOAuth2UserNotFoundThenSuccess,  @TO@ public, void, MethodName:authenticationWhenOAuth2UserFoundThenSuccess,  @AT@ 6955 @LENGTH@ 852
---UPD SimpleName@@MethodName:authenticationWhenOAuth2UserNotFoundThenSuccess @TO@ MethodName:authenticationWhenOAuth2UserFoundThenSuccess @AT@ 6967 @LENGTH@ 47


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3611 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3631 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 3613 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3641 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3655 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 3662 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3662 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3672 @LENGTH@ 1


UPD FieldDeclaration@@private, ScheduledFuture, [futureCleanup] @TO@ private, ScheduledFuture<?>, [futureCleanup] @AT@ 12088 @LENGTH@ 38
---INS ParameterizedType@@ScheduledFuture<?> @TO@ FieldDeclaration@@private, ScheduledFuture, [futureCleanup] @AT@ 12096 @LENGTH@ 18
------INS SimpleType@@ScheduledFuture @TO@ ParameterizedType@@ScheduledFuture<?> @AT@ 12096 @LENGTH@ 15
------INS WildcardType@@? @TO@ ParameterizedType@@ScheduledFuture<?> @AT@ 12112 @LENGTH@ 1
---DEL SimpleType@@ScheduledFuture @AT@ 12096 @LENGTH@ 15


MOV FieldDeclaration@@public, static, final, long, [DEFAULT_EXPIRY=MILLISECONDS.convert(60,DAYS) + System.currentTimeMillis()] @TO@ TypeDeclaration@@[public, abstract]AbstractResourceIntegrationTest, Assert @AT@ 1779 @LENGTH@ 102


MOV FieldDeclaration@@protected, Logger, [log=LoggerFactory.getLogger(getClass())] @TO@ TypeDeclaration@@[public, abstract]TestSupport, Assert @AT@ 1726 @LENGTH@ 59


UPD ExpressionStatement@@MethodInvocation:assertThat(this.serializer.handle(criteria),is(equalTo(Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))) @TO@ MethodInvocation:assertThat(this.serializer.handle(criteria),is(equalTo(Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))) @AT@ 6659 @LENGTH@ 253
---UPD MethodInvocation@@assertThat(this.serializer.handle(criteria),is(equalTo(Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))) @TO@ assertThat(this.serializer.handle(criteria),is(equalTo(Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))) @AT@ 6659 @LENGTH@ 252
------UPD SimpleName@@MethodName:assertThat:[this.serializer.handle(criteria), is(equalTo(Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))] @TO@ MethodName:assertThat:[this.serializer.handle(criteria), is(equalTo(Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))] @AT@ 6659 @LENGTH@ 252
---------UPD MethodInvocation@@is(equalTo(Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"))) @TO@ is(equalTo(Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"))) @AT@ 6708 @LENGTH@ 202
------------UPD SimpleName@@MethodName:is:[equalTo(Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"))] @TO@ MethodName:is:[equalTo(Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"))] @AT@ 6708 @LENGTH@ 202
---------------UPD MethodInvocation@@equalTo(Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")) @TO@ equalTo(Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")) @AT@ 6711 @LENGTH@ 198
------------------UPD SimpleName@@MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @TO@ MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @AT@ 6711 @LENGTH@ 198
---------------------UPD MethodInvocation@@Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @TO@ Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6719 @LENGTH@ 189
------------------------UPD SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @TO@ MethodName:parse:["{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @AT@ 6728 @LENGTH@ 180
---------------------------UPD InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 6734 @LENGTH@ 173
------------------------------UPD StringLiteral@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " @AT@ 6734 @LENGTH@ 49
------------------UPD SimpleName@@MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @TO@ MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @AT@ 6711 @LENGTH@ 198
---------------------UPD MethodInvocation@@Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @TO@ Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6719 @LENGTH@ 189
------------------------UPD SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @TO@ MethodName:parse:["{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @AT@ 6728 @LENGTH@ 180
---------------------------UPD InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 6734 @LENGTH@ 173
------------------------------UPD StringLiteral@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " @AT@ 6734 @LENGTH@ 49
------------------UPD SimpleName@@MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @TO@ MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @AT@ 6711 @LENGTH@ 198
---------------------UPD MethodInvocation@@Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @TO@ Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6719 @LENGTH@ 189
------------------------UPD SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @TO@ MethodName:parse:["{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @AT@ 6728 @LENGTH@ 180
---------------------------UPD InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 6734 @LENGTH@ 173
------------------------------UPD StringLiteral@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " @AT@ 6734 @LENGTH@ 49
------------------UPD SimpleName@@MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @TO@ MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @AT@ 6711 @LENGTH@ 198
---------------------UPD MethodInvocation@@Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @TO@ Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6719 @LENGTH@ 189
------------------------UPD SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @TO@ MethodName:parse:["{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @AT@ 6728 @LENGTH@ 180
---------------------------UPD InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 6734 @LENGTH@ 173
------------------------------UPD StringLiteral@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " @AT@ 6734 @LENGTH@ 49
------------------UPD SimpleName@@MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @TO@ MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @AT@ 6711 @LENGTH@ 198
---------------------UPD MethodInvocation@@Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @TO@ Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6719 @LENGTH@ 189
------------------------UPD SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @TO@ MethodName:parse:["{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @AT@ 6728 @LENGTH@ 180
---------------------------UPD InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 6734 @LENGTH@ 173
------------------------------UPD StringLiteral@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " @AT@ 6734 @LENGTH@ 49
------------UPD SimpleName@@MethodName:is:[equalTo(Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"))] @TO@ MethodName:is:[equalTo(Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"))] @AT@ 6708 @LENGTH@ 202
---------------UPD MethodInvocation@@equalTo(Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")) @TO@ equalTo(Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")) @AT@ 6711 @LENGTH@ 198
------------------UPD SimpleName@@MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @TO@ MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @AT@ 6711 @LENGTH@ 198
---------------------UPD MethodInvocation@@Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @TO@ Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6719 @LENGTH@ 189
------------------------UPD SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @TO@ MethodName:parse:["{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @AT@ 6728 @LENGTH@ 180
---------------------------UPD InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 6734 @LENGTH@ 173
------------------------------UPD StringLiteral@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " @AT@ 6734 @LENGTH@ 49
------------------UPD SimpleName@@MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @TO@ MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @AT@ 6711 @LENGTH@ 198
---------------------UPD MethodInvocation@@Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @TO@ Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6719 @LENGTH@ 189
------------------------UPD SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @TO@ MethodName:parse:["{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @AT@ 6728 @LENGTH@ 180
---------------------------UPD InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 6734 @LENGTH@ 173
------------------------------UPD StringLiteral@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " @AT@ 6734 @LENGTH@ 49
------------------UPD SimpleName@@MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @TO@ MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @AT@ 6711 @LENGTH@ 198
---------------------UPD MethodInvocation@@Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @TO@ Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6719 @LENGTH@ 189
------------------------UPD SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @TO@ MethodName:parse:["{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @AT@ 6728 @LENGTH@ 180
---------------------------UPD InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 6734 @LENGTH@ 173
------------------------------UPD StringLiteral@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " @AT@ 6734 @LENGTH@ 49
------------------UPD SimpleName@@MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @TO@ MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @AT@ 6711 @LENGTH@ 198
---------------------UPD MethodInvocation@@Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @TO@ Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6719 @LENGTH@ 189
------------------------UPD SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @TO@ MethodName:parse:["{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @AT@ 6728 @LENGTH@ 180
---------------------------UPD InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 6734 @LENGTH@ 173
------------------------------UPD StringLiteral@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " @AT@ 6734 @LENGTH@ 49
------------------UPD SimpleName@@MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @TO@ MethodName:equalTo:[Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @AT@ 6711 @LENGTH@ 198
---------------------UPD MethodInvocation@@Document.parse("{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @TO@ Document.parse("{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6719 @LENGTH@ 189
------------------------UPD SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @TO@ MethodName:parse:["{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @AT@ 6728 @LENGTH@ 180
---------------------------UPD InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 6734 @LENGTH@ 173
------------------------------UPD StringLiteral@@"{ \"$or\" : [ { \"firstname\" : { \"$not\" : { " @TO@ "{ \"$or\" : [ { \"lastname\" : { \"$not\" : { " @AT@ 6734 @LENGTH@ 49


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[public, final]RegexRequestMatcher, [RequestMatcher] @AT@ 4241 @LENGTH@ 263
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4241 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4248 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4255 @LENGTH@ 8
---INS VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4270 @LENGTH@ 39
------INS SimpleType@@StringBuilder @TO@ VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @AT@ 4270 @LENGTH@ 13
------INS VariableDeclarationFragment@@sb=new StringBuilder() @TO@ VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @AT@ 4284 @LENGTH@ 24
---------INS SimpleName@@sb @TO@ VariableDeclarationFragment@@sb=new StringBuilder() @AT@ 4284 @LENGTH@ 2
---------INS ClassInstanceCreation@@StringBuilder[] @TO@ VariableDeclarationFragment@@sb=new StringBuilder() @AT@ 4289 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 4289 @LENGTH@ 3
------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 4293 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:sb.append("Regex [pattern='").append(this.pattern).append("'") @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4312 @LENGTH@ 63
------INS MethodInvocation@@sb.append("Regex [pattern='").append(this.pattern).append("'") @TO@ ExpressionStatement@@MethodInvocation:sb.append("Regex [pattern='").append(this.pattern).append("'") @AT@ 4312 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:append:[this.pattern] @TO@ MethodInvocation@@sb.append("Regex [pattern='").append(this.pattern).append("'") @AT@ 4312 @LENGTH@ 50
------------INS FieldAccess@@this.pattern @TO@ MethodInvocation@@MethodName:append:[this.pattern] @AT@ 4349 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.pattern @AT@ 4349 @LENGTH@ 4
---------------INS SimpleName@@pattern @TO@ FieldAccess@@this.pattern @AT@ 4354 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:append:["Regex [pattern='"] @TO@ MethodInvocation@@sb.append("Regex [pattern='").append(this.pattern).append("'") @AT@ 4312 @LENGTH@ 29
------------INS StringLiteral@@"Regex [pattern='" @TO@ MethodInvocation@@MethodName:append:["Regex [pattern='"] @AT@ 4322 @LENGTH@ 18
---------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append("Regex [pattern='").append(this.pattern).append("'") @AT@ 4312 @LENGTH@ 2
---------INS SimpleName@@MethodName:append:["'"] @TO@ MethodInvocation@@sb.append("Regex [pattern='").append(this.pattern).append("'") @AT@ 4363 @LENGTH@ 11
------------INS StringLiteral@@"'" @TO@ SimpleName@@MethodName:append:["'"] @AT@ 4370 @LENGTH@ 3
---INS IfStatement@@if (this.httpMethod != null) {  sb.append(", ").append(this.httpMethod);} @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4379 @LENGTH@ 78
------INS InfixExpression@@this.httpMethod != null @TO@ IfStatement@@if (this.httpMethod != null) {  sb.append(", ").append(this.httpMethod);} @AT@ 4383 @LENGTH@ 23
---------INS FieldAccess@@this.httpMethod @TO@ InfixExpression@@this.httpMethod != null @AT@ 4383 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.httpMethod @AT@ 4383 @LENGTH@ 4
------------INS SimpleName@@httpMethod @TO@ FieldAccess@@this.httpMethod @AT@ 4388 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@this.httpMethod != null @AT@ 4398 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@this.httpMethod != null @AT@ 4402 @LENGTH@ 4
------INS Block@@ThenBody:{  sb.append(", ").append(this.httpMethod);} @TO@ IfStatement@@if (this.httpMethod != null) {  sb.append(", ").append(this.httpMethod);} @AT@ 4408 @LENGTH@ 49
---------INS ExpressionStatement@@MethodInvocation:sb.append(", ").append(this.httpMethod) @TO@ Block@@ThenBody:{  sb.append(", ").append(this.httpMethod);} @AT@ 4413 @LENGTH@ 40
------------INS MethodInvocation@@sb.append(", ").append(this.httpMethod) @TO@ ExpressionStatement@@MethodInvocation:sb.append(", ").append(this.httpMethod) @AT@ 4413 @LENGTH@ 39
---------------INS MethodInvocation@@MethodName:append:[", "] @TO@ MethodInvocation@@sb.append(", ").append(this.httpMethod) @AT@ 4413 @LENGTH@ 15
------------------INS StringLiteral@@", " @TO@ MethodInvocation@@MethodName:append:[", "] @AT@ 4423 @LENGTH@ 4
---------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append(", ").append(this.httpMethod) @AT@ 4413 @LENGTH@ 2
---------------INS SimpleName@@MethodName:append:[this.httpMethod] @TO@ MethodInvocation@@sb.append(", ").append(this.httpMethod) @AT@ 4429 @LENGTH@ 23
------------------INS FieldAccess@@this.httpMethod @TO@ SimpleName@@MethodName:append:[this.httpMethod] @AT@ 4436 @LENGTH@ 15
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.httpMethod @AT@ 4436 @LENGTH@ 4
---------------------INS SimpleName@@httpMethod @TO@ FieldAccess@@this.httpMethod @AT@ 4441 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:sb.append("]") @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4461 @LENGTH@ 15
------INS MethodInvocation@@sb.append("]") @TO@ ExpressionStatement@@MethodInvocation:sb.append("]") @AT@ 4461 @LENGTH@ 14
---------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append("]") @AT@ 4461 @LENGTH@ 2
---------INS SimpleName@@MethodName:append:["]"] @TO@ MethodInvocation@@sb.append("]") @AT@ 4464 @LENGTH@ 11
------------INS StringLiteral@@"]" @TO@ SimpleName@@MethodName:append:["]"] @AT@ 4471 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:sb.toString() @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4480 @LENGTH@ 21
------INS MethodInvocation@@sb.toString() @TO@ ReturnStatement@@MethodInvocation:sb.toString() @AT@ 4487 @LENGTH@ 13
---------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.toString() @AT@ 4487 @LENGTH@ 2
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@sb.toString() @AT@ 4490 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:(new VectorExpressionDescriptor.Builder()).setMode(VectorExpressionDescriptor.Mode.PROJECTION).setNumArguments(2).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.STRING_FAMILY,VectorExpressionDescriptor.ArgumentType.STRING).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.COLUMN,VectorExpressionDescriptor.InputExpressionType.SCALAR).build() @TO@ MethodInvocation:(new VectorExpressionDescriptor.Builder()).setMode(VectorExpressionDescriptor.Mode.PROJECTION).setNumArguments(2).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.STRING_FAMILY,VectorExpressionDescriptor.ArgumentType.STRING_FAMILY).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.COLUMN,VectorExpressionDescriptor.InputExpressionType.SCALAR).build() @AT@ 5420 @LENGTH@ 482
---UPD MethodInvocation@@(new VectorExpressionDescriptor.Builder()).setMode(VectorExpressionDescriptor.Mode.PROJECTION).setNumArguments(2).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.STRING_FAMILY,VectorExpressionDescriptor.ArgumentType.STRING).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.COLUMN,VectorExpressionDescriptor.InputExpressionType.SCALAR).build() @TO@ (new VectorExpressionDescriptor.Builder()).setMode(VectorExpressionDescriptor.Mode.PROJECTION).setNumArguments(2).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.STRING_FAMILY,VectorExpressionDescriptor.ArgumentType.STRING_FAMILY).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.COLUMN,VectorExpressionDescriptor.InputExpressionType.SCALAR).build() @AT@ 5427 @LENGTH@ 474
------UPD MethodInvocation@@MethodName:setArgumentTypes:[VectorExpressionDescriptor.ArgumentType.STRING_FAMILY, VectorExpressionDescriptor.ArgumentType.STRING] @TO@ MethodName:setArgumentTypes:[VectorExpressionDescriptor.ArgumentType.STRING_FAMILY, VectorExpressionDescriptor.ArgumentType.STRING_FAMILY] @AT@ 5427 @LENGTH@ 298
---------UPD QualifiedName@@VectorExpressionDescriptor.ArgumentType.STRING @TO@ VectorExpressionDescriptor.ArgumentType.STRING_FAMILY @AT@ 5678 @LENGTH@ 46
------------UPD SimpleName@@STRING @TO@ STRING_FAMILY @AT@ 5718 @LENGTH@ 6


UPD SuperConstructorInvocation@@super(builderFactory,DistributedCacheBuilderProvider.class);
 @TO@ super(builderFactory,DistributedCacheServiceConfiguratorProvider.class);
 @AT@ 1486 @LENGTH@ 61
---UPD TypeLiteral@@DistributedCacheBuilderProvider.class @TO@ DistributedCacheServiceConfiguratorProvider.class @AT@ 1508 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().formLogin().and().oauth2().client() @TO@ MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().formLogin().and().oauth2Client() @AT@ 1721 @LENGTH@ 128
---UPD MethodInvocation@@http.authorizeRequests().anyRequest().authenticated().and().formLogin().and().oauth2().client() @TO@ http.authorizeRequests().anyRequest().authenticated().and().formLogin().and().oauth2Client() @AT@ 1721 @LENGTH@ 127
------DEL MethodInvocation@@MethodName:oauth2:[] @AT@ 1721 @LENGTH@ 113
------UPD SimpleName@@MethodName:client:[] @TO@ MethodName:oauth2Client:[] @AT@ 1840 @LENGTH@ 8


UPD IfStatement@@if (allowProcessor(explicitMethodName,beanInfo)) {  processor=getProcessor();  if (processor == null && !lookupProcessorDone) {synchronized (lock) {      lookupProcessorDone=true;      processor=exchange.getContext().getTypeConverter().tryConvertTo(Processor.class,exchange,bean);    }  }  if (processor != null) {    LOG.trace("Using a custom adapter as bean invocation: {}",processor);    try {      processor.process(exchange);    } catch (    Throwable e) {      exchange.setException(e);    }    callback.done(true);    return true;  }} @TO@ if (allowProcessor(explicitMethodName,beanInfo) && beanHolder.supportProcessor()) {  processor=getProcessor();  if (processor == null && !lookupProcessorDone) {synchronized (lock) {      lookupProcessorDone=true;      processor=exchange.getContext().getTypeConverter().tryConvertTo(Processor.class,exchange,bean);    }  }  if (processor != null) {    LOG.trace("Using a custom adapter as bean invocation: {}",processor);    try {      processor.process(exchange);    } catch (    Throwable e) {      exchange.setException(e);    }    callback.done(true);    return true;  }} @AT@ 3623 @LENGTH@ 943
---INS InfixExpression@@allowProcessor(explicitMethodName,beanInfo) && beanHolder.supportProcessor() @TO@ IfStatement@@if (allowProcessor(explicitMethodName,beanInfo)) {  processor=getProcessor();  if (processor == null && !lookupProcessorDone) {synchronized (lock) {      lookupProcessorDone=true;      processor=exchange.getContext().getTypeConverter().tryConvertTo(Processor.class,exchange,bean);    }  }  if (processor != null) {    LOG.trace("Using a custom adapter as bean invocation: {}",processor);    try {      processor.process(exchange);    } catch (    Throwable e) {      exchange.setException(e);    }    callback.done(true);    return true;  }} @AT@ 3722 @LENGTH@ 77
------MOV MethodInvocation@@allowProcessor(explicitMethodName,beanInfo) @TO@ InfixExpression@@allowProcessor(explicitMethodName,beanInfo) && beanHolder.supportProcessor() @AT@ 3627 @LENGTH@ 44
------INS Operator@@&& @TO@ InfixExpression@@allowProcessor(explicitMethodName,beanInfo) && beanHolder.supportProcessor() @AT@ 3766 @LENGTH@ 2
------INS MethodInvocation@@beanHolder.supportProcessor() @TO@ InfixExpression@@allowProcessor(explicitMethodName,beanInfo) && beanHolder.supportProcessor() @AT@ 3770 @LENGTH@ 29
---------INS SimpleName@@Name:beanHolder @TO@ MethodInvocation@@beanHolder.supportProcessor() @AT@ 3770 @LENGTH@ 10
---------INS SimpleName@@MethodName:supportProcessor:[] @TO@ MethodInvocation@@beanHolder.supportProcessor() @AT@ 3781 @LENGTH@ 18


INS TryStatement@@try {  ctx.handle("/core-service=management/management-interface=native-interface:remove()");}  finally {  try {    ctx.handle("/socket-binding-group=standard-sockets/socket-binding=management-native:remove()");  }  finally {    ctx.handle("/core-service=management/security-realm=native-realm:remove");  }} @TO@ MethodDeclaration@@public, static, void, MethodName:disableNative, CommandContext ctx, CommandLineException,  @AT@ 36311 @LENGTH@ 393
---MOV ExpressionStatement@@MethodInvocation:ctx.handle("/core-service=management/management-interface=native-interface:remove()") @TO@ TryStatement@@try {  ctx.handle("/core-service=management/management-interface=native-interface:remove()");}  finally {  try {    ctx.handle("/socket-binding-group=standard-sockets/socket-binding=management-native:remove()");  }  finally {    ctx.handle("/core-service=management/security-realm=native-realm:remove");  }} @AT@ 35462 @LENGTH@ 86
---INS Block@@FinallyBody:{  try {    ctx.handle("/socket-binding-group=standard-sockets/socket-binding=management-native:remove()");  }  finally {    ctx.handle("/core-service=management/security-realm=native-realm:remove");  }} @TO@ TryStatement@@try {  ctx.handle("/core-service=management/management-interface=native-interface:remove()");}  finally {  try {    ctx.handle("/socket-binding-group=standard-sockets/socket-binding=management-native:remove()");  }  finally {    ctx.handle("/core-service=management/security-realm=native-realm:remove");  }} @AT@ 36434 @LENGTH@ 270
------INS TryStatement@@try {  ctx.handle("/socket-binding-group=standard-sockets/socket-binding=management-native:remove()");}  finally {  ctx.handle("/core-service=management/security-realm=native-realm:remove");} @TO@ Block@@FinallyBody:{  try {    ctx.handle("/socket-binding-group=standard-sockets/socket-binding=management-native:remove()");  }  finally {    ctx.handle("/core-service=management/security-realm=native-realm:remove");  }} @AT@ 36448 @LENGTH@ 246
---------MOV ExpressionStatement@@MethodInvocation:ctx.handle("/socket-binding-group=standard-sockets/socket-binding=management-native:remove()") @TO@ TryStatement@@try {  ctx.handle("/socket-binding-group=standard-sockets/socket-binding=management-native:remove()");}  finally {  ctx.handle("/core-service=management/security-realm=native-realm:remove");} @AT@ 35557 @LENGTH@ 95
---------INS Block@@FinallyBody:{  ctx.handle("/core-service=management/security-realm=native-realm:remove");} @TO@ TryStatement@@try {  ctx.handle("/socket-binding-group=standard-sockets/socket-binding=management-native:remove()");}  finally {  ctx.handle("/core-service=management/security-realm=native-realm:remove");} @AT@ 36588 @LENGTH@ 106
------------INS ExpressionStatement@@MethodInvocation:ctx.handle("/core-service=management/security-realm=native-realm:remove") @TO@ Block@@FinallyBody:{  ctx.handle("/core-service=management/security-realm=native-realm:remove");} @AT@ 36606 @LENGTH@ 74
---------------INS MethodInvocation@@ctx.handle("/core-service=management/security-realm=native-realm:remove") @TO@ ExpressionStatement@@MethodInvocation:ctx.handle("/core-service=management/security-realm=native-realm:remove") @AT@ 36606 @LENGTH@ 73
------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.handle("/core-service=management/security-realm=native-realm:remove") @AT@ 36606 @LENGTH@ 3
------------------INS SimpleName@@MethodName:handle:["/core-service=management/security-realm=native-realm:remove"] @TO@ MethodInvocation@@ctx.handle("/core-service=management/security-realm=native-realm:remove") @AT@ 36610 @LENGTH@ 69
---------------------INS StringLiteral@@"/core-service=management/security-realm=native-realm:remove" @TO@ SimpleName@@MethodName:handle:["/core-service=management/security-realm=native-realm:remove"] @AT@ 36617 @LENGTH@ 61


UPD SuperConstructorInvocation@@super(WILDCARD_PATH,UnaryOperator.identity(),new ClusteredCacheServiceHandler(InvalidationCacheBuilder::new));
 @TO@ super(WILDCARD_PATH,UnaryOperator.identity(),new ClusteredCacheServiceHandler(InvalidationCacheServiceConfigurator::new));
 @AT@ 2142 @LENGTH@ 112
---UPD ClassInstanceCreation@@ClusteredCacheServiceHandler[InvalidationCacheBuilder::new] @TO@ ClusteredCacheServiceHandler[InvalidationCacheServiceConfigurator::new] @AT@ 2189 @LENGTH@ 63


UPD ExpressionStatement@@Assignment:this.registry=new InjectedValueDependency<>(ClusteringCacheRequirement.REGISTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME),Registry.class) @TO@ Assignment:this.registry=new InjectedValueDependency<>(ClusteringCacheRequirement.REGISTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME),Registry.class) @AT@ 2664 @LENGTH@ 222
---UPD Assignment@@this.registry=new InjectedValueDependency<>(ClusteringCacheRequirement.REGISTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME),Registry.class) @TO@ this.registry=new InjectedValueDependency<>(ClusteringCacheRequirement.REGISTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME),Registry.class) @AT@ 2664 @LENGTH@ 221
------UPD ClassInstanceCreation@@InjectedValueDependency<>[ClusteringCacheRequirement.REGISTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME), Registry.class] @TO@ InjectedValueDependency<>[ClusteringCacheRequirement.REGISTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME), Registry.class] @AT@ 2680 @LENGTH@ 205
---------UPD MethodInvocation@@ClusteringCacheRequirement.REGISTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME) @TO@ ClusteringCacheRequirement.REGISTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME) @AT@ 2710 @LENGTH@ 158
------------UPD SimpleName@@MethodName:getServiceName:[context, this.clientMappingsClusterName, BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME] @TO@ MethodName:getServiceName:[context, this.clientMappingsClusterName, BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME] @AT@ 2746 @LENGTH@ 122
---------------UPD QualifiedName@@BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME @TO@ BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME @AT@ 2802 @LENGTH@ 65
------------------UPD SimpleName@@BeanManagerFactoryBuilderConfiguration @TO@ BeanManagerFactoryServiceConfiguratorConfiguration @AT@ 2802 @LENGTH@ 38


DEL ExpressionStatement@@Assignment:this.jsonObjectMarshaller=Mockito.mock(JsonObjectMarshaller.class) @AT@ 1301 @LENGTH@ 69
---DEL Assignment@@this.jsonObjectMarshaller=Mockito.mock(JsonObjectMarshaller.class) @AT@ 1301 @LENGTH@ 68
------DEL FieldAccess@@this.jsonObjectMarshaller @AT@ 1301 @LENGTH@ 25
---------DEL ThisExpression@@this @AT@ 1301 @LENGTH@ 4
---------DEL SimpleName@@jsonObjectMarshaller @AT@ 1306 @LENGTH@ 20
------DEL Operator@@= @AT@ 1326 @LENGTH@ 1
------DEL MethodInvocation@@Mockito.mock(JsonObjectMarshaller.class) @AT@ 1329 @LENGTH@ 40
---------DEL SimpleName@@Name:Mockito @AT@ 1329 @LENGTH@ 7
---------DEL SimpleName@@MethodName:mock:[JsonObjectMarshaller.class] @AT@ 1337 @LENGTH@ 32
------------DEL TypeLiteral@@JsonObjectMarshaller.class @AT@ 1342 @LENGTH@ 26


UPD SuperConstructorInvocation@@super(LocalServiceProviderRegistryBuilder::new);
 @TO@ super(LocalServiceProviderRegistryServiceConfigurator::new);
 @AT@ 1634 @LENGTH@ 48


UPD ExpressionStatement@@MethodInvocation:rest("/users/").get("v1/customers").to("mock:customers").put("v1/{id}").to("mock:id") @TO@ MethodInvocation:rest("/users/").get("v1/customers").to("mock:customers").put("v1/{id}").to("mock:id").get("v1/options").to("mock:options").post("v1/options").to("mock:options") @AT@ 2576 @LENGTH@ 178
---UPD MethodInvocation@@rest("/users/").get("v1/customers").to("mock:customers").put("v1/{id}").to("mock:id") @TO@ rest("/users/").get("v1/customers").to("mock:customers").put("v1/{id}").to("mock:id").get("v1/options").to("mock:options").post("v1/options").to("mock:options") @AT@ 2576 @LENGTH@ 177
------UPD SimpleName@@MethodName:to:["mock:id"] @TO@ MethodName:to:["mock:options"] @AT@ 2740 @LENGTH@ 13
---------UPD StringLiteral@@"mock:id" @TO@ "mock:options" @AT@ 2743 @LENGTH@ 9
------INS MethodInvocation@@MethodName:post:["v1/options"] @TO@ MethodInvocation@@rest("/users/").get("v1/customers").to("mock:customers").put("v1/{id}").to("mock:id") @AT@ 3191 @LENGTH@ 300
---------INS StringLiteral@@"v1/options" @TO@ MethodInvocation@@MethodName:post:["v1/options"] @AT@ 3478 @LENGTH@ 12
------INS MethodInvocation@@MethodName:to:["mock:options"] @TO@ MethodInvocation@@rest("/users/").get("v1/customers").to("mock:customers").put("v1/{id}").to("mock:id") @AT@ 3191 @LENGTH@ 260
---------INS StringLiteral@@"mock:options" @TO@ MethodInvocation@@MethodName:to:["mock:options"] @AT@ 3436 @LENGTH@ 14
------INS MethodInvocation@@MethodName:get:["v1/options"] @TO@ MethodInvocation@@rest("/users/").get("v1/customers").to("mock:customers").put("v1/{id}").to("mock:id") @AT@ 3191 @LENGTH@ 216
---------INS StringLiteral@@"v1/options" @TO@ MethodInvocation@@MethodName:get:["v1/options"] @AT@ 3394 @LENGTH@ 12
------INS MethodInvocation@@MethodName:to:["mock:id"] @TO@ MethodInvocation@@rest("/users/").get("v1/customers").to("mock:customers").put("v1/{id}").to("mock:id") @AT@ 3191 @LENGTH@ 177
---------INS StringLiteral@@"mock:id" @TO@ MethodInvocation@@MethodName:to:["mock:id"] @AT@ 3358 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:applyWhenLowercaseSchemeThenAuthentication,  @TO@ TypeDeclaration@@[public]ServerHttpBasicAuthenticationConverterTests,  @AT@ 2822 @LENGTH@ 430
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:applyWhenLowercaseSchemeThenAuthentication,  @AT@ 2822 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:applyWhenLowercaseSchemeThenAuthentication,  @AT@ 2829 @LENGTH@ 4
---INS SimpleName@@MethodName:applyWhenLowercaseSchemeThenAuthentication @TO@ MethodDeclaration@@public, void, MethodName:applyWhenLowercaseSchemeThenAuthentication,  @AT@ 2834 @LENGTH@ 42
---INS VariableDeclarationStatement@@Mono<Authentication> result=apply(this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==")); @TO@ MethodDeclaration@@public, void, MethodName:applyWhenLowercaseSchemeThenAuthentication,  @AT@ 2883 @LENGTH@ 114
------INS ParameterizedType@@Mono<Authentication> @TO@ VariableDeclarationStatement@@Mono<Authentication> result=apply(this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==")); @AT@ 2883 @LENGTH@ 20
---------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<Authentication> @AT@ 2883 @LENGTH@ 4
---------INS SimpleType@@Authentication @TO@ ParameterizedType@@Mono<Authentication> @AT@ 2888 @LENGTH@ 14
------INS VariableDeclarationFragment@@result=apply(this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==")) @TO@ VariableDeclarationStatement@@Mono<Authentication> result=apply(this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==")); @AT@ 2904 @LENGTH@ 92
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=apply(this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==")) @AT@ 2904 @LENGTH@ 6
---------INS MethodInvocation@@apply(this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==")) @TO@ VariableDeclarationFragment@@result=apply(this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==")) @AT@ 2913 @LENGTH@ 83
------------INS SimpleName@@MethodName:apply:[this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==")] @TO@ MethodInvocation@@apply(this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==")) @AT@ 2913 @LENGTH@ 83
---------------INS MethodInvocation@@this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==") @TO@ SimpleName@@MethodName:apply:[this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==")] @AT@ 2919 @LENGTH@ 76
------------------INS FieldAccess@@this.request @TO@ MethodInvocation@@this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==") @AT@ 2919 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 2919 @LENGTH@ 4
---------------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 2924 @LENGTH@ 7
------------------INS SimpleName@@MethodName:header:[HttpHeaders.AUTHORIZATION, "basic dXNlcjpwYXNzd29yZA=="] @TO@ MethodInvocation@@this.request.header(HttpHeaders.AUTHORIZATION,"basic dXNlcjpwYXNzd29yZA==") @AT@ 2932 @LENGTH@ 63
---------------------INS QualifiedName@@HttpHeaders.AUTHORIZATION @TO@ SimpleName@@MethodName:header:[HttpHeaders.AUTHORIZATION, "basic dXNlcjpwYXNzd29yZA=="] @AT@ 2939 @LENGTH@ 25
------------------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.AUTHORIZATION @AT@ 2939 @LENGTH@ 11
------------------------INS SimpleName@@AUTHORIZATION @TO@ QualifiedName@@HttpHeaders.AUTHORIZATION @AT@ 2951 @LENGTH@ 13
---------------------INS StringLiteral@@"basic dXNlcjpwYXNzd29yZA==" @TO@ SimpleName@@MethodName:header:[HttpHeaders.AUTHORIZATION, "basic dXNlcjpwYXNzd29yZA=="] @AT@ 2966 @LENGTH@ 28
---INS VariableDeclarationStatement@@UsernamePasswordAuthenticationToken authentication=result.cast(UsernamePasswordAuthenticationToken.class).block(); @TO@ MethodDeclaration@@public, void, MethodName:applyWhenLowercaseSchemeThenAuthentication,  @AT@ 3001 @LENGTH@ 116
------INS SimpleType@@UsernamePasswordAuthenticationToken @TO@ VariableDeclarationStatement@@UsernamePasswordAuthenticationToken authentication=result.cast(UsernamePasswordAuthenticationToken.class).block(); @AT@ 3001 @LENGTH@ 35
------INS VariableDeclarationFragment@@authentication=result.cast(UsernamePasswordAuthenticationToken.class).block() @TO@ VariableDeclarationStatement@@UsernamePasswordAuthenticationToken authentication=result.cast(UsernamePasswordAuthenticationToken.class).block(); @AT@ 3037 @LENGTH@ 79
---------INS SimpleName@@authentication @TO@ VariableDeclarationFragment@@authentication=result.cast(UsernamePasswordAuthenticationToken.class).block() @AT@ 3037 @LENGTH@ 14
---------INS MethodInvocation@@result.cast(UsernamePasswordAuthenticationToken.class).block() @TO@ VariableDeclarationFragment@@authentication=result.cast(UsernamePasswordAuthenticationToken.class).block() @AT@ 3054 @LENGTH@ 62
------------INS MethodInvocation@@MethodName:cast:[UsernamePasswordAuthenticationToken.class] @TO@ MethodInvocation@@result.cast(UsernamePasswordAuthenticationToken.class).block() @AT@ 3054 @LENGTH@ 54
---------------INS TypeLiteral@@UsernamePasswordAuthenticationToken.class @TO@ MethodInvocation@@MethodName:cast:[UsernamePasswordAuthenticationToken.class] @AT@ 3066 @LENGTH@ 41
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.cast(UsernamePasswordAuthenticationToken.class).block() @AT@ 3054 @LENGTH@ 6
------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@result.cast(UsernamePasswordAuthenticationToken.class).block() @AT@ 3109 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(authentication.getPrincipal()).isEqualTo("user") @TO@ MethodDeclaration@@public, void, MethodName:applyWhenLowercaseSchemeThenAuthentication,  @AT@ 3120 @LENGTH@ 60
------INS MethodInvocation@@assertThat(authentication.getPrincipal()).isEqualTo("user") @TO@ ExpressionStatement@@MethodInvocation:assertThat(authentication.getPrincipal()).isEqualTo("user") @AT@ 3120 @LENGTH@ 59
---------INS MethodInvocation@@MethodName:assertThat:[authentication.getPrincipal()] @TO@ MethodInvocation@@assertThat(authentication.getPrincipal()).isEqualTo("user") @AT@ 3120 @LENGTH@ 41
------------INS MethodInvocation@@authentication.getPrincipal() @TO@ MethodInvocation@@MethodName:assertThat:[authentication.getPrincipal()] @AT@ 3131 @LENGTH@ 29
---------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getPrincipal() @AT@ 3131 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getPrincipal:[] @TO@ MethodInvocation@@authentication.getPrincipal() @AT@ 3146 @LENGTH@ 14
---------INS SimpleName@@MethodName:isEqualTo:["user"] @TO@ MethodInvocation@@assertThat(authentication.getPrincipal()).isEqualTo("user") @AT@ 3162 @LENGTH@ 17
------------INS StringLiteral@@"user" @TO@ SimpleName@@MethodName:isEqualTo:["user"] @AT@ 3172 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(authentication.getCredentials()).isEqualTo("password") @TO@ MethodDeclaration@@public, void, MethodName:applyWhenLowercaseSchemeThenAuthentication,  @AT@ 3183 @LENGTH@ 66
------INS MethodInvocation@@assertThat(authentication.getCredentials()).isEqualTo("password") @TO@ ExpressionStatement@@MethodInvocation:assertThat(authentication.getCredentials()).isEqualTo("password") @AT@ 3183 @LENGTH@ 65
---------INS MethodInvocation@@MethodName:assertThat:[authentication.getCredentials()] @TO@ MethodInvocation@@assertThat(authentication.getCredentials()).isEqualTo("password") @AT@ 3183 @LENGTH@ 43
------------INS MethodInvocation@@authentication.getCredentials() @TO@ MethodInvocation@@MethodName:assertThat:[authentication.getCredentials()] @AT@ 3194 @LENGTH@ 31
---------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getCredentials() @AT@ 3194 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getCredentials:[] @TO@ MethodInvocation@@authentication.getCredentials() @AT@ 3209 @LENGTH@ 16
---------INS SimpleName@@MethodName:isEqualTo:["password"] @TO@ MethodInvocation@@assertThat(authentication.getCredentials()).isEqualTo("password") @AT@ 3227 @LENGTH@ 21
------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:isEqualTo:["password"] @AT@ 3237 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:result.add(new BinaryRequirementAliasBuilder<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY),ClusteringCacheRequirement.REGISTRY,containerName,targetCacheName,ClusteringCacheRequirement.REGISTRY.getType())) @TO@ MethodInvocation:result.add(new IdentityCapabilityServiceConfigurator<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY),ClusteringCacheRequirement.REGISTRY,containerName,targetCacheName)) @AT@ 2479 @LENGTH@ 226
---UPD MethodInvocation@@result.add(new BinaryRequirementAliasBuilder<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY),ClusteringCacheRequirement.REGISTRY,containerName,targetCacheName,ClusteringCacheRequirement.REGISTRY.getType())) @TO@ result.add(new IdentityCapabilityServiceConfigurator<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY),ClusteringCacheRequirement.REGISTRY,containerName,targetCacheName)) @AT@ 2479 @LENGTH@ 225
------UPD SimpleName@@MethodName:add:[new BinaryRequirementAliasBuilder<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY),ClusteringCacheRequirement.REGISTRY,containerName,targetCacheName,ClusteringCacheRequirement.REGISTRY.getType())] @TO@ MethodName:add:[new IdentityCapabilityServiceConfigurator<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY),ClusteringCacheRequirement.REGISTRY,containerName,targetCacheName)] @AT@ 2486 @LENGTH@ 218
---------UPD ClassInstanceCreation@@BinaryRequirementAliasBuilder<>[registry.getServiceName(ClusteringCacheRequirement.REGISTRY), ClusteringCacheRequirement.REGISTRY, containerName, targetCacheName, ClusteringCacheRequirement.REGISTRY.getType()] @TO@ IdentityCapabilityServiceConfigurator<>[registry.getServiceName(ClusteringCacheRequirement.REGISTRY), ClusteringCacheRequirement.REGISTRY, containerName, targetCacheName] @AT@ 2490 @LENGTH@ 213
------------UPD ParameterizedType@@BinaryRequirementAliasBuilder<> @TO@ IdentityCapabilityServiceConfigurator<> @AT@ 2494 @LENGTH@ 31
---------------UPD SimpleType@@BinaryRequirementAliasBuilder @TO@ IdentityCapabilityServiceConfigurator @AT@ 2494 @LENGTH@ 29
------------DEL MethodInvocation@@ClusteringCacheRequirement.REGISTRY.getType() @AT@ 2657 @LENGTH@ 45
---------------DEL QualifiedName@@Name:ClusteringCacheRequirement.REGISTRY @AT@ 2657 @LENGTH@ 35
---------------DEL SimpleName@@MethodName:getType:[] @AT@ 2693 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:params.remove("throwExceptionOnFailure") @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssue, Exception,  @AT@ 47300 @LENGTH@ 41
---INS MethodInvocation@@params.remove("throwExceptionOnFailure") @TO@ ExpressionStatement@@MethodInvocation:params.remove("throwExceptionOnFailure") @AT@ 47300 @LENGTH@ 40
------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.remove("throwExceptionOnFailure") @AT@ 47300 @LENGTH@ 6
------INS SimpleName@@MethodName:remove:["throwExceptionOnFailure"] @TO@ MethodInvocation@@params.remove("throwExceptionOnFailure") @AT@ 47307 @LENGTH@ 33
---------INS StringLiteral@@"throwExceptionOnFailure" @TO@ SimpleName@@MethodName:remove:["throwExceptionOnFailure"] @AT@ 47314 @LENGTH@ 25


UPD ReturnStatement@@MethodInvocation:(new VectorExpressionDescriptor.Builder()).setMode(VectorExpressionDescriptor.Mode.PROJECTION).setNumArguments(2).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.STRING,VectorExpressionDescriptor.ArgumentType.STRING_FAMILY).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.SCALAR,VectorExpressionDescriptor.InputExpressionType.COLUMN).build() @TO@ MethodInvocation:(new VectorExpressionDescriptor.Builder()).setMode(VectorExpressionDescriptor.Mode.PROJECTION).setNumArguments(2).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.STRING_FAMILY,VectorExpressionDescriptor.ArgumentType.STRING_FAMILY).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.SCALAR,VectorExpressionDescriptor.InputExpressionType.COLUMN).build() @AT@ 5429 @LENGTH@ 482
---UPD MethodInvocation@@(new VectorExpressionDescriptor.Builder()).setMode(VectorExpressionDescriptor.Mode.PROJECTION).setNumArguments(2).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.STRING,VectorExpressionDescriptor.ArgumentType.STRING_FAMILY).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.SCALAR,VectorExpressionDescriptor.InputExpressionType.COLUMN).build() @TO@ (new VectorExpressionDescriptor.Builder()).setMode(VectorExpressionDescriptor.Mode.PROJECTION).setNumArguments(2).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.STRING_FAMILY,VectorExpressionDescriptor.ArgumentType.STRING_FAMILY).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.SCALAR,VectorExpressionDescriptor.InputExpressionType.COLUMN).build() @AT@ 5436 @LENGTH@ 474
------UPD MethodInvocation@@MethodName:setArgumentTypes:[VectorExpressionDescriptor.ArgumentType.STRING, VectorExpressionDescriptor.ArgumentType.STRING_FAMILY] @TO@ MethodName:setArgumentTypes:[VectorExpressionDescriptor.ArgumentType.STRING_FAMILY, VectorExpressionDescriptor.ArgumentType.STRING_FAMILY] @AT@ 5436 @LENGTH@ 298
---------UPD QualifiedName@@VectorExpressionDescriptor.ArgumentType.STRING @TO@ VectorExpressionDescriptor.ArgumentType.STRING_FAMILY @AT@ 5620 @LENGTH@ 46
------------UPD SimpleName@@STRING @TO@ STRING_FAMILY @AT@ 5660 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:toStringThenFormatted,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]RegexRequestMatcherTests,  @AT@ 3582 @LENGTH@ 189
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:toStringThenFormatted,  @AT@ 3582 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:toStringThenFormatted,  @AT@ 3589 @LENGTH@ 4
---INS SimpleName@@MethodName:toStringThenFormatted @TO@ MethodDeclaration@@public, void, MethodName:toStringThenFormatted,  @AT@ 3594 @LENGTH@ 21
---INS VariableDeclarationStatement@@RegexRequestMatcher matcher=new RegexRequestMatcher("/blah","GET"); @TO@ MethodDeclaration@@public, void, MethodName:toStringThenFormatted,  @AT@ 3622 @LENGTH@ 70
------INS SimpleType@@RegexRequestMatcher @TO@ VariableDeclarationStatement@@RegexRequestMatcher matcher=new RegexRequestMatcher("/blah","GET"); @AT@ 3622 @LENGTH@ 19
------INS VariableDeclarationFragment@@matcher=new RegexRequestMatcher("/blah","GET") @TO@ VariableDeclarationStatement@@RegexRequestMatcher matcher=new RegexRequestMatcher("/blah","GET"); @AT@ 3642 @LENGTH@ 49
---------INS SimpleName@@matcher @TO@ VariableDeclarationFragment@@matcher=new RegexRequestMatcher("/blah","GET") @AT@ 3642 @LENGTH@ 7
---------INS ClassInstanceCreation@@RegexRequestMatcher["/blah", "GET"] @TO@ VariableDeclarationFragment@@matcher=new RegexRequestMatcher("/blah","GET") @AT@ 3652 @LENGTH@ 39
------------INS New@@new @TO@ ClassInstanceCreation@@RegexRequestMatcher["/blah", "GET"] @AT@ 3652 @LENGTH@ 3
------------INS SimpleType@@RegexRequestMatcher @TO@ ClassInstanceCreation@@RegexRequestMatcher["/blah", "GET"] @AT@ 3656 @LENGTH@ 19
------------INS StringLiteral@@"/blah" @TO@ ClassInstanceCreation@@RegexRequestMatcher["/blah", "GET"] @AT@ 3676 @LENGTH@ 7
------------INS StringLiteral@@"GET" @TO@ ClassInstanceCreation@@RegexRequestMatcher["/blah", "GET"] @AT@ 3685 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(matcher.toString()).isEqualTo("Regex [pattern='/blah', GET]") @TO@ MethodDeclaration@@public, void, MethodName:toStringThenFormatted,  @AT@ 3695 @LENGTH@ 73
------INS MethodInvocation@@assertThat(matcher.toString()).isEqualTo("Regex [pattern='/blah', GET]") @TO@ ExpressionStatement@@MethodInvocation:assertThat(matcher.toString()).isEqualTo("Regex [pattern='/blah', GET]") @AT@ 3695 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:assertThat:[matcher.toString()] @TO@ MethodInvocation@@assertThat(matcher.toString()).isEqualTo("Regex [pattern='/blah', GET]") @AT@ 3695 @LENGTH@ 30
------------INS MethodInvocation@@matcher.toString() @TO@ MethodInvocation@@MethodName:assertThat:[matcher.toString()] @AT@ 3706 @LENGTH@ 18
---------------INS SimpleName@@Name:matcher @TO@ MethodInvocation@@matcher.toString() @AT@ 3706 @LENGTH@ 7
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@matcher.toString() @AT@ 3714 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:["Regex [pattern='/blah', GET]"] @TO@ MethodInvocation@@assertThat(matcher.toString()).isEqualTo("Regex [pattern='/blah', GET]") @AT@ 3726 @LENGTH@ 41
------------INS StringLiteral@@"Regex [pattern='/blah', GET]" @TO@ SimpleName@@MethodName:isEqualTo:["Regex [pattern='/blah', GET]"] @AT@ 3736 @LENGTH@ 30


INS MethodDeclaration@@public, int, MethodName:getHeaderPadCount,  @TO@ TypeDeclaration@@[public]CpioArchiveEntry, [CpioConstants, ArchiveEntry] @AT@ 15010 @LENGTH@ 77
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:getHeaderPadCount,  @AT@ 15010 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:getHeaderPadCount,  @AT@ 15017 @LENGTH@ 3
---INS SimpleName@@MethodName:getHeaderPadCount @TO@ MethodDeclaration@@public, int, MethodName:getHeaderPadCount,  @AT@ 15021 @LENGTH@ 17
---INS ReturnStatement@@MethodInvocation:getHeaderPadCount(null) @TO@ MethodDeclaration@@public, int, MethodName:getHeaderPadCount,  @AT@ 15050 @LENGTH@ 31
------INS MethodInvocation@@getHeaderPadCount(null) @TO@ ReturnStatement@@MethodInvocation:getHeaderPadCount(null) @AT@ 15057 @LENGTH@ 23
---------INS SimpleName@@MethodName:getHeaderPadCount:[null] @TO@ MethodInvocation@@getHeaderPadCount(null) @AT@ 15057 @LENGTH@ 23
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getHeaderPadCount:[null] @AT@ 15075 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON_UTF8)) @TO@ MethodInvocation:headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON)) @AT@ 2564 @LENGTH@ 78
---UPD MethodInvocation@@headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON_UTF8)) @TO@ headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON)) @AT@ 2564 @LENGTH@ 77
------UPD SimpleName@@MethodName:setAccept:[Collections.singletonList(MediaType.APPLICATION_JSON_UTF8)] @TO@ MethodName:setAccept:[Collections.singletonList(MediaType.APPLICATION_JSON)] @AT@ 2572 @LENGTH@ 69
---------UPD MethodInvocation@@Collections.singletonList(MediaType.APPLICATION_JSON_UTF8) @TO@ Collections.singletonList(MediaType.APPLICATION_JSON) @AT@ 2582 @LENGTH@ 58
------------UPD SimpleName@@MethodName:singletonList:[MediaType.APPLICATION_JSON_UTF8] @TO@ MethodName:singletonList:[MediaType.APPLICATION_JSON] @AT@ 2594 @LENGTH@ 46
---------------UPD QualifiedName@@MediaType.APPLICATION_JSON_UTF8 @TO@ MediaType.APPLICATION_JSON @AT@ 2608 @LENGTH@ 31
------------------UPD SimpleName@@APPLICATION_JSON_UTF8 @TO@ APPLICATION_JSON @AT@ 2618 @LENGTH@ 21


UPD VariableDeclarationStatement@@boolean blockWhenFull=getAndRemoveParameter(parameters,"blockWhenFull",boolean.class,defaultBlockWhenFull); @TO@ boolean blockWhenFull=getAndRemoveParameter(parameters,"blockWhenFull",Boolean.class,defaultBlockWhenFull); @AT@ 9151 @LENGTH@ 112
---UPD VariableDeclarationFragment@@blockWhenFull=getAndRemoveParameter(parameters,"blockWhenFull",boolean.class,defaultBlockWhenFull) @TO@ blockWhenFull=getAndRemoveParameter(parameters,"blockWhenFull",Boolean.class,defaultBlockWhenFull) @AT@ 9159 @LENGTH@ 103
------UPD MethodInvocation@@getAndRemoveParameter(parameters,"blockWhenFull",boolean.class,defaultBlockWhenFull) @TO@ getAndRemoveParameter(parameters,"blockWhenFull",Boolean.class,defaultBlockWhenFull) @AT@ 9175 @LENGTH@ 87
---------UPD SimpleName@@MethodName:getAndRemoveParameter:[parameters, "blockWhenFull", boolean.class, defaultBlockWhenFull] @TO@ MethodName:getAndRemoveParameter:[parameters, "blockWhenFull", Boolean.class, defaultBlockWhenFull] @AT@ 9175 @LENGTH@ 87
------------UPD TypeLiteral@@boolean.class @TO@ Boolean.class @AT@ 9226 @LENGTH@ 13


DEL FieldDeclaration@@private, final, OAuth2AuthorizationRequestUriBuilder, [authorizationRequestUriBuilder=new OAuth2AuthorizationRequestUriBuilder()] @AT@ 4892 @LENGTH@ 127
---DEL Modifier@@private @AT@ 4892 @LENGTH@ 7
---DEL Modifier@@final @AT@ 4900 @LENGTH@ 5
---DEL SimpleType@@OAuth2AuthorizationRequestUriBuilder @AT@ 4906 @LENGTH@ 36
---DEL VariableDeclarationFragment@@authorizationRequestUriBuilder=new OAuth2AuthorizationRequestUriBuilder() @AT@ 4943 @LENGTH@ 75
------DEL SimpleName@@authorizationRequestUriBuilder @AT@ 4943 @LENGTH@ 30
------DEL ClassInstanceCreation@@OAuth2AuthorizationRequestUriBuilder[] @AT@ 4976 @LENGTH@ 42
---------DEL New@@new @AT@ 4976 @LENGTH@ 3
---------DEL SimpleType@@OAuth2AuthorizationRequestUriBuilder @AT@ 4980 @LENGTH@ 36


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5950 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5970 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 5980 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5980 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 6022 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 6029 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 6029 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 6039 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:testServer=new AS2ServerConnection(AS2_VERSION,"MyServer-HTTP/1.1",SERVER_FQDN,8080,certList.toArray(new Certificate[0]),signingKP.getPrivate()) @TO@ Assignment:testServer=new AS2ServerConnection(AS2_VERSION,"MyServer-HTTP/1.1",SERVER_FQDN,TARGET_PORT,certList.toArray(new Certificate[0]),signingKP.getPrivate()) @AT@ 8569 @LENGTH@ 168
---UPD Assignment@@testServer=new AS2ServerConnection(AS2_VERSION,"MyServer-HTTP/1.1",SERVER_FQDN,8080,certList.toArray(new Certificate[0]),signingKP.getPrivate()) @TO@ testServer=new AS2ServerConnection(AS2_VERSION,"MyServer-HTTP/1.1",SERVER_FQDN,TARGET_PORT,certList.toArray(new Certificate[0]),signingKP.getPrivate()) @AT@ 8569 @LENGTH@ 167
------UPD ClassInstanceCreation@@AS2ServerConnection[AS2_VERSION, "MyServer-HTTP/1.1", SERVER_FQDN, 8080, certList.toArray(new Certificate[0]), signingKP.getPrivate()] @TO@ AS2ServerConnection[AS2_VERSION, "MyServer-HTTP/1.1", SERVER_FQDN, TARGET_PORT, certList.toArray(new Certificate[0]), signingKP.getPrivate()] @AT@ 8582 @LENGTH@ 154
---------INS SimpleName@@TARGET_PORT @TO@ ClassInstanceCreation@@AS2ServerConnection[AS2_VERSION, "MyServer-HTTP/1.1", SERVER_FQDN, 8080, certList.toArray(new Certificate[0]), signingKP.getPrivate()] @AT@ 8653 @LENGTH@ 11
---------DEL NumberLiteral@@8080 @AT@ 8653 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:policy.createSingletonServiceBuilder(SERVICE_NAME,service).build(context.getServiceTarget()).addDependency(ServiceName.parse("org.wildfly.clustering.default-group"),Group.class,group).install() @TO@ MethodInvocation:policy.createSingletonServiceBuilder(SERVICE_NAME,service).build(target).addDependency(ServiceName.parse("org.wildfly.clustering.default-group"),Group.class,group).install() @AT@ 2163 @LENGTH@ 239


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3794 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3814 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 3824 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3824 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3866 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 3873 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3873 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3883 @LENGTH@ 1


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(TransactionBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(TransactionServiceConfigurator::new); @AT@ 14812 @LENGTH@ 91
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(TransactionBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(TransactionServiceConfigurator::new) @AT@ 14835 @LENGTH@ 67
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[TransactionBuilder::new] @TO@ SimpleResourceServiceHandler[TransactionServiceConfigurator::new] @AT@ 14845 @LENGTH@ 57


UPD ReturnStatement@@MethodInvocation:ClientRegistration.withRegistrationId(name).userNameAttributeName(IdTokenClaimNames.SUB).scope(scopes).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).clientAuthenticationMethod(method).redirectUriTemplate("{baseUrl}/{action}/oauth2/code/{registrationId}").authorizationUri(metadata.getAuthorizationEndpointURI().toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()).tokenUri(metadata.getTokenEndpointURI().toASCIIString()).clientName(issuer) @TO@ MethodInvocation:ClientRegistration.withRegistrationId(name).userNameAttributeName(IdTokenClaimNames.SUB).scope(scopes).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).clientAuthenticationMethod(method).redirectUriTemplate("{baseUrl}/{action}/oauth2/code/{registrationId}").authorizationUri(metadata.getAuthorizationEndpointURI().toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).providerConfigurationMetadata(configurationMetadata).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()).tokenUri(metadata.getTokenEndpointURI().toASCIIString()).clientName(issuer) @AT@ 3983 @LENGTH@ 595
---UPD MethodInvocation@@ClientRegistration.withRegistrationId(name).userNameAttributeName(IdTokenClaimNames.SUB).scope(scopes).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).clientAuthenticationMethod(method).redirectUriTemplate("{baseUrl}/{action}/oauth2/code/{registrationId}").authorizationUri(metadata.getAuthorizationEndpointURI().toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()).tokenUri(metadata.getTokenEndpointURI().toASCIIString()).clientName(issuer) @TO@ ClientRegistration.withRegistrationId(name).userNameAttributeName(IdTokenClaimNames.SUB).scope(scopes).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).clientAuthenticationMethod(method).redirectUriTemplate("{baseUrl}/{action}/oauth2/code/{registrationId}").authorizationUri(metadata.getAuthorizationEndpointURI().toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).providerConfigurationMetadata(configurationMetadata).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()).tokenUri(metadata.getTokenEndpointURI().toASCIIString()).clientName(issuer) @AT@ 3990 @LENGTH@ 587
------INS MethodInvocation@@MethodName:providerConfigurationMetadata:[configurationMetadata] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(name).userNameAttributeName(IdTokenClaimNames.SUB).scope(scopes).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).clientAuthenticationMethod(method).redirectUriTemplate("{baseUrl}/{action}/oauth2/code/{registrationId}").authorizationUri(metadata.getAuthorizationEndpointURI().toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()).tokenUri(metadata.getTokenEndpointURI().toASCIIString()).clientName(issuer) @AT@ 4136 @LENGTH@ 491
---------INS SimpleName@@configurationMetadata @TO@ MethodInvocation@@MethodName:providerConfigurationMetadata:[configurationMetadata] @AT@ 4605 @LENGTH@ 21


DEL ExpressionStatement@@MethodInvocation:assertEquals("https://sns.us-east-1.amazonaws.com",mock.getEndpoint()) @AT@ 4724 @LENGTH@ 72
---DEL MethodInvocation@@assertEquals("https://sns.us-east-1.amazonaws.com",mock.getEndpoint()) @AT@ 4724 @LENGTH@ 71
------DEL SimpleName@@MethodName:assertEquals:["https://sns.us-east-1.amazonaws.com", mock.getEndpoint()] @AT@ 4724 @LENGTH@ 71
---------DEL StringLiteral@@"https://sns.us-east-1.amazonaws.com" @AT@ 4737 @LENGTH@ 37
---------DEL MethodInvocation@@mock.getEndpoint() @AT@ 4776 @LENGTH@ 18
------------DEL SimpleName@@Name:mock @AT@ 4776 @LENGTH@ 4
------------DEL SimpleName@@MethodName:getEndpoint:[] @AT@ 4781 @LENGTH@ 13


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(PartitionHandlingBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(PartitionHandlingServiceConfigurator::new); @AT@ 3527 @LENGTH@ 97
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(PartitionHandlingBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(PartitionHandlingServiceConfigurator::new) @AT@ 3550 @LENGTH@ 73
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[PartitionHandlingBuilder::new] @TO@ SimpleResourceServiceHandler[PartitionHandlingServiceConfigurator::new] @AT@ 3560 @LENGTH@ 63


DEL ExpressionStatement@@MethodInvocation:this.metaStore.start() @AT@ 3098 @LENGTH@ 23
---DEL MethodInvocation@@this.metaStore.start() @AT@ 3098 @LENGTH@ 22
------DEL FieldAccess@@this.metaStore @AT@ 3098 @LENGTH@ 14
---------DEL ThisExpression@@this @AT@ 3098 @LENGTH@ 4
---------DEL SimpleName@@metaStore @AT@ 3103 @LENGTH@ 9
------DEL SimpleName@@MethodName:start:[] @AT@ 3113 @LENGTH@ 7


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(address -> new MemoryBuilder(this.type,address)); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(address -> new MemoryServiceConfigurator(this.type,address)); @AT@ 3787 @LENGTH@ 116
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(address -> new MemoryBuilder(this.type,address)) @TO@ handler=new SimpleResourceServiceHandler(address -> new MemoryServiceConfigurator(this.type,address)) @AT@ 3810 @LENGTH@ 92
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[address -> new MemoryBuilder(this.type,address)] @TO@ SimpleResourceServiceHandler[address -> new MemoryServiceConfigurator(this.type,address)] @AT@ 3820 @LENGTH@ 82
---------UPD LambdaExpression@@address -> new MemoryBuilder(this.type,address) @TO@ address -> new MemoryServiceConfigurator(this.type,address) @AT@ 3853 @LENGTH@ 48
------------UPD ClassInstanceCreation@@MemoryBuilder[this.type, address] @TO@ MemoryServiceConfigurator[this.type, address] @AT@ 3864 @LENGTH@ 37
---------------UPD SimpleType@@MemoryBuilder @TO@ MemoryServiceConfigurator @AT@ 3868 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:convertsBsonTimestampToInstantCorrectly,  @TO@ TypeDeclaration@@[public]MongoConvertersUnitTests,  @AT@ 5953 @LENGTH@ 283
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:convertsBsonTimestampToInstantCorrectly,  @AT@ 5953 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:convertsBsonTimestampToInstantCorrectly,  @AT@ 5960 @LENGTH@ 4
---INS SimpleName@@MethodName:convertsBsonTimestampToInstantCorrectly @TO@ MethodDeclaration@@public, void, MethodName:convertsBsonTimestampToInstantCorrectly,  @AT@ 5965 @LENGTH@ 39
---INS ExpressionStatement@@MethodInvocation:Assertions.assertThat(BsonTimestampToInstantConverter.INSTANCE.convert(new BsonTimestamp(6615900307735969796L))).isCloseTo(Instant.ofEpochSecond(1540384327),new TemporalUnitLessThanOffset(100,ChronoUnit.MILLIS)) @TO@ MethodDeclaration@@public, void, MethodName:convertsBsonTimestampToInstantCorrectly,  @AT@ 6014 @LENGTH@ 219
------INS MethodInvocation@@Assertions.assertThat(BsonTimestampToInstantConverter.INSTANCE.convert(new BsonTimestamp(6615900307735969796L))).isCloseTo(Instant.ofEpochSecond(1540384327),new TemporalUnitLessThanOffset(100,ChronoUnit.MILLIS)) @TO@ ExpressionStatement@@MethodInvocation:Assertions.assertThat(BsonTimestampToInstantConverter.INSTANCE.convert(new BsonTimestamp(6615900307735969796L))).isCloseTo(Instant.ofEpochSecond(1540384327),new TemporalUnitLessThanOffset(100,ChronoUnit.MILLIS)) @AT@ 6014 @LENGTH@ 218
---------INS MethodInvocation@@MethodName:assertThat:[BsonTimestampToInstantConverter.INSTANCE.convert(new BsonTimestamp(6615900307735969796L))] @TO@ MethodInvocation@@Assertions.assertThat(BsonTimestampToInstantConverter.INSTANCE.convert(new BsonTimestamp(6615900307735969796L))).isCloseTo(Instant.ofEpochSecond(1540384327),new TemporalUnitLessThanOffset(100,ChronoUnit.MILLIS)) @AT@ 6014 @LENGTH@ 112
------------INS MethodInvocation@@BsonTimestampToInstantConverter.INSTANCE.convert(new BsonTimestamp(6615900307735969796L)) @TO@ MethodInvocation@@MethodName:assertThat:[BsonTimestampToInstantConverter.INSTANCE.convert(new BsonTimestamp(6615900307735969796L))] @AT@ 6036 @LENGTH@ 89
---------------INS QualifiedName@@Name:BsonTimestampToInstantConverter.INSTANCE @TO@ MethodInvocation@@BsonTimestampToInstantConverter.INSTANCE.convert(new BsonTimestamp(6615900307735969796L)) @AT@ 6036 @LENGTH@ 40
---------------INS SimpleName@@MethodName:convert:[new BsonTimestamp(6615900307735969796L)] @TO@ MethodInvocation@@BsonTimestampToInstantConverter.INSTANCE.convert(new BsonTimestamp(6615900307735969796L)) @AT@ 6077 @LENGTH@ 48
------------------INS ClassInstanceCreation@@BsonTimestamp[6615900307735969796L] @TO@ SimpleName@@MethodName:convert:[new BsonTimestamp(6615900307735969796L)] @AT@ 6085 @LENGTH@ 39
---------------------INS New@@new @TO@ ClassInstanceCreation@@BsonTimestamp[6615900307735969796L] @AT@ 6085 @LENGTH@ 3
---------------------INS SimpleType@@BsonTimestamp @TO@ ClassInstanceCreation@@BsonTimestamp[6615900307735969796L] @AT@ 6089 @LENGTH@ 13
---------------------INS NumberLiteral@@6615900307735969796L @TO@ ClassInstanceCreation@@BsonTimestamp[6615900307735969796L] @AT@ 6103 @LENGTH@ 20
---------INS SimpleName@@Name:Assertions @TO@ MethodInvocation@@Assertions.assertThat(BsonTimestampToInstantConverter.INSTANCE.convert(new BsonTimestamp(6615900307735969796L))).isCloseTo(Instant.ofEpochSecond(1540384327),new TemporalUnitLessThanOffset(100,ChronoUnit.MILLIS)) @AT@ 6014 @LENGTH@ 10
---------INS SimpleName@@MethodName:isCloseTo:[Instant.ofEpochSecond(1540384327), new TemporalUnitLessThanOffset(100,ChronoUnit.MILLIS)] @TO@ MethodInvocation@@Assertions.assertThat(BsonTimestampToInstantConverter.INSTANCE.convert(new BsonTimestamp(6615900307735969796L))).isCloseTo(Instant.ofEpochSecond(1540384327),new TemporalUnitLessThanOffset(100,ChronoUnit.MILLIS)) @AT@ 6132 @LENGTH@ 100
------------INS MethodInvocation@@Instant.ofEpochSecond(1540384327) @TO@ SimpleName@@MethodName:isCloseTo:[Instant.ofEpochSecond(1540384327), new TemporalUnitLessThanOffset(100,ChronoUnit.MILLIS)] @AT@ 6142 @LENGTH@ 33
---------------INS SimpleName@@Name:Instant @TO@ MethodInvocation@@Instant.ofEpochSecond(1540384327) @AT@ 6142 @LENGTH@ 7
---------------INS SimpleName@@MethodName:ofEpochSecond:[1540384327] @TO@ MethodInvocation@@Instant.ofEpochSecond(1540384327) @AT@ 6150 @LENGTH@ 25
------------------INS NumberLiteral@@1540384327 @TO@ SimpleName@@MethodName:ofEpochSecond:[1540384327] @AT@ 6164 @LENGTH@ 10
------------INS ClassInstanceCreation@@TemporalUnitLessThanOffset[100, ChronoUnit.MILLIS] @TO@ SimpleName@@MethodName:isCloseTo:[Instant.ofEpochSecond(1540384327), new TemporalUnitLessThanOffset(100,ChronoUnit.MILLIS)] @AT@ 6177 @LENGTH@ 54
---------------INS New@@new @TO@ ClassInstanceCreation@@TemporalUnitLessThanOffset[100, ChronoUnit.MILLIS] @AT@ 6177 @LENGTH@ 3
---------------INS SimpleType@@TemporalUnitLessThanOffset @TO@ ClassInstanceCreation@@TemporalUnitLessThanOffset[100, ChronoUnit.MILLIS] @AT@ 6181 @LENGTH@ 26
---------------INS NumberLiteral@@100 @TO@ ClassInstanceCreation@@TemporalUnitLessThanOffset[100, ChronoUnit.MILLIS] @AT@ 6208 @LENGTH@ 3
---------------INS QualifiedName@@ChronoUnit.MILLIS @TO@ ClassInstanceCreation@@TemporalUnitLessThanOffset[100, ChronoUnit.MILLIS] @AT@ 6213 @LENGTH@ 17
------------------INS SimpleName@@ChronoUnit @TO@ QualifiedName@@ChronoUnit.MILLIS @AT@ 6213 @LENGTH@ 10
------------------INS SimpleName@@MILLIS @TO@ QualifiedName@@ChronoUnit.MILLIS @AT@ 6224 @LENGTH@ 6


UPD TryStatement@@try {  Path path=new Path(SessionState.getTempTableSpace(conf),UUID.randomUUID().toString());  path=Warehouse.getDnsPath(path,conf);  location=path.toString();} catch (MetaException err) {  throw new SemanticException("Error while generating temp table path:",err);} @TO@ try {  location=SessionState.generateTempTableLocation(conf);} catch (MetaException err) {  throw new SemanticException("Error while generating temp table path:",err);} @AT@ 543935 @LENGTH@ 453
---DEL VariableDeclarationStatement@@Path path=new Path(SessionState.getTempTableSpace(conf),UUID.randomUUID().toString()); @AT@ 544075 @LENGTH@ 89
------DEL SimpleType@@Path @AT@ 544075 @LENGTH@ 4
------DEL VariableDeclarationFragment@@path=new Path(SessionState.getTempTableSpace(conf),UUID.randomUUID().toString()) @AT@ 544080 @LENGTH@ 83
---------DEL SimpleName@@path @AT@ 544080 @LENGTH@ 4
---------DEL ClassInstanceCreation@@Path[SessionState.getTempTableSpace(conf), UUID.randomUUID().toString()] @AT@ 544087 @LENGTH@ 76
------------DEL New@@new @AT@ 544087 @LENGTH@ 3
------------DEL SimpleType@@Path @AT@ 544091 @LENGTH@ 4
------------DEL MethodInvocation@@SessionState.getTempTableSpace(conf) @AT@ 544096 @LENGTH@ 36
---------------DEL SimpleName@@Name:SessionState @AT@ 544096 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:getTempTableSpace:[conf] @AT@ 544109 @LENGTH@ 23
------------------DEL SimpleName@@conf @AT@ 544127 @LENGTH@ 4
------------DEL MethodInvocation@@UUID.randomUUID().toString() @AT@ 544134 @LENGTH@ 28
---------------DEL MethodInvocation@@MethodName:randomUUID:[] @AT@ 544134 @LENGTH@ 17
---------------DEL SimpleName@@Name:UUID @AT@ 544134 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:toString:[] @AT@ 544152 @LENGTH@ 10
---UPD ExpressionStatement@@Assignment:path=Warehouse.getDnsPath(path,conf) @TO@ Assignment:location=SessionState.generateTempTableLocation(conf) @AT@ 544175 @LENGTH@ 40
------UPD Assignment@@path=Warehouse.getDnsPath(path,conf) @TO@ location=SessionState.generateTempTableLocation(conf) @AT@ 544175 @LENGTH@ 39
---------UPD SimpleName@@path @TO@ location @AT@ 544175 @LENGTH@ 4
---------UPD MethodInvocation@@Warehouse.getDnsPath(path,conf) @TO@ SessionState.generateTempTableLocation(conf) @AT@ 544182 @LENGTH@ 32
------------UPD SimpleName@@Name:Warehouse @TO@ Name:SessionState @AT@ 544182 @LENGTH@ 9
------------UPD SimpleName@@MethodName:getDnsPath:[path, conf] @TO@ MethodName:generateTempTableLocation:[conf] @AT@ 544192 @LENGTH@ 22
---------------DEL SimpleName@@path @AT@ 544203 @LENGTH@ 4
---DEL ExpressionStatement@@Assignment:location=path.toString() @AT@ 544226 @LENGTH@ 27
------DEL Assignment@@location=path.toString() @AT@ 544226 @LENGTH@ 26
---------DEL SimpleName@@location @AT@ 544226 @LENGTH@ 8
---------DEL Operator@@= @AT@ 544234 @LENGTH@ 1
---------DEL MethodInvocation@@path.toString() @AT@ 544237 @LENGTH@ 15
------------DEL SimpleName@@Name:path @AT@ 544237 @LENGTH@ 4
------------DEL SimpleName@@MethodName:toString:[] @AT@ 544242 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> RepositoryFragment.implemented((Class)CustomFragment.class,new UnrelatedImpl())).hasMessageMatching("Fragment implementation .* does not implement .*UnrelatedImpl!").isInstanceOf(IllegalArgumentException.class) @TO@ MethodInvocation:assertThatThrownBy(() -> RepositoryFragment.implemented((Class)CustomFragment.class,new UnrelatedImpl())).hasMessageMatching("Fragment implementation .*UnrelatedImpl does not implement .*!").isInstanceOf(IllegalArgumentException.class) @AT@ 994 @LENGTH@ 248
---UPD MethodInvocation@@assertThatThrownBy(() -> RepositoryFragment.implemented((Class)CustomFragment.class,new UnrelatedImpl())).hasMessageMatching("Fragment implementation .* does not implement .*UnrelatedImpl!").isInstanceOf(IllegalArgumentException.class) @TO@ assertThatThrownBy(() -> RepositoryFragment.implemented((Class)CustomFragment.class,new UnrelatedImpl())).hasMessageMatching("Fragment implementation .*UnrelatedImpl does not implement .*!").isInstanceOf(IllegalArgumentException.class) @AT@ 994 @LENGTH@ 247
------UPD MethodInvocation@@MethodName:hasMessageMatching:["Fragment implementation .* does not implement .*UnrelatedImpl!"] @TO@ MethodName:hasMessageMatching:["Fragment implementation .*UnrelatedImpl does not implement .*!"] @AT@ 994 @LENGTH@ 197
---------UPD StringLiteral@@"Fragment implementation .* does not implement .*UnrelatedImpl!" @TO@ "Fragment implementation .*UnrelatedImpl does not implement .*!" @AT@ 1126 @LENGTH@ 64


DEL ExpressionStatement@@MethodInvocation:this.metaStore.start() @AT@ 3012 @LENGTH@ 23
---DEL MethodInvocation@@this.metaStore.start() @AT@ 3012 @LENGTH@ 22
------DEL FieldAccess@@this.metaStore @AT@ 3012 @LENGTH@ 14
---------DEL ThisExpression@@this @AT@ 3012 @LENGTH@ 4
---------DEL SimpleName@@metaStore @AT@ 3017 @LENGTH@ 9
------DEL SimpleName@@MethodName:start:[] @AT@ 3027 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Could not serialize Function object",ex) @TO@ ClassInstanceCreation:new IllegalArgumentException("Could not serialize database object",ex) @AT@ 1836 @LENGTH@ 78
---UPD ClassInstanceCreation@@IllegalArgumentException["Could not serialize Function object", ex] @TO@ IllegalArgumentException["Could not serialize database object", ex] @AT@ 1842 @LENGTH@ 71
------UPD StringLiteral@@"Could not serialize Function object" @TO@ "Could not serialize database object" @AT@ 1871 @LENGTH@ 37


UPD TypeDeclaration@@[@MetaInfServices(DistributableSecurityDomainSingleSignOnManagerBuilderProvider.class), public]DistributableSingleSignOnManagerServiceConfiguratorProvider, [DistributableSecurityDomainSingleSignOnManagerBuilderProvider] @TO@ [@MetaInfServices(DistributableSecurityDomainSingleSignOnManagerServiceConfiguratorProvider.class), public]DistributableSingleSignOnManagerServiceConfiguratorProvider, [DistributableSecurityDomainSingleSignOnManagerServiceConfiguratorProvider] @AT@ 1748 @LENGTH@ 1119
---UPD SingleMemberAnnotation@@@MetaInfServices(DistributableSecurityDomainSingleSignOnManagerBuilderProvider.class) @TO@ @MetaInfServices(DistributableSecurityDomainSingleSignOnManagerServiceConfiguratorProvider.class) @AT@ 1748 @LENGTH@ 85
---UPD SimpleType@@DistributableSecurityDomainSingleSignOnManagerBuilderProvider @TO@ DistributableSecurityDomainSingleSignOnManagerServiceConfiguratorProvider @AT@ 1918 @LENGTH@ 61


UPD TypeDeclaration@@[public]SingletonDeploymentUnitPhaseBuilder, [DeploymentUnitPhaseBuilder] @TO@ [@SuppressWarnings("deprecation"), public]SingletonDeploymentUnitPhaseBuilder, [DeploymentUnitPhaseBuilder] @AT@ 1618 @LENGTH@ 915
---INS SingleMemberAnnotation@@@SuppressWarnings("deprecation") @TO@ TypeDeclaration@@[public]SingletonDeploymentUnitPhaseBuilder, [DeploymentUnitPhaseBuilder] @AT@ 1618 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:conversionService.addConverter(stringToNameConverter()) @TO@ MethodInvocation:conversionService.addConverter(StringToLdapNameConverter.INSTANCE) @AT@ 13692 @LENGTH@ 56
---UPD MethodInvocation@@conversionService.addConverter(stringToNameConverter()) @TO@ conversionService.addConverter(StringToLdapNameConverter.INSTANCE) @AT@ 13692 @LENGTH@ 55
------UPD SimpleName@@MethodName:addConverter:[stringToNameConverter()] @TO@ MethodName:addConverter:[StringToLdapNameConverter.INSTANCE] @AT@ 13710 @LENGTH@ 37
---------INS QualifiedName@@StringToLdapNameConverter.INSTANCE @TO@ SimpleName@@MethodName:addConverter:[stringToNameConverter()] @AT@ 13636 @LENGTH@ 34
------------INS SimpleName@@StringToLdapNameConverter @TO@ QualifiedName@@StringToLdapNameConverter.INSTANCE @AT@ 13636 @LENGTH@ 25
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@StringToLdapNameConverter.INSTANCE @AT@ 13662 @LENGTH@ 8
---------DEL MethodInvocation@@MethodName:stringToNameConverter:[] @AT@ 13723 @LENGTH@ 23


UPD VariableDeclarationStatement@@ReactiveMongoQueryExecution execution=getExecution(query,parameterAccessor,new ResultProcessingConverter(processor,operations,instantiators),find); @TO@ ReactiveMongoQueryExecution execution=getExecution(parameterAccessor,new ResultProcessingConverter(processor,operations,instantiators),find); @AT@ 4846 @LENGTH@ 158
---UPD VariableDeclarationFragment@@execution=getExecution(query,parameterAccessor,new ResultProcessingConverter(processor,operations,instantiators),find) @TO@ execution=getExecution(parameterAccessor,new ResultProcessingConverter(processor,operations,instantiators),find) @AT@ 4874 @LENGTH@ 129
------UPD MethodInvocation@@getExecution(query,parameterAccessor,new ResultProcessingConverter(processor,operations,instantiators),find) @TO@ getExecution(parameterAccessor,new ResultProcessingConverter(processor,operations,instantiators),find) @AT@ 4886 @LENGTH@ 117
---------UPD SimpleName@@MethodName:getExecution:[query, parameterAccessor, new ResultProcessingConverter(processor,operations,instantiators), find] @TO@ MethodName:getExecution:[parameterAccessor, new ResultProcessingConverter(processor,operations,instantiators), find] @AT@ 4886 @LENGTH@ 117
------------DEL SimpleName@@query @AT@ 4899 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:OidcUserRequest, ClientRegistration clientRegistration, OAuth2AccessToken accessToken, OidcIdToken idToken,  @TO@ public, voidMethodName:OidcUserRequest, ClientRegistration clientRegistration, OAuth2AccessToken accessToken, OidcIdToken idToken, Map<String,Object> additionalParameters,  @AT@ 1599 @LENGTH@ 247
---UPD SuperConstructorInvocation@@super(clientRegistration,accessToken);
 @TO@ super(clientRegistration,accessToken,additionalParameters);
 @AT@ 1725 @LENGTH@ 39
------INS SimpleName@@additionalParameters @TO@ SuperConstructorInvocation@@super(clientRegistration,accessToken);
 @AT@ 2373 @LENGTH@ 20
---INS SingleVariableDeclaration@@Map<String,Object> additionalParameters @TO@ MethodDeclaration@@public, voidMethodName:OidcUserRequest, ClientRegistration clientRegistration, OAuth2AccessToken accessToken, OidcIdToken idToken,  @AT@ 2287 @LENGTH@ 40
------INS ParameterizedType@@Map<String,Object> @TO@ SingleVariableDeclaration@@Map<String,Object> additionalParameters @AT@ 2287 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 2287 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 2291 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 2299 @LENGTH@ 6
------INS SimpleName@@additionalParameters @TO@ SingleVariableDeclaration@@Map<String,Object> additionalParameters @AT@ 2307 @LENGTH@ 20


INS IfStatement@@if (raw == null) {  return Collections.emptyList();} @TO@ MethodDeclaration@@public, final, List<MapRecord<K,HK,HV>>, MethodName:doInRedis, RedisConnection connection,  @AT@ 10175 @LENGTH@ 58
---INS InfixExpression@@raw == null @TO@ IfStatement@@if (raw == null) {  return Collections.emptyList();} @AT@ 10178 @LENGTH@ 11
------INS SimpleName@@raw @TO@ InfixExpression@@raw == null @AT@ 10178 @LENGTH@ 3
------INS Operator@@== @TO@ InfixExpression@@raw == null @AT@ 10181 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@raw == null @AT@ 10185 @LENGTH@ 4
---INS Block@@ThenBody:{  return Collections.emptyList();} @TO@ IfStatement@@if (raw == null) {  return Collections.emptyList();} @AT@ 10191 @LENGTH@ 42
------INS ReturnStatement@@MethodInvocation:Collections.emptyList() @TO@ Block@@ThenBody:{  return Collections.emptyList();} @AT@ 10197 @LENGTH@ 31
---------INS MethodInvocation@@Collections.emptyList() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 10204 @LENGTH@ 23
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 10204 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 10216 @LENGTH@ 11


UPD ReturnStatement@@ConditionalExpression:raw != null && raw.getClusterTime() != null ? Instant.ofEpochMilli(raw.getClusterTime().getValue()) : null @TO@ ConditionalExpression:raw != null && raw.getClusterTime() != null ? converter.getConversionService().convert(raw.getClusterTime(),Instant.class) : null @AT@ 2677 @LENGTH@ 114
---UPD ConditionalExpression@@raw != null && raw.getClusterTime() != null ? Instant.ofEpochMilli(raw.getClusterTime().getValue()) : null @TO@ raw != null && raw.getClusterTime() != null ? converter.getConversionService().convert(raw.getClusterTime(),Instant.class) : null @AT@ 2684 @LENGTH@ 106
------UPD MethodInvocation@@Instant.ofEpochMilli(raw.getClusterTime().getValue()) @TO@ converter.getConversionService().convert(raw.getClusterTime(),Instant.class) @AT@ 2730 @LENGTH@ 53
---------UPD SimpleName@@Name:Instant @TO@ Name:converter @AT@ 2730 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:getConversionService:[] @TO@ MethodInvocation@@Instant.ofEpochMilli(raw.getClusterTime().getValue()) @AT@ 2735 @LENGTH@ 32
---------UPD SimpleName@@MethodName:ofEpochMilli:[raw.getClusterTime().getValue()] @TO@ MethodName:convert:[raw.getClusterTime(), Instant.class] @AT@ 2738 @LENGTH@ 45
------------UPD MethodInvocation@@raw.getClusterTime().getValue() @TO@ raw.getClusterTime() @AT@ 2751 @LENGTH@ 31
---------------DEL MethodInvocation@@MethodName:getClusterTime:[] @AT@ 2751 @LENGTH@ 20
---------------UPD SimpleName@@MethodName:getValue:[] @TO@ MethodName:getClusterTime:[] @AT@ 2772 @LENGTH@ 10
------------INS TypeLiteral@@Instant.class @TO@ SimpleName@@MethodName:ofEpochMilli:[raw.getClusterTime().getValue()] @AT@ 2798 @LENGTH@ 13


UPD EnhancedForStatement@@for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader())) {  for (  CapabilityServiceBuilder<?> builder : provider.getBuilders(registry,null,defaultChannel)) {    builder.configure(context).build(target).install();  }} @TO@ for (IdentityGroupServiceConfiguratorProvider provider : ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader())) {  for (  CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(registry,null,defaultChannel)) {    configurator.configure(context).build(target).install();  }} @AT@ 5210 @LENGTH@ 365
---UPD SingleVariableDeclaration@@GroupAliasBuilderProvider provider @TO@ IdentityGroupServiceConfiguratorProvider provider @AT@ 5215 @LENGTH@ 34
------UPD SimpleType@@GroupAliasBuilderProvider @TO@ IdentityGroupServiceConfiguratorProvider @AT@ 5215 @LENGTH@ 25
---UPD MethodInvocation@@ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader()) @AT@ 5252 @LENGTH@ 101
------UPD SimpleName@@MethodName:load:[GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[IdentityGroupServiceConfiguratorProvider.class, IdentityGroupServiceConfiguratorProvider.class.getClassLoader()] @AT@ 5266 @LENGTH@ 87
---------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 5271 @LENGTH@ 31
---------UPD MethodInvocation@@GroupAliasBuilderProvider.class.getClassLoader() @TO@ IdentityGroupServiceConfiguratorProvider.class.getClassLoader() @AT@ 5304 @LENGTH@ 48
------------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 5304 @LENGTH@ 31
---UPD EnhancedForStatement@@for (CapabilityServiceBuilder<?> builder : provider.getBuilders(registry,null,defaultChannel)) {  builder.configure(context).build(target).install();} @TO@ for (CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(registry,null,defaultChannel)) {  configurator.configure(context).build(target).install();} @AT@ 5373 @LENGTH@ 188
------UPD SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @TO@ CapabilityServiceConfigurator configurator @AT@ 5378 @LENGTH@ 35
---------DEL ParameterizedType@@CapabilityServiceBuilder<?> @AT@ 5378 @LENGTH@ 27
------------DEL SimpleType@@CapabilityServiceBuilder @AT@ 5378 @LENGTH@ 24
------------DEL WildcardType@@? @AT@ 5403 @LENGTH@ 1
---------UPD SimpleName@@builder @TO@ configurator @AT@ 5406 @LENGTH@ 7
---------INS SimpleType@@CapabilityServiceConfigurator @TO@ SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @AT@ 5443 @LENGTH@ 29
------UPD MethodInvocation@@provider.getBuilders(registry,null,defaultChannel) @TO@ provider.getServiceConfigurators(registry,null,defaultChannel) @AT@ 5416 @LENGTH@ 52
---------UPD SimpleName@@MethodName:getBuilders:[registry, null, defaultChannel] @TO@ MethodName:getServiceConfigurators:[registry, null, defaultChannel] @AT@ 5425 @LENGTH@ 43
------UPD ExpressionStatement@@MethodInvocation:builder.configure(context).build(target).install() @TO@ MethodInvocation:configurator.configure(context).build(target).install() @AT@ 5492 @LENGTH@ 51
---------UPD MethodInvocation@@builder.configure(context).build(target).install() @TO@ configurator.configure(context).build(target).install() @AT@ 5492 @LENGTH@ 50
------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 5492 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:confirm, CorrelationData correlationData, boolean ack, String cause,  @TO@ public, void, MethodName:confirm, @NonNull CorrelationData correlationData, boolean ack, @Nullable String cause,  @AT@ 23269 @LENGTH@ 796
---UPD SingleVariableDeclaration@@CorrelationData correlationData @TO@ @NonNull CorrelationData correlationData @AT@ 23289 @LENGTH@ 31
---UPD SingleVariableDeclaration@@String cause @TO@ @Nullable String cause @AT@ 23335 @LENGTH@ 12


UPD MethodDeclaration@@public, voidMethodName:BlockingQueueConsumer, ConnectionFactory connectionFactory, MessagePropertiesConverter messagePropertiesConverter, ActiveObjectCounter<BlockingQueueConsumer> activeObjectCounter, AcknowledgeMode acknowledgeMode, boolean transactional, int prefetchCount, boolean defaultRequeueRejected, Map<String,Object> consumerArgs, boolean noLocal, boolean exclusive, String... queues,  @TO@ public, voidMethodName:BlockingQueueConsumer, ConnectionFactory connectionFactory, MessagePropertiesConverter messagePropertiesConverter, ActiveObjectCounter<BlockingQueueConsumer> activeObjectCounter, AcknowledgeMode acknowledgeMode, boolean transactional, int prefetchCount, boolean defaultRequeueRejected, @Nullable Map<String,Object> consumerArgs, boolean noLocal, boolean exclusive, String... queues,  @AT@ 11031 @LENGTH@ 1009
---UPD SingleVariableDeclaration@@Map<String,Object> consumerArgs @TO@ @Nullable Map<String,Object> consumerArgs @AT@ 11335 @LENGTH@ 32


UPD ThrowStatement@@ClassInstanceCreation:new RedirectMismatchException("Invalid redirect: " + requestedRedirect + " does not match one of the registered values: "+ redirectUris.toString()) @TO@ ClassInstanceCreation:new RedirectMismatchException("Invalid redirect: " + requestedRedirect + " does not match one of the registered values.") @AT@ 6997 @LENGTH@ 159
---UPD ClassInstanceCreation@@RedirectMismatchException["Invalid redirect: " + requestedRedirect + " does not match one of the registered values: "+ redirectUris.toString()] @TO@ RedirectMismatchException["Invalid redirect: " + requestedRedirect + " does not match one of the registered values."] @AT@ 7003 @LENGTH@ 152
------UPD InfixExpression@@"Invalid redirect: " + requestedRedirect + " does not match one of the registered values: "+ redirectUris.toString() @TO@ "Invalid redirect: " + requestedRedirect + " does not match one of the registered values." @AT@ 7033 @LENGTH@ 121
---------UPD StringLiteral@@" does not match one of the registered values: " @TO@ " does not match one of the registered values." @AT@ 7080 @LENGTH@ 48
---------DEL MethodInvocation@@redirectUris.toString() @AT@ 7131 @LENGTH@ 23
------------DEL SimpleName@@Name:redirectUris @AT@ 7131 @LENGTH@ 12
------------DEL SimpleName@@MethodName:toString:[] @AT@ 7144 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:Assert.notNull(taskExecutor,"'taskExecutor' cannot be null") @TO@ MethodDeclaration@@public, void, MethodName:setTaskExecutor, Executor taskExecutor,  @AT@ 29041 @LENGTH@ 62
---INS MethodInvocation@@Assert.notNull(taskExecutor,"'taskExecutor' cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(taskExecutor,"'taskExecutor' cannot be null") @AT@ 29041 @LENGTH@ 61
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(taskExecutor,"'taskExecutor' cannot be null") @AT@ 29041 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[taskExecutor, "'taskExecutor' cannot be null"] @TO@ MethodInvocation@@Assert.notNull(taskExecutor,"'taskExecutor' cannot be null") @AT@ 29048 @LENGTH@ 54
---------INS SimpleName@@taskExecutor @TO@ SimpleName@@MethodName:notNull:[taskExecutor, "'taskExecutor' cannot be null"] @AT@ 29056 @LENGTH@ 12
---------INS StringLiteral@@"'taskExecutor' cannot be null" @TO@ SimpleName@@MethodName:notNull:[taskExecutor, "'taskExecutor' cannot be null"] @AT@ 29070 @LENGTH@ 31


INS MethodDeclaration@@private, static, void, MethodName:cancel, Channel channel, String consumerTag,  @TO@ TypeDeclaration@@[public, abstract]RabbitUtils,  @AT@ 4470 @LENGTH@ 371
---MOV TryStatement@@try {  channel.basicCancel(consumerTag);} catch (IOException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }}catch (AlreadyClosedException e) {  if (logger.isTraceEnabled()) {    logger.trace(channel + " is already closed");  }} @TO@ MethodDeclaration@@private, static, void, MethodName:cancel, Channel channel, String consumerTag,  @AT@ 3910 @LENGTH@ 324
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, void, MethodName:cancel, Channel channel, String consumerTag,  @AT@ 4470 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, void, MethodName:cancel, Channel channel, String consumerTag,  @AT@ 4478 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, static, void, MethodName:cancel, Channel channel, String consumerTag,  @AT@ 4485 @LENGTH@ 4
---INS SimpleName@@MethodName:cancel @TO@ MethodDeclaration@@private, static, void, MethodName:cancel, Channel channel, String consumerTag,  @AT@ 4490 @LENGTH@ 6
---INS SingleVariableDeclaration@@Channel channel @TO@ MethodDeclaration@@private, static, void, MethodName:cancel, Channel channel, String consumerTag,  @AT@ 4497 @LENGTH@ 15
------INS SimpleType@@Channel @TO@ SingleVariableDeclaration@@Channel channel @AT@ 4497 @LENGTH@ 7
------INS SimpleName@@channel @TO@ SingleVariableDeclaration@@Channel channel @AT@ 4505 @LENGTH@ 7
---INS SingleVariableDeclaration@@String consumerTag @TO@ MethodDeclaration@@private, static, void, MethodName:cancel, Channel channel, String consumerTag,  @AT@ 4514 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String consumerTag @AT@ 4514 @LENGTH@ 6
------INS SimpleName@@consumerTag @TO@ SingleVariableDeclaration@@String consumerTag @AT@ 4521 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:setContentType, String contentType,  @TO@ public, void, MethodName:setContentType, @Nullable String contentType,  @AT@ 4017 @LENGTH@ 85
---UPD SingleVariableDeclaration@@String contentType @TO@ @Nullable String contentType @AT@ 4044 @LENGTH@ 18


UPD VariableDeclarationStatement@@Cache<?,?> cache=ServiceContainerHelper.findValue(registry,name); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(CurrentServiceContainer.getServiceContainer(),name).get(); @AT@ 2624 @LENGTH@ 69
---UPD VariableDeclarationFragment@@cache=ServiceContainerHelper.findValue(registry,name) @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(CurrentServiceContainer.getServiceContainer(),name).get() @AT@ 2636 @LENGTH@ 56
------UPD MethodInvocation@@ServiceContainerHelper.findValue(registry,name) @TO@ new PassiveServiceSupplier<Cache<?,?>>(CurrentServiceContainer.getServiceContainer(),name).get() @AT@ 2644 @LENGTH@ 48
---------INS ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[CurrentServiceContainer.getServiceContainer(), name] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(registry,name) @AT@ 2519 @LENGTH@ 92
------------INS New@@new @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[CurrentServiceContainer.getServiceContainer(), name] @AT@ 2519 @LENGTH@ 3
------------INS ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[CurrentServiceContainer.getServiceContainer(), name] @AT@ 2523 @LENGTH@ 35
---------------INS SimpleType@@PassiveServiceSupplier @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2523 @LENGTH@ 22
---------------INS ParameterizedType@@Cache<?,?> @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2546 @LENGTH@ 11
------------------INS SimpleType@@Cache @TO@ ParameterizedType@@Cache<?,?> @AT@ 2546 @LENGTH@ 5
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2552 @LENGTH@ 1
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2555 @LENGTH@ 1
------------INS MethodInvocation@@CurrentServiceContainer.getServiceContainer() @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[CurrentServiceContainer.getServiceContainer(), name] @AT@ 2559 @LENGTH@ 45
---------------INS SimpleName@@MethodName:getServiceContainer:[] @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 2583 @LENGTH@ 21
---------------MOV SimpleName@@Name:ServiceContainerHelper @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 2644 @LENGTH@ 22
------------INS SimpleName@@name @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[CurrentServiceContainer.getServiceContainer(), name] @AT@ 2606 @LENGTH@ 4
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(registry,name) @AT@ 2612 @LENGTH@ 5
---------UPD SimpleName@@Name:ServiceContainerHelper @TO@ Name:CurrentServiceContainer @AT@ 2644 @LENGTH@ 22
---------DEL SimpleName@@MethodName:findValue:[registry, name] @AT@ 2667 @LENGTH@ 25
------------DEL SimpleName@@registry @AT@ 2677 @LENGTH@ 8
------------DEL SimpleName@@name @AT@ 2687 @LENGTH@ 4


UPD FieldDeclaration@@public, static, final, CSVFormat, [POSTGRESQL_TEXT=DEFAULT.withDelimiter(TAB).withEscape(DOUBLE_QUOTE_CHAR).withIgnoreEmptyLines(false).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF).withNullString("\\N").withQuoteMode(QuoteMode.ALL_NON_NULL)] @TO@ public, static, final, CSVFormat, [POSTGRESQL_TEXT=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF).withNullString("\\N").withQuoteMode(QuoteMode.ALL_NON_NULL)] @AT@ 15327 @LENGTH@ 337
---UPD VariableDeclarationFragment@@POSTGRESQL_TEXT=DEFAULT.withDelimiter(TAB).withEscape(DOUBLE_QUOTE_CHAR).withIgnoreEmptyLines(false).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF).withNullString("\\N").withQuoteMode(QuoteMode.ALL_NON_NULL) @TO@ POSTGRESQL_TEXT=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF).withNullString("\\N").withQuoteMode(QuoteMode.ALL_NON_NULL) @AT@ 15357 @LENGTH@ 306
------UPD MethodInvocation@@DEFAULT.withDelimiter(TAB).withEscape(DOUBLE_QUOTE_CHAR).withIgnoreEmptyLines(false).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF).withNullString("\\N").withQuoteMode(QuoteMode.ALL_NON_NULL) @TO@ DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF).withNullString("\\N").withQuoteMode(QuoteMode.ALL_NON_NULL) @AT@ 15375 @LENGTH@ 288
---------UPD MethodInvocation@@MethodName:withEscape:[DOUBLE_QUOTE_CHAR] @TO@ MethodName:withEscape:[BACKSLASH] @AT@ 15375 @LENGTH@ 82
------------UPD SimpleName@@DOUBLE_QUOTE_CHAR @TO@ BACKSLASH @AT@ 15439 @LENGTH@ 17


INS FieldDeclaration@@public, static, final, AuthorizationGrantType, [REFRESH_TOKEN=new AuthorizationGrantType("refresh_token")] @TO@ TypeDeclaration@@[public, final]AuthorizationGrantType, [Serializable] @AT@ 1806 @LENGTH@ 103
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [REFRESH_TOKEN=new AuthorizationGrantType("refresh_token")] @AT@ 1806 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [REFRESH_TOKEN=new AuthorizationGrantType("refresh_token")] @AT@ 1813 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [REFRESH_TOKEN=new AuthorizationGrantType("refresh_token")] @AT@ 1820 @LENGTH@ 5
---INS SimpleType@@AuthorizationGrantType @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [REFRESH_TOKEN=new AuthorizationGrantType("refresh_token")] @AT@ 1826 @LENGTH@ 22
---INS VariableDeclarationFragment@@REFRESH_TOKEN=new AuthorizationGrantType("refresh_token") @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [REFRESH_TOKEN=new AuthorizationGrantType("refresh_token")] @AT@ 1849 @LENGTH@ 59
------INS SimpleName@@REFRESH_TOKEN @TO@ VariableDeclarationFragment@@REFRESH_TOKEN=new AuthorizationGrantType("refresh_token") @AT@ 1849 @LENGTH@ 13
------INS ClassInstanceCreation@@AuthorizationGrantType["refresh_token"] @TO@ VariableDeclarationFragment@@REFRESH_TOKEN=new AuthorizationGrantType("refresh_token") @AT@ 1865 @LENGTH@ 43
---------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationGrantType["refresh_token"] @AT@ 1865 @LENGTH@ 3
---------INS SimpleType@@AuthorizationGrantType @TO@ ClassInstanceCreation@@AuthorizationGrantType["refresh_token"] @AT@ 1869 @LENGTH@ 22
---------INS StringLiteral@@"refresh_token" @TO@ ClassInstanceCreation@@AuthorizationGrantType["refresh_token"] @AT@ 1892 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:scheduledLoggingExecutor.schedule(new Callable<Void>(){
  @Override public Void call() throws Exception {
    readLock.lock();
    try {
      if (dagRunning) {
        LOG.info("Stats for current dag: {}",dagStats);
      }
    }
  finally {
      readLock.unlock();
    }
    return null;
  }
}
,10000L,TimeUnit.MILLISECONDS) @TO@ MethodInvocation:scheduledLoggingExecutor.scheduleAtFixedRate(new Runnable(){
  @Override public void run(){
    readLock.lock();
    try {
      if (dagRunning) {
        LOG.info("Stats for current dag: {}",dagStats);
      }
    }
  finally {
      readLock.unlock();
    }
  }
}
,0,10000L,TimeUnit.MILLISECONDS) @AT@ 32628 @LENGTH@ 409
---UPD MethodInvocation@@scheduledLoggingExecutor.schedule(new Callable<Void>(){
  @Override public Void call() throws Exception {
    readLock.lock();
    try {
      if (dagRunning) {
        LOG.info("Stats for current dag: {}",dagStats);
      }
    }
  finally {
      readLock.unlock();
    }
    return null;
  }
}
,10000L,TimeUnit.MILLISECONDS) @TO@ scheduledLoggingExecutor.scheduleAtFixedRate(new Runnable(){
  @Override public void run(){
    readLock.lock();
    try {
      if (dagRunning) {
        LOG.info("Stats for current dag: {}",dagStats);
      }
    }
  finally {
      readLock.unlock();
    }
  }
}
,0,10000L,TimeUnit.MILLISECONDS) @AT@ 32628 @LENGTH@ 408
------UPD SimpleName@@MethodName:schedule:[new Callable<Void>(){
  @Override public Void call() throws Exception {
    readLock.lock();
    try {
      if (dagRunning) {
        LOG.info("Stats for current dag: {}",dagStats);
      }
    }
  finally {
      readLock.unlock();
    }
    return null;
  }
}
, 10000L, TimeUnit.MILLISECONDS] @TO@ MethodName:scheduleAtFixedRate:[new Runnable(){
  @Override public void run(){
    readLock.lock();
    try {
      if (dagRunning) {
        LOG.info("Stats for current dag: {}",dagStats);
      }
    }
  finally {
      readLock.unlock();
    }
  }
}
, 0, 10000L, TimeUnit.MILLISECONDS] @AT@ 32653 @LENGTH@ 383
---------UPD ClassInstanceCreation@@Callable<Void>[] @TO@ Runnable[] @AT@ 32662 @LENGTH@ 342
------------DEL ParameterizedType@@Callable<Void> @AT@ 32666 @LENGTH@ 14
---------------DEL SimpleType@@Callable @AT@ 32666 @LENGTH@ 8
---------------DEL SimpleType@@Void @AT@ 32675 @LENGTH@ 4
------------INS SimpleType@@Runnable @TO@ ClassInstanceCreation@@Callable<Void>[] @AT@ 32677 @LENGTH@ 8
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:schedule:[new Callable<Void>(){
  @Override public Void call() throws Exception {
    readLock.lock();
    try {
      if (dagRunning) {
        LOG.info("Stats for current dag: {}",dagStats);
      }
    }
  finally {
      readLock.unlock();
    }
    return null;
  }
}
, 10000L, TimeUnit.MILLISECONDS] @AT@ 32970 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:result.add(new BinaryRequirementAliasBuilder<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY),ClusteringCacheRequirement.REGISTRY_ENTRY,containerName,targetCacheName,ClusteringCacheRequirement.REGISTRY_ENTRY.getType())) @TO@ MethodInvocation:result.add(new IdentityCapabilityServiceConfigurator<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY),ClusteringCacheRequirement.REGISTRY_ENTRY,containerName,targetCacheName)) @AT@ 2714 @LENGTH@ 244
---UPD MethodInvocation@@result.add(new BinaryRequirementAliasBuilder<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY),ClusteringCacheRequirement.REGISTRY_ENTRY,containerName,targetCacheName,ClusteringCacheRequirement.REGISTRY_ENTRY.getType())) @TO@ result.add(new IdentityCapabilityServiceConfigurator<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY),ClusteringCacheRequirement.REGISTRY_ENTRY,containerName,targetCacheName)) @AT@ 2714 @LENGTH@ 243
------UPD SimpleName@@MethodName:add:[new BinaryRequirementAliasBuilder<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY),ClusteringCacheRequirement.REGISTRY_ENTRY,containerName,targetCacheName,ClusteringCacheRequirement.REGISTRY_ENTRY.getType())] @TO@ MethodName:add:[new IdentityCapabilityServiceConfigurator<>(registry.getServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY),ClusteringCacheRequirement.REGISTRY_ENTRY,containerName,targetCacheName)] @AT@ 2721 @LENGTH@ 236
---------UPD ClassInstanceCreation@@BinaryRequirementAliasBuilder<>[registry.getServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY), ClusteringCacheRequirement.REGISTRY_ENTRY, containerName, targetCacheName, ClusteringCacheRequirement.REGISTRY_ENTRY.getType()] @TO@ IdentityCapabilityServiceConfigurator<>[registry.getServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY), ClusteringCacheRequirement.REGISTRY_ENTRY, containerName, targetCacheName] @AT@ 2725 @LENGTH@ 231
------------UPD ParameterizedType@@BinaryRequirementAliasBuilder<> @TO@ IdentityCapabilityServiceConfigurator<> @AT@ 2729 @LENGTH@ 31
---------------UPD SimpleType@@BinaryRequirementAliasBuilder @TO@ IdentityCapabilityServiceConfigurator @AT@ 2729 @LENGTH@ 29
------------DEL MethodInvocation@@ClusteringCacheRequirement.REGISTRY_ENTRY.getType() @AT@ 2904 @LENGTH@ 51
---------------DEL QualifiedName@@Name:ClusteringCacheRequirement.REGISTRY_ENTRY @AT@ 2904 @LENGTH@ 41
---------------DEL SimpleName@@MethodName:getType:[] @AT@ 2946 @LENGTH@ 9


INS MethodDeclaration@@public, boolean, MethodName:isModularJdk,  @TO@ TypeDeclaration@@[public, final]JdkType,  @AT@ 3079 @LENGTH@ 66
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isModularJdk,  @AT@ 3079 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isModularJdk,  @AT@ 3086 @LENGTH@ 7
---INS SimpleName@@MethodName:isModularJdk @TO@ MethodDeclaration@@public, boolean, MethodName:isModularJdk,  @AT@ 3094 @LENGTH@ 12
---INS ReturnStatement@@SimpleName:isModularJdk @TO@ MethodDeclaration@@public, boolean, MethodName:isModularJdk,  @AT@ 3119 @LENGTH@ 20
------INS SimpleName@@isModularJdk @TO@ ReturnStatement@@SimpleName:isModularJdk @AT@ 3126 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:assertThat(provider.getConfigurationMetadata()).containsKeys("authorization_endpoint","claims_supported","code_challenge_methods_supported","id_token_signing_alg_values_supported","issuer","jwks_uri","response_types_supported","revocation_endpoint","scopes_supported","subject_types_supported","grant_types_supported","token_endpoint","token_endpoint_auth_methods_supported","userinfo_endpoint") @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenAllInformationThenSuccess, Exception,  @AT@ 4842 @LENGTH@ 421
---INS MethodInvocation@@assertThat(provider.getConfigurationMetadata()).containsKeys("authorization_endpoint","claims_supported","code_challenge_methods_supported","id_token_signing_alg_values_supported","issuer","jwks_uri","response_types_supported","revocation_endpoint","scopes_supported","subject_types_supported","grant_types_supported","token_endpoint","token_endpoint_auth_methods_supported","userinfo_endpoint") @TO@ ExpressionStatement@@MethodInvocation:assertThat(provider.getConfigurationMetadata()).containsKeys("authorization_endpoint","claims_supported","code_challenge_methods_supported","id_token_signing_alg_values_supported","issuer","jwks_uri","response_types_supported","revocation_endpoint","scopes_supported","subject_types_supported","grant_types_supported","token_endpoint","token_endpoint_auth_methods_supported","userinfo_endpoint") @AT@ 4842 @LENGTH@ 420
------INS MethodInvocation@@MethodName:assertThat:[provider.getConfigurationMetadata()] @TO@ MethodInvocation@@assertThat(provider.getConfigurationMetadata()).containsKeys("authorization_endpoint","claims_supported","code_challenge_methods_supported","id_token_signing_alg_values_supported","issuer","jwks_uri","response_types_supported","revocation_endpoint","scopes_supported","subject_types_supported","grant_types_supported","token_endpoint","token_endpoint_auth_methods_supported","userinfo_endpoint") @AT@ 4842 @LENGTH@ 47
---------INS MethodInvocation@@provider.getConfigurationMetadata() @TO@ MethodInvocation@@MethodName:assertThat:[provider.getConfigurationMetadata()] @AT@ 4853 @LENGTH@ 35
------------INS SimpleName@@Name:provider @TO@ MethodInvocation@@provider.getConfigurationMetadata() @AT@ 4853 @LENGTH@ 8
------------INS SimpleName@@MethodName:getConfigurationMetadata:[] @TO@ MethodInvocation@@provider.getConfigurationMetadata() @AT@ 4862 @LENGTH@ 26
------INS SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @TO@ MethodInvocation@@assertThat(provider.getConfigurationMetadata()).containsKeys("authorization_endpoint","claims_supported","code_challenge_methods_supported","id_token_signing_alg_values_supported","issuer","jwks_uri","response_types_supported","revocation_endpoint","scopes_supported","subject_types_supported","grant_types_supported","token_endpoint","token_endpoint_auth_methods_supported","userinfo_endpoint") @AT@ 4890 @LENGTH@ 372
---------INS StringLiteral@@"authorization_endpoint" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 4903 @LENGTH@ 24
---------INS StringLiteral@@"claims_supported" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 4929 @LENGTH@ 18
---------INS StringLiteral@@"code_challenge_methods_supported" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 4953 @LENGTH@ 34
---------INS StringLiteral@@"id_token_signing_alg_values_supported" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 4989 @LENGTH@ 39
---------INS StringLiteral@@"issuer" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 5030 @LENGTH@ 8
---------INS StringLiteral@@"jwks_uri" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 5040 @LENGTH@ 10
---------INS StringLiteral@@"response_types_supported" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 5056 @LENGTH@ 26
---------INS StringLiteral@@"revocation_endpoint" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 5084 @LENGTH@ 21
---------INS StringLiteral@@"scopes_supported" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 5107 @LENGTH@ 18
---------INS StringLiteral@@"subject_types_supported" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 5127 @LENGTH@ 25
---------INS StringLiteral@@"grant_types_supported" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 5158 @LENGTH@ 23
---------INS StringLiteral@@"token_endpoint" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 5183 @LENGTH@ 16
---------INS StringLiteral@@"token_endpoint_auth_methods_supported" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 5201 @LENGTH@ 39
---------INS StringLiteral@@"userinfo_endpoint" @TO@ SimpleName@@MethodName:containsKeys:["authorization_endpoint", "claims_supported", "code_challenge_methods_supported", "id_token_signing_alg_values_supported", "issuer", "jwks_uri", "response_types_supported", "revocation_endpoint", "scopes_supported", "subject_types_supported", "grant_types_supported", "token_endpoint", "token_endpoint_auth_methods_supported", "userinfo_endpoint"] @AT@ 5242 @LENGTH@ 19


UPD IfStatement@@if (jmsEncoding) return key.replace(CamelMessagingHeadersInjectAdapter.JMS_DASH,"-"); else return key; @TO@ if (jmsEncoding) {  return key.replace(CamelMessagingHeadersInjectAdapter.JMS_DASH,"-");} else {  return key;} @AT@ 2244 @LENGTH@ 120
---UPD Block@@ThenBody:return key.replace(CamelMessagingHeadersInjectAdapter.JMS_DASH,"-"); @TO@ ThenBody:{  return key.replace(CamelMessagingHeadersInjectAdapter.JMS_DASH,"-");} @AT@ 2267 @LENGTH@ 69
---UPD Block@@ElseBody:return key; @TO@ ElseBody:{  return key;} @AT@ 2353 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().requestCache().requestCache(requestCache).and().oauth2().client().authorizationCodeGrant().authorizationRequestResolver(authorizationRequestResolver).accessTokenResponseClient(accessTokenResponseClient) @TO@ MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().requestCache().requestCache(requestCache).and().oauth2Client().authorizationCodeGrant().authorizationRequestResolver(authorizationRequestResolver).accessTokenResponseClient(accessTokenResponseClient) @AT@ 10870 @LENGTH@ 331
---UPD MethodInvocation@@http.authorizeRequests().anyRequest().authenticated().and().requestCache().requestCache(requestCache).and().oauth2().client().authorizationCodeGrant().authorizationRequestResolver(authorizationRequestResolver).accessTokenResponseClient(accessTokenResponseClient) @TO@ http.authorizeRequests().anyRequest().authenticated().and().requestCache().requestCache(requestCache).and().oauth2Client().authorizationCodeGrant().authorizationRequestResolver(authorizationRequestResolver).accessTokenResponseClient(accessTokenResponseClient) @AT@ 10870 @LENGTH@ 330
------DEL MethodInvocation@@MethodName:client:[] @AT@ 10870 @LENGTH@ 170
------UPD MethodInvocation@@MethodName:oauth2:[] @TO@ MethodName:oauth2Client:[] @AT@ 10870 @LENGTH@ 155


UPD ExpressionStatement@@MethodInvocation:assertEquals('\"',(char)cSVFormat.getEscapeCharacter()) @TO@ MethodInvocation:assertEquals('\\',(char)cSVFormat.getEscapeCharacter()) @AT@ 13053 @LENGTH@ 57
---UPD MethodInvocation@@assertEquals('\"',(char)cSVFormat.getEscapeCharacter()) @TO@ assertEquals('\\',(char)cSVFormat.getEscapeCharacter()) @AT@ 13053 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertEquals:['\"', (char)cSVFormat.getEscapeCharacter()] @TO@ MethodName:assertEquals:['\\', (char)cSVFormat.getEscapeCharacter()] @AT@ 13053 @LENGTH@ 56
---------UPD CharacterLiteral@@'\"' @TO@ '\\' @AT@ 13066 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:Assert.notNull(defaultType,"'defaultType' cannot be null") @TO@ MethodDeclaration@@public, void, MethodName:setDefaultType, Class<?> defaultType,  @AT@ 2713 @LENGTH@ 60
---INS MethodInvocation@@Assert.notNull(defaultType,"'defaultType' cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(defaultType,"'defaultType' cannot be null") @AT@ 2713 @LENGTH@ 59
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(defaultType,"'defaultType' cannot be null") @AT@ 2713 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[defaultType, "'defaultType' cannot be null"] @TO@ MethodInvocation@@Assert.notNull(defaultType,"'defaultType' cannot be null") @AT@ 2720 @LENGTH@ 52
---------INS SimpleName@@defaultType @TO@ SimpleName@@MethodName:notNull:[defaultType, "'defaultType' cannot be null"] @AT@ 2728 @LENGTH@ 11
---------INS StringLiteral@@"'defaultType' cannot be null" @TO@ SimpleName@@MethodName:notNull:[defaultType, "'defaultType' cannot be null"] @AT@ 2741 @LENGTH@ 30


UPD SuperConstructorInvocation@@super((registry,group) -> new ChannelGroupBuilder(registry,group));
 @TO@ super((registry,group) -> new ChannelGroupServiceConfigurator(registry,group));
 @AT@ 1621 @LENGTH@ 69
---UPD LambdaExpression@@(registry,group) -> new ChannelGroupBuilder(registry,group) @TO@ (registry,group) -> new ChannelGroupServiceConfigurator(registry,group) @AT@ 1627 @LENGTH@ 61
------UPD ClassInstanceCreation@@ChannelGroupBuilder[registry, group] @TO@ ChannelGroupServiceConfigurator[registry, group] @AT@ 1648 @LENGTH@ 40
---------UPD SimpleType@@ChannelGroupBuilder @TO@ ChannelGroupServiceConfigurator @AT@ 1652 @LENGTH@ 19


MOV MethodDeclaration@@public, static, void, MethodName:main, String[] args,  @TO@ TypeDeclaration@@[@SpringBootApplication, public]Application, SpringBootServletInitializer @AT@ 1414 @LENGTH@ 102


INS ExpressionStatement@@MethodInvocation:readResource.get(INCLUDE_RUNTIME).set(true) @TO@ MethodDeclaration@@private, ModelNode, MethodName:getRolloutPlans, DomainClient client, Exception,  @AT@ 16679 @LENGTH@ 44
---INS MethodInvocation@@readResource.get(INCLUDE_RUNTIME).set(true) @TO@ ExpressionStatement@@MethodInvocation:readResource.get(INCLUDE_RUNTIME).set(true) @AT@ 16679 @LENGTH@ 43
------INS MethodInvocation@@MethodName:get:[INCLUDE_RUNTIME] @TO@ MethodInvocation@@readResource.get(INCLUDE_RUNTIME).set(true) @AT@ 16679 @LENGTH@ 33
---------INS SimpleName@@INCLUDE_RUNTIME @TO@ MethodInvocation@@MethodName:get:[INCLUDE_RUNTIME] @AT@ 16696 @LENGTH@ 15
------INS SimpleName@@Name:readResource @TO@ MethodInvocation@@readResource.get(INCLUDE_RUNTIME).set(true) @AT@ 16679 @LENGTH@ 12
------INS SimpleName@@MethodName:set:[true] @TO@ MethodInvocation@@readResource.get(INCLUDE_RUNTIME).set(true) @AT@ 16713 @LENGTH@ 9
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:set:[true] @AT@ 16717 @LENGTH@ 4


UPD MethodInvocation@@ifNotException(ex2,exchange,callback,() -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
) @TO@ ifNotException(ex2,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
) @AT@ 1827 @LENGTH@ 496
---UPD SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
] @TO@ MethodName:ifNotException:[ex2, exchange, true, newCoordinator, existingCoordinator, callback, () -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
] @AT@ 1827 @LENGTH@ 496
------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
] @AT@ 1857 @LENGTH@ 4
------INS SimpleName@@newCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
] @AT@ 1863 @LENGTH@ 14
------UPD LambdaExpression@@() -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
 @TO@ () -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
 @AT@ 1867 @LENGTH@ 455
---------UPD ExpressionStatement@@MethodInvocation:newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
)) @TO@ MethodInvocation:newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
)) @AT@ 1969 @LENGTH@ 334
------------UPD MethodInvocation@@newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
)) @TO@ newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
)) @AT@ 1969 @LENGTH@ 333
---------------UPD SimpleName@@MethodName:whenComplete:[(done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
)] @TO@ MethodName:whenComplete:[(done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
)] @AT@ 2010 @LENGTH@ 292
------------------UPD LambdaExpression@@(done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
) @TO@ (done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
) @AT@ 2023 @LENGTH@ 278
---------------------UPD MethodInvocation@@ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
) @TO@ ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
) @AT@ 2038 @LENGTH@ 263
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @TO@ MethodName:ifNotException:[ex3, exchange, true, newCoordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2038 @LENGTH@ 263
---------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2111 @LENGTH@ 4
---------------------------INS SimpleName@@newCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2117 @LENGTH@ 14
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2133 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @TO@ MethodName:ifNotException:[ex3, exchange, true, newCoordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2038 @LENGTH@ 263
---------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2111 @LENGTH@ 4
---------------------------INS SimpleName@@newCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2117 @LENGTH@ 14
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2133 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @TO@ MethodName:ifNotException:[ex3, exchange, true, newCoordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2038 @LENGTH@ 263
---------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2111 @LENGTH@ 4
---------------------------INS SimpleName@@newCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2117 @LENGTH@ 14
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2133 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @TO@ MethodName:ifNotException:[ex3, exchange, true, newCoordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2038 @LENGTH@ 263
---------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2111 @LENGTH@ 4
---------------------------INS SimpleName@@newCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2117 @LENGTH@ 14
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2133 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @TO@ MethodName:ifNotException:[ex3, exchange, true, newCoordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2038 @LENGTH@ 263
---------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2111 @LENGTH@ 4
---------------------------INS SimpleName@@newCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2117 @LENGTH@ 14
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2133 @LENGTH@ 19
------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
] @AT@ 1879 @LENGTH@ 19
---UPD SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
] @TO@ MethodName:ifNotException:[ex2, exchange, true, newCoordinator, existingCoordinator, callback, () -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
] @AT@ 1827 @LENGTH@ 496
------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
] @AT@ 1857 @LENGTH@ 4
------INS SimpleName@@newCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
] @AT@ 1863 @LENGTH@ 14
------UPD LambdaExpression@@() -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
 @TO@ () -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
 @AT@ 1867 @LENGTH@ 455
---------UPD ExpressionStatement@@MethodInvocation:newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
)) @TO@ MethodInvocation:newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
)) @AT@ 1969 @LENGTH@ 334
------------UPD MethodInvocation@@newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
)) @TO@ newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
)) @AT@ 1969 @LENGTH@ 333
---------------UPD SimpleName@@MethodName:whenComplete:[(done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
)] @TO@ MethodName:whenComplete:[(done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
)] @AT@ 2010 @LENGTH@ 292
------------------UPD LambdaExpression@@(done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
) @TO@ (done,ex3) -> ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
) @AT@ 2023 @LENGTH@ 278
---------------------UPD MethodInvocation@@ifNotException(ex3,exchange,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
) @TO@ ifNotException(ex3,exchange,true,newCoordinator,existingCoordinator,callback,() -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
) @AT@ 2038 @LENGTH@ 263
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @TO@ MethodName:ifNotException:[ex3, exchange, true, newCoordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2038 @LENGTH@ 263
---------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2111 @LENGTH@ 4
---------------------------INS SimpleName@@newCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2117 @LENGTH@ 14
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2133 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @TO@ MethodName:ifNotException:[ex3, exchange, true, newCoordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2038 @LENGTH@ 263
---------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2111 @LENGTH@ 4
---------------------------INS SimpleName@@newCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2117 @LENGTH@ 14
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2133 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @TO@ MethodName:ifNotException:[ex3, exchange, true, newCoordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2038 @LENGTH@ 263
---------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2111 @LENGTH@ 4
---------------------------INS SimpleName@@newCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2117 @LENGTH@ 14
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2133 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @TO@ MethodName:ifNotException:[ex3, exchange, true, newCoordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2038 @LENGTH@ 263
---------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2111 @LENGTH@ 4
---------------------------INS SimpleName@@newCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2117 @LENGTH@ 14
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2133 @LENGTH@ 19
------------------------UPD SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @TO@ MethodName:ifNotException:[ex3, exchange, true, newCoordinator, existingCoordinator, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2038 @LENGTH@ 263
---------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2111 @LENGTH@ 4
---------------------------INS SimpleName@@newCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2117 @LENGTH@ 14
---------------------------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex3, exchange, callback, () -> {
  super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
}
] @AT@ 2133 @LENGTH@ 19
------INS SimpleName@@existingCoordinator @TO@ SimpleName@@MethodName:ifNotException:[ex2, exchange, callback, () -> {
  setCurrentSagaCoordinator(exchange,newCoordinator);
  newCoordinator.beginStep(exchange,step).whenComplete((done,ex3) -> ifNotException(ex3,exchange,callback,() -> {
    super.process(exchange,doneSync -> handleSagaCompletion(exchange,newCoordinator,existingCoordinator,callback));
  }
));
}
] @AT@ 1879 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:builder.userInfoUri("https://graph.facebook.com/me") @TO@ MethodInvocation:builder.userInfoUri("https://graph.facebook.com/me?fields=id,name,email") @AT@ 2953 @LENGTH@ 53
---UPD MethodInvocation@@builder.userInfoUri("https://graph.facebook.com/me") @TO@ builder.userInfoUri("https://graph.facebook.com/me?fields=id,name,email") @AT@ 2953 @LENGTH@ 52
------UPD SimpleName@@MethodName:userInfoUri:["https://graph.facebook.com/me"] @TO@ MethodName:userInfoUri:["https://graph.facebook.com/me?fields=id,name,email"] @AT@ 2961 @LENGTH@ 44
---------UPD StringLiteral@@"https://graph.facebook.com/me" @TO@ "https://graph.facebook.com/me?fields=id,name,email" @AT@ 2973 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:assertTrue("We should get the socket time out exception here",e.getCause() instanceof SocketTimeoutException) @TO@ MethodInvocation:assertTrue("We should get the socket time out exception here",e instanceof SocketTimeoutException) @AT@ 2698 @LENGTH@ 111
---UPD MethodInvocation@@assertTrue("We should get the socket time out exception here",e.getCause() instanceof SocketTimeoutException) @TO@ assertTrue("We should get the socket time out exception here",e instanceof SocketTimeoutException) @AT@ 2698 @LENGTH@ 110
------UPD SimpleName@@MethodName:assertTrue:["We should get the socket time out exception here", e.getCause() instanceof SocketTimeoutException] @TO@ MethodName:assertTrue:["We should get the socket time out exception here", e instanceof SocketTimeoutException] @AT@ 2698 @LENGTH@ 110
---------UPD InstanceofExpression@@e.getCause() instanceof SocketTimeoutException @TO@ e instanceof SocketTimeoutException @AT@ 2761 @LENGTH@ 46
------------INS SimpleName@@e @TO@ InstanceofExpression@@e.getCause() instanceof SocketTimeoutException @AT@ 2682 @LENGTH@ 1
------------DEL MethodInvocation@@e.getCause() @AT@ 2761 @LENGTH@ 12
---------------DEL SimpleName@@Name:e @AT@ 2761 @LENGTH@ 1
---------------DEL SimpleName@@MethodName:getCause:[] @AT@ 2763 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:when(loginAuthentication.getRefreshToken()).thenReturn(mock(OAuth2RefreshToken.class)) @TO@ MethodDeclaration@@private, void, MethodName:setUpAuthenticationResult, ClientRegistration registration,  @AT@ 17173 @LENGTH@ 87
---INS MethodInvocation@@when(loginAuthentication.getRefreshToken()).thenReturn(mock(OAuth2RefreshToken.class)) @TO@ ExpressionStatement@@MethodInvocation:when(loginAuthentication.getRefreshToken()).thenReturn(mock(OAuth2RefreshToken.class)) @AT@ 17173 @LENGTH@ 86
------INS MethodInvocation@@MethodName:when:[loginAuthentication.getRefreshToken()] @TO@ MethodInvocation@@when(loginAuthentication.getRefreshToken()).thenReturn(mock(OAuth2RefreshToken.class)) @AT@ 17173 @LENGTH@ 43
---------INS MethodInvocation@@loginAuthentication.getRefreshToken() @TO@ MethodInvocation@@MethodName:when:[loginAuthentication.getRefreshToken()] @AT@ 17178 @LENGTH@ 37
------------INS SimpleName@@Name:loginAuthentication @TO@ MethodInvocation@@loginAuthentication.getRefreshToken() @AT@ 17178 @LENGTH@ 19
------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@loginAuthentication.getRefreshToken() @AT@ 17198 @LENGTH@ 17
------INS SimpleName@@MethodName:thenReturn:[mock(OAuth2RefreshToken.class)] @TO@ MethodInvocation@@when(loginAuthentication.getRefreshToken()).thenReturn(mock(OAuth2RefreshToken.class)) @AT@ 17217 @LENGTH@ 42
---------INS MethodInvocation@@mock(OAuth2RefreshToken.class) @TO@ SimpleName@@MethodName:thenReturn:[mock(OAuth2RefreshToken.class)] @AT@ 17228 @LENGTH@ 30
------------INS SimpleName@@MethodName:mock:[OAuth2RefreshToken.class] @TO@ MethodInvocation@@mock(OAuth2RefreshToken.class) @AT@ 17228 @LENGTH@ 30
---------------INS TypeLiteral@@OAuth2RefreshToken.class @TO@ SimpleName@@MethodName:mock:[OAuth2RefreshToken.class] @AT@ 17233 @LENGTH@ 24


INS MethodDeclaration@@public, void, MethodName:buildWhenOverrideRegistrationIdThenOverridden,  @TO@ TypeDeclaration@@[public]ClientRegistrationTests,  @AT@ 13955 @LENGTH@ 711
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:buildWhenOverrideRegistrationIdThenOverridden,  @AT@ 13955 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:buildWhenOverrideRegistrationIdThenOverridden,  @AT@ 13962 @LENGTH@ 4
---INS SimpleName@@MethodName:buildWhenOverrideRegistrationIdThenOverridden @TO@ MethodDeclaration@@public, void, MethodName:buildWhenOverrideRegistrationIdThenOverridden,  @AT@ 13967 @LENGTH@ 45
---INS VariableDeclarationStatement@@String overriddenId="override"; @TO@ MethodDeclaration@@public, void, MethodName:buildWhenOverrideRegistrationIdThenOverridden,  @AT@ 14019 @LENGTH@ 33
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String overriddenId="override"; @AT@ 14019 @LENGTH@ 6
------INS VariableDeclarationFragment@@overriddenId="override" @TO@ VariableDeclarationStatement@@String overriddenId="override"; @AT@ 14026 @LENGTH@ 25
---------INS SimpleName@@overriddenId @TO@ VariableDeclarationFragment@@overriddenId="override" @AT@ 14026 @LENGTH@ 12
---------INS StringLiteral@@"override" @TO@ VariableDeclarationFragment@@overriddenId="override" @AT@ 14041 @LENGTH@ 10
---INS VariableDeclarationStatement@@ClientRegistration registration=ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build(); @TO@ MethodDeclaration@@public, void, MethodName:buildWhenOverrideRegistrationIdThenOverridden,  @AT@ 14055 @LENGTH@ 535
------INS SimpleType@@ClientRegistration @TO@ VariableDeclarationStatement@@ClientRegistration registration=ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build(); @AT@ 14055 @LENGTH@ 18
------INS VariableDeclarationFragment@@registration=ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @TO@ VariableDeclarationStatement@@ClientRegistration registration=ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build(); @AT@ 14074 @LENGTH@ 515
---------INS SimpleName@@registration @TO@ VariableDeclarationFragment@@registration=ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14074 @LENGTH@ 12
---------INS MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @TO@ VariableDeclarationFragment@@registration=ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 500
------------INS MethodInvocation@@MethodName:clientName:[CLIENT_NAME] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 487
---------------INS SimpleName@@CLIENT_NAME @TO@ MethodInvocation@@MethodName:clientName:[CLIENT_NAME] @AT@ 14564 @LENGTH@ 11
------------INS MethodInvocation@@MethodName:jwkSetUri:[JWK_SET_URI] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 458
---------------INS SimpleName@@JWK_SET_URI @TO@ MethodInvocation@@MethodName:jwkSetUri:[JWK_SET_URI] @AT@ 14535 @LENGTH@ 11
------------INS MethodInvocation@@MethodName:tokenUri:[TOKEN_URI] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 430
---------------INS SimpleName@@TOKEN_URI @TO@ MethodInvocation@@MethodName:tokenUri:[TOKEN_URI] @AT@ 14509 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:authorizationUri:[AUTHORIZATION_URI] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 405
---------------INS SimpleName@@AUTHORIZATION_URI @TO@ MethodInvocation@@MethodName:authorizationUri:[AUTHORIZATION_URI] @AT@ 14476 @LENGTH@ 17
------------INS MethodInvocation@@MethodName:scope:[SCOPES.toArray(new String[0])] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 364
---------------INS MethodInvocation@@SCOPES.toArray(new String[0]) @TO@ MethodInvocation@@MethodName:scope:[SCOPES.toArray(new String[0])] @AT@ 14423 @LENGTH@ 29
------------------INS SimpleName@@Name:SCOPES @TO@ MethodInvocation@@SCOPES.toArray(new String[0]) @AT@ 14423 @LENGTH@ 6
------------------INS SimpleName@@MethodName:toArray:[new String[0]] @TO@ MethodInvocation@@SCOPES.toArray(new String[0]) @AT@ 14430 @LENGTH@ 22
---------------------INS ArrayCreation@@new String[0] @TO@ SimpleName@@MethodName:toArray:[new String[0]] @AT@ 14438 @LENGTH@ 13
------------------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[0] @AT@ 14442 @LENGTH@ 9
---------------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 14442 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ ArrayCreation@@new String[0] @AT@ 14449 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:redirectUriTemplate:[REDIRECT_URI] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 322
---------------INS SimpleName@@REDIRECT_URI @TO@ MethodInvocation@@MethodName:redirectUriTemplate:[REDIRECT_URI] @AT@ 14398 @LENGTH@ 12
------------INS MethodInvocation@@MethodName:authorizationGrantType:[AuthorizationGrantType.AUTHORIZATION_CODE] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 283
---------------INS QualifiedName@@AuthorizationGrantType.AUTHORIZATION_CODE @TO@ MethodInvocation@@MethodName:authorizationGrantType:[AuthorizationGrantType.AUTHORIZATION_CODE] @AT@ 14330 @LENGTH@ 41
------------------INS SimpleName@@AuthorizationGrantType @TO@ QualifiedName@@AuthorizationGrantType.AUTHORIZATION_CODE @AT@ 14330 @LENGTH@ 22
------------------INS SimpleName@@AUTHORIZATION_CODE @TO@ QualifiedName@@AuthorizationGrantType.AUTHORIZATION_CODE @AT@ 14353 @LENGTH@ 18
------------INS MethodInvocation@@MethodName:clientAuthenticationMethod:[ClientAuthenticationMethod.BASIC] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 212
---------------INS QualifiedName@@ClientAuthenticationMethod.BASIC @TO@ MethodInvocation@@MethodName:clientAuthenticationMethod:[ClientAuthenticationMethod.BASIC] @AT@ 14268 @LENGTH@ 32
------------------INS SimpleName@@ClientAuthenticationMethod @TO@ QualifiedName@@ClientAuthenticationMethod.BASIC @AT@ 14268 @LENGTH@ 26
------------------INS SimpleName@@BASIC @TO@ QualifiedName@@ClientAuthenticationMethod.BASIC @AT@ 14295 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:clientSecret:[CLIENT_SECRET] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 146
---------------INS SimpleName@@CLIENT_SECRET @TO@ MethodInvocation@@MethodName:clientSecret:[CLIENT_SECRET] @AT@ 14221 @LENGTH@ 13
------------INS MethodInvocation@@MethodName:clientId:[CLIENT_ID] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 113
---------------INS SimpleName@@CLIENT_ID @TO@ MethodInvocation@@MethodName:clientId:[CLIENT_ID] @AT@ 14192 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:registrationId:[overriddenId] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 88
---------------INS SimpleName@@overriddenId @TO@ MethodInvocation@@MethodName:registrationId:[overriddenId] @AT@ 14164 @LENGTH@ 12
------------INS MethodInvocation@@MethodName:withRegistrationId:[REGISTRATION_ID] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 54
---------------INS SimpleName@@REGISTRATION_ID @TO@ MethodInvocation@@MethodName:withRegistrationId:[REGISTRATION_ID] @AT@ 14127 @LENGTH@ 15
------------INS SimpleName@@Name:ClientRegistration @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14089 @LENGTH@ 18
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).registrationId(overriddenId).clientId(CLIENT_ID).clientSecret(CLIENT_SECRET).clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 14582 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(registration.getRegistrationId()).isEqualTo(overriddenId) @TO@ MethodDeclaration@@public, void, MethodName:buildWhenOverrideRegistrationIdThenOverridden,  @AT@ 14594 @LENGTH@ 69
------INS MethodInvocation@@assertThat(registration.getRegistrationId()).isEqualTo(overriddenId) @TO@ ExpressionStatement@@MethodInvocation:assertThat(registration.getRegistrationId()).isEqualTo(overriddenId) @AT@ 14594 @LENGTH@ 68
---------INS MethodInvocation@@MethodName:assertThat:[registration.getRegistrationId()] @TO@ MethodInvocation@@assertThat(registration.getRegistrationId()).isEqualTo(overriddenId) @AT@ 14594 @LENGTH@ 44
------------INS MethodInvocation@@registration.getRegistrationId() @TO@ MethodInvocation@@MethodName:assertThat:[registration.getRegistrationId()] @AT@ 14605 @LENGTH@ 32
---------------INS SimpleName@@Name:registration @TO@ MethodInvocation@@registration.getRegistrationId() @AT@ 14605 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@registration.getRegistrationId() @AT@ 14618 @LENGTH@ 19
---------INS SimpleName@@MethodName:isEqualTo:[overriddenId] @TO@ MethodInvocation@@assertThat(registration.getRegistrationId()).isEqualTo(overriddenId) @AT@ 14639 @LENGTH@ 23
------------INS SimpleName@@overriddenId @TO@ SimpleName@@MethodName:isEqualTo:[overriddenId] @AT@ 14649 @LENGTH@ 12


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(NoStoreBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(NoStoreServiceConfigurator::new); @AT@ 2479 @LENGTH@ 87
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(NoStoreBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(NoStoreServiceConfigurator::new) @AT@ 2502 @LENGTH@ 63
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[NoStoreBuilder::new] @TO@ SimpleResourceServiceHandler[NoStoreServiceConfigurator::new] @AT@ 2512 @LENGTH@ 53


INS MethodDeclaration@@public, OAuth2ResourceServerConfigurer<HttpSecurity>, MethodName:oauth2ResourceServer, Exception,  @TO@ TypeDeclaration@@[public, final]HttpSecurity, AbstractConfiguredSecurityBuilder<DefaultSecurityFilterChain,HttpSecurity>[SecurityBuilder<DefaultSecurityFilterChain>, HttpSecurityBuilder<HttpSecurity>] @AT@ 41787 @LENGTH@ 273
---INS Modifier@@public @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer<HttpSecurity>, MethodName:oauth2ResourceServer, Exception,  @AT@ 41787 @LENGTH@ 6
---INS ParameterizedType@@OAuth2ResourceServerConfigurer<HttpSecurity> @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer<HttpSecurity>, MethodName:oauth2ResourceServer, Exception,  @AT@ 41794 @LENGTH@ 44
------INS SimpleType@@OAuth2ResourceServerConfigurer @TO@ ParameterizedType@@OAuth2ResourceServerConfigurer<HttpSecurity> @AT@ 41794 @LENGTH@ 30
------INS SimpleType@@HttpSecurity @TO@ ParameterizedType@@OAuth2ResourceServerConfigurer<HttpSecurity> @AT@ 41825 @LENGTH@ 12
---INS SimpleName@@MethodName:oauth2ResourceServer @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer<HttpSecurity>, MethodName:oauth2ResourceServer, Exception,  @AT@ 41839 @LENGTH@ 20
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer<HttpSecurity>, MethodName:oauth2ResourceServer, Exception,  @AT@ 41869 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2ResourceServerConfigurer<HttpSecurity> configurer=getOrApply(new OAuth2ResourceServerConfigurer<>(getContext())); @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer<HttpSecurity>, MethodName:oauth2ResourceServer, Exception,  @AT@ 41883 @LENGTH@ 121
------INS ParameterizedType@@OAuth2ResourceServerConfigurer<HttpSecurity> @TO@ VariableDeclarationStatement@@OAuth2ResourceServerConfigurer<HttpSecurity> configurer=getOrApply(new OAuth2ResourceServerConfigurer<>(getContext())); @AT@ 41883 @LENGTH@ 44
---------INS SimpleType@@OAuth2ResourceServerConfigurer @TO@ ParameterizedType@@OAuth2ResourceServerConfigurer<HttpSecurity> @AT@ 41883 @LENGTH@ 30
---------INS SimpleType@@HttpSecurity @TO@ ParameterizedType@@OAuth2ResourceServerConfigurer<HttpSecurity> @AT@ 41914 @LENGTH@ 12
------INS VariableDeclarationFragment@@configurer=getOrApply(new OAuth2ResourceServerConfigurer<>(getContext())) @TO@ VariableDeclarationStatement@@OAuth2ResourceServerConfigurer<HttpSecurity> configurer=getOrApply(new OAuth2ResourceServerConfigurer<>(getContext())); @AT@ 41928 @LENGTH@ 75
---------INS SimpleName@@configurer @TO@ VariableDeclarationFragment@@configurer=getOrApply(new OAuth2ResourceServerConfigurer<>(getContext())) @AT@ 41928 @LENGTH@ 10
---------INS MethodInvocation@@getOrApply(new OAuth2ResourceServerConfigurer<>(getContext())) @TO@ VariableDeclarationFragment@@configurer=getOrApply(new OAuth2ResourceServerConfigurer<>(getContext())) @AT@ 41941 @LENGTH@ 62
------------INS SimpleName@@MethodName:getOrApply:[new OAuth2ResourceServerConfigurer<>(getContext())] @TO@ MethodInvocation@@getOrApply(new OAuth2ResourceServerConfigurer<>(getContext())) @AT@ 41941 @LENGTH@ 62
---------------INS ClassInstanceCreation@@OAuth2ResourceServerConfigurer<>[getContext()] @TO@ SimpleName@@MethodName:getOrApply:[new OAuth2ResourceServerConfigurer<>(getContext())] @AT@ 41952 @LENGTH@ 50
------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2ResourceServerConfigurer<>[getContext()] @AT@ 41952 @LENGTH@ 3
------------------INS ParameterizedType@@OAuth2ResourceServerConfigurer<> @TO@ ClassInstanceCreation@@OAuth2ResourceServerConfigurer<>[getContext()] @AT@ 41956 @LENGTH@ 32
---------------------INS SimpleType@@OAuth2ResourceServerConfigurer @TO@ ParameterizedType@@OAuth2ResourceServerConfigurer<> @AT@ 41956 @LENGTH@ 30
------------------INS MethodInvocation@@MethodName:getContext:[] @TO@ ClassInstanceCreation@@OAuth2ResourceServerConfigurer<>[getContext()] @AT@ 41989 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:this.postProcess(configurer) @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer<HttpSecurity>, MethodName:oauth2ResourceServer, Exception,  @AT@ 42007 @LENGTH@ 29
------INS MethodInvocation@@this.postProcess(configurer) @TO@ ExpressionStatement@@MethodInvocation:this.postProcess(configurer) @AT@ 42007 @LENGTH@ 28
---------INS ThisExpression@@this @TO@ MethodInvocation@@this.postProcess(configurer) @AT@ 42007 @LENGTH@ 4
---------INS SimpleName@@MethodName:postProcess:[configurer] @TO@ MethodInvocation@@this.postProcess(configurer) @AT@ 42012 @LENGTH@ 23
------------INS SimpleName@@configurer @TO@ SimpleName@@MethodName:postProcess:[configurer] @AT@ 42024 @LENGTH@ 10
---INS ReturnStatement@@SimpleName:configurer @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer<HttpSecurity>, MethodName:oauth2ResourceServer, Exception,  @AT@ 42039 @LENGTH@ 18
------INS SimpleName@@configurer @TO@ ReturnStatement@@SimpleName:configurer @AT@ 42046 @LENGTH@ 10


UPD MethodDeclaration@@public, String, MethodName:resource1, @OAuth2Client("registration-1") OAuth2AuthorizedClient authorizedClient,  @TO@ public, String, MethodName:resource1, @RegisteredOAuth2AuthorizedClient("registration-1") OAuth2AuthorizedClient authorizedClient,  @AT@ 9438 @LENGTH@ 127
---UPD SingleVariableDeclaration@@@OAuth2Client("registration-1") OAuth2AuthorizedClient authorizedClient @TO@ @RegisteredOAuth2AuthorizedClient("registration-1") OAuth2AuthorizedClient authorizedClient @AT@ 9462 @LENGTH@ 71


UPD ExpressionStatement@@MethodInvocation:DDLTask.makeLocationQualified(tbl.getDbName(),tbl.getTTable().getSd(),tableName,conf) @TO@ MethodInvocation:DDLTask.makeLocationQualified(tbl.getDbName(),tbl,conf) @AT@ 26462 @LENGTH@ 89
---UPD MethodInvocation@@DDLTask.makeLocationQualified(tbl.getDbName(),tbl.getTTable().getSd(),tableName,conf) @TO@ DDLTask.makeLocationQualified(tbl.getDbName(),tbl,conf) @AT@ 26462 @LENGTH@ 88
------UPD SimpleName@@MethodName:makeLocationQualified:[tbl.getDbName(), tbl.getTTable().getSd(), tableName, conf] @TO@ MethodName:makeLocationQualified:[tbl.getDbName(), tbl, conf] @AT@ 26470 @LENGTH@ 80
---------DEL MethodInvocation@@tbl.getTTable().getSd() @AT@ 26509 @LENGTH@ 23
------------DEL MethodInvocation@@MethodName:getTTable:[] @AT@ 26509 @LENGTH@ 15
------------DEL SimpleName@@Name:tbl @AT@ 26509 @LENGTH@ 3
------------DEL SimpleName@@MethodName:getSd:[] @AT@ 26525 @LENGTH@ 7
---------INS SimpleName@@tbl @TO@ SimpleName@@MethodName:makeLocationQualified:[tbl.getDbName(), tbl.getTTable().getSd(), tableName, conf] @AT@ 26509 @LENGTH@ 3
---------DEL SimpleName@@tableName @AT@ 26534 @LENGTH@ 9


UPD MethodDeclaration@@public, HibernatePagingItemReaderBuilder<T>, MethodName:queryProvider, HibernateQueryProvider queryProvider,  @TO@ public, HibernatePagingItemReaderBuilder<T>, MethodName:queryProvider, HibernateQueryProvider<T> queryProvider,  @AT@ 5554 @LENGTH@ 153
---UPD SingleVariableDeclaration@@HibernateQueryProvider queryProvider @TO@ HibernateQueryProvider<T> queryProvider @AT@ 5611 @LENGTH@ 36
------INS ParameterizedType@@HibernateQueryProvider<T> @TO@ SingleVariableDeclaration@@HibernateQueryProvider queryProvider @AT@ 5611 @LENGTH@ 25
---------INS SimpleType@@HibernateQueryProvider @TO@ ParameterizedType@@HibernateQueryProvider<T> @AT@ 5611 @LENGTH@ 22
---------INS SimpleType@@T @TO@ ParameterizedType@@HibernateQueryProvider<T> @AT@ 5634 @LENGTH@ 1
------DEL SimpleType@@HibernateQueryProvider @AT@ 5611 @LENGTH@ 22


DEL ExpressionStatement@@MethodInvocation:assertNotNull("We should get the exception cause here",e.getCause()) @AT@ 2619 @LENGTH@ 70
---DEL MethodInvocation@@assertNotNull("We should get the exception cause here",e.getCause()) @AT@ 2619 @LENGTH@ 69
------DEL SimpleName@@MethodName:assertNotNull:["We should get the exception cause here", e.getCause()] @AT@ 2619 @LENGTH@ 69
---------DEL StringLiteral@@"We should get the exception cause here" @AT@ 2633 @LENGTH@ 40
---------DEL MethodInvocation@@e.getCause() @AT@ 2675 @LENGTH@ 12
------------DEL SimpleName@@Name:e @AT@ 2675 @LENGTH@ 1
------------DEL SimpleName@@MethodName:getCause:[] @AT@ 2677 @LENGTH@ 10


UPD ReturnStatement@@InfixExpression:stopped & this.manager.stop(timeout,timeUnit) @TO@ InfixExpression:stopped || this.manager.stop(timeout,timeUnit) @AT@ 13873 @LENGTH@ 54
---UPD InfixExpression@@stopped & this.manager.stop(timeout,timeUnit) @TO@ stopped || this.manager.stop(timeout,timeUnit) @AT@ 13880 @LENGTH@ 46
------UPD Operator@@& @TO@ || @AT@ 13887 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @TO@ TypeDeclaration@@[public]WebClientReactiveClientCredentialsTokenResponseClient, [ReactiveOAuth2AccessTokenResponseClient<OAuth2ClientCredentialsGrantRequest>] @AT@ 5409 @LENGTH@ 137
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @AT@ 5409 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @AT@ 5416 @LENGTH@ 4
---INS SimpleName@@MethodName:setWebClient @TO@ MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @AT@ 5421 @LENGTH@ 12
---INS SingleVariableDeclaration@@WebClient webClient @TO@ MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @AT@ 5434 @LENGTH@ 19
------INS SimpleType@@WebClient @TO@ SingleVariableDeclaration@@WebClient webClient @AT@ 5434 @LENGTH@ 9
------INS SimpleName@@webClient @TO@ SingleVariableDeclaration@@WebClient webClient @AT@ 5444 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(webClient,"webClient cannot be null") @TO@ MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @AT@ 5459 @LENGTH@ 54
------INS MethodInvocation@@Assert.notNull(webClient,"webClient cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(webClient,"webClient cannot be null") @AT@ 5459 @LENGTH@ 53
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(webClient,"webClient cannot be null") @AT@ 5459 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[webClient, "webClient cannot be null"] @TO@ MethodInvocation@@Assert.notNull(webClient,"webClient cannot be null") @AT@ 5466 @LENGTH@ 46
------------INS SimpleName@@webClient @TO@ SimpleName@@MethodName:notNull:[webClient, "webClient cannot be null"] @AT@ 5474 @LENGTH@ 9
------------INS StringLiteral@@"webClient cannot be null" @TO@ SimpleName@@MethodName:notNull:[webClient, "webClient cannot be null"] @AT@ 5485 @LENGTH@ 26
---INS ExpressionStatement@@Assignment:this.webClient=webClient @TO@ MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @AT@ 5516 @LENGTH@ 27
------INS Assignment@@this.webClient=webClient @TO@ ExpressionStatement@@Assignment:this.webClient=webClient @AT@ 5516 @LENGTH@ 26
---------INS FieldAccess@@this.webClient @TO@ Assignment@@this.webClient=webClient @AT@ 5516 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.webClient @AT@ 5516 @LENGTH@ 4
------------INS SimpleName@@webClient @TO@ FieldAccess@@this.webClient @AT@ 5521 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@this.webClient=webClient @AT@ 5530 @LENGTH@ 1
---------INS SimpleName@@webClient @TO@ Assignment@@this.webClient=webClient @AT@ 5533 @LENGTH@ 9


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[public, final]AnyRequestMatcher, [RequestMatcher] @AT@ 1365 @LENGTH@ 53
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1365 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1372 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1379 @LENGTH@ 8
---INS ReturnStatement@@StringLiteral:"any request" @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1394 @LENGTH@ 21
------INS StringLiteral@@"any request" @TO@ ReturnStatement@@StringLiteral:"any request" @AT@ 1401 @LENGTH@ 13


UPD Block@@ElseBody:if (mapper.canSerialize(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @TO@ ElseBody:if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4297 @LENGTH@ 1029
---UPD IfStatement@@if (mapper.canSerialize(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @TO@ if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4297 @LENGTH@ 1029
------INS InfixExpression@@mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type) @TO@ IfStatement@@if (mapper.canSerialize(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4301 @LENGTH@ 63
---------MOV MethodInvocation@@mapper.canSerialize(type) @TO@ InfixExpression@@mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type) @AT@ 4301 @LENGTH@ 25
---------INS Operator@@&& @TO@ InfixExpression@@mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type) @AT@ 4326 @LENGTH@ 2
---------INS PrefixExpression@@!Enum.class.isAssignableFrom(type) @TO@ InfixExpression@@mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type) @AT@ 4330 @LENGTH@ 34
------------INS Operator@@! @TO@ PrefixExpression@@!Enum.class.isAssignableFrom(type) @AT@ 4330 @LENGTH@ 1
------------INS MethodInvocation@@Enum.class.isAssignableFrom(type) @TO@ PrefixExpression@@!Enum.class.isAssignableFrom(type) @AT@ 4331 @LENGTH@ 33
---------------INS TypeLiteral@@Enum.class @TO@ MethodInvocation@@Enum.class.isAssignableFrom(type) @AT@ 4331 @LENGTH@ 10
---------------INS SimpleName@@MethodName:isAssignableFrom:[type] @TO@ MethodInvocation@@Enum.class.isAssignableFrom(type) @AT@ 4342 @LENGTH@ 22
------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:isAssignableFrom:[type] @AT@ 4359 @LENGTH@ 4
---UPD IfStatement@@if (mapper.canSerialize(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @TO@ if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4297 @LENGTH@ 1029
------INS InfixExpression@@mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type) @TO@ IfStatement@@if (mapper.canSerialize(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4301 @LENGTH@ 63
---------MOV MethodInvocation@@mapper.canSerialize(type) @TO@ InfixExpression@@mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type) @AT@ 4301 @LENGTH@ 25
---------INS Operator@@&& @TO@ InfixExpression@@mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type) @AT@ 4326 @LENGTH@ 2
---------INS PrefixExpression@@!Enum.class.isAssignableFrom(type) @TO@ InfixExpression@@mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type) @AT@ 4330 @LENGTH@ 34
------------INS Operator@@! @TO@ PrefixExpression@@!Enum.class.isAssignableFrom(type) @AT@ 4330 @LENGTH@ 1
------------INS MethodInvocation@@Enum.class.isAssignableFrom(type) @TO@ PrefixExpression@@!Enum.class.isAssignableFrom(type) @AT@ 4331 @LENGTH@ 33
---------------INS TypeLiteral@@Enum.class @TO@ MethodInvocation@@Enum.class.isAssignableFrom(type) @AT@ 4331 @LENGTH@ 10
---------------INS SimpleName@@MethodName:isAssignableFrom:[type] @TO@ MethodInvocation@@Enum.class.isAssignableFrom(type) @AT@ 4342 @LENGTH@ 22
------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:isAssignableFrom:[type] @AT@ 4359 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:messageReaders.add(new DecoderHttpMessageReader<>(new Jaxb2XmlDecoder())) @AT@ 2413 @LENGTH@ 74
---DEL MethodInvocation@@messageReaders.add(new DecoderHttpMessageReader<>(new Jaxb2XmlDecoder())) @AT@ 2413 @LENGTH@ 73
------DEL SimpleName@@Name:messageReaders @AT@ 2413 @LENGTH@ 14
------DEL SimpleName@@MethodName:add:[new DecoderHttpMessageReader<>(new Jaxb2XmlDecoder())] @AT@ 2428 @LENGTH@ 58
---------DEL ClassInstanceCreation@@DecoderHttpMessageReader<>[new Jaxb2XmlDecoder()] @AT@ 2432 @LENGTH@ 53
------------DEL New@@new @AT@ 2432 @LENGTH@ 3
------------DEL ParameterizedType@@DecoderHttpMessageReader<> @AT@ 2436 @LENGTH@ 26
---------------DEL SimpleType@@DecoderHttpMessageReader @AT@ 2436 @LENGTH@ 24
------------DEL ClassInstanceCreation@@Jaxb2XmlDecoder[] @AT@ 2463 @LENGTH@ 21
---------------DEL New@@new @AT@ 2463 @LENGTH@ 3
---------------DEL SimpleType@@Jaxb2XmlDecoder @AT@ 2467 @LENGTH@ 15


DEL IfStatement@@if (getTaskExecutor() == null) {  afterPropertiesSet();} @AT@ 12794 @LENGTH@ 61
---DEL InfixExpression@@getTaskExecutor() == null @AT@ 12798 @LENGTH@ 25
------DEL MethodInvocation@@MethodName:getTaskExecutor:[] @AT@ 12798 @LENGTH@ 17
------DEL Operator@@== @AT@ 12815 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 12819 @LENGTH@ 4
---DEL Block@@ThenBody:{  afterPropertiesSet();} @AT@ 12825 @LENGTH@ 30
------DEL ExpressionStatement@@MethodInvocation:afterPropertiesSet() @AT@ 12830 @LENGTH@ 21
---------DEL MethodInvocation@@MethodName:afterPropertiesSet:[] @AT@ 12830 @LENGTH@ 20


INS MethodDeclaration@@public, static, void, MethodName:beforeClass,  @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), @RunAsClient, public]ExternalConnectionFactoryManagementTestCase, ContainerResourceMgmtTestBase @AT@ 3465 @LENGTH@ 316
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 3465 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 3472 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 3479 @LENGTH@ 4
---INS SimpleName@@MethodName:beforeClass @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 3484 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:AccessController.doPrivileged((PrivilegedAction<Void>)() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
) @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 3508 @LENGTH@ 267
------INS MethodInvocation@@AccessController.doPrivileged((PrivilegedAction<Void>)() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
) @TO@ ExpressionStatement@@MethodInvocation:AccessController.doPrivileged((PrivilegedAction<Void>)() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
) @AT@ 3508 @LENGTH@ 266
---------INS SimpleName@@Name:AccessController @TO@ MethodInvocation@@AccessController.doPrivileged((PrivilegedAction<Void>)() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
) @AT@ 3508 @LENGTH@ 16
---------INS SimpleName@@MethodName:doPrivileged:[(PrivilegedAction<Void>)() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
] @TO@ MethodInvocation@@AccessController.doPrivileged((PrivilegedAction<Void>)() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
) @AT@ 3525 @LENGTH@ 249
------------INS CastExpression@@(PrivilegedAction<Void>)() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
 @TO@ SimpleName@@MethodName:doPrivileged:[(PrivilegedAction<Void>)() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
] @AT@ 3538 @LENGTH@ 235
---------------INS ParameterizedType@@PrivilegedAction<Void> @TO@ CastExpression@@(PrivilegedAction<Void>)() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
 @AT@ 3539 @LENGTH@ 22
------------------INS SimpleType@@PrivilegedAction @TO@ ParameterizedType@@PrivilegedAction<Void> @AT@ 3539 @LENGTH@ 16
------------------INS SimpleType@@Void @TO@ ParameterizedType@@PrivilegedAction<Void> @AT@ 3556 @LENGTH@ 4
---------------INS LambdaExpression@@() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
 @TO@ CastExpression@@(PrivilegedAction<Void>)() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
 @AT@ 3563 @LENGTH@ 210
------------------INS ExpressionStatement@@MethodInvocation:Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)) @TO@ LambdaExpression@@() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
 @AT@ 3583 @LENGTH@ 155
---------------------INS MethodInvocation@@Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)) @TO@ ExpressionStatement@@MethodInvocation:Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)) @AT@ 3583 @LENGTH@ 154
------------------------INS SimpleName@@Name:Assume @TO@ MethodInvocation@@Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)) @AT@ 3583 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:assumeFalse:["[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed", Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)] @TO@ MethodInvocation@@Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)) @AT@ 3590 @LENGTH@ 147
---------------------------INS StringLiteral@@"[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed" @TO@ SimpleName@@MethodName:assumeFalse:["[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed", Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)] @AT@ 3602 @LENGTH@ 65
---------------------------INS InfixExpression@@Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6) @TO@ SimpleName@@MethodName:assumeFalse:["[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed", Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)] @AT@ 3669 @LENGTH@ 67
------------------------------INS MethodInvocation@@Util.checkForWindows() @TO@ InfixExpression@@Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6) @AT@ 3669 @LENGTH@ 22
---------------------------------INS SimpleName@@Name:Util @TO@ MethodInvocation@@Util.checkForWindows() @AT@ 3669 @LENGTH@ 4
---------------------------------INS SimpleName@@MethodName:checkForWindows:[] @TO@ MethodInvocation@@Util.checkForWindows() @AT@ 3674 @LENGTH@ 17
------------------------------INS Operator@@&& @TO@ InfixExpression@@Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6) @AT@ 3691 @LENGTH@ 2
------------------------------INS ParenthesizedExpression@@(Util.getIpStackType() == StackType.IPv6) @TO@ InfixExpression@@Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6) @AT@ 3695 @LENGTH@ 41
---------------------------------INS InfixExpression@@Util.getIpStackType() == StackType.IPv6 @TO@ ParenthesizedExpression@@(Util.getIpStackType() == StackType.IPv6) @AT@ 3696 @LENGTH@ 39
------------------------------------INS MethodInvocation@@Util.getIpStackType() @TO@ InfixExpression@@Util.getIpStackType() == StackType.IPv6 @AT@ 3696 @LENGTH@ 21
---------------------------------------INS SimpleName@@Name:Util @TO@ MethodInvocation@@Util.getIpStackType() @AT@ 3696 @LENGTH@ 4
---------------------------------------INS SimpleName@@MethodName:getIpStackType:[] @TO@ MethodInvocation@@Util.getIpStackType() @AT@ 3701 @LENGTH@ 16
------------------------------------INS Operator@@== @TO@ InfixExpression@@Util.getIpStackType() == StackType.IPv6 @AT@ 3717 @LENGTH@ 2
------------------------------------INS QualifiedName@@StackType.IPv6 @TO@ InfixExpression@@Util.getIpStackType() == StackType.IPv6 @AT@ 3721 @LENGTH@ 14
---------------------------------------INS SimpleName@@StackType @TO@ QualifiedName@@StackType.IPv6 @AT@ 3721 @LENGTH@ 9
---------------------------------------INS SimpleName@@IPv6 @TO@ QualifiedName@@StackType.IPv6 @AT@ 3731 @LENGTH@ 4
------------------INS ReturnStatement@@NullLiteral:null @TO@ LambdaExpression@@() -> {
  Assume.assumeFalse("[WFCI-32] Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
  return null;
}
 @AT@ 3751 @LENGTH@ 12
---------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 3758 @LENGTH@ 4


UPD TryStatement@@try {  tableLock.writeLock().lock();  tableColStatsCache.remove(colName);  isTableColStatsCacheDirty.set(true);}  finally {  tableLock.writeLock().unlock();} @TO@ try {  tableLock.writeLock().lock();  if (colName == null) {    tableColStatsCache.clear();  } else {    tableColStatsCache.remove(colName);  }  isTableColStatsCacheDirty.set(true);}  finally {  tableLock.writeLock().unlock();} @AT@ 17971 @LENGTH@ 198
---INS IfStatement@@if (colName == null) {  tableColStatsCache.clear();} else {  tableColStatsCache.remove(colName);} @TO@ TryStatement@@try {  tableLock.writeLock().lock();  tableColStatsCache.remove(colName);  isTableColStatsCacheDirty.set(true);}  finally {  tableLock.writeLock().unlock();} @AT@ 18023 @LENGTH@ 133
------INS InfixExpression@@colName == null @TO@ IfStatement@@if (colName == null) {  tableColStatsCache.clear();} else {  tableColStatsCache.remove(colName);} @AT@ 18027 @LENGTH@ 15
---------INS SimpleName@@colName @TO@ InfixExpression@@colName == null @AT@ 18027 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@colName == null @AT@ 18034 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@colName == null @AT@ 18038 @LENGTH@ 4
------INS Block@@ThenBody:{  tableColStatsCache.clear();} @TO@ IfStatement@@if (colName == null) {  tableColStatsCache.clear();} else {  tableColStatsCache.remove(colName);} @AT@ 18044 @LENGTH@ 49
---------INS ExpressionStatement@@MethodInvocation:tableColStatsCache.clear() @TO@ Block@@ThenBody:{  tableColStatsCache.clear();} @AT@ 18056 @LENGTH@ 27
------------INS MethodInvocation@@tableColStatsCache.clear() @TO@ ExpressionStatement@@MethodInvocation:tableColStatsCache.clear() @AT@ 18056 @LENGTH@ 26
---------------INS SimpleName@@Name:tableColStatsCache @TO@ MethodInvocation@@tableColStatsCache.clear() @AT@ 18056 @LENGTH@ 18
---------------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@tableColStatsCache.clear() @AT@ 18075 @LENGTH@ 7
------INS Block@@ElseBody:{  tableColStatsCache.remove(colName);} @TO@ IfStatement@@if (colName == null) {  tableColStatsCache.clear();} else {  tableColStatsCache.remove(colName);} @AT@ 18099 @LENGTH@ 57
---------MOV ExpressionStatement@@MethodInvocation:tableColStatsCache.remove(colName) @TO@ Block@@ElseBody:{  tableColStatsCache.remove(colName);} @AT@ 18023 @LENGTH@ 35


UPD MethodDeclaration@@MessageProperties, MethodName:toMessageProperties, BasicProperties source, Envelope envelope, String charset,  @TO@ MessageProperties, MethodName:toMessageProperties, BasicProperties source, @Nullable Envelope envelope, String charset,  @AT@ 1046 @LENGTH@ 79
---UPD SingleVariableDeclaration@@Envelope envelope @TO@ @Nullable Envelope envelope @AT@ 1090 @LENGTH@ 17


UPD ReturnStatement@@ClassInstanceCreation:new SimpleSessionIdentifierCodecBuilder(name,serverName) @TO@ ClassInstanceCreation:new SimpleSessionIdentifierCodecServiceConfigurator(name,serverName) @AT@ 29388 @LENGTH@ 65
---UPD ClassInstanceCreation@@SimpleSessionIdentifierCodecBuilder[name, serverName] @TO@ SimpleSessionIdentifierCodecServiceConfigurator[name, serverName] @AT@ 29395 @LENGTH@ 57
------UPD SimpleType@@SimpleSessionIdentifierCodecBuilder @TO@ SimpleSessionIdentifierCodecServiceConfigurator @AT@ 29399 @LENGTH@ 35


UPD MethodDeclaration@@Value<CommandDispatcherFactory>, MethodName:getCommandDispatcherFactory,  @TO@ Supplier<CommandDispatcherFactory>, MethodName:getCommandDispatcherFactory,  @AT@ 1703 @LENGTH@ 30
---UPD ParameterizedType@@Value<CommandDispatcherFactory> @TO@ Supplier<CommandDispatcherFactory> @AT@ 1671 @LENGTH@ 31
------UPD SimpleType@@Value @TO@ Supplier @AT@ 1671 @LENGTH@ 5


UPD VariableDeclarationStatement@@OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),oauth2Authentication.getName(),authenticationResult.getAccessToken()); @TO@ OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),oauth2Authentication.getName(),authenticationResult.getAccessToken(),authenticationResult.getRefreshToken()); @AT@ 9215 @LENGTH@ 196
---UPD VariableDeclarationFragment@@authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),oauth2Authentication.getName(),authenticationResult.getAccessToken()) @TO@ authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),oauth2Authentication.getName(),authenticationResult.getAccessToken(),authenticationResult.getRefreshToken()) @AT@ 9238 @LENGTH@ 172
------UPD ClassInstanceCreation@@OAuth2AuthorizedClient[authenticationResult.getClientRegistration(), oauth2Authentication.getName(), authenticationResult.getAccessToken()] @TO@ OAuth2AuthorizedClient[authenticationResult.getClientRegistration(), oauth2Authentication.getName(), authenticationResult.getAccessToken(), authenticationResult.getRefreshToken()] @AT@ 9257 @LENGTH@ 153
---------INS MethodInvocation@@authenticationResult.getRefreshToken() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authenticationResult.getClientRegistration(), oauth2Authentication.getName(), authenticationResult.getAccessToken()] @AT@ 9414 @LENGTH@ 38
------------INS SimpleName@@Name:authenticationResult @TO@ MethodInvocation@@authenticationResult.getRefreshToken() @AT@ 9414 @LENGTH@ 20
------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@authenticationResult.getRefreshToken() @AT@ 9435 @LENGTH@ 17


UPD Block@@ElseBody:if ("fanout".equals(this.exchangeType)) {  x=new FanoutExchange(this.exchangeName,this.durable,this.autoDelete);} else if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ ElseBody:if ("fanout".equals(this.exchangeType)) {  x=new FanoutExchange(this.exchangeName,this.durable,this.autoDelete);} else if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22818 @LENGTH@ 359
---UPD IfStatement@@if ("fanout".equals(this.exchangeType)) {  x=new FanoutExchange(this.exchangeName,this.durable,this.autoDelete);} else if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ if ("fanout".equals(this.exchangeType)) {  x=new FanoutExchange(this.exchangeName,this.durable,this.autoDelete);} else if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22818 @LENGTH@ 359
------UPD Block@@ElseBody:if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ ElseBody:if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22954 @LENGTH@ 223
---------UPD IfStatement@@if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22954 @LENGTH@ 223
------------UPD Block@@ThenBody:{  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} @TO@ ThenBody:{  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22995 @LENGTH@ 87
---------------UPD ExpressionStatement@@Assignment:x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ Assignment:x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 74
------------------UPD Assignment@@x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 73
---------------------UPD ClassInstanceCreation@@HeadersExchange[this.exchangeType, this.durable, this.autoDelete] @TO@ HeadersExchange[this.exchangeName, this.durable, this.autoDelete] @AT@ 23006 @LENGTH@ 69
------------------------UPD FieldAccess@@this.exchangeType @TO@ this.exchangeName @AT@ 23026 @LENGTH@ 17
---------------------------UPD SimpleName@@exchangeType @TO@ exchangeName @AT@ 23031 @LENGTH@ 12
---------UPD IfStatement@@if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22954 @LENGTH@ 223
------------UPD Block@@ThenBody:{  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} @TO@ ThenBody:{  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22995 @LENGTH@ 87
---------------UPD ExpressionStatement@@Assignment:x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ Assignment:x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 74
------------------UPD Assignment@@x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 73
---------------------UPD ClassInstanceCreation@@HeadersExchange[this.exchangeType, this.durable, this.autoDelete] @TO@ HeadersExchange[this.exchangeName, this.durable, this.autoDelete] @AT@ 23006 @LENGTH@ 69
------------------------UPD FieldAccess@@this.exchangeType @TO@ this.exchangeName @AT@ 23026 @LENGTH@ 17
---------------------------UPD SimpleName@@exchangeType @TO@ exchangeName @AT@ 23031 @LENGTH@ 12
---------UPD IfStatement@@if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22954 @LENGTH@ 223
------------UPD Block@@ThenBody:{  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} @TO@ ThenBody:{  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22995 @LENGTH@ 87
---------------UPD ExpressionStatement@@Assignment:x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ Assignment:x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 74
------------------UPD Assignment@@x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 73
---------------------UPD ClassInstanceCreation@@HeadersExchange[this.exchangeType, this.durable, this.autoDelete] @TO@ HeadersExchange[this.exchangeName, this.durable, this.autoDelete] @AT@ 23006 @LENGTH@ 69
------------------------UPD FieldAccess@@this.exchangeType @TO@ this.exchangeName @AT@ 23026 @LENGTH@ 17
---------------------------UPD SimpleName@@exchangeType @TO@ exchangeName @AT@ 23031 @LENGTH@ 12
---------UPD IfStatement@@if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22954 @LENGTH@ 223
------------UPD Block@@ThenBody:{  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} @TO@ ThenBody:{  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22995 @LENGTH@ 87
---------------UPD ExpressionStatement@@Assignment:x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ Assignment:x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 74
------------------UPD Assignment@@x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 73
---------------------UPD ClassInstanceCreation@@HeadersExchange[this.exchangeType, this.durable, this.autoDelete] @TO@ HeadersExchange[this.exchangeName, this.durable, this.autoDelete] @AT@ 23006 @LENGTH@ 69
------------------------UPD FieldAccess@@this.exchangeType @TO@ this.exchangeName @AT@ 23026 @LENGTH@ 17
---------------------------UPD SimpleName@@exchangeType @TO@ exchangeName @AT@ 23031 @LENGTH@ 12
---------UPD IfStatement@@if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22954 @LENGTH@ 223
------------UPD Block@@ThenBody:{  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} @TO@ ThenBody:{  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22995 @LENGTH@ 87
---------------UPD ExpressionStatement@@Assignment:x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ Assignment:x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 74
------------------UPD Assignment@@x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 73
---------------------UPD ClassInstanceCreation@@HeadersExchange[this.exchangeType, this.durable, this.autoDelete] @TO@ HeadersExchange[this.exchangeName, this.durable, this.autoDelete] @AT@ 23006 @LENGTH@ 69
------------------------UPD FieldAccess@@this.exchangeType @TO@ this.exchangeName @AT@ 23026 @LENGTH@ 17
---------------------------UPD SimpleName@@exchangeType @TO@ exchangeName @AT@ 23031 @LENGTH@ 12
---UPD IfStatement@@if ("fanout".equals(this.exchangeType)) {  x=new FanoutExchange(this.exchangeName,this.durable,this.autoDelete);} else if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ if ("fanout".equals(this.exchangeType)) {  x=new FanoutExchange(this.exchangeName,this.durable,this.autoDelete);} else if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22818 @LENGTH@ 359
------UPD Block@@ElseBody:if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ ElseBody:if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22954 @LENGTH@ 223
---------UPD IfStatement@@if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22954 @LENGTH@ 223
------------UPD Block@@ThenBody:{  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} @TO@ ThenBody:{  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22995 @LENGTH@ 87
---------------UPD ExpressionStatement@@Assignment:x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ Assignment:x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 74
------------------UPD Assignment@@x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 73
---------------------UPD ClassInstanceCreation@@HeadersExchange[this.exchangeType, this.durable, this.autoDelete] @TO@ HeadersExchange[this.exchangeName, this.durable, this.autoDelete] @AT@ 23006 @LENGTH@ 69
------------------------UPD FieldAccess@@this.exchangeType @TO@ this.exchangeName @AT@ 23026 @LENGTH@ 17
---------------------------UPD SimpleName@@exchangeType @TO@ exchangeName @AT@ 23031 @LENGTH@ 12
---------UPD IfStatement@@if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22954 @LENGTH@ 223
------------UPD Block@@ThenBody:{  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} @TO@ ThenBody:{  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22995 @LENGTH@ 87
---------------UPD ExpressionStatement@@Assignment:x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ Assignment:x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 74
------------------UPD Assignment@@x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 73
---------------------UPD ClassInstanceCreation@@HeadersExchange[this.exchangeType, this.durable, this.autoDelete] @TO@ HeadersExchange[this.exchangeName, this.durable, this.autoDelete] @AT@ 23006 @LENGTH@ 69
------------------------UPD FieldAccess@@this.exchangeType @TO@ this.exchangeName @AT@ 23026 @LENGTH@ 17
---------------------------UPD SimpleName@@exchangeType @TO@ exchangeName @AT@ 23031 @LENGTH@ 12
---------UPD IfStatement@@if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22954 @LENGTH@ 223
------------UPD Block@@ThenBody:{  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} @TO@ ThenBody:{  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22995 @LENGTH@ 87
---------------UPD ExpressionStatement@@Assignment:x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ Assignment:x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 74
------------------UPD Assignment@@x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 73
---------------------UPD ClassInstanceCreation@@HeadersExchange[this.exchangeType, this.durable, this.autoDelete] @TO@ HeadersExchange[this.exchangeName, this.durable, this.autoDelete] @AT@ 23006 @LENGTH@ 69
------------------------UPD FieldAccess@@this.exchangeType @TO@ this.exchangeName @AT@ 23026 @LENGTH@ 17
---------------------------UPD SimpleName@@exchangeType @TO@ exchangeName @AT@ 23031 @LENGTH@ 12
---------UPD IfStatement@@if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22954 @LENGTH@ 223
------------UPD Block@@ThenBody:{  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} @TO@ ThenBody:{  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22995 @LENGTH@ 87
---------------UPD ExpressionStatement@@Assignment:x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ Assignment:x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 74
------------------UPD Assignment@@x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 73
---------------------UPD ClassInstanceCreation@@HeadersExchange[this.exchangeType, this.durable, this.autoDelete] @TO@ HeadersExchange[this.exchangeName, this.durable, this.autoDelete] @AT@ 23006 @LENGTH@ 69
------------------------UPD FieldAccess@@this.exchangeType @TO@ this.exchangeName @AT@ 23026 @LENGTH@ 17
---------------------------UPD SimpleName@@exchangeType @TO@ exchangeName @AT@ 23031 @LENGTH@ 12
---------UPD IfStatement@@if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @TO@ if ("headers".equals(this.exchangeType)) {  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} else {  x=new TopicExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22954 @LENGTH@ 223
------------UPD Block@@ThenBody:{  x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete);} @TO@ ThenBody:{  x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete);} @AT@ 22995 @LENGTH@ 87
---------------UPD ExpressionStatement@@Assignment:x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ Assignment:x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 74
------------------UPD Assignment@@x=new HeadersExchange(this.exchangeType,this.durable,this.autoDelete) @TO@ x=new HeadersExchange(this.exchangeName,this.durable,this.autoDelete) @AT@ 23002 @LENGTH@ 73
---------------------UPD ClassInstanceCreation@@HeadersExchange[this.exchangeType, this.durable, this.autoDelete] @TO@ HeadersExchange[this.exchangeName, this.durable, this.autoDelete] @AT@ 23006 @LENGTH@ 69
------------------------UPD FieldAccess@@this.exchangeType @TO@ this.exchangeName @AT@ 23026 @LENGTH@ 17
---------------------------UPD SimpleName@@exchangeType @TO@ exchangeName @AT@ 23031 @LENGTH@ 12


UPD FieldDeclaration@@String, [referenceLocation="../docs/manual/src/docs/asciidoc/_includes/appendix/namespace.adoc"] @TO@ String, [referenceLocation="../docs/manual/src/docs/asciidoc/_includes/servlet/appendix/namespace.adoc"] @AT@ 1487 @LENGTH@ 96
---UPD VariableDeclarationFragment@@referenceLocation="../docs/manual/src/docs/asciidoc/_includes/appendix/namespace.adoc" @TO@ referenceLocation="../docs/manual/src/docs/asciidoc/_includes/servlet/appendix/namespace.adoc" @AT@ 1494 @LENGTH@ 88
------UPD StringLiteral@@"../docs/manual/src/docs/asciidoc/_includes/appendix/namespace.adoc" @TO@ "../docs/manual/src/docs/asciidoc/_includes/servlet/appendix/namespace.adoc" @AT@ 1514 @LENGTH@ 68


UPD ExpressionStatement@@Assignment:this.sessionFixationAuthenticationStrategy=sessionAuthenticationStrategy @TO@ Assignment:this.providedSessionAuthenticationStrategy=sessionAuthenticationStrategy @AT@ 10824 @LENGTH@ 75
---UPD Assignment@@this.sessionFixationAuthenticationStrategy=sessionAuthenticationStrategy @TO@ this.providedSessionAuthenticationStrategy=sessionAuthenticationStrategy @AT@ 10824 @LENGTH@ 74
------UPD FieldAccess@@this.sessionFixationAuthenticationStrategy @TO@ this.providedSessionAuthenticationStrategy @AT@ 10824 @LENGTH@ 42
---------UPD SimpleName@@sessionFixationAuthenticationStrategy @TO@ providedSessionAuthenticationStrategy @AT@ 10829 @LENGTH@ 37


UPD ReturnStatement@@ClassInstanceCreation:new InfinispanSSOManagerFactoryBuilder<>(name) @TO@ ClassInstanceCreation:new InfinispanSSOManagerFactoryServiceConfigurator<>(name) @AT@ 1566 @LENGTH@ 54
---UPD ClassInstanceCreation@@InfinispanSSOManagerFactoryBuilder<>[name] @TO@ InfinispanSSOManagerFactoryServiceConfigurator<>[name] @AT@ 1573 @LENGTH@ 46
------UPD ParameterizedType@@InfinispanSSOManagerFactoryBuilder<> @TO@ InfinispanSSOManagerFactoryServiceConfigurator<> @AT@ 1577 @LENGTH@ 36
---------UPD SimpleType@@InfinispanSSOManagerFactoryBuilder @TO@ InfinispanSSOManagerFactoryServiceConfigurator @AT@ 1577 @LENGTH@ 34


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelAmqpTest.class)).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelAmqpTest.class)).dependency("javax.json:javax.json-api").build() @AT@ 1442 @LENGTH@ 119
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelAmqpTest.class)).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelAmqpTest.class)).dependency("javax.json:javax.json-api").build() @AT@ 1449 @LENGTH@ 111
------INS MethodInvocation@@MethodName:dependency:["javax.json:javax.json-api"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelAmqpTest.class)).build() @AT@ 1449 @LENGTH@ 143
---------INS StringLiteral@@"javax.json:javax.json-api" @TO@ MethodInvocation@@MethodName:dependency:["javax.json:javax.json-api"] @AT@ 1564 @LENGTH@ 27


UPD IfStatement@@if (header == null || !header.startsWith("Basic ")) {  chain.doFilter(request,response);  return;} @TO@ if (header == null || !header.toLowerCase().startsWith("basic ")) {  chain.doFilter(request,response);  return;} @AT@ 6933 @LENGTH@ 106
---UPD InfixExpression@@header == null || !header.startsWith("Basic ") @TO@ header == null || !header.toLowerCase().startsWith("basic ") @AT@ 6937 @LENGTH@ 46
------UPD PrefixExpression@@!header.startsWith("Basic ") @TO@ !header.toLowerCase().startsWith("basic ") @AT@ 6955 @LENGTH@ 28
---------UPD MethodInvocation@@header.startsWith("Basic ") @TO@ header.toLowerCase().startsWith("basic ") @AT@ 6956 @LENGTH@ 27
------------INS MethodInvocation@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@header.startsWith("Basic ") @AT@ 6956 @LENGTH@ 20
------------UPD SimpleName@@MethodName:startsWith:["Basic "] @TO@ MethodName:startsWith:["basic "] @AT@ 6963 @LENGTH@ 20
---------------UPD StringLiteral@@"Basic " @TO@ "basic " @AT@ 6974 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:pad(entry.getHeaderPadCount()) @TO@ MethodInvocation:pad(entry.getHeaderPadCount(Charset.forName(encoding))) @AT@ 10491 @LENGTH@ 31
---UPD MethodInvocation@@pad(entry.getHeaderPadCount()) @TO@ pad(entry.getHeaderPadCount(Charset.forName(encoding))) @AT@ 10491 @LENGTH@ 30
------UPD SimpleName@@MethodName:pad:[entry.getHeaderPadCount()] @TO@ MethodName:pad:[entry.getHeaderPadCount(Charset.forName(encoding))] @AT@ 10491 @LENGTH@ 30
---------UPD MethodInvocation@@entry.getHeaderPadCount() @TO@ entry.getHeaderPadCount(Charset.forName(encoding)) @AT@ 10495 @LENGTH@ 25
------------UPD SimpleName@@MethodName:getHeaderPadCount:[] @TO@ MethodName:getHeaderPadCount:[Charset.forName(encoding)] @AT@ 10501 @LENGTH@ 19
---------------INS MethodInvocation@@Charset.forName(encoding) @TO@ SimpleName@@MethodName:getHeaderPadCount:[] @AT@ 10552 @LENGTH@ 25
------------------INS SimpleName@@Name:Charset @TO@ MethodInvocation@@Charset.forName(encoding) @AT@ 10552 @LENGTH@ 7
------------------INS SimpleName@@MethodName:forName:[encoding] @TO@ MethodInvocation@@Charset.forName(encoding) @AT@ 10560 @LENGTH@ 17
---------------------INS SimpleName@@encoding @TO@ SimpleName@@MethodName:forName:[encoding] @AT@ 10568 @LENGTH@ 8


UPD MethodDeclaration@@public, String, MethodName:gitHubRepos, Model model, @OAuth2Client("github") OAuth2AuthorizedClient authorizedClient,  @TO@ public, String, MethodName:gitHubRepos, Model model, @RegisteredOAuth2AuthorizedClient("github") OAuth2AuthorizedClient authorizedClient,  @AT@ 1509 @LENGTH@ 405
---UPD SingleVariableDeclaration@@@OAuth2Client("github") OAuth2AuthorizedClient authorizedClient @TO@ @RegisteredOAuth2AuthorizedClient("github") OAuth2AuthorizedClient authorizedClient @AT@ 1548 @LENGTH@ 63


INS ExpressionStatement@@MethodInvocation:authenticationBuilder.authenticationEventPublisher(eventPublisher) @TO@ MethodDeclaration@@protected, final, HttpSecurity, MethodName:getHttp, Exception,  @AT@ 9392 @LENGTH@ 67
---INS MethodInvocation@@authenticationBuilder.authenticationEventPublisher(eventPublisher) @TO@ ExpressionStatement@@MethodInvocation:authenticationBuilder.authenticationEventPublisher(eventPublisher) @AT@ 9392 @LENGTH@ 66
------INS SimpleName@@Name:authenticationBuilder @TO@ MethodInvocation@@authenticationBuilder.authenticationEventPublisher(eventPublisher) @AT@ 9392 @LENGTH@ 21
------INS SimpleName@@MethodName:authenticationEventPublisher:[eventPublisher] @TO@ MethodInvocation@@authenticationBuilder.authenticationEventPublisher(eventPublisher) @AT@ 9414 @LENGTH@ 44
---------INS SimpleName@@eventPublisher @TO@ SimpleName@@MethodName:authenticationEventPublisher:[eventPublisher] @AT@ 9443 @LENGTH@ 14


UPD VariableDeclarationStatement@@NimbusReactiveAuthorizationCodeTokenResponseClient client=new NimbusReactiveAuthorizationCodeTokenResponseClient(); @TO@ WebClientReactiveAuthorizationCodeTokenResponseClient client=new WebClientReactiveAuthorizationCodeTokenResponseClient(); @AT@ 16886 @LENGTH@ 117
---UPD SimpleType@@NimbusReactiveAuthorizationCodeTokenResponseClient @TO@ WebClientReactiveAuthorizationCodeTokenResponseClient @AT@ 16886 @LENGTH@ 50
---UPD VariableDeclarationFragment@@client=new NimbusReactiveAuthorizationCodeTokenResponseClient() @TO@ client=new WebClientReactiveAuthorizationCodeTokenResponseClient() @AT@ 16937 @LENGTH@ 65
------UPD ClassInstanceCreation@@NimbusReactiveAuthorizationCodeTokenResponseClient[] @TO@ WebClientReactiveAuthorizationCodeTokenResponseClient[] @AT@ 16946 @LENGTH@ 56
---------UPD SimpleType@@NimbusReactiveAuthorizationCodeTokenResponseClient @TO@ WebClientReactiveAuthorizationCodeTokenResponseClient @AT@ 16950 @LENGTH@ 50


UPD TypeDeclaration@@[@MetaInfServices(BeanManagerFactoryBuilderFactoryProvider.class), public]InfinispanBeanManagerFactoryBuilderFactoryProvider, [BeanManagerFactoryBuilderFactoryProvider<TransactionBatch>] @TO@ [@MetaInfServices(BeanManagerFactoryServiceConfiguratorFactoryProvider.class), public]InfinispanBeanManagerFactoryBuilderFactoryProvider, [BeanManagerFactoryServiceConfiguratorFactoryProvider] @AT@ 1488 @LENGTH@ 505
---UPD SingleMemberAnnotation@@@MetaInfServices(BeanManagerFactoryBuilderFactoryProvider.class) @TO@ @MetaInfServices(BeanManagerFactoryServiceConfiguratorFactoryProvider.class) @AT@ 1488 @LENGTH@ 64
---INS SimpleType@@BeanManagerFactoryServiceConfiguratorFactoryProvider @TO@ TypeDeclaration@@[@MetaInfServices(BeanManagerFactoryBuilderFactoryProvider.class), public]InfinispanBeanManagerFactoryBuilderFactoryProvider, [BeanManagerFactoryBuilderFactoryProvider<TransactionBatch>] @AT@ 1614 @LENGTH@ 52
---DEL ParameterizedType@@BeanManagerFactoryBuilderFactoryProvider<TransactionBatch> @AT@ 1628 @LENGTH@ 58
------DEL SimpleType@@BeanManagerFactoryBuilderFactoryProvider @AT@ 1628 @LENGTH@ 40
------DEL SimpleType@@TransactionBatch @AT@ 1669 @LENGTH@ 16


UPD SuperConstructorInvocation@@super(WILDCARD_PATH,new SimpleResourceDescriptorConfigurator<>(Attribute.class),new ClusteredCacheServiceHandler(DistributedCacheBuilder::new));
 @TO@ super(WILDCARD_PATH,new SimpleResourceDescriptorConfigurator<>(Attribute.class),new ClusteredCacheServiceHandler(DistributedCacheServiceConfigurator::new));
 @AT@ 5670 @LENGTH@ 146
---UPD ClassInstanceCreation@@ClusteredCacheServiceHandler[DistributedCacheBuilder::new] @TO@ ClusteredCacheServiceHandler[DistributedCacheServiceConfigurator::new] @AT@ 5752 @LENGTH@ 62


INS ExpressionStatement@@MethodInvocation:advertiser.setCheckTTL(fraction.ttl()) @TO@ MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext context, ServiceRegistryException,  @AT@ 1921 @LENGTH@ 39
---INS MethodInvocation@@advertiser.setCheckTTL(fraction.ttl()) @TO@ ExpressionStatement@@MethodInvocation:advertiser.setCheckTTL(fraction.ttl()) @AT@ 1921 @LENGTH@ 38
------INS SimpleName@@Name:advertiser @TO@ MethodInvocation@@advertiser.setCheckTTL(fraction.ttl()) @AT@ 1921 @LENGTH@ 10
------INS SimpleName@@MethodName:setCheckTTL:[fraction.ttl()] @TO@ MethodInvocation@@advertiser.setCheckTTL(fraction.ttl()) @AT@ 1932 @LENGTH@ 27
---------INS MethodInvocation@@fraction.ttl() @TO@ SimpleName@@MethodName:setCheckTTL:[fraction.ttl()] @AT@ 1944 @LENGTH@ 14
------------INS SimpleName@@Name:fraction @TO@ MethodInvocation@@fraction.ttl() @AT@ 1944 @LENGTH@ 8
------------INS SimpleName@@MethodName:ttl:[] @TO@ MethodInvocation@@fraction.ttl() @AT@ 1953 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @TO@ TypeDeclaration@@[public]UnboundIdContainerTests,  @AT@ 1473 @LENGTH@ 331
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 1473 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 1480 @LENGTH@ 4
---INS SimpleName@@MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 1485 @LENGTH@ 56
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 1551 @LENGTH@ 9
---INS VariableDeclarationStatement@@UnboundIdContainer server=new UnboundIdContainer("dc=springframework,dc=org",null); @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 1565 @LENGTH@ 86
------INS SimpleType@@UnboundIdContainer @TO@ VariableDeclarationStatement@@UnboundIdContainer server=new UnboundIdContainer("dc=springframework,dc=org",null); @AT@ 1565 @LENGTH@ 18
------INS VariableDeclarationFragment@@server=new UnboundIdContainer("dc=springframework,dc=org",null) @TO@ VariableDeclarationStatement@@UnboundIdContainer server=new UnboundIdContainer("dc=springframework,dc=org",null); @AT@ 1584 @LENGTH@ 66
---------INS SimpleName@@server @TO@ VariableDeclarationFragment@@server=new UnboundIdContainer("dc=springframework,dc=org",null) @AT@ 1584 @LENGTH@ 6
---------INS ClassInstanceCreation@@UnboundIdContainer["dc=springframework,dc=org", null] @TO@ VariableDeclarationFragment@@server=new UnboundIdContainer("dc=springframework,dc=org",null) @AT@ 1593 @LENGTH@ 57
------------INS New@@new @TO@ ClassInstanceCreation@@UnboundIdContainer["dc=springframework,dc=org", null] @AT@ 1593 @LENGTH@ 3
------------INS SimpleType@@UnboundIdContainer @TO@ ClassInstanceCreation@@UnboundIdContainer["dc=springframework,dc=org", null] @AT@ 1597 @LENGTH@ 18
------------INS StringLiteral@@"dc=springframework,dc=org" @TO@ ClassInstanceCreation@@UnboundIdContainer["dc=springframework,dc=org", null] @AT@ 1616 @LENGTH@ 27
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@UnboundIdContainer["dc=springframework,dc=org", null] @AT@ 1645 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:server.setPort(0) @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 1654 @LENGTH@ 18
------INS MethodInvocation@@server.setPort(0) @TO@ ExpressionStatement@@MethodInvocation:server.setPort(0) @AT@ 1654 @LENGTH@ 17
---------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.setPort(0) @AT@ 1654 @LENGTH@ 6
---------INS SimpleName@@MethodName:setPort:[0] @TO@ MethodInvocation@@server.setPort(0) @AT@ 1661 @LENGTH@ 10
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:setPort:[0] @AT@ 1669 @LENGTH@ 1
---INS TryStatement@@try {  server.afterPropertiesSet();  assertThat(server.getPort()).isNotEqualTo(0);}  finally {  server.destroy();} @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 1676 @LENGTH@ 125
------INS ExpressionStatement@@MethodInvocation:server.afterPropertiesSet() @TO@ TryStatement@@try {  server.afterPropertiesSet();  assertThat(server.getPort()).isNotEqualTo(0);}  finally {  server.destroy();} @AT@ 1685 @LENGTH@ 28
---------INS MethodInvocation@@server.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:server.afterPropertiesSet() @AT@ 1685 @LENGTH@ 27
------------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.afterPropertiesSet() @AT@ 1685 @LENGTH@ 6
------------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@server.afterPropertiesSet() @AT@ 1692 @LENGTH@ 20
------INS ExpressionStatement@@MethodInvocation:assertThat(server.getPort()).isNotEqualTo(0) @TO@ TryStatement@@try {  server.afterPropertiesSet();  assertThat(server.getPort()).isNotEqualTo(0);}  finally {  server.destroy();} @AT@ 1717 @LENGTH@ 45
---------INS MethodInvocation@@assertThat(server.getPort()).isNotEqualTo(0) @TO@ ExpressionStatement@@MethodInvocation:assertThat(server.getPort()).isNotEqualTo(0) @AT@ 1717 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:assertThat:[server.getPort()] @TO@ MethodInvocation@@assertThat(server.getPort()).isNotEqualTo(0) @AT@ 1717 @LENGTH@ 28
---------------INS MethodInvocation@@server.getPort() @TO@ MethodInvocation@@MethodName:assertThat:[server.getPort()] @AT@ 1728 @LENGTH@ 16
------------------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.getPort() @AT@ 1728 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@server.getPort() @AT@ 1735 @LENGTH@ 9
------------INS SimpleName@@MethodName:isNotEqualTo:[0] @TO@ MethodInvocation@@assertThat(server.getPort()).isNotEqualTo(0) @AT@ 1746 @LENGTH@ 15
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:isNotEqualTo:[0] @AT@ 1759 @LENGTH@ 1
------INS Block@@FinallyBody:{  server.destroy();} @TO@ TryStatement@@try {  server.afterPropertiesSet();  assertThat(server.getPort()).isNotEqualTo(0);}  finally {  server.destroy();} @AT@ 1775 @LENGTH@ 26
---------INS ExpressionStatement@@MethodInvocation:server.destroy() @TO@ Block@@FinallyBody:{  server.destroy();} @AT@ 1780 @LENGTH@ 17
------------INS MethodInvocation@@server.destroy() @TO@ ExpressionStatement@@MethodInvocation:server.destroy() @AT@ 1780 @LENGTH@ 16
---------------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.destroy() @AT@ 1780 @LENGTH@ 6
---------------INS SimpleName@@MethodName:destroy:[] @TO@ MethodInvocation@@server.destroy() @AT@ 1787 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:authenticationFilter.setRequiresAuthenticationRequestMatcher(new AndRequestMatcher(createLoginProcessingUrlMatcher(this.loginProcessingUrl),authenticationNullMatcher)) @TO@ MethodDeclaration@@public, void, MethodName:init, B http, Exception,  @AT@ 18989 @LENGTH@ 173
---INS MethodInvocation@@authenticationFilter.setRequiresAuthenticationRequestMatcher(new AndRequestMatcher(createLoginProcessingUrlMatcher(this.loginProcessingUrl),authenticationNullMatcher)) @TO@ ExpressionStatement@@MethodInvocation:authenticationFilter.setRequiresAuthenticationRequestMatcher(new AndRequestMatcher(createLoginProcessingUrlMatcher(this.loginProcessingUrl),authenticationNullMatcher)) @AT@ 18989 @LENGTH@ 172
------INS SimpleName@@Name:authenticationFilter @TO@ MethodInvocation@@authenticationFilter.setRequiresAuthenticationRequestMatcher(new AndRequestMatcher(createLoginProcessingUrlMatcher(this.loginProcessingUrl),authenticationNullMatcher)) @AT@ 18989 @LENGTH@ 20
------INS SimpleName@@MethodName:setRequiresAuthenticationRequestMatcher:[new AndRequestMatcher(createLoginProcessingUrlMatcher(this.loginProcessingUrl),authenticationNullMatcher)] @TO@ MethodInvocation@@authenticationFilter.setRequiresAuthenticationRequestMatcher(new AndRequestMatcher(createLoginProcessingUrlMatcher(this.loginProcessingUrl),authenticationNullMatcher)) @AT@ 19010 @LENGTH@ 151
---------INS ClassInstanceCreation@@AndRequestMatcher[createLoginProcessingUrlMatcher(this.loginProcessingUrl), authenticationNullMatcher] @TO@ SimpleName@@MethodName:setRequiresAuthenticationRequestMatcher:[new AndRequestMatcher(createLoginProcessingUrlMatcher(this.loginProcessingUrl),authenticationNullMatcher)] @AT@ 19050 @LENGTH@ 110
------------INS New@@new @TO@ ClassInstanceCreation@@AndRequestMatcher[createLoginProcessingUrlMatcher(this.loginProcessingUrl), authenticationNullMatcher] @AT@ 19050 @LENGTH@ 3
------------INS SimpleType@@AndRequestMatcher @TO@ ClassInstanceCreation@@AndRequestMatcher[createLoginProcessingUrlMatcher(this.loginProcessingUrl), authenticationNullMatcher] @AT@ 19054 @LENGTH@ 17
------------INS MethodInvocation@@createLoginProcessingUrlMatcher(this.loginProcessingUrl) @TO@ ClassInstanceCreation@@AndRequestMatcher[createLoginProcessingUrlMatcher(this.loginProcessingUrl), authenticationNullMatcher] @AT@ 19072 @LENGTH@ 56
---------------INS SimpleName@@MethodName:createLoginProcessingUrlMatcher:[this.loginProcessingUrl] @TO@ MethodInvocation@@createLoginProcessingUrlMatcher(this.loginProcessingUrl) @AT@ 19072 @LENGTH@ 56
------------------INS FieldAccess@@this.loginProcessingUrl @TO@ SimpleName@@MethodName:createLoginProcessingUrlMatcher:[this.loginProcessingUrl] @AT@ 19104 @LENGTH@ 23
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.loginProcessingUrl @AT@ 19104 @LENGTH@ 4
---------------------INS SimpleName@@loginProcessingUrl @TO@ FieldAccess@@this.loginProcessingUrl @AT@ 19109 @LENGTH@ 18
------------INS SimpleName@@authenticationNullMatcher @TO@ ClassInstanceCreation@@AndRequestMatcher[createLoginProcessingUrlMatcher(this.loginProcessingUrl), authenticationNullMatcher] @AT@ 19134 @LENGTH@ 25


UPD FieldDeclaration@@private, ZkUtils, [zkUtils=null] @TO@ private, ZkUtils, [zkUtils] @AT@ 1870 @LENGTH@ 31
---UPD VariableDeclarationFragment@@zkUtils=null @TO@ zkUtils @AT@ 1886 @LENGTH@ 14
------DEL NullLiteral@@null @AT@ 1896 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:converter.setJavaTypeMapper(null) @AT@ 4451 @LENGTH@ 34
---DEL MethodInvocation@@converter.setJavaTypeMapper(null) @AT@ 4451 @LENGTH@ 33
------DEL SimpleName@@Name:converter @AT@ 4451 @LENGTH@ 9
------DEL SimpleName@@MethodName:setJavaTypeMapper:[null] @AT@ 4461 @LENGTH@ 23
---------DEL NullLiteral@@null @AT@ 4479 @LENGTH@ 4


DEL VariableDeclarationStatement@@OAuth2AccessToken accessToken=accessTokenResponse.getAccessToken(); @AT@ 3515 @LENGTH@ 69
---DEL SimpleType@@OAuth2AccessToken @AT@ 3515 @LENGTH@ 17
---DEL VariableDeclarationFragment@@accessToken=accessTokenResponse.getAccessToken() @AT@ 3533 @LENGTH@ 50
------DEL SimpleName@@accessToken @AT@ 3533 @LENGTH@ 11
------DEL MethodInvocation@@accessTokenResponse.getAccessToken() @AT@ 3547 @LENGTH@ 36
---------DEL SimpleName@@Name:accessTokenResponse @AT@ 3547 @LENGTH@ 19
---------DEL SimpleName@@MethodName:getAccessToken:[] @AT@ 3567 @LENGTH@ 16


UPD ExpressionStatement@@Assignment:startAt=changeStreamOptions.getResumeTimestamp().map(Instant::toEpochMilli).map(BsonTimestamp::new).orElse(null) @TO@ Assignment:startAt=changeStreamOptions.getResumeTimestamp().map(it -> new BsonTimestamp((int)it.getEpochSecond(),0)).orElse(null) @AT@ 5031 @LENGTH@ 121
---UPD Assignment@@startAt=changeStreamOptions.getResumeTimestamp().map(Instant::toEpochMilli).map(BsonTimestamp::new).orElse(null) @TO@ startAt=changeStreamOptions.getResumeTimestamp().map(it -> new BsonTimestamp((int)it.getEpochSecond(),0)).orElse(null) @AT@ 5031 @LENGTH@ 120
------UPD MethodInvocation@@changeStreamOptions.getResumeTimestamp().map(Instant::toEpochMilli).map(BsonTimestamp::new).orElse(null) @TO@ changeStreamOptions.getResumeTimestamp().map(it -> new BsonTimestamp((int)it.getEpochSecond(),0)).orElse(null) @AT@ 5041 @LENGTH@ 110
---------UPD MethodInvocation@@MethodName:map:[BsonTimestamp::new] @TO@ MethodName:map:[it -> new BsonTimestamp((int)it.getEpochSecond(),0)] @AT@ 5041 @LENGTH@ 91
------------INS LambdaExpression@@it -> new BsonTimestamp((int)it.getEpochSecond(),0) @TO@ MethodInvocation@@MethodName:map:[BsonTimestamp::new] @AT@ 5086 @LENGTH@ 53
---------------INS VariableDeclarationFragment@@it @TO@ LambdaExpression@@it -> new BsonTimestamp((int)it.getEpochSecond(),0) @AT@ 5086 @LENGTH@ 2
------------------INS SimpleName@@it @TO@ VariableDeclarationFragment@@it @AT@ 5086 @LENGTH@ 2
---------------INS ClassInstanceCreation@@BsonTimestamp[(int)it.getEpochSecond(), 0] @TO@ LambdaExpression@@it -> new BsonTimestamp((int)it.getEpochSecond(),0) @AT@ 5092 @LENGTH@ 47
------------------INS New@@new @TO@ ClassInstanceCreation@@BsonTimestamp[(int)it.getEpochSecond(), 0] @AT@ 5092 @LENGTH@ 3
------------------INS SimpleType@@BsonTimestamp @TO@ ClassInstanceCreation@@BsonTimestamp[(int)it.getEpochSecond(), 0] @AT@ 5096 @LENGTH@ 13
------------------INS CastExpression@@(int)it.getEpochSecond() @TO@ ClassInstanceCreation@@BsonTimestamp[(int)it.getEpochSecond(), 0] @AT@ 5110 @LENGTH@ 25
---------------------INS PrimitiveType@@int @TO@ CastExpression@@(int)it.getEpochSecond() @AT@ 5111 @LENGTH@ 3
---------------------INS MethodInvocation@@it.getEpochSecond() @TO@ CastExpression@@(int)it.getEpochSecond() @AT@ 5116 @LENGTH@ 19
------------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.getEpochSecond() @AT@ 5116 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:getEpochSecond:[] @TO@ MethodInvocation@@it.getEpochSecond() @AT@ 5119 @LENGTH@ 16
------------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@BsonTimestamp[(int)it.getEpochSecond(), 0] @AT@ 5137 @LENGTH@ 1
---------DEL MethodInvocation@@MethodName:map:[Instant::toEpochMilli] @AT@ 5041 @LENGTH@ 67


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 3202 @LENGTH@ 151
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 3267 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 3267 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3272 @LENGTH@ 28


INS MethodDeclaration@@public, voidMethodName:JdbcUserDetailsManager, DataSource dataSource,  @TO@ TypeDeclaration@@[public]JdbcUserDetailsManager, JdbcDaoImpl[UserDetailsManager, GroupManager] @AT@ 7054 @LENGTH@ 86
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:JdbcUserDetailsManager, DataSource dataSource,  @AT@ 7054 @LENGTH@ 6
---INS SimpleName@@MethodName:JdbcUserDetailsManager @TO@ MethodDeclaration@@public, voidMethodName:JdbcUserDetailsManager, DataSource dataSource,  @AT@ 7061 @LENGTH@ 22
---INS SingleVariableDeclaration@@DataSource dataSource @TO@ MethodDeclaration@@public, voidMethodName:JdbcUserDetailsManager, DataSource dataSource,  @AT@ 7084 @LENGTH@ 21
------INS SimpleType@@DataSource @TO@ SingleVariableDeclaration@@DataSource dataSource @AT@ 7084 @LENGTH@ 10
------INS SimpleName@@dataSource @TO@ SingleVariableDeclaration@@DataSource dataSource @AT@ 7095 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:setDataSource(dataSource) @TO@ MethodDeclaration@@public, voidMethodName:JdbcUserDetailsManager, DataSource dataSource,  @AT@ 7111 @LENGTH@ 26
------INS MethodInvocation@@setDataSource(dataSource) @TO@ ExpressionStatement@@MethodInvocation:setDataSource(dataSource) @AT@ 7111 @LENGTH@ 25
---------INS SimpleName@@MethodName:setDataSource:[dataSource] @TO@ MethodInvocation@@setDataSource(dataSource) @AT@ 7111 @LENGTH@ 25
------------INS SimpleName@@dataSource @TO@ SimpleName@@MethodName:setDataSource:[dataSource] @AT@ 7125 @LENGTH@ 10


UPD SwitchStatement@@switch (type) {case AFTER:case GREATER_THAN:  return criteria.gt(parameters.next());case GREATER_THAN_EQUAL:return criteria.gte(parameters.next());case BEFORE:case LESS_THAN:return criteria.lt(parameters.next());case LESS_THAN_EQUAL:return criteria.lte(parameters.next());case BETWEEN:return criteria.gt(parameters.next()).lt(parameters.next());case IS_NOT_NULL:return criteria.ne(null);case IS_NULL:return criteria.is(null);case NOT_IN:return criteria.nin(nextAsArray(parameters));case IN:return criteria.in(nextAsArray(parameters));case LIKE:case STARTING_WITH:case ENDING_WITH:case CONTAINING:return createContainingCriteria(part,property,criteria,parameters);case NOT_LIKE:return createContainingCriteria(part,property,criteria.not(),parameters);case NOT_CONTAINING:return createContainingCriteria(part,property,criteria.not(),parameters);case REGEX:return criteria.regex(parameters.next().toString());case EXISTS:return criteria.exists((Boolean)parameters.next());case TRUE:return criteria.is(true);case FALSE:return criteria.is(false);case NEAR:Range<Distance> range=accessor.getDistanceRange();Optional<Distance> distance=range.getUpperBound().getValue();Optional<Distance> minDistance=range.getLowerBound().getValue();Point point=accessor.getGeoNearLocation();Point pointToUse=point == null ? nextAs(parameters,Point.class) : point;boolean isSpherical=isSpherical(property);return distance.map(it -> {if (isSpherical || !Metrics.NEUTRAL.equals(it.getMetric())) {criteria.nearSphere(pointToUse);} else {criteria.near(pointToUse);}criteria.maxDistance(it.getNormalizedValue());minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));return criteria;}).orElseGet(() -> isSpherical ? criteria.nearSphere(pointToUse) : criteria.near(pointToUse));case WITHIN:Object parameter=parameters.next();return criteria.within((Shape)parameter);case SIMPLE_PROPERTY:return isSimpleComparisionPossible(part) ? criteria.is(parameters.next()) : createLikeRegexCriteriaOrThrow(part,property,criteria,parameters,false);case NEGATING_SIMPLE_PROPERTY:return isSimpleComparisionPossible(part) ? criteria.ne(parameters.next()) : createLikeRegexCriteriaOrThrow(part,property,criteria,parameters,true);default :throw new IllegalArgumentException("Unsupported keyword!");} @TO@ switch (type) {case AFTER:case GREATER_THAN:  return criteria.gt(parameters.next());case GREATER_THAN_EQUAL:return criteria.gte(parameters.next());case BEFORE:case LESS_THAN:return criteria.lt(parameters.next());case LESS_THAN_EQUAL:return criteria.lte(parameters.next());case BETWEEN:return criteria.gt(parameters.next()).lt(parameters.next());case IS_NOT_NULL:return criteria.ne(null);case IS_NULL:return criteria.is(null);case NOT_IN:return criteria.nin(nextAsArray(parameters));case IN:return criteria.in(nextAsArray(parameters));case LIKE:case STARTING_WITH:case ENDING_WITH:case CONTAINING:return createContainingCriteria(part,property,criteria,parameters);case NOT_LIKE:return createContainingCriteria(part,property,criteria.not(),parameters);case NOT_CONTAINING:return createContainingCriteria(part,property,criteria.not(),parameters);case REGEX:Object param=parameters.next();return param instanceof Pattern ? criteria.regex((Pattern)param) : criteria.regex(param.toString());case EXISTS:return criteria.exists((Boolean)parameters.next());case TRUE:return criteria.is(true);case FALSE:return criteria.is(false);case NEAR:Range<Distance> range=accessor.getDistanceRange();Optional<Distance> distance=range.getUpperBound().getValue();Optional<Distance> minDistance=range.getLowerBound().getValue();Point point=accessor.getGeoNearLocation();Point pointToUse=point == null ? nextAs(parameters,Point.class) : point;boolean isSpherical=isSpherical(property);return distance.map(it -> {if (isSpherical || !Metrics.NEUTRAL.equals(it.getMetric())) {criteria.nearSphere(pointToUse);} else {criteria.near(pointToUse);}criteria.maxDistance(it.getNormalizedValue());minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));return criteria;}).orElseGet(() -> isSpherical ? criteria.nearSphere(pointToUse) : criteria.near(pointToUse));case WITHIN:Object parameter=parameters.next();return criteria.within((Shape)parameter);case SIMPLE_PROPERTY:return isSimpleComparisionPossible(part) ? criteria.is(parameters.next()) : createLikeRegexCriteriaOrThrow(part,property,criteria,parameters,false);case NEGATING_SIMPLE_PROPERTY:return isSimpleComparisionPossible(part) ? criteria.ne(parameters.next()) : createLikeRegexCriteriaOrThrow(part,property,criteria,parameters,true);default :throw new IllegalArgumentException("Unsupported keyword!");} @AT@ 6299 @LENGTH@ 2631
---UPD ReturnStatement@@MethodInvocation:criteria.regex(parameters.next().toString()) @TO@ ConditionalExpression:param instanceof Pattern ? criteria.regex((Pattern)param) : criteria.regex(param.toString()) @AT@ 7297 @LENGTH@ 52
------DEL MethodInvocation@@criteria.regex(parameters.next().toString()) @AT@ 7304 @LENGTH@ 44
------INS ConditionalExpression@@param instanceof Pattern ? criteria.regex((Pattern)param) : criteria.regex(param.toString()) @TO@ ReturnStatement@@MethodInvocation:criteria.regex(parameters.next().toString()) @AT@ 7375 @LENGTH@ 93
---------INS InstanceofExpression@@param instanceof Pattern @TO@ ConditionalExpression@@param instanceof Pattern ? criteria.regex((Pattern)param) : criteria.regex(param.toString()) @AT@ 7375 @LENGTH@ 24
------------INS SimpleName@@param @TO@ InstanceofExpression@@param instanceof Pattern @AT@ 7375 @LENGTH@ 5
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@param instanceof Pattern @AT@ 7381 @LENGTH@ 10
------------INS SimpleType@@Pattern @TO@ InstanceofExpression@@param instanceof Pattern @AT@ 7392 @LENGTH@ 7
---------INS MethodInvocation@@criteria.regex((Pattern)param) @TO@ ConditionalExpression@@param instanceof Pattern ? criteria.regex((Pattern)param) : criteria.regex(param.toString()) @AT@ 7402 @LENGTH@ 31
------------INS SimpleName@@Name:criteria @TO@ MethodInvocation@@criteria.regex((Pattern)param) @AT@ 7402 @LENGTH@ 8
------------INS SimpleName@@MethodName:regex:[(Pattern)param] @TO@ MethodInvocation@@criteria.regex((Pattern)param) @AT@ 7411 @LENGTH@ 22
---------------INS CastExpression@@(Pattern)param @TO@ SimpleName@@MethodName:regex:[(Pattern)param] @AT@ 7417 @LENGTH@ 15
------------------INS SimpleType@@Pattern @TO@ CastExpression@@(Pattern)param @AT@ 7418 @LENGTH@ 7
------------------INS SimpleName@@param @TO@ CastExpression@@(Pattern)param @AT@ 7427 @LENGTH@ 5
---------INS MethodInvocation@@criteria.regex(param.toString()) @TO@ ConditionalExpression@@param instanceof Pattern ? criteria.regex((Pattern)param) : criteria.regex(param.toString()) @AT@ 7436 @LENGTH@ 32
------------MOV SimpleName@@Name:criteria @TO@ MethodInvocation@@criteria.regex(param.toString()) @AT@ 7304 @LENGTH@ 8
------------MOV SimpleName@@MethodName:regex:[parameters.next().toString()] @TO@ MethodInvocation@@criteria.regex(param.toString()) @AT@ 7313 @LENGTH@ 35
---------------UPD MethodInvocation@@parameters.next().toString() @TO@ param.toString() @AT@ 7319 @LENGTH@ 28
------------------DEL MethodInvocation@@MethodName:next:[] @AT@ 7319 @LENGTH@ 17
------------------UPD SimpleName@@Name:parameters @TO@ Name:param @AT@ 7319 @LENGTH@ 10
---INS VariableDeclarationStatement@@Object param=parameters.next(); @TO@ SwitchStatement@@switch (type) {case AFTER:case GREATER_THAN:  return criteria.gt(parameters.next());case GREATER_THAN_EQUAL:return criteria.gte(parameters.next());case BEFORE:case LESS_THAN:return criteria.lt(parameters.next());case LESS_THAN_EQUAL:return criteria.lte(parameters.next());case BETWEEN:return criteria.gt(parameters.next()).lt(parameters.next());case IS_NOT_NULL:return criteria.ne(null);case IS_NULL:return criteria.is(null);case NOT_IN:return criteria.nin(nextAsArray(parameters));case IN:return criteria.in(nextAsArray(parameters));case LIKE:case STARTING_WITH:case ENDING_WITH:case CONTAINING:return createContainingCriteria(part,property,criteria,parameters);case NOT_LIKE:return createContainingCriteria(part,property,criteria.not(),parameters);case NOT_CONTAINING:return createContainingCriteria(part,property,criteria.not(),parameters);case REGEX:return criteria.regex(parameters.next().toString());case EXISTS:return criteria.exists((Boolean)parameters.next());case TRUE:return criteria.is(true);case FALSE:return criteria.is(false);case NEAR:Range<Distance> range=accessor.getDistanceRange();Optional<Distance> distance=range.getUpperBound().getValue();Optional<Distance> minDistance=range.getLowerBound().getValue();Point point=accessor.getGeoNearLocation();Point pointToUse=point == null ? nextAs(parameters,Point.class) : point;boolean isSpherical=isSpherical(property);return distance.map(it -> {if (isSpherical || !Metrics.NEUTRAL.equals(it.getMetric())) {criteria.nearSphere(pointToUse);} else {criteria.near(pointToUse);}criteria.maxDistance(it.getNormalizedValue());minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));return criteria;}).orElseGet(() -> isSpherical ? criteria.nearSphere(pointToUse) : criteria.near(pointToUse));case WITHIN:Object parameter=parameters.next();return criteria.within((Shape)parameter);case SIMPLE_PROPERTY:return isSimpleComparisionPossible(part) ? criteria.is(parameters.next()) : createLikeRegexCriteriaOrThrow(part,property,criteria,parameters,false);case NEGATING_SIMPLE_PROPERTY:return isSimpleComparisionPossible(part) ? criteria.ne(parameters.next()) : createLikeRegexCriteriaOrThrow(part,property,criteria,parameters,true);default :throw new IllegalArgumentException("Unsupported keyword!");} @AT@ 7330 @LENGTH@ 33
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object param=parameters.next(); @AT@ 7330 @LENGTH@ 6
------INS VariableDeclarationFragment@@param=parameters.next() @TO@ VariableDeclarationStatement@@Object param=parameters.next(); @AT@ 7337 @LENGTH@ 25
---------INS SimpleName@@param @TO@ VariableDeclarationFragment@@param=parameters.next() @AT@ 7337 @LENGTH@ 5
---------INS MethodInvocation@@parameters.next() @TO@ VariableDeclarationFragment@@param=parameters.next() @AT@ 7345 @LENGTH@ 17
------------INS SimpleName@@Name:parameters @TO@ MethodInvocation@@parameters.next() @AT@ 7345 @LENGTH@ 10
------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@parameters.next() @AT@ 7356 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:mapReduceWithOutputDatabase,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:reactive-infrastructure.xml"), public]ReactiveMapReduceTests,  @AT@ 5096 @LENGTH@ 552
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:mapReduceWithOutputDatabase,  @AT@ 5096 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:mapReduceWithOutputDatabase,  @AT@ 5103 @LENGTH@ 4
---INS SimpleName@@MethodName:mapReduceWithOutputDatabase @TO@ MethodDeclaration@@public, void, MethodName:mapReduceWithOutputDatabase,  @AT@ 5108 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:createMapReduceData() @TO@ MethodDeclaration@@public, void, MethodName:mapReduceWithOutputDatabase,  @AT@ 5143 @LENGTH@ 22
------INS MethodInvocation@@MethodName:createMapReduceData:[] @TO@ ExpressionStatement@@MethodInvocation:createMapReduceData() @AT@ 5143 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:StepVerifier.create(template.mapReduce(new Query(),ValueObject.class,"jmr1",ValueObject.class,mapFunction,reduceFunction,MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out"))).expectNextCount(4).verifyComplete() @TO@ MethodDeclaration@@public, void, MethodName:mapReduceWithOutputDatabase,  @AT@ 5169 @LENGTH@ 276
------INS MethodInvocation@@StepVerifier.create(template.mapReduce(new Query(),ValueObject.class,"jmr1",ValueObject.class,mapFunction,reduceFunction,MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out"))).expectNextCount(4).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:StepVerifier.create(template.mapReduce(new Query(),ValueObject.class,"jmr1",ValueObject.class,mapFunction,reduceFunction,MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out"))).expectNextCount(4).verifyComplete() @AT@ 5169 @LENGTH@ 275
---------INS MethodInvocation@@MethodName:expectNextCount:[4] @TO@ MethodInvocation@@StepVerifier.create(template.mapReduce(new Query(),ValueObject.class,"jmr1",ValueObject.class,mapFunction,reduceFunction,MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out"))).expectNextCount(4).verifyComplete() @AT@ 5169 @LENGTH@ 258
------------INS NumberLiteral@@4 @TO@ MethodInvocation@@MethodName:expectNextCount:[4] @AT@ 5425 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:create:[template.mapReduce(new Query(),ValueObject.class,"jmr1",ValueObject.class,mapFunction,reduceFunction,MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out"))] @TO@ MethodInvocation@@StepVerifier.create(template.mapReduce(new Query(),ValueObject.class,"jmr1",ValueObject.class,mapFunction,reduceFunction,MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out"))).expectNextCount(4).verifyComplete() @AT@ 5169 @LENGTH@ 234
------------INS MethodInvocation@@template.mapReduce(new Query(),ValueObject.class,"jmr1",ValueObject.class,mapFunction,reduceFunction,MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out")) @TO@ MethodInvocation@@MethodName:create:[template.mapReduce(new Query(),ValueObject.class,"jmr1",ValueObject.class,mapFunction,reduceFunction,MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out"))] @AT@ 5194 @LENGTH@ 208
---------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.mapReduce(new Query(),ValueObject.class,"jmr1",ValueObject.class,mapFunction,reduceFunction,MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out")) @AT@ 5194 @LENGTH@ 8
---------------INS SimpleName@@MethodName:mapReduce:[new Query(), ValueObject.class, "jmr1", ValueObject.class, mapFunction, reduceFunction, MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out")] @TO@ MethodInvocation@@template.mapReduce(new Query(),ValueObject.class,"jmr1",ValueObject.class,mapFunction,reduceFunction,MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out")) @AT@ 5203 @LENGTH@ 199
------------------INS ClassInstanceCreation@@Query[] @TO@ SimpleName@@MethodName:mapReduce:[new Query(), ValueObject.class, "jmr1", ValueObject.class, mapFunction, reduceFunction, MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out")] @AT@ 5213 @LENGTH@ 11
---------------------INS New@@new @TO@ ClassInstanceCreation@@Query[] @AT@ 5213 @LENGTH@ 3
---------------------INS SimpleType@@Query @TO@ ClassInstanceCreation@@Query[] @AT@ 5217 @LENGTH@ 5
------------------INS TypeLiteral@@ValueObject.class @TO@ SimpleName@@MethodName:mapReduce:[new Query(), ValueObject.class, "jmr1", ValueObject.class, mapFunction, reduceFunction, MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out")] @AT@ 5226 @LENGTH@ 17
------------------INS StringLiteral@@"jmr1" @TO@ SimpleName@@MethodName:mapReduce:[new Query(), ValueObject.class, "jmr1", ValueObject.class, mapFunction, reduceFunction, MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out")] @AT@ 5245 @LENGTH@ 6
------------------INS TypeLiteral@@ValueObject.class @TO@ SimpleName@@MethodName:mapReduce:[new Query(), ValueObject.class, "jmr1", ValueObject.class, mapFunction, reduceFunction, MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out")] @AT@ 5253 @LENGTH@ 17
------------------INS SimpleName@@mapFunction @TO@ SimpleName@@MethodName:mapReduce:[new Query(), ValueObject.class, "jmr1", ValueObject.class, mapFunction, reduceFunction, MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out")] @AT@ 5272 @LENGTH@ 11
------------------INS SimpleName@@reduceFunction @TO@ SimpleName@@MethodName:mapReduce:[new Query(), ValueObject.class, "jmr1", ValueObject.class, mapFunction, reduceFunction, MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out")] @AT@ 5291 @LENGTH@ 14
------------------INS MethodInvocation@@MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out") @TO@ SimpleName@@MethodName:mapReduce:[new Query(), ValueObject.class, "jmr1", ValueObject.class, mapFunction, reduceFunction, MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out")] @AT@ 5307 @LENGTH@ 94
---------------------INS MethodInvocation@@MethodName:outputDatabase:["reactive-jrm1-out-db"] @TO@ MethodInvocation@@MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out") @AT@ 5307 @LENGTH@ 65
------------------------INS StringLiteral@@"reactive-jrm1-out-db" @TO@ MethodInvocation@@MethodName:outputDatabase:["reactive-jrm1-out-db"] @AT@ 5349 @LENGTH@ 22
---------------------INS MethodInvocation@@MethodName:options:[] @TO@ MethodInvocation@@MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out") @AT@ 5307 @LENGTH@ 26
---------------------INS SimpleName@@Name:MapReduceOptions @TO@ MethodInvocation@@MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out") @AT@ 5307 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:outputCollection:["jmr1_out"] @TO@ MethodInvocation@@MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out") @AT@ 5373 @LENGTH@ 28
------------------------INS StringLiteral@@"jmr1_out" @TO@ SimpleName@@MethodName:outputCollection:["jmr1_out"] @AT@ 5390 @LENGTH@ 10
---------INS SimpleName@@Name:StepVerifier @TO@ MethodInvocation@@StepVerifier.create(template.mapReduce(new Query(),ValueObject.class,"jmr1",ValueObject.class,mapFunction,reduceFunction,MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out"))).expectNextCount(4).verifyComplete() @AT@ 5169 @LENGTH@ 12
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@StepVerifier.create(template.mapReduce(new Query(),ValueObject.class,"jmr1",ValueObject.class,mapFunction,reduceFunction,MapReduceOptions.options().outputDatabase("reactive-jrm1-out-db").outputCollection("jmr1_out"))).expectNextCount(4).verifyComplete() @AT@ 5428 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:Flux.from(factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames()).buffer(10).map(list -> list.contains("jmr1_out")).as(StepVerifier::create).expectNext(true).verifyComplete() @TO@ MethodDeclaration@@public, void, MethodName:mapReduceWithOutputDatabase,  @AT@ 5449 @LENGTH@ 196
------INS MethodInvocation@@Flux.from(factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames()).buffer(10).map(list -> list.contains("jmr1_out")).as(StepVerifier::create).expectNext(true).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:Flux.from(factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames()).buffer(10).map(list -> list.contains("jmr1_out")).as(StepVerifier::create).expectNext(true).verifyComplete() @AT@ 5449 @LENGTH@ 195
---------INS MethodInvocation@@MethodName:expectNext:[true] @TO@ MethodInvocation@@Flux.from(factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames()).buffer(10).map(list -> list.contains("jmr1_out")).as(StepVerifier::create).expectNext(true).verifyComplete() @AT@ 5449 @LENGTH@ 178
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:expectNext:[true] @AT@ 5622 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:as:[StepVerifier::create] @TO@ MethodInvocation@@Flux.from(factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames()).buffer(10).map(list -> list.contains("jmr1_out")).as(StepVerifier::create).expectNext(true).verifyComplete() @AT@ 5449 @LENGTH@ 161
---------INS MethodInvocation@@MethodName:map:[list -> list.contains("jmr1_out")] @TO@ MethodInvocation@@Flux.from(factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames()).buffer(10).map(list -> list.contains("jmr1_out")).as(StepVerifier::create).expectNext(true).verifyComplete() @AT@ 5449 @LENGTH@ 136
------------INS LambdaExpression@@list -> list.contains("jmr1_out") @TO@ MethodInvocation@@MethodName:map:[list -> list.contains("jmr1_out")] @AT@ 5551 @LENGTH@ 33
---------------INS VariableDeclarationFragment@@list @TO@ LambdaExpression@@list -> list.contains("jmr1_out") @AT@ 5551 @LENGTH@ 4
------------------INS SimpleName@@list @TO@ VariableDeclarationFragment@@list @AT@ 5551 @LENGTH@ 4
---------------INS MethodInvocation@@list.contains("jmr1_out") @TO@ LambdaExpression@@list -> list.contains("jmr1_out") @AT@ 5559 @LENGTH@ 25
------------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.contains("jmr1_out") @AT@ 5559 @LENGTH@ 4
------------------INS SimpleName@@MethodName:contains:["jmr1_out"] @TO@ MethodInvocation@@list.contains("jmr1_out") @AT@ 5564 @LENGTH@ 20
---------------------INS StringLiteral@@"jmr1_out" @TO@ SimpleName@@MethodName:contains:["jmr1_out"] @AT@ 5573 @LENGTH@ 10
---------INS MethodInvocation@@MethodName:buffer:[10] @TO@ MethodInvocation@@Flux.from(factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames()).buffer(10).map(list -> list.contains("jmr1_out")).as(StepVerifier::create).expectNext(true).verifyComplete() @AT@ 5449 @LENGTH@ 92
------------INS NumberLiteral@@10 @TO@ MethodInvocation@@MethodName:buffer:[10] @AT@ 5538 @LENGTH@ 2
---------INS MethodInvocation@@MethodName:from:[factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames()] @TO@ MethodInvocation@@Flux.from(factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames()).buffer(10).map(list -> list.contains("jmr1_out")).as(StepVerifier::create).expectNext(true).verifyComplete() @AT@ 5449 @LENGTH@ 81
------------INS MethodInvocation@@factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames() @TO@ MethodInvocation@@MethodName:from:[factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames()] @AT@ 5459 @LENGTH@ 70
---------------INS MethodInvocation@@MethodName:getMongoDatabase:["reactive-jrm1-out-db"] @TO@ MethodInvocation@@factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames() @AT@ 5459 @LENGTH@ 48
------------------INS StringLiteral@@"reactive-jrm1-out-db" @TO@ MethodInvocation@@MethodName:getMongoDatabase:["reactive-jrm1-out-db"] @AT@ 5484 @LENGTH@ 22
---------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames() @AT@ 5459 @LENGTH@ 7
---------------INS SimpleName@@MethodName:listCollectionNames:[] @TO@ MethodInvocation@@factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames() @AT@ 5508 @LENGTH@ 21
---------INS SimpleName@@Name:Flux @TO@ MethodInvocation@@Flux.from(factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames()).buffer(10).map(list -> list.contains("jmr1_out")).as(StepVerifier::create).expectNext(true).verifyComplete() @AT@ 5449 @LENGTH@ 4
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@Flux.from(factory.getMongoDatabase("reactive-jrm1-out-db").listCollectionNames()).buffer(10).map(list -> list.contains("jmr1_out")).as(StepVerifier::create).expectNext(true).verifyComplete() @AT@ 5628 @LENGTH@ 16


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(StoreWriteBehindBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(StoreWriteBehindServiceConfigurator::new); @AT@ 5586 @LENGTH@ 96
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(StoreWriteBehindBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(StoreWriteBehindServiceConfigurator::new) @AT@ 5609 @LENGTH@ 72
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[StoreWriteBehindBuilder::new] @TO@ SimpleResourceServiceHandler[StoreWriteBehindServiceConfigurator::new] @AT@ 5619 @LENGTH@ 62


UPD MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext context, ServiceRegistryException,  @TO@ public, void, MethodName:activate, ServiceActivatorContext context,  @AT@ 1735 @LENGTH@ 777
---DEL SimpleType@@ServiceRegistryException @AT@ 1796 @LENGTH@ 24
---DEL TryStatement@@try {  SingletonPolicy policy=(SingletonPolicy)context.getServiceRegistry().getRequiredService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).awaitValue();  InjectedValue<Group> group=new InjectedValue<>();  NodeService service=new NodeService(group);  policy.createSingletonServiceBuilder(SERVICE_NAME,service).build(context.getServiceTarget()).addDependency(ServiceName.parse("org.wildfly.clustering.default-group"),Group.class,group).install();} catch (InterruptedException e) {  throw new ServiceRegistryException(e);} @AT@ 1831 @LENGTH@ 675
------DEL VariableDeclarationStatement@@SingletonPolicy policy=(SingletonPolicy)context.getServiceRegistry().getRequiredService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).awaitValue(); @AT@ 1849 @LENGTH@ 179
------DEL CatchClause@@catch (InterruptedException e) {  throw new ServiceRegistryException(e);} @AT@ 2413 @LENGTH@ 93
---------DEL SingleVariableDeclaration@@InterruptedException e @AT@ 2420 @LENGTH@ 22
------------DEL SimpleType@@InterruptedException @AT@ 2420 @LENGTH@ 20
------------DEL SimpleName@@e @AT@ 2441 @LENGTH@ 1
---------DEL ThrowStatement@@ClassInstanceCreation:new ServiceRegistryException(e) @AT@ 2458 @LENGTH@ 38
------------DEL ClassInstanceCreation@@ServiceRegistryException[e] @AT@ 2464 @LENGTH@ 31
---------------DEL New@@new @AT@ 2464 @LENGTH@ 3
---------------DEL SimpleType@@ServiceRegistryException @AT@ 2468 @LENGTH@ 24
---------------DEL SimpleName@@e @AT@ 2493 @LENGTH@ 1
---INS VariableDeclarationStatement@@ServiceTarget target=context.getServiceTarget(); @TO@ MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext context, ServiceRegistryException,  @AT@ 1877 @LENGTH@ 50
------MOV SimpleType@@SingletonPolicy @TO@ VariableDeclarationStatement@@ServiceTarget target=context.getServiceTarget(); @AT@ 1849 @LENGTH@ 15
------MOV VariableDeclarationFragment@@policy=(SingletonPolicy)context.getServiceRegistry().getRequiredService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).awaitValue() @TO@ VariableDeclarationStatement@@ServiceTarget target=context.getServiceTarget(); @AT@ 1865 @LENGTH@ 162
---------UPD SimpleName@@policy @TO@ target @AT@ 1865 @LENGTH@ 6
---------DEL CastExpression@@(SingletonPolicy)context.getServiceRegistry().getRequiredService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).awaitValue() @AT@ 1874 @LENGTH@ 153
------------DEL SimpleType@@SingletonPolicy @AT@ 1875 @LENGTH@ 15
------------DEL MethodInvocation@@context.getServiceRegistry().getRequiredService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).awaitValue() @AT@ 1892 @LENGTH@ 135
---------------DEL MethodInvocation@@MethodName:getServiceRegistry:[] @AT@ 1892 @LENGTH@ 28
---------INS MethodInvocation@@context.getServiceTarget() @TO@ VariableDeclarationFragment@@policy=(SingletonPolicy)context.getServiceRegistry().getRequiredService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).awaitValue() @AT@ 1900 @LENGTH@ 26
------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceTarget() @AT@ 1892 @LENGTH@ 7
------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceTarget() @AT@ 1892 @LENGTH@ 7
------------MOV SimpleName@@MethodName:awaitValue:[] @TO@ MethodInvocation@@context.getServiceTarget() @AT@ 2015 @LENGTH@ 12
---INS VariableDeclarationStatement@@SingletonPolicy policy=new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get(); @TO@ MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext context, ServiceRegistryException,  @AT@ 1936 @LENGTH@ 211
------INS SimpleType@@SingletonPolicy @TO@ VariableDeclarationStatement@@SingletonPolicy policy=new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get(); @AT@ 1936 @LENGTH@ 15
------INS VariableDeclarationFragment@@policy=new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get() @TO@ VariableDeclarationStatement@@SingletonPolicy policy=new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get(); @AT@ 1952 @LENGTH@ 194
---------MOV MethodInvocation@@MethodName:getRequiredService:[ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @TO@ VariableDeclarationFragment@@policy=new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get() @AT@ 1892 @LENGTH@ 122
------------INS MethodInvocation@@MethodName:timeout:[Duration.ofSeconds(30)] @TO@ MethodInvocation@@MethodName:getRequiredService:[ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 1961 @LENGTH@ 179
---------------INS MethodInvocation@@Duration.ofSeconds(30) @TO@ MethodInvocation@@MethodName:timeout:[Duration.ofSeconds(30)] @AT@ 2117 @LENGTH@ 22
------------------INS SimpleName@@Name:Duration @TO@ MethodInvocation@@Duration.ofSeconds(30) @AT@ 2117 @LENGTH@ 8
------------------INS SimpleName@@MethodName:ofSeconds:[30] @TO@ MethodInvocation@@Duration.ofSeconds(30) @AT@ 2126 @LENGTH@ 13
---------------------INS NumberLiteral@@30 @TO@ SimpleName@@MethodName:ofSeconds:[30] @AT@ 2136 @LENGTH@ 2
------------INS ClassInstanceCreation@@ActiveServiceSupplier<SingletonPolicy>[context.getServiceRegistry(), ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @TO@ MethodInvocation@@MethodName:getRequiredService:[ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 1961 @LENGTH@ 147
---------------MOV MethodInvocation@@ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName()) @TO@ ClassInstanceCreation@@ActiveServiceSupplier<SingletonPolicy>[context.getServiceRegistry(), ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 1940 @LENGTH@ 73
---------------MOV MethodInvocation@@ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName()) @TO@ ClassInstanceCreation@@ActiveServiceSupplier<SingletonPolicy>[context.getServiceRegistry(), ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 1940 @LENGTH@ 73
---------------INS New@@new @TO@ ClassInstanceCreation@@ActiveServiceSupplier<SingletonPolicy>[context.getServiceRegistry(), ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 1961 @LENGTH@ 3
---------------INS ParameterizedType@@ActiveServiceSupplier<SingletonPolicy> @TO@ ClassInstanceCreation@@ActiveServiceSupplier<SingletonPolicy>[context.getServiceRegistry(), ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 1965 @LENGTH@ 38
------------------INS SimpleType@@ActiveServiceSupplier @TO@ ParameterizedType@@ActiveServiceSupplier<SingletonPolicy> @AT@ 1965 @LENGTH@ 21
------------------INS SimpleType@@SingletonPolicy @TO@ ParameterizedType@@ActiveServiceSupplier<SingletonPolicy> @AT@ 1987 @LENGTH@ 15
---------------INS MethodInvocation@@context.getServiceRegistry() @TO@ ClassInstanceCreation@@ActiveServiceSupplier<SingletonPolicy>[context.getServiceRegistry(), ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 2004 @LENGTH@ 28
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry() @AT@ 2004 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getServiceRegistry:[] @TO@ MethodInvocation@@context.getServiceRegistry() @AT@ 2012 @LENGTH@ 20
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@MethodName:getRequiredService:[ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 2141 @LENGTH@ 5
---------INS SimpleName@@policy @TO@ VariableDeclarationFragment@@policy=new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get() @AT@ 1952 @LENGTH@ 6
---MOV VariableDeclarationStatement@@InjectedValue<Group> group=new InjectedValue<>(); @TO@ MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext context, ServiceRegistryException,  @AT@ 2041 @LENGTH@ 51
---MOV VariableDeclarationStatement@@NodeService service=new NodeService(group); @TO@ MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext context, ServiceRegistryException,  @AT@ 2105 @LENGTH@ 45
---MOV ExpressionStatement@@MethodInvocation:policy.createSingletonServiceBuilder(SERVICE_NAME,service).build(context.getServiceTarget()).addDependency(ServiceName.parse("org.wildfly.clustering.default-group"),Group.class,group).install() @TO@ MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext context, ServiceRegistryException,  @AT@ 2163 @LENGTH@ 239
------UPD MethodInvocation@@policy.createSingletonServiceBuilder(SERVICE_NAME,service).build(context.getServiceTarget()).addDependency(ServiceName.parse("org.wildfly.clustering.default-group"),Group.class,group).install() @TO@ policy.createSingletonServiceBuilder(SERVICE_NAME,service).build(target).addDependency(ServiceName.parse("org.wildfly.clustering.default-group"),Group.class,group).install() @AT@ 2163 @LENGTH@ 238
---------UPD MethodInvocation@@MethodName:build:[context.getServiceTarget()] @TO@ MethodName:build:[target] @AT@ 2163 @LENGTH@ 93
------------DEL MethodInvocation@@context.getServiceTarget() @AT@ 2229 @LENGTH@ 26
---------------DEL SimpleName@@Name:context @AT@ 2229 @LENGTH@ 7
------------MOV SimpleName@@MethodName:getServiceTarget:[] @TO@ MethodInvocation@@MethodName:build:[context.getServiceTarget()] @AT@ 2237 @LENGTH@ 18


UPD Block@@ThenBody:{  if ("file:".equals(scheme)) {    href=FileUtil.compactPath(href);  } else   if ("classpath:".equals(scheme)) {    href=FileUtil.compactPath(href,'/');  }  LOG.debug("Resolving URI from {}: {}",scheme,href);  InputStream is;  try {    is=ResourceHelper.resolveMandatoryResourceAsInputStream(context,href);  } catch (  IOException e) {    throw new TransformerException(e);  }  return new StreamSource(is,href);} @TO@ ThenBody:{  String hrefPath=StringHelper.after(href,scheme);  if ("file:".equals(scheme)) {    href=scheme + FileUtil.compactPath(hrefPath);  } else   if ("classpath:".equals(scheme)) {    href=scheme + FileUtil.compactPath(hrefPath,'/');  }  LOG.debug("Resolving URI from {}: {}",scheme,href);  InputStream is;  try {    is=ResourceHelper.resolveMandatoryResourceAsInputStream(context,href);  } catch (  IOException e) {    throw new TransformerException(e);  }  return new StreamSource(is,href);} @AT@ 2914 @LENGTH@ 790
---UPD IfStatement@@if ("file:".equals(scheme)) {  href=FileUtil.compactPath(href);} else if ("classpath:".equals(scheme)) {  href=FileUtil.compactPath(href,'/');} @TO@ if ("file:".equals(scheme)) {  href=scheme + FileUtil.compactPath(hrefPath);} else if ("classpath:".equals(scheme)) {  href=scheme + FileUtil.compactPath(hrefPath,'/');} @AT@ 3037 @LENGTH@ 304
------UPD Block@@ThenBody:{  href=FileUtil.compactPath(href);} @TO@ ThenBody:{  href=scheme + FileUtil.compactPath(hrefPath);} @AT@ 3065 @LENGTH@ 120
---------UPD ExpressionStatement@@Assignment:href=FileUtil.compactPath(href) @TO@ Assignment:href=scheme + FileUtil.compactPath(hrefPath) @AT@ 3137 @LENGTH@ 34
------------UPD Assignment@@href=FileUtil.compactPath(href) @TO@ href=scheme + FileUtil.compactPath(hrefPath) @AT@ 3137 @LENGTH@ 33
---------------DEL MethodInvocation@@FileUtil.compactPath(href) @AT@ 3144 @LENGTH@ 26
---------------INS InfixExpression@@scheme + FileUtil.compactPath(hrefPath) @TO@ Assignment@@href=FileUtil.compactPath(href) @AT@ 3252 @LENGTH@ 39
------------------INS SimpleName@@scheme @TO@ InfixExpression@@scheme + FileUtil.compactPath(hrefPath) @AT@ 3252 @LENGTH@ 6
------------------INS Operator@@+ @TO@ InfixExpression@@scheme + FileUtil.compactPath(hrefPath) @AT@ 3258 @LENGTH@ 1
------------------INS MethodInvocation@@FileUtil.compactPath(hrefPath) @TO@ InfixExpression@@scheme + FileUtil.compactPath(hrefPath) @AT@ 3261 @LENGTH@ 30
---------------------MOV SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath(hrefPath) @AT@ 3144 @LENGTH@ 8
---------------------MOV SimpleName@@MethodName:compactPath:[href] @TO@ MethodInvocation@@FileUtil.compactPath(hrefPath) @AT@ 3153 @LENGTH@ 17
------------------------UPD SimpleName@@href @TO@ hrefPath @AT@ 3165 @LENGTH@ 4
------UPD Block@@ElseBody:if ("classpath:".equals(scheme)) {  href=FileUtil.compactPath(href,'/');} @TO@ ElseBody:if ("classpath:".equals(scheme)) {  href=scheme + FileUtil.compactPath(hrefPath,'/');} @AT@ 3191 @LENGTH@ 150
---------UPD IfStatement@@if ("classpath:".equals(scheme)) {  href=FileUtil.compactPath(href,'/');} @TO@ if ("classpath:".equals(scheme)) {  href=scheme + FileUtil.compactPath(hrefPath,'/');} @AT@ 3191 @LENGTH@ 150
------------UPD Block@@ThenBody:{  href=FileUtil.compactPath(href,'/');} @TO@ ThenBody:{  href=scheme + FileUtil.compactPath(hrefPath,'/');} @AT@ 3224 @LENGTH@ 117
---------------UPD ExpressionStatement@@Assignment:href=FileUtil.compactPath(href,'/') @TO@ Assignment:href=scheme + FileUtil.compactPath(hrefPath,'/') @AT@ 3288 @LENGTH@ 39
------------------UPD Assignment@@href=FileUtil.compactPath(href,'/') @TO@ href=scheme + FileUtil.compactPath(hrefPath,'/') @AT@ 3288 @LENGTH@ 38
---------------------DEL MethodInvocation@@FileUtil.compactPath(href,'/') @AT@ 3295 @LENGTH@ 31
---------------------INS InfixExpression@@scheme + FileUtil.compactPath(hrefPath,'/') @TO@ Assignment@@href=FileUtil.compactPath(href,'/') @AT@ 3416 @LENGTH@ 44
------------------------INS SimpleName@@scheme @TO@ InfixExpression@@scheme + FileUtil.compactPath(hrefPath,'/') @AT@ 3416 @LENGTH@ 6
------------------------INS Operator@@+ @TO@ InfixExpression@@scheme + FileUtil.compactPath(hrefPath,'/') @AT@ 3422 @LENGTH@ 1
------------------------INS MethodInvocation@@FileUtil.compactPath(hrefPath,'/') @TO@ InfixExpression@@scheme + FileUtil.compactPath(hrefPath,'/') @AT@ 3425 @LENGTH@ 35
---------------------------MOV SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath(hrefPath,'/') @AT@ 3295 @LENGTH@ 8
---------------------------MOV SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath(hrefPath,'/') @AT@ 3295 @LENGTH@ 8
---------------------------MOV SimpleName@@MethodName:compactPath:[href, '/'] @TO@ MethodInvocation@@FileUtil.compactPath(hrefPath,'/') @AT@ 3304 @LENGTH@ 22
------------------------------UPD SimpleName@@href @TO@ hrefPath @AT@ 3316 @LENGTH@ 4
---------------------------MOV SimpleName@@MethodName:compactPath:[href, '/'] @TO@ MethodInvocation@@FileUtil.compactPath(hrefPath,'/') @AT@ 3304 @LENGTH@ 22
------------------------------UPD SimpleName@@href @TO@ hrefPath @AT@ 3316 @LENGTH@ 4
---INS VariableDeclarationStatement@@String hrefPath=StringHelper.after(href,scheme); @TO@ Block@@ThenBody:{  if ("file:".equals(scheme)) {    href=FileUtil.compactPath(href);  } else   if ("classpath:".equals(scheme)) {    href=FileUtil.compactPath(href,'/');  }  LOG.debug("Resolving URI from {}: {}",scheme,href);  InputStream is;  try {    is=ResourceHelper.resolveMandatoryResourceAsInputStream(context,href);  } catch (  IOException e) {    throw new TransformerException(e);  }  return new StreamSource(is,href);} @AT@ 3081 @LENGTH@ 51
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String hrefPath=StringHelper.after(href,scheme); @AT@ 3081 @LENGTH@ 6
------INS VariableDeclarationFragment@@hrefPath=StringHelper.after(href,scheme) @TO@ VariableDeclarationStatement@@String hrefPath=StringHelper.after(href,scheme); @AT@ 3088 @LENGTH@ 43
---------INS SimpleName@@hrefPath @TO@ VariableDeclarationFragment@@hrefPath=StringHelper.after(href,scheme) @AT@ 3088 @LENGTH@ 8
---------INS MethodInvocation@@StringHelper.after(href,scheme) @TO@ VariableDeclarationFragment@@hrefPath=StringHelper.after(href,scheme) @AT@ 3099 @LENGTH@ 32
------------INS SimpleName@@Name:StringHelper @TO@ MethodInvocation@@StringHelper.after(href,scheme) @AT@ 3099 @LENGTH@ 12
------------INS SimpleName@@MethodName:after:[href, scheme] @TO@ MethodInvocation@@StringHelper.after(href,scheme) @AT@ 3112 @LENGTH@ 19
---------------INS SimpleName@@href @TO@ SimpleName@@MethodName:after:[href, scheme] @AT@ 3118 @LENGTH@ 4
---------------INS SimpleName@@scheme @TO@ SimpleName@@MethodName:after:[href, scheme] @AT@ 3124 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:constructorWhenClientRegistrationMapIsNullThenIllegalArgumentException,  @TO@ TypeDeclaration@@[public]InMemoryReactiveClientRegistrationRepositoryTests,  @AT@ 2461 @LENGTH@ 288
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenClientRegistrationMapIsNullThenIllegalArgumentException,  @AT@ 2461 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenClientRegistrationMapIsNullThenIllegalArgumentException,  @AT@ 2468 @LENGTH@ 4
---INS SimpleName@@MethodName:constructorWhenClientRegistrationMapIsNullThenIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenClientRegistrationMapIsNullThenIllegalArgumentException,  @AT@ 2473 @LENGTH@ 70
---INS VariableDeclarationStatement@@Map<String,ClientRegistration> registrations=null; @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenClientRegistrationMapIsNullThenIllegalArgumentException,  @AT@ 2550 @LENGTH@ 53
------INS ParameterizedType@@Map<String,ClientRegistration> @TO@ VariableDeclarationStatement@@Map<String,ClientRegistration> registrations=null; @AT@ 2550 @LENGTH@ 31
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,ClientRegistration> @AT@ 2550 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,ClientRegistration> @AT@ 2554 @LENGTH@ 6
---------INS SimpleType@@ClientRegistration @TO@ ParameterizedType@@Map<String,ClientRegistration> @AT@ 2562 @LENGTH@ 18
------INS VariableDeclarationFragment@@registrations=null @TO@ VariableDeclarationStatement@@Map<String,ClientRegistration> registrations=null; @AT@ 2582 @LENGTH@ 20
---------INS SimpleName@@registrations @TO@ VariableDeclarationFragment@@registrations=null @AT@ 2582 @LENGTH@ 13
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@registrations=null @AT@ 2598 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> new InMemoryReactiveClientRegistrationRepository(registrations)).isInstanceOf(IllegalArgumentException.class) @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenClientRegistrationMapIsNullThenIllegalArgumentException,  @AT@ 2606 @LENGTH@ 140
------INS MethodInvocation@@assertThatThrownBy(() -> new InMemoryReactiveClientRegistrationRepository(registrations)).isInstanceOf(IllegalArgumentException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> new InMemoryReactiveClientRegistrationRepository(registrations)).isInstanceOf(IllegalArgumentException.class) @AT@ 2606 @LENGTH@ 139
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> new InMemoryReactiveClientRegistrationRepository(registrations)] @TO@ MethodInvocation@@assertThatThrownBy(() -> new InMemoryReactiveClientRegistrationRepository(registrations)).isInstanceOf(IllegalArgumentException.class) @AT@ 2606 @LENGTH@ 89
------------INS LambdaExpression@@() -> new InMemoryReactiveClientRegistrationRepository(registrations) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> new InMemoryReactiveClientRegistrationRepository(registrations)] @AT@ 2625 @LENGTH@ 69
---------------INS ClassInstanceCreation@@InMemoryReactiveClientRegistrationRepository[registrations] @TO@ LambdaExpression@@() -> new InMemoryReactiveClientRegistrationRepository(registrations) @AT@ 2631 @LENGTH@ 63
------------------INS New@@new @TO@ ClassInstanceCreation@@InMemoryReactiveClientRegistrationRepository[registrations] @AT@ 2631 @LENGTH@ 3
------------------INS SimpleType@@InMemoryReactiveClientRegistrationRepository @TO@ ClassInstanceCreation@@InMemoryReactiveClientRegistrationRepository[registrations] @AT@ 2635 @LENGTH@ 44
------------------INS SimpleName@@registrations @TO@ ClassInstanceCreation@@InMemoryReactiveClientRegistrationRepository[registrations] @AT@ 2680 @LENGTH@ 13
---------INS SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> new InMemoryReactiveClientRegistrationRepository(registrations)).isInstanceOf(IllegalArgumentException.class) @AT@ 2701 @LENGTH@ 44
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 2714 @LENGTH@ 30


INS MethodDeclaration@@Person, MethodName:findWithSliceInProjection, String id, int skip, int limit,  @TO@ TypeDeclaration@@[private]SampleRepository, [Repository<Person,Long>] @AT@ 32564 @LENGTH@ 58
---INS SimpleType@@Person @TO@ MethodDeclaration@@Person, MethodName:findWithSliceInProjection, String id, int skip, int limit,  @AT@ 32557 @LENGTH@ 6
---INS SimpleName@@MethodName:findWithSliceInProjection @TO@ MethodDeclaration@@Person, MethodName:findWithSliceInProjection, String id, int skip, int limit,  @AT@ 32564 @LENGTH@ 25
---INS SingleVariableDeclaration@@String id @TO@ MethodDeclaration@@Person, MethodName:findWithSliceInProjection, String id, int skip, int limit,  @AT@ 32590 @LENGTH@ 9
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String id @AT@ 32590 @LENGTH@ 6
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@String id @AT@ 32597 @LENGTH@ 2
---INS SingleVariableDeclaration@@int skip @TO@ MethodDeclaration@@Person, MethodName:findWithSliceInProjection, String id, int skip, int limit,  @AT@ 32601 @LENGTH@ 8
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int skip @AT@ 32601 @LENGTH@ 3
------INS SimpleName@@skip @TO@ SingleVariableDeclaration@@int skip @AT@ 32605 @LENGTH@ 4
---INS SingleVariableDeclaration@@int limit @TO@ MethodDeclaration@@Person, MethodName:findWithSliceInProjection, String id, int skip, int limit,  @AT@ 32611 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int limit @AT@ 32611 @LENGTH@ 3
------INS SimpleName@@limit @TO@ SingleVariableDeclaration@@int limit @AT@ 32615 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("direct:start","Hello World",WeatherConstants.WEATHER_LOCATION,"current") @TO@ MethodInvocation:template.sendBodyAndHeader("direct:start","Hello World",WeatherConstants.WEATHER_LOCATION,"Rome,Italy") @AT@ 2721 @LENGTH@ 104
---UPD MethodInvocation@@template.sendBodyAndHeader("direct:start","Hello World",WeatherConstants.WEATHER_LOCATION,"current") @TO@ template.sendBodyAndHeader("direct:start","Hello World",WeatherConstants.WEATHER_LOCATION,"Rome,Italy") @AT@ 2721 @LENGTH@ 103
------UPD SimpleName@@MethodName:sendBodyAndHeader:["direct:start", "Hello World", WeatherConstants.WEATHER_LOCATION, "current"] @TO@ MethodName:sendBodyAndHeader:["direct:start", "Hello World", WeatherConstants.WEATHER_LOCATION, "Rome,Italy"] @AT@ 2730 @LENGTH@ 94
---------UPD StringLiteral@@"current" @TO@ "Rome,Italy" @AT@ 2814 @LENGTH@ 9


UPD TypeDeclaration@@[public]GrpcProducer, DefaultProducer[AsyncProcessor] @TO@ [public]GrpcProducer, DefaultAsyncProducer @AT@ 2093 @LENGTH@ 6660
---UPD SimpleType@@DefaultProducer @TO@ DefaultAsyncProducer @AT@ 2127 @LENGTH@ 15
---DEL SimpleType@@AsyncProcessor @AT@ 2154 @LENGTH@ 14


UPD MethodDeclaration@@public, void, MethodName:executeListener, Channel channel, Message messageIn, Exception,  @TO@ public, void, MethodName:executeListener, Channel channel, Message messageIn,  @AT@ 23560 @LENGTH@ 134
---DEL SimpleType@@Exception @AT@ 23631 @LENGTH@ 9


DEL MethodDeclaration@@protected, HV, MethodName:deserializeHashValue, byte[] bytes, Class<HV> targetType,  @AT@ 9272 @LENGTH@ 230
---DEL Modifier@@protected @AT@ 9272 @LENGTH@ 9
---DEL SimpleType@@HV @AT@ 9282 @LENGTH@ 2
---DEL SimpleName@@MethodName:deserializeHashValue @AT@ 9285 @LENGTH@ 20
---DEL SingleVariableDeclaration@@byte[] bytes @AT@ 9306 @LENGTH@ 12
------DEL ArrayType@@byte[] @AT@ 9306 @LENGTH@ 6
---------DEL PrimitiveType@@byte @AT@ 9306 @LENGTH@ 4
------DEL SimpleName@@bytes @AT@ 9313 @LENGTH@ 5
---DEL SingleVariableDeclaration@@Class<HV> targetType @AT@ 9320 @LENGTH@ 20
------DEL ParameterizedType@@Class<HV> @AT@ 9320 @LENGTH@ 9
---------DEL SimpleType@@Class @AT@ 9320 @LENGTH@ 5
---------DEL SimpleType@@HV @AT@ 9326 @LENGTH@ 2
------DEL SimpleName@@targetType @AT@ 9330 @LENGTH@ 10
---DEL ReturnStatement@@ConditionalExpression:hashValueSerializerPresent() ? (HV)hashValueSerializer().deserialize(bytes) : objectMapper.getConversionService().convert(bytes,targetType) @AT@ 9346 @LENGTH@ 153
------DEL ConditionalExpression@@hashValueSerializerPresent() ? (HV)hashValueSerializer().deserialize(bytes) : objectMapper.getConversionService().convert(bytes,targetType) @AT@ 9353 @LENGTH@ 145
---------DEL MethodInvocation@@MethodName:hashValueSerializerPresent:[] @AT@ 9353 @LENGTH@ 28
---------DEL CastExpression@@(HV)hashValueSerializer().deserialize(bytes) @AT@ 9384 @LENGTH@ 45
------------DEL SimpleType@@HV @AT@ 9385 @LENGTH@ 2
------------DEL MethodInvocation@@hashValueSerializer().deserialize(bytes) @AT@ 9389 @LENGTH@ 40
---------------DEL MethodInvocation@@MethodName:hashValueSerializer:[] @AT@ 9389 @LENGTH@ 21
---------------DEL SimpleName@@MethodName:deserialize:[bytes] @AT@ 9411 @LENGTH@ 18
------------------DEL SimpleName@@bytes @AT@ 9423 @LENGTH@ 5
---------DEL MethodInvocation@@objectMapper.getConversionService().convert(bytes,targetType) @AT@ 9436 @LENGTH@ 62
------------DEL MethodInvocation@@MethodName:getConversionService:[] @AT@ 9436 @LENGTH@ 35
------------DEL SimpleName@@Name:objectMapper @AT@ 9436 @LENGTH@ 12
------------DEL SimpleName@@MethodName:convert:[bytes, targetType] @AT@ 9472 @LENGTH@ 26
---------------DEL SimpleName@@bytes @AT@ 9480 @LENGTH@ 5
---------------DEL SimpleName@@targetType @AT@ 9487 @LENGTH@ 10


UPD VariableDeclarationStatement@@final double cpuCost=HiveAlgorithmsUtil.computeMapJoinCPUCost(cardinalities,streaming); @TO@ final double cpuCost=algoUtils.computeMapJoinCPUCost(cardinalities,streaming); @AT@ 9855 @LENGTH@ 90
---UPD VariableDeclarationFragment@@cpuCost=HiveAlgorithmsUtil.computeMapJoinCPUCost(cardinalities,streaming) @TO@ cpuCost=algoUtils.computeMapJoinCPUCost(cardinalities,streaming) @AT@ 9868 @LENGTH@ 76
------UPD MethodInvocation@@HiveAlgorithmsUtil.computeMapJoinCPUCost(cardinalities,streaming) @TO@ algoUtils.computeMapJoinCPUCost(cardinalities,streaming) @AT@ 9878 @LENGTH@ 66
---------UPD SimpleName@@Name:HiveAlgorithmsUtil @TO@ Name:algoUtils @AT@ 9878 @LENGTH@ 18


UPD VariableDeclarationStatement@@Cache<?,?> cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2073 @LENGTH@ 172
---UPD VariableDeclarationFragment@@cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2085 @LENGTH@ 159
------UPD MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2093 @LENGTH@ 151
---------DEL SimpleName@@Name:ServiceContainerHelper @AT@ 2093 @LENGTH@ 22
---------INS ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2096 @LENGTH@ 157
------------INS New@@new @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2096 @LENGTH@ 3
------------INS ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2100 @LENGTH@ 35
---------------INS SimpleType@@PassiveServiceSupplier @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2100 @LENGTH@ 22
---------------INS ParameterizedType@@Cache<?,?> @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2123 @LENGTH@ 11
------------------INS SimpleType@@Cache @TO@ ParameterizedType@@Cache<?,?> @AT@ 2123 @LENGTH@ 5
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2129 @LENGTH@ 1
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2132 @LENGTH@ 1
------------INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2136 @LENGTH@ 32
---------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2126 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2134 @LENGTH@ 25
------------------UPD BooleanLiteral@@false @TO@ true @AT@ 2153 @LENGTH@ 5
------------MOV MethodInvocation@@InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2161 @LENGTH@ 82
---------DEL SimpleName@@MethodName:findValue:[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2116 @LENGTH@ 128
------------DEL MethodInvocation@@context.getServiceRegistry(false) @AT@ 2126 @LENGTH@ 33
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2254 @LENGTH@ 5


UPD TryStatement@@try {  LoopState state=new LoopState(exchange,callback);  ReactiveHelper.scheduleMain(state);  return false;} catch (Exception e) {  exchange.setException(e);  callback.done(true);  return true;} @TO@ try {  LoopState state=new LoopState(exchange,callback);  if (exchange.isTransacted()) {    ReactiveHelper.scheduleSync(state);  } else {    ReactiveHelper.scheduleMain(state);  }  return false;} catch (Exception e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 1943 @LENGTH@ 285
---INS IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(state);} else {  ReactiveHelper.scheduleMain(state);} @TO@ TryStatement@@try {  LoopState state=new LoopState(exchange,callback);  ReactiveHelper.scheduleMain(state);  return false;} catch (Exception e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 2028 @LENGTH@ 169
------INS MethodInvocation@@exchange.isTransacted() @TO@ IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(state);} else {  ReactiveHelper.scheduleMain(state);} @AT@ 2032 @LENGTH@ 23
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.isTransacted() @AT@ 2032 @LENGTH@ 8
---------INS SimpleName@@MethodName:isTransacted:[] @TO@ MethodInvocation@@exchange.isTransacted() @AT@ 2041 @LENGTH@ 14
------INS Block@@ThenBody:{  ReactiveHelper.scheduleSync(state);} @TO@ IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(state);} else {  ReactiveHelper.scheduleMain(state);} @AT@ 2057 @LENGTH@ 67
---------INS ExpressionStatement@@MethodInvocation:ReactiveHelper.scheduleSync(state) @TO@ Block@@ThenBody:{  ReactiveHelper.scheduleSync(state);} @AT@ 2075 @LENGTH@ 35
------------INS MethodInvocation@@ReactiveHelper.scheduleSync(state) @TO@ ExpressionStatement@@MethodInvocation:ReactiveHelper.scheduleSync(state) @AT@ 2075 @LENGTH@ 34
---------------INS SimpleName@@Name:ReactiveHelper @TO@ MethodInvocation@@ReactiveHelper.scheduleSync(state) @AT@ 2075 @LENGTH@ 14
---------------INS SimpleName@@MethodName:scheduleSync:[state] @TO@ MethodInvocation@@ReactiveHelper.scheduleSync(state) @AT@ 2090 @LENGTH@ 19
------------------INS SimpleName@@state @TO@ SimpleName@@MethodName:scheduleSync:[state] @AT@ 2103 @LENGTH@ 5
------INS Block@@ElseBody:{  ReactiveHelper.scheduleMain(state);} @TO@ IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(state);} else {  ReactiveHelper.scheduleMain(state);} @AT@ 2130 @LENGTH@ 67
---------MOV ExpressionStatement@@MethodInvocation:ReactiveHelper.scheduleMain(state) @TO@ Block@@ElseBody:{  ReactiveHelper.scheduleMain(state);} @AT@ 2028 @LENGTH@ 35


UPD IfStatement@@if (authorization == null || !authorization.toLowerCase().startsWith("basic ")) {  return Mono.empty();} @TO@ if (!StringUtils.startsWithIgnoreCase(authorization,"basic ")) {  return Mono.empty();} @AT@ 1770 @LENGTH@ 109
---DEL InfixExpression@@authorization == null || !authorization.toLowerCase().startsWith("basic ") @AT@ 1774 @LENGTH@ 74
------DEL InfixExpression@@authorization == null @AT@ 1774 @LENGTH@ 21
---------DEL SimpleName@@authorization @AT@ 1774 @LENGTH@ 13
---------DEL Operator@@== @AT@ 1787 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 1791 @LENGTH@ 4
------DEL Operator@@|| @AT@ 1795 @LENGTH@ 2
------DEL PrefixExpression@@!authorization.toLowerCase().startsWith("basic ") @AT@ 1799 @LENGTH@ 49
---INS PrefixExpression@@!StringUtils.startsWithIgnoreCase(authorization,"basic ") @TO@ IfStatement@@if (authorization == null || !authorization.toLowerCase().startsWith("basic ")) {  return Mono.empty();} @AT@ 1819 @LENGTH@ 58
------MOV Operator@@! @TO@ PrefixExpression@@!StringUtils.startsWithIgnoreCase(authorization,"basic ") @AT@ 1799 @LENGTH@ 1
------MOV MethodInvocation@@authorization.toLowerCase().startsWith("basic ") @TO@ PrefixExpression@@!StringUtils.startsWithIgnoreCase(authorization,"basic ") @AT@ 1800 @LENGTH@ 48
---------DEL MethodInvocation@@MethodName:toLowerCase:[] @AT@ 1800 @LENGTH@ 27
---------UPD SimpleName@@Name:authorization @TO@ Name:StringUtils @AT@ 1800 @LENGTH@ 13
---------UPD SimpleName@@MethodName:startsWith:["basic "] @TO@ MethodName:startsWithIgnoreCase:[authorization, "basic "] @AT@ 1828 @LENGTH@ 20
------------INS SimpleName@@authorization @TO@ SimpleName@@MethodName:startsWith:["basic "] @AT@ 1853 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodDeclaration@@public, void, MethodName:resumeAtTimestampCorrectly, InterruptedException,  @AT@ 15737 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 15737 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 15737 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 15744 @LENGTH@ 11
---------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 15750 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @TO@ TypeDeclaration@@[@PowerMockIgnore("okhttp3.*"), @PrepareForTest({ClientRegistration.class,OAuth2AuthorizationRequest.class,OAuth2AuthorizationResponse.class,OAuth2AuthorizationExchange.class}), @RunWith(PowerMockRunner.class), public]NimbusAuthorizationCodeTokenResponseClientTests,  @AT@ 9488 @LENGTH@ 685
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 9488 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 9495 @LENGTH@ 4
---INS SimpleName@@MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 9500 @LENGTH@ 77
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 9587 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:this.exception.expect(OAuth2AuthenticationException.class) @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 9601 @LENGTH@ 59
------INS MethodInvocation@@this.exception.expect(OAuth2AuthenticationException.class) @TO@ ExpressionStatement@@MethodInvocation:this.exception.expect(OAuth2AuthenticationException.class) @AT@ 9601 @LENGTH@ 58
---------INS FieldAccess@@this.exception @TO@ MethodInvocation@@this.exception.expect(OAuth2AuthenticationException.class) @AT@ 9601 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.exception @AT@ 9601 @LENGTH@ 4
------------INS SimpleName@@exception @TO@ FieldAccess@@this.exception @AT@ 9606 @LENGTH@ 9
---------INS SimpleName@@MethodName:expect:[OAuth2AuthenticationException.class] @TO@ MethodInvocation@@this.exception.expect(OAuth2AuthenticationException.class) @AT@ 9616 @LENGTH@ 43
------------INS TypeLiteral@@OAuth2AuthenticationException.class @TO@ SimpleName@@MethodName:expect:[OAuth2AuthenticationException.class] @AT@ 9623 @LENGTH@ 35
---INS ExpressionStatement@@MethodInvocation:this.exception.expectMessage(containsString("server_error")) @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 9663 @LENGTH@ 61
------INS MethodInvocation@@this.exception.expectMessage(containsString("server_error")) @TO@ ExpressionStatement@@MethodInvocation:this.exception.expectMessage(containsString("server_error")) @AT@ 9663 @LENGTH@ 60
---------INS FieldAccess@@this.exception @TO@ MethodInvocation@@this.exception.expectMessage(containsString("server_error")) @AT@ 9663 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.exception @AT@ 9663 @LENGTH@ 4
------------INS SimpleName@@exception @TO@ FieldAccess@@this.exception @AT@ 9668 @LENGTH@ 9
---------INS SimpleName@@MethodName:expectMessage:[containsString("server_error")] @TO@ MethodInvocation@@this.exception.expectMessage(containsString("server_error")) @AT@ 9678 @LENGTH@ 45
------------INS MethodInvocation@@containsString("server_error") @TO@ SimpleName@@MethodName:expectMessage:[containsString("server_error")] @AT@ 9692 @LENGTH@ 30
---------------INS SimpleName@@MethodName:containsString:["server_error"] @TO@ MethodInvocation@@containsString("server_error") @AT@ 9692 @LENGTH@ 30
------------------INS StringLiteral@@"server_error" @TO@ SimpleName@@MethodName:containsString:["server_error"] @AT@ 9707 @LENGTH@ 14
---INS VariableDeclarationStatement@@MockWebServer server=new MockWebServer(); @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 9728 @LENGTH@ 43
------INS SimpleType@@MockWebServer @TO@ VariableDeclarationStatement@@MockWebServer server=new MockWebServer(); @AT@ 9728 @LENGTH@ 13
------INS VariableDeclarationFragment@@server=new MockWebServer() @TO@ VariableDeclarationStatement@@MockWebServer server=new MockWebServer(); @AT@ 9742 @LENGTH@ 28
---------INS SimpleName@@server @TO@ VariableDeclarationFragment@@server=new MockWebServer() @AT@ 9742 @LENGTH@ 6
---------INS ClassInstanceCreation@@MockWebServer[] @TO@ VariableDeclarationFragment@@server=new MockWebServer() @AT@ 9751 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@MockWebServer[] @AT@ 9751 @LENGTH@ 3
------------INS SimpleType@@MockWebServer @TO@ ClassInstanceCreation@@MockWebServer[] @AT@ 9755 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:server.enqueue(new MockResponse().setResponseCode(500)) @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 9775 @LENGTH@ 56
------INS MethodInvocation@@server.enqueue(new MockResponse().setResponseCode(500)) @TO@ ExpressionStatement@@MethodInvocation:server.enqueue(new MockResponse().setResponseCode(500)) @AT@ 9775 @LENGTH@ 55
---------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.enqueue(new MockResponse().setResponseCode(500)) @AT@ 9775 @LENGTH@ 6
---------INS SimpleName@@MethodName:enqueue:[new MockResponse().setResponseCode(500)] @TO@ MethodInvocation@@server.enqueue(new MockResponse().setResponseCode(500)) @AT@ 9782 @LENGTH@ 48
------------INS MethodInvocation@@new MockResponse().setResponseCode(500) @TO@ SimpleName@@MethodName:enqueue:[new MockResponse().setResponseCode(500)] @AT@ 9790 @LENGTH@ 39
---------------INS ClassInstanceCreation@@MockResponse[] @TO@ MethodInvocation@@new MockResponse().setResponseCode(500) @AT@ 9790 @LENGTH@ 18
------------------INS New@@new @TO@ ClassInstanceCreation@@MockResponse[] @AT@ 9790 @LENGTH@ 3
------------------INS SimpleType@@MockResponse @TO@ ClassInstanceCreation@@MockResponse[] @AT@ 9794 @LENGTH@ 12
---------------INS SimpleName@@MethodName:setResponseCode:[500] @TO@ MethodInvocation@@new MockResponse().setResponseCode(500) @AT@ 9809 @LENGTH@ 20
------------------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:setResponseCode:[500] @AT@ 9825 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:server.start() @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 9834 @LENGTH@ 15
------INS MethodInvocation@@server.start() @TO@ ExpressionStatement@@MethodInvocation:server.start() @AT@ 9834 @LENGTH@ 14
---------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.start() @AT@ 9834 @LENGTH@ 6
---------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@server.start() @AT@ 9841 @LENGTH@ 7
---INS VariableDeclarationStatement@@String tokenUri=server.url("/oauth2/token").toString(); @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 9853 @LENGTH@ 57
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String tokenUri=server.url("/oauth2/token").toString(); @AT@ 9853 @LENGTH@ 6
------INS VariableDeclarationFragment@@tokenUri=server.url("/oauth2/token").toString() @TO@ VariableDeclarationStatement@@String tokenUri=server.url("/oauth2/token").toString(); @AT@ 9860 @LENGTH@ 49
---------INS SimpleName@@tokenUri @TO@ VariableDeclarationFragment@@tokenUri=server.url("/oauth2/token").toString() @AT@ 9860 @LENGTH@ 8
---------INS MethodInvocation@@server.url("/oauth2/token").toString() @TO@ VariableDeclarationFragment@@tokenUri=server.url("/oauth2/token").toString() @AT@ 9871 @LENGTH@ 38
------------INS MethodInvocation@@MethodName:url:["/oauth2/token"] @TO@ MethodInvocation@@server.url("/oauth2/token").toString() @AT@ 9871 @LENGTH@ 27
---------------INS StringLiteral@@"/oauth2/token" @TO@ MethodInvocation@@MethodName:url:["/oauth2/token"] @AT@ 9882 @LENGTH@ 15
------------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.url("/oauth2/token").toString() @AT@ 9871 @LENGTH@ 6
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@server.url("/oauth2/token").toString() @AT@ 9899 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:when(this.providerDetails.getTokenUri()).thenReturn(tokenUri) @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 9913 @LENGTH@ 62
------INS MethodInvocation@@when(this.providerDetails.getTokenUri()).thenReturn(tokenUri) @TO@ ExpressionStatement@@MethodInvocation:when(this.providerDetails.getTokenUri()).thenReturn(tokenUri) @AT@ 9913 @LENGTH@ 61
---------INS MethodInvocation@@MethodName:when:[this.providerDetails.getTokenUri()] @TO@ MethodInvocation@@when(this.providerDetails.getTokenUri()).thenReturn(tokenUri) @AT@ 9913 @LENGTH@ 40
------------INS MethodInvocation@@this.providerDetails.getTokenUri() @TO@ MethodInvocation@@MethodName:when:[this.providerDetails.getTokenUri()] @AT@ 9918 @LENGTH@ 34
---------------INS FieldAccess@@this.providerDetails @TO@ MethodInvocation@@this.providerDetails.getTokenUri() @AT@ 9918 @LENGTH@ 20
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.providerDetails @AT@ 9918 @LENGTH@ 4
------------------INS SimpleName@@providerDetails @TO@ FieldAccess@@this.providerDetails @AT@ 9923 @LENGTH@ 15
---------------INS SimpleName@@MethodName:getTokenUri:[] @TO@ MethodInvocation@@this.providerDetails.getTokenUri() @AT@ 9939 @LENGTH@ 13
---------INS SimpleName@@MethodName:thenReturn:[tokenUri] @TO@ MethodInvocation@@when(this.providerDetails.getTokenUri()).thenReturn(tokenUri) @AT@ 9954 @LENGTH@ 20
------------INS SimpleName@@tokenUri @TO@ SimpleName@@MethodName:thenReturn:[tokenUri] @AT@ 9965 @LENGTH@ 8
---INS TryStatement@@try {  this.tokenResponseClient.getTokenResponse(new OAuth2AuthorizationCodeGrantRequest(this.clientRegistration,this.authorizationExchange));}  finally {  server.shutdown();} @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenServerErrorResponseThenThrowOAuth2AuthenticationException, Exception,  @AT@ 9979 @LENGTH@ 191
------INS ExpressionStatement@@MethodInvocation:this.tokenResponseClient.getTokenResponse(new OAuth2AuthorizationCodeGrantRequest(this.clientRegistration,this.authorizationExchange)) @TO@ TryStatement@@try {  this.tokenResponseClient.getTokenResponse(new OAuth2AuthorizationCodeGrantRequest(this.clientRegistration,this.authorizationExchange));}  finally {  server.shutdown();} @AT@ 9988 @LENGTH@ 142
---------INS MethodInvocation@@this.tokenResponseClient.getTokenResponse(new OAuth2AuthorizationCodeGrantRequest(this.clientRegistration,this.authorizationExchange)) @TO@ ExpressionStatement@@MethodInvocation:this.tokenResponseClient.getTokenResponse(new OAuth2AuthorizationCodeGrantRequest(this.clientRegistration,this.authorizationExchange)) @AT@ 9988 @LENGTH@ 141
------------INS FieldAccess@@this.tokenResponseClient @TO@ MethodInvocation@@this.tokenResponseClient.getTokenResponse(new OAuth2AuthorizationCodeGrantRequest(this.clientRegistration,this.authorizationExchange)) @AT@ 9988 @LENGTH@ 24
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.tokenResponseClient @AT@ 9988 @LENGTH@ 4
---------------INS SimpleName@@tokenResponseClient @TO@ FieldAccess@@this.tokenResponseClient @AT@ 9993 @LENGTH@ 19
------------INS SimpleName@@MethodName:getTokenResponse:[new OAuth2AuthorizationCodeGrantRequest(this.clientRegistration,this.authorizationExchange)] @TO@ MethodInvocation@@this.tokenResponseClient.getTokenResponse(new OAuth2AuthorizationCodeGrantRequest(this.clientRegistration,this.authorizationExchange)) @AT@ 10013 @LENGTH@ 116
---------------INS ClassInstanceCreation@@OAuth2AuthorizationCodeGrantRequest[this.clientRegistration, this.authorizationExchange] @TO@ SimpleName@@MethodName:getTokenResponse:[new OAuth2AuthorizationCodeGrantRequest(this.clientRegistration,this.authorizationExchange)] @AT@ 10036 @LENGTH@ 92
------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthorizationCodeGrantRequest[this.clientRegistration, this.authorizationExchange] @AT@ 10036 @LENGTH@ 3
------------------INS SimpleType@@OAuth2AuthorizationCodeGrantRequest @TO@ ClassInstanceCreation@@OAuth2AuthorizationCodeGrantRequest[this.clientRegistration, this.authorizationExchange] @AT@ 10040 @LENGTH@ 35
------------------INS FieldAccess@@this.clientRegistration @TO@ ClassInstanceCreation@@OAuth2AuthorizationCodeGrantRequest[this.clientRegistration, this.authorizationExchange] @AT@ 10076 @LENGTH@ 23
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistration @AT@ 10076 @LENGTH@ 4
---------------------INS SimpleName@@clientRegistration @TO@ FieldAccess@@this.clientRegistration @AT@ 10081 @LENGTH@ 18
------------------INS FieldAccess@@this.authorizationExchange @TO@ ClassInstanceCreation@@OAuth2AuthorizationCodeGrantRequest[this.clientRegistration, this.authorizationExchange] @AT@ 10101 @LENGTH@ 26
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationExchange @AT@ 10101 @LENGTH@ 4
---------------------INS SimpleName@@authorizationExchange @TO@ FieldAccess@@this.authorizationExchange @AT@ 10106 @LENGTH@ 21
------INS Block@@FinallyBody:{  server.shutdown();} @TO@ TryStatement@@try {  this.tokenResponseClient.getTokenResponse(new OAuth2AuthorizationCodeGrantRequest(this.clientRegistration,this.authorizationExchange));}  finally {  server.shutdown();} @AT@ 10143 @LENGTH@ 27
---------INS ExpressionStatement@@MethodInvocation:server.shutdown() @TO@ Block@@FinallyBody:{  server.shutdown();} @AT@ 10148 @LENGTH@ 18
------------INS MethodInvocation@@server.shutdown() @TO@ ExpressionStatement@@MethodInvocation:server.shutdown() @AT@ 10148 @LENGTH@ 17
---------------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.shutdown() @AT@ 10148 @LENGTH@ 6
---------------INS SimpleName@@MethodName:shutdown:[] @TO@ MethodInvocation@@server.shutdown() @AT@ 10155 @LENGTH@ 10


UPD VariableDeclarationStatement@@String redirectUri=request.getRequestURL().toString(); @TO@ String redirectUri=UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replaceQuery(null).build().toUriString(); @AT@ 8768 @LENGTH@ 56
---UPD VariableDeclarationFragment@@redirectUri=request.getRequestURL().toString() @TO@ redirectUri=UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replaceQuery(null).build().toUriString() @AT@ 8775 @LENGTH@ 48
------UPD MethodInvocation@@request.getRequestURL().toString() @TO@ UriComponentsBuilder.fromHttpUrl(UrlUtils.buildFullRequestUrl(request)).replaceQuery(null).build().toUriString() @AT@ 8789 @LENGTH@ 34
---------UPD MethodInvocation@@MethodName:getRequestURL:[] @TO@ MethodName:build:[] @AT@ 8789 @LENGTH@ 23
---------INS SimpleName@@Name:UriComponentsBuilder @TO@ MethodInvocation@@request.getRequestURL().toString() @AT@ 8789 @LENGTH@ 20
---------DEL SimpleName@@Name:request @AT@ 8789 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:replaceQuery:[null] @TO@ MethodInvocation@@request.getRequestURL().toString() @AT@ 8789 @LENGTH@ 95
------------INS NullLiteral@@null @TO@ MethodInvocation@@MethodName:replaceQuery:[null] @AT@ 8879 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:fromHttpUrl:[UrlUtils.buildFullRequestUrl(request)] @TO@ MethodInvocation@@request.getRequestURL().toString() @AT@ 8789 @LENGTH@ 71
------------INS MethodInvocation@@UrlUtils.buildFullRequestUrl(request) @TO@ MethodInvocation@@MethodName:fromHttpUrl:[UrlUtils.buildFullRequestUrl(request)] @AT@ 8822 @LENGTH@ 37
---------------INS SimpleName@@Name:UrlUtils @TO@ MethodInvocation@@UrlUtils.buildFullRequestUrl(request) @AT@ 8822 @LENGTH@ 8
---------------INS SimpleName@@MethodName:buildFullRequestUrl:[request] @TO@ MethodInvocation@@UrlUtils.buildFullRequestUrl(request) @AT@ 8831 @LENGTH@ 28
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:buildFullRequestUrl:[request] @AT@ 8851 @LENGTH@ 7
---------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:toUriString:[] @AT@ 8813 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testMultipleHttpOptions,  @TO@ TypeDeclaration@@[public]RestUndertowHttpOptionsTest, BaseUndertowTest @AT@ 2144 @LENGTH@ 599
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMultipleHttpOptions,  @AT@ 2144 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMultipleHttpOptions,  @AT@ 2151 @LENGTH@ 4
---INS SimpleName@@MethodName:testMultipleHttpOptions @TO@ MethodDeclaration@@public, void, MethodName:testMultipleHttpOptions,  @AT@ 2156 @LENGTH@ 23
---INS VariableDeclarationStatement@@Exchange exchange=template.request("undertow:http://localhost:" + getPort() + "/users/v1/options",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:testMultipleHttpOptions,  @AT@ 2192 @LENGTH@ 313
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=template.request("undertow:http://localhost:" + getPort() + "/users/v1/options",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
  }
}
); @AT@ 2192 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=template.request("undertow:http://localhost:" + getPort() + "/users/v1/options",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
  }
}
) @TO@ VariableDeclarationStatement@@Exchange exchange=template.request("undertow:http://localhost:" + getPort() + "/users/v1/options",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
  }
}
); @AT@ 2201 @LENGTH@ 303
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=template.request("undertow:http://localhost:" + getPort() + "/users/v1/options",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
  }
}
) @AT@ 2201 @LENGTH@ 8
---------INS MethodInvocation@@template.request("undertow:http://localhost:" + getPort() + "/users/v1/options",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
  }
}
) @TO@ VariableDeclarationFragment@@exchange=template.request("undertow:http://localhost:" + getPort() + "/users/v1/options",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
  }
}
) @AT@ 2212 @LENGTH@ 292
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.request("undertow:http://localhost:" + getPort() + "/users/v1/options",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
  }
}
) @AT@ 2212 @LENGTH@ 8
------------INS SimpleName@@MethodName:request:["undertow:http://localhost:" + getPort() + "/users/v1/options", new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
  }
}
] @TO@ MethodInvocation@@template.request("undertow:http://localhost:" + getPort() + "/users/v1/options",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
  }
}
) @AT@ 2221 @LENGTH@ 283
---------------INS InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/v1/options" @TO@ SimpleName@@MethodName:request:["undertow:http://localhost:" + getPort() + "/users/v1/options", new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
  }
}
] @AT@ 2229 @LENGTH@ 62
------------------INS StringLiteral@@"undertow:http://localhost:" @TO@ InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/v1/options" @AT@ 2229 @LENGTH@ 28
------------------INS Operator@@+ @TO@ InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/v1/options" @AT@ 2257 @LENGTH@ 1
------------------INS MethodInvocation@@MethodName:getPort:[] @TO@ InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/v1/options" @AT@ 2260 @LENGTH@ 9
------------------INS StringLiteral@@"/users/v1/options" @TO@ InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/v1/options" @AT@ 2272 @LENGTH@ 19
---------------INS ClassInstanceCreation@@Processor[] @TO@ SimpleName@@MethodName:request:["undertow:http://localhost:" + getPort() + "/users/v1/options", new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS");
  }
}
] @AT@ 2293 @LENGTH@ 210
------------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 2293 @LENGTH@ 3
------------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 2297 @LENGTH@ 9
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 2309 @LENGTH@ 194
---------------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2345 @LENGTH@ 148
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2345 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2352 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2357 @LENGTH@ 7
------------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2365 @LENGTH@ 17
---------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2365 @LENGTH@ 8
---------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2374 @LENGTH@ 8
------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2391 @LENGTH@ 9
------------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2419 @LENGTH@ 60
---------------------------INS MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS") @AT@ 2419 @LENGTH@ 59
------------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS") @AT@ 2419 @LENGTH@ 16
------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS") @AT@ 2419 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_METHOD, "OPTIONS"] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_METHOD,"OPTIONS") @AT@ 2436 @LENGTH@ 42
---------------------------------INS QualifiedName@@Exchange.HTTP_METHOD @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_METHOD, "OPTIONS"] @AT@ 2446 @LENGTH@ 20
------------------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 2446 @LENGTH@ 8
------------------------------------INS SimpleName@@HTTP_METHOD @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 2455 @LENGTH@ 11
---------------------------------INS StringLiteral@@"OPTIONS" @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_METHOD, "OPTIONS"] @AT@ 2468 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(200,exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE)) @TO@ MethodDeclaration@@public, void, MethodName:testMultipleHttpOptions,  @AT@ 2514 @LENGTH@ 76
------INS MethodInvocation@@assertEquals(200,exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(200,exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE)) @AT@ 2514 @LENGTH@ 75
---------INS SimpleName@@MethodName:assertEquals:[200, exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE)] @TO@ MethodInvocation@@assertEquals(200,exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE)) @AT@ 2514 @LENGTH@ 75
------------INS NumberLiteral@@200 @TO@ SimpleName@@MethodName:assertEquals:[200, exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE)] @AT@ 2527 @LENGTH@ 3
------------INS MethodInvocation@@exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE) @TO@ SimpleName@@MethodName:assertEquals:[200, exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE)] @AT@ 2532 @LENGTH@ 56
---------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE) @AT@ 2532 @LENGTH@ 17
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE) @AT@ 2532 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getHeader:[Exchange.HTTP_RESPONSE_CODE] @TO@ MethodInvocation@@exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE) @AT@ 2550 @LENGTH@ 38
------------------INS QualifiedName@@Exchange.HTTP_RESPONSE_CODE @TO@ SimpleName@@MethodName:getHeader:[Exchange.HTTP_RESPONSE_CODE] @AT@ 2560 @LENGTH@ 27
---------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_RESPONSE_CODE @AT@ 2560 @LENGTH@ 8
---------------------INS SimpleName@@HTTP_RESPONSE_CODE @TO@ QualifiedName@@Exchange.HTTP_RESPONSE_CODE @AT@ 2569 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertEquals("GET,POST,OPTIONS",exchange.getOut().getHeader("ALLOW")) @TO@ MethodDeclaration@@public, void, MethodName:testMultipleHttpOptions,  @AT@ 2599 @LENGTH@ 71
------INS MethodInvocation@@assertEquals("GET,POST,OPTIONS",exchange.getOut().getHeader("ALLOW")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("GET,POST,OPTIONS",exchange.getOut().getHeader("ALLOW")) @AT@ 2599 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertEquals:["GET,POST,OPTIONS", exchange.getOut().getHeader("ALLOW")] @TO@ MethodInvocation@@assertEquals("GET,POST,OPTIONS",exchange.getOut().getHeader("ALLOW")) @AT@ 2599 @LENGTH@ 70
------------INS StringLiteral@@"GET,POST,OPTIONS" @TO@ SimpleName@@MethodName:assertEquals:["GET,POST,OPTIONS", exchange.getOut().getHeader("ALLOW")] @AT@ 2612 @LENGTH@ 18
------------INS MethodInvocation@@exchange.getOut().getHeader("ALLOW") @TO@ SimpleName@@MethodName:assertEquals:["GET,POST,OPTIONS", exchange.getOut().getHeader("ALLOW")] @AT@ 2632 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getHeader("ALLOW") @AT@ 2632 @LENGTH@ 17
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getHeader("ALLOW") @AT@ 2632 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getHeader:["ALLOW"] @TO@ MethodInvocation@@exchange.getOut().getHeader("ALLOW") @AT@ 2650 @LENGTH@ 18
------------------INS StringLiteral@@"ALLOW" @TO@ SimpleName@@MethodName:getHeader:["ALLOW"] @AT@ 2660 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertEquals("",exchange.getOut().getBody(String.class)) @TO@ MethodDeclaration@@public, void, MethodName:testMultipleHttpOptions,  @AT@ 2679 @LENGTH@ 58
------INS MethodInvocation@@assertEquals("",exchange.getOut().getBody(String.class)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("",exchange.getOut().getBody(String.class)) @AT@ 2679 @LENGTH@ 57
---------INS SimpleName@@MethodName:assertEquals:["", exchange.getOut().getBody(String.class)] @TO@ MethodInvocation@@assertEquals("",exchange.getOut().getBody(String.class)) @AT@ 2679 @LENGTH@ 57
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertEquals:["", exchange.getOut().getBody(String.class)] @AT@ 2692 @LENGTH@ 2
------------INS MethodInvocation@@exchange.getOut().getBody(String.class) @TO@ SimpleName@@MethodName:assertEquals:["", exchange.getOut().getBody(String.class)] @AT@ 2696 @LENGTH@ 39
---------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 2696 @LENGTH@ 17
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 2696 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getBody:[String.class] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 2714 @LENGTH@ 21
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getBody:[String.class] @AT@ 2722 @LENGTH@ 12


UPD ReturnStatement@@CastExpression:(OAuth2LoginAuthenticationToken)this.converter.apply(exchange).block() @TO@ CastExpression:(OAuth2LoginAuthenticationToken)this.converter.convert(exchange).block() @AT@ 6481 @LENGTH@ 79
---UPD CastExpression@@(OAuth2LoginAuthenticationToken)this.converter.apply(exchange).block() @TO@ (OAuth2LoginAuthenticationToken)this.converter.convert(exchange).block() @AT@ 6488 @LENGTH@ 71
------UPD MethodInvocation@@this.converter.apply(exchange).block() @TO@ this.converter.convert(exchange).block() @AT@ 6521 @LENGTH@ 38
---------UPD MethodInvocation@@MethodName:apply:[exchange] @TO@ MethodName:convert:[exchange] @AT@ 6521 @LENGTH@ 30


DEL MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3539 @LENGTH@ 87
---DEL Modifier@@public @AT@ 3539 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3546 @LENGTH@ 4
---DEL SimpleName@@MethodName:process @AT@ 3551 @LENGTH@ 7
---DEL SingleVariableDeclaration@@Exchange exchange @AT@ 3559 @LENGTH@ 17
------DEL SimpleType@@Exchange @AT@ 3559 @LENGTH@ 8
------DEL SimpleName@@exchange @AT@ 3568 @LENGTH@ 8
---DEL SimpleType@@Exception @AT@ 3585 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:mockMvc.perform(get("/logout")).andExpect(content().string("<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>")).andExpect(content().contentType("text/html;charset=UTF-8")) @TO@ MethodInvocation:mockMvc.perform(get("/logout")).andExpect(content().string("<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>")).andExpect(content().contentType("text/html;charset=UTF-8")) @AT@ 1484 @LENGTH@ 1338
---UPD MethodInvocation@@mockMvc.perform(get("/logout")).andExpect(content().string("<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>")).andExpect(content().contentType("text/html;charset=UTF-8")) @TO@ mockMvc.perform(get("/logout")).andExpect(content().string("<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>")).andExpect(content().contentType("text/html;charset=UTF-8")) @AT@ 1484 @LENGTH@ 1337
------UPD MethodInvocation@@MethodName:andExpect:[content().string("<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>")] @TO@ MethodName:andExpect:[content().string("<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>")] @AT@ 1484 @LENGTH@ 1272
---------UPD MethodInvocation@@content().string("<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>") @TO@ content().string("<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>") @AT@ 1531 @LENGTH@ 1224
------------UPD SimpleName@@MethodName:string:["<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>"] @TO@ MethodName:string:["<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>"] @AT@ 1541 @LENGTH@ 1214
---------------UPD InfixExpression@@"<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>" @TO@ "<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>" @AT@ 1548 @LENGTH@ 1206
------------------UPD StringLiteral@@"    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n" @TO@ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n" @AT@ 2171 @LENGTH@ 129


UPD CatchClause@@catch (Exception e) {  if (Thread.currentThread().isInterrupted()) {    throw new GenericFileOperationFailedException("Interrupted during connecting",new InterruptedException("Interrupted during connecting"));  }  GenericFileOperationFailedException failed;  if (e instanceof GenericFileOperationFailedException) {    failed=(GenericFileOperationFailedException)e;  } else {    failed=new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  }  log.trace("Cannot connect due: {}",failed.getMessage());  attempt++;  if (attempt > endpoint.getMaximumReconnectAttempts()) {    throw failed;  }  if (endpoint.getReconnectDelay() > 0) {    try {      Thread.sleep(endpoint.getReconnectDelay());    } catch (    InterruptedException ie) {      Thread.currentThread().interrupt();      throw new GenericFileOperationFailedException("Interrupted during sleeping",ie);    }  }} @TO@ catch (Exception e) {  if (client.isConnected()) {    log.trace("Disconnecting due to exception during connect");    try {      client.disconnect();    } catch (    IOException ignore) {      log.trace("Ignore exception during disconnect: {}",ignore.getMessage());    }  }  if (Thread.currentThread().isInterrupted()) {    throw new GenericFileOperationFailedException("Interrupted during connecting",new InterruptedException("Interrupted during connecting"));  }  GenericFileOperationFailedException failed;  if (e instanceof GenericFileOperationFailedException) {    failed=(GenericFileOperationFailedException)e;  } else {    failed=new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  }  log.trace("Cannot connect due: {}",failed.getMessage());  attempt++;  if (attempt > endpoint.getMaximumReconnectAttempts()) {    throw failed;  }  if (endpoint.getReconnectDelay() > 0) {    try {      Thread.sleep(endpoint.getReconnectDelay());    } catch (    InterruptedException ie) {      Thread.currentThread().interrupt();      throw new GenericFileOperationFailedException("Interrupted during sleeping",ie);    }  }} @AT@ 5394 @LENGTH@ 1443
---INS IfStatement@@if (client.isConnected()) {  log.trace("Disconnecting due to exception during connect");  try {    client.disconnect();  } catch (  IOException ignore) {    log.trace("Ignore exception during disconnect: {}",ignore.getMessage());  }} @TO@ CatchClause@@catch (Exception e) {  if (Thread.currentThread().isInterrupted()) {    throw new GenericFileOperationFailedException("Interrupted during connecting",new InterruptedException("Interrupted during connecting"));  }  GenericFileOperationFailedException failed;  if (e instanceof GenericFileOperationFailedException) {    failed=(GenericFileOperationFailedException)e;  } else {    failed=new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  }  log.trace("Cannot connect due: {}",failed.getMessage());  attempt++;  if (attempt > endpoint.getMaximumReconnectAttempts()) {    throw failed;  }  if (endpoint.getReconnectDelay() > 0) {    try {      Thread.sleep(endpoint.getReconnectDelay());    } catch (    InterruptedException ie) {      Thread.currentThread().interrupt();      throw new GenericFileOperationFailedException("Interrupted during sleeping",ie);    }  }} @AT@ 5432 @LENGTH@ 395
------INS MethodInvocation@@client.isConnected() @TO@ IfStatement@@if (client.isConnected()) {  log.trace("Disconnecting due to exception during connect");  try {    client.disconnect();  } catch (  IOException ignore) {    log.trace("Ignore exception during disconnect: {}",ignore.getMessage());  }} @AT@ 5436 @LENGTH@ 20
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.isConnected() @AT@ 5436 @LENGTH@ 6
---------INS SimpleName@@MethodName:isConnected:[] @TO@ MethodInvocation@@client.isConnected() @AT@ 5443 @LENGTH@ 13
------INS Block@@ThenBody:{  log.trace("Disconnecting due to exception during connect");  try {    client.disconnect();  } catch (  IOException ignore) {    log.trace("Ignore exception during disconnect: {}",ignore.getMessage());  }} @TO@ IfStatement@@if (client.isConnected()) {  log.trace("Disconnecting due to exception during connect");  try {    client.disconnect();  } catch (  IOException ignore) {    log.trace("Ignore exception during disconnect: {}",ignore.getMessage());  }} @AT@ 5458 @LENGTH@ 369
---------INS ExpressionStatement@@MethodInvocation:log.trace("Disconnecting due to exception during connect") @TO@ Block@@ThenBody:{  log.trace("Disconnecting due to exception during connect");  try {    client.disconnect();  } catch (  IOException ignore) {    log.trace("Ignore exception during disconnect: {}",ignore.getMessage());  }} @AT@ 5480 @LENGTH@ 59
------------INS MethodInvocation@@log.trace("Disconnecting due to exception during connect") @TO@ ExpressionStatement@@MethodInvocation:log.trace("Disconnecting due to exception during connect") @AT@ 5480 @LENGTH@ 58
---------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.trace("Disconnecting due to exception during connect") @AT@ 5480 @LENGTH@ 3
---------------INS SimpleName@@MethodName:trace:["Disconnecting due to exception during connect"] @TO@ MethodInvocation@@log.trace("Disconnecting due to exception during connect") @AT@ 5484 @LENGTH@ 54
------------------INS StringLiteral@@"Disconnecting due to exception during connect" @TO@ SimpleName@@MethodName:trace:["Disconnecting due to exception during connect"] @AT@ 5490 @LENGTH@ 47
---------INS TryStatement@@try {  client.disconnect();} catch (IOException ignore) {  log.trace("Ignore exception during disconnect: {}",ignore.getMessage());} @TO@ Block@@ThenBody:{  log.trace("Disconnecting due to exception during connect");  try {    client.disconnect();  } catch (  IOException ignore) {    log.trace("Ignore exception during disconnect: {}",ignore.getMessage());  }} @AT@ 5560 @LENGTH@ 249
------------INS ExpressionStatement@@MethodInvocation:client.disconnect() @TO@ TryStatement@@try {  client.disconnect();} catch (IOException ignore) {  log.trace("Ignore exception during disconnect: {}",ignore.getMessage());} @AT@ 5590 @LENGTH@ 20
---------------INS MethodInvocation@@client.disconnect() @TO@ ExpressionStatement@@MethodInvocation:client.disconnect() @AT@ 5590 @LENGTH@ 19
------------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.disconnect() @AT@ 5590 @LENGTH@ 6
------------------INS SimpleName@@MethodName:disconnect:[] @TO@ MethodInvocation@@client.disconnect() @AT@ 5597 @LENGTH@ 12
------------INS CatchClause@@catch (IOException ignore) {  log.trace("Ignore exception during disconnect: {}",ignore.getMessage());} @TO@ TryStatement@@try {  client.disconnect();} catch (IOException ignore) {  log.trace("Ignore exception during disconnect: {}",ignore.getMessage());} @AT@ 5661 @LENGTH@ 148
---------------INS SingleVariableDeclaration@@IOException ignore @TO@ CatchClause@@catch (IOException ignore) {  log.trace("Ignore exception during disconnect: {}",ignore.getMessage());} @AT@ 5668 @LENGTH@ 18
------------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException ignore @AT@ 5668 @LENGTH@ 11
------------------INS SimpleName@@ignore @TO@ SingleVariableDeclaration@@IOException ignore @AT@ 5680 @LENGTH@ 6
---------------INS ExpressionStatement@@MethodInvocation:log.trace("Ignore exception during disconnect: {}",ignore.getMessage()) @TO@ CatchClause@@catch (IOException ignore) {  log.trace("Ignore exception during disconnect: {}",ignore.getMessage());} @AT@ 5714 @LENGTH@ 73
------------------INS MethodInvocation@@log.trace("Ignore exception during disconnect: {}",ignore.getMessage()) @TO@ ExpressionStatement@@MethodInvocation:log.trace("Ignore exception during disconnect: {}",ignore.getMessage()) @AT@ 5714 @LENGTH@ 72
---------------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.trace("Ignore exception during disconnect: {}",ignore.getMessage()) @AT@ 5714 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:trace:["Ignore exception during disconnect: {}", ignore.getMessage()] @TO@ MethodInvocation@@log.trace("Ignore exception during disconnect: {}",ignore.getMessage()) @AT@ 5718 @LENGTH@ 68
------------------------INS StringLiteral@@"Ignore exception during disconnect: {}" @TO@ SimpleName@@MethodName:trace:["Ignore exception during disconnect: {}", ignore.getMessage()] @AT@ 5724 @LENGTH@ 40
------------------------INS MethodInvocation@@ignore.getMessage() @TO@ SimpleName@@MethodName:trace:["Ignore exception during disconnect: {}", ignore.getMessage()] @AT@ 5766 @LENGTH@ 19
---------------------------INS SimpleName@@Name:ignore @TO@ MethodInvocation@@ignore.getMessage() @AT@ 5766 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@ignore.getMessage() @AT@ 5773 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().oauth2().client() @TO@ MethodInvocation:http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().oauth2Client() @AT@ 1625 @LENGTH@ 129
---UPD MethodInvocation@@http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().oauth2().client() @TO@ http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().oauth2Client() @AT@ 1625 @LENGTH@ 128
------DEL MethodInvocation@@MethodName:oauth2:[] @AT@ 1625 @LENGTH@ 114
------UPD SimpleName@@MethodName:client:[] @TO@ MethodName:oauth2Client:[] @AT@ 1745 @LENGTH@ 8


INS MethodDeclaration@@public, voidMethodName:JdbcUserDetailsManager,  @TO@ TypeDeclaration@@[public]JdbcUserDetailsManager, JdbcDaoImpl[UserDetailsManager, GroupManager] @AT@ 7015 @LENGTH@ 36
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:JdbcUserDetailsManager,  @AT@ 7015 @LENGTH@ 6
---INS SimpleName@@MethodName:JdbcUserDetailsManager @TO@ MethodDeclaration@@public, voidMethodName:JdbcUserDetailsManager,  @AT@ 7022 @LENGTH@ 22


UPD VariableDeclarationStatement@@OAuth2AuthorizedClientArgumentResolver authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(this.authorizedClientService); @TO@ OAuth2AuthorizedClientArgumentResolver authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(this.authorizedClientService)); @AT@ 2672 @LENGTH@ 153
---UPD VariableDeclarationFragment@@authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(this.authorizedClientService) @TO@ authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(this.authorizedClientService)) @AT@ 2711 @LENGTH@ 113
------UPD ClassInstanceCreation@@OAuth2AuthorizedClientArgumentResolver[this.authorizedClientService] @TO@ OAuth2AuthorizedClientArgumentResolver[new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(this.authorizedClientService)] @AT@ 2752 @LENGTH@ 72
---------INS ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[this.authorizedClientService] @TO@ ClassInstanceCreation@@OAuth2AuthorizedClientArgumentResolver[this.authorizedClientService] @AT@ 2914 @LENGTH@ 88
------------MOV FieldAccess@@this.authorizedClientService @TO@ ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[this.authorizedClientService] @AT@ 2795 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[this.authorizedClientService] @AT@ 2914 @LENGTH@ 3
------------INS SimpleType@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository @TO@ ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[this.authorizedClientService] @AT@ 2918 @LENGTH@ 54


INS TryStatement@@try {  sagaStep=LRASagaStep.fromCamelSagaStep(step,exchange);} catch (RuntimeException ex) {  return CompletableFuture.supplyAsync(() -> {    throw ex;  });} @TO@ MethodDeclaration@@public, CompletableFuture<Void>, MethodName:beginStep, Exchange exchange, CamelSagaStep step,  @AT@ 1585 @LENGTH@ 194
---INS ExpressionStatement@@Assignment:sagaStep=LRASagaStep.fromCamelSagaStep(step,exchange) @TO@ TryStatement@@try {  sagaStep=LRASagaStep.fromCamelSagaStep(step,exchange);} catch (RuntimeException ex) {  return CompletableFuture.supplyAsync(() -> {    throw ex;  });} @AT@ 1603 @LENGTH@ 57
------INS Assignment@@sagaStep=LRASagaStep.fromCamelSagaStep(step,exchange) @TO@ ExpressionStatement@@Assignment:sagaStep=LRASagaStep.fromCamelSagaStep(step,exchange) @AT@ 1603 @LENGTH@ 56
---------MOV MethodInvocation@@LRASagaStep.fromCamelSagaStep(step,exchange) @TO@ Assignment@@sagaStep=LRASagaStep.fromCamelSagaStep(step,exchange) @AT@ 1578 @LENGTH@ 45
---------INS SimpleName@@sagaStep @TO@ Assignment@@sagaStep=LRASagaStep.fromCamelSagaStep(step,exchange) @AT@ 1603 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@sagaStep=LRASagaStep.fromCamelSagaStep(step,exchange) @AT@ 1611 @LENGTH@ 1
---INS CatchClause@@catch (RuntimeException ex) {  return CompletableFuture.supplyAsync(() -> {    throw ex;  });} @TO@ TryStatement@@try {  sagaStep=LRASagaStep.fromCamelSagaStep(step,exchange);} catch (RuntimeException ex) {  return CompletableFuture.supplyAsync(() -> {    throw ex;  });} @AT@ 1671 @LENGTH@ 108
------INS SingleVariableDeclaration@@RuntimeException ex @TO@ CatchClause@@catch (RuntimeException ex) {  return CompletableFuture.supplyAsync(() -> {    throw ex;  });} @AT@ 1678 @LENGTH@ 19
---------INS SimpleType@@RuntimeException @TO@ SingleVariableDeclaration@@RuntimeException ex @AT@ 1678 @LENGTH@ 16
---------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@RuntimeException ex @AT@ 1695 @LENGTH@ 2
------INS ReturnStatement@@MethodInvocation:CompletableFuture.supplyAsync(() -> {
  throw ex;
}
) @TO@ CatchClause@@catch (RuntimeException ex) {  return CompletableFuture.supplyAsync(() -> {    throw ex;  });} @AT@ 1713 @LENGTH@ 56
---------INS MethodInvocation@@CompletableFuture.supplyAsync(() -> {
  throw ex;
}
) @TO@ ReturnStatement@@MethodInvocation:CompletableFuture.supplyAsync(() -> {
  throw ex;
}
) @AT@ 1720 @LENGTH@ 48
------------INS SimpleName@@Name:CompletableFuture @TO@ MethodInvocation@@CompletableFuture.supplyAsync(() -> {
  throw ex;
}
) @AT@ 1720 @LENGTH@ 17
------------INS SimpleName@@MethodName:supplyAsync:[() -> {
  throw ex;
}
] @TO@ MethodInvocation@@CompletableFuture.supplyAsync(() -> {
  throw ex;
}
) @AT@ 1738 @LENGTH@ 30
---------------INS LambdaExpression@@() -> {
  throw ex;
}
 @TO@ SimpleName@@MethodName:supplyAsync:[() -> {
  throw ex;
}
] @AT@ 1750 @LENGTH@ 17
------------------INS ThrowStatement@@SimpleName:ex @TO@ LambdaExpression@@() -> {
  throw ex;
}
 @AT@ 1757 @LENGTH@ 9
---------------------INS SimpleName@@ex @TO@ ThrowStatement@@SimpleName:ex @AT@ 1763 @LENGTH@ 2


INS MethodDeclaration@@public, CsrfConfigurer<H>, MethodName:ignoringRequestMatchers, RequestMatcher... requestMatchers,  @TO@ TypeDeclaration@@[public, final]CsrfConfigurer, AbstractHttpConfigurer<CsrfConfigurer<H>,H> @AT@ 6462 @LENGTH@ 189
---INS Modifier@@public @TO@ MethodDeclaration@@public, CsrfConfigurer<H>, MethodName:ignoringRequestMatchers, RequestMatcher... requestMatchers,  @AT@ 6462 @LENGTH@ 6
---INS ParameterizedType@@CsrfConfigurer<H> @TO@ MethodDeclaration@@public, CsrfConfigurer<H>, MethodName:ignoringRequestMatchers, RequestMatcher... requestMatchers,  @AT@ 6469 @LENGTH@ 17
------INS SimpleType@@CsrfConfigurer @TO@ ParameterizedType@@CsrfConfigurer<H> @AT@ 6469 @LENGTH@ 14
------INS SimpleType@@H @TO@ ParameterizedType@@CsrfConfigurer<H> @AT@ 6484 @LENGTH@ 1
---INS SimpleName@@MethodName:ignoringRequestMatchers @TO@ MethodDeclaration@@public, CsrfConfigurer<H>, MethodName:ignoringRequestMatchers, RequestMatcher... requestMatchers,  @AT@ 6487 @LENGTH@ 23
---INS SingleVariableDeclaration@@RequestMatcher... requestMatchers @TO@ MethodDeclaration@@public, CsrfConfigurer<H>, MethodName:ignoringRequestMatchers, RequestMatcher... requestMatchers,  @AT@ 6511 @LENGTH@ 33
------INS SimpleType@@RequestMatcher @TO@ SingleVariableDeclaration@@RequestMatcher... requestMatchers @AT@ 6511 @LENGTH@ 14
------INS SimpleName@@requestMatchers @TO@ SingleVariableDeclaration@@RequestMatcher... requestMatchers @AT@ 6529 @LENGTH@ 15
---INS ReturnStatement@@MethodInvocation:new IgnoreCsrfProtectionRegistry(this.context).requestMatchers(requestMatchers).and() @TO@ MethodDeclaration@@public, CsrfConfigurer<H>, MethodName:ignoringRequestMatchers, RequestMatcher... requestMatchers,  @AT@ 6550 @LENGTH@ 98
------INS MethodInvocation@@new IgnoreCsrfProtectionRegistry(this.context).requestMatchers(requestMatchers).and() @TO@ ReturnStatement@@MethodInvocation:new IgnoreCsrfProtectionRegistry(this.context).requestMatchers(requestMatchers).and() @AT@ 6557 @LENGTH@ 90
---------INS MethodInvocation@@MethodName:requestMatchers:[requestMatchers] @TO@ MethodInvocation@@new IgnoreCsrfProtectionRegistry(this.context).requestMatchers(requestMatchers).and() @AT@ 6557 @LENGTH@ 79
------------INS SimpleName@@requestMatchers @TO@ MethodInvocation@@MethodName:requestMatchers:[requestMatchers] @AT@ 6620 @LENGTH@ 15
---------INS ClassInstanceCreation@@IgnoreCsrfProtectionRegistry[this.context] @TO@ MethodInvocation@@new IgnoreCsrfProtectionRegistry(this.context).requestMatchers(requestMatchers).and() @AT@ 6557 @LENGTH@ 46
------------INS New@@new @TO@ ClassInstanceCreation@@IgnoreCsrfProtectionRegistry[this.context] @AT@ 6557 @LENGTH@ 3
------------INS SimpleType@@IgnoreCsrfProtectionRegistry @TO@ ClassInstanceCreation@@IgnoreCsrfProtectionRegistry[this.context] @AT@ 6561 @LENGTH@ 28
------------INS FieldAccess@@this.context @TO@ ClassInstanceCreation@@IgnoreCsrfProtectionRegistry[this.context] @AT@ 6590 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.context @AT@ 6590 @LENGTH@ 4
---------------INS SimpleName@@context @TO@ FieldAccess@@this.context @AT@ 6595 @LENGTH@ 7
---------INS SimpleName@@MethodName:and:[] @TO@ MethodInvocation@@new IgnoreCsrfProtectionRegistry(this.context).requestMatchers(requestMatchers).and() @AT@ 6642 @LENGTH@ 5


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5479 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5499 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 5509 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5509 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5551 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 5558 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5558 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 5568 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:afterRead, @Nullable T item,  @TO@ public, void, MethodName:afterRead, T item,  @AT@ 7808 @LENGTH@ 216
---UPD SingleVariableDeclaration@@@Nullable T item @TO@ T item @AT@ 7830 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:afterRead, @Nullable T item,  @TO@ public, void, MethodName:afterRead, T item,  @AT@ 1680 @LENGTH@ 150
---UPD SingleVariableDeclaration@@@Nullable T item @TO@ T item @AT@ 1702 @LENGTH@ 16


UPD SuperConstructorInvocation@@super(new BasicAWSCredentials("myAccessKey","mySecretKey"));
 @TO@ super();
 @AT@ 2812 @LENGTH@ 61
---DEL ClassInstanceCreation@@BasicAWSCredentials["myAccessKey", "mySecretKey"] @AT@ 2818 @LENGTH@ 53
------DEL New@@new @AT@ 2818 @LENGTH@ 3
------DEL SimpleType@@BasicAWSCredentials @AT@ 2822 @LENGTH@ 19
------DEL StringLiteral@@"myAccessKey" @AT@ 2842 @LENGTH@ 13
------DEL StringLiteral@@"mySecretKey" @AT@ 2857 @LENGTH@ 13


UPD VariableDeclarationStatement@@Cache<?,?> cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2117 @LENGTH@ 172
---UPD VariableDeclarationFragment@@cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2129 @LENGTH@ 159
------UPD MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2137 @LENGTH@ 151
---------DEL SimpleName@@Name:ServiceContainerHelper @AT@ 2137 @LENGTH@ 22
---------INS ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2140 @LENGTH@ 157
------------INS New@@new @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2140 @LENGTH@ 3
------------INS ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2144 @LENGTH@ 35
---------------INS SimpleType@@PassiveServiceSupplier @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2144 @LENGTH@ 22
---------------INS ParameterizedType@@Cache<?,?> @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2167 @LENGTH@ 11
------------------INS SimpleType@@Cache @TO@ ParameterizedType@@Cache<?,?> @AT@ 2167 @LENGTH@ 5
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2173 @LENGTH@ 1
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2176 @LENGTH@ 1
------------INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2180 @LENGTH@ 32
---------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2170 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2178 @LENGTH@ 25
------------------UPD BooleanLiteral@@false @TO@ true @AT@ 2197 @LENGTH@ 5
------------MOV MethodInvocation@@InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2205 @LENGTH@ 82
---------DEL SimpleName@@MethodName:findValue:[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2160 @LENGTH@ 128
------------DEL MethodInvocation@@context.getServiceRegistry(false) @AT@ 2170 @LENGTH@ 33
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2298 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:addTrustedPackages, String... packages,  @TO@ public, void, MethodName:addTrustedPackages, @Nullable String... packages,  @AT@ 3458 @LENGTH@ 87
---UPD SingleVariableDeclaration@@String... packages @TO@ @Nullable String... packages @AT@ 3489 @LENGTH@ 18


INS VariableDeclarationStatement@@String principalName=currentAuthentication != null ? currentAuthentication.getName() : "anonymousUser"; @TO@ MethodDeclaration@@private, void, MethodName:processAuthorizationResponse, HttpServletRequest request, HttpServletResponse response, ServletException, IOException,  @AT@ 10217 @LENGTH@ 105
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String principalName=currentAuthentication != null ? currentAuthentication.getName() : "anonymousUser"; @AT@ 10217 @LENGTH@ 6
---INS VariableDeclarationFragment@@principalName=currentAuthentication != null ? currentAuthentication.getName() : "anonymousUser" @TO@ VariableDeclarationStatement@@String principalName=currentAuthentication != null ? currentAuthentication.getName() : "anonymousUser"; @AT@ 10224 @LENGTH@ 97
------INS SimpleName@@principalName @TO@ VariableDeclarationFragment@@principalName=currentAuthentication != null ? currentAuthentication.getName() : "anonymousUser" @AT@ 10224 @LENGTH@ 13
------INS ConditionalExpression@@currentAuthentication != null ? currentAuthentication.getName() : "anonymousUser" @TO@ VariableDeclarationFragment@@principalName=currentAuthentication != null ? currentAuthentication.getName() : "anonymousUser" @AT@ 10240 @LENGTH@ 81
---------INS InfixExpression@@currentAuthentication != null @TO@ ConditionalExpression@@currentAuthentication != null ? currentAuthentication.getName() : "anonymousUser" @AT@ 10240 @LENGTH@ 29
------------INS SimpleName@@currentAuthentication @TO@ InfixExpression@@currentAuthentication != null @AT@ 10240 @LENGTH@ 21
------------INS Operator@@!= @TO@ InfixExpression@@currentAuthentication != null @AT@ 10261 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@currentAuthentication != null @AT@ 10265 @LENGTH@ 4
---------INS MethodInvocation@@currentAuthentication.getName() @TO@ ConditionalExpression@@currentAuthentication != null ? currentAuthentication.getName() : "anonymousUser" @AT@ 10272 @LENGTH@ 31
------------INS SimpleName@@Name:currentAuthentication @TO@ MethodInvocation@@currentAuthentication.getName() @AT@ 10272 @LENGTH@ 21
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@currentAuthentication.getName() @AT@ 10294 @LENGTH@ 9
---------INS StringLiteral@@"anonymousUser" @TO@ ConditionalExpression@@currentAuthentication != null ? currentAuthentication.getName() : "anonymousUser" @AT@ 10306 @LENGTH@ 15


INS IfStatement@@if (convertedObject == null) {  throw new MessageConversionException("Message converter returned null");} @TO@ MethodDeclaration@@public, Object, MethodName:fromMessage, org.springframework.amqp.core.Message message, MessageConversionException,  @AT@ 4589 @LENGTH@ 110
---INS InfixExpression@@convertedObject == null @TO@ IfStatement@@if (convertedObject == null) {  throw new MessageConversionException("Message converter returned null");} @AT@ 4593 @LENGTH@ 23
------INS SimpleName@@convertedObject @TO@ InfixExpression@@convertedObject == null @AT@ 4593 @LENGTH@ 15
------INS Operator@@== @TO@ InfixExpression@@convertedObject == null @AT@ 4608 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@convertedObject == null @AT@ 4612 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new MessageConversionException("Message converter returned null");} @TO@ IfStatement@@if (convertedObject == null) {  throw new MessageConversionException("Message converter returned null");} @AT@ 4618 @LENGTH@ 81
------INS ThrowStatement@@ClassInstanceCreation:new MessageConversionException("Message converter returned null") @TO@ Block@@ThenBody:{  throw new MessageConversionException("Message converter returned null");} @AT@ 4623 @LENGTH@ 72
---------INS ClassInstanceCreation@@MessageConversionException["Message converter returned null"] @TO@ ThrowStatement@@ClassInstanceCreation:new MessageConversionException("Message converter returned null") @AT@ 4629 @LENGTH@ 65
------------INS New@@new @TO@ ClassInstanceCreation@@MessageConversionException["Message converter returned null"] @AT@ 4629 @LENGTH@ 3
------------INS SimpleType@@MessageConversionException @TO@ ClassInstanceCreation@@MessageConversionException["Message converter returned null"] @AT@ 4633 @LENGTH@ 26
------------INS StringLiteral@@"Message converter returned null" @TO@ ClassInstanceCreation@@MessageConversionException["Message converter returned null"] @AT@ 4660 @LENGTH@ 33


UPD MethodDeclaration@@protected, Message<?>, MethodName:convertAmqpMessage, org.springframework.amqp.core.Message message,  @TO@ protected, Message<?>, MethodName:convertAmqpMessage, @Nullable org.springframework.amqp.core.Message message,  @AT@ 8812 @LENGTH@ 332
---UPD SingleVariableDeclaration@@org.springframework.amqp.core.Message message @TO@ @Nullable org.springframework.amqp.core.Message message @AT@ 8852 @LENGTH@ 45


UPD MethodDeclaration@@public, Mono<Authentication>, MethodName:apply, ServerWebExchange exchange,  @TO@ public, Mono<Authentication>, MethodName:convert, ServerWebExchange exchange,  @AT@ 1407 @LENGTH@ 825
---UPD SimpleName@@MethodName:apply @TO@ MethodName:convert @AT@ 1435 @LENGTH@ 5


INS IfStatement@@if (errorObject == null) {  oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);} else {  oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);} @TO@ MethodDeclaration@@private, static, Mono<AccessTokenResponse>, MethodName:oauth2AccessTokenResponse, TokenResponse tokenResponse,  @AT@ 3615 @LENGTH@ 344
---INS InfixExpression@@errorObject == null @TO@ IfStatement@@if (errorObject == null) {  oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);} else {  oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);} @AT@ 3619 @LENGTH@ 19
------INS SimpleName@@errorObject @TO@ InfixExpression@@errorObject == null @AT@ 3619 @LENGTH@ 11
------INS Operator@@== @TO@ InfixExpression@@errorObject == null @AT@ 3630 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@errorObject == null @AT@ 3634 @LENGTH@ 4
---INS Block@@ThenBody:{  oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);} @TO@ IfStatement@@if (errorObject == null) {  oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);} else {  oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);} @AT@ 3640 @LENGTH@ 70
------INS ExpressionStatement@@Assignment:oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR) @TO@ Block@@ThenBody:{  oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);} @AT@ 3645 @LENGTH@ 61
---------INS Assignment@@oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR) @TO@ ExpressionStatement@@Assignment:oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR) @AT@ 3645 @LENGTH@ 60
------------INS SimpleName@@oauth2Error @TO@ Assignment@@oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR) @AT@ 3645 @LENGTH@ 11
------------INS Operator@@= @TO@ Assignment@@oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR) @AT@ 3656 @LENGTH@ 1
------------INS ClassInstanceCreation@@OAuth2Error[OAuth2ErrorCodes.SERVER_ERROR] @TO@ Assignment@@oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR) @AT@ 3659 @LENGTH@ 46
---------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Error[OAuth2ErrorCodes.SERVER_ERROR] @AT@ 3659 @LENGTH@ 3
---------------INS SimpleType@@OAuth2Error @TO@ ClassInstanceCreation@@OAuth2Error[OAuth2ErrorCodes.SERVER_ERROR] @AT@ 3663 @LENGTH@ 11
---------------INS QualifiedName@@OAuth2ErrorCodes.SERVER_ERROR @TO@ ClassInstanceCreation@@OAuth2Error[OAuth2ErrorCodes.SERVER_ERROR] @AT@ 3675 @LENGTH@ 29
------------------INS SimpleName@@OAuth2ErrorCodes @TO@ QualifiedName@@OAuth2ErrorCodes.SERVER_ERROR @AT@ 3675 @LENGTH@ 16
------------------INS SimpleName@@SERVER_ERROR @TO@ QualifiedName@@OAuth2ErrorCodes.SERVER_ERROR @AT@ 3692 @LENGTH@ 12
---INS Block@@ElseBody:{  oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);} @TO@ IfStatement@@if (errorObject == null) {  oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);} else {  oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);} @AT@ 3716 @LENGTH@ 243
------INS ExpressionStatement@@Assignment:oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null) @TO@ Block@@ElseBody:{  oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);} @AT@ 3721 @LENGTH@ 234
---------INS Assignment@@oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null) @TO@ ExpressionStatement@@Assignment:oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null) @AT@ 3721 @LENGTH@ 233
------------MOV ClassInstanceCreation@@OAuth2Error[errorObject.getCode(), errorObject.getDescription(), (errorObject.getURI() != null ? errorObject.getURI().toString() : null)] @TO@ Assignment@@oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null) @AT@ 3548 @LENGTH@ 153
---------------DEL MethodInvocation@@errorObject.getCode() @AT@ 3564 @LENGTH@ 21
---------------DEL ParenthesizedExpression@@(errorObject.getURI() != null ? errorObject.getURI().toString() : null) @AT@ 3621 @LENGTH@ 79
---------------MOV ConditionalExpression@@errorObject.getURI() != null ? errorObject.getURI().toString() : null @TO@ ClassInstanceCreation@@OAuth2Error[errorObject.getCode(), errorObject.getDescription(), (errorObject.getURI() != null ? errorObject.getURI().toString() : null)] @AT@ 3622 @LENGTH@ 77
---------------INS ConditionalExpression@@errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR @TO@ ClassInstanceCreation@@OAuth2Error[errorObject.getCode(), errorObject.getDescription(), (errorObject.getURI() != null ? errorObject.getURI().toString() : null)] @AT@ 3757 @LENGTH@ 85
------------------INS InfixExpression@@errorObject.getCode() != null @TO@ ConditionalExpression@@errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR @AT@ 3757 @LENGTH@ 29
---------------------INS MethodInvocation@@errorObject.getCode() @TO@ InfixExpression@@errorObject.getCode() != null @AT@ 3757 @LENGTH@ 21
------------------------MOV SimpleName@@Name:errorObject @TO@ MethodInvocation@@errorObject.getCode() @AT@ 3564 @LENGTH@ 11
------------------------MOV SimpleName@@Name:errorObject @TO@ MethodInvocation@@errorObject.getCode() @AT@ 3564 @LENGTH@ 11
------------------------MOV SimpleName@@MethodName:getCode:[] @TO@ MethodInvocation@@errorObject.getCode() @AT@ 3576 @LENGTH@ 9
------------------------MOV SimpleName@@MethodName:getCode:[] @TO@ MethodInvocation@@errorObject.getCode() @AT@ 3576 @LENGTH@ 9
---------------------INS Operator@@!= @TO@ InfixExpression@@errorObject.getCode() != null @AT@ 3778 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@errorObject.getCode() != null @AT@ 3782 @LENGTH@ 4
------------------INS MethodInvocation@@errorObject.getCode() @TO@ ConditionalExpression@@errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR @AT@ 3789 @LENGTH@ 21
---------------------INS SimpleName@@Name:errorObject @TO@ MethodInvocation@@errorObject.getCode() @AT@ 3789 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:getCode:[] @TO@ MethodInvocation@@errorObject.getCode() @AT@ 3801 @LENGTH@ 9
------------------INS QualifiedName@@OAuth2ErrorCodes.SERVER_ERROR @TO@ ConditionalExpression@@errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR @AT@ 3813 @LENGTH@ 29
---------------------INS SimpleName@@OAuth2ErrorCodes @TO@ QualifiedName@@OAuth2ErrorCodes.SERVER_ERROR @AT@ 3813 @LENGTH@ 16
---------------------INS SimpleName@@SERVER_ERROR @TO@ QualifiedName@@OAuth2ErrorCodes.SERVER_ERROR @AT@ 3830 @LENGTH@ 12
------------INS SimpleName@@oauth2Error @TO@ Assignment@@oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null) @AT@ 3721 @LENGTH@ 11
------------INS Operator@@= @TO@ Assignment@@oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null) @AT@ 3732 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:configurator.configure(support).build(target).setInitialMode(Mode.ON_DEMAND).install() @TO@ MethodInvocation:configurator.configure(support).build(target).install() @AT@ 5748 @LENGTH@ 87
---UPD MethodInvocation@@configurator.configure(support).build(target).setInitialMode(Mode.ON_DEMAND).install() @TO@ configurator.configure(support).build(target).install() @AT@ 5748 @LENGTH@ 86
------DEL MethodInvocation@@MethodName:setInitialMode:[Mode.ON_DEMAND] @AT@ 5748 @LENGTH@ 76
---------DEL QualifiedName@@Mode.ON_DEMAND @AT@ 5809 @LENGTH@ 14
------------DEL SimpleName@@Mode @AT@ 5809 @LENGTH@ 4
------------DEL SimpleName@@ON_DEMAND @AT@ 5814 @LENGTH@ 9


INS VariableDeclarationStatement@@Object sortTerm=getAndRemoveOrResolveReferenceParameter(parameters,"sortTerm",Object.class); @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 3304 @LENGTH@ 96
---INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object sortTerm=getAndRemoveOrResolveReferenceParameter(parameters,"sortTerm",Object.class); @AT@ 3304 @LENGTH@ 6
---INS VariableDeclarationFragment@@sortTerm=getAndRemoveOrResolveReferenceParameter(parameters,"sortTerm",Object.class) @TO@ VariableDeclarationStatement@@Object sortTerm=getAndRemoveOrResolveReferenceParameter(parameters,"sortTerm",Object.class); @AT@ 3311 @LENGTH@ 88
------INS SimpleName@@sortTerm @TO@ VariableDeclarationFragment@@sortTerm=getAndRemoveOrResolveReferenceParameter(parameters,"sortTerm",Object.class) @AT@ 3311 @LENGTH@ 8
------INS MethodInvocation@@getAndRemoveOrResolveReferenceParameter(parameters,"sortTerm",Object.class) @TO@ VariableDeclarationFragment@@sortTerm=getAndRemoveOrResolveReferenceParameter(parameters,"sortTerm",Object.class) @AT@ 3322 @LENGTH@ 77
---------INS SimpleName@@MethodName:getAndRemoveOrResolveReferenceParameter:[parameters, "sortTerm", Object.class] @TO@ MethodInvocation@@getAndRemoveOrResolveReferenceParameter(parameters,"sortTerm",Object.class) @AT@ 3322 @LENGTH@ 77
------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:getAndRemoveOrResolveReferenceParameter:[parameters, "sortTerm", Object.class] @AT@ 3362 @LENGTH@ 10
------------INS StringLiteral@@"sortTerm" @TO@ SimpleName@@MethodName:getAndRemoveOrResolveReferenceParameter:[parameters, "sortTerm", Object.class] @AT@ 3374 @LENGTH@ 10
------------INS TypeLiteral@@Object.class @TO@ SimpleName@@MethodName:getAndRemoveOrResolveReferenceParameter:[parameters, "sortTerm", Object.class] @AT@ 3386 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:decodeWhenUnsignedTokenThenMessageDoesNotMentionClass,  @TO@ TypeDeclaration@@[public]NimbusReactiveJwtDecoderTests,  @AT@ 6915 @LENGTH@ 232
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenUnsignedTokenThenMessageDoesNotMentionClass,  @AT@ 6915 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenUnsignedTokenThenMessageDoesNotMentionClass,  @AT@ 6922 @LENGTH@ 4
---INS SimpleName@@MethodName:decodeWhenUnsignedTokenThenMessageDoesNotMentionClass @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenUnsignedTokenThenMessageDoesNotMentionClass,  @AT@ 6927 @LENGTH@ 53
---INS ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.decoder.decode(this.unsignedToken).block()).isInstanceOf(JwtException.class).hasMessage("Unsupported algorithm of none") @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenUnsignedTokenThenMessageDoesNotMentionClass,  @AT@ 6987 @LENGTH@ 157
------INS MethodInvocation@@assertThatCode(() -> this.decoder.decode(this.unsignedToken).block()).isInstanceOf(JwtException.class).hasMessage("Unsupported algorithm of none") @TO@ ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.decoder.decode(this.unsignedToken).block()).isInstanceOf(JwtException.class).hasMessage("Unsupported algorithm of none") @AT@ 6987 @LENGTH@ 156
---------INS MethodInvocation@@MethodName:isInstanceOf:[JwtException.class] @TO@ MethodInvocation@@assertThatCode(() -> this.decoder.decode(this.unsignedToken).block()).isInstanceOf(JwtException.class).hasMessage("Unsupported algorithm of none") @AT@ 6987 @LENGTH@ 107
------------INS TypeLiteral@@JwtException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[JwtException.class] @AT@ 7075 @LENGTH@ 18
---------INS MethodInvocation@@MethodName:assertThatCode:[() -> this.decoder.decode(this.unsignedToken).block()] @TO@ MethodInvocation@@assertThatCode(() -> this.decoder.decode(this.unsignedToken).block()).isInstanceOf(JwtException.class).hasMessage("Unsupported algorithm of none") @AT@ 6987 @LENGTH@ 69
------------INS LambdaExpression@@() -> this.decoder.decode(this.unsignedToken).block() @TO@ MethodInvocation@@MethodName:assertThatCode:[() -> this.decoder.decode(this.unsignedToken).block()] @AT@ 7002 @LENGTH@ 53
---------------INS MethodInvocation@@this.decoder.decode(this.unsignedToken).block() @TO@ LambdaExpression@@() -> this.decoder.decode(this.unsignedToken).block() @AT@ 7008 @LENGTH@ 47
------------------INS MethodInvocation@@MethodName:decode:[this.unsignedToken] @TO@ MethodInvocation@@this.decoder.decode(this.unsignedToken).block() @AT@ 7008 @LENGTH@ 39
---------------------INS FieldAccess@@this.unsignedToken @TO@ MethodInvocation@@MethodName:decode:[this.unsignedToken] @AT@ 7028 @LENGTH@ 18
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.unsignedToken @AT@ 7028 @LENGTH@ 4
------------------------INS SimpleName@@unsignedToken @TO@ FieldAccess@@this.unsignedToken @AT@ 7033 @LENGTH@ 13
------------------INS FieldAccess@@this.decoder @TO@ MethodInvocation@@this.decoder.decode(this.unsignedToken).block() @AT@ 7008 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.decoder @AT@ 7008 @LENGTH@ 4
---------------------INS SimpleName@@decoder @TO@ FieldAccess@@this.decoder @AT@ 7013 @LENGTH@ 7
------------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@this.decoder.decode(this.unsignedToken).block() @AT@ 7048 @LENGTH@ 7
---------INS SimpleName@@MethodName:hasMessage:["Unsupported algorithm of none"] @TO@ MethodInvocation@@assertThatCode(() -> this.decoder.decode(this.unsignedToken).block()).isInstanceOf(JwtException.class).hasMessage("Unsupported algorithm of none") @AT@ 7100 @LENGTH@ 43
------------INS StringLiteral@@"Unsupported algorithm of none" @TO@ SimpleName@@MethodName:hasMessage:["Unsupported algorithm of none"] @AT@ 7111 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:JvmOptionsBuilderFactory.getInstance().addOptions(jvmElement,command) @TO@ MethodInvocation:JvmOptionsBuilderFactory.getInstance(jdkType).addOptions(jvmElement,command) @AT@ 13283 @LENGTH@ 71
---UPD MethodInvocation@@JvmOptionsBuilderFactory.getInstance().addOptions(jvmElement,command) @TO@ JvmOptionsBuilderFactory.getInstance(jdkType).addOptions(jvmElement,command) @AT@ 13283 @LENGTH@ 70
------UPD MethodInvocation@@MethodName:getInstance:[] @TO@ MethodName:getInstance:[jdkType] @AT@ 13283 @LENGTH@ 38
---------INS SimpleName@@jdkType @TO@ MethodInvocation@@MethodName:getInstance:[] @AT@ 13320 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @TO@ TypeDeclaration@@[public]OAuth2LoginConfigurerTests,  @AT@ 7252 @LENGTH@ 926
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 7252 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 7259 @LENGTH@ 4
---INS SimpleName@@MethodName:oauth2LoginWhenAuthenticatedThenIgnored @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 7264 @LENGTH@ 39
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 7313 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:loadConfig(OAuth2LoginConfig.class) @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 7358 @LENGTH@ 36
------INS MethodInvocation@@loadConfig(OAuth2LoginConfig.class) @TO@ ExpressionStatement@@MethodInvocation:loadConfig(OAuth2LoginConfig.class) @AT@ 7358 @LENGTH@ 35
---------INS SimpleName@@MethodName:loadConfig:[OAuth2LoginConfig.class] @TO@ MethodInvocation@@loadConfig(OAuth2LoginConfig.class) @AT@ 7358 @LENGTH@ 35
------------INS TypeLiteral@@OAuth2LoginConfig.class @TO@ SimpleName@@MethodName:loadConfig:[OAuth2LoginConfig.class] @AT@ 7369 @LENGTH@ 23
---INS VariableDeclarationStatement@@TestingAuthenticationToken expectedAuthentication=new TestingAuthenticationToken("a","b","ROLE_TEST"); @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 7416 @LENGTH@ 110
------INS SimpleType@@TestingAuthenticationToken @TO@ VariableDeclarationStatement@@TestingAuthenticationToken expectedAuthentication=new TestingAuthenticationToken("a","b","ROLE_TEST"); @AT@ 7416 @LENGTH@ 26
------INS VariableDeclarationFragment@@expectedAuthentication=new TestingAuthenticationToken("a","b","ROLE_TEST") @TO@ VariableDeclarationStatement@@TestingAuthenticationToken expectedAuthentication=new TestingAuthenticationToken("a","b","ROLE_TEST"); @AT@ 7443 @LENGTH@ 82
---------INS SimpleName@@expectedAuthentication @TO@ VariableDeclarationFragment@@expectedAuthentication=new TestingAuthenticationToken("a","b","ROLE_TEST") @AT@ 7443 @LENGTH@ 22
---------INS ClassInstanceCreation@@TestingAuthenticationToken["a", "b", "ROLE_TEST"] @TO@ VariableDeclarationFragment@@expectedAuthentication=new TestingAuthenticationToken("a","b","ROLE_TEST") @AT@ 7468 @LENGTH@ 57
------------INS New@@new @TO@ ClassInstanceCreation@@TestingAuthenticationToken["a", "b", "ROLE_TEST"] @AT@ 7468 @LENGTH@ 3
------------INS SimpleType@@TestingAuthenticationToken @TO@ ClassInstanceCreation@@TestingAuthenticationToken["a", "b", "ROLE_TEST"] @AT@ 7472 @LENGTH@ 26
------------INS StringLiteral@@"a" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["a", "b", "ROLE_TEST"] @AT@ 7499 @LENGTH@ 3
------------INS StringLiteral@@"b" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["a", "b", "ROLE_TEST"] @AT@ 7508 @LENGTH@ 3
------------INS StringLiteral@@"ROLE_TEST" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["a", "b", "ROLE_TEST"] @AT@ 7513 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:this.request.getSession().setAttribute(HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY,new SecurityContextImpl(expectedAuthentication)) @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 7530 @LENGTH@ 154
------INS MethodInvocation@@this.request.getSession().setAttribute(HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY,new SecurityContextImpl(expectedAuthentication)) @TO@ ExpressionStatement@@MethodInvocation:this.request.getSession().setAttribute(HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY,new SecurityContextImpl(expectedAuthentication)) @AT@ 7530 @LENGTH@ 153
---------INS MethodInvocation@@MethodName:getSession:[] @TO@ MethodInvocation@@this.request.getSession().setAttribute(HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY,new SecurityContextImpl(expectedAuthentication)) @AT@ 7530 @LENGTH@ 25
---------INS FieldAccess@@this.request @TO@ MethodInvocation@@this.request.getSession().setAttribute(HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY,new SecurityContextImpl(expectedAuthentication)) @AT@ 7530 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 7530 @LENGTH@ 4
------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 7535 @LENGTH@ 7
---------INS SimpleName@@MethodName:setAttribute:[HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY, new SecurityContextImpl(expectedAuthentication)] @TO@ MethodInvocation@@this.request.getSession().setAttribute(HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY,new SecurityContextImpl(expectedAuthentication)) @AT@ 7556 @LENGTH@ 127
------------INS QualifiedName@@HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY @TO@ SimpleName@@MethodName:setAttribute:[HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY, new SecurityContextImpl(expectedAuthentication)] @AT@ 7569 @LENGTH@ 64
---------------INS SimpleName@@HttpSessionSecurityContextRepository @TO@ QualifiedName@@HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY @AT@ 7569 @LENGTH@ 36
---------------INS SimpleName@@SPRING_SECURITY_CONTEXT_KEY @TO@ QualifiedName@@HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY @AT@ 7606 @LENGTH@ 27
------------INS ClassInstanceCreation@@SecurityContextImpl[expectedAuthentication] @TO@ SimpleName@@MethodName:setAttribute:[HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY, new SecurityContextImpl(expectedAuthentication)] @AT@ 7635 @LENGTH@ 47
---------------INS New@@new @TO@ ClassInstanceCreation@@SecurityContextImpl[expectedAuthentication] @AT@ 7635 @LENGTH@ 3
---------------INS SimpleType@@SecurityContextImpl @TO@ ClassInstanceCreation@@SecurityContextImpl[expectedAuthentication] @AT@ 7639 @LENGTH@ 19
---------------INS SimpleName@@expectedAuthentication @TO@ ClassInstanceCreation@@SecurityContextImpl[expectedAuthentication] @AT@ 7659 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:this.request.setParameter("code","code123") @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 7725 @LENGTH@ 45
------INS MethodInvocation@@this.request.setParameter("code","code123") @TO@ ExpressionStatement@@MethodInvocation:this.request.setParameter("code","code123") @AT@ 7725 @LENGTH@ 44
---------INS FieldAccess@@this.request @TO@ MethodInvocation@@this.request.setParameter("code","code123") @AT@ 7725 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 7725 @LENGTH@ 4
------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 7730 @LENGTH@ 7
---------INS SimpleName@@MethodName:setParameter:["code", "code123"] @TO@ MethodInvocation@@this.request.setParameter("code","code123") @AT@ 7738 @LENGTH@ 31
------------INS StringLiteral@@"code" @TO@ SimpleName@@MethodName:setParameter:["code", "code123"] @AT@ 7751 @LENGTH@ 6
------------INS StringLiteral@@"code123" @TO@ SimpleName@@MethodName:setParameter:["code", "code123"] @AT@ 7759 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:this.request.setParameter("state","state") @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 7773 @LENGTH@ 44
------INS MethodInvocation@@this.request.setParameter("state","state") @TO@ ExpressionStatement@@MethodInvocation:this.request.setParameter("state","state") @AT@ 7773 @LENGTH@ 43
---------INS FieldAccess@@this.request @TO@ MethodInvocation@@this.request.setParameter("state","state") @AT@ 7773 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 7773 @LENGTH@ 4
------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 7778 @LENGTH@ 7
---------INS SimpleName@@MethodName:setParameter:["state", "state"] @TO@ MethodInvocation@@this.request.setParameter("state","state") @AT@ 7786 @LENGTH@ 30
------------INS StringLiteral@@"state" @TO@ SimpleName@@MethodName:setParameter:["state", "state"] @AT@ 7799 @LENGTH@ 7
------------INS StringLiteral@@"state" @TO@ SimpleName@@MethodName:setParameter:["state", "state"] @AT@ 7808 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain) @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 7839 @LENGTH@ 87
------INS MethodInvocation@@this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain) @TO@ ExpressionStatement@@MethodInvocation:this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain) @AT@ 7839 @LENGTH@ 86
---------INS FieldAccess@@this.springSecurityFilterChain @TO@ MethodInvocation@@this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain) @AT@ 7839 @LENGTH@ 30
------------INS ThisExpression@@this @TO@ FieldAccess@@this.springSecurityFilterChain @AT@ 7839 @LENGTH@ 4
------------INS SimpleName@@springSecurityFilterChain @TO@ FieldAccess@@this.springSecurityFilterChain @AT@ 7844 @LENGTH@ 25
---------INS SimpleName@@MethodName:doFilter:[this.request, this.response, this.filterChain] @TO@ MethodInvocation@@this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain) @AT@ 7870 @LENGTH@ 55
------------INS FieldAccess@@this.request @TO@ SimpleName@@MethodName:doFilter:[this.request, this.response, this.filterChain] @AT@ 7879 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 7879 @LENGTH@ 4
---------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 7884 @LENGTH@ 7
------------INS FieldAccess@@this.response @TO@ SimpleName@@MethodName:doFilter:[this.request, this.response, this.filterChain] @AT@ 7893 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 7893 @LENGTH@ 4
---------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 7898 @LENGTH@ 8
------------INS FieldAccess@@this.filterChain @TO@ SimpleName@@MethodName:doFilter:[this.request, this.response, this.filterChain] @AT@ 7908 @LENGTH@ 16
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.filterChain @AT@ 7908 @LENGTH@ 4
---------------INS SimpleName@@filterChain @TO@ FieldAccess@@this.filterChain @AT@ 7913 @LENGTH@ 11
---INS VariableDeclarationStatement@@Authentication authentication=this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication(); @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 7946 @LENGTH@ 165
------INS SimpleType@@Authentication @TO@ VariableDeclarationStatement@@Authentication authentication=this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication(); @AT@ 7946 @LENGTH@ 14
------INS VariableDeclarationFragment@@authentication=this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication() @TO@ VariableDeclarationStatement@@Authentication authentication=this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication(); @AT@ 7961 @LENGTH@ 149
---------INS SimpleName@@authentication @TO@ VariableDeclarationFragment@@authentication=this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication() @AT@ 7961 @LENGTH@ 14
---------INS MethodInvocation@@this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication() @TO@ VariableDeclarationFragment@@authentication=this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication() @AT@ 7978 @LENGTH@ 132
------------INS MethodInvocation@@MethodName:loadContext:[new HttpRequestResponseHolder(this.request,this.response)] @TO@ MethodInvocation@@this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication() @AT@ 7978 @LENGTH@ 107
---------------INS ClassInstanceCreation@@HttpRequestResponseHolder[this.request, this.response] @TO@ MethodInvocation@@MethodName:loadContext:[new HttpRequestResponseHolder(this.request,this.response)] @AT@ 8026 @LENGTH@ 58
------------------INS New@@new @TO@ ClassInstanceCreation@@HttpRequestResponseHolder[this.request, this.response] @AT@ 8026 @LENGTH@ 3
------------------INS SimpleType@@HttpRequestResponseHolder @TO@ ClassInstanceCreation@@HttpRequestResponseHolder[this.request, this.response] @AT@ 8030 @LENGTH@ 25
------------------INS FieldAccess@@this.request @TO@ ClassInstanceCreation@@HttpRequestResponseHolder[this.request, this.response] @AT@ 8056 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 8056 @LENGTH@ 4
---------------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 8061 @LENGTH@ 7
------------------INS FieldAccess@@this.response @TO@ ClassInstanceCreation@@HttpRequestResponseHolder[this.request, this.response] @AT@ 8070 @LENGTH@ 13
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 8070 @LENGTH@ 4
---------------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 8075 @LENGTH@ 8
------------INS FieldAccess@@this.securityContextRepository @TO@ MethodInvocation@@this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication() @AT@ 7978 @LENGTH@ 30
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.securityContextRepository @AT@ 7978 @LENGTH@ 4
---------------INS SimpleName@@securityContextRepository @TO@ FieldAccess@@this.securityContextRepository @AT@ 7983 @LENGTH@ 25
------------INS SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication() @AT@ 8091 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertThat(authentication).isEqualTo(expectedAuthentication) @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 8114 @LENGTH@ 61
------INS MethodInvocation@@assertThat(authentication).isEqualTo(expectedAuthentication) @TO@ ExpressionStatement@@MethodInvocation:assertThat(authentication).isEqualTo(expectedAuthentication) @AT@ 8114 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:assertThat:[authentication] @TO@ MethodInvocation@@assertThat(authentication).isEqualTo(expectedAuthentication) @AT@ 8114 @LENGTH@ 26
------------INS SimpleName@@authentication @TO@ MethodInvocation@@MethodName:assertThat:[authentication] @AT@ 8125 @LENGTH@ 14
---------INS SimpleName@@MethodName:isEqualTo:[expectedAuthentication] @TO@ MethodInvocation@@assertThat(authentication).isEqualTo(expectedAuthentication) @AT@ 8141 @LENGTH@ 33
------------INS SimpleName@@expectedAuthentication @TO@ SimpleName@@MethodName:isEqualTo:[expectedAuthentication] @AT@ 8151 @LENGTH@ 22


UPD MethodDeclaration@@public, voidMethodName:BlockingQueueConsumer, ConnectionFactory connectionFactory, MessagePropertiesConverter messagePropertiesConverter, ActiveObjectCounter<BlockingQueueConsumer> activeObjectCounter, AcknowledgeMode acknowledgeMode, boolean transactional, int prefetchCount, boolean defaultRequeueRejected, Map<String,Object> consumerArgs, String... queues,  @TO@ public, voidMethodName:BlockingQueueConsumer, ConnectionFactory connectionFactory, MessagePropertiesConverter messagePropertiesConverter, ActiveObjectCounter<BlockingQueueConsumer> activeObjectCounter, AcknowledgeMode acknowledgeMode, boolean transactional, int prefetchCount, boolean defaultRequeueRejected, @Nullable Map<String,Object> consumerArgs, String... queues,  @AT@ 8249 @LENGTH@ 540
---UPD SingleVariableDeclaration@@Map<String,Object> consumerArgs @TO@ @Nullable Map<String,Object> consumerArgs @AT@ 8553 @LENGTH@ 32


DEL ExpressionStatement@@MethodInvocation:this.headers.hsts().maxAge(Duration.ofSeconds(60)) @AT@ 3963 @LENGTH@ 51


UPD MethodDeclaration@@private, FixedWidthFieldLengths, MethodName:createFixedWidthFieldLengths,  @TO@ private, FixedWidthFields, MethodName:createFixedWidthFieldLengths,  @AT@ 6780 @LENGTH@ 1217
---UPD SimpleType@@FixedWidthFieldLengths @TO@ FixedWidthFields @AT@ 6788 @LENGTH@ 22
---UPD IfStatement@@if (headers == null) {  return new FixedWidthFieldLengths(fieldLengths);} @TO@ if (headers == null) {  return new FixedWidthFields(fieldLengths);} @AT@ 7159 @LENGTH@ 95
------UPD Block@@ThenBody:{  return new FixedWidthFieldLengths(fieldLengths);} @TO@ ThenBody:{  return new FixedWidthFields(fieldLengths);} @AT@ 7180 @LENGTH@ 74
---------UPD ReturnStatement@@ClassInstanceCreation:new FixedWidthFieldLengths(fieldLengths) @TO@ ClassInstanceCreation:new FixedWidthFields(fieldLengths) @AT@ 7195 @LENGTH@ 48
------------UPD ClassInstanceCreation@@FixedWidthFieldLengths[fieldLengths] @TO@ FixedWidthFields[fieldLengths] @AT@ 7202 @LENGTH@ 40
---------------UPD SimpleType@@FixedWidthFieldLengths @TO@ FixedWidthFields @AT@ 7206 @LENGTH@ 22
---UPD ReturnStatement@@ClassInstanceCreation:new FixedWidthFieldLengths(fields) @TO@ ClassInstanceCreation:new FixedWidthFields(fields) @AT@ 7948 @LENGTH@ 42
------UPD ClassInstanceCreation@@FixedWidthFieldLengths[fields] @TO@ FixedWidthFields[fields] @AT@ 7955 @LENGTH@ 34
---------UPD SimpleType@@FixedWidthFieldLengths @TO@ FixedWidthFields @AT@ 7959 @LENGTH@ 22


INS MethodDeclaration@@protected, String, MethodName:getBeanName,  @TO@ TypeDeclaration@@[public, abstract]AbstractConnectionFactory, [ConnectionFactory, DisposableBean, BeanNameAware, ApplicationContextAware, ApplicationEventPublisherAware, ApplicationListener<ContextClosedEvent>] @AT@ 13933 @LENGTH@ 59
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, String, MethodName:getBeanName,  @AT@ 13933 @LENGTH@ 9
---INS SimpleType@@String @TO@ MethodDeclaration@@protected, String, MethodName:getBeanName,  @AT@ 13943 @LENGTH@ 6
---INS SimpleName@@MethodName:getBeanName @TO@ MethodDeclaration@@protected, String, MethodName:getBeanName,  @AT@ 13950 @LENGTH@ 11
---INS ReturnStatement@@FieldAccess:this.beanName @TO@ MethodDeclaration@@protected, String, MethodName:getBeanName,  @AT@ 13968 @LENGTH@ 21
------INS FieldAccess@@this.beanName @TO@ ReturnStatement@@FieldAccess:this.beanName @AT@ 13975 @LENGTH@ 13
---------INS ThisExpression@@this @TO@ FieldAccess@@this.beanName @AT@ 13975 @LENGTH@ 4
---------INS SimpleName@@beanName @TO@ FieldAccess@@this.beanName @AT@ 13980 @LENGTH@ 8


UPD MethodDeclaration@@public, Void, MethodName:call, Exception,  @TO@ public, void, MethodName:run,  @AT@ 32711 @LENGTH@ 285
---DEL SimpleType@@Void @AT@ 32718 @LENGTH@ 4
---UPD SimpleName@@MethodName:call @TO@ MethodName:run @AT@ 32723 @LENGTH@ 4
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, Void, MethodName:call, Exception,  @AT@ 32723 @LENGTH@ 4
---DEL SimpleType@@Exception @AT@ 32737 @LENGTH@ 9
---DEL ReturnStatement@@NullLiteral:null @AT@ 32974 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 32981 @LENGTH@ 4


UPD SuperConstructorInvocation@@super(LocalCacheBuilder::new,LocalCacheServiceConfiguratorProvider.class);
 @TO@ super(LocalCacheServiceConfigurator::new,LocalCacheServiceConfiguratorProvider.class);
 @AT@ 1296 @LENGTH@ 75


UPD ExpressionStatement@@MethodInvocation:from("disruptor:bar?concurrentConsumers=10").to("mock:before").delay(2000).transform(body().prepend("Bye ")).to("mock:result") @TO@ MethodInvocation:from("disruptor:bar?concurrentConsumers=10").to("mock:before").delay(2000).syncDelayed().transform(body().prepend("Bye ")).to("mock:result") @AT@ 4722 @LENGTH@ 152
---UPD MethodInvocation@@from("disruptor:bar?concurrentConsumers=10").to("mock:before").delay(2000).transform(body().prepend("Bye ")).to("mock:result") @TO@ from("disruptor:bar?concurrentConsumers=10").to("mock:before").delay(2000).syncDelayed().transform(body().prepend("Bye ")).to("mock:result") @AT@ 4722 @LENGTH@ 151
------INS MethodInvocation@@MethodName:syncDelayed:[] @TO@ MethodInvocation@@from("disruptor:bar?concurrentConsumers=10").to("mock:before").delay(2000).transform(body().prepend("Bye ")).to("mock:result") @AT@ 4736 @LENGTH@ 88


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5146 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5166 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 5176 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5176 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5218 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 5225 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5225 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 5235 @LENGTH@ 1


UPD ReturnStatement@@ClassInstanceCreation:new OAuth2RefreshToken("refresh-token",Instant.now(),Instant.now().plus(Duration.ofDays(1))) @TO@ ClassInstanceCreation:new OAuth2RefreshToken("refresh-token",Instant.now()) @AT@ 862 @LENGTH@ 106
---UPD ClassInstanceCreation@@OAuth2RefreshToken["refresh-token", Instant.now(), Instant.now().plus(Duration.ofDays(1))] @TO@ OAuth2RefreshToken["refresh-token", Instant.now()] @AT@ 869 @LENGTH@ 98
------DEL MethodInvocation@@Instant.now().plus(Duration.ofDays(1)) @AT@ 928 @LENGTH@ 38
---------DEL MethodInvocation@@MethodName:now:[] @AT@ 928 @LENGTH@ 13
---------DEL SimpleName@@Name:Instant @AT@ 928 @LENGTH@ 7
---------DEL SimpleName@@MethodName:plus:[Duration.ofDays(1)] @AT@ 942 @LENGTH@ 24
------------DEL MethodInvocation@@Duration.ofDays(1) @AT@ 947 @LENGTH@ 18
---------------DEL SimpleName@@Name:Duration @AT@ 947 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:ofDays:[1] @AT@ 956 @LENGTH@ 9
------------------DEL NumberLiteral@@1 @AT@ 963 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:parseArguments(element,parserContext,builder) @TO@ MethodDeclaration@@protected, void, MethodName:doParse, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 3881 @LENGTH@ 48
---INS MethodInvocation@@parseArguments(element,parserContext,builder) @TO@ ExpressionStatement@@MethodInvocation:parseArguments(element,parserContext,builder) @AT@ 3881 @LENGTH@ 47
------INS SimpleName@@MethodName:parseArguments:[element, parserContext, builder] @TO@ MethodInvocation@@parseArguments(element,parserContext,builder) @AT@ 3881 @LENGTH@ 47
---------INS SimpleName@@element @TO@ SimpleName@@MethodName:parseArguments:[element, parserContext, builder] @AT@ 3896 @LENGTH@ 7
---------INS SimpleName@@parserContext @TO@ SimpleName@@MethodName:parseArguments:[element, parserContext, builder] @AT@ 3905 @LENGTH@ 13
---------INS SimpleName@@builder @TO@ SimpleName@@MethodName:parseArguments:[element, parserContext, builder] @AT@ 3920 @LENGTH@ 7


UPD VariableDeclarationStatement@@ReactiveJwtDecoder jwtDecoder=this.getJwtDecoder(); @TO@ ReactiveJwtDecoder jwtDecoder=getJwtDecoder(); @AT@ 31675 @LENGTH@ 53
---UPD VariableDeclarationFragment@@jwtDecoder=this.getJwtDecoder() @TO@ jwtDecoder=getJwtDecoder() @AT@ 31694 @LENGTH@ 33
------UPD MethodInvocation@@this.getJwtDecoder() @TO@ MethodName:getJwtDecoder:[] @AT@ 31707 @LENGTH@ 20
---------DEL ThisExpression@@this @AT@ 31707 @LENGTH@ 4
---------DEL SimpleName@@MethodName:getJwtDecoder:[] @AT@ 31712 @LENGTH@ 15


UPD TypeDeclaration@@[public]AmazonSQSClientMock, AmazonSQSClient @TO@ [public]AmazonSQSClientMock, AbstractAmazonSQS @AT@ 2281 @LENGTH@ 6008
---UPD SimpleType@@AmazonSQSClient @TO@ AbstractAmazonSQS @AT@ 2322 @LENGTH@ 15


UPD MethodDeclaration@@protected, void, MethodName:publishConsumerFailedEvent, String reason, boolean fatal, Throwable t,  @TO@ protected, void, MethodName:publishConsumerFailedEvent, String reason, boolean fatal, @Nullable Throwable t,  @AT@ 54713 @LENGTH@ 341
---UPD SingleVariableDeclaration@@Throwable t @TO@ @Nullable Throwable t @AT@ 54785 @LENGTH@ 11


INS MethodDeclaration@@private, DBObject, MethodName:convertId, String key, Object idValue,  @TO@ TypeDeclaration@@SpringDataMongodbSerializer, MongodbSerializer @AT@ 4899 @LENGTH@ 292
---MOV ReturnStatement@@CastExpression:(DBObject)JSON.parse(mappedIdValue.toJson()) @TO@ MethodDeclaration@@private, DBObject, MethodName:convertId, String key, Object idValue,  @AT@ 4527 @LENGTH@ 53
---INS Modifier@@private @TO@ MethodDeclaration@@private, DBObject, MethodName:convertId, String key, Object idValue,  @AT@ 4899 @LENGTH@ 7
---INS SimpleType@@DBObject @TO@ MethodDeclaration@@private, DBObject, MethodName:convertId, String key, Object idValue,  @AT@ 4907 @LENGTH@ 8
---INS SimpleName@@MethodName:convertId @TO@ MethodDeclaration@@private, DBObject, MethodName:convertId, String key, Object idValue,  @AT@ 4916 @LENGTH@ 9
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@private, DBObject, MethodName:convertId, String key, Object idValue,  @AT@ 4926 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 4926 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 4933 @LENGTH@ 3
---INS SingleVariableDeclaration@@Object idValue @TO@ MethodDeclaration@@private, DBObject, MethodName:convertId, String key, Object idValue,  @AT@ 4938 @LENGTH@ 14
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object idValue @AT@ 4938 @LENGTH@ 6
------INS SimpleName@@idValue @TO@ SingleVariableDeclaration@@Object idValue @AT@ 4945 @LENGTH@ 7
---INS VariableDeclarationStatement@@Object convertedId=mapper.convertId(idValue); @TO@ MethodDeclaration@@private, DBObject, MethodName:convertId, String key, Object idValue,  @AT@ 4959 @LENGTH@ 47
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object convertedId=mapper.convertId(idValue); @AT@ 4959 @LENGTH@ 6
------INS VariableDeclarationFragment@@convertedId=mapper.convertId(idValue) @TO@ VariableDeclarationStatement@@Object convertedId=mapper.convertId(idValue); @AT@ 4966 @LENGTH@ 39
---------INS SimpleName@@convertedId @TO@ VariableDeclarationFragment@@convertedId=mapper.convertId(idValue) @AT@ 4966 @LENGTH@ 11
---------INS MethodInvocation@@mapper.convertId(idValue) @TO@ VariableDeclarationFragment@@convertedId=mapper.convertId(idValue) @AT@ 4980 @LENGTH@ 25
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.convertId(idValue) @AT@ 4980 @LENGTH@ 6
------------INS SimpleName@@MethodName:convertId:[idValue] @TO@ MethodInvocation@@mapper.convertId(idValue) @AT@ 4987 @LENGTH@ 18
---------------INS SimpleName@@idValue @TO@ SimpleName@@MethodName:convertId:[idValue] @AT@ 4997 @LENGTH@ 7
---INS VariableDeclarationStatement@@Document mappedIdValue=mapper.getMappedObject((BasicDBObject)super.asDBObject(key,convertedId),Optional.empty()); @TO@ MethodDeclaration@@private, DBObject, MethodName:convertId, String key, Object idValue,  @AT@ 5010 @LENGTH@ 122
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document mappedIdValue=mapper.getMappedObject((BasicDBObject)super.asDBObject(key,convertedId),Optional.empty()); @AT@ 5010 @LENGTH@ 8
------INS VariableDeclarationFragment@@mappedIdValue=mapper.getMappedObject((BasicDBObject)super.asDBObject(key,convertedId),Optional.empty()) @TO@ VariableDeclarationStatement@@Document mappedIdValue=mapper.getMappedObject((BasicDBObject)super.asDBObject(key,convertedId),Optional.empty()); @AT@ 5019 @LENGTH@ 112
---------INS SimpleName@@mappedIdValue @TO@ VariableDeclarationFragment@@mappedIdValue=mapper.getMappedObject((BasicDBObject)super.asDBObject(key,convertedId),Optional.empty()) @AT@ 5019 @LENGTH@ 13
---------INS MethodInvocation@@mapper.getMappedObject((BasicDBObject)super.asDBObject(key,convertedId),Optional.empty()) @TO@ VariableDeclarationFragment@@mappedIdValue=mapper.getMappedObject((BasicDBObject)super.asDBObject(key,convertedId),Optional.empty()) @AT@ 5035 @LENGTH@ 96
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject((BasicDBObject)super.asDBObject(key,convertedId),Optional.empty()) @AT@ 5035 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[(BasicDBObject)super.asDBObject(key,convertedId), Optional.empty()] @TO@ MethodInvocation@@mapper.getMappedObject((BasicDBObject)super.asDBObject(key,convertedId),Optional.empty()) @AT@ 5042 @LENGTH@ 89
---------------INS CastExpression@@(BasicDBObject)super.asDBObject(key,convertedId) @TO@ SimpleName@@MethodName:getMappedObject:[(BasicDBObject)super.asDBObject(key,convertedId), Optional.empty()] @AT@ 5058 @LENGTH@ 50
------------------INS SimpleType@@BasicDBObject @TO@ CastExpression@@(BasicDBObject)super.asDBObject(key,convertedId) @AT@ 5059 @LENGTH@ 13
------------------INS SuperMethodInvocation@@super.asDBObject(key,convertedId) @TO@ CastExpression@@(BasicDBObject)super.asDBObject(key,convertedId) @AT@ 5074 @LENGTH@ 34
---------------------INS SimpleName@@MethodName:asDBObject:[key, convertedId] @TO@ SuperMethodInvocation@@super.asDBObject(key,convertedId) @AT@ 5080 @LENGTH@ 10
---------------------INS SimpleName@@key @TO@ SuperMethodInvocation@@super.asDBObject(key,convertedId) @AT@ 5091 @LENGTH@ 3
---------------------INS SimpleName@@convertedId @TO@ SuperMethodInvocation@@super.asDBObject(key,convertedId) @AT@ 5096 @LENGTH@ 11
---------------INS MethodInvocation@@Optional.empty() @TO@ SimpleName@@MethodName:getMappedObject:[(BasicDBObject)super.asDBObject(key,convertedId), Optional.empty()] @AT@ 5114 @LENGTH@ 16
------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.empty() @AT@ 5114 @LENGTH@ 8
------------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Optional.empty() @AT@ 5123 @LENGTH@ 7


UPD EnhancedForStatement@@for (CapabilityServiceConfigurator configurator : Arrays.asList(factoryConfigurator,codecBuilder)) {  configurator.configure(support).build(target).setInitialMode(Mode.ON_DEMAND).install();} @TO@ for (CapabilityServiceConfigurator configurator : Arrays.asList(factoryConfigurator,codecConfigurator)) {  configurator.configure(support).build(target).setInitialMode(Mode.ON_DEMAND).install();} @AT@ 5624 @LENGTH@ 211
---UPD MethodInvocation@@Arrays.asList(factoryConfigurator,codecBuilder) @TO@ Arrays.asList(factoryConfigurator,codecConfigurator) @AT@ 5674 @LENGTH@ 48
------UPD SimpleName@@MethodName:asList:[factoryConfigurator, codecBuilder] @TO@ MethodName:asList:[factoryConfigurator, codecConfigurator] @AT@ 5681 @LENGTH@ 41
---------UPD SimpleName@@codecBuilder @TO@ codecConfigurator @AT@ 5709 @LENGTH@ 12


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[public]MvcRequestMatcher, [RequestMatcher, RequestVariablesExtractor] @AT@ 4064 @LENGTH@ 362
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4064 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4071 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4078 @LENGTH@ 8
---INS VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4093 @LENGTH@ 39
------INS SimpleType@@StringBuilder @TO@ VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @AT@ 4093 @LENGTH@ 13
------INS VariableDeclarationFragment@@sb=new StringBuilder() @TO@ VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @AT@ 4107 @LENGTH@ 24
---------INS SimpleName@@sb @TO@ VariableDeclarationFragment@@sb=new StringBuilder() @AT@ 4107 @LENGTH@ 2
---------INS ClassInstanceCreation@@StringBuilder[] @TO@ VariableDeclarationFragment@@sb=new StringBuilder() @AT@ 4112 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 4112 @LENGTH@ 3
------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 4116 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:sb.append("Mvc [pattern='").append(this.pattern).append("'") @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4135 @LENGTH@ 61
------INS MethodInvocation@@sb.append("Mvc [pattern='").append(this.pattern).append("'") @TO@ ExpressionStatement@@MethodInvocation:sb.append("Mvc [pattern='").append(this.pattern).append("'") @AT@ 4135 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:append:[this.pattern] @TO@ MethodInvocation@@sb.append("Mvc [pattern='").append(this.pattern).append("'") @AT@ 4135 @LENGTH@ 48
------------INS FieldAccess@@this.pattern @TO@ MethodInvocation@@MethodName:append:[this.pattern] @AT@ 4170 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.pattern @AT@ 4170 @LENGTH@ 4
---------------INS SimpleName@@pattern @TO@ FieldAccess@@this.pattern @AT@ 4175 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:append:["Mvc [pattern='"] @TO@ MethodInvocation@@sb.append("Mvc [pattern='").append(this.pattern).append("'") @AT@ 4135 @LENGTH@ 27
------------INS StringLiteral@@"Mvc [pattern='" @TO@ MethodInvocation@@MethodName:append:["Mvc [pattern='"] @AT@ 4145 @LENGTH@ 16
---------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append("Mvc [pattern='").append(this.pattern).append("'") @AT@ 4135 @LENGTH@ 2
---------INS SimpleName@@MethodName:append:["'"] @TO@ MethodInvocation@@sb.append("Mvc [pattern='").append(this.pattern).append("'") @AT@ 4184 @LENGTH@ 11
------------INS StringLiteral@@"'" @TO@ SimpleName@@MethodName:append:["'"] @AT@ 4191 @LENGTH@ 3
---INS IfStatement@@if (this.servletPath != null) {  sb.append(", servletPath='").append(this.servletPath).append("'");} @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4200 @LENGTH@ 105
------INS InfixExpression@@this.servletPath != null @TO@ IfStatement@@if (this.servletPath != null) {  sb.append(", servletPath='").append(this.servletPath).append("'");} @AT@ 4204 @LENGTH@ 24
---------INS FieldAccess@@this.servletPath @TO@ InfixExpression@@this.servletPath != null @AT@ 4204 @LENGTH@ 16
------------INS ThisExpression@@this @TO@ FieldAccess@@this.servletPath @AT@ 4204 @LENGTH@ 4
------------INS SimpleName@@servletPath @TO@ FieldAccess@@this.servletPath @AT@ 4209 @LENGTH@ 11
---------INS Operator@@!= @TO@ InfixExpression@@this.servletPath != null @AT@ 4220 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@this.servletPath != null @AT@ 4224 @LENGTH@ 4
------INS Block@@ThenBody:{  sb.append(", servletPath='").append(this.servletPath).append("'");} @TO@ IfStatement@@if (this.servletPath != null) {  sb.append(", servletPath='").append(this.servletPath).append("'");} @AT@ 4230 @LENGTH@ 75
---------INS ExpressionStatement@@MethodInvocation:sb.append(", servletPath='").append(this.servletPath).append("'") @TO@ Block@@ThenBody:{  sb.append(", servletPath='").append(this.servletPath).append("'");} @AT@ 4235 @LENGTH@ 66
------------INS MethodInvocation@@sb.append(", servletPath='").append(this.servletPath).append("'") @TO@ ExpressionStatement@@MethodInvocation:sb.append(", servletPath='").append(this.servletPath).append("'") @AT@ 4235 @LENGTH@ 65
---------------INS MethodInvocation@@MethodName:append:[this.servletPath] @TO@ MethodInvocation@@sb.append(", servletPath='").append(this.servletPath).append("'") @AT@ 4235 @LENGTH@ 53
------------------INS FieldAccess@@this.servletPath @TO@ MethodInvocation@@MethodName:append:[this.servletPath] @AT@ 4271 @LENGTH@ 16
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.servletPath @AT@ 4271 @LENGTH@ 4
---------------------INS SimpleName@@servletPath @TO@ FieldAccess@@this.servletPath @AT@ 4276 @LENGTH@ 11
---------------INS MethodInvocation@@MethodName:append:[", servletPath='"] @TO@ MethodInvocation@@sb.append(", servletPath='").append(this.servletPath).append("'") @AT@ 4235 @LENGTH@ 28
------------------INS StringLiteral@@", servletPath='" @TO@ MethodInvocation@@MethodName:append:[", servletPath='"] @AT@ 4245 @LENGTH@ 17
---------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append(", servletPath='").append(this.servletPath).append("'") @AT@ 4235 @LENGTH@ 2
---------------INS SimpleName@@MethodName:append:["'"] @TO@ MethodInvocation@@sb.append(", servletPath='").append(this.servletPath).append("'") @AT@ 4289 @LENGTH@ 11
------------------INS StringLiteral@@"'" @TO@ SimpleName@@MethodName:append:["'"] @AT@ 4296 @LENGTH@ 3
---INS IfStatement@@if (this.method != null) {  sb.append(", ").append(this.method);} @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4309 @LENGTH@ 70
------INS InfixExpression@@this.method != null @TO@ IfStatement@@if (this.method != null) {  sb.append(", ").append(this.method);} @AT@ 4313 @LENGTH@ 19
---------INS FieldAccess@@this.method @TO@ InfixExpression@@this.method != null @AT@ 4313 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.method @AT@ 4313 @LENGTH@ 4
------------INS SimpleName@@method @TO@ FieldAccess@@this.method @AT@ 4318 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@this.method != null @AT@ 4324 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@this.method != null @AT@ 4328 @LENGTH@ 4
------INS Block@@ThenBody:{  sb.append(", ").append(this.method);} @TO@ IfStatement@@if (this.method != null) {  sb.append(", ").append(this.method);} @AT@ 4334 @LENGTH@ 45
---------INS ExpressionStatement@@MethodInvocation:sb.append(", ").append(this.method) @TO@ Block@@ThenBody:{  sb.append(", ").append(this.method);} @AT@ 4339 @LENGTH@ 36
------------INS MethodInvocation@@sb.append(", ").append(this.method) @TO@ ExpressionStatement@@MethodInvocation:sb.append(", ").append(this.method) @AT@ 4339 @LENGTH@ 35
---------------INS MethodInvocation@@MethodName:append:[", "] @TO@ MethodInvocation@@sb.append(", ").append(this.method) @AT@ 4339 @LENGTH@ 15
------------------INS StringLiteral@@", " @TO@ MethodInvocation@@MethodName:append:[", "] @AT@ 4349 @LENGTH@ 4
---------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append(", ").append(this.method) @AT@ 4339 @LENGTH@ 2
---------------INS SimpleName@@MethodName:append:[this.method] @TO@ MethodInvocation@@sb.append(", ").append(this.method) @AT@ 4355 @LENGTH@ 19
------------------INS FieldAccess@@this.method @TO@ SimpleName@@MethodName:append:[this.method] @AT@ 4362 @LENGTH@ 11
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.method @AT@ 4362 @LENGTH@ 4
---------------------INS SimpleName@@method @TO@ FieldAccess@@this.method @AT@ 4367 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:sb.append("]") @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4383 @LENGTH@ 15
------INS MethodInvocation@@sb.append("]") @TO@ ExpressionStatement@@MethodInvocation:sb.append("]") @AT@ 4383 @LENGTH@ 14
---------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append("]") @AT@ 4383 @LENGTH@ 2
---------INS SimpleName@@MethodName:append:["]"] @TO@ MethodInvocation@@sb.append("]") @AT@ 4386 @LENGTH@ 11
------------INS StringLiteral@@"]" @TO@ SimpleName@@MethodName:append:["]"] @AT@ 4393 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:sb.toString() @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4402 @LENGTH@ 21
------INS MethodInvocation@@sb.toString() @TO@ ReturnStatement@@MethodInvocation:sb.toString() @AT@ 4409 @LENGTH@ 13
---------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.toString() @AT@ 4409 @LENGTH@ 2
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@sb.toString() @AT@ 4412 @LENGTH@ 10


UPD Block@@ThenBody:{  List<Channel> channels=this.channelsPerConnection.get(connection);  if (channels == null) {    channels=new LinkedList<Channel>();    this.channelsPerConnection.put(connection,channels);  }  channels.add(channel);} @TO@ ThenBody:{  List<Channel> channelsForConnection=this.channelsPerConnection.get(connection);  if (channelsForConnection == null) {    channelsForConnection=new LinkedList<Channel>();    this.channelsPerConnection.put(connection,channelsForConnection);  }  channelsForConnection.add(channel);} @AT@ 4380 @LENGTH@ 242
---UPD VariableDeclarationStatement@@List<Channel> channels=this.channelsPerConnection.get(connection); @TO@ List<Channel> channelsForConnection=this.channelsPerConnection.get(connection); @AT@ 4386 @LENGTH@ 68
------UPD VariableDeclarationFragment@@channels=this.channelsPerConnection.get(connection) @TO@ channelsForConnection=this.channelsPerConnection.get(connection) @AT@ 4400 @LENGTH@ 53
---------UPD SimpleName@@channels @TO@ channelsForConnection @AT@ 4400 @LENGTH@ 8
---UPD IfStatement@@if (channels == null) {  channels=new LinkedList<Channel>();  this.channelsPerConnection.put(connection,channels);} @TO@ if (channelsForConnection == null) {  channelsForConnection=new LinkedList<Channel>();  this.channelsPerConnection.put(connection,channelsForConnection);} @AT@ 4459 @LENGTH@ 131
------UPD InfixExpression@@channels == null @TO@ channelsForConnection == null @AT@ 4463 @LENGTH@ 16
---------UPD SimpleName@@channels @TO@ channelsForConnection @AT@ 4463 @LENGTH@ 8
------UPD Block@@ThenBody:{  channels=new LinkedList<Channel>();  this.channelsPerConnection.put(connection,channels);} @TO@ ThenBody:{  channelsForConnection=new LinkedList<Channel>();  this.channelsPerConnection.put(connection,channelsForConnection);} @AT@ 4481 @LENGTH@ 109
---------UPD ExpressionStatement@@Assignment:channels=new LinkedList<Channel>() @TO@ Assignment:channelsForConnection=new LinkedList<Channel>() @AT@ 4488 @LENGTH@ 37
------------UPD Assignment@@channels=new LinkedList<Channel>() @TO@ channelsForConnection=new LinkedList<Channel>() @AT@ 4488 @LENGTH@ 36
---------------UPD SimpleName@@channels @TO@ channelsForConnection @AT@ 4488 @LENGTH@ 8
---------UPD ExpressionStatement@@MethodInvocation:this.channelsPerConnection.put(connection,channels) @TO@ MethodInvocation:this.channelsPerConnection.put(connection,channelsForConnection) @AT@ 4531 @LENGTH@ 53
------------UPD MethodInvocation@@this.channelsPerConnection.put(connection,channels) @TO@ this.channelsPerConnection.put(connection,channelsForConnection) @AT@ 4531 @LENGTH@ 52
---------------UPD SimpleName@@MethodName:put:[connection, channels] @TO@ MethodName:put:[connection, channelsForConnection] @AT@ 4558 @LENGTH@ 25
------------------UPD SimpleName@@channels @TO@ channelsForConnection @AT@ 4574 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:channels.add(channel) @TO@ MethodInvocation:channelsForConnection.add(channel) @AT@ 4595 @LENGTH@ 22
------UPD MethodInvocation@@channels.add(channel) @TO@ channelsForConnection.add(channel) @AT@ 4595 @LENGTH@ 21
---------UPD SimpleName@@Name:channels @TO@ Name:channelsForConnection @AT@ 4595 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:this.converter.apply(exchange).cast(BearerTokenAuthenticationToken.class).block() @TO@ MethodInvocation:this.converter.convert(exchange).cast(BearerTokenAuthenticationToken.class).block() @AT@ 4688 @LENGTH@ 89
---UPD MethodInvocation@@this.converter.apply(exchange).cast(BearerTokenAuthenticationToken.class).block() @TO@ this.converter.convert(exchange).cast(BearerTokenAuthenticationToken.class).block() @AT@ 4695 @LENGTH@ 81
------UPD MethodInvocation@@MethodName:apply:[exchange] @TO@ MethodName:convert:[exchange] @AT@ 4695 @LENGTH@ 30


INS ExpressionStatement@@MethodInvocation:x2.setIsUTC(true) @TO@ MethodDeclaration@@public, void, MethodName:testStringify, IOException,  @AT@ 3683 @LENGTH@ 18
---INS MethodInvocation@@x2.setIsUTC(true) @TO@ ExpressionStatement@@MethodInvocation:x2.setIsUTC(true) @AT@ 3683 @LENGTH@ 17
------INS SimpleName@@Name:x2 @TO@ MethodInvocation@@x2.setIsUTC(true) @AT@ 3683 @LENGTH@ 2
------INS SimpleName@@MethodName:setIsUTC:[true] @TO@ MethodInvocation@@x2.setIsUTC(true) @AT@ 3686 @LENGTH@ 14
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setIsUTC:[true] @AT@ 3695 @LENGTH@ 4


UPD VariableDeclarationStatement@@LRASagaStep sagaStep=LRASagaStep.fromCamelSagaStep(step,exchange); @TO@ LRASagaStep sagaStep; @AT@ 1555 @LENGTH@ 69
---UPD VariableDeclarationFragment@@sagaStep=LRASagaStep.fromCamelSagaStep(step,exchange) @TO@ sagaStep @AT@ 1567 @LENGTH@ 56


UPD FieldDeclaration@@private, ServerWebExchangeMatcher, [requireCsrfProtectionMatcher=new DefaultRequireCsrfProtectionMatcher()] @TO@ public, static, final, ServerWebExchangeMatcher, [DEFAULT_CSRF_MATCHER=new DefaultRequireCsrfProtectionMatcher()] @AT@ 2472 @LENGTH@ 106
---UPD Modifier@@private @TO@ public @AT@ 2472 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, ServerWebExchangeMatcher, [requireCsrfProtectionMatcher=new DefaultRequireCsrfProtectionMatcher()] @AT@ 2480 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, ServerWebExchangeMatcher, [requireCsrfProtectionMatcher=new DefaultRequireCsrfProtectionMatcher()] @AT@ 2487 @LENGTH@ 5
---UPD VariableDeclarationFragment@@requireCsrfProtectionMatcher=new DefaultRequireCsrfProtectionMatcher() @TO@ DEFAULT_CSRF_MATCHER=new DefaultRequireCsrfProtectionMatcher() @AT@ 2505 @LENGTH@ 72
------UPD SimpleName@@requireCsrfProtectionMatcher @TO@ DEFAULT_CSRF_MATCHER @AT@ 2505 @LENGTH@ 28


UPD ReturnStatement@@ClassInstanceCreation:new SpringIntegrationMessage(null,springMessage) @TO@ ClassInstanceCreation:new SpringIntegrationMessage((CamelContext)null,springMessage) @AT@ 2759 @LENGTH@ 57
---UPD ClassInstanceCreation@@SpringIntegrationMessage[null, springMessage] @TO@ SpringIntegrationMessage[(CamelContext)null, springMessage] @AT@ 2766 @LENGTH@ 49
------DEL NullLiteral@@null @AT@ 2795 @LENGTH@ 4
------INS CastExpression@@(CamelContext)null @TO@ ClassInstanceCreation@@SpringIntegrationMessage[null, springMessage] @AT@ 2807 @LENGTH@ 19
---------INS SimpleType@@CamelContext @TO@ CastExpression@@(CamelContext)null @AT@ 2808 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ CastExpression@@(CamelContext)null @AT@ 2822 @LENGTH@ 4


UPD IfStatement@@if (offsetRepository != null) {  log.debug("Saving offset repository state {} from topic {} with offset: {}",threadId,topicName,partitionLastOffset);  offsetRepository.setState(serializeOffsetKey(partition),serializeOffsetValue(partitionLastOffset));} else if (forceCommit) {  log.debug("Forcing commitSync {} from topic {} with offset: {}",threadId,topicName,partitionLastOffset);  consumer.commitSync(Collections.singletonMap(partition,new OffsetAndMetadata(partitionLastOffset + 1)));} else if (endpoint.getConfiguration().isAutoCommitEnable()) {  log.debug("Auto commitSync {} from topic {} with offset: {}",threadId,topicName,partitionLastOffset);  consumer.commitSync(Collections.singletonMap(partition,new OffsetAndMetadata(partitionLastOffset + 1)));} @TO@ if (!endpoint.getConfiguration().isAllowManualCommit() && offsetRepository != null) {  log.debug("Saving offset repository state {} from topic {} with offset: {}",threadId,topicName,partitionLastOffset);  offsetRepository.setState(serializeOffsetKey(partition),serializeOffsetValue(partitionLastOffset));} else if (forceCommit) {  log.debug("Forcing commitSync {} from topic {} with offset: {}",threadId,topicName,partitionLastOffset);  consumer.commitSync(Collections.singletonMap(partition,new OffsetAndMetadata(partitionLastOffset + 1)));} else if (endpoint.getConfiguration().isAutoCommitEnable()) {  log.debug("Auto commitSync {} from topic {} with offset: {}",threadId,topicName,partitionLastOffset);  consumer.commitSync(Collections.singletonMap(partition,new OffsetAndMetadata(partitionLastOffset + 1)));} @AT@ 19927 @LENGTH@ 936
---INS InfixExpression@@!endpoint.getConfiguration().isAllowManualCommit() && offsetRepository != null @TO@ IfStatement@@if (offsetRepository != null) {  log.debug("Saving offset repository state {} from topic {} with offset: {}",threadId,topicName,partitionLastOffset);  offsetRepository.setState(serializeOffsetKey(partition),serializeOffsetValue(partitionLastOffset));} else if (forceCommit) {  log.debug("Forcing commitSync {} from topic {} with offset: {}",threadId,topicName,partitionLastOffset);  consumer.commitSync(Collections.singletonMap(partition,new OffsetAndMetadata(partitionLastOffset + 1)));} else if (endpoint.getConfiguration().isAutoCommitEnable()) {  log.debug("Auto commitSync {} from topic {} with offset: {}",threadId,topicName,partitionLastOffset);  consumer.commitSync(Collections.singletonMap(partition,new OffsetAndMetadata(partitionLastOffset + 1)));} @AT@ 19931 @LENGTH@ 78
------INS PrefixExpression@@!endpoint.getConfiguration().isAllowManualCommit() @TO@ InfixExpression@@!endpoint.getConfiguration().isAllowManualCommit() && offsetRepository != null @AT@ 19931 @LENGTH@ 50
---------INS Operator@@! @TO@ PrefixExpression@@!endpoint.getConfiguration().isAllowManualCommit() @AT@ 19931 @LENGTH@ 1
---------INS MethodInvocation@@endpoint.getConfiguration().isAllowManualCommit() @TO@ PrefixExpression@@!endpoint.getConfiguration().isAllowManualCommit() @AT@ 19932 @LENGTH@ 49
------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@endpoint.getConfiguration().isAllowManualCommit() @AT@ 19932 @LENGTH@ 27
------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getConfiguration().isAllowManualCommit() @AT@ 19932 @LENGTH@ 8
------------INS SimpleName@@MethodName:isAllowManualCommit:[] @TO@ MethodInvocation@@endpoint.getConfiguration().isAllowManualCommit() @AT@ 19960 @LENGTH@ 21
------INS Operator@@&& @TO@ InfixExpression@@!endpoint.getConfiguration().isAllowManualCommit() && offsetRepository != null @AT@ 19981 @LENGTH@ 2
------INS InfixExpression@@offsetRepository != null @TO@ InfixExpression@@!endpoint.getConfiguration().isAllowManualCommit() && offsetRepository != null @AT@ 19985 @LENGTH@ 24
---------MOV SimpleName@@offsetRepository @TO@ InfixExpression@@offsetRepository != null @AT@ 19931 @LENGTH@ 16
---------MOV Operator@@!= @TO@ InfixExpression@@offsetRepository != null @AT@ 19947 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@offsetRepository != null @AT@ 19951 @LENGTH@ 4
---DEL InfixExpression@@offsetRepository != null @AT@ 19931 @LENGTH@ 24


UPD IfStatement@@if (redeliveryPossible) {  ((RedeliveryErrorHandler)errorHandler).changeOutput(instrumentationProcessor);} @TO@ if (redeliveryPossible) {  Processor currentOutput=((RedeliveryErrorHandler)errorHandler).getOutput();  instrumentationProcessor.setProcessor(currentOutput);  ((RedeliveryErrorHandler)errorHandler).changeOutput(instrumentationProcessor);} @AT@ 14863 @LENGTH@ 360
---UPD Block@@ThenBody:{  ((RedeliveryErrorHandler)errorHandler).changeOutput(instrumentationProcessor);} @TO@ ThenBody:{  Processor currentOutput=((RedeliveryErrorHandler)errorHandler).getOutput();  instrumentationProcessor.setProcessor(currentOutput);  ((RedeliveryErrorHandler)errorHandler).changeOutput(instrumentationProcessor);} @AT@ 14887 @LENGTH@ 336
------INS VariableDeclarationStatement@@Processor currentOutput=((RedeliveryErrorHandler)errorHandler).getOutput(); @TO@ Block@@ThenBody:{  ((RedeliveryErrorHandler)errorHandler).changeOutput(instrumentationProcessor);} @AT@ 15126 @LENGTH@ 78
---------INS SimpleType@@Processor @TO@ VariableDeclarationStatement@@Processor currentOutput=((RedeliveryErrorHandler)errorHandler).getOutput(); @AT@ 15126 @LENGTH@ 9
---------INS VariableDeclarationFragment@@currentOutput=((RedeliveryErrorHandler)errorHandler).getOutput() @TO@ VariableDeclarationStatement@@Processor currentOutput=((RedeliveryErrorHandler)errorHandler).getOutput(); @AT@ 15136 @LENGTH@ 67
------------INS SimpleName@@currentOutput @TO@ VariableDeclarationFragment@@currentOutput=((RedeliveryErrorHandler)errorHandler).getOutput() @AT@ 15136 @LENGTH@ 13
------------INS MethodInvocation@@((RedeliveryErrorHandler)errorHandler).getOutput() @TO@ VariableDeclarationFragment@@currentOutput=((RedeliveryErrorHandler)errorHandler).getOutput() @AT@ 15152 @LENGTH@ 51
---------------INS ParenthesizedExpression@@((RedeliveryErrorHandler)errorHandler) @TO@ MethodInvocation@@((RedeliveryErrorHandler)errorHandler).getOutput() @AT@ 15152 @LENGTH@ 39
------------------INS CastExpression@@(RedeliveryErrorHandler)errorHandler @TO@ ParenthesizedExpression@@((RedeliveryErrorHandler)errorHandler) @AT@ 15153 @LENGTH@ 37
---------------------INS SimpleType@@RedeliveryErrorHandler @TO@ CastExpression@@(RedeliveryErrorHandler)errorHandler @AT@ 15154 @LENGTH@ 22
---------------------INS SimpleName@@errorHandler @TO@ CastExpression@@(RedeliveryErrorHandler)errorHandler @AT@ 15178 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getOutput:[] @TO@ MethodInvocation@@((RedeliveryErrorHandler)errorHandler).getOutput() @AT@ 15192 @LENGTH@ 11
------INS ExpressionStatement@@MethodInvocation:instrumentationProcessor.setProcessor(currentOutput) @TO@ Block@@ThenBody:{  ((RedeliveryErrorHandler)errorHandler).changeOutput(instrumentationProcessor);} @AT@ 15225 @LENGTH@ 53
---------INS MethodInvocation@@instrumentationProcessor.setProcessor(currentOutput) @TO@ ExpressionStatement@@MethodInvocation:instrumentationProcessor.setProcessor(currentOutput) @AT@ 15225 @LENGTH@ 52
------------INS SimpleName@@Name:instrumentationProcessor @TO@ MethodInvocation@@instrumentationProcessor.setProcessor(currentOutput) @AT@ 15225 @LENGTH@ 24
------------INS SimpleName@@MethodName:setProcessor:[currentOutput] @TO@ MethodInvocation@@instrumentationProcessor.setProcessor(currentOutput) @AT@ 15250 @LENGTH@ 27
---------------INS SimpleName@@currentOutput @TO@ SimpleName@@MethodName:setProcessor:[currentOutput] @AT@ 15263 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:SecurityCommand.execute(ctx,req,SecurityCommand.DEFAULT_FAILURE_CONSUMER) @TO@ MethodInvocation:SecurityCommand.execute(ctx,req,SecurityCommand.DEFAULT_FAILURE_CONSUMER,false) @AT@ 16539 @LENGTH@ 76
---UPD MethodInvocation@@SecurityCommand.execute(ctx,req,SecurityCommand.DEFAULT_FAILURE_CONSUMER) @TO@ SecurityCommand.execute(ctx,req,SecurityCommand.DEFAULT_FAILURE_CONSUMER,false) @AT@ 16539 @LENGTH@ 75
------UPD SimpleName@@MethodName:execute:[ctx, req, SecurityCommand.DEFAULT_FAILURE_CONSUMER] @TO@ MethodName:execute:[ctx, req, SecurityCommand.DEFAULT_FAILURE_CONSUMER, false] @AT@ 16555 @LENGTH@ 59
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:execute:[ctx, req, SecurityCommand.DEFAULT_FAILURE_CONSUMER] @AT@ 16615 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean isManaged=tbl.getTableType().equals(TableType.MANAGED_TABLE.toString()); @TO@ boolean isManaged=tbl.getTableType() == TableType.MANAGED_TABLE; @AT@ 68669 @LENGTH@ 82
---UPD VariableDeclarationFragment@@isManaged=tbl.getTableType().equals(TableType.MANAGED_TABLE.toString()) @TO@ isManaged=tbl.getTableType() == TableType.MANAGED_TABLE @AT@ 68677 @LENGTH@ 73
------DEL MethodInvocation@@tbl.getTableType().equals(TableType.MANAGED_TABLE.toString()) @AT@ 68689 @LENGTH@ 61
---------DEL MethodInvocation@@MethodName:getTableType:[] @AT@ 68689 @LENGTH@ 18
---------DEL SimpleName@@MethodName:equals:[TableType.MANAGED_TABLE.toString()] @AT@ 68708 @LENGTH@ 42
------------DEL MethodInvocation@@TableType.MANAGED_TABLE.toString() @AT@ 68715 @LENGTH@ 34
---------------DEL QualifiedName@@Name:TableType.MANAGED_TABLE @AT@ 68715 @LENGTH@ 23
------INS InfixExpression@@tbl.getTableType() == TableType.MANAGED_TABLE @TO@ VariableDeclarationFragment@@isManaged=tbl.getTableType().equals(TableType.MANAGED_TABLE.toString()) @AT@ 68689 @LENGTH@ 45
---------INS MethodInvocation@@tbl.getTableType() @TO@ InfixExpression@@tbl.getTableType() == TableType.MANAGED_TABLE @AT@ 68689 @LENGTH@ 18
------------MOV SimpleName@@Name:tbl @TO@ MethodInvocation@@tbl.getTableType() @AT@ 68689 @LENGTH@ 3
------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@tbl.getTableType() @AT@ 68739 @LENGTH@ 10
---------INS Operator@@== @TO@ InfixExpression@@tbl.getTableType() == TableType.MANAGED_TABLE @AT@ 68707 @LENGTH@ 2
---------INS QualifiedName@@TableType.MANAGED_TABLE @TO@ InfixExpression@@tbl.getTableType() == TableType.MANAGED_TABLE @AT@ 68711 @LENGTH@ 23
------------INS SimpleName@@TableType @TO@ QualifiedName@@TableType.MANAGED_TABLE @AT@ 68711 @LENGTH@ 9
------------INS SimpleName@@MANAGED_TABLE @TO@ QualifiedName@@TableType.MANAGED_TABLE @AT@ 68721 @LENGTH@ 13


DEL MethodDeclaration@@public, long, MethodName:getBaseHitCounter,  @AT@ 2266 @LENGTH@ 100
---DEL Modifier@@public @AT@ 2266 @LENGTH@ 6
---DEL PrimitiveType@@long @AT@ 2273 @LENGTH@ 4
---DEL SimpleName@@MethodName:getBaseHitCounter @AT@ 2278 @LENGTH@ 17
---DEL ReturnStatement@@MethodInvocation:registry.getStatistics().getBaseHitCounter() @AT@ 2308 @LENGTH@ 52
------DEL MethodInvocation@@registry.getStatistics().getBaseHitCounter() @AT@ 2315 @LENGTH@ 44
---------DEL MethodInvocation@@MethodName:getStatistics:[] @AT@ 2315 @LENGTH@ 24
---------DEL SimpleName@@Name:registry @AT@ 2315 @LENGTH@ 8
---------DEL SimpleName@@MethodName:getBaseHitCounter:[] @AT@ 2340 @LENGTH@ 19


INS MethodDeclaration@@public, void, MethodName:validateWhenJwtHasNoIssuerThenReturnsError,  @TO@ TypeDeclaration@@[public]JwtIssuerValidatorTests,  @AT@ 2221 @LENGTH@ 338
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:validateWhenJwtHasNoIssuerThenReturnsError,  @AT@ 2221 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:validateWhenJwtHasNoIssuerThenReturnsError,  @AT@ 2228 @LENGTH@ 4
---INS SimpleName@@MethodName:validateWhenJwtHasNoIssuerThenReturnsError @TO@ MethodDeclaration@@public, void, MethodName:validateWhenJwtHasNoIssuerThenReturnsError,  @AT@ 2233 @LENGTH@ 42
---INS VariableDeclarationStatement@@Jwt jwt=new Jwt(MOCK_TOKEN,MOCK_ISSUED_AT,MOCK_EXPIRES_AT,MOCK_HEADERS,Collections.singletonMap(JwtClaimNames.AUD,"https://aud")); @TO@ MethodDeclaration@@public, void, MethodName:validateWhenJwtHasNoIssuerThenReturnsError,  @AT@ 2282 @LENGTH@ 158
------INS SimpleType@@Jwt @TO@ VariableDeclarationStatement@@Jwt jwt=new Jwt(MOCK_TOKEN,MOCK_ISSUED_AT,MOCK_EXPIRES_AT,MOCK_HEADERS,Collections.singletonMap(JwtClaimNames.AUD,"https://aud")); @AT@ 2282 @LENGTH@ 3
------INS VariableDeclarationFragment@@jwt=new Jwt(MOCK_TOKEN,MOCK_ISSUED_AT,MOCK_EXPIRES_AT,MOCK_HEADERS,Collections.singletonMap(JwtClaimNames.AUD,"https://aud")) @TO@ VariableDeclarationStatement@@Jwt jwt=new Jwt(MOCK_TOKEN,MOCK_ISSUED_AT,MOCK_EXPIRES_AT,MOCK_HEADERS,Collections.singletonMap(JwtClaimNames.AUD,"https://aud")); @AT@ 2286 @LENGTH@ 153
---------INS SimpleName@@jwt @TO@ VariableDeclarationFragment@@jwt=new Jwt(MOCK_TOKEN,MOCK_ISSUED_AT,MOCK_EXPIRES_AT,MOCK_HEADERS,Collections.singletonMap(JwtClaimNames.AUD,"https://aud")) @AT@ 2286 @LENGTH@ 3
---------INS ClassInstanceCreation@@Jwt[MOCK_TOKEN, MOCK_ISSUED_AT, MOCK_EXPIRES_AT, MOCK_HEADERS, Collections.singletonMap(JwtClaimNames.AUD,"https://aud")] @TO@ VariableDeclarationFragment@@jwt=new Jwt(MOCK_TOKEN,MOCK_ISSUED_AT,MOCK_EXPIRES_AT,MOCK_HEADERS,Collections.singletonMap(JwtClaimNames.AUD,"https://aud")) @AT@ 2292 @LENGTH@ 147
------------INS New@@new @TO@ ClassInstanceCreation@@Jwt[MOCK_TOKEN, MOCK_ISSUED_AT, MOCK_EXPIRES_AT, MOCK_HEADERS, Collections.singletonMap(JwtClaimNames.AUD,"https://aud")] @AT@ 2292 @LENGTH@ 3
------------INS SimpleType@@Jwt @TO@ ClassInstanceCreation@@Jwt[MOCK_TOKEN, MOCK_ISSUED_AT, MOCK_EXPIRES_AT, MOCK_HEADERS, Collections.singletonMap(JwtClaimNames.AUD,"https://aud")] @AT@ 2296 @LENGTH@ 3
------------INS SimpleName@@MOCK_TOKEN @TO@ ClassInstanceCreation@@Jwt[MOCK_TOKEN, MOCK_ISSUED_AT, MOCK_EXPIRES_AT, MOCK_HEADERS, Collections.singletonMap(JwtClaimNames.AUD,"https://aud")] @AT@ 2305 @LENGTH@ 10
------------INS SimpleName@@MOCK_ISSUED_AT @TO@ ClassInstanceCreation@@Jwt[MOCK_TOKEN, MOCK_ISSUED_AT, MOCK_EXPIRES_AT, MOCK_HEADERS, Collections.singletonMap(JwtClaimNames.AUD,"https://aud")] @AT@ 2321 @LENGTH@ 14
------------INS SimpleName@@MOCK_EXPIRES_AT @TO@ ClassInstanceCreation@@Jwt[MOCK_TOKEN, MOCK_ISSUED_AT, MOCK_EXPIRES_AT, MOCK_HEADERS, Collections.singletonMap(JwtClaimNames.AUD,"https://aud")] @AT@ 2341 @LENGTH@ 15
------------INS SimpleName@@MOCK_HEADERS @TO@ ClassInstanceCreation@@Jwt[MOCK_TOKEN, MOCK_ISSUED_AT, MOCK_EXPIRES_AT, MOCK_HEADERS, Collections.singletonMap(JwtClaimNames.AUD,"https://aud")] @AT@ 2362 @LENGTH@ 12
------------INS MethodInvocation@@Collections.singletonMap(JwtClaimNames.AUD,"https://aud") @TO@ ClassInstanceCreation@@Jwt[MOCK_TOKEN, MOCK_ISSUED_AT, MOCK_EXPIRES_AT, MOCK_HEADERS, Collections.singletonMap(JwtClaimNames.AUD,"https://aud")] @AT@ 2380 @LENGTH@ 58
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap(JwtClaimNames.AUD,"https://aud") @AT@ 2380 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonMap:[JwtClaimNames.AUD, "https://aud"] @TO@ MethodInvocation@@Collections.singletonMap(JwtClaimNames.AUD,"https://aud") @AT@ 2392 @LENGTH@ 46
------------------INS QualifiedName@@JwtClaimNames.AUD @TO@ SimpleName@@MethodName:singletonMap:[JwtClaimNames.AUD, "https://aud"] @AT@ 2405 @LENGTH@ 17
---------------------INS SimpleName@@JwtClaimNames @TO@ QualifiedName@@JwtClaimNames.AUD @AT@ 2405 @LENGTH@ 13
---------------------INS SimpleName@@AUD @TO@ QualifiedName@@JwtClaimNames.AUD @AT@ 2419 @LENGTH@ 3
------------------INS StringLiteral@@"https://aud" @TO@ SimpleName@@MethodName:singletonMap:[JwtClaimNames.AUD, "https://aud"] @AT@ 2424 @LENGTH@ 13
---INS VariableDeclarationStatement@@OAuth2TokenValidatorResult result=this.validator.validate(jwt); @TO@ MethodDeclaration@@public, void, MethodName:validateWhenJwtHasNoIssuerThenReturnsError,  @AT@ 2444 @LENGTH@ 65
------INS SimpleType@@OAuth2TokenValidatorResult @TO@ VariableDeclarationStatement@@OAuth2TokenValidatorResult result=this.validator.validate(jwt); @AT@ 2444 @LENGTH@ 26
------INS VariableDeclarationFragment@@result=this.validator.validate(jwt) @TO@ VariableDeclarationStatement@@OAuth2TokenValidatorResult result=this.validator.validate(jwt); @AT@ 2471 @LENGTH@ 37
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=this.validator.validate(jwt) @AT@ 2471 @LENGTH@ 6
---------INS MethodInvocation@@this.validator.validate(jwt) @TO@ VariableDeclarationFragment@@result=this.validator.validate(jwt) @AT@ 2480 @LENGTH@ 28
------------INS FieldAccess@@this.validator @TO@ MethodInvocation@@this.validator.validate(jwt) @AT@ 2480 @LENGTH@ 14
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.validator @AT@ 2480 @LENGTH@ 4
---------------INS SimpleName@@validator @TO@ FieldAccess@@this.validator @AT@ 2485 @LENGTH@ 9
------------INS SimpleName@@MethodName:validate:[jwt] @TO@ MethodInvocation@@this.validator.validate(jwt) @AT@ 2495 @LENGTH@ 13
---------------INS SimpleName@@jwt @TO@ SimpleName@@MethodName:validate:[jwt] @AT@ 2504 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getErrors()).isNotEmpty() @TO@ MethodDeclaration@@public, void, MethodName:validateWhenJwtHasNoIssuerThenReturnsError,  @AT@ 2512 @LENGTH@ 44
------INS MethodInvocation@@assertThat(result.getErrors()).isNotEmpty() @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getErrors()).isNotEmpty() @AT@ 2512 @LENGTH@ 43
---------INS MethodInvocation@@MethodName:assertThat:[result.getErrors()] @TO@ MethodInvocation@@assertThat(result.getErrors()).isNotEmpty() @AT@ 2512 @LENGTH@ 30
------------INS MethodInvocation@@result.getErrors() @TO@ MethodInvocation@@MethodName:assertThat:[result.getErrors()] @AT@ 2523 @LENGTH@ 18
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getErrors() @AT@ 2523 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getErrors:[] @TO@ MethodInvocation@@result.getErrors() @AT@ 2530 @LENGTH@ 11
---------INS SimpleName@@MethodName:isNotEmpty:[] @TO@ MethodInvocation@@assertThat(result.getErrors()).isNotEmpty() @AT@ 2543 @LENGTH@ 12


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3288 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3308 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 3318 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3318 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3360 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 3367 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3367 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3377 @LENGTH@ 1


UPD EnhancedForStatement@@for (GroupBuilderProvider provider : ServiceLoader.load(DistributedGroupBuilderProvider.class,DistributedGroupBuilderProvider.class.getClassLoader())) {  for (  ServiceNameProvider builder : provider.getBuilders(registry,name)) {    JGroupsLogger.ROOT_LOGGER.debugf("Removing %s for channel %s",builder.getServiceName(),name);    context.removeService(builder.getServiceName());  }} @TO@ for (GroupServiceConfiguratorProvider provider : ServiceLoader.load(DistributedGroupServiceConfiguratorProvider.class,DistributedGroupServiceConfiguratorProvider.class.getClassLoader())) {  for (  ServiceNameProvider configurator : provider.getServiceConfigurators(registry,name)) {    JGroupsLogger.ROOT_LOGGER.debugf("Removing %s for channel %s",configurator.getServiceName(),name);    context.removeService(configurator.getServiceName());  }} @AT@ 6312 @LENGTH@ 441
---UPD SingleVariableDeclaration@@GroupBuilderProvider provider @TO@ GroupServiceConfiguratorProvider provider @AT@ 6317 @LENGTH@ 29
------UPD SimpleType@@GroupBuilderProvider @TO@ GroupServiceConfiguratorProvider @AT@ 6317 @LENGTH@ 20
---UPD MethodInvocation@@ServiceLoader.load(DistributedGroupBuilderProvider.class,DistributedGroupBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(DistributedGroupServiceConfiguratorProvider.class,DistributedGroupServiceConfiguratorProvider.class.getClassLoader()) @AT@ 6349 @LENGTH@ 113
------UPD SimpleName@@MethodName:load:[DistributedGroupBuilderProvider.class, DistributedGroupBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[DistributedGroupServiceConfiguratorProvider.class, DistributedGroupServiceConfiguratorProvider.class.getClassLoader()] @AT@ 6363 @LENGTH@ 99
---------UPD TypeLiteral@@DistributedGroupBuilderProvider.class @TO@ DistributedGroupServiceConfiguratorProvider.class @AT@ 6368 @LENGTH@ 37
---------UPD MethodInvocation@@DistributedGroupBuilderProvider.class.getClassLoader() @TO@ DistributedGroupServiceConfiguratorProvider.class.getClassLoader() @AT@ 6407 @LENGTH@ 54
------------UPD TypeLiteral@@DistributedGroupBuilderProvider.class @TO@ DistributedGroupServiceConfiguratorProvider.class @AT@ 6407 @LENGTH@ 37
---UPD EnhancedForStatement@@for (ServiceNameProvider builder : provider.getBuilders(registry,name)) {  JGroupsLogger.ROOT_LOGGER.debugf("Removing %s for channel %s",builder.getServiceName(),name);  context.removeService(builder.getServiceName());} @TO@ for (ServiceNameProvider configurator : provider.getServiceConfigurators(registry,name)) {  JGroupsLogger.ROOT_LOGGER.debugf("Removing %s for channel %s",configurator.getServiceName(),name);  context.removeService(configurator.getServiceName());} @AT@ 6478 @LENGTH@ 265
------UPD SingleVariableDeclaration@@ServiceNameProvider builder @TO@ ServiceNameProvider configurator @AT@ 6483 @LENGTH@ 27
---------UPD SimpleName@@builder @TO@ configurator @AT@ 6503 @LENGTH@ 7
------UPD MethodInvocation@@provider.getBuilders(registry,name) @TO@ provider.getServiceConfigurators(registry,name) @AT@ 6513 @LENGTH@ 36
---------UPD SimpleName@@MethodName:getBuilders:[registry, name] @TO@ MethodName:getServiceConfigurators:[registry, name] @AT@ 6522 @LENGTH@ 27
------UPD ExpressionStatement@@MethodInvocation:JGroupsLogger.ROOT_LOGGER.debugf("Removing %s for channel %s",builder.getServiceName(),name) @TO@ MethodInvocation:JGroupsLogger.ROOT_LOGGER.debugf("Removing %s for channel %s",configurator.getServiceName(),name) @AT@ 6569 @LENGTH@ 95
---------UPD MethodInvocation@@JGroupsLogger.ROOT_LOGGER.debugf("Removing %s for channel %s",builder.getServiceName(),name) @TO@ JGroupsLogger.ROOT_LOGGER.debugf("Removing %s for channel %s",configurator.getServiceName(),name) @AT@ 6569 @LENGTH@ 94
------------UPD SimpleName@@MethodName:debugf:["Removing %s for channel %s", builder.getServiceName(), name] @TO@ MethodName:debugf:["Removing %s for channel %s", configurator.getServiceName(), name] @AT@ 6595 @LENGTH@ 68
---------------UPD MethodInvocation@@builder.getServiceName() @TO@ configurator.getServiceName() @AT@ 6632 @LENGTH@ 24
------------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 6632 @LENGTH@ 7
------UPD ExpressionStatement@@MethodInvocation:context.removeService(builder.getServiceName()) @TO@ MethodInvocation:context.removeService(configurator.getServiceName()) @AT@ 6681 @LENGTH@ 48
---------UPD MethodInvocation@@context.removeService(builder.getServiceName()) @TO@ context.removeService(configurator.getServiceName()) @AT@ 6681 @LENGTH@ 47
------------UPD SimpleName@@MethodName:removeService:[builder.getServiceName()] @TO@ MethodName:removeService:[configurator.getServiceName()] @AT@ 6689 @LENGTH@ 39
---------------UPD MethodInvocation@@builder.getServiceName() @TO@ configurator.getServiceName() @AT@ 6703 @LENGTH@ 24
------------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 6703 @LENGTH@ 7


INS IfStatement@@if (InfinispanModel.VERSION_7_0_0.requiresTransformation(version)) {  parent.rejectChildResource(HotRodStoreResourceDefinition.PATH);} @TO@ MethodDeclaration@@public, static, void, MethodName:buildTransformation, ModelVersion version, ResourceTransformationDescriptionBuilder parent,  @AT@ 3351 @LENGTH@ 154
---INS MethodInvocation@@InfinispanModel.VERSION_7_0_0.requiresTransformation(version) @TO@ IfStatement@@if (InfinispanModel.VERSION_7_0_0.requiresTransformation(version)) {  parent.rejectChildResource(HotRodStoreResourceDefinition.PATH);} @AT@ 3355 @LENGTH@ 61
------INS QualifiedName@@Name:InfinispanModel.VERSION_7_0_0 @TO@ MethodInvocation@@InfinispanModel.VERSION_7_0_0.requiresTransformation(version) @AT@ 3355 @LENGTH@ 29
------INS SimpleName@@MethodName:requiresTransformation:[version] @TO@ MethodInvocation@@InfinispanModel.VERSION_7_0_0.requiresTransformation(version) @AT@ 3385 @LENGTH@ 31
---------INS SimpleName@@version @TO@ SimpleName@@MethodName:requiresTransformation:[version] @AT@ 3408 @LENGTH@ 7
---INS Block@@ThenBody:{  parent.rejectChildResource(HotRodStoreResourceDefinition.PATH);} @TO@ IfStatement@@if (InfinispanModel.VERSION_7_0_0.requiresTransformation(version)) {  parent.rejectChildResource(HotRodStoreResourceDefinition.PATH);} @AT@ 3418 @LENGTH@ 87
------INS ExpressionStatement@@MethodInvocation:parent.rejectChildResource(HotRodStoreResourceDefinition.PATH) @TO@ Block@@ThenBody:{  parent.rejectChildResource(HotRodStoreResourceDefinition.PATH);} @AT@ 3432 @LENGTH@ 63
---------INS MethodInvocation@@parent.rejectChildResource(HotRodStoreResourceDefinition.PATH) @TO@ ExpressionStatement@@MethodInvocation:parent.rejectChildResource(HotRodStoreResourceDefinition.PATH) @AT@ 3432 @LENGTH@ 62
------------INS SimpleName@@Name:parent @TO@ MethodInvocation@@parent.rejectChildResource(HotRodStoreResourceDefinition.PATH) @AT@ 3432 @LENGTH@ 6
------------INS SimpleName@@MethodName:rejectChildResource:[HotRodStoreResourceDefinition.PATH] @TO@ MethodInvocation@@parent.rejectChildResource(HotRodStoreResourceDefinition.PATH) @AT@ 3439 @LENGTH@ 55
---------------INS QualifiedName@@HotRodStoreResourceDefinition.PATH @TO@ SimpleName@@MethodName:rejectChildResource:[HotRodStoreResourceDefinition.PATH] @AT@ 3459 @LENGTH@ 34
------------------INS SimpleName@@HotRodStoreResourceDefinition @TO@ QualifiedName@@HotRodStoreResourceDefinition.PATH @AT@ 3459 @LENGTH@ 29
------------------INS SimpleName@@PATH @TO@ QualifiedName@@HotRodStoreResourceDefinition.PATH @AT@ 3489 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:shouldDetectExplicitIdFieldsAsIdProperties,  @TO@ TypeDeclaration@@[public]Neo4jPersistentPropertyTests,  @AT@ 1432 @LENGTH@ 505
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldDetectExplicitIdFieldsAsIdProperties,  @AT@ 1432 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldDetectExplicitIdFieldsAsIdProperties,  @AT@ 1439 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldDetectExplicitIdFieldsAsIdProperties @TO@ MethodDeclaration@@public, void, MethodName:shouldDetectExplicitIdFieldsAsIdProperties,  @AT@ 1444 @LENGTH@ 42
---INS VariableDeclarationStatement@@MetaData metaData=new MetaData("org.springframework.data.neo4j.domain.sample"); @TO@ MethodDeclaration@@public, void, MethodName:shouldDetectExplicitIdFieldsAsIdProperties,  @AT@ 1493 @LENGTH@ 81
------INS SimpleType@@MetaData @TO@ VariableDeclarationStatement@@MetaData metaData=new MetaData("org.springframework.data.neo4j.domain.sample"); @AT@ 1493 @LENGTH@ 8
------INS VariableDeclarationFragment@@metaData=new MetaData("org.springframework.data.neo4j.domain.sample") @TO@ VariableDeclarationStatement@@MetaData metaData=new MetaData("org.springframework.data.neo4j.domain.sample"); @AT@ 1502 @LENGTH@ 71
---------INS SimpleName@@metaData @TO@ VariableDeclarationFragment@@metaData=new MetaData("org.springframework.data.neo4j.domain.sample") @AT@ 1502 @LENGTH@ 8
---------INS ClassInstanceCreation@@MetaData["org.springframework.data.neo4j.domain.sample"] @TO@ VariableDeclarationFragment@@metaData=new MetaData("org.springframework.data.neo4j.domain.sample") @AT@ 1513 @LENGTH@ 60
------------INS New@@new @TO@ ClassInstanceCreation@@MetaData["org.springframework.data.neo4j.domain.sample"] @AT@ 1513 @LENGTH@ 3
------------INS SimpleType@@MetaData @TO@ ClassInstanceCreation@@MetaData["org.springframework.data.neo4j.domain.sample"] @AT@ 1517 @LENGTH@ 8
------------INS StringLiteral@@"org.springframework.data.neo4j.domain.sample" @TO@ ClassInstanceCreation@@MetaData["org.springframework.data.neo4j.domain.sample"] @AT@ 1526 @LENGTH@ 46
---INS VariableDeclarationStatement@@Neo4jMappingContext mappingContext=new Neo4jMappingContext(metaData); @TO@ MethodDeclaration@@public, void, MethodName:shouldDetectExplicitIdFieldsAsIdProperties,  @AT@ 1577 @LENGTH@ 71
------INS SimpleType@@Neo4jMappingContext @TO@ VariableDeclarationStatement@@Neo4jMappingContext mappingContext=new Neo4jMappingContext(metaData); @AT@ 1577 @LENGTH@ 19
------INS VariableDeclarationFragment@@mappingContext=new Neo4jMappingContext(metaData) @TO@ VariableDeclarationStatement@@Neo4jMappingContext mappingContext=new Neo4jMappingContext(metaData); @AT@ 1597 @LENGTH@ 50
---------INS SimpleName@@mappingContext @TO@ VariableDeclarationFragment@@mappingContext=new Neo4jMappingContext(metaData) @AT@ 1597 @LENGTH@ 14
---------INS ClassInstanceCreation@@Neo4jMappingContext[metaData] @TO@ VariableDeclarationFragment@@mappingContext=new Neo4jMappingContext(metaData) @AT@ 1614 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@Neo4jMappingContext[metaData] @AT@ 1614 @LENGTH@ 3
------------INS SimpleType@@Neo4jMappingContext @TO@ ClassInstanceCreation@@Neo4jMappingContext[metaData] @AT@ 1618 @LENGTH@ 19
------------INS SimpleName@@metaData @TO@ ClassInstanceCreation@@Neo4jMappingContext[metaData] @AT@ 1638 @LENGTH@ 8
---INS VariableDeclarationStatement@@Neo4jPersistentEntity<?> persistentEntity=mappingContext.getPersistentEntity(NodeWithUUIDAsId.class); @TO@ MethodDeclaration@@public, void, MethodName:shouldDetectExplicitIdFieldsAsIdProperties,  @AT@ 1651 @LENGTH@ 103
------INS ParameterizedType@@Neo4jPersistentEntity<?> @TO@ VariableDeclarationStatement@@Neo4jPersistentEntity<?> persistentEntity=mappingContext.getPersistentEntity(NodeWithUUIDAsId.class); @AT@ 1651 @LENGTH@ 24
---------INS SimpleType@@Neo4jPersistentEntity @TO@ ParameterizedType@@Neo4jPersistentEntity<?> @AT@ 1651 @LENGTH@ 21
---------INS WildcardType@@? @TO@ ParameterizedType@@Neo4jPersistentEntity<?> @AT@ 1673 @LENGTH@ 1
------INS VariableDeclarationFragment@@persistentEntity=mappingContext.getPersistentEntity(NodeWithUUIDAsId.class) @TO@ VariableDeclarationStatement@@Neo4jPersistentEntity<?> persistentEntity=mappingContext.getPersistentEntity(NodeWithUUIDAsId.class); @AT@ 1676 @LENGTH@ 77
---------INS SimpleName@@persistentEntity @TO@ VariableDeclarationFragment@@persistentEntity=mappingContext.getPersistentEntity(NodeWithUUIDAsId.class) @AT@ 1676 @LENGTH@ 16
---------INS MethodInvocation@@mappingContext.getPersistentEntity(NodeWithUUIDAsId.class) @TO@ VariableDeclarationFragment@@persistentEntity=mappingContext.getPersistentEntity(NodeWithUUIDAsId.class) @AT@ 1695 @LENGTH@ 58
------------INS SimpleName@@Name:mappingContext @TO@ MethodInvocation@@mappingContext.getPersistentEntity(NodeWithUUIDAsId.class) @AT@ 1695 @LENGTH@ 14
------------INS SimpleName@@MethodName:getPersistentEntity:[NodeWithUUIDAsId.class] @TO@ MethodInvocation@@mappingContext.getPersistentEntity(NodeWithUUIDAsId.class) @AT@ 1710 @LENGTH@ 43
---------------INS TypeLiteral@@NodeWithUUIDAsId.class @TO@ SimpleName@@MethodName:getPersistentEntity:[NodeWithUUIDAsId.class] @AT@ 1730 @LENGTH@ 22
---INS VariableDeclarationStatement@@Neo4jPersistentProperty idProperty=persistentEntity.getRequiredIdProperty(); @TO@ MethodDeclaration@@public, void, MethodName:shouldDetectExplicitIdFieldsAsIdProperties,  @AT@ 1757 @LENGTH@ 78
------INS SimpleType@@Neo4jPersistentProperty @TO@ VariableDeclarationStatement@@Neo4jPersistentProperty idProperty=persistentEntity.getRequiredIdProperty(); @AT@ 1757 @LENGTH@ 23
------INS VariableDeclarationFragment@@idProperty=persistentEntity.getRequiredIdProperty() @TO@ VariableDeclarationStatement@@Neo4jPersistentProperty idProperty=persistentEntity.getRequiredIdProperty(); @AT@ 1781 @LENGTH@ 53
---------INS SimpleName@@idProperty @TO@ VariableDeclarationFragment@@idProperty=persistentEntity.getRequiredIdProperty() @AT@ 1781 @LENGTH@ 10
---------INS MethodInvocation@@persistentEntity.getRequiredIdProperty() @TO@ VariableDeclarationFragment@@idProperty=persistentEntity.getRequiredIdProperty() @AT@ 1794 @LENGTH@ 40
------------INS SimpleName@@Name:persistentEntity @TO@ MethodInvocation@@persistentEntity.getRequiredIdProperty() @AT@ 1794 @LENGTH@ 16
------------INS SimpleName@@MethodName:getRequiredIdProperty:[] @TO@ MethodInvocation@@persistentEntity.getRequiredIdProperty() @AT@ 1811 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertThat(idProperty.isIdProperty()) @TO@ MethodDeclaration@@public, void, MethodName:shouldDetectExplicitIdFieldsAsIdProperties,  @AT@ 1838 @LENGTH@ 38
------INS MethodInvocation@@assertThat(idProperty.isIdProperty()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(idProperty.isIdProperty()) @AT@ 1838 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertThat:[idProperty.isIdProperty()] @TO@ MethodInvocation@@assertThat(idProperty.isIdProperty()) @AT@ 1838 @LENGTH@ 37
------------INS MethodInvocation@@idProperty.isIdProperty() @TO@ SimpleName@@MethodName:assertThat:[idProperty.isIdProperty()] @AT@ 1849 @LENGTH@ 25
---------------INS SimpleName@@Name:idProperty @TO@ MethodInvocation@@idProperty.isIdProperty() @AT@ 1849 @LENGTH@ 10
---------------INS SimpleName@@MethodName:isIdProperty:[] @TO@ MethodInvocation@@idProperty.isIdProperty() @AT@ 1860 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(idProperty.getName()).isEqualTo("myNiceId") @TO@ MethodDeclaration@@public, void, MethodName:shouldDetectExplicitIdFieldsAsIdProperties,  @AT@ 1879 @LENGTH@ 55
------INS MethodInvocation@@assertThat(idProperty.getName()).isEqualTo("myNiceId") @TO@ ExpressionStatement@@MethodInvocation:assertThat(idProperty.getName()).isEqualTo("myNiceId") @AT@ 1879 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:assertThat:[idProperty.getName()] @TO@ MethodInvocation@@assertThat(idProperty.getName()).isEqualTo("myNiceId") @AT@ 1879 @LENGTH@ 32
------------INS MethodInvocation@@idProperty.getName() @TO@ MethodInvocation@@MethodName:assertThat:[idProperty.getName()] @AT@ 1890 @LENGTH@ 20
---------------INS SimpleName@@Name:idProperty @TO@ MethodInvocation@@idProperty.getName() @AT@ 1890 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@idProperty.getName() @AT@ 1901 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["myNiceId"] @TO@ MethodInvocation@@assertThat(idProperty.getName()).isEqualTo("myNiceId") @AT@ 1912 @LENGTH@ 21
------------INS StringLiteral@@"myNiceId" @TO@ SimpleName@@MethodName:isEqualTo:["myNiceId"] @AT@ 1922 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:assertEquals(db,createDbMsg.getDatabaseObject()) @TO@ MethodDeclaration@@public, void, MethodName:createDatabase, Exception,  @AT@ 14946 @LENGTH@ 50
---INS MethodInvocation@@assertEquals(db,createDbMsg.getDatabaseObject()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(db,createDbMsg.getDatabaseObject()) @AT@ 14946 @LENGTH@ 49
------INS SimpleName@@MethodName:assertEquals:[db, createDbMsg.getDatabaseObject()] @TO@ MethodInvocation@@assertEquals(db,createDbMsg.getDatabaseObject()) @AT@ 14946 @LENGTH@ 49
---------INS SimpleName@@db @TO@ SimpleName@@MethodName:assertEquals:[db, createDbMsg.getDatabaseObject()] @AT@ 14959 @LENGTH@ 2
---------INS MethodInvocation@@createDbMsg.getDatabaseObject() @TO@ SimpleName@@MethodName:assertEquals:[db, createDbMsg.getDatabaseObject()] @AT@ 14963 @LENGTH@ 31
------------INS SimpleName@@Name:createDbMsg @TO@ MethodInvocation@@createDbMsg.getDatabaseObject() @AT@ 14963 @LENGTH@ 11
------------INS SimpleName@@MethodName:getDatabaseObject:[] @TO@ MethodInvocation@@createDbMsg.getDatabaseObject() @AT@ 14975 @LENGTH@ 19


INS ExpressionStatement@@MethodInvocation:Assert.state(!this.startImmediately || this.endpointRegistry != null,"No registry available") @TO@ MethodDeclaration@@public, void, MethodName:registerEndpoint, RabbitListenerEndpoint endpoint, @Nullable RabbitListenerContainerFactory<?> factory,  @AT@ 6948 @LENGTH@ 95
---INS MethodInvocation@@Assert.state(!this.startImmediately || this.endpointRegistry != null,"No registry available") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(!this.startImmediately || this.endpointRegistry != null,"No registry available") @AT@ 6948 @LENGTH@ 94
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(!this.startImmediately || this.endpointRegistry != null,"No registry available") @AT@ 6948 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[!this.startImmediately || this.endpointRegistry != null, "No registry available"] @TO@ MethodInvocation@@Assert.state(!this.startImmediately || this.endpointRegistry != null,"No registry available") @AT@ 6955 @LENGTH@ 87
---------INS InfixExpression@@!this.startImmediately || this.endpointRegistry != null @TO@ SimpleName@@MethodName:state:[!this.startImmediately || this.endpointRegistry != null, "No registry available"] @AT@ 6961 @LENGTH@ 55
------------INS PrefixExpression@@!this.startImmediately @TO@ InfixExpression@@!this.startImmediately || this.endpointRegistry != null @AT@ 6961 @LENGTH@ 22
---------------INS Operator@@! @TO@ PrefixExpression@@!this.startImmediately @AT@ 6961 @LENGTH@ 1
---------------INS FieldAccess@@this.startImmediately @TO@ PrefixExpression@@!this.startImmediately @AT@ 6962 @LENGTH@ 21
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.startImmediately @AT@ 6962 @LENGTH@ 4
------------------INS SimpleName@@startImmediately @TO@ FieldAccess@@this.startImmediately @AT@ 6967 @LENGTH@ 16
------------INS Operator@@|| @TO@ InfixExpression@@!this.startImmediately || this.endpointRegistry != null @AT@ 6983 @LENGTH@ 2
------------INS InfixExpression@@this.endpointRegistry != null @TO@ InfixExpression@@!this.startImmediately || this.endpointRegistry != null @AT@ 6987 @LENGTH@ 29
---------------INS FieldAccess@@this.endpointRegistry @TO@ InfixExpression@@this.endpointRegistry != null @AT@ 6987 @LENGTH@ 21
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.endpointRegistry @AT@ 6987 @LENGTH@ 4
------------------INS SimpleName@@endpointRegistry @TO@ FieldAccess@@this.endpointRegistry @AT@ 6992 @LENGTH@ 16
---------------INS Operator@@!= @TO@ InfixExpression@@this.endpointRegistry != null @AT@ 7008 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@this.endpointRegistry != null @AT@ 7012 @LENGTH@ 4
---------INS StringLiteral@@"No registry available" @TO@ SimpleName@@MethodName:state:[!this.startImmediately || this.endpointRegistry != null, "No registry available"] @AT@ 7018 @LENGTH@ 23


INS IfStatement@@if (shutdownTimeoutCheckerExecutorService && timeoutCheckerExecutorService != null) {  camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService);  timeoutCheckerExecutorService=null;  shutdownTimeoutCheckerExecutorService=false;} @TO@ MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 64017 @LENGTH@ 298
---INS InfixExpression@@shutdownTimeoutCheckerExecutorService && timeoutCheckerExecutorService != null @TO@ IfStatement@@if (shutdownTimeoutCheckerExecutorService && timeoutCheckerExecutorService != null) {  camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService);  timeoutCheckerExecutorService=null;  shutdownTimeoutCheckerExecutorService=false;} @AT@ 64021 @LENGTH@ 78
------INS SimpleName@@shutdownTimeoutCheckerExecutorService @TO@ InfixExpression@@shutdownTimeoutCheckerExecutorService && timeoutCheckerExecutorService != null @AT@ 64021 @LENGTH@ 37
------INS Operator@@&& @TO@ InfixExpression@@shutdownTimeoutCheckerExecutorService && timeoutCheckerExecutorService != null @AT@ 64058 @LENGTH@ 2
------INS InfixExpression@@timeoutCheckerExecutorService != null @TO@ InfixExpression@@shutdownTimeoutCheckerExecutorService && timeoutCheckerExecutorService != null @AT@ 64062 @LENGTH@ 37
---------INS SimpleName@@timeoutCheckerExecutorService @TO@ InfixExpression@@timeoutCheckerExecutorService != null @AT@ 64062 @LENGTH@ 29
---------INS Operator@@!= @TO@ InfixExpression@@timeoutCheckerExecutorService != null @AT@ 64091 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@timeoutCheckerExecutorService != null @AT@ 64095 @LENGTH@ 4
---INS Block@@ThenBody:{  camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService);  timeoutCheckerExecutorService=null;  shutdownTimeoutCheckerExecutorService=false;} @TO@ IfStatement@@if (shutdownTimeoutCheckerExecutorService && timeoutCheckerExecutorService != null) {  camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService);  timeoutCheckerExecutorService=null;  shutdownTimeoutCheckerExecutorService=false;} @AT@ 64101 @LENGTH@ 214
------INS ExpressionStatement@@MethodInvocation:camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService) @TO@ Block@@ThenBody:{  camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService);  timeoutCheckerExecutorService=null;  shutdownTimeoutCheckerExecutorService=false;} @AT@ 64115 @LENGTH@ 81
---------INS MethodInvocation@@camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService) @TO@ ExpressionStatement@@MethodInvocation:camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService) @AT@ 64115 @LENGTH@ 80
------------INS MethodInvocation@@MethodName:getExecutorServiceManager:[] @TO@ MethodInvocation@@camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService) @AT@ 64115 @LENGTH@ 40
------------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService) @AT@ 64115 @LENGTH@ 12
------------INS SimpleName@@MethodName:shutdown:[timeoutCheckerExecutorService] @TO@ MethodInvocation@@camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService) @AT@ 64156 @LENGTH@ 39
---------------INS SimpleName@@timeoutCheckerExecutorService @TO@ SimpleName@@MethodName:shutdown:[timeoutCheckerExecutorService] @AT@ 64165 @LENGTH@ 29
------INS ExpressionStatement@@Assignment:timeoutCheckerExecutorService=null @TO@ Block@@ThenBody:{  camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService);  timeoutCheckerExecutorService=null;  shutdownTimeoutCheckerExecutorService=false;} @AT@ 64209 @LENGTH@ 37
---------INS Assignment@@timeoutCheckerExecutorService=null @TO@ ExpressionStatement@@Assignment:timeoutCheckerExecutorService=null @AT@ 64209 @LENGTH@ 36
------------INS SimpleName@@timeoutCheckerExecutorService @TO@ Assignment@@timeoutCheckerExecutorService=null @AT@ 64209 @LENGTH@ 29
------------INS Operator@@= @TO@ Assignment@@timeoutCheckerExecutorService=null @AT@ 64238 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@timeoutCheckerExecutorService=null @AT@ 64241 @LENGTH@ 4
------INS ExpressionStatement@@Assignment:shutdownTimeoutCheckerExecutorService=false @TO@ Block@@ThenBody:{  camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService);  timeoutCheckerExecutorService=null;  shutdownTimeoutCheckerExecutorService=false;} @AT@ 64259 @LENGTH@ 46
---------INS Assignment@@shutdownTimeoutCheckerExecutorService=false @TO@ ExpressionStatement@@Assignment:shutdownTimeoutCheckerExecutorService=false @AT@ 64259 @LENGTH@ 45
------------INS SimpleName@@shutdownTimeoutCheckerExecutorService @TO@ Assignment@@shutdownTimeoutCheckerExecutorService=false @AT@ 64259 @LENGTH@ 37
------------INS Operator@@= @TO@ Assignment@@shutdownTimeoutCheckerExecutorService=false @AT@ 64296 @LENGTH@ 1
------------INS BooleanLiteral@@false @TO@ Assignment@@shutdownTimeoutCheckerExecutorService=false @AT@ 64299 @LENGTH@ 5


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[public]ELRequestMatcher, [RequestMatcher] @AT@ 2290 @LENGTH@ 198
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 2290 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 2297 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 2304 @LENGTH@ 8
---INS VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 2319 @LENGTH@ 39
------INS SimpleType@@StringBuilder @TO@ VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @AT@ 2319 @LENGTH@ 13
------INS VariableDeclarationFragment@@sb=new StringBuilder() @TO@ VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @AT@ 2333 @LENGTH@ 24
---------INS SimpleName@@sb @TO@ VariableDeclarationFragment@@sb=new StringBuilder() @AT@ 2333 @LENGTH@ 2
---------INS ClassInstanceCreation@@StringBuilder[] @TO@ VariableDeclarationFragment@@sb=new StringBuilder() @AT@ 2338 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 2338 @LENGTH@ 3
------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 2342 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:sb.append("EL [el=\"").append(this.expression.getExpressionString()).append("\"") @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 2361 @LENGTH@ 82
------INS MethodInvocation@@sb.append("EL [el=\"").append(this.expression.getExpressionString()).append("\"") @TO@ ExpressionStatement@@MethodInvocation:sb.append("EL [el=\"").append(this.expression.getExpressionString()).append("\"") @AT@ 2361 @LENGTH@ 81
---------INS MethodInvocation@@MethodName:append:[this.expression.getExpressionString()] @TO@ MethodInvocation@@sb.append("EL [el=\"").append(this.expression.getExpressionString()).append("\"") @AT@ 2361 @LENGTH@ 68
------------INS MethodInvocation@@this.expression.getExpressionString() @TO@ MethodInvocation@@MethodName:append:[this.expression.getExpressionString()] @AT@ 2391 @LENGTH@ 37
---------------INS FieldAccess@@this.expression @TO@ MethodInvocation@@this.expression.getExpressionString() @AT@ 2391 @LENGTH@ 15
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.expression @AT@ 2391 @LENGTH@ 4
------------------INS SimpleName@@expression @TO@ FieldAccess@@this.expression @AT@ 2396 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getExpressionString:[] @TO@ MethodInvocation@@this.expression.getExpressionString() @AT@ 2407 @LENGTH@ 21
---------INS MethodInvocation@@MethodName:append:["EL [el=\""] @TO@ MethodInvocation@@sb.append("EL [el=\"").append(this.expression.getExpressionString()).append("\"") @AT@ 2361 @LENGTH@ 22
------------INS StringLiteral@@"EL [el=\"" @TO@ MethodInvocation@@MethodName:append:["EL [el=\""] @AT@ 2371 @LENGTH@ 11
---------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append("EL [el=\"").append(this.expression.getExpressionString()).append("\"") @AT@ 2361 @LENGTH@ 2
---------INS SimpleName@@MethodName:append:["\""] @TO@ MethodInvocation@@sb.append("EL [el=\"").append(this.expression.getExpressionString()).append("\"") @AT@ 2430 @LENGTH@ 12
------------INS StringLiteral@@"\"" @TO@ SimpleName@@MethodName:append:["\""] @AT@ 2437 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:sb.append("]") @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 2446 @LENGTH@ 15
------INS MethodInvocation@@sb.append("]") @TO@ ExpressionStatement@@MethodInvocation:sb.append("]") @AT@ 2446 @LENGTH@ 14
---------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append("]") @AT@ 2446 @LENGTH@ 2
---------INS SimpleName@@MethodName:append:["]"] @TO@ MethodInvocation@@sb.append("]") @AT@ 2449 @LENGTH@ 11
------------INS StringLiteral@@"]" @TO@ SimpleName@@MethodName:append:["]"] @AT@ 2456 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:sb.toString() @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 2464 @LENGTH@ 21
------INS MethodInvocation@@sb.toString() @TO@ ReturnStatement@@MethodInvocation:sb.toString() @AT@ 2471 @LENGTH@ 13
---------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.toString() @AT@ 2471 @LENGTH@ 2
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@sb.toString() @AT@ 2474 @LENGTH@ 10


UPD ThrowStatement@@ClassInstanceCreation:new ParameterOutOfBoundsException("Invalid parameter index! You seem to have declare too little query method parameters!",e) @TO@ ClassInstanceCreation:new ParameterOutOfBoundsException("Invalid parameter index! You seem to have declared too little query method parameters!",e) @AT@ 6276 @LENGTH@ 138
---UPD ClassInstanceCreation@@ParameterOutOfBoundsException["Invalid parameter index! You seem to have declare too little query method parameters!", e] @TO@ ParameterOutOfBoundsException["Invalid parameter index! You seem to have declared too little query method parameters!", e] @AT@ 6282 @LENGTH@ 131
------UPD StringLiteral@@"Invalid parameter index! You seem to have declare too little query method parameters!" @TO@ "Invalid parameter index! You seem to have declared too little query method parameters!" @AT@ 6322 @LENGTH@ 87


INS MethodDeclaration@@public, void, MethodName:setOauth2UserServiceWhenNullThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[@PowerMockIgnore({"okhttp3.*","okio.Buffer"}), @PrepareForTest(ClientRegistration.class), @RunWith(PowerMockRunner.class), public]OidcUserServiceTests,  @AT@ 4701 @LENGTH@ 203
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setOauth2UserServiceWhenNullThenThrowIllegalArgumentException,  @AT@ 4701 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setOauth2UserServiceWhenNullThenThrowIllegalArgumentException,  @AT@ 4708 @LENGTH@ 4
---INS SimpleName@@MethodName:setOauth2UserServiceWhenNullThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setOauth2UserServiceWhenNullThenThrowIllegalArgumentException,  @AT@ 4713 @LENGTH@ 61
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.userService.setOauth2UserService(null)).isInstanceOf(IllegalArgumentException.class) @TO@ MethodDeclaration@@public, void, MethodName:setOauth2UserServiceWhenNullThenThrowIllegalArgumentException,  @AT@ 4781 @LENGTH@ 120
------INS MethodInvocation@@assertThatThrownBy(() -> this.userService.setOauth2UserService(null)).isInstanceOf(IllegalArgumentException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.userService.setOauth2UserService(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 4781 @LENGTH@ 119
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.userService.setOauth2UserService(null)] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.userService.setOauth2UserService(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 4781 @LENGTH@ 69
------------INS LambdaExpression@@() -> this.userService.setOauth2UserService(null) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.userService.setOauth2UserService(null)] @AT@ 4800 @LENGTH@ 49
---------------INS MethodInvocation@@this.userService.setOauth2UserService(null) @TO@ LambdaExpression@@() -> this.userService.setOauth2UserService(null) @AT@ 4806 @LENGTH@ 43
------------------INS FieldAccess@@this.userService @TO@ MethodInvocation@@this.userService.setOauth2UserService(null) @AT@ 4806 @LENGTH@ 16
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.userService @AT@ 4806 @LENGTH@ 4
---------------------INS SimpleName@@userService @TO@ FieldAccess@@this.userService @AT@ 4811 @LENGTH@ 11
------------------INS SimpleName@@MethodName:setOauth2UserService:[null] @TO@ MethodInvocation@@this.userService.setOauth2UserService(null) @AT@ 4823 @LENGTH@ 26
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setOauth2UserService:[null] @AT@ 4844 @LENGTH@ 4
---------INS SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.userService.setOauth2UserService(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 4856 @LENGTH@ 44
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 4869 @LENGTH@ 30


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(address -> new TableBuilder(this.prefixAttribute,address)); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(address -> new TableServiceConfigurator(this.prefixAttribute,address)); @AT@ 9622 @LENGTH@ 126
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(address -> new TableBuilder(this.prefixAttribute,address)) @TO@ handler=new SimpleResourceServiceHandler(address -> new TableServiceConfigurator(this.prefixAttribute,address)) @AT@ 9645 @LENGTH@ 102
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[address -> new TableBuilder(this.prefixAttribute,address)] @TO@ SimpleResourceServiceHandler[address -> new TableServiceConfigurator(this.prefixAttribute,address)] @AT@ 9655 @LENGTH@ 92
---------UPD LambdaExpression@@address -> new TableBuilder(this.prefixAttribute,address) @TO@ address -> new TableServiceConfigurator(this.prefixAttribute,address) @AT@ 9688 @LENGTH@ 58
------------UPD ClassInstanceCreation@@TableBuilder[this.prefixAttribute, address] @TO@ TableServiceConfigurator[this.prefixAttribute, address] @AT@ 9699 @LENGTH@ 47
---------------UPD SimpleType@@TableBuilder @TO@ TableServiceConfigurator @AT@ 9703 @LENGTH@ 12


UPD IfStatement@@if (CachingConnectionFactory.this.active && (CachingConnectionFactory.this.publisherConfirms || CachingConnectionFactory.this.publisherReturns)) {  asyncClose();} else {  this.target.close();} @TO@ if (CachingConnectionFactory.this.active && (CachingConnectionFactory.this.publisherConfirms || CachingConnectionFactory.this.publisherReturns)) {  asyncClose();} else {  this.target.close();  if (this.target instanceof AutorecoveringChannel) {    ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.target);  }} @AT@ 43012 @LENGTH@ 228
---UPD Block@@ElseBody:{  this.target.close();} @TO@ ElseBody:{  this.target.close();  if (this.target instanceof AutorecoveringChannel) {    ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.target);  }} @AT@ 43207 @LENGTH@ 33
------INS IfStatement@@if (this.target instanceof AutorecoveringChannel) {  ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.target);} @TO@ Block@@ElseBody:{  this.target.close();} @AT@ 43376 @LENGTH@ 140
---------INS InstanceofExpression@@this.target instanceof AutorecoveringChannel @TO@ IfStatement@@if (this.target instanceof AutorecoveringChannel) {  ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.target);} @AT@ 43380 @LENGTH@ 44
------------INS FieldAccess@@this.target @TO@ InstanceofExpression@@this.target instanceof AutorecoveringChannel @AT@ 43380 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.target @AT@ 43380 @LENGTH@ 4
---------------INS SimpleName@@target @TO@ FieldAccess@@this.target @AT@ 43385 @LENGTH@ 6
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@this.target instanceof AutorecoveringChannel @AT@ 43392 @LENGTH@ 10
------------INS SimpleType@@AutorecoveringChannel @TO@ InstanceofExpression@@this.target instanceof AutorecoveringChannel @AT@ 43403 @LENGTH@ 21
---------INS Block@@ThenBody:{  ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.target);} @TO@ IfStatement@@if (this.target instanceof AutorecoveringChannel) {  ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.target);} @AT@ 43426 @LENGTH@ 90
------------INS ExpressionStatement@@MethodInvocation:ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.target) @TO@ Block@@ThenBody:{  ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.target);} @AT@ 43434 @LENGTH@ 75
---------------INS MethodInvocation@@ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.target) @TO@ ExpressionStatement@@MethodInvocation:ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.target) @AT@ 43434 @LENGTH@ 74
------------------INS SimpleName@@Name:ClosingRecoveryListener @TO@ MethodInvocation@@ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.target) @AT@ 43434 @LENGTH@ 23
------------------INS SimpleName@@MethodName:removeChannel:[(AutorecoveringChannel)this.target] @TO@ MethodInvocation@@ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.target) @AT@ 43458 @LENGTH@ 50
---------------------INS CastExpression@@(AutorecoveringChannel)this.target @TO@ SimpleName@@MethodName:removeChannel:[(AutorecoveringChannel)this.target] @AT@ 43472 @LENGTH@ 35
------------------------INS SimpleType@@AutorecoveringChannel @TO@ CastExpression@@(AutorecoveringChannel)this.target @AT@ 43473 @LENGTH@ 21
------------------------INS FieldAccess@@this.target @TO@ CastExpression@@(AutorecoveringChannel)this.target @AT@ 43496 @LENGTH@ 11
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.target @AT@ 43496 @LENGTH@ 4
---------------------------INS SimpleName@@target @TO@ FieldAccess@@this.target @AT@ 43501 @LENGTH@ 6


UPD TypeDeclaration@@[public]InfinispanSSOManagerFactory, AbstractService<SSOManagerFactory<A,D,S,TransactionBatch>>[SSOManagerFactory<A,D,S,TransactionBatch>] @TO@ [public]InfinispanSSOManagerFactory, [SSOManagerFactory<A,D,S,TransactionBatch>] @AT@ 2098 @LENGTH@ 1519
---INS ParameterizedType@@SSOManagerFactory<A,D,S,TransactionBatch> @TO@ TypeDeclaration@@[public]InfinispanSSOManagerFactory, AbstractService<SSOManagerFactory<A,D,S,TransactionBatch>>[SSOManagerFactory<A,D,S,TransactionBatch>] @AT@ 2113 @LENGTH@ 44
------MOV SimpleType@@SSOManagerFactory @TO@ ParameterizedType@@SSOManagerFactory<A,D,S,TransactionBatch> @AT@ 2172 @LENGTH@ 17
------MOV SimpleType@@A @TO@ ParameterizedType@@SSOManagerFactory<A,D,S,TransactionBatch> @AT@ 2190 @LENGTH@ 1
------MOV SimpleType@@D @TO@ ParameterizedType@@SSOManagerFactory<A,D,S,TransactionBatch> @AT@ 2193 @LENGTH@ 1
------MOV SimpleType@@S @TO@ ParameterizedType@@SSOManagerFactory<A,D,S,TransactionBatch> @AT@ 2196 @LENGTH@ 1
------MOV SimpleType@@TransactionBatch @TO@ ParameterizedType@@SSOManagerFactory<A,D,S,TransactionBatch> @AT@ 2199 @LENGTH@ 16
---DEL ParameterizedType@@AbstractService<SSOManagerFactory<A,D,S,TransactionBatch>> @AT@ 2156 @LENGTH@ 61
------DEL SimpleType@@AbstractService @AT@ 2156 @LENGTH@ 15
------DEL ParameterizedType@@SSOManagerFactory<A,D,S,TransactionBatch> @AT@ 2172 @LENGTH@ 44
---DEL ParameterizedType@@SSOManagerFactory<A,D,S,TransactionBatch> @AT@ 2229 @LENGTH@ 44
------DEL SimpleType@@SSOManagerFactory @AT@ 2229 @LENGTH@ 17
------DEL SimpleType@@A @AT@ 2247 @LENGTH@ 1
------DEL SimpleType@@D @AT@ 2250 @LENGTH@ 1
------DEL SimpleType@@S @AT@ 2253 @LENGTH@ 1
------DEL SimpleType@@TransactionBatch @AT@ 2256 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:setAuthorizedClientService, List<OAuth2AuthorizedClientService> authorizedClientServices,  @TO@ TypeDeclaration@@[@Configuration, static]OAuth2ClientWebMvcSecurityConfiguration, [WebMvcConfigurer] @AT@ 2930 @LENGTH@ 226
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setAuthorizedClientService, List<OAuth2AuthorizedClientService> authorizedClientServices,  @AT@ 2930 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setAuthorizedClientService, List<OAuth2AuthorizedClientService> authorizedClientServices,  @AT@ 2937 @LENGTH@ 4
---INS SimpleName@@MethodName:setAuthorizedClientService @TO@ MethodDeclaration@@public, void, MethodName:setAuthorizedClientService, List<OAuth2AuthorizedClientService> authorizedClientServices,  @AT@ 2942 @LENGTH@ 26
---INS SingleVariableDeclaration@@List<OAuth2AuthorizedClientService> authorizedClientServices @TO@ MethodDeclaration@@public, void, MethodName:setAuthorizedClientService, List<OAuth2AuthorizedClientService> authorizedClientServices,  @AT@ 2969 @LENGTH@ 60
------INS ParameterizedType@@List<OAuth2AuthorizedClientService> @TO@ SingleVariableDeclaration@@List<OAuth2AuthorizedClientService> authorizedClientServices @AT@ 2969 @LENGTH@ 35
---------INS SimpleType@@List @TO@ ParameterizedType@@List<OAuth2AuthorizedClientService> @AT@ 2969 @LENGTH@ 4
---------INS SimpleType@@OAuth2AuthorizedClientService @TO@ ParameterizedType@@List<OAuth2AuthorizedClientService> @AT@ 2974 @LENGTH@ 29
------INS SimpleName@@authorizedClientServices @TO@ SingleVariableDeclaration@@List<OAuth2AuthorizedClientService> authorizedClientServices @AT@ 3005 @LENGTH@ 24
---INS IfStatement@@if (authorizedClientServices.size() == 1) {  this.authorizedClientService=authorizedClientServices.get(0);} @TO@ MethodDeclaration@@public, void, MethodName:setAuthorizedClientService, List<OAuth2AuthorizedClientService> authorizedClientServices,  @AT@ 3036 @LENGTH@ 116
------INS InfixExpression@@authorizedClientServices.size() == 1 @TO@ IfStatement@@if (authorizedClientServices.size() == 1) {  this.authorizedClientService=authorizedClientServices.get(0);} @AT@ 3040 @LENGTH@ 36
---------INS MethodInvocation@@authorizedClientServices.size() @TO@ InfixExpression@@authorizedClientServices.size() == 1 @AT@ 3040 @LENGTH@ 31
------------INS SimpleName@@Name:authorizedClientServices @TO@ MethodInvocation@@authorizedClientServices.size() @AT@ 3040 @LENGTH@ 24
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@authorizedClientServices.size() @AT@ 3065 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@authorizedClientServices.size() == 1 @AT@ 3071 @LENGTH@ 2
---------INS NumberLiteral@@1 @TO@ InfixExpression@@authorizedClientServices.size() == 1 @AT@ 3075 @LENGTH@ 1
------INS Block@@ThenBody:{  this.authorizedClientService=authorizedClientServices.get(0);} @TO@ IfStatement@@if (authorizedClientServices.size() == 1) {  this.authorizedClientService=authorizedClientServices.get(0);} @AT@ 3078 @LENGTH@ 74
---------INS ExpressionStatement@@Assignment:this.authorizedClientService=authorizedClientServices.get(0) @TO@ Block@@ThenBody:{  this.authorizedClientService=authorizedClientServices.get(0);} @AT@ 3084 @LENGTH@ 63
------------INS Assignment@@this.authorizedClientService=authorizedClientServices.get(0) @TO@ ExpressionStatement@@Assignment:this.authorizedClientService=authorizedClientServices.get(0) @AT@ 3084 @LENGTH@ 62
---------------INS FieldAccess@@this.authorizedClientService @TO@ Assignment@@this.authorizedClientService=authorizedClientServices.get(0) @AT@ 3084 @LENGTH@ 28
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizedClientService @AT@ 3084 @LENGTH@ 4
------------------INS SimpleName@@authorizedClientService @TO@ FieldAccess@@this.authorizedClientService @AT@ 3089 @LENGTH@ 23
---------------INS Operator@@= @TO@ Assignment@@this.authorizedClientService=authorizedClientServices.get(0) @AT@ 3112 @LENGTH@ 1
---------------INS MethodInvocation@@authorizedClientServices.get(0) @TO@ Assignment@@this.authorizedClientService=authorizedClientServices.get(0) @AT@ 3115 @LENGTH@ 31
------------------INS SimpleName@@Name:authorizedClientServices @TO@ MethodInvocation@@authorizedClientServices.get(0) @AT@ 3115 @LENGTH@ 24
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@authorizedClientServices.get(0) @AT@ 3140 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 3144 @LENGTH@ 1


UPD EnumDeclaration@@KernelAPIVersion,  @TO@ [public]KernelAPIVersion,  @AT@ 1144 @LENGTH@ 1747
---INS Modifier@@public @TO@ EnumDeclaration@@KernelAPIVersion,  @AT@ 1139 @LENGTH@ 6
---INS EnumConstantDeclaration@@VERSION_1_5 @TO@ EnumDeclaration@@KernelAPIVersion,  @AT@ 1192 @LENGTH@ 20
------INS SimpleName@@VERSION_1_5 @TO@ EnumConstantDeclaration@@VERSION_1_5 @AT@ 1192 @LENGTH@ 11
------INS NumberLiteral@@1 @TO@ EnumConstantDeclaration@@VERSION_1_5 @AT@ 1204 @LENGTH@ 1
------INS NumberLiteral@@5 @TO@ EnumConstantDeclaration@@VERSION_1_5 @AT@ 1207 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ EnumConstantDeclaration@@VERSION_1_5 @AT@ 1210 @LENGTH@ 1
---INS EnumConstantDeclaration@@VERSION_1_6 @TO@ EnumDeclaration@@KernelAPIVersion,  @AT@ 1235 @LENGTH@ 20
------INS SimpleName@@VERSION_1_6 @TO@ EnumConstantDeclaration@@VERSION_1_6 @AT@ 1235 @LENGTH@ 11
------INS NumberLiteral@@1 @TO@ EnumConstantDeclaration@@VERSION_1_6 @AT@ 1247 @LENGTH@ 1
------INS NumberLiteral@@6 @TO@ EnumConstantDeclaration@@VERSION_1_6 @AT@ 1250 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ EnumConstantDeclaration@@VERSION_1_6 @AT@ 1253 @LENGTH@ 1
---INS EnumConstantDeclaration@@VERSION_4_2 @TO@ EnumDeclaration@@KernelAPIVersion,  @AT@ 1604 @LENGTH@ 20
------INS SimpleName@@VERSION_4_2 @TO@ EnumConstantDeclaration@@VERSION_4_2 @AT@ 1604 @LENGTH@ 11
------INS NumberLiteral@@4 @TO@ EnumConstantDeclaration@@VERSION_4_2 @AT@ 1616 @LENGTH@ 1
------INS NumberLiteral@@2 @TO@ EnumConstantDeclaration@@VERSION_4_2 @AT@ 1619 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ EnumConstantDeclaration@@VERSION_4_2 @AT@ 1622 @LENGTH@ 1
---INS EnumConstantDeclaration@@VERSION_7_0 @TO@ EnumDeclaration@@KernelAPIVersion,  @AT@ 1744 @LENGTH@ 20
------INS SimpleName@@VERSION_7_0 @TO@ EnumConstantDeclaration@@VERSION_7_0 @AT@ 1744 @LENGTH@ 11
------INS NumberLiteral@@7 @TO@ EnumConstantDeclaration@@VERSION_7_0 @AT@ 1756 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ EnumConstantDeclaration@@VERSION_7_0 @AT@ 1759 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ EnumConstantDeclaration@@VERSION_7_0 @AT@ 1762 @LENGTH@ 1
---INS EnumConstantDeclaration@@VERSION_8_0 @TO@ EnumDeclaration@@KernelAPIVersion,  @AT@ 1787 @LENGTH@ 20
------INS SimpleName@@VERSION_8_0 @TO@ EnumConstantDeclaration@@VERSION_8_0 @AT@ 1787 @LENGTH@ 11
------INS NumberLiteral@@8 @TO@ EnumConstantDeclaration@@VERSION_8_0 @AT@ 1799 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ EnumConstantDeclaration@@VERSION_8_0 @AT@ 1802 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ EnumConstantDeclaration@@VERSION_8_0 @AT@ 1805 @LENGTH@ 1
---INS MethodDeclaration@@public, ModelVersion, MethodName:getModelVersion,  @TO@ EnumDeclaration@@KernelAPIVersion,  @AT@ 2114 @LENGTH@ 74
------INS Modifier@@public @TO@ MethodDeclaration@@public, ModelVersion, MethodName:getModelVersion,  @AT@ 2114 @LENGTH@ 6
------INS SimpleType@@ModelVersion @TO@ MethodDeclaration@@public, ModelVersion, MethodName:getModelVersion,  @AT@ 2121 @LENGTH@ 12
------INS SimpleName@@MethodName:getModelVersion @TO@ MethodDeclaration@@public, ModelVersion, MethodName:getModelVersion,  @AT@ 2134 @LENGTH@ 15
------INS ReturnStatement@@SimpleName:modelVersion @TO@ MethodDeclaration@@public, ModelVersion, MethodName:getModelVersion,  @AT@ 2162 @LENGTH@ 20
---------INS SimpleName@@modelVersion @TO@ ReturnStatement@@SimpleName:modelVersion @AT@ 2169 @LENGTH@ 12


UPD ReturnStatement@@ClassInstanceCreation:new HashMap<String,String>(){
{
    put("service.type","zookeeper");
  }
}
 @TO@ MethodInvocation:Collections.singletonMap("service.type","zookeeper") @AT@ 1267 @LENGTH@ 97
---DEL ClassInstanceCreation@@HashMap<String,String>[] @AT@ 1274 @LENGTH@ 89
------DEL New@@new @AT@ 1274 @LENGTH@ 3
------DEL ParameterizedType@@HashMap<String,String> @AT@ 1278 @LENGTH@ 23
---------DEL SimpleType@@HashMap @AT@ 1278 @LENGTH@ 7
---------DEL SimpleType@@String @AT@ 1286 @LENGTH@ 6
---------DEL SimpleType@@String @AT@ 1294 @LENGTH@ 6
------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 1304 @LENGTH@ 59
---------DEL Initializer@@Initializer @AT@ 1305 @LENGTH@ 57
------------DEL ExpressionStatement@@MethodInvocation:put("service.type","zookeeper") @AT@ 1319 @LENGTH@ 33
---------------DEL MethodInvocation@@put("service.type","zookeeper") @AT@ 1319 @LENGTH@ 32
---INS MethodInvocation@@Collections.singletonMap("service.type","zookeeper") @TO@ ReturnStatement@@ClassInstanceCreation:new HashMap<String,String>(){
{
    put("service.type","zookeeper");
  }
}
 @AT@ 1278 @LENGTH@ 53
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap("service.type","zookeeper") @AT@ 1278 @LENGTH@ 11
------MOV SimpleName@@MethodName:put:["service.type", "zookeeper"] @TO@ MethodInvocation@@Collections.singletonMap("service.type","zookeeper") @AT@ 1319 @LENGTH@ 32


INS ExpressionStatement@@MethodInvocation:Assert.assertNull("The message was received by the consumer, this is wrong as the connection is stopped",message) @TO@ MethodDeclaration@@public, void, MethodName:removeJMSTopicRemovesAllMessages, Exception,  @AT@ 15728 @LENGTH@ 115
---INS MethodInvocation@@Assert.assertNull("The message was received by the consumer, this is wrong as the connection is stopped",message) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertNull("The message was received by the consumer, this is wrong as the connection is stopped",message) @AT@ 15728 @LENGTH@ 114
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertNull("The message was received by the consumer, this is wrong as the connection is stopped",message) @AT@ 15728 @LENGTH@ 6
------INS SimpleName@@MethodName:assertNull:["The message was received by the consumer, this is wrong as the connection is stopped", message] @TO@ MethodInvocation@@Assert.assertNull("The message was received by the consumer, this is wrong as the connection is stopped",message) @AT@ 15735 @LENGTH@ 107
---------INS StringLiteral@@"The message was received by the consumer, this is wrong as the connection is stopped" @TO@ SimpleName@@MethodName:assertNull:["The message was received by the consumer, this is wrong as the connection is stopped", message] @AT@ 15746 @LENGTH@ 86
---------INS SimpleName@@message @TO@ SimpleName@@MethodName:assertNull:["The message was received by the consumer, this is wrong as the connection is stopped", message] @AT@ 15834 @LENGTH@ 7


UPD LambdaExpression@@builder -> {
  ExpirationConfiguration expiration=builder.expiration().create();
  if ((expiration.lifespan() >= 0) || (expiration.maxIdle() >= 0)) {
    builder.expiration().lifespan(-1).maxIdle(-1);
    InfinispanEjbLogger.ROOT_LOGGER.expirationDisabled(InfinispanCacheRequirement.CONFIGURATION.resolve(containerName,templateCacheName));
  }
  int size=this.config.getMaxSize();
  builder.memory().evictionType(EvictionType.COUNT).storageType(StorageType.OBJECT).size(size);
  if (size >= 0) {
    builder.dataContainer().dataContainer(new EvictableDataContainer<>(size,BeanGroupKey.class::isInstance));
  }
}
 @TO@ builder -> {
  ExpirationConfiguration expiration=builder.expiration().create();
  if ((expiration.lifespan() >= 0) || (expiration.maxIdle() >= 0)) {
    builder.expiration().lifespan(-1).maxIdle(-1);
    InfinispanEjbLogger.ROOT_LOGGER.expirationDisabled(InfinispanCacheRequirement.CONFIGURATION.resolve(containerName,templateCacheName));
  }
  int size=this.config.getMaxSize();
  EvictionStrategy strategy=(size > 0) ? EvictionStrategy.REMOVE : EvictionStrategy.MANUAL;
  builder.memory().evictionStrategy(strategy).evictionType(EvictionType.COUNT).storageType(StorageType.OBJECT).size(size);
  if (strategy.isEnabled()) {
    builder.dataContainer().dataContainer(new EvictableDataContainer<>(size,BeanGroupKey.class::isInstance));
  }
}
 @AT@ 4788 @LENGTH@ 906
---UPD ExpressionStatement@@MethodInvocation:builder.memory().evictionType(EvictionType.COUNT).storageType(StorageType.OBJECT).size(size) @TO@ MethodInvocation:builder.memory().evictionStrategy(strategy).evictionType(EvictionType.COUNT).storageType(StorageType.OBJECT).size(size) @AT@ 5308 @LENGTH@ 93
------UPD MethodInvocation@@builder.memory().evictionType(EvictionType.COUNT).storageType(StorageType.OBJECT).size(size) @TO@ builder.memory().evictionStrategy(strategy).evictionType(EvictionType.COUNT).storageType(StorageType.OBJECT).size(size) @AT@ 5308 @LENGTH@ 92
---------INS MethodInvocation@@MethodName:evictionStrategy:[strategy] @TO@ MethodInvocation@@builder.memory().evictionType(EvictionType.COUNT).storageType(StorageType.OBJECT).size(size) @AT@ 5461 @LENGTH@ 43
------------INS SimpleName@@strategy @TO@ MethodInvocation@@MethodName:evictionStrategy:[strategy] @AT@ 5495 @LENGTH@ 8
---INS VariableDeclarationStatement@@EvictionStrategy strategy=(size > 0) ? EvictionStrategy.REMOVE : EvictionStrategy.MANUAL; @TO@ LambdaExpression@@builder -> {
  ExpirationConfiguration expiration=builder.expiration().create();
  if ((expiration.lifespan() >= 0) || (expiration.maxIdle() >= 0)) {
    builder.expiration().lifespan(-1).maxIdle(-1);
    InfinispanEjbLogger.ROOT_LOGGER.expirationDisabled(InfinispanCacheRequirement.CONFIGURATION.resolve(containerName,templateCacheName));
  }
  int size=this.config.getMaxSize();
  builder.memory().evictionType(EvictionType.COUNT).storageType(StorageType.OBJECT).size(size);
  if (size >= 0) {
    builder.dataContainer().dataContainer(new EvictableDataContainer<>(size,BeanGroupKey.class::isInstance));
  }
}
 @AT@ 5357 @LENGTH@ 91
------INS SimpleType@@EvictionStrategy @TO@ VariableDeclarationStatement@@EvictionStrategy strategy=(size > 0) ? EvictionStrategy.REMOVE : EvictionStrategy.MANUAL; @AT@ 5357 @LENGTH@ 16
------INS VariableDeclarationFragment@@strategy=(size > 0) ? EvictionStrategy.REMOVE : EvictionStrategy.MANUAL @TO@ VariableDeclarationStatement@@EvictionStrategy strategy=(size > 0) ? EvictionStrategy.REMOVE : EvictionStrategy.MANUAL; @AT@ 5374 @LENGTH@ 73
---------INS SimpleName@@strategy @TO@ VariableDeclarationFragment@@strategy=(size > 0) ? EvictionStrategy.REMOVE : EvictionStrategy.MANUAL @AT@ 5374 @LENGTH@ 8
---------INS ConditionalExpression@@(size > 0) ? EvictionStrategy.REMOVE : EvictionStrategy.MANUAL @TO@ VariableDeclarationFragment@@strategy=(size > 0) ? EvictionStrategy.REMOVE : EvictionStrategy.MANUAL @AT@ 5385 @LENGTH@ 62
------------INS ParenthesizedExpression@@(size > 0) @TO@ ConditionalExpression@@(size > 0) ? EvictionStrategy.REMOVE : EvictionStrategy.MANUAL @AT@ 5385 @LENGTH@ 10
---------------INS InfixExpression@@size > 0 @TO@ ParenthesizedExpression@@(size > 0) @AT@ 5386 @LENGTH@ 8
------------------INS SimpleName@@size @TO@ InfixExpression@@size > 0 @AT@ 5386 @LENGTH@ 4
------------------INS Operator@@> @TO@ InfixExpression@@size > 0 @AT@ 5390 @LENGTH@ 1
------------------INS NumberLiteral@@0 @TO@ InfixExpression@@size > 0 @AT@ 5393 @LENGTH@ 1
------------INS QualifiedName@@EvictionStrategy.REMOVE @TO@ ConditionalExpression@@(size > 0) ? EvictionStrategy.REMOVE : EvictionStrategy.MANUAL @AT@ 5398 @LENGTH@ 23
---------------INS SimpleName@@EvictionStrategy @TO@ QualifiedName@@EvictionStrategy.REMOVE @AT@ 5398 @LENGTH@ 16
---------------INS SimpleName@@REMOVE @TO@ QualifiedName@@EvictionStrategy.REMOVE @AT@ 5415 @LENGTH@ 6
------------INS QualifiedName@@EvictionStrategy.MANUAL @TO@ ConditionalExpression@@(size > 0) ? EvictionStrategy.REMOVE : EvictionStrategy.MANUAL @AT@ 5424 @LENGTH@ 23
---------------INS SimpleName@@EvictionStrategy @TO@ QualifiedName@@EvictionStrategy.MANUAL @AT@ 5424 @LENGTH@ 16
---------------INS SimpleName@@MANUAL @TO@ QualifiedName@@EvictionStrategy.MANUAL @AT@ 5441 @LENGTH@ 6
---UPD IfStatement@@if (size >= 0) {  builder.dataContainer().dataContainer(new EvictableDataContainer<>(size,BeanGroupKey.class::isInstance));} @TO@ if (strategy.isEnabled()) {  builder.dataContainer().dataContainer(new EvictableDataContainer<>(size,BeanGroupKey.class::isInstance));} @AT@ 5414 @LENGTH@ 270
------DEL InfixExpression@@size >= 0 @AT@ 5418 @LENGTH@ 9
---------DEL SimpleName@@size @AT@ 5418 @LENGTH@ 4
---------DEL Operator@@>= @AT@ 5422 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5426 @LENGTH@ 1
------INS MethodInvocation@@strategy.isEnabled() @TO@ IfStatement@@if (size >= 0) {  builder.dataContainer().dataContainer(new EvictableDataContainer<>(size,BeanGroupKey.class::isInstance));} @AT@ 5598 @LENGTH@ 20
---------INS SimpleName@@Name:strategy @TO@ MethodInvocation@@strategy.isEnabled() @AT@ 5598 @LENGTH@ 8
---------INS SimpleName@@MethodName:isEnabled:[] @TO@ MethodInvocation@@strategy.isEnabled() @AT@ 5607 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:tearDown,  @TO@ public, void, MethodName:doPostTearDown, Exception,  @AT@ 1812 @LENGTH@ 192
---UPD SimpleName@@MethodName:tearDown @TO@ MethodName:doPostTearDown @AT@ 1824 @LENGTH@ 8
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:tearDown,  @AT@ 1826 @LENGTH@ 9


UPD ThrowStatement@@ClassInstanceCreation:new GenericFileOperationFailedException("Cannot load private key bytes: " + config.getPrivateKeyBytes(),e) @TO@ ClassInstanceCreation:new GenericFileOperationFailedException("Cannot load private key bytes: " + Arrays.toString(config.getPrivateKeyBytes()),e) @AT@ 10463 @LENGTH@ 114
---UPD ClassInstanceCreation@@GenericFileOperationFailedException["Cannot load private key bytes: " + config.getPrivateKeyBytes(), e] @TO@ GenericFileOperationFailedException["Cannot load private key bytes: " + Arrays.toString(config.getPrivateKeyBytes()), e] @AT@ 10469 @LENGTH@ 107
------UPD InfixExpression@@"Cannot load private key bytes: " + config.getPrivateKeyBytes() @TO@ "Cannot load private key bytes: " + Arrays.toString(config.getPrivateKeyBytes()) @AT@ 10509 @LENGTH@ 63
---------DEL MethodInvocation@@config.getPrivateKeyBytes() @AT@ 10545 @LENGTH@ 27
---------INS MethodInvocation@@Arrays.toString(config.getPrivateKeyBytes()) @TO@ InfixExpression@@"Cannot load private key bytes: " + config.getPrivateKeyBytes() @AT@ 10570 @LENGTH@ 44
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(config.getPrivateKeyBytes()) @AT@ 10570 @LENGTH@ 6
------------INS SimpleName@@MethodName:toString:[config.getPrivateKeyBytes()] @TO@ MethodInvocation@@Arrays.toString(config.getPrivateKeyBytes()) @AT@ 10577 @LENGTH@ 37
---------------INS MethodInvocation@@config.getPrivateKeyBytes() @TO@ SimpleName@@MethodName:toString:[config.getPrivateKeyBytes()] @AT@ 10586 @LENGTH@ 27
------------------MOV SimpleName@@Name:config @TO@ MethodInvocation@@config.getPrivateKeyBytes() @AT@ 10545 @LENGTH@ 6
------------------MOV SimpleName@@Name:config @TO@ MethodInvocation@@config.getPrivateKeyBytes() @AT@ 10545 @LENGTH@ 6
------------------MOV SimpleName@@MethodName:getPrivateKeyBytes:[] @TO@ MethodInvocation@@config.getPrivateKeyBytes() @AT@ 10552 @LENGTH@ 20
------------------MOV SimpleName@@MethodName:getPrivateKeyBytes:[] @TO@ MethodInvocation@@config.getPrivateKeyBytes() @AT@ 10552 @LENGTH@ 20


UPD ThrowStatement@@ClassInstanceCreation:new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to) @TO@ ClassInstanceCreation:new GenericFileOperationFailedException("Cannot move existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to) @AT@ 42252 @LENGTH@ 148
---UPD ClassInstanceCreation@@GenericFileOperationFailedException["Cannot moved existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to] @TO@ GenericFileOperationFailedException["Cannot move existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to] @AT@ 42258 @LENGTH@ 141
------UPD InfixExpression@@"Cannot moved existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to @TO@ "Cannot move existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to @AT@ 42298 @LENGTH@ 100
---------UPD StringLiteral@@"Cannot moved existing file from: " @TO@ "Cannot move existing file from: " @AT@ 42298 @LENGTH@ 35


UPD VariableDeclarationStatement@@CapabilityServiceConfigurator codecBuilder=DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getDeploymentServiceConfigurator(codecServiceName,serverName,deploymentUnit.getName())).orElse(new SimpleSessionIdentifierCodecBuilder(codecServiceName,serverName)); @TO@ CapabilityServiceConfigurator codecConfigurator=DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getDeploymentServiceConfigurator(codecServiceName,serverName,deploymentUnit.getName())).orElse(new SimpleSessionIdentifierCodecBuilder(codecServiceName,serverName)); @AT@ 5270 @LENGTH@ 344
---UPD VariableDeclarationFragment@@codecBuilder=DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getDeploymentServiceConfigurator(codecServiceName,serverName,deploymentUnit.getName())).orElse(new SimpleSessionIdentifierCodecBuilder(codecServiceName,serverName)) @TO@ codecConfigurator=DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getDeploymentServiceConfigurator(codecServiceName,serverName,deploymentUnit.getName())).orElse(new SimpleSessionIdentifierCodecBuilder(codecServiceName,serverName)) @AT@ 5300 @LENGTH@ 313
------UPD SimpleName@@codecBuilder @TO@ codecConfigurator @AT@ 5300 @LENGTH@ 12


UPD MethodDeclaration@@public, final, Message, MethodName:toMessage, Object object, MessageProperties messageProperties, @Nullable Type genericType, MessageConversionException,  @TO@ public, final, Message, MethodName:toMessage, Object object, @Nullable MessageProperties messageProperties, @Nullable Type genericType, MessageConversionException,  @AT@ 1858 @LENGTH@ 531
---UPD SingleVariableDeclaration@@MessageProperties messageProperties @TO@ @Nullable MessageProperties messageProperties @AT@ 1904 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:http.oauth2().client() @TO@ MethodInvocation:http.oauth2Client() @AT@ 4333 @LENGTH@ 34
---UPD MethodInvocation@@http.oauth2().client() @TO@ http.oauth2Client() @AT@ 4333 @LENGTH@ 33
------DEL MethodInvocation@@MethodName:oauth2:[] @AT@ 4333 @LENGTH@ 18
------UPD SimpleName@@MethodName:client:[] @TO@ MethodName:oauth2Client:[] @AT@ 4358 @LENGTH@ 8


UPD SuperConstructorInvocation@@super(CacheRegistryFactoryBuilder::new);
 @TO@ super(CacheRegistryFactoryServiceConfigurator::new);
 @AT@ 1661 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Run now allowed for timer: {}",endpoint) @TO@ MethodInvocation:LOG.debug("Run not allowed for timer: {}",endpoint) @AT@ 2462 @LENGTH@ 53
---UPD MethodInvocation@@LOG.debug("Run now allowed for timer: {}",endpoint) @TO@ LOG.debug("Run not allowed for timer: {}",endpoint) @AT@ 2462 @LENGTH@ 52
------UPD SimpleName@@MethodName:debug:["Run now allowed for timer: {}", endpoint] @TO@ MethodName:debug:["Run not allowed for timer: {}", endpoint] @AT@ 2466 @LENGTH@ 48
---------UPD StringLiteral@@"Run now allowed for timer: {}" @TO@ "Run not allowed for timer: {}" @AT@ 2472 @LENGTH@ 31


MOV FieldDeclaration@@public, static, GenericContainer, [container=ConsulContainerSupport.consulContainer()] @TO@ TypeDeclaration@@[public]ConsulClusteredRoutePolicyTest,  @AT@ 2183 @LENGTH@ 84


UPD VariableDeclarationStatement@@BeanManagerFactoryBuilderConfiguration config=new BeanManagerFactoryBuilderConfiguration(){
  private volatile int maxSize=initialMaxSize;
  @Override public String getContainerName(){
    return containerName;
  }
  @Override public String getCacheName(){
    return cacheName;
  }
  @Override public int getMaxSize(){
    return this.maxSize;
  }
  @Override public void setMaxSize(  int size){
    this.maxSize=size;
  }
}
; @TO@ BeanManagerFactoryServiceConfiguratorConfiguration config=new BeanManagerFactoryServiceConfiguratorConfiguration(){
  private volatile int maxSize=initialMaxSize;
  @Override public String getContainerName(){
    return containerName;
  }
  @Override public String getCacheName(){
    return cacheName;
  }
  @Override public int getMaxSize(){
    return this.maxSize;
  }
  @Override public void setMaxSize(  int size){
    this.maxSize=size;
  }
}
; @AT@ 3124 @LENGTH@ 633
---UPD SimpleType@@BeanManagerFactoryBuilderConfiguration @TO@ BeanManagerFactoryServiceConfiguratorConfiguration @AT@ 3124 @LENGTH@ 38
---UPD VariableDeclarationFragment@@config=new BeanManagerFactoryBuilderConfiguration(){
  private volatile int maxSize=initialMaxSize;
  @Override public String getContainerName(){
    return containerName;
  }
  @Override public String getCacheName(){
    return cacheName;
  }
  @Override public int getMaxSize(){
    return this.maxSize;
  }
  @Override public void setMaxSize(  int size){
    this.maxSize=size;
  }
}
 @TO@ config=new BeanManagerFactoryServiceConfiguratorConfiguration(){
  private volatile int maxSize=initialMaxSize;
  @Override public String getContainerName(){
    return containerName;
  }
  @Override public String getCacheName(){
    return cacheName;
  }
  @Override public int getMaxSize(){
    return this.maxSize;
  }
  @Override public void setMaxSize(  int size){
    this.maxSize=size;
  }
}
 @AT@ 3163 @LENGTH@ 593
------UPD ClassInstanceCreation@@BeanManagerFactoryBuilderConfiguration[] @TO@ BeanManagerFactoryServiceConfiguratorConfiguration[] @AT@ 3172 @LENGTH@ 584
---------UPD SimpleType@@BeanManagerFactoryBuilderConfiguration @TO@ BeanManagerFactoryServiceConfiguratorConfiguration @AT@ 3176 @LENGTH@ 38


INS MethodDeclaration@@public, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]XPathFeatureTest, ContextTestSupport @AT@ 2021 @LENGTH@ 98
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 2021 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 2028 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 2033 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 2048 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:resetCoreConverters() @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 2068 @LENGTH@ 22
------INS MethodInvocation@@MethodName:resetCoreConverters:[] @TO@ ExpressionStatement@@MethodInvocation:resetCoreConverters() @AT@ 2068 @LENGTH@ 21
---INS ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 2099 @LENGTH@ 14
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 2099 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 2105 @LENGTH@ 5


UPD TypeDeclaration@@[public]ServerHttpBasicAuthenticationConverter, [Function<ServerWebExchange,Mono<Authentication>>] @TO@ [public]ServerHttpBasicAuthenticationConverter, [ServerAuthenticationConverter] @AT@ 1232 @LENGTH@ 1156
---DEL ParameterizedType@@Function<ServerWebExchange,Mono<Authentication>> @AT@ 1295 @LENGTH@ 49
------DEL SimpleType@@Function @AT@ 1295 @LENGTH@ 8
------DEL SimpleType@@ServerWebExchange @AT@ 1304 @LENGTH@ 17
------DEL ParameterizedType@@Mono<Authentication> @AT@ 1323 @LENGTH@ 20
---------DEL SimpleType@@Mono @AT@ 1323 @LENGTH@ 4
---------DEL SimpleType@@Authentication @AT@ 1328 @LENGTH@ 14
---INS SimpleType@@ServerAuthenticationConverter @TO@ TypeDeclaration@@[public]ServerHttpBasicAuthenticationConverter, [Function<ServerWebExchange,Mono<Authentication>>] @AT@ 1352 @LENGTH@ 29


INS IfStatement@@if (filterTarget instanceof Stream) {  final Stream<?> original=(Stream<?>)filterTarget;  if (debug) {    logger.debug("Filtering stream with " + original.count() + " elements");  }  Stream<?> filtered=original.filter(filterObject -> {    rootObject.setFilterObject(filterObject);    return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);  }).onClose(original::close);  if (debug) {    logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));  }  return filtered;} @TO@ MethodDeclaration@@public, Object, MethodName:filter, Object filterTarget, Expression filterExpression, EvaluationContext ctx,  @AT@ 5996 @LENGTH@ 532
---INS InstanceofExpression@@filterTarget instanceof Stream @TO@ IfStatement@@if (filterTarget instanceof Stream) {  final Stream<?> original=(Stream<?>)filterTarget;  if (debug) {    logger.debug("Filtering stream with " + original.count() + " elements");  }  Stream<?> filtered=original.filter(filterObject -> {    rootObject.setFilterObject(filterObject);    return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);  }).onClose(original::close);  if (debug) {    logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));  }  return filtered;} @AT@ 6000 @LENGTH@ 30
------INS SimpleName@@filterTarget @TO@ InstanceofExpression@@filterTarget instanceof Stream @AT@ 6000 @LENGTH@ 12
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@filterTarget instanceof Stream @AT@ 6013 @LENGTH@ 10
------INS SimpleType@@Stream @TO@ InstanceofExpression@@filterTarget instanceof Stream @AT@ 6024 @LENGTH@ 6
---INS Block@@ThenBody:{  final Stream<?> original=(Stream<?>)filterTarget;  if (debug) {    logger.debug("Filtering stream with " + original.count() + " elements");  }  Stream<?> filtered=original.filter(filterObject -> {    rootObject.setFilterObject(filterObject);    return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);  }).onClose(original::close);  if (debug) {    logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));  }  return filtered;} @TO@ IfStatement@@if (filterTarget instanceof Stream) {  final Stream<?> original=(Stream<?>)filterTarget;  if (debug) {    logger.debug("Filtering stream with " + original.count() + " elements");  }  Stream<?> filtered=original.filter(filterObject -> {    rootObject.setFilterObject(filterObject);    return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);  }).onClose(original::close);  if (debug) {    logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));  }  return filtered;} @AT@ 6032 @LENGTH@ 496
------INS VariableDeclarationStatement@@final Stream<?> original=(Stream<?>)filterTarget; @TO@ Block@@ThenBody:{  final Stream<?> original=(Stream<?>)filterTarget;  if (debug) {    logger.debug("Filtering stream with " + original.count() + " elements");  }  Stream<?> filtered=original.filter(filterObject -> {    rootObject.setFilterObject(filterObject);    return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);  }).onClose(original::close);  if (debug) {    logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));  }  return filtered;} @AT@ 6037 @LENGTH@ 52
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Stream<?> original=(Stream<?>)filterTarget; @AT@ 6037 @LENGTH@ 5
---------INS ParameterizedType@@Stream<?> @TO@ VariableDeclarationStatement@@final Stream<?> original=(Stream<?>)filterTarget; @AT@ 6043 @LENGTH@ 9
------------INS SimpleType@@Stream @TO@ ParameterizedType@@Stream<?> @AT@ 6043 @LENGTH@ 6
------------INS WildcardType@@? @TO@ ParameterizedType@@Stream<?> @AT@ 6050 @LENGTH@ 1
---------INS VariableDeclarationFragment@@original=(Stream<?>)filterTarget @TO@ VariableDeclarationStatement@@final Stream<?> original=(Stream<?>)filterTarget; @AT@ 6053 @LENGTH@ 35
------------INS SimpleName@@original @TO@ VariableDeclarationFragment@@original=(Stream<?>)filterTarget @AT@ 6053 @LENGTH@ 8
------------INS CastExpression@@(Stream<?>)filterTarget @TO@ VariableDeclarationFragment@@original=(Stream<?>)filterTarget @AT@ 6064 @LENGTH@ 24
---------------INS ParameterizedType@@Stream<?> @TO@ CastExpression@@(Stream<?>)filterTarget @AT@ 6065 @LENGTH@ 9
------------------INS SimpleType@@Stream @TO@ ParameterizedType@@Stream<?> @AT@ 6065 @LENGTH@ 6
------------------INS WildcardType@@? @TO@ ParameterizedType@@Stream<?> @AT@ 6072 @LENGTH@ 1
---------------INS SimpleName@@filterTarget @TO@ CastExpression@@(Stream<?>)filterTarget @AT@ 6076 @LENGTH@ 12
------INS IfStatement@@if (debug) {  logger.debug("Filtering stream with " + original.count() + " elements");} @TO@ Block@@ThenBody:{  final Stream<?> original=(Stream<?>)filterTarget;  if (debug) {    logger.debug("Filtering stream with " + original.count() + " elements");  }  Stream<?> filtered=original.filter(filterObject -> {    rootObject.setFilterObject(filterObject);    return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);  }).onClose(original::close);  if (debug) {    logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));  }  return filtered;} @AT@ 6093 @LENGTH@ 94
---------INS SimpleName@@debug @TO@ IfStatement@@if (debug) {  logger.debug("Filtering stream with " + original.count() + " elements");} @AT@ 6097 @LENGTH@ 5
---------INS Block@@ThenBody:{  logger.debug("Filtering stream with " + original.count() + " elements");} @TO@ IfStatement@@if (debug) {  logger.debug("Filtering stream with " + original.count() + " elements");} @AT@ 6104 @LENGTH@ 83
------------INS ExpressionStatement@@MethodInvocation:logger.debug("Filtering stream with " + original.count() + " elements") @TO@ Block@@ThenBody:{  logger.debug("Filtering stream with " + original.count() + " elements");} @AT@ 6110 @LENGTH@ 72
---------------INS MethodInvocation@@logger.debug("Filtering stream with " + original.count() + " elements") @TO@ ExpressionStatement@@MethodInvocation:logger.debug("Filtering stream with " + original.count() + " elements") @AT@ 6110 @LENGTH@ 71
------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug("Filtering stream with " + original.count() + " elements") @AT@ 6110 @LENGTH@ 6
------------------INS SimpleName@@MethodName:debug:["Filtering stream with " + original.count() + " elements"] @TO@ MethodInvocation@@logger.debug("Filtering stream with " + original.count() + " elements") @AT@ 6117 @LENGTH@ 64
---------------------INS InfixExpression@@"Filtering stream with " + original.count() + " elements" @TO@ SimpleName@@MethodName:debug:["Filtering stream with " + original.count() + " elements"] @AT@ 6123 @LENGTH@ 57
------------------------INS StringLiteral@@"Filtering stream with " @TO@ InfixExpression@@"Filtering stream with " + original.count() + " elements" @AT@ 6123 @LENGTH@ 24
------------------------INS Operator@@+ @TO@ InfixExpression@@"Filtering stream with " + original.count() + " elements" @AT@ 6147 @LENGTH@ 1
------------------------INS MethodInvocation@@original.count() @TO@ InfixExpression@@"Filtering stream with " + original.count() + " elements" @AT@ 6150 @LENGTH@ 16
---------------------------INS SimpleName@@Name:original @TO@ MethodInvocation@@original.count() @AT@ 6150 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:count:[] @TO@ MethodInvocation@@original.count() @AT@ 6159 @LENGTH@ 7
------------------------INS StringLiteral@@" elements" @TO@ InfixExpression@@"Filtering stream with " + original.count() + " elements" @AT@ 6169 @LENGTH@ 11
------INS VariableDeclarationStatement@@Stream<?> filtered=original.filter(filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
).onClose(original::close); @TO@ Block@@ThenBody:{  final Stream<?> original=(Stream<?>)filterTarget;  if (debug) {    logger.debug("Filtering stream with " + original.count() + " elements");  }  Stream<?> filtered=original.filter(filterObject -> {    rootObject.setFilterObject(filterObject);    return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);  }).onClose(original::close);  if (debug) {    logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));  }  return filtered;} @AT@ 6192 @LENGTH@ 207
---------INS ParameterizedType@@Stream<?> @TO@ VariableDeclarationStatement@@Stream<?> filtered=original.filter(filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
).onClose(original::close); @AT@ 6192 @LENGTH@ 9
------------INS SimpleType@@Stream @TO@ ParameterizedType@@Stream<?> @AT@ 6192 @LENGTH@ 6
------------INS WildcardType@@? @TO@ ParameterizedType@@Stream<?> @AT@ 6199 @LENGTH@ 1
---------INS VariableDeclarationFragment@@filtered=original.filter(filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
).onClose(original::close) @TO@ VariableDeclarationStatement@@Stream<?> filtered=original.filter(filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
).onClose(original::close); @AT@ 6202 @LENGTH@ 196
------------INS SimpleName@@filtered @TO@ VariableDeclarationFragment@@filtered=original.filter(filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
).onClose(original::close) @AT@ 6202 @LENGTH@ 8
------------INS MethodInvocation@@original.filter(filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
).onClose(original::close) @TO@ VariableDeclarationFragment@@filtered=original.filter(filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
).onClose(original::close) @AT@ 6213 @LENGTH@ 185
---------------INS MethodInvocation@@MethodName:filter:[filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
] @TO@ MethodInvocation@@original.filter(filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
).onClose(original::close) @AT@ 6213 @LENGTH@ 154
------------------INS LambdaExpression@@filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
 @TO@ MethodInvocation@@MethodName:filter:[filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
] @AT@ 6229 @LENGTH@ 137
---------------------INS VariableDeclarationFragment@@filterObject @TO@ LambdaExpression@@filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
 @AT@ 6229 @LENGTH@ 12
------------------------INS SimpleName@@filterObject @TO@ VariableDeclarationFragment@@filterObject @AT@ 6229 @LENGTH@ 12
---------------------INS ExpressionStatement@@MethodInvocation:rootObject.setFilterObject(filterObject) @TO@ LambdaExpression@@filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
 @AT@ 6251 @LENGTH@ 41
------------------------INS MethodInvocation@@rootObject.setFilterObject(filterObject) @TO@ ExpressionStatement@@MethodInvocation:rootObject.setFilterObject(filterObject) @AT@ 6251 @LENGTH@ 40
---------------------------INS SimpleName@@Name:rootObject @TO@ MethodInvocation@@rootObject.setFilterObject(filterObject) @AT@ 6251 @LENGTH@ 10
---------------------------INS SimpleName@@MethodName:setFilterObject:[filterObject] @TO@ MethodInvocation@@rootObject.setFilterObject(filterObject) @AT@ 6262 @LENGTH@ 29
------------------------------INS SimpleName@@filterObject @TO@ SimpleName@@MethodName:setFilterObject:[filterObject] @AT@ 6278 @LENGTH@ 12
---------------------INS ReturnStatement@@MethodInvocation:ExpressionUtils.evaluateAsBoolean(filterExpression,ctx) @TO@ LambdaExpression@@filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
 @AT@ 6297 @LENGTH@ 64
------------------------INS MethodInvocation@@ExpressionUtils.evaluateAsBoolean(filterExpression,ctx) @TO@ ReturnStatement@@MethodInvocation:ExpressionUtils.evaluateAsBoolean(filterExpression,ctx) @AT@ 6304 @LENGTH@ 56
---------------------------INS SimpleName@@Name:ExpressionUtils @TO@ MethodInvocation@@ExpressionUtils.evaluateAsBoolean(filterExpression,ctx) @AT@ 6304 @LENGTH@ 15
---------------------------INS SimpleName@@MethodName:evaluateAsBoolean:[filterExpression, ctx] @TO@ MethodInvocation@@ExpressionUtils.evaluateAsBoolean(filterExpression,ctx) @AT@ 6320 @LENGTH@ 40
------------------------------INS SimpleName@@filterExpression @TO@ SimpleName@@MethodName:evaluateAsBoolean:[filterExpression, ctx] @AT@ 6338 @LENGTH@ 16
------------------------------INS SimpleName@@ctx @TO@ SimpleName@@MethodName:evaluateAsBoolean:[filterExpression, ctx] @AT@ 6356 @LENGTH@ 3
---------------INS SimpleName@@Name:original @TO@ MethodInvocation@@original.filter(filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
).onClose(original::close) @AT@ 6213 @LENGTH@ 8
---------------INS SimpleName@@MethodName:onClose:[original::close] @TO@ MethodInvocation@@original.filter(filterObject -> {
  rootObject.setFilterObject(filterObject);
  return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);
}
).onClose(original::close) @AT@ 6374 @LENGTH@ 24
------INS IfStatement@@if (debug) {  logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));} @TO@ Block@@ThenBody:{  final Stream<?> original=(Stream<?>)filterTarget;  if (debug) {    logger.debug("Filtering stream with " + original.count() + " elements");  }  Stream<?> filtered=original.filter(filterObject -> {    rootObject.setFilterObject(filterObject);    return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);  }).onClose(original::close);  if (debug) {    logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));  }  return filtered;} @AT@ 6404 @LENGTH@ 99
---------INS SimpleName@@debug @TO@ IfStatement@@if (debug) {  logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));} @AT@ 6408 @LENGTH@ 5
---------INS Block@@ThenBody:{  logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));} @TO@ IfStatement@@if (debug) {  logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));} @AT@ 6415 @LENGTH@ 88
------------INS ExpressionStatement@@MethodInvocation:logger.debug("Retaining elements: " + filtered.collect(Collectors.toList())) @TO@ Block@@ThenBody:{  logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));} @AT@ 6421 @LENGTH@ 77
---------------INS MethodInvocation@@logger.debug("Retaining elements: " + filtered.collect(Collectors.toList())) @TO@ ExpressionStatement@@MethodInvocation:logger.debug("Retaining elements: " + filtered.collect(Collectors.toList())) @AT@ 6421 @LENGTH@ 76
------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug("Retaining elements: " + filtered.collect(Collectors.toList())) @AT@ 6421 @LENGTH@ 6
------------------INS SimpleName@@MethodName:debug:["Retaining elements: " + filtered.collect(Collectors.toList())] @TO@ MethodInvocation@@logger.debug("Retaining elements: " + filtered.collect(Collectors.toList())) @AT@ 6428 @LENGTH@ 69
---------------------INS InfixExpression@@"Retaining elements: " + filtered.collect(Collectors.toList()) @TO@ SimpleName@@MethodName:debug:["Retaining elements: " + filtered.collect(Collectors.toList())] @AT@ 6434 @LENGTH@ 62
------------------------INS StringLiteral@@"Retaining elements: " @TO@ InfixExpression@@"Retaining elements: " + filtered.collect(Collectors.toList()) @AT@ 6434 @LENGTH@ 22
------------------------INS Operator@@+ @TO@ InfixExpression@@"Retaining elements: " + filtered.collect(Collectors.toList()) @AT@ 6456 @LENGTH@ 1
------------------------INS MethodInvocation@@filtered.collect(Collectors.toList()) @TO@ InfixExpression@@"Retaining elements: " + filtered.collect(Collectors.toList()) @AT@ 6459 @LENGTH@ 37
---------------------------INS SimpleName@@Name:filtered @TO@ MethodInvocation@@filtered.collect(Collectors.toList()) @AT@ 6459 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:collect:[Collectors.toList()] @TO@ MethodInvocation@@filtered.collect(Collectors.toList()) @AT@ 6468 @LENGTH@ 28
------------------------------INS MethodInvocation@@Collectors.toList() @TO@ SimpleName@@MethodName:collect:[Collectors.toList()] @AT@ 6476 @LENGTH@ 19
---------------------------------INS SimpleName@@Name:Collectors @TO@ MethodInvocation@@Collectors.toList() @AT@ 6476 @LENGTH@ 10
---------------------------------INS SimpleName@@MethodName:toList:[] @TO@ MethodInvocation@@Collectors.toList() @AT@ 6487 @LENGTH@ 8
------INS ReturnStatement@@SimpleName:filtered @TO@ Block@@ThenBody:{  final Stream<?> original=(Stream<?>)filterTarget;  if (debug) {    logger.debug("Filtering stream with " + original.count() + " elements");  }  Stream<?> filtered=original.filter(filterObject -> {    rootObject.setFilterObject(filterObject);    return ExpressionUtils.evaluateAsBoolean(filterExpression,ctx);  }).onClose(original::close);  if (debug) {    logger.debug("Retaining elements: " + filtered.collect(Collectors.toList()));  }  return filtered;} @AT@ 6508 @LENGTH@ 16
---------INS SimpleName@@filtered @TO@ ReturnStatement@@SimpleName:filtered @AT@ 6515 @LENGTH@ 8


UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> rootTasks=analyzer.getRootTasks(); @TO@ List<Task<?>> rootTasks=analyzer.getRootTasks(); @AT@ 1942 @LENGTH@ 71
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1942 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1947 @LENGTH@ 28


UPD SuperConstructorInvocation@@super(CacheSingletonServiceBuilderFactoryBuilder::new);
 @TO@ super(CacheSingletonServiceBuilderFactoryServiceConfigurator::new);
 @AT@ 1699 @LENGTH@ 55


UPD TypeDeclaration@@[public]LegacyProtocolResourceDefinition, ProtocolResourceDefinition<P> @TO@ [public]LegacyProtocolResourceDefinition, ProtocolResourceDefinition @AT@ 1718 @LENGTH@ 2499
---INS SimpleType@@ProtocolResourceDefinition @TO@ TypeDeclaration@@[public]LegacyProtocolResourceDefinition, ProtocolResourceDefinition<P> @AT@ 1684 @LENGTH@ 26
---DEL ParameterizedType@@ProtocolResourceDefinition<P> @AT@ 1792 @LENGTH@ 29
------DEL SimpleType@@ProtocolResourceDefinition @AT@ 1792 @LENGTH@ 26
------DEL SimpleType@@P @AT@ 1819 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:params.put(key,value) @TO@ MethodInvocation:params.put(entry.getKey(),value) @AT@ 17400 @LENGTH@ 23
---UPD MethodInvocation@@params.put(key,value) @TO@ params.put(entry.getKey(),value) @AT@ 17400 @LENGTH@ 22
------UPD SimpleName@@MethodName:put:[key, value] @TO@ MethodName:put:[entry.getKey(), value] @AT@ 17407 @LENGTH@ 15
---------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:put:[key, value] @AT@ 17411 @LENGTH@ 14
------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 17411 @LENGTH@ 5
------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 17417 @LENGTH@ 8
---------DEL SimpleName@@key @AT@ 17411 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:pad(entry.getHeaderPadCount()) @TO@ MethodInvocation:pad(entry.getHeaderPadCount(Charset.forName(encoding))) @AT@ 13077 @LENGTH@ 31
---UPD MethodInvocation@@pad(entry.getHeaderPadCount()) @TO@ pad(entry.getHeaderPadCount(Charset.forName(encoding))) @AT@ 13077 @LENGTH@ 30
------UPD SimpleName@@MethodName:pad:[entry.getHeaderPadCount()] @TO@ MethodName:pad:[entry.getHeaderPadCount(Charset.forName(encoding))] @AT@ 13077 @LENGTH@ 30
---------UPD MethodInvocation@@entry.getHeaderPadCount() @TO@ entry.getHeaderPadCount(Charset.forName(encoding)) @AT@ 13081 @LENGTH@ 25
------------UPD SimpleName@@MethodName:getHeaderPadCount:[] @TO@ MethodName:getHeaderPadCount:[Charset.forName(encoding)] @AT@ 13087 @LENGTH@ 19
---------------INS MethodInvocation@@Charset.forName(encoding) @TO@ SimpleName@@MethodName:getHeaderPadCount:[] @AT@ 13163 @LENGTH@ 25
------------------INS SimpleName@@Name:Charset @TO@ MethodInvocation@@Charset.forName(encoding) @AT@ 13163 @LENGTH@ 7
------------------INS SimpleName@@MethodName:forName:[encoding] @TO@ MethodInvocation@@Charset.forName(encoding) @AT@ 13171 @LENGTH@ 17
---------------------INS SimpleName@@encoding @TO@ SimpleName@@MethodName:forName:[encoding] @AT@ 13179 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testConfiguration, Exception,  @TO@ TypeDeclaration@@[public]TaskExecutorPartitionHandlerTests,  @AT@ 2731 @LENGTH@ 394
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testConfiguration, Exception,  @AT@ 2731 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testConfiguration, Exception,  @AT@ 2738 @LENGTH@ 4
---INS SimpleName@@MethodName:testConfiguration @TO@ MethodDeclaration@@public, void, MethodName:testConfiguration, Exception,  @AT@ 2743 @LENGTH@ 17
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testConfiguration, Exception,  @AT@ 2770 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:handler=new TaskExecutorPartitionHandler() @TO@ MethodDeclaration@@public, void, MethodName:testConfiguration, Exception,  @AT@ 2785 @LENGTH@ 45
------INS Assignment@@handler=new TaskExecutorPartitionHandler() @TO@ ExpressionStatement@@Assignment:handler=new TaskExecutorPartitionHandler() @AT@ 2785 @LENGTH@ 44
---------INS SimpleName@@handler @TO@ Assignment@@handler=new TaskExecutorPartitionHandler() @AT@ 2785 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@handler=new TaskExecutorPartitionHandler() @AT@ 2792 @LENGTH@ 1
---------INS ClassInstanceCreation@@TaskExecutorPartitionHandler[] @TO@ Assignment@@handler=new TaskExecutorPartitionHandler() @AT@ 2795 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@TaskExecutorPartitionHandler[] @AT@ 2795 @LENGTH@ 3
------------INS SimpleType@@TaskExecutorPartitionHandler @TO@ ClassInstanceCreation@@TaskExecutorPartitionHandler[] @AT@ 2799 @LENGTH@ 28
---INS TryStatement@@try {  handler.afterPropertiesSet();  fail("Expected IllegalStateException when no step is set");} catch (IllegalStateException e) {  String message=e.getMessage();  assertEquals("Wrong message: " + message,"A Step must be provided.",message);} @TO@ MethodDeclaration@@public, void, MethodName:testConfiguration, Exception,  @AT@ 2834 @LENGTH@ 287
------INS ExpressionStatement@@MethodInvocation:handler.afterPropertiesSet() @TO@ TryStatement@@try {  handler.afterPropertiesSet();  fail("Expected IllegalStateException when no step is set");} catch (IllegalStateException e) {  String message=e.getMessage();  assertEquals("Wrong message: " + message,"A Step must be provided.",message);} @AT@ 2844 @LENGTH@ 29
---------INS MethodInvocation@@handler.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:handler.afterPropertiesSet() @AT@ 2844 @LENGTH@ 28
------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.afterPropertiesSet() @AT@ 2844 @LENGTH@ 7
------------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@handler.afterPropertiesSet() @AT@ 2852 @LENGTH@ 20
------INS ExpressionStatement@@MethodInvocation:fail("Expected IllegalStateException when no step is set") @TO@ TryStatement@@try {  handler.afterPropertiesSet();  fail("Expected IllegalStateException when no step is set");} catch (IllegalStateException e) {  String message=e.getMessage();  assertEquals("Wrong message: " + message,"A Step must be provided.",message);} @AT@ 2878 @LENGTH@ 59
---------INS MethodInvocation@@fail("Expected IllegalStateException when no step is set") @TO@ ExpressionStatement@@MethodInvocation:fail("Expected IllegalStateException when no step is set") @AT@ 2878 @LENGTH@ 58
------------INS SimpleName@@MethodName:fail:["Expected IllegalStateException when no step is set"] @TO@ MethodInvocation@@fail("Expected IllegalStateException when no step is set") @AT@ 2878 @LENGTH@ 58
---------------INS StringLiteral@@"Expected IllegalStateException when no step is set" @TO@ SimpleName@@MethodName:fail:["Expected IllegalStateException when no step is set"] @AT@ 2883 @LENGTH@ 52
------INS CatchClause@@catch (IllegalStateException e) {  String message=e.getMessage();  assertEquals("Wrong message: " + message,"A Step must be provided.",message);} @TO@ TryStatement@@try {  handler.afterPropertiesSet();  fail("Expected IllegalStateException when no step is set");} catch (IllegalStateException e) {  String message=e.getMessage();  assertEquals("Wrong message: " + message,"A Step must be provided.",message);} @AT@ 2946 @LENGTH@ 175
---------INS SingleVariableDeclaration@@IllegalStateException e @TO@ CatchClause@@catch (IllegalStateException e) {  String message=e.getMessage();  assertEquals("Wrong message: " + message,"A Step must be provided.",message);} @AT@ 2953 @LENGTH@ 23
------------INS SimpleType@@IllegalStateException @TO@ SingleVariableDeclaration@@IllegalStateException e @AT@ 2953 @LENGTH@ 21
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalStateException e @AT@ 2975 @LENGTH@ 1
---------INS VariableDeclarationStatement@@String message=e.getMessage(); @TO@ CatchClause@@catch (IllegalStateException e) {  String message=e.getMessage();  assertEquals("Wrong message: " + message,"A Step must be provided.",message);} @AT@ 3000 @LENGTH@ 32
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String message=e.getMessage(); @AT@ 3000 @LENGTH@ 6
------------INS VariableDeclarationFragment@@message=e.getMessage() @TO@ VariableDeclarationStatement@@String message=e.getMessage(); @AT@ 3007 @LENGTH@ 24
---------------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=e.getMessage() @AT@ 3007 @LENGTH@ 7
---------------INS MethodInvocation@@e.getMessage() @TO@ VariableDeclarationFragment@@message=e.getMessage() @AT@ 3017 @LENGTH@ 14
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 3017 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 3019 @LENGTH@ 12
---------INS ExpressionStatement@@MethodInvocation:assertEquals("Wrong message: " + message,"A Step must be provided.",message) @TO@ CatchClause@@catch (IllegalStateException e) {  String message=e.getMessage();  assertEquals("Wrong message: " + message,"A Step must be provided.",message);} @AT@ 3037 @LENGTH@ 79
------------INS MethodInvocation@@assertEquals("Wrong message: " + message,"A Step must be provided.",message) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Wrong message: " + message,"A Step must be provided.",message) @AT@ 3037 @LENGTH@ 78
---------------INS SimpleName@@MethodName:assertEquals:["Wrong message: " + message, "A Step must be provided.", message] @TO@ MethodInvocation@@assertEquals("Wrong message: " + message,"A Step must be provided.",message) @AT@ 3037 @LENGTH@ 78
------------------INS InfixExpression@@"Wrong message: " + message @TO@ SimpleName@@MethodName:assertEquals:["Wrong message: " + message, "A Step must be provided.", message] @AT@ 3050 @LENGTH@ 27
---------------------INS StringLiteral@@"Wrong message: " @TO@ InfixExpression@@"Wrong message: " + message @AT@ 3050 @LENGTH@ 17
---------------------INS Operator@@+ @TO@ InfixExpression@@"Wrong message: " + message @AT@ 3067 @LENGTH@ 1
---------------------INS SimpleName@@message @TO@ InfixExpression@@"Wrong message: " + message @AT@ 3070 @LENGTH@ 7
------------------INS StringLiteral@@"A Step must be provided." @TO@ SimpleName@@MethodName:assertEquals:["Wrong message: " + message, "A Step must be provided.", message] @AT@ 3079 @LENGTH@ 26
------------------INS SimpleName@@message @TO@ SimpleName@@MethodName:assertEquals:["Wrong message: " + message, "A Step must be provided.", message] @AT@ 3107 @LENGTH@ 7


INS MethodDeclaration@@default, boolean, MethodName:isTransactionActive,  @TO@ TypeDeclaration@@[public]MongoDbFactory, [CodecRegistryProvider, MongoSessionProvider] @AT@ 3723 @LENGTH@ 58
---INS Modifier@@default @TO@ MethodDeclaration@@default, boolean, MethodName:isTransactionActive,  @AT@ 3723 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@default, boolean, MethodName:isTransactionActive,  @AT@ 3731 @LENGTH@ 7
---INS SimpleName@@MethodName:isTransactionActive @TO@ MethodDeclaration@@default, boolean, MethodName:isTransactionActive,  @AT@ 3739 @LENGTH@ 19
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@default, boolean, MethodName:isTransactionActive,  @AT@ 3765 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3772 @LENGTH@ 5


INS MethodDeclaration@@default, T, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @TO@ TypeDeclaration@@[public]AuthorizationRequestRepository,  @AT@ 3301 @LENGTH@ 145
---INS Modifier@@default @TO@ MethodDeclaration@@default, T, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3301 @LENGTH@ 7
---INS SimpleType@@T @TO@ MethodDeclaration@@default, T, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3309 @LENGTH@ 1
---INS SimpleName@@MethodName:removeAuthorizationRequest @TO@ MethodDeclaration@@default, T, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3311 @LENGTH@ 26
---INS SingleVariableDeclaration@@HttpServletRequest request @TO@ MethodDeclaration@@default, T, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3338 @LENGTH@ 26
------INS SimpleType@@HttpServletRequest @TO@ SingleVariableDeclaration@@HttpServletRequest request @AT@ 3338 @LENGTH@ 18
------INS SimpleName@@request @TO@ SingleVariableDeclaration@@HttpServletRequest request @AT@ 3357 @LENGTH@ 7
---INS SingleVariableDeclaration@@HttpServletResponse response @TO@ MethodDeclaration@@default, T, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3366 @LENGTH@ 28
------INS SimpleType@@HttpServletResponse @TO@ SingleVariableDeclaration@@HttpServletResponse response @AT@ 3366 @LENGTH@ 19
------INS SimpleName@@response @TO@ SingleVariableDeclaration@@HttpServletResponse response @AT@ 3386 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:removeAuthorizationRequest(request) @TO@ MethodDeclaration@@default, T, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3400 @LENGTH@ 43
------INS MethodInvocation@@removeAuthorizationRequest(request) @TO@ ReturnStatement@@MethodInvocation:removeAuthorizationRequest(request) @AT@ 3407 @LENGTH@ 35
---------INS SimpleName@@MethodName:removeAuthorizationRequest:[request] @TO@ MethodInvocation@@removeAuthorizationRequest(request) @AT@ 3407 @LENGTH@ 35
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:removeAuthorizationRequest:[request] @AT@ 3434 @LENGTH@ 7


UPD Block@@WhileBody:{  for (int i=0; i < batch.size; i++) {    row=(OrcStruct)rr.next(row);    for (int j=0; j < batch.cols.length; j++) {      Object a=(row.getFieldValue(j));      ColumnVector cv=batch.cols[j];      int rowId=cv.isRepeating ? 0 : i;      if (a == null) {        Assert.assertEquals(true,!cv.noNulls && cv.isNull[rowId]);      } else       if (a instanceof BooleanWritable) {        Long temp=(long)(((BooleanWritable)a).get() ? 1 : 0);        long b=((LongColumnVector)cv).vector[rowId];        Assert.assertEquals(temp.toString(),Long.toString(b));      } else       if (a instanceof TimestampWritableV2) {        TimestampWritableV2 t=((TimestampWritableV2)a);        TimestampColumnVector tcv=((TimestampColumnVector)cv);        java.sql.Timestamp ts=tcv.asScratchTimestamp(rowId);        Assert.assertEquals(t.getTimestamp(),Timestamp.ofEpochMilli(ts.getTime(),ts.getNanos()));      } else       if (a instanceof DateWritableV2) {        DateWritableV2 adt=(DateWritableV2)a;        long b=((LongColumnVector)cv).vector[rowId];        Assert.assertEquals(adt.get().toEpochMilli(),DateWritableV2.daysToMillis((int)b));      } else       if (a instanceof HiveDecimalWritable) {        HiveDecimalWritable dec=(HiveDecimalWritable)a;        HiveDecimalWritable b=((DecimalColumnVector)cv).vector[i];        Assert.assertEquals(dec,b);      } else       if (a instanceof DoubleWritable) {        double b=((DoubleColumnVector)cv).vector[rowId];        assertEquals(a.toString(),Double.toString(b));      } else       if (a instanceof Text) {        BytesColumnVector bcv=(BytesColumnVector)cv;        Text b=new Text();        b.set(bcv.vector[rowId],bcv.start[rowId],bcv.length[rowId]);        assertEquals(a,b);      } else       if (a instanceof IntWritable || a instanceof LongWritable || a instanceof ByteWritable|| a instanceof ShortWritable) {        assertEquals(a.toString(),Long.toString(((LongColumnVector)cv).vector[rowId]));      } else {        assertEquals("huh",a.getClass().getName());      }    }  }  Assert.assertEquals(false,batch.cols[0].isRepeating);  Assert.assertEquals(false,batch.cols[1].isRepeating);  Assert.assertEquals(false,batch.cols[2].isRepeating);  Assert.assertEquals(true,batch.cols[3].isRepeating);  Assert.assertEquals(false,batch.cols[4].isRepeating);  Assert.assertEquals(false,batch.cols[5].isRepeating);  Assert.assertEquals(false,batch.cols[6].isRepeating);  Assert.assertEquals(false,batch.cols[7].isRepeating);  Assert.assertEquals(false,batch.cols[8].isRepeating);  Assert.assertEquals(false,batch.cols[9].isRepeating);  Assert.assertEquals(false,batch.cols[0].noNulls);  Assert.assertEquals(false,batch.cols[1].noNulls);  Assert.assertEquals(true,batch.cols[2].noNulls);  Assert.assertEquals(true,batch.cols[3].noNulls);  Assert.assertEquals(false,batch.cols[4].noNulls);  Assert.assertEquals(false,batch.cols[5].noNulls);  Assert.assertEquals(false,batch.cols[6].noNulls);  Assert.assertEquals(false,batch.cols[7].noNulls);  Assert.assertEquals(false,batch.cols[8].noNulls);  Assert.assertEquals(false,batch.cols[9].noNulls);} @TO@ WhileBody:{  Assert.assertEquals(lastRowNumber + 1,vrr.getRowNumber());  for (int i=0; i < batch.size; i++) {    Assert.assertEquals(rr.getRowNumber(),vrr.getRowNumber() + i);    lastRowNumber=rr.getRowNumber();    row=(OrcStruct)rr.next(row);    for (int j=0; j < batch.cols.length; j++) {      Object a=(row.getFieldValue(j));      ColumnVector cv=batch.cols[j];      int rowId=cv.isRepeating ? 0 : i;      if (a == null) {        Assert.assertEquals(true,!cv.noNulls && cv.isNull[rowId]);      } else       if (a instanceof BooleanWritable) {        Long temp=(long)(((BooleanWritable)a).get() ? 1 : 0);        long b=((LongColumnVector)cv).vector[rowId];        Assert.assertEquals(temp.toString(),Long.toString(b));      } else       if (a instanceof TimestampWritableV2) {        TimestampWritableV2 t=((TimestampWritableV2)a);        TimestampColumnVector tcv=((TimestampColumnVector)cv);        java.sql.Timestamp ts=tcv.asScratchTimestamp(rowId);        Assert.assertEquals(t.getTimestamp(),Timestamp.ofEpochMilli(ts.getTime(),ts.getNanos()));      } else       if (a instanceof DateWritableV2) {        DateWritableV2 adt=(DateWritableV2)a;        long b=((LongColumnVector)cv).vector[rowId];        Assert.assertEquals(adt.get().toEpochMilli(),DateWritableV2.daysToMillis((int)b));      } else       if (a instanceof HiveDecimalWritable) {        HiveDecimalWritable dec=(HiveDecimalWritable)a;        HiveDecimalWritable b=((DecimalColumnVector)cv).vector[i];        Assert.assertEquals(dec,b);      } else       if (a instanceof DoubleWritable) {        double b=((DoubleColumnVector)cv).vector[rowId];        assertEquals(a.toString(),Double.toString(b));      } else       if (a instanceof Text) {        BytesColumnVector bcv=(BytesColumnVector)cv;        Text b=new Text();        b.set(bcv.vector[rowId],bcv.start[rowId],bcv.length[rowId]);        assertEquals(a,b);      } else       if (a instanceof IntWritable || a instanceof LongWritable || a instanceof ByteWritable|| a instanceof ShortWritable) {        assertEquals(a.toString(),Long.toString(((LongColumnVector)cv).vector[rowId]));      } else {        assertEquals("huh",a.getClass().getName());      }    }  }  Assert.assertEquals(false,batch.cols[0].isRepeating);  Assert.assertEquals(false,batch.cols[1].isRepeating);  Assert.assertEquals(false,batch.cols[2].isRepeating);  Assert.assertEquals(true,batch.cols[3].isRepeating);  Assert.assertEquals(false,batch.cols[4].isRepeating);  Assert.assertEquals(false,batch.cols[5].isRepeating);  Assert.assertEquals(false,batch.cols[6].isRepeating);  Assert.assertEquals(false,batch.cols[7].isRepeating);  Assert.assertEquals(false,batch.cols[8].isRepeating);  Assert.assertEquals(false,batch.cols[9].isRepeating);  Assert.assertEquals(false,batch.cols[0].noNulls);  Assert.assertEquals(false,batch.cols[1].noNulls);  Assert.assertEquals(true,batch.cols[2].noNulls);  Assert.assertEquals(true,batch.cols[3].noNulls);  Assert.assertEquals(false,batch.cols[4].noNulls);  Assert.assertEquals(false,batch.cols[5].noNulls);  Assert.assertEquals(false,batch.cols[6].noNulls);  Assert.assertEquals(false,batch.cols[7].noNulls);  Assert.assertEquals(false,batch.cols[8].noNulls);  Assert.assertEquals(false,batch.cols[9].noNulls);} @AT@ 6383 @LENGTH@ 3948
---UPD ForStatement@@for (int i=0; i < batch.size; i++) {  row=(OrcStruct)rr.next(row);  for (int j=0; j < batch.cols.length; j++) {    Object a=(row.getFieldValue(j));    ColumnVector cv=batch.cols[j];    int rowId=cv.isRepeating ? 0 : i;    if (a == null) {      Assert.assertEquals(true,!cv.noNulls && cv.isNull[rowId]);    } else     if (a instanceof BooleanWritable) {      Long temp=(long)(((BooleanWritable)a).get() ? 1 : 0);      long b=((LongColumnVector)cv).vector[rowId];      Assert.assertEquals(temp.toString(),Long.toString(b));    } else     if (a instanceof TimestampWritableV2) {      TimestampWritableV2 t=((TimestampWritableV2)a);      TimestampColumnVector tcv=((TimestampColumnVector)cv);      java.sql.Timestamp ts=tcv.asScratchTimestamp(rowId);      Assert.assertEquals(t.getTimestamp(),Timestamp.ofEpochMilli(ts.getTime(),ts.getNanos()));    } else     if (a instanceof DateWritableV2) {      DateWritableV2 adt=(DateWritableV2)a;      long b=((LongColumnVector)cv).vector[rowId];      Assert.assertEquals(adt.get().toEpochMilli(),DateWritableV2.daysToMillis((int)b));    } else     if (a instanceof HiveDecimalWritable) {      HiveDecimalWritable dec=(HiveDecimalWritable)a;      HiveDecimalWritable b=((DecimalColumnVector)cv).vector[i];      Assert.assertEquals(dec,b);    } else     if (a instanceof DoubleWritable) {      double b=((DoubleColumnVector)cv).vector[rowId];      assertEquals(a.toString(),Double.toString(b));    } else     if (a instanceof Text) {      BytesColumnVector bcv=(BytesColumnVector)cv;      Text b=new Text();      b.set(bcv.vector[rowId],bcv.start[rowId],bcv.length[rowId]);      assertEquals(a,b);    } else     if (a instanceof IntWritable || a instanceof LongWritable || a instanceof ByteWritable|| a instanceof ShortWritable) {      assertEquals(a.toString(),Long.toString(((LongColumnVector)cv).vector[rowId]));    } else {      assertEquals("huh",a.getClass().getName());    }  }} @TO@ for (int i=0; i < batch.size; i++) {  Assert.assertEquals(rr.getRowNumber(),vrr.getRowNumber() + i);  lastRowNumber=rr.getRowNumber();  row=(OrcStruct)rr.next(row);  for (int j=0; j < batch.cols.length; j++) {    Object a=(row.getFieldValue(j));    ColumnVector cv=batch.cols[j];    int rowId=cv.isRepeating ? 0 : i;    if (a == null) {      Assert.assertEquals(true,!cv.noNulls && cv.isNull[rowId]);    } else     if (a instanceof BooleanWritable) {      Long temp=(long)(((BooleanWritable)a).get() ? 1 : 0);      long b=((LongColumnVector)cv).vector[rowId];      Assert.assertEquals(temp.toString(),Long.toString(b));    } else     if (a instanceof TimestampWritableV2) {      TimestampWritableV2 t=((TimestampWritableV2)a);      TimestampColumnVector tcv=((TimestampColumnVector)cv);      java.sql.Timestamp ts=tcv.asScratchTimestamp(rowId);      Assert.assertEquals(t.getTimestamp(),Timestamp.ofEpochMilli(ts.getTime(),ts.getNanos()));    } else     if (a instanceof DateWritableV2) {      DateWritableV2 adt=(DateWritableV2)a;      long b=((LongColumnVector)cv).vector[rowId];      Assert.assertEquals(adt.get().toEpochMilli(),DateWritableV2.daysToMillis((int)b));    } else     if (a instanceof HiveDecimalWritable) {      HiveDecimalWritable dec=(HiveDecimalWritable)a;      HiveDecimalWritable b=((DecimalColumnVector)cv).vector[i];      Assert.assertEquals(dec,b);    } else     if (a instanceof DoubleWritable) {      double b=((DoubleColumnVector)cv).vector[rowId];      assertEquals(a.toString(),Double.toString(b));    } else     if (a instanceof Text) {      BytesColumnVector bcv=(BytesColumnVector)cv;      Text b=new Text();      b.set(bcv.vector[rowId],bcv.start[rowId],bcv.length[rowId]);      assertEquals(a,b);    } else     if (a instanceof IntWritable || a instanceof LongWritable || a instanceof ByteWritable|| a instanceof ShortWritable) {      assertEquals(a.toString(),Long.toString(((LongColumnVector)cv).vector[rowId]));    } else {      assertEquals("huh",a.getClass().getName());    }  }} @AT@ 6391 @LENGTH@ 2706
------INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(rr.getRowNumber(),vrr.getRowNumber() + i) @TO@ ForStatement@@for (int i=0; i < batch.size; i++) {  row=(OrcStruct)rr.next(row);  for (int j=0; j < batch.cols.length; j++) {    Object a=(row.getFieldValue(j));    ColumnVector cv=batch.cols[j];    int rowId=cv.isRepeating ? 0 : i;    if (a == null) {      Assert.assertEquals(true,!cv.noNulls && cv.isNull[rowId]);    } else     if (a instanceof BooleanWritable) {      Long temp=(long)(((BooleanWritable)a).get() ? 1 : 0);      long b=((LongColumnVector)cv).vector[rowId];      Assert.assertEquals(temp.toString(),Long.toString(b));    } else     if (a instanceof TimestampWritableV2) {      TimestampWritableV2 t=((TimestampWritableV2)a);      TimestampColumnVector tcv=((TimestampColumnVector)cv);      java.sql.Timestamp ts=tcv.asScratchTimestamp(rowId);      Assert.assertEquals(t.getTimestamp(),Timestamp.ofEpochMilli(ts.getTime(),ts.getNanos()));    } else     if (a instanceof DateWritableV2) {      DateWritableV2 adt=(DateWritableV2)a;      long b=((LongColumnVector)cv).vector[rowId];      Assert.assertEquals(adt.get().toEpochMilli(),DateWritableV2.daysToMillis((int)b));    } else     if (a instanceof HiveDecimalWritable) {      HiveDecimalWritable dec=(HiveDecimalWritable)a;      HiveDecimalWritable b=((DecimalColumnVector)cv).vector[i];      Assert.assertEquals(dec,b);    } else     if (a instanceof DoubleWritable) {      double b=((DoubleColumnVector)cv).vector[rowId];      assertEquals(a.toString(),Double.toString(b));    } else     if (a instanceof Text) {      BytesColumnVector bcv=(BytesColumnVector)cv;      Text b=new Text();      b.set(bcv.vector[rowId],bcv.start[rowId],bcv.length[rowId]);      assertEquals(a,b);    } else     if (a instanceof IntWritable || a instanceof LongWritable || a instanceof ByteWritable|| a instanceof ShortWritable) {      assertEquals(a.toString(),Long.toString(((LongColumnVector)cv).vector[rowId]));    } else {      assertEquals("huh",a.getClass().getName());    }  }} @AT@ 6533 @LENGTH@ 61
---------INS MethodInvocation@@Assert.assertEquals(rr.getRowNumber(),vrr.getRowNumber() + i) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(rr.getRowNumber(),vrr.getRowNumber() + i) @AT@ 6533 @LENGTH@ 60
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(rr.getRowNumber(),vrr.getRowNumber() + i) @AT@ 6533 @LENGTH@ 6
------------INS SimpleName@@MethodName:assertEquals:[rr.getRowNumber(), vrr.getRowNumber() + i] @TO@ MethodInvocation@@Assert.assertEquals(rr.getRowNumber(),vrr.getRowNumber() + i) @AT@ 6540 @LENGTH@ 53
---------------INS MethodInvocation@@rr.getRowNumber() @TO@ SimpleName@@MethodName:assertEquals:[rr.getRowNumber(), vrr.getRowNumber() + i] @AT@ 6553 @LENGTH@ 17
------------------INS SimpleName@@Name:rr @TO@ MethodInvocation@@rr.getRowNumber() @AT@ 6553 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getRowNumber:[] @TO@ MethodInvocation@@rr.getRowNumber() @AT@ 6556 @LENGTH@ 14
---------------INS InfixExpression@@vrr.getRowNumber() + i @TO@ SimpleName@@MethodName:assertEquals:[rr.getRowNumber(), vrr.getRowNumber() + i] @AT@ 6572 @LENGTH@ 20
------------------INS MethodInvocation@@vrr.getRowNumber() @TO@ InfixExpression@@vrr.getRowNumber() + i @AT@ 6572 @LENGTH@ 18
---------------------INS SimpleName@@Name:vrr @TO@ MethodInvocation@@vrr.getRowNumber() @AT@ 6572 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:getRowNumber:[] @TO@ MethodInvocation@@vrr.getRowNumber() @AT@ 6576 @LENGTH@ 14
------------------INS Operator@@+ @TO@ InfixExpression@@vrr.getRowNumber() + i @AT@ 6590 @LENGTH@ 1
------------------INS SimpleName@@i @TO@ InfixExpression@@vrr.getRowNumber() + i @AT@ 6591 @LENGTH@ 1
------INS ExpressionStatement@@Assignment:lastRowNumber=rr.getRowNumber() @TO@ ForStatement@@for (int i=0; i < batch.size; i++) {  row=(OrcStruct)rr.next(row);  for (int j=0; j < batch.cols.length; j++) {    Object a=(row.getFieldValue(j));    ColumnVector cv=batch.cols[j];    int rowId=cv.isRepeating ? 0 : i;    if (a == null) {      Assert.assertEquals(true,!cv.noNulls && cv.isNull[rowId]);    } else     if (a instanceof BooleanWritable) {      Long temp=(long)(((BooleanWritable)a).get() ? 1 : 0);      long b=((LongColumnVector)cv).vector[rowId];      Assert.assertEquals(temp.toString(),Long.toString(b));    } else     if (a instanceof TimestampWritableV2) {      TimestampWritableV2 t=((TimestampWritableV2)a);      TimestampColumnVector tcv=((TimestampColumnVector)cv);      java.sql.Timestamp ts=tcv.asScratchTimestamp(rowId);      Assert.assertEquals(t.getTimestamp(),Timestamp.ofEpochMilli(ts.getTime(),ts.getNanos()));    } else     if (a instanceof DateWritableV2) {      DateWritableV2 adt=(DateWritableV2)a;      long b=((LongColumnVector)cv).vector[rowId];      Assert.assertEquals(adt.get().toEpochMilli(),DateWritableV2.daysToMillis((int)b));    } else     if (a instanceof HiveDecimalWritable) {      HiveDecimalWritable dec=(HiveDecimalWritable)a;      HiveDecimalWritable b=((DecimalColumnVector)cv).vector[i];      Assert.assertEquals(dec,b);    } else     if (a instanceof DoubleWritable) {      double b=((DoubleColumnVector)cv).vector[rowId];      assertEquals(a.toString(),Double.toString(b));    } else     if (a instanceof Text) {      BytesColumnVector bcv=(BytesColumnVector)cv;      Text b=new Text();      b.set(bcv.vector[rowId],bcv.start[rowId],bcv.length[rowId]);      assertEquals(a,b);    } else     if (a instanceof IntWritable || a instanceof LongWritable || a instanceof ByteWritable|| a instanceof ShortWritable) {      assertEquals(a.toString(),Long.toString(((LongColumnVector)cv).vector[rowId]));    } else {      assertEquals("huh",a.getClass().getName());    }  }} @AT@ 6603 @LENGTH@ 34
---------INS Assignment@@lastRowNumber=rr.getRowNumber() @TO@ ExpressionStatement@@Assignment:lastRowNumber=rr.getRowNumber() @AT@ 6603 @LENGTH@ 33
------------INS SimpleName@@lastRowNumber @TO@ Assignment@@lastRowNumber=rr.getRowNumber() @AT@ 6603 @LENGTH@ 13
------------INS Operator@@= @TO@ Assignment@@lastRowNumber=rr.getRowNumber() @AT@ 6616 @LENGTH@ 1
------------INS MethodInvocation@@rr.getRowNumber() @TO@ Assignment@@lastRowNumber=rr.getRowNumber() @AT@ 6619 @LENGTH@ 17
---------------INS SimpleName@@Name:rr @TO@ MethodInvocation@@rr.getRowNumber() @AT@ 6619 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getRowNumber:[] @TO@ MethodInvocation@@rr.getRowNumber() @AT@ 6622 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(lastRowNumber + 1,vrr.getRowNumber()) @TO@ Block@@WhileBody:{  for (int i=0; i < batch.size; i++) {    row=(OrcStruct)rr.next(row);    for (int j=0; j < batch.cols.length; j++) {      Object a=(row.getFieldValue(j));      ColumnVector cv=batch.cols[j];      int rowId=cv.isRepeating ? 0 : i;      if (a == null) {        Assert.assertEquals(true,!cv.noNulls && cv.isNull[rowId]);      } else       if (a instanceof BooleanWritable) {        Long temp=(long)(((BooleanWritable)a).get() ? 1 : 0);        long b=((LongColumnVector)cv).vector[rowId];        Assert.assertEquals(temp.toString(),Long.toString(b));      } else       if (a instanceof TimestampWritableV2) {        TimestampWritableV2 t=((TimestampWritableV2)a);        TimestampColumnVector tcv=((TimestampColumnVector)cv);        java.sql.Timestamp ts=tcv.asScratchTimestamp(rowId);        Assert.assertEquals(t.getTimestamp(),Timestamp.ofEpochMilli(ts.getTime(),ts.getNanos()));      } else       if (a instanceof DateWritableV2) {        DateWritableV2 adt=(DateWritableV2)a;        long b=((LongColumnVector)cv).vector[rowId];        Assert.assertEquals(adt.get().toEpochMilli(),DateWritableV2.daysToMillis((int)b));      } else       if (a instanceof HiveDecimalWritable) {        HiveDecimalWritable dec=(HiveDecimalWritable)a;        HiveDecimalWritable b=((DecimalColumnVector)cv).vector[i];        Assert.assertEquals(dec,b);      } else       if (a instanceof DoubleWritable) {        double b=((DoubleColumnVector)cv).vector[rowId];        assertEquals(a.toString(),Double.toString(b));      } else       if (a instanceof Text) {        BytesColumnVector bcv=(BytesColumnVector)cv;        Text b=new Text();        b.set(bcv.vector[rowId],bcv.start[rowId],bcv.length[rowId]);        assertEquals(a,b);      } else       if (a instanceof IntWritable || a instanceof LongWritable || a instanceof ByteWritable|| a instanceof ShortWritable) {        assertEquals(a.toString(),Long.toString(((LongColumnVector)cv).vector[rowId]));      } else {        assertEquals("huh",a.getClass().getName());      }    }  }  Assert.assertEquals(false,batch.cols[0].isRepeating);  Assert.assertEquals(false,batch.cols[1].isRepeating);  Assert.assertEquals(false,batch.cols[2].isRepeating);  Assert.assertEquals(true,batch.cols[3].isRepeating);  Assert.assertEquals(false,batch.cols[4].isRepeating);  Assert.assertEquals(false,batch.cols[5].isRepeating);  Assert.assertEquals(false,batch.cols[6].isRepeating);  Assert.assertEquals(false,batch.cols[7].isRepeating);  Assert.assertEquals(false,batch.cols[8].isRepeating);  Assert.assertEquals(false,batch.cols[9].isRepeating);  Assert.assertEquals(false,batch.cols[0].noNulls);  Assert.assertEquals(false,batch.cols[1].noNulls);  Assert.assertEquals(true,batch.cols[2].noNulls);  Assert.assertEquals(true,batch.cols[3].noNulls);  Assert.assertEquals(false,batch.cols[4].noNulls);  Assert.assertEquals(false,batch.cols[5].noNulls);  Assert.assertEquals(false,batch.cols[6].noNulls);  Assert.assertEquals(false,batch.cols[7].noNulls);  Assert.assertEquals(false,batch.cols[8].noNulls);  Assert.assertEquals(false,batch.cols[9].noNulls);} @AT@ 6420 @LENGTH@ 59
------INS MethodInvocation@@Assert.assertEquals(lastRowNumber + 1,vrr.getRowNumber()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(lastRowNumber + 1,vrr.getRowNumber()) @AT@ 6420 @LENGTH@ 58
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(lastRowNumber + 1,vrr.getRowNumber()) @AT@ 6420 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:[lastRowNumber + 1, vrr.getRowNumber()] @TO@ MethodInvocation@@Assert.assertEquals(lastRowNumber + 1,vrr.getRowNumber()) @AT@ 6427 @LENGTH@ 51
------------INS InfixExpression@@lastRowNumber + 1 @TO@ SimpleName@@MethodName:assertEquals:[lastRowNumber + 1, vrr.getRowNumber()] @AT@ 6440 @LENGTH@ 17
---------------INS SimpleName@@lastRowNumber @TO@ InfixExpression@@lastRowNumber + 1 @AT@ 6440 @LENGTH@ 13
---------------INS Operator@@+ @TO@ InfixExpression@@lastRowNumber + 1 @AT@ 6453 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@lastRowNumber + 1 @AT@ 6456 @LENGTH@ 1
------------INS MethodInvocation@@vrr.getRowNumber() @TO@ SimpleName@@MethodName:assertEquals:[lastRowNumber + 1, vrr.getRowNumber()] @AT@ 6459 @LENGTH@ 18
---------------INS SimpleName@@Name:vrr @TO@ MethodInvocation@@vrr.getRowNumber() @AT@ 6459 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getRowNumber:[] @TO@ MethodInvocation@@vrr.getRowNumber() @AT@ 6463 @LENGTH@ 14


UPD ReturnStatement@@MethodInvocation:this.converter.apply(MockServerWebExchange.from(this.request.build())) @TO@ MethodInvocation:this.converter.convert(MockServerWebExchange.from(this.request.build())) @AT@ 3555 @LENGTH@ 78
---UPD MethodInvocation@@this.converter.apply(MockServerWebExchange.from(this.request.build())) @TO@ this.converter.convert(MockServerWebExchange.from(this.request.build())) @AT@ 3562 @LENGTH@ 70
------UPD SimpleName@@MethodName:apply:[MockServerWebExchange.from(this.request.build())] @TO@ MethodName:convert:[MockServerWebExchange.from(this.request.build())] @AT@ 3577 @LENGTH@ 55


UPD ThrowStatement@@ClassInstanceCreation:new UDFArgumentException("LOWER only takes primitive types, got " + argumentOI.getTypeName()) @TO@ ClassInstanceCreation:new UDFArgumentException("LOWER only takes primitive types, got " + arguments[0].getTypeName()) @AT@ 2888 @LENGTH@ 111
---UPD ClassInstanceCreation@@UDFArgumentException["LOWER only takes primitive types, got " + argumentOI.getTypeName()] @TO@ UDFArgumentException["LOWER only takes primitive types, got " + arguments[0].getTypeName()] @AT@ 2894 @LENGTH@ 104
------UPD InfixExpression@@"LOWER only takes primitive types, got " + argumentOI.getTypeName() @TO@ "LOWER only takes primitive types, got " + arguments[0].getTypeName() @AT@ 2930 @LENGTH@ 67
---------UPD MethodInvocation@@argumentOI.getTypeName() @TO@ arguments[0].getTypeName() @AT@ 2973 @LENGTH@ 24
------------INS ArrayAccess@@arguments[0] @TO@ MethodInvocation@@argumentOI.getTypeName() @AT@ 2973 @LENGTH@ 12
---------------INS SimpleName@@arguments @TO@ ArrayAccess@@arguments[0] @AT@ 2973 @LENGTH@ 9
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@arguments[0] @AT@ 2983 @LENGTH@ 1
------------DEL SimpleName@@Name:argumentOI @AT@ 2973 @LENGTH@ 10


UPD TypeDeclaration@@[public]SecurityEvaluationContextExtension, EvaluationContextExtensionSupport @TO@ [public]SecurityEvaluationContextExtension, [EvaluationContextExtension] @AT@ 2351 @LENGTH@ 1082
---UPD SimpleType@@EvaluationContextExtensionSupport @TO@ EvaluationContextExtension @AT@ 2409 @LENGTH@ 33


INS MethodDeclaration@@public, void, MethodName:constructorMapClientRegistrationWhenEmptyMapThenRepositoryIsEmpty,  @TO@ TypeDeclaration@@[public]InMemoryClientRegistrationRepositoryTests,  @AT@ 2350 @LENGTH@ 225
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:constructorMapClientRegistrationWhenEmptyMapThenRepositoryIsEmpty,  @AT@ 2350 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:constructorMapClientRegistrationWhenEmptyMapThenRepositoryIsEmpty,  @AT@ 2357 @LENGTH@ 4
---INS SimpleName@@MethodName:constructorMapClientRegistrationWhenEmptyMapThenRepositoryIsEmpty @TO@ MethodDeclaration@@public, void, MethodName:constructorMapClientRegistrationWhenEmptyMapThenRepositoryIsEmpty,  @AT@ 2362 @LENGTH@ 65
---INS VariableDeclarationStatement@@InMemoryClientRegistrationRepository clients=new InMemoryClientRegistrationRepository(new HashMap<>()); @TO@ MethodDeclaration@@public, void, MethodName:constructorMapClientRegistrationWhenEmptyMapThenRepositoryIsEmpty,  @AT@ 2434 @LENGTH@ 105
------INS SimpleType@@InMemoryClientRegistrationRepository @TO@ VariableDeclarationStatement@@InMemoryClientRegistrationRepository clients=new InMemoryClientRegistrationRepository(new HashMap<>()); @AT@ 2434 @LENGTH@ 36
------INS VariableDeclarationFragment@@clients=new InMemoryClientRegistrationRepository(new HashMap<>()) @TO@ VariableDeclarationStatement@@InMemoryClientRegistrationRepository clients=new InMemoryClientRegistrationRepository(new HashMap<>()); @AT@ 2471 @LENGTH@ 67
---------INS SimpleName@@clients @TO@ VariableDeclarationFragment@@clients=new InMemoryClientRegistrationRepository(new HashMap<>()) @AT@ 2471 @LENGTH@ 7
---------INS ClassInstanceCreation@@InMemoryClientRegistrationRepository[new HashMap<>()] @TO@ VariableDeclarationFragment@@clients=new InMemoryClientRegistrationRepository(new HashMap<>()) @AT@ 2481 @LENGTH@ 57
------------INS New@@new @TO@ ClassInstanceCreation@@InMemoryClientRegistrationRepository[new HashMap<>()] @AT@ 2481 @LENGTH@ 3
------------INS SimpleType@@InMemoryClientRegistrationRepository @TO@ ClassInstanceCreation@@InMemoryClientRegistrationRepository[new HashMap<>()] @AT@ 2485 @LENGTH@ 36
------------INS ClassInstanceCreation@@HashMap<>[] @TO@ ClassInstanceCreation@@InMemoryClientRegistrationRepository[new HashMap<>()] @AT@ 2522 @LENGTH@ 15
---------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 2522 @LENGTH@ 3
---------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 2526 @LENGTH@ 9
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 2526 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(clients).isEmpty() @TO@ MethodDeclaration@@public, void, MethodName:constructorMapClientRegistrationWhenEmptyMapThenRepositoryIsEmpty,  @AT@ 2542 @LENGTH@ 30
------INS MethodInvocation@@assertThat(clients).isEmpty() @TO@ ExpressionStatement@@MethodInvocation:assertThat(clients).isEmpty() @AT@ 2542 @LENGTH@ 29
---------INS MethodInvocation@@MethodName:assertThat:[clients] @TO@ MethodInvocation@@assertThat(clients).isEmpty() @AT@ 2542 @LENGTH@ 19
------------INS SimpleName@@clients @TO@ MethodInvocation@@MethodName:assertThat:[clients] @AT@ 2553 @LENGTH@ 7
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@assertThat(clients).isEmpty() @AT@ 2562 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:StepVerifier.create(template.dropCollection(ValueObject.class).mergeWith(template.dropCollection("jmr1")).mergeWith(template.dropCollection("jmr1_out")).mergeWith(template.dropCollection("mapreduceout"))).verifyComplete() @TO@ MethodInvocation:StepVerifier.create(template.dropCollection(ValueObject.class).mergeWith(template.dropCollection("jmr1")).mergeWith(template.dropCollection("jmr1_out")).mergeWith(Mono.from(factory.getMongoDatabase("reactive-jrm1-out-db").drop()).then())).verifyComplete() @AT@ 2313 @LENGTH@ 265
---UPD MethodInvocation@@StepVerifier.create(template.dropCollection(ValueObject.class).mergeWith(template.dropCollection("jmr1")).mergeWith(template.dropCollection("jmr1_out")).mergeWith(template.dropCollection("mapreduceout"))).verifyComplete() @TO@ StepVerifier.create(template.dropCollection(ValueObject.class).mergeWith(template.dropCollection("jmr1")).mergeWith(template.dropCollection("jmr1_out")).mergeWith(Mono.from(factory.getMongoDatabase("reactive-jrm1-out-db").drop()).then())).verifyComplete() @AT@ 2313 @LENGTH@ 264
------UPD MethodInvocation@@MethodName:create:[template.dropCollection(ValueObject.class).mergeWith(template.dropCollection("jmr1")).mergeWith(template.dropCollection("jmr1_out")).mergeWith(template.dropCollection("mapreduceout"))] @TO@ MethodName:create:[template.dropCollection(ValueObject.class).mergeWith(template.dropCollection("jmr1")).mergeWith(template.dropCollection("jmr1_out")).mergeWith(Mono.from(factory.getMongoDatabase("reactive-jrm1-out-db").drop()).then())] @AT@ 2313 @LENGTH@ 239
---------UPD MethodInvocation@@template.dropCollection(ValueObject.class).mergeWith(template.dropCollection("jmr1")).mergeWith(template.dropCollection("jmr1_out")).mergeWith(template.dropCollection("mapreduceout")) @TO@ template.dropCollection(ValueObject.class).mergeWith(template.dropCollection("jmr1")).mergeWith(template.dropCollection("jmr1_out")).mergeWith(Mono.from(factory.getMongoDatabase("reactive-jrm1-out-db").drop()).then()) @AT@ 2338 @LENGTH@ 213
------------UPD SimpleName@@MethodName:mergeWith:[template.dropCollection("mapreduceout")] @TO@ MethodName:mergeWith:[Mono.from(factory.getMongoDatabase("reactive-jrm1-out-db").drop()).then()] @AT@ 2501 @LENGTH@ 50
---------------UPD MethodInvocation@@template.dropCollection("mapreduceout") @TO@ Mono.from(factory.getMongoDatabase("reactive-jrm1-out-db").drop()).then() @AT@ 2511 @LENGTH@ 39
------------------UPD SimpleName@@Name:template @TO@ Name:Mono @AT@ 2511 @LENGTH@ 8
------------------UPD SimpleName@@MethodName:dropCollection:["mapreduceout"] @TO@ MethodName:drop:[] @AT@ 2520 @LENGTH@ 30
------------------INS MethodInvocation@@MethodName:from:[factory.getMongoDatabase("reactive-jrm1-out-db").drop()] @TO@ MethodInvocation@@template.dropCollection("mapreduceout") @AT@ 2583 @LENGTH@ 66
---------------------INS MethodInvocation@@factory.getMongoDatabase("reactive-jrm1-out-db").drop() @TO@ MethodInvocation@@MethodName:from:[factory.getMongoDatabase("reactive-jrm1-out-db").drop()] @AT@ 2593 @LENGTH@ 55
------------------------MOV SimpleName@@MethodName:dropCollection:["mapreduceout"] @TO@ MethodInvocation@@factory.getMongoDatabase("reactive-jrm1-out-db").drop() @AT@ 2520 @LENGTH@ 30
---------------------------DEL StringLiteral@@"mapreduceout" @AT@ 2535 @LENGTH@ 14
------------------------INS MethodInvocation@@MethodName:getMongoDatabase:["reactive-jrm1-out-db"] @TO@ MethodInvocation@@factory.getMongoDatabase("reactive-jrm1-out-db").drop() @AT@ 2593 @LENGTH@ 48
---------------------------INS StringLiteral@@"reactive-jrm1-out-db" @TO@ MethodInvocation@@MethodName:getMongoDatabase:["reactive-jrm1-out-db"] @AT@ 2618 @LENGTH@ 22
------------------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getMongoDatabase("reactive-jrm1-out-db").drop() @AT@ 2593 @LENGTH@ 7
------------------INS SimpleName@@MethodName:then:[] @TO@ MethodInvocation@@template.dropCollection("mapreduceout") @AT@ 2650 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:afterRead, @Nullable T item,  @TO@ public, void, MethodName:afterRead, T item,  @AT@ 2570 @LENGTH@ 44
---UPD SingleVariableDeclaration@@@Nullable T item @TO@ T item @AT@ 2592 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().oauth2().client().authorizationCodeGrant().accessTokenResponseClient(this.accessTokenResponseClient()) @TO@ MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().oauth2Client().authorizationCodeGrant().accessTokenResponseClient(this.accessTokenResponseClient()) @AT@ 7511 @LENGTH@ 206
---UPD MethodInvocation@@http.authorizeRequests().anyRequest().authenticated().and().oauth2().client().authorizationCodeGrant().accessTokenResponseClient(this.accessTokenResponseClient()) @TO@ http.authorizeRequests().anyRequest().authenticated().and().oauth2Client().authorizationCodeGrant().accessTokenResponseClient(this.accessTokenResponseClient()) @AT@ 7511 @LENGTH@ 205
------DEL MethodInvocation@@MethodName:client:[] @AT@ 7511 @LENGTH@ 105
------UPD MethodInvocation@@MethodName:oauth2:[] @TO@ MethodName:oauth2Client:[] @AT@ 7511 @LENGTH@ 90


UPD TypeDeclaration@@[public]ProtocolResourceDefinition, AbstractProtocolResourceDefinition<P,ProtocolConfiguration<P>> @TO@ [public]ProtocolResourceDefinition, AbstractProtocolResourceDefinition @AT@ 2698 @LENGTH@ 8817
---INS SimpleType@@AbstractProtocolResourceDefinition @TO@ TypeDeclaration@@[public]ProtocolResourceDefinition, AbstractProtocolResourceDefinition<P,ProtocolConfiguration<P>> @AT@ 2593 @LENGTH@ 34
---DEL ParameterizedType@@AbstractProtocolResourceDefinition<P,ProtocolConfiguration<P>> @AT@ 2766 @LENGTH@ 63
------DEL SimpleType@@AbstractProtocolResourceDefinition @AT@ 2766 @LENGTH@ 34
------DEL SimpleType@@P @AT@ 2801 @LENGTH@ 1
------DEL ParameterizedType@@ProtocolConfiguration<P> @AT@ 2804 @LENGTH@ 24
---------DEL SimpleType@@ProtocolConfiguration @AT@ 2804 @LENGTH@ 21
---------DEL SimpleType@@P @AT@ 2826 @LENGTH@ 1


UPD MethodDeclaration@@public, voidMethodName:CustomStoreConfiguration, AttributeSet attributes, AsyncStoreConfiguration async, @SuppressWarnings("deprecation") SingletonStoreConfiguration singletonStore,  @TO@ public, voidMethodName:CustomStoreConfiguration, AttributeSet attributes, AsyncStoreConfiguration async, SingletonStoreConfiguration singletonStore,  @AT@ 1469 @LENGTH@ 222
---UPD SingleVariableDeclaration@@@SuppressWarnings("deprecation") SingletonStoreConfiguration singletonStore @TO@ SingletonStoreConfiguration singletonStore @AT@ 1557 @LENGTH@ 75


UPD ExpressionStatement@@MethodInvocation:builders.add(new TemplateConfigurationBuilder(ServiceName.parse(InfinispanCacheRequirement.CONFIGURATION.resolve(containerName,cacheName)),containerName,cacheName,templateCacheName,configurator)) @TO@ MethodInvocation:builders.add(new TemplateConfigurationServiceConfigurator(ServiceName.parse(InfinispanCacheRequirement.CONFIGURATION.resolve(containerName,cacheName)),containerName,cacheName,templateCacheName,configurator)) @AT@ 5838 @LENGTH@ 201
---UPD MethodInvocation@@builders.add(new TemplateConfigurationBuilder(ServiceName.parse(InfinispanCacheRequirement.CONFIGURATION.resolve(containerName,cacheName)),containerName,cacheName,templateCacheName,configurator)) @TO@ builders.add(new TemplateConfigurationServiceConfigurator(ServiceName.parse(InfinispanCacheRequirement.CONFIGURATION.resolve(containerName,cacheName)),containerName,cacheName,templateCacheName,configurator)) @AT@ 5838 @LENGTH@ 200
------UPD SimpleName@@MethodName:add:[new TemplateConfigurationBuilder(ServiceName.parse(InfinispanCacheRequirement.CONFIGURATION.resolve(containerName,cacheName)),containerName,cacheName,templateCacheName,configurator)] @TO@ MethodName:add:[new TemplateConfigurationServiceConfigurator(ServiceName.parse(InfinispanCacheRequirement.CONFIGURATION.resolve(containerName,cacheName)),containerName,cacheName,templateCacheName,configurator)] @AT@ 5847 @LENGTH@ 191
---------UPD ClassInstanceCreation@@TemplateConfigurationBuilder[ServiceName.parse(InfinispanCacheRequirement.CONFIGURATION.resolve(containerName,cacheName)), containerName, cacheName, templateCacheName, configurator] @TO@ TemplateConfigurationServiceConfigurator[ServiceName.parse(InfinispanCacheRequirement.CONFIGURATION.resolve(containerName,cacheName)), containerName, cacheName, templateCacheName, configurator] @AT@ 5851 @LENGTH@ 186
------------UPD SimpleType@@TemplateConfigurationBuilder @TO@ TemplateConfigurationServiceConfigurator @AT@ 5855 @LENGTH@ 28


INS VariableDeclarationStatement@@JChannel channel=new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(true),serviceName).get(); @TO@ MethodDeclaration@@public, ModelNode, MethodName:execute, OperationContext context, Metric<JChannel> metric, OperationFailedException,  @AT@ 2061 @LENGTH@ 109
---INS SimpleType@@JChannel @TO@ VariableDeclarationStatement@@JChannel channel=new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(true),serviceName).get(); @AT@ 2061 @LENGTH@ 8
---INS VariableDeclarationFragment@@channel=new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(true),serviceName).get() @TO@ VariableDeclarationStatement@@JChannel channel=new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(true),serviceName).get(); @AT@ 2070 @LENGTH@ 99
------INS SimpleName@@channel @TO@ VariableDeclarationFragment@@channel=new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(true),serviceName).get() @AT@ 2070 @LENGTH@ 7
------INS MethodInvocation@@new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(true),serviceName).get() @TO@ VariableDeclarationFragment@@channel=new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(true),serviceName).get() @AT@ 2080 @LENGTH@ 89
---------INS ClassInstanceCreation@@PassiveServiceSupplier<JChannel>[context.getServiceRegistry(true), serviceName] @TO@ MethodInvocation@@new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(true),serviceName).get() @AT@ 2080 @LENGTH@ 83
------------INS New@@new @TO@ ClassInstanceCreation@@PassiveServiceSupplier<JChannel>[context.getServiceRegistry(true), serviceName] @AT@ 2080 @LENGTH@ 3
------------INS ParameterizedType@@PassiveServiceSupplier<JChannel> @TO@ ClassInstanceCreation@@PassiveServiceSupplier<JChannel>[context.getServiceRegistry(true), serviceName] @AT@ 2084 @LENGTH@ 32
---------------INS SimpleType@@PassiveServiceSupplier @TO@ ParameterizedType@@PassiveServiceSupplier<JChannel> @AT@ 2084 @LENGTH@ 22
---------------INS SimpleType@@JChannel @TO@ ParameterizedType@@PassiveServiceSupplier<JChannel> @AT@ 2107 @LENGTH@ 8
------------INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<JChannel>[context.getServiceRegistry(true), serviceName] @AT@ 2117 @LENGTH@ 32
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2117 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2125 @LENGTH@ 24
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getServiceRegistry:[true] @AT@ 2144 @LENGTH@ 4
------------INS SimpleName@@serviceName @TO@ ClassInstanceCreation@@PassiveServiceSupplier<JChannel>[context.getServiceRegistry(true), serviceName] @AT@ 2151 @LENGTH@ 11
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(true),serviceName).get() @AT@ 2164 @LENGTH@ 5


UPD FieldDeclaration@@private, final, Declarable, [declarable] @TO@ private, final, transient, Declarable, [declarable] @AT@ 1019 @LENGTH@ 36
---INS Modifier@@transient @TO@ FieldDeclaration@@private, final, Declarable, [declarable] @AT@ 1033 @LENGTH@ 9


UPD IfStatement@@if (hasHeader(response,CACHE_CONTROL) || hasHeader(response,EXPIRES) || hasHeader(response,PRAGMA)) {  return;} @TO@ if (hasHeader(response,CACHE_CONTROL) || hasHeader(response,EXPIRES) || hasHeader(response,PRAGMA)|| response.getStatus() == HttpStatus.NOT_MODIFIED.value()) {  return;} @AT@ 2007 @LENGTH@ 123
---UPD InfixExpression@@hasHeader(response,CACHE_CONTROL) || hasHeader(response,EXPIRES) || hasHeader(response,PRAGMA) @TO@ hasHeader(response,CACHE_CONTROL) || hasHeader(response,EXPIRES) || hasHeader(response,PRAGMA)|| response.getStatus() == HttpStatus.NOT_MODIFIED.value() @AT@ 2011 @LENGTH@ 101
------INS InfixExpression@@response.getStatus() == HttpStatus.NOT_MODIFIED.value() @TO@ InfixExpression@@hasHeader(response,CACHE_CONTROL) || hasHeader(response,EXPIRES) || hasHeader(response,PRAGMA) @AT@ 2160 @LENGTH@ 55
---------INS MethodInvocation@@response.getStatus() @TO@ InfixExpression@@response.getStatus() == HttpStatus.NOT_MODIFIED.value() @AT@ 2160 @LENGTH@ 20
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getStatus() @AT@ 2160 @LENGTH@ 8
------------INS SimpleName@@MethodName:getStatus:[] @TO@ MethodInvocation@@response.getStatus() @AT@ 2169 @LENGTH@ 11
---------INS Operator@@== @TO@ InfixExpression@@response.getStatus() == HttpStatus.NOT_MODIFIED.value() @AT@ 2180 @LENGTH@ 2
---------INS MethodInvocation@@HttpStatus.NOT_MODIFIED.value() @TO@ InfixExpression@@response.getStatus() == HttpStatus.NOT_MODIFIED.value() @AT@ 2184 @LENGTH@ 31
------------INS QualifiedName@@Name:HttpStatus.NOT_MODIFIED @TO@ MethodInvocation@@HttpStatus.NOT_MODIFIED.value() @AT@ 2184 @LENGTH@ 23
------------INS SimpleName@@MethodName:value:[] @TO@ MethodInvocation@@HttpStatus.NOT_MODIFIED.value() @AT@ 2208 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:classMapper.setDefaultType(null) @TO@ MethodInvocation:classMapper.setDefaultType(LinkedHashMap.class) @AT@ 3872 @LENGTH@ 33
---UPD MethodInvocation@@classMapper.setDefaultType(null) @TO@ classMapper.setDefaultType(LinkedHashMap.class) @AT@ 3872 @LENGTH@ 32
------UPD SimpleName@@MethodName:setDefaultType:[null] @TO@ MethodName:setDefaultType:[LinkedHashMap.class] @AT@ 3884 @LENGTH@ 20
---------DEL NullLiteral@@null @AT@ 3899 @LENGTH@ 4
---------INS TypeLiteral@@LinkedHashMap.class @TO@ SimpleName@@MethodName:setDefaultType:[null] @AT@ 3905 @LENGTH@ 19


UPD VariableDeclarationStatement@@OAuth2UserRequest userRequest=new OAuth2UserRequest(authorizationCodeAuthentication.getClientRegistration(),accessToken); @TO@ OAuth2UserRequest userRequest=new OAuth2UserRequest(authorizationCodeAuthentication.getClientRegistration(),accessToken,additionalParameters); @AT@ 6134 @LENGTH@ 124
---UPD VariableDeclarationFragment@@userRequest=new OAuth2UserRequest(authorizationCodeAuthentication.getClientRegistration(),accessToken) @TO@ userRequest=new OAuth2UserRequest(authorizationCodeAuthentication.getClientRegistration(),accessToken,additionalParameters) @AT@ 6152 @LENGTH@ 105
------UPD ClassInstanceCreation@@OAuth2UserRequest[authorizationCodeAuthentication.getClientRegistration(), accessToken] @TO@ OAuth2UserRequest[authorizationCodeAuthentication.getClientRegistration(), accessToken, additionalParameters] @AT@ 6166 @LENGTH@ 91
---------INS SimpleName@@additionalParameters @TO@ ClassInstanceCreation@@OAuth2UserRequest[authorizationCodeAuthentication.getClientRegistration(), accessToken] @AT@ 6377 @LENGTH@ 20


UPD VariableDeclarationStatement@@OidcReactiveAuthenticationManager oidc=new OidcReactiveAuthenticationManager(client,new OidcReactiveOAuth2UserService(),authorizedClientService); @TO@ OidcAuthorizationCodeReactiveAuthenticationManager oidc=new OidcAuthorizationCodeReactiveAuthenticationManager(client,new OidcReactiveOAuth2UserService(),authorizedClientService); @AT@ 17422 @LENGTH@ 149
---UPD SimpleType@@OidcReactiveAuthenticationManager @TO@ OidcAuthorizationCodeReactiveAuthenticationManager @AT@ 17422 @LENGTH@ 33
---UPD VariableDeclarationFragment@@oidc=new OidcReactiveAuthenticationManager(client,new OidcReactiveOAuth2UserService(),authorizedClientService) @TO@ oidc=new OidcAuthorizationCodeReactiveAuthenticationManager(client,new OidcReactiveOAuth2UserService(),authorizedClientService) @AT@ 17456 @LENGTH@ 114
------UPD ClassInstanceCreation@@OidcReactiveAuthenticationManager[client, new OidcReactiveOAuth2UserService(), authorizedClientService] @TO@ OidcAuthorizationCodeReactiveAuthenticationManager[client, new OidcReactiveOAuth2UserService(), authorizedClientService] @AT@ 17463 @LENGTH@ 107
---------UPD SimpleType@@OidcReactiveAuthenticationManager @TO@ OidcAuthorizationCodeReactiveAuthenticationManager @AT@ 17467 @LENGTH@ 33


DEL MethodDeclaration@@long, MethodName:getBaseHitCounter,  @AT@ 1936 @LENGTH@ 20
---DEL PrimitiveType@@long @AT@ 1931 @LENGTH@ 4
---DEL SimpleName@@MethodName:getBaseHitCounter @AT@ 1936 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:builder.scope("openid","profile","email","address","phone") @TO@ MethodInvocation:builder.scope("openid","profile","email") @AT@ 3337 @LENGTH@ 64
---UPD MethodInvocation@@builder.scope("openid","profile","email","address","phone") @TO@ builder.scope("openid","profile","email") @AT@ 3337 @LENGTH@ 63
------UPD SimpleName@@MethodName:scope:["openid", "profile", "email", "address", "phone"] @TO@ MethodName:scope:["openid", "profile", "email"] @AT@ 3345 @LENGTH@ 55
---------DEL StringLiteral@@"address" @AT@ 3381 @LENGTH@ 9
---------DEL StringLiteral@@"phone" @AT@ 3392 @LENGTH@ 7


UPD MethodDeclaration@@voidMethodName:SocketBindingProtocolResourceDefinition, String name, UnaryOperator<ResourceDescriptor> configurator, ResourceServiceBuilderFactory<ProtocolConfiguration<P>> builderFactory, ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory,  @TO@ voidMethodName:SocketBindingProtocolResourceDefinition, String name, UnaryOperator<ResourceDescriptor> configurator, ResourceServiceConfiguratorFactory serviceConfiguratorFactory, ResourceServiceConfiguratorFactory parentServiceConfiguratorFactory,  @AT@ 4102 @LENGTH@ 370
---UPD SingleVariableDeclaration@@ResourceServiceBuilderFactory<ProtocolConfiguration<P>> builderFactory @TO@ ResourceServiceConfiguratorFactory serviceConfiguratorFactory @AT@ 4203 @LENGTH@ 70
------INS SimpleType@@ResourceServiceConfiguratorFactory @TO@ SingleVariableDeclaration@@ResourceServiceBuilderFactory<ProtocolConfiguration<P>> builderFactory @AT@ 4027 @LENGTH@ 34
------DEL ParameterizedType@@ResourceServiceBuilderFactory<ProtocolConfiguration<P>> @AT@ 4203 @LENGTH@ 55
---------DEL SimpleType@@ResourceServiceBuilderFactory @AT@ 4203 @LENGTH@ 29
---------DEL ParameterizedType@@ProtocolConfiguration<P> @AT@ 4233 @LENGTH@ 24
------------DEL SimpleType@@ProtocolConfiguration @AT@ 4233 @LENGTH@ 21
------------DEL SimpleType@@P @AT@ 4255 @LENGTH@ 1
------UPD SimpleName@@builderFactory @TO@ serviceConfiguratorFactory @AT@ 4259 @LENGTH@ 14
---UPD SingleVariableDeclaration@@ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory @TO@ ResourceServiceConfiguratorFactory parentServiceConfiguratorFactory @AT@ 4275 @LENGTH@ 66
------INS SimpleType@@ResourceServiceConfiguratorFactory @TO@ SingleVariableDeclaration@@ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory @AT@ 4090 @LENGTH@ 34
------DEL ParameterizedType@@ResourceServiceBuilderFactory<ChannelFactory> @AT@ 4275 @LENGTH@ 45
---------DEL SimpleType@@ResourceServiceBuilderFactory @AT@ 4275 @LENGTH@ 29
---------DEL SimpleType@@ChannelFactory @AT@ 4305 @LENGTH@ 14
------UPD SimpleName@@parentBuilderFactory @TO@ parentServiceConfiguratorFactory @AT@ 4321 @LENGTH@ 20
---UPD SuperConstructorInvocation@@super(pathElement(name),new ResourceDescriptorConfigurator(configurator),builderFactory,parentBuilderFactory);
 @TO@ super(pathElement(name),new ResourceDescriptorConfigurator(configurator),serviceConfiguratorFactory,parentServiceConfiguratorFactory);
 @AT@ 4353 @LENGTH@ 113
------UPD SimpleName@@builderFactory @TO@ serviceConfiguratorFactory @AT@ 4428 @LENGTH@ 14
------UPD SimpleName@@parentBuilderFactory @TO@ parentServiceConfiguratorFactory @AT@ 4444 @LENGTH@ 20


UPD VariableDeclarationStatement@@String accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n"; @TO@ String accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "	\"refresh_token\": \"refresh-token-1234\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n"; @AT@ 3178 @LENGTH@ 343
---UPD VariableDeclarationFragment@@accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n" @TO@ accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "	\"refresh_token\": \"refresh-token-1234\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n" @AT@ 3185 @LENGTH@ 335
------UPD InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n" @TO@ "{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "	\"refresh_token\": \"refresh-token-1234\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n" @AT@ 3214 @LENGTH@ 306
---------INS StringLiteral@@"	\"refresh_token\": \"refresh-token-1234\",\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n" @AT@ 3402 @LENGTH@ 47


DEL MethodDeclaration@@public, voidMethodName:SpringIntegrationEndpoint, String uri, MessageChannel channel, CamelContext context,  @AT@ 2113 @LENGTH@ 166
---DEL Modifier@@public @AT@ 2113 @LENGTH@ 6
---DEL SimpleName@@MethodName:SpringIntegrationEndpoint @AT@ 2120 @LENGTH@ 25
---DEL SingleVariableDeclaration@@String uri @AT@ 2146 @LENGTH@ 10
------DEL SimpleType@@String @AT@ 2146 @LENGTH@ 6
------DEL SimpleName@@uri @AT@ 2153 @LENGTH@ 3
---DEL SingleVariableDeclaration@@MessageChannel channel @AT@ 2158 @LENGTH@ 22
------DEL SimpleType@@MessageChannel @AT@ 2158 @LENGTH@ 14
------DEL SimpleName@@channel @AT@ 2173 @LENGTH@ 7
---DEL SingleVariableDeclaration@@CamelContext context @AT@ 2182 @LENGTH@ 20
------DEL SimpleType@@CamelContext @AT@ 2182 @LENGTH@ 12
------DEL SimpleName@@context @AT@ 2195 @LENGTH@ 7
---DEL SuperConstructorInvocation@@super(uri,context);
 @AT@ 2214 @LENGTH@ 20
------DEL SimpleName@@uri @AT@ 2220 @LENGTH@ 3
------DEL SimpleName@@context @AT@ 2225 @LENGTH@ 7
---DEL ExpressionStatement@@Assignment:this.messageChannel=channel @AT@ 2243 @LENGTH@ 30
------DEL Assignment@@this.messageChannel=channel @AT@ 2243 @LENGTH@ 29
---------DEL FieldAccess@@this.messageChannel @AT@ 2243 @LENGTH@ 19
------------DEL ThisExpression@@this @AT@ 2243 @LENGTH@ 4
------------DEL SimpleName@@messageChannel @AT@ 2248 @LENGTH@ 14
---------DEL Operator@@= @AT@ 2262 @LENGTH@ 1
---------DEL SimpleName@@channel @AT@ 2265 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("disruptor:foo?concurrentConsumers=10").to("mock:before").delay(2000).to("mock:result") @TO@ MethodInvocation:from("disruptor:foo?concurrentConsumers=10").to("mock:before").delay(2000).syncDelayed().to("mock:result") @AT@ 4611 @LENGTH@ 93
---UPD MethodInvocation@@from("disruptor:foo?concurrentConsumers=10").to("mock:before").delay(2000).to("mock:result") @TO@ from("disruptor:foo?concurrentConsumers=10").to("mock:before").delay(2000).syncDelayed().to("mock:result") @AT@ 4611 @LENGTH@ 92
------INS MethodInvocation@@MethodName:syncDelayed:[] @TO@ MethodInvocation@@from("disruptor:foo?concurrentConsumers=10").to("mock:before").delay(2000).to("mock:result") @AT@ 4611 @LENGTH@ 88


UPD VariableDeclarationStatement@@boolean isManaged=tbl.getTableType().equals(TableType.MANAGED_TABLE.toString()); @TO@ boolean isManaged=tbl.getTableType() == TableType.MANAGED_TABLE; @AT@ 95724 @LENGTH@ 82
---UPD VariableDeclarationFragment@@isManaged=tbl.getTableType().equals(TableType.MANAGED_TABLE.toString()) @TO@ isManaged=tbl.getTableType() == TableType.MANAGED_TABLE @AT@ 95732 @LENGTH@ 73
------INS InfixExpression@@tbl.getTableType() == TableType.MANAGED_TABLE @TO@ VariableDeclarationFragment@@isManaged=tbl.getTableType().equals(TableType.MANAGED_TABLE.toString()) @AT@ 95728 @LENGTH@ 45
---------INS MethodInvocation@@tbl.getTableType() @TO@ InfixExpression@@tbl.getTableType() == TableType.MANAGED_TABLE @AT@ 95728 @LENGTH@ 18
------------MOV SimpleName@@Name:tbl @TO@ MethodInvocation@@tbl.getTableType() @AT@ 95744 @LENGTH@ 3
------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@tbl.getTableType() @AT@ 95794 @LENGTH@ 10
---------INS Operator@@== @TO@ InfixExpression@@tbl.getTableType() == TableType.MANAGED_TABLE @AT@ 95746 @LENGTH@ 2
---------INS QualifiedName@@TableType.MANAGED_TABLE @TO@ InfixExpression@@tbl.getTableType() == TableType.MANAGED_TABLE @AT@ 95750 @LENGTH@ 23
------------INS SimpleName@@TableType @TO@ QualifiedName@@TableType.MANAGED_TABLE @AT@ 95750 @LENGTH@ 9
------------INS SimpleName@@MANAGED_TABLE @TO@ QualifiedName@@TableType.MANAGED_TABLE @AT@ 95760 @LENGTH@ 13
------DEL MethodInvocation@@tbl.getTableType().equals(TableType.MANAGED_TABLE.toString()) @AT@ 95744 @LENGTH@ 61
---------DEL MethodInvocation@@MethodName:getTableType:[] @AT@ 95744 @LENGTH@ 18
---------DEL SimpleName@@MethodName:equals:[TableType.MANAGED_TABLE.toString()] @AT@ 95763 @LENGTH@ 42
------------DEL MethodInvocation@@TableType.MANAGED_TABLE.toString() @AT@ 95770 @LENGTH@ 34
---------------DEL QualifiedName@@Name:TableType.MANAGED_TABLE @AT@ 95770 @LENGTH@ 23


UPD EnhancedForStatement@@for (GroupBuilderProvider provider : ServiceLoader.load(DistributedGroupBuilderProvider.class,DistributedGroupBuilderProvider.class.getClassLoader())) {  for (  CapabilityServiceBuilder<?> builder : provider.getBuilders(registry,name)) {    JGroupsLogger.ROOT_LOGGER.debugf("Installing %s for channel %s",builder.getServiceName(),name);    builder.configure(context).build(target).install();  }} @TO@ for (GroupServiceConfiguratorProvider provider : ServiceLoader.load(DistributedGroupServiceConfiguratorProvider.class,DistributedGroupServiceConfiguratorProvider.class.getClassLoader())) {  for (  CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(registry,name)) {    JGroupsLogger.ROOT_LOGGER.debugf("Installing %s for channel %s",configurator.getServiceName(),name);    configurator.configure(context).build(target).install();  }} @AT@ 5100 @LENGTH@ 454
---UPD SingleVariableDeclaration@@GroupBuilderProvider provider @TO@ GroupServiceConfiguratorProvider provider @AT@ 5105 @LENGTH@ 29
------UPD SimpleType@@GroupBuilderProvider @TO@ GroupServiceConfiguratorProvider @AT@ 5105 @LENGTH@ 20
---UPD MethodInvocation@@ServiceLoader.load(DistributedGroupBuilderProvider.class,DistributedGroupBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(DistributedGroupServiceConfiguratorProvider.class,DistributedGroupServiceConfiguratorProvider.class.getClassLoader()) @AT@ 5137 @LENGTH@ 113
------UPD SimpleName@@MethodName:load:[DistributedGroupBuilderProvider.class, DistributedGroupBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[DistributedGroupServiceConfiguratorProvider.class, DistributedGroupServiceConfiguratorProvider.class.getClassLoader()] @AT@ 5151 @LENGTH@ 99
---------UPD TypeLiteral@@DistributedGroupBuilderProvider.class @TO@ DistributedGroupServiceConfiguratorProvider.class @AT@ 5156 @LENGTH@ 37
---------UPD MethodInvocation@@DistributedGroupBuilderProvider.class.getClassLoader() @TO@ DistributedGroupServiceConfiguratorProvider.class.getClassLoader() @AT@ 5195 @LENGTH@ 54
------------UPD TypeLiteral@@DistributedGroupBuilderProvider.class @TO@ DistributedGroupServiceConfiguratorProvider.class @AT@ 5195 @LENGTH@ 37
---UPD EnhancedForStatement@@for (CapabilityServiceBuilder<?> builder : provider.getBuilders(registry,name)) {  JGroupsLogger.ROOT_LOGGER.debugf("Installing %s for channel %s",builder.getServiceName(),name);  builder.configure(context).build(target).install();} @TO@ for (CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(registry,name)) {  JGroupsLogger.ROOT_LOGGER.debugf("Installing %s for channel %s",configurator.getServiceName(),name);  configurator.configure(context).build(target).install();} @AT@ 5266 @LENGTH@ 278
------UPD SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @TO@ CapabilityServiceConfigurator configurator @AT@ 5271 @LENGTH@ 35
---------DEL ParameterizedType@@CapabilityServiceBuilder<?> @AT@ 5271 @LENGTH@ 27
------------DEL SimpleType@@CapabilityServiceBuilder @AT@ 5271 @LENGTH@ 24
------------DEL WildcardType@@? @AT@ 5296 @LENGTH@ 1
---------UPD SimpleName@@builder @TO@ configurator @AT@ 5299 @LENGTH@ 7
---------INS SimpleType@@CapabilityServiceConfigurator @TO@ SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @AT@ 5336 @LENGTH@ 29
------UPD MethodInvocation@@provider.getBuilders(registry,name) @TO@ provider.getServiceConfigurators(registry,name) @AT@ 5309 @LENGTH@ 36
---------UPD SimpleName@@MethodName:getBuilders:[registry, name] @TO@ MethodName:getServiceConfigurators:[registry, name] @AT@ 5318 @LENGTH@ 27
------UPD ExpressionStatement@@MethodInvocation:JGroupsLogger.ROOT_LOGGER.debugf("Installing %s for channel %s",builder.getServiceName(),name) @TO@ MethodInvocation:JGroupsLogger.ROOT_LOGGER.debugf("Installing %s for channel %s",configurator.getServiceName(),name) @AT@ 5365 @LENGTH@ 97
---------UPD MethodInvocation@@JGroupsLogger.ROOT_LOGGER.debugf("Installing %s for channel %s",builder.getServiceName(),name) @TO@ JGroupsLogger.ROOT_LOGGER.debugf("Installing %s for channel %s",configurator.getServiceName(),name) @AT@ 5365 @LENGTH@ 96
------------UPD SimpleName@@MethodName:debugf:["Installing %s for channel %s", builder.getServiceName(), name] @TO@ MethodName:debugf:["Installing %s for channel %s", configurator.getServiceName(), name] @AT@ 5391 @LENGTH@ 70
---------------UPD MethodInvocation@@builder.getServiceName() @TO@ configurator.getServiceName() @AT@ 5430 @LENGTH@ 24
------------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 5430 @LENGTH@ 7
------UPD ExpressionStatement@@MethodInvocation:builder.configure(context).build(target).install() @TO@ MethodInvocation:configurator.configure(context).build(target).install() @AT@ 5479 @LENGTH@ 51
---------UPD MethodInvocation@@builder.configure(context).build(target).install() @TO@ configurator.configure(context).build(target).install() @AT@ 5479 @LENGTH@ 50
------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 5479 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals(7,LambdaOperations.values().length) @TO@ MethodInvocation:assertEquals(8,LambdaOperations.values().length) @AT@ 1023 @LENGTH@ 50
---UPD MethodInvocation@@assertEquals(7,LambdaOperations.values().length) @TO@ assertEquals(8,LambdaOperations.values().length) @AT@ 1023 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertEquals:[7, LambdaOperations.values().length] @TO@ MethodName:assertEquals:[8, LambdaOperations.values().length] @AT@ 1023 @LENGTH@ 49
---------UPD NumberLiteral@@7 @TO@ 8 @AT@ 1036 @LENGTH@ 1


UPD VariableDeclarationStatement@@OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),currentAuthentication.getName(),authenticationResult.getAccessToken(),authenticationResult.getRefreshToken()); @TO@ OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),principalName,authenticationResult.getAccessToken(),authenticationResult.getRefreshToken()); @AT@ 10218 @LENGTH@ 240
---UPD VariableDeclarationFragment@@authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),currentAuthentication.getName(),authenticationResult.getAccessToken(),authenticationResult.getRefreshToken()) @TO@ authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),principalName,authenticationResult.getAccessToken(),authenticationResult.getRefreshToken()) @AT@ 10241 @LENGTH@ 216
------UPD ClassInstanceCreation@@OAuth2AuthorizedClient[authenticationResult.getClientRegistration(), currentAuthentication.getName(), authenticationResult.getAccessToken(), authenticationResult.getRefreshToken()] @TO@ OAuth2AuthorizedClient[authenticationResult.getClientRegistration(), principalName, authenticationResult.getAccessToken(), authenticationResult.getRefreshToken()] @AT@ 10260 @LENGTH@ 197
---------DEL MethodInvocation@@currentAuthentication.getName() @AT@ 10340 @LENGTH@ 31
------------DEL SimpleName@@Name:currentAuthentication @AT@ 10340 @LENGTH@ 21
------------DEL SimpleName@@MethodName:getName:[] @AT@ 10362 @LENGTH@ 9
---------INS SimpleName@@principalName @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authenticationResult.getClientRegistration(), currentAuthentication.getName(), authenticationResult.getAccessToken(), authenticationResult.getRefreshToken()] @AT@ 10448 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:LOG.warn("The option setDefaultBus is @deprecated, use name defaultBus instead") @TO@ MethodInvocation:log.warn("The option setDefaultBus is @deprecated, use name defaultBus instead") @AT@ 3109 @LENGTH@ 81
---UPD MethodInvocation@@LOG.warn("The option setDefaultBus is @deprecated, use name defaultBus instead") @TO@ log.warn("The option setDefaultBus is @deprecated, use name defaultBus instead") @AT@ 3109 @LENGTH@ 80
------UPD SimpleName@@Name:LOG @TO@ Name:log @AT@ 3109 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:leavesNonObjectIdStringIdRepresentationUntouchedWhenReferencingIdProperty,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]QueryMapperUnitTests,  @AT@ 29420 @LENGTH@ 354
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:leavesNonObjectIdStringIdRepresentationUntouchedWhenReferencingIdProperty,  @AT@ 29420 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:leavesNonObjectIdStringIdRepresentationUntouchedWhenReferencingIdProperty,  @AT@ 29427 @LENGTH@ 4
---INS SimpleName@@MethodName:leavesNonObjectIdStringIdRepresentationUntouchedWhenReferencingIdProperty @TO@ MethodDeclaration@@public, void, MethodName:leavesNonObjectIdStringIdRepresentationUntouchedWhenReferencingIdProperty,  @AT@ 29432 @LENGTH@ 73
---INS VariableDeclarationStatement@@Query query=query(where("sample.foo").is("id-1")); @TO@ MethodDeclaration@@public, void, MethodName:leavesNonObjectIdStringIdRepresentationUntouchedWhenReferencingIdProperty,  @AT@ 29513 @LENGTH@ 52
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=query(where("sample.foo").is("id-1")); @AT@ 29513 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=query(where("sample.foo").is("id-1")) @TO@ VariableDeclarationStatement@@Query query=query(where("sample.foo").is("id-1")); @AT@ 29519 @LENGTH@ 45
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=query(where("sample.foo").is("id-1")) @AT@ 29519 @LENGTH@ 5
---------INS MethodInvocation@@query(where("sample.foo").is("id-1")) @TO@ VariableDeclarationFragment@@query=query(where("sample.foo").is("id-1")) @AT@ 29527 @LENGTH@ 37
------------INS SimpleName@@MethodName:query:[where("sample.foo").is("id-1")] @TO@ MethodInvocation@@query(where("sample.foo").is("id-1")) @AT@ 29527 @LENGTH@ 37
---------------INS MethodInvocation@@where("sample.foo").is("id-1") @TO@ SimpleName@@MethodName:query:[where("sample.foo").is("id-1")] @AT@ 29533 @LENGTH@ 30
------------------INS MethodInvocation@@MethodName:where:["sample.foo"] @TO@ MethodInvocation@@where("sample.foo").is("id-1") @AT@ 29533 @LENGTH@ 19
---------------------INS StringLiteral@@"sample.foo" @TO@ MethodInvocation@@MethodName:where:["sample.foo"] @AT@ 29539 @LENGTH@ 12
------------------INS SimpleName@@MethodName:is:["id-1"] @TO@ MethodInvocation@@where("sample.foo").is("id-1") @AT@ 29553 @LENGTH@ 10
---------------------INS StringLiteral@@"id-1" @TO@ SimpleName@@MethodName:is:["id-1"] @AT@ 29556 @LENGTH@ 6
---INS VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)); @TO@ MethodDeclaration@@public, void, MethodName:leavesNonObjectIdStringIdRepresentationUntouchedWhenReferencingIdProperty,  @AT@ 29568 @LENGTH@ 134
------INS SimpleType@@org.bson.Document @TO@ VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)); @AT@ 29568 @LENGTH@ 17
------INS VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)) @TO@ VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)); @AT@ 29586 @LENGTH@ 115
---------INS SimpleName@@document @TO@ VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)) @AT@ 29586 @LENGTH@ 8
---------INS MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)) @TO@ VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)) @AT@ 29597 @LENGTH@ 104
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)) @AT@ 29597 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(ClassWithEmbedded.class)] @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithEmbedded.class)) @AT@ 29604 @LENGTH@ 97
---------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(ClassWithEmbedded.class)] @AT@ 29620 @LENGTH@ 22
------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 29620 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 29626 @LENGTH@ 16
---------------INS MethodInvocation@@context.getPersistentEntity(ClassWithEmbedded.class) @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(ClassWithEmbedded.class)] @AT@ 29648 @LENGTH@ 52
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(ClassWithEmbedded.class) @AT@ 29648 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getPersistentEntity:[ClassWithEmbedded.class] @TO@ MethodInvocation@@context.getPersistentEntity(ClassWithEmbedded.class) @AT@ 29656 @LENGTH@ 44
---------------------INS TypeLiteral@@ClassWithEmbedded.class @TO@ SimpleName@@MethodName:getPersistentEntity:[ClassWithEmbedded.class] @AT@ 29676 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertThat(document.get("sample._id"),instanceOf(String.class)) @TO@ MethodDeclaration@@public, void, MethodName:leavesNonObjectIdStringIdRepresentationUntouchedWhenReferencingIdProperty,  @AT@ 29706 @LENGTH@ 65
------INS MethodInvocation@@assertThat(document.get("sample._id"),instanceOf(String.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(document.get("sample._id"),instanceOf(String.class)) @AT@ 29706 @LENGTH@ 64
---------INS SimpleName@@MethodName:assertThat:[document.get("sample._id"), instanceOf(String.class)] @TO@ MethodInvocation@@assertThat(document.get("sample._id"),instanceOf(String.class)) @AT@ 29706 @LENGTH@ 64
------------INS MethodInvocation@@document.get("sample._id") @TO@ SimpleName@@MethodName:assertThat:[document.get("sample._id"), instanceOf(String.class)] @AT@ 29717 @LENGTH@ 26
---------------INS SimpleName@@Name:document @TO@ MethodInvocation@@document.get("sample._id") @AT@ 29717 @LENGTH@ 8
---------------INS SimpleName@@MethodName:get:["sample._id"] @TO@ MethodInvocation@@document.get("sample._id") @AT@ 29726 @LENGTH@ 17
------------------INS StringLiteral@@"sample._id" @TO@ SimpleName@@MethodName:get:["sample._id"] @AT@ 29730 @LENGTH@ 12
------------INS MethodInvocation@@instanceOf(String.class) @TO@ SimpleName@@MethodName:assertThat:[document.get("sample._id"), instanceOf(String.class)] @AT@ 29745 @LENGTH@ 24
---------------INS SimpleName@@MethodName:instanceOf:[String.class] @TO@ MethodInvocation@@instanceOf(String.class) @AT@ 29745 @LENGTH@ 24
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:instanceOf:[String.class] @AT@ 29756 @LENGTH@ 12
---------------INS SimpleName@@MethodName:instanceOf:[String.class] @TO@ MethodInvocation@@instanceOf(String.class) @AT@ 29745 @LENGTH@ 24
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:instanceOf:[String.class] @AT@ 29756 @LENGTH@ 12


UPD VariableDeclarationStatement@@String page="<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"" + request.getContextPath() + "/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ renderHiddenInputs(request)+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>"; @TO@ String page="<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"" + request.getContextPath() + "/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ renderHiddenInputs(request)+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>"; @AT@ 1995 @LENGTH@ 1250
---UPD VariableDeclarationFragment@@page="<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"" + request.getContextPath() + "/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ renderHiddenInputs(request)+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>" @TO@ page="<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"" + request.getContextPath() + "/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ renderHiddenInputs(request)+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>" @AT@ 2002 @LENGTH@ 1242
------UPD InfixExpression@@"<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"" + request.getContextPath() + "/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ renderHiddenInputs(request)+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>" @TO@ "<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"" + request.getContextPath() + "/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n"+ renderHiddenInputs(request)+ "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>" @AT@ 2010 @LENGTH@ 1234
---------UPD InfixExpression@@"<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"" @TO@ "<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"" @AT@ 2010 @LENGTH@ 882
------------UPD StringLiteral@@"    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n" @TO@ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n" @AT@ 2615 @LENGTH@ 129


UPD VariableDeclarationStatement@@int dbSeparationIndex=text.lastIndexOf(OPTIONS_DELIMITER); @TO@ int dbSeparationIndex=text.lastIndexOf(DATABASE_DELIMITER); @AT@ 5588 @LENGTH@ 60
---UPD VariableDeclarationFragment@@dbSeparationIndex=text.lastIndexOf(OPTIONS_DELIMITER) @TO@ dbSeparationIndex=text.lastIndexOf(DATABASE_DELIMITER) @AT@ 5592 @LENGTH@ 55
------UPD MethodInvocation@@text.lastIndexOf(OPTIONS_DELIMITER) @TO@ text.lastIndexOf(DATABASE_DELIMITER) @AT@ 5612 @LENGTH@ 35
---------UPD SimpleName@@MethodName:lastIndexOf:[OPTIONS_DELIMITER] @TO@ MethodName:lastIndexOf:[DATABASE_DELIMITER] @AT@ 5617 @LENGTH@ 30
------------UPD SimpleName@@OPTIONS_DELIMITER @TO@ DATABASE_DELIMITER @AT@ 5629 @LENGTH@ 17


UPD VariableDeclarationStatement@@OAuth2AuthorizationCodeGrantFilter authorizationCodeGrantFilter=new OAuth2AuthorizationCodeGrantFilter(OAuth2ClientConfigurerUtils.getClientRegistrationRepository(builder),OAuth2ClientConfigurerUtils.getAuthorizedClientService(builder),authenticationManager); @TO@ OAuth2AuthorizationCodeGrantFilter authorizationCodeGrantFilter=new OAuth2AuthorizationCodeGrantFilter(OAuth2ClientConfigurerUtils.getClientRegistrationRepository(builder),new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(OAuth2ClientConfigurerUtils.getAuthorizedClientService(builder)),authenticationManager); @AT@ 11694 @LENGTH@ 273
---UPD VariableDeclarationFragment@@authorizationCodeGrantFilter=new OAuth2AuthorizationCodeGrantFilter(OAuth2ClientConfigurerUtils.getClientRegistrationRepository(builder),OAuth2ClientConfigurerUtils.getAuthorizedClientService(builder),authenticationManager) @TO@ authorizationCodeGrantFilter=new OAuth2AuthorizationCodeGrantFilter(OAuth2ClientConfigurerUtils.getClientRegistrationRepository(builder),new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(OAuth2ClientConfigurerUtils.getAuthorizedClientService(builder)),authenticationManager) @AT@ 11729 @LENGTH@ 237
------UPD ClassInstanceCreation@@OAuth2AuthorizationCodeGrantFilter[OAuth2ClientConfigurerUtils.getClientRegistrationRepository(builder), OAuth2ClientConfigurerUtils.getAuthorizedClientService(builder), authenticationManager] @TO@ OAuth2AuthorizationCodeGrantFilter[OAuth2ClientConfigurerUtils.getClientRegistrationRepository(builder), new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(OAuth2ClientConfigurerUtils.getAuthorizedClientService(builder)), authenticationManager] @AT@ 11760 @LENGTH@ 206
---------INS ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[OAuth2ClientConfigurerUtils.getAuthorizedClientService(builder)] @TO@ ClassInstanceCreation@@OAuth2AuthorizationCodeGrantFilter[OAuth2ClientConfigurerUtils.getClientRegistrationRepository(builder), OAuth2ClientConfigurerUtils.getAuthorizedClientService(builder), authenticationManager] @AT@ 11988 @LENGTH@ 130
------------MOV MethodInvocation@@OAuth2ClientConfigurerUtils.getAuthorizedClientService(builder) @TO@ ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[OAuth2ClientConfigurerUtils.getAuthorizedClientService(builder)] @AT@ 11876 @LENGTH@ 63
------------INS New@@new @TO@ ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[OAuth2ClientConfigurerUtils.getAuthorizedClientService(builder)] @AT@ 11988 @LENGTH@ 3
------------INS SimpleType@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository @TO@ ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[OAuth2ClientConfigurerUtils.getAuthorizedClientService(builder)] @AT@ 11992 @LENGTH@ 54


UPD ReturnStatement@@MethodInvocation:userRequest.getAccessToken().getScopes().stream().anyMatch(userInfoScopes::contains) @TO@ MethodInvocation:CollectionUtils.containsAny(userRequest.getAccessToken().getScopes(),this.userInfoScopes) @AT@ 5238 @LENGTH@ 92
---UPD MethodInvocation@@userRequest.getAccessToken().getScopes().stream().anyMatch(userInfoScopes::contains) @TO@ CollectionUtils.containsAny(userRequest.getAccessToken().getScopes(),this.userInfoScopes) @AT@ 5245 @LENGTH@ 84
------DEL MethodInvocation@@MethodName:stream:[] @AT@ 5245 @LENGTH@ 49
------DEL MethodInvocation@@MethodName:getScopes:[] @AT@ 5245 @LENGTH@ 40
------INS SimpleName@@Name:CollectionUtils @TO@ MethodInvocation@@userRequest.getAccessToken().getScopes().stream().anyMatch(userInfoScopes::contains) @AT@ 5294 @LENGTH@ 15
------UPD SimpleName@@MethodName:anyMatch:[userInfoScopes::contains] @TO@ MethodName:getScopes:[] @AT@ 5295 @LENGTH@ 34
------INS SimpleName@@MethodName:containsAny:[userRequest.getAccessToken().getScopes(), this.userInfoScopes] @TO@ MethodInvocation@@userRequest.getAccessToken().getScopes().stream().anyMatch(userInfoScopes::contains) @AT@ 5310 @LENGTH@ 74
---------INS MethodInvocation@@userRequest.getAccessToken().getScopes() @TO@ SimpleName@@MethodName:containsAny:[userRequest.getAccessToken().getScopes(), this.userInfoScopes] @AT@ 5322 @LENGTH@ 40
------------MOV MethodInvocation@@MethodName:getAccessToken:[] @TO@ MethodInvocation@@userRequest.getAccessToken().getScopes() @AT@ 5245 @LENGTH@ 28
------------MOV SimpleName@@Name:userRequest @TO@ MethodInvocation@@userRequest.getAccessToken().getScopes() @AT@ 5245 @LENGTH@ 11
------------MOV SimpleName@@MethodName:anyMatch:[userInfoScopes::contains] @TO@ MethodInvocation@@userRequest.getAccessToken().getScopes() @AT@ 5295 @LENGTH@ 34
---------INS FieldAccess@@this.userInfoScopes @TO@ SimpleName@@MethodName:containsAny:[userRequest.getAccessToken().getScopes(), this.userInfoScopes] @AT@ 5364 @LENGTH@ 19
------------INS ThisExpression@@this @TO@ FieldAccess@@this.userInfoScopes @AT@ 5364 @LENGTH@ 4
------------INS SimpleName@@userInfoScopes @TO@ FieldAccess@@this.userInfoScopes @AT@ 5369 @LENGTH@ 14


UPD EnhancedForStatement@@for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader())) {  for (  ServiceNameProvider builder : provider.getBuilders(registry,name,null)) {    context.removeService(builder.getServiceName());  }} @TO@ for (IdentityGroupServiceConfiguratorProvider provider : ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader())) {  for (  ServiceNameProvider configurator : provider.getServiceConfigurators(registry,name,null)) {    context.removeService(configurator.getServiceName());  }} @AT@ 3741 @LENGTH@ 328
---UPD SingleVariableDeclaration@@GroupAliasBuilderProvider provider @TO@ IdentityGroupServiceConfiguratorProvider provider @AT@ 3746 @LENGTH@ 34
------UPD SimpleType@@GroupAliasBuilderProvider @TO@ IdentityGroupServiceConfiguratorProvider @AT@ 3746 @LENGTH@ 25
---UPD MethodInvocation@@ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader()) @AT@ 3783 @LENGTH@ 101
------UPD SimpleName@@MethodName:load:[GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[IdentityGroupServiceConfiguratorProvider.class, IdentityGroupServiceConfiguratorProvider.class.getClassLoader()] @AT@ 3797 @LENGTH@ 87
---------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 3802 @LENGTH@ 31
---------UPD MethodInvocation@@GroupAliasBuilderProvider.class.getClassLoader() @TO@ IdentityGroupServiceConfiguratorProvider.class.getClassLoader() @AT@ 3835 @LENGTH@ 48
------------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 3835 @LENGTH@ 31
---UPD EnhancedForStatement@@for (ServiceNameProvider builder : provider.getBuilders(registry,name,null)) {  context.removeService(builder.getServiceName());} @TO@ for (ServiceNameProvider configurator : provider.getServiceConfigurators(registry,name,null)) {  context.removeService(configurator.getServiceName());} @AT@ 3900 @LENGTH@ 159
------UPD SingleVariableDeclaration@@ServiceNameProvider builder @TO@ ServiceNameProvider configurator @AT@ 3905 @LENGTH@ 27
---------UPD SimpleName@@builder @TO@ configurator @AT@ 3925 @LENGTH@ 7
------UPD MethodInvocation@@provider.getBuilders(registry,name,null) @TO@ provider.getServiceConfigurators(registry,name,null) @AT@ 3935 @LENGTH@ 42
---------UPD SimpleName@@MethodName:getBuilders:[registry, name, null] @TO@ MethodName:getServiceConfigurators:[registry, name, null] @AT@ 3944 @LENGTH@ 33
------UPD ExpressionStatement@@MethodInvocation:context.removeService(builder.getServiceName()) @TO@ MethodInvocation:context.removeService(configurator.getServiceName()) @AT@ 3997 @LENGTH@ 48
---------UPD MethodInvocation@@context.removeService(builder.getServiceName()) @TO@ context.removeService(configurator.getServiceName()) @AT@ 3997 @LENGTH@ 47
------------UPD SimpleName@@MethodName:removeService:[builder.getServiceName()] @TO@ MethodName:removeService:[configurator.getServiceName()] @AT@ 4005 @LENGTH@ 39
---------------UPD MethodInvocation@@builder.getServiceName() @TO@ configurator.getServiceName() @AT@ 4019 @LENGTH@ 24
------------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 4019 @LENGTH@ 7


DEL IfStatement@@if (InfinispanModel.VERSION_7_0_0.requiresTransformation(version)) {  builder.rejectChildResource(HotRodStoreResourceDefinition.WILDCARD_PATH);} else {  HotRodStoreResourceDefinition.buildTransformation(version,builder);} @AT@ 10119 @LENGTH@ 262
---DEL MethodInvocation@@InfinispanModel.VERSION_7_0_0.requiresTransformation(version) @AT@ 10123 @LENGTH@ 61
------DEL QualifiedName@@Name:InfinispanModel.VERSION_7_0_0 @AT@ 10123 @LENGTH@ 29
------DEL SimpleName@@MethodName:requiresTransformation:[version] @AT@ 10153 @LENGTH@ 31
---------DEL SimpleName@@version @AT@ 10176 @LENGTH@ 7
---DEL Block@@ThenBody:{  builder.rejectChildResource(HotRodStoreResourceDefinition.WILDCARD_PATH);} @AT@ 10186 @LENGTH@ 97
------DEL ExpressionStatement@@MethodInvocation:builder.rejectChildResource(HotRodStoreResourceDefinition.WILDCARD_PATH) @AT@ 10200 @LENGTH@ 73
---------DEL MethodInvocation@@builder.rejectChildResource(HotRodStoreResourceDefinition.WILDCARD_PATH) @AT@ 10200 @LENGTH@ 72
------------DEL SimpleName@@Name:builder @AT@ 10200 @LENGTH@ 7
------------DEL SimpleName@@MethodName:rejectChildResource:[HotRodStoreResourceDefinition.WILDCARD_PATH] @AT@ 10208 @LENGTH@ 64
---------------DEL QualifiedName@@HotRodStoreResourceDefinition.WILDCARD_PATH @AT@ 10228 @LENGTH@ 43
------------------DEL SimpleName@@HotRodStoreResourceDefinition @AT@ 10228 @LENGTH@ 29
------------------DEL SimpleName@@WILDCARD_PATH @AT@ 10258 @LENGTH@ 13
---DEL Block@@ElseBody:{  HotRodStoreResourceDefinition.buildTransformation(version,builder);} @AT@ 10289 @LENGTH@ 92


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5284 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5304 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 5286 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5314 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5328 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 5335 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5335 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 5345 @LENGTH@ 1


UPD VariableDeclarationStatement@@long id=params.getLong(key,0L) + 1; @TO@ long id=params.getLong(key,new Long(0)) + 1; @AT@ 1510 @LENGTH@ 38
---UPD VariableDeclarationFragment@@id=params.getLong(key,0L) + 1 @TO@ id=params.getLong(key,new Long(0)) + 1 @AT@ 1515 @LENGTH@ 32
------UPD InfixExpression@@params.getLong(key,0L) + 1 @TO@ params.getLong(key,new Long(0)) + 1 @AT@ 1520 @LENGTH@ 27
---------UPD MethodInvocation@@params.getLong(key,0L) @TO@ params.getLong(key,new Long(0)) @AT@ 1520 @LENGTH@ 23
------------UPD SimpleName@@MethodName:getLong:[key, 0L] @TO@ MethodName:getLong:[key, new Long(0)] @AT@ 1527 @LENGTH@ 16
---------------INS ClassInstanceCreation@@Long[0] @TO@ SimpleName@@MethodName:getLong:[key, 0L] @AT@ 1540 @LENGTH@ 11
------------------INS New@@new @TO@ ClassInstanceCreation@@Long[0] @AT@ 1540 @LENGTH@ 3
------------------INS SimpleType@@Long @TO@ ClassInstanceCreation@@Long[0] @AT@ 1544 @LENGTH@ 4
------------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@Long[0] @AT@ 1549 @LENGTH@ 1
---------------DEL NumberLiteral@@0L @AT@ 1540 @LENGTH@ 2


UPD IfStatement@@if (isParallelProcessing()) {  executorService.submit(() -> ReactiveHelper.schedule(state));} else {  ReactiveHelper.scheduleMain(state);} @TO@ if (isParallelProcessing()) {  executorService.submit(() -> ReactiveHelper.schedule(state));} else {  if (exchange.isTransacted()) {    ReactiveHelper.scheduleSync(state);  } else {    ReactiveHelper.scheduleMain(state);  }} @AT@ 8773 @LENGTH@ 178
---INS Block@@ElseBody:{  if (exchange.isTransacted()) {    ReactiveHelper.scheduleSync(state);  } else {    ReactiveHelper.scheduleMain(state);  }} @TO@ IfStatement@@if (isParallelProcessing()) {  executorService.submit(() -> ReactiveHelper.schedule(state));} else {  ReactiveHelper.scheduleMain(state);} @AT@ 8892 @LENGTH@ 193
------INS IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(state);} else {  ReactiveHelper.scheduleMain(state);} @TO@ Block@@ElseBody:{  if (exchange.isTransacted()) {    ReactiveHelper.scheduleSync(state);  } else {    ReactiveHelper.scheduleMain(state);  }} @AT@ 8906 @LENGTH@ 169
---------MOV Block@@ElseBody:{  ReactiveHelper.scheduleMain(state);} @TO@ IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(state);} else {  ReactiveHelper.scheduleMain(state);} @AT@ 8892 @LENGTH@ 59
---------INS MethodInvocation@@exchange.isTransacted() @TO@ IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(state);} else {  ReactiveHelper.scheduleMain(state);} @AT@ 8910 @LENGTH@ 23
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.isTransacted() @AT@ 8910 @LENGTH@ 8
------------INS SimpleName@@MethodName:isTransacted:[] @TO@ MethodInvocation@@exchange.isTransacted() @AT@ 8919 @LENGTH@ 14
---------INS Block@@ThenBody:{  ReactiveHelper.scheduleSync(state);} @TO@ IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(state);} else {  ReactiveHelper.scheduleMain(state);} @AT@ 8935 @LENGTH@ 67
------------INS ExpressionStatement@@MethodInvocation:ReactiveHelper.scheduleSync(state) @TO@ Block@@ThenBody:{  ReactiveHelper.scheduleSync(state);} @AT@ 8953 @LENGTH@ 35
---------------INS MethodInvocation@@ReactiveHelper.scheduleSync(state) @TO@ ExpressionStatement@@MethodInvocation:ReactiveHelper.scheduleSync(state) @AT@ 8953 @LENGTH@ 34
------------------INS SimpleName@@Name:ReactiveHelper @TO@ MethodInvocation@@ReactiveHelper.scheduleSync(state) @AT@ 8953 @LENGTH@ 14
------------------INS SimpleName@@MethodName:scheduleSync:[state] @TO@ MethodInvocation@@ReactiveHelper.scheduleSync(state) @AT@ 8968 @LENGTH@ 19
---------------------INS SimpleName@@state @TO@ SimpleName@@MethodName:scheduleSync:[state] @AT@ 8981 @LENGTH@ 5


UPD TryStatement@@try {  JwsJsonProducer producer=new JwsJsonProducer(data,true);  producer.signWith(provider,headers);  return producer.getJwsJsonSignedDocument(fraction.signatureDataDetached());} catch (Exception ex) {  throw new JoseException("JWS JOSE Signature Creation Failure",ex);} @TO@ try {  JwsJsonProducer producer=new JwsJsonProducer(data,true,fraction.signatureDataDetached());  return producer.signWith(provider,headers);} catch (Exception ex) {  throw new JoseException("JWS JOSE Signature Creation Failure",ex);} @AT@ 3943 @LENGTH@ 338
---UPD VariableDeclarationStatement@@JwsJsonProducer producer=new JwsJsonProducer(data,true); @TO@ JwsJsonProducer producer=new JwsJsonProducer(data,true,fraction.signatureDataDetached()); @AT@ 3961 @LENGTH@ 59
------UPD VariableDeclarationFragment@@producer=new JwsJsonProducer(data,true) @TO@ producer=new JwsJsonProducer(data,true,fraction.signatureDataDetached()) @AT@ 3977 @LENGTH@ 42
---------UPD ClassInstanceCreation@@JwsJsonProducer[data, true] @TO@ JwsJsonProducer[data, true, fraction.signatureDataDetached()] @AT@ 3988 @LENGTH@ 31
------------INS MethodInvocation@@fraction.signatureDataDetached() @TO@ ClassInstanceCreation@@JwsJsonProducer[data, true] @AT@ 4020 @LENGTH@ 32
---------------INS SimpleName@@Name:fraction @TO@ MethodInvocation@@fraction.signatureDataDetached() @AT@ 4020 @LENGTH@ 8
---------------INS SimpleName@@MethodName:signatureDataDetached:[] @TO@ MethodInvocation@@fraction.signatureDataDetached() @AT@ 4029 @LENGTH@ 23
---DEL ExpressionStatement@@MethodInvocation:producer.signWith(provider,headers) @AT@ 4033 @LENGTH@ 37
---UPD ReturnStatement@@MethodInvocation:producer.getJwsJsonSignedDocument(fraction.signatureDataDetached()) @TO@ MethodInvocation:producer.signWith(provider,headers) @AT@ 4083 @LENGTH@ 75
------MOV MethodInvocation@@producer.signWith(provider,headers) @TO@ ReturnStatement@@MethodInvocation:producer.getJwsJsonSignedDocument(fraction.signatureDataDetached()) @AT@ 4033 @LENGTH@ 36
------DEL MethodInvocation@@producer.getJwsJsonSignedDocument(fraction.signatureDataDetached()) @AT@ 4090 @LENGTH@ 67
---------DEL SimpleName@@Name:producer @AT@ 4090 @LENGTH@ 8
---------DEL SimpleName@@MethodName:getJwsJsonSignedDocument:[fraction.signatureDataDetached()] @AT@ 4099 @LENGTH@ 58
------------DEL MethodInvocation@@fraction.signatureDataDetached() @AT@ 4124 @LENGTH@ 32
---------------DEL SimpleName@@Name:fraction @AT@ 4124 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:signatureDataDetached:[] @AT@ 4133 @LENGTH@ 23


INS IfStatement@@if (targetTypes == null) {  targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new);} @TO@ MethodDeclaration@@public, Class<?>, MethodName:computeIfAbsent, Class<?> sourceType, Class<?> targetType, Function<ConvertiblePair,Class<?>> mappingFunction,  @AT@ 14724 @LENGTH@ 118
---INS InfixExpression@@targetTypes == null @TO@ IfStatement@@if (targetTypes == null) {  targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new);} @AT@ 14728 @LENGTH@ 19
------INS SimpleName@@targetTypes @TO@ InfixExpression@@targetTypes == null @AT@ 14728 @LENGTH@ 11
------INS Operator@@== @TO@ InfixExpression@@targetTypes == null @AT@ 14739 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@targetTypes == null @AT@ 14743 @LENGTH@ 4
---INS Block@@ThenBody:{  targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new);} @TO@ IfStatement@@if (targetTypes == null) {  targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new);} @AT@ 14749 @LENGTH@ 93
------INS ExpressionStatement@@Assignment:targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new) @TO@ Block@@ThenBody:{  targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new);} @AT@ 14755 @LENGTH@ 82
---------INS Assignment@@targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new) @TO@ ExpressionStatement@@Assignment:targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new) @AT@ 14755 @LENGTH@ 81
------------MOV MethodInvocation@@customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new) @TO@ Assignment@@targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new) @AT@ 14682 @LENGTH@ 67
------------INS SimpleName@@targetTypes @TO@ Assignment@@targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new) @AT@ 14755 @LENGTH@ 11
------------INS Operator@@= @TO@ Assignment@@targetTypes=customReadTargetTypes.computeIfAbsent(sourceType,TargetTypes::new) @AT@ 14766 @LENGTH@ 1


DEL MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @AT@ 1298 @LENGTH@ 220
---DEL Modifier@@public @AT@ 1298 @LENGTH@ 6
---DEL SimpleType@@OAuth2AuthorizedClientRepository @AT@ 1305 @LENGTH@ 32
---DEL SimpleName@@MethodName:authorizedClientRepository @AT@ 1338 @LENGTH@ 26
---DEL SingleVariableDeclaration@@OAuth2AuthorizedClientService authorizedClientService @AT@ 1365 @LENGTH@ 53
------DEL SimpleType@@OAuth2AuthorizedClientService @AT@ 1365 @LENGTH@ 29
------DEL SimpleName@@authorizedClientService @AT@ 1395 @LENGTH@ 23
---DEL ReturnStatement@@ClassInstanceCreation:new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(authorizedClientService) @AT@ 1424 @LENGTH@ 91
------DEL ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[authorizedClientService] @AT@ 1431 @LENGTH@ 83
---------DEL New@@new @AT@ 1431 @LENGTH@ 3
---------DEL SimpleType@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository @AT@ 1435 @LENGTH@ 54
---------DEL SimpleName@@authorizedClientService @AT@ 1490 @LENGTH@ 23


UPD MethodDeclaration@@public, Mono<Authentication>, MethodName:apply, ServerWebExchange exchange,  @TO@ public, Mono<Authentication>, MethodName:convert, ServerWebExchange exchange,  @AT@ 1421 @LENGTH@ 144
---UPD SimpleName@@MethodName:apply @TO@ MethodName:convert @AT@ 1449 @LENGTH@ 5


UPD MethodDeclaration@@private, Optional<AuditableBeanWrapper>, MethodName:getAuditableBeanWrapper, Object source,  @TO@ private, Optional<AuditableBeanWrapper<Object>>, MethodName:getAuditableBeanWrapper, Object source,  @AT@ 3853 @LENGTH@ 146
---UPD ParameterizedType@@Optional<AuditableBeanWrapper> @TO@ Optional<AuditableBeanWrapper<Object>> @AT@ 3861 @LENGTH@ 30
------INS ParameterizedType@@AuditableBeanWrapper<Object> @TO@ ParameterizedType@@Optional<AuditableBeanWrapper> @AT@ 3870 @LENGTH@ 28
---------MOV SimpleType@@AuditableBeanWrapper @TO@ ParameterizedType@@AuditableBeanWrapper<Object> @AT@ 3870 @LENGTH@ 20
---------INS SimpleType@@Object @TO@ ParameterizedType@@AuditableBeanWrapper<Object> @AT@ 3891 @LENGTH@ 6


INS IfStatement@@if (value instanceof String) {  return new BigInteger((String)value);} @TO@ MethodDeclaration@@public, static, BigInteger, MethodName:toBigInteger, Object value,  @AT@ 5981 @LENGTH@ 91
---INS InstanceofExpression@@value instanceof String @TO@ IfStatement@@if (value instanceof String) {  return new BigInteger((String)value);} @AT@ 5985 @LENGTH@ 23
------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof String @AT@ 5985 @LENGTH@ 5
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof String @AT@ 5991 @LENGTH@ 10
------INS SimpleType@@String @TO@ InstanceofExpression@@value instanceof String @AT@ 6002 @LENGTH@ 6
---INS Block@@ThenBody:{  return new BigInteger((String)value);} @TO@ IfStatement@@if (value instanceof String) {  return new BigInteger((String)value);} @AT@ 6010 @LENGTH@ 62
------INS ReturnStatement@@ClassInstanceCreation:new BigInteger((String)value) @TO@ Block@@ThenBody:{  return new BigInteger((String)value);} @AT@ 6024 @LENGTH@ 38
---------INS ClassInstanceCreation@@BigInteger[(String)value] @TO@ ReturnStatement@@ClassInstanceCreation:new BigInteger((String)value) @AT@ 6031 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@BigInteger[(String)value] @AT@ 6031 @LENGTH@ 3
------------INS SimpleType@@BigInteger @TO@ ClassInstanceCreation@@BigInteger[(String)value] @AT@ 6035 @LENGTH@ 10
------------INS CastExpression@@(String)value @TO@ ClassInstanceCreation@@BigInteger[(String)value] @AT@ 6046 @LENGTH@ 14
---------------INS SimpleType@@String @TO@ CastExpression@@(String)value @AT@ 6047 @LENGTH@ 6
---------------INS SimpleName@@value @TO@ CastExpression@@(String)value @AT@ 6055 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:jobExecution.setStartTime(new Date(1L)) @TO@ MethodDeclaration@@public, void, MethodName:testAbandonJobRunning, Exception,  @AT@ 8355 @LENGTH@ 40
---INS MethodInvocation@@jobExecution.setStartTime(new Date(1L)) @TO@ ExpressionStatement@@MethodInvocation:jobExecution.setStartTime(new Date(1L)) @AT@ 8355 @LENGTH@ 39
------INS SimpleName@@Name:jobExecution @TO@ MethodInvocation@@jobExecution.setStartTime(new Date(1L)) @AT@ 8355 @LENGTH@ 12
------INS SimpleName@@MethodName:setStartTime:[new Date(1L)] @TO@ MethodInvocation@@jobExecution.setStartTime(new Date(1L)) @AT@ 8368 @LENGTH@ 26
---------INS ClassInstanceCreation@@Date[1L] @TO@ SimpleName@@MethodName:setStartTime:[new Date(1L)] @AT@ 8381 @LENGTH@ 12
------------INS New@@new @TO@ ClassInstanceCreation@@Date[1L] @AT@ 8381 @LENGTH@ 3
------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[1L] @AT@ 8385 @LENGTH@ 4
------------INS NumberLiteral@@1L @TO@ ClassInstanceCreation@@Date[1L] @AT@ 8390 @LENGTH@ 2


DEL MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizationRequestBaseUriEmptyThenIllegalArgumentException,  @AT@ 3668 @LENGTH@ 316
---DEL Modifier@@public @AT@ 3668 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3675 @LENGTH@ 4
---DEL SimpleName@@MethodName:constructorWhenAuthorizationRequestBaseUriEmptyThenIllegalArgumentException @AT@ 3680 @LENGTH@ 75
---DEL VariableDeclarationStatement@@String authorizationRequestBaseUri=""; @AT@ 3762 @LENGTH@ 40
------DEL SimpleType@@String @AT@ 3762 @LENGTH@ 6
------DEL VariableDeclarationFragment@@authorizationRequestBaseUri="" @AT@ 3769 @LENGTH@ 32
---------DEL SimpleName@@authorizationRequestBaseUri @AT@ 3769 @LENGTH@ 27
---------DEL StringLiteral@@"" @AT@ 3799 @LENGTH@ 2
---DEL ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> new OAuth2AuthorizationRequestRedirectWebFilter(this.clientRepository,authorizationRequestBaseUri)).isInstanceOf(IllegalArgumentException.class) @AT@ 3805 @LENGTH@ 176
------DEL MethodInvocation@@assertThatThrownBy(() -> new OAuth2AuthorizationRequestRedirectWebFilter(this.clientRepository,authorizationRequestBaseUri)).isInstanceOf(IllegalArgumentException.class) @AT@ 3805 @LENGTH@ 175
---------DEL MethodInvocation@@MethodName:assertThatThrownBy:[() -> new OAuth2AuthorizationRequestRedirectWebFilter(this.clientRepository,authorizationRequestBaseUri)] @AT@ 3805 @LENGTH@ 125
------------DEL LambdaExpression@@() -> new OAuth2AuthorizationRequestRedirectWebFilter(this.clientRepository,authorizationRequestBaseUri) @AT@ 3824 @LENGTH@ 105
---------------DEL ClassInstanceCreation@@OAuth2AuthorizationRequestRedirectWebFilter[this.clientRepository, authorizationRequestBaseUri] @AT@ 3830 @LENGTH@ 99
------------------DEL New@@new @AT@ 3830 @LENGTH@ 3
------------------DEL SimpleType@@OAuth2AuthorizationRequestRedirectWebFilter @AT@ 3834 @LENGTH@ 43
------------------DEL FieldAccess@@this.clientRepository @AT@ 3878 @LENGTH@ 21
---------------------DEL ThisExpression@@this @AT@ 3878 @LENGTH@ 4
---------------------DEL SimpleName@@clientRepository @AT@ 3883 @LENGTH@ 16
------------------DEL SimpleName@@authorizationRequestBaseUri @AT@ 3901 @LENGTH@ 27
---------DEL SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 3936 @LENGTH@ 44
------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 3949 @LENGTH@ 30


UPD MethodDeclaration@@public, voidMethodName:ListenerContainerIdleEvent, Object source, long idleTime, String id, String... queueNames,  @TO@ public, voidMethodName:ListenerContainerIdleEvent, Object source, long idleTime, @Nullable String id, String... queueNames,  @AT@ 1113 @LENGTH@ 217
---UPD SingleVariableDeclaration@@String id @TO@ @Nullable String id @AT@ 1177 @LENGTH@ 9


UPD EnhancedForStatement@@for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader())) {  for (  ServiceNameProvider builder : provider.getBuilders(registry,null,defaultChannel)) {    context.removeService(builder.getServiceName());  }} @TO@ for (IdentityGroupServiceConfiguratorProvider provider : ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader())) {  for (  ServiceNameProvider configurator : provider.getServiceConfigurators(registry,null,defaultChannel)) {    context.removeService(configurator.getServiceName());  }} @AT@ 6066 @LENGTH@ 354
---UPD SingleVariableDeclaration@@GroupAliasBuilderProvider provider @TO@ IdentityGroupServiceConfiguratorProvider provider @AT@ 6071 @LENGTH@ 34
------UPD SimpleType@@GroupAliasBuilderProvider @TO@ IdentityGroupServiceConfiguratorProvider @AT@ 6071 @LENGTH@ 25
---UPD MethodInvocation@@ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader()) @AT@ 6108 @LENGTH@ 101
------UPD SimpleName@@MethodName:load:[GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[IdentityGroupServiceConfiguratorProvider.class, IdentityGroupServiceConfiguratorProvider.class.getClassLoader()] @AT@ 6122 @LENGTH@ 87
---------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 6127 @LENGTH@ 31
---------UPD MethodInvocation@@GroupAliasBuilderProvider.class.getClassLoader() @TO@ IdentityGroupServiceConfiguratorProvider.class.getClassLoader() @AT@ 6160 @LENGTH@ 48
------------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 6160 @LENGTH@ 31
---UPD EnhancedForStatement@@for (ServiceNameProvider builder : provider.getBuilders(registry,null,defaultChannel)) {  context.removeService(builder.getServiceName());} @TO@ for (ServiceNameProvider configurator : provider.getServiceConfigurators(registry,null,defaultChannel)) {  context.removeService(configurator.getServiceName());} @AT@ 6229 @LENGTH@ 177
------UPD SingleVariableDeclaration@@ServiceNameProvider builder @TO@ ServiceNameProvider configurator @AT@ 6234 @LENGTH@ 27
---------UPD SimpleName@@builder @TO@ configurator @AT@ 6254 @LENGTH@ 7
------UPD MethodInvocation@@provider.getBuilders(registry,null,defaultChannel) @TO@ provider.getServiceConfigurators(registry,null,defaultChannel) @AT@ 6264 @LENGTH@ 52
---------UPD SimpleName@@MethodName:getBuilders:[registry, null, defaultChannel] @TO@ MethodName:getServiceConfigurators:[registry, null, defaultChannel] @AT@ 6273 @LENGTH@ 43
------UPD ExpressionStatement@@MethodInvocation:context.removeService(builder.getServiceName()) @TO@ MethodInvocation:context.removeService(configurator.getServiceName()) @AT@ 6340 @LENGTH@ 48
---------UPD MethodInvocation@@context.removeService(builder.getServiceName()) @TO@ context.removeService(configurator.getServiceName()) @AT@ 6340 @LENGTH@ 47
------------UPD SimpleName@@MethodName:removeService:[builder.getServiceName()] @TO@ MethodName:removeService:[configurator.getServiceName()] @AT@ 6348 @LENGTH@ 39
---------------UPD MethodInvocation@@builder.getServiceName() @TO@ configurator.getServiceName() @AT@ 6362 @LENGTH@ 24
------------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 6362 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertThat(mvcResult.getResponse().getRedirectedUrl()).matches("https://github.com/login/oauth/authorize\\?response_type=code&client_id=your-app-client-id&scope=public_repo&state=.{15,}&redirect_uri=http://localhost/github-repos") @TO@ MethodInvocation:assertThat(mvcResult.getResponse().getRedirectedUrl()).matches("https://github.com/login/oauth/authorize\\?response_type=code&client_id=your-app-client-id&scope=public_repo&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fgithub-repos") @AT@ 4571 @LENGTH@ 231
---UPD MethodInvocation@@assertThat(mvcResult.getResponse().getRedirectedUrl()).matches("https://github.com/login/oauth/authorize\\?response_type=code&client_id=your-app-client-id&scope=public_repo&state=.{15,}&redirect_uri=http://localhost/github-repos") @TO@ assertThat(mvcResult.getResponse().getRedirectedUrl()).matches("https://github.com/login/oauth/authorize\\?response_type=code&client_id=your-app-client-id&scope=public_repo&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fgithub-repos") @AT@ 4571 @LENGTH@ 230
------UPD SimpleName@@MethodName:matches:["https://github.com/login/oauth/authorize\\?response_type=code&client_id=your-app-client-id&scope=public_repo&state=.{15,}&redirect_uri=http://localhost/github-repos"] @TO@ MethodName:matches:["https://github.com/login/oauth/authorize\\?response_type=code&client_id=your-app-client-id&scope=public_repo&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fgithub-repos"] @AT@ 4626 @LENGTH@ 175
---------UPD StringLiteral@@"https://github.com/login/oauth/authorize\\?response_type=code&client_id=your-app-client-id&scope=public_repo&state=.{15,}&redirect_uri=http://localhost/github-repos" @TO@ "https://github.com/login/oauth/authorize\\?response_type=code&client_id=your-app-client-id&scope=public_repo&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fgithub-repos" @AT@ 4634 @LENGTH@ 166


UPD ExpressionStatement@@MethodInvocation:assertThat(headers.getAccept()).contains(MediaType.APPLICATION_JSON_UTF8) @TO@ MethodInvocation:assertThat(headers.getAccept()).contains(MediaType.APPLICATION_JSON) @AT@ 3359 @LENGTH@ 74
---UPD MethodInvocation@@assertThat(headers.getAccept()).contains(MediaType.APPLICATION_JSON_UTF8) @TO@ assertThat(headers.getAccept()).contains(MediaType.APPLICATION_JSON) @AT@ 3359 @LENGTH@ 73
------UPD SimpleName@@MethodName:contains:[MediaType.APPLICATION_JSON_UTF8] @TO@ MethodName:contains:[MediaType.APPLICATION_JSON] @AT@ 3391 @LENGTH@ 41
---------UPD QualifiedName@@MediaType.APPLICATION_JSON_UTF8 @TO@ MediaType.APPLICATION_JSON @AT@ 3400 @LENGTH@ 31
------------UPD SimpleName@@APPLICATION_JSON_UTF8 @TO@ APPLICATION_JSON @AT@ 3410 @LENGTH@ 21


UPD ReturnStatement@@ConditionalExpression:(PROVIDER != null) ? new DistributableSingleSignOnManagerBuilder(name,serverName,hostName,PROVIDER) : new SimpleCapabilityServiceConfigurator<>(name,new InMemorySingleSignOnManager()) @TO@ ConditionalExpression:(PROVIDER != null) ? new DistributableSingleSignOnManagerServiceConfigurator(name,serverName,hostName,PROVIDER) : new SimpleCapabilityServiceConfigurator<>(name,new InMemorySingleSignOnManager()) @AT@ 2436 @LENGTH@ 195
---UPD ConditionalExpression@@(PROVIDER != null) ? new DistributableSingleSignOnManagerBuilder(name,serverName,hostName,PROVIDER) : new SimpleCapabilityServiceConfigurator<>(name,new InMemorySingleSignOnManager()) @TO@ (PROVIDER != null) ? new DistributableSingleSignOnManagerServiceConfigurator(name,serverName,hostName,PROVIDER) : new SimpleCapabilityServiceConfigurator<>(name,new InMemorySingleSignOnManager()) @AT@ 2443 @LENGTH@ 187
------UPD ClassInstanceCreation@@DistributableSingleSignOnManagerBuilder[name, serverName, hostName, PROVIDER] @TO@ DistributableSingleSignOnManagerServiceConfigurator[name, serverName, hostName, PROVIDER] @AT@ 2464 @LENGTH@ 81
---------UPD SimpleType@@DistributableSingleSignOnManagerBuilder @TO@ DistributableSingleSignOnManagerServiceConfigurator @AT@ 2468 @LENGTH@ 39


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5279 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5299 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 5281 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5309 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5323 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 5330 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5330 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 5340 @LENGTH@ 1


UPD Block@@ThenBody:{  ModelNode ssoModel=resource.getChild(UndertowExtension.PATH_SSO).getModel();  String cookieName=SingleSignOnDefinition.Attribute.COOKIE_NAME.resolveModelAttribute(context,ssoModel).asString();  String domain=SingleSignOnDefinition.Attribute.DOMAIN.resolveModelAttribute(context,ssoModel).asString();  String path=SingleSignOnDefinition.Attribute.PATH.resolveModelAttribute(context,ssoModel).asString();  boolean httpOnly=SingleSignOnDefinition.Attribute.HTTP_ONLY.resolveModelAttribute(context,ssoModel).asBoolean();  boolean secure=SingleSignOnDefinition.Attribute.SECURE.resolveModelAttribute(context,ssoModel).asBoolean();  SingleSignOnConfiguration singleSignOnConfiguration=new SingleSignOnConfiguration(cookieName,domain,path,httpOnly,secure);  ServiceName managerServiceName=new SingleSignOnManagerServiceNameProvider(securityDomainName).getServiceName();  SessionIdGenerator generator=new SecureRandomSessionIdGenerator();  DistributableSecurityDomainSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,securityDomainName,generator)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId))).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();  Builder<SingleSignOnSessionFactory> factoryBuilder=new SingleSignOnSessionFactoryBuilder(securityDomainName).configure(context,ssoModel);  factoryBuilder.build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();  InjectedValue<SingleSignOnSessionFactory> singleSignOnSessionFactory=new InjectedValue<>();  serviceBuilder.addDependency(factoryBuilder.getServiceName(),SingleSignOnSessionFactory.class,singleSignOnSessionFactory);  applicationSecurityDomainService.getSingleSignOnSessionFactoryInjector().inject(factory -> new SingleSignOnServerMechanismFactory(factory,singleSignOnSessionFactory.getValue(),singleSignOnConfiguration));} @TO@ ThenBody:{  ModelNode ssoModel=resource.getChild(UndertowExtension.PATH_SSO).getModel();  String cookieName=SingleSignOnDefinition.Attribute.COOKIE_NAME.resolveModelAttribute(context,ssoModel).asString();  String domain=SingleSignOnDefinition.Attribute.DOMAIN.resolveModelAttribute(context,ssoModel).asString();  String path=SingleSignOnDefinition.Attribute.PATH.resolveModelAttribute(context,ssoModel).asString();  boolean httpOnly=SingleSignOnDefinition.Attribute.HTTP_ONLY.resolveModelAttribute(context,ssoModel).asBoolean();  boolean secure=SingleSignOnDefinition.Attribute.SECURE.resolveModelAttribute(context,ssoModel).asBoolean();  SingleSignOnConfiguration singleSignOnConfiguration=new SingleSignOnConfiguration(cookieName,domain,path,httpOnly,secure);  ServiceName managerServiceName=new SingleSignOnManagerServiceNameProvider(securityDomainName).getServiceName();  SessionIdGenerator generator=new SecureRandomSessionIdGenerator();  DistributableSecurityDomainSingleSignOnManagerServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,securityDomainName,generator)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId))).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();  ServiceConfigurator factoryConfigurator=new SingleSignOnSessionFactoryServiceConfigurator(securityDomainName).configure(context,ssoModel);  factoryConfigurator.build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();  InjectedValue<SingleSignOnSessionFactory> singleSignOnSessionFactory=new InjectedValue<>();  serviceBuilder.addDependency(factoryConfigurator.getServiceName(),SingleSignOnSessionFactory.class,singleSignOnSessionFactory);  applicationSecurityDomainService.getSingleSignOnSessionFactoryInjector().inject(factory -> new SingleSignOnServerMechanismFactory(factory,singleSignOnSessionFactory.getValue(),singleSignOnConfiguration));} @AT@ 15654 @LENGTH@ 2363
---UPD ExpressionStatement@@MethodInvocation:DistributableSecurityDomainSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,securityDomainName,generator)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId))).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ MethodInvocation:DistributableSecurityDomainSingleSignOnManagerServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,securityDomainName,generator)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId))).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 16769 @LENGTH@ 495
------UPD MethodInvocation@@DistributableSecurityDomainSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,securityDomainName,generator)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId))).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ DistributableSecurityDomainSingleSignOnManagerServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,securityDomainName,generator)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId))).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 16769 @LENGTH@ 494
---------UPD QualifiedName@@Name:DistributableSecurityDomainSingleSignOnManagerBuilderProvider.INSTANCE @TO@ Name:DistributableSecurityDomainSingleSignOnManagerServiceConfiguratorProvider.INSTANCE @AT@ 16769 @LENGTH@ 70
---UPD VariableDeclarationStatement@@Builder<SingleSignOnSessionFactory> factoryBuilder=new SingleSignOnSessionFactoryBuilder(securityDomainName).configure(context,ssoModel); @TO@ ServiceConfigurator factoryConfigurator=new SingleSignOnSessionFactoryServiceConfigurator(securityDomainName).configure(context,ssoModel); @AT@ 17282 @LENGTH@ 140
------DEL ParameterizedType@@Builder<SingleSignOnSessionFactory> @AT@ 17282 @LENGTH@ 35
---------DEL SimpleType@@Builder @AT@ 17282 @LENGTH@ 7
---------DEL SimpleType@@SingleSignOnSessionFactory @AT@ 17290 @LENGTH@ 26
------UPD VariableDeclarationFragment@@factoryBuilder=new SingleSignOnSessionFactoryBuilder(securityDomainName).configure(context,ssoModel) @TO@ factoryConfigurator=new SingleSignOnSessionFactoryServiceConfigurator(securityDomainName).configure(context,ssoModel) @AT@ 17318 @LENGTH@ 103
---------UPD SimpleName@@factoryBuilder @TO@ factoryConfigurator @AT@ 17318 @LENGTH@ 14
---------UPD MethodInvocation@@new SingleSignOnSessionFactoryBuilder(securityDomainName).configure(context,ssoModel) @TO@ new SingleSignOnSessionFactoryServiceConfigurator(securityDomainName).configure(context,ssoModel) @AT@ 17335 @LENGTH@ 86
------------UPD ClassInstanceCreation@@SingleSignOnSessionFactoryBuilder[securityDomainName] @TO@ SingleSignOnSessionFactoryServiceConfigurator[securityDomainName] @AT@ 17335 @LENGTH@ 57
---------------UPD SimpleType@@SingleSignOnSessionFactoryBuilder @TO@ SingleSignOnSessionFactoryServiceConfigurator @AT@ 17339 @LENGTH@ 33
------INS SimpleType@@ServiceConfigurator @TO@ VariableDeclarationStatement@@Builder<SingleSignOnSessionFactory> factoryBuilder=new SingleSignOnSessionFactoryBuilder(securityDomainName).configure(context,ssoModel); @AT@ 17318 @LENGTH@ 19
---UPD ExpressionStatement@@MethodInvocation:factoryBuilder.build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ MethodInvocation:factoryConfigurator.build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 17439 @LENGTH@ 88
------UPD MethodInvocation@@factoryBuilder.build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ factoryConfigurator.build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 17439 @LENGTH@ 87
---------UPD SimpleName@@Name:factoryBuilder @TO@ Name:factoryConfigurator @AT@ 17439 @LENGTH@ 14
---UPD ExpressionStatement@@MethodInvocation:serviceBuilder.addDependency(factoryBuilder.getServiceName(),SingleSignOnSessionFactory.class,singleSignOnSessionFactory) @TO@ MethodInvocation:serviceBuilder.addDependency(factoryConfigurator.getServiceName(),SingleSignOnSessionFactory.class,singleSignOnSessionFactory) @AT@ 17655 @LENGTH@ 124
------UPD MethodInvocation@@serviceBuilder.addDependency(factoryBuilder.getServiceName(),SingleSignOnSessionFactory.class,singleSignOnSessionFactory) @TO@ serviceBuilder.addDependency(factoryConfigurator.getServiceName(),SingleSignOnSessionFactory.class,singleSignOnSessionFactory) @AT@ 17655 @LENGTH@ 123
---------UPD SimpleName@@MethodName:addDependency:[factoryBuilder.getServiceName(), SingleSignOnSessionFactory.class, singleSignOnSessionFactory] @TO@ MethodName:addDependency:[factoryConfigurator.getServiceName(), SingleSignOnSessionFactory.class, singleSignOnSessionFactory] @AT@ 17670 @LENGTH@ 108
------------UPD MethodInvocation@@factoryBuilder.getServiceName() @TO@ factoryConfigurator.getServiceName() @AT@ 17684 @LENGTH@ 31
---------------UPD SimpleName@@Name:factoryBuilder @TO@ Name:factoryConfigurator @AT@ 17684 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:getClaimAsStringWhenValueIsNullThenReturnNull,  @TO@ TypeDeclaration@@[public]ClaimAccessorTests,  @AT@ 3148 @LENGTH@ 225
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsStringWhenValueIsNullThenReturnNull,  @AT@ 3148 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsStringWhenValueIsNullThenReturnNull,  @AT@ 3155 @LENGTH@ 4
---INS SimpleName@@MethodName:getClaimAsStringWhenValueIsNullThenReturnNull @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsStringWhenValueIsNullThenReturnNull,  @AT@ 3160 @LENGTH@ 45
---INS VariableDeclarationStatement@@String claimName="claim-with-null-value"; @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsStringWhenValueIsNullThenReturnNull,  @AT@ 3212 @LENGTH@ 43
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String claimName="claim-with-null-value"; @AT@ 3212 @LENGTH@ 6
------INS VariableDeclarationFragment@@claimName="claim-with-null-value" @TO@ VariableDeclarationStatement@@String claimName="claim-with-null-value"; @AT@ 3219 @LENGTH@ 35
---------INS SimpleName@@claimName @TO@ VariableDeclarationFragment@@claimName="claim-with-null-value" @AT@ 3219 @LENGTH@ 9
---------INS StringLiteral@@"claim-with-null-value" @TO@ VariableDeclarationFragment@@claimName="claim-with-null-value" @AT@ 3231 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:this.claims.put(claimName,null) @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsStringWhenValueIsNullThenReturnNull,  @AT@ 3258 @LENGTH@ 33
------INS MethodInvocation@@this.claims.put(claimName,null) @TO@ ExpressionStatement@@MethodInvocation:this.claims.put(claimName,null) @AT@ 3258 @LENGTH@ 32
---------INS FieldAccess@@this.claims @TO@ MethodInvocation@@this.claims.put(claimName,null) @AT@ 3258 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.claims @AT@ 3258 @LENGTH@ 4
------------INS SimpleName@@claims @TO@ FieldAccess@@this.claims @AT@ 3263 @LENGTH@ 6
---------INS SimpleName@@MethodName:put:[claimName, null] @TO@ MethodInvocation@@this.claims.put(claimName,null) @AT@ 3270 @LENGTH@ 20
------------INS SimpleName@@claimName @TO@ SimpleName@@MethodName:put:[claimName, null] @AT@ 3274 @LENGTH@ 9
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:put:[claimName, null] @AT@ 3285 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(this.claimAccessor.getClaimAsString(claimName)).isEqualTo(null) @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsStringWhenValueIsNullThenReturnNull,  @AT@ 3295 @LENGTH@ 75
------INS MethodInvocation@@assertThat(this.claimAccessor.getClaimAsString(claimName)).isEqualTo(null) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.claimAccessor.getClaimAsString(claimName)).isEqualTo(null) @AT@ 3295 @LENGTH@ 74
---------INS MethodInvocation@@MethodName:assertThat:[this.claimAccessor.getClaimAsString(claimName)] @TO@ MethodInvocation@@assertThat(this.claimAccessor.getClaimAsString(claimName)).isEqualTo(null) @AT@ 3295 @LENGTH@ 58
------------INS MethodInvocation@@this.claimAccessor.getClaimAsString(claimName) @TO@ MethodInvocation@@MethodName:assertThat:[this.claimAccessor.getClaimAsString(claimName)] @AT@ 3306 @LENGTH@ 46
---------------INS FieldAccess@@this.claimAccessor @TO@ MethodInvocation@@this.claimAccessor.getClaimAsString(claimName) @AT@ 3306 @LENGTH@ 18
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.claimAccessor @AT@ 3306 @LENGTH@ 4
------------------INS SimpleName@@claimAccessor @TO@ FieldAccess@@this.claimAccessor @AT@ 3311 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getClaimAsString:[claimName] @TO@ MethodInvocation@@this.claimAccessor.getClaimAsString(claimName) @AT@ 3325 @LENGTH@ 27
------------------INS SimpleName@@claimName @TO@ SimpleName@@MethodName:getClaimAsString:[claimName] @AT@ 3342 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:[null] @TO@ MethodInvocation@@assertThat(this.claimAccessor.getClaimAsString(claimName)).isEqualTo(null) @AT@ 3354 @LENGTH@ 15
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:isEqualTo:[null] @AT@ 3364 @LENGTH@ 4


UPD IfStatement@@if (getConfiguration().getCalendarSummaryName() != "primary") {  com.google.api.services.calendar.model.CalendarList calendars=getClient().calendarList().list().execute();  if (calendars.getItems() != null) {    for (    CalendarListEntry entry : calendars.getItems()) {      if (getConfiguration().getCalendarSummaryName().equals(entry.getSummary())) {        calendarId=entry.getId();      }    }  }  if (ObjectHelper.isEmpty(calendarId)) {    LOG.warn("The calendar {} doesn't exists fallback to primary calendar",getConfiguration().getCalendarSummaryName());    calendarId="primary";  }} else {  LOG.debug("Setting calendarId as primary",getConfiguration().getCalendarSummaryName());  calendarId="primary";} @TO@ if (getConfiguration().getCalendarSummaryName().equals("primary")) {  com.google.api.services.calendar.model.CalendarList calendars=getClient().calendarList().list().execute();  if (calendars.getItems() != null) {    for (    CalendarListEntry entry : calendars.getItems()) {      if (getConfiguration().getCalendarSummaryName().equals(entry.getSummary())) {        calendarId=entry.getId();      }    }  }  if (ObjectHelper.isEmpty(calendarId)) {    LOG.warn("The calendar {} doesn't exists fallback to primary calendar",getConfiguration().getCalendarSummaryName());    calendarId="primary";  }} else {  LOG.debug("Setting calendarId as primary",getConfiguration().getCalendarSummaryName());  calendarId="primary";} @AT@ 2846 @LENGTH@ 911
---INS MethodInvocation@@getConfiguration().getCalendarSummaryName().equals("primary") @TO@ IfStatement@@if (getConfiguration().getCalendarSummaryName() != "primary") {  com.google.api.services.calendar.model.CalendarList calendars=getClient().calendarList().list().execute();  if (calendars.getItems() != null) {    for (    CalendarListEntry entry : calendars.getItems()) {      if (getConfiguration().getCalendarSummaryName().equals(entry.getSummary())) {        calendarId=entry.getId();      }    }  }  if (ObjectHelper.isEmpty(calendarId)) {    LOG.warn("The calendar {} doesn't exists fallback to primary calendar",getConfiguration().getCalendarSummaryName());    calendarId="primary";  }} else {  LOG.debug("Setting calendarId as primary",getConfiguration().getCalendarSummaryName());  calendarId="primary";} @AT@ 2850 @LENGTH@ 61
------INS MethodInvocation@@MethodName:getCalendarSummaryName:[] @TO@ MethodInvocation@@getConfiguration().getCalendarSummaryName().equals("primary") @AT@ 2850 @LENGTH@ 43
------MOV MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@getConfiguration().getCalendarSummaryName().equals("primary") @AT@ 2850 @LENGTH@ 18
------MOV SimpleName@@MethodName:getCalendarSummaryName:[] @TO@ MethodInvocation@@getConfiguration().getCalendarSummaryName().equals("primary") @AT@ 2869 @LENGTH@ 24
---------INS StringLiteral@@"primary" @TO@ SimpleName@@MethodName:getCalendarSummaryName:[] @AT@ 2901 @LENGTH@ 9
---DEL InfixExpression@@getConfiguration().getCalendarSummaryName() != "primary" @AT@ 2850 @LENGTH@ 56
------DEL MethodInvocation@@getConfiguration().getCalendarSummaryName() @AT@ 2850 @LENGTH@ 43
------DEL Operator@@!= @AT@ 2893 @LENGTH@ 2
------DEL StringLiteral@@"primary" @AT@ 2897 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:DistributableHostSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getBuilder(managerServiceName,serverName,hostName)).orElse(new SimpleCapabilityServiceBuilder<>(managerServiceName,new InMemorySingleSignOnManager())).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ MethodInvocation:DistributableHostSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,serverName,hostName)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new InMemorySingleSignOnManager())).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 3338 @LENGTH@ 366
---UPD MethodInvocation@@DistributableHostSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getBuilder(managerServiceName,serverName,hostName)).orElse(new SimpleCapabilityServiceBuilder<>(managerServiceName,new InMemorySingleSignOnManager())).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ DistributableHostSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,serverName,hostName)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new InMemorySingleSignOnManager())).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 3338 @LENGTH@ 365
------UPD MethodInvocation@@MethodName:orElse:[new SimpleCapabilityServiceBuilder<>(managerServiceName,new InMemorySingleSignOnManager())] @TO@ MethodName:orElse:[new SimpleCapabilityServiceConfigurator<>(managerServiceName,new InMemorySingleSignOnManager())] @AT@ 3338 @LENGTH@ 256
---------UPD ClassInstanceCreation@@SimpleCapabilityServiceBuilder<>[managerServiceName, new InMemorySingleSignOnManager()] @TO@ SimpleCapabilityServiceConfigurator<>[managerServiceName, new InMemorySingleSignOnManager()] @AT@ 3502 @LENGTH@ 91
------------UPD ParameterizedType@@SimpleCapabilityServiceBuilder<> @TO@ SimpleCapabilityServiceConfigurator<> @AT@ 3506 @LENGTH@ 32
---------------UPD SimpleType@@SimpleCapabilityServiceBuilder @TO@ SimpleCapabilityServiceConfigurator @AT@ 3506 @LENGTH@ 30
------UPD MethodInvocation@@MethodName:map:[provider -> provider.getBuilder(managerServiceName,serverName,hostName)] @TO@ MethodName:map:[provider -> provider.getServiceConfigurator(managerServiceName,serverName,hostName)] @AT@ 3338 @LENGTH@ 139
---------UPD LambdaExpression@@provider -> provider.getBuilder(managerServiceName,serverName,hostName) @TO@ provider -> provider.getServiceConfigurator(managerServiceName,serverName,hostName) @AT@ 3403 @LENGTH@ 73
------------UPD MethodInvocation@@provider.getBuilder(managerServiceName,serverName,hostName) @TO@ provider.getServiceConfigurator(managerServiceName,serverName,hostName) @AT@ 3415 @LENGTH@ 61
---------------UPD SimpleName@@MethodName:getBuilder:[managerServiceName, serverName, hostName] @TO@ MethodName:getServiceConfigurator:[managerServiceName, serverName, hostName] @AT@ 3424 @LENGTH@ 52


INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodDeclaration@@public, void, MethodName:testAsyncStopOfStartingJob, Exception,  @AT@ 3286 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 3286 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 3286 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 3293 @LENGTH@ 11
---------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 3299 @LENGTH@ 4


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[private]JobParametersModule, SimpleModule @AT@ 3247 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 3247 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 3255 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 3262 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 3268 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 3273 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 3273 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 3292 @LENGTH@ 2


UPD TypeDeclaration@@[@SuppressWarnings("rawtype"), public]HibernateItemReaderHelper, [InitializingBean] @TO@ [@SuppressWarnings("rawtypes"), public]HibernateItemReaderHelper, [InitializingBean] @AT@ 1379 @LENGTH@ 5362
---UPD SingleMemberAnnotation@@@SuppressWarnings("rawtype") @TO@ @SuppressWarnings("rawtypes") @AT@ 1379 @LENGTH@ 28


UPD TryStatement@@try {  ClassLoader cl=ApplicationEnvironment.get().getBootstrapClassLoader();  if (LOG.isTraceEnabled()) {    LOG.trace("classloader: " + cl);    LOG.trace("path: " + path);  }  URL url=cl.getResource(path);  if (url == null && cl != ClasspathModuleFinder.class.getClassLoader()) {    url=ClasspathModuleFinder.class.getClassLoader().getResource(path);  }  if (url == null) {    if (LOG.isTraceEnabled()) {      LOG.trace("not found: " + identifier);    }    return null;  }  final URL base=new URL(url,"./");  if (LOG.isTraceEnabled()) {    LOG.trace("base of " + identifier + ": "+ base);  }  InputStream in=url.openStream();  Path explodedJar=NestedJarResourceLoader.explodedJar(base);  ModuleSpec moduleSpec=null;  try {    moduleSpec=ModuleXmlParser.parseModuleXml((rootPath,loaderPath,loaderName) -> NestedJarResourceLoader.loaderFor(base,rootPath,loaderPath,loaderName),MavenResolvers.get(),(explodedJar == null ? "/" : explodedJar.toAbsolutePath().toString()),in,path.toString(),delegateLoader,simpleIdentifier);  } catch (  IOException e) {    throw new ModuleLoadException(e);  } finally {    try {      in.close();    } catch (    IOException e) {      throw new ModuleLoadException(e);    }  }  if (LOG.isTraceEnabled()) {    LOG.trace("Loaded ModuleSpec: " + moduleSpec.getName());  }  return moduleSpec;} catch (IOException e) {  throw new ModuleLoadException(e);} @TO@ try {  ClassLoader cl=ApplicationEnvironment.get().getBootstrapClassLoader();  if (LOG.isTraceEnabled()) {    LOG.trace("classloader: " + cl);    LOG.trace("path: " + path);  }  URL url=findResourceInClassLoader(cl,path);  if (url == null && cl != ClasspathModuleFinder.class.getClassLoader()) {    url=findResourceInClassLoader(ClasspathModuleFinder.class.getClassLoader(),path);  }  if (url == null) {    if (LOG.isTraceEnabled()) {      LOG.trace("not found: " + identifier);    }    return null;  }  final URL base=new URL(url,"./");  if (LOG.isTraceEnabled()) {    LOG.trace("base of " + identifier + ": "+ base);  }  InputStream in=url.openStream();  Path explodedJar=NestedJarResourceLoader.explodedJar(base);  ModuleSpec moduleSpec=null;  try {    moduleSpec=ModuleXmlParser.parseModuleXml((rootPath,loaderPath,loaderName) -> NestedJarResourceLoader.loaderFor(base,rootPath,loaderPath,loaderName),MavenResolvers.get(),(explodedJar == null ? "/" : explodedJar.toAbsolutePath().toString()),in,path.toString(),delegateLoader,simpleIdentifier);  } catch (  IOException e) {    throw new ModuleLoadException(e);  } finally {    try {      in.close();    } catch (    IOException e) {      throw new ModuleLoadException(e);    }  }  if (LOG.isTraceEnabled()) {    LOG.trace("Loaded ModuleSpec: " + moduleSpec.getName());  }  return moduleSpec;} catch (IOException e) {  throw new ModuleLoadException(e);} @AT@ 2086 @LENGTH@ 2241
---UPD VariableDeclarationStatement@@URL url=cl.getResource(path); @TO@ URL url=findResourceInClassLoader(cl,path); @AT@ 2361 @LENGTH@ 31
------UPD VariableDeclarationFragment@@url=cl.getResource(path) @TO@ url=findResourceInClassLoader(cl,path) @AT@ 2365 @LENGTH@ 26
---------INS MethodInvocation@@findResourceInClassLoader(cl,path) @TO@ VariableDeclarationFragment@@url=cl.getResource(path) @AT@ 2401 @LENGTH@ 35
------------INS SimpleName@@MethodName:findResourceInClassLoader:[cl, path] @TO@ MethodInvocation@@findResourceInClassLoader(cl,path) @AT@ 2401 @LENGTH@ 35
---------------INS SimpleName@@cl @TO@ SimpleName@@MethodName:findResourceInClassLoader:[cl, path] @AT@ 2427 @LENGTH@ 2
---------------INS SimpleName@@path @TO@ SimpleName@@MethodName:findResourceInClassLoader:[cl, path] @AT@ 2431 @LENGTH@ 4
---UPD IfStatement@@if (url == null && cl != ClasspathModuleFinder.class.getClassLoader()) {  url=ClasspathModuleFinder.class.getClassLoader().getResource(path);} @TO@ if (url == null && cl != ClasspathModuleFinder.class.getClassLoader()) {  url=findResourceInClassLoader(ClasspathModuleFinder.class.getClassLoader(),path);} @AT@ 2410 @LENGTH@ 180
------UPD Block@@ThenBody:{  url=ClasspathModuleFinder.class.getClassLoader().getResource(path);} @TO@ ThenBody:{  url=findResourceInClassLoader(ClasspathModuleFinder.class.getClassLoader(),path);} @AT@ 2481 @LENGTH@ 109
---------UPD ExpressionStatement@@Assignment:url=ClasspathModuleFinder.class.getClassLoader().getResource(path) @TO@ Assignment:url=findResourceInClassLoader(ClasspathModuleFinder.class.getClassLoader(),path) @AT@ 2503 @LENGTH@ 69
------------UPD Assignment@@url=ClasspathModuleFinder.class.getClassLoader().getResource(path) @TO@ url=findResourceInClassLoader(ClasspathModuleFinder.class.getClassLoader(),path) @AT@ 2503 @LENGTH@ 68
---------------UPD MethodInvocation@@ClasspathModuleFinder.class.getClassLoader().getResource(path) @TO@ findResourceInClassLoader(ClasspathModuleFinder.class.getClassLoader(),path) @AT@ 2509 @LENGTH@ 62
------------------DEL MethodInvocation@@MethodName:getClassLoader:[] @AT@ 2509 @LENGTH@ 44
------------------INS SimpleName@@MethodName:findResourceInClassLoader:[ClasspathModuleFinder.class.getClassLoader(), path] @TO@ MethodInvocation@@ClasspathModuleFinder.class.getClassLoader().getResource(path) @AT@ 2554 @LENGTH@ 77
---------------------MOV SimpleName@@path @TO@ SimpleName@@MethodName:findResourceInClassLoader:[ClasspathModuleFinder.class.getClassLoader(), path] @AT@ 2566 @LENGTH@ 4
---------------------INS MethodInvocation@@ClasspathModuleFinder.class.getClassLoader() @TO@ SimpleName@@MethodName:findResourceInClassLoader:[ClasspathModuleFinder.class.getClassLoader(), path] @AT@ 2580 @LENGTH@ 44
------------------------MOV TypeLiteral@@ClasspathModuleFinder.class @TO@ MethodInvocation@@ClasspathModuleFinder.class.getClassLoader() @AT@ 2509 @LENGTH@ 27
------------------------INS SimpleName@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@ClasspathModuleFinder.class.getClassLoader() @AT@ 2608 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:getResource:[path] @AT@ 2554 @LENGTH@ 17


UPD ExpressionStatement@@Assignment:accessTokenResponseClient=new NimbusAuthorizationCodeTokenResponseClient() @TO@ Assignment:accessTokenResponseClient=new DefaultAuthorizationCodeTokenResponseClient() @AT@ 19625 @LENGTH@ 77
---UPD Assignment@@accessTokenResponseClient=new NimbusAuthorizationCodeTokenResponseClient() @TO@ accessTokenResponseClient=new DefaultAuthorizationCodeTokenResponseClient() @AT@ 19625 @LENGTH@ 76
------UPD ClassInstanceCreation@@NimbusAuthorizationCodeTokenResponseClient[] @TO@ DefaultAuthorizationCodeTokenResponseClient[] @AT@ 19653 @LENGTH@ 48
---------UPD SimpleType@@NimbusAuthorizationCodeTokenResponseClient @TO@ DefaultAuthorizationCodeTokenResponseClient @AT@ 19657 @LENGTH@ 42


UPD MethodDeclaration@@public, void, MethodName:registerEndpoint, RabbitListenerEndpoint endpoint, RabbitListenerContainerFactory<?> factory,  @TO@ public, void, MethodName:registerEndpoint, RabbitListenerEndpoint endpoint, @Nullable RabbitListenerContainerFactory<?> factory,  @AT@ 6554 @LENGTH@ 723
---UPD SingleVariableDeclaration@@RabbitListenerContainerFactory<?> factory @TO@ @Nullable RabbitListenerContainerFactory<?> factory @AT@ 6616 @LENGTH@ 41


UPD ExpressionStatement@@Assignment:this.resourceServerConfigurer=new OAuth2ResourceServerConfigurer<>() @TO@ Assignment:this.resourceServerConfigurer=new OAuth2ResourceServerConfigurer<>(context) @AT@ 3426 @LENGTH@ 71
---UPD Assignment@@this.resourceServerConfigurer=new OAuth2ResourceServerConfigurer<>() @TO@ this.resourceServerConfigurer=new OAuth2ResourceServerConfigurer<>(context) @AT@ 3426 @LENGTH@ 70
------UPD ClassInstanceCreation@@OAuth2ResourceServerConfigurer<>[] @TO@ OAuth2ResourceServerConfigurer<>[context] @AT@ 3458 @LENGTH@ 38
---------INS SimpleName@@context @TO@ ClassInstanceCreation@@OAuth2ResourceServerConfigurer<>[] @AT@ 3637 @LENGTH@ 7


UPD MethodDeclaration@@Value<ServiceProviderRegistry<ServiceName>>, MethodName:getServiceProviderRegistry,  @TO@ Supplier<ServiceProviderRegistry<ServiceName>>, MethodName:getServiceProviderRegistry,  @AT@ 1637 @LENGTH@ 29
---UPD ParameterizedType@@Value<ServiceProviderRegistry<ServiceName>> @TO@ Supplier<ServiceProviderRegistry<ServiceName>> @AT@ 1593 @LENGTH@ 43
------UPD SimpleType@@Value @TO@ Supplier @AT@ 1593 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat("Error message doesn't contains expected message information!",ex.getMessage(),allOf(containsString("WFLYCTL0216: Management resource"),containsString(sgOne),containsString(cliTestApp2War.getName()),containsString("not found"))) @TO@ MethodInvocation:assertThat("Error message doesn't contains expected message information!",ex.getMessage(),allOf(containsString("WFLYCTL0216"),containsString(sgOne),containsString(cliTestApp2War.getName()))) @AT@ 8745 @LENGTH@ 369
---UPD MethodInvocation@@assertThat("Error message doesn't contains expected message information!",ex.getMessage(),allOf(containsString("WFLYCTL0216: Management resource"),containsString(sgOne),containsString(cliTestApp2War.getName()),containsString("not found"))) @TO@ assertThat("Error message doesn't contains expected message information!",ex.getMessage(),allOf(containsString("WFLYCTL0216"),containsString(sgOne),containsString(cliTestApp2War.getName()))) @AT@ 8745 @LENGTH@ 368
------UPD SimpleName@@MethodName:assertThat:["Error message doesn't contains expected message information!", ex.getMessage(), allOf(containsString("WFLYCTL0216: Management resource"),containsString(sgOne),containsString(cliTestApp2War.getName()),containsString("not found"))] @TO@ MethodName:assertThat:["Error message doesn't contains expected message information!", ex.getMessage(), allOf(containsString("WFLYCTL0216"),containsString(sgOne),containsString(cliTestApp2War.getName()))] @AT@ 8745 @LENGTH@ 368
---------UPD MethodInvocation@@allOf(containsString("WFLYCTL0216: Management resource"),containsString(sgOne),containsString(cliTestApp2War.getName()),containsString("not found")) @TO@ allOf(containsString("WFLYCTL0216"),containsString(sgOne),containsString(cliTestApp2War.getName())) @AT@ 8877 @LENGTH@ 235
------------UPD SimpleName@@MethodName:allOf:[containsString("WFLYCTL0216: Management resource"), containsString(sgOne), containsString(cliTestApp2War.getName()), containsString("not found")] @TO@ MethodName:allOf:[containsString("WFLYCTL0216"), containsString(sgOne), containsString(cliTestApp2War.getName())] @AT@ 8877 @LENGTH@ 235
---------------UPD MethodInvocation@@containsString("WFLYCTL0216: Management resource") @TO@ containsString("WFLYCTL0216") @AT@ 8883 @LENGTH@ 50
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216"] @AT@ 8883 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216" @AT@ 8898 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216"] @AT@ 8883 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216" @AT@ 8898 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216"] @AT@ 8883 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216" @AT@ 8898 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216"] @AT@ 8883 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216" @AT@ 8898 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216"] @AT@ 8883 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216" @AT@ 8898 @LENGTH@ 34
---------------DEL MethodInvocation@@containsString("not found") @AT@ 9084 @LENGTH@ 27
------------------DEL SimpleName@@MethodName:containsString:["not found"] @AT@ 9084 @LENGTH@ 27
---------------------DEL StringLiteral@@"not found" @AT@ 9099 @LENGTH@ 11
------------UPD SimpleName@@MethodName:allOf:[containsString("WFLYCTL0216: Management resource"), containsString(sgOne), containsString(cliTestApp2War.getName()), containsString("not found")] @TO@ MethodName:allOf:[containsString("WFLYCTL0216"), containsString(sgOne), containsString(cliTestApp2War.getName())] @AT@ 8877 @LENGTH@ 235
---------------UPD MethodInvocation@@containsString("WFLYCTL0216: Management resource") @TO@ containsString("WFLYCTL0216") @AT@ 8883 @LENGTH@ 50
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216"] @AT@ 8883 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216" @AT@ 8898 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216"] @AT@ 8883 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216" @AT@ 8898 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216"] @AT@ 8883 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216" @AT@ 8898 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216"] @AT@ 8883 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216" @AT@ 8898 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216"] @AT@ 8883 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216" @AT@ 8898 @LENGTH@ 34
---------------DEL MethodInvocation@@containsString("not found") @AT@ 9084 @LENGTH@ 27
------------------DEL SimpleName@@MethodName:containsString:["not found"] @AT@ 9084 @LENGTH@ 27
---------------------DEL StringLiteral@@"not found" @AT@ 9099 @LENGTH@ 11


UPD VariableDeclarationStatement@@CacheContainer container=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)); @TO@ CacheContainer container=new PassiveServiceSupplier<CacheContainer>(context.getServiceRegistry(true),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)).get(); @AT@ 1890 @LENGTH@ 167
---UPD VariableDeclarationFragment@@container=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)) @TO@ container=new PassiveServiceSupplier<CacheContainer>(context.getServiceRegistry(true),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)).get() @AT@ 1905 @LENGTH@ 151
------UPD MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)) @TO@ new PassiveServiceSupplier<CacheContainer>(context.getServiceRegistry(true),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)).get() @AT@ 1917 @LENGTH@ 139
---------DEL SimpleName@@Name:ServiceContainerHelper @AT@ 1917 @LENGTH@ 22
---------INS ClassInstanceCreation@@PassiveServiceSupplier<CacheContainer>[context.getServiceRegistry(true), InfinispanRequirement.CONTAINER.getServiceName(context,containerName)] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)) @AT@ 1920 @LENGTH@ 148
------------INS New@@new @TO@ ClassInstanceCreation@@PassiveServiceSupplier<CacheContainer>[context.getServiceRegistry(true), InfinispanRequirement.CONTAINER.getServiceName(context,containerName)] @AT@ 1920 @LENGTH@ 3
------------INS ParameterizedType@@PassiveServiceSupplier<CacheContainer> @TO@ ClassInstanceCreation@@PassiveServiceSupplier<CacheContainer>[context.getServiceRegistry(true), InfinispanRequirement.CONTAINER.getServiceName(context,containerName)] @AT@ 1924 @LENGTH@ 38
---------------INS SimpleType@@PassiveServiceSupplier @TO@ ParameterizedType@@PassiveServiceSupplier<CacheContainer> @AT@ 1924 @LENGTH@ 22
---------------INS SimpleType@@CacheContainer @TO@ ParameterizedType@@PassiveServiceSupplier<CacheContainer> @AT@ 1947 @LENGTH@ 14
------------INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<CacheContainer>[context.getServiceRegistry(true), InfinispanRequirement.CONTAINER.getServiceName(context,containerName)] @AT@ 1963 @LENGTH@ 32
---------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 1950 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 1958 @LENGTH@ 25
------------------UPD BooleanLiteral@@false @TO@ true @AT@ 1977 @LENGTH@ 5
------------MOV MethodInvocation@@InfinispanRequirement.CONTAINER.getServiceName(context,containerName) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<CacheContainer>[context.getServiceRegistry(true), InfinispanRequirement.CONTAINER.getServiceName(context,containerName)] @AT@ 1985 @LENGTH@ 70
---------DEL SimpleName@@MethodName:findValue:[context.getServiceRegistry(false), InfinispanRequirement.CONTAINER.getServiceName(context,containerName)] @AT@ 1940 @LENGTH@ 116
------------DEL MethodInvocation@@context.getServiceRegistry(false) @AT@ 1950 @LENGTH@ 33
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)) @AT@ 2069 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:applyWhenWrongSchemeThenAuthentication,  @TO@ public, void, MethodName:applyWhenWrongSchemeThenEmpty,  @AT@ 3262 @LENGTH@ 214
---UPD SimpleName@@MethodName:applyWhenWrongSchemeThenAuthentication @TO@ MethodName:applyWhenWrongSchemeThenEmpty @AT@ 3274 @LENGTH@ 38


UPD MethodDeclaration@@private, Object, MethodName:convertHeaderValueIfNecessary, Object value,  @TO@ private, Object, MethodName:convertHeaderValueIfNecessary, @Nullable Object value,  @AT@ 6380 @LENGTH@ 1576
---UPD SingleVariableDeclaration@@Object value @TO@ @Nullable Object value @AT@ 6425 @LENGTH@ 12


UPD ReturnStatement@@ClassInstanceCreation:new HashMap<>(properties) @TO@ ClassInstanceCreation:new ConcurrentHashMap<>(properties) @AT@ 17974 @LENGTH@ 33
---UPD ClassInstanceCreation@@HashMap<>[properties] @TO@ ConcurrentHashMap<>[properties] @AT@ 17981 @LENGTH@ 25
------UPD ParameterizedType@@HashMap<> @TO@ ConcurrentHashMap<> @AT@ 17985 @LENGTH@ 9
---------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 17985 @LENGTH@ 7


MOV FieldDeclaration@@public, static, GenericContainer, [container=ConsulContainerSupport.consulContainer()] @TO@ TypeDeclaration@@[public]ConsulClusteredRoutePolicyFactoryTest,  @AT@ 2204 @LENGTH@ 84


UPD MethodDeclaration@@public, void, MethodName:releaseConsumerFor, ChannelHolder channelHolder, boolean cancelConsumer, String message,  @TO@ public, void, MethodName:releaseConsumerFor, ChannelHolder channelHolder, boolean cancelConsumer, @Nullable String message,  @AT@ 6298 @LENGTH@ 625
---UPD SingleVariableDeclaration@@String message @TO@ @Nullable String message @AT@ 6382 @LENGTH@ 14


UPD VariableDeclarationStatement@@final double cpuCost=HiveAlgorithmsUtil.computeSMBMapJoinCPUCost(cardinalities); @TO@ final double cpuCost=algoUtils.computeSMBMapJoinCPUCost(cardinalities); @AT@ 22856 @LENGTH@ 82
---UPD VariableDeclarationFragment@@cpuCost=HiveAlgorithmsUtil.computeSMBMapJoinCPUCost(cardinalities) @TO@ cpuCost=algoUtils.computeSMBMapJoinCPUCost(cardinalities) @AT@ 22869 @LENGTH@ 68
------UPD MethodInvocation@@HiveAlgorithmsUtil.computeSMBMapJoinCPUCost(cardinalities) @TO@ algoUtils.computeSMBMapJoinCPUCost(cardinalities) @AT@ 22879 @LENGTH@ 58
---------UPD SimpleName@@Name:HiveAlgorithmsUtil @TO@ Name:algoUtils @AT@ 22879 @LENGTH@ 18


UPD MethodDeclaration@@public, void, MethodName:setUp, Exception,  @TO@ public, void, MethodName:setUp,  @AT@ 1869 @LENGTH@ 583
---DEL SimpleType@@Exception @AT@ 1896 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertTrue(cause.getMessage().startsWith("Cannot moved existing file")) @TO@ MethodInvocation:assertTrue(cause.getMessage().startsWith("Cannot move existing file")) @AT@ 5707 @LENGTH@ 72
---UPD MethodInvocation@@assertTrue(cause.getMessage().startsWith("Cannot moved existing file")) @TO@ assertTrue(cause.getMessage().startsWith("Cannot move existing file")) @AT@ 5707 @LENGTH@ 71
------UPD SimpleName@@MethodName:assertTrue:[cause.getMessage().startsWith("Cannot moved existing file")] @TO@ MethodName:assertTrue:[cause.getMessage().startsWith("Cannot move existing file")] @AT@ 5707 @LENGTH@ 71
---------UPD MethodInvocation@@cause.getMessage().startsWith("Cannot moved existing file") @TO@ cause.getMessage().startsWith("Cannot move existing file") @AT@ 5718 @LENGTH@ 59
------------UPD SimpleName@@MethodName:startsWith:["Cannot moved existing file"] @TO@ MethodName:startsWith:["Cannot move existing file"] @AT@ 5737 @LENGTH@ 40
---------------UPD StringLiteral@@"Cannot moved existing file" @TO@ "Cannot move existing file" @AT@ 5748 @LENGTH@ 28


UPD ReturnStatement@@ConditionalExpression:(PROVIDER != null) ? new DistributableSingleSignOnManagerBuilder(name,securityDomainName,generator,PROVIDER) : new SimpleCapabilityServiceConfigurator<>(name,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId)) @TO@ ConditionalExpression:(PROVIDER != null) ? new DistributableSingleSignOnManagerServiceConfigurator(name,securityDomainName,generator,PROVIDER) : new SimpleCapabilityServiceConfigurator<>(name,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId)) @AT@ 2604 @LENGTH@ 256
---UPD ConditionalExpression@@(PROVIDER != null) ? new DistributableSingleSignOnManagerBuilder(name,securityDomainName,generator,PROVIDER) : new SimpleCapabilityServiceConfigurator<>(name,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId)) @TO@ (PROVIDER != null) ? new DistributableSingleSignOnManagerServiceConfigurator(name,securityDomainName,generator,PROVIDER) : new SimpleCapabilityServiceConfigurator<>(name,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId)) @AT@ 2611 @LENGTH@ 248
------UPD ClassInstanceCreation@@DistributableSingleSignOnManagerBuilder[name, securityDomainName, generator, PROVIDER] @TO@ DistributableSingleSignOnManagerServiceConfigurator[name, securityDomainName, generator, PROVIDER] @AT@ 2632 @LENGTH@ 90
---------UPD SimpleType@@DistributableSingleSignOnManagerBuilder @TO@ DistributableSingleSignOnManagerServiceConfigurator @AT@ 2636 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().formLogin().and().oauth2().client().authorizationCodeGrant() @TO@ MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().formLogin().and().oauth2().client() @AT@ 1721 @LENGTH@ 159
---UPD MethodInvocation@@http.authorizeRequests().anyRequest().authenticated().and().formLogin().and().oauth2().client().authorizationCodeGrant() @TO@ http.authorizeRequests().anyRequest().authenticated().and().formLogin().and().oauth2().client() @AT@ 1721 @LENGTH@ 158
------DEL MethodInvocation@@MethodName:client:[] @AT@ 1721 @LENGTH@ 127
------UPD SimpleName@@MethodName:authorizationCodeGrant:[] @TO@ MethodName:client:[] @AT@ 1855 @LENGTH@ 24


UPD MethodDeclaration@@public, voidMethodName:GroupServiceConfiguratorProvider, GroupCapabilityServiceBuilderFactory<Group> factory,  @TO@ public, voidMethodName:GroupServiceConfiguratorProvider, GroupCapabilityServiceConfiguratorFactory<Group> factory,  @AT@ 1628 @LENGTH@ 181
---UPD SingleVariableDeclaration@@GroupCapabilityServiceBuilderFactory<Group> factory @TO@ GroupCapabilityServiceConfiguratorFactory<Group> factory @AT@ 1668 @LENGTH@ 51
------UPD ParameterizedType@@GroupCapabilityServiceBuilderFactory<Group> @TO@ GroupCapabilityServiceConfiguratorFactory<Group> @AT@ 1668 @LENGTH@ 43
---------UPD SimpleType@@GroupCapabilityServiceBuilderFactory @TO@ GroupCapabilityServiceConfiguratorFactory @AT@ 1668 @LENGTH@ 36


UPD VariableDeclarationStatement@@Cache<?,?> cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2031 @LENGTH@ 172
---UPD VariableDeclarationFragment@@cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2043 @LENGTH@ 159
------UPD MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2051 @LENGTH@ 151
---------DEL SimpleName@@Name:ServiceContainerHelper @AT@ 2051 @LENGTH@ 22
---------INS ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2054 @LENGTH@ 157
------------INS New@@new @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2054 @LENGTH@ 3
------------INS ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2058 @LENGTH@ 35
---------------INS SimpleType@@PassiveServiceSupplier @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2058 @LENGTH@ 22
---------------INS ParameterizedType@@Cache<?,?> @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2081 @LENGTH@ 11
------------------INS SimpleType@@Cache @TO@ ParameterizedType@@Cache<?,?> @AT@ 2081 @LENGTH@ 5
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2087 @LENGTH@ 1
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2090 @LENGTH@ 1
------------INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2094 @LENGTH@ 32
---------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2084 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2092 @LENGTH@ 25
------------------UPD BooleanLiteral@@false @TO@ true @AT@ 2111 @LENGTH@ 5
------------MOV MethodInvocation@@InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2119 @LENGTH@ 82
---------DEL SimpleName@@MethodName:findValue:[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2074 @LENGTH@ 128
------------DEL MethodInvocation@@context.getServiceRegistry(false) @AT@ 2084 @LENGTH@ 33
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2212 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:aliases=new ArrayList<>() @TO@ Assignment:aliases=new ArrayList<>(1) @AT@ 7664 @LENGTH@ 28
---UPD Assignment@@aliases=new ArrayList<>() @TO@ aliases=new ArrayList<>(1) @AT@ 7664 @LENGTH@ 27
------UPD ClassInstanceCreation@@ArrayList<>[] @TO@ ArrayList<>[1] @AT@ 7674 @LENGTH@ 17
---------INS NumberLiteral@@1 @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 7690 @LENGTH@ 1


UPD LambdaExpression@@oauth2User -> {
  Collection<? extends GrantedAuthority> mappedAuthorities=this.authoritiesMapper.mapAuthorities(oauth2User.getAuthorities());
  OAuth2LoginAuthenticationToken authenticationResult=new OAuth2LoginAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),oauth2User,mappedAuthorities,accessToken);
  OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),authenticationResult.getName(),authenticationResult.getAccessToken());
  OAuth2AuthenticationToken result=new OAuth2AuthenticationToken(authenticationResult.getPrincipal(),authenticationResult.getAuthorities(),authenticationResult.getClientRegistration().getRegistrationId());
  return this.authorizedClientService.saveAuthorizedClient(authorizedClient,authenticationResult).thenReturn(result);
}
 @TO@ oauth2User -> {
  Collection<? extends GrantedAuthority> mappedAuthorities=this.authoritiesMapper.mapAuthorities(oauth2User.getAuthorities());
  OAuth2LoginAuthenticationToken authenticationResult=new OAuth2LoginAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),oauth2User,mappedAuthorities,accessToken,accessTokenResponse.getRefreshToken());
  OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),authenticationResult.getName(),authenticationResult.getAccessToken(),authenticationResult.getRefreshToken());
  OAuth2AuthenticationToken result=new OAuth2AuthenticationToken(authenticationResult.getPrincipal(),authenticationResult.getAuthorities(),authenticationResult.getClientRegistration().getRegistrationId());
  return this.authorizedClientService.saveAuthorizedClient(authorizedClient,authenticationResult).thenReturn(result);
}
 @AT@ 6320 @LENGTH@ 1033
---UPD VariableDeclarationStatement@@OAuth2LoginAuthenticationToken authenticationResult=new OAuth2LoginAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),oauth2User,mappedAuthorities,accessToken); @TO@ OAuth2LoginAuthenticationToken authenticationResult=new OAuth2LoginAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),oauth2User,mappedAuthorities,accessToken,accessTokenResponse.getRefreshToken()); @AT@ 6481 @LENGTH@ 286
------UPD VariableDeclarationFragment@@authenticationResult=new OAuth2LoginAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),oauth2User,mappedAuthorities,accessToken) @TO@ authenticationResult=new OAuth2LoginAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),oauth2User,mappedAuthorities,accessToken,accessTokenResponse.getRefreshToken()) @AT@ 6512 @LENGTH@ 254
---------UPD ClassInstanceCreation@@OAuth2LoginAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), oauth2User, mappedAuthorities, accessToken] @TO@ OAuth2LoginAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), oauth2User, mappedAuthorities, accessToken, accessTokenResponse.getRefreshToken()] @AT@ 6535 @LENGTH@ 231
------------INS MethodInvocation@@accessTokenResponse.getRefreshToken() @TO@ ClassInstanceCreation@@OAuth2LoginAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), oauth2User, mappedAuthorities, accessToken] @AT@ 6774 @LENGTH@ 37
---------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 6774 @LENGTH@ 19
---------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 6794 @LENGTH@ 17
---UPD VariableDeclarationStatement@@OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),authenticationResult.getName(),authenticationResult.getAccessToken()); @TO@ OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),authenticationResult.getName(),authenticationResult.getAccessToken(),authenticationResult.getRefreshToken()); @AT@ 6773 @LENGTH@ 208
------UPD VariableDeclarationFragment@@authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),authenticationResult.getName(),authenticationResult.getAccessToken()) @TO@ authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),authenticationResult.getName(),authenticationResult.getAccessToken(),authenticationResult.getRefreshToken()) @AT@ 6796 @LENGTH@ 184
---------UPD ClassInstanceCreation@@OAuth2AuthorizedClient[authenticationResult.getClientRegistration(), authenticationResult.getName(), authenticationResult.getAccessToken()] @TO@ OAuth2AuthorizedClient[authenticationResult.getClientRegistration(), authenticationResult.getName(), authenticationResult.getAccessToken(), authenticationResult.getRefreshToken()] @AT@ 6815 @LENGTH@ 165
------------INS MethodInvocation@@authenticationResult.getRefreshToken() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authenticationResult.getClientRegistration(), authenticationResult.getName(), authenticationResult.getAccessToken()] @AT@ 7034 @LENGTH@ 38
---------------INS SimpleName@@Name:authenticationResult @TO@ MethodInvocation@@authenticationResult.getRefreshToken() @AT@ 7034 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@authenticationResult.getRefreshToken() @AT@ 7055 @LENGTH@ 17


UPD TryStatement@@try {  Message message=exchange.getIn();  DockerClient client=DockerClientFactory.getDockerClient(component,configuration,message);  DockerOperation operation=configuration.getOperation();  Object result=null;switch (operation) {case BUILD_IMAGE:    result=executeBuildImageRequest(client,message).exec(new BuildImageResultCallback(){      @Override public void onNext(      BuildResponseItem item){        log.trace("build image callback {}",item);        super.onNext(item);      }    });  if (result != null) {    String imageId=((BuildImageResultCallback)result).awaitImageId();    ((BuildImageResultCallback)result).close();    result=imageId;  }break;case PULL_IMAGE:result=executePullImageRequest(client,message).exec(new PullImageResultCallback(){@Override public void onNext(PullResponseItem item){  log.trace("pull image callback {}",item);  super.onNext(item);}});if (result != null) {result=((PullImageResultCallback)result).awaitCompletion();((PullImageResultCallback)result).close();}break;case PUSH_IMAGE:result=executePushImageRequest(client,message).exec(new PushImageResultCallback(){@Override public void onNext(PushResponseItem item){log.trace("push image callback {}",item);super.onNext(item);}});if (result != null) {result=((PushImageResultCallback)result).awaitCompletion();((PushImageResultCallback)result).close();}break;case ATTACH_CONTAINER:result=executeAttachContainerRequest(client,message).exec(new AttachContainerResultCallback(){@Override public void onNext(Frame item){log.trace("attach container callback {}",item);super.onNext(item);}});if (result != null) {result=((AttachContainerResultCallback)result).awaitCompletion();((AttachContainerResultCallback)result).close();}break;case LOG_CONTAINER:result=executeLogContainerRequest(client,message).exec(new LogContainerResultCallback(){@Override public void onNext(Frame item){log.trace("log container callback {}",item);super.onNext(item);}});if (result != null) {result=((LogContainerResultCallback)result).awaitCompletion();((LogContainerResultCallback)result).close();}break;case WAIT_CONTAINER:result=executeWaitContainerRequest(client,message).exec(new WaitContainerResultCallback(){@Override public void onNext(WaitResponse item){log.trace("wait contanier callback {}",item);super.onNext(item);}});if (result != null) {Integer statusCode=((WaitContainerResultCallback)result).awaitStatusCode();((WaitContainerResultCallback)result).close();result=statusCode;}break;case EXEC_START:result=executeExecStartRequest(client,message).exec(new ExecStartResultCallback(){@Override public void onNext(Frame item){log.trace("exec start callback {}",item);super.onNext(item);}});if (result != null) {result=((ExecStartResultCallback)result).awaitCompletion();((ExecStartResultCallback)result).close();}break;default :throw new DockerException("Invalid operation: " + operation);}if (result != null) {exchange.getIn().setBody(result);return true;}} catch (DockerException|InterruptedException|IOException e) {log.error(e.getMessage(),e);return false;} @TO@ try {  Message message=exchange.getIn();  DockerClient client=DockerClientFactory.getDockerClient(component,configuration,message);  DockerOperation operation=configuration.getOperation();  Object result=null;switch (operation) {case BUILD_IMAGE:    result=executeBuildImageRequest(client,message).exec(new BuildImageResultCallback(){      @Override public void onNext(      BuildResponseItem item){        log.trace("build image callback {}",item);        super.onNext(item);      }    });  if (result != null) {    String imageId=((BuildImageResultCallback)result).awaitImageId();    ((BuildImageResultCallback)result).close();    result=imageId;  }break;case PULL_IMAGE:result=executePullImageRequest(client,message).exec(new PullImageResultCallback(){@Override public void onNext(PullResponseItem item){  log.trace("pull image callback {}",item);  super.onNext(item);}});if (result != null) {result=((PullImageResultCallback)result).awaitCompletion();((PullImageResultCallback)result).close();}break;case PUSH_IMAGE:result=executePushImageRequest(client,message).exec(new PushImageResultCallback(){@Override public void onNext(PushResponseItem item){log.trace("push image callback {}",item);super.onNext(item);}});if (result != null) {result=((PushImageResultCallback)result).awaitCompletion();((PushImageResultCallback)result).close();}break;case ATTACH_CONTAINER:result=executeAttachContainerRequest(client,message).exec(new AttachContainerResultCallback(){@Override public void onNext(Frame item){log.trace("attach container callback {}",item);super.onNext(item);}});if (result != null) {result=((AttachContainerResultCallback)result).awaitCompletion();((AttachContainerResultCallback)result).close();}break;case LOG_CONTAINER:result=executeLogContainerRequest(client,message).exec(new LogContainerResultCallback(){@Override public void onNext(Frame item){log.trace("log container callback {}",item);super.onNext(item);}});if (result != null) {result=((LogContainerResultCallback)result).awaitCompletion();((LogContainerResultCallback)result).close();}break;case WAIT_CONTAINER:result=executeWaitContainerRequest(client,message).exec(new WaitContainerResultCallback(){@Override public void onNext(WaitResponse item){log.trace("wait contanier callback {}",item);super.onNext(item);}});if (result != null) {Integer statusCode=((WaitContainerResultCallback)result).awaitStatusCode();((WaitContainerResultCallback)result).close();result=statusCode;}break;case EXEC_START:result=executeExecStartRequest(client,message).exec(new ExecStartResultCallback(){@Override public void onNext(Frame item){log.trace("exec start callback {}",item);super.onNext(item);}});if (result != null) {result=((ExecStartResultCallback)result).awaitCompletion();((ExecStartResultCallback)result).close();}break;default :throw new DockerException("Invalid operation: " + operation);}if (result != null) {exchange.getIn().setBody(result);}} catch (DockerException|InterruptedException|IOException e) {log.error(e.getMessage(),e);} @AT@ 3510 @LENGTH@ 5532
---UPD IfStatement@@if (result != null) {  exchange.getIn().setBody(result);  return true;} @TO@ if (result != null) {  exchange.getIn().setBody(result);} @AT@ 8773 @LENGTH@ 115
------UPD Block@@ThenBody:{  exchange.getIn().setBody(result);  return true;} @TO@ ThenBody:{  exchange.getIn().setBody(result);} @AT@ 8793 @LENGTH@ 95
---------DEL ReturnStatement@@BooleanLiteral:true @AT@ 8862 @LENGTH@ 12
------------DEL BooleanLiteral@@true @AT@ 8869 @LENGTH@ 4
---UPD CatchClause@@catch (DockerException|InterruptedException|IOException e) {  log.error(e.getMessage(),e);  return false;} @TO@ catch (DockerException|InterruptedException|IOException e) {  log.error(e.getMessage(),e);} @AT@ 8899 @LENGTH@ 143
------DEL ReturnStatement@@BooleanLiteral:false @AT@ 9019 @LENGTH@ 13
---------DEL BooleanLiteral@@false @AT@ 9026 @LENGTH@ 5


UPD FieldDeclaration@@private, final, JwtConverter, [jwtConverter=new JwtConverter()] @TO@ private, final, JwtAuthenticationConverter, [jwtAuthenticationConverter=new JwtAuthenticationConverter()] @AT@ 1672 @LENGTH@ 61
---UPD SimpleType@@JwtConverter @TO@ JwtAuthenticationConverter @AT@ 1686 @LENGTH@ 12
---UPD VariableDeclarationFragment@@jwtConverter=new JwtConverter() @TO@ jwtAuthenticationConverter=new JwtAuthenticationConverter() @AT@ 1699 @LENGTH@ 33
------UPD SimpleName@@jwtConverter @TO@ jwtAuthenticationConverter @AT@ 1699 @LENGTH@ 12
------UPD ClassInstanceCreation@@JwtConverter[] @TO@ JwtAuthenticationConverter[] @AT@ 1714 @LENGTH@ 18
---------UPD SimpleType@@JwtConverter @TO@ JwtAuthenticationConverter @AT@ 1718 @LENGTH@ 12


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(LockingBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(LockingServiceConfigurator::new); @AT@ 5586 @LENGTH@ 87
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(LockingBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(LockingServiceConfigurator::new) @AT@ 5609 @LENGTH@ 63
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[LockingBuilder::new] @TO@ SimpleResourceServiceHandler[LockingServiceConfigurator::new] @AT@ 5619 @LENGTH@ 53


UPD MethodDeclaration@@voidMethodName:ProtocolResourceDefinition, PathElement path, UnaryOperator<ResourceDescriptor> configurator, ResourceServiceBuilderFactory<ProtocolConfiguration<P>> builderFactory, ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory,  @TO@ voidMethodName:ProtocolResourceDefinition, PathElement path, UnaryOperator<ResourceDescriptor> configurator, ResourceServiceConfiguratorFactory serviceConfiguratorFactory, ResourceServiceConfiguratorFactory parentServiceConfiguratorFactory,  @AT@ 10968 @LENGTH@ 545
---UPD SingleVariableDeclaration@@ResourceServiceBuilderFactory<ProtocolConfiguration<P>> builderFactory @TO@ ResourceServiceConfiguratorFactory serviceConfiguratorFactory @AT@ 11061 @LENGTH@ 70
------INS SimpleType@@ResourceServiceConfiguratorFactory @TO@ SingleVariableDeclaration@@ResourceServiceBuilderFactory<ProtocolConfiguration<P>> builderFactory @AT@ 10859 @LENGTH@ 34
------DEL ParameterizedType@@ResourceServiceBuilderFactory<ProtocolConfiguration<P>> @AT@ 11061 @LENGTH@ 55
---------DEL SimpleType@@ResourceServiceBuilderFactory @AT@ 11061 @LENGTH@ 29
---------DEL ParameterizedType@@ProtocolConfiguration<P> @AT@ 11091 @LENGTH@ 24
------------DEL SimpleType@@ProtocolConfiguration @AT@ 11091 @LENGTH@ 21
------------DEL SimpleType@@P @AT@ 11113 @LENGTH@ 1
------UPD SimpleName@@builderFactory @TO@ serviceConfiguratorFactory @AT@ 11117 @LENGTH@ 14
---UPD SingleVariableDeclaration@@ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory @TO@ ResourceServiceConfiguratorFactory parentServiceConfiguratorFactory @AT@ 11133 @LENGTH@ 66
------INS SimpleType@@ResourceServiceConfiguratorFactory @TO@ SingleVariableDeclaration@@ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory @AT@ 10922 @LENGTH@ 34
------DEL ParameterizedType@@ResourceServiceBuilderFactory<ChannelFactory> @AT@ 11133 @LENGTH@ 45
---------DEL SimpleType@@ResourceServiceBuilderFactory @AT@ 11133 @LENGTH@ 29
---------DEL SimpleType@@ChannelFactory @AT@ 11163 @LENGTH@ 14
------UPD SimpleName@@parentBuilderFactory @TO@ parentServiceConfiguratorFactory @AT@ 11179 @LENGTH@ 20
---UPD SuperConstructorInvocation@@super(new Parameters(path,path.isWildcard() ? JGroupsExtension.SUBSYSTEM_RESOLVER.createChildResolver(path) : JGroupsExtension.SUBSYSTEM_RESOLVER.createChildResolver(path,WILDCARD_PATH)).setOrderedChild(),new ResourceDescriptorConfigurator(configurator),builderFactory,parentBuilderFactory);
 @TO@ super(new Parameters(path,path.isWildcard() ? JGroupsExtension.SUBSYSTEM_RESOLVER.createChildResolver(path) : JGroupsExtension.SUBSYSTEM_RESOLVER.createChildResolver(path,WILDCARD_PATH)).setOrderedChild(),new ResourceDescriptorConfigurator(configurator),serviceConfiguratorFactory,parentServiceConfiguratorFactory);
 @AT@ 11211 @LENGTH@ 296
------UPD SimpleName@@builderFactory @TO@ serviceConfiguratorFactory @AT@ 11469 @LENGTH@ 14
------UPD SimpleName@@parentBuilderFactory @TO@ parentServiceConfiguratorFactory @AT@ 11485 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:testRouteDoesNotHangOnOptionError, Exception,  @TO@ TypeDeclaration@@[public]LRAOptionsIT, AbstractLRATestSupport @AT@ 2436 @LENGTH@ 135
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRouteDoesNotHangOnOptionError, Exception,  @AT@ 2436 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRouteDoesNotHangOnOptionError, Exception,  @AT@ 2443 @LENGTH@ 4
---INS SimpleName@@MethodName:testRouteDoesNotHangOnOptionError @TO@ MethodDeclaration@@public, void, MethodName:testRouteDoesNotHangOnOptionError, Exception,  @AT@ 2448 @LENGTH@ 33
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRouteDoesNotHangOnOptionError, Exception,  @AT@ 2491 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:template.sendBody("direct:wrong-expression","Hello") @TO@ MethodDeclaration@@public, void, MethodName:testRouteDoesNotHangOnOptionError, Exception,  @AT@ 2511 @LENGTH@ 54
------INS MethodInvocation@@template.sendBody("direct:wrong-expression","Hello") @TO@ ExpressionStatement@@MethodInvocation:template.sendBody("direct:wrong-expression","Hello") @AT@ 2511 @LENGTH@ 53
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:wrong-expression","Hello") @AT@ 2511 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBody:["direct:wrong-expression", "Hello"] @TO@ MethodInvocation@@template.sendBody("direct:wrong-expression","Hello") @AT@ 2520 @LENGTH@ 44
------------INS StringLiteral@@"direct:wrong-expression" @TO@ SimpleName@@MethodName:sendBody:["direct:wrong-expression", "Hello"] @AT@ 2529 @LENGTH@ 25
------------INS StringLiteral@@"Hello" @TO@ SimpleName@@MethodName:sendBody:["direct:wrong-expression", "Hello"] @AT@ 2556 @LENGTH@ 7


UPD MethodDeclaration@@List<S>, S extends T, MethodName:saveAll, Iterable<S> entites,  @TO@ List<S>, S extends T, MethodName:saveAll, Iterable<S> entities,  @AT@ 1475 @LENGTH@ 29
---UPD SingleVariableDeclaration@@Iterable<S> entites @TO@ Iterable<S> entities @AT@ 1483 @LENGTH@ 19
------UPD SimpleName@@entites @TO@ entities @AT@ 1495 @LENGTH@ 7


UPD MethodDeclaration@@protected, voidMethodName:CacheGroupServiceConfiguratorProvider, CacheCapabilityServiceBuilderFactory<Group> factory,  @TO@ protected, voidMethodName:CacheGroupServiceConfiguratorProvider, CacheCapabilityServiceConfiguratorFactory<Group> factory,  @AT@ 1549 @LENGTH@ 166
---UPD SingleVariableDeclaration@@CacheCapabilityServiceBuilderFactory<Group> factory @TO@ CacheCapabilityServiceConfiguratorFactory<Group> factory @AT@ 1597 @LENGTH@ 51
------UPD ParameterizedType@@CacheCapabilityServiceBuilderFactory<Group> @TO@ CacheCapabilityServiceConfiguratorFactory<Group> @AT@ 1597 @LENGTH@ 43
---------UPD SimpleType@@CacheCapabilityServiceBuilderFactory @TO@ CacheCapabilityServiceConfiguratorFactory @AT@ 1597 @LENGTH@ 36


UPD MethodDeclaration@@public, static, String, MethodName:getBoundaryParameterValue, Header[] headers, String headerName,  @TO@ public, static, String, MethodName:getParameterValue, Header[] headers, String headerName, String parameterName,  @AT@ 5084 @LENGTH@ 705
---UPD SimpleName@@MethodName:getBoundaryParameterValue @TO@ MethodName:getParameterValue @AT@ 5105 @LENGTH@ 25
---INS SingleVariableDeclaration@@String parameterName @TO@ MethodDeclaration@@public, static, String, MethodName:getBoundaryParameterValue, Header[] headers, String headerName,  @AT@ 5160 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String parameterName @AT@ 5160 @LENGTH@ 6
------INS SimpleName@@parameterName @TO@ SingleVariableDeclaration@@String parameterName @AT@ 5167 @LENGTH@ 13
---UPD EnhancedForStatement@@for (Header header : headers) {  if (header.getName().equalsIgnoreCase(headerName)) {    for (    HeaderElement headerElement : header.getElements()) {      for (      NameValuePair nameValuePair : headerElement.getParameters()) {        if (nameValuePair.getName().equalsIgnoreCase("boundary")) {          return nameValuePair.getValue();        }      }    }  }} @TO@ for (Header header : headers) {  if (header.getName().equalsIgnoreCase(headerName)) {    for (    HeaderElement headerElement : header.getElements()) {      for (      NameValuePair nameValuePair : headerElement.getParameters()) {        if (nameValuePair.getName().equalsIgnoreCase(parameterName)) {          return nameValuePair.getValue();        }      }    }  }} @AT@ 5268 @LENGTH@ 494
------UPD IfStatement@@if (header.getName().equalsIgnoreCase(headerName)) {  for (  HeaderElement headerElement : header.getElements()) {    for (    NameValuePair nameValuePair : headerElement.getParameters()) {      if (nameValuePair.getName().equalsIgnoreCase("boundary")) {        return nameValuePair.getValue();      }    }  }} @TO@ if (header.getName().equalsIgnoreCase(headerName)) {  for (  HeaderElement headerElement : header.getElements()) {    for (    NameValuePair nameValuePair : headerElement.getParameters()) {      if (nameValuePair.getName().equalsIgnoreCase(parameterName)) {        return nameValuePair.getValue();      }    }  }} @AT@ 5312 @LENGTH@ 440
---------UPD Block@@ThenBody:{  for (  HeaderElement headerElement : header.getElements()) {    for (    NameValuePair nameValuePair : headerElement.getParameters()) {      if (nameValuePair.getName().equalsIgnoreCase("boundary")) {        return nameValuePair.getValue();      }    }  }} @TO@ ThenBody:{  for (  HeaderElement headerElement : header.getElements()) {    for (    NameValuePair nameValuePair : headerElement.getParameters()) {      if (nameValuePair.getName().equalsIgnoreCase(parameterName)) {        return nameValuePair.getValue();      }    }  }} @AT@ 5363 @LENGTH@ 389
------------UPD EnhancedForStatement@@for (HeaderElement headerElement : header.getElements()) {  for (  NameValuePair nameValuePair : headerElement.getParameters()) {    if (nameValuePair.getName().equalsIgnoreCase("boundary")) {      return nameValuePair.getValue();    }  }} @TO@ for (HeaderElement headerElement : header.getElements()) {  for (  NameValuePair nameValuePair : headerElement.getParameters()) {    if (nameValuePair.getName().equalsIgnoreCase(parameterName)) {      return nameValuePair.getValue();    }  }} @AT@ 5381 @LENGTH@ 357
---------------UPD EnhancedForStatement@@for (NameValuePair nameValuePair : headerElement.getParameters()) {  if (nameValuePair.getName().equalsIgnoreCase("boundary")) {    return nameValuePair.getValue();  }} @TO@ for (NameValuePair nameValuePair : headerElement.getParameters()) {  if (nameValuePair.getName().equalsIgnoreCase(parameterName)) {    return nameValuePair.getValue();  }} @AT@ 5460 @LENGTH@ 260
------------------UPD IfStatement@@if (nameValuePair.getName().equalsIgnoreCase("boundary")) {  return nameValuePair.getValue();} @TO@ if (nameValuePair.getName().equalsIgnoreCase(parameterName)) {  return nameValuePair.getValue();} @AT@ 5552 @LENGTH@ 146
---------------------UPD MethodInvocation@@nameValuePair.getName().equalsIgnoreCase("boundary") @TO@ nameValuePair.getName().equalsIgnoreCase(parameterName) @AT@ 5556 @LENGTH@ 52
------------------------UPD SimpleName@@MethodName:equalsIgnoreCase:["boundary"] @TO@ MethodName:equalsIgnoreCase:[parameterName] @AT@ 5580 @LENGTH@ 28
---------------------------DEL StringLiteral@@"boundary" @AT@ 5597 @LENGTH@ 10
---------------------------INS SimpleName@@parameterName @TO@ SimpleName@@MethodName:equalsIgnoreCase:["boundary"] @AT@ 5611 @LENGTH@ 13


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelSalesforceTest.class)).basePath("../../components/camel-salesforce/camel-salesforce-component").unitTestExclusionPattern(".*(\\.integration\\..*|IntegrationTest.*|MSPTest$)").autostart(false).dependency("org.codehaus.groovy:groovy-all:" + DependencyResolver.resolveParentProperty("${groovy-version}")).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelSalesforceTest.class)).basePath("../../components/camel-salesforce/camel-salesforce-component").unitTestExclusionPattern(".*(\\.integration\\..*|IntegrationTest.*|MSPTest$)").autostart(false).dependency("org.codehaus.groovy:groovy:" + DependencyResolver.resolveParentProperty("${groovy-version}")).build() @AT@ 1514 @LENGTH@ 495
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelSalesforceTest.class)).basePath("../../components/camel-salesforce/camel-salesforce-component").unitTestExclusionPattern(".*(\\.integration\\..*|IntegrationTest.*|MSPTest$)").autostart(false).dependency("org.codehaus.groovy:groovy-all:" + DependencyResolver.resolveParentProperty("${groovy-version}")).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelSalesforceTest.class)).basePath("../../components/camel-salesforce/camel-salesforce-component").unitTestExclusionPattern(".*(\\.integration\\..*|IntegrationTest.*|MSPTest$)").autostart(false).dependency("org.codehaus.groovy:groovy:" + DependencyResolver.resolveParentProperty("${groovy-version}")).build() @AT@ 1521 @LENGTH@ 487
------UPD MethodInvocation@@MethodName:dependency:["org.codehaus.groovy:groovy-all:" + DependencyResolver.resolveParentProperty("${groovy-version}")] @TO@ MethodName:dependency:["org.codehaus.groovy:groovy:" + DependencyResolver.resolveParentProperty("${groovy-version}")] @AT@ 1521 @LENGTH@ 462
---------UPD InfixExpression@@"org.codehaus.groovy:groovy-all:" + DependencyResolver.resolveParentProperty("${groovy-version}") @TO@ "org.codehaus.groovy:groovy:" + DependencyResolver.resolveParentProperty("${groovy-version}") @AT@ 1885 @LENGTH@ 97
------------UPD StringLiteral@@"org.codehaus.groovy:groovy-all:" @TO@ "org.codehaus.groovy:groovy:" @AT@ 1885 @LENGTH@ 33


UPD MethodDeclaration@@private, byte[], MethodName:marshall, MarshalledEntry entry,  @TO@ private, byte[], MethodName:marshall, MarshalledEntry<?,?> entry,  @AT@ 8292 @LENGTH@ 153
---UPD SingleVariableDeclaration@@MarshalledEntry entry @TO@ MarshalledEntry<?,?> entry @AT@ 8316 @LENGTH@ 21
------DEL SimpleType@@MarshalledEntry @AT@ 8316 @LENGTH@ 15
------INS ParameterizedType@@MarshalledEntry<?,?> @TO@ SingleVariableDeclaration@@MarshalledEntry entry @AT@ 8342 @LENGTH@ 21
---------INS SimpleType@@MarshalledEntry @TO@ ParameterizedType@@MarshalledEntry<?,?> @AT@ 8342 @LENGTH@ 15
---------INS WildcardType@@? @TO@ ParameterizedType@@MarshalledEntry<?,?> @AT@ 8358 @LENGTH@ 1
---------INS WildcardType@@? @TO@ ParameterizedType@@MarshalledEntry<?,?> @AT@ 8361 @LENGTH@ 1


INS FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @TO@ TypeDeclaration@@[public]StringLTrim, StringUnaryUDFDirect @AT@ 1042 @LENGTH@ 54
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1042 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1050 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1057 @LENGTH@ 5
---INS ArrayType@@byte[] @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1063 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1063 @LENGTH@ 4
---INS VariableDeclarationFragment@@EMPTY_BYTES=new byte[0] @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1070 @LENGTH@ 25
------INS SimpleName@@EMPTY_BYTES @TO@ VariableDeclarationFragment@@EMPTY_BYTES=new byte[0] @AT@ 1070 @LENGTH@ 11
------INS ArrayCreation@@new byte[0] @TO@ VariableDeclarationFragment@@EMPTY_BYTES=new byte[0] @AT@ 1084 @LENGTH@ 11
---------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[0] @AT@ 1088 @LENGTH@ 7
------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1088 @LENGTH@ 4
---------INS NumberLiteral@@0 @TO@ ArrayCreation@@new byte[0] @AT@ 1093 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:exchange.getSession().map(WebSession::getAttributes).handle((sessionAttrs,sink) -> {
  Map<String,OAuth2AuthorizationRequest> stateToAuthzRequest=sessionAttrsMapStateToAuthorizationRequest(sessionAttrs);
  if (stateToAuthzRequest == null) {
    sink.complete();
    return;
  }
  OAuth2AuthorizationRequest removedValue=stateToAuthzRequest.remove(state);
  if (stateToAuthzRequest.isEmpty()) {
    sessionAttrs.remove(this.sessionAttributeName);
  }
  sink.next(removedValue);
}
) @TO@ MethodInvocation:exchange.getSession().map(WebSession::getAttributes).handle((sessionAttrs,sink) -> {
  Map<String,OAuth2AuthorizationRequest> stateToAuthzRequest=sessionAttrsMapStateToAuthorizationRequest(sessionAttrs);
  if (stateToAuthzRequest == null) {
    sink.complete();
    return;
  }
  OAuth2AuthorizationRequest removedValue=stateToAuthzRequest.remove(state);
  if (stateToAuthzRequest.isEmpty()) {
    sessionAttrs.remove(this.sessionAttributeName);
  }
  if (removedValue == null) {
    sink.complete();
  }
 else {
    sink.next(removedValue);
  }
}
) @AT@ 2908 @LENGTH@ 521
---UPD MethodInvocation@@exchange.getSession().map(WebSession::getAttributes).handle((sessionAttrs,sink) -> {
  Map<String,OAuth2AuthorizationRequest> stateToAuthzRequest=sessionAttrsMapStateToAuthorizationRequest(sessionAttrs);
  if (stateToAuthzRequest == null) {
    sink.complete();
    return;
  }
  OAuth2AuthorizationRequest removedValue=stateToAuthzRequest.remove(state);
  if (stateToAuthzRequest.isEmpty()) {
    sessionAttrs.remove(this.sessionAttributeName);
  }
  sink.next(removedValue);
}
) @TO@ exchange.getSession().map(WebSession::getAttributes).handle((sessionAttrs,sink) -> {
  Map<String,OAuth2AuthorizationRequest> stateToAuthzRequest=sessionAttrsMapStateToAuthorizationRequest(sessionAttrs);
  if (stateToAuthzRequest == null) {
    sink.complete();
    return;
  }
  OAuth2AuthorizationRequest removedValue=stateToAuthzRequest.remove(state);
  if (stateToAuthzRequest.isEmpty()) {
    sessionAttrs.remove(this.sessionAttributeName);
  }
  if (removedValue == null) {
    sink.complete();
  }
 else {
    sink.next(removedValue);
  }
}
) @AT@ 2915 @LENGTH@ 513
------UPD SimpleName@@MethodName:handle:[(sessionAttrs,sink) -> {
  Map<String,OAuth2AuthorizationRequest> stateToAuthzRequest=sessionAttrsMapStateToAuthorizationRequest(sessionAttrs);
  if (stateToAuthzRequest == null) {
    sink.complete();
    return;
  }
  OAuth2AuthorizationRequest removedValue=stateToAuthzRequest.remove(state);
  if (stateToAuthzRequest.isEmpty()) {
    sessionAttrs.remove(this.sessionAttributeName);
  }
  sink.next(removedValue);
}
] @TO@ MethodName:handle:[(sessionAttrs,sink) -> {
  Map<String,OAuth2AuthorizationRequest> stateToAuthzRequest=sessionAttrsMapStateToAuthorizationRequest(sessionAttrs);
  if (stateToAuthzRequest == null) {
    sink.complete();
    return;
  }
  OAuth2AuthorizationRequest removedValue=stateToAuthzRequest.remove(state);
  if (stateToAuthzRequest.isEmpty()) {
    sessionAttrs.remove(this.sessionAttributeName);
  }
  if (removedValue == null) {
    sink.complete();
  }
 else {
    sink.next(removedValue);
  }
}
] @AT@ 2976 @LENGTH@ 452
---------UPD LambdaExpression@@(sessionAttrs,sink) -> {
  Map<String,OAuth2AuthorizationRequest> stateToAuthzRequest=sessionAttrsMapStateToAuthorizationRequest(sessionAttrs);
  if (stateToAuthzRequest == null) {
    sink.complete();
    return;
  }
  OAuth2AuthorizationRequest removedValue=stateToAuthzRequest.remove(state);
  if (stateToAuthzRequest.isEmpty()) {
    sessionAttrs.remove(this.sessionAttributeName);
  }
  sink.next(removedValue);
}
 @TO@ (sessionAttrs,sink) -> {
  Map<String,OAuth2AuthorizationRequest> stateToAuthzRequest=sessionAttrsMapStateToAuthorizationRequest(sessionAttrs);
  if (stateToAuthzRequest == null) {
    sink.complete();
    return;
  }
  OAuth2AuthorizationRequest removedValue=stateToAuthzRequest.remove(state);
  if (stateToAuthzRequest.isEmpty()) {
    sessionAttrs.remove(this.sessionAttributeName);
  }
  if (removedValue == null) {
    sink.complete();
  }
 else {
    sink.next(removedValue);
  }
}
 @AT@ 2983 @LENGTH@ 444
------------INS IfStatement@@if (removedValue == null) {  sink.complete();} else {  sink.next(removedValue);} @TO@ LambdaExpression@@(sessionAttrs,sink) -> {
  Map<String,OAuth2AuthorizationRequest> stateToAuthzRequest=sessionAttrsMapStateToAuthorizationRequest(sessionAttrs);
  if (stateToAuthzRequest == null) {
    sink.complete();
    return;
  }
  OAuth2AuthorizationRequest removedValue=stateToAuthzRequest.remove(state);
  if (stateToAuthzRequest.isEmpty()) {
    sessionAttrs.remove(this.sessionAttributeName);
  }
  sink.next(removedValue);
}
 @AT@ 3398 @LENGTH@ 98
---------------INS InfixExpression@@removedValue == null @TO@ IfStatement@@if (removedValue == null) {  sink.complete();} else {  sink.next(removedValue);} @AT@ 3402 @LENGTH@ 20
------------------INS SimpleName@@removedValue @TO@ InfixExpression@@removedValue == null @AT@ 3402 @LENGTH@ 12
------------------INS Operator@@== @TO@ InfixExpression@@removedValue == null @AT@ 3414 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@removedValue == null @AT@ 3418 @LENGTH@ 4
---------------INS Block@@ThenBody:{  sink.complete();} @TO@ IfStatement@@if (removedValue == null) {  sink.complete();} else {  sink.next(removedValue);} @AT@ 3424 @LENGTH@ 29
------------------INS ExpressionStatement@@MethodInvocation:sink.complete() @TO@ Block@@ThenBody:{  sink.complete();} @AT@ 3431 @LENGTH@ 16
---------------------INS MethodInvocation@@sink.complete() @TO@ ExpressionStatement@@MethodInvocation:sink.complete() @AT@ 3431 @LENGTH@ 15
------------------------INS SimpleName@@Name:sink @TO@ MethodInvocation@@sink.complete() @AT@ 3431 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:complete:[] @TO@ MethodInvocation@@sink.complete() @AT@ 3436 @LENGTH@ 10
---------------INS Block@@ElseBody:{  sink.next(removedValue);} @TO@ IfStatement@@if (removedValue == null) {  sink.complete();} else {  sink.next(removedValue);} @AT@ 3459 @LENGTH@ 37
------------------MOV ExpressionStatement@@MethodInvocation:sink.next(removedValue) @TO@ Block@@ElseBody:{  sink.next(removedValue);} @AT@ 3398 @LENGTH@ 24


UPD ReturnStatement@@FieldAccess:this.adviceChain @TO@ ConditionalExpression:this.adviceChain == null ? null : Arrays.copyOf(this.adviceChain,this.adviceChain.length) @AT@ 18848 @LENGTH@ 24
---DEL FieldAccess@@this.adviceChain @AT@ 18855 @LENGTH@ 16
---INS ConditionalExpression@@this.adviceChain == null ? null : Arrays.copyOf(this.adviceChain,this.adviceChain.length) @TO@ ReturnStatement@@FieldAccess:this.adviceChain @AT@ 18866 @LENGTH@ 90
------INS InfixExpression@@this.adviceChain == null @TO@ ConditionalExpression@@this.adviceChain == null ? null : Arrays.copyOf(this.adviceChain,this.adviceChain.length) @AT@ 18866 @LENGTH@ 24
---------INS FieldAccess@@this.adviceChain @TO@ InfixExpression@@this.adviceChain == null @AT@ 18866 @LENGTH@ 16
------------MOV ThisExpression@@this @TO@ FieldAccess@@this.adviceChain @AT@ 18855 @LENGTH@ 4
------------MOV SimpleName@@adviceChain @TO@ FieldAccess@@this.adviceChain @AT@ 18860 @LENGTH@ 11
---------INS Operator@@== @TO@ InfixExpression@@this.adviceChain == null @AT@ 18882 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@this.adviceChain == null @AT@ 18886 @LENGTH@ 4
------INS NullLiteral@@null @TO@ ConditionalExpression@@this.adviceChain == null ? null : Arrays.copyOf(this.adviceChain,this.adviceChain.length) @AT@ 18893 @LENGTH@ 4
------INS MethodInvocation@@Arrays.copyOf(this.adviceChain,this.adviceChain.length) @TO@ ConditionalExpression@@this.adviceChain == null ? null : Arrays.copyOf(this.adviceChain,this.adviceChain.length) @AT@ 18900 @LENGTH@ 56
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.copyOf(this.adviceChain,this.adviceChain.length) @AT@ 18900 @LENGTH@ 6
---------INS SimpleName@@MethodName:copyOf:[this.adviceChain, this.adviceChain.length] @TO@ MethodInvocation@@Arrays.copyOf(this.adviceChain,this.adviceChain.length) @AT@ 18907 @LENGTH@ 49
------------INS FieldAccess@@this.adviceChain @TO@ SimpleName@@MethodName:copyOf:[this.adviceChain, this.adviceChain.length] @AT@ 18914 @LENGTH@ 16
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.adviceChain @AT@ 18914 @LENGTH@ 4
---------------INS SimpleName@@adviceChain @TO@ FieldAccess@@this.adviceChain @AT@ 18919 @LENGTH@ 11
------------INS FieldAccess@@this.adviceChain.length @TO@ SimpleName@@MethodName:copyOf:[this.adviceChain, this.adviceChain.length] @AT@ 18932 @LENGTH@ 23
---------------INS FieldAccess@@this.adviceChain @TO@ FieldAccess@@this.adviceChain.length @AT@ 18932 @LENGTH@ 16
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.adviceChain @AT@ 18932 @LENGTH@ 4
------------------INS SimpleName@@adviceChain @TO@ FieldAccess@@this.adviceChain @AT@ 18937 @LENGTH@ 11
---------------INS SimpleName@@length @TO@ FieldAccess@@this.adviceChain.length @AT@ 18949 @LENGTH@ 6


UPD MethodDeclaration@@public, OAuth2AccessTokenResponse, MethodName:getTokenResponse, OAuth2ClientCredentialsGrantRequest clientCredentialsGrantRequest, OAuth2AuthenticationException,  @TO@ public, OAuth2AccessTokenResponse, MethodName:getTokenResponse, OAuth2ClientCredentialsGrantRequest clientCredentialsGrantRequest,  @AT@ 3354 @LENGTH@ 1424
---DEL SimpleType@@OAuth2AuthenticationException @AT@ 3481 @LENGTH@ 29
---UPD TryStatement@@try {  response=this.restOperations.exchange(request,OAuth2AccessTokenResponse.class);} catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),ex);} @TO@ try {  response=this.restOperations.exchange(request,OAuth2AccessTokenResponse.class);} catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 3766 @LENGTH@ 415
------UPD CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),ex);} @TO@ catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 3862 @LENGTH@ 319
---------UPD ThrowStatement@@ClassInstanceCreation:new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),ex) @TO@ ClassInstanceCreation:new OAuth2AuthorizationException(oauth2Error,ex) @AT@ 4096 @LENGTH@ 81
------------UPD ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString(), ex] @TO@ OAuth2AuthorizationException[oauth2Error, ex] @AT@ 4102 @LENGTH@ 74
---------------UPD SimpleType@@OAuth2AuthenticationException @TO@ OAuth2AuthorizationException @AT@ 4106 @LENGTH@ 29
---------------DEL MethodInvocation@@oauth2Error.toString() @AT@ 4149 @LENGTH@ 22
------------------DEL SimpleName@@Name:oauth2Error @AT@ 4149 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:toString:[] @AT@ 4161 @LENGTH@ 10


UPD VariableDeclarationStatement@@HibernatePagingItemReader<Foo> reader=new HibernatePagingItemReaderBuilder<Foo>().name("fooReader").sessionFactory(this.sessionFactory).fetchSize(2).currentItemCount(2).maxItemCount(4).pageSize(5).queryName("allFoos").useSatelessSession(false).build(); @TO@ HibernatePagingItemReader<Foo> reader=new HibernatePagingItemReaderBuilder<Foo>().name("fooReader").sessionFactory(this.sessionFactory).fetchSize(2).currentItemCount(2).maxItemCount(4).pageSize(5).queryName("allFoos").useStatelessSession(false).build(); @AT@ 2644 @LENGTH@ 299
---UPD VariableDeclarationFragment@@reader=new HibernatePagingItemReaderBuilder<Foo>().name("fooReader").sessionFactory(this.sessionFactory).fetchSize(2).currentItemCount(2).maxItemCount(4).pageSize(5).queryName("allFoos").useSatelessSession(false).build() @TO@ reader=new HibernatePagingItemReaderBuilder<Foo>().name("fooReader").sessionFactory(this.sessionFactory).fetchSize(2).currentItemCount(2).maxItemCount(4).pageSize(5).queryName("allFoos").useStatelessSession(false).build() @AT@ 2675 @LENGTH@ 267
------UPD MethodInvocation@@new HibernatePagingItemReaderBuilder<Foo>().name("fooReader").sessionFactory(this.sessionFactory).fetchSize(2).currentItemCount(2).maxItemCount(4).pageSize(5).queryName("allFoos").useSatelessSession(false).build() @TO@ new HibernatePagingItemReaderBuilder<Foo>().name("fooReader").sessionFactory(this.sessionFactory).fetchSize(2).currentItemCount(2).maxItemCount(4).pageSize(5).queryName("allFoos").useStatelessSession(false).build() @AT@ 2684 @LENGTH@ 258
---------UPD MethodInvocation@@MethodName:useSatelessSession:[false] @TO@ MethodName:useStatelessSession:[false] @AT@ 2684 @LENGTH@ 245


UPD MethodDeclaration@@BeanManagerFactoryBuilderConfiguration, MethodName:getConfiguration,  @TO@ BeanManagerFactoryServiceConfiguratorConfiguration, MethodName:getConfiguration,  @AT@ 1604 @LENGTH@ 19
---UPD SimpleType@@BeanManagerFactoryBuilderConfiguration @TO@ BeanManagerFactoryServiceConfiguratorConfiguration @AT@ 1565 @LENGTH@ 38


UPD VariableDeclarationStatement@@String page="<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n" + csrfTokenHtmlInput + "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>"; @TO@ String page="<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n" + csrfTokenHtmlInput + "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>"; @AT@ 2873 @LENGTH@ 1189
---UPD VariableDeclarationFragment@@page="<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n" + csrfTokenHtmlInput + "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>" @TO@ page="<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n" + csrfTokenHtmlInput + "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>" @AT@ 2880 @LENGTH@ 1181
------UPD InfixExpression@@"<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n" + csrfTokenHtmlInput + "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>" @TO@ "<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n" + csrfTokenHtmlInput + "        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Log Out</button>\n"+ "      </form>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>" @AT@ 2888 @LENGTH@ 1173
---------UPD InfixExpression@@"<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n" @TO@ "<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "  <head>\n"+ "    <meta charset=\"utf-8\">\n"+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n"+ "    <meta name=\"description\" content=\"\">\n"+ "    <meta name=\"author\" content=\"\">\n"+ "    <title>Confirm Log Out?</title>\n"+ "    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\">\n"+ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n"+ "  </head>\n"+ "  <body>\n"+ "     <div class=\"container\">\n"+ "      <form class=\"form-signin\" method=\"post\" action=\"/logout\">\n"+ "        <h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n" @AT@ 2888 @LENGTH@ 971
------------UPD StringLiteral@@"    <link href=\"http://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n" @TO@ "    <link href=\"https://getbootstrap.com/docs/4.0/examples/signin/signin.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"/>\n" @AT@ 3484 @LENGTH@ 129


UPD ReturnStatement@@ClassInstanceCreation:new InfinispanRouteLocatorBuilder(serverName,deploymentName) @TO@ ClassInstanceCreation:new InfinispanRouteLocatorServiceConfigurator(serverName,deploymentName) @AT@ 2910 @LENGTH@ 69
---UPD ClassInstanceCreation@@InfinispanRouteLocatorBuilder[serverName, deploymentName] @TO@ InfinispanRouteLocatorServiceConfigurator[serverName, deploymentName] @AT@ 2917 @LENGTH@ 61
------UPD SimpleType@@InfinispanRouteLocatorBuilder @TO@ InfinispanRouteLocatorServiceConfigurator @AT@ 2921 @LENGTH@ 29


UPD MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ protected, void, MethodName:doStart,  @AT@ 18283 @LENGTH@ 2186
---DEL SimpleType@@Exception @AT@ 18315 @LENGTH@ 9
---UPD SynchronizedStatement@@synchronized (this.consumersMonitor) {  if (this.consumers != null) {    throw new IllegalStateException("A stopped container should not have consumers");  }  int newConsumers=initializeConsumers();  if (this.consumers == null) {    logger.info("Consumers were initialized and then cleared " + "(presumably the container was stopped concurrently)");    return;  }  if (newConsumers <= 0) {    if (logger.isInfoEnabled()) {      logger.info("Consumers are already running");    }    return;  }  Set<AsyncMessageProcessingConsumer> processors=new HashSet<AsyncMessageProcessingConsumer>();  for (  BlockingQueueConsumer consumer : this.consumers) {    AsyncMessageProcessingConsumer processor=new AsyncMessageProcessingConsumer(consumer);    processors.add(processor);    getTaskExecutor().execute(processor);    if (getApplicationEventPublisher() != null) {      getApplicationEventPublisher().publishEvent(new AsyncConsumerStartedEvent(this,consumer));    }  }  for (  AsyncMessageProcessingConsumer processor : processors) {    FatalListenerStartupException startupException=processor.getStartupException();    if (startupException != null) {      throw new AmqpIllegalStateException("Fatal exception on listener startup",startupException);    }  }} @TO@ synchronized (this.consumersMonitor) {  if (this.consumers != null) {    throw new IllegalStateException("A stopped container should not have consumers");  }  int newConsumers=initializeConsumers();  if (this.consumers == null) {    logger.info("Consumers were initialized and then cleared " + "(presumably the container was stopped concurrently)");    return;  }  if (newConsumers <= 0) {    if (logger.isInfoEnabled()) {      logger.info("Consumers are already running");    }    return;  }  Set<AsyncMessageProcessingConsumer> processors=new HashSet<AsyncMessageProcessingConsumer>();  for (  BlockingQueueConsumer consumer : this.consumers) {    AsyncMessageProcessingConsumer processor=new AsyncMessageProcessingConsumer(consumer);    processors.add(processor);    getTaskExecutor().execute(processor);    if (getApplicationEventPublisher() != null) {      getApplicationEventPublisher().publishEvent(new AsyncConsumerStartedEvent(this,consumer));    }  }  for (  AsyncMessageProcessingConsumer processor : processors) {    FatalListenerStartupException startupException=null;    try {      startupException=processor.getStartupException();    } catch (    TimeoutException e) {      throw RabbitExceptionTranslator.convertRabbitAccessException(e);    }catch (    InterruptedException e) {      Thread.currentThread().interrupt();      throw RabbitExceptionTranslator.convertRabbitAccessException(e);    }    if (startupException != null) {      throw new AmqpIllegalStateException("Fatal exception on listener startup",startupException);    }  }} @AT@ 19163 @LENGTH@ 1303
------UPD Block@@SyncBody:{  if (this.consumers != null) {    throw new IllegalStateException("A stopped container should not have consumers");  }  int newConsumers=initializeConsumers();  if (this.consumers == null) {    logger.info("Consumers were initialized and then cleared " + "(presumably the container was stopped concurrently)");    return;  }  if (newConsumers <= 0) {    if (logger.isInfoEnabled()) {      logger.info("Consumers are already running");    }    return;  }  Set<AsyncMessageProcessingConsumer> processors=new HashSet<AsyncMessageProcessingConsumer>();  for (  BlockingQueueConsumer consumer : this.consumers) {    AsyncMessageProcessingConsumer processor=new AsyncMessageProcessingConsumer(consumer);    processors.add(processor);    getTaskExecutor().execute(processor);    if (getApplicationEventPublisher() != null) {      getApplicationEventPublisher().publishEvent(new AsyncConsumerStartedEvent(this,consumer));    }  }  for (  AsyncMessageProcessingConsumer processor : processors) {    FatalListenerStartupException startupException=processor.getStartupException();    if (startupException != null) {      throw new AmqpIllegalStateException("Fatal exception on listener startup",startupException);    }  }} @TO@ SyncBody:{  if (this.consumers != null) {    throw new IllegalStateException("A stopped container should not have consumers");  }  int newConsumers=initializeConsumers();  if (this.consumers == null) {    logger.info("Consumers were initialized and then cleared " + "(presumably the container was stopped concurrently)");    return;  }  if (newConsumers <= 0) {    if (logger.isInfoEnabled()) {      logger.info("Consumers are already running");    }    return;  }  Set<AsyncMessageProcessingConsumer> processors=new HashSet<AsyncMessageProcessingConsumer>();  for (  BlockingQueueConsumer consumer : this.consumers) {    AsyncMessageProcessingConsumer processor=new AsyncMessageProcessingConsumer(consumer);    processors.add(processor);    getTaskExecutor().execute(processor);    if (getApplicationEventPublisher() != null) {      getApplicationEventPublisher().publishEvent(new AsyncConsumerStartedEvent(this,consumer));    }  }  for (  AsyncMessageProcessingConsumer processor : processors) {    FatalListenerStartupException startupException=null;    try {      startupException=processor.getStartupException();    } catch (    TimeoutException e) {      throw RabbitExceptionTranslator.convertRabbitAccessException(e);    }catch (    InterruptedException e) {      Thread.currentThread().interrupt();      throw RabbitExceptionTranslator.convertRabbitAccessException(e);    }    if (startupException != null) {      throw new AmqpIllegalStateException("Fatal exception on listener startup",startupException);    }  }} @AT@ 19200 @LENGTH@ 1266
---------UPD EnhancedForStatement@@for (AsyncMessageProcessingConsumer processor : processors) {  FatalListenerStartupException startupException=processor.getStartupException();  if (startupException != null) {    throw new AmqpIllegalStateException("Fatal exception on listener startup",startupException);  }} @TO@ for (AsyncMessageProcessingConsumer processor : processors) {  FatalListenerStartupException startupException=null;  try {    startupException=processor.getStartupException();  } catch (  TimeoutException e) {    throw RabbitExceptionTranslator.convertRabbitAccessException(e);  }catch (  InterruptedException e) {    Thread.currentThread().interrupt();    throw RabbitExceptionTranslator.convertRabbitAccessException(e);  }  if (startupException != null) {    throw new AmqpIllegalStateException("Fatal exception on listener startup",startupException);  }} @AT@ 20169 @LENGTH@ 293
------------DEL VariableDeclarationStatement@@FatalListenerStartupException startupException=processor.getStartupException(); @AT@ 20235 @LENGTH@ 81
---------------DEL VariableDeclarationFragment@@startupException=processor.getStartupException() @AT@ 20265 @LENGTH@ 50
------------------DEL MethodInvocation@@processor.getStartupException() @AT@ 20284 @LENGTH@ 31
------------INS VariableDeclarationStatement@@FatalListenerStartupException startupException=null; @TO@ EnhancedForStatement@@for (AsyncMessageProcessingConsumer processor : processors) {  FatalListenerStartupException startupException=processor.getStartupException();  if (startupException != null) {    throw new AmqpIllegalStateException("Fatal exception on listener startup",startupException);  }} @AT@ 20238 @LENGTH@ 54
---------------MOV SimpleType@@FatalListenerStartupException @TO@ VariableDeclarationStatement@@FatalListenerStartupException startupException=null; @AT@ 20235 @LENGTH@ 29
---------------INS VariableDeclarationFragment@@startupException=null @TO@ VariableDeclarationStatement@@FatalListenerStartupException startupException=null; @AT@ 20268 @LENGTH@ 23
------------------MOV SimpleName@@startupException @TO@ VariableDeclarationFragment@@startupException=null @AT@ 20265 @LENGTH@ 16
------------------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@startupException=null @AT@ 20287 @LENGTH@ 4
------------INS TryStatement@@try {  startupException=processor.getStartupException();} catch (TimeoutException e) {  throw RabbitExceptionTranslator.convertRabbitAccessException(e);}catch (InterruptedException e) {  Thread.currentThread().interrupt();  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @TO@ EnhancedForStatement@@for (AsyncMessageProcessingConsumer processor : processors) {  FatalListenerStartupException startupException=processor.getStartupException();  if (startupException != null) {    throw new AmqpIllegalStateException("Fatal exception on listener startup",startupException);  }} @AT@ 20297 @LENGTH@ 331
---------------INS ExpressionStatement@@Assignment:startupException=processor.getStartupException() @TO@ TryStatement@@try {  startupException=processor.getStartupException();} catch (TimeoutException e) {  throw RabbitExceptionTranslator.convertRabbitAccessException(e);}catch (InterruptedException e) {  Thread.currentThread().interrupt();  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 20308 @LENGTH@ 51
------------------INS Assignment@@startupException=processor.getStartupException() @TO@ ExpressionStatement@@Assignment:startupException=processor.getStartupException() @AT@ 20308 @LENGTH@ 50
---------------------INS SimpleName@@startupException @TO@ Assignment@@startupException=processor.getStartupException() @AT@ 20308 @LENGTH@ 16
---------------------INS Operator@@= @TO@ Assignment@@startupException=processor.getStartupException() @AT@ 20324 @LENGTH@ 1
---------------------INS MethodInvocation@@processor.getStartupException() @TO@ Assignment@@startupException=processor.getStartupException() @AT@ 20327 @LENGTH@ 31
------------------------MOV SimpleName@@Name:processor @TO@ MethodInvocation@@processor.getStartupException() @AT@ 20284 @LENGTH@ 9
------------------------MOV SimpleName@@MethodName:getStartupException:[] @TO@ MethodInvocation@@processor.getStartupException() @AT@ 20294 @LENGTH@ 21
---------------INS CatchClause@@catch (TimeoutException e) {  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @TO@ TryStatement@@try {  startupException=processor.getStartupException();} catch (TimeoutException e) {  throw RabbitExceptionTranslator.convertRabbitAccessException(e);}catch (InterruptedException e) {  Thread.currentThread().interrupt();  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 20370 @LENGTH@ 104
------------------INS SingleVariableDeclaration@@TimeoutException e @TO@ CatchClause@@catch (TimeoutException e) {  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 20377 @LENGTH@ 18
---------------------INS SimpleType@@TimeoutException @TO@ SingleVariableDeclaration@@TimeoutException e @AT@ 20377 @LENGTH@ 16
---------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@TimeoutException e @AT@ 20394 @LENGTH@ 1
------------------INS ThrowStatement@@MethodInvocation:RabbitExceptionTranslator.convertRabbitAccessException(e) @TO@ CatchClause@@catch (TimeoutException e) {  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 20404 @LENGTH@ 64
---------------------INS MethodInvocation@@RabbitExceptionTranslator.convertRabbitAccessException(e) @TO@ ThrowStatement@@MethodInvocation:RabbitExceptionTranslator.convertRabbitAccessException(e) @AT@ 20410 @LENGTH@ 57
------------------------INS SimpleName@@Name:RabbitExceptionTranslator @TO@ MethodInvocation@@RabbitExceptionTranslator.convertRabbitAccessException(e) @AT@ 20410 @LENGTH@ 25
------------------------INS SimpleName@@MethodName:convertRabbitAccessException:[e] @TO@ MethodInvocation@@RabbitExceptionTranslator.convertRabbitAccessException(e) @AT@ 20436 @LENGTH@ 31
---------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:convertRabbitAccessException:[e] @AT@ 20465 @LENGTH@ 1
---------------INS CatchClause@@catch (InterruptedException e) {  Thread.currentThread().interrupt();  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @TO@ TryStatement@@try {  startupException=processor.getStartupException();} catch (TimeoutException e) {  throw RabbitExceptionTranslator.convertRabbitAccessException(e);}catch (InterruptedException e) {  Thread.currentThread().interrupt();  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 20479 @LENGTH@ 149
------------------INS SingleVariableDeclaration@@InterruptedException e @TO@ CatchClause@@catch (InterruptedException e) {  Thread.currentThread().interrupt();  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 20486 @LENGTH@ 22
---------------------INS SimpleType@@InterruptedException @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 20486 @LENGTH@ 20
---------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 20507 @LENGTH@ 1
------------------INS ExpressionStatement@@MethodInvocation:Thread.currentThread().interrupt() @TO@ CatchClause@@catch (InterruptedException e) {  Thread.currentThread().interrupt();  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 20517 @LENGTH@ 35
---------------------INS MethodInvocation@@Thread.currentThread().interrupt() @TO@ ExpressionStatement@@MethodInvocation:Thread.currentThread().interrupt() @AT@ 20517 @LENGTH@ 34
------------------------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread().interrupt() @AT@ 20517 @LENGTH@ 22
------------------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread().interrupt() @AT@ 20517 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:interrupt:[] @TO@ MethodInvocation@@Thread.currentThread().interrupt() @AT@ 20540 @LENGTH@ 11
------------------INS ThrowStatement@@MethodInvocation:RabbitExceptionTranslator.convertRabbitAccessException(e) @TO@ CatchClause@@catch (InterruptedException e) {  Thread.currentThread().interrupt();  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 20558 @LENGTH@ 64
---------------------INS MethodInvocation@@RabbitExceptionTranslator.convertRabbitAccessException(e) @TO@ ThrowStatement@@MethodInvocation:RabbitExceptionTranslator.convertRabbitAccessException(e) @AT@ 20564 @LENGTH@ 57
------------------------INS SimpleName@@Name:RabbitExceptionTranslator @TO@ MethodInvocation@@RabbitExceptionTranslator.convertRabbitAccessException(e) @AT@ 20564 @LENGTH@ 25
------------------------INS SimpleName@@MethodName:convertRabbitAccessException:[e] @TO@ MethodInvocation@@RabbitExceptionTranslator.convertRabbitAccessException(e) @AT@ 20590 @LENGTH@ 31
---------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:convertRabbitAccessException:[e] @AT@ 20619 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:getValueWhenRefreshTokenGrantTypeThenReturnRefreshToken,  @TO@ TypeDeclaration@@[public]AuthorizationGrantTypeTests,  @AT@ 1403 @LENGTH@ 164
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getValueWhenRefreshTokenGrantTypeThenReturnRefreshToken,  @AT@ 1403 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getValueWhenRefreshTokenGrantTypeThenReturnRefreshToken,  @AT@ 1410 @LENGTH@ 4
---INS SimpleName@@MethodName:getValueWhenRefreshTokenGrantTypeThenReturnRefreshToken @TO@ MethodDeclaration@@public, void, MethodName:getValueWhenRefreshTokenGrantTypeThenReturnRefreshToken,  @AT@ 1415 @LENGTH@ 55
---INS ExpressionStatement@@MethodInvocation:assertThat(AuthorizationGrantType.REFRESH_TOKEN.getValue()).isEqualTo("refresh_token") @TO@ MethodDeclaration@@public, void, MethodName:getValueWhenRefreshTokenGrantTypeThenReturnRefreshToken,  @AT@ 1477 @LENGTH@ 87
------INS MethodInvocation@@assertThat(AuthorizationGrantType.REFRESH_TOKEN.getValue()).isEqualTo("refresh_token") @TO@ ExpressionStatement@@MethodInvocation:assertThat(AuthorizationGrantType.REFRESH_TOKEN.getValue()).isEqualTo("refresh_token") @AT@ 1477 @LENGTH@ 86
---------INS MethodInvocation@@MethodName:assertThat:[AuthorizationGrantType.REFRESH_TOKEN.getValue()] @TO@ MethodInvocation@@assertThat(AuthorizationGrantType.REFRESH_TOKEN.getValue()).isEqualTo("refresh_token") @AT@ 1477 @LENGTH@ 59
------------INS MethodInvocation@@AuthorizationGrantType.REFRESH_TOKEN.getValue() @TO@ MethodInvocation@@MethodName:assertThat:[AuthorizationGrantType.REFRESH_TOKEN.getValue()] @AT@ 1488 @LENGTH@ 47
---------------INS QualifiedName@@Name:AuthorizationGrantType.REFRESH_TOKEN @TO@ MethodInvocation@@AuthorizationGrantType.REFRESH_TOKEN.getValue() @AT@ 1488 @LENGTH@ 36
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@AuthorizationGrantType.REFRESH_TOKEN.getValue() @AT@ 1525 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:["refresh_token"] @TO@ MethodInvocation@@assertThat(AuthorizationGrantType.REFRESH_TOKEN.getValue()).isEqualTo("refresh_token") @AT@ 1537 @LENGTH@ 26
------------INS StringLiteral@@"refresh_token" @TO@ SimpleName@@MethodName:isEqualTo:["refresh_token"] @AT@ 1547 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:new AliasServiceBuilder<>(serviceName,targetServiceName,SingletonPolicy.class).build(context.getServiceTarget()).install() @TO@ MethodInvocation:new IdentityServiceConfigurator<>(serviceName,targetServiceName).build(context.getServiceTarget()).install() @AT@ 2184 @LENGTH@ 125
---UPD MethodInvocation@@new AliasServiceBuilder<>(serviceName,targetServiceName,SingletonPolicy.class).build(context.getServiceTarget()).install() @TO@ new IdentityServiceConfigurator<>(serviceName,targetServiceName).build(context.getServiceTarget()).install() @AT@ 2184 @LENGTH@ 124
------UPD ClassInstanceCreation@@AliasServiceBuilder<>[serviceName, targetServiceName, SingletonPolicy.class] @TO@ IdentityServiceConfigurator<>[serviceName, targetServiceName] @AT@ 2184 @LENGTH@ 80
---------UPD ParameterizedType@@AliasServiceBuilder<> @TO@ IdentityServiceConfigurator<> @AT@ 2188 @LENGTH@ 21
------------UPD SimpleType@@AliasServiceBuilder @TO@ IdentityServiceConfigurator @AT@ 2188 @LENGTH@ 19
---------DEL TypeLiteral@@SingletonPolicy.class @AT@ 2242 @LENGTH@ 21


UPD ExpressionStatement@@Assignment:accessTokenResponse.refreshToken=new OAuth2RefreshToken(this.refreshToken,issuedAt,issuedAt.plusSeconds(1)) @TO@ Assignment:accessTokenResponse.refreshToken=new OAuth2RefreshToken(this.refreshToken,issuedAt) @AT@ 6107 @LENGTH@ 112
---UPD Assignment@@accessTokenResponse.refreshToken=new OAuth2RefreshToken(this.refreshToken,issuedAt,issuedAt.plusSeconds(1)) @TO@ accessTokenResponse.refreshToken=new OAuth2RefreshToken(this.refreshToken,issuedAt) @AT@ 6107 @LENGTH@ 111
------UPD ClassInstanceCreation@@OAuth2RefreshToken[this.refreshToken, issuedAt, issuedAt.plusSeconds(1)] @TO@ OAuth2RefreshToken[this.refreshToken, issuedAt] @AT@ 6142 @LENGTH@ 76
---------DEL MethodInvocation@@issuedAt.plusSeconds(1) @AT@ 6194 @LENGTH@ 23
------------DEL SimpleName@@Name:issuedAt @AT@ 6194 @LENGTH@ 8
------------DEL SimpleName@@MethodName:plusSeconds:[1] @AT@ 6203 @LENGTH@ 14
---------------DEL NumberLiteral@@1 @AT@ 6215 @LENGTH@ 1


UPD TryStatement@@try {  tableLock.writeLock().lock();  PartitionWrapper wrapper=partitionCache.remove(CacheUtils.buildPartitionCacheKey(partVal));  isPartitionCacheDirty.set(true);  if (wrapper.getSdHash() != null) {    sharedCache.decrSd(wrapper.getSdHash());  }  part=CacheUtils.assemble(wrapper,sharedCache);  String partialKey=CacheUtils.buildPartitionCacheKey(partVal);  Iterator<Entry<String,ColumnStatisticsObj>> iterator=partitionColStatsCache.entrySet().iterator();  while (iterator.hasNext()) {    Entry<String,ColumnStatisticsObj> entry=iterator.next();    String key=entry.getKey();    if (key.toLowerCase().startsWith(partialKey.toLowerCase())) {      iterator.remove();    }  }  if (!aggrColStatsCache.isEmpty()) {    aggrColStatsCache.clear();  }}  finally {  tableLock.writeLock().unlock();} @TO@ try {  tableLock.writeLock().lock();  PartitionWrapper wrapper=partitionCache.remove(CacheUtils.buildPartitionCacheKey(partVal));  isPartitionCacheDirty.set(true);  part=CacheUtils.assemble(wrapper,sharedCache);  if (wrapper.getSdHash() != null) {    sharedCache.decrSd(wrapper.getSdHash());  }  String partialKey=CacheUtils.buildPartitionCacheKey(partVal);  Iterator<Entry<String,ColumnStatisticsObj>> iterator=partitionColStatsCache.entrySet().iterator();  while (iterator.hasNext()) {    Entry<String,ColumnStatisticsObj> entry=iterator.next();    String key=entry.getKey();    if (key.toLowerCase().startsWith(partialKey.toLowerCase())) {      iterator.remove();    }  }  if (!aggrColStatsCache.isEmpty()) {    aggrColStatsCache.clear();  }}  finally {  tableLock.writeLock().unlock();} @AT@ 11208 @LENGTH@ 1055
---MOV IfStatement@@if (wrapper.getSdHash() != null) {  sharedCache.decrSd(wrapper.getSdHash());} @TO@ TryStatement@@try {  tableLock.writeLock().lock();  PartitionWrapper wrapper=partitionCache.remove(CacheUtils.buildPartitionCacheKey(partVal));  isPartitionCacheDirty.set(true);  if (wrapper.getSdHash() != null) {    sharedCache.decrSd(wrapper.getSdHash());  }  part=CacheUtils.assemble(wrapper,sharedCache);  String partialKey=CacheUtils.buildPartitionCacheKey(partVal);  Iterator<Entry<String,ColumnStatisticsObj>> iterator=partitionColStatsCache.entrySet().iterator();  while (iterator.hasNext()) {    Entry<String,ColumnStatisticsObj> entry=iterator.next();    String key=entry.getKey();    if (key.toLowerCase().startsWith(partialKey.toLowerCase())) {      iterator.remove();    }  }  if (!aggrColStatsCache.isEmpty()) {    aggrColStatsCache.clear();  }}  finally {  tableLock.writeLock().unlock();} @AT@ 11415 @LENGTH@ 95


INS ExpressionStatement@@MethodInvocation:this.userService.setOauth2UserService(new DefaultOAuth2UserService()) @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 4618 @LENGTH@ 70
---INS MethodInvocation@@this.userService.setOauth2UserService(new DefaultOAuth2UserService()) @TO@ ExpressionStatement@@MethodInvocation:this.userService.setOauth2UserService(new DefaultOAuth2UserService()) @AT@ 4618 @LENGTH@ 69
------INS FieldAccess@@this.userService @TO@ MethodInvocation@@this.userService.setOauth2UserService(new DefaultOAuth2UserService()) @AT@ 4618 @LENGTH@ 16
---------INS ThisExpression@@this @TO@ FieldAccess@@this.userService @AT@ 4618 @LENGTH@ 4
---------INS SimpleName@@userService @TO@ FieldAccess@@this.userService @AT@ 4623 @LENGTH@ 11
------INS SimpleName@@MethodName:setOauth2UserService:[new DefaultOAuth2UserService()] @TO@ MethodInvocation@@this.userService.setOauth2UserService(new DefaultOAuth2UserService()) @AT@ 4635 @LENGTH@ 52
---------INS ClassInstanceCreation@@DefaultOAuth2UserService[] @TO@ SimpleName@@MethodName:setOauth2UserService:[new DefaultOAuth2UserService()] @AT@ 4656 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2UserService[] @AT@ 4656 @LENGTH@ 3
------------INS SimpleType@@DefaultOAuth2UserService @TO@ ClassInstanceCreation@@DefaultOAuth2UserService[] @AT@ 4660 @LENGTH@ 24


INS ExpressionStatement@@MethodInvocation:converters.add(BsonTimestampToInstantConverter.INSTANCE) @TO@ MethodDeclaration@@static, Collection<Object>, MethodName:getConvertersToRegister,  @AT@ 3361 @LENGTH@ 57
---INS MethodInvocation@@converters.add(BsonTimestampToInstantConverter.INSTANCE) @TO@ ExpressionStatement@@MethodInvocation:converters.add(BsonTimestampToInstantConverter.INSTANCE) @AT@ 3361 @LENGTH@ 56
------INS SimpleName@@Name:converters @TO@ MethodInvocation@@converters.add(BsonTimestampToInstantConverter.INSTANCE) @AT@ 3361 @LENGTH@ 10
------INS SimpleName@@MethodName:add:[BsonTimestampToInstantConverter.INSTANCE] @TO@ MethodInvocation@@converters.add(BsonTimestampToInstantConverter.INSTANCE) @AT@ 3372 @LENGTH@ 45
---------INS QualifiedName@@BsonTimestampToInstantConverter.INSTANCE @TO@ SimpleName@@MethodName:add:[BsonTimestampToInstantConverter.INSTANCE] @AT@ 3376 @LENGTH@ 40
------------INS SimpleName@@BsonTimestampToInstantConverter @TO@ QualifiedName@@BsonTimestampToInstantConverter.INSTANCE @AT@ 3376 @LENGTH@ 31
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@BsonTimestampToInstantConverter.INSTANCE @AT@ 3408 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:context.close() @TO@ MethodDeclaration@@public, void, MethodName:testBlockedConnection, Exception,  @AT@ 5114 @LENGTH@ 16
---INS MethodInvocation@@context.close() @TO@ ExpressionStatement@@MethodInvocation:context.close() @AT@ 5114 @LENGTH@ 15
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.close() @AT@ 5114 @LENGTH@ 7
------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@context.close() @AT@ 5122 @LENGTH@ 7


UPD EnhancedForStatement@@for (CacheAliasBuilderProvider provider : ServiceLoader.load(CacheAliasBuilderProvider.class,CacheAliasBuilderProvider.class.getClassLoader())) {  for (  ServiceNameProvider builder : provider.getBuilders(registry,name,null,defaultCache)) {    context.removeService(builder.getServiceName());  }} @TO@ for (IdentityCacheServiceConfiguratorProvider provider : ServiceLoader.load(IdentityCacheServiceConfiguratorProvider.class,IdentityCacheServiceConfiguratorProvider.class.getClassLoader())) {  for (  ServiceNameProvider configurator : provider.getServiceConfigurators(registry,name,null,defaultCache)) {    context.removeService(configurator.getServiceName());  }} @AT@ 7583 @LENGTH@ 358
---UPD SingleVariableDeclaration@@CacheAliasBuilderProvider provider @TO@ IdentityCacheServiceConfiguratorProvider provider @AT@ 7588 @LENGTH@ 34
------UPD SimpleType@@CacheAliasBuilderProvider @TO@ IdentityCacheServiceConfiguratorProvider @AT@ 7588 @LENGTH@ 25
---UPD MethodInvocation@@ServiceLoader.load(CacheAliasBuilderProvider.class,CacheAliasBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(IdentityCacheServiceConfiguratorProvider.class,IdentityCacheServiceConfiguratorProvider.class.getClassLoader()) @AT@ 7625 @LENGTH@ 101
------UPD SimpleName@@MethodName:load:[CacheAliasBuilderProvider.class, CacheAliasBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[IdentityCacheServiceConfiguratorProvider.class, IdentityCacheServiceConfiguratorProvider.class.getClassLoader()] @AT@ 7639 @LENGTH@ 87
---------UPD TypeLiteral@@CacheAliasBuilderProvider.class @TO@ IdentityCacheServiceConfiguratorProvider.class @AT@ 7644 @LENGTH@ 31
---------UPD MethodInvocation@@CacheAliasBuilderProvider.class.getClassLoader() @TO@ IdentityCacheServiceConfiguratorProvider.class.getClassLoader() @AT@ 7677 @LENGTH@ 48
------------UPD TypeLiteral@@CacheAliasBuilderProvider.class @TO@ IdentityCacheServiceConfiguratorProvider.class @AT@ 7677 @LENGTH@ 31
---UPD EnhancedForStatement@@for (ServiceNameProvider builder : provider.getBuilders(registry,name,null,defaultCache)) {  context.removeService(builder.getServiceName());} @TO@ for (ServiceNameProvider configurator : provider.getServiceConfigurators(registry,name,null,defaultCache)) {  context.removeService(configurator.getServiceName());} @AT@ 7746 @LENGTH@ 181
------UPD SingleVariableDeclaration@@ServiceNameProvider builder @TO@ ServiceNameProvider configurator @AT@ 7751 @LENGTH@ 27
---------UPD SimpleName@@builder @TO@ configurator @AT@ 7771 @LENGTH@ 7
------UPD MethodInvocation@@provider.getBuilders(registry,name,null,defaultCache) @TO@ provider.getServiceConfigurators(registry,name,null,defaultCache) @AT@ 7781 @LENGTH@ 56
---------UPD SimpleName@@MethodName:getBuilders:[registry, name, null, defaultCache] @TO@ MethodName:getServiceConfigurators:[registry, name, null, defaultCache] @AT@ 7790 @LENGTH@ 47
------UPD ExpressionStatement@@MethodInvocation:context.removeService(builder.getServiceName()) @TO@ MethodInvocation:context.removeService(configurator.getServiceName()) @AT@ 7861 @LENGTH@ 48
---------UPD MethodInvocation@@context.removeService(builder.getServiceName()) @TO@ context.removeService(configurator.getServiceName()) @AT@ 7861 @LENGTH@ 47
------------UPD SimpleName@@MethodName:removeService:[builder.getServiceName()] @TO@ MethodName:removeService:[configurator.getServiceName()] @AT@ 7869 @LENGTH@ 39
---------------UPD MethodInvocation@@builder.getServiceName() @TO@ configurator.getServiceName() @AT@ 7883 @LENGTH@ 24
------------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 7883 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new GenericFileOperationFailedException("Cannot moved existing file from: " + fileName + " to: "+ to+ " as there already exists a file: "+ to) @TO@ ClassInstanceCreation:new GenericFileOperationFailedException("Cannot move existing file from: " + fileName + " to: "+ to+ " as there already exists a file: "+ to) @AT@ 17154 @LENGTH@ 152
---UPD ClassInstanceCreation@@GenericFileOperationFailedException["Cannot moved existing file from: " + fileName + " to: "+ to+ " as there already exists a file: "+ to] @TO@ GenericFileOperationFailedException["Cannot move existing file from: " + fileName + " to: "+ to+ " as there already exists a file: "+ to] @AT@ 17160 @LENGTH@ 145
------UPD InfixExpression@@"Cannot moved existing file from: " + fileName + " to: "+ to+ " as there already exists a file: "+ to @TO@ "Cannot move existing file from: " + fileName + " to: "+ to+ " as there already exists a file: "+ to @AT@ 17200 @LENGTH@ 104
---------UPD StringLiteral@@"Cannot moved existing file from: " @TO@ "Cannot move existing file from: " @AT@ 17200 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:from("weather:foo?mode=HTML&appid=9162755b2efa555823cfe0451d7fff38&geolocationAccessKey=test&geolocationRequestHostIP=test").to("mock:result") @TO@ MethodInvocation:from("weather:foo?mode=HTML&appid=9162755b2efa555823cfe0451d7fff38&geolocationAccessKey=test&geolocationRequestHostIP=test&location=Rome").to("mock:result") @AT@ 1655 @LENGTH@ 143
---UPD MethodInvocation@@from("weather:foo?mode=HTML&appid=9162755b2efa555823cfe0451d7fff38&geolocationAccessKey=test&geolocationRequestHostIP=test").to("mock:result") @TO@ from("weather:foo?mode=HTML&appid=9162755b2efa555823cfe0451d7fff38&geolocationAccessKey=test&geolocationRequestHostIP=test&location=Rome").to("mock:result") @AT@ 1655 @LENGTH@ 142
------UPD MethodInvocation@@MethodName:from:["weather:foo?mode=HTML&appid=9162755b2efa555823cfe0451d7fff38&geolocationAccessKey=test&geolocationRequestHostIP=test"] @TO@ MethodName:from:["weather:foo?mode=HTML&appid=9162755b2efa555823cfe0451d7fff38&geolocationAccessKey=test&geolocationRequestHostIP=test&location=Rome"] @AT@ 1655 @LENGTH@ 124
---------UPD StringLiteral@@"weather:foo?mode=HTML&appid=9162755b2efa555823cfe0451d7fff38&geolocationAccessKey=test&geolocationRequestHostIP=test" @TO@ "weather:foo?mode=HTML&appid=9162755b2efa555823cfe0451d7fff38&geolocationAccessKey=test&geolocationRequestHostIP=test&location=Rome" @AT@ 1660 @LENGTH@ 118


UPD VariableDeclarationStatement@@String[] tokens=syntax.split("\\w+"); @TO@ String[] tokens=syntax.split("[\\w.]+"); @AT@ 41198 @LENGTH@ 39
---UPD VariableDeclarationFragment@@tokens=syntax.split("\\w+") @TO@ tokens=syntax.split("[\\w.]+") @AT@ 41207 @LENGTH@ 29
------UPD MethodInvocation@@syntax.split("\\w+") @TO@ syntax.split("[\\w.]+") @AT@ 41216 @LENGTH@ 20
---------UPD SimpleName@@MethodName:split:["\\w+"] @TO@ MethodName:split:["[\\w.]+"] @AT@ 41223 @LENGTH@ 13
------------UPD StringLiteral@@"\\w+" @TO@ "[\\w.]+" @AT@ 41229 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssue, Exception,  @TO@ TypeDeclaration@@[public]CamelCatalogTest,  @AT@ 47065 @LENGTH@ 430
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssue, Exception,  @AT@ 47065 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssue, Exception,  @AT@ 47072 @LENGTH@ 4
---INS SimpleName@@MethodName:testNetty4Http4DynamicToIssue @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssue, Exception,  @AT@ 47077 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssue, Exception,  @AT@ 47116 @LENGTH@ 9
---INS VariableDeclarationStatement@@String uri="netty4-http:http://10.192.1.10:8080/client/alerts/summary?throwExceptionOnFailure=false"; @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssue, Exception,  @AT@ 47136 @LENGTH@ 103
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String uri="netty4-http:http://10.192.1.10:8080/client/alerts/summary?throwExceptionOnFailure=false"; @AT@ 47136 @LENGTH@ 6
------INS VariableDeclarationFragment@@uri="netty4-http:http://10.192.1.10:8080/client/alerts/summary?throwExceptionOnFailure=false" @TO@ VariableDeclarationStatement@@String uri="netty4-http:http://10.192.1.10:8080/client/alerts/summary?throwExceptionOnFailure=false"; @AT@ 47143 @LENGTH@ 95
---------INS SimpleName@@uri @TO@ VariableDeclarationFragment@@uri="netty4-http:http://10.192.1.10:8080/client/alerts/summary?throwExceptionOnFailure=false" @AT@ 47143 @LENGTH@ 3
---------INS StringLiteral@@"netty4-http:http://10.192.1.10:8080/client/alerts/summary?throwExceptionOnFailure=false" @TO@ VariableDeclarationFragment@@uri="netty4-http:http://10.192.1.10:8080/client/alerts/summary?throwExceptionOnFailure=false" @AT@ 47149 @LENGTH@ 89
---INS VariableDeclarationStatement@@Map<String,String> params=catalog.endpointProperties(uri); @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssue, Exception,  @AT@ 47248 @LENGTH@ 61
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> params=catalog.endpointProperties(uri); @AT@ 47248 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 47248 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 47252 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 47260 @LENGTH@ 6
------INS VariableDeclarationFragment@@params=catalog.endpointProperties(uri) @TO@ VariableDeclarationStatement@@Map<String,String> params=catalog.endpointProperties(uri); @AT@ 47268 @LENGTH@ 40
---------INS SimpleName@@params @TO@ VariableDeclarationFragment@@params=catalog.endpointProperties(uri) @AT@ 47268 @LENGTH@ 6
---------INS MethodInvocation@@catalog.endpointProperties(uri) @TO@ VariableDeclarationFragment@@params=catalog.endpointProperties(uri) @AT@ 47277 @LENGTH@ 31
------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.endpointProperties(uri) @AT@ 47277 @LENGTH@ 7
------------INS SimpleName@@MethodName:endpointProperties:[uri] @TO@ MethodInvocation@@catalog.endpointProperties(uri) @AT@ 47285 @LENGTH@ 23
---------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:endpointProperties:[uri] @AT@ 47304 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:params.remove("path") @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssue, Exception,  @AT@ 47318 @LENGTH@ 22
------INS MethodInvocation@@params.remove("path") @TO@ ExpressionStatement@@MethodInvocation:params.remove("path") @AT@ 47318 @LENGTH@ 21
---------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.remove("path") @AT@ 47318 @LENGTH@ 6
---------INS SimpleName@@MethodName:remove:["path"] @TO@ MethodInvocation@@params.remove("path") @AT@ 47325 @LENGTH@ 14
------------INS StringLiteral@@"path" @TO@ SimpleName@@MethodName:remove:["path"] @AT@ 47332 @LENGTH@ 6
---INS VariableDeclarationStatement@@String resolved=catalog.asEndpointUri("netty4-http",params,false); @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssue, Exception,  @AT@ 47350 @LENGTH@ 70
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String resolved=catalog.asEndpointUri("netty4-http",params,false); @AT@ 47350 @LENGTH@ 6
------INS VariableDeclarationFragment@@resolved=catalog.asEndpointUri("netty4-http",params,false) @TO@ VariableDeclarationStatement@@String resolved=catalog.asEndpointUri("netty4-http",params,false); @AT@ 47357 @LENGTH@ 62
---------INS SimpleName@@resolved @TO@ VariableDeclarationFragment@@resolved=catalog.asEndpointUri("netty4-http",params,false) @AT@ 47357 @LENGTH@ 8
---------INS MethodInvocation@@catalog.asEndpointUri("netty4-http",params,false) @TO@ VariableDeclarationFragment@@resolved=catalog.asEndpointUri("netty4-http",params,false) @AT@ 47368 @LENGTH@ 51
------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.asEndpointUri("netty4-http",params,false) @AT@ 47368 @LENGTH@ 7
------------INS SimpleName@@MethodName:asEndpointUri:["netty4-http", params, false] @TO@ MethodInvocation@@catalog.asEndpointUri("netty4-http",params,false) @AT@ 47376 @LENGTH@ 43
---------------INS StringLiteral@@"netty4-http" @TO@ SimpleName@@MethodName:asEndpointUri:["netty4-http", params, false] @AT@ 47390 @LENGTH@ 13
---------------INS SimpleName@@params @TO@ SimpleName@@MethodName:asEndpointUri:["netty4-http", params, false] @AT@ 47405 @LENGTH@ 6
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:asEndpointUri:["netty4-http", params, false] @AT@ 47413 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals("netty4-http:http:10.192.1.10:8080",resolved) @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssue, Exception,  @AT@ 47429 @LENGTH@ 60
------INS MethodInvocation@@assertEquals("netty4-http:http:10.192.1.10:8080",resolved) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("netty4-http:http:10.192.1.10:8080",resolved) @AT@ 47429 @LENGTH@ 59
---------INS SimpleName@@MethodName:assertEquals:["netty4-http:http:10.192.1.10:8080", resolved] @TO@ MethodInvocation@@assertEquals("netty4-http:http:10.192.1.10:8080",resolved) @AT@ 47429 @LENGTH@ 59
------------INS StringLiteral@@"netty4-http:http:10.192.1.10:8080" @TO@ SimpleName@@MethodName:assertEquals:["netty4-http:http:10.192.1.10:8080", resolved] @AT@ 47442 @LENGTH@ 35
------------INS SimpleName@@resolved @TO@ SimpleName@@MethodName:assertEquals:["netty4-http:http:10.192.1.10:8080", resolved] @AT@ 47479 @LENGTH@ 8


UPD MethodDeclaration@@voidMethodName:JDBCProtocolResourceDefinition, String name, UnaryOperator<ResourceDescriptor> configurator, ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory,  @TO@ voidMethodName:JDBCProtocolResourceDefinition, String name, UnaryOperator<ResourceDescriptor> configurator, ResourceServiceConfiguratorFactory parentServiceConfiguratorFactory,  @AT@ 3972 @LENGTH@ 312
---UPD SingleVariableDeclaration@@ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory @TO@ ResourceServiceConfiguratorFactory parentServiceConfiguratorFactory @AT@ 4064 @LENGTH@ 66
------INS SimpleType@@ResourceServiceConfiguratorFactory @TO@ SingleVariableDeclaration@@ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory @AT@ 3960 @LENGTH@ 34
------DEL ParameterizedType@@ResourceServiceBuilderFactory<ChannelFactory> @AT@ 4064 @LENGTH@ 45
---------DEL SimpleType@@ResourceServiceBuilderFactory @AT@ 4064 @LENGTH@ 29
---------DEL SimpleType@@ChannelFactory @AT@ 4094 @LENGTH@ 14
------UPD SimpleName@@parentBuilderFactory @TO@ parentServiceConfiguratorFactory @AT@ 4110 @LENGTH@ 20
---UPD SuperConstructorInvocation@@super(pathElement(name),new ResourceDescriptorConfigurator(configurator),JDBCProtocolConfigurationBuilder::new,parentBuilderFactory);
 @TO@ super(pathElement(name),new ResourceDescriptorConfigurator(configurator),JDBCProtocolConfigurationServiceConfigurator::new,parentServiceConfiguratorFactory);
 @AT@ 4142 @LENGTH@ 136
------UPD SimpleName@@parentBuilderFactory @TO@ parentServiceConfiguratorFactory @AT@ 4256 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:remoteService.getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)),CLIENT_MAPPINGS_CLUSTER_NAME).addRejectCheck(RejectAttributeChecker.DEFINED,CLIENT_MAPPINGS_CLUSTER_NAME).setDiscard(DiscardAttributeChecker.ALWAYS,EXECUTE_IN_WORKER).end() @TO@ MethodInvocation:remoteService.getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)),CLIENT_MAPPINGS_CLUSTER_NAME).addRejectCheck(RejectAttributeChecker.DEFINED,CLIENT_MAPPINGS_CLUSTER_NAME).setDiscard(DiscardAttributeChecker.ALWAYS,EXECUTE_IN_WORKER).end() @AT@ 12619 @LENGTH@ 482
---UPD MethodInvocation@@remoteService.getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)),CLIENT_MAPPINGS_CLUSTER_NAME).addRejectCheck(RejectAttributeChecker.DEFINED,CLIENT_MAPPINGS_CLUSTER_NAME).setDiscard(DiscardAttributeChecker.ALWAYS,EXECUTE_IN_WORKER).end() @TO@ remoteService.getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)),CLIENT_MAPPINGS_CLUSTER_NAME).addRejectCheck(RejectAttributeChecker.DEFINED,CLIENT_MAPPINGS_CLUSTER_NAME).setDiscard(DiscardAttributeChecker.ALWAYS,EXECUTE_IN_WORKER).end() @AT@ 12619 @LENGTH@ 481
------UPD MethodInvocation@@MethodName:setDiscard:[new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)), CLIENT_MAPPINGS_CLUSTER_NAME] @TO@ MethodName:setDiscard:[new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)), CLIENT_MAPPINGS_CLUSTER_NAME] @AT@ 12619 @LENGTH@ 229
---------UPD ClassInstanceCreation@@DiscardAttributeChecker.DiscardAttributeValueChecker[new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)] @TO@ DiscardAttributeChecker.DiscardAttributeValueChecker[new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)] @AT@ 12683 @LENGTH@ 134
------------UPD ClassInstanceCreation@@ModelNode[BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME] @TO@ ModelNode[BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME] @AT@ 12740 @LENGTH@ 76
---------------UPD QualifiedName@@BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME @TO@ BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME @AT@ 12754 @LENGTH@ 61
------------------UPD SimpleName@@BeanManagerFactoryBuilderConfiguration @TO@ BeanManagerFactoryServiceConfiguratorConfiguration @AT@ 12754 @LENGTH@ 38


UPD MethodDeclaration@@protected, SaslClientFactory, MethodName:obtainSaslClientFactory, final Class requiredClientFactory,  @TO@ protected, T, T extends SaslClientFactory, MethodName:obtainSaslClientFactory, final Class<T> requiredClientFactory,  @AT@ 3454 @LENGTH@ 451
---UPD SimpleType@@SaslClientFactory @TO@ T @AT@ 3464 @LENGTH@ 17
---UPD SingleVariableDeclaration@@final Class requiredClientFactory @TO@ final Class<T> requiredClientFactory @AT@ 3506 @LENGTH@ 33
------DEL SimpleType@@Class @AT@ 3512 @LENGTH@ 5
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@final Class requiredClientFactory @AT@ 3571 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3571 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3577 @LENGTH@ 1
---UPD WhileStatement@@while (clientFactories.hasMoreElements()) {  SaslClientFactory current=clientFactories.nextElement();  if (current.getClass().equals(requiredClientFactory)) {    return current;  }} @TO@ while (clientFactories.hasMoreElements()) {  SaslClientFactory current=clientFactories.nextElement();  if (current.getClass().equals(requiredClientFactory)) {    return requiredClientFactory.cast(current);  }} @AT@ 3639 @LENGTH@ 238
------UPD Block@@WhileBody:{  SaslClientFactory current=clientFactories.nextElement();  if (current.getClass().equals(requiredClientFactory)) {    return current;  }} @TO@ WhileBody:{  SaslClientFactory current=clientFactories.nextElement();  if (current.getClass().equals(requiredClientFactory)) {    return requiredClientFactory.cast(current);  }} @AT@ 3681 @LENGTH@ 196
---------UPD IfStatement@@if (current.getClass().equals(requiredClientFactory)) {  return current;} @TO@ if (current.getClass().equals(requiredClientFactory)) {  return requiredClientFactory.cast(current);} @AT@ 3766 @LENGTH@ 101
------------UPD Block@@ThenBody:{  return current;} @TO@ ThenBody:{  return requiredClientFactory.cast(current);} @AT@ 3820 @LENGTH@ 47
---------------UPD ReturnStatement@@SimpleName:current @TO@ MethodInvocation:requiredClientFactory.cast(current) @AT@ 3838 @LENGTH@ 15
------------------DEL SimpleName@@current @AT@ 3845 @LENGTH@ 7
------------------INS MethodInvocation@@requiredClientFactory.cast(current) @TO@ ReturnStatement@@SimpleName:current @AT@ 3907 @LENGTH@ 35
---------------------INS SimpleName@@Name:requiredClientFactory @TO@ MethodInvocation@@requiredClientFactory.cast(current) @AT@ 3907 @LENGTH@ 21
---------------------INS SimpleName@@MethodName:cast:[current] @TO@ MethodInvocation@@requiredClientFactory.cast(current) @AT@ 3929 @LENGTH@ 13
------------------------INS SimpleName@@current @TO@ SimpleName@@MethodName:cast:[current] @AT@ 3934 @LENGTH@ 7


UPD LambdaExpression@@accessTokenResponse -> {
  AccessToken accessToken=accessTokenResponse.getTokens().getAccessToken();
  OAuth2AccessToken.TokenType accessTokenType=null;
  if (OAuth2AccessToken.TokenType.BEARER.getValue().equalsIgnoreCase(accessToken.getType().getValue())) {
    accessTokenType=OAuth2AccessToken.TokenType.BEARER;
  }
  long expiresIn=accessToken.getLifetime();
  Set<String> scopes;
  if (CollectionUtils.isEmpty(accessToken.getScope())) {
    scopes=new LinkedHashSet<>(authorizationExchange.getAuthorizationRequest().getScopes());
  }
 else {
    scopes=new LinkedHashSet<>(accessToken.getScope().toStringList());
  }
  Map<String,Object> additionalParameters=new LinkedHashMap<>(accessTokenResponse.getCustomParameters());
  return OAuth2AccessTokenResponse.withToken(accessToken.getValue()).tokenType(accessTokenType).expiresIn(expiresIn).scopes(scopes).additionalParameters(additionalParameters).build();
}
 @TO@ accessTokenResponse -> {
  AccessToken accessToken=accessTokenResponse.getTokens().getAccessToken();
  OAuth2AccessToken.TokenType accessTokenType=null;
  if (OAuth2AccessToken.TokenType.BEARER.getValue().equalsIgnoreCase(accessToken.getType().getValue())) {
    accessTokenType=OAuth2AccessToken.TokenType.BEARER;
  }
  long expiresIn=accessToken.getLifetime();
  Set<String> scopes;
  if (CollectionUtils.isEmpty(accessToken.getScope())) {
    scopes=new LinkedHashSet<>(authorizationExchange.getAuthorizationRequest().getScopes());
  }
 else {
    scopes=new LinkedHashSet<>(accessToken.getScope().toStringList());
  }
  String refreshToken=null;
  if (accessTokenResponse.getTokens().getRefreshToken() != null) {
    refreshToken=accessTokenResponse.getTokens().getRefreshToken().getValue();
  }
  Map<String,Object> additionalParameters=new LinkedHashMap<>(accessTokenResponse.getCustomParameters());
  return OAuth2AccessTokenResponse.withToken(accessToken.getValue()).tokenType(accessTokenType).expiresIn(expiresIn).scopes(scopes).refreshToken(refreshToken).additionalParameters(additionalParameters).build();
}
 @AT@ 4638 @LENGTH@ 1360
---INS VariableDeclarationStatement@@String refreshToken=null; @TO@ LambdaExpression@@accessTokenResponse -> {
  AccessToken accessToken=accessTokenResponse.getTokens().getAccessToken();
  OAuth2AccessToken.TokenType accessTokenType=null;
  if (OAuth2AccessToken.TokenType.BEARER.getValue().equalsIgnoreCase(accessToken.getType().getValue())) {
    accessTokenType=OAuth2AccessToken.TokenType.BEARER;
  }
  long expiresIn=accessToken.getLifetime();
  Set<String> scopes;
  if (CollectionUtils.isEmpty(accessToken.getScope())) {
    scopes=new LinkedHashSet<>(authorizationExchange.getAuthorizationRequest().getScopes());
  }
 else {
    scopes=new LinkedHashSet<>(accessToken.getScope().toStringList());
  }
  Map<String,Object> additionalParameters=new LinkedHashMap<>(accessTokenResponse.getCustomParameters());
  return OAuth2AccessTokenResponse.withToken(accessToken.getValue()).tokenType(accessTokenType).expiresIn(expiresIn).scopes(scopes).additionalParameters(additionalParameters).build();
}
 @AT@ 5642 @LENGTH@ 27
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String refreshToken=null; @AT@ 5642 @LENGTH@ 6
------INS VariableDeclarationFragment@@refreshToken=null @TO@ VariableDeclarationStatement@@String refreshToken=null; @AT@ 5649 @LENGTH@ 19
---------INS SimpleName@@refreshToken @TO@ VariableDeclarationFragment@@refreshToken=null @AT@ 5649 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@refreshToken=null @AT@ 5664 @LENGTH@ 4
---INS IfStatement@@if (accessTokenResponse.getTokens().getRefreshToken() != null) {  refreshToken=accessTokenResponse.getTokens().getRefreshToken().getValue();} @TO@ LambdaExpression@@accessTokenResponse -> {
  AccessToken accessToken=accessTokenResponse.getTokens().getAccessToken();
  OAuth2AccessToken.TokenType accessTokenType=null;
  if (OAuth2AccessToken.TokenType.BEARER.getValue().equalsIgnoreCase(accessToken.getType().getValue())) {
    accessTokenType=OAuth2AccessToken.TokenType.BEARER;
  }
  long expiresIn=accessToken.getLifetime();
  Set<String> scopes;
  if (CollectionUtils.isEmpty(accessToken.getScope())) {
    scopes=new LinkedHashSet<>(authorizationExchange.getAuthorizationRequest().getScopes());
  }
 else {
    scopes=new LinkedHashSet<>(accessToken.getScope().toStringList());
  }
  Map<String,Object> additionalParameters=new LinkedHashMap<>(accessTokenResponse.getCustomParameters());
  return OAuth2AccessTokenResponse.withToken(accessToken.getValue()).tokenType(accessTokenType).expiresIn(expiresIn).scopes(scopes).additionalParameters(additionalParameters).build();
}
 @AT@ 5676 @LENGTH@ 156
------INS InfixExpression@@accessTokenResponse.getTokens().getRefreshToken() != null @TO@ IfStatement@@if (accessTokenResponse.getTokens().getRefreshToken() != null) {  refreshToken=accessTokenResponse.getTokens().getRefreshToken().getValue();} @AT@ 5680 @LENGTH@ 57
---------INS MethodInvocation@@accessTokenResponse.getTokens().getRefreshToken() @TO@ InfixExpression@@accessTokenResponse.getTokens().getRefreshToken() != null @AT@ 5680 @LENGTH@ 49
------------INS MethodInvocation@@MethodName:getTokens:[] @TO@ MethodInvocation@@accessTokenResponse.getTokens().getRefreshToken() @AT@ 5680 @LENGTH@ 31
------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getTokens().getRefreshToken() @AT@ 5680 @LENGTH@ 19
------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessTokenResponse.getTokens().getRefreshToken() @AT@ 5712 @LENGTH@ 17
---------INS Operator@@!= @TO@ InfixExpression@@accessTokenResponse.getTokens().getRefreshToken() != null @AT@ 5729 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@accessTokenResponse.getTokens().getRefreshToken() != null @AT@ 5733 @LENGTH@ 4
------INS Block@@ThenBody:{  refreshToken=accessTokenResponse.getTokens().getRefreshToken().getValue();} @TO@ IfStatement@@if (accessTokenResponse.getTokens().getRefreshToken() != null) {  refreshToken=accessTokenResponse.getTokens().getRefreshToken().getValue();} @AT@ 5739 @LENGTH@ 93
---------INS ExpressionStatement@@Assignment:refreshToken=accessTokenResponse.getTokens().getRefreshToken().getValue() @TO@ Block@@ThenBody:{  refreshToken=accessTokenResponse.getTokens().getRefreshToken().getValue();} @AT@ 5748 @LENGTH@ 76
------------INS Assignment@@refreshToken=accessTokenResponse.getTokens().getRefreshToken().getValue() @TO@ ExpressionStatement@@Assignment:refreshToken=accessTokenResponse.getTokens().getRefreshToken().getValue() @AT@ 5748 @LENGTH@ 75
---------------INS SimpleName@@refreshToken @TO@ Assignment@@refreshToken=accessTokenResponse.getTokens().getRefreshToken().getValue() @AT@ 5748 @LENGTH@ 12
---------------INS Operator@@= @TO@ Assignment@@refreshToken=accessTokenResponse.getTokens().getRefreshToken().getValue() @AT@ 5760 @LENGTH@ 1
---------------INS MethodInvocation@@accessTokenResponse.getTokens().getRefreshToken().getValue() @TO@ Assignment@@refreshToken=accessTokenResponse.getTokens().getRefreshToken().getValue() @AT@ 5763 @LENGTH@ 60
------------------INS MethodInvocation@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessTokenResponse.getTokens().getRefreshToken().getValue() @AT@ 5763 @LENGTH@ 49
------------------INS MethodInvocation@@MethodName:getTokens:[] @TO@ MethodInvocation@@accessTokenResponse.getTokens().getRefreshToken().getValue() @AT@ 5763 @LENGTH@ 31
------------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getTokens().getRefreshToken().getValue() @AT@ 5763 @LENGTH@ 19
------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@accessTokenResponse.getTokens().getRefreshToken().getValue() @AT@ 5813 @LENGTH@ 10
---UPD ReturnStatement@@MethodInvocation:OAuth2AccessTokenResponse.withToken(accessToken.getValue()).tokenType(accessTokenType).expiresIn(expiresIn).scopes(scopes).additionalParameters(additionalParameters).build() @TO@ MethodInvocation:OAuth2AccessTokenResponse.withToken(accessToken.getValue()).tokenType(accessTokenType).expiresIn(expiresIn).scopes(scopes).refreshToken(refreshToken).additionalParameters(additionalParameters).build() @AT@ 5765 @LENGTH@ 226
------UPD MethodInvocation@@OAuth2AccessTokenResponse.withToken(accessToken.getValue()).tokenType(accessTokenType).expiresIn(expiresIn).scopes(scopes).additionalParameters(additionalParameters).build() @TO@ OAuth2AccessTokenResponse.withToken(accessToken.getValue()).tokenType(accessTokenType).expiresIn(expiresIn).scopes(scopes).refreshToken(refreshToken).additionalParameters(additionalParameters).build() @AT@ 5772 @LENGTH@ 218
---------INS MethodInvocation@@MethodName:refreshToken:[refreshToken] @TO@ MethodInvocation@@OAuth2AccessTokenResponse.withToken(accessToken.getValue()).tokenType(accessTokenType).expiresIn(expiresIn).scopes(scopes).additionalParameters(additionalParameters).build() @AT@ 5970 @LENGTH@ 185
------------INS SimpleName@@refreshToken @TO@ MethodInvocation@@MethodName:refreshToken:[refreshToken] @AT@ 6142 @LENGTH@ 12


UPD MethodDeclaration@@private, void, T extends Throwable, MethodName:logOrRethrowDeclarationException, Declarable element, String elementType, T t, T,  @TO@ private, void, T extends Throwable, MethodName:logOrRethrowDeclarationException, @Nullable Declarable element, String elementType, T t, T,  @AT@ 25539 @LENGTH@ 1021
---UPD SingleVariableDeclaration@@Declarable element @TO@ @Nullable Declarable element @AT@ 25607 @LENGTH@ 18


UPD MethodDeclaration@@public, String, MethodName:index, Model model, @OAuth2Client OAuth2AuthorizedClient authorizedClient, @AuthenticationPrincipal OAuth2User oauth2User,  @TO@ public, String, MethodName:index, Model model, @RegisteredOAuth2AuthorizedClient OAuth2AuthorizedClient authorizedClient, @AuthenticationPrincipal OAuth2User oauth2User,  @AT@ 1179 @LENGTH@ 388
---UPD SingleVariableDeclaration@@@OAuth2Client OAuth2AuthorizedClient authorizedClient @TO@ @RegisteredOAuth2AuthorizedClient OAuth2AuthorizedClient authorizedClient @AT@ 1218 @LENGTH@ 53


UPD VariableDeclarationStatement@@Set<Class<?>> simpleTypes=new HashSet<Class<?>>(); @TO@ Set<Class<?>> simpleTypes=new HashSet<>(); @AT@ 1644 @LENGTH@ 52
---UPD VariableDeclarationFragment@@simpleTypes=new HashSet<Class<?>>() @TO@ simpleTypes=new HashSet<>() @AT@ 1658 @LENGTH@ 37
------UPD ClassInstanceCreation@@HashSet<Class<?>>[] @TO@ HashSet<>[] @AT@ 1672 @LENGTH@ 23
---------UPD ParameterizedType@@HashSet<Class<?>> @TO@ HashSet<> @AT@ 1676 @LENGTH@ 17
------------DEL ParameterizedType@@Class<?> @AT@ 1684 @LENGTH@ 8
---------------DEL SimpleType@@Class @AT@ 1684 @LENGTH@ 5
---------------DEL WildcardType@@? @AT@ 1690 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:mExt.get(INCLUDE_RUNTIME).set(true) @TO@ MethodDeclaration@@public, void, MethodName:test, Exception,  @AT@ 6648 @LENGTH@ 36
---INS MethodInvocation@@mExt.get(INCLUDE_RUNTIME).set(true) @TO@ ExpressionStatement@@MethodInvocation:mExt.get(INCLUDE_RUNTIME).set(true) @AT@ 6648 @LENGTH@ 35
------INS MethodInvocation@@MethodName:get:[INCLUDE_RUNTIME] @TO@ MethodInvocation@@mExt.get(INCLUDE_RUNTIME).set(true) @AT@ 6648 @LENGTH@ 25
---------INS SimpleName@@INCLUDE_RUNTIME @TO@ MethodInvocation@@MethodName:get:[INCLUDE_RUNTIME] @AT@ 6657 @LENGTH@ 15
------INS SimpleName@@Name:mExt @TO@ MethodInvocation@@mExt.get(INCLUDE_RUNTIME).set(true) @AT@ 6648 @LENGTH@ 4
------INS SimpleName@@MethodName:set:[true] @TO@ MethodInvocation@@mExt.get(INCLUDE_RUNTIME).set(true) @AT@ 6674 @LENGTH@ 9
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:set:[true] @AT@ 6678 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:executorService.submit(new Callable<Exchange>(){
  public Exchange call() throws Exception {
    taskCount.increment();
    try {
      log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange);
      processor.process(wireTapExchange);
    }
 catch (    Throwable e) {
      log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",e);
    }
 finally {
      taskCount.decrement();
    }
    return wireTapExchange;
  }
}
) @TO@ MethodInvocation:executorService.submit(() -> {
  taskCount.increment();
  log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange);
  AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
    if (wireTapExchange.getException() != null) {
      log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
    }
    taskCount.decrement();
  }
);
}
) @AT@ 5135 @LENGTH@ 641
---UPD MethodInvocation@@executorService.submit(new Callable<Exchange>(){
  public Exchange call() throws Exception {
    taskCount.increment();
    try {
      log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange);
      processor.process(wireTapExchange);
    }
 catch (    Throwable e) {
      log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",e);
    }
 finally {
      taskCount.decrement();
    }
    return wireTapExchange;
  }
}
) @TO@ executorService.submit(() -> {
  taskCount.increment();
  log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange);
  AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
    if (wireTapExchange.getException() != null) {
      log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
    }
    taskCount.decrement();
  }
);
}
) @AT@ 5135 @LENGTH@ 640
------UPD SimpleName@@MethodName:submit:[new Callable<Exchange>(){
  public Exchange call() throws Exception {
    taskCount.increment();
    try {
      log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange);
      processor.process(wireTapExchange);
    }
 catch (    Throwable e) {
      log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",e);
    }
 finally {
      taskCount.decrement();
    }
    return wireTapExchange;
  }
}
] @TO@ MethodName:submit:[() -> {
  taskCount.increment();
  log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange);
  AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
    if (wireTapExchange.getException() != null) {
      log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
    }
    taskCount.decrement();
  }
);
}
] @AT@ 5151 @LENGTH@ 624
---------DEL ClassInstanceCreation@@Callable<Exchange>[] @AT@ 5158 @LENGTH@ 616
------------DEL New@@new @AT@ 5158 @LENGTH@ 3
------------DEL ParameterizedType@@Callable<Exchange> @AT@ 5162 @LENGTH@ 18
---------------DEL SimpleType@@Callable @AT@ 5162 @LENGTH@ 8
---------------DEL SimpleType@@Exchange @AT@ 5171 @LENGTH@ 8
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 5183 @LENGTH@ 591
---------------DEL MethodDeclaration@@public, Exchange, MethodName:call, Exception,  @AT@ 5197 @LENGTH@ 567
------------------DEL Modifier@@public @AT@ 5197 @LENGTH@ 6
------------------DEL SimpleType@@Exchange @AT@ 5204 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:call @AT@ 5213 @LENGTH@ 4
------------------DEL SimpleType@@Exception @AT@ 5227 @LENGTH@ 9
------------------DEL TryStatement@@try {  log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange);  processor.process(wireTapExchange);} catch (Throwable e) {  log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",e);} finally {  taskCount.decrement();} @AT@ 5294 @LENGTH@ 416
---------------------DEL ExpressionStatement@@MethodInvocation:processor.process(wireTapExchange) @AT@ 5397 @LENGTH@ 35
------------------------DEL MethodInvocation@@processor.process(wireTapExchange) @AT@ 5397 @LENGTH@ 34
---------------------------DEL SimpleName@@MethodName:process:[wireTapExchange] @AT@ 5407 @LENGTH@ 24
---------------------DEL CatchClause@@catch (Throwable e) {  log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",e);} @AT@ 5451 @LENGTH@ 188
------------------------DEL SingleVariableDeclaration@@Throwable e @AT@ 5458 @LENGTH@ 11
---------------------------DEL SimpleType@@Throwable @AT@ 5458 @LENGTH@ 9
---------------------------DEL SimpleName@@e @AT@ 5468 @LENGTH@ 1
------------------------DEL ExpressionStatement@@MethodInvocation:log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",e) @AT@ 5493 @LENGTH@ 128
---------------------DEL Block@@FinallyBody:{  taskCount.decrement();} @AT@ 5648 @LENGTH@ 62
------------------DEL ReturnStatement@@SimpleName:wireTapExchange @AT@ 5727 @LENGTH@ 23
---------------------DEL SimpleName@@wireTapExchange @AT@ 5734 @LENGTH@ 15
---------INS LambdaExpression@@() -> {
  taskCount.increment();
  log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange);
  AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
    if (wireTapExchange.getException() != null) {
      log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
    }
    taskCount.decrement();
  }
);
}
 @TO@ SimpleName@@MethodName:submit:[new Callable<Exchange>(){
  public Exchange call() throws Exception {
    taskCount.increment();
    try {
      log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange);
      processor.process(wireTapExchange);
    }
 catch (    Throwable e) {
      log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",e);
    }
 finally {
      taskCount.decrement();
    }
    return wireTapExchange;
  }
}
] @AT@ 5221 @LENGTH@ 570
------------MOV ExpressionStatement@@MethodInvocation:taskCount.increment() @TO@ LambdaExpression@@() -> {
  taskCount.increment();
  log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange);
  AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
    if (wireTapExchange.getException() != null) {
      log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
    }
    taskCount.decrement();
  }
);
}
 @AT@ 5255 @LENGTH@ 22
------------MOV ExpressionStatement@@MethodInvocation:log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange) @TO@ LambdaExpression@@() -> {
  taskCount.increment();
  log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange);
  AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
    if (wireTapExchange.getException() != null) {
      log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
    }
    taskCount.decrement();
  }
);
}
 @AT@ 5320 @LENGTH@ 56
------------INS ExpressionStatement@@MethodInvocation:AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
) @TO@ LambdaExpression@@() -> {
  taskCount.increment();
  log.debug(">>>> (wiretap) {} {}",uri,wireTapExchange);
  AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
    if (wireTapExchange.getException() != null) {
      log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
    }
    taskCount.decrement();
  }
);
}
 @AT@ 5357 @LENGTH@ 420
---------------INS MethodInvocation@@AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
) @TO@ ExpressionStatement@@MethodInvocation:AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
) @AT@ 5357 @LENGTH@ 419
------------------INS MethodInvocation@@MethodName:convert:[processor] @TO@ MethodInvocation@@AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
) @AT@ 5357 @LENGTH@ 48
---------------------MOV SimpleName@@Name:processor @TO@ MethodInvocation@@MethodName:convert:[processor] @AT@ 5397 @LENGTH@ 9
------------------INS SimpleName@@Name:AsyncProcessorConverterHelper @TO@ MethodInvocation@@AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
) @AT@ 5357 @LENGTH@ 29
------------------INS SimpleName@@MethodName:process:[wireTapExchange, doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
] @TO@ MethodInvocation@@AsyncProcessorConverterHelper.convert(processor).process(wireTapExchange,doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
) @AT@ 5406 @LENGTH@ 370
---------------------MOV SimpleName@@wireTapExchange @TO@ SimpleName@@MethodName:process:[wireTapExchange, doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
] @AT@ 5415 @LENGTH@ 15
---------------------INS LambdaExpression@@doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
 @TO@ SimpleName@@MethodName:process:[wireTapExchange, doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
] @AT@ 5431 @LENGTH@ 344
------------------------INS VariableDeclarationFragment@@doneSync @TO@ LambdaExpression@@doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
 @AT@ 5431 @LENGTH@ 8
---------------------------INS SimpleName@@doneSync @TO@ VariableDeclarationFragment@@doneSync @AT@ 5431 @LENGTH@ 8
------------------------INS IfStatement@@if (wireTapExchange.getException() != null) {  log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());} @TO@ LambdaExpression@@doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
 @AT@ 5465 @LENGTH@ 249
---------------------------INS InfixExpression@@wireTapExchange.getException() != null @TO@ IfStatement@@if (wireTapExchange.getException() != null) {  log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());} @AT@ 5469 @LENGTH@ 38
------------------------------INS MethodInvocation@@wireTapExchange.getException() @TO@ InfixExpression@@wireTapExchange.getException() != null @AT@ 5469 @LENGTH@ 30
---------------------------------INS SimpleName@@Name:wireTapExchange @TO@ MethodInvocation@@wireTapExchange.getException() @AT@ 5469 @LENGTH@ 15
---------------------------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@wireTapExchange.getException() @AT@ 5485 @LENGTH@ 14
------------------------------INS Operator@@!= @TO@ InfixExpression@@wireTapExchange.getException() != null @AT@ 5499 @LENGTH@ 2
------------------------------INS NullLiteral@@null @TO@ InfixExpression@@wireTapExchange.getException() != null @AT@ 5503 @LENGTH@ 4
---------------------------INS Block@@ThenBody:{  log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());} @TO@ IfStatement@@if (wireTapExchange.getException() != null) {  log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());} @AT@ 5509 @LENGTH@ 205
------------------------------INS ExpressionStatement@@MethodInvocation:log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException()) @TO@ Block@@ThenBody:{  log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());} @AT@ 5535 @LENGTH@ 157
---------------------------------MOV MethodInvocation@@log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",e) @TO@ ExpressionStatement@@MethodInvocation:log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException()) @AT@ 5493 @LENGTH@ 127
------------------------------------UPD SimpleName@@MethodName:warn:["Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.", e] @TO@ MethodName:warn:["Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.", wireTapExchange.getException()] @AT@ 5497 @LENGTH@ 123
---------------------------------------DEL SimpleName@@e @AT@ 5618 @LENGTH@ 1
---------------------------------------INS MethodInvocation@@wireTapExchange.getException() @TO@ SimpleName@@MethodName:warn:["Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.", e] @AT@ 5660 @LENGTH@ 30
------------------------------------------INS SimpleName@@Name:wireTapExchange @TO@ MethodInvocation@@wireTapExchange.getException() @AT@ 5660 @LENGTH@ 15
------------------------------------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@wireTapExchange.getException() @AT@ 5676 @LENGTH@ 14
------------------------MOV ExpressionStatement@@MethodInvocation:taskCount.decrement() @TO@ LambdaExpression@@doneSync -> {
  if (wireTapExchange.getException() != null) {
    log.warn("Error occurred during processing " + wireTapExchange + " wiretap to "+ uri+ ". This exception will be ignored.",wireTapExchange.getException());
  }
  taskCount.decrement();
}
 @AT@ 5670 @LENGTH@ 22


UPD VariableDeclarationStatement@@Endpoint answer=new SpringIntegrationEndpoint("spring-integration://" + channel.toString(),channel,null); @TO@ Endpoint answer=new SpringIntegrationEndpoint("spring-integration://" + channel.toString(),channel.toString(),null); @AT@ 1704 @LENGTH@ 109
---UPD VariableDeclarationFragment@@answer=new SpringIntegrationEndpoint("spring-integration://" + channel.toString(),channel,null) @TO@ answer=new SpringIntegrationEndpoint("spring-integration://" + channel.toString(),channel.toString(),null) @AT@ 1713 @LENGTH@ 99
------UPD ClassInstanceCreation@@SpringIntegrationEndpoint["spring-integration://" + channel.toString(), channel, null] @TO@ SpringIntegrationEndpoint["spring-integration://" + channel.toString(), channel.toString(), null] @AT@ 1722 @LENGTH@ 90
---------DEL SimpleName@@channel @AT@ 1798 @LENGTH@ 7
---------INS MethodInvocation@@channel.toString() @TO@ ClassInstanceCreation@@SpringIntegrationEndpoint["spring-integration://" + channel.toString(), channel, null] @AT@ 1799 @LENGTH@ 18
------------INS SimpleName@@Name:channel @TO@ MethodInvocation@@channel.toString() @AT@ 1799 @LENGTH@ 7
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@channel.toString() @AT@ 1807 @LENGTH@ 10


UPD FieldDeclaration@@private, static, final, Log, [LOG=LogFactory.getLog(JMXJsonServlet.class)] @TO@ private, static, final, Log, [LOG=LogFactory.getLog(LlapServlet.class)] @AT@ 1421 @LENGTH@ 71
---UPD VariableDeclarationFragment@@LOG=LogFactory.getLog(JMXJsonServlet.class) @TO@ LOG=LogFactory.getLog(LlapServlet.class) @AT@ 1446 @LENGTH@ 45
------UPD MethodInvocation@@LogFactory.getLog(JMXJsonServlet.class) @TO@ LogFactory.getLog(LlapServlet.class) @AT@ 1452 @LENGTH@ 39
---------UPD SimpleName@@MethodName:getLog:[JMXJsonServlet.class] @TO@ MethodName:getLog:[LlapServlet.class] @AT@ 1463 @LENGTH@ 28
------------UPD TypeLiteral@@JMXJsonServlet.class @TO@ LlapServlet.class @AT@ 1470 @LENGTH@ 20


UPD FieldDeclaration@@private, static, final, String, [GET_RUNNING_EXECUTIONS="SELECT E.JOB_EXECUTION_ID, E.START_TIME, E.END_TIME, E.STATUS, E.EXIT_CODE, E.EXIT_MESSAGE, E.CREATE_TIME, E.LAST_UPDATED, E.VERSION, " + "E.JOB_INSTANCE_ID, E.JOB_CONFIGURATION_LOCATION from %PREFIX%JOB_EXECUTION E, %PREFIX%JOB_INSTANCE I where E.JOB_INSTANCE_ID=I.JOB_INSTANCE_ID and I.JOB_NAME=? and E.END_TIME is NULL order by E.JOB_EXECUTION_ID desc"] @TO@ private, static, final, String, [GET_RUNNING_EXECUTIONS="SELECT E.JOB_EXECUTION_ID, E.START_TIME, E.END_TIME, E.STATUS, E.EXIT_CODE, E.EXIT_MESSAGE, E.CREATE_TIME, E.LAST_UPDATED, E.VERSION, " + "E.JOB_INSTANCE_ID, E.JOB_CONFIGURATION_LOCATION from %PREFIX%JOB_EXECUTION E, %PREFIX%JOB_INSTANCE I where E.JOB_INSTANCE_ID=I.JOB_INSTANCE_ID and I.JOB_NAME=? and E.START_TIME is not NULL and E.END_TIME is NULL order by E.JOB_EXECUTION_ID desc"] @AT@ 4409 @LENGTH@ 413
---UPD VariableDeclarationFragment@@GET_RUNNING_EXECUTIONS="SELECT E.JOB_EXECUTION_ID, E.START_TIME, E.END_TIME, E.STATUS, E.EXIT_CODE, E.EXIT_MESSAGE, E.CREATE_TIME, E.LAST_UPDATED, E.VERSION, " + "E.JOB_INSTANCE_ID, E.JOB_CONFIGURATION_LOCATION from %PREFIX%JOB_EXECUTION E, %PREFIX%JOB_INSTANCE I where E.JOB_INSTANCE_ID=I.JOB_INSTANCE_ID and I.JOB_NAME=? and E.END_TIME is NULL order by E.JOB_EXECUTION_ID desc" @TO@ GET_RUNNING_EXECUTIONS="SELECT E.JOB_EXECUTION_ID, E.START_TIME, E.END_TIME, E.STATUS, E.EXIT_CODE, E.EXIT_MESSAGE, E.CREATE_TIME, E.LAST_UPDATED, E.VERSION, " + "E.JOB_INSTANCE_ID, E.JOB_CONFIGURATION_LOCATION from %PREFIX%JOB_EXECUTION E, %PREFIX%JOB_INSTANCE I where E.JOB_INSTANCE_ID=I.JOB_INSTANCE_ID and I.JOB_NAME=? and E.START_TIME is not NULL and E.END_TIME is NULL order by E.JOB_EXECUTION_ID desc" @AT@ 4437 @LENGTH@ 384
------UPD InfixExpression@@"SELECT E.JOB_EXECUTION_ID, E.START_TIME, E.END_TIME, E.STATUS, E.EXIT_CODE, E.EXIT_MESSAGE, E.CREATE_TIME, E.LAST_UPDATED, E.VERSION, " + "E.JOB_INSTANCE_ID, E.JOB_CONFIGURATION_LOCATION from %PREFIX%JOB_EXECUTION E, %PREFIX%JOB_INSTANCE I where E.JOB_INSTANCE_ID=I.JOB_INSTANCE_ID and I.JOB_NAME=? and E.END_TIME is NULL order by E.JOB_EXECUTION_ID desc" @TO@ "SELECT E.JOB_EXECUTION_ID, E.START_TIME, E.END_TIME, E.STATUS, E.EXIT_CODE, E.EXIT_MESSAGE, E.CREATE_TIME, E.LAST_UPDATED, E.VERSION, " + "E.JOB_INSTANCE_ID, E.JOB_CONFIGURATION_LOCATION from %PREFIX%JOB_EXECUTION E, %PREFIX%JOB_INSTANCE I where E.JOB_INSTANCE_ID=I.JOB_INSTANCE_ID and I.JOB_NAME=? and E.START_TIME is not NULL and E.END_TIME is NULL order by E.JOB_EXECUTION_ID desc" @AT@ 4462 @LENGTH@ 359
---------UPD StringLiteral@@"E.JOB_INSTANCE_ID, E.JOB_CONFIGURATION_LOCATION from %PREFIX%JOB_EXECUTION E, %PREFIX%JOB_INSTANCE I where E.JOB_INSTANCE_ID=I.JOB_INSTANCE_ID and I.JOB_NAME=? and E.END_TIME is NULL order by E.JOB_EXECUTION_ID desc" @TO@ "E.JOB_INSTANCE_ID, E.JOB_CONFIGURATION_LOCATION from %PREFIX%JOB_EXECUTION E, %PREFIX%JOB_INSTANCE I where E.JOB_INSTANCE_ID=I.JOB_INSTANCE_ID and I.JOB_NAME=? and E.START_TIME is not NULL and E.END_TIME is NULL order by E.JOB_EXECUTION_ID desc" @AT@ 4604 @LENGTH@ 217


INS MethodDeclaration@@public, static, boolean, MethodName:isTransactionActive, MongoDbFactory dbFactory,  @TO@ TypeDeclaration@@[public]MongoDatabaseUtils,  @AT@ 6356 @LENGTH@ 378
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTransactionActive, MongoDbFactory dbFactory,  @AT@ 6356 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTransactionActive, MongoDbFactory dbFactory,  @AT@ 6363 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTransactionActive, MongoDbFactory dbFactory,  @AT@ 6370 @LENGTH@ 7
---INS SimpleName@@MethodName:isTransactionActive @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTransactionActive, MongoDbFactory dbFactory,  @AT@ 6378 @LENGTH@ 19
---INS SingleVariableDeclaration@@MongoDbFactory dbFactory @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTransactionActive, MongoDbFactory dbFactory,  @AT@ 6398 @LENGTH@ 24
------INS SimpleType@@MongoDbFactory @TO@ SingleVariableDeclaration@@MongoDbFactory dbFactory @AT@ 6398 @LENGTH@ 14
------INS SimpleName@@dbFactory @TO@ SingleVariableDeclaration@@MongoDbFactory dbFactory @AT@ 6413 @LENGTH@ 9
---INS IfStatement@@if (dbFactory.isTransactionActive()) {  return true;} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTransactionActive, MongoDbFactory dbFactory,  @AT@ 6429 @LENGTH@ 58
------INS MethodInvocation@@dbFactory.isTransactionActive() @TO@ IfStatement@@if (dbFactory.isTransactionActive()) {  return true;} @AT@ 6433 @LENGTH@ 31
---------INS SimpleName@@Name:dbFactory @TO@ MethodInvocation@@dbFactory.isTransactionActive() @AT@ 6433 @LENGTH@ 9
---------INS SimpleName@@MethodName:isTransactionActive:[] @TO@ MethodInvocation@@dbFactory.isTransactionActive() @AT@ 6443 @LENGTH@ 21
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (dbFactory.isTransactionActive()) {  return true;} @AT@ 6466 @LENGTH@ 21
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 6471 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 6478 @LENGTH@ 4
---INS VariableDeclarationStatement@@MongoResourceHolder resourceHolder=(MongoResourceHolder)TransactionSynchronizationManager.getResource(dbFactory); @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTransactionActive, MongoDbFactory dbFactory,  @AT@ 6491 @LENGTH@ 116
------INS SimpleType@@MongoResourceHolder @TO@ VariableDeclarationStatement@@MongoResourceHolder resourceHolder=(MongoResourceHolder)TransactionSynchronizationManager.getResource(dbFactory); @AT@ 6491 @LENGTH@ 19
------INS VariableDeclarationFragment@@resourceHolder=(MongoResourceHolder)TransactionSynchronizationManager.getResource(dbFactory) @TO@ VariableDeclarationStatement@@MongoResourceHolder resourceHolder=(MongoResourceHolder)TransactionSynchronizationManager.getResource(dbFactory); @AT@ 6511 @LENGTH@ 95
---------INS SimpleName@@resourceHolder @TO@ VariableDeclarationFragment@@resourceHolder=(MongoResourceHolder)TransactionSynchronizationManager.getResource(dbFactory) @AT@ 6511 @LENGTH@ 14
---------INS CastExpression@@(MongoResourceHolder)TransactionSynchronizationManager.getResource(dbFactory) @TO@ VariableDeclarationFragment@@resourceHolder=(MongoResourceHolder)TransactionSynchronizationManager.getResource(dbFactory) @AT@ 6528 @LENGTH@ 78
------------INS SimpleType@@MongoResourceHolder @TO@ CastExpression@@(MongoResourceHolder)TransactionSynchronizationManager.getResource(dbFactory) @AT@ 6529 @LENGTH@ 19
------------INS MethodInvocation@@TransactionSynchronizationManager.getResource(dbFactory) @TO@ CastExpression@@(MongoResourceHolder)TransactionSynchronizationManager.getResource(dbFactory) @AT@ 6550 @LENGTH@ 56
---------------INS SimpleName@@Name:TransactionSynchronizationManager @TO@ MethodInvocation@@TransactionSynchronizationManager.getResource(dbFactory) @AT@ 6550 @LENGTH@ 33
---------------INS SimpleName@@MethodName:getResource:[dbFactory] @TO@ MethodInvocation@@TransactionSynchronizationManager.getResource(dbFactory) @AT@ 6584 @LENGTH@ 22
------------------INS SimpleName@@dbFactory @TO@ SimpleName@@MethodName:getResource:[dbFactory] @AT@ 6596 @LENGTH@ 9
---INS ReturnStatement@@InfixExpression:resourceHolder != null && (resourceHolder.hasSession() && resourceHolder.getSession().hasActiveTransaction()) @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTransactionActive, MongoDbFactory dbFactory,  @AT@ 6610 @LENGTH@ 121
------INS InfixExpression@@resourceHolder != null && (resourceHolder.hasSession() && resourceHolder.getSession().hasActiveTransaction()) @TO@ ReturnStatement@@InfixExpression:resourceHolder != null && (resourceHolder.hasSession() && resourceHolder.getSession().hasActiveTransaction()) @AT@ 6617 @LENGTH@ 113
---------INS InfixExpression@@resourceHolder != null @TO@ InfixExpression@@resourceHolder != null && (resourceHolder.hasSession() && resourceHolder.getSession().hasActiveTransaction()) @AT@ 6617 @LENGTH@ 22
------------INS SimpleName@@resourceHolder @TO@ InfixExpression@@resourceHolder != null @AT@ 6617 @LENGTH@ 14
------------INS Operator@@!= @TO@ InfixExpression@@resourceHolder != null @AT@ 6631 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@resourceHolder != null @AT@ 6635 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@resourceHolder != null && (resourceHolder.hasSession() && resourceHolder.getSession().hasActiveTransaction()) @AT@ 6639 @LENGTH@ 2
---------INS ParenthesizedExpression@@(resourceHolder.hasSession() && resourceHolder.getSession().hasActiveTransaction()) @TO@ InfixExpression@@resourceHolder != null && (resourceHolder.hasSession() && resourceHolder.getSession().hasActiveTransaction()) @AT@ 6647 @LENGTH@ 83
------------INS InfixExpression@@resourceHolder.hasSession() && resourceHolder.getSession().hasActiveTransaction() @TO@ ParenthesizedExpression@@(resourceHolder.hasSession() && resourceHolder.getSession().hasActiveTransaction()) @AT@ 6648 @LENGTH@ 81
---------------INS MethodInvocation@@resourceHolder.hasSession() @TO@ InfixExpression@@resourceHolder.hasSession() && resourceHolder.getSession().hasActiveTransaction() @AT@ 6648 @LENGTH@ 27
------------------INS SimpleName@@Name:resourceHolder @TO@ MethodInvocation@@resourceHolder.hasSession() @AT@ 6648 @LENGTH@ 14
------------------INS SimpleName@@MethodName:hasSession:[] @TO@ MethodInvocation@@resourceHolder.hasSession() @AT@ 6663 @LENGTH@ 12
---------------INS Operator@@&& @TO@ InfixExpression@@resourceHolder.hasSession() && resourceHolder.getSession().hasActiveTransaction() @AT@ 6675 @LENGTH@ 2
---------------INS MethodInvocation@@resourceHolder.getSession().hasActiveTransaction() @TO@ InfixExpression@@resourceHolder.hasSession() && resourceHolder.getSession().hasActiveTransaction() @AT@ 6679 @LENGTH@ 50
------------------INS MethodInvocation@@MethodName:getSession:[] @TO@ MethodInvocation@@resourceHolder.getSession().hasActiveTransaction() @AT@ 6679 @LENGTH@ 27
------------------INS SimpleName@@Name:resourceHolder @TO@ MethodInvocation@@resourceHolder.getSession().hasActiveTransaction() @AT@ 6679 @LENGTH@ 14
------------------INS SimpleName@@MethodName:hasActiveTransaction:[] @TO@ MethodInvocation@@resourceHolder.getSession().hasActiveTransaction() @AT@ 6707 @LENGTH@ 22


UPD IfStatement@@if (!inV2.isNull[0]) {  outV.setConcat(i,vector1[0],start1[0],len1[0],vector2[i],start2[i],len2[i]);} @TO@ if (!inV2.isNull[i]) {  outV.setConcat(i,vector1[0],start1[0],len1[0],vector2[i],start2[i],len2[i]);} @AT@ 4336 @LENGTH@ 133
---UPD PrefixExpression@@!inV2.isNull[0] @TO@ !inV2.isNull[i] @AT@ 4340 @LENGTH@ 15
------UPD ArrayAccess@@inV2.isNull[0] @TO@ inV2.isNull[i] @AT@ 4341 @LENGTH@ 14
---------DEL NumberLiteral@@0 @AT@ 4353 @LENGTH@ 1
---------INS SimpleName@@i @TO@ ArrayAccess@@inV2.isNull[0] @AT@ 4353 @LENGTH@ 1


UPD ThrowStatement@@MethodInvocation:ObjectHelper.wrapRuntimeCamelException(e) @TO@ MethodInvocation:RuntimeCamelException.wrapRuntimeCamelException(e) @AT@ 1944 @LENGTH@ 48
---UPD MethodInvocation@@ObjectHelper.wrapRuntimeCamelException(e) @TO@ RuntimeCamelException.wrapRuntimeCamelException(e) @AT@ 1950 @LENGTH@ 41
------UPD SimpleName@@Name:ObjectHelper @TO@ Name:RuntimeCamelException @AT@ 1950 @LENGTH@ 12


INS MethodDeclaration@@List<Person>, MethodName:findByFirstnameRegex, Pattern pattern,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QuerydslPredicateExecutor<Person>] @AT@ 10633 @LENGTH@ 38
---INS ParameterizedType@@List<Person> @TO@ MethodDeclaration@@List<Person>, MethodName:findByFirstnameRegex, Pattern pattern,  @AT@ 10620 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 10620 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 10625 @LENGTH@ 6
---INS SimpleName@@MethodName:findByFirstnameRegex @TO@ MethodDeclaration@@List<Person>, MethodName:findByFirstnameRegex, Pattern pattern,  @AT@ 10633 @LENGTH@ 20
---INS SingleVariableDeclaration@@Pattern pattern @TO@ MethodDeclaration@@List<Person>, MethodName:findByFirstnameRegex, Pattern pattern,  @AT@ 10654 @LENGTH@ 15
------INS SimpleType@@Pattern @TO@ SingleVariableDeclaration@@Pattern pattern @AT@ 10654 @LENGTH@ 7
------INS SimpleName@@pattern @TO@ SingleVariableDeclaration@@Pattern pattern @AT@ 10662 @LENGTH@ 7


UPD FieldDeclaration@@private, static, final, String, [VALID_CHARS=".,-='/\\!&%():;"] @TO@ private, static, final, String, [VALID_CHARS=".,-='/\\!&%():;#"] @AT@ 1253 @LENGTH@ 60
---UPD VariableDeclarationFragment@@VALID_CHARS=".,-='/\\!&%():;" @TO@ VALID_CHARS=".,-='/\\!&%():;#" @AT@ 1281 @LENGTH@ 31
------UPD StringLiteral@@".,-='/\\!&%():;" @TO@ ".,-='/\\!&%():;#" @AT@ 1295 @LENGTH@ 17


UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> roots=a.getRootTasks(); @TO@ List<Task<?>> roots=a.getRootTasks(); @AT@ 3095 @LENGTH@ 60
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 3095 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3100 @LENGTH@ 28


INS MethodDeclaration@@public, Long, MethodName:ttl,  @TO@ TypeDeclaration@@[@Configurable("swarm.topology.consul"), public]ConsulTopologyFraction, [Fraction<ConsulTopologyFraction>] @AT@ 2402 @LENGTH@ 56
---INS Modifier@@public @TO@ MethodDeclaration@@public, Long, MethodName:ttl,  @AT@ 2402 @LENGTH@ 6
---INS SimpleType@@Long @TO@ MethodDeclaration@@public, Long, MethodName:ttl,  @AT@ 2409 @LENGTH@ 4
---INS SimpleName@@MethodName:ttl @TO@ MethodDeclaration@@public, Long, MethodName:ttl,  @AT@ 2414 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:this.ttl.get() @TO@ MethodDeclaration@@public, Long, MethodName:ttl,  @AT@ 2430 @LENGTH@ 22
------INS MethodInvocation@@this.ttl.get() @TO@ ReturnStatement@@MethodInvocation:this.ttl.get() @AT@ 2437 @LENGTH@ 14
---------INS FieldAccess@@this.ttl @TO@ MethodInvocation@@this.ttl.get() @AT@ 2437 @LENGTH@ 8
------------INS ThisExpression@@this @TO@ FieldAccess@@this.ttl @AT@ 2437 @LENGTH@ 4
------------INS SimpleName@@ttl @TO@ FieldAccess@@this.ttl @AT@ 2442 @LENGTH@ 3
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@this.ttl.get() @AT@ 2446 @LENGTH@ 5


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3857 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3877 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 3887 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3887 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3929 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 3936 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3936 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3946 @LENGTH@ 1


UPD TypeDeclaration@@[public]MessageSourcePollerInterceptor, ChannelInterceptorAdapter[InitializingBean] @TO@ [public]MessageSourcePollerInterceptor, [ChannelInterceptor, InitializingBean] @AT@ 1003 @LENGTH@ 1842
---UPD SimpleType@@ChannelInterceptorAdapter @TO@ ChannelInterceptor @AT@ 1055 @LENGTH@ 25


UPD MethodDeclaration@@voidMethodName:ClusteredCacheServiceHandler, ResourceServiceBuilderFactory<Configuration> builderFactory,  @TO@ voidMethodName:ClusteredCacheServiceHandler, ResourceServiceConfiguratorFactory configuratorFactory,  @AT@ 1398 @LENGTH@ 179
---UPD SingleVariableDeclaration@@ResourceServiceBuilderFactory<Configuration> builderFactory @TO@ ResourceServiceConfiguratorFactory configuratorFactory @AT@ 1427 @LENGTH@ 59
------INS SimpleType@@ResourceServiceConfiguratorFactory @TO@ SingleVariableDeclaration@@ResourceServiceBuilderFactory<Configuration> builderFactory @AT@ 1375 @LENGTH@ 34
------DEL ParameterizedType@@ResourceServiceBuilderFactory<Configuration> @AT@ 1427 @LENGTH@ 44
---------DEL SimpleType@@ResourceServiceBuilderFactory @AT@ 1427 @LENGTH@ 29
---------DEL SimpleType@@Configuration @AT@ 1457 @LENGTH@ 13
------UPD SimpleName@@builderFactory @TO@ configuratorFactory @AT@ 1472 @LENGTH@ 14
---UPD SuperConstructorInvocation@@super(builderFactory,DistributedCacheServiceConfiguratorProvider.class);
 @TO@ super(configuratorFactory,DistributedCacheServiceConfiguratorProvider.class);
 @AT@ 1498 @LENGTH@ 73
------UPD SimpleName@@builderFactory @TO@ configuratorFactory @AT@ 1504 @LENGTH@ 14


UPD MethodDeclaration@@voidMethodName:LegacyProtocolResourceDefinition, String name, String targetName, JGroupsModel deprecation, UnaryOperator<ResourceDescriptor> configurator, ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory,  @TO@ voidMethodName:LegacyProtocolResourceDefinition, String name, String targetName, JGroupsModel deprecation, UnaryOperator<ResourceDescriptor> configurator, ResourceServiceConfiguratorFactory parentServiceConfiguratorFactory,  @AT@ 3823 @LENGTH@ 392
---UPD SingleVariableDeclaration@@ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory @TO@ ResourceServiceConfiguratorFactory parentServiceConfiguratorFactory @AT@ 3962 @LENGTH@ 66
------INS SimpleType@@ResourceServiceConfiguratorFactory @TO@ SingleVariableDeclaration@@ResourceServiceBuilderFactory<ChannelFactory> parentBuilderFactory @AT@ 3851 @LENGTH@ 34
------DEL ParameterizedType@@ResourceServiceBuilderFactory<ChannelFactory> @AT@ 3962 @LENGTH@ 45
---------DEL SimpleType@@ResourceServiceBuilderFactory @AT@ 3962 @LENGTH@ 29
---------DEL SimpleType@@ChannelFactory @AT@ 3992 @LENGTH@ 14
------UPD SimpleName@@parentBuilderFactory @TO@ parentServiceConfiguratorFactory @AT@ 4008 @LENGTH@ 20
---UPD SuperConstructorInvocation@@super(pathElement(name),new ResourceDescriptorConfigurator(targetName,configurator),null,parentBuilderFactory);
 @TO@ super(pathElement(name),new ResourceDescriptorConfigurator(targetName,configurator),null,parentServiceConfiguratorFactory);
 @AT@ 4040 @LENGTH@ 115
------UPD SimpleName@@parentBuilderFactory @TO@ parentServiceConfiguratorFactory @AT@ 4133 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:CamelContextHelper.convertTo(getCamelContext(),type,value) @TO@ MethodInvocation:CamelContextHelper.mandatoryConvertTo(getCamelContext(),type,value) @AT@ 14765 @LENGTH@ 68
---UPD MethodInvocation@@CamelContextHelper.convertTo(getCamelContext(),type,value) @TO@ CamelContextHelper.mandatoryConvertTo(getCamelContext(),type,value) @AT@ 14772 @LENGTH@ 60
------UPD SimpleName@@MethodName:convertTo:[getCamelContext(), type, value] @TO@ MethodName:mandatoryConvertTo:[getCamelContext(), type, value] @AT@ 14791 @LENGTH@ 41


UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> rootTasks=analyzer.getRootTasks(); @TO@ List<Task<?>> rootTasks=analyzer.getRootTasks(); @AT@ 2008 @LENGTH@ 71
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2008 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2013 @LENGTH@ 28


UPD Block@@ElseBody:{  return cacheResult;} @TO@ ElseBody:{  context.setPropertyResolved(true);  return new ELClass((Class)cacheResult);} @AT@ 2563 @LENGTH@ 51
---INS ExpressionStatement@@MethodInvocation:context.setPropertyResolved(true) @TO@ Block@@ElseBody:{  return cacheResult;} @AT@ 2581 @LENGTH@ 34
------INS MethodInvocation@@context.setPropertyResolved(true) @TO@ ExpressionStatement@@MethodInvocation:context.setPropertyResolved(true) @AT@ 2581 @LENGTH@ 33
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.setPropertyResolved(true) @AT@ 2581 @LENGTH@ 7
---------INS SimpleName@@MethodName:setPropertyResolved:[true] @TO@ MethodInvocation@@context.setPropertyResolved(true) @AT@ 2589 @LENGTH@ 25
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setPropertyResolved:[true] @AT@ 2609 @LENGTH@ 4
---UPD ReturnStatement@@SimpleName:cacheResult @TO@ ClassInstanceCreation:new ELClass((Class)cacheResult) @AT@ 2581 @LENGTH@ 19
------DEL SimpleName@@cacheResult @AT@ 2588 @LENGTH@ 11
------INS ClassInstanceCreation@@ELClass[(Class)cacheResult] @TO@ ReturnStatement@@SimpleName:cacheResult @AT@ 2639 @LENGTH@ 32
---------INS New@@new @TO@ ClassInstanceCreation@@ELClass[(Class)cacheResult] @AT@ 2639 @LENGTH@ 3
---------INS SimpleType@@ELClass @TO@ ClassInstanceCreation@@ELClass[(Class)cacheResult] @AT@ 2643 @LENGTH@ 7
---------INS CastExpression@@(Class)cacheResult @TO@ ClassInstanceCreation@@ELClass[(Class)cacheResult] @AT@ 2651 @LENGTH@ 19
------------INS SimpleType@@Class @TO@ CastExpression@@(Class)cacheResult @AT@ 2652 @LENGTH@ 5
------------INS SimpleName@@cacheResult @TO@ CastExpression@@(Class)cacheResult @AT@ 2659 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:mongoOperations.getCollection(entityInformation.getCollectionName()).count() @TO@ MethodInvocation:mongoOperations.count(new Query(),entityInformation.getCollectionName()) @AT@ 4646 @LENGTH@ 84
---UPD MethodInvocation@@mongoOperations.getCollection(entityInformation.getCollectionName()).count() @TO@ mongoOperations.count(new Query(),entityInformation.getCollectionName()) @AT@ 4653 @LENGTH@ 76
------DEL MethodInvocation@@MethodName:getCollection:[entityInformation.getCollectionName()] @AT@ 4653 @LENGTH@ 68
---------DEL MethodInvocation@@entityInformation.getCollectionName() @AT@ 4683 @LENGTH@ 37
------INS SimpleName@@MethodName:count:[new Query(), entityInformation.getCollectionName()] @TO@ MethodInvocation@@mongoOperations.getCollection(entityInformation.getCollectionName()).count() @AT@ 4669 @LENGTH@ 57
---------INS ClassInstanceCreation@@Query[] @TO@ SimpleName@@MethodName:count:[new Query(), entityInformation.getCollectionName()] @AT@ 4675 @LENGTH@ 11
------------INS New@@new @TO@ ClassInstanceCreation@@Query[] @AT@ 4675 @LENGTH@ 3
------------INS SimpleType@@Query @TO@ ClassInstanceCreation@@Query[] @AT@ 4679 @LENGTH@ 5
---------INS MethodInvocation@@entityInformation.getCollectionName() @TO@ SimpleName@@MethodName:count:[new Query(), entityInformation.getCollectionName()] @AT@ 4688 @LENGTH@ 37
------------MOV SimpleName@@Name:entityInformation @TO@ MethodInvocation@@entityInformation.getCollectionName() @AT@ 4683 @LENGTH@ 17
------------MOV SimpleName@@MethodName:getCollectionName:[] @TO@ MethodInvocation@@entityInformation.getCollectionName() @AT@ 4701 @LENGTH@ 19
------DEL SimpleName@@MethodName:count:[] @AT@ 4722 @LENGTH@ 7


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5617 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5637 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 5619 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5647 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5661 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 5668 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5668 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 5678 @LENGTH@ 1


UPD MethodDeclaration@@protected, voidMethodName:CommandDispatcherFactoryServiceConfiguratorProvider, GroupCapabilityServiceBuilderFactory<CommandDispatcherFactory> factory,  @TO@ protected, voidMethodName:CommandDispatcherFactoryServiceConfiguratorProvider, GroupCapabilityServiceConfiguratorFactory<CommandDispatcherFactory> factory,  @AT@ 1749 @LENGTH@ 264
---UPD SingleVariableDeclaration@@GroupCapabilityServiceBuilderFactory<CommandDispatcherFactory> factory @TO@ GroupCapabilityServiceConfiguratorFactory<CommandDispatcherFactory> factory @AT@ 1811 @LENGTH@ 70
------UPD ParameterizedType@@GroupCapabilityServiceBuilderFactory<CommandDispatcherFactory> @TO@ GroupCapabilityServiceConfiguratorFactory<CommandDispatcherFactory> @AT@ 1811 @LENGTH@ 62
---------UPD SimpleType@@GroupCapabilityServiceBuilderFactory @TO@ GroupCapabilityServiceConfiguratorFactory @AT@ 1811 @LENGTH@ 36


UPD EnumDeclaration@@[public]ThreadPoolResourceDefinition, [ResourceDefinitionProvider, ThreadPoolDefinition, ResourceServiceBuilderFactory<ThreadPoolFactory>] @TO@ [public]ThreadPoolResourceDefinition, [ResourceDefinitionProvider, ThreadPoolDefinition, ResourceServiceConfiguratorFactory] @AT@ 2870 @LENGTH@ 6157
---DEL ParameterizedType@@ResourceServiceBuilderFactory<ThreadPoolFactory> @AT@ 2972 @LENGTH@ 48
------DEL SimpleType@@ResourceServiceBuilderFactory @AT@ 2972 @LENGTH@ 29
------DEL SimpleType@@ThreadPoolFactory @AT@ 3002 @LENGTH@ 17
---INS SimpleType@@ResourceServiceConfiguratorFactory @TO@ EnumDeclaration@@[public]ThreadPoolResourceDefinition, [ResourceDefinitionProvider, ThreadPoolDefinition, ResourceServiceBuilderFactory<ThreadPoolFactory>] @AT@ 2982 @LENGTH@ 34
---UPD MethodDeclaration@@public, ResourceServiceBuilder<ThreadPoolFactory>, MethodName:createBuilder, PathAddress address,  @TO@ public, ResourceServiceConfigurator, MethodName:createServiceConfigurator, PathAddress address,  @AT@ 7592 @LENGTH@ 151
------INS SimpleType@@ResourceServiceConfigurator @TO@ MethodDeclaration@@public, ResourceServiceBuilder<ThreadPoolFactory>, MethodName:createBuilder, PathAddress address,  @AT@ 7595 @LENGTH@ 27
------DEL ParameterizedType@@ResourceServiceBuilder<ThreadPoolFactory> @AT@ 7599 @LENGTH@ 41
---------DEL SimpleType@@ResourceServiceBuilder @AT@ 7599 @LENGTH@ 22
---------DEL SimpleType@@ThreadPoolFactory @AT@ 7622 @LENGTH@ 17
------UPD SimpleName@@MethodName:createBuilder @TO@ MethodName:createServiceConfigurator @AT@ 7641 @LENGTH@ 13
------UPD ReturnStatement@@ClassInstanceCreation:new ThreadPoolFactoryBuilder(this,address) @TO@ ClassInstanceCreation:new ThreadPoolFactoryServiceConfigurator(this,address) @AT@ 7686 @LENGTH@ 51
---------UPD ClassInstanceCreation@@ThreadPoolFactoryBuilder[this, address] @TO@ ThreadPoolFactoryServiceConfigurator[this, address] @AT@ 7693 @LENGTH@ 43
------------UPD SimpleType@@ThreadPoolFactoryBuilder @TO@ ThreadPoolFactoryServiceConfigurator @AT@ 7697 @LENGTH@ 24


INS MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @TO@ TypeDeclaration@@[@EnableWebSecurity, public]SecurityConfig, WebSecurityConfigurerAdapter @AT@ 1893 @LENGTH@ 220
---INS Modifier@@public @TO@ MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @AT@ 1893 @LENGTH@ 6
---INS SimpleType@@OAuth2AuthorizedClientRepository @TO@ MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @AT@ 1900 @LENGTH@ 32
---INS SimpleName@@MethodName:authorizedClientRepository @TO@ MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @AT@ 1933 @LENGTH@ 26
---INS SingleVariableDeclaration@@OAuth2AuthorizedClientService authorizedClientService @TO@ MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @AT@ 1960 @LENGTH@ 53
------INS SimpleType@@OAuth2AuthorizedClientService @TO@ SingleVariableDeclaration@@OAuth2AuthorizedClientService authorizedClientService @AT@ 1960 @LENGTH@ 29
------INS SimpleName@@authorizedClientService @TO@ SingleVariableDeclaration@@OAuth2AuthorizedClientService authorizedClientService @AT@ 1990 @LENGTH@ 23
---INS ReturnStatement@@ClassInstanceCreation:new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(authorizedClientService) @TO@ MethodDeclaration@@public, OAuth2AuthorizedClientRepository, MethodName:authorizedClientRepository, OAuth2AuthorizedClientService authorizedClientService,  @AT@ 2019 @LENGTH@ 91
------INS ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[authorizedClientService] @TO@ ReturnStatement@@ClassInstanceCreation:new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(authorizedClientService) @AT@ 2026 @LENGTH@ 83
---------INS New@@new @TO@ ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[authorizedClientService] @AT@ 2026 @LENGTH@ 3
---------INS SimpleType@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository @TO@ ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[authorizedClientService] @AT@ 2030 @LENGTH@ 54
---------INS SimpleName@@authorizedClientService @TO@ ClassInstanceCreation@@AuthenticatedPrincipalOAuth2AuthorizedClientRepository[authorizedClientService] @AT@ 2085 @LENGTH@ 23


INS VariableDeclarationStatement@@Map<String,Object> additionalParameters=accessTokenResponse.getAdditionalParameters(); @TO@ MethodDeclaration@@private, Mono<OAuth2AuthenticationToken>, MethodName:authenticationResult, OAuth2LoginAuthenticationToken authorizationCodeAuthentication, OAuth2AccessTokenResponse accessTokenResponse,  @AT@ 6156 @LENGTH@ 89
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> additionalParameters=accessTokenResponse.getAdditionalParameters(); @AT@ 6156 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 6156 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 6160 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 6168 @LENGTH@ 6
---INS VariableDeclarationFragment@@additionalParameters=accessTokenResponse.getAdditionalParameters() @TO@ VariableDeclarationStatement@@Map<String,Object> additionalParameters=accessTokenResponse.getAdditionalParameters(); @AT@ 6176 @LENGTH@ 68
------INS SimpleName@@additionalParameters @TO@ VariableDeclarationFragment@@additionalParameters=accessTokenResponse.getAdditionalParameters() @AT@ 6176 @LENGTH@ 20
------INS MethodInvocation@@accessTokenResponse.getAdditionalParameters() @TO@ VariableDeclarationFragment@@additionalParameters=accessTokenResponse.getAdditionalParameters() @AT@ 6199 @LENGTH@ 45
---------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getAdditionalParameters() @AT@ 6199 @LENGTH@ 19
---------INS SimpleName@@MethodName:getAdditionalParameters:[] @TO@ MethodInvocation@@accessTokenResponse.getAdditionalParameters() @AT@ 6219 @LENGTH@ 25


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(address -> new ScheduledThreadPoolBuilder(this,address)); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(address -> new ScheduledThreadPoolServiceConfigurator(this,address)); @AT@ 5366 @LENGTH@ 124
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(address -> new ScheduledThreadPoolBuilder(this,address)) @TO@ handler=new SimpleResourceServiceHandler(address -> new ScheduledThreadPoolServiceConfigurator(this,address)) @AT@ 5389 @LENGTH@ 100
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[address -> new ScheduledThreadPoolBuilder(this,address)] @TO@ SimpleResourceServiceHandler[address -> new ScheduledThreadPoolServiceConfigurator(this,address)] @AT@ 5399 @LENGTH@ 90
---------UPD LambdaExpression@@address -> new ScheduledThreadPoolBuilder(this,address) @TO@ address -> new ScheduledThreadPoolServiceConfigurator(this,address) @AT@ 5432 @LENGTH@ 56
------------UPD ClassInstanceCreation@@ScheduledThreadPoolBuilder[this, address] @TO@ ScheduledThreadPoolServiceConfigurator[this, address] @AT@ 5443 @LENGTH@ 45
---------------UPD SimpleType@@ScheduledThreadPoolBuilder @TO@ ScheduledThreadPoolServiceConfigurator @AT@ 5447 @LENGTH@ 26


UPD MethodDeclaration@@private, ReactiveMongoQueryExecution, MethodName:getExecution, Query query, MongoParameterAccessor accessor, Converter<Object,Object> resultProcessing, FindWithQuery<?> operation,  @TO@ private, ReactiveMongoQueryExecution, MethodName:getExecution, MongoParameterAccessor accessor, Converter<Object,Object> resultProcessing, FindWithQuery<?> operation,  @AT@ 5324 @LENGTH@ 273
---DEL SingleVariableDeclaration@@Query query @AT@ 5373 @LENGTH@ 11
------DEL SimpleType@@Query @AT@ 5373 @LENGTH@ 5
------DEL SimpleName@@query @AT@ 5379 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(headers.getAccept()).contains(MediaType.APPLICATION_JSON_UTF8) @TO@ MethodInvocation:assertThat(headers.getAccept()).contains(MediaType.APPLICATION_JSON) @AT@ 2433 @LENGTH@ 74
---UPD MethodInvocation@@assertThat(headers.getAccept()).contains(MediaType.APPLICATION_JSON_UTF8) @TO@ assertThat(headers.getAccept()).contains(MediaType.APPLICATION_JSON) @AT@ 2433 @LENGTH@ 73
------UPD SimpleName@@MethodName:contains:[MediaType.APPLICATION_JSON_UTF8] @TO@ MethodName:contains:[MediaType.APPLICATION_JSON] @AT@ 2465 @LENGTH@ 41
---------UPD QualifiedName@@MediaType.APPLICATION_JSON_UTF8 @TO@ MediaType.APPLICATION_JSON @AT@ 2474 @LENGTH@ 31
------------UPD SimpleName@@APPLICATION_JSON_UTF8 @TO@ APPLICATION_JSON @AT@ 2484 @LENGTH@ 21


UPD MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ protected, void, MethodName:doStart,  @AT@ 3847 @LENGTH@ 153
---DEL SimpleType@@Exception @AT@ 3879 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertTrue(cause.getMessage().startsWith("Cannot moved existing file")) @TO@ MethodInvocation:assertTrue(cause.getMessage().startsWith("Cannot move existing file")) @AT@ 6295 @LENGTH@ 72
---UPD MethodInvocation@@assertTrue(cause.getMessage().startsWith("Cannot moved existing file")) @TO@ assertTrue(cause.getMessage().startsWith("Cannot move existing file")) @AT@ 6295 @LENGTH@ 71
------UPD SimpleName@@MethodName:assertTrue:[cause.getMessage().startsWith("Cannot moved existing file")] @TO@ MethodName:assertTrue:[cause.getMessage().startsWith("Cannot move existing file")] @AT@ 6295 @LENGTH@ 71
---------UPD MethodInvocation@@cause.getMessage().startsWith("Cannot moved existing file") @TO@ cause.getMessage().startsWith("Cannot move existing file") @AT@ 6306 @LENGTH@ 59
------------UPD SimpleName@@MethodName:startsWith:["Cannot moved existing file"] @TO@ MethodName:startsWith:["Cannot move existing file"] @AT@ 6325 @LENGTH@ 40
---------------UPD StringLiteral@@"Cannot moved existing file" @TO@ "Cannot move existing file" @AT@ 6336 @LENGTH@ 28


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[private]JobParameterDeserializer, StdDeserializer<JobParameter> @AT@ 3779 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 3779 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 3787 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 3794 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 3800 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 3805 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 3805 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 3824 @LENGTH@ 2


UPD VariableDeclarationStatement@@CastorMarshaller unmarshaller=new CastorMarshaller(); @TO@ @SuppressWarnings("deprecation") org.springframework.oxm.castor.CastorMarshaller unmarshaller=new org.springframework.oxm.castor.CastorMarshaller(); @AT@ 984 @LENGTH@ 55
---UPD SimpleType@@CastorMarshaller @TO@ org.springframework.oxm.castor.CastorMarshaller @AT@ 984 @LENGTH@ 16
---UPD VariableDeclarationFragment@@unmarshaller=new CastorMarshaller() @TO@ unmarshaller=new org.springframework.oxm.castor.CastorMarshaller() @AT@ 1001 @LENGTH@ 37
------UPD ClassInstanceCreation@@CastorMarshaller[] @TO@ org.springframework.oxm.castor.CastorMarshaller[] @AT@ 1016 @LENGTH@ 22
---------UPD SimpleType@@CastorMarshaller @TO@ org.springframework.oxm.castor.CastorMarshaller @AT@ 1020 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:Assert.fail("Excepted EOFException.") @TO@ MethodInvocation:Assert.fail("Expected IOException.") @AT@ 11060 @LENGTH@ 38
---UPD MethodInvocation@@Assert.fail("Excepted EOFException.") @TO@ Assert.fail("Expected IOException.") @AT@ 11060 @LENGTH@ 37
------UPD SimpleName@@MethodName:fail:["Excepted EOFException."] @TO@ MethodName:fail:["Expected IOException."] @AT@ 11067 @LENGTH@ 30
---------UPD StringLiteral@@"Excepted EOFException." @TO@ "Expected IOException." @AT@ 11072 @LENGTH@ 24


DEL VariableDeclarationStatement@@boolean isRestrictedToOptions=consumer.getEndpoint().getHttpMethodRestrict() != null && consumer.getEndpoint().getHttpMethodRestrict().contains("OPTIONS"); @AT@ 4077 @LENGTH@ 173
---DEL PrimitiveType@@boolean @AT@ 4077 @LENGTH@ 7
---DEL VariableDeclarationFragment@@isRestrictedToOptions=consumer.getEndpoint().getHttpMethodRestrict() != null && consumer.getEndpoint().getHttpMethodRestrict().contains("OPTIONS") @AT@ 4085 @LENGTH@ 164
------DEL SimpleName@@isRestrictedToOptions @AT@ 4085 @LENGTH@ 21
------DEL InfixExpression@@consumer.getEndpoint().getHttpMethodRestrict() != null && consumer.getEndpoint().getHttpMethodRestrict().contains("OPTIONS") @AT@ 4109 @LENGTH@ 140
---------DEL InfixExpression@@consumer.getEndpoint().getHttpMethodRestrict() != null @AT@ 4109 @LENGTH@ 54
------------DEL MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 4109 @LENGTH@ 46
---------------DEL MethodInvocation@@MethodName:getEndpoint:[] @AT@ 4109 @LENGTH@ 22
---------------DEL SimpleName@@Name:consumer @AT@ 4109 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getHttpMethodRestrict:[] @AT@ 4132 @LENGTH@ 23
------------DEL Operator@@!= @AT@ 4155 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 4159 @LENGTH@ 4
---------DEL Operator@@&& @AT@ 4163 @LENGTH@ 2
---------DEL MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict().contains("OPTIONS") @AT@ 4183 @LENGTH@ 66
------------DEL MethodInvocation@@MethodName:getHttpMethodRestrict:[] @AT@ 4183 @LENGTH@ 46
------------DEL MethodInvocation@@MethodName:getEndpoint:[] @AT@ 4183 @LENGTH@ 22
------------DEL SimpleName@@Name:consumer @AT@ 4183 @LENGTH@ 8
------------DEL SimpleName@@MethodName:contains:["OPTIONS"] @AT@ 4230 @LENGTH@ 19
---------------DEL StringLiteral@@"OPTIONS" @AT@ 4239 @LENGTH@ 9


UPD EnhancedForStatement@@for (CacheAliasBuilderProvider provider : ServiceLoader.load(CacheAliasBuilderProvider.class,CacheAliasBuilderProvider.class.getClassLoader())) {  for (  CapabilityServiceBuilder<?> builder : provider.getBuilders(registry,name,null,defaultCache)) {    builder.configure(context).build(target).install();  }} @TO@ for (IdentityCacheServiceConfiguratorProvider provider : ServiceLoader.load(IdentityCacheServiceConfiguratorProvider.class,IdentityCacheServiceConfiguratorProvider.class.getClassLoader())) {  for (  CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(registry,name,null,defaultCache)) {    configurator.configure(context).build(target).install();  }} @AT@ 6661 @LENGTH@ 369
---UPD SingleVariableDeclaration@@CacheAliasBuilderProvider provider @TO@ IdentityCacheServiceConfiguratorProvider provider @AT@ 6666 @LENGTH@ 34
------UPD SimpleType@@CacheAliasBuilderProvider @TO@ IdentityCacheServiceConfiguratorProvider @AT@ 6666 @LENGTH@ 25
---UPD MethodInvocation@@ServiceLoader.load(CacheAliasBuilderProvider.class,CacheAliasBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(IdentityCacheServiceConfiguratorProvider.class,IdentityCacheServiceConfiguratorProvider.class.getClassLoader()) @AT@ 6703 @LENGTH@ 101
------UPD SimpleName@@MethodName:load:[CacheAliasBuilderProvider.class, CacheAliasBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[IdentityCacheServiceConfiguratorProvider.class, IdentityCacheServiceConfiguratorProvider.class.getClassLoader()] @AT@ 6717 @LENGTH@ 87
---------UPD TypeLiteral@@CacheAliasBuilderProvider.class @TO@ IdentityCacheServiceConfiguratorProvider.class @AT@ 6722 @LENGTH@ 31
---------UPD MethodInvocation@@CacheAliasBuilderProvider.class.getClassLoader() @TO@ IdentityCacheServiceConfiguratorProvider.class.getClassLoader() @AT@ 6755 @LENGTH@ 48
------------UPD TypeLiteral@@CacheAliasBuilderProvider.class @TO@ IdentityCacheServiceConfiguratorProvider.class @AT@ 6755 @LENGTH@ 31
---UPD EnhancedForStatement@@for (CapabilityServiceBuilder<?> builder : provider.getBuilders(registry,name,null,defaultCache)) {  builder.configure(context).build(target).install();} @TO@ for (CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(registry,name,null,defaultCache)) {  configurator.configure(context).build(target).install();} @AT@ 6824 @LENGTH@ 192
------UPD SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @TO@ CapabilityServiceConfigurator configurator @AT@ 6829 @LENGTH@ 35
---------DEL ParameterizedType@@CapabilityServiceBuilder<?> @AT@ 6829 @LENGTH@ 27
------------DEL SimpleType@@CapabilityServiceBuilder @AT@ 6829 @LENGTH@ 24
------------DEL WildcardType@@? @AT@ 6854 @LENGTH@ 1
---------UPD SimpleName@@builder @TO@ configurator @AT@ 6857 @LENGTH@ 7
---------INS SimpleType@@CapabilityServiceConfigurator @TO@ SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @AT@ 6894 @LENGTH@ 29
------UPD MethodInvocation@@provider.getBuilders(registry,name,null,defaultCache) @TO@ provider.getServiceConfigurators(registry,name,null,defaultCache) @AT@ 6867 @LENGTH@ 56
---------UPD SimpleName@@MethodName:getBuilders:[registry, name, null, defaultCache] @TO@ MethodName:getServiceConfigurators:[registry, name, null, defaultCache] @AT@ 6876 @LENGTH@ 47
------UPD ExpressionStatement@@MethodInvocation:builder.configure(context).build(target).install() @TO@ MethodInvocation:configurator.configure(context).build(target).install() @AT@ 6947 @LENGTH@ 51
---------UPD MethodInvocation@@builder.configure(context).build(target).install() @TO@ configurator.configure(context).build(target).install() @AT@ 6947 @LENGTH@ 50
------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 6947 @LENGTH@ 7


DEL MethodDeclaration@@public, void, MethodName:setBuilder, H http,  @AT@ 6273 @LENGTH@ 96
---DEL Modifier@@public @AT@ 6273 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 6280 @LENGTH@ 4
---DEL SimpleName@@MethodName:setBuilder @AT@ 6285 @LENGTH@ 10
---DEL SingleVariableDeclaration@@H http @AT@ 6296 @LENGTH@ 6
------DEL SimpleType@@H @AT@ 6296 @LENGTH@ 1
------DEL SimpleName@@http @AT@ 6298 @LENGTH@ 4
---DEL ExpressionStatement@@SuperMethodInvocation:super.setBuilder(http) @AT@ 6308 @LENGTH@ 23
------DEL SuperMethodInvocation@@super.setBuilder(http) @AT@ 6308 @LENGTH@ 22
---------DEL SimpleName@@MethodName:setBuilder:[http] @AT@ 6314 @LENGTH@ 10
---------DEL SimpleName@@http @AT@ 6325 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:initSessionCreationPolicy(http) @AT@ 6334 @LENGTH@ 32
------DEL MethodInvocation@@initSessionCreationPolicy(http) @AT@ 6334 @LENGTH@ 31
---------DEL SimpleName@@MethodName:initSessionCreationPolicy:[http] @AT@ 6334 @LENGTH@ 31
------------DEL SimpleName@@http @AT@ 6360 @LENGTH@ 4


UPD VariableDeclarationStatement@@String baseUrl=UriComponentsBuilder.fromHttpRequest(new ServerHttpRequestDecorator(request)).replacePath(request.getPath().contextPath().value()).build().toUriString(); @TO@ String baseUrl=UriComponentsBuilder.fromHttpRequest(new ServerHttpRequestDecorator(request)).replacePath(request.getPath().contextPath().value()).replaceQuery(null).build().toUriString(); @AT@ 10577 @LENGTH@ 185
---UPD VariableDeclarationFragment@@baseUrl=UriComponentsBuilder.fromHttpRequest(new ServerHttpRequestDecorator(request)).replacePath(request.getPath().contextPath().value()).build().toUriString() @TO@ baseUrl=UriComponentsBuilder.fromHttpRequest(new ServerHttpRequestDecorator(request)).replacePath(request.getPath().contextPath().value()).replaceQuery(null).build().toUriString() @AT@ 10584 @LENGTH@ 177
------UPD MethodInvocation@@UriComponentsBuilder.fromHttpRequest(new ServerHttpRequestDecorator(request)).replacePath(request.getPath().contextPath().value()).build().toUriString() @TO@ UriComponentsBuilder.fromHttpRequest(new ServerHttpRequestDecorator(request)).replacePath(request.getPath().contextPath().value()).replaceQuery(null).build().toUriString() @AT@ 10594 @LENGTH@ 167
---------INS MethodInvocation@@MethodName:replaceQuery:[null] @TO@ MethodInvocation@@UriComponentsBuilder.fromHttpRequest(new ServerHttpRequestDecorator(request)).replacePath(request.getPath().contextPath().value()).build().toUriString() @AT@ 10594 @LENGTH@ 159
------------INS NullLiteral@@null @TO@ MethodInvocation@@MethodName:replaceQuery:[null] @AT@ 10748 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:shouldEqualForSamePattern,  @TO@ TypeDeclaration@@[public]CriteriaUnitTests,  @AT@ 11290 @LENGTH@ 201
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldEqualForSamePattern,  @AT@ 11290 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldEqualForSamePattern,  @AT@ 11297 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldEqualForSamePattern @TO@ MethodDeclaration@@public, void, MethodName:shouldEqualForSamePattern,  @AT@ 11302 @LENGTH@ 25
---INS VariableDeclarationStatement@@Criteria left=new Criteria("field").regex("foo","iu"); @TO@ MethodDeclaration@@public, void, MethodName:shouldEqualForSamePattern,  @AT@ 11335 @LENGTH@ 57
------INS SimpleType@@Criteria @TO@ VariableDeclarationStatement@@Criteria left=new Criteria("field").regex("foo","iu"); @AT@ 11335 @LENGTH@ 8
------INS VariableDeclarationFragment@@left=new Criteria("field").regex("foo","iu") @TO@ VariableDeclarationStatement@@Criteria left=new Criteria("field").regex("foo","iu"); @AT@ 11344 @LENGTH@ 47
---------INS SimpleName@@left @TO@ VariableDeclarationFragment@@left=new Criteria("field").regex("foo","iu") @AT@ 11344 @LENGTH@ 4
---------INS MethodInvocation@@new Criteria("field").regex("foo","iu") @TO@ VariableDeclarationFragment@@left=new Criteria("field").regex("foo","iu") @AT@ 11351 @LENGTH@ 40
------------INS ClassInstanceCreation@@Criteria["field"] @TO@ MethodInvocation@@new Criteria("field").regex("foo","iu") @AT@ 11351 @LENGTH@ 21
---------------INS New@@new @TO@ ClassInstanceCreation@@Criteria["field"] @AT@ 11351 @LENGTH@ 3
---------------INS SimpleType@@Criteria @TO@ ClassInstanceCreation@@Criteria["field"] @AT@ 11355 @LENGTH@ 8
---------------INS StringLiteral@@"field" @TO@ ClassInstanceCreation@@Criteria["field"] @AT@ 11364 @LENGTH@ 7
------------INS SimpleName@@MethodName:regex:["foo", "iu"] @TO@ MethodInvocation@@new Criteria("field").regex("foo","iu") @AT@ 11373 @LENGTH@ 18
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:regex:["foo", "iu"] @AT@ 11379 @LENGTH@ 5
---------------INS StringLiteral@@"iu" @TO@ SimpleName@@MethodName:regex:["foo", "iu"] @AT@ 11386 @LENGTH@ 4
---INS VariableDeclarationStatement@@Criteria right=new Criteria("field").regex("foo"); @TO@ MethodDeclaration@@public, void, MethodName:shouldEqualForSamePattern,  @AT@ 11395 @LENGTH@ 52
------INS SimpleType@@Criteria @TO@ VariableDeclarationStatement@@Criteria right=new Criteria("field").regex("foo"); @AT@ 11395 @LENGTH@ 8
------INS VariableDeclarationFragment@@right=new Criteria("field").regex("foo") @TO@ VariableDeclarationStatement@@Criteria right=new Criteria("field").regex("foo"); @AT@ 11404 @LENGTH@ 42
---------INS SimpleName@@right @TO@ VariableDeclarationFragment@@right=new Criteria("field").regex("foo") @AT@ 11404 @LENGTH@ 5
---------INS MethodInvocation@@new Criteria("field").regex("foo") @TO@ VariableDeclarationFragment@@right=new Criteria("field").regex("foo") @AT@ 11412 @LENGTH@ 34
------------INS ClassInstanceCreation@@Criteria["field"] @TO@ MethodInvocation@@new Criteria("field").regex("foo") @AT@ 11412 @LENGTH@ 21
---------------INS New@@new @TO@ ClassInstanceCreation@@Criteria["field"] @AT@ 11412 @LENGTH@ 3
---------------INS SimpleType@@Criteria @TO@ ClassInstanceCreation@@Criteria["field"] @AT@ 11416 @LENGTH@ 8
---------------INS StringLiteral@@"field" @TO@ ClassInstanceCreation@@Criteria["field"] @AT@ 11425 @LENGTH@ 7
------------INS SimpleName@@MethodName:regex:["foo"] @TO@ MethodInvocation@@new Criteria("field").regex("foo") @AT@ 11434 @LENGTH@ 12
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:regex:["foo"] @AT@ 11440 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(left).isNotEqualTo(right) @TO@ MethodDeclaration@@public, void, MethodName:shouldEqualForSamePattern,  @AT@ 11451 @LENGTH@ 37
------INS MethodInvocation@@assertThat(left).isNotEqualTo(right) @TO@ ExpressionStatement@@MethodInvocation:assertThat(left).isNotEqualTo(right) @AT@ 11451 @LENGTH@ 36
---------INS MethodInvocation@@MethodName:assertThat:[left] @TO@ MethodInvocation@@assertThat(left).isNotEqualTo(right) @AT@ 11451 @LENGTH@ 16
------------INS SimpleName@@left @TO@ MethodInvocation@@MethodName:assertThat:[left] @AT@ 11462 @LENGTH@ 4
---------INS SimpleName@@MethodName:isNotEqualTo:[right] @TO@ MethodInvocation@@assertThat(left).isNotEqualTo(right) @AT@ 11468 @LENGTH@ 19
------------INS SimpleName@@right @TO@ SimpleName@@MethodName:isNotEqualTo:[right] @AT@ 11481 @LENGTH@ 5


UPD VariableDeclarationStatement@@List<String> interfaceResourcePaths=new ArrayList<String>(interfacesToImplement.length); @TO@ List<String> interfaceResourcePaths=new ArrayList<>(interfacesToImplement.length); @AT@ 5142 @LENGTH@ 90
---UPD VariableDeclarationFragment@@interfaceResourcePaths=new ArrayList<String>(interfacesToImplement.length) @TO@ interfaceResourcePaths=new ArrayList<>(interfacesToImplement.length) @AT@ 5155 @LENGTH@ 76
------UPD ClassInstanceCreation@@ArrayList<String>[interfacesToImplement.length] @TO@ ArrayList<>[interfacesToImplement.length] @AT@ 5180 @LENGTH@ 51
---------UPD ParameterizedType@@ArrayList<String> @TO@ ArrayList<> @AT@ 5184 @LENGTH@ 17
------------DEL SimpleType@@String @AT@ 5194 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().oauth2().client().authorizationCodeGrant().tokenEndpoint().accessTokenResponseClient(this.accessTokenResponseClient()) @TO@ MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().oauth2().client().authorizationCodeGrant().accessTokenResponseClient(this.accessTokenResponseClient()) @AT@ 7511 @LENGTH@ 231
---UPD MethodInvocation@@http.authorizeRequests().anyRequest().authenticated().and().oauth2().client().authorizationCodeGrant().tokenEndpoint().accessTokenResponseClient(this.accessTokenResponseClient()) @TO@ http.authorizeRequests().anyRequest().authenticated().and().oauth2().client().authorizationCodeGrant().accessTokenResponseClient(this.accessTokenResponseClient()) @AT@ 7511 @LENGTH@ 230
------DEL MethodInvocation@@MethodName:tokenEndpoint:[] @AT@ 7511 @LENGTH@ 161


UPD IfStatement@@if (authorizeSrcName(gssContext,identityCache)) {  log.trace("GSSContext established and authorized - authentication complete");  request.authenticationComplete(response -> sendChallenge(responseToken,response,0));  return;} else {  log.trace("Authorization of established GSSContext failed");  handleCallback(AuthenticationCompleteCallback.FAILED);  clearAttachments(storageScope);  request.authenticationFailed(log.authenticationFailed(SPNEGO_NAME),this::sendBareChallenge);  return;} @TO@ if (authorizeSrcName(gssContext,identityCache)) {  log.trace("GSSContext established and authorized - authentication complete");  request.authenticationComplete(responseToken == null ? null : response -> sendChallenge(responseToken,response,0));  return;} else {  log.trace("Authorization of established GSSContext failed");  handleCallback(AuthenticationCompleteCallback.FAILED);  clearAttachments(storageScope);  request.authenticationFailed(log.authenticationFailed(SPNEGO_NAME),responseToken == null ? null : response -> sendChallenge(responseToken,response,FORBIDDEN));  return;} @AT@ 12261 @LENGTH@ 677
---UPD Block@@ThenBody:{  log.trace("GSSContext established and authorized - authentication complete");  request.authenticationComplete(response -> sendChallenge(responseToken,response,0));  return;} @TO@ ThenBody:{  log.trace("GSSContext established and authorized - authentication complete");  request.authenticationComplete(responseToken == null ? null : response -> sendChallenge(responseToken,response,0));  return;} @AT@ 12310 @LENGTH@ 253
------UPD ExpressionStatement@@MethodInvocation:request.authenticationComplete(response -> sendChallenge(responseToken,response,0)) @TO@ MethodInvocation:request.authenticationComplete(responseToken == null ? null : response -> sendChallenge(responseToken,response,0)) @AT@ 12430 @LENGTH@ 86
---------UPD MethodInvocation@@request.authenticationComplete(response -> sendChallenge(responseToken,response,0)) @TO@ request.authenticationComplete(responseToken == null ? null : response -> sendChallenge(responseToken,response,0)) @AT@ 12430 @LENGTH@ 85
------------UPD SimpleName@@MethodName:authenticationComplete:[response -> sendChallenge(responseToken,response,0)] @TO@ MethodName:authenticationComplete:[responseToken == null ? null : response -> sendChallenge(responseToken,response,0)] @AT@ 12438 @LENGTH@ 77
---------------INS ConditionalExpression@@responseToken == null ? null : response -> sendChallenge(responseToken,response,0) @TO@ SimpleName@@MethodName:authenticationComplete:[response -> sendChallenge(responseToken,response,0)] @AT@ 12555 @LENGTH@ 84
------------------MOV LambdaExpression@@response -> sendChallenge(responseToken,response,0) @TO@ ConditionalExpression@@responseToken == null ? null : response -> sendChallenge(responseToken,response,0) @AT@ 12461 @LENGTH@ 53
------------------INS InfixExpression@@responseToken == null @TO@ ConditionalExpression@@responseToken == null ? null : response -> sendChallenge(responseToken,response,0) @AT@ 12555 @LENGTH@ 21
---------------------INS SimpleName@@responseToken @TO@ InfixExpression@@responseToken == null @AT@ 12555 @LENGTH@ 13
---------------------INS Operator@@== @TO@ InfixExpression@@responseToken == null @AT@ 12568 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@responseToken == null @AT@ 12572 @LENGTH@ 4
------------------INS NullLiteral@@null @TO@ ConditionalExpression@@responseToken == null ? null : response -> sendChallenge(responseToken,response,0) @AT@ 12579 @LENGTH@ 4
---UPD Block@@ElseBody:{  log.trace("Authorization of established GSSContext failed");  handleCallback(AuthenticationCompleteCallback.FAILED);  clearAttachments(storageScope);  request.authenticationFailed(log.authenticationFailed(SPNEGO_NAME),this::sendBareChallenge);  return;} @TO@ ElseBody:{  log.trace("Authorization of established GSSContext failed");  handleCallback(AuthenticationCompleteCallback.FAILED);  clearAttachments(storageScope);  request.authenticationFailed(log.authenticationFailed(SPNEGO_NAME),responseToken == null ? null : response -> sendChallenge(responseToken,response,FORBIDDEN));  return;} @AT@ 12569 @LENGTH@ 369
------UPD ExpressionStatement@@MethodInvocation:request.authenticationFailed(log.authenticationFailed(SPNEGO_NAME),this::sendBareChallenge) @TO@ MethodInvocation:request.authenticationFailed(log.authenticationFailed(SPNEGO_NAME),responseToken == null ? null : response -> sendChallenge(responseToken,response,FORBIDDEN)) @AT@ 12799 @LENGTH@ 93
---------UPD MethodInvocation@@request.authenticationFailed(log.authenticationFailed(SPNEGO_NAME),this::sendBareChallenge) @TO@ request.authenticationFailed(log.authenticationFailed(SPNEGO_NAME),responseToken == null ? null : response -> sendChallenge(responseToken,response,FORBIDDEN)) @AT@ 12799 @LENGTH@ 92
------------UPD SimpleName@@MethodName:authenticationFailed:[log.authenticationFailed(SPNEGO_NAME), this::sendBareChallenge] @TO@ MethodName:authenticationFailed:[log.authenticationFailed(SPNEGO_NAME), responseToken == null ? null : response -> sendChallenge(responseToken,response,FORBIDDEN)] @AT@ 12807 @LENGTH@ 84
---------------INS ConditionalExpression@@responseToken == null ? null : response -> sendChallenge(responseToken,response,FORBIDDEN) @TO@ SimpleName@@MethodName:authenticationFailed:[log.authenticationFailed(SPNEGO_NAME), this::sendBareChallenge] @AT@ 13019 @LENGTH@ 92
------------------INS InfixExpression@@responseToken == null @TO@ ConditionalExpression@@responseToken == null ? null : response -> sendChallenge(responseToken,response,FORBIDDEN) @AT@ 13019 @LENGTH@ 21
---------------------INS SimpleName@@responseToken @TO@ InfixExpression@@responseToken == null @AT@ 13019 @LENGTH@ 13
---------------------INS Operator@@== @TO@ InfixExpression@@responseToken == null @AT@ 13032 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@responseToken == null @AT@ 13036 @LENGTH@ 4
------------------INS NullLiteral@@null @TO@ ConditionalExpression@@responseToken == null ? null : response -> sendChallenge(responseToken,response,FORBIDDEN) @AT@ 13043 @LENGTH@ 4
------------------INS LambdaExpression@@response -> sendChallenge(responseToken,response,FORBIDDEN) @TO@ ConditionalExpression@@responseToken == null ? null : response -> sendChallenge(responseToken,response,FORBIDDEN) @AT@ 13050 @LENGTH@ 61
---------------------INS VariableDeclarationFragment@@response @TO@ LambdaExpression@@response -> sendChallenge(responseToken,response,FORBIDDEN) @AT@ 13050 @LENGTH@ 8
------------------------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response @AT@ 13050 @LENGTH@ 8
---------------------INS MethodInvocation@@sendChallenge(responseToken,response,FORBIDDEN) @TO@ LambdaExpression@@response -> sendChallenge(responseToken,response,FORBIDDEN) @AT@ 13062 @LENGTH@ 49
------------------------INS SimpleName@@MethodName:sendChallenge:[responseToken, response, FORBIDDEN] @TO@ MethodInvocation@@sendChallenge(responseToken,response,FORBIDDEN) @AT@ 13062 @LENGTH@ 49
---------------------------INS SimpleName@@responseToken @TO@ SimpleName@@MethodName:sendChallenge:[responseToken, response, FORBIDDEN] @AT@ 13076 @LENGTH@ 13
---------------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:sendChallenge:[responseToken, response, FORBIDDEN] @AT@ 13091 @LENGTH@ 8
---------------------------INS SimpleName@@FORBIDDEN @TO@ SimpleName@@MethodName:sendChallenge:[responseToken, response, FORBIDDEN] @AT@ 13101 @LENGTH@ 9


UPD FieldDeclaration@@private, static, ConcurrentReferenceHashMap<Class<?>,PersistenceProvider>, [CACHE=new ConcurrentReferenceHashMap<Class<?>,PersistenceProvider>()] @TO@ static, ConcurrentReferenceHashMap<Class<?>,PersistenceProvider>, [CACHE=new ConcurrentReferenceHashMap<Class<?>,PersistenceProvider>()] @AT@ 7407 @LENGTH@ 145
---DEL Modifier@@private @AT@ 7407 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertThat("Error message doesn't contains expected message information!",ex.getMessage(),allOf(containsString("WFLYCTL0216: Management resource"),containsString(sgOne),containsString(cliTestApp2War.getName()),containsString("not found"))) @TO@ MethodInvocation:assertThat("Error message doesn't contains expected message information!",ex.getMessage(),allOf(containsString("WFLYCTL0216:"),containsString(sgOne),containsString(cliTestApp2War.getName()))) @AT@ 17066 @LENGTH@ 369
---UPD MethodInvocation@@assertThat("Error message doesn't contains expected message information!",ex.getMessage(),allOf(containsString("WFLYCTL0216: Management resource"),containsString(sgOne),containsString(cliTestApp2War.getName()),containsString("not found"))) @TO@ assertThat("Error message doesn't contains expected message information!",ex.getMessage(),allOf(containsString("WFLYCTL0216:"),containsString(sgOne),containsString(cliTestApp2War.getName()))) @AT@ 17066 @LENGTH@ 368
------UPD SimpleName@@MethodName:assertThat:["Error message doesn't contains expected message information!", ex.getMessage(), allOf(containsString("WFLYCTL0216: Management resource"),containsString(sgOne),containsString(cliTestApp2War.getName()),containsString("not found"))] @TO@ MethodName:assertThat:["Error message doesn't contains expected message information!", ex.getMessage(), allOf(containsString("WFLYCTL0216:"),containsString(sgOne),containsString(cliTestApp2War.getName()))] @AT@ 17066 @LENGTH@ 368
---------UPD MethodInvocation@@allOf(containsString("WFLYCTL0216: Management resource"),containsString(sgOne),containsString(cliTestApp2War.getName()),containsString("not found")) @TO@ allOf(containsString("WFLYCTL0216:"),containsString(sgOne),containsString(cliTestApp2War.getName())) @AT@ 17198 @LENGTH@ 235
------------UPD SimpleName@@MethodName:allOf:[containsString("WFLYCTL0216: Management resource"), containsString(sgOne), containsString(cliTestApp2War.getName()), containsString("not found")] @TO@ MethodName:allOf:[containsString("WFLYCTL0216:"), containsString(sgOne), containsString(cliTestApp2War.getName())] @AT@ 17198 @LENGTH@ 235
---------------UPD MethodInvocation@@containsString("WFLYCTL0216: Management resource") @TO@ containsString("WFLYCTL0216:") @AT@ 17204 @LENGTH@ 50
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216:"] @AT@ 17204 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216:" @AT@ 17219 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216:"] @AT@ 17204 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216:" @AT@ 17219 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216:"] @AT@ 17204 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216:" @AT@ 17219 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216:"] @AT@ 17204 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216:" @AT@ 17219 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216:"] @AT@ 17204 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216:" @AT@ 17219 @LENGTH@ 34
---------------DEL MethodInvocation@@containsString("not found") @AT@ 17405 @LENGTH@ 27
------------------DEL SimpleName@@MethodName:containsString:["not found"] @AT@ 17405 @LENGTH@ 27
---------------------DEL StringLiteral@@"not found" @AT@ 17420 @LENGTH@ 11
------------UPD SimpleName@@MethodName:allOf:[containsString("WFLYCTL0216: Management resource"), containsString(sgOne), containsString(cliTestApp2War.getName()), containsString("not found")] @TO@ MethodName:allOf:[containsString("WFLYCTL0216:"), containsString(sgOne), containsString(cliTestApp2War.getName())] @AT@ 17198 @LENGTH@ 235
---------------UPD MethodInvocation@@containsString("WFLYCTL0216: Management resource") @TO@ containsString("WFLYCTL0216:") @AT@ 17204 @LENGTH@ 50
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216:"] @AT@ 17204 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216:" @AT@ 17219 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216:"] @AT@ 17204 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216:" @AT@ 17219 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216:"] @AT@ 17204 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216:" @AT@ 17219 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216:"] @AT@ 17204 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216:" @AT@ 17219 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:containsString:["WFLYCTL0216: Management resource"] @TO@ MethodName:containsString:["WFLYCTL0216:"] @AT@ 17204 @LENGTH@ 50
---------------------UPD StringLiteral@@"WFLYCTL0216: Management resource" @TO@ "WFLYCTL0216:" @AT@ 17219 @LENGTH@ 34
---------------DEL MethodInvocation@@containsString("not found") @AT@ 17405 @LENGTH@ 27
------------------DEL SimpleName@@MethodName:containsString:["not found"] @AT@ 17405 @LENGTH@ 27
---------------------DEL StringLiteral@@"not found" @AT@ 17420 @LENGTH@ 11


INS FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @TO@ TypeDeclaration@@[public]StringRTrim, StringUnaryUDFDirect @AT@ 1042 @LENGTH@ 54
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1042 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1050 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1057 @LENGTH@ 5
---INS ArrayType@@byte[] @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1063 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1063 @LENGTH@ 4
---INS VariableDeclarationFragment@@EMPTY_BYTES=new byte[0] @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1070 @LENGTH@ 25
------INS SimpleName@@EMPTY_BYTES @TO@ VariableDeclarationFragment@@EMPTY_BYTES=new byte[0] @AT@ 1070 @LENGTH@ 11
------INS ArrayCreation@@new byte[0] @TO@ VariableDeclarationFragment@@EMPTY_BYTES=new byte[0] @AT@ 1084 @LENGTH@ 11
---------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[0] @AT@ 1088 @LENGTH@ 7
------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1088 @LENGTH@ 4
---------INS NumberLiteral@@0 @TO@ ArrayCreation@@new byte[0] @AT@ 1093 @LENGTH@ 1


INS MethodDeclaration@@public, static, String, MethodName:generateTempTableLocation, Configuration conf, MetaException,  @TO@ TypeDeclaration@@[public]SessionState,  @AT@ 29597 @LENGTH@ 260
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:generateTempTableLocation, Configuration conf, MetaException,  @AT@ 29597 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:generateTempTableLocation, Configuration conf, MetaException,  @AT@ 29604 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:generateTempTableLocation, Configuration conf, MetaException,  @AT@ 29611 @LENGTH@ 6
---INS SimpleName@@MethodName:generateTempTableLocation @TO@ MethodDeclaration@@public, static, String, MethodName:generateTempTableLocation, Configuration conf, MetaException,  @AT@ 29618 @LENGTH@ 25
---INS SingleVariableDeclaration@@Configuration conf @TO@ MethodDeclaration@@public, static, String, MethodName:generateTempTableLocation, Configuration conf, MetaException,  @AT@ 29644 @LENGTH@ 18
------INS SimpleType@@Configuration @TO@ SingleVariableDeclaration@@Configuration conf @AT@ 29644 @LENGTH@ 13
------INS SimpleName@@conf @TO@ SingleVariableDeclaration@@Configuration conf @AT@ 29658 @LENGTH@ 4
---INS SimpleType@@MetaException @TO@ MethodDeclaration@@public, static, String, MethodName:generateTempTableLocation, Configuration conf, MetaException,  @AT@ 29671 @LENGTH@ 13
---INS VariableDeclarationStatement@@Path path=new Path(SessionState.getTempTableSpace(conf),UUID.randomUUID().toString()); @TO@ MethodDeclaration@@public, static, String, MethodName:generateTempTableLocation, Configuration conf, MetaException,  @AT@ 29691 @LENGTH@ 89
------INS SimpleType@@Path @TO@ VariableDeclarationStatement@@Path path=new Path(SessionState.getTempTableSpace(conf),UUID.randomUUID().toString()); @AT@ 29691 @LENGTH@ 4
------INS VariableDeclarationFragment@@path=new Path(SessionState.getTempTableSpace(conf),UUID.randomUUID().toString()) @TO@ VariableDeclarationStatement@@Path path=new Path(SessionState.getTempTableSpace(conf),UUID.randomUUID().toString()); @AT@ 29696 @LENGTH@ 83
---------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=new Path(SessionState.getTempTableSpace(conf),UUID.randomUUID().toString()) @AT@ 29696 @LENGTH@ 4
---------INS ClassInstanceCreation@@Path[SessionState.getTempTableSpace(conf), UUID.randomUUID().toString()] @TO@ VariableDeclarationFragment@@path=new Path(SessionState.getTempTableSpace(conf),UUID.randomUUID().toString()) @AT@ 29703 @LENGTH@ 76
------------INS New@@new @TO@ ClassInstanceCreation@@Path[SessionState.getTempTableSpace(conf), UUID.randomUUID().toString()] @AT@ 29703 @LENGTH@ 3
------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path[SessionState.getTempTableSpace(conf), UUID.randomUUID().toString()] @AT@ 29707 @LENGTH@ 4
------------INS MethodInvocation@@SessionState.getTempTableSpace(conf) @TO@ ClassInstanceCreation@@Path[SessionState.getTempTableSpace(conf), UUID.randomUUID().toString()] @AT@ 29712 @LENGTH@ 36
---------------INS SimpleName@@Name:SessionState @TO@ MethodInvocation@@SessionState.getTempTableSpace(conf) @AT@ 29712 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getTempTableSpace:[conf] @TO@ MethodInvocation@@SessionState.getTempTableSpace(conf) @AT@ 29725 @LENGTH@ 23
------------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:getTempTableSpace:[conf] @AT@ 29743 @LENGTH@ 4
------------INS MethodInvocation@@UUID.randomUUID().toString() @TO@ ClassInstanceCreation@@Path[SessionState.getTempTableSpace(conf), UUID.randomUUID().toString()] @AT@ 29750 @LENGTH@ 28
---------------INS MethodInvocation@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 29750 @LENGTH@ 17
---------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 29750 @LENGTH@ 4
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 29768 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:path=Warehouse.getDnsPath(path,conf) @TO@ MethodDeclaration@@public, static, String, MethodName:generateTempTableLocation, Configuration conf, MetaException,  @AT@ 29785 @LENGTH@ 40
------INS Assignment@@path=Warehouse.getDnsPath(path,conf) @TO@ ExpressionStatement@@Assignment:path=Warehouse.getDnsPath(path,conf) @AT@ 29785 @LENGTH@ 39
---------INS SimpleName@@path @TO@ Assignment@@path=Warehouse.getDnsPath(path,conf) @AT@ 29785 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@path=Warehouse.getDnsPath(path,conf) @AT@ 29789 @LENGTH@ 1
---------INS MethodInvocation@@Warehouse.getDnsPath(path,conf) @TO@ Assignment@@path=Warehouse.getDnsPath(path,conf) @AT@ 29792 @LENGTH@ 32
------------INS SimpleName@@Name:Warehouse @TO@ MethodInvocation@@Warehouse.getDnsPath(path,conf) @AT@ 29792 @LENGTH@ 9
------------INS SimpleName@@MethodName:getDnsPath:[path, conf] @TO@ MethodInvocation@@Warehouse.getDnsPath(path,conf) @AT@ 29802 @LENGTH@ 22
---------------INS SimpleName@@path @TO@ SimpleName@@MethodName:getDnsPath:[path, conf] @AT@ 29813 @LENGTH@ 4
---------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:getDnsPath:[path, conf] @AT@ 29819 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:path.toString() @TO@ MethodDeclaration@@public, static, String, MethodName:generateTempTableLocation, Configuration conf, MetaException,  @AT@ 29830 @LENGTH@ 23
------INS MethodInvocation@@path.toString() @TO@ ReturnStatement@@MethodInvocation:path.toString() @AT@ 29837 @LENGTH@ 15
---------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.toString() @AT@ 29837 @LENGTH@ 4
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@path.toString() @AT@ 29842 @LENGTH@ 10


UPD SuperConstructorInvocation@@super(PATH,SingletonExtension.SUBSYSTEM_RESOLVER.createChildResolver(PATH,WILDCARD_PATH),UnaryOperator.identity(),RandomElectionPolicyBuilder::new);
 @TO@ super(PATH,SingletonExtension.SUBSYSTEM_RESOLVER.createChildResolver(PATH,WILDCARD_PATH),UnaryOperator.identity(),RandomElectionPolicyServiceConfigurator::new);
 @AT@ 1456 @LENGTH@ 152


INS MethodDeclaration@@public, void, MethodName:testListAllowsMutationOfUnderlyingCollection,  @TO@ TypeDeclaration@@[public]FixedSizeListTest, AbstractListTest<E> @AT@ 2226 @LENGTH@ 591
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testListAllowsMutationOfUnderlyingCollection,  @AT@ 2226 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testListAllowsMutationOfUnderlyingCollection,  @AT@ 2233 @LENGTH@ 4
---INS SimpleName@@MethodName:testListAllowsMutationOfUnderlyingCollection @TO@ MethodDeclaration@@public, void, MethodName:testListAllowsMutationOfUnderlyingCollection,  @AT@ 2238 @LENGTH@ 44
---INS VariableDeclarationStatement@@List<String> decoratedList=new ArrayList<>(); @TO@ MethodDeclaration@@public, void, MethodName:testListAllowsMutationOfUnderlyingCollection,  @AT@ 2296 @LENGTH@ 47
------INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> decoratedList=new ArrayList<>(); @AT@ 2296 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 2296 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 2301 @LENGTH@ 6
------INS VariableDeclarationFragment@@decoratedList=new ArrayList<>() @TO@ VariableDeclarationStatement@@List<String> decoratedList=new ArrayList<>(); @AT@ 2309 @LENGTH@ 33
---------INS SimpleName@@decoratedList @TO@ VariableDeclarationFragment@@decoratedList=new ArrayList<>() @AT@ 2309 @LENGTH@ 13
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@decoratedList=new ArrayList<>() @AT@ 2325 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 2325 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 2329 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 2329 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:decoratedList.add("item 1") @TO@ MethodDeclaration@@public, void, MethodName:testListAllowsMutationOfUnderlyingCollection,  @AT@ 2352 @LENGTH@ 28
------INS MethodInvocation@@decoratedList.add("item 1") @TO@ ExpressionStatement@@MethodInvocation:decoratedList.add("item 1") @AT@ 2352 @LENGTH@ 27
---------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.add("item 1") @AT@ 2352 @LENGTH@ 13
---------INS SimpleName@@MethodName:add:["item 1"] @TO@ MethodInvocation@@decoratedList.add("item 1") @AT@ 2366 @LENGTH@ 13
------------INS StringLiteral@@"item 1" @TO@ SimpleName@@MethodName:add:["item 1"] @AT@ 2370 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:decoratedList.add("item 2") @TO@ MethodDeclaration@@public, void, MethodName:testListAllowsMutationOfUnderlyingCollection,  @AT@ 2389 @LENGTH@ 28
------INS MethodInvocation@@decoratedList.add("item 2") @TO@ ExpressionStatement@@MethodInvocation:decoratedList.add("item 2") @AT@ 2389 @LENGTH@ 27
---------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.add("item 2") @AT@ 2389 @LENGTH@ 13
---------INS SimpleName@@MethodName:add:["item 2"] @TO@ MethodInvocation@@decoratedList.add("item 2") @AT@ 2403 @LENGTH@ 13
------------INS StringLiteral@@"item 2" @TO@ SimpleName@@MethodName:add:["item 2"] @AT@ 2407 @LENGTH@ 8
---INS VariableDeclarationStatement@@FixedSizeList<String> fixedSizeList=FixedSizeList.fixedSizeList(decoratedList); @TO@ MethodDeclaration@@public, void, MethodName:testListAllowsMutationOfUnderlyingCollection,  @AT@ 2437 @LENGTH@ 81
------INS ParameterizedType@@FixedSizeList<String> @TO@ VariableDeclarationStatement@@FixedSizeList<String> fixedSizeList=FixedSizeList.fixedSizeList(decoratedList); @AT@ 2437 @LENGTH@ 21
---------INS SimpleType@@FixedSizeList @TO@ ParameterizedType@@FixedSizeList<String> @AT@ 2437 @LENGTH@ 13
---------INS SimpleType@@String @TO@ ParameterizedType@@FixedSizeList<String> @AT@ 2451 @LENGTH@ 6
------INS VariableDeclarationFragment@@fixedSizeList=FixedSizeList.fixedSizeList(decoratedList) @TO@ VariableDeclarationStatement@@FixedSizeList<String> fixedSizeList=FixedSizeList.fixedSizeList(decoratedList); @AT@ 2459 @LENGTH@ 58
---------INS SimpleName@@fixedSizeList @TO@ VariableDeclarationFragment@@fixedSizeList=FixedSizeList.fixedSizeList(decoratedList) @AT@ 2459 @LENGTH@ 13
---------INS MethodInvocation@@FixedSizeList.fixedSizeList(decoratedList) @TO@ VariableDeclarationFragment@@fixedSizeList=FixedSizeList.fixedSizeList(decoratedList) @AT@ 2475 @LENGTH@ 42
------------INS SimpleName@@Name:FixedSizeList @TO@ MethodInvocation@@FixedSizeList.fixedSizeList(decoratedList) @AT@ 2475 @LENGTH@ 13
------------INS SimpleName@@MethodName:fixedSizeList:[decoratedList] @TO@ MethodInvocation@@FixedSizeList.fixedSizeList(decoratedList) @AT@ 2489 @LENGTH@ 28
---------------INS SimpleName@@decoratedList @TO@ SimpleName@@MethodName:fixedSizeList:[decoratedList] @AT@ 2503 @LENGTH@ 13
---INS VariableDeclarationStatement@@int sizeBefore=fixedSizeList.size(); @TO@ MethodDeclaration@@public, void, MethodName:testListAllowsMutationOfUnderlyingCollection,  @AT@ 2527 @LENGTH@ 38
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int sizeBefore=fixedSizeList.size(); @AT@ 2527 @LENGTH@ 3
------INS VariableDeclarationFragment@@sizeBefore=fixedSizeList.size() @TO@ VariableDeclarationStatement@@int sizeBefore=fixedSizeList.size(); @AT@ 2531 @LENGTH@ 33
---------INS SimpleName@@sizeBefore @TO@ VariableDeclarationFragment@@sizeBefore=fixedSizeList.size() @AT@ 2531 @LENGTH@ 10
---------INS MethodInvocation@@fixedSizeList.size() @TO@ VariableDeclarationFragment@@sizeBefore=fixedSizeList.size() @AT@ 2544 @LENGTH@ 20
------------INS SimpleName@@Name:fixedSizeList @TO@ MethodInvocation@@fixedSizeList.size() @AT@ 2544 @LENGTH@ 13
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@fixedSizeList.size() @AT@ 2558 @LENGTH@ 6
---INS VariableDeclarationStatement@@boolean changed=decoratedList.add("New Value"); @TO@ MethodDeclaration@@public, void, MethodName:testListAllowsMutationOfUnderlyingCollection,  @AT@ 2585 @LENGTH@ 49
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean changed=decoratedList.add("New Value"); @AT@ 2585 @LENGTH@ 7
------INS VariableDeclarationFragment@@changed=decoratedList.add("New Value") @TO@ VariableDeclarationStatement@@boolean changed=decoratedList.add("New Value"); @AT@ 2593 @LENGTH@ 40
---------INS SimpleName@@changed @TO@ VariableDeclarationFragment@@changed=decoratedList.add("New Value") @AT@ 2593 @LENGTH@ 7
---------INS MethodInvocation@@decoratedList.add("New Value") @TO@ VariableDeclarationFragment@@changed=decoratedList.add("New Value") @AT@ 2603 @LENGTH@ 30
------------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.add("New Value") @AT@ 2603 @LENGTH@ 13
------------INS SimpleName@@MethodName:add:["New Value"] @TO@ MethodInvocation@@decoratedList.add("New Value") @AT@ 2617 @LENGTH@ 16
---------------INS StringLiteral@@"New Value" @TO@ SimpleName@@MethodName:add:["New Value"] @AT@ 2621 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue(changed) @TO@ MethodDeclaration@@public, void, MethodName:testListAllowsMutationOfUnderlyingCollection,  @AT@ 2643 @LENGTH@ 27
------INS MethodInvocation@@Assert.assertTrue(changed) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue(changed) @AT@ 2643 @LENGTH@ 26
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue(changed) @AT@ 2643 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:[changed] @TO@ MethodInvocation@@Assert.assertTrue(changed) @AT@ 2650 @LENGTH@ 19
------------INS SimpleName@@changed @TO@ SimpleName@@MethodName:assertTrue:[changed] @AT@ 2661 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("Modifying an the underlying list is allowed",sizeBefore + 1,fixedSizeList.size()) @TO@ MethodDeclaration@@public, void, MethodName:testListAllowsMutationOfUnderlyingCollection,  @AT@ 2690 @LENGTH@ 121
------INS MethodInvocation@@Assert.assertEquals("Modifying an the underlying list is allowed",sizeBefore + 1,fixedSizeList.size()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("Modifying an the underlying list is allowed",sizeBefore + 1,fixedSizeList.size()) @AT@ 2690 @LENGTH@ 120
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("Modifying an the underlying list is allowed",sizeBefore + 1,fixedSizeList.size()) @AT@ 2690 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["Modifying an the underlying list is allowed", sizeBefore + 1, fixedSizeList.size()] @TO@ MethodInvocation@@Assert.assertEquals("Modifying an the underlying list is allowed",sizeBefore + 1,fixedSizeList.size()) @AT@ 2697 @LENGTH@ 113
------------INS StringLiteral@@"Modifying an the underlying list is allowed" @TO@ SimpleName@@MethodName:assertEquals:["Modifying an the underlying list is allowed", sizeBefore + 1, fixedSizeList.size()] @AT@ 2710 @LENGTH@ 45
------------INS InfixExpression@@sizeBefore + 1 @TO@ SimpleName@@MethodName:assertEquals:["Modifying an the underlying list is allowed", sizeBefore + 1, fixedSizeList.size()] @AT@ 2773 @LENGTH@ 14
---------------INS SimpleName@@sizeBefore @TO@ InfixExpression@@sizeBefore + 1 @AT@ 2773 @LENGTH@ 10
---------------INS Operator@@+ @TO@ InfixExpression@@sizeBefore + 1 @AT@ 2783 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@sizeBefore + 1 @AT@ 2786 @LENGTH@ 1
------------INS MethodInvocation@@fixedSizeList.size() @TO@ SimpleName@@MethodName:assertEquals:["Modifying an the underlying list is allowed", sizeBefore + 1, fixedSizeList.size()] @AT@ 2789 @LENGTH@ 20
---------------INS SimpleName@@Name:fixedSizeList @TO@ MethodInvocation@@fixedSizeList.size() @AT@ 2789 @LENGTH@ 13
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@fixedSizeList.size() @AT@ 2803 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultFalseAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]ServletOAuth2AuthorizedClientExchangeFilterFunctionTests,  @AT@ 10353 @LENGTH@ 638
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultFalseAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @AT@ 10353 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultFalseAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @AT@ 10360 @LENGTH@ 4
---INS SimpleName@@MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultFalseAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient @TO@ MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultFalseAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @AT@ 10365 @LENGTH@ 122
---INS ExpressionStatement@@Assignment:this.function=new ServletOAuth2AuthorizedClientExchangeFilterFunction(this.authorizedClientRepository) @TO@ MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultFalseAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @AT@ 10494 @LENGTH@ 105
------INS Assignment@@this.function=new ServletOAuth2AuthorizedClientExchangeFilterFunction(this.authorizedClientRepository) @TO@ ExpressionStatement@@Assignment:this.function=new ServletOAuth2AuthorizedClientExchangeFilterFunction(this.authorizedClientRepository) @AT@ 10494 @LENGTH@ 104
---------INS FieldAccess@@this.function @TO@ Assignment@@this.function=new ServletOAuth2AuthorizedClientExchangeFilterFunction(this.authorizedClientRepository) @AT@ 10494 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.function @AT@ 10494 @LENGTH@ 4
------------INS SimpleName@@function @TO@ FieldAccess@@this.function @AT@ 10499 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@this.function=new ServletOAuth2AuthorizedClientExchangeFilterFunction(this.authorizedClientRepository) @AT@ 10507 @LENGTH@ 1
---------INS ClassInstanceCreation@@ServletOAuth2AuthorizedClientExchangeFilterFunction[this.authorizedClientRepository] @TO@ Assignment@@this.function=new ServletOAuth2AuthorizedClientExchangeFilterFunction(this.authorizedClientRepository) @AT@ 10510 @LENGTH@ 88
------------INS New@@new @TO@ ClassInstanceCreation@@ServletOAuth2AuthorizedClientExchangeFilterFunction[this.authorizedClientRepository] @AT@ 10510 @LENGTH@ 3
------------INS SimpleType@@ServletOAuth2AuthorizedClientExchangeFilterFunction @TO@ ClassInstanceCreation@@ServletOAuth2AuthorizedClientExchangeFilterFunction[this.authorizedClientRepository] @AT@ 10514 @LENGTH@ 51
------------INS FieldAccess@@this.authorizedClientRepository @TO@ ClassInstanceCreation@@ServletOAuth2AuthorizedClientExchangeFilterFunction[this.authorizedClientRepository] @AT@ 10566 @LENGTH@ 31
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizedClientRepository @AT@ 10566 @LENGTH@ 4
---------------INS SimpleName@@authorizedClientRepository @TO@ FieldAccess@@this.authorizedClientRepository @AT@ 10571 @LENGTH@ 26
---INS VariableDeclarationStatement@@OAuth2User user=mock(OAuth2User.class); @TO@ MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultFalseAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @AT@ 10602 @LENGTH@ 41
------INS SimpleType@@OAuth2User @TO@ VariableDeclarationStatement@@OAuth2User user=mock(OAuth2User.class); @AT@ 10602 @LENGTH@ 10
------INS VariableDeclarationFragment@@user=mock(OAuth2User.class) @TO@ VariableDeclarationStatement@@OAuth2User user=mock(OAuth2User.class); @AT@ 10613 @LENGTH@ 29
---------INS SimpleName@@user @TO@ VariableDeclarationFragment@@user=mock(OAuth2User.class) @AT@ 10613 @LENGTH@ 4
---------INS MethodInvocation@@mock(OAuth2User.class) @TO@ VariableDeclarationFragment@@user=mock(OAuth2User.class) @AT@ 10620 @LENGTH@ 22
------------INS SimpleName@@MethodName:mock:[OAuth2User.class] @TO@ MethodInvocation@@mock(OAuth2User.class) @AT@ 10620 @LENGTH@ 22
---------------INS TypeLiteral@@OAuth2User.class @TO@ SimpleName@@MethodName:mock:[OAuth2User.class] @AT@ 10625 @LENGTH@ 16
---INS VariableDeclarationStatement@@List<GrantedAuthority> authorities=AuthorityUtils.createAuthorityList("ROLE_USER"); @TO@ MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultFalseAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @AT@ 10646 @LENGTH@ 85
------INS ParameterizedType@@List<GrantedAuthority> @TO@ VariableDeclarationStatement@@List<GrantedAuthority> authorities=AuthorityUtils.createAuthorityList("ROLE_USER"); @AT@ 10646 @LENGTH@ 22
---------INS SimpleType@@List @TO@ ParameterizedType@@List<GrantedAuthority> @AT@ 10646 @LENGTH@ 4
---------INS SimpleType@@GrantedAuthority @TO@ ParameterizedType@@List<GrantedAuthority> @AT@ 10651 @LENGTH@ 16
------INS VariableDeclarationFragment@@authorities=AuthorityUtils.createAuthorityList("ROLE_USER") @TO@ VariableDeclarationStatement@@List<GrantedAuthority> authorities=AuthorityUtils.createAuthorityList("ROLE_USER"); @AT@ 10669 @LENGTH@ 61
---------INS SimpleName@@authorities @TO@ VariableDeclarationFragment@@authorities=AuthorityUtils.createAuthorityList("ROLE_USER") @AT@ 10669 @LENGTH@ 11
---------INS MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_USER") @TO@ VariableDeclarationFragment@@authorities=AuthorityUtils.createAuthorityList("ROLE_USER") @AT@ 10683 @LENGTH@ 47
------------INS SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_USER") @AT@ 10683 @LENGTH@ 14
------------INS SimpleName@@MethodName:createAuthorityList:["ROLE_USER"] @TO@ MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_USER") @AT@ 10698 @LENGTH@ 32
---------------INS StringLiteral@@"ROLE_USER" @TO@ SimpleName@@MethodName:createAuthorityList:["ROLE_USER"] @AT@ 10718 @LENGTH@ 11
---INS VariableDeclarationStatement@@OAuth2AuthenticationToken token=new OAuth2AuthenticationToken(user,authorities,"id"); @TO@ MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultFalseAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @AT@ 10734 @LENGTH@ 89
------INS SimpleType@@OAuth2AuthenticationToken @TO@ VariableDeclarationStatement@@OAuth2AuthenticationToken token=new OAuth2AuthenticationToken(user,authorities,"id"); @AT@ 10734 @LENGTH@ 25
------INS VariableDeclarationFragment@@token=new OAuth2AuthenticationToken(user,authorities,"id") @TO@ VariableDeclarationStatement@@OAuth2AuthenticationToken token=new OAuth2AuthenticationToken(user,authorities,"id"); @AT@ 10760 @LENGTH@ 62
---------INS SimpleName@@token @TO@ VariableDeclarationFragment@@token=new OAuth2AuthenticationToken(user,authorities,"id") @AT@ 10760 @LENGTH@ 5
---------INS ClassInstanceCreation@@OAuth2AuthenticationToken[user, authorities, "id"] @TO@ VariableDeclarationFragment@@token=new OAuth2AuthenticationToken(user,authorities,"id") @AT@ 10768 @LENGTH@ 54
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthenticationToken[user, authorities, "id"] @AT@ 10768 @LENGTH@ 3
------------INS SimpleType@@OAuth2AuthenticationToken @TO@ ClassInstanceCreation@@OAuth2AuthenticationToken[user, authorities, "id"] @AT@ 10772 @LENGTH@ 25
------------INS SimpleName@@user @TO@ ClassInstanceCreation@@OAuth2AuthenticationToken[user, authorities, "id"] @AT@ 10798 @LENGTH@ 4
------------INS SimpleName@@authorities @TO@ ClassInstanceCreation@@OAuth2AuthenticationToken[user, authorities, "id"] @AT@ 10804 @LENGTH@ 11
------------INS StringLiteral@@"id" @TO@ ClassInstanceCreation@@OAuth2AuthenticationToken[user, authorities, "id"] @AT@ 10817 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:authentication(token).accept(this.result) @TO@ MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultFalseAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @AT@ 10826 @LENGTH@ 42
------INS MethodInvocation@@authentication(token).accept(this.result) @TO@ ExpressionStatement@@MethodInvocation:authentication(token).accept(this.result) @AT@ 10826 @LENGTH@ 41
---------INS MethodInvocation@@MethodName:authentication:[token] @TO@ MethodInvocation@@authentication(token).accept(this.result) @AT@ 10826 @LENGTH@ 21
------------INS SimpleName@@token @TO@ MethodInvocation@@MethodName:authentication:[token] @AT@ 10841 @LENGTH@ 5
---------INS SimpleName@@MethodName:accept:[this.result] @TO@ MethodInvocation@@authentication(token).accept(this.result) @AT@ 10848 @LENGTH@ 19
------------INS FieldAccess@@this.result @TO@ SimpleName@@MethodName:accept:[this.result] @AT@ 10855 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.result @AT@ 10855 @LENGTH@ 4
---------------INS SimpleName@@result @TO@ FieldAccess@@this.result @AT@ 10860 @LENGTH@ 6
---INS VariableDeclarationStatement@@Map<String,Object> attrs=getDefaultRequestAttributes(); @TO@ MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultFalseAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @AT@ 10872 @LENGTH@ 58
------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> attrs=getDefaultRequestAttributes(); @AT@ 10872 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 10872 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 10876 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 10884 @LENGTH@ 6
------INS VariableDeclarationFragment@@attrs=getDefaultRequestAttributes() @TO@ VariableDeclarationStatement@@Map<String,Object> attrs=getDefaultRequestAttributes(); @AT@ 10892 @LENGTH@ 37
---------INS SimpleName@@attrs @TO@ VariableDeclarationFragment@@attrs=getDefaultRequestAttributes() @AT@ 10892 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:getDefaultRequestAttributes:[] @TO@ VariableDeclarationFragment@@attrs=getDefaultRequestAttributes() @AT@ 10900 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:assertThat(getOAuth2AuthorizedClient(attrs)).isNull() @TO@ MethodDeclaration@@public, void, MethodName:defaultRequestOAuth2AuthorizedClientWhenDefaultFalseAndAuthenticationAndClientRegistrationIdNullThenOAuth2AuthorizedClient,  @AT@ 10934 @LENGTH@ 54
------INS MethodInvocation@@assertThat(getOAuth2AuthorizedClient(attrs)).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(getOAuth2AuthorizedClient(attrs)).isNull() @AT@ 10934 @LENGTH@ 53
---------INS MethodInvocation@@MethodName:assertThat:[getOAuth2AuthorizedClient(attrs)] @TO@ MethodInvocation@@assertThat(getOAuth2AuthorizedClient(attrs)).isNull() @AT@ 10934 @LENGTH@ 44
------------INS MethodInvocation@@getOAuth2AuthorizedClient(attrs) @TO@ MethodInvocation@@MethodName:assertThat:[getOAuth2AuthorizedClient(attrs)] @AT@ 10945 @LENGTH@ 32
---------------INS SimpleName@@MethodName:getOAuth2AuthorizedClient:[attrs] @TO@ MethodInvocation@@getOAuth2AuthorizedClient(attrs) @AT@ 10945 @LENGTH@ 32
------------------INS SimpleName@@attrs @TO@ SimpleName@@MethodName:getOAuth2AuthorizedClient:[attrs] @AT@ 10971 @LENGTH@ 5
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(getOAuth2AuthorizedClient(attrs)).isNull() @AT@ 10979 @LENGTH@ 8


UPD TypeDeclaration@@[public, final]ClientAuthenticationMethod,  @TO@ [public, final]ClientAuthenticationMethod, [Serializable] @AT@ 977 @LENGTH@ 1115
---INS SimpleType@@Serializable @TO@ TypeDeclaration@@[public, final]ClientAuthenticationMethod,  @AT@ 1132 @LENGTH@ 12


UPD EnhancedForStatement@@for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader())) {  for (  Builder<?> builder : provider.getBuilders(registry,name,channel)) {    context.removeService(builder.getServiceName());  }} @TO@ for (IdentityGroupServiceConfiguratorProvider provider : ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader())) {  for (  ServiceNameProvider configurator : provider.getServiceConfigurators(registry,name,channel)) {    context.removeService(configurator.getServiceName());  }} @AT@ 5589 @LENGTH@ 322
---UPD SingleVariableDeclaration@@GroupAliasBuilderProvider provider @TO@ IdentityGroupServiceConfiguratorProvider provider @AT@ 5594 @LENGTH@ 34
------UPD SimpleType@@GroupAliasBuilderProvider @TO@ IdentityGroupServiceConfiguratorProvider @AT@ 5594 @LENGTH@ 25
---UPD MethodInvocation@@ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader()) @AT@ 5631 @LENGTH@ 101
------UPD SimpleName@@MethodName:load:[GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[IdentityGroupServiceConfiguratorProvider.class, IdentityGroupServiceConfiguratorProvider.class.getClassLoader()] @AT@ 5645 @LENGTH@ 87
---------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 5650 @LENGTH@ 31
---------UPD MethodInvocation@@GroupAliasBuilderProvider.class.getClassLoader() @TO@ IdentityGroupServiceConfiguratorProvider.class.getClassLoader() @AT@ 5683 @LENGTH@ 48
------------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 5683 @LENGTH@ 31
---UPD EnhancedForStatement@@for (Builder<?> builder : provider.getBuilders(registry,name,channel)) {  context.removeService(builder.getServiceName());} @TO@ for (ServiceNameProvider configurator : provider.getServiceConfigurators(registry,name,channel)) {  context.removeService(configurator.getServiceName());} @AT@ 5748 @LENGTH@ 153
------UPD SingleVariableDeclaration@@Builder<?> builder @TO@ ServiceNameProvider configurator @AT@ 5753 @LENGTH@ 18
---------DEL ParameterizedType@@Builder<?> @AT@ 5753 @LENGTH@ 10
------------DEL SimpleType@@Builder @AT@ 5753 @LENGTH@ 7
------------DEL WildcardType@@? @AT@ 5761 @LENGTH@ 1
---------UPD SimpleName@@builder @TO@ configurator @AT@ 5764 @LENGTH@ 7
---------INS SimpleType@@ServiceNameProvider @TO@ SingleVariableDeclaration@@Builder<?> builder @AT@ 5899 @LENGTH@ 19
------UPD MethodInvocation@@provider.getBuilders(registry,name,channel) @TO@ provider.getServiceConfigurators(registry,name,channel) @AT@ 5774 @LENGTH@ 45
---------UPD SimpleName@@MethodName:getBuilders:[registry, name, channel] @TO@ MethodName:getServiceConfigurators:[registry, name, channel] @AT@ 5783 @LENGTH@ 36
------UPD ExpressionStatement@@MethodInvocation:context.removeService(builder.getServiceName()) @TO@ MethodInvocation:context.removeService(configurator.getServiceName()) @AT@ 5839 @LENGTH@ 48
---------UPD MethodInvocation@@context.removeService(builder.getServiceName()) @TO@ context.removeService(configurator.getServiceName()) @AT@ 5839 @LENGTH@ 47
------------UPD SimpleName@@MethodName:removeService:[builder.getServiceName()] @TO@ MethodName:removeService:[configurator.getServiceName()] @AT@ 5847 @LENGTH@ 39
---------------UPD MethodInvocation@@builder.getServiceName() @TO@ configurator.getServiceName() @AT@ 5861 @LENGTH@ 24
------------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 5861 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to) @TO@ ClassInstanceCreation:new GenericFileOperationFailedException("Cannot move existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to) @AT@ 34663 @LENGTH@ 148
---UPD ClassInstanceCreation@@GenericFileOperationFailedException["Cannot moved existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to] @TO@ GenericFileOperationFailedException["Cannot move existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to] @AT@ 34669 @LENGTH@ 141
------UPD InfixExpression@@"Cannot moved existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to @TO@ "Cannot move existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to @AT@ 34709 @LENGTH@ 100
---------UPD StringLiteral@@"Cannot moved existing file from: " @TO@ "Cannot move existing file from: " @AT@ 34709 @LENGTH@ 35


UPD IfStatement@@if (consumerList != null && consumerList.size() > newCount) {  IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer);} @TO@ if (consumerList != null && consumerList.size() > newCount) {  int delta=consumerList.size() - newCount;  for (int i=0; i < delta; i++) {    int index=findIdleConsumer();    if (index >= 0) {      SimpleConsumer consumer=consumerList.remove(index);      if (consumer != null) {        cancelConsumer(consumer);      }    }  }} @AT@ 10701 @LENGTH@ 204
---UPD Block@@ThenBody:{  IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer);} @TO@ ThenBody:{  int delta=consumerList.size() - newCount;  for (int i=0; i < delta; i++) {    int index=findIdleConsumer();    if (index >= 0) {      SimpleConsumer consumer=consumerList.remove(index);      if (consumer != null) {        cancelConsumer(consumer);      }    }  }} @AT@ 10761 @LENGTH@ 144
------INS VariableDeclarationStatement@@int delta=consumerList.size() - newCount; @TO@ Block@@ThenBody:{  IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer);} @AT@ 10733 @LENGTH@ 43
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int delta=consumerList.size() - newCount; @AT@ 10733 @LENGTH@ 3
---------INS VariableDeclarationFragment@@delta=consumerList.size() - newCount @TO@ VariableDeclarationStatement@@int delta=consumerList.size() - newCount; @AT@ 10737 @LENGTH@ 38
------------INS SimpleName@@delta @TO@ VariableDeclarationFragment@@delta=consumerList.size() - newCount @AT@ 10737 @LENGTH@ 5
------------INS InfixExpression@@consumerList.size() - newCount @TO@ VariableDeclarationFragment@@delta=consumerList.size() - newCount @AT@ 10745 @LENGTH@ 30
---------------INS MethodInvocation@@consumerList.size() @TO@ InfixExpression@@consumerList.size() - newCount @AT@ 10745 @LENGTH@ 19
------------------MOV SimpleName@@Name:consumerList @TO@ MethodInvocation@@consumerList.size() @AT@ 10794 @LENGTH@ 12
------------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@consumerList.size() @AT@ 10807 @LENGTH@ 6
---------------INS Operator@@- @TO@ InfixExpression@@consumerList.size() - newCount @AT@ 10764 @LENGTH@ 1
---------------INS SimpleName@@newCount @TO@ InfixExpression@@consumerList.size() - newCount @AT@ 10767 @LENGTH@ 8
------DEL ExpressionStatement@@MethodInvocation:IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer) @AT@ 10768 @LENGTH@ 131
---------DEL MethodInvocation@@IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer) @AT@ 10768 @LENGTH@ 130
------------DEL MethodInvocation@@MethodName:mapToObj:[i -> consumerList.remove(0)] @AT@ 10768 @LENGTH@ 92
---------------DEL LambdaExpression@@i -> consumerList.remove(0) @AT@ 10832 @LENGTH@ 27
------------------DEL VariableDeclarationFragment@@i @AT@ 10832 @LENGTH@ 1
------------------DEL MethodInvocation@@consumerList.remove(0) @AT@ 10837 @LENGTH@ 22
------------DEL MethodInvocation@@MethodName:range:[newCount, consumerList.size()] @AT@ 10768 @LENGTH@ 46
---------------DEL SimpleName@@newCount @AT@ 10784 @LENGTH@ 8
---------------DEL MethodInvocation@@consumerList.size() @AT@ 10794 @LENGTH@ 19
------------DEL SimpleName@@Name:IntStream @AT@ 10768 @LENGTH@ 9
------INS ForStatement@@for (int i=0; i < delta; i++) {  int index=findIdleConsumer();  if (index >= 0) {    SimpleConsumer consumer=consumerList.remove(index);    if (consumer != null) {      cancelConsumer(consumer);    }  }} @TO@ Block@@ThenBody:{  IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer);} @AT@ 10782 @LENGTH@ 245
---------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < delta; i++) {  int index=findIdleConsumer();  if (index >= 0) {    SimpleConsumer consumer=consumerList.remove(index);    if (consumer != null) {      cancelConsumer(consumer);    }  }} @AT@ 10787 @LENGTH@ 9
------------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 10787 @LENGTH@ 3
------------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 10791 @LENGTH@ 5
---------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 10795 @LENGTH@ 1
---------------MOV SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 10832 @LENGTH@ 1
---------INS InfixExpression@@i < delta @TO@ ForStatement@@for (int i=0; i < delta; i++) {  int index=findIdleConsumer();  if (index >= 0) {    SimpleConsumer consumer=consumerList.remove(index);    if (consumer != null) {      cancelConsumer(consumer);    }  }} @AT@ 10798 @LENGTH@ 9
------------INS SimpleName@@i @TO@ InfixExpression@@i < delta @AT@ 10798 @LENGTH@ 1
------------INS Operator@@< @TO@ InfixExpression@@i < delta @AT@ 10799 @LENGTH@ 1
------------INS SimpleName@@delta @TO@ InfixExpression@@i < delta @AT@ 10802 @LENGTH@ 5
---------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < delta; i++) {  int index=findIdleConsumer();  if (index >= 0) {    SimpleConsumer consumer=consumerList.remove(index);    if (consumer != null) {      cancelConsumer(consumer);    }  }} @AT@ 10809 @LENGTH@ 3
------------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 10809 @LENGTH@ 1
------------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 10811 @LENGTH@ 2
---------INS VariableDeclarationStatement@@int index=findIdleConsumer(); @TO@ ForStatement@@for (int i=0; i < delta; i++) {  int index=findIdleConsumer();  if (index >= 0) {    SimpleConsumer consumer=consumerList.remove(index);    if (consumer != null) {      cancelConsumer(consumer);    }  }} @AT@ 10822 @LENGTH@ 31
------------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int index=findIdleConsumer(); @AT@ 10822 @LENGTH@ 3
------------INS VariableDeclarationFragment@@index=findIdleConsumer() @TO@ VariableDeclarationStatement@@int index=findIdleConsumer(); @AT@ 10826 @LENGTH@ 26
---------------INS SimpleName@@index @TO@ VariableDeclarationFragment@@index=findIdleConsumer() @AT@ 10826 @LENGTH@ 5
---------------INS MethodInvocation@@MethodName:findIdleConsumer:[] @TO@ VariableDeclarationFragment@@index=findIdleConsumer() @AT@ 10834 @LENGTH@ 18
---------INS IfStatement@@if (index >= 0) {  SimpleConsumer consumer=consumerList.remove(index);  if (consumer != null) {    cancelConsumer(consumer);  }} @TO@ ForStatement@@for (int i=0; i < delta; i++) {  int index=findIdleConsumer();  if (index >= 0) {    SimpleConsumer consumer=consumerList.remove(index);    if (consumer != null) {      cancelConsumer(consumer);    }  }} @AT@ 10860 @LENGTH@ 160
------------INS InfixExpression@@index >= 0 @TO@ IfStatement@@if (index >= 0) {  SimpleConsumer consumer=consumerList.remove(index);  if (consumer != null) {    cancelConsumer(consumer);  }} @AT@ 10864 @LENGTH@ 10
---------------INS SimpleName@@index @TO@ InfixExpression@@index >= 0 @AT@ 10864 @LENGTH@ 5
---------------INS Operator@@>= @TO@ InfixExpression@@index >= 0 @AT@ 10869 @LENGTH@ 2
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@index >= 0 @AT@ 10873 @LENGTH@ 1
------------INS Block@@ThenBody:{  SimpleConsumer consumer=consumerList.remove(index);  if (consumer != null) {    cancelConsumer(consumer);  }} @TO@ IfStatement@@if (index >= 0) {  SimpleConsumer consumer=consumerList.remove(index);  if (consumer != null) {    cancelConsumer(consumer);  }} @AT@ 10876 @LENGTH@ 144
---------------INS VariableDeclarationStatement@@SimpleConsumer consumer=consumerList.remove(index); @TO@ Block@@ThenBody:{  SimpleConsumer consumer=consumerList.remove(index);  if (consumer != null) {    cancelConsumer(consumer);  }} @AT@ 10885 @LENGTH@ 53
------------------INS SimpleType@@SimpleConsumer @TO@ VariableDeclarationStatement@@SimpleConsumer consumer=consumerList.remove(index); @AT@ 10885 @LENGTH@ 14
------------------INS VariableDeclarationFragment@@consumer=consumerList.remove(index) @TO@ VariableDeclarationStatement@@SimpleConsumer consumer=consumerList.remove(index); @AT@ 10900 @LENGTH@ 37
---------------------INS SimpleName@@consumer @TO@ VariableDeclarationFragment@@consumer=consumerList.remove(index) @AT@ 10900 @LENGTH@ 8
---------------------INS MethodInvocation@@consumerList.remove(index) @TO@ VariableDeclarationFragment@@consumer=consumerList.remove(index) @AT@ 10911 @LENGTH@ 26
------------------------MOV SimpleName@@Name:consumerList @TO@ MethodInvocation@@consumerList.remove(index) @AT@ 10837 @LENGTH@ 12
------------------------MOV SimpleName@@MethodName:remove:[0] @TO@ MethodInvocation@@consumerList.remove(index) @AT@ 10850 @LENGTH@ 9
---------------------------DEL NumberLiteral@@0 @AT@ 10857 @LENGTH@ 1
---------------------------INS SimpleName@@index @TO@ SimpleName@@MethodName:remove:[0] @AT@ 10931 @LENGTH@ 5
---------------INS IfStatement@@if (consumer != null) {  cancelConsumer(consumer);} @TO@ Block@@ThenBody:{  SimpleConsumer consumer=consumerList.remove(index);  if (consumer != null) {    cancelConsumer(consumer);  }} @AT@ 10946 @LENGTH@ 66
------------------INS InfixExpression@@consumer != null @TO@ IfStatement@@if (consumer != null) {  cancelConsumer(consumer);} @AT@ 10950 @LENGTH@ 16
---------------------INS SimpleName@@consumer @TO@ InfixExpression@@consumer != null @AT@ 10950 @LENGTH@ 8
---------------------INS Operator@@!= @TO@ InfixExpression@@consumer != null @AT@ 10958 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@consumer != null @AT@ 10962 @LENGTH@ 4
------------------INS Block@@ThenBody:{  cancelConsumer(consumer);} @TO@ IfStatement@@if (consumer != null) {  cancelConsumer(consumer);} @AT@ 10968 @LENGTH@ 44
---------------------INS ExpressionStatement@@MethodInvocation:cancelConsumer(consumer) @TO@ Block@@ThenBody:{  cancelConsumer(consumer);} @AT@ 10978 @LENGTH@ 25
------------------------INS MethodInvocation@@cancelConsumer(consumer) @TO@ ExpressionStatement@@MethodInvocation:cancelConsumer(consumer) @AT@ 10978 @LENGTH@ 24
---------------------------MOV SimpleName@@MethodName:forEach:[this::cancelConsumer] @TO@ MethodInvocation@@cancelConsumer(consumer) @AT@ 10869 @LENGTH@ 29
------------------------------INS SimpleName@@consumer @TO@ SimpleName@@MethodName:forEach:[this::cancelConsumer] @AT@ 10993 @LENGTH@ 8


UPD TypeDeclaration@@[private]MyAsyncProcessor, [AsyncProcessor] @TO@ [private]MyAsyncProcessor, AsyncProcessorSupport @AT@ 2803 @LENGTH@ 829
---UPD SimpleType@@AsyncProcessor @TO@ AsyncProcessorSupport @AT@ 2845 @LENGTH@ 14


UPD ExpressionStatement@@Assignment:this.requiresAuthenticationMatcher=new PathPatternParserServerWebExchangeMatcher("/authorize/oauth2/code/{registrationId}") @TO@ Assignment:this.requiresAuthenticationMatcher=new PathPatternParserServerWebExchangeMatcher("/{action}/oauth2/code/{registrationId}") @AT@ 7179 @LENGTH@ 126
---UPD Assignment@@this.requiresAuthenticationMatcher=new PathPatternParserServerWebExchangeMatcher("/authorize/oauth2/code/{registrationId}") @TO@ this.requiresAuthenticationMatcher=new PathPatternParserServerWebExchangeMatcher("/{action}/oauth2/code/{registrationId}") @AT@ 7179 @LENGTH@ 125
------UPD ClassInstanceCreation@@PathPatternParserServerWebExchangeMatcher["/authorize/oauth2/code/{registrationId}"] @TO@ PathPatternParserServerWebExchangeMatcher["/{action}/oauth2/code/{registrationId}"] @AT@ 7216 @LENGTH@ 88
---------UPD StringLiteral@@"/authorize/oauth2/code/{registrationId}" @TO@ "/{action}/oauth2/code/{registrationId}" @AT@ 7262 @LENGTH@ 41


UPD VariableDeclarationStatement@@CastorMarshaller marshaller=new CastorMarshaller(); @TO@ @SuppressWarnings("deprecation") org.springframework.oxm.castor.CastorMarshaller marshaller=new org.springframework.oxm.castor.CastorMarshaller(); @AT@ 977 @LENGTH@ 53
---UPD SimpleType@@CastorMarshaller @TO@ org.springframework.oxm.castor.CastorMarshaller @AT@ 977 @LENGTH@ 16
---UPD VariableDeclarationFragment@@marshaller=new CastorMarshaller() @TO@ marshaller=new org.springframework.oxm.castor.CastorMarshaller() @AT@ 994 @LENGTH@ 35
------UPD ClassInstanceCreation@@CastorMarshaller[] @TO@ org.springframework.oxm.castor.CastorMarshaller[] @AT@ 1007 @LENGTH@ 22
---------UPD SimpleType@@CastorMarshaller @TO@ org.springframework.oxm.castor.CastorMarshaller @AT@ 1011 @LENGTH@ 16


UPD VariableDeclarationStatement@@String cacheName=BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME; @TO@ String cacheName=BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME; @AT@ 2972 @LENGTH@ 85
---UPD VariableDeclarationFragment@@cacheName=BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME @TO@ cacheName=BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME @AT@ 2979 @LENGTH@ 77
------UPD QualifiedName@@BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME @TO@ BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME @AT@ 2991 @LENGTH@ 65
---------UPD SimpleName@@BeanManagerFactoryBuilderConfiguration @TO@ BeanManagerFactoryServiceConfiguratorConfiguration @AT@ 2991 @LENGTH@ 38


INS FieldDeclaration@@private, Defaultable<Long>, [ttl=Defaultable.longInteger(3)] @TO@ TypeDeclaration@@[@Configurable("swarm.topology.consul"), public]ConsulTopologyFraction, [Fraction<ConsulTopologyFraction>] @AT@ 3032 @LENGTH@ 59
---INS Modifier@@private @TO@ FieldDeclaration@@private, Defaultable<Long>, [ttl=Defaultable.longInteger(3)] @AT@ 3032 @LENGTH@ 7
---INS ParameterizedType@@Defaultable<Long> @TO@ FieldDeclaration@@private, Defaultable<Long>, [ttl=Defaultable.longInteger(3)] @AT@ 3040 @LENGTH@ 17
------INS SimpleType@@Defaultable @TO@ ParameterizedType@@Defaultable<Long> @AT@ 3040 @LENGTH@ 11
------INS SimpleType@@Long @TO@ ParameterizedType@@Defaultable<Long> @AT@ 3052 @LENGTH@ 4
---INS VariableDeclarationFragment@@ttl=Defaultable.longInteger(3) @TO@ FieldDeclaration@@private, Defaultable<Long>, [ttl=Defaultable.longInteger(3)] @AT@ 3058 @LENGTH@ 32
------INS SimpleName@@ttl @TO@ VariableDeclarationFragment@@ttl=Defaultable.longInteger(3) @AT@ 3058 @LENGTH@ 3
------INS MethodInvocation@@Defaultable.longInteger(3) @TO@ VariableDeclarationFragment@@ttl=Defaultable.longInteger(3) @AT@ 3064 @LENGTH@ 26
---------INS SimpleName@@Name:Defaultable @TO@ MethodInvocation@@Defaultable.longInteger(3) @AT@ 3064 @LENGTH@ 11
---------INS SimpleName@@MethodName:longInteger:[3] @TO@ MethodInvocation@@Defaultable.longInteger(3) @AT@ 3076 @LENGTH@ 14
------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:longInteger:[3] @AT@ 3088 @LENGTH@ 1


INS IfStatement@@if (AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType)) {  this.validateClientCredentialsGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else {  this.validateAuthorizationCodeGrantType();} @TO@ MethodDeclaration@@public, ClientRegistration, MethodName:build,  @AT@ 12458 @LENGTH@ 318
---INS MethodInvocation@@AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType) @TO@ IfStatement@@if (AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType)) {  this.validateClientCredentialsGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else {  this.validateAuthorizationCodeGrantType();} @AT@ 12462 @LENGTH@ 77
------INS QualifiedName@@Name:AuthorizationGrantType.CLIENT_CREDENTIALS @TO@ MethodInvocation@@AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType) @AT@ 12462 @LENGTH@ 41
------INS SimpleName@@MethodName:equals:[this.authorizationGrantType] @TO@ MethodInvocation@@AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType) @AT@ 12504 @LENGTH@ 35
---------INS FieldAccess@@this.authorizationGrantType @TO@ SimpleName@@MethodName:equals:[this.authorizationGrantType] @AT@ 12511 @LENGTH@ 27
------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationGrantType @AT@ 12511 @LENGTH@ 4
------------INS SimpleName@@authorizationGrantType @TO@ FieldAccess@@this.authorizationGrantType @AT@ 12516 @LENGTH@ 22
---INS Block@@ThenBody:{  this.validateClientCredentialsGrantType();} @TO@ IfStatement@@if (AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType)) {  this.validateClientCredentialsGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else {  this.validateAuthorizationCodeGrantType();} @AT@ 12541 @LENGTH@ 53
------INS ExpressionStatement@@MethodInvocation:this.validateClientCredentialsGrantType() @TO@ Block@@ThenBody:{  this.validateClientCredentialsGrantType();} @AT@ 12547 @LENGTH@ 42
---------INS MethodInvocation@@this.validateClientCredentialsGrantType() @TO@ ExpressionStatement@@MethodInvocation:this.validateClientCredentialsGrantType() @AT@ 12547 @LENGTH@ 41
------------INS ThisExpression@@this @TO@ MethodInvocation@@this.validateClientCredentialsGrantType() @AT@ 12547 @LENGTH@ 4
------------INS SimpleName@@MethodName:validateClientCredentialsGrantType:[] @TO@ MethodInvocation@@this.validateClientCredentialsGrantType() @AT@ 12552 @LENGTH@ 36
---INS Block@@ElseBody:if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else {  this.validateAuthorizationCodeGrantType();} @TO@ IfStatement@@if (AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType)) {  this.validateClientCredentialsGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else {  this.validateAuthorizationCodeGrantType();} @AT@ 12600 @LENGTH@ 176
------MOV IfStatement@@if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else {  this.validateAuthorizationCodeGrantType();} @TO@ Block@@ElseBody:if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else {  this.validateAuthorizationCodeGrantType();} @AT@ 12458 @LENGTH@ 176


UPD MethodDeclaration@@public, void, MethodName:maxAge, Duration maxAge,  @TO@ public, HstsSpec, MethodName:maxAge, Duration maxAge,  @AT@ 55187 @LENGTH@ 86
---INS SimpleType@@HstsSpec @TO@ MethodDeclaration@@public, void, MethodName:maxAge, Duration maxAge,  @AT@ 55194 @LENGTH@ 8
---DEL PrimitiveType@@void @AT@ 55194 @LENGTH@ 4
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, void, MethodName:maxAge, Duration maxAge,  @AT@ 55277 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 55284 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.spring.register(ClientRegistrationRepositoryRegisteredTwiceConfig.class).autowire()).hasRootCauseInstanceOf(NoUniqueBeanDefinitionException.class).hasMessageContaining("Expected single matching bean of type '" + ClientRegistrationRepository.class.getName() + "' but found 2: clientRegistrationRepository1,clientRegistrationRepository2") @TO@ MethodInvocation:assertThatThrownBy(() -> this.spring.register(ClientRegistrationRepositoryRegisteredTwiceConfig.class).autowire()).hasRootCauseInstanceOf(NoUniqueBeanDefinitionException.class).hasMessageContaining("expected single matching bean but found 2: clientRegistrationRepository1,clientRegistrationRepository2") @AT@ 6872 @LENGTH@ 383
---UPD MethodInvocation@@assertThatThrownBy(() -> this.spring.register(ClientRegistrationRepositoryRegisteredTwiceConfig.class).autowire()).hasRootCauseInstanceOf(NoUniqueBeanDefinitionException.class).hasMessageContaining("Expected single matching bean of type '" + ClientRegistrationRepository.class.getName() + "' but found 2: clientRegistrationRepository1,clientRegistrationRepository2") @TO@ assertThatThrownBy(() -> this.spring.register(ClientRegistrationRepositoryRegisteredTwiceConfig.class).autowire()).hasRootCauseInstanceOf(NoUniqueBeanDefinitionException.class).hasMessageContaining("expected single matching bean but found 2: clientRegistrationRepository1,clientRegistrationRepository2") @AT@ 6872 @LENGTH@ 382
------UPD SimpleName@@MethodName:hasMessageContaining:["Expected single matching bean of type '" + ClientRegistrationRepository.class.getName() + "' but found 2: clientRegistrationRepository1,clientRegistrationRepository2"] @TO@ MethodName:hasMessageContaining:["expected single matching bean but found 2: clientRegistrationRepository1,clientRegistrationRepository2"] @AT@ 7059 @LENGTH@ 195
---------DEL InfixExpression@@"Expected single matching bean of type '" + ClientRegistrationRepository.class.getName() + "' but found 2: clientRegistrationRepository1,clientRegistrationRepository2" @AT@ 7080 @LENGTH@ 173
------------DEL StringLiteral@@"Expected single matching bean of type '" @AT@ 7080 @LENGTH@ 41
------------DEL Operator@@+ @AT@ 7121 @LENGTH@ 1
------------DEL MethodInvocation@@ClientRegistrationRepository.class.getName() @AT@ 7124 @LENGTH@ 44
---------------DEL TypeLiteral@@ClientRegistrationRepository.class @AT@ 7124 @LENGTH@ 34
---------------DEL SimpleName@@MethodName:getName:[] @AT@ 7159 @LENGTH@ 9
------------DEL StringLiteral@@"' but found 2: clientRegistrationRepository1,clientRegistrationRepository2" @AT@ 7177 @LENGTH@ 76
---------INS StringLiteral@@"expected single matching bean but found 2: clientRegistrationRepository1,clientRegistrationRepository2" @TO@ SimpleName@@MethodName:hasMessageContaining:["Expected single matching bean of type '" + ClientRegistrationRepository.class.getName() + "' but found 2: clientRegistrationRepository1,clientRegistrationRepository2"] @AT@ 7080 @LENGTH@ 104


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(StoreWriteThroughBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(StoreWriteThroughServiceConfigurator::new); @AT@ 2451 @LENGTH@ 97
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(StoreWriteThroughBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(StoreWriteThroughServiceConfigurator::new) @AT@ 2474 @LENGTH@ 73
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[StoreWriteThroughBuilder::new] @TO@ SimpleResourceServiceHandler[StoreWriteThroughServiceConfigurator::new] @AT@ 2484 @LENGTH@ 63


INS MethodDeclaration@@private, void, MethodName:parseArguments, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @TO@ TypeDeclaration@@[public]QueueParser, AbstractSingleBeanDefinitionParser @AT@ 4029 @LENGTH@ 1082
---MOV VariableDeclarationStatement@@String queueArguments=element.getAttribute(ARGUMENTS); @TO@ MethodDeclaration@@private, void, MethodName:parseArguments, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 3881 @LENGTH@ 56
---MOV VariableDeclarationStatement@@Element argumentsElement=DomUtils.getChildElementByTagName(element,ARGUMENTS); @TO@ MethodDeclaration@@private, void, MethodName:parseArguments, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 3940 @LENGTH@ 81
---MOV IfStatement@@if (argumentsElement != null) {  if (StringUtils.hasText(queueArguments)) {    parserContext.getReaderContext().error("Queue may have either a queue-attributes attribute or element, but not both",element);  }  String ref=argumentsElement.getAttribute(REF_ATTRIBUTE);  Map<?,?> map=parserContext.getDelegate().parseMapElement(argumentsElement,builder.getRawBeanDefinition());  if (StringUtils.hasText(ref)) {    if (map != null && map.size() > 0) {      parserContext.getReaderContext().error("You cannot have both a 'ref' and a nested map",element);    }    builder.addConstructorArgReference(ref);  } else {    builder.addConstructorArgValue(map);  }} @TO@ MethodDeclaration@@private, void, MethodName:parseArguments, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 4025 @LENGTH@ 721
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:parseArguments, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 4029 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:parseArguments, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 4037 @LENGTH@ 4
---INS SimpleName@@MethodName:parseArguments @TO@ MethodDeclaration@@private, void, MethodName:parseArguments, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 4042 @LENGTH@ 14
---INS SingleVariableDeclaration@@Element element @TO@ MethodDeclaration@@private, void, MethodName:parseArguments, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 4057 @LENGTH@ 15
------INS SimpleType@@Element @TO@ SingleVariableDeclaration@@Element element @AT@ 4057 @LENGTH@ 7
------INS SimpleName@@element @TO@ SingleVariableDeclaration@@Element element @AT@ 4065 @LENGTH@ 7
---INS SingleVariableDeclaration@@ParserContext parserContext @TO@ MethodDeclaration@@private, void, MethodName:parseArguments, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 4074 @LENGTH@ 27
------INS SimpleType@@ParserContext @TO@ SingleVariableDeclaration@@ParserContext parserContext @AT@ 4074 @LENGTH@ 13
------INS SimpleName@@parserContext @TO@ SingleVariableDeclaration@@ParserContext parserContext @AT@ 4088 @LENGTH@ 13
---INS SingleVariableDeclaration@@BeanDefinitionBuilder builder @TO@ MethodDeclaration@@private, void, MethodName:parseArguments, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 4103 @LENGTH@ 29
------INS SimpleType@@BeanDefinitionBuilder @TO@ SingleVariableDeclaration@@BeanDefinitionBuilder builder @AT@ 4103 @LENGTH@ 21
------INS SimpleName@@builder @TO@ SingleVariableDeclaration@@BeanDefinitionBuilder builder @AT@ 4125 @LENGTH@ 7
---MOV IfStatement@@if (StringUtils.hasText(queueArguments)) {  builder.addConstructorArgReference(queueArguments);} @TO@ MethodDeclaration@@private, void, MethodName:parseArguments, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 4750 @LENGTH@ 101


UPD ExpressionStatement@@MethodInvocation:log.warn("Failed to locate JWTCallerPrincipalFactory provider",e) @TO@ MethodInvocation:log.warn("Failed to locate JoseFactory provider",e) @AT@ 3596 @LENGTH@ 67
---UPD MethodInvocation@@log.warn("Failed to locate JWTCallerPrincipalFactory provider",e) @TO@ log.warn("Failed to locate JoseFactory provider",e) @AT@ 3596 @LENGTH@ 66
------UPD SimpleName@@MethodName:warn:["Failed to locate JWTCallerPrincipalFactory provider", e] @TO@ MethodName:warn:["Failed to locate JoseFactory provider", e] @AT@ 3600 @LENGTH@ 62
---------UPD StringLiteral@@"Failed to locate JWTCallerPrincipalFactory provider" @TO@ "Failed to locate JoseFactory provider" @AT@ 3605 @LENGTH@ 53


UPD MethodDeclaration@@protected, static, SaslServerFactory, MethodName:obtainSaslServerFactory, final Class requiredServerFactory,  @TO@ protected, static, T, T extends SaslServerFactory, MethodName:obtainSaslServerFactory, final Class<T> requiredServerFactory,  @AT@ 2617 @LENGTH@ 458
---UPD SimpleType@@SaslServerFactory @TO@ T @AT@ 2634 @LENGTH@ 17
---UPD SingleVariableDeclaration@@final Class requiredServerFactory @TO@ final Class<T> requiredServerFactory @AT@ 2676 @LENGTH@ 33
------DEL SimpleType@@Class @AT@ 2682 @LENGTH@ 5
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@final Class requiredServerFactory @AT@ 2696 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2696 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2702 @LENGTH@ 1
---UPD WhileStatement@@while (serverFactories.hasMoreElements()) {  SaslServerFactory current=serverFactories.nextElement();  if (current.getClass().equals(requiredServerFactory)) {    return current;  }} @TO@ while (serverFactories.hasMoreElements()) {  SaslServerFactory current=serverFactories.nextElement();  if (current.getClass().equals(requiredServerFactory)) {    return requiredServerFactory.cast(current);  }} @AT@ 2809 @LENGTH@ 238
------UPD Block@@WhileBody:{  SaslServerFactory current=serverFactories.nextElement();  if (current.getClass().equals(requiredServerFactory)) {    return current;  }} @TO@ WhileBody:{  SaslServerFactory current=serverFactories.nextElement();  if (current.getClass().equals(requiredServerFactory)) {    return requiredServerFactory.cast(current);  }} @AT@ 2851 @LENGTH@ 196
---------UPD IfStatement@@if (current.getClass().equals(requiredServerFactory)) {  return current;} @TO@ if (current.getClass().equals(requiredServerFactory)) {  return requiredServerFactory.cast(current);} @AT@ 2936 @LENGTH@ 101
------------UPD Block@@ThenBody:{  return current;} @TO@ ThenBody:{  return requiredServerFactory.cast(current);} @AT@ 2990 @LENGTH@ 47
---------------UPD ReturnStatement@@SimpleName:current @TO@ MethodInvocation:requiredServerFactory.cast(current) @AT@ 3008 @LENGTH@ 15
------------------DEL SimpleName@@current @AT@ 3015 @LENGTH@ 7
------------------INS MethodInvocation@@requiredServerFactory.cast(current) @TO@ ReturnStatement@@SimpleName:current @AT@ 3032 @LENGTH@ 35
---------------------INS SimpleName@@Name:requiredServerFactory @TO@ MethodInvocation@@requiredServerFactory.cast(current) @AT@ 3032 @LENGTH@ 21
---------------------INS SimpleName@@MethodName:cast:[current] @TO@ MethodInvocation@@requiredServerFactory.cast(current) @AT@ 3054 @LENGTH@ 13
------------------------INS SimpleName@@current @TO@ SimpleName@@MethodName:cast:[current] @AT@ 3059 @LENGTH@ 7


UPD EnhancedForStatement@@for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader())) {  for (  CapabilityServiceBuilder<?> builder : provider.getBuilders(registry,name,channel)) {    builder.configure(context).build(target).install();  }} @TO@ for (IdentityGroupServiceConfiguratorProvider provider : ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader())) {  for (  CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(registry,name,channel)) {    configurator.configure(context).build(target).install();  }} @AT@ 4784 @LENGTH@ 342
---UPD SingleVariableDeclaration@@GroupAliasBuilderProvider provider @TO@ IdentityGroupServiceConfiguratorProvider provider @AT@ 4789 @LENGTH@ 34
------UPD SimpleType@@GroupAliasBuilderProvider @TO@ IdentityGroupServiceConfiguratorProvider @AT@ 4789 @LENGTH@ 25
---UPD MethodInvocation@@ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader()) @AT@ 4826 @LENGTH@ 101
------UPD SimpleName@@MethodName:load:[GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[IdentityGroupServiceConfiguratorProvider.class, IdentityGroupServiceConfiguratorProvider.class.getClassLoader()] @AT@ 4840 @LENGTH@ 87
---------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 4845 @LENGTH@ 31
---------UPD MethodInvocation@@GroupAliasBuilderProvider.class.getClassLoader() @TO@ IdentityGroupServiceConfiguratorProvider.class.getClassLoader() @AT@ 4878 @LENGTH@ 48
------------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 4878 @LENGTH@ 31
---UPD EnhancedForStatement@@for (CapabilityServiceBuilder<?> builder : provider.getBuilders(registry,name,channel)) {  builder.configure(context).build(target).install();} @TO@ for (CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(registry,name,channel)) {  configurator.configure(context).build(target).install();} @AT@ 4943 @LENGTH@ 173
------UPD SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @TO@ CapabilityServiceConfigurator configurator @AT@ 4948 @LENGTH@ 35
---------DEL ParameterizedType@@CapabilityServiceBuilder<?> @AT@ 4948 @LENGTH@ 27
------------DEL SimpleType@@CapabilityServiceBuilder @AT@ 4948 @LENGTH@ 24
------------DEL WildcardType@@? @AT@ 4973 @LENGTH@ 1
---------UPD SimpleName@@builder @TO@ configurator @AT@ 4976 @LENGTH@ 7
---------INS SimpleType@@CapabilityServiceConfigurator @TO@ SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @AT@ 5025 @LENGTH@ 29
------UPD MethodInvocation@@provider.getBuilders(registry,name,channel) @TO@ provider.getServiceConfigurators(registry,name,channel) @AT@ 4986 @LENGTH@ 45
---------UPD SimpleName@@MethodName:getBuilders:[registry, name, channel] @TO@ MethodName:getServiceConfigurators:[registry, name, channel] @AT@ 4995 @LENGTH@ 36
------UPD ExpressionStatement@@MethodInvocation:builder.configure(context).build(target).install() @TO@ MethodInvocation:configurator.configure(context).build(target).install() @AT@ 5051 @LENGTH@ 51
---------UPD MethodInvocation@@builder.configure(context).build(target).install() @TO@ configurator.configure(context).build(target).install() @AT@ 5051 @LENGTH@ 50
------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 5051 @LENGTH@ 7


UPD IfStatement@@if (newThrottle != throttleRate) {  if (throttleRate > newThrottle) {    int delta=throttleRate - newThrottle;    while (delta > 0) {      delayQueue.take();      delta--;      log.trace("Permit discarded due to throttling rate decrease, triggered by ExchangeId: {}",exchange.getExchangeId());    }    log.debug("Throttle rate decreased from {} to {}, triggered by ExchangeId: {}",throttleRate,newThrottle,exchange.getExchangeId());  } else   if (newThrottle > throttleRate) {    int delta=newThrottle - throttleRate;    for (int i=0; i < delta; i++) {      delayQueue.put(new ThrottlePermit(-1));    }    if (throttleRate == 0) {      log.debug("Initial throttle rate set to {}, triggered by ExchangeId: {}",newThrottle,exchange.getExchangeId());    } else {      log.debug("Throttle rate increase from {} to {}, triggered by ExchangeId: {}",throttleRate,newThrottle,exchange.getExchangeId());    }  }  throttleRate=newThrottle;} @TO@ if (!newThrottle.equals(throttleRate)) {  if (throttleRate > newThrottle) {    int delta=throttleRate - newThrottle;    while (delta > 0) {      delayQueue.take();      delta--;      log.trace("Permit discarded due to throttling rate decrease, triggered by ExchangeId: {}",exchange.getExchangeId());    }    log.debug("Throttle rate decreased from {} to {}, triggered by ExchangeId: {}",throttleRate,newThrottle,exchange.getExchangeId());  } else   if (newThrottle > throttleRate) {    int delta=newThrottle - throttleRate;    for (int i=0; i < delta; i++) {      delayQueue.put(new ThrottlePermit(-1));    }    if (throttleRate == 0) {      log.debug("Initial throttle rate set to {}, triggered by ExchangeId: {}",newThrottle,exchange.getExchangeId());    } else {      log.debug("Throttle rate increase from {} to {}, triggered by ExchangeId: {}",throttleRate,newThrottle,exchange.getExchangeId());    }  }  throttleRate=newThrottle;} @AT@ 14979 @LENGTH@ 1590
---INS PrefixExpression@@!newThrottle.equals(throttleRate) @TO@ IfStatement@@if (newThrottle != throttleRate) {  if (throttleRate > newThrottle) {    int delta=throttleRate - newThrottle;    while (delta > 0) {      delayQueue.take();      delta--;      log.trace("Permit discarded due to throttling rate decrease, triggered by ExchangeId: {}",exchange.getExchangeId());    }    log.debug("Throttle rate decreased from {} to {}, triggered by ExchangeId: {}",throttleRate,newThrottle,exchange.getExchangeId());  } else   if (newThrottle > throttleRate) {    int delta=newThrottle - throttleRate;    for (int i=0; i < delta; i++) {      delayQueue.put(new ThrottlePermit(-1));    }    if (throttleRate == 0) {      log.debug("Initial throttle rate set to {}, triggered by ExchangeId: {}",newThrottle,exchange.getExchangeId());    } else {      log.debug("Throttle rate increase from {} to {}, triggered by ExchangeId: {}",throttleRate,newThrottle,exchange.getExchangeId());    }  }  throttleRate=newThrottle;} @AT@ 14983 @LENGTH@ 33
------INS Operator@@! @TO@ PrefixExpression@@!newThrottle.equals(throttleRate) @AT@ 14983 @LENGTH@ 1
------INS MethodInvocation@@newThrottle.equals(throttleRate) @TO@ PrefixExpression@@!newThrottle.equals(throttleRate) @AT@ 14984 @LENGTH@ 32
---------INS SimpleName@@Name:newThrottle @TO@ MethodInvocation@@newThrottle.equals(throttleRate) @AT@ 14984 @LENGTH@ 11
---------INS SimpleName@@MethodName:equals:[throttleRate] @TO@ MethodInvocation@@newThrottle.equals(throttleRate) @AT@ 14996 @LENGTH@ 20
------------INS SimpleName@@throttleRate @TO@ SimpleName@@MethodName:equals:[throttleRate] @AT@ 15003 @LENGTH@ 12
---DEL InfixExpression@@newThrottle != throttleRate @AT@ 14983 @LENGTH@ 27
------DEL SimpleName@@newThrottle @AT@ 14983 @LENGTH@ 11
------DEL Operator@@!= @AT@ 14994 @LENGTH@ 2
------DEL SimpleName@@throttleRate @AT@ 14998 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:new CacheBuilder<>(CACHE.getServiceName(cacheAddress),containerName,cacheName).configure(context).build(target).install() @TO@ MethodInvocation:new CacheServiceConfigurator<>(CACHE.getServiceName(cacheAddress),containerName,cacheName).configure(context).build(target).install() @AT@ 4424 @LENGTH@ 124
---UPD MethodInvocation@@new CacheBuilder<>(CACHE.getServiceName(cacheAddress),containerName,cacheName).configure(context).build(target).install() @TO@ new CacheServiceConfigurator<>(CACHE.getServiceName(cacheAddress),containerName,cacheName).configure(context).build(target).install() @AT@ 4424 @LENGTH@ 123
------UPD ClassInstanceCreation@@CacheBuilder<>[CACHE.getServiceName(cacheAddress), containerName, cacheName] @TO@ CacheServiceConfigurator<>[CACHE.getServiceName(cacheAddress), containerName, cacheName] @AT@ 4424 @LENGTH@ 80
---------UPD ParameterizedType@@CacheBuilder<> @TO@ CacheServiceConfigurator<> @AT@ 4428 @LENGTH@ 14
------------UPD SimpleType@@CacheBuilder @TO@ CacheServiceConfigurator @AT@ 4428 @LENGTH@ 12


UPD IfStatement@@if (this.clientRegistrationRepository != null && this.authorizedClientService != null) {  OAuth2ClientArgumentResolver oauth2ClientArgumentResolver=new OAuth2ClientArgumentResolver(this.clientRegistrationRepository,this.authorizedClientService);  argumentResolvers.add(oauth2ClientArgumentResolver);} @TO@ if (this.authorizedClientService != null) {  OAuth2AuthorizedClientArgumentResolver authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(this.authorizedClientService);  argumentResolvers.add(authorizedClientArgumentResolver);} @AT@ 2839 @LENGTH@ 319
---DEL InfixExpression@@this.clientRegistrationRepository != null && this.authorizedClientService != null @AT@ 2843 @LENGTH@ 81
------DEL InfixExpression@@this.clientRegistrationRepository != null @AT@ 2843 @LENGTH@ 41
---------DEL FieldAccess@@this.clientRegistrationRepository @AT@ 2843 @LENGTH@ 33
------------DEL ThisExpression@@this @AT@ 2843 @LENGTH@ 4
------------DEL SimpleName@@clientRegistrationRepository @AT@ 2848 @LENGTH@ 28
---------DEL Operator@@!= @AT@ 2876 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 2880 @LENGTH@ 4
------DEL Operator@@&& @AT@ 2884 @LENGTH@ 2
---MOV InfixExpression@@this.authorizedClientService != null @TO@ IfStatement@@if (this.clientRegistrationRepository != null && this.authorizedClientService != null) {  OAuth2ClientArgumentResolver oauth2ClientArgumentResolver=new OAuth2ClientArgumentResolver(this.clientRegistrationRepository,this.authorizedClientService);  argumentResolvers.add(oauth2ClientArgumentResolver);} @AT@ 2888 @LENGTH@ 36
---UPD Block@@ThenBody:{  OAuth2ClientArgumentResolver oauth2ClientArgumentResolver=new OAuth2ClientArgumentResolver(this.clientRegistrationRepository,this.authorizedClientService);  argumentResolvers.add(oauth2ClientArgumentResolver);} @TO@ ThenBody:{  OAuth2AuthorizedClientArgumentResolver authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(this.authorizedClientService);  argumentResolvers.add(authorizedClientArgumentResolver);} @AT@ 2926 @LENGTH@ 232
------UPD VariableDeclarationStatement@@OAuth2ClientArgumentResolver oauth2ClientArgumentResolver=new OAuth2ClientArgumentResolver(this.clientRegistrationRepository,this.authorizedClientService); @TO@ OAuth2AuthorizedClientArgumentResolver authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(this.authorizedClientService); @AT@ 2932 @LENGTH@ 164
---------UPD SimpleType@@OAuth2ClientArgumentResolver @TO@ OAuth2AuthorizedClientArgumentResolver @AT@ 2932 @LENGTH@ 28
---------UPD VariableDeclarationFragment@@oauth2ClientArgumentResolver=new OAuth2ClientArgumentResolver(this.clientRegistrationRepository,this.authorizedClientService) @TO@ authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(this.authorizedClientService) @AT@ 2961 @LENGTH@ 134
------------UPD SimpleName@@oauth2ClientArgumentResolver @TO@ authorizedClientArgumentResolver @AT@ 2961 @LENGTH@ 28
------------UPD ClassInstanceCreation@@OAuth2ClientArgumentResolver[this.clientRegistrationRepository, this.authorizedClientService] @TO@ OAuth2AuthorizedClientArgumentResolver[this.authorizedClientService] @AT@ 2992 @LENGTH@ 103
---------------UPD SimpleType@@OAuth2ClientArgumentResolver @TO@ OAuth2AuthorizedClientArgumentResolver @AT@ 2996 @LENGTH@ 28
---------------DEL FieldAccess@@this.clientRegistrationRepository @AT@ 3031 @LENGTH@ 33
------------------DEL ThisExpression@@this @AT@ 3031 @LENGTH@ 4
------------------DEL SimpleName@@clientRegistrationRepository @AT@ 3036 @LENGTH@ 28
------UPD ExpressionStatement@@MethodInvocation:argumentResolvers.add(oauth2ClientArgumentResolver) @TO@ MethodInvocation:argumentResolvers.add(authorizedClientArgumentResolver) @AT@ 3101 @LENGTH@ 52
---------UPD MethodInvocation@@argumentResolvers.add(oauth2ClientArgumentResolver) @TO@ argumentResolvers.add(authorizedClientArgumentResolver) @AT@ 3101 @LENGTH@ 51
------------UPD SimpleName@@MethodName:add:[oauth2ClientArgumentResolver] @TO@ MethodName:add:[authorizedClientArgumentResolver] @AT@ 3119 @LENGTH@ 33
---------------UPD SimpleName@@oauth2ClientArgumentResolver @TO@ authorizedClientArgumentResolver @AT@ 3123 @LENGTH@ 28


UPD SuperConstructorInvocation@@super((name,containerName,cacheName) -> new LocalSingletonServiceBuilderFactoryBuilder<>(name));
 @TO@ super((name,containerName,cacheName) -> new LocalSingletonServiceBuilderFactoryServiceConfigurator<>(name));
 @AT@ 1685 @LENGTH@ 98
---UPD LambdaExpression@@(name,containerName,cacheName) -> new LocalSingletonServiceBuilderFactoryBuilder<>(name) @TO@ (name,containerName,cacheName) -> new LocalSingletonServiceBuilderFactoryServiceConfigurator<>(name) @AT@ 1691 @LENGTH@ 90
------UPD ClassInstanceCreation@@LocalSingletonServiceBuilderFactoryBuilder<>[name] @TO@ LocalSingletonServiceBuilderFactoryServiceConfigurator<>[name] @AT@ 1727 @LENGTH@ 54
---------UPD ParameterizedType@@LocalSingletonServiceBuilderFactoryBuilder<> @TO@ LocalSingletonServiceBuilderFactoryServiceConfigurator<> @AT@ 1731 @LENGTH@ 44
------------UPD SimpleType@@LocalSingletonServiceBuilderFactoryBuilder @TO@ LocalSingletonServiceBuilderFactoryServiceConfigurator @AT@ 1731 @LENGTH@ 42


MOV FieldDeclaration@@public, static, GenericContainer, [container=ConsulContainerSupport.consulContainer()] @TO@ TypeDeclaration@@[public]ConsulMasterTest,  @AT@ 2096 @LENGTH@ 84


UPD IfStatement@@if (value instanceof Number) {  Number number=(Number)value;  num=number.longValue();} else if (value instanceof String) {  num=Long.valueOf((String)value);} @TO@ if (value instanceof Number) {  Number number=(Number)value;  num=number.longValue();} @AT@ 6082 @LENGTH@ 216
---DEL Block@@ElseBody:if (value instanceof String) {  num=Long.valueOf((String)value);} @AT@ 6210 @LENGTH@ 88
------DEL IfStatement@@if (value instanceof String) {  num=Long.valueOf((String)value);} @AT@ 6210 @LENGTH@ 88
---------DEL InstanceofExpression@@value instanceof String @AT@ 6214 @LENGTH@ 23
------------DEL SimpleName@@value @AT@ 6214 @LENGTH@ 5
------------DEL Instanceof@@instanceof @AT@ 6220 @LENGTH@ 10
------------DEL SimpleType@@String @AT@ 6231 @LENGTH@ 6
---------DEL Block@@ThenBody:{  num=Long.valueOf((String)value);} @AT@ 6239 @LENGTH@ 59
------------DEL ExpressionStatement@@Assignment:num=Long.valueOf((String)value) @AT@ 6253 @LENGTH@ 35
---------------DEL Assignment@@num=Long.valueOf((String)value) @AT@ 6253 @LENGTH@ 34
------------------DEL SimpleName@@num @AT@ 6253 @LENGTH@ 3
------------------DEL Operator@@= @AT@ 6256 @LENGTH@ 1
------------------DEL MethodInvocation@@Long.valueOf((String)value) @AT@ 6259 @LENGTH@ 28
---------------------DEL SimpleName@@Name:Long @AT@ 6259 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:valueOf:[(String)value] @AT@ 6264 @LENGTH@ 23
------------------------DEL CastExpression@@(String)value @AT@ 6272 @LENGTH@ 14
---------------------------DEL SimpleType@@String @AT@ 6273 @LENGTH@ 6
---------------------------DEL SimpleName@@value @AT@ 6281 @LENGTH@ 5


UPD MethodDeclaration@@Mono<List<JWK>>, MethodName:get, JWKSelector jwkSelector,  @TO@ public, Mono<List<JWK>>, MethodName:get, JWKSelector jwkSelector,  @AT@ 1531 @LENGTH@ 222
---INS Modifier@@public @TO@ MethodDeclaration@@Mono<List<JWK>>, MethodName:get, JWKSelector jwkSelector,  @AT@ 1544 @LENGTH@ 6


UPD VariableDeclarationStatement@@OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),currentAuthentication.getName(),authenticationResult.getAccessToken()); @TO@ OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),currentAuthentication.getName(),authenticationResult.getAccessToken(),authenticationResult.getRefreshToken()); @AT@ 10264 @LENGTH@ 197
---UPD VariableDeclarationFragment@@authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),currentAuthentication.getName(),authenticationResult.getAccessToken()) @TO@ authorizedClient=new OAuth2AuthorizedClient(authenticationResult.getClientRegistration(),currentAuthentication.getName(),authenticationResult.getAccessToken(),authenticationResult.getRefreshToken()) @AT@ 10287 @LENGTH@ 173
------UPD ClassInstanceCreation@@OAuth2AuthorizedClient[authenticationResult.getClientRegistration(), currentAuthentication.getName(), authenticationResult.getAccessToken()] @TO@ OAuth2AuthorizedClient[authenticationResult.getClientRegistration(), currentAuthentication.getName(), authenticationResult.getAccessToken(), authenticationResult.getRefreshToken()] @AT@ 10306 @LENGTH@ 154
---------INS MethodInvocation@@authenticationResult.getRefreshToken() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authenticationResult.getClientRegistration(), currentAuthentication.getName(), authenticationResult.getAccessToken()] @AT@ 10464 @LENGTH@ 38
------------INS SimpleName@@Name:authenticationResult @TO@ MethodInvocation@@authenticationResult.getRefreshToken() @AT@ 10464 @LENGTH@ 20
------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@authenticationResult.getRefreshToken() @AT@ 10485 @LENGTH@ 17


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3721 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3741 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 3751 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3751 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3793 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 3800 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3800 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3810 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:writeHeadersDisabledIfNotModified,  @TO@ TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(ReflectionUtils.class), public]CacheControlHeadersWriterTests,  @AT@ 4453 @LENGTH@ 227
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:writeHeadersDisabledIfNotModified,  @AT@ 4453 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:writeHeadersDisabledIfNotModified,  @AT@ 4460 @LENGTH@ 4
---INS SimpleName@@MethodName:writeHeadersDisabledIfNotModified @TO@ MethodDeclaration@@public, void, MethodName:writeHeadersDisabledIfNotModified,  @AT@ 4465 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:this.response.setStatus(HttpStatus.NOT_MODIFIED.value()) @TO@ MethodDeclaration@@public, void, MethodName:writeHeadersDisabledIfNotModified,  @AT@ 4505 @LENGTH@ 57
------INS MethodInvocation@@this.response.setStatus(HttpStatus.NOT_MODIFIED.value()) @TO@ ExpressionStatement@@MethodInvocation:this.response.setStatus(HttpStatus.NOT_MODIFIED.value()) @AT@ 4505 @LENGTH@ 56
---------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.setStatus(HttpStatus.NOT_MODIFIED.value()) @AT@ 4505 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 4505 @LENGTH@ 4
------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 4510 @LENGTH@ 8
---------INS SimpleName@@MethodName:setStatus:[HttpStatus.NOT_MODIFIED.value()] @TO@ MethodInvocation@@this.response.setStatus(HttpStatus.NOT_MODIFIED.value()) @AT@ 4519 @LENGTH@ 42
------------INS MethodInvocation@@HttpStatus.NOT_MODIFIED.value() @TO@ SimpleName@@MethodName:setStatus:[HttpStatus.NOT_MODIFIED.value()] @AT@ 4529 @LENGTH@ 31
---------------INS QualifiedName@@Name:HttpStatus.NOT_MODIFIED @TO@ MethodInvocation@@HttpStatus.NOT_MODIFIED.value() @AT@ 4529 @LENGTH@ 23
---------------INS SimpleName@@MethodName:value:[] @TO@ MethodInvocation@@HttpStatus.NOT_MODIFIED.value() @AT@ 4553 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:this.writer.writeHeaders(this.request,this.response) @TO@ MethodDeclaration@@public, void, MethodName:writeHeadersDisabledIfNotModified,  @AT@ 4566 @LENGTH@ 54
------INS MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @TO@ ExpressionStatement@@MethodInvocation:this.writer.writeHeaders(this.request,this.response) @AT@ 4566 @LENGTH@ 53
---------INS FieldAccess@@this.writer @TO@ MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @AT@ 4566 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.writer @AT@ 4566 @LENGTH@ 4
------------INS SimpleName@@writer @TO@ FieldAccess@@this.writer @AT@ 4571 @LENGTH@ 6
---------INS SimpleName@@MethodName:writeHeaders:[this.request, this.response] @TO@ MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @AT@ 4578 @LENGTH@ 41
------------INS FieldAccess@@this.request @TO@ SimpleName@@MethodName:writeHeaders:[this.request, this.response] @AT@ 4591 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 4591 @LENGTH@ 4
---------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 4596 @LENGTH@ 7
------------INS FieldAccess@@this.response @TO@ SimpleName@@MethodName:writeHeaders:[this.request, this.response] @AT@ 4605 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 4605 @LENGTH@ 4
---------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 4610 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(this.response.getHeaderNames()).isEmpty() @TO@ MethodDeclaration@@public, void, MethodName:writeHeadersDisabledIfNotModified,  @AT@ 4624 @LENGTH@ 53
------INS MethodInvocation@@assertThat(this.response.getHeaderNames()).isEmpty() @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.response.getHeaderNames()).isEmpty() @AT@ 4624 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:assertThat:[this.response.getHeaderNames()] @TO@ MethodInvocation@@assertThat(this.response.getHeaderNames()).isEmpty() @AT@ 4624 @LENGTH@ 42
------------INS MethodInvocation@@this.response.getHeaderNames() @TO@ MethodInvocation@@MethodName:assertThat:[this.response.getHeaderNames()] @AT@ 4635 @LENGTH@ 30
---------------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.getHeaderNames() @AT@ 4635 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 4635 @LENGTH@ 4
------------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 4640 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getHeaderNames:[] @TO@ MethodInvocation@@this.response.getHeaderNames() @AT@ 4649 @LENGTH@ 16
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@assertThat(this.response.getHeaderNames()).isEmpty() @AT@ 4667 @LENGTH@ 9


UPD FieldDeclaration@@private, final, static, String, [SERVICE_HOST="localhost"] @TO@ private, static, final, String, [SERVICE_HOST="localhost"] @AT@ 1299 @LENGTH@ 55
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, static, String, [SERVICE_HOST="localhost"] @AT@ 1307 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1313 @LENGTH@ 6


INS FieldDeclaration@@private, ServerWebExchangeMatcher, [requireCsrfProtectionMatcher=DEFAULT_CSRF_MATCHER] @TO@ TypeDeclaration@@[public]CsrfWebFilter, [WebFilter] @AT@ 2586 @LENGTH@ 85
---INS Modifier@@private @TO@ FieldDeclaration@@private, ServerWebExchangeMatcher, [requireCsrfProtectionMatcher=DEFAULT_CSRF_MATCHER] @AT@ 2586 @LENGTH@ 7
---INS SimpleType@@ServerWebExchangeMatcher @TO@ FieldDeclaration@@private, ServerWebExchangeMatcher, [requireCsrfProtectionMatcher=DEFAULT_CSRF_MATCHER] @AT@ 2594 @LENGTH@ 24
---INS VariableDeclarationFragment@@requireCsrfProtectionMatcher=DEFAULT_CSRF_MATCHER @TO@ FieldDeclaration@@private, ServerWebExchangeMatcher, [requireCsrfProtectionMatcher=DEFAULT_CSRF_MATCHER] @AT@ 2619 @LENGTH@ 51
------INS SimpleName@@requireCsrfProtectionMatcher @TO@ VariableDeclarationFragment@@requireCsrfProtectionMatcher=DEFAULT_CSRF_MATCHER @AT@ 2619 @LENGTH@ 28
------INS SimpleName@@DEFAULT_CSRF_MATCHER @TO@ VariableDeclarationFragment@@requireCsrfProtectionMatcher=DEFAULT_CSRF_MATCHER @AT@ 2650 @LENGTH@ 20


INS MethodDeclaration@@public, Producer, MethodName:createProducer, Exception,  @TO@ TypeDeclaration@@[@UriEndpoint(firstVersion="2.10.0",scheme="stub",title="Stub",syntax="stub:name",consumerClass=VmConsumer.class,label="core,testing"), public]StubEndpoint, VmEndpoint @AT@ 2937 @LENGTH@ 176
---INS Modifier@@public @TO@ MethodDeclaration@@public, Producer, MethodName:createProducer, Exception,  @AT@ 2937 @LENGTH@ 6
---INS SimpleType@@Producer @TO@ MethodDeclaration@@public, Producer, MethodName:createProducer, Exception,  @AT@ 2944 @LENGTH@ 8
---INS SimpleName@@MethodName:createProducer @TO@ MethodDeclaration@@public, Producer, MethodName:createProducer, Exception,  @AT@ 2953 @LENGTH@ 14
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, Producer, MethodName:createProducer, Exception,  @AT@ 2977 @LENGTH@ 9
---INS ReturnStatement@@ClassInstanceCreation:new StubProducer(this,getWaitForTaskToComplete(),getTimeout(),isBlockWhenFull(),getOfferTimeout()) @TO@ MethodDeclaration@@public, Producer, MethodName:createProducer, Exception,  @AT@ 2997 @LENGTH@ 110
------INS ClassInstanceCreation@@StubProducer[this, getWaitForTaskToComplete(), getTimeout(), isBlockWhenFull(), getOfferTimeout()] @TO@ ReturnStatement@@ClassInstanceCreation:new StubProducer(this,getWaitForTaskToComplete(),getTimeout(),isBlockWhenFull(),getOfferTimeout()) @AT@ 3004 @LENGTH@ 102
---------INS New@@new @TO@ ClassInstanceCreation@@StubProducer[this, getWaitForTaskToComplete(), getTimeout(), isBlockWhenFull(), getOfferTimeout()] @AT@ 3004 @LENGTH@ 3
---------INS SimpleType@@StubProducer @TO@ ClassInstanceCreation@@StubProducer[this, getWaitForTaskToComplete(), getTimeout(), isBlockWhenFull(), getOfferTimeout()] @AT@ 3008 @LENGTH@ 12
---------INS ThisExpression@@this @TO@ ClassInstanceCreation@@StubProducer[this, getWaitForTaskToComplete(), getTimeout(), isBlockWhenFull(), getOfferTimeout()] @AT@ 3021 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:getWaitForTaskToComplete:[] @TO@ ClassInstanceCreation@@StubProducer[this, getWaitForTaskToComplete(), getTimeout(), isBlockWhenFull(), getOfferTimeout()] @AT@ 3027 @LENGTH@ 26
---------INS MethodInvocation@@MethodName:getTimeout:[] @TO@ ClassInstanceCreation@@StubProducer[this, getWaitForTaskToComplete(), getTimeout(), isBlockWhenFull(), getOfferTimeout()] @AT@ 3055 @LENGTH@ 12
---------INS MethodInvocation@@MethodName:isBlockWhenFull:[] @TO@ ClassInstanceCreation@@StubProducer[this, getWaitForTaskToComplete(), getTimeout(), isBlockWhenFull(), getOfferTimeout()] @AT@ 3069 @LENGTH@ 17
---------INS MethodInvocation@@MethodName:getOfferTimeout:[] @TO@ ClassInstanceCreation@@StubProducer[this, getWaitForTaskToComplete(), getTimeout(), isBlockWhenFull(), getOfferTimeout()] @AT@ 3088 @LENGTH@ 17


UPD SwitchStatement@@switch (messageKind) {case PUSH_TOPIC:  createPushTopicMessage(message,in);break;case PLATFORM_EVENT:createPlatformEventMessage(message,in);break;} @TO@ switch (messageKind) {case PUSH_TOPIC:  createPushTopicMessage(message,in);break;case PLATFORM_EVENT:createPlatformEventMessage(message,in);break;default :throw new IllegalStateException("Unknown message kind: " + messageKind);} @AT@ 5501 @LENGTH@ 226
---INS SwitchCase@@default @TO@ SwitchStatement@@switch (messageKind) {case PUSH_TOPIC:  createPushTopicMessage(message,in);break;case PLATFORM_EVENT:createPlatformEventMessage(message,in);break;} @AT@ 5726 @LENGTH@ 8
---INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unknown message kind: " + messageKind) @TO@ SwitchStatement@@switch (messageKind) {case PUSH_TOPIC:  createPushTopicMessage(message,in);break;case PLATFORM_EVENT:createPlatformEventMessage(message,in);break;} @AT@ 5747 @LENGTH@ 72
------INS ClassInstanceCreation@@IllegalStateException["Unknown message kind: " + messageKind] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unknown message kind: " + messageKind) @AT@ 5753 @LENGTH@ 65
---------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["Unknown message kind: " + messageKind] @AT@ 5753 @LENGTH@ 3
---------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["Unknown message kind: " + messageKind] @AT@ 5757 @LENGTH@ 21
---------INS InfixExpression@@"Unknown message kind: " + messageKind @TO@ ClassInstanceCreation@@IllegalStateException["Unknown message kind: " + messageKind] @AT@ 5779 @LENGTH@ 38
------------INS StringLiteral@@"Unknown message kind: " @TO@ InfixExpression@@"Unknown message kind: " + messageKind @AT@ 5779 @LENGTH@ 24
------------INS Operator@@+ @TO@ InfixExpression@@"Unknown message kind: " + messageKind @AT@ 5803 @LENGTH@ 1
------------INS SimpleName@@messageKind @TO@ InfixExpression@@"Unknown message kind: " + messageKind @AT@ 5806 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuth2AuthorizedClient,  @TO@ [public]OAuth2AuthorizedClient, [Serializable] @AT@ 1538 @LENGTH@ 2479
---INS SimpleType@@Serializable @TO@ TypeDeclaration@@[public]OAuth2AuthorizedClient,  @AT@ 1683 @LENGTH@ 12


UPD VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request); @TO@ OAuth2AuthorizationRequest authorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request,response); @AT@ 8276 @LENGTH@ 122
---UPD VariableDeclarationFragment@@authorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request) @TO@ authorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request,response) @AT@ 8303 @LENGTH@ 94
------UPD MethodInvocation@@this.authorizationRequestRepository.removeAuthorizationRequest(request) @TO@ this.authorizationRequestRepository.removeAuthorizationRequest(request,response) @AT@ 8326 @LENGTH@ 71
---------UPD SimpleName@@MethodName:removeAuthorizationRequest:[request] @TO@ MethodName:removeAuthorizationRequest:[request, response] @AT@ 8362 @LENGTH@ 35
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:removeAuthorizationRequest:[request] @AT@ 8402 @LENGTH@ 8


INS VariableDeclarationStatement@@Session session=mock(Session.class,withSettings().extraInterfaces(MetaDataProvider.class)); @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 1521 @LENGTH@ 94
---INS SimpleType@@Session @TO@ VariableDeclarationStatement@@Session session=mock(Session.class,withSettings().extraInterfaces(MetaDataProvider.class)); @AT@ 1521 @LENGTH@ 7
---INS VariableDeclarationFragment@@session=mock(Session.class,withSettings().extraInterfaces(MetaDataProvider.class)) @TO@ VariableDeclarationStatement@@Session session=mock(Session.class,withSettings().extraInterfaces(MetaDataProvider.class)); @AT@ 1529 @LENGTH@ 85
------INS SimpleName@@session @TO@ VariableDeclarationFragment@@session=mock(Session.class,withSettings().extraInterfaces(MetaDataProvider.class)) @AT@ 1529 @LENGTH@ 7
------INS MethodInvocation@@mock(Session.class,withSettings().extraInterfaces(MetaDataProvider.class)) @TO@ VariableDeclarationFragment@@session=mock(Session.class,withSettings().extraInterfaces(MetaDataProvider.class)) @AT@ 1539 @LENGTH@ 75
---------INS SimpleName@@MethodName:mock:[Session.class, withSettings().extraInterfaces(MetaDataProvider.class)] @TO@ MethodInvocation@@mock(Session.class,withSettings().extraInterfaces(MetaDataProvider.class)) @AT@ 1539 @LENGTH@ 75
------------INS TypeLiteral@@Session.class @TO@ SimpleName@@MethodName:mock:[Session.class, withSettings().extraInterfaces(MetaDataProvider.class)] @AT@ 1544 @LENGTH@ 13
------------INS MethodInvocation@@withSettings().extraInterfaces(MetaDataProvider.class) @TO@ SimpleName@@MethodName:mock:[Session.class, withSettings().extraInterfaces(MetaDataProvider.class)] @AT@ 1559 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:withSettings:[] @TO@ MethodInvocation@@withSettings().extraInterfaces(MetaDataProvider.class) @AT@ 1559 @LENGTH@ 14
---------------INS SimpleName@@MethodName:extraInterfaces:[MetaDataProvider.class] @TO@ MethodInvocation@@withSettings().extraInterfaces(MetaDataProvider.class) @AT@ 1574 @LENGTH@ 39
------------------INS TypeLiteral@@MetaDataProvider.class @TO@ SimpleName@@MethodName:extraInterfaces:[MetaDataProvider.class] @AT@ 1590 @LENGTH@ 22


INS ExpressionStatement@@MethodInvocation:assertThat(authorizedClient.getRefreshToken()).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenAuthorizationResponseSuccessThenAuthorizedClientSaved, Exception,  @AT@ 11650 @LENGTH@ 59
---INS MethodInvocation@@assertThat(authorizedClient.getRefreshToken()).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizedClient.getRefreshToken()).isNotNull() @AT@ 11650 @LENGTH@ 58
------INS MethodInvocation@@MethodName:assertThat:[authorizedClient.getRefreshToken()] @TO@ MethodInvocation@@assertThat(authorizedClient.getRefreshToken()).isNotNull() @AT@ 11650 @LENGTH@ 46
---------INS MethodInvocation@@authorizedClient.getRefreshToken() @TO@ MethodInvocation@@MethodName:assertThat:[authorizedClient.getRefreshToken()] @AT@ 11661 @LENGTH@ 34
------------INS SimpleName@@Name:authorizedClient @TO@ MethodInvocation@@authorizedClient.getRefreshToken() @AT@ 11661 @LENGTH@ 16
------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@authorizedClient.getRefreshToken() @AT@ 11678 @LENGTH@ 17
------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(authorizedClient.getRefreshToken()).isNotNull() @AT@ 11697 @LENGTH@ 11


UPD TypeDeclaration@@ReactiveRemoteJWKSource,  @TO@ ReactiveRemoteJWKSource, [ReactiveJWKSource] @AT@ 1191 @LENGTH@ 2473
---INS SimpleType@@ReactiveJWKSource @TO@ TypeDeclaration@@ReactiveRemoteJWKSource,  @AT@ 1226 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:serviceList.remove((serviceInstance.getId())) @TO@ MethodInvocation:serviceList.remove(serviceInstance.getId()) @AT@ 12710 @LENGTH@ 46
---UPD MethodInvocation@@serviceList.remove((serviceInstance.getId())) @TO@ serviceList.remove(serviceInstance.getId()) @AT@ 12710 @LENGTH@ 45
------UPD SimpleName@@MethodName:remove:[(serviceInstance.getId())] @TO@ MethodName:remove:[serviceInstance.getId()] @AT@ 12722 @LENGTH@ 33
---------DEL ParenthesizedExpression@@(serviceInstance.getId()) @AT@ 12729 @LENGTH@ 25
------------DEL MethodInvocation@@serviceInstance.getId() @AT@ 12730 @LENGTH@ 23
---------INS MethodInvocation@@serviceInstance.getId() @TO@ SimpleName@@MethodName:remove:[(serviceInstance.getId())] @AT@ 12729 @LENGTH@ 23
------------MOV SimpleName@@Name:serviceInstance @TO@ MethodInvocation@@serviceInstance.getId() @AT@ 12730 @LENGTH@ 15
------------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@serviceInstance.getId() @AT@ 12746 @LENGTH@ 7


UPD SuperConstructorInvocation@@super(CacheServiceProviderRegistryBuilder::new);
 @TO@ super(CacheServiceProviderRegistryServiceConfigurator::new);
 @AT@ 1648 @LENGTH@ 48


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(ExpirationBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(ExpirationServiceConfigurator::new); @AT@ 4161 @LENGTH@ 90
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(ExpirationBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(ExpirationServiceConfigurator::new) @AT@ 4184 @LENGTH@ 66
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[ExpirationBuilder::new] @TO@ SimpleResourceServiceHandler[ExpirationServiceConfigurator::new] @AT@ 4194 @LENGTH@ 56


UPD VariableDeclarationStatement@@Cache<?,?> cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 1994 @LENGTH@ 172
---UPD VariableDeclarationFragment@@cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2006 @LENGTH@ 159
------UPD MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2014 @LENGTH@ 151
---------DEL SimpleName@@Name:ServiceContainerHelper @AT@ 2014 @LENGTH@ 22
---------INS ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2017 @LENGTH@ 157
------------INS New@@new @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2017 @LENGTH@ 3
------------INS ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2021 @LENGTH@ 35
---------------INS SimpleType@@PassiveServiceSupplier @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2021 @LENGTH@ 22
---------------INS ParameterizedType@@Cache<?,?> @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2044 @LENGTH@ 11
------------------INS SimpleType@@Cache @TO@ ParameterizedType@@Cache<?,?> @AT@ 2044 @LENGTH@ 5
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2050 @LENGTH@ 1
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2053 @LENGTH@ 1
------------INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2057 @LENGTH@ 32
---------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2047 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2055 @LENGTH@ 25
------------------UPD BooleanLiteral@@false @TO@ true @AT@ 2074 @LENGTH@ 5
------------MOV MethodInvocation@@InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2082 @LENGTH@ 82
---------DEL SimpleName@@MethodName:findValue:[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2037 @LENGTH@ 128
------------DEL MethodInvocation@@context.getServiceRegistry(false) @AT@ 2047 @LENGTH@ 33
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2175 @LENGTH@ 5


UPD SuperConstructorInvocation@@super(PATH,UnaryOperator.identity(),PlainAuthTokenBuilder::new);
 @TO@ super(PATH,UnaryOperator.identity(),PlainAuthTokenServiceConfigurator::new);
 @AT@ 1466 @LENGTH@ 66


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 4284 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 4304 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 4314 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 4314 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 4356 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 4363 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 4363 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 4373 @LENGTH@ 1


INS MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:clientCredentials,  @TO@ TypeDeclaration@@[public]TestClientRegistrations,  @AT@ 2316 @LENGTH@ 236
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:clientCredentials,  @AT@ 2316 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:clientCredentials,  @AT@ 2323 @LENGTH@ 6
---INS SimpleType@@ClientRegistration.Builder @TO@ MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:clientCredentials,  @AT@ 2330 @LENGTH@ 26
---INS SimpleName@@MethodName:clientCredentials @TO@ MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:clientCredentials,  @AT@ 2357 @LENGTH@ 17
---INS ReturnStatement@@MethodInvocation:clientRegistration().registrationId("client-credentials").clientId("client-id").authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS) @TO@ MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:clientCredentials,  @AT@ 2381 @LENGTH@ 168
------INS MethodInvocation@@clientRegistration().registrationId("client-credentials").clientId("client-id").authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS) @TO@ ReturnStatement@@MethodInvocation:clientRegistration().registrationId("client-credentials").clientId("client-id").authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS) @AT@ 2388 @LENGTH@ 160
---------INS MethodInvocation@@MethodName:clientId:["client-id"] @TO@ MethodInvocation@@clientRegistration().registrationId("client-credentials").clientId("client-id").authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS) @AT@ 2388 @LENGTH@ 89
------------INS StringLiteral@@"client-id" @TO@ MethodInvocation@@MethodName:clientId:["client-id"] @AT@ 2465 @LENGTH@ 11
---------INS MethodInvocation@@MethodName:registrationId:["client-credentials"] @TO@ MethodInvocation@@clientRegistration().registrationId("client-credentials").clientId("client-id").authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS) @AT@ 2388 @LENGTH@ 62
------------INS StringLiteral@@"client-credentials" @TO@ MethodInvocation@@MethodName:registrationId:["client-credentials"] @AT@ 2429 @LENGTH@ 20
---------INS MethodInvocation@@MethodName:clientRegistration:[] @TO@ MethodInvocation@@clientRegistration().registrationId("client-credentials").clientId("client-id").authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS) @AT@ 2388 @LENGTH@ 20
---------INS SimpleName@@MethodName:authorizationGrantType:[AuthorizationGrantType.CLIENT_CREDENTIALS] @TO@ MethodInvocation@@clientRegistration().registrationId("client-credentials").clientId("client-id").authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS) @AT@ 2483 @LENGTH@ 65
------------INS QualifiedName@@AuthorizationGrantType.CLIENT_CREDENTIALS @TO@ SimpleName@@MethodName:authorizationGrantType:[AuthorizationGrantType.CLIENT_CREDENTIALS] @AT@ 2506 @LENGTH@ 41
---------------INS SimpleName@@AuthorizationGrantType @TO@ QualifiedName@@AuthorizationGrantType.CLIENT_CREDENTIALS @AT@ 2506 @LENGTH@ 22
---------------INS SimpleName@@CLIENT_CREDENTIALS @TO@ QualifiedName@@AuthorizationGrantType.CLIENT_CREDENTIALS @AT@ 2529 @LENGTH@ 18


DEL ExpressionStatement@@MethodInvocation:this.metaStore.start() @AT@ 2661 @LENGTH@ 23
---DEL MethodInvocation@@this.metaStore.start() @AT@ 2661 @LENGTH@ 22
------DEL FieldAccess@@this.metaStore @AT@ 2661 @LENGTH@ 14
---------DEL ThisExpression@@this @AT@ 2661 @LENGTH@ 4
---------DEL SimpleName@@metaStore @AT@ 2666 @LENGTH@ 9
------DEL SimpleName@@MethodName:start:[] @AT@ 2676 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:process.destroyForcibly() @TO@ MethodInvocation:process.destroyForcibly().waitFor(timeout,timeUnit) @AT@ 3924 @LENGTH@ 26
---UPD MethodInvocation@@process.destroyForcibly() @TO@ process.destroyForcibly().waitFor(timeout,timeUnit) @AT@ 3924 @LENGTH@ 25
------UPD SimpleName@@MethodName:destroyForcibly:[] @TO@ MethodName:waitFor:[timeout, timeUnit] @AT@ 3932 @LENGTH@ 17
---------INS SimpleName@@timeout @TO@ SimpleName@@MethodName:destroyForcibly:[] @AT@ 4195 @LENGTH@ 7
---------INS SimpleName@@timeUnit @TO@ SimpleName@@MethodName:destroyForcibly:[] @AT@ 4204 @LENGTH@ 8
------INS MethodInvocation@@MethodName:destroyForcibly:[] @TO@ MethodInvocation@@process.destroyForcibly() @AT@ 4161 @LENGTH@ 25


INS MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @TO@ TypeDeclaration@@[public]OAuth2AccessTokenTests,  @AT@ 3015 @LENGTH@ 691
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @AT@ 3015 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @AT@ 3022 @LENGTH@ 4
---INS SimpleName@@MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @AT@ 3027 @LENGTH@ 57
---INS VariableDeclarationStatement@@OAuth2AccessToken accessToken=new OAuth2AccessToken(TOKEN_TYPE,TOKEN_VALUE,ISSUED_AT,EXPIRES_AT,SCOPES); @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @AT@ 3091 @LENGTH@ 115
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken accessToken=new OAuth2AccessToken(TOKEN_TYPE,TOKEN_VALUE,ISSUED_AT,EXPIRES_AT,SCOPES); @AT@ 3091 @LENGTH@ 17
------INS VariableDeclarationFragment@@accessToken=new OAuth2AccessToken(TOKEN_TYPE,TOKEN_VALUE,ISSUED_AT,EXPIRES_AT,SCOPES) @TO@ VariableDeclarationStatement@@OAuth2AccessToken accessToken=new OAuth2AccessToken(TOKEN_TYPE,TOKEN_VALUE,ISSUED_AT,EXPIRES_AT,SCOPES); @AT@ 3109 @LENGTH@ 96
---------INS SimpleName@@accessToken @TO@ VariableDeclarationFragment@@accessToken=new OAuth2AccessToken(TOKEN_TYPE,TOKEN_VALUE,ISSUED_AT,EXPIRES_AT,SCOPES) @AT@ 3109 @LENGTH@ 11
---------INS ClassInstanceCreation@@OAuth2AccessToken[TOKEN_TYPE, TOKEN_VALUE, ISSUED_AT, EXPIRES_AT, SCOPES] @TO@ VariableDeclarationFragment@@accessToken=new OAuth2AccessToken(TOKEN_TYPE,TOKEN_VALUE,ISSUED_AT,EXPIRES_AT,SCOPES) @AT@ 3123 @LENGTH@ 82
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AccessToken[TOKEN_TYPE, TOKEN_VALUE, ISSUED_AT, EXPIRES_AT, SCOPES] @AT@ 3123 @LENGTH@ 3
------------INS SimpleType@@OAuth2AccessToken @TO@ ClassInstanceCreation@@OAuth2AccessToken[TOKEN_TYPE, TOKEN_VALUE, ISSUED_AT, EXPIRES_AT, SCOPES] @AT@ 3127 @LENGTH@ 17
------------INS SimpleName@@TOKEN_TYPE @TO@ ClassInstanceCreation@@OAuth2AccessToken[TOKEN_TYPE, TOKEN_VALUE, ISSUED_AT, EXPIRES_AT, SCOPES] @AT@ 3150 @LENGTH@ 10
------------INS SimpleName@@TOKEN_VALUE @TO@ ClassInstanceCreation@@OAuth2AccessToken[TOKEN_TYPE, TOKEN_VALUE, ISSUED_AT, EXPIRES_AT, SCOPES] @AT@ 3162 @LENGTH@ 11
------------INS SimpleName@@ISSUED_AT @TO@ ClassInstanceCreation@@OAuth2AccessToken[TOKEN_TYPE, TOKEN_VALUE, ISSUED_AT, EXPIRES_AT, SCOPES] @AT@ 3175 @LENGTH@ 9
------------INS SimpleName@@EXPIRES_AT @TO@ ClassInstanceCreation@@OAuth2AccessToken[TOKEN_TYPE, TOKEN_VALUE, ISSUED_AT, EXPIRES_AT, SCOPES] @AT@ 3186 @LENGTH@ 10
------------INS SimpleName@@SCOPES @TO@ ClassInstanceCreation@@OAuth2AccessToken[TOKEN_TYPE, TOKEN_VALUE, ISSUED_AT, EXPIRES_AT, SCOPES] @AT@ 3198 @LENGTH@ 6
---INS VariableDeclarationStatement@@byte[] serialized=SerializationUtils.serialize(accessToken); @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @AT@ 3209 @LENGTH@ 62
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] serialized=SerializationUtils.serialize(accessToken); @AT@ 3209 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 3209 @LENGTH@ 4
------INS VariableDeclarationFragment@@serialized=SerializationUtils.serialize(accessToken) @TO@ VariableDeclarationStatement@@byte[] serialized=SerializationUtils.serialize(accessToken); @AT@ 3216 @LENGTH@ 54
---------INS SimpleName@@serialized @TO@ VariableDeclarationFragment@@serialized=SerializationUtils.serialize(accessToken) @AT@ 3216 @LENGTH@ 10
---------INS MethodInvocation@@SerializationUtils.serialize(accessToken) @TO@ VariableDeclarationFragment@@serialized=SerializationUtils.serialize(accessToken) @AT@ 3229 @LENGTH@ 41
------------INS SimpleName@@Name:SerializationUtils @TO@ MethodInvocation@@SerializationUtils.serialize(accessToken) @AT@ 3229 @LENGTH@ 18
------------INS SimpleName@@MethodName:serialize:[accessToken] @TO@ MethodInvocation@@SerializationUtils.serialize(accessToken) @AT@ 3248 @LENGTH@ 22
---------------INS SimpleName@@accessToken @TO@ SimpleName@@MethodName:serialize:[accessToken] @AT@ 3258 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:accessToken=(OAuth2AccessToken)SerializationUtils.deserialize(serialized) @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @AT@ 3274 @LENGTH@ 77
------INS Assignment@@accessToken=(OAuth2AccessToken)SerializationUtils.deserialize(serialized) @TO@ ExpressionStatement@@Assignment:accessToken=(OAuth2AccessToken)SerializationUtils.deserialize(serialized) @AT@ 3274 @LENGTH@ 76
---------INS SimpleName@@accessToken @TO@ Assignment@@accessToken=(OAuth2AccessToken)SerializationUtils.deserialize(serialized) @AT@ 3274 @LENGTH@ 11
---------INS Operator@@= @TO@ Assignment@@accessToken=(OAuth2AccessToken)SerializationUtils.deserialize(serialized) @AT@ 3285 @LENGTH@ 1
---------INS CastExpression@@(OAuth2AccessToken)SerializationUtils.deserialize(serialized) @TO@ Assignment@@accessToken=(OAuth2AccessToken)SerializationUtils.deserialize(serialized) @AT@ 3288 @LENGTH@ 62
------------INS SimpleType@@OAuth2AccessToken @TO@ CastExpression@@(OAuth2AccessToken)SerializationUtils.deserialize(serialized) @AT@ 3289 @LENGTH@ 17
------------INS MethodInvocation@@SerializationUtils.deserialize(serialized) @TO@ CastExpression@@(OAuth2AccessToken)SerializationUtils.deserialize(serialized) @AT@ 3308 @LENGTH@ 42
---------------INS SimpleName@@Name:SerializationUtils @TO@ MethodInvocation@@SerializationUtils.deserialize(serialized) @AT@ 3308 @LENGTH@ 18
---------------INS SimpleName@@MethodName:deserialize:[serialized] @TO@ MethodInvocation@@SerializationUtils.deserialize(serialized) @AT@ 3327 @LENGTH@ 23
------------------INS SimpleName@@serialized @TO@ SimpleName@@MethodName:deserialize:[serialized] @AT@ 3339 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(serialized).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @AT@ 3355 @LENGTH@ 35
------INS MethodInvocation@@assertThat(serialized).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(serialized).isNotNull() @AT@ 3355 @LENGTH@ 34
---------INS MethodInvocation@@MethodName:assertThat:[serialized] @TO@ MethodInvocation@@assertThat(serialized).isNotNull() @AT@ 3355 @LENGTH@ 22
------------INS SimpleName@@serialized @TO@ MethodInvocation@@MethodName:assertThat:[serialized] @AT@ 3366 @LENGTH@ 10
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(serialized).isNotNull() @AT@ 3378 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(accessToken.getTokenType()).isEqualTo(TOKEN_TYPE) @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @AT@ 3393 @LENGTH@ 61
------INS MethodInvocation@@assertThat(accessToken.getTokenType()).isEqualTo(TOKEN_TYPE) @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessToken.getTokenType()).isEqualTo(TOKEN_TYPE) @AT@ 3393 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:assertThat:[accessToken.getTokenType()] @TO@ MethodInvocation@@assertThat(accessToken.getTokenType()).isEqualTo(TOKEN_TYPE) @AT@ 3393 @LENGTH@ 38
------------INS MethodInvocation@@accessToken.getTokenType() @TO@ MethodInvocation@@MethodName:assertThat:[accessToken.getTokenType()] @AT@ 3404 @LENGTH@ 26
---------------INS SimpleName@@Name:accessToken @TO@ MethodInvocation@@accessToken.getTokenType() @AT@ 3404 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getTokenType:[] @TO@ MethodInvocation@@accessToken.getTokenType() @AT@ 3416 @LENGTH@ 14
---------INS SimpleName@@MethodName:isEqualTo:[TOKEN_TYPE] @TO@ MethodInvocation@@assertThat(accessToken.getTokenType()).isEqualTo(TOKEN_TYPE) @AT@ 3432 @LENGTH@ 21
------------INS SimpleName@@TOKEN_TYPE @TO@ SimpleName@@MethodName:isEqualTo:[TOKEN_TYPE] @AT@ 3442 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(accessToken.getTokenValue()).isEqualTo(TOKEN_VALUE) @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @AT@ 3457 @LENGTH@ 63
------INS MethodInvocation@@assertThat(accessToken.getTokenValue()).isEqualTo(TOKEN_VALUE) @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessToken.getTokenValue()).isEqualTo(TOKEN_VALUE) @AT@ 3457 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:assertThat:[accessToken.getTokenValue()] @TO@ MethodInvocation@@assertThat(accessToken.getTokenValue()).isEqualTo(TOKEN_VALUE) @AT@ 3457 @LENGTH@ 39
------------INS MethodInvocation@@accessToken.getTokenValue() @TO@ MethodInvocation@@MethodName:assertThat:[accessToken.getTokenValue()] @AT@ 3468 @LENGTH@ 27
---------------INS SimpleName@@Name:accessToken @TO@ MethodInvocation@@accessToken.getTokenValue() @AT@ 3468 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getTokenValue:[] @TO@ MethodInvocation@@accessToken.getTokenValue() @AT@ 3480 @LENGTH@ 15
---------INS SimpleName@@MethodName:isEqualTo:[TOKEN_VALUE] @TO@ MethodInvocation@@assertThat(accessToken.getTokenValue()).isEqualTo(TOKEN_VALUE) @AT@ 3497 @LENGTH@ 22
------------INS SimpleName@@TOKEN_VALUE @TO@ SimpleName@@MethodName:isEqualTo:[TOKEN_VALUE] @AT@ 3507 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(accessToken.getIssuedAt()).isEqualTo(ISSUED_AT) @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @AT@ 3523 @LENGTH@ 59
------INS MethodInvocation@@assertThat(accessToken.getIssuedAt()).isEqualTo(ISSUED_AT) @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessToken.getIssuedAt()).isEqualTo(ISSUED_AT) @AT@ 3523 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:assertThat:[accessToken.getIssuedAt()] @TO@ MethodInvocation@@assertThat(accessToken.getIssuedAt()).isEqualTo(ISSUED_AT) @AT@ 3523 @LENGTH@ 37
------------INS MethodInvocation@@accessToken.getIssuedAt() @TO@ MethodInvocation@@MethodName:assertThat:[accessToken.getIssuedAt()] @AT@ 3534 @LENGTH@ 25
---------------INS SimpleName@@Name:accessToken @TO@ MethodInvocation@@accessToken.getIssuedAt() @AT@ 3534 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getIssuedAt:[] @TO@ MethodInvocation@@accessToken.getIssuedAt() @AT@ 3546 @LENGTH@ 13
---------INS SimpleName@@MethodName:isEqualTo:[ISSUED_AT] @TO@ MethodInvocation@@assertThat(accessToken.getIssuedAt()).isEqualTo(ISSUED_AT) @AT@ 3561 @LENGTH@ 20
------------INS SimpleName@@ISSUED_AT @TO@ SimpleName@@MethodName:isEqualTo:[ISSUED_AT] @AT@ 3571 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(accessToken.getExpiresAt()).isEqualTo(EXPIRES_AT) @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @AT@ 3585 @LENGTH@ 61
------INS MethodInvocation@@assertThat(accessToken.getExpiresAt()).isEqualTo(EXPIRES_AT) @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessToken.getExpiresAt()).isEqualTo(EXPIRES_AT) @AT@ 3585 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:assertThat:[accessToken.getExpiresAt()] @TO@ MethodInvocation@@assertThat(accessToken.getExpiresAt()).isEqualTo(EXPIRES_AT) @AT@ 3585 @LENGTH@ 38
------------INS MethodInvocation@@accessToken.getExpiresAt() @TO@ MethodInvocation@@MethodName:assertThat:[accessToken.getExpiresAt()] @AT@ 3596 @LENGTH@ 26
---------------INS SimpleName@@Name:accessToken @TO@ MethodInvocation@@accessToken.getExpiresAt() @AT@ 3596 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getExpiresAt:[] @TO@ MethodInvocation@@accessToken.getExpiresAt() @AT@ 3608 @LENGTH@ 14
---------INS SimpleName@@MethodName:isEqualTo:[EXPIRES_AT] @TO@ MethodInvocation@@assertThat(accessToken.getExpiresAt()).isEqualTo(EXPIRES_AT) @AT@ 3624 @LENGTH@ 21
------------INS SimpleName@@EXPIRES_AT @TO@ SimpleName@@MethodName:isEqualTo:[EXPIRES_AT] @AT@ 3634 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(accessToken.getScopes()).isEqualTo(SCOPES) @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializableAndDeserializable,  @AT@ 3649 @LENGTH@ 54
------INS MethodInvocation@@assertThat(accessToken.getScopes()).isEqualTo(SCOPES) @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessToken.getScopes()).isEqualTo(SCOPES) @AT@ 3649 @LENGTH@ 53
---------INS MethodInvocation@@MethodName:assertThat:[accessToken.getScopes()] @TO@ MethodInvocation@@assertThat(accessToken.getScopes()).isEqualTo(SCOPES) @AT@ 3649 @LENGTH@ 35
------------INS MethodInvocation@@accessToken.getScopes() @TO@ MethodInvocation@@MethodName:assertThat:[accessToken.getScopes()] @AT@ 3660 @LENGTH@ 23
---------------INS SimpleName@@Name:accessToken @TO@ MethodInvocation@@accessToken.getScopes() @AT@ 3660 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getScopes:[] @TO@ MethodInvocation@@accessToken.getScopes() @AT@ 3672 @LENGTH@ 11
---------INS SimpleName@@MethodName:isEqualTo:[SCOPES] @TO@ MethodInvocation@@assertThat(accessToken.getScopes()).isEqualTo(SCOPES) @AT@ 3685 @LENGTH@ 17
------------INS SimpleName@@SCOPES @TO@ SimpleName@@MethodName:isEqualTo:[SCOPES] @AT@ 3695 @LENGTH@ 6


DEL ExpressionStatement@@MethodInvocation:converter.setJavaTypeMapper(null) @AT@ 4279 @LENGTH@ 34
---DEL MethodInvocation@@converter.setJavaTypeMapper(null) @AT@ 4279 @LENGTH@ 33
------DEL SimpleName@@Name:converter @AT@ 4279 @LENGTH@ 9
------DEL SimpleName@@MethodName:setJavaTypeMapper:[null] @AT@ 4289 @LENGTH@ 23
---------DEL NullLiteral@@null @AT@ 4307 @LENGTH@ 4


INS ExpressionStatement@@Assignment:this.opContext=new CompilationOpContext() @TO@ MethodDeclaration@@protected, voidMethodName:Context, Context ctx,  @AT@ 14674 @LENGTH@ 44
---INS Assignment@@this.opContext=new CompilationOpContext() @TO@ ExpressionStatement@@Assignment:this.opContext=new CompilationOpContext() @AT@ 14674 @LENGTH@ 43
------INS FieldAccess@@this.opContext @TO@ Assignment@@this.opContext=new CompilationOpContext() @AT@ 14674 @LENGTH@ 14
---------INS ThisExpression@@this @TO@ FieldAccess@@this.opContext @AT@ 14674 @LENGTH@ 4
---------INS SimpleName@@opContext @TO@ FieldAccess@@this.opContext @AT@ 14679 @LENGTH@ 9
------INS Operator@@= @TO@ Assignment@@this.opContext=new CompilationOpContext() @AT@ 14688 @LENGTH@ 1
------INS ClassInstanceCreation@@CompilationOpContext[] @TO@ Assignment@@this.opContext=new CompilationOpContext() @AT@ 14691 @LENGTH@ 26
---------INS New@@new @TO@ ClassInstanceCreation@@CompilationOpContext[] @AT@ 14691 @LENGTH@ 3
---------INS SimpleType@@CompilationOpContext @TO@ ClassInstanceCreation@@CompilationOpContext[] @AT@ 14695 @LENGTH@ 20


UPD SuperConstructorInvocation@@super(LocalCommandDispatcherFactoryBuilder::new);
 @TO@ super(LocalCommandDispatcherFactoryServiceConfigurator::new);
 @AT@ 1672 @LENGTH@ 49


INS MethodDeclaration@@public, void, MethodName:handleErrorWhenErrorResponseWwwAuthenticateHeaderThenHandled,  @TO@ TypeDeclaration@@[public]OAuth2ErrorResponseErrorHandlerTests,  @AT@ 1797 @LENGTH@ 598
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handleErrorWhenErrorResponseWwwAuthenticateHeaderThenHandled,  @AT@ 1797 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handleErrorWhenErrorResponseWwwAuthenticateHeaderThenHandled,  @AT@ 1804 @LENGTH@ 4
---INS SimpleName@@MethodName:handleErrorWhenErrorResponseWwwAuthenticateHeaderThenHandled @TO@ MethodDeclaration@@public, void, MethodName:handleErrorWhenErrorResponseWwwAuthenticateHeaderThenHandled,  @AT@ 1809 @LENGTH@ 60
---INS VariableDeclarationStatement@@String wwwAuthenticateHeader="Bearer realm=\"auth-realm\" error=\"insufficient_scope\" error_description=\"The access token expired\""; @TO@ MethodDeclaration@@public, void, MethodName:handleErrorWhenErrorResponseWwwAuthenticateHeaderThenHandled,  @AT@ 1876 @LENGTH@ 137
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String wwwAuthenticateHeader="Bearer realm=\"auth-realm\" error=\"insufficient_scope\" error_description=\"The access token expired\""; @AT@ 1876 @LENGTH@ 6
------INS VariableDeclarationFragment@@wwwAuthenticateHeader="Bearer realm=\"auth-realm\" error=\"insufficient_scope\" error_description=\"The access token expired\"" @TO@ VariableDeclarationStatement@@String wwwAuthenticateHeader="Bearer realm=\"auth-realm\" error=\"insufficient_scope\" error_description=\"The access token expired\""; @AT@ 1883 @LENGTH@ 129
---------INS SimpleName@@wwwAuthenticateHeader @TO@ VariableDeclarationFragment@@wwwAuthenticateHeader="Bearer realm=\"auth-realm\" error=\"insufficient_scope\" error_description=\"The access token expired\"" @AT@ 1883 @LENGTH@ 21
---------INS StringLiteral@@"Bearer realm=\"auth-realm\" error=\"insufficient_scope\" error_description=\"The access token expired\"" @TO@ VariableDeclarationFragment@@wwwAuthenticateHeader="Bearer realm=\"auth-realm\" error=\"insufficient_scope\" error_description=\"The access token expired\"" @AT@ 1907 @LENGTH@ 105
---INS VariableDeclarationStatement@@MockClientHttpResponse response=new MockClientHttpResponse(new byte[0],HttpStatus.BAD_REQUEST); @TO@ MethodDeclaration@@public, void, MethodName:handleErrorWhenErrorResponseWwwAuthenticateHeaderThenHandled,  @AT@ 2017 @LENGTH@ 103
------INS SimpleType@@MockClientHttpResponse @TO@ VariableDeclarationStatement@@MockClientHttpResponse response=new MockClientHttpResponse(new byte[0],HttpStatus.BAD_REQUEST); @AT@ 2017 @LENGTH@ 22
------INS VariableDeclarationFragment@@response=new MockClientHttpResponse(new byte[0],HttpStatus.BAD_REQUEST) @TO@ VariableDeclarationStatement@@MockClientHttpResponse response=new MockClientHttpResponse(new byte[0],HttpStatus.BAD_REQUEST); @AT@ 2040 @LENGTH@ 79
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new MockClientHttpResponse(new byte[0],HttpStatus.BAD_REQUEST) @AT@ 2040 @LENGTH@ 8
---------INS ClassInstanceCreation@@MockClientHttpResponse[new byte[0], HttpStatus.BAD_REQUEST] @TO@ VariableDeclarationFragment@@response=new MockClientHttpResponse(new byte[0],HttpStatus.BAD_REQUEST) @AT@ 2051 @LENGTH@ 68
------------INS New@@new @TO@ ClassInstanceCreation@@MockClientHttpResponse[new byte[0], HttpStatus.BAD_REQUEST] @AT@ 2051 @LENGTH@ 3
------------INS SimpleType@@MockClientHttpResponse @TO@ ClassInstanceCreation@@MockClientHttpResponse[new byte[0], HttpStatus.BAD_REQUEST] @AT@ 2055 @LENGTH@ 22
------------INS ArrayCreation@@new byte[0] @TO@ ClassInstanceCreation@@MockClientHttpResponse[new byte[0], HttpStatus.BAD_REQUEST] @AT@ 2083 @LENGTH@ 11
---------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[0] @AT@ 2087 @LENGTH@ 7
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2087 @LENGTH@ 4
---------------INS NumberLiteral@@0 @TO@ ArrayCreation@@new byte[0] @AT@ 2092 @LENGTH@ 1
------------INS QualifiedName@@HttpStatus.BAD_REQUEST @TO@ ClassInstanceCreation@@MockClientHttpResponse[new byte[0], HttpStatus.BAD_REQUEST] @AT@ 2096 @LENGTH@ 22
---------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.BAD_REQUEST @AT@ 2096 @LENGTH@ 10
---------------INS SimpleName@@BAD_REQUEST @TO@ QualifiedName@@HttpStatus.BAD_REQUEST @AT@ 2107 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:response.getHeaders().add(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticateHeader) @TO@ MethodDeclaration@@public, void, MethodName:handleErrorWhenErrorResponseWwwAuthenticateHeaderThenHandled,  @AT@ 2123 @LENGTH@ 79
------INS MethodInvocation@@response.getHeaders().add(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticateHeader) @TO@ ExpressionStatement@@MethodInvocation:response.getHeaders().add(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticateHeader) @AT@ 2123 @LENGTH@ 78
---------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@response.getHeaders().add(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticateHeader) @AT@ 2123 @LENGTH@ 21
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeaders().add(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticateHeader) @AT@ 2123 @LENGTH@ 8
---------INS SimpleName@@MethodName:add:[HttpHeaders.WWW_AUTHENTICATE, wwwAuthenticateHeader] @TO@ MethodInvocation@@response.getHeaders().add(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticateHeader) @AT@ 2145 @LENGTH@ 56
------------INS QualifiedName@@HttpHeaders.WWW_AUTHENTICATE @TO@ SimpleName@@MethodName:add:[HttpHeaders.WWW_AUTHENTICATE, wwwAuthenticateHeader] @AT@ 2149 @LENGTH@ 28
---------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.WWW_AUTHENTICATE @AT@ 2149 @LENGTH@ 11
---------------INS SimpleName@@WWW_AUTHENTICATE @TO@ QualifiedName@@HttpHeaders.WWW_AUTHENTICATE @AT@ 2161 @LENGTH@ 16
------------INS SimpleName@@wwwAuthenticateHeader @TO@ SimpleName@@MethodName:add:[HttpHeaders.WWW_AUTHENTICATE, wwwAuthenticateHeader] @AT@ 2179 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthenticationException.class).hasMessage("[insufficient_scope] The access token expired") @TO@ MethodDeclaration@@public, void, MethodName:handleErrorWhenErrorResponseWwwAuthenticateHeaderThenHandled,  @AT@ 2206 @LENGTH@ 186
------INS MethodInvocation@@assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthenticationException.class).hasMessage("[insufficient_scope] The access token expired") @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthenticationException.class).hasMessage("[insufficient_scope] The access token expired") @AT@ 2206 @LENGTH@ 185
---------INS MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthenticationException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthenticationException.class).hasMessage("[insufficient_scope] The access token expired") @AT@ 2206 @LENGTH@ 120
------------INS TypeLiteral@@OAuth2AuthenticationException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthenticationException.class] @AT@ 2290 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.errorHandler.handleError(response)] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthenticationException.class).hasMessage("[insufficient_scope] The access token expired") @AT@ 2206 @LENGTH@ 65
------------INS LambdaExpression@@() -> this.errorHandler.handleError(response) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.errorHandler.handleError(response)] @AT@ 2225 @LENGTH@ 45
---------------INS MethodInvocation@@this.errorHandler.handleError(response) @TO@ LambdaExpression@@() -> this.errorHandler.handleError(response) @AT@ 2231 @LENGTH@ 39
------------------INS FieldAccess@@this.errorHandler @TO@ MethodInvocation@@this.errorHandler.handleError(response) @AT@ 2231 @LENGTH@ 17
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.errorHandler @AT@ 2231 @LENGTH@ 4
---------------------INS SimpleName@@errorHandler @TO@ FieldAccess@@this.errorHandler @AT@ 2236 @LENGTH@ 12
------------------INS SimpleName@@MethodName:handleError:[response] @TO@ MethodInvocation@@this.errorHandler.handleError(response) @AT@ 2249 @LENGTH@ 21
---------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:handleError:[response] @AT@ 2261 @LENGTH@ 8
---------INS SimpleName@@MethodName:hasMessage:["[insufficient_scope] The access token expired"] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.errorHandler.handleError(response)).isInstanceOf(OAuth2AuthenticationException.class).hasMessage("[insufficient_scope] The access token expired") @AT@ 2332 @LENGTH@ 59
------------INS StringLiteral@@"[insufficient_scope] The access token expired" @TO@ SimpleName@@MethodName:hasMessage:["[insufficient_scope] The access token expired"] @AT@ 2343 @LENGTH@ 47


UPD IfStatement@@if (!inV.noNulls && inV.isNull[0]) {  outputIsNull[0]=true;  outputColVector.noNulls=false;  outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  return;} else {  outputIsNull[0]=false;  int offset=getSubstrStartOffset(vector[0],start[0],len[0],startIdx);  if (offset != -1) {    outputColVector.setVal(0,vector[0],offset,len[0] - (offset - start[0]));  } else {    outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  }} @TO@ if (inV.noNulls || !inV.isNull[0]) {  outputIsNull[0]=false;  int offset=getSubstrStartOffset(vector[0],start[0],len[0],startIdx);  if (offset != -1) {    outputColVector.setVal(0,vector[0],offset,len[0] - (offset - start[0]));  } else {    outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  }} else {  outputIsNull[0]=true;  outputColVector.noNulls=false;  outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);} @AT@ 4627 @LENGTH@ 552
---UPD InfixExpression@@!inV.noNulls && inV.isNull[0] @TO@ inV.noNulls || !inV.isNull[0] @AT@ 4631 @LENGTH@ 29
------DEL PrefixExpression@@!inV.noNulls @AT@ 4631 @LENGTH@ 12
---------DEL Operator@@! @AT@ 4631 @LENGTH@ 1
---------DEL QualifiedName@@inV.noNulls @AT@ 4632 @LENGTH@ 11
------INS QualifiedName@@inV.noNulls @TO@ InfixExpression@@!inV.noNulls && inV.isNull[0] @AT@ 4631 @LENGTH@ 11
---------MOV SimpleName@@inV @TO@ QualifiedName@@inV.noNulls @AT@ 4632 @LENGTH@ 3
---------MOV SimpleName@@noNulls @TO@ QualifiedName@@inV.noNulls @AT@ 4636 @LENGTH@ 7
------UPD Operator@@&& @TO@ || @AT@ 4643 @LENGTH@ 2
------INS PrefixExpression@@!inV.isNull[0] @TO@ InfixExpression@@!inV.noNulls && inV.isNull[0] @AT@ 4646 @LENGTH@ 14
---------INS Operator@@! @TO@ PrefixExpression@@!inV.isNull[0] @AT@ 4646 @LENGTH@ 1
---------MOV ArrayAccess@@inV.isNull[0] @TO@ PrefixExpression@@!inV.isNull[0] @AT@ 4647 @LENGTH@ 13
---UPD Block@@ThenBody:{  outputIsNull[0]=true;  outputColVector.noNulls=false;  outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  return;} @TO@ ElseBody:{  outputIsNull[0]=true;  outputColVector.noNulls=false;  outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);} @AT@ 4662 @LENGTH@ 171
------DEL ReturnStatement@@ @AT@ 4818 @LENGTH@ 7
---MOV Block@@ThenBody:{  outputIsNull[0]=true;  outputColVector.noNulls=false;  outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  return;} @TO@ IfStatement@@if (!inV.noNulls && inV.isNull[0]) {  outputIsNull[0]=true;  outputColVector.noNulls=false;  outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  return;} else {  outputIsNull[0]=false;  int offset=getSubstrStartOffset(vector[0],start[0],len[0],startIdx);  if (offset != -1) {    outputColVector.setVal(0,vector[0],offset,len[0] - (offset - start[0]));  } else {    outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  }} @AT@ 4662 @LENGTH@ 171
---UPD Block@@ElseBody:{  outputIsNull[0]=false;  int offset=getSubstrStartOffset(vector[0],start[0],len[0],startIdx);  if (offset != -1) {    outputColVector.setVal(0,vector[0],offset,len[0] - (offset - start[0]));  } else {    outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  }} @TO@ ThenBody:{  outputIsNull[0]=false;  int offset=getSubstrStartOffset(vector[0],start[0],len[0],startIdx);  if (offset != -1) {    outputColVector.setVal(0,vector[0],offset,len[0] - (offset - start[0]));  } else {    outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  }} @AT@ 4839 @LENGTH@ 340


UPD ThrowStatement@@ClassInstanceCreation:new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString()) @TO@ ClassInstanceCreation:new OAuth2AuthorizationException(oauth2Error) @AT@ 2532 @LENGTH@ 77
---UPD ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @TO@ OAuth2AuthorizationException[oauth2Error] @AT@ 2538 @LENGTH@ 70
------UPD SimpleType@@OAuth2AuthenticationException @TO@ OAuth2AuthorizationException @AT@ 2542 @LENGTH@ 29
------DEL MethodInvocation@@oauth2Error.toString() @AT@ 2585 @LENGTH@ 22
---------DEL SimpleName@@Name:oauth2Error @AT@ 2585 @LENGTH@ 11
---------DEL SimpleName@@MethodName:toString:[] @AT@ 2597 @LENGTH@ 10


DEL MethodDeclaration@@private, Log, MethodName:spyOnLogger, CachingConnectionFactory connectionFactory2,  @AT@ 18136 @LENGTH@ 263
---DEL Modifier@@private @AT@ 18136 @LENGTH@ 7
---DEL SimpleType@@Log @AT@ 18144 @LENGTH@ 3
---DEL SimpleName@@MethodName:spyOnLogger @AT@ 18148 @LENGTH@ 11
---DEL SingleVariableDeclaration@@CachingConnectionFactory connectionFactory2 @AT@ 18160 @LENGTH@ 43
------DEL SimpleType@@CachingConnectionFactory @AT@ 18160 @LENGTH@ 24
------DEL SimpleName@@connectionFactory2 @AT@ 18185 @LENGTH@ 18
---DEL VariableDeclarationStatement@@DirectFieldAccessor dfa=new DirectFieldAccessor(connectionFactory2); @AT@ 18209 @LENGTH@ 70
------DEL SimpleType@@DirectFieldAccessor @AT@ 18209 @LENGTH@ 19
------DEL VariableDeclarationFragment@@dfa=new DirectFieldAccessor(connectionFactory2) @AT@ 18229 @LENGTH@ 49
---------DEL SimpleName@@dfa @AT@ 18229 @LENGTH@ 3
---------DEL ClassInstanceCreation@@DirectFieldAccessor[connectionFactory2] @AT@ 18235 @LENGTH@ 43
------------DEL New@@new @AT@ 18235 @LENGTH@ 3
------------DEL SimpleType@@DirectFieldAccessor @AT@ 18239 @LENGTH@ 19
------------DEL SimpleName@@connectionFactory2 @AT@ 18259 @LENGTH@ 18
---DEL VariableDeclarationStatement@@Log logger=spy((Log)dfa.getPropertyValue("logger")); @AT@ 18282 @LENGTH@ 55
------DEL SimpleType@@Log @AT@ 18282 @LENGTH@ 3
------DEL VariableDeclarationFragment@@logger=spy((Log)dfa.getPropertyValue("logger")) @AT@ 18286 @LENGTH@ 50
---------DEL SimpleName@@logger @AT@ 18286 @LENGTH@ 6
---------DEL MethodInvocation@@spy((Log)dfa.getPropertyValue("logger")) @AT@ 18295 @LENGTH@ 41
------------DEL SimpleName@@MethodName:spy:[(Log)dfa.getPropertyValue("logger")] @AT@ 18295 @LENGTH@ 41
---------------DEL CastExpression@@(Log)dfa.getPropertyValue("logger") @AT@ 18299 @LENGTH@ 36
------------------DEL SimpleType@@Log @AT@ 18300 @LENGTH@ 3
------------------DEL MethodInvocation@@dfa.getPropertyValue("logger") @AT@ 18305 @LENGTH@ 30
---------------------DEL SimpleName@@Name:dfa @AT@ 18305 @LENGTH@ 3
---------------------DEL SimpleName@@MethodName:getPropertyValue:["logger"] @AT@ 18309 @LENGTH@ 26
------------------------DEL StringLiteral@@"logger" @AT@ 18326 @LENGTH@ 8
---DEL ExpressionStatement@@MethodInvocation:dfa.setPropertyValue("logger",logger) @AT@ 18340 @LENGTH@ 39
------DEL MethodInvocation@@dfa.setPropertyValue("logger",logger) @AT@ 18340 @LENGTH@ 38
---------DEL SimpleName@@Name:dfa @AT@ 18340 @LENGTH@ 3
---------DEL SimpleName@@MethodName:setPropertyValue:["logger", logger] @AT@ 18344 @LENGTH@ 34
------------DEL StringLiteral@@"logger" @AT@ 18361 @LENGTH@ 8
------------DEL SimpleName@@logger @AT@ 18371 @LENGTH@ 6
---DEL ReturnStatement@@SimpleName:logger @AT@ 18382 @LENGTH@ 14
------DEL SimpleName@@logger @AT@ 18389 @LENGTH@ 6


MOV FieldDeclaration@@private, AtomicBoolean, [getBusHasBeenCalled=new AtomicBoolean(false)] @TO@ TypeDeclaration@@[@UriEndpoint(firstVersion="1.0.0",scheme="cxf",title="CXF",syntax="cxf:beanId:address",consumerClass=CxfConsumer.class,label="soap,webservice"), public]CxfEndpoint, DefaultEndpoint[AsyncEndpoint, HeaderFilterStrategyAware, Service, Cloneable] @AT@ 5654 @LENGTH@ 69


UPD VariableDeclarationStatement@@URI redirectUri=this.authorizationRequestUriBuilder.build(authorizationRequest); @TO@ URI redirectUri=UriComponentsBuilder.fromUriString(authorizationRequest.getAuthorizationRequestUri()).build(true).toUri(); @AT@ 10029 @LENGTH@ 82
---UPD VariableDeclarationFragment@@redirectUri=this.authorizationRequestUriBuilder.build(authorizationRequest) @TO@ redirectUri=UriComponentsBuilder.fromUriString(authorizationRequest.getAuthorizationRequestUri()).build(true).toUri() @AT@ 10033 @LENGTH@ 77
------INS MethodInvocation@@UriComponentsBuilder.fromUriString(authorizationRequest.getAuthorizationRequestUri()).build(true).toUri() @TO@ VariableDeclarationFragment@@redirectUri=this.authorizationRequestUriBuilder.build(authorizationRequest) @AT@ 9918 @LENGTH@ 117
---------INS MethodInvocation@@MethodName:build:[true] @TO@ MethodInvocation@@UriComponentsBuilder.fromUriString(authorizationRequest.getAuthorizationRequestUri()).build(true).toUri() @AT@ 9918 @LENGTH@ 109
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:build:[true] @AT@ 10022 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:fromUriString:[authorizationRequest.getAuthorizationRequestUri()] @TO@ MethodInvocation@@UriComponentsBuilder.fromUriString(authorizationRequest.getAuthorizationRequestUri()).build(true).toUri() @AT@ 9918 @LENGTH@ 91
------------INS MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @TO@ MethodInvocation@@MethodName:fromUriString:[authorizationRequest.getAuthorizationRequestUri()] @AT@ 9959 @LENGTH@ 49
---------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @AT@ 9959 @LENGTH@ 20
---------------MOV SimpleName@@MethodName:build:[authorizationRequest] @TO@ MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @AT@ 10083 @LENGTH@ 27
---------INS SimpleName@@Name:UriComponentsBuilder @TO@ MethodInvocation@@UriComponentsBuilder.fromUriString(authorizationRequest.getAuthorizationRequestUri()).build(true).toUri() @AT@ 9918 @LENGTH@ 20
---------INS SimpleName@@MethodName:toUri:[] @TO@ MethodInvocation@@UriComponentsBuilder.fromUriString(authorizationRequest.getAuthorizationRequestUri()).build(true).toUri() @AT@ 10028 @LENGTH@ 7
------DEL MethodInvocation@@this.authorizationRequestUriBuilder.build(authorizationRequest) @AT@ 10047 @LENGTH@ 63
---------DEL FieldAccess@@this.authorizationRequestUriBuilder @AT@ 10047 @LENGTH@ 35
------------DEL ThisExpression@@this @AT@ 10047 @LENGTH@ 4
------------DEL SimpleName@@authorizationRequestUriBuilder @AT@ 10052 @LENGTH@ 30


UPD MethodDeclaration@@public, voidMethodName:CachingConnectionFactory, String hostname,  @TO@ public, voidMethodName:CachingConnectionFactory, @Nullable String hostname,  @AT@ 7472 @LENGTH@ 128
---UPD SingleVariableDeclaration@@String hostname @TO@ @Nullable String hostname @AT@ 7504 @LENGTH@ 15


UPD MethodDeclaration@@voidMethodName:NamedGraphRepositoryQuery, GraphQueryMethod graphQueryMethod, Session session, String cypherQuery, QueryMethodEvaluationContextProvider evaluationContextProvider,  @TO@ voidMethodName:NamedGraphRepositoryQuery, GraphQueryMethod graphQueryMethod, MetaData metaData, Session session, String cypherQuery, QueryMethodEvaluationContextProvider evaluationContextProvider,  @AT@ 1020 @LENGTH@ 266
---INS SingleVariableDeclaration@@MetaData metaData @TO@ MethodDeclaration@@voidMethodName:NamedGraphRepositoryQuery, GraphQueryMethod graphQueryMethod, Session session, String cypherQuery, QueryMethodEvaluationContextProvider evaluationContextProvider,  @AT@ 1150 @LENGTH@ 17
------INS SimpleType@@MetaData @TO@ SingleVariableDeclaration@@MetaData metaData @AT@ 1150 @LENGTH@ 8
------INS SimpleName@@metaData @TO@ SingleVariableDeclaration@@MetaData metaData @AT@ 1159 @LENGTH@ 8
---UPD SuperConstructorInvocation@@super(graphQueryMethod,session,evaluationContextProvider);
 @TO@ super(graphQueryMethod,metaData,session,evaluationContextProvider);
 @AT@ 1189 @LENGTH@ 60
------INS SimpleName@@metaData @TO@ SuperConstructorInvocation@@super(graphQueryMethod,session,evaluationContextProvider);
 @AT@ 1302 @LENGTH@ 8


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(ConnectionPoolBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(ConnectionPoolServiceConfigurator::new); @AT@ 4682 @LENGTH@ 94
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(ConnectionPoolBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(ConnectionPoolServiceConfigurator::new) @AT@ 4705 @LENGTH@ 70
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[ConnectionPoolBuilder::new] @TO@ SimpleResourceServiceHandler[ConnectionPoolServiceConfigurator::new] @AT@ 4715 @LENGTH@ 60


UPD ReturnStatement@@ClassInstanceCreation:new NimbusAuthorizationCodeTokenResponseClient() @TO@ ClassInstanceCreation:new DefaultAuthorizationCodeTokenResponseClient() @AT@ 11558 @LENGTH@ 56
---UPD ClassInstanceCreation@@NimbusAuthorizationCodeTokenResponseClient[] @TO@ DefaultAuthorizationCodeTokenResponseClient[] @AT@ 11565 @LENGTH@ 48
------UPD SimpleType@@NimbusAuthorizationCodeTokenResponseClient @TO@ DefaultAuthorizationCodeTokenResponseClient @AT@ 11569 @LENGTH@ 42


UPD ExpressionStatement@@MethodInvocation:assertTrue("We should get the socket time out exception here",e.getCause() instanceof SocketTimeoutException) @TO@ MethodInvocation:assertTrue("We should get the socket time out exception here",e instanceof SocketTimeoutException) @AT@ 4164 @LENGTH@ 111
---UPD MethodInvocation@@assertTrue("We should get the socket time out exception here",e.getCause() instanceof SocketTimeoutException) @TO@ assertTrue("We should get the socket time out exception here",e instanceof SocketTimeoutException) @AT@ 4164 @LENGTH@ 110
------UPD SimpleName@@MethodName:assertTrue:["We should get the socket time out exception here", e.getCause() instanceof SocketTimeoutException] @TO@ MethodName:assertTrue:["We should get the socket time out exception here", e instanceof SocketTimeoutException] @AT@ 4164 @LENGTH@ 110
---------UPD InstanceofExpression@@e.getCause() instanceof SocketTimeoutException @TO@ e instanceof SocketTimeoutException @AT@ 4227 @LENGTH@ 46
------------INS SimpleName@@e @TO@ InstanceofExpression@@e.getCause() instanceof SocketTimeoutException @AT@ 4148 @LENGTH@ 1
------------DEL MethodInvocation@@e.getCause() @AT@ 4227 @LENGTH@ 12
---------------DEL SimpleName@@Name:e @AT@ 4227 @LENGTH@ 1
---------------DEL SimpleName@@MethodName:getCause:[] @AT@ 4229 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertThat(mvcResult.getResponse().getRedirectedUrl()).matches("https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http://localhost/client-1") @TO@ MethodInvocation:assertThat(mvcResult.getResponse().getRedirectedUrl()).matches("https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fclient-1") @AT@ 6038 @LENGTH@ 207
---UPD MethodInvocation@@assertThat(mvcResult.getResponse().getRedirectedUrl()).matches("https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http://localhost/client-1") @TO@ assertThat(mvcResult.getResponse().getRedirectedUrl()).matches("https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fclient-1") @AT@ 6038 @LENGTH@ 206
------UPD SimpleName@@MethodName:matches:["https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http://localhost/client-1"] @TO@ MethodName:matches:["https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fclient-1"] @AT@ 6093 @LENGTH@ 151
---------UPD StringLiteral@@"https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http://localhost/client-1" @TO@ "https://provider.com/oauth2/authorize\\?response_type=code&client_id=client-1&scope=user&state=.{15,}&redirect_uri=http%3A%2F%2Flocalhost%2Fclient-1" @AT@ 6101 @LENGTH@ 142


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 4599 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 4619 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 4629 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 4629 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 4671 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 4678 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 4678 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 4688 @LENGTH@ 1


INS MethodDeclaration@@private, static, ServerWebExchangeMatcher, MethodName:createDefaultRequestMacher,  @TO@ TypeDeclaration@@[public]WebSessionServerRequestCache, [ServerRequestCache] @AT@ 3620 @LENGTH@ 535
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, ServerWebExchangeMatcher, MethodName:createDefaultRequestMacher,  @AT@ 3620 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, ServerWebExchangeMatcher, MethodName:createDefaultRequestMacher,  @AT@ 3628 @LENGTH@ 6
---INS SimpleType@@ServerWebExchangeMatcher @TO@ MethodDeclaration@@private, static, ServerWebExchangeMatcher, MethodName:createDefaultRequestMacher,  @AT@ 3635 @LENGTH@ 24
---INS SimpleName@@MethodName:createDefaultRequestMacher @TO@ MethodDeclaration@@private, static, ServerWebExchangeMatcher, MethodName:createDefaultRequestMacher,  @AT@ 3660 @LENGTH@ 26
---INS VariableDeclarationStatement@@ServerWebExchangeMatcher get=ServerWebExchangeMatchers.pathMatchers(HttpMethod.GET,"/**"); @TO@ MethodDeclaration@@private, static, ServerWebExchangeMatcher, MethodName:createDefaultRequestMacher,  @AT@ 3693 @LENGTH@ 93
------MOV VariableDeclarationFragment@@saveRequestMatcher=ServerWebExchangeMatchers.pathMatchers(HttpMethod.GET,"/**") @TO@ VariableDeclarationStatement@@ServerWebExchangeMatcher get=ServerWebExchangeMatchers.pathMatchers(HttpMethod.GET,"/**"); @AT@ 1830 @LENGTH@ 85
---------UPD SimpleName@@saveRequestMatcher @TO@ get @AT@ 1830 @LENGTH@ 18
------INS SimpleType@@ServerWebExchangeMatcher @TO@ VariableDeclarationStatement@@ServerWebExchangeMatcher get=ServerWebExchangeMatchers.pathMatchers(HttpMethod.GET,"/**"); @AT@ 3693 @LENGTH@ 24
---INS VariableDeclarationStatement@@ServerWebExchangeMatcher notFavicon=new NegatedServerWebExchangeMatcher(ServerWebExchangeMatchers.pathMatchers("/favicon.*")); @TO@ MethodDeclaration@@private, static, ServerWebExchangeMatcher, MethodName:createDefaultRequestMacher,  @AT@ 3789 @LENGTH@ 128
------INS SimpleType@@ServerWebExchangeMatcher @TO@ VariableDeclarationStatement@@ServerWebExchangeMatcher notFavicon=new NegatedServerWebExchangeMatcher(ServerWebExchangeMatchers.pathMatchers("/favicon.*")); @AT@ 3789 @LENGTH@ 24
------INS VariableDeclarationFragment@@notFavicon=new NegatedServerWebExchangeMatcher(ServerWebExchangeMatchers.pathMatchers("/favicon.*")) @TO@ VariableDeclarationStatement@@ServerWebExchangeMatcher notFavicon=new NegatedServerWebExchangeMatcher(ServerWebExchangeMatchers.pathMatchers("/favicon.*")); @AT@ 3814 @LENGTH@ 102
---------INS SimpleName@@notFavicon @TO@ VariableDeclarationFragment@@notFavicon=new NegatedServerWebExchangeMatcher(ServerWebExchangeMatchers.pathMatchers("/favicon.*")) @AT@ 3814 @LENGTH@ 10
---------INS ClassInstanceCreation@@NegatedServerWebExchangeMatcher[ServerWebExchangeMatchers.pathMatchers("/favicon.*")] @TO@ VariableDeclarationFragment@@notFavicon=new NegatedServerWebExchangeMatcher(ServerWebExchangeMatchers.pathMatchers("/favicon.*")) @AT@ 3827 @LENGTH@ 89
------------INS New@@new @TO@ ClassInstanceCreation@@NegatedServerWebExchangeMatcher[ServerWebExchangeMatchers.pathMatchers("/favicon.*")] @AT@ 3827 @LENGTH@ 3
------------INS SimpleType@@NegatedServerWebExchangeMatcher @TO@ ClassInstanceCreation@@NegatedServerWebExchangeMatcher[ServerWebExchangeMatchers.pathMatchers("/favicon.*")] @AT@ 3831 @LENGTH@ 31
------------INS MethodInvocation@@ServerWebExchangeMatchers.pathMatchers("/favicon.*") @TO@ ClassInstanceCreation@@NegatedServerWebExchangeMatcher[ServerWebExchangeMatchers.pathMatchers("/favicon.*")] @AT@ 3863 @LENGTH@ 52
---------------INS SimpleName@@Name:ServerWebExchangeMatchers @TO@ MethodInvocation@@ServerWebExchangeMatchers.pathMatchers("/favicon.*") @AT@ 3863 @LENGTH@ 25
---------------INS SimpleName@@MethodName:pathMatchers:["/favicon.*"] @TO@ MethodInvocation@@ServerWebExchangeMatchers.pathMatchers("/favicon.*") @AT@ 3889 @LENGTH@ 26
------------------INS StringLiteral@@"/favicon.*" @TO@ SimpleName@@MethodName:pathMatchers:["/favicon.*"] @AT@ 3902 @LENGTH@ 12
---INS VariableDeclarationStatement@@MediaTypeServerWebExchangeMatcher html=new MediaTypeServerWebExchangeMatcher(MediaType.TEXT_HTML); @TO@ MethodDeclaration@@private, static, ServerWebExchangeMatcher, MethodName:createDefaultRequestMacher,  @AT@ 3920 @LENGTH@ 100
------INS SimpleType@@MediaTypeServerWebExchangeMatcher @TO@ VariableDeclarationStatement@@MediaTypeServerWebExchangeMatcher html=new MediaTypeServerWebExchangeMatcher(MediaType.TEXT_HTML); @AT@ 3920 @LENGTH@ 33
------INS VariableDeclarationFragment@@html=new MediaTypeServerWebExchangeMatcher(MediaType.TEXT_HTML) @TO@ VariableDeclarationStatement@@MediaTypeServerWebExchangeMatcher html=new MediaTypeServerWebExchangeMatcher(MediaType.TEXT_HTML); @AT@ 3954 @LENGTH@ 65
---------INS SimpleName@@html @TO@ VariableDeclarationFragment@@html=new MediaTypeServerWebExchangeMatcher(MediaType.TEXT_HTML) @AT@ 3954 @LENGTH@ 4
---------INS ClassInstanceCreation@@MediaTypeServerWebExchangeMatcher[MediaType.TEXT_HTML] @TO@ VariableDeclarationFragment@@html=new MediaTypeServerWebExchangeMatcher(MediaType.TEXT_HTML) @AT@ 3961 @LENGTH@ 58
------------INS New@@new @TO@ ClassInstanceCreation@@MediaTypeServerWebExchangeMatcher[MediaType.TEXT_HTML] @AT@ 3961 @LENGTH@ 3
------------INS SimpleType@@MediaTypeServerWebExchangeMatcher @TO@ ClassInstanceCreation@@MediaTypeServerWebExchangeMatcher[MediaType.TEXT_HTML] @AT@ 3965 @LENGTH@ 33
------------INS QualifiedName@@MediaType.TEXT_HTML @TO@ ClassInstanceCreation@@MediaTypeServerWebExchangeMatcher[MediaType.TEXT_HTML] @AT@ 3999 @LENGTH@ 19
---------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.TEXT_HTML @AT@ 3999 @LENGTH@ 9
---------------INS SimpleName@@TEXT_HTML @TO@ QualifiedName@@MediaType.TEXT_HTML @AT@ 4009 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:html.setIgnoredMediaTypes(Collections.singleton(MediaType.ALL)) @TO@ MethodDeclaration@@private, static, ServerWebExchangeMatcher, MethodName:createDefaultRequestMacher,  @AT@ 4023 @LENGTH@ 64
------INS MethodInvocation@@html.setIgnoredMediaTypes(Collections.singleton(MediaType.ALL)) @TO@ ExpressionStatement@@MethodInvocation:html.setIgnoredMediaTypes(Collections.singleton(MediaType.ALL)) @AT@ 4023 @LENGTH@ 63
---------INS SimpleName@@Name:html @TO@ MethodInvocation@@html.setIgnoredMediaTypes(Collections.singleton(MediaType.ALL)) @AT@ 4023 @LENGTH@ 4
---------INS SimpleName@@MethodName:setIgnoredMediaTypes:[Collections.singleton(MediaType.ALL)] @TO@ MethodInvocation@@html.setIgnoredMediaTypes(Collections.singleton(MediaType.ALL)) @AT@ 4028 @LENGTH@ 58
------------INS MethodInvocation@@Collections.singleton(MediaType.ALL) @TO@ SimpleName@@MethodName:setIgnoredMediaTypes:[Collections.singleton(MediaType.ALL)] @AT@ 4049 @LENGTH@ 36
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(MediaType.ALL) @AT@ 4049 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singleton:[MediaType.ALL] @TO@ MethodInvocation@@Collections.singleton(MediaType.ALL) @AT@ 4061 @LENGTH@ 24
------------------INS QualifiedName@@MediaType.ALL @TO@ SimpleName@@MethodName:singleton:[MediaType.ALL] @AT@ 4071 @LENGTH@ 13
---------------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.ALL @AT@ 4071 @LENGTH@ 9
---------------------INS SimpleName@@ALL @TO@ QualifiedName@@MediaType.ALL @AT@ 4081 @LENGTH@ 3
---INS ReturnStatement@@ClassInstanceCreation:new AndServerWebExchangeMatcher(get,notFavicon,html) @TO@ MethodDeclaration@@private, static, ServerWebExchangeMatcher, MethodName:createDefaultRequestMacher,  @AT@ 4090 @LENGTH@ 62
------INS ClassInstanceCreation@@AndServerWebExchangeMatcher[get, notFavicon, html] @TO@ ReturnStatement@@ClassInstanceCreation:new AndServerWebExchangeMatcher(get,notFavicon,html) @AT@ 4097 @LENGTH@ 54
---------INS New@@new @TO@ ClassInstanceCreation@@AndServerWebExchangeMatcher[get, notFavicon, html] @AT@ 4097 @LENGTH@ 3
---------INS SimpleType@@AndServerWebExchangeMatcher @TO@ ClassInstanceCreation@@AndServerWebExchangeMatcher[get, notFavicon, html] @AT@ 4101 @LENGTH@ 27
---------INS SimpleName@@get @TO@ ClassInstanceCreation@@AndServerWebExchangeMatcher[get, notFavicon, html] @AT@ 4129 @LENGTH@ 3
---------INS SimpleName@@notFavicon @TO@ ClassInstanceCreation@@AndServerWebExchangeMatcher[get, notFavicon, html] @AT@ 4134 @LENGTH@ 10
---------INS SimpleName@@html @TO@ ClassInstanceCreation@@AndServerWebExchangeMatcher[get, notFavicon, html] @AT@ 4146 @LENGTH@ 4


UPD MethodDeclaration@@CapabilityServiceBuilder<SingleSignOnManager>, MethodName:getBuilder, ServiceName name, String serverName, String hostName,  @TO@ CapabilityServiceConfigurator, MethodName:getServiceConfigurator, ServiceName name, String serverName, String hostName,  @AT@ 2167 @LENGTH@ 65
---DEL ParameterizedType@@CapabilityServiceBuilder<SingleSignOnManager> @AT@ 2121 @LENGTH@ 45
------DEL SimpleType@@CapabilityServiceBuilder @AT@ 2121 @LENGTH@ 24
------DEL SimpleType@@SingleSignOnManager @AT@ 2146 @LENGTH@ 19
---INS SimpleType@@CapabilityServiceConfigurator @TO@ MethodDeclaration@@CapabilityServiceBuilder<SingleSignOnManager>, MethodName:getBuilder, ServiceName name, String serverName, String hostName,  @AT@ 2126 @LENGTH@ 29
---UPD SimpleName@@MethodName:getBuilder @TO@ MethodName:getServiceConfigurator @AT@ 2167 @LENGTH@ 10


UPD VariableDeclarationStatement@@Set<String> classesToAdd=getInititalEntityClasses(element); @TO@ Set<String> classesToAdd=getInitialEntityClasses(element); @AT@ 9565 @LENGTH@ 61
---UPD VariableDeclarationFragment@@classesToAdd=getInititalEntityClasses(element) @TO@ classesToAdd=getInitialEntityClasses(element) @AT@ 9577 @LENGTH@ 48
------UPD MethodInvocation@@getInititalEntityClasses(element) @TO@ getInitialEntityClasses(element) @AT@ 9592 @LENGTH@ 33
---------UPD SimpleName@@MethodName:getInititalEntityClasses:[element] @TO@ MethodName:getInitialEntityClasses:[element] @AT@ 9592 @LENGTH@ 33


UPD TypeDeclaration@@[@Description(name="concat",value="_FUNC_(str1, str2, ... strN) - returns the concatenation of str1, str2, ... strN or " + "_FUNC_(bin1, bin2, ... binN) - returns the concatenation of bytes in binary data " + " bin1, bin2, ... binN",extended="Returns NULL if any argument is NULL.\n" + "Example:\n" + "  > SELECT _FUNC_('abc', 'def') FROM src LIMIT 1;\n"+ "  'abcdef'"), @VectorizedExpressions({StringGroupConcatColCol.class,StringGroupColConcatStringScalar.class,StringGroupColConcatCharScalar.class,StringGroupColConcatVarCharScalar.class,StringScalarConcatStringGroupCol.class,CharScalarConcatStringGroupCol.class,VarCharScalarConcatStringGroupCol.class}), public]GenericUDFConcat, GenericUDF @TO@ [@Description(name="concat",value="_FUNC_(str1, str2, ... strN) - returns the concatenation of str1, str2, ... strN or " + "_FUNC_(bin1, bin2, ... binN) - returns the concatenation of bytes in binary data " + " bin1, bin2, ... binN",extended="Returns NULL if any argument is NULL.\n" + "Example:\n" + "  > SELECT _FUNC_('abc', 'def') FROM src LIMIT 1;\n"+ "  'abcdef'"), @VectorizedExpressions({StringGroupConcatColCol.class,StringGroupColConcatStringScalar.class,StringScalarConcatStringGroupCol.class}), public]GenericUDFConcat, GenericUDF @AT@ 2645 @LENGTH@ 6319
---UPD SingleMemberAnnotation@@@VectorizedExpressions({StringGroupConcatColCol.class,StringGroupColConcatStringScalar.class,StringGroupColConcatCharScalar.class,StringGroupColConcatVarCharScalar.class,StringScalarConcatStringGroupCol.class,CharScalarConcatStringGroupCol.class,VarCharScalarConcatStringGroupCol.class}) @TO@ @VectorizedExpressions({StringGroupConcatColCol.class,StringGroupColConcatStringScalar.class,StringScalarConcatStringGroupCol.class}) @AT@ 3038 @LENGTH@ 309


DEL ExpressionStatement@@MethodInvocation:converter.setJavaTypeMapper(null) @AT@ 4754 @LENGTH@ 34
---DEL MethodInvocation@@converter.setJavaTypeMapper(null) @AT@ 4754 @LENGTH@ 33
------DEL SimpleName@@Name:converter @AT@ 4754 @LENGTH@ 9
------DEL SimpleName@@MethodName:setJavaTypeMapper:[null] @AT@ 4764 @LENGTH@ 23
---------DEL NullLiteral@@null @AT@ 4782 @LENGTH@ 4


UPD IfStatement@@if (mapReduceOptions != null) {  Optionals.ifAllPresent(collation,mapReduceOptions.getCollation(),(l,r) -> {    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");  });  if (mapReduceOptions.getCollation().isPresent()) {    collation=mapReduceOptions.getCollation();  }  if (!CollectionUtils.isEmpty(mapReduceOptions.getScopeVariables())) {    mapReduce=mapReduce.scope(new Document(mapReduceOptions.getScopeVariables()));  }  if (mapReduceOptions.getLimit() != null && mapReduceOptions.getLimit() > 0) {    mapReduce=mapReduce.limit(mapReduceOptions.getLimit());  }  if (mapReduceOptions.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {    mapReduce=mapReduce.finalizeFunction(mapReduceOptions.getFinalizeFunction().get());  }  if (mapReduceOptions.getJavaScriptMode() != null) {    mapReduce=mapReduce.jsMode(mapReduceOptions.getJavaScriptMode());  }  if (mapReduceOptions.getOutputSharded().isPresent()) {    mapReduce=mapReduce.sharded(mapReduceOptions.getOutputSharded().get());  }  MapReduceAction action=mapReduceOptions.getMapReduceAction();  if (action != null && mapReduceOptions.getOutputCollection() != null) {    mapReduce=mapReduce.action(action).collectionName(mapReduceOptions.getOutputCollection());  }} @TO@ if (mapReduceOptions != null) {  Optionals.ifAllPresent(collation,mapReduceOptions.getCollation(),(l,r) -> {    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");  });  if (mapReduceOptions.getCollation().isPresent()) {    collation=mapReduceOptions.getCollation();  }  if (!CollectionUtils.isEmpty(mapReduceOptions.getScopeVariables())) {    mapReduce=mapReduce.scope(new Document(mapReduceOptions.getScopeVariables()));  }  if (mapReduceOptions.getLimit() != null && mapReduceOptions.getLimit() > 0) {    mapReduce=mapReduce.limit(mapReduceOptions.getLimit());  }  if (mapReduceOptions.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {    mapReduce=mapReduce.finalizeFunction(mapReduceOptions.getFinalizeFunction().get());  }  if (mapReduceOptions.getJavaScriptMode() != null) {    mapReduce=mapReduce.jsMode(mapReduceOptions.getJavaScriptMode());  }  if (mapReduceOptions.getOutputSharded().isPresent()) {    mapReduce=mapReduce.sharded(mapReduceOptions.getOutputSharded().get());  }  if (StringUtils.hasText(mapReduceOptions.getOutputCollection()) && !mapReduceOptions.usesInlineOutput()) {    mapReduce=mapReduce.collectionName(mapReduceOptions.getOutputCollection()).action(mapReduceOptions.getMapReduceAction());    if (mapReduceOptions.getOutputDatabase().isPresent()) {      mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get());    }  }} @AT@ 68050 @LENGTH@ 1404
---UPD Block@@ThenBody:{  Optionals.ifAllPresent(collation,mapReduceOptions.getCollation(),(l,r) -> {    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");  });  if (mapReduceOptions.getCollation().isPresent()) {    collation=mapReduceOptions.getCollation();  }  if (!CollectionUtils.isEmpty(mapReduceOptions.getScopeVariables())) {    mapReduce=mapReduce.scope(new Document(mapReduceOptions.getScopeVariables()));  }  if (mapReduceOptions.getLimit() != null && mapReduceOptions.getLimit() > 0) {    mapReduce=mapReduce.limit(mapReduceOptions.getLimit());  }  if (mapReduceOptions.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {    mapReduce=mapReduce.finalizeFunction(mapReduceOptions.getFinalizeFunction().get());  }  if (mapReduceOptions.getJavaScriptMode() != null) {    mapReduce=mapReduce.jsMode(mapReduceOptions.getJavaScriptMode());  }  if (mapReduceOptions.getOutputSharded().isPresent()) {    mapReduce=mapReduce.sharded(mapReduceOptions.getOutputSharded().get());  }  MapReduceAction action=mapReduceOptions.getMapReduceAction();  if (action != null && mapReduceOptions.getOutputCollection() != null) {    mapReduce=mapReduce.action(action).collectionName(mapReduceOptions.getOutputCollection());  }} @TO@ ThenBody:{  Optionals.ifAllPresent(collation,mapReduceOptions.getCollation(),(l,r) -> {    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");  });  if (mapReduceOptions.getCollation().isPresent()) {    collation=mapReduceOptions.getCollation();  }  if (!CollectionUtils.isEmpty(mapReduceOptions.getScopeVariables())) {    mapReduce=mapReduce.scope(new Document(mapReduceOptions.getScopeVariables()));  }  if (mapReduceOptions.getLimit() != null && mapReduceOptions.getLimit() > 0) {    mapReduce=mapReduce.limit(mapReduceOptions.getLimit());  }  if (mapReduceOptions.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {    mapReduce=mapReduce.finalizeFunction(mapReduceOptions.getFinalizeFunction().get());  }  if (mapReduceOptions.getJavaScriptMode() != null) {    mapReduce=mapReduce.jsMode(mapReduceOptions.getJavaScriptMode());  }  if (mapReduceOptions.getOutputSharded().isPresent()) {    mapReduce=mapReduce.sharded(mapReduceOptions.getOutputSharded().get());  }  if (StringUtils.hasText(mapReduceOptions.getOutputCollection()) && !mapReduceOptions.usesInlineOutput()) {    mapReduce=mapReduce.collectionName(mapReduceOptions.getOutputCollection()).action(mapReduceOptions.getMapReduceAction());    if (mapReduceOptions.getOutputDatabase().isPresent()) {      mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get());    }  }} @AT@ 68080 @LENGTH@ 1374
------DEL VariableDeclarationStatement@@MapReduceAction action=mapReduceOptions.getMapReduceAction(); @AT@ 69211 @LENGTH@ 63
---------DEL SimpleType@@MapReduceAction @AT@ 69211 @LENGTH@ 15
---------DEL VariableDeclarationFragment@@action=mapReduceOptions.getMapReduceAction() @AT@ 69227 @LENGTH@ 46
------------DEL SimpleName@@action @AT@ 69227 @LENGTH@ 6
------------DEL MethodInvocation@@mapReduceOptions.getMapReduceAction() @AT@ 69236 @LENGTH@ 37
------INS IfStatement@@if (StringUtils.hasText(mapReduceOptions.getOutputCollection()) && !mapReduceOptions.usesInlineOutput()) {  mapReduce=mapReduce.collectionName(mapReduceOptions.getOutputCollection()).action(mapReduceOptions.getMapReduceAction());  if (mapReduceOptions.getOutputDatabase().isPresent()) {    mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get());  }} @TO@ Block@@ThenBody:{  Optionals.ifAllPresent(collation,mapReduceOptions.getCollation(),(l,r) -> {    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");  });  if (mapReduceOptions.getCollation().isPresent()) {    collation=mapReduceOptions.getCollation();  }  if (!CollectionUtils.isEmpty(mapReduceOptions.getScopeVariables())) {    mapReduce=mapReduce.scope(new Document(mapReduceOptions.getScopeVariables()));  }  if (mapReduceOptions.getLimit() != null && mapReduceOptions.getLimit() > 0) {    mapReduce=mapReduce.limit(mapReduceOptions.getLimit());  }  if (mapReduceOptions.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {    mapReduce=mapReduce.finalizeFunction(mapReduceOptions.getFinalizeFunction().get());  }  if (mapReduceOptions.getJavaScriptMode() != null) {    mapReduce=mapReduce.jsMode(mapReduceOptions.getJavaScriptMode());  }  if (mapReduceOptions.getOutputSharded().isPresent()) {    mapReduce=mapReduce.sharded(mapReduceOptions.getOutputSharded().get());  }  MapReduceAction action=mapReduceOptions.getMapReduceAction();  if (action != null && mapReduceOptions.getOutputCollection() != null) {    mapReduce=mapReduce.action(action).collectionName(mapReduceOptions.getOutputCollection());  }} @AT@ 69215 @LENGTH@ 399
---------INS InfixExpression@@StringUtils.hasText(mapReduceOptions.getOutputCollection()) && !mapReduceOptions.usesInlineOutput() @TO@ IfStatement@@if (StringUtils.hasText(mapReduceOptions.getOutputCollection()) && !mapReduceOptions.usesInlineOutput()) {  mapReduce=mapReduce.collectionName(mapReduceOptions.getOutputCollection()).action(mapReduceOptions.getMapReduceAction());  if (mapReduceOptions.getOutputDatabase().isPresent()) {    mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get());  }} @AT@ 69219 @LENGTH@ 99
------------INS MethodInvocation@@StringUtils.hasText(mapReduceOptions.getOutputCollection()) @TO@ InfixExpression@@StringUtils.hasText(mapReduceOptions.getOutputCollection()) && !mapReduceOptions.usesInlineOutput() @AT@ 69219 @LENGTH@ 59
---------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(mapReduceOptions.getOutputCollection()) @AT@ 69219 @LENGTH@ 11
---------------INS SimpleName@@MethodName:hasText:[mapReduceOptions.getOutputCollection()] @TO@ MethodInvocation@@StringUtils.hasText(mapReduceOptions.getOutputCollection()) @AT@ 69231 @LENGTH@ 47
------------------INS MethodInvocation@@mapReduceOptions.getOutputCollection() @TO@ SimpleName@@MethodName:hasText:[mapReduceOptions.getOutputCollection()] @AT@ 69239 @LENGTH@ 38
---------------------MOV SimpleName@@Name:mapReduceOptions @TO@ MethodInvocation@@mapReduceOptions.getOutputCollection() @AT@ 69236 @LENGTH@ 16
---------------------MOV SimpleName@@MethodName:getMapReduceAction:[] @TO@ MethodInvocation@@mapReduceOptions.getOutputCollection() @AT@ 69253 @LENGTH@ 20
------------INS PrefixExpression@@!mapReduceOptions.usesInlineOutput() @TO@ InfixExpression@@StringUtils.hasText(mapReduceOptions.getOutputCollection()) && !mapReduceOptions.usesInlineOutput() @AT@ 69282 @LENGTH@ 36
---------------INS Operator@@! @TO@ PrefixExpression@@!mapReduceOptions.usesInlineOutput() @AT@ 69282 @LENGTH@ 1
---------------INS MethodInvocation@@mapReduceOptions.usesInlineOutput() @TO@ PrefixExpression@@!mapReduceOptions.usesInlineOutput() @AT@ 69283 @LENGTH@ 35
------------------MOV SimpleName@@Name:mapReduceOptions @TO@ MethodInvocation@@mapReduceOptions.usesInlineOutput() @AT@ 69300 @LENGTH@ 16
------------------MOV SimpleName@@MethodName:getOutputCollection:[] @TO@ MethodInvocation@@mapReduceOptions.usesInlineOutput() @AT@ 69317 @LENGTH@ 21
------------MOV Operator@@&& @TO@ InfixExpression@@StringUtils.hasText(mapReduceOptions.getOutputCollection()) && !mapReduceOptions.usesInlineOutput() @AT@ 69296 @LENGTH@ 2
---------MOV Block@@ThenBody:{  mapReduce=mapReduce.action(action).collectionName(mapReduceOptions.getOutputCollection());} @TO@ IfStatement@@if (StringUtils.hasText(mapReduceOptions.getOutputCollection()) && !mapReduceOptions.usesInlineOutput()) {  mapReduce=mapReduce.collectionName(mapReduceOptions.getOutputCollection()).action(mapReduceOptions.getMapReduceAction());  if (mapReduceOptions.getOutputDatabase().isPresent()) {    mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get());  }} @AT@ 69347 @LENGTH@ 103
------------INS IfStatement@@if (mapReduceOptions.getOutputDatabase().isPresent()) {  mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get());} @TO@ Block@@ThenBody:{  mapReduce=mapReduce.action(action).collectionName(mapReduceOptions.getOutputCollection());} @AT@ 69463 @LENGTH@ 146
---------------INS MethodInvocation@@mapReduceOptions.getOutputDatabase().isPresent() @TO@ IfStatement@@if (mapReduceOptions.getOutputDatabase().isPresent()) {  mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get());} @AT@ 69467 @LENGTH@ 48
------------------INS MethodInvocation@@MethodName:getOutputDatabase:[] @TO@ MethodInvocation@@mapReduceOptions.getOutputDatabase().isPresent() @AT@ 69467 @LENGTH@ 36
------------------INS SimpleName@@Name:mapReduceOptions @TO@ MethodInvocation@@mapReduceOptions.getOutputDatabase().isPresent() @AT@ 69467 @LENGTH@ 16
------------------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@mapReduceOptions.getOutputDatabase().isPresent() @AT@ 69504 @LENGTH@ 11
---------------INS Block@@ThenBody:{  mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get());} @TO@ IfStatement@@if (mapReduceOptions.getOutputDatabase().isPresent()) {  mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get());} @AT@ 69517 @LENGTH@ 92
------------------INS ExpressionStatement@@Assignment:mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get()) @TO@ Block@@ThenBody:{  mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get());} @AT@ 69524 @LENGTH@ 79
---------------------INS Assignment@@mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get()) @TO@ ExpressionStatement@@Assignment:mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get()) @AT@ 69524 @LENGTH@ 78
------------------------INS SimpleName@@mapReduce @TO@ Assignment@@mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get()) @AT@ 69524 @LENGTH@ 9
------------------------INS Operator@@= @TO@ Assignment@@mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get()) @AT@ 69533 @LENGTH@ 1
------------------------INS MethodInvocation@@mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get()) @TO@ Assignment@@mapReduce=mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get()) @AT@ 69536 @LENGTH@ 66
---------------------------INS SimpleName@@Name:mapReduce @TO@ MethodInvocation@@mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get()) @AT@ 69536 @LENGTH@ 9
---------------------------INS SimpleName@@MethodName:databaseName:[mapReduceOptions.getOutputDatabase().get()] @TO@ MethodInvocation@@mapReduce.databaseName(mapReduceOptions.getOutputDatabase().get()) @AT@ 69546 @LENGTH@ 56
------------------------------INS MethodInvocation@@mapReduceOptions.getOutputDatabase().get() @TO@ SimpleName@@MethodName:databaseName:[mapReduceOptions.getOutputDatabase().get()] @AT@ 69559 @LENGTH@ 42
---------------------------------INS MethodInvocation@@MethodName:getOutputDatabase:[] @TO@ MethodInvocation@@mapReduceOptions.getOutputDatabase().get() @AT@ 69559 @LENGTH@ 36
---------------------------------INS SimpleName@@Name:mapReduceOptions @TO@ MethodInvocation@@mapReduceOptions.getOutputDatabase().get() @AT@ 69559 @LENGTH@ 16
---------------------------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@mapReduceOptions.getOutputDatabase().get() @AT@ 69596 @LENGTH@ 5
------DEL IfStatement@@if (action != null && mapReduceOptions.getOutputCollection() != null) {  mapReduce=mapReduce.action(action).collectionName(mapReduceOptions.getOutputCollection());} @AT@ 69279 @LENGTH@ 171
---------DEL InfixExpression@@action != null && mapReduceOptions.getOutputCollection() != null @AT@ 69282 @LENGTH@ 64
------------DEL InfixExpression@@action != null @AT@ 69282 @LENGTH@ 14
---------------DEL SimpleName@@action @AT@ 69282 @LENGTH@ 6
---------------DEL Operator@@!= @AT@ 69288 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 69292 @LENGTH@ 4
------------DEL InfixExpression@@mapReduceOptions.getOutputCollection() != null @AT@ 69300 @LENGTH@ 46
---------------DEL MethodInvocation@@mapReduceOptions.getOutputCollection() @AT@ 69300 @LENGTH@ 38
---------------DEL Operator@@!= @AT@ 69338 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 69342 @LENGTH@ 4


UPD VariableDeclarationStatement@@GeoCoderEndpoint endpoint=context.getEndpoint("geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&apiKey=" + getApiKey(),GeoCoderEndpoint.class); @TO@ GeoCoderEndpoint endpoint=context.getEndpoint("geocoder:address:current?headersOnly=true&proxyHost=localhost" + "&proxyPort=8888&apiKey=" + getApiKey(),GeoCoderEndpoint.class); @AT@ 1369 @LENGTH@ 197
---UPD VariableDeclarationFragment@@endpoint=context.getEndpoint("geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&apiKey=" + getApiKey(),GeoCoderEndpoint.class) @TO@ endpoint=context.getEndpoint("geocoder:address:current?headersOnly=true&proxyHost=localhost" + "&proxyPort=8888&apiKey=" + getApiKey(),GeoCoderEndpoint.class) @AT@ 1386 @LENGTH@ 179
------UPD MethodInvocation@@context.getEndpoint("geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&apiKey=" + getApiKey(),GeoCoderEndpoint.class) @TO@ context.getEndpoint("geocoder:address:current?headersOnly=true&proxyHost=localhost" + "&proxyPort=8888&apiKey=" + getApiKey(),GeoCoderEndpoint.class) @AT@ 1397 @LENGTH@ 168
---------UPD SimpleName@@MethodName:getEndpoint:["geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&apiKey=" + getApiKey(), GeoCoderEndpoint.class] @TO@ MethodName:getEndpoint:["geocoder:address:current?headersOnly=true&proxyHost=localhost" + "&proxyPort=8888&apiKey=" + getApiKey(), GeoCoderEndpoint.class] @AT@ 1405 @LENGTH@ 160
------------UPD InfixExpression@@"geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&apiKey=" + getApiKey() @TO@ "geocoder:address:current?headersOnly=true&proxyHost=localhost" + "&proxyPort=8888&apiKey=" + getApiKey() @AT@ 1430 @LENGTH@ 98
---------------UPD StringLiteral@@"geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&apiKey=" @TO@ "geocoder:address:current?headersOnly=true&proxyHost=localhost" @AT@ 1430 @LENGTH@ 86
---------------INS StringLiteral@@"&proxyPort=8888&apiKey=" @TO@ InfixExpression@@"geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&apiKey=" + getApiKey() @AT@ 1524 @LENGTH@ 25


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @TO@ TypeDeclaration@@[public, final]ClientAuthenticationMethod,  @AT@ 1148 @LENGTH@ 90
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1148 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1156 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1163 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1169 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1174 @LENGTH@ 63
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 1174 @LENGTH@ 16
------INS QualifiedName@@SpringSecurityCoreVersion.SERIAL_VERSION_UID @TO@ VariableDeclarationFragment@@serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 1193 @LENGTH@ 44
---------INS SimpleName@@SpringSecurityCoreVersion @TO@ QualifiedName@@SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 1193 @LENGTH@ 25
---------INS SimpleName@@SERIAL_VERSION_UID @TO@ QualifiedName@@SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 1219 @LENGTH@ 18


MOV ExpressionStatement@@MethodInvocation:HotRodStoreResourceDefinition.buildTransformation(version,builder) @TO@ MethodDeclaration@@static, void, MethodName:buildTransformation, ModelVersion version, ResourceTransformationDescriptionBuilder builder,  @AT@ 10303 @LENGTH@ 68


UPD MethodDeclaration@@voidMethodName:AmqpListenerEndpointDescriptor, RabbitListenerEndpoint endpoint, RabbitListenerContainerFactory<?> containerFactory,  @TO@ voidMethodName:AmqpListenerEndpointDescriptor, RabbitListenerEndpoint endpoint, @Nullable RabbitListenerContainerFactory<?> containerFactory,  @AT@ 7947 @LENGTH@ 199
---UPD SingleVariableDeclaration@@RabbitListenerContainerFactory<?> containerFactory @TO@ @Nullable RabbitListenerContainerFactory<?> containerFactory @AT@ 8015 @LENGTH@ 50


UPD EnhancedForStatement@@for (Map.Entry<String,Expression> entry : step.getOptions().entrySet()) {  t.options.put(entry.getKey(),entry.getValue().evaluate(exchange,String.class));} @TO@ for (Map.Entry<String,Expression> entry : step.getOptions().entrySet()) {  try {    t.options.put(entry.getKey(),entry.getValue().evaluate(exchange,String.class));  } catch (  Exception ex) {    throw new RuntimeCamelException("Cannot evaluate saga option '" + entry.getKey() + "'",ex);  }} @AT@ 1669 @LENGTH@ 178
---INS TryStatement@@try {  t.options.put(entry.getKey(),entry.getValue().evaluate(exchange,String.class));} catch (Exception ex) {  throw new RuntimeCamelException("Cannot evaluate saga option '" + entry.getKey() + "'",ex);} @TO@ EnhancedForStatement@@for (Map.Entry<String,Expression> entry : step.getOptions().entrySet()) {  t.options.put(entry.getKey(),entry.getValue().evaluate(exchange,String.class));} @AT@ 1803 @LENGTH@ 263
------MOV ExpressionStatement@@MethodInvocation:t.options.put(entry.getKey(),entry.getValue().evaluate(exchange,String.class)) @TO@ TryStatement@@try {  t.options.put(entry.getKey(),entry.getValue().evaluate(exchange,String.class));} catch (Exception ex) {  throw new RuntimeCamelException("Cannot evaluate saga option '" + entry.getKey() + "'",ex);} @AT@ 1756 @LENGTH@ 81
------INS CatchClause@@catch (Exception ex) {  throw new RuntimeCamelException("Cannot evaluate saga option '" + entry.getKey() + "'",ex);} @TO@ TryStatement@@try {  t.options.put(entry.getKey(),entry.getValue().evaluate(exchange,String.class));} catch (Exception ex) {  throw new RuntimeCamelException("Cannot evaluate saga option '" + entry.getKey() + "'",ex);} @AT@ 1921 @LENGTH@ 145
---------INS SingleVariableDeclaration@@Exception ex @TO@ CatchClause@@catch (Exception ex) {  throw new RuntimeCamelException("Cannot evaluate saga option '" + entry.getKey() + "'",ex);} @AT@ 1928 @LENGTH@ 12
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception ex @AT@ 1928 @LENGTH@ 9
------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@Exception ex @AT@ 1938 @LENGTH@ 2
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException("Cannot evaluate saga option '" + entry.getKey() + "'",ex) @TO@ CatchClause@@catch (Exception ex) {  throw new RuntimeCamelException("Cannot evaluate saga option '" + entry.getKey() + "'",ex);} @AT@ 1960 @LENGTH@ 92
------------INS ClassInstanceCreation@@RuntimeCamelException["Cannot evaluate saga option '" + entry.getKey() + "'", ex] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException("Cannot evaluate saga option '" + entry.getKey() + "'",ex) @AT@ 1966 @LENGTH@ 85
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeCamelException["Cannot evaluate saga option '" + entry.getKey() + "'", ex] @AT@ 1966 @LENGTH@ 3
---------------INS SimpleType@@RuntimeCamelException @TO@ ClassInstanceCreation@@RuntimeCamelException["Cannot evaluate saga option '" + entry.getKey() + "'", ex] @AT@ 1970 @LENGTH@ 21
---------------INS InfixExpression@@"Cannot evaluate saga option '" + entry.getKey() + "'" @TO@ ClassInstanceCreation@@RuntimeCamelException["Cannot evaluate saga option '" + entry.getKey() + "'", ex] @AT@ 1992 @LENGTH@ 54
------------------INS StringLiteral@@"Cannot evaluate saga option '" @TO@ InfixExpression@@"Cannot evaluate saga option '" + entry.getKey() + "'" @AT@ 1992 @LENGTH@ 31
------------------INS Operator@@+ @TO@ InfixExpression@@"Cannot evaluate saga option '" + entry.getKey() + "'" @AT@ 2023 @LENGTH@ 1
------------------INS MethodInvocation@@entry.getKey() @TO@ InfixExpression@@"Cannot evaluate saga option '" + entry.getKey() + "'" @AT@ 2026 @LENGTH@ 14
---------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 2026 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 2032 @LENGTH@ 8
------------------INS StringLiteral@@"'" @TO@ InfixExpression@@"Cannot evaluate saga option '" + entry.getKey() + "'" @AT@ 2043 @LENGTH@ 3
---------------INS SimpleName@@ex @TO@ ClassInstanceCreation@@RuntimeCamelException["Cannot evaluate saga option '" + entry.getKey() + "'", ex] @AT@ 2048 @LENGTH@ 2


UPD MethodDeclaration@@public, voidMethodName:PendingConfirm, CorrelationData correlationData, long timestamp,  @TO@ public, voidMethodName:PendingConfirm, @Nullable CorrelationData correlationData, long timestamp,  @AT@ 1187 @LENGTH@ 147
---UPD SingleVariableDeclaration@@CorrelationData correlationData @TO@ @Nullable CorrelationData correlationData @AT@ 1209 @LENGTH@ 31


UPD TryStatement@@try {  JobExecution execution=repository.createJobExecution(job.getName(),new JobParameters());  cacheJobIds(execution);  list.add(execution);  Thread.sleep(1000);} catch (Exception e) {  list.add(e);} @TO@ try {  JobExecution execution=repository.createJobExecution(job.getName(),new JobParameters());  execution.setStartTime(new Date());  repository.update(execution);  cacheJobIds(execution);  list.add(execution);  Thread.sleep(1000);} catch (Exception e) {  list.add(e);} @AT@ 6831 @LENGTH@ 238
---INS ExpressionStatement@@MethodInvocation:execution.setStartTime(new Date()) @TO@ TryStatement@@try {  JobExecution execution=repository.createJobExecution(job.getName(),new JobParameters());  cacheJobIds(execution);  list.add(execution);  Thread.sleep(1000);} catch (Exception e) {  list.add(e);} @AT@ 6997 @LENGTH@ 35
------INS MethodInvocation@@execution.setStartTime(new Date()) @TO@ ExpressionStatement@@MethodInvocation:execution.setStartTime(new Date()) @AT@ 6997 @LENGTH@ 34
---------INS SimpleName@@Name:execution @TO@ MethodInvocation@@execution.setStartTime(new Date()) @AT@ 6997 @LENGTH@ 9
---------INS SimpleName@@MethodName:setStartTime:[new Date()] @TO@ MethodInvocation@@execution.setStartTime(new Date()) @AT@ 7007 @LENGTH@ 24
------------INS ClassInstanceCreation@@Date[] @TO@ SimpleName@@MethodName:setStartTime:[new Date()] @AT@ 7020 @LENGTH@ 10
---------------INS New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 7020 @LENGTH@ 3
---------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 7024 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:repository.update(execution) @TO@ TryStatement@@try {  JobExecution execution=repository.createJobExecution(job.getName(),new JobParameters());  cacheJobIds(execution);  list.add(execution);  Thread.sleep(1000);} catch (Exception e) {  list.add(e);} @AT@ 7038 @LENGTH@ 29
------INS MethodInvocation@@repository.update(execution) @TO@ ExpressionStatement@@MethodInvocation:repository.update(execution) @AT@ 7038 @LENGTH@ 28
---------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.update(execution) @AT@ 7038 @LENGTH@ 10
---------INS SimpleName@@MethodName:update:[execution] @TO@ MethodInvocation@@repository.update(execution) @AT@ 7049 @LENGTH@ 17
------------INS SimpleName@@execution @TO@ SimpleName@@MethodName:update:[execution] @AT@ 7056 @LENGTH@ 9


INS MethodDeclaration@@public, Builder, MethodName:registrationId, String registrationId,  @TO@ TypeDeclaration@@[public, static]Builder,  @AT@ 7092 @LENGTH@ 115
---INS Modifier@@public @TO@ MethodDeclaration@@public, Builder, MethodName:registrationId, String registrationId,  @AT@ 7092 @LENGTH@ 6
---INS SimpleType@@Builder @TO@ MethodDeclaration@@public, Builder, MethodName:registrationId, String registrationId,  @AT@ 7099 @LENGTH@ 7
---INS SimpleName@@MethodName:registrationId @TO@ MethodDeclaration@@public, Builder, MethodName:registrationId, String registrationId,  @AT@ 7107 @LENGTH@ 14
---INS SingleVariableDeclaration@@String registrationId @TO@ MethodDeclaration@@public, Builder, MethodName:registrationId, String registrationId,  @AT@ 7122 @LENGTH@ 21
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String registrationId @AT@ 7122 @LENGTH@ 6
------INS SimpleName@@registrationId @TO@ SingleVariableDeclaration@@String registrationId @AT@ 7129 @LENGTH@ 14
---INS ExpressionStatement@@Assignment:this.registrationId=registrationId @TO@ MethodDeclaration@@public, Builder, MethodName:registrationId, String registrationId,  @AT@ 7150 @LENGTH@ 37
------INS Assignment@@this.registrationId=registrationId @TO@ ExpressionStatement@@Assignment:this.registrationId=registrationId @AT@ 7150 @LENGTH@ 36
---------INS FieldAccess@@this.registrationId @TO@ Assignment@@this.registrationId=registrationId @AT@ 7150 @LENGTH@ 19
------------INS ThisExpression@@this @TO@ FieldAccess@@this.registrationId @AT@ 7150 @LENGTH@ 4
------------INS SimpleName@@registrationId @TO@ FieldAccess@@this.registrationId @AT@ 7155 @LENGTH@ 14
---------INS Operator@@= @TO@ Assignment@@this.registrationId=registrationId @AT@ 7169 @LENGTH@ 1
---------INS SimpleName@@registrationId @TO@ Assignment@@this.registrationId=registrationId @AT@ 7172 @LENGTH@ 14
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, Builder, MethodName:registrationId, String registrationId,  @AT@ 7191 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 7198 @LENGTH@ 4


UPD MethodDeclaration@@public, OAuth2Configurer, MethodName:oauth2, Exception,  @TO@ public, OAuth2Configurer<HttpSecurity>, MethodName:oauth2, Exception,  @AT@ 40795 @LENGTH@ 99
---INS ParameterizedType@@OAuth2Configurer<HttpSecurity> @TO@ MethodDeclaration@@public, OAuth2Configurer, MethodName:oauth2, Exception,  @AT@ 40802 @LENGTH@ 30
------INS SimpleType@@OAuth2Configurer @TO@ ParameterizedType@@OAuth2Configurer<HttpSecurity> @AT@ 40802 @LENGTH@ 16
------INS SimpleType@@HttpSecurity @TO@ ParameterizedType@@OAuth2Configurer<HttpSecurity> @AT@ 40819 @LENGTH@ 12
---DEL SimpleType@@OAuth2Configurer @AT@ 40802 @LENGTH@ 16
---UPD ReturnStatement@@MethodInvocation:getOrApply(new OAuth2Configurer()) @TO@ MethodInvocation:getOrApply(new OAuth2Configurer<>()) @AT@ 40849 @LENGTH@ 42
------UPD MethodInvocation@@getOrApply(new OAuth2Configurer()) @TO@ getOrApply(new OAuth2Configurer<>()) @AT@ 40856 @LENGTH@ 34
---------UPD SimpleName@@MethodName:getOrApply:[new OAuth2Configurer()] @TO@ MethodName:getOrApply:[new OAuth2Configurer<>()] @AT@ 40856 @LENGTH@ 34
------------UPD ClassInstanceCreation@@OAuth2Configurer[] @TO@ OAuth2Configurer<>[] @AT@ 40867 @LENGTH@ 22
---------------DEL SimpleType@@OAuth2Configurer @AT@ 40871 @LENGTH@ 16
---------------INS ParameterizedType@@OAuth2Configurer<> @TO@ ClassInstanceCreation@@OAuth2Configurer[] @AT@ 40885 @LENGTH@ 18
------------------INS SimpleType@@OAuth2Configurer @TO@ ParameterizedType@@OAuth2Configurer<> @AT@ 40885 @LENGTH@ 16


UPD VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request); @TO@ OAuth2AuthorizationRequest authorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request,response); @AT@ 8260 @LENGTH@ 122
---UPD VariableDeclarationFragment@@authorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request) @TO@ authorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request,response) @AT@ 8287 @LENGTH@ 94
------UPD MethodInvocation@@this.authorizationRequestRepository.removeAuthorizationRequest(request) @TO@ this.authorizationRequestRepository.removeAuthorizationRequest(request,response) @AT@ 8310 @LENGTH@ 71
---------UPD SimpleName@@MethodName:removeAuthorizationRequest:[request] @TO@ MethodName:removeAuthorizationRequest:[request, response] @AT@ 8346 @LENGTH@ 35
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:removeAuthorizationRequest:[request] @AT@ 8386 @LENGTH@ 8


UPD IfStatement@@if (idProperty != null && documentAccessor.hasValue(idProperty)) {  idValue=readIdValue(path,evaluator,idProperty,documentAccessor);  accessor.setProperty(idProperty,idValue);} @TO@ if (documentAccessor.hasValue(idProperty)) {  idValue=readIdValue(path,evaluator,idProperty,documentAccessor);  accessor.setProperty(idProperty,idValue);} @AT@ 11744 @LENGTH@ 190


UPD IfStatement@@if (!inV.noNulls && inV.isNull[0]) {  outputIsNull[0]=true;  outputColVector.noNulls=false;  outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);} else {  outputIsNull[0]=false;  populateSubstrOffsets(vector[0],start[0],len[0],startIdx,length,offsetArray);  if (offsetArray[0] != -1) {    outputColVector.setVal(0,vector[0],offsetArray[0],offsetArray[1]);  } else {    outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  }} @TO@ if (inV.noNulls || !inV.isNull[0]) {  outputIsNull[0]=false;  populateSubstrOffsets(vector[0],start[0],len[0],startIdx,length,offsetArray);  if (offsetArray[0] != -1) {    outputColVector.setVal(0,vector[0],offsetArray[0],offsetArray[1]);  } else {    outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  }} else {  outputIsNull[0]=true;  outputColVector.noNulls=false;  outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);} @AT@ 5244 @LENGTH@ 547
---UPD InfixExpression@@!inV.noNulls && inV.isNull[0] @TO@ inV.noNulls || !inV.isNull[0] @AT@ 5248 @LENGTH@ 29
------INS QualifiedName@@inV.noNulls @TO@ InfixExpression@@!inV.noNulls && inV.isNull[0] @AT@ 5247 @LENGTH@ 11
---------MOV SimpleName@@inV @TO@ QualifiedName@@inV.noNulls @AT@ 5249 @LENGTH@ 3
---------MOV SimpleName@@noNulls @TO@ QualifiedName@@inV.noNulls @AT@ 5253 @LENGTH@ 7
------DEL PrefixExpression@@!inV.noNulls @AT@ 5248 @LENGTH@ 12
---------DEL Operator@@! @AT@ 5248 @LENGTH@ 1
---------DEL QualifiedName@@inV.noNulls @AT@ 5249 @LENGTH@ 11
------UPD Operator@@&& @TO@ || @AT@ 5260 @LENGTH@ 2
------INS PrefixExpression@@!inV.isNull[0] @TO@ InfixExpression@@!inV.noNulls && inV.isNull[0] @AT@ 5262 @LENGTH@ 14
---------INS Operator@@! @TO@ PrefixExpression@@!inV.isNull[0] @AT@ 5262 @LENGTH@ 1
---------MOV ArrayAccess@@inV.isNull[0] @TO@ PrefixExpression@@!inV.isNull[0] @AT@ 5264 @LENGTH@ 13
---UPD Block@@ThenBody:{  outputIsNull[0]=true;  outputColVector.noNulls=false;  outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);} @TO@ ElseBody:{  outputIsNull[0]=true;  outputColVector.noNulls=false;  outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);} @AT@ 5279 @LENGTH@ 155
---MOV Block@@ThenBody:{  outputIsNull[0]=true;  outputColVector.noNulls=false;  outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);} @TO@ IfStatement@@if (!inV.noNulls && inV.isNull[0]) {  outputIsNull[0]=true;  outputColVector.noNulls=false;  outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);} else {  outputIsNull[0]=false;  populateSubstrOffsets(vector[0],start[0],len[0],startIdx,length,offsetArray);  if (offsetArray[0] != -1) {    outputColVector.setVal(0,vector[0],offsetArray[0],offsetArray[1]);  } else {    outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  }} @AT@ 5279 @LENGTH@ 155
---UPD Block@@ElseBody:{  outputIsNull[0]=false;  populateSubstrOffsets(vector[0],start[0],len[0],startIdx,length,offsetArray);  if (offsetArray[0] != -1) {    outputColVector.setVal(0,vector[0],offsetArray[0],offsetArray[1]);  } else {    outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  }} @TO@ ThenBody:{  outputIsNull[0]=false;  populateSubstrOffsets(vector[0],start[0],len[0],startIdx,length,offsetArray);  if (offsetArray[0] != -1) {    outputColVector.setVal(0,vector[0],offsetArray[0],offsetArray[1]);  } else {    outputColVector.setVal(0,EMPTY_STRING,0,EMPTY_STRING.length);  }} @AT@ 5440 @LENGTH@ 351


UPD VariableDeclarationStatement@@OAuth2LoginAuthenticationToken authenticationResult=new OAuth2LoginAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),oauth2User,mappedAuthorities,accessToken); @TO@ OAuth2LoginAuthenticationToken authenticationResult=new OAuth2LoginAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),oauth2User,mappedAuthorities,accessToken,accessTokenResponse.getRefreshToken()); @AT@ 5563 @LENGTH@ 266
---UPD VariableDeclarationFragment@@authenticationResult=new OAuth2LoginAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),oauth2User,mappedAuthorities,accessToken) @TO@ authenticationResult=new OAuth2LoginAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),oauth2User,mappedAuthorities,accessToken,accessTokenResponse.getRefreshToken()) @AT@ 5594 @LENGTH@ 234
------UPD ClassInstanceCreation@@OAuth2LoginAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), oauth2User, mappedAuthorities, accessToken] @TO@ OAuth2LoginAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), oauth2User, mappedAuthorities, accessToken, accessTokenResponse.getRefreshToken()] @AT@ 5617 @LENGTH@ 211
---------INS MethodInvocation@@accessTokenResponse.getRefreshToken() @TO@ ClassInstanceCreation@@OAuth2LoginAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), oauth2User, mappedAuthorities, accessToken] @AT@ 5832 @LENGTH@ 37
------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 5832 @LENGTH@ 19
------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 5852 @LENGTH@ 17


UPD VariableDeclarationStatement@@ResourceServiceHandler handler=new SimpleResourceServiceHandler(NoNearCacheBuilder::new); @TO@ ResourceServiceHandler handler=new SimpleResourceServiceHandler(NoNearCacheServiceConfigurator::new); @AT@ 2411 @LENGTH@ 91
---UPD VariableDeclarationFragment@@handler=new SimpleResourceServiceHandler(NoNearCacheBuilder::new) @TO@ handler=new SimpleResourceServiceHandler(NoNearCacheServiceConfigurator::new) @AT@ 2434 @LENGTH@ 67
------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[NoNearCacheBuilder::new] @TO@ SimpleResourceServiceHandler[NoNearCacheServiceConfigurator::new] @AT@ 2444 @LENGTH@ 57


UPD VariableDeclarationStatement@@OAuth2AuthorizationCodeAuthenticationToken authenticationResult=new OAuth2AuthorizationCodeAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),accessToken); @TO@ OAuth2AuthorizationCodeAuthenticationToken authenticationResult=new OAuth2AuthorizationCodeAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken()); @AT@ 3588 @LENGTH@ 259
---UPD VariableDeclarationFragment@@authenticationResult=new OAuth2AuthorizationCodeAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),accessToken) @TO@ authenticationResult=new OAuth2AuthorizationCodeAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken()) @AT@ 3631 @LENGTH@ 215
------UPD ClassInstanceCreation@@OAuth2AuthorizationCodeAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), accessToken] @TO@ OAuth2AuthorizationCodeAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), accessTokenResponse.getAccessToken(), accessTokenResponse.getRefreshToken()] @AT@ 3657 @LENGTH@ 189
---------INS MethodInvocation@@accessTokenResponse.getAccessToken() @TO@ ClassInstanceCreation@@OAuth2AuthorizationCodeAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), accessToken] @AT@ 3694 @LENGTH@ 36
------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getAccessToken() @AT@ 3694 @LENGTH@ 19
------------INS SimpleName@@MethodName:getAccessToken:[] @TO@ MethodInvocation@@accessTokenResponse.getAccessToken() @AT@ 3714 @LENGTH@ 16
---------INS MethodInvocation@@accessTokenResponse.getRefreshToken() @TO@ ClassInstanceCreation@@OAuth2AuthorizationCodeAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), accessToken] @AT@ 3736 @LENGTH@ 37
------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 3736 @LENGTH@ 19
------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 3756 @LENGTH@ 17
---------DEL SimpleName@@accessToken @AT@ 3834 @LENGTH@ 11


UPD MethodDeclaration@@public, ModelAndView, MethodName:handleRequest, @RequestParam("contactId") int contactId,  @TO@ public, ModelAndView, MethodName:delContact, @RequestParam("contactId") int contactId,  @AT@ 2366 @LENGTH@ 242
---UPD SimpleName@@MethodName:handleRequest @TO@ MethodName:delContact @AT@ 2386 @LENGTH@ 13


UPD SuperConstructorInvocation@@super(LocalRegistryFactoryBuilder::new);
 @TO@ super(LocalRegistryFactoryServiceConfigurator::new);
 @AT@ 1647 @LENGTH@ 40


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:analyzeAST, ASTNode ast, Exception,  @TO@ public, List<Task<?>>, MethodName:analyzeAST, ASTNode ast, Exception,  @AT@ 61125 @LENGTH@ 421
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 61132 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 61137 @LENGTH@ 28


UPD VariableDeclarationStatement@@CapabilityServiceConfigurator codecConfigurator=DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getDeploymentServiceConfigurator(codecServiceName,serverName,deploymentUnit.getName())).orElse(new SimpleSessionIdentifierCodecBuilder(codecServiceName,serverName)); @TO@ CapabilityServiceConfigurator codecConfigurator=DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getDeploymentServiceConfigurator(codecServiceName,serverName,deploymentUnit.getName())).orElse(new SimpleSessionIdentifierCodecServiceConfigurator(codecServiceName,serverName)); @AT@ 5270 @LENGTH@ 349
---UPD VariableDeclarationFragment@@codecConfigurator=DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getDeploymentServiceConfigurator(codecServiceName,serverName,deploymentUnit.getName())).orElse(new SimpleSessionIdentifierCodecBuilder(codecServiceName,serverName)) @TO@ codecConfigurator=DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getDeploymentServiceConfigurator(codecServiceName,serverName,deploymentUnit.getName())).orElse(new SimpleSessionIdentifierCodecServiceConfigurator(codecServiceName,serverName)) @AT@ 5300 @LENGTH@ 318
------UPD MethodInvocation@@DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getDeploymentServiceConfigurator(codecServiceName,serverName,deploymentUnit.getName())).orElse(new SimpleSessionIdentifierCodecBuilder(codecServiceName,serverName)) @TO@ DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getDeploymentServiceConfigurator(codecServiceName,serverName,deploymentUnit.getName())).orElse(new SimpleSessionIdentifierCodecServiceConfigurator(codecServiceName,serverName)) @AT@ 5320 @LENGTH@ 298
---------UPD SimpleName@@MethodName:orElse:[new SimpleSessionIdentifierCodecBuilder(codecServiceName,serverName)] @TO@ MethodName:orElse:[new SimpleSessionIdentifierCodecServiceConfigurator(codecServiceName,serverName)] @AT@ 5541 @LENGTH@ 77
------------UPD ClassInstanceCreation@@SimpleSessionIdentifierCodecBuilder[codecServiceName, serverName] @TO@ SimpleSessionIdentifierCodecServiceConfigurator[codecServiceName, serverName] @AT@ 5548 @LENGTH@ 69
---------------UPD SimpleType@@SimpleSessionIdentifierCodecBuilder @TO@ SimpleSessionIdentifierCodecServiceConfigurator @AT@ 5552 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:assertThat(xml).isEqualTo(expectedContent) @TO@ MethodInvocation:assertThat(xml).isEqualToIgnoringWhitespace(expectedContent) @AT@ 2452 @LENGTH@ 43
---UPD MethodInvocation@@assertThat(xml).isEqualTo(expectedContent) @TO@ assertThat(xml).isEqualToIgnoringWhitespace(expectedContent) @AT@ 2452 @LENGTH@ 42
------UPD SimpleName@@MethodName:isEqualTo:[expectedContent] @TO@ MethodName:isEqualToIgnoringWhitespace:[expectedContent] @AT@ 2468 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:from("file:{{input}}").routeId("fhir-example-osgi").onException(ProtocolException.class).handled(true).log(LoggingLevel.ERROR,"Error connecting to FHIR server with URL:{{serverUrl}}, please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}").end().onException(HL7Exception.class).handled(true).log(LoggingLevel.ERROR,"Error unmarshalling ${file:name} ${exception.message}").end().log("Converting ${file:name}").unmarshal().hl7().process(exchange -> {
  ORU_R01 msg=exchange.getIn().getBody(ORU_R01.class);
  final PID pid=msg.getPATIENT_RESULT().getPATIENT().getPID();
  String surname=pid.getPatientName()[0].getFamilyName().getFn1_Surname().getValue();
  String name=pid.getPatientName()[0].getGivenName().getValue();
  String patientId=msg.getPATIENT_RESULT().getPATIENT().getPID().getPatientID().getCx1_ID().getValue();
  Patient patient=new Patient();
  patient.addName().addGiven(name);
  patient.getNameFirstRep().setFamily(surname);
  patient.setId(patientId);
  exchange.getIn().setBody(patient);
}
).marshal().fhirJson("{{fhirVersion}}").log("Inserting Patient: ${body}").to("fhir://create/resource?inBody=resourceAsString&serverUrl={{serverUrl}}&fhirVersion={{fhirVersion}}").log("Patient created successfully: ${body.getCreated}") @TO@ MethodInvocation:from("file:{{input}}").routeId("fhir-example-osgi").onException(ProtocolException.class).handled(true).log(LoggingLevel.ERROR,"Error connecting to FHIR server with URL:{{serverUrl}}, " + "please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}").end().onException(HL7Exception.class).handled(true).log(LoggingLevel.ERROR,"Error unmarshalling ${file:name} ${exception.message}").end().log("Converting ${file:name}").unmarshal().hl7().process(exchange -> {
  ORU_R01 msg=exchange.getIn().getBody(ORU_R01.class);
  final PID pid=msg.getPATIENT_RESULT().getPATIENT().getPID();
  String surname=pid.getPatientName()[0].getFamilyName().getFn1_Surname().getValue();
  String name=pid.getPatientName()[0].getGivenName().getValue();
  String patientId=msg.getPATIENT_RESULT().getPATIENT().getPID().getPatientID().getCx1_ID().getValue();
  Patient patient=new Patient();
  patient.addName().addGiven(name);
  patient.getNameFirstRep().setFamily(surname);
  patient.setId(patientId);
  exchange.getIn().setBody(patient);
}
).marshal().fhirJson("{{fhirVersion}}").log("Inserting Patient: ${body}").to("fhir://create/resource?inBody=resourceAsString&serverUrl={{serverUrl}}&fhirVersion={{fhirVersion}}").log("Patient created successfully: ${body.getCreated}") @AT@ 1240 @LENGTH@ 1922
---UPD MethodInvocation@@from("file:{{input}}").routeId("fhir-example-osgi").onException(ProtocolException.class).handled(true).log(LoggingLevel.ERROR,"Error connecting to FHIR server with URL:{{serverUrl}}, please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}").end().onException(HL7Exception.class).handled(true).log(LoggingLevel.ERROR,"Error unmarshalling ${file:name} ${exception.message}").end().log("Converting ${file:name}").unmarshal().hl7().process(exchange -> {
  ORU_R01 msg=exchange.getIn().getBody(ORU_R01.class);
  final PID pid=msg.getPATIENT_RESULT().getPATIENT().getPID();
  String surname=pid.getPatientName()[0].getFamilyName().getFn1_Surname().getValue();
  String name=pid.getPatientName()[0].getGivenName().getValue();
  String patientId=msg.getPATIENT_RESULT().getPATIENT().getPID().getPatientID().getCx1_ID().getValue();
  Patient patient=new Patient();
  patient.addName().addGiven(name);
  patient.getNameFirstRep().setFamily(surname);
  patient.setId(patientId);
  exchange.getIn().setBody(patient);
}
).marshal().fhirJson("{{fhirVersion}}").log("Inserting Patient: ${body}").to("fhir://create/resource?inBody=resourceAsString&serverUrl={{serverUrl}}&fhirVersion={{fhirVersion}}").log("Patient created successfully: ${body.getCreated}") @TO@ from("file:{{input}}").routeId("fhir-example-osgi").onException(ProtocolException.class).handled(true).log(LoggingLevel.ERROR,"Error connecting to FHIR server with URL:{{serverUrl}}, " + "please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}").end().onException(HL7Exception.class).handled(true).log(LoggingLevel.ERROR,"Error unmarshalling ${file:name} ${exception.message}").end().log("Converting ${file:name}").unmarshal().hl7().process(exchange -> {
  ORU_R01 msg=exchange.getIn().getBody(ORU_R01.class);
  final PID pid=msg.getPATIENT_RESULT().getPATIENT().getPID();
  String surname=pid.getPatientName()[0].getFamilyName().getFn1_Surname().getValue();
  String name=pid.getPatientName()[0].getGivenName().getValue();
  String patientId=msg.getPATIENT_RESULT().getPATIENT().getPID().getPatientID().getCx1_ID().getValue();
  Patient patient=new Patient();
  patient.addName().addGiven(name);
  patient.getNameFirstRep().setFamily(surname);
  patient.setId(patientId);
  exchange.getIn().setBody(patient);
}
).marshal().fhirJson("{{fhirVersion}}").log("Inserting Patient: ${body}").to("fhir://create/resource?inBody=resourceAsString&serverUrl={{serverUrl}}&fhirVersion={{fhirVersion}}").log("Patient created successfully: ${body.getCreated}") @AT@ 1240 @LENGTH@ 1921
------UPD MethodInvocation@@MethodName:log:[LoggingLevel.ERROR, "Error connecting to FHIR server with URL:{{serverUrl}}, please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}"] @TO@ MethodName:log:[LoggingLevel.ERROR, "Error connecting to FHIR server with URL:{{serverUrl}}, " + "please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}"] @AT@ 1240 @LENGTH@ 342
---------INS InfixExpression@@"Error connecting to FHIR server with URL:{{serverUrl}}, " + "please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}" @TO@ MethodInvocation@@MethodName:log:[LoggingLevel.ERROR, "Error connecting to FHIR server with URL:{{serverUrl}}, please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}"] @AT@ 1414 @LENGTH@ 196
------------INS StringLiteral@@"Error connecting to FHIR server with URL:{{serverUrl}}, " @TO@ InfixExpression@@"Error connecting to FHIR server with URL:{{serverUrl}}, " + "please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}" @AT@ 1414 @LENGTH@ 58
------------INS Operator@@+ @TO@ InfixExpression@@"Error connecting to FHIR server with URL:{{serverUrl}}, " + "please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}" @AT@ 1472 @LENGTH@ 1
------------INS StringLiteral@@"please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}" @TO@ InfixExpression@@"Error connecting to FHIR server with URL:{{serverUrl}}, " + "please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}" @AT@ 1499 @LENGTH@ 111
---------DEL StringLiteral@@"Error connecting to FHIR server with URL:{{serverUrl}}, please check the org.apache.camel.example.fhir.osgi.configuration.cfg configuration file ${exception.message}" @AT@ 1414 @LENGTH@ 167


INS MethodDeclaration@@public, ServerHttpSecurity, MethodName:and,  @TO@ TypeDeclaration@@[public]OAuth2ClientSpec,  @AT@ 35326 @LENGTH@ 72
---INS Modifier@@public @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:and,  @AT@ 35326 @LENGTH@ 6
---INS SimpleType@@ServerHttpSecurity @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:and,  @AT@ 35333 @LENGTH@ 18
---INS SimpleName@@MethodName:and @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:and,  @AT@ 35352 @LENGTH@ 3
---INS ReturnStatement@@ThisExpression:ServerHttpSecurity.this @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:and,  @AT@ 35363 @LENGTH@ 31
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:ServerHttpSecurity.this @AT@ 35370 @LENGTH@ 23


DEL ExpressionStatement@@MethodInvocation:messageWriters.add(new EncoderHttpMessageWriter<>(new Jaxb2XmlEncoder())) @AT@ 13257 @LENGTH@ 74
---DEL MethodInvocation@@messageWriters.add(new EncoderHttpMessageWriter<>(new Jaxb2XmlEncoder())) @AT@ 13257 @LENGTH@ 73
------DEL SimpleName@@Name:messageWriters @AT@ 13257 @LENGTH@ 14
------DEL SimpleName@@MethodName:add:[new EncoderHttpMessageWriter<>(new Jaxb2XmlEncoder())] @AT@ 13272 @LENGTH@ 58
---------DEL ClassInstanceCreation@@EncoderHttpMessageWriter<>[new Jaxb2XmlEncoder()] @AT@ 13276 @LENGTH@ 53
------------DEL New@@new @AT@ 13276 @LENGTH@ 3
------------DEL ParameterizedType@@EncoderHttpMessageWriter<> @AT@ 13280 @LENGTH@ 26
---------------DEL SimpleType@@EncoderHttpMessageWriter @AT@ 13280 @LENGTH@ 24
------------DEL ClassInstanceCreation@@Jaxb2XmlEncoder[] @AT@ 13307 @LENGTH@ 21
---------------DEL New@@new @AT@ 13307 @LENGTH@ 3
---------------DEL SimpleType@@Jaxb2XmlEncoder @AT@ 13311 @LENGTH@ 15


UPD EnhancedForStatement@@for (Class<?> converter : converters) {  for (  CamelContext context : contexts) {    loader.loadConverterMethods(context.getTypeConverterRegistry(),converter);  }} @TO@ for (CamelContext context : contexts) {  CdiTypeConverterLoader loader=new CdiTypeConverterLoader();  for (  Class<?> converter : converters) {    loader.loadConverterMethods(context.getTypeConverterRegistry(),converter);  }} @AT@ 18557 @LENGTH@ 207
---MOV VariableDeclarationStatement@@CdiTypeConverterLoader loader=new CdiTypeConverterLoader(); @TO@ EnhancedForStatement@@for (Class<?> converter : converters) {  for (  CamelContext context : contexts) {    loader.loadConverterMethods(context.getTypeConverterRegistry(),converter);  }} @AT@ 18487 @LENGTH@ 61
---INS SingleVariableDeclaration@@CamelContext context @TO@ EnhancedForStatement@@for (Class<?> converter : converters) {  for (  CamelContext context : contexts) {    loader.loadConverterMethods(context.getTypeConverterRegistry(),converter);  }} @AT@ 18492 @LENGTH@ 20
------INS SimpleType@@CamelContext @TO@ SingleVariableDeclaration@@CamelContext context @AT@ 18492 @LENGTH@ 12
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@CamelContext context @AT@ 18505 @LENGTH@ 7
---UPD SimpleName@@converters @TO@ contexts @AT@ 18583 @LENGTH@ 10
---UPD EnhancedForStatement@@for (CamelContext context : contexts) {  loader.loadConverterMethods(context.getTypeConverterRegistry(),converter);} @TO@ for (Class<?> converter : converters) {  loader.loadConverterMethods(context.getTypeConverterRegistry(),converter);} @AT@ 18609 @LENGTH@ 145
------MOV SingleVariableDeclaration@@Class<?> converter @TO@ EnhancedForStatement@@for (CamelContext context : contexts) {  loader.loadConverterMethods(context.getTypeConverterRegistry(),converter);} @AT@ 18562 @LENGTH@ 18
------DEL SingleVariableDeclaration@@CamelContext context @AT@ 18614 @LENGTH@ 20
---------DEL SimpleType@@CamelContext @AT@ 18614 @LENGTH@ 12
---------DEL SimpleName@@context @AT@ 18627 @LENGTH@ 7
------UPD SimpleName@@contexts @TO@ converters @AT@ 18637 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:exclude=processor.getExcludePattern().toString() @TO@ Assignment:exclude=Arrays.toString(processor.getExcludePattern()) @AT@ 1683 @LENGTH@ 51
---UPD Assignment@@exclude=processor.getExcludePattern().toString() @TO@ exclude=Arrays.toString(processor.getExcludePattern()) @AT@ 1683 @LENGTH@ 50
------DEL MethodInvocation@@processor.getExcludePattern().toString() @AT@ 1693 @LENGTH@ 40
---------DEL MethodInvocation@@MethodName:getExcludePattern:[] @AT@ 1693 @LENGTH@ 29
------INS MethodInvocation@@Arrays.toString(processor.getExcludePattern()) @TO@ Assignment@@exclude=processor.getExcludePattern().toString() @AT@ 1719 @LENGTH@ 46
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(processor.getExcludePattern()) @AT@ 1719 @LENGTH@ 6
---------INS SimpleName@@MethodName:toString:[processor.getExcludePattern()] @TO@ MethodInvocation@@Arrays.toString(processor.getExcludePattern()) @AT@ 1726 @LENGTH@ 39
------------INS MethodInvocation@@processor.getExcludePattern() @TO@ SimpleName@@MethodName:toString:[processor.getExcludePattern()] @AT@ 1735 @LENGTH@ 29
---------------MOV SimpleName@@Name:processor @TO@ MethodInvocation@@processor.getExcludePattern() @AT@ 1693 @LENGTH@ 9
---------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@processor.getExcludePattern() @AT@ 1723 @LENGTH@ 10


UPD TypeDeclaration@@[public]BeanstalkProducer, DefaultProducer[AsyncProcessor] @TO@ [public]BeanstalkProducer, DefaultAsyncProducer @AT@ 1262 @LENGTH@ 2864
---UPD SimpleType@@DefaultProducer @TO@ DefaultAsyncProducer @AT@ 1301 @LENGTH@ 15
---DEL SimpleType@@AsyncProcessor @AT@ 1328 @LENGTH@ 14


INS MethodDeclaration@@Person, MethodName:findWithSliceInProjection, String id, int skip, int limit,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QuerydslPredicateExecutor<Person>] @AT@ 10763 @LENGTH@ 58
---INS SimpleType@@Person @TO@ MethodDeclaration@@Person, MethodName:findWithSliceInProjection, String id, int skip, int limit,  @AT@ 10756 @LENGTH@ 6
---INS SimpleName@@MethodName:findWithSliceInProjection @TO@ MethodDeclaration@@Person, MethodName:findWithSliceInProjection, String id, int skip, int limit,  @AT@ 10763 @LENGTH@ 25
---INS SingleVariableDeclaration@@String id @TO@ MethodDeclaration@@Person, MethodName:findWithSliceInProjection, String id, int skip, int limit,  @AT@ 10789 @LENGTH@ 9
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String id @AT@ 10789 @LENGTH@ 6
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@String id @AT@ 10796 @LENGTH@ 2
---INS SingleVariableDeclaration@@int skip @TO@ MethodDeclaration@@Person, MethodName:findWithSliceInProjection, String id, int skip, int limit,  @AT@ 10800 @LENGTH@ 8
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int skip @AT@ 10800 @LENGTH@ 3
------INS SimpleName@@skip @TO@ SingleVariableDeclaration@@int skip @AT@ 10804 @LENGTH@ 4
---INS SingleVariableDeclaration@@int limit @TO@ MethodDeclaration@@Person, MethodName:findWithSliceInProjection, String id, int skip, int limit,  @AT@ 10810 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int limit @AT@ 10810 @LENGTH@ 3
------INS SimpleName@@limit @TO@ SingleVariableDeclaration@@int limit @AT@ 10814 @LENGTH@ 5


UPD VariableDeclarationStatement@@String containerName=InfinispanSessionManagerFactoryBuilder.DEFAULT_CACHE_CONTAINER; @TO@ String containerName=InfinispanSessionManagerFactoryServiceConfigurator.DEFAULT_CACHE_CONTAINER; @AT@ 3176 @LENGTH@ 86
---UPD VariableDeclarationFragment@@containerName=InfinispanSessionManagerFactoryBuilder.DEFAULT_CACHE_CONTAINER @TO@ containerName=InfinispanSessionManagerFactoryServiceConfigurator.DEFAULT_CACHE_CONTAINER @AT@ 3183 @LENGTH@ 78
------UPD QualifiedName@@InfinispanSessionManagerFactoryBuilder.DEFAULT_CACHE_CONTAINER @TO@ InfinispanSessionManagerFactoryServiceConfigurator.DEFAULT_CACHE_CONTAINER @AT@ 3199 @LENGTH@ 62
---------UPD SimpleName@@InfinispanSessionManagerFactoryBuilder @TO@ InfinispanSessionManagerFactoryServiceConfigurator @AT@ 3199 @LENGTH@ 38


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5284 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5304 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 5286 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5314 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5328 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 5335 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5335 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 5345 @LENGTH@ 1


UPD MethodDeclaration@@protected, voidMethodName:StoreResourceDefinition, PathElement path, PathElement legacyPath, ResourceDescriptionResolver resolver, UnaryOperator<ResourceDescriptor> configurator, ResourceServiceBuilderFactory<PersistenceConfiguration> builderFactory,  @TO@ protected, voidMethodName:StoreResourceDefinition, PathElement path, PathElement legacyPath, ResourceDescriptionResolver resolver, UnaryOperator<ResourceDescriptor> configurator, ResourceServiceConfiguratorFactory serviceConfiguratorFactory,  @AT@ 7950 @LENGTH@ 425
---UPD SingleVariableDeclaration@@ResourceServiceBuilderFactory<PersistenceConfiguration> builderFactory @TO@ ResourceServiceConfiguratorFactory serviceConfiguratorFactory @AT@ 8112 @LENGTH@ 70
------DEL ParameterizedType@@ResourceServiceBuilderFactory<PersistenceConfiguration> @AT@ 8112 @LENGTH@ 55
---------DEL SimpleType@@ResourceServiceBuilderFactory @AT@ 8112 @LENGTH@ 29
---------DEL SimpleType@@PersistenceConfiguration @AT@ 8142 @LENGTH@ 24
------INS SimpleType@@ResourceServiceConfiguratorFactory @TO@ SingleVariableDeclaration@@ResourceServiceBuilderFactory<PersistenceConfiguration> builderFactory @AT@ 8117 @LENGTH@ 34
------UPD SimpleName@@builderFactory @TO@ serviceConfiguratorFactory @AT@ 8168 @LENGTH@ 14
---UPD ExpressionStatement@@Assignment:this.handler=new SimpleResourceServiceHandler(builderFactory) @TO@ Assignment:this.handler=new SimpleResourceServiceHandler(serviceConfiguratorFactory) @AT@ 8305 @LENGTH@ 64
------UPD Assignment@@this.handler=new SimpleResourceServiceHandler(builderFactory) @TO@ this.handler=new SimpleResourceServiceHandler(serviceConfiguratorFactory) @AT@ 8305 @LENGTH@ 63
---------UPD ClassInstanceCreation@@SimpleResourceServiceHandler[builderFactory] @TO@ SimpleResourceServiceHandler[serviceConfiguratorFactory] @AT@ 8320 @LENGTH@ 48
------------UPD SimpleName@@builderFactory @TO@ serviceConfiguratorFactory @AT@ 8353 @LENGTH@ 14


UPD MethodDeclaration@@private, void, MethodName:createComponentConfigurationSource, String packageName, ComponentModel model, String overrideComponentName, MojoFailureException,  @TO@ private, void, MethodName:createComponentConfigurationSourceInnerClass, JavaClassSource javaClass, Set<JavaClassSource> nestedTypes, ComponentModel model, MojoFailureException,  @AT@ 34285 @LENGTH@ 14671
---UPD SimpleName@@MethodName:createComponentConfigurationSource @TO@ MethodName:createComponentConfigurationSourceInnerClass @AT@ 34298 @LENGTH@ 34
---UPD SingleVariableDeclaration@@String packageName @TO@ JavaClassSource javaClass @AT@ 34333 @LENGTH@ 18
------UPD SimpleType@@String @TO@ JavaClassSource @AT@ 34333 @LENGTH@ 6
------UPD SimpleName@@packageName @TO@ javaClass @AT@ 34340 @LENGTH@ 11
---UPD SingleVariableDeclaration@@ComponentModel model @TO@ Set<JavaClassSource> nestedTypes @AT@ 34353 @LENGTH@ 20
------DEL SimpleType@@ComponentModel @AT@ 34353 @LENGTH@ 14
------UPD SimpleName@@model @TO@ nestedTypes @AT@ 34368 @LENGTH@ 5
------INS ParameterizedType@@Set<JavaClassSource> @TO@ SingleVariableDeclaration@@ComponentModel model @AT@ 40716 @LENGTH@ 20
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<JavaClassSource> @AT@ 40716 @LENGTH@ 3
---------INS SimpleType@@JavaClassSource @TO@ ParameterizedType@@Set<JavaClassSource> @AT@ 40720 @LENGTH@ 15
---UPD SingleVariableDeclaration@@String overrideComponentName @TO@ ComponentModel model @AT@ 34375 @LENGTH@ 28
------UPD SimpleType@@String @TO@ ComponentModel @AT@ 34375 @LENGTH@ 6
------UPD SimpleName@@overrideComponentName @TO@ model @AT@ 34382 @LENGTH@ 21


UPD IfStatement@@if (response.getHeader(Exchange.CONTENT_TYPE) != null) {  if (!ObjectHelper.isEmpty(cxfExchange) && !ObjectHelper.isEmpty(cxfExchange.getOutMessage())) {    cxfExchange.getOutMessage().putIfAbsent(org.apache.cxf.message.Message.PROTOCOL_HEADERS,new TreeMap<>(String.CASE_INSENSITIVE_ORDER));  }  final Map<String,List<String>> cxfHeaders=CastUtils.cast((Map<?,?>)cxfExchange.getOutMessage().get(org.apache.cxf.message.Message.PROTOCOL_HEADERS));  if (!cxfHeaders.containsKey(Exchange.CONTENT_TYPE)) {    List<String> a=Arrays.asList((String)response.getHeader(Exchange.CONTENT_TYPE));    cxfHeaders.put(Exchange.CONTENT_TYPE,a);    cxfExchange.getOutMessage().put(Exchange.CONTENT_TYPE,response.getHeader(Exchange.CONTENT_TYPE));  }} @TO@ if (response.getHeader(Exchange.CONTENT_TYPE) != null && !cxfExchange.containsKey(org.apache.cxf.message.Message.CONTENT_TYPE)) {  if (!ObjectHelper.isEmpty(cxfExchange) && !ObjectHelper.isEmpty(cxfExchange.getOutMessage())) {    cxfExchange.getOutMessage().putIfAbsent(org.apache.cxf.message.Message.PROTOCOL_HEADERS,new TreeMap<>(String.CASE_INSENSITIVE_ORDER));  }  final Map<String,List<String>> cxfHeaders=CastUtils.cast((Map<?,?>)cxfExchange.getOutMessage().get(org.apache.cxf.message.Message.PROTOCOL_HEADERS));  if (!cxfHeaders.containsKey(Exchange.CONTENT_TYPE)) {    List<String> a=Arrays.asList((String)response.getHeader(Exchange.CONTENT_TYPE));    cxfHeaders.put(Exchange.CONTENT_TYPE,a);    cxfExchange.getOutMessage().put(Exchange.CONTENT_TYPE,response.getHeader(Exchange.CONTENT_TYPE));  }} @AT@ 5203 @LENGTH@ 977
---INS InfixExpression@@response.getHeader(Exchange.CONTENT_TYPE) != null && !cxfExchange.containsKey(org.apache.cxf.message.Message.CONTENT_TYPE) @TO@ IfStatement@@if (response.getHeader(Exchange.CONTENT_TYPE) != null) {  if (!ObjectHelper.isEmpty(cxfExchange) && !ObjectHelper.isEmpty(cxfExchange.getOutMessage())) {    cxfExchange.getOutMessage().putIfAbsent(org.apache.cxf.message.Message.PROTOCOL_HEADERS,new TreeMap<>(String.CASE_INSENSITIVE_ORDER));  }  final Map<String,List<String>> cxfHeaders=CastUtils.cast((Map<?,?>)cxfExchange.getOutMessage().get(org.apache.cxf.message.Message.PROTOCOL_HEADERS));  if (!cxfHeaders.containsKey(Exchange.CONTENT_TYPE)) {    List<String> a=Arrays.asList((String)response.getHeader(Exchange.CONTENT_TYPE));    cxfHeaders.put(Exchange.CONTENT_TYPE,a);    cxfExchange.getOutMessage().put(Exchange.CONTENT_TYPE,response.getHeader(Exchange.CONTENT_TYPE));  }} @AT@ 5207 @LENGTH@ 122
------MOV InfixExpression@@response.getHeader(Exchange.CONTENT_TYPE) != null @TO@ InfixExpression@@response.getHeader(Exchange.CONTENT_TYPE) != null && !cxfExchange.containsKey(org.apache.cxf.message.Message.CONTENT_TYPE) @AT@ 5207 @LENGTH@ 49
------INS Operator@@&& @TO@ InfixExpression@@response.getHeader(Exchange.CONTENT_TYPE) != null && !cxfExchange.containsKey(org.apache.cxf.message.Message.CONTENT_TYPE) @AT@ 5256 @LENGTH@ 2
------INS PrefixExpression@@!cxfExchange.containsKey(org.apache.cxf.message.Message.CONTENT_TYPE) @TO@ InfixExpression@@response.getHeader(Exchange.CONTENT_TYPE) != null && !cxfExchange.containsKey(org.apache.cxf.message.Message.CONTENT_TYPE) @AT@ 5260 @LENGTH@ 69
---------INS Operator@@! @TO@ PrefixExpression@@!cxfExchange.containsKey(org.apache.cxf.message.Message.CONTENT_TYPE) @AT@ 5260 @LENGTH@ 1
---------INS MethodInvocation@@cxfExchange.containsKey(org.apache.cxf.message.Message.CONTENT_TYPE) @TO@ PrefixExpression@@!cxfExchange.containsKey(org.apache.cxf.message.Message.CONTENT_TYPE) @AT@ 5261 @LENGTH@ 68
------------INS SimpleName@@Name:cxfExchange @TO@ MethodInvocation@@cxfExchange.containsKey(org.apache.cxf.message.Message.CONTENT_TYPE) @AT@ 5261 @LENGTH@ 11
------------INS SimpleName@@MethodName:containsKey:[org.apache.cxf.message.Message.CONTENT_TYPE] @TO@ MethodInvocation@@cxfExchange.containsKey(org.apache.cxf.message.Message.CONTENT_TYPE) @AT@ 5273 @LENGTH@ 56
---------------INS QualifiedName@@org.apache.cxf.message.Message.CONTENT_TYPE @TO@ SimpleName@@MethodName:containsKey:[org.apache.cxf.message.Message.CONTENT_TYPE] @AT@ 5285 @LENGTH@ 43
------------------INS QualifiedName@@org.apache.cxf.message.Message @TO@ QualifiedName@@org.apache.cxf.message.Message.CONTENT_TYPE @AT@ 5285 @LENGTH@ 30
---------------------INS QualifiedName@@org.apache.cxf.message @TO@ QualifiedName@@org.apache.cxf.message.Message @AT@ 5285 @LENGTH@ 22
------------------------INS QualifiedName@@org.apache.cxf @TO@ QualifiedName@@org.apache.cxf.message @AT@ 5285 @LENGTH@ 14
---------------------------INS QualifiedName@@org.apache @TO@ QualifiedName@@org.apache.cxf @AT@ 5285 @LENGTH@ 10
------------------------------INS SimpleName@@org @TO@ QualifiedName@@org.apache @AT@ 5285 @LENGTH@ 3
------------------------------INS SimpleName@@apache @TO@ QualifiedName@@org.apache @AT@ 5289 @LENGTH@ 6
---------------------------INS SimpleName@@cxf @TO@ QualifiedName@@org.apache.cxf @AT@ 5296 @LENGTH@ 3
------------------------INS SimpleName@@message @TO@ QualifiedName@@org.apache.cxf.message @AT@ 5300 @LENGTH@ 7
---------------------INS SimpleName@@Message @TO@ QualifiedName@@org.apache.cxf.message.Message @AT@ 5308 @LENGTH@ 7
------------------INS SimpleName@@CONTENT_TYPE @TO@ QualifiedName@@org.apache.cxf.message.Message.CONTENT_TYPE @AT@ 5316 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:verify(invoker,never()).invokeFindById(eq(1L)) @TO@ MethodDeclaration@@public, void, MethodName:usesRegisteredEntityLookup,  @AT@ 3170 @LENGTH@ 48
---INS MethodInvocation@@verify(invoker,never()).invokeFindById(eq(1L)) @TO@ ExpressionStatement@@MethodInvocation:verify(invoker,never()).invokeFindById(eq(1L)) @AT@ 3170 @LENGTH@ 47
------INS MethodInvocation@@MethodName:verify:[invoker, never()] @TO@ MethodInvocation@@verify(invoker,never()).invokeFindById(eq(1L)) @AT@ 3170 @LENGTH@ 24
---------INS SimpleName@@invoker @TO@ MethodInvocation@@MethodName:verify:[invoker, never()] @AT@ 3177 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:never:[] @TO@ MethodInvocation@@MethodName:verify:[invoker, never()] @AT@ 3186 @LENGTH@ 7
------INS SimpleName@@MethodName:invokeFindById:[eq(1L)] @TO@ MethodInvocation@@verify(invoker,never()).invokeFindById(eq(1L)) @AT@ 3195 @LENGTH@ 22
---------INS MethodInvocation@@eq(1L) @TO@ SimpleName@@MethodName:invokeFindById:[eq(1L)] @AT@ 3210 @LENGTH@ 6
------------INS SimpleName@@MethodName:eq:[1L] @TO@ MethodInvocation@@eq(1L) @AT@ 3210 @LENGTH@ 6
---------------INS NumberLiteral@@1L @TO@ SimpleName@@MethodName:eq:[1L] @AT@ 3213 @LENGTH@ 2


INS ReturnStatement@@MethodInvocation:Mono.defer(() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
) @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:commence, ServerWebExchange exchange, AuthenticationException authException,  @AT@ 2471 @LENGTH@ 428
---INS MethodInvocation@@Mono.defer(() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
) @TO@ ReturnStatement@@MethodInvocation:Mono.defer(() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
) @AT@ 2478 @LENGTH@ 420
------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.defer(() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
) @AT@ 2478 @LENGTH@ 4
------INS SimpleName@@MethodName:defer:[() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
] @TO@ MethodInvocation@@Mono.defer(() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
) @AT@ 2483 @LENGTH@ 415
---------INS LambdaExpression@@() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
 @TO@ SimpleName@@MethodName:defer:[() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
] @AT@ 2489 @LENGTH@ 408
------------MOV VariableDeclarationStatement@@HttpStatus status=getStatus(authException); @TO@ LambdaExpression@@() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
 @AT@ 2471 @LENGTH@ 45
------------MOV VariableDeclarationStatement@@Map<String,String> parameters=createParameters(authException); @TO@ LambdaExpression@@() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
 @AT@ 2520 @LENGTH@ 65
------------MOV VariableDeclarationStatement@@String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters); @TO@ LambdaExpression@@() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
 @AT@ 2588 @LENGTH@ 71
------------MOV VariableDeclarationStatement@@ServerHttpResponse response=exchange.getResponse(); @TO@ LambdaExpression@@() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
 @AT@ 2662 @LENGTH@ 53
------------MOV ExpressionStatement@@MethodInvocation:response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate) @TO@ LambdaExpression@@() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
 @AT@ 2718 @LENGTH@ 73
------------MOV ExpressionStatement@@MethodInvocation:response.setStatusCode(status) @TO@ LambdaExpression@@() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
 @AT@ 2794 @LENGTH@ 31
------------MOV ReturnStatement@@MethodInvocation:response.setComplete() @TO@ LambdaExpression@@() -> {
  HttpStatus status=getStatus(authException);
  Map<String,String> parameters=createParameters(authException);
  String wwwAuthenticate=computeWWWAuthenticateHeaderValue(parameters);
  ServerHttpResponse response=exchange.getResponse();
  response.getHeaders().set(HttpHeaders.WWW_AUTHENTICATE,wwwAuthenticate);
  response.setStatusCode(status);
  return response.setComplete();
}
 @AT@ 2828 @LENGTH@ 30


UPD TypeDeclaration@@AclClassIdUtils,  @TO@ [public]AclClassIdUtils,  @AT@ 1190 @LENGTH@ 3199
---INS Modifier@@public @TO@ TypeDeclaration@@AclClassIdUtils,  @AT@ 1184 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Could not disconnect from {}: " + getEndpoint().getConfiguration().getMailStoreLogInformation() + ". This exception is ignored.",e) @TO@ MethodInvocation:LOG.debug("Could not disconnect from {}. This exception is ignored.",getEndpoint().getConfiguration().getMailStoreLogInformation(),e) @AT@ 6503 @LENGTH@ 144
---UPD MethodInvocation@@LOG.debug("Could not disconnect from {}: " + getEndpoint().getConfiguration().getMailStoreLogInformation() + ". This exception is ignored.",e) @TO@ LOG.debug("Could not disconnect from {}. This exception is ignored.",getEndpoint().getConfiguration().getMailStoreLogInformation(),e) @AT@ 6503 @LENGTH@ 143
------UPD SimpleName@@MethodName:debug:["Could not disconnect from {}: " + getEndpoint().getConfiguration().getMailStoreLogInformation() + ". This exception is ignored.", e] @TO@ MethodName:debug:["Could not disconnect from {}. This exception is ignored.", getEndpoint().getConfiguration().getMailStoreLogInformation(), e] @AT@ 6507 @LENGTH@ 139
---------DEL InfixExpression@@"Could not disconnect from {}: " + getEndpoint().getConfiguration().getMailStoreLogInformation() + ". This exception is ignored." @AT@ 6513 @LENGTH@ 129
------------DEL StringLiteral@@"Could not disconnect from {}: " @AT@ 6513 @LENGTH@ 32
------------DEL Operator@@+ @AT@ 6545 @LENGTH@ 1
------------DEL MethodInvocation@@getEndpoint().getConfiguration().getMailStoreLogInformation() @AT@ 6548 @LENGTH@ 61
------------DEL StringLiteral@@". This exception is ignored." @AT@ 6612 @LENGTH@ 30
---------INS StringLiteral@@"Could not disconnect from {}. This exception is ignored." @TO@ SimpleName@@MethodName:debug:["Could not disconnect from {}: " + getEndpoint().getConfiguration().getMailStoreLogInformation() + ". This exception is ignored.", e] @AT@ 6513 @LENGTH@ 58
---------INS MethodInvocation@@getEndpoint().getConfiguration().getMailStoreLogInformation() @TO@ SimpleName@@MethodName:debug:["Could not disconnect from {}: " + getEndpoint().getConfiguration().getMailStoreLogInformation() + ". This exception is ignored.", e] @AT@ 6573 @LENGTH@ 61
------------MOV MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@getEndpoint().getConfiguration().getMailStoreLogInformation() @AT@ 6548 @LENGTH@ 32
------------MOV MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().getConfiguration().getMailStoreLogInformation() @AT@ 6548 @LENGTH@ 13
------------MOV SimpleName@@MethodName:getMailStoreLogInformation:[] @TO@ MethodInvocation@@getEndpoint().getConfiguration().getMailStoreLogInformation() @AT@ 6581 @LENGTH@ 28


INS ExpressionStatement@@MethodInvocation:operation.get("locale").set("en") @TO@ MethodDeclaration@@static, ModelNode, MethodName:createReadResourceDescriptionOperation, final ModelNode address,  @AT@ 20075 @LENGTH@ 34
---INS MethodInvocation@@operation.get("locale").set("en") @TO@ ExpressionStatement@@MethodInvocation:operation.get("locale").set("en") @AT@ 20075 @LENGTH@ 33
------INS MethodInvocation@@MethodName:get:["locale"] @TO@ MethodInvocation@@operation.get("locale").set("en") @AT@ 20075 @LENGTH@ 23
---------INS StringLiteral@@"locale" @TO@ MethodInvocation@@MethodName:get:["locale"] @AT@ 20089 @LENGTH@ 8
------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.get("locale").set("en") @AT@ 20075 @LENGTH@ 9
------INS SimpleName@@MethodName:set:["en"] @TO@ MethodInvocation@@operation.get("locale").set("en") @AT@ 20099 @LENGTH@ 9
---------INS StringLiteral@@"en" @TO@ SimpleName@@MethodName:set:["en"] @AT@ 20103 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:publisher=publisher.collectionName(options.getOutputCollection()) @TO@ Assignment:publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction()) @AT@ 80407 @LENGTH@ 68


UPD SuperConstructorInvocation@@super();
 @TO@ super(new BasicAWSCredentials("user","secret"));
 @AT@ 3193 @LENGTH@ 8
---INS ClassInstanceCreation@@BasicAWSCredentials["user", "secret"] @TO@ SuperConstructorInvocation@@super();
 @AT@ 3242 @LENGTH@ 41
------INS New@@new @TO@ ClassInstanceCreation@@BasicAWSCredentials["user", "secret"] @AT@ 3242 @LENGTH@ 3
------INS SimpleType@@BasicAWSCredentials @TO@ ClassInstanceCreation@@BasicAWSCredentials["user", "secret"] @AT@ 3246 @LENGTH@ 19
------INS StringLiteral@@"user" @TO@ ClassInstanceCreation@@BasicAWSCredentials["user", "secret"] @AT@ 3266 @LENGTH@ 6
------INS StringLiteral@@"secret" @TO@ ClassInstanceCreation@@BasicAWSCredentials["user", "secret"] @AT@ 3274 @LENGTH@ 8


UPD ReturnStatement@@ClassInstanceCreation:new HashMap<>() @TO@ ClassInstanceCreation:new ConcurrentHashMap<>() @AT@ 17850 @LENGTH@ 23
---UPD ClassInstanceCreation@@HashMap<>[] @TO@ ConcurrentHashMap<>[] @AT@ 17857 @LENGTH@ 15
------UPD ParameterizedType@@HashMap<> @TO@ ConcurrentHashMap<> @AT@ 17861 @LENGTH@ 9
---------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 17861 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @TO@ MethodDeclaration@@public, void, MethodName:getTokenResponseWhenSuccessResponseThenReturnAccessTokenResponse, Exception,  @AT@ 4331 @LENGTH@ 98
---INS MethodInvocation@@assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @AT@ 4331 @LENGTH@ 97
------INS MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getRefreshToken().getTokenValue()] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @AT@ 4331 @LENGTH@ 65
---------INS MethodInvocation@@accessTokenResponse.getRefreshToken().getTokenValue() @TO@ MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getRefreshToken().getTokenValue()] @AT@ 4342 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken().getTokenValue() @AT@ 4342 @LENGTH@ 37
------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken().getTokenValue() @AT@ 4342 @LENGTH@ 19
------------INS SimpleName@@MethodName:getTokenValue:[] @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken().getTokenValue() @AT@ 4380 @LENGTH@ 15
------INS SimpleName@@MethodName:isEqualTo:["refresh-token-1234"] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @AT@ 4397 @LENGTH@ 31
---------INS StringLiteral@@"refresh-token-1234" @TO@ SimpleName@@MethodName:isEqualTo:["refresh-token-1234"] @AT@ 4407 @LENGTH@ 20


DEL ReturnStatement@@BooleanLiteral:false @AT@ 3401 @LENGTH@ 13
---DEL BooleanLiteral@@false @AT@ 3408 @LENGTH@ 5


DEL IfStatement@@if ("OPTIONS".equals(request.method().name()) && !isRestrictedToOptions) {  String s;  if (consumer.getEndpoint().getHttpMethodRestrict() != null) {    s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();  } else {    s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";  }  HttpResponse response=new DefaultHttpResponse(HTTP_1_1,OK);  response.headers().set("Allow",s);  response.headers().set(Exchange.CONTENT_LENGTH,0);  ctx.writeAndFlush(response);  return;} @AT@ 4259 @LENGTH@ 765
---DEL InfixExpression@@"OPTIONS".equals(request.method().name()) && !isRestrictedToOptions @AT@ 4263 @LENGTH@ 67
------DEL MethodInvocation@@"OPTIONS".equals(request.method().name()) @AT@ 4263 @LENGTH@ 41
---------DEL StringLiteral@@"OPTIONS" @AT@ 4263 @LENGTH@ 9
---------DEL SimpleName@@MethodName:equals:[request.method().name()] @AT@ 4273 @LENGTH@ 31
------------DEL MethodInvocation@@request.method().name() @AT@ 4280 @LENGTH@ 23
---------------DEL MethodInvocation@@MethodName:method:[] @AT@ 4280 @LENGTH@ 16
---------------DEL SimpleName@@Name:request @AT@ 4280 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:name:[] @AT@ 4297 @LENGTH@ 6
------DEL Operator@@&& @AT@ 4304 @LENGTH@ 2
------DEL PrefixExpression@@!isRestrictedToOptions @AT@ 4308 @LENGTH@ 22
---------DEL Operator@@! @AT@ 4308 @LENGTH@ 1
---------DEL SimpleName@@isRestrictedToOptions @AT@ 4309 @LENGTH@ 21
---DEL Block@@ThenBody:{  String s;  if (consumer.getEndpoint().getHttpMethodRestrict() != null) {    s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();  } else {    s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";  }  HttpResponse response=new DefaultHttpResponse(HTTP_1_1,OK);  response.headers().set("Allow",s);  response.headers().set(Exchange.CONTENT_LENGTH,0);  ctx.writeAndFlush(response);  return;} @AT@ 4332 @LENGTH@ 692
------DEL VariableDeclarationStatement@@String s; @AT@ 4346 @LENGTH@ 9
---------DEL SimpleType@@String @AT@ 4346 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@s @AT@ 4353 @LENGTH@ 1
------------DEL SimpleName@@s @AT@ 4353 @LENGTH@ 1
------DEL IfStatement@@if (consumer.getEndpoint().getHttpMethodRestrict() != null) {  s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();} else {  s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";} @AT@ 4368 @LENGTH@ 287
---------DEL InfixExpression@@consumer.getEndpoint().getHttpMethodRestrict() != null @AT@ 4372 @LENGTH@ 54
------------DEL MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 4372 @LENGTH@ 46
---------------DEL MethodInvocation@@MethodName:getEndpoint:[] @AT@ 4372 @LENGTH@ 22
---------------DEL SimpleName@@Name:consumer @AT@ 4372 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getHttpMethodRestrict:[] @AT@ 4395 @LENGTH@ 23
------------DEL Operator@@!= @AT@ 4418 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 4422 @LENGTH@ 4
---------DEL Block@@ThenBody:{  s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();} @AT@ 4428 @LENGTH@ 96
------------DEL ExpressionStatement@@Assignment:s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict() @AT@ 4446 @LENGTH@ 64
---------------DEL Assignment@@s="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict() @AT@ 4446 @LENGTH@ 63
------------------DEL SimpleName@@s @AT@ 4446 @LENGTH@ 1
------------------DEL Operator@@= @AT@ 4447 @LENGTH@ 1
------------------DEL InfixExpression@@"OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict() @AT@ 4450 @LENGTH@ 59
---------------------DEL StringLiteral@@"OPTIONS," @AT@ 4450 @LENGTH@ 10
---------------------DEL Operator@@+ @AT@ 4460 @LENGTH@ 1
---------------------DEL MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 4463 @LENGTH@ 46
------------------------DEL MethodInvocation@@MethodName:getEndpoint:[] @AT@ 4463 @LENGTH@ 22
------------------------DEL SimpleName@@Name:consumer @AT@ 4463 @LENGTH@ 8
------------------------DEL SimpleName@@MethodName:getHttpMethodRestrict:[] @AT@ 4486 @LENGTH@ 23
---------DEL Block@@ElseBody:{  s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";} @AT@ 4530 @LENGTH@ 125
------------DEL ExpressionStatement@@Assignment:s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH" @AT@ 4582 @LENGTH@ 59
---------------DEL Assignment@@s="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH" @AT@ 4582 @LENGTH@ 58
------------------DEL SimpleName@@s @AT@ 4582 @LENGTH@ 1
------------------DEL Operator@@= @AT@ 4583 @LENGTH@ 1
------------------DEL StringLiteral@@"GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH" @AT@ 4586 @LENGTH@ 54
------DEL VariableDeclarationStatement@@HttpResponse response=new DefaultHttpResponse(HTTP_1_1,OK); @AT@ 4668 @LENGTH@ 62
---------DEL SimpleType@@HttpResponse @AT@ 4668 @LENGTH@ 12
---------DEL VariableDeclarationFragment@@response=new DefaultHttpResponse(HTTP_1_1,OK) @AT@ 4681 @LENGTH@ 48
------------DEL SimpleName@@response @AT@ 4681 @LENGTH@ 8
------------DEL ClassInstanceCreation@@DefaultHttpResponse[HTTP_1_1, OK] @AT@ 4692 @LENGTH@ 37
---------------DEL New@@new @AT@ 4692 @LENGTH@ 3
---------------DEL SimpleType@@DefaultHttpResponse @AT@ 4696 @LENGTH@ 19
---------------DEL SimpleName@@HTTP_1_1 @AT@ 4716 @LENGTH@ 8
---------------DEL SimpleName@@OK @AT@ 4726 @LENGTH@ 2
------DEL ExpressionStatement@@MethodInvocation:response.headers().set("Allow",s) @AT@ 4743 @LENGTH@ 35
---------DEL MethodInvocation@@response.headers().set("Allow",s) @AT@ 4743 @LENGTH@ 34
------------DEL MethodInvocation@@MethodName:headers:[] @AT@ 4743 @LENGTH@ 18
------------DEL SimpleName@@Name:response @AT@ 4743 @LENGTH@ 8
------------DEL SimpleName@@MethodName:set:["Allow", s] @AT@ 4762 @LENGTH@ 15
---------------DEL StringLiteral@@"Allow" @AT@ 4766 @LENGTH@ 7
---------------DEL SimpleName@@s @AT@ 4775 @LENGTH@ 1
------DEL ExpressionStatement@@MethodInvocation:response.headers().set(Exchange.CONTENT_LENGTH,0) @AT@ 4902 @LENGTH@ 51
---------DEL MethodInvocation@@response.headers().set(Exchange.CONTENT_LENGTH,0) @AT@ 4902 @LENGTH@ 50
------------DEL MethodInvocation@@MethodName:headers:[] @AT@ 4902 @LENGTH@ 18
------------DEL SimpleName@@Name:response @AT@ 4902 @LENGTH@ 8
------------DEL SimpleName@@MethodName:set:[Exchange.CONTENT_LENGTH, 0] @AT@ 4921 @LENGTH@ 31
---------------DEL QualifiedName@@Exchange.CONTENT_LENGTH @AT@ 4925 @LENGTH@ 23
------------------DEL SimpleName@@Exchange @AT@ 4925 @LENGTH@ 8
------------------DEL SimpleName@@CONTENT_LENGTH @AT@ 4934 @LENGTH@ 14
---------------DEL NumberLiteral@@0 @AT@ 4950 @LENGTH@ 1
------DEL ExpressionStatement@@MethodInvocation:ctx.writeAndFlush(response) @AT@ 4966 @LENGTH@ 28
---------DEL MethodInvocation@@ctx.writeAndFlush(response) @AT@ 4966 @LENGTH@ 27
------------DEL SimpleName@@Name:ctx @AT@ 4966 @LENGTH@ 3
------------DEL SimpleName@@MethodName:writeAndFlush:[response] @AT@ 4970 @LENGTH@ 23
---------------DEL SimpleName@@response @AT@ 4984 @LENGTH@ 8
------DEL ReturnStatement@@ @AT@ 5007 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from(getFtpUrl()).routeId("route1").shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).to("seda:foo") @TO@ MethodInvocation:from(getFtpUrl()).routeId("route1").shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).syncDelayed().to("seda:foo") @AT@ 2884 @LENGTH@ 249
---UPD MethodInvocation@@from(getFtpUrl()).routeId("route1").shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).to("seda:foo") @TO@ from(getFtpUrl()).routeId("route1").shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).syncDelayed().to("seda:foo") @AT@ 2884 @LENGTH@ 248
------INS MethodInvocation@@MethodName:syncDelayed:[] @TO@ MethodInvocation@@from(getFtpUrl()).routeId("route1").shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).to("seda:foo") @AT@ 2884 @LENGTH@ 247


INS MethodDeclaration@@public, OAuth2AuthorizationRequest, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @TO@ TypeDeclaration@@[public, final]HttpSessionOAuth2AuthorizationRequestRepository, [AuthorizationRequestRepository<OAuth2AuthorizationRequest>] @AT@ 3654 @LENGTH@ 229
---INS Modifier@@public @TO@ MethodDeclaration@@public, OAuth2AuthorizationRequest, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3654 @LENGTH@ 6
---INS SimpleType@@OAuth2AuthorizationRequest @TO@ MethodDeclaration@@public, OAuth2AuthorizationRequest, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3661 @LENGTH@ 26
---INS SimpleName@@MethodName:removeAuthorizationRequest @TO@ MethodDeclaration@@public, OAuth2AuthorizationRequest, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3688 @LENGTH@ 26
---INS SingleVariableDeclaration@@HttpServletRequest request @TO@ MethodDeclaration@@public, OAuth2AuthorizationRequest, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3715 @LENGTH@ 26
------INS SimpleType@@HttpServletRequest @TO@ SingleVariableDeclaration@@HttpServletRequest request @AT@ 3715 @LENGTH@ 18
------INS SimpleName@@request @TO@ SingleVariableDeclaration@@HttpServletRequest request @AT@ 3734 @LENGTH@ 7
---INS SingleVariableDeclaration@@HttpServletResponse response @TO@ MethodDeclaration@@public, OAuth2AuthorizationRequest, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3743 @LENGTH@ 28
------INS SimpleType@@HttpServletResponse @TO@ SingleVariableDeclaration@@HttpServletResponse response @AT@ 3743 @LENGTH@ 19
------INS SimpleName@@response @TO@ SingleVariableDeclaration@@HttpServletResponse response @AT@ 3763 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(response,"response cannot be null") @TO@ MethodDeclaration@@public, OAuth2AuthorizationRequest, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3777 @LENGTH@ 52
------INS MethodInvocation@@Assert.notNull(response,"response cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(response,"response cannot be null") @AT@ 3777 @LENGTH@ 51
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(response,"response cannot be null") @AT@ 3777 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[response, "response cannot be null"] @TO@ MethodInvocation@@Assert.notNull(response,"response cannot be null") @AT@ 3784 @LENGTH@ 44
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:notNull:[response, "response cannot be null"] @AT@ 3792 @LENGTH@ 8
------------INS StringLiteral@@"response cannot be null" @TO@ SimpleName@@MethodName:notNull:[response, "response cannot be null"] @AT@ 3802 @LENGTH@ 25
---INS ReturnStatement@@MethodInvocation:this.removeAuthorizationRequest(request) @TO@ MethodDeclaration@@public, OAuth2AuthorizationRequest, MethodName:removeAuthorizationRequest, HttpServletRequest request, HttpServletResponse response,  @AT@ 3832 @LENGTH@ 48
------MOV MethodInvocation@@this.removeAuthorizationRequest(request) @TO@ ReturnStatement@@MethodInvocation:this.removeAuthorizationRequest(request) @AT@ 2490 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:camelContext.getExecutorServiceManager().shutdownNow(timeoutCheckerExecutorService) @TO@ MethodInvocation:camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService) @AT@ 64082 @LENGTH@ 84
---UPD MethodInvocation@@camelContext.getExecutorServiceManager().shutdownNow(timeoutCheckerExecutorService) @TO@ camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService) @AT@ 64082 @LENGTH@ 83
------UPD SimpleName@@MethodName:shutdownNow:[timeoutCheckerExecutorService] @TO@ MethodName:shutdown:[timeoutCheckerExecutorService] @AT@ 64123 @LENGTH@ 42


UPD ExpressionStatement@@MethodInvocation:this.removeAuthorizationRequest(request) @TO@ MethodInvocation:this.removeAuthorizationRequest(request,response) @AT@ 2490 @LENGTH@ 41
---INS MethodInvocation@@this.removeAuthorizationRequest(request,response) @TO@ ExpressionStatement@@MethodInvocation:this.removeAuthorizationRequest(request) @AT@ 2490 @LENGTH@ 50
------INS ThisExpression@@this @TO@ MethodInvocation@@this.removeAuthorizationRequest(request,response) @AT@ 2490 @LENGTH@ 4
------INS SimpleName@@MethodName:removeAuthorizationRequest:[request, response] @TO@ MethodInvocation@@this.removeAuthorizationRequest(request,response) @AT@ 2495 @LENGTH@ 45
---------INS SimpleName@@request @TO@ SimpleName@@MethodName:removeAuthorizationRequest:[request, response] @AT@ 2522 @LENGTH@ 7
---------INS SimpleName@@response @TO@ SimpleName@@MethodName:removeAuthorizationRequest:[request, response] @AT@ 2531 @LENGTH@ 8


DEL VariableDeclarationStatement@@ServiceRegistry registry=CurrentServiceContainer.getServiceContainer(); @AT@ 2428 @LENGTH@ 73
---DEL SimpleType@@ServiceRegistry @AT@ 2428 @LENGTH@ 15
---DEL VariableDeclarationFragment@@registry=CurrentServiceContainer.getServiceContainer() @AT@ 2444 @LENGTH@ 56
------DEL SimpleName@@registry @AT@ 2444 @LENGTH@ 8
------DEL MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 2455 @LENGTH@ 45
---------DEL SimpleName@@Name:CurrentServiceContainer @AT@ 2455 @LENGTH@ 23
---------DEL SimpleName@@MethodName:getServiceContainer:[] @AT@ 2479 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:DistributableSecurityDomainSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getBuilder(managerServiceName,securityDomainName,generator)).orElse(new SimpleCapabilityServiceBuilder<>(managerServiceName,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId))).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ MethodInvocation:DistributableSecurityDomainSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,securityDomainName,generator)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId))).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 16764 @LENGTH@ 478
---UPD MethodInvocation@@DistributableSecurityDomainSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getBuilder(managerServiceName,securityDomainName,generator)).orElse(new SimpleCapabilityServiceBuilder<>(managerServiceName,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId))).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ DistributableSecurityDomainSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,securityDomainName,generator)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId))).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 16764 @LENGTH@ 477
------UPD MethodInvocation@@MethodName:orElse:[new SimpleCapabilityServiceBuilder<>(managerServiceName,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId))] @TO@ MethodName:orElse:[new SimpleCapabilityServiceConfigurator<>(managerServiceName,new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId))] @AT@ 16764 @LENGTH@ 360
---------UPD ClassInstanceCreation@@SimpleCapabilityServiceBuilder<>[managerServiceName, new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId)] @TO@ SimpleCapabilityServiceConfigurator<>[managerServiceName, new DefaultSingleSignOnManager(new ConcurrentHashMap<>(),generator::createSessionId)] @AT@ 16980 @LENGTH@ 143
------------UPD ParameterizedType@@SimpleCapabilityServiceBuilder<> @TO@ SimpleCapabilityServiceConfigurator<> @AT@ 16984 @LENGTH@ 32
---------------UPD SimpleType@@SimpleCapabilityServiceBuilder @TO@ SimpleCapabilityServiceConfigurator @AT@ 16984 @LENGTH@ 30
------UPD MethodInvocation@@MethodName:map:[provider -> provider.getBuilder(managerServiceName,securityDomainName,generator)] @TO@ MethodName:map:[provider -> provider.getServiceConfigurator(managerServiceName,securityDomainName,generator)] @AT@ 16764 @LENGTH@ 183
---------UPD LambdaExpression@@provider -> provider.getBuilder(managerServiceName,securityDomainName,generator) @TO@ provider -> provider.getServiceConfigurator(managerServiceName,securityDomainName,generator) @AT@ 16864 @LENGTH@ 82
------------UPD MethodInvocation@@provider.getBuilder(managerServiceName,securityDomainName,generator) @TO@ provider.getServiceConfigurator(managerServiceName,securityDomainName,generator) @AT@ 16876 @LENGTH@ 70
---------------UPD SimpleName@@MethodName:getBuilder:[managerServiceName, securityDomainName, generator] @TO@ MethodName:getServiceConfigurator:[managerServiceName, securityDomainName, generator] @AT@ 16885 @LENGTH@ 61


UPD ExpressionStatement@@Assignment:jwtDecoder=new NimbusJwkReactiveJwtDecoder(clientRegistration.getProviderDetails().getJwkSetUri()) @TO@ Assignment:jwtDecoder=new NimbusReactiveJwtDecoder(clientRegistration.getProviderDetails().getJwkSetUri()) @AT@ 12006 @LENGTH@ 101
---UPD Assignment@@jwtDecoder=new NimbusJwkReactiveJwtDecoder(clientRegistration.getProviderDetails().getJwkSetUri()) @TO@ jwtDecoder=new NimbusReactiveJwtDecoder(clientRegistration.getProviderDetails().getJwkSetUri()) @AT@ 12006 @LENGTH@ 100
------UPD ClassInstanceCreation@@NimbusJwkReactiveJwtDecoder[clientRegistration.getProviderDetails().getJwkSetUri()] @TO@ NimbusReactiveJwtDecoder[clientRegistration.getProviderDetails().getJwkSetUri()] @AT@ 12019 @LENGTH@ 87
---------UPD SimpleType@@NimbusJwkReactiveJwtDecoder @TO@ NimbusReactiveJwtDecoder @AT@ 12023 @LENGTH@ 27


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Filter target must be a collection or array type, but was " + filterTarget) @TO@ ClassInstanceCreation:new IllegalArgumentException("Filter target must be a collection, array, or stream type, but was " + filterTarget) @AT@ 5963 @LENGTH@ 123
---UPD ClassInstanceCreation@@IllegalArgumentException["Filter target must be a collection or array type, but was " + filterTarget] @TO@ IllegalArgumentException["Filter target must be a collection, array, or stream type, but was " + filterTarget] @AT@ 5969 @LENGTH@ 116
------UPD InfixExpression@@"Filter target must be a collection or array type, but was " + filterTarget @TO@ "Filter target must be a collection, array, or stream type, but was " + filterTarget @AT@ 6003 @LENGTH@ 81
---------UPD StringLiteral@@"Filter target must be a collection or array type, but was " @TO@ "Filter target must be a collection, array, or stream type, but was " @AT@ 6003 @LENGTH@ 60


UPD ExpressionStatement@@MethodInvocation:assertThat(providerDetails.getUserInfoEndpoint().getUri()).isEqualTo("https://graph.facebook.com/me") @TO@ MethodInvocation:assertThat(providerDetails.getUserInfoEndpoint().getUri()).isEqualTo("https://graph.facebook.com/me?fields=id,name,email") @AT@ 4385 @LENGTH@ 106
---UPD MethodInvocation@@assertThat(providerDetails.getUserInfoEndpoint().getUri()).isEqualTo("https://graph.facebook.com/me") @TO@ assertThat(providerDetails.getUserInfoEndpoint().getUri()).isEqualTo("https://graph.facebook.com/me?fields=id,name,email") @AT@ 4385 @LENGTH@ 105
------UPD SimpleName@@MethodName:isEqualTo:["https://graph.facebook.com/me"] @TO@ MethodName:isEqualTo:["https://graph.facebook.com/me?fields=id,name,email"] @AT@ 4448 @LENGTH@ 42
---------UPD StringLiteral@@"https://graph.facebook.com/me" @TO@ "https://graph.facebook.com/me?fields=id,name,email" @AT@ 4458 @LENGTH@ 31


MOV FieldDeclaration@@public, GenericContainer, [container=ConsulContainerSupport.consulContainer()] @TO@ TypeDeclaration@@[public, abstract]SpringConsulServiceCallRouteTest, CamelSpringTestSupport @AT@ 1850 @LENGTH@ 77


UPD VariableDeclarationStatement@@Method m=r.getClass().getDeclaredMethod("getXMLEventWriter",new Class[]{}); @TO@ Method m=r.getClass().getDeclaredMethod("getXMLEventWriter"); @AT@ 1015 @LENGTH@ 78
---UPD VariableDeclarationFragment@@m=r.getClass().getDeclaredMethod("getXMLEventWriter",new Class[]{}) @TO@ m=r.getClass().getDeclaredMethod("getXMLEventWriter") @AT@ 1022 @LENGTH@ 70
------UPD MethodInvocation@@r.getClass().getDeclaredMethod("getXMLEventWriter",new Class[]{}) @TO@ r.getClass().getDeclaredMethod("getXMLEventWriter") @AT@ 1026 @LENGTH@ 66
---------UPD SimpleName@@MethodName:getDeclaredMethod:["getXMLEventWriter", new Class[]{}] @TO@ MethodName:getDeclaredMethod:["getXMLEventWriter"] @AT@ 1039 @LENGTH@ 53
------------DEL ArrayCreation@@new Class[]{} @AT@ 1078 @LENGTH@ 13
---------------DEL ArrayType@@Class[] @AT@ 1082 @LENGTH@ 7
------------------DEL SimpleType@@Class @AT@ 1082 @LENGTH@ 5
---------------DEL ArrayInitializer@@{} @AT@ 1089 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:policy.createSingletonServiceBuilder(SERVICE_NAME,new ValueService<>(new ImmediateValue<>(Boolean.TRUE)),new ValueService<>(new ImmediateValue<>(Boolean.FALSE))).build(context.getServiceTarget()).install() @TO@ MethodInvocation:policy.createSingletonServiceBuilder(SERVICE_NAME,new ValueService<>(new ImmediateValue<>(Boolean.TRUE)),new ValueService<>(new ImmediateValue<>(Boolean.FALSE))).build(target).install() @AT@ 2028 @LENGTH@ 208


UPD FieldDeclaration@@private, DefaultClassMapper, [classMapper=new DefaultClassMapper()] @TO@ private, final, DefaultClassMapper, [classMapper=new DefaultClassMapper()] @AT@ 1355 @LENGTH@ 66
---INS Modifier@@final @TO@ FieldDeclaration@@private, DefaultClassMapper, [classMapper=new DefaultClassMapper()] @AT@ 1363 @LENGTH@ 5


INS VariableDeclarationStatement@@ApplicationContext context=getBuilder().getSharedObject(ApplicationContext.class); @TO@ MethodDeclaration@@private, void, MethodName:initResourceServerConfigurer,  @AT@ 3481 @LENGTH@ 84
---INS SimpleType@@ApplicationContext @TO@ VariableDeclarationStatement@@ApplicationContext context=getBuilder().getSharedObject(ApplicationContext.class); @AT@ 3481 @LENGTH@ 18
---INS VariableDeclarationFragment@@context=getBuilder().getSharedObject(ApplicationContext.class) @TO@ VariableDeclarationStatement@@ApplicationContext context=getBuilder().getSharedObject(ApplicationContext.class); @AT@ 3500 @LENGTH@ 64
------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=getBuilder().getSharedObject(ApplicationContext.class) @AT@ 3500 @LENGTH@ 7
------INS MethodInvocation@@getBuilder().getSharedObject(ApplicationContext.class) @TO@ VariableDeclarationFragment@@context=getBuilder().getSharedObject(ApplicationContext.class) @AT@ 3510 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:getBuilder:[] @TO@ MethodInvocation@@getBuilder().getSharedObject(ApplicationContext.class) @AT@ 3510 @LENGTH@ 12
---------INS SimpleName@@MethodName:getSharedObject:[ApplicationContext.class] @TO@ MethodInvocation@@getBuilder().getSharedObject(ApplicationContext.class) @AT@ 3523 @LENGTH@ 41
------------INS TypeLiteral@@ApplicationContext.class @TO@ SimpleName@@MethodName:getSharedObject:[ApplicationContext.class] @AT@ 3539 @LENGTH@ 24


INS IfStatement@@if (tbl.getSd().getLocation() == null) {  tbl.getSd().setLocation(SessionState.generateTempTableLocation(conf));} @TO@ MethodDeclaration@@private, void, MethodName:createTempTable, org.apache.hadoop.hive.metastore.api.Table tbl, EnvironmentContext envContext, AlreadyExistsException, InvalidObjectException, MetaException, NoSuchObjectException, TException,  @AT@ 18402 @LENGTH@ 317
---INS InfixExpression@@tbl.getSd().getLocation() == null @TO@ IfStatement@@if (tbl.getSd().getLocation() == null) {  tbl.getSd().setLocation(SessionState.generateTempTableLocation(conf));} @AT@ 18406 @LENGTH@ 33
------INS MethodInvocation@@tbl.getSd().getLocation() @TO@ InfixExpression@@tbl.getSd().getLocation() == null @AT@ 18406 @LENGTH@ 25
---------INS MethodInvocation@@MethodName:getSd:[] @TO@ MethodInvocation@@tbl.getSd().getLocation() @AT@ 18406 @LENGTH@ 11
---------INS SimpleName@@Name:tbl @TO@ MethodInvocation@@tbl.getSd().getLocation() @AT@ 18406 @LENGTH@ 3
---------INS SimpleName@@MethodName:getLocation:[] @TO@ MethodInvocation@@tbl.getSd().getLocation() @AT@ 18418 @LENGTH@ 13
------INS Operator@@== @TO@ InfixExpression@@tbl.getSd().getLocation() == null @AT@ 18431 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@tbl.getSd().getLocation() == null @AT@ 18435 @LENGTH@ 4
---INS Block@@ThenBody:{  tbl.getSd().setLocation(SessionState.generateTempTableLocation(conf));} @TO@ IfStatement@@if (tbl.getSd().getLocation() == null) {  tbl.getSd().setLocation(SessionState.generateTempTableLocation(conf));} @AT@ 18441 @LENGTH@ 278
------INS ExpressionStatement@@MethodInvocation:tbl.getSd().setLocation(SessionState.generateTempTableLocation(conf)) @TO@ Block@@ThenBody:{  tbl.getSd().setLocation(SessionState.generateTempTableLocation(conf));} @AT@ 18643 @LENGTH@ 70
---------INS MethodInvocation@@tbl.getSd().setLocation(SessionState.generateTempTableLocation(conf)) @TO@ ExpressionStatement@@MethodInvocation:tbl.getSd().setLocation(SessionState.generateTempTableLocation(conf)) @AT@ 18643 @LENGTH@ 69
------------INS MethodInvocation@@MethodName:getSd:[] @TO@ MethodInvocation@@tbl.getSd().setLocation(SessionState.generateTempTableLocation(conf)) @AT@ 18643 @LENGTH@ 11
------------INS SimpleName@@Name:tbl @TO@ MethodInvocation@@tbl.getSd().setLocation(SessionState.generateTempTableLocation(conf)) @AT@ 18643 @LENGTH@ 3
------------INS SimpleName@@MethodName:setLocation:[SessionState.generateTempTableLocation(conf)] @TO@ MethodInvocation@@tbl.getSd().setLocation(SessionState.generateTempTableLocation(conf)) @AT@ 18655 @LENGTH@ 57
---------------INS MethodInvocation@@SessionState.generateTempTableLocation(conf) @TO@ SimpleName@@MethodName:setLocation:[SessionState.generateTempTableLocation(conf)] @AT@ 18667 @LENGTH@ 44
------------------INS SimpleName@@Name:SessionState @TO@ MethodInvocation@@SessionState.generateTempTableLocation(conf) @AT@ 18667 @LENGTH@ 12
------------------INS SimpleName@@MethodName:generateTempTableLocation:[conf] @TO@ MethodInvocation@@SessionState.generateTempTableLocation(conf) @AT@ 18680 @LENGTH@ 31
---------------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:generateTempTableLocation:[conf] @AT@ 18706 @LENGTH@ 4


UPD IfStatement@@if (ID_KEY.equals(key)) {  DBObject superIdValue=super.asDBObject(key,value);  Document mappedIdValue=mapper.getMappedObject((BasicDBObject)superIdValue,Optional.empty());  return (DBObject)JSON.parse(mappedIdValue.toJson());} @TO@ if (key.endsWith(ID_KEY)) {  return convertId(key,value);} @AT@ 4341 @LENGTH@ 243
---UPD MethodInvocation@@ID_KEY.equals(key) @TO@ key.endsWith(ID_KEY) @AT@ 4345 @LENGTH@ 18
------UPD SimpleName@@Name:ID_KEY @TO@ Name:key @AT@ 4345 @LENGTH@ 6
------UPD SimpleName@@MethodName:equals:[key] @TO@ MethodName:endsWith:[ID_KEY] @AT@ 4352 @LENGTH@ 11
---------UPD SimpleName@@key @TO@ ID_KEY @AT@ 4359 @LENGTH@ 3
---UPD Block@@ThenBody:{  DBObject superIdValue=super.asDBObject(key,value);  Document mappedIdValue=mapper.getMappedObject((BasicDBObject)superIdValue,Optional.empty());  return (DBObject)JSON.parse(mappedIdValue.toJson());} @TO@ ThenBody:{  return convertId(key,value);} @AT@ 4365 @LENGTH@ 219
------DEL VariableDeclarationStatement@@DBObject superIdValue=super.asDBObject(key,value); @AT@ 4370 @LENGTH@ 53
---------DEL SimpleType@@DBObject @AT@ 4370 @LENGTH@ 8
---------DEL VariableDeclarationFragment@@superIdValue=super.asDBObject(key,value) @AT@ 4379 @LENGTH@ 43
------------DEL SimpleName@@superIdValue @AT@ 4379 @LENGTH@ 12
------------DEL SuperMethodInvocation@@super.asDBObject(key,value) @AT@ 4394 @LENGTH@ 28
---------------DEL SimpleName@@MethodName:asDBObject:[key, value] @AT@ 4400 @LENGTH@ 10
---------------DEL SimpleName@@key @AT@ 4411 @LENGTH@ 3
---------------DEL SimpleName@@value @AT@ 4416 @LENGTH@ 5
------INS ReturnStatement@@MethodInvocation:convertId(key,value) @TO@ Block@@ThenBody:{  DBObject superIdValue=super.asDBObject(key,value);  Document mappedIdValue=mapper.getMappedObject((BasicDBObject)superIdValue,Optional.empty());  return (DBObject)JSON.parse(mappedIdValue.toJson());} @AT@ 4372 @LENGTH@ 29
---------INS MethodInvocation@@convertId(key,value) @TO@ ReturnStatement@@MethodInvocation:convertId(key,value) @AT@ 4379 @LENGTH@ 21
------------MOV SimpleName@@MethodName:getMappedObject:[(BasicDBObject)superIdValue, Optional.empty()] @TO@ MethodInvocation@@convertId(key,value) @AT@ 4459 @LENGTH@ 63
------DEL VariableDeclarationStatement@@Document mappedIdValue=mapper.getMappedObject((BasicDBObject)superIdValue,Optional.empty()); @AT@ 4427 @LENGTH@ 96
---------DEL SimpleType@@Document @AT@ 4427 @LENGTH@ 8
---------DEL VariableDeclarationFragment@@mappedIdValue=mapper.getMappedObject((BasicDBObject)superIdValue,Optional.empty()) @AT@ 4436 @LENGTH@ 86
------------DEL SimpleName@@mappedIdValue @AT@ 4436 @LENGTH@ 13
------------DEL MethodInvocation@@mapper.getMappedObject((BasicDBObject)superIdValue,Optional.empty()) @AT@ 4452 @LENGTH@ 70
---------------DEL SimpleName@@Name:mapper @AT@ 4452 @LENGTH@ 6


UPD VariableDeclarationStatement@@HttpHeaders headers=this.buildHeaders(authorizationCodeGrantRequest); @TO@ HttpHeaders headers=OAuth2AuthorizationGrantRequestEntityUtils.getTokenRequestHeaders(clientRegistration); @AT@ 2577 @LENGTH@ 71
---UPD VariableDeclarationFragment@@headers=this.buildHeaders(authorizationCodeGrantRequest) @TO@ headers=OAuth2AuthorizationGrantRequestEntityUtils.getTokenRequestHeaders(clientRegistration) @AT@ 2589 @LENGTH@ 58
------UPD MethodInvocation@@this.buildHeaders(authorizationCodeGrantRequest) @TO@ OAuth2AuthorizationGrantRequestEntityUtils.getTokenRequestHeaders(clientRegistration) @AT@ 2599 @LENGTH@ 48
---------INS SimpleName@@Name:OAuth2AuthorizationGrantRequestEntityUtils @TO@ MethodInvocation@@this.buildHeaders(authorizationCodeGrantRequest) @AT@ 2345 @LENGTH@ 42
---------DEL ThisExpression@@this @AT@ 2599 @LENGTH@ 4
---------UPD SimpleName@@MethodName:buildHeaders:[authorizationCodeGrantRequest] @TO@ MethodName:getTokenRequestHeaders:[clientRegistration] @AT@ 2604 @LENGTH@ 43
------------UPD SimpleName@@authorizationCodeGrantRequest @TO@ clientRegistration @AT@ 2617 @LENGTH@ 29


DEL ExpressionStatement@@MethodInvocation:this.metaStore.start() @AT@ 3007 @LENGTH@ 23
---DEL MethodInvocation@@this.metaStore.start() @AT@ 3007 @LENGTH@ 22
------DEL FieldAccess@@this.metaStore @AT@ 3007 @LENGTH@ 14
---------DEL ThisExpression@@this @AT@ 3007 @LENGTH@ 4
---------DEL SimpleName@@metaStore @AT@ 3012 @LENGTH@ 9
------DEL SimpleName@@MethodName:start:[] @AT@ 3022 @LENGTH@ 7


UPD EnhancedForStatement@@for (String option : step.getOptions().keySet()) {  Expression expression=step.getOptions().get(option);  values.put(option,expression.evaluate(exchange,Object.class));} @TO@ for (String option : step.getOptions().keySet()) {  Expression expression=step.getOptions().get(option);  try {    values.put(option,expression.evaluate(exchange,Object.class));  } catch (  Exception ex) {    return CompletableFuture.supplyAsync(() -> {      throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);    });  }} @AT@ 3161 @LENGTH@ 216
---INS TryStatement@@try {  values.put(option,expression.evaluate(exchange,Object.class));} catch (Exception ex) {  return CompletableFuture.supplyAsync(() -> {    throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);  });} @TO@ EnhancedForStatement@@for (String option : step.getOptions().keySet()) {  Expression expression=step.getOptions().get(option);  values.put(option,expression.evaluate(exchange,Object.class));} @AT@ 3299 @LENGTH@ 301
------MOV ExpressionStatement@@MethodInvocation:values.put(option,expression.evaluate(exchange,Object.class)) @TO@ TryStatement@@try {  values.put(option,expression.evaluate(exchange,Object.class));} catch (Exception ex) {  return CompletableFuture.supplyAsync(() -> {    throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);  });} @AT@ 3299 @LENGTH@ 64
------INS CatchClause@@catch (Exception ex) {  return CompletableFuture.supplyAsync(() -> {    throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);  });} @TO@ TryStatement@@try {  values.put(option,expression.evaluate(exchange,Object.class));} catch (Exception ex) {  return CompletableFuture.supplyAsync(() -> {    throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);  });} @AT@ 3408 @LENGTH@ 192
---------INS SingleVariableDeclaration@@Exception ex @TO@ CatchClause@@catch (Exception ex) {  return CompletableFuture.supplyAsync(() -> {    throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);  });} @AT@ 3415 @LENGTH@ 12
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception ex @AT@ 3415 @LENGTH@ 9
------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@Exception ex @AT@ 3425 @LENGTH@ 2
---------INS ReturnStatement@@MethodInvocation:CompletableFuture.supplyAsync(() -> {
  throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);
}
) @TO@ CatchClause@@catch (Exception ex) {  return CompletableFuture.supplyAsync(() -> {    throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);  });} @AT@ 3451 @LENGTH@ 131
------------INS MethodInvocation@@CompletableFuture.supplyAsync(() -> {
  throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);
}
) @TO@ ReturnStatement@@MethodInvocation:CompletableFuture.supplyAsync(() -> {
  throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);
}
) @AT@ 3458 @LENGTH@ 123
---------------INS SimpleName@@Name:CompletableFuture @TO@ MethodInvocation@@CompletableFuture.supplyAsync(() -> {
  throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);
}
) @AT@ 3458 @LENGTH@ 17
---------------INS SimpleName@@MethodName:supplyAsync:[() -> {
  throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);
}
] @TO@ MethodInvocation@@CompletableFuture.supplyAsync(() -> {
  throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);
}
) @AT@ 3476 @LENGTH@ 105
------------------INS LambdaExpression@@() -> {
  throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);
}
 @TO@ SimpleName@@MethodName:supplyAsync:[() -> {
  throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);
}
] @AT@ 3488 @LENGTH@ 92
---------------------INS ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex) @TO@ LambdaExpression@@() -> {
  throw new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex);
}
 @AT@ 3495 @LENGTH@ 84
------------------------INS ClassInstanceCreation@@RuntimeCamelException["Cannot evaluate saga option '" + option + "'", ex] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException("Cannot evaluate saga option '" + option + "'",ex) @AT@ 3501 @LENGTH@ 77
---------------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeCamelException["Cannot evaluate saga option '" + option + "'", ex] @AT@ 3501 @LENGTH@ 3
---------------------------INS SimpleType@@RuntimeCamelException @TO@ ClassInstanceCreation@@RuntimeCamelException["Cannot evaluate saga option '" + option + "'", ex] @AT@ 3505 @LENGTH@ 21
---------------------------INS InfixExpression@@"Cannot evaluate saga option '" + option + "'" @TO@ ClassInstanceCreation@@RuntimeCamelException["Cannot evaluate saga option '" + option + "'", ex] @AT@ 3527 @LENGTH@ 46
------------------------------INS StringLiteral@@"Cannot evaluate saga option '" @TO@ InfixExpression@@"Cannot evaluate saga option '" + option + "'" @AT@ 3527 @LENGTH@ 31
------------------------------INS Operator@@+ @TO@ InfixExpression@@"Cannot evaluate saga option '" + option + "'" @AT@ 3558 @LENGTH@ 1
------------------------------INS SimpleName@@option @TO@ InfixExpression@@"Cannot evaluate saga option '" + option + "'" @AT@ 3561 @LENGTH@ 6
------------------------------INS StringLiteral@@"'" @TO@ InfixExpression@@"Cannot evaluate saga option '" + option + "'" @AT@ 3570 @LENGTH@ 3
---------------------------INS SimpleName@@ex @TO@ ClassInstanceCreation@@RuntimeCamelException["Cannot evaluate saga option '" + option + "'", ex] @AT@ 3575 @LENGTH@ 2


UPD ReturnStatement@@MethodInvocation:Arrays.copyOf(this.adviceChain,this.adviceChain.length) @TO@ ConditionalExpression:this.adviceChain == null ? null : Arrays.copyOf(this.adviceChain,this.adviceChain.length) @AT@ 6400 @LENGTH@ 64
---INS ConditionalExpression@@this.adviceChain == null ? null : Arrays.copyOf(this.adviceChain,this.adviceChain.length) @TO@ ReturnStatement@@MethodInvocation:Arrays.copyOf(this.adviceChain,this.adviceChain.length) @AT@ 6460 @LENGTH@ 90
------MOV MethodInvocation@@Arrays.copyOf(this.adviceChain,this.adviceChain.length) @TO@ ConditionalExpression@@this.adviceChain == null ? null : Arrays.copyOf(this.adviceChain,this.adviceChain.length) @AT@ 6407 @LENGTH@ 56
------INS InfixExpression@@this.adviceChain == null @TO@ ConditionalExpression@@this.adviceChain == null ? null : Arrays.copyOf(this.adviceChain,this.adviceChain.length) @AT@ 6460 @LENGTH@ 24
---------INS FieldAccess@@this.adviceChain @TO@ InfixExpression@@this.adviceChain == null @AT@ 6460 @LENGTH@ 16
------------INS ThisExpression@@this @TO@ FieldAccess@@this.adviceChain @AT@ 6460 @LENGTH@ 4
------------INS SimpleName@@adviceChain @TO@ FieldAccess@@this.adviceChain @AT@ 6465 @LENGTH@ 11
---------INS Operator@@== @TO@ InfixExpression@@this.adviceChain == null @AT@ 6476 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@this.adviceChain == null @AT@ 6480 @LENGTH@ 4
------INS NullLiteral@@null @TO@ ConditionalExpression@@this.adviceChain == null ? null : Arrays.copyOf(this.adviceChain,this.adviceChain.length) @AT@ 6487 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:getAsyncProcessor().process(exchange) @TO@ MethodInvocation:getAsyncProcessor().process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (log.isTraceEnabled()) {
      log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously");
    }
  }
}
) @AT@ 5857 @LENGTH@ 38
---UPD MethodInvocation@@getAsyncProcessor().process(exchange) @TO@ getAsyncProcessor().process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (log.isTraceEnabled()) {
      log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously");
    }
  }
}
) @AT@ 5857 @LENGTH@ 37
------UPD SimpleName@@MethodName:process:[exchange] @TO@ MethodName:process:[exchange, new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (log.isTraceEnabled()) {
      log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously");
    }
  }
}
] @AT@ 5877 @LENGTH@ 17
---------INS ClassInstanceCreation@@AsyncCallback[] @TO@ SimpleName@@MethodName:process:[exchange] @AT@ 5934 @LENGTH@ 393
------------INS New@@new @TO@ ClassInstanceCreation@@AsyncCallback[] @AT@ 5934 @LENGTH@ 3
------------INS SimpleType@@AsyncCallback @TO@ ClassInstanceCreation@@AsyncCallback[] @AT@ 5938 @LENGTH@ 13
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@AsyncCallback[] @AT@ 5954 @LENGTH@ 373
---------------INS MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 5998 @LENGTH@ 315
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 5998 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 6005 @LENGTH@ 4
------------------INS SimpleName@@MethodName:done @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 6010 @LENGTH@ 4
------------------INS SingleVariableDeclaration@@boolean doneSync @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 6015 @LENGTH@ 16
---------------------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean doneSync @AT@ 6015 @LENGTH@ 7
---------------------INS SimpleName@@doneSync @TO@ SingleVariableDeclaration@@boolean doneSync @AT@ 6023 @LENGTH@ 8
------------------INS IfStatement@@if (log.isTraceEnabled()) {  log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously");} @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 6083 @LENGTH@ 212
---------------------INS MethodInvocation@@log.isTraceEnabled() @TO@ IfStatement@@if (log.isTraceEnabled()) {  log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously");} @AT@ 6087 @LENGTH@ 20
------------------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.isTraceEnabled() @AT@ 6087 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@log.isTraceEnabled() @AT@ 6091 @LENGTH@ 16
---------------------INS Block@@ThenBody:{  log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously");} @TO@ IfStatement@@if (log.isTraceEnabled()) {  log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously");} @AT@ 6109 @LENGTH@ 186
------------------------INS ExpressionStatement@@MethodInvocation:log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously") @TO@ Block@@ThenBody:{  log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously");} @AT@ 6135 @LENGTH@ 138
---------------------------INS MethodInvocation@@log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously") @TO@ ExpressionStatement@@MethodInvocation:log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously") @AT@ 6135 @LENGTH@ 137
------------------------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously") @AT@ 6135 @LENGTH@ 3
------------------------------INS SimpleName@@MethodName:trace:["Done processing event: {} {}", channel.getId(), doneSync ? "synchronously" : "asynchronously"] @TO@ MethodInvocation@@log.trace("Done processing event: {} {}",channel.getId(),doneSync ? "synchronously" : "asynchronously") @AT@ 6139 @LENGTH@ 133
---------------------------------INS StringLiteral@@"Done processing event: {} {}" @TO@ SimpleName@@MethodName:trace:["Done processing event: {} {}", channel.getId(), doneSync ? "synchronously" : "asynchronously"] @AT@ 6145 @LENGTH@ 30
---------------------------------INS MethodInvocation@@channel.getId() @TO@ SimpleName@@MethodName:trace:["Done processing event: {} {}", channel.getId(), doneSync ? "synchronously" : "asynchronously"] @AT@ 6177 @LENGTH@ 15
------------------------------------INS SimpleName@@Name:channel @TO@ MethodInvocation@@channel.getId() @AT@ 6177 @LENGTH@ 7
------------------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@channel.getId() @AT@ 6185 @LENGTH@ 7
---------------------------------INS ConditionalExpression@@doneSync ? "synchronously" : "asynchronously" @TO@ SimpleName@@MethodName:trace:["Done processing event: {} {}", channel.getId(), doneSync ? "synchronously" : "asynchronously"] @AT@ 6226 @LENGTH@ 45
------------------------------------INS SimpleName@@doneSync @TO@ ConditionalExpression@@doneSync ? "synchronously" : "asynchronously" @AT@ 6226 @LENGTH@ 8
------------------------------------INS StringLiteral@@"synchronously" @TO@ ConditionalExpression@@doneSync ? "synchronously" : "asynchronously" @AT@ 6237 @LENGTH@ 15
------------------------------------INS StringLiteral@@"asynchronously" @TO@ ConditionalExpression@@doneSync ? "synchronously" : "asynchronously" @AT@ 6255 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:send, final String exchange, final String routingKey, final Message message, final CorrelationData correlationData, AmqpException,  @TO@ public, void, MethodName:send, final String exchange, final String routingKey, final Message message, @Nullable final CorrelationData correlationData, AmqpException,  @AT@ 33487 @LENGTH@ 629
---UPD SingleVariableDeclaration@@final CorrelationData correlationData @TO@ @Nullable final CorrelationData correlationData @AT@ 33578 @LENGTH@ 37


INS MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenStateMissingThenNoErrors,  @TO@ TypeDeclaration@@[public]WebSessionOAuth2ReactiveAuthorizationRequestRepositoryTests,  @AT@ 7275 @LENGTH@ 586
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenStateMissingThenNoErrors,  @AT@ 7275 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenStateMissingThenNoErrors,  @AT@ 7282 @LENGTH@ 4
---INS SimpleName@@MethodName:removeAuthorizationRequestWhenStateMissingThenNoErrors @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenStateMissingThenNoErrors,  @AT@ 7287 @LENGTH@ 54
---INS VariableDeclarationStatement@@MockServerHttpRequest otherState=MockServerHttpRequest.get("/").queryParam(OAuth2ParameterNames.STATE,"other").build(); @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenStateMissingThenNoErrors,  @AT@ 7348 @LENGTH@ 132
------INS SimpleType@@MockServerHttpRequest @TO@ VariableDeclarationStatement@@MockServerHttpRequest otherState=MockServerHttpRequest.get("/").queryParam(OAuth2ParameterNames.STATE,"other").build(); @AT@ 7348 @LENGTH@ 21
------INS VariableDeclarationFragment@@otherState=MockServerHttpRequest.get("/").queryParam(OAuth2ParameterNames.STATE,"other").build() @TO@ VariableDeclarationStatement@@MockServerHttpRequest otherState=MockServerHttpRequest.get("/").queryParam(OAuth2ParameterNames.STATE,"other").build(); @AT@ 7370 @LENGTH@ 109
---------INS SimpleName@@otherState @TO@ VariableDeclarationFragment@@otherState=MockServerHttpRequest.get("/").queryParam(OAuth2ParameterNames.STATE,"other").build() @AT@ 7370 @LENGTH@ 10
---------INS MethodInvocation@@MockServerHttpRequest.get("/").queryParam(OAuth2ParameterNames.STATE,"other").build() @TO@ VariableDeclarationFragment@@otherState=MockServerHttpRequest.get("/").queryParam(OAuth2ParameterNames.STATE,"other").build() @AT@ 7383 @LENGTH@ 96
------------INS MethodInvocation@@MethodName:queryParam:[OAuth2ParameterNames.STATE, "other"] @TO@ MethodInvocation@@MockServerHttpRequest.get("/").queryParam(OAuth2ParameterNames.STATE,"other").build() @AT@ 7383 @LENGTH@ 83
---------------INS QualifiedName@@OAuth2ParameterNames.STATE @TO@ MethodInvocation@@MethodName:queryParam:[OAuth2ParameterNames.STATE, "other"] @AT@ 7430 @LENGTH@ 26
------------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.STATE @AT@ 7430 @LENGTH@ 20
------------------INS SimpleName@@STATE @TO@ QualifiedName@@OAuth2ParameterNames.STATE @AT@ 7451 @LENGTH@ 5
---------------INS StringLiteral@@"other" @TO@ MethodInvocation@@MethodName:queryParam:[OAuth2ParameterNames.STATE, "other"] @AT@ 7458 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:get:["/"] @TO@ MethodInvocation@@MockServerHttpRequest.get("/").queryParam(OAuth2ParameterNames.STATE,"other").build() @AT@ 7383 @LENGTH@ 30
---------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:get:["/"] @AT@ 7409 @LENGTH@ 3
------------INS SimpleName@@Name:MockServerHttpRequest @TO@ MethodInvocation@@MockServerHttpRequest.get("/").queryParam(OAuth2ParameterNames.STATE,"other").build() @AT@ 7383 @LENGTH@ 21
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@MockServerHttpRequest.get("/").queryParam(OAuth2ParameterNames.STATE,"other").build() @AT@ 7472 @LENGTH@ 7
---INS VariableDeclarationStatement@@ServerWebExchange otherStateExchange=this.exchange.mutate().request(otherState).build(); @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenStateMissingThenNoErrors,  @AT@ 7483 @LENGTH@ 100
------INS SimpleType@@ServerWebExchange @TO@ VariableDeclarationStatement@@ServerWebExchange otherStateExchange=this.exchange.mutate().request(otherState).build(); @AT@ 7483 @LENGTH@ 17
------INS VariableDeclarationFragment@@otherStateExchange=this.exchange.mutate().request(otherState).build() @TO@ VariableDeclarationStatement@@ServerWebExchange otherStateExchange=this.exchange.mutate().request(otherState).build(); @AT@ 7501 @LENGTH@ 81
---------INS SimpleName@@otherStateExchange @TO@ VariableDeclarationFragment@@otherStateExchange=this.exchange.mutate().request(otherState).build() @AT@ 7501 @LENGTH@ 18
---------INS MethodInvocation@@this.exchange.mutate().request(otherState).build() @TO@ VariableDeclarationFragment@@otherStateExchange=this.exchange.mutate().request(otherState).build() @AT@ 7522 @LENGTH@ 60
------------INS MethodInvocation@@MethodName:request:[otherState] @TO@ MethodInvocation@@this.exchange.mutate().request(otherState).build() @AT@ 7522 @LENGTH@ 47
---------------INS SimpleName@@otherState @TO@ MethodInvocation@@MethodName:request:[otherState] @AT@ 7558 @LENGTH@ 10
------------INS MethodInvocation@@MethodName:mutate:[] @TO@ MethodInvocation@@this.exchange.mutate().request(otherState).build() @AT@ 7522 @LENGTH@ 22
------------INS FieldAccess@@this.exchange @TO@ MethodInvocation@@this.exchange.mutate().request(otherState).build() @AT@ 7522 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.exchange @AT@ 7522 @LENGTH@ 4
---------------INS SimpleName@@exchange @TO@ FieldAccess@@this.exchange @AT@ 7527 @LENGTH@ 8
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@this.exchange.mutate().request(otherState).build() @AT@ 7575 @LENGTH@ 7
---INS VariableDeclarationStatement@@Mono<OAuth2AuthorizationRequest> saveAndRemove=this.repository.saveAuthorizationRequest(this.authorizationRequest,this.exchange).then(this.repository.removeAuthorizationRequest(otherStateExchange)); @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenStateMissingThenNoErrors,  @AT@ 7586 @LENGTH@ 211
------INS ParameterizedType@@Mono<OAuth2AuthorizationRequest> @TO@ VariableDeclarationStatement@@Mono<OAuth2AuthorizationRequest> saveAndRemove=this.repository.saveAuthorizationRequest(this.authorizationRequest,this.exchange).then(this.repository.removeAuthorizationRequest(otherStateExchange)); @AT@ 7586 @LENGTH@ 32
---------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<OAuth2AuthorizationRequest> @AT@ 7586 @LENGTH@ 4
---------INS SimpleType@@OAuth2AuthorizationRequest @TO@ ParameterizedType@@Mono<OAuth2AuthorizationRequest> @AT@ 7591 @LENGTH@ 26
------INS VariableDeclarationFragment@@saveAndRemove=this.repository.saveAuthorizationRequest(this.authorizationRequest,this.exchange).then(this.repository.removeAuthorizationRequest(otherStateExchange)) @TO@ VariableDeclarationStatement@@Mono<OAuth2AuthorizationRequest> saveAndRemove=this.repository.saveAuthorizationRequest(this.authorizationRequest,this.exchange).then(this.repository.removeAuthorizationRequest(otherStateExchange)); @AT@ 7619 @LENGTH@ 177
---------INS SimpleName@@saveAndRemove @TO@ VariableDeclarationFragment@@saveAndRemove=this.repository.saveAuthorizationRequest(this.authorizationRequest,this.exchange).then(this.repository.removeAuthorizationRequest(otherStateExchange)) @AT@ 7619 @LENGTH@ 13
---------INS MethodInvocation@@this.repository.saveAuthorizationRequest(this.authorizationRequest,this.exchange).then(this.repository.removeAuthorizationRequest(otherStateExchange)) @TO@ VariableDeclarationFragment@@saveAndRemove=this.repository.saveAuthorizationRequest(this.authorizationRequest,this.exchange).then(this.repository.removeAuthorizationRequest(otherStateExchange)) @AT@ 7635 @LENGTH@ 161
------------INS MethodInvocation@@MethodName:saveAuthorizationRequest:[this.authorizationRequest, this.exchange] @TO@ MethodInvocation@@this.repository.saveAuthorizationRequest(this.authorizationRequest,this.exchange).then(this.repository.removeAuthorizationRequest(otherStateExchange)) @AT@ 7635 @LENGTH@ 87
---------------INS FieldAccess@@this.authorizationRequest @TO@ MethodInvocation@@MethodName:saveAuthorizationRequest:[this.authorizationRequest, this.exchange] @AT@ 7681 @LENGTH@ 25
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationRequest @AT@ 7681 @LENGTH@ 4
------------------INS SimpleName@@authorizationRequest @TO@ FieldAccess@@this.authorizationRequest @AT@ 7686 @LENGTH@ 20
---------------INS FieldAccess@@this.exchange @TO@ MethodInvocation@@MethodName:saveAuthorizationRequest:[this.authorizationRequest, this.exchange] @AT@ 7708 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.exchange @AT@ 7708 @LENGTH@ 4
------------------INS SimpleName@@exchange @TO@ FieldAccess@@this.exchange @AT@ 7713 @LENGTH@ 8
------------INS FieldAccess@@this.repository @TO@ MethodInvocation@@this.repository.saveAuthorizationRequest(this.authorizationRequest,this.exchange).then(this.repository.removeAuthorizationRequest(otherStateExchange)) @AT@ 7635 @LENGTH@ 15
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.repository @AT@ 7635 @LENGTH@ 4
---------------INS SimpleName@@repository @TO@ FieldAccess@@this.repository @AT@ 7640 @LENGTH@ 10
------------INS SimpleName@@MethodName:then:[this.repository.removeAuthorizationRequest(otherStateExchange)] @TO@ MethodInvocation@@this.repository.saveAuthorizationRequest(this.authorizationRequest,this.exchange).then(this.repository.removeAuthorizationRequest(otherStateExchange)) @AT@ 7728 @LENGTH@ 68
---------------INS MethodInvocation@@this.repository.removeAuthorizationRequest(otherStateExchange) @TO@ SimpleName@@MethodName:then:[this.repository.removeAuthorizationRequest(otherStateExchange)] @AT@ 7733 @LENGTH@ 62
------------------INS FieldAccess@@this.repository @TO@ MethodInvocation@@this.repository.removeAuthorizationRequest(otherStateExchange) @AT@ 7733 @LENGTH@ 15
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.repository @AT@ 7733 @LENGTH@ 4
---------------------INS SimpleName@@repository @TO@ FieldAccess@@this.repository @AT@ 7738 @LENGTH@ 10
------------------INS SimpleName@@MethodName:removeAuthorizationRequest:[otherStateExchange] @TO@ MethodInvocation@@this.repository.removeAuthorizationRequest(otherStateExchange) @AT@ 7749 @LENGTH@ 46
---------------------INS SimpleName@@otherStateExchange @TO@ SimpleName@@MethodName:removeAuthorizationRequest:[otherStateExchange] @AT@ 7776 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:StepVerifier.create(saveAndRemove).verifyComplete() @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenStateMissingThenNoErrors,  @AT@ 7801 @LENGTH@ 57
------INS MethodInvocation@@StepVerifier.create(saveAndRemove).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:StepVerifier.create(saveAndRemove).verifyComplete() @AT@ 7801 @LENGTH@ 56
---------INS MethodInvocation@@MethodName:create:[saveAndRemove] @TO@ MethodInvocation@@StepVerifier.create(saveAndRemove).verifyComplete() @AT@ 7801 @LENGTH@ 34
------------INS SimpleName@@saveAndRemove @TO@ MethodInvocation@@MethodName:create:[saveAndRemove] @AT@ 7821 @LENGTH@ 13
---------INS SimpleName@@Name:StepVerifier @TO@ MethodInvocation@@StepVerifier.create(saveAndRemove).verifyComplete() @AT@ 7801 @LENGTH@ 12
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@StepVerifier.create(saveAndRemove).verifyComplete() @AT@ 7841 @LENGTH@ 16


UPD TypeDeclaration@@[public]JDBCProtocolResourceDefinition, ProtocolResourceDefinition<JDBC_PING> @TO@ [public]JDBCProtocolResourceDefinition, ProtocolResourceDefinition @AT@ 1937 @LENGTH@ 2349
---INS SimpleType@@ProtocolResourceDefinition @TO@ TypeDeclaration@@[public]JDBCProtocolResourceDefinition, ProtocolResourceDefinition<JDBC_PING> @AT@ 1896 @LENGTH@ 26
---DEL ParameterizedType@@ProtocolResourceDefinition<JDBC_PING> @AT@ 1989 @LENGTH@ 37
------DEL SimpleType@@ProtocolResourceDefinition @AT@ 1989 @LENGTH@ 26
------DEL SimpleType@@JDBC_PING @AT@ 2016 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:constructorWhenClientRegistrationMapIsEmptyThenRepositoryIsEmpty,  @TO@ TypeDeclaration@@[public]InMemoryReactiveClientRegistrationRepositoryTests,  @AT@ 2759 @LENGTH@ 251
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenClientRegistrationMapIsEmptyThenRepositoryIsEmpty,  @AT@ 2759 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenClientRegistrationMapIsEmptyThenRepositoryIsEmpty,  @AT@ 2766 @LENGTH@ 4
---INS SimpleName@@MethodName:constructorWhenClientRegistrationMapIsEmptyThenRepositoryIsEmpty @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenClientRegistrationMapIsEmptyThenRepositoryIsEmpty,  @AT@ 2771 @LENGTH@ 64
---INS VariableDeclarationStatement@@InMemoryReactiveClientRegistrationRepository repository=new InMemoryReactiveClientRegistrationRepository(new HashMap<>()); @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenClientRegistrationMapIsEmptyThenRepositoryIsEmpty,  @AT@ 2842 @LENGTH@ 129
------INS SimpleType@@InMemoryReactiveClientRegistrationRepository @TO@ VariableDeclarationStatement@@InMemoryReactiveClientRegistrationRepository repository=new InMemoryReactiveClientRegistrationRepository(new HashMap<>()); @AT@ 2842 @LENGTH@ 44
------INS VariableDeclarationFragment@@repository=new InMemoryReactiveClientRegistrationRepository(new HashMap<>()) @TO@ VariableDeclarationStatement@@InMemoryReactiveClientRegistrationRepository repository=new InMemoryReactiveClientRegistrationRepository(new HashMap<>()); @AT@ 2887 @LENGTH@ 83
---------INS SimpleName@@repository @TO@ VariableDeclarationFragment@@repository=new InMemoryReactiveClientRegistrationRepository(new HashMap<>()) @AT@ 2887 @LENGTH@ 10
---------INS ClassInstanceCreation@@InMemoryReactiveClientRegistrationRepository[new HashMap<>()] @TO@ VariableDeclarationFragment@@repository=new InMemoryReactiveClientRegistrationRepository(new HashMap<>()) @AT@ 2900 @LENGTH@ 70
------------INS New@@new @TO@ ClassInstanceCreation@@InMemoryReactiveClientRegistrationRepository[new HashMap<>()] @AT@ 2900 @LENGTH@ 3
------------INS SimpleType@@InMemoryReactiveClientRegistrationRepository @TO@ ClassInstanceCreation@@InMemoryReactiveClientRegistrationRepository[new HashMap<>()] @AT@ 2904 @LENGTH@ 44
------------INS ClassInstanceCreation@@HashMap<>[] @TO@ ClassInstanceCreation@@InMemoryReactiveClientRegistrationRepository[new HashMap<>()] @AT@ 2954 @LENGTH@ 15
---------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 2954 @LENGTH@ 3
---------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 2958 @LENGTH@ 9
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 2958 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(repository).isEmpty() @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenClientRegistrationMapIsEmptyThenRepositoryIsEmpty,  @AT@ 2974 @LENGTH@ 33
------INS MethodInvocation@@assertThat(repository).isEmpty() @TO@ ExpressionStatement@@MethodInvocation:assertThat(repository).isEmpty() @AT@ 2974 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:assertThat:[repository] @TO@ MethodInvocation@@assertThat(repository).isEmpty() @AT@ 2974 @LENGTH@ 22
------------INS SimpleName@@repository @TO@ MethodInvocation@@MethodName:assertThat:[repository] @AT@ 2985 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@assertThat(repository).isEmpty() @AT@ 2997 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:isUTC=true @TO@ Assignment:isUTC=false @AT@ 2617 @LENGTH@ 13
---UPD Assignment@@isUTC=true @TO@ isUTC=false @AT@ 2617 @LENGTH@ 12
------UPD BooleanLiteral@@true @TO@ false @AT@ 2625 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(ClassUtils.isAssignableValue(it,implementation),() -> String.format("Fragment implementation %s does not implement %s!",ClassUtils.getQualifiedName(it),ClassUtils.getQualifiedName(implementation.getClass()))) @TO@ MethodInvocation:Assert.isTrue(ClassUtils.isAssignableValue(it,implementation),() -> String.format("Fragment implementation %s does not implement %s!",ClassUtils.getQualifiedName(implementation.getClass()),ClassUtils.getQualifiedName(it))) @AT@ 6277 @LENGTH@ 241
---UPD MethodInvocation@@Assert.isTrue(ClassUtils.isAssignableValue(it,implementation),() -> String.format("Fragment implementation %s does not implement %s!",ClassUtils.getQualifiedName(it),ClassUtils.getQualifiedName(implementation.getClass()))) @TO@ Assert.isTrue(ClassUtils.isAssignableValue(it,implementation),() -> String.format("Fragment implementation %s does not implement %s!",ClassUtils.getQualifiedName(implementation.getClass()),ClassUtils.getQualifiedName(it))) @AT@ 6277 @LENGTH@ 240
------UPD SimpleName@@MethodName:isTrue:[ClassUtils.isAssignableValue(it,implementation), () -> String.format("Fragment implementation %s does not implement %s!",ClassUtils.getQualifiedName(it),ClassUtils.getQualifiedName(implementation.getClass()))] @TO@ MethodName:isTrue:[ClassUtils.isAssignableValue(it,implementation), () -> String.format("Fragment implementation %s does not implement %s!",ClassUtils.getQualifiedName(implementation.getClass()),ClassUtils.getQualifiedName(it))] @AT@ 6284 @LENGTH@ 233
---------UPD LambdaExpression@@() -> String.format("Fragment implementation %s does not implement %s!",ClassUtils.getQualifiedName(it),ClassUtils.getQualifiedName(implementation.getClass())) @TO@ () -> String.format("Fragment implementation %s does not implement %s!",ClassUtils.getQualifiedName(implementation.getClass()),ClassUtils.getQualifiedName(it)) @AT@ 6347 @LENGTH@ 169
------------UPD MethodInvocation@@String.format("Fragment implementation %s does not implement %s!",ClassUtils.getQualifiedName(it),ClassUtils.getQualifiedName(implementation.getClass())) @TO@ String.format("Fragment implementation %s does not implement %s!",ClassUtils.getQualifiedName(implementation.getClass()),ClassUtils.getQualifiedName(it)) @AT@ 6353 @LENGTH@ 163
---------------UPD SimpleName@@MethodName:format:["Fragment implementation %s does not implement %s!", ClassUtils.getQualifiedName(it), ClassUtils.getQualifiedName(implementation.getClass())] @TO@ MethodName:format:["Fragment implementation %s does not implement %s!", ClassUtils.getQualifiedName(implementation.getClass()), ClassUtils.getQualifiedName(it)] @AT@ 6360 @LENGTH@ 156
------------------MOV MethodInvocation@@ClassUtils.getQualifiedName(it) @TO@ SimpleName@@MethodName:format:["Fragment implementation %s does not implement %s!", ClassUtils.getQualifiedName(it), ClassUtils.getQualifiedName(implementation.getClass())] @AT@ 6420 @LENGTH@ 31


UPD Block@@ThenBody:{  boolean atLeastOneChallenge=false;  boolean statusSet=false;  for (  HttpServerMechanismsResponder responder : responders) {    try {      responder.sendResponse(this);      atLeastOneChallenge=true;      if (statusSet == false && statusCode > 0 && statusCode != OK) {        httpExchangeSpi.setStatusCode(statusCode);        statusSet=true;      }    } catch (    HttpAuthenticationException e) {      log.trace("HTTP authentication mechanism unable to send challenge.",e);    }  }  if (atLeastOneChallenge == false) {    throw log.httpAuthenticationNoSuccessfulResponder();  }  if (statusSet == false) {    httpExchangeSpi.setStatusCode(OK);  }} @TO@ ThenBody:{  boolean atLeastOneChallenge=false;  int defaultStatusCode=OK;  boolean statusSet=false;  for (  HttpServerMechanismsResponder responder : responders) {    try {      responder.sendResponse(this);      atLeastOneChallenge=true;      if (!statusSet && statusCode > 0) {        if (statusCode == FORBIDDEN) {          defaultStatusCode=statusCode;        } else         if (statusCode != OK) {          statusSet=true;          httpExchangeSpi.setStatusCode(statusCode);        }      }    } catch (    HttpAuthenticationException e) {      log.trace("HTTP authentication mechanism unable to send challenge.",e);    }  }  if (atLeastOneChallenge == false) {    throw log.httpAuthenticationNoSuccessfulResponder();  }  if (!statusSet) {    httpExchangeSpi.setStatusCode(defaultStatusCode);  }} @AT@ 5939 @LENGTH@ 1176
---INS VariableDeclarationStatement@@int defaultStatusCode=OK; @TO@ Block@@ThenBody:{  boolean atLeastOneChallenge=false;  boolean statusSet=false;  for (  HttpServerMechanismsResponder responder : responders) {    try {      responder.sendResponse(this);      atLeastOneChallenge=true;      if (statusSet == false && statusCode > 0 && statusCode != OK) {        httpExchangeSpi.setStatusCode(statusCode);        statusSet=true;      }    } catch (    HttpAuthenticationException e) {      log.trace("HTTP authentication mechanism unable to send challenge.",e);    }  }  if (atLeastOneChallenge == false) {    throw log.httpAuthenticationNoSuccessfulResponder();  }  if (statusSet == false) {    httpExchangeSpi.setStatusCode(OK);  }} @AT@ 6027 @LENGTH@ 27
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int defaultStatusCode=OK; @AT@ 6027 @LENGTH@ 3
------INS VariableDeclarationFragment@@defaultStatusCode=OK @TO@ VariableDeclarationStatement@@int defaultStatusCode=OK; @AT@ 6031 @LENGTH@ 22
---------INS SimpleName@@defaultStatusCode @TO@ VariableDeclarationFragment@@defaultStatusCode=OK @AT@ 6031 @LENGTH@ 17
---------INS SimpleName@@OK @TO@ VariableDeclarationFragment@@defaultStatusCode=OK @AT@ 6051 @LENGTH@ 2
---UPD EnhancedForStatement@@for (HttpServerMechanismsResponder responder : responders) {  try {    responder.sendResponse(this);    atLeastOneChallenge=true;    if (statusSet == false && statusCode > 0 && statusCode != OK) {      httpExchangeSpi.setStatusCode(statusCode);      statusSet=true;    }  } catch (  HttpAuthenticationException e) {    log.trace("HTTP authentication mechanism unable to send challenge.",e);  }} @TO@ for (HttpServerMechanismsResponder responder : responders) {  try {    responder.sendResponse(this);    atLeastOneChallenge=true;    if (!statusSet && statusCode > 0) {      if (statusCode == FORBIDDEN) {        defaultStatusCode=statusCode;      } else       if (statusCode != OK) {        statusSet=true;        httpExchangeSpi.setStatusCode(statusCode);      }    }  } catch (  HttpAuthenticationException e) {    log.trace("HTTP authentication mechanism unable to send challenge.",e);  }} @AT@ 6077 @LENGTH@ 710
------UPD TryStatement@@try {  responder.sendResponse(this);  atLeastOneChallenge=true;  if (statusSet == false && statusCode > 0 && statusCode != OK) {    httpExchangeSpi.setStatusCode(statusCode);    statusSet=true;  }} catch (HttpAuthenticationException e) {  log.trace("HTTP authentication mechanism unable to send challenge.",e);} @TO@ try {  responder.sendResponse(this);  atLeastOneChallenge=true;  if (!statusSet && statusCode > 0) {    if (statusCode == FORBIDDEN) {      defaultStatusCode=statusCode;    } else     if (statusCode != OK) {      statusSet=true;      httpExchangeSpi.setStatusCode(statusCode);    }  }} catch (HttpAuthenticationException e) {  log.trace("HTTP authentication mechanism unable to send challenge.",e);} @AT@ 6166 @LENGTH@ 595
---------UPD IfStatement@@if (statusSet == false && statusCode > 0 && statusCode != OK) {  httpExchangeSpi.setStatusCode(statusCode);  statusSet=true;} @TO@ if (statusCode != OK) {  statusSet=true;  httpExchangeSpi.setStatusCode(statusCode);} @AT@ 6326 @LENGTH@ 230
---------INS IfStatement@@if (!statusSet && statusCode > 0) {  if (statusCode == FORBIDDEN) {    defaultStatusCode=statusCode;  } else   if (statusCode != OK) {    statusSet=true;    httpExchangeSpi.setStatusCode(statusCode);  }} @TO@ TryStatement@@try {  responder.sendResponse(this);  atLeastOneChallenge=true;  if (statusSet == false && statusCode > 0 && statusCode != OK) {    httpExchangeSpi.setStatusCode(statusCode);    statusSet=true;  }} catch (HttpAuthenticationException e) {  log.trace("HTTP authentication mechanism unable to send challenge.",e);} @AT@ 6379 @LENGTH@ 557
------------INS InfixExpression@@!statusSet && statusCode > 0 @TO@ IfStatement@@if (!statusSet && statusCode > 0) {  if (statusCode == FORBIDDEN) {    defaultStatusCode=statusCode;  } else   if (statusCode != OK) {    statusSet=true;    httpExchangeSpi.setStatusCode(statusCode);  }} @AT@ 6384 @LENGTH@ 29
---------------INS PrefixExpression@@!statusSet @TO@ InfixExpression@@!statusSet && statusCode > 0 @AT@ 6384 @LENGTH@ 11
------------------INS Operator@@! @TO@ PrefixExpression@@!statusSet @AT@ 6384 @LENGTH@ 1
------------------INS SimpleName@@statusSet @TO@ PrefixExpression@@!statusSet @AT@ 6386 @LENGTH@ 9
---------------INS Operator@@&& @TO@ InfixExpression@@!statusSet && statusCode > 0 @AT@ 6395 @LENGTH@ 2
---------------INS InfixExpression@@statusCode > 0 @TO@ InfixExpression@@!statusSet && statusCode > 0 @AT@ 6399 @LENGTH@ 14
------------------INS SimpleName@@statusCode @TO@ InfixExpression@@statusCode > 0 @AT@ 6399 @LENGTH@ 10
------------------INS Operator@@> @TO@ InfixExpression@@statusCode > 0 @AT@ 6409 @LENGTH@ 1
------------------INS NumberLiteral@@0 @TO@ InfixExpression@@statusCode > 0 @AT@ 6412 @LENGTH@ 1
------------INS Block@@ThenBody:{  if (statusCode == FORBIDDEN) {    defaultStatusCode=statusCode;  } else   if (statusCode != OK) {    statusSet=true;    httpExchangeSpi.setStatusCode(statusCode);  }} @TO@ IfStatement@@if (!statusSet && statusCode > 0) {  if (statusCode == FORBIDDEN) {    defaultStatusCode=statusCode;  } else   if (statusCode != OK) {    statusSet=true;    httpExchangeSpi.setStatusCode(statusCode);  }} @AT@ 6415 @LENGTH@ 521
---------------INS IfStatement@@if (statusCode == FORBIDDEN) {  defaultStatusCode=statusCode;} else if (statusCode != OK) {  statusSet=true;  httpExchangeSpi.setStatusCode(statusCode);} @TO@ Block@@ThenBody:{  if (statusCode == FORBIDDEN) {    defaultStatusCode=statusCode;  } else   if (statusCode != OK) {    statusSet=true;    httpExchangeSpi.setStatusCode(statusCode);  }} @AT@ 6453 @LENGTH@ 449
------------------INS InfixExpression@@statusCode == FORBIDDEN @TO@ IfStatement@@if (statusCode == FORBIDDEN) {  defaultStatusCode=statusCode;} else if (statusCode != OK) {  statusSet=true;  httpExchangeSpi.setStatusCode(statusCode);} @AT@ 6457 @LENGTH@ 23
---------------------INS SimpleName@@statusCode @TO@ InfixExpression@@statusCode == FORBIDDEN @AT@ 6457 @LENGTH@ 10
---------------------INS Operator@@== @TO@ InfixExpression@@statusCode == FORBIDDEN @AT@ 6467 @LENGTH@ 2
---------------------INS SimpleName@@FORBIDDEN @TO@ InfixExpression@@statusCode == FORBIDDEN @AT@ 6471 @LENGTH@ 9
------------------INS Block@@ThenBody:{  defaultStatusCode=statusCode;} @TO@ IfStatement@@if (statusCode == FORBIDDEN) {  defaultStatusCode=statusCode;} else if (statusCode != OK) {  statusSet=true;  httpExchangeSpi.setStatusCode(statusCode);} @AT@ 6482 @LENGTH@ 147
---------------------INS ExpressionStatement@@Assignment:defaultStatusCode=statusCode @TO@ Block@@ThenBody:{  defaultStatusCode=statusCode;} @AT@ 6560 @LENGTH@ 31
------------------------INS Assignment@@defaultStatusCode=statusCode @TO@ ExpressionStatement@@Assignment:defaultStatusCode=statusCode @AT@ 6560 @LENGTH@ 30
---------------------------INS SimpleName@@defaultStatusCode @TO@ Assignment@@defaultStatusCode=statusCode @AT@ 6560 @LENGTH@ 17
---------------------------INS Operator@@= @TO@ Assignment@@defaultStatusCode=statusCode @AT@ 6577 @LENGTH@ 1
---------------------------INS SimpleName@@statusCode @TO@ Assignment@@defaultStatusCode=statusCode @AT@ 6580 @LENGTH@ 10
------------------INS Block@@ElseBody:if (statusCode != OK) {  statusSet=true;  httpExchangeSpi.setStatusCode(statusCode);} @TO@ IfStatement@@if (statusCode == FORBIDDEN) {  defaultStatusCode=statusCode;} else if (statusCode != OK) {  statusSet=true;  httpExchangeSpi.setStatusCode(statusCode);} @AT@ 6635 @LENGTH@ 267
---------------------MOV IfStatement@@if (statusSet == false && statusCode > 0 && statusCode != OK) {  httpExchangeSpi.setStatusCode(statusCode);  statusSet=true;} @TO@ Block@@ElseBody:if (statusCode != OK) {  statusSet=true;  httpExchangeSpi.setStatusCode(statusCode);} @AT@ 6326 @LENGTH@ 230
------------------------DEL InfixExpression@@statusSet == false && statusCode > 0 && statusCode != OK @AT@ 6330 @LENGTH@ 56
---------------------------DEL InfixExpression@@statusSet == false && statusCode > 0 @AT@ 6330 @LENGTH@ 36
------------------------------DEL InfixExpression@@statusSet == false @AT@ 6330 @LENGTH@ 18
---------------------------------DEL SimpleName@@statusSet @AT@ 6330 @LENGTH@ 9
---------------------------------DEL Operator@@== @AT@ 6339 @LENGTH@ 2
---------------------------------DEL BooleanLiteral@@false @AT@ 6343 @LENGTH@ 5
------------------------------DEL Operator@@&& @AT@ 6348 @LENGTH@ 2
------------------------------DEL InfixExpression@@statusCode > 0 @AT@ 6352 @LENGTH@ 14
---------------------------------DEL SimpleName@@statusCode @AT@ 6352 @LENGTH@ 10
---------------------------------DEL Operator@@> @AT@ 6362 @LENGTH@ 1
---------------------------------DEL NumberLiteral@@0 @AT@ 6365 @LENGTH@ 1
---------------------------DEL Operator@@&& @AT@ 6366 @LENGTH@ 2
---------------------------DEL InfixExpression@@statusCode != OK @AT@ 6370 @LENGTH@ 16
------------------------UPD Block@@ThenBody:{  httpExchangeSpi.setStatusCode(statusCode);  statusSet=true;} @TO@ ThenBody:{  statusSet=true;  httpExchangeSpi.setStatusCode(statusCode);} @AT@ 6388 @LENGTH@ 168
---------------------------MOV ExpressionStatement@@MethodInvocation:httpExchangeSpi.setStatusCode(statusCode) @TO@ Block@@ThenBody:{  httpExchangeSpi.setStatusCode(statusCode);  statusSet=true;} @AT@ 6426 @LENGTH@ 42
------------------------INS InfixExpression@@statusCode != OK @TO@ IfStatement@@if (statusSet == false && statusCode > 0 && statusCode != OK) {  httpExchangeSpi.setStatusCode(statusCode);  statusSet=true;} @AT@ 6639 @LENGTH@ 16
---------------------------MOV SimpleName@@statusCode @TO@ InfixExpression@@statusCode != OK @AT@ 6370 @LENGTH@ 10
---------------------------MOV SimpleName@@statusCode @TO@ InfixExpression@@statusCode != OK @AT@ 6370 @LENGTH@ 10
---------------------------MOV Operator@@!= @TO@ InfixExpression@@statusCode != OK @AT@ 6380 @LENGTH@ 2
---------------------------MOV Operator@@!= @TO@ InfixExpression@@statusCode != OK @AT@ 6380 @LENGTH@ 2
---------------------------MOV SimpleName@@OK @TO@ InfixExpression@@statusCode != OK @AT@ 6384 @LENGTH@ 2
---------------------------MOV SimpleName@@OK @TO@ InfixExpression@@statusCode != OK @AT@ 6384 @LENGTH@ 2
---UPD IfStatement@@if (statusSet == false) {  httpExchangeSpi.setStatusCode(OK);} @TO@ if (!statusSet) {  httpExchangeSpi.setStatusCode(defaultStatusCode);} @AT@ 6979 @LENGTH@ 114
------DEL InfixExpression@@statusSet == false @AT@ 6983 @LENGTH@ 18
---------DEL SimpleName@@statusSet @AT@ 6983 @LENGTH@ 9
---------DEL Operator@@== @AT@ 6992 @LENGTH@ 2
---------DEL BooleanLiteral@@false @AT@ 6996 @LENGTH@ 5
------UPD Block@@ThenBody:{  httpExchangeSpi.setStatusCode(OK);} @TO@ ThenBody:{  httpExchangeSpi.setStatusCode(defaultStatusCode);} @AT@ 7003 @LENGTH@ 90
---------UPD ExpressionStatement@@MethodInvocation:httpExchangeSpi.setStatusCode(OK) @TO@ MethodInvocation:httpExchangeSpi.setStatusCode(defaultStatusCode) @AT@ 7033 @LENGTH@ 34
------------UPD MethodInvocation@@httpExchangeSpi.setStatusCode(OK) @TO@ httpExchangeSpi.setStatusCode(defaultStatusCode) @AT@ 7033 @LENGTH@ 33
---------------UPD SimpleName@@MethodName:setStatusCode:[OK] @TO@ MethodName:setStatusCode:[defaultStatusCode] @AT@ 7049 @LENGTH@ 17
------------------UPD SimpleName@@OK @TO@ defaultStatusCode @AT@ 7063 @LENGTH@ 2
------INS PrefixExpression@@!statusSet @TO@ IfStatement@@if (statusSet == false) {  httpExchangeSpi.setStatusCode(OK);} @AT@ 7364 @LENGTH@ 11
---------INS Operator@@! @TO@ PrefixExpression@@!statusSet @AT@ 7364 @LENGTH@ 1
---------INS SimpleName@@statusSet @TO@ PrefixExpression@@!statusSet @AT@ 7366 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:publisher=options.getResumeTimestamp().map(it -> new BsonTimestamp(it.toEpochMilli())).map(publisher::startAtOperationTime).orElse(publisher) @TO@ Assignment:publisher=options.getResumeTimestamp().map(it -> new BsonTimestamp((int)it.getEpochSecond(),0)).map(publisher::startAtOperationTime).orElse(publisher) @AT@ 77263 @LENGTH@ 149
---UPD Assignment@@publisher=options.getResumeTimestamp().map(it -> new BsonTimestamp(it.toEpochMilli())).map(publisher::startAtOperationTime).orElse(publisher) @TO@ publisher=options.getResumeTimestamp().map(it -> new BsonTimestamp((int)it.getEpochSecond(),0)).map(publisher::startAtOperationTime).orElse(publisher) @AT@ 77263 @LENGTH@ 148
------UPD MethodInvocation@@options.getResumeTimestamp().map(it -> new BsonTimestamp(it.toEpochMilli())).map(publisher::startAtOperationTime).orElse(publisher) @TO@ options.getResumeTimestamp().map(it -> new BsonTimestamp((int)it.getEpochSecond(),0)).map(publisher::startAtOperationTime).orElse(publisher) @AT@ 77275 @LENGTH@ 136
---------UPD MethodInvocation@@MethodName:map:[it -> new BsonTimestamp(it.toEpochMilli())] @TO@ MethodName:map:[it -> new BsonTimestamp((int)it.getEpochSecond(),0)] @AT@ 77275 @LENGTH@ 76
------------UPD LambdaExpression@@it -> new BsonTimestamp(it.toEpochMilli()) @TO@ it -> new BsonTimestamp((int)it.getEpochSecond(),0) @AT@ 77308 @LENGTH@ 42
---------------UPD ClassInstanceCreation@@BsonTimestamp[it.toEpochMilli()] @TO@ BsonTimestamp[(int)it.getEpochSecond(), 0] @AT@ 77314 @LENGTH@ 36
------------------INS CastExpression@@(int)it.getEpochSecond() @TO@ ClassInstanceCreation@@BsonTimestamp[it.toEpochMilli()] @AT@ 77332 @LENGTH@ 25
---------------------INS PrimitiveType@@int @TO@ CastExpression@@(int)it.getEpochSecond() @AT@ 77333 @LENGTH@ 3
---------------------INS MethodInvocation@@it.getEpochSecond() @TO@ CastExpression@@(int)it.getEpochSecond() @AT@ 77338 @LENGTH@ 19
------------------------MOV SimpleName@@Name:it @TO@ MethodInvocation@@it.getEpochSecond() @AT@ 77332 @LENGTH@ 2
------------------------MOV SimpleName@@MethodName:toEpochMilli:[] @TO@ MethodInvocation@@it.getEpochSecond() @AT@ 77335 @LENGTH@ 14
------------------DEL MethodInvocation@@it.toEpochMilli() @AT@ 77332 @LENGTH@ 17
------------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@BsonTimestamp[it.toEpochMilli()] @AT@ 77359 @LENGTH@ 1


UPD VariableDeclarationStatement@@XStreamExecutionContextStringSerializer serializerDeserializer=new XStreamExecutionContextStringSerializer(); @TO@ @SuppressWarnings("deprecation") XStreamExecutionContextStringSerializer serializerDeserializer=new XStreamExecutionContextStringSerializer(); @AT@ 1044 @LENGTH@ 111


UPD TypeDeclaration@@[public]SingletonDeploymentProcessor, [DeploymentUnitProcessor, LifecycleListener] @TO@ [@SuppressWarnings("deprecation"), public]SingletonDeploymentProcessor, [DeploymentUnitProcessor, LifecycleListener] @AT@ 1961 @LENGTH@ 1854
---INS SingleMemberAnnotation@@@SuppressWarnings("deprecation") @TO@ TypeDeclaration@@[public]SingletonDeploymentProcessor, [DeploymentUnitProcessor, LifecycleListener] @AT@ 1961 @LENGTH@ 32


MOV FieldDeclaration@@private, final, OAuthSecureStorage, [secureStorage] @TO@ TypeDeclaration@@[public]CachingOAuthSecureStorage, [OAuthSecureStorage] @AT@ 1166 @LENGTH@ 47


UPD Block@@ThenBody:{  final ServiceName deliveyGroupServiceName=MdbDeliveryGroupResourceDefinition.getDeliveryGroupServiceName(mdbDescription.getDeliveryGroup());  if (phaseContext.getServiceRegistry().getService(deliveyGroupServiceName) == null) {    throw EjbLogger.DEPLOYMENT_LOGGER.missingMdbDeliveryGroup(mdbDescription.getDeliveryGroup());  }  builder.addDependency(deliveyGroupServiceName);} @TO@ ThenBody:{  final ServiceName deliveryGroupServiceName=MdbDeliveryGroupResourceDefinition.getDeliveryGroupServiceName(mdbDescription.getDeliveryGroup());  if (phaseContext.getServiceRegistry().getService(deliveryGroupServiceName) == null) {    throw EjbLogger.DEPLOYMENT_LOGGER.missingMdbDeliveryGroup(mdbDescription.getDeliveryGroup());  }  builder.addDependency(deliveryGroupServiceName);} @AT@ 4530 @LENGTH@ 552
---UPD VariableDeclarationStatement@@final ServiceName deliveyGroupServiceName=MdbDeliveryGroupResourceDefinition.getDeliveryGroupServiceName(mdbDescription.getDeliveryGroup()); @TO@ final ServiceName deliveryGroupServiceName=MdbDeliveryGroupResourceDefinition.getDeliveryGroupServiceName(mdbDescription.getDeliveryGroup()); @AT@ 4556 @LENGTH@ 175
------UPD VariableDeclarationFragment@@deliveyGroupServiceName=MdbDeliveryGroupResourceDefinition.getDeliveryGroupServiceName(mdbDescription.getDeliveryGroup()) @TO@ deliveryGroupServiceName=MdbDeliveryGroupResourceDefinition.getDeliveryGroupServiceName(mdbDescription.getDeliveryGroup()) @AT@ 4574 @LENGTH@ 156
---------UPD SimpleName@@deliveyGroupServiceName @TO@ deliveryGroupServiceName @AT@ 4574 @LENGTH@ 23
---UPD IfStatement@@if (phaseContext.getServiceRegistry().getService(deliveyGroupServiceName) == null) {  throw EjbLogger.DEPLOYMENT_LOGGER.missingMdbDeliveryGroup(mdbDescription.getDeliveryGroup());} @TO@ if (phaseContext.getServiceRegistry().getService(deliveryGroupServiceName) == null) {  throw EjbLogger.DEPLOYMENT_LOGGER.missingMdbDeliveryGroup(mdbDescription.getDeliveryGroup());} @AT@ 4756 @LENGTH@ 232
------UPD InfixExpression@@phaseContext.getServiceRegistry().getService(deliveyGroupServiceName) == null @TO@ phaseContext.getServiceRegistry().getService(deliveryGroupServiceName) == null @AT@ 4760 @LENGTH@ 77
---------UPD MethodInvocation@@phaseContext.getServiceRegistry().getService(deliveyGroupServiceName) @TO@ phaseContext.getServiceRegistry().getService(deliveryGroupServiceName) @AT@ 4760 @LENGTH@ 69
------------UPD SimpleName@@MethodName:getService:[deliveyGroupServiceName] @TO@ MethodName:getService:[deliveryGroupServiceName] @AT@ 4794 @LENGTH@ 35
---------------UPD SimpleName@@deliveyGroupServiceName @TO@ deliveryGroupServiceName @AT@ 4805 @LENGTH@ 23
---UPD ExpressionStatement@@MethodInvocation:builder.addDependency(deliveyGroupServiceName) @TO@ MethodInvocation:builder.addDependency(deliveryGroupServiceName) @AT@ 5013 @LENGTH@ 47
------UPD MethodInvocation@@builder.addDependency(deliveyGroupServiceName) @TO@ builder.addDependency(deliveryGroupServiceName) @AT@ 5013 @LENGTH@ 46
---------UPD SimpleName@@MethodName:addDependency:[deliveyGroupServiceName] @TO@ MethodName:addDependency:[deliveryGroupServiceName] @AT@ 5021 @LENGTH@ 38
------------UPD SimpleName@@deliveyGroupServiceName @TO@ deliveryGroupServiceName @AT@ 5035 @LENGTH@ 23


UPD IfStatement@@if (!getManagementStrategy().isManaged(mr,null)) {  log.trace("The route is not managed: {}",route);  continue;} @TO@ if (!getManagementStrategy().isManaged(mr)) {  log.trace("The route is not managed: {}",route);  continue;} @AT@ 28602 @LENGTH@ 157
---UPD PrefixExpression@@!getManagementStrategy().isManaged(mr,null) @TO@ !getManagementStrategy().isManaged(mr) @AT@ 28606 @LENGTH@ 44
------UPD MethodInvocation@@getManagementStrategy().isManaged(mr,null) @TO@ getManagementStrategy().isManaged(mr) @AT@ 28607 @LENGTH@ 43
---------UPD SimpleName@@MethodName:isManaged:[mr, null] @TO@ MethodName:isManaged:[mr] @AT@ 28631 @LENGTH@ 19
------------DEL NullLiteral@@null @AT@ 28645 @LENGTH@ 4


UPD FieldDeclaration@@static, final, SimpleAttributeDefinition, [CACHE_CONTAINER=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CACHE_CONTAINER,ModelType.STRING,true).setXmlName(EJB3SubsystemXMLAttribute.CACHE_CONTAINER.getLocalName()).setDefaultValue(new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_NONE).build()] @TO@ static, final, SimpleAttributeDefinition, [CACHE_CONTAINER=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CACHE_CONTAINER,ModelType.STRING,true).setXmlName(EJB3SubsystemXMLAttribute.CACHE_CONTAINER.getLocalName()).setDefaultValue(new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_NONE).build()] @AT@ 1871 @LENGTH@ 464
---UPD VariableDeclarationFragment@@CACHE_CONTAINER=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CACHE_CONTAINER,ModelType.STRING,true).setXmlName(EJB3SubsystemXMLAttribute.CACHE_CONTAINER.getLocalName()).setDefaultValue(new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @TO@ CACHE_CONTAINER=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CACHE_CONTAINER,ModelType.STRING,true).setXmlName(EJB3SubsystemXMLAttribute.CACHE_CONTAINER.getLocalName()).setDefaultValue(new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @AT@ 1910 @LENGTH@ 419
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CACHE_CONTAINER,ModelType.STRING,true).setXmlName(EJB3SubsystemXMLAttribute.CACHE_CONTAINER.getLocalName()).setDefaultValue(new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @TO@ new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.CACHE_CONTAINER,ModelType.STRING,true).setXmlName(EJB3SubsystemXMLAttribute.CACHE_CONTAINER.getLocalName()).setDefaultValue(new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @AT@ 1928 @LENGTH@ 401
---------UPD MethodInvocation@@MethodName:setDefaultValue:[new ModelNode(BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME)] @TO@ MethodName:setDefaultValue:[new ModelNode(BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME)] @AT@ 1928 @LENGTH@ 285
------------UPD ClassInstanceCreation@@ModelNode[BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME] @TO@ ModelNode[BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME] @AT@ 2136 @LENGTH@ 76
---------------UPD QualifiedName@@BeanManagerFactoryBuilderConfiguration.DEFAULT_CONTAINER_NAME @TO@ BeanManagerFactoryServiceConfiguratorConfiguration.DEFAULT_CONTAINER_NAME @AT@ 2150 @LENGTH@ 61
------------------UPD SimpleName@@BeanManagerFactoryBuilderConfiguration @TO@ BeanManagerFactoryServiceConfiguratorConfiguration @AT@ 2150 @LENGTH@ 38


UPD MethodDeclaration@@public, voidMethodName:PublisherCallbackChannelImpl, Channel delegate, ExecutorService executor,  @TO@ public, voidMethodName:PublisherCallbackChannelImpl, Channel delegate, @Nullable ExecutorService executor,  @AT@ 4418 @LENGTH@ 216
---UPD SingleVariableDeclaration@@ExecutorService executor @TO@ @Nullable ExecutorService executor @AT@ 4472 @LENGTH@ 24


DEL ExpressionStatement@@MethodInvocation:this.metaStore.start() @AT@ 3017 @LENGTH@ 23
---DEL MethodInvocation@@this.metaStore.start() @AT@ 3017 @LENGTH@ 22
------DEL FieldAccess@@this.metaStore @AT@ 3017 @LENGTH@ 14
---------DEL ThisExpression@@this @AT@ 3017 @LENGTH@ 4
---------DEL SimpleName@@metaStore @AT@ 3022 @LENGTH@ 9
------DEL SimpleName@@MethodName:start:[] @AT@ 3032 @LENGTH@ 7


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5256 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5276 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 5258 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5286 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5300 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 5307 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5307 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 5317 @LENGTH@ 1


INS MethodDeclaration@@public, H, MethodName:disable,  @TO@ TypeDeclaration@@[public, final]RequestCacheConfigurer, AbstractHttpConfigurer<RequestCacheConfigurer<H>,H> @AT@ 3602 @LENGTH@ 125
---INS Modifier@@public @TO@ MethodDeclaration@@public, H, MethodName:disable,  @AT@ 3602 @LENGTH@ 6
---INS SimpleType@@H @TO@ MethodDeclaration@@public, H, MethodName:disable,  @AT@ 3609 @LENGTH@ 1
---INS SimpleName@@MethodName:disable @TO@ MethodDeclaration@@public, H, MethodName:disable,  @AT@ 3611 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:getBuilder().setSharedObject(RequestCache.class,new NullRequestCache()) @TO@ MethodDeclaration@@public, H, MethodName:disable,  @AT@ 3625 @LENGTH@ 73
------INS MethodInvocation@@getBuilder().setSharedObject(RequestCache.class,new NullRequestCache()) @TO@ ExpressionStatement@@MethodInvocation:getBuilder().setSharedObject(RequestCache.class,new NullRequestCache()) @AT@ 3625 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:getBuilder:[] @TO@ MethodInvocation@@getBuilder().setSharedObject(RequestCache.class,new NullRequestCache()) @AT@ 3625 @LENGTH@ 12
---------INS SimpleName@@MethodName:setSharedObject:[RequestCache.class, new NullRequestCache()] @TO@ MethodInvocation@@getBuilder().setSharedObject(RequestCache.class,new NullRequestCache()) @AT@ 3638 @LENGTH@ 59
------------INS TypeLiteral@@RequestCache.class @TO@ SimpleName@@MethodName:setSharedObject:[RequestCache.class, new NullRequestCache()] @AT@ 3654 @LENGTH@ 18
------------INS ClassInstanceCreation@@NullRequestCache[] @TO@ SimpleName@@MethodName:setSharedObject:[RequestCache.class, new NullRequestCache()] @AT@ 3674 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@NullRequestCache[] @AT@ 3674 @LENGTH@ 3
---------------INS SimpleType@@NullRequestCache @TO@ ClassInstanceCreation@@NullRequestCache[] @AT@ 3678 @LENGTH@ 16
---INS ReturnStatement@@SuperMethodInvocation:super.disable() @TO@ MethodDeclaration@@public, H, MethodName:disable,  @AT@ 3701 @LENGTH@ 23
------INS SuperMethodInvocation@@super.disable() @TO@ ReturnStatement@@SuperMethodInvocation:super.disable() @AT@ 3708 @LENGTH@ 15
---------INS SimpleName@@MethodName:disable:[] @TO@ SuperMethodInvocation@@super.disable() @AT@ 3714 @LENGTH@ 7


UPD VariableDeclarationStatement@@String[] tokens=syntax.split("\\w+"); @TO@ String[] tokens=syntax.split("[\\w.]+"); @AT@ 41373 @LENGTH@ 39
---UPD VariableDeclarationFragment@@tokens=syntax.split("\\w+") @TO@ tokens=syntax.split("[\\w.]+") @AT@ 41382 @LENGTH@ 29
------UPD MethodInvocation@@syntax.split("\\w+") @TO@ syntax.split("[\\w.]+") @AT@ 41391 @LENGTH@ 20
---------UPD SimpleName@@MethodName:split:["\\w+"] @TO@ MethodName:split:["[\\w.]+"] @AT@ 41398 @LENGTH@ 13
------------UPD StringLiteral@@"\\w+" @TO@ "[\\w.]+" @AT@ 41404 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:Mono.justOrEmpty(authentication).filter(a -> a instanceof BearerTokenAuthenticationToken).cast(BearerTokenAuthenticationToken.class).map(BearerTokenAuthenticationToken::getToken).flatMap(this.jwtDecoder::decode).map(this.jwtConverter::convert).cast(Authentication.class).onErrorMap(JwtException.class,this::onError) @TO@ MethodInvocation:Mono.justOrEmpty(authentication).filter(a -> a instanceof BearerTokenAuthenticationToken).cast(BearerTokenAuthenticationToken.class).map(BearerTokenAuthenticationToken::getToken).flatMap(this.jwtDecoder::decode).map(this.jwtAuthenticationConverter::convert).cast(Authentication.class).onErrorMap(JwtException.class,this::onError) @AT@ 2039 @LENGTH@ 360
---UPD MethodInvocation@@Mono.justOrEmpty(authentication).filter(a -> a instanceof BearerTokenAuthenticationToken).cast(BearerTokenAuthenticationToken.class).map(BearerTokenAuthenticationToken::getToken).flatMap(this.jwtDecoder::decode).map(this.jwtConverter::convert).cast(Authentication.class).onErrorMap(JwtException.class,this::onError) @TO@ Mono.justOrEmpty(authentication).filter(a -> a instanceof BearerTokenAuthenticationToken).cast(BearerTokenAuthenticationToken.class).map(BearerTokenAuthenticationToken::getToken).flatMap(this.jwtDecoder::decode).map(this.jwtAuthenticationConverter::convert).cast(Authentication.class).onErrorMap(JwtException.class,this::onError) @AT@ 2046 @LENGTH@ 352
------UPD MethodInvocation@@MethodName:map:[this.jwtConverter::convert] @TO@ MethodName:map:[this.jwtAuthenticationConverter::convert] @AT@ 2046 @LENGTH@ 269


DEL ExpressionStatement@@MethodInvocation:assertEquals(1,coreHit.intValue()) @AT@ 3017 @LENGTH@ 36
---DEL MethodInvocation@@assertEquals(1,coreHit.intValue()) @AT@ 3017 @LENGTH@ 35
------DEL SimpleName@@MethodName:assertEquals:[1, coreHit.intValue()] @AT@ 3017 @LENGTH@ 35
---------DEL NumberLiteral@@1 @AT@ 3030 @LENGTH@ 1
---------DEL MethodInvocation@@coreHit.intValue() @AT@ 3033 @LENGTH@ 18
------------DEL SimpleName@@Name:coreHit @AT@ 3033 @LENGTH@ 7
------------DEL SimpleName@@MethodName:intValue:[] @AT@ 3041 @LENGTH@ 10


UPD FieldDeclaration@@private, static, final, int, [DELAY_LONG=100] @TO@ private, static, final, int, [DELAY_LONG=130] @AT@ 1227 @LENGTH@ 42
---UPD VariableDeclarationFragment@@DELAY_LONG=100 @TO@ DELAY_LONG=130 @AT@ 1252 @LENGTH@ 16
------UPD NumberLiteral@@100 @TO@ 130 @AT@ 1265 @LENGTH@ 3


UPD MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext context, ServiceRegistryException,  @TO@ public, void, MethodName:activate, ServiceActivatorContext context,  @AT@ 1722 @LENGTH@ 624
---DEL SimpleType@@ServiceRegistryException @AT@ 1783 @LENGTH@ 24
---DEL TryStatement@@try {  SingletonPolicy policy=(SingletonPolicy)context.getServiceRegistry().getRequiredService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).awaitValue();  policy.createSingletonServiceBuilder(SERVICE_NAME,new ValueService<>(new ImmediateValue<>(Boolean.TRUE)),new ValueService<>(new ImmediateValue<>(Boolean.FALSE))).build(context.getServiceTarget()).install();} catch (InterruptedException e) {  throw new ServiceRegistryException(e);} @AT@ 1818 @LENGTH@ 522
------DEL VariableDeclarationStatement@@SingletonPolicy policy=(SingletonPolicy)context.getServiceRegistry().getRequiredService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).awaitValue(); @AT@ 1836 @LENGTH@ 179
------DEL CatchClause@@catch (InterruptedException e) {  throw new ServiceRegistryException(e);} @AT@ 2247 @LENGTH@ 93
---------DEL SingleVariableDeclaration@@InterruptedException e @AT@ 2254 @LENGTH@ 22
------------DEL SimpleType@@InterruptedException @AT@ 2254 @LENGTH@ 20
------------DEL SimpleName@@e @AT@ 2275 @LENGTH@ 1
---------DEL ThrowStatement@@ClassInstanceCreation:new ServiceRegistryException(e) @AT@ 2292 @LENGTH@ 38
------------DEL ClassInstanceCreation@@ServiceRegistryException[e] @AT@ 2298 @LENGTH@ 31
---------------DEL SimpleType@@ServiceRegistryException @AT@ 2302 @LENGTH@ 24
---------------DEL SimpleName@@e @AT@ 2327 @LENGTH@ 1
---INS VariableDeclarationStatement@@ServiceTarget target=context.getServiceTarget(); @TO@ MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext context, ServiceRegistryException,  @AT@ 1864 @LENGTH@ 50
------MOV SimpleType@@SingletonPolicy @TO@ VariableDeclarationStatement@@ServiceTarget target=context.getServiceTarget(); @AT@ 1836 @LENGTH@ 15
------MOV VariableDeclarationFragment@@policy=(SingletonPolicy)context.getServiceRegistry().getRequiredService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).awaitValue() @TO@ VariableDeclarationStatement@@ServiceTarget target=context.getServiceTarget(); @AT@ 1852 @LENGTH@ 162
---------UPD SimpleName@@policy @TO@ target @AT@ 1852 @LENGTH@ 6
---------DEL CastExpression@@(SingletonPolicy)context.getServiceRegistry().getRequiredService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).awaitValue() @AT@ 1861 @LENGTH@ 153
------------DEL SimpleType@@SingletonPolicy @AT@ 1862 @LENGTH@ 15
---------INS MethodInvocation@@context.getServiceTarget() @TO@ VariableDeclarationFragment@@policy=(SingletonPolicy)context.getServiceRegistry().getRequiredService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).awaitValue() @AT@ 1887 @LENGTH@ 26
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceTarget() @AT@ 1887 @LENGTH@ 7
------------INS SimpleName@@MethodName:getServiceTarget:[] @TO@ MethodInvocation@@context.getServiceTarget() @AT@ 1895 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:System.out.println(SingletonDefaultRequirement.SINGLETON_POLICY.getName() + " state = " + context.getServiceRegistry().getService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).getState()) @TO@ MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext context, ServiceRegistryException,  @AT@ 1923 @LENGTH@ 217
------INS MethodInvocation@@System.out.println(SingletonDefaultRequirement.SINGLETON_POLICY.getName() + " state = " + context.getServiceRegistry().getService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).getState()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println(SingletonDefaultRequirement.SINGLETON_POLICY.getName() + " state = " + context.getServiceRegistry().getService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).getState()) @AT@ 1923 @LENGTH@ 216
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(SingletonDefaultRequirement.SINGLETON_POLICY.getName() + " state = " + context.getServiceRegistry().getService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).getState()) @AT@ 1923 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:[SingletonDefaultRequirement.SINGLETON_POLICY.getName() + " state = " + context.getServiceRegistry().getService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).getState()] @TO@ MethodInvocation@@System.out.println(SingletonDefaultRequirement.SINGLETON_POLICY.getName() + " state = " + context.getServiceRegistry().getService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).getState()) @AT@ 1934 @LENGTH@ 205
------------INS InfixExpression@@SingletonDefaultRequirement.SINGLETON_POLICY.getName() + " state = " + context.getServiceRegistry().getService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).getState() @TO@ SimpleName@@MethodName:println:[SingletonDefaultRequirement.SINGLETON_POLICY.getName() + " state = " + context.getServiceRegistry().getService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).getState()] @AT@ 1942 @LENGTH@ 196
---------------MOV MethodInvocation@@context.getServiceRegistry().getRequiredService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).awaitValue() @TO@ InfixExpression@@SingletonDefaultRequirement.SINGLETON_POLICY.getName() + " state = " + context.getServiceRegistry().getService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).getState() @AT@ 1879 @LENGTH@ 135
------------------UPD MethodInvocation@@MethodName:getRequiredService:[ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @TO@ MethodName:getService:[ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 1879 @LENGTH@ 122
------------------UPD SimpleName@@MethodName:awaitValue:[] @TO@ MethodName:getState:[] @AT@ 2002 @LENGTH@ 12
---------------INS MethodInvocation@@SingletonDefaultRequirement.SINGLETON_POLICY.getName() @TO@ InfixExpression@@SingletonDefaultRequirement.SINGLETON_POLICY.getName() + " state = " + context.getServiceRegistry().getService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).getState() @AT@ 1942 @LENGTH@ 54
------------------INS QualifiedName@@Name:SingletonDefaultRequirement.SINGLETON_POLICY @TO@ MethodInvocation@@SingletonDefaultRequirement.SINGLETON_POLICY.getName() @AT@ 1942 @LENGTH@ 44
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@SingletonDefaultRequirement.SINGLETON_POLICY.getName() @AT@ 1987 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@SingletonDefaultRequirement.SINGLETON_POLICY.getName() + " state = " + context.getServiceRegistry().getService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).getState() @AT@ 1996 @LENGTH@ 1
---------------INS StringLiteral@@" state = " @TO@ InfixExpression@@SingletonDefaultRequirement.SINGLETON_POLICY.getName() + " state = " + context.getServiceRegistry().getService(ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).getState() @AT@ 1999 @LENGTH@ 11
---MOV ExpressionStatement@@MethodInvocation:policy.createSingletonServiceBuilder(SERVICE_NAME,new ValueService<>(new ImmediateValue<>(Boolean.TRUE)),new ValueService<>(new ImmediateValue<>(Boolean.FALSE))).build(context.getServiceTarget()).install() @TO@ MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext context, ServiceRegistryException,  @AT@ 2028 @LENGTH@ 208
------UPD MethodInvocation@@policy.createSingletonServiceBuilder(SERVICE_NAME,new ValueService<>(new ImmediateValue<>(Boolean.TRUE)),new ValueService<>(new ImmediateValue<>(Boolean.FALSE))).build(context.getServiceTarget()).install() @TO@ policy.createSingletonServiceBuilder(SERVICE_NAME,new ValueService<>(new ImmediateValue<>(Boolean.TRUE)),new ValueService<>(new ImmediateValue<>(Boolean.FALSE))).build(target).install() @AT@ 2028 @LENGTH@ 207
---------UPD MethodInvocation@@MethodName:build:[context.getServiceTarget()] @TO@ MethodName:build:[target] @AT@ 2028 @LENGTH@ 197
------------DEL MethodInvocation@@context.getServiceTarget() @AT@ 2198 @LENGTH@ 26
---------------DEL SimpleName@@Name:context @AT@ 2198 @LENGTH@ 7
------------MOV SimpleName@@MethodName:getServiceTarget:[] @TO@ MethodInvocation@@MethodName:build:[context.getServiceTarget()] @AT@ 2206 @LENGTH@ 18
---INS VariableDeclarationStatement@@SingletonPolicy policy=new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get(); @TO@ MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext context, ServiceRegistryException,  @AT@ 2149 @LENGTH@ 211
------INS SimpleType@@SingletonPolicy @TO@ VariableDeclarationStatement@@SingletonPolicy policy=new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get(); @AT@ 2149 @LENGTH@ 15
------INS VariableDeclarationFragment@@policy=new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get() @TO@ VariableDeclarationStatement@@SingletonPolicy policy=new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get(); @AT@ 2165 @LENGTH@ 194
---------INS SimpleName@@policy @TO@ VariableDeclarationFragment@@policy=new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get() @AT@ 2165 @LENGTH@ 6
---------INS MethodInvocation@@new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get() @TO@ VariableDeclarationFragment@@policy=new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get() @AT@ 2174 @LENGTH@ 185
------------INS MethodInvocation@@MethodName:timeout:[Duration.ofSeconds(30)] @TO@ MethodInvocation@@new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get() @AT@ 2174 @LENGTH@ 179
---------------INS MethodInvocation@@Duration.ofSeconds(30) @TO@ MethodInvocation@@MethodName:timeout:[Duration.ofSeconds(30)] @AT@ 2330 @LENGTH@ 22
------------------INS SimpleName@@Name:Duration @TO@ MethodInvocation@@Duration.ofSeconds(30) @AT@ 2330 @LENGTH@ 8
------------------INS SimpleName@@MethodName:ofSeconds:[30] @TO@ MethodInvocation@@Duration.ofSeconds(30) @AT@ 2339 @LENGTH@ 13
---------------------INS NumberLiteral@@30 @TO@ SimpleName@@MethodName:ofSeconds:[30] @AT@ 2349 @LENGTH@ 2
------------INS ClassInstanceCreation@@ActiveServiceSupplier<SingletonPolicy>[context.getServiceRegistry(), ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @TO@ MethodInvocation@@new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get() @AT@ 2174 @LENGTH@ 147
---------------INS ParameterizedType@@ActiveServiceSupplier<SingletonPolicy> @TO@ ClassInstanceCreation@@ActiveServiceSupplier<SingletonPolicy>[context.getServiceRegistry(), ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 2178 @LENGTH@ 38
------------------INS SimpleType@@ActiveServiceSupplier @TO@ ParameterizedType@@ActiveServiceSupplier<SingletonPolicy> @AT@ 2178 @LENGTH@ 21
------------------INS SimpleType@@SingletonPolicy @TO@ ParameterizedType@@ActiveServiceSupplier<SingletonPolicy> @AT@ 2200 @LENGTH@ 15
---------------INS MethodInvocation@@context.getServiceRegistry() @TO@ ClassInstanceCreation@@ActiveServiceSupplier<SingletonPolicy>[context.getServiceRegistry(), ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 2217 @LENGTH@ 28
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry() @AT@ 2217 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getServiceRegistry:[] @TO@ MethodInvocation@@context.getServiceRegistry() @AT@ 2225 @LENGTH@ 20
---------------INS MethodInvocation@@ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName()) @TO@ ClassInstanceCreation@@ActiveServiceSupplier<SingletonPolicy>[context.getServiceRegistry(), ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 2247 @LENGTH@ 73
------------------INS SimpleName@@Name:ServiceName @TO@ MethodInvocation@@ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName()) @AT@ 2247 @LENGTH@ 11
------------------INS SimpleName@@MethodName:parse:[SingletonDefaultRequirement.SINGLETON_POLICY.getName()] @TO@ MethodInvocation@@ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName()) @AT@ 2259 @LENGTH@ 61
---------------------INS MethodInvocation@@SingletonDefaultRequirement.SINGLETON_POLICY.getName() @TO@ SimpleName@@MethodName:parse:[SingletonDefaultRequirement.SINGLETON_POLICY.getName()] @AT@ 2265 @LENGTH@ 54
------------------------INS QualifiedName@@Name:SingletonDefaultRequirement.SINGLETON_POLICY @TO@ MethodInvocation@@SingletonDefaultRequirement.SINGLETON_POLICY.getName() @AT@ 2265 @LENGTH@ 44
------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@SingletonDefaultRequirement.SINGLETON_POLICY.getName() @AT@ 2310 @LENGTH@ 9
---------------MOV New@@new @TO@ ClassInstanceCreation@@ActiveServiceSupplier<SingletonPolicy>[context.getServiceRegistry(), ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())] @AT@ 2298 @LENGTH@ 3
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@new ActiveServiceSupplier<SingletonPolicy>(context.getServiceRegistry(),ServiceName.parse(SingletonDefaultRequirement.SINGLETON_POLICY.getName())).timeout(Duration.ofSeconds(30)).get() @AT@ 2354 @LENGTH@ 5


UPD VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null)); @TO@ OAuth2Error oauth2Error; @AT@ 3522 @LENGTH@ 180
---UPD VariableDeclarationFragment@@oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null)) @TO@ oauth2Error @AT@ 3534 @LENGTH@ 167
------UPD ClassInstanceCreation@@OAuth2Error[errorObject.getCode(), errorObject.getDescription(), (errorObject.getURI() != null ? errorObject.getURI().toString() : null)] @TO@ OAuth2Error[errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR, errorObject.getDescription(), errorObject.getURI() != null ? errorObject.getURI().toString() : null] @AT@ 3548 @LENGTH@ 153


UPD TypeDeclaration@@[public]AuthProtocolResourceDefinition, ProtocolResourceDefinition<AUTH> @TO@ [public]AuthProtocolResourceDefinition, ProtocolResourceDefinition @AT@ 1733 @LENGTH@ 1912
---INS SimpleType@@ProtocolResourceDefinition @TO@ TypeDeclaration@@[public]AuthProtocolResourceDefinition, ProtocolResourceDefinition<AUTH> @AT@ 1697 @LENGTH@ 26
---DEL ParameterizedType@@ProtocolResourceDefinition<AUTH> @AT@ 1785 @LENGTH@ 32
------DEL SimpleType@@ProtocolResourceDefinition @AT@ 1785 @LENGTH@ 26
------DEL SimpleType@@AUTH @AT@ 1812 @LENGTH@ 4


INS MethodDeclaration@@public, voidMethodName:InMemoryReactiveClientRegistrationRepository, Map<String,ClientRegistration> registrations,  @TO@ TypeDeclaration@@[public, final]InMemoryReactiveClientRegistrationRepository, [ReactiveClientRegistrationRepository, Iterable<ClientRegistration>] @AT@ 2950 @LENGTH@ 221
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:InMemoryReactiveClientRegistrationRepository, Map<String,ClientRegistration> registrations,  @AT@ 2950 @LENGTH@ 6
---INS SimpleName@@MethodName:InMemoryReactiveClientRegistrationRepository @TO@ MethodDeclaration@@public, voidMethodName:InMemoryReactiveClientRegistrationRepository, Map<String,ClientRegistration> registrations,  @AT@ 2957 @LENGTH@ 44
---INS SingleVariableDeclaration@@Map<String,ClientRegistration> registrations @TO@ MethodDeclaration@@public, voidMethodName:InMemoryReactiveClientRegistrationRepository, Map<String,ClientRegistration> registrations,  @AT@ 3002 @LENGTH@ 45
------INS ParameterizedType@@Map<String,ClientRegistration> @TO@ SingleVariableDeclaration@@Map<String,ClientRegistration> registrations @AT@ 3002 @LENGTH@ 31
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,ClientRegistration> @AT@ 3002 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,ClientRegistration> @AT@ 3006 @LENGTH@ 6
---------INS SimpleType@@ClientRegistration @TO@ ParameterizedType@@Map<String,ClientRegistration> @AT@ 3014 @LENGTH@ 18
------INS SimpleName@@registrations @TO@ SingleVariableDeclaration@@Map<String,ClientRegistration> registrations @AT@ 3034 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(registrations,"registrations cannot be null") @TO@ MethodDeclaration@@public, voidMethodName:InMemoryReactiveClientRegistrationRepository, Map<String,ClientRegistration> registrations,  @AT@ 3053 @LENGTH@ 62
------INS MethodInvocation@@Assert.notNull(registrations,"registrations cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(registrations,"registrations cannot be null") @AT@ 3053 @LENGTH@ 61
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(registrations,"registrations cannot be null") @AT@ 3053 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[registrations, "registrations cannot be null"] @TO@ MethodInvocation@@Assert.notNull(registrations,"registrations cannot be null") @AT@ 3060 @LENGTH@ 54
------------INS SimpleName@@registrations @TO@ SimpleName@@MethodName:notNull:[registrations, "registrations cannot be null"] @AT@ 3068 @LENGTH@ 13
------------INS StringLiteral@@"registrations cannot be null" @TO@ SimpleName@@MethodName:notNull:[registrations, "registrations cannot be null"] @AT@ 3083 @LENGTH@ 30
---INS ExpressionStatement@@Assignment:this.clientIdToClientRegistration=registrations @TO@ MethodDeclaration@@public, voidMethodName:InMemoryReactiveClientRegistrationRepository, Map<String,ClientRegistration> registrations,  @AT@ 3118 @LENGTH@ 50
------INS Assignment@@this.clientIdToClientRegistration=registrations @TO@ ExpressionStatement@@Assignment:this.clientIdToClientRegistration=registrations @AT@ 3118 @LENGTH@ 49
---------INS FieldAccess@@this.clientIdToClientRegistration @TO@ Assignment@@this.clientIdToClientRegistration=registrations @AT@ 3118 @LENGTH@ 33
------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientIdToClientRegistration @AT@ 3118 @LENGTH@ 4
------------INS SimpleName@@clientIdToClientRegistration @TO@ FieldAccess@@this.clientIdToClientRegistration @AT@ 3123 @LENGTH@ 28
---------INS Operator@@= @TO@ Assignment@@this.clientIdToClientRegistration=registrations @AT@ 3151 @LENGTH@ 1
---------INS SimpleName@@registrations @TO@ Assignment@@this.clientIdToClientRegistration=registrations @AT@ 3154 @LENGTH@ 13


INS EnumDeclaration@@[@ReadingConverter]BsonTimestampToInstantConverter, [Converter<BsonTimestamp,Instant>] @TO@ TypeDeclaration@@[abstract]MongoConverters,  @AT@ 12906 @LENGTH@ 250
---INS MarkerAnnotation@@@ReadingConverter @TO@ EnumDeclaration@@[@ReadingConverter]BsonTimestampToInstantConverter, [Converter<BsonTimestamp,Instant>] @AT@ 12906 @LENGTH@ 17
---INS SimpleName@@BsonTimestampToInstantConverter @TO@ EnumDeclaration@@[@ReadingConverter]BsonTimestampToInstantConverter, [Converter<BsonTimestamp,Instant>] @AT@ 12930 @LENGTH@ 31
---INS ParameterizedType@@Converter<BsonTimestamp,Instant> @TO@ EnumDeclaration@@[@ReadingConverter]BsonTimestampToInstantConverter, [Converter<BsonTimestamp,Instant>] @AT@ 12973 @LENGTH@ 33
------INS SimpleType@@Converter @TO@ ParameterizedType@@Converter<BsonTimestamp,Instant> @AT@ 12973 @LENGTH@ 9
------INS SimpleType@@BsonTimestamp @TO@ ParameterizedType@@Converter<BsonTimestamp,Instant> @AT@ 12983 @LENGTH@ 13
------INS SimpleType@@Instant @TO@ ParameterizedType@@Converter<BsonTimestamp,Instant> @AT@ 12998 @LENGTH@ 7
---INS EnumConstantDeclaration@@INSTANCE @TO@ EnumDeclaration@@[@ReadingConverter]BsonTimestampToInstantConverter, [Converter<BsonTimestamp,Instant>] @AT@ 13012 @LENGTH@ 8
------INS SimpleName@@INSTANCE @TO@ EnumConstantDeclaration@@INSTANCE @AT@ 13012 @LENGTH@ 8
---INS MethodDeclaration@@public, Instant, MethodName:convert, BsonTimestamp source,  @TO@ EnumDeclaration@@[@ReadingConverter]BsonTimestampToInstantConverter, [Converter<BsonTimestamp,Instant>] @AT@ 13049 @LENGTH@ 104
------INS Modifier@@public @TO@ MethodDeclaration@@public, Instant, MethodName:convert, BsonTimestamp source,  @AT@ 13049 @LENGTH@ 6
------INS SimpleType@@Instant @TO@ MethodDeclaration@@public, Instant, MethodName:convert, BsonTimestamp source,  @AT@ 13056 @LENGTH@ 7
------INS SimpleName@@MethodName:convert @TO@ MethodDeclaration@@public, Instant, MethodName:convert, BsonTimestamp source,  @AT@ 13064 @LENGTH@ 7
------INS SingleVariableDeclaration@@BsonTimestamp source @TO@ MethodDeclaration@@public, Instant, MethodName:convert, BsonTimestamp source,  @AT@ 13072 @LENGTH@ 20
---------INS SimpleType@@BsonTimestamp @TO@ SingleVariableDeclaration@@BsonTimestamp source @AT@ 13072 @LENGTH@ 13
---------INS SimpleName@@source @TO@ SingleVariableDeclaration@@BsonTimestamp source @AT@ 13086 @LENGTH@ 6
------INS ReturnStatement@@MethodInvocation:Instant.ofEpochSecond(source.getTime(),0) @TO@ MethodDeclaration@@public, Instant, MethodName:convert, BsonTimestamp source,  @AT@ 13099 @LENGTH@ 50
---------INS MethodInvocation@@Instant.ofEpochSecond(source.getTime(),0) @TO@ ReturnStatement@@MethodInvocation:Instant.ofEpochSecond(source.getTime(),0) @AT@ 13106 @LENGTH@ 42
------------INS SimpleName@@Name:Instant @TO@ MethodInvocation@@Instant.ofEpochSecond(source.getTime(),0) @AT@ 13106 @LENGTH@ 7
------------INS SimpleName@@MethodName:ofEpochSecond:[source.getTime(), 0] @TO@ MethodInvocation@@Instant.ofEpochSecond(source.getTime(),0) @AT@ 13114 @LENGTH@ 34
---------------INS MethodInvocation@@source.getTime() @TO@ SimpleName@@MethodName:ofEpochSecond:[source.getTime(), 0] @AT@ 13128 @LENGTH@ 16
------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getTime() @AT@ 13128 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getTime:[] @TO@ MethodInvocation@@source.getTime() @AT@ 13135 @LENGTH@ 9
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:ofEpochSecond:[source.getTime(), 0] @AT@ 13146 @LENGTH@ 1


UPD MethodDeclaration@@public, BeanManagerFactoryBuilderFactory<I,TransactionBatch>, I, MethodName:getBeanManagerFactoryBuilder, CapabilityServiceSupport support, String name, BeanManagerFactoryBuilderConfiguration config,  @TO@ public, BeanManagerFactoryServiceConfiguratorFactory, MethodName:getBeanManagerFactoryBuilder, CapabilityServiceSupport support, String name, BeanManagerFactoryServiceConfiguratorConfiguration config,  @AT@ 1708 @LENGTH@ 283
---INS SimpleType@@BeanManagerFactoryServiceConfiguratorFactory @TO@ MethodDeclaration@@public, BeanManagerFactoryBuilderFactory<I,TransactionBatch>, I, MethodName:getBeanManagerFactoryBuilder, CapabilityServiceSupport support, String name, BeanManagerFactoryBuilderConfiguration config,  @AT@ 1695 @LENGTH@ 44
---DEL ParameterizedType@@BeanManagerFactoryBuilderFactory<I,TransactionBatch> @AT@ 1719 @LENGTH@ 53
------DEL SimpleType@@BeanManagerFactoryBuilderFactory @AT@ 1719 @LENGTH@ 32
------DEL SimpleType@@I @AT@ 1752 @LENGTH@ 1
------DEL SimpleType@@TransactionBatch @AT@ 1755 @LENGTH@ 16
---UPD SingleVariableDeclaration@@BeanManagerFactoryBuilderConfiguration config @TO@ BeanManagerFactoryServiceConfiguratorConfiguration config @AT@ 1849 @LENGTH@ 45
------UPD SimpleType@@BeanManagerFactoryBuilderConfiguration @TO@ BeanManagerFactoryServiceConfiguratorConfiguration @AT@ 1849 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:SecurityCommand.execute(ctx,req,SecurityCommand.DEFAULT_FAILURE_CONSUMER) @TO@ MethodInvocation:SecurityCommand.execute(ctx,req,SecurityCommand.DEFAULT_FAILURE_CONSUMER,false) @AT@ 15951 @LENGTH@ 76
---UPD MethodInvocation@@SecurityCommand.execute(ctx,req,SecurityCommand.DEFAULT_FAILURE_CONSUMER) @TO@ SecurityCommand.execute(ctx,req,SecurityCommand.DEFAULT_FAILURE_CONSUMER,false) @AT@ 15951 @LENGTH@ 75
------UPD SimpleName@@MethodName:execute:[ctx, req, SecurityCommand.DEFAULT_FAILURE_CONSUMER] @TO@ MethodName:execute:[ctx, req, SecurityCommand.DEFAULT_FAILURE_CONSUMER, false] @AT@ 15967 @LENGTH@ 59
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:execute:[ctx, req, SecurityCommand.DEFAULT_FAILURE_CONSUMER] @AT@ 16027 @LENGTH@ 5


INS FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @TO@ TypeDeclaration@@[public]StringTrim, StringUnaryUDFDirect @AT@ 1041 @LENGTH@ 54
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1041 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1049 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1056 @LENGTH@ 5
---INS ArrayType@@byte[] @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1062 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1062 @LENGTH@ 4
---INS VariableDeclarationFragment@@EMPTY_BYTES=new byte[0] @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_BYTES=new byte[0]] @AT@ 1069 @LENGTH@ 25
------INS SimpleName@@EMPTY_BYTES @TO@ VariableDeclarationFragment@@EMPTY_BYTES=new byte[0] @AT@ 1069 @LENGTH@ 11
------INS ArrayCreation@@new byte[0] @TO@ VariableDeclarationFragment@@EMPTY_BYTES=new byte[0] @AT@ 1083 @LENGTH@ 11
---------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[0] @AT@ 1087 @LENGTH@ 7
------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1087 @LENGTH@ 4
---------INS NumberLiteral@@0 @TO@ ArrayCreation@@new byte[0] @AT@ 1092 @LENGTH@ 1


UPD MethodDeclaration@@protected, boolean, MethodName:removeEldestEntry, Map.Entry eldest,  @TO@ protected, boolean, MethodName:removeEldestEntry, Entry<Principal,CacheEntry> eldest,  @AT@ 2666 @LENGTH@ 128
---UPD SingleVariableDeclaration@@Map.Entry eldest @TO@ Entry<Principal,CacheEntry> eldest @AT@ 2702 @LENGTH@ 16
------DEL SimpleType@@Map.Entry @AT@ 2702 @LENGTH@ 9
------INS ParameterizedType@@Entry<Principal,CacheEntry> @TO@ SingleVariableDeclaration@@Map.Entry eldest @AT@ 2730 @LENGTH@ 28
---------INS SimpleType@@Entry @TO@ ParameterizedType@@Entry<Principal,CacheEntry> @AT@ 2730 @LENGTH@ 5
---------INS SimpleType@@Principal @TO@ ParameterizedType@@Entry<Principal,CacheEntry> @AT@ 2736 @LENGTH@ 9
---------INS SimpleType@@CacheEntry @TO@ ParameterizedType@@Entry<Principal,CacheEntry> @AT@ 2747 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:DistributableHostSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,serverName,hostName)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new InMemorySingleSignOnManager())).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ MethodInvocation:DistributableHostSingleSignOnManagerServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,serverName,hostName)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new InMemorySingleSignOnManager())).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 3697 @LENGTH@ 383
---UPD MethodInvocation@@DistributableHostSingleSignOnManagerBuilderProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,serverName,hostName)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new InMemorySingleSignOnManager())).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ DistributableHostSingleSignOnManagerServiceConfiguratorProvider.INSTANCE.map(provider -> provider.getServiceConfigurator(managerServiceName,serverName,hostName)).orElse(new SimpleCapabilityServiceConfigurator<>(managerServiceName,new InMemorySingleSignOnManager())).configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 3697 @LENGTH@ 382
------UPD QualifiedName@@Name:DistributableHostSingleSignOnManagerBuilderProvider.INSTANCE @TO@ Name:DistributableHostSingleSignOnManagerServiceConfiguratorProvider.INSTANCE @AT@ 3697 @LENGTH@ 60


INS ExpressionStatement@@MethodInvocation:Arrays.sort(dirs) @TO@ MethodDeclaration@@public, InputSplit[], MethodName:getSplits, JobConf job, int splits, IOException,  @AT@ 15912 @LENGTH@ 18
---INS MethodInvocation@@Arrays.sort(dirs) @TO@ ExpressionStatement@@MethodInvocation:Arrays.sort(dirs) @AT@ 15912 @LENGTH@ 17
------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.sort(dirs) @AT@ 15912 @LENGTH@ 6
------INS SimpleName@@MethodName:sort:[dirs] @TO@ MethodInvocation@@Arrays.sort(dirs) @AT@ 15919 @LENGTH@ 10
---------INS SimpleName@@dirs @TO@ SimpleName@@MethodName:sort:[dirs] @AT@ 15924 @LENGTH@ 4


UPD IfStatement@@if (header == null || !header.toLowerCase().startsWith("basic ")) {  chain.doFilter(request,response);  return;} @TO@ if (!StringUtils.startsWithIgnoreCase(header,"basic ")) {  chain.doFilter(request,response);  return;} @AT@ 6933 @LENGTH@ 120
---DEL InfixExpression@@header == null || !header.toLowerCase().startsWith("basic ") @AT@ 6937 @LENGTH@ 60
------DEL InfixExpression@@header == null @AT@ 6937 @LENGTH@ 14
---------DEL SimpleName@@header @AT@ 6937 @LENGTH@ 6
---------DEL Operator@@== @AT@ 6943 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 6947 @LENGTH@ 4
------DEL Operator@@|| @AT@ 6951 @LENGTH@ 2
------DEL PrefixExpression@@!header.toLowerCase().startsWith("basic ") @AT@ 6955 @LENGTH@ 42
---INS PrefixExpression@@!StringUtils.startsWithIgnoreCase(header,"basic ") @TO@ IfStatement@@if (header == null || !header.toLowerCase().startsWith("basic ")) {  chain.doFilter(request,response);  return;} @AT@ 6982 @LENGTH@ 51
------MOV Operator@@! @TO@ PrefixExpression@@!StringUtils.startsWithIgnoreCase(header,"basic ") @AT@ 6955 @LENGTH@ 1
------MOV MethodInvocation@@header.toLowerCase().startsWith("basic ") @TO@ PrefixExpression@@!StringUtils.startsWithIgnoreCase(header,"basic ") @AT@ 6956 @LENGTH@ 41
---------DEL MethodInvocation@@MethodName:toLowerCase:[] @AT@ 6956 @LENGTH@ 20
---------UPD SimpleName@@Name:header @TO@ Name:StringUtils @AT@ 6956 @LENGTH@ 6
---------UPD SimpleName@@MethodName:startsWith:["basic "] @TO@ MethodName:startsWithIgnoreCase:[header, "basic "] @AT@ 6977 @LENGTH@ 20
------------INS SimpleName@@header @TO@ SimpleName@@MethodName:startsWith:["basic "] @AT@ 7016 @LENGTH@ 6


UPD MethodDeclaration@@private, static, final, Class<?>, MethodName:loadHibernateProxyType,  @TO@ private, static, Class<?>, MethodName:loadHibernateProxyType,  @AT@ 1478 @LENGTH@ 244
---DEL Modifier@@final @AT@ 1493 @LENGTH@ 5


DEL MethodDeclaration@@private, void, MethodName:initSessionCreationPolicy, H http,  @AT@ 9211 @LENGTH@ 209
---DEL Modifier@@private @AT@ 9211 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 9219 @LENGTH@ 4
---DEL SimpleName@@MethodName:initSessionCreationPolicy @AT@ 9224 @LENGTH@ 25
---DEL SingleVariableDeclaration@@H http @AT@ 9250 @LENGTH@ 6
------DEL SimpleType@@H @AT@ 9250 @LENGTH@ 1
------DEL SimpleName@@http @AT@ 9252 @LENGTH@ 4
---DEL IfStatement@@if (http.getSharedObject(SessionCreationPolicy.class) == null) {  http.setSharedObject(SessionCreationPolicy.class,SessionCreationPolicy.STATELESS);} @AT@ 9262 @LENGTH@ 155
------DEL InfixExpression@@http.getSharedObject(SessionCreationPolicy.class) == null @AT@ 9266 @LENGTH@ 57
---------DEL MethodInvocation@@http.getSharedObject(SessionCreationPolicy.class) @AT@ 9266 @LENGTH@ 49
------------DEL SimpleName@@Name:http @AT@ 9266 @LENGTH@ 4
------------DEL SimpleName@@MethodName:getSharedObject:[SessionCreationPolicy.class] @AT@ 9271 @LENGTH@ 44
---------------DEL TypeLiteral@@SessionCreationPolicy.class @AT@ 9287 @LENGTH@ 27
---------DEL Operator@@== @AT@ 9315 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 9319 @LENGTH@ 4
------DEL Block@@ThenBody:{  http.setSharedObject(SessionCreationPolicy.class,SessionCreationPolicy.STATELESS);} @AT@ 9325 @LENGTH@ 92
---------DEL ExpressionStatement@@MethodInvocation:http.setSharedObject(SessionCreationPolicy.class,SessionCreationPolicy.STATELESS) @AT@ 9330 @LENGTH@ 83
------------DEL MethodInvocation@@http.setSharedObject(SessionCreationPolicy.class,SessionCreationPolicy.STATELESS) @AT@ 9330 @LENGTH@ 82
---------------DEL SimpleName@@Name:http @AT@ 9330 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:setSharedObject:[SessionCreationPolicy.class, SessionCreationPolicy.STATELESS] @AT@ 9335 @LENGTH@ 77
------------------DEL TypeLiteral@@SessionCreationPolicy.class @AT@ 9351 @LENGTH@ 27
------------------DEL QualifiedName@@SessionCreationPolicy.STATELESS @AT@ 9380 @LENGTH@ 31
---------------------DEL SimpleName@@SessionCreationPolicy @AT@ 9380 @LENGTH@ 21
---------------------DEL SimpleName@@STATELESS @AT@ 9402 @LENGTH@ 9


UPD TryStatement@@try {  if (timeoutMillis < 0) {    delivery=future.get();  } else {    delivery=future.get(timeoutMillis,TimeUnit.MILLISECONDS);  }} catch (ExecutionException e) {  Throwable cause=e.getCause();  this.logger.error("Consumer failed to receive message: " + consumer,cause);  exception=RabbitExceptionTranslator.convertRabbitAccessException(cause);  throw exception;}catch (InterruptedException e) {  Thread.currentThread().interrupt();}catch (TimeoutException e) {} finally {  if ((exception == null || !(exception instanceof ConsumerCancelledException)) && channel.isOpen()) {    cancelConsumerQuietly(channel,consumer);  }  channel.removeShutdownListener(shutdownListener);} @TO@ try {  if (timeoutMillis < 0) {    delivery=future.get();  } else {    delivery=future.get(timeoutMillis,TimeUnit.MILLISECONDS);  }} catch (ExecutionException e) {  Throwable cause=e.getCause();  this.logger.error("Consumer failed to receive message: " + consumer,cause);  exception=RabbitExceptionTranslator.convertRabbitAccessException(cause);  throw exception;}catch (InterruptedException e) {  Thread.currentThread().interrupt();}catch (TimeoutException e) {} finally {  if ((exception == null || !(exception instanceof ConsumerCancelledException)) && channel.isOpen()) {    cancelConsumerQuietly(channel,consumer);  }  try {    channel.removeShutdownListener(shutdownListener);  } catch (  Exception e) {  }} @AT@ 46520 @LENGTH@ 767
---UPD Block@@FinallyBody:{  if ((exception == null || !(exception instanceof ConsumerCancelledException)) && channel.isOpen()) {    cancelConsumerQuietly(channel,consumer);  }  channel.removeShutdownListener(shutdownListener);} @TO@ FinallyBody:{  if ((exception == null || !(exception instanceof ConsumerCancelledException)) && channel.isOpen()) {    cancelConsumerQuietly(channel,consumer);  }  try {    channel.removeShutdownListener(shutdownListener);  } catch (  Exception e) {  }} @AT@ 47069 @LENGTH@ 218
------INS TryStatement@@try {  channel.removeShutdownListener(shutdownListener);} catch (Exception e) {} @TO@ Block@@FinallyBody:{  if ((exception == null || !(exception instanceof ConsumerCancelledException)) && channel.isOpen()) {    cancelConsumerQuietly(channel,consumer);  }  channel.removeShutdownListener(shutdownListener);} @AT@ 47234 @LENGTH@ 138
---------MOV ExpressionStatement@@MethodInvocation:channel.removeShutdownListener(shutdownListener) @TO@ TryStatement@@try {  channel.removeShutdownListener(shutdownListener);} catch (Exception e) {} @AT@ 47234 @LENGTH@ 49
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  channel.removeShutdownListener(shutdownListener);} catch (Exception e) {} @AT@ 47302 @LENGTH@ 70
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 47309 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 47309 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 47319 @LENGTH@ 1


UPD FieldDeclaration@@private, static, final, String, [BLOCK_WHEN_FULL_URI="seda:blockingFoo" + String.format(SIZE_PARAM,QUEUE_SIZE) + "&blockWhenFull=true&timeout=0&offerTimeout=200"] @TO@ private, static, final, String, [BLOCK_WHEN_FULL_URI="seda:blockingBar" + String.format(SIZE_PARAM,QUEUE_SIZE) + "&blockWhenFull=true&timeout=0&offerTimeout=200"] @AT@ 1565 @LENGTH@ 160
---UPD VariableDeclarationFragment@@BLOCK_WHEN_FULL_URI="seda:blockingFoo" + String.format(SIZE_PARAM,QUEUE_SIZE) + "&blockWhenFull=true&timeout=0&offerTimeout=200" @TO@ BLOCK_WHEN_FULL_URI="seda:blockingBar" + String.format(SIZE_PARAM,QUEUE_SIZE) + "&blockWhenFull=true&timeout=0&offerTimeout=200" @AT@ 1593 @LENGTH@ 131
------UPD InfixExpression@@"seda:blockingFoo" + String.format(SIZE_PARAM,QUEUE_SIZE) + "&blockWhenFull=true&timeout=0&offerTimeout=200" @TO@ "seda:blockingBar" + String.format(SIZE_PARAM,QUEUE_SIZE) + "&blockWhenFull=true&timeout=0&offerTimeout=200" @AT@ 1615 @LENGTH@ 109
---------UPD StringLiteral@@"seda:blockingFoo" @TO@ "seda:blockingBar" @AT@ 1615 @LENGTH@ 18


UPD FieldDeclaration@@private, AtomicBoolean, [getBusHasBeenCalled=new AtomicBoolean(false)] @TO@ private, final, AtomicBoolean, [getBusHasBeenCalled=new AtomicBoolean(false)] @AT@ 5654 @LENGTH@ 69
---INS Modifier@@final @TO@ FieldDeclaration@@private, AtomicBoolean, [getBusHasBeenCalled=new AtomicBoolean(false)] @AT@ 5704 @LENGTH@ 5


UPD Block@@ThenBody:{  TokenErrorResponse tokenErrorResponse=(TokenErrorResponse)tokenResponse;  ErrorObject errorObject=tokenErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ ThenBody:{  TokenErrorResponse tokenErrorResponse=(TokenErrorResponse)tokenResponse;  ErrorObject errorObject=tokenErrorResponse.getErrorObject();  OAuth2Error oauth2Error;  if (errorObject == null) {    oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);  } else {    oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);  }  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 5591 @LENGTH@ 407
---UPD VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null)); @TO@ OAuth2Error oauth2Error; @AT@ 5741 @LENGTH@ 172
------UPD VariableDeclarationFragment@@oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null)) @TO@ oauth2Error @AT@ 5753 @LENGTH@ 159
---------UPD ClassInstanceCreation@@OAuth2Error[errorObject.getCode(), errorObject.getDescription(), (errorObject.getURI() != null ? errorObject.getURI().toString() : null)] @TO@ OAuth2Error[errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR, errorObject.getDescription(), errorObject.getURI() != null ? errorObject.getURI().toString() : null] @AT@ 5767 @LENGTH@ 145
---INS IfStatement@@if (errorObject == null) {  oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);} else {  oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);} @TO@ Block@@ThenBody:{  TokenErrorResponse tokenErrorResponse=(TokenErrorResponse)tokenResponse;  ErrorObject errorObject=tokenErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 5835 @LENGTH@ 351
------INS InfixExpression@@errorObject == null @TO@ IfStatement@@if (errorObject == null) {  oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);} else {  oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);} @AT@ 5839 @LENGTH@ 19
---------INS SimpleName@@errorObject @TO@ InfixExpression@@errorObject == null @AT@ 5839 @LENGTH@ 11
---------INS Operator@@== @TO@ InfixExpression@@errorObject == null @AT@ 5850 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@errorObject == null @AT@ 5854 @LENGTH@ 4
------INS Block@@ThenBody:{  oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);} @TO@ IfStatement@@if (errorObject == null) {  oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);} else {  oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);} @AT@ 5860 @LENGTH@ 72
---------INS ExpressionStatement@@Assignment:oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR) @TO@ Block@@ThenBody:{  oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);} @AT@ 5866 @LENGTH@ 61
------------INS Assignment@@oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR) @TO@ ExpressionStatement@@Assignment:oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR) @AT@ 5866 @LENGTH@ 60
---------------INS SimpleName@@oauth2Error @TO@ Assignment@@oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR) @AT@ 5866 @LENGTH@ 11
---------------INS Operator@@= @TO@ Assignment@@oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR) @AT@ 5877 @LENGTH@ 1
---------------INS ClassInstanceCreation@@OAuth2Error[OAuth2ErrorCodes.SERVER_ERROR] @TO@ Assignment@@oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR) @AT@ 5880 @LENGTH@ 46
------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Error[OAuth2ErrorCodes.SERVER_ERROR] @AT@ 5880 @LENGTH@ 3
------------------INS SimpleType@@OAuth2Error @TO@ ClassInstanceCreation@@OAuth2Error[OAuth2ErrorCodes.SERVER_ERROR] @AT@ 5884 @LENGTH@ 11
------------------INS QualifiedName@@OAuth2ErrorCodes.SERVER_ERROR @TO@ ClassInstanceCreation@@OAuth2Error[OAuth2ErrorCodes.SERVER_ERROR] @AT@ 5896 @LENGTH@ 29
---------------------INS SimpleName@@OAuth2ErrorCodes @TO@ QualifiedName@@OAuth2ErrorCodes.SERVER_ERROR @AT@ 5896 @LENGTH@ 16
---------------------INS SimpleName@@SERVER_ERROR @TO@ QualifiedName@@OAuth2ErrorCodes.SERVER_ERROR @AT@ 5913 @LENGTH@ 12
------INS Block@@ElseBody:{  oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);} @TO@ IfStatement@@if (errorObject == null) {  oauth2Error=new OAuth2Error(OAuth2ErrorCodes.SERVER_ERROR);} else {  oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);} @AT@ 5938 @LENGTH@ 248
---------INS ExpressionStatement@@Assignment:oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null) @TO@ Block@@ElseBody:{  oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null);} @AT@ 5944 @LENGTH@ 237
------------INS Assignment@@oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null) @TO@ ExpressionStatement@@Assignment:oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null) @AT@ 5944 @LENGTH@ 236
---------------MOV ClassInstanceCreation@@OAuth2Error[errorObject.getCode(), errorObject.getDescription(), (errorObject.getURI() != null ? errorObject.getURI().toString() : null)] @TO@ Assignment@@oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null) @AT@ 5767 @LENGTH@ 145
------------------DEL MethodInvocation@@errorObject.getCode() @AT@ 5783 @LENGTH@ 21
------------------DEL ParenthesizedExpression@@(errorObject.getURI() != null ? errorObject.getURI().toString() : null) @AT@ 5840 @LENGTH@ 71
------------------MOV ConditionalExpression@@errorObject.getURI() != null ? errorObject.getURI().toString() : null @TO@ ClassInstanceCreation@@OAuth2Error[errorObject.getCode(), errorObject.getDescription(), (errorObject.getURI() != null ? errorObject.getURI().toString() : null)] @AT@ 5841 @LENGTH@ 69
------------------INS ConditionalExpression@@errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR @TO@ ClassInstanceCreation@@OAuth2Error[errorObject.getCode(), errorObject.getDescription(), (errorObject.getURI() != null ? errorObject.getURI().toString() : null)] @AT@ 5981 @LENGTH@ 85
---------------------INS InfixExpression@@errorObject.getCode() != null @TO@ ConditionalExpression@@errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR @AT@ 5981 @LENGTH@ 29
------------------------INS MethodInvocation@@errorObject.getCode() @TO@ InfixExpression@@errorObject.getCode() != null @AT@ 5981 @LENGTH@ 21
---------------------------MOV SimpleName@@Name:errorObject @TO@ MethodInvocation@@errorObject.getCode() @AT@ 5783 @LENGTH@ 11
---------------------------MOV SimpleName@@Name:errorObject @TO@ MethodInvocation@@errorObject.getCode() @AT@ 5783 @LENGTH@ 11
---------------------------MOV SimpleName@@MethodName:getCode:[] @TO@ MethodInvocation@@errorObject.getCode() @AT@ 5795 @LENGTH@ 9
---------------------------MOV SimpleName@@MethodName:getCode:[] @TO@ MethodInvocation@@errorObject.getCode() @AT@ 5795 @LENGTH@ 9
------------------------INS Operator@@!= @TO@ InfixExpression@@errorObject.getCode() != null @AT@ 6002 @LENGTH@ 2
------------------------INS NullLiteral@@null @TO@ InfixExpression@@errorObject.getCode() != null @AT@ 6006 @LENGTH@ 4
---------------------INS MethodInvocation@@errorObject.getCode() @TO@ ConditionalExpression@@errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR @AT@ 6013 @LENGTH@ 21
------------------------INS SimpleName@@Name:errorObject @TO@ MethodInvocation@@errorObject.getCode() @AT@ 6013 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:getCode:[] @TO@ MethodInvocation@@errorObject.getCode() @AT@ 6025 @LENGTH@ 9
---------------------INS QualifiedName@@OAuth2ErrorCodes.SERVER_ERROR @TO@ ConditionalExpression@@errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR @AT@ 6037 @LENGTH@ 29
------------------------INS SimpleName@@OAuth2ErrorCodes @TO@ QualifiedName@@OAuth2ErrorCodes.SERVER_ERROR @AT@ 6037 @LENGTH@ 16
------------------------INS SimpleName@@SERVER_ERROR @TO@ QualifiedName@@OAuth2ErrorCodes.SERVER_ERROR @AT@ 6054 @LENGTH@ 12
---------------INS SimpleName@@oauth2Error @TO@ Assignment@@oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null) @AT@ 5944 @LENGTH@ 11
---------------INS Operator@@= @TO@ Assignment@@oauth2Error=new OAuth2Error(errorObject.getCode() != null ? errorObject.getCode() : OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI() != null ? errorObject.getURI().toString() : null) @AT@ 5955 @LENGTH@ 1


INS MethodDeclaration@@public, static, AttributeDefinition, MethodName:createNillableAttribute, String name, ModelType type,  @TO@ TypeDeclaration@@[public]TestUtils,  @AT@ 1966 @LENGTH@ 153
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createNillableAttribute, String name, ModelType type,  @AT@ 1966 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createNillableAttribute, String name, ModelType type,  @AT@ 1973 @LENGTH@ 6
---INS SimpleType@@AttributeDefinition @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createNillableAttribute, String name, ModelType type,  @AT@ 1980 @LENGTH@ 19
---INS SimpleName@@MethodName:createNillableAttribute @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createNillableAttribute, String name, ModelType type,  @AT@ 2000 @LENGTH@ 23
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createNillableAttribute, String name, ModelType type,  @AT@ 2024 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 2024 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 2031 @LENGTH@ 4
---INS SingleVariableDeclaration@@ModelType type @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createNillableAttribute, String name, ModelType type,  @AT@ 2037 @LENGTH@ 14
------INS SimpleType@@ModelType @TO@ SingleVariableDeclaration@@ModelType type @AT@ 2037 @LENGTH@ 9
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@ModelType type @AT@ 2047 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:createNillableAttribute(name,type,false) @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createNillableAttribute, String name, ModelType type,  @AT@ 2063 @LENGTH@ 50
------INS MethodInvocation@@createNillableAttribute(name,type,false) @TO@ ReturnStatement@@MethodInvocation:createNillableAttribute(name,type,false) @AT@ 2070 @LENGTH@ 42
---------INS SimpleName@@MethodName:createNillableAttribute:[name, type, false] @TO@ MethodInvocation@@createNillableAttribute(name,type,false) @AT@ 2070 @LENGTH@ 42
------------INS SimpleName@@name @TO@ SimpleName@@MethodName:createNillableAttribute:[name, type, false] @AT@ 2094 @LENGTH@ 4
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:createNillableAttribute:[name, type, false] @AT@ 2100 @LENGTH@ 4
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:createNillableAttribute:[name, type, false] @AT@ 2106 @LENGTH@ 5


DEL MethodDeclaration@@long, MethodName:getBaseHitCounter,  @AT@ 1575 @LENGTH@ 20
---DEL PrimitiveType@@long @AT@ 1570 @LENGTH@ 4
---DEL SimpleName@@MethodName:getBaseHitCounter @AT@ 1575 @LENGTH@ 17


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3799 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3819 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 3829 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3829 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3871 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 3878 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3878 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3888 @LENGTH@ 1


INS MethodDeclaration@@public, HibernatePagingItemReaderBuilder<T>, MethodName:useSatelessSession, boolean useStatelessSession,  @TO@ TypeDeclaration@@[public]HibernatePagingItemReaderBuilder,  @AT@ 7068 @LENGTH@ 146
---INS Modifier@@public @TO@ MethodDeclaration@@public, HibernatePagingItemReaderBuilder<T>, MethodName:useSatelessSession, boolean useStatelessSession,  @AT@ 7068 @LENGTH@ 6
---INS ParameterizedType@@HibernatePagingItemReaderBuilder<T> @TO@ MethodDeclaration@@public, HibernatePagingItemReaderBuilder<T>, MethodName:useSatelessSession, boolean useStatelessSession,  @AT@ 7075 @LENGTH@ 35
------INS SimpleType@@HibernatePagingItemReaderBuilder @TO@ ParameterizedType@@HibernatePagingItemReaderBuilder<T> @AT@ 7075 @LENGTH@ 32
------INS SimpleType@@T @TO@ ParameterizedType@@HibernatePagingItemReaderBuilder<T> @AT@ 7108 @LENGTH@ 1
---INS SimpleName@@MethodName:useSatelessSession @TO@ MethodDeclaration@@public, HibernatePagingItemReaderBuilder<T>, MethodName:useSatelessSession, boolean useStatelessSession,  @AT@ 7111 @LENGTH@ 18
---INS SingleVariableDeclaration@@boolean useStatelessSession @TO@ MethodDeclaration@@public, HibernatePagingItemReaderBuilder<T>, MethodName:useSatelessSession, boolean useStatelessSession,  @AT@ 7130 @LENGTH@ 27
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean useStatelessSession @AT@ 7130 @LENGTH@ 7
------INS SimpleName@@useStatelessSession @TO@ SingleVariableDeclaration@@boolean useStatelessSession @AT@ 7138 @LENGTH@ 19
---INS ReturnStatement@@MethodInvocation:useStatelessSession(useStatelessSession) @TO@ MethodDeclaration@@public, HibernatePagingItemReaderBuilder<T>, MethodName:useSatelessSession, boolean useStatelessSession,  @AT@ 7163 @LENGTH@ 48
------INS MethodInvocation@@useStatelessSession(useStatelessSession) @TO@ ReturnStatement@@MethodInvocation:useStatelessSession(useStatelessSession) @AT@ 7170 @LENGTH@ 40
---------INS SimpleName@@MethodName:useStatelessSession:[useStatelessSession] @TO@ MethodInvocation@@useStatelessSession(useStatelessSession) @AT@ 7170 @LENGTH@ 40
------------INS SimpleName@@useStatelessSession @TO@ SimpleName@@MethodName:useStatelessSession:[useStatelessSession] @AT@ 7190 @LENGTH@ 19


UPD IfStatement@@if (value == null) {  value=defaultValue;} @TO@ if (value != null) {  return CamelContextHelper.mandatoryConvertTo(getCamelContext(),type,value);} else {  value=defaultValue;} @AT@ 14627 @LENGTH@ 64
---UPD InfixExpression@@value == null @TO@ value != null @AT@ 14631 @LENGTH@ 13
------UPD Operator@@== @TO@ != @AT@ 14636 @LENGTH@ 2
---INS Block@@ThenBody:{  return CamelContextHelper.mandatoryConvertTo(getCamelContext(),type,value);} @TO@ IfStatement@@if (value == null) {  value=defaultValue;} @AT@ 14646 @LENGTH@ 151
------INS ReturnStatement@@MethodInvocation:CamelContextHelper.mandatoryConvertTo(getCamelContext(),type,value) @TO@ Block@@ThenBody:{  return CamelContextHelper.mandatoryConvertTo(getCamelContext(),type,value);} @AT@ 14710 @LENGTH@ 77
---------INS MethodInvocation@@CamelContextHelper.mandatoryConvertTo(getCamelContext(),type,value) @TO@ ReturnStatement@@MethodInvocation:CamelContextHelper.mandatoryConvertTo(getCamelContext(),type,value) @AT@ 14717 @LENGTH@ 69
------------INS SimpleName@@Name:CamelContextHelper @TO@ MethodInvocation@@CamelContextHelper.mandatoryConvertTo(getCamelContext(),type,value) @AT@ 14717 @LENGTH@ 18
------------INS SimpleName@@MethodName:mandatoryConvertTo:[getCamelContext(), type, value] @TO@ MethodInvocation@@CamelContextHelper.mandatoryConvertTo(getCamelContext(),type,value) @AT@ 14736 @LENGTH@ 50
---------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:mandatoryConvertTo:[getCamelContext(), type, value] @AT@ 14755 @LENGTH@ 17
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:mandatoryConvertTo:[getCamelContext(), type, value] @AT@ 14774 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:mandatoryConvertTo:[getCamelContext(), type, value] @AT@ 14780 @LENGTH@ 5
---UPD Block@@ThenBody:{  value=defaultValue;} @TO@ ElseBody:{  value=defaultValue;} @AT@ 14646 @LENGTH@ 45


UPD EnhancedForStatement@@for (String consumerTag : consumerTags) {  try {    channel.basicCancel(consumerTag);  } catch (  IOException e) {    if (logger.isDebugEnabled()) {      logger.debug("Error performing 'basicCancel'",e);    }  }catch (  AlreadyClosedException e) {    if (logger.isTraceEnabled()) {      logger.trace(channel + " is already closed");    }  }} @TO@ for (String consumerTag : consumerTags) {  cancel(channel,consumerTag);} @AT@ 3864 @LENGTH@ 375
---INS ExpressionStatement@@MethodInvocation:cancel(channel,consumerTag) @TO@ EnhancedForStatement@@for (String consumerTag : consumerTags) {  try {    channel.basicCancel(consumerTag);  } catch (  IOException e) {    if (logger.isDebugEnabled()) {      logger.debug("Error performing 'basicCancel'",e);    }  }catch (  AlreadyClosedException e) {    if (logger.isTraceEnabled()) {      logger.trace(channel + " is already closed");    }  }} @AT@ 3910 @LENGTH@ 29
------INS MethodInvocation@@cancel(channel,consumerTag) @TO@ ExpressionStatement@@MethodInvocation:cancel(channel,consumerTag) @AT@ 3910 @LENGTH@ 28
---------INS SimpleName@@MethodName:cancel:[channel, consumerTag] @TO@ MethodInvocation@@cancel(channel,consumerTag) @AT@ 3910 @LENGTH@ 28
------------INS SimpleName@@channel @TO@ SimpleName@@MethodName:cancel:[channel, consumerTag] @AT@ 3917 @LENGTH@ 7
------------INS SimpleName@@consumerTag @TO@ SimpleName@@MethodName:cancel:[channel, consumerTag] @AT@ 3926 @LENGTH@ 11


UPD VariableDeclarationStatement@@Long testOffset=4875454l; @TO@ Long testOffset=4875454L; @AT@ 3949 @LENGTH@ 27
---UPD VariableDeclarationFragment@@testOffset=4875454l @TO@ testOffset=4875454L @AT@ 3954 @LENGTH@ 21
------UPD NumberLiteral@@4875454l @TO@ 4875454L @AT@ 3967 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.decoder.decode(this.messageReadToken).block()).isInstanceOf(JwtException.class) @TO@ MethodInvocation:assertThatCode(() -> this.decoder.decode(this.messageReadToken).block()).isInstanceOf(IllegalStateException.class) @AT@ 5910 @LENGTH@ 111
---UPD MethodInvocation@@assertThatCode(() -> this.decoder.decode(this.messageReadToken).block()).isInstanceOf(JwtException.class) @TO@ assertThatCode(() -> this.decoder.decode(this.messageReadToken).block()).isInstanceOf(IllegalStateException.class) @AT@ 5910 @LENGTH@ 110
------UPD SimpleName@@MethodName:isInstanceOf:[JwtException.class] @TO@ MethodName:isInstanceOf:[IllegalStateException.class] @AT@ 5988 @LENGTH@ 32
---------UPD TypeLiteral@@JwtException.class @TO@ IllegalStateException.class @AT@ 6001 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:load(BeanManagerFactoryBuilderFactoryProvider.class) @TO@ MethodInvocation:load(BeanManagerFactoryServiceConfiguratorFactoryProvider.class) @AT@ 1985 @LENGTH@ 53
---UPD MethodInvocation@@load(BeanManagerFactoryBuilderFactoryProvider.class) @TO@ load(BeanManagerFactoryServiceConfiguratorFactoryProvider.class) @AT@ 1985 @LENGTH@ 52
------UPD SimpleName@@MethodName:load:[BeanManagerFactoryBuilderFactoryProvider.class] @TO@ MethodName:load:[BeanManagerFactoryServiceConfiguratorFactoryProvider.class] @AT@ 1985 @LENGTH@ 52
---------UPD TypeLiteral@@BeanManagerFactoryBuilderFactoryProvider.class @TO@ BeanManagerFactoryServiceConfiguratorFactoryProvider.class @AT@ 1990 @LENGTH@ 46


UPD EnhancedForStatement@@for (MarshalledEntry entry : marshalledEntries) {  batch.put(this.marshall(entry.getKey()),this.marshall(entry));} @TO@ for (MarshalledEntry<? extends K,? extends V> entry : marshalledEntries) {  batch.put(this.marshall(entry.getKey()),this.marshall(entry));} @AT@ 6211 @LENGTH@ 135
---UPD SingleVariableDeclaration@@MarshalledEntry entry @TO@ MarshalledEntry<? extends K,? extends V> entry @AT@ 6216 @LENGTH@ 21
------DEL SimpleType@@MarshalledEntry @AT@ 6216 @LENGTH@ 15
------INS ParameterizedType@@MarshalledEntry<? extends K,? extends V> @TO@ SingleVariableDeclaration@@MarshalledEntry entry @AT@ 6216 @LENGTH@ 41
---------INS SimpleType@@MarshalledEntry @TO@ ParameterizedType@@MarshalledEntry<? extends K,? extends V> @AT@ 6216 @LENGTH@ 15
---------INS WildcardType@@? @TO@ ParameterizedType@@MarshalledEntry<? extends K,? extends V> @AT@ 6232 @LENGTH@ 11
---------INS WildcardType@@? @TO@ ParameterizedType@@MarshalledEntry<? extends K,? extends V> @AT@ 6245 @LENGTH@ 11


UPD MethodDeclaration@@public, voidMethodName:ServiceProviderRegistryServiceConfiguratorProvider, CacheCapabilityServiceBuilderFactory<ServiceProviderRegistry<Object>> factory,  @TO@ public, voidMethodName:ServiceProviderRegistryServiceConfiguratorProvider, CacheCapabilityServiceConfiguratorFactory<ServiceProviderRegistry<Object>> factory,  @AT@ 1723 @LENGTH@ 270
---UPD SingleVariableDeclaration@@CacheCapabilityServiceBuilderFactory<ServiceProviderRegistry<Object>> factory @TO@ CacheCapabilityServiceConfiguratorFactory<ServiceProviderRegistry<Object>> factory @AT@ 1781 @LENGTH@ 77
------UPD ParameterizedType@@CacheCapabilityServiceBuilderFactory<ServiceProviderRegistry<Object>> @TO@ CacheCapabilityServiceConfiguratorFactory<ServiceProviderRegistry<Object>> @AT@ 1781 @LENGTH@ 69
---------UPD SimpleType@@CacheCapabilityServiceBuilderFactory @TO@ CacheCapabilityServiceConfiguratorFactory @AT@ 1781 @LENGTH@ 36


UPD SuperConstructorInvocation@@super(CacheGroupBuilder::new);
 @TO@ super(CacheGroupServiceConfigurator::new);
 @AT@ 1680 @LENGTH@ 30


UPD MethodDeclaration@@public, Mono<Authentication>, MethodName:apply, ServerWebExchange exchange,  @TO@ public, Mono<Authentication>, MethodName:convert, ServerWebExchange exchange,  @AT@ 2137 @LENGTH@ 173
---UPD SimpleName@@MethodName:apply @TO@ MethodName:convert @AT@ 2165 @LENGTH@ 5


INS VariableDeclarationStatement@@TextMessage message=(TextMessage)consumer.receive(TimeoutUtil.adjust(500)); @TO@ MethodDeclaration@@public, void, MethodName:removeJMSTopicRemovesAllMessages, Exception,  @AT@ 15641 @LENGTH@ 78
---INS SimpleType@@TextMessage @TO@ VariableDeclarationStatement@@TextMessage message=(TextMessage)consumer.receive(TimeoutUtil.adjust(500)); @AT@ 15641 @LENGTH@ 11
---INS VariableDeclarationFragment@@message=(TextMessage)consumer.receive(TimeoutUtil.adjust(500)) @TO@ VariableDeclarationStatement@@TextMessage message=(TextMessage)consumer.receive(TimeoutUtil.adjust(500)); @AT@ 15654 @LENGTH@ 64
------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=(TextMessage)consumer.receive(TimeoutUtil.adjust(500)) @AT@ 15654 @LENGTH@ 7
------INS CastExpression@@(TextMessage)consumer.receive(TimeoutUtil.adjust(500)) @TO@ VariableDeclarationFragment@@message=(TextMessage)consumer.receive(TimeoutUtil.adjust(500)) @AT@ 15664 @LENGTH@ 54
---------INS SimpleType@@TextMessage @TO@ CastExpression@@(TextMessage)consumer.receive(TimeoutUtil.adjust(500)) @AT@ 15665 @LENGTH@ 11
---------INS MethodInvocation@@consumer.receive(TimeoutUtil.adjust(500)) @TO@ CastExpression@@(TextMessage)consumer.receive(TimeoutUtil.adjust(500)) @AT@ 15677 @LENGTH@ 41
------------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.receive(TimeoutUtil.adjust(500)) @AT@ 15677 @LENGTH@ 8
------------INS SimpleName@@MethodName:receive:[TimeoutUtil.adjust(500)] @TO@ MethodInvocation@@consumer.receive(TimeoutUtil.adjust(500)) @AT@ 15686 @LENGTH@ 32
---------------INS MethodInvocation@@TimeoutUtil.adjust(500) @TO@ SimpleName@@MethodName:receive:[TimeoutUtil.adjust(500)] @AT@ 15694 @LENGTH@ 23
------------------INS SimpleName@@Name:TimeoutUtil @TO@ MethodInvocation@@TimeoutUtil.adjust(500) @AT@ 15694 @LENGTH@ 11
------------------INS SimpleName@@MethodName:adjust:[500] @TO@ MethodInvocation@@TimeoutUtil.adjust(500) @AT@ 15706 @LENGTH@ 11
---------------------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:adjust:[500] @AT@ 15713 @LENGTH@ 3


UPD SuperConstructorInvocation@@super(WILDCARD_PATH,UnaryOperator.identity(),new ClusteredCacheServiceHandler(ReplicatedCacheBuilder::new));
 @TO@ super(WILDCARD_PATH,UnaryOperator.identity(),new ClusteredCacheServiceHandler(ReplicatedCacheServiceConfigurator::new));
 @AT@ 2132 @LENGTH@ 110
---UPD ClassInstanceCreation@@ClusteredCacheServiceHandler[ReplicatedCacheBuilder::new] @TO@ ClusteredCacheServiceHandler[ReplicatedCacheServiceConfigurator::new] @AT@ 2179 @LENGTH@ 61


UPD SuperConstructorInvocation@@super(LocalCacheBuilder::new,LocalCacheBuilderProvider.class);
 @TO@ super(LocalCacheBuilder::new,LocalCacheServiceConfiguratorProvider.class);
 @AT@ 1284 @LENGTH@ 63
---UPD TypeLiteral@@LocalCacheBuilderProvider.class @TO@ LocalCacheServiceConfiguratorProvider.class @AT@ 1314 @LENGTH@ 31


UPD VariableDeclarationStatement@@final String site=address.getLastElement().getValue(); @TO@ String site=address.getLastElement().getValue(); @AT@ 2032 @LENGTH@ 56
---DEL Modifier@@final @AT@ 2032 @LENGTH@ 5


UPD FieldDeclaration@@MyIdGenerator, [idGenerator=new MyIdGenerator()] @TO@ private, MyIdGenerator, [idGenerator=new MyIdGenerator()] @AT@ 1515 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@MyIdGenerator, [idGenerator=new MyIdGenerator()] @AT@ 1515 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:assertThat(authorizedClient.getRefreshToken()).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenAuthorizationResponseValidThenAuthorizedClientSaved, Exception,  @AT@ 14536 @LENGTH@ 59
---INS MethodInvocation@@assertThat(authorizedClient.getRefreshToken()).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizedClient.getRefreshToken()).isNotNull() @AT@ 14536 @LENGTH@ 58
------INS MethodInvocation@@MethodName:assertThat:[authorizedClient.getRefreshToken()] @TO@ MethodInvocation@@assertThat(authorizedClient.getRefreshToken()).isNotNull() @AT@ 14536 @LENGTH@ 46
---------INS MethodInvocation@@authorizedClient.getRefreshToken() @TO@ MethodInvocation@@MethodName:assertThat:[authorizedClient.getRefreshToken()] @AT@ 14547 @LENGTH@ 34
------------INS SimpleName@@Name:authorizedClient @TO@ MethodInvocation@@authorizedClient.getRefreshToken() @AT@ 14547 @LENGTH@ 16
------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@authorizedClient.getRefreshToken() @AT@ 14564 @LENGTH@ 17
------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(authorizedClient.getRefreshToken()).isNotNull() @AT@ 14583 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:applyWhenWrongSchemeThenAuthentication,  @TO@ TypeDeclaration@@[public]ServerHttpBasicAuthenticationConverterTests,  @AT@ 3262 @LENGTH@ 214
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:applyWhenWrongSchemeThenAuthentication,  @AT@ 3262 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:applyWhenWrongSchemeThenAuthentication,  @AT@ 3269 @LENGTH@ 4
---INS SimpleName@@MethodName:applyWhenWrongSchemeThenAuthentication @TO@ MethodDeclaration@@public, void, MethodName:applyWhenWrongSchemeThenAuthentication,  @AT@ 3274 @LENGTH@ 38
---INS VariableDeclarationStatement@@Mono<Authentication> result=apply(this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==")); @TO@ MethodDeclaration@@public, void, MethodName:applyWhenWrongSchemeThenAuthentication,  @AT@ 3319 @LENGTH@ 114
------INS ParameterizedType@@Mono<Authentication> @TO@ VariableDeclarationStatement@@Mono<Authentication> result=apply(this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==")); @AT@ 3319 @LENGTH@ 20
---------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<Authentication> @AT@ 3319 @LENGTH@ 4
---------INS SimpleType@@Authentication @TO@ ParameterizedType@@Mono<Authentication> @AT@ 3324 @LENGTH@ 14
------INS VariableDeclarationFragment@@result=apply(this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==")) @TO@ VariableDeclarationStatement@@Mono<Authentication> result=apply(this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==")); @AT@ 3340 @LENGTH@ 92
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=apply(this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==")) @AT@ 3340 @LENGTH@ 6
---------INS MethodInvocation@@apply(this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==")) @TO@ VariableDeclarationFragment@@result=apply(this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==")) @AT@ 3349 @LENGTH@ 83
------------INS SimpleName@@MethodName:apply:[this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==")] @TO@ MethodInvocation@@apply(this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==")) @AT@ 3349 @LENGTH@ 83
---------------INS MethodInvocation@@this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==") @TO@ SimpleName@@MethodName:apply:[this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==")] @AT@ 3355 @LENGTH@ 76
------------------INS FieldAccess@@this.request @TO@ MethodInvocation@@this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==") @AT@ 3355 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 3355 @LENGTH@ 4
---------------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 3360 @LENGTH@ 7
------------------INS SimpleName@@MethodName:header:[HttpHeaders.AUTHORIZATION, "token dXNlcjpwYXNzd29yZA=="] @TO@ MethodInvocation@@this.request.header(HttpHeaders.AUTHORIZATION,"token dXNlcjpwYXNzd29yZA==") @AT@ 3368 @LENGTH@ 63
---------------------INS QualifiedName@@HttpHeaders.AUTHORIZATION @TO@ SimpleName@@MethodName:header:[HttpHeaders.AUTHORIZATION, "token dXNlcjpwYXNzd29yZA=="] @AT@ 3375 @LENGTH@ 25
------------------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.AUTHORIZATION @AT@ 3375 @LENGTH@ 11
------------------------INS SimpleName@@AUTHORIZATION @TO@ QualifiedName@@HttpHeaders.AUTHORIZATION @AT@ 3387 @LENGTH@ 13
---------------------INS StringLiteral@@"token dXNlcjpwYXNzd29yZA==" @TO@ SimpleName@@MethodName:header:[HttpHeaders.AUTHORIZATION, "token dXNlcjpwYXNzd29yZA=="] @AT@ 3402 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:assertThat(result.block()).isNull() @TO@ MethodDeclaration@@public, void, MethodName:applyWhenWrongSchemeThenAuthentication,  @AT@ 3437 @LENGTH@ 36
------INS MethodInvocation@@assertThat(result.block()).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.block()).isNull() @AT@ 3437 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:assertThat:[result.block()] @TO@ MethodInvocation@@assertThat(result.block()).isNull() @AT@ 3437 @LENGTH@ 26
------------INS MethodInvocation@@result.block() @TO@ MethodInvocation@@MethodName:assertThat:[result.block()] @AT@ 3448 @LENGTH@ 14
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.block() @AT@ 3448 @LENGTH@ 6
---------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@result.block() @AT@ 3455 @LENGTH@ 7
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(result.block()).isNull() @AT@ 3464 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:createFlux(inputCollectionName,collection -> {
  Document mappedQuery=queryMapper.getMappedObject(filterQuery.getQueryObject(),mappingContext.getPersistentEntity(domainType));
  MapReducePublisher<Document> publisher=collection.mapReduce(mapFunction,reduceFunction,Document.class);
  if (StringUtils.hasText(options.getOutputCollection())) {
    publisher=publisher.collectionName(options.getOutputCollection());
  }
  publisher.filter(mappedQuery);
  publisher.sort(getMappedSortObject(filterQuery,domainType));
  if (filterQuery.getMeta().getMaxTimeMsec() != null) {
    publisher.maxTime(filterQuery.getMeta().getMaxTimeMsec(),TimeUnit.MILLISECONDS);
  }
  if (filterQuery.getLimit() > 0 || (options.getLimit() != null)) {
    if (filterQuery.getLimit() > 0 && (options.getLimit() != null)) {
      throw new IllegalArgumentException("Both Query and MapReduceOptions define a limit. Please provide the limit only via one of the two.");
    }
    if (filterQuery.getLimit() > 0) {
      publisher.limit(filterQuery.getLimit());
    }
    if (options.getLimit() != null) {
      publisher.limit(options.getLimit());
    }
  }
  Optional<Collation> collation=filterQuery.getCollation();
  Optionals.ifAllPresent(filterQuery.getCollation(),options.getCollation(),(l,r) -> {
    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");
  }
);
  if (options.getCollation().isPresent()) {
    collation=options.getCollation();
  }
  if (!CollectionUtils.isEmpty(options.getScopeVariables())) {
    publisher=publisher.scope(new Document(options.getScopeVariables()));
  }
  if (options.getLimit() != null && options.getLimit() > 0) {
    publisher=publisher.limit(options.getLimit());
  }
  if (options.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {
    publisher=publisher.finalizeFunction(options.getFinalizeFunction().get());
  }
  if (options.getJavaScriptMode() != null) {
    publisher=publisher.jsMode(options.getJavaScriptMode());
  }
  if (options.getOutputSharded().isPresent()) {
    publisher=publisher.sharded(options.getOutputSharded().get());
  }
  MapReduceAction action=options.getMapReduceAction();
  if (action != null && options.getOutputCollection() != null) {
    publisher=publisher.action(action).collectionName(options.getOutputCollection());
  }
  publisher=collation.map(Collation::toMongoCollation).map(publisher::collation).orElse(publisher);
  return Flux.from(publisher).map(new ReadDocumentCallback<>(mongoConverter,resultType,inputCollectionName)::doWith);
}
) @TO@ MethodInvocation:createFlux(inputCollectionName,collection -> {
  Document mappedQuery=queryMapper.getMappedObject(filterQuery.getQueryObject(),mappingContext.getPersistentEntity(domainType));
  MapReducePublisher<Document> publisher=collection.mapReduce(mapFunction,reduceFunction,Document.class);
  publisher.filter(mappedQuery);
  publisher.sort(getMappedSortObject(filterQuery,domainType));
  if (filterQuery.getMeta().getMaxTimeMsec() != null) {
    publisher.maxTime(filterQuery.getMeta().getMaxTimeMsec(),TimeUnit.MILLISECONDS);
  }
  if (filterQuery.getLimit() > 0 || (options.getLimit() != null)) {
    if (filterQuery.getLimit() > 0 && (options.getLimit() != null)) {
      throw new IllegalArgumentException("Both Query and MapReduceOptions define a limit. Please provide the limit only via one of the two.");
    }
    if (filterQuery.getLimit() > 0) {
      publisher.limit(filterQuery.getLimit());
    }
    if (options.getLimit() != null) {
      publisher.limit(options.getLimit());
    }
  }
  Optional<Collation> collation=filterQuery.getCollation();
  Optionals.ifAllPresent(filterQuery.getCollation(),options.getCollation(),(l,r) -> {
    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");
  }
);
  if (options.getCollation().isPresent()) {
    collation=options.getCollation();
  }
  if (!CollectionUtils.isEmpty(options.getScopeVariables())) {
    publisher=publisher.scope(new Document(options.getScopeVariables()));
  }
  if (options.getLimit() != null && options.getLimit() > 0) {
    publisher=publisher.limit(options.getLimit());
  }
  if (options.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {
    publisher=publisher.finalizeFunction(options.getFinalizeFunction().get());
  }
  if (options.getJavaScriptMode() != null) {
    publisher=publisher.jsMode(options.getJavaScriptMode());
  }
  if (options.getOutputSharded().isPresent()) {
    publisher=publisher.sharded(options.getOutputSharded().get());
  }
  if (StringUtils.hasText(options.getOutputCollection()) && !options.usesInlineOutput()) {
    publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction());
    if (options.getOutputDatabase().isPresent()) {
      publisher=publisher.databaseName(options.getOutputDatabase().get());
    }
  }
  publisher=collation.map(Collation::toMongoCollation).map(publisher::collation).orElse(publisher);
  return Flux.from(publisher).map(new ReadDocumentCallback<>(mongoConverter,resultType,inputCollectionName)::doWith);
}
) @AT@ 80035 @LENGTH@ 2711
---UPD MethodInvocation@@createFlux(inputCollectionName,collection -> {
  Document mappedQuery=queryMapper.getMappedObject(filterQuery.getQueryObject(),mappingContext.getPersistentEntity(domainType));
  MapReducePublisher<Document> publisher=collection.mapReduce(mapFunction,reduceFunction,Document.class);
  if (StringUtils.hasText(options.getOutputCollection())) {
    publisher=publisher.collectionName(options.getOutputCollection());
  }
  publisher.filter(mappedQuery);
  publisher.sort(getMappedSortObject(filterQuery,domainType));
  if (filterQuery.getMeta().getMaxTimeMsec() != null) {
    publisher.maxTime(filterQuery.getMeta().getMaxTimeMsec(),TimeUnit.MILLISECONDS);
  }
  if (filterQuery.getLimit() > 0 || (options.getLimit() != null)) {
    if (filterQuery.getLimit() > 0 && (options.getLimit() != null)) {
      throw new IllegalArgumentException("Both Query and MapReduceOptions define a limit. Please provide the limit only via one of the two.");
    }
    if (filterQuery.getLimit() > 0) {
      publisher.limit(filterQuery.getLimit());
    }
    if (options.getLimit() != null) {
      publisher.limit(options.getLimit());
    }
  }
  Optional<Collation> collation=filterQuery.getCollation();
  Optionals.ifAllPresent(filterQuery.getCollation(),options.getCollation(),(l,r) -> {
    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");
  }
);
  if (options.getCollation().isPresent()) {
    collation=options.getCollation();
  }
  if (!CollectionUtils.isEmpty(options.getScopeVariables())) {
    publisher=publisher.scope(new Document(options.getScopeVariables()));
  }
  if (options.getLimit() != null && options.getLimit() > 0) {
    publisher=publisher.limit(options.getLimit());
  }
  if (options.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {
    publisher=publisher.finalizeFunction(options.getFinalizeFunction().get());
  }
  if (options.getJavaScriptMode() != null) {
    publisher=publisher.jsMode(options.getJavaScriptMode());
  }
  if (options.getOutputSharded().isPresent()) {
    publisher=publisher.sharded(options.getOutputSharded().get());
  }
  MapReduceAction action=options.getMapReduceAction();
  if (action != null && options.getOutputCollection() != null) {
    publisher=publisher.action(action).collectionName(options.getOutputCollection());
  }
  publisher=collation.map(Collation::toMongoCollation).map(publisher::collation).orElse(publisher);
  return Flux.from(publisher).map(new ReadDocumentCallback<>(mongoConverter,resultType,inputCollectionName)::doWith);
}
) @TO@ createFlux(inputCollectionName,collection -> {
  Document mappedQuery=queryMapper.getMappedObject(filterQuery.getQueryObject(),mappingContext.getPersistentEntity(domainType));
  MapReducePublisher<Document> publisher=collection.mapReduce(mapFunction,reduceFunction,Document.class);
  publisher.filter(mappedQuery);
  publisher.sort(getMappedSortObject(filterQuery,domainType));
  if (filterQuery.getMeta().getMaxTimeMsec() != null) {
    publisher.maxTime(filterQuery.getMeta().getMaxTimeMsec(),TimeUnit.MILLISECONDS);
  }
  if (filterQuery.getLimit() > 0 || (options.getLimit() != null)) {
    if (filterQuery.getLimit() > 0 && (options.getLimit() != null)) {
      throw new IllegalArgumentException("Both Query and MapReduceOptions define a limit. Please provide the limit only via one of the two.");
    }
    if (filterQuery.getLimit() > 0) {
      publisher.limit(filterQuery.getLimit());
    }
    if (options.getLimit() != null) {
      publisher.limit(options.getLimit());
    }
  }
  Optional<Collation> collation=filterQuery.getCollation();
  Optionals.ifAllPresent(filterQuery.getCollation(),options.getCollation(),(l,r) -> {
    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");
  }
);
  if (options.getCollation().isPresent()) {
    collation=options.getCollation();
  }
  if (!CollectionUtils.isEmpty(options.getScopeVariables())) {
    publisher=publisher.scope(new Document(options.getScopeVariables()));
  }
  if (options.getLimit() != null && options.getLimit() > 0) {
    publisher=publisher.limit(options.getLimit());
  }
  if (options.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {
    publisher=publisher.finalizeFunction(options.getFinalizeFunction().get());
  }
  if (options.getJavaScriptMode() != null) {
    publisher=publisher.jsMode(options.getJavaScriptMode());
  }
  if (options.getOutputSharded().isPresent()) {
    publisher=publisher.sharded(options.getOutputSharded().get());
  }
  if (StringUtils.hasText(options.getOutputCollection()) && !options.usesInlineOutput()) {
    publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction());
    if (options.getOutputDatabase().isPresent()) {
      publisher=publisher.databaseName(options.getOutputDatabase().get());
    }
  }
  publisher=collation.map(Collation::toMongoCollation).map(publisher::collation).orElse(publisher);
  return Flux.from(publisher).map(new ReadDocumentCallback<>(mongoConverter,resultType,inputCollectionName)::doWith);
}
) @AT@ 80042 @LENGTH@ 2703
------UPD SimpleName@@MethodName:createFlux:[inputCollectionName, collection -> {
  Document mappedQuery=queryMapper.getMappedObject(filterQuery.getQueryObject(),mappingContext.getPersistentEntity(domainType));
  MapReducePublisher<Document> publisher=collection.mapReduce(mapFunction,reduceFunction,Document.class);
  if (StringUtils.hasText(options.getOutputCollection())) {
    publisher=publisher.collectionName(options.getOutputCollection());
  }
  publisher.filter(mappedQuery);
  publisher.sort(getMappedSortObject(filterQuery,domainType));
  if (filterQuery.getMeta().getMaxTimeMsec() != null) {
    publisher.maxTime(filterQuery.getMeta().getMaxTimeMsec(),TimeUnit.MILLISECONDS);
  }
  if (filterQuery.getLimit() > 0 || (options.getLimit() != null)) {
    if (filterQuery.getLimit() > 0 && (options.getLimit() != null)) {
      throw new IllegalArgumentException("Both Query and MapReduceOptions define a limit. Please provide the limit only via one of the two.");
    }
    if (filterQuery.getLimit() > 0) {
      publisher.limit(filterQuery.getLimit());
    }
    if (options.getLimit() != null) {
      publisher.limit(options.getLimit());
    }
  }
  Optional<Collation> collation=filterQuery.getCollation();
  Optionals.ifAllPresent(filterQuery.getCollation(),options.getCollation(),(l,r) -> {
    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");
  }
);
  if (options.getCollation().isPresent()) {
    collation=options.getCollation();
  }
  if (!CollectionUtils.isEmpty(options.getScopeVariables())) {
    publisher=publisher.scope(new Document(options.getScopeVariables()));
  }
  if (options.getLimit() != null && options.getLimit() > 0) {
    publisher=publisher.limit(options.getLimit());
  }
  if (options.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {
    publisher=publisher.finalizeFunction(options.getFinalizeFunction().get());
  }
  if (options.getJavaScriptMode() != null) {
    publisher=publisher.jsMode(options.getJavaScriptMode());
  }
  if (options.getOutputSharded().isPresent()) {
    publisher=publisher.sharded(options.getOutputSharded().get());
  }
  MapReduceAction action=options.getMapReduceAction();
  if (action != null && options.getOutputCollection() != null) {
    publisher=publisher.action(action).collectionName(options.getOutputCollection());
  }
  publisher=collation.map(Collation::toMongoCollation).map(publisher::collation).orElse(publisher);
  return Flux.from(publisher).map(new ReadDocumentCallback<>(mongoConverter,resultType,inputCollectionName)::doWith);
}
] @TO@ MethodName:createFlux:[inputCollectionName, collection -> {
  Document mappedQuery=queryMapper.getMappedObject(filterQuery.getQueryObject(),mappingContext.getPersistentEntity(domainType));
  MapReducePublisher<Document> publisher=collection.mapReduce(mapFunction,reduceFunction,Document.class);
  publisher.filter(mappedQuery);
  publisher.sort(getMappedSortObject(filterQuery,domainType));
  if (filterQuery.getMeta().getMaxTimeMsec() != null) {
    publisher.maxTime(filterQuery.getMeta().getMaxTimeMsec(),TimeUnit.MILLISECONDS);
  }
  if (filterQuery.getLimit() > 0 || (options.getLimit() != null)) {
    if (filterQuery.getLimit() > 0 && (options.getLimit() != null)) {
      throw new IllegalArgumentException("Both Query and MapReduceOptions define a limit. Please provide the limit only via one of the two.");
    }
    if (filterQuery.getLimit() > 0) {
      publisher.limit(filterQuery.getLimit());
    }
    if (options.getLimit() != null) {
      publisher.limit(options.getLimit());
    }
  }
  Optional<Collation> collation=filterQuery.getCollation();
  Optionals.ifAllPresent(filterQuery.getCollation(),options.getCollation(),(l,r) -> {
    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");
  }
);
  if (options.getCollation().isPresent()) {
    collation=options.getCollation();
  }
  if (!CollectionUtils.isEmpty(options.getScopeVariables())) {
    publisher=publisher.scope(new Document(options.getScopeVariables()));
  }
  if (options.getLimit() != null && options.getLimit() > 0) {
    publisher=publisher.limit(options.getLimit());
  }
  if (options.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {
    publisher=publisher.finalizeFunction(options.getFinalizeFunction().get());
  }
  if (options.getJavaScriptMode() != null) {
    publisher=publisher.jsMode(options.getJavaScriptMode());
  }
  if (options.getOutputSharded().isPresent()) {
    publisher=publisher.sharded(options.getOutputSharded().get());
  }
  if (StringUtils.hasText(options.getOutputCollection()) && !options.usesInlineOutput()) {
    publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction());
    if (options.getOutputDatabase().isPresent()) {
      publisher=publisher.databaseName(options.getOutputDatabase().get());
    }
  }
  publisher=collation.map(Collation::toMongoCollation).map(publisher::collation).orElse(publisher);
  return Flux.from(publisher).map(new ReadDocumentCallback<>(mongoConverter,resultType,inputCollectionName)::doWith);
}
] @AT@ 80042 @LENGTH@ 2703
---------UPD LambdaExpression@@collection -> {
  Document mappedQuery=queryMapper.getMappedObject(filterQuery.getQueryObject(),mappingContext.getPersistentEntity(domainType));
  MapReducePublisher<Document> publisher=collection.mapReduce(mapFunction,reduceFunction,Document.class);
  if (StringUtils.hasText(options.getOutputCollection())) {
    publisher=publisher.collectionName(options.getOutputCollection());
  }
  publisher.filter(mappedQuery);
  publisher.sort(getMappedSortObject(filterQuery,domainType));
  if (filterQuery.getMeta().getMaxTimeMsec() != null) {
    publisher.maxTime(filterQuery.getMeta().getMaxTimeMsec(),TimeUnit.MILLISECONDS);
  }
  if (filterQuery.getLimit() > 0 || (options.getLimit() != null)) {
    if (filterQuery.getLimit() > 0 && (options.getLimit() != null)) {
      throw new IllegalArgumentException("Both Query and MapReduceOptions define a limit. Please provide the limit only via one of the two.");
    }
    if (filterQuery.getLimit() > 0) {
      publisher.limit(filterQuery.getLimit());
    }
    if (options.getLimit() != null) {
      publisher.limit(options.getLimit());
    }
  }
  Optional<Collation> collation=filterQuery.getCollation();
  Optionals.ifAllPresent(filterQuery.getCollation(),options.getCollation(),(l,r) -> {
    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");
  }
);
  if (options.getCollation().isPresent()) {
    collation=options.getCollation();
  }
  if (!CollectionUtils.isEmpty(options.getScopeVariables())) {
    publisher=publisher.scope(new Document(options.getScopeVariables()));
  }
  if (options.getLimit() != null && options.getLimit() > 0) {
    publisher=publisher.limit(options.getLimit());
  }
  if (options.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {
    publisher=publisher.finalizeFunction(options.getFinalizeFunction().get());
  }
  if (options.getJavaScriptMode() != null) {
    publisher=publisher.jsMode(options.getJavaScriptMode());
  }
  if (options.getOutputSharded().isPresent()) {
    publisher=publisher.sharded(options.getOutputSharded().get());
  }
  MapReduceAction action=options.getMapReduceAction();
  if (action != null && options.getOutputCollection() != null) {
    publisher=publisher.action(action).collectionName(options.getOutputCollection());
  }
  publisher=collation.map(Collation::toMongoCollation).map(publisher::collation).orElse(publisher);
  return Flux.from(publisher).map(new ReadDocumentCallback<>(mongoConverter,resultType,inputCollectionName)::doWith);
}
 @TO@ collection -> {
  Document mappedQuery=queryMapper.getMappedObject(filterQuery.getQueryObject(),mappingContext.getPersistentEntity(domainType));
  MapReducePublisher<Document> publisher=collection.mapReduce(mapFunction,reduceFunction,Document.class);
  publisher.filter(mappedQuery);
  publisher.sort(getMappedSortObject(filterQuery,domainType));
  if (filterQuery.getMeta().getMaxTimeMsec() != null) {
    publisher.maxTime(filterQuery.getMeta().getMaxTimeMsec(),TimeUnit.MILLISECONDS);
  }
  if (filterQuery.getLimit() > 0 || (options.getLimit() != null)) {
    if (filterQuery.getLimit() > 0 && (options.getLimit() != null)) {
      throw new IllegalArgumentException("Both Query and MapReduceOptions define a limit. Please provide the limit only via one of the two.");
    }
    if (filterQuery.getLimit() > 0) {
      publisher.limit(filterQuery.getLimit());
    }
    if (options.getLimit() != null) {
      publisher.limit(options.getLimit());
    }
  }
  Optional<Collation> collation=filterQuery.getCollation();
  Optionals.ifAllPresent(filterQuery.getCollation(),options.getCollation(),(l,r) -> {
    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");
  }
);
  if (options.getCollation().isPresent()) {
    collation=options.getCollation();
  }
  if (!CollectionUtils.isEmpty(options.getScopeVariables())) {
    publisher=publisher.scope(new Document(options.getScopeVariables()));
  }
  if (options.getLimit() != null && options.getLimit() > 0) {
    publisher=publisher.limit(options.getLimit());
  }
  if (options.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {
    publisher=publisher.finalizeFunction(options.getFinalizeFunction().get());
  }
  if (options.getJavaScriptMode() != null) {
    publisher=publisher.jsMode(options.getJavaScriptMode());
  }
  if (options.getOutputSharded().isPresent()) {
    publisher=publisher.sharded(options.getOutputSharded().get());
  }
  if (StringUtils.hasText(options.getOutputCollection()) && !options.usesInlineOutput()) {
    publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction());
    if (options.getOutputDatabase().isPresent()) {
      publisher=publisher.databaseName(options.getOutputDatabase().get());
    }
  }
  publisher=collation.map(Collation::toMongoCollation).map(publisher::collation).orElse(publisher);
  return Flux.from(publisher).map(new ReadDocumentCallback<>(mongoConverter,resultType,inputCollectionName)::doWith);
}
 @AT@ 80074 @LENGTH@ 2670
------------DEL IfStatement@@if (StringUtils.hasText(options.getOutputCollection())) {  publisher=publisher.collectionName(options.getOutputCollection());} @AT@ 80345 @LENGTH@ 135
---------------DEL Block@@ThenBody:{  publisher=publisher.collectionName(options.getOutputCollection());} @AT@ 80401 @LENGTH@ 79
------------INS IfStatement@@if (StringUtils.hasText(options.getOutputCollection()) && !options.usesInlineOutput()) {  publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction());  if (options.getOutputDatabase().isPresent()) {    publisher=publisher.databaseName(options.getOutputDatabase().get());  }} @TO@ LambdaExpression@@collection -> {
  Document mappedQuery=queryMapper.getMappedObject(filterQuery.getQueryObject(),mappingContext.getPersistentEntity(domainType));
  MapReducePublisher<Document> publisher=collection.mapReduce(mapFunction,reduceFunction,Document.class);
  if (StringUtils.hasText(options.getOutputCollection())) {
    publisher=publisher.collectionName(options.getOutputCollection());
  }
  publisher.filter(mappedQuery);
  publisher.sort(getMappedSortObject(filterQuery,domainType));
  if (filterQuery.getMeta().getMaxTimeMsec() != null) {
    publisher.maxTime(filterQuery.getMeta().getMaxTimeMsec(),TimeUnit.MILLISECONDS);
  }
  if (filterQuery.getLimit() > 0 || (options.getLimit() != null)) {
    if (filterQuery.getLimit() > 0 && (options.getLimit() != null)) {
      throw new IllegalArgumentException("Both Query and MapReduceOptions define a limit. Please provide the limit only via one of the two.");
    }
    if (filterQuery.getLimit() > 0) {
      publisher.limit(filterQuery.getLimit());
    }
    if (options.getLimit() != null) {
      publisher.limit(options.getLimit());
    }
  }
  Optional<Collation> collation=filterQuery.getCollation();
  Optionals.ifAllPresent(filterQuery.getCollation(),options.getCollation(),(l,r) -> {
    throw new IllegalArgumentException("Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.");
  }
);
  if (options.getCollation().isPresent()) {
    collation=options.getCollation();
  }
  if (!CollectionUtils.isEmpty(options.getScopeVariables())) {
    publisher=publisher.scope(new Document(options.getScopeVariables()));
  }
  if (options.getLimit() != null && options.getLimit() > 0) {
    publisher=publisher.limit(options.getLimit());
  }
  if (options.getFinalizeFunction().filter(StringUtils::hasText).isPresent()) {
    publisher=publisher.finalizeFunction(options.getFinalizeFunction().get());
  }
  if (options.getJavaScriptMode() != null) {
    publisher=publisher.jsMode(options.getJavaScriptMode());
  }
  if (options.getOutputSharded().isPresent()) {
    publisher=publisher.sharded(options.getOutputSharded().get());
  }
  MapReduceAction action=options.getMapReduceAction();
  if (action != null && options.getOutputCollection() != null) {
    publisher=publisher.action(action).collectionName(options.getOutputCollection());
  }
  publisher=collation.map(Collation::toMongoCollation).map(publisher::collation).orElse(publisher);
  return Flux.from(publisher).map(new ReadDocumentCallback<>(mongoConverter,resultType,inputCollectionName)::doWith);
}
 @AT@ 82158 @LENGTH@ 337
---------------INS InfixExpression@@StringUtils.hasText(options.getOutputCollection()) && !options.usesInlineOutput() @TO@ IfStatement@@if (StringUtils.hasText(options.getOutputCollection()) && !options.usesInlineOutput()) {  publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction());  if (options.getOutputDatabase().isPresent()) {    publisher=publisher.databaseName(options.getOutputDatabase().get());  }} @AT@ 82162 @LENGTH@ 81
------------------MOV MethodInvocation@@StringUtils.hasText(options.getOutputCollection()) @TO@ InfixExpression@@StringUtils.hasText(options.getOutputCollection()) && !options.usesInlineOutput() @AT@ 80349 @LENGTH@ 50
------------------MOV MethodInvocation@@StringUtils.hasText(options.getOutputCollection()) @TO@ InfixExpression@@StringUtils.hasText(options.getOutputCollection()) && !options.usesInlineOutput() @AT@ 80349 @LENGTH@ 50
------------------INS Operator@@&& @TO@ InfixExpression@@StringUtils.hasText(options.getOutputCollection()) && !options.usesInlineOutput() @AT@ 82212 @LENGTH@ 2
------------------INS PrefixExpression@@!options.usesInlineOutput() @TO@ InfixExpression@@StringUtils.hasText(options.getOutputCollection()) && !options.usesInlineOutput() @AT@ 82216 @LENGTH@ 27
---------------------INS Operator@@! @TO@ PrefixExpression@@!options.usesInlineOutput() @AT@ 82216 @LENGTH@ 1
---------------------INS MethodInvocation@@options.usesInlineOutput() @TO@ PrefixExpression@@!options.usesInlineOutput() @AT@ 82217 @LENGTH@ 26
------------------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.usesInlineOutput() @AT@ 82217 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:usesInlineOutput:[] @TO@ MethodInvocation@@options.usesInlineOutput() @AT@ 82225 @LENGTH@ 18
---------------INS Block@@ThenBody:{  publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction());  if (options.getOutputDatabase().isPresent()) {    publisher=publisher.databaseName(options.getOutputDatabase().get());  }} @TO@ IfStatement@@if (StringUtils.hasText(options.getOutputCollection()) && !options.usesInlineOutput()) {  publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction());  if (options.getOutputDatabase().isPresent()) {    publisher=publisher.databaseName(options.getOutputDatabase().get());  }} @AT@ 82245 @LENGTH@ 250
------------------MOV ExpressionStatement@@Assignment:publisher=publisher.collectionName(options.getOutputCollection()) @TO@ Block@@ThenBody:{  publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction());  if (options.getOutputDatabase().isPresent()) {    publisher=publisher.databaseName(options.getOutputDatabase().get());  }} @AT@ 80407 @LENGTH@ 68
---------------------UPD Assignment@@publisher=publisher.collectionName(options.getOutputCollection()) @TO@ publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction()) @AT@ 80407 @LENGTH@ 67
------------------------UPD MethodInvocation@@publisher.collectionName(options.getOutputCollection()) @TO@ publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction()) @AT@ 80419 @LENGTH@ 55
---------------------------UPD SimpleName@@MethodName:collectionName:[options.getOutputCollection()] @TO@ MethodName:action:[options.getMapReduceAction()] @AT@ 80429 @LENGTH@ 45
------------------------------UPD MethodInvocation@@options.getOutputCollection() @TO@ options.getMapReduceAction() @AT@ 80444 @LENGTH@ 29
---------------------------------UPD SimpleName@@MethodName:getOutputCollection:[] @TO@ MethodName:getMapReduceAction:[] @AT@ 80452 @LENGTH@ 21
---------------------------INS MethodInvocation@@MethodName:collectionName:[options.getOutputCollection()] @TO@ MethodInvocation@@publisher.collectionName(options.getOutputCollection()) @AT@ 82263 @LENGTH@ 55
------------------------------INS MethodInvocation@@options.getOutputCollection() @TO@ MethodInvocation@@MethodName:collectionName:[options.getOutputCollection()] @AT@ 82288 @LENGTH@ 29
---------------------------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.getOutputCollection() @AT@ 82288 @LENGTH@ 7
---------------------------------INS SimpleName@@MethodName:getOutputCollection:[] @TO@ MethodInvocation@@options.getOutputCollection() @AT@ 82296 @LENGTH@ 21
------------------MOV ExpressionStatement@@Assignment:publisher=publisher.collectionName(options.getOutputCollection()) @TO@ Block@@ThenBody:{  publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction());  if (options.getOutputDatabase().isPresent()) {    publisher=publisher.databaseName(options.getOutputDatabase().get());  }} @AT@ 80407 @LENGTH@ 68
---------------------UPD Assignment@@publisher=publisher.collectionName(options.getOutputCollection()) @TO@ publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction()) @AT@ 80407 @LENGTH@ 67
------------------------UPD MethodInvocation@@publisher.collectionName(options.getOutputCollection()) @TO@ publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction()) @AT@ 80419 @LENGTH@ 55
---------------------------UPD SimpleName@@MethodName:collectionName:[options.getOutputCollection()] @TO@ MethodName:action:[options.getMapReduceAction()] @AT@ 80429 @LENGTH@ 45
------------------------------UPD MethodInvocation@@options.getOutputCollection() @TO@ options.getMapReduceAction() @AT@ 80444 @LENGTH@ 29
---------------------------------UPD SimpleName@@MethodName:getOutputCollection:[] @TO@ MethodName:getMapReduceAction:[] @AT@ 80452 @LENGTH@ 21
---------------------------INS MethodInvocation@@MethodName:collectionName:[options.getOutputCollection()] @TO@ MethodInvocation@@publisher.collectionName(options.getOutputCollection()) @AT@ 82263 @LENGTH@ 55
------------------------------INS MethodInvocation@@options.getOutputCollection() @TO@ MethodInvocation@@MethodName:collectionName:[options.getOutputCollection()] @AT@ 82288 @LENGTH@ 29
---------------------------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.getOutputCollection() @AT@ 82288 @LENGTH@ 7
---------------------------------INS SimpleName@@MethodName:getOutputCollection:[] @TO@ MethodInvocation@@options.getOutputCollection() @AT@ 82296 @LENGTH@ 21
------------------INS IfStatement@@if (options.getOutputDatabase().isPresent()) {  publisher=publisher.databaseName(options.getOutputDatabase().get());} @TO@ Block@@ThenBody:{  publisher=publisher.collectionName(options.getOutputCollection()).action(options.getMapReduceAction());  if (options.getOutputDatabase().isPresent()) {    publisher=publisher.databaseName(options.getOutputDatabase().get());  }} @AT@ 82362 @LENGTH@ 128
---------------------INS MethodInvocation@@options.getOutputDatabase().isPresent() @TO@ IfStatement@@if (options.getOutputDatabase().isPresent()) {  publisher=publisher.databaseName(options.getOutputDatabase().get());} @AT@ 82366 @LENGTH@ 39
------------------------INS MethodInvocation@@MethodName:getOutputDatabase:[] @TO@ MethodInvocation@@options.getOutputDatabase().isPresent() @AT@ 82366 @LENGTH@ 27
------------------------MOV SimpleName@@Name:options @TO@ MethodInvocation@@options.getOutputDatabase().isPresent() @AT@ 82375 @LENGTH@ 7
------------------------MOV SimpleName@@MethodName:getOutputCollection:[] @TO@ MethodInvocation@@options.getOutputDatabase().isPresent() @AT@ 82383 @LENGTH@ 21
---------------------MOV Block@@ThenBody:{  publisher=publisher.action(action).collectionName(options.getOutputCollection());} @TO@ IfStatement@@if (options.getOutputDatabase().isPresent()) {  publisher=publisher.databaseName(options.getOutputDatabase().get());} @AT@ 82414 @LENGTH@ 94
------------DEL VariableDeclarationStatement@@MapReduceAction action=options.getMapReduceAction(); @AT@ 82294 @LENGTH@ 54
---------------DEL SimpleType@@MapReduceAction @AT@ 82294 @LENGTH@ 15
---------------DEL VariableDeclarationFragment@@action=options.getMapReduceAction() @AT@ 82310 @LENGTH@ 37
------------------DEL SimpleName@@action @AT@ 82310 @LENGTH@ 6
------------------DEL MethodInvocation@@options.getMapReduceAction() @AT@ 82319 @LENGTH@ 28
---------------------DEL SimpleName@@Name:options @AT@ 82319 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:getMapReduceAction:[] @AT@ 82327 @LENGTH@ 20
------------DEL IfStatement@@if (action != null && options.getOutputCollection() != null) {  publisher=publisher.action(action).collectionName(options.getOutputCollection());} @AT@ 82353 @LENGTH@ 155
---------------DEL InfixExpression@@action != null && options.getOutputCollection() != null @AT@ 82357 @LENGTH@ 55
------------------DEL InfixExpression@@action != null @AT@ 82357 @LENGTH@ 14
---------------------DEL SimpleName@@action @AT@ 82357 @LENGTH@ 6
---------------------DEL Operator@@!= @AT@ 82363 @LENGTH@ 2
---------------------DEL NullLiteral@@null @AT@ 82367 @LENGTH@ 4
------------------DEL Operator@@&& @AT@ 82371 @LENGTH@ 2
------------------DEL InfixExpression@@options.getOutputCollection() != null @AT@ 82375 @LENGTH@ 37
---------------------DEL MethodInvocation@@options.getOutputCollection() @AT@ 82375 @LENGTH@ 29
---------------------DEL Operator@@!= @AT@ 82404 @LENGTH@ 2
---------------------DEL NullLiteral@@null @AT@ 82408 @LENGTH@ 4


UPD MethodDeclaration@@public, OAuth2Configurer<HttpSecurity>, MethodName:oauth2, Exception,  @TO@ public, OAuth2ClientConfigurer<HttpSecurity>, MethodName:oauth2Client, Exception,  @AT@ 41102 @LENGTH@ 205
---UPD ParameterizedType@@OAuth2Configurer<HttpSecurity> @TO@ OAuth2ClientConfigurer<HttpSecurity> @AT@ 41109 @LENGTH@ 30
------UPD SimpleType@@OAuth2Configurer @TO@ OAuth2ClientConfigurer @AT@ 41109 @LENGTH@ 16
---UPD SimpleName@@MethodName:oauth2 @TO@ MethodName:oauth2Client @AT@ 41140 @LENGTH@ 6
---UPD VariableDeclarationStatement@@OAuth2Configurer<HttpSecurity> configurer=getOrApply(new OAuth2Configurer<>()); @TO@ OAuth2ClientConfigurer<HttpSecurity> configurer=getOrApply(new OAuth2ClientConfigurer<>()); @AT@ 41170 @LENGTH@ 81
------UPD ParameterizedType@@OAuth2Configurer<HttpSecurity> @TO@ OAuth2ClientConfigurer<HttpSecurity> @AT@ 41170 @LENGTH@ 30
---------UPD SimpleType@@OAuth2Configurer @TO@ OAuth2ClientConfigurer @AT@ 41170 @LENGTH@ 16
------UPD VariableDeclarationFragment@@configurer=getOrApply(new OAuth2Configurer<>()) @TO@ configurer=getOrApply(new OAuth2ClientConfigurer<>()) @AT@ 41201 @LENGTH@ 49
---------UPD MethodInvocation@@getOrApply(new OAuth2Configurer<>()) @TO@ getOrApply(new OAuth2ClientConfigurer<>()) @AT@ 41214 @LENGTH@ 36
------------UPD SimpleName@@MethodName:getOrApply:[new OAuth2Configurer<>()] @TO@ MethodName:getOrApply:[new OAuth2ClientConfigurer<>()] @AT@ 41214 @LENGTH@ 36
---------------UPD ClassInstanceCreation@@OAuth2Configurer<>[] @TO@ OAuth2ClientConfigurer<>[] @AT@ 41225 @LENGTH@ 24
------------------UPD ParameterizedType@@OAuth2Configurer<> @TO@ OAuth2ClientConfigurer<> @AT@ 41229 @LENGTH@ 18
---------------------UPD SimpleType@@OAuth2Configurer @TO@ OAuth2ClientConfigurer @AT@ 41229 @LENGTH@ 16


INS MethodDeclaration@@public, ClientRegistrationRepository, MethodName:clientRegistrationRepository,  @TO@ TypeDeclaration@@[@EnableWebMvc, @EnableWebSecurity, static]OAuth2AuthorizedClientArgumentResolverConfig, WebSecurityConfigurerAdapter @AT@ 4517 @LENGTH@ 124
---INS Modifier@@public @TO@ MethodDeclaration@@public, ClientRegistrationRepository, MethodName:clientRegistrationRepository,  @AT@ 4517 @LENGTH@ 6
---INS SimpleType@@ClientRegistrationRepository @TO@ MethodDeclaration@@public, ClientRegistrationRepository, MethodName:clientRegistrationRepository,  @AT@ 4524 @LENGTH@ 28
---INS SimpleName@@MethodName:clientRegistrationRepository @TO@ MethodDeclaration@@public, ClientRegistrationRepository, MethodName:clientRegistrationRepository,  @AT@ 4553 @LENGTH@ 28
---INS ReturnStatement@@MethodInvocation:mock(ClientRegistrationRepository.class) @TO@ MethodDeclaration@@public, ClientRegistrationRepository, MethodName:clientRegistrationRepository,  @AT@ 4589 @LENGTH@ 48
------INS MethodInvocation@@mock(ClientRegistrationRepository.class) @TO@ ReturnStatement@@MethodInvocation:mock(ClientRegistrationRepository.class) @AT@ 4596 @LENGTH@ 40
---------INS SimpleName@@MethodName:mock:[ClientRegistrationRepository.class] @TO@ MethodInvocation@@mock(ClientRegistrationRepository.class) @AT@ 4596 @LENGTH@ 40
------------INS TypeLiteral@@ClientRegistrationRepository.class @TO@ SimpleName@@MethodName:mock:[ClientRegistrationRepository.class] @AT@ 4601 @LENGTH@ 34


UPD ExpressionStatement@@MethodInvocation:http.authorizeExchange().anyExchange().authenticated().and().oauth2().resourceServer().jwt().publicKey(publicKey()) @TO@ MethodInvocation:http.authorizeExchange().anyExchange().authenticated().and().oauth2ResourceServer().jwt().publicKey(publicKey()) @AT@ 2074 @LENGTH@ 152
---UPD MethodInvocation@@http.authorizeExchange().anyExchange().authenticated().and().oauth2().resourceServer().jwt().publicKey(publicKey()) @TO@ http.authorizeExchange().anyExchange().authenticated().and().oauth2ResourceServer().jwt().publicKey(publicKey()) @AT@ 2074 @LENGTH@ 151
------UPD MethodInvocation@@MethodName:resourceServer:[] @TO@ MethodName:oauth2ResourceServer:[] @AT@ 2074 @LENGTH@ 109
------DEL MethodInvocation@@MethodName:oauth2:[] @AT@ 2074 @LENGTH@ 87


UPD FieldDeclaration@@private, static, final, Pattern, [SYNTAX_PATTERN=Pattern.compile("(\\w+)")] @TO@ private, static, final, Pattern, [SYNTAX_PATTERN=Pattern.compile("([\\w.]+)")] @AT@ 3320 @LENGTH@ 72
---UPD VariableDeclarationFragment@@SYNTAX_PATTERN=Pattern.compile("(\\w+)") @TO@ SYNTAX_PATTERN=Pattern.compile("([\\w.]+)") @AT@ 3349 @LENGTH@ 42
------UPD MethodInvocation@@Pattern.compile("(\\w+)") @TO@ Pattern.compile("([\\w.]+)") @AT@ 3366 @LENGTH@ 25
---------UPD SimpleName@@MethodName:compile:["(\\w+)"] @TO@ MethodName:compile:["([\\w.]+)"] @AT@ 3374 @LENGTH@ 17
------------UPD StringLiteral@@"(\\w+)" @TO@ "([\\w.]+)" @AT@ 3382 @LENGTH@ 8


DEL ExpressionStatement@@MethodInvocation:assertNotNull("We should get the exception cause here",e.getCause()) @AT@ 4085 @LENGTH@ 70
---DEL MethodInvocation@@assertNotNull("We should get the exception cause here",e.getCause()) @AT@ 4085 @LENGTH@ 69
------DEL SimpleName@@MethodName:assertNotNull:["We should get the exception cause here", e.getCause()] @AT@ 4085 @LENGTH@ 69
---------DEL StringLiteral@@"We should get the exception cause here" @AT@ 4099 @LENGTH@ 40
---------DEL MethodInvocation@@e.getCause() @AT@ 4141 @LENGTH@ 12
------------DEL SimpleName@@Name:e @AT@ 4141 @LENGTH@ 1
------------DEL SimpleName@@MethodName:getCause:[] @AT@ 4143 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:from("direct:wrong-expression").saga().option("id",simple("${10 / 0}")).to("log:info") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 3546 @LENGTH@ 163
---INS MethodInvocation@@from("direct:wrong-expression").saga().option("id",simple("${10 / 0}")).to("log:info") @TO@ ExpressionStatement@@MethodInvocation:from("direct:wrong-expression").saga().option("id",simple("${10 / 0}")).to("log:info") @AT@ 3546 @LENGTH@ 162
------INS MethodInvocation@@MethodName:option:["id", simple("${10 / 0}")] @TO@ MethodInvocation@@from("direct:wrong-expression").saga().option("id",simple("${10 / 0}")).to("log:info") @AT@ 3546 @LENGTH@ 122
---------INS StringLiteral@@"id" @TO@ MethodInvocation@@MethodName:option:["id", simple("${10 / 0}")] @AT@ 3642 @LENGTH@ 4
---------INS MethodInvocation@@simple("${10 / 0}") @TO@ MethodInvocation@@MethodName:option:["id", simple("${10 / 0}")] @AT@ 3648 @LENGTH@ 19
------------INS SimpleName@@MethodName:simple:["${10 / 0}"] @TO@ MethodInvocation@@simple("${10 / 0}") @AT@ 3648 @LENGTH@ 19
---------------INS StringLiteral@@"${10 / 0}" @TO@ SimpleName@@MethodName:simple:["${10 / 0}"] @AT@ 3655 @LENGTH@ 11
------INS MethodInvocation@@MethodName:saga:[] @TO@ MethodInvocation@@from("direct:wrong-expression").saga().option("id",simple("${10 / 0}")).to("log:info") @AT@ 3546 @LENGTH@ 63
------INS MethodInvocation@@MethodName:from:["direct:wrong-expression"] @TO@ MethodInvocation@@from("direct:wrong-expression").saga().option("id",simple("${10 / 0}")).to("log:info") @AT@ 3546 @LENGTH@ 31
---------INS StringLiteral@@"direct:wrong-expression" @TO@ MethodInvocation@@MethodName:from:["direct:wrong-expression"] @AT@ 3551 @LENGTH@ 25
------INS SimpleName@@MethodName:to:["log:info"] @TO@ MethodInvocation@@from("direct:wrong-expression").saga().option("id",simple("${10 / 0}")).to("log:info") @AT@ 3694 @LENGTH@ 14
---------INS StringLiteral@@"log:info" @TO@ SimpleName@@MethodName:to:["log:info"] @AT@ 3697 @LENGTH@ 10


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @TO@ TypeDeclaration@@[public, static, final]TokenType,  @AT@ 3343 @LENGTH@ 90
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 3343 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 3351 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 3358 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 3364 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 3369 @LENGTH@ 63
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 3369 @LENGTH@ 16
------INS QualifiedName@@SpringSecurityCoreVersion.SERIAL_VERSION_UID @TO@ VariableDeclarationFragment@@serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 3388 @LENGTH@ 44
---------INS SimpleName@@SpringSecurityCoreVersion @TO@ QualifiedName@@SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 3388 @LENGTH@ 25
---------INS SimpleName@@SERIAL_VERSION_UID @TO@ QualifiedName@@SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 3414 @LENGTH@ 18


UPD VariableDeclarationStatement@@String accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n"; @TO@ String accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "	\"refresh_token\": \"refresh-token-1234\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n"; @AT@ 4170 @LENGTH@ 336
---UPD VariableDeclarationFragment@@accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n" @TO@ accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "	\"refresh_token\": \"refresh-token-1234\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n" @AT@ 4177 @LENGTH@ 328
------UPD InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n" @TO@ "{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "	\"refresh_token\": \"refresh-token-1234\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n" @AT@ 4206 @LENGTH@ 299
---------INS StringLiteral@@"	\"refresh_token\": \"refresh-token-1234\",\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\",\n"+ "   \"custom_parameter_1\": \"custom-value-1\",\n"+ "   \"custom_parameter_2\": \"custom-value-2\"\n"+ "}\n" @AT@ 4389 @LENGTH@ 47


UPD IfStatement@@if (left instanceof Pattern) {  return right instanceof Pattern ? ((Pattern)left).pattern().equals(((Pattern)right).pattern()) : false;} @TO@ if (Pattern.class.isInstance(left)) {  if (!Pattern.class.isInstance(right)) {    return false;  }  Pattern leftPattern=(Pattern)left;  Pattern rightPattern=(Pattern)right;  return leftPattern.pattern().equals(rightPattern.pattern()) && leftPattern.flags() == rightPattern.flags();} @AT@ 24370 @LENGTH@ 143
---INS MethodInvocation@@Pattern.class.isInstance(left) @TO@ IfStatement@@if (left instanceof Pattern) {  return right instanceof Pattern ? ((Pattern)left).pattern().equals(((Pattern)right).pattern()) : false;} @AT@ 24374 @LENGTH@ 30
------INS TypeLiteral@@Pattern.class @TO@ MethodInvocation@@Pattern.class.isInstance(left) @AT@ 24374 @LENGTH@ 13
------INS SimpleName@@MethodName:isInstance:[left] @TO@ MethodInvocation@@Pattern.class.isInstance(left) @AT@ 24388 @LENGTH@ 16
---------INS SimpleName@@left @TO@ SimpleName@@MethodName:isInstance:[left] @AT@ 24399 @LENGTH@ 4
---DEL InstanceofExpression@@left instanceof Pattern @AT@ 24374 @LENGTH@ 23
------DEL SimpleName@@left @AT@ 24374 @LENGTH@ 4
------DEL Instanceof@@instanceof @AT@ 24379 @LENGTH@ 10
------DEL SimpleType@@Pattern @AT@ 24390 @LENGTH@ 7
---UPD Block@@ThenBody:{  return right instanceof Pattern ? ((Pattern)left).pattern().equals(((Pattern)right).pattern()) : false;} @TO@ ThenBody:{  if (!Pattern.class.isInstance(right)) {    return false;  }  Pattern leftPattern=(Pattern)left;  Pattern rightPattern=(Pattern)right;  return leftPattern.pattern().equals(rightPattern.pattern()) && leftPattern.flags() == rightPattern.flags();} @AT@ 24399 @LENGTH@ 114
------DEL ReturnStatement@@ConditionalExpression:right instanceof Pattern ? ((Pattern)left).pattern().equals(((Pattern)right).pattern()) : false @AT@ 24404 @LENGTH@ 105
---------DEL ConditionalExpression@@right instanceof Pattern ? ((Pattern)left).pattern().equals(((Pattern)right).pattern()) : false @AT@ 24411 @LENGTH@ 97
------------DEL InstanceofExpression@@right instanceof Pattern @AT@ 24411 @LENGTH@ 24
---------------DEL SimpleName@@right @AT@ 24411 @LENGTH@ 5
---------------DEL Instanceof@@instanceof @AT@ 24417 @LENGTH@ 10
---------------DEL SimpleType@@Pattern @AT@ 24428 @LENGTH@ 7
------------DEL MethodInvocation@@((Pattern)left).pattern().equals(((Pattern)right).pattern()) @AT@ 24438 @LENGTH@ 62
---------------DEL ParenthesizedExpression@@((Pattern)left) @AT@ 24438 @LENGTH@ 16
------------------DEL CastExpression@@(Pattern)left @AT@ 24439 @LENGTH@ 14
------------DEL BooleanLiteral@@false @AT@ 24503 @LENGTH@ 5
------INS IfStatement@@if (!Pattern.class.isInstance(right)) {  return false;} @TO@ Block@@ThenBody:{  return right instanceof Pattern ? ((Pattern)left).pattern().equals(((Pattern)right).pattern()) : false;} @AT@ 24412 @LENGTH@ 62
---------INS PrefixExpression@@!Pattern.class.isInstance(right) @TO@ IfStatement@@if (!Pattern.class.isInstance(right)) {  return false;} @AT@ 24416 @LENGTH@ 32
------------INS Operator@@! @TO@ PrefixExpression@@!Pattern.class.isInstance(right) @AT@ 24416 @LENGTH@ 1
------------INS MethodInvocation@@Pattern.class.isInstance(right) @TO@ PrefixExpression@@!Pattern.class.isInstance(right) @AT@ 24417 @LENGTH@ 31
---------------INS TypeLiteral@@Pattern.class @TO@ MethodInvocation@@Pattern.class.isInstance(right) @AT@ 24417 @LENGTH@ 13
---------------INS SimpleName@@MethodName:isInstance:[right] @TO@ MethodInvocation@@Pattern.class.isInstance(right) @AT@ 24431 @LENGTH@ 17
------------------INS SimpleName@@right @TO@ SimpleName@@MethodName:isInstance:[right] @AT@ 24442 @LENGTH@ 5
---------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (!Pattern.class.isInstance(right)) {  return false;} @AT@ 24450 @LENGTH@ 24
------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 24456 @LENGTH@ 13
---------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 24463 @LENGTH@ 5
------INS VariableDeclarationStatement@@Pattern leftPattern=(Pattern)left; @TO@ Block@@ThenBody:{  return right instanceof Pattern ? ((Pattern)left).pattern().equals(((Pattern)right).pattern()) : false;} @AT@ 24479 @LENGTH@ 37
---------INS SimpleType@@Pattern @TO@ VariableDeclarationStatement@@Pattern leftPattern=(Pattern)left; @AT@ 24479 @LENGTH@ 7
---------INS VariableDeclarationFragment@@leftPattern=(Pattern)left @TO@ VariableDeclarationStatement@@Pattern leftPattern=(Pattern)left; @AT@ 24487 @LENGTH@ 28
------------INS SimpleName@@leftPattern @TO@ VariableDeclarationFragment@@leftPattern=(Pattern)left @AT@ 24487 @LENGTH@ 11
------------INS CastExpression@@(Pattern)left @TO@ VariableDeclarationFragment@@leftPattern=(Pattern)left @AT@ 24501 @LENGTH@ 14
---------------MOV SimpleType@@Pattern @TO@ CastExpression@@(Pattern)left @AT@ 24440 @LENGTH@ 7
---------------MOV SimpleName@@left @TO@ CastExpression@@(Pattern)left @AT@ 24449 @LENGTH@ 4
------INS VariableDeclarationStatement@@Pattern rightPattern=(Pattern)right; @TO@ Block@@ThenBody:{  return right instanceof Pattern ? ((Pattern)left).pattern().equals(((Pattern)right).pattern()) : false;} @AT@ 24520 @LENGTH@ 39
---------INS SimpleType@@Pattern @TO@ VariableDeclarationStatement@@Pattern rightPattern=(Pattern)right; @AT@ 24520 @LENGTH@ 7
---------INS VariableDeclarationFragment@@rightPattern=(Pattern)right @TO@ VariableDeclarationStatement@@Pattern rightPattern=(Pattern)right; @AT@ 24528 @LENGTH@ 30
------------INS SimpleName@@rightPattern @TO@ VariableDeclarationFragment@@rightPattern=(Pattern)right @AT@ 24528 @LENGTH@ 12
------------INS CastExpression@@(Pattern)right @TO@ VariableDeclarationFragment@@rightPattern=(Pattern)right @AT@ 24543 @LENGTH@ 15
---------------INS SimpleType@@Pattern @TO@ CastExpression@@(Pattern)right @AT@ 24544 @LENGTH@ 7
---------------INS SimpleName@@right @TO@ CastExpression@@(Pattern)right @AT@ 24553 @LENGTH@ 5
------INS ReturnStatement@@InfixExpression:leftPattern.pattern().equals(rightPattern.pattern()) && leftPattern.flags() == rightPattern.flags() @TO@ Block@@ThenBody:{  return right instanceof Pattern ? ((Pattern)left).pattern().equals(((Pattern)right).pattern()) : false;} @AT@ 24564 @LENGTH@ 115
---------INS InfixExpression@@leftPattern.pattern().equals(rightPattern.pattern()) && leftPattern.flags() == rightPattern.flags() @TO@ ReturnStatement@@InfixExpression:leftPattern.pattern().equals(rightPattern.pattern()) && leftPattern.flags() == rightPattern.flags() @AT@ 24571 @LENGTH@ 107
------------INS MethodInvocation@@leftPattern.pattern().equals(rightPattern.pattern()) @TO@ InfixExpression@@leftPattern.pattern().equals(rightPattern.pattern()) && leftPattern.flags() == rightPattern.flags() @AT@ 24571 @LENGTH@ 52
---------------MOV MethodInvocation@@MethodName:pattern:[] @TO@ MethodInvocation@@leftPattern.pattern().equals(rightPattern.pattern()) @AT@ 24438 @LENGTH@ 26
---------------MOV SimpleName@@MethodName:equals:[((Pattern)right).pattern()] @TO@ MethodInvocation@@leftPattern.pattern().equals(rightPattern.pattern()) @AT@ 24465 @LENGTH@ 35
------------------UPD MethodInvocation@@((Pattern)right).pattern() @TO@ rightPattern.pattern() @AT@ 24472 @LENGTH@ 27
---------------------DEL ParenthesizedExpression@@((Pattern)right) @AT@ 24472 @LENGTH@ 17
------------------------DEL CastExpression@@(Pattern)right @AT@ 24473 @LENGTH@ 15
---------------------------DEL SimpleType@@Pattern @AT@ 24474 @LENGTH@ 7
---------------------------DEL SimpleName@@right @AT@ 24483 @LENGTH@ 5
---------------------INS SimpleName@@Name:rightPattern @TO@ MethodInvocation@@((Pattern)right).pattern() @AT@ 24600 @LENGTH@ 12
---------------INS SimpleName@@Name:leftPattern @TO@ MethodInvocation@@leftPattern.pattern().equals(rightPattern.pattern()) @AT@ 24571 @LENGTH@ 11
------------INS Operator@@&& @TO@ InfixExpression@@leftPattern.pattern().equals(rightPattern.pattern()) && leftPattern.flags() == rightPattern.flags() @AT@ 24623 @LENGTH@ 2
------------INS InfixExpression@@leftPattern.flags() == rightPattern.flags() @TO@ InfixExpression@@leftPattern.pattern().equals(rightPattern.pattern()) && leftPattern.flags() == rightPattern.flags() @AT@ 24635 @LENGTH@ 43
---------------INS MethodInvocation@@leftPattern.flags() @TO@ InfixExpression@@leftPattern.flags() == rightPattern.flags() @AT@ 24635 @LENGTH@ 19
------------------INS SimpleName@@Name:leftPattern @TO@ MethodInvocation@@leftPattern.flags() @AT@ 24635 @LENGTH@ 11
------------------INS SimpleName@@MethodName:flags:[] @TO@ MethodInvocation@@leftPattern.flags() @AT@ 24647 @LENGTH@ 7
---------------INS Operator@@== @TO@ InfixExpression@@leftPattern.flags() == rightPattern.flags() @AT@ 24654 @LENGTH@ 2
---------------INS MethodInvocation@@rightPattern.flags() @TO@ InfixExpression@@leftPattern.flags() == rightPattern.flags() @AT@ 24658 @LENGTH@ 20
------------------INS SimpleName@@Name:rightPattern @TO@ MethodInvocation@@rightPattern.flags() @AT@ 24658 @LENGTH@ 12
------------------INS SimpleName@@MethodName:flags:[] @TO@ MethodInvocation@@rightPattern.flags() @AT@ 24671 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:includeSubdomains, boolean includeSubDomains,  @TO@ public, HstsSpec, MethodName:includeSubdomains, boolean includeSubDomains,  @AT@ 55423 @LENGTH@ 129
---DEL PrimitiveType@@void @AT@ 55430 @LENGTH@ 4
---INS SimpleType@@HstsSpec @TO@ MethodDeclaration@@public, void, MethodName:includeSubdomains, boolean includeSubDomains,  @AT@ 55451 @LENGTH@ 8
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, void, MethodName:includeSubdomains, boolean includeSubDomains,  @AT@ 55577 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 55584 @LENGTH@ 4


INS IfStatement@@if (sortTerm != null) {  SortTerm[] st;  if (sortTerm instanceof String) {    st=MailConverters.toSortTerm((String)sortTerm);  } else   if (sortTerm instanceof SortTerm[]) {    st=(SortTerm[])sortTerm;  } else {    throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");  }  endpoint.setSortTerm(st);} @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 3409 @LENGTH@ 527
---INS InfixExpression@@sortTerm != null @TO@ IfStatement@@if (sortTerm != null) {  SortTerm[] st;  if (sortTerm instanceof String) {    st=MailConverters.toSortTerm((String)sortTerm);  } else   if (sortTerm instanceof SortTerm[]) {    st=(SortTerm[])sortTerm;  } else {    throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");  }  endpoint.setSortTerm(st);} @AT@ 3413 @LENGTH@ 16
------INS SimpleName@@sortTerm @TO@ InfixExpression@@sortTerm != null @AT@ 3413 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@sortTerm != null @AT@ 3421 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@sortTerm != null @AT@ 3425 @LENGTH@ 4
---INS Block@@ThenBody:{  SortTerm[] st;  if (sortTerm instanceof String) {    st=MailConverters.toSortTerm((String)sortTerm);  } else   if (sortTerm instanceof SortTerm[]) {    st=(SortTerm[])sortTerm;  } else {    throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");  }  endpoint.setSortTerm(st);} @TO@ IfStatement@@if (sortTerm != null) {  SortTerm[] st;  if (sortTerm instanceof String) {    st=MailConverters.toSortTerm((String)sortTerm);  } else   if (sortTerm instanceof SortTerm[]) {    st=(SortTerm[])sortTerm;  } else {    throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");  }  endpoint.setSortTerm(st);} @AT@ 3431 @LENGTH@ 505
------INS VariableDeclarationStatement@@SortTerm[] st; @TO@ Block@@ThenBody:{  SortTerm[] st;  if (sortTerm instanceof String) {    st=MailConverters.toSortTerm((String)sortTerm);  } else   if (sortTerm instanceof SortTerm[]) {    st=(SortTerm[])sortTerm;  } else {    throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");  }  endpoint.setSortTerm(st);} @AT@ 3445 @LENGTH@ 14
---------INS ArrayType@@SortTerm[] @TO@ VariableDeclarationStatement@@SortTerm[] st; @AT@ 3445 @LENGTH@ 10
------------INS SimpleType@@SortTerm @TO@ ArrayType@@SortTerm[] @AT@ 3445 @LENGTH@ 8
---------INS VariableDeclarationFragment@@st @TO@ VariableDeclarationStatement@@SortTerm[] st; @AT@ 3456 @LENGTH@ 2
------------INS SimpleName@@st @TO@ VariableDeclarationFragment@@st @AT@ 3456 @LENGTH@ 2
------INS IfStatement@@if (sortTerm instanceof String) {  st=MailConverters.toSortTerm((String)sortTerm);} else if (sortTerm instanceof SortTerm[]) {  st=(SortTerm[])sortTerm;} else {  throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");} @TO@ Block@@ThenBody:{  SortTerm[] st;  if (sortTerm instanceof String) {    st=MailConverters.toSortTerm((String)sortTerm);  } else   if (sortTerm instanceof SortTerm[]) {    st=(SortTerm[])sortTerm;  } else {    throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");  }  endpoint.setSortTerm(st);} @AT@ 3472 @LENGTH@ 416
---------INS InstanceofExpression@@sortTerm instanceof String @TO@ IfStatement@@if (sortTerm instanceof String) {  st=MailConverters.toSortTerm((String)sortTerm);} else if (sortTerm instanceof SortTerm[]) {  st=(SortTerm[])sortTerm;} else {  throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");} @AT@ 3476 @LENGTH@ 26
------------INS SimpleName@@sortTerm @TO@ InstanceofExpression@@sortTerm instanceof String @AT@ 3476 @LENGTH@ 8
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@sortTerm instanceof String @AT@ 3485 @LENGTH@ 10
------------INS SimpleType@@String @TO@ InstanceofExpression@@sortTerm instanceof String @AT@ 3496 @LENGTH@ 6
---------INS Block@@ThenBody:{  st=MailConverters.toSortTerm((String)sortTerm);} @TO@ IfStatement@@if (sortTerm instanceof String) {  st=MailConverters.toSortTerm((String)sortTerm);} else if (sortTerm instanceof SortTerm[]) {  st=(SortTerm[])sortTerm;} else {  throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");} @AT@ 3504 @LENGTH@ 154
------------INS ExpressionStatement@@Assignment:st=MailConverters.toSortTerm((String)sortTerm) @TO@ Block@@ThenBody:{  st=MailConverters.toSortTerm((String)sortTerm);} @AT@ 3594 @LENGTH@ 50
---------------INS Assignment@@st=MailConverters.toSortTerm((String)sortTerm) @TO@ ExpressionStatement@@Assignment:st=MailConverters.toSortTerm((String)sortTerm) @AT@ 3594 @LENGTH@ 49
------------------INS SimpleName@@st @TO@ Assignment@@st=MailConverters.toSortTerm((String)sortTerm) @AT@ 3594 @LENGTH@ 2
------------------INS Operator@@= @TO@ Assignment@@st=MailConverters.toSortTerm((String)sortTerm) @AT@ 3596 @LENGTH@ 1
------------------INS MethodInvocation@@MailConverters.toSortTerm((String)sortTerm) @TO@ Assignment@@st=MailConverters.toSortTerm((String)sortTerm) @AT@ 3599 @LENGTH@ 44
---------------------INS SimpleName@@Name:MailConverters @TO@ MethodInvocation@@MailConverters.toSortTerm((String)sortTerm) @AT@ 3599 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:toSortTerm:[(String)sortTerm] @TO@ MethodInvocation@@MailConverters.toSortTerm((String)sortTerm) @AT@ 3614 @LENGTH@ 29
------------------------INS CastExpression@@(String)sortTerm @TO@ SimpleName@@MethodName:toSortTerm:[(String)sortTerm] @AT@ 3625 @LENGTH@ 17
---------------------------INS SimpleType@@String @TO@ CastExpression@@(String)sortTerm @AT@ 3626 @LENGTH@ 6
---------------------------INS SimpleName@@sortTerm @TO@ CastExpression@@(String)sortTerm @AT@ 3634 @LENGTH@ 8
---------INS Block@@ElseBody:if (sortTerm instanceof SortTerm[]) {  st=(SortTerm[])sortTerm;} else {  throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");} @TO@ IfStatement@@if (sortTerm instanceof String) {  st=MailConverters.toSortTerm((String)sortTerm);} else if (sortTerm instanceof SortTerm[]) {  st=(SortTerm[])sortTerm;} else {  throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");} @AT@ 3664 @LENGTH@ 224
------------INS IfStatement@@if (sortTerm instanceof SortTerm[]) {  st=(SortTerm[])sortTerm;} else {  throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");} @TO@ Block@@ElseBody:if (sortTerm instanceof SortTerm[]) {  st=(SortTerm[])sortTerm;} else {  throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");} @AT@ 3664 @LENGTH@ 224
---------------INS InstanceofExpression@@sortTerm instanceof SortTerm[] @TO@ IfStatement@@if (sortTerm instanceof SortTerm[]) {  st=(SortTerm[])sortTerm;} else {  throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");} @AT@ 3668 @LENGTH@ 30
------------------INS SimpleName@@sortTerm @TO@ InstanceofExpression@@sortTerm instanceof SortTerm[] @AT@ 3668 @LENGTH@ 8
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@sortTerm instanceof SortTerm[] @AT@ 3677 @LENGTH@ 10
------------------INS ArrayType@@SortTerm[] @TO@ InstanceofExpression@@sortTerm instanceof SortTerm[] @AT@ 3688 @LENGTH@ 10
---------------------INS SimpleType@@SortTerm @TO@ ArrayType@@SortTerm[] @AT@ 3688 @LENGTH@ 8
---------------INS Block@@ThenBody:{  st=(SortTerm[])sortTerm;} @TO@ IfStatement@@if (sortTerm instanceof SortTerm[]) {  st=(SortTerm[])sortTerm;} else {  throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");} @AT@ 3700 @LENGTH@ 59
------------------INS ExpressionStatement@@Assignment:st=(SortTerm[])sortTerm @TO@ Block@@ThenBody:{  st=(SortTerm[])sortTerm;} @AT@ 3718 @LENGTH@ 27
---------------------INS Assignment@@st=(SortTerm[])sortTerm @TO@ ExpressionStatement@@Assignment:st=(SortTerm[])sortTerm @AT@ 3718 @LENGTH@ 26
------------------------INS SimpleName@@st @TO@ Assignment@@st=(SortTerm[])sortTerm @AT@ 3718 @LENGTH@ 2
------------------------INS Operator@@= @TO@ Assignment@@st=(SortTerm[])sortTerm @AT@ 3720 @LENGTH@ 1
------------------------INS CastExpression@@(SortTerm[])sortTerm @TO@ Assignment@@st=(SortTerm[])sortTerm @AT@ 3723 @LENGTH@ 21
---------------------------INS ArrayType@@SortTerm[] @TO@ CastExpression@@(SortTerm[])sortTerm @AT@ 3724 @LENGTH@ 10
------------------------------INS SimpleType@@SortTerm @TO@ ArrayType@@SortTerm[] @AT@ 3724 @LENGTH@ 8
---------------------------INS SimpleName@@sortTerm @TO@ CastExpression@@(SortTerm[])sortTerm @AT@ 3736 @LENGTH@ 8
---------------INS Block@@ElseBody:{  throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");} @TO@ IfStatement@@if (sortTerm instanceof SortTerm[]) {  st=(SortTerm[])sortTerm;} else {  throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");} @AT@ 3765 @LENGTH@ 123
------------------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value") @TO@ Block@@ElseBody:{  throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");} @AT@ 3783 @LENGTH@ 91
---------------------INS ClassInstanceCreation@@IllegalArgumentException["SortTerm must either be SortTerm[] or a String value"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value") @AT@ 3789 @LENGTH@ 84
------------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["SortTerm must either be SortTerm[] or a String value"] @AT@ 3789 @LENGTH@ 3
------------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["SortTerm must either be SortTerm[] or a String value"] @AT@ 3793 @LENGTH@ 24
------------------------INS StringLiteral@@"SortTerm must either be SortTerm[] or a String value" @TO@ ClassInstanceCreation@@IllegalArgumentException["SortTerm must either be SortTerm[] or a String value"] @AT@ 3818 @LENGTH@ 54
------INS ExpressionStatement@@MethodInvocation:endpoint.setSortTerm(st) @TO@ Block@@ThenBody:{  SortTerm[] st;  if (sortTerm instanceof String) {    st=MailConverters.toSortTerm((String)sortTerm);  } else   if (sortTerm instanceof SortTerm[]) {    st=(SortTerm[])sortTerm;  } else {    throw new IllegalArgumentException("SortTerm must either be SortTerm[] or a String value");  }  endpoint.setSortTerm(st);} @AT@ 3901 @LENGTH@ 25
---------INS MethodInvocation@@endpoint.setSortTerm(st) @TO@ ExpressionStatement@@MethodInvocation:endpoint.setSortTerm(st) @AT@ 3901 @LENGTH@ 24
------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.setSortTerm(st) @AT@ 3901 @LENGTH@ 8
------------INS SimpleName@@MethodName:setSortTerm:[st] @TO@ MethodInvocation@@endpoint.setSortTerm(st) @AT@ 3910 @LENGTH@ 15
---------------INS SimpleName@@st @TO@ SimpleName@@MethodName:setSortTerm:[st] @AT@ 3922 @LENGTH@ 2


UPD VariableDeclarationStatement@@JChannel channel=ServiceContainerHelper.findValue(context.getServiceRegistry(false),JGroupsRequirement.CHANNEL.getServiceName(context,channelName)); @TO@ ServiceName serviceName=JGroupsRequirement.CHANNEL.getServiceName(context,channelName); @AT@ 1918 @LENGTH@ 152
---UPD SimpleType@@JChannel @TO@ ServiceName @AT@ 1918 @LENGTH@ 8
---UPD VariableDeclarationFragment@@channel=ServiceContainerHelper.findValue(context.getServiceRegistry(false),JGroupsRequirement.CHANNEL.getServiceName(context,channelName)) @TO@ serviceName=JGroupsRequirement.CHANNEL.getServiceName(context,channelName) @AT@ 1927 @LENGTH@ 142
------DEL SimpleName@@channel @AT@ 1927 @LENGTH@ 7
------DEL MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),JGroupsRequirement.CHANNEL.getServiceName(context,channelName)) @AT@ 1937 @LENGTH@ 132
---------DEL SimpleName@@Name:ServiceContainerHelper @AT@ 1937 @LENGTH@ 22
---------DEL SimpleName@@MethodName:findValue:[context.getServiceRegistry(false), JGroupsRequirement.CHANNEL.getServiceName(context,channelName)] @AT@ 1960 @LENGTH@ 109
------------DEL MethodInvocation@@context.getServiceRegistry(false) @AT@ 1970 @LENGTH@ 33
---------------DEL SimpleName@@Name:context @AT@ 1970 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getServiceRegistry:[false] @AT@ 1978 @LENGTH@ 25
------------------DEL BooleanLiteral@@false @AT@ 1997 @LENGTH@ 5
------INS SimpleName@@serviceName @TO@ VariableDeclarationFragment@@channel=ServiceContainerHelper.findValue(context.getServiceRegistry(false),JGroupsRequirement.CHANNEL.getServiceName(context,channelName)) @AT@ 1974 @LENGTH@ 11
------MOV MethodInvocation@@JGroupsRequirement.CHANNEL.getServiceName(context,channelName) @TO@ VariableDeclarationFragment@@channel=ServiceContainerHelper.findValue(context.getServiceRegistry(false),JGroupsRequirement.CHANNEL.getServiceName(context,channelName)) @AT@ 2005 @LENGTH@ 63


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelSjms2Test.class)).exclusion("com.atomikos:transactions-jta").build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelSjms2Test.class)).exclusion("com.atomikos:transactions-jta").dependency("javax.json:javax.json-api").build() @AT@ 1443 @LENGTH@ 559
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelSjms2Test.class)).exclusion("com.atomikos:transactions-jta").build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelSjms2Test.class)).exclusion("com.atomikos:transactions-jta").dependency("javax.json:javax.json-api").build() @AT@ 1450 @LENGTH@ 551
------INS MethodInvocation@@MethodName:dependency:["javax.json:javax.json-api"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelSjms2Test.class)).exclusion("com.atomikos:transactions-jta").build() @AT@ 1450 @LENGTH@ 583
---------INS StringLiteral@@"javax.json:javax.json-api" @TO@ MethodInvocation@@MethodName:dependency:["javax.json:javax.json-api"] @AT@ 2005 @LENGTH@ 27


UPD TypeDeclaration@@ServerHttpSecurityConfiguration, [WebFluxConfigurer] @TO@ [@Configuration]ServerHttpSecurityConfiguration, [WebFluxConfigurer] @AT@ 2024 @LENGTH@ 2506
---INS MarkerAnnotation@@@Configuration @TO@ TypeDeclaration@@ServerHttpSecurityConfiguration, [WebFluxConfigurer] @AT@ 2079 @LENGTH@ 14


UPD MethodDeclaration@@public, final, void, MethodName:addChannel, Channel channel, Connection connection,  @TO@ public, final, void, MethodName:addChannel, Channel channel, @Nullable Connection connection,  @AT@ 4010 @LENGTH@ 567
---UPD SingleVariableDeclaration@@Connection connection @TO@ @Nullable Connection connection @AT@ 4056 @LENGTH@ 21


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3927 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 3947 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 3957 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3957 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 3999 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 4006 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 4006 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 4016 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:findByRegexWithPatternAndOptions,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 39614 @LENGTH@ 288
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findByRegexWithPatternAndOptions,  @AT@ 39614 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findByRegexWithPatternAndOptions,  @AT@ 39621 @LENGTH@ 4
---INS SimpleName@@MethodName:findByRegexWithPatternAndOptions @TO@ MethodDeclaration@@public, void, MethodName:findByRegexWithPatternAndOptions,  @AT@ 39626 @LENGTH@ 32
---INS VariableDeclarationStatement@@String fn=alicia.getFirstname().toUpperCase(); @TO@ MethodDeclaration@@public, void, MethodName:findByRegexWithPatternAndOptions,  @AT@ 39666 @LENGTH@ 48
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String fn=alicia.getFirstname().toUpperCase(); @AT@ 39666 @LENGTH@ 6
------INS VariableDeclarationFragment@@fn=alicia.getFirstname().toUpperCase() @TO@ VariableDeclarationStatement@@String fn=alicia.getFirstname().toUpperCase(); @AT@ 39673 @LENGTH@ 40
---------INS SimpleName@@fn @TO@ VariableDeclarationFragment@@fn=alicia.getFirstname().toUpperCase() @AT@ 39673 @LENGTH@ 2
---------INS MethodInvocation@@alicia.getFirstname().toUpperCase() @TO@ VariableDeclarationFragment@@fn=alicia.getFirstname().toUpperCase() @AT@ 39678 @LENGTH@ 35
------------INS MethodInvocation@@MethodName:getFirstname:[] @TO@ MethodInvocation@@alicia.getFirstname().toUpperCase() @AT@ 39678 @LENGTH@ 21
------------INS SimpleName@@Name:alicia @TO@ MethodInvocation@@alicia.getFirstname().toUpperCase() @AT@ 39678 @LENGTH@ 6
------------INS SimpleName@@MethodName:toUpperCase:[] @TO@ MethodInvocation@@alicia.getFirstname().toUpperCase() @AT@ 39700 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertThat(repository.findByFirstnameRegex(Pattern.compile(fn))).hasSize(0) @TO@ MethodDeclaration@@public, void, MethodName:findByRegexWithPatternAndOptions,  @AT@ 39718 @LENGTH@ 76
------INS MethodInvocation@@assertThat(repository.findByFirstnameRegex(Pattern.compile(fn))).hasSize(0) @TO@ ExpressionStatement@@MethodInvocation:assertThat(repository.findByFirstnameRegex(Pattern.compile(fn))).hasSize(0) @AT@ 39718 @LENGTH@ 75
---------INS MethodInvocation@@MethodName:assertThat:[repository.findByFirstnameRegex(Pattern.compile(fn))] @TO@ MethodInvocation@@assertThat(repository.findByFirstnameRegex(Pattern.compile(fn))).hasSize(0) @AT@ 39718 @LENGTH@ 64
------------INS MethodInvocation@@repository.findByFirstnameRegex(Pattern.compile(fn)) @TO@ MethodInvocation@@MethodName:assertThat:[repository.findByFirstnameRegex(Pattern.compile(fn))] @AT@ 39729 @LENGTH@ 52
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByFirstnameRegex(Pattern.compile(fn)) @AT@ 39729 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findByFirstnameRegex:[Pattern.compile(fn)] @TO@ MethodInvocation@@repository.findByFirstnameRegex(Pattern.compile(fn)) @AT@ 39740 @LENGTH@ 41
------------------INS MethodInvocation@@Pattern.compile(fn) @TO@ SimpleName@@MethodName:findByFirstnameRegex:[Pattern.compile(fn)] @AT@ 39761 @LENGTH@ 19
---------------------INS SimpleName@@Name:Pattern @TO@ MethodInvocation@@Pattern.compile(fn) @AT@ 39761 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:compile:[fn] @TO@ MethodInvocation@@Pattern.compile(fn) @AT@ 39769 @LENGTH@ 11
------------------------INS SimpleName@@fn @TO@ SimpleName@@MethodName:compile:[fn] @AT@ 39777 @LENGTH@ 2
---------INS SimpleName@@MethodName:hasSize:[0] @TO@ MethodInvocation@@assertThat(repository.findByFirstnameRegex(Pattern.compile(fn))).hasSize(0) @AT@ 39783 @LENGTH@ 10
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:hasSize:[0] @AT@ 39791 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(repository.findByFirstnameRegex(Pattern.compile(fn,Pattern.CASE_INSENSITIVE))).hasSize(1) @TO@ MethodDeclaration@@public, void, MethodName:findByRegexWithPatternAndOptions,  @AT@ 39797 @LENGTH@ 102
------INS MethodInvocation@@assertThat(repository.findByFirstnameRegex(Pattern.compile(fn,Pattern.CASE_INSENSITIVE))).hasSize(1) @TO@ ExpressionStatement@@MethodInvocation:assertThat(repository.findByFirstnameRegex(Pattern.compile(fn,Pattern.CASE_INSENSITIVE))).hasSize(1) @AT@ 39797 @LENGTH@ 101
---------INS MethodInvocation@@MethodName:assertThat:[repository.findByFirstnameRegex(Pattern.compile(fn,Pattern.CASE_INSENSITIVE))] @TO@ MethodInvocation@@assertThat(repository.findByFirstnameRegex(Pattern.compile(fn,Pattern.CASE_INSENSITIVE))).hasSize(1) @AT@ 39797 @LENGTH@ 90
------------INS MethodInvocation@@repository.findByFirstnameRegex(Pattern.compile(fn,Pattern.CASE_INSENSITIVE)) @TO@ MethodInvocation@@MethodName:assertThat:[repository.findByFirstnameRegex(Pattern.compile(fn,Pattern.CASE_INSENSITIVE))] @AT@ 39808 @LENGTH@ 78
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByFirstnameRegex(Pattern.compile(fn,Pattern.CASE_INSENSITIVE)) @AT@ 39808 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findByFirstnameRegex:[Pattern.compile(fn,Pattern.CASE_INSENSITIVE)] @TO@ MethodInvocation@@repository.findByFirstnameRegex(Pattern.compile(fn,Pattern.CASE_INSENSITIVE)) @AT@ 39819 @LENGTH@ 67
------------------INS MethodInvocation@@Pattern.compile(fn,Pattern.CASE_INSENSITIVE) @TO@ SimpleName@@MethodName:findByFirstnameRegex:[Pattern.compile(fn,Pattern.CASE_INSENSITIVE)] @AT@ 39840 @LENGTH@ 45
---------------------INS SimpleName@@Name:Pattern @TO@ MethodInvocation@@Pattern.compile(fn,Pattern.CASE_INSENSITIVE) @AT@ 39840 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:compile:[fn, Pattern.CASE_INSENSITIVE] @TO@ MethodInvocation@@Pattern.compile(fn,Pattern.CASE_INSENSITIVE) @AT@ 39848 @LENGTH@ 37
------------------------INS SimpleName@@fn @TO@ SimpleName@@MethodName:compile:[fn, Pattern.CASE_INSENSITIVE] @AT@ 39856 @LENGTH@ 2
------------------------INS QualifiedName@@Pattern.CASE_INSENSITIVE @TO@ SimpleName@@MethodName:compile:[fn, Pattern.CASE_INSENSITIVE] @AT@ 39860 @LENGTH@ 24
---------------------------INS SimpleName@@Pattern @TO@ QualifiedName@@Pattern.CASE_INSENSITIVE @AT@ 39860 @LENGTH@ 7
---------------------------INS SimpleName@@CASE_INSENSITIVE @TO@ QualifiedName@@Pattern.CASE_INSENSITIVE @AT@ 39868 @LENGTH@ 16
---------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@assertThat(repository.findByFirstnameRegex(Pattern.compile(fn,Pattern.CASE_INSENSITIVE))).hasSize(1) @AT@ 39888 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 39896 @LENGTH@ 1


UPD VariableDeclarationStatement@@DistributableSessionIdentifierCodecBuilderProvider provider=DistributableSessionIdentifierCodecBuilderProvider.INSTANCE.orElse(null); @TO@ DistributableSessionIdentifierCodecServiceConfiguratorProvider provider=DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.orElse(null); @AT@ 4813 @LENGTH@ 135
---UPD SimpleType@@DistributableSessionIdentifierCodecBuilderProvider @TO@ DistributableSessionIdentifierCodecServiceConfiguratorProvider @AT@ 4813 @LENGTH@ 50
---UPD VariableDeclarationFragment@@provider=DistributableSessionIdentifierCodecBuilderProvider.INSTANCE.orElse(null) @TO@ provider=DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.orElse(null) @AT@ 4864 @LENGTH@ 83
------UPD MethodInvocation@@DistributableSessionIdentifierCodecBuilderProvider.INSTANCE.orElse(null) @TO@ DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE.orElse(null) @AT@ 4875 @LENGTH@ 72
---------UPD QualifiedName@@Name:DistributableSessionIdentifierCodecBuilderProvider.INSTANCE @TO@ Name:DistributableSessionIdentifierCodecServiceConfiguratorProvider.INSTANCE @AT@ 4875 @LENGTH@ 59


UPD VariableDeclarationStatement@@SimpleStepBuilder builder=new StepBuilder("step").repository(jobRepository).transactionManager(transactionManager).chunk(5).reader(new DummyItemReader()).writer(new DummyItemWriter()).faultTolerant().listener(new AnnotationBasedChunkListener()); @TO@ SimpleStepBuilder<Object,Object> builder=new StepBuilder("step").repository(jobRepository).transactionManager(transactionManager).chunk(5).reader(new DummyItemReader()).writer(new DummyItemWriter()).faultTolerant().listener(new AnnotationBasedChunkListener()); @AT@ 6775 @LENGTH@ 282
---DEL SimpleType@@SimpleStepBuilder @AT@ 6775 @LENGTH@ 17
---INS ParameterizedType@@SimpleStepBuilder<Object,Object> @TO@ VariableDeclarationStatement@@SimpleStepBuilder builder=new StepBuilder("step").repository(jobRepository).transactionManager(transactionManager).chunk(5).reader(new DummyItemReader()).writer(new DummyItemWriter()).faultTolerant().listener(new AnnotationBasedChunkListener()); @AT@ 6791 @LENGTH@ 33
------INS SimpleType@@SimpleStepBuilder @TO@ ParameterizedType@@SimpleStepBuilder<Object,Object> @AT@ 6791 @LENGTH@ 17
------INS SimpleType@@Object @TO@ ParameterizedType@@SimpleStepBuilder<Object,Object> @AT@ 6809 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@SimpleStepBuilder<Object,Object> @AT@ 6817 @LENGTH@ 6


INS IfStatement@@if (idProperty != null) {  if (idProperty.isImmutable() && entity.isConstructorArgument(idProperty)) {    idValue=accessor.getProperty(idProperty);  } else   if (documentAccessor.hasValue(idProperty)) {    idValue=readIdValue(path,evaluator,idProperty,documentAccessor);    accessor.setProperty(idProperty,idValue);  }} @TO@ MethodDeclaration@@private, S, S extends Object, MethodName:read, final MongoPersistentEntity<S> entity, final Document bson, final ObjectPath path,  @AT@ 11744 @LENGTH@ 339
---INS InfixExpression@@idProperty != null @TO@ IfStatement@@if (idProperty != null) {  if (idProperty.isImmutable() && entity.isConstructorArgument(idProperty)) {    idValue=accessor.getProperty(idProperty);  } else   if (documentAccessor.hasValue(idProperty)) {    idValue=readIdValue(path,evaluator,idProperty,documentAccessor);    accessor.setProperty(idProperty,idValue);  }} @AT@ 11748 @LENGTH@ 18
------INS SimpleName@@idProperty @TO@ InfixExpression@@idProperty != null @AT@ 11748 @LENGTH@ 10
------INS Operator@@!= @TO@ InfixExpression@@idProperty != null @AT@ 11758 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@idProperty != null @AT@ 11762 @LENGTH@ 4
---INS Block@@ThenBody:{  if (idProperty.isImmutable() && entity.isConstructorArgument(idProperty)) {    idValue=accessor.getProperty(idProperty);  } else   if (documentAccessor.hasValue(idProperty)) {    idValue=readIdValue(path,evaluator,idProperty,documentAccessor);    accessor.setProperty(idProperty,idValue);  }} @TO@ IfStatement@@if (idProperty != null) {  if (idProperty.isImmutable() && entity.isConstructorArgument(idProperty)) {    idValue=accessor.getProperty(idProperty);  } else   if (documentAccessor.hasValue(idProperty)) {    idValue=readIdValue(path,evaluator,idProperty,documentAccessor);    accessor.setProperty(idProperty,idValue);  }} @AT@ 11768 @LENGTH@ 315
------INS IfStatement@@if (idProperty.isImmutable() && entity.isConstructorArgument(idProperty)) {  idValue=accessor.getProperty(idProperty);} else if (documentAccessor.hasValue(idProperty)) {  idValue=readIdValue(path,evaluator,idProperty,documentAccessor);  accessor.setProperty(idProperty,idValue);} @TO@ Block@@ThenBody:{  if (idProperty.isImmutable() && entity.isConstructorArgument(idProperty)) {    idValue=accessor.getProperty(idProperty);  } else   if (documentAccessor.hasValue(idProperty)) {    idValue=readIdValue(path,evaluator,idProperty,documentAccessor);    accessor.setProperty(idProperty,idValue);  }} @AT@ 11774 @LENGTH@ 305
---------INS InfixExpression@@idProperty.isImmutable() && entity.isConstructorArgument(idProperty) @TO@ IfStatement@@if (idProperty.isImmutable() && entity.isConstructorArgument(idProperty)) {  idValue=accessor.getProperty(idProperty);} else if (documentAccessor.hasValue(idProperty)) {  idValue=readIdValue(path,evaluator,idProperty,documentAccessor);  accessor.setProperty(idProperty,idValue);} @AT@ 11778 @LENGTH@ 68
------------INS MethodInvocation@@idProperty.isImmutable() @TO@ InfixExpression@@idProperty.isImmutable() && entity.isConstructorArgument(idProperty) @AT@ 11778 @LENGTH@ 24
---------------INS SimpleName@@Name:idProperty @TO@ MethodInvocation@@idProperty.isImmutable() @AT@ 11778 @LENGTH@ 10
---------------INS SimpleName@@MethodName:isImmutable:[] @TO@ MethodInvocation@@idProperty.isImmutable() @AT@ 11789 @LENGTH@ 13
------------INS Operator@@&& @TO@ InfixExpression@@idProperty.isImmutable() && entity.isConstructorArgument(idProperty) @AT@ 11802 @LENGTH@ 2
------------INS MethodInvocation@@entity.isConstructorArgument(idProperty) @TO@ InfixExpression@@idProperty.isImmutable() && entity.isConstructorArgument(idProperty) @AT@ 11806 @LENGTH@ 40
---------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.isConstructorArgument(idProperty) @AT@ 11806 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isConstructorArgument:[idProperty] @TO@ MethodInvocation@@entity.isConstructorArgument(idProperty) @AT@ 11813 @LENGTH@ 33
------------------INS SimpleName@@idProperty @TO@ SimpleName@@MethodName:isConstructorArgument:[idProperty] @AT@ 11835 @LENGTH@ 10
---------INS Block@@ThenBody:{  idValue=accessor.getProperty(idProperty);} @TO@ IfStatement@@if (idProperty.isImmutable() && entity.isConstructorArgument(idProperty)) {  idValue=accessor.getProperty(idProperty);} else if (documentAccessor.hasValue(idProperty)) {  idValue=readIdValue(path,evaluator,idProperty,documentAccessor);  accessor.setProperty(idProperty,idValue);} @AT@ 11848 @LENGTH@ 54
------------INS ExpressionStatement@@Assignment:idValue=accessor.getProperty(idProperty) @TO@ Block@@ThenBody:{  idValue=accessor.getProperty(idProperty);} @AT@ 11854 @LENGTH@ 43
---------------INS Assignment@@idValue=accessor.getProperty(idProperty) @TO@ ExpressionStatement@@Assignment:idValue=accessor.getProperty(idProperty) @AT@ 11854 @LENGTH@ 42
------------------INS SimpleName@@idValue @TO@ Assignment@@idValue=accessor.getProperty(idProperty) @AT@ 11854 @LENGTH@ 7
------------------INS Operator@@= @TO@ Assignment@@idValue=accessor.getProperty(idProperty) @AT@ 11861 @LENGTH@ 1
------------------INS MethodInvocation@@accessor.getProperty(idProperty) @TO@ Assignment@@idValue=accessor.getProperty(idProperty) @AT@ 11864 @LENGTH@ 32
---------------------INS SimpleName@@Name:accessor @TO@ MethodInvocation@@accessor.getProperty(idProperty) @AT@ 11864 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getProperty:[idProperty] @TO@ MethodInvocation@@accessor.getProperty(idProperty) @AT@ 11873 @LENGTH@ 23
------------------------INS SimpleName@@idProperty @TO@ SimpleName@@MethodName:getProperty:[idProperty] @AT@ 11885 @LENGTH@ 10
---------INS Block@@ElseBody:if (documentAccessor.hasValue(idProperty)) {  idValue=readIdValue(path,evaluator,idProperty,documentAccessor);  accessor.setProperty(idProperty,idValue);} @TO@ IfStatement@@if (idProperty.isImmutable() && entity.isConstructorArgument(idProperty)) {  idValue=accessor.getProperty(idProperty);} else if (documentAccessor.hasValue(idProperty)) {  idValue=readIdValue(path,evaluator,idProperty,documentAccessor);  accessor.setProperty(idProperty,idValue);} @AT@ 11908 @LENGTH@ 171
------------MOV IfStatement@@if (idProperty != null && documentAccessor.hasValue(idProperty)) {  idValue=readIdValue(path,evaluator,idProperty,documentAccessor);  accessor.setProperty(idProperty,idValue);} @TO@ Block@@ElseBody:if (documentAccessor.hasValue(idProperty)) {  idValue=readIdValue(path,evaluator,idProperty,documentAccessor);  accessor.setProperty(idProperty,idValue);} @AT@ 11744 @LENGTH@ 190
---------------DEL InfixExpression@@idProperty != null && documentAccessor.hasValue(idProperty) @AT@ 11748 @LENGTH@ 59
------------------DEL InfixExpression@@idProperty != null @AT@ 11748 @LENGTH@ 18
---------------------DEL SimpleName@@idProperty @AT@ 11748 @LENGTH@ 10
---------------------DEL Operator@@!= @AT@ 11758 @LENGTH@ 2
---------------------DEL NullLiteral@@null @AT@ 11762 @LENGTH@ 4
------------------DEL Operator@@&& @AT@ 11766 @LENGTH@ 2
---------------MOV MethodInvocation@@documentAccessor.hasValue(idProperty) @TO@ IfStatement@@if (idProperty != null && documentAccessor.hasValue(idProperty)) {  idValue=readIdValue(path,evaluator,idProperty,documentAccessor);  accessor.setProperty(idProperty,idValue);} @AT@ 11770 @LENGTH@ 37


UPD EnhancedForStatement@@for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader())) {  for (  CapabilityServiceBuilder<?> builder : provider.getBuilders(registry,name,LocalGroupBuilderProvider.LOCAL)) {    builder.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();  }} @TO@ for (IdentityGroupServiceConfiguratorProvider provider : ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader())) {  for (  CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(registry,name,LocalGroupServiceConfiguratorProvider.LOCAL)) {    configurator.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();  }} @AT@ 2763 @LENGTH@ 415
---UPD SingleVariableDeclaration@@GroupAliasBuilderProvider provider @TO@ IdentityGroupServiceConfiguratorProvider provider @AT@ 2768 @LENGTH@ 34
------UPD SimpleType@@GroupAliasBuilderProvider @TO@ IdentityGroupServiceConfiguratorProvider @AT@ 2768 @LENGTH@ 25
---UPD MethodInvocation@@ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader()) @TO@ ServiceLoader.load(IdentityGroupServiceConfiguratorProvider.class,IdentityGroupServiceConfiguratorProvider.class.getClassLoader()) @AT@ 2805 @LENGTH@ 101
------UPD SimpleName@@MethodName:load:[GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader()] @TO@ MethodName:load:[IdentityGroupServiceConfiguratorProvider.class, IdentityGroupServiceConfiguratorProvider.class.getClassLoader()] @AT@ 2819 @LENGTH@ 87
---------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 2824 @LENGTH@ 31
---------UPD MethodInvocation@@GroupAliasBuilderProvider.class.getClassLoader() @TO@ IdentityGroupServiceConfiguratorProvider.class.getClassLoader() @AT@ 2857 @LENGTH@ 48
------------UPD TypeLiteral@@GroupAliasBuilderProvider.class @TO@ IdentityGroupServiceConfiguratorProvider.class @AT@ 2857 @LENGTH@ 31
---UPD EnhancedForStatement@@for (CapabilityServiceBuilder<?> builder : provider.getBuilders(registry,name,LocalGroupBuilderProvider.LOCAL)) {  builder.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();} @TO@ for (CapabilityServiceConfigurator configurator : provider.getServiceConfigurators(registry,name,LocalGroupServiceConfiguratorProvider.LOCAL)) {  configurator.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();} @AT@ 2922 @LENGTH@ 246
------UPD SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @TO@ CapabilityServiceConfigurator configurator @AT@ 2927 @LENGTH@ 35
---------DEL ParameterizedType@@CapabilityServiceBuilder<?> @AT@ 2927 @LENGTH@ 27
------------DEL SimpleType@@CapabilityServiceBuilder @AT@ 2927 @LENGTH@ 24
------------DEL WildcardType@@? @AT@ 2952 @LENGTH@ 1
---------UPD SimpleName@@builder @TO@ configurator @AT@ 2955 @LENGTH@ 7
---------INS SimpleType@@CapabilityServiceConfigurator @TO@ SingleVariableDeclaration@@CapabilityServiceBuilder<?> builder @AT@ 3004 @LENGTH@ 29
------UPD MethodInvocation@@provider.getBuilders(registry,name,LocalGroupBuilderProvider.LOCAL) @TO@ provider.getServiceConfigurators(registry,name,LocalGroupServiceConfiguratorProvider.LOCAL) @AT@ 2965 @LENGTH@ 69
---------UPD SimpleName@@MethodName:getBuilders:[registry, name, LocalGroupBuilderProvider.LOCAL] @TO@ MethodName:getServiceConfigurators:[registry, name, LocalGroupServiceConfiguratorProvider.LOCAL] @AT@ 2974 @LENGTH@ 60
------------UPD QualifiedName@@LocalGroupBuilderProvider.LOCAL @TO@ LocalGroupServiceConfiguratorProvider.LOCAL @AT@ 3002 @LENGTH@ 31
---------------UPD SimpleName@@LocalGroupBuilderProvider @TO@ LocalGroupServiceConfiguratorProvider @AT@ 3002 @LENGTH@ 25
------UPD ExpressionStatement@@MethodInvocation:builder.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ MethodInvocation:configurator.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 3054 @LENGTH@ 100
---------UPD MethodInvocation@@builder.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ configurator.configure(context).build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 3054 @LENGTH@ 99
------------UPD SimpleName@@Name:builder @TO@ Name:configurator @AT@ 3054 @LENGTH@ 7


DEL MethodDeclaration@@private, HttpHeaders, MethodName:buildHeaders, OAuth2AuthorizationCodeGrantRequest authorizationCodeGrantRequest,  @AT@ 3200 @LENGTH@ 691
---DEL Modifier@@private @AT@ 3200 @LENGTH@ 7
---DEL SimpleType@@HttpHeaders @AT@ 3208 @LENGTH@ 11
---DEL SimpleName@@MethodName:buildHeaders @AT@ 3220 @LENGTH@ 12
---DEL SingleVariableDeclaration@@OAuth2AuthorizationCodeGrantRequest authorizationCodeGrantRequest @AT@ 3233 @LENGTH@ 65
------DEL SimpleType@@OAuth2AuthorizationCodeGrantRequest @AT@ 3233 @LENGTH@ 35
------DEL SimpleName@@authorizationCodeGrantRequest @AT@ 3269 @LENGTH@ 29
---DEL VariableDeclarationStatement@@ClientRegistration clientRegistration=authorizationCodeGrantRequest.getClientRegistration(); @AT@ 3304 @LENGTH@ 94
------DEL SimpleType@@ClientRegistration @AT@ 3304 @LENGTH@ 18
------DEL VariableDeclarationFragment@@clientRegistration=authorizationCodeGrantRequest.getClientRegistration() @AT@ 3323 @LENGTH@ 74
---------DEL SimpleName@@clientRegistration @AT@ 3323 @LENGTH@ 18
---------DEL MethodInvocation@@authorizationCodeGrantRequest.getClientRegistration() @AT@ 3344 @LENGTH@ 53
------------DEL SimpleName@@Name:authorizationCodeGrantRequest @AT@ 3344 @LENGTH@ 29
------------DEL SimpleName@@MethodName:getClientRegistration:[] @AT@ 3374 @LENGTH@ 23
---DEL VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 3402 @LENGTH@ 40
------DEL SimpleType@@HttpHeaders @AT@ 3402 @LENGTH@ 11
------DEL VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 3414 @LENGTH@ 27
---------DEL SimpleName@@headers @AT@ 3414 @LENGTH@ 7
---------DEL ClassInstanceCreation@@HttpHeaders[] @AT@ 3424 @LENGTH@ 17
------------DEL New@@new @AT@ 3424 @LENGTH@ 3
------------DEL SimpleType@@HttpHeaders @AT@ 3428 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON_UTF8)) @AT@ 3445 @LENGTH@ 78
------DEL MethodInvocation@@headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON_UTF8)) @AT@ 3445 @LENGTH@ 77
---------DEL SimpleName@@Name:headers @AT@ 3445 @LENGTH@ 7
---------DEL SimpleName@@MethodName:setAccept:[Collections.singletonList(MediaType.APPLICATION_JSON_UTF8)] @AT@ 3453 @LENGTH@ 69
------------DEL MethodInvocation@@Collections.singletonList(MediaType.APPLICATION_JSON_UTF8) @AT@ 3463 @LENGTH@ 58
---------------DEL SimpleName@@Name:Collections @AT@ 3463 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:singletonList:[MediaType.APPLICATION_JSON_UTF8] @AT@ 3475 @LENGTH@ 46
------------------DEL QualifiedName@@MediaType.APPLICATION_JSON_UTF8 @AT@ 3489 @LENGTH@ 31
---------------------DEL SimpleName@@MediaType @AT@ 3489 @LENGTH@ 9
---------------------DEL SimpleName@@APPLICATION_JSON_UTF8 @AT@ 3499 @LENGTH@ 21
---DEL VariableDeclarationStatement@@final MediaType contentType=MediaType.valueOf(APPLICATION_FORM_URLENCODED_VALUE + ";charset=UTF-8"); @AT@ 3526 @LENGTH@ 102
------DEL Modifier@@final @AT@ 3526 @LENGTH@ 5
------DEL SimpleType@@MediaType @AT@ 3532 @LENGTH@ 9
------DEL VariableDeclarationFragment@@contentType=MediaType.valueOf(APPLICATION_FORM_URLENCODED_VALUE + ";charset=UTF-8") @AT@ 3542 @LENGTH@ 85
---------DEL SimpleName@@contentType @AT@ 3542 @LENGTH@ 11
---------DEL MethodInvocation@@MediaType.valueOf(APPLICATION_FORM_URLENCODED_VALUE + ";charset=UTF-8") @AT@ 3556 @LENGTH@ 71
------------DEL SimpleName@@Name:MediaType @AT@ 3556 @LENGTH@ 9
------------DEL SimpleName@@MethodName:valueOf:[APPLICATION_FORM_URLENCODED_VALUE + ";charset=UTF-8"] @AT@ 3566 @LENGTH@ 61
---------------DEL InfixExpression@@APPLICATION_FORM_URLENCODED_VALUE + ";charset=UTF-8" @AT@ 3574 @LENGTH@ 52
------------------DEL SimpleName@@APPLICATION_FORM_URLENCODED_VALUE @AT@ 3574 @LENGTH@ 33
------------------DEL Operator@@+ @AT@ 3607 @LENGTH@ 1
------------------DEL StringLiteral@@";charset=UTF-8" @AT@ 3610 @LENGTH@ 16
---DEL ExpressionStatement@@MethodInvocation:headers.setContentType(contentType) @AT@ 3631 @LENGTH@ 36
------DEL MethodInvocation@@headers.setContentType(contentType) @AT@ 3631 @LENGTH@ 35
---------DEL SimpleName@@Name:headers @AT@ 3631 @LENGTH@ 7
---------DEL SimpleName@@MethodName:setContentType:[contentType] @AT@ 3639 @LENGTH@ 27
------------DEL SimpleName@@contentType @AT@ 3654 @LENGTH@ 11
---DEL IfStatement@@if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {  headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());} @AT@ 3670 @LENGTH@ 199
------DEL MethodInvocation@@ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod()) @AT@ 3674 @LENGTH@ 91
---------DEL QualifiedName@@Name:ClientAuthenticationMethod.BASIC @AT@ 3674 @LENGTH@ 32
---------DEL SimpleName@@MethodName:equals:[clientRegistration.getClientAuthenticationMethod()] @AT@ 3707 @LENGTH@ 58
------------DEL MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @AT@ 3714 @LENGTH@ 50
---------------DEL SimpleName@@Name:clientRegistration @AT@ 3714 @LENGTH@ 18
---------------DEL SimpleName@@MethodName:getClientAuthenticationMethod:[] @AT@ 3733 @LENGTH@ 31
------DEL Block@@ThenBody:{  headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());} @AT@ 3767 @LENGTH@ 102
---------DEL ExpressionStatement@@MethodInvocation:headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret()) @AT@ 3772 @LENGTH@ 93
------------DEL MethodInvocation@@headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret()) @AT@ 3772 @LENGTH@ 92
---------------DEL SimpleName@@Name:headers @AT@ 3772 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:setBasicAuth:[clientRegistration.getClientId(), clientRegistration.getClientSecret()] @AT@ 3780 @LENGTH@ 84
------------------DEL MethodInvocation@@clientRegistration.getClientId() @AT@ 3793 @LENGTH@ 32
---------------------DEL SimpleName@@Name:clientRegistration @AT@ 3793 @LENGTH@ 18
---------------------DEL SimpleName@@MethodName:getClientId:[] @AT@ 3812 @LENGTH@ 13
------------------DEL MethodInvocation@@clientRegistration.getClientSecret() @AT@ 3827 @LENGTH@ 36
---------------------DEL SimpleName@@Name:clientRegistration @AT@ 3827 @LENGTH@ 18
---------------------DEL SimpleName@@MethodName:getClientSecret:[] @AT@ 3846 @LENGTH@ 17
---DEL ReturnStatement@@SimpleName:headers @AT@ 3873 @LENGTH@ 15
------DEL SimpleName@@headers @AT@ 3880 @LENGTH@ 7


INS ExpressionStatement@@Assignment:jobParameters=new JobParameters() @TO@ MethodDeclaration@@public, void, MethodName:testStartNextInstanceSunnyDay, Exception,  @AT@ 5082 @LENGTH@ 36
---INS Assignment@@jobParameters=new JobParameters() @TO@ ExpressionStatement@@Assignment:jobParameters=new JobParameters() @AT@ 5082 @LENGTH@ 35
------INS SimpleName@@jobParameters @TO@ Assignment@@jobParameters=new JobParameters() @AT@ 5082 @LENGTH@ 13
------INS Operator@@= @TO@ Assignment@@jobParameters=new JobParameters() @AT@ 5095 @LENGTH@ 1
------INS ClassInstanceCreation@@JobParameters[] @TO@ Assignment@@jobParameters=new JobParameters() @AT@ 5098 @LENGTH@ 19
---------INS New@@new @TO@ ClassInstanceCreation@@JobParameters[] @AT@ 5098 @LENGTH@ 3
---------INS SimpleType@@JobParameters @TO@ ClassInstanceCreation@@JobParameters[] @AT@ 5102 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:testPre,  @TO@ public, void, MethodName:testPreOffsetAndPartitionAsStringHeader,  @AT@ 2285 @LENGTH@ 1473
---UPD SimpleName@@MethodName:testPre @TO@ MethodName:testPreOffsetAndPartitionAsStringHeader @AT@ 2297 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:Mockito.when(message.getHeader(KafkaSpanDecorator.OFFSET)).thenReturn(testOffset) @TO@ MethodInvocation:Mockito.when(message.getHeader(KafkaSpanDecorator.OFFSET,String.class)).thenReturn(testOffset) @AT@ 2883 @LENGTH@ 82
------UPD MethodInvocation@@Mockito.when(message.getHeader(KafkaSpanDecorator.OFFSET)).thenReturn(testOffset) @TO@ Mockito.when(message.getHeader(KafkaSpanDecorator.OFFSET,String.class)).thenReturn(testOffset) @AT@ 2883 @LENGTH@ 81
---------UPD MethodInvocation@@MethodName:when:[message.getHeader(KafkaSpanDecorator.OFFSET)] @TO@ MethodName:when:[message.getHeader(KafkaSpanDecorator.OFFSET,String.class)] @AT@ 2883 @LENGTH@ 58
------------UPD MethodInvocation@@message.getHeader(KafkaSpanDecorator.OFFSET) @TO@ message.getHeader(KafkaSpanDecorator.OFFSET,String.class) @AT@ 2896 @LENGTH@ 44
---------------UPD SimpleName@@MethodName:getHeader:[KafkaSpanDecorator.OFFSET] @TO@ MethodName:getHeader:[KafkaSpanDecorator.OFFSET, String.class] @AT@ 2904 @LENGTH@ 36
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getHeader:[KafkaSpanDecorator.OFFSET] @AT@ 3011 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:Mockito.when(message.getHeader(KafkaSpanDecorator.PARTITION)).thenReturn(testPartition) @TO@ MethodInvocation:Mockito.when(message.getHeader(KafkaSpanDecorator.PARTITION,String.class)).thenReturn(testPartition) @AT@ 2974 @LENGTH@ 88
------UPD MethodInvocation@@Mockito.when(message.getHeader(KafkaSpanDecorator.PARTITION)).thenReturn(testPartition) @TO@ Mockito.when(message.getHeader(KafkaSpanDecorator.PARTITION,String.class)).thenReturn(testPartition) @AT@ 2974 @LENGTH@ 87
---------UPD MethodInvocation@@MethodName:when:[message.getHeader(KafkaSpanDecorator.PARTITION)] @TO@ MethodName:when:[message.getHeader(KafkaSpanDecorator.PARTITION,String.class)] @AT@ 2974 @LENGTH@ 61
------------UPD MethodInvocation@@message.getHeader(KafkaSpanDecorator.PARTITION) @TO@ message.getHeader(KafkaSpanDecorator.PARTITION,String.class) @AT@ 2987 @LENGTH@ 47
---------------UPD SimpleName@@MethodName:getHeader:[KafkaSpanDecorator.PARTITION] @TO@ MethodName:getHeader:[KafkaSpanDecorator.PARTITION, String.class] @AT@ 2995 @LENGTH@ 39
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getHeader:[KafkaSpanDecorator.PARTITION] @AT@ 3119 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:commenceWhenNoSubscriberThenNothingHappens,  @TO@ TypeDeclaration@@[public]BearerTokenServerAuthenticationEntryPointTests,  @AT@ 4303 @LENGTH@ 244
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenNoSubscriberThenNothingHappens,  @AT@ 4303 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenNoSubscriberThenNothingHappens,  @AT@ 4310 @LENGTH@ 4
---INS SimpleName@@MethodName:commenceWhenNoSubscriberThenNothingHappens @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenNoSubscriberThenNothingHappens,  @AT@ 4315 @LENGTH@ 42
---INS ExpressionStatement@@MethodInvocation:this.entryPoint.commence(this.exchange,new BadCredentialsException("")) @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenNoSubscriberThenNothingHappens,  @AT@ 4364 @LENGTH@ 73
------INS MethodInvocation@@this.entryPoint.commence(this.exchange,new BadCredentialsException("")) @TO@ ExpressionStatement@@MethodInvocation:this.entryPoint.commence(this.exchange,new BadCredentialsException("")) @AT@ 4364 @LENGTH@ 72
---------INS FieldAccess@@this.entryPoint @TO@ MethodInvocation@@this.entryPoint.commence(this.exchange,new BadCredentialsException("")) @AT@ 4364 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.entryPoint @AT@ 4364 @LENGTH@ 4
------------INS SimpleName@@entryPoint @TO@ FieldAccess@@this.entryPoint @AT@ 4369 @LENGTH@ 10
---------INS SimpleName@@MethodName:commence:[this.exchange, new BadCredentialsException("")] @TO@ MethodInvocation@@this.entryPoint.commence(this.exchange,new BadCredentialsException("")) @AT@ 4380 @LENGTH@ 56
------------INS FieldAccess@@this.exchange @TO@ SimpleName@@MethodName:commence:[this.exchange, new BadCredentialsException("")] @AT@ 4389 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.exchange @AT@ 4389 @LENGTH@ 4
---------------INS SimpleName@@exchange @TO@ FieldAccess@@this.exchange @AT@ 4394 @LENGTH@ 8
------------INS ClassInstanceCreation@@BadCredentialsException[""] @TO@ SimpleName@@MethodName:commence:[this.exchange, new BadCredentialsException("")] @AT@ 4404 @LENGTH@ 31
---------------INS New@@new @TO@ ClassInstanceCreation@@BadCredentialsException[""] @AT@ 4404 @LENGTH@ 3
---------------INS SimpleType@@BadCredentialsException @TO@ ClassInstanceCreation@@BadCredentialsException[""] @AT@ 4408 @LENGTH@ 23
---------------INS StringLiteral@@"" @TO@ ClassInstanceCreation@@BadCredentialsException[""] @AT@ 4432 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(getResponse().getHeaders()).isEmpty() @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenNoSubscriberThenNothingHappens,  @AT@ 4441 @LENGTH@ 49
------INS MethodInvocation@@assertThat(getResponse().getHeaders()).isEmpty() @TO@ ExpressionStatement@@MethodInvocation:assertThat(getResponse().getHeaders()).isEmpty() @AT@ 4441 @LENGTH@ 48
---------INS MethodInvocation@@MethodName:assertThat:[getResponse().getHeaders()] @TO@ MethodInvocation@@assertThat(getResponse().getHeaders()).isEmpty() @AT@ 4441 @LENGTH@ 38
------------INS MethodInvocation@@getResponse().getHeaders() @TO@ MethodInvocation@@MethodName:assertThat:[getResponse().getHeaders()] @AT@ 4452 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:getResponse:[] @TO@ MethodInvocation@@getResponse().getHeaders() @AT@ 4452 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getHeaders:[] @TO@ MethodInvocation@@getResponse().getHeaders() @AT@ 4466 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@assertThat(getResponse().getHeaders()).isEmpty() @AT@ 4480 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(getResponse().getStatusCode()).isNull() @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenNoSubscriberThenNothingHappens,  @AT@ 4493 @LENGTH@ 51
------INS MethodInvocation@@assertThat(getResponse().getStatusCode()).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(getResponse().getStatusCode()).isNull() @AT@ 4493 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:assertThat:[getResponse().getStatusCode()] @TO@ MethodInvocation@@assertThat(getResponse().getStatusCode()).isNull() @AT@ 4493 @LENGTH@ 41
------------INS MethodInvocation@@getResponse().getStatusCode() @TO@ MethodInvocation@@MethodName:assertThat:[getResponse().getStatusCode()] @AT@ 4504 @LENGTH@ 29
---------------INS MethodInvocation@@MethodName:getResponse:[] @TO@ MethodInvocation@@getResponse().getStatusCode() @AT@ 4504 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getStatusCode:[] @TO@ MethodInvocation@@getResponse().getStatusCode() @AT@ 4518 @LENGTH@ 15
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(getResponse().getStatusCode()).isNull() @AT@ 4535 @LENGTH@ 8


UPD VariableDeclarationStatement@@GeoCoderEndpoint endpoint=context.getEndpoint("geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" + getApiKey(),GeoCoderEndpoint.class); @TO@ GeoCoderEndpoint endpoint=context.getEndpoint("geocoder:address:current?headersOnly=true&proxyHost=localhost" + "&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" + getApiKey(),GeoCoderEndpoint.class); @AT@ 1940 @LENGTH@ 275
---UPD VariableDeclarationFragment@@endpoint=context.getEndpoint("geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" + getApiKey(),GeoCoderEndpoint.class) @TO@ endpoint=context.getEndpoint("geocoder:address:current?headersOnly=true&proxyHost=localhost" + "&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" + getApiKey(),GeoCoderEndpoint.class) @AT@ 1957 @LENGTH@ 257
------UPD MethodInvocation@@context.getEndpoint("geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" + getApiKey(),GeoCoderEndpoint.class) @TO@ context.getEndpoint("geocoder:address:current?headersOnly=true&proxyHost=localhost" + "&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" + getApiKey(),GeoCoderEndpoint.class) @AT@ 1968 @LENGTH@ 246
---------UPD SimpleName@@MethodName:getEndpoint:["geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" + getApiKey(), GeoCoderEndpoint.class] @TO@ MethodName:getEndpoint:["geocoder:address:current?headersOnly=true&proxyHost=localhost" + "&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" + getApiKey(), GeoCoderEndpoint.class] @AT@ 1976 @LENGTH@ 238
------------UPD InfixExpression@@"geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" + getApiKey() @TO@ "geocoder:address:current?headersOnly=true&proxyHost=localhost" + "&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" + getApiKey() @AT@ 2005 @LENGTH@ 168
---------------UPD StringLiteral@@"geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" @TO@ "geocoder:address:current?headersOnly=true&proxyHost=localhost" @AT@ 2005 @LENGTH@ 156
---------------INS StringLiteral@@"&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" @TO@ InfixExpression@@"geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey=" + getApiKey() @AT@ 2146 @LENGTH@ 95


INS IfStatement@@if (this.delegate instanceof AutorecoveringChannel) {  ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.delegate);} @TO@ MethodDeclaration@@public, void, MethodName:close, int closeCode, String closeMessage, IOException, TimeoutException,  @AT@ 5867 @LENGTH@ 138
---INS InstanceofExpression@@this.delegate instanceof AutorecoveringChannel @TO@ IfStatement@@if (this.delegate instanceof AutorecoveringChannel) {  ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.delegate);} @AT@ 5871 @LENGTH@ 46
------INS FieldAccess@@this.delegate @TO@ InstanceofExpression@@this.delegate instanceof AutorecoveringChannel @AT@ 5871 @LENGTH@ 13
---------INS ThisExpression@@this @TO@ FieldAccess@@this.delegate @AT@ 5871 @LENGTH@ 4
---------INS SimpleName@@delegate @TO@ FieldAccess@@this.delegate @AT@ 5876 @LENGTH@ 8
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@this.delegate instanceof AutorecoveringChannel @AT@ 5885 @LENGTH@ 10
------INS SimpleType@@AutorecoveringChannel @TO@ InstanceofExpression@@this.delegate instanceof AutorecoveringChannel @AT@ 5896 @LENGTH@ 21
---INS Block@@ThenBody:{  ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.delegate);} @TO@ IfStatement@@if (this.delegate instanceof AutorecoveringChannel) {  ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.delegate);} @AT@ 5919 @LENGTH@ 86
------INS ExpressionStatement@@MethodInvocation:ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.delegate) @TO@ Block@@ThenBody:{  ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.delegate);} @AT@ 5924 @LENGTH@ 77
---------INS MethodInvocation@@ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.delegate) @TO@ ExpressionStatement@@MethodInvocation:ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.delegate) @AT@ 5924 @LENGTH@ 76
------------INS SimpleName@@Name:ClosingRecoveryListener @TO@ MethodInvocation@@ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.delegate) @AT@ 5924 @LENGTH@ 23
------------INS SimpleName@@MethodName:removeChannel:[(AutorecoveringChannel)this.delegate] @TO@ MethodInvocation@@ClosingRecoveryListener.removeChannel((AutorecoveringChannel)this.delegate) @AT@ 5948 @LENGTH@ 52
---------------INS CastExpression@@(AutorecoveringChannel)this.delegate @TO@ SimpleName@@MethodName:removeChannel:[(AutorecoveringChannel)this.delegate] @AT@ 5962 @LENGTH@ 37
------------------INS SimpleType@@AutorecoveringChannel @TO@ CastExpression@@(AutorecoveringChannel)this.delegate @AT@ 5963 @LENGTH@ 21
------------------INS FieldAccess@@this.delegate @TO@ CastExpression@@(AutorecoveringChannel)this.delegate @AT@ 5986 @LENGTH@ 13
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.delegate @AT@ 5986 @LENGTH@ 4
---------------------INS SimpleName@@delegate @TO@ FieldAccess@@this.delegate @AT@ 5991 @LENGTH@ 8


UPD VariableDeclarationStatement@@Cache<?,?> cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2088 @LENGTH@ 172
---UPD VariableDeclarationFragment@@cache=ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2100 @LENGTH@ 159
------UPD MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2108 @LENGTH@ 151
---------DEL SimpleName@@Name:ServiceContainerHelper @AT@ 2108 @LENGTH@ 22
---------INS ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2111 @LENGTH@ 157
------------INS New@@new @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2111 @LENGTH@ 3
------------INS ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2115 @LENGTH@ 35
---------------INS SimpleType@@PassiveServiceSupplier @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2115 @LENGTH@ 22
---------------INS ParameterizedType@@Cache<?,?> @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2138 @LENGTH@ 11
------------------INS SimpleType@@Cache @TO@ ParameterizedType@@Cache<?,?> @AT@ 2138 @LENGTH@ 5
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2144 @LENGTH@ 1
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2147 @LENGTH@ 1
------------INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2151 @LENGTH@ 32
---------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2141 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2149 @LENGTH@ 25
------------------UPD BooleanLiteral@@false @TO@ true @AT@ 2168 @LENGTH@ 5
------------MOV MethodInvocation@@InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2176 @LENGTH@ 82
---------DEL SimpleName@@MethodName:findValue:[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2131 @LENGTH@ 128
------------DEL MethodInvocation@@context.getServiceRegistry(false) @AT@ 2141 @LENGTH@ 33
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2269 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:this.requiresAuthenticationMatcher=new PathPatternParserServerWebExchangeMatcher("/authorize/oauth2/code/{registrationId}") @TO@ Assignment:this.requiresAuthenticationMatcher=new PathPatternParserServerWebExchangeMatcher("/{action}/oauth2/code/{registrationId}") @AT@ 6130 @LENGTH@ 126
---UPD Assignment@@this.requiresAuthenticationMatcher=new PathPatternParserServerWebExchangeMatcher("/authorize/oauth2/code/{registrationId}") @TO@ this.requiresAuthenticationMatcher=new PathPatternParserServerWebExchangeMatcher("/{action}/oauth2/code/{registrationId}") @AT@ 6130 @LENGTH@ 125
------UPD ClassInstanceCreation@@PathPatternParserServerWebExchangeMatcher["/authorize/oauth2/code/{registrationId}"] @TO@ PathPatternParserServerWebExchangeMatcher["/{action}/oauth2/code/{registrationId}"] @AT@ 6167 @LENGTH@ 88
---------UPD StringLiteral@@"/authorize/oauth2/code/{registrationId}" @TO@ "/{action}/oauth2/code/{registrationId}" @AT@ 6213 @LENGTH@ 41


UPD FieldDeclaration@@private, ServerWebExchangeMatcher, [saveRequestMatcher=ServerWebExchangeMatchers.pathMatchers(HttpMethod.GET,"/**")] @TO@ private, ServerWebExchangeMatcher, [saveRequestMatcher=createDefaultRequestMacher()] @AT@ 1797 @LENGTH@ 119
---UPD VariableDeclarationFragment@@saveRequestMatcher=ServerWebExchangeMatchers.pathMatchers(HttpMethod.GET,"/**") @TO@ get=ServerWebExchangeMatchers.pathMatchers(HttpMethod.GET,"/**") @AT@ 1830 @LENGTH@ 85
---INS VariableDeclarationFragment@@saveRequestMatcher=createDefaultRequestMacher() @TO@ FieldDeclaration@@private, ServerWebExchangeMatcher, [saveRequestMatcher=ServerWebExchangeMatchers.pathMatchers(HttpMethod.GET,"/**")] @AT@ 2180 @LENGTH@ 49
------INS SimpleName@@saveRequestMatcher @TO@ VariableDeclarationFragment@@saveRequestMatcher=createDefaultRequestMacher() @AT@ 2180 @LENGTH@ 18
------INS MethodInvocation@@MethodName:createDefaultRequestMacher:[] @TO@ VariableDeclarationFragment@@saveRequestMatcher=createDefaultRequestMacher() @AT@ 2201 @LENGTH@ 28


INS ExpressionStatement@@MethodInvocation:handleResolveObj(exception) @TO@ MethodDeclaration@@private, void, MethodName:handleBindException, String bindPrincipal, NamingException exception,  @AT@ 8647 @LENGTH@ 28
---INS MethodInvocation@@handleResolveObj(exception) @TO@ ExpressionStatement@@MethodInvocation:handleResolveObj(exception) @AT@ 8647 @LENGTH@ 27
------INS SimpleName@@MethodName:handleResolveObj:[exception] @TO@ MethodInvocation@@handleResolveObj(exception) @AT@ 8647 @LENGTH@ 27
---------INS SimpleName@@exception @TO@ SimpleName@@MethodName:handleResolveObj:[exception] @AT@ 8664 @LENGTH@ 9


UPD MethodDeclaration@@public, Long, MethodName:startNextInstance, String jobName, NoSuchJobException, JobParametersNotFoundException, UnexpectedJobExecutionException, JobParametersInvalidException,  @TO@ public, Long, MethodName:startNextInstance, String jobName, NoSuchJobException, UnexpectedJobExecutionException, JobParametersInvalidException,  @AT@ 11658 @LENGTH@ 1760
---DEL SimpleType@@JobParametersNotFoundException @AT@ 11731 @LENGTH@ 30
---INS VariableDeclarationStatement@@JobParameters parameters=new JobParametersBuilder(jobExplorer).getNextJobParameters(job).toJobParameters(); @TO@ MethodDeclaration@@public, Long, MethodName:startNextInstance, String jobName, NoSuchJobException, JobParametersNotFoundException, UnexpectedJobExecutionException, JobParametersInvalidException,  @AT@ 11876 @LENGTH@ 119
------INS VariableDeclarationFragment@@parameters=new JobParametersBuilder(jobExplorer).getNextJobParameters(job).toJobParameters() @TO@ VariableDeclarationStatement@@JobParameters parameters=new JobParametersBuilder(jobExplorer).getNextJobParameters(job).toJobParameters(); @AT@ 11890 @LENGTH@ 104
---------INS MethodInvocation@@new JobParametersBuilder(jobExplorer).getNextJobParameters(job).toJobParameters() @TO@ VariableDeclarationFragment@@parameters=new JobParametersBuilder(jobExplorer).getNextJobParameters(job).toJobParameters() @AT@ 11903 @LENGTH@ 91
------------INS MethodInvocation@@MethodName:getNextJobParameters:[job] @TO@ MethodInvocation@@new JobParametersBuilder(jobExplorer).getNextJobParameters(job).toJobParameters() @AT@ 11903 @LENGTH@ 68
---------------MOV SimpleName@@Name:jobExplorer @TO@ MethodInvocation@@MethodName:getNextJobParameters:[job] @AT@ 12553 @LENGTH@ 11
------------INS ClassInstanceCreation@@JobParametersBuilder[jobExplorer] @TO@ MethodInvocation@@new JobParametersBuilder(jobExplorer).getNextJobParameters(job).toJobParameters() @AT@ 11903 @LENGTH@ 37
---------------INS SimpleName@@jobExplorer @TO@ ClassInstanceCreation@@JobParametersBuilder[jobExplorer] @AT@ 11928 @LENGTH@ 11
---------------MOV New@@new @TO@ ClassInstanceCreation@@JobParametersBuilder[jobExplorer] @AT@ 12408 @LENGTH@ 3
---------------MOV SimpleType@@JobParametersNotFoundException @TO@ ClassInstanceCreation@@JobParametersBuilder[jobExplorer] @AT@ 12412 @LENGTH@ 30
------------MOV SimpleName@@MethodName:getJobParameters:[] @TO@ MethodInvocation@@new JobParametersBuilder(jobExplorer).getNextJobParameters(job).toJobParameters() @AT@ 12663 @LENGTH@ 18
---------MOV SimpleName@@parameters @TO@ VariableDeclarationFragment@@parameters=new JobParametersBuilder(jobExplorer).getNextJobParameters(job).toJobParameters() @AT@ 12266 @LENGTH@ 10
------MOV SimpleType@@JobParameters @TO@ VariableDeclarationStatement@@JobParameters parameters=new JobParametersBuilder(jobExplorer).getNextJobParameters(job).toJobParameters(); @AT@ 12252 @LENGTH@ 13
---DEL VariableDeclarationStatement@@List<JobInstance> lastInstances=jobExplorer.getJobInstances(jobName,0,1); @AT@ 11958 @LENGTH@ 77
------DEL ParameterizedType@@List<JobInstance> @AT@ 11958 @LENGTH@ 17
---------DEL SimpleType@@List @AT@ 11958 @LENGTH@ 4
---------DEL SimpleType@@JobInstance @AT@ 11963 @LENGTH@ 11
------DEL VariableDeclarationFragment@@lastInstances=jobExplorer.getJobInstances(jobName,0,1) @AT@ 11976 @LENGTH@ 58
---------DEL SimpleName@@lastInstances @AT@ 11976 @LENGTH@ 13
---------DEL MethodInvocation@@jobExplorer.getJobInstances(jobName,0,1) @AT@ 11992 @LENGTH@ 42
------------DEL SimpleName@@Name:jobExplorer @AT@ 11992 @LENGTH@ 11
------------DEL SimpleName@@MethodName:getJobInstances:[jobName, 0, 1] @AT@ 12004 @LENGTH@ 30
---------------DEL SimpleName@@jobName @AT@ 12020 @LENGTH@ 7
---------------DEL NumberLiteral@@0 @AT@ 12029 @LENGTH@ 1
---------------DEL NumberLiteral@@1 @AT@ 12032 @LENGTH@ 1
---DEL VariableDeclarationStatement@@JobParametersIncrementer incrementer=job.getJobParametersIncrementer(); @AT@ 12039 @LENGTH@ 73
------DEL SimpleType@@JobParametersIncrementer @AT@ 12039 @LENGTH@ 24
------DEL VariableDeclarationFragment@@incrementer=job.getJobParametersIncrementer() @AT@ 12064 @LENGTH@ 47
---------DEL SimpleName@@incrementer @AT@ 12064 @LENGTH@ 11
---------DEL MethodInvocation@@job.getJobParametersIncrementer() @AT@ 12078 @LENGTH@ 33
------------DEL SimpleName@@Name:job @AT@ 12078 @LENGTH@ 3
------------DEL SimpleName@@MethodName:getJobParametersIncrementer:[] @AT@ 12082 @LENGTH@ 29
---DEL IfStatement@@if (incrementer == null) {  throw new JobParametersNotFoundException("No job parameters incrementer found for job=" + jobName);} @AT@ 12115 @LENGTH@ 133
------DEL InfixExpression@@incrementer == null @AT@ 12119 @LENGTH@ 19
---------DEL SimpleName@@incrementer @AT@ 12119 @LENGTH@ 11
---------DEL Operator@@== @AT@ 12130 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 12134 @LENGTH@ 4
------DEL Block@@ThenBody:{  throw new JobParametersNotFoundException("No job parameters incrementer found for job=" + jobName);} @AT@ 12140 @LENGTH@ 108
---------DEL ThrowStatement@@ClassInstanceCreation:new JobParametersNotFoundException("No job parameters incrementer found for job=" + jobName) @AT@ 12145 @LENGTH@ 99
------------DEL ClassInstanceCreation@@JobParametersNotFoundException["No job parameters incrementer found for job=" + jobName] @AT@ 12151 @LENGTH@ 92
---------------DEL New@@new @AT@ 12151 @LENGTH@ 3
---------------DEL SimpleType@@JobParametersNotFoundException @AT@ 12155 @LENGTH@ 30
---------------DEL InfixExpression@@"No job parameters incrementer found for job=" + jobName @AT@ 12186 @LENGTH@ 56
------------------DEL StringLiteral@@"No job parameters incrementer found for job=" @AT@ 12186 @LENGTH@ 46
------------------DEL Operator@@+ @AT@ 12232 @LENGTH@ 1
------------------DEL SimpleName@@jobName @AT@ 12235 @LENGTH@ 7
---DEL VariableDeclarationStatement@@JobParameters parameters; @AT@ 12252 @LENGTH@ 25
------DEL VariableDeclarationFragment@@parameters @AT@ 12266 @LENGTH@ 10
---DEL IfStatement@@if (lastInstances.isEmpty()) {  parameters=incrementer.getNext(new JobParameters());  if (parameters == null) {    throw new JobParametersNotFoundException("No bootstrap parameters found for job=" + jobName);  }} else {  List<JobExecution> lastExecutions=jobExplorer.getJobExecutions(lastInstances.get(0));  parameters=incrementer.getNext(lastExecutions.get(0).getJobParameters());} @AT@ 12280 @LENGTH@ 407
------DEL MethodInvocation@@lastInstances.isEmpty() @AT@ 12284 @LENGTH@ 23
---------DEL SimpleName@@Name:lastInstances @AT@ 12284 @LENGTH@ 13
---------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 12298 @LENGTH@ 9
------DEL Block@@ThenBody:{  parameters=incrementer.getNext(new JobParameters());  if (parameters == null) {    throw new JobParametersNotFoundException("No bootstrap parameters found for job=" + jobName);  }} @AT@ 12309 @LENGTH@ 195
---------DEL ExpressionStatement@@Assignment:parameters=incrementer.getNext(new JobParameters()) @AT@ 12314 @LENGTH@ 54
------------DEL Assignment@@parameters=incrementer.getNext(new JobParameters()) @AT@ 12314 @LENGTH@ 53
---------------DEL SimpleName@@parameters @AT@ 12314 @LENGTH@ 10
---------------DEL Operator@@= @AT@ 12324 @LENGTH@ 1
---------------DEL MethodInvocation@@incrementer.getNext(new JobParameters()) @AT@ 12327 @LENGTH@ 40
------------------DEL SimpleName@@Name:incrementer @AT@ 12327 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:getNext:[new JobParameters()] @AT@ 12339 @LENGTH@ 28
---------------------DEL ClassInstanceCreation@@JobParameters[] @AT@ 12347 @LENGTH@ 19
------------------------DEL New@@new @AT@ 12347 @LENGTH@ 3
------------------------DEL SimpleType@@JobParameters @AT@ 12351 @LENGTH@ 13
---------DEL IfStatement@@if (parameters == null) {  throw new JobParametersNotFoundException("No bootstrap parameters found for job=" + jobName);} @AT@ 12372 @LENGTH@ 128
------------DEL InfixExpression@@parameters == null @AT@ 12376 @LENGTH@ 18
---------------DEL SimpleName@@parameters @AT@ 12376 @LENGTH@ 10
---------------DEL Operator@@== @AT@ 12386 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 12390 @LENGTH@ 4
------------DEL Block@@ThenBody:{  throw new JobParametersNotFoundException("No bootstrap parameters found for job=" + jobName);} @AT@ 12396 @LENGTH@ 104
---------------DEL ThrowStatement@@ClassInstanceCreation:new JobParametersNotFoundException("No bootstrap parameters found for job=" + jobName) @AT@ 12402 @LENGTH@ 93
------------------DEL ClassInstanceCreation@@JobParametersNotFoundException["No bootstrap parameters found for job=" + jobName] @AT@ 12408 @LENGTH@ 86
---------------------DEL InfixExpression@@"No bootstrap parameters found for job=" + jobName @AT@ 12443 @LENGTH@ 50
------------------------DEL StringLiteral@@"No bootstrap parameters found for job=" @AT@ 12443 @LENGTH@ 40
------------------------DEL Operator@@+ @AT@ 12483 @LENGTH@ 1
------------------------DEL SimpleName@@jobName @AT@ 12486 @LENGTH@ 7
------DEL Block@@ElseBody:{  List<JobExecution> lastExecutions=jobExplorer.getJobExecutions(lastInstances.get(0));  parameters=incrementer.getNext(lastExecutions.get(0).getJobParameters());} @AT@ 12512 @LENGTH@ 175
---------DEL VariableDeclarationStatement@@List<JobExecution> lastExecutions=jobExplorer.getJobExecutions(lastInstances.get(0)); @AT@ 12517 @LENGTH@ 87
------------DEL ParameterizedType@@List<JobExecution> @AT@ 12517 @LENGTH@ 18
---------------DEL SimpleType@@List @AT@ 12517 @LENGTH@ 4
---------------DEL SimpleType@@JobExecution @AT@ 12522 @LENGTH@ 12
------------DEL VariableDeclarationFragment@@lastExecutions=jobExplorer.getJobExecutions(lastInstances.get(0)) @AT@ 12536 @LENGTH@ 67
---------------DEL SimpleName@@lastExecutions @AT@ 12536 @LENGTH@ 14
---------------DEL MethodInvocation@@jobExplorer.getJobExecutions(lastInstances.get(0)) @AT@ 12553 @LENGTH@ 50
------------------DEL SimpleName@@MethodName:getJobExecutions:[lastInstances.get(0)] @AT@ 12565 @LENGTH@ 38
---------------------DEL MethodInvocation@@lastInstances.get(0) @AT@ 12582 @LENGTH@ 20
------------------------DEL SimpleName@@Name:lastInstances @AT@ 12582 @LENGTH@ 13
------------------------DEL SimpleName@@MethodName:get:[0] @AT@ 12596 @LENGTH@ 6
---------------------------DEL NumberLiteral@@0 @AT@ 12600 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:parameters=incrementer.getNext(lastExecutions.get(0).getJobParameters()) @AT@ 12608 @LENGTH@ 75
------------DEL Assignment@@parameters=incrementer.getNext(lastExecutions.get(0).getJobParameters()) @AT@ 12608 @LENGTH@ 74
---------------DEL SimpleName@@parameters @AT@ 12608 @LENGTH@ 10
---------------DEL Operator@@= @AT@ 12618 @LENGTH@ 1
---------------DEL MethodInvocation@@incrementer.getNext(lastExecutions.get(0).getJobParameters()) @AT@ 12621 @LENGTH@ 61
------------------DEL SimpleName@@Name:incrementer @AT@ 12621 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:getNext:[lastExecutions.get(0).getJobParameters()] @AT@ 12633 @LENGTH@ 49
---------------------DEL MethodInvocation@@lastExecutions.get(0).getJobParameters() @AT@ 12641 @LENGTH@ 40
------------------------DEL MethodInvocation@@MethodName:get:[0] @AT@ 12641 @LENGTH@ 21
---------------------------DEL NumberLiteral@@0 @AT@ 12660 @LENGTH@ 1
------------------------DEL SimpleName@@Name:lastExecutions @AT@ 12641 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:assertTrue(cause.getMessage().startsWith("Cannot moved existing file")) @TO@ MethodInvocation:assertTrue(cause.getMessage().startsWith("Cannot move existing file")) @AT@ 6262 @LENGTH@ 72
---UPD MethodInvocation@@assertTrue(cause.getMessage().startsWith("Cannot moved existing file")) @TO@ assertTrue(cause.getMessage().startsWith("Cannot move existing file")) @AT@ 6262 @LENGTH@ 71
------UPD SimpleName@@MethodName:assertTrue:[cause.getMessage().startsWith("Cannot moved existing file")] @TO@ MethodName:assertTrue:[cause.getMessage().startsWith("Cannot move existing file")] @AT@ 6262 @LENGTH@ 71
---------UPD MethodInvocation@@cause.getMessage().startsWith("Cannot moved existing file") @TO@ cause.getMessage().startsWith("Cannot move existing file") @AT@ 6273 @LENGTH@ 59
------------UPD SimpleName@@MethodName:startsWith:["Cannot moved existing file"] @TO@ MethodName:startsWith:["Cannot move existing file"] @AT@ 6292 @LENGTH@ 40
---------------UPD StringLiteral@@"Cannot moved existing file" @TO@ "Cannot move existing file" @AT@ 6303 @LENGTH@ 28


UPD VariableDeclarationStatement@@Cache<?,?> cache=ServiceContainerHelper.findValue(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2178 @LENGTH@ 171
---UPD VariableDeclarationFragment@@cache=ServiceContainerHelper.findValue(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2190 @LENGTH@ 158
------UPD MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2198 @LENGTH@ 150
---------DEL SimpleName@@Name:ServiceContainerHelper @AT@ 2198 @LENGTH@ 22
---------INS ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ MethodInvocation@@ServiceContainerHelper.findValue(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)) @AT@ 2201 @LENGTH@ 157
------------INS New@@new @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2201 @LENGTH@ 3
------------INS ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2205 @LENGTH@ 35
---------------INS SimpleType@@PassiveServiceSupplier @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2205 @LENGTH@ 22
---------------INS ParameterizedType@@Cache<?,?> @TO@ ParameterizedType@@PassiveServiceSupplier<Cache<?,?>> @AT@ 2228 @LENGTH@ 11
------------------INS SimpleType@@Cache @TO@ ParameterizedType@@Cache<?,?> @AT@ 2228 @LENGTH@ 5
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2234 @LENGTH@ 1
------------------INS WildcardType@@? @TO@ ParameterizedType@@Cache<?,?> @AT@ 2237 @LENGTH@ 1
------------MOV MethodInvocation@@context.getServiceRegistry(true) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2231 @LENGTH@ 32
------------MOV MethodInvocation@@InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2265 @LENGTH@ 82
---------UPD SimpleName@@MethodName:findValue:[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ MethodName:get:[] @AT@ 2221 @LENGTH@ 127


UPD MethodDeclaration@@CapabilityServiceBuilder<SingleSignOnManager>, MethodName:getBuilder, ServiceName name, String securityDomainName, SessionIdGenerator generator,  @TO@ CapabilityServiceConfigurator, MethodName:getServiceConfigurator, ServiceName name, String securityDomainName, SessionIdGenerator generator,  @AT@ 2235 @LENGTH@ 86
---DEL ParameterizedType@@CapabilityServiceBuilder<SingleSignOnManager> @AT@ 2189 @LENGTH@ 45
------DEL SimpleType@@CapabilityServiceBuilder @AT@ 2189 @LENGTH@ 24
------DEL SimpleType@@SingleSignOnManager @AT@ 2214 @LENGTH@ 19
---INS SimpleType@@CapabilityServiceConfigurator @TO@ MethodDeclaration@@CapabilityServiceBuilder<SingleSignOnManager>, MethodName:getBuilder, ServiceName name, String securityDomainName, SessionIdGenerator generator,  @AT@ 2194 @LENGTH@ 29
---UPD SimpleName@@MethodName:getBuilder @TO@ MethodName:getServiceConfigurator @AT@ 2235 @LENGTH@ 10


UPD IfStatement@@if (this.invokerHandlerMethod != null) {  return this.invokerHandlerMethod.getMethod().getReturnType();} else {  Method method=this.delegatingHandler.getMethodFor(payload);  return method == null ? null : method.getReturnType();} @TO@ if (this.invokerHandlerMethod != null) {  return this.invokerHandlerMethod.getMethod().getReturnType();} else {  return this.delegatingHandler.getMethodFor(payload).getReturnType();} @AT@ 2727 @LENGTH@ 245
---UPD Block@@ElseBody:{  Method method=this.delegatingHandler.getMethodFor(payload);  return method == null ? null : method.getReturnType();} @TO@ ElseBody:{  return this.delegatingHandler.getMethodFor(payload).getReturnType();} @AT@ 2844 @LENGTH@ 128
------INS ReturnStatement@@MethodInvocation:this.delegatingHandler.getMethodFor(payload).getReturnType() @TO@ Block@@ElseBody:{  Method method=this.delegatingHandler.getMethodFor(payload);  return method == null ? null : method.getReturnType();} @AT@ 2815 @LENGTH@ 68
---------INS MethodInvocation@@this.delegatingHandler.getMethodFor(payload).getReturnType() @TO@ ReturnStatement@@MethodInvocation:this.delegatingHandler.getMethodFor(payload).getReturnType() @AT@ 2822 @LENGTH@ 60
------------INS MethodInvocation@@MethodName:getMethodFor:[payload] @TO@ MethodInvocation@@this.delegatingHandler.getMethodFor(payload).getReturnType() @AT@ 2822 @LENGTH@ 44
---------------INS SimpleName@@payload @TO@ MethodInvocation@@MethodName:getMethodFor:[payload] @AT@ 2858 @LENGTH@ 7
------------MOV FieldAccess@@this.delegatingHandler @TO@ MethodInvocation@@this.delegatingHandler.getMethodFor(payload).getReturnType() @AT@ 2865 @LENGTH@ 22
------------MOV SimpleName@@MethodName:getReturnType:[] @TO@ MethodInvocation@@this.delegatingHandler.getMethodFor(payload).getReturnType() @AT@ 2952 @LENGTH@ 15
------DEL VariableDeclarationStatement@@Method method=this.delegatingHandler.getMethodFor(payload); @AT@ 2849 @LENGTH@ 61
---------DEL SimpleType@@Method @AT@ 2849 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@method=this.delegatingHandler.getMethodFor(payload) @AT@ 2856 @LENGTH@ 53
------------DEL SimpleName@@method @AT@ 2856 @LENGTH@ 6
------------DEL MethodInvocation@@this.delegatingHandler.getMethodFor(payload) @AT@ 2865 @LENGTH@ 44
---------------DEL SimpleName@@MethodName:getMethodFor:[payload] @AT@ 2888 @LENGTH@ 21
------------------DEL SimpleName@@payload @AT@ 2901 @LENGTH@ 7
------DEL ReturnStatement@@ConditionalExpression:method == null ? null : method.getReturnType() @AT@ 2914 @LENGTH@ 54
---------DEL ConditionalExpression@@method == null ? null : method.getReturnType() @AT@ 2921 @LENGTH@ 46
------------DEL InfixExpression@@method == null @AT@ 2921 @LENGTH@ 14
---------------DEL SimpleName@@method @AT@ 2921 @LENGTH@ 6
---------------DEL Operator@@== @AT@ 2927 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 2931 @LENGTH@ 4
------------DEL NullLiteral@@null @AT@ 2938 @LENGTH@ 4
------------DEL MethodInvocation@@method.getReturnType() @AT@ 2945 @LENGTH@ 22
---------------DEL SimpleName@@Name:method @AT@ 2945 @LENGTH@ 6


UPD IfStatement@@if (newThrottle != throttleRatesMap.get(key)) {  if (throttleRatesMap.get(key) > newThrottle) {    int delta=throttleRatesMap.get(key) - newThrottle;    while (delta > 0) {      delayQueue.take();      delta--;      log.trace("Permit discarded due to throttling rate decrease, triggered by ExchangeId: {}",exchange.getExchangeId());    }    log.debug("Throttle rate decreased from {} to {}, triggered by ExchangeId: {}",throttleRatesMap.get(key),newThrottle,exchange.getExchangeId());  } else   if (newThrottle > throttleRatesMap.get(key)) {    int delta=newThrottle - throttleRatesMap.get(key);    for (int i=0; i < delta; i++) {      delayQueue.put(new ThrottlePermit(-1));    }    if (throttleRatesMap.get(key) == 0) {      log.debug("Initial throttle rate set to {}, triggered by ExchangeId: {}",newThrottle,exchange.getExchangeId());    } else {      log.debug("Throttle rate increase from {} to {}, triggered by ExchangeId: {}",throttleRatesMap.get(key),newThrottle,exchange.getExchangeId());    }  }  throttleRatesMap.put(key,newThrottle);} @TO@ if (!newThrottle.equals(throttleRatesMap.get(key))) {  if (throttleRatesMap.get(key) > newThrottle) {    int delta=throttleRatesMap.get(key) - newThrottle;    while (delta > 0) {      delayQueue.take();      delta--;      log.trace("Permit discarded due to throttling rate decrease, triggered by ExchangeId: {}",exchange.getExchangeId());    }    log.debug("Throttle rate decreased from {} to {}, triggered by ExchangeId: {}",throttleRatesMap.get(key),newThrottle,exchange.getExchangeId());  } else   if (newThrottle > throttleRatesMap.get(key)) {    int delta=newThrottle - throttleRatesMap.get(key);    for (int i=0; i < delta; i++) {      delayQueue.put(new ThrottlePermit(-1));    }    if (throttleRatesMap.get(key) == 0) {      log.debug("Initial throttle rate set to {}, triggered by ExchangeId: {}",newThrottle,exchange.getExchangeId());    } else {      log.debug("Throttle rate increase from {} to {}, triggered by ExchangeId: {}",throttleRatesMap.get(key),newThrottle,exchange.getExchangeId());    }  }  throttleRatesMap.put(key,newThrottle);} @AT@ 17487 @LENGTH@ 1706
---DEL InfixExpression@@newThrottle != throttleRatesMap.get(key) @AT@ 17491 @LENGTH@ 40
------DEL SimpleName@@newThrottle @AT@ 17491 @LENGTH@ 11
------DEL Operator@@!= @AT@ 17502 @LENGTH@ 2
---INS PrefixExpression@@!newThrottle.equals(throttleRatesMap.get(key)) @TO@ IfStatement@@if (newThrottle != throttleRatesMap.get(key)) {  if (throttleRatesMap.get(key) > newThrottle) {    int delta=throttleRatesMap.get(key) - newThrottle;    while (delta > 0) {      delayQueue.take();      delta--;      log.trace("Permit discarded due to throttling rate decrease, triggered by ExchangeId: {}",exchange.getExchangeId());    }    log.debug("Throttle rate decreased from {} to {}, triggered by ExchangeId: {}",throttleRatesMap.get(key),newThrottle,exchange.getExchangeId());  } else   if (newThrottle > throttleRatesMap.get(key)) {    int delta=newThrottle - throttleRatesMap.get(key);    for (int i=0; i < delta; i++) {      delayQueue.put(new ThrottlePermit(-1));    }    if (throttleRatesMap.get(key) == 0) {      log.debug("Initial throttle rate set to {}, triggered by ExchangeId: {}",newThrottle,exchange.getExchangeId());    } else {      log.debug("Throttle rate increase from {} to {}, triggered by ExchangeId: {}",throttleRatesMap.get(key),newThrottle,exchange.getExchangeId());    }  }  throttleRatesMap.put(key,newThrottle);} @AT@ 17497 @LENGTH@ 46
------INS Operator@@! @TO@ PrefixExpression@@!newThrottle.equals(throttleRatesMap.get(key)) @AT@ 17497 @LENGTH@ 1
------INS MethodInvocation@@newThrottle.equals(throttleRatesMap.get(key)) @TO@ PrefixExpression@@!newThrottle.equals(throttleRatesMap.get(key)) @AT@ 17498 @LENGTH@ 45
---------INS SimpleName@@Name:newThrottle @TO@ MethodInvocation@@newThrottle.equals(throttleRatesMap.get(key)) @AT@ 17498 @LENGTH@ 11
---------INS SimpleName@@MethodName:equals:[throttleRatesMap.get(key)] @TO@ MethodInvocation@@newThrottle.equals(throttleRatesMap.get(key)) @AT@ 17510 @LENGTH@ 33
------------MOV MethodInvocation@@throttleRatesMap.get(key) @TO@ SimpleName@@MethodName:equals:[throttleRatesMap.get(key)] @AT@ 17506 @LENGTH@ 25


UPD ReturnStatement@@BooleanLiteral:true @TO@ BooleanLiteral:false @AT@ 2488 @LENGTH@ 12
---UPD BooleanLiteral@@true @TO@ false @AT@ 2495 @LENGTH@ 4


UPD TypeDeclaration@@[public]ServerBearerTokenAuthenticationConverter, [Function<ServerWebExchange,Mono<Authentication>>] @TO@ [public]ServerBearerTokenAuthenticationConverter, [ServerAuthenticationConverter] @AT@ 1853 @LENGTH@ 2524
---DEL ParameterizedType@@Function<ServerWebExchange,Mono<Authentication>> @AT@ 1920 @LENGTH@ 49
------DEL SimpleType@@Function @AT@ 1920 @LENGTH@ 8
------DEL SimpleType@@ServerWebExchange @AT@ 1929 @LENGTH@ 17
------DEL ParameterizedType@@Mono<Authentication> @AT@ 1948 @LENGTH@ 20
---------DEL SimpleType@@Mono @AT@ 1948 @LENGTH@ 4
---------DEL SimpleType@@Authentication @AT@ 1953 @LENGTH@ 14
---INS SimpleType@@ServerAuthenticationConverter @TO@ TypeDeclaration@@[public]ServerBearerTokenAuthenticationConverter, [Function<ServerWebExchange,Mono<Authentication>>] @AT@ 1975 @LENGTH@ 29


UPD IfStatement@@if (!candidates.isEmpty()) {  if (requiredConstructor == null && defaultConstructor != null) {    candidates.add(defaultConstructor);  }  candidateConstructors=candidates.toArray(new Constructor[candidates.size()]);} else {  candidateConstructors=new Constructor[0];} @TO@ if (!candidates.isEmpty()) {  if (requiredConstructor == null && defaultConstructor != null) {    candidates.add(defaultConstructor);  }  candidateConstructors=candidates.toArray(new Constructor<?>[candidates.size()]);} else {  candidateConstructors=new Constructor<?>[0];} @AT@ 11473 @LENGTH@ 548
---UPD Block@@ThenBody:{  if (requiredConstructor == null && defaultConstructor != null) {    candidates.add(defaultConstructor);  }  candidateConstructors=candidates.toArray(new Constructor[candidates.size()]);} @TO@ ThenBody:{  if (requiredConstructor == null && defaultConstructor != null) {    candidates.add(defaultConstructor);  }  candidateConstructors=candidates.toArray(new Constructor<?>[candidates.size()]);} @AT@ 11500 @LENGTH@ 404
------UPD ExpressionStatement@@Assignment:candidateConstructors=candidates.toArray(new Constructor[candidates.size()]) @TO@ Assignment:candidateConstructors=candidates.toArray(new Constructor<?>[candidates.size()]) @AT@ 11803 @LENGTH@ 79
---------UPD Assignment@@candidateConstructors=candidates.toArray(new Constructor[candidates.size()]) @TO@ candidateConstructors=candidates.toArray(new Constructor<?>[candidates.size()]) @AT@ 11803 @LENGTH@ 78
------------UPD MethodInvocation@@candidates.toArray(new Constructor[candidates.size()]) @TO@ candidates.toArray(new Constructor<?>[candidates.size()]) @AT@ 11827 @LENGTH@ 54
---------------UPD SimpleName@@MethodName:toArray:[new Constructor[candidates.size()]] @TO@ MethodName:toArray:[new Constructor<?>[candidates.size()]] @AT@ 11838 @LENGTH@ 43
------------------UPD ArrayCreation@@new Constructor[candidates.size()] @TO@ new Constructor<?>[candidates.size()] @AT@ 11846 @LENGTH@ 34
---------------------UPD ArrayType@@Constructor[] @TO@ Constructor<?>[] @AT@ 11850 @LENGTH@ 30
------------------------DEL SimpleType@@Constructor @AT@ 11850 @LENGTH@ 11
------------------------INS ParameterizedType@@Constructor<?> @TO@ ArrayType@@Constructor[] @AT@ 11855 @LENGTH@ 14
---------------------------INS SimpleType@@Constructor @TO@ ParameterizedType@@Constructor<?> @AT@ 11855 @LENGTH@ 11
---------------------------INS WildcardType@@? @TO@ ParameterizedType@@Constructor<?> @AT@ 11867 @LENGTH@ 1
---UPD Block@@ElseBody:{  candidateConstructors=new Constructor[0];} @TO@ ElseBody:{  candidateConstructors=new Constructor<?>[0];} @AT@ 11930 @LENGTH@ 91
------UPD ExpressionStatement@@Assignment:candidateConstructors=new Constructor[0] @TO@ Assignment:candidateConstructors=new Constructor<?>[0] @AT@ 11956 @LENGTH@ 43
---------UPD Assignment@@candidateConstructors=new Constructor[0] @TO@ candidateConstructors=new Constructor<?>[0] @AT@ 11956 @LENGTH@ 42
------------UPD ArrayCreation@@new Constructor[0] @TO@ new Constructor<?>[0] @AT@ 11980 @LENGTH@ 18
---------------UPD ArrayType@@Constructor[] @TO@ Constructor<?>[] @AT@ 11984 @LENGTH@ 14
------------------DEL SimpleType@@Constructor @AT@ 11984 @LENGTH@ 11
------------------INS ParameterizedType@@Constructor<?> @TO@ ArrayType@@Constructor[] @AT@ 11992 @LENGTH@ 14
---------------------INS SimpleType@@Constructor @TO@ ParameterizedType@@Constructor<?> @AT@ 11992 @LENGTH@ 11
---------------------INS WildcardType@@? @TO@ ParameterizedType@@Constructor<?> @AT@ 12004 @LENGTH@ 1


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5274 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 5294 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 5276 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5304 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 5318 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 5325 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5325 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 5335 @LENGTH@ 1


INS MethodDeclaration@@Person, MethodName:findWithArrayPositionInProjection, int position,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QuerydslPredicateExecutor<Person>] @AT@ 10968 @LENGTH@ 48
---INS SimpleType@@Person @TO@ MethodDeclaration@@Person, MethodName:findWithArrayPositionInProjection, int position,  @AT@ 10961 @LENGTH@ 6
---INS SimpleName@@MethodName:findWithArrayPositionInProjection @TO@ MethodDeclaration@@Person, MethodName:findWithArrayPositionInProjection, int position,  @AT@ 10968 @LENGTH@ 33
---INS SingleVariableDeclaration@@int position @TO@ MethodDeclaration@@Person, MethodName:findWithArrayPositionInProjection, int position,  @AT@ 11002 @LENGTH@ 12
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int position @AT@ 11002 @LENGTH@ 3
------INS SimpleName@@position @TO@ SingleVariableDeclaration@@int position @AT@ 11006 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:this.name=ClusteringCacheRequirement.REGISTRY_ENTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME) @TO@ Assignment:this.name=ClusteringCacheRequirement.REGISTRY_ENTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME) @AT@ 3184 @LENGTH@ 177
---UPD Assignment@@this.name=ClusteringCacheRequirement.REGISTRY_ENTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME) @TO@ this.name=ClusteringCacheRequirement.REGISTRY_ENTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME) @AT@ 3184 @LENGTH@ 176
------UPD MethodInvocation@@ClusteringCacheRequirement.REGISTRY_ENTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME) @TO@ ClusteringCacheRequirement.REGISTRY_ENTRY.getServiceName(context,this.clientMappingsClusterName,BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME) @AT@ 3196 @LENGTH@ 164
---------UPD SimpleName@@MethodName:getServiceName:[context, this.clientMappingsClusterName, BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME] @TO@ MethodName:getServiceName:[context, this.clientMappingsClusterName, BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME] @AT@ 3238 @LENGTH@ 122
------------UPD QualifiedName@@BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME @TO@ BeanManagerFactoryServiceConfiguratorConfiguration.CLIENT_MAPPINGS_CACHE_NAME @AT@ 3294 @LENGTH@ 65
---------------UPD SimpleName@@BeanManagerFactoryBuilderConfiguration @TO@ BeanManagerFactoryServiceConfiguratorConfiguration @AT@ 3294 @LENGTH@ 38


UPD MethodDeclaration@@public, static, void, MethodName:closeChannel, Channel channel,  @TO@ public, static, void, MethodName:closeChannel, @Nullable Channel channel,  @AT@ 2372 @LENGTH@ 533
---UPD SingleVariableDeclaration@@Channel channel @TO@ @Nullable Channel channel @AT@ 2404 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:setMessageConverter, MessageConverter messageConverter,  @TO@ TypeDeclaration@@[public]MessagingMessageListenerAdapter, AbstractAdaptableMessageListener @AT@ 4347 @LENGTH@ 190
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setMessageConverter, MessageConverter messageConverter,  @AT@ 4347 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setMessageConverter, MessageConverter messageConverter,  @AT@ 4354 @LENGTH@ 4
---INS SimpleName@@MethodName:setMessageConverter @TO@ MethodDeclaration@@public, void, MethodName:setMessageConverter, MessageConverter messageConverter,  @AT@ 4359 @LENGTH@ 19
---INS SingleVariableDeclaration@@MessageConverter messageConverter @TO@ MethodDeclaration@@public, void, MethodName:setMessageConverter, MessageConverter messageConverter,  @AT@ 4379 @LENGTH@ 33
------INS SimpleType@@MessageConverter @TO@ SingleVariableDeclaration@@MessageConverter messageConverter @AT@ 4379 @LENGTH@ 16
------INS SimpleName@@messageConverter @TO@ SingleVariableDeclaration@@MessageConverter messageConverter @AT@ 4396 @LENGTH@ 16
---INS ExpressionStatement@@SuperMethodInvocation:super.setMessageConverter(messageConverter) @TO@ MethodDeclaration@@public, void, MethodName:setMessageConverter, MessageConverter messageConverter,  @AT@ 4418 @LENGTH@ 44
------INS SuperMethodInvocation@@super.setMessageConverter(messageConverter) @TO@ ExpressionStatement@@SuperMethodInvocation:super.setMessageConverter(messageConverter) @AT@ 4418 @LENGTH@ 43
---------INS SimpleName@@MethodName:setMessageConverter:[messageConverter] @TO@ SuperMethodInvocation@@super.setMessageConverter(messageConverter) @AT@ 4424 @LENGTH@ 19
---------INS SimpleName@@messageConverter @TO@ SuperMethodInvocation@@super.setMessageConverter(messageConverter) @AT@ 4444 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:this.messagingMessageConverter.setPayloadConverter(messageConverter) @TO@ MethodDeclaration@@public, void, MethodName:setMessageConverter, MessageConverter messageConverter,  @AT@ 4465 @LENGTH@ 69
------INS MethodInvocation@@this.messagingMessageConverter.setPayloadConverter(messageConverter) @TO@ ExpressionStatement@@MethodInvocation:this.messagingMessageConverter.setPayloadConverter(messageConverter) @AT@ 4465 @LENGTH@ 68
---------INS FieldAccess@@this.messagingMessageConverter @TO@ MethodInvocation@@this.messagingMessageConverter.setPayloadConverter(messageConverter) @AT@ 4465 @LENGTH@ 30
------------INS ThisExpression@@this @TO@ FieldAccess@@this.messagingMessageConverter @AT@ 4465 @LENGTH@ 4
------------INS SimpleName@@messagingMessageConverter @TO@ FieldAccess@@this.messagingMessageConverter @AT@ 4470 @LENGTH@ 25
---------INS SimpleName@@MethodName:setPayloadConverter:[messageConverter] @TO@ MethodInvocation@@this.messagingMessageConverter.setPayloadConverter(messageConverter) @AT@ 4496 @LENGTH@ 37
------------INS SimpleName@@messageConverter @TO@ SimpleName@@MethodName:setPayloadConverter:[messageConverter] @AT@ 4516 @LENGTH@ 16


UPD VariableDeclarationStatement@@SimpleStepBuilder builder=new StepBuilder("step").repository(jobRepository).transactionManager(transactionManager).chunk(5).reader(new DummyItemReader()).writer(new DummyItemWriter()).listener(new AnnotationBasedChunkListener()); @TO@ SimpleStepBuilder<Object,Object> builder=new StepBuilder("step").repository(jobRepository).transactionManager(transactionManager).chunk(5).reader(new DummyItemReader()).writer(new DummyItemWriter()).listener(new AnnotationBasedChunkListener()); @AT@ 5858 @LENGTH@ 261
---INS ParameterizedType@@SimpleStepBuilder<Object,Object> @TO@ VariableDeclarationStatement@@SimpleStepBuilder builder=new StepBuilder("step").repository(jobRepository).transactionManager(transactionManager).chunk(5).reader(new DummyItemReader()).writer(new DummyItemWriter()).listener(new AnnotationBasedChunkListener()); @AT@ 5858 @LENGTH@ 33
------INS SimpleType@@SimpleStepBuilder @TO@ ParameterizedType@@SimpleStepBuilder<Object,Object> @AT@ 5858 @LENGTH@ 17
------INS SimpleType@@Object @TO@ ParameterizedType@@SimpleStepBuilder<Object,Object> @AT@ 5876 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@SimpleStepBuilder<Object,Object> @AT@ 5884 @LENGTH@ 6
---DEL SimpleType@@SimpleStepBuilder @AT@ 5858 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:when(collection.getNamespace()).thenReturn(new MongoNamespace("db.mock-collection")) @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 5810 @LENGTH@ 85
---INS MethodInvocation@@when(collection.getNamespace()).thenReturn(new MongoNamespace("db.mock-collection")) @TO@ ExpressionStatement@@MethodInvocation:when(collection.getNamespace()).thenReturn(new MongoNamespace("db.mock-collection")) @AT@ 5810 @LENGTH@ 84
------INS MethodInvocation@@MethodName:when:[collection.getNamespace()] @TO@ MethodInvocation@@when(collection.getNamespace()).thenReturn(new MongoNamespace("db.mock-collection")) @AT@ 5810 @LENGTH@ 31
---------INS MethodInvocation@@collection.getNamespace() @TO@ MethodInvocation@@MethodName:when:[collection.getNamespace()] @AT@ 5815 @LENGTH@ 25
------------INS SimpleName@@Name:collection @TO@ MethodInvocation@@collection.getNamespace() @AT@ 5815 @LENGTH@ 10
------------INS SimpleName@@MethodName:getNamespace:[] @TO@ MethodInvocation@@collection.getNamespace() @AT@ 5826 @LENGTH@ 14
------INS SimpleName@@MethodName:thenReturn:[new MongoNamespace("db.mock-collection")] @TO@ MethodInvocation@@when(collection.getNamespace()).thenReturn(new MongoNamespace("db.mock-collection")) @AT@ 5842 @LENGTH@ 52
---------INS ClassInstanceCreation@@MongoNamespace["db.mock-collection"] @TO@ SimpleName@@MethodName:thenReturn:[new MongoNamespace("db.mock-collection")] @AT@ 5853 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@MongoNamespace["db.mock-collection"] @AT@ 5853 @LENGTH@ 3
------------INS SimpleType@@MongoNamespace @TO@ ClassInstanceCreation@@MongoNamespace["db.mock-collection"] @AT@ 5857 @LENGTH@ 14
------------INS StringLiteral@@"db.mock-collection" @TO@ ClassInstanceCreation@@MongoNamespace["db.mock-collection"] @AT@ 5872 @LENGTH@ 20


UPD ReturnStatement@@ClassInstanceCreation:new OAuth2LoginAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),oauth2User,mappedAuthorities,accessToken) @TO@ ClassInstanceCreation:new OAuth2LoginAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),oauth2User,mappedAuthorities,accessToken,accessTokenResponse.getRefreshToken()) @AT@ 9621 @LENGTH@ 239
---UPD ClassInstanceCreation@@OAuth2LoginAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), oauth2User, mappedAuthorities, accessToken] @TO@ OAuth2LoginAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), oauth2User, mappedAuthorities, accessToken, accessTokenResponse.getRefreshToken()] @AT@ 9628 @LENGTH@ 231
------INS MethodInvocation@@accessTokenResponse.getRefreshToken() @TO@ ClassInstanceCreation@@OAuth2LoginAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), oauth2User, mappedAuthorities, accessToken] @AT@ 9867 @LENGTH@ 37
---------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 9867 @LENGTH@ 19
---------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 9887 @LENGTH@ 17


UPD IfStatement@@if (client != null) {  client.close();} @TO@ if (client != null) {  try {    client.close();  } catch (  Exception e) {  }} @AT@ 8006 @LENGTH@ 53
---UPD Block@@ThenBody:{  client.close();} @TO@ ThenBody:{  try {    client.close();  } catch (  Exception e) {  }} @AT@ 8026 @LENGTH@ 33
------INS TryStatement@@try {  client.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  client.close();} @AT@ 8036 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:client.close() @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 8036 @LENGTH@ 15
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  client.close();} catch (Exception e) {} @AT@ 8078 @LENGTH@ 115
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 8085 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 8085 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 8095 @LENGTH@ 1


UPD EnhancedForStatement@@for (CapabilityServiceBuilder<?> b : provider.getServerBuilders(name)) {  b.configure(context).build(target).install();} @TO@ for (CapabilityServiceConfigurator configurator : provider.getServerServiceConfigurators(name)) {  configurator.configure(context).build(target).install();} @AT@ 4993 @LENGTH@ 148
---UPD SingleVariableDeclaration@@CapabilityServiceBuilder<?> b @TO@ CapabilityServiceConfigurator configurator @AT@ 4998 @LENGTH@ 29
------DEL ParameterizedType@@CapabilityServiceBuilder<?> @AT@ 4998 @LENGTH@ 27
---------DEL SimpleType@@CapabilityServiceBuilder @AT@ 4998 @LENGTH@ 24
---------DEL WildcardType@@? @AT@ 5023 @LENGTH@ 1
------UPD SimpleName@@b @TO@ configurator @AT@ 5026 @LENGTH@ 1
------INS SimpleType@@CapabilityServiceConfigurator @TO@ SingleVariableDeclaration@@CapabilityServiceBuilder<?> b @AT@ 5039 @LENGTH@ 29
---UPD MethodInvocation@@provider.getServerBuilders(name) @TO@ provider.getServerServiceConfigurators(name) @AT@ 5030 @LENGTH@ 32
------UPD SimpleName@@MethodName:getServerBuilders:[name] @TO@ MethodName:getServerServiceConfigurators:[name] @AT@ 5039 @LENGTH@ 23
---UPD ExpressionStatement@@MethodInvocation:b.configure(context).build(target).install() @TO@ MethodInvocation:configurator.configure(context).build(target).install() @AT@ 5082 @LENGTH@ 45
------UPD MethodInvocation@@b.configure(context).build(target).install() @TO@ configurator.configure(context).build(target).install() @AT@ 5082 @LENGTH@ 44
---------UPD SimpleName@@Name:b @TO@ Name:configurator @AT@ 5082 @LENGTH@ 1


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[public]HttpHandlerRegistrationInfo,  @AT@ 2151 @LENGTH@ 97
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2151 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2158 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2162 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:Objects.hash(matchOnUriPrefix,methodRestrict,uri) @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2183 @LENGTH@ 59
------INS MethodInvocation@@Objects.hash(matchOnUriPrefix,methodRestrict,uri) @TO@ ReturnStatement@@MethodInvocation:Objects.hash(matchOnUriPrefix,methodRestrict,uri) @AT@ 2190 @LENGTH@ 51
---------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.hash(matchOnUriPrefix,methodRestrict,uri) @AT@ 2190 @LENGTH@ 7
---------INS SimpleName@@MethodName:hash:[matchOnUriPrefix, methodRestrict, uri] @TO@ MethodInvocation@@Objects.hash(matchOnUriPrefix,methodRestrict,uri) @AT@ 2198 @LENGTH@ 43
------------INS SimpleName@@matchOnUriPrefix @TO@ SimpleName@@MethodName:hash:[matchOnUriPrefix, methodRestrict, uri] @AT@ 2203 @LENGTH@ 16
------------INS SimpleName@@methodRestrict @TO@ SimpleName@@MethodName:hash:[matchOnUriPrefix, methodRestrict, uri] @AT@ 2221 @LENGTH@ 14
------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:hash:[matchOnUriPrefix, methodRestrict, uri] @AT@ 2237 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals('\"',(char)cSVFormat.getEscapeCharacter()) @TO@ MethodInvocation:assertEquals('\\',(char)cSVFormat.getEscapeCharacter()) @AT@ 14075 @LENGTH@ 57
---UPD MethodInvocation@@assertEquals('\"',(char)cSVFormat.getEscapeCharacter()) @TO@ assertEquals('\\',(char)cSVFormat.getEscapeCharacter()) @AT@ 14075 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertEquals:['\"', (char)cSVFormat.getEscapeCharacter()] @TO@ MethodName:assertEquals:['\\', (char)cSVFormat.getEscapeCharacter()] @AT@ 14075 @LENGTH@ 56
---------UPD CharacterLiteral@@'\"' @TO@ '\\' @AT@ 14088 @LENGTH@ 4


UPD TypeDeclaration@@[public]ServerFormLoginAuthenticationConverter, [Function<ServerWebExchange,Mono<Authentication>>] @TO@ [public]ServerFormLoginAuthenticationConverter, [ServerAuthenticationConverter] @AT@ 1195 @LENGTH@ 1303
---DEL ParameterizedType@@Function<ServerWebExchange,Mono<Authentication>> @AT@ 1258 @LENGTH@ 49
------DEL SimpleType@@Function @AT@ 1258 @LENGTH@ 8
------DEL SimpleType@@ServerWebExchange @AT@ 1267 @LENGTH@ 17
------DEL ParameterizedType@@Mono<Authentication> @AT@ 1286 @LENGTH@ 20
---------DEL SimpleType@@Mono @AT@ 1286 @LENGTH@ 4
---------DEL SimpleType@@Authentication @AT@ 1291 @LENGTH@ 14
---INS SimpleType@@ServerAuthenticationConverter @TO@ TypeDeclaration@@[public]ServerFormLoginAuthenticationConverter, [Function<ServerWebExchange,Mono<Authentication>>] @AT@ 1314 @LENGTH@ 29


INS IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]");} else {  ReactiveHelper.scheduleMain(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]");} @TO@ MethodDeclaration@@public, boolean, MethodName:process, Exchange exchange, AsyncCallback callback,  @AT@ 3229 @LENGTH@ 467
---INS MethodInvocation@@exchange.isTransacted() @TO@ IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]");} else {  ReactiveHelper.scheduleMain(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]");} @AT@ 3233 @LENGTH@ 23
------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.isTransacted() @AT@ 3233 @LENGTH@ 8
------INS SimpleName@@MethodName:isTransacted:[] @TO@ MethodInvocation@@exchange.isTransacted() @AT@ 3242 @LENGTH@ 14
---INS Block@@ThenBody:{  ReactiveHelper.scheduleSync(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]");} @TO@ IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]");} else {  ReactiveHelper.scheduleMain(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]");} @AT@ 3258 @LENGTH@ 216
------INS ExpressionStatement@@MethodInvocation:ReactiveHelper.scheduleSync(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]") @TO@ Block@@ThenBody:{  ReactiveHelper.scheduleSync(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]");} @AT@ 3272 @LENGTH@ 192
---------INS MethodInvocation@@ReactiveHelper.scheduleSync(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]") @TO@ ExpressionStatement@@MethodInvocation:ReactiveHelper.scheduleSync(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]") @AT@ 3272 @LENGTH@ 191
------------INS SimpleName@@Name:ReactiveHelper @TO@ MethodInvocation@@ReactiveHelper.scheduleSync(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]") @AT@ 3272 @LENGTH@ 14
------------INS SimpleName@@MethodName:scheduleSync:[() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true), "Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]"] @TO@ MethodInvocation@@ReactiveHelper.scheduleSync(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]") @AT@ 3287 @LENGTH@ 176
---------------INS LambdaExpression@@() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true) @TO@ SimpleName@@MethodName:scheduleSync:[() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true), "Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]"] @AT@ 3300 @LENGTH@ 78
------------------INS MethodInvocation@@Pipeline.this.doProcess(exchange,callback,processors.iterator(),true) @TO@ LambdaExpression@@() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true) @AT@ 3306 @LENGTH@ 72
---------------------INS ThisExpression@@this @TO@ MethodInvocation@@Pipeline.this.doProcess(exchange,callback,processors.iterator(),true) @AT@ 3306 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:doProcess:[exchange, callback, processors.iterator(), true] @TO@ MethodInvocation@@Pipeline.this.doProcess(exchange,callback,processors.iterator(),true) @AT@ 3320 @LENGTH@ 58
------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:doProcess:[exchange, callback, processors.iterator(), true] @AT@ 3330 @LENGTH@ 8
------------------------INS SimpleName@@callback @TO@ SimpleName@@MethodName:doProcess:[exchange, callback, processors.iterator(), true] @AT@ 3340 @LENGTH@ 8
------------------------INS MethodInvocation@@processors.iterator() @TO@ SimpleName@@MethodName:doProcess:[exchange, callback, processors.iterator(), true] @AT@ 3350 @LENGTH@ 21
---------------------------INS SimpleName@@Name:processors @TO@ MethodInvocation@@processors.iterator() @AT@ 3350 @LENGTH@ 10
---------------------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@processors.iterator() @AT@ 3361 @LENGTH@ 10
------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:doProcess:[exchange, callback, processors.iterator(), true] @AT@ 3373 @LENGTH@ 4
---------------INS InfixExpression@@"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]" @TO@ SimpleName@@MethodName:scheduleSync:[() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true), "Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]"] @AT@ 3400 @LENGTH@ 62
------------------INS StringLiteral@@"Step[" @TO@ InfixExpression@@"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]" @AT@ 3400 @LENGTH@ 7
------------------INS Operator@@+ @TO@ InfixExpression@@"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]" @AT@ 3407 @LENGTH@ 1
------------------INS MethodInvocation@@exchange.getExchangeId() @TO@ InfixExpression@@"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]" @AT@ 3410 @LENGTH@ 24
---------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 3410 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getExchangeId:[] @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 3419 @LENGTH@ 15
------------------INS StringLiteral@@"," @TO@ InfixExpression@@"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]" @AT@ 3437 @LENGTH@ 3
------------------INS ThisExpression@@this @TO@ InfixExpression@@"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]" @AT@ 3443 @LENGTH@ 13
------------------INS StringLiteral@@"]" @TO@ InfixExpression@@"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]" @AT@ 3459 @LENGTH@ 3
---INS Block@@ElseBody:{  ReactiveHelper.scheduleMain(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]");} @TO@ IfStatement@@if (exchange.isTransacted()) {  ReactiveHelper.scheduleSync(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]");} else {  ReactiveHelper.scheduleMain(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]");} @AT@ 3480 @LENGTH@ 216
------MOV ExpressionStatement@@MethodInvocation:ReactiveHelper.scheduleMain(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]") @TO@ Block@@ElseBody:{  ReactiveHelper.scheduleMain(() -> Pipeline.this.doProcess(exchange,callback,processors.iterator(),true),"Step[" + exchange.getExchangeId() + ","+ Pipeline.this+ "]");} @AT@ 3229 @LENGTH@ 188


DEL VariableDeclarationStatement@@Long coreHit=(Long)mbeanServer.getAttribute(name,"BaseHitCounter"); @AT@ 2937 @LENGTH@ 71
---DEL SimpleType@@Long @AT@ 2937 @LENGTH@ 4
---DEL VariableDeclarationFragment@@coreHit=(Long)mbeanServer.getAttribute(name,"BaseHitCounter") @AT@ 2942 @LENGTH@ 65
------DEL SimpleName@@coreHit @AT@ 2942 @LENGTH@ 7
------DEL CastExpression@@(Long)mbeanServer.getAttribute(name,"BaseHitCounter") @AT@ 2952 @LENGTH@ 55
---------DEL SimpleType@@Long @AT@ 2953 @LENGTH@ 4
---------DEL MethodInvocation@@mbeanServer.getAttribute(name,"BaseHitCounter") @AT@ 2959 @LENGTH@ 48
------------DEL SimpleName@@Name:mbeanServer @AT@ 2959 @LENGTH@ 11
------------DEL SimpleName@@MethodName:getAttribute:[name, "BaseHitCounter"] @AT@ 2971 @LENGTH@ 36
---------------DEL SimpleName@@name @AT@ 2984 @LENGTH@ 4
---------------DEL StringLiteral@@"BaseHitCounter" @AT@ 2990 @LENGTH@ 16


UPD TypeDeclaration@@[public]AmazonEC2ClientMock, AbstractAmazonEC2 @TO@ [public]AmazonEC2ClientMock, AmazonEC2Client @AT@ 3088 @LENGTH@ 11586
---UPD SimpleType@@AbstractAmazonEC2 @TO@ AmazonEC2Client @AT@ 3129 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:http.authorizeExchange().anyExchange().authenticated().and().oauth2().resourceServer().jwt().jwkSetUri(jwkSetUri) @TO@ MethodInvocation:http.authorizeExchange().anyExchange().authenticated().and().oauth2ResourceServer().jwt().jwkSetUri(jwkSetUri) @AT@ 1693 @LENGTH@ 150
---UPD MethodInvocation@@http.authorizeExchange().anyExchange().authenticated().and().oauth2().resourceServer().jwt().jwkSetUri(jwkSetUri) @TO@ http.authorizeExchange().anyExchange().authenticated().and().oauth2ResourceServer().jwt().jwkSetUri(jwkSetUri) @AT@ 1693 @LENGTH@ 149
------UPD MethodInvocation@@MethodName:resourceServer:[] @TO@ MethodName:oauth2ResourceServer:[] @AT@ 1693 @LENGTH@ 109
------DEL MethodInvocation@@MethodName:oauth2:[] @AT@ 1693 @LENGTH@ 87

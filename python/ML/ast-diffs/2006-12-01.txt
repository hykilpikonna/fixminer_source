MOV MethodDeclaration@@public, void, MethodName:setCtx, DirContext ctx,  @TO@ TypeDeclaration@@[public]DirContextHolder, ResourceHolderSupport @AT@ 347 @LENGTH@ 174


UPD MethodDeclaration@@public, Processor<E>, MethodName:createProcessor,  @TO@ public, void, MethodName:createProcessors,  @AT@ 1322 @LENGTH@ 95
---DEL ParameterizedType@@Processor<E> @AT@ 1329 @LENGTH@ 12
------DEL SimpleType@@Processor @AT@ 1329 @LENGTH@ 9
------DEL SimpleType@@E @AT@ 1339 @LENGTH@ 1
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, Processor<E>, MethodName:createProcessor,  @AT@ 1329 @LENGTH@ 4
---UPD SimpleName@@MethodName:createProcessor @TO@ MethodName:createProcessors @AT@ 1342 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:getParent().addProcessor(new SendProcessor<E>(destination)) @TO@ MethodDeclaration@@public, Processor<E>, MethodName:createProcessor,  @AT@ 1363 @LENGTH@ 60
------INS MethodInvocation@@getParent().addProcessor(new SendProcessor<E>(destination)) @TO@ ExpressionStatement@@MethodInvocation:getParent().addProcessor(new SendProcessor<E>(destination)) @AT@ 1363 @LENGTH@ 59
---------INS MethodInvocation@@MethodName:getParent:[] @TO@ MethodInvocation@@getParent().addProcessor(new SendProcessor<E>(destination)) @AT@ 1363 @LENGTH@ 11
---------INS SimpleName@@MethodName:addProcessor:[new SendProcessor<E>(destination)] @TO@ MethodInvocation@@getParent().addProcessor(new SendProcessor<E>(destination)) @AT@ 1375 @LENGTH@ 47
------------MOV ClassInstanceCreation@@SendProcessor<E>[destination] @TO@ SimpleName@@MethodName:addProcessor:[new SendProcessor<E>(destination)] @AT@ 1377 @LENGTH@ 33
---DEL ReturnStatement@@ClassInstanceCreation:new SendProcessor<E>(destination) @AT@ 1370 @LENGTH@ 41


UPD VariableDeclarationStatement@@String headerName=connection.getHeaderField(i); @TO@ String headerName=connection.getHeaderFieldKey(i); @AT@ 2406 @LENGTH@ 49
---UPD VariableDeclarationFragment@@headerName=connection.getHeaderField(i) @TO@ headerName=connection.getHeaderFieldKey(i) @AT@ 2413 @LENGTH@ 41
------UPD MethodInvocation@@connection.getHeaderField(i) @TO@ connection.getHeaderFieldKey(i) @AT@ 2426 @LENGTH@ 28
---------UPD SimpleName@@MethodName:getHeaderField:[i] @TO@ MethodName:getHeaderFieldKey:[i] @AT@ 2437 @LENGTH@ 17


INS MethodDeclaration@@public, static, Class, MethodName:getActualTargetClass, DirContext context,  @TO@ TypeDeclaration@@[public, abstract]LdapUtils,  @AT@ 15762 @LENGTH@ 202
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Class, MethodName:getActualTargetClass, DirContext context,  @AT@ 15762 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Class, MethodName:getActualTargetClass, DirContext context,  @AT@ 15769 @LENGTH@ 6
---INS SimpleType@@Class @TO@ MethodDeclaration@@public, static, Class, MethodName:getActualTargetClass, DirContext context,  @AT@ 15776 @LENGTH@ 5
---INS SimpleName@@MethodName:getActualTargetClass @TO@ MethodDeclaration@@public, static, Class, MethodName:getActualTargetClass, DirContext context,  @AT@ 15782 @LENGTH@ 20
---INS SingleVariableDeclaration@@DirContext context @TO@ MethodDeclaration@@public, static, Class, MethodName:getActualTargetClass, DirContext context,  @AT@ 15803 @LENGTH@ 18
------INS SimpleType@@DirContext @TO@ SingleVariableDeclaration@@DirContext context @AT@ 15803 @LENGTH@ 10
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@DirContext context @AT@ 15814 @LENGTH@ 7
---INS IfStatement@@if (context instanceof LdapContext) {  return LdapContext.class;} @TO@ MethodDeclaration@@public, static, Class, MethodName:getActualTargetClass, DirContext context,  @AT@ 15834 @LENGTH@ 87
------INS InstanceofExpression@@context instanceof LdapContext @TO@ IfStatement@@if (context instanceof LdapContext) {  return LdapContext.class;} @AT@ 15838 @LENGTH@ 30
---------INS SimpleName@@context @TO@ InstanceofExpression@@context instanceof LdapContext @AT@ 15838 @LENGTH@ 7
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@context instanceof LdapContext @AT@ 15846 @LENGTH@ 10
---------INS SimpleType@@LdapContext @TO@ InstanceofExpression@@context instanceof LdapContext @AT@ 15857 @LENGTH@ 11
------INS Block@@ThenBody:{  return LdapContext.class;} @TO@ IfStatement@@if (context instanceof LdapContext) {  return LdapContext.class;} @AT@ 15870 @LENGTH@ 51
---------INS ReturnStatement@@TypeLiteral:LdapContext.class @TO@ Block@@ThenBody:{  return LdapContext.class;} @AT@ 15885 @LENGTH@ 25
------------INS TypeLiteral@@LdapContext.class @TO@ ReturnStatement@@TypeLiteral:LdapContext.class @AT@ 15892 @LENGTH@ 17
---INS ReturnStatement@@TypeLiteral:DirContext.class @TO@ MethodDeclaration@@public, static, Class, MethodName:getActualTargetClass, DirContext context,  @AT@ 15933 @LENGTH@ 24
------INS TypeLiteral@@DirContext.class @TO@ ReturnStatement@@TypeLiteral:DirContext.class @AT@ 15940 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:assertEquals("map.remove for nonexistent key should return null",o,null) @TO@ MethodInvocation:assertNull("map.remove for nonexistent key should return null",o) @AT@ 36499 @LENGTH@ 100
---UPD MethodInvocation@@assertEquals("map.remove for nonexistent key should return null",o,null) @TO@ assertNull("map.remove for nonexistent key should return null",o) @AT@ 36499 @LENGTH@ 99
------UPD SimpleName@@MethodName:assertEquals:["map.remove for nonexistent key should return null", o, null] @TO@ MethodName:assertNull:["map.remove for nonexistent key should return null", o] @AT@ 36499 @LENGTH@ 99
---------DEL NullLiteral@@null @AT@ 36593 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Could not read first element: " + ex.getMessage(),ex) @TO@ ClassInstanceCreation:new IllegalStateException("Could not read first element: " + ex.getMessage()) @AT@ 2772 @LENGTH@ 88
---UPD ClassInstanceCreation@@IllegalStateException["Could not read first element: " + ex.getMessage(), ex] @TO@ IllegalStateException["Could not read first element: " + ex.getMessage()] @AT@ 2778 @LENGTH@ 81
------DEL SimpleName@@ex @AT@ 2856 @LENGTH@ 2


INS ForStatement@@for (int i=0; i < 8; i++) {  bytes[i]=(byte)read(input);} @TO@ MethodDeclaration@@public, static, long, MethodName:readSwappedLong, InputStream input, IOException,  @AT@ 15293 @LENGTH@ 82
---INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < 8; i++) {  bytes[i]=(byte)read(input);} @AT@ 15299 @LENGTH@ 7
------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 15299 @LENGTH@ 3
------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 15303 @LENGTH@ 3
---------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 15303 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 15305 @LENGTH@ 1
---INS InfixExpression@@i < 8 @TO@ ForStatement@@for (int i=0; i < 8; i++) {  bytes[i]=(byte)read(input);} @AT@ 15308 @LENGTH@ 3
------INS SimpleName@@i @TO@ InfixExpression@@i < 8 @AT@ 15308 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@i < 8 @AT@ 15309 @LENGTH@ 1
------INS NumberLiteral@@8 @TO@ InfixExpression@@i < 8 @AT@ 15310 @LENGTH@ 1
---INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < 8; i++) {  bytes[i]=(byte)read(input);} @AT@ 15313 @LENGTH@ 3
------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 15313 @LENGTH@ 1
------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 15315 @LENGTH@ 2
---INS ExpressionStatement@@Assignment:bytes[i]=(byte)read(input) @TO@ ForStatement@@for (int i=0; i < 8; i++) {  bytes[i]=(byte)read(input);} @AT@ 15333 @LENGTH@ 32
------INS Assignment@@bytes[i]=(byte)read(input) @TO@ ExpressionStatement@@Assignment:bytes[i]=(byte)read(input) @AT@ 15333 @LENGTH@ 31
---------INS ArrayAccess@@bytes[i] @TO@ Assignment@@bytes[i]=(byte)read(input) @AT@ 15333 @LENGTH@ 8
------------INS SimpleName@@bytes @TO@ ArrayAccess@@bytes[i] @AT@ 15333 @LENGTH@ 5
------------INS SimpleName@@i @TO@ ArrayAccess@@bytes[i] @AT@ 15339 @LENGTH@ 1
---------INS Operator@@= @TO@ Assignment@@bytes[i]=(byte)read(input) @AT@ 15341 @LENGTH@ 1
---------INS CastExpression@@(byte)read(input) @TO@ Assignment@@bytes[i]=(byte)read(input) @AT@ 15344 @LENGTH@ 20
------------INS PrimitiveType@@byte @TO@ CastExpression@@(byte)read(input) @AT@ 15345 @LENGTH@ 4
------------INS MethodInvocation@@read(input) @TO@ CastExpression@@(byte)read(input) @AT@ 15351 @LENGTH@ 13
---------------MOV SimpleName@@MethodName:read:[bytes] @TO@ MethodInvocation@@read(input) @AT@ 15299 @LENGTH@ 13
------------------UPD SimpleName@@bytes @TO@ input @AT@ 15305 @LENGTH@ 5


UPD Block@@ElseBody:if (changedAttr.size() == 0 && currentAttribute != null) {  modificationList.add(new ModificationItem(DirContext.REMOVE_ATTRIBUTE,changedAttr));} else if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ElseBody:if (changedAttr.size() == 0 && currentAttribute != null) {  modificationList.add(new ModificationItem(DirContext.REMOVE_ATTRIBUTE,changedAttr));} else if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9212 @LENGTH@ 1685
---UPD IfStatement@@if (changedAttr.size() == 0 && currentAttribute != null) {  modificationList.add(new ModificationItem(DirContext.REMOVE_ATTRIBUTE,changedAttr));} else if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ if (changedAttr.size() == 0 && currentAttribute != null) {  modificationList.add(new ModificationItem(DirContext.REMOVE_ATTRIBUTE,changedAttr));} else if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9212 @LENGTH@ 1685
------UPD Block@@ElseBody:if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ElseBody:if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9452 @LENGTH@ 1445
---------UPD IfStatement@@if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9452 @LENGTH@ 1445
------------UPD Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9481 @LENGTH@ 1416
---------------MOV ExpressionStatement@@MethodInvocation:collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications) @TO@ Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 10166 @LENGTH@ 111
---------UPD IfStatement@@if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9452 @LENGTH@ 1445
------------UPD Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9481 @LENGTH@ 1416
---------------MOV ExpressionStatement@@MethodInvocation:collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications) @TO@ Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 10166 @LENGTH@ 111
---------UPD IfStatement@@if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9452 @LENGTH@ 1445
------------UPD Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9481 @LENGTH@ 1416
---------------MOV ExpressionStatement@@MethodInvocation:collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications) @TO@ Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 10166 @LENGTH@ 111
---------UPD IfStatement@@if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9452 @LENGTH@ 1445
------------UPD Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9481 @LENGTH@ 1416
---------------MOV ExpressionStatement@@MethodInvocation:collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications) @TO@ Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 10166 @LENGTH@ 111
---------UPD IfStatement@@if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9452 @LENGTH@ 1445
------------UPD Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9481 @LENGTH@ 1416
---------------MOV ExpressionStatement@@MethodInvocation:collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications) @TO@ Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 10166 @LENGTH@ 111
---UPD IfStatement@@if (changedAttr.size() == 0 && currentAttribute != null) {  modificationList.add(new ModificationItem(DirContext.REMOVE_ATTRIBUTE,changedAttr));} else if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ if (changedAttr.size() == 0 && currentAttribute != null) {  modificationList.add(new ModificationItem(DirContext.REMOVE_ATTRIBUTE,changedAttr));} else if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9212 @LENGTH@ 1685
------UPD Block@@ElseBody:if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ElseBody:if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9452 @LENGTH@ 1445
---------UPD IfStatement@@if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9452 @LENGTH@ 1445
------------UPD Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9481 @LENGTH@ 1416
---------------MOV ExpressionStatement@@MethodInvocation:collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications) @TO@ Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 10166 @LENGTH@ 111
---------UPD IfStatement@@if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9452 @LENGTH@ 1445
------------UPD Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9481 @LENGTH@ 1416
---------------MOV ExpressionStatement@@MethodInvocation:collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications) @TO@ Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 10166 @LENGTH@ 111
---------UPD IfStatement@@if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9452 @LENGTH@ 1445
------------UPD Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9481 @LENGTH@ 1416
---------------MOV ExpressionStatement@@MethodInvocation:collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications) @TO@ Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 10166 @LENGTH@ 111
---------UPD IfStatement@@if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9452 @LENGTH@ 1445
------------UPD Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9481 @LENGTH@ 1416
---------------MOV ExpressionStatement@@MethodInvocation:collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications) @TO@ Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 10166 @LENGTH@ 111
---------UPD IfStatement@@if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ if (changedAttr.size() != 0) {  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9452 @LENGTH@ 1445
------------UPD Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @TO@ ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 9481 @LENGTH@ 1416
---------------MOV ExpressionStatement@@MethodInvocation:collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications) @TO@ Block@@ThenBody:{  Collection oldValues=new LinkedList();  Collection newValues=new LinkedList();  collectAttributeValues(oldValues,currentAttribute);  collectAttributeValues(newValues,changedAttr);  Collection myModifications=new LinkedList();  Collection addedValues=CollectionUtils.subtract(newValues,oldValues);  Collection removedValues=CollectionUtils.subtract(oldValues,newValues);  collectModifications(DirContext.ADD_ATTRIBUTE,changedAttr,addedValues,myModifications);  collectModifications(DirContext.REMOVE_ATTRIBUTE,changedAttr,removedValues,myModifications);  if (myModifications.isEmpty()) {    myModifications.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,changedAttr));  }  modificationList.addAll(myModifications);} @AT@ 10166 @LENGTH@ 111


UPD MethodDeclaration@@public, void, MethodName:characters, char ch[], int start, int length, SAXException,  @TO@ public, void, MethodName:characters, char[] ch, int start, int length, SAXException,  @AT@ 16931 @LENGTH@ 142
---UPD SingleVariableDeclaration@@char ch[] @TO@ char[] ch @AT@ 16954 @LENGTH@ 9
------DEL PrimitiveType@@char @AT@ 16954 @LENGTH@ 4
------INS ArrayType@@char[] @TO@ SingleVariableDeclaration@@char ch[] @AT@ 17064 @LENGTH@ 6
---------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 17064 @LENGTH@ 4


UPD ForStatement@@for (Iterator iterator=bindings.keySet().iterator(); iterator.hasNext(); ) {  String prefix=(String)iterator.next();  bindNamespaceUri(prefix,(String)bindings.get(prefix));} @TO@ for (Iterator iterator=bindings.entrySet().iterator(); iterator.hasNext(); ) {  Map.Entry entry=(Map.Entry)iterator.next();  bindNamespaceUri((String)entry.getKey(),(String)entry.getValue());} @AT@ 2677 @LENGTH@ 210
---UPD VariableDeclarationExpression@@Iterator iterator=bindings.keySet().iterator() @TO@ Iterator iterator=bindings.entrySet().iterator() @AT@ 2682 @LENGTH@ 48
------UPD VariableDeclarationFragment@@iterator=bindings.keySet().iterator() @TO@ iterator=bindings.entrySet().iterator() @AT@ 2691 @LENGTH@ 39
---------UPD MethodInvocation@@bindings.keySet().iterator() @TO@ bindings.entrySet().iterator() @AT@ 2702 @LENGTH@ 28
------------UPD MethodInvocation@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 2702 @LENGTH@ 17
---UPD VariableDeclarationStatement@@String prefix=(String)iterator.next(); @TO@ Map.Entry entry=(Map.Entry)iterator.next(); @AT@ 2767 @LENGTH@ 41
------UPD SimpleType@@String @TO@ Map.Entry @AT@ 2767 @LENGTH@ 6
------UPD VariableDeclarationFragment@@prefix=(String)iterator.next() @TO@ entry=(Map.Entry)iterator.next() @AT@ 2774 @LENGTH@ 33
---------UPD SimpleName@@prefix @TO@ entry @AT@ 2774 @LENGTH@ 6
---------UPD CastExpression@@(String)iterator.next() @TO@ (Map.Entry)iterator.next() @AT@ 2783 @LENGTH@ 24
------------UPD SimpleType@@String @TO@ Map.Entry @AT@ 2784 @LENGTH@ 6
---UPD ExpressionStatement@@MethodInvocation:bindNamespaceUri(prefix,(String)bindings.get(prefix)) @TO@ MethodInvocation:bindNamespaceUri((String)entry.getKey(),(String)entry.getValue()) @AT@ 2821 @LENGTH@ 56
------UPD MethodInvocation@@bindNamespaceUri(prefix,(String)bindings.get(prefix)) @TO@ bindNamespaceUri((String)entry.getKey(),(String)entry.getValue()) @AT@ 2821 @LENGTH@ 55
---------UPD SimpleName@@MethodName:bindNamespaceUri:[prefix, (String)bindings.get(prefix)] @TO@ MethodName:bindNamespaceUri:[(String)entry.getKey(), (String)entry.getValue()] @AT@ 2821 @LENGTH@ 55
------------DEL SimpleName@@prefix @AT@ 2838 @LENGTH@ 6
------------INS CastExpression@@(String)entry.getKey() @TO@ SimpleName@@MethodName:bindNamespaceUri:[prefix, (String)bindings.get(prefix)] @AT@ 2845 @LENGTH@ 23
---------------INS SimpleType@@String @TO@ CastExpression@@(String)entry.getKey() @AT@ 2846 @LENGTH@ 6
---------------INS MethodInvocation@@entry.getKey() @TO@ CastExpression@@(String)entry.getKey() @AT@ 2854 @LENGTH@ 14
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 2854 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 2860 @LENGTH@ 8
------------UPD CastExpression@@(String)bindings.get(prefix) @TO@ (String)entry.getValue() @AT@ 2846 @LENGTH@ 29
---------------UPD MethodInvocation@@bindings.get(prefix) @TO@ entry.getValue() @AT@ 2855 @LENGTH@ 20
------------------UPD SimpleName@@Name:bindings @TO@ Name:entry @AT@ 2855 @LENGTH@ 8
------------------UPD SimpleName@@MethodName:get:[prefix] @TO@ MethodName:getValue:[] @AT@ 2864 @LENGTH@ 11
---------------------DEL SimpleName@@prefix @AT@ 2868 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:adapter.setAttributeValue("objectclass",new String[]{"top","person"}) @TO@ MethodInvocation:adapter.setAttributeValues("objectclass",new String[]{"top","person","organizationalPerson","inetOrgPerson"}) @AT@ 2229 @LENGTH@ 92
---UPD MethodInvocation@@adapter.setAttributeValue("objectclass",new String[]{"top","person"}) @TO@ adapter.setAttributeValues("objectclass",new String[]{"top","person","organizationalPerson","inetOrgPerson"}) @AT@ 2229 @LENGTH@ 91
------UPD SimpleName@@MethodName:setAttributeValue:["objectclass", new String[]{"top","person"}] @TO@ MethodName:setAttributeValues:["objectclass", new String[]{"top","person","organizationalPerson","inetOrgPerson"}] @AT@ 2237 @LENGTH@ 83
---------UPD ArrayCreation@@new String[]{"top","person"} @TO@ new String[]{"top","person","organizationalPerson","inetOrgPerson"} @AT@ 2287 @LENGTH@ 32
------------UPD ArrayInitializer@@{"top","person"} @TO@ {"top","person","organizationalPerson","inetOrgPerson"} @AT@ 2300 @LENGTH@ 19
---------------INS StringLiteral@@"organizationalPerson" @TO@ ArrayInitializer@@{"top","person"} @AT@ 2320 @LENGTH@ 22
---------------INS StringLiteral@@"inetOrgPerson" @TO@ ArrayInitializer@@{"top","person"} @AT@ 2344 @LENGTH@ 15


UPD ExpressionStatement@@Assignment:exchange=endpoint.getQueue().poll(100,TimeUnit.MILLISECONDS) @TO@ Assignment:exchange=endpoint.getQueue().poll(1000,TimeUnit.MILLISECONDS) @AT@ 1679 @LENGTH@ 64
---UPD Assignment@@exchange=endpoint.getQueue().poll(100,TimeUnit.MILLISECONDS) @TO@ exchange=endpoint.getQueue().poll(1000,TimeUnit.MILLISECONDS) @AT@ 1679 @LENGTH@ 63
------UPD MethodInvocation@@endpoint.getQueue().poll(100,TimeUnit.MILLISECONDS) @TO@ endpoint.getQueue().poll(1000,TimeUnit.MILLISECONDS) @AT@ 1690 @LENGTH@ 52
---------UPD SimpleName@@MethodName:poll:[100, TimeUnit.MILLISECONDS] @TO@ MethodName:poll:[1000, TimeUnit.MILLISECONDS] @AT@ 1710 @LENGTH@ 32
------------UPD NumberLiteral@@100 @TO@ 1000 @AT@ 1715 @LENGTH@ 3


UPD ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("Axiom does not support setting the Content-ID of attachments.") @TO@ ClassInstanceCreation:new UnsupportedOperationException("Axiom does not support getting the size of attachments.") @AT@ 7720 @LENGTH@ 105
---UPD ClassInstanceCreation@@UnsupportedOperationException["Axiom does not support setting the Content-ID of attachments."] @TO@ UnsupportedOperationException["Axiom does not support getting the size of attachments."] @AT@ 7726 @LENGTH@ 98
------UPD StringLiteral@@"Axiom does not support setting the Content-ID of attachments." @TO@ "Axiom does not support getting the size of attachments." @AT@ 7760 @LENGTH@ 63


INS MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @TO@ TypeDeclaration@@[public]DirContextAdapterTest, TestCase @AT@ 27437 @LENGTH@ 912
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 27437 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 27444 @LENGTH@ 4
---INS SimpleName@@MethodName:testSetAttribute_UpdateMode @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 27449 @LENGTH@ 27
---INS SimpleType@@NamingException @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 27486 @LENGTH@ 15
---INS VariableDeclarationStatement@@Attribute attribute=new BasicAttribute("cn","john doe"); @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 27554 @LENGTH@ 59
------INS SimpleType@@Attribute @TO@ VariableDeclarationStatement@@Attribute attribute=new BasicAttribute("cn","john doe"); @AT@ 27554 @LENGTH@ 9
------INS VariableDeclarationFragment@@attribute=new BasicAttribute("cn","john doe") @TO@ VariableDeclarationStatement@@Attribute attribute=new BasicAttribute("cn","john doe"); @AT@ 27564 @LENGTH@ 48
---------INS SimpleName@@attribute @TO@ VariableDeclarationFragment@@attribute=new BasicAttribute("cn","john doe") @AT@ 27564 @LENGTH@ 9
---------INS ClassInstanceCreation@@BasicAttribute["cn", "john doe"] @TO@ VariableDeclarationFragment@@attribute=new BasicAttribute("cn","john doe") @AT@ 27576 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@BasicAttribute["cn", "john doe"] @AT@ 27576 @LENGTH@ 3
------------INS SimpleType@@BasicAttribute @TO@ ClassInstanceCreation@@BasicAttribute["cn", "john doe"] @AT@ 27580 @LENGTH@ 14
------------INS StringLiteral@@"cn" @TO@ ClassInstanceCreation@@BasicAttribute["cn", "john doe"] @AT@ 27595 @LENGTH@ 4
------------INS StringLiteral@@"john doe" @TO@ ClassInstanceCreation@@BasicAttribute["cn", "john doe"] @AT@ 27601 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:classUnderTest.setAttribute(attribute) @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 27623 @LENGTH@ 39
------INS MethodInvocation@@classUnderTest.setAttribute(attribute) @TO@ ExpressionStatement@@MethodInvocation:classUnderTest.setAttribute(attribute) @AT@ 27623 @LENGTH@ 38
---------INS SimpleName@@Name:classUnderTest @TO@ MethodInvocation@@classUnderTest.setAttribute(attribute) @AT@ 27623 @LENGTH@ 14
---------INS SimpleName@@MethodName:setAttribute:[attribute] @TO@ MethodInvocation@@classUnderTest.setAttribute(attribute) @AT@ 27638 @LENGTH@ 23
------------INS SimpleName@@attribute @TO@ SimpleName@@MethodName:setAttribute:[attribute] @AT@ 27651 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:classUnderTest.setUpdateMode(true) @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 27705 @LENGTH@ 35
------INS MethodInvocation@@classUnderTest.setUpdateMode(true) @TO@ ExpressionStatement@@MethodInvocation:classUnderTest.setUpdateMode(true) @AT@ 27705 @LENGTH@ 34
---------INS SimpleName@@Name:classUnderTest @TO@ MethodInvocation@@classUnderTest.setUpdateMode(true) @AT@ 27705 @LENGTH@ 14
---------INS SimpleName@@MethodName:setUpdateMode:[true] @TO@ MethodInvocation@@classUnderTest.setUpdateMode(true) @AT@ 27720 @LENGTH@ 19
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setUpdateMode:[true] @AT@ 27734 @LENGTH@ 4
---INS VariableDeclarationStatement@@Attribute updatedAttribute=new BasicAttribute("cn","nisse hult"); @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 27800 @LENGTH@ 68
------INS SimpleType@@Attribute @TO@ VariableDeclarationStatement@@Attribute updatedAttribute=new BasicAttribute("cn","nisse hult"); @AT@ 27800 @LENGTH@ 9
------INS VariableDeclarationFragment@@updatedAttribute=new BasicAttribute("cn","nisse hult") @TO@ VariableDeclarationStatement@@Attribute updatedAttribute=new BasicAttribute("cn","nisse hult"); @AT@ 27810 @LENGTH@ 57
---------INS SimpleName@@updatedAttribute @TO@ VariableDeclarationFragment@@updatedAttribute=new BasicAttribute("cn","nisse hult") @AT@ 27810 @LENGTH@ 16
---------INS ClassInstanceCreation@@BasicAttribute["cn", "nisse hult"] @TO@ VariableDeclarationFragment@@updatedAttribute=new BasicAttribute("cn","nisse hult") @AT@ 27829 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@BasicAttribute["cn", "nisse hult"] @AT@ 27829 @LENGTH@ 3
------------INS SimpleType@@BasicAttribute @TO@ ClassInstanceCreation@@BasicAttribute["cn", "nisse hult"] @AT@ 27833 @LENGTH@ 14
------------INS StringLiteral@@"cn" @TO@ ClassInstanceCreation@@BasicAttribute["cn", "nisse hult"] @AT@ 27848 @LENGTH@ 4
------------INS StringLiteral@@"nisse hult" @TO@ ClassInstanceCreation@@BasicAttribute["cn", "nisse hult"] @AT@ 27854 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:classUnderTest.setAttribute(updatedAttribute) @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 27878 @LENGTH@ 46
------INS MethodInvocation@@classUnderTest.setAttribute(updatedAttribute) @TO@ ExpressionStatement@@MethodInvocation:classUnderTest.setAttribute(updatedAttribute) @AT@ 27878 @LENGTH@ 45
---------INS SimpleName@@Name:classUnderTest @TO@ MethodInvocation@@classUnderTest.setAttribute(updatedAttribute) @AT@ 27878 @LENGTH@ 14
---------INS SimpleName@@MethodName:setAttribute:[updatedAttribute] @TO@ MethodInvocation@@classUnderTest.setAttribute(updatedAttribute) @AT@ 27893 @LENGTH@ 30
------------INS SimpleName@@updatedAttribute @TO@ SimpleName@@MethodName:setAttribute:[updatedAttribute] @AT@ 27906 @LENGTH@ 16
---INS VariableDeclarationStatement@@ModificationItem[] mods=classUnderTest.getModificationItems(); @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 27962 @LENGTH@ 64
------INS ArrayType@@ModificationItem[] @TO@ VariableDeclarationStatement@@ModificationItem[] mods=classUnderTest.getModificationItems(); @AT@ 27962 @LENGTH@ 18
---------INS SimpleType@@ModificationItem @TO@ ArrayType@@ModificationItem[] @AT@ 27962 @LENGTH@ 16
------INS VariableDeclarationFragment@@mods=classUnderTest.getModificationItems() @TO@ VariableDeclarationStatement@@ModificationItem[] mods=classUnderTest.getModificationItems(); @AT@ 27981 @LENGTH@ 44
---------INS SimpleName@@mods @TO@ VariableDeclarationFragment@@mods=classUnderTest.getModificationItems() @AT@ 27981 @LENGTH@ 4
---------INS MethodInvocation@@classUnderTest.getModificationItems() @TO@ VariableDeclarationFragment@@mods=classUnderTest.getModificationItems() @AT@ 27988 @LENGTH@ 37
------------INS SimpleName@@Name:classUnderTest @TO@ MethodInvocation@@classUnderTest.getModificationItems() @AT@ 27988 @LENGTH@ 14
------------INS SimpleName@@MethodName:getModificationItems:[] @TO@ MethodInvocation@@classUnderTest.getModificationItems() @AT@ 28003 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,mods.length) @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 28036 @LENGTH@ 29
------INS MethodInvocation@@assertEquals(1,mods.length) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,mods.length) @AT@ 28036 @LENGTH@ 28
---------INS SimpleName@@MethodName:assertEquals:[1, mods.length] @TO@ MethodInvocation@@assertEquals(1,mods.length) @AT@ 28036 @LENGTH@ 28
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, mods.length] @AT@ 28049 @LENGTH@ 1
------------INS QualifiedName@@mods.length @TO@ SimpleName@@MethodName:assertEquals:[1, mods.length] @AT@ 28052 @LENGTH@ 11
---------------INS SimpleName@@mods @TO@ QualifiedName@@mods.length @AT@ 28052 @LENGTH@ 4
---------------INS SimpleName@@length @TO@ QualifiedName@@mods.length @AT@ 28057 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals(DirContext.REPLACE_ATTRIBUTE,mods[0].getModificationOp()) @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 28075 @LENGTH@ 72
------INS MethodInvocation@@assertEquals(DirContext.REPLACE_ATTRIBUTE,mods[0].getModificationOp()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(DirContext.REPLACE_ATTRIBUTE,mods[0].getModificationOp()) @AT@ 28075 @LENGTH@ 71
---------INS SimpleName@@MethodName:assertEquals:[DirContext.REPLACE_ATTRIBUTE, mods[0].getModificationOp()] @TO@ MethodInvocation@@assertEquals(DirContext.REPLACE_ATTRIBUTE,mods[0].getModificationOp()) @AT@ 28075 @LENGTH@ 71
------------INS QualifiedName@@DirContext.REPLACE_ATTRIBUTE @TO@ SimpleName@@MethodName:assertEquals:[DirContext.REPLACE_ATTRIBUTE, mods[0].getModificationOp()] @AT@ 28088 @LENGTH@ 28
---------------INS SimpleName@@DirContext @TO@ QualifiedName@@DirContext.REPLACE_ATTRIBUTE @AT@ 28088 @LENGTH@ 10
---------------INS SimpleName@@REPLACE_ATTRIBUTE @TO@ QualifiedName@@DirContext.REPLACE_ATTRIBUTE @AT@ 28099 @LENGTH@ 17
------------INS MethodInvocation@@mods[0].getModificationOp() @TO@ SimpleName@@MethodName:assertEquals:[DirContext.REPLACE_ATTRIBUTE, mods[0].getModificationOp()] @AT@ 28118 @LENGTH@ 27
---------------INS ArrayAccess@@mods[0] @TO@ MethodInvocation@@mods[0].getModificationOp() @AT@ 28118 @LENGTH@ 7
------------------INS SimpleName@@mods @TO@ ArrayAccess@@mods[0] @AT@ 28118 @LENGTH@ 4
------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@mods[0] @AT@ 28123 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getModificationOp:[] @TO@ MethodInvocation@@mods[0].getModificationOp() @AT@ 28126 @LENGTH@ 19
---INS VariableDeclarationStatement@@Attribute modificationAttribute=mods[0].getAttribute(); @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 28159 @LENGTH@ 57
------INS SimpleType@@Attribute @TO@ VariableDeclarationStatement@@Attribute modificationAttribute=mods[0].getAttribute(); @AT@ 28159 @LENGTH@ 9
------INS VariableDeclarationFragment@@modificationAttribute=mods[0].getAttribute() @TO@ VariableDeclarationStatement@@Attribute modificationAttribute=mods[0].getAttribute(); @AT@ 28169 @LENGTH@ 46
---------INS SimpleName@@modificationAttribute @TO@ VariableDeclarationFragment@@modificationAttribute=mods[0].getAttribute() @AT@ 28169 @LENGTH@ 21
---------INS MethodInvocation@@mods[0].getAttribute() @TO@ VariableDeclarationFragment@@modificationAttribute=mods[0].getAttribute() @AT@ 28193 @LENGTH@ 22
------------INS ArrayAccess@@mods[0] @TO@ MethodInvocation@@mods[0].getAttribute() @AT@ 28193 @LENGTH@ 7
---------------INS SimpleName@@mods @TO@ ArrayAccess@@mods[0] @AT@ 28193 @LENGTH@ 4
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@mods[0] @AT@ 28198 @LENGTH@ 1
------------INS SimpleName@@MethodName:getAttribute:[] @TO@ MethodInvocation@@mods[0].getAttribute() @AT@ 28201 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertEquals("cn",modificationAttribute.getID()) @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 28226 @LENGTH@ 50
------INS MethodInvocation@@assertEquals("cn",modificationAttribute.getID()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("cn",modificationAttribute.getID()) @AT@ 28226 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertEquals:["cn", modificationAttribute.getID()] @TO@ MethodInvocation@@assertEquals("cn",modificationAttribute.getID()) @AT@ 28226 @LENGTH@ 49
------------INS StringLiteral@@"cn" @TO@ SimpleName@@MethodName:assertEquals:["cn", modificationAttribute.getID()] @AT@ 28239 @LENGTH@ 4
------------INS MethodInvocation@@modificationAttribute.getID() @TO@ SimpleName@@MethodName:assertEquals:["cn", modificationAttribute.getID()] @AT@ 28245 @LENGTH@ 29
---------------INS SimpleName@@Name:modificationAttribute @TO@ MethodInvocation@@modificationAttribute.getID() @AT@ 28245 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getID:[] @TO@ MethodInvocation@@modificationAttribute.getID() @AT@ 28267 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertEquals("nisse hult",modificationAttribute.get()) @TO@ MethodDeclaration@@public, void, MethodName:testSetAttribute_UpdateMode, NamingException,  @AT@ 28286 @LENGTH@ 56
------INS MethodInvocation@@assertEquals("nisse hult",modificationAttribute.get()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("nisse hult",modificationAttribute.get()) @AT@ 28286 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertEquals:["nisse hult", modificationAttribute.get()] @TO@ MethodInvocation@@assertEquals("nisse hult",modificationAttribute.get()) @AT@ 28286 @LENGTH@ 55
------------INS StringLiteral@@"nisse hult" @TO@ SimpleName@@MethodName:assertEquals:["nisse hult", modificationAttribute.get()] @AT@ 28299 @LENGTH@ 12
------------INS MethodInvocation@@modificationAttribute.get() @TO@ SimpleName@@MethodName:assertEquals:["nisse hult", modificationAttribute.get()] @AT@ 28313 @LENGTH@ 27
---------------INS SimpleName@@Name:modificationAttribute @TO@ MethodInvocation@@modificationAttribute.get() @AT@ 28313 @LENGTH@ 21
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@modificationAttribute.get() @AT@ 28335 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals("Buffer get",buffer.remove(),"one") @TO@ MethodInvocation:assertEquals("Buffer get","one",buffer.remove()) @AT@ 3230 @LENGTH@ 51
---UPD MethodInvocation@@assertEquals("Buffer get",buffer.remove(),"one") @TO@ assertEquals("Buffer get","one",buffer.remove()) @AT@ 3230 @LENGTH@ 50
------UPD SimpleName@@MethodName:assertEquals:["Buffer get", buffer.remove(), "one"] @TO@ MethodName:assertEquals:["Buffer get", "one", buffer.remove()] @AT@ 3230 @LENGTH@ 50
---------INS StringLiteral@@"one" @TO@ SimpleName@@MethodName:assertEquals:["Buffer get", buffer.remove(), "one"] @AT@ 3257 @LENGTH@ 5
---------DEL StringLiteral@@"one" @AT@ 3274 @LENGTH@ 5


UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException(e.getMessage(),e) @TO@ ClassInstanceCreation:new RuntimeException(e.getMessage()) @AT@ 22762 @LENGTH@ 46
---UPD ClassInstanceCreation@@RuntimeException[e.getMessage(), e] @TO@ RuntimeException[e.getMessage()] @AT@ 22768 @LENGTH@ 39
------DEL SimpleName@@e @AT@ 22805 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:ldapOperations.rename(originalDn,temporaryDn) @TO@ MethodDeclaration@@public, void, MethodName:performOperation,  @AT@ 4288 @LENGTH@ 47
---INS MethodInvocation@@ldapOperations.rename(originalDn,temporaryDn) @TO@ ExpressionStatement@@MethodInvocation:ldapOperations.rename(originalDn,temporaryDn) @AT@ 4288 @LENGTH@ 46
------INS SimpleName@@Name:ldapOperations @TO@ MethodInvocation@@ldapOperations.rename(originalDn,temporaryDn) @AT@ 4288 @LENGTH@ 14
------INS SimpleName@@MethodName:rename:[originalDn, temporaryDn] @TO@ MethodInvocation@@ldapOperations.rename(originalDn,temporaryDn) @AT@ 4303 @LENGTH@ 31
---------INS SimpleName@@originalDn @TO@ SimpleName@@MethodName:rename:[originalDn, temporaryDn] @AT@ 4310 @LENGTH@ 10
---------INS SimpleName@@temporaryDn @TO@ SimpleName@@MethodName:rename:[originalDn, temporaryDn] @AT@ 4322 @LENGTH@ 11


UPD TryStatement@@try {  processor.preProcess(ctx);  results=se.executeSearch(ctx);  while (results.hasMore()) {    NameClassPair result=(NameClassPair)results.next();    handler.handleNameClassPair(result);  }  processor.postProcess(ctx);} catch (NameNotFoundException e) {}catch (PartialResultException e) {  if (ignorePartialResultException) {    log.debug("PartialResultException encountered and ignored",e);  } else {    throw getExceptionTranslator().translate(e);  }}catch (NamingException e) {  throw getExceptionTranslator().translate(e);} finally {  closeContextAndNamingEnumeration(ctx,results);} @TO@ try {  processor.preProcess(ctx);  results=se.executeSearch(ctx);  while (results.hasMore()) {    NameClassPair result=(NameClassPair)results.next();    handler.handleNameClassPair(result);  }} catch (NameNotFoundException e) {}catch (PartialResultException e) {  if (ignorePartialResultException) {    log.debug("PartialResultException encountered and ignored",e);  } else {    ex=getExceptionTranslator().translate(e);  }}catch (NamingException e) {  ex=getExceptionTranslator().translate(e);} finally {  try {    processor.postProcess(ctx);  } catch (  NamingException e) {    if (ex == null) {      ex=getExceptionTranslator().translate(e);    } else {      log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);    }  }  closeContextAndNamingEnumeration(ctx,results);  if (ex != null) {    throw ex;  }} @AT@ 11215 @LENGTH@ 1072
---UPD CatchClause@@catch (PartialResultException e) {  if (ignorePartialResultException) {    log.debug("PartialResultException encountered and ignored",e);  } else {    throw getExceptionTranslator().translate(e);  }} @TO@ catch (PartialResultException e) {  if (ignorePartialResultException) {    log.debug("PartialResultException encountered and ignored",e);  } else {    ex=getExceptionTranslator().translate(e);  }} @AT@ 11758 @LENGTH@ 350
------UPD IfStatement@@if (ignorePartialResultException) {  log.debug("PartialResultException encountered and ignored",e);} else {  throw getExceptionTranslator().translate(e);} @TO@ if (ignorePartialResultException) {  log.debug("PartialResultException encountered and ignored",e);} else {  ex=getExceptionTranslator().translate(e);} @AT@ 11882 @LENGTH@ 215
---------UPD Block@@ElseBody:{  throw getExceptionTranslator().translate(e);} @TO@ ElseBody:{  ex=getExceptionTranslator().translate(e);} @AT@ 12019 @LENGTH@ 78
------------DEL ThrowStatement@@MethodInvocation:getExceptionTranslator().translate(e) @AT@ 12038 @LENGTH@ 44
------------INS ExpressionStatement@@Assignment:ex=getExceptionTranslator().translate(e) @TO@ Block@@ElseBody:{  throw getExceptionTranslator().translate(e);} @AT@ 12388 @LENGTH@ 43
---------------INS Assignment@@ex=getExceptionTranslator().translate(e) @TO@ ExpressionStatement@@Assignment:ex=getExceptionTranslator().translate(e) @AT@ 12388 @LENGTH@ 42
------------------MOV MethodInvocation@@getExceptionTranslator().translate(e) @TO@ Assignment@@ex=getExceptionTranslator().translate(e) @AT@ 12044 @LENGTH@ 37
------------------INS SimpleName@@ex @TO@ Assignment@@ex=getExceptionTranslator().translate(e) @AT@ 12388 @LENGTH@ 2
------------------INS Operator@@= @TO@ Assignment@@ex=getExceptionTranslator().translate(e) @AT@ 12390 @LENGTH@ 1
---UPD CatchClause@@catch (NamingException e) {  throw getExceptionTranslator().translate(e);} @TO@ catch (NamingException e) {  ex=getExceptionTranslator().translate(e);} @AT@ 12109 @LENGTH@ 96
------DEL ThrowStatement@@MethodInvocation:getExceptionTranslator().translate(e) @AT@ 12150 @LENGTH@ 44
------INS ExpressionStatement@@Assignment:ex=getExceptionTranslator().translate(e) @TO@ CatchClause@@catch (NamingException e) {  throw getExceptionTranslator().translate(e);} @AT@ 12499 @LENGTH@ 43
---------INS Assignment@@ex=getExceptionTranslator().translate(e) @TO@ ExpressionStatement@@Assignment:ex=getExceptionTranslator().translate(e) @AT@ 12499 @LENGTH@ 42
------------MOV MethodInvocation@@getExceptionTranslator().translate(e) @TO@ Assignment@@ex=getExceptionTranslator().translate(e) @AT@ 12156 @LENGTH@ 37
------------INS SimpleName@@ex @TO@ Assignment@@ex=getExceptionTranslator().translate(e) @AT@ 12499 @LENGTH@ 2
------------INS Operator@@= @TO@ Assignment@@ex=getExceptionTranslator().translate(e) @AT@ 12501 @LENGTH@ 1
---UPD Block@@FinallyBody:{  closeContextAndNamingEnumeration(ctx,results);} @TO@ FinallyBody:{  try {    processor.postProcess(ctx);  } catch (  NamingException e) {    if (ex == null) {      ex=getExceptionTranslator().translate(e);    } else {      log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);    }  }  closeContextAndNamingEnumeration(ctx,results);  if (ex != null) {    throw ex;  }} @AT@ 12214 @LENGTH@ 73
------INS TryStatement@@try {  processor.postProcess(ctx);} catch (NamingException e) {  if (ex == null) {    ex=getExceptionTranslator().translate(e);  } else {    log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);  }} @TO@ Block@@FinallyBody:{  closeContextAndNamingEnumeration(ctx,results);} @AT@ 12577 @LENGTH@ 507
---------MOV ExpressionStatement@@MethodInvocation:processor.postProcess(ctx) @TO@ TryStatement@@try {  processor.postProcess(ctx);} catch (NamingException e) {  if (ex == null) {    ex=getExceptionTranslator().translate(e);  } else {    log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);  }} @AT@ 11504 @LENGTH@ 27
---------INS CatchClause@@catch (NamingException e) {  if (ex == null) {    ex=getExceptionTranslator().translate(e);  } else {    log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);  }} @TO@ TryStatement@@try {  processor.postProcess(ctx);} catch (NamingException e) {  if (ex == null) {    ex=getExceptionTranslator().translate(e);  } else {    log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);  }} @AT@ 12643 @LENGTH@ 441
------------INS SingleVariableDeclaration@@NamingException e @TO@ CatchClause@@catch (NamingException e) {  if (ex == null) {    ex=getExceptionTranslator().translate(e);  } else {    log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);  }} @AT@ 12650 @LENGTH@ 17
---------------INS SimpleType@@NamingException @TO@ SingleVariableDeclaration@@NamingException e @AT@ 12650 @LENGTH@ 15
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NamingException e @AT@ 12666 @LENGTH@ 1
------------INS IfStatement@@if (ex == null) {  ex=getExceptionTranslator().translate(e);} else {  log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);} @TO@ CatchClause@@catch (NamingException e) {  if (ex == null) {    ex=getExceptionTranslator().translate(e);  } else {    log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);  }} @AT@ 12688 @LENGTH@ 381
---------------INS InfixExpression@@ex == null @TO@ IfStatement@@if (ex == null) {  ex=getExceptionTranslator().translate(e);} else {  log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);} @AT@ 12692 @LENGTH@ 10
------------------INS SimpleName@@ex @TO@ InfixExpression@@ex == null @AT@ 12692 @LENGTH@ 2
------------------INS Operator@@== @TO@ InfixExpression@@ex == null @AT@ 12694 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@ex == null @AT@ 12698 @LENGTH@ 4
---------------INS Block@@ThenBody:{  ex=getExceptionTranslator().translate(e);} @TO@ IfStatement@@if (ex == null) {  ex=getExceptionTranslator().translate(e);} else {  log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);} @AT@ 12704 @LENGTH@ 85
------------------INS ExpressionStatement@@Assignment:ex=getExceptionTranslator().translate(e) @TO@ Block@@ThenBody:{  ex=getExceptionTranslator().translate(e);} @AT@ 12727 @LENGTH@ 43
---------------------INS Assignment@@ex=getExceptionTranslator().translate(e) @TO@ ExpressionStatement@@Assignment:ex=getExceptionTranslator().translate(e) @AT@ 12727 @LENGTH@ 42
------------------------INS SimpleName@@ex @TO@ Assignment@@ex=getExceptionTranslator().translate(e) @AT@ 12727 @LENGTH@ 2
------------------------INS Operator@@= @TO@ Assignment@@ex=getExceptionTranslator().translate(e) @AT@ 12729 @LENGTH@ 1
------------------------INS MethodInvocation@@getExceptionTranslator().translate(e) @TO@ Assignment@@ex=getExceptionTranslator().translate(e) @AT@ 12732 @LENGTH@ 37
---------------------------INS MethodInvocation@@MethodName:getExceptionTranslator:[] @TO@ MethodInvocation@@getExceptionTranslator().translate(e) @AT@ 12732 @LENGTH@ 24
---------------------------INS SimpleName@@MethodName:translate:[e] @TO@ MethodInvocation@@getExceptionTranslator().translate(e) @AT@ 12757 @LENGTH@ 12
------------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:translate:[e] @AT@ 12767 @LENGTH@ 1
---------------INS Block@@ElseBody:{  log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);} @TO@ IfStatement@@if (ex == null) {  ex=getExceptionTranslator().translate(e);} else {  log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);} @AT@ 12795 @LENGTH@ 274
------------------INS ExpressionStatement@@MethodInvocation:log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e) @TO@ Block@@ElseBody:{  log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e);} @AT@ 12933 @LENGTH@ 117
---------------------INS MethodInvocation@@log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e) @TO@ ExpressionStatement@@MethodInvocation:log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e) @AT@ 12933 @LENGTH@ 116
------------------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e) @AT@ 12933 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:debug:["Ignoring Exception from postProcess, " + "main exception thrown instead", e] @TO@ MethodInvocation@@log.debug("Ignoring Exception from postProcess, " + "main exception thrown instead",e) @AT@ 12937 @LENGTH@ 112
---------------------------INS InfixExpression@@"Ignoring Exception from postProcess, " + "main exception thrown instead" @TO@ SimpleName@@MethodName:debug:["Ignoring Exception from postProcess, " + "main exception thrown instead", e] @AT@ 12943 @LENGTH@ 102
------------------------------INS StringLiteral@@"Ignoring Exception from postProcess, " @TO@ InfixExpression@@"Ignoring Exception from postProcess, " + "main exception thrown instead" @AT@ 12943 @LENGTH@ 39
------------------------------INS Operator@@+ @TO@ InfixExpression@@"Ignoring Exception from postProcess, " + "main exception thrown instead" @AT@ 12982 @LENGTH@ 1
------------------------------INS StringLiteral@@"main exception thrown instead" @TO@ InfixExpression@@"Ignoring Exception from postProcess, " + "main exception thrown instead" @AT@ 13014 @LENGTH@ 31
---------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:debug:["Ignoring Exception from postProcess, " + "main exception thrown instead", e] @AT@ 13047 @LENGTH@ 1
------INS IfStatement@@if (ex != null) {  throw ex;} @TO@ Block@@FinallyBody:{  closeContextAndNamingEnumeration(ctx,results);} @AT@ 13219 @LENGTH@ 59
---------INS InfixExpression@@ex != null @TO@ IfStatement@@if (ex != null) {  throw ex;} @AT@ 13223 @LENGTH@ 10
------------INS SimpleName@@ex @TO@ InfixExpression@@ex != null @AT@ 13223 @LENGTH@ 2
------------INS Operator@@!= @TO@ InfixExpression@@ex != null @AT@ 13225 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@ex != null @AT@ 13229 @LENGTH@ 4
---------INS Block@@ThenBody:{  throw ex;} @TO@ IfStatement@@if (ex != null) {  throw ex;} @AT@ 13235 @LENGTH@ 43
------------INS ThrowStatement@@SimpleName:ex @TO@ Block@@ThenBody:{  throw ex;} @AT@ 13254 @LENGTH@ 9
---------------INS SimpleName@@ex @TO@ ThrowStatement@@SimpleName:ex @AT@ 13260 @LENGTH@ 2


UPD IfStatement@@if (inputStream == null) {  inputStream=createInputStream();} @TO@ if (inputStream == null) {  inputStream=createInputStream();  Assert.notNull(inputStream,"inputStream must not be null");} @AT@ 1250 @LENGTH@ 83
---UPD Block@@ThenBody:{  inputStream=createInputStream();} @TO@ ThenBody:{  inputStream=createInputStream();  Assert.notNull(inputStream,"inputStream must not be null");} @AT@ 1275 @LENGTH@ 58
------INS ExpressionStatement@@MethodInvocation:Assert.notNull(inputStream,"inputStream must not be null") @TO@ Block@@ThenBody:{  inputStream=createInputStream();} @AT@ 1377 @LENGTH@ 60
---------INS MethodInvocation@@Assert.notNull(inputStream,"inputStream must not be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(inputStream,"inputStream must not be null") @AT@ 1377 @LENGTH@ 59
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(inputStream,"inputStream must not be null") @AT@ 1377 @LENGTH@ 6
------------INS SimpleName@@MethodName:notNull:[inputStream, "inputStream must not be null"] @TO@ MethodInvocation@@Assert.notNull(inputStream,"inputStream must not be null") @AT@ 1384 @LENGTH@ 52
---------------INS SimpleName@@inputStream @TO@ SimpleName@@MethodName:notNull:[inputStream, "inputStream must not be null"] @AT@ 1392 @LENGTH@ 11
---------------INS StringLiteral@@"inputStream must not be null" @TO@ SimpleName@@MethodName:notNull:[inputStream, "inputStream must not be null"] @AT@ 1405 @LENGTH@ 30


UPD MethodDeclaration@@public, FromBuilder<E>, MethodName:intercept, @FluentArg("interceptor") InterceptorProcessor<E> interceptor,  @TO@ public, FromBuilder<E>, MethodName:intercept, @FluentArg("interceptor") DelegateProcess<E> interceptor,  @AT@ 9087 @LENGTH@ 273
---UPD SingleVariableDeclaration@@@FluentArg("interceptor") InterceptorProcessor<E> interceptor @TO@ @FluentArg("interceptor") DelegateProcess<E> interceptor @AT@ 9119 @LENGTH@ 60
------UPD ParameterizedType@@InterceptorProcessor<E> @TO@ DelegateProcess<E> @AT@ 9144 @LENGTH@ 23
---------UPD SimpleType@@InterceptorProcessor @TO@ DelegateProcess @AT@ 9144 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:from("direct:start").filter(XPathBuilder.xpath("/person[@name='James']")).to("mock:result") @TO@ MethodInvocation:from("direct:start").filter(xquery("/person[@name='James']")).to("mock:result") @AT@ 2206 @LENGTH@ 134
---UPD MethodInvocation@@from("direct:start").filter(XPathBuilder.xpath("/person[@name='James']")).to("mock:result") @TO@ from("direct:start").filter(xquery("/person[@name='James']")).to("mock:result") @AT@ 2206 @LENGTH@ 133
------UPD MethodInvocation@@MethodName:filter:[XPathBuilder.xpath("/person[@name='James']")] @TO@ MethodName:filter:[xquery("/person[@name='James']")] @AT@ 2206 @LENGTH@ 115
---------UPD MethodInvocation@@XPathBuilder.xpath("/person[@name='James']") @TO@ xquery("/person[@name='James']") @AT@ 2259 @LENGTH@ 44
------------DEL SimpleName@@Name:XPathBuilder @AT@ 2259 @LENGTH@ 12
------------UPD SimpleName@@MethodName:xpath:["/person[@name='James']"] @TO@ MethodName:xquery:["/person[@name='James']"] @AT@ 2272 @LENGTH@ 31


UPD MethodDeclaration@@void, MethodName:addTypeConverter, Class fromType, Class toType, TypeConverter typeConverter,  @TO@ void, MethodName:addTypeConverter, Class toType, Class fromType, TypeConverter typeConverter,  @AT@ 1199 @LENGTH@ 76
---UPD SingleVariableDeclaration@@Class fromType @TO@ Class toType @AT@ 1216 @LENGTH@ 14
------UPD SimpleName@@fromType @TO@ toType @AT@ 1222 @LENGTH@ 8
---UPD SingleVariableDeclaration@@Class toType @TO@ Class fromType @AT@ 1232 @LENGTH@ 12
------UPD SimpleName@@toType @TO@ fromType @AT@ 1238 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals("An authenticationDao must be set",expected.getMessage()) @TO@ MethodInvocation:assertEquals("A UserDetailsService must be set",expected.getMessage()) @AT@ 2239 @LENGTH@ 72
---UPD MethodInvocation@@assertEquals("An authenticationDao must be set",expected.getMessage()) @TO@ assertEquals("A UserDetailsService must be set",expected.getMessage()) @AT@ 2239 @LENGTH@ 71
------UPD SimpleName@@MethodName:assertEquals:["An authenticationDao must be set", expected.getMessage()] @TO@ MethodName:assertEquals:["A UserDetailsService must be set", expected.getMessage()] @AT@ 2239 @LENGTH@ 71
---------UPD StringLiteral@@"An authenticationDao must be set" @TO@ "A UserDetailsService must be set" @AT@ 2252 @LENGTH@ 34


INS ExpressionStatement@@MethodInvocation:ldapOperationsMock.rename(expectedOldName,expectedTempName) @TO@ MethodDeclaration@@public, void, MethodName:testPerformOperation,  @AT@ 1276 @LENGTH@ 61
---INS MethodInvocation@@ldapOperationsMock.rename(expectedOldName,expectedTempName) @TO@ ExpressionStatement@@MethodInvocation:ldapOperationsMock.rename(expectedOldName,expectedTempName) @AT@ 1276 @LENGTH@ 60
------INS SimpleName@@Name:ldapOperationsMock @TO@ MethodInvocation@@ldapOperationsMock.rename(expectedOldName,expectedTempName) @AT@ 1276 @LENGTH@ 18
------INS SimpleName@@MethodName:rename:[expectedOldName, expectedTempName] @TO@ MethodInvocation@@ldapOperationsMock.rename(expectedOldName,expectedTempName) @AT@ 1295 @LENGTH@ 41
---------INS SimpleName@@expectedOldName @TO@ SimpleName@@MethodName:rename:[expectedOldName, expectedTempName] @AT@ 1302 @LENGTH@ 15
---------INS SimpleName@@expectedTempName @TO@ SimpleName@@MethodName:rename:[expectedOldName, expectedTempName] @AT@ 1319 @LENGTH@ 16


UPD ExpressionStatement@@Assignment:startEndpoint=resolveMandatoryEndpoint(context,"queue:a") @TO@ Assignment:startEndpoint=resolveMandatoryEndpoint(context,"direct:a") @AT@ 2105 @LENGTH@ 61
---UPD Assignment@@startEndpoint=resolveMandatoryEndpoint(context,"queue:a") @TO@ startEndpoint=resolveMandatoryEndpoint(context,"direct:a") @AT@ 2105 @LENGTH@ 60
------UPD MethodInvocation@@resolveMandatoryEndpoint(context,"queue:a") @TO@ resolveMandatoryEndpoint(context,"direct:a") @AT@ 2121 @LENGTH@ 44
---------UPD SimpleName@@MethodName:resolveMandatoryEndpoint:[context, "queue:a"] @TO@ MethodName:resolveMandatoryEndpoint:[context, "direct:a"] @AT@ 2121 @LENGTH@ 44
------------UPD StringLiteral@@"queue:a" @TO@ "direct:a" @AT@ 2155 @LENGTH@ 9


UPD VariableDeclarationStatement@@final InterceptorProcessor<Exchange> interceptor2=new InterceptorProcessor<Exchange>(){
  @Override public void process(  Exchange exchange){
    order.add("START:2");
    super.process(exchange);
    order.add("END:2");
  }
}
; @TO@ final DelegateProcess<Exchange> interceptor2=new DelegateProcess<Exchange>(){
  @Override public void process(  Exchange exchange){
    order.add("START:2");
    super.process(exchange);
    order.add("END:2");
  }
}
; @AT@ 1895 @LENGTH@ 285
---UPD ParameterizedType@@InterceptorProcessor<Exchange> @TO@ DelegateProcess<Exchange> @AT@ 1901 @LENGTH@ 30
------UPD SimpleType@@InterceptorProcessor @TO@ DelegateProcess @AT@ 1901 @LENGTH@ 20
---UPD VariableDeclarationFragment@@interceptor2=new InterceptorProcessor<Exchange>(){
  @Override public void process(  Exchange exchange){
    order.add("START:2");
    super.process(exchange);
    order.add("END:2");
  }
}
 @TO@ interceptor2=new DelegateProcess<Exchange>(){
  @Override public void process(  Exchange exchange){
    order.add("START:2");
    super.process(exchange);
    order.add("END:2");
  }
}
 @AT@ 1932 @LENGTH@ 247
------UPD ClassInstanceCreation@@InterceptorProcessor<Exchange>[] @TO@ DelegateProcess<Exchange>[] @AT@ 1947 @LENGTH@ 232
---------UPD ParameterizedType@@InterceptorProcessor<Exchange> @TO@ DelegateProcess<Exchange> @AT@ 1951 @LENGTH@ 30
------------UPD SimpleType@@InterceptorProcessor @TO@ DelegateProcess @AT@ 1951 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:System.out.println("hit") @TO@ MethodInvocation:log.debug("hit") @AT@ 1536 @LENGTH@ 26
---UPD MethodInvocation@@System.out.println("hit") @TO@ log.debug("hit") @AT@ 1536 @LENGTH@ 25
------DEL QualifiedName@@Name:System.out @AT@ 1536 @LENGTH@ 10
------UPD SimpleName@@MethodName:println:["hit"] @TO@ MethodName:debug:["hit"] @AT@ 1547 @LENGTH@ 14
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("hit") @AT@ 1707 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:resultEndpoint.assertIsSatisfied(5000) @TO@ MethodInvocation:resultEndpoint.assertIsSatisfied(10000) @AT@ 2058 @LENGTH@ 39
---UPD MethodInvocation@@resultEndpoint.assertIsSatisfied(5000) @TO@ resultEndpoint.assertIsSatisfied(10000) @AT@ 2058 @LENGTH@ 38
------UPD SimpleName@@MethodName:assertIsSatisfied:[5000] @TO@ MethodName:assertIsSatisfied:[10000] @AT@ 2073 @LENGTH@ 23
---------UPD NumberLiteral@@5000 @TO@ 10000 @AT@ 2091 @LENGTH@ 4


UPD IfStatement@@if (!FLOW_EXECUTION_VARIABLE_NAME.equals(name)) {  return resolverDelegate.resolveVariable(context,name);} else {  return FlowExecutionHolderUtils.getRequiredCurrentFlowExecution(context);} @TO@ if (FLOW_EXECUTION_VARIABLE_NAME.equals(name)) {  return FlowExecutionHolderUtils.getRequiredCurrentFlowExecution(context);} else {  return resolverDelegate.resolveVariable(context,name);} @AT@ 2693 @LENGTH@ 202
---DEL PrefixExpression@@!FLOW_EXECUTION_VARIABLE_NAME.equals(name) @AT@ 2697 @LENGTH@ 42
------DEL Operator@@! @AT@ 2697 @LENGTH@ 1
---MOV MethodInvocation@@FLOW_EXECUTION_VARIABLE_NAME.equals(name) @TO@ IfStatement@@if (!FLOW_EXECUTION_VARIABLE_NAME.equals(name)) {  return resolverDelegate.resolveVariable(context,name);} else {  return FlowExecutionHolderUtils.getRequiredCurrentFlowExecution(context);} @AT@ 2698 @LENGTH@ 41
---UPD Block@@ThenBody:{  return resolverDelegate.resolveVariable(context,name);} @TO@ ElseBody:{  return resolverDelegate.resolveVariable(context,name);} @AT@ 2741 @LENGTH@ 64
---MOV Block@@ThenBody:{  return resolverDelegate.resolveVariable(context,name);} @TO@ IfStatement@@if (!FLOW_EXECUTION_VARIABLE_NAME.equals(name)) {  return resolverDelegate.resolveVariable(context,name);} else {  return FlowExecutionHolderUtils.getRequiredCurrentFlowExecution(context);} @AT@ 2741 @LENGTH@ 64
---UPD Block@@ElseBody:{  return FlowExecutionHolderUtils.getRequiredCurrentFlowExecution(context);} @TO@ ThenBody:{  return FlowExecutionHolderUtils.getRequiredCurrentFlowExecution(context);} @AT@ 2813 @LENGTH@ 82


UPD ExpressionStatement@@MethodInvocation:from("queue:a").idempotentConsumer(header("myMessageId"),memoryMessageIdRepository()).to("queue:b") @TO@ MethodInvocation:from("queue:a").idempotentConsumer(header("myMessageId"),memoryMessageIdRepository(200)).to("queue:b") @AT@ 15242 @LENGTH@ 101
---UPD MethodInvocation@@from("queue:a").idempotentConsumer(header("myMessageId"),memoryMessageIdRepository()).to("queue:b") @TO@ from("queue:a").idempotentConsumer(header("myMessageId"),memoryMessageIdRepository(200)).to("queue:b") @AT@ 15242 @LENGTH@ 100
------UPD MethodInvocation@@MethodName:idempotentConsumer:[header("myMessageId"), memoryMessageIdRepository()] @TO@ MethodName:idempotentConsumer:[header("myMessageId"), memoryMessageIdRepository(200)] @AT@ 15242 @LENGTH@ 86
---------UPD MethodInvocation@@MethodName:memoryMessageIdRepository:[] @TO@ memoryMessageIdRepository(200) @AT@ 15300 @LENGTH@ 27
------------INS SimpleName@@MethodName:memoryMessageIdRepository:[200] @TO@ MethodInvocation@@MethodName:memoryMessageIdRepository:[] @AT@ 15325 @LENGTH@ 30
---------------INS NumberLiteral@@200 @TO@ SimpleName@@MethodName:memoryMessageIdRepository:[200] @AT@ 15351 @LENGTH@ 3


UPD VariableDeclarationStatement@@String fromUri="queue:test.a"; @TO@ String fromUri="direct:test.a"; @AT@ 2738 @LENGTH@ 32
---UPD VariableDeclarationFragment@@fromUri="queue:test.a" @TO@ fromUri="direct:test.a" @AT@ 2745 @LENGTH@ 24
------UPD StringLiteral@@"queue:test.a" @TO@ "direct:test.a" @AT@ 2755 @LENGTH@ 14


INS MethodDeclaration@@public, static, void, MethodName:notNull, Object value, String name,  @TO@ TypeDeclaration@@[public]ObjectHelper,  @AT@ 1071 @LENGTH@ 173
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:notNull, Object value, String name,  @AT@ 1071 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:notNull, Object value, String name,  @AT@ 1078 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:notNull, Object value, String name,  @AT@ 1085 @LENGTH@ 4
---INS SimpleName@@MethodName:notNull @TO@ MethodDeclaration@@public, static, void, MethodName:notNull, Object value, String name,  @AT@ 1090 @LENGTH@ 7
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, static, void, MethodName:notNull, Object value, String name,  @AT@ 1098 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 1098 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 1105 @LENGTH@ 5
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, static, void, MethodName:notNull, Object value, String name,  @AT@ 1112 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 1112 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 1119 @LENGTH@ 4
---INS IfStatement@@if (value == null) {  throw new NullPointerException("No " + name + " specified");} @TO@ MethodDeclaration@@public, static, void, MethodName:notNull, Object value, String name,  @AT@ 1135 @LENGTH@ 103
------INS InfixExpression@@value == null @TO@ IfStatement@@if (value == null) {  throw new NullPointerException("No " + name + " specified");} @AT@ 1139 @LENGTH@ 13
---------INS SimpleName@@value @TO@ InfixExpression@@value == null @AT@ 1139 @LENGTH@ 5
---------INS Operator@@== @TO@ InfixExpression@@value == null @AT@ 1144 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@value == null @AT@ 1148 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new NullPointerException("No " + name + " specified");} @TO@ IfStatement@@if (value == null) {  throw new NullPointerException("No " + name + " specified");} @AT@ 1154 @LENGTH@ 84
---------INS ThrowStatement@@ClassInstanceCreation:new NullPointerException("No " + name + " specified") @TO@ Block@@ThenBody:{  throw new NullPointerException("No " + name + " specified");} @AT@ 1168 @LENGTH@ 60
------------INS ClassInstanceCreation@@NullPointerException["No " + name + " specified"] @TO@ ThrowStatement@@ClassInstanceCreation:new NullPointerException("No " + name + " specified") @AT@ 1174 @LENGTH@ 53
---------------INS New@@new @TO@ ClassInstanceCreation@@NullPointerException["No " + name + " specified"] @AT@ 1174 @LENGTH@ 3
---------------INS SimpleType@@NullPointerException @TO@ ClassInstanceCreation@@NullPointerException["No " + name + " specified"] @AT@ 1178 @LENGTH@ 20
---------------INS InfixExpression@@"No " + name + " specified" @TO@ ClassInstanceCreation@@NullPointerException["No " + name + " specified"] @AT@ 1199 @LENGTH@ 27
------------------INS StringLiteral@@"No " @TO@ InfixExpression@@"No " + name + " specified" @AT@ 1199 @LENGTH@ 5
------------------INS Operator@@+ @TO@ InfixExpression@@"No " + name + " specified" @AT@ 1204 @LENGTH@ 1
------------------INS SimpleName@@name @TO@ InfixExpression@@"No " + name + " specified" @AT@ 1207 @LENGTH@ 4
------------------INS StringLiteral@@" specified" @TO@ InfixExpression@@"No " + name + " specified" @AT@ 1214 @LENGTH@ 12


DEL ExpressionStatement@@MethodInvocation:ldapOperations.rename(dn,temporaryDn) @AT@ 2069 @LENGTH@ 39
---DEL MethodInvocation@@ldapOperations.rename(dn,temporaryDn) @AT@ 2069 @LENGTH@ 38
------DEL SimpleName@@Name:ldapOperations @AT@ 2069 @LENGTH@ 14
------DEL SimpleName@@MethodName:rename:[dn, temporaryDn] @AT@ 2084 @LENGTH@ 23
---------DEL SimpleName@@dn @AT@ 2091 @LENGTH@ 2
---------DEL SimpleName@@temporaryDn @AT@ 2095 @LENGTH@ 11


UPD TryStatement@@try {  getImplementation().writeTo(getSaajMessage(),outputStream);} catch (SOAPException ex) {  throw new SaajSoapMessageException("Could not write message to OutputStream: " + ex.getMessage(),ex);} @TO@ try {  getImplementation().writeTo(getSaajMessage(),outputStream);  outputStream.flush();} catch (SOAPException ex) {  throw new SaajSoapMessageException("Could not write message to OutputStream: " + ex.getMessage(),ex);} @AT@ 3656 @LENGTH@ 248
---INS ExpressionStatement@@MethodInvocation:outputStream.flush() @TO@ TryStatement@@try {  getImplementation().writeTo(getSaajMessage(),outputStream);} catch (SOAPException ex) {  throw new SaajSoapMessageException("Could not write message to OutputStream: " + ex.getMessage(),ex);} @AT@ 3747 @LENGTH@ 21
------INS MethodInvocation@@outputStream.flush() @TO@ ExpressionStatement@@MethodInvocation:outputStream.flush() @AT@ 3747 @LENGTH@ 20
---------INS SimpleName@@Name:outputStream @TO@ MethodInvocation@@outputStream.flush() @AT@ 3747 @LENGTH@ 12
---------INS SimpleName@@MethodName:flush:[] @TO@ MethodInvocation@@outputStream.flush() @AT@ 3760 @LENGTH@ 7


INS MethodDeclaration@@public, Predicate<E>, MethodName:getPredicate,  @TO@ TypeDeclaration@@[public]FilterProcessor, [Processor<E>] @AT@ 1403 @LENGTH@ 68
---INS Modifier@@public @TO@ MethodDeclaration@@public, Predicate<E>, MethodName:getPredicate,  @AT@ 1403 @LENGTH@ 6
---INS ParameterizedType@@Predicate<E> @TO@ MethodDeclaration@@public, Predicate<E>, MethodName:getPredicate,  @AT@ 1410 @LENGTH@ 12
------INS SimpleType@@Predicate @TO@ ParameterizedType@@Predicate<E> @AT@ 1410 @LENGTH@ 9
------INS SimpleType@@E @TO@ ParameterizedType@@Predicate<E> @AT@ 1420 @LENGTH@ 1
---INS SimpleName@@MethodName:getPredicate @TO@ MethodDeclaration@@public, Predicate<E>, MethodName:getPredicate,  @AT@ 1423 @LENGTH@ 12
---INS ReturnStatement@@SimpleName:predicate @TO@ MethodDeclaration@@public, Predicate<E>, MethodName:getPredicate,  @AT@ 1448 @LENGTH@ 17
------INS SimpleName@@predicate @TO@ ReturnStatement@@SimpleName:predicate @AT@ 1455 @LENGTH@ 9


UPD Block@@ThenBody:{  CompensatingTransactionDataManager transactionDataManager=transactionContextHolder.getTransactionDataManager();  CompensatingTransactionOperationFactory operationFactory=transactionContextHolder.getOperationFactory();  CompensatingTransactionRecordingOperation operation=operationFactory.createRecordingOperation(method.getName());  CompensatingTransactionRollbackOperation rollbackOperation=operation.recordOperation(args);  Object result=null;  rollbackOperation.performOperation();  transactionDataManager.operationPerformed(rollbackOperation);  return result;} @TO@ ThenBody:{  CompensatingTransactionDataManager transactionDataManager=transactionContextHolder.getTransactionDataManager();  CompensatingTransactionOperationFactory operationFactory=transactionContextHolder.getOperationFactory();  CompensatingTransactionOperationRecorder operation=operationFactory.createRecordingOperation(method.getName());  CompensatingTransactionOperationExecutor rollbackOperation=operation.recordOperation(args);  Object result=null;  rollbackOperation.performOperation();  transactionDataManager.operationPerformed(rollbackOperation);  return result;} @AT@ 5628 @LENGTH@ 956
---UPD VariableDeclarationStatement@@CompensatingTransactionRecordingOperation operation=operationFactory.createRecordingOperation(method.getName()); @TO@ CompensatingTransactionOperationRecorder operation=operationFactory.createRecordingOperation(method.getName()); @AT@ 5973 @LENGTH@ 136
------UPD SimpleType@@CompensatingTransactionRecordingOperation @TO@ CompensatingTransactionOperationRecorder @AT@ 5973 @LENGTH@ 41
---UPD VariableDeclarationStatement@@CompensatingTransactionRollbackOperation rollbackOperation=operation.recordOperation(args); @TO@ CompensatingTransactionOperationExecutor rollbackOperation=operation.recordOperation(args); @AT@ 6123 @LENGTH@ 115
------UPD SimpleType@@CompensatingTransactionRollbackOperation @TO@ CompensatingTransactionOperationExecutor @AT@ 6123 @LENGTH@ 40


UPD IfStatement@@if (nextChar == ',' | nextChar == '=' | nextChar == '+' | nextChar == '<' | nextChar == '>' | nextChar == '#' | nextChar == ';' | nextChar == '\\' | nextChar == '\"') {  decoded.append(nextChar);  i+=2;} else {  if (value.length() <= i + 2) {    if (nextChar == ' ') {      decoded.append(nextChar);      i+=2;    } else {      throw new BadLdapGrammarException("Unexpected end of value " + "expected special or hex, found '" + nextChar + "'");    }  } else {    String hexString="" + nextChar + value.charAt(i + 2);    decoded.append(Integer.parseInt(hexString,16));    i+=3;  }} @TO@ if (nextChar == ',' | nextChar == '=' | nextChar == '+' | nextChar == '<' | nextChar == '>' | nextChar == '#' | nextChar == ';' | nextChar == '\\' | nextChar == '\"' | nextChar == ' ') {  decoded.append(nextChar);  i+=2;} else {  if (value.length() <= i + 2) {    throw new BadLdapGrammarException("Unexpected end of value " + "expected special or hex, found '" + nextChar + "'");  } else {    String hexString="" + nextChar + value.charAt(i + 2);    decoded.append((char)Integer.parseInt(hexString,16));    i+=3;  }} @AT@ 6324 @LENGTH@ 1395
---INS InfixExpression@@nextChar == ',' | nextChar == '=' | nextChar == '+' | nextChar == '<' | nextChar == '>' | nextChar == '#' | nextChar == ';' | nextChar == '\\' | nextChar == '\"' | nextChar == ' ' @TO@ IfStatement@@if (nextChar == ',' | nextChar == '=' | nextChar == '+' | nextChar == '<' | nextChar == '>' | nextChar == '#' | nextChar == ';' | nextChar == '\\' | nextChar == '\"') {  decoded.append(nextChar);  i+=2;} else {  if (value.length() <= i + 2) {    if (nextChar == ' ') {      decoded.append(nextChar);      i+=2;    } else {      throw new BadLdapGrammarException("Unexpected end of value " + "expected special or hex, found '" + nextChar + "'");    }  } else {    String hexString="" + nextChar + value.charAt(i + 2);    decoded.append(Integer.parseInt(hexString,16));    i+=3;  }} @AT@ 6328 @LENGTH@ 295
------MOV InfixExpression@@nextChar == ',' | nextChar == '=' | nextChar == '+' | nextChar == '<' | nextChar == '>' | nextChar == '#' | nextChar == ';' | nextChar == '\\' | nextChar == '\"' @TO@ InfixExpression@@nextChar == ',' | nextChar == '=' | nextChar == '+' | nextChar == '<' | nextChar == '>' | nextChar == '#' | nextChar == ';' | nextChar == '\\' | nextChar == '\"' | nextChar == ' ' @AT@ 6328 @LENGTH@ 248
------INS Operator@@| @TO@ InfixExpression@@nextChar == ',' | nextChar == '=' | nextChar == '+' | nextChar == '<' | nextChar == '>' | nextChar == '#' | nextChar == ';' | nextChar == '\\' | nextChar == '\"' | nextChar == ' ' @AT@ 6576 @LENGTH@ 1
------INS InfixExpression@@nextChar == ' ' @TO@ InfixExpression@@nextChar == ',' | nextChar == '=' | nextChar == '+' | nextChar == '<' | nextChar == '>' | nextChar == '#' | nextChar == ';' | nextChar == '\\' | nextChar == '\"' | nextChar == ' ' @AT@ 6608 @LENGTH@ 15
---------INS SimpleName@@nextChar @TO@ InfixExpression@@nextChar == ' ' @AT@ 6608 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@nextChar == ' ' @AT@ 6616 @LENGTH@ 2
---------INS CharacterLiteral@@' ' @TO@ InfixExpression@@nextChar == ' ' @AT@ 6620 @LENGTH@ 3
---UPD Block@@ElseBody:{  if (value.length() <= i + 2) {    if (nextChar == ' ') {      decoded.append(nextChar);      i+=2;    } else {      throw new BadLdapGrammarException("Unexpected end of value " + "expected special or hex, found '" + nextChar + "'");    }  } else {    String hexString="" + nextChar + value.charAt(i + 2);    decoded.append(Integer.parseInt(hexString,16));    i+=3;  }} @TO@ ElseBody:{  if (value.length() <= i + 2) {    throw new BadLdapGrammarException("Unexpected end of value " + "expected special or hex, found '" + nextChar + "'");  } else {    String hexString="" + nextChar + value.charAt(i + 2);    decoded.append((char)Integer.parseInt(hexString,16));    i+=3;  }} @AT@ 6692 @LENGTH@ 1027
------UPD IfStatement@@if (value.length() <= i + 2) {  if (nextChar == ' ') {    decoded.append(nextChar);    i+=2;  } else {    throw new BadLdapGrammarException("Unexpected end of value " + "expected special or hex, found '" + nextChar + "'");  }} else {  String hexString="" + nextChar + value.charAt(i + 2);  decoded.append(Integer.parseInt(hexString,16));  i+=3;} @TO@ if (value.length() <= i + 2) {  throw new BadLdapGrammarException("Unexpected end of value " + "expected special or hex, found '" + nextChar + "'");} else {  String hexString="" + nextChar + value.charAt(i + 2);  decoded.append((char)Integer.parseInt(hexString,16));  i+=3;} @AT@ 6719 @LENGTH@ 977
---------DEL Block@@ThenBody:{  if (nextChar == ' ') {    decoded.append(nextChar);    i+=2;  } else {    throw new BadLdapGrammarException("Unexpected end of value " + "expected special or hex, found '" + nextChar + "'");  }} @AT@ 6748 @LENGTH@ 618
------------DEL IfStatement@@if (nextChar == ' ') {  decoded.append(nextChar);  i+=2;} else {  throw new BadLdapGrammarException("Unexpected end of value " + "expected special or hex, found '" + nextChar + "'");} @AT@ 6858 @LENGTH@ 481
---------------DEL InfixExpression@@nextChar == ' ' @AT@ 6862 @LENGTH@ 15
------------------DEL SimpleName@@nextChar @AT@ 6862 @LENGTH@ 8
------------------DEL Operator@@== @AT@ 6870 @LENGTH@ 2
------------------DEL CharacterLiteral@@' ' @AT@ 6874 @LENGTH@ 3
---------------DEL Block@@ThenBody:{  decoded.append(nextChar);  i+=2;} @AT@ 6879 @LENGTH@ 132
------------------DEL ExpressionStatement@@MethodInvocation:decoded.append(nextChar) @AT@ 6914 @LENGTH@ 25
---------------------DEL MethodInvocation@@decoded.append(nextChar) @AT@ 6914 @LENGTH@ 24
------------------------DEL SimpleName@@Name:decoded @AT@ 6914 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:append:[nextChar] @AT@ 6922 @LENGTH@ 16
---------------------------DEL SimpleName@@nextChar @AT@ 6929 @LENGTH@ 8
------------------DEL ExpressionStatement@@Assignment:i+=2 @AT@ 6973 @LENGTH@ 7
---------------------DEL Assignment@@i+=2 @AT@ 6973 @LENGTH@ 6
------------------------DEL SimpleName@@i @AT@ 6973 @LENGTH@ 1
------------------------DEL Operator@@+= @AT@ 6974 @LENGTH@ 2
------------------------DEL NumberLiteral@@2 @AT@ 6978 @LENGTH@ 1
---------MOV Block@@ElseBody:{  throw new BadLdapGrammarException("Unexpected end of value " + "expected special or hex, found '" + nextChar + "'");} @TO@ IfStatement@@if (value.length() <= i + 2) {  if (nextChar == ' ') {    decoded.append(nextChar);    i+=2;  } else {    throw new BadLdapGrammarException("Unexpected end of value " + "expected special or hex, found '" + nextChar + "'");  }} else {  String hexString="" + nextChar + value.charAt(i + 2);  decoded.append(Integer.parseInt(hexString,16));  i+=3;} @AT@ 7017 @LENGTH@ 322
---------UPD Block@@ElseBody:{  String hexString="" + nextChar + value.charAt(i + 2);  decoded.append(Integer.parseInt(hexString,16));  i+=3;} @TO@ ElseBody:{  String hexString="" + nextChar + value.charAt(i + 2);  decoded.append((char)Integer.parseInt(hexString,16));  i+=3;} @AT@ 7372 @LENGTH@ 324
------------UPD ExpressionStatement@@MethodInvocation:decoded.append(Integer.parseInt(hexString,16)) @TO@ MethodInvocation:decoded.append((char)Integer.parseInt(hexString,16)) @AT@ 7584 @LENGTH@ 48
---------------UPD MethodInvocation@@decoded.append(Integer.parseInt(hexString,16)) @TO@ decoded.append((char)Integer.parseInt(hexString,16)) @AT@ 7584 @LENGTH@ 47
------------------UPD SimpleName@@MethodName:append:[Integer.parseInt(hexString,16)] @TO@ MethodName:append:[(char)Integer.parseInt(hexString,16)] @AT@ 7592 @LENGTH@ 39
---------------------INS CastExpression@@(char)Integer.parseInt(hexString,16) @TO@ SimpleName@@MethodName:append:[Integer.parseInt(hexString,16)] @AT@ 7330 @LENGTH@ 75
------------------------INS PrimitiveType@@char @TO@ CastExpression@@(char)Integer.parseInt(hexString,16) @AT@ 7331 @LENGTH@ 4
------------------------MOV MethodInvocation@@Integer.parseInt(hexString,16) @TO@ CastExpression@@(char)Integer.parseInt(hexString,16) @AT@ 7599 @LENGTH@ 31


UPD MethodDeclaration@@public, CompensatingTransactionRecordingOperation, MethodName:createRecordingOperation, String method,  @TO@ public, CompensatingTransactionOperationRecorder, MethodName:createRecordingOperation, String method,  @AT@ 121 @LENGTH@ 103
---UPD SimpleType@@CompensatingTransactionRecordingOperation @TO@ CompensatingTransactionOperationRecorder @AT@ 128 @LENGTH@ 41


UPD TypeDeclaration@@[public]DirContextProxy, [DirContext] @TO@ [public]DirContextProxy,  @AT@ 922 @LENGTH@ 206
---DEL SimpleType@@DirContext @AT@ 963 @LENGTH@ 10


INS FieldDeclaration@@private, static, final, transient, Log, [log=LogFactory.getLog(TimerRouteTest.class)] @TO@ TypeDeclaration@@[public]TimerRouteTest, TestCase @AT@ 1300 @LENGTH@ 81
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, transient, Log, [log=LogFactory.getLog(TimerRouteTest.class)] @AT@ 1300 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, transient, Log, [log=LogFactory.getLog(TimerRouteTest.class)] @AT@ 1308 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, transient, Log, [log=LogFactory.getLog(TimerRouteTest.class)] @AT@ 1315 @LENGTH@ 5
---INS Modifier@@transient @TO@ FieldDeclaration@@private, static, final, transient, Log, [log=LogFactory.getLog(TimerRouteTest.class)] @AT@ 1321 @LENGTH@ 9
---INS SimpleType@@Log @TO@ FieldDeclaration@@private, static, final, transient, Log, [log=LogFactory.getLog(TimerRouteTest.class)] @AT@ 1331 @LENGTH@ 3
---INS VariableDeclarationFragment@@log=LogFactory.getLog(TimerRouteTest.class) @TO@ FieldDeclaration@@private, static, final, transient, Log, [log=LogFactory.getLog(TimerRouteTest.class)] @AT@ 1335 @LENGTH@ 45
------INS SimpleName@@log @TO@ VariableDeclarationFragment@@log=LogFactory.getLog(TimerRouteTest.class) @AT@ 1335 @LENGTH@ 3
------INS MethodInvocation@@LogFactory.getLog(TimerRouteTest.class) @TO@ VariableDeclarationFragment@@log=LogFactory.getLog(TimerRouteTest.class) @AT@ 1341 @LENGTH@ 39
---------INS SimpleName@@Name:LogFactory @TO@ MethodInvocation@@LogFactory.getLog(TimerRouteTest.class) @AT@ 1341 @LENGTH@ 10
---------INS SimpleName@@MethodName:getLog:[TimerRouteTest.class] @TO@ MethodInvocation@@LogFactory.getLog(TimerRouteTest.class) @AT@ 1352 @LENGTH@ 28
------------INS TypeLiteral@@TimerRouteTest.class @TO@ SimpleName@@MethodName:getLog:[TimerRouteTest.class] @AT@ 1359 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:assertEquals("/app/flows/flow?foo=bar&baz=3",url) @TO@ MethodInvocation:assertTrue("/app/flows/flow?foo=bar&baz=3".equals(url) || "/app/flows/flow?baz=3&foo=bar".equals(url)) @AT@ 2733 @LENGTH@ 51
---UPD MethodInvocation@@assertEquals("/app/flows/flow?foo=bar&baz=3",url) @TO@ assertTrue("/app/flows/flow?foo=bar&baz=3".equals(url) || "/app/flows/flow?baz=3&foo=bar".equals(url)) @AT@ 2733 @LENGTH@ 50
------UPD SimpleName@@MethodName:assertEquals:["/app/flows/flow?foo=bar&baz=3", url] @TO@ MethodName:assertTrue:["/app/flows/flow?foo=bar&baz=3".equals(url) || "/app/flows/flow?baz=3&foo=bar".equals(url)] @AT@ 2733 @LENGTH@ 50
---------INS InfixExpression@@"/app/flows/flow?foo=bar&baz=3".equals(url) || "/app/flows/flow?baz=3&foo=bar".equals(url) @TO@ SimpleName@@MethodName:assertEquals:["/app/flows/flow?foo=bar&baz=3", url] @AT@ 2744 @LENGTH@ 90
------------INS MethodInvocation@@"/app/flows/flow?foo=bar&baz=3".equals(url) @TO@ InfixExpression@@"/app/flows/flow?foo=bar&baz=3".equals(url) || "/app/flows/flow?baz=3&foo=bar".equals(url) @AT@ 2744 @LENGTH@ 43
---------------INS StringLiteral@@"/app/flows/flow?foo=bar&baz=3" @TO@ MethodInvocation@@"/app/flows/flow?foo=bar&baz=3".equals(url) @AT@ 2744 @LENGTH@ 31
---------------INS SimpleName@@MethodName:equals:[url] @TO@ MethodInvocation@@"/app/flows/flow?foo=bar&baz=3".equals(url) @AT@ 2776 @LENGTH@ 11
------------------MOV SimpleName@@url @TO@ SimpleName@@MethodName:equals:[url] @AT@ 2779 @LENGTH@ 3
------------INS Operator@@|| @TO@ InfixExpression@@"/app/flows/flow?foo=bar&baz=3".equals(url) || "/app/flows/flow?baz=3&foo=bar".equals(url) @AT@ 2787 @LENGTH@ 2
------------INS MethodInvocation@@"/app/flows/flow?baz=3&foo=bar".equals(url) @TO@ InfixExpression@@"/app/flows/flow?foo=bar&baz=3".equals(url) || "/app/flows/flow?baz=3&foo=bar".equals(url) @AT@ 2791 @LENGTH@ 43
---------------INS StringLiteral@@"/app/flows/flow?baz=3&foo=bar" @TO@ MethodInvocation@@"/app/flows/flow?baz=3&foo=bar".equals(url) @AT@ 2791 @LENGTH@ 31
---------------INS SimpleName@@MethodName:equals:[url] @TO@ MethodInvocation@@"/app/flows/flow?baz=3&foo=bar".equals(url) @AT@ 2823 @LENGTH@ 11
------------------INS SimpleName@@url @TO@ SimpleName@@MethodName:equals:[url] @AT@ 2830 @LENGTH@ 3
---------DEL StringLiteral@@"/app/flows/flow?foo=bar&baz=3" @AT@ 2746 @LENGTH@ 31


INS VariableDeclarationStatement@@boolean success=file.setLastModified(System.currentTimeMillis()); @TO@ MethodDeclaration@@public, static, void, MethodName:touch, File file, IOException,  @AT@ 5013 @LENGTH@ 67
---INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean success=file.setLastModified(System.currentTimeMillis()); @AT@ 5013 @LENGTH@ 7
---INS VariableDeclarationFragment@@success=file.setLastModified(System.currentTimeMillis()) @TO@ VariableDeclarationStatement@@boolean success=file.setLastModified(System.currentTimeMillis()); @AT@ 5021 @LENGTH@ 58
------MOV MethodInvocation@@file.setLastModified(System.currentTimeMillis()) @TO@ VariableDeclarationFragment@@success=file.setLastModified(System.currentTimeMillis()) @AT@ 5013 @LENGTH@ 48
------INS SimpleName@@success @TO@ VariableDeclarationFragment@@success=file.setLastModified(System.currentTimeMillis()) @AT@ 5021 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("direct:start").idempotentConsumer(header("messageId"),memoryMessageIdRepository()).to("mock:result") @TO@ MethodInvocation:from("direct:start").idempotentConsumer(header("messageId"),memoryMessageIdRepository(200)).to("mock:result") @AT@ 2948 @LENGTH@ 108
---UPD MethodInvocation@@from("direct:start").idempotentConsumer(header("messageId"),memoryMessageIdRepository()).to("mock:result") @TO@ from("direct:start").idempotentConsumer(header("messageId"),memoryMessageIdRepository(200)).to("mock:result") @AT@ 2948 @LENGTH@ 107
------UPD MethodInvocation@@MethodName:idempotentConsumer:[header("messageId"), memoryMessageIdRepository()] @TO@ MethodName:idempotentConsumer:[header("messageId"), memoryMessageIdRepository(200)] @AT@ 2948 @LENGTH@ 89
---------UPD MethodInvocation@@MethodName:memoryMessageIdRepository:[] @TO@ memoryMessageIdRepository(200) @AT@ 3009 @LENGTH@ 27
------------INS SimpleName@@MethodName:memoryMessageIdRepository:[200] @TO@ MethodInvocation@@MethodName:memoryMessageIdRepository:[] @AT@ 3034 @LENGTH@ 30
---------------INS NumberLiteral@@200 @TO@ SimpleName@@MethodName:memoryMessageIdRepository:[200] @AT@ 3060 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals("Last element should be set to null",a[0],null) @TO@ MethodInvocation:assertNull("Last element should be set to null",a[0]) @AT@ 41223 @LENGTH@ 63
---UPD MethodInvocation@@assertEquals("Last element should be set to null",a[0],null) @TO@ assertNull("Last element should be set to null",a[0]) @AT@ 41223 @LENGTH@ 62
------UPD SimpleName@@MethodName:assertEquals:["Last element should be set to null", a[0], null] @TO@ MethodName:assertNull:["Last element should be set to null", a[0]] @AT@ 41223 @LENGTH@ 62
---------DEL NullLiteral@@null @AT@ 41280 @LENGTH@ 4


MOV FieldDeclaration@@static, final, DateFormat, [DATE_FORMAT=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss Z")] @TO@ TypeDeclaration@@[public]PropertyListConfiguration, AbstractHierarchicalFileConfiguration @AT@ 2914 @LENGTH@ 84


UPD ReturnStatement@@CastExpression:(String[])list.toArray(new String[0]) @TO@ CastExpression:(String[])list.toArray(new String[list.size()]) @AT@ 47154 @LENGTH@ 46
---UPD CastExpression@@(String[])list.toArray(new String[0]) @TO@ (String[])list.toArray(new String[list.size()]) @AT@ 47161 @LENGTH@ 38
------UPD MethodInvocation@@list.toArray(new String[0]) @TO@ list.toArray(new String[list.size()]) @AT@ 47172 @LENGTH@ 27
---------UPD SimpleName@@MethodName:toArray:[new String[0]] @TO@ MethodName:toArray:[new String[list.size()]] @AT@ 47177 @LENGTH@ 22
------------UPD ArrayCreation@@new String[0] @TO@ new String[list.size()] @AT@ 47185 @LENGTH@ 13
---------------DEL NumberLiteral@@0 @AT@ 47196 @LENGTH@ 1
---------------INS MethodInvocation@@list.size() @TO@ ArrayCreation@@new String[0] @AT@ 47198 @LENGTH@ 11
------------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.size() @AT@ 47198 @LENGTH@ 4
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@list.size() @AT@ 47203 @LENGTH@ 6


UPD MethodDeclaration@@Object, MethodName:marshalSendAndReceive, Object requestPayload, WebServiceMessageCallback requestCallback, GenericMarshallingFailureException, WebServiceClientException,  @TO@ Object, MethodName:marshalSendAndReceive, Object requestPayload, WebServiceMessageCallback requestCallback, XmlMappingException, WebServiceClientException,  @AT@ 3151 @LENGTH@ 169
---UPD SimpleType@@GenericMarshallingFailureException @TO@ XmlMappingException @AT@ 3258 @LENGTH@ 34


INS ExpressionStatement@@MethodInvocation:context.stop() @TO@ MethodDeclaration@@public, static, void, MethodName:main, String args[], Exception,  @AT@ 2593 @LENGTH@ 15
---INS MethodInvocation@@context.stop() @TO@ ExpressionStatement@@MethodInvocation:context.stop() @AT@ 2593 @LENGTH@ 14
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.stop() @AT@ 2593 @LENGTH@ 7
------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@context.stop() @AT@ 2601 @LENGTH@ 6


UPD IfStatement@@if (exchange != null) {  try {    processor.process(exchange);  } catch (  Throwable e) {    e.printStackTrace();  }} @TO@ if (exchange != null && !isStopping()) {  try {    processor.process(exchange);  } catch (  Throwable e) {    e.printStackTrace();  }} @AT@ 1853 @LENGTH@ 223
---INS InfixExpression@@exchange != null && !isStopping() @TO@ IfStatement@@if (exchange != null) {  try {    processor.process(exchange);  } catch (  Throwable e) {    e.printStackTrace();  }} @AT@ 1857 @LENGTH@ 33
------INS InfixExpression@@exchange != null @TO@ InfixExpression@@exchange != null && !isStopping() @AT@ 1857 @LENGTH@ 16
---------MOV SimpleName@@exchange @TO@ InfixExpression@@exchange != null @AT@ 1857 @LENGTH@ 8
---------MOV Operator@@!= @TO@ InfixExpression@@exchange != null @AT@ 1865 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@exchange != null @AT@ 1869 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@exchange != null && !isStopping() @AT@ 1873 @LENGTH@ 2
------INS PrefixExpression@@!isStopping() @TO@ InfixExpression@@exchange != null && !isStopping() @AT@ 1877 @LENGTH@ 13
---------INS Operator@@! @TO@ PrefixExpression@@!isStopping() @AT@ 1877 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:isStopping:[] @TO@ PrefixExpression@@!isStopping() @AT@ 1878 @LENGTH@ 12
---DEL InfixExpression@@exchange != null @AT@ 1857 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:send, Endpoint<E> endpoint, Processor<E> processor,  @TO@ public, E, MethodName:send, Endpoint<E> endpoint, Processor<E> processor,  @AT@ 2450 @LENGTH@ 336
---DEL PrimitiveType@@void @AT@ 2457 @LENGTH@ 4
---INS SimpleType@@E @TO@ MethodDeclaration@@public, void, MethodName:send, Endpoint<E> endpoint, Processor<E> processor,  @AT@ 2457 @LENGTH@ 1
---INS ReturnStatement@@SimpleName:exchange @TO@ MethodDeclaration@@public, void, MethodName:send, Endpoint<E> endpoint, Processor<E> processor,  @AT@ 2786 @LENGTH@ 16
------INS SimpleName@@exchange @TO@ ReturnStatement@@SimpleName:exchange @AT@ 2793 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:log.debug("Performing rebind operation - " + "binding new contents to entry.") @TO@ MethodInvocation:log.debug("Performing rebind operation - " + "renaming original entry and " + "binding new contents to entry.") @AT@ 4132 @LENGTH@ 96
---UPD MethodInvocation@@log.debug("Performing rebind operation - " + "binding new contents to entry.") @TO@ log.debug("Performing rebind operation - " + "renaming original entry and " + "binding new contents to entry.") @AT@ 4132 @LENGTH@ 95
------UPD SimpleName@@MethodName:debug:["Performing rebind operation - " + "binding new contents to entry."] @TO@ MethodName:debug:["Performing rebind operation - " + "renaming original entry and " + "binding new contents to entry."] @AT@ 4136 @LENGTH@ 91
---------UPD InfixExpression@@"Performing rebind operation - " + "binding new contents to entry." @TO@ "Performing rebind operation - " + "renaming original entry and " + "binding new contents to entry." @AT@ 4142 @LENGTH@ 84
------------INS StringLiteral@@"renaming original entry and " @TO@ InfixExpression@@"Performing rebind operation - " + "binding new contents to entry." @AT@ 4194 @LENGTH@ 30


UPD FieldDeclaration@@private, JaxpConverter, [converter=new JaxpConverter()] @TO@ private, XmlConverter, [converter=new XmlConverter()] @AT@ 2238 @LENGTH@ 54
---UPD SimpleType@@JaxpConverter @TO@ XmlConverter @AT@ 2246 @LENGTH@ 13
---UPD VariableDeclarationFragment@@converter=new JaxpConverter() @TO@ converter=new XmlConverter() @AT@ 2260 @LENGTH@ 31
------UPD ClassInstanceCreation@@JaxpConverter[] @TO@ XmlConverter[] @AT@ 2272 @LENGTH@ 19
---------UPD SimpleType@@JaxpConverter @TO@ XmlConverter @AT@ 2276 @LENGTH@ 13


INS IfStatement@@if (!updateMode) {  attrs.put(attribute);} else {  updatedAttrs.put(attribute);} @TO@ MethodDeclaration@@public, void, MethodName:setAttribute, Attribute attribute,  @AT@ 24616 @LENGTH@ 124
---INS PrefixExpression@@!updateMode @TO@ IfStatement@@if (!updateMode) {  attrs.put(attribute);} else {  updatedAttrs.put(attribute);} @AT@ 24620 @LENGTH@ 11
------INS Operator@@! @TO@ PrefixExpression@@!updateMode @AT@ 24620 @LENGTH@ 1
------INS SimpleName@@updateMode @TO@ PrefixExpression@@!updateMode @AT@ 24621 @LENGTH@ 10
---INS Block@@ThenBody:{  attrs.put(attribute);} @TO@ IfStatement@@if (!updateMode) {  attrs.put(attribute);} else {  updatedAttrs.put(attribute);} @AT@ 24633 @LENGTH@ 47
------MOV ExpressionStatement@@MethodInvocation:attrs.put(attribute) @TO@ Block@@ThenBody:{  attrs.put(attribute);} @AT@ 24616 @LENGTH@ 21
---INS Block@@ElseBody:{  updatedAttrs.put(attribute);} @TO@ IfStatement@@if (!updateMode) {  attrs.put(attribute);} else {  updatedAttrs.put(attribute);} @AT@ 24686 @LENGTH@ 54
------INS ExpressionStatement@@MethodInvocation:updatedAttrs.put(attribute) @TO@ Block@@ElseBody:{  updatedAttrs.put(attribute);} @AT@ 24701 @LENGTH@ 28
---------INS MethodInvocation@@updatedAttrs.put(attribute) @TO@ ExpressionStatement@@MethodInvocation:updatedAttrs.put(attribute) @AT@ 24701 @LENGTH@ 27
------------INS SimpleName@@Name:updatedAttrs @TO@ MethodInvocation@@updatedAttrs.put(attribute) @AT@ 24701 @LENGTH@ 12
------------INS SimpleName@@MethodName:put:[attribute] @TO@ MethodInvocation@@updatedAttrs.put(attribute) @AT@ 24714 @LENGTH@ 14
---------------INS SimpleName@@attribute @TO@ SimpleName@@MethodName:put:[attribute] @AT@ 24718 @LENGTH@ 9


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("The type of the default value (" + defaultValue.getClass() + ") is not an array of the specified class ("+ cls+ ")") @TO@ ClassInstanceCreation:new IllegalArgumentException("The type of the default value (" + defaultValue.getClass() + ")"+ " is not an array of the specified class ("+ cls+ ")") @AT@ 13001 @LENGTH@ 155
---UPD ClassInstanceCreation@@IllegalArgumentException["The type of the default value (" + defaultValue.getClass() + ") is not an array of the specified class ("+ cls+ ")"] @TO@ IllegalArgumentException["The type of the default value (" + defaultValue.getClass() + ")"+ " is not an array of the specified class ("+ cls+ ")"] @AT@ 13007 @LENGTH@ 148
------UPD InfixExpression@@"The type of the default value (" + defaultValue.getClass() + ") is not an array of the specified class ("+ cls+ ")" @TO@ "The type of the default value (" + defaultValue.getClass() + ")"+ " is not an array of the specified class ("+ cls+ ")" @AT@ 13036 @LENGTH@ 118
---------UPD StringLiteral@@") is not an array of the specified class (" @TO@ " is not an array of the specified class (" @AT@ 13098 @LENGTH@ 44
---------INS StringLiteral@@")" @TO@ InfixExpression@@"The type of the default value (" + defaultValue.getClass() + ") is not an array of the specified class ("+ cls+ ")" @AT@ 13122 @LENGTH@ 3


DEL MethodDeclaration@@public, void, MethodName:testCreateSoapMessageAttachment, Exception,  @AT@ 1116 @LENGTH@ 128
---DEL Modifier@@public @AT@ 1116 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1123 @LENGTH@ 4
---DEL SimpleName@@MethodName:testCreateSoapMessageAttachment @AT@ 1128 @LENGTH@ 31
---DEL SimpleType@@Exception @AT@ 1169 @LENGTH@ 9


INS IfStatement@@if (contextSource instanceof TransactionAwareContextSourceProxy) {  TransactionAwareContextSourceProxy proxy=(TransactionAwareContextSourceProxy)contextSource;  this.contextSource=proxy.getTarget();} else {  this.contextSource=contextSource;} @TO@ MethodDeclaration@@public, void, MethodName:setContextSource, ContextSource contextSource,  @AT@ 3299 @LENGTH@ 305
---INS InstanceofExpression@@contextSource instanceof TransactionAwareContextSourceProxy @TO@ IfStatement@@if (contextSource instanceof TransactionAwareContextSourceProxy) {  TransactionAwareContextSourceProxy proxy=(TransactionAwareContextSourceProxy)contextSource;  this.contextSource=proxy.getTarget();} else {  this.contextSource=contextSource;} @AT@ 3303 @LENGTH@ 59
------INS SimpleName@@contextSource @TO@ InstanceofExpression@@contextSource instanceof TransactionAwareContextSourceProxy @AT@ 3303 @LENGTH@ 13
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@contextSource instanceof TransactionAwareContextSourceProxy @AT@ 3317 @LENGTH@ 10
------INS SimpleType@@TransactionAwareContextSourceProxy @TO@ InstanceofExpression@@contextSource instanceof TransactionAwareContextSourceProxy @AT@ 3328 @LENGTH@ 34
---INS Block@@ThenBody:{  TransactionAwareContextSourceProxy proxy=(TransactionAwareContextSourceProxy)contextSource;  this.contextSource=proxy.getTarget();} @TO@ IfStatement@@if (contextSource instanceof TransactionAwareContextSourceProxy) {  TransactionAwareContextSourceProxy proxy=(TransactionAwareContextSourceProxy)contextSource;  this.contextSource=proxy.getTarget();} else {  this.contextSource=contextSource;} @AT@ 3364 @LENGTH@ 173
------INS VariableDeclarationStatement@@TransactionAwareContextSourceProxy proxy=(TransactionAwareContextSourceProxy)contextSource; @TO@ Block@@ThenBody:{  TransactionAwareContextSourceProxy proxy=(TransactionAwareContextSourceProxy)contextSource;  this.contextSource=proxy.getTarget();} @AT@ 3379 @LENGTH@ 94
---------INS SimpleType@@TransactionAwareContextSourceProxy @TO@ VariableDeclarationStatement@@TransactionAwareContextSourceProxy proxy=(TransactionAwareContextSourceProxy)contextSource; @AT@ 3379 @LENGTH@ 34
---------INS VariableDeclarationFragment@@proxy=(TransactionAwareContextSourceProxy)contextSource @TO@ VariableDeclarationStatement@@TransactionAwareContextSourceProxy proxy=(TransactionAwareContextSourceProxy)contextSource; @AT@ 3414 @LENGTH@ 58
------------INS SimpleName@@proxy @TO@ VariableDeclarationFragment@@proxy=(TransactionAwareContextSourceProxy)contextSource @AT@ 3414 @LENGTH@ 5
------------INS CastExpression@@(TransactionAwareContextSourceProxy)contextSource @TO@ VariableDeclarationFragment@@proxy=(TransactionAwareContextSourceProxy)contextSource @AT@ 3422 @LENGTH@ 50
---------------INS SimpleType@@TransactionAwareContextSourceProxy @TO@ CastExpression@@(TransactionAwareContextSourceProxy)contextSource @AT@ 3423 @LENGTH@ 34
---------------INS SimpleName@@contextSource @TO@ CastExpression@@(TransactionAwareContextSourceProxy)contextSource @AT@ 3459 @LENGTH@ 13
------INS ExpressionStatement@@Assignment:this.contextSource=proxy.getTarget() @TO@ Block@@ThenBody:{  TransactionAwareContextSourceProxy proxy=(TransactionAwareContextSourceProxy)contextSource;  this.contextSource=proxy.getTarget();} @AT@ 3487 @LENGTH@ 39
---------INS Assignment@@this.contextSource=proxy.getTarget() @TO@ ExpressionStatement@@Assignment:this.contextSource=proxy.getTarget() @AT@ 3487 @LENGTH@ 38
------------INS FieldAccess@@this.contextSource @TO@ Assignment@@this.contextSource=proxy.getTarget() @AT@ 3487 @LENGTH@ 18
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.contextSource @AT@ 3487 @LENGTH@ 4
---------------INS SimpleName@@contextSource @TO@ FieldAccess@@this.contextSource @AT@ 3492 @LENGTH@ 13
------------INS Operator@@= @TO@ Assignment@@this.contextSource=proxy.getTarget() @AT@ 3505 @LENGTH@ 1
------------INS MethodInvocation@@proxy.getTarget() @TO@ Assignment@@this.contextSource=proxy.getTarget() @AT@ 3508 @LENGTH@ 17
---------------INS SimpleName@@Name:proxy @TO@ MethodInvocation@@proxy.getTarget() @AT@ 3508 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getTarget:[] @TO@ MethodInvocation@@proxy.getTarget() @AT@ 3514 @LENGTH@ 11
---INS Block@@ElseBody:{  this.contextSource=contextSource;} @TO@ IfStatement@@if (contextSource instanceof TransactionAwareContextSourceProxy) {  TransactionAwareContextSourceProxy proxy=(TransactionAwareContextSourceProxy)contextSource;  this.contextSource=proxy.getTarget();} else {  this.contextSource=contextSource;} @AT@ 3543 @LENGTH@ 61
------MOV ExpressionStatement@@Assignment:this.contextSource=contextSource @TO@ Block@@ElseBody:{  this.contextSource=contextSource;} @AT@ 3079 @LENGTH@ 35


INS MethodDeclaration@@public, void, MethodName:testUnsignedOverrun, Exception,  @TO@ TypeDeclaration@@[public]EndianUtilsTest, TestCase @AT@ 11159 @LENGTH@ 557
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testUnsignedOverrun, Exception,  @AT@ 11159 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testUnsignedOverrun, Exception,  @AT@ 11166 @LENGTH@ 4
---INS SimpleName@@MethodName:testUnsignedOverrun @TO@ MethodDeclaration@@public, void, MethodName:testUnsignedOverrun, Exception,  @AT@ 11171 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testUnsignedOverrun, Exception,  @AT@ 11200 @LENGTH@ 9
---INS VariableDeclarationStatement@@byte[] target=new byte[]{0,0,0,(byte)0x80}; @TO@ MethodDeclaration@@public, void, MethodName:testUnsignedOverrun, Exception,  @AT@ 11220 @LENGTH@ 51
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] target=new byte[]{0,0,0,(byte)0x80}; @AT@ 11220 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 11220 @LENGTH@ 4
------INS VariableDeclarationFragment@@target=new byte[]{0,0,0,(byte)0x80} @TO@ VariableDeclarationStatement@@byte[] target=new byte[]{0,0,0,(byte)0x80}; @AT@ 11227 @LENGTH@ 43
---------INS SimpleName@@target @TO@ VariableDeclarationFragment@@target=new byte[]{0,0,0,(byte)0x80} @AT@ 11227 @LENGTH@ 6
---------INS ArrayCreation@@new byte[]{0,0,0,(byte)0x80} @TO@ VariableDeclarationFragment@@target=new byte[]{0,0,0,(byte)0x80} @AT@ 11236 @LENGTH@ 34
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[]{0,0,0,(byte)0x80} @AT@ 11240 @LENGTH@ 6
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 11240 @LENGTH@ 4
------------INS ArrayInitializer@@{0,0,0,(byte)0x80} @TO@ ArrayCreation@@new byte[]{0,0,0,(byte)0x80} @AT@ 11247 @LENGTH@ 23
---------------INS NumberLiteral@@0 @TO@ ArrayInitializer@@{0,0,0,(byte)0x80} @AT@ 11249 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ ArrayInitializer@@{0,0,0,(byte)0x80} @AT@ 11252 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ ArrayInitializer@@{0,0,0,(byte)0x80} @AT@ 11255 @LENGTH@ 1
---------------INS CastExpression@@(byte)0x80 @TO@ ArrayInitializer@@{0,0,0,(byte)0x80} @AT@ 11258 @LENGTH@ 10
------------------INS PrimitiveType@@byte @TO@ CastExpression@@(byte)0x80 @AT@ 11259 @LENGTH@ 4
------------------INS NumberLiteral@@0x80 @TO@ CastExpression@@(byte)0x80 @AT@ 11264 @LENGTH@ 4
---INS VariableDeclarationStatement@@long expected=0x80000000L; @TO@ MethodDeclaration@@public, void, MethodName:testUnsignedOverrun, Exception,  @AT@ 11280 @LENGTH@ 28
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long expected=0x80000000L; @AT@ 11280 @LENGTH@ 4
------INS VariableDeclarationFragment@@expected=0x80000000L @TO@ VariableDeclarationStatement@@long expected=0x80000000L; @AT@ 11285 @LENGTH@ 22
---------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected=0x80000000L @AT@ 11285 @LENGTH@ 8
---------INS NumberLiteral@@0x80000000L @TO@ VariableDeclarationFragment@@expected=0x80000000L @AT@ 11296 @LENGTH@ 11
---INS VariableDeclarationStatement@@long actual=EndianUtils.readSwappedUnsignedInteger(target,0); @TO@ MethodDeclaration@@public, void, MethodName:testUnsignedOverrun, Exception,  @AT@ 11322 @LENGTH@ 64
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long actual=EndianUtils.readSwappedUnsignedInteger(target,0); @AT@ 11322 @LENGTH@ 4
------INS VariableDeclarationFragment@@actual=EndianUtils.readSwappedUnsignedInteger(target,0) @TO@ VariableDeclarationStatement@@long actual=EndianUtils.readSwappedUnsignedInteger(target,0); @AT@ 11327 @LENGTH@ 58
---------INS SimpleName@@actual @TO@ VariableDeclarationFragment@@actual=EndianUtils.readSwappedUnsignedInteger(target,0) @AT@ 11327 @LENGTH@ 6
---------INS MethodInvocation@@EndianUtils.readSwappedUnsignedInteger(target,0) @TO@ VariableDeclarationFragment@@actual=EndianUtils.readSwappedUnsignedInteger(target,0) @AT@ 11336 @LENGTH@ 49
------------INS SimpleName@@Name:EndianUtils @TO@ MethodInvocation@@EndianUtils.readSwappedUnsignedInteger(target,0) @AT@ 11336 @LENGTH@ 11
------------INS SimpleName@@MethodName:readSwappedUnsignedInteger:[target, 0] @TO@ MethodInvocation@@EndianUtils.readSwappedUnsignedInteger(target,0) @AT@ 11348 @LENGTH@ 37
---------------INS SimpleName@@target @TO@ SimpleName@@MethodName:readSwappedUnsignedInteger:[target, 0] @AT@ 11375 @LENGTH@ 6
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:readSwappedUnsignedInteger:[target, 0] @AT@ 11383 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals("readSwappedUnsignedInteger(byte[], int) was incorrect",expected,actual) @TO@ MethodDeclaration@@public, void, MethodName:testUnsignedOverrun, Exception,  @AT@ 11395 @LENGTH@ 88
------INS MethodInvocation@@assertEquals("readSwappedUnsignedInteger(byte[], int) was incorrect",expected,actual) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("readSwappedUnsignedInteger(byte[], int) was incorrect",expected,actual) @AT@ 11395 @LENGTH@ 87
---------INS SimpleName@@MethodName:assertEquals:["readSwappedUnsignedInteger(byte[], int) was incorrect", expected, actual] @TO@ MethodInvocation@@assertEquals("readSwappedUnsignedInteger(byte[], int) was incorrect",expected,actual) @AT@ 11395 @LENGTH@ 87
------------INS StringLiteral@@"readSwappedUnsignedInteger(byte[], int) was incorrect" @TO@ SimpleName@@MethodName:assertEquals:["readSwappedUnsignedInteger(byte[], int) was incorrect", expected, actual] @AT@ 11408 @LENGTH@ 55
------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:assertEquals:["readSwappedUnsignedInteger(byte[], int) was incorrect", expected, actual] @AT@ 11465 @LENGTH@ 8
------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:assertEquals:["readSwappedUnsignedInteger(byte[], int) was incorrect", expected, actual] @AT@ 11475 @LENGTH@ 6
---INS VariableDeclarationStatement@@ByteArrayInputStream in=new ByteArrayInputStream(target); @TO@ MethodDeclaration@@public, void, MethodName:testUnsignedOverrun, Exception,  @AT@ 11493 @LENGTH@ 59
------INS SimpleType@@ByteArrayInputStream @TO@ VariableDeclarationStatement@@ByteArrayInputStream in=new ByteArrayInputStream(target); @AT@ 11493 @LENGTH@ 20
------INS VariableDeclarationFragment@@in=new ByteArrayInputStream(target) @TO@ VariableDeclarationStatement@@ByteArrayInputStream in=new ByteArrayInputStream(target); @AT@ 11514 @LENGTH@ 37
---------INS SimpleName@@in @TO@ VariableDeclarationFragment@@in=new ByteArrayInputStream(target) @AT@ 11514 @LENGTH@ 2
---------INS ClassInstanceCreation@@ByteArrayInputStream[target] @TO@ VariableDeclarationFragment@@in=new ByteArrayInputStream(target) @AT@ 11519 @LENGTH@ 32
------------INS New@@new @TO@ ClassInstanceCreation@@ByteArrayInputStream[target] @AT@ 11519 @LENGTH@ 3
------------INS SimpleType@@ByteArrayInputStream @TO@ ClassInstanceCreation@@ByteArrayInputStream[target] @AT@ 11523 @LENGTH@ 20
------------INS SimpleName@@target @TO@ ClassInstanceCreation@@ByteArrayInputStream[target] @AT@ 11544 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:actual=EndianUtils.readSwappedUnsignedInteger(in) @TO@ MethodDeclaration@@public, void, MethodName:testUnsignedOverrun, Exception,  @AT@ 11561 @LENGTH@ 52
------INS Assignment@@actual=EndianUtils.readSwappedUnsignedInteger(in) @TO@ ExpressionStatement@@Assignment:actual=EndianUtils.readSwappedUnsignedInteger(in) @AT@ 11561 @LENGTH@ 51
---------INS SimpleName@@actual @TO@ Assignment@@actual=EndianUtils.readSwappedUnsignedInteger(in) @AT@ 11561 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@actual=EndianUtils.readSwappedUnsignedInteger(in) @AT@ 11567 @LENGTH@ 1
---------INS MethodInvocation@@EndianUtils.readSwappedUnsignedInteger(in) @TO@ Assignment@@actual=EndianUtils.readSwappedUnsignedInteger(in) @AT@ 11570 @LENGTH@ 42
------------INS SimpleName@@Name:EndianUtils @TO@ MethodInvocation@@EndianUtils.readSwappedUnsignedInteger(in) @AT@ 11570 @LENGTH@ 11
------------INS SimpleName@@MethodName:readSwappedUnsignedInteger:[in] @TO@ MethodInvocation@@EndianUtils.readSwappedUnsignedInteger(in) @AT@ 11582 @LENGTH@ 30
---------------INS SimpleName@@in @TO@ SimpleName@@MethodName:readSwappedUnsignedInteger:[in] @AT@ 11609 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertEquals("readSwappedUnsignedInteger(InputStream) was incorrect",expected,actual) @TO@ MethodDeclaration@@public, void, MethodName:testUnsignedOverrun, Exception,  @AT@ 11622 @LENGTH@ 88
------INS MethodInvocation@@assertEquals("readSwappedUnsignedInteger(InputStream) was incorrect",expected,actual) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("readSwappedUnsignedInteger(InputStream) was incorrect",expected,actual) @AT@ 11622 @LENGTH@ 87
---------INS SimpleName@@MethodName:assertEquals:["readSwappedUnsignedInteger(InputStream) was incorrect", expected, actual] @TO@ MethodInvocation@@assertEquals("readSwappedUnsignedInteger(InputStream) was incorrect",expected,actual) @AT@ 11622 @LENGTH@ 87
------------INS StringLiteral@@"readSwappedUnsignedInteger(InputStream) was incorrect" @TO@ SimpleName@@MethodName:assertEquals:["readSwappedUnsignedInteger(InputStream) was incorrect", expected, actual] @AT@ 11635 @LENGTH@ 55
------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:assertEquals:["readSwappedUnsignedInteger(InputStream) was incorrect", expected, actual] @AT@ 11692 @LENGTH@ 8
------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:assertEquals:["readSwappedUnsignedInteger(InputStream) was incorrect", expected, actual] @AT@ 11702 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:ldapOperations.rename(originalDn,temporaryDn) @TO@ MethodDeclaration@@public, void, MethodName:performOperation,  @AT@ 3658 @LENGTH@ 47
---INS MethodInvocation@@ldapOperations.rename(originalDn,temporaryDn) @TO@ ExpressionStatement@@MethodInvocation:ldapOperations.rename(originalDn,temporaryDn) @AT@ 3658 @LENGTH@ 46
------INS SimpleName@@Name:ldapOperations @TO@ MethodInvocation@@ldapOperations.rename(originalDn,temporaryDn) @AT@ 3658 @LENGTH@ 14
------INS SimpleName@@MethodName:rename:[originalDn, temporaryDn] @TO@ MethodInvocation@@ldapOperations.rename(originalDn,temporaryDn) @AT@ 3673 @LENGTH@ 31
---------INS SimpleName@@originalDn @TO@ SimpleName@@MethodName:rename:[originalDn, temporaryDn] @AT@ 3680 @LENGTH@ 10
---------INS SimpleName@@temporaryDn @TO@ SimpleName@@MethodName:rename:[originalDn, temporaryDn] @AT@ 3692 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:operationPerformed, CompensatingTransactionRollbackOperation operation,  @TO@ public, void, MethodName:operationPerformed, CompensatingTransactionOperationExecutor operation,  @AT@ 1403 @LENGTH@ 97
---UPD SingleVariableDeclaration@@CompensatingTransactionRollbackOperation operation @TO@ CompensatingTransactionOperationExecutor operation @AT@ 1448 @LENGTH@ 50
------UPD SimpleType@@CompensatingTransactionRollbackOperation @TO@ CompensatingTransactionOperationExecutor @AT@ 1448 @LENGTH@ 40


UPD ExpressionStatement@@Assignment:interceptor2=(InterceptorProcessor<Exchange>)ctx.getBean("interceptor2") @TO@ Assignment:interceptor2=(DelegateProcess<Exchange>)ctx.getBean("interceptor2") @AT@ 2688 @LENGTH@ 76
---UPD Assignment@@interceptor2=(InterceptorProcessor<Exchange>)ctx.getBean("interceptor2") @TO@ interceptor2=(DelegateProcess<Exchange>)ctx.getBean("interceptor2") @AT@ 2688 @LENGTH@ 75
------UPD CastExpression@@(InterceptorProcessor<Exchange>)ctx.getBean("interceptor2") @TO@ (DelegateProcess<Exchange>)ctx.getBean("interceptor2") @AT@ 2703 @LENGTH@ 60
---------UPD ParameterizedType@@InterceptorProcessor<Exchange> @TO@ DelegateProcess<Exchange> @AT@ 2704 @LENGTH@ 30
------------UPD SimpleType@@InterceptorProcessor @TO@ DelegateProcess @AT@ 2704 @LENGTH@ 20


UPD MethodDeclaration@@public, SOAPBodyElement, MethodName:getFirstBodyElement, SOAPBody body,  @TO@ public, SOAPElement, MethodName:getFirstBodyElement, SOAPBody body,  @AT@ 5746 @LENGTH@ 335
---UPD SimpleType@@SOAPBodyElement @TO@ SOAPElement @AT@ 5753 @LENGTH@ 15
---UPD ForStatement@@for (Iterator iterator=body.getChildElements(); iterator.hasNext(); ) {  Object child=iterator.next();  if (child instanceof SOAPBodyElement) {    return (SOAPBodyElement)child;  }} @TO@ for (Iterator iterator=body.getChildElements(); iterator.hasNext(); ) {  Object child=iterator.next();  if (child instanceof SOAPElement) {    return (SOAPElement)child;  }} @AT@ 5814 @LENGTH@ 240
------UPD IfStatement@@if (child instanceof SOAPBodyElement) {  return (SOAPBodyElement)child;} @TO@ if (child instanceof SOAPElement) {  return (SOAPElement)child;} @AT@ 5943 @LENGTH@ 101
---------UPD InstanceofExpression@@child instanceof SOAPBodyElement @TO@ child instanceof SOAPElement @AT@ 5947 @LENGTH@ 32
------------UPD SimpleType@@SOAPBodyElement @TO@ SOAPElement @AT@ 5964 @LENGTH@ 15
---------UPD Block@@ThenBody:{  return (SOAPBodyElement)child;} @TO@ ThenBody:{  return (SOAPElement)child;} @AT@ 5981 @LENGTH@ 63
------------UPD ReturnStatement@@CastExpression:(SOAPBodyElement)child @TO@ CastExpression:(SOAPElement)child @AT@ 5999 @LENGTH@ 31
---------------UPD CastExpression@@(SOAPBodyElement)child @TO@ (SOAPElement)child @AT@ 6006 @LENGTH@ 23
------------------UPD SimpleType@@SOAPBodyElement @TO@ SOAPElement @AT@ 6007 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @TO@ TypeDeclaration@@[public]PropertyListConfiguration, AbstractHierarchicalFileConfiguration @AT@ 4916 @LENGTH@ 360
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @AT@ 4916 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @AT@ 4923 @LENGTH@ 4
---INS SimpleName@@MethodName:addProperty @TO@ MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @AT@ 4928 @LENGTH@ 11
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @AT@ 4940 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 4940 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 4947 @LENGTH@ 3
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @AT@ 4952 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 4952 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 4959 @LENGTH@ 5
---INS IfStatement@@if (value instanceof byte[]) {  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} else {  super.setProperty(key,value);} @TO@ MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @AT@ 4980 @LENGTH@ 290
------INS InstanceofExpression@@value instanceof byte[] @TO@ IfStatement@@if (value instanceof byte[]) {  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} else {  super.setProperty(key,value);} @AT@ 4984 @LENGTH@ 23
---------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof byte[] @AT@ 4984 @LENGTH@ 5
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof byte[] @AT@ 4990 @LENGTH@ 10
---------INS ArrayType@@byte[] @TO@ InstanceofExpression@@value instanceof byte[] @AT@ 5001 @LENGTH@ 6
------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 5001 @LENGTH@ 4
------INS Block@@ThenBody:{  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} @TO@ IfStatement@@if (value instanceof byte[]) {  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} else {  super.setProperty(key,value);} @AT@ 5017 @LENGTH@ 177
---------INS ExpressionStatement@@MethodInvocation:fireEvent(EVENT_ADD_PROPERTY,key,value,true) @TO@ Block@@ThenBody:{  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} @AT@ 5031 @LENGTH@ 48
------------INS MethodInvocation@@fireEvent(EVENT_ADD_PROPERTY,key,value,true) @TO@ ExpressionStatement@@MethodInvocation:fireEvent(EVENT_ADD_PROPERTY,key,value,true) @AT@ 5031 @LENGTH@ 47
---------------INS SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, true] @TO@ MethodInvocation@@fireEvent(EVENT_ADD_PROPERTY,key,value,true) @AT@ 5031 @LENGTH@ 47
------------------INS SimpleName@@EVENT_ADD_PROPERTY @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, true] @AT@ 5041 @LENGTH@ 18
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, true] @AT@ 5061 @LENGTH@ 3
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, true] @AT@ 5066 @LENGTH@ 5
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, true] @AT@ 5073 @LENGTH@ 4
---------INS ExpressionStatement@@MethodInvocation:addPropertyDirect(key,value) @TO@ Block@@ThenBody:{  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} @AT@ 5092 @LENGTH@ 30
------------INS MethodInvocation@@addPropertyDirect(key,value) @TO@ ExpressionStatement@@MethodInvocation:addPropertyDirect(key,value) @AT@ 5092 @LENGTH@ 29
---------------INS SimpleName@@MethodName:addPropertyDirect:[key, value] @TO@ MethodInvocation@@addPropertyDirect(key,value) @AT@ 5092 @LENGTH@ 29
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:addPropertyDirect:[key, value] @AT@ 5110 @LENGTH@ 3
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:addPropertyDirect:[key, value] @AT@ 5115 @LENGTH@ 5
---------INS ExpressionStatement@@MethodInvocation:fireEvent(EVENT_ADD_PROPERTY,key,value,false) @TO@ Block@@ThenBody:{  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} @AT@ 5135 @LENGTH@ 49
------------INS MethodInvocation@@fireEvent(EVENT_ADD_PROPERTY,key,value,false) @TO@ ExpressionStatement@@MethodInvocation:fireEvent(EVENT_ADD_PROPERTY,key,value,false) @AT@ 5135 @LENGTH@ 48
---------------INS SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, false] @TO@ MethodInvocation@@fireEvent(EVENT_ADD_PROPERTY,key,value,false) @AT@ 5135 @LENGTH@ 48
------------------INS SimpleName@@EVENT_ADD_PROPERTY @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, false] @AT@ 5145 @LENGTH@ 18
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, false] @AT@ 5165 @LENGTH@ 3
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, false] @AT@ 5170 @LENGTH@ 5
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, false] @AT@ 5177 @LENGTH@ 5
------INS Block@@ElseBody:{  super.setProperty(key,value);} @TO@ IfStatement@@if (value instanceof byte[]) {  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} else {  super.setProperty(key,value);} @AT@ 5216 @LENGTH@ 54
---------INS ExpressionStatement@@SuperMethodInvocation:super.setProperty(key,value) @TO@ Block@@ElseBody:{  super.setProperty(key,value);} @AT@ 5230 @LENGTH@ 30
------------INS SuperMethodInvocation@@super.setProperty(key,value) @TO@ ExpressionStatement@@SuperMethodInvocation:super.setProperty(key,value) @AT@ 5230 @LENGTH@ 29
---------------INS SimpleName@@MethodName:setProperty:[key, value] @TO@ SuperMethodInvocation@@super.setProperty(key,value) @AT@ 5236 @LENGTH@ 11
---------------INS SimpleName@@key @TO@ SuperMethodInvocation@@super.setProperty(key,value) @AT@ 5248 @LENGTH@ 3
---------------INS SimpleName@@value @TO@ SuperMethodInvocation@@super.setProperty(key,value) @AT@ 5253 @LENGTH@ 5


UPD VariableDeclarationStatement@@Header[] headers=postMethod.getRequestHeaders(name); @TO@ Header[] headers=postMethod.getResponseHeaders(name); @AT@ 2217 @LENGTH@ 54
---UPD VariableDeclarationFragment@@headers=postMethod.getRequestHeaders(name) @TO@ headers=postMethod.getResponseHeaders(name) @AT@ 2226 @LENGTH@ 44
------UPD MethodInvocation@@postMethod.getRequestHeaders(name) @TO@ postMethod.getResponseHeaders(name) @AT@ 2236 @LENGTH@ 34
---------UPD SimpleName@@MethodName:getRequestHeaders:[name] @TO@ MethodName:getResponseHeaders:[name] @AT@ 2247 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:adapter.setAttributeValues("objectclass",new String[]{"top","person"}) @TO@ MethodInvocation:adapter.setAttributeValues("objectclass",new String[]{"top","person","organizationalPerson","inetOrgPerson"}) @AT@ 2709 @LENGTH@ 93
---UPD MethodInvocation@@adapter.setAttributeValues("objectclass",new String[]{"top","person"}) @TO@ adapter.setAttributeValues("objectclass",new String[]{"top","person","organizationalPerson","inetOrgPerson"}) @AT@ 2709 @LENGTH@ 92
------UPD SimpleName@@MethodName:setAttributeValues:["objectclass", new String[]{"top","person"}] @TO@ MethodName:setAttributeValues:["objectclass", new String[]{"top","person","organizationalPerson","inetOrgPerson"}] @AT@ 2717 @LENGTH@ 84
---------UPD ArrayCreation@@new String[]{"top","person"} @TO@ new String[]{"top","person","organizationalPerson","inetOrgPerson"} @AT@ 2751 @LENGTH@ 49
------------UPD ArrayInitializer@@{"top","person"} @TO@ {"top","person","organizationalPerson","inetOrgPerson"} @AT@ 2764 @LENGTH@ 36
---------------INS StringLiteral@@"organizationalPerson" @TO@ ArrayInitializer@@{"top","person"} @AT@ 2800 @LENGTH@ 22
---------------INS StringLiteral@@"inetOrgPerson" @TO@ ArrayInitializer@@{"top","person"} @AT@ 2824 @LENGTH@ 15


DEL ExpressionStatement@@MethodInvocation:conf.addProperty("email.object","ebourg@apache.org") @AT@ 14283 @LENGTH@ 54


UPD MethodDeclaration@@public, String, MethodName:readFileToString, File f, IOException,  @TO@ public, String, MethodName:readFileToString, File file, IOException,  @AT@ 39118 @LENGTH@ 107
---UPD SingleVariableDeclaration@@File f @TO@ File file @AT@ 39149 @LENGTH@ 6
------UPD SimpleName@@f @TO@ file @AT@ 39154 @LENGTH@ 1
---UPD ReturnStatement@@MethodInvocation:readFileToString(f,null) @TO@ MethodInvocation:readFileToString(file,null) @AT@ 39186 @LENGTH@ 33
------UPD MethodInvocation@@readFileToString(f,null) @TO@ readFileToString(file,null) @AT@ 39193 @LENGTH@ 25
---------UPD SimpleName@@MethodName:readFileToString:[f, null] @TO@ MethodName:readFileToString:[file, null] @AT@ 39193 @LENGTH@ 25
------------UPD SimpleName@@f @TO@ file @AT@ 39210 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:interceptor1=(InterceptorProcessor<Exchange>)ctx.getBean("interceptor1") @TO@ Assignment:interceptor1=(DelegateProcess<Exchange>)ctx.getBean("interceptor1") @AT@ 2609 @LENGTH@ 76
---UPD Assignment@@interceptor1=(InterceptorProcessor<Exchange>)ctx.getBean("interceptor1") @TO@ interceptor1=(DelegateProcess<Exchange>)ctx.getBean("interceptor1") @AT@ 2609 @LENGTH@ 75
------UPD CastExpression@@(InterceptorProcessor<Exchange>)ctx.getBean("interceptor1") @TO@ (DelegateProcess<Exchange>)ctx.getBean("interceptor1") @AT@ 2624 @LENGTH@ 60
---------UPD ParameterizedType@@InterceptorProcessor<Exchange> @TO@ DelegateProcess<Exchange> @AT@ 2625 @LENGTH@ 30
------------UPD SimpleType@@InterceptorProcessor @TO@ DelegateProcess @AT@ 2625 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:testConvertStringAndStreams, Exception,  @TO@ TypeDeclaration@@[public]ConverterTest, TestCase @AT@ 1675 @LENGTH@ 312
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testConvertStringAndStreams, Exception,  @AT@ 1675 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testConvertStringAndStreams, Exception,  @AT@ 1682 @LENGTH@ 4
---INS SimpleName@@MethodName:testConvertStringAndStreams @TO@ MethodDeclaration@@public, void, MethodName:testConvertStringAndStreams, Exception,  @AT@ 1687 @LENGTH@ 27
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testConvertStringAndStreams, Exception,  @AT@ 1724 @LENGTH@ 9
---INS VariableDeclarationStatement@@InputStream inputStream=converter.convertTo(InputStream.class,"bar"); @TO@ MethodDeclaration@@public, void, MethodName:testConvertStringAndStreams, Exception,  @AT@ 1744 @LENGTH@ 72
------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@InputStream inputStream=converter.convertTo(InputStream.class,"bar"); @AT@ 1744 @LENGTH@ 11
------INS VariableDeclarationFragment@@inputStream=converter.convertTo(InputStream.class,"bar") @TO@ VariableDeclarationStatement@@InputStream inputStream=converter.convertTo(InputStream.class,"bar"); @AT@ 1756 @LENGTH@ 59
---------INS SimpleName@@inputStream @TO@ VariableDeclarationFragment@@inputStream=converter.convertTo(InputStream.class,"bar") @AT@ 1756 @LENGTH@ 11
---------INS MethodInvocation@@converter.convertTo(InputStream.class,"bar") @TO@ VariableDeclarationFragment@@inputStream=converter.convertTo(InputStream.class,"bar") @AT@ 1770 @LENGTH@ 45
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.convertTo(InputStream.class,"bar") @AT@ 1770 @LENGTH@ 9
------------INS SimpleName@@MethodName:convertTo:[InputStream.class, "bar"] @TO@ MethodInvocation@@converter.convertTo(InputStream.class,"bar") @AT@ 1780 @LENGTH@ 35
---------------INS TypeLiteral@@InputStream.class @TO@ SimpleName@@MethodName:convertTo:[InputStream.class, "bar"] @AT@ 1790 @LENGTH@ 17
---------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:convertTo:[InputStream.class, "bar"] @AT@ 1809 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertNotNull(inputStream) @TO@ MethodDeclaration@@public, void, MethodName:testConvertStringAndStreams, Exception,  @AT@ 1825 @LENGTH@ 27
------INS MethodInvocation@@assertNotNull(inputStream) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(inputStream) @AT@ 1825 @LENGTH@ 26
---------INS SimpleName@@MethodName:assertNotNull:[inputStream] @TO@ MethodInvocation@@assertNotNull(inputStream) @AT@ 1825 @LENGTH@ 26
------------INS SimpleName@@inputStream @TO@ SimpleName@@MethodName:assertNotNull:[inputStream] @AT@ 1839 @LENGTH@ 11
---INS VariableDeclarationStatement@@String text=converter.convertTo(String.class,inputStream); @TO@ MethodDeclaration@@public, void, MethodName:testConvertStringAndStreams, Exception,  @AT@ 1862 @LENGTH@ 61
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String text=converter.convertTo(String.class,inputStream); @AT@ 1862 @LENGTH@ 6
------INS VariableDeclarationFragment@@text=converter.convertTo(String.class,inputStream) @TO@ VariableDeclarationStatement@@String text=converter.convertTo(String.class,inputStream); @AT@ 1869 @LENGTH@ 53
---------INS SimpleName@@text @TO@ VariableDeclarationFragment@@text=converter.convertTo(String.class,inputStream) @AT@ 1869 @LENGTH@ 4
---------INS MethodInvocation@@converter.convertTo(String.class,inputStream) @TO@ VariableDeclarationFragment@@text=converter.convertTo(String.class,inputStream) @AT@ 1876 @LENGTH@ 46
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.convertTo(String.class,inputStream) @AT@ 1876 @LENGTH@ 9
------------INS SimpleName@@MethodName:convertTo:[String.class, inputStream] @TO@ MethodInvocation@@converter.convertTo(String.class,inputStream) @AT@ 1886 @LENGTH@ 36
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:convertTo:[String.class, inputStream] @AT@ 1896 @LENGTH@ 12
---------------INS SimpleName@@inputStream @TO@ SimpleName@@MethodName:convertTo:[String.class, inputStream] @AT@ 1910 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertEquals("Converted to String","bar",text) @TO@ MethodDeclaration@@public, void, MethodName:testConvertStringAndStreams, Exception,  @AT@ 1932 @LENGTH@ 49
------INS MethodInvocation@@assertEquals("Converted to String","bar",text) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Converted to String","bar",text) @AT@ 1932 @LENGTH@ 48
---------INS SimpleName@@MethodName:assertEquals:["Converted to String", "bar", text] @TO@ MethodInvocation@@assertEquals("Converted to String","bar",text) @AT@ 1932 @LENGTH@ 48
------------INS StringLiteral@@"Converted to String" @TO@ SimpleName@@MethodName:assertEquals:["Converted to String", "bar", text] @AT@ 1945 @LENGTH@ 21
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:assertEquals:["Converted to String", "bar", text] @AT@ 1968 @LENGTH@ 5
------------INS SimpleName@@text @TO@ SimpleName@@MethodName:assertEquals:["Converted to String", "bar", text] @AT@ 1975 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("queue:a").choice().when(header("foo").isEqualTo("bar")).to("mock:x").when(header("foo").isEqualTo("cheese")).to("mock:y").otherwise().to("mock:z") @TO@ MethodInvocation:from("direct:a").choice().when(header("foo").isEqualTo("bar")).to("mock:x").when(header("foo").isEqualTo("cheese")).to("mock:y").otherwise().to("mock:z") @AT@ 3575 @LENGTH@ 228
---UPD MethodInvocation@@from("queue:a").choice().when(header("foo").isEqualTo("bar")).to("mock:x").when(header("foo").isEqualTo("cheese")).to("mock:y").otherwise().to("mock:z") @TO@ from("direct:a").choice().when(header("foo").isEqualTo("bar")).to("mock:x").when(header("foo").isEqualTo("cheese")).to("mock:y").otherwise().to("mock:z") @AT@ 3575 @LENGTH@ 227
------UPD MethodInvocation@@MethodName:from:["queue:a"] @TO@ MethodName:from:["direct:a"] @AT@ 3575 @LENGTH@ 15
---------UPD StringLiteral@@"queue:a" @TO@ "direct:a" @AT@ 3580 @LENGTH@ 9


UPD VariableDeclarationStatement@@long low=((data[offset + 0] & 0xff) << 0) + ((data[offset + 1] & 0xff) << 8) + ((data[offset + 2] & 0xff) << 16)+ ((data[offset + 3] & 0xff) << 24); @TO@ long low=((data[offset + 0] & 0xff) << 0) + ((data[offset + 1] & 0xff) << 8) + ((data[offset + 2] & 0xff) << 16)+ (((long)(data[offset + 3] & 0xff)) << 24); @AT@ 8285 @LENGTH@ 224
---UPD VariableDeclarationFragment@@low=((data[offset + 0] & 0xff) << 0) + ((data[offset + 1] & 0xff) << 8) + ((data[offset + 2] & 0xff) << 16)+ ((data[offset + 3] & 0xff) << 24) @TO@ low=((data[offset + 0] & 0xff) << 0) + ((data[offset + 1] & 0xff) << 8) + ((data[offset + 2] & 0xff) << 16)+ (((long)(data[offset + 3] & 0xff)) << 24) @AT@ 8290 @LENGTH@ 218
------UPD InfixExpression@@((data[offset + 0] & 0xff) << 0) + ((data[offset + 1] & 0xff) << 8) + ((data[offset + 2] & 0xff) << 16)+ ((data[offset + 3] & 0xff) << 24) @TO@ ((data[offset + 0] & 0xff) << 0) + ((data[offset + 1] & 0xff) << 8) + ((data[offset + 2] & 0xff) << 16)+ (((long)(data[offset + 3] & 0xff)) << 24) @AT@ 8309 @LENGTH@ 199
---------UPD ParenthesizedExpression@@((data[offset + 3] & 0xff) << 24) @TO@ (((long)(data[offset + 3] & 0xff)) << 24) @AT@ 8469 @LENGTH@ 39
------------UPD InfixExpression@@(data[offset + 3] & 0xff) << 24 @TO@ ((long)(data[offset + 3] & 0xff)) << 24 @AT@ 8471 @LENGTH@ 35
---------------INS ParenthesizedExpression@@((long)(data[offset + 3] & 0xff)) @TO@ InfixExpression@@(data[offset + 3] & 0xff) << 24 @AT@ 8471 @LENGTH@ 40
------------------INS CastExpression@@(long)(data[offset + 3] & 0xff) @TO@ ParenthesizedExpression@@((long)(data[offset + 3] & 0xff)) @AT@ 8473 @LENGTH@ 36
---------------------MOV ParenthesizedExpression@@(data[offset + 3] & 0xff) @TO@ CastExpression@@(long)(data[offset + 3] & 0xff) @AT@ 8471 @LENGTH@ 29
---------------------MOV ParenthesizedExpression@@(data[offset + 3] & 0xff) @TO@ CastExpression@@(long)(data[offset + 3] & 0xff) @AT@ 8471 @LENGTH@ 29
---------------------INS PrimitiveType@@long @TO@ CastExpression@@(long)(data[offset + 3] & 0xff) @AT@ 8474 @LENGTH@ 4


INS IfStatement@@if (!success) {  throw new IOException("Unable to set the last modification time for " + file);} @TO@ MethodDeclaration@@public, static, void, MethodName:touch, File file, IOException,  @AT@ 5089 @LENGTH@ 115
---INS PrefixExpression@@!success @TO@ IfStatement@@if (!success) {  throw new IOException("Unable to set the last modification time for " + file);} @AT@ 5092 @LENGTH@ 8
------INS Operator@@! @TO@ PrefixExpression@@!success @AT@ 5092 @LENGTH@ 1
------INS SimpleName@@success @TO@ PrefixExpression@@!success @AT@ 5093 @LENGTH@ 7
---INS Block@@ThenBody:{  throw new IOException("Unable to set the last modification time for " + file);} @TO@ IfStatement@@if (!success) {  throw new IOException("Unable to set the last modification time for " + file);} @AT@ 5102 @LENGTH@ 102
------INS ThrowStatement@@ClassInstanceCreation:new IOException("Unable to set the last modification time for " + file) @TO@ Block@@ThenBody:{  throw new IOException("Unable to set the last modification time for " + file);} @AT@ 5116 @LENGTH@ 78
---------INS ClassInstanceCreation@@IOException["Unable to set the last modification time for " + file] @TO@ ThrowStatement@@ClassInstanceCreation:new IOException("Unable to set the last modification time for " + file) @AT@ 5122 @LENGTH@ 71
------------INS New@@new @TO@ ClassInstanceCreation@@IOException["Unable to set the last modification time for " + file] @AT@ 5122 @LENGTH@ 3
------------INS SimpleType@@IOException @TO@ ClassInstanceCreation@@IOException["Unable to set the last modification time for " + file] @AT@ 5126 @LENGTH@ 11
------------INS InfixExpression@@"Unable to set the last modification time for " + file @TO@ ClassInstanceCreation@@IOException["Unable to set the last modification time for " + file] @AT@ 5138 @LENGTH@ 54
---------------INS StringLiteral@@"Unable to set the last modification time for " @TO@ InfixExpression@@"Unable to set the last modification time for " + file @AT@ 5138 @LENGTH@ 47
---------------INS Operator@@+ @TO@ InfixExpression@@"Unable to set the last modification time for " + file @AT@ 5185 @LENGTH@ 1
---------------INS SimpleName@@file @TO@ InfixExpression@@"Unable to set the last modification time for " + file @AT@ 5188 @LENGTH@ 4


UPD MethodDeclaration@@protected, abstract, ContentHandler, MethodName:createContentHandler,  @TO@ protected, abstract, ContentHandler, MethodName:createContentHandler, Exception,  @AT@ 2462 @LENGTH@ 57
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, abstract, ContentHandler, MethodName:createContentHandler,  @AT@ 2526 @LENGTH@ 9


INS IfStatement@@if (SystemUtils.isJavaVersionAtLeast(1.4f)) {  conf.addProperty("email.string","ebourg@apache.org");  conf.addProperty("email.string.interpolated","${email.string}");  conf.addProperty("email.object",createInternetAddress("ebourg@apache.org"));} @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 14146 @LENGTH@ 298
---INS MethodInvocation@@SystemUtils.isJavaVersionAtLeast(1.4f) @TO@ IfStatement@@if (SystemUtils.isJavaVersionAtLeast(1.4f)) {  conf.addProperty("email.string","ebourg@apache.org");  conf.addProperty("email.string.interpolated","${email.string}");  conf.addProperty("email.object",createInternetAddress("ebourg@apache.org"));} @AT@ 14150 @LENGTH@ 38
------INS SimpleName@@Name:SystemUtils @TO@ MethodInvocation@@SystemUtils.isJavaVersionAtLeast(1.4f) @AT@ 14150 @LENGTH@ 11
------INS SimpleName@@MethodName:isJavaVersionAtLeast:[1.4f] @TO@ MethodInvocation@@SystemUtils.isJavaVersionAtLeast(1.4f) @AT@ 14162 @LENGTH@ 26
---------INS NumberLiteral@@1.4f @TO@ SimpleName@@MethodName:isJavaVersionAtLeast:[1.4f] @AT@ 14183 @LENGTH@ 4
---INS Block@@ThenBody:{  conf.addProperty("email.string","ebourg@apache.org");  conf.addProperty("email.string.interpolated","${email.string}");  conf.addProperty("email.object",createInternetAddress("ebourg@apache.org"));} @TO@ IfStatement@@if (SystemUtils.isJavaVersionAtLeast(1.4f)) {  conf.addProperty("email.string","ebourg@apache.org");  conf.addProperty("email.string.interpolated","${email.string}");  conf.addProperty("email.object",createInternetAddress("ebourg@apache.org"));} @AT@ 14198 @LENGTH@ 246
------MOV ExpressionStatement@@MethodInvocation:conf.addProperty("email.string","ebourg@apache.org") @TO@ Block@@ThenBody:{  conf.addProperty("email.string","ebourg@apache.org");  conf.addProperty("email.string.interpolated","${email.string}");  conf.addProperty("email.object",createInternetAddress("ebourg@apache.org"));} @AT@ 14146 @LENGTH@ 54
------MOV ExpressionStatement@@MethodInvocation:conf.addProperty("email.string.interpolated","${email.string}") @TO@ Block@@ThenBody:{  conf.addProperty("email.string","ebourg@apache.org");  conf.addProperty("email.string.interpolated","${email.string}");  conf.addProperty("email.object",createInternetAddress("ebourg@apache.org"));} @AT@ 14209 @LENGTH@ 65
------INS ExpressionStatement@@MethodInvocation:conf.addProperty("email.object",createInternetAddress("ebourg@apache.org")) @TO@ Block@@ThenBody:{  conf.addProperty("email.string","ebourg@apache.org");  conf.addProperty("email.string.interpolated","${email.string}");  conf.addProperty("email.object",createInternetAddress("ebourg@apache.org"));} @AT@ 14357 @LENGTH@ 77
---------MOV MethodInvocation@@conf.addProperty("email.object","ebourg@apache.org") @TO@ ExpressionStatement@@MethodInvocation:conf.addProperty("email.object",createInternetAddress("ebourg@apache.org")) @AT@ 14283 @LENGTH@ 53
------------UPD SimpleName@@MethodName:addProperty:["email.object", "ebourg@apache.org"] @TO@ MethodName:addProperty:["email.object", createInternetAddress("ebourg@apache.org")] @AT@ 14288 @LENGTH@ 48
---------------INS MethodInvocation@@createInternetAddress("ebourg@apache.org") @TO@ SimpleName@@MethodName:addProperty:["email.object", "ebourg@apache.org"] @AT@ 14390 @LENGTH@ 42
------------------INS SimpleName@@MethodName:createInternetAddress:["ebourg@apache.org"] @TO@ MethodInvocation@@createInternetAddress("ebourg@apache.org") @AT@ 14390 @LENGTH@ 42
---------------------MOV StringLiteral@@"ebourg@apache.org" @TO@ SimpleName@@MethodName:createInternetAddress:["ebourg@apache.org"] @AT@ 14316 @LENGTH@ 19
------------------INS SimpleName@@MethodName:createInternetAddress:["ebourg@apache.org"] @TO@ MethodInvocation@@createInternetAddress("ebourg@apache.org") @AT@ 14390 @LENGTH@ 42
---------------------MOV StringLiteral@@"ebourg@apache.org" @TO@ SimpleName@@MethodName:createInternetAddress:["ebourg@apache.org"] @AT@ 14316 @LENGTH@ 19


UPD VariableDeclarationStatement@@LdapCompensatingTransactionDataManager tested=new LdapCompensatingTransactionDataManager(null); @TO@ AbstractCompensatingTransactionDataManager tested=new LdapCompensatingTransactionDataManager(null); @AT@ 3306 @LENGTH@ 115
---UPD SimpleType@@LdapCompensatingTransactionDataManager @TO@ AbstractCompensatingTransactionDataManager @AT@ 3306 @LENGTH@ 38


INS MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @TO@ TypeDeclaration@@[public]TestPropertyListConfiguration, TestCase @AT@ 10781 @LENGTH@ 624
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10781 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10788 @LENGTH@ 4
---INS SimpleName@@MethodName:testAddDataProperty @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10793 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10822 @LENGTH@ 9
---INS VariableDeclarationStatement@@byte[] expected=new byte[]{1,2,3,4}; @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10848 @LENGTH@ 41
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] expected=new byte[]{1,2,3,4}; @AT@ 10848 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 10848 @LENGTH@ 4
------INS VariableDeclarationFragment@@expected=new byte[]{1,2,3,4} @TO@ VariableDeclarationStatement@@byte[] expected=new byte[]{1,2,3,4}; @AT@ 10855 @LENGTH@ 33
---------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected=new byte[]{1,2,3,4} @AT@ 10855 @LENGTH@ 8
---------INS ArrayCreation@@new byte[]{1,2,3,4} @TO@ VariableDeclarationFragment@@expected=new byte[]{1,2,3,4} @AT@ 10866 @LENGTH@ 22
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[]{1,2,3,4} @AT@ 10870 @LENGTH@ 6
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 10870 @LENGTH@ 4
------------INS ArrayInitializer@@{1,2,3,4} @TO@ ArrayCreation@@new byte[]{1,2,3,4} @AT@ 10876 @LENGTH@ 12
---------------INS NumberLiteral@@1 @TO@ ArrayInitializer@@{1,2,3,4} @AT@ 10877 @LENGTH@ 1
---------------INS NumberLiteral@@2 @TO@ ArrayInitializer@@{1,2,3,4} @AT@ 10880 @LENGTH@ 1
---------------INS NumberLiteral@@3 @TO@ ArrayInitializer@@{1,2,3,4} @AT@ 10883 @LENGTH@ 1
---------------INS NumberLiteral@@4 @TO@ ArrayInitializer@@{1,2,3,4} @AT@ 10886 @LENGTH@ 1
---INS VariableDeclarationStatement@@PropertyListConfiguration config=new PropertyListConfiguration(); @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10899 @LENGTH@ 67
------INS SimpleType@@PropertyListConfiguration @TO@ VariableDeclarationStatement@@PropertyListConfiguration config=new PropertyListConfiguration(); @AT@ 10899 @LENGTH@ 25
------INS VariableDeclarationFragment@@config=new PropertyListConfiguration() @TO@ VariableDeclarationStatement@@PropertyListConfiguration config=new PropertyListConfiguration(); @AT@ 10925 @LENGTH@ 40
---------INS SimpleName@@config @TO@ VariableDeclarationFragment@@config=new PropertyListConfiguration() @AT@ 10925 @LENGTH@ 6
---------INS ClassInstanceCreation@@PropertyListConfiguration[] @TO@ VariableDeclarationFragment@@config=new PropertyListConfiguration() @AT@ 10934 @LENGTH@ 31
------------INS New@@new @TO@ ClassInstanceCreation@@PropertyListConfiguration[] @AT@ 10934 @LENGTH@ 3
------------INS SimpleType@@PropertyListConfiguration @TO@ ClassInstanceCreation@@PropertyListConfiguration[] @AT@ 10938 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:config.addProperty("foo",expected) @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10976 @LENGTH@ 36
------INS MethodInvocation@@config.addProperty("foo",expected) @TO@ ExpressionStatement@@MethodInvocation:config.addProperty("foo",expected) @AT@ 10976 @LENGTH@ 35
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.addProperty("foo",expected) @AT@ 10976 @LENGTH@ 6
---------INS SimpleName@@MethodName:addProperty:["foo", expected] @TO@ MethodInvocation@@config.addProperty("foo",expected) @AT@ 10983 @LENGTH@ 28
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:addProperty:["foo", expected] @AT@ 10995 @LENGTH@ 5
------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:addProperty:["foo", expected] @AT@ 11002 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:config.save("target/testdata.plist") @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 11022 @LENGTH@ 37
------INS MethodInvocation@@config.save("target/testdata.plist") @TO@ ExpressionStatement@@MethodInvocation:config.save("target/testdata.plist") @AT@ 11022 @LENGTH@ 36
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.save("target/testdata.plist") @AT@ 11022 @LENGTH@ 6
---------INS SimpleName@@MethodName:save:["target/testdata.plist"] @TO@ MethodInvocation@@config.save("target/testdata.plist") @AT@ 11029 @LENGTH@ 29
------------INS StringLiteral@@"target/testdata.plist" @TO@ SimpleName@@MethodName:save:["target/testdata.plist"] @AT@ 11034 @LENGTH@ 23
---INS VariableDeclarationStatement@@PropertyListConfiguration config2=new PropertyListConfiguration("target/testdata.plist"); @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 11071 @LENGTH@ 91
------INS SimpleType@@PropertyListConfiguration @TO@ VariableDeclarationStatement@@PropertyListConfiguration config2=new PropertyListConfiguration("target/testdata.plist"); @AT@ 11071 @LENGTH@ 25
------INS VariableDeclarationFragment@@config2=new PropertyListConfiguration("target/testdata.plist") @TO@ VariableDeclarationStatement@@PropertyListConfiguration config2=new PropertyListConfiguration("target/testdata.plist"); @AT@ 11097 @LENGTH@ 64
---------INS SimpleName@@config2 @TO@ VariableDeclarationFragment@@config2=new PropertyListConfiguration("target/testdata.plist") @AT@ 11097 @LENGTH@ 7
---------INS ClassInstanceCreation@@PropertyListConfiguration["target/testdata.plist"] @TO@ VariableDeclarationFragment@@config2=new PropertyListConfiguration("target/testdata.plist") @AT@ 11107 @LENGTH@ 54
------------INS New@@new @TO@ ClassInstanceCreation@@PropertyListConfiguration["target/testdata.plist"] @AT@ 11107 @LENGTH@ 3
------------INS SimpleType@@PropertyListConfiguration @TO@ ClassInstanceCreation@@PropertyListConfiguration["target/testdata.plist"] @AT@ 11111 @LENGTH@ 25
------------INS StringLiteral@@"target/testdata.plist" @TO@ ClassInstanceCreation@@PropertyListConfiguration["target/testdata.plist"] @AT@ 11137 @LENGTH@ 23
---INS VariableDeclarationStatement@@Object array=config2.getProperty("foo"); @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 11172 @LENGTH@ 42
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object array=config2.getProperty("foo"); @AT@ 11172 @LENGTH@ 6
------INS VariableDeclarationFragment@@array=config2.getProperty("foo") @TO@ VariableDeclarationStatement@@Object array=config2.getProperty("foo"); @AT@ 11179 @LENGTH@ 34
---------INS SimpleName@@array @TO@ VariableDeclarationFragment@@array=config2.getProperty("foo") @AT@ 11179 @LENGTH@ 5
---------INS MethodInvocation@@config2.getProperty("foo") @TO@ VariableDeclarationFragment@@array=config2.getProperty("foo") @AT@ 11187 @LENGTH@ 26
------------INS SimpleName@@Name:config2 @TO@ MethodInvocation@@config2.getProperty("foo") @AT@ 11187 @LENGTH@ 7
------------INS SimpleName@@MethodName:getProperty:["foo"] @TO@ MethodInvocation@@config2.getProperty("foo") @AT@ 11195 @LENGTH@ 18
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:getProperty:["foo"] @AT@ 11207 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertNotNull("data not found",array) @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 11226 @LENGTH@ 39
------INS MethodInvocation@@assertNotNull("data not found",array) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull("data not found",array) @AT@ 11226 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertNotNull:["data not found", array] @TO@ MethodInvocation@@assertNotNull("data not found",array) @AT@ 11226 @LENGTH@ 38
------------INS StringLiteral@@"data not found" @TO@ SimpleName@@MethodName:assertNotNull:["data not found", array] @AT@ 11240 @LENGTH@ 16
------------INS SimpleName@@array @TO@ SimpleName@@MethodName:assertNotNull:["data not found", array] @AT@ 11258 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals("property type",byte[].class,array.getClass()) @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 11275 @LENGTH@ 62
------INS MethodInvocation@@assertEquals("property type",byte[].class,array.getClass()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("property type",byte[].class,array.getClass()) @AT@ 11275 @LENGTH@ 61
---------INS SimpleName@@MethodName:assertEquals:["property type", byte[].class, array.getClass()] @TO@ MethodInvocation@@assertEquals("property type",byte[].class,array.getClass()) @AT@ 11275 @LENGTH@ 61
------------INS StringLiteral@@"property type" @TO@ SimpleName@@MethodName:assertEquals:["property type", byte[].class, array.getClass()] @AT@ 11288 @LENGTH@ 15
------------INS TypeLiteral@@byte[].class @TO@ SimpleName@@MethodName:assertEquals:["property type", byte[].class, array.getClass()] @AT@ 11305 @LENGTH@ 12
------------INS MethodInvocation@@array.getClass() @TO@ SimpleName@@MethodName:assertEquals:["property type", byte[].class, array.getClass()] @AT@ 11319 @LENGTH@ 16
---------------INS SimpleName@@Name:array @TO@ MethodInvocation@@array.getClass() @AT@ 11319 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@array.getClass() @AT@ 11325 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:ArrayAssert.assertEquals(expected,(byte[])array) @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 11347 @LENGTH@ 51
------INS MethodInvocation@@ArrayAssert.assertEquals(expected,(byte[])array) @TO@ ExpressionStatement@@MethodInvocation:ArrayAssert.assertEquals(expected,(byte[])array) @AT@ 11347 @LENGTH@ 50
---------INS SimpleName@@Name:ArrayAssert @TO@ MethodInvocation@@ArrayAssert.assertEquals(expected,(byte[])array) @AT@ 11347 @LENGTH@ 11
---------INS SimpleName@@MethodName:assertEquals:[expected, (byte[])array] @TO@ MethodInvocation@@ArrayAssert.assertEquals(expected,(byte[])array) @AT@ 11359 @LENGTH@ 38
------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:assertEquals:[expected, (byte[])array] @AT@ 11372 @LENGTH@ 8
------------INS CastExpression@@(byte[])array @TO@ SimpleName@@MethodName:assertEquals:[expected, (byte[])array] @AT@ 11382 @LENGTH@ 14
---------------INS ArrayType@@byte[] @TO@ CastExpression@@(byte[])array @AT@ 11383 @LENGTH@ 6
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 11383 @LENGTH@ 4
---------------INS SimpleName@@array @TO@ CastExpression@@(byte[])array @AT@ 11391 @LENGTH@ 5


INS MethodDeclaration@@protected, String, MethodName:interpolate, String base,  @TO@ TypeDeclaration@@[public]SubsetConfiguration, AbstractConfiguration @AT@ 6579 @LENGTH@ 93
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, String, MethodName:interpolate, String base,  @AT@ 6579 @LENGTH@ 9
---INS SimpleType@@String @TO@ MethodDeclaration@@protected, String, MethodName:interpolate, String base,  @AT@ 6589 @LENGTH@ 6
---INS SimpleName@@MethodName:interpolate @TO@ MethodDeclaration@@protected, String, MethodName:interpolate, String base,  @AT@ 6596 @LENGTH@ 11
---INS SingleVariableDeclaration@@String base @TO@ MethodDeclaration@@protected, String, MethodName:interpolate, String base,  @AT@ 6608 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String base @AT@ 6608 @LENGTH@ 6
------INS SimpleName@@base @TO@ SingleVariableDeclaration@@String base @AT@ 6615 @LENGTH@ 4
---INS ReturnStatement@@SuperMethodInvocation:super.interpolate(base) @TO@ MethodDeclaration@@protected, String, MethodName:interpolate, String base,  @AT@ 6635 @LENGTH@ 31
------INS SuperMethodInvocation@@super.interpolate(base) @TO@ ReturnStatement@@SuperMethodInvocation:super.interpolate(base) @AT@ 6642 @LENGTH@ 23
---------INS SimpleName@@MethodName:interpolate:[base] @TO@ SuperMethodInvocation@@super.interpolate(base) @AT@ 6648 @LENGTH@ 11
---------INS SimpleName@@base @TO@ SuperMethodInvocation@@super.interpolate(base) @AT@ 6660 @LENGTH@ 4


UPD ReturnStatement@@CastExpression:(DirContext)Proxy.newProxyInstance(DirContextProxy.class.getClassLoader(),new Class[]{DirContextProxy.class},new NonClosingDirContextInvocationHandler(context)) @TO@ CastExpression:(DirContext)Proxy.newProxyInstance(DirContextProxy.class.getClassLoader(),new Class[]{LdapUtils.getActualTargetClass(context),DirContextProxy.class},new NonClosingDirContextInvocationHandler(context)) @AT@ 4902 @LENGTH@ 217
---UPD CastExpression@@(DirContext)Proxy.newProxyInstance(DirContextProxy.class.getClassLoader(),new Class[]{DirContextProxy.class},new NonClosingDirContextInvocationHandler(context)) @TO@ (DirContext)Proxy.newProxyInstance(DirContextProxy.class.getClassLoader(),new Class[]{LdapUtils.getActualTargetClass(context),DirContextProxy.class},new NonClosingDirContextInvocationHandler(context)) @AT@ 4909 @LENGTH@ 209
------UPD MethodInvocation@@Proxy.newProxyInstance(DirContextProxy.class.getClassLoader(),new Class[]{DirContextProxy.class},new NonClosingDirContextInvocationHandler(context)) @TO@ Proxy.newProxyInstance(DirContextProxy.class.getClassLoader(),new Class[]{LdapUtils.getActualTargetClass(context),DirContextProxy.class},new NonClosingDirContextInvocationHandler(context)) @AT@ 4922 @LENGTH@ 196
---------UPD SimpleName@@MethodName:newProxyInstance:[DirContextProxy.class.getClassLoader(), new Class[]{DirContextProxy.class}, new NonClosingDirContextInvocationHandler(context)] @TO@ MethodName:newProxyInstance:[DirContextProxy.class.getClassLoader(), new Class[]{LdapUtils.getActualTargetClass(context),DirContextProxy.class}, new NonClosingDirContextInvocationHandler(context)] @AT@ 4928 @LENGTH@ 190
------------UPD ArrayCreation@@new Class[]{DirContextProxy.class} @TO@ new Class[]{LdapUtils.getActualTargetClass(context),DirContextProxy.class} @AT@ 5007 @LENGTH@ 37
---------------UPD ArrayInitializer@@{DirContextProxy.class} @TO@ {LdapUtils.getActualTargetClass(context),DirContextProxy.class} @AT@ 5019 @LENGTH@ 25
------------------INS MethodInvocation@@LdapUtils.getActualTargetClass(context) @TO@ ArrayInitializer@@{DirContextProxy.class} @AT@ 5042 @LENGTH@ 39
---------------------INS SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.getActualTargetClass(context) @AT@ 5042 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:getActualTargetClass:[context] @TO@ MethodInvocation@@LdapUtils.getActualTargetClass(context) @AT@ 5052 @LENGTH@ 29
------------------------INS SimpleName@@context @TO@ SimpleName@@MethodName:getActualTargetClass:[context] @AT@ 5073 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:input.read(bytes) @AT@ 15293 @LENGTH@ 20
---DEL MethodInvocation@@input.read(bytes) @AT@ 15293 @LENGTH@ 19
------DEL SimpleName@@Name:input @AT@ 15293 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @TO@ TypeDeclaration@@[public]XMLPropertyListConfiguration, AbstractHierarchicalFileConfiguration @AT@ 6222 @LENGTH@ 360
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @AT@ 6222 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @AT@ 6229 @LENGTH@ 4
---INS SimpleName@@MethodName:addProperty @TO@ MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @AT@ 6234 @LENGTH@ 11
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @AT@ 6246 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 6246 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 6253 @LENGTH@ 3
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @AT@ 6258 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 6258 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 6265 @LENGTH@ 5
---INS IfStatement@@if (value instanceof byte[]) {  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} else {  super.setProperty(key,value);} @TO@ MethodDeclaration@@public, void, MethodName:addProperty, String key, Object value,  @AT@ 6286 @LENGTH@ 290
------INS InstanceofExpression@@value instanceof byte[] @TO@ IfStatement@@if (value instanceof byte[]) {  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} else {  super.setProperty(key,value);} @AT@ 6290 @LENGTH@ 23
---------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof byte[] @AT@ 6290 @LENGTH@ 5
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof byte[] @AT@ 6296 @LENGTH@ 10
---------INS ArrayType@@byte[] @TO@ InstanceofExpression@@value instanceof byte[] @AT@ 6307 @LENGTH@ 6
------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 6307 @LENGTH@ 4
------INS Block@@ThenBody:{  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} @TO@ IfStatement@@if (value instanceof byte[]) {  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} else {  super.setProperty(key,value);} @AT@ 6323 @LENGTH@ 177
---------INS ExpressionStatement@@MethodInvocation:fireEvent(EVENT_ADD_PROPERTY,key,value,true) @TO@ Block@@ThenBody:{  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} @AT@ 6337 @LENGTH@ 48
------------INS MethodInvocation@@fireEvent(EVENT_ADD_PROPERTY,key,value,true) @TO@ ExpressionStatement@@MethodInvocation:fireEvent(EVENT_ADD_PROPERTY,key,value,true) @AT@ 6337 @LENGTH@ 47
---------------INS SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, true] @TO@ MethodInvocation@@fireEvent(EVENT_ADD_PROPERTY,key,value,true) @AT@ 6337 @LENGTH@ 47
------------------INS SimpleName@@EVENT_ADD_PROPERTY @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, true] @AT@ 6347 @LENGTH@ 18
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, true] @AT@ 6367 @LENGTH@ 3
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, true] @AT@ 6372 @LENGTH@ 5
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, true] @AT@ 6379 @LENGTH@ 4
---------INS ExpressionStatement@@MethodInvocation:addPropertyDirect(key,value) @TO@ Block@@ThenBody:{  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} @AT@ 6398 @LENGTH@ 30
------------INS MethodInvocation@@addPropertyDirect(key,value) @TO@ ExpressionStatement@@MethodInvocation:addPropertyDirect(key,value) @AT@ 6398 @LENGTH@ 29
---------------INS SimpleName@@MethodName:addPropertyDirect:[key, value] @TO@ MethodInvocation@@addPropertyDirect(key,value) @AT@ 6398 @LENGTH@ 29
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:addPropertyDirect:[key, value] @AT@ 6416 @LENGTH@ 3
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:addPropertyDirect:[key, value] @AT@ 6421 @LENGTH@ 5
---------INS ExpressionStatement@@MethodInvocation:fireEvent(EVENT_ADD_PROPERTY,key,value,false) @TO@ Block@@ThenBody:{  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} @AT@ 6441 @LENGTH@ 49
------------INS MethodInvocation@@fireEvent(EVENT_ADD_PROPERTY,key,value,false) @TO@ ExpressionStatement@@MethodInvocation:fireEvent(EVENT_ADD_PROPERTY,key,value,false) @AT@ 6441 @LENGTH@ 48
---------------INS SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, false] @TO@ MethodInvocation@@fireEvent(EVENT_ADD_PROPERTY,key,value,false) @AT@ 6441 @LENGTH@ 48
------------------INS SimpleName@@EVENT_ADD_PROPERTY @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, false] @AT@ 6451 @LENGTH@ 18
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, false] @AT@ 6471 @LENGTH@ 3
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, false] @AT@ 6476 @LENGTH@ 5
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:fireEvent:[EVENT_ADD_PROPERTY, key, value, false] @AT@ 6483 @LENGTH@ 5
------INS Block@@ElseBody:{  super.setProperty(key,value);} @TO@ IfStatement@@if (value instanceof byte[]) {  fireEvent(EVENT_ADD_PROPERTY,key,value,true);  addPropertyDirect(key,value);  fireEvent(EVENT_ADD_PROPERTY,key,value,false);} else {  super.setProperty(key,value);} @AT@ 6522 @LENGTH@ 54
---------INS ExpressionStatement@@SuperMethodInvocation:super.setProperty(key,value) @TO@ Block@@ElseBody:{  super.setProperty(key,value);} @AT@ 6536 @LENGTH@ 30
------------INS SuperMethodInvocation@@super.setProperty(key,value) @TO@ ExpressionStatement@@SuperMethodInvocation:super.setProperty(key,value) @AT@ 6536 @LENGTH@ 29
---------------INS SimpleName@@MethodName:setProperty:[key, value] @TO@ SuperMethodInvocation@@super.setProperty(key,value) @AT@ 6542 @LENGTH@ 11
---------------INS SimpleName@@key @TO@ SuperMethodInvocation@@super.setProperty(key,value) @AT@ 6554 @LENGTH@ 3
---------------INS SimpleName@@value @TO@ SuperMethodInvocation@@super.setProperty(key,value) @AT@ 6559 @LENGTH@ 5


UPD IfStatement@@if (outputStream == null) {  outputStream=createOutputStream();} @TO@ if (outputStream == null) {  outputStream=createOutputStream();  Assert.notNull(outputStream,"outputStream must not be null");} @AT@ 1207 @LENGTH@ 86
---UPD Block@@ThenBody:{  outputStream=createOutputStream();} @TO@ ThenBody:{  outputStream=createOutputStream();  Assert.notNull(outputStream,"outputStream must not be null");} @AT@ 1233 @LENGTH@ 60
------INS ExpressionStatement@@MethodInvocation:Assert.notNull(outputStream,"outputStream must not be null") @TO@ Block@@ThenBody:{  outputStream=createOutputStream();} @AT@ 1337 @LENGTH@ 62
---------INS MethodInvocation@@Assert.notNull(outputStream,"outputStream must not be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(outputStream,"outputStream must not be null") @AT@ 1337 @LENGTH@ 61
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(outputStream,"outputStream must not be null") @AT@ 1337 @LENGTH@ 6
------------INS SimpleName@@MethodName:notNull:[outputStream, "outputStream must not be null"] @TO@ MethodInvocation@@Assert.notNull(outputStream,"outputStream must not be null") @AT@ 1344 @LENGTH@ 54
---------------INS SimpleName@@outputStream @TO@ SimpleName@@MethodName:notNull:[outputStream, "outputStream must not be null"] @AT@ 1352 @LENGTH@ 12
---------------INS StringLiteral@@"outputStream must not be null" @TO@ SimpleName@@MethodName:notNull:[outputStream, "outputStream must not be null"] @AT@ 1366 @LENGTH@ 31


UPD MethodDeclaration@@public, void, MethodName:testConvert, Exception,  @TO@ public, void, MethodName:testConvertStringAndBytes, Exception,  @AT@ 1298 @LENGTH@ 368
---UPD SimpleName@@MethodName:testConvert @TO@ MethodName:testConvertStringAndBytes @AT@ 1310 @LENGTH@ 11


DEL ExpressionStatement@@MethodInvocation:ldapOperationsMock.rename(expectedDn,expectedTempName) @AT@ 2002 @LENGTH@ 56
---DEL MethodInvocation@@ldapOperationsMock.rename(expectedDn,expectedTempName) @AT@ 2002 @LENGTH@ 55
------DEL SimpleName@@Name:ldapOperationsMock @AT@ 2002 @LENGTH@ 18
------DEL SimpleName@@MethodName:rename:[expectedDn, expectedTempName] @AT@ 2021 @LENGTH@ 36
---------DEL SimpleName@@expectedDn @AT@ 2028 @LENGTH@ 10
---------DEL SimpleName@@expectedTempName @AT@ 2040 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:testConvert, Exception,  @TO@ public, void, MethodName:testConvertToDocument, Exception,  @AT@ 1313 @LENGTH@ 552
---UPD SimpleName@@MethodName:testConvert @TO@ MethodName:testConvertToDocument @AT@ 1325 @LENGTH@ 11


UPD MethodDeclaration@@public, SOAPBodyElement, MethodName:getFirstBodyElement, SOAPBody body,  @TO@ public, SOAPElement, MethodName:getFirstBodyElement, SOAPBody body,  @AT@ 8646 @LENGTH@ 335
---UPD SimpleType@@SOAPBodyElement @TO@ SOAPElement @AT@ 8653 @LENGTH@ 15
---UPD ForStatement@@for (Iterator iterator=body.getChildElements(); iterator.hasNext(); ) {  Object child=iterator.next();  if (child instanceof SOAPBodyElement) {    return (SOAPBodyElement)child;  }} @TO@ for (Iterator iterator=body.getChildElements(); iterator.hasNext(); ) {  Object child=iterator.next();  if (child instanceof SOAPElement) {    return (SOAPElement)child;  }} @AT@ 8714 @LENGTH@ 240
------UPD IfStatement@@if (child instanceof SOAPBodyElement) {  return (SOAPBodyElement)child;} @TO@ if (child instanceof SOAPElement) {  return (SOAPElement)child;} @AT@ 8843 @LENGTH@ 101
---------UPD InstanceofExpression@@child instanceof SOAPBodyElement @TO@ child instanceof SOAPElement @AT@ 8847 @LENGTH@ 32
------------UPD SimpleType@@SOAPBodyElement @TO@ SOAPElement @AT@ 8864 @LENGTH@ 15
---------UPD Block@@ThenBody:{  return (SOAPBodyElement)child;} @TO@ ThenBody:{  return (SOAPElement)child;} @AT@ 8881 @LENGTH@ 63
------------UPD ReturnStatement@@CastExpression:(SOAPBodyElement)child @TO@ CastExpression:(SOAPElement)child @AT@ 8899 @LENGTH@ 31
---------------UPD CastExpression@@(SOAPBodyElement)child @TO@ (SOAPElement)child @AT@ 8906 @LENGTH@ 23
------------------UPD SimpleType@@SOAPBodyElement @TO@ SOAPElement @AT@ 8907 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:assertFalse(template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("wrongvalue"))) @TO@ MethodDeclaration@@public, void, MethodName:testCompareOfWrongByteValueFails,  @AT@ 1812 @LENGTH@ 129
---INS MethodInvocation@@assertFalse(template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("wrongvalue"))) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("wrongvalue"))) @AT@ 1812 @LENGTH@ 128
------INS SimpleName@@MethodName:assertFalse:[template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("wrongvalue"))] @TO@ MethodInvocation@@assertFalse(template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("wrongvalue"))) @AT@ 1812 @LENGTH@ 128
---------INS MethodInvocation@@template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("wrongvalue")) @TO@ SimpleName@@MethodName:assertFalse:[template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("wrongvalue"))] @AT@ 1824 @LENGTH@ 115
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("wrongvalue")) @AT@ 1824 @LENGTH@ 8
------------INS SimpleName@@MethodName:compare:["uid=bob,ou=people,dc=acegisecurity,dc=org", "userPassword", LdapUtils.getUtf8Bytes("wrongvalue")] @TO@ MethodInvocation@@template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("wrongvalue")) @AT@ 1833 @LENGTH@ 106
---------------INS StringLiteral@@"uid=bob,ou=people,dc=acegisecurity,dc=org" @TO@ SimpleName@@MethodName:compare:["uid=bob,ou=people,dc=acegisecurity,dc=org", "userPassword", LdapUtils.getUtf8Bytes("wrongvalue")] @AT@ 1841 @LENGTH@ 43
---------------INS StringLiteral@@"userPassword" @TO@ SimpleName@@MethodName:compare:["uid=bob,ou=people,dc=acegisecurity,dc=org", "userPassword", LdapUtils.getUtf8Bytes("wrongvalue")] @AT@ 1886 @LENGTH@ 14
---------------INS MethodInvocation@@LdapUtils.getUtf8Bytes("wrongvalue") @TO@ SimpleName@@MethodName:compare:["uid=bob,ou=people,dc=acegisecurity,dc=org", "userPassword", LdapUtils.getUtf8Bytes("wrongvalue")] @AT@ 1902 @LENGTH@ 36
------------------INS SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.getUtf8Bytes("wrongvalue") @AT@ 1902 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getUtf8Bytes:["wrongvalue"] @TO@ MethodInvocation@@LdapUtils.getUtf8Bytes("wrongvalue") @AT@ 1912 @LENGTH@ 26
---------------------INS StringLiteral@@"wrongvalue" @TO@ SimpleName@@MethodName:getUtf8Bytes:["wrongvalue"] @AT@ 1925 @LENGTH@ 12


UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException("Unexpected exception handling response instruction " + responseInstruction,e) @TO@ ClassInstanceCreation:new RuntimeException("Unexpected exception handling response instruction " + responseInstruction + ": "+ e) @AT@ 3965 @LENGTH@ 114
---UPD ClassInstanceCreation@@RuntimeException["Unexpected exception handling response instruction " + responseInstruction, e] @TO@ RuntimeException["Unexpected exception handling response instruction " + responseInstruction + ": "+ e] @AT@ 3971 @LENGTH@ 107
------INS InfixExpression@@"Unexpected exception handling response instruction " + responseInstruction + ": "+ e @TO@ ClassInstanceCreation@@RuntimeException["Unexpected exception handling response instruction " + responseInstruction, e] @AT@ 3999 @LENGTH@ 86
---------MOV StringLiteral@@"Unexpected exception handling response instruction " @TO@ InfixExpression@@"Unexpected exception handling response instruction " + responseInstruction + ": "+ e @AT@ 3999 @LENGTH@ 53
---------MOV Operator@@+ @TO@ InfixExpression@@"Unexpected exception handling response instruction " + responseInstruction + ": "+ e @AT@ 4052 @LENGTH@ 1
---------MOV SimpleName@@responseInstruction @TO@ InfixExpression@@"Unexpected exception handling response instruction " + responseInstruction + ": "+ e @AT@ 4055 @LENGTH@ 19
---------INS StringLiteral@@": " @TO@ InfixExpression@@"Unexpected exception handling response instruction " + responseInstruction + ": "+ e @AT@ 4077 @LENGTH@ 4
---------INS SimpleName@@e @TO@ InfixExpression@@"Unexpected exception handling response instruction " + responseInstruction + ": "+ e @AT@ 4084 @LENGTH@ 1
------DEL InfixExpression@@"Unexpected exception handling response instruction " + responseInstruction @AT@ 3999 @LENGTH@ 75
------DEL SimpleName@@e @AT@ 4076 @LENGTH@ 1


UPD VariableDeclarationStatement@@SOAPBodyElement echoResponseElement=(SOAPBodyElement)message.getSOAPBody().getChildElements().next(); @TO@ SOAPBodyElement echoResponseElement=(SOAPBodyElement)message.getSOAPBody().getChildElements(echoResponseName).next(); @AT@ 3146 @LENGTH@ 121
---UPD VariableDeclarationFragment@@echoResponseElement=(SOAPBodyElement)message.getSOAPBody().getChildElements().next() @TO@ echoResponseElement=(SOAPBodyElement)message.getSOAPBody().getChildElements(echoResponseName).next() @AT@ 3162 @LENGTH@ 104
------UPD CastExpression@@(SOAPBodyElement)message.getSOAPBody().getChildElements().next() @TO@ (SOAPBodyElement)message.getSOAPBody().getChildElements(echoResponseName).next() @AT@ 3184 @LENGTH@ 82
---------UPD MethodInvocation@@message.getSOAPBody().getChildElements().next() @TO@ message.getSOAPBody().getChildElements(echoResponseName).next() @AT@ 3202 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getChildElements:[] @TO@ MethodName:getChildElements:[echoResponseName] @AT@ 3202 @LENGTH@ 57
---------------INS SimpleName@@echoResponseName @TO@ MethodInvocation@@MethodName:getChildElements:[] @AT@ 3350 @LENGTH@ 16


UPD VariableDeclarationStatement@@final InterceptorProcessor<Exchange> interceptor1=new InterceptorProcessor<Exchange>(){
  @Override public void process(  Exchange exchange){
    order.add("START:1");
    super.process(exchange);
    order.add("END:1");
  }
}
; @TO@ final DelegateProcess<Exchange> interceptor1=new DelegateProcess<Exchange>(){
  @Override public void process(  Exchange exchange){
    order.add("START:1");
    super.process(exchange);
    order.add("END:1");
  }
}
; @AT@ 1600 @LENGTH@ 285
---UPD ParameterizedType@@InterceptorProcessor<Exchange> @TO@ DelegateProcess<Exchange> @AT@ 1606 @LENGTH@ 30
------UPD SimpleType@@InterceptorProcessor @TO@ DelegateProcess @AT@ 1606 @LENGTH@ 20
---UPD VariableDeclarationFragment@@interceptor1=new InterceptorProcessor<Exchange>(){
  @Override public void process(  Exchange exchange){
    order.add("START:1");
    super.process(exchange);
    order.add("END:1");
  }
}
 @TO@ interceptor1=new DelegateProcess<Exchange>(){
  @Override public void process(  Exchange exchange){
    order.add("START:1");
    super.process(exchange);
    order.add("END:1");
  }
}
 @AT@ 1637 @LENGTH@ 247
------UPD ClassInstanceCreation@@InterceptorProcessor<Exchange>[] @TO@ DelegateProcess<Exchange>[] @AT@ 1652 @LENGTH@ 232
---------UPD ParameterizedType@@InterceptorProcessor<Exchange> @TO@ DelegateProcess<Exchange> @AT@ 1656 @LENGTH@ 30
------------UPD SimpleType@@InterceptorProcessor @TO@ DelegateProcess @AT@ 1656 @LENGTH@ 20


UPD IfStatement@@if (selectedView == null) {  selectedView=holder.getFlowExecution().refresh(context);  holder.setViewSelection(selectedView);} @TO@ if (selectedView == null) {  selectedView=holder.getFlowExecution().refresh(context);  holder.setViewSelection(selectedView);} else {  generateKey(context,holder);} @AT@ 14703 @LENGTH@ 135
---INS Block@@ElseBody:{  generateKey(context,holder);} @TO@ IfStatement@@if (selectedView == null) {  selectedView=holder.getFlowExecution().refresh(context);  holder.setViewSelection(selectedView);} @AT@ 14892 @LENGTH@ 132
------MOV ExpressionStatement@@MethodInvocation:generateKey(context,holder) @TO@ Block@@ElseBody:{  generateKey(context,holder);} @AT@ 14613 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:assertEquals("/app/flows.htm?_flowId=flow&foo=bar&baz=3",url) @TO@ MethodInvocation:assertTrue("/app/flows.htm?_flowId=flow&foo=bar&baz=3".equals(url) || "/app/flows.htm?_flowId=flow&baz=3&foo=bar".equals(url)) @AT@ 4587 @LENGTH@ 63
---UPD MethodInvocation@@assertEquals("/app/flows.htm?_flowId=flow&foo=bar&baz=3",url) @TO@ assertTrue("/app/flows.htm?_flowId=flow&foo=bar&baz=3".equals(url) || "/app/flows.htm?_flowId=flow&baz=3&foo=bar".equals(url)) @AT@ 4587 @LENGTH@ 62
------UPD SimpleName@@MethodName:assertEquals:["/app/flows.htm?_flowId=flow&foo=bar&baz=3", url] @TO@ MethodName:assertTrue:["/app/flows.htm?_flowId=flow&foo=bar&baz=3".equals(url) || "/app/flows.htm?_flowId=flow&baz=3&foo=bar".equals(url)] @AT@ 4587 @LENGTH@ 62
---------INS InfixExpression@@"/app/flows.htm?_flowId=flow&foo=bar&baz=3".equals(url) || "/app/flows.htm?_flowId=flow&baz=3&foo=bar".equals(url) @TO@ SimpleName@@MethodName:assertEquals:["/app/flows.htm?_flowId=flow&foo=bar&baz=3", url] @AT@ 4598 @LENGTH@ 118
------------INS MethodInvocation@@"/app/flows.htm?_flowId=flow&foo=bar&baz=3".equals(url) @TO@ InfixExpression@@"/app/flows.htm?_flowId=flow&foo=bar&baz=3".equals(url) || "/app/flows.htm?_flowId=flow&baz=3&foo=bar".equals(url) @AT@ 4598 @LENGTH@ 55
---------------INS StringLiteral@@"/app/flows.htm?_flowId=flow&foo=bar&baz=3" @TO@ MethodInvocation@@"/app/flows.htm?_flowId=flow&foo=bar&baz=3".equals(url) @AT@ 4598 @LENGTH@ 43
---------------INS SimpleName@@MethodName:equals:[url] @TO@ MethodInvocation@@"/app/flows.htm?_flowId=flow&foo=bar&baz=3".equals(url) @AT@ 4642 @LENGTH@ 11
------------------MOV SimpleName@@url @TO@ SimpleName@@MethodName:equals:[url] @AT@ 4645 @LENGTH@ 3
------------INS Operator@@|| @TO@ InfixExpression@@"/app/flows.htm?_flowId=flow&foo=bar&baz=3".equals(url) || "/app/flows.htm?_flowId=flow&baz=3&foo=bar".equals(url) @AT@ 4653 @LENGTH@ 2
------------INS MethodInvocation@@"/app/flows.htm?_flowId=flow&baz=3&foo=bar".equals(url) @TO@ InfixExpression@@"/app/flows.htm?_flowId=flow&foo=bar&baz=3".equals(url) || "/app/flows.htm?_flowId=flow&baz=3&foo=bar".equals(url) @AT@ 4661 @LENGTH@ 55
---------------INS StringLiteral@@"/app/flows.htm?_flowId=flow&baz=3&foo=bar" @TO@ MethodInvocation@@"/app/flows.htm?_flowId=flow&baz=3&foo=bar".equals(url) @AT@ 4661 @LENGTH@ 43
---------------INS SimpleName@@MethodName:equals:[url] @TO@ MethodInvocation@@"/app/flows.htm?_flowId=flow&baz=3&foo=bar".equals(url) @AT@ 4705 @LENGTH@ 11
------------------INS SimpleName@@url @TO@ SimpleName@@MethodName:equals:[url] @AT@ 4712 @LENGTH@ 3
---------DEL StringLiteral@@"/app/flows.htm?_flowId=flow&foo=bar&baz=3" @AT@ 4600 @LENGTH@ 43


UPD MethodDeclaration@@protected, voidMethodName:AbstractConfiguration,  @TO@ public, voidMethodName:AbstractConfiguration,  @AT@ 5865 @LENGTH@ 70
---UPD Modifier@@protected @TO@ public @AT@ 5865 @LENGTH@ 9


UPD MethodDeclaration@@SOAPBodyElement, MethodName:getFirstBodyElement, SOAPBody body,  @TO@ SOAPElement, MethodName:getFirstBodyElement, SOAPBody body,  @AT@ 5159 @LENGTH@ 35
---UPD SimpleType@@SOAPBodyElement @TO@ SOAPElement @AT@ 5143 @LENGTH@ 15


UPD ReturnStatement@@CastExpression:(DirContext)Proxy.newProxyInstance(DirContextProxy.class.getClassLoader(),new Class[]{DirContextProxy.class},new TransactionAwareDirContextInvocationHandler(context,target)) @TO@ CastExpression:(DirContext)Proxy.newProxyInstance(DirContextProxy.class.getClassLoader(),new Class[]{LdapUtils.getActualTargetClass(context),DirContextProxy.class},new TransactionAwareDirContextInvocationHandler(context,target)) @AT@ 2320 @LENGTH@ 290
---UPD CastExpression@@(DirContext)Proxy.newProxyInstance(DirContextProxy.class.getClassLoader(),new Class[]{DirContextProxy.class},new TransactionAwareDirContextInvocationHandler(context,target)) @TO@ (DirContext)Proxy.newProxyInstance(DirContextProxy.class.getClassLoader(),new Class[]{LdapUtils.getActualTargetClass(context),DirContextProxy.class},new TransactionAwareDirContextInvocationHandler(context,target)) @AT@ 2327 @LENGTH@ 282
------UPD MethodInvocation@@Proxy.newProxyInstance(DirContextProxy.class.getClassLoader(),new Class[]{DirContextProxy.class},new TransactionAwareDirContextInvocationHandler(context,target)) @TO@ Proxy.newProxyInstance(DirContextProxy.class.getClassLoader(),new Class[]{LdapUtils.getActualTargetClass(context),DirContextProxy.class},new TransactionAwareDirContextInvocationHandler(context,target)) @AT@ 2340 @LENGTH@ 269
---------UPD SimpleName@@MethodName:newProxyInstance:[DirContextProxy.class.getClassLoader(), new Class[]{DirContextProxy.class}, new TransactionAwareDirContextInvocationHandler(context,target)] @TO@ MethodName:newProxyInstance:[DirContextProxy.class.getClassLoader(), new Class[]{LdapUtils.getActualTargetClass(context),DirContextProxy.class}, new TransactionAwareDirContextInvocationHandler(context,target)] @AT@ 2364 @LENGTH@ 245
------------UPD ArrayCreation@@new Class[]{DirContextProxy.class} @TO@ new Class[]{LdapUtils.getActualTargetClass(context),DirContextProxy.class} @AT@ 2446 @LENGTH@ 37
---------------UPD ArrayInitializer@@{DirContextProxy.class} @TO@ {LdapUtils.getActualTargetClass(context),DirContextProxy.class} @AT@ 2458 @LENGTH@ 25
------------------INS MethodInvocation@@LdapUtils.getActualTargetClass(context) @TO@ ArrayInitializer@@{DirContextProxy.class} @AT@ 2512 @LENGTH@ 39
---------------------INS SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.getActualTargetClass(context) @AT@ 2512 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:getActualTargetClass:[context] @TO@ MethodInvocation@@LdapUtils.getActualTargetClass(context) @AT@ 2522 @LENGTH@ 29
------------------------INS SimpleName@@context @TO@ SimpleName@@MethodName:getActualTargetClass:[context] @AT@ 2543 @LENGTH@ 7


INS VariableDeclarationStatement@@Name echoResponseName=envelope.createName("echoResponse",PREFIX,NAMESPACE_URI); @TO@ MethodDeclaration@@private, void, MethodName:writeEchoResponse, SOAPMessage message, SOAPException,  @AT@ 3146 @LENGTH@ 83
---INS SimpleType@@Name @TO@ VariableDeclarationStatement@@Name echoResponseName=envelope.createName("echoResponse",PREFIX,NAMESPACE_URI); @AT@ 3146 @LENGTH@ 4
---INS VariableDeclarationFragment@@echoResponseName=envelope.createName("echoResponse",PREFIX,NAMESPACE_URI) @TO@ VariableDeclarationStatement@@Name echoResponseName=envelope.createName("echoResponse",PREFIX,NAMESPACE_URI); @AT@ 3151 @LENGTH@ 77
------INS SimpleName@@echoResponseName @TO@ VariableDeclarationFragment@@echoResponseName=envelope.createName("echoResponse",PREFIX,NAMESPACE_URI) @AT@ 3151 @LENGTH@ 16
------INS MethodInvocation@@envelope.createName("echoResponse",PREFIX,NAMESPACE_URI) @TO@ VariableDeclarationFragment@@echoResponseName=envelope.createName("echoResponse",PREFIX,NAMESPACE_URI) @AT@ 3170 @LENGTH@ 58
---------INS SimpleName@@Name:envelope @TO@ MethodInvocation@@envelope.createName("echoResponse",PREFIX,NAMESPACE_URI) @AT@ 3170 @LENGTH@ 8
---------INS SimpleName@@MethodName:createName:["echoResponse", PREFIX, NAMESPACE_URI] @TO@ MethodInvocation@@envelope.createName("echoResponse",PREFIX,NAMESPACE_URI) @AT@ 3179 @LENGTH@ 49
------------INS StringLiteral@@"echoResponse" @TO@ SimpleName@@MethodName:createName:["echoResponse", PREFIX, NAMESPACE_URI] @AT@ 3190 @LENGTH@ 14
------------INS SimpleName@@PREFIX @TO@ SimpleName@@MethodName:createName:["echoResponse", PREFIX, NAMESPACE_URI] @AT@ 3206 @LENGTH@ 6
------------INS SimpleName@@NAMESPACE_URI @TO@ SimpleName@@MethodName:createName:["echoResponse", PREFIX, NAMESPACE_URI] @AT@ 3214 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertEquals(c.size(),2) @TO@ MethodInvocation:assertEquals(2,c.size()) @AT@ 10759 @LENGTH@ 26
---UPD MethodInvocation@@assertEquals(c.size(),2) @TO@ assertEquals(2,c.size()) @AT@ 10759 @LENGTH@ 25
------UPD SimpleName@@MethodName:assertEquals:[c.size(), 2] @TO@ MethodName:assertEquals:[2, c.size()] @AT@ 10759 @LENGTH@ 25
---------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:[c.size(), 2] @AT@ 10772 @LENGTH@ 1
---------DEL NumberLiteral@@2 @AT@ 10782 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(CollectionUtils.find(collectionA,null),null) @TO@ MethodInvocation:assertNull(CollectionUtils.find(collectionA,null)) @AT@ 18534 @LENGTH@ 60
---UPD MethodInvocation@@assertEquals(CollectionUtils.find(collectionA,null),null) @TO@ assertNull(CollectionUtils.find(collectionA,null)) @AT@ 18534 @LENGTH@ 59
------UPD SimpleName@@MethodName:assertEquals:[CollectionUtils.find(collectionA,null), null] @TO@ MethodName:assertNull:[CollectionUtils.find(collectionA,null)] @AT@ 18534 @LENGTH@ 59
---------DEL NullLiteral@@null @AT@ 18588 @LENGTH@ 4


UPD MethodDeclaration@@public, SOAPBodyElement, MethodName:getFirstBodyElement, SOAPBody body,  @TO@ public, SOAPElement, MethodName:getFirstBodyElement, SOAPBody body,  @AT@ 6918 @LENGTH@ 335
---UPD SimpleType@@SOAPBodyElement @TO@ SOAPElement @AT@ 6925 @LENGTH@ 15
---UPD ForStatement@@for (Iterator iterator=body.getChildElements(); iterator.hasNext(); ) {  Object child=iterator.next();  if (child instanceof SOAPBodyElement) {    return (SOAPBodyElement)child;  }} @TO@ for (Iterator iterator=body.getChildElements(); iterator.hasNext(); ) {  Object child=iterator.next();  if (child instanceof SOAPElement) {    return (SOAPElement)child;  }} @AT@ 6986 @LENGTH@ 240
------UPD IfStatement@@if (child instanceof SOAPBodyElement) {  return (SOAPBodyElement)child;} @TO@ if (child instanceof SOAPElement) {  return (SOAPElement)child;} @AT@ 7115 @LENGTH@ 101
---------UPD InstanceofExpression@@child instanceof SOAPBodyElement @TO@ child instanceof SOAPElement @AT@ 7119 @LENGTH@ 32
------------UPD SimpleType@@SOAPBodyElement @TO@ SOAPElement @AT@ 7136 @LENGTH@ 15
---------UPD Block@@ThenBody:{  return (SOAPBodyElement)child;} @TO@ ThenBody:{  return (SOAPElement)child;} @AT@ 7153 @LENGTH@ 63
------------UPD ReturnStatement@@CastExpression:(SOAPBodyElement)child @TO@ CastExpression:(SOAPElement)child @AT@ 7171 @LENGTH@ 31
---------------UPD CastExpression@@(SOAPBodyElement)child @TO@ (SOAPElement)child @AT@ 7178 @LENGTH@ 23
------------------UPD SimpleType@@SOAPBodyElement @TO@ SOAPElement @AT@ 7179 @LENGTH@ 15


UPD MethodDeclaration@@public, Processor<E>, MethodName:createProcessor,  @TO@ public, void, MethodName:createProcessors,  @AT@ 1157 @LENGTH@ 38
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, Processor<E>, MethodName:createProcessor,  @AT@ 971 @LENGTH@ 4
---DEL ParameterizedType@@Processor<E> @AT@ 1164 @LENGTH@ 12
------DEL SimpleType@@Processor @AT@ 1164 @LENGTH@ 9
------DEL SimpleType@@E @AT@ 1174 @LENGTH@ 1
---UPD SimpleName@@MethodName:createProcessor @TO@ MethodName:createProcessors @AT@ 1177 @LENGTH@ 15


INS MethodDeclaration@@public, static, String, MethodName:className, Object value,  @TO@ TypeDeclaration@@[public]ObjectHelper,  @AT@ 5442 @LENGTH@ 114
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:className, Object value,  @AT@ 5442 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:className, Object value,  @AT@ 5449 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:className, Object value,  @AT@ 5456 @LENGTH@ 6
---INS SimpleName@@MethodName:className @TO@ MethodDeclaration@@public, static, String, MethodName:className, Object value,  @AT@ 5463 @LENGTH@ 9
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, static, String, MethodName:className, Object value,  @AT@ 5473 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 5473 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 5480 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:name(value != null ? value.getClass() : null) @TO@ MethodDeclaration@@public, static, String, MethodName:className, Object value,  @AT@ 5497 @LENGTH@ 53
------INS MethodInvocation@@name(value != null ? value.getClass() : null) @TO@ ReturnStatement@@MethodInvocation:name(value != null ? value.getClass() : null) @AT@ 5504 @LENGTH@ 45
---------INS SimpleName@@MethodName:name:[value != null ? value.getClass() : null] @TO@ MethodInvocation@@name(value != null ? value.getClass() : null) @AT@ 5504 @LENGTH@ 45
------------INS ConditionalExpression@@value != null ? value.getClass() : null @TO@ SimpleName@@MethodName:name:[value != null ? value.getClass() : null] @AT@ 5509 @LENGTH@ 39
---------------INS InfixExpression@@value != null @TO@ ConditionalExpression@@value != null ? value.getClass() : null @AT@ 5509 @LENGTH@ 13
------------------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 5509 @LENGTH@ 5
------------------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 5514 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 5518 @LENGTH@ 4
---------------INS MethodInvocation@@value.getClass() @TO@ ConditionalExpression@@value != null ? value.getClass() : null @AT@ 5525 @LENGTH@ 16
------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.getClass() @AT@ 5525 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@value.getClass() @AT@ 5531 @LENGTH@ 10
---------------INS NullLiteral@@null @TO@ ConditionalExpression@@value != null ? value.getClass() : null @AT@ 5544 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:adapter.setAttributeValue("description",person.getDescription()) @TO@ MethodInvocation:adapter.setAttributeValues("description",person.getDescription()) @AT@ 2459 @LENGTH@ 66
---UPD MethodInvocation@@adapter.setAttributeValue("description",person.getDescription()) @TO@ adapter.setAttributeValues("description",person.getDescription()) @AT@ 2459 @LENGTH@ 65
------UPD SimpleName@@MethodName:setAttributeValue:["description", person.getDescription()] @TO@ MethodName:setAttributeValues:["description", person.getDescription()] @AT@ 2467 @LENGTH@ 57


INS MethodDeclaration@@public, ContextSource, MethodName:getTarget,  @TO@ TypeDeclaration@@[public]TransactionAwareContextSourceProxy, [ContextSource] @AT@ 1885 @LENGTH@ 65
---INS Modifier@@public @TO@ MethodDeclaration@@public, ContextSource, MethodName:getTarget,  @AT@ 1885 @LENGTH@ 6
---INS SimpleType@@ContextSource @TO@ MethodDeclaration@@public, ContextSource, MethodName:getTarget,  @AT@ 1892 @LENGTH@ 13
---INS SimpleName@@MethodName:getTarget @TO@ MethodDeclaration@@public, ContextSource, MethodName:getTarget,  @AT@ 1906 @LENGTH@ 9
---INS ReturnStatement@@SimpleName:target @TO@ MethodDeclaration@@public, ContextSource, MethodName:getTarget,  @AT@ 1929 @LENGTH@ 14
------INS SimpleName@@target @TO@ ReturnStatement@@SimpleName:target @AT@ 1936 @LENGTH@ 6


INS VariableDeclarationStatement@@RuntimeException ex=null; @TO@ MethodDeclaration@@public, void, MethodName:search, SearchExecutor se, NameClassPairCallbackHandler handler, DirContextProcessor processor,  @AT@ 11215 @LENGTH@ 27
---INS SimpleType@@RuntimeException @TO@ VariableDeclarationStatement@@RuntimeException ex=null; @AT@ 11215 @LENGTH@ 16
---INS VariableDeclarationFragment@@ex=null @TO@ VariableDeclarationStatement@@RuntimeException ex=null; @AT@ 11232 @LENGTH@ 9
------INS SimpleName@@ex @TO@ VariableDeclarationFragment@@ex=null @AT@ 11232 @LENGTH@ 2
------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@ex=null @AT@ 11237 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:connection.send(request) @TO@ MethodInvocation:connection.send(messageContext.getResponse()) @AT@ 3778 @LENGTH@ 25
---UPD MethodInvocation@@connection.send(request) @TO@ connection.send(messageContext.getResponse()) @AT@ 3778 @LENGTH@ 24
------UPD SimpleName@@MethodName:send:[request] @TO@ MethodName:send:[messageContext.getResponse()] @AT@ 3789 @LENGTH@ 13
---------INS MethodInvocation@@messageContext.getResponse() @TO@ SimpleName@@MethodName:send:[request] @AT@ 3794 @LENGTH@ 28
------------INS SimpleName@@Name:messageContext @TO@ MethodInvocation@@messageContext.getResponse() @AT@ 3794 @LENGTH@ 14
------------INS SimpleName@@MethodName:getResponse:[] @TO@ MethodInvocation@@messageContext.getResponse() @AT@ 3809 @LENGTH@ 13
---------DEL SimpleName@@request @AT@ 3794 @LENGTH@ 7


UPD VariableDeclarationStatement@@final InterceptorProcessor<PojoExchange> tracingInterceptor=new InterceptorProcessor<PojoExchange>(){
  @Override public void process(  PojoExchange exchange){
    super.process(exchange);
    hitCount.incrementAndGet();
  }
}
; @TO@ final DelegateProcess<PojoExchange> tracingInterceptor=new DelegateProcess<PojoExchange>(){
  @Override public void process(  PojoExchange exchange){
    super.process(exchange);
    hitCount.incrementAndGet();
  }
}
; @AT@ 1582 @LENGTH@ 272
---UPD ParameterizedType@@InterceptorProcessor<PojoExchange> @TO@ DelegateProcess<PojoExchange> @AT@ 1588 @LENGTH@ 34
------UPD SimpleType@@InterceptorProcessor @TO@ DelegateProcess @AT@ 1588 @LENGTH@ 20
---UPD VariableDeclarationFragment@@tracingInterceptor=new InterceptorProcessor<PojoExchange>(){
  @Override public void process(  PojoExchange exchange){
    super.process(exchange);
    hitCount.incrementAndGet();
  }
}
 @TO@ tracingInterceptor=new DelegateProcess<PojoExchange>(){
  @Override public void process(  PojoExchange exchange){
    super.process(exchange);
    hitCount.incrementAndGet();
  }
}
 @AT@ 1623 @LENGTH@ 230
------UPD ClassInstanceCreation@@InterceptorProcessor<PojoExchange>[] @TO@ DelegateProcess<PojoExchange>[] @AT@ 1644 @LENGTH@ 209
---------UPD ParameterizedType@@InterceptorProcessor<PojoExchange> @TO@ DelegateProcess<PojoExchange> @AT@ 1648 @LENGTH@ 34
------------UPD SimpleType@@InterceptorProcessor @TO@ DelegateProcess @AT@ 1648 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:testPreProcess_NullControls, NamingException,  @TO@ TypeDeclaration@@[public]AbstractRequestControlDirContextProcessorTest, TestCase @AT@ 4382 @LENGTH@ 451
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testPreProcess_NullControls, NamingException,  @AT@ 4382 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testPreProcess_NullControls, NamingException,  @AT@ 4389 @LENGTH@ 4
---INS SimpleName@@MethodName:testPreProcess_NullControls @TO@ MethodDeclaration@@public, void, MethodName:testPreProcess_NullControls, NamingException,  @AT@ 4394 @LENGTH@ 27
---INS SimpleType@@NamingException @TO@ MethodDeclaration@@public, void, MethodName:testPreProcess_NullControls, NamingException,  @AT@ 4431 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:ldapContextControl.setDefaultMatcher(MockControl.ARRAY_MATCHER) @TO@ MethodDeclaration@@public, void, MethodName:testPreProcess_NullControls, NamingException,  @AT@ 4458 @LENGTH@ 64
------INS MethodInvocation@@ldapContextControl.setDefaultMatcher(MockControl.ARRAY_MATCHER) @TO@ ExpressionStatement@@MethodInvocation:ldapContextControl.setDefaultMatcher(MockControl.ARRAY_MATCHER) @AT@ 4458 @LENGTH@ 63
---------INS SimpleName@@Name:ldapContextControl @TO@ MethodInvocation@@ldapContextControl.setDefaultMatcher(MockControl.ARRAY_MATCHER) @AT@ 4458 @LENGTH@ 18
---------INS SimpleName@@MethodName:setDefaultMatcher:[MockControl.ARRAY_MATCHER] @TO@ MethodInvocation@@ldapContextControl.setDefaultMatcher(MockControl.ARRAY_MATCHER) @AT@ 4477 @LENGTH@ 44
------------INS QualifiedName@@MockControl.ARRAY_MATCHER @TO@ SimpleName@@MethodName:setDefaultMatcher:[MockControl.ARRAY_MATCHER] @AT@ 4495 @LENGTH@ 25
---------------INS SimpleName@@MockControl @TO@ QualifiedName@@MockControl.ARRAY_MATCHER @AT@ 4495 @LENGTH@ 11
---------------INS SimpleName@@ARRAY_MATCHER @TO@ QualifiedName@@MockControl.ARRAY_MATCHER @AT@ 4507 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:ldapContextControl.expectAndDefaultReturn(ldapContextMock.getRequestControls(),null) @TO@ MethodDeclaration@@public, void, MethodName:testPreProcess_NullControls, NamingException,  @AT@ 4532 @LENGTH@ 104
------INS MethodInvocation@@ldapContextControl.expectAndDefaultReturn(ldapContextMock.getRequestControls(),null) @TO@ ExpressionStatement@@MethodInvocation:ldapContextControl.expectAndDefaultReturn(ldapContextMock.getRequestControls(),null) @AT@ 4532 @LENGTH@ 103
---------INS SimpleName@@Name:ldapContextControl @TO@ MethodInvocation@@ldapContextControl.expectAndDefaultReturn(ldapContextMock.getRequestControls(),null) @AT@ 4532 @LENGTH@ 18
---------INS SimpleName@@MethodName:expectAndDefaultReturn:[ldapContextMock.getRequestControls(), null] @TO@ MethodInvocation@@ldapContextControl.expectAndDefaultReturn(ldapContextMock.getRequestControls(),null) @AT@ 4551 @LENGTH@ 84
------------INS MethodInvocation@@ldapContextMock.getRequestControls() @TO@ SimpleName@@MethodName:expectAndDefaultReturn:[ldapContextMock.getRequestControls(), null] @AT@ 4574 @LENGTH@ 54
---------------INS SimpleName@@Name:ldapContextMock @TO@ MethodInvocation@@ldapContextMock.getRequestControls() @AT@ 4574 @LENGTH@ 15
---------------INS SimpleName@@MethodName:getRequestControls:[] @TO@ MethodInvocation@@ldapContextMock.getRequestControls() @AT@ 4608 @LENGTH@ 20
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:expectAndDefaultReturn:[ldapContextMock.getRequestControls(), null] @AT@ 4630 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:ldapContextMock.setRequestControls(new Control[]{requestControlMock}) @TO@ MethodDeclaration@@public, void, MethodName:testPreProcess_NullControls, NamingException,  @AT@ 4646 @LENGTH@ 91
------INS MethodInvocation@@ldapContextMock.setRequestControls(new Control[]{requestControlMock}) @TO@ ExpressionStatement@@MethodInvocation:ldapContextMock.setRequestControls(new Control[]{requestControlMock}) @AT@ 4646 @LENGTH@ 90
---------INS SimpleName@@Name:ldapContextMock @TO@ MethodInvocation@@ldapContextMock.setRequestControls(new Control[]{requestControlMock}) @AT@ 4646 @LENGTH@ 15
---------INS SimpleName@@MethodName:setRequestControls:[new Control[]{requestControlMock}] @TO@ MethodInvocation@@ldapContextMock.setRequestControls(new Control[]{requestControlMock}) @AT@ 4680 @LENGTH@ 56
------------INS ArrayCreation@@new Control[]{requestControlMock} @TO@ SimpleName@@MethodName:setRequestControls:[new Control[]{requestControlMock}] @AT@ 4699 @LENGTH@ 36
---------------INS ArrayType@@Control[] @TO@ ArrayCreation@@new Control[]{requestControlMock} @AT@ 4703 @LENGTH@ 9
------------------INS SimpleType@@Control @TO@ ArrayType@@Control[] @AT@ 4703 @LENGTH@ 7
---------------INS ArrayInitializer@@{requestControlMock} @TO@ ArrayCreation@@new Control[]{requestControlMock} @AT@ 4713 @LENGTH@ 22
------------------INS SimpleName@@requestControlMock @TO@ ArrayInitializer@@{requestControlMock} @AT@ 4715 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:replay() @TO@ MethodDeclaration@@public, void, MethodName:testPreProcess_NullControls, NamingException,  @AT@ 4749 @LENGTH@ 9
------INS MethodInvocation@@MethodName:replay:[] @TO@ ExpressionStatement@@MethodInvocation:replay() @AT@ 4749 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:tested.preProcess(ldapContextMock) @TO@ MethodDeclaration@@public, void, MethodName:testPreProcess_NullControls, NamingException,  @AT@ 4770 @LENGTH@ 35
------INS MethodInvocation@@tested.preProcess(ldapContextMock) @TO@ ExpressionStatement@@MethodInvocation:tested.preProcess(ldapContextMock) @AT@ 4770 @LENGTH@ 34
---------INS SimpleName@@Name:tested @TO@ MethodInvocation@@tested.preProcess(ldapContextMock) @AT@ 4770 @LENGTH@ 6
---------INS SimpleName@@MethodName:preProcess:[ldapContextMock] @TO@ MethodInvocation@@tested.preProcess(ldapContextMock) @AT@ 4777 @LENGTH@ 27
------------INS SimpleName@@ldapContextMock @TO@ SimpleName@@MethodName:preProcess:[ldapContextMock] @AT@ 4788 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:verify() @TO@ MethodDeclaration@@public, void, MethodName:testPreProcess_NullControls, NamingException,  @AT@ 4817 @LENGTH@ 9
------INS MethodInvocation@@MethodName:verify:[] @TO@ ExpressionStatement@@MethodInvocation:verify() @AT@ 4817 @LENGTH@ 8


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=-4308820955185446535L] @TO@ TypeDeclaration@@[public]ContextSourceTransactionManager, AbstractPlatformTransactionManager @AT@ 2571 @LENGTH@ 67
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-4308820955185446535L] @AT@ 2571 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-4308820955185446535L] @AT@ 2579 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-4308820955185446535L] @AT@ 2586 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-4308820955185446535L] @AT@ 2592 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=-4308820955185446535L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-4308820955185446535L] @AT@ 2597 @LENGTH@ 40
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=-4308820955185446535L @AT@ 2597 @LENGTH@ 16
------INS PrefixExpression@@-4308820955185446535L @TO@ VariableDeclarationFragment@@serialVersionUID=-4308820955185446535L @AT@ 2616 @LENGTH@ 21
---------INS Operator@@- @TO@ PrefixExpression@@-4308820955185446535L @AT@ 2616 @LENGTH@ 1
---------INS NumberLiteral@@4308820955185446535L @TO@ PrefixExpression@@-4308820955185446535L @AT@ 2617 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:testSetContextSource_Proxy,  @TO@ TypeDeclaration@@[public]ContextSourceTransactionManagerTest, TestCase @AT@ 5928 @LENGTH@ 381
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSetContextSource_Proxy,  @AT@ 5928 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSetContextSource_Proxy,  @AT@ 5935 @LENGTH@ 4
---INS SimpleName@@MethodName:testSetContextSource_Proxy @TO@ MethodDeclaration@@public, void, MethodName:testSetContextSource_Proxy,  @AT@ 5940 @LENGTH@ 26
---INS VariableDeclarationStatement@@TransactionAwareContextSourceProxy proxy=new TransactionAwareContextSourceProxy(contextSourceMock); @TO@ MethodDeclaration@@public, void, MethodName:testSetContextSource_Proxy,  @AT@ 5980 @LENGTH@ 119
------INS SimpleType@@TransactionAwareContextSourceProxy @TO@ VariableDeclarationStatement@@TransactionAwareContextSourceProxy proxy=new TransactionAwareContextSourceProxy(contextSourceMock); @AT@ 5980 @LENGTH@ 34
------INS VariableDeclarationFragment@@proxy=new TransactionAwareContextSourceProxy(contextSourceMock) @TO@ VariableDeclarationStatement@@TransactionAwareContextSourceProxy proxy=new TransactionAwareContextSourceProxy(contextSourceMock); @AT@ 6015 @LENGTH@ 83
---------INS SimpleName@@proxy @TO@ VariableDeclarationFragment@@proxy=new TransactionAwareContextSourceProxy(contextSourceMock) @AT@ 6015 @LENGTH@ 5
---------INS ClassInstanceCreation@@TransactionAwareContextSourceProxy[contextSourceMock] @TO@ VariableDeclarationFragment@@proxy=new TransactionAwareContextSourceProxy(contextSourceMock) @AT@ 6023 @LENGTH@ 75
------------INS New@@new @TO@ ClassInstanceCreation@@TransactionAwareContextSourceProxy[contextSourceMock] @AT@ 6023 @LENGTH@ 3
------------INS SimpleType@@TransactionAwareContextSourceProxy @TO@ ClassInstanceCreation@@TransactionAwareContextSourceProxy[contextSourceMock] @AT@ 6027 @LENGTH@ 34
------------INS SimpleName@@contextSourceMock @TO@ ClassInstanceCreation@@TransactionAwareContextSourceProxy[contextSourceMock] @AT@ 6080 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:tested.setContextSource(proxy) @TO@ MethodDeclaration@@public, void, MethodName:testSetContextSource_Proxy,  @AT@ 6136 @LENGTH@ 31
------INS MethodInvocation@@tested.setContextSource(proxy) @TO@ ExpressionStatement@@MethodInvocation:tested.setContextSource(proxy) @AT@ 6136 @LENGTH@ 30
---------INS SimpleName@@Name:tested @TO@ MethodInvocation@@tested.setContextSource(proxy) @AT@ 6136 @LENGTH@ 6
---------INS SimpleName@@MethodName:setContextSource:[proxy] @TO@ MethodInvocation@@tested.setContextSource(proxy) @AT@ 6143 @LENGTH@ 23
------------INS SimpleName@@proxy @TO@ SimpleName@@MethodName:setContextSource:[proxy] @AT@ 6160 @LENGTH@ 5
---INS VariableDeclarationStatement@@ContextSource result=tested.getContextSource(); @TO@ MethodDeclaration@@public, void, MethodName:testSetContextSource_Proxy,  @AT@ 6177 @LENGTH@ 49
------INS SimpleType@@ContextSource @TO@ VariableDeclarationStatement@@ContextSource result=tested.getContextSource(); @AT@ 6177 @LENGTH@ 13
------INS VariableDeclarationFragment@@result=tested.getContextSource() @TO@ VariableDeclarationStatement@@ContextSource result=tested.getContextSource(); @AT@ 6191 @LENGTH@ 34
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=tested.getContextSource() @AT@ 6191 @LENGTH@ 6
---------INS MethodInvocation@@tested.getContextSource() @TO@ VariableDeclarationFragment@@result=tested.getContextSource() @AT@ 6200 @LENGTH@ 25
------------INS SimpleName@@Name:tested @TO@ MethodInvocation@@tested.getContextSource() @AT@ 6200 @LENGTH@ 6
------------INS SimpleName@@MethodName:getContextSource:[] @TO@ MethodInvocation@@tested.getContextSource() @AT@ 6207 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertSame(contextSourceMock,result) @TO@ MethodDeclaration@@public, void, MethodName:testSetContextSource_Proxy,  @AT@ 6264 @LENGTH@ 38
------INS MethodInvocation@@assertSame(contextSourceMock,result) @TO@ ExpressionStatement@@MethodInvocation:assertSame(contextSourceMock,result) @AT@ 6264 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertSame:[contextSourceMock, result] @TO@ MethodInvocation@@assertSame(contextSourceMock,result) @AT@ 6264 @LENGTH@ 37
------------INS SimpleName@@contextSourceMock @TO@ SimpleName@@MethodName:assertSame:[contextSourceMock, result] @AT@ 6275 @LENGTH@ 17
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertSame:[contextSourceMock, result] @AT@ 6294 @LENGTH@ 6


UPD VariableDeclarationStatement@@SimpleDateFormat calendarFormatter2=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'.'sss'Z'"); @TO@ SimpleDateFormat calendarFormatter2=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'.'SSS'Z'"); @AT@ 3563 @LENGTH@ 93
---UPD VariableDeclarationFragment@@calendarFormatter2=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'.'sss'Z'") @TO@ calendarFormatter2=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'.'SSS'Z'") @AT@ 3580 @LENGTH@ 75
------UPD ClassInstanceCreation@@SimpleDateFormat["yyyy-MM-dd'T'HH:mm:ss'.'sss'Z'"] @TO@ SimpleDateFormat["yyyy-MM-dd'T'HH:mm:ss'.'SSS'Z'"] @AT@ 3601 @LENGTH@ 54
---------UPD StringLiteral@@"yyyy-MM-dd'T'HH:mm:ss'.'sss'Z'" @TO@ "yyyy-MM-dd'T'HH:mm:ss'.'SSS'Z'" @AT@ 3622 @LENGTH@ 32


INS MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @TO@ TypeDeclaration@@[public]TestXMLPropertyListConfiguration, TestCase @AT@ 10777 @LENGTH@ 644
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10777 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10784 @LENGTH@ 4
---INS SimpleName@@MethodName:testAddDataProperty @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10789 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10818 @LENGTH@ 9
---INS VariableDeclarationStatement@@byte[] expected=new byte[]{1,2,3,4}; @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10844 @LENGTH@ 41
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] expected=new byte[]{1,2,3,4}; @AT@ 10844 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 10844 @LENGTH@ 4
------INS VariableDeclarationFragment@@expected=new byte[]{1,2,3,4} @TO@ VariableDeclarationStatement@@byte[] expected=new byte[]{1,2,3,4}; @AT@ 10851 @LENGTH@ 33
---------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected=new byte[]{1,2,3,4} @AT@ 10851 @LENGTH@ 8
---------INS ArrayCreation@@new byte[]{1,2,3,4} @TO@ VariableDeclarationFragment@@expected=new byte[]{1,2,3,4} @AT@ 10862 @LENGTH@ 22
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[]{1,2,3,4} @AT@ 10866 @LENGTH@ 6
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 10866 @LENGTH@ 4
------------INS ArrayInitializer@@{1,2,3,4} @TO@ ArrayCreation@@new byte[]{1,2,3,4} @AT@ 10872 @LENGTH@ 12
---------------INS NumberLiteral@@1 @TO@ ArrayInitializer@@{1,2,3,4} @AT@ 10873 @LENGTH@ 1
---------------INS NumberLiteral@@2 @TO@ ArrayInitializer@@{1,2,3,4} @AT@ 10876 @LENGTH@ 1
---------------INS NumberLiteral@@3 @TO@ ArrayInitializer@@{1,2,3,4} @AT@ 10879 @LENGTH@ 1
---------------INS NumberLiteral@@4 @TO@ ArrayInitializer@@{1,2,3,4} @AT@ 10882 @LENGTH@ 1
---INS VariableDeclarationStatement@@XMLPropertyListConfiguration config=new XMLPropertyListConfiguration(); @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10895 @LENGTH@ 73
------INS SimpleType@@XMLPropertyListConfiguration @TO@ VariableDeclarationStatement@@XMLPropertyListConfiguration config=new XMLPropertyListConfiguration(); @AT@ 10895 @LENGTH@ 28
------INS VariableDeclarationFragment@@config=new XMLPropertyListConfiguration() @TO@ VariableDeclarationStatement@@XMLPropertyListConfiguration config=new XMLPropertyListConfiguration(); @AT@ 10924 @LENGTH@ 43
---------INS SimpleName@@config @TO@ VariableDeclarationFragment@@config=new XMLPropertyListConfiguration() @AT@ 10924 @LENGTH@ 6
---------INS ClassInstanceCreation@@XMLPropertyListConfiguration[] @TO@ VariableDeclarationFragment@@config=new XMLPropertyListConfiguration() @AT@ 10933 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@XMLPropertyListConfiguration[] @AT@ 10933 @LENGTH@ 3
------------INS SimpleType@@XMLPropertyListConfiguration @TO@ ClassInstanceCreation@@XMLPropertyListConfiguration[] @AT@ 10937 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:config.addProperty("foo",expected) @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 10978 @LENGTH@ 36
------INS MethodInvocation@@config.addProperty("foo",expected) @TO@ ExpressionStatement@@MethodInvocation:config.addProperty("foo",expected) @AT@ 10978 @LENGTH@ 35
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.addProperty("foo",expected) @AT@ 10978 @LENGTH@ 6
---------INS SimpleName@@MethodName:addProperty:["foo", expected] @TO@ MethodInvocation@@config.addProperty("foo",expected) @AT@ 10985 @LENGTH@ 28
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:addProperty:["foo", expected] @AT@ 10997 @LENGTH@ 5
------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:addProperty:["foo", expected] @AT@ 11004 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:config.save("target/testdata.plist.xml") @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 11024 @LENGTH@ 41
------INS MethodInvocation@@config.save("target/testdata.plist.xml") @TO@ ExpressionStatement@@MethodInvocation:config.save("target/testdata.plist.xml") @AT@ 11024 @LENGTH@ 40
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.save("target/testdata.plist.xml") @AT@ 11024 @LENGTH@ 6
---------INS SimpleName@@MethodName:save:["target/testdata.plist.xml"] @TO@ MethodInvocation@@config.save("target/testdata.plist.xml") @AT@ 11031 @LENGTH@ 33
------------INS StringLiteral@@"target/testdata.plist.xml" @TO@ SimpleName@@MethodName:save:["target/testdata.plist.xml"] @AT@ 11036 @LENGTH@ 27
---INS VariableDeclarationStatement@@XMLPropertyListConfiguration config2=new XMLPropertyListConfiguration("target/testdata.plist.xml"); @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 11077 @LENGTH@ 101
------INS SimpleType@@XMLPropertyListConfiguration @TO@ VariableDeclarationStatement@@XMLPropertyListConfiguration config2=new XMLPropertyListConfiguration("target/testdata.plist.xml"); @AT@ 11077 @LENGTH@ 28
------INS VariableDeclarationFragment@@config2=new XMLPropertyListConfiguration("target/testdata.plist.xml") @TO@ VariableDeclarationStatement@@XMLPropertyListConfiguration config2=new XMLPropertyListConfiguration("target/testdata.plist.xml"); @AT@ 11106 @LENGTH@ 71
---------INS SimpleName@@config2 @TO@ VariableDeclarationFragment@@config2=new XMLPropertyListConfiguration("target/testdata.plist.xml") @AT@ 11106 @LENGTH@ 7
---------INS ClassInstanceCreation@@XMLPropertyListConfiguration["target/testdata.plist.xml"] @TO@ VariableDeclarationFragment@@config2=new XMLPropertyListConfiguration("target/testdata.plist.xml") @AT@ 11116 @LENGTH@ 61
------------INS New@@new @TO@ ClassInstanceCreation@@XMLPropertyListConfiguration["target/testdata.plist.xml"] @AT@ 11116 @LENGTH@ 3
------------INS SimpleType@@XMLPropertyListConfiguration @TO@ ClassInstanceCreation@@XMLPropertyListConfiguration["target/testdata.plist.xml"] @AT@ 11120 @LENGTH@ 28
------------INS StringLiteral@@"target/testdata.plist.xml" @TO@ ClassInstanceCreation@@XMLPropertyListConfiguration["target/testdata.plist.xml"] @AT@ 11149 @LENGTH@ 27
---INS VariableDeclarationStatement@@Object array=config2.getProperty("foo"); @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 11188 @LENGTH@ 42
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object array=config2.getProperty("foo"); @AT@ 11188 @LENGTH@ 6
------INS VariableDeclarationFragment@@array=config2.getProperty("foo") @TO@ VariableDeclarationStatement@@Object array=config2.getProperty("foo"); @AT@ 11195 @LENGTH@ 34
---------INS SimpleName@@array @TO@ VariableDeclarationFragment@@array=config2.getProperty("foo") @AT@ 11195 @LENGTH@ 5
---------INS MethodInvocation@@config2.getProperty("foo") @TO@ VariableDeclarationFragment@@array=config2.getProperty("foo") @AT@ 11203 @LENGTH@ 26
------------INS SimpleName@@Name:config2 @TO@ MethodInvocation@@config2.getProperty("foo") @AT@ 11203 @LENGTH@ 7
------------INS SimpleName@@MethodName:getProperty:["foo"] @TO@ MethodInvocation@@config2.getProperty("foo") @AT@ 11211 @LENGTH@ 18
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:getProperty:["foo"] @AT@ 11223 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertNotNull("data not found",array) @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 11242 @LENGTH@ 39
------INS MethodInvocation@@assertNotNull("data not found",array) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull("data not found",array) @AT@ 11242 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertNotNull:["data not found", array] @TO@ MethodInvocation@@assertNotNull("data not found",array) @AT@ 11242 @LENGTH@ 38
------------INS StringLiteral@@"data not found" @TO@ SimpleName@@MethodName:assertNotNull:["data not found", array] @AT@ 11256 @LENGTH@ 16
------------INS SimpleName@@array @TO@ SimpleName@@MethodName:assertNotNull:["data not found", array] @AT@ 11274 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals("property type",byte[].class,array.getClass()) @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 11291 @LENGTH@ 62
------INS MethodInvocation@@assertEquals("property type",byte[].class,array.getClass()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("property type",byte[].class,array.getClass()) @AT@ 11291 @LENGTH@ 61
---------INS SimpleName@@MethodName:assertEquals:["property type", byte[].class, array.getClass()] @TO@ MethodInvocation@@assertEquals("property type",byte[].class,array.getClass()) @AT@ 11291 @LENGTH@ 61
------------INS StringLiteral@@"property type" @TO@ SimpleName@@MethodName:assertEquals:["property type", byte[].class, array.getClass()] @AT@ 11304 @LENGTH@ 15
------------INS TypeLiteral@@byte[].class @TO@ SimpleName@@MethodName:assertEquals:["property type", byte[].class, array.getClass()] @AT@ 11321 @LENGTH@ 12
------------INS MethodInvocation@@array.getClass() @TO@ SimpleName@@MethodName:assertEquals:["property type", byte[].class, array.getClass()] @AT@ 11335 @LENGTH@ 16
---------------INS SimpleName@@Name:array @TO@ MethodInvocation@@array.getClass() @AT@ 11335 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@array.getClass() @AT@ 11341 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:ArrayAssert.assertEquals(expected,(byte[])array) @TO@ MethodDeclaration@@public, void, MethodName:testAddDataProperty, Exception,  @AT@ 11363 @LENGTH@ 51
------INS MethodInvocation@@ArrayAssert.assertEquals(expected,(byte[])array) @TO@ ExpressionStatement@@MethodInvocation:ArrayAssert.assertEquals(expected,(byte[])array) @AT@ 11363 @LENGTH@ 50
---------INS SimpleName@@Name:ArrayAssert @TO@ MethodInvocation@@ArrayAssert.assertEquals(expected,(byte[])array) @AT@ 11363 @LENGTH@ 11
---------INS SimpleName@@MethodName:assertEquals:[expected, (byte[])array] @TO@ MethodInvocation@@ArrayAssert.assertEquals(expected,(byte[])array) @AT@ 11375 @LENGTH@ 38
------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:assertEquals:[expected, (byte[])array] @AT@ 11388 @LENGTH@ 8
------------INS CastExpression@@(byte[])array @TO@ SimpleName@@MethodName:assertEquals:[expected, (byte[])array] @AT@ 11398 @LENGTH@ 14
---------------INS ArrayType@@byte[] @TO@ CastExpression@@(byte[])array @AT@ 11399 @LENGTH@ 6
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 11399 @LENGTH@ 4
---------------INS SimpleName@@array @TO@ CastExpression@@(byte[])array @AT@ 11407 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:conf.setProperty("ip.unknownhost","123") @TO@ MethodInvocation:conf.setProperty("ip.unknownhost","foo") @AT@ 65693 @LENGTH@ 42
---UPD MethodInvocation@@conf.setProperty("ip.unknownhost","123") @TO@ conf.setProperty("ip.unknownhost","foo") @AT@ 65693 @LENGTH@ 41
------UPD SimpleName@@MethodName:setProperty:["ip.unknownhost", "123"] @TO@ MethodName:setProperty:["ip.unknownhost", "foo"] @AT@ 65698 @LENGTH@ 36
---------UPD StringLiteral@@"123" @TO@ "foo" @AT@ 65728 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testConvertToSource, Exception,  @TO@ TypeDeclaration@@[public]JaxpTest, TestCase @AT@ 1917 @LENGTH@ 264
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testConvertToSource, Exception,  @AT@ 1917 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testConvertToSource, Exception,  @AT@ 1924 @LENGTH@ 4
---INS SimpleName@@MethodName:testConvertToSource @TO@ MethodDeclaration@@public, void, MethodName:testConvertToSource, Exception,  @AT@ 1929 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testConvertToSource, Exception,  @AT@ 1958 @LENGTH@ 9
---INS VariableDeclarationStatement@@Source source=converter.convertTo(Source.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>"); @TO@ MethodDeclaration@@public, void, MethodName:testConvertToSource, Exception,  @AT@ 1978 @LENGTH@ 117
------INS SimpleType@@Source @TO@ VariableDeclarationStatement@@Source source=converter.convertTo(Source.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>"); @AT@ 1978 @LENGTH@ 6
------INS VariableDeclarationFragment@@source=converter.convertTo(Source.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>") @TO@ VariableDeclarationStatement@@Source source=converter.convertTo(Source.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>"); @AT@ 1985 @LENGTH@ 109
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=converter.convertTo(Source.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>") @AT@ 1985 @LENGTH@ 6
---------INS MethodInvocation@@converter.convertTo(Source.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>") @TO@ VariableDeclarationFragment@@source=converter.convertTo(Source.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>") @AT@ 1994 @LENGTH@ 100
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.convertTo(Source.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>") @AT@ 1994 @LENGTH@ 9
------------INS SimpleName@@MethodName:convertTo:[Source.class, "<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>"] @TO@ MethodInvocation@@converter.convertTo(Source.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>") @AT@ 2004 @LENGTH@ 90
---------------INS TypeLiteral@@Source.class @TO@ SimpleName@@MethodName:convertTo:[Source.class, "<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>"] @AT@ 2014 @LENGTH@ 12
---------------INS StringLiteral@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>" @TO@ SimpleName@@MethodName:convertTo:[Source.class, "<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>"] @AT@ 2028 @LENGTH@ 65
---INS ExpressionStatement@@MethodInvocation:assertNotNull(source) @TO@ MethodDeclaration@@public, void, MethodName:testConvertToSource, Exception,  @AT@ 2104 @LENGTH@ 22
------INS MethodInvocation@@assertNotNull(source) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(source) @AT@ 2104 @LENGTH@ 21
---------INS SimpleName@@MethodName:assertNotNull:[source] @TO@ MethodInvocation@@assertNotNull(source) @AT@ 2104 @LENGTH@ 21
------------INS SimpleName@@source @TO@ SimpleName@@MethodName:assertNotNull:[source] @AT@ 2118 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:log.debug("Found document: " + source) @TO@ MethodDeclaration@@public, void, MethodName:testConvertToSource, Exception,  @AT@ 2136 @LENGTH@ 39
------INS MethodInvocation@@log.debug("Found document: " + source) @TO@ ExpressionStatement@@MethodInvocation:log.debug("Found document: " + source) @AT@ 2136 @LENGTH@ 38
---------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug("Found document: " + source) @AT@ 2136 @LENGTH@ 3
---------INS SimpleName@@MethodName:debug:["Found document: " + source] @TO@ MethodInvocation@@log.debug("Found document: " + source) @AT@ 2140 @LENGTH@ 34
------------INS InfixExpression@@"Found document: " + source @TO@ SimpleName@@MethodName:debug:["Found document: " + source] @AT@ 2146 @LENGTH@ 27
---------------INS StringLiteral@@"Found document: " @TO@ InfixExpression@@"Found document: " + source @AT@ 2146 @LENGTH@ 18
---------------INS Operator@@+ @TO@ InfixExpression@@"Found document: " + source @AT@ 2164 @LENGTH@ 1
---------------INS SimpleName@@source @TO@ InfixExpression@@"Found document: " + source @AT@ 2167 @LENGTH@ 6


UPD VariableDeclarationStatement@@LdapCompensatingTransactionDataManager tested=new LdapCompensatingTransactionDataManager(null){
  protected CompensatingTransactionRecordingOperation getRecordingOperation(  String operation){
    assertEquals("bind",operation);
    return recordingOperationMock;
  }
}
; @TO@ AbstractCompensatingTransactionDataManager tested=new LdapCompensatingTransactionDataManager(null){
  protected CompensatingTransactionRecordingOperation getRecordingOperation(  String operation){
    assertEquals("bind",operation);
    return recordingOperationMock;
  }
}
; @AT@ 2424 @LENGTH@ 370
---UPD SimpleType@@LdapCompensatingTransactionDataManager @TO@ AbstractCompensatingTransactionDataManager @AT@ 2424 @LENGTH@ 38


UPD MethodDeclaration@@public, void, MethodName:setAttemptFileLock, boolean checkAppending,  @TO@ public, void, MethodName:setAttemptFileLock, boolean attemptFileLock,  @AT@ 4449 @LENGTH@ 106
---UPD SingleVariableDeclaration@@boolean checkAppending @TO@ boolean attemptFileLock @AT@ 4480 @LENGTH@ 22
------UPD SimpleName@@checkAppending @TO@ attemptFileLock @AT@ 4488 @LENGTH@ 14
---UPD ExpressionStatement@@Assignment:this.attemptFileLock=checkAppending @TO@ Assignment:this.attemptFileLock=attemptFileLock @AT@ 4513 @LENGTH@ 36
------UPD Assignment@@this.attemptFileLock=checkAppending @TO@ this.attemptFileLock=attemptFileLock @AT@ 4513 @LENGTH@ 35
---------UPD SimpleName@@checkAppending @TO@ attemptFileLock @AT@ 4534 @LENGTH@ 14


UPD TypeDeclaration@@[public]MyInterceptorProcessor, InterceptorProcessor<Exchange> @TO@ [public]MyInterceptorProcessor, DelegateProcess<Exchange> @AT@ 138 @LENGTH@ 259
---UPD ParameterizedType@@InterceptorProcessor<Exchange> @TO@ DelegateProcess<Exchange> @AT@ 182 @LENGTH@ 30
------UPD SimpleType@@InterceptorProcessor @TO@ DelegateProcess @AT@ 182 @LENGTH@ 20


DEL ExpressionStatement@@MethodInvocation:ldapOperations.rename(dn,temporaryName) @AT@ 2610 @LENGTH@ 41
---DEL MethodInvocation@@ldapOperations.rename(dn,temporaryName) @AT@ 2610 @LENGTH@ 40
------DEL SimpleName@@Name:ldapOperations @AT@ 2610 @LENGTH@ 14
------DEL SimpleName@@MethodName:rename:[dn, temporaryName] @AT@ 2625 @LENGTH@ 25
---------DEL SimpleName@@dn @AT@ 2632 @LENGTH@ 2
---------DEL SimpleName@@temporaryName @AT@ 2636 @LENGTH@ 13


UPD MethodDeclaration@@protected, abstract, Source, MethodName:getResponse, ContentHandler contentHandler,  @TO@ protected, abstract, Source, MethodName:getResponse, ContentHandler contentHandler, Exception,  @AT@ 2927 @LENGTH@ 69
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, abstract, Source, MethodName:getResponse, ContentHandler contentHandler,  @AT@ 3020 @LENGTH@ 9


UPD TryStatement@@try {  DeliveryChannel deliveryChannel=componentContext.getDeliveryChannel();  MessageExchangeFactory exchangeFactory=deliveryChannel.createExchangeFactory();  MessageExchange messageExchange=binding.makeJbiMessageExchange(exchange,exchangeFactory);  System.out.println("#### Configuring exchange with: " + destinationUri);  URIResolver.configureExchange(messageExchange,componentContext,destinationUri);  System.out.println("#### service: " + messageExchange.getService() + " endpoint: "+ messageExchange.getEndpoint());  deliveryChannel.sendSync(messageExchange);} catch (MessagingException e) {  throw new JbiException(e);} @TO@ try {  DeliveryChannel deliveryChannel=componentContext.getDeliveryChannel();  MessageExchangeFactory exchangeFactory=deliveryChannel.createExchangeFactory();  MessageExchange messageExchange=binding.makeJbiMessageExchange(exchange,exchangeFactory);  System.out.println("#### Configuring exchange with: " + destinationUri);  new Exception().printStackTrace(System.out);  URIResolver.configureExchange(messageExchange,componentContext,destinationUri);  System.out.println("#### service: " + messageExchange.getService() + " endpoint: "+ messageExchange.getEndpoint());  deliveryChannel.sendSync(messageExchange);} catch (MessagingException e) {  throw new JbiException(e);} @AT@ 1818 @LENGTH@ 764
---INS ExpressionStatement@@MethodInvocation:new Exception().printStackTrace(System.out) @TO@ TryStatement@@try {  DeliveryChannel deliveryChannel=componentContext.getDeliveryChannel();  MessageExchangeFactory exchangeFactory=deliveryChannel.createExchangeFactory();  MessageExchange messageExchange=binding.makeJbiMessageExchange(exchange,exchangeFactory);  System.out.println("#### Configuring exchange with: " + destinationUri);  URIResolver.configureExchange(messageExchange,componentContext,destinationUri);  System.out.println("#### service: " + messageExchange.getService() + " endpoint: "+ messageExchange.getEndpoint());  deliveryChannel.sendSync(messageExchange);} catch (MessagingException e) {  throw new JbiException(e);} @AT@ 2206 @LENGTH@ 44
------INS MethodInvocation@@new Exception().printStackTrace(System.out) @TO@ ExpressionStatement@@MethodInvocation:new Exception().printStackTrace(System.out) @AT@ 2206 @LENGTH@ 43
---------INS ClassInstanceCreation@@Exception[] @TO@ MethodInvocation@@new Exception().printStackTrace(System.out) @AT@ 2206 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@Exception[] @AT@ 2206 @LENGTH@ 3
------------INS SimpleType@@Exception @TO@ ClassInstanceCreation@@Exception[] @AT@ 2210 @LENGTH@ 9
---------INS SimpleName@@MethodName:printStackTrace:[System.out] @TO@ MethodInvocation@@new Exception().printStackTrace(System.out) @AT@ 2222 @LENGTH@ 27
------------INS QualifiedName@@System.out @TO@ SimpleName@@MethodName:printStackTrace:[System.out] @AT@ 2238 @LENGTH@ 10
---------------INS SimpleName@@System @TO@ QualifiedName@@System.out @AT@ 2238 @LENGTH@ 6
---------------INS SimpleName@@out @TO@ QualifiedName@@System.out @AT@ 2245 @LENGTH@ 3


INS MethodDeclaration@@public, Processor<E>, MethodName:getProcessor,  @TO@ TypeDeclaration@@[public]FilterProcessor, [Processor<E>] @AT@ 1477 @LENGTH@ 68
---INS Modifier@@public @TO@ MethodDeclaration@@public, Processor<E>, MethodName:getProcessor,  @AT@ 1477 @LENGTH@ 6
---INS ParameterizedType@@Processor<E> @TO@ MethodDeclaration@@public, Processor<E>, MethodName:getProcessor,  @AT@ 1484 @LENGTH@ 12
------INS SimpleType@@Processor @TO@ ParameterizedType@@Processor<E> @AT@ 1484 @LENGTH@ 9
------INS SimpleType@@E @TO@ ParameterizedType@@Processor<E> @AT@ 1494 @LENGTH@ 1
---INS SimpleName@@MethodName:getProcessor @TO@ MethodDeclaration@@public, Processor<E>, MethodName:getProcessor,  @AT@ 1497 @LENGTH@ 12
---INS ReturnStatement@@SimpleName:processor @TO@ MethodDeclaration@@public, Processor<E>, MethodName:getProcessor,  @AT@ 1522 @LENGTH@ 17
------INS SimpleName@@processor @TO@ ReturnStatement@@SimpleName:processor @AT@ 1529 @LENGTH@ 9


UPD WhileStatement@@while (exceptionType != null && exceptionType.getClass() != Object.class) {  if (exceptionTargetStateMappings.containsKey(exceptionType)) {    return (TargetStateResolver)exceptionTargetStateMappings.get(exceptionType);  } else {    exceptionType=exceptionType.getSuperclass();  }} @TO@ while (exceptionType != null && exceptionType != Object.class) {  if (exceptionTargetStateMappings.containsKey(exceptionType)) {    return (TargetStateResolver)exceptionTargetStateMappings.get(exceptionType);  } else {    exceptionType=exceptionType.getSuperclass();  }} @AT@ 7374 @LENGTH@ 304
---UPD InfixExpression@@exceptionType != null && exceptionType.getClass() != Object.class @TO@ exceptionType != null && exceptionType != Object.class @AT@ 7381 @LENGTH@ 65
------UPD InfixExpression@@exceptionType.getClass() != Object.class @TO@ exceptionType != Object.class @AT@ 7406 @LENGTH@ 40
---------DEL MethodInvocation@@exceptionType.getClass() @AT@ 7406 @LENGTH@ 24
------------DEL SimpleName@@Name:exceptionType @AT@ 7406 @LENGTH@ 13
------------DEL SimpleName@@MethodName:getClass:[] @AT@ 7420 @LENGTH@ 10
---------INS SimpleName@@exceptionType @TO@ InfixExpression@@exceptionType.getClass() != Object.class @AT@ 7406 @LENGTH@ 13


UPD IfStatement@@if (!FLOW_SCOPE_VARIABLE.equals(name)) {  return resolverDelegate.resolveVariable(context,name);} else {  return FlowExecutionHolderUtils.getRequiredCurrentFlowExecution(context);} @TO@ if (FLOW_SCOPE_VARIABLE.equals(name)) {  return FlowExecutionHolderUtils.getRequiredCurrentFlowExecution(context);} else {  return resolverDelegate.resolveVariable(context,name);} @AT@ 2212 @LENGTH@ 193
---DEL PrefixExpression@@!FLOW_SCOPE_VARIABLE.equals(name) @AT@ 2216 @LENGTH@ 33
------DEL Operator@@! @AT@ 2216 @LENGTH@ 1
---MOV MethodInvocation@@FLOW_SCOPE_VARIABLE.equals(name) @TO@ IfStatement@@if (!FLOW_SCOPE_VARIABLE.equals(name)) {  return resolverDelegate.resolveVariable(context,name);} else {  return FlowExecutionHolderUtils.getRequiredCurrentFlowExecution(context);} @AT@ 2217 @LENGTH@ 32
---UPD Block@@ThenBody:{  return resolverDelegate.resolveVariable(context,name);} @TO@ ElseBody:{  return resolverDelegate.resolveVariable(context,name);} @AT@ 2251 @LENGTH@ 64
---MOV Block@@ThenBody:{  return resolverDelegate.resolveVariable(context,name);} @TO@ IfStatement@@if (!FLOW_SCOPE_VARIABLE.equals(name)) {  return resolverDelegate.resolveVariable(context,name);} else {  return FlowExecutionHolderUtils.getRequiredCurrentFlowExecution(context);} @AT@ 2251 @LENGTH@ 64
---UPD Block@@ElseBody:{  return FlowExecutionHolderUtils.getRequiredCurrentFlowExecution(context);} @TO@ ThenBody:{  return FlowExecutionHolderUtils.getRequiredCurrentFlowExecution(context);} @AT@ 2323 @LENGTH@ 82


UPD ExpressionStatement@@MethodInvocation:from("queue:a").filter(header("foo").isEqualTo("bar")).to("mock:result") @TO@ MethodInvocation:from("direct:a").filter(header("foo").isEqualTo("bar")).to("mock:result") @AT@ 2440 @LENGTH@ 73
---UPD MethodInvocation@@from("queue:a").filter(header("foo").isEqualTo("bar")).to("mock:result") @TO@ from("direct:a").filter(header("foo").isEqualTo("bar")).to("mock:result") @AT@ 2440 @LENGTH@ 72
------UPD MethodInvocation@@MethodName:from:["queue:a"] @TO@ MethodName:from:["direct:a"] @AT@ 2440 @LENGTH@ 15
---------UPD StringLiteral@@"queue:a" @TO@ "direct:a" @AT@ 2445 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:log.debug("Nothing to do in performOperation for unbind") @TO@ MethodInvocation:log.debug("Performing operation for unbind -" + " renaming to temporary entry.") @AT@ 3550 @LENGTH@ 58
---UPD MethodInvocation@@log.debug("Nothing to do in performOperation for unbind") @TO@ log.debug("Performing operation for unbind -" + " renaming to temporary entry.") @AT@ 3550 @LENGTH@ 57
------UPD SimpleName@@MethodName:debug:["Nothing to do in performOperation for unbind"] @TO@ MethodName:debug:["Performing operation for unbind -" + " renaming to temporary entry."] @AT@ 3554 @LENGTH@ 53
---------INS InfixExpression@@"Performing operation for unbind -" + " renaming to temporary entry." @TO@ SimpleName@@MethodName:debug:["Nothing to do in performOperation for unbind"] @AT@ 3560 @LENGTH@ 86
------------INS StringLiteral@@"Performing operation for unbind -" @TO@ InfixExpression@@"Performing operation for unbind -" + " renaming to temporary entry." @AT@ 3560 @LENGTH@ 35
------------INS Operator@@+ @TO@ InfixExpression@@"Performing operation for unbind -" + " renaming to temporary entry." @AT@ 3595 @LENGTH@ 1
------------INS StringLiteral@@" renaming to temporary entry." @TO@ InfixExpression@@"Performing operation for unbind -" + " renaming to temporary entry." @AT@ 3615 @LENGTH@ 31
---------DEL StringLiteral@@"Nothing to do in performOperation for unbind" @AT@ 3560 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:assertEquals(CollectionUtils.find(null,testPredicate),null) @TO@ MethodInvocation:assertNull(CollectionUtils.find(null,testPredicate)) @AT@ 18464 @LENGTH@ 61
---UPD MethodInvocation@@assertEquals(CollectionUtils.find(null,testPredicate),null) @TO@ assertNull(CollectionUtils.find(null,testPredicate)) @AT@ 18464 @LENGTH@ 60
------UPD SimpleName@@MethodName:assertEquals:[CollectionUtils.find(null,testPredicate), null] @TO@ MethodName:assertNull:[CollectionUtils.find(null,testPredicate)] @AT@ 18464 @LENGTH@ 60
---------DEL NullLiteral@@null @AT@ 18519 @LENGTH@ 4


INS IfStatement@@if (responseInstruction.getFlowExecutionContext().isActive()) {  response.setRenderParameter(argumentHandler.getFlowExecutionKeyArgumentName(),responseInstruction.getFlowExecutionKey());} @TO@ MethodDeclaration@@protected, void, MethodName:handleNull, Exception,  @AT@ 11202 @LENGTH@ 322
---INS MethodInvocation@@responseInstruction.getFlowExecutionContext().isActive() @TO@ IfStatement@@if (responseInstruction.getFlowExecutionContext().isActive()) {  response.setRenderParameter(argumentHandler.getFlowExecutionKeyArgumentName(),responseInstruction.getFlowExecutionKey());} @AT@ 11206 @LENGTH@ 56
------INS MethodInvocation@@MethodName:getFlowExecutionContext:[] @TO@ MethodInvocation@@responseInstruction.getFlowExecutionContext().isActive() @AT@ 11206 @LENGTH@ 45
------INS SimpleName@@Name:responseInstruction @TO@ MethodInvocation@@responseInstruction.getFlowExecutionContext().isActive() @AT@ 11206 @LENGTH@ 19
------INS SimpleName@@MethodName:isActive:[] @TO@ MethodInvocation@@responseInstruction.getFlowExecutionContext().isActive() @AT@ 11252 @LENGTH@ 10
---INS Block@@ThenBody:{  response.setRenderParameter(argumentHandler.getFlowExecutionKeyArgumentName(),responseInstruction.getFlowExecutionKey());} @TO@ IfStatement@@if (responseInstruction.getFlowExecutionContext().isActive()) {  response.setRenderParameter(argumentHandler.getFlowExecutionKeyArgumentName(),responseInstruction.getFlowExecutionKey());} @AT@ 11264 @LENGTH@ 260
------INS ExpressionStatement@@MethodInvocation:response.setRenderParameter(argumentHandler.getFlowExecutionKeyArgumentName(),responseInstruction.getFlowExecutionKey()) @TO@ Block@@ThenBody:{  response.setRenderParameter(argumentHandler.getFlowExecutionKeyArgumentName(),responseInstruction.getFlowExecutionKey());} @AT@ 11389 @LENGTH@ 129
---------INS MethodInvocation@@response.setRenderParameter(argumentHandler.getFlowExecutionKeyArgumentName(),responseInstruction.getFlowExecutionKey()) @TO@ ExpressionStatement@@MethodInvocation:response.setRenderParameter(argumentHandler.getFlowExecutionKeyArgumentName(),responseInstruction.getFlowExecutionKey()) @AT@ 11389 @LENGTH@ 128
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.setRenderParameter(argumentHandler.getFlowExecutionKeyArgumentName(),responseInstruction.getFlowExecutionKey()) @AT@ 11389 @LENGTH@ 8
------------INS SimpleName@@MethodName:setRenderParameter:[argumentHandler.getFlowExecutionKeyArgumentName(), responseInstruction.getFlowExecutionKey()] @TO@ MethodInvocation@@response.setRenderParameter(argumentHandler.getFlowExecutionKeyArgumentName(),responseInstruction.getFlowExecutionKey()) @AT@ 11398 @LENGTH@ 119
---------------INS MethodInvocation@@argumentHandler.getFlowExecutionKeyArgumentName() @TO@ SimpleName@@MethodName:setRenderParameter:[argumentHandler.getFlowExecutionKeyArgumentName(), responseInstruction.getFlowExecutionKey()] @AT@ 11417 @LENGTH@ 49
------------------INS SimpleName@@Name:argumentHandler @TO@ MethodInvocation@@argumentHandler.getFlowExecutionKeyArgumentName() @AT@ 11417 @LENGTH@ 15
------------------INS SimpleName@@MethodName:getFlowExecutionKeyArgumentName:[] @TO@ MethodInvocation@@argumentHandler.getFlowExecutionKeyArgumentName() @AT@ 11433 @LENGTH@ 33
---------------INS MethodInvocation@@responseInstruction.getFlowExecutionKey() @TO@ SimpleName@@MethodName:setRenderParameter:[argumentHandler.getFlowExecutionKeyArgumentName(), responseInstruction.getFlowExecutionKey()] @AT@ 11475 @LENGTH@ 41
------------------INS SimpleName@@Name:responseInstruction @TO@ MethodInvocation@@responseInstruction.getFlowExecutionKey() @AT@ 11475 @LENGTH@ 19
------------------INS SimpleName@@MethodName:getFlowExecutionKey:[] @TO@ MethodInvocation@@responseInstruction.getFlowExecutionKey() @AT@ 11495 @LENGTH@ 21


UPD VariableDeclarationStatement@@long high=((data[offset + 4] & 0xff) << 0) + ((data[offset + 5] & 0xff) << 8) + ((data[offset + 6] & 0xff) << 16)+ ((data[offset + 7] & 0xff) << 24); @TO@ long high=((data[offset + 4] & 0xff) << 0) + ((data[offset + 5] & 0xff) << 8) + ((data[offset + 6] & 0xff) << 16)+ (((long)(data[offset + 7] & 0xff)) << 24); @AT@ 8518 @LENGTH@ 225
---UPD VariableDeclarationFragment@@high=((data[offset + 4] & 0xff) << 0) + ((data[offset + 5] & 0xff) << 8) + ((data[offset + 6] & 0xff) << 16)+ ((data[offset + 7] & 0xff) << 24) @TO@ high=((data[offset + 4] & 0xff) << 0) + ((data[offset + 5] & 0xff) << 8) + ((data[offset + 6] & 0xff) << 16)+ (((long)(data[offset + 7] & 0xff)) << 24) @AT@ 8523 @LENGTH@ 219
------UPD InfixExpression@@((data[offset + 4] & 0xff) << 0) + ((data[offset + 5] & 0xff) << 8) + ((data[offset + 6] & 0xff) << 16)+ ((data[offset + 7] & 0xff) << 24) @TO@ ((data[offset + 4] & 0xff) << 0) + ((data[offset + 5] & 0xff) << 8) + ((data[offset + 6] & 0xff) << 16)+ (((long)(data[offset + 7] & 0xff)) << 24) @AT@ 8543 @LENGTH@ 199
---------UPD ParenthesizedExpression@@((data[offset + 7] & 0xff) << 24) @TO@ (((long)(data[offset + 7] & 0xff)) << 24) @AT@ 8703 @LENGTH@ 39
------------UPD InfixExpression@@(data[offset + 7] & 0xff) << 24 @TO@ ((long)(data[offset + 7] & 0xff)) << 24 @AT@ 8705 @LENGTH@ 35
---------------INS ParenthesizedExpression@@((long)(data[offset + 7] & 0xff)) @TO@ InfixExpression@@(data[offset + 7] & 0xff) << 24 @AT@ 8716 @LENGTH@ 40
------------------INS CastExpression@@(long)(data[offset + 7] & 0xff) @TO@ ParenthesizedExpression@@((long)(data[offset + 7] & 0xff)) @AT@ 8718 @LENGTH@ 36
---------------------MOV ParenthesizedExpression@@(data[offset + 7] & 0xff) @TO@ CastExpression@@(long)(data[offset + 7] & 0xff) @AT@ 8705 @LENGTH@ 29
---------------------INS PrimitiveType@@long @TO@ CastExpression@@(long)(data[offset + 7] & 0xff) @AT@ 8719 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("Buffer get",buffer.get(),"three") @TO@ MethodInvocation:assertEquals("Buffer get","three",buffer.get()) @AT@ 3060 @LENGTH@ 50
---UPD MethodInvocation@@assertEquals("Buffer get",buffer.get(),"three") @TO@ assertEquals("Buffer get","three",buffer.get()) @AT@ 3060 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertEquals:["Buffer get", buffer.get(), "three"] @TO@ MethodName:assertEquals:["Buffer get", "three", buffer.get()] @AT@ 3060 @LENGTH@ 49
---------INS StringLiteral@@"three" @TO@ SimpleName@@MethodName:assertEquals:["Buffer get", buffer.get(), "three"] @AT@ 3087 @LENGTH@ 7
---------DEL StringLiteral@@"three" @AT@ 3101 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:client.sendValue("activemq:queue:test.a","foo") @TO@ MethodInvocation:client.send("jms:queue:test.a",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setBody("foo");
  }
}
) @AT@ 2328 @LENGTH@ 49
---UPD MethodInvocation@@client.sendValue("activemq:queue:test.a","foo") @TO@ client.send("jms:queue:test.a",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setBody("foo");
  }
}
) @AT@ 2328 @LENGTH@ 48
------UPD SimpleName@@MethodName:sendValue:["activemq:queue:test.a", "foo"] @TO@ MethodName:send:["jms:queue:test.a", new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setBody("foo");
  }
}
] @AT@ 2335 @LENGTH@ 41
---------UPD StringLiteral@@"activemq:queue:test.a" @TO@ "jms:queue:test.a" @AT@ 2345 @LENGTH@ 23
---------INS ClassInstanceCreation@@Processor[] @TO@ SimpleName@@MethodName:sendValue:["activemq:queue:test.a", "foo"] @AT@ 2394 @LENGTH@ 160
------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 2394 @LENGTH@ 3
------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 2398 @LENGTH@ 9
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 2410 @LENGTH@ 144
---------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2424 @LENGTH@ 120
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2424 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2431 @LENGTH@ 4
------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2436 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2444 @LENGTH@ 17
---------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2444 @LENGTH@ 8
---------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2453 @LENGTH@ 8
------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2470 @LENGTH@ 9
------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("foo") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2498 @LENGTH@ 32
---------------------INS MethodInvocation@@exchange.getIn().setBody("foo") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("foo") @AT@ 2498 @LENGTH@ 31
------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody("foo") @AT@ 2498 @LENGTH@ 16
------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody("foo") @AT@ 2498 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:setBody:["foo"] @TO@ MethodInvocation@@exchange.getIn().setBody("foo") @AT@ 2515 @LENGTH@ 14
---------------------------MOV StringLiteral@@"foo" @TO@ SimpleName@@MethodName:setBody:["foo"] @AT@ 2370 @LENGTH@ 5


INS IfStatement@@if (requestControls == null) {  requestControls=new Control[0];} @TO@ MethodDeclaration@@public, void, MethodName:preProcess, DirContext ctx, NamingException,  @AT@ 2864 @LENGTH@ 88
---INS InfixExpression@@requestControls == null @TO@ IfStatement@@if (requestControls == null) {  requestControls=new Control[0];} @AT@ 2868 @LENGTH@ 23
------INS SimpleName@@requestControls @TO@ InfixExpression@@requestControls == null @AT@ 2868 @LENGTH@ 15
------INS Operator@@== @TO@ InfixExpression@@requestControls == null @AT@ 2883 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@requestControls == null @AT@ 2887 @LENGTH@ 4
---INS Block@@ThenBody:{  requestControls=new Control[0];} @TO@ IfStatement@@if (requestControls == null) {  requestControls=new Control[0];} @AT@ 2893 @LENGTH@ 59
------INS ExpressionStatement@@Assignment:requestControls=new Control[0] @TO@ Block@@ThenBody:{  requestControls=new Control[0];} @AT@ 2908 @LENGTH@ 33
---------INS Assignment@@requestControls=new Control[0] @TO@ ExpressionStatement@@Assignment:requestControls=new Control[0] @AT@ 2908 @LENGTH@ 32
------------INS SimpleName@@requestControls @TO@ Assignment@@requestControls=new Control[0] @AT@ 2908 @LENGTH@ 15
------------INS Operator@@= @TO@ Assignment@@requestControls=new Control[0] @AT@ 2923 @LENGTH@ 1
------------INS ArrayCreation@@new Control[0] @TO@ Assignment@@requestControls=new Control[0] @AT@ 2926 @LENGTH@ 14
---------------INS ArrayType@@Control[] @TO@ ArrayCreation@@new Control[0] @AT@ 2930 @LENGTH@ 10
------------------INS SimpleType@@Control @TO@ ArrayType@@Control[] @AT@ 2930 @LENGTH@ 7
---------------INS NumberLiteral@@0 @TO@ ArrayCreation@@new Control[0] @AT@ 2938 @LENGTH@ 1


UPD IfStatement@@if (isStatic(modifiers)) {  registry.addTypeConverter(fromType,toType,new StaticMethodTypeConverter(method));} else {  if (injector == null) {    injector=new CachingInjector(registry,type);  }  registry.addTypeConverter(fromType,toType,new InstanceMethodTypeConverter(injector,method));} @TO@ if (isStatic(modifiers)) {  registry.addTypeConverter(toType,fromType,new StaticMethodTypeConverter(method));} else {  if (injector == null) {    injector=new CachingInjector(registry,type);  }  registry.addTypeConverter(toType,fromType,new InstanceMethodTypeConverter(injector,method));} @AT@ 6246 @LENGTH@ 539
---UPD Block@@ThenBody:{  registry.addTypeConverter(fromType,toType,new StaticMethodTypeConverter(method));} @TO@ ThenBody:{  registry.addTypeConverter(toType,fromType,new StaticMethodTypeConverter(method));} @AT@ 6271 @LENGTH@ 147
------UPD ExpressionStatement@@MethodInvocation:registry.addTypeConverter(fromType,toType,new StaticMethodTypeConverter(method)) @TO@ MethodInvocation:registry.addTypeConverter(toType,fromType,new StaticMethodTypeConverter(method)) @AT@ 6305 @LENGTH@ 83
---------UPD MethodInvocation@@registry.addTypeConverter(fromType,toType,new StaticMethodTypeConverter(method)) @TO@ registry.addTypeConverter(toType,fromType,new StaticMethodTypeConverter(method)) @AT@ 6305 @LENGTH@ 82
------------UPD SimpleName@@MethodName:addTypeConverter:[fromType, toType, new StaticMethodTypeConverter(method)] @TO@ MethodName:addTypeConverter:[toType, fromType, new StaticMethodTypeConverter(method)] @AT@ 6314 @LENGTH@ 73
---------------UPD SimpleName@@fromType @TO@ toType @AT@ 6331 @LENGTH@ 8
---------------UPD SimpleName@@toType @TO@ fromType @AT@ 6341 @LENGTH@ 6
---UPD Block@@ElseBody:{  if (injector == null) {    injector=new CachingInjector(registry,type);  }  registry.addTypeConverter(fromType,toType,new InstanceMethodTypeConverter(injector,method));} @TO@ ElseBody:{  if (injector == null) {    injector=new CachingInjector(registry,type);  }  registry.addTypeConverter(toType,fromType,new InstanceMethodTypeConverter(injector,method));} @AT@ 6452 @LENGTH@ 333
------UPD ExpressionStatement@@MethodInvocation:registry.addTypeConverter(fromType,toType,new InstanceMethodTypeConverter(injector,method)) @TO@ MethodInvocation:registry.addTypeConverter(toType,fromType,new InstanceMethodTypeConverter(injector,method)) @AT@ 6660 @LENGTH@ 95
---------UPD MethodInvocation@@registry.addTypeConverter(fromType,toType,new InstanceMethodTypeConverter(injector,method)) @TO@ registry.addTypeConverter(toType,fromType,new InstanceMethodTypeConverter(injector,method)) @AT@ 6660 @LENGTH@ 94
------------UPD SimpleName@@MethodName:addTypeConverter:[fromType, toType, new InstanceMethodTypeConverter(injector,method)] @TO@ MethodName:addTypeConverter:[toType, fromType, new InstanceMethodTypeConverter(injector,method)] @AT@ 6669 @LENGTH@ 85
---------------UPD SimpleName@@fromType @TO@ toType @AT@ 6686 @LENGTH@ 8
---------------UPD SimpleName@@toType @TO@ fromType @AT@ 6696 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:test_longDN, InvalidNameException,  @TO@ TypeDeclaration@@[public]DistinguishedNameTest, TestCase @AT@ 16918 @LENGTH@ 171
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:test_longDN, InvalidNameException,  @AT@ 16918 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:test_longDN, InvalidNameException,  @AT@ 16925 @LENGTH@ 4
---INS SimpleName@@MethodName:test_longDN @TO@ MethodDeclaration@@public, void, MethodName:test_longDN, InvalidNameException,  @AT@ 16930 @LENGTH@ 11
---INS SimpleType@@InvalidNameException @TO@ MethodDeclaration@@public, void, MethodName:test_longDN, InvalidNameException,  @AT@ 16951 @LENGTH@ 20
---INS VariableDeclarationStatement@@DistinguishedName name=new DistinguishedName(""); @TO@ MethodDeclaration@@public, void, MethodName:test_longDN, InvalidNameException,  @AT@ 16983 @LENGTH@ 69
------INS SimpleType@@DistinguishedName @TO@ VariableDeclarationStatement@@DistinguishedName name=new DistinguishedName(""); @AT@ 16983 @LENGTH@ 17
------INS VariableDeclarationFragment@@name=new DistinguishedName("") @TO@ VariableDeclarationStatement@@DistinguishedName name=new DistinguishedName(""); @AT@ 17001 @LENGTH@ 50
---------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=new DistinguishedName("") @AT@ 17001 @LENGTH@ 4
---------INS ClassInstanceCreation@@DistinguishedName[""] @TO@ VariableDeclarationFragment@@name=new DistinguishedName("") @AT@ 17008 @LENGTH@ 43
------------INS New@@new @TO@ ClassInstanceCreation@@DistinguishedName[""] @AT@ 17008 @LENGTH@ 3
------------INS SimpleType@@DistinguishedName @TO@ ClassInstanceCreation@@DistinguishedName[""] @AT@ 17012 @LENGTH@ 17
------------INS StringLiteral@@"" @TO@ ClassInstanceCreation@@DistinguishedName[""] @AT@ 17048 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertNotNull(name) @TO@ MethodDeclaration@@public, void, MethodName:test_longDN, InvalidNameException,  @AT@ 17062 @LENGTH@ 20
------INS MethodInvocation@@assertNotNull(name) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(name) @AT@ 17062 @LENGTH@ 19
---------INS SimpleName@@MethodName:assertNotNull:[name] @TO@ MethodInvocation@@assertNotNull(name) @AT@ 17062 @LENGTH@ 19
------------INS SimpleName@@name @TO@ SimpleName@@MethodName:assertNotNull:[name] @AT@ 17076 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:startEndpoint=resolveMandatoryEndpoint(context,"queue:a") @TO@ Assignment:startEndpoint=resolveMandatoryEndpoint(context,"direct:a") @AT@ 3113 @LENGTH@ 61
---UPD Assignment@@startEndpoint=resolveMandatoryEndpoint(context,"queue:a") @TO@ startEndpoint=resolveMandatoryEndpoint(context,"direct:a") @AT@ 3113 @LENGTH@ 60
------UPD MethodInvocation@@resolveMandatoryEndpoint(context,"queue:a") @TO@ resolveMandatoryEndpoint(context,"direct:a") @AT@ 3129 @LENGTH@ 44
---------UPD SimpleName@@MethodName:resolveMandatoryEndpoint:[context, "queue:a"] @TO@ MethodName:resolveMandatoryEndpoint:[context, "direct:a"] @AT@ 3129 @LENGTH@ 44
------------UPD StringLiteral@@"queue:a" @TO@ "direct:a" @AT@ 3163 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:ldapOperationsMock.rename(expectedDn,expectedTempDn) @AT@ 2043 @LENGTH@ 54
---DEL MethodInvocation@@ldapOperationsMock.rename(expectedDn,expectedTempDn) @AT@ 2043 @LENGTH@ 53
------DEL SimpleName@@Name:ldapOperationsMock @AT@ 2043 @LENGTH@ 18
------DEL SimpleName@@MethodName:rename:[expectedDn, expectedTempDn] @AT@ 2062 @LENGTH@ 34
---------DEL SimpleName@@expectedDn @AT@ 2069 @LENGTH@ 10
---------DEL SimpleName@@expectedTempDn @AT@ 2081 @LENGTH@ 14


UPD ThrowStatement@@ClassInstanceCreation:new ConversionException('\'' + key + "' ("+ arrayType+ ") doesn't map to a compatible array of "+ cls) @TO@ ClassInstanceCreation:new ConversionException('\'' + key + "' ("+ arrayType+ ")"+ " doesn't map to a compatible array of "+ cls) @AT@ 15560 @LENGTH@ 112
---UPD ClassInstanceCreation@@ConversionException['\'' + key + "' ("+ arrayType+ ") doesn't map to a compatible array of "+ cls] @TO@ ConversionException['\'' + key + "' ("+ arrayType+ ")"+ " doesn't map to a compatible array of "+ cls] @AT@ 15566 @LENGTH@ 105
------UPD InfixExpression@@'\'' + key + "' ("+ arrayType+ ") doesn't map to a compatible array of "+ cls @TO@ '\'' + key + "' ("+ arrayType+ ")"+ " doesn't map to a compatible array of "+ cls @AT@ 15590 @LENGTH@ 80
---------UPD StringLiteral@@") doesn't map to a compatible array of " @TO@ " doesn't map to a compatible array of " @AT@ 15623 @LENGTH@ 41
---------INS StringLiteral@@")" @TO@ InfixExpression@@'\'' + key + "' ("+ arrayType+ ") doesn't map to a compatible array of "+ cls @AT@ 15672 @LENGTH@ 3


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[public]ValueBuilder, [Expression<E>] @AT@ 1437 @LENGTH@ 70
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1437 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1444 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1451 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:expression.toString() @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1472 @LENGTH@ 29
------INS MethodInvocation@@expression.toString() @TO@ ReturnStatement@@MethodInvocation:expression.toString() @AT@ 1479 @LENGTH@ 21
---------INS SimpleName@@Name:expression @TO@ MethodInvocation@@expression.toString() @AT@ 1479 @LENGTH@ 10
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@expression.toString() @AT@ 1490 @LENGTH@ 10


UPD MethodDeclaration@@void, MethodName:sendAndReceive, MessageContext messageContext, IOException,  @TO@ WebServiceConnection, MethodName:createConnection, IOException,  @AT@ 586 @LENGTH@ 65
---DEL PrimitiveType@@void @AT@ 581 @LENGTH@ 4
---DEL SimpleName@@MethodName:sendAndReceive @AT@ 586 @LENGTH@ 14
---DEL SingleVariableDeclaration@@MessageContext messageContext @AT@ 601 @LENGTH@ 29
------DEL SimpleType@@MessageContext @AT@ 601 @LENGTH@ 14
------DEL SimpleName@@messageContext @AT@ 616 @LENGTH@ 14
---INS SimpleType@@WebServiceConnection @TO@ MethodDeclaration@@void, MethodName:sendAndReceive, MessageContext messageContext, IOException,  @AT@ 613 @LENGTH@ 20
---INS SimpleName@@MethodName:createConnection @TO@ MethodDeclaration@@void, MethodName:sendAndReceive, MessageContext messageContext, IOException,  @AT@ 634 @LENGTH@ 16


UPD Block@@ThenBody:{  Message message=folder.getMessage(1);  processMessage(message);  flagMessageDeleted(message);} @TO@ ThenBody:{  Message[] messages=folder.getMessages();  MessageCountEvent event=new MessageCountEvent(folder,MessageCountEvent.ADDED,true,messages);  messagesAdded(event);} @AT@ 3319 @LENGTH@ 143
---UPD VariableDeclarationStatement@@Message message=folder.getMessage(1); @TO@ Message[] messages=folder.getMessages(); @AT@ 3333 @LENGTH@ 39
------INS ArrayType@@Message[] @TO@ VariableDeclarationStatement@@Message message=folder.getMessage(1); @AT@ 3333 @LENGTH@ 9
---------INS SimpleType@@Message @TO@ ArrayType@@Message[] @AT@ 3333 @LENGTH@ 7
------DEL SimpleType@@Message @AT@ 3333 @LENGTH@ 7
------UPD VariableDeclarationFragment@@message=folder.getMessage(1) @TO@ messages=folder.getMessages() @AT@ 3341 @LENGTH@ 30
---------UPD SimpleName@@message @TO@ messages @AT@ 3341 @LENGTH@ 7
---------UPD MethodInvocation@@folder.getMessage(1) @TO@ folder.getMessages() @AT@ 3351 @LENGTH@ 20
------------UPD SimpleName@@MethodName:getMessage:[1] @TO@ MethodName:getMessages:[] @AT@ 3358 @LENGTH@ 13
---------------DEL NumberLiteral@@1 @AT@ 3369 @LENGTH@ 1
---DEL ExpressionStatement@@MethodInvocation:processMessage(message) @AT@ 3386 @LENGTH@ 24
------DEL MethodInvocation@@processMessage(message) @AT@ 3386 @LENGTH@ 23
---------DEL SimpleName@@MethodName:processMessage:[message] @AT@ 3386 @LENGTH@ 23
------------DEL SimpleName@@message @AT@ 3401 @LENGTH@ 7
---INS VariableDeclarationStatement@@MessageCountEvent event=new MessageCountEvent(folder,MessageCountEvent.ADDED,true,messages); @TO@ Block@@ThenBody:{  Message message=folder.getMessage(1);  processMessage(message);  flagMessageDeleted(message);} @AT@ 3388 @LENGTH@ 97
------INS SimpleType@@MessageCountEvent @TO@ VariableDeclarationStatement@@MessageCountEvent event=new MessageCountEvent(folder,MessageCountEvent.ADDED,true,messages); @AT@ 3388 @LENGTH@ 17
------INS VariableDeclarationFragment@@event=new MessageCountEvent(folder,MessageCountEvent.ADDED,true,messages) @TO@ VariableDeclarationStatement@@MessageCountEvent event=new MessageCountEvent(folder,MessageCountEvent.ADDED,true,messages); @AT@ 3406 @LENGTH@ 78
---------INS SimpleName@@event @TO@ VariableDeclarationFragment@@event=new MessageCountEvent(folder,MessageCountEvent.ADDED,true,messages) @AT@ 3406 @LENGTH@ 5
---------INS ClassInstanceCreation@@MessageCountEvent[folder, MessageCountEvent.ADDED, true, messages] @TO@ VariableDeclarationFragment@@event=new MessageCountEvent(folder,MessageCountEvent.ADDED,true,messages) @AT@ 3414 @LENGTH@ 70
------------INS New@@new @TO@ ClassInstanceCreation@@MessageCountEvent[folder, MessageCountEvent.ADDED, true, messages] @AT@ 3414 @LENGTH@ 3
------------INS SimpleType@@MessageCountEvent @TO@ ClassInstanceCreation@@MessageCountEvent[folder, MessageCountEvent.ADDED, true, messages] @AT@ 3418 @LENGTH@ 17
------------INS SimpleName@@folder @TO@ ClassInstanceCreation@@MessageCountEvent[folder, MessageCountEvent.ADDED, true, messages] @AT@ 3436 @LENGTH@ 6
------------INS QualifiedName@@MessageCountEvent.ADDED @TO@ ClassInstanceCreation@@MessageCountEvent[folder, MessageCountEvent.ADDED, true, messages] @AT@ 3444 @LENGTH@ 23
---------------INS SimpleName@@MessageCountEvent @TO@ QualifiedName@@MessageCountEvent.ADDED @AT@ 3444 @LENGTH@ 17
---------------INS SimpleName@@ADDED @TO@ QualifiedName@@MessageCountEvent.ADDED @AT@ 3462 @LENGTH@ 5
------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@MessageCountEvent[folder, MessageCountEvent.ADDED, true, messages] @AT@ 3469 @LENGTH@ 4
------------INS SimpleName@@messages @TO@ ClassInstanceCreation@@MessageCountEvent[folder, MessageCountEvent.ADDED, true, messages] @AT@ 3475 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:flagMessageDeleted(message) @TO@ MethodInvocation:messagesAdded(event) @AT@ 3424 @LENGTH@ 28
------UPD MethodInvocation@@flagMessageDeleted(message) @TO@ messagesAdded(event) @AT@ 3424 @LENGTH@ 27
---------UPD SimpleName@@MethodName:flagMessageDeleted:[message] @TO@ MethodName:messagesAdded:[event] @AT@ 3424 @LENGTH@ 27
------------UPD SimpleName@@message @TO@ event @AT@ 3443 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:ldapOperationsMock.rename(expectedOriginalDn,expectedTempDn) @TO@ MethodDeclaration@@public, void, MethodName:testPerformOperation,  @AT@ 1542 @LENGTH@ 62
---INS MethodInvocation@@ldapOperationsMock.rename(expectedOriginalDn,expectedTempDn) @TO@ ExpressionStatement@@MethodInvocation:ldapOperationsMock.rename(expectedOriginalDn,expectedTempDn) @AT@ 1542 @LENGTH@ 61
------INS SimpleName@@Name:ldapOperationsMock @TO@ MethodInvocation@@ldapOperationsMock.rename(expectedOriginalDn,expectedTempDn) @AT@ 1542 @LENGTH@ 18
------INS SimpleName@@MethodName:rename:[expectedOriginalDn, expectedTempDn] @TO@ MethodInvocation@@ldapOperationsMock.rename(expectedOriginalDn,expectedTempDn) @AT@ 1561 @LENGTH@ 42
---------INS SimpleName@@expectedOriginalDn @TO@ SimpleName@@MethodName:rename:[expectedOriginalDn, expectedTempDn] @AT@ 1568 @LENGTH@ 18
---------INS SimpleName@@expectedTempDn @TO@ SimpleName@@MethodName:rename:[expectedOriginalDn, expectedTempDn] @AT@ 1588 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(schemaResources[i].exists(),"schema [" + schemaResources + "] does not exist") @TO@ MethodInvocation:Assert.isTrue(schemaResources[i].exists(),"schema [" + schemaResources[i] + "] does not exist") @AT@ 4016 @LENGTH@ 94
---UPD MethodInvocation@@Assert.isTrue(schemaResources[i].exists(),"schema [" + schemaResources + "] does not exist") @TO@ Assert.isTrue(schemaResources[i].exists(),"schema [" + schemaResources[i] + "] does not exist") @AT@ 4016 @LENGTH@ 93
------UPD SimpleName@@MethodName:isTrue:[schemaResources[i].exists(), "schema [" + schemaResources + "] does not exist"] @TO@ MethodName:isTrue:[schemaResources[i].exists(), "schema [" + schemaResources[i] + "] does not exist"] @AT@ 4023 @LENGTH@ 86
---------UPD InfixExpression@@"schema [" + schemaResources + "] does not exist" @TO@ "schema [" + schemaResources[i] + "] does not exist" @AT@ 4059 @LENGTH@ 49
------------INS ArrayAccess@@schemaResources[i] @TO@ InfixExpression@@"schema [" + schemaResources + "] does not exist" @AT@ 4072 @LENGTH@ 18
---------------INS SimpleName@@schemaResources @TO@ ArrayAccess@@schemaResources[i] @AT@ 4072 @LENGTH@ 15
---------------INS SimpleName@@i @TO@ ArrayAccess@@schemaResources[i] @AT@ 4088 @LENGTH@ 1
------------DEL SimpleName@@schemaResources @AT@ 4072 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:assertTrue(template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("bobspassword"))) @TO@ MethodDeclaration@@public, void, MethodName:testCompareOfCorrectByteValueSucceeds,  @AT@ 1455 @LENGTH@ 130
---INS MethodInvocation@@assertTrue(template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("bobspassword"))) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("bobspassword"))) @AT@ 1455 @LENGTH@ 129
------INS SimpleName@@MethodName:assertTrue:[template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("bobspassword"))] @TO@ MethodInvocation@@assertTrue(template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("bobspassword"))) @AT@ 1455 @LENGTH@ 129
---------INS MethodInvocation@@template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("bobspassword")) @TO@ SimpleName@@MethodName:assertTrue:[template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("bobspassword"))] @AT@ 1466 @LENGTH@ 117
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("bobspassword")) @AT@ 1466 @LENGTH@ 8
------------INS SimpleName@@MethodName:compare:["uid=bob,ou=people,dc=acegisecurity,dc=org", "userPassword", LdapUtils.getUtf8Bytes("bobspassword")] @TO@ MethodInvocation@@template.compare("uid=bob,ou=people,dc=acegisecurity,dc=org","userPassword",LdapUtils.getUtf8Bytes("bobspassword")) @AT@ 1475 @LENGTH@ 108
---------------INS StringLiteral@@"uid=bob,ou=people,dc=acegisecurity,dc=org" @TO@ SimpleName@@MethodName:compare:["uid=bob,ou=people,dc=acegisecurity,dc=org", "userPassword", LdapUtils.getUtf8Bytes("bobspassword")] @AT@ 1483 @LENGTH@ 43
---------------INS StringLiteral@@"userPassword" @TO@ SimpleName@@MethodName:compare:["uid=bob,ou=people,dc=acegisecurity,dc=org", "userPassword", LdapUtils.getUtf8Bytes("bobspassword")] @AT@ 1528 @LENGTH@ 14
---------------INS MethodInvocation@@LdapUtils.getUtf8Bytes("bobspassword") @TO@ SimpleName@@MethodName:compare:["uid=bob,ou=people,dc=acegisecurity,dc=org", "userPassword", LdapUtils.getUtf8Bytes("bobspassword")] @AT@ 1544 @LENGTH@ 38
------------------INS SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.getUtf8Bytes("bobspassword") @AT@ 1544 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getUtf8Bytes:["bobspassword"] @TO@ MethodInvocation@@LdapUtils.getUtf8Bytes("bobspassword") @AT@ 1554 @LENGTH@ 28
---------------------INS StringLiteral@@"bobspassword" @TO@ SimpleName@@MethodName:getUtf8Bytes:["bobspassword"] @AT@ 1567 @LENGTH@ 14


UPD MethodDeclaration@@Object, MethodName:marshalSendAndReceive, Object requestPayload, GenericMarshallingFailureException, WebServiceClientException,  @TO@ Object, MethodName:marshalSendAndReceive, Object requestPayload, XmlMappingException, WebServiceClientException,  @AT@ 2002 @LENGTH@ 126
---UPD SimpleType@@GenericMarshallingFailureException @TO@ XmlMappingException @AT@ 2066 @LENGTH@ 34


INS MethodDeclaration@@public, void, MethodName:addProcessor, Processor<E> processor,  @TO@ TypeDeclaration@@[public]PredicateBuilder, DestinationBuilder<E> @AT@ 1843 @LENGTH@ 133
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addProcessor, Processor<E> processor,  @AT@ 1843 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addProcessor, Processor<E> processor,  @AT@ 1850 @LENGTH@ 4
---INS SimpleName@@MethodName:addProcessor @TO@ MethodDeclaration@@public, void, MethodName:addProcessor, Processor<E> processor,  @AT@ 1855 @LENGTH@ 12
---INS SingleVariableDeclaration@@Processor<E> processor @TO@ MethodDeclaration@@public, void, MethodName:addProcessor, Processor<E> processor,  @AT@ 1868 @LENGTH@ 22
------INS ParameterizedType@@Processor<E> @TO@ SingleVariableDeclaration@@Processor<E> processor @AT@ 1868 @LENGTH@ 12
---------INS SimpleType@@Processor @TO@ ParameterizedType@@Processor<E> @AT@ 1868 @LENGTH@ 9
---------INS SimpleType@@E @TO@ ParameterizedType@@Processor<E> @AT@ 1878 @LENGTH@ 1
------INS SimpleName@@processor @TO@ SingleVariableDeclaration@@Processor<E> processor @AT@ 1881 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:getParent().addProcessor(new FilterProcessor(predicate,processor)) @TO@ MethodDeclaration@@public, void, MethodName:addProcessor, Processor<E> processor,  @AT@ 1902 @LENGTH@ 68
------INS MethodInvocation@@getParent().addProcessor(new FilterProcessor(predicate,processor)) @TO@ ExpressionStatement@@MethodInvocation:getParent().addProcessor(new FilterProcessor(predicate,processor)) @AT@ 1902 @LENGTH@ 67
---------INS MethodInvocation@@MethodName:getParent:[] @TO@ MethodInvocation@@getParent().addProcessor(new FilterProcessor(predicate,processor)) @AT@ 1902 @LENGTH@ 11
---------INS SimpleName@@MethodName:addProcessor:[new FilterProcessor(predicate,processor)] @TO@ MethodInvocation@@getParent().addProcessor(new FilterProcessor(predicate,processor)) @AT@ 1914 @LENGTH@ 55
------------INS ClassInstanceCreation@@FilterProcessor[predicate, processor] @TO@ SimpleName@@MethodName:addProcessor:[new FilterProcessor(predicate,processor)] @AT@ 1927 @LENGTH@ 41
---------------INS New@@new @TO@ ClassInstanceCreation@@FilterProcessor[predicate, processor] @AT@ 1927 @LENGTH@ 3
---------------INS SimpleType@@FilterProcessor @TO@ ClassInstanceCreation@@FilterProcessor[predicate, processor] @AT@ 1931 @LENGTH@ 15
---------------INS SimpleName@@predicate @TO@ ClassInstanceCreation@@FilterProcessor[predicate, processor] @AT@ 1947 @LENGTH@ 9
---------------INS SimpleName@@processor @TO@ ClassInstanceCreation@@FilterProcessor[predicate, processor] @AT@ 1958 @LENGTH@ 9

UPD ForStatement@@for (Iterator it=properties.keySet().iterator(); it.hasNext(); ) {  String propName=(String)it.next();  initProperty(bean,propName,properties.get(propName));} @TO@ for (Iterator it=properties.entrySet().iterator(); it.hasNext(); ) {  Map.Entry e=(Map.Entry)it.next();  String propName=(String)e.getKey();  initProperty(bean,propName,e.getValue());} @AT@ 5565 @LENGTH@ 219
---UPD VariableDeclarationExpression@@Iterator it=properties.keySet().iterator() @TO@ Iterator it=properties.entrySet().iterator() @AT@ 5570 @LENGTH@ 44
------UPD VariableDeclarationFragment@@it=properties.keySet().iterator() @TO@ it=properties.entrySet().iterator() @AT@ 5579 @LENGTH@ 35
---------UPD MethodInvocation@@properties.keySet().iterator() @TO@ properties.entrySet().iterator() @AT@ 5584 @LENGTH@ 30
------------UPD MethodInvocation@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 5584 @LENGTH@ 19
---UPD VariableDeclarationStatement@@String propName=(String)it.next(); @TO@ String propName=(String)e.getKey(); @AT@ 5661 @LENGTH@ 37
------UPD VariableDeclarationFragment@@propName=(String)it.next() @TO@ propName=(String)e.getKey() @AT@ 5668 @LENGTH@ 29
---------UPD CastExpression@@(String)it.next() @TO@ (String)e.getKey() @AT@ 5679 @LENGTH@ 18
------------UPD MethodInvocation@@it.next() @TO@ e.getKey() @AT@ 5688 @LENGTH@ 9
---------------UPD SimpleName@@Name:it @TO@ Name:e @AT@ 5688 @LENGTH@ 2
---------------UPD SimpleName@@MethodName:next:[] @TO@ MethodName:getKey:[] @AT@ 5691 @LENGTH@ 6
---INS VariableDeclarationStatement@@Map.Entry e=(Map.Entry)it.next(); @TO@ ForStatement@@for (Iterator it=properties.keySet().iterator(); it.hasNext(); ) {  String propName=(String)it.next();  initProperty(bean,propName,properties.get(propName));} @AT@ 5663 @LENGTH@ 36
------INS SimpleType@@Map.Entry @TO@ VariableDeclarationStatement@@Map.Entry e=(Map.Entry)it.next(); @AT@ 5663 @LENGTH@ 9
------INS VariableDeclarationFragment@@e=(Map.Entry)it.next() @TO@ VariableDeclarationStatement@@Map.Entry e=(Map.Entry)it.next(); @AT@ 5673 @LENGTH@ 25
---------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e=(Map.Entry)it.next() @AT@ 5673 @LENGTH@ 1
---------INS CastExpression@@(Map.Entry)it.next() @TO@ VariableDeclarationFragment@@e=(Map.Entry)it.next() @AT@ 5677 @LENGTH@ 21
------------INS SimpleType@@Map.Entry @TO@ CastExpression@@(Map.Entry)it.next() @AT@ 5678 @LENGTH@ 9
------------INS MethodInvocation@@it.next() @TO@ CastExpression@@(Map.Entry)it.next() @AT@ 5689 @LENGTH@ 9
---------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.next() @AT@ 5689 @LENGTH@ 2
---------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@it.next() @AT@ 5692 @LENGTH@ 6
---UPD ExpressionStatement@@MethodInvocation:initProperty(bean,propName,properties.get(propName)) @TO@ MethodInvocation:initProperty(bean,propName,e.getValue()) @AT@ 5715 @LENGTH@ 55
------UPD MethodInvocation@@initProperty(bean,propName,properties.get(propName)) @TO@ initProperty(bean,propName,e.getValue()) @AT@ 5715 @LENGTH@ 54
---------UPD SimpleName@@MethodName:initProperty:[bean, propName, properties.get(propName)] @TO@ MethodName:initProperty:[bean, propName, e.getValue()] @AT@ 5715 @LENGTH@ 54
------------UPD MethodInvocation@@properties.get(propName) @TO@ e.getValue() @AT@ 5744 @LENGTH@ 24
---------------UPD SimpleName@@Name:properties @TO@ Name:e @AT@ 5744 @LENGTH@ 10
---------------UPD SimpleName@@MethodName:get:[propName] @TO@ MethodName:getValue:[] @AT@ 5755 @LENGTH@ 13
------------------DEL SimpleName@@propName @AT@ 5759 @LENGTH@ 8


INS MethodDeclaration@@private, voidMethodName:Main,  @TO@ TypeDeclaration@@[public]Main,  @AT@ 1477 @LENGTH@ 54
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:Main,  @AT@ 1477 @LENGTH@ 7
---INS SimpleName@@MethodName:Main @TO@ MethodDeclaration@@private, voidMethodName:Main,  @AT@ 1485 @LENGTH@ 4


UPD TypeDeclaration@@[public]ActiveMQHelper,  @TO@ [public, final]ActiveMQHelper,  @AT@ 1051 @LENGTH@ 435
---INS Modifier@@final @TO@ TypeDeclaration@@[public]ActiveMQHelper,  @AT@ 1060 @LENGTH@ 5


UPD TryStatement@@try {  BeanWrapperImpl beanWrapper=new BeanWrapperImpl(context);  Set converters=conversionService.getConversionExecutors(String.class);  for (Iterator it=converters.iterator(); it.hasNext(); ) {    ConversionExecutor converter=(ConversionExecutor)it.next();    beanWrapper.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter));  }  beanWrapper.setPropertyValue(expression,value);} catch (NotWritablePropertyException e) {  throw new PropertyNotFoundException(context.getClass(),expression,e);}catch (TypeMismatchException e) {  throw new ValueCoercionException(context.getClass(),expression,value,e.getRequiredType(),e);}catch (BeansException e) {  throw new EvaluationException(context.getClass(),getExpressionString(),"A BeansException occurred setting the value of expression '" + getExpressionString() + "' on context ["+ context.getClass()+ "] to ["+ value+ "]",e);} @TO@ try {  BeanWrapperImpl beanWrapper=new BeanWrapperImpl(context);  registerConvertersAsPropertyEditors(beanWrapper);  beanWrapper.setPropertyValue(expression,value);} catch (NotWritablePropertyException e) {  throw new PropertyNotFoundException(context.getClass(),expression,e);}catch (TypeMismatchException e) {  throw new ValueCoercionException(context.getClass(),expression,value,e.getRequiredType(),e);}catch (BeansException e) {  throw new EvaluationException(context.getClass(),getExpressionString(),"A BeansException occurred setting the value of expression '" + getExpressionString() + "' on context ["+ context.getClass()+ "] to ["+ value+ "]",e);} @AT@ 3854 @LENGTH@ 973
---INS ExpressionStatement@@MethodInvocation:registerConvertersAsPropertyEditors(beanWrapper) @TO@ TryStatement@@try {  BeanWrapperImpl beanWrapper=new BeanWrapperImpl(context);  Set converters=conversionService.getConversionExecutors(String.class);  for (Iterator it=converters.iterator(); it.hasNext(); ) {    ConversionExecutor converter=(ConversionExecutor)it.next();    beanWrapper.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter));  }  beanWrapper.setPropertyValue(expression,value);} catch (NotWritablePropertyException e) {  throw new PropertyNotFoundException(context.getClass(),expression,e);}catch (TypeMismatchException e) {  throw new ValueCoercionException(context.getClass(),expression,value,e.getRequiredType(),e);}catch (BeansException e) {  throw new EvaluationException(context.getClass(),getExpressionString(),"A BeansException occurred setting the value of expression '" + getExpressionString() + "' on context ["+ context.getClass()+ "] to ["+ value+ "]",e);} @AT@ 3983 @LENGTH@ 49
------INS MethodInvocation@@registerConvertersAsPropertyEditors(beanWrapper) @TO@ ExpressionStatement@@MethodInvocation:registerConvertersAsPropertyEditors(beanWrapper) @AT@ 3983 @LENGTH@ 48
---------INS SimpleName@@MethodName:registerConvertersAsPropertyEditors:[beanWrapper] @TO@ MethodInvocation@@registerConvertersAsPropertyEditors(beanWrapper) @AT@ 3983 @LENGTH@ 48
------------INS SimpleName@@beanWrapper @TO@ SimpleName@@MethodName:registerConvertersAsPropertyEditors:[beanWrapper] @AT@ 4019 @LENGTH@ 11
---UPD ForStatement@@for (Iterator it=converters.iterator(); it.hasNext(); ) {  ConversionExecutor converter=(ConversionExecutor)it.next();  beanWrapper.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter));} @TO@ for (Iterator it=converters.iterator(); it.hasNext(); ) {  ConversionExecutor converter=(ConversionExecutor)it.next();  if (!converter.getTargetClass().getName().equals("java.lang.Enum")) {    registry.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter));  }} @AT@ 4002 @LENGTH@ 236


UPD CatchClause@@catch (JMSException e) {  LOG.error("Failed to get message id from message " + jmsMessage,e);  return super.createMessageId();} @TO@ catch (JMSException e) {  throw new RuntimeCamelException("Failed to get JMSMessageID property",e);} @AT@ 5934 @LENGTH@ 159
---DEL ExpressionStatement@@MethodInvocation:LOG.error("Failed to get message id from message " + jmsMessage,e) @AT@ 5971 @LENGTH@ 68
------DEL MethodInvocation@@LOG.error("Failed to get message id from message " + jmsMessage,e) @AT@ 5971 @LENGTH@ 67
---------DEL SimpleName@@Name:LOG @AT@ 5971 @LENGTH@ 3
---------DEL SimpleName@@MethodName:error:["Failed to get message id from message " + jmsMessage, e] @AT@ 5975 @LENGTH@ 63
------------DEL InfixExpression@@"Failed to get message id from message " + jmsMessage @AT@ 5981 @LENGTH@ 53
---------------DEL StringLiteral@@"Failed to get message id from message " @AT@ 5981 @LENGTH@ 40
---------------DEL Operator@@+ @AT@ 6021 @LENGTH@ 1
---------------DEL SimpleName@@jmsMessage @AT@ 6024 @LENGTH@ 10
------------DEL SimpleName@@e @AT@ 6036 @LENGTH@ 1
---INS ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException("Failed to get JMSMessageID property",e) @TO@ CatchClause@@catch (JMSException e) {  LOG.error("Failed to get message id from message " + jmsMessage,e);  return super.createMessageId();} @AT@ 6021 @LENGTH@ 74
------INS ClassInstanceCreation@@RuntimeCamelException["Failed to get JMSMessageID property", e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException("Failed to get JMSMessageID property",e) @AT@ 6027 @LENGTH@ 67
---------INS New@@new @TO@ ClassInstanceCreation@@RuntimeCamelException["Failed to get JMSMessageID property", e] @AT@ 6027 @LENGTH@ 3
---------INS SimpleType@@RuntimeCamelException @TO@ ClassInstanceCreation@@RuntimeCamelException["Failed to get JMSMessageID property", e] @AT@ 6031 @LENGTH@ 21
---------INS StringLiteral@@"Failed to get JMSMessageID property" @TO@ ClassInstanceCreation@@RuntimeCamelException["Failed to get JMSMessageID property", e] @AT@ 6053 @LENGTH@ 37
---------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeCamelException["Failed to get JMSMessageID property", e] @AT@ 6092 @LENGTH@ 1
---DEL ReturnStatement@@SuperMethodInvocation:super.createMessageId() @AT@ 6052 @LENGTH@ 31
------DEL SuperMethodInvocation@@super.createMessageId() @AT@ 6059 @LENGTH@ 23
---------DEL SimpleName@@MethodName:createMessageId:[] @AT@ 6065 @LENGTH@ 15


UPD MethodDeclaration@@public, void, MethodName:testJmsRouteWithObjectMessage, Exception,  @TO@ public, void, MethodName:xtestJmsRouteWithObjectMessage, Exception,  @AT@ 1931 @LENGTH@ 347
---UPD SimpleName@@MethodName:testJmsRouteWithObjectMessage @TO@ MethodName:xtestJmsRouteWithObjectMessage @AT@ 1943 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:resultEndpoint.setResultWaitTime(1000) @TO@ MethodInvocation:resultEndpoint.setResultWaitTime(5000) @AT@ 1526 @LENGTH@ 39
---UPD MethodInvocation@@resultEndpoint.setResultWaitTime(1000) @TO@ resultEndpoint.setResultWaitTime(5000) @AT@ 1526 @LENGTH@ 38
------UPD SimpleName@@MethodName:setResultWaitTime:[1000] @TO@ MethodName:setResultWaitTime:[5000] @AT@ 1541 @LENGTH@ 23
---------UPD NumberLiteral@@1000 @TO@ 5000 @AT@ 1559 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:LOG.warn(endpoint + " can not process file: " + target) @TO@ MethodInvocation:LOG.warn(endpoint + " cannot process file: " + target) @AT@ 7030 @LENGTH@ 56
---UPD MethodInvocation@@LOG.warn(endpoint + " can not process file: " + target) @TO@ LOG.warn(endpoint + " cannot process file: " + target) @AT@ 7030 @LENGTH@ 55
------UPD SimpleName@@MethodName:warn:[endpoint + " can not process file: " + target] @TO@ MethodName:warn:[endpoint + " cannot process file: " + target] @AT@ 7034 @LENGTH@ 51
---------UPD InfixExpression@@endpoint + " can not process file: " + target @TO@ endpoint + " cannot process file: " + target @AT@ 7039 @LENGTH@ 45
------------UPD StringLiteral@@" can not process file: " @TO@ " cannot process file: " @AT@ 7050 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2013 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2013 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 2030 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2040 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2040 @LENGTH@ 13


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]ToStringTypeConverter, [TypeConverter] @AT@ 1640 @LENGTH@ 126
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 1640 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 1651 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 1653 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 1672 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 1672 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 1672 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 1678 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 1681 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 1687 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1687 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1696 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 1706 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 1706 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 1713 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 1730 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 1737 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 1737 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 1747 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 1753 @LENGTH@ 5


INS FieldDeclaration@@String, [FILE_NAME_ONLY="CamelFileNameOnly"] @TO@ TypeDeclaration@@[public]Exchange,  @AT@ 1954 @LENGTH@ 44
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [FILE_NAME_ONLY="CamelFileNameOnly"] @AT@ 1954 @LENGTH@ 6
---INS VariableDeclarationFragment@@FILE_NAME_ONLY="CamelFileNameOnly" @TO@ FieldDeclaration@@String, [FILE_NAME_ONLY="CamelFileNameOnly"] @AT@ 1961 @LENGTH@ 36
------INS SimpleName@@FILE_NAME_ONLY @TO@ VariableDeclarationFragment@@FILE_NAME_ONLY="CamelFileNameOnly" @AT@ 1961 @LENGTH@ 14
------INS StringLiteral@@"CamelFileNameOnly" @TO@ VariableDeclarationFragment@@FILE_NAME_ONLY="CamelFileNameOnly" @AT@ 1978 @LENGTH@ 19


INS MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @TO@ TypeDeclaration@@[public]SybasePagingQueryProviderTests, AbstractSqlPagingQueryProviderTests @AT@ 1217 @LENGTH@ 324
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1217 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1224 @LENGTH@ 4
---INS SimpleName@@MethodName:testGenerateJumpToItemQueryForFirstPage @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1229 @LENGTH@ 39
---INS VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1275 @LENGTH@ 156
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @AT@ 1275 @LENGTH@ 6
------INS VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @TO@ VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @AT@ 1282 @LENGTH@ 148
---------INS SimpleName@@sql @TO@ VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @AT@ 1282 @LENGTH@ 3
---------INS StringLiteral@@"SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @TO@ VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @AT@ 1288 @LENGTH@ 142
---INS VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1434 @LENGTH@ 69
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1434 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1441 @LENGTH@ 61
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1441 @LENGTH@ 1
---------INS MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1445 @LENGTH@ 57
------------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1445 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1465 @LENGTH@ 37
---------------INS NumberLiteral@@45 @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1489 @LENGTH@ 2
---------------INS SimpleName@@pageSize @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1493 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1506 @LENGTH@ 32
------INS MethodInvocation@@Assert.assertEquals("",sql,s) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @AT@ 1506 @LENGTH@ 31
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1506 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["", sql, s] @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1513 @LENGTH@ 24
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1526 @LENGTH@ 2
------------INS SimpleName@@sql @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1530 @LENGTH@ 3
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1535 @LENGTH@ 1


UPD VariableDeclarationStatement@@String message="Could not connect/login to: " + ((RemoteFileEndpoint)getEndpoint()).remoteServerInformation(); @TO@ String message="Cannot connect/login to: " + ((RemoteFileEndpoint)getEndpoint()).remoteServerInformation(); @AT@ 2938 @LENGTH@ 113
---UPD VariableDeclarationFragment@@message="Could not connect/login to: " + ((RemoteFileEndpoint)getEndpoint()).remoteServerInformation() @TO@ message="Cannot connect/login to: " + ((RemoteFileEndpoint)getEndpoint()).remoteServerInformation() @AT@ 2945 @LENGTH@ 105
------UPD InfixExpression@@"Could not connect/login to: " + ((RemoteFileEndpoint)getEndpoint()).remoteServerInformation() @TO@ "Cannot connect/login to: " + ((RemoteFileEndpoint)getEndpoint()).remoteServerInformation() @AT@ 2955 @LENGTH@ 95
---------UPD StringLiteral@@"Could not connect/login to: " @TO@ "Cannot connect/login to: " @AT@ 2955 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:assertEquals("target/lwd/hello.txt",body.getPath()) @TO@ MethodInvocation:assertEquals(FileUtil.normalizePath("target/lwd/hello.txt"),body.getPath()) @AT@ 3462 @LENGTH@ 53
---UPD MethodInvocation@@assertEquals("target/lwd/hello.txt",body.getPath()) @TO@ assertEquals(FileUtil.normalizePath("target/lwd/hello.txt"),body.getPath()) @AT@ 3462 @LENGTH@ 52
------UPD SimpleName@@MethodName:assertEquals:["target/lwd/hello.txt", body.getPath()] @TO@ MethodName:assertEquals:[FileUtil.normalizePath("target/lwd/hello.txt"), body.getPath()] @AT@ 3462 @LENGTH@ 52
---------INS MethodInvocation@@FileUtil.normalizePath("target/lwd/hello.txt") @TO@ SimpleName@@MethodName:assertEquals:["target/lwd/hello.txt", body.getPath()] @AT@ 3577 @LENGTH@ 46
------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.normalizePath("target/lwd/hello.txt") @AT@ 3577 @LENGTH@ 8
------------INS SimpleName@@MethodName:normalizePath:["target/lwd/hello.txt"] @TO@ MethodInvocation@@FileUtil.normalizePath("target/lwd/hello.txt") @AT@ 3586 @LENGTH@ 37
---------------MOV StringLiteral@@"target/lwd/hello.txt" @TO@ SimpleName@@MethodName:normalizePath:["target/lwd/hello.txt"] @AT@ 3475 @LENGTH@ 22
---------------MOV StringLiteral@@"target/lwd/hello.txt" @TO@ SimpleName@@MethodName:normalizePath:["target/lwd/hello.txt"] @AT@ 3475 @LENGTH@ 22


INS IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Connecting using FTPClient: " + client);} @TO@ MethodDeclaration@@public, boolean, MethodName:connect, RemoteFileConfiguration config, GenericFileOperationFailedException,  @AT@ 2287 @LENGTH@ 101
---INS MethodInvocation@@LOG.isTraceEnabled() @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Connecting using FTPClient: " + client);} @AT@ 2291 @LENGTH@ 20
------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 2291 @LENGTH@ 3
------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 2295 @LENGTH@ 16
---INS Block@@ThenBody:{  LOG.trace("Connecting using FTPClient: " + client);} @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Connecting using FTPClient: " + client);} @AT@ 2313 @LENGTH@ 75
------INS ExpressionStatement@@MethodInvocation:LOG.trace("Connecting using FTPClient: " + client) @TO@ Block@@ThenBody:{  LOG.trace("Connecting using FTPClient: " + client);} @AT@ 2327 @LENGTH@ 51
---------INS MethodInvocation@@LOG.trace("Connecting using FTPClient: " + client) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Connecting using FTPClient: " + client) @AT@ 2327 @LENGTH@ 50
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Connecting using FTPClient: " + client) @AT@ 2327 @LENGTH@ 3
------------INS SimpleName@@MethodName:trace:["Connecting using FTPClient: " + client] @TO@ MethodInvocation@@LOG.trace("Connecting using FTPClient: " + client) @AT@ 2331 @LENGTH@ 46
---------------INS InfixExpression@@"Connecting using FTPClient: " + client @TO@ SimpleName@@MethodName:trace:["Connecting using FTPClient: " + client] @AT@ 2337 @LENGTH@ 39
------------------INS StringLiteral@@"Connecting using FTPClient: " @TO@ InfixExpression@@"Connecting using FTPClient: " + client @AT@ 2337 @LENGTH@ 30
------------------INS Operator@@+ @TO@ InfixExpression@@"Connecting using FTPClient: " + client @AT@ 2367 @LENGTH@ 1
------------------INS SimpleName@@client @TO@ InfixExpression@@"Connecting using FTPClient: " + client @AT@ 2370 @LENGTH@ 6


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public, static, final]MyFooBean, [TypeConverter, Serializable] @AT@ 9139 @LENGTH@ 134
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9139 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9150 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9152 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9171 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 9171 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 9171 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 9177 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 9180 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9186 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 9186 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 9195 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9205 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 9205 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 9212 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9233 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 9240 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 9240 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 9250 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 9256 @LENGTH@ 5


UPD MethodDeclaration@@public, String, MethodName:getFileSeparator,  @TO@ public, char, MethodName:getFileSeparator,  @AT@ 1391 @LENGTH@ 105
---DEL SimpleType@@String @AT@ 1398 @LENGTH@ 6
---INS PrimitiveType@@char @TO@ MethodDeclaration@@public, String, MethodName:getFileSeparator,  @AT@ 1398 @LENGTH@ 4
---UPD ReturnStatement@@StringLiteral:"/" @TO@ CharacterLiteral:'/' @AT@ 1479 @LENGTH@ 11
------INS CharacterLiteral@@'/' @TO@ ReturnStatement@@StringLiteral:"/" @AT@ 1484 @LENGTH@ 3
------DEL StringLiteral@@"/" @AT@ 1486 @LENGTH@ 3


INS MethodDeclaration@@public, String, MethodName:getCarriageReturn,  @TO@ TypeDeclaration@@[public, abstract]BindyAbstractFactory, [BindyFactory] @AT@ 4261 @LENGTH@ 62
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getCarriageReturn,  @AT@ 4261 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getCarriageReturn,  @AT@ 4268 @LENGTH@ 6
---INS SimpleName@@MethodName:getCarriageReturn @TO@ MethodDeclaration@@public, String, MethodName:getCarriageReturn,  @AT@ 4275 @LENGTH@ 17
---INS ReturnStatement@@SimpleName:crlf @TO@ MethodDeclaration@@public, String, MethodName:getCarriageReturn,  @AT@ 4305 @LENGTH@ 12
------INS SimpleName@@crlf @TO@ ReturnStatement@@SimpleName:crlf @AT@ 4312 @LENGTH@ 4


UPD ReturnStatement@@InfixExpression:"" + expression + ".convertTo("+ type+ ")" @TO@ InfixExpression:"" + expression + ".convertToEvaluatedType("+ type+ ")" @AT@ 15049 @LENGTH@ 52
---UPD InfixExpression@@"" + expression + ".convertTo("+ type+ ")" @TO@ "" + expression + ".convertToEvaluatedType("+ type+ ")" @AT@ 15056 @LENGTH@ 44
------UPD StringLiteral@@".convertTo(" @TO@ ".convertToEvaluatedType(" @AT@ 15074 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:from("file://target/files/?recursive=false&delete=true").to("mock:result") @TO@ MethodInvocation:from("file://target/files/?fileName=report.txt&delete=true").to("mock:result") @AT@ 2379 @LENGTH@ 75
---UPD MethodInvocation@@from("file://target/files/?recursive=false&delete=true").to("mock:result") @TO@ from("file://target/files/?fileName=report.txt&delete=true").to("mock:result") @AT@ 2379 @LENGTH@ 74
------UPD MethodInvocation@@MethodName:from:["file://target/files/?recursive=false&delete=true"] @TO@ MethodName:from:["file://target/files/?fileName=report.txt&delete=true"] @AT@ 2379 @LENGTH@ 56
---------UPD StringLiteral@@"file://target/files/?recursive=false&delete=true" @TO@ "file://target/files/?fileName=report.txt&delete=true" @AT@ 2384 @LENGTH@ 50


UPD ReturnStatement@@InfixExpression:"not " + predicate @TO@ InfixExpression:"not (" + predicate + ")" @AT@ 2391 @LENGTH@ 26
---UPD InfixExpression@@"not " + predicate @TO@ "not (" + predicate + ")" @AT@ 2398 @LENGTH@ 18
------UPD StringLiteral@@"not " @TO@ "not (" @AT@ 2398 @LENGTH@ 6
------INS StringLiteral@@")" @TO@ InfixExpression@@"not " + predicate @AT@ 2420 @LENGTH@ 3


INS MethodDeclaration@@public, String, MethodName:createExchangeId,  @TO@ TypeDeclaration@@[public]JmsMessage, DefaultMessage @AT@ 6167 @LENGTH@ 341
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:createExchangeId,  @AT@ 6167 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:createExchangeId,  @AT@ 6174 @LENGTH@ 6
---INS SimpleName@@MethodName:createExchangeId @TO@ MethodDeclaration@@public, String, MethodName:createExchangeId,  @AT@ 6181 @LENGTH@ 16
---INS IfStatement@@if (jmsMessage != null) {  try {    return jmsMessage.getJMSMessageID();  } catch (  JMSException e) {    throw new RuntimeCamelException("Failed to get JMSMessageID property",e);  }} @TO@ MethodDeclaration@@public, String, MethodName:createExchangeId,  @AT@ 6210 @LENGTH@ 250
------INS InfixExpression@@jmsMessage != null @TO@ IfStatement@@if (jmsMessage != null) {  try {    return jmsMessage.getJMSMessageID();  } catch (  JMSException e) {    throw new RuntimeCamelException("Failed to get JMSMessageID property",e);  }} @AT@ 6214 @LENGTH@ 18
---------INS SimpleName@@jmsMessage @TO@ InfixExpression@@jmsMessage != null @AT@ 6214 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@jmsMessage != null @AT@ 6224 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@jmsMessage != null @AT@ 6228 @LENGTH@ 4
------INS Block@@ThenBody:{  try {    return jmsMessage.getJMSMessageID();  } catch (  JMSException e) {    throw new RuntimeCamelException("Failed to get JMSMessageID property",e);  }} @TO@ IfStatement@@if (jmsMessage != null) {  try {    return jmsMessage.getJMSMessageID();  } catch (  JMSException e) {    throw new RuntimeCamelException("Failed to get JMSMessageID property",e);  }} @AT@ 6234 @LENGTH@ 226
---------INS TryStatement@@try {  return jmsMessage.getJMSMessageID();} catch (JMSException e) {  throw new RuntimeCamelException("Failed to get JMSMessageID property",e);} @TO@ Block@@ThenBody:{  try {    return jmsMessage.getJMSMessageID();  } catch (  JMSException e) {    throw new RuntimeCamelException("Failed to get JMSMessageID property",e);  }} @AT@ 6248 @LENGTH@ 202
------------INS ReturnStatement@@MethodInvocation:jmsMessage.getJMSMessageID() @TO@ TryStatement@@try {  return jmsMessage.getJMSMessageID();} catch (JMSException e) {  throw new RuntimeCamelException("Failed to get JMSMessageID property",e);} @AT@ 6270 @LENGTH@ 36
---------------INS MethodInvocation@@jmsMessage.getJMSMessageID() @TO@ ReturnStatement@@MethodInvocation:jmsMessage.getJMSMessageID() @AT@ 6277 @LENGTH@ 28
------------------INS SimpleName@@Name:jmsMessage @TO@ MethodInvocation@@jmsMessage.getJMSMessageID() @AT@ 6277 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getJMSMessageID:[] @TO@ MethodInvocation@@jmsMessage.getJMSMessageID() @AT@ 6288 @LENGTH@ 17
------------INS CatchClause@@catch (JMSException e) {  throw new RuntimeCamelException("Failed to get JMSMessageID property",e);} @TO@ TryStatement@@try {  return jmsMessage.getJMSMessageID();} catch (JMSException e) {  throw new RuntimeCamelException("Failed to get JMSMessageID property",e);} @AT@ 6321 @LENGTH@ 129
---------------INS SingleVariableDeclaration@@JMSException e @TO@ CatchClause@@catch (JMSException e) {  throw new RuntimeCamelException("Failed to get JMSMessageID property",e);} @AT@ 6328 @LENGTH@ 14
------------------INS SimpleType@@JMSException @TO@ SingleVariableDeclaration@@JMSException e @AT@ 6328 @LENGTH@ 12
------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@JMSException e @AT@ 6341 @LENGTH@ 1
---------------INS ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException("Failed to get JMSMessageID property",e) @TO@ CatchClause@@catch (JMSException e) {  throw new RuntimeCamelException("Failed to get JMSMessageID property",e);} @AT@ 6362 @LENGTH@ 74
------------------INS ClassInstanceCreation@@RuntimeCamelException["Failed to get JMSMessageID property", e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException("Failed to get JMSMessageID property",e) @AT@ 6368 @LENGTH@ 67
---------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeCamelException["Failed to get JMSMessageID property", e] @AT@ 6368 @LENGTH@ 3
---------------------INS SimpleType@@RuntimeCamelException @TO@ ClassInstanceCreation@@RuntimeCamelException["Failed to get JMSMessageID property", e] @AT@ 6372 @LENGTH@ 21
---------------------INS StringLiteral@@"Failed to get JMSMessageID property" @TO@ ClassInstanceCreation@@RuntimeCamelException["Failed to get JMSMessageID property", e] @AT@ 6394 @LENGTH@ 37
---------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeCamelException["Failed to get JMSMessageID property", e] @AT@ 6433 @LENGTH@ 1
---INS ReturnStatement@@SuperMethodInvocation:super.createExchangeId() @TO@ MethodDeclaration@@public, String, MethodName:createExchangeId,  @AT@ 6469 @LENGTH@ 32
------INS SuperMethodInvocation@@super.createExchangeId() @TO@ ReturnStatement@@SuperMethodInvocation:super.createExchangeId() @AT@ 6476 @LENGTH@ 24
---------INS SimpleName@@MethodName:createExchangeId:[] @TO@ SuperMethodInvocation@@super.createExchangeId() @AT@ 6482 @LENGTH@ 16


UPD Block@@ThenBody:{  List<ProcessorDefinition> outputs=new ArrayList<ProcessorDefinition>(routeType.getOutputs());  routeType.clearOutput();  for (  ProcessorDefinition processorType : outputs) {    routeType.addOutput(processorType);  }} @TO@ ThenBody:{  List<ProcessorDefinition> outputs=new ArrayList<ProcessorDefinition>(routeType.getOutputs());  routeType.clearOutput();  List<ProcessorDefinition> counterList=new ArrayList<ProcessorDefinition>();  for (  ProcessorDefinition processorType : outputs) {    routeType.addOutput(processorType);    counterList.add(processorType);  }  routeContext.setErrorHandlerWrappingStrategy(new DefaultErrorHandlerWrappingStrategy(routeContext,counterList));} @AT@ 1926 @LENGTH@ 432
---INS VariableDeclarationStatement@@List<ProcessorDefinition> counterList=new ArrayList<ProcessorDefinition>(); @TO@ Block@@ThenBody:{  List<ProcessorDefinition> outputs=new ArrayList<ProcessorDefinition>(routeType.getOutputs());  routeType.clearOutput();  for (  ProcessorDefinition processorType : outputs) {    routeType.addOutput(processorType);  }} @AT@ 2210 @LENGTH@ 77
------INS ParameterizedType@@List<ProcessorDefinition> @TO@ VariableDeclarationStatement@@List<ProcessorDefinition> counterList=new ArrayList<ProcessorDefinition>(); @AT@ 2210 @LENGTH@ 25
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 2210 @LENGTH@ 4
---------INS SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 2215 @LENGTH@ 19
------INS VariableDeclarationFragment@@counterList=new ArrayList<ProcessorDefinition>() @TO@ VariableDeclarationStatement@@List<ProcessorDefinition> counterList=new ArrayList<ProcessorDefinition>(); @AT@ 2236 @LENGTH@ 50
---------INS SimpleName@@counterList @TO@ VariableDeclarationFragment@@counterList=new ArrayList<ProcessorDefinition>() @AT@ 2236 @LENGTH@ 11
---------INS ClassInstanceCreation@@ArrayList<ProcessorDefinition>[] @TO@ VariableDeclarationFragment@@counterList=new ArrayList<ProcessorDefinition>() @AT@ 2250 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<ProcessorDefinition>[] @AT@ 2250 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<ProcessorDefinition> @TO@ ClassInstanceCreation@@ArrayList<ProcessorDefinition>[] @AT@ 2254 @LENGTH@ 30
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<ProcessorDefinition> @AT@ 2254 @LENGTH@ 9
---------------INS SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ArrayList<ProcessorDefinition> @AT@ 2264 @LENGTH@ 19
---UPD EnhancedForStatement@@for (ProcessorDefinition processorType : outputs) {  routeType.addOutput(processorType);} @TO@ for (ProcessorDefinition processorType : outputs) {  routeType.addOutput(processorType);  counterList.add(processorType);} @AT@ 2231 @LENGTH@ 117
------INS ExpressionStatement@@MethodInvocation:counterList.add(processorType) @TO@ EnhancedForStatement@@for (ProcessorDefinition processorType : outputs) {  routeType.addOutput(processorType);} @AT@ 2492 @LENGTH@ 31
---------INS MethodInvocation@@counterList.add(processorType) @TO@ ExpressionStatement@@MethodInvocation:counterList.add(processorType) @AT@ 2492 @LENGTH@ 30
------------INS SimpleName@@Name:counterList @TO@ MethodInvocation@@counterList.add(processorType) @AT@ 2492 @LENGTH@ 11
------------INS SimpleName@@MethodName:add:[processorType] @TO@ MethodInvocation@@counterList.add(processorType) @AT@ 2504 @LENGTH@ 18
---------------INS SimpleName@@processorType @TO@ SimpleName@@MethodName:add:[processorType] @AT@ 2508 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:routeContext.setErrorHandlerWrappingStrategy(new DefaultErrorHandlerWrappingStrategy(routeContext,counterList)) @TO@ Block@@ThenBody:{  List<ProcessorDefinition> outputs=new ArrayList<ProcessorDefinition>(routeType.getOutputs());  routeType.clearOutput();  for (  ProcessorDefinition processorType : outputs) {    routeType.addOutput(processorType);  }} @AT@ 2709 @LENGTH@ 113
------INS MethodInvocation@@routeContext.setErrorHandlerWrappingStrategy(new DefaultErrorHandlerWrappingStrategy(routeContext,counterList)) @TO@ ExpressionStatement@@MethodInvocation:routeContext.setErrorHandlerWrappingStrategy(new DefaultErrorHandlerWrappingStrategy(routeContext,counterList)) @AT@ 2709 @LENGTH@ 112
---------INS SimpleName@@Name:routeContext @TO@ MethodInvocation@@routeContext.setErrorHandlerWrappingStrategy(new DefaultErrorHandlerWrappingStrategy(routeContext,counterList)) @AT@ 2709 @LENGTH@ 12
---------INS SimpleName@@MethodName:setErrorHandlerWrappingStrategy:[new DefaultErrorHandlerWrappingStrategy(routeContext,counterList)] @TO@ MethodInvocation@@routeContext.setErrorHandlerWrappingStrategy(new DefaultErrorHandlerWrappingStrategy(routeContext,counterList)) @AT@ 2722 @LENGTH@ 99
------------INS ClassInstanceCreation@@DefaultErrorHandlerWrappingStrategy[routeContext, counterList] @TO@ SimpleName@@MethodName:setErrorHandlerWrappingStrategy:[new DefaultErrorHandlerWrappingStrategy(routeContext,counterList)] @AT@ 2754 @LENGTH@ 66
---------------INS New@@new @TO@ ClassInstanceCreation@@DefaultErrorHandlerWrappingStrategy[routeContext, counterList] @AT@ 2754 @LENGTH@ 3
---------------INS SimpleType@@DefaultErrorHandlerWrappingStrategy @TO@ ClassInstanceCreation@@DefaultErrorHandlerWrappingStrategy[routeContext, counterList] @AT@ 2758 @LENGTH@ 35
---------------INS SimpleName@@routeContext @TO@ ClassInstanceCreation@@DefaultErrorHandlerWrappingStrategy[routeContext, counterList] @AT@ 2794 @LENGTH@ 12
---------------INS SimpleName@@counterList @TO@ ClassInstanceCreation@@DefaultErrorHandlerWrappingStrategy[routeContext, counterList] @AT@ 2808 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:expression.toString() @TO@ SimpleName:expression @AT@ 2665 @LENGTH@ 29
---INS SimpleName@@expression @TO@ ReturnStatement@@MethodInvocation:expression.toString() @AT@ 2645 @LENGTH@ 10
---DEL MethodInvocation@@expression.toString() @AT@ 2672 @LENGTH@ 21
------DEL SimpleName@@Name:expression @AT@ 2672 @LENGTH@ 10
------DEL SimpleName@@MethodName:toString:[] @AT@ 2683 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertEquals("There should have a coverter",registry.getTypeConverters().size(),1) @TO@ MethodInvocation:assertTrue("There should have at lest one coverter",registry.getTypeConverters().size() >= 1) @AT@ 1365 @LENGTH@ 85
---UPD MethodInvocation@@assertEquals("There should have a coverter",registry.getTypeConverters().size(),1) @TO@ assertTrue("There should have at lest one coverter",registry.getTypeConverters().size() >= 1) @AT@ 1365 @LENGTH@ 84
------UPD SimpleName@@MethodName:assertEquals:["There should have a coverter", registry.getTypeConverters().size(), 1] @TO@ MethodName:assertTrue:["There should have at lest one coverter", registry.getTypeConverters().size() >= 1] @AT@ 1365 @LENGTH@ 84
---------UPD StringLiteral@@"There should have a coverter" @TO@ "There should have at lest one coverter" @AT@ 1378 @LENGTH@ 30
---------DEL MethodInvocation@@registry.getTypeConverters().size() @AT@ 1410 @LENGTH@ 35
---------DEL NumberLiteral@@1 @AT@ 1447 @LENGTH@ 1
---------INS InfixExpression@@registry.getTypeConverters().size() >= 1 @TO@ SimpleName@@MethodName:assertEquals:["There should have a coverter", registry.getTypeConverters().size(), 1] @AT@ 1451 @LENGTH@ 40
------------INS MethodInvocation@@registry.getTypeConverters().size() @TO@ InfixExpression@@registry.getTypeConverters().size() >= 1 @AT@ 1451 @LENGTH@ 35
---------------MOV MethodInvocation@@MethodName:getTypeConverters:[] @TO@ MethodInvocation@@registry.getTypeConverters().size() @AT@ 1410 @LENGTH@ 28
---------------MOV MethodInvocation@@MethodName:getTypeConverters:[] @TO@ MethodInvocation@@registry.getTypeConverters().size() @AT@ 1410 @LENGTH@ 28
---------------MOV SimpleName@@Name:registry @TO@ MethodInvocation@@registry.getTypeConverters().size() @AT@ 1410 @LENGTH@ 8
---------------MOV SimpleName@@Name:registry @TO@ MethodInvocation@@registry.getTypeConverters().size() @AT@ 1410 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@registry.getTypeConverters().size() @AT@ 1439 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@registry.getTypeConverters().size() @AT@ 1439 @LENGTH@ 6
------------INS Operator@@>= @TO@ InfixExpression@@registry.getTypeConverters().size() >= 1 @AT@ 1486 @LENGTH@ 2
------------INS NumberLiteral@@1 @TO@ InfixExpression@@registry.getTypeConverters().size() >= 1 @AT@ 1490 @LENGTH@ 1


UPD ThrowStatement@@ClassInstanceCreation:new IOException("Can not delete file: " + file) @TO@ ClassInstanceCreation:new IOException("Cannot delete file: " + file) @AT@ 1787 @LENGTH@ 54
---UPD ClassInstanceCreation@@IOException["Can not delete file: " + file] @TO@ IOException["Cannot delete file: " + file] @AT@ 1793 @LENGTH@ 47
------UPD InfixExpression@@"Can not delete file: " + file @TO@ "Cannot delete file: " + file @AT@ 1809 @LENGTH@ 30
---------UPD StringLiteral@@"Can not delete file: " @TO@ "Cannot delete file: " @AT@ 1809 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 1534 @LENGTH@ 100
---UPD MethodInvocation@@template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 1534 @LENGTH@ 99
------UPD SimpleName@@MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 1543 @LENGTH@ 90
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 1589 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 1589 @LENGTH@ 13


UPD VariableDeclarationStatement@@String out=(String)template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec",in.toString()); @TO@ String out=(String)template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec",in.toString()); @AT@ 3039 @LENGTH@ 110
---UPD VariableDeclarationFragment@@out=(String)template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec",in.toString()) @TO@ out=(String)template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec",in.toString()) @AT@ 3046 @LENGTH@ 102
------UPD CastExpression@@(String)template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec",in.toString()) @TO@ (String)template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec",in.toString()) @AT@ 3052 @LENGTH@ 96
---------UPD MethodInvocation@@template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec",in.toString()) @TO@ template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec",in.toString()) @AT@ 3060 @LENGTH@ 88
------------UPD SimpleName@@MethodName:requestBody:["mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec", in.toString()] @TO@ MethodName:requestBody:["mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec", in.toString()] @AT@ 3069 @LENGTH@ 79
---------------UPD StringLiteral@@"mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec" @TO@ "mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec" @AT@ 3081 @LENGTH@ 51


UPD ThrowStatement@@ClassInstanceCreation:new OrderFailedException("Can not order: kaboom") @TO@ ClassInstanceCreation:new OrderFailedException("Cannot order: kaboom") @AT@ 4726 @LENGTH@ 56
---UPD ClassInstanceCreation@@OrderFailedException["Can not order: kaboom"] @TO@ OrderFailedException["Cannot order: kaboom"] @AT@ 4732 @LENGTH@ 49
------UPD StringLiteral@@"Can not order: kaboom" @TO@ "Cannot order: kaboom" @AT@ 4757 @LENGTH@ 23


UPD VariableDeclarationStatement@@List<DataHolder> answer=new ArrayList<DataHolder>(); @TO@ Queue<DataHolder> answer=new LinkedList<DataHolder>(); @AT@ 4337 @LENGTH@ 54
---UPD ParameterizedType@@List<DataHolder> @TO@ Queue<DataHolder> @AT@ 4337 @LENGTH@ 16
------UPD SimpleType@@List @TO@ Queue @AT@ 4337 @LENGTH@ 4
---UPD VariableDeclarationFragment@@answer=new ArrayList<DataHolder>() @TO@ answer=new LinkedList<DataHolder>() @AT@ 4354 @LENGTH@ 36
------UPD ClassInstanceCreation@@ArrayList<DataHolder>[] @TO@ LinkedList<DataHolder>[] @AT@ 4363 @LENGTH@ 27
---------UPD ParameterizedType@@ArrayList<DataHolder> @TO@ LinkedList<DataHolder> @AT@ 4367 @LENGTH@ 21
------------UPD SimpleType@@ArrayList @TO@ LinkedList @AT@ 4367 @LENGTH@ 9


UPD FieldDeclaration@@public, static, final, String, [JAXB_CONTEXT_PACKAGES="org.apache.camel:" + "org.apache.camel.model:" + "org.apache.camel.model.config:"+ "org.apache.camel.model.dataformat:"+ "org.apache.camel.model.language:"+ "org.apache.camel.model.loadbalancer"] @TO@ public, static, final, String, [JAXB_CONTEXT_PACKAGES="" + "org.apache.camel:" + "org.apache.camel.model:"+ "org.apache.camel.model.config:"+ "org.apache.camel.model.dataformat:"+ "org.apache.camel.model.language:"+ "org.apache.camel.model.loadbalancer"] @AT@ 909 @LENGTH@ 304
---UPD VariableDeclarationFragment@@JAXB_CONTEXT_PACKAGES="org.apache.camel:" + "org.apache.camel.model:" + "org.apache.camel.model.config:"+ "org.apache.camel.model.dataformat:"+ "org.apache.camel.model.language:"+ "org.apache.camel.model.loadbalancer" @TO@ JAXB_CONTEXT_PACKAGES="" + "org.apache.camel:" + "org.apache.camel.model:"+ "org.apache.camel.model.config:"+ "org.apache.camel.model.dataformat:"+ "org.apache.camel.model.language:"+ "org.apache.camel.model.loadbalancer" @AT@ 936 @LENGTH@ 276
------UPD InfixExpression@@"org.apache.camel:" + "org.apache.camel.model:" + "org.apache.camel.model.config:"+ "org.apache.camel.model.dataformat:"+ "org.apache.camel.model.language:"+ "org.apache.camel.model.loadbalancer" @TO@ "" + "org.apache.camel:" + "org.apache.camel.model:"+ "org.apache.camel.model.config:"+ "org.apache.camel.model.dataformat:"+ "org.apache.camel.model.language:"+ "org.apache.camel.model.loadbalancer" @AT@ 969 @LENGTH@ 243
---------UPD StringLiteral@@"org.apache.camel:" @TO@ "" @AT@ 969 @LENGTH@ 19
---------INS StringLiteral@@"org.apache.camel:" @TO@ InfixExpression@@"org.apache.camel:" + "org.apache.camel.model:" + "org.apache.camel.model.config:"+ "org.apache.camel.model.dataformat:"+ "org.apache.camel.model.language:"+ "org.apache.camel.model.loadbalancer" @AT@ 974 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:from("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @AT@ 2054 @LENGTH@ 735
---UPD MethodInvocation@@from("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @TO@ from("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @AT@ 2054 @LENGTH@ 734
------UPD MethodInvocation@@MethodName:from:["mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec"] @TO@ MethodName:from:["mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec"] @AT@ 2054 @LENGTH@ 57
---------UPD StringLiteral@@"mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec" @TO@ "mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec" @AT@ 2059 @LENGTH@ 51


INS MethodDeclaration@@public, long, MethodName:getBufferSize,  @TO@ TypeDeclaration@@[public]TransactionAwareBufferedWriter, Writer @AT@ 2800 @LENGTH@ 118
---INS Modifier@@public @TO@ MethodDeclaration@@public, long, MethodName:getBufferSize,  @AT@ 2800 @LENGTH@ 6
---INS PrimitiveType@@long @TO@ MethodDeclaration@@public, long, MethodName:getBufferSize,  @AT@ 2807 @LENGTH@ 4
---INS SimpleName@@MethodName:getBufferSize @TO@ MethodDeclaration@@public, long, MethodName:getBufferSize,  @AT@ 2812 @LENGTH@ 13
---INS IfStatement@@if (!transactionActive()) {  return 0L;} @TO@ MethodDeclaration@@public, long, MethodName:getBufferSize,  @AT@ 2832 @LENGTH@ 45
------INS PrefixExpression@@!transactionActive() @TO@ IfStatement@@if (!transactionActive()) {  return 0L;} @AT@ 2836 @LENGTH@ 20
---------INS Operator@@! @TO@ PrefixExpression@@!transactionActive() @AT@ 2836 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:transactionActive:[] @TO@ PrefixExpression@@!transactionActive() @AT@ 2837 @LENGTH@ 19
------INS Block@@ThenBody:{  return 0L;} @TO@ IfStatement@@if (!transactionActive()) {  return 0L;} @AT@ 2858 @LENGTH@ 19
---------INS ReturnStatement@@NumberLiteral:0L @TO@ Block@@ThenBody:{  return 0L;} @AT@ 2863 @LENGTH@ 10
------------INS NumberLiteral@@0L @TO@ ReturnStatement@@NumberLiteral:0L @AT@ 2870 @LENGTH@ 2
---INS ReturnStatement@@MethodInvocation:getCurrentBuffer().length() @TO@ MethodDeclaration@@public, long, MethodName:getBufferSize,  @AT@ 2880 @LENGTH@ 35
------INS MethodInvocation@@getCurrentBuffer().length() @TO@ ReturnStatement@@MethodInvocation:getCurrentBuffer().length() @AT@ 2887 @LENGTH@ 27
---------INS MethodInvocation@@MethodName:getCurrentBuffer:[] @TO@ MethodInvocation@@getCurrentBuffer().length() @AT@ 2887 @LENGTH@ 18
---------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@getCurrentBuffer().length() @AT@ 2906 @LENGTH@ 8


UPD ReturnStatement@@SimpleName:DOS_TIME_MIN @TO@ CastExpression:(byte[])DOS_TIME_MIN.clone() @AT@ 1978 @LENGTH@ 20
---DEL SimpleName@@DOS_TIME_MIN @AT@ 1985 @LENGTH@ 12
---INS CastExpression@@(byte[])DOS_TIME_MIN.clone() @TO@ ReturnStatement@@SimpleName:DOS_TIME_MIN @AT@ 2068 @LENGTH@ 29
------INS ArrayType@@byte[] @TO@ CastExpression@@(byte[])DOS_TIME_MIN.clone() @AT@ 2069 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2069 @LENGTH@ 4
------INS MethodInvocation@@DOS_TIME_MIN.clone() @TO@ CastExpression@@(byte[])DOS_TIME_MIN.clone() @AT@ 2077 @LENGTH@ 20
---------INS SimpleName@@Name:DOS_TIME_MIN @TO@ MethodInvocation@@DOS_TIME_MIN.clone() @AT@ 2077 @LENGTH@ 12
---------INS SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@DOS_TIME_MIN.clone() @AT@ 2090 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:root.setTrustResolver(trustResolver) @TO@ MethodDeclaration@@public, EvaluationContext, MethodName:createEvaluationContext, Authentication authentication, FilterInvocation fi,  @AT@ 2986 @LENGTH@ 37
---INS MethodInvocation@@root.setTrustResolver(trustResolver) @TO@ ExpressionStatement@@MethodInvocation:root.setTrustResolver(trustResolver) @AT@ 2986 @LENGTH@ 36
------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.setTrustResolver(trustResolver) @AT@ 2986 @LENGTH@ 4
------INS SimpleName@@MethodName:setTrustResolver:[trustResolver] @TO@ MethodInvocation@@root.setTrustResolver(trustResolver) @AT@ 2991 @LENGTH@ 31
---------INS SimpleName@@trustResolver @TO@ SimpleName@@MethodName:setTrustResolver:[trustResolver] @AT@ 3008 @LENGTH@ 13


UPD ReturnStatement@@InfixExpression:count % 2 == 1 @TO@ InfixExpression:count % 2 != 0 @AT@ 6760 @LENGTH@ 22
---UPD InfixExpression@@count % 2 == 1 @TO@ count % 2 != 0 @AT@ 6767 @LENGTH@ 14
------UPD Operator@@== @TO@ != @AT@ 6776 @LENGTH@ 2
------UPD NumberLiteral@@1 @TO@ 0 @AT@ 6780 @LENGTH@ 1


UPD TryStatement@@try {  File source=null;  try {    if (exchange.getIn().getBody() instanceof File || exchange.getIn().getBody() instanceof GenericFile) {      source=exchange.getIn().getBody(File.class);    }  } catch (  NoTypeConversionAvailableException e) {  }  if (source != null) {    File local=exchange.getIn().getHeader(Exchange.FILE_LOCAL_WORK_PATH,File.class);    if (local != null && local.exists()) {      boolean renamed=writeFileByLocalWorkPath(local,file);      if (renamed) {        exchange.getIn().setHeader(Exchange.FILE_LOCAL_WORK_PATH,null);        return true;      }    } else     if (source.exists()) {      writeFileByFile(source,file);      return true;    }  }  InputStream in=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class);  writeFileByStream(in,file);  return true;} catch (IOException e) {  throw new GenericFileOperationFailedException("Cannot store file: " + file,e);}catch (InvalidPayloadException e) {  throw new GenericFileOperationFailedException("Cannot store file: " + file,e);} @TO@ try {  File source=null;  if (exchange.getIn().getBody() instanceof File || exchange.getIn().getBody() instanceof GenericFile) {    source=exchange.getIn().getBody(File.class);  }  if (source != null) {    File local=exchange.getIn().getHeader(Exchange.FILE_LOCAL_WORK_PATH,File.class);    if (local != null && local.exists()) {      boolean renamed=writeFileByLocalWorkPath(local,file);      if (renamed) {        exchange.getIn().setHeader(Exchange.FILE_LOCAL_WORK_PATH,null);        return true;      }    } else     if (source.exists()) {      writeFileByFile(source,file);      return true;    }  }  InputStream in=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class);  writeFileByStream(in,file);  return true;} catch (IOException e) {  throw new GenericFileOperationFailedException("Cannot store file: " + file,e);}catch (InvalidPayloadException e) {  throw new GenericFileOperationFailedException("Cannot store file: " + file,e);} @AT@ 5235 @LENGTH@ 2101
---DEL TryStatement@@try {  if (exchange.getIn().getBody() instanceof File || exchange.getIn().getBody() instanceof GenericFile) {    source=exchange.getIn().getBody(File.class);  }} catch (NoTypeConversionAvailableException e) {} @AT@ 5324 @LENGTH@ 310
------DEL CatchClause@@catch (NoTypeConversionAvailableException e) {} @AT@ 5548 @LENGTH@ 86
---------DEL SingleVariableDeclaration@@NoTypeConversionAvailableException e @AT@ 5555 @LENGTH@ 36
------------DEL SimpleType@@NoTypeConversionAvailableException @AT@ 5555 @LENGTH@ 34
------------DEL SimpleName@@e @AT@ 5590 @LENGTH@ 1
---MOV IfStatement@@if (exchange.getIn().getBody() instanceof File || exchange.getIn().getBody() instanceof GenericFile) {  source=exchange.getIn().getBody(File.class);} @TO@ TryStatement@@try {  File source=null;  try {    if (exchange.getIn().getBody() instanceof File || exchange.getIn().getBody() instanceof GenericFile) {      source=exchange.getIn().getBody(File.class);    }  } catch (  NoTypeConversionAvailableException e) {  }  if (source != null) {    File local=exchange.getIn().getHeader(Exchange.FILE_LOCAL_WORK_PATH,File.class);    if (local != null && local.exists()) {      boolean renamed=writeFileByLocalWorkPath(local,file);      if (renamed) {        exchange.getIn().setHeader(Exchange.FILE_LOCAL_WORK_PATH,null);        return true;      }    } else     if (source.exists()) {      writeFileByFile(source,file);      return true;    }  }  InputStream in=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class);  writeFileByStream(in,file);  return true;} catch (IOException e) {  throw new GenericFileOperationFailedException("Cannot store file: " + file,e);}catch (InvalidPayloadException e) {  throw new GenericFileOperationFailedException("Cannot store file: " + file,e);} @AT@ 5346 @LENGTH@ 187


UPD ThrowStatement@@ClassInstanceCreation:new ConnectException("Forced for testing - can not connect to remote server") @TO@ ClassInstanceCreation:new ConnectException("Forced for testing - cannot connect to remote server") @AT@ 8559 @LENGTH@ 84
---UPD ClassInstanceCreation@@ConnectException["Forced for testing - can not connect to remote server"] @TO@ ConnectException["Forced for testing - cannot connect to remote server"] @AT@ 8565 @LENGTH@ 77
------UPD StringLiteral@@"Forced for testing - can not connect to remote server" @TO@ "Forced for testing - cannot connect to remote server" @AT@ 8586 @LENGTH@ 55


INS VariableDeclarationStatement@@int signatureLength=input.read(signature); @TO@ MethodDeclaration@@public, ArchiveInputStream, MethodName:createArchiveInputStream, final InputStream input, IOException,  @AT@ 3584 @LENGTH@ 44
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int signatureLength=input.read(signature); @AT@ 3584 @LENGTH@ 3
---INS VariableDeclarationFragment@@signatureLength=input.read(signature) @TO@ VariableDeclarationStatement@@int signatureLength=input.read(signature); @AT@ 3588 @LENGTH@ 39
------MOV MethodInvocation@@input.read(signature) @TO@ VariableDeclarationFragment@@signatureLength=input.read(signature) @AT@ 3584 @LENGTH@ 21
------INS SimpleName@@signatureLength @TO@ VariableDeclarationFragment@@signatureLength=input.read(signature) @AT@ 3588 @LENGTH@ 15


UPD MethodDeclaration@@public, void, MethodName:setDeadLetterUri, final String deadLetterUri,  @TO@ public, void, MethodName:setDeadLetterUri, String deadLetterUri,  @AT@ 7880 @LENGTH@ 140
---UPD SingleVariableDeclaration@@final String deadLetterUri @TO@ String deadLetterUri @AT@ 7909 @LENGTH@ 26
------DEL Modifier@@final @AT@ 7909 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:requestor=new Requestor(getConfiguration(),getExecutorService()) @TO@ Assignment:requestor=new Requestor(getConfiguration(),getScheduledExecutorService()) @AT@ 11742 @LENGTH@ 68
---UPD Assignment@@requestor=new Requestor(getConfiguration(),getExecutorService()) @TO@ requestor=new Requestor(getConfiguration(),getScheduledExecutorService()) @AT@ 11742 @LENGTH@ 67
------UPD ClassInstanceCreation@@Requestor[getConfiguration(), getExecutorService()] @TO@ Requestor[getConfiguration(), getScheduledExecutorService()] @AT@ 11754 @LENGTH@ 55
---------UPD MethodInvocation@@MethodName:getExecutorService:[] @TO@ MethodName:getScheduledExecutorService:[] @AT@ 11788 @LENGTH@ 20


INS MethodDeclaration@@public, String, MethodName:createExchangeId,  @TO@ TypeDeclaration@@[public]DefaultMessage, MessageSupport @AT@ 5187 @LENGTH@ 61
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:createExchangeId,  @AT@ 5187 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:createExchangeId,  @AT@ 5194 @LENGTH@ 6
---INS SimpleName@@MethodName:createExchangeId @TO@ MethodDeclaration@@public, String, MethodName:createExchangeId,  @AT@ 5201 @LENGTH@ 16
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, String, MethodName:createExchangeId,  @AT@ 5230 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 5237 @LENGTH@ 4


UPD VariableDeclarationStatement@@final String name=target.getAbsoluteFileName(); @TO@ final String name=target.getAbsoluteFilePath(); @AT@ 5631 @LENGTH@ 49
---UPD VariableDeclarationFragment@@name=target.getAbsoluteFileName() @TO@ name=target.getAbsoluteFilePath() @AT@ 5644 @LENGTH@ 35
------UPD MethodInvocation@@target.getAbsoluteFileName() @TO@ target.getAbsoluteFilePath() @AT@ 5651 @LENGTH@ 28
---------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 5658 @LENGTH@ 21


INS MethodDeclaration@@public, Object, MethodName:clone,  @TO@ TypeDeclaration@@[public, final]ZipShort, [Cloneable] @AT@ 4146 @LENGTH@ 222
---INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:clone,  @AT@ 4146 @LENGTH@ 6
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:clone,  @AT@ 4153 @LENGTH@ 6
---INS SimpleName@@MethodName:clone @TO@ MethodDeclaration@@public, Object, MethodName:clone,  @AT@ 4160 @LENGTH@ 5
---INS TryStatement@@try {  return (ZipShort)super.clone();} catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @TO@ MethodDeclaration@@public, Object, MethodName:clone,  @AT@ 4178 @LENGTH@ 184
------INS ReturnStatement@@CastExpression:(ZipShort)super.clone() @TO@ TryStatement@@try {  return (ZipShort)super.clone();} catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 4196 @LENGTH@ 32
---------INS CastExpression@@(ZipShort)super.clone() @TO@ ReturnStatement@@CastExpression:(ZipShort)super.clone() @AT@ 4203 @LENGTH@ 24
------------INS SimpleType@@ZipShort @TO@ CastExpression@@(ZipShort)super.clone() @AT@ 4204 @LENGTH@ 8
------------INS SuperMethodInvocation@@super.clone() @TO@ CastExpression@@(ZipShort)super.clone() @AT@ 4214 @LENGTH@ 13
---------------INS SimpleName@@MethodName:clone:[] @TO@ SuperMethodInvocation@@super.clone() @AT@ 4220 @LENGTH@ 5
------INS CatchClause@@catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @TO@ TryStatement@@try {  return (ZipShort)super.clone();} catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 4239 @LENGTH@ 123
---------INS SingleVariableDeclaration@@CloneNotSupportedException cnfe @TO@ CatchClause@@catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 4246 @LENGTH@ 31
------------INS SimpleType@@CloneNotSupportedException @TO@ SingleVariableDeclaration@@CloneNotSupportedException cnfe @AT@ 4246 @LENGTH@ 26
------------INS SimpleName@@cnfe @TO@ SingleVariableDeclaration@@CloneNotSupportedException cnfe @AT@ 4273 @LENGTH@ 4
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(cnfe) @TO@ CatchClause@@catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 4319 @LENGTH@ 33
------------INS ClassInstanceCreation@@RuntimeException[cnfe] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(cnfe) @AT@ 4325 @LENGTH@ 26
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[cnfe] @AT@ 4325 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[cnfe] @AT@ 4329 @LENGTH@ 16
---------------INS SimpleName@@cnfe @TO@ ClassInstanceCreation@@RuntimeException[cnfe] @AT@ 4346 @LENGTH@ 4


INS MethodDeclaration@@T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]TypeConverter,  @AT@ 2776 @LENGTH@ 67
---INS SimpleType@@T @TO@ MethodDeclaration@@T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2774 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2776 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2795 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2795 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2795 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2801 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2804 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2810 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2810 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2819 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2829 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2829 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2836 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 1813 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 1813 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 1830 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 1840 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 1840 @LENGTH@ 13


UPD MethodDeclaration@@public, Object, MethodName:getBean, Exception,  @TO@ public, Object, MethodName:getBean, NoBeanAvailableException,  @AT@ 2196 @LENGTH@ 432
---UPD SimpleType@@Exception @TO@ NoBeanAvailableException @AT@ 2227 @LENGTH@ 9


UPD FieldDeclaration@@String, [CONTENT_TYPE="CamelCxfBeanContextType"] @TO@ String, [CONTENT_TYPE="CamelCxfBeanContentType"] @AT@ 969 @LENGTH@ 48
---UPD VariableDeclarationFragment@@CONTENT_TYPE="CamelCxfBeanContextType" @TO@ CONTENT_TYPE="CamelCxfBeanContentType" @AT@ 976 @LENGTH@ 40
------UPD StringLiteral@@"CamelCxfBeanContextType" @TO@ "CamelCxfBeanContentType" @AT@ 991 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:GZIPHelper.setGZIPMessageHeader(exchange.getIn()) @TO@ MethodInvocation:exchange.getIn().setHeader(HttpConstants.CONTENT_ENCODING,"gzip") @AT@ 1561 @LENGTH@ 50
---UPD MethodInvocation@@GZIPHelper.setGZIPMessageHeader(exchange.getIn()) @TO@ exchange.getIn().setHeader(HttpConstants.CONTENT_ENCODING,"gzip") @AT@ 1561 @LENGTH@ 49
------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@GZIPHelper.setGZIPMessageHeader(exchange.getIn()) @AT@ 1557 @LENGTH@ 16
------UPD SimpleName@@Name:GZIPHelper @TO@ Name:exchange @AT@ 1561 @LENGTH@ 10
------UPD SimpleName@@MethodName:setGZIPMessageHeader:[exchange.getIn()] @TO@ MethodName:setHeader:[HttpConstants.CONTENT_ENCODING, "gzip"] @AT@ 1572 @LENGTH@ 38
---------INS QualifiedName@@HttpConstants.CONTENT_ENCODING @TO@ SimpleName@@MethodName:setGZIPMessageHeader:[exchange.getIn()] @AT@ 1584 @LENGTH@ 30
------------INS SimpleName@@HttpConstants @TO@ QualifiedName@@HttpConstants.CONTENT_ENCODING @AT@ 1584 @LENGTH@ 13
------------INS SimpleName@@CONTENT_ENCODING @TO@ QualifiedName@@HttpConstants.CONTENT_ENCODING @AT@ 1598 @LENGTH@ 16
---------DEL MethodInvocation@@exchange.getIn() @AT@ 1593 @LENGTH@ 16
------------DEL SimpleName@@Name:exchange @AT@ 1593 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getIn:[] @AT@ 1602 @LENGTH@ 7
---------INS StringLiteral@@"gzip" @TO@ SimpleName@@MethodName:setGZIPMessageHeader:[exchange.getIn()] @AT@ 1616 @LENGTH@ 6


DEL FieldDeclaration@@ConfigurationNode, [subnode] @AT@ 2265 @LENGTH@ 26
---DEL SimpleType@@ConfigurationNode @AT@ 2265 @LENGTH@ 17
---DEL VariableDeclarationFragment@@subnode @AT@ 2283 @LENGTH@ 7
------DEL SimpleName@@subnode @AT@ 2283 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:log.warn("No replyToDestination for replies to be received so cannot send notification: " + notification) @TO@ MethodInvocation:LOG.warn("No replyToDestination for replies to be received so cannot send notification: " + notification) @AT@ 1998 @LENGTH@ 106
---UPD MethodInvocation@@log.warn("No replyToDestination for replies to be received so cannot send notification: " + notification) @TO@ LOG.warn("No replyToDestination for replies to be received so cannot send notification: " + notification) @AT@ 1998 @LENGTH@ 105
------UPD SimpleName@@Name:log @TO@ Name:LOG @AT@ 1998 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:getConfiguration().setFile(file.getPath()) @TO@ MethodInvocation:getConfiguration().setDirectory(file.getPath()) @AT@ 3898 @LENGTH@ 43
---UPD MethodInvocation@@getConfiguration().setFile(file.getPath()) @TO@ getConfiguration().setDirectory(file.getPath()) @AT@ 3898 @LENGTH@ 42
------UPD SimpleName@@MethodName:setFile:[file.getPath()] @TO@ MethodName:setDirectory:[file.getPath()] @AT@ 3917 @LENGTH@ 23


UPD VariableDeclarationStatement@@List<DataHolder> answer=new ArrayList<DataHolder>(); @TO@ Queue<DataHolder> answer=new LinkedList<DataHolder>(); @AT@ 2478 @LENGTH@ 54
---UPD ParameterizedType@@List<DataHolder> @TO@ Queue<DataHolder> @AT@ 2478 @LENGTH@ 16
------UPD SimpleType@@List @TO@ Queue @AT@ 2478 @LENGTH@ 4
---UPD VariableDeclarationFragment@@answer=new ArrayList<DataHolder>() @TO@ answer=new LinkedList<DataHolder>() @AT@ 2495 @LENGTH@ 36
------UPD ClassInstanceCreation@@ArrayList<DataHolder>[] @TO@ LinkedList<DataHolder>[] @AT@ 2504 @LENGTH@ 27
---------UPD ParameterizedType@@ArrayList<DataHolder> @TO@ LinkedList<DataHolder> @AT@ 2508 @LENGTH@ 21
------------UPD SimpleType@@ArrayList @TO@ LinkedList @AT@ 2508 @LENGTH@ 9


UPD ThrowStatement@@ClassInstanceCreation:new IOException("Can not rename file from: " + from + " to: "+ to) @TO@ ClassInstanceCreation:new IOException("Cannot rename file from: " + from + " to: "+ to) @AT@ 3747 @LENGTH@ 74
---UPD ClassInstanceCreation@@IOException["Can not rename file from: " + from + " to: "+ to] @TO@ IOException["Cannot rename file from: " + from + " to: "+ to] @AT@ 3753 @LENGTH@ 67
------UPD InfixExpression@@"Can not rename file from: " + from + " to: "+ to @TO@ "Cannot rename file from: " + from + " to: "+ to @AT@ 3769 @LENGTH@ 50
---------UPD StringLiteral@@"Can not rename file from: " @TO@ "Cannot rename file from: " @AT@ 3769 @LENGTH@ 28


DEL MethodDeclaration@@public, static, MavenUrlProvisionOption, MethodName:mavenBundleAsInProject, String groupId, String artifactId,  @AT@ 4321 @LENGTH@ 196
---DEL Modifier@@public @AT@ 4321 @LENGTH@ 6
---DEL Modifier@@static @AT@ 4328 @LENGTH@ 6
---DEL SimpleType@@MavenUrlProvisionOption @AT@ 4335 @LENGTH@ 23
---DEL SimpleName@@MethodName:mavenBundleAsInProject @AT@ 4359 @LENGTH@ 22
---DEL SingleVariableDeclaration@@String groupId @AT@ 4382 @LENGTH@ 14
------DEL SimpleType@@String @AT@ 4382 @LENGTH@ 6
------DEL SimpleName@@groupId @AT@ 4389 @LENGTH@ 7
---DEL SingleVariableDeclaration@@String artifactId @AT@ 4398 @LENGTH@ 17
------DEL SimpleType@@String @AT@ 4398 @LENGTH@ 6
------DEL SimpleName@@artifactId @AT@ 4405 @LENGTH@ 10
---DEL ReturnStatement@@MethodInvocation:mavenBundle().groupId(groupId).artifactId(artifactId).version(asInProject()) @AT@ 4427 @LENGTH@ 84
------DEL MethodInvocation@@mavenBundle().groupId(groupId).artifactId(artifactId).version(asInProject()) @AT@ 4434 @LENGTH@ 76
---------DEL MethodInvocation@@MethodName:artifactId:[artifactId] @AT@ 4434 @LENGTH@ 53
------------DEL SimpleName@@artifactId @AT@ 4476 @LENGTH@ 10
---------DEL MethodInvocation@@MethodName:groupId:[groupId] @AT@ 4434 @LENGTH@ 30
------------DEL SimpleName@@groupId @AT@ 4456 @LENGTH@ 7
---------DEL MethodInvocation@@MethodName:mavenBundle:[] @AT@ 4434 @LENGTH@ 13
---------DEL SimpleName@@MethodName:version:[asInProject()] @AT@ 4488 @LENGTH@ 22
------------DEL MethodInvocation@@MethodName:asInProject:[] @AT@ 4496 @LENGTH@ 13


UPD FieldDeclaration@@private, String, [result="1=BE.CHM.0018=FIX 4.19=2010=22011=CHM0001-0122=434=135=048=BE000124567849=INVMGR54=156=BRKR58=this is a camel - bindy test"] @TO@ private, String, [result="1=BE.CHM.0018=FIX 4.19=2010=22011=CHM0001-0122=434=135=048=BE000124567849=INVMGR54=156=BRKR58=this is a camel - bindy test\r\n"] @AT@ 2215 @LENGTH@ 162
---UPD VariableDeclarationFragment@@result="1=BE.CHM.0018=FIX 4.19=2010=22011=CHM0001-0122=434=135=048=BE000124567849=INVMGR54=156=BRKR58=this is a camel - bindy test" @TO@ result="1=BE.CHM.0018=FIX 4.19=2010=22011=CHM0001-0122=434=135=048=BE000124567849=INVMGR54=156=BRKR58=this is a camel - bindy test\r\n" @AT@ 2230 @LENGTH@ 146
------UPD StringLiteral@@"1=BE.CHM.0018=FIX 4.19=2010=22011=CHM0001-0122=434=135=048=BE000124567849=INVMGR54=156=BRKR58=this is a camel - bindy test" @TO@ "1=BE.CHM.0018=FIX 4.19=2010=22011=CHM0001-0122=434=135=048=BE000124567849=INVMGR54=156=BRKR58=this is a camel - bindy test\r\n" @AT@ 2239 @LENGTH@ 137


DEL MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @AT@ 1955 @LENGTH@ 270
---DEL Modifier@@protected @AT@ 1955 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 1965 @LENGTH@ 4
---DEL SimpleName@@MethodName:configureChild @AT@ 1970 @LENGTH@ 14
---DEL SingleVariableDeclaration@@ProcessorDefinition output @AT@ 1985 @LENGTH@ 26
------DEL SimpleType@@ProcessorDefinition @AT@ 1985 @LENGTH@ 19
------DEL SimpleName@@output @AT@ 2005 @LENGTH@ 6
---DEL ExpressionStatement@@SuperMethodInvocation:super.configureChild(output) @AT@ 2023 @LENGTH@ 29
------DEL SuperMethodInvocation@@super.configureChild(output) @AT@ 2023 @LENGTH@ 28
---------DEL SimpleName@@MethodName:configureChild:[output] @AT@ 2029 @LENGTH@ 14
---------DEL SimpleName@@output @AT@ 2044 @LENGTH@ 6
---DEL IfStatement@@if (isInheritErrorHandler()) {  output.setErrorHandlerBuilder(getErrorHandlerBuilder());} @AT@ 2061 @LENGTH@ 109
------DEL MethodInvocation@@MethodName:isInheritErrorHandler:[] @AT@ 2065 @LENGTH@ 23
------DEL Block@@ThenBody:{  output.setErrorHandlerBuilder(getErrorHandlerBuilder());} @AT@ 2090 @LENGTH@ 80
---------DEL ExpressionStatement@@MethodInvocation:output.setErrorHandlerBuilder(getErrorHandlerBuilder()) @AT@ 2104 @LENGTH@ 56
------------DEL MethodInvocation@@output.setErrorHandlerBuilder(getErrorHandlerBuilder()) @AT@ 2104 @LENGTH@ 55
---------------DEL SimpleName@@Name:output @AT@ 2104 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:setErrorHandlerBuilder:[getErrorHandlerBuilder()] @AT@ 2111 @LENGTH@ 48
------------------DEL MethodInvocation@@MethodName:getErrorHandlerBuilder:[] @AT@ 2134 @LENGTH@ 24


INS MethodDeclaration@@public, boolean, MethodName:isStarted,  @TO@ TypeDeclaration@@[public, abstract]ServiceSupport, [Service] @AT@ 3358 @LENGTH@ 64
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isStarted,  @AT@ 3358 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isStarted,  @AT@ 3365 @LENGTH@ 7
---INS SimpleName@@MethodName:isStarted @TO@ MethodDeclaration@@public, boolean, MethodName:isStarted,  @AT@ 3373 @LENGTH@ 9
---INS ReturnStatement@@MethodInvocation:started.get() @TO@ MethodDeclaration@@public, boolean, MethodName:isStarted,  @AT@ 3395 @LENGTH@ 21
------INS MethodInvocation@@started.get() @TO@ ReturnStatement@@MethodInvocation:started.get() @AT@ 3402 @LENGTH@ 13
---------INS SimpleName@@Name:started @TO@ MethodInvocation@@started.get() @AT@ 3402 @LENGTH@ 7
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@started.get() @AT@ 3410 @LENGTH@ 5


UPD ThrowStatement@@ClassInstanceCreation:new EvaluationException(context.getClass(),getExpressionString(),"The expression '" + getExpressionString() + "' did not resolve... is the base variable ''"+ getBaseVariable()+ "' spelled correctly?") @TO@ ClassInstanceCreation:new EvaluationException(context.getClass(),getExpressionString(),"The expression '" + getExpressionString() + "' did not resolve... is the base variable '"+ getBaseVariable()+ "' spelled correctly?") @AT@ 2179 @LENGTH@ 225
---UPD ClassInstanceCreation@@EvaluationException[context.getClass(), getExpressionString(), "The expression '" + getExpressionString() + "' did not resolve... is the base variable ''"+ getBaseVariable()+ "' spelled correctly?"] @TO@ EvaluationException[context.getClass(), getExpressionString(), "The expression '" + getExpressionString() + "' did not resolve... is the base variable '"+ getBaseVariable()+ "' spelled correctly?"] @AT@ 2185 @LENGTH@ 218
------UPD InfixExpression@@"The expression '" + getExpressionString() + "' did not resolve... is the base variable ''"+ getBaseVariable()+ "' spelled correctly?" @TO@ "The expression '" + getExpressionString() + "' did not resolve... is the base variable '"+ getBaseVariable()+ "' spelled correctly?" @AT@ 2252 @LENGTH@ 150
---------UPD StringLiteral@@"' did not resolve... is the base variable ''" @TO@ "' did not resolve... is the base variable '" @AT@ 2304 @LENGTH@ 46


INS MethodDeclaration@@String, MethodName:createExchangeId,  @TO@ TypeDeclaration@@[public]Message,  @AT@ 5215 @LENGTH@ 19
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:createExchangeId,  @AT@ 5208 @LENGTH@ 6
---INS SimpleName@@MethodName:createExchangeId @TO@ MethodDeclaration@@String, MethodName:createExchangeId,  @AT@ 5215 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:from(fileUrl + "a/?sortBy=file:name.ext").to("mock:result") @TO@ MethodInvocation:from(fileUrl + "a/?sortBy=file:ext").to("mock:result") @AT@ 2109 @LENGTH@ 60
---UPD MethodInvocation@@from(fileUrl + "a/?sortBy=file:name.ext").to("mock:result") @TO@ from(fileUrl + "a/?sortBy=file:ext").to("mock:result") @AT@ 2109 @LENGTH@ 59
------UPD MethodInvocation@@MethodName:from:[fileUrl + "a/?sortBy=file:name.ext"] @TO@ MethodName:from:[fileUrl + "a/?sortBy=file:ext"] @AT@ 2109 @LENGTH@ 41
---------UPD InfixExpression@@fileUrl + "a/?sortBy=file:name.ext" @TO@ fileUrl + "a/?sortBy=file:ext" @AT@ 2114 @LENGTH@ 35
------------UPD StringLiteral@@"a/?sortBy=file:name.ext" @TO@ "a/?sortBy=file:ext" @AT@ 2124 @LENGTH@ 25


INS MethodDeclaration@@private, voidMethodName:RunScript,  @TO@ TypeDeclaration@@[public]RunScript,  @AT@ 959 @LENGTH@ 51
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:RunScript,  @AT@ 959 @LENGTH@ 7
---INS SimpleName@@MethodName:RunScript @TO@ MethodDeclaration@@private, voidMethodName:RunScript,  @AT@ 967 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(text,"text") @TO@ MethodDeclaration@@public, voidMethodName:StringSource, String text,  @AT@ 1618 @LENGTH@ 35
---INS MethodInvocation@@ObjectHelper.notNull(text,"text") @TO@ ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(text,"text") @AT@ 1618 @LENGTH@ 34
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.notNull(text,"text") @AT@ 1618 @LENGTH@ 12
------INS SimpleName@@MethodName:notNull:[text, "text"] @TO@ MethodInvocation@@ObjectHelper.notNull(text,"text") @AT@ 1631 @LENGTH@ 21
---------INS SimpleName@@text @TO@ SimpleName@@MethodName:notNull:[text, "text"] @AT@ 1639 @LENGTH@ 4
---------INS StringLiteral@@"text" @TO@ SimpleName@@MethodName:notNull:[text, "text"] @AT@ 1645 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2784 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2784 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 2801 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2811 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2811 @LENGTH@ 13


UPD VariableDeclarationStatement@@String relative=relativeFileName.substring(0,relativeFileName.lastIndexOf(File.separator)); @TO@ String relative=relativeFileName.substring(0,relativeFileName.lastIndexOf(getFileSeparator())); @AT@ 4344 @LENGTH@ 94
---UPD VariableDeclarationFragment@@relative=relativeFileName.substring(0,relativeFileName.lastIndexOf(File.separator)) @TO@ relative=relativeFileName.substring(0,relativeFileName.lastIndexOf(getFileSeparator())) @AT@ 4351 @LENGTH@ 86
------UPD MethodInvocation@@relativeFileName.substring(0,relativeFileName.lastIndexOf(File.separator)) @TO@ relativeFileName.substring(0,relativeFileName.lastIndexOf(getFileSeparator())) @AT@ 4362 @LENGTH@ 75
---------UPD SimpleName@@MethodName:substring:[0, relativeFileName.lastIndexOf(File.separator)] @TO@ MethodName:substring:[0, relativeFileName.lastIndexOf(getFileSeparator())] @AT@ 4379 @LENGTH@ 58
------------UPD MethodInvocation@@relativeFileName.lastIndexOf(File.separator) @TO@ relativeFileName.lastIndexOf(getFileSeparator()) @AT@ 4392 @LENGTH@ 44
---------------UPD SimpleName@@MethodName:lastIndexOf:[File.separator] @TO@ MethodName:lastIndexOf:[getFileSeparator()] @AT@ 4409 @LENGTH@ 27
------------------INS MethodInvocation@@MethodName:getFileSeparator:[] @TO@ SimpleName@@MethodName:lastIndexOf:[File.separator] @AT@ 4421 @LENGTH@ 18
------------------DEL QualifiedName@@File.separator @AT@ 4421 @LENGTH@ 14
---------------------DEL SimpleName@@File @AT@ 4421 @LENGTH@ 4
---------------------DEL SimpleName@@separator @AT@ 4426 @LENGTH@ 9


DEL MethodDeclaration@@public, void, MethodName:setOperations, FileOperations operations,  @AT@ 3606 @LENGTH@ 98
---DEL Modifier@@public @AT@ 3606 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3613 @LENGTH@ 4
---DEL SimpleName@@MethodName:setOperations @AT@ 3618 @LENGTH@ 13
---DEL SingleVariableDeclaration@@FileOperations operations @AT@ 3632 @LENGTH@ 25
------DEL SimpleType@@FileOperations @AT@ 3632 @LENGTH@ 14
------DEL SimpleName@@operations @AT@ 3647 @LENGTH@ 10
---DEL ExpressionStatement@@Assignment:this.operations=operations @AT@ 3669 @LENGTH@ 29
------DEL Assignment@@this.operations=operations @AT@ 3669 @LENGTH@ 28
---------DEL FieldAccess@@this.operations @AT@ 3669 @LENGTH@ 15
------------DEL ThisExpression@@this @AT@ 3669 @LENGTH@ 4
------------DEL SimpleName@@operations @AT@ 3674 @LENGTH@ 10
---------DEL Operator@@= @AT@ 3684 @LENGTH@ 1
---------DEL SimpleName@@operations @AT@ 3687 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:result.await(500L,TimeUnit.MILLISECONDS) @TO@ MethodDeclaration@@public, void, MethodName:testAggregateBatchSize, Exception,  @AT@ 5447 @LENGTH@ 42
---INS MethodInvocation@@result.await(500L,TimeUnit.MILLISECONDS) @TO@ ExpressionStatement@@MethodInvocation:result.await(500L,TimeUnit.MILLISECONDS) @AT@ 5447 @LENGTH@ 41
------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.await(500L,TimeUnit.MILLISECONDS) @AT@ 5447 @LENGTH@ 6
------INS SimpleName@@MethodName:await:[500L, TimeUnit.MILLISECONDS] @TO@ MethodInvocation@@result.await(500L,TimeUnit.MILLISECONDS) @AT@ 5454 @LENGTH@ 34
---------INS NumberLiteral@@500L @TO@ SimpleName@@MethodName:await:[500L, TimeUnit.MILLISECONDS] @AT@ 5460 @LENGTH@ 4
---------INS QualifiedName@@TimeUnit.MILLISECONDS @TO@ SimpleName@@MethodName:await:[500L, TimeUnit.MILLISECONDS] @AT@ 5466 @LENGTH@ 21
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.MILLISECONDS @AT@ 5466 @LENGTH@ 8
------------INS SimpleName@@MILLISECONDS @TO@ QualifiedName@@TimeUnit.MILLISECONDS @AT@ 5475 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).setParallelProcessing(true).to("jms:queue2:bank1","jms:queue2:bank2","jms:queue2:bank3") @TO@ MethodInvocation:from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).parallelProcessing(true).to("jms:queue2:bank1","jms:queue2:bank2","jms:queue2:bank3") @AT@ 4079 @LENGTH@ 438
---UPD MethodInvocation@@from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).setParallelProcessing(true).to("jms:queue2:bank1","jms:queue2:bank2","jms:queue2:bank3") @TO@ from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).parallelProcessing(true).to("jms:queue2:bank1","jms:queue2:bank2","jms:queue2:bank3") @AT@ 4079 @LENGTH@ 437
------UPD MethodInvocation@@MethodName:setParallelProcessing:[true] @TO@ MethodName:parallelProcessing:[true] @AT@ 4079 @LENGTH@ 374


UPD IfStatement@@if (delay >= 0 && delay < 3) {  delay=3;} @TO@ if (delay >= 0 && delay < 4) {  delay=4;} @AT@ 2224 @LENGTH@ 256
---UPD InfixExpression@@delay >= 0 && delay < 3 @TO@ delay >= 0 && delay < 4 @AT@ 2228 @LENGTH@ 23
------UPD InfixExpression@@delay < 3 @TO@ delay < 4 @AT@ 2242 @LENGTH@ 9
---------UPD NumberLiteral@@3 @TO@ 4 @AT@ 2250 @LENGTH@ 1
---UPD Block@@ThenBody:{  delay=3;} @TO@ ThenBody:{  delay=4;} @AT@ 2253 @LENGTH@ 227
------UPD ExpressionStatement@@Assignment:delay=3 @TO@ Assignment:delay=4 @AT@ 2448 @LENGTH@ 10
---------UPD Assignment@@delay=3 @TO@ delay=4 @AT@ 2448 @LENGTH@ 9
------------UPD NumberLiteral@@3 @TO@ 4 @AT@ 2456 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setHeader(HttpConstants.HTTP_RESPONSE_CODE,500) @TO@ MethodInvocation:exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,500) @AT@ 3464 @LENGTH@ 67
---UPD MethodInvocation@@exchange.getOut().setHeader(HttpConstants.HTTP_RESPONSE_CODE,500) @TO@ exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,500) @AT@ 3464 @LENGTH@ 66
------UPD SimpleName@@MethodName:setHeader:[HttpConstants.HTTP_RESPONSE_CODE, 500] @TO@ MethodName:setHeader:[Exchange.HTTP_RESPONSE_CODE, 500] @AT@ 3482 @LENGTH@ 48
---------UPD QualifiedName@@HttpConstants.HTTP_RESPONSE_CODE @TO@ Exchange.HTTP_RESPONSE_CODE @AT@ 3492 @LENGTH@ 32
------------UPD SimpleName@@HttpConstants @TO@ Exchange @AT@ 3492 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:result.setAbsolute(source.isAbsolute()) @TO@ MethodDeclaration@@public, RemoteFile<T>, MethodName:copyFrom, RemoteFile<T> source,  @AT@ 1631 @LENGTH@ 40
---INS MethodInvocation@@result.setAbsolute(source.isAbsolute()) @TO@ ExpressionStatement@@MethodInvocation:result.setAbsolute(source.isAbsolute()) @AT@ 1631 @LENGTH@ 39
------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.setAbsolute(source.isAbsolute()) @AT@ 1631 @LENGTH@ 6
------INS SimpleName@@MethodName:setAbsolute:[source.isAbsolute()] @TO@ MethodInvocation@@result.setAbsolute(source.isAbsolute()) @AT@ 1638 @LENGTH@ 32
---------INS MethodInvocation@@source.isAbsolute() @TO@ SimpleName@@MethodName:setAbsolute:[source.isAbsolute()] @AT@ 1650 @LENGTH@ 19
------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.isAbsolute() @AT@ 1650 @LENGTH@ 6
------------INS SimpleName@@MethodName:isAbsolute:[] @TO@ MethodInvocation@@source.isAbsolute() @AT@ 1657 @LENGTH@ 12


UPD VariableDeclarationStatement@@String absoluteFileName=directory + "/" + file.getName(); @TO@ String absoluteFileName=(ObjectHelper.isNotEmpty(directory) ? directory + "/" : "") + file.getName(); @AT@ 3495 @LENGTH@ 59
---UPD VariableDeclarationFragment@@absoluteFileName=directory + "/" + file.getName() @TO@ absoluteFileName=(ObjectHelper.isNotEmpty(directory) ? directory + "/" : "") + file.getName() @AT@ 3502 @LENGTH@ 51
------UPD InfixExpression@@directory + "/" + file.getName() @TO@ (ObjectHelper.isNotEmpty(directory) ? directory + "/" : "") + file.getName() @AT@ 3521 @LENGTH@ 32
---------DEL SimpleName@@directory @AT@ 3521 @LENGTH@ 9
---------INS ParenthesizedExpression@@(ObjectHelper.isNotEmpty(directory) ? directory + "/" : "") @TO@ InfixExpression@@directory + "/" + file.getName() @AT@ 3588 @LENGTH@ 59
------------INS ConditionalExpression@@ObjectHelper.isNotEmpty(directory) ? directory + "/" : "" @TO@ ParenthesizedExpression@@(ObjectHelper.isNotEmpty(directory) ? directory + "/" : "") @AT@ 3589 @LENGTH@ 57
---------------INS MethodInvocation@@ObjectHelper.isNotEmpty(directory) @TO@ ConditionalExpression@@ObjectHelper.isNotEmpty(directory) ? directory + "/" : "" @AT@ 3589 @LENGTH@ 34
------------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(directory) @AT@ 3589 @LENGTH@ 12
------------------INS SimpleName@@MethodName:isNotEmpty:[directory] @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(directory) @AT@ 3602 @LENGTH@ 21
---------------------INS SimpleName@@directory @TO@ SimpleName@@MethodName:isNotEmpty:[directory] @AT@ 3613 @LENGTH@ 9
---------------INS InfixExpression@@directory + "/" @TO@ ConditionalExpression@@ObjectHelper.isNotEmpty(directory) ? directory + "/" : "" @AT@ 3626 @LENGTH@ 15
------------------MOV Operator@@+ @TO@ InfixExpression@@directory + "/" @AT@ 3530 @LENGTH@ 1
------------------MOV StringLiteral@@"/" @TO@ InfixExpression@@directory + "/" @AT@ 3533 @LENGTH@ 3
------------------INS SimpleName@@directory @TO@ InfixExpression@@directory + "/" @AT@ 3626 @LENGTH@ 9
---------------INS StringLiteral@@"" @TO@ ConditionalExpression@@ObjectHelper.isNotEmpty(directory) ? directory + "/" : "" @AT@ 3644 @LENGTH@ 2
---------INS Operator@@+ @TO@ InfixExpression@@directory + "/" + file.getName() @AT@ 3647 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:close, IOException,  @TO@ TypeDeclaration@@[public]BZip2CompressorOutputStream, CompressorOutputStream[BZip2Constants] @AT@ 11157 @LENGTH@ 193
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 11157 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 11164 @LENGTH@ 4
---INS SimpleName@@MethodName:close @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 11169 @LENGTH@ 5
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 11184 @LENGTH@ 11
---INS IfStatement@@if (closed) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 11206 @LENGTH@ 43
------INS SimpleName@@closed @TO@ IfStatement@@if (closed) {  return;} @AT@ 11210 @LENGTH@ 6
------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (closed) {  return;} @AT@ 11218 @LENGTH@ 31
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 11232 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:finish() @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 11258 @LENGTH@ 9
------INS MethodInvocation@@MethodName:finish:[] @TO@ ExpressionStatement@@MethodInvocation:finish() @AT@ 11258 @LENGTH@ 8
---MOV ExpressionStatement@@Assignment:closed=true @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 11394 @LENGTH@ 14
---MOV ExpressionStatement@@SuperMethodInvocation:super.close() @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 11417 @LENGTH@ 14
---MOV ExpressionStatement@@MethodInvocation:bsStream.close() @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 11440 @LENGTH@ 17


UPD SuperConstructorInvocation@@super("No type converter available to convert from type: " + (value != null ? value.getClass() : null) + " to the required type: "+ type.getCanonicalName()+ " with value "+ value);
 @TO@ super("No type converter available to convert from type: " + (value != null ? value.getClass().getCanonicalName() : null) + " to the required type: "+ type.getCanonicalName()+ " with value "+ value);
 @AT@ 1168 @LENGTH@ 197
---UPD InfixExpression@@"No type converter available to convert from type: " + (value != null ? value.getClass() : null) + " to the required type: "+ type.getCanonicalName()+ " with value "+ value @TO@ "No type converter available to convert from type: " + (value != null ? value.getClass().getCanonicalName() : null) + " to the required type: "+ type.getCanonicalName()+ " with value "+ value @AT@ 1174 @LENGTH@ 189
------UPD ParenthesizedExpression@@(value != null ? value.getClass() : null) @TO@ (value != null ? value.getClass().getCanonicalName() : null) @AT@ 1229 @LENGTH@ 41
---------UPD ConditionalExpression@@value != null ? value.getClass() : null @TO@ value != null ? value.getClass().getCanonicalName() : null @AT@ 1230 @LENGTH@ 39
------------UPD MethodInvocation@@value.getClass() @TO@ value.getClass().getCanonicalName() @AT@ 1246 @LENGTH@ 16
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@value.getClass() @AT@ 1246 @LENGTH@ 16
---------------UPD SimpleName@@MethodName:getClass:[] @TO@ MethodName:getCanonicalName:[] @AT@ 1252 @LENGTH@ 10


UPD FieldDeclaration@@private, MessageCodesResolver, [messageCodesResolver] @TO@ private, MessageCodesResolver, [messageCodesResolver=new WebFlowMessageCodesResolver()] @AT@ 3151 @LENGTH@ 50
---UPD VariableDeclarationFragment@@messageCodesResolver @TO@ messageCodesResolver=new WebFlowMessageCodesResolver() @AT@ 3180 @LENGTH@ 20
------INS ClassInstanceCreation@@WebFlowMessageCodesResolver[] @TO@ VariableDeclarationFragment@@messageCodesResolver @AT@ 3203 @LENGTH@ 33
---------INS New@@new @TO@ ClassInstanceCreation@@WebFlowMessageCodesResolver[] @AT@ 3203 @LENGTH@ 3
---------INS SimpleType@@WebFlowMessageCodesResolver @TO@ ClassInstanceCreation@@WebFlowMessageCodesResolver[] @AT@ 3207 @LENGTH@ 27


INS ExpressionStatement@@MethodInvocation:view.setMessageCodesResolver(new WebFlowMessageCodesResolver()) @TO@ MethodDeclaration@@public, void, MethodName:testResumeEvent, Exception,  @AT@ 3288 @LENGTH@ 64
---INS MethodInvocation@@view.setMessageCodesResolver(new WebFlowMessageCodesResolver()) @TO@ ExpressionStatement@@MethodInvocation:view.setMessageCodesResolver(new WebFlowMessageCodesResolver()) @AT@ 3288 @LENGTH@ 63
------INS SimpleName@@Name:view @TO@ MethodInvocation@@view.setMessageCodesResolver(new WebFlowMessageCodesResolver()) @AT@ 3288 @LENGTH@ 4
------INS SimpleName@@MethodName:setMessageCodesResolver:[new WebFlowMessageCodesResolver()] @TO@ MethodInvocation@@view.setMessageCodesResolver(new WebFlowMessageCodesResolver()) @AT@ 3293 @LENGTH@ 58
---------INS ClassInstanceCreation@@WebFlowMessageCodesResolver[] @TO@ SimpleName@@MethodName:setMessageCodesResolver:[new WebFlowMessageCodesResolver()] @AT@ 3317 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@WebFlowMessageCodesResolver[] @AT@ 3317 @LENGTH@ 3
------------INS SimpleType@@WebFlowMessageCodesResolver @TO@ ClassInstanceCreation@@WebFlowMessageCodesResolver[] @AT@ 3321 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:operations.deleteFile(to.getAbsoluteFileName()) @TO@ MethodInvocation:operations.deleteFile(to.getAbsoluteFilePath()) @AT@ 2727 @LENGTH@ 48
---UPD MethodInvocation@@operations.deleteFile(to.getAbsoluteFileName()) @TO@ operations.deleteFile(to.getAbsoluteFilePath()) @AT@ 2727 @LENGTH@ 47
------UPD SimpleName@@MethodName:deleteFile:[to.getAbsoluteFileName()] @TO@ MethodName:deleteFile:[to.getAbsoluteFilePath()] @AT@ 2738 @LENGTH@ 36
---------UPD MethodInvocation@@to.getAbsoluteFileName() @TO@ to.getAbsoluteFilePath() @AT@ 2749 @LENGTH@ 24
------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 2752 @LENGTH@ 21


UPD TryStatement@@try {  getProcessor().process(exchange);  if (muc != null) {    muc.nextMessage();  }} catch (Exception e) {  LOG.error("Error while processing XMPP message",e);} @TO@ try {  getProcessor().process(exchange);} catch (Exception e) {  exchange.setException(e);} @AT@ 3842 @LENGTH@ 399
---DEL IfStatement@@if (muc != null) {  muc.nextMessage();} @AT@ 3906 @LENGTH@ 228
------DEL InfixExpression@@muc != null @AT@ 3910 @LENGTH@ 11
---------DEL SimpleName@@muc @AT@ 3910 @LENGTH@ 3
---------DEL Operator@@!= @AT@ 3913 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 3917 @LENGTH@ 4
------DEL Block@@ThenBody:{  muc.nextMessage();} @AT@ 3923 @LENGTH@ 211
---------DEL ExpressionStatement@@MethodInvocation:muc.nextMessage() @AT@ 4102 @LENGTH@ 18
------------DEL MethodInvocation@@muc.nextMessage() @AT@ 4102 @LENGTH@ 17
---------------DEL SimpleName@@Name:muc @AT@ 4102 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:nextMessage:[] @AT@ 4106 @LENGTH@ 13
---UPD CatchClause@@catch (Exception e) {  LOG.error("Error while processing XMPP message",e);} @TO@ catch (Exception e) {  exchange.setException(e);} @AT@ 4145 @LENGTH@ 96
------UPD ExpressionStatement@@MethodInvocation:LOG.error("Error while processing XMPP message",e) @TO@ MethodInvocation:exchange.setException(e) @AT@ 4179 @LENGTH@ 52
---------UPD MethodInvocation@@LOG.error("Error while processing XMPP message",e) @TO@ exchange.setException(e) @AT@ 4179 @LENGTH@ 51
------------UPD SimpleName@@Name:LOG @TO@ Name:exchange @AT@ 4179 @LENGTH@ 3
------------UPD SimpleName@@MethodName:error:["Error while processing XMPP message", e] @TO@ MethodName:setException:[e] @AT@ 4183 @LENGTH@ 47
---------------DEL StringLiteral@@"Error while processing XMPP message" @AT@ 4189 @LENGTH@ 37


UPD ReturnStatement@@MethodInvocation:typeConverter.convertTo(type,value) @TO@ MethodInvocation:typeConverter.mandatoryConvertTo(type,value) @AT@ 10529 @LENGTH@ 44
---UPD MethodInvocation@@typeConverter.convertTo(type,value) @TO@ typeConverter.mandatoryConvertTo(type,value) @AT@ 10536 @LENGTH@ 36
------UPD SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodName:mandatoryConvertTo:[type, value] @AT@ 10550 @LENGTH@ 22


MOV FieldDeclaration@@private, final, String, [path] @TO@ TypeDeclaration@@[public]FactoryFinder,  @AT@ 1275 @LENGTH@ 26


INS MethodDeclaration@@Exchange, MethodName:newCopy,  @TO@ TypeDeclaration@@[public]Exchange,  @AT@ 8164 @LENGTH@ 10
---INS SimpleType@@Exchange @TO@ MethodDeclaration@@Exchange, MethodName:newCopy,  @AT@ 8155 @LENGTH@ 8
---INS SimpleName@@MethodName:newCopy @TO@ MethodDeclaration@@Exchange, MethodName:newCopy,  @AT@ 8164 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new NullPointerException("text can not be null") @TO@ ClassInstanceCreation:new NullPointerException("text cannot be null") @AT@ 1606 @LENGTH@ 55
---UPD ClassInstanceCreation@@NullPointerException["text can not be null"] @TO@ NullPointerException["text cannot be null"] @AT@ 1612 @LENGTH@ 48
------UPD StringLiteral@@"text can not be null" @TO@ "text cannot be null" @AT@ 1637 @LENGTH@ 22


INS MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @TO@ TypeDeclaration@@[public]DerbyPagingQueryProviderTests, AbstractSqlPagingQueryProviderTests @AT@ 3442 @LENGTH@ 324
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 3442 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 3449 @LENGTH@ 4
---INS SimpleName@@MethodName:testGenerateJumpToItemQueryForFirstPage @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 3454 @LENGTH@ 39
---INS VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 3500 @LENGTH@ 156
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @AT@ 3500 @LENGTH@ 6
------INS VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @TO@ VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @AT@ 3507 @LENGTH@ 148
---------INS SimpleName@@sql @TO@ VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @AT@ 3507 @LENGTH@ 3
---------INS StringLiteral@@"SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @TO@ VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @AT@ 3513 @LENGTH@ 142
---INS VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 3659 @LENGTH@ 69
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 3659 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 3666 @LENGTH@ 61
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 3666 @LENGTH@ 1
---------INS MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 3670 @LENGTH@ 57
------------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 3670 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 3690 @LENGTH@ 37
---------------INS NumberLiteral@@45 @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 3714 @LENGTH@ 2
---------------INS SimpleName@@pageSize @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 3718 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 3731 @LENGTH@ 32
------INS MethodInvocation@@Assert.assertEquals("",sql,s) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @AT@ 3731 @LENGTH@ 31
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 3731 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["", sql, s] @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 3738 @LENGTH@ 24
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 3751 @LENGTH@ 2
------------INS SimpleName@@sql @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 3755 @LENGTH@ 3
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 3760 @LENGTH@ 1


UPD IfStatement@@if (methodToUse.isEntityEnclosing()) {  ((EntityEnclosingMethod)method).setRequestEntity(requestEntity);} @TO@ if (methodToUse.isEntityEnclosing()) {  ((EntityEnclosingMethod)method).setRequestEntity(requestEntity);  if (requestEntity.getContentType() == null) {    LOG.warn("Missing the ContentType in the request entity!");  }} @AT@ 9291 @LENGTH@ 125
---UPD Block@@ThenBody:{  ((EntityEnclosingMethod)method).setRequestEntity(requestEntity);} @TO@ ThenBody:{  ((EntityEnclosingMethod)method).setRequestEntity(requestEntity);  if (requestEntity.getContentType() == null) {    LOG.warn("Missing the ContentType in the request entity!");  }} @AT@ 9328 @LENGTH@ 88
------INS IfStatement@@if (requestEntity.getContentType() == null) {  LOG.warn("Missing the ContentType in the request entity!");} @TO@ Block@@ThenBody:{  ((EntityEnclosingMethod)method).setRequestEntity(requestEntity);} @AT@ 9508 @LENGTH@ 135
---------INS InfixExpression@@requestEntity.getContentType() == null @TO@ IfStatement@@if (requestEntity.getContentType() == null) {  LOG.warn("Missing the ContentType in the request entity!");} @AT@ 9512 @LENGTH@ 38
------------INS MethodInvocation@@requestEntity.getContentType() @TO@ InfixExpression@@requestEntity.getContentType() == null @AT@ 9512 @LENGTH@ 30
---------------INS SimpleName@@Name:requestEntity @TO@ MethodInvocation@@requestEntity.getContentType() @AT@ 9512 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getContentType:[] @TO@ MethodInvocation@@requestEntity.getContentType() @AT@ 9526 @LENGTH@ 16
------------INS Operator@@== @TO@ InfixExpression@@requestEntity.getContentType() == null @AT@ 9542 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@requestEntity.getContentType() == null @AT@ 9546 @LENGTH@ 4
---------INS Block@@ThenBody:{  LOG.warn("Missing the ContentType in the request entity!");} @TO@ IfStatement@@if (requestEntity.getContentType() == null) {  LOG.warn("Missing the ContentType in the request entity!");} @AT@ 9552 @LENGTH@ 91
------------INS ExpressionStatement@@MethodInvocation:LOG.warn("Missing the ContentType in the request entity!") @TO@ Block@@ThenBody:{  LOG.warn("Missing the ContentType in the request entity!");} @AT@ 9570 @LENGTH@ 59
---------------INS MethodInvocation@@LOG.warn("Missing the ContentType in the request entity!") @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("Missing the ContentType in the request entity!") @AT@ 9570 @LENGTH@ 58
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("Missing the ContentType in the request entity!") @AT@ 9570 @LENGTH@ 3
------------------INS SimpleName@@MethodName:warn:["Missing the ContentType in the request entity!"] @TO@ MethodInvocation@@LOG.warn("Missing the ContentType in the request entity!") @AT@ 9574 @LENGTH@ 54
---------------------INS StringLiteral@@"Missing the ContentType in the request entity!" @TO@ SimpleName@@MethodName:warn:["Missing the ContentType in the request entity!"] @AT@ 9579 @LENGTH@ 48


UPD ExpressionStatement@@MethodInvocation:copy(stream,bos) @TO@ MethodInvocation:IOHelper.copy(stream,bos) @AT@ 8655 @LENGTH@ 18
---UPD MethodInvocation@@copy(stream,bos) @TO@ IOHelper.copy(stream,bos) @AT@ 8655 @LENGTH@ 17
------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@copy(stream,bos) @AT@ 8694 @LENGTH@ 8


UPD IfStatement@@if (level == LEVEL_NEGATE_READ) {  acl.insertAce(acl.getEntries().length,permission,sid,false);} else {  acl.insertAce(acl.getEntries().length,permission,sid,true);} @TO@ if (level == LEVEL_NEGATE_READ) {  acl.insertAce(acl.getEntries().size(),permission,sid,false);} else {  acl.insertAce(acl.getEntries().size(),permission,sid,true);} @AT@ 3729 @LENGTH@ 239
---UPD Block@@ThenBody:{  acl.insertAce(acl.getEntries().length,permission,sid,false);} @TO@ ThenBody:{  acl.insertAce(acl.getEntries().size(),permission,sid,false);} @AT@ 3761 @LENGTH@ 103
------UPD ExpressionStatement@@MethodInvocation:acl.insertAce(acl.getEntries().length,permission,sid,false) @TO@ MethodInvocation:acl.insertAce(acl.getEntries().size(),permission,sid,false) @AT@ 3775 @LENGTH@ 63
---------UPD MethodInvocation@@acl.insertAce(acl.getEntries().length,permission,sid,false) @TO@ acl.insertAce(acl.getEntries().size(),permission,sid,false) @AT@ 3775 @LENGTH@ 62
------------UPD SimpleName@@MethodName:insertAce:[acl.getEntries().length, permission, sid, false] @TO@ MethodName:insertAce:[acl.getEntries().size(), permission, sid, false] @AT@ 3779 @LENGTH@ 58
---------------DEL FieldAccess@@acl.getEntries().length @AT@ 3789 @LENGTH@ 23
------------------DEL MethodInvocation@@acl.getEntries() @AT@ 3789 @LENGTH@ 16
------------------DEL SimpleName@@length @AT@ 3806 @LENGTH@ 6
---------------INS MethodInvocation@@acl.getEntries().size() @TO@ SimpleName@@MethodName:insertAce:[acl.getEntries().length, permission, sid, false] @AT@ 3789 @LENGTH@ 23
------------------INS MethodInvocation@@MethodName:getEntries:[] @TO@ MethodInvocation@@acl.getEntries().size() @AT@ 3789 @LENGTH@ 16
------------------MOV SimpleName@@Name:acl @TO@ MethodInvocation@@acl.getEntries().size() @AT@ 3789 @LENGTH@ 3
------------------MOV SimpleName@@MethodName:getEntries:[] @TO@ MethodInvocation@@acl.getEntries().size() @AT@ 3793 @LENGTH@ 12
---UPD Block@@ElseBody:{  acl.insertAce(acl.getEntries().length,permission,sid,true);} @TO@ ElseBody:{  acl.insertAce(acl.getEntries().size(),permission,sid,true);} @AT@ 3870 @LENGTH@ 98
------UPD ExpressionStatement@@MethodInvocation:acl.insertAce(acl.getEntries().length,permission,sid,true) @TO@ MethodInvocation:acl.insertAce(acl.getEntries().size(),permission,sid,true) @AT@ 3884 @LENGTH@ 62
---------UPD MethodInvocation@@acl.insertAce(acl.getEntries().length,permission,sid,true) @TO@ acl.insertAce(acl.getEntries().size(),permission,sid,true) @AT@ 3884 @LENGTH@ 61
------------UPD SimpleName@@MethodName:insertAce:[acl.getEntries().length, permission, sid, true] @TO@ MethodName:insertAce:[acl.getEntries().size(), permission, sid, true] @AT@ 3888 @LENGTH@ 57
---------------DEL FieldAccess@@acl.getEntries().length @AT@ 3898 @LENGTH@ 23
------------------DEL MethodInvocation@@acl.getEntries() @AT@ 3898 @LENGTH@ 16
------------------DEL SimpleName@@length @AT@ 3915 @LENGTH@ 6
---------------INS MethodInvocation@@acl.getEntries().size() @TO@ SimpleName@@MethodName:insertAce:[acl.getEntries().length, permission, sid, true] @AT@ 3898 @LENGTH@ 23
------------------INS MethodInvocation@@MethodName:getEntries:[] @TO@ MethodInvocation@@acl.getEntries().size() @AT@ 3898 @LENGTH@ 16
------------------MOV SimpleName@@Name:acl @TO@ MethodInvocation@@acl.getEntries().size() @AT@ 3898 @LENGTH@ 3
------------------MOV SimpleName@@MethodName:getEntries:[] @TO@ MethodInvocation@@acl.getEntries().size() @AT@ 3902 @LENGTH@ 12


INS MethodDeclaration@@private, voidMethodName:ActiveMQHelper,  @TO@ TypeDeclaration@@[public]ActiveMQHelper,  @AT@ 1093 @LENGTH@ 56
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:ActiveMQHelper,  @AT@ 1093 @LENGTH@ 7
---INS SimpleName@@MethodName:ActiveMQHelper @TO@ MethodDeclaration@@private, voidMethodName:ActiveMQHelper,  @AT@ 1101 @LENGTH@ 14


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]InstanceMethodTypeConverter, [TypeConverter] @AT@ 2342 @LENGTH@ 113
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2342 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2353 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2355 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2374 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2374 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2374 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2380 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2383 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2389 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2389 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2396 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,null,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2413 @LENGTH@ 36
------INS MethodInvocation@@convertTo(type,null,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,null,value) @AT@ 2420 @LENGTH@ 28
---------INS SimpleName@@MethodName:convertTo:[type, null, value] @TO@ MethodInvocation@@convertTo(type,null,value) @AT@ 2420 @LENGTH@ 28
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2430 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2436 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2442 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2101 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2101 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 2118 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2128 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2128 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Reports",FileComponent.HEADER_FILE_NAME,"report2.txt") @TO@ MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Reports",NewFileComponent.HEADER_FILE_NAME,"report2.txt") @AT@ 1994 @LENGTH@ 98
---UPD MethodInvocation@@template.sendBodyAndHeader(getFtpUrl(),"Reports",FileComponent.HEADER_FILE_NAME,"report2.txt") @TO@ template.sendBodyAndHeader(getFtpUrl(),"Reports",NewFileComponent.HEADER_FILE_NAME,"report2.txt") @AT@ 1994 @LENGTH@ 97
------UPD SimpleName@@MethodName:sendBodyAndHeader:[getFtpUrl(), "Reports", FileComponent.HEADER_FILE_NAME, "report2.txt"] @TO@ MethodName:sendBodyAndHeader:[getFtpUrl(), "Reports", NewFileComponent.HEADER_FILE_NAME, "report2.txt"] @AT@ 2003 @LENGTH@ 88
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2045 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2045 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @TO@ TypeDeclaration@@[public]SqlWindowingPagingQueryProviderTests, AbstractSqlPagingQueryProviderTests @AT@ 2005 @LENGTH@ 324
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 2005 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 2012 @LENGTH@ 4
---INS SimpleName@@MethodName:testGenerateJumpToItemQueryForFirstPage @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 2017 @LENGTH@ 39
---INS VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 2063 @LENGTH@ 156
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @AT@ 2063 @LENGTH@ 6
------INS VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @TO@ VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @AT@ 2070 @LENGTH@ 148
---------INS SimpleName@@sql @TO@ VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @AT@ 2070 @LENGTH@ 3
---------INS StringLiteral@@"SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @TO@ VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @AT@ 2076 @LENGTH@ 142
---INS VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 2222 @LENGTH@ 69
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 2222 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 2229 @LENGTH@ 61
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 2229 @LENGTH@ 1
---------INS MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 2233 @LENGTH@ 57
------------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 2233 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 2253 @LENGTH@ 37
---------------INS NumberLiteral@@45 @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 2277 @LENGTH@ 2
---------------INS SimpleName@@pageSize @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 2281 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 2294 @LENGTH@ 32
------INS MethodInvocation@@Assert.assertEquals("",sql,s) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @AT@ 2294 @LENGTH@ 31
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 2294 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["", sql, s] @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 2301 @LENGTH@ 24
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 2314 @LENGTH@ 2
------------INS SimpleName@@sql @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 2318 @LENGTH@ 3
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 2323 @LENGTH@ 1


UPD FieldDeclaration@@private, int, [simpleValue=0] @TO@ private, int, [simpleValue] @AT@ 1088 @LENGTH@ 28
---UPD VariableDeclarationFragment@@simpleValue=0 @TO@ simpleValue @AT@ 1100 @LENGTH@ 15
------DEL NumberLiteral@@0 @AT@ 1114 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("file://target/idempotent/?idempotent=true&idempotentRepository=#jpaStore&moveExpression=done/${file:name}").to("mock:result") @TO@ MethodInvocation:from("file://target/idempotent/?idempotent=true&idempotentRepository=#jpaStore&move=done/${file:name}").to("mock:result") @AT@ 2936 @LENGTH@ 132
---UPD MethodInvocation@@from("file://target/idempotent/?idempotent=true&idempotentRepository=#jpaStore&moveExpression=done/${file:name}").to("mock:result") @TO@ from("file://target/idempotent/?idempotent=true&idempotentRepository=#jpaStore&move=done/${file:name}").to("mock:result") @AT@ 2936 @LENGTH@ 131
------UPD MethodInvocation@@MethodName:from:["file://target/idempotent/?idempotent=true&idempotentRepository=#jpaStore&moveExpression=done/${file:name}"] @TO@ MethodName:from:["file://target/idempotent/?idempotent=true&idempotentRepository=#jpaStore&move=done/${file:name}"] @AT@ 2936 @LENGTH@ 113
---------UPD StringLiteral@@"file://target/idempotent/?idempotent=true&idempotentRepository=#jpaStore&moveExpression=done/${file:name}" @TO@ "file://target/idempotent/?idempotent=true&idempotentRepository=#jpaStore&move=done/${file:name}" @AT@ 2941 @LENGTH@ 107


UPD ExpressionStatement@@MethodInvocation:IOConverter.copy(IOConverter.toInputStrean(source),bos) @TO@ MethodInvocation:IOHelper.copy(IOConverter.toInputStrean(source),bos) @AT@ 6768 @LENGTH@ 57
---UPD MethodInvocation@@IOConverter.copy(IOConverter.toInputStrean(source),bos) @TO@ IOHelper.copy(IOConverter.toInputStrean(source),bos) @AT@ 6768 @LENGTH@ 56
------UPD SimpleName@@Name:IOConverter @TO@ Name:IOHelper @AT@ 6768 @LENGTH@ 11


DEL IfStatement@@if (isInheritErrorHandler()) {  output.setErrorHandlerBuilder(getErrorHandlerBuilder());} @AT@ 4195 @LENGTH@ 109
---DEL MethodInvocation@@MethodName:isInheritErrorHandler:[] @AT@ 4199 @LENGTH@ 23
---DEL Block@@ThenBody:{  output.setErrorHandlerBuilder(getErrorHandlerBuilder());} @AT@ 4224 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:response.getOutputStream().print(loginPageHtml) @TO@ MethodInvocation:response.getWriter().write(loginPageHtml) @AT@ 3491 @LENGTH@ 48
---UPD MethodInvocation@@response.getOutputStream().print(loginPageHtml) @TO@ response.getWriter().write(loginPageHtml) @AT@ 3491 @LENGTH@ 47
------UPD MethodInvocation@@MethodName:getOutputStream:[] @TO@ MethodName:getWriter:[] @AT@ 3491 @LENGTH@ 26
------UPD SimpleName@@MethodName:print:[loginPageHtml] @TO@ MethodName:write:[loginPageHtml] @AT@ 3518 @LENGTH@ 20


INS IfStatement@@if (flowId == null) {  return null;} @TO@ MethodDeclaration@@protected, Object, MethodName:getHandlerInternal, HttpServletRequest request, Exception,  @AT@ 3700 @LENGTH@ 41
---INS InfixExpression@@flowId == null @TO@ IfStatement@@if (flowId == null) {  return null;} @AT@ 3704 @LENGTH@ 14
------INS SimpleName@@flowId @TO@ InfixExpression@@flowId == null @AT@ 3704 @LENGTH@ 6
------INS Operator@@== @TO@ InfixExpression@@flowId == null @AT@ 3710 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@flowId == null @AT@ 3714 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (flowId == null) {  return null;} @AT@ 3720 @LENGTH@ 21
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 3725 @LENGTH@ 12
---------MOV NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4508 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:this.expression=new ExpressionSubElementDefinition(expression) @TO@ Assignment:this.expression=new ExpressionSubElementType(expression) @AT@ 4125 @LENGTH@ 65
---UPD Assignment@@this.expression=new ExpressionSubElementDefinition(expression) @TO@ this.expression=new ExpressionSubElementType(expression) @AT@ 4125 @LENGTH@ 64
------UPD ClassInstanceCreation@@ExpressionSubElementDefinition[expression] @TO@ ExpressionSubElementType[expression] @AT@ 4143 @LENGTH@ 46
---------UPD SimpleType@@ExpressionSubElementDefinition @TO@ ExpressionSubElementType @AT@ 4147 @LENGTH@ 30


UPD FieldDeclaration@@private, static, final, Log, [log=LogFactory.getLog(ServerListenerInfo.class)] @TO@ private, static, final, Log, [LOG=LogFactory.getLog(ServerListenerInfo.class)] @AT@ 1204 @LENGTH@ 75
---UPD VariableDeclarationFragment@@log=LogFactory.getLog(ServerListenerInfo.class) @TO@ LOG=LogFactory.getLog(ServerListenerInfo.class) @AT@ 1229 @LENGTH@ 49
------UPD SimpleName@@log @TO@ LOG @AT@ 1229 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:queue.add(exchange.copy()) @TO@ MethodInvocation:queue.add(exchange.newCopy()) @AT@ 1677 @LENGTH@ 27
---UPD MethodInvocation@@queue.add(exchange.copy()) @TO@ queue.add(exchange.newCopy()) @AT@ 1677 @LENGTH@ 26
------UPD SimpleName@@MethodName:add:[exchange.copy()] @TO@ MethodName:add:[exchange.newCopy()] @AT@ 1683 @LENGTH@ 20
---------UPD MethodInvocation@@exchange.copy() @TO@ exchange.newCopy() @AT@ 1687 @LENGTH@ 15
------------UPD SimpleName@@MethodName:copy:[] @TO@ MethodName:newCopy:[] @AT@ 1696 @LENGTH@ 6


UPD VariableDeclarationStatement@@boolean deleted=operations.deleteFile(to.getAbsolutelFileName()); @TO@ boolean deleted=false; @AT@ 3243 @LENGTH@ 67
---UPD VariableDeclarationFragment@@deleted=operations.deleteFile(to.getAbsolutelFileName()) @TO@ deleted=false @AT@ 3251 @LENGTH@ 58
------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@deleted=operations.deleteFile(to.getAbsolutelFileName()) @AT@ 3261 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("direct:in").to("mina:tcp://localhost:8080?sync=true").to("mock:result") @TO@ MethodInvocation:from("direct:in").to("mina:tcp://localhost:8080?sync=true&lazySessionCreation=true").to("mock:result") @AT@ 2286 @LENGTH@ 128
---UPD MethodInvocation@@from("direct:in").to("mina:tcp://localhost:8080?sync=true").to("mock:result") @TO@ from("direct:in").to("mina:tcp://localhost:8080?sync=true&lazySessionCreation=true").to("mock:result") @AT@ 2286 @LENGTH@ 127
------UPD MethodInvocation@@MethodName:to:["mina:tcp://localhost:8080?sync=true"] @TO@ MethodName:to:["mina:tcp://localhost:8080?sync=true&lazySessionCreation=true"] @AT@ 2286 @LENGTH@ 84
---------UPD StringLiteral@@"mina:tcp://localhost:8080?sync=true" @TO@ "mina:tcp://localhost:8080?sync=true&lazySessionCreation=true" @AT@ 2332 @LENGTH@ 37


UPD MethodDeclaration@@public, voidMethodName:ArchiveException, String message, Exception e,  @TO@ public, voidMethodName:ArchiveException, String message, Exception cause,  @AT@ 1500 @LENGTH@ 96
---UPD SingleVariableDeclaration@@Exception e @TO@ Exception cause @AT@ 1540 @LENGTH@ 11
------UPD SimpleName@@e @TO@ cause @AT@ 1550 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:this.initCause(e) @TO@ MethodInvocation:this.initCause(cause) @AT@ 1575 @LENGTH@ 18
------UPD MethodInvocation@@this.initCause(e) @TO@ this.initCause(cause) @AT@ 1575 @LENGTH@ 17
---------UPD SimpleName@@MethodName:initCause:[e] @TO@ MethodName:initCause:[cause] @AT@ 1580 @LENGTH@ 12
------------UPD SimpleName@@e @TO@ cause @AT@ 1590 @LENGTH@ 1


UPD FieldDeclaration@@BindyKeyValuePairDataFormat, [camelDataFormat=new BindyKeyValuePairDataFormat("org.apache.camel.dataformat.bindy.model.fix.simple")] @TO@ BindyKeyValuePairDataFormat, [camelDataFormat=new BindyKeyValuePairDataFormat("org.apache.camel.dataformat.bindy.model.fix.tab")] @AT@ 3983 @LENGTH@ 132
---UPD VariableDeclarationFragment@@camelDataFormat=new BindyKeyValuePairDataFormat("org.apache.camel.dataformat.bindy.model.fix.simple") @TO@ camelDataFormat=new BindyKeyValuePairDataFormat("org.apache.camel.dataformat.bindy.model.fix.tab") @AT@ 4011 @LENGTH@ 103
------UPD ClassInstanceCreation@@BindyKeyValuePairDataFormat["org.apache.camel.dataformat.bindy.model.fix.simple"] @TO@ BindyKeyValuePairDataFormat["org.apache.camel.dataformat.bindy.model.fix.tab"] @AT@ 4029 @LENGTH@ 85
---------UPD StringLiteral@@"org.apache.camel.dataformat.bindy.model.fix.simple" @TO@ "org.apache.camel.dataformat.bindy.model.fix.tab" @AT@ 4061 @LENGTH@ 52


INS MethodDeclaration@@public, final, boolean, MethodName:isAuthenticated,  @TO@ TypeDeclaration@@[abstract]SecurityExpressionRoot,  @AT@ 1886 @LENGTH@ 77
---INS Modifier@@public @TO@ MethodDeclaration@@public, final, boolean, MethodName:isAuthenticated,  @AT@ 1886 @LENGTH@ 6
---INS Modifier@@final @TO@ MethodDeclaration@@public, final, boolean, MethodName:isAuthenticated,  @AT@ 1893 @LENGTH@ 5
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, final, boolean, MethodName:isAuthenticated,  @AT@ 1899 @LENGTH@ 7
---INS SimpleName@@MethodName:isAuthenticated @TO@ MethodDeclaration@@public, final, boolean, MethodName:isAuthenticated,  @AT@ 1907 @LENGTH@ 15
---INS ReturnStatement@@PrefixExpression:!isAnonymous() @TO@ MethodDeclaration@@public, final, boolean, MethodName:isAuthenticated,  @AT@ 1935 @LENGTH@ 22
------INS PrefixExpression@@!isAnonymous() @TO@ ReturnStatement@@PrefixExpression:!isAnonymous() @AT@ 1942 @LENGTH@ 14
---------INS Operator@@! @TO@ PrefixExpression@@!isAnonymous() @AT@ 1942 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:isAnonymous:[] @TO@ PrefixExpression@@!isAnonymous() @AT@ 1943 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:addNotificationListener, String listenerId, ObjectName name, Endpoint replyToEndpoint,  @TO@ void, MethodName:addNotificationListener, String listenerId, ObjectName name, Endpoint replyToEndpoint,  @AT@ 1203 @LENGTH@ 98
---DEL Modifier@@public @AT@ 1203 @LENGTH@ 6


UPD Block@@ThenBody:{  throw new CamelExchangeException("Could not write body",exchange);} @TO@ ThenBody:{  LOG.warn("Cannot write body: " + body + " using session: "+ session);  throw new CamelExchangeException("Cannot write body",exchange);} @AT@ 1949 @LENGTH@ 91
---UPD ThrowStatement@@ClassInstanceCreation:new CamelExchangeException("Could not write body",exchange) @TO@ ClassInstanceCreation:new CamelExchangeException("Cannot write body",exchange) @AT@ 1963 @LENGTH@ 67
------UPD ClassInstanceCreation@@CamelExchangeException["Could not write body", exchange] @TO@ CamelExchangeException["Cannot write body", exchange] @AT@ 1969 @LENGTH@ 60
---------UPD StringLiteral@@"Could not write body" @TO@ "Cannot write body" @AT@ 1996 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:LOG.warn("Cannot write body: " + body + " using session: "+ session) @TO@ Block@@ThenBody:{  throw new CamelExchangeException("Could not write body",exchange);} @AT@ 2128 @LENGTH@ 70
------INS MethodInvocation@@LOG.warn("Cannot write body: " + body + " using session: "+ session) @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("Cannot write body: " + body + " using session: "+ session) @AT@ 2128 @LENGTH@ 69
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("Cannot write body: " + body + " using session: "+ session) @AT@ 2128 @LENGTH@ 3
---------INS SimpleName@@MethodName:warn:["Cannot write body: " + body + " using session: "+ session] @TO@ MethodInvocation@@LOG.warn("Cannot write body: " + body + " using session: "+ session) @AT@ 2132 @LENGTH@ 65
------------INS InfixExpression@@"Cannot write body: " + body + " using session: "+ session @TO@ SimpleName@@MethodName:warn:["Cannot write body: " + body + " using session: "+ session] @AT@ 2137 @LENGTH@ 59
---------------INS StringLiteral@@"Cannot write body: " @TO@ InfixExpression@@"Cannot write body: " + body + " using session: "+ session @AT@ 2137 @LENGTH@ 21
---------------INS Operator@@+ @TO@ InfixExpression@@"Cannot write body: " + body + " using session: "+ session @AT@ 2158 @LENGTH@ 1
---------------INS SimpleName@@body @TO@ InfixExpression@@"Cannot write body: " + body + " using session: "+ session @AT@ 2161 @LENGTH@ 4
---------------INS StringLiteral@@" using session: " @TO@ InfixExpression@@"Cannot write body: " + body + " using session: "+ session @AT@ 2168 @LENGTH@ 18
---------------INS SimpleName@@session @TO@ InfixExpression@@"Cannot write body: " + body + " using session: "+ session @AT@ 2189 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:testOnExceptionAlterMessageWithHeadersBeforeRedelivery, Exception,  @TO@ public, void, MethodName:xxxtestOnExceptionAlterMessageWithHeadersBeforeRedelivery, Exception,  @AT@ 1547 @LENGTH@ 382
---UPD SimpleName@@MethodName:testOnExceptionAlterMessageWithHeadersBeforeRedelivery @TO@ MethodName:xxxtestOnExceptionAlterMessageWithHeadersBeforeRedelivery @AT@ 1559 @LENGTH@ 54


UPD TryStatement@@try {  String toLongName="testdata/123456789012345678901234567890123456789012345678901234567890123456789012345678901234567.xml";  final File output2=new File(dir,"bla.tar");  final OutputStream out2=new FileOutputStream(output2);  os2=new ArchiveStreamFactory().createArchiveOutputStream("tar",out2);  final TarArchiveEntry entry2=new TarArchiveEntry(toLongName);  entry2.setModTime(0);  entry2.setSize(file1.length());  entry2.setUserId(0);  entry2.setGroupId(0);  entry2.setUserName("avalon");  entry2.setGroupName("excalibur");  entry2.setMode(0100000);  os.putArchiveEntry(entry);  IOUtils.copy(new FileInputStream(file1),os2);} catch (IOException e) {  assertTrue(true);} finally {  if (os2 != null) {    os2.closeArchiveEntry();    os2.close();  }} @TO@ try {  String toLongName="testdata/123456789012345678901234567890123456789012345678901234567890123456789012345678901234567.xml";  final File output2=new File(dir,"bla.tar");  final OutputStream out2=new FileOutputStream(output2);  os2=new ArchiveStreamFactory().createArchiveOutputStream("tar",out2);  final TarArchiveEntry entry2=new TarArchiveEntry(toLongName);  entry2.setModTime(0);  entry2.setSize(file1.length());  entry2.setUserId(0);  entry2.setGroupId(0);  entry2.setUserName("avalon");  entry2.setGroupName("excalibur");  entry2.setMode(0100000);  os2.putArchiveEntry(entry);  IOUtils.copy(new FileInputStream(file1),os2);  os2.closeArchiveEntry();} catch (IOException e) {  assertTrue(true);} finally {  if (os2 != null) {    os2.close();  }} @AT@ 3145 @LENGTH@ 948
---UPD ExpressionStatement@@MethodInvocation:os.putArchiveEntry(entry) @TO@ MethodInvocation:os2.putArchiveEntry(entry) @AT@ 3819 @LENGTH@ 26
------UPD MethodInvocation@@os.putArchiveEntry(entry) @TO@ os2.putArchiveEntry(entry) @AT@ 3819 @LENGTH@ 25
---------UPD SimpleName@@Name:os @TO@ Name:os2 @AT@ 3819 @LENGTH@ 2
---UPD Block@@FinallyBody:{  if (os2 != null) {    os2.closeArchiveEntry();    os2.close();  }} @TO@ FinallyBody:{  if (os2 != null) {    os2.close();  }} @AT@ 3980 @LENGTH@ 113
------UPD IfStatement@@if (os2 != null) {  os2.closeArchiveEntry();  os2.close();} @TO@ if (os2 != null) {  os2.close();} @AT@ 3991 @LENGTH@ 92
---------UPD Block@@ThenBody:{  os2.closeArchiveEntry();  os2.close();} @TO@ ThenBody:{  os2.close();} @AT@ 4007 @LENGTH@ 76
---MOV ExpressionStatement@@MethodInvocation:os2.closeArchiveEntry() @TO@ TryStatement@@try {  String toLongName="testdata/123456789012345678901234567890123456789012345678901234567890123456789012345678901234567.xml";  final File output2=new File(dir,"bla.tar");  final OutputStream out2=new FileOutputStream(output2);  os2=new ArchiveStreamFactory().createArchiveOutputStream("tar",out2);  final TarArchiveEntry entry2=new TarArchiveEntry(toLongName);  entry2.setModTime(0);  entry2.setSize(file1.length());  entry2.setUserId(0);  entry2.setGroupId(0);  entry2.setUserName("avalon");  entry2.setGroupName("excalibur");  entry2.setMode(0100000);  os.putArchiveEntry(entry);  IOUtils.copy(new FileInputStream(file1),os2);} catch (IOException e) {  assertTrue(true);} finally {  if (os2 != null) {    os2.closeArchiveEntry();    os2.close();  }} @AT@ 4022 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"${bean:myguidgenerator}.bak") @TO@ MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"${bean:myguidgenerator}.bak") @AT@ 2098 @LENGTH@ 118
---UPD MethodInvocation@@template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"${bean:myguidgenerator}.bak") @TO@ template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"${bean:myguidgenerator}.bak") @AT@ 2098 @LENGTH@ 117
------UPD SimpleName@@MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", FileComponent.HEADER_FILE_NAME, "${bean:myguidgenerator}.bak"] @TO@ MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", NewFileComponent.HEADER_FILE_NAME, "${bean:myguidgenerator}.bak"] @AT@ 2107 @LENGTH@ 108
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2153 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2153 @LENGTH@ 13


MOV ExpressionStatement@@MethodInvocation:output.setErrorHandlerBuilder(getErrorHandlerBuilder()) @TO@ MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @AT@ 4238 @LENGTH@ 56


UPD ExpressionStatement@@MethodInvocation:from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).parallelProcessing(true).to("jms:queue2:bank1","jms:queue2:bank2","jms:queue2:bank3") @TO@ MethodInvocation:from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).setParallelProcessing(true).to("jms:queue2:bank1","jms:queue2:bank2","jms:queue2:bank3") @AT@ 4077 @LENGTH@ 441
---UPD MethodInvocation@@from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).parallelProcessing(true).to("jms:queue2:bank1","jms:queue2:bank2","jms:queue2:bank3") @TO@ from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).setParallelProcessing(true).to("jms:queue2:bank1","jms:queue2:bank2","jms:queue2:bank3") @AT@ 4077 @LENGTH@ 440
------UPD MethodInvocation@@MethodName:parallelProcessing:[true] @TO@ MethodName:setParallelProcessing:[true] @AT@ 4077 @LENGTH@ 377


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[public, static]MyDummyBean,  @AT@ 2059 @LENGTH@ 70
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2059 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2066 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2070 @LENGTH@ 8
---INS ReturnStatement@@SuperMethodInvocation:super.hashCode() @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2095 @LENGTH@ 24
------INS SuperMethodInvocation@@super.hashCode() @TO@ ReturnStatement@@SuperMethodInvocation:super.hashCode() @AT@ 2102 @LENGTH@ 16
---------INS SimpleName@@MethodName:hashCode:[] @TO@ SuperMethodInvocation@@super.hashCode() @AT@ 2108 @LENGTH@ 8


UPD VariableDeclarationStatement@@List parameter=in.getBody(List.class); @TO@ List<?> parameter=in.getBody(List.class); @AT@ 1305 @LENGTH@ 40
---INS ParameterizedType@@List<?> @TO@ VariableDeclarationStatement@@List parameter=in.getBody(List.class); @AT@ 1305 @LENGTH@ 7
------INS SimpleType@@List @TO@ ParameterizedType@@List<?> @AT@ 1305 @LENGTH@ 4
------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 1310 @LENGTH@ 1
---DEL SimpleType@@List @AT@ 1305 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new IOException("Can not rename file from: " + tempTarget + " to: "+ target) @TO@ ClassInstanceCreation:new IOException("Cannot rename file from: " + tempTarget + " to: "+ target) @AT@ 2929 @LENGTH@ 84
---UPD ClassInstanceCreation@@IOException["Can not rename file from: " + tempTarget + " to: "+ target] @TO@ IOException["Cannot rename file from: " + tempTarget + " to: "+ target] @AT@ 2935 @LENGTH@ 77
------UPD InfixExpression@@"Can not rename file from: " + tempTarget + " to: "+ target @TO@ "Cannot rename file from: " + tempTarget + " to: "+ target @AT@ 2951 @LENGTH@ 60
---------UPD StringLiteral@@"Can not rename file from: " @TO@ "Cannot rename file from: " @AT@ 2951 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:assertEquals("hello.txt",file.getAbsoluteFileName()) @TO@ MethodInvocation:assertEquals("hello.txt",file.getAbsoluteFilePath()) @AT@ 1913 @LENGTH@ 54
---UPD MethodInvocation@@assertEquals("hello.txt",file.getAbsoluteFileName()) @TO@ assertEquals("hello.txt",file.getAbsoluteFilePath()) @AT@ 1913 @LENGTH@ 53
------UPD SimpleName@@MethodName:assertEquals:["hello.txt", file.getAbsoluteFileName()] @TO@ MethodName:assertEquals:["hello.txt", file.getAbsoluteFilePath()] @AT@ 1913 @LENGTH@ 53
---------UPD MethodInvocation@@file.getAbsoluteFileName() @TO@ file.getAbsoluteFilePath() @AT@ 1939 @LENGTH@ 26
------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 1944 @LENGTH@ 21


UPD ThrowStatement@@ClassInstanceCreation:new ConnectException("Forced for testing - can not connect to remote server") @TO@ ClassInstanceCreation:new ConnectException("Forced for testing - cannot connect to remote server") @AT@ 1262 @LENGTH@ 84
---UPD ClassInstanceCreation@@ConnectException["Forced for testing - can not connect to remote server"] @TO@ ConnectException["Forced for testing - cannot connect to remote server"] @AT@ 1268 @LENGTH@ 77
------UPD StringLiteral@@"Forced for testing - can not connect to remote server" @TO@ "Forced for testing - cannot connect to remote server" @AT@ 1289 @LENGTH@ 55


UPD ExpressionStatement@@MethodInvocation:GZIPHelper.setGZIPMessageHeader(exchange.getIn()) @TO@ MethodInvocation:exchange.getIn().setHeader(HttpConstants.CONTENT_ENCODING,"gzip") @AT@ 1711 @LENGTH@ 50
---UPD MethodInvocation@@GZIPHelper.setGZIPMessageHeader(exchange.getIn()) @TO@ exchange.getIn().setHeader(HttpConstants.CONTENT_ENCODING,"gzip") @AT@ 1711 @LENGTH@ 49
------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@GZIPHelper.setGZIPMessageHeader(exchange.getIn()) @AT@ 1708 @LENGTH@ 16
------UPD SimpleName@@Name:GZIPHelper @TO@ Name:exchange @AT@ 1711 @LENGTH@ 10
------UPD SimpleName@@MethodName:setGZIPMessageHeader:[exchange.getIn()] @TO@ MethodName:setHeader:[HttpConstants.CONTENT_ENCODING, "gzip"] @AT@ 1722 @LENGTH@ 38
---------INS QualifiedName@@HttpConstants.CONTENT_ENCODING @TO@ SimpleName@@MethodName:setGZIPMessageHeader:[exchange.getIn()] @AT@ 1735 @LENGTH@ 30
------------INS SimpleName@@HttpConstants @TO@ QualifiedName@@HttpConstants.CONTENT_ENCODING @AT@ 1735 @LENGTH@ 13
------------INS SimpleName@@CONTENT_ENCODING @TO@ QualifiedName@@HttpConstants.CONTENT_ENCODING @AT@ 1749 @LENGTH@ 16
---------DEL MethodInvocation@@exchange.getIn() @AT@ 1743 @LENGTH@ 16
------------DEL SimpleName@@Name:exchange @AT@ 1743 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getIn:[] @AT@ 1752 @LENGTH@ 7
---------INS StringLiteral@@"gzip" @TO@ SimpleName@@MethodName:setGZIPMessageHeader:[exchange.getIn()] @AT@ 1767 @LENGTH@ 6


UPD IfStatement@@if (isStarted()) {  startServices(component);} @TO@ if (isStarted() || isStarting()) {  startServices(component);} @AT@ 9083 @LENGTH@ 238
---INS InfixExpression@@isStarted() || isStarting() @TO@ IfStatement@@if (isStarted()) {  startServices(component);} @AT@ 9087 @LENGTH@ 27
------INS MethodInvocation@@MethodName:isStarted:[] @TO@ InfixExpression@@isStarted() || isStarting() @AT@ 9087 @LENGTH@ 11
------INS Operator@@|| @TO@ InfixExpression@@isStarted() || isStarting() @AT@ 9098 @LENGTH@ 2
------INS MethodInvocation@@MethodName:isStarting:[] @TO@ InfixExpression@@isStarted() || isStarting() @AT@ 9102 @LENGTH@ 12
---DEL MethodInvocation@@MethodName:isStarted:[] @AT@ 9087 @LENGTH@ 11


INS ExpressionStatement@@Assignment:offset=offset < 0 ? 0 : offset @TO@ MethodDeclaration@@public, String, MethodName:generateJumpToItemQuery, int itemIndex, int pageSize,  @AT@ 1583 @LENGTH@ 31
---INS Assignment@@offset=offset < 0 ? 0 : offset @TO@ ExpressionStatement@@Assignment:offset=offset < 0 ? 0 : offset @AT@ 1583 @LENGTH@ 30
------INS SimpleName@@offset @TO@ Assignment@@offset=offset < 0 ? 0 : offset @AT@ 1583 @LENGTH@ 6
------INS Operator@@= @TO@ Assignment@@offset=offset < 0 ? 0 : offset @AT@ 1589 @LENGTH@ 1
------INS ConditionalExpression@@offset < 0 ? 0 : offset @TO@ Assignment@@offset=offset < 0 ? 0 : offset @AT@ 1592 @LENGTH@ 21
---------INS InfixExpression@@offset < 0 @TO@ ConditionalExpression@@offset < 0 ? 0 : offset @AT@ 1592 @LENGTH@ 8
------------INS SimpleName@@offset @TO@ InfixExpression@@offset < 0 @AT@ 1592 @LENGTH@ 6
------------INS Operator@@< @TO@ InfixExpression@@offset < 0 @AT@ 1598 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@offset < 0 @AT@ 1599 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ ConditionalExpression@@offset < 0 ? 0 : offset @AT@ 1603 @LENGTH@ 1
---------INS SimpleName@@offset @TO@ ConditionalExpression@@offset < 0 ? 0 : offset @AT@ 1607 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @TO@ TypeDeclaration@@[public]SqlServerPagingQueryProviderTests, AbstractSqlPagingQueryProviderTests @AT@ 1226 @LENGTH@ 324
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1226 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1233 @LENGTH@ 4
---INS SimpleName@@MethodName:testGenerateJumpToItemQueryForFirstPage @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1238 @LENGTH@ 39
---INS VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1284 @LENGTH@ 156
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @AT@ 1284 @LENGTH@ 6
------INS VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @TO@ VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @AT@ 1291 @LENGTH@ 148
---------INS SimpleName@@sql @TO@ VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @AT@ 1291 @LENGTH@ 3
---------INS StringLiteral@@"SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @TO@ VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @AT@ 1297 @LENGTH@ 142
---INS VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1443 @LENGTH@ 69
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1443 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1450 @LENGTH@ 61
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1450 @LENGTH@ 1
---------INS MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1454 @LENGTH@ 57
------------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1454 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1474 @LENGTH@ 37
---------------INS NumberLiteral@@45 @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1498 @LENGTH@ 2
---------------INS SimpleName@@pageSize @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1502 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1515 @LENGTH@ 32
------INS MethodInvocation@@Assert.assertEquals("",sql,s) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @AT@ 1515 @LENGTH@ 31
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1515 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["", sql, s] @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1522 @LENGTH@ 24
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1535 @LENGTH@ 2
------------INS SimpleName@@sql @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1539 @LENGTH@ 3
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1544 @LENGTH@ 1


DEL FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(RouteDefinition.class)] @AT@ 2145 @LENGTH@ 82
---DEL Modifier@@private @AT@ 2145 @LENGTH@ 7
---DEL Modifier@@static @AT@ 2153 @LENGTH@ 6
---DEL Modifier@@final @AT@ 2160 @LENGTH@ 5
---DEL Modifier@@transient @AT@ 2166 @LENGTH@ 9
---DEL SimpleType@@Log @AT@ 2176 @LENGTH@ 3
---DEL VariableDeclarationFragment@@LOG=LogFactory.getLog(RouteDefinition.class) @AT@ 2180 @LENGTH@ 46
------DEL SimpleName@@LOG @AT@ 2180 @LENGTH@ 3
------DEL MethodInvocation@@LogFactory.getLog(RouteDefinition.class) @AT@ 2186 @LENGTH@ 40
---------DEL SimpleName@@Name:LogFactory @AT@ 2186 @LENGTH@ 10
---------DEL SimpleName@@MethodName:getLog:[RouteDefinition.class] @AT@ 2197 @LENGTH@ 29
------------DEL TypeLiteral@@RouteDefinition.class @AT@ 2204 @LENGTH@ 21


UPD MethodDeclaration@@public, void, MethodName:processBatch, List exchanges, Exception,  @TO@ public, void, MethodName:processBatch, Queue exchanges, Exception,  @AT@ 3314 @LENGTH@ 1290
---UPD SingleVariableDeclaration@@List exchanges @TO@ Queue exchanges @AT@ 3339 @LENGTH@ 14
------UPD SimpleType@@List @TO@ Queue @AT@ 3339 @LENGTH@ 4
---DEL VariableDeclarationStatement@@final List<DataHolder> list=exchanges; @AT@ 3382 @LENGTH@ 40
------DEL Modifier@@final @AT@ 3382 @LENGTH@ 5
------DEL ParameterizedType@@List<DataHolder> @AT@ 3388 @LENGTH@ 16
---------DEL SimpleType@@List @AT@ 3388 @LENGTH@ 4
---------DEL SimpleType@@DataHolder @AT@ 3393 @LENGTH@ 10
------DEL VariableDeclarationFragment@@list=exchanges @AT@ 3405 @LENGTH@ 16
---------DEL SimpleName@@list @AT@ 3405 @LENGTH@ 4
---------DEL SimpleName@@exchanges @AT@ 3412 @LENGTH@ 9
---UPD IfStatement@@if (list.isEmpty()) {  return;} @TO@ if (exchanges.isEmpty()) {  return;} @AT@ 3431 @LENGTH@ 51
------UPD MethodInvocation@@list.isEmpty() @TO@ exchanges.isEmpty() @AT@ 3435 @LENGTH@ 14
---------UPD SimpleName@@Name:list @TO@ Name:exchanges @AT@ 3435 @LENGTH@ 4
---DEL VariableDeclarationStatement@@EntityManager entityManager=list.get(0).manager; @AT@ 3492 @LENGTH@ 50
------DEL SimpleType@@EntityManager @AT@ 3492 @LENGTH@ 13
------DEL VariableDeclarationFragment@@entityManager=list.get(0).manager @AT@ 3506 @LENGTH@ 35
---------DEL SimpleName@@entityManager @AT@ 3506 @LENGTH@ 13
---------DEL FieldAccess@@list.get(0).manager @AT@ 3522 @LENGTH@ 19
------------DEL MethodInvocation@@list.get(0) @AT@ 3522 @LENGTH@ 11
---------------DEL SimpleName@@Name:list @AT@ 3522 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:get:[0] @AT@ 3527 @LENGTH@ 6
------------------DEL NumberLiteral@@0 @AT@ 3531 @LENGTH@ 1
------------DEL SimpleName@@manager @AT@ 3534 @LENGTH@ 7
---UPD VariableDeclarationStatement@@int total=list.size(); @TO@ int total=exchanges.size(); @AT@ 3551 @LENGTH@ 24
------UPD VariableDeclarationFragment@@total=list.size() @TO@ total=exchanges.size() @AT@ 3555 @LENGTH@ 19
---------UPD MethodInvocation@@list.size() @TO@ exchanges.size() @AT@ 3563 @LENGTH@ 11
------------UPD SimpleName@@Name:list @TO@ Name:exchanges @AT@ 3563 @LENGTH@ 4
---UPD ForStatement@@for (int index=0; index < total && isRunAllowed(); index++) {  Exchange exchange=list.get(index).exchange;  Object result=list.get(index).result;  exchange.setProperty(Exchange.BATCH_INDEX,index);  exchange.setProperty(Exchange.BATCH_SIZE,total);  exchange.setProperty(Exchange.BATCH_COMPLETE,index == total - 1);  if (lockEntity(result,entityManager)) {    if (LOG.isDebugEnabled()) {      LOG.debug("Processing exchange: " + exchange);    }    try {      getProcessor().process(exchange);    } catch (    Exception e) {      throw new PersistenceException(e);    }    getDeleteHandler().deleteObject(entityManager,result);  }} @TO@ for (int index=0; index < total && isRunAllowed(); index++) {  DataHolder holder=(DataHolder)exchanges.poll();  EntityManager entityManager=holder.manager;  Exchange exchange=holder.exchange;  Object result=holder.result;  exchange.setProperty(Exchange.BATCH_INDEX,index);  exchange.setProperty(Exchange.BATCH_SIZE,total);  exchange.setProperty(Exchange.BATCH_COMPLETE,index == total - 1);  if (lockEntity(result,entityManager)) {    if (LOG.isDebugEnabled()) {      LOG.debug("Processing exchange: " + exchange);    }    try {      getProcessor().process(exchange);    } catch (    Exception e) {      throw new PersistenceException(e);    }    getDeleteHandler().deleteObject(entityManager,result);  }} @AT@ 3585 @LENGTH@ 1013
------INS VariableDeclarationStatement@@DataHolder holder=(DataHolder)exchanges.poll(); @TO@ ForStatement@@for (int index=0; index < total && isRunAllowed(); index++) {  Exchange exchange=list.get(index).exchange;  Object result=list.get(index).result;  exchange.setProperty(Exchange.BATCH_INDEX,index);  exchange.setProperty(Exchange.BATCH_SIZE,total);  exchange.setProperty(Exchange.BATCH_COMPLETE,index == total - 1);  if (lockEntity(result,entityManager)) {    if (LOG.isDebugEnabled()) {      LOG.debug("Processing exchange: " + exchange);    }    try {      getProcessor().process(exchange);    } catch (    Exception e) {      throw new PersistenceException(e);    }    getDeleteHandler().deleteObject(entityManager,result);  }} @AT@ 3650 @LENGTH@ 50
---------INS SimpleType@@DataHolder @TO@ VariableDeclarationStatement@@DataHolder holder=(DataHolder)exchanges.poll(); @AT@ 3650 @LENGTH@ 10
---------INS VariableDeclarationFragment@@holder=(DataHolder)exchanges.poll() @TO@ VariableDeclarationStatement@@DataHolder holder=(DataHolder)exchanges.poll(); @AT@ 3661 @LENGTH@ 38
------------INS SimpleName@@holder @TO@ VariableDeclarationFragment@@holder=(DataHolder)exchanges.poll() @AT@ 3661 @LENGTH@ 6
------------INS CastExpression@@(DataHolder)exchanges.poll() @TO@ VariableDeclarationFragment@@holder=(DataHolder)exchanges.poll() @AT@ 3670 @LENGTH@ 29
---------------INS SimpleType@@DataHolder @TO@ CastExpression@@(DataHolder)exchanges.poll() @AT@ 3671 @LENGTH@ 10
---------------INS MethodInvocation@@exchanges.poll() @TO@ CastExpression@@(DataHolder)exchanges.poll() @AT@ 3683 @LENGTH@ 16
------------------INS SimpleName@@Name:exchanges @TO@ MethodInvocation@@exchanges.poll() @AT@ 3683 @LENGTH@ 9
------------------INS SimpleName@@MethodName:poll:[] @TO@ MethodInvocation@@exchanges.poll() @AT@ 3693 @LENGTH@ 6
------INS VariableDeclarationStatement@@EntityManager entityManager=holder.manager; @TO@ ForStatement@@for (int index=0; index < total && isRunAllowed(); index++) {  Exchange exchange=list.get(index).exchange;  Object result=list.get(index).result;  exchange.setProperty(Exchange.BATCH_INDEX,index);  exchange.setProperty(Exchange.BATCH_SIZE,total);  exchange.setProperty(Exchange.BATCH_COMPLETE,index == total - 1);  if (lockEntity(result,entityManager)) {    if (LOG.isDebugEnabled()) {      LOG.debug("Processing exchange: " + exchange);    }    try {      getProcessor().process(exchange);    } catch (    Exception e) {      throw new PersistenceException(e);    }    getDeleteHandler().deleteObject(entityManager,result);  }} @AT@ 3713 @LENGTH@ 45
---------INS SimpleType@@EntityManager @TO@ VariableDeclarationStatement@@EntityManager entityManager=holder.manager; @AT@ 3713 @LENGTH@ 13
---------INS VariableDeclarationFragment@@entityManager=holder.manager @TO@ VariableDeclarationStatement@@EntityManager entityManager=holder.manager; @AT@ 3727 @LENGTH@ 30
------------INS SimpleName@@entityManager @TO@ VariableDeclarationFragment@@entityManager=holder.manager @AT@ 3727 @LENGTH@ 13
------------INS QualifiedName@@holder.manager @TO@ VariableDeclarationFragment@@entityManager=holder.manager @AT@ 3743 @LENGTH@ 14
---------------INS SimpleName@@holder @TO@ QualifiedName@@holder.manager @AT@ 3743 @LENGTH@ 6
---------------INS SimpleName@@manager @TO@ QualifiedName@@holder.manager @AT@ 3750 @LENGTH@ 7
------UPD VariableDeclarationStatement@@Exchange exchange=list.get(index).exchange; @TO@ Exchange exchange=holder.exchange; @AT@ 3721 @LENGTH@ 45
---------UPD VariableDeclarationFragment@@exchange=list.get(index).exchange @TO@ exchange=holder.exchange @AT@ 3730 @LENGTH@ 35
------------DEL FieldAccess@@list.get(index).exchange @AT@ 3741 @LENGTH@ 24
---------------DEL MethodInvocation@@list.get(index) @AT@ 3741 @LENGTH@ 15
------------------DEL SimpleName@@Name:list @AT@ 3741 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:get:[index] @AT@ 3746 @LENGTH@ 10
---------------------DEL SimpleName@@index @AT@ 3750 @LENGTH@ 5
---------------DEL SimpleName@@exchange @AT@ 3757 @LENGTH@ 8
------------INS QualifiedName@@holder.exchange @TO@ VariableDeclarationFragment@@exchange=list.get(index).exchange @AT@ 3791 @LENGTH@ 15
---------------INS SimpleName@@holder @TO@ QualifiedName@@holder.exchange @AT@ 3791 @LENGTH@ 6
---------------INS SimpleName@@exchange @TO@ QualifiedName@@holder.exchange @AT@ 3798 @LENGTH@ 8
------UPD VariableDeclarationStatement@@Object result=list.get(index).result; @TO@ Object result=holder.result; @AT@ 3779 @LENGTH@ 39
---------UPD VariableDeclarationFragment@@result=list.get(index).result @TO@ result=holder.result @AT@ 3786 @LENGTH@ 31
------------DEL FieldAccess@@list.get(index).result @AT@ 3795 @LENGTH@ 22
---------------DEL MethodInvocation@@list.get(index) @AT@ 3795 @LENGTH@ 15
------------------DEL SimpleName@@Name:list @AT@ 3795 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:get:[index] @AT@ 3800 @LENGTH@ 10
---------------------DEL SimpleName@@index @AT@ 3804 @LENGTH@ 5
---------------DEL SimpleName@@result @AT@ 3811 @LENGTH@ 6
------------INS QualifiedName@@holder.result @TO@ VariableDeclarationFragment@@result=list.get(index).result @AT@ 3836 @LENGTH@ 13
---------------INS SimpleName@@holder @TO@ QualifiedName@@holder.result @AT@ 3836 @LENGTH@ 6
---------------INS SimpleName@@result @TO@ QualifiedName@@holder.result @AT@ 3843 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:answer=pool.acquireIfAbsent(endpoint,answer) @TO@ Assignment:answer=pool.addAndAcquire(endpoint,answer) @AT@ 7946 @LENGTH@ 48
---UPD Assignment@@answer=pool.acquireIfAbsent(endpoint,answer) @TO@ answer=pool.addAndAcquire(endpoint,answer) @AT@ 7946 @LENGTH@ 47
------UPD MethodInvocation@@pool.acquireIfAbsent(endpoint,answer) @TO@ pool.addAndAcquire(endpoint,answer) @AT@ 7955 @LENGTH@ 38
---------UPD SimpleName@@MethodName:acquireIfAbsent:[endpoint, answer] @TO@ MethodName:addAndAcquire:[endpoint, answer] @AT@ 7960 @LENGTH@ 33


MOV ExpressionStatement@@MethodInvocation:setIn(new GenericFileMessage<T>(file)) @TO@ MethodDeclaration@@public, void, MethodName:setGenericFile, GenericFile<T> file,  @AT@ 3096 @LENGTH@ 39


INS ExpressionStatement@@MethodInvocation:endpoint.expectedHeaderReceived("foo",123) @TO@ MethodDeclaration@@public, void, MethodName:testPerformance, Exception,  @AT@ 1647 @LENGTH@ 44
---INS MethodInvocation@@endpoint.expectedHeaderReceived("foo",123) @TO@ ExpressionStatement@@MethodInvocation:endpoint.expectedHeaderReceived("foo",123) @AT@ 1647 @LENGTH@ 43
------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.expectedHeaderReceived("foo",123) @AT@ 1647 @LENGTH@ 8
------INS SimpleName@@MethodName:expectedHeaderReceived:["foo", 123] @TO@ MethodInvocation@@endpoint.expectedHeaderReceived("foo",123) @AT@ 1656 @LENGTH@ 34
---------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:expectedHeaderReceived:["foo", 123] @AT@ 1679 @LENGTH@ 5
---------INS NumberLiteral@@123 @TO@ SimpleName@@MethodName:expectedHeaderReceived:["foo", 123] @AT@ 1686 @LENGTH@ 3


UPD FieldDeclaration@@private, Endpoint, [endpoint] @TO@ private, final, Endpoint, [endpoint] @AT@ 1345 @LENGTH@ 26
---INS Modifier@@final @TO@ FieldDeclaration@@private, Endpoint, [endpoint] @AT@ 1319 @LENGTH@ 5


UPD TypeDeclaration@@[private]XMLPropertyListHandler, DefaultHandler @TO@ [private, static]XMLPropertyListHandler, DefaultHandler @AT@ 12958 @LENGTH@ 4388
---INS Modifier@@static @TO@ TypeDeclaration@@[private]XMLPropertyListHandler, DefaultHandler @AT@ 12966 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:numToWrite-=numToWrite @TO@ Assignment:numToWrite=0 @AT@ 10724 @LENGTH@ 25
---UPD Assignment@@numToWrite-=numToWrite @TO@ numToWrite=0 @AT@ 10724 @LENGTH@ 24
------UPD Operator@@-= @TO@ = @AT@ 10734 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ Assignment@@numToWrite-=numToWrite @AT@ 10737 @LENGTH@ 1
------DEL SimpleName@@numToWrite @AT@ 10738 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:close, IOException,  @TO@ protected, void, MethodName:finish, IOException,  @AT@ 11157 @LENGTH@ 306
---UPD Modifier@@public @TO@ protected @AT@ 11157 @LENGTH@ 6
---UPD SimpleName@@MethodName:close @TO@ MethodName:finish @AT@ 11169 @LENGTH@ 5


UPD Block@@ElseBody:{  final Exchange wireTapExchange=configureExchange(exchange);  getExecutorService().submit(new Callable<Object>(){    public Object call() throws Exception {      if (LOG.isDebugEnabled()) {        LOG.debug("Processing wiretap: " + wireTapExchange);      }      producer.process(wireTapExchange);      return null;    }  });} @TO@ ElseBody:{  Exchange wireTapExchange=configureExchange(exchange);  procesWireTap(wireTapExchange);} @AT@ 2678 @LENGTH@ 745
---UPD VariableDeclarationStatement@@final Exchange wireTapExchange=configureExchange(exchange); @TO@ Exchange wireTapExchange=configureExchange(exchange); @AT@ 2692 @LENGTH@ 61
------DEL Modifier@@final @AT@ 2692 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:procesWireTap(wireTapExchange) @TO@ Block@@ElseBody:{  final Exchange wireTapExchange=configureExchange(exchange);  getExecutorService().submit(new Callable<Object>(){    public Object call() throws Exception {      if (LOG.isDebugEnabled()) {        LOG.debug("Processing wiretap: " + wireTapExchange);      }      producer.process(wireTapExchange);      return null;    }  });} @AT@ 2760 @LENGTH@ 31
------MOV MethodInvocation@@producer.process(wireTapExchange) @TO@ ExpressionStatement@@MethodInvocation:procesWireTap(wireTapExchange) @AT@ 3312 @LENGTH@ 33
---DEL ExpressionStatement@@MethodInvocation:getExecutorService().submit(new Callable<Object>(){
  public Object call() throws Exception {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Processing wiretap: " + wireTapExchange);
    }
    producer.process(wireTapExchange);
    return null;
  }
}
) @AT@ 3036 @LENGTH@ 377
------DEL MethodInvocation@@getExecutorService().submit(new Callable<Object>(){
  public Object call() throws Exception {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Processing wiretap: " + wireTapExchange);
    }
    producer.process(wireTapExchange);
    return null;
  }
}
) @AT@ 3036 @LENGTH@ 376
---------DEL MethodInvocation@@MethodName:getExecutorService:[] @AT@ 3036 @LENGTH@ 20
---------DEL SimpleName@@MethodName:submit:[new Callable<Object>(){
  public Object call() throws Exception {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Processing wiretap: " + wireTapExchange);
    }
    producer.process(wireTapExchange);
    return null;
  }
}
] @AT@ 3057 @LENGTH@ 355
------------DEL ClassInstanceCreation@@Callable<Object>[] @AT@ 3064 @LENGTH@ 347
---------------DEL New@@new @AT@ 3064 @LENGTH@ 3
---------------DEL ParameterizedType@@Callable<Object> @AT@ 3068 @LENGTH@ 16
------------------DEL SimpleType@@Callable @AT@ 3068 @LENGTH@ 8
------------------DEL SimpleType@@Object @AT@ 3077 @LENGTH@ 6
---------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 3087 @LENGTH@ 324
------------------DEL MethodDeclaration@@public, Object, MethodName:call, Exception,  @AT@ 3105 @LENGTH@ 292
---------------------DEL Modifier@@public @AT@ 3105 @LENGTH@ 6
---------------------DEL SimpleType@@Object @AT@ 3112 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:call @AT@ 3119 @LENGTH@ 4
---------------------DEL SimpleType@@Exception @AT@ 3133 @LENGTH@ 9
---------------------DEL IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Processing wiretap: " + wireTapExchange);} @AT@ 3165 @LENGTH@ 126
------------------------DEL MethodInvocation@@LOG.isDebugEnabled() @AT@ 3169 @LENGTH@ 20
---------------------------DEL SimpleName@@Name:LOG @AT@ 3169 @LENGTH@ 3
---------------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 3173 @LENGTH@ 16
------------------------DEL Block@@ThenBody:{  LOG.debug("Processing wiretap: " + wireTapExchange);} @AT@ 3191 @LENGTH@ 100
---------------------------DEL ExpressionStatement@@MethodInvocation:LOG.debug("Processing wiretap: " + wireTapExchange) @AT@ 3217 @LENGTH@ 52
------------------------------DEL MethodInvocation@@LOG.debug("Processing wiretap: " + wireTapExchange) @AT@ 3217 @LENGTH@ 51
---------------------------------DEL SimpleName@@Name:LOG @AT@ 3217 @LENGTH@ 3
---------------------------------DEL SimpleName@@MethodName:debug:["Processing wiretap: " + wireTapExchange] @AT@ 3221 @LENGTH@ 47
------------------------------------DEL InfixExpression@@"Processing wiretap: " + wireTapExchange @AT@ 3227 @LENGTH@ 40
---------------------------------------DEL StringLiteral@@"Processing wiretap: " @AT@ 3227 @LENGTH@ 22
---------------------------------------DEL Operator@@+ @AT@ 3249 @LENGTH@ 1
---------------------------------------DEL SimpleName@@wireTapExchange @AT@ 3252 @LENGTH@ 15
---------------------DEL ExpressionStatement@@MethodInvocation:producer.process(wireTapExchange) @AT@ 3312 @LENGTH@ 34
---------------------DEL ReturnStatement@@NullLiteral:null @AT@ 3367 @LENGTH@ 12
------------------------DEL NullLiteral@@null @AT@ 3374 @LENGTH@ 4


UPD IfStatement@@if (headerName.equals("JMSReplyTo") && headerValue != null) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else if (headerName.equals("JMSType")) {  jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));} else if (LOG.isDebugEnabled()) {  LOG.debug("Ignoring JMS header: " + headerName + " with value: "+ headerValue);} @TO@ if (headerName.equals("JMSReplyTo") && headerValue != null) {  if (exchange.getPattern().isOutCapable()) {    jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));  } else {    if (LOG.isDebugEnabled()) {      LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);    }  }} else if (headerName.equals("JMSType")) {  jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));} else if (LOG.isDebugEnabled()) {  LOG.debug("Ignoring JMS header: " + headerName + " with value: "+ headerValue);} @AT@ 10700 @LENGTH@ 783
---INS Block@@ThenBody:{  if (exchange.getPattern().isOutCapable()) {    jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));  } else {    if (LOG.isDebugEnabled()) {      LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);    }  }} @TO@ IfStatement@@if (headerName.equals("JMSReplyTo") && headerValue != null) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else if (headerName.equals("JMSType")) {  jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));} else if (LOG.isDebugEnabled()) {  LOG.debug("Ignoring JMS header: " + headerName + " with value: "+ headerValue);} @AT@ 10871 @LENGTH@ 483
------INS IfStatement@@if (exchange.getPattern().isOutCapable()) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);  }} @TO@ Block@@ThenBody:{  if (exchange.getPattern().isOutCapable()) {    jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));  } else {    if (LOG.isDebugEnabled()) {      LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);    }  }} @AT@ 10889 @LENGTH@ 451
---------MOV Block@@ThenBody:{  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);  }} @AT@ 10760 @LENGTH@ 129
---------MOV Block@@ThenBody:{  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);  }} @AT@ 10760 @LENGTH@ 129
---------INS MethodInvocation@@exchange.getPattern().isOutCapable() @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);  }} @AT@ 10893 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getPattern:[] @TO@ MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 10893 @LENGTH@ 21
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 10893 @LENGTH@ 8
------------INS SimpleName@@MethodName:isOutCapable:[] @TO@ MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 10915 @LENGTH@ 14
---------INS Block@@ElseBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);  }} @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);  }} @AT@ 11148 @LENGTH@ 192
------------INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);} @TO@ Block@@ElseBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);  }} @AT@ 11170 @LENGTH@ 152
---------------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);} @AT@ 11174 @LENGTH@ 20
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 11174 @LENGTH@ 3
------------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 11178 @LENGTH@ 16
---------------INS Block@@ThenBody:{  LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);} @AT@ 11196 @LENGTH@ 126
------------------INS ExpressionStatement@@MethodInvocation:LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue) @TO@ Block@@ThenBody:{  LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);} @AT@ 11222 @LENGTH@ 78
---------------------INS MethodInvocation@@LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue) @AT@ 11222 @LENGTH@ 77
------------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue) @AT@ 11222 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:debug:["Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue] @TO@ MethodInvocation@@LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue) @AT@ 11226 @LENGTH@ 73
---------------------------INS InfixExpression@@"Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue @TO@ SimpleName@@MethodName:debug:["Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue] @AT@ 11232 @LENGTH@ 66
------------------------------INS StringLiteral@@"Exchange is not out capable, Ignoring JMSReplyTo: " @TO@ InfixExpression@@"Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue @AT@ 11232 @LENGTH@ 52
------------------------------INS Operator@@+ @TO@ InfixExpression@@"Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue @AT@ 11284 @LENGTH@ 1
------------------------------INS SimpleName@@headerValue @TO@ InfixExpression@@"Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue @AT@ 11287 @LENGTH@ 11


UPD Block@@WhileBody:{  if (timeout > 0) {    long delta=System.currentTimeMillis() - start;    if (delta > timeout) {      LOG.debug("Cannot acquire read lock within " + timeout + " millis. Will skip the file: "+ file);      return false;    }  }  exclusive=operations.renameFile(file.getAbsoluteFileName(),newFile.getAbsoluteFileName());  if (exclusive) {    if (LOG.isTraceEnabled()) {      LOG.trace("Acquired exclusive read lock to file: " + file);    }    operations.renameFile(newFile.getAbsoluteFileName(),file.getAbsoluteFileName());  } else {    boolean interrupted=sleep();    if (interrupted) {      return false;    }  }} @TO@ WhileBody:{  if (timeout > 0) {    long delta=System.currentTimeMillis() - start;    if (delta > timeout) {      LOG.debug("Cannot acquire read lock within " + timeout + " millis. Will skip the file: "+ file);      return false;    }  }  exclusive=operations.renameFile(file.getAbsoluteFilePath(),newFile.getAbsoluteFilePath());  if (exclusive) {    if (LOG.isTraceEnabled()) {      LOG.trace("Acquired exclusive read lock to file: " + file);    }    operations.renameFile(newFile.getAbsoluteFilePath(),file.getAbsoluteFilePath());  } else {    boolean interrupted=sleep();    if (interrupted) {      return false;    }  }} @AT@ 2484 @LENGTH@ 1165
---UPD ExpressionStatement@@Assignment:exclusive=operations.renameFile(file.getAbsoluteFileName(),newFile.getAbsoluteFileName()) @TO@ Assignment:exclusive=operations.renameFile(file.getAbsoluteFilePath(),newFile.getAbsoluteFilePath()) @AT@ 2952 @LENGTH@ 93
------UPD Assignment@@exclusive=operations.renameFile(file.getAbsoluteFileName(),newFile.getAbsoluteFileName()) @TO@ exclusive=operations.renameFile(file.getAbsoluteFilePath(),newFile.getAbsoluteFilePath()) @AT@ 2952 @LENGTH@ 92
---------UPD MethodInvocation@@operations.renameFile(file.getAbsoluteFileName(),newFile.getAbsoluteFileName()) @TO@ operations.renameFile(file.getAbsoluteFilePath(),newFile.getAbsoluteFilePath()) @AT@ 2964 @LENGTH@ 80
------------UPD SimpleName@@MethodName:renameFile:[file.getAbsoluteFileName(), newFile.getAbsoluteFileName()] @TO@ MethodName:renameFile:[file.getAbsoluteFilePath(), newFile.getAbsoluteFilePath()] @AT@ 2975 @LENGTH@ 69
---------------UPD MethodInvocation@@file.getAbsoluteFileName() @TO@ file.getAbsoluteFilePath() @AT@ 2986 @LENGTH@ 26
------------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 2991 @LENGTH@ 21
---------------UPD MethodInvocation@@newFile.getAbsoluteFileName() @TO@ newFile.getAbsoluteFilePath() @AT@ 3014 @LENGTH@ 29
------------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 3022 @LENGTH@ 21
---UPD IfStatement@@if (exclusive) {  if (LOG.isTraceEnabled()) {    LOG.trace("Acquired exclusive read lock to file: " + file);  }  operations.renameFile(newFile.getAbsoluteFileName(),file.getAbsoluteFileName());} else {  boolean interrupted=sleep();  if (interrupted) {    return false;  }} @TO@ if (exclusive) {  if (LOG.isTraceEnabled()) {    LOG.trace("Acquired exclusive read lock to file: " + file);  }  operations.renameFile(newFile.getAbsoluteFilePath(),file.getAbsoluteFilePath());} else {  boolean interrupted=sleep();  if (interrupted) {    return false;  }} @AT@ 3058 @LENGTH@ 581
------UPD Block@@ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("Acquired exclusive read lock to file: " + file);  }  operations.renameFile(newFile.getAbsoluteFileName(),file.getAbsoluteFileName());} @TO@ ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("Acquired exclusive read lock to file: " + file);  }  operations.renameFile(newFile.getAbsoluteFilePath(),file.getAbsoluteFilePath());} @AT@ 3073 @LENGTH@ 307
---------UPD ExpressionStatement@@MethodInvocation:operations.renameFile(newFile.getAbsoluteFileName(),file.getAbsoluteFileName()) @TO@ MethodInvocation:operations.renameFile(newFile.getAbsoluteFilePath(),file.getAbsoluteFilePath()) @AT@ 3285 @LENGTH@ 81
------------UPD MethodInvocation@@operations.renameFile(newFile.getAbsoluteFileName(),file.getAbsoluteFileName()) @TO@ operations.renameFile(newFile.getAbsoluteFilePath(),file.getAbsoluteFilePath()) @AT@ 3285 @LENGTH@ 80
---------------UPD SimpleName@@MethodName:renameFile:[newFile.getAbsoluteFileName(), file.getAbsoluteFileName()] @TO@ MethodName:renameFile:[newFile.getAbsoluteFilePath(), file.getAbsoluteFilePath()] @AT@ 3296 @LENGTH@ 69
------------------UPD MethodInvocation@@newFile.getAbsoluteFileName() @TO@ newFile.getAbsoluteFilePath() @AT@ 3307 @LENGTH@ 29
---------------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 3315 @LENGTH@ 21
------------------UPD MethodInvocation@@file.getAbsoluteFileName() @TO@ file.getAbsoluteFilePath() @AT@ 3338 @LENGTH@ 26
---------------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 3343 @LENGTH@ 21


UPD ReturnStatement@@MethodInvocation:IOConverter.toInputStream(s) @TO@ MethodInvocation:IOConverter.toInputStream(s,null) @AT@ 2897 @LENGTH@ 36
---UPD MethodInvocation@@IOConverter.toInputStream(s) @TO@ IOConverter.toInputStream(s,null) @AT@ 2904 @LENGTH@ 28
------UPD SimpleName@@MethodName:toInputStream:[s] @TO@ MethodName:toInputStream:[s, null] @AT@ 2916 @LENGTH@ 16
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toInputStream:[s] @AT@ 2933 @LENGTH@ 4


UPD IfStatement@@if (clazz == null) {  clazz=newInstance(doFindFactoryProperties(key),propertyPrefix);  classMap.put(propertyPrefix + key,clazz);} @TO@ if (clazz == null) {  clazz=newInstance(doFindFactoryProperties(key),propertyPrefix);  if (clazz != null) {    classMap.put(propertyPrefix + key,clazz);  }} @AT@ 4077 @LENGTH@ 164
---UPD Block@@ThenBody:{  clazz=newInstance(doFindFactoryProperties(key),propertyPrefix);  classMap.put(propertyPrefix + key,clazz);} @TO@ ThenBody:{  clazz=newInstance(doFindFactoryProperties(key),propertyPrefix);  if (clazz != null) {    classMap.put(propertyPrefix + key,clazz);  }} @AT@ 4096 @LENGTH@ 145
------INS IfStatement@@if (clazz != null) {  classMap.put(propertyPrefix + key,clazz);} @TO@ Block@@ThenBody:{  clazz=newInstance(doFindFactoryProperties(key),propertyPrefix);  classMap.put(propertyPrefix + key,clazz);} @AT@ 4189 @LENGTH@ 93
---------INS InfixExpression@@clazz != null @TO@ IfStatement@@if (clazz != null) {  classMap.put(propertyPrefix + key,clazz);} @AT@ 4193 @LENGTH@ 13
------------INS SimpleName@@clazz @TO@ InfixExpression@@clazz != null @AT@ 4193 @LENGTH@ 5
------------INS Operator@@!= @TO@ InfixExpression@@clazz != null @AT@ 4198 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@clazz != null @AT@ 4202 @LENGTH@ 4
---------INS Block@@ThenBody:{  classMap.put(propertyPrefix + key,clazz);} @TO@ IfStatement@@if (clazz != null) {  classMap.put(propertyPrefix + key,clazz);} @AT@ 4208 @LENGTH@ 74
------------MOV ExpressionStatement@@MethodInvocation:classMap.put(propertyPrefix + key,clazz) @TO@ Block@@ThenBody:{  classMap.put(propertyPrefix + key,clazz);} @AT@ 4189 @LENGTH@ 42


UPD MethodDeclaration@@public, void, MethodName:testInvalidHostConfiguratiob,  @TO@ public, void, MethodName:testInvalidHostConfiguration,  @AT@ 1573 @LENGTH@ 67
---UPD SimpleName@@MethodName:testInvalidHostConfiguratiob @TO@ MethodName:testInvalidHostConfiguration @AT@ 1585 @LENGTH@ 28


MOV FieldDeclaration@@protected, Class<? extends Policy>, [type=TransactedPolicy.class] @TO@ TypeDeclaration@@[@XmlRootElement(name="transacted"), @XmlAccessorType(XmlAccessType.FIELD), public]TransactedDefinition, OutputDefinition<ProcessorDefinition> @AT@ 1959 @LENGTH@ 64


UPD WhileStatement@@while ((entry=in.getNextEntry()) != null) {  boolean copy=true;  for (Iterator it=workingSet.iterator(); it.hasNext(); ) {    Change change=(Change)it.next();    if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {      if (entry.getName().equals(change.targetFile())) {        copy=false;        it.remove();        break;      } else       if (entry.getName().matches(change.targetFile() + "/.*")) {        copy=false;        break;      }    }  }  if (copy) {    if (!isDeletedLater(workingSet,entry)) {      copyStream(in,out,entry);    }  }} @TO@ while ((entry=in.getNextEntry()) != null) {  boolean copy=true;  for (Iterator it=workingSet.iterator(); it.hasNext(); ) {    Change change=(Change)it.next();    if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {      if (entry.getName().equals(change.targetFile())) {        copy=false;        it.remove();        break;      }    } else     if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {      if (entry.getName().matches(change.targetFile() + "/.*")) {        copy=false;        break;      }    }  }  if (copy) {    if (!isDeletedLater(workingSet,entry)) {      copyStream(in,out,entry);    }  }} @AT@ 2770 @LENGTH@ 902
---DEL Block@@WhileBody:{  boolean copy=true;  for (Iterator it=workingSet.iterator(); it.hasNext(); ) {    Change change=(Change)it.next();    if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {      if (entry.getName().equals(change.targetFile())) {        copy=false;        it.remove();        break;      } else       if (entry.getName().matches(change.targetFile() + "/.*")) {        copy=false;        break;      }    }  }  if (copy) {    if (!isDeletedLater(workingSet,entry)) {      copyStream(in,out,entry);    }  }} @AT@ 2814 @LENGTH@ 858
------DEL ForStatement@@for (Iterator it=workingSet.iterator(); it.hasNext(); ) {  Change change=(Change)it.next();  if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {    if (entry.getName().equals(change.targetFile())) {      copy=false;      it.remove();      break;    } else     if (entry.getName().matches(change.targetFile() + "/.*")) {      copy=false;      break;    }  }} @AT@ 2862 @LENGTH@ 637
---------DEL MethodInvocation@@it.hasNext() @AT@ 2904 @LENGTH@ 12
------------DEL SimpleName@@Name:it @AT@ 2904 @LENGTH@ 2
------------DEL SimpleName@@MethodName:hasNext:[] @AT@ 2907 @LENGTH@ 9
---------DEL IfStatement@@if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {  if (entry.getName().equals(change.targetFile())) {    copy=false;    it.remove();    break;  } else   if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @AT@ 2990 @LENGTH@ 495
---MOV Block@@ThenBody:{  if (entry.getName().equals(change.targetFile())) {    copy=false;    it.remove();    break;  } else   if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @TO@ WhileStatement@@while ((entry=in.getNextEntry()) != null) {  boolean copy=true;  for (Iterator it=workingSet.iterator(); it.hasNext(); ) {    Change change=(Change)it.next();    if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {      if (entry.getName().equals(change.targetFile())) {        copy=false;        it.remove();        break;      } else       if (entry.getName().matches(change.targetFile() + "/.*")) {        copy=false;        break;      }    }  }  if (copy) {    if (!isDeletedLater(workingSet,entry)) {      copyStream(in,out,entry);    }  }} @AT@ 3082 @LENGTH@ 403
------MOV VariableDeclarationStatement@@boolean copy=true; @TO@ Block@@ThenBody:{  if (entry.getName().equals(change.targetFile())) {    copy=false;    it.remove();    break;  } else   if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @AT@ 2828 @LENGTH@ 20
------INS ForStatement@@for (Iterator it=workingSet.iterator(); it.hasNext(); ) {  Change change=(Change)it.next();  if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {    if (entry.getName().equals(change.targetFile())) {      copy=false;      it.remove();      break;    }  } else   if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {    if (entry.getName().matches(change.targetFile() + "/.*")) {      copy=false;      break;    }  }} @TO@ Block@@ThenBody:{  if (entry.getName().equals(change.targetFile())) {    copy=false;    it.remove();    break;  } else   if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @AT@ 2862 @LENGTH@ 772
---------MOV VariableDeclarationExpression@@Iterator it=workingSet.iterator() @TO@ ForStatement@@for (Iterator it=workingSet.iterator(); it.hasNext(); ) {  Change change=(Change)it.next();  if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {    if (entry.getName().equals(change.targetFile())) {      copy=false;      it.remove();      break;    }  } else   if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {    if (entry.getName().matches(change.targetFile() + "/.*")) {      copy=false;      break;    }  }} @AT@ 2867 @LENGTH@ 35
---------INS MethodInvocation@@it.hasNext() @TO@ ForStatement@@for (Iterator it=workingSet.iterator(); it.hasNext(); ) {  Change change=(Change)it.next();  if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {    if (entry.getName().equals(change.targetFile())) {      copy=false;      it.remove();      break;    }  } else   if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {    if (entry.getName().matches(change.targetFile() + "/.*")) {      copy=false;      break;    }  }} @AT@ 2904 @LENGTH@ 12
------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.hasNext() @AT@ 2904 @LENGTH@ 2
------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@it.hasNext() @AT@ 2907 @LENGTH@ 9
---------MOV VariableDeclarationStatement@@Change change=(Change)it.next(); @TO@ ForStatement@@for (Iterator it=workingSet.iterator(); it.hasNext(); ) {  Change change=(Change)it.next();  if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {    if (entry.getName().equals(change.targetFile())) {      copy=false;      it.remove();      break;    }  } else   if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {    if (entry.getName().matches(change.targetFile() + "/.*")) {      copy=false;      break;    }  }} @AT@ 2937 @LENGTH@ 35
---------MOV IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} else if (entry.getName().matches(change.targetFile() + "/.*")) {  copy=false;  break;} @TO@ ForStatement@@for (Iterator it=workingSet.iterator(); it.hasNext(); ) {  Change change=(Change)it.next();  if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {    if (entry.getName().equals(change.targetFile())) {      copy=false;      it.remove();      break;    }  } else   if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {    if (entry.getName().matches(change.targetFile() + "/.*")) {      copy=false;      break;    }  }} @AT@ 3104 @LENGTH@ 363
------------MOV InfixExpression@@change.type() == Change.TYPE_DELETE && entry.getName() != null @TO@ IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} else if (entry.getName().matches(change.targetFile() + "/.*")) {  copy=false;  break;} @AT@ 2994 @LENGTH@ 86
------------MOV InfixExpression@@change.type() == Change.TYPE_DELETE && entry.getName() != null @TO@ IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} else if (entry.getName().matches(change.targetFile() + "/.*")) {  copy=false;  break;} @AT@ 2994 @LENGTH@ 86
------------INS Block@@ThenBody:{  if (entry.getName().equals(change.targetFile())) {    copy=false;    it.remove();    break;  }} @TO@ IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} else if (entry.getName().matches(change.targetFile() + "/.*")) {  copy=false;  break;} @AT@ 3079 @LENGTH@ 218
---------------INS IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} @TO@ Block@@ThenBody:{  if (entry.getName().equals(change.targetFile())) {    copy=false;    it.remove();    break;  }} @AT@ 3101 @LENGTH@ 178
------------------MOV MethodInvocation@@entry.getName().equals(change.targetFile()) @TO@ IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} @AT@ 3108 @LENGTH@ 43
------------------MOV Block@@ThenBody:{  copy=false;  it.remove();  break;} @TO@ IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} @AT@ 3153 @LENGTH@ 129
------------INS Block@@ThenBody:{  if (entry.getName().equals(change.targetFile())) {    copy=false;    it.remove();    break;  }} @TO@ IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} else if (entry.getName().matches(change.targetFile() + "/.*")) {  copy=false;  break;} @AT@ 3079 @LENGTH@ 218
---------------INS IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} @TO@ Block@@ThenBody:{  if (entry.getName().equals(change.targetFile())) {    copy=false;    it.remove();    break;  }} @AT@ 3101 @LENGTH@ 178
------------------MOV MethodInvocation@@entry.getName().equals(change.targetFile()) @TO@ IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} @AT@ 3108 @LENGTH@ 43
------------------MOV Block@@ThenBody:{  copy=false;  it.remove();  break;} @TO@ IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} @AT@ 3153 @LENGTH@ 129
------------INS Block@@ElseBody:if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {  if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @TO@ IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} else if (entry.getName().matches(change.targetFile() + "/.*")) {  copy=false;  break;} @AT@ 3303 @LENGTH@ 317
---------------INS IfStatement@@if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {  if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @TO@ Block@@ElseBody:if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {  if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @AT@ 3303 @LENGTH@ 317
------------------MOV Block@@ElseBody:if (entry.getName().matches(change.targetFile() + "/.*")) {  copy=false;  break;} @TO@ IfStatement@@if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {  if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @AT@ 3288 @LENGTH@ 179
------------------INS InfixExpression@@change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null @TO@ IfStatement@@if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {  if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @AT@ 3306 @LENGTH@ 93
---------------------INS InfixExpression@@change.type() == Change.TYPE_DELETE_DIR @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null @AT@ 3306 @LENGTH@ 39
------------------------INS MethodInvocation@@change.type() @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR @AT@ 3306 @LENGTH@ 13
---------------------------INS SimpleName@@Name:change @TO@ MethodInvocation@@change.type() @AT@ 3306 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:type:[] @TO@ MethodInvocation@@change.type() @AT@ 3313 @LENGTH@ 6
------------------------INS Operator@@== @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR @AT@ 3319 @LENGTH@ 2
------------------------INS QualifiedName@@Change.TYPE_DELETE_DIR @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR @AT@ 3323 @LENGTH@ 22
---------------------------INS SimpleName@@Change @TO@ QualifiedName@@Change.TYPE_DELETE_DIR @AT@ 3323 @LENGTH@ 6
---------------------------INS SimpleName@@TYPE_DELETE_DIR @TO@ QualifiedName@@Change.TYPE_DELETE_DIR @AT@ 3330 @LENGTH@ 15
---------------------INS Operator@@&& @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null @AT@ 3345 @LENGTH@ 2
---------------------INS InfixExpression@@entry.getName() != null @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null @AT@ 3376 @LENGTH@ 23
------------------------INS MethodInvocation@@entry.getName() @TO@ InfixExpression@@entry.getName() != null @AT@ 3376 @LENGTH@ 15
---------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getName() @AT@ 3376 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@entry.getName() @AT@ 3382 @LENGTH@ 9
------------------------INS Operator@@!= @TO@ InfixExpression@@entry.getName() != null @AT@ 3391 @LENGTH@ 2
------------------------INS NullLiteral@@null @TO@ InfixExpression@@entry.getName() != null @AT@ 3395 @LENGTH@ 4
---------------INS IfStatement@@if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {  if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @TO@ Block@@ElseBody:if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {  if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @AT@ 3303 @LENGTH@ 317
------------------MOV Block@@ElseBody:if (entry.getName().matches(change.targetFile() + "/.*")) {  copy=false;  break;} @TO@ IfStatement@@if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {  if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @AT@ 3288 @LENGTH@ 179
------------------INS InfixExpression@@change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null @TO@ IfStatement@@if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {  if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @AT@ 3306 @LENGTH@ 93
---------------------INS InfixExpression@@change.type() == Change.TYPE_DELETE_DIR @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null @AT@ 3306 @LENGTH@ 39
------------------------INS MethodInvocation@@change.type() @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR @AT@ 3306 @LENGTH@ 13
---------------------------INS SimpleName@@Name:change @TO@ MethodInvocation@@change.type() @AT@ 3306 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:type:[] @TO@ MethodInvocation@@change.type() @AT@ 3313 @LENGTH@ 6
------------------------INS Operator@@== @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR @AT@ 3319 @LENGTH@ 2
------------------------INS QualifiedName@@Change.TYPE_DELETE_DIR @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR @AT@ 3323 @LENGTH@ 22
---------------------------INS SimpleName@@Change @TO@ QualifiedName@@Change.TYPE_DELETE_DIR @AT@ 3323 @LENGTH@ 6
---------------------------INS SimpleName@@TYPE_DELETE_DIR @TO@ QualifiedName@@Change.TYPE_DELETE_DIR @AT@ 3330 @LENGTH@ 15
---------------------INS Operator@@&& @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null @AT@ 3345 @LENGTH@ 2
---------------------INS InfixExpression@@entry.getName() != null @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null @AT@ 3376 @LENGTH@ 23
------------------------INS MethodInvocation@@entry.getName() @TO@ InfixExpression@@entry.getName() != null @AT@ 3376 @LENGTH@ 15
---------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getName() @AT@ 3376 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@entry.getName() @AT@ 3382 @LENGTH@ 9
------------------------INS Operator@@!= @TO@ InfixExpression@@entry.getName() != null @AT@ 3391 @LENGTH@ 2
------------------------INS NullLiteral@@null @TO@ InfixExpression@@entry.getName() != null @AT@ 3395 @LENGTH@ 4
------UPD IfStatement@@if (entry.getName().equals(change.targetFile())) {  copy=false;  it.remove();  break;} else if (entry.getName().matches(change.targetFile() + "/.*")) {  copy=false;  break;} @TO@ if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {  if (entry.getName().equals(change.targetFile())) {    copy=false;    it.remove();    break;  }} else if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {  if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @AT@ 3104 @LENGTH@ 363
------MOV IfStatement@@if (copy) {  if (!isDeletedLater(workingSet,entry)) {    copyStream(in,out,entry);  }} @TO@ Block@@ThenBody:{  if (entry.getName().equals(change.targetFile())) {    copy=false;    it.remove();    break;  } else   if (entry.getName().matches(change.targetFile() + "/.*")) {    copy=false;    break;  }} @AT@ 3513 @LENGTH@ 149


UPD ExpressionStatement@@MethodInvocation:logger.debug("No expression annotations found") @TO@ MethodInvocation:logger.trace("No expression annotations found") @AT@ 3475 @LENGTH@ 48
---UPD MethodInvocation@@logger.debug("No expression annotations found") @TO@ logger.trace("No expression annotations found") @AT@ 3475 @LENGTH@ 47
------UPD SimpleName@@MethodName:debug:["No expression annotations found"] @TO@ MethodName:trace:["No expression annotations found"] @AT@ 3482 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:IOConverter.copy(IOConverter.toInputStrean(source),stream) @TO@ MethodInvocation:IOHelper.copy(IOConverter.toInputStrean(source),stream) @AT@ 5217 @LENGTH@ 60
---UPD MethodInvocation@@IOConverter.copy(IOConverter.toInputStrean(source),stream) @TO@ IOHelper.copy(IOConverter.toInputStrean(source),stream) @AT@ 5217 @LENGTH@ 59
------UPD SimpleName@@Name:IOConverter @TO@ Name:IOHelper @AT@ 5217 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:TEST_FILE.delete() @TO@ MethodInvocation:assertTrue("Could not remove test file",TEST_FILE.delete()) @AT@ 2668 @LENGTH@ 19
---INS MethodInvocation@@assertTrue("Could not remove test file",TEST_FILE.delete()) @TO@ ExpressionStatement@@MethodInvocation:TEST_FILE.delete() @AT@ 2581 @LENGTH@ 60
------INS SimpleName@@MethodName:assertTrue:["Could not remove test file", TEST_FILE.delete()] @TO@ MethodInvocation@@assertTrue("Could not remove test file",TEST_FILE.delete()) @AT@ 2581 @LENGTH@ 60
---------INS StringLiteral@@"Could not remove test file" @TO@ SimpleName@@MethodName:assertTrue:["Could not remove test file", TEST_FILE.delete()] @AT@ 2592 @LENGTH@ 28
---------INS MethodInvocation@@TEST_FILE.delete() @TO@ SimpleName@@MethodName:assertTrue:["Could not remove test file", TEST_FILE.delete()] @AT@ 2622 @LENGTH@ 18
------------MOV SimpleName@@Name:TEST_FILE @TO@ MethodInvocation@@TEST_FILE.delete() @AT@ 2668 @LENGTH@ 9
------------MOV SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@TEST_FILE.delete() @AT@ 2678 @LENGTH@ 8
---DEL MethodInvocation@@TEST_FILE.delete() @AT@ 2668 @LENGTH@ 18


UPD IfStatement@@if (currEntry != null) {  long numToSkip=entrySize - entryOffset;  if (debug) {    System.err.println("TarInputStream: SKIP currENTRY '" + currEntry.getName() + "' SZ "+ entrySize+ " OFF "+ entryOffset+ "  skipping "+ numToSkip+ " bytes");  }  if (numToSkip > 0) {    skip(numToSkip);  }  readBuf=null;} @TO@ if (currEntry != null) {  long numToSkip=entrySize - entryOffset;  if (debug) {    System.err.println("TarInputStream: SKIP currENTRY '" + currEntry.getName() + "' SZ "+ entrySize+ " OFF "+ entryOffset+ "  skipping "+ numToSkip+ " bytes");  }  while (numToSkip > 0) {    long skipped=skip(numToSkip);    if (skipped <= 0) {      throw new RuntimeException("failed to skip current tar" + " entry");    }    numToSkip-=skipped;  }  readBuf=null;} @AT@ 6709 @LENGTH@ 513
---UPD Block@@ThenBody:{  long numToSkip=entrySize - entryOffset;  if (debug) {    System.err.println("TarInputStream: SKIP currENTRY '" + currEntry.getName() + "' SZ "+ entrySize+ " OFF "+ entryOffset+ "  skipping "+ numToSkip+ " bytes");  }  if (numToSkip > 0) {    skip(numToSkip);  }  readBuf=null;} @TO@ ThenBody:{  long numToSkip=entrySize - entryOffset;  if (debug) {    System.err.println("TarInputStream: SKIP currENTRY '" + currEntry.getName() + "' SZ "+ entrySize+ " OFF "+ entryOffset+ "  skipping "+ numToSkip+ " bytes");  }  while (numToSkip > 0) {    long skipped=skip(numToSkip);    if (skipped <= 0) {      throw new RuntimeException("failed to skip current tar" + " entry");    }    numToSkip-=skipped;  }  readBuf=null;} @AT@ 6732 @LENGTH@ 490
------INS WhileStatement@@while (numToSkip > 0) {  long skipped=skip(numToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip current tar" + " entry");  }  numToSkip-=skipped;} @TO@ Block@@ThenBody:{  long numToSkip=entrySize - entryOffset;  if (debug) {    System.err.println("TarInputStream: SKIP currENTRY '" + currEntry.getName() + "' SZ "+ entrySize+ " OFF "+ entryOffset+ "  skipping "+ numToSkip+ " bytes");  }  if (numToSkip > 0) {    skip(numToSkip);  }  readBuf=null;} @AT@ 7116 @LENGTH@ 313
---------INS InfixExpression@@numToSkip > 0 @TO@ WhileStatement@@while (numToSkip > 0) {  long skipped=skip(numToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip current tar" + " entry");  }  numToSkip-=skipped;} @AT@ 7123 @LENGTH@ 13
------------MOV SimpleName@@numToSkip @TO@ InfixExpression@@numToSkip > 0 @AT@ 7120 @LENGTH@ 9
------------MOV Operator@@> @TO@ InfixExpression@@numToSkip > 0 @AT@ 7129 @LENGTH@ 1
------------MOV NumberLiteral@@0 @TO@ InfixExpression@@numToSkip > 0 @AT@ 7132 @LENGTH@ 1
---------INS Block@@WhileBody:{  long skipped=skip(numToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip current tar" + " entry");  }  numToSkip-=skipped;} @TO@ WhileStatement@@while (numToSkip > 0) {  long skipped=skip(numToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip current tar" + " entry");  }  numToSkip-=skipped;} @AT@ 7138 @LENGTH@ 291
------------MOV ExpressionStatement@@MethodInvocation:skip(numToSkip) @TO@ Block@@WhileBody:{  long skipped=skip(numToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip current tar" + " entry");  }  numToSkip-=skipped;} @AT@ 7153 @LENGTH@ 16
---------------INS Assignment@@numToSkip-=skipped @TO@ ExpressionStatement@@MethodInvocation:skip(numToSkip) @AT@ 7394 @LENGTH@ 20
------------------INS SimpleName@@numToSkip @TO@ Assignment@@numToSkip-=skipped @AT@ 7394 @LENGTH@ 9
------------------INS Operator@@-= @TO@ Assignment@@numToSkip-=skipped @AT@ 7403 @LENGTH@ 2
------------------INS SimpleName@@skipped @TO@ Assignment@@numToSkip-=skipped @AT@ 7407 @LENGTH@ 7
------------INS VariableDeclarationStatement@@long skipped=skip(numToSkip); @TO@ Block@@WhileBody:{  long skipped=skip(numToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip current tar" + " entry");  }  numToSkip-=skipped;} @AT@ 7156 @LENGTH@ 31
---------------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long skipped=skip(numToSkip); @AT@ 7156 @LENGTH@ 4
---------------INS VariableDeclarationFragment@@skipped=skip(numToSkip) @TO@ VariableDeclarationStatement@@long skipped=skip(numToSkip); @AT@ 7161 @LENGTH@ 25
------------------MOV MethodInvocation@@skip(numToSkip) @TO@ VariableDeclarationFragment@@skipped=skip(numToSkip) @AT@ 7153 @LENGTH@ 15
------------------INS SimpleName@@skipped @TO@ VariableDeclarationFragment@@skipped=skip(numToSkip) @AT@ 7161 @LENGTH@ 7
------------INS IfStatement@@if (skipped <= 0) {  throw new RuntimeException("failed to skip current tar" + " entry");} @TO@ Block@@WhileBody:{  long skipped=skip(numToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip current tar" + " entry");  }  numToSkip-=skipped;} @AT@ 7204 @LENGTH@ 173
---------------INS InfixExpression@@skipped <= 0 @TO@ IfStatement@@if (skipped <= 0) {  throw new RuntimeException("failed to skip current tar" + " entry");} @AT@ 7208 @LENGTH@ 12
------------------INS SimpleName@@skipped @TO@ InfixExpression@@skipped <= 0 @AT@ 7208 @LENGTH@ 7
------------------INS Operator@@<= @TO@ InfixExpression@@skipped <= 0 @AT@ 7215 @LENGTH@ 2
------------------INS NumberLiteral@@0 @TO@ InfixExpression@@skipped <= 0 @AT@ 7219 @LENGTH@ 1
---------------INS Block@@ThenBody:{  throw new RuntimeException("failed to skip current tar" + " entry");} @TO@ IfStatement@@if (skipped <= 0) {  throw new RuntimeException("failed to skip current tar" + " entry");} @AT@ 7222 @LENGTH@ 155
------------------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("failed to skip current tar" + " entry") @TO@ Block@@ThenBody:{  throw new RuntimeException("failed to skip current tar" + " entry");} @AT@ 7244 @LENGTH@ 115
---------------------INS ClassInstanceCreation@@RuntimeException["failed to skip current tar" + " entry"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("failed to skip current tar" + " entry") @AT@ 7250 @LENGTH@ 108
------------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["failed to skip current tar" + " entry"] @AT@ 7250 @LENGTH@ 3
------------------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["failed to skip current tar" + " entry"] @AT@ 7254 @LENGTH@ 16
------------------------INS InfixExpression@@"failed to skip current tar" + " entry" @TO@ ClassInstanceCreation@@RuntimeException["failed to skip current tar" + " entry"] @AT@ 7271 @LENGTH@ 86
---------------------------INS StringLiteral@@"failed to skip current tar" @TO@ InfixExpression@@"failed to skip current tar" + " entry" @AT@ 7271 @LENGTH@ 28
---------------------------INS Operator@@+ @TO@ InfixExpression@@"failed to skip current tar" + " entry" @AT@ 7299 @LENGTH@ 1
---------------------------INS StringLiteral@@" entry" @TO@ InfixExpression@@"failed to skip current tar" + " entry" @AT@ 7349 @LENGTH@ 8
------DEL IfStatement@@if (numToSkip > 0) {  skip(numToSkip);} @AT@ 7116 @LENGTH@ 67
---------DEL InfixExpression@@numToSkip > 0 @AT@ 7120 @LENGTH@ 13
---------DEL Block@@ThenBody:{  skip(numToSkip);} @AT@ 7135 @LENGTH@ 48


UPD ExpressionStatement@@MethodInvocation:assertTrue("Incorect configuration data",xml.contains("<rowsPerPage>15</rowsPerPage>")) @TO@ MethodInvocation:assertTrue("Incorect configuration data",xml.indexOf("<rowsPerPage>15</rowsPerPage>") >= 0) @AT@ 35824 @LENGTH@ 89
---UPD MethodInvocation@@assertTrue("Incorect configuration data",xml.contains("<rowsPerPage>15</rowsPerPage>")) @TO@ assertTrue("Incorect configuration data",xml.indexOf("<rowsPerPage>15</rowsPerPage>") >= 0) @AT@ 35824 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertTrue:["Incorect configuration data", xml.contains("<rowsPerPage>15</rowsPerPage>")] @TO@ MethodName:assertTrue:["Incorect configuration data", xml.indexOf("<rowsPerPage>15</rowsPerPage>") >= 0] @AT@ 35824 @LENGTH@ 88
---------INS InfixExpression@@xml.indexOf("<rowsPerPage>15</rowsPerPage>") >= 0 @TO@ SimpleName@@MethodName:assertTrue:["Incorect configuration data", xml.contains("<rowsPerPage>15</rowsPerPage>")] @AT@ 35866 @LENGTH@ 49
------------INS MethodInvocation@@xml.indexOf("<rowsPerPage>15</rowsPerPage>") @TO@ InfixExpression@@xml.indexOf("<rowsPerPage>15</rowsPerPage>") >= 0 @AT@ 35866 @LENGTH@ 44
---------------MOV SimpleName@@Name:xml @TO@ MethodInvocation@@xml.indexOf("<rowsPerPage>15</rowsPerPage>") @AT@ 35866 @LENGTH@ 3
---------------MOV SimpleName@@MethodName:contains:["<rowsPerPage>15</rowsPerPage>"] @TO@ MethodInvocation@@xml.indexOf("<rowsPerPage>15</rowsPerPage>") @AT@ 35870 @LENGTH@ 41
------------INS Operator@@>= @TO@ InfixExpression@@xml.indexOf("<rowsPerPage>15</rowsPerPage>") >= 0 @AT@ 35910 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@xml.indexOf("<rowsPerPage>15</rowsPerPage>") >= 0 @AT@ 35914 @LENGTH@ 1
---------DEL MethodInvocation@@xml.contains("<rowsPerPage>15</rowsPerPage>") @AT@ 35866 @LENGTH@ 45


INS MethodDeclaration@@public, Object, MethodName:removeHeader, String name,  @TO@ TypeDeclaration@@[public]JmsMessage, DefaultMessage @AT@ 4307 @LENGTH@ 539
---INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:removeHeader, String name,  @AT@ 4307 @LENGTH@ 6
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:removeHeader, String name,  @AT@ 4314 @LENGTH@ 6
---INS SimpleName@@MethodName:removeHeader @TO@ MethodDeclaration@@public, Object, MethodName:removeHeader, String name,  @AT@ 4321 @LENGTH@ 12
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, Object, MethodName:removeHeader, String name,  @AT@ 4334 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 4334 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 4341 @LENGTH@ 4
---INS VariableDeclarationStatement@@Object answer=super.removeHeader(name); @TO@ MethodDeclaration@@public, Object, MethodName:removeHeader, String name,  @AT@ 4357 @LENGTH@ 41
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object answer=super.removeHeader(name); @AT@ 4357 @LENGTH@ 6
------INS VariableDeclarationFragment@@answer=super.removeHeader(name) @TO@ VariableDeclarationStatement@@Object answer=super.removeHeader(name); @AT@ 4364 @LENGTH@ 33
---------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=super.removeHeader(name) @AT@ 4364 @LENGTH@ 6
---------INS SuperMethodInvocation@@super.removeHeader(name) @TO@ VariableDeclarationFragment@@answer=super.removeHeader(name) @AT@ 4373 @LENGTH@ 24
------------INS SimpleName@@MethodName:removeHeader:[name] @TO@ SuperMethodInvocation@@super.removeHeader(name) @AT@ 4379 @LENGTH@ 12
------------INS SimpleName@@name @TO@ SuperMethodInvocation@@super.removeHeader(name) @AT@ 4392 @LENGTH@ 4
---INS IfStatement@@if (jmsMessage != null && !name.startsWith("JMS")) {  try {    if (jmsMessage.propertyExists(name)) {      answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);    }  } catch (  JMSException e) {    throw new RuntimeCamelException(name,e);  }} @TO@ MethodDeclaration@@public, Object, MethodName:removeHeader, String name,  @AT@ 4408 @LENGTH@ 408
------INS InfixExpression@@jmsMessage != null && !name.startsWith("JMS") @TO@ IfStatement@@if (jmsMessage != null && !name.startsWith("JMS")) {  try {    if (jmsMessage.propertyExists(name)) {      answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);    }  } catch (  JMSException e) {    throw new RuntimeCamelException(name,e);  }} @AT@ 4412 @LENGTH@ 45
---------INS InfixExpression@@jmsMessage != null @TO@ InfixExpression@@jmsMessage != null && !name.startsWith("JMS") @AT@ 4412 @LENGTH@ 18
------------INS SimpleName@@jmsMessage @TO@ InfixExpression@@jmsMessage != null @AT@ 4412 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@jmsMessage != null @AT@ 4422 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@jmsMessage != null @AT@ 4426 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@jmsMessage != null && !name.startsWith("JMS") @AT@ 4430 @LENGTH@ 2
---------INS PrefixExpression@@!name.startsWith("JMS") @TO@ InfixExpression@@jmsMessage != null && !name.startsWith("JMS") @AT@ 4434 @LENGTH@ 23
------------INS Operator@@! @TO@ PrefixExpression@@!name.startsWith("JMS") @AT@ 4434 @LENGTH@ 1
------------INS MethodInvocation@@name.startsWith("JMS") @TO@ PrefixExpression@@!name.startsWith("JMS") @AT@ 4435 @LENGTH@ 22
---------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.startsWith("JMS") @AT@ 4435 @LENGTH@ 4
---------------INS SimpleName@@MethodName:startsWith:["JMS"] @TO@ MethodInvocation@@name.startsWith("JMS") @AT@ 4440 @LENGTH@ 17
------------------INS StringLiteral@@"JMS" @TO@ SimpleName@@MethodName:startsWith:["JMS"] @AT@ 4451 @LENGTH@ 5
------INS Block@@ThenBody:{  try {    if (jmsMessage.propertyExists(name)) {      answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);    }  } catch (  JMSException e) {    throw new RuntimeCamelException(name,e);  }} @TO@ IfStatement@@if (jmsMessage != null && !name.startsWith("JMS")) {  try {    if (jmsMessage.propertyExists(name)) {      answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);    }  } catch (  JMSException e) {    throw new RuntimeCamelException(name,e);  }} @AT@ 4459 @LENGTH@ 357
---------INS TryStatement@@try {  if (jmsMessage.propertyExists(name)) {    answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);  }} catch (JMSException e) {  throw new RuntimeCamelException(name,e);} @TO@ Block@@ThenBody:{  try {    if (jmsMessage.propertyExists(name)) {      answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);    }  } catch (  JMSException e) {    throw new RuntimeCamelException(name,e);  }} @AT@ 4473 @LENGTH@ 333
------------INS IfStatement@@if (jmsMessage.propertyExists(name)) {  answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);} @TO@ TryStatement@@try {  if (jmsMessage.propertyExists(name)) {    answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);  }} catch (JMSException e) {  throw new RuntimeCamelException(name,e);} @AT@ 4555 @LENGTH@ 140
---------------INS MethodInvocation@@jmsMessage.propertyExists(name) @TO@ IfStatement@@if (jmsMessage.propertyExists(name)) {  answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);} @AT@ 4559 @LENGTH@ 31
------------------INS SimpleName@@Name:jmsMessage @TO@ MethodInvocation@@jmsMessage.propertyExists(name) @AT@ 4559 @LENGTH@ 10
------------------INS SimpleName@@MethodName:propertyExists:[name] @TO@ MethodInvocation@@jmsMessage.propertyExists(name) @AT@ 4570 @LENGTH@ 20
---------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:propertyExists:[name] @AT@ 4585 @LENGTH@ 4
---------------INS Block@@ThenBody:{  answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);} @TO@ IfStatement@@if (jmsMessage.propertyExists(name)) {  answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);} @AT@ 4592 @LENGTH@ 103
------------------INS ExpressionStatement@@Assignment:answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name) @TO@ Block@@ThenBody:{  answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);} @AT@ 4615 @LENGTH@ 62
---------------------INS Assignment@@answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name) @TO@ ExpressionStatement@@Assignment:answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name) @AT@ 4615 @LENGTH@ 61
------------------------INS SimpleName@@answer @TO@ Assignment@@answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name) @AT@ 4615 @LENGTH@ 6
------------------------INS Operator@@= @TO@ Assignment@@answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name) @AT@ 4621 @LENGTH@ 1
------------------------INS MethodInvocation@@JmsMessageHelper.removeJmsProperty(jmsMessage,name) @TO@ Assignment@@answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name) @AT@ 4624 @LENGTH@ 52
---------------------------INS SimpleName@@Name:JmsMessageHelper @TO@ MethodInvocation@@JmsMessageHelper.removeJmsProperty(jmsMessage,name) @AT@ 4624 @LENGTH@ 16
---------------------------INS SimpleName@@MethodName:removeJmsProperty:[jmsMessage, name] @TO@ MethodInvocation@@JmsMessageHelper.removeJmsProperty(jmsMessage,name) @AT@ 4641 @LENGTH@ 35
------------------------------INS SimpleName@@jmsMessage @TO@ SimpleName@@MethodName:removeJmsProperty:[jmsMessage, name] @AT@ 4659 @LENGTH@ 10
------------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:removeJmsProperty:[jmsMessage, name] @AT@ 4671 @LENGTH@ 4
------------INS CatchClause@@catch (JMSException e) {  throw new RuntimeCamelException(name,e);} @TO@ TryStatement@@try {  if (jmsMessage.propertyExists(name)) {    answer=JmsMessageHelper.removeJmsProperty(jmsMessage,name);  }} catch (JMSException e) {  throw new RuntimeCamelException(name,e);} @AT@ 4710 @LENGTH@ 96
---------------INS SingleVariableDeclaration@@JMSException e @TO@ CatchClause@@catch (JMSException e) {  throw new RuntimeCamelException(name,e);} @AT@ 4717 @LENGTH@ 14
------------------INS SimpleType@@JMSException @TO@ SingleVariableDeclaration@@JMSException e @AT@ 4717 @LENGTH@ 12
------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@JMSException e @AT@ 4730 @LENGTH@ 1
---------------INS ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException(name,e) @TO@ CatchClause@@catch (JMSException e) {  throw new RuntimeCamelException(name,e);} @AT@ 4751 @LENGTH@ 41
------------------INS ClassInstanceCreation@@RuntimeCamelException[name, e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException(name,e) @AT@ 4757 @LENGTH@ 34
---------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeCamelException[name, e] @AT@ 4757 @LENGTH@ 3
---------------------INS SimpleType@@RuntimeCamelException @TO@ ClassInstanceCreation@@RuntimeCamelException[name, e] @AT@ 4761 @LENGTH@ 21
---------------------INS SimpleName@@name @TO@ ClassInstanceCreation@@RuntimeCamelException[name, e] @AT@ 4783 @LENGTH@ 4
---------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeCamelException[name, e] @AT@ 4789 @LENGTH@ 1
---INS ReturnStatement@@SimpleName:answer @TO@ MethodDeclaration@@public, Object, MethodName:removeHeader, String name,  @AT@ 4826 @LENGTH@ 14
------INS SimpleName@@answer @TO@ ReturnStatement@@SimpleName:answer @AT@ 4833 @LENGTH@ 6


UPD Block@@ElseBody:if (possibles.isEmpty()) {  if (LOG.isTraceEnabled()) {    LOG.trace("No poosible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value;    try {      value=convertToType(exchange,methodInfo.getBodyParameterType(),body);      if (value != null) {        if (LOG.isTraceEnabled()) {          LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());        }        if (newBody != null) {          throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));        } else {          newBody=value;          matched=methodInfo;        }      }    } catch (    NoTypeConversionAvailableException e) {    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} else {  if (operationsWithCustomAnnotation.size() == 1) {    MethodInfo answer=operationsWithCustomAnnotation.get(0);    if (LOG.isTraceEnabled()) {      LOG.trace("There are only one method with annotations so we choose it: " + answer);    }    return answer;  }  return chooseMethodWithCustomAnnotations(exchange,possibles);} @TO@ ElseBody:if (possibles.isEmpty()) {  if (LOG.isTraceEnabled()) {    LOG.trace("No poosible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} else {  if (operationsWithCustomAnnotation.size() == 1) {    MethodInfo answer=operationsWithCustomAnnotation.get(0);    if (LOG.isTraceEnabled()) {      LOG.trace("There are only one method with annotations so we choose it: " + answer);    }    return answer;  }  return chooseMethodWithCustomAnnotations(exchange,possibles);} @AT@ 14913 @LENGTH@ 2567
---UPD IfStatement@@if (possibles.isEmpty()) {  if (LOG.isTraceEnabled()) {    LOG.trace("No poosible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value;    try {      value=convertToType(exchange,methodInfo.getBodyParameterType(),body);      if (value != null) {        if (LOG.isTraceEnabled()) {          LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());        }        if (newBody != null) {          throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));        } else {          newBody=value;          matched=methodInfo;        }      }    } catch (    NoTypeConversionAvailableException e) {    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} else {  if (operationsWithCustomAnnotation.size() == 1) {    MethodInfo answer=operationsWithCustomAnnotation.get(0);    if (LOG.isTraceEnabled()) {      LOG.trace("There are only one method with annotations so we choose it: " + answer);    }    return answer;  }  return chooseMethodWithCustomAnnotations(exchange,possibles);} @TO@ if (possibles.isEmpty()) {  if (LOG.isTraceEnabled()) {    LOG.trace("No poosible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} else {  if (operationsWithCustomAnnotation.size() == 1) {    MethodInfo answer=operationsWithCustomAnnotation.get(0);    if (LOG.isTraceEnabled()) {      LOG.trace("There are only one method with annotations so we choose it: " + answer);    }    return answer;  }  return chooseMethodWithCustomAnnotations(exchange,possibles);} @AT@ 14913 @LENGTH@ 2567
------UPD Block@@ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("No poosible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value;    try {      value=convertToType(exchange,methodInfo.getBodyParameterType(),body);      if (value != null) {        if (LOG.isTraceEnabled()) {          LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());        }        if (newBody != null) {          throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));        } else {          newBody=value;          matched=methodInfo;        }      }    } catch (    NoTypeConversionAvailableException e) {    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} @TO@ ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("No poosible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} @AT@ 14938 @LENGTH@ 1938
---------UPD EnhancedForStatement@@for (MethodInfo methodInfo : operationList) {  Object value;  try {    value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  } catch (  NoTypeConversionAvailableException e) {  }} @TO@ for (MethodInfo methodInfo : operationList) {  Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);  if (value != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());    }    if (newBody != null) {      throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));    } else {      newBody=value;      matched=methodInfo;    }  }} @AT@ 15309 @LENGTH@ 1264
------------UPD VariableDeclarationStatement@@Object value; @TO@ Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body); @AT@ 15371 @LENGTH@ 13
---------------UPD VariableDeclarationFragment@@value @TO@ value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @AT@ 15378 @LENGTH@ 5
------------------MOV MethodInvocation@@convertToType(exchange,methodInfo.getBodyParameterType(),body) @TO@ VariableDeclarationFragment@@value @AT@ 15435 @LENGTH@ 64
------------DEL TryStatement@@try {  value=convertToType(exchange,methodInfo.getBodyParameterType(),body);  if (value != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());    }    if (newBody != null) {      throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));    } else {      newBody=value;      matched=methodInfo;    }  }} catch (NoTypeConversionAvailableException e) {} @AT@ 15401 @LENGTH@ 1158
---------------DEL ExpressionStatement@@Assignment:value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @AT@ 15427 @LENGTH@ 73
------------------DEL Assignment@@value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @AT@ 15427 @LENGTH@ 72
---------------------DEL SimpleName@@value @AT@ 15427 @LENGTH@ 5
---------------------DEL Operator@@= @AT@ 15432 @LENGTH@ 1
---------------DEL CatchClause@@catch (NoTypeConversionAvailableException e) {} @AT@ 16345 @LENGTH@ 214
------------------DEL SingleVariableDeclaration@@NoTypeConversionAvailableException e @AT@ 16352 @LENGTH@ 36
---------------------DEL SimpleType@@NoTypeConversionAvailableException @AT@ 16352 @LENGTH@ 34
---------------------DEL SimpleName@@e @AT@ 16387 @LENGTH@ 1
------------MOV IfStatement@@if (value != null) {  if (LOG.isTraceEnabled()) {    LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());  }  if (newBody != null) {    throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));  } else {    newBody=value;    matched=methodInfo;  }} @TO@ EnhancedForStatement@@for (MethodInfo methodInfo : operationList) {  Object value;  try {    value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  } catch (  NoTypeConversionAvailableException e) {  }} @AT@ 15521 @LENGTH@ 805
---UPD IfStatement@@if (possibles.isEmpty()) {  if (LOG.isTraceEnabled()) {    LOG.trace("No poosible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value;    try {      value=convertToType(exchange,methodInfo.getBodyParameterType(),body);      if (value != null) {        if (LOG.isTraceEnabled()) {          LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());        }        if (newBody != null) {          throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));        } else {          newBody=value;          matched=methodInfo;        }      }    } catch (    NoTypeConversionAvailableException e) {    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} else {  if (operationsWithCustomAnnotation.size() == 1) {    MethodInfo answer=operationsWithCustomAnnotation.get(0);    if (LOG.isTraceEnabled()) {      LOG.trace("There are only one method with annotations so we choose it: " + answer);    }    return answer;  }  return chooseMethodWithCustomAnnotations(exchange,possibles);} @TO@ if (possibles.isEmpty()) {  if (LOG.isTraceEnabled()) {    LOG.trace("No poosible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} else {  if (operationsWithCustomAnnotation.size() == 1) {    MethodInfo answer=operationsWithCustomAnnotation.get(0);    if (LOG.isTraceEnabled()) {      LOG.trace("There are only one method with annotations so we choose it: " + answer);    }    return answer;  }  return chooseMethodWithCustomAnnotations(exchange,possibles);} @AT@ 14913 @LENGTH@ 2567
------UPD Block@@ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("No poosible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value;    try {      value=convertToType(exchange,methodInfo.getBodyParameterType(),body);      if (value != null) {        if (LOG.isTraceEnabled()) {          LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());        }        if (newBody != null) {          throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));        } else {          newBody=value;          matched=methodInfo;        }      }    } catch (    NoTypeConversionAvailableException e) {    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} @TO@ ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("No poosible methods trying to convert body to parameter types");  }  Object newBody=null;  MethodInfo matched=null;  for (  MethodInfo methodInfo : operationList) {    Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  }  if (matched != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Setting converted body: " + body);    }    Message in=exchange.getIn();    in.setBody(newBody);    return matched;  }} @AT@ 14938 @LENGTH@ 1938
---------UPD EnhancedForStatement@@for (MethodInfo methodInfo : operationList) {  Object value;  try {    value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  } catch (  NoTypeConversionAvailableException e) {  }} @TO@ for (MethodInfo methodInfo : operationList) {  Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);  if (value != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());    }    if (newBody != null) {      throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));    } else {      newBody=value;      matched=methodInfo;    }  }} @AT@ 15309 @LENGTH@ 1264
------------UPD VariableDeclarationStatement@@Object value; @TO@ Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body); @AT@ 15371 @LENGTH@ 13
---------------UPD VariableDeclarationFragment@@value @TO@ value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @AT@ 15378 @LENGTH@ 5
------------------MOV MethodInvocation@@convertToType(exchange,methodInfo.getBodyParameterType(),body) @TO@ VariableDeclarationFragment@@value @AT@ 15435 @LENGTH@ 64
------------DEL TryStatement@@try {  value=convertToType(exchange,methodInfo.getBodyParameterType(),body);  if (value != null) {    if (LOG.isTraceEnabled()) {      LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());    }    if (newBody != null) {      throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));    } else {      newBody=value;      matched=methodInfo;    }  }} catch (NoTypeConversionAvailableException e) {} @AT@ 15401 @LENGTH@ 1158
---------------DEL ExpressionStatement@@Assignment:value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @AT@ 15427 @LENGTH@ 73
------------------DEL Assignment@@value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @AT@ 15427 @LENGTH@ 72
---------------------DEL SimpleName@@value @AT@ 15427 @LENGTH@ 5
---------------------DEL Operator@@= @AT@ 15432 @LENGTH@ 1
---------------DEL CatchClause@@catch (NoTypeConversionAvailableException e) {} @AT@ 16345 @LENGTH@ 214
------------------DEL SingleVariableDeclaration@@NoTypeConversionAvailableException e @AT@ 16352 @LENGTH@ 36
---------------------DEL SimpleType@@NoTypeConversionAvailableException @AT@ 16352 @LENGTH@ 34
---------------------DEL SimpleName@@e @AT@ 16387 @LENGTH@ 1
------------MOV IfStatement@@if (value != null) {  if (LOG.isTraceEnabled()) {    LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());  }  if (newBody != null) {    throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));  } else {    newBody=value;    matched=methodInfo;  }} @TO@ EnhancedForStatement@@for (MethodInfo methodInfo : operationList) {  Object value;  try {    value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (LOG.isTraceEnabled()) {        LOG.trace("Converted body from: " + body.getClass().getCanonicalName() + "to: "+ methodInfo.getBodyParameterType().getCanonicalName());      }      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  } catch (  NoTypeConversionAvailableException e) {  }} @AT@ 15521 @LENGTH@ 805


UPD ExpressionStatement@@MethodInvocation:from("direct:tap").delay(100).setBody().constant("Tapped").to("mock:result","mock:tap") @TO@ MethodInvocation:from("direct:tap").delay(1000).setBody().constant("Tapped").to("mock:result","mock:tap") @AT@ 2047 @LENGTH@ 131
---UPD MethodInvocation@@from("direct:tap").delay(100).setBody().constant("Tapped").to("mock:result","mock:tap") @TO@ from("direct:tap").delay(1000).setBody().constant("Tapped").to("mock:result","mock:tap") @AT@ 2047 @LENGTH@ 130
------UPD MethodInvocation@@MethodName:delay:[100] @TO@ MethodName:delay:[1000] @AT@ 2047 @LENGTH@ 50
---------UPD NumberLiteral@@100 @TO@ 1000 @AT@ 2093 @LENGTH@ 3


UPD ExpressionStatement@@Assignment:binding=new MailBinding(component.getHeaderFilterStrategy()) @TO@ Assignment:this.binding=new MailBinding(component.getHeaderFilterStrategy()) @AT@ 1609 @LENGTH@ 63
---UPD Assignment@@binding=new MailBinding(component.getHeaderFilterStrategy()) @TO@ this.binding=new MailBinding(component.getHeaderFilterStrategy()) @AT@ 1609 @LENGTH@ 62
------INS FieldAccess@@this.binding @TO@ Assignment@@binding=new MailBinding(component.getHeaderFilterStrategy()) @AT@ 1609 @LENGTH@ 12
---------INS ThisExpression@@this @TO@ FieldAccess@@this.binding @AT@ 1609 @LENGTH@ 4
---------INS SimpleName@@binding @TO@ FieldAccess@@this.binding @AT@ 1614 @LENGTH@ 7
------DEL SimpleName@@binding @AT@ 1609 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodInvocation:Thread.sleep(2000) @AT@ 2690 @LENGTH@ 19
---UPD MethodInvocation@@Thread.sleep(1000) @TO@ Thread.sleep(2000) @AT@ 2690 @LENGTH@ 18
------UPD SimpleName@@MethodName:sleep:[1000] @TO@ MethodName:sleep:[2000] @AT@ 2697 @LENGTH@ 11
---------UPD NumberLiteral@@1000 @TO@ 2000 @AT@ 2703 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new ZipException("UniCode path extra data must have at least" + " 5 bytes.") @TO@ ClassInstanceCreation:new ZipException("UniCode path extra data must have at least 5 bytes.") @AT@ 4382 @LENGTH@ 118
---UPD ClassInstanceCreation@@ZipException["UniCode path extra data must have at least" + " 5 bytes."] @TO@ ZipException["UniCode path extra data must have at least 5 bytes."] @AT@ 4388 @LENGTH@ 111
------INS StringLiteral@@"UniCode path extra data must have at least 5 bytes." @TO@ ClassInstanceCreation@@ZipException["UniCode path extra data must have at least" + " 5 bytes."] @AT@ 4325 @LENGTH@ 53
------DEL InfixExpression@@"UniCode path extra data must have at least" + " 5 bytes." @AT@ 4405 @LENGTH@ 93
---------DEL StringLiteral@@"UniCode path extra data must have at least" @AT@ 4405 @LENGTH@ 44
---------DEL Operator@@+ @AT@ 4449 @LENGTH@ 1
---------DEL StringLiteral@@" 5 bytes." @AT@ 4487 @LENGTH@ 11


UPD MethodDeclaration@@protected, Object, MethodName:lookupBean, Exception,  @TO@ protected, Object, MethodName:lookupBean,  @AT@ 4150 @LENGTH@ 92
---DEL SimpleType@@Exception @AT@ 4187 @LENGTH@ 9


UPD MethodDeclaration@@Object, MethodName:getBean, Exception,  @TO@ Object, MethodName:getBean, NoBeanAvailableException,  @AT@ 987 @LENGTH@ 27
---UPD SimpleType@@Exception @TO@ NoBeanAvailableException @AT@ 1004 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2031 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2031 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 2048 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2058 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2058 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:from(getFtpUrl()).setHeader(FileComponent.HEADER_FILE_NAME,constant("deleteme.jpg")).to(fileUrl,"mock:result") @TO@ MethodInvocation:from(getFtpUrl()).setHeader(NewFileComponent.HEADER_FILE_NAME,constant("deleteme.jpg")).to(fileUrl,"mock:result") @AT@ 3522 @LENGTH@ 138
---UPD MethodInvocation@@from(getFtpUrl()).setHeader(FileComponent.HEADER_FILE_NAME,constant("deleteme.jpg")).to(fileUrl,"mock:result") @TO@ from(getFtpUrl()).setHeader(NewFileComponent.HEADER_FILE_NAME,constant("deleteme.jpg")).to(fileUrl,"mock:result") @AT@ 3522 @LENGTH@ 137
------UPD MethodInvocation@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, constant("deleteme.jpg")] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, constant("deleteme.jpg")] @AT@ 3522 @LENGTH@ 85
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 3550 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 3550 @LENGTH@ 13


UPD ExpressionStatement@@Assignment:requestor=new Requestor(getConfiguration(),getExecutorService()) @TO@ Assignment:requestor=new Requestor(getConfiguration(),getScheduledExecutorService()) @AT@ 10631 @LENGTH@ 68
---UPD Assignment@@requestor=new Requestor(getConfiguration(),getExecutorService()) @TO@ requestor=new Requestor(getConfiguration(),getScheduledExecutorService()) @AT@ 10631 @LENGTH@ 67
------UPD ClassInstanceCreation@@Requestor[getConfiguration(), getExecutorService()] @TO@ Requestor[getConfiguration(), getScheduledExecutorService()] @AT@ 10643 @LENGTH@ 55
---------UPD MethodInvocation@@MethodName:getExecutorService:[] @TO@ MethodName:getScheduledExecutorService:[] @AT@ 10677 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:from("file://target/originalexchange").transform(body().append(" World")).process(new MyThrowProcessor()) @TO@ MethodInvocation:from("file://target/originalexchange?noop=true").transform(body().append(" World")).process(new MyThrowProcessor()) @AT@ 2171 @LENGTH@ 148
---UPD MethodInvocation@@from("file://target/originalexchange").transform(body().append(" World")).process(new MyThrowProcessor()) @TO@ from("file://target/originalexchange?noop=true").transform(body().append(" World")).process(new MyThrowProcessor()) @AT@ 2171 @LENGTH@ 147
------UPD MethodInvocation@@MethodName:from:["file://target/originalexchange"] @TO@ MethodName:from:["file://target/originalexchange?noop=true"] @AT@ 2171 @LENGTH@ 38
---------UPD StringLiteral@@"file://target/originalexchange" @TO@ "file://target/originalexchange?noop=true" @AT@ 2176 @LENGTH@ 32


UPD ExpressionStatement@@Assignment:pos=fileChannel.position() @TO@ Assignment:pos=fileChannel.position() + ((TransactionAwareBufferedWriter)outputBufferedWriter).getBufferSize() @AT@ 10600 @LENGTH@ 29
---UPD Assignment@@pos=fileChannel.position() @TO@ pos=fileChannel.position() + ((TransactionAwareBufferedWriter)outputBufferedWriter).getBufferSize() @AT@ 10600 @LENGTH@ 28
------DEL MethodInvocation@@fileChannel.position() @AT@ 10606 @LENGTH@ 22
------INS InfixExpression@@fileChannel.position() + ((TransactionAwareBufferedWriter)outputBufferedWriter).getBufferSize() @TO@ Assignment@@pos=fileChannel.position() @AT@ 10644 @LENGTH@ 95
---------INS MethodInvocation@@fileChannel.position() @TO@ InfixExpression@@fileChannel.position() + ((TransactionAwareBufferedWriter)outputBufferedWriter).getBufferSize() @AT@ 10644 @LENGTH@ 22
------------MOV SimpleName@@Name:fileChannel @TO@ MethodInvocation@@fileChannel.position() @AT@ 10606 @LENGTH@ 11
------------MOV SimpleName@@MethodName:position:[] @TO@ MethodInvocation@@fileChannel.position() @AT@ 10618 @LENGTH@ 10
---------INS Operator@@+ @TO@ InfixExpression@@fileChannel.position() + ((TransactionAwareBufferedWriter)outputBufferedWriter).getBufferSize() @AT@ 10666 @LENGTH@ 1
---------INS MethodInvocation@@((TransactionAwareBufferedWriter)outputBufferedWriter).getBufferSize() @TO@ InfixExpression@@fileChannel.position() + ((TransactionAwareBufferedWriter)outputBufferedWriter).getBufferSize() @AT@ 10669 @LENGTH@ 70
------------INS ParenthesizedExpression@@((TransactionAwareBufferedWriter)outputBufferedWriter) @TO@ MethodInvocation@@((TransactionAwareBufferedWriter)outputBufferedWriter).getBufferSize() @AT@ 10669 @LENGTH@ 54
---------------INS CastExpression@@(TransactionAwareBufferedWriter)outputBufferedWriter @TO@ ParenthesizedExpression@@((TransactionAwareBufferedWriter)outputBufferedWriter) @AT@ 10670 @LENGTH@ 52
------------------INS SimpleType@@TransactionAwareBufferedWriter @TO@ CastExpression@@(TransactionAwareBufferedWriter)outputBufferedWriter @AT@ 10671 @LENGTH@ 30
------------------INS SimpleName@@outputBufferedWriter @TO@ CastExpression@@(TransactionAwareBufferedWriter)outputBufferedWriter @AT@ 10702 @LENGTH@ 20
------------INS SimpleName@@MethodName:getBufferSize:[] @TO@ MethodInvocation@@((TransactionAwareBufferedWriter)outputBufferedWriter).getBufferSize() @AT@ 10724 @LENGTH@ 15


INS MethodDeclaration@@public, Object, MethodName:clone,  @TO@ TypeDeclaration@@[public]AsiExtraField, [ZipExtraField, UnixStat, Cloneable] @AT@ 9494 @LENGTH@ 308
---INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:clone,  @AT@ 9494 @LENGTH@ 6
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:clone,  @AT@ 9501 @LENGTH@ 6
---INS SimpleName@@MethodName:clone @TO@ MethodDeclaration@@public, Object, MethodName:clone,  @AT@ 9508 @LENGTH@ 5
---INS TryStatement@@try {  AsiExtraField cloned=(AsiExtraField)super.clone();  cloned.crc=new CRC32();  return cloned;} catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @TO@ MethodDeclaration@@public, Object, MethodName:clone,  @AT@ 9526 @LENGTH@ 270
------INS VariableDeclarationStatement@@AsiExtraField cloned=(AsiExtraField)super.clone(); @TO@ TryStatement@@try {  AsiExtraField cloned=(AsiExtraField)super.clone();  cloned.crc=new CRC32();  return cloned;} catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 9544 @LENGTH@ 53
---------INS SimpleType@@AsiExtraField @TO@ VariableDeclarationStatement@@AsiExtraField cloned=(AsiExtraField)super.clone(); @AT@ 9544 @LENGTH@ 13
---------INS VariableDeclarationFragment@@cloned=(AsiExtraField)super.clone() @TO@ VariableDeclarationStatement@@AsiExtraField cloned=(AsiExtraField)super.clone(); @AT@ 9558 @LENGTH@ 38
------------INS SimpleName@@cloned @TO@ VariableDeclarationFragment@@cloned=(AsiExtraField)super.clone() @AT@ 9558 @LENGTH@ 6
------------INS CastExpression@@(AsiExtraField)super.clone() @TO@ VariableDeclarationFragment@@cloned=(AsiExtraField)super.clone() @AT@ 9567 @LENGTH@ 29
---------------INS SimpleType@@AsiExtraField @TO@ CastExpression@@(AsiExtraField)super.clone() @AT@ 9568 @LENGTH@ 13
---------------INS SuperMethodInvocation@@super.clone() @TO@ CastExpression@@(AsiExtraField)super.clone() @AT@ 9583 @LENGTH@ 13
------------------INS SimpleName@@MethodName:clone:[] @TO@ SuperMethodInvocation@@super.clone() @AT@ 9589 @LENGTH@ 5
------INS ExpressionStatement@@Assignment:cloned.crc=new CRC32() @TO@ TryStatement@@try {  AsiExtraField cloned=(AsiExtraField)super.clone();  cloned.crc=new CRC32();  return cloned;} catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 9610 @LENGTH@ 25
---------INS Assignment@@cloned.crc=new CRC32() @TO@ ExpressionStatement@@Assignment:cloned.crc=new CRC32() @AT@ 9610 @LENGTH@ 24
------------INS QualifiedName@@cloned.crc @TO@ Assignment@@cloned.crc=new CRC32() @AT@ 9610 @LENGTH@ 10
---------------INS SimpleName@@cloned @TO@ QualifiedName@@cloned.crc @AT@ 9610 @LENGTH@ 6
---------------INS SimpleName@@crc @TO@ QualifiedName@@cloned.crc @AT@ 9617 @LENGTH@ 3
------------INS Operator@@= @TO@ Assignment@@cloned.crc=new CRC32() @AT@ 9620 @LENGTH@ 1
------------INS ClassInstanceCreation@@CRC32[] @TO@ Assignment@@cloned.crc=new CRC32() @AT@ 9623 @LENGTH@ 11
---------------INS New@@new @TO@ ClassInstanceCreation@@CRC32[] @AT@ 9623 @LENGTH@ 3
---------------INS SimpleType@@CRC32 @TO@ ClassInstanceCreation@@CRC32[] @AT@ 9627 @LENGTH@ 5
------INS ReturnStatement@@SimpleName:cloned @TO@ TryStatement@@try {  AsiExtraField cloned=(AsiExtraField)super.clone();  cloned.crc=new CRC32();  return cloned;} catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 9648 @LENGTH@ 14
---------INS SimpleName@@cloned @TO@ ReturnStatement@@SimpleName:cloned @AT@ 9655 @LENGTH@ 6
------INS CatchClause@@catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @TO@ TryStatement@@try {  AsiExtraField cloned=(AsiExtraField)super.clone();  cloned.crc=new CRC32();  return cloned;} catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 9673 @LENGTH@ 123
---------INS SingleVariableDeclaration@@CloneNotSupportedException cnfe @TO@ CatchClause@@catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 9680 @LENGTH@ 31
------------INS SimpleType@@CloneNotSupportedException @TO@ SingleVariableDeclaration@@CloneNotSupportedException cnfe @AT@ 9680 @LENGTH@ 26
------------INS SimpleName@@cnfe @TO@ SingleVariableDeclaration@@CloneNotSupportedException cnfe @AT@ 9707 @LENGTH@ 4
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(cnfe) @TO@ CatchClause@@catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 9753 @LENGTH@ 33
------------INS ClassInstanceCreation@@RuntimeException[cnfe] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(cnfe) @AT@ 9759 @LENGTH@ 26
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[cnfe] @AT@ 9759 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[cnfe] @AT@ 9763 @LENGTH@ 16
---------------INS SimpleName@@cnfe @TO@ ClassInstanceCreation@@RuntimeException[cnfe] @AT@ 9780 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"logo.jpeg") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"logo.jpeg") @AT@ 3013 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"logo.jpeg") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"logo.jpeg") @AT@ 3013 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "logo.jpeg"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "logo.jpeg"] @AT@ 3030 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 3040 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 3040 @LENGTH@ 13


INS FieldDeclaration@@static, final, int, [TYPE_DELETE_DIR=4] @TO@ TypeDeclaration@@Change,  @AT@ 1386 @LENGTH@ 37
---INS Modifier@@static @TO@ FieldDeclaration@@static, final, int, [TYPE_DELETE_DIR=4] @AT@ 1386 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@static, final, int, [TYPE_DELETE_DIR=4] @AT@ 1393 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@static, final, int, [TYPE_DELETE_DIR=4] @AT@ 1399 @LENGTH@ 3
---INS VariableDeclarationFragment@@TYPE_DELETE_DIR=4 @TO@ FieldDeclaration@@static, final, int, [TYPE_DELETE_DIR=4] @AT@ 1403 @LENGTH@ 19
------INS SimpleName@@TYPE_DELETE_DIR @TO@ VariableDeclarationFragment@@TYPE_DELETE_DIR=4 @AT@ 1403 @LENGTH@ 15
------INS NumberLiteral@@4 @TO@ VariableDeclarationFragment@@TYPE_DELETE_DIR=4 @AT@ 1421 @LENGTH@ 1


UPD VariableDeclarationStatement@@String absoluteFileName=directory + "/" + file.getFilename(); @TO@ String absoluteFileName=(ObjectHelper.isNotEmpty(directory) ? directory + "/" : "") + file.getFilename(); @AT@ 3666 @LENGTH@ 63
---UPD VariableDeclarationFragment@@absoluteFileName=directory + "/" + file.getFilename() @TO@ absoluteFileName=(ObjectHelper.isNotEmpty(directory) ? directory + "/" : "") + file.getFilename() @AT@ 3673 @LENGTH@ 55
------UPD InfixExpression@@directory + "/" + file.getFilename() @TO@ (ObjectHelper.isNotEmpty(directory) ? directory + "/" : "") + file.getFilename() @AT@ 3692 @LENGTH@ 36
---------DEL SimpleName@@directory @AT@ 3692 @LENGTH@ 9
---------INS ParenthesizedExpression@@(ObjectHelper.isNotEmpty(directory) ? directory + "/" : "") @TO@ InfixExpression@@directory + "/" + file.getFilename() @AT@ 3843 @LENGTH@ 59
------------INS ConditionalExpression@@ObjectHelper.isNotEmpty(directory) ? directory + "/" : "" @TO@ ParenthesizedExpression@@(ObjectHelper.isNotEmpty(directory) ? directory + "/" : "") @AT@ 3844 @LENGTH@ 57
---------------INS MethodInvocation@@ObjectHelper.isNotEmpty(directory) @TO@ ConditionalExpression@@ObjectHelper.isNotEmpty(directory) ? directory + "/" : "" @AT@ 3844 @LENGTH@ 34
------------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(directory) @AT@ 3844 @LENGTH@ 12
------------------INS SimpleName@@MethodName:isNotEmpty:[directory] @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(directory) @AT@ 3857 @LENGTH@ 21
---------------------INS SimpleName@@directory @TO@ SimpleName@@MethodName:isNotEmpty:[directory] @AT@ 3868 @LENGTH@ 9
---------------INS InfixExpression@@directory + "/" @TO@ ConditionalExpression@@ObjectHelper.isNotEmpty(directory) ? directory + "/" : "" @AT@ 3881 @LENGTH@ 15
------------------MOV Operator@@+ @TO@ InfixExpression@@directory + "/" @AT@ 3701 @LENGTH@ 1
------------------MOV StringLiteral@@"/" @TO@ InfixExpression@@directory + "/" @AT@ 3704 @LENGTH@ 3
------------------INS SimpleName@@directory @TO@ InfixExpression@@directory + "/" @AT@ 3881 @LENGTH@ 9
---------------INS StringLiteral@@"" @TO@ ConditionalExpression@@ObjectHelper.isNotEmpty(directory) ? directory + "/" : "" @AT@ 3899 @LENGTH@ 2
---------INS Operator@@+ @TO@ InfixExpression@@directory + "/" + file.getFilename() @AT@ 3902 @LENGTH@ 1


INS IfStatement@@if (exchange != null) {  return exchange.getContext().getTypeConverter().convertTo(String.class,file.getBody());} else {  return null;} @TO@ MethodDeclaration@@public, static, String, MethodName:convertToString, GenericFile file, Exchange exchange,  @AT@ 2306 @LENGTH@ 256
---INS InfixExpression@@exchange != null @TO@ IfStatement@@if (exchange != null) {  return exchange.getContext().getTypeConverter().convertTo(String.class,file.getBody());} else {  return null;} @AT@ 2310 @LENGTH@ 16
------INS SimpleName@@exchange @TO@ InfixExpression@@exchange != null @AT@ 2310 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@exchange != null @AT@ 2318 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@exchange != null @AT@ 2322 @LENGTH@ 4
---INS Block@@ThenBody:{  return exchange.getContext().getTypeConverter().convertTo(String.class,file.getBody());} @TO@ IfStatement@@if (exchange != null) {  return exchange.getContext().getTypeConverter().convertTo(String.class,file.getBody());} else {  return null;} @AT@ 2328 @LENGTH@ 112
------MOV ReturnStatement@@MethodInvocation:exchange.getContext().getTypeConverter().convertTo(String.class,file.getBody()) @TO@ Block@@ThenBody:{  return exchange.getContext().getTypeConverter().convertTo(String.class,file.getBody());} @AT@ 2306 @LENGTH@ 88
---INS Block@@ElseBody:{  return null;} @TO@ IfStatement@@if (exchange != null) {  return exchange.getContext().getTypeConverter().convertTo(String.class,file.getBody());} else {  return null;} @AT@ 2446 @LENGTH@ 116
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ElseBody:{  return null;} @AT@ 2540 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2547 @LENGTH@ 4


INS VariableDeclarationStatement@@ComponentEntry[] entriesArray=components.values().toArray(new ComponentEntry[0]); @TO@ MethodDeclaration@@protected, synchronized, void, MethodName:mayBeRemoveComponentFor, Bundle bundle,  @AT@ 4546 @LENGTH@ 83
---INS ArrayType@@ComponentEntry[] @TO@ VariableDeclarationStatement@@ComponentEntry[] entriesArray=components.values().toArray(new ComponentEntry[0]); @AT@ 4546 @LENGTH@ 16
------INS SimpleType@@ComponentEntry @TO@ ArrayType@@ComponentEntry[] @AT@ 4546 @LENGTH@ 14
---INS VariableDeclarationFragment@@entriesArray=components.values().toArray(new ComponentEntry[0]) @TO@ VariableDeclarationStatement@@ComponentEntry[] entriesArray=components.values().toArray(new ComponentEntry[0]); @AT@ 4563 @LENGTH@ 65
------INS SimpleName@@entriesArray @TO@ VariableDeclarationFragment@@entriesArray=components.values().toArray(new ComponentEntry[0]) @AT@ 4563 @LENGTH@ 12
------INS MethodInvocation@@components.values().toArray(new ComponentEntry[0]) @TO@ VariableDeclarationFragment@@entriesArray=components.values().toArray(new ComponentEntry[0]) @AT@ 4578 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:values:[] @TO@ MethodInvocation@@components.values().toArray(new ComponentEntry[0]) @AT@ 4578 @LENGTH@ 19
---------INS SimpleName@@Name:components @TO@ MethodInvocation@@components.values().toArray(new ComponentEntry[0]) @AT@ 4578 @LENGTH@ 10
---------INS SimpleName@@MethodName:toArray:[new ComponentEntry[0]] @TO@ MethodInvocation@@components.values().toArray(new ComponentEntry[0]) @AT@ 4598 @LENGTH@ 30
------------INS ArrayCreation@@new ComponentEntry[0] @TO@ SimpleName@@MethodName:toArray:[new ComponentEntry[0]] @AT@ 4606 @LENGTH@ 21
---------------INS ArrayType@@ComponentEntry[] @TO@ ArrayCreation@@new ComponentEntry[0] @AT@ 4610 @LENGTH@ 17
------------------INS SimpleType@@ComponentEntry @TO@ ArrayType@@ComponentEntry[] @AT@ 4610 @LENGTH@ 14
---------------INS NumberLiteral@@0 @TO@ ArrayCreation@@new ComponentEntry[0] @AT@ 4625 @LENGTH@ 1


UPD EnhancedForStatement@@for (MethodInfo info : methodMap.values()) {  if (!info.getMethod().getName().equals(methodInfo.getMethod().getName())) {    continue;  }  if (info.getMethod().getParameterTypes().length != methodInfo.getMethod().getParameterTypes().length) {    continue;  }  for (int i=0; i < info.getMethod().getParameterTypes().length; i++) {    Class type1=info.getMethod().getParameterTypes()[i];    Class type2=methodInfo.getMethod().getParameterTypes()[i];    if (!type1.equals(type2)) {      continue;    }  }  return info;} @TO@ for (MethodInfo info : methodMap.values()) {  if (!info.getMethod().getName().equals(methodInfo.getMethod().getName())) {    continue;  }  if (info.getMethod().getParameterTypes().length != methodInfo.getMethod().getParameterTypes().length) {    continue;  }  boolean found=false;  for (int i=0; i < info.getMethod().getParameterTypes().length; i++) {    Class type1=info.getMethod().getParameterTypes()[i];    Class type2=methodInfo.getMethod().getParameterTypes()[i];    if (type1.equals(type2)) {      found=true;      break;    }  }  if (found) {    return info;  }} @AT@ 18063 @LENGTH@ 841
---UPD ForStatement@@for (int i=0; i < info.getMethod().getParameterTypes().length; i++) {  Class type1=info.getMethod().getParameterTypes()[i];  Class type2=methodInfo.getMethod().getParameterTypes()[i];  if (!type1.equals(type2)) {    continue;  }} @TO@ for (int i=0; i < info.getMethod().getParameterTypes().length; i++) {  Class type1=info.getMethod().getParameterTypes()[i];  Class type2=methodInfo.getMethod().getParameterTypes()[i];  if (type1.equals(type2)) {    found=true;    break;  }} @AT@ 18463 @LENGTH@ 325
------UPD IfStatement@@if (!type1.equals(type2)) {  continue;} @TO@ if (type1.equals(type2)) {  found=true;  break;} @AT@ 18699 @LENGTH@ 75
---------DEL PrefixExpression@@!type1.equals(type2) @AT@ 18703 @LENGTH@ 20
------------DEL Operator@@! @AT@ 18703 @LENGTH@ 1
---------MOV MethodInvocation@@type1.equals(type2) @TO@ IfStatement@@if (!type1.equals(type2)) {  continue;} @AT@ 18704 @LENGTH@ 19
---------UPD Block@@ThenBody:{  continue;} @TO@ ThenBody:{  found=true;  break;} @AT@ 18725 @LENGTH@ 49
------------DEL ContinueStatement@@ @AT@ 18747 @LENGTH@ 9
------------INS ExpressionStatement@@Assignment:found=true @TO@ Block@@ThenBody:{  continue;} @AT@ 18781 @LENGTH@ 13
---------------INS Assignment@@found=true @TO@ ExpressionStatement@@Assignment:found=true @AT@ 18781 @LENGTH@ 12
------------------INS SimpleName@@found @TO@ Assignment@@found=true @AT@ 18781 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@found=true @AT@ 18786 @LENGTH@ 1
------------------INS BooleanLiteral@@true @TO@ Assignment@@found=true @AT@ 18789 @LENGTH@ 4
------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 18815 @LENGTH@ 6
---INS VariableDeclarationStatement@@boolean found=false; @TO@ EnhancedForStatement@@for (MethodInfo info : methodMap.values()) {  if (!info.getMethod().getName().equals(methodInfo.getMethod().getName())) {    continue;  }  if (info.getMethod().getParameterTypes().length != methodInfo.getMethod().getParameterTypes().length) {    continue;  }  for (int i=0; i < info.getMethod().getParameterTypes().length; i++) {    Class type1=info.getMethod().getParameterTypes()[i];    Class type2=methodInfo.getMethod().getParameterTypes()[i];    if (!type1.equals(type2)) {      continue;    }  }  return info;} @AT@ 18463 @LENGTH@ 22
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean found=false; @AT@ 18463 @LENGTH@ 7
------INS VariableDeclarationFragment@@found=false @TO@ VariableDeclarationStatement@@boolean found=false; @AT@ 18471 @LENGTH@ 13
---------INS SimpleName@@found @TO@ VariableDeclarationFragment@@found=false @AT@ 18471 @LENGTH@ 5
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@found=false @AT@ 18479 @LENGTH@ 5
---INS IfStatement@@if (found) {  return info;} @TO@ EnhancedForStatement@@for (MethodInfo info : methodMap.values()) {  if (!info.getMethod().getName().equals(methodInfo.getMethod().getName())) {    continue;  }  if (info.getMethod().getParameterTypes().length != methodInfo.getMethod().getParameterTypes().length) {    continue;  }  for (int i=0; i < info.getMethod().getParameterTypes().length; i++) {    Class type1=info.getMethod().getParameterTypes()[i];    Class type2=methodInfo.getMethod().getParameterTypes()[i];    if (!type1.equals(type2)) {      continue;    }  }  return info;} @AT@ 18867 @LENGTH@ 139
------INS SimpleName@@found @TO@ IfStatement@@if (found) {  return info;} @AT@ 18871 @LENGTH@ 5
------INS Block@@ThenBody:{  return info;} @TO@ IfStatement@@if (found) {  return info;} @AT@ 18878 @LENGTH@ 128
---------INS ReturnStatement@@SimpleName:info @TO@ Block@@ThenBody:{  return info;} @AT@ 18980 @LENGTH@ 12
------------MOV SimpleName@@info @TO@ ReturnStatement@@SimpleName:info @AT@ 18889 @LENGTH@ 4
---DEL ReturnStatement@@SimpleName:info @AT@ 18882 @LENGTH@ 12


INS MethodDeclaration@@T, T, MethodName:getMandatoryBody, Class<T> type, InvalidPayloadException,  @TO@ TypeDeclaration@@[public]Message,  @AT@ 3834 @LENGTH@ 63
---INS SimpleType@@T @TO@ MethodDeclaration@@T, T, MethodName:getMandatoryBody, Class<T> type, InvalidPayloadException,  @AT@ 3832 @LENGTH@ 1
---INS SimpleName@@MethodName:getMandatoryBody @TO@ MethodDeclaration@@T, T, MethodName:getMandatoryBody, Class<T> type, InvalidPayloadException,  @AT@ 3834 @LENGTH@ 16
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@T, T, MethodName:getMandatoryBody, Class<T> type, InvalidPayloadException,  @AT@ 3851 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3851 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3851 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3857 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3860 @LENGTH@ 4
---INS SimpleType@@InvalidPayloadException @TO@ MethodDeclaration@@T, T, MethodName:getMandatoryBody, Class<T> type, InvalidPayloadException,  @AT@ 3873 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"myfile-${date:now:yyyyMMdd}.txt") @TO@ MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"myfile-${date:now:yyyyMMdd}.txt") @AT@ 2387 @LENGTH@ 122
---UPD MethodInvocation@@template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"myfile-${date:now:yyyyMMdd}.txt") @TO@ template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"myfile-${date:now:yyyyMMdd}.txt") @AT@ 2387 @LENGTH@ 121
------UPD SimpleName@@MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", FileComponent.HEADER_FILE_NAME, "myfile-${date:now:yyyyMMdd}.txt"] @TO@ MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", NewFileComponent.HEADER_FILE_NAME, "myfile-${date:now:yyyyMMdd}.txt"] @AT@ 2396 @LENGTH@ 112
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2442 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2442 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:from(getFtpUrl() + "&sortBy=file:name.ext;file:name").to("mock:result") @TO@ MethodInvocation:from(getFtpUrl() + "&sortBy=file:ext;file:name").to("mock:result") @AT@ 1639 @LENGTH@ 72
---UPD MethodInvocation@@from(getFtpUrl() + "&sortBy=file:name.ext;file:name").to("mock:result") @TO@ from(getFtpUrl() + "&sortBy=file:ext;file:name").to("mock:result") @AT@ 1639 @LENGTH@ 71
------UPD MethodInvocation@@MethodName:from:[getFtpUrl() + "&sortBy=file:name.ext;file:name"] @TO@ MethodName:from:[getFtpUrl() + "&sortBy=file:ext;file:name"] @AT@ 1639 @LENGTH@ 53
---------UPD InfixExpression@@getFtpUrl() + "&sortBy=file:name.ext;file:name" @TO@ getFtpUrl() + "&sortBy=file:ext;file:name" @AT@ 1644 @LENGTH@ 47
------------UPD StringLiteral@@"&sortBy=file:name.ext;file:name" @TO@ "&sortBy=file:ext;file:name" @AT@ 1658 @LENGTH@ 33


DEL MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @AT@ 14368 @LENGTH@ 221
---DEL Modifier@@protected @AT@ 14368 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 14378 @LENGTH@ 4
---DEL SimpleName@@MethodName:configureChild @AT@ 14383 @LENGTH@ 14
---DEL SingleVariableDeclaration@@ProcessorDefinition output @AT@ 14398 @LENGTH@ 26
------DEL SimpleType@@ProcessorDefinition @AT@ 14398 @LENGTH@ 19
------DEL SimpleName@@output @AT@ 14418 @LENGTH@ 6
---DEL ExpressionStatement@@SuperMethodInvocation:super.configureChild(output) @AT@ 14436 @LENGTH@ 29
------DEL SuperMethodInvocation@@super.configureChild(output) @AT@ 14436 @LENGTH@ 28
---------DEL SimpleName@@MethodName:configureChild:[output] @AT@ 14442 @LENGTH@ 14
---------DEL SimpleName@@output @AT@ 14457 @LENGTH@ 6
---DEL IfStatement@@if (isInheritErrorHandler()) {  output.setErrorHandlerBuilder(getErrorHandlerBuilder());} @AT@ 14474 @LENGTH@ 109
------DEL MethodInvocation@@MethodName:isInheritErrorHandler:[] @AT@ 14478 @LENGTH@ 23
------DEL Block@@ThenBody:{  output.setErrorHandlerBuilder(getErrorHandlerBuilder());} @AT@ 14503 @LENGTH@ 80
---------DEL ExpressionStatement@@MethodInvocation:output.setErrorHandlerBuilder(getErrorHandlerBuilder()) @AT@ 14517 @LENGTH@ 56
------------DEL MethodInvocation@@output.setErrorHandlerBuilder(getErrorHandlerBuilder()) @AT@ 14517 @LENGTH@ 55
---------------DEL SimpleName@@Name:output @AT@ 14517 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:setErrorHandlerBuilder:[getErrorHandlerBuilder()] @AT@ 14524 @LENGTH@ 48
------------------DEL MethodInvocation@@MethodName:getErrorHandlerBuilder:[] @AT@ 14547 @LENGTH@ 24


INS IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Finished polling: " + this.getEndpoint());} @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2825 @LENGTH@ 103
---INS MethodInvocation@@LOG.isTraceEnabled() @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Finished polling: " + this.getEndpoint());} @AT@ 2829 @LENGTH@ 20
------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 2829 @LENGTH@ 3
------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 2833 @LENGTH@ 16
---INS Block@@ThenBody:{  LOG.trace("Finished polling: " + this.getEndpoint());} @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Finished polling: " + this.getEndpoint());} @AT@ 2851 @LENGTH@ 77
------INS ExpressionStatement@@MethodInvocation:LOG.trace("Finished polling: " + this.getEndpoint()) @TO@ Block@@ThenBody:{  LOG.trace("Finished polling: " + this.getEndpoint());} @AT@ 2865 @LENGTH@ 53
---------INS MethodInvocation@@LOG.trace("Finished polling: " + this.getEndpoint()) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Finished polling: " + this.getEndpoint()) @AT@ 2865 @LENGTH@ 52
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Finished polling: " + this.getEndpoint()) @AT@ 2865 @LENGTH@ 3
------------INS SimpleName@@MethodName:trace:["Finished polling: " + this.getEndpoint()] @TO@ MethodInvocation@@LOG.trace("Finished polling: " + this.getEndpoint()) @AT@ 2869 @LENGTH@ 48
---------------INS InfixExpression@@"Finished polling: " + this.getEndpoint() @TO@ SimpleName@@MethodName:trace:["Finished polling: " + this.getEndpoint()] @AT@ 2875 @LENGTH@ 41
------------------INS StringLiteral@@"Finished polling: " @TO@ InfixExpression@@"Finished polling: " + this.getEndpoint() @AT@ 2875 @LENGTH@ 20
------------------INS Operator@@+ @TO@ InfixExpression@@"Finished polling: " + this.getEndpoint() @AT@ 2895 @LENGTH@ 1
------------------INS MethodInvocation@@this.getEndpoint() @TO@ InfixExpression@@"Finished polling: " + this.getEndpoint() @AT@ 2898 @LENGTH@ 18
---------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getEndpoint() @AT@ 2898 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@this.getEndpoint() @AT@ 2903 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @TO@ TypeDeclaration@@[public]OraclePagingQueryProviderTests, AbstractSqlPagingQueryProviderTests @AT@ 1470 @LENGTH@ 324
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1470 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1477 @LENGTH@ 4
---INS SimpleName@@MethodName:testGenerateJumpToItemQueryForFirstPage @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1482 @LENGTH@ 39
---INS VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1528 @LENGTH@ 156
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @AT@ 1528 @LENGTH@ 6
------INS VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @TO@ VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @AT@ 1535 @LENGTH@ 148
---------INS SimpleName@@sql @TO@ VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @AT@ 1535 @LENGTH@ 3
---------INS StringLiteral@@"SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @TO@ VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @AT@ 1541 @LENGTH@ 142
---INS VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1687 @LENGTH@ 69
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1687 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1694 @LENGTH@ 61
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1694 @LENGTH@ 1
---------INS MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1698 @LENGTH@ 57
------------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1698 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1718 @LENGTH@ 37
---------------INS NumberLiteral@@45 @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1742 @LENGTH@ 2
---------------INS SimpleName@@pageSize @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1746 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1759 @LENGTH@ 32
------INS MethodInvocation@@Assert.assertEquals("",sql,s) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @AT@ 1759 @LENGTH@ 31
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1759 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["", sql, s] @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1766 @LENGTH@ 24
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1779 @LENGTH@ 2
------------INS SimpleName@@sql @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1783 @LENGTH@ 3
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1788 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @TO@ TypeDeclaration@@[public]MySqlPagingQueryProviderTests, AbstractSqlPagingQueryProviderTests @AT@ 1770 @LENGTH@ 255
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1770 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1777 @LENGTH@ 4
---INS SimpleName@@MethodName:testGenerateJumpToItemQueryForFirstPage @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1782 @LENGTH@ 39
---INS VariableDeclarationStatement@@String sql="SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0, 1"; @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1828 @LENGTH@ 87
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sql="SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0, 1"; @AT@ 1828 @LENGTH@ 6
------INS VariableDeclarationFragment@@sql="SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0, 1" @TO@ VariableDeclarationStatement@@String sql="SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0, 1"; @AT@ 1835 @LENGTH@ 79
---------INS SimpleName@@sql @TO@ VariableDeclarationFragment@@sql="SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0, 1" @AT@ 1835 @LENGTH@ 3
---------INS StringLiteral@@"SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0, 1" @TO@ VariableDeclarationFragment@@sql="SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0, 1" @AT@ 1841 @LENGTH@ 73
---INS VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1918 @LENGTH@ 69
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1918 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1925 @LENGTH@ 61
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1925 @LENGTH@ 1
---------INS MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1929 @LENGTH@ 57
------------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1929 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1949 @LENGTH@ 37
---------------INS NumberLiteral@@45 @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1973 @LENGTH@ 2
---------------INS SimpleName@@pageSize @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1977 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1990 @LENGTH@ 32
------INS MethodInvocation@@Assert.assertEquals("",sql,s) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @AT@ 1990 @LENGTH@ 31
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1990 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["", sql, s] @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1997 @LENGTH@ 24
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 2010 @LENGTH@ 2
------------INS SimpleName@@sql @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 2014 @LENGTH@ 3
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 2019 @LENGTH@ 1


UPD IfStatement@@if (StringUtils.hasText(servletPath)) {  int dotIndex=servletPath.lastIndexOf('.');  if (dotIndex != -1) {    return servletPath.substring(1,dotIndex);  } else {    return servletPath.substring(1);  }} else {  return request.getContextPath().substring(1);} @TO@ if (StringUtils.hasText(servletPath)) {  int dotIndex=servletPath.lastIndexOf('.');  if (dotIndex != -1) {    return servletPath.substring(1,dotIndex);  } else {    return servletPath.substring(1);  }} else {  String contextPath=request.getContextPath();  if (StringUtils.hasText(contextPath)) {    return request.getContextPath().substring(1);  } else {    return null;  }} @AT@ 2490 @LENGTH@ 286
---INS Block@@ElseBody:{  String contextPath=request.getContextPath();  if (StringUtils.hasText(contextPath)) {    return request.getContextPath().substring(1);  } else {    return null;  }} @TO@ IfStatement@@if (StringUtils.hasText(servletPath)) {  int dotIndex=servletPath.lastIndexOf('.');  if (dotIndex != -1) {    return servletPath.substring(1,dotIndex);  } else {    return servletPath.substring(1);  }} else {  return request.getContextPath().substring(1);} @AT@ 2720 @LENGTH@ 189
------INS VariableDeclarationStatement@@String contextPath=request.getContextPath(); @TO@ Block@@ElseBody:{  String contextPath=request.getContextPath();  if (StringUtils.hasText(contextPath)) {    return request.getContextPath().substring(1);  } else {    return null;  }} @AT@ 2726 @LENGTH@ 46
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String contextPath=request.getContextPath(); @AT@ 2726 @LENGTH@ 6
---------INS VariableDeclarationFragment@@contextPath=request.getContextPath() @TO@ VariableDeclarationStatement@@String contextPath=request.getContextPath(); @AT@ 2733 @LENGTH@ 38
------------INS SimpleName@@contextPath @TO@ VariableDeclarationFragment@@contextPath=request.getContextPath() @AT@ 2733 @LENGTH@ 11
------------INS MethodInvocation@@request.getContextPath() @TO@ VariableDeclarationFragment@@contextPath=request.getContextPath() @AT@ 2747 @LENGTH@ 24
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getContextPath() @AT@ 2747 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getContextPath:[] @TO@ MethodInvocation@@request.getContextPath() @AT@ 2755 @LENGTH@ 16
------INS IfStatement@@if (StringUtils.hasText(contextPath)) {  return request.getContextPath().substring(1);} else {  return null;} @TO@ Block@@ElseBody:{  String contextPath=request.getContextPath();  if (StringUtils.hasText(contextPath)) {    return request.getContextPath().substring(1);  } else {    return null;  }} @AT@ 2777 @LENGTH@ 127
---------MOV Block@@ElseBody:{  return request.getContextPath().substring(1);} @TO@ IfStatement@@if (StringUtils.hasText(contextPath)) {  return request.getContextPath().substring(1);} else {  return null;} @AT@ 2720 @LENGTH@ 56
---------INS MethodInvocation@@StringUtils.hasText(contextPath) @TO@ IfStatement@@if (StringUtils.hasText(contextPath)) {  return request.getContextPath().substring(1);} else {  return null;} @AT@ 2781 @LENGTH@ 32
------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(contextPath) @AT@ 2781 @LENGTH@ 11
------------INS SimpleName@@MethodName:hasText:[contextPath] @TO@ MethodInvocation@@StringUtils.hasText(contextPath) @AT@ 2793 @LENGTH@ 20
---------------INS SimpleName@@contextPath @TO@ SimpleName@@MethodName:hasText:[contextPath] @AT@ 2801 @LENGTH@ 11
---------INS Block@@ElseBody:{  return null;} @TO@ IfStatement@@if (StringUtils.hasText(contextPath)) {  return request.getContextPath().substring(1);} else {  return null;} @AT@ 2879 @LENGTH@ 25
------------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ElseBody:{  return null;} @AT@ 2886 @LENGTH@ 12
---------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2893 @LENGTH@ 4
---UPD Block@@ElseBody:{  return request.getContextPath().substring(1);} @TO@ ThenBody:{  return request.getContextPath().substring(1);} @AT@ 2720 @LENGTH@ 56


UPD ReturnStatement@@InfixExpression:("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @TO@ InfixExpression:"Model : " + Order.class.getName() + " : "+ String.valueOf(this.getOrderNr())+ ", "+ String.valueOf(this.getAmount())+ ", "+ String.valueOf(this.getIsinCode())+ ", "+ String.valueOf(this.getInstrumentName())+ ", "+ String.valueOf(this.getCurrency())+ ", "+ String.valueOf(this.getClientNr())+ ", "+ String.valueOf(this.getFirstName())+ ", "+ String.valueOf(this.getLastName())+ ", "+ String.valueOf(this.getOrderDate()) @AT@ 3098 @LENGTH@ 344
---UPD InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @TO@ "Model : " + Order.class.getName() + " : "+ String.valueOf(this.getOrderNr())+ ", "+ String.valueOf(this.getAmount())+ ", "+ String.valueOf(this.getIsinCode())+ ", "+ String.valueOf(this.getInstrumentName())+ ", "+ String.valueOf(this.getCurrency())+ ", "+ String.valueOf(this.getClientNr())+ ", "+ String.valueOf(this.getFirstName())+ ", "+ String.valueOf(this.getLastName())+ ", "+ String.valueOf(this.getOrderDate()) @AT@ 3105 @LENGTH@ 336
------DEL ParenthesizedExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) @AT@ 3105 @LENGTH@ 207
---------DEL InfixExpression@@"Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency() @AT@ 3106 @LENGTH@ 205
------------DEL MethodInvocation@@this.getOrderNr() @AT@ 3151 @LENGTH@ 17
------------DEL MethodInvocation@@this.getAmount().toString() @AT@ 3178 @LENGTH@ 27
---------------DEL MethodInvocation@@MethodName:getAmount:[] @AT@ 3178 @LENGTH@ 16
------------DEL MethodInvocation@@this.getIsinCode() @AT@ 3215 @LENGTH@ 18
------------DEL MethodInvocation@@this.getInstrumentName() @AT@ 3259 @LENGTH@ 24
------------DEL MethodInvocation@@this.getCurrency() @AT@ 3293 @LENGTH@ 18
------MOV StringLiteral@@"Model : " @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3106 @LENGTH@ 10
------MOV Operator@@+ @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3116 @LENGTH@ 1
------MOV MethodInvocation@@Order.class.getName() @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3119 @LENGTH@ 21
------MOV StringLiteral@@" : " @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3143 @LENGTH@ 5
------INS MethodInvocation@@String.valueOf(this.getOrderNr()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3163 @LENGTH@ 33
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getOrderNr()) @AT@ 3163 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getOrderNr()] @TO@ MethodInvocation@@String.valueOf(this.getOrderNr()) @AT@ 3170 @LENGTH@ 26
------------INS MethodInvocation@@this.getOrderNr() @TO@ SimpleName@@MethodName:valueOf:[this.getOrderNr()] @AT@ 3178 @LENGTH@ 17
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getOrderNr() @AT@ 3151 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getOrderNr:[] @TO@ MethodInvocation@@this.getOrderNr() @AT@ 3156 @LENGTH@ 12
------MOV StringLiteral@@", " @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3171 @LENGTH@ 4
------MOV StringLiteral@@", " @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3208 @LENGTH@ 4
------INS MethodInvocation@@String.valueOf(this.getAmount()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3219 @LENGTH@ 32
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getAmount()) @AT@ 3219 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getAmount()] @TO@ MethodInvocation@@String.valueOf(this.getAmount()) @AT@ 3226 @LENGTH@ 25
------------INS MethodInvocation@@this.getAmount() @TO@ SimpleName@@MethodName:valueOf:[this.getAmount()] @AT@ 3234 @LENGTH@ 16
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getAmount() @AT@ 3178 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@this.getAmount() @AT@ 3195 @LENGTH@ 10
------MOV StringLiteral@@", " @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3236 @LENGTH@ 4
------INS MethodInvocation@@String.valueOf(this.getIsinCode()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3274 @LENGTH@ 34
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getIsinCode()) @AT@ 3274 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getIsinCode()] @TO@ MethodInvocation@@String.valueOf(this.getIsinCode()) @AT@ 3281 @LENGTH@ 27
------------INS MethodInvocation@@this.getIsinCode() @TO@ SimpleName@@MethodName:valueOf:[this.getIsinCode()] @AT@ 3289 @LENGTH@ 18
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getIsinCode() @AT@ 3215 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getIsinCode:[] @TO@ MethodInvocation@@this.getIsinCode() @AT@ 3220 @LENGTH@ 13
------MOV StringLiteral@@", " @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3286 @LENGTH@ 4
------DEL Operator@@+ @AT@ 3312 @LENGTH@ 1
------INS MethodInvocation@@String.valueOf(this.getInstrumentName()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3331 @LENGTH@ 40
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getInstrumentName()) @AT@ 3331 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getInstrumentName()] @TO@ MethodInvocation@@String.valueOf(this.getInstrumentName()) @AT@ 3338 @LENGTH@ 33
------------INS MethodInvocation@@this.getInstrumentName() @TO@ SimpleName@@MethodName:valueOf:[this.getInstrumentName()] @AT@ 3346 @LENGTH@ 24
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getInstrumentName() @AT@ 3259 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getInstrumentName:[] @TO@ MethodInvocation@@this.getInstrumentName() @AT@ 3264 @LENGTH@ 19
------DEL MethodInvocation@@this.getClientNr() @AT@ 3337 @LENGTH@ 18
------DEL MethodInvocation@@this.getFirstName() @AT@ 3365 @LENGTH@ 19
------INS MethodInvocation@@String.valueOf(this.getCurrency()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3394 @LENGTH@ 34
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getCurrency()) @AT@ 3394 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getCurrency()] @TO@ MethodInvocation@@String.valueOf(this.getCurrency()) @AT@ 3401 @LENGTH@ 27
------------INS MethodInvocation@@this.getCurrency() @TO@ SimpleName@@MethodName:valueOf:[this.getCurrency()] @AT@ 3409 @LENGTH@ 18
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getCurrency() @AT@ 3293 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getCurrency:[] @TO@ MethodInvocation@@this.getCurrency() @AT@ 3298 @LENGTH@ 13
------DEL MethodInvocation@@this.getLastName() @AT@ 3394 @LENGTH@ 18
------DEL MethodInvocation@@this.getOrderDate() @AT@ 3422 @LENGTH@ 19
------INS MethodInvocation@@String.valueOf(this.getClientNr()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3451 @LENGTH@ 34
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getClientNr()) @AT@ 3451 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getClientNr()] @TO@ MethodInvocation@@String.valueOf(this.getClientNr()) @AT@ 3458 @LENGTH@ 27
------------INS MethodInvocation@@this.getClientNr() @TO@ SimpleName@@MethodName:valueOf:[this.getClientNr()] @AT@ 3466 @LENGTH@ 18
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getClientNr() @AT@ 3337 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getClientNr:[] @TO@ MethodInvocation@@this.getClientNr() @AT@ 3342 @LENGTH@ 13
------INS MethodInvocation@@String.valueOf(this.getFirstName()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3508 @LENGTH@ 35
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getFirstName()) @AT@ 3508 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getFirstName()] @TO@ MethodInvocation@@String.valueOf(this.getFirstName()) @AT@ 3515 @LENGTH@ 28
------------INS MethodInvocation@@this.getFirstName() @TO@ SimpleName@@MethodName:valueOf:[this.getFirstName()] @AT@ 3523 @LENGTH@ 19
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getFirstName() @AT@ 3365 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getFirstName:[] @TO@ MethodInvocation@@this.getFirstName() @AT@ 3370 @LENGTH@ 14
------INS MethodInvocation@@String.valueOf(this.getLastName()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3566 @LENGTH@ 34
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getLastName()) @AT@ 3566 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getLastName()] @TO@ MethodInvocation@@String.valueOf(this.getLastName()) @AT@ 3573 @LENGTH@ 27
------------INS MethodInvocation@@this.getLastName() @TO@ SimpleName@@MethodName:valueOf:[this.getLastName()] @AT@ 3581 @LENGTH@ 18
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getLastName() @AT@ 3394 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getLastName:[] @TO@ MethodInvocation@@this.getLastName() @AT@ 3399 @LENGTH@ 13
------INS MethodInvocation@@String.valueOf(this.getOrderDate()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName()+ ", "+ this.getOrderDate() @AT@ 3623 @LENGTH@ 35
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getOrderDate()) @AT@ 3623 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getOrderDate()] @TO@ MethodInvocation@@String.valueOf(this.getOrderDate()) @AT@ 3630 @LENGTH@ 28
------------INS MethodInvocation@@this.getOrderDate() @TO@ SimpleName@@MethodName:valueOf:[this.getOrderDate()] @AT@ 3638 @LENGTH@ 19
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getOrderDate() @AT@ 3422 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getOrderDate:[] @TO@ MethodInvocation@@this.getOrderDate() @AT@ 3427 @LENGTH@ 14


DEL MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @AT@ 3093 @LENGTH@ 221
---DEL Modifier@@protected @AT@ 3093 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 3103 @LENGTH@ 4
---DEL SimpleName@@MethodName:configureChild @AT@ 3108 @LENGTH@ 14
---DEL SingleVariableDeclaration@@ProcessorDefinition output @AT@ 3123 @LENGTH@ 26
------DEL SimpleType@@ProcessorDefinition @AT@ 3123 @LENGTH@ 19
------DEL SimpleName@@output @AT@ 3143 @LENGTH@ 6
---DEL ExpressionStatement@@SuperMethodInvocation:super.configureChild(output) @AT@ 3161 @LENGTH@ 29
------DEL SuperMethodInvocation@@super.configureChild(output) @AT@ 3161 @LENGTH@ 28
---------DEL SimpleName@@MethodName:configureChild:[output] @AT@ 3167 @LENGTH@ 14
---------DEL SimpleName@@output @AT@ 3182 @LENGTH@ 6
---DEL IfStatement@@if (isInheritErrorHandler()) {  output.setErrorHandlerBuilder(getErrorHandlerBuilder());} @AT@ 3199 @LENGTH@ 109
------DEL MethodInvocation@@MethodName:isInheritErrorHandler:[] @AT@ 3203 @LENGTH@ 23
------DEL Block@@ThenBody:{  output.setErrorHandlerBuilder(getErrorHandlerBuilder());} @AT@ 3228 @LENGTH@ 80
---------DEL ExpressionStatement@@MethodInvocation:output.setErrorHandlerBuilder(getErrorHandlerBuilder()) @AT@ 3242 @LENGTH@ 56
------------DEL MethodInvocation@@output.setErrorHandlerBuilder(getErrorHandlerBuilder()) @AT@ 3242 @LENGTH@ 55
---------------DEL SimpleName@@Name:output @AT@ 3242 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:setErrorHandlerBuilder:[getErrorHandlerBuilder()] @AT@ 3249 @LENGTH@ 48
------------------DEL MethodInvocation@@MethodName:getErrorHandlerBuilder:[] @AT@ 3272 @LENGTH@ 24


INS IfStatement@@if (ObjectHelper.isEmpty(fileName)) {  fileName=".";} @TO@ MethodDeclaration@@protected, void, MethodName:pollDirectory, String fileName, List<RemoteFile> fileList,  @AT@ 1528 @LENGTH@ 75
---INS MethodInvocation@@ObjectHelper.isEmpty(fileName) @TO@ IfStatement@@if (ObjectHelper.isEmpty(fileName)) {  fileName=".";} @AT@ 1532 @LENGTH@ 30
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(fileName) @AT@ 1532 @LENGTH@ 12
------INS SimpleName@@MethodName:isEmpty:[fileName] @TO@ MethodInvocation@@ObjectHelper.isEmpty(fileName) @AT@ 1545 @LENGTH@ 17
---------INS SimpleName@@fileName @TO@ SimpleName@@MethodName:isEmpty:[fileName] @AT@ 1553 @LENGTH@ 8
---INS Block@@ThenBody:{  fileName=".";} @TO@ IfStatement@@if (ObjectHelper.isEmpty(fileName)) {  fileName=".";} @AT@ 1564 @LENGTH@ 39
------INS ExpressionStatement@@Assignment:fileName="." @TO@ Block@@ThenBody:{  fileName=".";} @AT@ 1578 @LENGTH@ 15
---------INS Assignment@@fileName="." @TO@ ExpressionStatement@@Assignment:fileName="." @AT@ 1578 @LENGTH@ 14
------------INS SimpleName@@fileName @TO@ Assignment@@fileName="." @AT@ 1578 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@fileName="." @AT@ 1586 @LENGTH@ 1
------------INS StringLiteral@@"." @TO@ Assignment@@fileName="." @AT@ 1589 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:getAttachments().putAll(that.getAttachments()) @TO@ MethodDeclaration@@public, void, MethodName:copyFrom, org.apache.camel.Message that,  @AT@ 2628 @LENGTH@ 47
---INS MethodInvocation@@getAttachments().putAll(that.getAttachments()) @TO@ ExpressionStatement@@MethodInvocation:getAttachments().putAll(that.getAttachments()) @AT@ 2628 @LENGTH@ 46
------INS MethodInvocation@@MethodName:getAttachments:[] @TO@ MethodInvocation@@getAttachments().putAll(that.getAttachments()) @AT@ 2628 @LENGTH@ 16
------INS SimpleName@@MethodName:putAll:[that.getAttachments()] @TO@ MethodInvocation@@getAttachments().putAll(that.getAttachments()) @AT@ 2645 @LENGTH@ 29
---------INS MethodInvocation@@that.getAttachments() @TO@ SimpleName@@MethodName:putAll:[that.getAttachments()] @AT@ 2652 @LENGTH@ 21
------------INS SimpleName@@Name:that @TO@ MethodInvocation@@that.getAttachments() @AT@ 2652 @LENGTH@ 4
------------INS SimpleName@@MethodName:getAttachments:[] @TO@ MethodInvocation@@that.getAttachments() @AT@ 2657 @LENGTH@ 16


UPD VariableDeclarationStatement@@ProceedDefinition proceed=ProcessorTypeHelper.findFirstTypeInOutputs(proxy.getOutputs(),ProceedDefinition.class); @TO@ ProceedDefinition proceed=ProcessorDefinitionHelper.findFirstTypeInOutputs(proxy.getOutputs(),ProceedDefinition.class); @AT@ 11006 @LENGTH@ 116
---UPD VariableDeclarationFragment@@proceed=ProcessorTypeHelper.findFirstTypeInOutputs(proxy.getOutputs(),ProceedDefinition.class) @TO@ proceed=ProcessorDefinitionHelper.findFirstTypeInOutputs(proxy.getOutputs(),ProceedDefinition.class) @AT@ 11024 @LENGTH@ 97
------UPD MethodInvocation@@ProcessorTypeHelper.findFirstTypeInOutputs(proxy.getOutputs(),ProceedDefinition.class) @TO@ ProcessorDefinitionHelper.findFirstTypeInOutputs(proxy.getOutputs(),ProceedDefinition.class) @AT@ 11034 @LENGTH@ 87
---------UPD SimpleName@@Name:ProcessorTypeHelper @TO@ Name:ProcessorDefinitionHelper @AT@ 11034 @LENGTH@ 19


UPD VariableDeclarationStatement@@ActiveMQComponent activemq=activeMQComponent("vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000&jms.maxReconnectAttempts=1&jms.timeout=3000"); @TO@ ActiveMQComponent activemq=activeMQComponent("vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0" + "&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000" + "&jms.maxReconnectAttempts=1&jms.timeout=3000"); @AT@ 1933 @LENGTH@ 289
---UPD VariableDeclarationFragment@@activemq=activeMQComponent("vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000&jms.maxReconnectAttempts=1&jms.timeout=3000") @TO@ activemq=activeMQComponent("vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0" + "&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000" + "&jms.maxReconnectAttempts=1&jms.timeout=3000") @AT@ 1951 @LENGTH@ 270
------UPD MethodInvocation@@activeMQComponent("vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000&jms.maxReconnectAttempts=1&jms.timeout=3000") @TO@ activeMQComponent("vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0" + "&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000" + "&jms.maxReconnectAttempts=1&jms.timeout=3000") @AT@ 1962 @LENGTH@ 259
---------UPD SimpleName@@MethodName:activeMQComponent:["vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000&jms.maxReconnectAttempts=1&jms.timeout=3000"] @TO@ MethodName:activeMQComponent:["vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0" + "&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000" + "&jms.maxReconnectAttempts=1&jms.timeout=3000"] @AT@ 1962 @LENGTH@ 259
------------DEL StringLiteral@@"vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000&jms.maxReconnectAttempts=1&jms.timeout=3000" @AT@ 1980 @LENGTH@ 240
------------INS InfixExpression@@"vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0" + "&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000" + "&jms.maxReconnectAttempts=1&jms.timeout=3000" @TO@ SimpleName@@MethodName:activeMQComponent:["vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000&jms.maxReconnectAttempts=1&jms.timeout=3000"] @AT@ 2038 @LENGTH@ 311
---------------INS StringLiteral@@"vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0" @TO@ InfixExpression@@"vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0" + "&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000" + "&jms.maxReconnectAttempts=1&jms.timeout=3000" @AT@ 2038 @LENGTH@ 103
---------------INS Operator@@+ @TO@ InfixExpression@@"vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0" + "&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000" + "&jms.maxReconnectAttempts=1&jms.timeout=3000" @AT@ 2141 @LENGTH@ 1
---------------INS StringLiteral@@"&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000" @TO@ InfixExpression@@"vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0" + "&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000" + "&jms.maxReconnectAttempts=1&jms.timeout=3000" @AT@ 2175 @LENGTH@ 95
---------------INS StringLiteral@@"&jms.maxReconnectAttempts=1&jms.timeout=3000" @TO@ InfixExpression@@"vm://localhost?broker.persistent=false&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0" + "&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=10000" + "&jms.maxReconnectAttempts=1&jms.timeout=3000" @AT@ 2303 @LENGTH@ 46


UPD TypeDeclaration@@[public]RemoteFileProducer, GenericFileProducer<T> @TO@ [public]RemoteFileProducer, GenericFileProducer<T>[IsSingleton] @AT@ 1329 @LENGTH@ 3323
---INS SimpleType@@IsSingleton @TO@ TypeDeclaration@@[public]RemoteFileProducer, GenericFileProducer<T> @AT@ 1443 @LENGTH@ 11


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[@XmlRootElement(name="proceed"), @XmlAccessorType(XmlAccessType.FIELD), public]ProceedType, OutputType<ProcessorType> @AT@ 1603 @LENGTH@ 63
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1603 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1610 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1617 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:getShortName() @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1638 @LENGTH@ 22
------INS MethodInvocation@@MethodName:getShortName:[] @TO@ ReturnStatement@@MethodInvocation:getShortName() @AT@ 1645 @LENGTH@ 14


UPD ReturnStatement@@MethodInvocation:GenericFileDefaultSorter.sortByFileLanguage(reminder,reverse,ignoreCase,createSortByComparator(it)) @TO@ MethodInvocation:GenericFileDefaultSorter.sortByFileLanguage(getCamelContext(),reminder,reverse,ignoreCase,createSortByComparator(it)) @AT@ 4313 @LENGTH@ 110
---UPD MethodInvocation@@GenericFileDefaultSorter.sortByFileLanguage(reminder,reverse,ignoreCase,createSortByComparator(it)) @TO@ GenericFileDefaultSorter.sortByFileLanguage(getCamelContext(),reminder,reverse,ignoreCase,createSortByComparator(it)) @AT@ 4320 @LENGTH@ 102
------UPD SimpleName@@MethodName:sortByFileLanguage:[reminder, reverse, ignoreCase, createSortByComparator(it)] @TO@ MethodName:sortByFileLanguage:[getCamelContext(), reminder, reverse, ignoreCase, createSortByComparator(it)] @AT@ 4345 @LENGTH@ 77
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:sortByFileLanguage:[reminder, reverse, ignoreCase, createSortByComparator(it)] @AT@ 4364 @LENGTH@ 17


INS MethodDeclaration@@T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]TypeConverter,  @AT@ 2230 @LENGTH@ 48
---INS SimpleType@@T @TO@ MethodDeclaration@@T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2228 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2230 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2249 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2249 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2249 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2255 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2258 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2264 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2264 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2271 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Bye World",FileComponent.HEADER_FILE_NAME,"claus.txt") @TO@ MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Bye World",NewFileComponent.HEADER_FILE_NAME,"claus.txt") @AT@ 1510 @LENGTH@ 98
---UPD MethodInvocation@@template.sendBodyAndHeader(getFtpUrl(),"Bye World",FileComponent.HEADER_FILE_NAME,"claus.txt") @TO@ template.sendBodyAndHeader(getFtpUrl(),"Bye World",NewFileComponent.HEADER_FILE_NAME,"claus.txt") @AT@ 1510 @LENGTH@ 97
------UPD SimpleName@@MethodName:sendBodyAndHeader:[getFtpUrl(), "Bye World", FileComponent.HEADER_FILE_NAME, "claus.txt"] @TO@ MethodName:sendBodyAndHeader:[getFtpUrl(), "Bye World", NewFileComponent.HEADER_FILE_NAME, "claus.txt"] @AT@ 1519 @LENGTH@ 88
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 1563 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 1563 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:LOG.info("Creating a slow fil ...") @TO@ MethodInvocation:LOG.info("Creating a slow file ...") @AT@ 5387 @LENGTH@ 36
---UPD MethodInvocation@@LOG.info("Creating a slow fil ...") @TO@ LOG.info("Creating a slow file ...") @AT@ 5387 @LENGTH@ 35
------UPD SimpleName@@MethodName:info:["Creating a slow fil ..."] @TO@ MethodName:info:["Creating a slow file ..."] @AT@ 5391 @LENGTH@ 31
---------UPD StringLiteral@@"Creating a slow fil ..." @TO@ "Creating a slow file ..." @AT@ 5396 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"logo1.jpeg") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"logo1.jpeg") @AT@ 3813 @LENGTH@ 73
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"logo1.jpeg") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"logo1.jpeg") @AT@ 3813 @LENGTH@ 72
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "logo1.jpeg"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "logo1.jpeg"] @AT@ 3830 @LENGTH@ 55
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 3840 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 3840 @LENGTH@ 13


UPD ThrowStatement@@ClassInstanceCreation:new MyFunctionalException("Sorry you can not do this") @TO@ ClassInstanceCreation:new MyFunctionalException("Sorry you cannot do this") @AT@ 2425 @LENGTH@ 61
---UPD ClassInstanceCreation@@MyFunctionalException["Sorry you can not do this"] @TO@ MyFunctionalException["Sorry you cannot do this"] @AT@ 2431 @LENGTH@ 54
------UPD StringLiteral@@"Sorry you can not do this" @TO@ "Sorry you cannot do this" @AT@ 2457 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:assertTrue("Should contain the description",out.indexOf("This is a description of the route") > 0) @TO@ MethodInvocation:assertTrue("Should contain the description",out.indexOf("<from uri=\"direct:start\"/>") > 0) @AT@ 2117 @LENGTH@ 100
---UPD MethodInvocation@@assertTrue("Should contain the description",out.indexOf("This is a description of the route") > 0) @TO@ assertTrue("Should contain the description",out.indexOf("<from uri=\"direct:start\"/>") > 0) @AT@ 2117 @LENGTH@ 99
------UPD SimpleName@@MethodName:assertTrue:["Should contain the description", out.indexOf("This is a description of the route") > 0] @TO@ MethodName:assertTrue:["Should contain the description", out.indexOf("<from uri=\"direct:start\"/>") > 0] @AT@ 2117 @LENGTH@ 99
---------UPD InfixExpression@@out.indexOf("This is a description of the route") > 0 @TO@ out.indexOf("<from uri=\"direct:start\"/>") > 0 @AT@ 2162 @LENGTH@ 53
------------UPD MethodInvocation@@out.indexOf("This is a description of the route") @TO@ out.indexOf("<from uri=\"direct:start\"/>") @AT@ 2162 @LENGTH@ 49
---------------UPD SimpleName@@MethodName:indexOf:["This is a description of the route"] @TO@ MethodName:indexOf:["<from uri=\"direct:start\"/>"] @AT@ 2166 @LENGTH@ 45
------------------UPD StringLiteral@@"This is a description of the route" @TO@ "<from uri=\"direct:start\"/>" @AT@ 2174 @LENGTH@ 36


INS FieldDeclaration@@public, static, final, String, [CONTENT_ENCODING="Content-Encoding"] @TO@ TypeDeclaration@@[public, final]HttpConstants,  @AT@ 907 @LENGTH@ 65
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [CONTENT_ENCODING="Content-Encoding"] @AT@ 907 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [CONTENT_ENCODING="Content-Encoding"] @AT@ 914 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [CONTENT_ENCODING="Content-Encoding"] @AT@ 921 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [CONTENT_ENCODING="Content-Encoding"] @AT@ 927 @LENGTH@ 6
---INS VariableDeclarationFragment@@CONTENT_ENCODING="Content-Encoding" @TO@ FieldDeclaration@@public, static, final, String, [CONTENT_ENCODING="Content-Encoding"] @AT@ 934 @LENGTH@ 37
------INS SimpleName@@CONTENT_ENCODING @TO@ VariableDeclarationFragment@@CONTENT_ENCODING="Content-Encoding" @AT@ 934 @LENGTH@ 16
------INS StringLiteral@@"Content-Encoding" @TO@ VariableDeclarationFragment@@CONTENT_ENCODING="Content-Encoding" @AT@ 953 @LENGTH@ 18


DEL ExpressionStatement@@MethodInvocation:retryableExceptionClasses.add(Exception.class) @AT@ 3563 @LENGTH@ 47
---DEL MethodInvocation@@retryableExceptionClasses.add(Exception.class) @AT@ 3563 @LENGTH@ 46
------DEL SimpleName@@Name:retryableExceptionClasses @AT@ 3563 @LENGTH@ 25
------DEL SimpleName@@MethodName:add:[Exception.class] @AT@ 3589 @LENGTH@ 20
---------DEL TypeLiteral@@Exception.class @AT@ 3593 @LENGTH@ 15


UPD TryStatement@@try {  if (isRunAllowed()) {    poll();  }} catch (Exception e) {  LOG.warn("An exception occured while polling: " + this.getEndpoint() + ": "+ e.getMessage(),e);  if (firstExceptionThrown == null) {    firstExceptionThrown=e;  }} @TO@ try {  if (isRunAllowed()) {    if (LOG.isTraceEnabled()) {      LOG.trace("Starting to poll: " + this.getEndpoint());    }    poll();  }} catch (Exception e) {  LOG.warn("An exception occurred while polling: " + this.getEndpoint() + ": "+ e.getMessage(),e);  if (firstExceptionThrown == null) {    firstExceptionThrown=e;  }} @AT@ 2457 @LENGTH@ 334
---UPD IfStatement@@if (isRunAllowed()) {  poll();} @TO@ if (isRunAllowed()) {  if (LOG.isTraceEnabled()) {    LOG.trace("Starting to poll: " + this.getEndpoint());  }  poll();} @AT@ 2475 @LENGTH@ 59
------UPD Block@@ThenBody:{  poll();} @TO@ ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("Starting to poll: " + this.getEndpoint());  }  poll();} @AT@ 2495 @LENGTH@ 39
---------MOV IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Starting to poll: " + this.getEndpoint());} @TO@ Block@@ThenBody:{  poll();} @AT@ 2345 @LENGTH@ 103
---UPD CatchClause@@catch (Exception e) {  LOG.warn("An exception occured while polling: " + this.getEndpoint() + ": "+ e.getMessage(),e);  if (firstExceptionThrown == null) {    firstExceptionThrown=e;  }} @TO@ catch (Exception e) {  LOG.warn("An exception occurred while polling: " + this.getEndpoint() + ": "+ e.getMessage(),e);  if (firstExceptionThrown == null) {    firstExceptionThrown=e;  }} @AT@ 2545 @LENGTH@ 246
------UPD ExpressionStatement@@MethodInvocation:LOG.warn("An exception occured while polling: " + this.getEndpoint() + ": "+ e.getMessage(),e) @TO@ MethodInvocation:LOG.warn("An exception occurred while polling: " + this.getEndpoint() + ": "+ e.getMessage(),e) @AT@ 2579 @LENGTH@ 97
---------UPD MethodInvocation@@LOG.warn("An exception occured while polling: " + this.getEndpoint() + ": "+ e.getMessage(),e) @TO@ LOG.warn("An exception occurred while polling: " + this.getEndpoint() + ": "+ e.getMessage(),e) @AT@ 2579 @LENGTH@ 96
------------UPD SimpleName@@MethodName:warn:["An exception occured while polling: " + this.getEndpoint() + ": "+ e.getMessage(), e] @TO@ MethodName:warn:["An exception occurred while polling: " + this.getEndpoint() + ": "+ e.getMessage(), e] @AT@ 2583 @LENGTH@ 92
---------------UPD InfixExpression@@"An exception occured while polling: " + this.getEndpoint() + ": "+ e.getMessage() @TO@ "An exception occurred while polling: " + this.getEndpoint() + ": "+ e.getMessage() @AT@ 2588 @LENGTH@ 83
------------------UPD StringLiteral@@"An exception occured while polling: " @TO@ "An exception occurred while polling: " @AT@ 2588 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:from("jms:in").to("http://localhost/myservice").to("jms:out") @TO@ MethodInvocation:from("jms:in").to("http://localhost:9000/myservice").to("jms:out") @AT@ 1942 @LENGTH@ 62
---UPD MethodInvocation@@from("jms:in").to("http://localhost/myservice").to("jms:out") @TO@ from("jms:in").to("http://localhost:9000/myservice").to("jms:out") @AT@ 1942 @LENGTH@ 61
------UPD MethodInvocation@@MethodName:to:["http://localhost/myservice"] @TO@ MethodName:to:["http://localhost:9000/myservice"] @AT@ 1942 @LENGTH@ 47
---------UPD StringLiteral@@"http://localhost/myservice" @TO@ "http://localhost:9000/myservice" @AT@ 1960 @LENGTH@ 28


UPD TryStatement@@try {  return loader.loadClass(name);} catch (ClassNotFoundException e) {  if (LOG.isTraceEnabled()) {    LOG.trace("Cannot load class: " + name + " using classloader: "+ loader,e);  }} @TO@ try {  if (LOG.isTraceEnabled()) {    LOG.trace("Loading class: " + name + " using classloader: "+ loader);  }  return loader.loadClass(name);} catch (ClassNotFoundException e) {  if (LOG.isTraceEnabled()) {    LOG.trace("Cannot load class: " + name + " using classloader: "+ loader,e);  }} @AT@ 18165 @LENGTH@ 252
---INS IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Loading class: " + name + " using classloader: "+ loader);} @TO@ TryStatement@@try {  return loader.loadClass(name);} catch (ClassNotFoundException e) {  if (LOG.isTraceEnabled()) {    LOG.trace("Cannot load class: " + name + " using classloader: "+ loader,e);  }} @AT@ 18183 @LENGTH@ 128
------INS MethodInvocation@@LOG.isTraceEnabled() @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Loading class: " + name + " using classloader: "+ loader);} @AT@ 18187 @LENGTH@ 20
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 18187 @LENGTH@ 3
---------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 18191 @LENGTH@ 16
------INS Block@@ThenBody:{  LOG.trace("Loading class: " + name + " using classloader: "+ loader);} @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Loading class: " + name + " using classloader: "+ loader);} @AT@ 18209 @LENGTH@ 102
---------INS ExpressionStatement@@MethodInvocation:LOG.trace("Loading class: " + name + " using classloader: "+ loader) @TO@ Block@@ThenBody:{  LOG.trace("Loading class: " + name + " using classloader: "+ loader);} @AT@ 18227 @LENGTH@ 70
------------INS MethodInvocation@@LOG.trace("Loading class: " + name + " using classloader: "+ loader) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Loading class: " + name + " using classloader: "+ loader) @AT@ 18227 @LENGTH@ 69
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Loading class: " + name + " using classloader: "+ loader) @AT@ 18227 @LENGTH@ 3
---------------INS SimpleName@@MethodName:trace:["Loading class: " + name + " using classloader: "+ loader] @TO@ MethodInvocation@@LOG.trace("Loading class: " + name + " using classloader: "+ loader) @AT@ 18231 @LENGTH@ 65
------------------INS InfixExpression@@"Loading class: " + name + " using classloader: "+ loader @TO@ SimpleName@@MethodName:trace:["Loading class: " + name + " using classloader: "+ loader] @AT@ 18237 @LENGTH@ 58
---------------------INS StringLiteral@@"Loading class: " @TO@ InfixExpression@@"Loading class: " + name + " using classloader: "+ loader @AT@ 18237 @LENGTH@ 17
---------------------INS Operator@@+ @TO@ InfixExpression@@"Loading class: " + name + " using classloader: "+ loader @AT@ 18254 @LENGTH@ 1
---------------------INS SimpleName@@name @TO@ InfixExpression@@"Loading class: " + name + " using classloader: "+ loader @AT@ 18257 @LENGTH@ 4
---------------------INS StringLiteral@@" using classloader: " @TO@ InfixExpression@@"Loading class: " + name + " using classloader: "+ loader @AT@ 18264 @LENGTH@ 22
---------------------INS SimpleName@@loader @TO@ InfixExpression@@"Loading class: " + name + " using classloader: "+ loader @AT@ 18289 @LENGTH@ 6


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]InstanceMethodFallbackTypeConverter, [TypeConverter] @AT@ 2710 @LENGTH@ 132
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2710 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2721 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2723 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2742 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2742 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2742 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2748 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2751 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2757 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2757 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2766 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2776 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2776 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2783 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,null,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2800 @LENGTH@ 36
------INS MethodInvocation@@convertTo(type,null,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,null,value) @AT@ 2807 @LENGTH@ 28
---------INS SimpleName@@MethodName:convertTo:[type, null, value] @TO@ MethodInvocation@@convertTo(type,null,value) @AT@ 2807 @LENGTH@ 28
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2817 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2823 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2829 @LENGTH@ 5


UPD IfStatement@@if (camelContextService != null) {  camelContextService.stop();} else {  context.stop();} @TO@ if (camelContextService != null) {  camelContextService.stop();} else {  if (context != null) {    context.stop();  }} @AT@ 4225 @LENGTH@ 129
---UPD Block@@ElseBody:{  context.stop();} @TO@ ThenBody:{  context.stop();} @AT@ 4315 @LENGTH@ 39
---INS Block@@ElseBody:{  if (context != null) {    context.stop();  }} @TO@ IfStatement@@if (camelContextService != null) {  camelContextService.stop();} else {  context.stop();} @AT@ 4361 @LENGTH@ 92
------INS IfStatement@@if (context != null) {  context.stop();} @TO@ Block@@ElseBody:{  if (context != null) {    context.stop();  }} @AT@ 4375 @LENGTH@ 68
---------MOV Block@@ElseBody:{  context.stop();} @TO@ IfStatement@@if (context != null) {  context.stop();} @AT@ 4315 @LENGTH@ 39
---------INS InfixExpression@@context != null @TO@ IfStatement@@if (context != null) {  context.stop();} @AT@ 4379 @LENGTH@ 15
------------INS SimpleName@@context @TO@ InfixExpression@@context != null @AT@ 4379 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@context != null @AT@ 4386 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@context != null @AT@ 4390 @LENGTH@ 4


UPD MethodDeclaration@@public, voidMethodName:LoadingByteArrayOutputStream, int i,  @TO@ public, voidMethodName:LoadingByteArrayOutputStream, int size,  @AT@ 1665 @LENGTH@ 68
---UPD SingleVariableDeclaration@@int i @TO@ int size @AT@ 1701 @LENGTH@ 5
------UPD SimpleName@@i @TO@ size @AT@ 1705 @LENGTH@ 1
---UPD SuperConstructorInvocation@@super(i);
 @TO@ super(size);
 @AT@ 1718 @LENGTH@ 9
------UPD SimpleName@@i @TO@ size @AT@ 1724 @LENGTH@ 1


INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey);} @TO@ MethodDeclaration@@public, boolean, MethodName:add, Exchange exchange,  @AT@ 2268 @LENGTH@ 152
---INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey);} @AT@ 2272 @LENGTH@ 20
------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 2272 @LENGTH@ 3
------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 2276 @LENGTH@ 16
---INS Block@@ThenBody:{  LOG.debug("evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey);} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey);} @AT@ 2294 @LENGTH@ 126
------INS ExpressionStatement@@MethodInvocation:LOG.debug("evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey) @TO@ Block@@ThenBody:{  LOG.debug("evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey);} @AT@ 2308 @LENGTH@ 102
---------INS MethodInvocation@@LOG.debug("evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey) @AT@ 2308 @LENGTH@ 101
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey) @AT@ 2308 @LENGTH@ 3
------------INS SimpleName@@MethodName:debug:["evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey] @TO@ MethodInvocation@@LOG.debug("evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey) @AT@ 2312 @LENGTH@ 97
---------------INS InfixExpression@@"evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey @TO@ SimpleName@@MethodName:debug:["evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey] @AT@ 2318 @LENGTH@ 90
------------------INS StringLiteral@@"evaluated expression: " @TO@ InfixExpression@@"evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey @AT@ 2318 @LENGTH@ 24
------------------INS Operator@@+ @TO@ InfixExpression@@"evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey @AT@ 2342 @LENGTH@ 1
------------------INS SimpleName@@correlationExpression @TO@ InfixExpression@@"evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey @AT@ 2345 @LENGTH@ 21
------------------INS StringLiteral@@" as CorrelationKey: " @TO@ InfixExpression@@"evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey @AT@ 2369 @LENGTH@ 22
------------------INS SimpleName@@correlationKey @TO@ InfixExpression@@"evaluated expression: " + correlationExpression + " as CorrelationKey: "+ correlationKey @AT@ 2394 @LENGTH@ 14


UPD FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(RouteDotGenerator.class)] @TO@ protected, final, transient, Log, [log=LogFactory.getLog(getClass())] @AT@ 1655 @LENGTH@ 84
---UPD Modifier@@private @TO@ protected @AT@ 1655 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1663 @LENGTH@ 6
---UPD VariableDeclarationFragment@@LOG=LogFactory.getLog(RouteDotGenerator.class) @TO@ log=LogFactory.getLog(getClass()) @AT@ 1690 @LENGTH@ 48
------UPD SimpleName@@LOG @TO@ log @AT@ 1690 @LENGTH@ 3
------UPD MethodInvocation@@LogFactory.getLog(RouteDotGenerator.class) @TO@ LogFactory.getLog(getClass()) @AT@ 1696 @LENGTH@ 42
---------UPD SimpleName@@MethodName:getLog:[RouteDotGenerator.class] @TO@ MethodName:getLog:[getClass()] @AT@ 1707 @LENGTH@ 31
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ SimpleName@@MethodName:getLog:[RouteDotGenerator.class] @AT@ 1709 @LENGTH@ 10
------------DEL TypeLiteral@@RouteDotGenerator.class @AT@ 1714 @LENGTH@ 23


UPD IfStatement@@if (!exchangeEnqueued) {  drainQueueTo(collection,batchSize);} else {  exchangeEnqueued=false;  while (isInBatchCompleted(queue.size())) {    drainQueueTo(collection,batchSize);  }  queueLock.unlock();  try {    if (!isOutBatchCompleted()) {      continue;    }  }  finally {    queueLock.lock();  }} @TO@ if (!exchangeEnqueued) {  drainQueueTo(collection,batchSize);} else {  exchangeEnqueued=false;  while (isInBatchCompleted(queue.size())) {    drainQueueTo(collection,batchSize);  }  if (!isOutBatchCompleted()) {    continue;  }} @AT@ 7923 @LENGTH@ 761
---UPD Block@@ElseBody:{  exchangeEnqueued=false;  while (isInBatchCompleted(queue.size())) {    drainQueueTo(collection,batchSize);  }  queueLock.unlock();  try {    if (!isOutBatchCompleted()) {      continue;    }  }  finally {    queueLock.lock();  }} @TO@ ElseBody:{  exchangeEnqueued=false;  while (isInBatchCompleted(queue.size())) {    drainQueueTo(collection,batchSize);  }  if (!isOutBatchCompleted()) {    continue;  }} @AT@ 8044 @LENGTH@ 640
------DEL ExpressionStatement@@MethodInvocation:queueLock.unlock() @AT@ 8343 @LENGTH@ 19
---------DEL MethodInvocation@@queueLock.unlock() @AT@ 8343 @LENGTH@ 18
------------DEL SimpleName@@Name:queueLock @AT@ 8343 @LENGTH@ 9
------------DEL SimpleName@@MethodName:unlock:[] @AT@ 8353 @LENGTH@ 8
------DEL TryStatement@@try {  if (!isOutBatchCompleted()) {    continue;  }}  finally {  queueLock.lock();} @AT@ 8391 @LENGTH@ 267
---------DEL Block@@FinallyBody:{  queueLock.lock();} @AT@ 8577 @LENGTH@ 81
------------DEL ExpressionStatement@@MethodInvocation:queueLock.lock() @AT@ 8611 @LENGTH@ 17
---------------DEL MethodInvocation@@queueLock.lock() @AT@ 8611 @LENGTH@ 16
------------------DEL SimpleName@@Name:queueLock @AT@ 8611 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:lock:[] @AT@ 8621 @LENGTH@ 6
------MOV IfStatement@@if (!isOutBatchCompleted()) {  continue;} @TO@ Block@@ElseBody:{  exchangeEnqueued=false;  while (isInBatchCompleted(queue.size())) {    drainQueueTo(collection,batchSize);  }  queueLock.unlock();  try {    if (!isOutBatchCompleted()) {      continue;    }  }  finally {    queueLock.lock();  }} @AT@ 8429 @LENGTH@ 109


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2033 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2033 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 2050 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2060 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2060 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:configuration.getLogger().debug("Error encountered evaluation " + result,e) @TO@ MethodInvocation:configuration.getLogger().debug("Error encountered evaluating " + result,e) @AT@ 6541 @LENGTH@ 77
---UPD MethodInvocation@@configuration.getLogger().debug("Error encountered evaluation " + result,e) @TO@ configuration.getLogger().debug("Error encountered evaluating " + result,e) @AT@ 6541 @LENGTH@ 76
------UPD SimpleName@@MethodName:debug:["Error encountered evaluation " + result, e] @TO@ MethodName:debug:["Error encountered evaluating " + result, e] @AT@ 6567 @LENGTH@ 50
---------UPD InfixExpression@@"Error encountered evaluation " + result @TO@ "Error encountered evaluating " + result @AT@ 6573 @LENGTH@ 40
------------UPD StringLiteral@@"Error encountered evaluation " @TO@ "Error encountered evaluating " @AT@ 6573 @LENGTH@ 31


UPD TypeDeclaration@@[private]DataHolder,  @TO@ [private, final]DataHolder,  @AT@ 1886 @LENGTH@ 137
---INS Modifier@@final @TO@ TypeDeclaration@@[private]DataHolder,  @AT@ 1894 @LENGTH@ 5


INS MethodDeclaration@@protected, void, MethodName:procesWireTap, final Exchange exchange,  @TO@ TypeDeclaration@@[public]WireTapProcessor, SendProcessor @AT@ 2915 @LENGTH@ 666
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:procesWireTap, final Exchange exchange,  @AT@ 2915 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:procesWireTap, final Exchange exchange,  @AT@ 2925 @LENGTH@ 4
---INS SimpleName@@MethodName:procesWireTap @TO@ MethodDeclaration@@protected, void, MethodName:procesWireTap, final Exchange exchange,  @AT@ 2930 @LENGTH@ 13
---INS SingleVariableDeclaration@@final Exchange exchange @TO@ MethodDeclaration@@protected, void, MethodName:procesWireTap, final Exchange exchange,  @AT@ 2944 @LENGTH@ 23
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Exchange exchange @AT@ 2944 @LENGTH@ 5
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@final Exchange exchange @AT@ 2950 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@final Exchange exchange @AT@ 2959 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:getExecutorService().submit(new Callable<Exchange>(){
  public Exchange call() throws Exception {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Processing wiretap: " + exchange);
    }
    producer.process(exchange);
    return exchange;
  }
}
) @TO@ MethodDeclaration@@protected, void, MethodName:procesWireTap, final Exchange exchange,  @AT@ 3236 @LENGTH@ 339
------INS MethodInvocation@@getExecutorService().submit(new Callable<Exchange>(){
  public Exchange call() throws Exception {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Processing wiretap: " + exchange);
    }
    producer.process(exchange);
    return exchange;
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:getExecutorService().submit(new Callable<Exchange>(){
  public Exchange call() throws Exception {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Processing wiretap: " + exchange);
    }
    producer.process(exchange);
    return exchange;
  }
}
) @AT@ 3236 @LENGTH@ 338
---------INS MethodInvocation@@MethodName:getExecutorService:[] @TO@ MethodInvocation@@getExecutorService().submit(new Callable<Exchange>(){
  public Exchange call() throws Exception {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Processing wiretap: " + exchange);
    }
    producer.process(exchange);
    return exchange;
  }
}
) @AT@ 3236 @LENGTH@ 20
---------INS SimpleName@@MethodName:submit:[new Callable<Exchange>(){
  public Exchange call() throws Exception {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Processing wiretap: " + exchange);
    }
    producer.process(exchange);
    return exchange;
  }
}
] @TO@ MethodInvocation@@getExecutorService().submit(new Callable<Exchange>(){
  public Exchange call() throws Exception {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Processing wiretap: " + exchange);
    }
    producer.process(exchange);
    return exchange;
  }
}
) @AT@ 3257 @LENGTH@ 317
------------INS ClassInstanceCreation@@Callable<Exchange>[] @TO@ SimpleName@@MethodName:submit:[new Callable<Exchange>(){
  public Exchange call() throws Exception {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Processing wiretap: " + exchange);
    }
    producer.process(exchange);
    return exchange;
  }
}
] @AT@ 3264 @LENGTH@ 309
---------------INS New@@new @TO@ ClassInstanceCreation@@Callable<Exchange>[] @AT@ 3264 @LENGTH@ 3
---------------INS ParameterizedType@@Callable<Exchange> @TO@ ClassInstanceCreation@@Callable<Exchange>[] @AT@ 3268 @LENGTH@ 18
------------------INS SimpleType@@Callable @TO@ ParameterizedType@@Callable<Exchange> @AT@ 3268 @LENGTH@ 8
------------------INS SimpleType@@Exchange @TO@ ParameterizedType@@Callable<Exchange> @AT@ 3277 @LENGTH@ 8
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Callable<Exchange>[] @AT@ 3289 @LENGTH@ 284
------------------INS MethodDeclaration@@public, Exchange, MethodName:call, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3303 @LENGTH@ 260
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Exchange, MethodName:call, Exception,  @AT@ 3303 @LENGTH@ 6
---------------------INS SimpleType@@Exchange @TO@ MethodDeclaration@@public, Exchange, MethodName:call, Exception,  @AT@ 3310 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:call @TO@ MethodDeclaration@@public, Exchange, MethodName:call, Exception,  @AT@ 3319 @LENGTH@ 4
---------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, Exchange, MethodName:call, Exception,  @AT@ 3333 @LENGTH@ 9
---------------------INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Processing wiretap: " + exchange);} @TO@ MethodDeclaration@@public, Exchange, MethodName:call, Exception,  @AT@ 3361 @LENGTH@ 111
------------------------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Processing wiretap: " + exchange);} @AT@ 3365 @LENGTH@ 20
---------------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 3365 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 3369 @LENGTH@ 16
------------------------INS Block@@ThenBody:{  LOG.debug("Processing wiretap: " + exchange);} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Processing wiretap: " + exchange);} @AT@ 3387 @LENGTH@ 85
---------------------------INS ExpressionStatement@@MethodInvocation:LOG.debug("Processing wiretap: " + exchange) @TO@ Block@@ThenBody:{  LOG.debug("Processing wiretap: " + exchange);} @AT@ 3409 @LENGTH@ 45
------------------------------INS MethodInvocation@@LOG.debug("Processing wiretap: " + exchange) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Processing wiretap: " + exchange) @AT@ 3409 @LENGTH@ 44
---------------------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Processing wiretap: " + exchange) @AT@ 3409 @LENGTH@ 3
---------------------------------INS SimpleName@@MethodName:debug:["Processing wiretap: " + exchange] @TO@ MethodInvocation@@LOG.debug("Processing wiretap: " + exchange) @AT@ 3413 @LENGTH@ 40
------------------------------------INS InfixExpression@@"Processing wiretap: " + exchange @TO@ SimpleName@@MethodName:debug:["Processing wiretap: " + exchange] @AT@ 3419 @LENGTH@ 33
---------------------------------------INS StringLiteral@@"Processing wiretap: " @TO@ InfixExpression@@"Processing wiretap: " + exchange @AT@ 3419 @LENGTH@ 22
---------------------------------------INS Operator@@+ @TO@ InfixExpression@@"Processing wiretap: " + exchange @AT@ 3441 @LENGTH@ 1
---------------------------------------INS SimpleName@@exchange @TO@ InfixExpression@@"Processing wiretap: " + exchange @AT@ 3444 @LENGTH@ 8
---------------------INS ExpressionStatement@@MethodInvocation:producer.process(exchange) @TO@ MethodDeclaration@@public, Exchange, MethodName:call, Exception,  @AT@ 3489 @LENGTH@ 27
------------------------INS MethodInvocation@@producer.process(exchange) @TO@ ExpressionStatement@@MethodInvocation:producer.process(exchange) @AT@ 3489 @LENGTH@ 26
---------------------------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.process(exchange) @AT@ 3489 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:process:[exchange] @TO@ MethodInvocation@@producer.process(exchange) @AT@ 3498 @LENGTH@ 17
------------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:process:[exchange] @AT@ 3506 @LENGTH@ 8
---------------------INS ReturnStatement@@SimpleName:exchange @TO@ MethodDeclaration@@public, Exchange, MethodName:call, Exception,  @AT@ 3533 @LENGTH@ 16
------------------------INS SimpleName@@exchange @TO@ ReturnStatement@@SimpleName:exchange @AT@ 3540 @LENGTH@ 8


UPD IfStatement@@if (pc.getRegistry().containsBeanDefinition(BeanIds.SESSION_REGISTRY)) {  filterBean.getPropertyValues().addPropertyValue("sessionRegistry",new RuntimeBeanReference(BeanIds.SESSION_REGISTRY));} @TO@ if (pc.getRegistry().isBeanNameInUse(BeanIds.SESSION_REGISTRY)) {  filterBean.getPropertyValues().addPropertyValue("sessionRegistry",new RuntimeBeanReference(BeanIds.SESSION_REGISTRY));} @AT@ 5626 @LENGTH@ 234
---UPD MethodInvocation@@pc.getRegistry().containsBeanDefinition(BeanIds.SESSION_REGISTRY) @TO@ pc.getRegistry().isBeanNameInUse(BeanIds.SESSION_REGISTRY) @AT@ 5630 @LENGTH@ 65
------UPD SimpleName@@MethodName:containsBeanDefinition:[BeanIds.SESSION_REGISTRY] @TO@ MethodName:isBeanNameInUse:[BeanIds.SESSION_REGISTRY] @AT@ 5647 @LENGTH@ 48


INS MethodDeclaration@@public, static, Expression, MethodName:fileAbsoluteExpression,  @TO@ TypeDeclaration@@[public, final]FileExpressionBuilder,  @AT@ 4490 @LENGTH@ 382
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Expression, MethodName:fileAbsoluteExpression,  @AT@ 4490 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Expression, MethodName:fileAbsoluteExpression,  @AT@ 4497 @LENGTH@ 6
---INS SimpleType@@Expression @TO@ MethodDeclaration@@public, static, Expression, MethodName:fileAbsoluteExpression,  @AT@ 4504 @LENGTH@ 10
---INS SimpleName@@MethodName:fileAbsoluteExpression @TO@ MethodDeclaration@@public, static, Expression, MethodName:fileAbsoluteExpression,  @AT@ 4515 @LENGTH@ 22
---INS ReturnStatement@@ClassInstanceCreation:new ExpressionAdapter(){
  public Object evaluate(  Exchange exchange){
    return exchange.getIn().getHeader("CamelFileAbsolute",Boolean.class);
  }
  @Override public String toString(){
    return "file:absolute";
  }
}
 @TO@ MethodDeclaration@@public, static, Expression, MethodName:fileAbsoluteExpression,  @AT@ 4550 @LENGTH@ 316
------INS ClassInstanceCreation@@ExpressionAdapter[] @TO@ ReturnStatement@@ClassInstanceCreation:new ExpressionAdapter(){
  public Object evaluate(  Exchange exchange){
    return exchange.getIn().getHeader("CamelFileAbsolute",Boolean.class);
  }
  @Override public String toString(){
    return "file:absolute";
  }
}
 @AT@ 4557 @LENGTH@ 308
---------INS New@@new @TO@ ClassInstanceCreation@@ExpressionAdapter[] @AT@ 4557 @LENGTH@ 3
---------INS SimpleType@@ExpressionAdapter @TO@ ClassInstanceCreation@@ExpressionAdapter[] @AT@ 4561 @LENGTH@ 17
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ExpressionAdapter[] @AT@ 4581 @LENGTH@ 284
------------INS MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4595 @LENGTH@ 144
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 4595 @LENGTH@ 6
---------------INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 4602 @LENGTH@ 6
---------------INS SimpleName@@MethodName:evaluate @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 4609 @LENGTH@ 8
---------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 4618 @LENGTH@ 17
------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 4618 @LENGTH@ 8
------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 4627 @LENGTH@ 8
---------------INS ReturnStatement@@MethodInvocation:exchange.getIn().getHeader("CamelFileAbsolute",Boolean.class) @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 4655 @LENGTH@ 70
------------------INS MethodInvocation@@exchange.getIn().getHeader("CamelFileAbsolute",Boolean.class) @TO@ ReturnStatement@@MethodInvocation:exchange.getIn().getHeader("CamelFileAbsolute",Boolean.class) @AT@ 4662 @LENGTH@ 62
---------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeader("CamelFileAbsolute",Boolean.class) @AT@ 4662 @LENGTH@ 16
---------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeader("CamelFileAbsolute",Boolean.class) @AT@ 4662 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getHeader:["CamelFileAbsolute", Boolean.class] @TO@ MethodInvocation@@exchange.getIn().getHeader("CamelFileAbsolute",Boolean.class) @AT@ 4679 @LENGTH@ 45
------------------------INS StringLiteral@@"CamelFileAbsolute" @TO@ SimpleName@@MethodName:getHeader:["CamelFileAbsolute", Boolean.class] @AT@ 4689 @LENGTH@ 19
------------------------INS TypeLiteral@@Boolean.class @TO@ SimpleName@@MethodName:getHeader:["CamelFileAbsolute", Boolean.class] @AT@ 4710 @LENGTH@ 13
------------INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4775 @LENGTH@ 80
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4775 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4782 @LENGTH@ 6
---------------INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4789 @LENGTH@ 8
---------------INS ReturnStatement@@StringLiteral:"file:absolute" @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4818 @LENGTH@ 23
------------------INS StringLiteral@@"file:absolute" @TO@ ReturnStatement@@StringLiteral:"file:absolute" @AT@ 4825 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertEquals("There should have a fallback converter",registry.getFallbackTypeConverters().size(),1) @TO@ MethodInvocation:assertTrue("There should have at lest one fallback converter",registry.getFallbackTypeConverters().size() >= 1) @AT@ 1253 @LENGTH@ 103
---UPD MethodInvocation@@assertEquals("There should have a fallback converter",registry.getFallbackTypeConverters().size(),1) @TO@ assertTrue("There should have at lest one fallback converter",registry.getFallbackTypeConverters().size() >= 1) @AT@ 1253 @LENGTH@ 102
------UPD SimpleName@@MethodName:assertEquals:["There should have a fallback converter", registry.getFallbackTypeConverters().size(), 1] @TO@ MethodName:assertTrue:["There should have at lest one fallback converter", registry.getFallbackTypeConverters().size() >= 1] @AT@ 1253 @LENGTH@ 102
---------UPD StringLiteral@@"There should have a fallback converter" @TO@ "There should have at lest one fallback converter" @AT@ 1266 @LENGTH@ 40
---------DEL MethodInvocation@@registry.getFallbackTypeConverters().size() @AT@ 1308 @LENGTH@ 43
---------INS InfixExpression@@registry.getFallbackTypeConverters().size() >= 1 @TO@ SimpleName@@MethodName:assertEquals:["There should have a fallback converter", registry.getFallbackTypeConverters().size(), 1] @AT@ 1331 @LENGTH@ 48
------------INS MethodInvocation@@registry.getFallbackTypeConverters().size() @TO@ InfixExpression@@registry.getFallbackTypeConverters().size() >= 1 @AT@ 1331 @LENGTH@ 43
---------------MOV MethodInvocation@@MethodName:getFallbackTypeConverters:[] @TO@ MethodInvocation@@registry.getFallbackTypeConverters().size() @AT@ 1308 @LENGTH@ 36
---------------MOV MethodInvocation@@MethodName:getFallbackTypeConverters:[] @TO@ MethodInvocation@@registry.getFallbackTypeConverters().size() @AT@ 1308 @LENGTH@ 36
---------------MOV SimpleName@@Name:registry @TO@ MethodInvocation@@registry.getFallbackTypeConverters().size() @AT@ 1308 @LENGTH@ 8
---------------MOV SimpleName@@Name:registry @TO@ MethodInvocation@@registry.getFallbackTypeConverters().size() @AT@ 1308 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@registry.getFallbackTypeConverters().size() @AT@ 1345 @LENGTH@ 6
------------INS Operator@@>= @TO@ InfixExpression@@registry.getFallbackTypeConverters().size() >= 1 @AT@ 1374 @LENGTH@ 2
------------INS NumberLiteral@@1 @TO@ InfixExpression@@registry.getFallbackTypeConverters().size() >= 1 @AT@ 1378 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 1353 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:setBind(merge(getValidate(),transition.getValidate())) @TO@ MethodInvocation:setValidate(merge(getValidate(),transition.getValidate())) @AT@ 2152 @LENGTH@ 56
---UPD MethodInvocation@@setBind(merge(getValidate(),transition.getValidate())) @TO@ setValidate(merge(getValidate(),transition.getValidate())) @AT@ 2152 @LENGTH@ 55
------UPD SimpleName@@MethodName:setBind:[merge(getValidate(),transition.getValidate())] @TO@ MethodName:setValidate:[merge(getValidate(),transition.getValidate())] @AT@ 2152 @LENGTH@ 55


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]EnumTypeConverter, [TypeConverter] @AT@ 2187 @LENGTH@ 153
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2187 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2198 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2200 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2219 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2219 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2219 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2225 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2228 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2234 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2234 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2243 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2253 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2253 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2260 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2304 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 2311 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 2311 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2321 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2327 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:AssertFile.assertLineCount(20,outputResource) @TO@ MethodDeclaration@@public, void, MethodName:runTest, Exception,  @AT@ 2117 @LENGTH@ 47
---INS MethodInvocation@@AssertFile.assertLineCount(20,outputResource) @TO@ ExpressionStatement@@MethodInvocation:AssertFile.assertLineCount(20,outputResource) @AT@ 2117 @LENGTH@ 46
------INS SimpleName@@Name:AssertFile @TO@ MethodInvocation@@AssertFile.assertLineCount(20,outputResource) @AT@ 2117 @LENGTH@ 10
------INS SimpleName@@MethodName:assertLineCount:[20, outputResource] @TO@ MethodInvocation@@AssertFile.assertLineCount(20,outputResource) @AT@ 2128 @LENGTH@ 35
---------INS NumberLiteral@@20 @TO@ SimpleName@@MethodName:assertLineCount:[20, outputResource] @AT@ 2144 @LENGTH@ 2
---------INS SimpleName@@outputResource @TO@ SimpleName@@MethodName:assertLineCount:[20, outputResource] @AT@ 2148 @LENGTH@ 14


UPD Block@@ThenBody:{  pollDirectory(file.getFilename(),fileList);} @TO@ ThenBody:{  String directory=fileName + "/" + file.getFilename();  pollDirectory(directory,fileList);} @AT@ 1946 @LENGTH@ 156
---INS VariableDeclarationStatement@@String directory=fileName + "/" + file.getFilename(); @TO@ Block@@ThenBody:{  pollDirectory(file.getFilename(),fileList);} @AT@ 2040 @LENGTH@ 55
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String directory=fileName + "/" + file.getFilename(); @AT@ 2040 @LENGTH@ 6
------INS VariableDeclarationFragment@@directory=fileName + "/" + file.getFilename() @TO@ VariableDeclarationStatement@@String directory=fileName + "/" + file.getFilename(); @AT@ 2047 @LENGTH@ 47
---------INS SimpleName@@directory @TO@ VariableDeclarationFragment@@directory=fileName + "/" + file.getFilename() @AT@ 2047 @LENGTH@ 9
---------INS InfixExpression@@fileName + "/" + file.getFilename() @TO@ VariableDeclarationFragment@@directory=fileName + "/" + file.getFilename() @AT@ 2059 @LENGTH@ 35
------------INS SimpleName@@fileName @TO@ InfixExpression@@fileName + "/" + file.getFilename() @AT@ 2059 @LENGTH@ 8
------------INS Operator@@+ @TO@ InfixExpression@@fileName + "/" + file.getFilename() @AT@ 2067 @LENGTH@ 1
------------INS StringLiteral@@"/" @TO@ InfixExpression@@fileName + "/" + file.getFilename() @AT@ 2070 @LENGTH@ 3
------------INS MethodInvocation@@file.getFilename() @TO@ InfixExpression@@fileName + "/" + file.getFilename() @AT@ 2076 @LENGTH@ 18
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getFilename() @AT@ 2076 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getFilename:[] @TO@ MethodInvocation@@file.getFilename() @AT@ 2081 @LENGTH@ 13
---UPD ExpressionStatement@@MethodInvocation:pollDirectory(file.getFilename(),fileList) @TO@ MethodInvocation:pollDirectory(directory,fileList) @AT@ 2040 @LENGTH@ 44
------UPD MethodInvocation@@pollDirectory(file.getFilename(),fileList) @TO@ pollDirectory(directory,fileList) @AT@ 2040 @LENGTH@ 43
---------UPD SimpleName@@MethodName:pollDirectory:[file.getFilename(), fileList] @TO@ MethodName:pollDirectory:[directory, fileList] @AT@ 2040 @LENGTH@ 43
------------DEL MethodInvocation@@file.getFilename() @AT@ 2054 @LENGTH@ 18
---------------DEL SimpleName@@Name:file @AT@ 2054 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:getFilename:[] @AT@ 2059 @LENGTH@ 13
------------INS SimpleName@@directory @TO@ SimpleName@@MethodName:pollDirectory:[file.getFilename(), fileList] @AT@ 2130 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:from(getFtpUrl() + "&sortBy=file:name.ext;reverse:file:name").to("mock:reverse") @TO@ MethodInvocation:from(getFtpUrl() + "&sortBy=file:ext;reverse:file:name").to("mock:reverse") @AT@ 2174 @LENGTH@ 81
---UPD MethodInvocation@@from(getFtpUrl() + "&sortBy=file:name.ext;reverse:file:name").to("mock:reverse") @TO@ from(getFtpUrl() + "&sortBy=file:ext;reverse:file:name").to("mock:reverse") @AT@ 2174 @LENGTH@ 80
------UPD MethodInvocation@@MethodName:from:[getFtpUrl() + "&sortBy=file:name.ext;reverse:file:name"] @TO@ MethodName:from:[getFtpUrl() + "&sortBy=file:ext;reverse:file:name"] @AT@ 2174 @LENGTH@ 61
---------UPD InfixExpression@@getFtpUrl() + "&sortBy=file:name.ext;reverse:file:name" @TO@ getFtpUrl() + "&sortBy=file:ext;reverse:file:name" @AT@ 2179 @LENGTH@ 55
------------UPD StringLiteral@@"&sortBy=file:name.ext;reverse:file:name" @TO@ "&sortBy=file:ext;reverse:file:name" @AT@ 2193 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:assertTrue(fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1) @TO@ MethodInvocation:assertTrue(fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1) @AT@ 2921 @LENGTH@ 81
---UPD MethodInvocation@@assertTrue(fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1) @TO@ assertTrue(fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1) @AT@ 2921 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertTrue:[fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1] @TO@ MethodName:assertTrue:[fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1] @AT@ 2921 @LENGTH@ 80
---------UPD InfixExpression@@fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1 @TO@ fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1 @AT@ 2932 @LENGTH@ 68
------------UPD MethodInvocation@@fe.getGenericFile().getRelativeFileName().indexOf("inprogress") @TO@ fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") @AT@ 2932 @LENGTH@ 63
---------------UPD MethodInvocation@@MethodName:getRelativeFileName:[] @TO@ MethodName:getRelativeFilePath:[] @AT@ 2932 @LENGTH@ 41


INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodDeclaration@@public, void, MethodName:testFileCreatedAsDir, Exception,  @AT@ 2690 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 2690 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 2690 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 2697 @LENGTH@ 11
---------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 2703 @LENGTH@ 4


INS IfStatement@@if (unitOfWork != null) {  return unitOfWork.getId();} else {  return exchange.getExchangeId();} @TO@ MethodDeclaration@@protected, Object, MethodName:getBreadCrumbID, Exchange exchange,  @AT@ 6839 @LENGTH@ 136
---INS InfixExpression@@unitOfWork != null @TO@ IfStatement@@if (unitOfWork != null) {  return unitOfWork.getId();} else {  return exchange.getExchangeId();} @AT@ 6843 @LENGTH@ 18
------INS SimpleName@@unitOfWork @TO@ InfixExpression@@unitOfWork != null @AT@ 6843 @LENGTH@ 10
------INS Operator@@!= @TO@ InfixExpression@@unitOfWork != null @AT@ 6853 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@unitOfWork != null @AT@ 6857 @LENGTH@ 4
---INS Block@@ThenBody:{  return unitOfWork.getId();} @TO@ IfStatement@@if (unitOfWork != null) {  return unitOfWork.getId();} else {  return exchange.getExchangeId();} @AT@ 6863 @LENGTH@ 50
------MOV ReturnStatement@@MethodInvocation:unitOfWork.getId() @TO@ Block@@ThenBody:{  return unitOfWork.getId();} @AT@ 6839 @LENGTH@ 26
---INS Block@@ElseBody:{  return exchange.getExchangeId();} @TO@ IfStatement@@if (unitOfWork != null) {  return unitOfWork.getId();} else {  return exchange.getExchangeId();} @AT@ 6919 @LENGTH@ 56
------INS ReturnStatement@@MethodInvocation:exchange.getExchangeId() @TO@ Block@@ElseBody:{  return exchange.getExchangeId();} @AT@ 6933 @LENGTH@ 32
---------INS MethodInvocation@@exchange.getExchangeId() @TO@ ReturnStatement@@MethodInvocation:exchange.getExchangeId() @AT@ 6940 @LENGTH@ 24
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 6940 @LENGTH@ 8
------------INS SimpleName@@MethodName:getExchangeId:[] @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 6949 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:getContext().addInterceptStrategy(new Tracer()) @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 1835 @LENGTH@ 48
---INS MethodInvocation@@getContext().addInterceptStrategy(new Tracer()) @TO@ ExpressionStatement@@MethodInvocation:getContext().addInterceptStrategy(new Tracer()) @AT@ 1835 @LENGTH@ 47
------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@getContext().addInterceptStrategy(new Tracer()) @AT@ 1835 @LENGTH@ 12
------INS SimpleName@@MethodName:addInterceptStrategy:[new Tracer()] @TO@ MethodInvocation@@getContext().addInterceptStrategy(new Tracer()) @AT@ 1848 @LENGTH@ 34
---------INS ClassInstanceCreation@@Tracer[] @TO@ SimpleName@@MethodName:addInterceptStrategy:[new Tracer()] @AT@ 1869 @LENGTH@ 12
------------INS New@@new @TO@ ClassInstanceCreation@@Tracer[] @AT@ 1869 @LENGTH@ 3
------------INS SimpleType@@Tracer @TO@ ClassInstanceCreation@@Tracer[] @AT@ 1873 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:acl.insertAce(acl.getEntries().length,BasePermission.ADMINISTRATION,new PrincipalSid(SecurityContextHolder.getContext().getAuthentication()),true) @TO@ MethodInvocation:acl.insertAce(acl.getEntries().size(),BasePermission.ADMINISTRATION,new PrincipalSid(SecurityContextHolder.getContext().getAuthentication()),true) @AT@ 2205 @LENGTH@ 150
---UPD MethodInvocation@@acl.insertAce(acl.getEntries().length,BasePermission.ADMINISTRATION,new PrincipalSid(SecurityContextHolder.getContext().getAuthentication()),true) @TO@ acl.insertAce(acl.getEntries().size(),BasePermission.ADMINISTRATION,new PrincipalSid(SecurityContextHolder.getContext().getAuthentication()),true) @AT@ 2205 @LENGTH@ 149
------UPD SimpleName@@MethodName:insertAce:[acl.getEntries().length, BasePermission.ADMINISTRATION, new PrincipalSid(SecurityContextHolder.getContext().getAuthentication()), true] @TO@ MethodName:insertAce:[acl.getEntries().size(), BasePermission.ADMINISTRATION, new PrincipalSid(SecurityContextHolder.getContext().getAuthentication()), true] @AT@ 2209 @LENGTH@ 145
---------DEL FieldAccess@@acl.getEntries().length @AT@ 2219 @LENGTH@ 23
------------DEL MethodInvocation@@acl.getEntries() @AT@ 2219 @LENGTH@ 16
------------DEL SimpleName@@length @AT@ 2236 @LENGTH@ 6
---------INS MethodInvocation@@acl.getEntries().size() @TO@ SimpleName@@MethodName:insertAce:[acl.getEntries().length, BasePermission.ADMINISTRATION, new PrincipalSid(SecurityContextHolder.getContext().getAuthentication()), true] @AT@ 2219 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:getEntries:[] @TO@ MethodInvocation@@acl.getEntries().size() @AT@ 2219 @LENGTH@ 16
------------MOV SimpleName@@Name:acl @TO@ MethodInvocation@@acl.getEntries().size() @AT@ 2219 @LENGTH@ 3
------------MOV SimpleName@@MethodName:getEntries:[] @TO@ MethodInvocation@@acl.getEntries().size() @AT@ 2223 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:from("rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=100").marshal().rss().unmarshal().rss().to("mock:unmarshal") @TO@ MethodInvocation:from("rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=1000").marshal().rss().unmarshal().rss().to("mock:unmarshal") @AT@ 2570 @LENGTH@ 134
---UPD MethodInvocation@@from("rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=100").marshal().rss().unmarshal().rss().to("mock:unmarshal") @TO@ from("rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=1000").marshal().rss().unmarshal().rss().to("mock:unmarshal") @AT@ 2570 @LENGTH@ 133
------UPD MethodInvocation@@MethodName:from:["rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=100"] @TO@ MethodName:from:["rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=1000"] @AT@ 2570 @LENGTH@ 78
---------UPD StringLiteral@@"rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=100" @TO@ "rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=1000" @AT@ 2575 @LENGTH@ 72


UPD ExpressionStatement@@MethodInvocation:skip(numToSkip) @TO@ Assignment:numToSkip-=skipped @AT@ 7153 @LENGTH@ 16


UPD CatchClause@@catch (final Exception e) {  e.printStackTrace();  return null;} @TO@ catch (final Exception e) {  e.printStackTrace();  throw new RuntimeException(e);} @AT@ 10754 @LENGTH@ 165
---INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ CatchClause@@catch (final Exception e) {  e.printStackTrace();  return null;} @AT@ 10897 @LENGTH@ 30
------INS ClassInstanceCreation@@RuntimeException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @AT@ 10903 @LENGTH@ 23
---------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 10903 @LENGTH@ 3
---------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 10907 @LENGTH@ 16
---------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 10924 @LENGTH@ 1
---DEL ReturnStatement@@NullLiteral:null @AT@ 10897 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 10904 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testMinTime,  @TO@ TypeDeclaration@@[public]ZipUtilTest, TestCase @AT@ 2630 @LENGTH@ 288
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMinTime,  @AT@ 2630 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMinTime,  @AT@ 2637 @LENGTH@ 4
---INS SimpleName@@MethodName:testMinTime @TO@ MethodDeclaration@@public, void, MethodName:testMinTime,  @AT@ 2642 @LENGTH@ 11
---INS VariableDeclarationStatement@@byte[] b1=ZipUtil.toDosTime(0); @TO@ MethodDeclaration@@public, void, MethodName:testMinTime,  @AT@ 2665 @LENGTH@ 33
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] b1=ZipUtil.toDosTime(0); @AT@ 2665 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2665 @LENGTH@ 4
------INS VariableDeclarationFragment@@b1=ZipUtil.toDosTime(0) @TO@ VariableDeclarationStatement@@byte[] b1=ZipUtil.toDosTime(0); @AT@ 2672 @LENGTH@ 25
---------INS SimpleName@@b1 @TO@ VariableDeclarationFragment@@b1=ZipUtil.toDosTime(0) @AT@ 2672 @LENGTH@ 2
---------INS MethodInvocation@@ZipUtil.toDosTime(0) @TO@ VariableDeclarationFragment@@b1=ZipUtil.toDosTime(0) @AT@ 2677 @LENGTH@ 20
------------INS SimpleName@@Name:ZipUtil @TO@ MethodInvocation@@ZipUtil.toDosTime(0) @AT@ 2677 @LENGTH@ 7
------------INS SimpleName@@MethodName:toDosTime:[0] @TO@ MethodInvocation@@ZipUtil.toDosTime(0) @AT@ 2685 @LENGTH@ 12
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:toDosTime:[0] @AT@ 2695 @LENGTH@ 1
---INS VariableDeclarationStatement@@byte b10=b1[0]; @TO@ MethodDeclaration@@public, void, MethodName:testMinTime,  @AT@ 2707 @LENGTH@ 17
------INS PrimitiveType@@byte @TO@ VariableDeclarationStatement@@byte b10=b1[0]; @AT@ 2707 @LENGTH@ 4
------INS VariableDeclarationFragment@@b10=b1[0] @TO@ VariableDeclarationStatement@@byte b10=b1[0]; @AT@ 2712 @LENGTH@ 11
---------INS SimpleName@@b10 @TO@ VariableDeclarationFragment@@b10=b1[0] @AT@ 2712 @LENGTH@ 3
---------INS ArrayAccess@@b1[0] @TO@ VariableDeclarationFragment@@b10=b1[0] @AT@ 2718 @LENGTH@ 5
------------INS SimpleName@@b1 @TO@ ArrayAccess@@b1[0] @AT@ 2718 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ ArrayAccess@@b1[0] @AT@ 2721 @LENGTH@ 1
---INS ExpressionStatement@@PostfixExpression:b1[0]++ @TO@ MethodDeclaration@@public, void, MethodName:testMinTime,  @AT@ 2756 @LENGTH@ 8
------INS PostfixExpression@@b1[0]++ @TO@ ExpressionStatement@@PostfixExpression:b1[0]++ @AT@ 2756 @LENGTH@ 7
---------INS ArrayAccess@@b1[0] @TO@ PostfixExpression@@b1[0]++ @AT@ 2756 @LENGTH@ 5
------------INS SimpleName@@b1 @TO@ ArrayAccess@@b1[0] @AT@ 2756 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ ArrayAccess@@b1[0] @AT@ 2759 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@b1[0]++ @AT@ 2762 @LENGTH@ 2
---INS VariableDeclarationStatement@@byte[] b2=ZipUtil.toDosTime(0); @TO@ MethodDeclaration@@public, void, MethodName:testMinTime,  @AT@ 2786 @LENGTH@ 33
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] b2=ZipUtil.toDosTime(0); @AT@ 2786 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2786 @LENGTH@ 4
------INS VariableDeclarationFragment@@b2=ZipUtil.toDosTime(0) @TO@ VariableDeclarationStatement@@byte[] b2=ZipUtil.toDosTime(0); @AT@ 2793 @LENGTH@ 25
---------INS SimpleName@@b2 @TO@ VariableDeclarationFragment@@b2=ZipUtil.toDosTime(0) @AT@ 2793 @LENGTH@ 2
---------INS MethodInvocation@@ZipUtil.toDosTime(0) @TO@ VariableDeclarationFragment@@b2=ZipUtil.toDosTime(0) @AT@ 2798 @LENGTH@ 20
------------INS SimpleName@@Name:ZipUtil @TO@ MethodInvocation@@ZipUtil.toDosTime(0) @AT@ 2798 @LENGTH@ 7
------------INS SimpleName@@MethodName:toDosTime:[0] @TO@ MethodInvocation@@ZipUtil.toDosTime(0) @AT@ 2806 @LENGTH@ 12
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:toDosTime:[0] @AT@ 2816 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals(b10,b2[0]) @TO@ MethodDeclaration@@public, void, MethodName:testMinTime,  @AT@ 2849 @LENGTH@ 24
------INS MethodInvocation@@assertEquals(b10,b2[0]) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(b10,b2[0]) @AT@ 2849 @LENGTH@ 23
---------INS SimpleName@@MethodName:assertEquals:[b10, b2[0]] @TO@ MethodInvocation@@assertEquals(b10,b2[0]) @AT@ 2849 @LENGTH@ 23
------------INS SimpleName@@b10 @TO@ SimpleName@@MethodName:assertEquals:[b10, b2[0]] @AT@ 2862 @LENGTH@ 3
------------INS ArrayAccess@@b2[0] @TO@ SimpleName@@MethodName:assertEquals:[b10, b2[0]] @AT@ 2866 @LENGTH@ 5
---------------INS SimpleName@@b2 @TO@ ArrayAccess@@b2[0] @AT@ 2866 @LENGTH@ 2
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@b2[0] @AT@ 2869 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"claus.txt") @TO@ MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"claus.txt") @AT@ 1439 @LENGTH@ 100
---UPD MethodInvocation@@template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"claus.txt") @TO@ template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"claus.txt") @AT@ 1439 @LENGTH@ 99
------UPD SimpleName@@MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", FileComponent.HEADER_FILE_NAME, "claus.txt"] @TO@ MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", NewFileComponent.HEADER_FILE_NAME, "claus.txt"] @AT@ 1448 @LENGTH@ 90
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 1494 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 1494 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:from("dataset:foo").to("seda:queue:test?size=100") @TO@ MethodInvocation:from("dataset:foo").to("seda:queue:test?size=200") @AT@ 1977 @LENGTH@ 51
---UPD MethodInvocation@@from("dataset:foo").to("seda:queue:test?size=100") @TO@ from("dataset:foo").to("seda:queue:test?size=200") @AT@ 1977 @LENGTH@ 50
------UPD SimpleName@@MethodName:to:["seda:queue:test?size=100"] @TO@ MethodName:to:["seda:queue:test?size=200"] @AT@ 1997 @LENGTH@ 30
---------UPD StringLiteral@@"seda:queue:test?size=100" @TO@ "seda:queue:test?size=200" @AT@ 2000 @LENGTH@ 26


INS VariableDeclarationStatement@@int classesSize=classes.size(); @TO@ MethodDeclaration@@public, void, MethodName:find, PackageScanFilter test, String packageName, Set<Class> classes,  @AT@ 2061 @LENGTH@ 33
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int classesSize=classes.size(); @AT@ 2061 @LENGTH@ 3
---INS VariableDeclarationFragment@@classesSize=classes.size() @TO@ VariableDeclarationStatement@@int classesSize=classes.size(); @AT@ 2065 @LENGTH@ 28
------INS SimpleName@@classesSize @TO@ VariableDeclarationFragment@@classesSize=classes.size() @AT@ 2065 @LENGTH@ 11
------INS MethodInvocation@@classes.size() @TO@ VariableDeclarationFragment@@classesSize=classes.size() @AT@ 2079 @LENGTH@ 14
---------INS SimpleName@@Name:classes @TO@ MethodInvocation@@classes.size() @AT@ 2079 @LENGTH@ 7
---------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@classes.size() @AT@ 2087 @LENGTH@ 6


INS FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(MinaHelper.class)] @TO@ TypeDeclaration@@[public, final]MinaHelper,  @AT@ 1208 @LENGTH@ 77
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(MinaHelper.class)] @AT@ 1208 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(MinaHelper.class)] @AT@ 1216 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(MinaHelper.class)] @AT@ 1223 @LENGTH@ 5
---INS Modifier@@transient @TO@ FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(MinaHelper.class)] @AT@ 1229 @LENGTH@ 9
---INS SimpleType@@Log @TO@ FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(MinaHelper.class)] @AT@ 1239 @LENGTH@ 3
---INS VariableDeclarationFragment@@LOG=LogFactory.getLog(MinaHelper.class) @TO@ FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(MinaHelper.class)] @AT@ 1243 @LENGTH@ 41
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=LogFactory.getLog(MinaHelper.class) @AT@ 1243 @LENGTH@ 3
------INS MethodInvocation@@LogFactory.getLog(MinaHelper.class) @TO@ VariableDeclarationFragment@@LOG=LogFactory.getLog(MinaHelper.class) @AT@ 1249 @LENGTH@ 35
---------INS SimpleName@@Name:LogFactory @TO@ MethodInvocation@@LogFactory.getLog(MinaHelper.class) @AT@ 1249 @LENGTH@ 10
---------INS SimpleName@@MethodName:getLog:[MinaHelper.class] @TO@ MethodInvocation@@LogFactory.getLog(MinaHelper.class) @AT@ 1260 @LENGTH@ 24
------------INS TypeLiteral@@MinaHelper.class @TO@ SimpleName@@MethodName:getLog:[MinaHelper.class] @AT@ 1267 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:logger.debug("Looking for expression annotations for method '" + method.getName() + "' on target class '"+ targetClass+ "'") @TO@ MethodInvocation:logger.trace("Looking for expression annotations for method '" + method.getName() + "' on target class '"+ targetClass+ "'") @AT@ 2733 @LENGTH@ 143
---UPD MethodInvocation@@logger.debug("Looking for expression annotations for method '" + method.getName() + "' on target class '"+ targetClass+ "'") @TO@ logger.trace("Looking for expression annotations for method '" + method.getName() + "' on target class '"+ targetClass+ "'") @AT@ 2733 @LENGTH@ 142
------UPD SimpleName@@MethodName:debug:["Looking for expression annotations for method '" + method.getName() + "' on target class '"+ targetClass+ "'"] @TO@ MethodName:trace:["Looking for expression annotations for method '" + method.getName() + "' on target class '"+ targetClass+ "'"] @AT@ 2740 @LENGTH@ 135


DEL MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @AT@ 3740 @LENGTH@ 221
---DEL Modifier@@protected @AT@ 3740 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 3750 @LENGTH@ 4
---DEL SimpleName@@MethodName:configureChild @AT@ 3755 @LENGTH@ 14
---DEL SingleVariableDeclaration@@ProcessorDefinition output @AT@ 3770 @LENGTH@ 26
------DEL SimpleType@@ProcessorDefinition @AT@ 3770 @LENGTH@ 19
------DEL SimpleName@@output @AT@ 3790 @LENGTH@ 6
---DEL ExpressionStatement@@SuperMethodInvocation:super.configureChild(output) @AT@ 3808 @LENGTH@ 29
------DEL SuperMethodInvocation@@super.configureChild(output) @AT@ 3808 @LENGTH@ 28
---------DEL SimpleName@@MethodName:configureChild:[output] @AT@ 3814 @LENGTH@ 14
---------DEL SimpleName@@output @AT@ 3829 @LENGTH@ 6
---DEL IfStatement@@if (isInheritErrorHandler()) {  output.setErrorHandlerBuilder(getErrorHandlerBuilder());} @AT@ 3846 @LENGTH@ 109
------DEL MethodInvocation@@MethodName:isInheritErrorHandler:[] @AT@ 3850 @LENGTH@ 23
------DEL Block@@ThenBody:{  output.setErrorHandlerBuilder(getErrorHandlerBuilder());} @AT@ 3875 @LENGTH@ 80
---------DEL ExpressionStatement@@MethodInvocation:output.setErrorHandlerBuilder(getErrorHandlerBuilder()) @AT@ 3889 @LENGTH@ 56
------------DEL MethodInvocation@@output.setErrorHandlerBuilder(getErrorHandlerBuilder()) @AT@ 3889 @LENGTH@ 55
---------------DEL SimpleName@@Name:output @AT@ 3889 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:setErrorHandlerBuilder:[getErrorHandlerBuilder()] @AT@ 3896 @LENGTH@ 48
------------------DEL MethodInvocation@@MethodName:getErrorHandlerBuilder:[] @AT@ 3919 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"logo1.jpeg") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"logo1.jpeg") @AT@ 3400 @LENGTH@ 73
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"logo1.jpeg") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"logo1.jpeg") @AT@ 3400 @LENGTH@ 72
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "logo1.jpeg"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "logo1.jpeg"] @AT@ 3417 @LENGTH@ 55
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 3427 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 3427 @LENGTH@ 13


UPD TryStatement@@try {  Package spring=Package.getPackage(packageName);  String value=spring.getImplementationVersion();  if (value != null) {    int idx=value.indexOf('.');    if (idx >= 0) {      StringBuffer buffer=new StringBuffer(value.substring(0,++idx));      int i=idx;      for (int size=value.length(); i < size; i++) {        char ch=value.charAt(i);        if (Character.isDigit(ch)) {          buffer.append(ch);        }      }      value=buffer.toString();    }    double number=Double.parseDouble(value);    return number >= minimumVersion;  }} catch (Exception e) {  LOG.debug("Failed to find out " + packageName + " version: "+ e,e);} @TO@ try {  Package spring=Package.getPackage(packageName);  if (spring != null) {    String value=spring.getImplementationVersion();    if (value != null) {      int idx=value.indexOf('.');      if (idx >= 0) {        StringBuffer buffer=new StringBuffer(value.substring(0,++idx));        int i=idx;        for (int size=value.length(); i < size; i++) {          char ch=value.charAt(i);          if (Character.isDigit(ch)) {            buffer.append(ch);          }        }        value=buffer.toString();      }      double number=Double.parseDouble(value);      return number >= minimumVersion;    }  }} catch (Exception e) {  LOG.debug("Failed to find out " + packageName + " version: "+ e,e);} @AT@ 1914 @LENGTH@ 1002
---INS IfStatement@@if (spring != null) {  String value=spring.getImplementationVersion();  if (value != null) {    int idx=value.indexOf('.');    if (idx >= 0) {      StringBuffer buffer=new StringBuffer(value.substring(0,++idx));      int i=idx;      for (int size=value.length(); i < size; i++) {        char ch=value.charAt(i);        if (Character.isDigit(ch)) {          buffer.append(ch);        }      }      value=buffer.toString();    }    double number=Double.parseDouble(value);    return number >= minimumVersion;  }} @TO@ TryStatement@@try {  Package spring=Package.getPackage(packageName);  String value=spring.getImplementationVersion();  if (value != null) {    int idx=value.indexOf('.');    if (idx >= 0) {      StringBuffer buffer=new StringBuffer(value.substring(0,++idx));      int i=idx;      for (int size=value.length(); i < size; i++) {        char ch=value.charAt(i);        if (Character.isDigit(ch)) {          buffer.append(ch);        }      }      value=buffer.toString();    }    double number=Double.parseDouble(value);    return number >= minimumVersion;  }} catch (Exception e) {  LOG.debug("Failed to find out " + packageName + " version: "+ e,e);} @AT@ 1994 @LENGTH@ 918
------INS InfixExpression@@spring != null @TO@ IfStatement@@if (spring != null) {  String value=spring.getImplementationVersion();  if (value != null) {    int idx=value.indexOf('.');    if (idx >= 0) {      StringBuffer buffer=new StringBuffer(value.substring(0,++idx));      int i=idx;      for (int size=value.length(); i < size; i++) {        char ch=value.charAt(i);        if (Character.isDigit(ch)) {          buffer.append(ch);        }      }      value=buffer.toString();    }    double number=Double.parseDouble(value);    return number >= minimumVersion;  }} @AT@ 1998 @LENGTH@ 14
---------INS SimpleName@@spring @TO@ InfixExpression@@spring != null @AT@ 1998 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@spring != null @AT@ 2004 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@spring != null @AT@ 2008 @LENGTH@ 4
------INS Block@@ThenBody:{  String value=spring.getImplementationVersion();  if (value != null) {    int idx=value.indexOf('.');    if (idx >= 0) {      StringBuffer buffer=new StringBuffer(value.substring(0,++idx));      int i=idx;      for (int size=value.length(); i < size; i++) {        char ch=value.charAt(i);        if (Character.isDigit(ch)) {          buffer.append(ch);        }      }      value=buffer.toString();    }    double number=Double.parseDouble(value);    return number >= minimumVersion;  }} @TO@ IfStatement@@if (spring != null) {  String value=spring.getImplementationVersion();  if (value != null) {    int idx=value.indexOf('.');    if (idx >= 0) {      StringBuffer buffer=new StringBuffer(value.substring(0,++idx));      int i=idx;      for (int size=value.length(); i < size; i++) {        char ch=value.charAt(i);        if (Character.isDigit(ch)) {          buffer.append(ch);        }      }      value=buffer.toString();    }    double number=Double.parseDouble(value);    return number >= minimumVersion;  }} @AT@ 2014 @LENGTH@ 898
---------MOV VariableDeclarationStatement@@String value=spring.getImplementationVersion(); @TO@ Block@@ThenBody:{  String value=spring.getImplementationVersion();  if (value != null) {    int idx=value.indexOf('.');    if (idx >= 0) {      StringBuffer buffer=new StringBuffer(value.substring(0,++idx));      int i=idx;      for (int size=value.length(); i < size; i++) {        char ch=value.charAt(i);        if (Character.isDigit(ch)) {          buffer.append(ch);        }      }      value=buffer.toString();    }    double number=Double.parseDouble(value);    return number >= minimumVersion;  }} @AT@ 1994 @LENGTH@ 49
---------MOV IfStatement@@if (value != null) {  int idx=value.indexOf('.');  if (idx >= 0) {    StringBuffer buffer=new StringBuffer(value.substring(0,++idx));    int i=idx;    for (int size=value.length(); i < size; i++) {      char ch=value.charAt(i);      if (Character.isDigit(ch)) {        buffer.append(ch);      }    }    value=buffer.toString();  }  double number=Double.parseDouble(value);  return number >= minimumVersion;} @TO@ Block@@ThenBody:{  String value=spring.getImplementationVersion();  if (value != null) {    int idx=value.indexOf('.');    if (idx >= 0) {      StringBuffer buffer=new StringBuffer(value.substring(0,++idx));      int i=idx;      for (int size=value.length(); i < size; i++) {        char ch=value.charAt(i);        if (Character.isDigit(ch)) {          buffer.append(ch);        }      }      value=buffer.toString();    }    double number=Double.parseDouble(value);    return number >= minimumVersion;  }} @AT@ 2056 @LENGTH@ 736


UPD ExpressionStatement@@MethodInvocation:attributes.add(new StringAttributeValue(new JavaSymbolName("value"),"/" + entityName)) @TO@ MethodInvocation:attributes.add(new StringAttributeValue(new JavaSymbolName("value"),entityName)) @AT@ 13528 @LENGTH@ 88
---UPD MethodInvocation@@attributes.add(new StringAttributeValue(new JavaSymbolName("value"),"/" + entityName)) @TO@ attributes.add(new StringAttributeValue(new JavaSymbolName("value"),entityName)) @AT@ 13528 @LENGTH@ 87
------UPD SimpleName@@MethodName:add:[new StringAttributeValue(new JavaSymbolName("value"),"/" + entityName)] @TO@ MethodName:add:[new StringAttributeValue(new JavaSymbolName("value"),entityName)] @AT@ 13539 @LENGTH@ 76
---------UPD ClassInstanceCreation@@StringAttributeValue[new JavaSymbolName("value"), "/" + entityName] @TO@ StringAttributeValue[new JavaSymbolName("value"), entityName] @AT@ 13543 @LENGTH@ 71
------------DEL InfixExpression@@"/" + entityName @AT@ 13597 @LENGTH@ 16
---------------DEL StringLiteral@@"/" @AT@ 13597 @LENGTH@ 3
---------------DEL Operator@@+ @AT@ 13600 @LENGTH@ 1
---------------DEL SimpleName@@entityName @AT@ 13603 @LENGTH@ 10
------------INS SimpleName@@entityName @TO@ ClassInstanceCreation@@StringAttributeValue[new JavaSymbolName("value"), "/" + entityName] @AT@ 13597 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:logger.info("Welcome to Spring ROO. For assistance press TAB or type \"hint\" then hit ENTER.") @TO@ MethodInvocation:logger.info("Welcome to Spring Roo. For assistance press TAB or type \"hint\" then hit ENTER.") @AT@ 3254 @LENGTH@ 96
---UPD MethodInvocation@@logger.info("Welcome to Spring ROO. For assistance press TAB or type \"hint\" then hit ENTER.") @TO@ logger.info("Welcome to Spring Roo. For assistance press TAB or type \"hint\" then hit ENTER.") @AT@ 3254 @LENGTH@ 95
------UPD SimpleName@@MethodName:info:["Welcome to Spring ROO. For assistance press TAB or type \"hint\" then hit ENTER."] @TO@ MethodName:info:["Welcome to Spring Roo. For assistance press TAB or type \"hint\" then hit ENTER."] @AT@ 3261 @LENGTH@ 88
---------UPD StringLiteral@@"Welcome to Spring ROO. For assistance press TAB or type \"hint\" then hit ENTER." @TO@ "Welcome to Spring Roo. For assistance press TAB or type \"hint\" then hit ENTER." @AT@ 3266 @LENGTH@ 82


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]InstanceMethodTypeConverter, [TypeConverter] @AT@ 2461 @LENGTH@ 132
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2461 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2472 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2474 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2493 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2493 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2493 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2499 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2502 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2508 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2508 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2517 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2527 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2527 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2534 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,null,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2551 @LENGTH@ 36
------INS MethodInvocation@@convertTo(type,null,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,null,value) @AT@ 2558 @LENGTH@ 28
---------INS SimpleName@@MethodName:convertTo:[type, null, value] @TO@ MethodInvocation@@convertTo(type,null,value) @AT@ 2558 @LENGTH@ 28
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2568 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2574 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2580 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:tesBufferSizeInTransaction, Exception,  @TO@ TypeDeclaration@@[public]TransactionAwareBufferedWriterTests,  @AT@ 3514 @LENGTH@ 421
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:tesBufferSizeInTransaction, Exception,  @AT@ 3514 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:tesBufferSizeInTransaction, Exception,  @AT@ 3521 @LENGTH@ 4
---INS SimpleName@@MethodName:tesBufferSizeInTransaction @TO@ MethodDeclaration@@public, void, MethodName:tesBufferSizeInTransaction, Exception,  @AT@ 3526 @LENGTH@ 26
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:tesBufferSizeInTransaction, Exception,  @AT@ 3562 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    try {
      writer.write("foo");
    }
 catch (    IOException e) {
      throw new IllegalStateException("Unexpected IOException",e);
    }
    assertEquals(3,writer.getBufferSize());
    return null;
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:tesBufferSizeInTransaction, Exception,  @AT@ 3576 @LENGTH@ 356
------INS MethodInvocation@@new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    try {
      writer.write("foo");
    }
 catch (    IOException e) {
      throw new IllegalStateException("Unexpected IOException",e);
    }
    assertEquals(3,writer.getBufferSize());
    return null;
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    try {
      writer.write("foo");
    }
 catch (    IOException e) {
      throw new IllegalStateException("Unexpected IOException",e);
    }
    assertEquals(3,writer.getBufferSize());
    return null;
  }
}
) @AT@ 3576 @LENGTH@ 355
---------INS ClassInstanceCreation@@TransactionTemplate[transactionManager] @TO@ MethodInvocation@@new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    try {
      writer.write("foo");
    }
 catch (    IOException e) {
      throw new IllegalStateException("Unexpected IOException",e);
    }
    assertEquals(3,writer.getBufferSize());
    return null;
  }
}
) @AT@ 3576 @LENGTH@ 43
------------INS New@@new @TO@ ClassInstanceCreation@@TransactionTemplate[transactionManager] @AT@ 3576 @LENGTH@ 3
------------INS SimpleType@@TransactionTemplate @TO@ ClassInstanceCreation@@TransactionTemplate[transactionManager] @AT@ 3580 @LENGTH@ 19
------------INS SimpleName@@transactionManager @TO@ ClassInstanceCreation@@TransactionTemplate[transactionManager] @AT@ 3600 @LENGTH@ 18
---------INS SimpleName@@MethodName:execute:[new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    try {
      writer.write("foo");
    }
 catch (    IOException e) {
      throw new IllegalStateException("Unexpected IOException",e);
    }
    assertEquals(3,writer.getBufferSize());
    return null;
  }
}
] @TO@ MethodInvocation@@new TransactionTemplate(transactionManager).execute(new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    try {
      writer.write("foo");
    }
 catch (    IOException e) {
      throw new IllegalStateException("Unexpected IOException",e);
    }
    assertEquals(3,writer.getBufferSize());
    return null;
  }
}
) @AT@ 3620 @LENGTH@ 311
------------INS ClassInstanceCreation@@TransactionCallback[] @TO@ SimpleName@@MethodName:execute:[new TransactionCallback(){
  public Object doInTransaction(  TransactionStatus status){
    try {
      writer.write("foo");
    }
 catch (    IOException e) {
      throw new IllegalStateException("Unexpected IOException",e);
    }
    assertEquals(3,writer.getBufferSize());
    return null;
  }
}
] @AT@ 3628 @LENGTH@ 302
---------------INS New@@new @TO@ ClassInstanceCreation@@TransactionCallback[] @AT@ 3628 @LENGTH@ 3
---------------INS SimpleType@@TransactionCallback @TO@ ClassInstanceCreation@@TransactionCallback[] @AT@ 3632 @LENGTH@ 19
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@TransactionCallback[] @AT@ 3654 @LENGTH@ 276
------------------INS MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3659 @LENGTH@ 267
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @AT@ 3659 @LENGTH@ 6
---------------------INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @AT@ 3666 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:doInTransaction @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @AT@ 3673 @LENGTH@ 15
---------------------INS SingleVariableDeclaration@@TransactionStatus status @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @AT@ 3689 @LENGTH@ 24
------------------------INS SimpleType@@TransactionStatus @TO@ SingleVariableDeclaration@@TransactionStatus status @AT@ 3689 @LENGTH@ 17
------------------------INS SimpleName@@status @TO@ SingleVariableDeclaration@@TransactionStatus status @AT@ 3707 @LENGTH@ 6
---------------------INS TryStatement@@try {  writer.write("foo");} catch (IOException e) {  throw new IllegalStateException("Unexpected IOException",e);} @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @AT@ 3721 @LENGTH@ 138
------------------------INS ExpressionStatement@@MethodInvocation:writer.write("foo") @TO@ TryStatement@@try {  writer.write("foo");} catch (IOException e) {  throw new IllegalStateException("Unexpected IOException",e);} @AT@ 3732 @LENGTH@ 20
---------------------------INS MethodInvocation@@writer.write("foo") @TO@ ExpressionStatement@@MethodInvocation:writer.write("foo") @AT@ 3732 @LENGTH@ 19
------------------------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.write("foo") @AT@ 3732 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:write:["foo"] @TO@ MethodInvocation@@writer.write("foo") @AT@ 3739 @LENGTH@ 12
---------------------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:write:["foo"] @AT@ 3745 @LENGTH@ 5
------------------------INS CatchClause@@catch (IOException e) {  throw new IllegalStateException("Unexpected IOException",e);} @TO@ TryStatement@@try {  writer.write("foo");} catch (IOException e) {  throw new IllegalStateException("Unexpected IOException",e);} @AT@ 3763 @LENGTH@ 96
---------------------------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  throw new IllegalStateException("Unexpected IOException",e);} @AT@ 3770 @LENGTH@ 13
------------------------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 3770 @LENGTH@ 11
------------------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 3782 @LENGTH@ 1
---------------------------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unexpected IOException",e) @TO@ CatchClause@@catch (IOException e) {  throw new IllegalStateException("Unexpected IOException",e);} @AT@ 3792 @LENGTH@ 61
------------------------------INS ClassInstanceCreation@@IllegalStateException["Unexpected IOException", e] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unexpected IOException",e) @AT@ 3798 @LENGTH@ 54
---------------------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["Unexpected IOException", e] @AT@ 3798 @LENGTH@ 3
---------------------------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["Unexpected IOException", e] @AT@ 3802 @LENGTH@ 21
---------------------------------INS StringLiteral@@"Unexpected IOException" @TO@ ClassInstanceCreation@@IllegalStateException["Unexpected IOException", e] @AT@ 3824 @LENGTH@ 24
---------------------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@IllegalStateException["Unexpected IOException", e] @AT@ 3850 @LENGTH@ 1
---------------------INS ExpressionStatement@@MethodInvocation:assertEquals(3,writer.getBufferSize()) @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @AT@ 3864 @LENGTH@ 40
------------------------INS MethodInvocation@@assertEquals(3,writer.getBufferSize()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(3,writer.getBufferSize()) @AT@ 3864 @LENGTH@ 39
---------------------------INS SimpleName@@MethodName:assertEquals:[3, writer.getBufferSize()] @TO@ MethodInvocation@@assertEquals(3,writer.getBufferSize()) @AT@ 3864 @LENGTH@ 39
------------------------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:assertEquals:[3, writer.getBufferSize()] @AT@ 3877 @LENGTH@ 1
------------------------------INS MethodInvocation@@writer.getBufferSize() @TO@ SimpleName@@MethodName:assertEquals:[3, writer.getBufferSize()] @AT@ 3880 @LENGTH@ 22
---------------------------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.getBufferSize() @AT@ 3880 @LENGTH@ 6
---------------------------------INS SimpleName@@MethodName:getBufferSize:[] @TO@ MethodInvocation@@writer.getBufferSize() @AT@ 3887 @LENGTH@ 15
---------------------INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus status,  @AT@ 3909 @LENGTH@ 12
------------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 3916 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:stopCamelContext() @AT@ 3192 @LENGTH@ 19


UPD VariableDeclarationStatement@@Exchange copy=exchange.copy(); @TO@ Exchange copy=exchange.newCopy(); @AT@ 5499 @LENGTH@ 32
---UPD VariableDeclarationFragment@@copy=exchange.copy() @TO@ copy=exchange.newCopy() @AT@ 5508 @LENGTH@ 22
------UPD MethodInvocation@@exchange.copy() @TO@ exchange.newCopy() @AT@ 5515 @LENGTH@ 15
---------UPD SimpleName@@MethodName:copy:[] @TO@ MethodName:newCopy:[] @AT@ 5524 @LENGTH@ 6


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@WebExpressionConfigAttribute, [ConfigAttribute] @AT@ 725 @LENGTH@ 90
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 725 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 732 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 739 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:authorizeExpression.getExpressionString() @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 760 @LENGTH@ 49
------INS MethodInvocation@@authorizeExpression.getExpressionString() @TO@ ReturnStatement@@MethodInvocation:authorizeExpression.getExpressionString() @AT@ 767 @LENGTH@ 41
---------INS SimpleName@@Name:authorizeExpression @TO@ MethodInvocation@@authorizeExpression.getExpressionString() @AT@ 767 @LENGTH@ 19
---------INS SimpleName@@MethodName:getExpressionString:[] @TO@ MethodInvocation@@authorizeExpression.getExpressionString() @AT@ 787 @LENGTH@ 21


INS ExpressionStatement@@MethodInvocation:services.setTokenValiditySeconds(100 * 24 * 60* 60) @TO@ MethodDeclaration@@public, void, MethodName:setUpData, Exception,  @AT@ 1467 @LENGTH@ 47
---INS MethodInvocation@@services.setTokenValiditySeconds(100 * 24 * 60* 60) @TO@ ExpressionStatement@@MethodInvocation:services.setTokenValiditySeconds(100 * 24 * 60* 60) @AT@ 1467 @LENGTH@ 46
------INS SimpleName@@Name:services @TO@ MethodInvocation@@services.setTokenValiditySeconds(100 * 24 * 60* 60) @AT@ 1467 @LENGTH@ 8
------INS SimpleName@@MethodName:setTokenValiditySeconds:[100 * 24 * 60* 60] @TO@ MethodInvocation@@services.setTokenValiditySeconds(100 * 24 * 60* 60) @AT@ 1476 @LENGTH@ 37
---------INS InfixExpression@@100 * 24 * 60* 60 @TO@ SimpleName@@MethodName:setTokenValiditySeconds:[100 * 24 * 60* 60] @AT@ 1500 @LENGTH@ 12
------------INS NumberLiteral@@100 @TO@ InfixExpression@@100 * 24 * 60* 60 @AT@ 1500 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@100 * 24 * 60* 60 @AT@ 1503 @LENGTH@ 1
------------INS NumberLiteral@@24 @TO@ InfixExpression@@100 * 24 * 60* 60 @AT@ 1504 @LENGTH@ 2
------------INS NumberLiteral@@60 @TO@ InfixExpression@@100 * 24 * 60* 60 @AT@ 1507 @LENGTH@ 2
------------INS NumberLiteral@@60 @TO@ InfixExpression@@100 * 24 * 60* 60 @AT@ 1510 @LENGTH@ 2


UPD IfStatement@@if (!copyMessageId) {  setMessageId(that.getMessageId());} @TO@ if (copyMessageId) {  setMessageId(that.getMessageId());} @AT@ 2453 @LENGTH@ 78
---DEL PrefixExpression@@!copyMessageId @AT@ 2457 @LENGTH@ 14
------DEL Operator@@! @AT@ 2457 @LENGTH@ 1
------DEL SimpleName@@copyMessageId @AT@ 2458 @LENGTH@ 13
---INS SimpleName@@copyMessageId @TO@ IfStatement@@if (!copyMessageId) {  setMessageId(that.getMessageId());} @AT@ 2465 @LENGTH@ 13


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]StaticMethodTypeConverter, [TypeConverter] @AT@ 2052 @LENGTH@ 132
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2052 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2063 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2065 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2084 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2084 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2084 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2090 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2093 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2099 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2099 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2108 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2118 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2118 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2125 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,null,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2142 @LENGTH@ 36
------INS MethodInvocation@@convertTo(type,null,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,null,value) @AT@ 2149 @LENGTH@ 28
---------INS SimpleName@@MethodName:convertTo:[type, null, value] @TO@ MethodInvocation@@convertTo(type,null,value) @AT@ 2149 @LENGTH@ 28
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2159 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2165 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2171 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("jetty:http://localhost/myservice").transform().constant("Bye World") @TO@ MethodInvocation:from("jetty:http://localhost:9000/myservice").transform().constant("Bye World") @AT@ 2022 @LENGTH@ 75
---UPD MethodInvocation@@from("jetty:http://localhost/myservice").transform().constant("Bye World") @TO@ from("jetty:http://localhost:9000/myservice").transform().constant("Bye World") @AT@ 2022 @LENGTH@ 74
------UPD MethodInvocation@@MethodName:from:["jetty:http://localhost/myservice"] @TO@ MethodName:from:["jetty:http://localhost:9000/myservice"] @AT@ 2022 @LENGTH@ 40
---------UPD StringLiteral@@"jetty:http://localhost/myservice" @TO@ "jetty:http://localhost:9000/myservice" @AT@ 2027 @LENGTH@ 34


INS ExpressionStatement@@MethodInvocation:deleteDirectory("target/out") @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1631 @LENGTH@ 30
---INS MethodInvocation@@deleteDirectory("target/out") @TO@ ExpressionStatement@@MethodInvocation:deleteDirectory("target/out") @AT@ 1631 @LENGTH@ 29
------INS SimpleName@@MethodName:deleteDirectory:["target/out"] @TO@ MethodInvocation@@deleteDirectory("target/out") @AT@ 1631 @LENGTH@ 29
---------INS StringLiteral@@"target/out" @TO@ SimpleName@@MethodName:deleteDirectory:["target/out"] @AT@ 1647 @LENGTH@ 12


UPD IfStatement@@if (processor == null && bean != null) {  try {    processor=CamelContextHelper.convertTo(context,Processor.class,bean);  } catch (  NoTypeConversionAvailableException ex) {  }} @TO@ if (processor == null && bean != null) {  processor=CamelContextHelper.convertTo(context,Processor.class,bean);} @AT@ 2725 @LENGTH@ 260
---UPD Block@@ThenBody:{  try {    processor=CamelContextHelper.convertTo(context,Processor.class,bean);  } catch (  NoTypeConversionAvailableException ex) {  }} @TO@ ThenBody:{  processor=CamelContextHelper.convertTo(context,Processor.class,bean);} @AT@ 2764 @LENGTH@ 221
------DEL TryStatement@@try {  processor=CamelContextHelper.convertTo(context,Processor.class,bean);} catch (NoTypeConversionAvailableException ex) {} @AT@ 2778 @LENGTH@ 197
---------DEL CatchClause@@catch (NoTypeConversionAvailableException ex) {} @AT@ 2888 @LENGTH@ 87
------------DEL SingleVariableDeclaration@@NoTypeConversionAvailableException ex @AT@ 2895 @LENGTH@ 37
---------------DEL SimpleType@@NoTypeConversionAvailableException @AT@ 2895 @LENGTH@ 34
---------------DEL SimpleName@@ex @AT@ 2930 @LENGTH@ 2
------MOV ExpressionStatement@@Assignment:processor=CamelContextHelper.convertTo(context,Processor.class,bean) @TO@ Block@@ThenBody:{  try {    processor=CamelContextHelper.convertTo(context,Processor.class,bean);  } catch (  NoTypeConversionAvailableException ex) {  }} @AT@ 2800 @LENGTH@ 73


DEL TryStatement@@try {  Iterator<?> iterator=exchange.getIn().getBody(Iterator.class);  while (iterator != null && iterator.hasNext()) {    ps.setObject(argNumber++,iterator.next());  }} catch (NoTypeConversionAvailableException e) {} @AT@ 2017 @LENGTH@ 403
---DEL CatchClause@@catch (NoTypeConversionAvailableException e) {} @AT@ 2285 @LENGTH@ 135
------DEL SingleVariableDeclaration@@NoTypeConversionAvailableException e @AT@ 2292 @LENGTH@ 36
---------DEL SimpleType@@NoTypeConversionAvailableException @AT@ 2292 @LENGTH@ 34
---------DEL SimpleName@@e @AT@ 2327 @LENGTH@ 1


INS MethodDeclaration@@public, voidMethodName:DirContextAdapter, String dnString,  @TO@ TypeDeclaration@@[public]DirContextAdapter, [DirContextOperations] @AT@ 3942 @LENGTH@ 89
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:DirContextAdapter, String dnString,  @AT@ 3942 @LENGTH@ 6
---INS SimpleName@@MethodName:DirContextAdapter @TO@ MethodDeclaration@@public, voidMethodName:DirContextAdapter, String dnString,  @AT@ 3949 @LENGTH@ 17
---INS SingleVariableDeclaration@@String dnString @TO@ MethodDeclaration@@public, voidMethodName:DirContextAdapter, String dnString,  @AT@ 3967 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String dnString @AT@ 3967 @LENGTH@ 6
------INS SimpleName@@dnString @TO@ SingleVariableDeclaration@@String dnString @AT@ 3974 @LENGTH@ 8
---INS ConstructorInvocation@@this(new DistinguishedName(dnString)); @TO@ MethodDeclaration@@public, voidMethodName:DirContextAdapter, String dnString,  @AT@ 3989 @LENGTH@ 38
------INS ClassInstanceCreation@@DistinguishedName[dnString] @TO@ ConstructorInvocation@@this(new DistinguishedName(dnString)); @AT@ 3994 @LENGTH@ 31
---------INS New@@new @TO@ ClassInstanceCreation@@DistinguishedName[dnString] @AT@ 3994 @LENGTH@ 3
---------INS SimpleType@@DistinguishedName @TO@ ClassInstanceCreation@@DistinguishedName[dnString] @AT@ 3998 @LENGTH@ 17
---------INS SimpleName@@dnString @TO@ ClassInstanceCreation@@DistinguishedName[dnString] @AT@ 4016 @LENGTH@ 8


UPD TryStatement@@try {  Destination replyDestination=getReplyToDestination(message);  final JmsExchange exchange=createExchange(message,replyDestination);  if (eagerLoadingOfProperties) {    exchange.getIn().getHeaders();  }  processor.process(exchange);  JmsMessage body=null;  Exception cause=null;  boolean sendReply=false;  if (exchange.isFailed()) {    if (exchange.getException() != null) {      if (endpoint.isTransferException()) {        body=null;        cause=exchange.getException();        sendReply=true;      } else {        rce=wrapRuntimeCamelException(exchange.getException());      }    } else     if (exchange.getFault().getBody() != null) {      body=exchange.getFault();      sendReply=true;    }  } else {    body=exchange.getOut(false);    sendReply=true;  }  if (sendReply && !disableReplyTo && exchange.getPattern().isOutCapable()) {    sendReply(replyDestination,message,exchange,body,cause);  }} catch (Exception e) {  rce=wrapRuntimeCamelException(e);} @TO@ try {  Destination replyDestination=getReplyToDestination(message);  final JmsExchange exchange=createExchange(message,replyDestination);  if (eagerLoadingOfProperties) {    exchange.getIn().getHeaders();  }  processor.process(exchange);  JmsMessage body=null;  Exception cause=null;  boolean sendReply=false;  if (exchange.isFailed()) {    if (exchange.getException() != null) {      if (endpoint.isTransferException()) {        body=null;        cause=exchange.getException();        sendReply=true;      } else {        rce=wrapRuntimeCamelException(exchange.getException());      }    } else     if (exchange.getFault().getBody() != null) {      body=exchange.getFault();      sendReply=true;    }  } else   if (exchange.getOut(false) != null) {    body=exchange.getOut(false);    sendReply=true;  }  if (rce == null && sendReply && !disableReplyTo && exchange.getPattern().isOutCapable()) {    sendReply(replyDestination,message,exchange,body,cause);  }} catch (Exception e) {  rce=wrapRuntimeCamelException(e);} @AT@ 2597 @LENGTH@ 1946
---UPD IfStatement@@if (exchange.isFailed()) {  if (exchange.getException() != null) {    if (endpoint.isTransferException()) {      body=null;      cause=exchange.getException();      sendReply=true;    } else {      rce=wrapRuntimeCamelException(exchange.getException());    }  } else   if (exchange.getFault().getBody() != null) {    body=exchange.getFault();    sendReply=true;  }} else {  body=exchange.getOut(false);  sendReply=true;} @TO@ if (exchange.isFailed()) {  if (exchange.getException() != null) {    if (endpoint.isTransferException()) {      body=null;      cause=exchange.getException();      sendReply=true;    } else {      rce=wrapRuntimeCamelException(exchange.getException());    }  } else   if (exchange.getFault().getBody() != null) {    body=exchange.getFault();    sendReply=true;  }} else if (exchange.getOut(false) != null) {  body=exchange.getOut(false);  sendReply=true;} @AT@ 3129 @LENGTH@ 1060
------UPD Block@@ElseBody:{  body=exchange.getOut(false);  sendReply=true;} @TO@ ThenBody:{  body=exchange.getOut(false);  sendReply=true;} @AT@ 4046 @LENGTH@ 143
------INS Block@@ElseBody:if (exchange.getOut(false) != null) {  body=exchange.getOut(false);  sendReply=true;} @TO@ IfStatement@@if (exchange.isFailed()) {  if (exchange.getException() != null) {    if (endpoint.isTransferException()) {      body=null;      cause=exchange.getException();      sendReply=true;    } else {      rce=wrapRuntimeCamelException(exchange.getException());    }  } else   if (exchange.getFault().getBody() != null) {    body=exchange.getFault();    sendReply=true;  }} else {  body=exchange.getOut(false);  sendReply=true;} @AT@ 4101 @LENGTH@ 179
---------INS IfStatement@@if (exchange.getOut(false) != null) {  body=exchange.getOut(false);  sendReply=true;} @TO@ Block@@ElseBody:if (exchange.getOut(false) != null) {  body=exchange.getOut(false);  sendReply=true;} @AT@ 4101 @LENGTH@ 179
------------MOV Block@@ElseBody:{  body=exchange.getOut(false);  sendReply=true;} @TO@ IfStatement@@if (exchange.getOut(false) != null) {  body=exchange.getOut(false);  sendReply=true;} @AT@ 4046 @LENGTH@ 143
------------INS InfixExpression@@exchange.getOut(false) != null @TO@ IfStatement@@if (exchange.getOut(false) != null) {  body=exchange.getOut(false);  sendReply=true;} @AT@ 4105 @LENGTH@ 30
---------------INS MethodInvocation@@exchange.getOut(false) @TO@ InfixExpression@@exchange.getOut(false) != null @AT@ 4105 @LENGTH@ 22
------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut(false) @AT@ 4105 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getOut:[false] @TO@ MethodInvocation@@exchange.getOut(false) @AT@ 4114 @LENGTH@ 13
---------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getOut:[false] @AT@ 4121 @LENGTH@ 5
---------------INS Operator@@!= @TO@ InfixExpression@@exchange.getOut(false) != null @AT@ 4127 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getOut(false) != null @AT@ 4131 @LENGTH@ 4
---UPD IfStatement@@if (sendReply && !disableReplyTo && exchange.getPattern().isOutCapable()) {  sendReply(replyDestination,message,exchange,body,cause);} @TO@ if (rce == null && sendReply && !disableReplyTo && exchange.getPattern().isOutCapable()) {  sendReply(replyDestination,message,exchange,body,cause);} @AT@ 4286 @LENGTH@ 166
------UPD InfixExpression@@sendReply && !disableReplyTo && exchange.getPattern().isOutCapable() @TO@ rce == null && sendReply && !disableReplyTo && exchange.getPattern().isOutCapable() @AT@ 4290 @LENGTH@ 68
---------INS InfixExpression@@rce == null && sendReply && !disableReplyTo @TO@ InfixExpression@@sendReply && !disableReplyTo && exchange.getPattern().isOutCapable() @AT@ 4381 @LENGTH@ 43
------------MOV Operator@@&& @TO@ InfixExpression@@rce == null && sendReply && !disableReplyTo @AT@ 4299 @LENGTH@ 2
------------MOV PrefixExpression@@!disableReplyTo @TO@ InfixExpression@@rce == null && sendReply && !disableReplyTo @AT@ 4303 @LENGTH@ 15
------------INS InfixExpression@@rce == null && sendReply @TO@ InfixExpression@@rce == null && sendReply && !disableReplyTo @AT@ 4381 @LENGTH@ 24
---------------MOV SimpleName@@sendReply @TO@ InfixExpression@@rce == null && sendReply @AT@ 4290 @LENGTH@ 9
---------------INS InfixExpression@@rce == null @TO@ InfixExpression@@rce == null && sendReply @AT@ 4381 @LENGTH@ 11
------------------INS SimpleName@@rce @TO@ InfixExpression@@rce == null @AT@ 4381 @LENGTH@ 3
------------------INS Operator@@== @TO@ InfixExpression@@rce == null @AT@ 4384 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@rce == null @AT@ 4388 @LENGTH@ 4
---------------INS Operator@@&& @TO@ InfixExpression@@rce == null && sendReply @AT@ 4392 @LENGTH@ 2
---------INS Operator@@&& @TO@ InfixExpression@@sendReply && !disableReplyTo && exchange.getPattern().isOutCapable() @AT@ 4424 @LENGTH@ 2


DEL IfStatement@@if (text == null) {  throw new NullPointerException("text cannot be null");} @AT@ 1574 @LENGTH@ 96
---DEL InfixExpression@@text == null @AT@ 1578 @LENGTH@ 12
------DEL SimpleName@@text @AT@ 1578 @LENGTH@ 4
------DEL Operator@@== @AT@ 1582 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 1586 @LENGTH@ 4
---DEL Block@@ThenBody:{  throw new NullPointerException("text cannot be null");} @AT@ 1592 @LENGTH@ 78
------DEL ThrowStatement@@ClassInstanceCreation:new NullPointerException("text cannot be null") @AT@ 1606 @LENGTH@ 54
---------DEL ClassInstanceCreation@@NullPointerException["text cannot be null"] @AT@ 1612 @LENGTH@ 47
------------DEL New@@new @AT@ 1612 @LENGTH@ 3
------------DEL SimpleType@@NullPointerException @AT@ 1616 @LENGTH@ 20
------------DEL StringLiteral@@"text cannot be null" @AT@ 1637 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:from("rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=100&feedHeader=false").to("mock:result") @TO@ MethodInvocation:from("rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=500&feedHeader=false").to("mock:result") @AT@ 1771 @LENGTH@ 114
---UPD MethodInvocation@@from("rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=100&feedHeader=false").to("mock:result") @TO@ from("rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=500&feedHeader=false").to("mock:result") @AT@ 1771 @LENGTH@ 113
------UPD MethodInvocation@@MethodName:from:["rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=100&feedHeader=false"] @TO@ MethodName:from:["rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=500&feedHeader=false"] @AT@ 1771 @LENGTH@ 95
---------UPD StringLiteral@@"rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=100&feedHeader=false" @TO@ "rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=500&feedHeader=false" @AT@ 1776 @LENGTH@ 89


MOV FieldDeclaration@@protected, Class<? extends Policy>, [type] @TO@ TypeDeclaration@@[@XmlRootElement(name="policy"), @XmlAccessorType(XmlAccessType.FIELD), public]PolicyDefinition, OutputDefinition<ProcessorDefinition> @AT@ 1813 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2031 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2031 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 2048 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2058 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2058 @LENGTH@ 13


UPD ReturnStatement@@InfixExpression:"Model : " + Client.class.getName() + " : "+ this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName() @TO@ InfixExpression:"Model : " + Client.class.getName() + " : "+ String.valueOf(this.getClientNr())+ ", "+ String.valueOf(this.getFirstName())+ ", "+ String.valueOf(this.getLastName()) @AT@ 1718 @LENGTH@ 129
---UPD InfixExpression@@"Model : " + Client.class.getName() + " : "+ this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName() @TO@ "Model : " + Client.class.getName() + " : "+ String.valueOf(this.getClientNr())+ ", "+ String.valueOf(this.getFirstName())+ ", "+ String.valueOf(this.getLastName()) @AT@ 1725 @LENGTH@ 121
------DEL MethodInvocation@@this.getClientNr() @AT@ 1771 @LENGTH@ 18
------INS MethodInvocation@@String.valueOf(this.getClientNr()) @TO@ InfixExpression@@"Model : " + Client.class.getName() + " : "+ this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName() @AT@ 1784 @LENGTH@ 34
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getClientNr()) @AT@ 1784 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getClientNr()] @TO@ MethodInvocation@@String.valueOf(this.getClientNr()) @AT@ 1791 @LENGTH@ 27
------------INS MethodInvocation@@this.getClientNr() @TO@ SimpleName@@MethodName:valueOf:[this.getClientNr()] @AT@ 1799 @LENGTH@ 18
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getClientNr() @AT@ 1771 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getClientNr:[] @TO@ MethodInvocation@@this.getClientNr() @AT@ 1776 @LENGTH@ 13
------DEL MethodInvocation@@this.getFirstName() @AT@ 1799 @LENGTH@ 19
------DEL MethodInvocation@@this.getLastName() @AT@ 1828 @LENGTH@ 18
------INS MethodInvocation@@String.valueOf(this.getFirstName()) @TO@ InfixExpression@@"Model : " + Client.class.getName() + " : "+ this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName() @AT@ 1841 @LENGTH@ 35
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getFirstName()) @AT@ 1841 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getFirstName()] @TO@ MethodInvocation@@String.valueOf(this.getFirstName()) @AT@ 1848 @LENGTH@ 28
------------INS MethodInvocation@@this.getFirstName() @TO@ SimpleName@@MethodName:valueOf:[this.getFirstName()] @AT@ 1856 @LENGTH@ 19
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getFirstName() @AT@ 1799 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getFirstName:[] @TO@ MethodInvocation@@this.getFirstName() @AT@ 1804 @LENGTH@ 14
------INS MethodInvocation@@String.valueOf(this.getLastName()) @TO@ InfixExpression@@"Model : " + Client.class.getName() + " : "+ this.getClientNr()+ ", "+ this.getFirstName()+ ", "+ this.getLastName() @AT@ 1899 @LENGTH@ 34
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getLastName()) @AT@ 1899 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getLastName()] @TO@ MethodInvocation@@String.valueOf(this.getLastName()) @AT@ 1906 @LENGTH@ 27
------------INS MethodInvocation@@this.getLastName() @TO@ SimpleName@@MethodName:valueOf:[this.getLastName()] @AT@ 1914 @LENGTH@ 18
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getLastName() @AT@ 1828 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getLastName:[] @TO@ MethodInvocation@@this.getLastName() @AT@ 1833 @LENGTH@ 13


INS MethodDeclaration@@public, static, String, MethodName:stripPath, String name,  @TO@ TypeDeclaration@@[public, final]FileUtil,  @AT@ 10753 @LENGTH@ 342
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:stripPath, String name,  @AT@ 10753 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:stripPath, String name,  @AT@ 10760 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:stripPath, String name,  @AT@ 10767 @LENGTH@ 6
---INS SimpleName@@MethodName:stripPath @TO@ MethodDeclaration@@public, static, String, MethodName:stripPath, String name,  @AT@ 10774 @LENGTH@ 9
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, static, String, MethodName:stripPath, String name,  @AT@ 10784 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 10784 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 10791 @LENGTH@ 4
---INS IfStatement@@if (name == null) {  return null;} @TO@ MethodDeclaration@@public, static, String, MethodName:stripPath, String name,  @AT@ 10807 @LENGTH@ 54
------INS InfixExpression@@name == null @TO@ IfStatement@@if (name == null) {  return null;} @AT@ 10811 @LENGTH@ 12
---------INS SimpleName@@name @TO@ InfixExpression@@name == null @AT@ 10811 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@name == null @AT@ 10815 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@name == null @AT@ 10819 @LENGTH@ 4
------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (name == null) {  return null;} @AT@ 10825 @LENGTH@ 36
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 10839 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 10846 @LENGTH@ 4
---INS VariableDeclarationStatement@@int pos=name.lastIndexOf("/"); @TO@ MethodDeclaration@@public, static, String, MethodName:stripPath, String name,  @AT@ 10870 @LENGTH@ 32
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int pos=name.lastIndexOf("/"); @AT@ 10870 @LENGTH@ 3
------INS VariableDeclarationFragment@@pos=name.lastIndexOf("/") @TO@ VariableDeclarationStatement@@int pos=name.lastIndexOf("/"); @AT@ 10874 @LENGTH@ 27
---------INS SimpleName@@pos @TO@ VariableDeclarationFragment@@pos=name.lastIndexOf("/") @AT@ 10874 @LENGTH@ 3
---------INS MethodInvocation@@name.lastIndexOf("/") @TO@ VariableDeclarationFragment@@pos=name.lastIndexOf("/") @AT@ 10880 @LENGTH@ 21
------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.lastIndexOf("/") @AT@ 10880 @LENGTH@ 4
------------INS SimpleName@@MethodName:lastIndexOf:["/"] @TO@ MethodInvocation@@name.lastIndexOf("/") @AT@ 10885 @LENGTH@ 16
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:lastIndexOf:["/"] @AT@ 10897 @LENGTH@ 3
---INS IfStatement@@if (pos == -1) {  pos=name.lastIndexOf(File.separator);} @TO@ MethodDeclaration@@public, static, String, MethodName:stripPath, String name,  @AT@ 10911 @LENGTH@ 78
------INS InfixExpression@@pos == -1 @TO@ IfStatement@@if (pos == -1) {  pos=name.lastIndexOf(File.separator);} @AT@ 10915 @LENGTH@ 9
---------INS SimpleName@@pos @TO@ InfixExpression@@pos == -1 @AT@ 10915 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@pos == -1 @AT@ 10918 @LENGTH@ 2
---------INS PrefixExpression@@-1 @TO@ InfixExpression@@pos == -1 @AT@ 10922 @LENGTH@ 2
------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 10922 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 10923 @LENGTH@ 1
------INS Block@@ThenBody:{  pos=name.lastIndexOf(File.separator);} @TO@ IfStatement@@if (pos == -1) {  pos=name.lastIndexOf(File.separator);} @AT@ 10926 @LENGTH@ 63
---------INS ExpressionStatement@@Assignment:pos=name.lastIndexOf(File.separator) @TO@ Block@@ThenBody:{  pos=name.lastIndexOf(File.separator);} @AT@ 10940 @LENGTH@ 39
------------INS Assignment@@pos=name.lastIndexOf(File.separator) @TO@ ExpressionStatement@@Assignment:pos=name.lastIndexOf(File.separator) @AT@ 10940 @LENGTH@ 38
---------------INS SimpleName@@pos @TO@ Assignment@@pos=name.lastIndexOf(File.separator) @AT@ 10940 @LENGTH@ 3
---------------INS Operator@@= @TO@ Assignment@@pos=name.lastIndexOf(File.separator) @AT@ 10943 @LENGTH@ 1
---------------INS MethodInvocation@@name.lastIndexOf(File.separator) @TO@ Assignment@@pos=name.lastIndexOf(File.separator) @AT@ 10946 @LENGTH@ 32
------------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.lastIndexOf(File.separator) @AT@ 10946 @LENGTH@ 4
------------------INS SimpleName@@MethodName:lastIndexOf:[File.separator] @TO@ MethodInvocation@@name.lastIndexOf(File.separator) @AT@ 10951 @LENGTH@ 27
---------------------INS QualifiedName@@File.separator @TO@ SimpleName@@MethodName:lastIndexOf:[File.separator] @AT@ 10963 @LENGTH@ 14
------------------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 10963 @LENGTH@ 4
------------------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 10968 @LENGTH@ 9
---INS IfStatement@@if (pos != -1) {  return name.substring(pos + 1);} @TO@ MethodDeclaration@@public, static, String, MethodName:stripPath, String name,  @AT@ 10998 @LENGTH@ 70
------INS InfixExpression@@pos != -1 @TO@ IfStatement@@if (pos != -1) {  return name.substring(pos + 1);} @AT@ 11002 @LENGTH@ 9
---------INS SimpleName@@pos @TO@ InfixExpression@@pos != -1 @AT@ 11002 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@pos != -1 @AT@ 11005 @LENGTH@ 2
---------INS PrefixExpression@@-1 @TO@ InfixExpression@@pos != -1 @AT@ 11009 @LENGTH@ 2
------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 11009 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 11010 @LENGTH@ 1
------INS Block@@ThenBody:{  return name.substring(pos + 1);} @TO@ IfStatement@@if (pos != -1) {  return name.substring(pos + 1);} @AT@ 11013 @LENGTH@ 55
---------INS ReturnStatement@@MethodInvocation:name.substring(pos + 1) @TO@ Block@@ThenBody:{  return name.substring(pos + 1);} @AT@ 11027 @LENGTH@ 31
------------INS MethodInvocation@@name.substring(pos + 1) @TO@ ReturnStatement@@MethodInvocation:name.substring(pos + 1) @AT@ 11034 @LENGTH@ 23
---------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.substring(pos + 1) @AT@ 11034 @LENGTH@ 4
---------------INS SimpleName@@MethodName:substring:[pos + 1] @TO@ MethodInvocation@@name.substring(pos + 1) @AT@ 11039 @LENGTH@ 18
------------------INS InfixExpression@@pos + 1 @TO@ SimpleName@@MethodName:substring:[pos + 1] @AT@ 11049 @LENGTH@ 7
---------------------INS SimpleName@@pos @TO@ InfixExpression@@pos + 1 @AT@ 11049 @LENGTH@ 3
---------------------INS Operator@@+ @TO@ InfixExpression@@pos + 1 @AT@ 11052 @LENGTH@ 1
---------------------INS NumberLiteral@@1 @TO@ InfixExpression@@pos + 1 @AT@ 11055 @LENGTH@ 1
---INS ReturnStatement@@SimpleName:name @TO@ MethodDeclaration@@public, static, String, MethodName:stripPath, String name,  @AT@ 11077 @LENGTH@ 12
------INS SimpleName@@name @TO@ ReturnStatement@@SimpleName:name @AT@ 11084 @LENGTH@ 4


DEL MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @AT@ 9192 @LENGTH@ 297
---DEL Modifier@@public @AT@ 9192 @LENGTH@ 6
---DEL Modifier@@static @AT@ 9199 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 9206 @LENGTH@ 4
---DEL SimpleName@@MethodName:copy @AT@ 9211 @LENGTH@ 4
---DEL SingleVariableDeclaration@@InputStream stream @AT@ 9216 @LENGTH@ 18
------DEL SimpleType@@InputStream @AT@ 9216 @LENGTH@ 11
------DEL SimpleName@@stream @AT@ 9228 @LENGTH@ 6
---DEL SingleVariableDeclaration@@OutputStream os @AT@ 9236 @LENGTH@ 15
------DEL SimpleType@@OutputStream @AT@ 9236 @LENGTH@ 12
------DEL SimpleName@@os @AT@ 9249 @LENGTH@ 2
---DEL SimpleType@@IOException @AT@ 9260 @LENGTH@ 11
---DEL VariableDeclarationStatement@@byte[] data=new byte[4096]; @AT@ 9282 @LENGTH@ 29
------DEL ArrayType@@byte[] @AT@ 9282 @LENGTH@ 6
---------DEL PrimitiveType@@byte @AT@ 9282 @LENGTH@ 4
------DEL VariableDeclarationFragment@@data=new byte[4096] @AT@ 9289 @LENGTH@ 21
---------DEL SimpleName@@data @AT@ 9289 @LENGTH@ 4
---------DEL ArrayCreation@@new byte[4096] @AT@ 9296 @LENGTH@ 14
------------DEL ArrayType@@byte[] @AT@ 9300 @LENGTH@ 10
---------------DEL PrimitiveType@@byte @AT@ 9300 @LENGTH@ 4
------------DEL NumberLiteral@@4096 @AT@ 9305 @LENGTH@ 4
---DEL VariableDeclarationStatement@@int read=stream.read(data); @AT@ 9320 @LENGTH@ 29
------DEL PrimitiveType@@int @AT@ 9320 @LENGTH@ 3
------DEL VariableDeclarationFragment@@read=stream.read(data) @AT@ 9324 @LENGTH@ 24
---------DEL SimpleName@@read @AT@ 9324 @LENGTH@ 4
---------DEL MethodInvocation@@stream.read(data) @AT@ 9331 @LENGTH@ 17
------------DEL SimpleName@@Name:stream @AT@ 9331 @LENGTH@ 6
------------DEL SimpleName@@MethodName:read:[data] @AT@ 9338 @LENGTH@ 10
---------------DEL SimpleName@@data @AT@ 9343 @LENGTH@ 4
---DEL WhileStatement@@while (read != -1) {  os.write(data,0,read);  read=stream.read(data);} @AT@ 9358 @LENGTH@ 105
------DEL InfixExpression@@read != -1 @AT@ 9365 @LENGTH@ 10
---------DEL SimpleName@@read @AT@ 9365 @LENGTH@ 4
---------DEL Operator@@!= @AT@ 9369 @LENGTH@ 2
---------DEL PrefixExpression@@-1 @AT@ 9373 @LENGTH@ 2
------------DEL Operator@@- @AT@ 9373 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 9374 @LENGTH@ 1
------DEL Block@@WhileBody:{  os.write(data,0,read);  read=stream.read(data);} @AT@ 9377 @LENGTH@ 86
---------DEL ExpressionStatement@@MethodInvocation:os.write(data,0,read) @AT@ 9391 @LENGTH@ 24
------------DEL MethodInvocation@@os.write(data,0,read) @AT@ 9391 @LENGTH@ 23
---------------DEL SimpleName@@Name:os @AT@ 9391 @LENGTH@ 2
---------------DEL SimpleName@@MethodName:write:[data, 0, read] @AT@ 9394 @LENGTH@ 20
------------------DEL SimpleName@@data @AT@ 9400 @LENGTH@ 4
------------------DEL NumberLiteral@@0 @AT@ 9406 @LENGTH@ 1
------------------DEL SimpleName@@read @AT@ 9409 @LENGTH@ 4
---------DEL ExpressionStatement@@Assignment:read=stream.read(data) @AT@ 9428 @LENGTH@ 25
------------DEL Assignment@@read=stream.read(data) @AT@ 9428 @LENGTH@ 24
---------------DEL SimpleName@@read @AT@ 9428 @LENGTH@ 4
---------------DEL Operator@@= @AT@ 9432 @LENGTH@ 1
---------------DEL MethodInvocation@@stream.read(data) @AT@ 9435 @LENGTH@ 17
------------------DEL SimpleName@@Name:stream @AT@ 9435 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:read:[data] @AT@ 9442 @LENGTH@ 10
---------------------DEL SimpleName@@data @AT@ 9447 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:os.flush() @AT@ 9472 @LENGTH@ 11
------DEL MethodInvocation@@os.flush() @AT@ 9472 @LENGTH@ 10
---------DEL SimpleName@@Name:os @AT@ 9472 @LENGTH@ 2
---------DEL SimpleName@@MethodName:flush:[] @AT@ 9475 @LENGTH@ 7


DEL IfStatement@@if (System.getProperty("os.name").startsWith("Windows")) {  sendExchange(expectedBody);} @AT@ 1634 @LENGTH@ 212
---DEL MethodInvocation@@System.getProperty("os.name").startsWith("Windows") @AT@ 1638 @LENGTH@ 51
------DEL MethodInvocation@@MethodName:getProperty:["os.name"] @AT@ 1638 @LENGTH@ 29
---------DEL StringLiteral@@"os.name" @AT@ 1657 @LENGTH@ 9
------DEL SimpleName@@Name:System @AT@ 1638 @LENGTH@ 6
------DEL SimpleName@@MethodName:startsWith:["Windows"] @AT@ 1668 @LENGTH@ 21
---------DEL StringLiteral@@"Windows" @AT@ 1679 @LENGTH@ 9
---DEL Block@@ThenBody:{  sendExchange(expectedBody);} @AT@ 1691 @LENGTH@ 155
------DEL ExpressionStatement@@MethodInvocation:sendExchange(expectedBody) @AT@ 1809 @LENGTH@ 27
---------DEL MethodInvocation@@sendExchange(expectedBody) @AT@ 1809 @LENGTH@ 26
------------DEL SimpleName@@MethodName:sendExchange:[expectedBody] @AT@ 1809 @LENGTH@ 26
---------------DEL SimpleName@@expectedBody @AT@ 1822 @LENGTH@ 12


DEL ExpressionStatement@@MethodInvocation:getService().getOutInterceptors().add(new SoapActionOutInterceptor()) @AT@ 4273 @LENGTH@ 70
---DEL MethodInvocation@@getService().getOutInterceptors().add(new SoapActionOutInterceptor()) @AT@ 4273 @LENGTH@ 69
------DEL MethodInvocation@@MethodName:getOutInterceptors:[] @AT@ 4273 @LENGTH@ 33
------DEL MethodInvocation@@MethodName:getService:[] @AT@ 4273 @LENGTH@ 12
------DEL SimpleName@@MethodName:add:[new SoapActionOutInterceptor()] @AT@ 4307 @LENGTH@ 35
---------DEL ClassInstanceCreation@@SoapActionOutInterceptor[] @AT@ 4311 @LENGTH@ 30
------------DEL New@@new @AT@ 4311 @LENGTH@ 3
------------DEL SimpleType@@SoapActionOutInterceptor @AT@ 4315 @LENGTH@ 24


UPD MethodDeclaration@@private, String, MethodName:getFtpUrl,  @TO@ protected, String, MethodName:getFtpUrl,  @AT@ 1366 @LENGTH@ 153
---UPD Modifier@@private @TO@ protected @AT@ 1366 @LENGTH@ 7


UPD ReturnStatement@@InfixExpression:expression + ".matches(" + pattern+ ")" @TO@ InfixExpression:expression + ".matches('" + pattern+ "')" @AT@ 9737 @LENGTH@ 48
---UPD InfixExpression@@expression + ".matches(" + pattern+ ")" @TO@ expression + ".matches('" + pattern+ "')" @AT@ 9744 @LENGTH@ 40
------UPD StringLiteral@@".matches(" @TO@ ".matches('" @AT@ 9757 @LENGTH@ 11
------UPD StringLiteral@@")" @TO@ "')" @AT@ 9781 @LENGTH@ 3


UPD IfStatement@@if (body == null || !file.getAbsoluteFileName().equals(body.getAbsolutePath())) {  body=new File(file.getAbsoluteFileName());} @TO@ if (body == null || !file.getAbsoluteFilePath().equals(body.getAbsolutePath())) {  body=new File(file.getAbsoluteFilePath());} @AT@ 1630 @LENGTH@ 148
---UPD InfixExpression@@body == null || !file.getAbsoluteFileName().equals(body.getAbsolutePath()) @TO@ body == null || !file.getAbsoluteFilePath().equals(body.getAbsolutePath()) @AT@ 1634 @LENGTH@ 74
------UPD PrefixExpression@@!file.getAbsoluteFileName().equals(body.getAbsolutePath()) @TO@ !file.getAbsoluteFilePath().equals(body.getAbsolutePath()) @AT@ 1650 @LENGTH@ 58
---------UPD MethodInvocation@@file.getAbsoluteFileName().equals(body.getAbsolutePath()) @TO@ file.getAbsoluteFilePath().equals(body.getAbsolutePath()) @AT@ 1651 @LENGTH@ 57
------------UPD MethodInvocation@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 1651 @LENGTH@ 26
---UPD Block@@ThenBody:{  body=new File(file.getAbsoluteFileName());} @TO@ ThenBody:{  body=new File(file.getAbsoluteFilePath());} @AT@ 1710 @LENGTH@ 68
------UPD ExpressionStatement@@Assignment:body=new File(file.getAbsoluteFileName()) @TO@ Assignment:body=new File(file.getAbsoluteFilePath()) @AT@ 1724 @LENGTH@ 44
---------UPD Assignment@@body=new File(file.getAbsoluteFileName()) @TO@ body=new File(file.getAbsoluteFilePath()) @AT@ 1724 @LENGTH@ 43
------------UPD ClassInstanceCreation@@File[file.getAbsoluteFileName()] @TO@ File[file.getAbsoluteFilePath()] @AT@ 1731 @LENGTH@ 36
---------------UPD MethodInvocation@@file.getAbsoluteFileName() @TO@ file.getAbsoluteFilePath() @AT@ 1740 @LENGTH@ 26
------------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 1745 @LENGTH@ 21


UPD IfStatement@@if (classes.size() == 0) {  LOG.debug("Using only regular classloaders");  for (  ClassLoader classLoader : set.toArray(new ClassLoader[set.size()])) {    if (!isOsgiClassloader(classLoader)) {      find(test,packageName,classLoader,classes);    }  }} @TO@ if (classes.size() == classesSize) {  LOG.debug("Using only regular classloaders");  for (  ClassLoader classLoader : set.toArray(new ClassLoader[set.size()])) {    if (!isOsgiClassloader(classLoader)) {      find(test,packageName,classLoader,classes);    }  }} @AT@ 2328 @LENGTH@ 395
---UPD InfixExpression@@classes.size() == 0 @TO@ classes.size() == classesSize @AT@ 2332 @LENGTH@ 19
------DEL NumberLiteral@@0 @AT@ 2350 @LENGTH@ 1
------INS SimpleName@@classesSize @TO@ InfixExpression@@classes.size() == 0 @AT@ 2392 @LENGTH@ 11


DEL ExpressionStatement@@MethodInvocation:getOutFilter().add(GZIPHelper.CONTENT_ENCODING.toLowerCase()) @AT@ 1278 @LENGTH@ 62
---DEL MethodInvocation@@getOutFilter().add(GZIPHelper.CONTENT_ENCODING.toLowerCase()) @AT@ 1278 @LENGTH@ 61
------DEL MethodInvocation@@MethodName:getOutFilter:[] @AT@ 1278 @LENGTH@ 14
------DEL SimpleName@@MethodName:add:[GZIPHelper.CONTENT_ENCODING.toLowerCase()] @AT@ 1293 @LENGTH@ 46
---------DEL MethodInvocation@@GZIPHelper.CONTENT_ENCODING.toLowerCase() @AT@ 1297 @LENGTH@ 41
------------DEL QualifiedName@@Name:GZIPHelper.CONTENT_ENCODING @AT@ 1297 @LENGTH@ 27
------------DEL SimpleName@@MethodName:toLowerCase:[] @AT@ 1325 @LENGTH@ 13


UPD MethodDeclaration@@private, static, boolean, MethodName:containsGzip, String str,  @TO@ public, static, boolean, MethodName:containsGzip, String str,  @AT@ 4567 @LENGTH@ 123
---UPD Modifier@@private @TO@ public @AT@ 4567 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:endpoint.setOperations(new FileOperations(endpoint)) @AT@ 5618 @LENGTH@ 53
---DEL MethodInvocation@@endpoint.setOperations(new FileOperations(endpoint)) @AT@ 5618 @LENGTH@ 52
------DEL SimpleName@@Name:endpoint @AT@ 5618 @LENGTH@ 8
------DEL SimpleName@@MethodName:setOperations:[new FileOperations(endpoint)] @AT@ 5627 @LENGTH@ 43
---------DEL ClassInstanceCreation@@FileOperations[endpoint] @AT@ 5641 @LENGTH@ 28
------------DEL New@@new @AT@ 5641 @LENGTH@ 3
------------DEL SimpleType@@FileOperations @AT@ 5645 @LENGTH@ 14
------------DEL SimpleName@@endpoint @AT@ 5660 @LENGTH@ 8


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[private]MyLocalDateTimeConverter, [TypeConverter] @AT@ 2842 @LENGTH@ 134
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2842 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2853 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2855 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2874 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2874 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2874 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2880 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2883 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2889 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2889 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2898 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2908 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2908 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2915 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2936 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 2943 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 2943 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2953 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2959 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:source.setStrict(false) @TO@ MethodDeclaration@@public, void, MethodName:testNonExistentResource, Exception,  @AT@ 6165 @LENGTH@ 24
---INS MethodInvocation@@source.setStrict(false) @TO@ ExpressionStatement@@MethodInvocation:source.setStrict(false) @AT@ 6165 @LENGTH@ 23
------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.setStrict(false) @AT@ 6165 @LENGTH@ 6
------INS SimpleName@@MethodName:setStrict:[false] @TO@ MethodInvocation@@source.setStrict(false) @AT@ 6172 @LENGTH@ 16
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setStrict:[false] @AT@ 6182 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertTrue(fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1) @TO@ MethodInvocation:assertTrue(fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1) @AT@ 3066 @LENGTH@ 81
---UPD MethodInvocation@@assertTrue(fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1) @TO@ assertTrue(fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1) @AT@ 3066 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertTrue:[fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1] @TO@ MethodName:assertTrue:[fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1] @AT@ 3066 @LENGTH@ 80
---------UPD InfixExpression@@fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1 @TO@ fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1 @AT@ 3077 @LENGTH@ 68
------------UPD MethodInvocation@@fe.getGenericFile().getRelativeFileName().indexOf("inprogress") @TO@ fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") @AT@ 3077 @LENGTH@ 63
---------------UPD MethodInvocation@@MethodName:getRelativeFileName:[] @TO@ MethodName:getRelativeFilePath:[] @AT@ 3077 @LENGTH@ 41


UPD IfStatement@@if (change.type() == Change.TYPE_DELETE) {  String target=change.targetFile();  if (source.equals(target)) {    return true;  }  return source.matches(target + "/.*");} @TO@ if (change.type() == Change.TYPE_DELETE || change.type() == Change.TYPE_DELETE_DIR) {  String target=change.targetFile();  if (source.equals(target)) {    return true;  }  return source.matches(target + "/.*");} @AT@ 4316 @LENGTH@ 286
---INS InfixExpression@@change.type() == Change.TYPE_DELETE || change.type() == Change.TYPE_DELETE_DIR @TO@ IfStatement@@if (change.type() == Change.TYPE_DELETE) {  String target=change.targetFile();  if (source.equals(target)) {    return true;  }  return source.matches(target + "/.*");} @AT@ 4455 @LENGTH@ 78
------MOV InfixExpression@@change.type() == Change.TYPE_DELETE @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE || change.type() == Change.TYPE_DELETE_DIR @AT@ 4320 @LENGTH@ 35
------INS Operator@@|| @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE || change.type() == Change.TYPE_DELETE_DIR @AT@ 4490 @LENGTH@ 2
------INS InfixExpression@@change.type() == Change.TYPE_DELETE_DIR @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE || change.type() == Change.TYPE_DELETE_DIR @AT@ 4494 @LENGTH@ 39
---------INS MethodInvocation@@change.type() @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR @AT@ 4494 @LENGTH@ 13
------------INS SimpleName@@Name:change @TO@ MethodInvocation@@change.type() @AT@ 4494 @LENGTH@ 6
------------INS SimpleName@@MethodName:type:[] @TO@ MethodInvocation@@change.type() @AT@ 4501 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR @AT@ 4507 @LENGTH@ 2
---------INS QualifiedName@@Change.TYPE_DELETE_DIR @TO@ InfixExpression@@change.type() == Change.TYPE_DELETE_DIR @AT@ 4511 @LENGTH@ 22
------------INS SimpleName@@Change @TO@ QualifiedName@@Change.TYPE_DELETE_DIR @AT@ 4511 @LENGTH@ 6
------------INS SimpleName@@TYPE_DELETE_DIR @TO@ QualifiedName@@Change.TYPE_DELETE_DIR @AT@ 4518 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:from("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    assertEquals(70010,exchange.getIn().getBody().toString().length());
    MDM_T02 input=(MDM_T02)exchange.getIn().getBody(Message.class);
    assertEquals("2.5",input.getVersion());
    MSH msh=input.getMSH();
    assertEquals("20071129144629",msh.getDateTimeOfMessage().getTime().getValue());
    exchange.getOut().setBody("some response");
  }
}
).to("mock:result") @TO@ MethodInvocation:from("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    assertEquals(70010,exchange.getIn().getBody().toString().length());
    MDM_T02 input=(MDM_T02)exchange.getIn().getBody(Message.class);
    assertEquals("2.5",input.getVersion());
    MSH msh=input.getMSH();
    assertEquals("20071129144629",msh.getDateTimeOfMessage().getTime().getValue());
    exchange.getOut().setBody("some response");
  }
}
).to("mock:result") @AT@ 1852 @LENGTH@ 692
---UPD MethodInvocation@@from("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    assertEquals(70010,exchange.getIn().getBody().toString().length());
    MDM_T02 input=(MDM_T02)exchange.getIn().getBody(Message.class);
    assertEquals("2.5",input.getVersion());
    MSH msh=input.getMSH();
    assertEquals("20071129144629",msh.getDateTimeOfMessage().getTime().getValue());
    exchange.getOut().setBody("some response");
  }
}
).to("mock:result") @TO@ from("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    assertEquals(70010,exchange.getIn().getBody().toString().length());
    MDM_T02 input=(MDM_T02)exchange.getIn().getBody(Message.class);
    assertEquals("2.5",input.getVersion());
    MSH msh=input.getMSH();
    assertEquals("20071129144629",msh.getDateTimeOfMessage().getTime().getValue());
    exchange.getOut().setBody("some response");
  }
}
).to("mock:result") @AT@ 1852 @LENGTH@ 691
------UPD MethodInvocation@@MethodName:from:["mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec"] @TO@ MethodName:from:["mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec"] @AT@ 1852 @LENGTH@ 57
---------UPD StringLiteral@@"mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec" @TO@ "mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec" @AT@ 1857 @LENGTH@ 51


UPD FieldDeclaration@@private, String, [result="10,A1,Julia,Roberts,BE123456789,Belgium Ventage 10/12,150,USD,14-01-2009"] @TO@ private, String, [result="10,A1,Julia,Roberts,BE123456789,Belgium Ventage 10/12,150,USD,14-01-2009\r\n"] @AT@ 2186 @LENGTH@ 99
---UPD VariableDeclarationFragment@@result="10,A1,Julia,Roberts,BE123456789,Belgium Ventage 10/12,150,USD,14-01-2009" @TO@ result="10,A1,Julia,Roberts,BE123456789,Belgium Ventage 10/12,150,USD,14-01-2009\r\n" @AT@ 2201 @LENGTH@ 83
------UPD StringLiteral@@"10,A1,Julia,Roberts,BE123456789,Belgium Ventage 10/12,150,USD,14-01-2009" @TO@ "10,A1,Julia,Roberts,BE123456789,Belgium Ventage 10/12,150,USD,14-01-2009\r\n" @AT@ 2210 @LENGTH@ 74


UPD TypeDeclaration@@[@XmlRootElement(name="filter"), @XmlAccessorType(XmlAccessType.FIELD), public]FilterDefinition, ExpressionNode[Block] @TO@ [@XmlRootElement(name="filter"), @XmlAccessorType(XmlAccessType.FIELD), public]FilterDefinition, ExpressionNode @AT@ 1304 @LENGTH@ 1069
---DEL SimpleType@@Block @AT@ 1439 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testGetHandlerNullFlowId, Exception,  @TO@ TypeDeclaration@@[public]FlowHandlerMappingTests, TestCase @AT@ 2986 @LENGTH@ 207
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetHandlerNullFlowId, Exception,  @AT@ 2986 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetHandlerNullFlowId, Exception,  @AT@ 2993 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetHandlerNullFlowId @TO@ MethodDeclaration@@public, void, MethodName:testGetHandlerNullFlowId, Exception,  @AT@ 2998 @LENGTH@ 24
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testGetHandlerNullFlowId, Exception,  @AT@ 3032 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:testGetHandlerNullFlowId, Exception,  @AT@ 3046 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 3046 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 3069 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 3069 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 3079 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 3079 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 3083 @LENGTH@ 22
---INS VariableDeclarationStatement@@HandlerExecutionChain chain=mapping.getHandler(request); @TO@ MethodDeclaration@@public, void, MethodName:testGetHandlerNullFlowId, Exception,  @AT@ 3111 @LENGTH@ 58
------INS SimpleType@@HandlerExecutionChain @TO@ VariableDeclarationStatement@@HandlerExecutionChain chain=mapping.getHandler(request); @AT@ 3111 @LENGTH@ 21
------INS VariableDeclarationFragment@@chain=mapping.getHandler(request) @TO@ VariableDeclarationStatement@@HandlerExecutionChain chain=mapping.getHandler(request); @AT@ 3133 @LENGTH@ 35
---------INS SimpleName@@chain @TO@ VariableDeclarationFragment@@chain=mapping.getHandler(request) @AT@ 3133 @LENGTH@ 5
---------INS MethodInvocation@@mapping.getHandler(request) @TO@ VariableDeclarationFragment@@chain=mapping.getHandler(request) @AT@ 3141 @LENGTH@ 27
------------INS SimpleName@@Name:mapping @TO@ MethodInvocation@@mapping.getHandler(request) @AT@ 3141 @LENGTH@ 7
------------INS SimpleName@@MethodName:getHandler:[request] @TO@ MethodInvocation@@mapping.getHandler(request) @AT@ 3149 @LENGTH@ 19
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:getHandler:[request] @AT@ 3160 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertNull(chain) @TO@ MethodDeclaration@@public, void, MethodName:testGetHandlerNullFlowId, Exception,  @AT@ 3172 @LENGTH@ 18
------INS MethodInvocation@@assertNull(chain) @TO@ ExpressionStatement@@MethodInvocation:assertNull(chain) @AT@ 3172 @LENGTH@ 17
---------INS SimpleName@@MethodName:assertNull:[chain] @TO@ MethodInvocation@@assertNull(chain) @AT@ 3172 @LENGTH@ 17
------------INS SimpleName@@chain @TO@ SimpleName@@MethodName:assertNull:[chain] @AT@ 3183 @LENGTH@ 5


UPD TypeDeclaration@@[public]CamelJmxConnectorSupport,  @TO@ [public, final]CamelJmxConnectorSupport,  @AT@ 986 @LENGTH@ 741
---INS Modifier@@final @TO@ TypeDeclaration@@[public]CamelJmxConnectorSupport,  @AT@ 996 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:name=FileUtil.normalizePath(name) @TO@ Assignment:answer=FileUtil.normalizePath(answer) @AT@ 7277 @LENGTH@ 36
---UPD Assignment@@name=FileUtil.normalizePath(name) @TO@ answer=FileUtil.normalizePath(answer) @AT@ 7277 @LENGTH@ 35
------UPD SimpleName@@name @TO@ answer @AT@ 7277 @LENGTH@ 4
------UPD MethodInvocation@@FileUtil.normalizePath(name) @TO@ FileUtil.normalizePath(answer) @AT@ 7284 @LENGTH@ 28
---------UPD SimpleName@@MethodName:normalizePath:[name] @TO@ MethodName:normalizePath:[answer] @AT@ 7293 @LENGTH@ 19
------------UPD SimpleName@@name @TO@ answer @AT@ 7307 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:testCopy, IOException,  @TO@ public, void, MethodName:testCopy, Exception,  @AT@ 1656 @LENGTH@ 272
---UPD SimpleType@@IOException @TO@ Exception @AT@ 1686 @LENGTH@ 11
---UPD ExpressionStatement@@MethodInvocation:IOConverter.copy(bis,bos) @TO@ MethodInvocation:IOHelper.copy(bis,bos) @AT@ 1844 @LENGTH@ 27
------UPD MethodInvocation@@IOConverter.copy(bis,bos) @TO@ IOHelper.copy(bis,bos) @AT@ 1844 @LENGTH@ 26
---------UPD SimpleName@@Name:IOConverter @TO@ Name:IOHelper @AT@ 1844 @LENGTH@ 11


DEL ExpressionStatement@@MethodInvocation:assertFalse("File should been deleted",new File("target/files/.camel/report.txt").getAbsoluteFile().exists()) @AT@ 2072 @LENGTH@ 111
---DEL MethodInvocation@@assertFalse("File should been deleted",new File("target/files/.camel/report.txt").getAbsoluteFile().exists()) @AT@ 2072 @LENGTH@ 110
------DEL SimpleName@@MethodName:assertFalse:["File should been deleted", new File("target/files/.camel/report.txt").getAbsoluteFile().exists()] @AT@ 2072 @LENGTH@ 110
---------DEL StringLiteral@@"File should been deleted" @AT@ 2084 @LENGTH@ 26
---------DEL MethodInvocation@@new File("target/files/.camel/report.txt").getAbsoluteFile().exists() @AT@ 2112 @LENGTH@ 69
------------DEL MethodInvocation@@MethodName:getAbsoluteFile:[] @AT@ 2112 @LENGTH@ 60
------------DEL ClassInstanceCreation@@File["target/files/.camel/report.txt"] @AT@ 2112 @LENGTH@ 42
---------------DEL New@@new @AT@ 2112 @LENGTH@ 3
---------------DEL SimpleType@@File @AT@ 2116 @LENGTH@ 4
---------------DEL StringLiteral@@"target/files/.camel/report.txt" @AT@ 2121 @LENGTH@ 32
------------DEL SimpleName@@MethodName:exists:[] @AT@ 2173 @LENGTH@ 8


UPD Block@@ThenBody:{  LOG.info("The jmsMessage is not set yet, call the super's createMessageId");  return super.createMessageId();} @TO@ ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("No javax.jms.Message set so generating a new message id");  }  return super.createMessageId();} @AT@ 5611 @LENGTH@ 144
---INS IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("No javax.jms.Message set so generating a new message id");} @TO@ Block@@ThenBody:{  LOG.info("The jmsMessage is not set yet, call the super's createMessageId");  return super.createMessageId();} @AT@ 5624 @LENGTH@ 127
------INS MethodInvocation@@LOG.isTraceEnabled() @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("No javax.jms.Message set so generating a new message id");} @AT@ 5628 @LENGTH@ 20
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 5628 @LENGTH@ 3
---------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 5632 @LENGTH@ 16
------INS Block@@ThenBody:{  LOG.trace("No javax.jms.Message set so generating a new message id");} @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("No javax.jms.Message set so generating a new message id");} @AT@ 5650 @LENGTH@ 101
---------MOV ExpressionStatement@@MethodInvocation:LOG.info("The jmsMessage is not set yet, call the super's createMessageId") @TO@ Block@@ThenBody:{  LOG.trace("No javax.jms.Message set so generating a new message id");} @AT@ 5625 @LENGTH@ 76
------------UPD MethodInvocation@@LOG.info("The jmsMessage is not set yet, call the super's createMessageId") @TO@ LOG.trace("No javax.jms.Message set so generating a new message id") @AT@ 5625 @LENGTH@ 75
---------------UPD SimpleName@@MethodName:info:["The jmsMessage is not set yet, call the super's createMessageId"] @TO@ MethodName:trace:["No javax.jms.Message set so generating a new message id"] @AT@ 5629 @LENGTH@ 71
------------------UPD StringLiteral@@"The jmsMessage is not set yet, call the super's createMessageId" @TO@ "No javax.jms.Message set so generating a new message id" @AT@ 5634 @LENGTH@ 65
---UPD ExpressionStatement@@MethodInvocation:LOG.info("The jmsMessage is not set yet, call the super's createMessageId") @TO@ MethodInvocation:LOG.trace("No javax.jms.Message set so generating a new message id") @AT@ 5625 @LENGTH@ 76


INS MethodDeclaration@@public, boolean, MethodName:isSingleton,  @TO@ TypeDeclaration@@[public]RemoteFileProducer, GenericFileProducer<T> @AT@ 4715 @LENGTH@ 149
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isSingleton,  @AT@ 4715 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isSingleton,  @AT@ 4722 @LENGTH@ 7
---INS SimpleName@@MethodName:isSingleton @TO@ MethodDeclaration@@public, boolean, MethodName:isSingleton,  @AT@ 4730 @LENGTH@ 11
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:isSingleton,  @AT@ 4845 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4852 @LENGTH@ 5


UPD WhileStatement@@while (e.hasMoreElements()) {  ZipEntry ze=(ZipEntry)e.nextElement();  OffsetEntry offsetEntry=(OffsetEntry)entries.get(ze);  long offset=offsetEntry.headerOffset;  archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);  byte[] b=new byte[SHORT];  archive.readFully(b);  int fileNameLen=ZipShort.getValue(b);  archive.readFully(b);  int extraFieldLen=ZipShort.getValue(b);  archive.skipBytes(fileNameLen);  byte[] localExtraData=new byte[extraFieldLen];  archive.readFully(localExtraData);  ze.setExtra(localExtraData);  offsetEntry.dataOffset=offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT+ SHORT+ fileNameLen+ extraFieldLen;} @TO@ while (e.hasMoreElements()) {  ZipEntry ze=(ZipEntry)e.nextElement();  OffsetEntry offsetEntry=(OffsetEntry)entries.get(ze);  long offset=offsetEntry.headerOffset;  archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);  byte[] b=new byte[SHORT];  archive.readFully(b);  int fileNameLen=ZipShort.getValue(b);  archive.readFully(b);  int extraFieldLen=ZipShort.getValue(b);  int lenToSkip=fileNameLen;  while (lenToSkip > 0) {    int skipped=archive.skipBytes(lenToSkip);    if (skipped <= 0) {      throw new RuntimeException("failed to skip file name in" + " local file header");    }    lenToSkip-=skipped;  }  byte[] localExtraData=new byte[extraFieldLen];  archive.readFully(localExtraData);  ze.setExtra(localExtraData);  offsetEntry.dataOffset=offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT+ SHORT+ fileNameLen+ extraFieldLen;} @AT@ 15974 @LENGTH@ 1061
---UPD Block@@WhileBody:{  ZipEntry ze=(ZipEntry)e.nextElement();  OffsetEntry offsetEntry=(OffsetEntry)entries.get(ze);  long offset=offsetEntry.headerOffset;  archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);  byte[] b=new byte[SHORT];  archive.readFully(b);  int fileNameLen=ZipShort.getValue(b);  archive.readFully(b);  int extraFieldLen=ZipShort.getValue(b);  archive.skipBytes(fileNameLen);  byte[] localExtraData=new byte[extraFieldLen];  archive.readFully(localExtraData);  ze.setExtra(localExtraData);  offsetEntry.dataOffset=offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT+ SHORT+ fileNameLen+ extraFieldLen;} @TO@ WhileBody:{  ZipEntry ze=(ZipEntry)e.nextElement();  OffsetEntry offsetEntry=(OffsetEntry)entries.get(ze);  long offset=offsetEntry.headerOffset;  archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);  byte[] b=new byte[SHORT];  archive.readFully(b);  int fileNameLen=ZipShort.getValue(b);  archive.readFully(b);  int extraFieldLen=ZipShort.getValue(b);  int lenToSkip=fileNameLen;  while (lenToSkip > 0) {    int skipped=archive.skipBytes(lenToSkip);    if (skipped <= 0) {      throw new RuntimeException("failed to skip file name in" + " local file header");    }    lenToSkip-=skipped;  }  byte[] localExtraData=new byte[extraFieldLen];  archive.readFully(localExtraData);  ze.setExtra(localExtraData);  offsetEntry.dataOffset=offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT+ SHORT+ fileNameLen+ extraFieldLen;} @AT@ 16002 @LENGTH@ 1033
------DEL ExpressionStatement@@MethodInvocation:archive.skipBytes(fileNameLen) @AT@ 16472 @LENGTH@ 31
---------DEL MethodInvocation@@archive.skipBytes(fileNameLen) @AT@ 16472 @LENGTH@ 30
------INS VariableDeclarationStatement@@int lenToSkip=fileNameLen; @TO@ Block@@WhileBody:{  ZipEntry ze=(ZipEntry)e.nextElement();  OffsetEntry offsetEntry=(OffsetEntry)entries.get(ze);  long offset=offsetEntry.headerOffset;  archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);  byte[] b=new byte[SHORT];  archive.readFully(b);  int fileNameLen=ZipShort.getValue(b);  archive.readFully(b);  int extraFieldLen=ZipShort.getValue(b);  archive.skipBytes(fileNameLen);  byte[] localExtraData=new byte[extraFieldLen];  archive.readFully(localExtraData);  ze.setExtra(localExtraData);  offsetEntry.dataOffset=offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT+ SHORT+ fileNameLen+ extraFieldLen;} @AT@ 16833 @LENGTH@ 28
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int lenToSkip=fileNameLen; @AT@ 16833 @LENGTH@ 3
---------INS VariableDeclarationFragment@@lenToSkip=fileNameLen @TO@ VariableDeclarationStatement@@int lenToSkip=fileNameLen; @AT@ 16837 @LENGTH@ 23
------------INS SimpleName@@lenToSkip @TO@ VariableDeclarationFragment@@lenToSkip=fileNameLen @AT@ 16837 @LENGTH@ 9
------------INS SimpleName@@fileNameLen @TO@ VariableDeclarationFragment@@lenToSkip=fileNameLen @AT@ 16849 @LENGTH@ 11
------INS WhileStatement@@while (lenToSkip > 0) {  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip file name in" + " local file header");  }  lenToSkip-=skipped;} @TO@ Block@@WhileBody:{  ZipEntry ze=(ZipEntry)e.nextElement();  OffsetEntry offsetEntry=(OffsetEntry)entries.get(ze);  long offset=offsetEntry.headerOffset;  archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);  byte[] b=new byte[SHORT];  archive.readFully(b);  int fileNameLen=ZipShort.getValue(b);  archive.readFully(b);  int extraFieldLen=ZipShort.getValue(b);  archive.skipBytes(fileNameLen);  byte[] localExtraData=new byte[extraFieldLen];  archive.readFully(localExtraData);  ze.setExtra(localExtraData);  offsetEntry.dataOffset=offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT+ SHORT+ fileNameLen+ extraFieldLen;} @AT@ 16874 @LENGTH@ 338
---------INS InfixExpression@@lenToSkip > 0 @TO@ WhileStatement@@while (lenToSkip > 0) {  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip file name in" + " local file header");  }  lenToSkip-=skipped;} @AT@ 16881 @LENGTH@ 13
------------INS SimpleName@@lenToSkip @TO@ InfixExpression@@lenToSkip > 0 @AT@ 16881 @LENGTH@ 9
------------INS Operator@@> @TO@ InfixExpression@@lenToSkip > 0 @AT@ 16890 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@lenToSkip > 0 @AT@ 16893 @LENGTH@ 1
---------INS Block@@WhileBody:{  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip file name in" + " local file header");  }  lenToSkip-=skipped;} @TO@ WhileStatement@@while (lenToSkip > 0) {  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip file name in" + " local file header");  }  lenToSkip-=skipped;} @AT@ 16896 @LENGTH@ 316
------------INS VariableDeclarationStatement@@int skipped=archive.skipBytes(lenToSkip); @TO@ Block@@WhileBody:{  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip file name in" + " local file header");  }  lenToSkip-=skipped;} @AT@ 16914 @LENGTH@ 43
---------------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int skipped=archive.skipBytes(lenToSkip); @AT@ 16914 @LENGTH@ 3
---------------INS VariableDeclarationFragment@@skipped=archive.skipBytes(lenToSkip) @TO@ VariableDeclarationStatement@@int skipped=archive.skipBytes(lenToSkip); @AT@ 16918 @LENGTH@ 38
------------------INS SimpleName@@skipped @TO@ VariableDeclarationFragment@@skipped=archive.skipBytes(lenToSkip) @AT@ 16918 @LENGTH@ 7
------------------INS MethodInvocation@@archive.skipBytes(lenToSkip) @TO@ VariableDeclarationFragment@@skipped=archive.skipBytes(lenToSkip) @AT@ 16928 @LENGTH@ 28
---------------------MOV SimpleName@@Name:archive @TO@ MethodInvocation@@archive.skipBytes(lenToSkip) @AT@ 16472 @LENGTH@ 7
---------------------MOV SimpleName@@MethodName:skipBytes:[fileNameLen] @TO@ MethodInvocation@@archive.skipBytes(lenToSkip) @AT@ 16480 @LENGTH@ 22
------------------------UPD SimpleName@@fileNameLen @TO@ lenToSkip @AT@ 16490 @LENGTH@ 11
------------INS IfStatement@@if (skipped <= 0) {  throw new RuntimeException("failed to skip file name in" + " local file header");} @TO@ Block@@WhileBody:{  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip file name in" + " local file header");  }  lenToSkip-=skipped;} @AT@ 16974 @LENGTH@ 186
---------------INS InfixExpression@@skipped <= 0 @TO@ IfStatement@@if (skipped <= 0) {  throw new RuntimeException("failed to skip file name in" + " local file header");} @AT@ 16978 @LENGTH@ 12
------------------INS SimpleName@@skipped @TO@ InfixExpression@@skipped <= 0 @AT@ 16978 @LENGTH@ 7
------------------INS Operator@@<= @TO@ InfixExpression@@skipped <= 0 @AT@ 16985 @LENGTH@ 2
------------------INS NumberLiteral@@0 @TO@ InfixExpression@@skipped <= 0 @AT@ 16989 @LENGTH@ 1
---------------INS Block@@ThenBody:{  throw new RuntimeException("failed to skip file name in" + " local file header");} @TO@ IfStatement@@if (skipped <= 0) {  throw new RuntimeException("failed to skip file name in" + " local file header");} @AT@ 16992 @LENGTH@ 168
------------------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("failed to skip file name in" + " local file header") @TO@ Block@@ThenBody:{  throw new RuntimeException("failed to skip file name in" + " local file header");} @AT@ 17014 @LENGTH@ 128
---------------------INS ClassInstanceCreation@@RuntimeException["failed to skip file name in" + " local file header"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("failed to skip file name in" + " local file header") @AT@ 17020 @LENGTH@ 121
------------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["failed to skip file name in" + " local file header"] @AT@ 17020 @LENGTH@ 3
------------------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["failed to skip file name in" + " local file header"] @AT@ 17024 @LENGTH@ 16
------------------------INS InfixExpression@@"failed to skip file name in" + " local file header" @TO@ ClassInstanceCreation@@RuntimeException["failed to skip file name in" + " local file header"] @AT@ 17041 @LENGTH@ 99
---------------------------INS StringLiteral@@"failed to skip file name in" @TO@ InfixExpression@@"failed to skip file name in" + " local file header" @AT@ 17041 @LENGTH@ 29
---------------------------INS Operator@@+ @TO@ InfixExpression@@"failed to skip file name in" + " local file header" @AT@ 17070 @LENGTH@ 1
---------------------------INS StringLiteral@@" local file header" @TO@ InfixExpression@@"failed to skip file name in" + " local file header" @AT@ 17120 @LENGTH@ 20
------------INS ExpressionStatement@@Assignment:lenToSkip-=skipped @TO@ Block@@WhileBody:{  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip file name in" + " local file header");  }  lenToSkip-=skipped;} @AT@ 17177 @LENGTH@ 21
---------------INS Assignment@@lenToSkip-=skipped @TO@ ExpressionStatement@@Assignment:lenToSkip-=skipped @AT@ 17177 @LENGTH@ 20
------------------INS SimpleName@@lenToSkip @TO@ Assignment@@lenToSkip-=skipped @AT@ 17177 @LENGTH@ 9
------------------INS Operator@@-= @TO@ Assignment@@lenToSkip-=skipped @AT@ 17186 @LENGTH@ 2
------------------INS SimpleName@@skipped @TO@ Assignment@@lenToSkip-=skipped @AT@ 17190 @LENGTH@ 7


INS IfStatement@@if (name == null) {  return null;} @TO@ MethodDeclaration@@public, static, String, MethodName:stripLeadingSeparator, String name,  @AT@ 10547 @LENGTH@ 54
---INS InfixExpression@@name == null @TO@ IfStatement@@if (name == null) {  return null;} @AT@ 10551 @LENGTH@ 12
------INS SimpleName@@name @TO@ InfixExpression@@name == null @AT@ 10551 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@name == null @AT@ 10555 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@name == null @AT@ 10559 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (name == null) {  return null;} @AT@ 10565 @LENGTH@ 36
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 10579 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 10586 @LENGTH@ 4


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]EnumTypeConverter, [TypeConverter] @AT@ 2047 @LENGTH@ 134
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2047 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2058 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2060 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2079 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2079 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2079 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2085 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2088 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2094 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2094 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2101 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2145 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 2152 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 2152 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2162 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2168 @LENGTH@ 5


INS MethodDeclaration@@private, voidMethodName:RubyCamel,  @TO@ TypeDeclaration@@[public]RubyCamel,  @AT@ 1219 @LENGTH@ 51
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:RubyCamel,  @AT@ 1219 @LENGTH@ 7
---INS SimpleName@@MethodName:RubyCamel @TO@ MethodDeclaration@@private, voidMethodName:RubyCamel,  @AT@ 1227 @LENGTH@ 9


INS MethodDeclaration@@public, Object, MethodName:clone,  @TO@ TypeDeclaration@@[public, final]ZipLong, [Cloneable] @AT@ 4705 @LENGTH@ 221
---INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:clone,  @AT@ 4705 @LENGTH@ 6
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:clone,  @AT@ 4712 @LENGTH@ 6
---INS SimpleName@@MethodName:clone @TO@ MethodDeclaration@@public, Object, MethodName:clone,  @AT@ 4719 @LENGTH@ 5
---INS TryStatement@@try {  return (ZipLong)super.clone();} catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @TO@ MethodDeclaration@@public, Object, MethodName:clone,  @AT@ 4737 @LENGTH@ 183
------INS ReturnStatement@@CastExpression:(ZipLong)super.clone() @TO@ TryStatement@@try {  return (ZipLong)super.clone();} catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 4755 @LENGTH@ 31
---------INS CastExpression@@(ZipLong)super.clone() @TO@ ReturnStatement@@CastExpression:(ZipLong)super.clone() @AT@ 4762 @LENGTH@ 23
------------INS SimpleType@@ZipLong @TO@ CastExpression@@(ZipLong)super.clone() @AT@ 4763 @LENGTH@ 7
------------INS SuperMethodInvocation@@super.clone() @TO@ CastExpression@@(ZipLong)super.clone() @AT@ 4772 @LENGTH@ 13
---------------INS SimpleName@@MethodName:clone:[] @TO@ SuperMethodInvocation@@super.clone() @AT@ 4778 @LENGTH@ 5
------INS CatchClause@@catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @TO@ TryStatement@@try {  return (ZipLong)super.clone();} catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 4797 @LENGTH@ 123
---------INS SingleVariableDeclaration@@CloneNotSupportedException cnfe @TO@ CatchClause@@catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 4804 @LENGTH@ 31
------------INS SimpleType@@CloneNotSupportedException @TO@ SingleVariableDeclaration@@CloneNotSupportedException cnfe @AT@ 4804 @LENGTH@ 26
------------INS SimpleName@@cnfe @TO@ SingleVariableDeclaration@@CloneNotSupportedException cnfe @AT@ 4831 @LENGTH@ 4
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(cnfe) @TO@ CatchClause@@catch (CloneNotSupportedException cnfe) {  throw new RuntimeException(cnfe);} @AT@ 4877 @LENGTH@ 33
------------INS ClassInstanceCreation@@RuntimeException[cnfe] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(cnfe) @AT@ 4883 @LENGTH@ 26
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[cnfe] @AT@ 4883 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[cnfe] @AT@ 4887 @LENGTH@ 16
---------------INS SimpleName@@cnfe @TO@ ClassInstanceCreation@@RuntimeException[cnfe] @AT@ 4904 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 1912 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 1912 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 1929 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 1939 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 1939 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:result.setRelativeFileName(source.getRelativeFileName()) @TO@ MethodInvocation:result.setRelativeFilePath(source.getRelativeFilePath()) @AT@ 1746 @LENGTH@ 57
---UPD MethodInvocation@@result.setRelativeFileName(source.getRelativeFileName()) @TO@ result.setRelativeFilePath(source.getRelativeFilePath()) @AT@ 1746 @LENGTH@ 56
------UPD SimpleName@@MethodName:setRelativeFileName:[source.getRelativeFileName()] @TO@ MethodName:setRelativeFilePath:[source.getRelativeFilePath()] @AT@ 1753 @LENGTH@ 49
---------UPD MethodInvocation@@source.getRelativeFileName() @TO@ source.getRelativeFilePath() @AT@ 1773 @LENGTH@ 28
------------UPD SimpleName@@MethodName:getRelativeFileName:[] @TO@ MethodName:getRelativeFilePath:[] @AT@ 1780 @LENGTH@ 21


INS MethodDeclaration@@public, String, MethodName:getLabel,  @TO@ TypeDeclaration@@[@XmlRootElement(name="proceed"), @XmlAccessorType(XmlAccessType.FIELD), public]ProceedType, OutputType<ProcessorType> @AT@ 1520 @LENGTH@ 63
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getLabel,  @AT@ 1520 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getLabel,  @AT@ 1527 @LENGTH@ 6
---INS SimpleName@@MethodName:getLabel @TO@ MethodDeclaration@@public, String, MethodName:getLabel,  @AT@ 1534 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:getShortName() @TO@ MethodDeclaration@@public, String, MethodName:getLabel,  @AT@ 1555 @LENGTH@ 22
------INS MethodInvocation@@MethodName:getShortName:[] @TO@ ReturnStatement@@MethodInvocation:getShortName() @AT@ 1562 @LENGTH@ 14


UPD TypeDeclaration@@ConfigData,  @TO@ [static]ConfigData,  @AT@ 23266 @LENGTH@ 1348
---INS Modifier@@static @TO@ TypeDeclaration@@ConfigData,  @AT@ 23260 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"logo2.png") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"logo2.png") @AT@ 3917 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"logo2.png") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"logo2.png") @AT@ 3917 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "logo2.png"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "logo2.png"] @AT@ 3934 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 3944 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 3944 @LENGTH@ 13


UPD VariableDeclarationStatement@@Object out=template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec","Hello World"); @TO@ Object out=template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec","Hello World"); @AT@ 1851 @LENGTH@ 102
---UPD VariableDeclarationFragment@@out=template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec","Hello World") @TO@ out=template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec","Hello World") @AT@ 1858 @LENGTH@ 94
------UPD MethodInvocation@@template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec","Hello World") @TO@ template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec","Hello World") @AT@ 1864 @LENGTH@ 88
---------UPD SimpleName@@MethodName:requestBody:["mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec", "Hello World"] @TO@ MethodName:requestBody:["mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec", "Hello World"] @AT@ 1873 @LENGTH@ 79
------------UPD StringLiteral@@"mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec" @TO@ "mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec" @AT@ 1885 @LENGTH@ 51


DEL MethodDeclaration@@public, RouteBuilder, MethodName:inheritErrorHandler, boolean inherit,  @AT@ 5060 @LENGTH@ 146
---DEL Modifier@@public @AT@ 5060 @LENGTH@ 6
---DEL SimpleType@@RouteBuilder @AT@ 5067 @LENGTH@ 12
---DEL SimpleName@@MethodName:inheritErrorHandler @AT@ 5080 @LENGTH@ 19
---DEL SingleVariableDeclaration@@boolean inherit @AT@ 5100 @LENGTH@ 15
------DEL PrimitiveType@@boolean @AT@ 5100 @LENGTH@ 7
------DEL SimpleName@@inherit @AT@ 5108 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:routeCollection.setInheritErrorHandlerFlag(inherit) @AT@ 5127 @LENGTH@ 52
------DEL MethodInvocation@@routeCollection.setInheritErrorHandlerFlag(inherit) @AT@ 5127 @LENGTH@ 51
---------DEL SimpleName@@Name:routeCollection @AT@ 5127 @LENGTH@ 15
---------DEL SimpleName@@MethodName:setInheritErrorHandlerFlag:[inherit] @AT@ 5143 @LENGTH@ 35
------------DEL SimpleName@@inherit @AT@ 5170 @LENGTH@ 7
---DEL ReturnStatement@@ThisExpression:this @AT@ 5188 @LENGTH@ 12
------DEL ThisExpression@@this @AT@ 5195 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:testFileMonitor, Exception,  @TO@ public, void, MethodName:testFileMonitor1, Exception,  @AT@ 38656 @LENGTH@ 935
---UPD SimpleName@@MethodName:testFileMonitor @TO@ MethodName:testFileMonitor1 @AT@ 38668 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:output.delete() @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor, Exception,  @AT@ 38938 @LENGTH@ 16
------INS MethodInvocation@@output.delete() @TO@ ExpressionStatement@@MethodInvocation:output.delete() @AT@ 38938 @LENGTH@ 15
---------INS SimpleName@@Name:output @TO@ MethodInvocation@@output.delete() @AT@ 38938 @LENGTH@ 6
---------INS SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@output.delete() @AT@ 38945 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:output.delete() @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor, Exception,  @AT@ 39618 @LENGTH@ 16
------INS MethodInvocation@@output.delete() @TO@ ExpressionStatement@@MethodInvocation:output.delete() @AT@ 39618 @LENGTH@ 15
---------INS SimpleName@@Name:output @TO@ MethodInvocation@@output.delete() @AT@ 39618 @LENGTH@ 6
---------INS SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@output.delete() @AT@ 39625 @LENGTH@ 8


UPD TypeDeclaration@@[private]DataHolder,  @TO@ [private, final]DataHolder,  @AT@ 3172 @LENGTH@ 96
---INS Modifier@@final @TO@ TypeDeclaration@@[private]DataHolder,  @AT@ 3180 @LENGTH@ 5


UPD VariableDeclarationStatement@@Option[] options=options(logProfile(),profile("spring.dm"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(mavenBundle().groupId("org.apache.camel.karaf").artifactId("features").versionAsInProject().type("xml/features"),"camel-core","camel-osgi","camel-spring"),mavenBundle().groupId("org.apache.camel").artifactId("camel-test").versionAsInProject(),knopflerfish()); @TO@ Option[] options=options(logProfile().version("1.3.0"),profile("spring.dm").version("1.2.0"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(mavenBundle().groupId("org.apache.camel.karaf").artifactId("features").versionAsInProject().type("xml/features"),"camel-core","camel-osgi","camel-spring"),mavenBundle().groupId("org.apache.camel").artifactId("camel-test").versionAsInProject(),knopflerfish(),felix(),equinox()); @AT@ 2835 @LENGTH@ 1045
---UPD VariableDeclarationFragment@@options=options(logProfile(),profile("spring.dm"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(mavenBundle().groupId("org.apache.camel.karaf").artifactId("features").versionAsInProject().type("xml/features"),"camel-core","camel-osgi","camel-spring"),mavenBundle().groupId("org.apache.camel").artifactId("camel-test").versionAsInProject(),knopflerfish()) @TO@ options=options(logProfile().version("1.3.0"),profile("spring.dm").version("1.2.0"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(mavenBundle().groupId("org.apache.camel.karaf").artifactId("features").versionAsInProject().type("xml/features"),"camel-core","camel-osgi","camel-spring"),mavenBundle().groupId("org.apache.camel").artifactId("camel-test").versionAsInProject(),knopflerfish(),felix(),equinox()) @AT@ 2844 @LENGTH@ 1035
------UPD MethodInvocation@@options(logProfile(),profile("spring.dm"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(mavenBundle().groupId("org.apache.camel.karaf").artifactId("features").versionAsInProject().type("xml/features"),"camel-core","camel-osgi","camel-spring"),mavenBundle().groupId("org.apache.camel").artifactId("camel-test").versionAsInProject(),knopflerfish()) @TO@ options(logProfile().version("1.3.0"),profile("spring.dm").version("1.2.0"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(mavenBundle().groupId("org.apache.camel.karaf").artifactId("features").versionAsInProject().type("xml/features"),"camel-core","camel-osgi","camel-spring"),mavenBundle().groupId("org.apache.camel").artifactId("camel-test").versionAsInProject(),knopflerfish(),felix(),equinox()) @AT@ 2854 @LENGTH@ 1025
---------UPD SimpleName@@MethodName:options:[logProfile(), profile("spring.dm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(mavenBundle().groupId("org.apache.camel.karaf").artifactId("features").versionAsInProject().type("xml/features"),"camel-core","camel-osgi","camel-spring"), mavenBundle().groupId("org.apache.camel").artifactId("camel-test").versionAsInProject(), knopflerfish()] @TO@ MethodName:options:[logProfile().version("1.3.0"), profile("spring.dm").version("1.2.0"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(mavenBundle().groupId("org.apache.camel.karaf").artifactId("features").versionAsInProject().type("xml/features"),"camel-core","camel-osgi","camel-spring"), mavenBundle().groupId("org.apache.camel").artifactId("camel-test").versionAsInProject(), knopflerfish(), felix(), equinox()] @AT@ 2854 @LENGTH@ 1025
------------INS MethodInvocation@@logProfile().version("1.3.0") @TO@ SimpleName@@MethodName:options:[logProfile(), profile("spring.dm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(mavenBundle().groupId("org.apache.camel.karaf").artifactId("features").versionAsInProject().type("xml/features"),"camel-core","camel-osgi","camel-spring"), mavenBundle().groupId("org.apache.camel").artifactId("camel-test").versionAsInProject(), knopflerfish()] @AT@ 2983 @LENGTH@ 29
---------------INS MethodInvocation@@MethodName:logProfile:[] @TO@ MethodInvocation@@logProfile().version("1.3.0") @AT@ 2983 @LENGTH@ 12
---------------INS SimpleName@@MethodName:version:["1.3.0"] @TO@ MethodInvocation@@logProfile().version("1.3.0") @AT@ 2996 @LENGTH@ 16
------------------INS StringLiteral@@"1.3.0" @TO@ SimpleName@@MethodName:version:["1.3.0"] @AT@ 3004 @LENGTH@ 7
------------DEL MethodInvocation@@MethodName:logProfile:[] @AT@ 2983 @LENGTH@ 12
------------UPD MethodInvocation@@profile("spring.dm") @TO@ profile("spring.dm").version("1.2.0") @AT@ 3054 @LENGTH@ 20
---------------UPD SimpleName@@MethodName:profile:["spring.dm"] @TO@ MethodName:version:["1.2.0"] @AT@ 3054 @LENGTH@ 20
------------------UPD StringLiteral@@"spring.dm" @TO@ "1.2.0" @AT@ 3062 @LENGTH@ 11
---------------UPD SimpleName@@MethodName:profile:["spring.dm"] @TO@ MethodName:version:["1.2.0"] @AT@ 3054 @LENGTH@ 20
------------------UPD StringLiteral@@"spring.dm" @TO@ "1.2.0" @AT@ 3062 @LENGTH@ 11
---------------INS MethodInvocation@@MethodName:profile:["spring.dm"] @TO@ MethodInvocation@@profile("spring.dm") @AT@ 3083 @LENGTH@ 20
------------------INS StringLiteral@@"spring.dm" @TO@ MethodInvocation@@MethodName:profile:["spring.dm"] @AT@ 3091 @LENGTH@ 11
------------INS MethodInvocation@@MethodName:felix:[] @TO@ SimpleName@@MethodName:options:[logProfile(), profile("spring.dm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(mavenBundle().groupId("org.apache.camel.karaf").artifactId("features").versionAsInProject().type("xml/features"),"camel-core","camel-osgi","camel-spring"), mavenBundle().groupId("org.apache.camel").artifactId("camel-test").versionAsInProject(), knopflerfish()] @AT@ 3926 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:equinox:[] @TO@ SimpleName@@MethodName:options:[logProfile(), profile("spring.dm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(mavenBundle().groupId("org.apache.camel.karaf").artifactId("features").versionAsInProject().type("xml/features"),"camel-core","camel-osgi","camel-spring"), mavenBundle().groupId("org.apache.camel").artifactId("camel-test").versionAsInProject(), knopflerfish()] @AT@ 3935 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertTrue(fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1) @TO@ MethodInvocation:assertTrue(fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1) @AT@ 3258 @LENGTH@ 81
---UPD MethodInvocation@@assertTrue(fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1) @TO@ assertTrue(fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1) @AT@ 3258 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertTrue:[fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1] @TO@ MethodName:assertTrue:[fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1] @AT@ 3258 @LENGTH@ 80
---------UPD InfixExpression@@fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1 @TO@ fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1 @AT@ 3269 @LENGTH@ 68
------------UPD MethodInvocation@@fe.getGenericFile().getRelativeFileName().indexOf("inprogress") @TO@ fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") @AT@ 3269 @LENGTH@ 63
---------------UPD MethodInvocation@@MethodName:getRelativeFileName:[] @TO@ MethodName:getRelativeFilePath:[] @AT@ 3269 @LENGTH@ 41


UPD TypeDeclaration@@[public]UFaceEndpoint, ListEndpoint @TO@ [public]UFaceEndpoint, BrowseEndpoint @AT@ 1154 @LENGTH@ 448
---UPD SimpleType@@ListEndpoint @TO@ BrowseEndpoint @AT@ 1189 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"report.txt") @TO@ MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"report.txt") @AT@ 1959 @LENGTH@ 101
---UPD MethodInvocation@@template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"report.txt") @TO@ template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"report.txt") @AT@ 1959 @LENGTH@ 100
------UPD SimpleName@@MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", FileComponent.HEADER_FILE_NAME, "report.txt"] @TO@ MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", NewFileComponent.HEADER_FILE_NAME, "report.txt"] @AT@ 1968 @LENGTH@ 91
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2014 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2014 @LENGTH@ 13


INS MethodDeclaration@@private, voidMethodName:Constants,  @TO@ TypeDeclaration@@[public]Constants,  @AT@ 1149 @LENGTH@ 27
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:Constants,  @AT@ 1149 @LENGTH@ 7
---INS SimpleName@@MethodName:Constants @TO@ MethodDeclaration@@private, voidMethodName:Constants,  @AT@ 1157 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:System.out.print("The out message header is " + exchange.getOut().getHeaders()) @AT@ 1887 @LENGTH@ 80
---DEL MethodInvocation@@System.out.print("The out message header is " + exchange.getOut().getHeaders()) @AT@ 1887 @LENGTH@ 79
------DEL QualifiedName@@Name:System.out @AT@ 1887 @LENGTH@ 10
------DEL SimpleName@@MethodName:print:["The out message header is " + exchange.getOut().getHeaders()] @AT@ 1898 @LENGTH@ 68
---------DEL InfixExpression@@"The out message header is " + exchange.getOut().getHeaders() @AT@ 1904 @LENGTH@ 61
------------DEL StringLiteral@@"The out message header is " @AT@ 1904 @LENGTH@ 28
------------DEL Operator@@+ @AT@ 1932 @LENGTH@ 1
------------DEL MethodInvocation@@exchange.getOut().getHeaders() @AT@ 1935 @LENGTH@ 30
---------------DEL MethodInvocation@@MethodName:getOut:[] @AT@ 1935 @LENGTH@ 17
---------------DEL SimpleName@@Name:exchange @AT@ 1935 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getHeaders:[] @AT@ 1953 @LENGTH@ 12


UPD TypeDeclaration@@[public]RunScript,  @TO@ [public, final]RunScript,  @AT@ 922 @LENGTH@ 411
---INS Modifier@@final @TO@ TypeDeclaration@@[public]RunScript,  @AT@ 931 @LENGTH@ 5


MOV IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Found component: " + name + " via type: "+ type.getName()+ " via: "+ COMPONENT_FACTORY.getPath()+ name);} @TO@ MethodDeclaration@@public, Component, MethodName:resolveComponent, String name, CamelContext context,  @AT@ 2746 @LENGTH@ 169


UPD MethodDeclaration@@public, void, MethodName:removeNotificationListener, String listenerId,  @TO@ void, MethodName:removeNotificationListener, String listenerId,  @AT@ 1393 @LENGTH@ 58
---DEL Modifier@@public @AT@ 1393 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    assertEquals("Hello World",body);
    exchange.getOut().setBody("Bye World");
  }
}
).to("mock:result") @TO@ MethodInvocation:from("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    assertEquals("Hello World",body);
    exchange.getOut().setBody("Bye World");
  }
}
).to("mock:result") @AT@ 2335 @LENGTH@ 622
---UPD MethodInvocation@@from("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    assertEquals("Hello World",body);
    exchange.getOut().setBody("Bye World");
  }
}
).to("mock:result") @TO@ from("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String body=exchange.getIn().getBody(String.class);
    assertEquals("Hello World",body);
    exchange.getOut().setBody("Bye World");
  }
}
).to("mock:result") @AT@ 2335 @LENGTH@ 621
------UPD MethodInvocation@@MethodName:from:["mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec"] @TO@ MethodName:from:["mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec"] @AT@ 2335 @LENGTH@ 57
---------UPD StringLiteral@@"mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec" @TO@ "mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec" @AT@ 2340 @LENGTH@ 51


UPD IfStatement@@if (footerCallback != null) {  footerCallback.writeFooter(state.outputBufferedWriter);  state.outputBufferedWriter.flush();} @TO@ if (footerCallback != null && state.outputBufferedWriter != null) {  footerCallback.writeFooter(state.outputBufferedWriter);  state.outputBufferedWriter.flush();} @AT@ 7001 @LENGTH@ 137
---INS InfixExpression@@footerCallback != null && state.outputBufferedWriter != null @TO@ IfStatement@@if (footerCallback != null) {  footerCallback.writeFooter(state.outputBufferedWriter);  state.outputBufferedWriter.flush();} @AT@ 7005 @LENGTH@ 60
------INS InfixExpression@@footerCallback != null @TO@ InfixExpression@@footerCallback != null && state.outputBufferedWriter != null @AT@ 7005 @LENGTH@ 22
---------MOV SimpleName@@footerCallback @TO@ InfixExpression@@footerCallback != null @AT@ 7005 @LENGTH@ 14
---------MOV Operator@@!= @TO@ InfixExpression@@footerCallback != null @AT@ 7019 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@footerCallback != null @AT@ 7023 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@footerCallback != null && state.outputBufferedWriter != null @AT@ 7027 @LENGTH@ 2
------INS InfixExpression@@state.outputBufferedWriter != null @TO@ InfixExpression@@footerCallback != null && state.outputBufferedWriter != null @AT@ 7031 @LENGTH@ 34
---------INS QualifiedName@@state.outputBufferedWriter @TO@ InfixExpression@@state.outputBufferedWriter != null @AT@ 7031 @LENGTH@ 26
------------INS SimpleName@@state @TO@ QualifiedName@@state.outputBufferedWriter @AT@ 7031 @LENGTH@ 5
------------INS SimpleName@@outputBufferedWriter @TO@ QualifiedName@@state.outputBufferedWriter @AT@ 7037 @LENGTH@ 20
---------INS Operator@@!= @TO@ InfixExpression@@state.outputBufferedWriter != null @AT@ 7057 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@state.outputBufferedWriter != null @AT@ 7061 @LENGTH@ 4
---DEL InfixExpression@@footerCallback != null @AT@ 7005 @LENGTH@ 22


UPD TypeDeclaration@@[public]Constants,  @TO@ [public, final]Constants,  @AT@ 880 @LENGTH@ 256
---INS Modifier@@final @TO@ TypeDeclaration@@[public]Constants,  @AT@ 889 @LENGTH@ 5


UPD SuperConstructorInvocation@@super("No in body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message,exchange);
 @TO@ super("No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message,exchange);
 @AT@ 1304 @LENGTH@ 163
---UPD InfixExpression@@"No in body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message @TO@ "No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message @AT@ 1310 @LENGTH@ 145
------UPD StringLiteral@@"No in body available of type: " @TO@ "No body available of type: " @AT@ 1310 @LENGTH@ 32


UPD VariableDeclarationStatement@@ConstantLanguage constant=new ConstantLanguage(); @TO@ Expression expression=ExpressionBuilder.constantExpression(Boolean.toString(handled)); @AT@ 5989 @LENGTH@ 51
---UPD SimpleType@@ConstantLanguage @TO@ Expression @AT@ 5989 @LENGTH@ 16
---UPD VariableDeclarationFragment@@constant=new ConstantLanguage() @TO@ expression=ExpressionBuilder.constantExpression(Boolean.toString(handled)) @AT@ 6006 @LENGTH@ 33
------UPD SimpleName@@constant @TO@ expression @AT@ 6006 @LENGTH@ 8
------DEL ClassInstanceCreation@@ConstantLanguage[] @AT@ 6017 @LENGTH@ 22
---------DEL New@@new @AT@ 6017 @LENGTH@ 3
---------DEL SimpleType@@ConstantLanguage @AT@ 6021 @LENGTH@ 16
------MOV MethodInvocation@@constant.createPredicate(Boolean.toString(handled)) @TO@ VariableDeclarationFragment@@constant=new ConstantLanguage() @AT@ 6064 @LENGTH@ 51
---------UPD SimpleName@@Name:constant @TO@ Name:ExpressionBuilder @AT@ 6064 @LENGTH@ 8
---------UPD SimpleName@@MethodName:createPredicate:[Boolean.toString(handled)] @TO@ MethodName:constantExpression:[Boolean.toString(handled)] @AT@ 6073 @LENGTH@ 42


INS ExpressionStatement@@MethodInvocation:future.get(1,TimeUnit.SECONDS) @TO@ MethodDeclaration@@public, void, MethodName:testAsyncRequestOnlyRouteWithExchange, Exception,  @AT@ 4565 @LENGTH@ 32
---INS MethodInvocation@@future.get(1,TimeUnit.SECONDS) @TO@ ExpressionStatement@@MethodInvocation:future.get(1,TimeUnit.SECONDS) @AT@ 4565 @LENGTH@ 31
------INS SimpleName@@Name:future @TO@ MethodInvocation@@future.get(1,TimeUnit.SECONDS) @AT@ 4565 @LENGTH@ 6
------INS SimpleName@@MethodName:get:[1, TimeUnit.SECONDS] @TO@ MethodInvocation@@future.get(1,TimeUnit.SECONDS) @AT@ 4572 @LENGTH@ 24
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:get:[1, TimeUnit.SECONDS] @AT@ 4576 @LENGTH@ 1
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ SimpleName@@MethodName:get:[1, TimeUnit.SECONDS] @AT@ 4579 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 4579 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 4588 @LENGTH@ 7


INS MethodDeclaration@@public, Processor, MethodName:getProcessor,  @TO@ TypeDeclaration@@[public]SendProcessor, ServiceSupport[AsyncProcessor, Service] @AT@ 4011 @LENGTH@ 65
---INS Modifier@@public @TO@ MethodDeclaration@@public, Processor, MethodName:getProcessor,  @AT@ 4011 @LENGTH@ 6
---INS SimpleType@@Processor @TO@ MethodDeclaration@@public, Processor, MethodName:getProcessor,  @AT@ 4018 @LENGTH@ 9
---INS SimpleName@@MethodName:getProcessor @TO@ MethodDeclaration@@public, Processor, MethodName:getProcessor,  @AT@ 4028 @LENGTH@ 12
---INS ReturnStatement@@SimpleName:processor @TO@ MethodDeclaration@@public, Processor, MethodName:getProcessor,  @AT@ 4053 @LENGTH@ 17
------INS SimpleName@@processor @TO@ ReturnStatement@@SimpleName:processor @AT@ 4060 @LENGTH@ 9


UPD FieldDeclaration@@private, String, [ftpUrl="ftp://admin@localhost:" + port + "/slowfile?password=admin&binary=false&readLock=rename&consumer.delay=500"] @TO@ private, String, [ftpUrl="ftp://admin@localhost:" + port + "/slowfile?password=admin&binary=false&readLock=rename&consumer.delay=2000"] @AT@ 1121 @LENGTH@ 133
---UPD VariableDeclarationFragment@@ftpUrl="ftp://admin@localhost:" + port + "/slowfile?password=admin&binary=false&readLock=rename&consumer.delay=500" @TO@ ftpUrl="ftp://admin@localhost:" + port + "/slowfile?password=admin&binary=false&readLock=rename&consumer.delay=2000" @AT@ 1136 @LENGTH@ 117
------UPD InfixExpression@@"ftp://admin@localhost:" + port + "/slowfile?password=admin&binary=false&readLock=rename&consumer.delay=500" @TO@ "ftp://admin@localhost:" + port + "/slowfile?password=admin&binary=false&readLock=rename&consumer.delay=2000" @AT@ 1145 @LENGTH@ 108
---------UPD StringLiteral@@"/slowfile?password=admin&binary=false&readLock=rename&consumer.delay=500" @TO@ "/slowfile?password=admin&binary=false&readLock=rename&consumer.delay=2000" @AT@ 1179 @LENGTH@ 74


UPD MethodDeclaration@@public, boolean, MethodName:isStarted,  @TO@ public, boolean, MethodName:isFinishedStarting,  @AT@ 3170 @LENGTH@ 83
---UPD SimpleName@@MethodName:isStarted @TO@ MethodName:isFinishedStarting @AT@ 3185 @LENGTH@ 9


UPD VariableDeclarationStatement@@String path=file.getRelativeFileName(); @TO@ String path=file.getRelativeFilePath(); @AT@ 2261 @LENGTH@ 41
---UPD VariableDeclarationFragment@@path=file.getRelativeFileName() @TO@ path=file.getRelativeFilePath() @AT@ 2268 @LENGTH@ 33
------UPD MethodInvocation@@file.getRelativeFileName() @TO@ file.getRelativeFilePath() @AT@ 2275 @LENGTH@ 26
---------UPD SimpleName@@MethodName:getRelativeFileName:[] @TO@ MethodName:getRelativeFilePath:[] @AT@ 2280 @LENGTH@ 21


INS MethodDeclaration@@public, JmsMessage, MethodName:getFault, boolean lazyCreate,  @TO@ TypeDeclaration@@[public]JmsExchange, DefaultExchange @AT@ 2505 @LENGTH@ 110
---INS Modifier@@public @TO@ MethodDeclaration@@public, JmsMessage, MethodName:getFault, boolean lazyCreate,  @AT@ 2505 @LENGTH@ 6
---INS SimpleType@@JmsMessage @TO@ MethodDeclaration@@public, JmsMessage, MethodName:getFault, boolean lazyCreate,  @AT@ 2512 @LENGTH@ 10
---INS SimpleName@@MethodName:getFault @TO@ MethodDeclaration@@public, JmsMessage, MethodName:getFault, boolean lazyCreate,  @AT@ 2523 @LENGTH@ 8
---INS SingleVariableDeclaration@@boolean lazyCreate @TO@ MethodDeclaration@@public, JmsMessage, MethodName:getFault, boolean lazyCreate,  @AT@ 2532 @LENGTH@ 18
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean lazyCreate @AT@ 2532 @LENGTH@ 7
------INS SimpleName@@lazyCreate @TO@ SingleVariableDeclaration@@boolean lazyCreate @AT@ 2540 @LENGTH@ 10
---INS ReturnStatement@@CastExpression:(JmsMessage)super.getFault(lazyCreate) @TO@ MethodDeclaration@@public, JmsMessage, MethodName:getFault, boolean lazyCreate,  @AT@ 2562 @LENGTH@ 47
------INS CastExpression@@(JmsMessage)super.getFault(lazyCreate) @TO@ ReturnStatement@@CastExpression:(JmsMessage)super.getFault(lazyCreate) @AT@ 2569 @LENGTH@ 39
---------INS SimpleType@@JmsMessage @TO@ CastExpression@@(JmsMessage)super.getFault(lazyCreate) @AT@ 2570 @LENGTH@ 10
---------INS SuperMethodInvocation@@super.getFault(lazyCreate) @TO@ CastExpression@@(JmsMessage)super.getFault(lazyCreate) @AT@ 2582 @LENGTH@ 26
------------INS SimpleName@@MethodName:getFault:[lazyCreate] @TO@ SuperMethodInvocation@@super.getFault(lazyCreate) @AT@ 2588 @LENGTH@ 8
------------INS SimpleName@@lazyCreate @TO@ SuperMethodInvocation@@super.getFault(lazyCreate) @AT@ 2597 @LENGTH@ 10


INS MethodDeclaration@@public, Exchange, MethodName:newCopy,  @TO@ TypeDeclaration@@[public]DefaultExchange, [Exchange] @AT@ 2951 @LENGTH@ 173
---INS Modifier@@public @TO@ MethodDeclaration@@public, Exchange, MethodName:newCopy,  @AT@ 2951 @LENGTH@ 6
---INS SimpleType@@Exchange @TO@ MethodDeclaration@@public, Exchange, MethodName:newCopy,  @AT@ 2958 @LENGTH@ 8
---INS SimpleName@@MethodName:newCopy @TO@ MethodDeclaration@@public, Exchange, MethodName:newCopy,  @AT@ 2967 @LENGTH@ 7
---INS VariableDeclarationStatement@@Exchange exchange=copy(); @TO@ MethodDeclaration@@public, Exchange, MethodName:newCopy,  @AT@ 2987 @LENGTH@ 27
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=copy(); @AT@ 2987 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=copy() @TO@ VariableDeclarationStatement@@Exchange exchange=copy(); @AT@ 2996 @LENGTH@ 17
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=copy() @AT@ 2996 @LENGTH@ 8
---------INS MethodInvocation@@MethodName:copy:[] @TO@ VariableDeclarationFragment@@exchange=copy() @AT@ 3007 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:exchange.setUnitOfWork(null) @TO@ MethodDeclaration@@public, Exchange, MethodName:newCopy,  @AT@ 3064 @LENGTH@ 29
------INS MethodInvocation@@exchange.setUnitOfWork(null) @TO@ ExpressionStatement@@MethodInvocation:exchange.setUnitOfWork(null) @AT@ 3064 @LENGTH@ 28
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setUnitOfWork(null) @AT@ 3064 @LENGTH@ 8
---------INS SimpleName@@MethodName:setUnitOfWork:[null] @TO@ MethodInvocation@@exchange.setUnitOfWork(null) @AT@ 3073 @LENGTH@ 19
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setUnitOfWork:[null] @AT@ 3087 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:exchange @TO@ MethodDeclaration@@public, Exchange, MethodName:newCopy,  @AT@ 3102 @LENGTH@ 16
------INS SimpleName@@exchange @TO@ ReturnStatement@@SimpleName:exchange @AT@ 3109 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:converter.convertTo(StreamCache.class,order) @TO@ MethodInvocation:converter.mandatoryConvertTo(StreamCache.class,order) @AT@ 3844 @LENGTH@ 46
---UPD MethodInvocation@@converter.convertTo(StreamCache.class,order) @TO@ converter.mandatoryConvertTo(StreamCache.class,order) @AT@ 3844 @LENGTH@ 45
------UPD SimpleName@@MethodName:convertTo:[StreamCache.class, order] @TO@ MethodName:mandatoryConvertTo:[StreamCache.class, order] @AT@ 3854 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"report.txt") @TO@ MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"report.txt") @AT@ 2209 @LENGTH@ 101
---UPD MethodInvocation@@template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"report.txt") @TO@ template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"report.txt") @AT@ 2209 @LENGTH@ 100
------UPD SimpleName@@MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", FileComponent.HEADER_FILE_NAME, "report.txt"] @TO@ MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", NewFileComponent.HEADER_FILE_NAME, "report.txt"] @AT@ 2218 @LENGTH@ 91
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2264 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2264 @LENGTH@ 13


UPD IfStatement@@if (!endpoint.isLenientProperties() && parameters.size() > 0) {  throw new ResolveEndpointFailedException(uri,"There are " + parameters.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ parameters+ "]");} @TO@ if (!endpoint.isLenientProperties()) {  validateUnknownParameters(uri,parameters,null);} @AT@ 3565 @LENGTH@ 436
---DEL InfixExpression@@!endpoint.isLenientProperties() && parameters.size() > 0 @AT@ 3569 @LENGTH@ 56
------DEL Operator@@&& @AT@ 3600 @LENGTH@ 2
------DEL InfixExpression@@parameters.size() > 0 @AT@ 3604 @LENGTH@ 21
---------DEL MethodInvocation@@parameters.size() @AT@ 3604 @LENGTH@ 17
------------DEL SimpleName@@Name:parameters @AT@ 3604 @LENGTH@ 10
------------DEL SimpleName@@MethodName:size:[] @AT@ 3615 @LENGTH@ 6
---------DEL Operator@@> @AT@ 3621 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 3624 @LENGTH@ 1
---MOV PrefixExpression@@!endpoint.isLenientProperties() @TO@ IfStatement@@if (!endpoint.isLenientProperties() && parameters.size() > 0) {  throw new ResolveEndpointFailedException(uri,"There are " + parameters.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ parameters+ "]");} @AT@ 3569 @LENGTH@ 31
---UPD Block@@ThenBody:{  throw new ResolveEndpointFailedException(uri,"There are " + parameters.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ parameters+ "]");} @TO@ ThenBody:{  validateUnknownParameters(uri,parameters,null);} @AT@ 3627 @LENGTH@ 374
------INS ExpressionStatement@@MethodInvocation:validateUnknownParameters(uri,parameters,null) @TO@ Block@@ThenBody:{  throw new ResolveEndpointFailedException(uri,"There are " + parameters.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ parameters+ "]");} @AT@ 3620 @LENGTH@ 49
---------INS MethodInvocation@@validateUnknownParameters(uri,parameters,null) @TO@ ExpressionStatement@@MethodInvocation:validateUnknownParameters(uri,parameters,null) @AT@ 3620 @LENGTH@ 48
------------INS SimpleName@@MethodName:validateUnknownParameters:[uri, parameters, null] @TO@ MethodInvocation@@validateUnknownParameters(uri,parameters,null) @AT@ 3620 @LENGTH@ 48
---------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:validateUnknownParameters:[uri, parameters, null] @AT@ 3646 @LENGTH@ 3
---------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:validateUnknownParameters:[uri, parameters, null] @AT@ 3651 @LENGTH@ 10
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:validateUnknownParameters:[uri, parameters, null] @AT@ 3663 @LENGTH@ 4
------------INS SimpleName@@MethodName:validateUnknownParameters:[uri, parameters, null] @TO@ MethodInvocation@@validateUnknownParameters(uri,parameters,null) @AT@ 3620 @LENGTH@ 48
---------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:validateUnknownParameters:[uri, parameters, null] @AT@ 3646 @LENGTH@ 3
---------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:validateUnknownParameters:[uri, parameters, null] @AT@ 3651 @LENGTH@ 10
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:validateUnknownParameters:[uri, parameters, null] @AT@ 3663 @LENGTH@ 4
------DEL ThrowStatement@@ClassInstanceCreation:new ResolveEndpointFailedException(uri,"There are " + parameters.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ parameters+ "]") @AT@ 3645 @LENGTH@ 342
---------DEL ClassInstanceCreation@@ResolveEndpointFailedException[uri, "There are " + parameters.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ parameters+ "]"] @AT@ 3651 @LENGTH@ 335
------------DEL New@@new @AT@ 3651 @LENGTH@ 3
------------DEL SimpleType@@ResolveEndpointFailedException @AT@ 3655 @LENGTH@ 30
------------DEL SimpleName@@uri @AT@ 3686 @LENGTH@ 3
------------DEL InfixExpression@@"There are " + parameters.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ parameters+ "]" @AT@ 3691 @LENGTH@ 294
---------------DEL StringLiteral@@"There are " @AT@ 3691 @LENGTH@ 12
---------------DEL Operator@@+ @AT@ 3703 @LENGTH@ 1
---------------DEL MethodInvocation@@parameters.size() @AT@ 3706 @LENGTH@ 17
------------------DEL SimpleName@@Name:parameters @AT@ 3706 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:size:[] @AT@ 3717 @LENGTH@ 6
---------------DEL StringLiteral@@" parameters that couldn't be set on the endpoint." @AT@ 3746 @LENGTH@ 51
---------------DEL StringLiteral@@" Check the uri if the parameters are spelt correctly and that they are properties of the endpoint." @AT@ 3820 @LENGTH@ 100
---------------DEL StringLiteral@@" Unknown parameters=[" @AT@ 3943 @LENGTH@ 23
---------------DEL SimpleName@@parameters @AT@ 3969 @LENGTH@ 10
---------------DEL StringLiteral@@"]" @AT@ 3982 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:from(fileUrl + "b/?sortBy=file:name.ext;reverse:file:name").to("mock:reverse") @TO@ MethodInvocation:from(fileUrl + "b/?sortBy=file:ext;reverse:file:name").to("mock:reverse") @AT@ 2843 @LENGTH@ 79
---UPD MethodInvocation@@from(fileUrl + "b/?sortBy=file:name.ext;reverse:file:name").to("mock:reverse") @TO@ from(fileUrl + "b/?sortBy=file:ext;reverse:file:name").to("mock:reverse") @AT@ 2843 @LENGTH@ 78
------UPD MethodInvocation@@MethodName:from:[fileUrl + "b/?sortBy=file:name.ext;reverse:file:name"] @TO@ MethodName:from:[fileUrl + "b/?sortBy=file:ext;reverse:file:name"] @AT@ 2843 @LENGTH@ 59
---------UPD InfixExpression@@fileUrl + "b/?sortBy=file:name.ext;reverse:file:name" @TO@ fileUrl + "b/?sortBy=file:ext;reverse:file:name" @AT@ 2848 @LENGTH@ 53
------------UPD StringLiteral@@"b/?sortBy=file:name.ext;reverse:file:name" @TO@ "b/?sortBy=file:ext;reverse:file:name" @AT@ 2858 @LENGTH@ 43


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"report.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"report.txt") @AT@ 2218 @LENGTH@ 73
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"report.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"report.txt") @AT@ 2218 @LENGTH@ 72
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "report.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "report.txt"] @AT@ 2235 @LENGTH@ 55
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2245 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2245 @LENGTH@ 13


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[public, static]MyOtherDummyBean,  @AT@ 2441 @LENGTH@ 70
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2441 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2448 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2452 @LENGTH@ 8
---INS ReturnStatement@@SuperMethodInvocation:super.hashCode() @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2477 @LENGTH@ 24
------INS SuperMethodInvocation@@super.hashCode() @TO@ ReturnStatement@@SuperMethodInvocation:super.hashCode() @AT@ 2484 @LENGTH@ 16
---------INS SimpleName@@MethodName:hashCode:[] @TO@ SuperMethodInvocation@@super.hashCode() @AT@ 2490 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:System.out.println(" Adding the type converter" + typeConverter) @TO@ MethodInvocation:typeConverters.add(typeConverter) @AT@ 1579 @LENGTH@ 65
---UPD MethodInvocation@@System.out.println(" Adding the type converter" + typeConverter) @TO@ typeConverters.add(typeConverter) @AT@ 1579 @LENGTH@ 64
------INS SimpleName@@Name:typeConverters @TO@ MethodInvocation@@System.out.println(" Adding the type converter" + typeConverter) @AT@ 1579 @LENGTH@ 14
------DEL QualifiedName@@Name:System.out @AT@ 1579 @LENGTH@ 10
------UPD SimpleName@@MethodName:println:[" Adding the type converter" + typeConverter] @TO@ MethodName:add:[typeConverter] @AT@ 1590 @LENGTH@ 53
---------DEL InfixExpression@@" Adding the type converter" + typeConverter @AT@ 1598 @LENGTH@ 44
------------DEL StringLiteral@@" Adding the type converter" @AT@ 1598 @LENGTH@ 28
------------DEL Operator@@+ @AT@ 1626 @LENGTH@ 1
------------DEL SimpleName@@typeConverter @AT@ 1629 @LENGTH@ 13
---------INS SimpleName@@typeConverter @TO@ SimpleName@@MethodName:println:[" Adding the type converter" + typeConverter] @AT@ 1598 @LENGTH@ 13


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("No such property name=[" + name + "]") @TO@ ClassInstanceCreation:new IllegalArgumentException("Property name must not be null!") @AT@ 2533 @LENGTH@ 75
---UPD ClassInstanceCreation@@IllegalArgumentException["No such property name=[" + name + "]"] @TO@ IllegalArgumentException["Property name must not be null!"] @AT@ 2539 @LENGTH@ 68
------DEL InfixExpression@@"No such property name=[" + name + "]" @AT@ 2568 @LENGTH@ 38
---------DEL StringLiteral@@"No such property name=[" @AT@ 2568 @LENGTH@ 25
---------DEL Operator@@+ @AT@ 2593 @LENGTH@ 1
---------DEL SimpleName@@name @AT@ 2596 @LENGTH@ 4
---------DEL StringLiteral@@"]" @AT@ 2603 @LENGTH@ 3
------INS StringLiteral@@"Property name must not be null!" @TO@ ClassInstanceCreation@@IllegalArgumentException["No such property name=[" + name + "]"] @AT@ 2568 @LENGTH@ 33


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]StaticMethodTypeConverter, [TypeConverter] @AT@ 1933 @LENGTH@ 113
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 1933 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 1944 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 1946 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 1965 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 1965 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 1965 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 1971 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 1974 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 1980 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 1980 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 1987 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,null,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2004 @LENGTH@ 36
------INS MethodInvocation@@convertTo(type,null,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,null,value) @AT@ 2011 @LENGTH@ 28
---------INS SimpleName@@MethodName:convertTo:[type, null, value] @TO@ MethodInvocation@@convertTo(type,null,value) @AT@ 2011 @LENGTH@ 28
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2021 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2027 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2033 @LENGTH@ 5


INS IfStatement@@if (exchange.getIn().getBody() != null) {  Iterator<?> iterator=exchange.getIn().getBody(Iterator.class);  while (iterator != null && iterator.hasNext()) {    ps.setObject(argNumber++,iterator.next());  }} @TO@ MethodDeclaration@@public, Object, MethodName:doInPreparedStatement, PreparedStatement ps, SQLException, DataAccessException,  @AT@ 1942 @LENGTH@ 303
---INS InfixExpression@@exchange.getIn().getBody() != null @TO@ IfStatement@@if (exchange.getIn().getBody() != null) {  Iterator<?> iterator=exchange.getIn().getBody(Iterator.class);  while (iterator != null && iterator.hasNext()) {    ps.setObject(argNumber++,iterator.next());  }} @AT@ 1946 @LENGTH@ 34
------INS MethodInvocation@@exchange.getIn().getBody() @TO@ InfixExpression@@exchange.getIn().getBody() != null @AT@ 1946 @LENGTH@ 26
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 1946 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 1946 @LENGTH@ 8
---------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 1963 @LENGTH@ 9
------INS Operator@@!= @TO@ InfixExpression@@exchange.getIn().getBody() != null @AT@ 1972 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getIn().getBody() != null @AT@ 1976 @LENGTH@ 4
---INS Block@@ThenBody:{  Iterator<?> iterator=exchange.getIn().getBody(Iterator.class);  while (iterator != null && iterator.hasNext()) {    ps.setObject(argNumber++,iterator.next());  }} @TO@ IfStatement@@if (exchange.getIn().getBody() != null) {  Iterator<?> iterator=exchange.getIn().getBody(Iterator.class);  while (iterator != null && iterator.hasNext()) {    ps.setObject(argNumber++,iterator.next());  }} @AT@ 1982 @LENGTH@ 263
------MOV VariableDeclarationStatement@@Iterator<?> iterator=exchange.getIn().getBody(Iterator.class); @TO@ Block@@ThenBody:{  Iterator<?> iterator=exchange.getIn().getBody(Iterator.class);  while (iterator != null && iterator.hasNext()) {    ps.setObject(argNumber++,iterator.next());  }} @AT@ 2043 @LENGTH@ 64
------MOV WhileStatement@@while (iterator != null && iterator.hasNext()) {  ps.setObject(argNumber++,iterator.next());} @TO@ Block@@ThenBody:{  Iterator<?> iterator=exchange.getIn().getBody(Iterator.class);  while (iterator != null && iterator.hasNext()) {    ps.setObject(argNumber++,iterator.next());  }} @AT@ 2128 @LENGTH@ 138


INS MethodDeclaration@@protected, boolean, MethodName:isAbsolute, String name,  @TO@ TypeDeclaration@@[public]RemoteFile, GenericFile<T>[Cloneable] @AT@ 1532 @LENGTH@ 106
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:isAbsolute, String name,  @AT@ 1532 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:isAbsolute, String name,  @AT@ 1542 @LENGTH@ 7
---INS SimpleName@@MethodName:isAbsolute @TO@ MethodDeclaration@@protected, boolean, MethodName:isAbsolute, String name,  @AT@ 1550 @LENGTH@ 10
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@protected, boolean, MethodName:isAbsolute, String name,  @AT@ 1561 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 1561 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 1568 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:name.startsWith("" + getFileSeparator()) @TO@ MethodDeclaration@@protected, boolean, MethodName:isAbsolute, String name,  @AT@ 1584 @LENGTH@ 48
------INS MethodInvocation@@name.startsWith("" + getFileSeparator()) @TO@ ReturnStatement@@MethodInvocation:name.startsWith("" + getFileSeparator()) @AT@ 1591 @LENGTH@ 40
---------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.startsWith("" + getFileSeparator()) @AT@ 1591 @LENGTH@ 4
---------INS SimpleName@@MethodName:startsWith:["" + getFileSeparator()] @TO@ MethodInvocation@@name.startsWith("" + getFileSeparator()) @AT@ 1596 @LENGTH@ 35
------------INS InfixExpression@@"" + getFileSeparator() @TO@ SimpleName@@MethodName:startsWith:["" + getFileSeparator()] @AT@ 1607 @LENGTH@ 23
---------------INS StringLiteral@@"" @TO@ InfixExpression@@"" + getFileSeparator() @AT@ 1607 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@"" + getFileSeparator() @AT@ 1609 @LENGTH@ 1
---------------INS MethodInvocation@@MethodName:getFileSeparator:[] @TO@ InfixExpression@@"" + getFileSeparator() @AT@ 1612 @LENGTH@ 18


UPD IfStatement@@if (!endpoint.isPreserveMessageQos() && !endpoint.isExplicitQosEnabled() && exchange.getIn().getHeaders().containsKey("JMSReplyTo")) {  String to=destinationName != null ? destinationName : "" + destination;  LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable: " + exchange + " with destination: "+ to);  exchange.getIn().setHeader("JMSReplyTo",null);} @TO@ if (!endpoint.isPreserveMessageQos() && !endpoint.isExplicitQosEnabled()) {  Object replyTo=exchange.getIn().getHeader("JMSReplyTo");  if (replyTo != null) {    String to=destinationName != null ? destinationName : "" + destination;    LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " + replyTo + " to destination: "+ to+ " for Exchange: "+ exchange);    exchange.getIn().setHeader("JMSReplyTo",null);  }} @AT@ 11983 @LENGTH@ 799
---UPD InfixExpression@@!endpoint.isPreserveMessageQos() && !endpoint.isExplicitQosEnabled() && exchange.getIn().getHeaders().containsKey("JMSReplyTo") @TO@ !endpoint.isPreserveMessageQos() && !endpoint.isExplicitQosEnabled() @AT@ 11987 @LENGTH@ 147
------DEL MethodInvocation@@exchange.getIn().getHeaders().containsKey("JMSReplyTo") @AT@ 12079 @LENGTH@ 55
---------DEL MethodInvocation@@MethodName:getHeaders:[] @AT@ 12079 @LENGTH@ 29
---------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 12079 @LENGTH@ 16
---------DEL SimpleName@@Name:exchange @AT@ 12079 @LENGTH@ 8
---------DEL SimpleName@@MethodName:containsKey:["JMSReplyTo"] @AT@ 12109 @LENGTH@ 25
------------DEL StringLiteral@@"JMSReplyTo" @AT@ 12121 @LENGTH@ 12
---INS Block@@ThenBody:{  Object replyTo=exchange.getIn().getHeader("JMSReplyTo");  if (replyTo != null) {    String to=destinationName != null ? destinationName : "" + destination;    LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " + replyTo + " to destination: "+ to+ " for Exchange: "+ exchange);    exchange.getIn().setHeader("JMSReplyTo",null);  }} @TO@ IfStatement@@if (!endpoint.isPreserveMessageQos() && !endpoint.isExplicitQosEnabled() && exchange.getIn().getHeaders().containsKey("JMSReplyTo")) {  String to=destinationName != null ? destinationName : "" + destination;  LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable: " + exchange + " with destination: "+ to);  exchange.getIn().setHeader("JMSReplyTo",null);} @AT@ 12057 @LENGTH@ 831
------INS VariableDeclarationStatement@@Object replyTo=exchange.getIn().getHeader("JMSReplyTo"); @TO@ Block@@ThenBody:{  Object replyTo=exchange.getIn().getHeader("JMSReplyTo");  if (replyTo != null) {    String to=destinationName != null ? destinationName : "" + destination;    LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " + replyTo + " to destination: "+ to+ " for Exchange: "+ exchange);    exchange.getIn().setHeader("JMSReplyTo",null);  }} @AT@ 12075 @LENGTH@ 58
---------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object replyTo=exchange.getIn().getHeader("JMSReplyTo"); @AT@ 12075 @LENGTH@ 6
---------INS VariableDeclarationFragment@@replyTo=exchange.getIn().getHeader("JMSReplyTo") @TO@ VariableDeclarationStatement@@Object replyTo=exchange.getIn().getHeader("JMSReplyTo"); @AT@ 12082 @LENGTH@ 50
------------INS SimpleName@@replyTo @TO@ VariableDeclarationFragment@@replyTo=exchange.getIn().getHeader("JMSReplyTo") @AT@ 12082 @LENGTH@ 7
------------INS MethodInvocation@@exchange.getIn().getHeader("JMSReplyTo") @TO@ VariableDeclarationFragment@@replyTo=exchange.getIn().getHeader("JMSReplyTo") @AT@ 12092 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeader("JMSReplyTo") @AT@ 12092 @LENGTH@ 16
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeader("JMSReplyTo") @AT@ 12092 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getHeader:["JMSReplyTo"] @TO@ MethodInvocation@@exchange.getIn().getHeader("JMSReplyTo") @AT@ 12109 @LENGTH@ 23
------------------INS StringLiteral@@"JMSReplyTo" @TO@ SimpleName@@MethodName:getHeader:["JMSReplyTo"] @AT@ 12119 @LENGTH@ 12
------INS IfStatement@@if (replyTo != null) {  String to=destinationName != null ? destinationName : "" + destination;  LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " + replyTo + " to destination: "+ to+ " for Exchange: "+ exchange);  exchange.getIn().setHeader("JMSReplyTo",null);} @TO@ Block@@ThenBody:{  Object replyTo=exchange.getIn().getHeader("JMSReplyTo");  if (replyTo != null) {    String to=destinationName != null ? destinationName : "" + destination;    LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " + replyTo + " to destination: "+ to+ " for Exchange: "+ exchange);    exchange.getIn().setHeader("JMSReplyTo",null);  }} @AT@ 12150 @LENGTH@ 724
---------MOV Block@@ThenBody:{  String to=destinationName != null ? destinationName : "" + destination;  LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable: " + exchange + " with destination: "+ to);  exchange.getIn().setHeader("JMSReplyTo",null);} @TO@ IfStatement@@if (replyTo != null) {  String to=destinationName != null ? destinationName : "" + destination;  LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " + replyTo + " to destination: "+ to+ " for Exchange: "+ exchange);  exchange.getIn().setHeader("JMSReplyTo",null);} @AT@ 12136 @LENGTH@ 646
------------UPD ExpressionStatement@@MethodInvocation:LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable: " + exchange + " with destination: "+ to) @TO@ MethodInvocation:LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " + replyTo + " to destination: "+ to+ " for Exchange: "+ exchange) @AT@ 12593 @LENGTH@ 111
---------------UPD MethodInvocation@@LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable: " + exchange + " with destination: "+ to) @TO@ LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " + replyTo + " to destination: "+ to+ " for Exchange: "+ exchange) @AT@ 12593 @LENGTH@ 110
------------------UPD SimpleName@@MethodName:warn:["Disabling JMSReplyTo as this Exchange is not OUT capable: " + exchange + " with destination: "+ to] @TO@ MethodName:warn:["Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " + replyTo + " to destination: "+ to+ " for Exchange: "+ exchange] @AT@ 12597 @LENGTH@ 106
---------------------UPD InfixExpression@@"Disabling JMSReplyTo as this Exchange is not OUT capable: " + exchange + " with destination: "+ to @TO@ "Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " + replyTo + " to destination: "+ to+ " for Exchange: "+ exchange @AT@ 12602 @LENGTH@ 100
------------------------UPD StringLiteral@@"Disabling JMSReplyTo as this Exchange is not OUT capable: " @TO@ "Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " @AT@ 12602 @LENGTH@ 60
------------------------UPD SimpleName@@exchange @TO@ replyTo @AT@ 12665 @LENGTH@ 8
------------------------UPD StringLiteral@@" with destination: " @TO@ " to destination: " @AT@ 12676 @LENGTH@ 21
------------------------INS StringLiteral@@" for Exchange: " @TO@ InfixExpression@@"Disabling JMSReplyTo as this Exchange is not OUT capable: " + exchange + " with destination: "+ to @AT@ 12758 @LENGTH@ 17
------------------------INS SimpleName@@exchange @TO@ InfixExpression@@"Disabling JMSReplyTo as this Exchange is not OUT capable: " + exchange + " with destination: "+ to @AT@ 12778 @LENGTH@ 8
---------INS InfixExpression@@replyTo != null @TO@ IfStatement@@if (replyTo != null) {  String to=destinationName != null ? destinationName : "" + destination;  LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " + replyTo + " to destination: "+ to+ " for Exchange: "+ exchange);  exchange.getIn().setHeader("JMSReplyTo",null);} @AT@ 12154 @LENGTH@ 15
------------INS SimpleName@@replyTo @TO@ InfixExpression@@replyTo != null @AT@ 12154 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@replyTo != null @AT@ 12161 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@replyTo != null @AT@ 12165 @LENGTH@ 4
---UPD Block@@ThenBody:{  String to=destinationName != null ? destinationName : "" + destination;  LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable: " + exchange + " with destination: "+ to);  exchange.getIn().setHeader("JMSReplyTo",null);} @TO@ ThenBody:{  String to=destinationName != null ? destinationName : "" + destination;  LOG.warn("Disabling JMSReplyTo as this Exchange is not OUT capable with JMSReplyTo: " + replyTo + " to destination: "+ to+ " for Exchange: "+ exchange);  exchange.getIn().setHeader("JMSReplyTo",null);} @AT@ 12136 @LENGTH@ 646


INS MethodDeclaration@@public, void, MethodName:testBufferSizeOutsideTransaction, Exception,  @TO@ TypeDeclaration@@[public]TransactionAwareBufferedWriterTests,  @AT@ 1897 @LENGTH@ 134
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testBufferSizeOutsideTransaction, Exception,  @AT@ 1897 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testBufferSizeOutsideTransaction, Exception,  @AT@ 1904 @LENGTH@ 4
---INS SimpleName@@MethodName:testBufferSizeOutsideTransaction @TO@ MethodDeclaration@@public, void, MethodName:testBufferSizeOutsideTransaction, Exception,  @AT@ 1909 @LENGTH@ 32
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testBufferSizeOutsideTransaction, Exception,  @AT@ 1951 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:writer.write("foo") @TO@ MethodDeclaration@@public, void, MethodName:testBufferSizeOutsideTransaction, Exception,  @AT@ 1965 @LENGTH@ 20
------INS MethodInvocation@@writer.write("foo") @TO@ ExpressionStatement@@MethodInvocation:writer.write("foo") @AT@ 1965 @LENGTH@ 19
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.write("foo") @AT@ 1965 @LENGTH@ 6
---------INS SimpleName@@MethodName:write:["foo"] @TO@ MethodInvocation@@writer.write("foo") @AT@ 1972 @LENGTH@ 12
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:write:["foo"] @AT@ 1978 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(0,writer.getBufferSize()) @TO@ MethodDeclaration@@public, void, MethodName:testBufferSizeOutsideTransaction, Exception,  @AT@ 1988 @LENGTH@ 40
------INS MethodInvocation@@assertEquals(0,writer.getBufferSize()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(0,writer.getBufferSize()) @AT@ 1988 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertEquals:[0, writer.getBufferSize()] @TO@ MethodInvocation@@assertEquals(0,writer.getBufferSize()) @AT@ 1988 @LENGTH@ 39
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[0, writer.getBufferSize()] @AT@ 2001 @LENGTH@ 1
------------INS MethodInvocation@@writer.getBufferSize() @TO@ SimpleName@@MethodName:assertEquals:[0, writer.getBufferSize()] @AT@ 2004 @LENGTH@ 22
---------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.getBufferSize() @AT@ 2004 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getBufferSize:[] @TO@ MethodInvocation@@writer.getBufferSize() @AT@ 2011 @LENGTH@ 15


INS IfStatement@@if (fs == null) {  return null;} @TO@ MethodDeclaration@@public, CustomerUpdate, MethodName:mapFieldSet, FieldSet fs,  @AT@ 1084 @LENGTH@ 37
---INS InfixExpression@@fs == null @TO@ IfStatement@@if (fs == null) {  return null;} @AT@ 1088 @LENGTH@ 10
------INS SimpleName@@fs @TO@ InfixExpression@@fs == null @AT@ 1088 @LENGTH@ 2
------INS Operator@@== @TO@ InfixExpression@@fs == null @AT@ 1090 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@fs == null @AT@ 1094 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (fs == null) {  return null;} @AT@ 1100 @LENGTH@ 21
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 1105 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 1112 @LENGTH@ 4


UPD ReturnStatement@@InfixExpression:protocol + "://" + (username != null ? username : "anonymous")+ "@"+ host+ ":"+ port @TO@ InfixExpression:protocol + "://" + (username != null ? username : "anonymous")+ "@"+ host+ ":"+ getPort() @AT@ 1783 @LENGTH@ 96
---UPD InfixExpression@@protocol + "://" + (username != null ? username : "anonymous")+ "@"+ host+ ":"+ port @TO@ protocol + "://" + (username != null ? username : "anonymous")+ "@"+ host+ ":"+ getPort() @AT@ 1790 @LENGTH@ 88
------INS MethodInvocation@@MethodName:getPort:[] @TO@ InfixExpression@@protocol + "://" + (username != null ? username : "anonymous")+ "@"+ host+ ":"+ port @AT@ 1874 @LENGTH@ 9
------DEL SimpleName@@port @AT@ 1874 @LENGTH@ 4


INS MethodDeclaration@@protected, void, MethodName:registerConvertersAsPropertyEditors, PropertyEditorRegistry registry,  @TO@ TypeDeclaration@@[public]BeanWrapperExpression, [Expression] @AT@ 5587 @LENGTH@ 475
---MOV VariableDeclarationStatement@@Set converters=conversionService.getConversionExecutors(String.class); @TO@ MethodDeclaration@@protected, void, MethodName:registerConvertersAsPropertyEditors, PropertyEditorRegistry registry,  @AT@ 3926 @LENGTH@ 72
---MOV ForStatement@@for (Iterator it=converters.iterator(); it.hasNext(); ) {  ConversionExecutor converter=(ConversionExecutor)it.next();  beanWrapper.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter));} @TO@ MethodDeclaration@@protected, void, MethodName:registerConvertersAsPropertyEditors, PropertyEditorRegistry registry,  @AT@ 4002 @LENGTH@ 236
------UPD ExpressionStatement@@MethodInvocation:beanWrapper.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter)) @TO@ MethodInvocation:registry.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter)) @AT@ 4132 @LENGTH@ 101
------INS IfStatement@@if (!converter.getTargetClass().getName().equals("java.lang.Enum")) {  registry.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter));} @TO@ ForStatement@@for (Iterator it=converters.iterator(); it.hasNext(); ) {  ConversionExecutor converter=(ConversionExecutor)it.next();  beanWrapper.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter));} @AT@ 5878 @LENGTH@ 177
---------INS PrefixExpression@@!converter.getTargetClass().getName().equals("java.lang.Enum") @TO@ IfStatement@@if (!converter.getTargetClass().getName().equals("java.lang.Enum")) {  registry.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter));} @AT@ 5882 @LENGTH@ 62
------------INS Operator@@! @TO@ PrefixExpression@@!converter.getTargetClass().getName().equals("java.lang.Enum") @AT@ 5882 @LENGTH@ 1
------------INS MethodInvocation@@converter.getTargetClass().getName().equals("java.lang.Enum") @TO@ PrefixExpression@@!converter.getTargetClass().getName().equals("java.lang.Enum") @AT@ 5883 @LENGTH@ 61
---------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@converter.getTargetClass().getName().equals("java.lang.Enum") @AT@ 5883 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:getTargetClass:[] @TO@ MethodInvocation@@converter.getTargetClass().getName().equals("java.lang.Enum") @AT@ 5883 @LENGTH@ 26
---------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.getTargetClass().getName().equals("java.lang.Enum") @AT@ 5883 @LENGTH@ 9
---------------INS SimpleName@@MethodName:equals:["java.lang.Enum"] @TO@ MethodInvocation@@converter.getTargetClass().getName().equals("java.lang.Enum") @AT@ 5920 @LENGTH@ 24
------------------INS StringLiteral@@"java.lang.Enum" @TO@ SimpleName@@MethodName:equals:["java.lang.Enum"] @AT@ 5927 @LENGTH@ 16
---------INS Block@@ThenBody:{  registry.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter));} @TO@ IfStatement@@if (!converter.getTargetClass().getName().equals("java.lang.Enum")) {  registry.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter));} @AT@ 5946 @LENGTH@ 109
------------MOV ExpressionStatement@@MethodInvocation:beanWrapper.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter)) @TO@ Block@@ThenBody:{  registry.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter));} @AT@ 4132 @LENGTH@ 101
---------------UPD MethodInvocation@@beanWrapper.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter)) @TO@ registry.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter)) @AT@ 4132 @LENGTH@ 100
------------------UPD SimpleName@@Name:beanWrapper @TO@ Name:registry @AT@ 4132 @LENGTH@ 11
------------MOV ExpressionStatement@@MethodInvocation:beanWrapper.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter)) @TO@ Block@@ThenBody:{  registry.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter));} @AT@ 4132 @LENGTH@ 101
---------------UPD MethodInvocation@@beanWrapper.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter)) @TO@ registry.registerCustomEditor(converter.getTargetClass(),new PropertyEditorConverter(converter)) @AT@ 4132 @LENGTH@ 100
------------------UPD SimpleName@@Name:beanWrapper @TO@ Name:registry @AT@ 4132 @LENGTH@ 11
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:registerConvertersAsPropertyEditors, PropertyEditorRegistry registry,  @AT@ 5587 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:registerConvertersAsPropertyEditors, PropertyEditorRegistry registry,  @AT@ 5597 @LENGTH@ 4
---INS SimpleName@@MethodName:registerConvertersAsPropertyEditors @TO@ MethodDeclaration@@protected, void, MethodName:registerConvertersAsPropertyEditors, PropertyEditorRegistry registry,  @AT@ 5602 @LENGTH@ 35
---INS SingleVariableDeclaration@@PropertyEditorRegistry registry @TO@ MethodDeclaration@@protected, void, MethodName:registerConvertersAsPropertyEditors, PropertyEditorRegistry registry,  @AT@ 5638 @LENGTH@ 31
------INS SimpleType@@PropertyEditorRegistry @TO@ SingleVariableDeclaration@@PropertyEditorRegistry registry @AT@ 5638 @LENGTH@ 22
------INS SimpleName@@registry @TO@ SingleVariableDeclaration@@PropertyEditorRegistry registry @AT@ 5661 @LENGTH@ 8


INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@protected, Object, MethodName:getHandlerInternal, HttpServletRequest request, Exception,  @AT@ 4545 @LENGTH@ 12
---INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4552 @LENGTH@ 4


INS MethodDeclaration@@public, static, boolean, MethodName:hasProperties, Map properties, String optionPrefix,  @TO@ TypeDeclaration@@[public, final]IntrospectionSupport,  @AT@ 3913 @LENGTH@ 542
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasProperties, Map properties, String optionPrefix,  @AT@ 3913 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasProperties, Map properties, String optionPrefix,  @AT@ 3920 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasProperties, Map properties, String optionPrefix,  @AT@ 3927 @LENGTH@ 7
---INS SimpleName@@MethodName:hasProperties @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasProperties, Map properties, String optionPrefix,  @AT@ 3935 @LENGTH@ 13
---INS SingleVariableDeclaration@@Map properties @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasProperties, Map properties, String optionPrefix,  @AT@ 3949 @LENGTH@ 14
------INS SimpleType@@Map @TO@ SingleVariableDeclaration@@Map properties @AT@ 3949 @LENGTH@ 3
------INS SimpleName@@properties @TO@ SingleVariableDeclaration@@Map properties @AT@ 3953 @LENGTH@ 10
---INS SingleVariableDeclaration@@String optionPrefix @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasProperties, Map properties, String optionPrefix,  @AT@ 3965 @LENGTH@ 19
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String optionPrefix @AT@ 3965 @LENGTH@ 6
------INS SimpleName@@optionPrefix @TO@ SingleVariableDeclaration@@String optionPrefix @AT@ 3972 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(properties,"properties") @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasProperties, Map properties, String optionPrefix,  @AT@ 3996 @LENGTH@ 47
------INS MethodInvocation@@ObjectHelper.notNull(properties,"properties") @TO@ ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(properties,"properties") @AT@ 3996 @LENGTH@ 46
---------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.notNull(properties,"properties") @AT@ 3996 @LENGTH@ 12
---------INS SimpleName@@MethodName:notNull:[properties, "properties"] @TO@ MethodInvocation@@ObjectHelper.notNull(properties,"properties") @AT@ 4009 @LENGTH@ 33
------------INS SimpleName@@properties @TO@ SimpleName@@MethodName:notNull:[properties, "properties"] @AT@ 4017 @LENGTH@ 10
------------INS StringLiteral@@"properties" @TO@ SimpleName@@MethodName:notNull:[properties, "properties"] @AT@ 4029 @LENGTH@ 12
---INS IfStatement@@if (ObjectHelper.isNotEmpty(optionPrefix)) {  for (  Object o : properties.keySet()) {    String name=(String)o;    if (name.startsWith(optionPrefix)) {      return true;    }  }  return false;} else {  return !properties.isEmpty();} @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasProperties, Map properties, String optionPrefix,  @AT@ 4053 @LENGTH@ 396
------INS MethodInvocation@@ObjectHelper.isNotEmpty(optionPrefix) @TO@ IfStatement@@if (ObjectHelper.isNotEmpty(optionPrefix)) {  for (  Object o : properties.keySet()) {    String name=(String)o;    if (name.startsWith(optionPrefix)) {      return true;    }  }  return false;} else {  return !properties.isEmpty();} @AT@ 4057 @LENGTH@ 37
---------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(optionPrefix) @AT@ 4057 @LENGTH@ 12
---------INS SimpleName@@MethodName:isNotEmpty:[optionPrefix] @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(optionPrefix) @AT@ 4070 @LENGTH@ 24
------------INS SimpleName@@optionPrefix @TO@ SimpleName@@MethodName:isNotEmpty:[optionPrefix] @AT@ 4081 @LENGTH@ 12
------INS Block@@ThenBody:{  for (  Object o : properties.keySet()) {    String name=(String)o;    if (name.startsWith(optionPrefix)) {      return true;    }  }  return false;} @TO@ IfStatement@@if (ObjectHelper.isNotEmpty(optionPrefix)) {  for (  Object o : properties.keySet()) {    String name=(String)o;    if (name.startsWith(optionPrefix)) {      return true;    }  }  return false;} else {  return !properties.isEmpty();} @AT@ 4096 @LENGTH@ 294
---------INS EnhancedForStatement@@for (Object o : properties.keySet()) {  String name=(String)o;  if (name.startsWith(optionPrefix)) {    return true;  }} @TO@ Block@@ThenBody:{  for (  Object o : properties.keySet()) {    String name=(String)o;    if (name.startsWith(optionPrefix)) {      return true;    }  }  return false;} @AT@ 4110 @LENGTH@ 198
------------INS SingleVariableDeclaration@@Object o @TO@ EnhancedForStatement@@for (Object o : properties.keySet()) {  String name=(String)o;  if (name.startsWith(optionPrefix)) {    return true;  }} @AT@ 4115 @LENGTH@ 8
---------------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object o @AT@ 4115 @LENGTH@ 6
---------------INS SimpleName@@o @TO@ SingleVariableDeclaration@@Object o @AT@ 4122 @LENGTH@ 1
------------INS MethodInvocation@@properties.keySet() @TO@ EnhancedForStatement@@for (Object o : properties.keySet()) {  String name=(String)o;  if (name.startsWith(optionPrefix)) {    return true;  }} @AT@ 4126 @LENGTH@ 19
---------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.keySet() @AT@ 4126 @LENGTH@ 10
---------------INS SimpleName@@MethodName:keySet:[] @TO@ MethodInvocation@@properties.keySet() @AT@ 4137 @LENGTH@ 8
------------INS VariableDeclarationStatement@@String name=(String)o; @TO@ EnhancedForStatement@@for (Object o : properties.keySet()) {  String name=(String)o;  if (name.startsWith(optionPrefix)) {    return true;  }} @AT@ 4165 @LENGTH@ 25
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String name=(String)o; @AT@ 4165 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@name=(String)o @TO@ VariableDeclarationStatement@@String name=(String)o; @AT@ 4172 @LENGTH@ 17
------------------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=(String)o @AT@ 4172 @LENGTH@ 4
------------------INS CastExpression@@(String)o @TO@ VariableDeclarationFragment@@name=(String)o @AT@ 4179 @LENGTH@ 10
---------------------INS SimpleType@@String @TO@ CastExpression@@(String)o @AT@ 4180 @LENGTH@ 6
---------------------INS SimpleName@@o @TO@ CastExpression@@(String)o @AT@ 4188 @LENGTH@ 1
------------INS IfStatement@@if (name.startsWith(optionPrefix)) {  return true;} @TO@ EnhancedForStatement@@for (Object o : properties.keySet()) {  String name=(String)o;  if (name.startsWith(optionPrefix)) {    return true;  }} @AT@ 4207 @LENGTH@ 87
---------------INS MethodInvocation@@name.startsWith(optionPrefix) @TO@ IfStatement@@if (name.startsWith(optionPrefix)) {  return true;} @AT@ 4211 @LENGTH@ 29
------------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.startsWith(optionPrefix) @AT@ 4211 @LENGTH@ 4
------------------INS SimpleName@@MethodName:startsWith:[optionPrefix] @TO@ MethodInvocation@@name.startsWith(optionPrefix) @AT@ 4216 @LENGTH@ 24
---------------------INS SimpleName@@optionPrefix @TO@ SimpleName@@MethodName:startsWith:[optionPrefix] @AT@ 4227 @LENGTH@ 12
---------------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (name.startsWith(optionPrefix)) {  return true;} @AT@ 4242 @LENGTH@ 52
------------------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 4264 @LENGTH@ 12
---------------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 4271 @LENGTH@ 4
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  for (  Object o : properties.keySet()) {    String name=(String)o;    if (name.startsWith(optionPrefix)) {      return true;    }  }  return false;} @AT@ 4367 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4374 @LENGTH@ 5
------INS Block@@ElseBody:{  return !properties.isEmpty();} @TO@ IfStatement@@if (ObjectHelper.isNotEmpty(optionPrefix)) {  for (  Object o : properties.keySet()) {    String name=(String)o;    if (name.startsWith(optionPrefix)) {      return true;    }  }  return false;} else {  return !properties.isEmpty();} @AT@ 4396 @LENGTH@ 53
---------INS ReturnStatement@@PrefixExpression:!properties.isEmpty() @TO@ Block@@ElseBody:{  return !properties.isEmpty();} @AT@ 4410 @LENGTH@ 29
------------INS PrefixExpression@@!properties.isEmpty() @TO@ ReturnStatement@@PrefixExpression:!properties.isEmpty() @AT@ 4417 @LENGTH@ 21
---------------INS Operator@@! @TO@ PrefixExpression@@!properties.isEmpty() @AT@ 4417 @LENGTH@ 1
---------------INS MethodInvocation@@properties.isEmpty() @TO@ PrefixExpression@@!properties.isEmpty() @AT@ 4418 @LENGTH@ 20
------------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.isEmpty() @AT@ 4418 @LENGTH@ 10
------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@properties.isEmpty() @AT@ 4429 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:this.file=file @TO@ Assignment:this.file=FileUtil.normalizePath(file) @AT@ 1116 @LENGTH@ 17
---UPD Assignment@@this.file=file @TO@ this.file=FileUtil.normalizePath(file) @AT@ 1116 @LENGTH@ 16
------DEL SimpleName@@file @AT@ 1128 @LENGTH@ 4
------INS MethodInvocation@@FileUtil.normalizePath(file) @TO@ Assignment@@this.file=file @AT@ 1232 @LENGTH@ 28
---------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.normalizePath(file) @AT@ 1232 @LENGTH@ 8
---------INS SimpleName@@MethodName:normalizePath:[file] @TO@ MethodInvocation@@FileUtil.normalizePath(file) @AT@ 1241 @LENGTH@ 19
------------INS SimpleName@@file @TO@ SimpleName@@MethodName:normalizePath:[file] @AT@ 1255 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("Header of message",headerValue,actualHeader) @TO@ MethodInvocation:assertEquals("Header of message",headerValue,actualHeader.toString()) @AT@ 11583 @LENGTH@ 61
---UPD MethodInvocation@@assertEquals("Header of message",headerValue,actualHeader) @TO@ assertEquals("Header of message",headerValue,actualHeader.toString()) @AT@ 11583 @LENGTH@ 60
------UPD SimpleName@@MethodName:assertEquals:["Header of message", headerValue, actualHeader] @TO@ MethodName:assertEquals:["Header of message", headerValue, actualHeader.toString()] @AT@ 11583 @LENGTH@ 60
---------INS MethodInvocation@@actualHeader.toString() @TO@ SimpleName@@MethodName:assertEquals:["Header of message", headerValue, actualHeader] @AT@ 11630 @LENGTH@ 23
------------INS SimpleName@@Name:actualHeader @TO@ MethodInvocation@@actualHeader.toString() @AT@ 11630 @LENGTH@ 12
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@actualHeader.toString() @AT@ 11643 @LENGTH@ 10
---------DEL SimpleName@@actualHeader @AT@ 11630 @LENGTH@ 12


INS TryStatement@@try {  deleted=operations.deleteFile(to.getAbsolutelFileName());} catch (RemoteFileOperationFailedException e) {} @TO@ MethodDeclaration@@private, static, RemoteFile, MethodName:renameFile, RemoteFileOperations operations, RemoteFile from, RemoteFile to, IOException,  @AT@ 3276 @LENGTH@ 191
---INS ExpressionStatement@@Assignment:deleted=operations.deleteFile(to.getAbsolutelFileName()) @TO@ TryStatement@@try {  deleted=operations.deleteFile(to.getAbsolutelFileName());} catch (RemoteFileOperationFailedException e) {} @AT@ 3294 @LENGTH@ 59
------INS Assignment@@deleted=operations.deleteFile(to.getAbsolutelFileName()) @TO@ ExpressionStatement@@Assignment:deleted=operations.deleteFile(to.getAbsolutelFileName()) @AT@ 3294 @LENGTH@ 58
---------MOV MethodInvocation@@operations.deleteFile(to.getAbsolutelFileName()) @TO@ Assignment@@deleted=operations.deleteFile(to.getAbsolutelFileName()) @AT@ 3261 @LENGTH@ 48
---------INS SimpleName@@deleted @TO@ Assignment@@deleted=operations.deleteFile(to.getAbsolutelFileName()) @AT@ 3294 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@deleted=operations.deleteFile(to.getAbsolutelFileName()) @AT@ 3301 @LENGTH@ 1
---INS CatchClause@@catch (RemoteFileOperationFailedException e) {} @TO@ TryStatement@@try {  deleted=operations.deleteFile(to.getAbsolutelFileName());} catch (RemoteFileOperationFailedException e) {} @AT@ 3364 @LENGTH@ 103
------INS SingleVariableDeclaration@@RemoteFileOperationFailedException e @TO@ CatchClause@@catch (RemoteFileOperationFailedException e) {} @AT@ 3371 @LENGTH@ 36
---------INS SimpleType@@RemoteFileOperationFailedException @TO@ SingleVariableDeclaration@@RemoteFileOperationFailedException e @AT@ 3371 @LENGTH@ 34
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@RemoteFileOperationFailedException e @AT@ 3406 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(QUERY_STRING,exchange.getProperty(RestletConstants.QUERY_STRING,String.class)) @TO@ MethodInvocation:assertEquals(QUERY_STRING,exchange.getIn().getHeader(RestletConstants.QUERY_STRING,String.class)) @AT@ 1830 @LENGTH@ 115
---UPD MethodInvocation@@assertEquals(QUERY_STRING,exchange.getProperty(RestletConstants.QUERY_STRING,String.class)) @TO@ assertEquals(QUERY_STRING,exchange.getIn().getHeader(RestletConstants.QUERY_STRING,String.class)) @AT@ 1830 @LENGTH@ 114
------UPD SimpleName@@MethodName:assertEquals:[QUERY_STRING, exchange.getProperty(RestletConstants.QUERY_STRING,String.class)] @TO@ MethodName:assertEquals:[QUERY_STRING, exchange.getIn().getHeader(RestletConstants.QUERY_STRING,String.class)] @AT@ 1830 @LENGTH@ 114
---------UPD MethodInvocation@@exchange.getProperty(RestletConstants.QUERY_STRING,String.class) @TO@ exchange.getIn().getHeader(RestletConstants.QUERY_STRING,String.class) @AT@ 1878 @LENGTH@ 65
------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getProperty(RestletConstants.QUERY_STRING,String.class) @AT@ 1857 @LENGTH@ 16
------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getProperty(RestletConstants.QUERY_STRING,String.class) @AT@ 1857 @LENGTH@ 16
------------UPD SimpleName@@MethodName:getProperty:[RestletConstants.QUERY_STRING, String.class] @TO@ MethodName:getHeader:[RestletConstants.QUERY_STRING, String.class] @AT@ 1887 @LENGTH@ 56


UPD MethodDeclaration@@void, MethodName:processBatch, List<Exchange> exchanges, Exception,  @TO@ void, MethodName:processBatch, Queue exchanges, Exception,  @AT@ 1414 @LENGTH@ 56
---UPD SingleVariableDeclaration@@List<Exchange> exchanges @TO@ Queue exchanges @AT@ 1427 @LENGTH@ 24
------DEL ParameterizedType@@List<Exchange> @AT@ 1427 @LENGTH@ 14
---------DEL SimpleType@@List @AT@ 1427 @LENGTH@ 4
---------DEL SimpleType@@Exchange @AT@ 1432 @LENGTH@ 8
------INS SimpleType@@Queue @TO@ SingleVariableDeclaration@@List<Exchange> exchanges @AT@ 1428 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"logo.jpeg") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"logo.jpeg") @AT@ 3244 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"logo.jpeg") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"logo.jpeg") @AT@ 3244 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "logo.jpeg"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "logo.jpeg"] @AT@ 3261 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 3271 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 3271 @LENGTH@ 13


UPD VariableDeclarationStatement@@boolean renamed=operations.renameFile(from.getAbsoluteFileName(),to.getAbsoluteFileName()); @TO@ boolean renamed=operations.renameFile(from.getAbsoluteFilePath(),to.getAbsoluteFilePath()); @AT@ 3336 @LENGTH@ 94
---UPD VariableDeclarationFragment@@renamed=operations.renameFile(from.getAbsoluteFileName(),to.getAbsoluteFileName()) @TO@ renamed=operations.renameFile(from.getAbsoluteFilePath(),to.getAbsoluteFilePath()) @AT@ 3344 @LENGTH@ 85
------UPD MethodInvocation@@operations.renameFile(from.getAbsoluteFileName(),to.getAbsoluteFileName()) @TO@ operations.renameFile(from.getAbsoluteFilePath(),to.getAbsoluteFilePath()) @AT@ 3354 @LENGTH@ 75
---------UPD SimpleName@@MethodName:renameFile:[from.getAbsoluteFileName(), to.getAbsoluteFileName()] @TO@ MethodName:renameFile:[from.getAbsoluteFilePath(), to.getAbsoluteFilePath()] @AT@ 3365 @LENGTH@ 64
------------UPD MethodInvocation@@from.getAbsoluteFileName() @TO@ from.getAbsoluteFilePath() @AT@ 3376 @LENGTH@ 26
---------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 3381 @LENGTH@ 21
------------UPD MethodInvocation@@to.getAbsoluteFileName() @TO@ to.getAbsoluteFilePath() @AT@ 3404 @LENGTH@ 24
---------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 3407 @LENGTH@ 21


MOV FieldDeclaration@@private, String, [body="Hello World this file will be deleted"] @TO@ TypeDeclaration@@[public]FromFtpThirdPoolOkTest, FtpServerTestSupport @AT@ 1094 @LENGTH@ 62


INS ExpressionStatement@@MethodInvocation:Thread.sleep(10) @TO@ MethodDeclaration@@public, void, MethodName:testAggregateBatchSize, Exception,  @AT@ 5581 @LENGTH@ 17
---INS MethodInvocation@@Thread.sleep(10) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(10) @AT@ 5581 @LENGTH@ 16
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(10) @AT@ 5581 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[10] @TO@ MethodInvocation@@Thread.sleep(10) @AT@ 5588 @LENGTH@ 9
---------INS NumberLiteral@@10 @TO@ SimpleName@@MethodName:sleep:[10] @AT@ 5594 @LENGTH@ 2


INS ExpressionStatement@@Assignment:offset=offset < 0 ? 0 : offset @TO@ MethodDeclaration@@public, String, MethodName:generateJumpToItemQuery, int itemIndex, int pageSize,  @AT@ 1562 @LENGTH@ 31
---INS Assignment@@offset=offset < 0 ? 0 : offset @TO@ ExpressionStatement@@Assignment:offset=offset < 0 ? 0 : offset @AT@ 1562 @LENGTH@ 30
------INS SimpleName@@offset @TO@ Assignment@@offset=offset < 0 ? 0 : offset @AT@ 1562 @LENGTH@ 6
------INS Operator@@= @TO@ Assignment@@offset=offset < 0 ? 0 : offset @AT@ 1568 @LENGTH@ 1
------INS ConditionalExpression@@offset < 0 ? 0 : offset @TO@ Assignment@@offset=offset < 0 ? 0 : offset @AT@ 1571 @LENGTH@ 21
---------INS InfixExpression@@offset < 0 @TO@ ConditionalExpression@@offset < 0 ? 0 : offset @AT@ 1571 @LENGTH@ 8
------------INS SimpleName@@offset @TO@ InfixExpression@@offset < 0 @AT@ 1571 @LENGTH@ 6
------------INS Operator@@< @TO@ InfixExpression@@offset < 0 @AT@ 1577 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@offset < 0 @AT@ 1578 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ ConditionalExpression@@offset < 0 ? 0 : offset @AT@ 1582 @LENGTH@ 1
---------INS SimpleName@@offset @TO@ ConditionalExpression@@offset < 0 ? 0 : offset @AT@ 1586 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals("/springtravel/app/foo",url) @TO@ MethodInvocation:assertEquals("/springtravel/app/foo.htm",url) @AT@ 2164 @LENGTH@ 43
---UPD MethodInvocation@@assertEquals("/springtravel/app/foo",url) @TO@ assertEquals("/springtravel/app/foo.htm",url) @AT@ 2164 @LENGTH@ 42
------UPD SimpleName@@MethodName:assertEquals:["/springtravel/app/foo", url] @TO@ MethodName:assertEquals:["/springtravel/app/foo.htm", url] @AT@ 2164 @LENGTH@ 42
---------UPD StringLiteral@@"/springtravel/app/foo" @TO@ "/springtravel/app/foo.htm" @AT@ 2177 @LENGTH@ 23


UPD SynchronizedStatement@@synchronized (getClass()) {  if (!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME)) {    BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());  }} @TO@ synchronized (DefaultConfigurationBuilder.class) {  if (!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME)) {    BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());  }} @AT@ 31026 @LENGTH@ 313
---INS TypeLiteral@@DefaultConfigurationBuilder.class @TO@ SynchronizedStatement@@synchronized (getClass()) {  if (!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME)) {    BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());  }} @AT@ 31040 @LENGTH@ 33
---DEL MethodInvocation@@MethodName:getClass:[] @AT@ 31040 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:testCompareNewWithOldAfterCopy, IOException,  @TO@ public, void, MethodName:testCompareNewWithOldAfterCopy, Exception,  @AT@ 1988 @LENGTH@ 621
---UPD SimpleType@@IOException @TO@ Exception @AT@ 2040 @LENGTH@ 11
---UPD VariableDeclarationStatement@@File temp1=File.createTempFile(getClass().getSimpleName(),".txt"); @TO@ File temp1=new File("target/temp1.txt"); @AT@ 2057 @LENGTH@ 69
------UPD VariableDeclarationFragment@@temp1=File.createTempFile(getClass().getSimpleName(),".txt") @TO@ temp1=new File("target/temp1.txt") @AT@ 2062 @LENGTH@ 63
---------INS ClassInstanceCreation@@File["target/temp1.txt"] @TO@ VariableDeclarationFragment@@temp1=File.createTempFile(getClass().getSimpleName(),".txt") @AT@ 2068 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@File["target/temp1.txt"] @AT@ 2068 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["target/temp1.txt"] @AT@ 2072 @LENGTH@ 4
------------INS StringLiteral@@"target/temp1.txt" @TO@ ClassInstanceCreation@@File["target/temp1.txt"] @AT@ 2077 @LENGTH@ 18
---------DEL MethodInvocation@@File.createTempFile(getClass().getSimpleName(),".txt") @AT@ 2070 @LENGTH@ 55
------------DEL SimpleName@@Name:File @AT@ 2070 @LENGTH@ 4
------------DEL SimpleName@@MethodName:createTempFile:[getClass().getSimpleName(), ".txt"] @AT@ 2075 @LENGTH@ 50
---------------DEL MethodInvocation@@getClass().getSimpleName() @AT@ 2090 @LENGTH@ 26
------------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 2090 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:getSimpleName:[] @AT@ 2101 @LENGTH@ 15
---------------DEL StringLiteral@@".txt" @AT@ 2118 @LENGTH@ 6
---INS VariableDeclarationStatement@@File temp2=new File("target/temp2.txt"); @TO@ MethodDeclaration@@public, void, MethodName:testCompareNewWithOldAfterCopy, IOException,  @AT@ 2100 @LENGTH@ 42
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File temp2=new File("target/temp2.txt"); @AT@ 2100 @LENGTH@ 4
------INS VariableDeclarationFragment@@temp2=new File("target/temp2.txt") @TO@ VariableDeclarationStatement@@File temp2=new File("target/temp2.txt"); @AT@ 2105 @LENGTH@ 36
---------INS SimpleName@@temp2 @TO@ VariableDeclarationFragment@@temp2=new File("target/temp2.txt") @AT@ 2105 @LENGTH@ 5
---------INS ClassInstanceCreation@@File["target/temp2.txt"] @TO@ VariableDeclarationFragment@@temp2=new File("target/temp2.txt") @AT@ 2113 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@File["target/temp2.txt"] @AT@ 2113 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["target/temp2.txt"] @AT@ 2117 @LENGTH@ 4
------------INS StringLiteral@@"target/temp2.txt" @TO@ ClassInstanceCreation@@File["target/temp2.txt"] @AT@ 2122 @LENGTH@ 18
---DEL ExpressionStatement@@MethodInvocation:temp1.deleteOnExit() @AT@ 2130 @LENGTH@ 21
---INS IfStatement@@if (temp1.exists()) temp1.delete(); @TO@ MethodDeclaration@@public, void, MethodName:testCompareNewWithOldAfterCopy, IOException,  @AT@ 2145 @LENGTH@ 35
------INS MethodInvocation@@temp1.exists() @TO@ IfStatement@@if (temp1.exists()) temp1.delete(); @AT@ 2149 @LENGTH@ 14
---------INS SimpleName@@Name:temp1 @TO@ MethodInvocation@@temp1.exists() @AT@ 2149 @LENGTH@ 5
---------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@temp1.exists() @AT@ 2155 @LENGTH@ 8
------INS Block@@ThenBody:temp1.delete(); @TO@ IfStatement@@if (temp1.exists()) temp1.delete(); @AT@ 2165 @LENGTH@ 15
---------INS ExpressionStatement@@MethodInvocation:temp1.delete() @TO@ Block@@ThenBody:temp1.delete(); @AT@ 2165 @LENGTH@ 15
------------MOV MethodInvocation@@temp1.deleteOnExit() @TO@ ExpressionStatement@@MethodInvocation:temp1.delete() @AT@ 2130 @LENGTH@ 20
---------------UPD SimpleName@@MethodName:deleteOnExit:[] @TO@ MethodName:delete:[] @AT@ 2136 @LENGTH@ 14
---DEL VariableDeclarationStatement@@File temp2=File.createTempFile(getClass().getSimpleName(),".txt"); @AT@ 2155 @LENGTH@ 69
------DEL SimpleType@@File @AT@ 2155 @LENGTH@ 4
------DEL VariableDeclarationFragment@@temp2=File.createTempFile(getClass().getSimpleName(),".txt") @AT@ 2160 @LENGTH@ 63
---------DEL SimpleName@@temp2 @AT@ 2160 @LENGTH@ 5
---------DEL MethodInvocation@@File.createTempFile(getClass().getSimpleName(),".txt") @AT@ 2168 @LENGTH@ 55
------------DEL SimpleName@@MethodName:createTempFile:[getClass().getSimpleName(), ".txt"] @AT@ 2173 @LENGTH@ 50
---------------DEL MethodInvocation@@getClass().getSimpleName() @AT@ 2188 @LENGTH@ 26
---------------DEL StringLiteral@@".txt" @AT@ 2216 @LENGTH@ 6
---INS IfStatement@@if (temp2.exists()) temp2.delete(); @TO@ MethodDeclaration@@public, void, MethodName:testCompareNewWithOldAfterCopy, IOException,  @AT@ 2183 @LENGTH@ 35
------INS MethodInvocation@@temp2.exists() @TO@ IfStatement@@if (temp2.exists()) temp2.delete(); @AT@ 2187 @LENGTH@ 14
---------INS SimpleName@@Name:temp2 @TO@ MethodInvocation@@temp2.exists() @AT@ 2187 @LENGTH@ 5
---------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@temp2.exists() @AT@ 2193 @LENGTH@ 8
------INS Block@@ThenBody:temp2.delete(); @TO@ IfStatement@@if (temp2.exists()) temp2.delete(); @AT@ 2203 @LENGTH@ 15
---------INS ExpressionStatement@@MethodInvocation:temp2.delete() @TO@ Block@@ThenBody:temp2.delete(); @AT@ 2203 @LENGTH@ 15
------------INS MethodInvocation@@temp2.delete() @TO@ ExpressionStatement@@MethodInvocation:temp2.delete() @AT@ 2203 @LENGTH@ 14
---------------MOV SimpleName@@Name:File @TO@ MethodInvocation@@temp2.delete() @AT@ 2168 @LENGTH@ 4
---------------INS SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@temp2.delete() @AT@ 2209 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:temp1.getParentFile().mkdirs() @TO@ MethodDeclaration@@public, void, MethodName:testCompareNewWithOldAfterCopy, IOException,  @AT@ 2221 @LENGTH@ 31
------INS MethodInvocation@@temp1.getParentFile().mkdirs() @TO@ ExpressionStatement@@MethodInvocation:temp1.getParentFile().mkdirs() @AT@ 2221 @LENGTH@ 30
---------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@temp1.getParentFile().mkdirs() @AT@ 2188 @LENGTH@ 10
---------MOV SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@temp1.getParentFile().mkdirs() @AT@ 2199 @LENGTH@ 15
---------INS SimpleName@@Name:temp1 @TO@ MethodInvocation@@temp1.getParentFile().mkdirs() @AT@ 2221 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:temp2.deleteOnExit() @TO@ MethodInvocation:temp2.createNewFile() @AT@ 2228 @LENGTH@ 21
------UPD MethodInvocation@@temp2.deleteOnExit() @TO@ temp2.createNewFile() @AT@ 2228 @LENGTH@ 20
---------UPD SimpleName@@MethodName:deleteOnExit:[] @TO@ MethodName:createNewFile:[] @AT@ 2234 @LENGTH@ 14
---UPD ExpressionStatement@@MethodInvocation:assertTrue(temp1.exists() && temp2.exists()) @TO@ MethodInvocation:assertTrue(!temp1.exists() && temp2.exists()) @AT@ 2253 @LENGTH@ 45
------UPD MethodInvocation@@assertTrue(temp1.exists() && temp2.exists()) @TO@ assertTrue(!temp1.exists() && temp2.exists()) @AT@ 2253 @LENGTH@ 44
---------UPD SimpleName@@MethodName:assertTrue:[temp1.exists() && temp2.exists()] @TO@ MethodName:assertTrue:[!temp1.exists() && temp2.exists()] @AT@ 2253 @LENGTH@ 44
------------UPD InfixExpression@@temp1.exists() && temp2.exists() @TO@ !temp1.exists() && temp2.exists() @AT@ 2264 @LENGTH@ 32
---------------DEL MethodInvocation@@temp1.exists() @AT@ 2264 @LENGTH@ 14
---------------INS PrefixExpression@@!temp1.exists() @TO@ InfixExpression@@temp1.exists() && temp2.exists() @AT@ 2291 @LENGTH@ 15
------------------INS Operator@@! @TO@ PrefixExpression@@!temp1.exists() @AT@ 2291 @LENGTH@ 1
------------------INS MethodInvocation@@temp1.exists() @TO@ PrefixExpression@@!temp1.exists() @AT@ 2292 @LENGTH@ 14
---------------------MOV SimpleName@@Name:temp1 @TO@ MethodInvocation@@temp1.exists() @AT@ 2264 @LENGTH@ 5
---------------------MOV SimpleName@@Name:temp1 @TO@ MethodInvocation@@temp1.exists() @AT@ 2264 @LENGTH@ 5
---------------------MOV SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@temp1.exists() @AT@ 2270 @LENGTH@ 8
---------------------MOV SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@temp1.exists() @AT@ 2270 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodDeclaration@@public, void, MethodName:testCompareNewWithOldAfterCopy, IOException,  @AT@ 2401 @LENGTH@ 19
------INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 2401 @LENGTH@ 18
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 2401 @LENGTH@ 6
---------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 2408 @LENGTH@ 11
------------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 2414 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,comparator.compare(new FileSystemResource(temp1),new FileSystemResource(temp2))) @TO@ MethodDeclaration@@public, void, MethodName:testCompareNewWithOldAfterCopy, IOException,  @AT@ 2571 @LENGTH@ 98
------INS MethodInvocation@@assertEquals(1,comparator.compare(new FileSystemResource(temp1),new FileSystemResource(temp2))) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,comparator.compare(new FileSystemResource(temp1),new FileSystemResource(temp2))) @AT@ 2571 @LENGTH@ 97
---------INS SimpleName@@MethodName:assertEquals:[1, comparator.compare(new FileSystemResource(temp1),new FileSystemResource(temp2))] @TO@ MethodInvocation@@assertEquals(1,comparator.compare(new FileSystemResource(temp1),new FileSystemResource(temp2))) @AT@ 2571 @LENGTH@ 97
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, comparator.compare(new FileSystemResource(temp1),new FileSystemResource(temp2))] @AT@ 2584 @LENGTH@ 1
------------INS MethodInvocation@@comparator.compare(new FileSystemResource(temp1),new FileSystemResource(temp2)) @TO@ SimpleName@@MethodName:assertEquals:[1, comparator.compare(new FileSystemResource(temp1),new FileSystemResource(temp2))] @AT@ 2587 @LENGTH@ 80
---------------INS SimpleName@@Name:comparator @TO@ MethodInvocation@@comparator.compare(new FileSystemResource(temp1),new FileSystemResource(temp2)) @AT@ 2587 @LENGTH@ 10
---------------INS SimpleName@@MethodName:compare:[new FileSystemResource(temp1), new FileSystemResource(temp2)] @TO@ MethodInvocation@@comparator.compare(new FileSystemResource(temp1),new FileSystemResource(temp2)) @AT@ 2598 @LENGTH@ 69
------------------INS ClassInstanceCreation@@FileSystemResource[temp1] @TO@ SimpleName@@MethodName:compare:[new FileSystemResource(temp1), new FileSystemResource(temp2)] @AT@ 2606 @LENGTH@ 29
---------------------INS New@@new @TO@ ClassInstanceCreation@@FileSystemResource[temp1] @AT@ 2606 @LENGTH@ 3
---------------------INS SimpleType@@FileSystemResource @TO@ ClassInstanceCreation@@FileSystemResource[temp1] @AT@ 2610 @LENGTH@ 18
---------------------INS SimpleName@@temp1 @TO@ ClassInstanceCreation@@FileSystemResource[temp1] @AT@ 2629 @LENGTH@ 5
------------------INS ClassInstanceCreation@@FileSystemResource[temp2] @TO@ SimpleName@@MethodName:compare:[new FileSystemResource(temp1), new FileSystemResource(temp2)] @AT@ 2637 @LENGTH@ 29
---------------------INS New@@new @TO@ ClassInstanceCreation@@FileSystemResource[temp2] @AT@ 2637 @LENGTH@ 3
---------------------INS SimpleType@@FileSystemResource @TO@ ClassInstanceCreation@@FileSystemResource[temp2] @AT@ 2641 @LENGTH@ 18
---------------------INS SimpleName@@temp2 @TO@ ClassInstanceCreation@@FileSystemResource[temp2] @AT@ 2660 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:path.replaceAll("/","\\\\") @TO@ MethodInvocation:path.replace('/','\\') @AT@ 1749 @LENGTH@ 36
---UPD MethodInvocation@@path.replaceAll("/","\\\\") @TO@ path.replace('/','\\') @AT@ 1756 @LENGTH@ 28
------UPD SimpleName@@MethodName:replaceAll:["/", "\\\\"] @TO@ MethodName:replace:['/', '\\'] @AT@ 1761 @LENGTH@ 23
---------INS CharacterLiteral@@'/' @TO@ SimpleName@@MethodName:replaceAll:["/", "\\\\"] @AT@ 1769 @LENGTH@ 3
---------DEL StringLiteral@@"/" @AT@ 1772 @LENGTH@ 3
---------INS CharacterLiteral@@'\\' @TO@ SimpleName@@MethodName:replaceAll:["/", "\\\\"] @AT@ 1774 @LENGTH@ 4
---------DEL StringLiteral@@"\\\\" @AT@ 1777 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:contribution.incrementFilterCount(inputs.size() - outputs.size()) @TO@ MethodInvocation:contribution.incrementFilterCount(inputSize - outputs.size()) @AT@ 4276 @LENGTH@ 66
---UPD MethodInvocation@@contribution.incrementFilterCount(inputs.size() - outputs.size()) @TO@ contribution.incrementFilterCount(inputSize - outputs.size()) @AT@ 4276 @LENGTH@ 65
------UPD SimpleName@@MethodName:incrementFilterCount:[inputs.size() - outputs.size()] @TO@ MethodName:incrementFilterCount:[inputSize - outputs.size()] @AT@ 4289 @LENGTH@ 52
---------UPD InfixExpression@@inputs.size() - outputs.size() @TO@ inputSize - outputs.size() @AT@ 4310 @LENGTH@ 30
------------DEL MethodInvocation@@inputs.size() @AT@ 4310 @LENGTH@ 13
---------------DEL SimpleName@@Name:inputs @AT@ 4310 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:size:[] @AT@ 4317 @LENGTH@ 6
------------INS SimpleName@@inputSize @TO@ InfixExpression@@inputs.size() - outputs.size() @AT@ 4348 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:processBatch, List exchanges, Exception,  @TO@ public, void, MethodName:processBatch, Queue exchanges, Exception,  @AT@ 5120 @LENGTH@ 1183
---UPD SingleVariableDeclaration@@List exchanges @TO@ Queue exchanges @AT@ 5145 @LENGTH@ 14
------UPD SimpleType@@List @TO@ Queue @AT@ 5145 @LENGTH@ 4
---DEL VariableDeclarationStatement@@final List<DataHolder> list=exchanges; @AT@ 5243 @LENGTH@ 40
------DEL Modifier@@final @AT@ 5243 @LENGTH@ 5
------DEL ParameterizedType@@List<DataHolder> @AT@ 5249 @LENGTH@ 16
---------DEL SimpleType@@List @AT@ 5249 @LENGTH@ 4
---------DEL SimpleType@@DataHolder @AT@ 5254 @LENGTH@ 10
------DEL VariableDeclarationFragment@@list=exchanges @AT@ 5266 @LENGTH@ 16
---------DEL SimpleName@@list @AT@ 5266 @LENGTH@ 4
---------DEL SimpleName@@exchanges @AT@ 5273 @LENGTH@ 9
---UPD VariableDeclarationStatement@@int total=list.size(); @TO@ int total=exchanges.size(); @AT@ 5293 @LENGTH@ 24
------UPD VariableDeclarationFragment@@total=list.size() @TO@ total=exchanges.size() @AT@ 5297 @LENGTH@ 19
---------UPD MethodInvocation@@list.size() @TO@ exchanges.size() @AT@ 5305 @LENGTH@ 11
------------UPD SimpleName@@Name:list @TO@ Name:exchanges @AT@ 5305 @LENGTH@ 4
---UPD ForStatement@@for (int index=0; index < total && isRunAllowed(); index++) {  Exchange exchange=list.get(index).exchange;  Object data=list.get(index).data;  exchange.setProperty(Exchange.BATCH_INDEX,index);  exchange.setProperty(Exchange.BATCH_SIZE,total);  exchange.setProperty(Exchange.BATCH_COMPLETE,index == total - 1);  if (LOG.isDebugEnabled()) {    LOG.debug("Processing exchange: " + exchange);  }  getProcessor().process(exchange);  try {    if (onConsume != null) {      endpoint.getProcessingStrategy().commit(endpoint,exchange,data,onConsume);    }  } catch (  Exception e) {    handleException(e);  }} @TO@ for (int index=0; index < total && isRunAllowed(); index++) {  DataHolder holder=(DataHolder)exchanges.poll();  Exchange exchange=holder.exchange;  Object data=holder.data;  exchange.setProperty(Exchange.BATCH_INDEX,index);  exchange.setProperty(Exchange.BATCH_SIZE,total);  exchange.setProperty(Exchange.BATCH_COMPLETE,index == total - 1);  if (LOG.isDebugEnabled()) {    LOG.debug("Processing exchange: " + exchange);  }  getProcessor().process(exchange);  try {    if (onConsume != null) {      endpoint.getProcessingStrategy().commit(endpoint,exchange,data,onConsume);    }  } catch (  Exception e) {    handleException(e);  }} @AT@ 5326 @LENGTH@ 971
------INS VariableDeclarationStatement@@DataHolder holder=(DataHolder)exchanges.poll(); @TO@ ForStatement@@for (int index=0; index < total && isRunAllowed(); index++) {  Exchange exchange=list.get(index).exchange;  Object data=list.get(index).data;  exchange.setProperty(Exchange.BATCH_INDEX,index);  exchange.setProperty(Exchange.BATCH_SIZE,total);  exchange.setProperty(Exchange.BATCH_COMPLETE,index == total - 1);  if (LOG.isDebugEnabled()) {    LOG.debug("Processing exchange: " + exchange);  }  getProcessor().process(exchange);  try {    if (onConsume != null) {      endpoint.getProcessingStrategy().commit(endpoint,exchange,data,onConsume);    }  } catch (  Exception e) {    handleException(e);  }} @AT@ 5446 @LENGTH@ 50
---------INS SimpleType@@DataHolder @TO@ VariableDeclarationStatement@@DataHolder holder=(DataHolder)exchanges.poll(); @AT@ 5446 @LENGTH@ 10
---------INS VariableDeclarationFragment@@holder=(DataHolder)exchanges.poll() @TO@ VariableDeclarationStatement@@DataHolder holder=(DataHolder)exchanges.poll(); @AT@ 5457 @LENGTH@ 38
------------INS SimpleName@@holder @TO@ VariableDeclarationFragment@@holder=(DataHolder)exchanges.poll() @AT@ 5457 @LENGTH@ 6
------------INS CastExpression@@(DataHolder)exchanges.poll() @TO@ VariableDeclarationFragment@@holder=(DataHolder)exchanges.poll() @AT@ 5466 @LENGTH@ 29
---------------INS SimpleType@@DataHolder @TO@ CastExpression@@(DataHolder)exchanges.poll() @AT@ 5467 @LENGTH@ 10
---------------INS MethodInvocation@@exchanges.poll() @TO@ CastExpression@@(DataHolder)exchanges.poll() @AT@ 5479 @LENGTH@ 16
------------------INS SimpleName@@Name:exchanges @TO@ MethodInvocation@@exchanges.poll() @AT@ 5479 @LENGTH@ 9
------------------INS SimpleName@@MethodName:poll:[] @TO@ MethodInvocation@@exchanges.poll() @AT@ 5489 @LENGTH@ 6
------UPD VariableDeclarationStatement@@Exchange exchange=list.get(index).exchange; @TO@ Exchange exchange=holder.exchange; @AT@ 5462 @LENGTH@ 45
---------UPD VariableDeclarationFragment@@exchange=list.get(index).exchange @TO@ exchange=holder.exchange @AT@ 5471 @LENGTH@ 35
------------DEL FieldAccess@@list.get(index).exchange @AT@ 5482 @LENGTH@ 24
---------------DEL MethodInvocation@@list.get(index) @AT@ 5482 @LENGTH@ 15
------------------DEL SimpleName@@Name:list @AT@ 5482 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:get:[index] @AT@ 5487 @LENGTH@ 10
---------------------DEL SimpleName@@index @AT@ 5491 @LENGTH@ 5
---------------DEL SimpleName@@exchange @AT@ 5498 @LENGTH@ 8
------------INS QualifiedName@@holder.exchange @TO@ VariableDeclarationFragment@@exchange=list.get(index).exchange @AT@ 5529 @LENGTH@ 15
---------------INS SimpleName@@holder @TO@ QualifiedName@@holder.exchange @AT@ 5529 @LENGTH@ 6
---------------INS SimpleName@@exchange @TO@ QualifiedName@@holder.exchange @AT@ 5536 @LENGTH@ 8
------UPD VariableDeclarationStatement@@Object data=list.get(index).data; @TO@ Object data=holder.data; @AT@ 5520 @LENGTH@ 35
---------UPD VariableDeclarationFragment@@data=list.get(index).data @TO@ data=holder.data @AT@ 5527 @LENGTH@ 27
------------DEL FieldAccess@@list.get(index).data @AT@ 5534 @LENGTH@ 20
---------------DEL MethodInvocation@@list.get(index) @AT@ 5534 @LENGTH@ 15
------------------DEL SimpleName@@Name:list @AT@ 5534 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:get:[index] @AT@ 5539 @LENGTH@ 10
---------------------DEL SimpleName@@index @AT@ 5543 @LENGTH@ 5
---------------DEL SimpleName@@data @AT@ 5550 @LENGTH@ 4
------------INS QualifiedName@@holder.data @TO@ VariableDeclarationFragment@@data=list.get(index).data @AT@ 5572 @LENGTH@ 11
---------------INS SimpleName@@holder @TO@ QualifiedName@@holder.data @AT@ 5572 @LENGTH@ 6
---------------INS SimpleName@@data @TO@ QualifiedName@@holder.data @AT@ 5579 @LENGTH@ 4


UPD FieldDeclaration@@private, String, [result="1=BE.CHM.001\t8=FIX 4.1\t9=20\t10=0\t11=CHM0001-01\t22=4\t34=1\t35=0\t48=BE0001245678\t49=INVMGR\t54=1\t56=BRKR\t58=this is a camel - bindy test\t"] @TO@ private, String, [result="1=BE.CHM.001\t8=FIX 4.1\t9=20\t10=0\t11=CHM0001-01\t22=4\t34=1\t35=0\t48=BE0001245678\t49=INVMGR\t54=1\t56=BRKR\t58=this is a camel - bindy test\t\r\n"] @AT@ 2217 @LENGTH@ 173
---UPD VariableDeclarationFragment@@result="1=BE.CHM.001\t8=FIX 4.1\t9=20\t10=0\t11=CHM0001-01\t22=4\t34=1\t35=0\t48=BE0001245678\t49=INVMGR\t54=1\t56=BRKR\t58=this is a camel - bindy test\t" @TO@ result="1=BE.CHM.001\t8=FIX 4.1\t9=20\t10=0\t11=CHM0001-01\t22=4\t34=1\t35=0\t48=BE0001245678\t49=INVMGR\t54=1\t56=BRKR\t58=this is a camel - bindy test\t\r\n" @AT@ 2232 @LENGTH@ 157
------UPD StringLiteral@@"1=BE.CHM.001\t8=FIX 4.1\t9=20\t10=0\t11=CHM0001-01\t22=4\t34=1\t35=0\t48=BE0001245678\t49=INVMGR\t54=1\t56=BRKR\t58=this is a camel - bindy test\t" @TO@ "1=BE.CHM.001\t8=FIX 4.1\t9=20\t10=0\t11=CHM0001-01\t22=4\t34=1\t35=0\t48=BE0001245678\t49=INVMGR\t54=1\t56=BRKR\t58=this is a camel - bindy test\t\r\n" @AT@ 2241 @LENGTH@ 148


INS MethodDeclaration@@Object, MethodName:getMandatoryBody, InvalidPayloadException,  @TO@ TypeDeclaration@@[public]Message,  @AT@ 3212 @LENGTH@ 50
---INS SimpleType@@Object @TO@ MethodDeclaration@@Object, MethodName:getMandatoryBody, InvalidPayloadException,  @AT@ 3205 @LENGTH@ 6
---INS SimpleName@@MethodName:getMandatoryBody @TO@ MethodDeclaration@@Object, MethodName:getMandatoryBody, InvalidPayloadException,  @AT@ 3212 @LENGTH@ 16
---INS SimpleType@@InvalidPayloadException @TO@ MethodDeclaration@@Object, MethodName:getMandatoryBody, InvalidPayloadException,  @AT@ 3238 @LENGTH@ 23


UPD FieldDeclaration@@private, MessageCodesResolver, [messageCodesResolver=new WebFlowMessageCodesResolver()] @TO@ private, MessageCodesResolver, [messageCodesResolver] @AT@ 3707 @LENGTH@ 86
---UPD VariableDeclarationFragment@@messageCodesResolver=new WebFlowMessageCodesResolver() @TO@ messageCodesResolver @AT@ 3736 @LENGTH@ 56
------DEL ClassInstanceCreation@@WebFlowMessageCodesResolver[] @AT@ 3759 @LENGTH@ 33
---------DEL New@@new @AT@ 3759 @LENGTH@ 3
---------DEL SimpleType@@WebFlowMessageCodesResolver @AT@ 3763 @LENGTH@ 27


UPD TypeDeclaration@@[public, static]SplitWordsBean,  @TO@ [public, static, final]SplitWordsBean,  @AT@ 2109 @LENGTH@ 367
---INS Modifier@@final @TO@ TypeDeclaration@@[public, static]SplitWordsBean,  @AT@ 2113 @LENGTH@ 5


UPD VariableDeclarationStatement@@final String[] dirs=dirName.split("\\/"); @TO@ final String[] dirs=dirName.split("\\/|\\\\"); @AT@ 9114 @LENGTH@ 43
---UPD VariableDeclarationFragment@@dirs=dirName.split("\\/") @TO@ dirs=dirName.split("\\/|\\\\") @AT@ 9129 @LENGTH@ 27
------UPD MethodInvocation@@dirName.split("\\/") @TO@ dirName.split("\\/|\\\\") @AT@ 9136 @LENGTH@ 20
---------UPD SimpleName@@MethodName:split:["\\/"] @TO@ MethodName:split:["\\/|\\\\"] @AT@ 9144 @LENGTH@ 12
------------UPD StringLiteral@@"\\/" @TO@ "\\/|\\\\" @AT@ 9150 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:assertExpression("${file:absolute}",file.isAbsolute()) @TO@ MethodDeclaration@@public, void, MethodName:testFile, Exception,  @AT@ 2507 @LENGTH@ 56
---INS MethodInvocation@@assertExpression("${file:absolute}",file.isAbsolute()) @TO@ ExpressionStatement@@MethodInvocation:assertExpression("${file:absolute}",file.isAbsolute()) @AT@ 2507 @LENGTH@ 55
------INS SimpleName@@MethodName:assertExpression:["${file:absolute}", file.isAbsolute()] @TO@ MethodInvocation@@assertExpression("${file:absolute}",file.isAbsolute()) @AT@ 2507 @LENGTH@ 55
---------INS StringLiteral@@"${file:absolute}" @TO@ SimpleName@@MethodName:assertExpression:["${file:absolute}", file.isAbsolute()] @AT@ 2524 @LENGTH@ 18
---------INS MethodInvocation@@file.isAbsolute() @TO@ SimpleName@@MethodName:assertExpression:["${file:absolute}", file.isAbsolute()] @AT@ 2544 @LENGTH@ 17
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.isAbsolute() @AT@ 2544 @LENGTH@ 4
------------INS SimpleName@@MethodName:isAbsolute:[] @TO@ MethodInvocation@@file.isAbsolute() @AT@ 2549 @LENGTH@ 12


DEL MethodDeclaration@@public, FileOperations, MethodName:getOperations,  @AT@ 3528 @LENGTH@ 72
---DEL Modifier@@public @AT@ 3528 @LENGTH@ 6
---DEL SimpleType@@FileOperations @AT@ 3535 @LENGTH@ 14
---DEL SimpleName@@MethodName:getOperations @AT@ 3550 @LENGTH@ 13
---DEL ReturnStatement@@SimpleName:operations @AT@ 3576 @LENGTH@ 18
------DEL SimpleName@@operations @AT@ 3583 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @TO@ TypeDeclaration@@[public]HsqlPagingQueryProviderTests, AbstractSqlPagingQueryProviderTests @AT@ 1761 @LENGTH@ 254
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1761 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1768 @LENGTH@ 4
---INS SimpleName@@MethodName:testGenerateJumpToItemQueryForFirstPage @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1773 @LENGTH@ 39
---INS VariableDeclarationStatement@@String sql="SELECT LIMIT 0 1 id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC"; @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1819 @LENGTH@ 86
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sql="SELECT LIMIT 0 1 id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC"; @AT@ 1819 @LENGTH@ 6
------INS VariableDeclarationFragment@@sql="SELECT LIMIT 0 1 id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC" @TO@ VariableDeclarationStatement@@String sql="SELECT LIMIT 0 1 id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC"; @AT@ 1826 @LENGTH@ 78
---------INS SimpleName@@sql @TO@ VariableDeclarationFragment@@sql="SELECT LIMIT 0 1 id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC" @AT@ 1826 @LENGTH@ 3
---------INS StringLiteral@@"SELECT LIMIT 0 1 id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC" @TO@ VariableDeclarationFragment@@sql="SELECT LIMIT 0 1 id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC" @AT@ 1832 @LENGTH@ 72
---INS VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1908 @LENGTH@ 69
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1908 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1915 @LENGTH@ 61
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1915 @LENGTH@ 1
---------INS MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1919 @LENGTH@ 57
------------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1919 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1939 @LENGTH@ 37
---------------INS NumberLiteral@@45 @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1963 @LENGTH@ 2
---------------INS SimpleName@@pageSize @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1967 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1980 @LENGTH@ 32
------INS MethodInvocation@@Assert.assertEquals("",sql,s) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @AT@ 1980 @LENGTH@ 31
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1980 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["", sql, s] @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1987 @LENGTH@ 24
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 2000 @LENGTH@ 2
------------INS SimpleName@@sql @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 2004 @LENGTH@ 3
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 2009 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertTrue(fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1) @TO@ MethodInvocation:assertTrue(fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1) @AT@ 3008 @LENGTH@ 81
---UPD MethodInvocation@@assertTrue(fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1) @TO@ assertTrue(fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1) @AT@ 3008 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertTrue:[fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1] @TO@ MethodName:assertTrue:[fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1] @AT@ 3008 @LENGTH@ 80
---------UPD InfixExpression@@fe.getGenericFile().getRelativeFileName().indexOf("inprogress") > -1 @TO@ fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") > -1 @AT@ 3019 @LENGTH@ 68
------------UPD MethodInvocation@@fe.getGenericFile().getRelativeFileName().indexOf("inprogress") @TO@ fe.getGenericFile().getRelativeFilePath().indexOf("inprogress") @AT@ 3019 @LENGTH@ 63
---------------UPD MethodInvocation@@MethodName:getRelativeFileName:[] @TO@ MethodName:getRelativeFilePath:[] @AT@ 3019 @LENGTH@ 41


UPD ExpressionStatement@@Assignment:dataFormat=type.createDataFormat(routeContext) @TO@ Assignment:dataFormat=type.getDataFormat(routeContext) @AT@ 2766 @LENGTH@ 49
---UPD Assignment@@dataFormat=type.createDataFormat(routeContext) @TO@ dataFormat=type.getDataFormat(routeContext) @AT@ 2766 @LENGTH@ 48
------UPD MethodInvocation@@type.createDataFormat(routeContext) @TO@ type.getDataFormat(routeContext) @AT@ 2779 @LENGTH@ 35
---------UPD SimpleName@@MethodName:createDataFormat:[routeContext] @TO@ MethodName:getDataFormat:[routeContext] @AT@ 2784 @LENGTH@ 30


INS MethodDeclaration@@public, DeadLetterChannelBuilder, MethodName:delayPattern, String delayPattern,  @TO@ TypeDeclaration@@[public]DeadLetterChannelBuilder, ErrorHandlerBuilderSupport @AT@ 3839 @LENGTH@ 152
---INS Modifier@@public @TO@ MethodDeclaration@@public, DeadLetterChannelBuilder, MethodName:delayPattern, String delayPattern,  @AT@ 3839 @LENGTH@ 6
---INS SimpleType@@DeadLetterChannelBuilder @TO@ MethodDeclaration@@public, DeadLetterChannelBuilder, MethodName:delayPattern, String delayPattern,  @AT@ 3846 @LENGTH@ 24
---INS SimpleName@@MethodName:delayPattern @TO@ MethodDeclaration@@public, DeadLetterChannelBuilder, MethodName:delayPattern, String delayPattern,  @AT@ 3871 @LENGTH@ 12
---INS SingleVariableDeclaration@@String delayPattern @TO@ MethodDeclaration@@public, DeadLetterChannelBuilder, MethodName:delayPattern, String delayPattern,  @AT@ 3884 @LENGTH@ 19
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String delayPattern @AT@ 3884 @LENGTH@ 6
------INS SimpleName@@delayPattern @TO@ SingleVariableDeclaration@@String delayPattern @AT@ 3891 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:getRedeliveryPolicy().delayPattern(delayPattern) @TO@ MethodDeclaration@@public, DeadLetterChannelBuilder, MethodName:delayPattern, String delayPattern,  @AT@ 3915 @LENGTH@ 49
------INS MethodInvocation@@getRedeliveryPolicy().delayPattern(delayPattern) @TO@ ExpressionStatement@@MethodInvocation:getRedeliveryPolicy().delayPattern(delayPattern) @AT@ 3915 @LENGTH@ 48
---------INS MethodInvocation@@MethodName:getRedeliveryPolicy:[] @TO@ MethodInvocation@@getRedeliveryPolicy().delayPattern(delayPattern) @AT@ 3915 @LENGTH@ 21
---------INS SimpleName@@MethodName:delayPattern:[delayPattern] @TO@ MethodInvocation@@getRedeliveryPolicy().delayPattern(delayPattern) @AT@ 3937 @LENGTH@ 26
------------INS SimpleName@@delayPattern @TO@ SimpleName@@MethodName:delayPattern:[delayPattern] @AT@ 3950 @LENGTH@ 12
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, DeadLetterChannelBuilder, MethodName:delayPattern, String delayPattern,  @AT@ 3973 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 3980 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:acl.insertAce(acl.getEntries().length,permission,new PrincipalSid(recipientUsername),true) @TO@ MethodInvocation:acl.insertAce(acl.getEntries().size(),permission,new PrincipalSid(recipientUsername),true) @AT@ 13530 @LENGTH@ 94
---UPD MethodInvocation@@acl.insertAce(acl.getEntries().length,permission,new PrincipalSid(recipientUsername),true) @TO@ acl.insertAce(acl.getEntries().size(),permission,new PrincipalSid(recipientUsername),true) @AT@ 13530 @LENGTH@ 93
------UPD SimpleName@@MethodName:insertAce:[acl.getEntries().length, permission, new PrincipalSid(recipientUsername), true] @TO@ MethodName:insertAce:[acl.getEntries().size(), permission, new PrincipalSid(recipientUsername), true] @AT@ 13534 @LENGTH@ 89
---------DEL FieldAccess@@acl.getEntries().length @AT@ 13544 @LENGTH@ 23
------------DEL MethodInvocation@@acl.getEntries() @AT@ 13544 @LENGTH@ 16
------------DEL SimpleName@@length @AT@ 13561 @LENGTH@ 6
---------INS MethodInvocation@@acl.getEntries().size() @TO@ SimpleName@@MethodName:insertAce:[acl.getEntries().length, permission, new PrincipalSid(recipientUsername), true] @AT@ 13544 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:getEntries:[] @TO@ MethodInvocation@@acl.getEntries().size() @AT@ 13544 @LENGTH@ 16
------------MOV SimpleName@@Name:acl @TO@ MethodInvocation@@acl.getEntries().size() @AT@ 13544 @LENGTH@ 3
------------MOV SimpleName@@MethodName:getEntries:[] @TO@ MethodInvocation@@acl.getEntries().size() @AT@ 13548 @LENGTH@ 12


UPD VariableDeclarationStatement@@String contentType=in.getHeader("Content-Type",String.class); @TO@ String contentType=ExchangeHelper.getContentType(exchange); @AT@ 10055 @LENGTH@ 64
---UPD VariableDeclarationFragment@@contentType=in.getHeader("Content-Type",String.class) @TO@ contentType=ExchangeHelper.getContentType(exchange) @AT@ 10062 @LENGTH@ 56
------UPD MethodInvocation@@in.getHeader("Content-Type",String.class) @TO@ ExchangeHelper.getContentType(exchange) @AT@ 10076 @LENGTH@ 42
---------UPD SimpleName@@Name:in @TO@ Name:ExchangeHelper @AT@ 10076 @LENGTH@ 2
---------UPD SimpleName@@MethodName:getHeader:["Content-Type", String.class] @TO@ MethodName:getContentType:[exchange] @AT@ 10079 @LENGTH@ 39
------------DEL StringLiteral@@"Content-Type" @AT@ 10089 @LENGTH@ 14
------------DEL TypeLiteral@@String.class @AT@ 10105 @LENGTH@ 12
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getHeader:["Content-Type", String.class] @AT@ 10351 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertExpression("backup-${in.header.foo}-${file:name.noext}.bak","backup-abc-test/hello.bak") @TO@ MethodInvocation:assertExpression("backup-${in.header.foo}-${file:name.noext}.bak","backup-abc-test" + File.separator + "hello.bak") @AT@ 3887 @LENGTH@ 96
---UPD MethodInvocation@@assertExpression("backup-${in.header.foo}-${file:name.noext}.bak","backup-abc-test/hello.bak") @TO@ assertExpression("backup-${in.header.foo}-${file:name.noext}.bak","backup-abc-test" + File.separator + "hello.bak") @AT@ 3887 @LENGTH@ 95
------UPD SimpleName@@MethodName:assertExpression:["backup-${in.header.foo}-${file:name.noext}.bak", "backup-abc-test/hello.bak"] @TO@ MethodName:assertExpression:["backup-${in.header.foo}-${file:name.noext}.bak", "backup-abc-test" + File.separator + "hello.bak"] @AT@ 3887 @LENGTH@ 95
---------INS InfixExpression@@"backup-abc-test" + File.separator + "hello.bak" @TO@ SimpleName@@MethodName:assertExpression:["backup-${in.header.foo}-${file:name.noext}.bak", "backup-abc-test/hello.bak"] @AT@ 3954 @LENGTH@ 48
------------INS StringLiteral@@"backup-abc-test" @TO@ InfixExpression@@"backup-abc-test" + File.separator + "hello.bak" @AT@ 3954 @LENGTH@ 17
------------INS Operator@@+ @TO@ InfixExpression@@"backup-abc-test" + File.separator + "hello.bak" @AT@ 3971 @LENGTH@ 1
------------INS QualifiedName@@File.separator @TO@ InfixExpression@@"backup-abc-test" + File.separator + "hello.bak" @AT@ 3974 @LENGTH@ 14
---------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 3974 @LENGTH@ 4
---------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 3979 @LENGTH@ 9
------------INS StringLiteral@@"hello.bak" @TO@ InfixExpression@@"backup-abc-test" + File.separator + "hello.bak" @AT@ 3991 @LENGTH@ 11
---------DEL StringLiteral@@"backup-abc-test/hello.bak" @AT@ 3954 @LENGTH@ 27


UPD MethodDeclaration@@public, static, GenericFileProcessStrategy, MethodName:createGenericFileProcessStrategy, Map<String,Object> params,  @TO@ public, static, GenericFileProcessStrategy, MethodName:createGenericFileProcessStrategy, CamelContext context, Map<String,Object> params,  @AT@ 1280 @LENGTH@ 2330
---INS SingleVariableDeclaration@@CamelContext context @TO@ MethodDeclaration@@public, static, GenericFileProcessStrategy, MethodName:createGenericFileProcessStrategy, Map<String,Object> params,  @AT@ 1376 @LENGTH@ 20
------INS SimpleType@@CamelContext @TO@ SingleVariableDeclaration@@CamelContext context @AT@ 1376 @LENGTH@ 12
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@CamelContext context @AT@ 1389 @LENGTH@ 7
---UPD IfStatement@@if (isNoop) {  GenericFileNoOpProcessStrategy<File> strategy=new GenericFileNoOpProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  return strategy;} else if (isDelete) {  GenericFileDeleteProcessStrategy<File> strategy=new GenericFileDeleteProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  return strategy;} else if (moveExpression != null || preMoveExpression != null) {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  if (moveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(moveExpression);    strategy.setCommitRenamer(renamer);  }  if (preMoveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(preMoveExpression);    strategy.setBeginRenamer(renamer);  }  return strategy;} else {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Expression exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp));  return strategy;} @TO@ if (isNoop) {  GenericFileNoOpProcessStrategy<File> strategy=new GenericFileNoOpProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  return strategy;} else if (isDelete) {  GenericFileDeleteProcessStrategy<File> strategy=new GenericFileDeleteProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  return strategy;} else if (moveExpression != null || preMoveExpression != null) {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  if (moveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(moveExpression);    strategy.setCommitRenamer(renamer);  }  if (preMoveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(preMoveExpression);    strategy.setBeginRenamer(renamer);  }  return strategy;} else {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Language language=context.resolveLanguage("file");  Expression expression=language.createExpression("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(expression));  return strategy;} @AT@ 1749 @LENGTH@ 1855
------UPD Block@@ElseBody:if (isDelete) {  GenericFileDeleteProcessStrategy<File> strategy=new GenericFileDeleteProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  return strategy;} else if (moveExpression != null || preMoveExpression != null) {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  if (moveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(moveExpression);    strategy.setCommitRenamer(renamer);  }  if (preMoveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(preMoveExpression);    strategy.setBeginRenamer(renamer);  }  return strategy;} else {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Expression exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp));  return strategy;} @TO@ ElseBody:if (isDelete) {  GenericFileDeleteProcessStrategy<File> strategy=new GenericFileDeleteProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  return strategy;} else if (moveExpression != null || preMoveExpression != null) {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  if (moveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(moveExpression);    strategy.setCommitRenamer(renamer);  }  if (preMoveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(preMoveExpression);    strategy.setBeginRenamer(renamer);  }  return strategy;} else {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Language language=context.resolveLanguage("file");  Expression expression=language.createExpression("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(expression));  return strategy;} @AT@ 2000 @LENGTH@ 1604
---------UPD IfStatement@@if (isDelete) {  GenericFileDeleteProcessStrategy<File> strategy=new GenericFileDeleteProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  return strategy;} else if (moveExpression != null || preMoveExpression != null) {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  if (moveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(moveExpression);    strategy.setCommitRenamer(renamer);  }  if (preMoveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(preMoveExpression);    strategy.setBeginRenamer(renamer);  }  return strategy;} else {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Expression exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp));  return strategy;} @TO@ if (isDelete) {  GenericFileDeleteProcessStrategy<File> strategy=new GenericFileDeleteProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  return strategy;} else if (moveExpression != null || preMoveExpression != null) {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  if (moveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(moveExpression);    strategy.setCommitRenamer(renamer);  }  if (preMoveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(preMoveExpression);    strategy.setBeginRenamer(renamer);  }  return strategy;} else {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Language language=context.resolveLanguage("file");  Expression expression=language.createExpression("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(expression));  return strategy;} @AT@ 2000 @LENGTH@ 1604
------------UPD Block@@ElseBody:if (moveExpression != null || preMoveExpression != null) {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  if (moveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(moveExpression);    strategy.setCommitRenamer(renamer);  }  if (preMoveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(preMoveExpression);    strategy.setBeginRenamer(renamer);  }  return strategy;} else {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Expression exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp));  return strategy;} @TO@ ElseBody:if (moveExpression != null || preMoveExpression != null) {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  if (moveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(moveExpression);    strategy.setCommitRenamer(renamer);  }  if (preMoveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(preMoveExpression);    strategy.setBeginRenamer(renamer);  }  return strategy;} else {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Language language=context.resolveLanguage("file");  Expression expression=language.createExpression("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(expression));  return strategy;} @AT@ 2257 @LENGTH@ 1347
---------------UPD IfStatement@@if (moveExpression != null || preMoveExpression != null) {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  if (moveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(moveExpression);    strategy.setCommitRenamer(renamer);  }  if (preMoveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(preMoveExpression);    strategy.setBeginRenamer(renamer);  }  return strategy;} else {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Expression exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp));  return strategy;} @TO@ if (moveExpression != null || preMoveExpression != null) {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  if (moveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(moveExpression);    strategy.setCommitRenamer(renamer);  }  if (preMoveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(preMoveExpression);    strategy.setBeginRenamer(renamer);  }  return strategy;} else {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Language language=context.resolveLanguage("file");  Expression expression=language.createExpression("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(expression));  return strategy;} @AT@ 2257 @LENGTH@ 1347
------------------UPD Block@@ElseBody:{  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Expression exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp));  return strategy;} @TO@ ElseBody:{  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Language language=context.resolveLanguage("file");  Expression expression=language.createExpression("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(expression));  return strategy;} @AT@ 3094 @LENGTH@ 510
---------------------UPD VariableDeclarationStatement@@Expression exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}"); @TO@ Expression expression=language.createExpression("${file:parent}/.camel/${file:onlyname}"); @AT@ 3404 @LENGTH@ 77
------------------------UPD VariableDeclarationFragment@@exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}") @TO@ expression=language.createExpression("${file:parent}/.camel/${file:onlyname}") @AT@ 3415 @LENGTH@ 65
---------------------------UPD SimpleName@@exp @TO@ expression @AT@ 3415 @LENGTH@ 3
---------------------------UPD MethodInvocation@@FileLanguage.file("${file:parent}/.camel/${file:onlyname}") @TO@ language.createExpression("${file:parent}/.camel/${file:onlyname}") @AT@ 3421 @LENGTH@ 59
------------------------------UPD SimpleName@@Name:FileLanguage @TO@ Name:language @AT@ 3421 @LENGTH@ 12
------------------------------UPD SimpleName@@MethodName:file:["${file:parent}/.camel/${file:onlyname}"] @TO@ MethodName:createExpression:["${file:parent}/.camel/${file:onlyname}"] @AT@ 3434 @LENGTH@ 46
---------------------UPD ExpressionStatement@@MethodInvocation:strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp)) @TO@ MethodInvocation:strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(expression)) @AT@ 3494 @LENGTH@ 71
------------------------UPD MethodInvocation@@strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp)) @TO@ strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(expression)) @AT@ 3494 @LENGTH@ 70
---------------------------UPD SimpleName@@MethodName:setCommitRenamer:[new GenericFileExpressionRenamer<File>(exp)] @TO@ MethodName:setCommitRenamer:[new GenericFileExpressionRenamer<File>(expression)] @AT@ 3503 @LENGTH@ 61
------------------------------UPD ClassInstanceCreation@@GenericFileExpressionRenamer<File>[exp] @TO@ GenericFileExpressionRenamer<File>[expression] @AT@ 3520 @LENGTH@ 43
---------------------------------UPD SimpleName@@exp @TO@ expression @AT@ 3559 @LENGTH@ 3
---------------------INS VariableDeclarationStatement@@Language language=context.resolveLanguage("file"); @TO@ Block@@ElseBody:{  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Expression exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp));  return strategy;} @AT@ 3521 @LENGTH@ 52
------------------------INS SimpleType@@Language @TO@ VariableDeclarationStatement@@Language language=context.resolveLanguage("file"); @AT@ 3521 @LENGTH@ 8
------------------------INS VariableDeclarationFragment@@language=context.resolveLanguage("file") @TO@ VariableDeclarationStatement@@Language language=context.resolveLanguage("file"); @AT@ 3530 @LENGTH@ 42
---------------------------INS SimpleName@@language @TO@ VariableDeclarationFragment@@language=context.resolveLanguage("file") @AT@ 3530 @LENGTH@ 8
---------------------------INS MethodInvocation@@context.resolveLanguage("file") @TO@ VariableDeclarationFragment@@language=context.resolveLanguage("file") @AT@ 3541 @LENGTH@ 31
------------------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.resolveLanguage("file") @AT@ 3541 @LENGTH@ 7
------------------------------INS SimpleName@@MethodName:resolveLanguage:["file"] @TO@ MethodInvocation@@context.resolveLanguage("file") @AT@ 3549 @LENGTH@ 23
---------------------------------INS StringLiteral@@"file" @TO@ SimpleName@@MethodName:resolveLanguage:["file"] @AT@ 3565 @LENGTH@ 6
---------------UPD IfStatement@@if (moveExpression != null || preMoveExpression != null) {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  if (moveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(moveExpression);    strategy.setCommitRenamer(renamer);  }  if (preMoveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(preMoveExpression);    strategy.setBeginRenamer(renamer);  }  return strategy;} else {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Expression exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp));  return strategy;} @TO@ if (moveExpression != null || preMoveExpression != null) {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  if (moveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(moveExpression);    strategy.setCommitRenamer(renamer);  }  if (preMoveExpression != null) {    GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();    renamer.setExpression(preMoveExpression);    strategy.setBeginRenamer(renamer);  }  return strategy;} else {  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Language language=context.resolveLanguage("file");  Expression expression=language.createExpression("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(expression));  return strategy;} @AT@ 2257 @LENGTH@ 1347
------------------UPD Block@@ElseBody:{  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Expression exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp));  return strategy;} @TO@ ElseBody:{  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Language language=context.resolveLanguage("file");  Expression expression=language.createExpression("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(expression));  return strategy;} @AT@ 3094 @LENGTH@ 510
---------------------UPD VariableDeclarationStatement@@Expression exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}"); @TO@ Expression expression=language.createExpression("${file:parent}/.camel/${file:onlyname}"); @AT@ 3404 @LENGTH@ 77
------------------------UPD VariableDeclarationFragment@@exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}") @TO@ expression=language.createExpression("${file:parent}/.camel/${file:onlyname}") @AT@ 3415 @LENGTH@ 65
---------------------------UPD SimpleName@@exp @TO@ expression @AT@ 3415 @LENGTH@ 3
---------------------------UPD MethodInvocation@@FileLanguage.file("${file:parent}/.camel/${file:onlyname}") @TO@ language.createExpression("${file:parent}/.camel/${file:onlyname}") @AT@ 3421 @LENGTH@ 59
------------------------------UPD SimpleName@@Name:FileLanguage @TO@ Name:language @AT@ 3421 @LENGTH@ 12
------------------------------UPD SimpleName@@MethodName:file:["${file:parent}/.camel/${file:onlyname}"] @TO@ MethodName:createExpression:["${file:parent}/.camel/${file:onlyname}"] @AT@ 3434 @LENGTH@ 46
---------------------UPD ExpressionStatement@@MethodInvocation:strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp)) @TO@ MethodInvocation:strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(expression)) @AT@ 3494 @LENGTH@ 71
------------------------UPD MethodInvocation@@strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp)) @TO@ strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(expression)) @AT@ 3494 @LENGTH@ 70
---------------------------UPD SimpleName@@MethodName:setCommitRenamer:[new GenericFileExpressionRenamer<File>(exp)] @TO@ MethodName:setCommitRenamer:[new GenericFileExpressionRenamer<File>(expression)] @AT@ 3503 @LENGTH@ 61
------------------------------UPD ClassInstanceCreation@@GenericFileExpressionRenamer<File>[exp] @TO@ GenericFileExpressionRenamer<File>[expression] @AT@ 3520 @LENGTH@ 43
---------------------------------UPD SimpleName@@exp @TO@ expression @AT@ 3559 @LENGTH@ 3
---------------------INS VariableDeclarationStatement@@Language language=context.resolveLanguage("file"); @TO@ Block@@ElseBody:{  GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();  strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));  Expression exp=FileLanguage.file("${file:parent}/.camel/${file:onlyname}");  strategy.setCommitRenamer(new GenericFileExpressionRenamer<File>(exp));  return strategy;} @AT@ 3521 @LENGTH@ 52
------------------------INS SimpleType@@Language @TO@ VariableDeclarationStatement@@Language language=context.resolveLanguage("file"); @AT@ 3521 @LENGTH@ 8
------------------------INS VariableDeclarationFragment@@language=context.resolveLanguage("file") @TO@ VariableDeclarationStatement@@Language language=context.resolveLanguage("file"); @AT@ 3530 @LENGTH@ 42
---------------------------INS SimpleName@@language @TO@ VariableDeclarationFragment@@language=context.resolveLanguage("file") @AT@ 3530 @LENGTH@ 8
---------------------------INS MethodInvocation@@context.resolveLanguage("file") @TO@ VariableDeclarationFragment@@language=context.resolveLanguage("file") @AT@ 3541 @LENGTH@ 31
------------------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.resolveLanguage("file") @AT@ 3541 @LENGTH@ 7
------------------------------INS SimpleName@@MethodName:resolveLanguage:["file"] @TO@ MethodInvocation@@context.resolveLanguage("file") @AT@ 3549 @LENGTH@ 23
---------------------------------INS StringLiteral@@"file" @TO@ SimpleName@@MethodName:resolveLanguage:["file"] @AT@ 3565 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("seda:a").errorHandler(loggingErrorHandler("FOO.BAR")).filter(body().isInstanceOf(String.class)).inheritErrorHandler(false).to("seda:b") @TO@ MethodInvocation:from("seda:a").errorHandler(loggingErrorHandler("FOO.BAR")).filter(body().isInstanceOf(String.class)).to("seda:b") @AT@ 8411 @LENGTH@ 142
---UPD MethodInvocation@@from("seda:a").errorHandler(loggingErrorHandler("FOO.BAR")).filter(body().isInstanceOf(String.class)).inheritErrorHandler(false).to("seda:b") @TO@ from("seda:a").errorHandler(loggingErrorHandler("FOO.BAR")).filter(body().isInstanceOf(String.class)).to("seda:b") @AT@ 8411 @LENGTH@ 141
------DEL MethodInvocation@@MethodName:inheritErrorHandler:[false] @AT@ 8411 @LENGTH@ 128
---------DEL BooleanLiteral@@false @AT@ 8533 @LENGTH@ 5


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[private]MyOrderTypeConverter, [TypeConverter] @AT@ 2991 @LENGTH@ 115
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2991 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 3002 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 3004 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 3023 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3023 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3023 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3029 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3032 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 3038 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 3038 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 3045 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 3066 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 3073 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 3073 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3083 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3089 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:attributes.add(new StringAttributeValue(new JavaSymbolName("value"),"/" + entityName)) @TO@ MethodInvocation:attributes.add(new StringAttributeValue(new JavaSymbolName("value"),entityName)) @AT@ 18905 @LENGTH@ 88
---UPD MethodInvocation@@attributes.add(new StringAttributeValue(new JavaSymbolName("value"),"/" + entityName)) @TO@ attributes.add(new StringAttributeValue(new JavaSymbolName("value"),entityName)) @AT@ 18905 @LENGTH@ 87
------UPD SimpleName@@MethodName:add:[new StringAttributeValue(new JavaSymbolName("value"),"/" + entityName)] @TO@ MethodName:add:[new StringAttributeValue(new JavaSymbolName("value"),entityName)] @AT@ 18916 @LENGTH@ 76
---------UPD ClassInstanceCreation@@StringAttributeValue[new JavaSymbolName("value"), "/" + entityName] @TO@ StringAttributeValue[new JavaSymbolName("value"), entityName] @AT@ 18920 @LENGTH@ 71
------------INS SimpleName@@entityName @TO@ ClassInstanceCreation@@StringAttributeValue[new JavaSymbolName("value"), "/" + entityName] @AT@ 18968 @LENGTH@ 10
------------DEL InfixExpression@@"/" + entityName @AT@ 18974 @LENGTH@ 16
---------------DEL StringLiteral@@"/" @AT@ 18974 @LENGTH@ 3
---------------DEL Operator@@+ @AT@ 18977 @LENGTH@ 1
---------------DEL SimpleName@@entityName @AT@ 18980 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:from("direct:exception").split(body().tokenize(",")).aggregationStrategy(new MyAggregationStrategy()).parallelProcessing(true).streaming().process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String string=exchange.getIn().getBody(String.class);
    if ("Exception".equals(string)) {
      throw new CamelException("Just want to throw exception here");
    }
  }
}
).to("mock:result") @TO@ MethodInvocation:from("direct:exception").split(body().tokenize(",")).aggregationStrategy(new MyAggregationStrategy()).parallelProcessing(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String string=exchange.getIn().getBody(String.class);
    if ("Exception".equals(string)) {
      throw new CamelException("Just want to throw exception here");
    }
  }
}
).to("mock:result") @AT@ 8845 @LENGTH@ 714
---UPD MethodInvocation@@from("direct:exception").split(body().tokenize(",")).aggregationStrategy(new MyAggregationStrategy()).parallelProcessing(true).streaming().process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String string=exchange.getIn().getBody(String.class);
    if ("Exception".equals(string)) {
      throw new CamelException("Just want to throw exception here");
    }
  }
}
).to("mock:result") @TO@ from("direct:exception").split(body().tokenize(",")).aggregationStrategy(new MyAggregationStrategy()).parallelProcessing(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    String string=exchange.getIn().getBody(String.class);
    if ("Exception".equals(string)) {
      throw new CamelException("Just want to throw exception here");
    }
  }
}
).to("mock:result") @AT@ 8845 @LENGTH@ 713
------DEL MethodInvocation@@MethodName:streaming:[] @AT@ 8845 @LENGTH@ 201


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"report.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"report.txt") @AT@ 2550 @LENGTH@ 73
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"report.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"report.txt") @AT@ 2550 @LENGTH@ 72
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "report.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "report.txt"] @AT@ 2567 @LENGTH@ 55
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2577 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2577 @LENGTH@ 13


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("You cannot set delet and a moveNamePrefix, moveNamePostfix or expression option") @TO@ ClassInstanceCreation:new IllegalArgumentException("You cannot set delete=true and a moveNamePrefix, moveNamePostfix or expression option") @AT@ 4072 @LENGTH@ 118
---UPD ClassInstanceCreation@@IllegalArgumentException["You cannot set delet and a moveNamePrefix, moveNamePostfix or expression option"] @TO@ IllegalArgumentException["You cannot set delete=true and a moveNamePrefix, moveNamePostfix or expression option"] @AT@ 4078 @LENGTH@ 111
------UPD StringLiteral@@"You cannot set delet and a moveNamePrefix, moveNamePostfix or expression option" @TO@ "You cannot set delete=true and a moveNamePrefix, moveNamePostfix or expression option" @AT@ 4107 @LENGTH@ 81


UPD CatchClause@@catch (CloneNotSupportedException cex) {  return null;} @TO@ catch (CloneNotSupportedException cex) {  throw new ConfigurationRuntimeException("Cannot clone " + getClass());} @AT@ 10460 @LENGTH@ 104
---DEL ReturnStatement@@NullLiteral:null @AT@ 10521 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 10528 @LENGTH@ 4
---INS ThrowStatement@@ClassInstanceCreation:new ConfigurationRuntimeException("Cannot clone " + getClass()) @TO@ CatchClause@@catch (CloneNotSupportedException cex) {  return null;} @AT@ 10626 @LENGTH@ 70
------INS ClassInstanceCreation@@ConfigurationRuntimeException["Cannot clone " + getClass()] @TO@ ThrowStatement@@ClassInstanceCreation:new ConfigurationRuntimeException("Cannot clone " + getClass()) @AT@ 10632 @LENGTH@ 63
---------INS New@@new @TO@ ClassInstanceCreation@@ConfigurationRuntimeException["Cannot clone " + getClass()] @AT@ 10632 @LENGTH@ 3
---------INS SimpleType@@ConfigurationRuntimeException @TO@ ClassInstanceCreation@@ConfigurationRuntimeException["Cannot clone " + getClass()] @AT@ 10636 @LENGTH@ 29
---------INS InfixExpression@@"Cannot clone " + getClass() @TO@ ClassInstanceCreation@@ConfigurationRuntimeException["Cannot clone " + getClass()] @AT@ 10666 @LENGTH@ 28
------------INS StringLiteral@@"Cannot clone " @TO@ InfixExpression@@"Cannot clone " + getClass() @AT@ 10666 @LENGTH@ 15
------------INS Operator@@+ @TO@ InfixExpression@@"Cannot clone " + getClass() @AT@ 10681 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ InfixExpression@@"Cannot clone " + getClass() @AT@ 10684 @LENGTH@ 10


INS MethodDeclaration@@private, voidMethodName:DataHolder,  @TO@ TypeDeclaration@@[private]DataHolder,  @AT@ 2032 @LENGTH@ 32
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:DataHolder,  @AT@ 2032 @LENGTH@ 7
---INS SimpleName@@MethodName:DataHolder @TO@ MethodDeclaration@@private, voidMethodName:DataHolder,  @AT@ 2040 @LENGTH@ 10


INS MethodDeclaration@@protected, void, MethodName:validateUnknownParameters, String uri, Map parameters, String optionPrefix,  @TO@ TypeDeclaration@@[public, abstract]DefaultComponent, ServiceSupport[Component] @AT@ 4224 @LENGTH@ 637
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:validateUnknownParameters, String uri, Map parameters, String optionPrefix,  @AT@ 4224 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:validateUnknownParameters, String uri, Map parameters, String optionPrefix,  @AT@ 4234 @LENGTH@ 4
---INS SimpleName@@MethodName:validateUnknownParameters @TO@ MethodDeclaration@@protected, void, MethodName:validateUnknownParameters, String uri, Map parameters, String optionPrefix,  @AT@ 4239 @LENGTH@ 25
---INS SingleVariableDeclaration@@String uri @TO@ MethodDeclaration@@protected, void, MethodName:validateUnknownParameters, String uri, Map parameters, String optionPrefix,  @AT@ 4265 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String uri @AT@ 4265 @LENGTH@ 6
------INS SimpleName@@uri @TO@ SingleVariableDeclaration@@String uri @AT@ 4272 @LENGTH@ 3
---INS SingleVariableDeclaration@@Map parameters @TO@ MethodDeclaration@@protected, void, MethodName:validateUnknownParameters, String uri, Map parameters, String optionPrefix,  @AT@ 4277 @LENGTH@ 14
------INS SimpleType@@Map @TO@ SingleVariableDeclaration@@Map parameters @AT@ 4277 @LENGTH@ 3
------INS SimpleName@@parameters @TO@ SingleVariableDeclaration@@Map parameters @AT@ 4281 @LENGTH@ 10
---INS SingleVariableDeclaration@@String optionPrefix @TO@ MethodDeclaration@@protected, void, MethodName:validateUnknownParameters, String uri, Map parameters, String optionPrefix,  @AT@ 4293 @LENGTH@ 19
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String optionPrefix @AT@ 4293 @LENGTH@ 6
------INS SimpleName@@optionPrefix @TO@ SingleVariableDeclaration@@String optionPrefix @AT@ 4300 @LENGTH@ 12
---INS VariableDeclarationStatement@@Map param=parameters; @TO@ MethodDeclaration@@protected, void, MethodName:validateUnknownParameters, String uri, Map parameters, String optionPrefix,  @AT@ 4324 @LENGTH@ 23
------INS SimpleType@@Map @TO@ VariableDeclarationStatement@@Map param=parameters; @AT@ 4324 @LENGTH@ 3
------INS VariableDeclarationFragment@@param=parameters @TO@ VariableDeclarationStatement@@Map param=parameters; @AT@ 4328 @LENGTH@ 18
---------INS SimpleName@@param @TO@ VariableDeclarationFragment@@param=parameters @AT@ 4328 @LENGTH@ 5
---------INS SimpleName@@parameters @TO@ VariableDeclarationFragment@@param=parameters @AT@ 4336 @LENGTH@ 10
---INS IfStatement@@if (optionPrefix != null) {  param=IntrospectionSupport.extractProperties(parameters,optionPrefix);} @TO@ MethodDeclaration@@protected, void, MethodName:validateUnknownParameters, String uri, Map parameters, String optionPrefix,  @AT@ 4356 @LENGTH@ 123
------INS InfixExpression@@optionPrefix != null @TO@ IfStatement@@if (optionPrefix != null) {  param=IntrospectionSupport.extractProperties(parameters,optionPrefix);} @AT@ 4360 @LENGTH@ 20
---------INS SimpleName@@optionPrefix @TO@ InfixExpression@@optionPrefix != null @AT@ 4360 @LENGTH@ 12
---------INS Operator@@!= @TO@ InfixExpression@@optionPrefix != null @AT@ 4372 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@optionPrefix != null @AT@ 4376 @LENGTH@ 4
------INS Block@@ThenBody:{  param=IntrospectionSupport.extractProperties(parameters,optionPrefix);} @TO@ IfStatement@@if (optionPrefix != null) {  param=IntrospectionSupport.extractProperties(parameters,optionPrefix);} @AT@ 4382 @LENGTH@ 97
---------INS ExpressionStatement@@Assignment:param=IntrospectionSupport.extractProperties(parameters,optionPrefix) @TO@ Block@@ThenBody:{  param=IntrospectionSupport.extractProperties(parameters,optionPrefix);} @AT@ 4396 @LENGTH@ 73
------------INS Assignment@@param=IntrospectionSupport.extractProperties(parameters,optionPrefix) @TO@ ExpressionStatement@@Assignment:param=IntrospectionSupport.extractProperties(parameters,optionPrefix) @AT@ 4396 @LENGTH@ 72
---------------INS SimpleName@@param @TO@ Assignment@@param=IntrospectionSupport.extractProperties(parameters,optionPrefix) @AT@ 4396 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@param=IntrospectionSupport.extractProperties(parameters,optionPrefix) @AT@ 4401 @LENGTH@ 1
---------------INS MethodInvocation@@IntrospectionSupport.extractProperties(parameters,optionPrefix) @TO@ Assignment@@param=IntrospectionSupport.extractProperties(parameters,optionPrefix) @AT@ 4404 @LENGTH@ 64
------------------INS SimpleName@@Name:IntrospectionSupport @TO@ MethodInvocation@@IntrospectionSupport.extractProperties(parameters,optionPrefix) @AT@ 4404 @LENGTH@ 20
------------------INS SimpleName@@MethodName:extractProperties:[parameters, optionPrefix] @TO@ MethodInvocation@@IntrospectionSupport.extractProperties(parameters,optionPrefix) @AT@ 4425 @LENGTH@ 43
---------------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:extractProperties:[parameters, optionPrefix] @AT@ 4443 @LENGTH@ 10
---------------------INS SimpleName@@optionPrefix @TO@ SimpleName@@MethodName:extractProperties:[parameters, optionPrefix] @AT@ 4455 @LENGTH@ 12
---INS IfStatement@@if (param.size() > 0) {  throw new ResolveEndpointFailedException(uri,"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]");} @TO@ MethodDeclaration@@protected, void, MethodName:validateUnknownParameters, String uri, Map parameters, String optionPrefix,  @AT@ 4489 @LENGTH@ 366
------INS InfixExpression@@param.size() > 0 @TO@ IfStatement@@if (param.size() > 0) {  throw new ResolveEndpointFailedException(uri,"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]");} @AT@ 4493 @LENGTH@ 16
---------INS MethodInvocation@@param.size() @TO@ InfixExpression@@param.size() > 0 @AT@ 4493 @LENGTH@ 12
------------INS SimpleName@@Name:param @TO@ MethodInvocation@@param.size() @AT@ 4493 @LENGTH@ 5
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@param.size() @AT@ 4499 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@param.size() > 0 @AT@ 4505 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@param.size() > 0 @AT@ 4508 @LENGTH@ 1
------INS Block@@ThenBody:{  throw new ResolveEndpointFailedException(uri,"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]");} @TO@ IfStatement@@if (param.size() > 0) {  throw new ResolveEndpointFailedException(uri,"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]");} @AT@ 4511 @LENGTH@ 344
---------INS ThrowStatement@@ClassInstanceCreation:new ResolveEndpointFailedException(uri,"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]") @TO@ Block@@ThenBody:{  throw new ResolveEndpointFailedException(uri,"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]");} @AT@ 4525 @LENGTH@ 320
------------INS ClassInstanceCreation@@ResolveEndpointFailedException[uri, "There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]"] @TO@ ThrowStatement@@ClassInstanceCreation:new ResolveEndpointFailedException(uri,"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]") @AT@ 4531 @LENGTH@ 313
---------------INS New@@new @TO@ ClassInstanceCreation@@ResolveEndpointFailedException[uri, "There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]"] @AT@ 4531 @LENGTH@ 3
---------------INS SimpleType@@ResolveEndpointFailedException @TO@ ClassInstanceCreation@@ResolveEndpointFailedException[uri, "There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]"] @AT@ 4535 @LENGTH@ 30
---------------INS SimpleName@@uri @TO@ ClassInstanceCreation@@ResolveEndpointFailedException[uri, "There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]"] @AT@ 4566 @LENGTH@ 3
---------------INS InfixExpression@@"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]" @TO@ ClassInstanceCreation@@ResolveEndpointFailedException[uri, "There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]"] @AT@ 4571 @LENGTH@ 272
------------------INS StringLiteral@@"There are " @TO@ InfixExpression@@"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]" @AT@ 4571 @LENGTH@ 12
------------------INS Operator@@+ @TO@ InfixExpression@@"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]" @AT@ 4583 @LENGTH@ 1
------------------INS MethodInvocation@@param.size() @TO@ InfixExpression@@"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]" @AT@ 4586 @LENGTH@ 12
---------------------INS SimpleName@@Name:param @TO@ MethodInvocation@@param.size() @AT@ 4586 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@param.size() @AT@ 4592 @LENGTH@ 6
------------------INS StringLiteral@@" parameters that couldn't be set on the endpoint." @TO@ InfixExpression@@"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]" @AT@ 4617 @LENGTH@ 51
------------------INS StringLiteral@@" Check the uri if the parameters are spelt correctly and that they are properties of the endpoint." @TO@ InfixExpression@@"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]" @AT@ 4687 @LENGTH@ 100
------------------INS StringLiteral@@" Unknown parameters=[" @TO@ InfixExpression@@"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]" @AT@ 4806 @LENGTH@ 23
------------------INS SimpleName@@param @TO@ InfixExpression@@"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]" @AT@ 4832 @LENGTH@ 5
------------------INS StringLiteral@@"]" @TO@ InfixExpression@@"There are " + param.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ param+ "]" @AT@ 4840 @LENGTH@ 3


UPD TypeDeclaration@@[public]RubyCamel,  @TO@ [public, final]RubyCamel,  @AT@ 1052 @LENGTH@ 639
---INS Modifier@@final @TO@ TypeDeclaration@@[public]RubyCamel,  @AT@ 1061 @LENGTH@ 5


UPD MethodDeclaration@@public, Object, MethodName:unmarshal, Exchange exchange, InputStream stream, IOException, ClassNotFoundException,  @TO@ public, Object, MethodName:unmarshal, Exchange exchange, InputStream stream, IOException,  @AT@ 1793 @LENGTH@ 360
---DEL SimpleType@@ClassNotFoundException @AT@ 1876 @LENGTH@ 22
---UPD VariableDeclarationStatement@@byte[] bytes=IOConverter.toBytes(stream); @TO@ byte[] bytes=ExchangeHelper.convertToType(exchange,byte[].class,stream); @AT@ 1909 @LENGTH@ 43
------UPD VariableDeclarationFragment@@bytes=IOConverter.toBytes(stream) @TO@ bytes=ExchangeHelper.convertToType(exchange,byte[].class,stream) @AT@ 1916 @LENGTH@ 35
---------UPD MethodInvocation@@IOConverter.toBytes(stream) @TO@ ExchangeHelper.convertToType(exchange,byte[].class,stream) @AT@ 1924 @LENGTH@ 27
------------UPD SimpleName@@Name:IOConverter @TO@ Name:ExchangeHelper @AT@ 1924 @LENGTH@ 11
------------UPD SimpleName@@MethodName:toBytes:[stream] @TO@ MethodName:convertToType:[exchange, byte[].class, stream] @AT@ 1936 @LENGTH@ 15
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:toBytes:[stream] @AT@ 1882 @LENGTH@ 8
---------------INS TypeLiteral@@byte[].class @TO@ SimpleName@@MethodName:toBytes:[stream] @AT@ 1892 @LENGTH@ 12


UPD FieldDeclaration@@private, static, final, Log, [log=LogFactory.getLog(MBeanCamelServerConnectionImpl.class)] @TO@ private, static, final, Log, [LOG=LogFactory.getLog(MBeanCamelServerConnectionImpl.class)] @AT@ 1312 @LENGTH@ 87
---UPD VariableDeclarationFragment@@log=LogFactory.getLog(MBeanCamelServerConnectionImpl.class) @TO@ LOG=LogFactory.getLog(MBeanCamelServerConnectionImpl.class) @AT@ 1337 @LENGTH@ 61
------UPD SimpleName@@log @TO@ LOG @AT@ 1337 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @TO@ TypeDeclaration@@[public]Db2PagingQueryProviderTests, AbstractSqlPagingQueryProviderTests @AT@ 1244 @LENGTH@ 324
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1244 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1251 @LENGTH@ 4
---INS SimpleName@@MethodName:testGenerateJumpToItemQueryForFirstPage @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1256 @LENGTH@ 39
---INS VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1302 @LENGTH@ 156
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @AT@ 1302 @LENGTH@ 6
------INS VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @TO@ VariableDeclarationStatement@@String sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1"; @AT@ 1309 @LENGTH@ 148
---------INS SimpleName@@sql @TO@ VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @AT@ 1309 @LENGTH@ 3
---------INS StringLiteral@@"SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @TO@ VariableDeclarationFragment@@sql="SELECT SORT_KEY FROM ( SELECT id AS SORT_KEY, ROW_NUMBER() OVER (ORDER BY id ASC) AS ROW_NUMBER FROM foo WHERE bar = 1) WHERE ROW_NUMBER = 1" @AT@ 1315 @LENGTH@ 142
---INS VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1461 @LENGTH@ 69
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1461 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1468 @LENGTH@ 61
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1468 @LENGTH@ 1
---------INS MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1472 @LENGTH@ 57
------------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1472 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1492 @LENGTH@ 37
---------------INS NumberLiteral@@45 @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1516 @LENGTH@ 2
---------------INS SimpleName@@pageSize @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1520 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1533 @LENGTH@ 32
------INS MethodInvocation@@Assert.assertEquals("",sql,s) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @AT@ 1533 @LENGTH@ 31
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1533 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["", sql, s] @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1540 @LENGTH@ 24
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1553 @LENGTH@ 2
------------INS SimpleName@@sql @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1557 @LENGTH@ 3
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1562 @LENGTH@ 1


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("No producer, this processor has not been started!") @TO@ ClassInstanceCreation:new IllegalStateException("No producer, this processor has not been started: " + this) @AT@ 2293 @LENGTH@ 85
---UPD ClassInstanceCreation@@IllegalStateException["No producer, this processor has not been started!"] @TO@ IllegalStateException["No producer, this processor has not been started: " + this] @AT@ 2299 @LENGTH@ 78
------INS InfixExpression@@"No producer, this processor has not been started: " + this @TO@ ClassInstanceCreation@@IllegalStateException["No producer, this processor has not been started!"] @AT@ 2325 @LENGTH@ 59
---------INS StringLiteral@@"No producer, this processor has not been started: " @TO@ InfixExpression@@"No producer, this processor has not been started: " + this @AT@ 2325 @LENGTH@ 52
---------INS Operator@@+ @TO@ InfixExpression@@"No producer, this processor has not been started: " + this @AT@ 2377 @LENGTH@ 1
---------INS ThisExpression@@this @TO@ InfixExpression@@"No producer, this processor has not been started: " + this @AT@ 2380 @LENGTH@ 4
------DEL StringLiteral@@"No producer, this processor has not been started!" @AT@ 2325 @LENGTH@ 51


UPD VariableDeclarationStatement@@Option[] options=options(logProfile(),systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core"),knopflerfish(),felix(),equinox()); @TO@ Option[] options=options(logProfile(),systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),mavenBundle().groupId("org.apache.camel").artifactId("camel-core").versionAsInProject(),knopflerfish(),felix(),equinox()); @AT@ 3202 @LENGTH@ 695
---UPD VariableDeclarationFragment@@options=options(logProfile(),systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core"),knopflerfish(),felix(),equinox()) @TO@ options=options(logProfile(),systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),mavenBundle().groupId("org.apache.camel").artifactId("camel-core").versionAsInProject(),knopflerfish(),felix(),equinox()) @AT@ 3211 @LENGTH@ 685
------UPD MethodInvocation@@options(logProfile(),systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core"),knopflerfish(),felix(),equinox()) @TO@ options(logProfile(),systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),mavenBundle().groupId("org.apache.camel").artifactId("camel-core").versionAsInProject(),knopflerfish(),felix(),equinox()) @AT@ 3221 @LENGTH@ 675
---------UPD SimpleName@@MethodName:options:[logProfile(), systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"), scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core"), knopflerfish(), felix(), equinox()] @TO@ MethodName:options:[logProfile(), systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"), mavenBundle().groupId("org.apache.camel").artifactId("camel-core").versionAsInProject(), knopflerfish(), felix(), equinox()] @AT@ 3221 @LENGTH@ 675
------------UPD MethodInvocation@@scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core") @TO@ mavenBundle().groupId("org.apache.camel").artifactId("camel-core").versionAsInProject() @AT@ 3703 @LENGTH@ 115
---------------INS MethodInvocation@@MethodName:artifactId:["camel-core"] @TO@ MethodInvocation@@scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core") @AT@ 3559 @LENGTH@ 66
------------------INS StringLiteral@@"camel-core" @TO@ MethodInvocation@@MethodName:artifactId:["camel-core"] @AT@ 3612 @LENGTH@ 12
---------------INS MethodInvocation@@MethodName:artifactId:["camel-core"] @TO@ MethodInvocation@@scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core") @AT@ 3559 @LENGTH@ 66
------------------INS StringLiteral@@"camel-core" @TO@ MethodInvocation@@MethodName:artifactId:["camel-core"] @AT@ 3612 @LENGTH@ 12
---------------INS MethodInvocation@@MethodName:groupId:["org.apache.camel"] @TO@ MethodInvocation@@scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core") @AT@ 3559 @LENGTH@ 41
------------------INS StringLiteral@@"org.apache.camel" @TO@ MethodInvocation@@MethodName:groupId:["org.apache.camel"] @AT@ 3581 @LENGTH@ 18
---------------INS MethodInvocation@@MethodName:groupId:["org.apache.camel"] @TO@ MethodInvocation@@scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core") @AT@ 3559 @LENGTH@ 41
------------------INS StringLiteral@@"org.apache.camel" @TO@ MethodInvocation@@MethodName:groupId:["org.apache.camel"] @AT@ 3581 @LENGTH@ 18
---------------INS MethodInvocation@@MethodName:mavenBundle:[] @TO@ MethodInvocation@@scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core") @AT@ 3559 @LENGTH@ 13
---------------INS MethodInvocation@@MethodName:mavenBundle:[] @TO@ MethodInvocation@@scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core") @AT@ 3559 @LENGTH@ 13
---------------INS SimpleName@@MethodName:versionAsInProject:[] @TO@ MethodInvocation@@scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core") @AT@ 3626 @LENGTH@ 20
---------------INS SimpleName@@MethodName:versionAsInProject:[] @TO@ MethodInvocation@@scanFeatures("file:src/test/resources/features-2.0-SNAPSHOT-features.xml","camel-core") @AT@ 3626 @LENGTH@ 20
---------------DEL SimpleName@@MethodName:scanFeatures:["file:src/test/resources/features-2.0-SNAPSHOT-features.xml", "camel-core"] @AT@ 3703 @LENGTH@ 115
------------------DEL StringLiteral@@"file:src/test/resources/features-2.0-SNAPSHOT-features.xml" @AT@ 3717 @LENGTH@ 60
------------------DEL StringLiteral@@"camel-core" @AT@ 3805 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:scanFeatures:["file:src/test/resources/features-2.0-SNAPSHOT-features.xml", "camel-core"] @AT@ 3703 @LENGTH@ 115
------------------DEL StringLiteral@@"file:src/test/resources/features-2.0-SNAPSHOT-features.xml" @AT@ 3717 @LENGTH@ 60
------------------DEL StringLiteral@@"camel-core" @AT@ 3805 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:from(getFtpUrl() + "&sortBy=file:name.ext").to("mock:result") @TO@ MethodInvocation:from(getFtpUrl() + "&sortBy=file:ext").to("mock:result") @AT@ 1626 @LENGTH@ 62
---UPD MethodInvocation@@from(getFtpUrl() + "&sortBy=file:name.ext").to("mock:result") @TO@ from(getFtpUrl() + "&sortBy=file:ext").to("mock:result") @AT@ 1626 @LENGTH@ 61
------UPD MethodInvocation@@MethodName:from:[getFtpUrl() + "&sortBy=file:name.ext"] @TO@ MethodName:from:[getFtpUrl() + "&sortBy=file:ext"] @AT@ 1626 @LENGTH@ 43
---------UPD InfixExpression@@getFtpUrl() + "&sortBy=file:name.ext" @TO@ getFtpUrl() + "&sortBy=file:ext" @AT@ 1631 @LENGTH@ 37
------------UPD StringLiteral@@"&sortBy=file:name.ext" @TO@ "&sortBy=file:ext" @AT@ 1645 @LENGTH@ 23


UPD MethodDeclaration@@public, int, MethodName:read, byte[] bts, int st, int end, IOException,  @TO@ public, int, MethodName:read, byte[] bts, int off, int len, IOException,  @AT@ 2916 @LENGTH@ 228
---UPD SingleVariableDeclaration@@int st @TO@ int off @AT@ 2944 @LENGTH@ 6
------UPD SimpleName@@st @TO@ off @AT@ 2948 @LENGTH@ 2
---UPD SingleVariableDeclaration@@int end @TO@ int len @AT@ 2952 @LENGTH@ 7
------UPD SimpleName@@end @TO@ len @AT@ 2956 @LENGTH@ 3
---UPD TryStatement@@try {  return in.read(bts,st,end);} catch (IOException e) {  handleIOException(e);  return -1;} @TO@ try {  return in.read(bts,off,len);} catch (IOException e) {  handleIOException(e);  return -1;} @AT@ 2990 @LENGTH@ 148
------UPD ReturnStatement@@MethodInvocation:in.read(bts,st,end) @TO@ MethodInvocation:in.read(bts,off,len) @AT@ 3008 @LENGTH@ 29
---------UPD MethodInvocation@@in.read(bts,st,end) @TO@ in.read(bts,off,len) @AT@ 3015 @LENGTH@ 21
------------UPD SimpleName@@MethodName:read:[bts, st, end] @TO@ MethodName:read:[bts, off, len] @AT@ 3018 @LENGTH@ 18
---------------UPD SimpleName@@st @TO@ off @AT@ 3028 @LENGTH@ 2
---------------UPD SimpleName@@end @TO@ len @AT@ 3032 @LENGTH@ 3


INS MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, BufferedReader buffer, IOException,  @TO@ TypeDeclaration@@[@Converter, public, final]IOConverter,  @AT@ 4673 @LENGTH@ 143
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, BufferedReader buffer, IOException,  @AT@ 4673 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, BufferedReader buffer, IOException,  @AT@ 4680 @LENGTH@ 6
---INS SimpleType@@InputStream @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, BufferedReader buffer, IOException,  @AT@ 4687 @LENGTH@ 11
---INS SimpleName@@MethodName:toInputStream @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, BufferedReader buffer, IOException,  @AT@ 4699 @LENGTH@ 13
---INS SingleVariableDeclaration@@BufferedReader buffer @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, BufferedReader buffer, IOException,  @AT@ 4713 @LENGTH@ 21
------INS SimpleType@@BufferedReader @TO@ SingleVariableDeclaration@@BufferedReader buffer @AT@ 4713 @LENGTH@ 14
------INS SimpleName@@buffer @TO@ SingleVariableDeclaration@@BufferedReader buffer @AT@ 4728 @LENGTH@ 6
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, BufferedReader buffer, IOException,  @AT@ 4743 @LENGTH@ 11
---INS ReturnStatement@@MethodInvocation:toInputStream(toString(buffer),null) @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, BufferedReader buffer, IOException,  @AT@ 4765 @LENGTH@ 45
------INS MethodInvocation@@toInputStream(toString(buffer),null) @TO@ ReturnStatement@@MethodInvocation:toInputStream(toString(buffer),null) @AT@ 4772 @LENGTH@ 37
---------INS SimpleName@@MethodName:toInputStream:[toString(buffer), null] @TO@ MethodInvocation@@toInputStream(toString(buffer),null) @AT@ 4772 @LENGTH@ 37
------------INS MethodInvocation@@toString(buffer) @TO@ SimpleName@@MethodName:toInputStream:[toString(buffer), null] @AT@ 4786 @LENGTH@ 16
---------------INS SimpleName@@MethodName:toString:[buffer] @TO@ MethodInvocation@@toString(buffer) @AT@ 4786 @LENGTH@ 16
------------------INS SimpleName@@buffer @TO@ SimpleName@@MethodName:toString:[buffer] @AT@ 4795 @LENGTH@ 6
---------------INS SimpleName@@MethodName:toString:[buffer] @TO@ MethodInvocation@@toString(buffer) @AT@ 4786 @LENGTH@ 16
------------------INS SimpleName@@buffer @TO@ SimpleName@@MethodName:toString:[buffer] @AT@ 4795 @LENGTH@ 6
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toInputStream:[toString(buffer), null] @AT@ 4804 @LENGTH@ 4


INS MethodDeclaration@@public, static, List, MethodName:filterList, List list, Object... filters,  @TO@ TypeDeclaration@@[public, final]CollectionHelper,  @AT@ 3255 @LENGTH@ 338
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, List, MethodName:filterList, List list, Object... filters,  @AT@ 3255 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, List, MethodName:filterList, List list, Object... filters,  @AT@ 3262 @LENGTH@ 6
---INS SimpleType@@List @TO@ MethodDeclaration@@public, static, List, MethodName:filterList, List list, Object... filters,  @AT@ 3269 @LENGTH@ 4
---INS SimpleName@@MethodName:filterList @TO@ MethodDeclaration@@public, static, List, MethodName:filterList, List list, Object... filters,  @AT@ 3274 @LENGTH@ 10
---INS SingleVariableDeclaration@@List list @TO@ MethodDeclaration@@public, static, List, MethodName:filterList, List list, Object... filters,  @AT@ 3285 @LENGTH@ 9
------INS SimpleType@@List @TO@ SingleVariableDeclaration@@List list @AT@ 3285 @LENGTH@ 4
------INS SimpleName@@list @TO@ SingleVariableDeclaration@@List list @AT@ 3290 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object... filters @TO@ MethodDeclaration@@public, static, List, MethodName:filterList, List list, Object... filters,  @AT@ 3296 @LENGTH@ 17
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object... filters @AT@ 3296 @LENGTH@ 6
------INS SimpleName@@filters @TO@ SingleVariableDeclaration@@Object... filters @AT@ 3306 @LENGTH@ 7
---INS VariableDeclarationStatement@@List answer=new ArrayList(); @TO@ MethodDeclaration@@public, static, List, MethodName:filterList, List list, Object... filters,  @AT@ 3325 @LENGTH@ 30
------INS SimpleType@@List @TO@ VariableDeclarationStatement@@List answer=new ArrayList(); @AT@ 3325 @LENGTH@ 4
------INS VariableDeclarationFragment@@answer=new ArrayList() @TO@ VariableDeclarationStatement@@List answer=new ArrayList(); @AT@ 3330 @LENGTH@ 24
---------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=new ArrayList() @AT@ 3330 @LENGTH@ 6
---------INS ClassInstanceCreation@@ArrayList[] @TO@ VariableDeclarationFragment@@answer=new ArrayList() @AT@ 3339 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList[] @AT@ 3339 @LENGTH@ 3
------------INS SimpleType@@ArrayList @TO@ ClassInstanceCreation@@ArrayList[] @AT@ 3343 @LENGTH@ 9
---INS EnhancedForStatement@@for (Object o : list) {  for (  Object filter : filters) {    if (!o.getClass().isInstance(filter)) {      answer.add(o);    }  }} @TO@ MethodDeclaration@@public, static, List, MethodName:filterList, List list, Object... filters,  @AT@ 3364 @LENGTH@ 200
------INS SingleVariableDeclaration@@Object o @TO@ EnhancedForStatement@@for (Object o : list) {  for (  Object filter : filters) {    if (!o.getClass().isInstance(filter)) {      answer.add(o);    }  }} @AT@ 3369 @LENGTH@ 8
---------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object o @AT@ 3369 @LENGTH@ 6
---------INS SimpleName@@o @TO@ SingleVariableDeclaration@@Object o @AT@ 3376 @LENGTH@ 1
------INS SimpleName@@list @TO@ EnhancedForStatement@@for (Object o : list) {  for (  Object filter : filters) {    if (!o.getClass().isInstance(filter)) {      answer.add(o);    }  }} @AT@ 3380 @LENGTH@ 4
------INS EnhancedForStatement@@for (Object filter : filters) {  if (!o.getClass().isInstance(filter)) {    answer.add(o);  }} @TO@ EnhancedForStatement@@for (Object o : list) {  for (  Object filter : filters) {    if (!o.getClass().isInstance(filter)) {      answer.add(o);    }  }} @AT@ 3400 @LENGTH@ 154
---------INS SingleVariableDeclaration@@Object filter @TO@ EnhancedForStatement@@for (Object filter : filters) {  if (!o.getClass().isInstance(filter)) {    answer.add(o);  }} @AT@ 3405 @LENGTH@ 13
------------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object filter @AT@ 3405 @LENGTH@ 6
------------INS SimpleName@@filter @TO@ SingleVariableDeclaration@@Object filter @AT@ 3412 @LENGTH@ 6
---------INS SimpleName@@filters @TO@ EnhancedForStatement@@for (Object filter : filters) {  if (!o.getClass().isInstance(filter)) {    answer.add(o);  }} @AT@ 3421 @LENGTH@ 7
---------INS IfStatement@@if (!o.getClass().isInstance(filter)) {  answer.add(o);} @TO@ EnhancedForStatement@@for (Object filter : filters) {  if (!o.getClass().isInstance(filter)) {    answer.add(o);  }} @AT@ 3448 @LENGTH@ 92
------------INS PrefixExpression@@!o.getClass().isInstance(filter) @TO@ IfStatement@@if (!o.getClass().isInstance(filter)) {  answer.add(o);} @AT@ 3452 @LENGTH@ 32
---------------INS Operator@@! @TO@ PrefixExpression@@!o.getClass().isInstance(filter) @AT@ 3452 @LENGTH@ 1
---------------INS MethodInvocation@@o.getClass().isInstance(filter) @TO@ PrefixExpression@@!o.getClass().isInstance(filter) @AT@ 3453 @LENGTH@ 31
------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@o.getClass().isInstance(filter) @AT@ 3453 @LENGTH@ 12
------------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.getClass().isInstance(filter) @AT@ 3453 @LENGTH@ 1
------------------INS SimpleName@@MethodName:isInstance:[filter] @TO@ MethodInvocation@@o.getClass().isInstance(filter) @AT@ 3466 @LENGTH@ 18
---------------------INS SimpleName@@filter @TO@ SimpleName@@MethodName:isInstance:[filter] @AT@ 3477 @LENGTH@ 6
------------INS Block@@ThenBody:{  answer.add(o);} @TO@ IfStatement@@if (!o.getClass().isInstance(filter)) {  answer.add(o);} @AT@ 3486 @LENGTH@ 54
---------------INS ExpressionStatement@@MethodInvocation:answer.add(o) @TO@ Block@@ThenBody:{  answer.add(o);} @AT@ 3508 @LENGTH@ 14
------------------INS MethodInvocation@@answer.add(o) @TO@ ExpressionStatement@@MethodInvocation:answer.add(o) @AT@ 3508 @LENGTH@ 13
---------------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.add(o) @AT@ 3508 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:add:[o] @TO@ MethodInvocation@@answer.add(o) @AT@ 3515 @LENGTH@ 6
------------------------INS SimpleName@@o @TO@ SimpleName@@MethodName:add:[o] @AT@ 3519 @LENGTH@ 1
---INS ReturnStatement@@SimpleName:answer @TO@ MethodDeclaration@@public, static, List, MethodName:filterList, List list, Object... filters,  @AT@ 3573 @LENGTH@ 14
------INS SimpleName@@answer @TO@ ReturnStatement@@SimpleName:answer @AT@ 3580 @LENGTH@ 6


DEL IfStatement@@if (isInheritErrorHandler()) {  output.setErrorHandlerBuilder(getErrorHandlerBuilder());} @AT@ 9524 @LENGTH@ 109
---DEL MethodInvocation@@MethodName:isInheritErrorHandler:[] @AT@ 9528 @LENGTH@ 23
---DEL Block@@ThenBody:{  output.setErrorHandlerBuilder(getErrorHandlerBuilder());} @AT@ 9553 @LENGTH@ 80
------DEL ExpressionStatement@@MethodInvocation:output.setErrorHandlerBuilder(getErrorHandlerBuilder()) @AT@ 9567 @LENGTH@ 56
---------DEL MethodInvocation@@output.setErrorHandlerBuilder(getErrorHandlerBuilder()) @AT@ 9567 @LENGTH@ 55
------------DEL SimpleName@@Name:output @AT@ 9567 @LENGTH@ 6
------------DEL SimpleName@@MethodName:setErrorHandlerBuilder:[getErrorHandlerBuilder()] @AT@ 9574 @LENGTH@ 48
---------------DEL MethodInvocation@@MethodName:getErrorHandlerBuilder:[] @AT@ 9597 @LENGTH@ 24


UPD TypeDeclaration@@[public]TransformProcessor, DelegateProcessor[Processor] @TO@ [public]TransformProcessor, DelegateProcessor @AT@ 1028 @LENGTH@ 902
---DEL SimpleType@@Processor @AT@ 1097 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setHeader(HttpConstants.HTTP_RESPONSE_CODE,500) @TO@ MethodInvocation:exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,500) @AT@ 3539 @LENGTH@ 67
---UPD MethodInvocation@@exchange.getOut().setHeader(HttpConstants.HTTP_RESPONSE_CODE,500) @TO@ exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,500) @AT@ 3539 @LENGTH@ 66
------UPD SimpleName@@MethodName:setHeader:[HttpConstants.HTTP_RESPONSE_CODE, 500] @TO@ MethodName:setHeader:[Exchange.HTTP_RESPONSE_CODE, 500] @AT@ 3557 @LENGTH@ 48
---------UPD QualifiedName@@HttpConstants.HTTP_RESPONSE_CODE @TO@ Exchange.HTTP_RESPONSE_CODE @AT@ 3567 @LENGTH@ 32
------------UPD SimpleName@@HttpConstants @TO@ Exchange @AT@ 3567 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).parallelProcessing(true).to(Constants.BANK1_URI,Constants.BANK2_URI,Constants.BANK3_URI) @TO@ MethodInvocation:from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).setParallelProcessing(true).to(Constants.BANK1_URI,Constants.BANK2_URI,Constants.BANK3_URI) @AT@ 3535 @LENGTH@ 593
---UPD MethodInvocation@@from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).parallelProcessing(true).to(Constants.BANK1_URI,Constants.BANK2_URI,Constants.BANK3_URI) @TO@ from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).setParallelProcessing(true).to(Constants.BANK1_URI,Constants.BANK2_URI,Constants.BANK3_URI) @AT@ 3535 @LENGTH@ 592
------UPD MethodInvocation@@MethodName:parallelProcessing:[true] @TO@ MethodName:setParallelProcessing:[true] @AT@ 3535 @LENGTH@ 505


UPD ReturnStatement@@InfixExpression:"transform(" + expression + ","+ processor+ ")" @TO@ InfixExpression:"Transform(" + expression + (processor != null ? "," + processor : "")+ ")" @AT@ 1865 @LENGTH@ 57
---UPD InfixExpression@@"transform(" + expression + ","+ processor+ ")" @TO@ "Transform(" + expression + (processor != null ? "," + processor : "")+ ")" @AT@ 1872 @LENGTH@ 49
------UPD StringLiteral@@"transform(" @TO@ "Transform(" @AT@ 1872 @LENGTH@ 12
------INS ParenthesizedExpression@@(processor != null ? "," + processor : "") @TO@ InfixExpression@@"transform(" + expression + ","+ processor+ ")" @AT@ 1879 @LENGTH@ 42
---------INS ConditionalExpression@@processor != null ? "," + processor : "" @TO@ ParenthesizedExpression@@(processor != null ? "," + processor : "") @AT@ 1880 @LENGTH@ 40
------------INS InfixExpression@@processor != null @TO@ ConditionalExpression@@processor != null ? "," + processor : "" @AT@ 1880 @LENGTH@ 17
---------------INS SimpleName@@processor @TO@ InfixExpression@@processor != null @AT@ 1880 @LENGTH@ 9
---------------INS Operator@@!= @TO@ InfixExpression@@processor != null @AT@ 1889 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@processor != null @AT@ 1893 @LENGTH@ 4
------------INS InfixExpression@@"," + processor @TO@ ConditionalExpression@@processor != null ? "," + processor : "" @AT@ 1900 @LENGTH@ 15
---------------MOV StringLiteral@@"," @TO@ InfixExpression@@"," + processor @AT@ 1900 @LENGTH@ 3
---------------INS Operator@@+ @TO@ InfixExpression@@"," + processor @AT@ 1903 @LENGTH@ 1
---------------MOV SimpleName@@processor @TO@ InfixExpression@@"," + processor @AT@ 1906 @LENGTH@ 9
------------INS StringLiteral@@"" @TO@ ConditionalExpression@@processor != null ? "," + processor : "" @AT@ 1918 @LENGTH@ 2


UPD FieldDeclaration@@private, String, [result="1=BE.CHM.0018=FIX 4.19=2010=22011=CHM0001-0122=434=135=048=BE000124567849=INVMGR54=156=BRKR58=this is a camel - bindy test"] @TO@ private, String, [result="1=BE.CHM.001\t8=FIX 4.1\t9=20\t10=0\t11=CHM0001-01\t22=4\t34=1\t35=0\t48=BE0001245678\t49=INVMGR\t54=1\t56=BRKR\t58=this is a camel - bindy test\t"] @AT@ 2226 @LENGTH@ 162
---UPD VariableDeclarationFragment@@result="1=BE.CHM.0018=FIX 4.19=2010=22011=CHM0001-0122=434=135=048=BE000124567849=INVMGR54=156=BRKR58=this is a camel - bindy test" @TO@ result="1=BE.CHM.001\t8=FIX 4.1\t9=20\t10=0\t11=CHM0001-01\t22=4\t34=1\t35=0\t48=BE0001245678\t49=INVMGR\t54=1\t56=BRKR\t58=this is a camel - bindy test\t" @AT@ 2241 @LENGTH@ 146
------UPD StringLiteral@@"1=BE.CHM.0018=FIX 4.19=2010=22011=CHM0001-0122=434=135=048=BE000124567849=INVMGR54=156=BRKR58=this is a camel - bindy test" @TO@ "1=BE.CHM.001\t8=FIX 4.1\t9=20\t10=0\t11=CHM0001-01\t22=4\t34=1\t35=0\t48=BE0001245678\t49=INVMGR\t54=1\t56=BRKR\t58=this is a camel - bindy test\t" @AT@ 2250 @LENGTH@ 137


INS MethodDeclaration@@private, voidMethodName:DataHolder,  @TO@ TypeDeclaration@@[private]DataHolder,  @AT@ 3277 @LENGTH@ 32
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:DataHolder,  @AT@ 3277 @LENGTH@ 7
---INS SimpleName@@MethodName:DataHolder @TO@ MethodDeclaration@@private, voidMethodName:DataHolder,  @AT@ 3285 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"report.txt") @TO@ MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"report.txt") @AT@ 2273 @LENGTH@ 101
---UPD MethodInvocation@@template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"report.txt") @TO@ template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"report.txt") @AT@ 2273 @LENGTH@ 100
------UPD SimpleName@@MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", FileComponent.HEADER_FILE_NAME, "report.txt"] @TO@ MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", NewFileComponent.HEADER_FILE_NAME, "report.txt"] @AT@ 2282 @LENGTH@ 91
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2328 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2328 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @TO@ TypeDeclaration@@[public]FileUtilsTestCase, FileBasedTestCase @AT@ 22609 @LENGTH@ 640
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 22609 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 22616 @LENGTH@ 4
---INS SimpleName@@MethodName:IGNOREtestCopyFileLarge @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 22621 @LENGTH@ 23
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 22654 @LENGTH@ 9
---INS VariableDeclarationStatement@@File largeFile=new File(getTestDirectory(),"large.txt"); @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 22675 @LENGTH@ 59
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File largeFile=new File(getTestDirectory(),"large.txt"); @AT@ 22675 @LENGTH@ 4
------INS VariableDeclarationFragment@@largeFile=new File(getTestDirectory(),"large.txt") @TO@ VariableDeclarationStatement@@File largeFile=new File(getTestDirectory(),"large.txt"); @AT@ 22680 @LENGTH@ 53
---------INS SimpleName@@largeFile @TO@ VariableDeclarationFragment@@largeFile=new File(getTestDirectory(),"large.txt") @AT@ 22680 @LENGTH@ 9
---------INS ClassInstanceCreation@@File[getTestDirectory(), "large.txt"] @TO@ VariableDeclarationFragment@@largeFile=new File(getTestDirectory(),"large.txt") @AT@ 22692 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@File[getTestDirectory(), "large.txt"] @AT@ 22692 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[getTestDirectory(), "large.txt"] @AT@ 22696 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:getTestDirectory:[] @TO@ ClassInstanceCreation@@File[getTestDirectory(), "large.txt"] @AT@ 22701 @LENGTH@ 18
------------INS StringLiteral@@"large.txt" @TO@ ClassInstanceCreation@@File[getTestDirectory(), "large.txt"] @AT@ 22721 @LENGTH@ 11
---INS VariableDeclarationStatement@@File destination=new File(getTestDirectory(),"copylarge.txt"); @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 22743 @LENGTH@ 65
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File destination=new File(getTestDirectory(),"copylarge.txt"); @AT@ 22743 @LENGTH@ 4
------INS VariableDeclarationFragment@@destination=new File(getTestDirectory(),"copylarge.txt") @TO@ VariableDeclarationStatement@@File destination=new File(getTestDirectory(),"copylarge.txt"); @AT@ 22748 @LENGTH@ 59
---------INS SimpleName@@destination @TO@ VariableDeclarationFragment@@destination=new File(getTestDirectory(),"copylarge.txt") @AT@ 22748 @LENGTH@ 11
---------INS ClassInstanceCreation@@File[getTestDirectory(), "copylarge.txt"] @TO@ VariableDeclarationFragment@@destination=new File(getTestDirectory(),"copylarge.txt") @AT@ 22762 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@File[getTestDirectory(), "copylarge.txt"] @AT@ 22762 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[getTestDirectory(), "copylarge.txt"] @AT@ 22766 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:getTestDirectory:[] @TO@ ClassInstanceCreation@@File[getTestDirectory(), "copylarge.txt"] @AT@ 22771 @LENGTH@ 18
------------INS StringLiteral@@"copylarge.txt" @TO@ ClassInstanceCreation@@File[getTestDirectory(), "copylarge.txt"] @AT@ 22791 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:System.out.println("START:   " + new java.util.Date()) @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 22818 @LENGTH@ 55
------INS MethodInvocation@@System.out.println("START:   " + new java.util.Date()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("START:   " + new java.util.Date()) @AT@ 22818 @LENGTH@ 54
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("START:   " + new java.util.Date()) @AT@ 22818 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["START:   " + new java.util.Date()] @TO@ MethodInvocation@@System.out.println("START:   " + new java.util.Date()) @AT@ 22829 @LENGTH@ 43
------------INS InfixExpression@@"START:   " + new java.util.Date() @TO@ SimpleName@@MethodName:println:["START:   " + new java.util.Date()] @AT@ 22837 @LENGTH@ 34
---------------INS StringLiteral@@"START:   " @TO@ InfixExpression@@"START:   " + new java.util.Date() @AT@ 22837 @LENGTH@ 11
---------------INS Operator@@+ @TO@ InfixExpression@@"START:   " + new java.util.Date() @AT@ 22848 @LENGTH@ 1
---------------INS ClassInstanceCreation@@java.util.Date[] @TO@ InfixExpression@@"START:   " + new java.util.Date() @AT@ 22851 @LENGTH@ 20
------------------INS New@@new @TO@ ClassInstanceCreation@@java.util.Date[] @AT@ 22851 @LENGTH@ 3
------------------INS SimpleType@@java.util.Date @TO@ ClassInstanceCreation@@java.util.Date[] @AT@ 22855 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:createFile(largeFile,FileUtils.ONE_GB) @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 22882 @LENGTH@ 40
------INS MethodInvocation@@createFile(largeFile,FileUtils.ONE_GB) @TO@ ExpressionStatement@@MethodInvocation:createFile(largeFile,FileUtils.ONE_GB) @AT@ 22882 @LENGTH@ 39
---------INS SimpleName@@MethodName:createFile:[largeFile, FileUtils.ONE_GB] @TO@ MethodInvocation@@createFile(largeFile,FileUtils.ONE_GB) @AT@ 22882 @LENGTH@ 39
------------INS SimpleName@@largeFile @TO@ SimpleName@@MethodName:createFile:[largeFile, FileUtils.ONE_GB] @AT@ 22893 @LENGTH@ 9
------------INS QualifiedName@@FileUtils.ONE_GB @TO@ SimpleName@@MethodName:createFile:[largeFile, FileUtils.ONE_GB] @AT@ 22904 @LENGTH@ 16
---------------INS SimpleName@@FileUtils @TO@ QualifiedName@@FileUtils.ONE_GB @AT@ 22904 @LENGTH@ 9
---------------INS SimpleName@@ONE_GB @TO@ QualifiedName@@FileUtils.ONE_GB @AT@ 22914 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:System.out.println("CREATED: " + new java.util.Date()) @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 22931 @LENGTH@ 55
------INS MethodInvocation@@System.out.println("CREATED: " + new java.util.Date()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("CREATED: " + new java.util.Date()) @AT@ 22931 @LENGTH@ 54
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("CREATED: " + new java.util.Date()) @AT@ 22931 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["CREATED: " + new java.util.Date()] @TO@ MethodInvocation@@System.out.println("CREATED: " + new java.util.Date()) @AT@ 22942 @LENGTH@ 43
------------INS InfixExpression@@"CREATED: " + new java.util.Date() @TO@ SimpleName@@MethodName:println:["CREATED: " + new java.util.Date()] @AT@ 22950 @LENGTH@ 34
---------------INS StringLiteral@@"CREATED: " @TO@ InfixExpression@@"CREATED: " + new java.util.Date() @AT@ 22950 @LENGTH@ 11
---------------INS Operator@@+ @TO@ InfixExpression@@"CREATED: " + new java.util.Date() @AT@ 22961 @LENGTH@ 1
---------------INS ClassInstanceCreation@@java.util.Date[] @TO@ InfixExpression@@"CREATED: " + new java.util.Date() @AT@ 22964 @LENGTH@ 20
------------------INS New@@new @TO@ ClassInstanceCreation@@java.util.Date[] @AT@ 22964 @LENGTH@ 3
------------------INS SimpleType@@java.util.Date @TO@ ClassInstanceCreation@@java.util.Date[] @AT@ 22968 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:FileUtils.copyFile(largeFile,destination) @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 22995 @LENGTH@ 43
------INS MethodInvocation@@FileUtils.copyFile(largeFile,destination) @TO@ ExpressionStatement@@MethodInvocation:FileUtils.copyFile(largeFile,destination) @AT@ 22995 @LENGTH@ 42
---------INS SimpleName@@Name:FileUtils @TO@ MethodInvocation@@FileUtils.copyFile(largeFile,destination) @AT@ 22995 @LENGTH@ 9
---------INS SimpleName@@MethodName:copyFile:[largeFile, destination] @TO@ MethodInvocation@@FileUtils.copyFile(largeFile,destination) @AT@ 23005 @LENGTH@ 32
------------INS SimpleName@@largeFile @TO@ SimpleName@@MethodName:copyFile:[largeFile, destination] @AT@ 23014 @LENGTH@ 9
------------INS SimpleName@@destination @TO@ SimpleName@@MethodName:copyFile:[largeFile, destination] @AT@ 23025 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:System.out.println("COPIED:  " + new java.util.Date()) @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 23047 @LENGTH@ 55
------INS MethodInvocation@@System.out.println("COPIED:  " + new java.util.Date()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("COPIED:  " + new java.util.Date()) @AT@ 23047 @LENGTH@ 54
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("COPIED:  " + new java.util.Date()) @AT@ 23047 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["COPIED:  " + new java.util.Date()] @TO@ MethodInvocation@@System.out.println("COPIED:  " + new java.util.Date()) @AT@ 23058 @LENGTH@ 43
------------INS InfixExpression@@"COPIED:  " + new java.util.Date() @TO@ SimpleName@@MethodName:println:["COPIED:  " + new java.util.Date()] @AT@ 23066 @LENGTH@ 34
---------------INS StringLiteral@@"COPIED:  " @TO@ InfixExpression@@"COPIED:  " + new java.util.Date() @AT@ 23066 @LENGTH@ 11
---------------INS Operator@@+ @TO@ InfixExpression@@"COPIED:  " + new java.util.Date() @AT@ 23077 @LENGTH@ 1
---------------INS ClassInstanceCreation@@java.util.Date[] @TO@ InfixExpression@@"COPIED:  " + new java.util.Date() @AT@ 23080 @LENGTH@ 20
------------------INS New@@new @TO@ ClassInstanceCreation@@java.util.Date[] @AT@ 23080 @LENGTH@ 3
------------------INS SimpleType@@java.util.Date @TO@ ClassInstanceCreation@@java.util.Date[] @AT@ 23084 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertTrue("Check Exist",destination.exists()) @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 23112 @LENGTH@ 48
------INS MethodInvocation@@assertTrue("Check Exist",destination.exists()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Check Exist",destination.exists()) @AT@ 23112 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertTrue:["Check Exist", destination.exists()] @TO@ MethodInvocation@@assertTrue("Check Exist",destination.exists()) @AT@ 23112 @LENGTH@ 47
------------INS StringLiteral@@"Check Exist" @TO@ SimpleName@@MethodName:assertTrue:["Check Exist", destination.exists()] @AT@ 23123 @LENGTH@ 13
------------INS MethodInvocation@@destination.exists() @TO@ SimpleName@@MethodName:assertTrue:["Check Exist", destination.exists()] @AT@ 23138 @LENGTH@ 20
---------------INS SimpleName@@Name:destination @TO@ MethodInvocation@@destination.exists() @AT@ 23138 @LENGTH@ 11
---------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@destination.exists() @AT@ 23150 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertTrue("Check Full copy",destination.length() == largeFile.length()) @TO@ MethodDeclaration@@public, void, MethodName:IGNOREtestCopyFileLarge, Exception,  @AT@ 23169 @LENGTH@ 74
------INS MethodInvocation@@assertTrue("Check Full copy",destination.length() == largeFile.length()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Check Full copy",destination.length() == largeFile.length()) @AT@ 23169 @LENGTH@ 73
---------INS SimpleName@@MethodName:assertTrue:["Check Full copy", destination.length() == largeFile.length()] @TO@ MethodInvocation@@assertTrue("Check Full copy",destination.length() == largeFile.length()) @AT@ 23169 @LENGTH@ 73
------------INS StringLiteral@@"Check Full copy" @TO@ SimpleName@@MethodName:assertTrue:["Check Full copy", destination.length() == largeFile.length()] @AT@ 23180 @LENGTH@ 17
------------INS InfixExpression@@destination.length() == largeFile.length() @TO@ SimpleName@@MethodName:assertTrue:["Check Full copy", destination.length() == largeFile.length()] @AT@ 23199 @LENGTH@ 42
---------------INS MethodInvocation@@destination.length() @TO@ InfixExpression@@destination.length() == largeFile.length() @AT@ 23199 @LENGTH@ 20
------------------INS SimpleName@@Name:destination @TO@ MethodInvocation@@destination.length() @AT@ 23199 @LENGTH@ 11
------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@destination.length() @AT@ 23211 @LENGTH@ 8
---------------INS Operator@@== @TO@ InfixExpression@@destination.length() == largeFile.length() @AT@ 23219 @LENGTH@ 2
---------------INS MethodInvocation@@largeFile.length() @TO@ InfixExpression@@destination.length() == largeFile.length() @AT@ 23223 @LENGTH@ 18
------------------INS SimpleName@@Name:largeFile @TO@ MethodInvocation@@largeFile.length() @AT@ 23223 @LENGTH@ 9
------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@largeFile.length() @AT@ 23233 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:from(cxfEndpoint).convertBodyTo(InputReportIncident.class).setHeader(NewFileComponent.HEADER_FILE_NAME,BeanLanguage.bean(FilenameGenerator.class,"generateFilename")).to("velocity:MailBody.vm").to("newfile://target/subfolder").transform(constant(ok)) @TO@ MethodInvocation:from(cxfEndpoint).convertBodyTo(InputReportIncident.class).setHeader(FileComponent.HEADER_FILE_NAME,BeanLanguage.bean(FilenameGenerator.class,"generateFilename")).to("velocity:MailBody.vm").to("file://target/subfolder").transform(constant(ok)) @AT@ 2361 @LENGTH@ 642
---UPD MethodInvocation@@from(cxfEndpoint).convertBodyTo(InputReportIncident.class).setHeader(NewFileComponent.HEADER_FILE_NAME,BeanLanguage.bean(FilenameGenerator.class,"generateFilename")).to("velocity:MailBody.vm").to("newfile://target/subfolder").transform(constant(ok)) @TO@ from(cxfEndpoint).convertBodyTo(InputReportIncident.class).setHeader(FileComponent.HEADER_FILE_NAME,BeanLanguage.bean(FilenameGenerator.class,"generateFilename")).to("velocity:MailBody.vm").to("file://target/subfolder").transform(constant(ok)) @AT@ 2361 @LENGTH@ 641
------UPD MethodInvocation@@MethodName:to:["newfile://target/subfolder"] @TO@ MethodName:to:["file://target/subfolder"] @AT@ 2361 @LENGTH@ 567
---------UPD StringLiteral@@"newfile://target/subfolder" @TO@ "file://target/subfolder" @AT@ 2899 @LENGTH@ 28
------UPD MethodInvocation@@MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, BeanLanguage.bean(FilenameGenerator.class,"generateFilename")] @TO@ MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, BeanLanguage.bean(FilenameGenerator.class,"generateFilename")] @AT@ 2361 @LENGTH@ 381
---------UPD QualifiedName@@NewFileComponent.HEADER_FILE_NAME @TO@ FileComponent.HEADER_FILE_NAME @AT@ 2644 @LENGTH@ 33
------------UPD SimpleName@@NewFileComponent @TO@ FileComponent @AT@ 2644 @LENGTH@ 16


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]StaticMethodFallbackTypeConverter, [TypeConverter] @AT@ 2313 @LENGTH@ 132
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2313 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2324 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2326 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2345 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2345 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2345 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2351 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2354 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2360 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2360 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2369 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2379 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2379 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2386 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,null,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2403 @LENGTH@ 36
------INS MethodInvocation@@convertTo(type,null,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,null,value) @AT@ 2410 @LENGTH@ 28
---------INS SimpleName@@MethodName:convertTo:[type, null, value] @TO@ MethodInvocation@@convertTo(type,null,value) @AT@ 2410 @LENGTH@ 28
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2420 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2426 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2432 @LENGTH@ 5


UPD MethodDeclaration@@public, StreamSource, MethodName:toStreamSource, ByteBuffer in, TransformerException,  @TO@ public, StreamSource, MethodName:toStreamSource, ByteBuffer in, Exchange exchange, TransformerException,  @AT@ 10085 @LENGTH@ 211
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, StreamSource, MethodName:toStreamSource, ByteBuffer in, TransformerException,  @AT@ 10170 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 10170 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 10179 @LENGTH@ 8
---UPD IfStatement@@if (in != null) {  return new StreamSource(NIOConverter.toInputStream(in));} @TO@ if (in != null) {  InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in);  return new StreamSource(is);} @AT@ 10173 @LENGTH@ 96
------UPD Block@@ThenBody:{  return new StreamSource(NIOConverter.toInputStream(in));} @TO@ ThenBody:{  InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in);  return new StreamSource(is);} @AT@ 10189 @LENGTH@ 80
---------UPD ReturnStatement@@ClassInstanceCreation:new StreamSource(NIOConverter.toInputStream(in)) @TO@ ClassInstanceCreation:new StreamSource(is) @AT@ 10203 @LENGTH@ 56
------------UPD ClassInstanceCreation@@StreamSource[NIOConverter.toInputStream(in)] @TO@ StreamSource[is] @AT@ 10210 @LENGTH@ 48
---------------DEL MethodInvocation@@NIOConverter.toInputStream(in) @AT@ 10227 @LENGTH@ 30
------------------DEL SimpleName@@Name:NIOConverter @AT@ 10227 @LENGTH@ 12
------------------DEL SimpleName@@MethodName:toInputStream:[in] @AT@ 10240 @LENGTH@ 17
---------------------DEL SimpleName@@in @AT@ 10254 @LENGTH@ 2
---------------INS SimpleName@@is @TO@ ClassInstanceCreation@@StreamSource[NIOConverter.toInputStream(in)] @AT@ 10385 @LENGTH@ 2
---------INS VariableDeclarationStatement@@InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in); @TO@ Block@@ThenBody:{  return new StreamSource(NIOConverter.toInputStream(in));} @AT@ 10257 @LENGTH@ 91
------------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in); @AT@ 10257 @LENGTH@ 11
------------INS VariableDeclarationFragment@@is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @TO@ VariableDeclarationStatement@@InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in); @AT@ 10269 @LENGTH@ 78
---------------INS SimpleName@@is @TO@ VariableDeclarationFragment@@is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @AT@ 10269 @LENGTH@ 2
---------------INS MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @TO@ VariableDeclarationFragment@@is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @AT@ 10274 @LENGTH@ 73
------------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @AT@ 10274 @LENGTH@ 40
------------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @AT@ 10274 @LENGTH@ 21
------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @AT@ 10274 @LENGTH@ 8
------------------INS SimpleName@@MethodName:convertTo:[InputStream.class, in] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @AT@ 10315 @LENGTH@ 32
---------------------INS TypeLiteral@@InputStream.class @TO@ SimpleName@@MethodName:convertTo:[InputStream.class, in] @AT@ 10325 @LENGTH@ 17
---------------------INS SimpleName@@in @TO@ SimpleName@@MethodName:convertTo:[InputStream.class, in] @AT@ 10344 @LENGTH@ 2


UPD TypeDeclaration@@[public]Main,  @TO@ [public, final]Main,  @AT@ 1225 @LENGTH@ 1829
---INS Modifier@@final @TO@ TypeDeclaration@@[public]Main,  @AT@ 1232 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:tearDown, Exception,  @TO@ public, void, MethodName:tearDown,  @AT@ 2349 @LENGTH@ 285
---DEL SimpleType@@Exception @AT@ 2379 @LENGTH@ 9
---INS TryStatement@@try {  super.tearDown();  if (applicationContext != null) {    if (applicationContext.isActive()) {      applicationContext.destroy();    }    applicationContext=null;  }} catch (Exception exception) {} @TO@ MethodDeclaration@@public, void, MethodName:tearDown, Exception,  @AT@ 2382 @LENGTH@ 401
------MOV ExpressionStatement@@SuperMethodInvocation:super.tearDown() @TO@ TryStatement@@try {  super.tearDown();  if (applicationContext != null) {    if (applicationContext.isActive()) {      applicationContext.destroy();    }    applicationContext=null;  }} catch (Exception exception) {} @AT@ 2399 @LENGTH@ 17
------MOV IfStatement@@if (applicationContext != null) {  if (applicationContext.isActive()) {    applicationContext.destroy();  }} @TO@ TryStatement@@try {  super.tearDown();  if (applicationContext != null) {    if (applicationContext.isActive()) {      applicationContext.destroy();    }    applicationContext=null;  }} catch (Exception exception) {} @AT@ 2425 @LENGTH@ 203
------INS CatchClause@@catch (Exception exception) {} @TO@ TryStatement@@try {  super.tearDown();  if (applicationContext != null) {    if (applicationContext.isActive()) {      applicationContext.destroy();    }    applicationContext=null;  }} catch (Exception exception) {} @AT@ 2668 @LENGTH@ 115
---------INS SingleVariableDeclaration@@Exception exception @TO@ CatchClause@@catch (Exception exception) {} @AT@ 2675 @LENGTH@ 19
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception exception @AT@ 2675 @LENGTH@ 9
------------INS SimpleName@@exception @TO@ SingleVariableDeclaration@@Exception exception @AT@ 2685 @LENGTH@ 9
---UPD IfStatement@@if (applicationContext != null) {  if (applicationContext.isActive()) {    applicationContext.destroy();  }} @TO@ if (applicationContext != null) {  if (applicationContext.isActive()) {    applicationContext.destroy();  }  applicationContext=null;} @AT@ 2425 @LENGTH@ 203


UPD ExpressionStatement@@MethodInvocation:assertTrue("Should not take that long to run: " + delta,delta < 7000) @TO@ MethodInvocation:assertTrue("Should not take that long to run: " + delta,delta < 9000) @AT@ 1545 @LENGTH@ 71
---UPD MethodInvocation@@assertTrue("Should not take that long to run: " + delta,delta < 7000) @TO@ assertTrue("Should not take that long to run: " + delta,delta < 9000) @AT@ 1545 @LENGTH@ 70
------UPD SimpleName@@MethodName:assertTrue:["Should not take that long to run: " + delta, delta < 7000] @TO@ MethodName:assertTrue:["Should not take that long to run: " + delta, delta < 9000] @AT@ 1545 @LENGTH@ 70
---------UPD InfixExpression@@delta < 7000 @TO@ delta < 9000 @AT@ 1602 @LENGTH@ 12
------------UPD NumberLiteral@@7000 @TO@ 9000 @AT@ 1610 @LENGTH@ 4


INS MethodDeclaration@@private, voidMethodName:CamelJmxConnectorSupport,  @TO@ TypeDeclaration@@[public]CamelJmxConnectorSupport,  @AT@ 1247 @LENGTH@ 66
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:CamelJmxConnectorSupport,  @AT@ 1247 @LENGTH@ 7
---INS SimpleName@@MethodName:CamelJmxConnectorSupport @TO@ MethodDeclaration@@private, voidMethodName:CamelJmxConnectorSupport,  @AT@ 1255 @LENGTH@ 24


INS MethodDeclaration@@public, boolean, MethodName:isRedirectRequested,  @TO@ TypeDeclaration@@[public]ExternalContext,  @AT@ 8279 @LENGTH@ 37
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isRedirectRequested,  @AT@ 8279 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isRedirectRequested,  @AT@ 8286 @LENGTH@ 7
---INS SimpleName@@MethodName:isRedirectRequested @TO@ MethodDeclaration@@public, boolean, MethodName:isRedirectRequested,  @AT@ 8294 @LENGTH@ 19


UPD TypeDeclaration@@[public]BeanHelper,  @TO@ [public, final]BeanHelper,  @AT@ 2198 @LENGTH@ 12971
---INS Modifier@@final @TO@ TypeDeclaration@@[public]BeanHelper,  @AT@ 2205 @LENGTH@ 5


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[private]MyOrderTypeConverter, [TypeConverter] @AT@ 3116 @LENGTH@ 134
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3116 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3127 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3129 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3148 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3148 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3148 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3154 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3157 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3163 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3163 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3172 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3182 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 3182 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 3189 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3210 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 3217 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 3217 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3227 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3233 @LENGTH@ 5


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]ArrayTypeConverter, [TypeConverter] @AT@ 3235 @LENGTH@ 126
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3235 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3246 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3248 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3267 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3267 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3267 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3273 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3276 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3282 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3282 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3291 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3301 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 3301 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 3308 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3325 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 3332 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 3332 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3342 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3348 @LENGTH@ 5


INS IfStatement@@if (System.getProperty("os.name").startsWith("Windows")) {  assertTrue(repo.contains("target\\fileidempotent\\report.txt"));} else {  assertTrue(repo.contains("target/fileidempotent/report.txt"));} @TO@ MethodDeclaration@@public, void, MethodName:testIdempotent, Exception,  @AT@ 2807 @LENGTH@ 237
---INS MethodInvocation@@System.getProperty("os.name").startsWith("Windows") @TO@ IfStatement@@if (System.getProperty("os.name").startsWith("Windows")) {  assertTrue(repo.contains("target\\fileidempotent\\report.txt"));} else {  assertTrue(repo.contains("target/fileidempotent/report.txt"));} @AT@ 2811 @LENGTH@ 51
------INS MethodInvocation@@MethodName:getProperty:["os.name"] @TO@ MethodInvocation@@System.getProperty("os.name").startsWith("Windows") @AT@ 2811 @LENGTH@ 29
---------INS StringLiteral@@"os.name" @TO@ MethodInvocation@@MethodName:getProperty:["os.name"] @AT@ 2830 @LENGTH@ 9
------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("os.name").startsWith("Windows") @AT@ 2811 @LENGTH@ 6
------INS SimpleName@@MethodName:startsWith:["Windows"] @TO@ MethodInvocation@@System.getProperty("os.name").startsWith("Windows") @AT@ 2841 @LENGTH@ 21
---------INS StringLiteral@@"Windows" @TO@ SimpleName@@MethodName:startsWith:["Windows"] @AT@ 2852 @LENGTH@ 9
---INS Block@@ThenBody:{  assertTrue(repo.contains("target\\fileidempotent\\report.txt"));} @TO@ IfStatement@@if (System.getProperty("os.name").startsWith("Windows")) {  assertTrue(repo.contains("target\\fileidempotent\\report.txt"));} else {  assertTrue(repo.contains("target/fileidempotent/report.txt"));} @AT@ 2864 @LENGTH@ 88
------INS ExpressionStatement@@MethodInvocation:assertTrue(repo.contains("target\\fileidempotent\\report.txt")) @TO@ Block@@ThenBody:{  assertTrue(repo.contains("target\\fileidempotent\\report.txt"));} @AT@ 2878 @LENGTH@ 64
---------INS MethodInvocation@@assertTrue(repo.contains("target\\fileidempotent\\report.txt")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(repo.contains("target\\fileidempotent\\report.txt")) @AT@ 2878 @LENGTH@ 63
------------INS SimpleName@@MethodName:assertTrue:[repo.contains("target\\fileidempotent\\report.txt")] @TO@ MethodInvocation@@assertTrue(repo.contains("target\\fileidempotent\\report.txt")) @AT@ 2878 @LENGTH@ 63
---------------INS MethodInvocation@@repo.contains("target\\fileidempotent\\report.txt") @TO@ SimpleName@@MethodName:assertTrue:[repo.contains("target\\fileidempotent\\report.txt")] @AT@ 2889 @LENGTH@ 51
------------------INS SimpleName@@Name:repo @TO@ MethodInvocation@@repo.contains("target\\fileidempotent\\report.txt") @AT@ 2889 @LENGTH@ 4
------------------INS SimpleName@@MethodName:contains:["target\\fileidempotent\\report.txt"] @TO@ MethodInvocation@@repo.contains("target\\fileidempotent\\report.txt") @AT@ 2894 @LENGTH@ 46
---------------------INS StringLiteral@@"target\\fileidempotent\\report.txt" @TO@ SimpleName@@MethodName:contains:["target\\fileidempotent\\report.txt"] @AT@ 2903 @LENGTH@ 36
---INS Block@@ElseBody:{  assertTrue(repo.contains("target/fileidempotent/report.txt"));} @TO@ IfStatement@@if (System.getProperty("os.name").startsWith("Windows")) {  assertTrue(repo.contains("target\\fileidempotent\\report.txt"));} else {  assertTrue(repo.contains("target/fileidempotent/report.txt"));} @AT@ 2958 @LENGTH@ 86
------INS ExpressionStatement@@MethodInvocation:assertTrue(repo.contains("target/fileidempotent/report.txt")) @TO@ Block@@ElseBody:{  assertTrue(repo.contains("target/fileidempotent/report.txt"));} @AT@ 2972 @LENGTH@ 62
---------MOV MethodInvocation@@assertTrue(repo.contains("report.txt")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(repo.contains("target/fileidempotent/report.txt")) @AT@ 2808 @LENGTH@ 39
------------UPD SimpleName@@MethodName:assertTrue:[repo.contains("report.txt")] @TO@ MethodName:assertTrue:[repo.contains("target/fileidempotent/report.txt")] @AT@ 2808 @LENGTH@ 39
---------------UPD MethodInvocation@@repo.contains("report.txt") @TO@ repo.contains("target/fileidempotent/report.txt") @AT@ 2819 @LENGTH@ 27
------------------UPD SimpleName@@MethodName:contains:["report.txt"] @TO@ MethodName:contains:["target/fileidempotent/report.txt"] @AT@ 2824 @LENGTH@ 22
---------------------UPD StringLiteral@@"report.txt" @TO@ "target/fileidempotent/report.txt" @AT@ 2833 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setHeader(HttpConstants.HTTP_RESPONSE_CODE,404) @TO@ MethodInvocation:exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,404) @AT@ 3857 @LENGTH@ 67
---UPD MethodInvocation@@exchange.getOut().setHeader(HttpConstants.HTTP_RESPONSE_CODE,404) @TO@ exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,404) @AT@ 3857 @LENGTH@ 66
------UPD SimpleName@@MethodName:setHeader:[HttpConstants.HTTP_RESPONSE_CODE, 404] @TO@ MethodName:setHeader:[Exchange.HTTP_RESPONSE_CODE, 404] @AT@ 3875 @LENGTH@ 48
---------UPD QualifiedName@@HttpConstants.HTTP_RESPONSE_CODE @TO@ Exchange.HTTP_RESPONSE_CODE @AT@ 3885 @LENGTH@ 32
------------UPD SimpleName@@HttpConstants @TO@ Exchange @AT@ 3885 @LENGTH@ 13


DEL FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(CxfConsumerMessageTest.class)] @AT@ 1213 @LENGTH@ 89
---DEL Modifier@@private @AT@ 1213 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1221 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1228 @LENGTH@ 5
---DEL Modifier@@transient @AT@ 1234 @LENGTH@ 9
---DEL SimpleType@@Log @AT@ 1244 @LENGTH@ 3
---DEL VariableDeclarationFragment@@LOG=LogFactory.getLog(CxfConsumerMessageTest.class) @AT@ 1248 @LENGTH@ 53
------DEL SimpleName@@LOG @AT@ 1248 @LENGTH@ 3
------DEL MethodInvocation@@LogFactory.getLog(CxfConsumerMessageTest.class) @AT@ 1254 @LENGTH@ 47
---------DEL SimpleName@@Name:LogFactory @AT@ 1254 @LENGTH@ 10
---------DEL SimpleName@@MethodName:getLog:[CxfConsumerMessageTest.class] @AT@ 1265 @LENGTH@ 36
------------DEL TypeLiteral@@CxfConsumerMessageTest.class @AT@ 1272 @LENGTH@ 28


UPD ReturnStatement@@MethodInvocation:IOConverter.toInputStream(s) @TO@ MethodInvocation:IOConverter.toInputStream(s,null) @AT@ 3358 @LENGTH@ 36
---UPD MethodInvocation@@IOConverter.toInputStream(s) @TO@ IOConverter.toInputStream(s,null) @AT@ 3365 @LENGTH@ 28
------UPD SimpleName@@MethodName:toInputStream:[s] @TO@ MethodName:toInputStream:[s, null] @AT@ 3377 @LENGTH@ 16
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toInputStream:[s] @AT@ 3400 @LENGTH@ 4


UPD IfStatement@@if (username != null) {  LOG.trace("Attempting to login user: " + username);  login=client.login(username,config.getPassword());} else {  LOG.trace("Attempting to login anonymousl");  login=client.login("anonymous",null);} @TO@ if (username != null) {  if (LOG.isTraceEnabled()) {    LOG.trace("Attempting to login user: " + username + " using password: "+ config.getPassword());  }  login=client.login(username,config.getPassword());} else {  LOG.trace("Attempting to login anonymous");  login=client.login("anonymous",null);} @AT@ 3250 @LENGTH@ 314
---UPD Block@@ThenBody:{  LOG.trace("Attempting to login user: " + username);  login=client.login(username,config.getPassword());} @TO@ ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("Attempting to login user: " + username + " using password: "+ config.getPassword());  }  login=client.login(username,config.getPassword());} @AT@ 3272 @LENGTH@ 153
------UPD ExpressionStatement@@MethodInvocation:LOG.trace("Attempting to login user: " + username) @TO@ MethodInvocation:LOG.trace("Attempting to login user: " + username + " using password: "+ config.getPassword()) @AT@ 3290 @LENGTH@ 51
------INS IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Attempting to login user: " + username + " using password: "+ config.getPassword());} @TO@ Block@@ThenBody:{  LOG.trace("Attempting to login user: " + username);  login=client.login(username,config.getPassword());} @AT@ 3340 @LENGTH@ 162
---------INS MethodInvocation@@LOG.isTraceEnabled() @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Attempting to login user: " + username + " using password: "+ config.getPassword());} @AT@ 3344 @LENGTH@ 20
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 3344 @LENGTH@ 3
------------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 3348 @LENGTH@ 16
---------INS Block@@ThenBody:{  LOG.trace("Attempting to login user: " + username + " using password: "+ config.getPassword());} @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Attempting to login user: " + username + " using password: "+ config.getPassword());} @AT@ 3366 @LENGTH@ 136
------------MOV ExpressionStatement@@MethodInvocation:LOG.trace("Attempting to login user: " + username) @TO@ Block@@ThenBody:{  LOG.trace("Attempting to login user: " + username + " using password: "+ config.getPassword());} @AT@ 3290 @LENGTH@ 51
---------------UPD MethodInvocation@@LOG.trace("Attempting to login user: " + username) @TO@ LOG.trace("Attempting to login user: " + username + " using password: "+ config.getPassword()) @AT@ 3290 @LENGTH@ 50
------------------UPD SimpleName@@MethodName:trace:["Attempting to login user: " + username] @TO@ MethodName:trace:["Attempting to login user: " + username + " using password: "+ config.getPassword()] @AT@ 3294 @LENGTH@ 46
---------------------UPD InfixExpression@@"Attempting to login user: " + username @TO@ "Attempting to login user: " + username + " using password: "+ config.getPassword() @AT@ 3300 @LENGTH@ 39
------------------------INS StringLiteral@@" using password: " @TO@ InfixExpression@@"Attempting to login user: " + username @AT@ 3440 @LENGTH@ 19
------------------------INS MethodInvocation@@config.getPassword() @TO@ InfixExpression@@"Attempting to login user: " + username @AT@ 3462 @LENGTH@ 20
---------------------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getPassword() @AT@ 3462 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:getPassword:[] @TO@ MethodInvocation@@config.getPassword() @AT@ 3469 @LENGTH@ 13
---UPD Block@@ElseBody:{  LOG.trace("Attempting to login anonymousl");  login=client.login("anonymous",null);} @TO@ ElseBody:{  LOG.trace("Attempting to login anonymous");  login=client.login("anonymous",null);} @AT@ 3431 @LENGTH@ 133
------UPD ExpressionStatement@@MethodInvocation:LOG.trace("Attempting to login anonymousl") @TO@ MethodInvocation:LOG.trace("Attempting to login anonymous") @AT@ 3449 @LENGTH@ 44
---------UPD MethodInvocation@@LOG.trace("Attempting to login anonymousl") @TO@ LOG.trace("Attempting to login anonymous") @AT@ 3449 @LENGTH@ 43
------------UPD SimpleName@@MethodName:trace:["Attempting to login anonymousl"] @TO@ MethodName:trace:["Attempting to login anonymous"] @AT@ 3453 @LENGTH@ 39
---------------UPD StringLiteral@@"Attempting to login anonymousl" @TO@ "Attempting to login anonymous" @AT@ 3459 @LENGTH@ 32


INS IfStatement@@if (template != null) {  template.stop();} @TO@ MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @AT@ 3692 @LENGTH@ 62
---INS InfixExpression@@template != null @TO@ IfStatement@@if (template != null) {  template.stop();} @AT@ 3696 @LENGTH@ 16
------INS SimpleName@@template @TO@ InfixExpression@@template != null @AT@ 3696 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@template != null @AT@ 3704 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@template != null @AT@ 3708 @LENGTH@ 4
---INS Block@@ThenBody:{  template.stop();} @TO@ IfStatement@@if (template != null) {  template.stop();} @AT@ 3714 @LENGTH@ 40
------MOV ExpressionStatement@@MethodInvocation:template.stop() @TO@ Block@@ThenBody:{  template.stop();} @AT@ 3692 @LENGTH@ 16


UPD VariableDeclarationStatement@@String name=endpoint.getConfiguration().getFile(); @TO@ String name=endpoint.getConfiguration().getDirectory(); @AT@ 2445 @LENGTH@ 52
---UPD VariableDeclarationFragment@@name=endpoint.getConfiguration().getFile() @TO@ name=endpoint.getConfiguration().getDirectory() @AT@ 2452 @LENGTH@ 44
------UPD MethodInvocation@@endpoint.getConfiguration().getFile() @TO@ endpoint.getConfiguration().getDirectory() @AT@ 2459 @LENGTH@ 37
---------UPD SimpleName@@MethodName:getFile:[] @TO@ MethodName:getDirectory:[] @AT@ 2487 @LENGTH@ 9


UPD MethodDeclaration@@public, static, GenericFileProcessStrategy, MethodName:createGenericFileProcessStrategy, Map<String,Object> params,  @TO@ public, static, GenericFileProcessStrategy, MethodName:createGenericFileProcessStrategy, CamelContext context, Map<String,Object> params,  @AT@ 1254 @LENGTH@ 2029
---INS SingleVariableDeclaration@@CamelContext context @TO@ MethodDeclaration@@public, static, GenericFileProcessStrategy, MethodName:createGenericFileProcessStrategy, Map<String,Object> params,  @AT@ 1366 @LENGTH@ 20
------INS SimpleType@@CamelContext @TO@ SingleVariableDeclaration@@CamelContext context @AT@ 1366 @LENGTH@ 12
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@CamelContext context @AT@ 1379 @LENGTH@ 7


UPD IfStatement@@if (aceIndex > this.aces.size()) {  throw new NotFoundException("aceIndex must correctly refer to an index of the AccessControlEntry collection");} @TO@ if (aceIndex >= this.aces.size()) {  throw new NotFoundException("aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " + aces.size() + ", index was "+ aceIndex);} @AT@ 5765 @LENGTH@ 167
---UPD InfixExpression@@aceIndex > this.aces.size() @TO@ aceIndex >= this.aces.size() @AT@ 5769 @LENGTH@ 27
------UPD Operator@@> @TO@ >= @AT@ 5777 @LENGTH@ 1
---UPD Block@@ThenBody:{  throw new NotFoundException("aceIndex must correctly refer to an index of the AccessControlEntry collection");} @TO@ ThenBody:{  throw new NotFoundException("aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " + aces.size() + ", index was "+ aceIndex);} @AT@ 5798 @LENGTH@ 134
------UPD ThrowStatement@@ClassInstanceCreation:new NotFoundException("aceIndex must correctly refer to an index of the AccessControlEntry collection") @TO@ ClassInstanceCreation:new NotFoundException("aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " + aces.size() + ", index was "+ aceIndex) @AT@ 5812 @LENGTH@ 110
---------UPD ClassInstanceCreation@@NotFoundException["aceIndex must correctly refer to an index of the AccessControlEntry collection"] @TO@ NotFoundException["aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " + aces.size() + ", index was "+ aceIndex] @AT@ 5818 @LENGTH@ 103
------------DEL StringLiteral@@"aceIndex must correctly refer to an index of the AccessControlEntry collection" @AT@ 5840 @LENGTH@ 80
------------INS InfixExpression@@"aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " + aces.size() + ", index was "+ aceIndex @TO@ ClassInstanceCreation@@NotFoundException["aceIndex must correctly refer to an index of the AccessControlEntry collection"] @AT@ 5841 @LENGTH@ 146
---------------INS InfixExpression@@"aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " @TO@ InfixExpression@@"aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " + aces.size() + ", index was "+ aceIndex @AT@ 5841 @LENGTH@ 104
------------------INS StringLiteral@@"aceIndex must refer to an index of the AccessControlEntry list. " @TO@ InfixExpression@@"aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " @AT@ 5841 @LENGTH@ 66
------------------INS Operator@@+ @TO@ InfixExpression@@"aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " @AT@ 5907 @LENGTH@ 1
------------------INS StringLiteral@@"List size is " @TO@ InfixExpression@@"aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " @AT@ 5930 @LENGTH@ 15
---------------INS Operator@@+ @TO@ InfixExpression@@"aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " + aces.size() + ", index was "+ aceIndex @AT@ 5945 @LENGTH@ 1
---------------INS MethodInvocation@@aces.size() @TO@ InfixExpression@@"aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " + aces.size() + ", index was "+ aceIndex @AT@ 5948 @LENGTH@ 11
------------------INS SimpleName@@Name:aces @TO@ MethodInvocation@@aces.size() @AT@ 5948 @LENGTH@ 4
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@aces.size() @AT@ 5953 @LENGTH@ 6
---------------INS StringLiteral@@", index was " @TO@ InfixExpression@@"aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " + aces.size() + ", index was "+ aceIndex @AT@ 5962 @LENGTH@ 14
---------------INS SimpleName@@aceIndex @TO@ InfixExpression@@"aceIndex must refer to an index of the AccessControlEntry list. " + "List size is " + aces.size() + ", index was "+ aceIndex @AT@ 5979 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:from(getFtpUrl() + "&sortBy=reverse:file:name.ext").to("mock:reverse") @TO@ MethodInvocation:from(getFtpUrl() + "&sortBy=reverse:file:ext").to("mock:reverse") @AT@ 2135 @LENGTH@ 71
---UPD MethodInvocation@@from(getFtpUrl() + "&sortBy=reverse:file:name.ext").to("mock:reverse") @TO@ from(getFtpUrl() + "&sortBy=reverse:file:ext").to("mock:reverse") @AT@ 2135 @LENGTH@ 70
------UPD MethodInvocation@@MethodName:from:[getFtpUrl() + "&sortBy=reverse:file:name.ext"] @TO@ MethodName:from:[getFtpUrl() + "&sortBy=reverse:file:ext"] @AT@ 2135 @LENGTH@ 51
---------UPD InfixExpression@@getFtpUrl() + "&sortBy=reverse:file:name.ext" @TO@ getFtpUrl() + "&sortBy=reverse:file:ext" @AT@ 2140 @LENGTH@ 45
------------UPD StringLiteral@@"&sortBy=reverse:file:name.ext" @TO@ "&sortBy=reverse:file:ext" @AT@ 2154 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:from("file:src/test/data?noop=true").to("mina:tcp://localhost:9123?sync=false") @TO@ MethodInvocation:from("file:src/test/data?noop=true").to("mina:tcp://localhost:9123?sync=false&lazySessionCreation=true") @AT@ 1547 @LENGTH@ 105
---UPD MethodInvocation@@from("file:src/test/data?noop=true").to("mina:tcp://localhost:9123?sync=false") @TO@ from("file:src/test/data?noop=true").to("mina:tcp://localhost:9123?sync=false&lazySessionCreation=true") @AT@ 1547 @LENGTH@ 104
------UPD SimpleName@@MethodName:to:["mina:tcp://localhost:9123?sync=false"] @TO@ MethodName:to:["mina:tcp://localhost:9123?sync=false&lazySessionCreation=true"] @AT@ 1609 @LENGTH@ 42
---------UPD StringLiteral@@"mina:tcp://localhost:9123?sync=false" @TO@ "mina:tcp://localhost:9123?sync=false&lazySessionCreation=true" @AT@ 1612 @LENGTH@ 38


INS MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @TO@ TypeDeclaration@@[public]PostgresPagingQueryProviderTests, AbstractSqlPagingQueryProviderTests @AT@ 1156 @LENGTH@ 254
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1156 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1163 @LENGTH@ 4
---INS SimpleName@@MethodName:testGenerateJumpToItemQueryForFirstPage @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1168 @LENGTH@ 39
---INS VariableDeclarationStatement@@String sql="SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0 1"; @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1214 @LENGTH@ 86
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sql="SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0 1"; @AT@ 1214 @LENGTH@ 6
------INS VariableDeclarationFragment@@sql="SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0 1" @TO@ VariableDeclarationStatement@@String sql="SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0 1"; @AT@ 1221 @LENGTH@ 78
---------INS SimpleName@@sql @TO@ VariableDeclarationFragment@@sql="SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0 1" @AT@ 1221 @LENGTH@ 3
---------INS StringLiteral@@"SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0 1" @TO@ VariableDeclarationFragment@@sql="SELECT id AS SORT_KEY FROM foo WHERE bar = 1 ORDER BY id ASC LIMIT 0 1" @AT@ 1227 @LENGTH@ 72
---INS VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1303 @LENGTH@ 69
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1303 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 1310 @LENGTH@ 61
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1310 @LENGTH@ 1
---------INS MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1314 @LENGTH@ 57
------------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1314 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 1334 @LENGTH@ 37
---------------INS NumberLiteral@@45 @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1358 @LENGTH@ 2
---------------INS SimpleName@@pageSize @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 1362 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForFirstPage,  @AT@ 1375 @LENGTH@ 32
------INS MethodInvocation@@Assert.assertEquals("",sql,s) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("",sql,s) @AT@ 1375 @LENGTH@ 31
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1375 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["", sql, s] @TO@ MethodInvocation@@Assert.assertEquals("",sql,s) @AT@ 1382 @LENGTH@ 24
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1395 @LENGTH@ 2
------------INS SimpleName@@sql @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1399 @LENGTH@ 3
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertEquals:["", sql, s] @AT@ 1404 @LENGTH@ 1


UPD FieldDeclaration@@private, StringBuffer, [buffer=new StringBuffer()] @TO@ private, final, StringBuffer, [buffer=new StringBuffer()] @AT@ 1014 @LENGTH@ 49
---INS Modifier@@final @TO@ FieldDeclaration@@private, StringBuffer, [buffer=new StringBuffer()] @AT@ 1022 @LENGTH@ 5


UPD MethodDeclaration@@public, synchronized, void, MethodName:mark, int idx,  @TO@ public, synchronized, void, MethodName:mark, int readlimit,  @AT@ 4442 @LENGTH@ 68
---UPD SingleVariableDeclaration@@int idx @TO@ int readlimit @AT@ 4472 @LENGTH@ 7
------UPD SimpleName@@idx @TO@ readlimit @AT@ 4476 @LENGTH@ 3
---UPD ExpressionStatement@@MethodInvocation:in.mark(idx) @TO@ MethodInvocation:in.mark(readlimit) @AT@ 4491 @LENGTH@ 13
------UPD MethodInvocation@@in.mark(idx) @TO@ in.mark(readlimit) @AT@ 4491 @LENGTH@ 12
---------UPD SimpleName@@MethodName:mark:[idx] @TO@ MethodName:mark:[readlimit] @AT@ 4494 @LENGTH@ 9
------------UPD SimpleName@@idx @TO@ readlimit @AT@ 4499 @LENGTH@ 3


UPD MethodDeclaration@@public, StreamSource, MethodName:toStreamSource, byte[] in, TransformerException,  @TO@ public, StreamSource, MethodName:toStreamSource, byte[] in, Exchange exchange, TransformerException,  @AT@ 9858 @LENGTH@ 206
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, StreamSource, MethodName:toStreamSource, byte[] in, TransformerException,  @AT@ 9843 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 9843 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 9852 @LENGTH@ 8
---UPD IfStatement@@if (in != null) {  return new StreamSource(IOConverter.toInputStream(in));} @TO@ if (in != null) {  InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in);  return new StreamSource(is);} @AT@ 9942 @LENGTH@ 95
------UPD Block@@ThenBody:{  return new StreamSource(IOConverter.toInputStream(in));} @TO@ ThenBody:{  InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in);  return new StreamSource(is);} @AT@ 9958 @LENGTH@ 79
---------INS VariableDeclarationStatement@@InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in); @TO@ Block@@ThenBody:{  return new StreamSource(IOConverter.toInputStream(in));} @AT@ 9930 @LENGTH@ 91
------------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in); @AT@ 9930 @LENGTH@ 11
------------INS VariableDeclarationFragment@@is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @TO@ VariableDeclarationStatement@@InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in); @AT@ 9942 @LENGTH@ 78
---------------INS SimpleName@@is @TO@ VariableDeclarationFragment@@is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @AT@ 9942 @LENGTH@ 2
---------------INS MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @TO@ VariableDeclarationFragment@@is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @AT@ 9947 @LENGTH@ 73
------------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @AT@ 9947 @LENGTH@ 40
------------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @AT@ 9947 @LENGTH@ 21
------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @AT@ 9947 @LENGTH@ 8
------------------INS SimpleName@@MethodName:convertTo:[InputStream.class, in] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,in) @AT@ 9988 @LENGTH@ 32
---------------------INS TypeLiteral@@InputStream.class @TO@ SimpleName@@MethodName:convertTo:[InputStream.class, in] @AT@ 9998 @LENGTH@ 17
---------------------INS SimpleName@@in @TO@ SimpleName@@MethodName:convertTo:[InputStream.class, in] @AT@ 10017 @LENGTH@ 2
---------UPD ReturnStatement@@ClassInstanceCreation:new StreamSource(IOConverter.toInputStream(in)) @TO@ ClassInstanceCreation:new StreamSource(is) @AT@ 9972 @LENGTH@ 55
------------UPD ClassInstanceCreation@@StreamSource[IOConverter.toInputStream(in)] @TO@ StreamSource[is] @AT@ 9979 @LENGTH@ 47
---------------DEL MethodInvocation@@IOConverter.toInputStream(in) @AT@ 9996 @LENGTH@ 29
------------------DEL SimpleName@@Name:IOConverter @AT@ 9996 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:toInputStream:[in] @AT@ 10008 @LENGTH@ 17
---------------------DEL SimpleName@@in @AT@ 10022 @LENGTH@ 2
---------------INS SimpleName@@is @TO@ ClassInstanceCreation@@StreamSource[IOConverter.toInputStream(in)] @AT@ 10058 @LENGTH@ 2


INS ExpressionStatement@@Assignment:offset=offset < 0 ? 0 : offset @TO@ MethodDeclaration@@public, String, MethodName:generateJumpToItemQuery, int itemIndex, int pageSize,  @AT@ 1542 @LENGTH@ 31
---INS Assignment@@offset=offset < 0 ? 0 : offset @TO@ ExpressionStatement@@Assignment:offset=offset < 0 ? 0 : offset @AT@ 1542 @LENGTH@ 30
------INS SimpleName@@offset @TO@ Assignment@@offset=offset < 0 ? 0 : offset @AT@ 1542 @LENGTH@ 6
------INS Operator@@= @TO@ Assignment@@offset=offset < 0 ? 0 : offset @AT@ 1548 @LENGTH@ 1
------INS ConditionalExpression@@offset < 0 ? 0 : offset @TO@ Assignment@@offset=offset < 0 ? 0 : offset @AT@ 1551 @LENGTH@ 21
---------INS InfixExpression@@offset < 0 @TO@ ConditionalExpression@@offset < 0 ? 0 : offset @AT@ 1551 @LENGTH@ 8
------------INS SimpleName@@offset @TO@ InfixExpression@@offset < 0 @AT@ 1551 @LENGTH@ 6
------------INS Operator@@< @TO@ InfixExpression@@offset < 0 @AT@ 1557 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@offset < 0 @AT@ 1558 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ ConditionalExpression@@offset < 0 ? 0 : offset @AT@ 1562 @LENGTH@ 1
---------INS SimpleName@@offset @TO@ ConditionalExpression@@offset < 0 ? 0 : offset @AT@ 1566 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"report.txt") @TO@ MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"report.txt") @AT@ 2523 @LENGTH@ 101
---UPD MethodInvocation@@template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"report.txt") @TO@ template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"report.txt") @AT@ 2523 @LENGTH@ 100
------UPD SimpleName@@MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", FileComponent.HEADER_FILE_NAME, "report.txt"] @TO@ MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", NewFileComponent.HEADER_FILE_NAME, "report.txt"] @AT@ 2532 @LENGTH@ 91
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2578 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2578 @LENGTH@ 13


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]InstanceMethodFallbackTypeConverter, [TypeConverter] @AT@ 2591 @LENGTH@ 113
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2591 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2602 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2604 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2623 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2623 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2623 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2629 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2632 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2638 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2638 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2645 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,null,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2662 @LENGTH@ 36
------INS MethodInvocation@@convertTo(type,null,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,null,value) @AT@ 2669 @LENGTH@ 28
---------INS SimpleName@@MethodName:convertTo:[type, null, value] @TO@ MethodInvocation@@convertTo(type,null,value) @AT@ 2669 @LENGTH@ 28
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2679 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2685 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2691 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=100").marshal().rss().to("mock:marshal") @TO@ MethodInvocation:from("rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=1000").marshal().rss().to("mock:marshal") @AT@ 2404 @LENGTH@ 114
---UPD MethodInvocation@@from("rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=100").marshal().rss().to("mock:marshal") @TO@ from("rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=1000").marshal().rss().to("mock:marshal") @AT@ 2404 @LENGTH@ 113
------UPD MethodInvocation@@MethodName:from:["rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=100"] @TO@ MethodName:from:["rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=1000"] @AT@ 2404 @LENGTH@ 78
---------UPD StringLiteral@@"rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=100" @TO@ "rss:file:src/test/data/rss20.xml?splitEntries=false&consumer.delay=1000" @AT@ 2409 @LENGTH@ 72


UPD ExpressionStatement@@MethodInvocation:assertEquals("Should get the header","greetMe",resultExchanges.get(0).getIn().getHeader("Operation")) @TO@ MethodInvocation:assertEquals("Should get the responise code",200,resultExchanges.get(0).getIn().getHeader(Exchange.HTTP_RESPONSE_CODE)) @AT@ 2594 @LENGTH@ 104
---UPD MethodInvocation@@assertEquals("Should get the header","greetMe",resultExchanges.get(0).getIn().getHeader("Operation")) @TO@ assertEquals("Should get the responise code",200,resultExchanges.get(0).getIn().getHeader(Exchange.HTTP_RESPONSE_CODE)) @AT@ 2594 @LENGTH@ 103
------UPD SimpleName@@MethodName:assertEquals:["Should get the header", "greetMe", resultExchanges.get(0).getIn().getHeader("Operation")] @TO@ MethodName:assertEquals:["Should get the responise code", 200, resultExchanges.get(0).getIn().getHeader(Exchange.HTTP_RESPONSE_CODE)] @AT@ 2594 @LENGTH@ 103
---------UPD StringLiteral@@"Should get the header" @TO@ "Should get the responise code" @AT@ 2607 @LENGTH@ 23
---------DEL StringLiteral@@"greetMe" @AT@ 2632 @LENGTH@ 9
---------UPD MethodInvocation@@resultExchanges.get(0).getIn().getHeader("Operation") @TO@ resultExchanges.get(0).getIn().getHeader(Exchange.HTTP_RESPONSE_CODE) @AT@ 2643 @LENGTH@ 53
------------UPD SimpleName@@MethodName:getHeader:["Operation"] @TO@ MethodName:getHeader:[Exchange.HTTP_RESPONSE_CODE] @AT@ 2674 @LENGTH@ 22
---------------DEL StringLiteral@@"Operation" @AT@ 2684 @LENGTH@ 11
---------------INS QualifiedName@@Exchange.HTTP_RESPONSE_CODE @TO@ SimpleName@@MethodName:getHeader:["Operation"] @AT@ 2694 @LENGTH@ 27
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_RESPONSE_CODE @AT@ 2694 @LENGTH@ 8
------------------INS SimpleName@@HTTP_RESPONSE_CODE @TO@ QualifiedName@@Exchange.HTTP_RESPONSE_CODE @AT@ 2703 @LENGTH@ 18
---------INS NumberLiteral@@200 @TO@ SimpleName@@MethodName:assertEquals:["Should get the header", "greetMe", resultExchanges.get(0).getIn().getHeader("Operation")] @AT@ 2648 @LENGTH@ 3


UPD ReturnStatement@@ParenthesizedExpression:("No type converter available to convert from type: " + (value != null ? value.getClass().getCanonicalName() : null) + " to the required type: "+ type.getCanonicalName()+ " with value "+ value) @TO@ InfixExpression:"No type converter available to convert from type: " + (value != null ? value.getClass().getCanonicalName() : null) + " to the required type: "+ type.getCanonicalName()+ " with value "+ value @AT@ 2097 @LENGTH@ 218
---DEL ParenthesizedExpression@@("No type converter available to convert from type: " + (value != null ? value.getClass().getCanonicalName() : null) + " to the required type: "+ type.getCanonicalName()+ " with value "+ value) @AT@ 2104 @LENGTH@ 210
---MOV InfixExpression@@"No type converter available to convert from type: " + (value != null ? value.getClass().getCanonicalName() : null) + " to the required type: "+ type.getCanonicalName()+ " with value "+ value @TO@ ReturnStatement@@ParenthesizedExpression:("No type converter available to convert from type: " + (value != null ? value.getClass().getCanonicalName() : null) + " to the required type: "+ type.getCanonicalName()+ " with value "+ value) @AT@ 2105 @LENGTH@ 208


UPD MethodDeclaration@@public, synchronized, Service, MethodName:acquireIfAbsent, Key key, Service service,  @TO@ public, synchronized, Service, MethodName:addAndAcquire, Key key, Service service,  @AT@ 1839 @LENGTH@ 465
---UPD SimpleName@@MethodName:acquireIfAbsent @TO@ MethodName:addAndAcquire @AT@ 1867 @LENGTH@ 15
---INS IfStatement@@if (entry.size() >= capacity) {  throw new IllegalStateException("Queue full");} @TO@ MethodDeclaration@@public, synchronized, Service, MethodName:acquireIfAbsent, Key key, Service service,  @AT@ 2269 @LENGTH@ 100
------INS InfixExpression@@entry.size() >= capacity @TO@ IfStatement@@if (entry.size() >= capacity) {  throw new IllegalStateException("Queue full");} @AT@ 2273 @LENGTH@ 24
---------INS MethodInvocation@@entry.size() @TO@ InfixExpression@@entry.size() >= capacity @AT@ 2273 @LENGTH@ 12
------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.size() @AT@ 2273 @LENGTH@ 5
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@entry.size() @AT@ 2279 @LENGTH@ 6
---------INS Operator@@>= @TO@ InfixExpression@@entry.size() >= capacity @AT@ 2285 @LENGTH@ 2
---------INS SimpleName@@capacity @TO@ InfixExpression@@entry.size() >= capacity @AT@ 2289 @LENGTH@ 8
------INS Block@@ThenBody:{  throw new IllegalStateException("Queue full");} @TO@ IfStatement@@if (entry.size() >= capacity) {  throw new IllegalStateException("Queue full");} @AT@ 2299 @LENGTH@ 70
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Queue full") @TO@ Block@@ThenBody:{  throw new IllegalStateException("Queue full");} @AT@ 2313 @LENGTH@ 46
------------INS ClassInstanceCreation@@IllegalStateException["Queue full"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Queue full") @AT@ 2319 @LENGTH@ 39
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["Queue full"] @AT@ 2319 @LENGTH@ 3
---------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["Queue full"] @AT@ 2323 @LENGTH@ 21
---------------INS StringLiteral@@"Queue full" @TO@ ClassInstanceCreation@@IllegalStateException["Queue full"] @AT@ 2345 @LENGTH@ 12


UPD Block@@ThenBody:{  if (log.isDebugEnabled()) {    log.debug(Exchange.FILE_NAME + " contains a FileLanguage expression: " + name);  }  expression=FileLanguage.file(name);} @TO@ ThenBody:{  if (log.isDebugEnabled()) {    log.debug(Exchange.FILE_NAME + " contains a FileLanguage expression: " + name);  }  Language language=getEndpoint().getCamelContext().resolveLanguage("file");  expression=language.createExpression(name);} @AT@ 6372 @LENGTH@ 231
---INS VariableDeclarationStatement@@Language language=getEndpoint().getCamelContext().resolveLanguage("file"); @TO@ Block@@ThenBody:{  if (log.isDebugEnabled()) {    log.debug(Exchange.FILE_NAME + " contains a FileLanguage expression: " + name);  }  expression=FileLanguage.file(name);} @AT@ 6536 @LENGTH@ 76
------INS SimpleType@@Language @TO@ VariableDeclarationStatement@@Language language=getEndpoint().getCamelContext().resolveLanguage("file"); @AT@ 6536 @LENGTH@ 8
------INS VariableDeclarationFragment@@language=getEndpoint().getCamelContext().resolveLanguage("file") @TO@ VariableDeclarationStatement@@Language language=getEndpoint().getCamelContext().resolveLanguage("file"); @AT@ 6545 @LENGTH@ 66
---------INS SimpleName@@language @TO@ VariableDeclarationFragment@@language=getEndpoint().getCamelContext().resolveLanguage("file") @AT@ 6545 @LENGTH@ 8
---------INS MethodInvocation@@getEndpoint().getCamelContext().resolveLanguage("file") @TO@ VariableDeclarationFragment@@language=getEndpoint().getCamelContext().resolveLanguage("file") @AT@ 6556 @LENGTH@ 55
------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getEndpoint().getCamelContext().resolveLanguage("file") @AT@ 6556 @LENGTH@ 31
------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().getCamelContext().resolveLanguage("file") @AT@ 6556 @LENGTH@ 13
------------INS SimpleName@@MethodName:resolveLanguage:["file"] @TO@ MethodInvocation@@getEndpoint().getCamelContext().resolveLanguage("file") @AT@ 6588 @LENGTH@ 23
---------------INS StringLiteral@@"file" @TO@ SimpleName@@MethodName:resolveLanguage:["file"] @AT@ 6604 @LENGTH@ 6
---UPD ExpressionStatement@@Assignment:expression=FileLanguage.file(name) @TO@ Assignment:expression=language.createExpression(name) @AT@ 6552 @LENGTH@ 37
------UPD Assignment@@expression=FileLanguage.file(name) @TO@ expression=language.createExpression(name) @AT@ 6552 @LENGTH@ 36
---------UPD MethodInvocation@@FileLanguage.file(name) @TO@ language.createExpression(name) @AT@ 6565 @LENGTH@ 23
------------UPD SimpleName@@Name:FileLanguage @TO@ Name:language @AT@ 6565 @LENGTH@ 12
------------UPD SimpleName@@MethodName:file:[name] @TO@ MethodName:createExpression:[name] @AT@ 6578 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(data,"data") @TO@ MethodDeclaration@@public, voidMethodName:BytesSource, byte[] data, String systemId,  @AT@ 1492 @LENGTH@ 35
---INS MethodInvocation@@ObjectHelper.notNull(data,"data") @TO@ ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(data,"data") @AT@ 1492 @LENGTH@ 34
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.notNull(data,"data") @AT@ 1492 @LENGTH@ 12
------INS SimpleName@@MethodName:notNull:[data, "data"] @TO@ MethodInvocation@@ObjectHelper.notNull(data,"data") @AT@ 1505 @LENGTH@ 21
---------INS SimpleName@@data @TO@ SimpleName@@MethodName:notNull:[data, "data"] @AT@ 1513 @LENGTH@ 4
---------INS StringLiteral@@"data" @TO@ SimpleName@@MethodName:notNull:[data, "data"] @AT@ 1519 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:getAttachments().putAll(that.getAttachments()) @TO@ MethodDeclaration@@public, void, MethodName:copyFrom, org.apache.camel.Message that,  @AT@ 2069 @LENGTH@ 47
---INS MethodInvocation@@getAttachments().putAll(that.getAttachments()) @TO@ ExpressionStatement@@MethodInvocation:getAttachments().putAll(that.getAttachments()) @AT@ 2069 @LENGTH@ 46
------INS MethodInvocation@@MethodName:getAttachments:[] @TO@ MethodInvocation@@getAttachments().putAll(that.getAttachments()) @AT@ 2069 @LENGTH@ 16
------INS SimpleName@@MethodName:putAll:[that.getAttachments()] @TO@ MethodInvocation@@getAttachments().putAll(that.getAttachments()) @AT@ 2086 @LENGTH@ 29
---------INS MethodInvocation@@that.getAttachments() @TO@ SimpleName@@MethodName:putAll:[that.getAttachments()] @AT@ 2093 @LENGTH@ 21
------------INS SimpleName@@Name:that @TO@ MethodInvocation@@that.getAttachments() @AT@ 2093 @LENGTH@ 4
------------INS SimpleName@@MethodName:getAttachments:[] @TO@ MethodInvocation@@that.getAttachments() @AT@ 2098 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:System.out.println(" Adding the fall back type converter" + typeConverter) @TO@ MethodInvocation:fallbackTypeConverters.add(typeConverter) @AT@ 1732 @LENGTH@ 75
---UPD MethodInvocation@@System.out.println(" Adding the fall back type converter" + typeConverter) @TO@ fallbackTypeConverters.add(typeConverter) @AT@ 1732 @LENGTH@ 74
------INS SimpleName@@Name:fallbackTypeConverters @TO@ MethodInvocation@@System.out.println(" Adding the fall back type converter" + typeConverter) @AT@ 1701 @LENGTH@ 22
------DEL QualifiedName@@Name:System.out @AT@ 1732 @LENGTH@ 10
------UPD SimpleName@@MethodName:println:[" Adding the fall back type converter" + typeConverter] @TO@ MethodName:add:[typeConverter] @AT@ 1743 @LENGTH@ 63
---------INS SimpleName@@typeConverter @TO@ SimpleName@@MethodName:println:[" Adding the fall back type converter" + typeConverter] @AT@ 1728 @LENGTH@ 13
---------DEL InfixExpression@@" Adding the fall back type converter" + typeConverter @AT@ 1751 @LENGTH@ 54
------------DEL StringLiteral@@" Adding the fall back type converter" @AT@ 1751 @LENGTH@ 38
------------DEL Operator@@+ @AT@ 1789 @LENGTH@ 1
------------DEL SimpleName@@typeConverter @AT@ 1792 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:LOG.info("Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped") @TO@ MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 24261 @LENGTH@ 87
---INS MethodInvocation@@LOG.info("Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped") @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped") @AT@ 24261 @LENGTH@ 86
------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped") @AT@ 24261 @LENGTH@ 3
------INS SimpleName@@MethodName:info:["Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped"] @TO@ MethodInvocation@@LOG.info("Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped") @AT@ 24265 @LENGTH@ 82
---------INS InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped" @TO@ SimpleName@@MethodName:info:["Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped"] @AT@ 24270 @LENGTH@ 76
------------INS StringLiteral@@"Apache Camel " @TO@ InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped" @AT@ 24270 @LENGTH@ 15
------------INS Operator@@+ @TO@ InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped" @AT@ 24285 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getVersion:[] @TO@ InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped" @AT@ 24288 @LENGTH@ 12
------------INS StringLiteral@@" (CamelContext:" @TO@ InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped" @AT@ 24303 @LENGTH@ 17
------------INS MethodInvocation@@MethodName:getName:[] @TO@ InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped" @AT@ 24323 @LENGTH@ 9
------------INS StringLiteral@@") stopped" @TO@ InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") stopped" @AT@ 24335 @LENGTH@ 11


INS MethodDeclaration@@public, voidMethodName:InvalidPayloadException, Exchange exchange, Class<?> type, Message message, Throwable cause,  @TO@ TypeDeclaration@@[public]InvalidPayloadException, CamelExchangeException @AT@ 1502 @LENGTH@ 361
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadException, Exchange exchange, Class<?> type, Message message, Throwable cause,  @AT@ 1502 @LENGTH@ 6
---INS SimpleName@@MethodName:InvalidPayloadException @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadException, Exchange exchange, Class<?> type, Message message, Throwable cause,  @AT@ 1509 @LENGTH@ 23
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadException, Exchange exchange, Class<?> type, Message message, Throwable cause,  @AT@ 1533 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1533 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1542 @LENGTH@ 8
---INS SingleVariableDeclaration@@Class<?> type @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadException, Exchange exchange, Class<?> type, Message message, Throwable cause,  @AT@ 1552 @LENGTH@ 13
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> type @AT@ 1552 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1552 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1558 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<?> type @AT@ 1561 @LENGTH@ 4
---INS SingleVariableDeclaration@@Message message @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadException, Exchange exchange, Class<?> type, Message message, Throwable cause,  @AT@ 1567 @LENGTH@ 15
------INS SimpleType@@Message @TO@ SingleVariableDeclaration@@Message message @AT@ 1567 @LENGTH@ 7
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@Message message @AT@ 1575 @LENGTH@ 7
---INS SingleVariableDeclaration@@Throwable cause @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadException, Exchange exchange, Class<?> type, Message message, Throwable cause,  @AT@ 1584 @LENGTH@ 15
------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable cause @AT@ 1584 @LENGTH@ 9
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@Throwable cause @AT@ 1594 @LENGTH@ 5
---INS SuperConstructorInvocation@@super("No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage(),exchange,cause);
 @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadException, Exchange exchange, Class<?> type, Message message, Throwable cause,  @AT@ 1611 @LENGTH@ 220
------INS InfixExpression@@"No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage() @TO@ SuperConstructorInvocation@@super("No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage(),exchange,cause);
 @AT@ 1617 @LENGTH@ 195
---------INS StringLiteral@@"No body available of type: " @TO@ InfixExpression@@"No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage() @AT@ 1617 @LENGTH@ 29
---------INS Operator@@+ @TO@ InfixExpression@@"No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage() @AT@ 1646 @LENGTH@ 1
---------INS MethodInvocation@@type.getName() @TO@ InfixExpression@@"No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage() @AT@ 1649 @LENGTH@ 14
------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getName() @AT@ 1649 @LENGTH@ 4
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@type.getName() @AT@ 1654 @LENGTH@ 9
---------INS MethodInvocation@@NoSuchPropertyException.valueDescription(message.getBody()) @TO@ InfixExpression@@"No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage() @AT@ 1680 @LENGTH@ 59
------------INS SimpleName@@Name:NoSuchPropertyException @TO@ MethodInvocation@@NoSuchPropertyException.valueDescription(message.getBody()) @AT@ 1680 @LENGTH@ 23
------------INS SimpleName@@MethodName:valueDescription:[message.getBody()] @TO@ MethodInvocation@@NoSuchPropertyException.valueDescription(message.getBody()) @AT@ 1704 @LENGTH@ 35
---------------INS MethodInvocation@@message.getBody() @TO@ SimpleName@@MethodName:valueDescription:[message.getBody()] @AT@ 1721 @LENGTH@ 17
------------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getBody() @AT@ 1721 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@message.getBody() @AT@ 1729 @LENGTH@ 9
---------INS StringLiteral@@" on: " @TO@ InfixExpression@@"No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage() @AT@ 1742 @LENGTH@ 7
---------INS SimpleName@@message @TO@ InfixExpression@@"No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage() @AT@ 1752 @LENGTH@ 7
---------INS StringLiteral@@". Caused by: " @TO@ InfixExpression@@"No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage() @AT@ 1776 @LENGTH@ 15
---------INS MethodInvocation@@cause.getMessage() @TO@ InfixExpression@@"No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage() @AT@ 1794 @LENGTH@ 18
------------INS SimpleName@@Name:cause @TO@ MethodInvocation@@cause.getMessage() @AT@ 1794 @LENGTH@ 5
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@cause.getMessage() @AT@ 1800 @LENGTH@ 12
------INS SimpleName@@exchange @TO@ SuperConstructorInvocation@@super("No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage(),exchange,cause);
 @AT@ 1814 @LENGTH@ 8
------INS SimpleName@@cause @TO@ SuperConstructorInvocation@@super("No body available of type: " + type.getName() + NoSuchPropertyException.valueDescription(message.getBody())+ " on: "+ message+ ". Caused by: "+ cause.getMessage(),exchange,cause);
 @AT@ 1824 @LENGTH@ 5
---INS ExpressionStatement@@Assignment:this.type=type @TO@ MethodDeclaration@@public, voidMethodName:InvalidPayloadException, Exchange exchange, Class<?> type, Message message, Throwable cause,  @AT@ 1840 @LENGTH@ 17
------INS Assignment@@this.type=type @TO@ ExpressionStatement@@Assignment:this.type=type @AT@ 1840 @LENGTH@ 16
---------INS FieldAccess@@this.type @TO@ Assignment@@this.type=type @AT@ 1840 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.type @AT@ 1840 @LENGTH@ 4
------------INS SimpleName@@type @TO@ FieldAccess@@this.type @AT@ 1845 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@this.type=type @AT@ 1849 @LENGTH@ 1
---------INS SimpleName@@type @TO@ Assignment@@this.type=type @AT@ 1852 @LENGTH@ 4


UPD ReturnStatement@@TypeLiteral:CxfEndpointBean.class @TO@ TypeLiteral:CxfSpringEndpointBean.class @AT@ 1853 @LENGTH@ 29
---UPD TypeLiteral@@CxfEndpointBean.class @TO@ CxfSpringEndpointBean.class @AT@ 1860 @LENGTH@ 21


INS FieldDeclaration@@protected, String, [crlf] @TO@ TypeDeclaration@@[public, abstract]BindyAbstractFactory, [BindyFactory] @AT@ 1662 @LENGTH@ 22
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, String, [crlf] @AT@ 1662 @LENGTH@ 9
---INS SimpleType@@String @TO@ FieldDeclaration@@protected, String, [crlf] @AT@ 1672 @LENGTH@ 6
---INS VariableDeclarationFragment@@crlf @TO@ FieldDeclaration@@protected, String, [crlf] @AT@ 1679 @LENGTH@ 4
------INS SimpleName@@crlf @TO@ VariableDeclarationFragment@@crlf @AT@ 1679 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:nameCRC32=nameCRC32 @TO@ Assignment:this.nameCRC32=nameCRC32 @AT@ 3169 @LENGTH@ 22
---UPD Assignment@@nameCRC32=nameCRC32 @TO@ this.nameCRC32=nameCRC32 @AT@ 3169 @LENGTH@ 21
------INS FieldAccess@@this.nameCRC32 @TO@ Assignment@@nameCRC32=nameCRC32 @AT@ 3169 @LENGTH@ 14
---------INS ThisExpression@@this @TO@ FieldAccess@@this.nameCRC32 @AT@ 3169 @LENGTH@ 4
---------INS SimpleName@@nameCRC32 @TO@ FieldAccess@@this.nameCRC32 @AT@ 3174 @LENGTH@ 9
------DEL SimpleName@@nameCRC32 @AT@ 3169 @LENGTH@ 9


UPD ReturnStatement@@InfixExpression:("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @TO@ InfixExpression:"Model : " + Order.class.getName() + " : "+ String.valueOf(this.getOrderNr())+ ", "+ String.valueOf(this.getAmount())+ ", "+ String.valueOf(this.getIsinCode())+ ", "+ String.valueOf(this.getInstrumentName())+ ", "+ String.valueOf(this.getCurrency())+ ", "+ String.valueOf(this.getClient())+ ","+ String.valueOf(this.getOrderDate()) @AT@ 2718 @LENGTH@ 284
---UPD InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @TO@ "Model : " + Order.class.getName() + " : "+ String.valueOf(this.getOrderNr())+ ", "+ String.valueOf(this.getAmount())+ ", "+ String.valueOf(this.getIsinCode())+ ", "+ String.valueOf(this.getInstrumentName())+ ", "+ String.valueOf(this.getCurrency())+ ", "+ String.valueOf(this.getClient())+ ","+ String.valueOf(this.getOrderDate()) @AT@ 2725 @LENGTH@ 276
------DEL ParenthesizedExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) @AT@ 2725 @LENGTH@ 207
---------DEL InfixExpression@@"Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency() @AT@ 2726 @LENGTH@ 205
------------DEL MethodInvocation@@this.getOrderNr() @AT@ 2771 @LENGTH@ 17
------------DEL MethodInvocation@@this.getAmount().toString() @AT@ 2798 @LENGTH@ 27
---------------DEL MethodInvocation@@MethodName:getAmount:[] @AT@ 2798 @LENGTH@ 16
------------DEL MethodInvocation@@this.getIsinCode() @AT@ 2835 @LENGTH@ 18
------------DEL MethodInvocation@@this.getInstrumentName() @AT@ 2879 @LENGTH@ 24
------------DEL MethodInvocation@@this.getCurrency() @AT@ 2913 @LENGTH@ 18
------MOV StringLiteral@@"Model : " @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 2726 @LENGTH@ 10
------MOV Operator@@+ @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 2736 @LENGTH@ 1
------MOV MethodInvocation@@Order.class.getName() @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 2739 @LENGTH@ 21
------MOV StringLiteral@@" : " @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 2763 @LENGTH@ 5
------INS MethodInvocation@@String.valueOf(this.getOrderNr()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 2783 @LENGTH@ 33
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getOrderNr()) @AT@ 2783 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getOrderNr()] @TO@ MethodInvocation@@String.valueOf(this.getOrderNr()) @AT@ 2790 @LENGTH@ 26
------------INS MethodInvocation@@this.getOrderNr() @TO@ SimpleName@@MethodName:valueOf:[this.getOrderNr()] @AT@ 2798 @LENGTH@ 17
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getOrderNr() @AT@ 2771 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getOrderNr:[] @TO@ MethodInvocation@@this.getOrderNr() @AT@ 2776 @LENGTH@ 12
------MOV StringLiteral@@", " @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 2791 @LENGTH@ 4
------MOV StringLiteral@@", " @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 2828 @LENGTH@ 4
------INS MethodInvocation@@String.valueOf(this.getAmount()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 2839 @LENGTH@ 32
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getAmount()) @AT@ 2839 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getAmount()] @TO@ MethodInvocation@@String.valueOf(this.getAmount()) @AT@ 2846 @LENGTH@ 25
------------INS MethodInvocation@@this.getAmount() @TO@ SimpleName@@MethodName:valueOf:[this.getAmount()] @AT@ 2854 @LENGTH@ 16
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getAmount() @AT@ 2798 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@this.getAmount() @AT@ 2815 @LENGTH@ 10
------MOV StringLiteral@@", " @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 2856 @LENGTH@ 4
------INS MethodInvocation@@String.valueOf(this.getIsinCode()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 2894 @LENGTH@ 34
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getIsinCode()) @AT@ 2894 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getIsinCode()] @TO@ MethodInvocation@@String.valueOf(this.getIsinCode()) @AT@ 2901 @LENGTH@ 27
------------INS MethodInvocation@@this.getIsinCode() @TO@ SimpleName@@MethodName:valueOf:[this.getIsinCode()] @AT@ 2909 @LENGTH@ 18
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getIsinCode() @AT@ 2835 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getIsinCode:[] @TO@ MethodInvocation@@this.getIsinCode() @AT@ 2840 @LENGTH@ 13
------MOV StringLiteral@@", " @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 2906 @LENGTH@ 4
------DEL Operator@@+ @AT@ 2932 @LENGTH@ 1
------INS MethodInvocation@@String.valueOf(this.getInstrumentName()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 2951 @LENGTH@ 40
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getInstrumentName()) @AT@ 2951 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getInstrumentName()] @TO@ MethodInvocation@@String.valueOf(this.getInstrumentName()) @AT@ 2958 @LENGTH@ 33
------------INS MethodInvocation@@this.getInstrumentName() @TO@ SimpleName@@MethodName:valueOf:[this.getInstrumentName()] @AT@ 2966 @LENGTH@ 24
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getInstrumentName() @AT@ 2879 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getInstrumentName:[] @TO@ MethodInvocation@@this.getInstrumentName() @AT@ 2884 @LENGTH@ 19
------DEL MethodInvocation@@this.getClient() @AT@ 2957 @LENGTH@ 16
------DEL MethodInvocation@@this.getOrderDate() @AT@ 2982 @LENGTH@ 19
------INS MethodInvocation@@String.valueOf(this.getCurrency()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 3014 @LENGTH@ 34
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getCurrency()) @AT@ 3014 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getCurrency()] @TO@ MethodInvocation@@String.valueOf(this.getCurrency()) @AT@ 3021 @LENGTH@ 27
------------INS MethodInvocation@@this.getCurrency() @TO@ SimpleName@@MethodName:valueOf:[this.getCurrency()] @AT@ 3029 @LENGTH@ 18
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getCurrency() @AT@ 2913 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getCurrency:[] @TO@ MethodInvocation@@this.getCurrency() @AT@ 2918 @LENGTH@ 13
------INS MethodInvocation@@String.valueOf(this.getClient()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 3071 @LENGTH@ 32
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getClient()) @AT@ 3071 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getClient()] @TO@ MethodInvocation@@String.valueOf(this.getClient()) @AT@ 3078 @LENGTH@ 25
------------INS MethodInvocation@@this.getClient() @TO@ SimpleName@@MethodName:valueOf:[this.getClient()] @AT@ 3086 @LENGTH@ 16
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getClient() @AT@ 2957 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getClient:[] @TO@ MethodInvocation@@this.getClient() @AT@ 2962 @LENGTH@ 11
------INS MethodInvocation@@String.valueOf(this.getOrderDate()) @TO@ InfixExpression@@("Model : " + Order.class.getName() + " : "+ this.getOrderNr()+ ", "+ this.getAmount().toString()+ ", "+ this.getIsinCode()+ ", "+ this.getInstrumentName()+ ", "+ this.getCurrency()) + ", " + this.getClient()+ ","+ this.getOrderDate() @AT@ 3125 @LENGTH@ 35
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(this.getOrderDate()) @AT@ 3125 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[this.getOrderDate()] @TO@ MethodInvocation@@String.valueOf(this.getOrderDate()) @AT@ 3132 @LENGTH@ 28
------------INS MethodInvocation@@this.getOrderDate() @TO@ SimpleName@@MethodName:valueOf:[this.getOrderDate()] @AT@ 3140 @LENGTH@ 19
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getOrderDate() @AT@ 2982 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getOrderDate:[] @TO@ MethodInvocation@@this.getOrderDate() @AT@ 2987 @LENGTH@ 14


INS IfStatement@@if (ObjectHelper.isEmpty(path)) {  path=".";} @TO@ MethodDeclaration@@public, List, MethodName:listFiles, String path, RemoteFileOperationFailedException,  @AT@ 9476 @LENGTH@ 130
---INS MethodInvocation@@ObjectHelper.isEmpty(path) @TO@ IfStatement@@if (ObjectHelper.isEmpty(path)) {  path=".";} @AT@ 9480 @LENGTH@ 26
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(path) @AT@ 9480 @LENGTH@ 12
------INS SimpleName@@MethodName:isEmpty:[path] @TO@ MethodInvocation@@ObjectHelper.isEmpty(path) @AT@ 9493 @LENGTH@ 13
---------INS SimpleName@@path @TO@ SimpleName@@MethodName:isEmpty:[path] @AT@ 9501 @LENGTH@ 4
---INS Block@@ThenBody:{  path=".";} @TO@ IfStatement@@if (ObjectHelper.isEmpty(path)) {  path=".";} @AT@ 9508 @LENGTH@ 98
------INS ExpressionStatement@@Assignment:path="." @TO@ Block@@ThenBody:{  path=".";} @AT@ 9585 @LENGTH@ 11
---------INS Assignment@@path="." @TO@ ExpressionStatement@@Assignment:path="." @AT@ 9585 @LENGTH@ 10
------------INS SimpleName@@path @TO@ Assignment@@path="." @AT@ 9585 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@path="." @AT@ 9589 @LENGTH@ 1
------------INS StringLiteral@@"." @TO@ Assignment@@path="." @AT@ 9592 @LENGTH@ 3


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[private]MyLocalDateTimeConverter, [TypeConverter] @AT@ 2717 @LENGTH@ 115
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2717 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2728 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2730 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2749 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2749 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2749 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2755 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2758 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2764 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2764 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2771 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2792 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 2799 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 2799 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2809 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2815 @LENGTH@ 5


INS IfStatement@@if (!dataObjectType.isAssignableFrom(String.class) && !dataObjectType.isAssignableFrom(Node.class)) {  throw new IllegalArgumentException("TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object");} @TO@ MethodDeclaration@@public, voidMethodName:TidyMarkupDataFormat, Class<?> dataObjectType,  @AT@ 1654 @LENGTH@ 245
---MOV InfixExpression@@dataObjectType.isAssignableFrom(String.class) || dataObjectType.isAssignableFrom(Node.class) @TO@ IfStatement@@if (!dataObjectType.isAssignableFrom(String.class) && !dataObjectType.isAssignableFrom(Node.class)) {  throw new IllegalArgumentException("TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object");} @AT@ 1661 @LENGTH@ 92
------INS PrefixExpression@@!dataObjectType.isAssignableFrom(String.class) @TO@ InfixExpression@@dataObjectType.isAssignableFrom(String.class) || dataObjectType.isAssignableFrom(Node.class) @AT@ 1658 @LENGTH@ 46
---------INS Operator@@! @TO@ PrefixExpression@@!dataObjectType.isAssignableFrom(String.class) @AT@ 1658 @LENGTH@ 1
---------MOV MethodInvocation@@dataObjectType.isAssignableFrom(String.class) @TO@ PrefixExpression@@!dataObjectType.isAssignableFrom(String.class) @AT@ 1661 @LENGTH@ 45
------INS Operator@@&& @TO@ InfixExpression@@dataObjectType.isAssignableFrom(String.class) || dataObjectType.isAssignableFrom(Node.class) @AT@ 1704 @LENGTH@ 2
------INS PrefixExpression@@!dataObjectType.isAssignableFrom(Node.class) @TO@ InfixExpression@@dataObjectType.isAssignableFrom(String.class) || dataObjectType.isAssignableFrom(Node.class) @AT@ 1708 @LENGTH@ 44
---------INS Operator@@! @TO@ PrefixExpression@@!dataObjectType.isAssignableFrom(Node.class) @AT@ 1708 @LENGTH@ 1
---------MOV MethodInvocation@@dataObjectType.isAssignableFrom(Node.class) @TO@ PrefixExpression@@!dataObjectType.isAssignableFrom(Node.class) @AT@ 1710 @LENGTH@ 43
---INS Block@@ThenBody:{  throw new IllegalArgumentException("TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object");} @TO@ IfStatement@@if (!dataObjectType.isAssignableFrom(String.class) && !dataObjectType.isAssignableFrom(Node.class)) {  throw new IllegalArgumentException("TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object");} @AT@ 1754 @LENGTH@ 145
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object");} @AT@ 1768 @LENGTH@ 121
---------INS ClassInstanceCreation@@IllegalArgumentException["TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object") @AT@ 1774 @LENGTH@ 114
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object"] @AT@ 1774 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object"] @AT@ 1778 @LENGTH@ 24
------------INS StringLiteral@@"TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object" @TO@ ClassInstanceCreation@@IllegalArgumentException["TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object"] @AT@ 1803 @LENGTH@ 84


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Add InstrumentationProcessor to first input only.") @TO@ MethodInvocation:LOG.warn("Addding InstrumentationProcessor to first input only.") @AT@ 8043 @LENGTH@ 62
---UPD MethodInvocation@@LOG.warn("Add InstrumentationProcessor to first input only.") @TO@ LOG.warn("Addding InstrumentationProcessor to first input only.") @AT@ 8043 @LENGTH@ 61
------UPD SimpleName@@MethodName:warn:["Add InstrumentationProcessor to first input only."] @TO@ MethodName:warn:["Addding InstrumentationProcessor to first input only."] @AT@ 8047 @LENGTH@ 57
---------UPD StringLiteral@@"Add InstrumentationProcessor to first input only." @TO@ "Addding InstrumentationProcessor to first input only." @AT@ 8052 @LENGTH@ 51


UPD TryStatement@@try {  if (reporter != null) {    reporter.process(exchange);  }  performAssertions(exchange);} catch (Exception e) {  failures.add(e);} @TO@ try {  if (reporter != null) {    reporter.process(exchange);  }  performAssertions(exchange);} catch (Throwable e) {  failures.add(e);} finally {  if (latch != null) {    latch.countDown();  }} @AT@ 25906 @LENGTH@ 212
---UPD CatchClause@@catch (Exception e) {  failures.add(e);} @TO@ catch (Throwable e) {  failures.add(e);} @AT@ 26058 @LENGTH@ 60
------UPD SingleVariableDeclaration@@Exception e @TO@ Throwable e @AT@ 26065 @LENGTH@ 11
---------UPD SimpleType@@Exception @TO@ Throwable @AT@ 26065 @LENGTH@ 9
---INS Block@@FinallyBody:{  if (latch != null) {    latch.countDown();  }} @TO@ TryStatement@@try {  if (reporter != null) {    reporter.process(exchange);  }  performAssertions(exchange);} catch (Exception e) {  failures.add(e);} @AT@ 26208 @LENGTH@ 170
------MOV IfStatement@@if (latch != null) {  latch.countDown();} @TO@ Block@@FinallyBody:{  if (latch != null) {    latch.countDown();  }} @AT@ 26127 @LENGTH@ 61


UPD Block@@ElseBody:{  getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFilePath());} @TO@ ElseBody:{  String path=file.normalizePathToProtocol(file.getEndpointPath() + File.separator + file.getRelativeFilePath());  getIn().setHeader("CamelFilePath",path);} @AT@ 2533 @LENGTH@ 137
---UPD ExpressionStatement@@MethodInvocation:getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFilePath()) @TO@ MethodInvocation:getIn().setHeader("CamelFilePath",path) @AT@ 2551 @LENGTH@ 105
------UPD MethodInvocation@@getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFilePath()) @TO@ file.normalizePathToProtocol(file.getEndpointPath() + File.separator + file.getRelativeFilePath()) @AT@ 2551 @LENGTH@ 104
------INS MethodInvocation@@getIn().setHeader("CamelFilePath",path) @TO@ ExpressionStatement@@MethodInvocation:getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFilePath()) @AT@ 2768 @LENGTH@ 40
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@getIn().setHeader("CamelFilePath",path) @AT@ 2768 @LENGTH@ 7
---------INS SimpleName@@MethodName:setHeader:["CamelFilePath", path] @TO@ MethodInvocation@@getIn().setHeader("CamelFilePath",path) @AT@ 2776 @LENGTH@ 32
------------INS StringLiteral@@"CamelFilePath" @TO@ SimpleName@@MethodName:setHeader:["CamelFilePath", path] @AT@ 2786 @LENGTH@ 15
------------INS SimpleName@@path @TO@ SimpleName@@MethodName:setHeader:["CamelFilePath", path] @AT@ 2803 @LENGTH@ 4
---INS VariableDeclarationStatement@@String path=file.normalizePathToProtocol(file.getEndpointPath() + File.separator + file.getRelativeFilePath()); @TO@ Block@@ElseBody:{  getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFilePath());} @AT@ 2638 @LENGTH@ 113
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String path=file.normalizePathToProtocol(file.getEndpointPath() + File.separator + file.getRelativeFilePath()); @AT@ 2638 @LENGTH@ 6
------INS VariableDeclarationFragment@@path=file.normalizePathToProtocol(file.getEndpointPath() + File.separator + file.getRelativeFilePath()) @TO@ VariableDeclarationStatement@@String path=file.normalizePathToProtocol(file.getEndpointPath() + File.separator + file.getRelativeFilePath()); @AT@ 2645 @LENGTH@ 105
---------MOV MethodInvocation@@getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFilePath()) @TO@ VariableDeclarationFragment@@path=file.normalizePathToProtocol(file.getEndpointPath() + File.separator + file.getRelativeFilePath()) @AT@ 2551 @LENGTH@ 104
------------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 2551 @LENGTH@ 7
------------UPD SimpleName@@MethodName:setHeader:["CamelFilePath", file.getEndpointPath() + File.separator + file.getRelativeFilePath()] @TO@ MethodName:normalizePathToProtocol:[file.getEndpointPath() + File.separator + file.getRelativeFilePath()] @AT@ 2559 @LENGTH@ 96
---------------DEL StringLiteral@@"CamelFilePath" @AT@ 2569 @LENGTH@ 15
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFilePath()) @AT@ 2652 @LENGTH@ 4
---------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=file.normalizePathToProtocol(file.getEndpointPath() + File.separator + file.getRelativeFilePath()) @AT@ 2645 @LENGTH@ 4


UPD FieldDeclaration@@private, Processor, [processor] @TO@ private, final, Processor, [processor] @AT@ 1376 @LENGTH@ 28
---INS Modifier@@final @TO@ FieldDeclaration@@private, Processor, [processor] @AT@ 1356 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testNoConversionForStreamCache, Exception,  @TO@ TypeDeclaration@@[public]JAXBConvertTest, TestCase @AT@ 2750 @LENGTH@ 374
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNoConversionForStreamCache, Exception,  @AT@ 2750 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNoConversionForStreamCache, Exception,  @AT@ 2757 @LENGTH@ 4
---INS SimpleName@@MethodName:testNoConversionForStreamCache @TO@ MethodDeclaration@@public, void, MethodName:testNoConversionForStreamCache, Exception,  @AT@ 2762 @LENGTH@ 30
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNoConversionForStreamCache, Exception,  @AT@ 2802 @LENGTH@ 9
---INS VariableDeclarationStatement@@PurchaseOrder order=new PurchaseOrder(); @TO@ MethodDeclaration@@public, void, MethodName:testNoConversionForStreamCache, Exception,  @AT@ 2822 @LENGTH@ 42
------INS SimpleType@@PurchaseOrder @TO@ VariableDeclarationStatement@@PurchaseOrder order=new PurchaseOrder(); @AT@ 2822 @LENGTH@ 13
------INS VariableDeclarationFragment@@order=new PurchaseOrder() @TO@ VariableDeclarationStatement@@PurchaseOrder order=new PurchaseOrder(); @AT@ 2836 @LENGTH@ 27
---------INS SimpleName@@order @TO@ VariableDeclarationFragment@@order=new PurchaseOrder() @AT@ 2836 @LENGTH@ 5
---------INS ClassInstanceCreation@@PurchaseOrder[] @TO@ VariableDeclarationFragment@@order=new PurchaseOrder() @AT@ 2844 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@PurchaseOrder[] @AT@ 2844 @LENGTH@ 3
------------INS SimpleType@@PurchaseOrder @TO@ ClassInstanceCreation@@PurchaseOrder[] @AT@ 2848 @LENGTH@ 13
---INS TryStatement@@try {  converter.convertTo(StreamCache.class,order);  fail("We should not use the JAXB FallbackTypeConverter for stream caching");} catch (NoTypeConversionAvailableException e) {} @TO@ MethodDeclaration@@public, void, MethodName:testNoConversionForStreamCache, Exception,  @AT@ 2873 @LENGTH@ 245
------INS ExpressionStatement@@MethodInvocation:converter.convertTo(StreamCache.class,order) @TO@ TryStatement@@try {  converter.convertTo(StreamCache.class,order);  fail("We should not use the JAXB FallbackTypeConverter for stream caching");} catch (NoTypeConversionAvailableException e) {} @AT@ 2891 @LENGTH@ 46
---------INS MethodInvocation@@converter.convertTo(StreamCache.class,order) @TO@ ExpressionStatement@@MethodInvocation:converter.convertTo(StreamCache.class,order) @AT@ 2891 @LENGTH@ 45
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.convertTo(StreamCache.class,order) @AT@ 2891 @LENGTH@ 9
------------INS SimpleName@@MethodName:convertTo:[StreamCache.class, order] @TO@ MethodInvocation@@converter.convertTo(StreamCache.class,order) @AT@ 2901 @LENGTH@ 35
---------------INS TypeLiteral@@StreamCache.class @TO@ SimpleName@@MethodName:convertTo:[StreamCache.class, order] @AT@ 2911 @LENGTH@ 17
---------------INS SimpleName@@order @TO@ SimpleName@@MethodName:convertTo:[StreamCache.class, order] @AT@ 2930 @LENGTH@ 5
------INS ExpressionStatement@@MethodInvocation:fail("We should not use the JAXB FallbackTypeConverter for stream caching") @TO@ TryStatement@@try {  converter.convertTo(StreamCache.class,order);  fail("We should not use the JAXB FallbackTypeConverter for stream caching");} catch (NoTypeConversionAvailableException e) {} @AT@ 2950 @LENGTH@ 76
---------INS MethodInvocation@@fail("We should not use the JAXB FallbackTypeConverter for stream caching") @TO@ ExpressionStatement@@MethodInvocation:fail("We should not use the JAXB FallbackTypeConverter for stream caching") @AT@ 2950 @LENGTH@ 75
------------INS SimpleName@@MethodName:fail:["We should not use the JAXB FallbackTypeConverter for stream caching"] @TO@ MethodInvocation@@fail("We should not use the JAXB FallbackTypeConverter for stream caching") @AT@ 2950 @LENGTH@ 75
---------------INS StringLiteral@@"We should not use the JAXB FallbackTypeConverter for stream caching" @TO@ SimpleName@@MethodName:fail:["We should not use the JAXB FallbackTypeConverter for stream caching"] @AT@ 2955 @LENGTH@ 69
------INS CatchClause@@catch (NoTypeConversionAvailableException e) {} @TO@ TryStatement@@try {  converter.convertTo(StreamCache.class,order);  fail("We should not use the JAXB FallbackTypeConverter for stream caching");} catch (NoTypeConversionAvailableException e) {} @AT@ 3037 @LENGTH@ 81
---------INS SingleVariableDeclaration@@NoTypeConversionAvailableException e @TO@ CatchClause@@catch (NoTypeConversionAvailableException e) {} @AT@ 3044 @LENGTH@ 36
------------INS SimpleType@@NoTypeConversionAvailableException @TO@ SingleVariableDeclaration@@NoTypeConversionAvailableException e @AT@ 3044 @LENGTH@ 34
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NoTypeConversionAvailableException e @AT@ 3079 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:queue.add(exchange.copy()) @TO@ MethodInvocation:queue.add(exchange.newCopy()) @AT@ 1562 @LENGTH@ 27
---UPD MethodInvocation@@queue.add(exchange.copy()) @TO@ queue.add(exchange.newCopy()) @AT@ 1562 @LENGTH@ 26
------UPD SimpleName@@MethodName:add:[exchange.copy()] @TO@ MethodName:add:[exchange.newCopy()] @AT@ 1568 @LENGTH@ 20
---------UPD MethodInvocation@@exchange.copy() @TO@ exchange.newCopy() @AT@ 1572 @LENGTH@ 15
------------UPD SimpleName@@MethodName:copy:[] @TO@ MethodName:newCopy:[] @AT@ 1581 @LENGTH@ 6


UPD IfStatement@@if (token.getDate().getTime() + getTokenValiditySeconds() * 1000 < System.currentTimeMillis()) {  throw new RememberMeAuthenticationException("Remember-me login has expired");} @TO@ if (token.getDate().getTime() + getTokenValiditySeconds() * 1000L < System.currentTimeMillis()) {  throw new RememberMeAuthenticationException("Remember-me login has expired");} @AT@ 4478 @LENGTH@ 194
---UPD InfixExpression@@token.getDate().getTime() + getTokenValiditySeconds() * 1000 < System.currentTimeMillis() @TO@ token.getDate().getTime() + getTokenValiditySeconds() * 1000L < System.currentTimeMillis() @AT@ 4482 @LENGTH@ 87
------UPD InfixExpression@@token.getDate().getTime() + getTokenValiditySeconds() * 1000 @TO@ token.getDate().getTime() + getTokenValiditySeconds() * 1000L @AT@ 4482 @LENGTH@ 58
---------UPD InfixExpression@@getTokenValiditySeconds() * 1000 @TO@ getTokenValiditySeconds() * 1000L @AT@ 4510 @LENGTH@ 30
------------UPD NumberLiteral@@1000 @TO@ 1000L @AT@ 4536 @LENGTH@ 4


INS TryStatement@@try {  log.debug("tearDown test: " + getName());  template.stop();  stopCamelContext();} catch (Exception e) {  log.debug("tearDown ignored exception while stopping: " + e.getMessage());} @TO@ MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @AT@ 3117 @LENGTH@ 332
---MOV ExpressionStatement@@MethodInvocation:log.debug("tearDown test: " + getName()) @TO@ TryStatement@@try {  log.debug("tearDown test: " + getName());  template.stop();  stopCamelContext();} catch (Exception e) {  log.debug("tearDown ignored exception while stopping: " + e.getMessage());} @AT@ 3117 @LENGTH@ 41
---MOV ExpressionStatement@@MethodInvocation:template.stop() @TO@ TryStatement@@try {  log.debug("tearDown test: " + getName());  template.stop();  stopCamelContext();} catch (Exception e) {  log.debug("tearDown ignored exception while stopping: " + e.getMessage());} @AT@ 3167 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:stopCamelContext() @TO@ TryStatement@@try {  log.debug("tearDown test: " + getName());  template.stop();  stopCamelContext();} catch (Exception e) {  log.debug("tearDown ignored exception while stopping: " + e.getMessage());} @AT@ 3218 @LENGTH@ 19
------MOV MethodInvocation@@MethodName:stopCamelContext:[] @TO@ ExpressionStatement@@MethodInvocation:stopCamelContext() @AT@ 3192 @LENGTH@ 18
---INS CatchClause@@catch (Exception e) {  log.debug("tearDown ignored exception while stopping: " + e.getMessage());} @TO@ TryStatement@@try {  log.debug("tearDown test: " + getName());  template.stop();  stopCamelContext();} catch (Exception e) {  log.debug("tearDown ignored exception while stopping: " + e.getMessage());} @AT@ 3248 @LENGTH@ 201
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  log.debug("tearDown ignored exception while stopping: " + e.getMessage());} @AT@ 3255 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3255 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3265 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:log.debug("tearDown ignored exception while stopping: " + e.getMessage()) @TO@ CatchClause@@catch (Exception e) {  log.debug("tearDown ignored exception while stopping: " + e.getMessage());} @AT@ 3282 @LENGTH@ 74
---------INS MethodInvocation@@log.debug("tearDown ignored exception while stopping: " + e.getMessage()) @TO@ ExpressionStatement@@MethodInvocation:log.debug("tearDown ignored exception while stopping: " + e.getMessage()) @AT@ 3282 @LENGTH@ 73
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug("tearDown ignored exception while stopping: " + e.getMessage()) @AT@ 3282 @LENGTH@ 3
------------INS SimpleName@@MethodName:debug:["tearDown ignored exception while stopping: " + e.getMessage()] @TO@ MethodInvocation@@log.debug("tearDown ignored exception while stopping: " + e.getMessage()) @AT@ 3286 @LENGTH@ 69
---------------INS InfixExpression@@"tearDown ignored exception while stopping: " + e.getMessage() @TO@ SimpleName@@MethodName:debug:["tearDown ignored exception while stopping: " + e.getMessage()] @AT@ 3292 @LENGTH@ 62
------------------INS StringLiteral@@"tearDown ignored exception while stopping: " @TO@ InfixExpression@@"tearDown ignored exception while stopping: " + e.getMessage() @AT@ 3292 @LENGTH@ 45
------------------INS Operator@@+ @TO@ InfixExpression@@"tearDown ignored exception while stopping: " + e.getMessage() @AT@ 3337 @LENGTH@ 1
------------------INS MethodInvocation@@e.getMessage() @TO@ InfixExpression@@"tearDown ignored exception while stopping: " + e.getMessage() @AT@ 3340 @LENGTH@ 14
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 3340 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 3342 @LENGTH@ 12


UPD FieldDeclaration@@private, String, [expression] @TO@ private, final, String, [expression] @AT@ 1371 @LENGTH@ 26
---INS Modifier@@final @TO@ FieldDeclaration@@private, String, [expression] @AT@ 1346 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals(2,TestAdvice.names.size()) @TO@ MethodInvocation:assertEquals(4,TestAdvice.names.size()) @AT@ 1786 @LENGTH@ 41
---UPD MethodInvocation@@assertEquals(2,TestAdvice.names.size()) @TO@ assertEquals(4,TestAdvice.names.size()) @AT@ 1786 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertEquals:[2, TestAdvice.names.size()] @TO@ MethodName:assertEquals:[4, TestAdvice.names.size()] @AT@ 1786 @LENGTH@ 40
---------UPD NumberLiteral@@2 @TO@ 4 @AT@ 1799 @LENGTH@ 1


UPD FieldDeclaration@@private, static, final, int, [ITERS=20000] @TO@ private, static, final, int, [ITERS=50000] @AT@ 1335 @LENGTH@ 39
---UPD VariableDeclarationFragment@@ITERS=20000 @TO@ ITERS=50000 @AT@ 1360 @LENGTH@ 13
------UPD NumberLiteral@@20000 @TO@ 50000 @AT@ 1368 @LENGTH@ 5


UPD FieldDeclaration@@protected, ProducerCache, [client=new ProducerCache()] @TO@ protected, ProducerCache, [client=new ProducerCache(new DefaultProducerServicePool(10))] @AT@ 2200 @LENGTH@ 53
---UPD VariableDeclarationFragment@@client=new ProducerCache() @TO@ client=new ProducerCache(new DefaultProducerServicePool(10)) @AT@ 2224 @LENGTH@ 28
------UPD ClassInstanceCreation@@ProducerCache[] @TO@ ProducerCache[new DefaultProducerServicePool(10)] @AT@ 2233 @LENGTH@ 19
---------INS ClassInstanceCreation@@DefaultProducerServicePool[10] @TO@ ClassInstanceCreation@@ProducerCache[] @AT@ 2308 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultProducerServicePool[10] @AT@ 2308 @LENGTH@ 3
------------INS SimpleType@@DefaultProducerServicePool @TO@ ClassInstanceCreation@@DefaultProducerServicePool[10] @AT@ 2312 @LENGTH@ 26
------------INS NumberLiteral@@10 @TO@ ClassInstanceCreation@@DefaultProducerServicePool[10] @AT@ 2339 @LENGTH@ 2


UPD IfStatement@@if (cause != null) {  if (LOG.isDebugEnabled()) {    LOG.debug("Will create JmsMessage with caused exception: " + cause);  }  answer=createJmsMessage(cause,session);} else {  answer=createJmsMessage(exchange,camelMessage.getBody(),camelMessage.getHeaders(),session,exchange.getContext());  appendJmsProperties(answer,exchange,camelMessage);} @TO@ if (cause != null) {  if (LOG.isDebugEnabled()) {    LOG.debug("Will create JmsMessage with caused exception: " + cause);  }  answer=createJmsMessage(cause,session);} else {  ObjectHelper.notNull(camelMessage,"message body");  answer=createJmsMessage(exchange,camelMessage.getBody(),camelMessage.getHeaders(),session,exchange.getContext());  appendJmsProperties(answer,exchange,camelMessage);} @AT@ 8722 @LENGTH@ 676
---UPD Block@@ElseBody:{  answer=createJmsMessage(exchange,camelMessage.getBody(),camelMessage.getHeaders(),session,exchange.getContext());  appendJmsProperties(answer,exchange,camelMessage);} @TO@ ElseBody:{  ObjectHelper.notNull(camelMessage,"message body");  answer=createJmsMessage(exchange,camelMessage.getBody(),camelMessage.getHeaders(),session,exchange.getContext());  appendJmsProperties(answer,exchange,camelMessage);} @AT@ 9103 @LENGTH@ 295
------INS ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(camelMessage,"message body") @TO@ Block@@ElseBody:{  answer=createJmsMessage(exchange,camelMessage.getBody(),camelMessage.getHeaders(),session,exchange.getContext());  appendJmsProperties(answer,exchange,camelMessage);} @AT@ 9164 @LENGTH@ 51
---------INS MethodInvocation@@ObjectHelper.notNull(camelMessage,"message body") @TO@ ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(camelMessage,"message body") @AT@ 9164 @LENGTH@ 50
------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.notNull(camelMessage,"message body") @AT@ 9164 @LENGTH@ 12
------------INS SimpleName@@MethodName:notNull:[camelMessage, "message body"] @TO@ MethodInvocation@@ObjectHelper.notNull(camelMessage,"message body") @AT@ 9177 @LENGTH@ 37
---------------INS SimpleName@@camelMessage @TO@ SimpleName@@MethodName:notNull:[camelMessage, "message body"] @AT@ 9185 @LENGTH@ 12
---------------INS StringLiteral@@"message body" @TO@ SimpleName@@MethodName:notNull:[camelMessage, "message body"] @AT@ 9199 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(data,"data") @TO@ MethodDeclaration@@public, voidMethodName:BytesSource, byte[] data,  @AT@ 1360 @LENGTH@ 35
---INS MethodInvocation@@ObjectHelper.notNull(data,"data") @TO@ ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(data,"data") @AT@ 1360 @LENGTH@ 34
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.notNull(data,"data") @AT@ 1360 @LENGTH@ 12
------INS SimpleName@@MethodName:notNull:[data, "data"] @TO@ MethodInvocation@@ObjectHelper.notNull(data,"data") @AT@ 1373 @LENGTH@ 21
---------INS SimpleName@@data @TO@ SimpleName@@MethodName:notNull:[data, "data"] @AT@ 1381 @LENGTH@ 4
---------INS StringLiteral@@"data" @TO@ SimpleName@@MethodName:notNull:[data, "data"] @AT@ 1387 @LENGTH@ 6


UPD WhileStatement@@while (sig == cfhSig) {  archive.readFully(cfh);  int off=0;  ZipEntry ze=new ZipEntry();  int versionMadeBy=ZipShort.getValue(cfh,off);  off+=SHORT;  ze.setPlatform((versionMadeBy >> BYTE_SHIFT) & NIBLET_MASK);  off+=WORD;  ze.setMethod(ZipShort.getValue(cfh,off));  off+=SHORT;  long time=dosToJavaTime(ZipLong.getValue(cfh,off));  ze.setTime(time);  off+=WORD;  ze.setCrc(ZipLong.getValue(cfh,off));  off+=WORD;  ze.setCompressedSize(ZipLong.getValue(cfh,off));  off+=WORD;  ze.setSize(ZipLong.getValue(cfh,off));  off+=WORD;  int fileNameLen=ZipShort.getValue(cfh,off);  off+=SHORT;  int extraLen=ZipShort.getValue(cfh,off);  off+=SHORT;  int commentLen=ZipShort.getValue(cfh,off);  off+=SHORT;  off+=SHORT;  ze.setInternalAttributes(ZipShort.getValue(cfh,off));  off+=SHORT;  ze.setExternalAttributes(ZipLong.getValue(cfh,off));  off+=WORD;  byte[] fileName=new byte[fileNameLen];  archive.readFully(fileName);  ze.setName(getString(fileName));  OffsetEntry offset=new OffsetEntry();  offset.headerOffset=ZipLong.getValue(cfh,off);  entries.put(ze,offset);  nameMap.put(ze.getName(),ze);  archive.skipBytes(extraLen);  byte[] comment=new byte[commentLen];  archive.readFully(comment);  ze.setComment(getString(comment));  archive.readFully(signatureBytes);  sig=ZipLong.getValue(signatureBytes);} @TO@ while (sig == cfhSig) {  archive.readFully(cfh);  int off=0;  ZipEntry ze=new ZipEntry();  int versionMadeBy=ZipShort.getValue(cfh,off);  off+=SHORT;  ze.setPlatform((versionMadeBy >> BYTE_SHIFT) & NIBLET_MASK);  off+=WORD;  ze.setMethod(ZipShort.getValue(cfh,off));  off+=SHORT;  long time=dosToJavaTime(ZipLong.getValue(cfh,off));  ze.setTime(time);  off+=WORD;  ze.setCrc(ZipLong.getValue(cfh,off));  off+=WORD;  ze.setCompressedSize(ZipLong.getValue(cfh,off));  off+=WORD;  ze.setSize(ZipLong.getValue(cfh,off));  off+=WORD;  int fileNameLen=ZipShort.getValue(cfh,off);  off+=SHORT;  int extraLen=ZipShort.getValue(cfh,off);  off+=SHORT;  int commentLen=ZipShort.getValue(cfh,off);  off+=SHORT;  off+=SHORT;  ze.setInternalAttributes(ZipShort.getValue(cfh,off));  off+=SHORT;  ze.setExternalAttributes(ZipLong.getValue(cfh,off));  off+=WORD;  byte[] fileName=new byte[fileNameLen];  archive.readFully(fileName);  ze.setName(getString(fileName));  OffsetEntry offset=new OffsetEntry();  offset.headerOffset=ZipLong.getValue(cfh,off);  entries.put(ze,offset);  nameMap.put(ze.getName(),ze);  int lenToSkip=extraLen;  while (lenToSkip > 0) {    int skipped=archive.skipBytes(lenToSkip);    if (skipped <= 0) {      throw new RuntimeException("failed to skip extra data in" + " central directory");    }    lenToSkip-=skipped;  }  byte[] comment=new byte[commentLen];  archive.readFully(comment);  ze.setComment(getString(comment));  archive.readFully(signatureBytes);  sig=ZipLong.getValue(signatureBytes);} @AT@ 9908 @LENGTH@ 2226
---UPD Block@@WhileBody:{  archive.readFully(cfh);  int off=0;  ZipEntry ze=new ZipEntry();  int versionMadeBy=ZipShort.getValue(cfh,off);  off+=SHORT;  ze.setPlatform((versionMadeBy >> BYTE_SHIFT) & NIBLET_MASK);  off+=WORD;  ze.setMethod(ZipShort.getValue(cfh,off));  off+=SHORT;  long time=dosToJavaTime(ZipLong.getValue(cfh,off));  ze.setTime(time);  off+=WORD;  ze.setCrc(ZipLong.getValue(cfh,off));  off+=WORD;  ze.setCompressedSize(ZipLong.getValue(cfh,off));  off+=WORD;  ze.setSize(ZipLong.getValue(cfh,off));  off+=WORD;  int fileNameLen=ZipShort.getValue(cfh,off);  off+=SHORT;  int extraLen=ZipShort.getValue(cfh,off);  off+=SHORT;  int commentLen=ZipShort.getValue(cfh,off);  off+=SHORT;  off+=SHORT;  ze.setInternalAttributes(ZipShort.getValue(cfh,off));  off+=SHORT;  ze.setExternalAttributes(ZipLong.getValue(cfh,off));  off+=WORD;  byte[] fileName=new byte[fileNameLen];  archive.readFully(fileName);  ze.setName(getString(fileName));  OffsetEntry offset=new OffsetEntry();  offset.headerOffset=ZipLong.getValue(cfh,off);  entries.put(ze,offset);  nameMap.put(ze.getName(),ze);  archive.skipBytes(extraLen);  byte[] comment=new byte[commentLen];  archive.readFully(comment);  ze.setComment(getString(comment));  archive.readFully(signatureBytes);  sig=ZipLong.getValue(signatureBytes);} @TO@ WhileBody:{  archive.readFully(cfh);  int off=0;  ZipEntry ze=new ZipEntry();  int versionMadeBy=ZipShort.getValue(cfh,off);  off+=SHORT;  ze.setPlatform((versionMadeBy >> BYTE_SHIFT) & NIBLET_MASK);  off+=WORD;  ze.setMethod(ZipShort.getValue(cfh,off));  off+=SHORT;  long time=dosToJavaTime(ZipLong.getValue(cfh,off));  ze.setTime(time);  off+=WORD;  ze.setCrc(ZipLong.getValue(cfh,off));  off+=WORD;  ze.setCompressedSize(ZipLong.getValue(cfh,off));  off+=WORD;  ze.setSize(ZipLong.getValue(cfh,off));  off+=WORD;  int fileNameLen=ZipShort.getValue(cfh,off);  off+=SHORT;  int extraLen=ZipShort.getValue(cfh,off);  off+=SHORT;  int commentLen=ZipShort.getValue(cfh,off);  off+=SHORT;  off+=SHORT;  ze.setInternalAttributes(ZipShort.getValue(cfh,off));  off+=SHORT;  ze.setExternalAttributes(ZipLong.getValue(cfh,off));  off+=WORD;  byte[] fileName=new byte[fileNameLen];  archive.readFully(fileName);  ze.setName(getString(fileName));  OffsetEntry offset=new OffsetEntry();  offset.headerOffset=ZipLong.getValue(cfh,off);  entries.put(ze,offset);  nameMap.put(ze.getName(),ze);  int lenToSkip=extraLen;  while (lenToSkip > 0) {    int skipped=archive.skipBytes(lenToSkip);    if (skipped <= 0) {      throw new RuntimeException("failed to skip extra data in" + " central directory");    }    lenToSkip-=skipped;  }  byte[] comment=new byte[commentLen];  archive.readFully(comment);  ze.setComment(getString(comment));  archive.readFully(signatureBytes);  sig=ZipLong.getValue(signatureBytes);} @AT@ 9930 @LENGTH@ 2204
------DEL ExpressionStatement@@MethodInvocation:archive.skipBytes(extraLen) @AT@ 11857 @LENGTH@ 28
---------DEL MethodInvocation@@archive.skipBytes(extraLen) @AT@ 11857 @LENGTH@ 27
------INS VariableDeclarationStatement@@int lenToSkip=extraLen; @TO@ Block@@WhileBody:{  archive.readFully(cfh);  int off=0;  ZipEntry ze=new ZipEntry();  int versionMadeBy=ZipShort.getValue(cfh,off);  off+=SHORT;  ze.setPlatform((versionMadeBy >> BYTE_SHIFT) & NIBLET_MASK);  off+=WORD;  ze.setMethod(ZipShort.getValue(cfh,off));  off+=SHORT;  long time=dosToJavaTime(ZipLong.getValue(cfh,off));  ze.setTime(time);  off+=WORD;  ze.setCrc(ZipLong.getValue(cfh,off));  off+=WORD;  ze.setCompressedSize(ZipLong.getValue(cfh,off));  off+=WORD;  ze.setSize(ZipLong.getValue(cfh,off));  off+=WORD;  int fileNameLen=ZipShort.getValue(cfh,off);  off+=SHORT;  int extraLen=ZipShort.getValue(cfh,off);  off+=SHORT;  int commentLen=ZipShort.getValue(cfh,off);  off+=SHORT;  off+=SHORT;  ze.setInternalAttributes(ZipShort.getValue(cfh,off));  off+=SHORT;  ze.setExternalAttributes(ZipLong.getValue(cfh,off));  off+=WORD;  byte[] fileName=new byte[fileNameLen];  archive.readFully(fileName);  ze.setName(getString(fileName));  OffsetEntry offset=new OffsetEntry();  offset.headerOffset=ZipLong.getValue(cfh,off);  entries.put(ze,offset);  nameMap.put(ze.getName(),ze);  archive.skipBytes(extraLen);  byte[] comment=new byte[commentLen];  archive.readFully(comment);  ze.setComment(getString(comment));  archive.readFully(signatureBytes);  sig=ZipLong.getValue(signatureBytes);} @AT@ 11857 @LENGTH@ 25
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int lenToSkip=extraLen; @AT@ 11857 @LENGTH@ 3
---------INS VariableDeclarationFragment@@lenToSkip=extraLen @TO@ VariableDeclarationStatement@@int lenToSkip=extraLen; @AT@ 11861 @LENGTH@ 20
------------INS SimpleName@@lenToSkip @TO@ VariableDeclarationFragment@@lenToSkip=extraLen @AT@ 11861 @LENGTH@ 9
------------INS SimpleName@@extraLen @TO@ VariableDeclarationFragment@@lenToSkip=extraLen @AT@ 11873 @LENGTH@ 8
------INS WhileStatement@@while (lenToSkip > 0) {  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip extra data in" + " central directory");  }  lenToSkip-=skipped;} @TO@ Block@@WhileBody:{  archive.readFully(cfh);  int off=0;  ZipEntry ze=new ZipEntry();  int versionMadeBy=ZipShort.getValue(cfh,off);  off+=SHORT;  ze.setPlatform((versionMadeBy >> BYTE_SHIFT) & NIBLET_MASK);  off+=WORD;  ze.setMethod(ZipShort.getValue(cfh,off));  off+=SHORT;  long time=dosToJavaTime(ZipLong.getValue(cfh,off));  ze.setTime(time);  off+=WORD;  ze.setCrc(ZipLong.getValue(cfh,off));  off+=WORD;  ze.setCompressedSize(ZipLong.getValue(cfh,off));  off+=WORD;  ze.setSize(ZipLong.getValue(cfh,off));  off+=WORD;  int fileNameLen=ZipShort.getValue(cfh,off);  off+=SHORT;  int extraLen=ZipShort.getValue(cfh,off);  off+=SHORT;  int commentLen=ZipShort.getValue(cfh,off);  off+=SHORT;  off+=SHORT;  ze.setInternalAttributes(ZipShort.getValue(cfh,off));  off+=SHORT;  ze.setExternalAttributes(ZipLong.getValue(cfh,off));  off+=WORD;  byte[] fileName=new byte[fileNameLen];  archive.readFully(fileName);  ze.setName(getString(fileName));  OffsetEntry offset=new OffsetEntry();  offset.headerOffset=ZipLong.getValue(cfh,off);  entries.put(ze,offset);  nameMap.put(ze.getName(),ze);  archive.skipBytes(extraLen);  byte[] comment=new byte[commentLen];  archive.readFully(comment);  ze.setComment(getString(comment));  archive.readFully(signatureBytes);  sig=ZipLong.getValue(signatureBytes);} @AT@ 11895 @LENGTH@ 339
---------INS InfixExpression@@lenToSkip > 0 @TO@ WhileStatement@@while (lenToSkip > 0) {  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip extra data in" + " central directory");  }  lenToSkip-=skipped;} @AT@ 11902 @LENGTH@ 13
------------INS SimpleName@@lenToSkip @TO@ InfixExpression@@lenToSkip > 0 @AT@ 11902 @LENGTH@ 9
------------INS Operator@@> @TO@ InfixExpression@@lenToSkip > 0 @AT@ 11911 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@lenToSkip > 0 @AT@ 11914 @LENGTH@ 1
---------INS Block@@WhileBody:{  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip extra data in" + " central directory");  }  lenToSkip-=skipped;} @TO@ WhileStatement@@while (lenToSkip > 0) {  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip extra data in" + " central directory");  }  lenToSkip-=skipped;} @AT@ 11917 @LENGTH@ 317
------------INS VariableDeclarationStatement@@int skipped=archive.skipBytes(lenToSkip); @TO@ Block@@WhileBody:{  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip extra data in" + " central directory");  }  lenToSkip-=skipped;} @AT@ 11935 @LENGTH@ 43
---------------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int skipped=archive.skipBytes(lenToSkip); @AT@ 11935 @LENGTH@ 3
---------------INS VariableDeclarationFragment@@skipped=archive.skipBytes(lenToSkip) @TO@ VariableDeclarationStatement@@int skipped=archive.skipBytes(lenToSkip); @AT@ 11939 @LENGTH@ 38
------------------INS SimpleName@@skipped @TO@ VariableDeclarationFragment@@skipped=archive.skipBytes(lenToSkip) @AT@ 11939 @LENGTH@ 7
------------------INS MethodInvocation@@archive.skipBytes(lenToSkip) @TO@ VariableDeclarationFragment@@skipped=archive.skipBytes(lenToSkip) @AT@ 11949 @LENGTH@ 28
---------------------MOV SimpleName@@Name:archive @TO@ MethodInvocation@@archive.skipBytes(lenToSkip) @AT@ 11857 @LENGTH@ 7
---------------------MOV SimpleName@@MethodName:skipBytes:[extraLen] @TO@ MethodInvocation@@archive.skipBytes(lenToSkip) @AT@ 11865 @LENGTH@ 19
------------------------UPD SimpleName@@extraLen @TO@ lenToSkip @AT@ 11875 @LENGTH@ 8
------------INS IfStatement@@if (skipped <= 0) {  throw new RuntimeException("failed to skip extra data in" + " central directory");} @TO@ Block@@WhileBody:{  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip extra data in" + " central directory");  }  lenToSkip-=skipped;} @AT@ 11995 @LENGTH@ 187
---------------INS InfixExpression@@skipped <= 0 @TO@ IfStatement@@if (skipped <= 0) {  throw new RuntimeException("failed to skip extra data in" + " central directory");} @AT@ 11999 @LENGTH@ 12
------------------INS SimpleName@@skipped @TO@ InfixExpression@@skipped <= 0 @AT@ 11999 @LENGTH@ 7
------------------INS Operator@@<= @TO@ InfixExpression@@skipped <= 0 @AT@ 12006 @LENGTH@ 2
------------------INS NumberLiteral@@0 @TO@ InfixExpression@@skipped <= 0 @AT@ 12010 @LENGTH@ 1
---------------INS Block@@ThenBody:{  throw new RuntimeException("failed to skip extra data in" + " central directory");} @TO@ IfStatement@@if (skipped <= 0) {  throw new RuntimeException("failed to skip extra data in" + " central directory");} @AT@ 12013 @LENGTH@ 169
------------------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("failed to skip extra data in" + " central directory") @TO@ Block@@ThenBody:{  throw new RuntimeException("failed to skip extra data in" + " central directory");} @AT@ 12035 @LENGTH@ 129
---------------------INS ClassInstanceCreation@@RuntimeException["failed to skip extra data in" + " central directory"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("failed to skip extra data in" + " central directory") @AT@ 12041 @LENGTH@ 122
------------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["failed to skip extra data in" + " central directory"] @AT@ 12041 @LENGTH@ 3
------------------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["failed to skip extra data in" + " central directory"] @AT@ 12045 @LENGTH@ 16
------------------------INS InfixExpression@@"failed to skip extra data in" + " central directory" @TO@ ClassInstanceCreation@@RuntimeException["failed to skip extra data in" + " central directory"] @AT@ 12062 @LENGTH@ 100
---------------------------INS StringLiteral@@"failed to skip extra data in" @TO@ InfixExpression@@"failed to skip extra data in" + " central directory" @AT@ 12062 @LENGTH@ 30
---------------------------INS Operator@@+ @TO@ InfixExpression@@"failed to skip extra data in" + " central directory" @AT@ 12092 @LENGTH@ 1
---------------------------INS StringLiteral@@" central directory" @TO@ InfixExpression@@"failed to skip extra data in" + " central directory" @AT@ 12142 @LENGTH@ 20
------------INS ExpressionStatement@@Assignment:lenToSkip-=skipped @TO@ Block@@WhileBody:{  int skipped=archive.skipBytes(lenToSkip);  if (skipped <= 0) {    throw new RuntimeException("failed to skip extra data in" + " central directory");  }  lenToSkip-=skipped;} @AT@ 12199 @LENGTH@ 21
---------------INS Assignment@@lenToSkip-=skipped @TO@ ExpressionStatement@@Assignment:lenToSkip-=skipped @AT@ 12199 @LENGTH@ 20
------------------INS SimpleName@@lenToSkip @TO@ Assignment@@lenToSkip-=skipped @AT@ 12199 @LENGTH@ 9
------------------INS Operator@@-= @TO@ Assignment@@lenToSkip-=skipped @AT@ 12208 @LENGTH@ 2
------------------INS SimpleName@@skipped @TO@ Assignment@@lenToSkip-=skipped @AT@ 12212 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertTrue("Should be slower to run: " + delta,delta > 4000) @TO@ MethodInvocation:assertTrue("Should not be that fast to run: " + delta,delta > 4000) @AT@ 1474 @LENGTH@ 62
---UPD MethodInvocation@@assertTrue("Should be slower to run: " + delta,delta > 4000) @TO@ assertTrue("Should not be that fast to run: " + delta,delta > 4000) @AT@ 1474 @LENGTH@ 61
------UPD SimpleName@@MethodName:assertTrue:["Should be slower to run: " + delta, delta > 4000] @TO@ MethodName:assertTrue:["Should not be that fast to run: " + delta, delta > 4000] @AT@ 1474 @LENGTH@ 61
---------UPD InfixExpression@@"Should be slower to run: " + delta @TO@ "Should not be that fast to run: " + delta @AT@ 1485 @LENGTH@ 35
------------UPD StringLiteral@@"Should be slower to run: " @TO@ "Should not be that fast to run: " @AT@ 1485 @LENGTH@ 27


UPD IfStatement@@if (exchange.getPattern().isOutCapable()) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);  }} @TO@ if (exchange.getPattern().isOutCapable()) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else {  LOG.warn("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);} @AT@ 10889 @LENGTH@ 451
---DEL Block@@ElseBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);  }} @AT@ 11148 @LENGTH@ 192
------DEL IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);} @AT@ 11170 @LENGTH@ 152
---------DEL MethodInvocation@@LOG.isDebugEnabled() @AT@ 11174 @LENGTH@ 20
------------DEL SimpleName@@Name:LOG @AT@ 11174 @LENGTH@ 3
------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 11178 @LENGTH@ 16
---MOV Block@@ThenBody:{  LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);} @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue);  }} @AT@ 11196 @LENGTH@ 126
------UPD ExpressionStatement@@MethodInvocation:LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue) @TO@ MethodInvocation:LOG.warn("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue) @AT@ 11222 @LENGTH@ 78
---------UPD MethodInvocation@@LOG.debug("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue) @TO@ LOG.warn("Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue) @AT@ 11222 @LENGTH@ 77
------------UPD SimpleName@@MethodName:debug:["Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue] @TO@ MethodName:warn:["Exchange is not out capable, Ignoring JMSReplyTo: " + headerValue] @AT@ 11226 @LENGTH@ 73


INS VariableDeclarationStatement@@int inputSize=inputs.size(); @TO@ MethodDeclaration@@public, final, void, MethodName:process, StepContribution contribution, Chunk<I> inputs, Exception,  @AT@ 4221 @LENGTH@ 30
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int inputSize=inputs.size(); @AT@ 4221 @LENGTH@ 3
---INS VariableDeclarationFragment@@inputSize=inputs.size() @TO@ VariableDeclarationStatement@@int inputSize=inputs.size(); @AT@ 4225 @LENGTH@ 25
------INS SimpleName@@inputSize @TO@ VariableDeclarationFragment@@inputSize=inputs.size() @AT@ 4225 @LENGTH@ 9
------INS MethodInvocation@@inputs.size() @TO@ VariableDeclarationFragment@@inputSize=inputs.size() @AT@ 4237 @LENGTH@ 13
---------INS SimpleName@@Name:inputs @TO@ MethodInvocation@@inputs.size() @AT@ 4237 @LENGTH@ 6
---------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@inputs.size() @AT@ 4244 @LENGTH@ 6


INS IfStatement@@if (!showBreadCrumb && !showExchangeId && !showNode) {  return "";} @TO@ MethodDeclaration@@protected, String, MethodName:getExchangeAndNode, TraceInterceptor interceptor, Exchange exchange,  @AT@ 7408 @LENGTH@ 87
---INS InfixExpression@@!showBreadCrumb && !showExchangeId && !showNode @TO@ IfStatement@@if (!showBreadCrumb && !showExchangeId && !showNode) {  return "";} @AT@ 7412 @LENGTH@ 47
------INS PrefixExpression@@!showBreadCrumb @TO@ InfixExpression@@!showBreadCrumb && !showExchangeId && !showNode @AT@ 7412 @LENGTH@ 15
---------INS Operator@@! @TO@ PrefixExpression@@!showBreadCrumb @AT@ 7412 @LENGTH@ 1
---------INS SimpleName@@showBreadCrumb @TO@ PrefixExpression@@!showBreadCrumb @AT@ 7413 @LENGTH@ 14
------INS Operator@@&& @TO@ InfixExpression@@!showBreadCrumb && !showExchangeId && !showNode @AT@ 7427 @LENGTH@ 2
------INS PrefixExpression@@!showExchangeId @TO@ InfixExpression@@!showBreadCrumb && !showExchangeId && !showNode @AT@ 7431 @LENGTH@ 15
---------INS Operator@@! @TO@ PrefixExpression@@!showExchangeId @AT@ 7431 @LENGTH@ 1
---------INS SimpleName@@showExchangeId @TO@ PrefixExpression@@!showExchangeId @AT@ 7432 @LENGTH@ 14
------INS PrefixExpression@@!showNode @TO@ InfixExpression@@!showBreadCrumb && !showExchangeId && !showNode @AT@ 7450 @LENGTH@ 9
---------INS Operator@@! @TO@ PrefixExpression@@!showNode @AT@ 7450 @LENGTH@ 1
---------INS SimpleName@@showNode @TO@ PrefixExpression@@!showNode @AT@ 7451 @LENGTH@ 8
---INS Block@@ThenBody:{  return "";} @TO@ IfStatement@@if (!showBreadCrumb && !showExchangeId && !showNode) {  return "";} @AT@ 7461 @LENGTH@ 34
------INS ReturnStatement@@StringLiteral:"" @TO@ Block@@ThenBody:{  return "";} @AT@ 7475 @LENGTH@ 10
---------INS StringLiteral@@"" @TO@ ReturnStatement@@StringLiteral:"" @AT@ 7482 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:log.debug("Not connected/logged in, connecting to " + getEndpoint()) @TO@ MethodInvocation:log.debug("Not already connected/logged in. Connecting to: " + getEndpoint()) @AT@ 3871 @LENGTH@ 69
---UPD MethodInvocation@@log.debug("Not connected/logged in, connecting to " + getEndpoint()) @TO@ log.debug("Not already connected/logged in. Connecting to: " + getEndpoint()) @AT@ 3871 @LENGTH@ 68
------UPD SimpleName@@MethodName:debug:["Not connected/logged in, connecting to " + getEndpoint()] @TO@ MethodName:debug:["Not already connected/logged in. Connecting to: " + getEndpoint()] @AT@ 3875 @LENGTH@ 64
---------UPD InfixExpression@@"Not connected/logged in, connecting to " + getEndpoint() @TO@ "Not already connected/logged in. Connecting to: " + getEndpoint() @AT@ 3881 @LENGTH@ 57
------------UPD StringLiteral@@"Not connected/logged in, connecting to " @TO@ "Not already connected/logged in. Connecting to: " @AT@ 3881 @LENGTH@ 41


UPD VariableDeclarationStatement@@String file=endpoint.getConfiguration().getFile(); @TO@ String file=endpoint.getConfiguration().getDirectory(); @AT@ 4715 @LENGTH@ 52
---UPD VariableDeclarationFragment@@file=endpoint.getConfiguration().getFile() @TO@ file=endpoint.getConfiguration().getDirectory() @AT@ 4722 @LENGTH@ 44
------UPD MethodInvocation@@endpoint.getConfiguration().getFile() @TO@ endpoint.getConfiguration().getDirectory() @AT@ 4729 @LENGTH@ 37
---------UPD SimpleName@@MethodName:getFile:[] @TO@ MethodName:getDirectory:[] @AT@ 4757 @LENGTH@ 9


UPD MethodDeclaration@@public, static, void, MethodName:determineRouting, Exchange exchange,  @TO@ public, void, MethodName:determineRouting, Exchange exchange,  @AT@ 2563 @LENGTH@ 120
---DEL Modifier@@static @AT@ 2570 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("newfile://target/subfolder").setHeader("subject",constant("new incident reported")).to("smtp://someone@localhost?password=secret&to=incident@mycompany.com") @TO@ MethodInvocation:from("file://target/subfolder").setHeader("subject",constant("new incident reported")).to("smtp://someone@localhost?password=secret&to=incident@mycompany.com") @AT@ 3071 @LENGTH@ 264
---UPD MethodInvocation@@from("newfile://target/subfolder").setHeader("subject",constant("new incident reported")).to("smtp://someone@localhost?password=secret&to=incident@mycompany.com") @TO@ from("file://target/subfolder").setHeader("subject",constant("new incident reported")).to("smtp://someone@localhost?password=secret&to=incident@mycompany.com") @AT@ 3071 @LENGTH@ 263
------UPD MethodInvocation@@MethodName:from:["newfile://target/subfolder"] @TO@ MethodName:from:["file://target/subfolder"] @AT@ 3071 @LENGTH@ 34
---------UPD StringLiteral@@"newfile://target/subfolder" @TO@ "file://target/subfolder" @AT@ 3076 @LENGTH@ 28


UPD IfStatement@@if (c.getReplyTo() != null) {  requestor=new PersistentReplyToRequestor(endpoint.getConfiguration(),endpoint.getExecutorService());  requestor.start();} else {  if (affinity == RequestorAffinity.PER_PRODUCER) {    requestor=new Requestor(endpoint.getConfiguration(),endpoint.getExecutorService());    requestor.start();  } else   if (affinity == RequestorAffinity.PER_ENDPOINT) {    requestor=endpoint.getRequestor();  } else   if (affinity == RequestorAffinity.PER_COMPONENT) {    requestor=((JmsComponent)endpoint.getComponent()).getRequestor();  }} @TO@ if (c.getReplyTo() != null) {  requestor=new PersistentReplyToRequestor(endpoint.getConfiguration(),endpoint.getScheduledExecutorService());  requestor.start();} else {  if (affinity == RequestorAffinity.PER_PRODUCER) {    requestor=new Requestor(endpoint.getConfiguration(),endpoint.getScheduledExecutorService());    requestor.start();  } else   if (affinity == RequestorAffinity.PER_ENDPOINT) {    requestor=endpoint.getRequestor();  } else   if (affinity == RequestorAffinity.PER_COMPONENT) {    requestor=((JmsComponent)endpoint.getComponent()).getRequestor();  }} @AT@ 4090 @LENGTH@ 837
---UPD Block@@ThenBody:{  requestor=new PersistentReplyToRequestor(endpoint.getConfiguration(),endpoint.getExecutorService());  requestor.start();} @TO@ ThenBody:{  requestor=new PersistentReplyToRequestor(endpoint.getConfiguration(),endpoint.getScheduledExecutorService());  requestor.start();} @AT@ 4118 @LENGTH@ 194
------UPD ExpressionStatement@@Assignment:requestor=new PersistentReplyToRequestor(endpoint.getConfiguration(),endpoint.getExecutorService()) @TO@ Assignment:requestor=new PersistentReplyToRequestor(endpoint.getConfiguration(),endpoint.getScheduledExecutorService()) @AT@ 4144 @LENGTH@ 103
---------UPD Assignment@@requestor=new PersistentReplyToRequestor(endpoint.getConfiguration(),endpoint.getExecutorService()) @TO@ requestor=new PersistentReplyToRequestor(endpoint.getConfiguration(),endpoint.getScheduledExecutorService()) @AT@ 4144 @LENGTH@ 102
------------UPD ClassInstanceCreation@@PersistentReplyToRequestor[endpoint.getConfiguration(), endpoint.getExecutorService()] @TO@ PersistentReplyToRequestor[endpoint.getConfiguration(), endpoint.getScheduledExecutorService()] @AT@ 4156 @LENGTH@ 90
---------------UPD MethodInvocation@@endpoint.getExecutorService() @TO@ endpoint.getScheduledExecutorService() @AT@ 4216 @LENGTH@ 29
------------------UPD SimpleName@@MethodName:getExecutorService:[] @TO@ MethodName:getScheduledExecutorService:[] @AT@ 4225 @LENGTH@ 20
---UPD Block@@ElseBody:{  if (affinity == RequestorAffinity.PER_PRODUCER) {    requestor=new Requestor(endpoint.getConfiguration(),endpoint.getExecutorService());    requestor.start();  } else   if (affinity == RequestorAffinity.PER_ENDPOINT) {    requestor=endpoint.getRequestor();  } else   if (affinity == RequestorAffinity.PER_COMPONENT) {    requestor=((JmsComponent)endpoint.getComponent()).getRequestor();  }} @TO@ ElseBody:{  if (affinity == RequestorAffinity.PER_PRODUCER) {    requestor=new Requestor(endpoint.getConfiguration(),endpoint.getScheduledExecutorService());    requestor.start();  } else   if (affinity == RequestorAffinity.PER_ENDPOINT) {    requestor=endpoint.getRequestor();  } else   if (affinity == RequestorAffinity.PER_COMPONENT) {    requestor=((JmsComponent)endpoint.getComponent()).getRequestor();  }} @AT@ 4318 @LENGTH@ 609
------UPD IfStatement@@if (affinity == RequestorAffinity.PER_PRODUCER) {  requestor=new Requestor(endpoint.getConfiguration(),endpoint.getExecutorService());  requestor.start();} else if (affinity == RequestorAffinity.PER_ENDPOINT) {  requestor=endpoint.getRequestor();} else if (affinity == RequestorAffinity.PER_COMPONENT) {  requestor=((JmsComponent)endpoint.getComponent()).getRequestor();} @TO@ if (affinity == RequestorAffinity.PER_PRODUCER) {  requestor=new Requestor(endpoint.getConfiguration(),endpoint.getScheduledExecutorService());  requestor.start();} else if (affinity == RequestorAffinity.PER_ENDPOINT) {  requestor=endpoint.getRequestor();} else if (affinity == RequestorAffinity.PER_COMPONENT) {  requestor=((JmsComponent)endpoint.getComponent()).getRequestor();} @AT@ 4344 @LENGTH@ 561
---------UPD Block@@ThenBody:{  requestor=new Requestor(endpoint.getConfiguration(),endpoint.getExecutorService());  requestor.start();} @TO@ ThenBody:{  requestor=new Requestor(endpoint.getConfiguration(),endpoint.getScheduledExecutorService());  requestor.start();} @AT@ 4392 @LENGTH@ 189
------------UPD ExpressionStatement@@Assignment:requestor=new Requestor(endpoint.getConfiguration(),endpoint.getExecutorService()) @TO@ Assignment:requestor=new Requestor(endpoint.getConfiguration(),endpoint.getScheduledExecutorService()) @AT@ 4422 @LENGTH@ 86
---------------UPD Assignment@@requestor=new Requestor(endpoint.getConfiguration(),endpoint.getExecutorService()) @TO@ requestor=new Requestor(endpoint.getConfiguration(),endpoint.getScheduledExecutorService()) @AT@ 4422 @LENGTH@ 85
------------------UPD ClassInstanceCreation@@Requestor[endpoint.getConfiguration(), endpoint.getExecutorService()] @TO@ Requestor[endpoint.getConfiguration(), endpoint.getScheduledExecutorService()] @AT@ 4434 @LENGTH@ 73
---------------------UPD MethodInvocation@@endpoint.getExecutorService() @TO@ endpoint.getScheduledExecutorService() @AT@ 4477 @LENGTH@ 29
------------------------UPD SimpleName@@MethodName:getExecutorService:[] @TO@ MethodName:getScheduledExecutorService:[] @AT@ 4486 @LENGTH@ 20


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public, static, final]MyFooBean, [TypeConverter, Serializable] @AT@ 9014 @LENGTH@ 115
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 9014 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 9025 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 9027 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 9046 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 9046 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 9046 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 9052 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 9055 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 9061 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 9061 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 9068 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 9089 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 9096 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 9096 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 9106 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 9112 @LENGTH@ 5


UPD IfStatement@@if (record != null) {  skipFirstLine=record.skipFirstLine();  if (LOG.isDebugEnabled()) {    LOG.debug("Skip First Line parameter of the CSV : " + skipFirstLine);  }  ObjectHelper.notNull(record.separator(),"No separator has been defined in the @Record annotation !");  separator=record.separator();  if (LOG.isDebugEnabled()) {    LOG.debug("Separator defined for the CSV : " + separator);  }} @TO@ if (record != null) {  skipFirstLine=record.skipFirstLine();  if (LOG.isDebugEnabled()) {    LOG.debug("Skip First Line parameter of the CSV : " + skipFirstLine);  }  ObjectHelper.notNull(record.separator(),"No separator has been defined in the @Record annotation !");  separator=record.separator();  if (LOG.isDebugEnabled()) {    LOG.debug("Separator defined for the CSV : " + separator);  }  crlf=record.crlf();  if (LOG.isDebugEnabled()) {    LOG.debug("Carriage return defined for the CSV : " + crlf);  }} @AT@ 7268 @LENGTH@ 733
---UPD Block@@ThenBody:{  skipFirstLine=record.skipFirstLine();  if (LOG.isDebugEnabled()) {    LOG.debug("Skip First Line parameter of the CSV : " + skipFirstLine);  }  ObjectHelper.notNull(record.separator(),"No separator has been defined in the @Record annotation !");  separator=record.separator();  if (LOG.isDebugEnabled()) {    LOG.debug("Separator defined for the CSV : " + separator);  }} @TO@ ThenBody:{  skipFirstLine=record.skipFirstLine();  if (LOG.isDebugEnabled()) {    LOG.debug("Skip First Line parameter of the CSV : " + skipFirstLine);  }  ObjectHelper.notNull(record.separator(),"No separator has been defined in the @Record annotation !");  separator=record.separator();  if (LOG.isDebugEnabled()) {    LOG.debug("Separator defined for the CSV : " + separator);  }  crlf=record.crlf();  if (LOG.isDebugEnabled()) {    LOG.debug("Carriage return defined for the CSV : " + crlf);  }} @AT@ 7288 @LENGTH@ 713
------INS ExpressionStatement@@Assignment:crlf=record.crlf() @TO@ Block@@ThenBody:{  skipFirstLine=record.skipFirstLine();  if (LOG.isDebugEnabled()) {    LOG.debug("Skip First Line parameter of the CSV : " + skipFirstLine);  }  ObjectHelper.notNull(record.separator(),"No separator has been defined in the @Record annotation !");  separator=record.separator();  if (LOG.isDebugEnabled()) {    LOG.debug("Separator defined for the CSV : " + separator);  }} @AT@ 7971 @LENGTH@ 21
---------INS Assignment@@crlf=record.crlf() @TO@ ExpressionStatement@@Assignment:crlf=record.crlf() @AT@ 7971 @LENGTH@ 20
------------INS SimpleName@@crlf @TO@ Assignment@@crlf=record.crlf() @AT@ 7971 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@crlf=record.crlf() @AT@ 7975 @LENGTH@ 1
------------INS MethodInvocation@@record.crlf() @TO@ Assignment@@crlf=record.crlf() @AT@ 7978 @LENGTH@ 13
---------------INS SimpleName@@Name:record @TO@ MethodInvocation@@record.crlf() @AT@ 7978 @LENGTH@ 6
---------------INS SimpleName@@MethodName:crlf:[] @TO@ MethodInvocation@@record.crlf() @AT@ 7985 @LENGTH@ 6
------INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Carriage return defined for the CSV : " + crlf);} @TO@ Block@@ThenBody:{  skipFirstLine=record.skipFirstLine();  if (LOG.isDebugEnabled()) {    LOG.debug("Skip First Line parameter of the CSV : " + skipFirstLine);  }  ObjectHelper.notNull(record.separator(),"No separator has been defined in the @Record annotation !");  separator=record.separator();  if (LOG.isDebugEnabled()) {    LOG.debug("Separator defined for the CSV : " + separator);  }} @AT@ 8013 @LENGTH@ 133
---------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Carriage return defined for the CSV : " + crlf);} @AT@ 8017 @LENGTH@ 20
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 8017 @LENGTH@ 3
------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 8021 @LENGTH@ 16
---------INS Block@@ThenBody:{  LOG.debug("Carriage return defined for the CSV : " + crlf);} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Carriage return defined for the CSV : " + crlf);} @AT@ 8039 @LENGTH@ 107
------------INS ExpressionStatement@@MethodInvocation:LOG.debug("Carriage return defined for the CSV : " + crlf) @TO@ Block@@ThenBody:{  LOG.debug("Carriage return defined for the CSV : " + crlf);} @AT@ 8065 @LENGTH@ 59
---------------INS MethodInvocation@@LOG.debug("Carriage return defined for the CSV : " + crlf) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Carriage return defined for the CSV : " + crlf) @AT@ 8065 @LENGTH@ 58
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Carriage return defined for the CSV : " + crlf) @AT@ 8065 @LENGTH@ 3
------------------INS SimpleName@@MethodName:debug:["Carriage return defined for the CSV : " + crlf] @TO@ MethodInvocation@@LOG.debug("Carriage return defined for the CSV : " + crlf) @AT@ 8069 @LENGTH@ 54
---------------------INS InfixExpression@@"Carriage return defined for the CSV : " + crlf @TO@ SimpleName@@MethodName:debug:["Carriage return defined for the CSV : " + crlf] @AT@ 8075 @LENGTH@ 47
------------------------INS StringLiteral@@"Carriage return defined for the CSV : " @TO@ InfixExpression@@"Carriage return defined for the CSV : " + crlf @AT@ 8075 @LENGTH@ 40
------------------------INS Operator@@+ @TO@ InfixExpression@@"Carriage return defined for the CSV : " + crlf @AT@ 8115 @LENGTH@ 1
------------------------INS SimpleName@@crlf @TO@ InfixExpression@@"Carriage return defined for the CSV : " + crlf @AT@ 8118 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Assert.isNull(annotatedMethod.get(),"found more than one method on target class [" + candidate + "] with the annotation type ["+ candidate+ "]") @TO@ MethodInvocation:Assert.isNull(annotatedMethod.get(),"found more than one method on target class [" + candidate.getClass().getSimpleName() + "] with the annotation type ["+ annotationType.getSimpleName()+ "].") @AT@ 4391 @LENGTH@ 155
---UPD MethodInvocation@@Assert.isNull(annotatedMethod.get(),"found more than one method on target class [" + candidate + "] with the annotation type ["+ candidate+ "]") @TO@ Assert.isNull(annotatedMethod.get(),"found more than one method on target class [" + candidate.getClass().getSimpleName() + "] with the annotation type ["+ annotationType.getSimpleName()+ "].") @AT@ 4391 @LENGTH@ 154
------UPD SimpleName@@MethodName:isNull:[annotatedMethod.get(), "found more than one method on target class [" + candidate + "] with the annotation type ["+ candidate+ "]"] @TO@ MethodName:isNull:[annotatedMethod.get(), "found more than one method on target class [" + candidate.getClass().getSimpleName() + "] with the annotation type ["+ annotationType.getSimpleName()+ "]."] @AT@ 4398 @LENGTH@ 147
---------UPD InfixExpression@@"found more than one method on target class [" + candidate + "] with the annotation type ["+ candidate+ "]" @TO@ "found more than one method on target class [" + candidate.getClass().getSimpleName() + "] with the annotation type ["+ annotationType.getSimpleName()+ "]." @AT@ 4428 @LENGTH@ 116
------------DEL SimpleName@@candidate @AT@ 4477 @LENGTH@ 9
------------INS MethodInvocation@@candidate.getClass().getSimpleName() @TO@ InfixExpression@@"found more than one method on target class [" + candidate + "] with the annotation type ["+ candidate+ "]" @AT@ 4510 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@candidate.getClass().getSimpleName() @AT@ 4510 @LENGTH@ 20
---------------INS SimpleName@@Name:candidate @TO@ MethodInvocation@@candidate.getClass().getSimpleName() @AT@ 4510 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@candidate.getClass().getSimpleName() @AT@ 4531 @LENGTH@ 15
------------DEL SimpleName@@candidate @AT@ 4529 @LENGTH@ 9
------------UPD StringLiteral@@"]" @TO@ "]." @AT@ 4541 @LENGTH@ 3
------------INS MethodInvocation@@annotationType.getSimpleName() @TO@ InfixExpression@@"found more than one method on target class [" + candidate + "] with the annotation type ["+ candidate+ "]" @AT@ 4589 @LENGTH@ 30
---------------INS SimpleName@@Name:annotationType @TO@ MethodInvocation@@annotationType.getSimpleName() @AT@ 4589 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@annotationType.getSimpleName() @AT@ 4604 @LENGTH@ 15


UPD ThrowStatement@@ClassInstanceCreation:new ConnectException("Forced for testing - can not connect to remote server") @TO@ ClassInstanceCreation:new ConnectException("Forced for testing - cannot connect to remote server") @AT@ 4470 @LENGTH@ 84
---UPD ClassInstanceCreation@@ConnectException["Forced for testing - can not connect to remote server"] @TO@ ConnectException["Forced for testing - cannot connect to remote server"] @AT@ 4476 @LENGTH@ 77
------UPD StringLiteral@@"Forced for testing - can not connect to remote server" @TO@ "Forced for testing - cannot connect to remote server" @AT@ 4497 @LENGTH@ 55


UPD IfStatement@@if (endpoint.getRoom() == null) {  Chat privateChat=connection.getChatManager().createChat(endpoint.getParticipant(),this);  if (LOG.isInfoEnabled()) {    LOG.info("Open private chat to: " + privateChat.getParticipant());  }} else {  muc=new MultiUserChat(connection,endpoint.resolveRoom(connection));  muc.addMessageListener(this);  DiscussionHistory history=new DiscussionHistory();  history.setMaxChars(0);  muc.join(endpoint.getNickname(),null,history,SmackConfiguration.getPacketReplyTimeout());  if (LOG.isInfoEnabled()) {    LOG.info("Joined room: " + muc.getRoom() + " as: "+ endpoint.getNickname());  }} @TO@ if (endpoint.getRoom() == null) {  Chat privateChat=connection.getChatManager().createChat(endpoint.getParticipant(),this);  if (LOG.isInfoEnabled()) {    LOG.info("Open private chat to: " + privateChat.getParticipant());  }} else {  muc=new MultiUserChat(connection,endpoint.resolveRoom(connection));  muc.addMessageListener(this);  DiscussionHistory history=new DiscussionHistory();  history.setMaxChars(0);  muc.join(endpoint.getNickname(),null,history,SmackConfiguration.getPacketReplyTimeout());  if (LOG.isInfoEnabled()) {    LOG.info("Joined room: " + muc.getRoom() + " as: "+ endpoint.getNickname());  }  final ToContainsFilter toFilter=new ToContainsFilter(endpoint.getParticipant());  final AndFilter packetFilter=new AndFilter(new PacketTypeFilter(Presence.class),toFilter);  connection.addPacketListener(this,packetFilter);} @AT@ 2104 @LENGTH@ 821
---UPD Block@@ElseBody:{  muc=new MultiUserChat(connection,endpoint.resolveRoom(connection));  muc.addMessageListener(this);  DiscussionHistory history=new DiscussionHistory();  history.setMaxChars(0);  muc.join(endpoint.getNickname(),null,history,SmackConfiguration.getPacketReplyTimeout());  if (LOG.isInfoEnabled()) {    LOG.info("Joined room: " + muc.getRoom() + " as: "+ endpoint.getNickname());  }} @TO@ ElseBody:{  muc=new MultiUserChat(connection,endpoint.resolveRoom(connection));  muc.addMessageListener(this);  DiscussionHistory history=new DiscussionHistory();  history.setMaxChars(0);  muc.join(endpoint.getNickname(),null,history,SmackConfiguration.getPacketReplyTimeout());  if (LOG.isInfoEnabled()) {    LOG.info("Joined room: " + muc.getRoom() + " as: "+ endpoint.getNickname());  }  final ToContainsFilter toFilter=new ToContainsFilter(endpoint.getParticipant());  final AndFilter packetFilter=new AndFilter(new PacketTypeFilter(Presence.class),toFilter);  connection.addPacketListener(this,packetFilter);} @AT@ 2393 @LENGTH@ 532
------INS VariableDeclarationStatement@@final ToContainsFilter toFilter=new ToContainsFilter(endpoint.getParticipant()); @TO@ Block@@ElseBody:{  muc=new MultiUserChat(connection,endpoint.resolveRoom(connection));  muc.addMessageListener(this);  DiscussionHistory history=new DiscussionHistory();  history.setMaxChars(0);  muc.join(endpoint.getNickname(),null,history,SmackConfiguration.getPacketReplyTimeout());  if (LOG.isInfoEnabled()) {    LOG.info("Joined room: " + muc.getRoom() + " as: "+ endpoint.getNickname());  }} @AT@ 3239 @LENGTH@ 82
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ToContainsFilter toFilter=new ToContainsFilter(endpoint.getParticipant()); @AT@ 3239 @LENGTH@ 5
---------INS SimpleType@@ToContainsFilter @TO@ VariableDeclarationStatement@@final ToContainsFilter toFilter=new ToContainsFilter(endpoint.getParticipant()); @AT@ 3245 @LENGTH@ 16
---------INS VariableDeclarationFragment@@toFilter=new ToContainsFilter(endpoint.getParticipant()) @TO@ VariableDeclarationStatement@@final ToContainsFilter toFilter=new ToContainsFilter(endpoint.getParticipant()); @AT@ 3262 @LENGTH@ 58
------------INS SimpleName@@toFilter @TO@ VariableDeclarationFragment@@toFilter=new ToContainsFilter(endpoint.getParticipant()) @AT@ 3262 @LENGTH@ 8
------------INS ClassInstanceCreation@@ToContainsFilter[endpoint.getParticipant()] @TO@ VariableDeclarationFragment@@toFilter=new ToContainsFilter(endpoint.getParticipant()) @AT@ 3273 @LENGTH@ 47
---------------INS New@@new @TO@ ClassInstanceCreation@@ToContainsFilter[endpoint.getParticipant()] @AT@ 3273 @LENGTH@ 3
---------------INS SimpleType@@ToContainsFilter @TO@ ClassInstanceCreation@@ToContainsFilter[endpoint.getParticipant()] @AT@ 3277 @LENGTH@ 16
---------------INS MethodInvocation@@endpoint.getParticipant() @TO@ ClassInstanceCreation@@ToContainsFilter[endpoint.getParticipant()] @AT@ 3294 @LENGTH@ 25
------------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getParticipant() @AT@ 3294 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getParticipant:[] @TO@ MethodInvocation@@endpoint.getParticipant() @AT@ 3303 @LENGTH@ 16
------INS VariableDeclarationStatement@@final AndFilter packetFilter=new AndFilter(new PacketTypeFilter(Presence.class),toFilter); @TO@ Block@@ElseBody:{  muc=new MultiUserChat(connection,endpoint.resolveRoom(connection));  muc.addMessageListener(this);  DiscussionHistory history=new DiscussionHistory();  history.setMaxChars(0);  muc.join(endpoint.getNickname(),null,history,SmackConfiguration.getPacketReplyTimeout());  if (LOG.isInfoEnabled()) {    LOG.info("Joined room: " + muc.getRoom() + " as: "+ endpoint.getNickname());  }} @AT@ 3334 @LENGTH@ 93
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final AndFilter packetFilter=new AndFilter(new PacketTypeFilter(Presence.class),toFilter); @AT@ 3334 @LENGTH@ 5
---------INS SimpleType@@AndFilter @TO@ VariableDeclarationStatement@@final AndFilter packetFilter=new AndFilter(new PacketTypeFilter(Presence.class),toFilter); @AT@ 3340 @LENGTH@ 9
---------INS VariableDeclarationFragment@@packetFilter=new AndFilter(new PacketTypeFilter(Presence.class),toFilter) @TO@ VariableDeclarationStatement@@final AndFilter packetFilter=new AndFilter(new PacketTypeFilter(Presence.class),toFilter); @AT@ 3350 @LENGTH@ 76
------------INS SimpleName@@packetFilter @TO@ VariableDeclarationFragment@@packetFilter=new AndFilter(new PacketTypeFilter(Presence.class),toFilter) @AT@ 3350 @LENGTH@ 12
------------INS ClassInstanceCreation@@AndFilter[new PacketTypeFilter(Presence.class), toFilter] @TO@ VariableDeclarationFragment@@packetFilter=new AndFilter(new PacketTypeFilter(Presence.class),toFilter) @AT@ 3365 @LENGTH@ 61
---------------INS New@@new @TO@ ClassInstanceCreation@@AndFilter[new PacketTypeFilter(Presence.class), toFilter] @AT@ 3365 @LENGTH@ 3
---------------INS SimpleType@@AndFilter @TO@ ClassInstanceCreation@@AndFilter[new PacketTypeFilter(Presence.class), toFilter] @AT@ 3369 @LENGTH@ 9
---------------INS ClassInstanceCreation@@PacketTypeFilter[Presence.class] @TO@ ClassInstanceCreation@@AndFilter[new PacketTypeFilter(Presence.class), toFilter] @AT@ 3379 @LENGTH@ 36
------------------INS New@@new @TO@ ClassInstanceCreation@@PacketTypeFilter[Presence.class] @AT@ 3379 @LENGTH@ 3
------------------INS SimpleType@@PacketTypeFilter @TO@ ClassInstanceCreation@@PacketTypeFilter[Presence.class] @AT@ 3383 @LENGTH@ 16
------------------INS TypeLiteral@@Presence.class @TO@ ClassInstanceCreation@@PacketTypeFilter[Presence.class] @AT@ 3400 @LENGTH@ 14
---------------INS SimpleName@@toFilter @TO@ ClassInstanceCreation@@AndFilter[new PacketTypeFilter(Presence.class), toFilter] @AT@ 3417 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:connection.addPacketListener(this,packetFilter) @TO@ Block@@ElseBody:{  muc=new MultiUserChat(connection,endpoint.resolveRoom(connection));  muc.addMessageListener(this);  DiscussionHistory history=new DiscussionHistory();  history.setMaxChars(0);  muc.join(endpoint.getNickname(),null,history,SmackConfiguration.getPacketReplyTimeout());  if (LOG.isInfoEnabled()) {    LOG.info("Joined room: " + muc.getRoom() + " as: "+ endpoint.getNickname());  }} @AT@ 3440 @LENGTH@ 49
---------INS MethodInvocation@@connection.addPacketListener(this,packetFilter) @TO@ ExpressionStatement@@MethodInvocation:connection.addPacketListener(this,packetFilter) @AT@ 3440 @LENGTH@ 48
------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.addPacketListener(this,packetFilter) @AT@ 3440 @LENGTH@ 10
------------INS SimpleName@@MethodName:addPacketListener:[this, packetFilter] @TO@ MethodInvocation@@connection.addPacketListener(this,packetFilter) @AT@ 3451 @LENGTH@ 37
---------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:addPacketListener:[this, packetFilter] @AT@ 3469 @LENGTH@ 4
---------------INS SimpleName@@packetFilter @TO@ SimpleName@@MethodName:addPacketListener:[this, packetFilter] @AT@ 3475 @LENGTH@ 12


UPD EnhancedForStatement@@for (ComponentEntry entry : components.values()) {  if (entry.bundle == bundle) {    if (LOG.isDebugEnabled()) {      LOG.debug("Removing entry: " + entry.path + " in bundle "+ bundle.getSymbolicName());    }    components.remove(entry.name);  }} @TO@ for (ComponentEntry entry : entriesArray) {  if (entry.bundle == bundle) {    if (LOG.isDebugEnabled()) {      LOG.debug("Removing entry: " + entry.path + " in bundle "+ bundle.getSymbolicName());    }    components.remove(entry.name);    break;  }} @AT@ 4453 @LENGTH@ 332
---DEL MethodInvocation@@components.values() @AT@ 4481 @LENGTH@ 19
------DEL SimpleName@@Name:components @AT@ 4481 @LENGTH@ 10
------DEL SimpleName@@MethodName:values:[] @AT@ 4492 @LENGTH@ 8
---UPD IfStatement@@if (entry.bundle == bundle) {  if (LOG.isDebugEnabled()) {    LOG.debug("Removing entry: " + entry.path + " in bundle "+ bundle.getSymbolicName());  }  components.remove(entry.name);} @TO@ if (entry.bundle == bundle) {  if (LOG.isDebugEnabled()) {    LOG.debug("Removing entry: " + entry.path + " in bundle "+ bundle.getSymbolicName());  }  components.remove(entry.name);  break;} @AT@ 4516 @LENGTH@ 259
------UPD Block@@ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Removing entry: " + entry.path + " in bundle "+ bundle.getSymbolicName());  }  components.remove(entry.name);} @TO@ ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Removing entry: " + entry.path + " in bundle "+ bundle.getSymbolicName());  }  components.remove(entry.name);  break;} @AT@ 4544 @LENGTH@ 231
---------INS BreakStatement@@ @TO@ Block@@ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Removing entry: " + entry.path + " in bundle "+ bundle.getSymbolicName());  }  components.remove(entry.name);} @AT@ 4956 @LENGTH@ 6
---INS SimpleName@@entriesArray @TO@ EnhancedForStatement@@for (ComponentEntry entry : components.values()) {  if (entry.bundle == bundle) {    if (LOG.isDebugEnabled()) {      LOG.debug("Removing entry: " + entry.path + " in bundle "+ bundle.getSymbolicName());    }    components.remove(entry.name);  }} @AT@ 4666 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 1870 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 1870 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 1887 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 1897 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 1897 @LENGTH@ 13


UPD FieldDeclaration@@private, static, Log, [LOG=LogFactory.getLog(JmsHammerTest.class)] @TO@ private, static, final, Log, [LOG=LogFactory.getLog(JmsHammerTest.class)] @AT@ 1377 @LENGTH@ 64
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, Log, [LOG=LogFactory.getLog(JmsHammerTest.class)] @AT@ 1392 @LENGTH@ 5


UPD MethodDeclaration@@public, String, MethodName:resolveContentType, String fileName,  @TO@ String, MethodName:resolveContentType, String fileName,  @AT@ 1952 @LENGTH@ 50
---DEL Modifier@@public @AT@ 1952 @LENGTH@ 6


UPD ThrowStatement@@ClassInstanceCreation:new IOException("Can not create directory: " + parent) @TO@ ClassInstanceCreation:new IOException("Cannot create directory: " + parent) @AT@ 3469 @LENGTH@ 61
---UPD ClassInstanceCreation@@IOException["Can not create directory: " + parent] @TO@ IOException["Cannot create directory: " + parent] @AT@ 3475 @LENGTH@ 54
------UPD InfixExpression@@"Can not create directory: " + parent @TO@ "Cannot create directory: " + parent @AT@ 3491 @LENGTH@ 37
---------UPD StringLiteral@@"Can not create directory: " @TO@ "Cannot create directory: " @AT@ 3491 @LENGTH@ 28


UPD VariableDeclarationStatement@@String endpointFile=endpoint.getConfiguration().getFile(); @TO@ String endpointFile=endpoint.getConfiguration().getDirectory(); @AT@ 6945 @LENGTH@ 60
---UPD VariableDeclarationFragment@@endpointFile=endpoint.getConfiguration().getFile() @TO@ endpointFile=endpoint.getConfiguration().getDirectory() @AT@ 6952 @LENGTH@ 52
------UPD MethodInvocation@@endpoint.getConfiguration().getFile() @TO@ endpoint.getConfiguration().getDirectory() @AT@ 6967 @LENGTH@ 37
---------UPD SimpleName@@MethodName:getFile:[] @TO@ MethodName:getDirectory:[] @AT@ 6995 @LENGTH@ 9


UPD VariableDeclarationStatement@@String out=(String)template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec",in.toString()); @TO@ String out=(String)template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec",in.toString()); @AT@ 3197 @LENGTH@ 110
---UPD VariableDeclarationFragment@@out=(String)template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec",in.toString()) @TO@ out=(String)template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec",in.toString()) @AT@ 3204 @LENGTH@ 102
------UPD CastExpression@@(String)template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec",in.toString()) @TO@ (String)template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec",in.toString()) @AT@ 3210 @LENGTH@ 96
---------UPD MethodInvocation@@template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec",in.toString()) @TO@ template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec",in.toString()) @AT@ 3218 @LENGTH@ 88
------------UPD SimpleName@@MethodName:requestBody:["mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec", in.toString()] @TO@ MethodName:requestBody:["mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec", in.toString()] @AT@ 3227 @LENGTH@ 79
---------------UPD StringLiteral@@"mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec" @TO@ "mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec" @AT@ 3239 @LENGTH@ 51


INS MethodDeclaration@@public, static, XPathBuilder, MethodName:xpath, String text, Class resultType,  @TO@ TypeDeclaration@@[public]XPathBuilder, [Expression, Predicate, NamespaceAware] @AT@ 3526 @LENGTH@ 193
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, XPathBuilder, MethodName:xpath, String text, Class resultType,  @AT@ 3526 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, XPathBuilder, MethodName:xpath, String text, Class resultType,  @AT@ 3533 @LENGTH@ 6
---INS SimpleType@@XPathBuilder @TO@ MethodDeclaration@@public, static, XPathBuilder, MethodName:xpath, String text, Class resultType,  @AT@ 3540 @LENGTH@ 12
---INS SimpleName@@MethodName:xpath @TO@ MethodDeclaration@@public, static, XPathBuilder, MethodName:xpath, String text, Class resultType,  @AT@ 3553 @LENGTH@ 5
---INS SingleVariableDeclaration@@String text @TO@ MethodDeclaration@@public, static, XPathBuilder, MethodName:xpath, String text, Class resultType,  @AT@ 3559 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String text @AT@ 3559 @LENGTH@ 6
------INS SimpleName@@text @TO@ SingleVariableDeclaration@@String text @AT@ 3566 @LENGTH@ 4
---INS SingleVariableDeclaration@@Class resultType @TO@ MethodDeclaration@@public, static, XPathBuilder, MethodName:xpath, String text, Class resultType,  @AT@ 3572 @LENGTH@ 16
------INS SimpleType@@Class @TO@ SingleVariableDeclaration@@Class resultType @AT@ 3572 @LENGTH@ 5
------INS SimpleName@@resultType @TO@ SingleVariableDeclaration@@Class resultType @AT@ 3578 @LENGTH@ 10
---INS VariableDeclarationStatement@@XPathBuilder builder=new XPathBuilder(text); @TO@ MethodDeclaration@@public, static, XPathBuilder, MethodName:xpath, String text, Class resultType,  @AT@ 3600 @LENGTH@ 46
------INS SimpleType@@XPathBuilder @TO@ VariableDeclarationStatement@@XPathBuilder builder=new XPathBuilder(text); @AT@ 3600 @LENGTH@ 12
------INS VariableDeclarationFragment@@builder=new XPathBuilder(text) @TO@ VariableDeclarationStatement@@XPathBuilder builder=new XPathBuilder(text); @AT@ 3613 @LENGTH@ 32
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=new XPathBuilder(text) @AT@ 3613 @LENGTH@ 7
---------INS ClassInstanceCreation@@XPathBuilder[text] @TO@ VariableDeclarationFragment@@builder=new XPathBuilder(text) @AT@ 3623 @LENGTH@ 22
------------INS New@@new @TO@ ClassInstanceCreation@@XPathBuilder[text] @AT@ 3623 @LENGTH@ 3
------------INS SimpleType@@XPathBuilder @TO@ ClassInstanceCreation@@XPathBuilder[text] @AT@ 3627 @LENGTH@ 12
------------INS SimpleName@@text @TO@ ClassInstanceCreation@@XPathBuilder[text] @AT@ 3640 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:builder.setResultType(resultType) @TO@ MethodDeclaration@@public, static, XPathBuilder, MethodName:xpath, String text, Class resultType,  @AT@ 3655 @LENGTH@ 34
------INS MethodInvocation@@builder.setResultType(resultType) @TO@ ExpressionStatement@@MethodInvocation:builder.setResultType(resultType) @AT@ 3655 @LENGTH@ 33
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.setResultType(resultType) @AT@ 3655 @LENGTH@ 7
---------INS SimpleName@@MethodName:setResultType:[resultType] @TO@ MethodInvocation@@builder.setResultType(resultType) @AT@ 3663 @LENGTH@ 25
------------INS SimpleName@@resultType @TO@ SimpleName@@MethodName:setResultType:[resultType] @AT@ 3677 @LENGTH@ 10
---INS ReturnStatement@@SimpleName:builder @TO@ MethodDeclaration@@public, static, XPathBuilder, MethodName:xpath, String text, Class resultType,  @AT@ 3698 @LENGTH@ 15
------INS SimpleName@@builder @TO@ ReturnStatement@@SimpleName:builder @AT@ 3705 @LENGTH@ 7


UPD VariableDeclarationStatement@@GenericFileExchange<File> answer=new GenericFileExchange<File>(endpoint,ExchangePattern.InOut); @TO@ GenericFileExchange<File> answer=endpoint.createExchange(gf); @AT@ 5210 @LENGTH@ 98
---UPD VariableDeclarationFragment@@answer=new GenericFileExchange<File>(endpoint,ExchangePattern.InOut) @TO@ answer=endpoint.createExchange(gf) @AT@ 5236 @LENGTH@ 71
------INS MethodInvocation@@endpoint.createExchange(gf) @TO@ VariableDeclarationFragment@@answer=new GenericFileExchange<File>(endpoint,ExchangePattern.InOut) @AT@ 5205 @LENGTH@ 27
---------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.createExchange(gf) @AT@ 5205 @LENGTH@ 8
---------INS SimpleName@@MethodName:createExchange:[gf] @TO@ MethodInvocation@@endpoint.createExchange(gf) @AT@ 5214 @LENGTH@ 18
------------INS SimpleName@@gf @TO@ SimpleName@@MethodName:createExchange:[gf] @AT@ 5229 @LENGTH@ 2
------DEL ClassInstanceCreation@@GenericFileExchange<File>[endpoint, ExchangePattern.InOut] @AT@ 5245 @LENGTH@ 62
---------DEL New@@new @AT@ 5245 @LENGTH@ 3
---------DEL ParameterizedType@@GenericFileExchange<File> @AT@ 5249 @LENGTH@ 25
------------DEL SimpleType@@GenericFileExchange @AT@ 5249 @LENGTH@ 19
------------DEL SimpleType@@File @AT@ 5269 @LENGTH@ 4
---------DEL SimpleName@@endpoint @AT@ 5275 @LENGTH@ 8
---------DEL QualifiedName@@ExchangePattern.InOut @AT@ 5285 @LENGTH@ 21
------------DEL SimpleName@@ExchangePattern @AT@ 5285 @LENGTH@ 15
------------DEL SimpleName@@InOut @AT@ 5301 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:mock.setMinimumResultWaitTime(3000) @TO@ MethodInvocation:mock.setMinimumResultWaitTime(2500) @AT@ 5370 @LENGTH@ 36
---UPD MethodInvocation@@mock.setMinimumResultWaitTime(3000) @TO@ mock.setMinimumResultWaitTime(2500) @AT@ 5370 @LENGTH@ 35
------UPD SimpleName@@MethodName:setMinimumResultWaitTime:[3000] @TO@ MethodName:setMinimumResultWaitTime:[2500] @AT@ 5375 @LENGTH@ 30
---------UPD NumberLiteral@@3000 @TO@ 2500 @AT@ 5400 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean deleted=operations.deleteFile(file.getAbsoluteFileName()); @TO@ boolean deleted=operations.deleteFile(file.getAbsoluteFilePath()); @AT@ 1541 @LENGTH@ 68
---UPD VariableDeclarationFragment@@deleted=operations.deleteFile(file.getAbsoluteFileName()) @TO@ deleted=operations.deleteFile(file.getAbsoluteFilePath()) @AT@ 1549 @LENGTH@ 59
------UPD MethodInvocation@@operations.deleteFile(file.getAbsoluteFileName()) @TO@ operations.deleteFile(file.getAbsoluteFilePath()) @AT@ 1559 @LENGTH@ 49
---------UPD SimpleName@@MethodName:deleteFile:[file.getAbsoluteFileName()] @TO@ MethodName:deleteFile:[file.getAbsoluteFilePath()] @AT@ 1570 @LENGTH@ 38
------------UPD MethodInvocation@@file.getAbsoluteFileName() @TO@ file.getAbsoluteFilePath() @AT@ 1581 @LENGTH@ 26
---------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 1586 @LENGTH@ 21


UPD MethodDeclaration@@public, void, MethodName:testToBytes, FileNotFoundException, IOException,  @TO@ public, void, MethodName:testToBytes, Exception,  @AT@ 1239 @LENGTH@ 411
---DEL SimpleType@@FileNotFoundException @AT@ 1272 @LENGTH@ 21
---UPD SimpleType@@IOException @TO@ Exception @AT@ 1295 @LENGTH@ 11


UPD FieldDeclaration@@private, boolean, [sortEntries=false] @TO@ private, boolean, [sortEntries] @AT@ 1413 @LENGTH@ 36
---UPD VariableDeclarationFragment@@sortEntries=false @TO@ sortEntries @AT@ 1429 @LENGTH@ 19
------DEL BooleanLiteral@@false @AT@ 1443 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:parent.add("2") @TO@ MethodInvocation:parent.add(new SecuredModel("2")) @AT@ 2548 @LENGTH@ 16
---UPD MethodInvocation@@parent.add("2") @TO@ parent.add(new SecuredModel("2")) @AT@ 2548 @LENGTH@ 15
------UPD SimpleName@@MethodName:add:["2"] @TO@ MethodName:add:[new SecuredModel("2")] @AT@ 2555 @LENGTH@ 8
---------INS ClassInstanceCreation@@SecuredModel["2"] @TO@ SimpleName@@MethodName:add:["2"] @AT@ 2559 @LENGTH@ 21
------------INS New@@new @TO@ ClassInstanceCreation@@SecuredModel["2"] @AT@ 2559 @LENGTH@ 3
------------INS SimpleType@@SecuredModel @TO@ ClassInstanceCreation@@SecuredModel["2"] @AT@ 2563 @LENGTH@ 12
------------INS StringLiteral@@"2" @TO@ ClassInstanceCreation@@SecuredModel["2"] @AT@ 2576 @LENGTH@ 3
---------DEL StringLiteral@@"2" @AT@ 2559 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2694 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2694 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 2711 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2721 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2721 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:config.setFile(file.getPath()) @TO@ MethodInvocation:config.setDirectory(file.getPath()) @AT@ 1452 @LENGTH@ 31
---UPD MethodInvocation@@config.setFile(file.getPath()) @TO@ config.setDirectory(file.getPath()) @AT@ 1452 @LENGTH@ 30
------UPD SimpleName@@MethodName:setFile:[file.getPath()] @TO@ MethodName:setDirectory:[file.getPath()] @AT@ 1459 @LENGTH@ 23


INS MethodDeclaration@@public, List<TypeConverterLoader>, MethodName:getTypeConverterLoaders,  @TO@ TypeDeclaration@@[public]DefaultTypeConverter, [TypeConverter, TypeConverterRegistry] @AT@ 2797 @LENGTH@ 103
---INS Modifier@@public @TO@ MethodDeclaration@@public, List<TypeConverterLoader>, MethodName:getTypeConverterLoaders,  @AT@ 2797 @LENGTH@ 6
---INS ParameterizedType@@List<TypeConverterLoader> @TO@ MethodDeclaration@@public, List<TypeConverterLoader>, MethodName:getTypeConverterLoaders,  @AT@ 2804 @LENGTH@ 25
------INS SimpleType@@List @TO@ ParameterizedType@@List<TypeConverterLoader> @AT@ 2804 @LENGTH@ 4
------INS SimpleType@@TypeConverterLoader @TO@ ParameterizedType@@List<TypeConverterLoader> @AT@ 2809 @LENGTH@ 19
---INS SimpleName@@MethodName:getTypeConverterLoaders @TO@ MethodDeclaration@@public, List<TypeConverterLoader>, MethodName:getTypeConverterLoaders,  @AT@ 2830 @LENGTH@ 23
---INS ReturnStatement@@SimpleName:typeConverterLoaders @TO@ MethodDeclaration@@public, List<TypeConverterLoader>, MethodName:getTypeConverterLoaders,  @AT@ 2866 @LENGTH@ 28
------INS SimpleName@@typeConverterLoaders @TO@ ReturnStatement@@SimpleName:typeConverterLoaders @AT@ 2873 @LENGTH@ 20


UPD IfStatement@@if (endpoint.isFlattern()) {  int pos=name.lastIndexOf(File.separator);  if (pos == -1) {    pos=name.lastIndexOf('/');  }  if (pos != -1) {    name=name.substring(pos + 1);  }} @TO@ if (name != null && endpoint.isFlattern()) {  int pos=name.lastIndexOf(File.separator);  if (pos == -1) {    pos=name.lastIndexOf('/');  }  if (pos != -1) {    name=name.substring(pos + 1);  }} @AT@ 6889 @LENGTH@ 273
---DEL MethodInvocation@@endpoint.isFlattern() @AT@ 6893 @LENGTH@ 21
---INS InfixExpression@@name != null && endpoint.isFlattern() @TO@ IfStatement@@if (endpoint.isFlattern()) {  int pos=name.lastIndexOf(File.separator);  if (pos == -1) {    pos=name.lastIndexOf('/');  }  if (pos != -1) {    name=name.substring(pos + 1);  }} @AT@ 6977 @LENGTH@ 37
------INS InfixExpression@@name != null @TO@ InfixExpression@@name != null && endpoint.isFlattern() @AT@ 6977 @LENGTH@ 12
---------INS SimpleName@@name @TO@ InfixExpression@@name != null @AT@ 6977 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@name != null @AT@ 6981 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@name != null @AT@ 6985 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@name != null && endpoint.isFlattern() @AT@ 6989 @LENGTH@ 2
------INS MethodInvocation@@endpoint.isFlattern() @TO@ InfixExpression@@name != null && endpoint.isFlattern() @AT@ 6993 @LENGTH@ 21
---------MOV SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.isFlattern() @AT@ 6893 @LENGTH@ 8
---------MOV SimpleName@@MethodName:isFlattern:[] @TO@ MethodInvocation@@endpoint.isFlattern() @AT@ 6902 @LENGTH@ 12


UPD FieldDeclaration@@private, ExpressionSubElementDefinition, [expression] @TO@ private, ExpressionSubElementType, [expression] @AT@ 1858 @LENGTH@ 50
---UPD SimpleType@@ExpressionSubElementDefinition @TO@ ExpressionSubElementType @AT@ 1866 @LENGTH@ 30


UPD Block@@ThenBody:{  ChoiceType choice=null;  for (  ProcessorType processor : answer.getOutputs()) {    if (processor instanceof ChoiceType) {      choice=(ChoiceType)processor;      if (usePredicate.booleanValue() && getStopIntercept().booleanValue()) {        WhenType when=choice.getWhenClauses().get(0);        when.getOutputs().remove(this.getProceed());      }      addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue() && !getStopIntercept().booleanValue());      addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!getStopIntercept().booleanValue());      if (getStopIntercept().booleanValue()) {        addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());      }      break;    }  }  if (choice == null) {    addProceedProxy(this.getProceed(),answer.getProceed(),answer,!getStopIntercept().booleanValue());  }} @TO@ ThenBody:{  ChoiceType choice=null;  for (  ProcessorType processor : answer.getOutputs()) {    if (processor instanceof ChoiceType) {      choice=(ChoiceType)processor;      if (usePredicate && getStopIntercept()) {        WhenType when=choice.getWhenClauses().get(0);        when.getOutputs().remove(this.getProceed());      }      addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate && !getStopIntercept());      addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!getStopIntercept());      if (getStopIntercept()) {        addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate);      }      break;    }  }  if (choice == null) {    addProceedProxy(this.getProceed(),answer.getProceed(),answer,!getStopIntercept());  }} @AT@ 3635 @LENGTH@ 2186
---UPD EnhancedForStatement@@for (ProcessorType processor : answer.getOutputs()) {  if (processor instanceof ChoiceType) {    choice=(ChoiceType)processor;    if (usePredicate.booleanValue() && getStopIntercept().booleanValue()) {      WhenType when=choice.getWhenClauses().get(0);      when.getOutputs().remove(this.getProceed());    }    addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue() && !getStopIntercept().booleanValue());    addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!getStopIntercept().booleanValue());    if (getStopIntercept().booleanValue()) {      addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());    }    break;  }} @TO@ for (ProcessorType processor : answer.getOutputs()) {  if (processor instanceof ChoiceType) {    choice=(ChoiceType)processor;    if (usePredicate && getStopIntercept()) {      WhenType when=choice.getWhenClauses().get(0);      when.getOutputs().remove(this.getProceed());    }    addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate && !getStopIntercept());    addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!getStopIntercept());    if (getStopIntercept()) {      addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate);    }    break;  }} @AT@ 3764 @LENGTH@ 1806
------UPD IfStatement@@if (processor instanceof ChoiceType) {  choice=(ChoiceType)processor;  if (usePredicate.booleanValue() && getStopIntercept().booleanValue()) {    WhenType when=choice.getWhenClauses().get(0);    when.getOutputs().remove(this.getProceed());  }  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue() && !getStopIntercept().booleanValue());  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!getStopIntercept().booleanValue());  if (getStopIntercept().booleanValue()) {    addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());  }  break;} @TO@ if (processor instanceof ChoiceType) {  choice=(ChoiceType)processor;  if (usePredicate && getStopIntercept()) {    WhenType when=choice.getWhenClauses().get(0);    when.getOutputs().remove(this.getProceed());  }  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate && !getStopIntercept());  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!getStopIntercept());  if (getStopIntercept()) {    addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate);  }  break;} @AT@ 3834 @LENGTH@ 1722
---------UPD Block@@ThenBody:{  choice=(ChoiceType)processor;  if (usePredicate.booleanValue() && getStopIntercept().booleanValue()) {    WhenType when=choice.getWhenClauses().get(0);    when.getOutputs().remove(this.getProceed());  }  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue() && !getStopIntercept().booleanValue());  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!getStopIntercept().booleanValue());  if (getStopIntercept().booleanValue()) {    addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());  }  break;} @TO@ ThenBody:{  choice=(ChoiceType)processor;  if (usePredicate && getStopIntercept()) {    WhenType when=choice.getWhenClauses().get(0);    when.getOutputs().remove(this.getProceed());  }  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate && !getStopIntercept());  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!getStopIntercept());  if (getStopIntercept()) {    addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate);  }  break;} @AT@ 3871 @LENGTH@ 1685
------------UPD IfStatement@@if (usePredicate.booleanValue() && getStopIntercept().booleanValue()) {  WhenType when=choice.getWhenClauses().get(0);  when.getOutputs().remove(this.getProceed());} @TO@ if (usePredicate && getStopIntercept()) {  WhenType when=choice.getWhenClauses().get(0);  when.getOutputs().remove(this.getProceed());} @AT@ 4189 @LENGTH@ 234
---------------UPD InfixExpression@@usePredicate.booleanValue() && getStopIntercept().booleanValue() @TO@ usePredicate && getStopIntercept() @AT@ 4193 @LENGTH@ 64
------------------INS SimpleName@@usePredicate @TO@ InfixExpression@@usePredicate.booleanValue() && getStopIntercept().booleanValue() @AT@ 4185 @LENGTH@ 12
------------------DEL MethodInvocation@@usePredicate.booleanValue() @AT@ 4193 @LENGTH@ 27
---------------------DEL SimpleName@@Name:usePredicate @AT@ 4193 @LENGTH@ 12
---------------------DEL SimpleName@@MethodName:booleanValue:[] @AT@ 4206 @LENGTH@ 14
------------------INS MethodInvocation@@MethodName:getStopIntercept:[] @TO@ InfixExpression@@usePredicate.booleanValue() && getStopIntercept().booleanValue() @AT@ 4201 @LENGTH@ 18
------------------DEL MethodInvocation@@getStopIntercept().booleanValue() @AT@ 4224 @LENGTH@ 33
---------------------DEL MethodInvocation@@MethodName:getStopIntercept:[] @AT@ 4224 @LENGTH@ 18
---------------------DEL SimpleName@@MethodName:booleanValue:[] @AT@ 4243 @LENGTH@ 14
------------UPD ExpressionStatement@@MethodInvocation:addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue() && !getStopIntercept().booleanValue()) @TO@ MethodInvocation:addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate && !getStopIntercept()) @AT@ 4499 @LENGTH@ 212
---------------UPD MethodInvocation@@addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue() && !getStopIntercept().booleanValue()) @TO@ addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate && !getStopIntercept()) @AT@ 4499 @LENGTH@ 211
------------------UPD SimpleName@@MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getWhenClauses().get(choice.getWhenClauses().size() - 1), usePredicate.booleanValue() && !getStopIntercept().booleanValue()] @TO@ MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getWhenClauses().get(choice.getWhenClauses().size() - 1), usePredicate && !getStopIntercept()] @AT@ 4499 @LENGTH@ 211
---------------------UPD InfixExpression@@usePredicate.booleanValue() && !getStopIntercept().booleanValue() @TO@ usePredicate && !getStopIntercept() @AT@ 4644 @LENGTH@ 65
------------------------INS SimpleName@@usePredicate @TO@ InfixExpression@@usePredicate.booleanValue() && !getStopIntercept().booleanValue() @AT@ 4606 @LENGTH@ 12
------------------------INS SimpleName@@usePredicate @TO@ InfixExpression@@usePredicate.booleanValue() && !getStopIntercept().booleanValue() @AT@ 4606 @LENGTH@ 12
------------------------DEL MethodInvocation@@usePredicate.booleanValue() @AT@ 4644 @LENGTH@ 27
---------------------------DEL SimpleName@@Name:usePredicate @AT@ 4644 @LENGTH@ 12
---------------------------DEL SimpleName@@MethodName:booleanValue:[] @AT@ 4657 @LENGTH@ 14
------------------------UPD PrefixExpression@@!getStopIntercept().booleanValue() @TO@ !getStopIntercept() @AT@ 4675 @LENGTH@ 34
---------------------------INS MethodInvocation@@MethodName:getStopIntercept:[] @TO@ PrefixExpression@@!getStopIntercept().booleanValue() @AT@ 4623 @LENGTH@ 18
---------------------------INS MethodInvocation@@MethodName:getStopIntercept:[] @TO@ PrefixExpression@@!getStopIntercept().booleanValue() @AT@ 4623 @LENGTH@ 18
---------------------------DEL MethodInvocation@@getStopIntercept().booleanValue() @AT@ 4676 @LENGTH@ 33
------------------------------DEL MethodInvocation@@MethodName:getStopIntercept:[] @AT@ 4676 @LENGTH@ 18
------------------------------DEL SimpleName@@MethodName:booleanValue:[] @AT@ 4695 @LENGTH@ 14
------------UPD ExpressionStatement@@MethodInvocation:addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!getStopIntercept().booleanValue()) @TO@ MethodInvocation:addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!getStopIntercept()) @AT@ 4825 @LENGTH@ 115
---------------UPD MethodInvocation@@addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!getStopIntercept().booleanValue()) @TO@ addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!getStopIntercept()) @AT@ 4825 @LENGTH@ 114
------------------UPD SimpleName@@MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getOtherwise(), !getStopIntercept().booleanValue()] @TO@ MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getOtherwise(), !getStopIntercept()] @AT@ 4825 @LENGTH@ 114
---------------------UPD PrefixExpression@@!getStopIntercept().booleanValue() @TO@ !getStopIntercept() @AT@ 4904 @LENGTH@ 34
------------------------INS MethodInvocation@@MethodName:getStopIntercept:[] @TO@ PrefixExpression@@!getStopIntercept().booleanValue() @AT@ 4837 @LENGTH@ 18
------------------------INS MethodInvocation@@MethodName:getStopIntercept:[] @TO@ PrefixExpression@@!getStopIntercept().booleanValue() @AT@ 4837 @LENGTH@ 18
------------------------DEL MethodInvocation@@getStopIntercept().booleanValue() @AT@ 4905 @LENGTH@ 33
---------------------------DEL MethodInvocation@@MethodName:getStopIntercept:[] @AT@ 4905 @LENGTH@ 18
---------------------------DEL SimpleName@@MethodName:booleanValue:[] @AT@ 4924 @LENGTH@ 14
------------UPD IfStatement@@if (getStopIntercept().booleanValue()) {  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());} @TO@ if (getStopIntercept()) {  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate);} @AT@ 4962 @LENGTH@ 548
---------------INS MethodInvocation@@MethodName:getStopIntercept:[] @TO@ IfStatement@@if (getStopIntercept().booleanValue()) {  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());} @AT@ 4883 @LENGTH@ 18
---------------DEL MethodInvocation@@getStopIntercept().booleanValue() @AT@ 4966 @LENGTH@ 33
------------------DEL MethodInvocation@@MethodName:getStopIntercept:[] @AT@ 4966 @LENGTH@ 18
------------------DEL SimpleName@@MethodName:booleanValue:[] @AT@ 4985 @LENGTH@ 14
---------------UPD Block@@ThenBody:{  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());} @TO@ ThenBody:{  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate);} @AT@ 5001 @LENGTH@ 509
------------------UPD ExpressionStatement@@MethodInvocation:addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue()) @TO@ MethodInvocation:addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate) @AT@ 5310 @LENGTH@ 178
---------------------UPD MethodInvocation@@addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue()) @TO@ addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate) @AT@ 5310 @LENGTH@ 177
------------------------UPD SimpleName@@MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getWhenClauses().get(choice.getWhenClauses().size() - 1), usePredicate.booleanValue()] @TO@ MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getWhenClauses().get(choice.getWhenClauses().size() - 1), usePredicate] @AT@ 5310 @LENGTH@ 177
---------------------------INS SimpleName@@usePredicate @TO@ SimpleName@@MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getWhenClauses().get(choice.getWhenClauses().size() - 1), usePredicate.booleanValue()] @AT@ 5361 @LENGTH@ 12
---------------------------DEL MethodInvocation@@usePredicate.booleanValue() @AT@ 5459 @LENGTH@ 27
------------------------------DEL SimpleName@@Name:usePredicate @AT@ 5459 @LENGTH@ 12
------------------------------DEL SimpleName@@MethodName:booleanValue:[] @AT@ 5472 @LENGTH@ 14
---UPD IfStatement@@if (choice == null) {  addProceedProxy(this.getProceed(),answer.getProceed(),answer,!getStopIntercept().booleanValue());} @TO@ if (choice == null) {  addProceedProxy(this.getProceed(),answer.getProceed(),answer,!getStopIntercept());} @AT@ 5583 @LENGTH@ 228
------UPD Block@@ThenBody:{  addProceedProxy(this.getProceed(),answer.getProceed(),answer,!getStopIntercept().booleanValue());} @TO@ ThenBody:{  addProceedProxy(this.getProceed(),answer.getProceed(),answer,!getStopIntercept());} @AT@ 5603 @LENGTH@ 208
---------UPD ExpressionStatement@@MethodInvocation:addProceedProxy(this.getProceed(),answer.getProceed(),answer,!getStopIntercept().booleanValue()) @TO@ MethodInvocation:addProceedProxy(this.getProceed(),answer.getProceed(),answer,!getStopIntercept()) @AT@ 5697 @LENGTH@ 100
------------UPD MethodInvocation@@addProceedProxy(this.getProceed(),answer.getProceed(),answer,!getStopIntercept().booleanValue()) @TO@ addProceedProxy(this.getProceed(),answer.getProceed(),answer,!getStopIntercept()) @AT@ 5697 @LENGTH@ 99
---------------UPD SimpleName@@MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), answer, !getStopIntercept().booleanValue()] @TO@ MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), answer, !getStopIntercept()] @AT@ 5697 @LENGTH@ 99
------------------UPD PrefixExpression@@!getStopIntercept().booleanValue() @TO@ !getStopIntercept() @AT@ 5761 @LENGTH@ 34
---------------------INS MethodInvocation@@MethodName:getStopIntercept:[] @TO@ PrefixExpression@@!getStopIntercept().booleanValue() @AT@ 5649 @LENGTH@ 18
---------------------DEL MethodInvocation@@getStopIntercept().booleanValue() @AT@ 5762 @LENGTH@ 33
------------------------DEL MethodInvocation@@MethodName:getStopIntercept:[] @AT@ 5762 @LENGTH@ 18
------------------------DEL SimpleName@@MethodName:booleanValue:[] @AT@ 5781 @LENGTH@ 14


UPD MethodDeclaration@@public, void, MethodName:DONTtestGuice, Exception,  @TO@ public, void, MethodName:xtestGuice, Exception,  @AT@ 1746 @LENGTH@ 381
---UPD SimpleName@@MethodName:DONTtestGuice @TO@ MethodName:xtestGuice @AT@ 1758 @LENGTH@ 13


UPD FieldDeclaration@@private, String, [result="1,B2,Keira,Knightley,XX23456789,France OOO,450.45,EUR,14-01-2009"] @TO@ private, String, [result="1,B2,Keira,Knightley,XX23456789,France OOO,450.45,EUR,14-01-2009\r\n"] @AT@ 2087 @LENGTH@ 91
---UPD VariableDeclarationFragment@@result="1,B2,Keira,Knightley,XX23456789,France OOO,450.45,EUR,14-01-2009" @TO@ result="1,B2,Keira,Knightley,XX23456789,France OOO,450.45,EUR,14-01-2009\r\n" @AT@ 2102 @LENGTH@ 75
------UPD StringLiteral@@"1,B2,Keira,Knightley,XX23456789,France OOO,450.45,EUR,14-01-2009" @TO@ "1,B2,Keira,Knightley,XX23456789,France OOO,450.45,EUR,14-01-2009\r\n" @AT@ 2111 @LENGTH@ 66


UPD ExpressionStatement@@MethodInvocation:from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).setParallelProcessing(true).to(Constants.BANK1_URI,Constants.BANK2_URI,Constants.BANK3_URI) @TO@ MethodInvocation:from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).parallelProcessing(true).to(Constants.BANK1_URI,Constants.BANK2_URI,Constants.BANK3_URI) @AT@ 3529 @LENGTH@ 589
---UPD MethodInvocation@@from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).setParallelProcessing(true).to(Constants.BANK1_URI,Constants.BANK2_URI,Constants.BANK3_URI) @TO@ from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).parallelProcessing(true).to(Constants.BANK1_URI,Constants.BANK2_URI,Constants.BANK3_URI) @AT@ 3529 @LENGTH@ 588
------UPD MethodInvocation@@MethodName:setParallelProcessing:[true] @TO@ MethodName:parallelProcessing:[true] @AT@ 3529 @LENGTH@ 501


UPD Block@@ElseBody:{  if (StringUtils.hasText(request.getServletPath())) {    url.append(request.getContextPath());    url.append('/');    url.append(flowId);  } else {    url.append('/');    url.append(flowId);  }} @TO@ ElseBody:{  String servletPath=request.getServletPath();  if (StringUtils.hasText(servletPath)) {    url.append(request.getContextPath());    url.append('/');    url.append(flowId);    int dotIndex=servletPath.lastIndexOf('.');    if (dotIndex != -1) {      url.append(servletPath.substring(dotIndex));    }  } else {    url.append('/');    url.append(flowId);  }} @AT@ 3399 @LENGTH@ 210
---UPD IfStatement@@if (StringUtils.hasText(request.getServletPath())) {  url.append(request.getContextPath());  url.append('/');  url.append(flowId);} else {  url.append('/');  url.append(flowId);} @TO@ if (StringUtils.hasText(servletPath)) {  url.append(request.getContextPath());  url.append('/');  url.append(flowId);  int dotIndex=servletPath.lastIndexOf('.');  if (dotIndex != -1) {    url.append(servletPath.substring(dotIndex));  }} else {  url.append('/');  url.append(flowId);} @AT@ 3404 @LENGTH@ 201
------UPD MethodInvocation@@StringUtils.hasText(request.getServletPath()) @TO@ StringUtils.hasText(servletPath) @AT@ 3408 @LENGTH@ 45
---------UPD SimpleName@@MethodName:hasText:[request.getServletPath()] @TO@ MethodName:hasText:[servletPath] @AT@ 3420 @LENGTH@ 33
------------DEL MethodInvocation@@request.getServletPath() @AT@ 3428 @LENGTH@ 24
---------------DEL SimpleName@@Name:request @AT@ 3428 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getServletPath:[] @AT@ 3436 @LENGTH@ 16
------------INS SimpleName@@servletPath @TO@ SimpleName@@MethodName:hasText:[request.getServletPath()] @AT@ 3611 @LENGTH@ 11
------UPD Block@@ThenBody:{  url.append(request.getContextPath());  url.append('/');  url.append(flowId);} @TO@ ThenBody:{  url.append(request.getContextPath());  url.append('/');  url.append(flowId);  int dotIndex=servletPath.lastIndexOf('.');  if (dotIndex != -1) {    url.append(servletPath.substring(dotIndex));  }} @AT@ 3455 @LENGTH@ 93
---------INS VariableDeclarationStatement@@int dotIndex=servletPath.lastIndexOf('.'); @TO@ Block@@ThenBody:{  url.append(request.getContextPath());  url.append('/');  url.append(flowId);} @AT@ 3718 @LENGTH@ 44
------------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int dotIndex=servletPath.lastIndexOf('.'); @AT@ 3718 @LENGTH@ 3
------------INS VariableDeclarationFragment@@dotIndex=servletPath.lastIndexOf('.') @TO@ VariableDeclarationStatement@@int dotIndex=servletPath.lastIndexOf('.'); @AT@ 3722 @LENGTH@ 39
---------------INS SimpleName@@dotIndex @TO@ VariableDeclarationFragment@@dotIndex=servletPath.lastIndexOf('.') @AT@ 3722 @LENGTH@ 8
---------------INS MethodInvocation@@servletPath.lastIndexOf('.') @TO@ VariableDeclarationFragment@@dotIndex=servletPath.lastIndexOf('.') @AT@ 3733 @LENGTH@ 28
------------------INS SimpleName@@Name:servletPath @TO@ MethodInvocation@@servletPath.lastIndexOf('.') @AT@ 3733 @LENGTH@ 11
------------------INS SimpleName@@MethodName:lastIndexOf:['.'] @TO@ MethodInvocation@@servletPath.lastIndexOf('.') @AT@ 3745 @LENGTH@ 16
---------------------INS CharacterLiteral@@'.' @TO@ SimpleName@@MethodName:lastIndexOf:['.'] @AT@ 3757 @LENGTH@ 3
---------INS IfStatement@@if (dotIndex != -1) {  url.append(servletPath.substring(dotIndex));} @TO@ Block@@ThenBody:{  url.append(request.getContextPath());  url.append('/');  url.append(flowId);} @AT@ 3767 @LENGTH@ 77
------------INS InfixExpression@@dotIndex != -1 @TO@ IfStatement@@if (dotIndex != -1) {  url.append(servletPath.substring(dotIndex));} @AT@ 3771 @LENGTH@ 14
---------------INS SimpleName@@dotIndex @TO@ InfixExpression@@dotIndex != -1 @AT@ 3771 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@dotIndex != -1 @AT@ 3779 @LENGTH@ 2
---------------INS PrefixExpression@@-1 @TO@ InfixExpression@@dotIndex != -1 @AT@ 3783 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 3783 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 3784 @LENGTH@ 1
------------INS Block@@ThenBody:{  url.append(servletPath.substring(dotIndex));} @TO@ IfStatement@@if (dotIndex != -1) {  url.append(servletPath.substring(dotIndex));} @AT@ 3787 @LENGTH@ 57
---------------INS ExpressionStatement@@MethodInvocation:url.append(servletPath.substring(dotIndex)) @TO@ Block@@ThenBody:{  url.append(servletPath.substring(dotIndex));} @AT@ 3794 @LENGTH@ 44
------------------INS MethodInvocation@@url.append(servletPath.substring(dotIndex)) @TO@ ExpressionStatement@@MethodInvocation:url.append(servletPath.substring(dotIndex)) @AT@ 3794 @LENGTH@ 43
---------------------INS SimpleName@@Name:url @TO@ MethodInvocation@@url.append(servletPath.substring(dotIndex)) @AT@ 3794 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:append:[servletPath.substring(dotIndex)] @TO@ MethodInvocation@@url.append(servletPath.substring(dotIndex)) @AT@ 3798 @LENGTH@ 39
------------------------INS MethodInvocation@@servletPath.substring(dotIndex) @TO@ SimpleName@@MethodName:append:[servletPath.substring(dotIndex)] @AT@ 3805 @LENGTH@ 31
---------------------------INS SimpleName@@Name:servletPath @TO@ MethodInvocation@@servletPath.substring(dotIndex) @AT@ 3805 @LENGTH@ 11
---------------------------INS SimpleName@@MethodName:substring:[dotIndex] @TO@ MethodInvocation@@servletPath.substring(dotIndex) @AT@ 3817 @LENGTH@ 19
------------------------------INS SimpleName@@dotIndex @TO@ SimpleName@@MethodName:substring:[dotIndex] @AT@ 3827 @LENGTH@ 8
---INS VariableDeclarationStatement@@String servletPath=request.getServletPath(); @TO@ Block@@ElseBody:{  if (StringUtils.hasText(request.getServletPath())) {    url.append(request.getContextPath());    url.append('/');    url.append(flowId);  } else {    url.append('/');    url.append(flowId);  }} @AT@ 3537 @LENGTH@ 46
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String servletPath=request.getServletPath(); @AT@ 3537 @LENGTH@ 6
------INS VariableDeclarationFragment@@servletPath=request.getServletPath() @TO@ VariableDeclarationStatement@@String servletPath=request.getServletPath(); @AT@ 3544 @LENGTH@ 38
---------INS SimpleName@@servletPath @TO@ VariableDeclarationFragment@@servletPath=request.getServletPath() @AT@ 3544 @LENGTH@ 11
---------INS MethodInvocation@@request.getServletPath() @TO@ VariableDeclarationFragment@@servletPath=request.getServletPath() @AT@ 3558 @LENGTH@ 24
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getServletPath() @AT@ 3558 @LENGTH@ 7
------------INS SimpleName@@MethodName:getServletPath:[] @TO@ MethodInvocation@@request.getServletPath() @AT@ 3566 @LENGTH@ 16


UPD ReturnStatement@@MethodInvocation:handled(constant.createPredicate(Boolean.toString(handled))) @TO@ MethodInvocation:handled(expression) @AT@ 6049 @LENGTH@ 68
---UPD MethodInvocation@@handled(constant.createPredicate(Boolean.toString(handled))) @TO@ handled(expression) @AT@ 6056 @LENGTH@ 60
------UPD SimpleName@@MethodName:handled:[constant.createPredicate(Boolean.toString(handled))] @TO@ MethodName:handled:[expression] @AT@ 6056 @LENGTH@ 60
---------UPD MethodInvocation@@constant.createPredicate(Boolean.toString(handled)) @TO@ ExpressionBuilder.constantExpression(Boolean.toString(handled)) @AT@ 6064 @LENGTH@ 51
---------INS SimpleName@@expression @TO@ SimpleName@@MethodName:handled:[constant.createPredicate(Boolean.toString(handled))] @AT@ 6092 @LENGTH@ 10


UPD ReturnStatement@@InfixExpression:"UnitOfWrok(" + processor + ")" @TO@ InfixExpression:"UnitOfWork(" + processor + ")" @AT@ 1405 @LENGTH@ 39
---UPD InfixExpression@@"UnitOfWrok(" + processor + ")" @TO@ "UnitOfWork(" + processor + ")" @AT@ 1412 @LENGTH@ 31
------UPD StringLiteral@@"UnitOfWrok(" @TO@ "UnitOfWork(" @AT@ 1412 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:answer.setGenericFile(gf) @TO@ MethodInvocation:endpoint.configureMessage(gf,answer.getIn()) @AT@ 5317 @LENGTH@ 26
---UPD MethodInvocation@@answer.setGenericFile(gf) @TO@ endpoint.configureMessage(gf,answer.getIn()) @AT@ 5317 @LENGTH@ 25
------UPD SimpleName@@Name:answer @TO@ Name:endpoint @AT@ 5317 @LENGTH@ 6
------UPD SimpleName@@MethodName:setGenericFile:[gf] @TO@ MethodName:configureMessage:[gf, answer.getIn()] @AT@ 5324 @LENGTH@ 18
---------INS MethodInvocation@@answer.getIn() @TO@ SimpleName@@MethodName:setGenericFile:[gf] @AT@ 5272 @LENGTH@ 14
------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.getIn() @AT@ 5272 @LENGTH@ 6
------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@answer.getIn() @AT@ 5279 @LENGTH@ 7


UPD Block@@ThenBody:{  CamelContext camelContext=e.getContext();  if (camelContext != null) {    TypeConverter converter=camelContext.getTypeConverter();    try {      return converter.convertTo(type,e,body);    } catch (    NoTypeConversionAvailableException ex) {    }    return converter.convertTo(type,this);  }} @TO@ ThenBody:{  CamelContext camelContext=e.getContext();  if (camelContext != null) {    boolean tryConvert=true;    TypeConverter converter=camelContext.getTypeConverter();    if (body != null && converter instanceof DefaultTypeConverter) {      DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;      tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());    }    if (tryConvert) {      try {        return converter.convertTo(type,e,body);      } catch (      NoTypeConversionAvailableException ex) {      }    }    return converter.convertTo(type,this);  }} @AT@ 2065 @LENGTH@ 778
---UPD IfStatement@@if (camelContext != null) {  TypeConverter converter=camelContext.getTypeConverter();  try {    return converter.convertTo(type,e,body);  } catch (  NoTypeConversionAvailableException ex) {  }  return converter.convertTo(type,this);} @TO@ if (tryConvert) {  try {    return converter.convertTo(type,e,body);  } catch (  NoTypeConversionAvailableException ex) {  }} @AT@ 2135 @LENGTH@ 698
---INS IfStatement@@if (camelContext != null) {  boolean tryConvert=true;  TypeConverter converter=camelContext.getTypeConverter();  if (body != null && converter instanceof DefaultTypeConverter) {    DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;    tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());  }  if (tryConvert) {    try {      return converter.convertTo(type,e,body);    } catch (    NoTypeConversionAvailableException ex) {    }  }  return converter.convertTo(type,this);} @TO@ Block@@ThenBody:{  CamelContext camelContext=e.getContext();  if (camelContext != null) {    TypeConverter converter=camelContext.getTypeConverter();    try {      return converter.convertTo(type,e,body);    } catch (    NoTypeConversionAvailableException ex) {    }    return converter.convertTo(type,this);  }} @AT@ 2196 @LENGTH@ 1874
------INS InfixExpression@@camelContext != null @TO@ IfStatement@@if (camelContext != null) {  boolean tryConvert=true;  TypeConverter converter=camelContext.getTypeConverter();  if (body != null && converter instanceof DefaultTypeConverter) {    DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;    tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());  }  if (tryConvert) {    try {      return converter.convertTo(type,e,body);    } catch (    NoTypeConversionAvailableException ex) {    }  }  return converter.convertTo(type,this);} @AT@ 2200 @LENGTH@ 20
---------INS SimpleName@@camelContext @TO@ InfixExpression@@camelContext != null @AT@ 2200 @LENGTH@ 12
---------INS Operator@@!= @TO@ InfixExpression@@camelContext != null @AT@ 2212 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@camelContext != null @AT@ 2216 @LENGTH@ 4
------INS Block@@ThenBody:{  boolean tryConvert=true;  TypeConverter converter=camelContext.getTypeConverter();  if (body != null && converter instanceof DefaultTypeConverter) {    DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;    tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());  }  if (tryConvert) {    try {      return converter.convertTo(type,e,body);    } catch (    NoTypeConversionAvailableException ex) {    }  }  return converter.convertTo(type,this);} @TO@ IfStatement@@if (camelContext != null) {  boolean tryConvert=true;  TypeConverter converter=camelContext.getTypeConverter();  if (body != null && converter instanceof DefaultTypeConverter) {    DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;    tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());  }  if (tryConvert) {    try {      return converter.convertTo(type,e,body);    } catch (    NoTypeConversionAvailableException ex) {    }  }  return converter.convertTo(type,this);} @AT@ 2222 @LENGTH@ 1848
---------MOV IfStatement@@if (camelContext != null) {  TypeConverter converter=camelContext.getTypeConverter();  try {    return converter.convertTo(type,e,body);  } catch (  NoTypeConversionAvailableException ex) {  }  return converter.convertTo(type,this);} @TO@ Block@@ThenBody:{  boolean tryConvert=true;  TypeConverter converter=camelContext.getTypeConverter();  if (body != null && converter instanceof DefaultTypeConverter) {    DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;    tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());  }  if (tryConvert) {    try {      return converter.convertTo(type,e,body);    } catch (    NoTypeConversionAvailableException ex) {    }  }  return converter.convertTo(type,this);} @AT@ 2135 @LENGTH@ 698
------------DEL InfixExpression@@camelContext != null @AT@ 2139 @LENGTH@ 20
---------------DEL SimpleName@@camelContext @AT@ 2139 @LENGTH@ 12
---------------DEL Operator@@!= @AT@ 2151 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 2155 @LENGTH@ 4
------------UPD Block@@ThenBody:{  TypeConverter converter=camelContext.getTypeConverter();  try {    return converter.convertTo(type,e,body);  } catch (  NoTypeConversionAvailableException ex) {  }  return converter.convertTo(type,this);} @TO@ ThenBody:{  try {    return converter.convertTo(type,e,body);  } catch (  NoTypeConversionAvailableException ex) {  }} @AT@ 2161 @LENGTH@ 672
------------INS SimpleName@@tryConvert @TO@ IfStatement@@if (camelContext != null) {  TypeConverter converter=camelContext.getTypeConverter();  try {    return converter.convertTo(type,e,body);  } catch (  NoTypeConversionAvailableException ex) {  }  return converter.convertTo(type,this);} @AT@ 3363 @LENGTH@ 10
---------MOV VariableDeclarationStatement@@TypeConverter converter=camelContext.getTypeConverter(); @TO@ Block@@ThenBody:{  boolean tryConvert=true;  TypeConverter converter=camelContext.getTypeConverter();  if (body != null && converter instanceof DefaultTypeConverter) {    DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;    tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());  }  if (tryConvert) {    try {      return converter.convertTo(type,e,body);    } catch (    NoTypeConversionAvailableException ex) {    }  }  return converter.convertTo(type,this);} @AT@ 2179 @LENGTH@ 58
---------INS VariableDeclarationStatement@@boolean tryConvert=true; @TO@ Block@@ThenBody:{  boolean tryConvert=true;  TypeConverter converter=camelContext.getTypeConverter();  if (body != null && converter instanceof DefaultTypeConverter) {    DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;    tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());  }  if (tryConvert) {    try {      return converter.convertTo(type,e,body);    } catch (    NoTypeConversionAvailableException ex) {    }  }  return converter.convertTo(type,this);} @AT@ 2240 @LENGTH@ 26
------------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean tryConvert=true; @AT@ 2240 @LENGTH@ 7
------------INS VariableDeclarationFragment@@tryConvert=true @TO@ VariableDeclarationStatement@@boolean tryConvert=true; @AT@ 2248 @LENGTH@ 17
---------------INS SimpleName@@tryConvert @TO@ VariableDeclarationFragment@@tryConvert=true @AT@ 2248 @LENGTH@ 10
---------------INS BooleanLiteral@@true @TO@ VariableDeclarationFragment@@tryConvert=true @AT@ 2261 @LENGTH@ 4
---------MOV ReturnStatement@@MethodInvocation:converter.convertTo(type,this) @TO@ Block@@ThenBody:{  boolean tryConvert=true;  TypeConverter converter=camelContext.getTypeConverter();  if (body != null && converter instanceof DefaultTypeConverter) {    DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;    tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());  }  if (tryConvert) {    try {      return converter.convertTo(type,e,body);    } catch (    NoTypeConversionAvailableException ex) {    }  }  return converter.convertTo(type,this);} @AT@ 2780 @LENGTH@ 39
---------INS IfStatement@@if (body != null && converter instanceof DefaultTypeConverter) {  DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;  tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());} @TO@ Block@@ThenBody:{  boolean tryConvert=true;  TypeConverter converter=camelContext.getTypeConverter();  if (body != null && converter instanceof DefaultTypeConverter) {    DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;    tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());  }  if (tryConvert) {    try {      return converter.convertTo(type,e,body);    } catch (    NoTypeConversionAvailableException ex) {    }  }  return converter.convertTo(type,this);} @AT@ 2874 @LENGTH@ 468
------------INS InfixExpression@@body != null && converter instanceof DefaultTypeConverter @TO@ IfStatement@@if (body != null && converter instanceof DefaultTypeConverter) {  DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;  tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());} @AT@ 2878 @LENGTH@ 57
---------------INS InfixExpression@@body != null @TO@ InfixExpression@@body != null && converter instanceof DefaultTypeConverter @AT@ 2878 @LENGTH@ 12
------------------INS SimpleName@@body @TO@ InfixExpression@@body != null @AT@ 2878 @LENGTH@ 4
------------------INS Operator@@!= @TO@ InfixExpression@@body != null @AT@ 2882 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@body != null @AT@ 2886 @LENGTH@ 4
---------------INS Operator@@&& @TO@ InfixExpression@@body != null && converter instanceof DefaultTypeConverter @AT@ 2890 @LENGTH@ 2
---------------INS InstanceofExpression@@converter instanceof DefaultTypeConverter @TO@ InfixExpression@@body != null && converter instanceof DefaultTypeConverter @AT@ 2894 @LENGTH@ 41
------------------INS SimpleName@@converter @TO@ InstanceofExpression@@converter instanceof DefaultTypeConverter @AT@ 2894 @LENGTH@ 9
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@converter instanceof DefaultTypeConverter @AT@ 2904 @LENGTH@ 10
------------------INS SimpleType@@DefaultTypeConverter @TO@ InstanceofExpression@@converter instanceof DefaultTypeConverter @AT@ 2915 @LENGTH@ 20
------------INS Block@@ThenBody:{  DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;  tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());} @TO@ IfStatement@@if (body != null && converter instanceof DefaultTypeConverter) {  DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;  tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());} @AT@ 2937 @LENGTH@ 405
---------------INS VariableDeclarationStatement@@DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter; @TO@ Block@@ThenBody:{  DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;  tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());} @AT@ 2959 @LENGTH@ 77
------------------INS SimpleType@@DefaultTypeConverter @TO@ VariableDeclarationStatement@@DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter; @AT@ 2959 @LENGTH@ 20
------------------INS VariableDeclarationFragment@@defaultTypeConverter=(DefaultTypeConverter)converter @TO@ VariableDeclarationStatement@@DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter; @AT@ 2980 @LENGTH@ 55
---------------------INS SimpleName@@defaultTypeConverter @TO@ VariableDeclarationFragment@@defaultTypeConverter=(DefaultTypeConverter)converter @AT@ 2980 @LENGTH@ 20
---------------------INS CastExpression@@(DefaultTypeConverter)converter @TO@ VariableDeclarationFragment@@defaultTypeConverter=(DefaultTypeConverter)converter @AT@ 3003 @LENGTH@ 32
------------------------INS SimpleType@@DefaultTypeConverter @TO@ CastExpression@@(DefaultTypeConverter)converter @AT@ 3004 @LENGTH@ 20
------------------------INS SimpleName@@converter @TO@ CastExpression@@(DefaultTypeConverter)converter @AT@ 3026 @LENGTH@ 9
---------------INS ExpressionStatement@@Assignment:tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass()) @TO@ Block@@ThenBody:{  DefaultTypeConverter defaultTypeConverter=(DefaultTypeConverter)converter;  tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass());} @AT@ 3248 @LENGTH@ 76
------------------INS Assignment@@tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass()) @TO@ ExpressionStatement@@Assignment:tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass()) @AT@ 3248 @LENGTH@ 75
---------------------INS SimpleName@@tryConvert @TO@ Assignment@@tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass()) @AT@ 3248 @LENGTH@ 10
---------------------INS Operator@@= @TO@ Assignment@@tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass()) @AT@ 3258 @LENGTH@ 1
---------------------INS PrefixExpression@@!defaultTypeConverter.hasNoConverterFor(type,body.getClass()) @TO@ Assignment@@tryConvert=!defaultTypeConverter.hasNoConverterFor(type,body.getClass()) @AT@ 3261 @LENGTH@ 62
------------------------INS Operator@@! @TO@ PrefixExpression@@!defaultTypeConverter.hasNoConverterFor(type,body.getClass()) @AT@ 3261 @LENGTH@ 1
------------------------INS MethodInvocation@@defaultTypeConverter.hasNoConverterFor(type,body.getClass()) @TO@ PrefixExpression@@!defaultTypeConverter.hasNoConverterFor(type,body.getClass()) @AT@ 3262 @LENGTH@ 61
---------------------------INS SimpleName@@Name:defaultTypeConverter @TO@ MethodInvocation@@defaultTypeConverter.hasNoConverterFor(type,body.getClass()) @AT@ 3262 @LENGTH@ 20
---------------------------INS SimpleName@@MethodName:hasNoConverterFor:[type, body.getClass()] @TO@ MethodInvocation@@defaultTypeConverter.hasNoConverterFor(type,body.getClass()) @AT@ 3283 @LENGTH@ 40
------------------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:hasNoConverterFor:[type, body.getClass()] @AT@ 3301 @LENGTH@ 4
------------------------------INS MethodInvocation@@body.getClass() @TO@ SimpleName@@MethodName:hasNoConverterFor:[type, body.getClass()] @AT@ 3307 @LENGTH@ 15
---------------------------------INS SimpleName@@Name:body @TO@ MethodInvocation@@body.getClass() @AT@ 3307 @LENGTH@ 4
---------------------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@body.getClass() @AT@ 3312 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:log.error("Failed to addNotificationListener ",e) @TO@ MethodInvocation:LOG.error("Failed to addNotificationListener ",e) @AT@ 2231 @LENGTH@ 51
---UPD MethodInvocation@@log.error("Failed to addNotificationListener ",e) @TO@ LOG.error("Failed to addNotificationListener ",e) @AT@ 2231 @LENGTH@ 50
------UPD SimpleName@@Name:log @TO@ Name:LOG @AT@ 2231 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"claus.txt") @TO@ MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"claus.txt") @AT@ 1443 @LENGTH@ 100
---UPD MethodInvocation@@template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"claus.txt") @TO@ template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"claus.txt") @AT@ 1443 @LENGTH@ 99
------UPD SimpleName@@MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", FileComponent.HEADER_FILE_NAME, "claus.txt"] @TO@ MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", NewFileComponent.HEADER_FILE_NAME, "claus.txt"] @AT@ 1452 @LENGTH@ 90
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 1498 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 1498 @LENGTH@ 13


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]ToStringTypeConverter, [TypeConverter] @AT@ 1527 @LENGTH@ 107
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 1527 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 1538 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 1540 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 1559 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 1559 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 1559 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 1565 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 1568 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 1574 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 1574 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 1581 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 1598 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 1605 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 1605 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 1615 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 1621 @LENGTH@ 5


MOV ExpressionStatement@@MethodInvocation:provider.setJmsTemplate(jmsTemplate) @TO@ MethodDeclaration@@public, void, MethodName:testInternalRetrySuccessOnSecondAttemptWithItemProvider, Exception,  @AT@ 5953 @LENGTH@ 37


INS MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @TO@ TypeDeclaration@@[public]TestVFSConfigurationBuilder, TestCase @AT@ 39646 @LENGTH@ 831
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 39646 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 39653 @LENGTH@ 4
---INS SimpleName@@MethodName:testFileMonitor2 @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 39658 @LENGTH@ 16
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 39684 @LENGTH@ 9
---INS VariableDeclarationStatement@@File input=new File("target/test-classes/testMultiConfiguration_1002.xml"); @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 39746 @LENGTH@ 77
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File input=new File("target/test-classes/testMultiConfiguration_1002.xml"); @AT@ 39746 @LENGTH@ 4
------INS VariableDeclarationFragment@@input=new File("target/test-classes/testMultiConfiguration_1002.xml") @TO@ VariableDeclarationStatement@@File input=new File("target/test-classes/testMultiConfiguration_1002.xml"); @AT@ 39751 @LENGTH@ 71
---------INS SimpleName@@input @TO@ VariableDeclarationFragment@@input=new File("target/test-classes/testMultiConfiguration_1002.xml") @AT@ 39751 @LENGTH@ 5
---------INS ClassInstanceCreation@@File["target/test-classes/testMultiConfiguration_1002.xml"] @TO@ VariableDeclarationFragment@@input=new File("target/test-classes/testMultiConfiguration_1002.xml") @AT@ 39759 @LENGTH@ 63
------------INS New@@new @TO@ ClassInstanceCreation@@File["target/test-classes/testMultiConfiguration_1002.xml"] @AT@ 39759 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["target/test-classes/testMultiConfiguration_1002.xml"] @AT@ 39763 @LENGTH@ 4
------------INS StringLiteral@@"target/test-classes/testMultiConfiguration_1002.xml" @TO@ ClassInstanceCreation@@File["target/test-classes/testMultiConfiguration_1002.xml"] @AT@ 39768 @LENGTH@ 53
---INS VariableDeclarationStatement@@File output=new File("target/test-classes/testwrite/testMultiConfiguration_1002.xml"); @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 39832 @LENGTH@ 88
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File output=new File("target/test-classes/testwrite/testMultiConfiguration_1002.xml"); @AT@ 39832 @LENGTH@ 4
------INS VariableDeclarationFragment@@output=new File("target/test-classes/testwrite/testMultiConfiguration_1002.xml") @TO@ VariableDeclarationStatement@@File output=new File("target/test-classes/testwrite/testMultiConfiguration_1002.xml"); @AT@ 39837 @LENGTH@ 82
---------INS SimpleName@@output @TO@ VariableDeclarationFragment@@output=new File("target/test-classes/testwrite/testMultiConfiguration_1002.xml") @AT@ 39837 @LENGTH@ 6
---------INS ClassInstanceCreation@@File["target/test-classes/testwrite/testMultiConfiguration_1002.xml"] @TO@ VariableDeclarationFragment@@output=new File("target/test-classes/testwrite/testMultiConfiguration_1002.xml") @AT@ 39846 @LENGTH@ 73
------------INS New@@new @TO@ ClassInstanceCreation@@File["target/test-classes/testwrite/testMultiConfiguration_1002.xml"] @AT@ 39846 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["target/test-classes/testwrite/testMultiConfiguration_1002.xml"] @AT@ 39850 @LENGTH@ 4
------------INS StringLiteral@@"target/test-classes/testwrite/testMultiConfiguration_1002.xml" @TO@ ClassInstanceCreation@@File["target/test-classes/testwrite/testMultiConfiguration_1002.xml"] @AT@ 39855 @LENGTH@ 63
---INS ExpressionStatement@@MethodInvocation:output.delete() @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 39929 @LENGTH@ 16
------INS MethodInvocation@@output.delete() @TO@ ExpressionStatement@@MethodInvocation:output.delete() @AT@ 39929 @LENGTH@ 15
---------INS SimpleName@@Name:output @TO@ MethodInvocation@@output.delete() @AT@ 39929 @LENGTH@ 6
---------INS SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@output.delete() @AT@ 39936 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:factory.setFile(FILEMONITOR_FILE) @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 39955 @LENGTH@ 34
------INS MethodInvocation@@factory.setFile(FILEMONITOR_FILE) @TO@ ExpressionStatement@@MethodInvocation:factory.setFile(FILEMONITOR_FILE) @AT@ 39955 @LENGTH@ 33
---------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.setFile(FILEMONITOR_FILE) @AT@ 39955 @LENGTH@ 7
---------INS SimpleName@@MethodName:setFile:[FILEMONITOR_FILE] @TO@ MethodInvocation@@factory.setFile(FILEMONITOR_FILE) @AT@ 39963 @LENGTH@ 25
------------INS SimpleName@@FILEMONITOR_FILE @TO@ SimpleName@@MethodName:setFile:[FILEMONITOR_FILE] @AT@ 39971 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:FileSystem.resetDefaultFileSystem() @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 39998 @LENGTH@ 36
------INS MethodInvocation@@FileSystem.resetDefaultFileSystem() @TO@ ExpressionStatement@@MethodInvocation:FileSystem.resetDefaultFileSystem() @AT@ 39998 @LENGTH@ 35
---------INS SimpleName@@Name:FileSystem @TO@ MethodInvocation@@FileSystem.resetDefaultFileSystem() @AT@ 39998 @LENGTH@ 10
---------INS SimpleName@@MethodName:resetDefaultFileSystem:[] @TO@ MethodInvocation@@FileSystem.resetDefaultFileSystem() @AT@ 40009 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:System.getProperties().remove("Id") @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 40043 @LENGTH@ 36
------INS MethodInvocation@@System.getProperties().remove("Id") @TO@ ExpressionStatement@@MethodInvocation:System.getProperties().remove("Id") @AT@ 40043 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:getProperties:[] @TO@ MethodInvocation@@System.getProperties().remove("Id") @AT@ 40043 @LENGTH@ 22
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperties().remove("Id") @AT@ 40043 @LENGTH@ 6
---------INS SimpleName@@MethodName:remove:["Id"] @TO@ MethodInvocation@@System.getProperties().remove("Id") @AT@ 40066 @LENGTH@ 12
------------INS StringLiteral@@"Id" @TO@ SimpleName@@MethodName:remove:["Id"] @AT@ 40073 @LENGTH@ 4
---INS VariableDeclarationStatement@@CombinedConfiguration config=factory.getConfiguration(true); @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 40089 @LENGTH@ 62
------INS SimpleType@@CombinedConfiguration @TO@ VariableDeclarationStatement@@CombinedConfiguration config=factory.getConfiguration(true); @AT@ 40089 @LENGTH@ 21
------INS VariableDeclarationFragment@@config=factory.getConfiguration(true) @TO@ VariableDeclarationStatement@@CombinedConfiguration config=factory.getConfiguration(true); @AT@ 40111 @LENGTH@ 39
---------INS SimpleName@@config @TO@ VariableDeclarationFragment@@config=factory.getConfiguration(true) @AT@ 40111 @LENGTH@ 6
---------INS MethodInvocation@@factory.getConfiguration(true) @TO@ VariableDeclarationFragment@@config=factory.getConfiguration(true) @AT@ 40120 @LENGTH@ 30
------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getConfiguration(true) @AT@ 40120 @LENGTH@ 7
------------INS SimpleName@@MethodName:getConfiguration:[true] @TO@ MethodInvocation@@factory.getConfiguration(true) @AT@ 40128 @LENGTH@ 22
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getConfiguration:[true] @AT@ 40145 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertNotNull(config) @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 40160 @LENGTH@ 22
------INS MethodInvocation@@assertNotNull(config) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(config) @AT@ 40160 @LENGTH@ 21
---------INS SimpleName@@MethodName:assertNotNull:[config] @TO@ MethodInvocation@@assertNotNull(config) @AT@ 40160 @LENGTH@ 21
------------INS SimpleName@@config @TO@ SimpleName@@MethodName:assertNotNull:[config] @AT@ 40174 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:verify("1002",config,50) @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 40192 @LENGTH@ 27
------INS MethodInvocation@@verify("1002",config,50) @TO@ ExpressionStatement@@MethodInvocation:verify("1002",config,50) @AT@ 40192 @LENGTH@ 26
---------INS SimpleName@@MethodName:verify:["1002", config, 50] @TO@ MethodInvocation@@verify("1002",config,50) @AT@ 40192 @LENGTH@ 26
------------INS StringLiteral@@"1002" @TO@ SimpleName@@MethodName:verify:["1002", config, 50] @AT@ 40199 @LENGTH@ 6
------------INS SimpleName@@config @TO@ SimpleName@@MethodName:verify:["1002", config, 50] @AT@ 40207 @LENGTH@ 6
------------INS NumberLiteral@@50 @TO@ SimpleName@@MethodName:verify:["1002", config, 50] @AT@ 40215 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 40228 @LENGTH@ 19
------INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 40228 @LENGTH@ 18
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 40228 @LENGTH@ 6
---------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 40235 @LENGTH@ 11
------------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 40241 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:output.getParentFile().mkdir() @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 40257 @LENGTH@ 31
------INS MethodInvocation@@output.getParentFile().mkdir() @TO@ ExpressionStatement@@MethodInvocation:output.getParentFile().mkdir() @AT@ 40257 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:getParentFile:[] @TO@ MethodInvocation@@output.getParentFile().mkdir() @AT@ 40257 @LENGTH@ 22
---------INS SimpleName@@Name:output @TO@ MethodInvocation@@output.getParentFile().mkdir() @AT@ 40257 @LENGTH@ 6
---------INS SimpleName@@MethodName:mkdir:[] @TO@ MethodInvocation@@output.getParentFile().mkdir() @AT@ 40280 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:copyFile(input,output) @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 40297 @LENGTH@ 24
------INS MethodInvocation@@copyFile(input,output) @TO@ ExpressionStatement@@MethodInvocation:copyFile(input,output) @AT@ 40297 @LENGTH@ 23
---------INS SimpleName@@MethodName:copyFile:[input, output] @TO@ MethodInvocation@@copyFile(input,output) @AT@ 40297 @LENGTH@ 23
------------INS SimpleName@@input @TO@ SimpleName@@MethodName:copyFile:[input, output] @AT@ 40306 @LENGTH@ 5
------------INS SimpleName@@output @TO@ SimpleName@@MethodName:copyFile:[input, output] @AT@ 40313 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 40391 @LENGTH@ 19
------INS MethodInvocation@@Thread.sleep(2000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @AT@ 40391 @LENGTH@ 18
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 40391 @LENGTH@ 6
---------INS SimpleName@@MethodName:sleep:[2000] @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 40398 @LENGTH@ 11
------------INS NumberLiteral@@2000 @TO@ SimpleName@@MethodName:sleep:[2000] @AT@ 40404 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:verify("1002",config,25) @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 40419 @LENGTH@ 27
------INS MethodInvocation@@verify("1002",config,25) @TO@ ExpressionStatement@@MethodInvocation:verify("1002",config,25) @AT@ 40419 @LENGTH@ 26
---------INS SimpleName@@MethodName:verify:["1002", config, 25] @TO@ MethodInvocation@@verify("1002",config,25) @AT@ 40419 @LENGTH@ 26
------------INS StringLiteral@@"1002" @TO@ SimpleName@@MethodName:verify:["1002", config, 25] @AT@ 40426 @LENGTH@ 6
------------INS SimpleName@@config @TO@ SimpleName@@MethodName:verify:["1002", config, 25] @AT@ 40434 @LENGTH@ 6
------------INS NumberLiteral@@25 @TO@ SimpleName@@MethodName:verify:["1002", config, 25] @AT@ 40442 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:output.delete() @TO@ MethodDeclaration@@public, void, MethodName:testFileMonitor2, Exception,  @AT@ 40455 @LENGTH@ 16
------INS MethodInvocation@@output.delete() @TO@ ExpressionStatement@@MethodInvocation:output.delete() @AT@ 40455 @LENGTH@ 15
---------INS SimpleName@@Name:output @TO@ MethodInvocation@@output.delete() @AT@ 40455 @LENGTH@ 6
---------INS SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@output.delete() @AT@ 40462 @LENGTH@ 8


UPD VariableDeclarationStatement@@String lockFileName=file.getAbsoluteFileName() + FileComponent.DEFAULT_LOCK_FILE_POSTFIX; @TO@ String lockFileName=file.getAbsoluteFilePath() + FileComponent.DEFAULT_LOCK_FILE_POSTFIX; @AT@ 2100 @LENGTH@ 91
---UPD VariableDeclarationFragment@@lockFileName=file.getAbsoluteFileName() + FileComponent.DEFAULT_LOCK_FILE_POSTFIX @TO@ lockFileName=file.getAbsoluteFilePath() + FileComponent.DEFAULT_LOCK_FILE_POSTFIX @AT@ 2107 @LENGTH@ 83
------UPD InfixExpression@@file.getAbsoluteFileName() + FileComponent.DEFAULT_LOCK_FILE_POSTFIX @TO@ file.getAbsoluteFilePath() + FileComponent.DEFAULT_LOCK_FILE_POSTFIX @AT@ 2122 @LENGTH@ 68
---------UPD MethodInvocation@@file.getAbsoluteFileName() @TO@ file.getAbsoluteFilePath() @AT@ 2122 @LENGTH@ 26
------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 2127 @LENGTH@ 21


UPD FieldDeclaration@@private, static, final, String[], [REMAINING_IN_PHASES={Phase.RECEIVE,Phase.INVOKE,Phase.POST_INVOKE}] @TO@ private, static, final, String[], [REMAINING_IN_PHASES={Phase.RECEIVE,Phase.USER_STREAM,Phase.INVOKE,Phase.POST_INVOKE}] @AT@ 1847 @LENGTH@ 110
---UPD VariableDeclarationFragment@@REMAINING_IN_PHASES={Phase.RECEIVE,Phase.INVOKE,Phase.POST_INVOKE} @TO@ REMAINING_IN_PHASES={Phase.RECEIVE,Phase.USER_STREAM,Phase.INVOKE,Phase.POST_INVOKE} @AT@ 1877 @LENGTH@ 79
------UPD ArrayInitializer@@{Phase.RECEIVE,Phase.INVOKE,Phase.POST_INVOKE} @TO@ {Phase.RECEIVE,Phase.USER_STREAM,Phase.INVOKE,Phase.POST_INVOKE} @AT@ 1899 @LENGTH@ 57
---------INS QualifiedName@@Phase.USER_STREAM @TO@ ArrayInitializer@@{Phase.RECEIVE,Phase.INVOKE,Phase.POST_INVOKE} @AT@ 1916 @LENGTH@ 17
------------INS SimpleName@@Phase @TO@ QualifiedName@@Phase.USER_STREAM @AT@ 1916 @LENGTH@ 5
------------INS SimpleName@@USER_STREAM @TO@ QualifiedName@@Phase.USER_STREAM @AT@ 1922 @LENGTH@ 11


UPD FieldDeclaration@@private, int, [simpleCounter=0] @TO@ private, int, [simpleCounter] @AT@ 1053 @LENGTH@ 30
---UPD VariableDeclarationFragment@@simpleCounter=0 @TO@ simpleCounter @AT@ 1065 @LENGTH@ 17
------DEL NumberLiteral@@0 @AT@ 1081 @LENGTH@ 1


INS IfStatement@@if (ObjectHelper.isEmpty(path)) {  path=".";} @TO@ MethodDeclaration@@public, List, MethodName:listFiles, String path, RemoteFileOperationFailedException,  @AT@ 7707 @LENGTH@ 67
---INS MethodInvocation@@ObjectHelper.isEmpty(path) @TO@ IfStatement@@if (ObjectHelper.isEmpty(path)) {  path=".";} @AT@ 7711 @LENGTH@ 26
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(path) @AT@ 7711 @LENGTH@ 12
------INS SimpleName@@MethodName:isEmpty:[path] @TO@ MethodInvocation@@ObjectHelper.isEmpty(path) @AT@ 7724 @LENGTH@ 13
---------INS SimpleName@@path @TO@ SimpleName@@MethodName:isEmpty:[path] @AT@ 7732 @LENGTH@ 4
---INS Block@@ThenBody:{  path=".";} @TO@ IfStatement@@if (ObjectHelper.isEmpty(path)) {  path=".";} @AT@ 7739 @LENGTH@ 35
------INS ExpressionStatement@@Assignment:path="." @TO@ Block@@ThenBody:{  path=".";} @AT@ 7753 @LENGTH@ 11
---------INS Assignment@@path="." @TO@ ExpressionStatement@@Assignment:path="." @AT@ 7753 @LENGTH@ 10
------------INS SimpleName@@path @TO@ Assignment@@path="." @AT@ 7753 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@path="." @AT@ 7757 @LENGTH@ 1
------------INS StringLiteral@@"." @TO@ Assignment@@path="." @AT@ 7760 @LENGTH@ 3


UPD FieldDeclaration@@private, static, final, String[], [REMAINING_OUT_PHASES={Phase.PREPARE_SEND,Phase.WRITE,Phase.SEND,Phase.PREPARE_SEND_ENDING}] @TO@ private, static, final, String[], [REMAINING_OUT_PHASES={Phase.PREPARE_SEND,Phase.USER_STREAM,Phase.WRITE,Phase.SEND,Phase.PREPARE_SEND_ENDING}] @AT@ 2008 @LENGTH@ 135
---UPD VariableDeclarationFragment@@REMAINING_OUT_PHASES={Phase.PREPARE_SEND,Phase.WRITE,Phase.SEND,Phase.PREPARE_SEND_ENDING} @TO@ REMAINING_OUT_PHASES={Phase.PREPARE_SEND,Phase.USER_STREAM,Phase.WRITE,Phase.SEND,Phase.PREPARE_SEND_ENDING} @AT@ 2038 @LENGTH@ 104
------UPD ArrayInitializer@@{Phase.PREPARE_SEND,Phase.WRITE,Phase.SEND,Phase.PREPARE_SEND_ENDING} @TO@ {Phase.PREPARE_SEND,Phase.USER_STREAM,Phase.WRITE,Phase.SEND,Phase.PREPARE_SEND_ENDING} @AT@ 2061 @LENGTH@ 81
---------INS QualifiedName@@Phase.USER_STREAM @TO@ ArrayInitializer@@{Phase.PREPARE_SEND,Phase.WRITE,Phase.SEND,Phase.PREPARE_SEND_ENDING} @AT@ 2101 @LENGTH@ 17
------------INS SimpleName@@Phase @TO@ QualifiedName@@Phase.USER_STREAM @AT@ 2101 @LENGTH@ 5
------------INS SimpleName@@USER_STREAM @TO@ QualifiedName@@Phase.USER_STREAM @AT@ 2107 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:from(fileUrl + "a/?sortBy=file:name.ext;file:name").to("mock:result") @TO@ MethodInvocation:from(fileUrl + "a/?sortBy=file:ext;file:name").to("mock:result") @AT@ 2275 @LENGTH@ 70
---UPD MethodInvocation@@from(fileUrl + "a/?sortBy=file:name.ext;file:name").to("mock:result") @TO@ from(fileUrl + "a/?sortBy=file:ext;file:name").to("mock:result") @AT@ 2275 @LENGTH@ 69
------UPD MethodInvocation@@MethodName:from:[fileUrl + "a/?sortBy=file:name.ext;file:name"] @TO@ MethodName:from:[fileUrl + "a/?sortBy=file:ext;file:name"] @AT@ 2275 @LENGTH@ 51
---------UPD InfixExpression@@fileUrl + "a/?sortBy=file:name.ext;file:name" @TO@ fileUrl + "a/?sortBy=file:ext;file:name" @AT@ 2280 @LENGTH@ 45
------------UPD StringLiteral@@"a/?sortBy=file:name.ext;file:name" @TO@ "a/?sortBy=file:ext;file:name" @AT@ 2290 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:from("file:src/test/data?noop=true").to("mina:vm://localhost:9123") @TO@ MethodInvocation:from("file:src/test/data?noop=true").to("mina:vm://localhost:9123?lazySessionCreation=true") @AT@ 1537 @LENGTH@ 93
---UPD MethodInvocation@@from("file:src/test/data?noop=true").to("mina:vm://localhost:9123") @TO@ from("file:src/test/data?noop=true").to("mina:vm://localhost:9123?lazySessionCreation=true") @AT@ 1537 @LENGTH@ 92
------UPD SimpleName@@MethodName:to:["mina:vm://localhost:9123"] @TO@ MethodName:to:["mina:vm://localhost:9123?lazySessionCreation=true"] @AT@ 1599 @LENGTH@ 30
---------UPD StringLiteral@@"mina:vm://localhost:9123" @TO@ "mina:vm://localhost:9123?lazySessionCreation=true" @AT@ 1602 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:from("timer://start?period=10000&delay=2000").setBody(constant("Claus")).to("mina:tcp://localhost:8080?sync=true").to("mock:result") @TO@ MethodInvocation:from("timer://start?period=10000&delay=2000").setBody(constant("Claus")).to("mina:tcp://localhost:8080?sync=true&lazySessionCreation=true").to("mock:result") @AT@ 2055 @LENGTH@ 183
---UPD MethodInvocation@@from("timer://start?period=10000&delay=2000").setBody(constant("Claus")).to("mina:tcp://localhost:8080?sync=true").to("mock:result") @TO@ from("timer://start?period=10000&delay=2000").setBody(constant("Claus")).to("mina:tcp://localhost:8080?sync=true&lazySessionCreation=true").to("mock:result") @AT@ 2055 @LENGTH@ 182
------UPD MethodInvocation@@MethodName:to:["mina:tcp://localhost:8080?sync=true"] @TO@ MethodName:to:["mina:tcp://localhost:8080?sync=true&lazySessionCreation=true"] @AT@ 2055 @LENGTH@ 164
---------UPD StringLiteral@@"mina:tcp://localhost:8080?sync=true" @TO@ "mina:tcp://localhost:8080?sync=true&lazySessionCreation=true" @AT@ 2181 @LENGTH@ 37


INS MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @TO@ TypeDeclaration@@[public, final]IOHelper,  @AT@ 1645 @LENGTH@ 297
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @AT@ 1645 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @AT@ 1652 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @AT@ 1659 @LENGTH@ 4
---INS SimpleName@@MethodName:copy @TO@ MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @AT@ 1664 @LENGTH@ 4
---INS SingleVariableDeclaration@@InputStream stream @TO@ MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @AT@ 1669 @LENGTH@ 18
------INS SimpleType@@InputStream @TO@ SingleVariableDeclaration@@InputStream stream @AT@ 1669 @LENGTH@ 11
------INS SimpleName@@stream @TO@ SingleVariableDeclaration@@InputStream stream @AT@ 1681 @LENGTH@ 6
---INS SingleVariableDeclaration@@OutputStream os @TO@ MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @AT@ 1689 @LENGTH@ 15
------INS SimpleType@@OutputStream @TO@ SingleVariableDeclaration@@OutputStream os @AT@ 1689 @LENGTH@ 12
------INS SimpleName@@os @TO@ SingleVariableDeclaration@@OutputStream os @AT@ 1702 @LENGTH@ 2
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @AT@ 1713 @LENGTH@ 11
---INS VariableDeclarationStatement@@byte[] data=new byte[4096]; @TO@ MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @AT@ 1735 @LENGTH@ 29
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] data=new byte[4096]; @AT@ 1735 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1735 @LENGTH@ 4
------INS VariableDeclarationFragment@@data=new byte[4096] @TO@ VariableDeclarationStatement@@byte[] data=new byte[4096]; @AT@ 1742 @LENGTH@ 21
---------INS SimpleName@@data @TO@ VariableDeclarationFragment@@data=new byte[4096] @AT@ 1742 @LENGTH@ 4
---------INS ArrayCreation@@new byte[4096] @TO@ VariableDeclarationFragment@@data=new byte[4096] @AT@ 1749 @LENGTH@ 14
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[4096] @AT@ 1753 @LENGTH@ 10
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1753 @LENGTH@ 4
------------INS NumberLiteral@@4096 @TO@ ArrayCreation@@new byte[4096] @AT@ 1758 @LENGTH@ 4
---INS VariableDeclarationStatement@@int read=stream.read(data); @TO@ MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @AT@ 1773 @LENGTH@ 29
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int read=stream.read(data); @AT@ 1773 @LENGTH@ 3
------INS VariableDeclarationFragment@@read=stream.read(data) @TO@ VariableDeclarationStatement@@int read=stream.read(data); @AT@ 1777 @LENGTH@ 24
---------INS SimpleName@@read @TO@ VariableDeclarationFragment@@read=stream.read(data) @AT@ 1777 @LENGTH@ 4
---------INS MethodInvocation@@stream.read(data) @TO@ VariableDeclarationFragment@@read=stream.read(data) @AT@ 1784 @LENGTH@ 17
------------INS SimpleName@@Name:stream @TO@ MethodInvocation@@stream.read(data) @AT@ 1784 @LENGTH@ 6
------------INS SimpleName@@MethodName:read:[data] @TO@ MethodInvocation@@stream.read(data) @AT@ 1791 @LENGTH@ 10
---------------INS SimpleName@@data @TO@ SimpleName@@MethodName:read:[data] @AT@ 1796 @LENGTH@ 4
---INS WhileStatement@@while (read != -1) {  os.write(data,0,read);  read=stream.read(data);} @TO@ MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @AT@ 1811 @LENGTH@ 105
------INS InfixExpression@@read != -1 @TO@ WhileStatement@@while (read != -1) {  os.write(data,0,read);  read=stream.read(data);} @AT@ 1818 @LENGTH@ 10
---------INS SimpleName@@read @TO@ InfixExpression@@read != -1 @AT@ 1818 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@read != -1 @AT@ 1822 @LENGTH@ 2
---------INS PrefixExpression@@-1 @TO@ InfixExpression@@read != -1 @AT@ 1826 @LENGTH@ 2
------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 1826 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 1827 @LENGTH@ 1
------INS Block@@WhileBody:{  os.write(data,0,read);  read=stream.read(data);} @TO@ WhileStatement@@while (read != -1) {  os.write(data,0,read);  read=stream.read(data);} @AT@ 1830 @LENGTH@ 86
---------INS ExpressionStatement@@MethodInvocation:os.write(data,0,read) @TO@ Block@@WhileBody:{  os.write(data,0,read);  read=stream.read(data);} @AT@ 1844 @LENGTH@ 24
------------INS MethodInvocation@@os.write(data,0,read) @TO@ ExpressionStatement@@MethodInvocation:os.write(data,0,read) @AT@ 1844 @LENGTH@ 23
---------------INS SimpleName@@Name:os @TO@ MethodInvocation@@os.write(data,0,read) @AT@ 1844 @LENGTH@ 2
---------------INS SimpleName@@MethodName:write:[data, 0, read] @TO@ MethodInvocation@@os.write(data,0,read) @AT@ 1847 @LENGTH@ 20
------------------INS SimpleName@@data @TO@ SimpleName@@MethodName:write:[data, 0, read] @AT@ 1853 @LENGTH@ 4
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:write:[data, 0, read] @AT@ 1859 @LENGTH@ 1
------------------INS SimpleName@@read @TO@ SimpleName@@MethodName:write:[data, 0, read] @AT@ 1862 @LENGTH@ 4
---------INS ExpressionStatement@@Assignment:read=stream.read(data) @TO@ Block@@WhileBody:{  os.write(data,0,read);  read=stream.read(data);} @AT@ 1881 @LENGTH@ 25
------------INS Assignment@@read=stream.read(data) @TO@ ExpressionStatement@@Assignment:read=stream.read(data) @AT@ 1881 @LENGTH@ 24
---------------INS SimpleName@@read @TO@ Assignment@@read=stream.read(data) @AT@ 1881 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@read=stream.read(data) @AT@ 1885 @LENGTH@ 1
---------------INS MethodInvocation@@stream.read(data) @TO@ Assignment@@read=stream.read(data) @AT@ 1888 @LENGTH@ 17
------------------INS SimpleName@@Name:stream @TO@ MethodInvocation@@stream.read(data) @AT@ 1888 @LENGTH@ 6
------------------INS SimpleName@@MethodName:read:[data] @TO@ MethodInvocation@@stream.read(data) @AT@ 1895 @LENGTH@ 10
---------------------INS SimpleName@@data @TO@ SimpleName@@MethodName:read:[data] @AT@ 1900 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:os.flush() @TO@ MethodDeclaration@@public, static, void, MethodName:copy, InputStream stream, OutputStream os, IOException,  @AT@ 1925 @LENGTH@ 11
------INS MethodInvocation@@os.flush() @TO@ ExpressionStatement@@MethodInvocation:os.flush() @AT@ 1925 @LENGTH@ 10
---------INS SimpleName@@Name:os @TO@ MethodInvocation@@os.flush() @AT@ 1925 @LENGTH@ 2
---------INS SimpleName@@MethodName:flush:[] @TO@ MethodInvocation@@os.flush() @AT@ 1928 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from(fileUrl + "b/?sortBy=reverse:file:name.ext").to("mock:reverse") @TO@ MethodInvocation:from(fileUrl + "b/?sortBy=reverse:file:ext").to("mock:reverse") @AT@ 2645 @LENGTH@ 69
---UPD MethodInvocation@@from(fileUrl + "b/?sortBy=reverse:file:name.ext").to("mock:reverse") @TO@ from(fileUrl + "b/?sortBy=reverse:file:ext").to("mock:reverse") @AT@ 2645 @LENGTH@ 68
------UPD MethodInvocation@@MethodName:from:[fileUrl + "b/?sortBy=reverse:file:name.ext"] @TO@ MethodName:from:[fileUrl + "b/?sortBy=reverse:file:ext"] @AT@ 2645 @LENGTH@ 49
---------UPD InfixExpression@@fileUrl + "b/?sortBy=reverse:file:name.ext" @TO@ fileUrl + "b/?sortBy=reverse:file:ext" @AT@ 2650 @LENGTH@ 43
------------UPD StringLiteral@@"b/?sortBy=reverse:file:name.ext" @TO@ "b/?sortBy=reverse:file:ext" @AT@ 2660 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:result.setAbsoluteFileName(source.getAbsoluteFileName()) @TO@ MethodInvocation:result.setAbsoluteFilePath(source.getAbsoluteFilePath()) @AT@ 1680 @LENGTH@ 57
---UPD MethodInvocation@@result.setAbsoluteFileName(source.getAbsoluteFileName()) @TO@ result.setAbsoluteFilePath(source.getAbsoluteFilePath()) @AT@ 1680 @LENGTH@ 56
------UPD SimpleName@@MethodName:setAbsoluteFileName:[source.getAbsoluteFileName()] @TO@ MethodName:setAbsoluteFilePath:[source.getAbsoluteFilePath()] @AT@ 1687 @LENGTH@ 49
---------UPD MethodInvocation@@source.getAbsoluteFileName() @TO@ source.getAbsoluteFilePath() @AT@ 1707 @LENGTH@ 28
------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 1714 @LENGTH@ 21


UPD ForStatement@@for (Iterator it=nestedBeans.keySet().iterator(); it.hasNext(); ) {  String propName=(String)it.next();  initProperty(bean,propName,createBean((BeanDeclaration)nestedBeans.get(propName),null));} @TO@ for (Iterator it=nestedBeans.entrySet().iterator(); it.hasNext(); ) {  Map.Entry e=(Map.Entry)it.next();  String propName=(String)e.getKey();  initProperty(bean,propName,createBean((BeanDeclaration)e.getValue(),null));} @AT@ 5911 @LENGTH@ 282
---UPD VariableDeclarationExpression@@Iterator it=nestedBeans.keySet().iterator() @TO@ Iterator it=nestedBeans.entrySet().iterator() @AT@ 5916 @LENGTH@ 45
------UPD VariableDeclarationFragment@@it=nestedBeans.keySet().iterator() @TO@ it=nestedBeans.entrySet().iterator() @AT@ 5925 @LENGTH@ 36
---------UPD MethodInvocation@@nestedBeans.keySet().iterator() @TO@ nestedBeans.entrySet().iterator() @AT@ 5930 @LENGTH@ 31
------------UPD MethodInvocation@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 5930 @LENGTH@ 20
---UPD VariableDeclarationStatement@@String propName=(String)it.next(); @TO@ String propName=(String)e.getKey(); @AT@ 6008 @LENGTH@ 37
------UPD VariableDeclarationFragment@@propName=(String)it.next() @TO@ propName=(String)e.getKey() @AT@ 6015 @LENGTH@ 29
---------UPD CastExpression@@(String)it.next() @TO@ (String)e.getKey() @AT@ 6026 @LENGTH@ 18
------------UPD MethodInvocation@@it.next() @TO@ e.getKey() @AT@ 6035 @LENGTH@ 9
---------------UPD SimpleName@@Name:it @TO@ Name:e @AT@ 6035 @LENGTH@ 2
---------------UPD SimpleName@@MethodName:next:[] @TO@ MethodName:getKey:[] @AT@ 6038 @LENGTH@ 6
---INS VariableDeclarationStatement@@Map.Entry e=(Map.Entry)it.next(); @TO@ ForStatement@@for (Iterator it=nestedBeans.keySet().iterator(); it.hasNext(); ) {  String propName=(String)it.next();  initProperty(bean,propName,createBean((BeanDeclaration)nestedBeans.get(propName),null));} @AT@ 6054 @LENGTH@ 36
------INS SimpleType@@Map.Entry @TO@ VariableDeclarationStatement@@Map.Entry e=(Map.Entry)it.next(); @AT@ 6054 @LENGTH@ 9
------INS VariableDeclarationFragment@@e=(Map.Entry)it.next() @TO@ VariableDeclarationStatement@@Map.Entry e=(Map.Entry)it.next(); @AT@ 6064 @LENGTH@ 25
---------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e=(Map.Entry)it.next() @AT@ 6064 @LENGTH@ 1
---------INS CastExpression@@(Map.Entry)it.next() @TO@ VariableDeclarationFragment@@e=(Map.Entry)it.next() @AT@ 6068 @LENGTH@ 21
------------INS SimpleType@@Map.Entry @TO@ CastExpression@@(Map.Entry)it.next() @AT@ 6069 @LENGTH@ 9
------------INS MethodInvocation@@it.next() @TO@ CastExpression@@(Map.Entry)it.next() @AT@ 6080 @LENGTH@ 9
---------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.next() @AT@ 6080 @LENGTH@ 2
---------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@it.next() @AT@ 6083 @LENGTH@ 6
---UPD ExpressionStatement@@MethodInvocation:initProperty(bean,propName,createBean((BeanDeclaration)nestedBeans.get(propName),null)) @TO@ MethodInvocation:initProperty(bean,propName,createBean((BeanDeclaration)e.getValue(),null)) @AT@ 6062 @LENGTH@ 117
------UPD MethodInvocation@@initProperty(bean,propName,createBean((BeanDeclaration)nestedBeans.get(propName),null)) @TO@ initProperty(bean,propName,createBean((BeanDeclaration)e.getValue(),null)) @AT@ 6062 @LENGTH@ 116
---------UPD SimpleName@@MethodName:initProperty:[bean, propName, createBean((BeanDeclaration)nestedBeans.get(propName),null)] @TO@ MethodName:initProperty:[bean, propName, createBean((BeanDeclaration)e.getValue(),null)] @AT@ 6062 @LENGTH@ 116
------------UPD MethodInvocation@@createBean((BeanDeclaration)nestedBeans.get(propName),null) @TO@ createBean((BeanDeclaration)e.getValue(),null) @AT@ 6091 @LENGTH@ 86
---------------UPD SimpleName@@MethodName:createBean:[(BeanDeclaration)nestedBeans.get(propName), null] @TO@ MethodName:createBean:[(BeanDeclaration)e.getValue(), null] @AT@ 6091 @LENGTH@ 86
------------------UPD CastExpression@@(BeanDeclaration)nestedBeans.get(propName) @TO@ (BeanDeclaration)e.getValue() @AT@ 6127 @LENGTH@ 43
---------------------UPD MethodInvocation@@nestedBeans.get(propName) @TO@ e.getValue() @AT@ 6145 @LENGTH@ 25
------------------------UPD SimpleName@@Name:nestedBeans @TO@ Name:e @AT@ 6145 @LENGTH@ 11
------------------------UPD SimpleName@@MethodName:get:[propName] @TO@ MethodName:getValue:[] @AT@ 6157 @LENGTH@ 13
---------------------------DEL SimpleName@@propName @AT@ 6161 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:createBean:[(BeanDeclaration)nestedBeans.get(propName), null] @TO@ MethodName:createBean:[(BeanDeclaration)e.getValue(), null] @AT@ 6091 @LENGTH@ 86
------------------UPD CastExpression@@(BeanDeclaration)nestedBeans.get(propName) @TO@ (BeanDeclaration)e.getValue() @AT@ 6127 @LENGTH@ 43
---------------------UPD MethodInvocation@@nestedBeans.get(propName) @TO@ e.getValue() @AT@ 6145 @LENGTH@ 25
------------------------UPD SimpleName@@Name:nestedBeans @TO@ Name:e @AT@ 6145 @LENGTH@ 11
------------------------UPD SimpleName@@MethodName:get:[propName] @TO@ MethodName:getValue:[] @AT@ 6157 @LENGTH@ 13
---------------------------DEL SimpleName@@propName @AT@ 6161 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:from(getFtpUrl()).setHeader(FileComponent.HEADER_FILE_NAME,constant("deleteme.txt")).convertBodyTo(String.class).to(fileUrl).to("mock:result") @TO@ MethodInvocation:from(getFtpUrl()).setHeader(NewFileComponent.HEADER_FILE_NAME,constant("deleteme.txt")).convertBodyTo(String.class).to(fileUrl).to("mock:result") @AT@ 3170 @LENGTH@ 169
---UPD MethodInvocation@@from(getFtpUrl()).setHeader(FileComponent.HEADER_FILE_NAME,constant("deleteme.txt")).convertBodyTo(String.class).to(fileUrl).to("mock:result") @TO@ from(getFtpUrl()).setHeader(NewFileComponent.HEADER_FILE_NAME,constant("deleteme.txt")).convertBodyTo(String.class).to(fileUrl).to("mock:result") @AT@ 3170 @LENGTH@ 168
------UPD MethodInvocation@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, constant("deleteme.txt")] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, constant("deleteme.txt")] @AT@ 3170 @LENGTH@ 85
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 3198 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 3198 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertEquals("2",result.get(0)) @TO@ MethodInvocation:assertEquals("2",((SecuredModel)result.get(0)).getAttributes()) @AT@ 2649 @LENGTH@ 33
---UPD MethodInvocation@@assertEquals("2",result.get(0)) @TO@ assertEquals("2",((SecuredModel)result.get(0)).getAttributes()) @AT@ 2649 @LENGTH@ 32
------UPD SimpleName@@MethodName:assertEquals:["2", result.get(0)] @TO@ MethodName:assertEquals:["2", ((SecuredModel)result.get(0)).getAttributes()] @AT@ 2649 @LENGTH@ 32
---------INS MethodInvocation@@((SecuredModel)result.get(0)).getAttributes() @TO@ SimpleName@@MethodName:assertEquals:["2", result.get(0)] @AT@ 2685 @LENGTH@ 46
------------INS ParenthesizedExpression@@((SecuredModel)result.get(0)) @TO@ MethodInvocation@@((SecuredModel)result.get(0)).getAttributes() @AT@ 2685 @LENGTH@ 30
---------------INS CastExpression@@(SecuredModel)result.get(0) @TO@ ParenthesizedExpression@@((SecuredModel)result.get(0)) @AT@ 2686 @LENGTH@ 28
------------------MOV MethodInvocation@@result.get(0) @TO@ CastExpression@@(SecuredModel)result.get(0) @AT@ 2667 @LENGTH@ 13
------------------MOV MethodInvocation@@result.get(0) @TO@ CastExpression@@(SecuredModel)result.get(0) @AT@ 2667 @LENGTH@ 13
------------------INS SimpleType@@SecuredModel @TO@ CastExpression@@(SecuredModel)result.get(0) @AT@ 2687 @LENGTH@ 12
------------INS SimpleName@@MethodName:getAttributes:[] @TO@ MethodInvocation@@((SecuredModel)result.get(0)).getAttributes() @AT@ 2716 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 1861 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 1861 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 1878 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 1888 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 1888 @LENGTH@ 13


UPD EnhancedForStatement@@for (JobExecution jobExecution : list) {  List<Long> stepExecutionIds=jdbcTemplate.query("select STEP_EXECUTION_ID from BATCH_STEP_EXECUTION where JOB_EXECUTION_ID=?",new ParameterizedRowMapper<Long>(){    public Long mapRow(    ResultSet rs,    int rowNum) throws SQLException {      return rs.getLong(1);    }  },jobExecution.getId());  for (  Long stepExecutionId : stepExecutionIds) {    jdbcTemplate.update("delete from BATCH_STEP_EXECUTION_CONTEXT where STEP_EXECUTION_ID=?",stepExecutionId);    jdbcTemplate.update("delete from BATCH_STEP_EXECUTION where STEP_EXECUTION_ID=?",stepExecutionId);  }  jdbcTemplate.update("delete from BATCH_JOB_EXECUTION where JOB_EXECUTION_ID=?",jobExecution.getId());  jdbcTemplate.update("delete from BATCH_JOB_EXECUTION_CONTEXT where JOB_EXECUTION_ID=?",jobExecution.getId());  jdbcTemplate.update("delete from BATCH_JOB_PARAMS where JOB_INSTANCE_ID=?",jobExecution.getJobId());  jdbcTemplate.update("delete from BATCH_JOB_INSTANCE where JOB_INSTANCE_ID=?",jobExecution.getJobId());} @TO@ for (JobExecution jobExecution : list) {  List<Long> stepExecutionIds=jdbcTemplate.query("select STEP_EXECUTION_ID from BATCH_STEP_EXECUTION where JOB_EXECUTION_ID=?",new ParameterizedRowMapper<Long>(){    public Long mapRow(    ResultSet rs,    int rowNum) throws SQLException {      return rs.getLong(1);    }  },jobExecution.getId());  for (  Long stepExecutionId : stepExecutionIds) {    jdbcTemplate.update("delete from BATCH_STEP_EXECUTION_CONTEXT where STEP_EXECUTION_ID=?",stepExecutionId);    jdbcTemplate.update("delete from BATCH_STEP_EXECUTION where STEP_EXECUTION_ID=?",stepExecutionId);  }  jdbcTemplate.update("delete from BATCH_JOB_EXECUTION_CONTEXT where JOB_EXECUTION_ID=?",jobExecution.getId());  jdbcTemplate.update("delete from BATCH_JOB_EXECUTION where JOB_EXECUTION_ID=?",jobExecution.getId());  jdbcTemplate.update("delete from BATCH_JOB_PARAMS where JOB_INSTANCE_ID=?",jobExecution.getJobId());  jdbcTemplate.update("delete from BATCH_JOB_INSTANCE where JOB_INSTANCE_ID=?",jobExecution.getJobId());} @AT@ 4820 @LENGTH@ 1098
---MOV ExpressionStatement@@MethodInvocation:jdbcTemplate.update("delete from BATCH_JOB_EXECUTION where JOB_EXECUTION_ID=?",jobExecution.getId()) @TO@ EnhancedForStatement@@for (JobExecution jobExecution : list) {  List<Long> stepExecutionIds=jdbcTemplate.query("select STEP_EXECUTION_ID from BATCH_STEP_EXECUTION where JOB_EXECUTION_ID=?",new ParameterizedRowMapper<Long>(){    public Long mapRow(    ResultSet rs,    int rowNum) throws SQLException {      return rs.getLong(1);    }  },jobExecution.getId());  for (  Long stepExecutionId : stepExecutionIds) {    jdbcTemplate.update("delete from BATCH_STEP_EXECUTION_CONTEXT where STEP_EXECUTION_ID=?",stepExecutionId);    jdbcTemplate.update("delete from BATCH_STEP_EXECUTION where STEP_EXECUTION_ID=?",stepExecutionId);  }  jdbcTemplate.update("delete from BATCH_JOB_EXECUTION where JOB_EXECUTION_ID=?",jobExecution.getId());  jdbcTemplate.update("delete from BATCH_JOB_EXECUTION_CONTEXT where JOB_EXECUTION_ID=?",jobExecution.getId());  jdbcTemplate.update("delete from BATCH_JOB_PARAMS where JOB_INSTANCE_ID=?",jobExecution.getJobId());  jdbcTemplate.update("delete from BATCH_JOB_INSTANCE where JOB_INSTANCE_ID=?",jobExecution.getJobId());} @AT@ 5475 @LENGTH@ 102


UPD MethodDeclaration@@public, void, MethodName:testNonExistantResource, Exception,  @TO@ public, void, MethodName:testNonExistentResource, Exception,  @AT@ 2939 @LENGTH@ 352
---UPD SimpleName@@MethodName:testNonExistantResource @TO@ MethodName:testNonExistentResource @AT@ 2951 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:reader.setStrict(false) @TO@ MethodDeclaration@@public, void, MethodName:testNonExistantResource, Exception,  @AT@ 3208 @LENGTH@ 24
------INS MethodInvocation@@reader.setStrict(false) @TO@ ExpressionStatement@@MethodInvocation:reader.setStrict(false) @AT@ 3208 @LENGTH@ 23
---------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.setStrict(false) @AT@ 3208 @LENGTH@ 6
---------INS SimpleName@@MethodName:setStrict:[false] @TO@ MethodInvocation@@reader.setStrict(false) @AT@ 3215 @LENGTH@ 16
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setStrict:[false] @AT@ 3225 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("CamelFileLocalWorkPath",local.getPath()) @TO@ MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_LOCAL_WORK_PATH,local.getPath()) @AT@ 9587 @LENGTH@ 70
---UPD MethodInvocation@@exchange.getIn().setHeader("CamelFileLocalWorkPath",local.getPath()) @TO@ exchange.getIn().setHeader(FileComponent.HEADER_FILE_LOCAL_WORK_PATH,local.getPath()) @AT@ 9587 @LENGTH@ 69
------UPD SimpleName@@MethodName:setHeader:["CamelFileLocalWorkPath", local.getPath()] @TO@ MethodName:setHeader:[FileComponent.HEADER_FILE_LOCAL_WORK_PATH, local.getPath()] @AT@ 9604 @LENGTH@ 52
---------DEL StringLiteral@@"CamelFileLocalWorkPath" @AT@ 9614 @LENGTH@ 24
---------INS QualifiedName@@FileComponent.HEADER_FILE_LOCAL_WORK_PATH @TO@ SimpleName@@MethodName:setHeader:["CamelFileLocalWorkPath", local.getPath()] @AT@ 9668 @LENGTH@ 41
------------INS SimpleName@@FileComponent @TO@ QualifiedName@@FileComponent.HEADER_FILE_LOCAL_WORK_PATH @AT@ 9668 @LENGTH@ 13
------------INS SimpleName@@HEADER_FILE_LOCAL_WORK_PATH @TO@ QualifiedName@@FileComponent.HEADER_FILE_LOCAL_WORK_PATH @AT@ 9682 @LENGTH@ 27


UPD IfStatement@@if (file.getPath().startsWith(endpointPath)) {  path=new File(ObjectHelper.after(file.getPath(),endpointPath + File.separator));} else {  path=new File(file.getPath());} @TO@ if (file.getPath().startsWith(FileUtil.normalizePath(endpointPath))) {  path=new File(ObjectHelper.after(file.getPath(),FileUtil.normalizePath(endpointPath) + File.separator));} else {  path=new File(file.getPath());} @AT@ 3809 @LENGTH@ 278
---UPD MethodInvocation@@file.getPath().startsWith(endpointPath) @TO@ file.getPath().startsWith(FileUtil.normalizePath(endpointPath)) @AT@ 3813 @LENGTH@ 39
------UPD SimpleName@@MethodName:startsWith:[endpointPath] @TO@ MethodName:normalizePath:[endpointPath] @AT@ 3828 @LENGTH@ 24
------INS SimpleName@@MethodName:startsWith:[FileUtil.normalizePath(endpointPath)] @TO@ MethodInvocation@@file.getPath().startsWith(endpointPath) @AT@ 3867 @LENGTH@ 48
---------INS MethodInvocation@@FileUtil.normalizePath(endpointPath) @TO@ SimpleName@@MethodName:startsWith:[FileUtil.normalizePath(endpointPath)] @AT@ 3878 @LENGTH@ 36
------------MOV SimpleName@@MethodName:startsWith:[endpointPath] @TO@ MethodInvocation@@FileUtil.normalizePath(endpointPath) @AT@ 3828 @LENGTH@ 24
------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.normalizePath(endpointPath) @AT@ 3878 @LENGTH@ 8
---UPD Block@@ThenBody:{  path=new File(ObjectHelper.after(file.getPath(),endpointPath + File.separator));} @TO@ ThenBody:{  path=new File(ObjectHelper.after(file.getPath(),FileUtil.normalizePath(endpointPath) + File.separator));} @AT@ 3854 @LENGTH@ 163
------UPD ExpressionStatement@@Assignment:path=new File(ObjectHelper.after(file.getPath(),endpointPath + File.separator)) @TO@ Assignment:path=new File(ObjectHelper.after(file.getPath(),FileUtil.normalizePath(endpointPath) + File.separator)) @AT@ 3920 @LENGTH@ 83
---------UPD Assignment@@path=new File(ObjectHelper.after(file.getPath(),endpointPath + File.separator)) @TO@ path=new File(ObjectHelper.after(file.getPath(),FileUtil.normalizePath(endpointPath) + File.separator)) @AT@ 3920 @LENGTH@ 82
------------UPD ClassInstanceCreation@@File[ObjectHelper.after(file.getPath(),endpointPath + File.separator)] @TO@ File[ObjectHelper.after(file.getPath(),FileUtil.normalizePath(endpointPath) + File.separator)] @AT@ 3927 @LENGTH@ 75
---------------UPD MethodInvocation@@ObjectHelper.after(file.getPath(),endpointPath + File.separator) @TO@ ObjectHelper.after(file.getPath(),FileUtil.normalizePath(endpointPath) + File.separator) @AT@ 3936 @LENGTH@ 65
------------------UPD SimpleName@@MethodName:after:[file.getPath(), endpointPath + File.separator] @TO@ MethodName:after:[file.getPath(), FileUtil.normalizePath(endpointPath) + File.separator] @AT@ 3949 @LENGTH@ 52
---------------------UPD InfixExpression@@endpointPath + File.separator @TO@ FileUtil.normalizePath(endpointPath) + File.separator @AT@ 3971 @LENGTH@ 29
------------------------DEL SimpleName@@endpointPath @AT@ 3971 @LENGTH@ 12
------------------------INS MethodInvocation@@FileUtil.normalizePath(endpointPath) @TO@ InfixExpression@@endpointPath + File.separator @AT@ 4034 @LENGTH@ 36
---------------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.normalizePath(endpointPath) @AT@ 4034 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:normalizePath:[endpointPath] @TO@ MethodInvocation@@FileUtil.normalizePath(endpointPath) @AT@ 4043 @LENGTH@ 27
------------------------------INS SimpleName@@endpointPath @TO@ SimpleName@@MethodName:normalizePath:[endpointPath] @AT@ 4057 @LENGTH@ 12


INS FieldDeclaration@@public, static, final, String, [HEADER_FILE_LOCAL_WORK_PATH="CamelFileLocalWorkPath"] @TO@ TypeDeclaration@@[public]FileComponent, GenericFileComponent<File> @AT@ 2000 @LENGTH@ 81
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [HEADER_FILE_LOCAL_WORK_PATH="CamelFileLocalWorkPath"] @AT@ 2000 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [HEADER_FILE_LOCAL_WORK_PATH="CamelFileLocalWorkPath"] @AT@ 2007 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [HEADER_FILE_LOCAL_WORK_PATH="CamelFileLocalWorkPath"] @AT@ 2014 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [HEADER_FILE_LOCAL_WORK_PATH="CamelFileLocalWorkPath"] @AT@ 2020 @LENGTH@ 6
---INS VariableDeclarationFragment@@HEADER_FILE_LOCAL_WORK_PATH="CamelFileLocalWorkPath" @TO@ FieldDeclaration@@public, static, final, String, [HEADER_FILE_LOCAL_WORK_PATH="CamelFileLocalWorkPath"] @AT@ 2027 @LENGTH@ 53
------INS SimpleName@@HEADER_FILE_LOCAL_WORK_PATH @TO@ VariableDeclarationFragment@@HEADER_FILE_LOCAL_WORK_PATH="CamelFileLocalWorkPath" @AT@ 2027 @LENGTH@ 27
------INS StringLiteral@@"CamelFileLocalWorkPath" @TO@ VariableDeclarationFragment@@HEADER_FILE_LOCAL_WORK_PATH="CamelFileLocalWorkPath" @AT@ 2056 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setHeader(HttpConstants.HTTP_RESPONSE_CODE,404) @TO@ MethodInvocation:exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,404) @AT@ 3932 @LENGTH@ 67
---UPD MethodInvocation@@exchange.getOut().setHeader(HttpConstants.HTTP_RESPONSE_CODE,404) @TO@ exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE,404) @AT@ 3932 @LENGTH@ 66
------UPD SimpleName@@MethodName:setHeader:[HttpConstants.HTTP_RESPONSE_CODE, 404] @TO@ MethodName:setHeader:[Exchange.HTTP_RESPONSE_CODE, 404] @AT@ 3950 @LENGTH@ 48
---------UPD QualifiedName@@HttpConstants.HTTP_RESPONSE_CODE @TO@ Exchange.HTTP_RESPONSE_CODE @AT@ 3960 @LENGTH@ 32
------------UPD SimpleName@@HttpConstants @TO@ Exchange @AT@ 3960 @LENGTH@ 13


UPD WhileStatement@@while (it.hasNext()) {  DataField dataField=mapDataField.get(it.next());  Field field=mapAnnotedField.get(dataField.pos());  field.setAccessible(true);  Format format;  String pattern=dataField.pattern();  format=FormatFactory.getFormat(field.getType(),pattern,dataField.precision());  Object obj=model.get(field.getDeclaringClass().getName());  builder.append(format.format(field.get(obj)));  if (it.hasNext()) {    builder.append(this.getSeparator());  }} @TO@ while (it.hasNext()) {  DataField dataField=mapDataField.get(it.next());  Field field=mapAnnotedField.get(dataField.pos());  field.setAccessible(true);  Format format=FormatFactory.getFormat(field.getType(),dataField.pattern(),dataField.precision());  Object obj=model.get(field.getDeclaringClass().getName());  builder.append(format.format(field.get(obj)));  if (it.hasNext()) {    builder.append(this.getSeparator());  }} @AT@ 5735 @LENGTH@ 854
---UPD Block@@WhileBody:{  DataField dataField=mapDataField.get(it.next());  Field field=mapAnnotedField.get(dataField.pos());  field.setAccessible(true);  Format format;  String pattern=dataField.pattern();  format=FormatFactory.getFormat(field.getType(),pattern,dataField.precision());  Object obj=model.get(field.getDeclaringClass().getName());  builder.append(format.format(field.get(obj)));  if (it.hasNext()) {    builder.append(this.getSeparator());  }} @TO@ WhileBody:{  DataField dataField=mapDataField.get(it.next());  Field field=mapAnnotedField.get(dataField.pos());  field.setAccessible(true);  Format format=FormatFactory.getFormat(field.getType(),dataField.pattern(),dataField.precision());  Object obj=model.get(field.getDeclaringClass().getName());  builder.append(format.format(field.get(obj)));  if (it.hasNext()) {    builder.append(this.getSeparator());  }} @AT@ 5756 @LENGTH@ 833
------INS VariableDeclarationStatement@@Format format=FormatFactory.getFormat(field.getType(),dataField.pattern(),dataField.precision()); @TO@ Block@@WhileBody:{  DataField dataField=mapDataField.get(it.next());  Field field=mapAnnotedField.get(dataField.pos());  field.setAccessible(true);  Format format;  String pattern=dataField.pattern();  format=FormatFactory.getFormat(field.getType(),pattern,dataField.precision());  Object obj=model.get(field.getDeclaringClass().getName());  builder.append(format.format(field.get(obj)));  if (it.hasNext()) {    builder.append(this.getSeparator());  }} @AT@ 6085 @LENGTH@ 101
---------INS VariableDeclarationFragment@@format=FormatFactory.getFormat(field.getType(),dataField.pattern(),dataField.precision()) @TO@ VariableDeclarationStatement@@Format format=FormatFactory.getFormat(field.getType(),dataField.pattern(),dataField.precision()); @AT@ 6092 @LENGTH@ 93
------------INS MethodInvocation@@FormatFactory.getFormat(field.getType(),dataField.pattern(),dataField.precision()) @TO@ VariableDeclarationFragment@@format=FormatFactory.getFormat(field.getType(),dataField.pattern(),dataField.precision()) @AT@ 6101 @LENGTH@ 84
---------------MOV SimpleName@@Name:FormatFactory @TO@ MethodInvocation@@FormatFactory.getFormat(field.getType(),dataField.pattern(),dataField.precision()) @AT@ 6196 @LENGTH@ 13
---------------MOV SimpleName@@MethodName:getFormat:[field.getType(), pattern, dataField.precision()] @TO@ MethodInvocation@@FormatFactory.getFormat(field.getType(),dataField.pattern(),dataField.precision()) @AT@ 6210 @LENGTH@ 58
------------------INS MethodInvocation@@dataField.pattern() @TO@ SimpleName@@MethodName:getFormat:[field.getType(), pattern, dataField.precision()] @AT@ 6142 @LENGTH@ 19
---------------------INS SimpleName@@Name:dataField @TO@ MethodInvocation@@dataField.pattern() @AT@ 6142 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:pattern:[] @TO@ MethodInvocation@@dataField.pattern() @AT@ 6152 @LENGTH@ 9
------------MOV SimpleName@@format @TO@ VariableDeclarationFragment@@format=FormatFactory.getFormat(field.getType(),dataField.pattern(),dataField.precision()) @AT@ 6116 @LENGTH@ 6
---------MOV SimpleType@@Format @TO@ VariableDeclarationStatement@@Format format=FormatFactory.getFormat(field.getType(),dataField.pattern(),dataField.precision()); @AT@ 6109 @LENGTH@ 6
------DEL VariableDeclarationStatement@@Format format; @AT@ 6109 @LENGTH@ 14
---------DEL VariableDeclarationFragment@@format @AT@ 6116 @LENGTH@ 6
------DEL VariableDeclarationStatement@@String pattern=dataField.pattern(); @AT@ 6137 @LENGTH@ 37
---------DEL SimpleType@@String @AT@ 6137 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@pattern=dataField.pattern() @AT@ 6144 @LENGTH@ 29
------------DEL SimpleName@@pattern @AT@ 6144 @LENGTH@ 7
------------DEL MethodInvocation@@dataField.pattern() @AT@ 6154 @LENGTH@ 19
---------------DEL SimpleName@@Name:dataField @AT@ 6154 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:pattern:[] @AT@ 6164 @LENGTH@ 9
------DEL ExpressionStatement@@Assignment:format=FormatFactory.getFormat(field.getType(),pattern,dataField.precision()) @AT@ 6187 @LENGTH@ 82
---------DEL Assignment@@format=FormatFactory.getFormat(field.getType(),pattern,dataField.precision()) @AT@ 6187 @LENGTH@ 81
------------DEL SimpleName@@format @AT@ 6187 @LENGTH@ 6
------------DEL Operator@@= @AT@ 6193 @LENGTH@ 1
------------DEL MethodInvocation@@FormatFactory.getFormat(field.getType(),pattern,dataField.precision()) @AT@ 6196 @LENGTH@ 72


DEL AssertStatement@@InfixExpression:dataObjectType.isAssignableFrom(String.class) || dataObjectType.isAssignableFrom(Node.class), Msg-StringLiteral:"TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object" @AT@ 1654 @LENGTH@ 200
---DEL StringLiteral@@"TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object" @AT@ 1769 @LENGTH@ 84


UPD ExpressionStatement@@ClassInstanceCreation:new IllegalArgumentException("Unknown mode") @TO@ ClassInstanceCreation:new IllegalArgumentException("Unknown mode (full mode: " + mode + ", masked mode: "+ (mode & S_IFMT)) @AT@ 14302 @LENGTH@ 45
---UPD ClassInstanceCreation@@IllegalArgumentException["Unknown mode"] @TO@ IllegalArgumentException["Unknown mode (full mode: " + mode + ", masked mode: "+ (mode & S_IFMT)] @AT@ 14302 @LENGTH@ 44
------DEL StringLiteral@@"Unknown mode" @AT@ 14331 @LENGTH@ 14
------INS InfixExpression@@"Unknown mode (full mode: " + mode + ", masked mode: "+ (mode & S_IFMT) @TO@ ClassInstanceCreation@@IllegalArgumentException["Unknown mode"] @AT@ 14452 @LENGTH@ 166
---------INS StringLiteral@@"Unknown mode (full mode: " @TO@ InfixExpression@@"Unknown mode (full mode: " + mode + ", masked mode: "+ (mode & S_IFMT) @AT@ 14452 @LENGTH@ 27
---------INS Operator@@+ @TO@ InfixExpression@@"Unknown mode (full mode: " + mode + ", masked mode: "+ (mode & S_IFMT) @AT@ 14479 @LENGTH@ 1
---------INS SimpleName@@mode @TO@ InfixExpression@@"Unknown mode (full mode: " + mode + ", masked mode: "+ (mode & S_IFMT) @AT@ 14529 @LENGTH@ 4
---------INS StringLiteral@@", masked mode: " @TO@ InfixExpression@@"Unknown mode (full mode: " + mode + ", masked mode: "+ (mode & S_IFMT) @AT@ 14536 @LENGTH@ 17
---------INS ParenthesizedExpression@@(mode & S_IFMT) @TO@ InfixExpression@@"Unknown mode (full mode: " + mode + ", masked mode: "+ (mode & S_IFMT) @AT@ 14603 @LENGTH@ 15
------------INS InfixExpression@@mode & S_IFMT @TO@ ParenthesizedExpression@@(mode & S_IFMT) @AT@ 14604 @LENGTH@ 13
---------------INS SimpleName@@mode @TO@ InfixExpression@@mode & S_IFMT @AT@ 14604 @LENGTH@ 4
---------------INS Operator@@& @TO@ InfixExpression@@mode & S_IFMT @AT@ 14608 @LENGTH@ 1
---------------INS SimpleName@@S_IFMT @TO@ InfixExpression@@mode & S_IFMT @AT@ 14611 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"logo.jpeg") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"logo.jpeg") @AT@ 3046 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"logo.jpeg") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"logo.jpeg") @AT@ 3046 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "logo.jpeg"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "logo.jpeg"] @AT@ 3063 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 3073 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 3073 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2086 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2086 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 2103 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2113 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2113 @LENGTH@ 13


UPD Block@@ThenBody:{  getIn().setHeader("CamelFileName",file.getFileName());  getIn().setHeader("CamelFileAbsolute",file.isAbsolute());  getIn().setHeader("CamelFileAbsolutePath",file.getAbsoluteFileName());  if (file.isAbsolute()) {    getIn().setHeader("CamelFilePath",file.getAbsoluteFileName());  } else {    getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFileName());  }  getIn().setHeader("CamelFileParent",file.getParent());  if (file.getFileLength() > 0) {    getIn().setHeader("CamelFileLength",file.getFileLength());  }  if (file.getLastModified() > 0) {    getIn().setHeader("CamelFileLastModified",new Date(file.getLastModified()));  }} @TO@ ThenBody:{  getIn().setHeader(Exchange.FILE_NAME_ONLY,file.getFileNameOnly());  getIn().setHeader(Exchange.FILE_NAME,file.getFileName());  getIn().setHeader("CamelFileAbsolute",file.isAbsolute());  getIn().setHeader("CamelFileAbsolutePath",file.getAbsoluteFilePath());  if (file.isAbsolute()) {    getIn().setHeader("CamelFilePath",file.getAbsoluteFilePath());  } else {    getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFilePath());  }  getIn().setHeader("CamelFileRelativePath",file.getRelativeFilePath());  getIn().setHeader("CamelFileParent",file.getParent());  if (file.getFileLength() > 0) {    getIn().setHeader("CamelFileLength",file.getFileLength());  }  if (file.getLastModified() > 0) {    getIn().setHeader("CamelFileLastModified",new Date(file.getLastModified()));  }} @AT@ 2088 @LENGTH@ 865
---INS ExpressionStatement@@MethodInvocation:getIn().setHeader(Exchange.FILE_NAME_ONLY,file.getFileNameOnly()) @TO@ Block@@ThenBody:{  getIn().setHeader("CamelFileName",file.getFileName());  getIn().setHeader("CamelFileAbsolute",file.isAbsolute());  getIn().setHeader("CamelFileAbsolutePath",file.getAbsoluteFileName());  if (file.isAbsolute()) {    getIn().setHeader("CamelFilePath",file.getAbsoluteFileName());  } else {    getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFileName());  }  getIn().setHeader("CamelFileParent",file.getParent());  if (file.getFileLength() > 0) {    getIn().setHeader("CamelFileLength",file.getFileLength());  }  if (file.getLastModified() > 0) {    getIn().setHeader("CamelFileLastModified",new Date(file.getLastModified()));  }} @AT@ 2102 @LENGTH@ 67
------INS MethodInvocation@@getIn().setHeader(Exchange.FILE_NAME_ONLY,file.getFileNameOnly()) @TO@ ExpressionStatement@@MethodInvocation:getIn().setHeader(Exchange.FILE_NAME_ONLY,file.getFileNameOnly()) @AT@ 2102 @LENGTH@ 66
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@getIn().setHeader(Exchange.FILE_NAME_ONLY,file.getFileNameOnly()) @AT@ 2102 @LENGTH@ 7
---------INS SimpleName@@MethodName:setHeader:[Exchange.FILE_NAME_ONLY, file.getFileNameOnly()] @TO@ MethodInvocation@@getIn().setHeader(Exchange.FILE_NAME_ONLY,file.getFileNameOnly()) @AT@ 2110 @LENGTH@ 58
------------INS QualifiedName@@Exchange.FILE_NAME_ONLY @TO@ SimpleName@@MethodName:setHeader:[Exchange.FILE_NAME_ONLY, file.getFileNameOnly()] @AT@ 2120 @LENGTH@ 23
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.FILE_NAME_ONLY @AT@ 2120 @LENGTH@ 8
---------------INS SimpleName@@FILE_NAME_ONLY @TO@ QualifiedName@@Exchange.FILE_NAME_ONLY @AT@ 2129 @LENGTH@ 14
------------INS MethodInvocation@@file.getFileNameOnly() @TO@ SimpleName@@MethodName:setHeader:[Exchange.FILE_NAME_ONLY, file.getFileNameOnly()] @AT@ 2145 @LENGTH@ 22
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getFileNameOnly() @AT@ 2145 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getFileNameOnly:[] @TO@ MethodInvocation@@file.getFileNameOnly() @AT@ 2150 @LENGTH@ 17
---UPD ExpressionStatement@@MethodInvocation:getIn().setHeader("CamelFileName",file.getFileName()) @TO@ MethodInvocation:getIn().setHeader(Exchange.FILE_NAME,file.getFileName()) @AT@ 2102 @LENGTH@ 55
------UPD MethodInvocation@@getIn().setHeader("CamelFileName",file.getFileName()) @TO@ getIn().setHeader(Exchange.FILE_NAME,file.getFileName()) @AT@ 2102 @LENGTH@ 54
---------UPD SimpleName@@MethodName:setHeader:["CamelFileName", file.getFileName()] @TO@ MethodName:setHeader:[Exchange.FILE_NAME, file.getFileName()] @AT@ 2110 @LENGTH@ 46
------------DEL StringLiteral@@"CamelFileName" @AT@ 2120 @LENGTH@ 15
------------INS QualifiedName@@Exchange.FILE_NAME @TO@ SimpleName@@MethodName:setHeader:["CamelFileName", file.getFileName()] @AT@ 2200 @LENGTH@ 18
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.FILE_NAME @AT@ 2200 @LENGTH@ 8
---------------INS SimpleName@@FILE_NAME @TO@ QualifiedName@@Exchange.FILE_NAME @AT@ 2209 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:getIn().setHeader("CamelFileAbsolutePath",file.getAbsoluteFileName()) @TO@ MethodInvocation:getIn().setHeader("CamelFileAbsolutePath",file.getAbsoluteFilePath()) @AT@ 2241 @LENGTH@ 71
------UPD MethodInvocation@@getIn().setHeader("CamelFileAbsolutePath",file.getAbsoluteFileName()) @TO@ getIn().setHeader("CamelFileAbsolutePath",file.getAbsoluteFilePath()) @AT@ 2241 @LENGTH@ 70
---------UPD SimpleName@@MethodName:setHeader:["CamelFileAbsolutePath", file.getAbsoluteFileName()] @TO@ MethodName:setHeader:["CamelFileAbsolutePath", file.getAbsoluteFilePath()] @AT@ 2249 @LENGTH@ 62
------------UPD MethodInvocation@@file.getAbsoluteFileName() @TO@ file.getAbsoluteFilePath() @AT@ 2284 @LENGTH@ 26
---------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 2289 @LENGTH@ 21
---UPD IfStatement@@if (file.isAbsolute()) {  getIn().setHeader("CamelFilePath",file.getAbsoluteFileName());} else {  getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFileName());} @TO@ if (file.isAbsolute()) {  getIn().setHeader("CamelFilePath",file.getAbsoluteFilePath());} else {  getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFilePath());} @AT@ 2325 @LENGTH@ 261
------UPD Block@@ThenBody:{  getIn().setHeader("CamelFilePath",file.getAbsoluteFileName());} @TO@ ThenBody:{  getIn().setHeader("CamelFilePath",file.getAbsoluteFilePath());} @AT@ 2348 @LENGTH@ 95
---------UPD ExpressionStatement@@MethodInvocation:getIn().setHeader("CamelFilePath",file.getAbsoluteFileName()) @TO@ MethodInvocation:getIn().setHeader("CamelFilePath",file.getAbsoluteFilePath()) @AT@ 2366 @LENGTH@ 63
------------UPD MethodInvocation@@getIn().setHeader("CamelFilePath",file.getAbsoluteFileName()) @TO@ getIn().setHeader("CamelFilePath",file.getAbsoluteFilePath()) @AT@ 2366 @LENGTH@ 62
---------------UPD SimpleName@@MethodName:setHeader:["CamelFilePath", file.getAbsoluteFileName()] @TO@ MethodName:setHeader:["CamelFilePath", file.getAbsoluteFilePath()] @AT@ 2374 @LENGTH@ 54
------------------UPD MethodInvocation@@file.getAbsoluteFileName() @TO@ file.getAbsoluteFilePath() @AT@ 2401 @LENGTH@ 26
---------------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 2406 @LENGTH@ 21
------UPD Block@@ElseBody:{  getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFileName());} @TO@ ElseBody:{  getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFilePath());} @AT@ 2449 @LENGTH@ 137
---------UPD ExpressionStatement@@MethodInvocation:getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFileName()) @TO@ MethodInvocation:getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFilePath()) @AT@ 2467 @LENGTH@ 105
------------UPD MethodInvocation@@getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFileName()) @TO@ getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFilePath()) @AT@ 2467 @LENGTH@ 104
---------------UPD SimpleName@@MethodName:setHeader:["CamelFilePath", file.getEndpointPath() + File.separator + file.getRelativeFileName()] @TO@ MethodName:setHeader:["CamelFilePath", file.getEndpointPath() + File.separator + file.getRelativeFilePath()] @AT@ 2475 @LENGTH@ 96
------------------UPD InfixExpression@@file.getEndpointPath() + File.separator + file.getRelativeFileName() @TO@ file.getEndpointPath() + File.separator + file.getRelativeFilePath() @AT@ 2502 @LENGTH@ 68
---------------------UPD MethodInvocation@@file.getRelativeFileName() @TO@ file.getRelativeFilePath() @AT@ 2544 @LENGTH@ 26
------------------------UPD SimpleName@@MethodName:getRelativeFileName:[] @TO@ MethodName:getRelativeFilePath:[] @AT@ 2549 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:getIn().setHeader("CamelFileRelativePath",file.getRelativeFilePath()) @TO@ Block@@ThenBody:{  getIn().setHeader("CamelFileName",file.getFileName());  getIn().setHeader("CamelFileAbsolute",file.isAbsolute());  getIn().setHeader("CamelFileAbsolutePath",file.getAbsoluteFileName());  if (file.isAbsolute()) {    getIn().setHeader("CamelFilePath",file.getAbsoluteFileName());  } else {    getIn().setHeader("CamelFilePath",file.getEndpointPath() + File.separator + file.getRelativeFileName());  }  getIn().setHeader("CamelFileParent",file.getParent());  if (file.getFileLength() > 0) {    getIn().setHeader("CamelFileLength",file.getFileLength());  }  if (file.getLastModified() > 0) {    getIn().setHeader("CamelFileLastModified",new Date(file.getLastModified()));  }} @AT@ 2684 @LENGTH@ 71
------INS MethodInvocation@@getIn().setHeader("CamelFileRelativePath",file.getRelativeFilePath()) @TO@ ExpressionStatement@@MethodInvocation:getIn().setHeader("CamelFileRelativePath",file.getRelativeFilePath()) @AT@ 2684 @LENGTH@ 70
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@getIn().setHeader("CamelFileRelativePath",file.getRelativeFilePath()) @AT@ 2684 @LENGTH@ 7
---------INS SimpleName@@MethodName:setHeader:["CamelFileRelativePath", file.getRelativeFilePath()] @TO@ MethodInvocation@@getIn().setHeader("CamelFileRelativePath",file.getRelativeFilePath()) @AT@ 2692 @LENGTH@ 62
------------INS StringLiteral@@"CamelFileRelativePath" @TO@ SimpleName@@MethodName:setHeader:["CamelFileRelativePath", file.getRelativeFilePath()] @AT@ 2702 @LENGTH@ 23
------------INS MethodInvocation@@file.getRelativeFilePath() @TO@ SimpleName@@MethodName:setHeader:["CamelFileRelativePath", file.getRelativeFilePath()] @AT@ 2727 @LENGTH@ 26
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getRelativeFilePath() @AT@ 2727 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getRelativeFilePath:[] @TO@ MethodInvocation@@file.getRelativeFilePath() @AT@ 2732 @LENGTH@ 21


UPD VariableDeclarationStatement@@ObjectInput in=IOConverter.toObjectInput(stream); @TO@ ObjectInput in=ExchangeHelper.convertToType(exchange,ObjectInput.class,stream); @AT@ 1818 @LENGTH@ 51
---UPD VariableDeclarationFragment@@in=IOConverter.toObjectInput(stream) @TO@ in=ExchangeHelper.convertToType(exchange,ObjectInput.class,stream) @AT@ 1830 @LENGTH@ 38
------UPD MethodInvocation@@IOConverter.toObjectInput(stream) @TO@ ExchangeHelper.convertToType(exchange,ObjectInput.class,stream) @AT@ 1835 @LENGTH@ 33
---------UPD SimpleName@@Name:IOConverter @TO@ Name:ExchangeHelper @AT@ 1835 @LENGTH@ 11
---------UPD SimpleName@@MethodName:toObjectInput:[stream] @TO@ MethodName:convertToType:[exchange, ObjectInput.class, stream] @AT@ 1847 @LENGTH@ 21
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:toObjectInput:[stream] @AT@ 1894 @LENGTH@ 8
------------INS TypeLiteral@@ObjectInput.class @TO@ SimpleName@@MethodName:toObjectInput:[stream] @AT@ 1904 @LENGTH@ 17


UPD Block@@ThenBody:{  int lastPathIndex=fileName.lastIndexOf(getFileSeparator());  if (lastPathIndex != -1) {    String directory=fileName.substring(0,lastPathIndex);    directory=FileUtil.stripLeadingSeparator(directory);    if (!operations.buildDirectory(directory,false)) {      log.debug("Cannot build directory [" + directory + "] (could be because of denied permissions)");    }  }} @TO@ ThenBody:{  File file=new File(fileName);  String directory=file.getParent();  boolean absolute=file.isAbsolute();  if (directory != null) {    if (!operations.buildDirectory(directory,absolute)) {      log.debug("Cannot build directory [" + directory + "] (could be because of denied permissions)");    }  }} @AT@ 4886 @LENGTH@ 561
---UPD VariableDeclarationStatement@@int lastPathIndex=fileName.lastIndexOf(getFileSeparator()); @TO@ boolean absolute=file.isAbsolute(); @AT@ 4904 @LENGTH@ 61
------UPD PrimitiveType@@int @TO@ boolean @AT@ 4904 @LENGTH@ 3
------UPD VariableDeclarationFragment@@lastPathIndex=fileName.lastIndexOf(getFileSeparator()) @TO@ absolute=file.isAbsolute() @AT@ 4908 @LENGTH@ 56
---------UPD SimpleName@@lastPathIndex @TO@ absolute @AT@ 4908 @LENGTH@ 13
---------UPD MethodInvocation@@fileName.lastIndexOf(getFileSeparator()) @TO@ file.isAbsolute() @AT@ 4924 @LENGTH@ 40
------------UPD SimpleName@@Name:fileName @TO@ Name:file @AT@ 4924 @LENGTH@ 8
------------UPD SimpleName@@MethodName:lastIndexOf:[getFileSeparator()] @TO@ MethodName:isAbsolute:[] @AT@ 4933 @LENGTH@ 31
---------------DEL MethodInvocation@@MethodName:getFileSeparator:[] @AT@ 4945 @LENGTH@ 18
---INS VariableDeclarationStatement@@File file=new File(fileName); @TO@ Block@@ThenBody:{  int lastPathIndex=fileName.lastIndexOf(getFileSeparator());  if (lastPathIndex != -1) {    String directory=fileName.substring(0,lastPathIndex);    directory=FileUtil.stripLeadingSeparator(directory);    if (!operations.buildDirectory(directory,false)) {      log.debug("Cannot build directory [" + directory + "] (could be because of denied permissions)");    }  }} @AT@ 4965 @LENGTH@ 31
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File file=new File(fileName); @AT@ 4965 @LENGTH@ 4
------INS VariableDeclarationFragment@@file=new File(fileName) @TO@ VariableDeclarationStatement@@File file=new File(fileName); @AT@ 4970 @LENGTH@ 25
---------INS SimpleName@@file @TO@ VariableDeclarationFragment@@file=new File(fileName) @AT@ 4970 @LENGTH@ 4
---------INS ClassInstanceCreation@@File[fileName] @TO@ VariableDeclarationFragment@@file=new File(fileName) @AT@ 4977 @LENGTH@ 18
------------INS New@@new @TO@ ClassInstanceCreation@@File[fileName] @AT@ 4977 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[fileName] @AT@ 4981 @LENGTH@ 4
------------INS SimpleName@@fileName @TO@ ClassInstanceCreation@@File[fileName] @AT@ 4986 @LENGTH@ 8
---UPD IfStatement@@if (lastPathIndex != -1) {  String directory=fileName.substring(0,lastPathIndex);  directory=FileUtil.stripLeadingSeparator(directory);  if (!operations.buildDirectory(directory,false)) {    log.debug("Cannot build directory [" + directory + "] (could be because of denied permissions)");  }} @TO@ if (directory != null) {  if (!operations.buildDirectory(directory,absolute)) {    log.debug("Cannot build directory [" + directory + "] (could be because of denied permissions)");  }} @AT@ 4982 @LENGTH@ 451
------UPD InfixExpression@@lastPathIndex != -1 @TO@ directory != null @AT@ 4986 @LENGTH@ 19
---------UPD SimpleName@@lastPathIndex @TO@ directory @AT@ 4986 @LENGTH@ 13
---------DEL PrefixExpression@@-1 @AT@ 5003 @LENGTH@ 2
------------DEL Operator@@- @AT@ 5003 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 5004 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ InfixExpression@@lastPathIndex != -1 @AT@ 5137 @LENGTH@ 4
------UPD Block@@ThenBody:{  String directory=fileName.substring(0,lastPathIndex);  directory=FileUtil.stripLeadingSeparator(directory);  if (!operations.buildDirectory(directory,false)) {    log.debug("Cannot build directory [" + directory + "] (could be because of denied permissions)");  }} @TO@ ThenBody:{  if (!operations.buildDirectory(directory,absolute)) {    log.debug("Cannot build directory [" + directory + "] (could be because of denied permissions)");  }} @AT@ 5007 @LENGTH@ 426
---------DEL VariableDeclarationStatement@@String directory=fileName.substring(0,lastPathIndex); @AT@ 5029 @LENGTH@ 56
------------DEL SimpleType@@String @AT@ 5029 @LENGTH@ 6
------------DEL VariableDeclarationFragment@@directory=fileName.substring(0,lastPathIndex) @AT@ 5036 @LENGTH@ 48
---------------DEL SimpleName@@directory @AT@ 5036 @LENGTH@ 9
---------------DEL MethodInvocation@@fileName.substring(0,lastPathIndex) @AT@ 5048 @LENGTH@ 36
------------------DEL SimpleName@@Name:fileName @AT@ 5048 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:substring:[0, lastPathIndex] @AT@ 5057 @LENGTH@ 27
---------------------DEL NumberLiteral@@0 @AT@ 5067 @LENGTH@ 1
---------------------DEL SimpleName@@lastPathIndex @AT@ 5070 @LENGTH@ 13
---------DEL ExpressionStatement@@Assignment:directory=FileUtil.stripLeadingSeparator(directory) @AT@ 5145 @LENGTH@ 54
------------DEL Assignment@@directory=FileUtil.stripLeadingSeparator(directory) @AT@ 5145 @LENGTH@ 53
---------------DEL SimpleName@@directory @AT@ 5145 @LENGTH@ 9
---------------DEL Operator@@= @AT@ 5154 @LENGTH@ 1
---------------DEL MethodInvocation@@FileUtil.stripLeadingSeparator(directory) @AT@ 5157 @LENGTH@ 41
------------------DEL SimpleName@@Name:FileUtil @AT@ 5157 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:stripLeadingSeparator:[directory] @AT@ 5166 @LENGTH@ 32
---------------------DEL SimpleName@@directory @AT@ 5188 @LENGTH@ 9
---------UPD IfStatement@@if (!operations.buildDirectory(directory,false)) {  log.debug("Cannot build directory [" + directory + "] (could be because of denied permissions)");} @TO@ if (!operations.buildDirectory(directory,absolute)) {  log.debug("Cannot build directory [" + directory + "] (could be because of denied permissions)");} @AT@ 5220 @LENGTH@ 195
------------UPD PrefixExpression@@!operations.buildDirectory(directory,false) @TO@ !operations.buildDirectory(directory,absolute) @AT@ 5224 @LENGTH@ 44
---------------UPD MethodInvocation@@operations.buildDirectory(directory,false) @TO@ operations.buildDirectory(directory,absolute) @AT@ 5225 @LENGTH@ 43
------------------UPD SimpleName@@MethodName:buildDirectory:[directory, false] @TO@ MethodName:buildDirectory:[directory, absolute] @AT@ 5236 @LENGTH@ 32
---------------------INS SimpleName@@absolute @TO@ SimpleName@@MethodName:buildDirectory:[directory, false] @AT@ 5207 @LENGTH@ 8
---------------------DEL BooleanLiteral@@false @AT@ 5262 @LENGTH@ 5
---INS VariableDeclarationStatement@@String directory=file.getParent(); @TO@ Block@@ThenBody:{  int lastPathIndex=fileName.lastIndexOf(getFileSeparator());  if (lastPathIndex != -1) {    String directory=fileName.substring(0,lastPathIndex);    directory=FileUtil.stripLeadingSeparator(directory);    if (!operations.buildDirectory(directory,false)) {      log.debug("Cannot build directory [" + directory + "] (could be because of denied permissions)");    }  }} @AT@ 5013 @LENGTH@ 36
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String directory=file.getParent(); @AT@ 5013 @LENGTH@ 6
------INS VariableDeclarationFragment@@directory=file.getParent() @TO@ VariableDeclarationStatement@@String directory=file.getParent(); @AT@ 5020 @LENGTH@ 28
---------INS SimpleName@@directory @TO@ VariableDeclarationFragment@@directory=file.getParent() @AT@ 5020 @LENGTH@ 9
---------INS MethodInvocation@@file.getParent() @TO@ VariableDeclarationFragment@@directory=file.getParent() @AT@ 5032 @LENGTH@ 16
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParent() @AT@ 5032 @LENGTH@ 4
------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@file.getParent() @AT@ 5037 @LENGTH@ 11


UPD FieldDeclaration@@BindyKeyValuePairDataFormat, [camelDataFormat=new BindyKeyValuePairDataFormat("org.apache.camel.dataformat.bindy.model.fix.simple")] @TO@ BindyKeyValuePairDataFormat, [camelDataFormat=new BindyKeyValuePairDataFormat("org.apache.camel.dataformat.bindy.model.fix.tab")] @AT@ 2119 @LENGTH@ 132
---UPD VariableDeclarationFragment@@camelDataFormat=new BindyKeyValuePairDataFormat("org.apache.camel.dataformat.bindy.model.fix.simple") @TO@ camelDataFormat=new BindyKeyValuePairDataFormat("org.apache.camel.dataformat.bindy.model.fix.tab") @AT@ 2147 @LENGTH@ 103
------UPD ClassInstanceCreation@@BindyKeyValuePairDataFormat["org.apache.camel.dataformat.bindy.model.fix.simple"] @TO@ BindyKeyValuePairDataFormat["org.apache.camel.dataformat.bindy.model.fix.tab"] @AT@ 2165 @LENGTH@ 85
---------UPD StringLiteral@@"org.apache.camel.dataformat.bindy.model.fix.simple" @TO@ "org.apache.camel.dataformat.bindy.model.fix.tab" @AT@ 2197 @LENGTH@ 52


UPD FieldDeclaration@@private, Map<Endpoint,InstrumentationProcessor>, [interceptorMap=new HashMap<Endpoint,InstrumentationProcessor>()] @TO@ private, final, Map<Endpoint,InstrumentationProcessor>, [interceptorMap=new HashMap<Endpoint,InstrumentationProcessor>()] @AT@ 2269 @LENGTH@ 123
---INS Modifier@@final @TO@ FieldDeclaration@@private, Map<Endpoint,InstrumentationProcessor>, [interceptorMap=new HashMap<Endpoint,InstrumentationProcessor>()] @AT@ 2277 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2378 @LENGTH@ 100
---UPD MethodInvocation@@template.sendBodyAndHeader(getFtpUrl(),"Hello World",FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ template.sendBodyAndHeader(getFtpUrl(),"Hello World",NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2378 @LENGTH@ 99
------UPD SimpleName@@MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:sendBodyAndHeader:[getFtpUrl(), "Hello World", NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 2387 @LENGTH@ 90
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2433 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2433 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2527 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"hello.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"hello.txt") @AT@ 2527 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "hello.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "hello.txt"] @AT@ 2544 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2554 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2554 @LENGTH@ 13


INS IfStatement@@if (ObjectHelper.isEmpty(path)) {  return path;} @TO@ MethodDeclaration@@protected, String, MethodName:normalizePathToProtocol, String path,  @AT@ 6778 @LENGTH@ 68
---INS MethodInvocation@@ObjectHelper.isEmpty(path) @TO@ IfStatement@@if (ObjectHelper.isEmpty(path)) {  return path;} @AT@ 6782 @LENGTH@ 26
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(path) @AT@ 6782 @LENGTH@ 12
------INS SimpleName@@MethodName:isEmpty:[path] @TO@ MethodInvocation@@ObjectHelper.isEmpty(path) @AT@ 6795 @LENGTH@ 13
---------INS SimpleName@@path @TO@ SimpleName@@MethodName:isEmpty:[path] @AT@ 6803 @LENGTH@ 4
---INS Block@@ThenBody:{  return path;} @TO@ IfStatement@@if (ObjectHelper.isEmpty(path)) {  return path;} @AT@ 6810 @LENGTH@ 36
------INS ReturnStatement@@SimpleName:path @TO@ Block@@ThenBody:{  return path;} @AT@ 6824 @LENGTH@ 12
---------INS SimpleName@@path @TO@ ReturnStatement@@SimpleName:path @AT@ 6831 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("hello.txt",file.getRelativeFileName()) @TO@ MethodInvocation:assertEquals("hello.txt",file.getRelativeFilePath()) @AT@ 1976 @LENGTH@ 54
---UPD MethodInvocation@@assertEquals("hello.txt",file.getRelativeFileName()) @TO@ assertEquals("hello.txt",file.getRelativeFilePath()) @AT@ 1976 @LENGTH@ 53
------UPD SimpleName@@MethodName:assertEquals:["hello.txt", file.getRelativeFileName()] @TO@ MethodName:assertEquals:["hello.txt", file.getRelativeFilePath()] @AT@ 1976 @LENGTH@ 53
---------UPD MethodInvocation@@file.getRelativeFileName() @TO@ file.getRelativeFilePath() @AT@ 2002 @LENGTH@ 26
------------UPD SimpleName@@MethodName:getRelativeFileName:[] @TO@ MethodName:getRelativeFilePath:[] @AT@ 2007 @LENGTH@ 21


UPD ForStatement@@for (int i=0; i < nestedFields.length; i++) {  field=getField(componentClass,nestedFields[i]);  field.setAccessible(true);  value=field.get(value);  componentClass=value.getClass();} @TO@ for (int i=0; i < nestedFields.length; i++) {  field=getField(componentClass,nestedFields[i]);  field.setAccessible(true);  value=field.get(value);  if (value != null) {    componentClass=value.getClass();  }} @AT@ 3279 @LENGTH@ 242
---INS IfStatement@@if (value != null) {  componentClass=value.getClass();} @TO@ ForStatement@@for (int i=0; i < nestedFields.length; i++) {  field=getField(componentClass,nestedFields[i]);  field.setAccessible(true);  value=field.get(value);  componentClass=value.getClass();} @AT@ 3477 @LENGTH@ 85
------INS InfixExpression@@value != null @TO@ IfStatement@@if (value != null) {  componentClass=value.getClass();} @AT@ 3481 @LENGTH@ 13
---------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 3481 @LENGTH@ 5
---------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 3486 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 3490 @LENGTH@ 4
------INS Block@@ThenBody:{  componentClass=value.getClass();} @TO@ IfStatement@@if (value != null) {  componentClass=value.getClass();} @AT@ 3496 @LENGTH@ 66
---------MOV ExpressionStatement@@Assignment:componentClass=value.getClass() @TO@ Block@@ThenBody:{  componentClass=value.getClass();} @AT@ 3477 @LENGTH@ 34


UPD VariableDeclarationStatement@@File target=new File(file.getAbsoluteFileName()); @TO@ File target=new File(file.getAbsoluteFilePath()); @AT@ 2107 @LENGTH@ 51
---UPD VariableDeclarationFragment@@target=new File(file.getAbsoluteFileName()) @TO@ target=new File(file.getAbsoluteFilePath()) @AT@ 2112 @LENGTH@ 45
------UPD ClassInstanceCreation@@File[file.getAbsoluteFileName()] @TO@ File[file.getAbsoluteFilePath()] @AT@ 2121 @LENGTH@ 36
---------UPD MethodInvocation@@file.getAbsoluteFileName() @TO@ file.getAbsoluteFilePath() @AT@ 2130 @LENGTH@ 26
------------UPD SimpleName@@MethodName:getAbsoluteFileName:[] @TO@ MethodName:getAbsoluteFilePath:[] @AT@ 2135 @LENGTH@ 21


INS ExpressionStatement@@MethodInvocation:getOutFilter().add("content-type") @TO@ MethodDeclaration@@protected, void, MethodName:initialize,  @AT@ 1176 @LENGTH@ 35
---INS MethodInvocation@@getOutFilter().add("content-type") @TO@ ExpressionStatement@@MethodInvocation:getOutFilter().add("content-type") @AT@ 1176 @LENGTH@ 34
------INS MethodInvocation@@MethodName:getOutFilter:[] @TO@ MethodInvocation@@getOutFilter().add("content-type") @AT@ 1176 @LENGTH@ 14
------INS SimpleName@@MethodName:add:["content-type"] @TO@ MethodInvocation@@getOutFilter().add("content-type") @AT@ 1191 @LENGTH@ 19
---------INS StringLiteral@@"content-type" @TO@ SimpleName@@MethodName:add:["content-type"] @AT@ 1195 @LENGTH@ 14


UPD IfStatement@@if (camelContextService != null) {  camelContextService.stop();} else {  context.stop();} @TO@ if (camelContextService != null) {  camelContextService.stop();} else {  if (context != null) {    context.stop();  }} @AT@ 3491 @LENGTH@ 129
---INS Block@@ElseBody:{  if (context != null) {    context.stop();  }} @TO@ IfStatement@@if (camelContextService != null) {  camelContextService.stop();} else {  context.stop();} @AT@ 3581 @LENGTH@ 96
------INS IfStatement@@if (context != null) {  context.stop();} @TO@ Block@@ElseBody:{  if (context != null) {    context.stop();  }} @AT@ 3595 @LENGTH@ 68
---------MOV Block@@ElseBody:{  context.stop();} @TO@ IfStatement@@if (context != null) {  context.stop();} @AT@ 3581 @LENGTH@ 39
---------INS InfixExpression@@context != null @TO@ IfStatement@@if (context != null) {  context.stop();} @AT@ 3599 @LENGTH@ 15
------------INS SimpleName@@context @TO@ InfixExpression@@context != null @AT@ 3599 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@context != null @AT@ 3606 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@context != null @AT@ 3610 @LENGTH@ 4
---UPD Block@@ElseBody:{  context.stop();} @TO@ ThenBody:{  context.stop();} @AT@ 3581 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:from("seda:queue:test?size=100").to("dataset:foo") @TO@ MethodInvocation:from("seda:queue:test?size=200").to("dataset:foo") @AT@ 2045 @LENGTH@ 51
---UPD MethodInvocation@@from("seda:queue:test?size=100").to("dataset:foo") @TO@ from("seda:queue:test?size=200").to("dataset:foo") @AT@ 2045 @LENGTH@ 50
------UPD MethodInvocation@@MethodName:from:["seda:queue:test?size=100"] @TO@ MethodName:from:["seda:queue:test?size=200"] @AT@ 2045 @LENGTH@ 32
---------UPD StringLiteral@@"seda:queue:test?size=100" @TO@ "seda:queue:test?size=200" @AT@ 2050 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:from(getFtpUrl()).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    File body=exchange.getIn().getBody(File.class);
    assertNotNull(body);
    assertTrue("Local work file should exists",body.exists());
    assertEquals(FileUtil.normalizePath("target/lwd/hello.txt"),body.getPath());
  }
}
).to("file://target/out","mock:result") @TO@ MethodInvocation:from(getFtpUrl()).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    File body=exchange.getIn().getBody(File.class);
    assertNotNull(body);
    assertTrue("Local work file should exists",body.exists());
    assertEquals(FileUtil.normalizePath("target/lwd/hello.txt"),body.getPath());
  }
}
).to("mock:result","file://target/out") @AT@ 3185 @LENGTH@ 531
---UPD MethodInvocation@@from(getFtpUrl()).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    File body=exchange.getIn().getBody(File.class);
    assertNotNull(body);
    assertTrue("Local work file should exists",body.exists());
    assertEquals(FileUtil.normalizePath("target/lwd/hello.txt"),body.getPath());
  }
}
).to("file://target/out","mock:result") @TO@ from(getFtpUrl()).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    File body=exchange.getIn().getBody(File.class);
    assertNotNull(body);
    assertTrue("Local work file should exists",body.exists());
    assertEquals(FileUtil.normalizePath("target/lwd/hello.txt"),body.getPath());
  }
}
).to("mock:result","file://target/out") @AT@ 3185 @LENGTH@ 530
------UPD SimpleName@@MethodName:to:["file://target/out", "mock:result"] @TO@ MethodName:to:["mock:result", "file://target/out"] @AT@ 3677 @LENGTH@ 38
---------UPD StringLiteral@@"file://target/out" @TO@ "mock:result" @AT@ 3680 @LENGTH@ 19
---------UPD StringLiteral@@"mock:result" @TO@ "file://target/out" @AT@ 3701 @LENGTH@ 13


DEL MethodDeclaration@@public, void, MethodName:setInheritErrorHandler, boolean inheritErrorHandler,  @AT@ 7652 @LENGTH@ 204
---DEL Modifier@@public @AT@ 7652 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 7659 @LENGTH@ 4
---DEL SimpleName@@MethodName:setInheritErrorHandler @AT@ 7664 @LENGTH@ 22
---DEL SingleVariableDeclaration@@boolean inheritErrorHandler @AT@ 7687 @LENGTH@ 27
------DEL PrimitiveType@@boolean @AT@ 7687 @LENGTH@ 7
------DEL SimpleName@@inheritErrorHandler @AT@ 7695 @LENGTH@ 19
---DEL ExpressionStatement@@SuperMethodInvocation:super.setInheritErrorHandler(inheritErrorHandler) @AT@ 7726 @LENGTH@ 50
------DEL SuperMethodInvocation@@super.setInheritErrorHandler(inheritErrorHandler) @AT@ 7726 @LENGTH@ 49
---------DEL SimpleName@@MethodName:setInheritErrorHandler:[inheritErrorHandler] @AT@ 7732 @LENGTH@ 22
---------DEL SimpleName@@inheritErrorHandler @AT@ 7755 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:routeCollection.setInheritErrorHandlerFlag(inheritErrorHandler) @AT@ 7785 @LENGTH@ 64
------DEL MethodInvocation@@routeCollection.setInheritErrorHandlerFlag(inheritErrorHandler) @AT@ 7785 @LENGTH@ 63
---------DEL SimpleName@@Name:routeCollection @AT@ 7785 @LENGTH@ 15
---------DEL SimpleName@@MethodName:setInheritErrorHandlerFlag:[inheritErrorHandler] @AT@ 7801 @LENGTH@ 47
------------DEL SimpleName@@inheritErrorHandler @AT@ 7828 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:from("jms:queue:bankReplyQueue").aggregate(header(Constants.PROPERTY_SSN),new BankResponseAggregationStrategy()).completedPredicate(header(Exchange.AGGREGATED_COUNT).isEqualTo(3)).process(new Translator()).to("jms:queue:loanReplyQueue") @TO@ MethodInvocation:from("jms:queue:bankReplyQueue").aggregate(header(Constants.PROPERTY_SSN),new BankResponseAggregationStrategy()).completedPredicate(header(Exchange.AGGREGATED_SIZE).isEqualTo(3)).process(new Translator()).to("jms:queue:loanReplyQueue") @AT@ 3573 @LENGTH@ 360
---UPD MethodInvocation@@from("jms:queue:bankReplyQueue").aggregate(header(Constants.PROPERTY_SSN),new BankResponseAggregationStrategy()).completedPredicate(header(Exchange.AGGREGATED_COUNT).isEqualTo(3)).process(new Translator()).to("jms:queue:loanReplyQueue") @TO@ from("jms:queue:bankReplyQueue").aggregate(header(Constants.PROPERTY_SSN),new BankResponseAggregationStrategy()).completedPredicate(header(Exchange.AGGREGATED_SIZE).isEqualTo(3)).process(new Translator()).to("jms:queue:loanReplyQueue") @AT@ 3573 @LENGTH@ 359
------UPD MethodInvocation@@MethodName:completedPredicate:[header(Exchange.AGGREGATED_COUNT).isEqualTo(3)] @TO@ MethodName:completedPredicate:[header(Exchange.AGGREGATED_SIZE).isEqualTo(3)] @AT@ 3573 @LENGTH@ 206
---------UPD MethodInvocation@@header(Exchange.AGGREGATED_COUNT).isEqualTo(3) @TO@ header(Exchange.AGGREGATED_SIZE).isEqualTo(3) @AT@ 3732 @LENGTH@ 46
------------UPD MethodInvocation@@MethodName:header:[Exchange.AGGREGATED_COUNT] @TO@ MethodName:header:[Exchange.AGGREGATED_SIZE] @AT@ 3732 @LENGTH@ 33
---------------UPD QualifiedName@@Exchange.AGGREGATED_COUNT @TO@ Exchange.AGGREGATED_SIZE @AT@ 3739 @LENGTH@ 25
------------------UPD SimpleName@@AGGREGATED_COUNT @TO@ AGGREGATED_SIZE @AT@ 3748 @LENGTH@ 16


UPD MethodDeclaration@@Service, MethodName:acquireIfAbsent, Key key, Service service,  @TO@ Service, MethodName:addAndAcquire, Key key, Service service,  @AT@ 1238 @LENGTH@ 42
---UPD SimpleName@@MethodName:acquireIfAbsent @TO@ MethodName:addAndAcquire @AT@ 1238 @LENGTH@ 15


UPD ExpressionStatement@@Assignment:unicodeName=unicodeName @TO@ Assignment:this.unicodeName=unicodeName @AT@ 3481 @LENGTH@ 26
---UPD Assignment@@unicodeName=unicodeName @TO@ this.unicodeName=unicodeName @AT@ 3481 @LENGTH@ 25
------DEL SimpleName@@unicodeName @AT@ 3481 @LENGTH@ 11
------INS FieldAccess@@this.unicodeName @TO@ Assignment@@unicodeName=unicodeName @AT@ 3486 @LENGTH@ 16
---------INS ThisExpression@@this @TO@ FieldAccess@@this.unicodeName @AT@ 3486 @LENGTH@ 4
---------INS SimpleName@@unicodeName @TO@ FieldAccess@@this.unicodeName @AT@ 3491 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:dataFormat(new TidyMarkupDataFormat(String.class)) @TO@ MethodInvocation:dataFormat(new TidyMarkupDataFormat(Node.class)) @AT@ 5610 @LENGTH@ 58
---UPD MethodInvocation@@dataFormat(new TidyMarkupDataFormat(String.class)) @TO@ dataFormat(new TidyMarkupDataFormat(Node.class)) @AT@ 5617 @LENGTH@ 50
------UPD SimpleName@@MethodName:dataFormat:[new TidyMarkupDataFormat(String.class)] @TO@ MethodName:dataFormat:[new TidyMarkupDataFormat(Node.class)] @AT@ 5617 @LENGTH@ 50
---------UPD ClassInstanceCreation@@TidyMarkupDataFormat[String.class] @TO@ TidyMarkupDataFormat[Node.class] @AT@ 5628 @LENGTH@ 38
------------UPD TypeLiteral@@String.class @TO@ Node.class @AT@ 5653 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertExpression("backup-${in.header.foo}-${bean:generator}-${file:name.noext}.bak","backup-abc-generatorbybean-test/hello.bak") @TO@ MethodInvocation:assertExpression("backup-${in.header.foo}-${bean:generator}-${file:name.noext}.bak","backup-abc-generatorbybean-test" + File.separator + "hello.bak") @AT@ 4165 @LENGTH@ 130
---UPD MethodInvocation@@assertExpression("backup-${in.header.foo}-${bean:generator}-${file:name.noext}.bak","backup-abc-generatorbybean-test/hello.bak") @TO@ assertExpression("backup-${in.header.foo}-${bean:generator}-${file:name.noext}.bak","backup-abc-generatorbybean-test" + File.separator + "hello.bak") @AT@ 4165 @LENGTH@ 129
------UPD SimpleName@@MethodName:assertExpression:["backup-${in.header.foo}-${bean:generator}-${file:name.noext}.bak", "backup-abc-generatorbybean-test/hello.bak"] @TO@ MethodName:assertExpression:["backup-${in.header.foo}-${bean:generator}-${file:name.noext}.bak", "backup-abc-generatorbybean-test" + File.separator + "hello.bak"] @AT@ 4165 @LENGTH@ 129
---------DEL StringLiteral@@"backup-abc-generatorbybean-test/hello.bak" @AT@ 4250 @LENGTH@ 43
---------INS InfixExpression@@"backup-abc-generatorbybean-test" + File.separator + "hello.bak" @TO@ SimpleName@@MethodName:assertExpression:["backup-${in.header.foo}-${bean:generator}-${file:name.noext}.bak", "backup-abc-generatorbybean-test/hello.bak"] @AT@ 4271 @LENGTH@ 64
------------INS StringLiteral@@"backup-abc-generatorbybean-test" @TO@ InfixExpression@@"backup-abc-generatorbybean-test" + File.separator + "hello.bak" @AT@ 4271 @LENGTH@ 33
------------INS Operator@@+ @TO@ InfixExpression@@"backup-abc-generatorbybean-test" + File.separator + "hello.bak" @AT@ 4304 @LENGTH@ 1
------------INS QualifiedName@@File.separator @TO@ InfixExpression@@"backup-abc-generatorbybean-test" + File.separator + "hello.bak" @AT@ 4307 @LENGTH@ 14
---------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 4307 @LENGTH@ 4
---------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 4312 @LENGTH@ 9
------------INS StringLiteral@@"hello.bak" @TO@ InfixExpression@@"backup-abc-generatorbybean-test" + File.separator + "hello.bak" @AT@ 4324 @LENGTH@ 11


UPD IfStatement@@if (name.startsWith(getConfiguration().getFile())) {  name=name.substring(getConfiguration().getFile().length());} @TO@ if (name.startsWith(getConfiguration().getDirectory())) {  name=ObjectHelper.after(name,getConfiguration().getDirectory());} @AT@ 12907 @LENGTH@ 218
---UPD MethodInvocation@@name.startsWith(getConfiguration().getFile()) @TO@ name.startsWith(getConfiguration().getDirectory()) @AT@ 12911 @LENGTH@ 45
------UPD SimpleName@@MethodName:startsWith:[getConfiguration().getFile()] @TO@ MethodName:startsWith:[getConfiguration().getDirectory()] @AT@ 12916 @LENGTH@ 40
---------UPD MethodInvocation@@getConfiguration().getFile() @TO@ getConfiguration().getDirectory() @AT@ 12927 @LENGTH@ 28
------------UPD SimpleName@@MethodName:getFile:[] @TO@ MethodName:getDirectory:[] @AT@ 12946 @LENGTH@ 9
---UPD Block@@ThenBody:{  name=name.substring(getConfiguration().getFile().length());} @TO@ ThenBody:{  name=ObjectHelper.after(name,getConfiguration().getDirectory());} @AT@ 12958 @LENGTH@ 167
------UPD ExpressionStatement@@Assignment:name=name.substring(getConfiguration().getFile().length()) @TO@ Assignment:name=ObjectHelper.after(name,getConfiguration().getDirectory()) @AT@ 13054 @LENGTH@ 61
---------UPD Assignment@@name=name.substring(getConfiguration().getFile().length()) @TO@ name=ObjectHelper.after(name,getConfiguration().getDirectory()) @AT@ 13054 @LENGTH@ 60
------------UPD MethodInvocation@@name.substring(getConfiguration().getFile().length()) @TO@ ObjectHelper.after(name,getConfiguration().getDirectory()) @AT@ 13061 @LENGTH@ 53
---------------UPD SimpleName@@Name:name @TO@ Name:ObjectHelper @AT@ 13061 @LENGTH@ 4
---------------UPD SimpleName@@MethodName:substring:[getConfiguration().getFile().length()] @TO@ MethodName:after:[name, getConfiguration().getDirectory()] @AT@ 13066 @LENGTH@ 48
------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:substring:[getConfiguration().getFile().length()] @AT@ 13005 @LENGTH@ 4
------------------UPD MethodInvocation@@getConfiguration().getFile().length() @TO@ getConfiguration().getDirectory() @AT@ 13076 @LENGTH@ 37
---------------------DEL MethodInvocation@@MethodName:getFile:[] @AT@ 13076 @LENGTH@ 28
---------------------UPD SimpleName@@MethodName:length:[] @TO@ MethodName:getDirectory:[] @AT@ 13105 @LENGTH@ 8


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]StaticMethodFallbackTypeConverter, [TypeConverter] @AT@ 2194 @LENGTH@ 113
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2194 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2205 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2207 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2226 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2226 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2226 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2232 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2235 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2241 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2241 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2248 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,null,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 2265 @LENGTH@ 36
------INS MethodInvocation@@convertTo(type,null,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,null,value) @AT@ 2272 @LENGTH@ 28
---------INS SimpleName@@MethodName:convertTo:[type, null, value] @TO@ MethodInvocation@@convertTo(type,null,value) @AT@ 2272 @LENGTH@ 28
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2282 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2288 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2294 @LENGTH@ 5


INS MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, String text,  @TO@ TypeDeclaration@@[@Converter, public, final]IOConverter,  @AT@ 3931 @LENGTH@ 102
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, String text,  @AT@ 3931 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, String text,  @AT@ 3938 @LENGTH@ 6
---INS SimpleType@@InputStream @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, String text,  @AT@ 3945 @LENGTH@ 11
---INS SimpleName@@MethodName:toInputStream @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, String text,  @AT@ 3957 @LENGTH@ 13
---INS SingleVariableDeclaration@@String text @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, String text,  @AT@ 3971 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String text @AT@ 3971 @LENGTH@ 6
------INS SimpleName@@text @TO@ SingleVariableDeclaration@@String text @AT@ 3978 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:toInputStream(text,null) @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toInputStream, String text,  @AT@ 3994 @LENGTH@ 33
------INS MethodInvocation@@toInputStream(text,null) @TO@ ReturnStatement@@MethodInvocation:toInputStream(text,null) @AT@ 4001 @LENGTH@ 25
---------INS SimpleName@@MethodName:toInputStream:[text, null] @TO@ MethodInvocation@@toInputStream(text,null) @AT@ 4001 @LENGTH@ 25
------------INS SimpleName@@text @TO@ SimpleName@@MethodName:toInputStream:[text, null] @AT@ 4015 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toInputStream:[text, null] @AT@ 4021 @LENGTH@ 4


UPD VariableDeclarationStatement@@String out=(String)template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec",message); @TO@ String out=(String)template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec",message); @AT@ 3098 @LENGTH@ 104
---UPD VariableDeclarationFragment@@out=(String)template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec",message) @TO@ out=(String)template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec",message) @AT@ 3105 @LENGTH@ 96
------UPD CastExpression@@(String)template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec",message) @TO@ (String)template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec",message) @AT@ 3111 @LENGTH@ 90
---------UPD MethodInvocation@@template.requestBody("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec",message) @TO@ template.requestBody("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec",message) @AT@ 3119 @LENGTH@ 82
------------UPD SimpleName@@MethodName:requestBody:["mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec", message] @TO@ MethodName:requestBody:["mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec", message] @AT@ 3128 @LENGTH@ 73
---------------UPD StringLiteral@@"mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec" @TO@ "mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec" @AT@ 3140 @LENGTH@ 51


INS MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @TO@ TypeDeclaration@@[public]DefaultLoginPageGeneratingFilterTests,  @AT@ 2712 @LENGTH@ 862
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @AT@ 2712 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @AT@ 2719 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesNonIso8859CharsInErrorMessage @TO@ MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @AT@ 2724 @LENGTH@ 36
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @AT@ 2770 @LENGTH@ 9
---INS VariableDeclarationStatement@@DefaultLoginPageGeneratingFilter filter=new DefaultLoginPageGeneratingFilter(new AuthenticationProcessingFilter()); @TO@ MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @AT@ 2790 @LENGTH@ 117
------INS SimpleType@@DefaultLoginPageGeneratingFilter @TO@ VariableDeclarationStatement@@DefaultLoginPageGeneratingFilter filter=new DefaultLoginPageGeneratingFilter(new AuthenticationProcessingFilter()); @AT@ 2790 @LENGTH@ 32
------INS VariableDeclarationFragment@@filter=new DefaultLoginPageGeneratingFilter(new AuthenticationProcessingFilter()) @TO@ VariableDeclarationStatement@@DefaultLoginPageGeneratingFilter filter=new DefaultLoginPageGeneratingFilter(new AuthenticationProcessingFilter()); @AT@ 2823 @LENGTH@ 83
---------INS SimpleName@@filter @TO@ VariableDeclarationFragment@@filter=new DefaultLoginPageGeneratingFilter(new AuthenticationProcessingFilter()) @AT@ 2823 @LENGTH@ 6
---------INS ClassInstanceCreation@@DefaultLoginPageGeneratingFilter[new AuthenticationProcessingFilter()] @TO@ VariableDeclarationFragment@@filter=new DefaultLoginPageGeneratingFilter(new AuthenticationProcessingFilter()) @AT@ 2832 @LENGTH@ 74
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultLoginPageGeneratingFilter[new AuthenticationProcessingFilter()] @AT@ 2832 @LENGTH@ 3
------------INS SimpleType@@DefaultLoginPageGeneratingFilter @TO@ ClassInstanceCreation@@DefaultLoginPageGeneratingFilter[new AuthenticationProcessingFilter()] @AT@ 2836 @LENGTH@ 32
------------INS ClassInstanceCreation@@AuthenticationProcessingFilter[] @TO@ ClassInstanceCreation@@DefaultLoginPageGeneratingFilter[new AuthenticationProcessingFilter()] @AT@ 2869 @LENGTH@ 36
---------------INS New@@new @TO@ ClassInstanceCreation@@AuthenticationProcessingFilter[] @AT@ 2869 @LENGTH@ 3
---------------INS SimpleType@@AuthenticationProcessingFilter @TO@ ClassInstanceCreation@@AuthenticationProcessingFilter[] @AT@ 2873 @LENGTH@ 30
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("GET","/spring_security_login"); @TO@ MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @AT@ 2916 @LENGTH@ 93
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("GET","/spring_security_login"); @AT@ 2916 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest("GET","/spring_security_login") @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("GET","/spring_security_login"); @AT@ 2939 @LENGTH@ 69
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest("GET","/spring_security_login") @AT@ 2939 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest["GET", "/spring_security_login"] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest("GET","/spring_security_login") @AT@ 2949 @LENGTH@ 59
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/spring_security_login"] @AT@ 2949 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/spring_security_login"] @AT@ 2953 @LENGTH@ 22
------------INS StringLiteral@@"GET" @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/spring_security_login"] @AT@ 2976 @LENGTH@ 5
------------INS StringLiteral@@"/spring_security_login" @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/spring_security_login"] @AT@ 2983 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:request.addParameter("login_error","true") @TO@ MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @AT@ 3018 @LENGTH@ 44
------INS MethodInvocation@@request.addParameter("login_error","true") @TO@ ExpressionStatement@@MethodInvocation:request.addParameter("login_error","true") @AT@ 3018 @LENGTH@ 43
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addParameter("login_error","true") @AT@ 3018 @LENGTH@ 7
---------INS SimpleName@@MethodName:addParameter:["login_error", "true"] @TO@ MethodInvocation@@request.addParameter("login_error","true") @AT@ 3026 @LENGTH@ 35
------------INS StringLiteral@@"login_error" @TO@ SimpleName@@MethodName:addParameter:["login_error", "true"] @AT@ 3039 @LENGTH@ 13
------------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:addParameter:["login_error", "true"] @AT@ 3054 @LENGTH@ 6
---INS VariableDeclarationStatement@@MessageSourceAccessor messages=SpringSecurityMessageSource.getAccessor(); @TO@ MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @AT@ 3071 @LENGTH@ 75
------INS SimpleType@@MessageSourceAccessor @TO@ VariableDeclarationStatement@@MessageSourceAccessor messages=SpringSecurityMessageSource.getAccessor(); @AT@ 3071 @LENGTH@ 21
------INS VariableDeclarationFragment@@messages=SpringSecurityMessageSource.getAccessor() @TO@ VariableDeclarationStatement@@MessageSourceAccessor messages=SpringSecurityMessageSource.getAccessor(); @AT@ 3093 @LENGTH@ 52
---------INS SimpleName@@messages @TO@ VariableDeclarationFragment@@messages=SpringSecurityMessageSource.getAccessor() @AT@ 3093 @LENGTH@ 8
---------INS MethodInvocation@@SpringSecurityMessageSource.getAccessor() @TO@ VariableDeclarationFragment@@messages=SpringSecurityMessageSource.getAccessor() @AT@ 3104 @LENGTH@ 41
------------INS SimpleName@@Name:SpringSecurityMessageSource @TO@ MethodInvocation@@SpringSecurityMessageSource.getAccessor() @AT@ 3104 @LENGTH@ 27
------------INS SimpleName@@MethodName:getAccessor:[] @TO@ MethodInvocation@@SpringSecurityMessageSource.getAccessor() @AT@ 3132 @LENGTH@ 13
---INS VariableDeclarationStatement@@String message=messages.getMessage("AbstractUserDetailsAuthenticationProvider.badCredentials","Bad credentials",Locale.KOREA); @TO@ MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @AT@ 3155 @LENGTH@ 147
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String message=messages.getMessage("AbstractUserDetailsAuthenticationProvider.badCredentials","Bad credentials",Locale.KOREA); @AT@ 3155 @LENGTH@ 6
------INS VariableDeclarationFragment@@message=messages.getMessage("AbstractUserDetailsAuthenticationProvider.badCredentials","Bad credentials",Locale.KOREA) @TO@ VariableDeclarationStatement@@String message=messages.getMessage("AbstractUserDetailsAuthenticationProvider.badCredentials","Bad credentials",Locale.KOREA); @AT@ 3162 @LENGTH@ 139
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=messages.getMessage("AbstractUserDetailsAuthenticationProvider.badCredentials","Bad credentials",Locale.KOREA) @AT@ 3162 @LENGTH@ 7
---------INS MethodInvocation@@messages.getMessage("AbstractUserDetailsAuthenticationProvider.badCredentials","Bad credentials",Locale.KOREA) @TO@ VariableDeclarationFragment@@message=messages.getMessage("AbstractUserDetailsAuthenticationProvider.badCredentials","Bad credentials",Locale.KOREA) @AT@ 3172 @LENGTH@ 129
------------INS SimpleName@@Name:messages @TO@ MethodInvocation@@messages.getMessage("AbstractUserDetailsAuthenticationProvider.badCredentials","Bad credentials",Locale.KOREA) @AT@ 3172 @LENGTH@ 8
------------INS SimpleName@@MethodName:getMessage:["AbstractUserDetailsAuthenticationProvider.badCredentials", "Bad credentials", Locale.KOREA] @TO@ MethodInvocation@@messages.getMessage("AbstractUserDetailsAuthenticationProvider.badCredentials","Bad credentials",Locale.KOREA) @AT@ 3181 @LENGTH@ 120
---------------INS StringLiteral@@"AbstractUserDetailsAuthenticationProvider.badCredentials" @TO@ SimpleName@@MethodName:getMessage:["AbstractUserDetailsAuthenticationProvider.badCredentials", "Bad credentials", Locale.KOREA] @AT@ 3209 @LENGTH@ 58
---------------INS StringLiteral@@"Bad credentials" @TO@ SimpleName@@MethodName:getMessage:["AbstractUserDetailsAuthenticationProvider.badCredentials", "Bad credentials", Locale.KOREA] @AT@ 3269 @LENGTH@ 17
---------------INS QualifiedName@@Locale.KOREA @TO@ SimpleName@@MethodName:getMessage:["AbstractUserDetailsAuthenticationProvider.badCredentials", "Bad credentials", Locale.KOREA] @AT@ 3288 @LENGTH@ 12
------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.KOREA @AT@ 3288 @LENGTH@ 6
------------------INS SimpleName@@KOREA @TO@ QualifiedName@@Locale.KOREA @AT@ 3295 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:System.out.println("Message: " + message) @TO@ MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @AT@ 3311 @LENGTH@ 42
------INS MethodInvocation@@System.out.println("Message: " + message) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("Message: " + message) @AT@ 3311 @LENGTH@ 41
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("Message: " + message) @AT@ 3311 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["Message: " + message] @TO@ MethodInvocation@@System.out.println("Message: " + message) @AT@ 3322 @LENGTH@ 30
------------INS InfixExpression@@"Message: " + message @TO@ SimpleName@@MethodName:println:["Message: " + message] @AT@ 3330 @LENGTH@ 21
---------------INS StringLiteral@@"Message: " @TO@ InfixExpression@@"Message: " + message @AT@ 3330 @LENGTH@ 11
---------------INS Operator@@+ @TO@ InfixExpression@@"Message: " + message @AT@ 3341 @LENGTH@ 1
---------------INS SimpleName@@message @TO@ InfixExpression@@"Message: " + message @AT@ 3344 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:request.getSession().setAttribute(AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY,new BadCredentialsException(message)) @TO@ MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @AT@ 3362 @LENGTH@ 133
------INS MethodInvocation@@request.getSession().setAttribute(AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY,new BadCredentialsException(message)) @TO@ ExpressionStatement@@MethodInvocation:request.getSession().setAttribute(AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY,new BadCredentialsException(message)) @AT@ 3362 @LENGTH@ 132
---------INS MethodInvocation@@MethodName:getSession:[] @TO@ MethodInvocation@@request.getSession().setAttribute(AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY,new BadCredentialsException(message)) @AT@ 3362 @LENGTH@ 20
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getSession().setAttribute(AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY,new BadCredentialsException(message)) @AT@ 3362 @LENGTH@ 7
---------INS SimpleName@@MethodName:setAttribute:[AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY, new BadCredentialsException(message)] @TO@ MethodInvocation@@request.getSession().setAttribute(AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY,new BadCredentialsException(message)) @AT@ 3383 @LENGTH@ 111
------------INS QualifiedName@@AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY @TO@ SimpleName@@MethodName:setAttribute:[AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY, new BadCredentialsException(message)] @AT@ 3396 @LENGTH@ 59
---------------INS SimpleName@@AbstractProcessingFilter @TO@ QualifiedName@@AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY @AT@ 3396 @LENGTH@ 24
---------------INS SimpleName@@SPRING_SECURITY_LAST_EXCEPTION_KEY @TO@ QualifiedName@@AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY @AT@ 3421 @LENGTH@ 34
------------INS ClassInstanceCreation@@BadCredentialsException[message] @TO@ SimpleName@@MethodName:setAttribute:[AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY, new BadCredentialsException(message)] @AT@ 3457 @LENGTH@ 36
---------------INS New@@new @TO@ ClassInstanceCreation@@BadCredentialsException[message] @AT@ 3457 @LENGTH@ 3
---------------INS SimpleType@@BadCredentialsException @TO@ ClassInstanceCreation@@BadCredentialsException[message] @AT@ 3461 @LENGTH@ 23
---------------INS SimpleName@@message @TO@ ClassInstanceCreation@@BadCredentialsException[message] @AT@ 3485 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:filter.doFilter(request,new MockHttpServletResponse(),chain) @TO@ MethodDeclaration@@public, void, MethodName:handlesNonIso8859CharsInErrorMessage, Exception,  @AT@ 3505 @LENGTH@ 63
------INS MethodInvocation@@filter.doFilter(request,new MockHttpServletResponse(),chain) @TO@ ExpressionStatement@@MethodInvocation:filter.doFilter(request,new MockHttpServletResponse(),chain) @AT@ 3505 @LENGTH@ 62
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.doFilter(request,new MockHttpServletResponse(),chain) @AT@ 3505 @LENGTH@ 6
---------INS SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), chain] @TO@ MethodInvocation@@filter.doFilter(request,new MockHttpServletResponse(),chain) @AT@ 3512 @LENGTH@ 55
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), chain] @AT@ 3521 @LENGTH@ 7
------------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), chain] @AT@ 3530 @LENGTH@ 29
---------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 3530 @LENGTH@ 3
---------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 3534 @LENGTH@ 23
------------INS SimpleName@@chain @TO@ SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), chain] @AT@ 3561 @LENGTH@ 5


INS MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]ArrayTypeConverter, [TypeConverter] @AT@ 3122 @LENGTH@ 107
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 3122 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 3133 @LENGTH@ 1
---INS SimpleName@@MethodName:mandatoryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 3135 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 3154 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3154 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3154 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3160 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3163 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 3169 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 3169 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 3176 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:mandatoryConvertTo, Class<T> type, Object value,  @AT@ 3193 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 3200 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 3200 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3210 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3216 @LENGTH@ 5


UPD MethodDeclaration@@voidMethodName:Change, final String pFilename,  @TO@ voidMethodName:Change, final String pFilename, int type,  @AT@ 1549 @LENGTH@ 182
---INS SingleVariableDeclaration@@int type @TO@ MethodDeclaration@@voidMethodName:Change, final String pFilename,  @AT@ 1619 @LENGTH@ 8
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int type @AT@ 1619 @LENGTH@ 3
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@int type @AT@ 1623 @LENGTH@ 4
---UPD ExpressionStatement@@Assignment:targetFile=pFilename @TO@ Assignment:this.targetFile=pFilename @AT@ 1651 @LENGTH@ 23
------UPD Assignment@@targetFile=pFilename @TO@ this.targetFile=pFilename @AT@ 1651 @LENGTH@ 22
---------DEL SimpleName@@targetFile @AT@ 1651 @LENGTH@ 10
---------INS FieldAccess@@this.targetFile @TO@ Assignment@@targetFile=pFilename @AT@ 1700 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.targetFile @AT@ 1700 @LENGTH@ 4
------------INS SimpleName@@targetFile @TO@ FieldAccess@@this.targetFile @AT@ 1705 @LENGTH@ 10
---UPD ExpressionStatement@@Assignment:type=TYPE_DELETE @TO@ Assignment:this.type=type @AT@ 1677 @LENGTH@ 19
------UPD Assignment@@type=TYPE_DELETE @TO@ this.type=type @AT@ 1677 @LENGTH@ 18
---------DEL SimpleName@@type @AT@ 1677 @LENGTH@ 4
---------UPD SimpleName@@TYPE_DELETE @TO@ type @AT@ 1684 @LENGTH@ 11
---------INS FieldAccess@@this.type @TO@ Assignment@@type=TYPE_DELETE @AT@ 1731 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.type @AT@ 1731 @LENGTH@ 4
------------INS SimpleName@@type @TO@ FieldAccess@@this.type @AT@ 1736 @LENGTH@ 4
---UPD ExpressionStatement@@Assignment:input=null @TO@ Assignment:this.input=null @AT@ 1699 @LENGTH@ 13
------UPD Assignment@@input=null @TO@ this.input=null @AT@ 1699 @LENGTH@ 12
---------DEL SimpleName@@input @AT@ 1699 @LENGTH@ 5
---------INS FieldAccess@@this.input @TO@ Assignment@@input=null @AT@ 1751 @LENGTH@ 10
------------INS ThisExpression@@this @TO@ FieldAccess@@this.input @AT@ 1751 @LENGTH@ 4
------------INS SimpleName@@input @TO@ FieldAccess@@this.input @AT@ 1756 @LENGTH@ 5
---UPD ExpressionStatement@@Assignment:entry=null @TO@ Assignment:this.entry=null @AT@ 1715 @LENGTH@ 13
------UPD Assignment@@entry=null @TO@ this.entry=null @AT@ 1715 @LENGTH@ 12
---------DEL SimpleName@@entry @AT@ 1715 @LENGTH@ 5
---------INS FieldAccess@@this.entry @TO@ Assignment@@entry=null @AT@ 1772 @LENGTH@ 10
------------INS ThisExpression@@this @TO@ FieldAccess@@this.entry @AT@ 1772 @LENGTH@ 4
------------INS SimpleName@@entry @TO@ FieldAccess@@this.entry @AT@ 1777 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @AT@ 1867 @LENGTH@ 735
---UPD MethodInvocation@@from("mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @TO@ from("mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @AT@ 1867 @LENGTH@ 734
------UPD MethodInvocation@@MethodName:from:["mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec"] @TO@ MethodName:from:["mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec"] @AT@ 1867 @LENGTH@ 57
---------UPD StringLiteral@@"mina:tcp://0.0.0.0:8888?sync=true&codec=#hl7codec" @TO@ "mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec" @AT@ 1872 @LENGTH@ 51


MOV ExpressionStatement@@Assignment:name=FileUtil.normalizePath(name) @TO@ MethodDeclaration@@protected, String, MethodName:createFileName, Exchange exchange,  @AT@ 7277 @LENGTH@ 36


UPD VariableDeclarationStatement@@ObjectOutput out=IOConverter.toObjectOutput(stream); @TO@ ObjectOutput out=ExchangeHelper.convertToType(exchange,ObjectOutput.class,stream); @AT@ 1406 @LENGTH@ 54
---UPD VariableDeclarationFragment@@out=IOConverter.toObjectOutput(stream) @TO@ out=ExchangeHelper.convertToType(exchange,ObjectOutput.class,stream) @AT@ 1419 @LENGTH@ 40
------UPD MethodInvocation@@IOConverter.toObjectOutput(stream) @TO@ ExchangeHelper.convertToType(exchange,ObjectOutput.class,stream) @AT@ 1425 @LENGTH@ 34
---------UPD SimpleName@@Name:IOConverter @TO@ Name:ExchangeHelper @AT@ 1425 @LENGTH@ 11
---------UPD SimpleName@@MethodName:toObjectOutput:[stream] @TO@ MethodName:convertToType:[exchange, ObjectOutput.class, stream] @AT@ 1437 @LENGTH@ 22
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:toObjectOutput:[stream] @AT@ 1452 @LENGTH@ 8
------------INS TypeLiteral@@ObjectOutput.class @TO@ SimpleName@@MethodName:toObjectOutput:[stream] @AT@ 1462 @LENGTH@ 18


INS MethodDeclaration@@private, voidMethodName:SplitWordsBean,  @TO@ TypeDeclaration@@[public, static]SplitWordsBean,  @AT@ 2150 @LENGTH@ 64
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:SplitWordsBean,  @AT@ 2150 @LENGTH@ 7
---INS SimpleName@@MethodName:SplitWordsBean @TO@ MethodDeclaration@@private, voidMethodName:SplitWordsBean,  @AT@ 2158 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"ascii.txt") @TO@ MethodInvocation:exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"ascii.txt") @AT@ 2372 @LENGTH@ 72
---UPD MethodInvocation@@exchange.getIn().setHeader(FileComponent.HEADER_FILE_NAME,"ascii.txt") @TO@ exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_NAME,"ascii.txt") @AT@ 2372 @LENGTH@ 71
------UPD SimpleName@@MethodName:setHeader:[FileComponent.HEADER_FILE_NAME, "ascii.txt"] @TO@ MethodName:setHeader:[NewFileComponent.HEADER_FILE_NAME, "ascii.txt"] @AT@ 2389 @LENGTH@ 54
---------UPD QualifiedName@@FileComponent.HEADER_FILE_NAME @TO@ NewFileComponent.HEADER_FILE_NAME @AT@ 2399 @LENGTH@ 30
------------UPD SimpleName@@FileComponent @TO@ NewFileComponent @AT@ 2399 @LENGTH@ 13


INS IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Connecting to " + config.remoteServerInformation());} @TO@ MethodDeclaration@@public, boolean, MethodName:connect, RemoteFileConfiguration config, GenericFileOperationFailedException,  @AT@ 2700 @LENGTH@ 113
---INS MethodInvocation@@LOG.isTraceEnabled() @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Connecting to " + config.remoteServerInformation());} @AT@ 2704 @LENGTH@ 20
------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 2704 @LENGTH@ 3
------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 2708 @LENGTH@ 16
---INS Block@@ThenBody:{  LOG.trace("Connecting to " + config.remoteServerInformation());} @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Connecting to " + config.remoteServerInformation());} @AT@ 2726 @LENGTH@ 87
------MOV ExpressionStatement@@MethodInvocation:LOG.trace("Connecting to " + config.remoteServerInformation()) @TO@ Block@@ThenBody:{  LOG.trace("Connecting to " + config.remoteServerInformation());} @AT@ 2700 @LENGTH@ 63


INS ExpressionStatement@@MethodInvocation:LOG.info("Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping") @TO@ MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 23961 @LENGTH@ 91
---INS MethodInvocation@@LOG.info("Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping") @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping") @AT@ 23961 @LENGTH@ 90
------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping") @AT@ 23961 @LENGTH@ 3
------INS SimpleName@@MethodName:info:["Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping"] @TO@ MethodInvocation@@LOG.info("Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping") @AT@ 23965 @LENGTH@ 86
---------INS InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping" @TO@ SimpleName@@MethodName:info:["Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping"] @AT@ 23970 @LENGTH@ 80
------------INS StringLiteral@@"Apache Camel " @TO@ InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping" @AT@ 23970 @LENGTH@ 15
------------INS Operator@@+ @TO@ InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping" @AT@ 23985 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getVersion:[] @TO@ InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping" @AT@ 23988 @LENGTH@ 12
------------INS StringLiteral@@" (CamelContext:" @TO@ InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping" @AT@ 24003 @LENGTH@ 17
------------INS MethodInvocation@@MethodName:getName:[] @TO@ InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping" @AT@ 24023 @LENGTH@ 9
------------INS StringLiteral@@") is stopping" @TO@ InfixExpression@@"Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is stopping" @AT@ 24035 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:LOG.debug("attached methodRouter uriPattern: " + endpoint.getUriPattern()) @TO@ MethodInvocation:LOG.debug("Attached methodRouter uriPattern: " + endpoint.getUriPattern()) @AT@ 4977 @LENGTH@ 75
---UPD MethodInvocation@@LOG.debug("attached methodRouter uriPattern: " + endpoint.getUriPattern()) @TO@ LOG.debug("Attached methodRouter uriPattern: " + endpoint.getUriPattern()) @AT@ 4977 @LENGTH@ 74
------UPD SimpleName@@MethodName:debug:["attached methodRouter uriPattern: " + endpoint.getUriPattern()] @TO@ MethodName:debug:["Attached methodRouter uriPattern: " + endpoint.getUriPattern()] @AT@ 4981 @LENGTH@ 70
---------UPD InfixExpression@@"attached methodRouter uriPattern: " + endpoint.getUriPattern() @TO@ "Attached methodRouter uriPattern: " + endpoint.getUriPattern() @AT@ 4987 @LENGTH@ 63
------------UPD StringLiteral@@"attached methodRouter uriPattern: " @TO@ "Attached methodRouter uriPattern: " @AT@ 4987 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:assertEquals("We should find three converter package here",3,packages.length) @TO@ MethodInvocation:assertTrue("We should find some converter packages here",packages.length > 0) @AT@ 2006 @LENGTH@ 80
---UPD MethodInvocation@@assertEquals("We should find three converter package here",3,packages.length) @TO@ assertTrue("We should find some converter packages here",packages.length > 0) @AT@ 2006 @LENGTH@ 79
------UPD SimpleName@@MethodName:assertEquals:["We should find three converter package here", 3, packages.length] @TO@ MethodName:assertTrue:["We should find some converter packages here", packages.length > 0] @AT@ 2006 @LENGTH@ 79
---------UPD StringLiteral@@"We should find three converter package here" @TO@ "We should find some converter packages here" @AT@ 2019 @LENGTH@ 45
---------INS InfixExpression@@packages.length > 0 @TO@ SimpleName@@MethodName:assertEquals:["We should find three converter package here", 3, packages.length] @AT@ 2064 @LENGTH@ 19
------------INS QualifiedName@@packages.length @TO@ InfixExpression@@packages.length > 0 @AT@ 2064 @LENGTH@ 15
---------------MOV SimpleName@@packages @TO@ QualifiedName@@packages.length @AT@ 2069 @LENGTH@ 8
---------------MOV SimpleName@@length @TO@ QualifiedName@@packages.length @AT@ 2078 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@packages.length > 0 @AT@ 2079 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@packages.length > 0 @AT@ 2082 @LENGTH@ 1
---------DEL NumberLiteral@@3 @AT@ 2066 @LENGTH@ 1
---------DEL QualifiedName@@packages.length @AT@ 2069 @LENGTH@ 15


UPD VariableDeclarationStatement@@SpringCamelContext context=getCamelContext(); @TO@ SpringCamelContext context=(SpringCamelContext)getCamelContext(); @AT@ 1856 @LENGTH@ 47
---UPD VariableDeclarationFragment@@context=getCamelContext() @TO@ context=(SpringCamelContext)getCamelContext() @AT@ 1875 @LENGTH@ 27
------INS CastExpression@@(SpringCamelContext)getCamelContext() @TO@ VariableDeclarationFragment@@context=getCamelContext() @AT@ 1885 @LENGTH@ 38
---------INS SimpleType@@SpringCamelContext @TO@ CastExpression@@(SpringCamelContext)getCamelContext() @AT@ 1886 @LENGTH@ 18
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ CastExpression@@(SpringCamelContext)getCamelContext() @AT@ 1906 @LENGTH@ 17
------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 1885 @LENGTH@ 17

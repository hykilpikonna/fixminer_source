UPD ExpressionStatement@@Assignment:buf=new DynamicChannelBuffer(bytes.length) @TO@ Assignment:buf=ByteBufAllocator.DEFAULT.buffer(bytes.length) @AT@ 1424 @LENGTH@ 45
---UPD Assignment@@buf=new DynamicChannelBuffer(bytes.length) @TO@ buf=ByteBufAllocator.DEFAULT.buffer(bytes.length) @AT@ 1424 @LENGTH@ 44
------INS MethodInvocation@@ByteBufAllocator.DEFAULT.buffer(bytes.length) @TO@ Assignment@@buf=new DynamicChannelBuffer(bytes.length) @AT@ 1414 @LENGTH@ 45
---------INS QualifiedName@@Name:ByteBufAllocator.DEFAULT @TO@ MethodInvocation@@ByteBufAllocator.DEFAULT.buffer(bytes.length) @AT@ 1414 @LENGTH@ 24
---------INS SimpleName@@MethodName:buffer:[bytes.length] @TO@ MethodInvocation@@ByteBufAllocator.DEFAULT.buffer(bytes.length) @AT@ 1439 @LENGTH@ 20
------------INS QualifiedName@@bytes.length @TO@ SimpleName@@MethodName:buffer:[bytes.length] @AT@ 1446 @LENGTH@ 12
---------------MOV SimpleName@@bytes @TO@ QualifiedName@@bytes.length @AT@ 1455 @LENGTH@ 5
---------------MOV SimpleName@@length @TO@ QualifiedName@@bytes.length @AT@ 1461 @LENGTH@ 6
------DEL ClassInstanceCreation@@DynamicChannelBuffer[bytes.length] @AT@ 1430 @LENGTH@ 38
---------DEL New@@new @AT@ 1430 @LENGTH@ 3
---------DEL SimpleType@@DynamicChannelBuffer @AT@ 1434 @LENGTH@ 20
---------DEL QualifiedName@@bytes.length @AT@ 1455 @LENGTH@ 12


UPD TypeDeclaration@@[public]ReflectionUtils,  @TO@ [public, abstract]ReflectionUtils,  @AT@ 1167 @LENGTH@ 5447
---INS Modifier@@abstract @TO@ TypeDeclaration@@[public]ReflectionUtils,  @AT@ 1174 @LENGTH@ 8


MOV IfStatement@@if (valueObj == null) {  valueObj=new ArrayWritable(Writable.class,new Writable[schemaSize]);} @TO@ MethodDeclaration@@public, voidMethodName:ParquetRecordReaderWrapper, final ParquetInputFormat<ArrayWritable> newInputFormat, final InputSplit oldSplit, final JobConf oldJobConf, final Reporter reporter, final ProjectionPusher pusher, IOException, InterruptedException,  @AT@ 4002 @LENGTH@ 158


INS VariableDeclarationStatement@@int index=0; @TO@ MethodDeclaration@@private, void, MethodName:assertEitherAllParamAnnotatedOrNone,  @AT@ 7310 @LENGTH@ 14
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int index=0; @AT@ 7310 @LENGTH@ 3
---INS VariableDeclarationFragment@@index=0 @TO@ VariableDeclarationStatement@@int index=0; @AT@ 7314 @LENGTH@ 9
------INS SimpleName@@index @TO@ VariableDeclarationFragment@@index=0 @AT@ 7314 @LENGTH@ 5
------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@index=0 @AT@ 7322 @LENGTH@ 1


UPD TypeDeclaration@@[public]InfinispanComponent, DefaultComponent @TO@ [public]InfinispanComponent, UriEndpointComponent @AT@ 957 @LENGTH@ 437
---UPD SimpleType@@DefaultComponent @TO@ UriEndpointComponent @AT@ 998 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:gettingNonFirstPageWorksWithoutLimitBeingSet,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 27337 @LENGTH@ 287
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:gettingNonFirstPageWorksWithoutLimitBeingSet,  @AT@ 27337 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:gettingNonFirstPageWorksWithoutLimitBeingSet,  @AT@ 27344 @LENGTH@ 4
---INS SimpleName@@MethodName:gettingNonFirstPageWorksWithoutLimitBeingSet @TO@ MethodDeclaration@@public, void, MethodName:gettingNonFirstPageWorksWithoutLimitBeingSet,  @AT@ 27349 @LENGTH@ 44
---INS VariableDeclarationStatement@@Page<Person> slice=repository.findByLastnameLike("Matthews",new PageRequest(1,1)); @TO@ MethodDeclaration@@public, void, MethodName:gettingNonFirstPageWorksWithoutLimitBeingSet,  @AT@ 27401 @LENGTH@ 86
------INS ParameterizedType@@Page<Person> @TO@ VariableDeclarationStatement@@Page<Person> slice=repository.findByLastnameLike("Matthews",new PageRequest(1,1)); @AT@ 27401 @LENGTH@ 12
---------INS SimpleType@@Page @TO@ ParameterizedType@@Page<Person> @AT@ 27401 @LENGTH@ 4
---------INS SimpleType@@Person @TO@ ParameterizedType@@Page<Person> @AT@ 27406 @LENGTH@ 6
------INS VariableDeclarationFragment@@slice=repository.findByLastnameLike("Matthews",new PageRequest(1,1)) @TO@ VariableDeclarationStatement@@Page<Person> slice=repository.findByLastnameLike("Matthews",new PageRequest(1,1)); @AT@ 27414 @LENGTH@ 72
---------INS SimpleName@@slice @TO@ VariableDeclarationFragment@@slice=repository.findByLastnameLike("Matthews",new PageRequest(1,1)) @AT@ 27414 @LENGTH@ 5
---------INS MethodInvocation@@repository.findByLastnameLike("Matthews",new PageRequest(1,1)) @TO@ VariableDeclarationFragment@@slice=repository.findByLastnameLike("Matthews",new PageRequest(1,1)) @AT@ 27422 @LENGTH@ 64
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByLastnameLike("Matthews",new PageRequest(1,1)) @AT@ 27422 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByLastnameLike:["Matthews", new PageRequest(1,1)] @TO@ MethodInvocation@@repository.findByLastnameLike("Matthews",new PageRequest(1,1)) @AT@ 27433 @LENGTH@ 53
---------------INS StringLiteral@@"Matthews" @TO@ SimpleName@@MethodName:findByLastnameLike:["Matthews", new PageRequest(1,1)] @AT@ 27452 @LENGTH@ 10
---------------INS ClassInstanceCreation@@PageRequest[1, 1] @TO@ SimpleName@@MethodName:findByLastnameLike:["Matthews", new PageRequest(1,1)] @AT@ 27464 @LENGTH@ 21
------------------INS New@@new @TO@ ClassInstanceCreation@@PageRequest[1, 1] @AT@ 27464 @LENGTH@ 3
------------------INS SimpleType@@PageRequest @TO@ ClassInstanceCreation@@PageRequest[1, 1] @AT@ 27468 @LENGTH@ 11
------------------INS NumberLiteral@@1 @TO@ ClassInstanceCreation@@PageRequest[1, 1] @AT@ 27480 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ ClassInstanceCreation@@PageRequest[1, 1] @AT@ 27483 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(slice.getContent(),hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:gettingNonFirstPageWorksWithoutLimitBeingSet,  @AT@ 27491 @LENGTH@ 43
------INS MethodInvocation@@assertThat(slice.getContent(),hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(slice.getContent(),hasSize(1)) @AT@ 27491 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertThat:[slice.getContent(), hasSize(1)] @TO@ MethodInvocation@@assertThat(slice.getContent(),hasSize(1)) @AT@ 27491 @LENGTH@ 42
------------INS MethodInvocation@@slice.getContent() @TO@ SimpleName@@MethodName:assertThat:[slice.getContent(), hasSize(1)] @AT@ 27502 @LENGTH@ 18
---------------INS SimpleName@@Name:slice @TO@ MethodInvocation@@slice.getContent() @AT@ 27502 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getContent:[] @TO@ MethodInvocation@@slice.getContent() @AT@ 27508 @LENGTH@ 12
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[slice.getContent(), hasSize(1)] @AT@ 27522 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 27522 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 27530 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 27522 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 27530 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(slice.hasPrevious(),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:gettingNonFirstPageWorksWithoutLimitBeingSet,  @AT@ 27537 @LENGTH@ 42
------INS MethodInvocation@@assertThat(slice.hasPrevious(),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(slice.hasPrevious(),is(true)) @AT@ 27537 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertThat:[slice.hasPrevious(), is(true)] @TO@ MethodInvocation@@assertThat(slice.hasPrevious(),is(true)) @AT@ 27537 @LENGTH@ 41
------------INS MethodInvocation@@slice.hasPrevious() @TO@ SimpleName@@MethodName:assertThat:[slice.hasPrevious(), is(true)] @AT@ 27548 @LENGTH@ 19
---------------INS SimpleName@@Name:slice @TO@ MethodInvocation@@slice.hasPrevious() @AT@ 27548 @LENGTH@ 5
---------------INS SimpleName@@MethodName:hasPrevious:[] @TO@ MethodInvocation@@slice.hasPrevious() @AT@ 27554 @LENGTH@ 13
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[slice.hasPrevious(), is(true)] @AT@ 27569 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 27569 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 27572 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 27569 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 27572 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(slice.hasNext(),is(false)) @TO@ MethodDeclaration@@public, void, MethodName:gettingNonFirstPageWorksWithoutLimitBeingSet,  @AT@ 27582 @LENGTH@ 39
------INS MethodInvocation@@assertThat(slice.hasNext(),is(false)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(slice.hasNext(),is(false)) @AT@ 27582 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertThat:[slice.hasNext(), is(false)] @TO@ MethodInvocation@@assertThat(slice.hasNext(),is(false)) @AT@ 27582 @LENGTH@ 38
------------INS MethodInvocation@@slice.hasNext() @TO@ SimpleName@@MethodName:assertThat:[slice.hasNext(), is(false)] @AT@ 27593 @LENGTH@ 15
---------------INS SimpleName@@Name:slice @TO@ MethodInvocation@@slice.hasNext() @AT@ 27593 @LENGTH@ 5
---------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@slice.hasNext() @AT@ 27599 @LENGTH@ 9
------------INS MethodInvocation@@is(false) @TO@ SimpleName@@MethodName:assertThat:[slice.hasNext(), is(false)] @AT@ 27610 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 27610 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 27613 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 27610 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 27613 @LENGTH@ 5


INS MethodDeclaration@@TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @TO@ TypeDeclaration@@[public]HadoopShims,  @AT@ 15998 @LENGTH@ 82
---INS ParameterizedType@@TreeMap<Long,BlockLocation> @TO@ MethodDeclaration@@TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 15969 @LENGTH@ 28
------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 15969 @LENGTH@ 7
------INS SimpleType@@Long @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 15977 @LENGTH@ 4
------INS SimpleType@@BlockLocation @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 15983 @LENGTH@ 13
---INS SimpleName@@MethodName:getLocationsWithOffset @TO@ MethodDeclaration@@TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 15998 @LENGTH@ 22
---INS SingleVariableDeclaration@@FileSystem fs @TO@ MethodDeclaration@@TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 16021 @LENGTH@ 13
------INS SimpleType@@FileSystem @TO@ SingleVariableDeclaration@@FileSystem fs @AT@ 16021 @LENGTH@ 10
------INS SimpleName@@fs @TO@ SingleVariableDeclaration@@FileSystem fs @AT@ 16032 @LENGTH@ 2
---INS SingleVariableDeclaration@@FileStatus status @TO@ MethodDeclaration@@TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 16042 @LENGTH@ 17
------INS SimpleType@@FileStatus @TO@ SingleVariableDeclaration@@FileStatus status @AT@ 16042 @LENGTH@ 10
------INS SimpleName@@status @TO@ SingleVariableDeclaration@@FileStatus status @AT@ 16053 @LENGTH@ 6
---INS SimpleType@@IOException @TO@ MethodDeclaration@@TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 16068 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:query.orderBy(toOrderSpecifier(order,query)) @TO@ MethodInvocation:query.orderBy(toOrderSpecifier(order)) @AT@ 4882 @LENGTH@ 46
---UPD MethodInvocation@@query.orderBy(toOrderSpecifier(order,query)) @TO@ query.orderBy(toOrderSpecifier(order)) @AT@ 4882 @LENGTH@ 45
------UPD SimpleName@@MethodName:orderBy:[toOrderSpecifier(order,query)] @TO@ MethodName:orderBy:[toOrderSpecifier(order)] @AT@ 4888 @LENGTH@ 39
---------UPD MethodInvocation@@toOrderSpecifier(order,query) @TO@ toOrderSpecifier(order) @AT@ 4896 @LENGTH@ 30
------------UPD SimpleName@@MethodName:toOrderSpecifier:[order, query] @TO@ MethodName:toOrderSpecifier:[order] @AT@ 4896 @LENGTH@ 30
---------------DEL SimpleName@@query @AT@ 4920 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:endpoints.tokenStore(tokenStore).approvalStore(approvalStore()).userApprovalHandler(userApprovalHandler()) @TO@ MethodInvocation:endpoints.tokenStore(tokenStore).approvalStore(approvalStore()).userApprovalHandler(userApprovalHandler()).addInterceptor(new HandlerInterceptorAdapter(){
}
) @AT@ 9961 @LENGTH@ 107
---UPD MethodInvocation@@endpoints.tokenStore(tokenStore).approvalStore(approvalStore()).userApprovalHandler(userApprovalHandler()) @TO@ endpoints.tokenStore(tokenStore).approvalStore(approvalStore()).userApprovalHandler(userApprovalHandler()).addInterceptor(new HandlerInterceptorAdapter(){
}
) @AT@ 9961 @LENGTH@ 106
------DEL SimpleName@@MethodName:userApprovalHandler:[userApprovalHandler()] @AT@ 10025 @LENGTH@ 42
---------DEL MethodInvocation@@MethodName:userApprovalHandler:[] @AT@ 10045 @LENGTH@ 21
------INS MethodInvocation@@MethodName:userApprovalHandler:[userApprovalHandler()] @TO@ MethodInvocation@@endpoints.tokenStore(tokenStore).approvalStore(approvalStore()).userApprovalHandler(userApprovalHandler()) @AT@ 10039 @LENGTH@ 106
---------INS MethodInvocation@@MethodName:userApprovalHandler:[] @TO@ MethodInvocation@@MethodName:userApprovalHandler:[userApprovalHandler()] @AT@ 10123 @LENGTH@ 21
------INS SimpleName@@MethodName:addInterceptor:[new HandlerInterceptorAdapter(){
}
] @TO@ MethodInvocation@@endpoints.tokenStore(tokenStore).approvalStore(approvalStore()).userApprovalHandler(userApprovalHandler()) @AT@ 10152 @LENGTH@ 56
---------INS ClassInstanceCreation@@HandlerInterceptorAdapter[] @TO@ SimpleName@@MethodName:addInterceptor:[new HandlerInterceptorAdapter(){
}
] @AT@ 10167 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@HandlerInterceptorAdapter[] @AT@ 10167 @LENGTH@ 3
------------INS SimpleType@@HandlerInterceptorAdapter @TO@ ClassInstanceCreation@@HandlerInterceptorAdapter[] @AT@ 10171 @LENGTH@ 25
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@HandlerInterceptorAdapter[] @AT@ 10199 @LENGTH@ 8


UPD IfStatement@@if (!targetValue.has(name)) {  break;} else {  targetValue=targetValue.get(name);} @TO@ if (!targetValue.has(name)) {  return null;} else {  targetValue=targetValue.get(name);} @AT@ 2095 @LENGTH@ 139
---UPD Block@@ThenBody:{  break;} @TO@ ThenBody:{  return null;} @AT@ 2122 @LENGTH@ 38
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  break;} @AT@ 2140 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2147 @LENGTH@ 4
------DEL BreakStatement@@ @AT@ 2140 @LENGTH@ 6


UPD TypeDeclaration@@[public]RepositoryConfigurationUtils,  @TO@ [public, abstract]RepositoryConfigurationUtils,  @AT@ 1179 @LENGTH@ 1698
---INS Modifier@@abstract @TO@ TypeDeclaration@@[public]RepositoryConfigurationUtils,  @AT@ 1186 @LENGTH@ 8


UPD MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, PathAddressTransformer pathAddressTransformer, ResourceTransformer resourceTransformer, OperationTransformer operationTransformer, boolean inherited, boolean handleAllChildren,  @TO@ public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, PathAddressTransformer pathAddressTransformer, ResourceTransformer resourceTransformer, OperationTransformer operationTransformer, boolean inherited, boolean placeholder,  @AT@ 14604 @LENGTH@ 654
---UPD SingleVariableDeclaration@@boolean handleAllChildren @TO@ boolean placeholder @AT@ 14830 @LENGTH@ 25
------UPD SimpleName@@handleAllChildren @TO@ placeholder @AT@ 14838 @LENGTH@ 17
---UPD EnhancedForStatement@@for (final ModelVersion version : range.getVersions()) {  registry.createChildRegistry(address,version,pathAddressTransformer,resourceTransformer,operationTransformer,inherited,handleAllChildren);} @TO@ for (final ModelVersion version : range.getVersions()) {  registry.createChildRegistry(address,version,pathAddressTransformer,resourceTransformer,operationTransformer,inherited,placeholder);} @AT@ 14936 @LENGTH@ 230
------UPD ExpressionStatement@@MethodInvocation:registry.createChildRegistry(address,version,pathAddressTransformer,resourceTransformer,operationTransformer,inherited,handleAllChildren) @TO@ MethodInvocation:registry.createChildRegistry(address,version,pathAddressTransformer,resourceTransformer,operationTransformer,inherited,placeholder) @AT@ 15008 @LENGTH@ 144
---------UPD MethodInvocation@@registry.createChildRegistry(address,version,pathAddressTransformer,resourceTransformer,operationTransformer,inherited,handleAllChildren) @TO@ registry.createChildRegistry(address,version,pathAddressTransformer,resourceTransformer,operationTransformer,inherited,placeholder) @AT@ 15008 @LENGTH@ 143
------------UPD SimpleName@@MethodName:createChildRegistry:[address, version, pathAddressTransformer, resourceTransformer, operationTransformer, inherited, handleAllChildren] @TO@ MethodName:createChildRegistry:[address, version, pathAddressTransformer, resourceTransformer, operationTransformer, inherited, placeholder] @AT@ 15017 @LENGTH@ 134
---------------UPD SimpleName@@handleAllChildren @TO@ placeholder @AT@ 15133 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"")) @TO@ MethodDeclaration@@public, void, MethodName:testComponentConfiguration, Exception,  @AT@ 1938 @LENGTH@ 83
---INS MethodInvocation@@assertTrue(json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"")) @AT@ 1938 @LENGTH@ 82
------INS SimpleName@@MethodName:assertTrue:[json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"")) @AT@ 1938 @LENGTH@ 82
---------INS MethodInvocation@@json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"")] @AT@ 1949 @LENGTH@ 70
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"") @AT@ 1949 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["\"port\": { \"kind\": \"path\", \"type\": \"integer\""] @TO@ MethodInvocation@@json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"") @AT@ 1954 @LENGTH@ 65
---------------INS StringLiteral@@"\"port\": { \"kind\": \"path\", \"type\": \"integer\"" @TO@ SimpleName@@MethodName:contains:["\"port\": { \"kind\": \"path\", \"type\": \"integer\""] @AT@ 1963 @LENGTH@ 55


UPD ExpressionStatement@@Assignment:count=counter.incrementAndGet() @TO@ Assignment:count=COUNTER.incrementAndGet() @AT@ 1988 @LENGTH@ 34
---UPD Assignment@@count=counter.incrementAndGet() @TO@ count=COUNTER.incrementAndGet() @AT@ 1988 @LENGTH@ 33
------UPD MethodInvocation@@counter.incrementAndGet() @TO@ COUNTER.incrementAndGet() @AT@ 1996 @LENGTH@ 25
---------UPD SimpleName@@Name:counter @TO@ Name:COUNTER @AT@ 1996 @LENGTH@ 7


UPD IfStatement@@if (object instanceof Double) {  count=(Double)object;} @TO@ if (object instanceof Number) {  count=((Number)object).doubleValue();} @AT@ 1792 @LENGTH@ 63
---UPD InstanceofExpression@@object instanceof Double @TO@ object instanceof Number @AT@ 1796 @LENGTH@ 24
------UPD SimpleType@@Double @TO@ Number @AT@ 1814 @LENGTH@ 6
---UPD Block@@ThenBody:{  count=(Double)object;} @TO@ ThenBody:{  count=((Number)object).doubleValue();} @AT@ 1822 @LENGTH@ 33
------UPD ExpressionStatement@@Assignment:count=(Double)object @TO@ Assignment:count=((Number)object).doubleValue() @AT@ 1827 @LENGTH@ 24
---------UPD Assignment@@count=(Double)object @TO@ count=((Number)object).doubleValue() @AT@ 1827 @LENGTH@ 23
------------DEL CastExpression@@(Double)object @AT@ 1835 @LENGTH@ 15
------------INS MethodInvocation@@((Number)object).doubleValue() @TO@ Assignment@@count=(Double)object @AT@ 1879 @LENGTH@ 31
---------------INS ParenthesizedExpression@@((Number)object) @TO@ MethodInvocation@@((Number)object).doubleValue() @AT@ 1879 @LENGTH@ 17
------------------INS CastExpression@@(Number)object @TO@ ParenthesizedExpression@@((Number)object) @AT@ 1880 @LENGTH@ 15
---------------------MOV SimpleType@@Double @TO@ CastExpression@@(Number)object @AT@ 1836 @LENGTH@ 6
---------------------MOV SimpleName@@object @TO@ CastExpression@@(Number)object @AT@ 1844 @LENGTH@ 6
---------------INS SimpleName@@MethodName:doubleValue:[] @TO@ MethodInvocation@@((Number)object).doubleValue() @AT@ 1897 @LENGTH@ 13


UPD TypeDeclaration@@[@UriEndpoint(scheme="twitter",consumerClass=Twitter4JConsumer.class), public]TwitterEndpointDirect, DirectEndpoint[TwitterEndpoint] @TO@ [@UriEndpoint(scheme="twitter",consumerClass=Twitter4JConsumer.class,label="api,social"), public]TwitterEndpointDirect, DirectEndpoint[TwitterEndpoint] @AT@ 1466 @LENGTH@ 3994
---UPD NormalAnnotation@@@UriEndpoint(scheme="twitter",consumerClass=Twitter4JConsumer.class) @TO@ @UriEndpoint(scheme="twitter",consumerClass=Twitter4JConsumer.class,label="api,social") @AT@ 1466 @LENGTH@ 73


DEL FieldDeclaration@@private, CxfRsEndpoint, [cxfRsEndpoint] @AT@ 2385 @LENGTH@ 36
---DEL Modifier@@private @AT@ 2385 @LENGTH@ 7
---DEL SimpleType@@CxfRsEndpoint @AT@ 2393 @LENGTH@ 13
---DEL VariableDeclarationFragment@@cxfRsEndpoint @AT@ 2407 @LENGTH@ 13
------DEL SimpleName@@cxfRsEndpoint @AT@ 2407 @LENGTH@ 13


UPD IfStatement@@if (providedAlphabet == SmppConstants.UNKNOWN_ALPHABET && determinedAlphabet == Alphabet.ALPHA_UCS2.value()) {  return Charset.forName(SmppConstants.UCS2_ENCODING);} @TO@ if (providedAlphabet == Alphabet.ALPHA_UCS2.value() || (providedAlphabet == SmppConstants.UNKNOWN_ALPHABET && determinedAlphabet == Alphabet.ALPHA_UCS2.value())) {  return Charset.forName(SmppConstants.UCS2_ENCODING);} @AT@ 3246 @LENGTH@ 229
---INS InfixExpression@@providedAlphabet == Alphabet.ALPHA_UCS2.value() || (providedAlphabet == SmppConstants.UNKNOWN_ALPHABET && determinedAlphabet == Alphabet.ALPHA_UCS2.value()) @TO@ IfStatement@@if (providedAlphabet == SmppConstants.UNKNOWN_ALPHABET && determinedAlphabet == Alphabet.ALPHA_UCS2.value()) {  return Charset.forName(SmppConstants.UCS2_ENCODING);} @AT@ 3250 @LENGTH@ 169
------INS InfixExpression@@providedAlphabet == Alphabet.ALPHA_UCS2.value() @TO@ InfixExpression@@providedAlphabet == Alphabet.ALPHA_UCS2.value() || (providedAlphabet == SmppConstants.UNKNOWN_ALPHABET && determinedAlphabet == Alphabet.ALPHA_UCS2.value()) @AT@ 3250 @LENGTH@ 47
---------INS SimpleName@@providedAlphabet @TO@ InfixExpression@@providedAlphabet == Alphabet.ALPHA_UCS2.value() @AT@ 3250 @LENGTH@ 16
---------INS Operator@@== @TO@ InfixExpression@@providedAlphabet == Alphabet.ALPHA_UCS2.value() @AT@ 3266 @LENGTH@ 2
---------INS MethodInvocation@@Alphabet.ALPHA_UCS2.value() @TO@ InfixExpression@@providedAlphabet == Alphabet.ALPHA_UCS2.value() @AT@ 3270 @LENGTH@ 27
------------INS QualifiedName@@Name:Alphabet.ALPHA_UCS2 @TO@ MethodInvocation@@Alphabet.ALPHA_UCS2.value() @AT@ 3270 @LENGTH@ 19
------------INS SimpleName@@MethodName:value:[] @TO@ MethodInvocation@@Alphabet.ALPHA_UCS2.value() @AT@ 3290 @LENGTH@ 7
------INS Operator@@|| @TO@ InfixExpression@@providedAlphabet == Alphabet.ALPHA_UCS2.value() || (providedAlphabet == SmppConstants.UNKNOWN_ALPHABET && determinedAlphabet == Alphabet.ALPHA_UCS2.value()) @AT@ 3297 @LENGTH@ 2
------INS ParenthesizedExpression@@(providedAlphabet == SmppConstants.UNKNOWN_ALPHABET && determinedAlphabet == Alphabet.ALPHA_UCS2.value()) @TO@ InfixExpression@@providedAlphabet == Alphabet.ALPHA_UCS2.value() || (providedAlphabet == SmppConstants.UNKNOWN_ALPHABET && determinedAlphabet == Alphabet.ALPHA_UCS2.value()) @AT@ 3314 @LENGTH@ 105
---------MOV InfixExpression@@providedAlphabet == SmppConstants.UNKNOWN_ALPHABET && determinedAlphabet == Alphabet.ALPHA_UCS2.value() @TO@ ParenthesizedExpression@@(providedAlphabet == SmppConstants.UNKNOWN_ALPHABET && determinedAlphabet == Alphabet.ALPHA_UCS2.value()) @AT@ 3250 @LENGTH@ 103


UPD VariableDeclarationStatement@@ContextPathMatcher matcher=new RestContextPathMatcher(rawPath,path,consumer.getConfiguration().isMatchOnUriPrefix()); @TO@ ContextPathMatcher matcher=new RestContextPathMatcher(rawPath,path,consumer.getEndpoint().getHttpMethodRestrict(),consumer.getConfiguration().isMatchOnUriPrefix()); @AT@ 4044 @LENGTH@ 121
---UPD VariableDeclarationFragment@@matcher=new RestContextPathMatcher(rawPath,path,consumer.getConfiguration().isMatchOnUriPrefix()) @TO@ matcher=new RestContextPathMatcher(rawPath,path,consumer.getEndpoint().getHttpMethodRestrict(),consumer.getConfiguration().isMatchOnUriPrefix()) @AT@ 4063 @LENGTH@ 101
------UPD ClassInstanceCreation@@RestContextPathMatcher[rawPath, path, consumer.getConfiguration().isMatchOnUriPrefix()] @TO@ RestContextPathMatcher[rawPath, path, consumer.getEndpoint().getHttpMethodRestrict(), consumer.getConfiguration().isMatchOnUriPrefix()] @AT@ 4073 @LENGTH@ 91
---------INS MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @TO@ ClassInstanceCreation@@RestContextPathMatcher[rawPath, path, consumer.getConfiguration().isMatchOnUriPrefix()] @AT@ 4163 @LENGTH@ 46
------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 4163 @LENGTH@ 22
------------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 4163 @LENGTH@ 8
------------INS SimpleName@@MethodName:getHttpMethodRestrict:[] @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 4186 @LENGTH@ 23


UPD VariableDeclarationStatement@@ClientCredentialsTokenEndpointFilter clientCredentialsTokenEndpointFilter=new ClientCredentialsTokenEndpointFilter(frameworkEndpointHandlerMapping().getPath("/oauth/token")); @TO@ ClientCredentialsTokenEndpointFilter clientCredentialsTokenEndpointFilter=new ClientCredentialsTokenEndpointFilter(frameworkEndpointHandlerMapping().getServletPath("/oauth/token")); @AT@ 5519 @LENGTH@ 181
---UPD VariableDeclarationFragment@@clientCredentialsTokenEndpointFilter=new ClientCredentialsTokenEndpointFilter(frameworkEndpointHandlerMapping().getPath("/oauth/token")) @TO@ clientCredentialsTokenEndpointFilter=new ClientCredentialsTokenEndpointFilter(frameworkEndpointHandlerMapping().getServletPath("/oauth/token")) @AT@ 5556 @LENGTH@ 143
------UPD ClassInstanceCreation@@ClientCredentialsTokenEndpointFilter[frameworkEndpointHandlerMapping().getPath("/oauth/token")] @TO@ ClientCredentialsTokenEndpointFilter[frameworkEndpointHandlerMapping().getServletPath("/oauth/token")] @AT@ 5595 @LENGTH@ 104
---------UPD MethodInvocation@@frameworkEndpointHandlerMapping().getPath("/oauth/token") @TO@ frameworkEndpointHandlerMapping().getServletPath("/oauth/token") @AT@ 5641 @LENGTH@ 57
------------UPD SimpleName@@MethodName:getPath:["/oauth/token"] @TO@ MethodName:getServletPath:["/oauth/token"] @AT@ 5675 @LENGTH@ 23


UPD FieldDeclaration@@private, static, final, Map<String,Class>, [PRIMITIVE_TYPES] @TO@ private, static, final, Map<String,Class<?>>, [PRIMITIVE_TYPES] @AT@ 1820 @LENGTH@ 56
---UPD ParameterizedType@@Map<String,Class> @TO@ Map<String,Class<?>> @AT@ 1841 @LENGTH@ 18
------INS ParameterizedType@@Class<?> @TO@ ParameterizedType@@Map<String,Class> @AT@ 1853 @LENGTH@ 8
---------MOV SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1853 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1859 @LENGTH@ 1


UPD MethodDeclaration@@public, voidMethodName:ParameterizedTypeInformation, ParameterizedType type, TypeDiscoverer<?> parent,  @TO@ public, voidMethodName:ParameterizedTypeInformation, ParameterizedType type, TypeDiscoverer<?> parent, Map<TypeVariable<?>,Type> typeVariableMap,  @AT@ 1587 @LENGTH@ 139
---INS SingleVariableDeclaration@@Map<TypeVariable<?>,Type> typeVariableMap @TO@ MethodDeclaration@@public, voidMethodName:ParameterizedTypeInformation, ParameterizedType type, TypeDiscoverer<?> parent,  @AT@ 1662 @LENGTH@ 42
------INS ParameterizedType@@Map<TypeVariable<?>,Type> @TO@ SingleVariableDeclaration@@Map<TypeVariable<?>,Type> typeVariableMap @AT@ 1662 @LENGTH@ 26
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 1662 @LENGTH@ 3
---------INS ParameterizedType@@TypeVariable<?> @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 1666 @LENGTH@ 15
------------INS SimpleType@@TypeVariable @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1666 @LENGTH@ 12
------------INS WildcardType@@? @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1679 @LENGTH@ 1
---------INS SimpleType@@Type @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 1683 @LENGTH@ 4
------INS SimpleName@@typeVariableMap @TO@ SingleVariableDeclaration@@Map<TypeVariable<?>,Type> typeVariableMap @AT@ 1689 @LENGTH@ 15
---UPD SuperConstructorInvocation@@super(type,parent,null);
 @TO@ super(type,parent,typeVariableMap);
 @AT@ 1677 @LENGTH@ 26
------DEL NullLiteral@@null @AT@ 1697 @LENGTH@ 4
------INS SimpleName@@typeVariableMap @TO@ SuperConstructorInvocation@@super(type,parent,null);
 @AT@ 1731 @LENGTH@ 15


UPD TypeDeclaration@@AnnotationAuditingMetadata,  @TO@ [final]AnnotationAuditingMetadata,  @AT@ 1557 @LENGTH@ 4103
---INS Modifier@@final @TO@ TypeDeclaration@@AnnotationAuditingMetadata,  @AT@ 1551 @LENGTH@ 5


UPD Block@@ThenBody:{  if (tlds.containsKey(resource.getName())) {    continue;  }  final TldMetaData value=parseTLD(resource);  if (sharedTldUris.contains(value.getUri())) {    continue;  }  String key="/" + resource.getName();  if (!tlds.containsKey(key)) {    tlds.put(key,value);  }  if (!tlds.containsKey(value.getUri())) {    tlds.put(value.getUri(),value);  }  if (value.getListeners() != null) {    for (    ListenerMetaData l : value.getListeners()) {      warMetaData.getMergedJBossWebMetaData().getListeners().add(l);    }  }} @TO@ ThenBody:{  if (tlds.containsKey(resource.getName())) {    continue;  }  if (resource.getURL().getProtocol().equals("vfs")) {    continue;  }  final TldMetaData value=parseTLD(resource);  if (sharedTldUris.contains(value.getUri())) {    continue;  }  String key="/" + resource.getName();  if (!tlds.containsKey(key)) {    tlds.put(key,value);  }  if (!tlds.containsKey(value.getUri())) {    tlds.put(value.getUri(),value);  }  if (value.getListeners() != null) {    for (    ListenerMetaData l : value.getListeners()) {      List<ListenerMetaData> listeners=warMetaData.getMergedJBossWebMetaData().getListeners();      if (listeners == null) {        warMetaData.getMergedJBossWebMetaData().setListeners(listeners=new ArrayList<ListenerMetaData>());      }      listeners.add(l);    }  }} @AT@ 4013 @LENGTH@ 967
---INS IfStatement@@if (resource.getURL().getProtocol().equals("vfs")) {  continue;} @TO@ Block@@ThenBody:{  if (tlds.containsKey(resource.getName())) {    continue;  }  final TldMetaData value=parseTLD(resource);  if (sharedTldUris.contains(value.getUri())) {    continue;  }  String key="/" + resource.getName();  if (!tlds.containsKey(key)) {    tlds.put(key,value);  }  if (!tlds.containsKey(value.getUri())) {    tlds.put(value.getUri(),value);  }  if (value.getListeners() != null) {    for (    ListenerMetaData l : value.getListeners()) {      warMetaData.getMergedJBossWebMetaData().getListeners().add(l);    }  }} @AT@ 4205 @LENGTH@ 107
------INS MethodInvocation@@resource.getURL().getProtocol().equals("vfs") @TO@ IfStatement@@if (resource.getURL().getProtocol().equals("vfs")) {  continue;} @AT@ 4208 @LENGTH@ 45
---------INS MethodInvocation@@MethodName:getProtocol:[] @TO@ MethodInvocation@@resource.getURL().getProtocol().equals("vfs") @AT@ 4208 @LENGTH@ 31
---------INS MethodInvocation@@MethodName:getURL:[] @TO@ MethodInvocation@@resource.getURL().getProtocol().equals("vfs") @AT@ 4208 @LENGTH@ 17
---------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.getURL().getProtocol().equals("vfs") @AT@ 4208 @LENGTH@ 8
---------INS SimpleName@@MethodName:equals:["vfs"] @TO@ MethodInvocation@@resource.getURL().getProtocol().equals("vfs") @AT@ 4240 @LENGTH@ 13
------------INS StringLiteral@@"vfs" @TO@ SimpleName@@MethodName:equals:["vfs"] @AT@ 4247 @LENGTH@ 5
------INS Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (resource.getURL().getProtocol().equals("vfs")) {  continue;} @AT@ 4255 @LENGTH@ 57
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 4281 @LENGTH@ 9
---UPD IfStatement@@if (value.getListeners() != null) {  for (  ListenerMetaData l : value.getListeners()) {    warMetaData.getMergedJBossWebMetaData().getListeners().add(l);  }} @TO@ if (value.getListeners() != null) {  for (  ListenerMetaData l : value.getListeners()) {    List<ListenerMetaData> listeners=warMetaData.getMergedJBossWebMetaData().getListeners();    if (listeners == null) {      warMetaData.getMergedJBossWebMetaData().setListeners(listeners=new ArrayList<ListenerMetaData>());    }    listeners.add(l);  }} @AT@ 4714 @LENGTH@ 248
------UPD Block@@ThenBody:{  for (  ListenerMetaData l : value.getListeners()) {    warMetaData.getMergedJBossWebMetaData().getListeners().add(l);  }} @TO@ ThenBody:{  for (  ListenerMetaData l : value.getListeners()) {    List<ListenerMetaData> listeners=warMetaData.getMergedJBossWebMetaData().getListeners();    if (listeners == null) {      warMetaData.getMergedJBossWebMetaData().setListeners(listeners=new ArrayList<ListenerMetaData>());    }    listeners.add(l);  }} @AT@ 4748 @LENGTH@ 214
---------UPD EnhancedForStatement@@for (ListenerMetaData l : value.getListeners()) {  warMetaData.getMergedJBossWebMetaData().getListeners().add(l);} @TO@ for (ListenerMetaData l : value.getListeners()) {  List<ListenerMetaData> listeners=warMetaData.getMergedJBossWebMetaData().getListeners();  if (listeners == null) {    warMetaData.getMergedJBossWebMetaData().setListeners(listeners=new ArrayList<ListenerMetaData>());  }  listeners.add(l);} @AT@ 4774 @LENGTH@ 166
------------DEL ExpressionStatement@@MethodInvocation:warMetaData.getMergedJBossWebMetaData().getListeners().add(l) @AT@ 4852 @LENGTH@ 62
------------INS VariableDeclarationStatement@@List<ListenerMetaData> listeners=warMetaData.getMergedJBossWebMetaData().getListeners(); @TO@ EnhancedForStatement@@for (ListenerMetaData l : value.getListeners()) {  warMetaData.getMergedJBossWebMetaData().getListeners().add(l);} @AT@ 5031 @LENGTH@ 90
---------------INS ParameterizedType@@List<ListenerMetaData> @TO@ VariableDeclarationStatement@@List<ListenerMetaData> listeners=warMetaData.getMergedJBossWebMetaData().getListeners(); @AT@ 5031 @LENGTH@ 22
------------------INS SimpleType@@List @TO@ ParameterizedType@@List<ListenerMetaData> @AT@ 5031 @LENGTH@ 4
------------------INS SimpleType@@ListenerMetaData @TO@ ParameterizedType@@List<ListenerMetaData> @AT@ 5036 @LENGTH@ 16
---------------INS VariableDeclarationFragment@@listeners=warMetaData.getMergedJBossWebMetaData().getListeners() @TO@ VariableDeclarationStatement@@List<ListenerMetaData> listeners=warMetaData.getMergedJBossWebMetaData().getListeners(); @AT@ 5054 @LENGTH@ 66
------------------INS SimpleName@@listeners @TO@ VariableDeclarationFragment@@listeners=warMetaData.getMergedJBossWebMetaData().getListeners() @AT@ 5054 @LENGTH@ 9
------------------INS MethodInvocation@@warMetaData.getMergedJBossWebMetaData().getListeners() @TO@ VariableDeclarationFragment@@listeners=warMetaData.getMergedJBossWebMetaData().getListeners() @AT@ 5066 @LENGTH@ 54
---------------------INS MethodInvocation@@MethodName:getMergedJBossWebMetaData:[] @TO@ MethodInvocation@@warMetaData.getMergedJBossWebMetaData().getListeners() @AT@ 5066 @LENGTH@ 39
---------------------INS SimpleName@@Name:warMetaData @TO@ MethodInvocation@@warMetaData.getMergedJBossWebMetaData().getListeners() @AT@ 5066 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:getListeners:[] @TO@ MethodInvocation@@warMetaData.getMergedJBossWebMetaData().getListeners() @AT@ 5106 @LENGTH@ 14
------------INS IfStatement@@if (listeners == null) {  warMetaData.getMergedJBossWebMetaData().setListeners(listeners=new ArrayList<ListenerMetaData>());} @TO@ EnhancedForStatement@@for (ListenerMetaData l : value.getListeners()) {  warMetaData.getMergedJBossWebMetaData().getListeners().add(l);} @AT@ 5150 @LENGTH@ 186
---------------INS InfixExpression@@listeners == null @TO@ IfStatement@@if (listeners == null) {  warMetaData.getMergedJBossWebMetaData().setListeners(listeners=new ArrayList<ListenerMetaData>());} @AT@ 5153 @LENGTH@ 17
------------------INS SimpleName@@listeners @TO@ InfixExpression@@listeners == null @AT@ 5153 @LENGTH@ 9
------------------INS Operator@@== @TO@ InfixExpression@@listeners == null @AT@ 5162 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@listeners == null @AT@ 5166 @LENGTH@ 4
---------------INS Block@@ThenBody:{  warMetaData.getMergedJBossWebMetaData().setListeners(listeners=new ArrayList<ListenerMetaData>());} @TO@ IfStatement@@if (listeners == null) {  warMetaData.getMergedJBossWebMetaData().setListeners(listeners=new ArrayList<ListenerMetaData>());} @AT@ 5172 @LENGTH@ 164
------------------INS ExpressionStatement@@MethodInvocation:warMetaData.getMergedJBossWebMetaData().setListeners(listeners=new ArrayList<ListenerMetaData>()) @TO@ Block@@ThenBody:{  warMetaData.getMergedJBossWebMetaData().setListeners(listeners=new ArrayList<ListenerMetaData>());} @AT@ 5206 @LENGTH@ 100
---------------------MOV MethodInvocation@@warMetaData.getMergedJBossWebMetaData().getListeners().add(l) @TO@ ExpressionStatement@@MethodInvocation:warMetaData.getMergedJBossWebMetaData().setListeners(listeners=new ArrayList<ListenerMetaData>()) @AT@ 4852 @LENGTH@ 61
------------------------DEL MethodInvocation@@MethodName:getListeners:[] @AT@ 4852 @LENGTH@ 54
------------------------UPD SimpleName@@MethodName:add:[l] @TO@ MethodName:setListeners:[listeners=new ArrayList<ListenerMetaData>()] @AT@ 4907 @LENGTH@ 6
---------------------------DEL SimpleName@@l @AT@ 4911 @LENGTH@ 1
---------------------------INS Assignment@@listeners=new ArrayList<ListenerMetaData>() @TO@ SimpleName@@MethodName:add:[l] @AT@ 5259 @LENGTH@ 45
------------------------------INS SimpleName@@listeners @TO@ Assignment@@listeners=new ArrayList<ListenerMetaData>() @AT@ 5259 @LENGTH@ 9
------------------------------INS Operator@@= @TO@ Assignment@@listeners=new ArrayList<ListenerMetaData>() @AT@ 5268 @LENGTH@ 1
------------------------------INS ClassInstanceCreation@@ArrayList<ListenerMetaData>[] @TO@ Assignment@@listeners=new ArrayList<ListenerMetaData>() @AT@ 5271 @LENGTH@ 33
---------------------------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<ListenerMetaData>[] @AT@ 5271 @LENGTH@ 3
---------------------------------INS ParameterizedType@@ArrayList<ListenerMetaData> @TO@ ClassInstanceCreation@@ArrayList<ListenerMetaData>[] @AT@ 5275 @LENGTH@ 27
------------------------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<ListenerMetaData> @AT@ 5275 @LENGTH@ 9
------------------------------------INS SimpleType@@ListenerMetaData @TO@ ParameterizedType@@ArrayList<ListenerMetaData> @AT@ 5285 @LENGTH@ 16
------------INS ExpressionStatement@@MethodInvocation:listeners.add(l) @TO@ EnhancedForStatement@@for (ListenerMetaData l : value.getListeners()) {  warMetaData.getMergedJBossWebMetaData().getListeners().add(l);} @AT@ 5365 @LENGTH@ 17
---------------INS MethodInvocation@@listeners.add(l) @TO@ ExpressionStatement@@MethodInvocation:listeners.add(l) @AT@ 5365 @LENGTH@ 16
------------------INS SimpleName@@Name:listeners @TO@ MethodInvocation@@listeners.add(l) @AT@ 5365 @LENGTH@ 9
------------------INS SimpleName@@MethodName:add:[l] @TO@ MethodInvocation@@listeners.add(l) @AT@ 5375 @LENGTH@ 6
---------------------INS SimpleName@@l @TO@ SimpleName@@MethodName:add:[l] @AT@ 5379 @LENGTH@ 1


UPD TypeDeclaration@@[public]StringConverter, [Converter<String>] @TO@ [@Component, public]StringConverter, [Converter<String>] @AT@ 933 @LENGTH@ 621
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]StringConverter, [Converter<String>] @AT@ 983 @LENGTH@ 10


UPD VariableDeclarationStatement@@final HepProgram hepPgm=new HepProgramBuilder().addMatchOrder(HepMatchOrder.BOTTOM_UP).addRuleInstance(new ConvertMultiJoinRule(HiveJoinRel.class)).addRuleInstance(LoptOptimizeJoinRule.INSTANCE).build(); @TO@ final HepProgram hepPgm=new HepProgramBuilder().addMatchOrder(HepMatchOrder.BOTTOM_UP).addRuleInstance(new ConvertMultiJoinRule(HiveJoinRel.class)).addRuleInstance(new LoptOptimizeJoinRule(HiveJoinRel.HIVE_JOIN_FACTORY)).build(); @AT@ 468137 @LENGTH@ 231
---UPD VariableDeclarationFragment@@hepPgm=new HepProgramBuilder().addMatchOrder(HepMatchOrder.BOTTOM_UP).addRuleInstance(new ConvertMultiJoinRule(HiveJoinRel.class)).addRuleInstance(LoptOptimizeJoinRule.INSTANCE).build() @TO@ hepPgm=new HepProgramBuilder().addMatchOrder(HepMatchOrder.BOTTOM_UP).addRuleInstance(new ConvertMultiJoinRule(HiveJoinRel.class)).addRuleInstance(new LoptOptimizeJoinRule(HiveJoinRel.HIVE_JOIN_FACTORY)).build() @AT@ 468154 @LENGTH@ 213
------UPD MethodInvocation@@new HepProgramBuilder().addMatchOrder(HepMatchOrder.BOTTOM_UP).addRuleInstance(new ConvertMultiJoinRule(HiveJoinRel.class)).addRuleInstance(LoptOptimizeJoinRule.INSTANCE).build() @TO@ new HepProgramBuilder().addMatchOrder(HepMatchOrder.BOTTOM_UP).addRuleInstance(new ConvertMultiJoinRule(HiveJoinRel.class)).addRuleInstance(new LoptOptimizeJoinRule(HiveJoinRel.HIVE_JOIN_FACTORY)).build() @AT@ 468163 @LENGTH@ 204
---------UPD MethodInvocation@@MethodName:addRuleInstance:[LoptOptimizeJoinRule.INSTANCE] @TO@ MethodName:addRuleInstance:[new LoptOptimizeJoinRule(HiveJoinRel.HIVE_JOIN_FACTORY)] @AT@ 468163 @LENGTH@ 196
------------DEL QualifiedName@@LoptOptimizeJoinRule.INSTANCE @AT@ 468329 @LENGTH@ 29
------------INS ClassInstanceCreation@@LoptOptimizeJoinRule[HiveJoinRel.HIVE_JOIN_FACTORY] @TO@ MethodInvocation@@MethodName:addRuleInstance:[LoptOptimizeJoinRule.INSTANCE] @AT@ 468368 @LENGTH@ 55
---------------INS New@@new @TO@ ClassInstanceCreation@@LoptOptimizeJoinRule[HiveJoinRel.HIVE_JOIN_FACTORY] @AT@ 468368 @LENGTH@ 3
---------------INS SimpleType@@LoptOptimizeJoinRule @TO@ ClassInstanceCreation@@LoptOptimizeJoinRule[HiveJoinRel.HIVE_JOIN_FACTORY] @AT@ 468372 @LENGTH@ 20
---------------INS QualifiedName@@HiveJoinRel.HIVE_JOIN_FACTORY @TO@ ClassInstanceCreation@@LoptOptimizeJoinRule[HiveJoinRel.HIVE_JOIN_FACTORY] @AT@ 468393 @LENGTH@ 29
------------------MOV SimpleName@@LoptOptimizeJoinRule @TO@ QualifiedName@@HiveJoinRel.HIVE_JOIN_FACTORY @AT@ 468329 @LENGTH@ 20
------------------MOV SimpleName@@INSTANCE @TO@ QualifiedName@@HiveJoinRel.HIVE_JOIN_FACTORY @AT@ 468350 @LENGTH@ 8


INS MethodDeclaration@@User, MethodName:validWithPageableFirst, Pageable pageable, @Param("username") String username,  @TO@ TypeDeclaration@@[static]SampleDao,  @AT@ 4453 @LENGTH@ 78
---INS SimpleType@@User @TO@ MethodDeclaration@@User, MethodName:validWithPageableFirst, Pageable pageable, @Param("username") String username,  @AT@ 4448 @LENGTH@ 4
---INS SimpleName@@MethodName:validWithPageableFirst @TO@ MethodDeclaration@@User, MethodName:validWithPageableFirst, Pageable pageable, @Param("username") String username,  @AT@ 4453 @LENGTH@ 22
---INS SingleVariableDeclaration@@Pageable pageable @TO@ MethodDeclaration@@User, MethodName:validWithPageableFirst, Pageable pageable, @Param("username") String username,  @AT@ 4476 @LENGTH@ 17
------INS SimpleType@@Pageable @TO@ SingleVariableDeclaration@@Pageable pageable @AT@ 4476 @LENGTH@ 8
------INS SimpleName@@pageable @TO@ SingleVariableDeclaration@@Pageable pageable @AT@ 4485 @LENGTH@ 8
---INS SingleVariableDeclaration@@@Param("username") String username @TO@ MethodDeclaration@@User, MethodName:validWithPageableFirst, Pageable pageable, @Param("username") String username,  @AT@ 4495 @LENGTH@ 34
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@@Param("username") String username @AT@ 4514 @LENGTH@ 6
------INS SimpleName@@username @TO@ SingleVariableDeclaration@@@Param("username") String username @AT@ 4521 @LENGTH@ 8


UPD VariableDeclarationStatement@@List<OpenMBeanAttributeInfo> infos=new LinkedList<>(); @TO@ List<OpenMBeanAttributeInfo> infos=new LinkedList<OpenMBeanAttributeInfo>(); @AT@ 8358 @LENGTH@ 56
---UPD VariableDeclarationFragment@@infos=new LinkedList<>() @TO@ infos=new LinkedList<OpenMBeanAttributeInfo>() @AT@ 8387 @LENGTH@ 26
------UPD ClassInstanceCreation@@LinkedList<>[] @TO@ LinkedList<OpenMBeanAttributeInfo>[] @AT@ 8395 @LENGTH@ 18
---------UPD ParameterizedType@@LinkedList<> @TO@ LinkedList<OpenMBeanAttributeInfo> @AT@ 8399 @LENGTH@ 12
------------INS SimpleType@@OpenMBeanAttributeInfo @TO@ ParameterizedType@@LinkedList<> @AT@ 8410 @LENGTH@ 22


UPD IfStatement@@if (this.criteriaChain.size() == 1) {  return criteriaChain.get(0).getSingleCriteriaObject();} else {  DBObject criteriaObject=new BasicDBObject();  for (  Criteria c : this.criteriaChain) {    DBObject dbo=c.getSingleCriteriaObject();    for (    String k : dbo.keySet()) {      setValue(criteriaObject,k,dbo.get(k));    }  }  return criteriaObject;} @TO@ if (this.criteriaChain.size() == 1) {  return criteriaChain.get(0).getSingleCriteriaObject();} else if (CollectionUtils.isEmpty(this.criteriaChain) && !CollectionUtils.isEmpty(this.criteria)) {  return getSingleCriteriaObject();} else {  DBObject criteriaObject=new BasicDBObject();  for (  Criteria c : this.criteriaChain) {    DBObject dbo=c.getSingleCriteriaObject();    for (    String k : dbo.keySet()) {      setValue(criteriaObject,k,dbo.get(k));    }  }  return criteriaObject;} @AT@ 13505 @LENGTH@ 370
---INS Block@@ElseBody:if (CollectionUtils.isEmpty(this.criteriaChain) && !CollectionUtils.isEmpty(this.criteria)) {  return getSingleCriteriaObject();} else {  DBObject criteriaObject=new BasicDBObject();  for (  Criteria c : this.criteriaChain) {    DBObject dbo=c.getSingleCriteriaObject();    for (    String k : dbo.keySet()) {      setValue(criteriaObject,k,dbo.get(k));    }  }  return criteriaObject;} @TO@ IfStatement@@if (this.criteriaChain.size() == 1) {  return criteriaChain.get(0).getSingleCriteriaObject();} else {  DBObject criteriaObject=new BasicDBObject();  for (  Criteria c : this.criteriaChain) {    DBObject dbo=c.getSingleCriteriaObject();    for (    String k : dbo.keySet()) {      setValue(criteriaObject,k,dbo.get(k));    }  }  return criteriaObject;} @AT@ 13705 @LENGTH@ 405
------INS IfStatement@@if (CollectionUtils.isEmpty(this.criteriaChain) && !CollectionUtils.isEmpty(this.criteria)) {  return getSingleCriteriaObject();} else {  DBObject criteriaObject=new BasicDBObject();  for (  Criteria c : this.criteriaChain) {    DBObject dbo=c.getSingleCriteriaObject();    for (    String k : dbo.keySet()) {      setValue(criteriaObject,k,dbo.get(k));    }  }  return criteriaObject;} @TO@ Block@@ElseBody:if (CollectionUtils.isEmpty(this.criteriaChain) && !CollectionUtils.isEmpty(this.criteria)) {  return getSingleCriteriaObject();} else {  DBObject criteriaObject=new BasicDBObject();  for (  Criteria c : this.criteriaChain) {    DBObject dbo=c.getSingleCriteriaObject();    for (    String k : dbo.keySet()) {      setValue(criteriaObject,k,dbo.get(k));    }  }  return criteriaObject;} @AT@ 13705 @LENGTH@ 405
---------MOV Block@@ElseBody:{  DBObject criteriaObject=new BasicDBObject();  for (  Criteria c : this.criteriaChain) {    DBObject dbo=c.getSingleCriteriaObject();    for (    String k : dbo.keySet()) {      setValue(criteriaObject,k,dbo.get(k));    }  }  return criteriaObject;} @TO@ IfStatement@@if (CollectionUtils.isEmpty(this.criteriaChain) && !CollectionUtils.isEmpty(this.criteria)) {  return getSingleCriteriaObject();} else {  DBObject criteriaObject=new BasicDBObject();  for (  Criteria c : this.criteriaChain) {    DBObject dbo=c.getSingleCriteriaObject();    for (    String k : dbo.keySet()) {      setValue(criteriaObject,k,dbo.get(k));    }  }  return criteriaObject;} @AT@ 13610 @LENGTH@ 265
---------INS InfixExpression@@CollectionUtils.isEmpty(this.criteriaChain) && !CollectionUtils.isEmpty(this.criteria) @TO@ IfStatement@@if (CollectionUtils.isEmpty(this.criteriaChain) && !CollectionUtils.isEmpty(this.criteria)) {  return getSingleCriteriaObject();} else {  DBObject criteriaObject=new BasicDBObject();  for (  Criteria c : this.criteriaChain) {    DBObject dbo=c.getSingleCriteriaObject();    for (    String k : dbo.keySet()) {      setValue(criteriaObject,k,dbo.get(k));    }  }  return criteriaObject;} @AT@ 13709 @LENGTH@ 86
------------INS MethodInvocation@@CollectionUtils.isEmpty(this.criteriaChain) @TO@ InfixExpression@@CollectionUtils.isEmpty(this.criteriaChain) && !CollectionUtils.isEmpty(this.criteria) @AT@ 13709 @LENGTH@ 43
---------------INS SimpleName@@Name:CollectionUtils @TO@ MethodInvocation@@CollectionUtils.isEmpty(this.criteriaChain) @AT@ 13709 @LENGTH@ 15
---------------INS SimpleName@@MethodName:isEmpty:[this.criteriaChain] @TO@ MethodInvocation@@CollectionUtils.isEmpty(this.criteriaChain) @AT@ 13725 @LENGTH@ 27
------------------INS FieldAccess@@this.criteriaChain @TO@ SimpleName@@MethodName:isEmpty:[this.criteriaChain] @AT@ 13733 @LENGTH@ 18
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.criteriaChain @AT@ 13733 @LENGTH@ 4
---------------------INS SimpleName@@criteriaChain @TO@ FieldAccess@@this.criteriaChain @AT@ 13738 @LENGTH@ 13
------------INS Operator@@&& @TO@ InfixExpression@@CollectionUtils.isEmpty(this.criteriaChain) && !CollectionUtils.isEmpty(this.criteria) @AT@ 13752 @LENGTH@ 2
------------INS PrefixExpression@@!CollectionUtils.isEmpty(this.criteria) @TO@ InfixExpression@@CollectionUtils.isEmpty(this.criteriaChain) && !CollectionUtils.isEmpty(this.criteria) @AT@ 13756 @LENGTH@ 39
---------------INS Operator@@! @TO@ PrefixExpression@@!CollectionUtils.isEmpty(this.criteria) @AT@ 13756 @LENGTH@ 1
---------------INS MethodInvocation@@CollectionUtils.isEmpty(this.criteria) @TO@ PrefixExpression@@!CollectionUtils.isEmpty(this.criteria) @AT@ 13757 @LENGTH@ 38
------------------INS SimpleName@@Name:CollectionUtils @TO@ MethodInvocation@@CollectionUtils.isEmpty(this.criteria) @AT@ 13757 @LENGTH@ 15
------------------INS SimpleName@@MethodName:isEmpty:[this.criteria] @TO@ MethodInvocation@@CollectionUtils.isEmpty(this.criteria) @AT@ 13773 @LENGTH@ 22
---------------------INS FieldAccess@@this.criteria @TO@ SimpleName@@MethodName:isEmpty:[this.criteria] @AT@ 13781 @LENGTH@ 13
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.criteria @AT@ 13781 @LENGTH@ 4
------------------------INS SimpleName@@criteria @TO@ FieldAccess@@this.criteria @AT@ 13786 @LENGTH@ 8
---------INS Block@@ThenBody:{  return getSingleCriteriaObject();} @TO@ IfStatement@@if (CollectionUtils.isEmpty(this.criteriaChain) && !CollectionUtils.isEmpty(this.criteria)) {  return getSingleCriteriaObject();} else {  DBObject criteriaObject=new BasicDBObject();  for (  Criteria c : this.criteriaChain) {    DBObject dbo=c.getSingleCriteriaObject();    for (    String k : dbo.keySet()) {      setValue(criteriaObject,k,dbo.get(k));    }  }  return criteriaObject;} @AT@ 13797 @LENGTH@ 42
------------INS ReturnStatement@@MethodInvocation:getSingleCriteriaObject() @TO@ Block@@ThenBody:{  return getSingleCriteriaObject();} @AT@ 13802 @LENGTH@ 33
---------------INS MethodInvocation@@MethodName:getSingleCriteriaObject:[] @TO@ ReturnStatement@@MethodInvocation:getSingleCriteriaObject() @AT@ 13809 @LENGTH@ 25


INS ExpressionStatement@@MethodInvocation:options.put(PicketBoxSecurityVault.CREATE_KEYSTORE,Boolean.TRUE.toString()) @TO@ MethodDeclaration@@private, Map<String,Object>, MethodName:getVaultOptionsMap,  @AT@ 6821 @LENGTH@ 77
---INS MethodInvocation@@options.put(PicketBoxSecurityVault.CREATE_KEYSTORE,Boolean.TRUE.toString()) @TO@ ExpressionStatement@@MethodInvocation:options.put(PicketBoxSecurityVault.CREATE_KEYSTORE,Boolean.TRUE.toString()) @AT@ 6821 @LENGTH@ 76
------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.put(PicketBoxSecurityVault.CREATE_KEYSTORE,Boolean.TRUE.toString()) @AT@ 6821 @LENGTH@ 7
------INS SimpleName@@MethodName:put:[PicketBoxSecurityVault.CREATE_KEYSTORE, Boolean.TRUE.toString()] @TO@ MethodInvocation@@options.put(PicketBoxSecurityVault.CREATE_KEYSTORE,Boolean.TRUE.toString()) @AT@ 6829 @LENGTH@ 68
---------INS QualifiedName@@PicketBoxSecurityVault.CREATE_KEYSTORE @TO@ SimpleName@@MethodName:put:[PicketBoxSecurityVault.CREATE_KEYSTORE, Boolean.TRUE.toString()] @AT@ 6833 @LENGTH@ 38
------------INS SimpleName@@PicketBoxSecurityVault @TO@ QualifiedName@@PicketBoxSecurityVault.CREATE_KEYSTORE @AT@ 6833 @LENGTH@ 22
------------INS SimpleName@@CREATE_KEYSTORE @TO@ QualifiedName@@PicketBoxSecurityVault.CREATE_KEYSTORE @AT@ 6856 @LENGTH@ 15
---------INS MethodInvocation@@Boolean.TRUE.toString() @TO@ SimpleName@@MethodName:put:[PicketBoxSecurityVault.CREATE_KEYSTORE, Boolean.TRUE.toString()] @AT@ 6873 @LENGTH@ 23
------------INS QualifiedName@@Name:Boolean.TRUE @TO@ MethodInvocation@@Boolean.TRUE.toString() @AT@ 6873 @LENGTH@ 12
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@Boolean.TRUE.toString() @AT@ 6886 @LENGTH@ 10


UPD TypeDeclaration@@[public]ShortConverter, [Converter<Short>] @TO@ [@Component, public]ShortConverter, [Converter<Short>] @AT@ 938 @LENGTH@ 592
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]ShortConverter, [Converter<Short>] @AT@ 988 @LENGTH@ 10


INS FieldDeclaration@@private, String, [name] @TO@ TypeDeclaration@@[@ManagedResource(description="Managed SedaEndpoint"), @UriEndpoint(scheme="seda",consumerClass=SedaConsumer.class), public]SedaEndpoint, DefaultEndpoint[BrowsableEndpoint, MultipleConsumersSupport] @AT@ 3040 @LENGTH@ 20
---INS Modifier@@private @TO@ FieldDeclaration@@private, String, [name] @AT@ 3040 @LENGTH@ 7
---INS SimpleType@@String @TO@ FieldDeclaration@@private, String, [name] @AT@ 3048 @LENGTH@ 6
---INS VariableDeclarationFragment@@name @TO@ FieldDeclaration@@private, String, [name] @AT@ 3055 @LENGTH@ 4
------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name @AT@ 3055 @LENGTH@ 4


UPD IfStatement@@if (route.getId().equals(id)) {  return route;} @TO@ if (route.getId() != null && route.getId().equals(id)) {  return route;} @AT@ 67556 @LENGTH@ 75
---INS InfixExpression@@route.getId() != null && route.getId().equals(id) @TO@ IfStatement@@if (route.getId().equals(id)) {  return route;} @AT@ 67560 @LENGTH@ 49
------MOV MethodInvocation@@route.getId().equals(id) @TO@ InfixExpression@@route.getId() != null && route.getId().equals(id) @AT@ 67560 @LENGTH@ 24
------INS InfixExpression@@route.getId() != null @TO@ InfixExpression@@route.getId() != null && route.getId().equals(id) @AT@ 67560 @LENGTH@ 21
---------INS MethodInvocation@@route.getId() @TO@ InfixExpression@@route.getId() != null @AT@ 67560 @LENGTH@ 13
------------INS SimpleName@@Name:route @TO@ MethodInvocation@@route.getId() @AT@ 67560 @LENGTH@ 5
------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@route.getId() @AT@ 67566 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@route.getId() != null @AT@ 67573 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@route.getId() != null @AT@ 67577 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@route.getId() != null && route.getId().equals(id) @AT@ 67581 @LENGTH@ 2


UPD TypeDeclaration@@[public]MyBatisEndpoint, DefaultPollingEndpoint @TO@ [@UriEndpoint(scheme="mybatis",consumerClass=MyBatisConsumer.class), public]MyBatisEndpoint, DefaultPollingEndpoint @AT@ 1233 @LENGTH@ 2657
---INS NormalAnnotation@@@UriEndpoint(scheme="mybatis",consumerClass=MyBatisConsumer.class) @TO@ TypeDeclaration@@[public]MyBatisEndpoint, DefaultPollingEndpoint @AT@ 1312 @LENGTH@ 72


UPD VariableDeclarationStatement@@DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 3635 @LENGTH@ 97
---UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 3635 @LENGTH@ 17
---UPD VariableDeclarationFragment@@client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 3653 @LENGTH@ 78
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 3662 @LENGTH@ 69
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 3662 @LENGTH@ 43
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3692 @LENGTH@ 11
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 3706 @LENGTH@ 25


UPD TypeDeclaration@@[public]QueryExecutionConverters,  @TO@ [public, abstract]QueryExecutionConverters,  @AT@ 1496 @LENGTH@ 7241
---INS Modifier@@abstract @TO@ TypeDeclaration@@[public]QueryExecutionConverters,  @AT@ 1503 @LENGTH@ 8


UPD FieldDeclaration@@static, final, String, [MIN_SPRING_VERSION="4.0.2.RELEASE"] @TO@ static, final, String, [MIN_SPRING_VERSION="4.1.0.BUILD-SNAPSHOT"] @AT@ 859 @LENGTH@ 57
---UPD VariableDeclarationFragment@@MIN_SPRING_VERSION="4.0.2.RELEASE" @TO@ MIN_SPRING_VERSION="4.1.0.BUILD-SNAPSHOT" @AT@ 879 @LENGTH@ 36
------UPD StringLiteral@@"4.0.2.RELEASE" @TO@ "4.1.0.BUILD-SNAPSHOT" @AT@ 900 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:considersEntityAsNotNewWhenHavingIdSetAndUsingPrimitiveTypeForVersionProperty,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration({"classpath:infrastructure.xml"}), public]JpaMetamodelEntityInformationIntegrationTests,  @AT@ 6115 @LENGTH@ 435
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:considersEntityAsNotNewWhenHavingIdSetAndUsingPrimitiveTypeForVersionProperty,  @AT@ 6115 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:considersEntityAsNotNewWhenHavingIdSetAndUsingPrimitiveTypeForVersionProperty,  @AT@ 6122 @LENGTH@ 4
---INS SimpleName@@MethodName:considersEntityAsNotNewWhenHavingIdSetAndUsingPrimitiveTypeForVersionProperty @TO@ MethodDeclaration@@public, void, MethodName:considersEntityAsNotNewWhenHavingIdSetAndUsingPrimitiveTypeForVersionProperty,  @AT@ 6127 @LENGTH@ 77
---INS VariableDeclarationStatement@@EntityInformation<PrimitiveVersionProperty,Serializable> information=new JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>(PrimitiveVersionProperty.class,em.getMetamodel()); @TO@ MethodDeclaration@@public, void, MethodName:considersEntityAsNotNewWhenHavingIdSetAndUsingPrimitiveTypeForVersionProperty,  @AT@ 6212 @LENGTH@ 202
------INS ParameterizedType@@EntityInformation<PrimitiveVersionProperty,Serializable> @TO@ VariableDeclarationStatement@@EntityInformation<PrimitiveVersionProperty,Serializable> information=new JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>(PrimitiveVersionProperty.class,em.getMetamodel()); @AT@ 6212 @LENGTH@ 57
---------INS SimpleType@@EntityInformation @TO@ ParameterizedType@@EntityInformation<PrimitiveVersionProperty,Serializable> @AT@ 6212 @LENGTH@ 17
---------INS SimpleType@@PrimitiveVersionProperty @TO@ ParameterizedType@@EntityInformation<PrimitiveVersionProperty,Serializable> @AT@ 6230 @LENGTH@ 24
---------INS SimpleType@@Serializable @TO@ ParameterizedType@@EntityInformation<PrimitiveVersionProperty,Serializable> @AT@ 6256 @LENGTH@ 12
------INS VariableDeclarationFragment@@information=new JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>(PrimitiveVersionProperty.class,em.getMetamodel()) @TO@ VariableDeclarationStatement@@EntityInformation<PrimitiveVersionProperty,Serializable> information=new JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>(PrimitiveVersionProperty.class,em.getMetamodel()); @AT@ 6270 @LENGTH@ 143
---------INS SimpleName@@information @TO@ VariableDeclarationFragment@@information=new JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>(PrimitiveVersionProperty.class,em.getMetamodel()) @AT@ 6270 @LENGTH@ 11
---------INS ClassInstanceCreation@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>[PrimitiveVersionProperty.class, em.getMetamodel()] @TO@ VariableDeclarationFragment@@information=new JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>(PrimitiveVersionProperty.class,em.getMetamodel()) @AT@ 6284 @LENGTH@ 129
------------INS New@@new @TO@ ClassInstanceCreation@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>[PrimitiveVersionProperty.class, em.getMetamodel()] @AT@ 6284 @LENGTH@ 3
------------INS ParameterizedType@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable> @TO@ ClassInstanceCreation@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>[PrimitiveVersionProperty.class, em.getMetamodel()] @AT@ 6288 @LENGTH@ 69
---------------INS SimpleType@@JpaMetamodelEntityInformation @TO@ ParameterizedType@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable> @AT@ 6288 @LENGTH@ 29
---------------INS SimpleType@@PrimitiveVersionProperty @TO@ ParameterizedType@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable> @AT@ 6318 @LENGTH@ 24
---------------INS SimpleType@@Serializable @TO@ ParameterizedType@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable> @AT@ 6344 @LENGTH@ 12
------------INS TypeLiteral@@PrimitiveVersionProperty.class @TO@ ClassInstanceCreation@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>[PrimitiveVersionProperty.class, em.getMetamodel()] @AT@ 6363 @LENGTH@ 30
------------INS MethodInvocation@@em.getMetamodel() @TO@ ClassInstanceCreation@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>[PrimitiveVersionProperty.class, em.getMetamodel()] @AT@ 6395 @LENGTH@ 17
---------------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.getMetamodel() @AT@ 6395 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getMetamodel:[] @TO@ MethodInvocation@@em.getMetamodel() @AT@ 6398 @LENGTH@ 14
---INS VariableDeclarationStatement@@PrimitiveVersionProperty pvp=new PrimitiveVersionProperty(); @TO@ MethodDeclaration@@public, void, MethodName:considersEntityAsNotNewWhenHavingIdSetAndUsingPrimitiveTypeForVersionProperty,  @AT@ 6418 @LENGTH@ 62
------INS SimpleType@@PrimitiveVersionProperty @TO@ VariableDeclarationStatement@@PrimitiveVersionProperty pvp=new PrimitiveVersionProperty(); @AT@ 6418 @LENGTH@ 24
------INS VariableDeclarationFragment@@pvp=new PrimitiveVersionProperty() @TO@ VariableDeclarationStatement@@PrimitiveVersionProperty pvp=new PrimitiveVersionProperty(); @AT@ 6443 @LENGTH@ 36
---------INS SimpleName@@pvp @TO@ VariableDeclarationFragment@@pvp=new PrimitiveVersionProperty() @AT@ 6443 @LENGTH@ 3
---------INS ClassInstanceCreation@@PrimitiveVersionProperty[] @TO@ VariableDeclarationFragment@@pvp=new PrimitiveVersionProperty() @AT@ 6449 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@PrimitiveVersionProperty[] @AT@ 6449 @LENGTH@ 3
------------INS SimpleType@@PrimitiveVersionProperty @TO@ ClassInstanceCreation@@PrimitiveVersionProperty[] @AT@ 6453 @LENGTH@ 24
---INS ExpressionStatement@@Assignment:pvp.id=100L @TO@ MethodDeclaration@@public, void, MethodName:considersEntityAsNotNewWhenHavingIdSetAndUsingPrimitiveTypeForVersionProperty,  @AT@ 6483 @LENGTH@ 14
------INS Assignment@@pvp.id=100L @TO@ ExpressionStatement@@Assignment:pvp.id=100L @AT@ 6483 @LENGTH@ 13
---------INS QualifiedName@@pvp.id @TO@ Assignment@@pvp.id=100L @AT@ 6483 @LENGTH@ 6
------------INS SimpleName@@pvp @TO@ QualifiedName@@pvp.id @AT@ 6483 @LENGTH@ 3
------------INS SimpleName@@id @TO@ QualifiedName@@pvp.id @AT@ 6487 @LENGTH@ 2
---------INS Operator@@= @TO@ Assignment@@pvp.id=100L @AT@ 6489 @LENGTH@ 1
---------INS NumberLiteral@@100L @TO@ Assignment@@pvp.id=100L @AT@ 6492 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(information.isNew(pvp),is(false)) @TO@ MethodDeclaration@@public, void, MethodName:considersEntityAsNotNewWhenHavingIdSetAndUsingPrimitiveTypeForVersionProperty,  @AT@ 6501 @LENGTH@ 46
------INS MethodInvocation@@assertThat(information.isNew(pvp),is(false)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(information.isNew(pvp),is(false)) @AT@ 6501 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertThat:[information.isNew(pvp), is(false)] @TO@ MethodInvocation@@assertThat(information.isNew(pvp),is(false)) @AT@ 6501 @LENGTH@ 45
------------INS MethodInvocation@@information.isNew(pvp) @TO@ SimpleName@@MethodName:assertThat:[information.isNew(pvp), is(false)] @AT@ 6512 @LENGTH@ 22
---------------INS SimpleName@@Name:information @TO@ MethodInvocation@@information.isNew(pvp) @AT@ 6512 @LENGTH@ 11
---------------INS SimpleName@@MethodName:isNew:[pvp] @TO@ MethodInvocation@@information.isNew(pvp) @AT@ 6524 @LENGTH@ 10
------------------INS SimpleName@@pvp @TO@ SimpleName@@MethodName:isNew:[pvp] @AT@ 6530 @LENGTH@ 3
------------INS MethodInvocation@@is(false) @TO@ SimpleName@@MethodName:assertThat:[information.isNew(pvp), is(false)] @AT@ 6536 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 6536 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 6539 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 6536 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 6539 @LENGTH@ 5


MOV IfStatement@@if (!query.isEmpty()) {  url=url + "?" + query;} @TO@ MethodDeclaration@@public, Consumer, MethodName:createConsumer, CamelContext camelContext, Processor processor, String verb, String basePath, String uriTemplate, String consumes, String produces, Map<String,Object> parameters, Exception,  @AT@ 12259 @LENGTH@ 70


UPD IfStatement@@if ((!topLevelQB || qbToChk.getIsQuery()) && (!topLevelQB || (queryProperties.getJoinCount() > 1) || conf.getBoolVar(ConfVars.HIVE_IN_TEST)) && !queryProperties.hasClusterBy()&& !queryProperties.hasDistributeBy()&& !queryProperties.hasSortBy()&& !queryProperties.hasPTF()&& !queryProperties.usesScript()&& !queryProperties.hasMultiDestQuery()&& !queryProperties.hasLateralViews()) {  runOptiqPlanner=true;} else {  LOG.info("Can not invoke CBO; query contains operators not supported for CBO.");} @TO@ if ((!topLevelQB || qbToChk.getIsQuery()) && (!conf.getBoolVar(ConfVars.HIVE_IN_TEST) || conf.getVar(ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("nonstrict")) && (!topLevelQB || (queryProperties.getJoinCount() > 1) || conf.getBoolVar(ConfVars.HIVE_IN_TEST))&& !queryProperties.hasClusterBy()&& !queryProperties.hasDistributeBy()&& !queryProperties.hasSortBy()&& !queryProperties.hasPTF()&& !queryProperties.usesScript()&& !queryProperties.hasMultiDestQuery()&& !queryProperties.hasLateralViews()) {  runOptiqPlanner=true;} else {  LOG.info("Can not invoke CBO; query contains operators not supported for CBO.");} @AT@ 480359 @LENGTH@ 564
---UPD InfixExpression@@(!topLevelQB || qbToChk.getIsQuery()) && (!topLevelQB || (queryProperties.getJoinCount() > 1) || conf.getBoolVar(ConfVars.HIVE_IN_TEST)) && !queryProperties.hasClusterBy()&& !queryProperties.hasDistributeBy()&& !queryProperties.hasSortBy()&& !queryProperties.hasPTF()&& !queryProperties.usesScript()&& !queryProperties.hasMultiDestQuery()&& !queryProperties.hasLateralViews() @TO@ (!topLevelQB || qbToChk.getIsQuery()) && (!conf.getBoolVar(ConfVars.HIVE_IN_TEST) || conf.getVar(ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("nonstrict")) && (!topLevelQB || (queryProperties.getJoinCount() > 1) || conf.getBoolVar(ConfVars.HIVE_IN_TEST))&& !queryProperties.hasClusterBy()&& !queryProperties.hasDistributeBy()&& !queryProperties.hasSortBy()&& !queryProperties.hasPTF()&& !queryProperties.usesScript()&& !queryProperties.hasMultiDestQuery()&& !queryProperties.hasLateralViews() @AT@ 480363 @LENGTH@ 421
------INS ParenthesizedExpression@@(!conf.getBoolVar(ConfVars.HIVE_IN_TEST) || conf.getVar(ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("nonstrict")) @TO@ InfixExpression@@(!topLevelQB || qbToChk.getIsQuery()) && (!topLevelQB || (queryProperties.getJoinCount() > 1) || conf.getBoolVar(ConfVars.HIVE_IN_TEST)) && !queryProperties.hasClusterBy()&& !queryProperties.hasDistributeBy()&& !queryProperties.hasSortBy()&& !queryProperties.hasPTF()&& !queryProperties.usesScript()&& !queryProperties.hasMultiDestQuery()&& !queryProperties.hasLateralViews() @AT@ 480412 @LENGTH@ 111
---------INS InfixExpression@@!conf.getBoolVar(ConfVars.HIVE_IN_TEST) || conf.getVar(ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("nonstrict") @TO@ ParenthesizedExpression@@(!conf.getBoolVar(ConfVars.HIVE_IN_TEST) || conf.getVar(ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("nonstrict")) @AT@ 480413 @LENGTH@ 109
------------INS PrefixExpression@@!conf.getBoolVar(ConfVars.HIVE_IN_TEST) @TO@ InfixExpression@@!conf.getBoolVar(ConfVars.HIVE_IN_TEST) || conf.getVar(ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("nonstrict") @AT@ 480413 @LENGTH@ 39
---------------INS Operator@@! @TO@ PrefixExpression@@!conf.getBoolVar(ConfVars.HIVE_IN_TEST) @AT@ 480413 @LENGTH@ 1
---------------INS MethodInvocation@@conf.getBoolVar(ConfVars.HIVE_IN_TEST) @TO@ PrefixExpression@@!conf.getBoolVar(ConfVars.HIVE_IN_TEST) @AT@ 480414 @LENGTH@ 38
------------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.getBoolVar(ConfVars.HIVE_IN_TEST) @AT@ 480414 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getBoolVar:[ConfVars.HIVE_IN_TEST] @TO@ MethodInvocation@@conf.getBoolVar(ConfVars.HIVE_IN_TEST) @AT@ 480419 @LENGTH@ 33
---------------------INS QualifiedName@@ConfVars.HIVE_IN_TEST @TO@ SimpleName@@MethodName:getBoolVar:[ConfVars.HIVE_IN_TEST] @AT@ 480430 @LENGTH@ 21
------------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.HIVE_IN_TEST @AT@ 480430 @LENGTH@ 8
------------------------INS SimpleName@@HIVE_IN_TEST @TO@ QualifiedName@@ConfVars.HIVE_IN_TEST @AT@ 480439 @LENGTH@ 12
------------INS Operator@@|| @TO@ InfixExpression@@!conf.getBoolVar(ConfVars.HIVE_IN_TEST) || conf.getVar(ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("nonstrict") @AT@ 480452 @LENGTH@ 2
------------INS MethodInvocation@@conf.getVar(ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("nonstrict") @TO@ InfixExpression@@!conf.getBoolVar(ConfVars.HIVE_IN_TEST) || conf.getVar(ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("nonstrict") @AT@ 480456 @LENGTH@ 66
---------------INS MethodInvocation@@MethodName:getVar:[ConfVars.HIVEMAPREDMODE] @TO@ MethodInvocation@@conf.getVar(ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("nonstrict") @AT@ 480456 @LENGTH@ 36
------------------INS QualifiedName@@ConfVars.HIVEMAPREDMODE @TO@ MethodInvocation@@MethodName:getVar:[ConfVars.HIVEMAPREDMODE] @AT@ 480468 @LENGTH@ 23
---------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.HIVEMAPREDMODE @AT@ 480468 @LENGTH@ 8
---------------------INS SimpleName@@HIVEMAPREDMODE @TO@ QualifiedName@@ConfVars.HIVEMAPREDMODE @AT@ 480477 @LENGTH@ 14
---------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.getVar(ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("nonstrict") @AT@ 480456 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equalsIgnoreCase:["nonstrict"] @TO@ MethodInvocation@@conf.getVar(ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("nonstrict") @AT@ 480493 @LENGTH@ 29
------------------INS StringLiteral@@"nonstrict" @TO@ SimpleName@@MethodName:equalsIgnoreCase:["nonstrict"] @AT@ 480510 @LENGTH@ 11


DEL VariableDeclarationStatement@@List<BooleanExample> list=new ArrayList<BooleanExample>(); @AT@ 2176 @LENGTH@ 60
---DEL ParameterizedType@@List<BooleanExample> @AT@ 2176 @LENGTH@ 20
------DEL SimpleType@@List @AT@ 2176 @LENGTH@ 4
------DEL SimpleType@@BooleanExample @AT@ 2181 @LENGTH@ 14
---DEL VariableDeclarationFragment@@list=new ArrayList<BooleanExample>() @AT@ 2197 @LENGTH@ 38
------DEL SimpleName@@list @AT@ 2197 @LENGTH@ 4
------DEL ClassInstanceCreation@@ArrayList<BooleanExample>[] @AT@ 2204 @LENGTH@ 31
---------DEL New@@new @AT@ 2204 @LENGTH@ 3
---------DEL ParameterizedType@@ArrayList<BooleanExample> @AT@ 2208 @LENGTH@ 25
------------DEL SimpleType@@ArrayList @AT@ 2208 @LENGTH@ 9
------------DEL SimpleType@@BooleanExample @AT@ 2218 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:channelFutrue.awaitUninterruptibly() @TO@ MethodDeclaration@@protected, void, MethodName:startServerBootstrap,  @AT@ 7614 @LENGTH@ 37
---INS MethodInvocation@@channelFutrue.awaitUninterruptibly() @TO@ ExpressionStatement@@MethodInvocation:channelFutrue.awaitUninterruptibly() @AT@ 7614 @LENGTH@ 36
------INS SimpleName@@Name:channelFutrue @TO@ MethodInvocation@@channelFutrue.awaitUninterruptibly() @AT@ 7614 @LENGTH@ 13
------INS SimpleName@@MethodName:awaitUninterruptibly:[] @TO@ MethodInvocation@@channelFutrue.awaitUninterruptibly() @AT@ 7628 @LENGTH@ 22


UPD ReturnStatement@@ClassInstanceCreation:new RedisSystemException("Unknown Lettuce exception",ex) @TO@ NullLiteral:null @AT@ 1978 @LENGTH@ 65
---DEL ClassInstanceCreation@@RedisSystemException["Unknown Lettuce exception", ex] @AT@ 1985 @LENGTH@ 57
------DEL New@@new @AT@ 1985 @LENGTH@ 3
------DEL SimpleType@@RedisSystemException @AT@ 1989 @LENGTH@ 20
------DEL StringLiteral@@"Unknown Lettuce exception" @AT@ 2010 @LENGTH@ 27
------DEL SimpleName@@ex @AT@ 2039 @LENGTH@ 2
---INS NullLiteral@@null @TO@ ReturnStatement@@ClassInstanceCreation:new RedisSystemException("Unknown Lettuce exception",ex) @AT@ 2023 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:LettuceConverters.toDataAccessException(ex) @TO@ MethodInvocation:EXCEPTION_TRANSLATION.translate(ex) @AT@ 4821 @LENGTH@ 51
---UPD MethodInvocation@@LettuceConverters.toDataAccessException(ex) @TO@ EXCEPTION_TRANSLATION.translate(ex) @AT@ 4828 @LENGTH@ 43
------UPD SimpleName@@Name:LettuceConverters @TO@ Name:EXCEPTION_TRANSLATION @AT@ 4828 @LENGTH@ 17
------UPD SimpleName@@MethodName:toDataAccessException:[ex] @TO@ MethodName:translate:[ex] @AT@ 4846 @LENGTH@ 25


MOV FieldDeclaration@@private, EmbeddedDatabase, [db] @TO@ TypeDeclaration@@[public]SqlProducerExpressionParameterTest, CamelTestSupport @AT@ 1477 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(expectedHadoopVal,new Configuration().get(name)) @TO@ MethodInvocation:Assert.assertEquals(expectedHadoopVal,new JobConf(HiveConf.class).get(name)) @AT@ 1867 @LENGTH@ 70
---UPD MethodInvocation@@Assert.assertEquals(expectedHadoopVal,new Configuration().get(name)) @TO@ Assert.assertEquals(expectedHadoopVal,new JobConf(HiveConf.class).get(name)) @AT@ 1867 @LENGTH@ 69
------UPD SimpleName@@MethodName:assertEquals:[expectedHadoopVal, new Configuration().get(name)] @TO@ MethodName:assertEquals:[expectedHadoopVal, new JobConf(HiveConf.class).get(name)] @AT@ 1874 @LENGTH@ 62
---------UPD MethodInvocation@@new Configuration().get(name) @TO@ new JobConf(HiveConf.class).get(name) @AT@ 1906 @LENGTH@ 29
------------UPD ClassInstanceCreation@@Configuration[] @TO@ JobConf[HiveConf.class] @AT@ 1906 @LENGTH@ 19
---------------INS TypeLiteral@@HiveConf.class @TO@ ClassInstanceCreation@@Configuration[] @AT@ 1908 @LENGTH@ 14
---------------UPD SimpleType@@Configuration @TO@ JobConf @AT@ 1910 @LENGTH@ 13


UPD VariableDeclarationStatement@@Endpoint endpoint=new JIRAEndpoint(uri,this); @TO@ JIRAEndpoint endpoint=new JIRAEndpoint(uri,this); @AT@ 1221 @LENGTH@ 48
---UPD SimpleType@@Endpoint @TO@ JIRAEndpoint @AT@ 1221 @LENGTH@ 8


UPD IfStatement@@if (values != null) {  final EntityManager entityManager=getTargetEntityManager(exchange,entityManagerFactory,getEndpoint().isUsePassedInEntityManager());  transactionTemplate.execute(new TransactionCallback<Object>(){    public Object doInTransaction(    TransactionStatus status){      if (getEndpoint().isJoinTransaction()) {        entityManager.joinTransaction();      }      if (values.getClass().isArray()) {        Object[] array=(Object[])values;        for (        Object element : array) {          save(element);        }      } else       if (values instanceof Collection) {        Collection<?> collection=(Collection<?>)values;        for (        Object entity : collection) {          save(entity);        }      } else {        Object managedEntity=save(values);        if (!getEndpoint().isUsePersist()) {          exchange.getIn().setBody(managedEntity);        }      }      if (getEndpoint().isFlushOnSend()) {        entityManager.flush();      }      return null;    }    /**  * Save the given entity end return the managed entity * @return the managed entity */    private Object save(    final Object entity){      LOG.debug("save: {}",entity);      if (getEndpoint().isUsePersist()) {        entityManager.persist(entity);        return entity;      } else {        return entityManager.merge(entity);      }    }  });} @TO@ if (values != null) {  transactionTemplate.execute(new TransactionCallback<Object>(){    public Object doInTransaction(    TransactionStatus status){      if (getEndpoint().isJoinTransaction()) {        entityManager.joinTransaction();      }      if (values.getClass().isArray()) {        Object[] array=(Object[])values;        for (        Object element : array) {          save(element);        }      } else       if (values instanceof Collection) {        Collection<?> collection=(Collection<?>)values;        for (        Object entity : collection) {          save(entity);        }      } else {        Object managedEntity=save(values);        if (!getEndpoint().isUsePersist()) {          exchange.getIn().setBody(managedEntity);        }      }      if (getEndpoint().isFlushOnSend()) {        entityManager.flush();      }      return null;    }    /**  * Save the given entity end return the managed entity * @return the managed entity */    private Object save(    final Object entity){      LOG.debug("save: {}",entity);      if (getEndpoint().isUsePersist()) {        entityManager.persist(entity);        return entity;      } else {        return entityManager.merge(entity);      }    }  });} @AT@ 2256 @LENGTH@ 2002
---UPD Block@@ThenBody:{  final EntityManager entityManager=getTargetEntityManager(exchange,entityManagerFactory,getEndpoint().isUsePassedInEntityManager());  transactionTemplate.execute(new TransactionCallback<Object>(){    public Object doInTransaction(    TransactionStatus status){      if (getEndpoint().isJoinTransaction()) {        entityManager.joinTransaction();      }      if (values.getClass().isArray()) {        Object[] array=(Object[])values;        for (        Object element : array) {          save(element);        }      } else       if (values instanceof Collection) {        Collection<?> collection=(Collection<?>)values;        for (        Object entity : collection) {          save(entity);        }      } else {        Object managedEntity=save(values);        if (!getEndpoint().isUsePersist()) {          exchange.getIn().setBody(managedEntity);        }      }      if (getEndpoint().isFlushOnSend()) {        entityManager.flush();      }      return null;    }    /**  * Save the given entity end return the managed entity * @return the managed entity */    private Object save(    final Object entity){      LOG.debug("save: {}",entity);      if (getEndpoint().isUsePersist()) {        entityManager.persist(entity);        return entity;      } else {        return entityManager.merge(entity);      }    }  });} @TO@ ThenBody:{  transactionTemplate.execute(new TransactionCallback<Object>(){    public Object doInTransaction(    TransactionStatus status){      if (getEndpoint().isJoinTransaction()) {        entityManager.joinTransaction();      }      if (values.getClass().isArray()) {        Object[] array=(Object[])values;        for (        Object element : array) {          save(element);        }      } else       if (values instanceof Collection) {        Collection<?> collection=(Collection<?>)values;        for (        Object entity : collection) {          save(entity);        }      } else {        Object managedEntity=save(values);        if (!getEndpoint().isUsePersist()) {          exchange.getIn().setBody(managedEntity);        }      }      if (getEndpoint().isFlushOnSend()) {        entityManager.flush();      }      return null;    }    /**  * Save the given entity end return the managed entity * @return the managed entity */    private Object save(    final Object entity){      LOG.debug("save: {}",entity);      if (getEndpoint().isUsePersist()) {        entityManager.persist(entity);        return entity;      } else {        return entityManager.merge(entity);      }    }  });} @AT@ 2276 @LENGTH@ 1982


UPD FieldDeclaration@@public, static, final, String, [HEADER_PATTERN=MetricsComponent.HEADER_PERFIX + "*"] @TO@ public, static, final, String, [HEADER_PATTERN=MetricsConstants.HEADER_PERFIX + "*"] @AT@ 1220 @LENGTH@ 81
---UPD VariableDeclarationFragment@@HEADER_PATTERN=MetricsComponent.HEADER_PERFIX + "*" @TO@ HEADER_PATTERN=MetricsConstants.HEADER_PERFIX + "*" @AT@ 1247 @LENGTH@ 53
------UPD InfixExpression@@MetricsComponent.HEADER_PERFIX + "*" @TO@ MetricsConstants.HEADER_PERFIX + "*" @AT@ 1264 @LENGTH@ 36
---------UPD QualifiedName@@MetricsComponent.HEADER_PERFIX @TO@ MetricsConstants.HEADER_PERFIX @AT@ 1264 @LENGTH@ 30
------------UPD SimpleName@@MetricsComponent @TO@ MetricsConstants @AT@ 1264 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:token.setExpiration(new Date((Integer)map.get(EXP) * 1000L)) @TO@ MethodInvocation:token.setExpiration(new Date((Long)map.get(EXP) * 1000L)) @AT@ 3001 @LENGTH@ 62
---UPD MethodInvocation@@token.setExpiration(new Date((Integer)map.get(EXP) * 1000L)) @TO@ token.setExpiration(new Date((Long)map.get(EXP) * 1000L)) @AT@ 3001 @LENGTH@ 61
------UPD SimpleName@@MethodName:setExpiration:[new Date((Integer)map.get(EXP) * 1000L)] @TO@ MethodName:setExpiration:[new Date((Long)map.get(EXP) * 1000L)] @AT@ 3007 @LENGTH@ 55
---------UPD ClassInstanceCreation@@Date[(Integer)map.get(EXP) * 1000L] @TO@ Date[(Long)map.get(EXP) * 1000L] @AT@ 3021 @LENGTH@ 40
------------UPD InfixExpression@@(Integer)map.get(EXP) * 1000L @TO@ (Long)map.get(EXP) * 1000L @AT@ 3030 @LENGTH@ 30
---------------UPD CastExpression@@(Integer)map.get(EXP) @TO@ (Long)map.get(EXP) @AT@ 3030 @LENGTH@ 22
------------------UPD SimpleType@@Integer @TO@ Long @AT@ 3031 @LENGTH@ 7


UPD ReturnStatement@@ArrayCreation:new ModelValidationStepHandler[]{new NotEmptyResourceValidationStepHandler(),new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @TO@ ArrayCreation:new ModelValidationStepHandler[]{NotEmptyResourceValidationStepHandler.INSTANCE,new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @AT@ 4277 @LENGTH@ 190
---UPD ArrayCreation@@new ModelValidationStepHandler[]{new NotEmptyResourceValidationStepHandler(),new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @TO@ new ModelValidationStepHandler[]{NotEmptyResourceValidationStepHandler.INSTANCE,new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @AT@ 4284 @LENGTH@ 182
------UPD ArrayInitializer@@{new NotEmptyResourceValidationStepHandler(),new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @TO@ {NotEmptyResourceValidationStepHandler.INSTANCE,new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @AT@ 4317 @LENGTH@ 149
---------INS QualifiedName@@NotEmptyResourceValidationStepHandler.INSTANCE @TO@ ArrayInitializer@@{new NotEmptyResourceValidationStepHandler(),new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @AT@ 4331 @LENGTH@ 46
------------INS SimpleName@@NotEmptyResourceValidationStepHandler @TO@ QualifiedName@@NotEmptyResourceValidationStepHandler.INSTANCE @AT@ 4331 @LENGTH@ 37
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@NotEmptyResourceValidationStepHandler.INSTANCE @AT@ 4369 @LENGTH@ 8
---------DEL ClassInstanceCreation@@NotEmptyResourceValidationStepHandler[] @AT@ 4331 @LENGTH@ 43
------------DEL New@@new @AT@ 4331 @LENGTH@ 3
------------DEL SimpleType@@NotEmptyResourceValidationStepHandler @AT@ 4335 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:scannerTasks.add(new UndeployTask(toUndeploy.getKey(),deploymentDir,scanContext.scanStartTime,true)) @TO@ MethodInvocation:scannerTasks.add(new UndeployTask(toUndeploy,deploymentDir,scanContext.scanStartTime,true)) @AT@ 18728 @LENGTH@ 104


DEL MethodDeclaration@@public, static, DataAccessException, MethodName:toDataAccessException, Exception ex,  @AT@ 8554 @LENGTH@ 116
---DEL Modifier@@public @AT@ 8554 @LENGTH@ 6
---DEL Modifier@@static @AT@ 8561 @LENGTH@ 6
---DEL SimpleType@@DataAccessException @AT@ 8568 @LENGTH@ 19
---DEL SimpleName@@MethodName:toDataAccessException @AT@ 8588 @LENGTH@ 21
---DEL SingleVariableDeclaration@@Exception ex @AT@ 8610 @LENGTH@ 12
------DEL SimpleType@@Exception @AT@ 8610 @LENGTH@ 9
------DEL SimpleName@@ex @AT@ 8620 @LENGTH@ 2
---DEL ReturnStatement@@MethodInvocation:EXCEPTION_CONVERTER.convert(ex) @AT@ 8628 @LENGTH@ 39
------DEL MethodInvocation@@EXCEPTION_CONVERTER.convert(ex) @AT@ 8635 @LENGTH@ 31
---------DEL SimpleName@@Name:EXCEPTION_CONVERTER @AT@ 8635 @LENGTH@ 19
---------DEL SimpleName@@MethodName:convert:[ex] @AT@ 8655 @LENGTH@ 11
------------DEL SimpleName@@ex @AT@ 8663 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:stripsTemplatePlaceholders,  @TO@ public, void, MethodName:stripsTemplateVariablesFromPath,  @AT@ 2410 @LENGTH@ 175
---UPD SimpleName@@MethodName:stripsTemplatePlaceholders @TO@ MethodName:stripsTemplateVariablesFromPath @AT@ 2422 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:ss.getAuthorizerV2().checkPrivileges(type,Arrays.asList(commandObj),null) @TO@ MethodInvocation:ss.getAuthorizerV2().checkPrivileges(type,Arrays.asList(commandObj),null,null) @AT@ 2652 @LENGTH@ 76
---UPD MethodInvocation@@ss.getAuthorizerV2().checkPrivileges(type,Arrays.asList(commandObj),null) @TO@ ss.getAuthorizerV2().checkPrivileges(type,Arrays.asList(commandObj),null,null) @AT@ 2652 @LENGTH@ 75
------UPD SimpleName@@MethodName:checkPrivileges:[type, Arrays.asList(commandObj), null] @TO@ MethodName:checkPrivileges:[type, Arrays.asList(commandObj), null, null] @AT@ 2673 @LENGTH@ 54
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:checkPrivileges:[type, Arrays.asList(commandObj), null] @AT@ 2728 @LENGTH@ 4


INS MethodDeclaration@@public, static, void, MethodName:printLsR, String path, org.apache.hadoop.conf.Configuration configuration,  @TO@ TypeDeclaration@@[public, abstract]TestUtils,  @AT@ 5591 @LENGTH@ 228
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:printLsR, String path, org.apache.hadoop.conf.Configuration configuration,  @AT@ 5591 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:printLsR, String path, org.apache.hadoop.conf.Configuration configuration,  @AT@ 5598 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:printLsR, String path, org.apache.hadoop.conf.Configuration configuration,  @AT@ 5605 @LENGTH@ 4
---INS SimpleName@@MethodName:printLsR @TO@ MethodDeclaration@@public, static, void, MethodName:printLsR, String path, org.apache.hadoop.conf.Configuration configuration,  @AT@ 5610 @LENGTH@ 8
---INS SingleVariableDeclaration@@String path @TO@ MethodDeclaration@@public, static, void, MethodName:printLsR, String path, org.apache.hadoop.conf.Configuration configuration,  @AT@ 5619 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String path @AT@ 5619 @LENGTH@ 6
------INS SimpleName@@path @TO@ SingleVariableDeclaration@@String path @AT@ 5626 @LENGTH@ 4
---INS SingleVariableDeclaration@@org.apache.hadoop.conf.Configuration configuration @TO@ MethodDeclaration@@public, static, void, MethodName:printLsR, String path, org.apache.hadoop.conf.Configuration configuration,  @AT@ 5632 @LENGTH@ 50
------INS SimpleType@@org.apache.hadoop.conf.Configuration @TO@ SingleVariableDeclaration@@org.apache.hadoop.conf.Configuration configuration @AT@ 5632 @LENGTH@ 36
------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@org.apache.hadoop.conf.Configuration configuration @AT@ 5669 @LENGTH@ 13
---INS VariableDeclarationStatement@@FsShell shell=new FsShell(configuration); @TO@ MethodDeclaration@@public, static, void, MethodName:printLsR, String path, org.apache.hadoop.conf.Configuration configuration,  @AT@ 5688 @LENGTH@ 43
------INS SimpleType@@FsShell @TO@ VariableDeclarationStatement@@FsShell shell=new FsShell(configuration); @AT@ 5688 @LENGTH@ 7
------INS VariableDeclarationFragment@@shell=new FsShell(configuration) @TO@ VariableDeclarationStatement@@FsShell shell=new FsShell(configuration); @AT@ 5696 @LENGTH@ 34
---------INS SimpleName@@shell @TO@ VariableDeclarationFragment@@shell=new FsShell(configuration) @AT@ 5696 @LENGTH@ 5
---------INS ClassInstanceCreation@@FsShell[configuration] @TO@ VariableDeclarationFragment@@shell=new FsShell(configuration) @AT@ 5704 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@FsShell[configuration] @AT@ 5704 @LENGTH@ 3
------------INS SimpleType@@FsShell @TO@ ClassInstanceCreation@@FsShell[configuration] @AT@ 5708 @LENGTH@ 7
------------INS SimpleName@@configuration @TO@ ClassInstanceCreation@@FsShell[configuration] @AT@ 5716 @LENGTH@ 13
---INS EnhancedForStatement@@for (FileStatus s : shell.ls(true,path)) {  System.out.println(">>> " + s);} @TO@ MethodDeclaration@@public, static, void, MethodName:printLsR, String path, org.apache.hadoop.conf.Configuration configuration,  @AT@ 5734 @LENGTH@ 82
------INS SingleVariableDeclaration@@FileStatus s @TO@ EnhancedForStatement@@for (FileStatus s : shell.ls(true,path)) {  System.out.println(">>> " + s);} @AT@ 5739 @LENGTH@ 12
---------INS SimpleType@@FileStatus @TO@ SingleVariableDeclaration@@FileStatus s @AT@ 5739 @LENGTH@ 10
---------INS SimpleName@@s @TO@ SingleVariableDeclaration@@FileStatus s @AT@ 5750 @LENGTH@ 1
------INS MethodInvocation@@shell.ls(true,path) @TO@ EnhancedForStatement@@for (FileStatus s : shell.ls(true,path)) {  System.out.println(">>> " + s);} @AT@ 5754 @LENGTH@ 20
---------INS SimpleName@@Name:shell @TO@ MethodInvocation@@shell.ls(true,path) @AT@ 5754 @LENGTH@ 5
---------INS SimpleName@@MethodName:ls:[true, path] @TO@ MethodInvocation@@shell.ls(true,path) @AT@ 5760 @LENGTH@ 14
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:ls:[true, path] @AT@ 5763 @LENGTH@ 4
------------INS SimpleName@@path @TO@ SimpleName@@MethodName:ls:[true, path] @AT@ 5769 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:System.out.println(">>> " + s) @TO@ EnhancedForStatement@@for (FileStatus s : shell.ls(true,path)) {  System.out.println(">>> " + s);} @AT@ 5781 @LENGTH@ 31
---------INS MethodInvocation@@System.out.println(">>> " + s) @TO@ ExpressionStatement@@MethodInvocation:System.out.println(">>> " + s) @AT@ 5781 @LENGTH@ 30
------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(">>> " + s) @AT@ 5781 @LENGTH@ 10
------------INS SimpleName@@MethodName:println:[">>> " + s] @TO@ MethodInvocation@@System.out.println(">>> " + s) @AT@ 5792 @LENGTH@ 19
---------------INS InfixExpression@@">>> " + s @TO@ SimpleName@@MethodName:println:[">>> " + s] @AT@ 5800 @LENGTH@ 10
------------------INS StringLiteral@@">>> " @TO@ InfixExpression@@">>> " + s @AT@ 5800 @LENGTH@ 6
------------------INS Operator@@+ @TO@ InfixExpression@@">>> " + s @AT@ 5806 @LENGTH@ 1
------------------INS SimpleName@@s @TO@ InfixExpression@@">>> " + s @AT@ 5809 @LENGTH@ 1


INS IfStatement@@if (rowCount == -1) noColsMissingStats.getAndIncrement(); @TO@ MethodDeclaration@@public, double, MethodName:getRowCount,  @AT@ 5559 @LENGTH@ 63
---INS InfixExpression@@rowCount == -1 @TO@ IfStatement@@if (rowCount == -1) noColsMissingStats.getAndIncrement(); @AT@ 5563 @LENGTH@ 14
------INS SimpleName@@rowCount @TO@ InfixExpression@@rowCount == -1 @AT@ 5563 @LENGTH@ 8
------INS Operator@@== @TO@ InfixExpression@@rowCount == -1 @AT@ 5571 @LENGTH@ 2
------INS PrefixExpression@@-1 @TO@ InfixExpression@@rowCount == -1 @AT@ 5575 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 5575 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 5576 @LENGTH@ 1
---INS Block@@ThenBody:noColsMissingStats.getAndIncrement(); @TO@ IfStatement@@if (rowCount == -1) noColsMissingStats.getAndIncrement(); @AT@ 5585 @LENGTH@ 37
------INS ExpressionStatement@@MethodInvocation:noColsMissingStats.getAndIncrement() @TO@ Block@@ThenBody:noColsMissingStats.getAndIncrement(); @AT@ 5585 @LENGTH@ 37
---------INS MethodInvocation@@noColsMissingStats.getAndIncrement() @TO@ ExpressionStatement@@MethodInvocation:noColsMissingStats.getAndIncrement() @AT@ 5585 @LENGTH@ 36
------------INS SimpleName@@Name:noColsMissingStats @TO@ MethodInvocation@@noColsMissingStats.getAndIncrement() @AT@ 5585 @LENGTH@ 18
------------INS SimpleName@@MethodName:getAndIncrement:[] @TO@ MethodInvocation@@noColsMissingStats.getAndIncrement() @AT@ 5604 @LENGTH@ 17


UPD VariableDeclarationStatement@@DefaultHttpClient client2=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client2=HttpClients.createDefault(); @AT@ 2759 @LENGTH@ 98
---UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 2759 @LENGTH@ 17
---UPD VariableDeclarationFragment@@client2=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client2=HttpClients.createDefault() @AT@ 2777 @LENGTH@ 79
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 2787 @LENGTH@ 69
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 2767 @LENGTH@ 11
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 2787 @LENGTH@ 43
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 2831 @LENGTH@ 25


UPD IfStatement@@if (i < challenge.length) {  value.append(challenge[i]);} else {  throw new SaslException("Unmatched quote found for value: " + value.toString());} @TO@ if (i < challenge.length) {  value.append(challenge[i]);  i++;} else {  throw new SaslException("Unmatched quote found for value: " + value.toString());} @AT@ 13505 @LENGTH@ 255
---UPD Block@@ThenBody:{  value.append(challenge[i]);} @TO@ ThenBody:{  value.append(challenge[i]);  i++;} @AT@ 13531 @LENGTH@ 75
------INS ExpressionStatement@@PostfixExpression:i++ @TO@ Block@@ThenBody:{  value.append(challenge[i]);} @AT@ 13609 @LENGTH@ 4
---------INS PostfixExpression@@i++ @TO@ ExpressionStatement@@PostfixExpression:i++ @AT@ 13609 @LENGTH@ 3
------------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 13609 @LENGTH@ 1
------------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 13611 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:digestResponse.append("nonce-count=") @TO@ MethodInvocation:digestResponse.append("nc=") @AT@ 6862 @LENGTH@ 38
---UPD MethodInvocation@@digestResponse.append("nonce-count=") @TO@ digestResponse.append("nc=") @AT@ 6862 @LENGTH@ 37
------UPD SimpleName@@MethodName:append:["nonce-count="] @TO@ MethodName:append:["nc="] @AT@ 6877 @LENGTH@ 22
---------UPD StringLiteral@@"nonce-count=" @TO@ "nc=" @AT@ 6884 @LENGTH@ 14


UPD EnhancedForStatement@@for (String methodName : methods) {  BeanHolder holder=new ConstantBeanHolder(beanToCall,exchange.getContext());  boolean nullSafe=OgnlHelper.isNullSafeOperator(methodName);  ognlPath+=methodName;  methodName=OgnlHelper.removeLeadingOperators(methodName);  String key=null;  KeyValueHolder<String,String> index=OgnlHelper.isOgnlIndex(methodName);  if (index != null) {    methodName=index.getKey();    key=index.getValue();  }  if (methodName != null) {    InvokeProcessor invoke=new InvokeProcessor(holder,methodName);    invoke.process(resultExchange);    if (resultExchange.getException() != null) {      throw new RuntimeBeanExpressionException(exchange,beanName,methodName,resultExchange.getException());    }    result=invoke.getResult();  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }  if (result == null && nullSafe) {    return;  }  beanToCall=result;} @TO@ for (String methodName : methods) {  BeanHolder holder=new ConstantBeanHolder(beanToCall,exchange.getContext());  boolean nullSafe=OgnlHelper.isNullSafeOperator(methodName);  ognlPath+=methodName;  methodName=OgnlHelper.removeLeadingOperators(methodName);  String key=null;  KeyValueHolder<String,String> index=OgnlHelper.isOgnlIndex(methodName);  if (index != null) {    methodName=index.getKey();    key=index.getValue();  }  if (methodName != null) {    InvokeProcessor invoke=new InvokeProcessor(holder,methodName);    invoke.process(resultExchange);    if (resultExchange.getException() != null) {      throw new RuntimeBeanExpressionException(exchange,beanName,methodName,resultExchange.getException());    }    result=invoke.getResult();  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }  if (result == null && nullSafe) {    return;  }  beanToCall=result;  resultExchange.getIn().setBody(result);} @AT@ 9963 @LENGTH@ 1993
---INS ExpressionStatement@@MethodInvocation:resultExchange.getIn().setBody(result) @TO@ EnhancedForStatement@@for (String methodName : methods) {  BeanHolder holder=new ConstantBeanHolder(beanToCall,exchange.getContext());  boolean nullSafe=OgnlHelper.isNullSafeOperator(methodName);  ognlPath+=methodName;  methodName=OgnlHelper.removeLeadingOperators(methodName);  String key=null;  KeyValueHolder<String,String> index=OgnlHelper.isOgnlIndex(methodName);  if (index != null) {    methodName=index.getKey();    key=index.getValue();  }  if (methodName != null) {    InvokeProcessor invoke=new InvokeProcessor(holder,methodName);    invoke.process(resultExchange);    if (resultExchange.getException() != null) {      throw new RuntimeBeanExpressionException(exchange,beanName,methodName,resultExchange.getException());    }    result=invoke.getResult();  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }  if (result == null && nullSafe) {    return;  }  beanToCall=result;} @AT@ 12043 @LENGTH@ 39
------INS MethodInvocation@@resultExchange.getIn().setBody(result) @TO@ ExpressionStatement@@MethodInvocation:resultExchange.getIn().setBody(result) @AT@ 12043 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@resultExchange.getIn().setBody(result) @AT@ 12043 @LENGTH@ 22
---------INS SimpleName@@Name:resultExchange @TO@ MethodInvocation@@resultExchange.getIn().setBody(result) @AT@ 12043 @LENGTH@ 14
---------INS SimpleName@@MethodName:setBody:[result] @TO@ MethodInvocation@@resultExchange.getIn().setBody(result) @AT@ 12066 @LENGTH@ 15
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:setBody:[result] @AT@ 12074 @LENGTH@ 6


UPD VariableDeclarationStatement@@String sql="SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY E.id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC"; @TO@ String sql="SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC"; @AT@ 4695 @LENGTH@ 209
---UPD VariableDeclarationFragment@@sql="SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY E.id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC" @TO@ sql="SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC" @AT@ 4702 @LENGTH@ 201
------UPD StringLiteral@@"SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY E.id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC" @TO@ "SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC" @AT@ 4706 @LENGTH@ 197


UPD TypeDeclaration@@[private]MyIdempotentRepo, [ExchangeIdempotentRepository<String>] @TO@ [private, final]MyIdempotentRepo, [ExchangeIdempotentRepository<String>] @AT@ 3378 @LENGTH@ 1961
---INS Modifier@@final @TO@ TypeDeclaration@@[private]MyIdempotentRepo, [ExchangeIdempotentRepository<String>] @AT@ 3386 @LENGTH@ 5


UPD TryStatement@@try {  BuildInfo buildInfo=formatBuildTag(mBuildTag);  String buildTagForLogs=formatBuildTagForLogs(mBuildTag);  List<String> comments=Lists.newArrayList();  comments.add("");  comments.add("");  if (!failedTests.isEmpty()) {    comments.add("{color:red}Overall{color}: -1 at least one tests failed");  } else   if (numTestsExecuted == 0) {    comments.add("{color:red}Overall{color}: -1 no tests executed");  } else   if (error) {    comments.add("{color:red}Overall{color}: -1 build exited with an error");  } else {    comments.add("{color:green}Overall{color}: +1 all checks pass");  }  comments.add("");  if (!mPatch.isEmpty()) {    comments.add("Here are the results of testing the latest attachment:");    comments.add(mPatch);  }  comments.add("");  if (numTestsExecuted > 0) {    if (failedTests.isEmpty()) {      comments.add(formatSuccess("+1 " + numTestsExecuted + " tests passed"));    } else {      comments.add(formatError("-1 due to " + failedTests.size() + " failed/errored test(s), "+ numTestsExecuted+ " tests executed"));      comments.add("*Failed tests:*");      comments.add("{noformat}");      comments.addAll(failedTests);      comments.add("{noformat}");    }    comments.add("");  }  comments.add("Test results: " + mJenkinsURL + "/"+ buildInfo.getFormattedBuildTag()+ "/testReport");  comments.add("Console output: " + mJenkinsURL + "/"+ buildInfo.getFormattedBuildTag()+ "/console");  comments.add("Test logs: " + mLogsURL + buildTagForLogs);  comments.add("");  if (!messages.isEmpty()) {    comments.add("Messages:");    comments.add("{noformat}");    comments.addAll(trimMessages(messages));    comments.add("{noformat}");    comments.add("");  }  comments.add("This message is automatically generated.");  String attachmentId=parseAttachementId(mPatch);  if (!attachmentId.isEmpty()) {    comments.add("");    comments.add("ATTACHMENT ID: " + attachmentId);  }  if (!buildInfo.getBuildName().isEmpty()) {    comments.add(" - " + buildInfo.getBuildName());  }  mLogger.info("Comment: " + Joiner.on("\n").join(comments));  String body=Joiner.on("\n").join(comments);  String url=String.format("%s/rest/api/2/issue/%s/comment",mUrl,mName);  URL apiURL=new URL(mUrl);  httpClient.getCredentialsProvider().setCredentials(new AuthScope(apiURL.getHost(),apiURL.getPort(),AuthScope.ANY_REALM),new UsernamePasswordCredentials(mUser,mPassword));  BasicHttpContext localcontext=new BasicHttpContext();  localcontext.setAttribute("preemptive-auth",new BasicScheme());  httpClient.addRequestInterceptor(new PreemptiveAuth(),0);  HttpPost request=new HttpPost(url);  ObjectMapper mapper=new ObjectMapper();  StringEntity params=new StringEntity(mapper.writeValueAsString(new Body(body)));  request.addHeader("Content-Type","application/json");  request.setEntity(params);  HttpResponse httpResponse=httpClient.execute(request,localcontext);  StatusLine statusLine=httpResponse.getStatusLine();  if (statusLine.getStatusCode() != 201) {    throw new RuntimeException(statusLine.getStatusCode() + " " + statusLine.getReasonPhrase());  }  mLogger.info("JIRA Response Metadata: " + httpResponse);} catch (Exception e) {  mLogger.error("Encountered error attempting to post comment to " + mName,e);} finally {  httpClient.getConnectionManager().shutdown();} @TO@ try {  BuildInfo buildInfo=formatBuildTag(mBuildTag);  String buildTagForLogs=formatBuildTagForLogs(mBuildTag);  List<String> comments=Lists.newArrayList();  comments.add("");  comments.add("");  if (!failedTests.isEmpty()) {    comments.add("{color:red}Overall{color}: -1 at least one tests failed");  } else   if (numTestsExecuted == 0) {    comments.add("{color:red}Overall{color}: -1 no tests executed");  } else   if (error) {    comments.add("{color:red}Overall{color}: -1 build exited with an error");  } else {    comments.add("{color:green}Overall{color}: +1 all checks pass");  }  comments.add("");  if (!mPatch.isEmpty()) {    comments.add("Here are the results of testing the latest attachment:");    comments.add(mPatch);  }  comments.add("");  if (numTestsExecuted > 0) {    if (failedTests.isEmpty()) {      comments.add(formatSuccess("+1 " + numTestsExecuted + " tests passed"));    } else {      comments.add(formatError("-1 due to " + failedTests.size() + " failed/errored test(s), "+ numTestsExecuted+ " tests executed"));      comments.add("*Failed tests:*");      comments.add("{noformat}");      comments.addAll(failedTests);      comments.add("{noformat}");    }    comments.add("");  }  comments.add("Test results: " + mJenkinsURL + "/"+ buildInfo.getFormattedBuildTag()+ "/testReport");  comments.add("Console output: " + mJenkinsURL + "/"+ buildInfo.getFormattedBuildTag()+ "/console");  comments.add("Test logs: " + mLogsURL + buildTagForLogs);  comments.add("");  if (!messages.isEmpty()) {    comments.add("Messages:");    comments.add("{noformat}");    comments.addAll(trimMessages(messages));    comments.add("{noformat}");    comments.add("");  }  comments.add("This message is automatically generated.");  String attachmentId=parseAttachementId(mPatch);  comments.add("");  comments.add("ATTACHMENT ID: " + attachmentId + " - "+ buildInfo.getBuildName());  mLogger.info("Comment: " + Joiner.on("\n").join(comments));  String body=Joiner.on("\n").join(comments);  String url=String.format("%s/rest/api/2/issue/%s/comment",mUrl,mName);  URL apiURL=new URL(mUrl);  httpClient.getCredentialsProvider().setCredentials(new AuthScope(apiURL.getHost(),apiURL.getPort(),AuthScope.ANY_REALM),new UsernamePasswordCredentials(mUser,mPassword));  BasicHttpContext localcontext=new BasicHttpContext();  localcontext.setAttribute("preemptive-auth",new BasicScheme());  httpClient.addRequestInterceptor(new PreemptiveAuth(),0);  HttpPost request=new HttpPost(url);  ObjectMapper mapper=new ObjectMapper();  StringEntity params=new StringEntity(mapper.writeValueAsString(new Body(body)));  request.addHeader("Content-Type","application/json");  request.setEntity(params);  HttpResponse httpResponse=httpClient.execute(request,localcontext);  StatusLine statusLine=httpResponse.getStatusLine();  if (statusLine.getStatusCode() != 201) {    throw new RuntimeException(statusLine.getStatusCode() + " " + statusLine.getReasonPhrase());  }  mLogger.info("JIRA Response Metadata: " + httpResponse);} catch (Exception e) {  mLogger.error("Encountered error attempting to post comment to " + mName,e);} finally {  httpClient.getConnectionManager().shutdown();} @AT@ 3459 @LENGTH@ 3784
---DEL IfStatement@@if (!attachmentId.isEmpty()) {  comments.add("");  comments.add("ATTACHMENT ID: " + attachmentId);} @AT@ 5515 @LENGTH@ 119
------DEL PrefixExpression@@!attachmentId.isEmpty() @AT@ 5518 @LENGTH@ 23
---------DEL Operator@@! @AT@ 5518 @LENGTH@ 1
---------DEL MethodInvocation@@attachmentId.isEmpty() @AT@ 5519 @LENGTH@ 22
------------DEL SimpleName@@Name:attachmentId @AT@ 5519 @LENGTH@ 12
------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 5532 @LENGTH@ 9
------DEL Block@@ThenBody:{  comments.add("");  comments.add("ATTACHMENT ID: " + attachmentId);} @AT@ 5543 @LENGTH@ 91
---------DEL ExpressionStatement@@MethodInvocation:comments.add("ATTACHMENT ID: " + attachmentId) @AT@ 5579 @LENGTH@ 47
------------DEL MethodInvocation@@comments.add("ATTACHMENT ID: " + attachmentId) @AT@ 5579 @LENGTH@ 46
---------------DEL SimpleName@@Name:comments @AT@ 5579 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:add:["ATTACHMENT ID: " + attachmentId] @AT@ 5588 @LENGTH@ 37
------------------DEL InfixExpression@@"ATTACHMENT ID: " + attachmentId @AT@ 5592 @LENGTH@ 32
---------------------DEL StringLiteral@@"ATTACHMENT ID: " @AT@ 5592 @LENGTH@ 17
---------------------DEL Operator@@+ @AT@ 5609 @LENGTH@ 1
---------------------DEL SimpleName@@attachmentId @AT@ 5612 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:comments.add("ATTACHMENT ID: " + attachmentId + " - "+ buildInfo.getBuildName()) @TO@ TryStatement@@try {  BuildInfo buildInfo=formatBuildTag(mBuildTag);  String buildTagForLogs=formatBuildTagForLogs(mBuildTag);  List<String> comments=Lists.newArrayList();  comments.add("");  comments.add("");  if (!failedTests.isEmpty()) {    comments.add("{color:red}Overall{color}: -1 at least one tests failed");  } else   if (numTestsExecuted == 0) {    comments.add("{color:red}Overall{color}: -1 no tests executed");  } else   if (error) {    comments.add("{color:red}Overall{color}: -1 build exited with an error");  } else {    comments.add("{color:green}Overall{color}: +1 all checks pass");  }  comments.add("");  if (!mPatch.isEmpty()) {    comments.add("Here are the results of testing the latest attachment:");    comments.add(mPatch);  }  comments.add("");  if (numTestsExecuted > 0) {    if (failedTests.isEmpty()) {      comments.add(formatSuccess("+1 " + numTestsExecuted + " tests passed"));    } else {      comments.add(formatError("-1 due to " + failedTests.size() + " failed/errored test(s), "+ numTestsExecuted+ " tests executed"));      comments.add("*Failed tests:*");      comments.add("{noformat}");      comments.addAll(failedTests);      comments.add("{noformat}");    }    comments.add("");  }  comments.add("Test results: " + mJenkinsURL + "/"+ buildInfo.getFormattedBuildTag()+ "/testReport");  comments.add("Console output: " + mJenkinsURL + "/"+ buildInfo.getFormattedBuildTag()+ "/console");  comments.add("Test logs: " + mLogsURL + buildTagForLogs);  comments.add("");  if (!messages.isEmpty()) {    comments.add("Messages:");    comments.add("{noformat}");    comments.addAll(trimMessages(messages));    comments.add("{noformat}");    comments.add("");  }  comments.add("This message is automatically generated.");  String attachmentId=parseAttachementId(mPatch);  if (!attachmentId.isEmpty()) {    comments.add("");    comments.add("ATTACHMENT ID: " + attachmentId);  }  if (!buildInfo.getBuildName().isEmpty()) {    comments.add(" - " + buildInfo.getBuildName());  }  mLogger.info("Comment: " + Joiner.on("\n").join(comments));  String body=Joiner.on("\n").join(comments);  String url=String.format("%s/rest/api/2/issue/%s/comment",mUrl,mName);  URL apiURL=new URL(mUrl);  httpClient.getCredentialsProvider().setCredentials(new AuthScope(apiURL.getHost(),apiURL.getPort(),AuthScope.ANY_REALM),new UsernamePasswordCredentials(mUser,mPassword));  BasicHttpContext localcontext=new BasicHttpContext();  localcontext.setAttribute("preemptive-auth",new BasicScheme());  httpClient.addRequestInterceptor(new PreemptiveAuth(),0);  HttpPost request=new HttpPost(url);  ObjectMapper mapper=new ObjectMapper();  StringEntity params=new StringEntity(mapper.writeValueAsString(new Body(body)));  request.addHeader("Content-Type","application/json");  request.setEntity(params);  HttpResponse httpResponse=httpClient.execute(request,localcontext);  StatusLine statusLine=httpResponse.getStatusLine();  if (statusLine.getStatusCode() != 201) {    throw new RuntimeException(statusLine.getStatusCode() + " " + statusLine.getReasonPhrase());  }  mLogger.info("JIRA Response Metadata: " + httpResponse);} catch (Exception e) {  mLogger.error("Encountered error attempting to post comment to " + mName,e);} finally {  httpClient.getConnectionManager().shutdown();} @AT@ 5539 @LENGTH@ 92
------MOV MethodInvocation@@comments.add(" - " + buildInfo.getBuildName()) @TO@ ExpressionStatement@@MethodInvocation:comments.add("ATTACHMENT ID: " + attachmentId + " - "+ buildInfo.getBuildName()) @AT@ 5691 @LENGTH@ 46
---MOV ExpressionStatement@@MethodInvocation:comments.add("") @TO@ TryStatement@@try {  BuildInfo buildInfo=formatBuildTag(mBuildTag);  String buildTagForLogs=formatBuildTagForLogs(mBuildTag);  List<String> comments=Lists.newArrayList();  comments.add("");  comments.add("");  if (!failedTests.isEmpty()) {    comments.add("{color:red}Overall{color}: -1 at least one tests failed");  } else   if (numTestsExecuted == 0) {    comments.add("{color:red}Overall{color}: -1 no tests executed");  } else   if (error) {    comments.add("{color:red}Overall{color}: -1 build exited with an error");  } else {    comments.add("{color:green}Overall{color}: +1 all checks pass");  }  comments.add("");  if (!mPatch.isEmpty()) {    comments.add("Here are the results of testing the latest attachment:");    comments.add(mPatch);  }  comments.add("");  if (numTestsExecuted > 0) {    if (failedTests.isEmpty()) {      comments.add(formatSuccess("+1 " + numTestsExecuted + " tests passed"));    } else {      comments.add(formatError("-1 due to " + failedTests.size() + " failed/errored test(s), "+ numTestsExecuted+ " tests executed"));      comments.add("*Failed tests:*");      comments.add("{noformat}");      comments.addAll(failedTests);      comments.add("{noformat}");    }    comments.add("");  }  comments.add("Test results: " + mJenkinsURL + "/"+ buildInfo.getFormattedBuildTag()+ "/testReport");  comments.add("Console output: " + mJenkinsURL + "/"+ buildInfo.getFormattedBuildTag()+ "/console");  comments.add("Test logs: " + mLogsURL + buildTagForLogs);  comments.add("");  if (!messages.isEmpty()) {    comments.add("Messages:");    comments.add("{noformat}");    comments.addAll(trimMessages(messages));    comments.add("{noformat}");    comments.add("");  }  comments.add("This message is automatically generated.");  String attachmentId=parseAttachementId(mPatch);  if (!attachmentId.isEmpty()) {    comments.add("");    comments.add("ATTACHMENT ID: " + attachmentId);  }  if (!buildInfo.getBuildName().isEmpty()) {    comments.add(" - " + buildInfo.getBuildName());  }  mLogger.info("Comment: " + Joiner.on("\n").join(comments));  String body=Joiner.on("\n").join(comments);  String url=String.format("%s/rest/api/2/issue/%s/comment",mUrl,mName);  URL apiURL=new URL(mUrl);  httpClient.getCredentialsProvider().setCredentials(new AuthScope(apiURL.getHost(),apiURL.getPort(),AuthScope.ANY_REALM),new UsernamePasswordCredentials(mUser,mPassword));  BasicHttpContext localcontext=new BasicHttpContext();  localcontext.setAttribute("preemptive-auth",new BasicScheme());  httpClient.addRequestInterceptor(new PreemptiveAuth(),0);  HttpPost request=new HttpPost(url);  ObjectMapper mapper=new ObjectMapper();  StringEntity params=new StringEntity(mapper.writeValueAsString(new Body(body)));  request.addHeader("Content-Type","application/json");  request.setEntity(params);  HttpResponse httpResponse=httpClient.execute(request,localcontext);  StatusLine statusLine=httpResponse.getStatusLine();  if (statusLine.getStatusCode() != 201) {    throw new RuntimeException(statusLine.getStatusCode() + " " + statusLine.getReasonPhrase());  }  mLogger.info("JIRA Response Metadata: " + httpResponse);} catch (Exception e) {  mLogger.error("Encountered error attempting to post comment to " + mName,e);} finally {  httpClient.getConnectionManager().shutdown();} @AT@ 5553 @LENGTH@ 17
---DEL IfStatement@@if (!buildInfo.getBuildName().isEmpty()) {  comments.add(" - " + buildInfo.getBuildName());} @AT@ 5641 @LENGTH@ 105
------DEL PrefixExpression@@!buildInfo.getBuildName().isEmpty() @AT@ 5644 @LENGTH@ 35
---------DEL Operator@@! @AT@ 5644 @LENGTH@ 1
---------DEL MethodInvocation@@buildInfo.getBuildName().isEmpty() @AT@ 5645 @LENGTH@ 34
------------DEL MethodInvocation@@MethodName:getBuildName:[] @AT@ 5645 @LENGTH@ 24
------------DEL SimpleName@@Name:buildInfo @AT@ 5645 @LENGTH@ 9
------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 5670 @LENGTH@ 9
------DEL Block@@ThenBody:{  comments.add(" - " + buildInfo.getBuildName());} @AT@ 5681 @LENGTH@ 65
---------DEL ExpressionStatement@@MethodInvocation:comments.add(" - " + buildInfo.getBuildName()) @AT@ 5691 @LENGTH@ 47


INS FieldDeclaration@@private, String, [name] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="test"), public]TestEndpoint, MockEndpoint @AT@ 1926 @LENGTH@ 20
---INS Modifier@@private @TO@ FieldDeclaration@@private, String, [name] @AT@ 1926 @LENGTH@ 7
---INS SimpleType@@String @TO@ FieldDeclaration@@private, String, [name] @AT@ 1934 @LENGTH@ 6
---INS VariableDeclarationFragment@@name @TO@ FieldDeclaration@@private, String, [name] @AT@ 1941 @LENGTH@ 4
------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name @AT@ 1941 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:fallsBackToIdInspectionForAPrimitiveVersionProperty,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration({"classpath:infrastructure.xml"}), public]JpaMetamodelEntityInformationIntegrationTests,  @AT@ 6591 @LENGTH@ 476
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToIdInspectionForAPrimitiveVersionProperty,  @AT@ 6591 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToIdInspectionForAPrimitiveVersionProperty,  @AT@ 6598 @LENGTH@ 4
---INS SimpleName@@MethodName:fallsBackToIdInspectionForAPrimitiveVersionProperty @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToIdInspectionForAPrimitiveVersionProperty,  @AT@ 6603 @LENGTH@ 51
---INS VariableDeclarationStatement@@EntityInformation<PrimitiveVersionProperty,Serializable> information=new JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>(PrimitiveVersionProperty.class,em.getMetamodel()); @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToIdInspectionForAPrimitiveVersionProperty,  @AT@ 6662 @LENGTH@ 202
------INS ParameterizedType@@EntityInformation<PrimitiveVersionProperty,Serializable> @TO@ VariableDeclarationStatement@@EntityInformation<PrimitiveVersionProperty,Serializable> information=new JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>(PrimitiveVersionProperty.class,em.getMetamodel()); @AT@ 6662 @LENGTH@ 57
---------INS SimpleType@@EntityInformation @TO@ ParameterizedType@@EntityInformation<PrimitiveVersionProperty,Serializable> @AT@ 6662 @LENGTH@ 17
---------INS SimpleType@@PrimitiveVersionProperty @TO@ ParameterizedType@@EntityInformation<PrimitiveVersionProperty,Serializable> @AT@ 6680 @LENGTH@ 24
---------INS SimpleType@@Serializable @TO@ ParameterizedType@@EntityInformation<PrimitiveVersionProperty,Serializable> @AT@ 6706 @LENGTH@ 12
------INS VariableDeclarationFragment@@information=new JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>(PrimitiveVersionProperty.class,em.getMetamodel()) @TO@ VariableDeclarationStatement@@EntityInformation<PrimitiveVersionProperty,Serializable> information=new JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>(PrimitiveVersionProperty.class,em.getMetamodel()); @AT@ 6720 @LENGTH@ 143
---------INS SimpleName@@information @TO@ VariableDeclarationFragment@@information=new JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>(PrimitiveVersionProperty.class,em.getMetamodel()) @AT@ 6720 @LENGTH@ 11
---------INS ClassInstanceCreation@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>[PrimitiveVersionProperty.class, em.getMetamodel()] @TO@ VariableDeclarationFragment@@information=new JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>(PrimitiveVersionProperty.class,em.getMetamodel()) @AT@ 6734 @LENGTH@ 129
------------INS New@@new @TO@ ClassInstanceCreation@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>[PrimitiveVersionProperty.class, em.getMetamodel()] @AT@ 6734 @LENGTH@ 3
------------INS ParameterizedType@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable> @TO@ ClassInstanceCreation@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>[PrimitiveVersionProperty.class, em.getMetamodel()] @AT@ 6738 @LENGTH@ 69
---------------INS SimpleType@@JpaMetamodelEntityInformation @TO@ ParameterizedType@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable> @AT@ 6738 @LENGTH@ 29
---------------INS SimpleType@@PrimitiveVersionProperty @TO@ ParameterizedType@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable> @AT@ 6768 @LENGTH@ 24
---------------INS SimpleType@@Serializable @TO@ ParameterizedType@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable> @AT@ 6794 @LENGTH@ 12
------------INS TypeLiteral@@PrimitiveVersionProperty.class @TO@ ClassInstanceCreation@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>[PrimitiveVersionProperty.class, em.getMetamodel()] @AT@ 6813 @LENGTH@ 30
------------INS MethodInvocation@@em.getMetamodel() @TO@ ClassInstanceCreation@@JpaMetamodelEntityInformation<PrimitiveVersionProperty,Serializable>[PrimitiveVersionProperty.class, em.getMetamodel()] @AT@ 6845 @LENGTH@ 17
---------------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.getMetamodel() @AT@ 6845 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getMetamodel:[] @TO@ MethodInvocation@@em.getMetamodel() @AT@ 6848 @LENGTH@ 14
---INS VariableDeclarationStatement@@PrimitiveVersionProperty pvp=new PrimitiveVersionProperty(); @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToIdInspectionForAPrimitiveVersionProperty,  @AT@ 6868 @LENGTH@ 62
------INS SimpleType@@PrimitiveVersionProperty @TO@ VariableDeclarationStatement@@PrimitiveVersionProperty pvp=new PrimitiveVersionProperty(); @AT@ 6868 @LENGTH@ 24
------INS VariableDeclarationFragment@@pvp=new PrimitiveVersionProperty() @TO@ VariableDeclarationStatement@@PrimitiveVersionProperty pvp=new PrimitiveVersionProperty(); @AT@ 6893 @LENGTH@ 36
---------INS SimpleName@@pvp @TO@ VariableDeclarationFragment@@pvp=new PrimitiveVersionProperty() @AT@ 6893 @LENGTH@ 3
---------INS ClassInstanceCreation@@PrimitiveVersionProperty[] @TO@ VariableDeclarationFragment@@pvp=new PrimitiveVersionProperty() @AT@ 6899 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@PrimitiveVersionProperty[] @AT@ 6899 @LENGTH@ 3
------------INS SimpleType@@PrimitiveVersionProperty @TO@ ClassInstanceCreation@@PrimitiveVersionProperty[] @AT@ 6903 @LENGTH@ 24
---INS ExpressionStatement@@Assignment:pvp.version=1L @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToIdInspectionForAPrimitiveVersionProperty,  @AT@ 6933 @LENGTH@ 17
------INS Assignment@@pvp.version=1L @TO@ ExpressionStatement@@Assignment:pvp.version=1L @AT@ 6933 @LENGTH@ 16
---------INS QualifiedName@@pvp.version @TO@ Assignment@@pvp.version=1L @AT@ 6933 @LENGTH@ 11
------------INS SimpleName@@pvp @TO@ QualifiedName@@pvp.version @AT@ 6933 @LENGTH@ 3
------------INS SimpleName@@version @TO@ QualifiedName@@pvp.version @AT@ 6937 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@pvp.version=1L @AT@ 6944 @LENGTH@ 1
---------INS NumberLiteral@@1L @TO@ Assignment@@pvp.version=1L @AT@ 6947 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(information.isNew(pvp),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToIdInspectionForAPrimitiveVersionProperty,  @AT@ 6954 @LENGTH@ 45
------INS MethodInvocation@@assertThat(information.isNew(pvp),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(information.isNew(pvp),is(true)) @AT@ 6954 @LENGTH@ 44
---------INS SimpleName@@MethodName:assertThat:[information.isNew(pvp), is(true)] @TO@ MethodInvocation@@assertThat(information.isNew(pvp),is(true)) @AT@ 6954 @LENGTH@ 44
------------INS MethodInvocation@@information.isNew(pvp) @TO@ SimpleName@@MethodName:assertThat:[information.isNew(pvp), is(true)] @AT@ 6965 @LENGTH@ 22
---------------INS SimpleName@@Name:information @TO@ MethodInvocation@@information.isNew(pvp) @AT@ 6965 @LENGTH@ 11
---------------INS SimpleName@@MethodName:isNew:[pvp] @TO@ MethodInvocation@@information.isNew(pvp) @AT@ 6977 @LENGTH@ 10
------------------INS SimpleName@@pvp @TO@ SimpleName@@MethodName:isNew:[pvp] @AT@ 6983 @LENGTH@ 3
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[information.isNew(pvp), is(true)] @AT@ 6989 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 6989 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 6992 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 6989 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 6992 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:pvp.id=1L @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToIdInspectionForAPrimitiveVersionProperty,  @AT@ 7003 @LENGTH@ 12
------INS Assignment@@pvp.id=1L @TO@ ExpressionStatement@@Assignment:pvp.id=1L @AT@ 7003 @LENGTH@ 11
---------INS QualifiedName@@pvp.id @TO@ Assignment@@pvp.id=1L @AT@ 7003 @LENGTH@ 6
------------INS SimpleName@@pvp @TO@ QualifiedName@@pvp.id @AT@ 7003 @LENGTH@ 3
------------INS SimpleName@@id @TO@ QualifiedName@@pvp.id @AT@ 7007 @LENGTH@ 2
---------INS Operator@@= @TO@ Assignment@@pvp.id=1L @AT@ 7009 @LENGTH@ 1
---------INS NumberLiteral@@1L @TO@ Assignment@@pvp.id=1L @AT@ 7012 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(information.isNew(pvp),is(false)) @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToIdInspectionForAPrimitiveVersionProperty,  @AT@ 7018 @LENGTH@ 46
------INS MethodInvocation@@assertThat(information.isNew(pvp),is(false)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(information.isNew(pvp),is(false)) @AT@ 7018 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertThat:[information.isNew(pvp), is(false)] @TO@ MethodInvocation@@assertThat(information.isNew(pvp),is(false)) @AT@ 7018 @LENGTH@ 45
------------INS MethodInvocation@@information.isNew(pvp) @TO@ SimpleName@@MethodName:assertThat:[information.isNew(pvp), is(false)] @AT@ 7029 @LENGTH@ 22
---------------INS SimpleName@@Name:information @TO@ MethodInvocation@@information.isNew(pvp) @AT@ 7029 @LENGTH@ 11
---------------INS SimpleName@@MethodName:isNew:[pvp] @TO@ MethodInvocation@@information.isNew(pvp) @AT@ 7041 @LENGTH@ 10
------------------INS SimpleName@@pvp @TO@ SimpleName@@MethodName:isNew:[pvp] @AT@ 7047 @LENGTH@ 3
------------INS MethodInvocation@@is(false) @TO@ SimpleName@@MethodName:assertThat:[information.isNew(pvp), is(false)] @AT@ 7053 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 7053 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 7056 @LENGTH@ 5


UPD TypeDeclaration@@[public]DockerClientFactory,  @TO@ [public, final]DockerClientFactory,  @AT@ 1198 @LENGTH@ 2934
---INS Modifier@@final @TO@ TypeDeclaration@@[public]DockerClientFactory,  @AT@ 1205 @LENGTH@ 5


UPD MethodDeclaration@@private, OrderSpecifier<?>, MethodName:toOrderSpecifier, Order order, JPQLQuery query,  @TO@ private, OrderSpecifier<?>, MethodName:toOrderSpecifier, Order order,  @AT@ 5162 @LENGTH@ 291
---DEL SingleVariableDeclaration@@JPQLQuery query @AT@ 5218 @LENGTH@ 15
------DEL SimpleType@@JPQLQuery @AT@ 5218 @LENGTH@ 9
------DEL SimpleName@@query @AT@ 5228 @LENGTH@ 5


MOV VariableDeclarationStatement@@final EntityManager entityManager=getTargetEntityManager(exchange,entityManagerFactory,getEndpoint().isUsePassedInEntityManager()); @TO@ MethodDeclaration@@public, void, MethodName:process, final Exchange exchange,  @AT@ 2290 @LENGTH@ 135


UPD ExpressionStatement@@MethodInvocation:assertEquals("123|Camel in Action|1",lines[0]) @TO@ MethodInvocation:assertEquals("123|Camel in Action|1",lines[0].trim()) @AT@ 1904 @LENGTH@ 48
---UPD MethodInvocation@@assertEquals("123|Camel in Action|1",lines[0]) @TO@ assertEquals("123|Camel in Action|1",lines[0].trim()) @AT@ 1904 @LENGTH@ 47
------UPD SimpleName@@MethodName:assertEquals:["123|Camel in Action|1", lines[0]] @TO@ MethodName:assertEquals:["123|Camel in Action|1", lines[0].trim()] @AT@ 1904 @LENGTH@ 47
---------INS MethodInvocation@@lines[0].trim() @TO@ SimpleName@@MethodName:assertEquals:["123|Camel in Action|1", lines[0]] @AT@ 1942 @LENGTH@ 15
------------INS ArrayAccess@@lines[0] @TO@ MethodInvocation@@lines[0].trim() @AT@ 1942 @LENGTH@ 8
---------------MOV SimpleName@@lines @TO@ ArrayAccess@@lines[0] @AT@ 1942 @LENGTH@ 5
---------------MOV NumberLiteral@@0 @TO@ ArrayAccess@@lines[0] @AT@ 1948 @LENGTH@ 1
------------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@lines[0].trim() @AT@ 1951 @LENGTH@ 6
---------DEL ArrayAccess@@lines[0] @AT@ 1942 @LENGTH@ 8


UPD TypeDeclaration@@[public]ZooKeeperConfiguration, [Cloneable] @TO@ [@UriParams, public]ZooKeeperConfiguration, [Cloneable] @AT@ 1335 @LENGTH@ 3158
---INS MarkerAnnotation@@@UriParams @TO@ TypeDeclaration@@[public]ZooKeeperConfiguration, [Cloneable] @AT@ 1412 @LENGTH@ 10


UPD TryStatement@@try {  HexConverter.convertFromHex(new char[]{'B','Z'});  throw new Exception("Not throwed IllegalArgumentException!");} catch (IllegalArgumentException e) {} @TO@ try {  HexConverter.convertFromHex(new char[]{'B','Z'});  fail("Not throwed IllegalArgumentException!");} catch (IllegalArgumentException e) {} @AT@ 3126 @LENGTH@ 194
---INS ExpressionStatement@@MethodInvocation:fail("Not throwed IllegalArgumentException!") @TO@ TryStatement@@try {  HexConverter.convertFromHex(new char[]{'B','Z'});  throw new Exception("Not throwed IllegalArgumentException!");} catch (IllegalArgumentException e) {} @AT@ 3190 @LENGTH@ 46
------INS MethodInvocation@@fail("Not throwed IllegalArgumentException!") @TO@ ExpressionStatement@@MethodInvocation:fail("Not throwed IllegalArgumentException!") @AT@ 3190 @LENGTH@ 45
---------INS SimpleName@@MethodName:fail:["Not throwed IllegalArgumentException!"] @TO@ MethodInvocation@@fail("Not throwed IllegalArgumentException!") @AT@ 3190 @LENGTH@ 45
------------INS StringLiteral@@"Not throwed IllegalArgumentException!" @TO@ SimpleName@@MethodName:fail:["Not throwed IllegalArgumentException!"] @AT@ 3195 @LENGTH@ 39
---DEL ThrowStatement@@ClassInstanceCreation:new Exception("Not throwed IllegalArgumentException!") @AT@ 3205 @LENGTH@ 61
------DEL ClassInstanceCreation@@Exception["Not throwed IllegalArgumentException!"] @AT@ 3211 @LENGTH@ 54
---------DEL New@@new @AT@ 3211 @LENGTH@ 3
---------DEL SimpleType@@Exception @AT@ 3215 @LENGTH@ 9
---------DEL StringLiteral@@"Not throwed IllegalArgumentException!" @AT@ 3225 @LENGTH@ 39


UPD IfStatement@@if (ret == 0) {  Boolean.compare(r1.getRelaxLocality(),r2.getRelaxLocality());} @TO@ if (ret == 0) {  boolean x=r1.getRelaxLocality();  boolean y=r2.getRelaxLocality();  ret=(x == y) ? 0 : (x ? 1 : -1);} @AT@ 11448 @LENGTH@ 87
---UPD Block@@ThenBody:{  Boolean.compare(r1.getRelaxLocality(),r2.getRelaxLocality());} @TO@ ThenBody:{  boolean x=r1.getRelaxLocality();  boolean y=r2.getRelaxLocality();  ret=(x == y) ? 0 : (x ? 1 : -1);} @AT@ 11462 @LENGTH@ 73
------DEL ExpressionStatement@@MethodInvocation:Boolean.compare(r1.getRelaxLocality(),r2.getRelaxLocality()) @AT@ 11468 @LENGTH@ 62
---------DEL MethodInvocation@@Boolean.compare(r1.getRelaxLocality(),r2.getRelaxLocality()) @AT@ 11468 @LENGTH@ 61
------------DEL SimpleName@@Name:Boolean @AT@ 11468 @LENGTH@ 7
------------DEL SimpleName@@MethodName:compare:[r1.getRelaxLocality(), r2.getRelaxLocality()] @AT@ 11476 @LENGTH@ 53
---------------DEL MethodInvocation@@r1.getRelaxLocality() @AT@ 11484 @LENGTH@ 21
---------------DEL MethodInvocation@@r2.getRelaxLocality() @AT@ 11507 @LENGTH@ 21
------INS VariableDeclarationStatement@@boolean x=r1.getRelaxLocality(); @TO@ Block@@ThenBody:{  Boolean.compare(r1.getRelaxLocality(),r2.getRelaxLocality());} @AT@ 11511 @LENGTH@ 34
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean x=r1.getRelaxLocality(); @AT@ 11511 @LENGTH@ 7
---------INS VariableDeclarationFragment@@x=r1.getRelaxLocality() @TO@ VariableDeclarationStatement@@boolean x=r1.getRelaxLocality(); @AT@ 11519 @LENGTH@ 25
------------INS SimpleName@@x @TO@ VariableDeclarationFragment@@x=r1.getRelaxLocality() @AT@ 11519 @LENGTH@ 1
------------INS MethodInvocation@@r1.getRelaxLocality() @TO@ VariableDeclarationFragment@@x=r1.getRelaxLocality() @AT@ 11523 @LENGTH@ 21
---------------MOV SimpleName@@Name:r1 @TO@ MethodInvocation@@r1.getRelaxLocality() @AT@ 11484 @LENGTH@ 2
---------------MOV SimpleName@@MethodName:getRelaxLocality:[] @TO@ MethodInvocation@@r1.getRelaxLocality() @AT@ 11487 @LENGTH@ 18
------INS VariableDeclarationStatement@@boolean y=r2.getRelaxLocality(); @TO@ Block@@ThenBody:{  Boolean.compare(r1.getRelaxLocality(),r2.getRelaxLocality());} @AT@ 11550 @LENGTH@ 34
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean y=r2.getRelaxLocality(); @AT@ 11550 @LENGTH@ 7
---------INS VariableDeclarationFragment@@y=r2.getRelaxLocality() @TO@ VariableDeclarationStatement@@boolean y=r2.getRelaxLocality(); @AT@ 11558 @LENGTH@ 25
------------INS SimpleName@@y @TO@ VariableDeclarationFragment@@y=r2.getRelaxLocality() @AT@ 11558 @LENGTH@ 1
------------INS MethodInvocation@@r2.getRelaxLocality() @TO@ VariableDeclarationFragment@@y=r2.getRelaxLocality() @AT@ 11562 @LENGTH@ 21
---------------MOV SimpleName@@Name:r2 @TO@ MethodInvocation@@r2.getRelaxLocality() @AT@ 11507 @LENGTH@ 2
---------------MOV SimpleName@@MethodName:getRelaxLocality:[] @TO@ MethodInvocation@@r2.getRelaxLocality() @AT@ 11510 @LENGTH@ 18
------INS ExpressionStatement@@Assignment:ret=(x == y) ? 0 : (x ? 1 : -1) @TO@ Block@@ThenBody:{  Boolean.compare(r1.getRelaxLocality(),r2.getRelaxLocality());} @AT@ 11589 @LENGTH@ 34
---------INS Assignment@@ret=(x == y) ? 0 : (x ? 1 : -1) @TO@ ExpressionStatement@@Assignment:ret=(x == y) ? 0 : (x ? 1 : -1) @AT@ 11589 @LENGTH@ 33
------------INS SimpleName@@ret @TO@ Assignment@@ret=(x == y) ? 0 : (x ? 1 : -1) @AT@ 11589 @LENGTH@ 3
------------INS Operator@@= @TO@ Assignment@@ret=(x == y) ? 0 : (x ? 1 : -1) @AT@ 11592 @LENGTH@ 1
------------INS ConditionalExpression@@(x == y) ? 0 : (x ? 1 : -1) @TO@ Assignment@@ret=(x == y) ? 0 : (x ? 1 : -1) @AT@ 11595 @LENGTH@ 27
---------------INS ParenthesizedExpression@@(x == y) @TO@ ConditionalExpression@@(x == y) ? 0 : (x ? 1 : -1) @AT@ 11595 @LENGTH@ 8
------------------INS InfixExpression@@x == y @TO@ ParenthesizedExpression@@(x == y) @AT@ 11596 @LENGTH@ 6
---------------------INS SimpleName@@x @TO@ InfixExpression@@x == y @AT@ 11596 @LENGTH@ 1
---------------------INS Operator@@== @TO@ InfixExpression@@x == y @AT@ 11597 @LENGTH@ 2
---------------------INS SimpleName@@y @TO@ InfixExpression@@x == y @AT@ 11601 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ ConditionalExpression@@(x == y) ? 0 : (x ? 1 : -1) @AT@ 11606 @LENGTH@ 1
---------------INS ParenthesizedExpression@@(x ? 1 : -1) @TO@ ConditionalExpression@@(x == y) ? 0 : (x ? 1 : -1) @AT@ 11610 @LENGTH@ 12
------------------INS ConditionalExpression@@x ? 1 : -1 @TO@ ParenthesizedExpression@@(x ? 1 : -1) @AT@ 11611 @LENGTH@ 10
---------------------INS SimpleName@@x @TO@ ConditionalExpression@@x ? 1 : -1 @AT@ 11611 @LENGTH@ 1
---------------------INS NumberLiteral@@1 @TO@ ConditionalExpression@@x ? 1 : -1 @AT@ 11615 @LENGTH@ 1
---------------------INS PrefixExpression@@-1 @TO@ ConditionalExpression@@x ? 1 : -1 @AT@ 11619 @LENGTH@ 2
------------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 11619 @LENGTH@ 1
------------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 11620 @LENGTH@ 1


UPD TryStatement@@try {  execContext.setJc(jconf);  mapWork=(MapWork)cache.retrieve(MAP_PLAN_KEY);  if (mapWork == null) {    mapWork=Utilities.getMapWork(jconf);    cache.cache(MAP_PLAN_KEY,mapWork);    l4j.info("Plan: " + mapWork);    for (    String s : mapWork.getAliases()) {      l4j.info("Alias: " + s);    }  } else {    Utilities.setMapWork(jconf,mapWork);  }  if (mapWork.getVectorMode()) {    mapOp=new VectorMapOperator();  } else {    mapOp=new MapOperator();  }  mapOp.setConf(mapWork);  mapOp.setChildren(jconf);  l4j.info(mapOp.dump(0));  MapredContext.init(true,new JobConf(jconf));  ((TezContext)MapredContext.get()).setInputs(inputs);  mapOp.setExecContext(execContext);  mapOp.initializeLocalWork(jconf);  mapOp.initialize(jconf,null);  List<HashTableDummyOperator> dummyOps=mapWork.getDummyOps();  if (dummyOps != null) {    for (    Operator<? extends OperatorDesc> dummyOp : dummyOps) {      dummyOp.setExecContext(execContext);      dummyOp.initialize(jconf,null);    }  }  OperatorUtils.setChildrenCollector(mapOp.getChildOperators(),outMap);  mapOp.setReporter(reporter);  MapredContext.get().setReporter(reporter);} catch (Throwable e) {  abort=true;  if (e instanceof OutOfMemoryError) {    throw (OutOfMemoryError)e;  } else {    throw new RuntimeException("Map operator initialization failed",e);  }} @TO@ try {  if (mapWork.getVectorMode()) {    mapOp=new VectorMapOperator();  } else {    mapOp=new MapOperator();  }  mapOp.setConf(mapWork);  mapOp.setChildren(jconf);  l4j.info(mapOp.dump(0));  MapredContext.init(true,new JobConf(jconf));  ((TezContext)MapredContext.get()).setInputs(inputs);  mapOp.setExecContext(execContext);  mapOp.initializeLocalWork(jconf);  mapOp.initialize(jconf,null);  List<HashTableDummyOperator> dummyOps=mapWork.getDummyOps();  if (dummyOps != null) {    for (    Operator<? extends OperatorDesc> dummyOp : dummyOps) {      dummyOp.setExecContext(execContext);      dummyOp.initialize(jconf,null);    }  }  OperatorUtils.setChildrenCollector(mapOp.getChildOperators(),outMap);  mapOp.setReporter(reporter);  MapredContext.get().setReporter(reporter);} catch (Throwable e) {  abort=true;  if (e instanceof OutOfMemoryError) {    throw (OutOfMemoryError)e;  } else {    throw new RuntimeException("Map operator initialization failed",e);  }} @AT@ 3916 @LENGTH@ 1906


UPD TypeDeclaration@@[public]EqualsOperation, ComparisonOperation @TO@ [public]EqualsOperation, SameTypeOperation @AT@ 1107 @LENGTH@ 313
---UPD SimpleType@@ComparisonOperation @TO@ SameTypeOperation @AT@ 1144 @LENGTH@ 19


UPD IfStatement@@if (closed.compareAndSet(false,true)) {  safeCloseResultSet();  safeCloseStatement();  safeCloseConnection();} @TO@ if (closed.compareAndSet(false,true)) {  safeCloseResultSet();  safeCloseStatement();} @AT@ 3719 @LENGTH@ 153
---UPD Block@@ThenBody:{  safeCloseResultSet();  safeCloseStatement();  safeCloseConnection();} @TO@ ThenBody:{  safeCloseResultSet();  safeCloseStatement();} @AT@ 3758 @LENGTH@ 114
------DEL ExpressionStatement@@MethodInvocation:safeCloseConnection() @AT@ 3840 @LENGTH@ 22
---------DEL MethodInvocation@@MethodName:safeCloseConnection:[] @AT@ 3840 @LENGTH@ 21


INS SuperConstructorInvocation@@super(RestletEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:RestletComponent, Component component,  @AT@ 2927 @LENGTH@ 29
---INS TypeLiteral@@RestletEndpoint.class @TO@ SuperConstructorInvocation@@super(RestletEndpoint.class);
 @AT@ 2933 @LENGTH@ 21


DEL ExpressionStatement@@MethodInvocation:file.setMimeType("application/vnd.google-apps.photo") @AT@ 7349 @LENGTH@ 54
---DEL MethodInvocation@@file.setMimeType("application/vnd.google-apps.photo") @AT@ 7349 @LENGTH@ 53
------DEL SimpleName@@Name:file @AT@ 7349 @LENGTH@ 4
------DEL SimpleName@@MethodName:setMimeType:["application/vnd.google-apps.photo"] @AT@ 7354 @LENGTH@ 48
---------DEL StringLiteral@@"application/vnd.google-apps.photo" @AT@ 7366 @LENGTH@ 35


UPD TypeDeclaration@@[@UriEndpoint(scheme="openshift",consumerClass=OpenShiftConsumer.class), public]OpenShiftEndpoint, ScheduledPollEndpoint @TO@ [@UriEndpoint(scheme="openshift",consumerClass=OpenShiftConsumer.class,label="cloud"), public]OpenShiftEndpoint, ScheduledPollEndpoint @AT@ 1286 @LENGTH@ 2895
---UPD NormalAnnotation@@@UriEndpoint(scheme="openshift",consumerClass=OpenShiftConsumer.class) @TO@ @UriEndpoint(scheme="openshift",consumerClass=OpenShiftConsumer.class,label="cloud") @AT@ 1286 @LENGTH@ 75


UPD IfStatement@@if (key != null ? !key.equals(that.key) : that.key != null) {  return false;} @TO@ if (key != null ? !key.equals(that.key) : that.key != null) {  return false;} else if (value != null ? !value.equals(that.value) : that.value != null) {  return false;} @AT@ 1488 @LENGTH@ 97
---INS Block@@ElseBody:if (value != null ? !value.equals(that.value) : that.value != null) {  return false;} @TO@ IfStatement@@if (key != null ? !key.equals(that.key) : that.key != null) {  return false;} @AT@ 1591 @LENGTH@ 105
------INS IfStatement@@if (value != null ? !value.equals(that.value) : that.value != null) {  return false;} @TO@ Block@@ElseBody:if (value != null ? !value.equals(that.value) : that.value != null) {  return false;} @AT@ 1591 @LENGTH@ 105
---------INS ConditionalExpression@@value != null ? !value.equals(that.value) : that.value != null @TO@ IfStatement@@if (value != null ? !value.equals(that.value) : that.value != null) {  return false;} @AT@ 1595 @LENGTH@ 62
------------INS InfixExpression@@value != null @TO@ ConditionalExpression@@value != null ? !value.equals(that.value) : that.value != null @AT@ 1595 @LENGTH@ 13
---------------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 1595 @LENGTH@ 5
---------------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 1600 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 1604 @LENGTH@ 4
------------INS PrefixExpression@@!value.equals(that.value) @TO@ ConditionalExpression@@value != null ? !value.equals(that.value) : that.value != null @AT@ 1611 @LENGTH@ 25
---------------INS Operator@@! @TO@ PrefixExpression@@!value.equals(that.value) @AT@ 1611 @LENGTH@ 1
---------------INS MethodInvocation@@value.equals(that.value) @TO@ PrefixExpression@@!value.equals(that.value) @AT@ 1612 @LENGTH@ 24
------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.equals(that.value) @AT@ 1612 @LENGTH@ 5
------------------INS SimpleName@@MethodName:equals:[that.value] @TO@ MethodInvocation@@value.equals(that.value) @AT@ 1618 @LENGTH@ 18
---------------------INS QualifiedName@@that.value @TO@ SimpleName@@MethodName:equals:[that.value] @AT@ 1625 @LENGTH@ 10
------------------------INS SimpleName@@that @TO@ QualifiedName@@that.value @AT@ 1625 @LENGTH@ 4
------------------------INS SimpleName@@value @TO@ QualifiedName@@that.value @AT@ 1630 @LENGTH@ 5
------------INS InfixExpression@@that.value != null @TO@ ConditionalExpression@@value != null ? !value.equals(that.value) : that.value != null @AT@ 1639 @LENGTH@ 18
---------------INS QualifiedName@@that.value @TO@ InfixExpression@@that.value != null @AT@ 1639 @LENGTH@ 10
------------------INS SimpleName@@that @TO@ QualifiedName@@that.value @AT@ 1639 @LENGTH@ 4
------------------INS SimpleName@@value @TO@ QualifiedName@@that.value @AT@ 1644 @LENGTH@ 5
---------------INS Operator@@!= @TO@ InfixExpression@@that.value != null @AT@ 1649 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@that.value != null @AT@ 1653 @LENGTH@ 4
---------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (value != null ? !value.equals(that.value) : that.value != null) {  return false;} @AT@ 1659 @LENGTH@ 37
------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1673 @LENGTH@ 13
---------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1680 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("activemq:queue:test?concurrentConsumers=5&useMessageIDAsCorrelationID=true&transacted=true").filter().simple("${in.body} = 'beSlow'").delay(constant(2000)).log(">>>>> Received message on test queue").setBody(constant("Reply")).log(">>>>> Sending back reply") @TO@ MethodInvocation:from("activemq:queue:test?concurrentConsumers=5&useMessageIDAsCorrelationID=true&transacted=true").filter().simple("${in.body} == 'beSlow'").delay(constant(2000)).log(">>>>> Received message on test queue").setBody(constant("Reply")).log(">>>>> Sending back reply") @AT@ 5204 @LENGTH@ 374
---UPD MethodInvocation@@from("activemq:queue:test?concurrentConsumers=5&useMessageIDAsCorrelationID=true&transacted=true").filter().simple("${in.body} = 'beSlow'").delay(constant(2000)).log(">>>>> Received message on test queue").setBody(constant("Reply")).log(">>>>> Sending back reply") @TO@ from("activemq:queue:test?concurrentConsumers=5&useMessageIDAsCorrelationID=true&transacted=true").filter().simple("${in.body} == 'beSlow'").delay(constant(2000)).log(">>>>> Received message on test queue").setBody(constant("Reply")).log(">>>>> Sending back reply") @AT@ 5204 @LENGTH@ 373
------UPD MethodInvocation@@MethodName:simple:["${in.body} = 'beSlow'"] @TO@ MethodName:simple:["${in.body} == 'beSlow'"] @AT@ 5204 @LENGTH@ 160
---------UPD StringLiteral@@"${in.body} = 'beSlow'" @TO@ "${in.body} == 'beSlow'" @AT@ 5340 @LENGTH@ 23


INS ExpressionStatement@@MethodInvocation:expectedOAuth2AccessToken.setExpiration(new Date(Long.MAX_VALUE - 1)) @TO@ MethodDeclaration@@public, void, MethodName:testRetrieveAccessToken,  @AT@ 4178 @LENGTH@ 68
---INS MethodInvocation@@expectedOAuth2AccessToken.setExpiration(new Date(Long.MAX_VALUE - 1)) @TO@ ExpressionStatement@@MethodInvocation:expectedOAuth2AccessToken.setExpiration(new Date(Long.MAX_VALUE - 1)) @AT@ 4178 @LENGTH@ 67
------INS SimpleName@@Name:expectedOAuth2AccessToken @TO@ MethodInvocation@@expectedOAuth2AccessToken.setExpiration(new Date(Long.MAX_VALUE - 1)) @AT@ 4178 @LENGTH@ 25
------INS SimpleName@@MethodName:setExpiration:[new Date(Long.MAX_VALUE - 1)] @TO@ MethodInvocation@@expectedOAuth2AccessToken.setExpiration(new Date(Long.MAX_VALUE - 1)) @AT@ 4204 @LENGTH@ 41
---------INS ClassInstanceCreation@@Date[Long.MAX_VALUE - 1] @TO@ SimpleName@@MethodName:setExpiration:[new Date(Long.MAX_VALUE - 1)] @AT@ 4218 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@Date[Long.MAX_VALUE - 1] @AT@ 4218 @LENGTH@ 3
------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[Long.MAX_VALUE - 1] @AT@ 4222 @LENGTH@ 4
------------INS InfixExpression@@Long.MAX_VALUE - 1 @TO@ ClassInstanceCreation@@Date[Long.MAX_VALUE - 1] @AT@ 4227 @LENGTH@ 16
---------------INS QualifiedName@@Long.MAX_VALUE @TO@ InfixExpression@@Long.MAX_VALUE - 1 @AT@ 4227 @LENGTH@ 14
------------------INS SimpleName@@Long @TO@ QualifiedName@@Long.MAX_VALUE @AT@ 4227 @LENGTH@ 4
------------------INS SimpleName@@MAX_VALUE @TO@ QualifiedName@@Long.MAX_VALUE @AT@ 4232 @LENGTH@ 9
---------------INS Operator@@- @TO@ InfixExpression@@Long.MAX_VALUE - 1 @AT@ 4241 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@Long.MAX_VALUE - 1 @AT@ 4242 @LENGTH@ 1


UPD VariableDeclarationStatement@@String out=(String)template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",message); @TO@ String out=template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",message,String.class); @AT@ 3138 @LENGTH@ 120
---UPD VariableDeclarationFragment@@out=(String)template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",message) @TO@ out=template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",message,String.class) @AT@ 3145 @LENGTH@ 112
------INS MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",message,String.class) @TO@ VariableDeclarationFragment@@out=(String)template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",message) @AT@ 3150 @LENGTH@ 112
---------MOV SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",message,String.class) @AT@ 3159 @LENGTH@ 8
---------MOV SimpleName@@MethodName:requestBody:["mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec", message] @TO@ MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",message,String.class) @AT@ 3168 @LENGTH@ 89
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:requestBody:["mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec", message] @AT@ 3249 @LENGTH@ 12
------DEL CastExpression@@(String)template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",message) @AT@ 3151 @LENGTH@ 106
---------DEL SimpleType@@String @AT@ 3152 @LENGTH@ 6
---------DEL MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",message) @AT@ 3159 @LENGTH@ 98


UPD MethodDeclaration@@public, voidMethodName:OAuth2Authentication, OAuth2Request clientAuthentication, Authentication userAuthentication,  @TO@ public, voidMethodName:OAuth2Authentication, OAuth2Request storedRequest, Authentication userAuthentication,  @AT@ 994 @LENGTH@ 311
---UPD SingleVariableDeclaration@@OAuth2Request clientAuthentication @TO@ OAuth2Request storedRequest @AT@ 1022 @LENGTH@ 34
------UPD SimpleName@@clientAuthentication @TO@ storedRequest @AT@ 1036 @LENGTH@ 20
---UPD SuperConstructorInvocation@@super(userAuthentication == null ? clientAuthentication.getAuthorities() : userAuthentication.getAuthorities());
 @TO@ super(userAuthentication == null ? storedRequest.getAuthorities() : userAuthentication.getAuthorities());
 @AT@ 1097 @LENGTH@ 112
------UPD ConditionalExpression@@userAuthentication == null ? clientAuthentication.getAuthorities() : userAuthentication.getAuthorities() @TO@ userAuthentication == null ? storedRequest.getAuthorities() : userAuthentication.getAuthorities() @AT@ 1103 @LENGTH@ 104
---------UPD MethodInvocation@@clientAuthentication.getAuthorities() @TO@ storedRequest.getAuthorities() @AT@ 1132 @LENGTH@ 37
------------UPD SimpleName@@Name:clientAuthentication @TO@ Name:storedRequest @AT@ 1132 @LENGTH@ 20
---UPD ExpressionStatement@@Assignment:this.storedRequest=clientAuthentication @TO@ Assignment:this.storedRequest=storedRequest @AT@ 1212 @LENGTH@ 42
------UPD Assignment@@this.storedRequest=clientAuthentication @TO@ this.storedRequest=storedRequest @AT@ 1212 @LENGTH@ 41
---------UPD SimpleName@@clientAuthentication @TO@ storedRequest @AT@ 1233 @LENGTH@ 20


UPD FieldDeclaration@@static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.RESET_PEAK_THREAD_COUNT,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setReplyType(ModelType.OBJECT).setRuntimeOnly().build()] @TO@ static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.RESET_PEAK_THREAD_COUNT,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setRuntimeOnly().build()] @AT@ 1692 @LENGTH@ 291
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.RESET_PEAK_THREAD_COUNT,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setReplyType(ModelType.OBJECT).setRuntimeOnly().build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.RESET_PEAK_THREAD_COUNT,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setRuntimeOnly().build() @AT@ 1725 @LENGTH@ 257
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.RESET_PEAK_THREAD_COUNT,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setReplyType(ModelType.OBJECT).setRuntimeOnly().build() @TO@ new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.RESET_PEAK_THREAD_COUNT,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setRuntimeOnly().build() @AT@ 1738 @LENGTH@ 244
---------DEL MethodInvocation@@MethodName:setReplyType:[ModelType.OBJECT] @AT@ 1738 @LENGTH@ 193
------------DEL QualifiedName@@ModelType.OBJECT @AT@ 1914 @LENGTH@ 16
---------------DEL SimpleName@@ModelType @AT@ 1914 @LENGTH@ 9
---------------DEL SimpleName@@OBJECT @AT@ 1924 @LENGTH@ 6


UPD MethodDeclaration@@protected, boolean, MethodName:compare, Object left, Object right,  @TO@ protected, boolean, MethodName:doCompare, Object left, Object right,  @AT@ 1252 @LENGTH@ 166
---UPD SimpleName@@MethodName:compare @TO@ MethodName:doCompare @AT@ 1270 @LENGTH@ 7


UPD IfStatement@@if (isTransient == null) {  boolean isTransient=super.isTransient() || isAnnotationPresent(Transient.class);  this.isTransient=isTransient || isAnnotationPresent(Value.class) || isAnnotationPresent(Autowired.class);} @TO@ if (this.isTransient == null) {  boolean potentiallyTransient=super.isTransient() || isAnnotationPresent(Transient.class);  this.isTransient=potentiallyTransient || isAnnotationPresent(Value.class) || isAnnotationPresent(Autowired.class);} @AT@ 5800 @LENGTH@ 227
---UPD InfixExpression@@isTransient == null @TO@ this.isTransient == null @AT@ 5804 @LENGTH@ 19
------INS FieldAccess@@this.isTransient @TO@ InfixExpression@@isTransient == null @AT@ 5804 @LENGTH@ 16
---------INS ThisExpression@@this @TO@ FieldAccess@@this.isTransient @AT@ 5804 @LENGTH@ 4
---------INS SimpleName@@isTransient @TO@ FieldAccess@@this.isTransient @AT@ 5809 @LENGTH@ 11
------DEL SimpleName@@isTransient @AT@ 5804 @LENGTH@ 11
---UPD Block@@ThenBody:{  boolean isTransient=super.isTransient() || isAnnotationPresent(Transient.class);  this.isTransient=isTransient || isAnnotationPresent(Value.class) || isAnnotationPresent(Autowired.class);} @TO@ ThenBody:{  boolean potentiallyTransient=super.isTransient() || isAnnotationPresent(Transient.class);  this.isTransient=potentiallyTransient || isAnnotationPresent(Value.class) || isAnnotationPresent(Autowired.class);} @AT@ 5825 @LENGTH@ 202
------UPD VariableDeclarationStatement@@boolean isTransient=super.isTransient() || isAnnotationPresent(Transient.class); @TO@ boolean potentiallyTransient=super.isTransient() || isAnnotationPresent(Transient.class); @AT@ 5830 @LENGTH@ 82
---------UPD VariableDeclarationFragment@@isTransient=super.isTransient() || isAnnotationPresent(Transient.class) @TO@ potentiallyTransient=super.isTransient() || isAnnotationPresent(Transient.class) @AT@ 5838 @LENGTH@ 73
------------UPD SimpleName@@isTransient @TO@ potentiallyTransient @AT@ 5838 @LENGTH@ 11
------UPD ExpressionStatement@@Assignment:this.isTransient=isTransient || isAnnotationPresent(Value.class) || isAnnotationPresent(Autowired.class) @TO@ Assignment:this.isTransient=potentiallyTransient || isAnnotationPresent(Value.class) || isAnnotationPresent(Autowired.class) @AT@ 5916 @LENGTH@ 107
---------UPD Assignment@@this.isTransient=isTransient || isAnnotationPresent(Value.class) || isAnnotationPresent(Autowired.class) @TO@ this.isTransient=potentiallyTransient || isAnnotationPresent(Value.class) || isAnnotationPresent(Autowired.class) @AT@ 5916 @LENGTH@ 106
------------UPD InfixExpression@@isTransient || isAnnotationPresent(Value.class) || isAnnotationPresent(Autowired.class) @TO@ potentiallyTransient || isAnnotationPresent(Value.class) || isAnnotationPresent(Autowired.class) @AT@ 5935 @LENGTH@ 87
---------------UPD SimpleName@@isTransient @TO@ potentiallyTransient @AT@ 5935 @LENGTH@ 11


UPD TypeDeclaration@@[public]WebsocketEndpoint, ServletEndpoint @TO@ [@UriEndpoint(scheme="atmosphere-websocket",consumerClass=WebsocketConsumer.class), public]WebsocketEndpoint, ServletEndpoint @AT@ 1277 @LENGTH@ 2027
---INS NormalAnnotation@@@UriEndpoint(scheme="atmosphere-websocket",consumerClass=WebsocketConsumer.class) @TO@ TypeDeclaration@@[public]WebsocketEndpoint, ServletEndpoint @AT@ 1356 @LENGTH@ 86


INS MethodDeclaration@@public, void, MethodName:considersResourceSortableIfSortParameterIsPresent, Exception,  @TO@ TypeDeclaration@@[public]RepositoryMethodResourceMappingUnitTests,  @AT@ 3909 @LENGTH@ 575
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:considersResourceSortableIfSortParameterIsPresent, Exception,  @AT@ 3909 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:considersResourceSortableIfSortParameterIsPresent, Exception,  @AT@ 3916 @LENGTH@ 4
---INS SimpleName@@MethodName:considersResourceSortableIfSortParameterIsPresent @TO@ MethodDeclaration@@public, void, MethodName:considersResourceSortableIfSortParameterIsPresent, Exception,  @AT@ 3921 @LENGTH@ 49
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:considersResourceSortableIfSortParameterIsPresent, Exception,  @AT@ 3980 @LENGTH@ 9
---INS VariableDeclarationStatement@@Method method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Sort.class); @TO@ MethodDeclaration@@public, void, MethodName:considersResourceSortableIfSortParameterIsPresent, Exception,  @AT@ 3995 @LENGTH@ 97
------INS SimpleType@@Method @TO@ VariableDeclarationStatement@@Method method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Sort.class); @AT@ 3995 @LENGTH@ 6
------INS VariableDeclarationFragment@@method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Sort.class) @TO@ VariableDeclarationStatement@@Method method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Sort.class); @AT@ 4002 @LENGTH@ 89
---------INS SimpleName@@method @TO@ VariableDeclarationFragment@@method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Sort.class) @AT@ 4002 @LENGTH@ 6
---------INS MethodInvocation@@PersonRepository.class.getMethod("findByEmailAddress",String.class,Sort.class) @TO@ VariableDeclarationFragment@@method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Sort.class) @AT@ 4011 @LENGTH@ 80
------------INS TypeLiteral@@PersonRepository.class @TO@ MethodInvocation@@PersonRepository.class.getMethod("findByEmailAddress",String.class,Sort.class) @AT@ 4011 @LENGTH@ 22
------------INS SimpleName@@MethodName:getMethod:["findByEmailAddress", String.class, Sort.class] @TO@ MethodInvocation@@PersonRepository.class.getMethod("findByEmailAddress",String.class,Sort.class) @AT@ 4034 @LENGTH@ 57
---------------INS StringLiteral@@"findByEmailAddress" @TO@ SimpleName@@MethodName:getMethod:["findByEmailAddress", String.class, Sort.class] @AT@ 4044 @LENGTH@ 20
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getMethod:["findByEmailAddress", String.class, Sort.class] @AT@ 4066 @LENGTH@ 12
---------------INS TypeLiteral@@Sort.class @TO@ SimpleName@@MethodName:getMethod:["findByEmailAddress", String.class, Sort.class] @AT@ 4080 @LENGTH@ 10
---INS VariableDeclarationStatement@@RepositoryMethodResourceMapping mapping=new RepositoryMethodResourceMapping(method,resourceMapping); @TO@ MethodDeclaration@@public, void, MethodName:considersResourceSortableIfSortParameterIsPresent, Exception,  @AT@ 4095 @LENGTH@ 103
------INS SimpleType@@RepositoryMethodResourceMapping @TO@ VariableDeclarationStatement@@RepositoryMethodResourceMapping mapping=new RepositoryMethodResourceMapping(method,resourceMapping); @AT@ 4095 @LENGTH@ 31
------INS VariableDeclarationFragment@@mapping=new RepositoryMethodResourceMapping(method,resourceMapping) @TO@ VariableDeclarationStatement@@RepositoryMethodResourceMapping mapping=new RepositoryMethodResourceMapping(method,resourceMapping); @AT@ 4127 @LENGTH@ 70
---------INS SimpleName@@mapping @TO@ VariableDeclarationFragment@@mapping=new RepositoryMethodResourceMapping(method,resourceMapping) @AT@ 4127 @LENGTH@ 7
---------INS ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @TO@ VariableDeclarationFragment@@mapping=new RepositoryMethodResourceMapping(method,resourceMapping) @AT@ 4137 @LENGTH@ 60
------------INS New@@new @TO@ ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @AT@ 4137 @LENGTH@ 3
------------INS SimpleType@@RepositoryMethodResourceMapping @TO@ ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @AT@ 4141 @LENGTH@ 31
------------INS SimpleName@@method @TO@ ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @AT@ 4173 @LENGTH@ 6
------------INS SimpleName@@resourceMapping @TO@ ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @AT@ 4181 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertThat(mapping.isSortableResource(),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:considersResourceSortableIfSortParameterIsPresent, Exception,  @AT@ 4202 @LENGTH@ 51
------INS MethodInvocation@@assertThat(mapping.isSortableResource(),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(mapping.isSortableResource(),is(true)) @AT@ 4202 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertThat:[mapping.isSortableResource(), is(true)] @TO@ MethodInvocation@@assertThat(mapping.isSortableResource(),is(true)) @AT@ 4202 @LENGTH@ 50
------------INS MethodInvocation@@mapping.isSortableResource() @TO@ SimpleName@@MethodName:assertThat:[mapping.isSortableResource(), is(true)] @AT@ 4213 @LENGTH@ 28
---------------INS SimpleName@@Name:mapping @TO@ MethodInvocation@@mapping.isSortableResource() @AT@ 4213 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isSortableResource:[] @TO@ MethodInvocation@@mapping.isSortableResource() @AT@ 4221 @LENGTH@ 20
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[mapping.isSortableResource(), is(true)] @AT@ 4243 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 4243 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 4246 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 4243 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 4246 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @TO@ MethodDeclaration@@public, void, MethodName:considersResourceSortableIfSortParameterIsPresent, Exception,  @AT@ 4257 @LENGTH@ 94
------INS Assignment@@method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @TO@ ExpressionStatement@@Assignment:method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @AT@ 4257 @LENGTH@ 93
---------INS SimpleName@@method @TO@ Assignment@@method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @AT@ 4257 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @AT@ 4263 @LENGTH@ 1
---------INS MethodInvocation@@PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @TO@ Assignment@@method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @AT@ 4266 @LENGTH@ 84
------------INS TypeLiteral@@PersonRepository.class @TO@ MethodInvocation@@PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @AT@ 4266 @LENGTH@ 22
------------INS SimpleName@@MethodName:getMethod:["findByEmailAddress", String.class, Pageable.class] @TO@ MethodInvocation@@PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @AT@ 4289 @LENGTH@ 61
---------------INS StringLiteral@@"findByEmailAddress" @TO@ SimpleName@@MethodName:getMethod:["findByEmailAddress", String.class, Pageable.class] @AT@ 4299 @LENGTH@ 20
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getMethod:["findByEmailAddress", String.class, Pageable.class] @AT@ 4321 @LENGTH@ 12
---------------INS TypeLiteral@@Pageable.class @TO@ SimpleName@@MethodName:getMethod:["findByEmailAddress", String.class, Pageable.class] @AT@ 4335 @LENGTH@ 14
---INS ExpressionStatement@@Assignment:mapping=new RepositoryMethodResourceMapping(method,resourceMapping) @TO@ MethodDeclaration@@public, void, MethodName:considersResourceSortableIfSortParameterIsPresent, Exception,  @AT@ 4354 @LENGTH@ 71
------INS Assignment@@mapping=new RepositoryMethodResourceMapping(method,resourceMapping) @TO@ ExpressionStatement@@Assignment:mapping=new RepositoryMethodResourceMapping(method,resourceMapping) @AT@ 4354 @LENGTH@ 70
---------INS SimpleName@@mapping @TO@ Assignment@@mapping=new RepositoryMethodResourceMapping(method,resourceMapping) @AT@ 4354 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@mapping=new RepositoryMethodResourceMapping(method,resourceMapping) @AT@ 4361 @LENGTH@ 1
---------INS ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @TO@ Assignment@@mapping=new RepositoryMethodResourceMapping(method,resourceMapping) @AT@ 4364 @LENGTH@ 60
------------INS New@@new @TO@ ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @AT@ 4364 @LENGTH@ 3
------------INS SimpleType@@RepositoryMethodResourceMapping @TO@ ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @AT@ 4368 @LENGTH@ 31
------------INS SimpleName@@method @TO@ ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @AT@ 4400 @LENGTH@ 6
------------INS SimpleName@@resourceMapping @TO@ ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @AT@ 4408 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertThat(mapping.isSortableResource(),is(false)) @TO@ MethodDeclaration@@public, void, MethodName:considersResourceSortableIfSortParameterIsPresent, Exception,  @AT@ 4429 @LENGTH@ 52
------INS MethodInvocation@@assertThat(mapping.isSortableResource(),is(false)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(mapping.isSortableResource(),is(false)) @AT@ 4429 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertThat:[mapping.isSortableResource(), is(false)] @TO@ MethodInvocation@@assertThat(mapping.isSortableResource(),is(false)) @AT@ 4429 @LENGTH@ 51
------------INS MethodInvocation@@mapping.isSortableResource() @TO@ SimpleName@@MethodName:assertThat:[mapping.isSortableResource(), is(false)] @AT@ 4440 @LENGTH@ 28
---------------INS SimpleName@@Name:mapping @TO@ MethodInvocation@@mapping.isSortableResource() @AT@ 4440 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isSortableResource:[] @TO@ MethodInvocation@@mapping.isSortableResource() @AT@ 4448 @LENGTH@ 20
------------INS MethodInvocation@@is(false) @TO@ SimpleName@@MethodName:assertThat:[mapping.isSortableResource(), is(false)] @AT@ 4470 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 4470 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 4473 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 4470 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 4473 @LENGTH@ 5


UPD MethodDeclaration@@public, abstract, LanguageSet, MethodName:merge, LanguageSet other,  @TO@ abstract, LanguageSet, MethodName:merge, LanguageSet other,  @AT@ 2908 @LENGTH@ 53
---DEL Modifier@@public @AT@ 2908 @LENGTH@ 6


UPD TypeDeclaration@@[@UriEndpoint(scheme="infinispan",consumerClass=InfinispanConsumer.class), public]InfinispanEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="infinispan",consumerClass=InfinispanConsumer.class,label="cache,datagrid"), public]InfinispanEndpoint, DefaultEndpoint @AT@ 1081 @LENGTH@ 821
---UPD NormalAnnotation@@@UriEndpoint(scheme="infinispan",consumerClass=InfinispanConsumer.class) @TO@ @UriEndpoint(scheme="infinispan",consumerClass=InfinispanConsumer.class,label="cache,datagrid") @AT@ 1081 @LENGTH@ 77


UPD VariableDeclarationStatement@@String body="<t:text xmlns:t=\"org.text\">\n" + "  <t:sentence>J'aime les camélidés</t:sentence>\n" + "</t:text>"; @TO@ String body="<t:text xmlns:t=\"org.text\">\n" + "  <t:sentence>J'aime les cam\u00E9lid\u00E9s</t:sentence>\n" + "</t:text>"; @AT@ 1533 @LENGTH@ 148
---UPD VariableDeclarationFragment@@body="<t:text xmlns:t=\"org.text\">\n" + "  <t:sentence>J'aime les camélidés</t:sentence>\n" + "</t:text>" @TO@ body="<t:text xmlns:t=\"org.text\">\n" + "  <t:sentence>J'aime les cam\u00E9lid\u00E9s</t:sentence>\n" + "</t:text>" @AT@ 1540 @LENGTH@ 140
------UPD InfixExpression@@"<t:text xmlns:t=\"org.text\">\n" + "  <t:sentence>J'aime les camélidés</t:sentence>\n" + "</t:text>" @TO@ "<t:text xmlns:t=\"org.text\">\n" + "  <t:sentence>J'aime les cam\u00E9lid\u00E9s</t:sentence>\n" + "</t:text>" @AT@ 1547 @LENGTH@ 133
---------UPD StringLiteral@@"  <t:sentence>J'aime les camélidés</t:sentence>\n" @TO@ "  <t:sentence>J'aime les cam\u00E9lid\u00E9s</t:sentence>\n" @AT@ 1599 @LENGTH@ 51


UPD WhileStatement@@while (list.hasMore()) {  NameClassPair pair=list.next();  if (type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName())) {    Object instance=context.lookup(pair.getName());    answer.add(type.cast(instance));  }} @TO@ while (list.hasMore()) {  NameClassPair pair=list.next();  Object instance=context.lookup(pair.getName());  if (type.isInstance(instance)) {    answer.add(type.cast(instance));  }} @AT@ 3273 @LENGTH@ 331
---DEL Block@@WhileBody:{  NameClassPair pair=list.next();  if (type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName())) {    Object instance=context.lookup(pair.getName());    answer.add(type.cast(instance));  }} @AT@ 3296 @LENGTH@ 308
------DEL IfStatement@@if (type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName())) {  Object instance=context.lookup(pair.getName());  answer.add(type.cast(instance));} @AT@ 3364 @LENGTH@ 226
---------DEL InfixExpression@@type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName()) @AT@ 3368 @LENGTH@ 78
------------DEL MethodInvocation@@type.isInstance(pair.getClass()) @AT@ 3368 @LENGTH@ 32
---------------DEL SimpleName@@Name:type @AT@ 3368 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:isInstance:[pair.getClass()] @AT@ 3373 @LENGTH@ 27
------------------DEL MethodInvocation@@pair.getClass() @AT@ 3384 @LENGTH@ 15
---------------------DEL SimpleName@@Name:pair @AT@ 3384 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getClass:[] @AT@ 3389 @LENGTH@ 10
------------DEL Operator@@|| @AT@ 3400 @LENGTH@ 2
------------DEL MethodInvocation@@type.getName().equals(pair.getClassName()) @AT@ 3404 @LENGTH@ 42
---------------DEL MethodInvocation@@MethodName:getName:[] @AT@ 3404 @LENGTH@ 14
---------------DEL SimpleName@@Name:type @AT@ 3404 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:equals:[pair.getClassName()] @AT@ 3419 @LENGTH@ 27
------------------DEL MethodInvocation@@pair.getClassName() @AT@ 3426 @LENGTH@ 19
---------------------DEL SimpleName@@Name:pair @AT@ 3426 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getClassName:[] @AT@ 3431 @LENGTH@ 14
---MOV Block@@ThenBody:{  Object instance=context.lookup(pair.getName());  answer.add(type.cast(instance));} @TO@ WhileStatement@@while (list.hasMore()) {  NameClassPair pair=list.next();  if (type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName())) {    Object instance=context.lookup(pair.getName());    answer.add(type.cast(instance));  }} @AT@ 3448 @LENGTH@ 142
------MOV VariableDeclarationStatement@@NameClassPair pair=list.next(); @TO@ Block@@ThenBody:{  Object instance=context.lookup(pair.getName());  answer.add(type.cast(instance));} @AT@ 3314 @LENGTH@ 33
------INS IfStatement@@if (type.isInstance(instance)) {  answer.add(type.cast(instance));} @TO@ Block@@ThenBody:{  Object instance=context.lookup(pair.getName());  answer.add(type.cast(instance));} @AT@ 3373 @LENGTH@ 103
---------INS MethodInvocation@@type.isInstance(instance) @TO@ IfStatement@@if (type.isInstance(instance)) {  answer.add(type.cast(instance));} @AT@ 3377 @LENGTH@ 25
------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.isInstance(instance) @AT@ 3377 @LENGTH@ 4
------------INS SimpleName@@MethodName:isInstance:[instance] @TO@ MethodInvocation@@type.isInstance(instance) @AT@ 3382 @LENGTH@ 20
---------------INS SimpleName@@instance @TO@ SimpleName@@MethodName:isInstance:[instance] @AT@ 3393 @LENGTH@ 8
---------INS Block@@ThenBody:{  answer.add(type.cast(instance));} @TO@ IfStatement@@if (type.isInstance(instance)) {  answer.add(type.cast(instance));} @AT@ 3404 @LENGTH@ 72
------------MOV ExpressionStatement@@MethodInvocation:answer.add(type.cast(instance)) @TO@ Block@@ThenBody:{  answer.add(type.cast(instance));} @AT@ 3540 @LENGTH@ 32


UPD IfStatement@@if (versionAttribute == null) {  return super.isNew(entity);} @TO@ if (versionAttribute == null || versionAttribute.getJavaType().isPrimitive()) {  return super.isNew(entity);} @AT@ 6250 @LENGTH@ 66
---DEL InfixExpression@@versionAttribute == null @AT@ 6254 @LENGTH@ 24
---INS InfixExpression@@versionAttribute == null || versionAttribute.getJavaType().isPrimitive() @TO@ IfStatement@@if (versionAttribute == null) {  return super.isNew(entity);} @AT@ 6282 @LENGTH@ 72
------INS InfixExpression@@versionAttribute == null @TO@ InfixExpression@@versionAttribute == null || versionAttribute.getJavaType().isPrimitive() @AT@ 6282 @LENGTH@ 24
---------MOV SimpleName@@versionAttribute @TO@ InfixExpression@@versionAttribute == null @AT@ 6254 @LENGTH@ 16
---------MOV Operator@@== @TO@ InfixExpression@@versionAttribute == null @AT@ 6270 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@versionAttribute == null @AT@ 6274 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@versionAttribute == null || versionAttribute.getJavaType().isPrimitive() @AT@ 6306 @LENGTH@ 2
------INS MethodInvocation@@versionAttribute.getJavaType().isPrimitive() @TO@ InfixExpression@@versionAttribute == null || versionAttribute.getJavaType().isPrimitive() @AT@ 6310 @LENGTH@ 44
---------INS MethodInvocation@@MethodName:getJavaType:[] @TO@ MethodInvocation@@versionAttribute.getJavaType().isPrimitive() @AT@ 6310 @LENGTH@ 30
---------INS SimpleName@@Name:versionAttribute @TO@ MethodInvocation@@versionAttribute.getJavaType().isPrimitive() @AT@ 6310 @LENGTH@ 16
---------INS SimpleName@@MethodName:isPrimitive:[] @TO@ MethodInvocation@@versionAttribute.getJavaType().isPrimitive() @AT@ 6341 @LENGTH@ 13


UPD FieldDeclaration@@private, static, final, String, [COMPONENT_PACKAGE="org.apache.camel.component.test"] @TO@ protected, static, final, String, [COMPONENT_PACKAGE="org.apache.camel.component.test"] @AT@ 1344 @LENGTH@ 82
---UPD Modifier@@private @TO@ protected @AT@ 1344 @LENGTH@ 7


UPD TryStatement@@try {  Enumeration ifaces=NetworkInterface.getNetworkInterfaces();  while (ifaces.hasMoreElements()) {    NetworkInterface iface=(NetworkInterface)ifaces.nextElement();    if (iface.isUp() && !iface.isLoopback() && !iface.isPointToPoint()) {      String name=iface.getName();      Enumeration<InetAddress> ifaceAdresses=iface.getInetAddresses();      while (ifaceAdresses.hasMoreElements()) {        InetAddress ia=ifaceAdresses.nextElement();        if (!ia.isLoopbackAddress() && !ia.getHostAddress().contains(":")) {          Set<InetAddress> addresses=interfaceAddressMap.get(name);          if (addresses == null) {            addresses=new LinkedHashSet<InetAddress>();          }          addresses.add(ia);          interfaceAddressMap.put(name,addresses);        }      }    }  }} catch (SocketException ex) {} @TO@ try {  Enumeration<NetworkInterface> ifaces=NetworkInterface.getNetworkInterfaces();  while (ifaces.hasMoreElements()) {    NetworkInterface iface=ifaces.nextElement();    if (iface.isUp() && !iface.isLoopback() && !iface.isPointToPoint()) {      String name=iface.getName();      Enumeration<InetAddress> ifaceAdresses=iface.getInetAddresses();      while (ifaceAdresses.hasMoreElements()) {        InetAddress ia=ifaceAdresses.nextElement();        if (!ia.isLoopbackAddress() && !ia.getHostAddress().contains(":")) {          Set<InetAddress> addresses=interfaceAddressMap.get(name);          if (addresses == null) {            addresses=new LinkedHashSet<InetAddress>();          }          addresses.add(ia);          interfaceAddressMap.put(name,addresses);        }      }    }  }} catch (SocketException ex) {} @AT@ 1658 @LENGTH@ 1302
---UPD VariableDeclarationStatement@@Enumeration ifaces=NetworkInterface.getNetworkInterfaces(); @TO@ Enumeration<NetworkInterface> ifaces=NetworkInterface.getNetworkInterfaces(); @AT@ 1676 @LENGTH@ 61
------INS ParameterizedType@@Enumeration<NetworkInterface> @TO@ VariableDeclarationStatement@@Enumeration ifaces=NetworkInterface.getNetworkInterfaces(); @AT@ 1676 @LENGTH@ 29
---------INS SimpleType@@Enumeration @TO@ ParameterizedType@@Enumeration<NetworkInterface> @AT@ 1676 @LENGTH@ 11
---------INS SimpleType@@NetworkInterface @TO@ ParameterizedType@@Enumeration<NetworkInterface> @AT@ 1688 @LENGTH@ 16
------DEL SimpleType@@Enumeration @AT@ 1676 @LENGTH@ 11
---UPD WhileStatement@@while (ifaces.hasMoreElements()) {  NetworkInterface iface=(NetworkInterface)ifaces.nextElement();  if (iface.isUp() && !iface.isLoopback() && !iface.isPointToPoint()) {    String name=iface.getName();    Enumeration<InetAddress> ifaceAdresses=iface.getInetAddresses();    while (ifaceAdresses.hasMoreElements()) {      InetAddress ia=ifaceAdresses.nextElement();      if (!ia.isLoopbackAddress() && !ia.getHostAddress().contains(":")) {        Set<InetAddress> addresses=interfaceAddressMap.get(name);        if (addresses == null) {          addresses=new LinkedHashSet<InetAddress>();        }        addresses.add(ia);        interfaceAddressMap.put(name,addresses);      }    }  }} @TO@ while (ifaces.hasMoreElements()) {  NetworkInterface iface=ifaces.nextElement();  if (iface.isUp() && !iface.isLoopback() && !iface.isPointToPoint()) {    String name=iface.getName();    Enumeration<InetAddress> ifaceAdresses=iface.getInetAddresses();    while (ifaceAdresses.hasMoreElements()) {      InetAddress ia=ifaceAdresses.nextElement();      if (!ia.isLoopbackAddress() && !ia.getHostAddress().contains(":")) {        Set<InetAddress> addresses=interfaceAddressMap.get(name);        if (addresses == null) {          addresses=new LinkedHashSet<InetAddress>();        }        addresses.add(ia);        interfaceAddressMap.put(name,addresses);      }    }  }} @AT@ 1750 @LENGTH@ 1142
------UPD Block@@WhileBody:{  NetworkInterface iface=(NetworkInterface)ifaces.nextElement();  if (iface.isUp() && !iface.isLoopback() && !iface.isPointToPoint()) {    String name=iface.getName();    Enumeration<InetAddress> ifaceAdresses=iface.getInetAddresses();    while (ifaceAdresses.hasMoreElements()) {      InetAddress ia=ifaceAdresses.nextElement();      if (!ia.isLoopbackAddress() && !ia.getHostAddress().contains(":")) {        Set<InetAddress> addresses=interfaceAddressMap.get(name);        if (addresses == null) {          addresses=new LinkedHashSet<InetAddress>();        }        addresses.add(ia);        interfaceAddressMap.put(name,addresses);      }    }  }} @TO@ WhileBody:{  NetworkInterface iface=ifaces.nextElement();  if (iface.isUp() && !iface.isLoopback() && !iface.isPointToPoint()) {    String name=iface.getName();    Enumeration<InetAddress> ifaceAdresses=iface.getInetAddresses();    while (ifaceAdresses.hasMoreElements()) {      InetAddress ia=ifaceAdresses.nextElement();      if (!ia.isLoopbackAddress() && !ia.getHostAddress().contains(":")) {        Set<InetAddress> addresses=interfaceAddressMap.get(name);        if (addresses == null) {          addresses=new LinkedHashSet<InetAddress>();        }        addresses.add(ia);        interfaceAddressMap.put(name,addresses);      }    }  }} @AT@ 1783 @LENGTH@ 1109
---------UPD VariableDeclarationStatement@@NetworkInterface iface=(NetworkInterface)ifaces.nextElement(); @TO@ NetworkInterface iface=ifaces.nextElement(); @AT@ 1801 @LENGTH@ 65
------------UPD VariableDeclarationFragment@@iface=(NetworkInterface)ifaces.nextElement() @TO@ iface=ifaces.nextElement() @AT@ 1818 @LENGTH@ 47
---------------DEL CastExpression@@(NetworkInterface)ifaces.nextElement() @AT@ 1826 @LENGTH@ 39
------------------DEL SimpleType@@NetworkInterface @AT@ 1827 @LENGTH@ 16
------------------DEL MethodInvocation@@ifaces.nextElement() @AT@ 1845 @LENGTH@ 20
---------------INS MethodInvocation@@ifaces.nextElement() @TO@ VariableDeclarationFragment@@iface=(NetworkInterface)ifaces.nextElement() @AT@ 1844 @LENGTH@ 20
------------------MOV SimpleName@@Name:ifaces @TO@ MethodInvocation@@ifaces.nextElement() @AT@ 1845 @LENGTH@ 6
------------------MOV SimpleName@@MethodName:nextElement:[] @TO@ MethodInvocation@@ifaces.nextElement() @AT@ 1852 @LENGTH@ 13


UPD TryStatement@@try {  log.info("Idle timeout detected for this writer, closing stream");  close();} catch (IOException e) {  log.error("error closing",e);} @TO@ try {  log.info("Idle timeout detected for this writer, closing stream");  flush();  close();} catch (IOException e) {  log.error("error closing",e);} @AT@ 4271 @LENGTH@ 153
---INS ExpressionStatement@@MethodInvocation:flush() @TO@ TryStatement@@try {  log.info("Idle timeout detected for this writer, closing stream");  close();} catch (IOException e) {  log.error("error closing",e);} @AT@ 4349 @LENGTH@ 8
------INS MethodInvocation@@MethodName:flush:[] @TO@ ExpressionStatement@@MethodInvocation:flush() @AT@ 4349 @LENGTH@ 7


UPD VariableDeclarationStatement@@Expression exp=SimpleLanguage.simple("body.getMyArray"); @TO@ Expression exp=SimpleLanguage.simple("body.myArray"); @AT@ 6412 @LENGTH@ 58
---UPD VariableDeclarationFragment@@exp=SimpleLanguage.simple("body.getMyArray") @TO@ exp=SimpleLanguage.simple("body.myArray") @AT@ 6423 @LENGTH@ 46
------UPD MethodInvocation@@SimpleLanguage.simple("body.getMyArray") @TO@ SimpleLanguage.simple("body.myArray") @AT@ 6429 @LENGTH@ 40
---------UPD SimpleName@@MethodName:simple:["body.getMyArray"] @TO@ MethodName:simple:["body.myArray"] @AT@ 6444 @LENGTH@ 25
------------UPD StringLiteral@@"body.getMyArray" @TO@ "body.myArray" @AT@ 6451 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:consumers.put(consumer.getPath(),consumer) @TO@ MethodInvocation:consumers.put(consumer.getEndpoint().getEndpointUri(),consumer) @AT@ 7369 @LENGTH@ 44
---UPD MethodInvocation@@consumers.put(consumer.getPath(),consumer) @TO@ consumers.put(consumer.getEndpoint().getEndpointUri(),consumer) @AT@ 7369 @LENGTH@ 43
------UPD SimpleName@@MethodName:put:[consumer.getPath(), consumer] @TO@ MethodName:put:[consumer.getEndpoint().getEndpointUri(), consumer] @AT@ 7379 @LENGTH@ 33
---------UPD MethodInvocation@@consumer.getPath() @TO@ consumer.getEndpoint().getEndpointUri() @AT@ 7383 @LENGTH@ 18
------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@consumer.getPath() @AT@ 7383 @LENGTH@ 22
------------UPD SimpleName@@MethodName:getPath:[] @TO@ MethodName:getEndpointUri:[] @AT@ 7392 @LENGTH@ 9


UPD IfStatement@@if (exchange.getIn().getBody() instanceof List) {  Iterable<?> payload=(Iterable<?>)exchange.getIn().getBody();  for (  final Object object : payload) {    Message message;    if (BatchMessage.class.isInstance(object)) {      BatchMessage<?> batchMessage=(BatchMessage<?>)object;      message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy());    } else {      message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy());    }    messages.add(message);  }} else {  Object payload=exchange.getIn().getBody();  Message message=JmsMessageHelper.createMessage(producer.getSession(),payload,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy());  messages.add(message);} @TO@ if (exchange.getIn().getBody() instanceof List) {  Iterable<?> payload=(Iterable<?>)exchange.getIn().getBody();  for (  final Object object : payload) {    Message message;    if (BatchMessage.class.isInstance(object)) {      BatchMessage<?> batchMessage=(BatchMessage<?>)object;      message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter());    } else {      message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter());    }    messages.add(message);  }} else {  Object payload=exchange.getIn().getBody();  Message message=JmsMessageHelper.createMessage(producer.getSession(),payload,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter());  messages.add(message);} @AT@ 3748 @LENGTH@ 1278
---UPD Block@@ThenBody:{  Iterable<?> payload=(Iterable<?>)exchange.getIn().getBody();  for (  final Object object : payload) {    Message message;    if (BatchMessage.class.isInstance(object)) {      BatchMessage<?> batchMessage=(BatchMessage<?>)object;      message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy());    } else {      message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy());    }    messages.add(message);  }} @TO@ ThenBody:{  Iterable<?> payload=(Iterable<?>)exchange.getIn().getBody();  for (  final Object object : payload) {    Message message;    if (BatchMessage.class.isInstance(object)) {      BatchMessage<?> batchMessage=(BatchMessage<?>)object;      message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter());    } else {      message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter());    }    messages.add(message);  }} @AT@ 3796 @LENGTH@ 890
------UPD EnhancedForStatement@@for (final Object object : payload) {  Message message;  if (BatchMessage.class.isInstance(object)) {    BatchMessage<?> batchMessage=(BatchMessage<?>)object;    message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy());  } else {    message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy());  }  messages.add(message);} @TO@ for (final Object object : payload) {  Message message;  if (BatchMessage.class.isInstance(object)) {    BatchMessage<?> batchMessage=(BatchMessage<?>)object;    message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter());  } else {    message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter());  }  messages.add(message);} @AT@ 3902 @LENGTH@ 766
---------UPD IfStatement@@if (BatchMessage.class.isInstance(object)) {  BatchMessage<?> batchMessage=(BatchMessage<?>)object;  message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy());} else {  message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy());} @TO@ if (BatchMessage.class.isInstance(object)) {  BatchMessage<?> batchMessage=(BatchMessage<?>)object;  message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter());} else {  message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter());} @AT@ 4005 @LENGTH@ 594
------------UPD Block@@ThenBody:{  BatchMessage<?> batchMessage=(BatchMessage<?>)object;  message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy());} @TO@ ThenBody:{  BatchMessage<?> batchMessage=(BatchMessage<?>)object;  message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter());} @AT@ 4048 @LENGTH@ 341
---------------UPD ExpressionStatement@@Assignment:message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy()) @TO@ Assignment:message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter()) @AT@ 4163 @LENGTH@ 200
------------------UPD Assignment@@message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy()) @TO@ message=JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter()) @AT@ 4163 @LENGTH@ 199
---------------------UPD MethodInvocation@@JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy()) @TO@ JmsMessageHelper.createMessage(producer.getSession(),batchMessage.getPayload(),batchMessage.getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter()) @AT@ 4173 @LENGTH@ 189
------------------------UPD SimpleName@@MethodName:createMessage:[producer.getSession(), batchMessage.getPayload(), batchMessage.getHeaders(), getSjmsEndpoint().getJmsKeyFormatStrategy()] @TO@ MethodName:createMessage:[producer.getSession(), batchMessage.getPayload(), batchMessage.getHeaders(), getSjmsEndpoint().getJmsKeyFormatStrategy(), getSjmsEndpoint().getCamelContext().getTypeConverter()] @AT@ 4190 @LENGTH@ 172
---------------------------INS MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @TO@ SimpleName@@MethodName:createMessage:[producer.getSession(), batchMessage.getPayload(), batchMessage.getHeaders(), getSjmsEndpoint().getJmsKeyFormatStrategy()] @AT@ 4363 @LENGTH@ 54
------------------------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @AT@ 4363 @LENGTH@ 35
------------------------------INS MethodInvocation@@MethodName:getSjmsEndpoint:[] @TO@ MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @AT@ 4363 @LENGTH@ 17
------------------------------INS SimpleName@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @AT@ 4399 @LENGTH@ 18
------------UPD Block@@ElseBody:{  message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy());} @TO@ ElseBody:{  message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter());} @AT@ 4395 @LENGTH@ 204
---------------UPD ExpressionStatement@@Assignment:message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy()) @TO@ Assignment:message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter()) @AT@ 4425 @LENGTH@ 148
------------------UPD Assignment@@message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy()) @TO@ message=JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter()) @AT@ 4425 @LENGTH@ 147
---------------------UPD MethodInvocation@@JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy()) @TO@ JmsMessageHelper.createMessage(producer.getSession(),object,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter()) @AT@ 4435 @LENGTH@ 137
------------------------UPD SimpleName@@MethodName:createMessage:[producer.getSession(), object, exchange.getIn().getHeaders(), getSjmsEndpoint().getJmsKeyFormatStrategy()] @TO@ MethodName:createMessage:[producer.getSession(), object, exchange.getIn().getHeaders(), getSjmsEndpoint().getJmsKeyFormatStrategy(), getSjmsEndpoint().getCamelContext().getTypeConverter()] @AT@ 4452 @LENGTH@ 120
---------------------------INS MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @TO@ SimpleName@@MethodName:createMessage:[producer.getSession(), object, exchange.getIn().getHeaders(), getSjmsEndpoint().getJmsKeyFormatStrategy()] @AT@ 4628 @LENGTH@ 54
------------------------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @AT@ 4628 @LENGTH@ 35
------------------------------INS MethodInvocation@@MethodName:getSjmsEndpoint:[] @TO@ MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @AT@ 4628 @LENGTH@ 17
------------------------------INS SimpleName@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @AT@ 4664 @LENGTH@ 18
---UPD Block@@ElseBody:{  Object payload=exchange.getIn().getBody();  Message message=JmsMessageHelper.createMessage(producer.getSession(),payload,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy());  messages.add(message);} @TO@ ElseBody:{  Object payload=exchange.getIn().getBody();  Message message=JmsMessageHelper.createMessage(producer.getSession(),payload,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter());  messages.add(message);} @AT@ 4692 @LENGTH@ 334
------UPD VariableDeclarationStatement@@Message message=JmsMessageHelper.createMessage(producer.getSession(),payload,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy()); @TO@ Message message=JmsMessageHelper.createMessage(producer.getSession(),payload,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter()); @AT@ 4779 @LENGTH@ 186
---------UPD VariableDeclarationFragment@@message=JmsMessageHelper.createMessage(producer.getSession(),payload,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy()) @TO@ message=JmsMessageHelper.createMessage(producer.getSession(),payload,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter()) @AT@ 4787 @LENGTH@ 177
------------UPD MethodInvocation@@JmsMessageHelper.createMessage(producer.getSession(),payload,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy()) @TO@ JmsMessageHelper.createMessage(producer.getSession(),payload,exchange.getIn().getHeaders(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter()) @AT@ 4797 @LENGTH@ 167
---------------UPD SimpleName@@MethodName:createMessage:[producer.getSession(), payload, exchange.getIn().getHeaders(), getSjmsEndpoint().getJmsKeyFormatStrategy()] @TO@ MethodName:createMessage:[producer.getSession(), payload, exchange.getIn().getHeaders(), getSjmsEndpoint().getJmsKeyFormatStrategy(), getSjmsEndpoint().getCamelContext().getTypeConverter()] @AT@ 4843 @LENGTH@ 121
------------------INS MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @TO@ SimpleName@@MethodName:createMessage:[producer.getSession(), payload, exchange.getIn().getHeaders(), getSjmsEndpoint().getJmsKeyFormatStrategy()] @AT@ 5075 @LENGTH@ 54
---------------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @AT@ 5075 @LENGTH@ 35
---------------------INS MethodInvocation@@MethodName:getSjmsEndpoint:[] @TO@ MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @AT@ 5075 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @AT@ 5111 @LENGTH@ 18


UPD MethodDeclaration@@protected, voidMethodName:ParentTypeAwareTypeInformation, Type type, TypeDiscoverer<?> parent, Map<TypeVariable,Type> map,  @TO@ protected, voidMethodName:ParentTypeAwareTypeInformation, Type type, TypeDiscoverer<?> parent, Map<TypeVariable<?>,Type> map,  @AT@ 1209 @LENGTH@ 157
---UPD SingleVariableDeclaration@@Map<TypeVariable,Type> map @TO@ Map<TypeVariable<?>,Type> map @AT@ 1287 @LENGTH@ 27
------UPD ParameterizedType@@Map<TypeVariable,Type> @TO@ Map<TypeVariable<?>,Type> @AT@ 1287 @LENGTH@ 23
---------INS ParameterizedType@@TypeVariable<?> @TO@ ParameterizedType@@Map<TypeVariable,Type> @AT@ 1373 @LENGTH@ 15
------------MOV SimpleType@@TypeVariable @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1291 @LENGTH@ 12
------------INS WildcardType@@? @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1386 @LENGTH@ 1
---UPD SuperConstructorInvocation@@super(type,map);
 @TO@ super(type,mergeMaps(parent,map));
 @AT@ 1321 @LENGTH@ 17
------DEL SimpleName@@map @AT@ 1333 @LENGTH@ 3
------INS MethodInvocation@@mergeMaps(parent,map) @TO@ SuperConstructorInvocation@@super(type,map);
 @AT@ 1418 @LENGTH@ 22
---------INS SimpleName@@MethodName:mergeMaps:[parent, map] @TO@ MethodInvocation@@mergeMaps(parent,map) @AT@ 1418 @LENGTH@ 22
------------INS SimpleName@@parent @TO@ SimpleName@@MethodName:mergeMaps:[parent, map] @AT@ 1428 @LENGTH@ 6
------------INS SimpleName@@map @TO@ SimpleName@@MethodName:mergeMaps:[parent, map] @AT@ 1436 @LENGTH@ 3


UPD IfStatement@@if (headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().get(0) == null) {  LOG.trace("Drop CXF message protocol header: {}={}",entry.getKey(),entry.getValue());} else {  camelMessage.setHeader(entry.getKey(),entry.getValue().get(0));} @TO@ if (headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().get(0) == null) {  LOG.trace("Drop CXF message protocol header: {}={}",entry.getKey(),entry.getValue());} else {  camelMessage.setHeader(entry.getKey(),entry.getValue().get(0));} @AT@ 12027 @LENGTH@ 459
---UPD InfixExpression@@headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().get(0) == null @TO@ headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().get(0) == null @AT@ 12031 @LENGTH@ 147
------UPD MethodInvocation@@headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange) @TO@ headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),camelExchange) @AT@ 12031 @LENGTH@ 95
---------UPD SimpleName@@MethodName:applyFilterToCamelHeaders:[entry.getKey(), entry.getValue(), camelExchange] @TO@ MethodName:applyFilterToExternalHeaders:[entry.getKey(), entry.getValue(), camelExchange] @AT@ 12052 @LENGTH@ 74


UPD TypeDeclaration@@[public]DockerConfiguration,  @TO@ [@UriParams, public]DockerConfiguration,  @AT@ 1014 @LENGTH@ 1208
---INS MarkerAnnotation@@@UriParams @TO@ TypeDeclaration@@[public]DockerConfiguration,  @AT@ 1090 @LENGTH@ 10


UPD IfStatement@@if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  if (producer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 6833 @LENGTH@ 284
---UPD Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  if (producer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 6857 @LENGTH@ 260
------INS IfStatement@@if (producer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @TO@ Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @AT@ 6975 @LENGTH@ 276
---------INS InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @TO@ IfStatement@@if (producer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 6979 @LENGTH@ 61
------------INS MethodInvocation@@producer.getConfiguration().getSslContextParameters() @TO@ InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @AT@ 6979 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@producer.getConfiguration().getSslContextParameters() @AT@ 6979 @LENGTH@ 27
---------------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.getConfiguration().getSslContextParameters() @AT@ 6979 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getSslContextParameters:[] @TO@ MethodInvocation@@producer.getConfiguration().getSslContextParameters() @AT@ 7007 @LENGTH@ 25
------------INS Operator@@== @TO@ InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @AT@ 7032 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @AT@ 7036 @LENGTH@ 4
---------INS Block@@ThenBody:{  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @TO@ IfStatement@@if (producer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7042 @LENGTH@ 209
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 6975 @LENGTH@ 89
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 6975 @LENGTH@ 89


UPD FieldDeclaration@@public, static, final, PathFilter, [hiddenFileFilter=new PathFilter(){
  public boolean accept(  Path p){
    String name=p.getName();
    return !name.startsWith("_") && !name.startsWith(".");
  }
}
] @TO@ protected, static, final, PathFilter, [hiddenFileFilter=new PathFilter(){
  public boolean accept(  Path p){
    String name=p.getName();
    return !name.startsWith("_") && !name.startsWith(".");
  }
}
] @AT@ 1988 @LENGTH@ 207
---UPD Modifier@@public @TO@ protected @AT@ 1988 @LENGTH@ 6


INS MethodDeclaration@@private, List<String>, MethodName:normalizedHeaderElements, String authorizationHeader,  @TO@ TypeDeclaration@@[public]SigningSupportTest,  @AT@ 8550 @LENGTH@ 340
---INS Modifier@@private @TO@ MethodDeclaration@@private, List<String>, MethodName:normalizedHeaderElements, String authorizationHeader,  @AT@ 8550 @LENGTH@ 7
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@private, List<String>, MethodName:normalizedHeaderElements, String authorizationHeader,  @AT@ 8558 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 8558 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 8563 @LENGTH@ 6
---INS SimpleName@@MethodName:normalizedHeaderElements @TO@ MethodDeclaration@@private, List<String>, MethodName:normalizedHeaderElements, String authorizationHeader,  @AT@ 8571 @LENGTH@ 24
---INS SingleVariableDeclaration@@String authorizationHeader @TO@ MethodDeclaration@@private, List<String>, MethodName:normalizedHeaderElements, String authorizationHeader,  @AT@ 8596 @LENGTH@ 26
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String authorizationHeader @AT@ 8596 @LENGTH@ 6
------INS SimpleName@@authorizationHeader @TO@ SingleVariableDeclaration@@String authorizationHeader @AT@ 8603 @LENGTH@ 19
---INS VariableDeclarationStatement@@List<String> headerElements=new ArrayList<>(); @TO@ MethodDeclaration@@private, List<String>, MethodName:normalizedHeaderElements, String authorizationHeader,  @AT@ 8628 @LENGTH@ 48
------INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> headerElements=new ArrayList<>(); @AT@ 8628 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 8628 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 8633 @LENGTH@ 6
------INS VariableDeclarationFragment@@headerElements=new ArrayList<>() @TO@ VariableDeclarationStatement@@List<String> headerElements=new ArrayList<>(); @AT@ 8641 @LENGTH@ 34
---------INS SimpleName@@headerElements @TO@ VariableDeclarationFragment@@headerElements=new ArrayList<>() @AT@ 8641 @LENGTH@ 14
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@headerElements=new ArrayList<>() @AT@ 8658 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 8658 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 8662 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 8662 @LENGTH@ 9
---INS EnhancedForStatement@@for (String element : authorizationHeader.split("[,\\s]")) {  if (element.trim().length() > 0) {    headerElements.add(element.trim());  }} @TO@ MethodDeclaration@@private, List<String>, MethodName:normalizedHeaderElements, String authorizationHeader,  @AT@ 8679 @LENGTH@ 147
------INS SingleVariableDeclaration@@String element @TO@ EnhancedForStatement@@for (String element : authorizationHeader.split("[,\\s]")) {  if (element.trim().length() > 0) {    headerElements.add(element.trim());  }} @AT@ 8684 @LENGTH@ 14
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String element @AT@ 8684 @LENGTH@ 6
---------INS SimpleName@@element @TO@ SingleVariableDeclaration@@String element @AT@ 8691 @LENGTH@ 7
------INS MethodInvocation@@authorizationHeader.split("[,\\s]") @TO@ EnhancedForStatement@@for (String element : authorizationHeader.split("[,\\s]")) {  if (element.trim().length() > 0) {    headerElements.add(element.trim());  }} @AT@ 8701 @LENGTH@ 35
---------INS SimpleName@@Name:authorizationHeader @TO@ MethodInvocation@@authorizationHeader.split("[,\\s]") @AT@ 8701 @LENGTH@ 19
---------INS SimpleName@@MethodName:split:["[,\\s]"] @TO@ MethodInvocation@@authorizationHeader.split("[,\\s]") @AT@ 8721 @LENGTH@ 15
------------INS StringLiteral@@"[,\\s]" @TO@ SimpleName@@MethodName:split:["[,\\s]"] @AT@ 8727 @LENGTH@ 8
------INS IfStatement@@if (element.trim().length() > 0) {  headerElements.add(element.trim());} @TO@ EnhancedForStatement@@for (String element : authorizationHeader.split("[,\\s]")) {  if (element.trim().length() > 0) {    headerElements.add(element.trim());  }} @AT@ 8743 @LENGTH@ 79
---------INS InfixExpression@@element.trim().length() > 0 @TO@ IfStatement@@if (element.trim().length() > 0) {  headerElements.add(element.trim());} @AT@ 8747 @LENGTH@ 27
------------INS MethodInvocation@@element.trim().length() @TO@ InfixExpression@@element.trim().length() > 0 @AT@ 8747 @LENGTH@ 23
---------------INS MethodInvocation@@MethodName:trim:[] @TO@ MethodInvocation@@element.trim().length() @AT@ 8747 @LENGTH@ 14
---------------INS SimpleName@@Name:element @TO@ MethodInvocation@@element.trim().length() @AT@ 8747 @LENGTH@ 7
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@element.trim().length() @AT@ 8762 @LENGTH@ 8
------------INS Operator@@> @TO@ InfixExpression@@element.trim().length() > 0 @AT@ 8770 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@element.trim().length() > 0 @AT@ 8773 @LENGTH@ 1
---------INS Block@@ThenBody:{  headerElements.add(element.trim());} @TO@ IfStatement@@if (element.trim().length() > 0) {  headerElements.add(element.trim());} @AT@ 8776 @LENGTH@ 46
------------INS ExpressionStatement@@MethodInvocation:headerElements.add(element.trim()) @TO@ Block@@ThenBody:{  headerElements.add(element.trim());} @AT@ 8782 @LENGTH@ 35
---------------INS MethodInvocation@@headerElements.add(element.trim()) @TO@ ExpressionStatement@@MethodInvocation:headerElements.add(element.trim()) @AT@ 8782 @LENGTH@ 34
------------------INS SimpleName@@Name:headerElements @TO@ MethodInvocation@@headerElements.add(element.trim()) @AT@ 8782 @LENGTH@ 14
------------------INS SimpleName@@MethodName:add:[element.trim()] @TO@ MethodInvocation@@headerElements.add(element.trim()) @AT@ 8797 @LENGTH@ 19
---------------------INS MethodInvocation@@element.trim() @TO@ SimpleName@@MethodName:add:[element.trim()] @AT@ 8801 @LENGTH@ 14
------------------------INS SimpleName@@Name:element @TO@ MethodInvocation@@element.trim() @AT@ 8801 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@element.trim() @AT@ 8809 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:Collections.sort(headerElements) @TO@ MethodDeclaration@@private, List<String>, MethodName:normalizedHeaderElements, String authorizationHeader,  @AT@ 8829 @LENGTH@ 33
------INS MethodInvocation@@Collections.sort(headerElements) @TO@ ExpressionStatement@@MethodInvocation:Collections.sort(headerElements) @AT@ 8829 @LENGTH@ 32
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.sort(headerElements) @AT@ 8829 @LENGTH@ 11
---------INS SimpleName@@MethodName:sort:[headerElements] @TO@ MethodInvocation@@Collections.sort(headerElements) @AT@ 8841 @LENGTH@ 20
------------INS SimpleName@@headerElements @TO@ SimpleName@@MethodName:sort:[headerElements] @AT@ 8846 @LENGTH@ 14
---INS ReturnStatement@@SimpleName:headerElements @TO@ MethodDeclaration@@private, List<String>, MethodName:normalizedHeaderElements, String authorizationHeader,  @AT@ 8865 @LENGTH@ 22
------INS SimpleName@@headerElements @TO@ ReturnStatement@@SimpleName:headerElements @AT@ 8872 @LENGTH@ 14


UPD IfStatement@@if (authorities instanceof String) {  AuthorityUtils.commaSeparatedStringToAuthorityList((String)authorities);} @TO@ if (authorities instanceof String) {  return AuthorityUtils.commaSeparatedStringToAuthorityList((String)authorities);} @AT@ 2736 @LENGTH@ 117
---UPD Block@@ThenBody:{  AuthorityUtils.commaSeparatedStringToAuthorityList((String)authorities);} @TO@ ThenBody:{  return AuthorityUtils.commaSeparatedStringToAuthorityList((String)authorities);} @AT@ 2771 @LENGTH@ 82
------INS ReturnStatement@@MethodInvocation:AuthorityUtils.commaSeparatedStringToAuthorityList((String)authorities) @TO@ Block@@ThenBody:{  AuthorityUtils.commaSeparatedStringToAuthorityList((String)authorities);} @AT@ 2776 @LENGTH@ 80
---------MOV MethodInvocation@@AuthorityUtils.commaSeparatedStringToAuthorityList((String)authorities) @TO@ ReturnStatement@@MethodInvocation:AuthorityUtils.commaSeparatedStringToAuthorityList((String)authorities) @AT@ 2776 @LENGTH@ 72
------DEL ExpressionStatement@@MethodInvocation:AuthorityUtils.commaSeparatedStringToAuthorityList((String)authorities) @AT@ 2776 @LENGTH@ 73


INS MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @TO@ TypeDeclaration@@[public]VaultWriteAttributeHandler, ReloadRequiredWriteAttributeHandler @AT@ 1648 @LENGTH@ 154
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1648 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1658 @LENGTH@ 7
---INS SimpleName@@MethodName:requiresRuntime @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1666 @LENGTH@ 15
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1682 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1682 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1699 @LENGTH@ 7
---INS ReturnStatement@@InfixExpression:context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1718 @LENGTH@ 78
------INS InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @TO@ ReturnStatement@@InfixExpression:context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 1725 @LENGTH@ 70
---------INS InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 1725 @LENGTH@ 46
------------INS MethodInvocation@@context.getRunningMode() @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 1725 @LENGTH@ 24
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRunningMode() @AT@ 1725 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getRunningMode:[] @TO@ MethodInvocation@@context.getRunningMode() @AT@ 1733 @LENGTH@ 16
------------INS Operator@@== @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 1749 @LENGTH@ 2
------------INS QualifiedName@@RunningMode.NORMAL @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 1753 @LENGTH@ 18
---------------INS SimpleName@@RunningMode @TO@ QualifiedName@@RunningMode.NORMAL @AT@ 1753 @LENGTH@ 11
---------------INS SimpleName@@NORMAL @TO@ QualifiedName@@RunningMode.NORMAL @AT@ 1765 @LENGTH@ 6
---------INS Operator@@&& @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 1771 @LENGTH@ 2
---------INS PrefixExpression@@!context.isBooting() @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 1775 @LENGTH@ 20
------------INS Operator@@! @TO@ PrefixExpression@@!context.isBooting() @AT@ 1775 @LENGTH@ 1
------------INS MethodInvocation@@context.isBooting() @TO@ PrefixExpression@@!context.isBooting() @AT@ 1776 @LENGTH@ 19
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isBooting() @AT@ 1776 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isBooting:[] @TO@ MethodInvocation@@context.isBooting() @AT@ 1784 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:testInitPaths, Exception,  @TO@ TypeDeclaration@@[public]RollingFileNamingStrategyTests,  @AT@ 2938 @LENGTH@ 469
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testInitPaths, Exception,  @AT@ 2938 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testInitPaths, Exception,  @AT@ 2945 @LENGTH@ 4
---INS SimpleName@@MethodName:testInitPaths @TO@ MethodDeclaration@@public, void, MethodName:testInitPaths, Exception,  @AT@ 2950 @LENGTH@ 13
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testInitPaths, Exception,  @AT@ 2973 @LENGTH@ 9
---INS VariableDeclarationStatement@@RollingFileNamingStrategy strategy=new RollingFileNamingStrategy(); @TO@ MethodDeclaration@@public, void, MethodName:testInitPaths, Exception,  @AT@ 2987 @LENGTH@ 69
------INS SimpleType@@RollingFileNamingStrategy @TO@ VariableDeclarationStatement@@RollingFileNamingStrategy strategy=new RollingFileNamingStrategy(); @AT@ 2987 @LENGTH@ 25
------INS VariableDeclarationFragment@@strategy=new RollingFileNamingStrategy() @TO@ VariableDeclarationStatement@@RollingFileNamingStrategy strategy=new RollingFileNamingStrategy(); @AT@ 3013 @LENGTH@ 42
---------INS SimpleName@@strategy @TO@ VariableDeclarationFragment@@strategy=new RollingFileNamingStrategy() @AT@ 3013 @LENGTH@ 8
---------INS ClassInstanceCreation@@RollingFileNamingStrategy[] @TO@ VariableDeclarationFragment@@strategy=new RollingFileNamingStrategy() @AT@ 3024 @LENGTH@ 31
------------INS New@@new @TO@ ClassInstanceCreation@@RollingFileNamingStrategy[] @AT@ 3024 @LENGTH@ 3
------------INS SimpleType@@RollingFileNamingStrategy @TO@ ClassInstanceCreation@@RollingFileNamingStrategy[] @AT@ 3028 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:strategy.init(new Path("/foo/jee-123.txt")) @TO@ MethodDeclaration@@public, void, MethodName:testInitPaths, Exception,  @AT@ 3059 @LENGTH@ 44
------INS MethodInvocation@@strategy.init(new Path("/foo/jee-123.txt")) @TO@ ExpressionStatement@@MethodInvocation:strategy.init(new Path("/foo/jee-123.txt")) @AT@ 3059 @LENGTH@ 43
---------INS SimpleName@@Name:strategy @TO@ MethodInvocation@@strategy.init(new Path("/foo/jee-123.txt")) @AT@ 3059 @LENGTH@ 8
---------INS SimpleName@@MethodName:init:[new Path("/foo/jee-123.txt")] @TO@ MethodInvocation@@strategy.init(new Path("/foo/jee-123.txt")) @AT@ 3068 @LENGTH@ 34
------------INS ClassInstanceCreation@@Path["/foo/jee-123.txt"] @TO@ SimpleName@@MethodName:init:[new Path("/foo/jee-123.txt")] @AT@ 3073 @LENGTH@ 28
---------------INS New@@new @TO@ ClassInstanceCreation@@Path["/foo/jee-123.txt"] @AT@ 3073 @LENGTH@ 3
---------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path["/foo/jee-123.txt"] @AT@ 3077 @LENGTH@ 4
---------------INS StringLiteral@@"/foo/jee-123.txt" @TO@ ClassInstanceCreation@@Path["/foo/jee-123.txt"] @AT@ 3082 @LENGTH@ 18
---INS VariableDeclarationStatement@@int counter=TestUtils.readField("counter",strategy); @TO@ MethodDeclaration@@public, void, MethodName:testInitPaths, Exception,  @AT@ 3106 @LENGTH@ 55
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int counter=TestUtils.readField("counter",strategy); @AT@ 3106 @LENGTH@ 3
------INS VariableDeclarationFragment@@counter=TestUtils.readField("counter",strategy) @TO@ VariableDeclarationStatement@@int counter=TestUtils.readField("counter",strategy); @AT@ 3110 @LENGTH@ 50
---------INS SimpleName@@counter @TO@ VariableDeclarationFragment@@counter=TestUtils.readField("counter",strategy) @AT@ 3110 @LENGTH@ 7
---------INS MethodInvocation@@TestUtils.readField("counter",strategy) @TO@ VariableDeclarationFragment@@counter=TestUtils.readField("counter",strategy) @AT@ 3120 @LENGTH@ 40
------------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.readField("counter",strategy) @AT@ 3120 @LENGTH@ 9
------------INS SimpleName@@MethodName:readField:["counter", strategy] @TO@ MethodInvocation@@TestUtils.readField("counter",strategy) @AT@ 3130 @LENGTH@ 30
---------------INS StringLiteral@@"counter" @TO@ SimpleName@@MethodName:readField:["counter", strategy] @AT@ 3140 @LENGTH@ 9
---------------INS SimpleName@@strategy @TO@ SimpleName@@MethodName:readField:["counter", strategy] @AT@ 3151 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(counter,is(124)) @TO@ MethodDeclaration@@public, void, MethodName:testInitPaths, Exception,  @AT@ 3164 @LENGTH@ 29
------INS MethodInvocation@@assertThat(counter,is(124)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(counter,is(124)) @AT@ 3164 @LENGTH@ 28
---------INS SimpleName@@MethodName:assertThat:[counter, is(124)] @TO@ MethodInvocation@@assertThat(counter,is(124)) @AT@ 3164 @LENGTH@ 28
------------INS SimpleName@@counter @TO@ SimpleName@@MethodName:assertThat:[counter, is(124)] @AT@ 3175 @LENGTH@ 7
------------INS MethodInvocation@@is(124) @TO@ SimpleName@@MethodName:assertThat:[counter, is(124)] @AT@ 3184 @LENGTH@ 7
---------------INS SimpleName@@MethodName:is:[124] @TO@ MethodInvocation@@is(124) @AT@ 3184 @LENGTH@ 7
------------------INS NumberLiteral@@124 @TO@ SimpleName@@MethodName:is:[124] @AT@ 3187 @LENGTH@ 3
---------------INS SimpleName@@MethodName:is:[124] @TO@ MethodInvocation@@is(124) @AT@ 3184 @LENGTH@ 7
------------------INS NumberLiteral@@124 @TO@ SimpleName@@MethodName:is:[124] @AT@ 3187 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:strategy.init(new Path("/projects/loganalysis/yarn/2014/07/24/00/logIngestion-98e327c1-5f24-463a-88d7-571195529825-0.txt")) @TO@ MethodDeclaration@@public, void, MethodName:testInitPaths, Exception,  @AT@ 3196 @LENGTH@ 124
------INS MethodInvocation@@strategy.init(new Path("/projects/loganalysis/yarn/2014/07/24/00/logIngestion-98e327c1-5f24-463a-88d7-571195529825-0.txt")) @TO@ ExpressionStatement@@MethodInvocation:strategy.init(new Path("/projects/loganalysis/yarn/2014/07/24/00/logIngestion-98e327c1-5f24-463a-88d7-571195529825-0.txt")) @AT@ 3196 @LENGTH@ 123
---------INS SimpleName@@Name:strategy @TO@ MethodInvocation@@strategy.init(new Path("/projects/loganalysis/yarn/2014/07/24/00/logIngestion-98e327c1-5f24-463a-88d7-571195529825-0.txt")) @AT@ 3196 @LENGTH@ 8
---------INS SimpleName@@MethodName:init:[new Path("/projects/loganalysis/yarn/2014/07/24/00/logIngestion-98e327c1-5f24-463a-88d7-571195529825-0.txt")] @TO@ MethodInvocation@@strategy.init(new Path("/projects/loganalysis/yarn/2014/07/24/00/logIngestion-98e327c1-5f24-463a-88d7-571195529825-0.txt")) @AT@ 3205 @LENGTH@ 114
------------INS ClassInstanceCreation@@Path["/projects/loganalysis/yarn/2014/07/24/00/logIngestion-98e327c1-5f24-463a-88d7-571195529825-0.txt"] @TO@ SimpleName@@MethodName:init:[new Path("/projects/loganalysis/yarn/2014/07/24/00/logIngestion-98e327c1-5f24-463a-88d7-571195529825-0.txt")] @AT@ 3210 @LENGTH@ 108
---------------INS New@@new @TO@ ClassInstanceCreation@@Path["/projects/loganalysis/yarn/2014/07/24/00/logIngestion-98e327c1-5f24-463a-88d7-571195529825-0.txt"] @AT@ 3210 @LENGTH@ 3
---------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path["/projects/loganalysis/yarn/2014/07/24/00/logIngestion-98e327c1-5f24-463a-88d7-571195529825-0.txt"] @AT@ 3214 @LENGTH@ 4
---------------INS StringLiteral@@"/projects/loganalysis/yarn/2014/07/24/00/logIngestion-98e327c1-5f24-463a-88d7-571195529825-0.txt" @TO@ ClassInstanceCreation@@Path["/projects/loganalysis/yarn/2014/07/24/00/logIngestion-98e327c1-5f24-463a-88d7-571195529825-0.txt"] @AT@ 3219 @LENGTH@ 98
---INS ExpressionStatement@@Assignment:counter=TestUtils.readField("counter",strategy) @TO@ MethodDeclaration@@public, void, MethodName:testInitPaths, Exception,  @AT@ 3323 @LENGTH@ 51
------INS Assignment@@counter=TestUtils.readField("counter",strategy) @TO@ ExpressionStatement@@Assignment:counter=TestUtils.readField("counter",strategy) @AT@ 3323 @LENGTH@ 50
---------INS SimpleName@@counter @TO@ Assignment@@counter=TestUtils.readField("counter",strategy) @AT@ 3323 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@counter=TestUtils.readField("counter",strategy) @AT@ 3330 @LENGTH@ 1
---------INS MethodInvocation@@TestUtils.readField("counter",strategy) @TO@ Assignment@@counter=TestUtils.readField("counter",strategy) @AT@ 3333 @LENGTH@ 40
------------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.readField("counter",strategy) @AT@ 3333 @LENGTH@ 9
------------INS SimpleName@@MethodName:readField:["counter", strategy] @TO@ MethodInvocation@@TestUtils.readField("counter",strategy) @AT@ 3343 @LENGTH@ 30
---------------INS StringLiteral@@"counter" @TO@ SimpleName@@MethodName:readField:["counter", strategy] @AT@ 3353 @LENGTH@ 9
---------------INS SimpleName@@strategy @TO@ SimpleName@@MethodName:readField:["counter", strategy] @AT@ 3364 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(counter,is(1)) @TO@ MethodDeclaration@@public, void, MethodName:testInitPaths, Exception,  @AT@ 3377 @LENGTH@ 27
------INS MethodInvocation@@assertThat(counter,is(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(counter,is(1)) @AT@ 3377 @LENGTH@ 26
---------INS SimpleName@@MethodName:assertThat:[counter, is(1)] @TO@ MethodInvocation@@assertThat(counter,is(1)) @AT@ 3377 @LENGTH@ 26
------------INS SimpleName@@counter @TO@ SimpleName@@MethodName:assertThat:[counter, is(1)] @AT@ 3388 @LENGTH@ 7
------------INS MethodInvocation@@is(1) @TO@ SimpleName@@MethodName:assertThat:[counter, is(1)] @AT@ 3397 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 3397 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 3400 @LENGTH@ 1


UPD TypeDeclaration@@[@ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]OptimisticLockingFailureTests,  @TO@ [@Ignore, @ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]OptimisticLockingFailureTests,  @AT@ 1420 @LENGTH@ 2604
---INS MarkerAnnotation@@@Ignore @TO@ TypeDeclaration@@[@ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]OptimisticLockingFailureTests,  @AT@ 1445 @LENGTH@ 7


UPD FieldDeclaration@@private, static, final, Map<String,Exchanger<Object>>, [EXCHANGERS=new ConcurrentHashMap<>()] @TO@ private, static, final, Map<String,Exchanger<Object>>, [EXCHANGERS=new ConcurrentHashMap<String,Exchanger<Object>>()] @AT@ 2240 @LENGTH@ 91
---UPD VariableDeclarationFragment@@EXCHANGERS=new ConcurrentHashMap<>() @TO@ EXCHANGERS=new ConcurrentHashMap<String,Exchanger<Object>>() @AT@ 2292 @LENGTH@ 38
------UPD ClassInstanceCreation@@ConcurrentHashMap<>[] @TO@ ConcurrentHashMap<String,Exchanger<Object>>[] @AT@ 2305 @LENGTH@ 25
---------UPD ParameterizedType@@ConcurrentHashMap<> @TO@ ConcurrentHashMap<String,Exchanger<Object>> @AT@ 2309 @LENGTH@ 19
------------INS SimpleType@@String @TO@ ParameterizedType@@ConcurrentHashMap<> @AT@ 2327 @LENGTH@ 6
------------INS ParameterizedType@@Exchanger<Object> @TO@ ParameterizedType@@ConcurrentHashMap<> @AT@ 2335 @LENGTH@ 17
---------------INS SimpleType@@Exchanger @TO@ ParameterizedType@@Exchanger<Object> @AT@ 2335 @LENGTH@ 9
---------------INS SimpleType@@Object @TO@ ParameterizedType@@Exchanger<Object> @AT@ 2345 @LENGTH@ 6


DEL FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(Splitter.class)] @AT@ 2219 @LENGTH@ 74
---DEL Modifier@@private @AT@ 2219 @LENGTH@ 7
---DEL Modifier@@static @AT@ 2227 @LENGTH@ 6
---DEL Modifier@@final @AT@ 2234 @LENGTH@ 5
---DEL SimpleType@@Logger @AT@ 2240 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(Splitter.class) @AT@ 2247 @LENGTH@ 45
------DEL SimpleName@@LOG @AT@ 2247 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(Splitter.class) @AT@ 2253 @LENGTH@ 39
---------DEL SimpleName@@Name:LoggerFactory @AT@ 2253 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[Splitter.class] @AT@ 2267 @LENGTH@ 25
------------DEL TypeLiteral@@Splitter.class @AT@ 2277 @LENGTH@ 14


UPD MethodDeclaration@@public, OAuth2Authentication, MethodName:loadAuthentication, String accessTokenValue, AuthenticationException,  @TO@ public, OAuth2Authentication, MethodName:loadAuthentication, String accessTokenValue, AuthenticationException, InvalidTokenException,  @AT@ 8217 @LENGTH@ 860
---INS SimpleType@@InvalidTokenException @TO@ MethodDeclaration@@public, OAuth2Authentication, MethodName:loadAuthentication, String accessTokenValue, AuthenticationException,  @AT@ 8321 @LENGTH@ 21


INS MethodDeclaration@@public, voidMethodName:MapRecordProcessor, JobConf jconf,  @TO@ TypeDeclaration@@[public]MapRecordProcessor, RecordProcessor @AT@ 2859 @LENGTH@ 523
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:MapRecordProcessor, JobConf jconf,  @AT@ 2859 @LENGTH@ 6
---INS SimpleName@@MethodName:MapRecordProcessor @TO@ MethodDeclaration@@public, voidMethodName:MapRecordProcessor, JobConf jconf,  @AT@ 2866 @LENGTH@ 18
---INS SingleVariableDeclaration@@JobConf jconf @TO@ MethodDeclaration@@public, voidMethodName:MapRecordProcessor, JobConf jconf,  @AT@ 2885 @LENGTH@ 13
------INS SimpleType@@JobConf @TO@ SingleVariableDeclaration@@JobConf jconf @AT@ 2885 @LENGTH@ 7
------INS SimpleName@@jconf @TO@ SingleVariableDeclaration@@JobConf jconf @AT@ 2893 @LENGTH@ 5
---MOV VariableDeclarationStatement@@ObjectCache cache=ObjectCacheFactory.getCache(jconf); @TO@ MethodDeclaration@@public, voidMethodName:MapRecordProcessor, JobConf jconf,  @AT@ 3856 @LENGTH@ 55
---MOV ExpressionStatement@@MethodInvocation:execContext.setJc(jconf) @TO@ MethodDeclaration@@public, voidMethodName:MapRecordProcessor, JobConf jconf,  @AT@ 3929 @LENGTH@ 25
---MOV ExpressionStatement@@Assignment:mapWork=(MapWork)cache.retrieve(MAP_PLAN_KEY) @TO@ MethodDeclaration@@public, voidMethodName:MapRecordProcessor, JobConf jconf,  @AT@ 4001 @LENGTH@ 49
---MOV IfStatement@@if (mapWork == null) {  mapWork=Utilities.getMapWork(jconf);  cache.cache(MAP_PLAN_KEY,mapWork);  l4j.info("Plan: " + mapWork);  for (  String s : mapWork.getAliases()) {    l4j.info("Alias: " + s);  }} else {  Utilities.setMapWork(jconf,mapWork);} @TO@ MethodDeclaration@@public, voidMethodName:MapRecordProcessor, JobConf jconf,  @AT@ 4057 @LENGTH@ 308


INS VariableDeclarationStatement@@String indexId=exchange.getIn().getHeader(ElasticsearchConfiguration.PARAM_INDEX_ID,String.class); @TO@ MethodDeclaration@@public, void, MethodName:addToIndex, Client client, Exchange exchange,  @AT@ 5164 @LENGTH@ 101
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String indexId=exchange.getIn().getHeader(ElasticsearchConfiguration.PARAM_INDEX_ID,String.class); @AT@ 5164 @LENGTH@ 6
---INS VariableDeclarationFragment@@indexId=exchange.getIn().getHeader(ElasticsearchConfiguration.PARAM_INDEX_ID,String.class) @TO@ VariableDeclarationStatement@@String indexId=exchange.getIn().getHeader(ElasticsearchConfiguration.PARAM_INDEX_ID,String.class); @AT@ 5171 @LENGTH@ 93
------INS SimpleName@@indexId @TO@ VariableDeclarationFragment@@indexId=exchange.getIn().getHeader(ElasticsearchConfiguration.PARAM_INDEX_ID,String.class) @AT@ 5171 @LENGTH@ 7
------INS MethodInvocation@@exchange.getIn().getHeader(ElasticsearchConfiguration.PARAM_INDEX_ID,String.class) @TO@ VariableDeclarationFragment@@indexId=exchange.getIn().getHeader(ElasticsearchConfiguration.PARAM_INDEX_ID,String.class) @AT@ 5181 @LENGTH@ 83
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeader(ElasticsearchConfiguration.PARAM_INDEX_ID,String.class) @AT@ 5181 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeader(ElasticsearchConfiguration.PARAM_INDEX_ID,String.class) @AT@ 5181 @LENGTH@ 8
---------INS SimpleName@@MethodName:getHeader:[ElasticsearchConfiguration.PARAM_INDEX_ID, String.class] @TO@ MethodInvocation@@exchange.getIn().getHeader(ElasticsearchConfiguration.PARAM_INDEX_ID,String.class) @AT@ 5198 @LENGTH@ 66
------------INS QualifiedName@@ElasticsearchConfiguration.PARAM_INDEX_ID @TO@ SimpleName@@MethodName:getHeader:[ElasticsearchConfiguration.PARAM_INDEX_ID, String.class] @AT@ 5208 @LENGTH@ 41
---------------INS SimpleName@@ElasticsearchConfiguration @TO@ QualifiedName@@ElasticsearchConfiguration.PARAM_INDEX_ID @AT@ 5208 @LENGTH@ 26
---------------INS SimpleName@@PARAM_INDEX_ID @TO@ QualifiedName@@ElasticsearchConfiguration.PARAM_INDEX_ID @AT@ 5235 @LENGTH@ 14
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getHeader:[ElasticsearchConfiguration.PARAM_INDEX_ID, String.class] @AT@ 5251 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:getSecurityManager().checkPermission(GET_STACK_INSPECTOR_PERMMISSION) @TO@ MethodInvocation:getSecurityManager().checkPermission(GET_STACK_INSPECTOR_PERMISSION) @AT@ 1695 @LENGTH@ 70
---UPD MethodInvocation@@getSecurityManager().checkPermission(GET_STACK_INSPECTOR_PERMMISSION) @TO@ getSecurityManager().checkPermission(GET_STACK_INSPECTOR_PERMISSION) @AT@ 1695 @LENGTH@ 69
------UPD SimpleName@@MethodName:checkPermission:[GET_STACK_INSPECTOR_PERMMISSION] @TO@ MethodName:checkPermission:[GET_STACK_INSPECTOR_PERMISSION] @AT@ 1716 @LENGTH@ 48
---------UPD SimpleName@@GET_STACK_INSPECTOR_PERMMISSION @TO@ GET_STACK_INSPECTOR_PERMISSION @AT@ 1732 @LENGTH@ 31


UPD FieldDeclaration@@private, final, HiveConf, [hiveConf] @TO@ private, HiveConf, [hiveConf] @AT@ 3009 @LENGTH@ 32
---DEL Modifier@@final @AT@ 3017 @LENGTH@ 5


UPD EnhancedForStatement@@for (Tuple2<HiveKey,BytesWritable> item : output) {  String key=new String(item._1.getBytes());  String value=new String(item._2.getBytes());  String prefix=key.substring(0,key.indexOf('_'));  Long id=Long.valueOf(key.substring(5 + prefix.length()));  if (prefix.equals(prefix1)) {    assertTrue(id >= 0 && id < primaryRows);    primaryRowKeys.add(id);  } else {    assertEquals(prefix2,prefix);    assertTrue(id >= 0 && id < separateRows);    separateRowKeys.add(id);  }  assertEquals(prefix + "_value_" + id,value);} @TO@ for (Tuple2<HiveKey,BytesWritable> item : output) {  String key=bytesWritableToString(item._1);  String value=bytesWritableToString(item._2);  String prefix=key.substring(0,key.indexOf('_'));  Long id=Long.valueOf(key.substring(5 + prefix.length()));  if (prefix.equals(prefix1)) {    assertTrue(id >= 0 && id < primaryRows);    primaryRowKeys.add(id);  } else {    assertEquals(prefix2,prefix);    assertTrue(id >= 0 && id < separateRows);    separateRowKeys.add(id);  }  assertEquals(prefix + "_value_" + id,value);} @AT@ 4647 @LENGTH@ 599
---UPD VariableDeclarationStatement@@String key=new String(item._1.getBytes()); @TO@ String key=bytesWritableToString(item._1); @AT@ 4705 @LENGTH@ 44
------UPD VariableDeclarationFragment@@key=new String(item._1.getBytes()) @TO@ key=bytesWritableToString(item._1) @AT@ 4712 @LENGTH@ 36
---------DEL ClassInstanceCreation@@String[item._1.getBytes()] @AT@ 4718 @LENGTH@ 30
------------DEL New@@new @AT@ 4718 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 4722 @LENGTH@ 6
------------DEL MethodInvocation@@item._1.getBytes() @AT@ 4729 @LENGTH@ 18
---------------DEL QualifiedName@@Name:item._1 @AT@ 4729 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getBytes:[] @AT@ 4737 @LENGTH@ 10
---------INS MethodInvocation@@bytesWritableToString(item._1) @TO@ VariableDeclarationFragment@@key=new String(item._1.getBytes()) @AT@ 4718 @LENGTH@ 30
------------INS SimpleName@@MethodName:bytesWritableToString:[item._1] @TO@ MethodInvocation@@bytesWritableToString(item._1) @AT@ 4718 @LENGTH@ 30
---------------INS QualifiedName@@item._1 @TO@ SimpleName@@MethodName:bytesWritableToString:[item._1] @AT@ 4740 @LENGTH@ 7
------------------INS SimpleName@@item @TO@ QualifiedName@@item._1 @AT@ 4740 @LENGTH@ 4
------------------INS SimpleName@@_1 @TO@ QualifiedName@@item._1 @AT@ 4745 @LENGTH@ 2
---UPD VariableDeclarationStatement@@String value=new String(item._2.getBytes()); @TO@ String value=bytesWritableToString(item._2); @AT@ 4756 @LENGTH@ 46
------UPD VariableDeclarationFragment@@value=new String(item._2.getBytes()) @TO@ value=bytesWritableToString(item._2) @AT@ 4763 @LENGTH@ 38
---------DEL ClassInstanceCreation@@String[item._2.getBytes()] @AT@ 4771 @LENGTH@ 30
------------DEL New@@new @AT@ 4771 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 4775 @LENGTH@ 6
------------DEL MethodInvocation@@item._2.getBytes() @AT@ 4782 @LENGTH@ 18
---------------DEL QualifiedName@@Name:item._2 @AT@ 4782 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getBytes:[] @AT@ 4790 @LENGTH@ 10
---------INS MethodInvocation@@bytesWritableToString(item._2) @TO@ VariableDeclarationFragment@@value=new String(item._2.getBytes()) @AT@ 4771 @LENGTH@ 30
------------INS SimpleName@@MethodName:bytesWritableToString:[item._2] @TO@ MethodInvocation@@bytesWritableToString(item._2) @AT@ 4771 @LENGTH@ 30
---------------INS QualifiedName@@item._2 @TO@ SimpleName@@MethodName:bytesWritableToString:[item._2] @AT@ 4793 @LENGTH@ 7
------------------INS SimpleName@@item @TO@ QualifiedName@@item._2 @AT@ 4793 @LENGTH@ 4
------------------INS SimpleName@@_2 @TO@ QualifiedName@@item._2 @AT@ 4798 @LENGTH@ 2


UPD VariableDeclarationStatement@@Option[] options=new Option[]{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-test")}; @TO@ Option[] options=new Option[]{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-test")}; @AT@ 6379 @LENGTH@ 1576
---UPD VariableDeclarationFragment@@options=new Option[]{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-test")} @TO@ options=new Option[]{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-test")} @AT@ 6388 @LENGTH@ 1566
------UPD ArrayCreation@@new Option[]{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-test")} @TO@ new Option[]{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-test")} @AT@ 6480 @LENGTH@ 1474
---------UPD ArrayInitializer@@{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-test")} @TO@ {KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-test")} @AT@ 6493 @LENGTH@ 1461
------------DEL MethodInvocation@@KarafDistributionOption.replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")) @AT@ 7087 @LENGTH@ 152
---------------DEL SimpleName@@Name:KarafDistributionOption @AT@ 7087 @LENGTH@ 23
---------------DEL SimpleName@@MethodName:replaceConfigurationFile:["etc/config.properties", new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")] @AT@ 7111 @LENGTH@ 128
------------------DEL StringLiteral@@"etc/config.properties" @AT@ 7136 @LENGTH@ 23
------------------DEL ClassInstanceCreation@@File["src/test/resources/org/apache/camel/itest/karaf/config.properties"] @AT@ 7161 @LENGTH@ 77
---------------------DEL New@@new @AT@ 7161 @LENGTH@ 3
---------------------DEL SimpleType@@File @AT@ 7165 @LENGTH@ 4
---------------------DEL StringLiteral@@"src/test/resources/org/apache/camel/itest/karaf/config.properties" @AT@ 7170 @LENGTH@ 67


UPD VariableDeclarationStatement@@Message response=SjmsExchangeMessageHelper.createMessage(exchange,getSession(),((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy(),((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter()); @TO@ Message response=SjmsExchangeMessageHelper.createMessage(exchange,getSession(),getEndpoint().getJmsKeyFormatStrategy(),getEndpoint().getCamelContext().getTypeConverter()); @AT@ 6378 @LENGTH@ 210
---UPD VariableDeclarationFragment@@response=SjmsExchangeMessageHelper.createMessage(exchange,getSession(),((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy(),((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter()) @TO@ response=SjmsExchangeMessageHelper.createMessage(exchange,getSession(),getEndpoint().getJmsKeyFormatStrategy(),getEndpoint().getCamelContext().getTypeConverter()) @AT@ 6386 @LENGTH@ 201
------UPD MethodInvocation@@SjmsExchangeMessageHelper.createMessage(exchange,getSession(),((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy(),((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter()) @TO@ SjmsExchangeMessageHelper.createMessage(exchange,getSession(),getEndpoint().getJmsKeyFormatStrategy(),getEndpoint().getCamelContext().getTypeConverter()) @AT@ 6397 @LENGTH@ 190
---------UPD SimpleName@@MethodName:createMessage:[exchange, getSession(), ((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy(), ((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter()] @TO@ MethodName:createMessage:[exchange, getSession(), getEndpoint().getJmsKeyFormatStrategy(), getEndpoint().getCamelContext().getTypeConverter()] @AT@ 6423 @LENGTH@ 164
------------UPD MethodInvocation@@((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy() @TO@ getEndpoint().getJmsKeyFormatStrategy() @AT@ 6461 @LENGTH@ 56
---------------DEL ParenthesizedExpression@@((SjmsEndpoint)getEndpoint()) @AT@ 6461 @LENGTH@ 30
------------------DEL CastExpression@@(SjmsEndpoint)getEndpoint() @AT@ 6462 @LENGTH@ 28
---------------------DEL SimpleType@@SjmsEndpoint @AT@ 6463 @LENGTH@ 12
---------------------DEL MethodInvocation@@MethodName:getEndpoint:[] @AT@ 6477 @LENGTH@ 13
---------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy() @AT@ 6485 @LENGTH@ 13
------------UPD MethodInvocation@@((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter() @TO@ getEndpoint().getCamelContext().getTypeConverter() @AT@ 6519 @LENGTH@ 67
---------------DEL ParenthesizedExpression@@((SjmsEndpoint)getEndpoint()) @AT@ 6519 @LENGTH@ 30
------------------DEL CastExpression@@(SjmsEndpoint)getEndpoint() @AT@ 6520 @LENGTH@ 28
---------------------DEL SimpleType@@SjmsEndpoint @AT@ 6521 @LENGTH@ 12
---------------------DEL MethodInvocation@@MethodName:getEndpoint:[] @AT@ 6535 @LENGTH@ 13
---------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter() @AT@ 6526 @LENGTH@ 13


INS MethodDeclaration@@boolean, MethodName:isSortableResource,  @TO@ TypeDeclaration@@[public]MethodResourceMapping, [ResourceMapping] @AT@ 1207 @LENGTH@ 21
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:isSortableResource,  @AT@ 1199 @LENGTH@ 7
---INS SimpleName@@MethodName:isSortableResource @TO@ MethodDeclaration@@boolean, MethodName:isSortableResource,  @AT@ 1207 @LENGTH@ 18


UPD MethodDeclaration@@public, static, ResourceTransformationContext, MethodName:nextInChain, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @TO@ public, static, ResourceTransformationContext, MethodName:nextInChainResource, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @AT@ 2951 @LENGTH@ 451
---UPD SimpleName@@MethodName:nextInChain @TO@ MethodName:nextInChainResource @AT@ 2995 @LENGTH@ 11


UPD ReturnStatement@@InfixExpression:delegate != null && delegate.isOpen() @TO@ InfixExpression:delegate != null && (delegate.isOpen() || this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection")) @AT@ 1788 @LENGTH@ 45
---UPD InfixExpression@@delegate != null && delegate.isOpen() @TO@ delegate != null && (delegate.isOpen() || this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection")) @AT@ 1795 @LENGTH@ 37
------INS ParenthesizedExpression@@(delegate.isOpen() || this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection")) @TO@ InfixExpression@@delegate != null && delegate.isOpen() @AT@ 1819 @LENGTH@ 100
---------INS InfixExpression@@delegate.isOpen() || this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection") @TO@ ParenthesizedExpression@@(delegate.isOpen() || this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection")) @AT@ 1820 @LENGTH@ 98
------------MOV MethodInvocation@@delegate.isOpen() @TO@ InfixExpression@@delegate.isOpen() || this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection") @AT@ 1815 @LENGTH@ 17
------------INS Operator@@|| @TO@ InfixExpression@@delegate.isOpen() || this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection") @AT@ 1837 @LENGTH@ 2
------------INS MethodInvocation@@this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection") @TO@ InfixExpression@@delegate.isOpen() || this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection") @AT@ 1841 @LENGTH@ 77
---------------INS MethodInvocation@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection") @AT@ 1841 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection") @AT@ 1841 @LENGTH@ 24
---------------INS FieldAccess@@this.delegate @TO@ MethodInvocation@@this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection") @AT@ 1841 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.delegate @AT@ 1841 @LENGTH@ 4
------------------INS SimpleName@@delegate @TO@ FieldAccess@@this.delegate @AT@ 1846 @LENGTH@ 8
---------------INS SimpleName@@MethodName:contains:["AutorecoveringConnection"] @TO@ MethodInvocation@@this.delegate.getClass().getSimpleName().contains("AutorecoveringConnection") @AT@ 1882 @LENGTH@ 36
------------------INS StringLiteral@@"AutorecoveringConnection" @TO@ SimpleName@@MethodName:contains:["AutorecoveringConnection"] @AT@ 1891 @LENGTH@ 26


UPD MethodDeclaration@@protected, String, MethodName:resolveId, Element element, AbstractBeanDefinition definition, ParserContext parserContext, BeanDefinitionStoreException,  @TO@ protected, String, MethodName:resolveId, Element element, AbstractBeanDefinition definition, ParserContext parserContext,  @AT@ 4255 @LENGTH@ 258
---DEL SimpleType@@BeanDefinitionStoreException @AT@ 4373 @LENGTH@ 28


UPD TypeDeclaration@@[@UriEndpoint(scheme="ssh",consumerClass=SshConsumer.class), public]SshEndpoint, ScheduledPollEndpoint @TO@ [@UriEndpoint(scheme="ssh",consumerClass=SshConsumer.class,label="file"), public]SshEndpoint, ScheduledPollEndpoint @AT@ 1636 @LENGTH@ 7204
---UPD NormalAnnotation@@@UriEndpoint(scheme="ssh",consumerClass=SshConsumer.class) @TO@ @UriEndpoint(scheme="ssh",consumerClass=SshConsumer.class,label="file") @AT@ 1636 @LENGTH@ 63


UPD ExpressionStatement@@ClassInstanceCreation:new EndpointSubscription<T>(endpoint,subscriber,converter) @TO@ MethodInvocation:subscriber.add(new EndpointSubscription<T>(endpoint,subscriber,converter)) @AT@ 1386 @LENGTH@ 61
---INS MethodInvocation@@subscriber.add(new EndpointSubscription<T>(endpoint,subscriber,converter)) @TO@ ExpressionStatement@@ClassInstanceCreation:new EndpointSubscription<T>(endpoint,subscriber,converter) @AT@ 1386 @LENGTH@ 76
------INS SimpleName@@Name:subscriber @TO@ MethodInvocation@@subscriber.add(new EndpointSubscription<T>(endpoint,subscriber,converter)) @AT@ 1386 @LENGTH@ 10
------INS SimpleName@@MethodName:add:[new EndpointSubscription<T>(endpoint,subscriber,converter)] @TO@ MethodInvocation@@subscriber.add(new EndpointSubscription<T>(endpoint,subscriber,converter)) @AT@ 1397 @LENGTH@ 65
---------MOV ClassInstanceCreation@@EndpointSubscription<T>[endpoint, subscriber, converter] @TO@ SimpleName@@MethodName:add:[new EndpointSubscription<T>(endpoint,subscriber,converter)] @AT@ 1386 @LENGTH@ 60
---------MOV ClassInstanceCreation@@EndpointSubscription<T>[endpoint, subscriber, converter] @TO@ SimpleName@@MethodName:add:[new EndpointSubscription<T>(endpoint,subscriber,converter)] @AT@ 1386 @LENGTH@ 60


UPD ExpressionStatement@@MethodInvocation:clients.inMemory().withClient("my-trusted-client").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").accessTokenValiditySeconds(60).additionalInformation("foo:bar","spam:bucket") @TO@ MethodInvocation:clients.inMemory().withClient("my-trusted-client").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").accessTokenValiditySeconds(60).additionalInformation("foo:bar","spam:bucket","crap") @AT@ 6313 @LENGTH@ 383
---UPD MethodInvocation@@clients.inMemory().withClient("my-trusted-client").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").accessTokenValiditySeconds(60).additionalInformation("foo:bar","spam:bucket") @TO@ clients.inMemory().withClient("my-trusted-client").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").accessTokenValiditySeconds(60).additionalInformation("foo:bar","spam:bucket","crap") @AT@ 6313 @LENGTH@ 382
------UPD SimpleName@@MethodName:additionalInformation:["foo:bar", "spam:bucket"] @TO@ MethodName:additionalInformation:["foo:bar", "spam:bucket", "crap"] @AT@ 6648 @LENGTH@ 47
---------INS StringLiteral@@"crap" @TO@ SimpleName@@MethodName:additionalInformation:["foo:bar", "spam:bucket"] @AT@ 6696 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:assertEquals("Bye World",out) @TO@ MethodDeclaration@@public, void, MethodName:testHttpSimple, Exception,  @AT@ 1487 @LENGTH@ 31
---INS MethodInvocation@@assertEquals("Bye World",out) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Bye World",out) @AT@ 1487 @LENGTH@ 30
------INS SimpleName@@MethodName:assertEquals:["Bye World", out] @TO@ MethodInvocation@@assertEquals("Bye World",out) @AT@ 1487 @LENGTH@ 30
---------INS StringLiteral@@"Bye World" @TO@ SimpleName@@MethodName:assertEquals:["Bye World", out] @AT@ 1500 @LENGTH@ 11
---------INS SimpleName@@out @TO@ SimpleName@@MethodName:assertEquals:["Bye World", out] @AT@ 1513 @LENGTH@ 3


DEL MethodDeclaration@@public, void, MethodName:testComponentDocumentation, Exception,  @AT@ 2200 @LENGTH@ 287
---DEL Modifier@@public @AT@ 2200 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2207 @LENGTH@ 4
---DEL SimpleName@@MethodName:testComponentDocumentation @AT@ 2212 @LENGTH@ 26
---DEL SimpleType@@Exception @AT@ 2248 @LENGTH@ 9
---DEL VariableDeclarationStatement@@CamelContext context=new DefaultCamelContext(); @AT@ 2268 @LENGTH@ 49
------DEL SimpleType@@CamelContext @AT@ 2268 @LENGTH@ 12
------DEL VariableDeclarationFragment@@context=new DefaultCamelContext() @AT@ 2281 @LENGTH@ 35
---------DEL SimpleName@@context @AT@ 2281 @LENGTH@ 7
---------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 2291 @LENGTH@ 25
------------DEL New@@new @AT@ 2291 @LENGTH@ 3
------------DEL SimpleType@@DefaultCamelContext @AT@ 2295 @LENGTH@ 19
---DEL VariableDeclarationStatement@@String html=context.getComponentDocumentation("sap-trfc-server"); @AT@ 2326 @LENGTH@ 67
------DEL SimpleType@@String @AT@ 2326 @LENGTH@ 6
------DEL VariableDeclarationFragment@@html=context.getComponentDocumentation("sap-trfc-server") @AT@ 2333 @LENGTH@ 59
---------DEL SimpleName@@html @AT@ 2333 @LENGTH@ 4
---------DEL MethodInvocation@@context.getComponentDocumentation("sap-trfc-server") @AT@ 2340 @LENGTH@ 52
------------DEL SimpleName@@Name:context @AT@ 2340 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponentDocumentation:["sap-trfc-server"] @AT@ 2348 @LENGTH@ 44
---------------DEL StringLiteral@@"sap-trfc-server" @AT@ 2374 @LENGTH@ 17
---DEL ExpressionStatement@@MethodInvocation:assertNotNull("Should have found some auto-generated HTML if on Java 7",html) @AT@ 2402 @LENGTH@ 79
------DEL MethodInvocation@@assertNotNull("Should have found some auto-generated HTML if on Java 7",html) @AT@ 2402 @LENGTH@ 78
---------DEL SimpleName@@MethodName:assertNotNull:["Should have found some auto-generated HTML if on Java 7", html] @AT@ 2402 @LENGTH@ 78
------------DEL StringLiteral@@"Should have found some auto-generated HTML if on Java 7" @AT@ 2416 @LENGTH@ 57
------------DEL SimpleName@@html @AT@ 2475 @LENGTH@ 4


INS EnhancedForStatement@@for (Map.Entry<String,ServerData> entry : store.getEntries()) {  serverDataStoreListener.addServerDataListener(entry.getKey(),entry.getValue());} @TO@ MethodDeclaration@@public, void, MethodName:addServerDataStore, ServerDataStore store,  @AT@ 5445 @LENGTH@ 152
---INS SingleVariableDeclaration@@Map.Entry<String,ServerData> entry @TO@ EnhancedForStatement@@for (Map.Entry<String,ServerData> entry : store.getEntries()) {  serverDataStoreListener.addServerDataListener(entry.getKey(),entry.getValue());} @AT@ 5450 @LENGTH@ 35
------INS ParameterizedType@@Map.Entry<String,ServerData> @TO@ SingleVariableDeclaration@@Map.Entry<String,ServerData> entry @AT@ 5450 @LENGTH@ 29
---------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,ServerData> @AT@ 5450 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,ServerData> @AT@ 5460 @LENGTH@ 6
---------INS SimpleType@@ServerData @TO@ ParameterizedType@@Map.Entry<String,ServerData> @AT@ 5468 @LENGTH@ 10
------INS SimpleName@@entry @TO@ SingleVariableDeclaration@@Map.Entry<String,ServerData> entry @AT@ 5480 @LENGTH@ 5
---INS MethodInvocation@@store.getEntries() @TO@ EnhancedForStatement@@for (Map.Entry<String,ServerData> entry : store.getEntries()) {  serverDataStoreListener.addServerDataListener(entry.getKey(),entry.getValue());} @AT@ 5488 @LENGTH@ 18
------INS SimpleName@@Name:store @TO@ MethodInvocation@@store.getEntries() @AT@ 5488 @LENGTH@ 5
------INS SimpleName@@MethodName:getEntries:[] @TO@ MethodInvocation@@store.getEntries() @AT@ 5494 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:serverDataStoreListener.addServerDataListener(entry.getKey(),entry.getValue()) @TO@ EnhancedForStatement@@for (Map.Entry<String,ServerData> entry : store.getEntries()) {  serverDataStoreListener.addServerDataListener(entry.getKey(),entry.getValue());} @AT@ 5513 @LENGTH@ 80
------INS MethodInvocation@@serverDataStoreListener.addServerDataListener(entry.getKey(),entry.getValue()) @TO@ ExpressionStatement@@MethodInvocation:serverDataStoreListener.addServerDataListener(entry.getKey(),entry.getValue()) @AT@ 5513 @LENGTH@ 79
---------INS SimpleName@@Name:serverDataStoreListener @TO@ MethodInvocation@@serverDataStoreListener.addServerDataListener(entry.getKey(),entry.getValue()) @AT@ 5513 @LENGTH@ 23
---------INS SimpleName@@MethodName:addServerDataListener:[entry.getKey(), entry.getValue()] @TO@ MethodInvocation@@serverDataStoreListener.addServerDataListener(entry.getKey(),entry.getValue()) @AT@ 5537 @LENGTH@ 55
------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:addServerDataListener:[entry.getKey(), entry.getValue()] @AT@ 5559 @LENGTH@ 14
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 5559 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 5565 @LENGTH@ 8
------------INS MethodInvocation@@entry.getValue() @TO@ SimpleName@@MethodName:addServerDataListener:[entry.getKey(), entry.getValue()] @AT@ 5575 @LENGTH@ 16
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 5575 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 5581 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ MethodDeclaration@@public, void, MethodName:testComponentConfiguration, Exception,  @AT@ 1973 @LENGTH@ 82
---INS MethodInvocation@@assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1973 @LENGTH@ 81
------INS SimpleName@@MethodName:assertTrue:[json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1973 @LENGTH@ 81
---------INS MethodInvocation@@json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")] @AT@ 1984 @LENGTH@ 69
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1984 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["\"host\": { \"kind\": \"path\", \"type\": \"string\""] @TO@ MethodInvocation@@json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1989 @LENGTH@ 64
---------------INS StringLiteral@@"\"host\": { \"kind\": \"path\", \"type\": \"string\"" @TO@ SimpleName@@MethodName:contains:["\"host\": { \"kind\": \"path\", \"type\": \"string\""] @AT@ 1998 @LENGTH@ 54


UPD ExpressionStatement@@MethodInvocation:new InfinispanOperation(getCache(exchange)).process(exchange) @TO@ MethodInvocation:new InfinispanOperation(getCache(exchange),configuration).process(exchange) @AT@ 1855 @LENGTH@ 62
---UPD MethodInvocation@@new InfinispanOperation(getCache(exchange)).process(exchange) @TO@ new InfinispanOperation(getCache(exchange),configuration).process(exchange) @AT@ 1855 @LENGTH@ 61
------UPD ClassInstanceCreation@@InfinispanOperation[getCache(exchange)] @TO@ InfinispanOperation[getCache(exchange), configuration] @AT@ 1855 @LENGTH@ 43
---------INS SimpleName@@configuration @TO@ ClassInstanceCreation@@InfinispanOperation[getCache(exchange)] @AT@ 1899 @LENGTH@ 13


UPD VariableDeclarationStatement@@JobConf conf=new JobConf(hiveConf); @TO@ JobConf conf=new JobConf(new TezConfiguration(hiveConf)); @AT@ 40130 @LENGTH@ 37
---UPD VariableDeclarationFragment@@conf=new JobConf(hiveConf) @TO@ conf=new JobConf(new TezConfiguration(hiveConf)) @AT@ 40138 @LENGTH@ 28
------UPD ClassInstanceCreation@@JobConf[hiveConf] @TO@ JobConf[new TezConfiguration(hiveConf)] @AT@ 40145 @LENGTH@ 21
---------INS ClassInstanceCreation@@TezConfiguration[hiveConf] @TO@ ClassInstanceCreation@@JobConf[hiveConf] @AT@ 40157 @LENGTH@ 30
------------MOV SimpleName@@hiveConf @TO@ ClassInstanceCreation@@TezConfiguration[hiveConf] @AT@ 40157 @LENGTH@ 8
------------INS New@@new @TO@ ClassInstanceCreation@@TezConfiguration[hiveConf] @AT@ 40157 @LENGTH@ 3
------------INS SimpleType@@TezConfiguration @TO@ ClassInstanceCreation@@TezConfiguration[hiveConf] @AT@ 40161 @LENGTH@ 16


UPD SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @TO@ switch (sqlType) {case BINARY:  ByteString bs=(ByteString)literal.getValue();val=bs.byteAt(0);type=HiveParser.BigintLiteral;break;case TINYINT:val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 3990 @LENGTH@ 1476
---MOV ExpressionStatement@@Assignment:val=literal.getValue3() @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4033 @LENGTH@ 26
---MOV ExpressionStatement@@Assignment:val=literal.getValue3() @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4138 @LENGTH@ 26
---MOV ExpressionStatement@@Assignment:val=literal.getValue3() @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4260 @LENGTH@ 26
---MOV ExpressionStatement@@Assignment:val=literal.getValue3() @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4411 @LENGTH@ 26
---MOV ExpressionStatement@@Assignment:val=literal.getValue3() @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4522 @LENGTH@ 26
---MOV ExpressionStatement@@Assignment:val=literal.getValue3() @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4670 @LENGTH@ 26
---MOV ExpressionStatement@@Assignment:val=literal.getValue() @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4821 @LENGTH@ 25
---INS SwitchCase@@case BINARY: @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4841 @LENGTH@ 12
------INS SimpleName@@BINARY @TO@ SwitchCase@@case BINARY: @AT@ 4846 @LENGTH@ 6
---INS VariableDeclarationStatement@@ByteString bs=(ByteString)literal.getValue(); @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4860 @LENGTH@ 48
------INS SimpleType@@ByteString @TO@ VariableDeclarationStatement@@ByteString bs=(ByteString)literal.getValue(); @AT@ 4860 @LENGTH@ 10
------INS VariableDeclarationFragment@@bs=(ByteString)literal.getValue() @TO@ VariableDeclarationStatement@@ByteString bs=(ByteString)literal.getValue(); @AT@ 4871 @LENGTH@ 36
---------INS SimpleName@@bs @TO@ VariableDeclarationFragment@@bs=(ByteString)literal.getValue() @AT@ 4871 @LENGTH@ 2
---------INS CastExpression@@(ByteString)literal.getValue() @TO@ VariableDeclarationFragment@@bs=(ByteString)literal.getValue() @AT@ 4876 @LENGTH@ 31
------------INS SimpleType@@ByteString @TO@ CastExpression@@(ByteString)literal.getValue() @AT@ 4877 @LENGTH@ 10
------------INS MethodInvocation@@literal.getValue() @TO@ CastExpression@@(ByteString)literal.getValue() @AT@ 4889 @LENGTH@ 18
---------------INS SimpleName@@Name:literal @TO@ MethodInvocation@@literal.getValue() @AT@ 4889 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@literal.getValue() @AT@ 4897 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:val=bs.byteAt(0) @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4915 @LENGTH@ 19
------INS Assignment@@val=bs.byteAt(0) @TO@ ExpressionStatement@@Assignment:val=bs.byteAt(0) @AT@ 4915 @LENGTH@ 18
---------INS SimpleName@@val @TO@ Assignment@@val=bs.byteAt(0) @AT@ 4915 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@val=bs.byteAt(0) @AT@ 4918 @LENGTH@ 1
---------INS MethodInvocation@@bs.byteAt(0) @TO@ Assignment@@val=bs.byteAt(0) @AT@ 4921 @LENGTH@ 12
------------INS SimpleName@@Name:bs @TO@ MethodInvocation@@bs.byteAt(0) @AT@ 4921 @LENGTH@ 2
------------INS SimpleName@@MethodName:byteAt:[0] @TO@ MethodInvocation@@bs.byteAt(0) @AT@ 4924 @LENGTH@ 9
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:byteAt:[0] @AT@ 4931 @LENGTH@ 1
---INS ExpressionStatement@@Assignment:type=HiveParser.BigintLiteral @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4941 @LENGTH@ 32
------INS Assignment@@type=HiveParser.BigintLiteral @TO@ ExpressionStatement@@Assignment:type=HiveParser.BigintLiteral @AT@ 4941 @LENGTH@ 31
---------INS SimpleName@@type @TO@ Assignment@@type=HiveParser.BigintLiteral @AT@ 4941 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@type=HiveParser.BigintLiteral @AT@ 4945 @LENGTH@ 1
---------INS QualifiedName@@HiveParser.BigintLiteral @TO@ Assignment@@type=HiveParser.BigintLiteral @AT@ 4948 @LENGTH@ 24
------------INS SimpleName@@HiveParser @TO@ QualifiedName@@HiveParser.BigintLiteral @AT@ 4948 @LENGTH@ 10
------------INS SimpleName@@BigintLiteral @TO@ QualifiedName@@HiveParser.BigintLiteral @AT@ 4959 @LENGTH@ 13
---MOV ExpressionStatement@@Assignment:val=df.format(((Calendar)val).getTime()) @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4952 @LENGTH@ 44
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 4980 @LENGTH@ 6
---MOV ExpressionStatement@@Assignment:val="'" + val + "'" @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 5003 @LENGTH@ 22
---MOV ExpressionStatement@@Assignment:val=literal.getValue() @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 5088 @LENGTH@ 25
---MOV ExpressionStatement@@Assignment:val=df.format(((Calendar)val).getTime()) @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 5226 @LENGTH@ 44
---MOV ExpressionStatement@@Assignment:val="'" + val + "'" @TO@ SwitchStatement@@switch (sqlType) {case TINYINT:  val=literal.getValue3();type=HiveParser.TinyintLiteral;break;case SMALLINT:val=literal.getValue3();type=HiveParser.SmallintLiteral;break;case INTEGER:case BIGINT:val=literal.getValue3();type=HiveParser.BigintLiteral;break;case DECIMAL:case FLOAT:case DOUBLE:case REAL:val=literal.getValue3();type=HiveParser.Number;break;case VARCHAR:case CHAR:val=literal.getValue3();type=HiveParser.StringLiteral;val="'" + String.valueOf(val) + "'";break;case BOOLEAN:val=literal.getValue3();type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;break;case DATE:{val=literal.getValue();type=HiveParser.TOK_DATELITERAL;DateFormat df=new SimpleDateFormat("yyyy-MM-dd");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case TIME:case TIMESTAMP:{val=literal.getValue();type=HiveParser.TOK_TIMESTAMP;DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");val=df.format(((Calendar)val).getTime());val="'" + val + "'";}break;case NULL:type=HiveParser.TOK_NULL;break;default :throw new RuntimeException("Unsupported Type: " + sqlType);} @AT@ 5277 @LENGTH@ 22


UPD MethodDeclaration@@public, void, MethodName:obtainHelp, @CliOption(key={"","command"},optionContext="availableCommands",help="Command name to provide help for") String buffer,  @TO@ public, void, MethodName:obtainHelp, @CliOption(key={"","command"},optionContext="disable-string-converter availableCommands",help="Command name to provide help for") String buffer,  @AT@ 1490 @LENGTH@ 315
---UPD SingleVariableDeclaration@@@CliOption(key={"","command"},optionContext="availableCommands",help="Command name to provide help for") String buffer @TO@ @CliOption(key={"","command"},optionContext="disable-string-converter availableCommands",help="Command name to provide help for") String buffer @AT@ 1513 @LENGTH@ 129


INS IfStatement@@if (authentication.getDetails() instanceof OAuth2AuthenticationDetails) {  OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails();  details.setDecodedDetails(auth.getDetails());} @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 3950 @LENGTH@ 313
---INS InstanceofExpression@@authentication.getDetails() instanceof OAuth2AuthenticationDetails @TO@ IfStatement@@if (authentication.getDetails() instanceof OAuth2AuthenticationDetails) {  OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails();  details.setDecodedDetails(auth.getDetails());} @AT@ 3954 @LENGTH@ 66
------INS MethodInvocation@@authentication.getDetails() @TO@ InstanceofExpression@@authentication.getDetails() instanceof OAuth2AuthenticationDetails @AT@ 3954 @LENGTH@ 27
---------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getDetails() @AT@ 3954 @LENGTH@ 14
---------INS SimpleName@@MethodName:getDetails:[] @TO@ MethodInvocation@@authentication.getDetails() @AT@ 3969 @LENGTH@ 12
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@authentication.getDetails() instanceof OAuth2AuthenticationDetails @AT@ 3982 @LENGTH@ 10
------INS SimpleType@@OAuth2AuthenticationDetails @TO@ InstanceofExpression@@authentication.getDetails() instanceof OAuth2AuthenticationDetails @AT@ 3993 @LENGTH@ 27
---INS Block@@ThenBody:{  OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails();  details.setDecodedDetails(auth.getDetails());} @TO@ IfStatement@@if (authentication.getDetails() instanceof OAuth2AuthenticationDetails) {  OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails();  details.setDecodedDetails(auth.getDetails());} @AT@ 4022 @LENGTH@ 241
------INS VariableDeclarationStatement@@OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails(); @TO@ Block@@ThenBody:{  OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails();  details.setDecodedDetails(auth.getDetails());} @AT@ 4027 @LENGTH@ 96
---------INS SimpleType@@OAuth2AuthenticationDetails @TO@ VariableDeclarationStatement@@OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails(); @AT@ 4027 @LENGTH@ 27
---------INS VariableDeclarationFragment@@details=(OAuth2AuthenticationDetails)authentication.getDetails() @TO@ VariableDeclarationStatement@@OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails(); @AT@ 4055 @LENGTH@ 67
------------INS SimpleName@@details @TO@ VariableDeclarationFragment@@details=(OAuth2AuthenticationDetails)authentication.getDetails() @AT@ 4055 @LENGTH@ 7
------------INS CastExpression@@(OAuth2AuthenticationDetails)authentication.getDetails() @TO@ VariableDeclarationFragment@@details=(OAuth2AuthenticationDetails)authentication.getDetails() @AT@ 4065 @LENGTH@ 57
---------------INS SimpleType@@OAuth2AuthenticationDetails @TO@ CastExpression@@(OAuth2AuthenticationDetails)authentication.getDetails() @AT@ 4066 @LENGTH@ 27
---------------INS MethodInvocation@@authentication.getDetails() @TO@ CastExpression@@(OAuth2AuthenticationDetails)authentication.getDetails() @AT@ 4095 @LENGTH@ 27
------------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getDetails() @AT@ 4095 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getDetails:[] @TO@ MethodInvocation@@authentication.getDetails() @AT@ 4110 @LENGTH@ 12
------INS ExpressionStatement@@MethodInvocation:details.setDecodedDetails(auth.getDetails()) @TO@ Block@@ThenBody:{  OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails();  details.setDecodedDetails(auth.getDetails());} @AT@ 4214 @LENGTH@ 45
---------INS MethodInvocation@@details.setDecodedDetails(auth.getDetails()) @TO@ ExpressionStatement@@MethodInvocation:details.setDecodedDetails(auth.getDetails()) @AT@ 4214 @LENGTH@ 44
------------INS SimpleName@@Name:details @TO@ MethodInvocation@@details.setDecodedDetails(auth.getDetails()) @AT@ 4214 @LENGTH@ 7
------------INS SimpleName@@MethodName:setDecodedDetails:[auth.getDetails()] @TO@ MethodInvocation@@details.setDecodedDetails(auth.getDetails()) @AT@ 4222 @LENGTH@ 36
---------------INS MethodInvocation@@auth.getDetails() @TO@ SimpleName@@MethodName:setDecodedDetails:[auth.getDetails()] @AT@ 4240 @LENGTH@ 17
------------------INS SimpleName@@Name:auth @TO@ MethodInvocation@@auth.getDetails() @AT@ 4240 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getDetails:[] @TO@ MethodInvocation@@auth.getDetails() @AT@ 4245 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:modifiable.remove("client_secret") @TO@ MethodDeclaration@@public, OAuth2Request, MethodName:createOAuth2Request, ClientDetails client,  @AT@ 2803 @LENGTH@ 35
---INS MethodInvocation@@modifiable.remove("client_secret") @TO@ ExpressionStatement@@MethodInvocation:modifiable.remove("client_secret") @AT@ 2803 @LENGTH@ 34
------INS SimpleName@@Name:modifiable @TO@ MethodInvocation@@modifiable.remove("client_secret") @AT@ 2803 @LENGTH@ 10
------INS SimpleName@@MethodName:remove:["client_secret"] @TO@ MethodInvocation@@modifiable.remove("client_secret") @AT@ 2814 @LENGTH@ 23
---------INS StringLiteral@@"client_secret" @TO@ SimpleName@@MethodName:remove:["client_secret"] @AT@ 2821 @LENGTH@ 15


INS MethodDeclaration@@public, synchronized, void, MethodName:clear,  @TO@ TypeDeclaration@@[public, final]DefaultCamelContextRegistry, [CamelContextRegistry] @AT@ 1545 @LENGTH@ 93
---INS Modifier@@public @TO@ MethodDeclaration@@public, synchronized, void, MethodName:clear,  @AT@ 1545 @LENGTH@ 6
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, synchronized, void, MethodName:clear,  @AT@ 1552 @LENGTH@ 12
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, synchronized, void, MethodName:clear,  @AT@ 1565 @LENGTH@ 4
---INS SimpleName@@MethodName:clear @TO@ MethodDeclaration@@public, synchronized, void, MethodName:clear,  @AT@ 1570 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:contexts.clear() @TO@ MethodDeclaration@@public, synchronized, void, MethodName:clear,  @AT@ 1588 @LENGTH@ 17
------INS MethodInvocation@@contexts.clear() @TO@ ExpressionStatement@@MethodInvocation:contexts.clear() @AT@ 1588 @LENGTH@ 16
---------INS SimpleName@@Name:contexts @TO@ MethodInvocation@@contexts.clear() @AT@ 1588 @LENGTH@ 8
---------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@contexts.clear() @AT@ 1597 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:listeners.clear() @TO@ MethodDeclaration@@public, synchronized, void, MethodName:clear,  @AT@ 1614 @LENGTH@ 18
------INS MethodInvocation@@listeners.clear() @TO@ ExpressionStatement@@MethodInvocation:listeners.clear() @AT@ 1614 @LENGTH@ 17
---------INS SimpleName@@Name:listeners @TO@ MethodInvocation@@listeners.clear() @AT@ 1614 @LENGTH@ 9
---------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@listeners.clear() @AT@ 1624 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals("1",localUserIds.get(1)) @TO@ MethodInvocation:assertTrue(localUserIds.contains("2")) @AT@ 4132 @LENGTH@ 39
---UPD MethodInvocation@@assertEquals("1",localUserIds.get(1)) @TO@ assertTrue(localUserIds.contains("2")) @AT@ 4132 @LENGTH@ 38
------UPD SimpleName@@MethodName:assertEquals:["1", localUserIds.get(1)] @TO@ MethodName:assertTrue:[localUserIds.contains("2")] @AT@ 4132 @LENGTH@ 38
---------DEL StringLiteral@@"1" @AT@ 4145 @LENGTH@ 3
---------UPD MethodInvocation@@localUserIds.get(1) @TO@ localUserIds.contains("2") @AT@ 4150 @LENGTH@ 19
------------UPD SimpleName@@MethodName:get:[1] @TO@ MethodName:contains:["2"] @AT@ 4163 @LENGTH@ 6
---------------INS StringLiteral@@"2" @TO@ SimpleName@@MethodName:get:[1] @AT@ 4165 @LENGTH@ 3
---------------DEL NumberLiteral@@1 @AT@ 4167 @LENGTH@ 1


INS IfStatement@@if (domainObj == null) {  throw new ResourceNotFoundException();} @TO@ MethodDeclaration@@public, ResponseEntity<?>, MethodName:deleteItemResource, RootResourceInformation resourceInformation, @BackendId Serializable id, ResourceNotFoundException, HttpRequestMethodNotSupportedException,  @AT@ 13814 @LENGTH@ 70
---INS InfixExpression@@domainObj == null @TO@ IfStatement@@if (domainObj == null) {  throw new ResourceNotFoundException();} @AT@ 13818 @LENGTH@ 17
------INS SimpleName@@domainObj @TO@ InfixExpression@@domainObj == null @AT@ 13818 @LENGTH@ 9
------INS Operator@@== @TO@ InfixExpression@@domainObj == null @AT@ 13827 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@domainObj == null @AT@ 13831 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new ResourceNotFoundException();} @TO@ IfStatement@@if (domainObj == null) {  throw new ResourceNotFoundException();} @AT@ 13837 @LENGTH@ 47
------INS ThrowStatement@@ClassInstanceCreation:new ResourceNotFoundException() @TO@ Block@@ThenBody:{  throw new ResourceNotFoundException();} @AT@ 13842 @LENGTH@ 38
---------INS ClassInstanceCreation@@ResourceNotFoundException[] @TO@ ThrowStatement@@ClassInstanceCreation:new ResourceNotFoundException() @AT@ 13848 @LENGTH@ 31
------------INS New@@new @TO@ ClassInstanceCreation@@ResourceNotFoundException[] @AT@ 13848 @LENGTH@ 3
------------INS SimpleType@@ResourceNotFoundException @TO@ ClassInstanceCreation@@ResourceNotFoundException[] @AT@ 13852 @LENGTH@ 25


UPD FieldDeclaration@@private, static, Set<Class<?>>, [WRAPPER_TYPES=new HashSet<Class<?>>()] @TO@ private, static, final, Set<Class<?>>, [WRAPPER_TYPES=new HashSet<Class<?>>()] @AT@ 1834 @LENGTH@ 69
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, Set<Class<?>>, [WRAPPER_TYPES=new HashSet<Class<?>>()] @AT@ 1858 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:ShrinkWrap.create(WebArchive.class,"test-external.war").addClass(InternalTag.class).addAsManifestResource(ExternalTagLibTestCase.class.getPackage(),"internal.tld","internal.tld").addAsManifestResource(new StringAsset("Dependencies: test." + MODULE_NAME + " meta-inf\n"),"MANIFEST.MF").addAsWebResource(ExternalTagLibTestCase.class.getPackage(),"test.jsp","test.jsp") @TO@ MethodInvocation:ShrinkWrap.create(WebArchive.class,"test-external.war").addClass(InternalTag.class).addAsWebInfResource(ExternalTagLibTestCase.class.getPackage(),"internal.tld","internal.tld").addAsManifestResource(new StringAsset("Dependencies: test." + MODULE_NAME + " meta-inf\n"),"MANIFEST.MF").addAsWebResource(ExternalTagLibTestCase.class.getPackage(),"test.jsp","test.jsp") @AT@ 2738 @LENGTH@ 448
---UPD MethodInvocation@@ShrinkWrap.create(WebArchive.class,"test-external.war").addClass(InternalTag.class).addAsManifestResource(ExternalTagLibTestCase.class.getPackage(),"internal.tld","internal.tld").addAsManifestResource(new StringAsset("Dependencies: test." + MODULE_NAME + " meta-inf\n"),"MANIFEST.MF").addAsWebResource(ExternalTagLibTestCase.class.getPackage(),"test.jsp","test.jsp") @TO@ ShrinkWrap.create(WebArchive.class,"test-external.war").addClass(InternalTag.class).addAsWebInfResource(ExternalTagLibTestCase.class.getPackage(),"internal.tld","internal.tld").addAsManifestResource(new StringAsset("Dependencies: test." + MODULE_NAME + " meta-inf\n"),"MANIFEST.MF").addAsWebResource(ExternalTagLibTestCase.class.getPackage(),"test.jsp","test.jsp") @AT@ 2745 @LENGTH@ 440
------UPD MethodInvocation@@MethodName:addAsManifestResource:[ExternalTagLibTestCase.class.getPackage(), "internal.tld", "internal.tld"] @TO@ MethodName:addAsWebInfResource:[ExternalTagLibTestCase.class.getPackage(), "internal.tld", "internal.tld"] @AT@ 2745 @LENGTH@ 215


UPD VariableDeclarationStatement@@boolean pageableOutOfScope=pageable.getOffset() > query.getLimit(); @TO@ boolean pageableOutOfScope=pageable.getOffset() > count; @AT@ 8115 @LENGTH@ 69
---UPD VariableDeclarationFragment@@pageableOutOfScope=pageable.getOffset() > query.getLimit() @TO@ pageableOutOfScope=pageable.getOffset() > count @AT@ 8123 @LENGTH@ 60
------UPD InfixExpression@@pageable.getOffset() > query.getLimit() @TO@ pageable.getOffset() > count @AT@ 8144 @LENGTH@ 39
---------DEL MethodInvocation@@query.getLimit() @AT@ 8167 @LENGTH@ 16
------------DEL SimpleName@@Name:query @AT@ 8167 @LENGTH@ 5
------------DEL SimpleName@@MethodName:getLimit:[] @AT@ 8173 @LENGTH@ 10
---------INS SimpleName@@count @TO@ InfixExpression@@pageable.getOffset() > query.getLimit() @AT@ 8167 @LENGTH@ 5


UPD FieldDeclaration@@private, final, boolean, [matchOnUriPrefix] @TO@ protected, final, boolean, [matchOnUriPrefix] @AT@ 1086 @LENGTH@ 39
---UPD Modifier@@private @TO@ protected @AT@ 1086 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:client.getConnectionManager().shutdown() @TO@ MethodInvocation:HttpClientUtils.closeQuietly(client) @AT@ 5016 @LENGTH@ 41
---UPD MethodInvocation@@client.getConnectionManager().shutdown() @TO@ HttpClientUtils.closeQuietly(client) @AT@ 5016 @LENGTH@ 40
------DEL MethodInvocation@@MethodName:getConnectionManager:[] @AT@ 5016 @LENGTH@ 29
------UPD SimpleName@@Name:client @TO@ Name:HttpClientUtils @AT@ 5016 @LENGTH@ 6
------UPD SimpleName@@MethodName:shutdown:[] @TO@ MethodName:closeQuietly:[client] @AT@ 5046 @LENGTH@ 10
---------INS SimpleName@@client @TO@ SimpleName@@MethodName:shutdown:[] @AT@ 4990 @LENGTH@ 6


UPD WhileStatement@@while (true) {  List<VariableElement> fieldElements=ElementFilter.fieldsIn(classElement.getEnclosedElements());  if (fieldElements.isEmpty()) {    break;  }  for (  VariableElement fieldElement : fieldElements) {    UriParam param=fieldElement.getAnnotation(UriParam.class);    String fieldName=fieldElement.getSimpleName().toString();    if (param != null) {      String name=param.name();      if (isNullOrEmpty(name)) {        name=fieldName;      }      name=prefix + name;      String defaultValue=param.defaultValue();      String defaultValueNote=param.defaultValueNote();      TypeMirror fieldType=fieldElement.asType();      String fieldTypeName=fieldType.toString();      TypeElement fieldTypeElement=findTypeElement(roundEnv,fieldTypeName);      UriParams fieldParams=null;      if (fieldTypeElement != null) {        fieldParams=fieldTypeElement.getAnnotation(UriParams.class);      }      if (fieldParams != null) {        String nestedPrefix=prefix;        String extraPrefix=fieldParams.prefix();        if (!isNullOrEmpty(extraPrefix)) {          nestedPrefix+=extraPrefix;        }        findClassProperties(roundEnv,endpointOptions,fieldTypeElement,nestedPrefix);      } else {        String docComment=elementUtils.getDocComment(fieldElement);        if (isNullOrEmpty(docComment)) {          String setter="set" + fieldName.substring(0,1).toUpperCase();          if (fieldName.length() > 1) {            setter+=fieldName.substring(1);          }          List<ExecutableElement> methods=ElementFilter.methodsIn(classElement.getEnclosedElements());          for (          ExecutableElement method : methods) {            String methodName=method.getSimpleName().toString();            if (setter.equals(methodName) && method.getParameters().size() == 1) {              String doc=elementUtils.getDocComment(method);              if (!isNullOrEmpty(doc)) {                docComment=doc;                break;              }            }          }        }        if (docComment == null) {          docComment="";        }        Set<String> enums=new LinkedHashSet<>();        boolean isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;        if (isEnum) {          TypeElement enumClass=findTypeElement(roundEnv,fieldTypeElement.asType().toString());          List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());          for (          VariableElement var : fields) {            if (var.getKind() == ElementKind.ENUM_CONSTANT) {              String val=var.toString();              enums.add(val);            }          }        }        EndpointOption option=new EndpointOption(name,fieldTypeName,defaultValue,defaultValueNote,docComment.trim(),isEnum,enums);        endpointOptions.add(option);      }    }  }  TypeElement baseTypeElement=null;  TypeMirror superclass=classElement.getSuperclass();  if (superclass != null) {    String superClassName=canonicalClassName(superclass.toString());    baseTypeElement=findTypeElement(roundEnv,superClassName);  }  if (baseTypeElement != null) {    classElement=baseTypeElement;  } else {    break;  }} @TO@ while (true) {  List<VariableElement> fieldElements=ElementFilter.fieldsIn(classElement.getEnclosedElements());  for (  VariableElement fieldElement : fieldElements) {    UriParam param=fieldElement.getAnnotation(UriParam.class);    String fieldName=fieldElement.getSimpleName().toString();    if (param != null) {      String name=param.name();      if (isNullOrEmpty(name)) {        name=fieldName;      }      name=prefix + name;      String defaultValue=param.defaultValue();      String defaultValueNote=param.defaultValueNote();      TypeMirror fieldType=fieldElement.asType();      String fieldTypeName=fieldType.toString();      TypeElement fieldTypeElement=findTypeElement(roundEnv,fieldTypeName);      UriParams fieldParams=null;      if (fieldTypeElement != null) {        fieldParams=fieldTypeElement.getAnnotation(UriParams.class);      }      if (fieldParams != null) {        String nestedPrefix=prefix;        String extraPrefix=fieldParams.prefix();        if (!isNullOrEmpty(extraPrefix)) {          nestedPrefix+=extraPrefix;        }        findClassProperties(roundEnv,endpointOptions,fieldTypeElement,nestedPrefix);      } else {        String docComment=elementUtils.getDocComment(fieldElement);        if (isNullOrEmpty(docComment)) {          String setter="set" + fieldName.substring(0,1).toUpperCase();          if (fieldName.length() > 1) {            setter+=fieldName.substring(1);          }          List<ExecutableElement> methods=ElementFilter.methodsIn(classElement.getEnclosedElements());          for (          ExecutableElement method : methods) {            String methodName=method.getSimpleName().toString();            if (setter.equals(methodName) && method.getParameters().size() == 1) {              String doc=elementUtils.getDocComment(method);              if (!isNullOrEmpty(doc)) {                docComment=doc;                break;              }            }          }        }        if (docComment == null) {          docComment="";        }        Set<String> enums=new LinkedHashSet<>();        boolean isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;        if (isEnum) {          TypeElement enumClass=findTypeElement(roundEnv,fieldTypeElement.asType().toString());          List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());          for (          VariableElement var : fields) {            if (var.getKind() == ElementKind.ENUM_CONSTANT) {              String val=var.toString();              enums.add(val);            }          }        }        EndpointOption option=new EndpointOption(name,fieldTypeName,defaultValue,defaultValueNote,docComment.trim(),isEnum,enums);        endpointOptions.add(option);      }    }  }  TypeElement baseTypeElement=null;  TypeMirror superclass=classElement.getSuperclass();  if (superclass != null) {    String superClassName=canonicalClassName(superclass.toString());    baseTypeElement=findTypeElement(roundEnv,superClassName);  }  if (baseTypeElement != null) {    classElement=baseTypeElement;  } else {    break;  }} @AT@ 12907 @LENGTH@ 4809
---UPD Block@@WhileBody:{  List<VariableElement> fieldElements=ElementFilter.fieldsIn(classElement.getEnclosedElements());  if (fieldElements.isEmpty()) {    break;  }  for (  VariableElement fieldElement : fieldElements) {    UriParam param=fieldElement.getAnnotation(UriParam.class);    String fieldName=fieldElement.getSimpleName().toString();    if (param != null) {      String name=param.name();      if (isNullOrEmpty(name)) {        name=fieldName;      }      name=prefix + name;      String defaultValue=param.defaultValue();      String defaultValueNote=param.defaultValueNote();      TypeMirror fieldType=fieldElement.asType();      String fieldTypeName=fieldType.toString();      TypeElement fieldTypeElement=findTypeElement(roundEnv,fieldTypeName);      UriParams fieldParams=null;      if (fieldTypeElement != null) {        fieldParams=fieldTypeElement.getAnnotation(UriParams.class);      }      if (fieldParams != null) {        String nestedPrefix=prefix;        String extraPrefix=fieldParams.prefix();        if (!isNullOrEmpty(extraPrefix)) {          nestedPrefix+=extraPrefix;        }        findClassProperties(roundEnv,endpointOptions,fieldTypeElement,nestedPrefix);      } else {        String docComment=elementUtils.getDocComment(fieldElement);        if (isNullOrEmpty(docComment)) {          String setter="set" + fieldName.substring(0,1).toUpperCase();          if (fieldName.length() > 1) {            setter+=fieldName.substring(1);          }          List<ExecutableElement> methods=ElementFilter.methodsIn(classElement.getEnclosedElements());          for (          ExecutableElement method : methods) {            String methodName=method.getSimpleName().toString();            if (setter.equals(methodName) && method.getParameters().size() == 1) {              String doc=elementUtils.getDocComment(method);              if (!isNullOrEmpty(doc)) {                docComment=doc;                break;              }            }          }        }        if (docComment == null) {          docComment="";        }        Set<String> enums=new LinkedHashSet<>();        boolean isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;        if (isEnum) {          TypeElement enumClass=findTypeElement(roundEnv,fieldTypeElement.asType().toString());          List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());          for (          VariableElement var : fields) {            if (var.getKind() == ElementKind.ENUM_CONSTANT) {              String val=var.toString();              enums.add(val);            }          }        }        EndpointOption option=new EndpointOption(name,fieldTypeName,defaultValue,defaultValueNote,docComment.trim(),isEnum,enums);        endpointOptions.add(option);      }    }  }  TypeElement baseTypeElement=null;  TypeMirror superclass=classElement.getSuperclass();  if (superclass != null) {    String superClassName=canonicalClassName(superclass.toString());    baseTypeElement=findTypeElement(roundEnv,superClassName);  }  if (baseTypeElement != null) {    classElement=baseTypeElement;  } else {    break;  }} @TO@ WhileBody:{  List<VariableElement> fieldElements=ElementFilter.fieldsIn(classElement.getEnclosedElements());  for (  VariableElement fieldElement : fieldElements) {    UriParam param=fieldElement.getAnnotation(UriParam.class);    String fieldName=fieldElement.getSimpleName().toString();    if (param != null) {      String name=param.name();      if (isNullOrEmpty(name)) {        name=fieldName;      }      name=prefix + name;      String defaultValue=param.defaultValue();      String defaultValueNote=param.defaultValueNote();      TypeMirror fieldType=fieldElement.asType();      String fieldTypeName=fieldType.toString();      TypeElement fieldTypeElement=findTypeElement(roundEnv,fieldTypeName);      UriParams fieldParams=null;      if (fieldTypeElement != null) {        fieldParams=fieldTypeElement.getAnnotation(UriParams.class);      }      if (fieldParams != null) {        String nestedPrefix=prefix;        String extraPrefix=fieldParams.prefix();        if (!isNullOrEmpty(extraPrefix)) {          nestedPrefix+=extraPrefix;        }        findClassProperties(roundEnv,endpointOptions,fieldTypeElement,nestedPrefix);      } else {        String docComment=elementUtils.getDocComment(fieldElement);        if (isNullOrEmpty(docComment)) {          String setter="set" + fieldName.substring(0,1).toUpperCase();          if (fieldName.length() > 1) {            setter+=fieldName.substring(1);          }          List<ExecutableElement> methods=ElementFilter.methodsIn(classElement.getEnclosedElements());          for (          ExecutableElement method : methods) {            String methodName=method.getSimpleName().toString();            if (setter.equals(methodName) && method.getParameters().size() == 1) {              String doc=elementUtils.getDocComment(method);              if (!isNullOrEmpty(doc)) {                docComment=doc;                break;              }            }          }        }        if (docComment == null) {          docComment="";        }        Set<String> enums=new LinkedHashSet<>();        boolean isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;        if (isEnum) {          TypeElement enumClass=findTypeElement(roundEnv,fieldTypeElement.asType().toString());          List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());          for (          VariableElement var : fields) {            if (var.getKind() == ElementKind.ENUM_CONSTANT) {              String val=var.toString();              enums.add(val);            }          }        }        EndpointOption option=new EndpointOption(name,fieldTypeName,defaultValue,defaultValueNote,docComment.trim(),isEnum,enums);        endpointOptions.add(option);      }    }  }  TypeElement baseTypeElement=null;  TypeMirror superclass=classElement.getSuperclass();  if (superclass != null) {    String superClassName=canonicalClassName(superclass.toString());    baseTypeElement=findTypeElement(roundEnv,superClassName);  }  if (baseTypeElement != null) {    classElement=baseTypeElement;  } else {    break;  }} @AT@ 12920 @LENGTH@ 4796
------DEL IfStatement@@if (fieldElements.isEmpty()) {  break;} @AT@ 13044 @LENGTH@ 67
---------DEL MethodInvocation@@fieldElements.isEmpty() @AT@ 13048 @LENGTH@ 23
------------DEL SimpleName@@Name:fieldElements @AT@ 13048 @LENGTH@ 13
------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 13062 @LENGTH@ 9
---------DEL Block@@ThenBody:{  break;} @AT@ 13073 @LENGTH@ 38
------------DEL BreakStatement@@ @AT@ 13091 @LENGTH@ 6


UPD MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @TO@ protected, void, MethodName:initChannel, Channel ch, Exception,  @AT@ 4599 @LENGTH@ 600
---UPD Modifier@@public @TO@ protected @AT@ 4599 @LENGTH@ 6
---DEL SimpleType@@ChannelPipeline @AT@ 4606 @LENGTH@ 15
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 4614 @LENGTH@ 4
---INS SimpleName@@MethodName:initChannel @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 4619 @LENGTH@ 11
---DEL SimpleName@@MethodName:getPipeline @AT@ 4622 @LENGTH@ 11
---INS SingleVariableDeclaration@@Channel ch @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 4631 @LENGTH@ 10
------INS SimpleType@@Channel @TO@ SingleVariableDeclaration@@Channel ch @AT@ 4631 @LENGTH@ 7
------INS SimpleName@@ch @TO@ SingleVariableDeclaration@@Channel ch @AT@ 4639 @LENGTH@ 2
---MOV ExpressionStatement@@Assignment:serverInvoked=true @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 4667 @LENGTH@ 21
---UPD VariableDeclarationStatement@@ChannelPipeline channelPipeline=Channels.pipeline(); @TO@ ChannelPipeline channelPipeline=ch.pipeline(); @AT@ 4702 @LENGTH@ 54
------UPD VariableDeclarationFragment@@channelPipeline=Channels.pipeline() @TO@ channelPipeline=ch.pipeline() @AT@ 4718 @LENGTH@ 37
---------UPD MethodInvocation@@Channels.pipeline() @TO@ ch.pipeline() @AT@ 4736 @LENGTH@ 19
------------UPD SimpleName@@Name:Channels @TO@ Name:ch @AT@ 4736 @LENGTH@ 8
---DEL ReturnStatement@@SimpleName:channelPipeline @AT@ 5166 @LENGTH@ 23
------DEL SimpleName@@channelPipeline @AT@ 5173 @LENGTH@ 15


INS EnhancedForStatement@@for (DataStoreWriter<T> w : writers.values()) {  if (w instanceof Lifecycle) {    try {      ((Lifecycle)w).stop();    } catch (    Exception e) {      log.warn("Error closing DataStoreWriter " + w,e);    }  }} @TO@ MethodDeclaration@@protected, void, MethodName:doStop,  @AT@ 5858 @LENGTH@ 217
---INS SingleVariableDeclaration@@DataStoreWriter<T> w @TO@ EnhancedForStatement@@for (DataStoreWriter<T> w : writers.values()) {  if (w instanceof Lifecycle) {    try {      ((Lifecycle)w).stop();    } catch (    Exception e) {      log.warn("Error closing DataStoreWriter " + w,e);    }  }} @AT@ 5863 @LENGTH@ 20
------INS ParameterizedType@@DataStoreWriter<T> @TO@ SingleVariableDeclaration@@DataStoreWriter<T> w @AT@ 5863 @LENGTH@ 18
---------INS SimpleType@@DataStoreWriter @TO@ ParameterizedType@@DataStoreWriter<T> @AT@ 5863 @LENGTH@ 15
---------INS SimpleType@@T @TO@ ParameterizedType@@DataStoreWriter<T> @AT@ 5879 @LENGTH@ 1
------INS SimpleName@@w @TO@ SingleVariableDeclaration@@DataStoreWriter<T> w @AT@ 5882 @LENGTH@ 1
---INS MethodInvocation@@writers.values() @TO@ EnhancedForStatement@@for (DataStoreWriter<T> w : writers.values()) {  if (w instanceof Lifecycle) {    try {      ((Lifecycle)w).stop();    } catch (    Exception e) {      log.warn("Error closing DataStoreWriter " + w,e);    }  }} @AT@ 5886 @LENGTH@ 16
------INS SimpleName@@Name:writers @TO@ MethodInvocation@@writers.values() @AT@ 5886 @LENGTH@ 7
------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@writers.values() @AT@ 5894 @LENGTH@ 8
---INS IfStatement@@if (w instanceof Lifecycle) {  try {    ((Lifecycle)w).stop();  } catch (  Exception e) {    log.warn("Error closing DataStoreWriter " + w,e);  }} @TO@ EnhancedForStatement@@for (DataStoreWriter<T> w : writers.values()) {  if (w instanceof Lifecycle) {    try {      ((Lifecycle)w).stop();    } catch (    Exception e) {      log.warn("Error closing DataStoreWriter " + w,e);    }  }} @AT@ 5909 @LENGTH@ 162
------INS InstanceofExpression@@w instanceof Lifecycle @TO@ IfStatement@@if (w instanceof Lifecycle) {  try {    ((Lifecycle)w).stop();  } catch (  Exception e) {    log.warn("Error closing DataStoreWriter " + w,e);  }} @AT@ 5913 @LENGTH@ 22
---------INS SimpleName@@w @TO@ InstanceofExpression@@w instanceof Lifecycle @AT@ 5913 @LENGTH@ 1
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@w instanceof Lifecycle @AT@ 5915 @LENGTH@ 10
---------INS SimpleType@@Lifecycle @TO@ InstanceofExpression@@w instanceof Lifecycle @AT@ 5926 @LENGTH@ 9
------INS Block@@ThenBody:{  try {    ((Lifecycle)w).stop();  } catch (  Exception e) {    log.warn("Error closing DataStoreWriter " + w,e);  }} @TO@ IfStatement@@if (w instanceof Lifecycle) {  try {    ((Lifecycle)w).stop();  } catch (  Exception e) {    log.warn("Error closing DataStoreWriter " + w,e);  }} @AT@ 5937 @LENGTH@ 134
---------INS TryStatement@@try {  ((Lifecycle)w).stop();} catch (Exception e) {  log.warn("Error closing DataStoreWriter " + w,e);} @TO@ Block@@ThenBody:{  try {    ((Lifecycle)w).stop();  } catch (  Exception e) {    log.warn("Error closing DataStoreWriter " + w,e);  }} @AT@ 5943 @LENGTH@ 123
------------INS ExpressionStatement@@MethodInvocation:((Lifecycle)w).stop() @TO@ TryStatement@@try {  ((Lifecycle)w).stop();} catch (Exception e) {  log.warn("Error closing DataStoreWriter " + w,e);} @AT@ 5954 @LENGTH@ 22
---------------INS MethodInvocation@@((Lifecycle)w).stop() @TO@ ExpressionStatement@@MethodInvocation:((Lifecycle)w).stop() @AT@ 5954 @LENGTH@ 21
------------------INS ParenthesizedExpression@@((Lifecycle)w) @TO@ MethodInvocation@@((Lifecycle)w).stop() @AT@ 5954 @LENGTH@ 14
---------------------INS CastExpression@@(Lifecycle)w @TO@ ParenthesizedExpression@@((Lifecycle)w) @AT@ 5955 @LENGTH@ 12
------------------------INS SimpleType@@Lifecycle @TO@ CastExpression@@(Lifecycle)w @AT@ 5956 @LENGTH@ 9
------------------------INS SimpleName@@w @TO@ CastExpression@@(Lifecycle)w @AT@ 5966 @LENGTH@ 1
------------------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@((Lifecycle)w).stop() @AT@ 5969 @LENGTH@ 6
------------INS CatchClause@@catch (Exception e) {  log.warn("Error closing DataStoreWriter " + w,e);} @TO@ TryStatement@@try {  ((Lifecycle)w).stop();} catch (Exception e) {  log.warn("Error closing DataStoreWriter " + w,e);} @AT@ 5983 @LENGTH@ 83
---------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  log.warn("Error closing DataStoreWriter " + w,e);} @AT@ 5990 @LENGTH@ 11
------------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5990 @LENGTH@ 9
------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 6000 @LENGTH@ 1
---------------INS ExpressionStatement@@MethodInvocation:log.warn("Error closing DataStoreWriter " + w,e) @TO@ CatchClause@@catch (Exception e) {  log.warn("Error closing DataStoreWriter " + w,e);} @AT@ 6010 @LENGTH@ 50
------------------INS MethodInvocation@@log.warn("Error closing DataStoreWriter " + w,e) @TO@ ExpressionStatement@@MethodInvocation:log.warn("Error closing DataStoreWriter " + w,e) @AT@ 6010 @LENGTH@ 49
---------------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.warn("Error closing DataStoreWriter " + w,e) @AT@ 6010 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:warn:["Error closing DataStoreWriter " + w, e] @TO@ MethodInvocation@@log.warn("Error closing DataStoreWriter " + w,e) @AT@ 6014 @LENGTH@ 45
------------------------INS InfixExpression@@"Error closing DataStoreWriter " + w @TO@ SimpleName@@MethodName:warn:["Error closing DataStoreWriter " + w, e] @AT@ 6019 @LENGTH@ 36
---------------------------INS StringLiteral@@"Error closing DataStoreWriter " @TO@ InfixExpression@@"Error closing DataStoreWriter " + w @AT@ 6019 @LENGTH@ 32
---------------------------INS Operator@@+ @TO@ InfixExpression@@"Error closing DataStoreWriter " + w @AT@ 6051 @LENGTH@ 1
---------------------------INS SimpleName@@w @TO@ InfixExpression@@"Error closing DataStoreWriter " + w @AT@ 6054 @LENGTH@ 1
------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:warn:["Error closing DataStoreWriter " + w, e] @AT@ 6057 @LENGTH@ 1


UPD EnhancedForStatement@@for (ProcessorDefinition out : outputs) {  if (type.isInstance(out)) {    found.add((T)out);  }  if (out instanceof SendDefinition) {    SendDefinition send=(SendDefinition)out;    List<ProcessorDefinition<?>> children=send.getOutputs();    doFindType(children,type,found);  }  if (out instanceof ChoiceDefinition) {    ChoiceDefinition choice=(ChoiceDefinition)out;    for (    WhenDefinition when : choice.getWhenClauses()) {      List<ProcessorDefinition<?>> children=when.getOutputs();      doFindType(children,type,found);    }    if (choice.getOtherwise() != null) {      List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();      doFindType(children,type,found);    }  }  if (out instanceof TryDefinition) {    TryDefinition doTry=(TryDefinition)out;    List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();    doFindType(doTryOut,type,found);    List<CatchDefinition> doTryCatch=doTry.getCatchClauses();    for (    CatchDefinition doCatch : doTryCatch) {      doFindType(doCatch.getOutputs(),type,found);    }    if (doTry.getFinallyClause() != null) {      doFindType(doTry.getFinallyClause().getOutputs(),type,found);    }    continue;  }  if (out instanceof OutputDefinition) {    OutputDefinition outDef=(OutputDefinition)out;    List<ProcessorDefinition<?>> outDefOut=outDef.getOutputs();    doFindType(outDefOut,type,found);    continue;  }  List<ProcessorDefinition<?>> children=out.getOutputs();  doFindType(children,type,found);} @TO@ for (ProcessorDefinition out : outputs) {  if (out instanceof SendDefinition) {    SendDefinition send=(SendDefinition)out;    List<ProcessorDefinition<?>> children=send.getOutputs();    doFindType(children,type,found);  }  if (out instanceof ChoiceDefinition) {    ChoiceDefinition choice=(ChoiceDefinition)out;    for (    WhenDefinition when : choice.getWhenClauses()) {      List<ProcessorDefinition<?>> children=when.getOutputs();      doFindType(children,type,found);    }    if (choice.getOtherwise() != null) {      List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();      doFindType(children,type,found);    }    continue;  }  if (out instanceof TryDefinition) {    TryDefinition doTry=(TryDefinition)out;    List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();    doFindType(doTryOut,type,found);    List<CatchDefinition> doTryCatch=doTry.getCatchClauses();    for (    CatchDefinition doCatch : doTryCatch) {      doFindType(doCatch.getOutputs(),type,found);    }    if (doTry.getFinallyClause() != null) {      doFindType(doTry.getFinallyClause().getOutputs(),type,found);    }    continue;  }  if (out instanceof OutputDefinition) {    OutputDefinition outDef=(OutputDefinition)out;    List<ProcessorDefinition<?>> outDefOut=outDef.getOutputs();    doFindType(outDefOut,type,found);    continue;  }  if (type.isInstance(out)) {    found.add((T)out);  }  List<ProcessorDefinition<?>> children=out.getOutputs();  doFindType(children,type,found);} @AT@ 7006 @LENGTH@ 2437
---MOV IfStatement@@if (type.isInstance(out)) {  found.add((T)out);} @TO@ EnhancedForStatement@@for (ProcessorDefinition out : outputs) {  if (type.isInstance(out)) {    found.add((T)out);  }  if (out instanceof SendDefinition) {    SendDefinition send=(SendDefinition)out;    List<ProcessorDefinition<?>> children=send.getOutputs();    doFindType(children,type,found);  }  if (out instanceof ChoiceDefinition) {    ChoiceDefinition choice=(ChoiceDefinition)out;    for (    WhenDefinition when : choice.getWhenClauses()) {      List<ProcessorDefinition<?>> children=when.getOutputs();      doFindType(children,type,found);    }    if (choice.getOtherwise() != null) {      List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();      doFindType(children,type,found);    }  }  if (out instanceof TryDefinition) {    TryDefinition doTry=(TryDefinition)out;    List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();    doFindType(doTryOut,type,found);    List<CatchDefinition> doTryCatch=doTry.getCatchClauses();    for (    CatchDefinition doCatch : doTryCatch) {      doFindType(doCatch.getOutputs(),type,found);    }    if (doTry.getFinallyClause() != null) {      doFindType(doTry.getFinallyClause().getOutputs(),type,found);    }    continue;  }  if (out instanceof OutputDefinition) {    OutputDefinition outDef=(OutputDefinition)out;    List<ProcessorDefinition<?>> outDefOut=outDef.getOutputs();    doFindType(outDefOut,type,found);    continue;  }  List<ProcessorDefinition<?>> children=out.getOutputs();  doFindType(children,type,found);} @AT@ 7060 @LENGTH@ 76
---UPD IfStatement@@if (out instanceof ChoiceDefinition) {  ChoiceDefinition choice=(ChoiceDefinition)out;  for (  WhenDefinition when : choice.getWhenClauses()) {    List<ProcessorDefinition<?>> children=when.getOutputs();    doFindType(children,type,found);  }  if (choice.getOtherwise() != null) {    List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();    doFindType(children,type,found);  }} @TO@ if (out instanceof ChoiceDefinition) {  ChoiceDefinition choice=(ChoiceDefinition)out;  for (  WhenDefinition when : choice.getWhenClauses()) {    List<ProcessorDefinition<?>> children=when.getOutputs();    doFindType(children,type,found);  }  if (choice.getOtherwise() != null) {    List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();    doFindType(children,type,found);  }  continue;} @AT@ 7469 @LENGTH@ 604
------UPD Block@@ThenBody:{  ChoiceDefinition choice=(ChoiceDefinition)out;  for (  WhenDefinition when : choice.getWhenClauses()) {    List<ProcessorDefinition<?>> children=when.getOutputs();    doFindType(children,type,found);  }  if (choice.getOtherwise() != null) {    List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();    doFindType(children,type,found);  }} @TO@ ThenBody:{  ChoiceDefinition choice=(ChoiceDefinition)out;  for (  WhenDefinition when : choice.getWhenClauses()) {    List<ProcessorDefinition<?>> children=when.getOutputs();    doFindType(children,type,found);  }  if (choice.getOtherwise() != null) {    List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();    doFindType(children,type,found);  }  continue;} @AT@ 7506 @LENGTH@ 567
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  ChoiceDefinition choice=(ChoiceDefinition)out;  for (  WhenDefinition when : choice.getWhenClauses()) {    List<ProcessorDefinition<?>> children=when.getOutputs();    doFindType(children,type,found);  }  if (choice.getOtherwise() != null) {    List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();    doFindType(children,type,found);  }} @AT@ 8052 @LENGTH@ 9


INS MethodDeclaration@@public, Boolean, MethodName:getEnableJaxbAnnotationModule,  @TO@ TypeDeclaration@@[@XmlRootElement(name="json"), @XmlAccessorType(XmlAccessType.FIELD), public]JsonDataFormat, DataFormatDefinition @AT@ 3814 @LENGTH@ 97
---INS Modifier@@public @TO@ MethodDeclaration@@public, Boolean, MethodName:getEnableJaxbAnnotationModule,  @AT@ 3814 @LENGTH@ 6
---INS SimpleType@@Boolean @TO@ MethodDeclaration@@public, Boolean, MethodName:getEnableJaxbAnnotationModule,  @AT@ 3821 @LENGTH@ 7
---INS SimpleName@@MethodName:getEnableJaxbAnnotationModule @TO@ MethodDeclaration@@public, Boolean, MethodName:getEnableJaxbAnnotationModule,  @AT@ 3829 @LENGTH@ 29
---INS ReturnStatement@@SimpleName:enableJaxbAnnotationModule @TO@ MethodDeclaration@@public, Boolean, MethodName:getEnableJaxbAnnotationModule,  @AT@ 3871 @LENGTH@ 34
------INS SimpleName@@enableJaxbAnnotationModule @TO@ ReturnStatement@@SimpleName:enableJaxbAnnotationModule @AT@ 3878 @LENGTH@ 26


INS MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @TO@ TypeDeclaration@@[public]Hadoop20SShims, HadoopShimsSecure @AT@ 14253 @LENGTH@ 460
---INS Modifier@@public @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 14253 @LENGTH@ 6
---INS ParameterizedType@@TreeMap<Long,BlockLocation> @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 14260 @LENGTH@ 28
------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 14260 @LENGTH@ 7
------INS SimpleType@@Long @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 14268 @LENGTH@ 4
------INS SimpleType@@BlockLocation @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 14274 @LENGTH@ 13
---INS SimpleName@@MethodName:getLocationsWithOffset @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 14289 @LENGTH@ 22
---INS SingleVariableDeclaration@@FileSystem fs @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 14312 @LENGTH@ 13
------INS SimpleType@@FileSystem @TO@ SingleVariableDeclaration@@FileSystem fs @AT@ 14312 @LENGTH@ 10
------INS SimpleName@@fs @TO@ SingleVariableDeclaration@@FileSystem fs @AT@ 14323 @LENGTH@ 2
---INS SingleVariableDeclaration@@FileStatus status @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 14388 @LENGTH@ 17
------INS SimpleType@@FileStatus @TO@ SingleVariableDeclaration@@FileStatus status @AT@ 14388 @LENGTH@ 10
------INS SimpleName@@status @TO@ SingleVariableDeclaration@@FileStatus status @AT@ 14399 @LENGTH@ 6
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 14414 @LENGTH@ 11
---INS VariableDeclarationStatement@@TreeMap<Long,BlockLocation> offsetBlockMap=new TreeMap<Long,BlockLocation>(); @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 14432 @LENGTH@ 81
------INS ParameterizedType@@TreeMap<Long,BlockLocation> @TO@ VariableDeclarationStatement@@TreeMap<Long,BlockLocation> offsetBlockMap=new TreeMap<Long,BlockLocation>(); @AT@ 14432 @LENGTH@ 28
---------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 14432 @LENGTH@ 7
---------INS SimpleType@@Long @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 14440 @LENGTH@ 4
---------INS SimpleType@@BlockLocation @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 14446 @LENGTH@ 13
------INS VariableDeclarationFragment@@offsetBlockMap=new TreeMap<Long,BlockLocation>() @TO@ VariableDeclarationStatement@@TreeMap<Long,BlockLocation> offsetBlockMap=new TreeMap<Long,BlockLocation>(); @AT@ 14461 @LENGTH@ 51
---------INS SimpleName@@offsetBlockMap @TO@ VariableDeclarationFragment@@offsetBlockMap=new TreeMap<Long,BlockLocation>() @AT@ 14461 @LENGTH@ 14
---------INS ClassInstanceCreation@@TreeMap<Long,BlockLocation>[] @TO@ VariableDeclarationFragment@@offsetBlockMap=new TreeMap<Long,BlockLocation>() @AT@ 14478 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@TreeMap<Long,BlockLocation>[] @AT@ 14478 @LENGTH@ 3
------------INS ParameterizedType@@TreeMap<Long,BlockLocation> @TO@ ClassInstanceCreation@@TreeMap<Long,BlockLocation>[] @AT@ 14482 @LENGTH@ 28
---------------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 14482 @LENGTH@ 7
---------------INS SimpleType@@Long @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 14490 @LENGTH@ 4
---------------INS SimpleType@@BlockLocation @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 14496 @LENGTH@ 13
---INS VariableDeclarationStatement@@BlockLocation[] locations=getLocations(fs,status); @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 14518 @LENGTH@ 53
------INS ArrayType@@BlockLocation[] @TO@ VariableDeclarationStatement@@BlockLocation[] locations=getLocations(fs,status); @AT@ 14518 @LENGTH@ 15
---------INS SimpleType@@BlockLocation @TO@ ArrayType@@BlockLocation[] @AT@ 14518 @LENGTH@ 13
------INS VariableDeclarationFragment@@locations=getLocations(fs,status) @TO@ VariableDeclarationStatement@@BlockLocation[] locations=getLocations(fs,status); @AT@ 14534 @LENGTH@ 36
---------INS SimpleName@@locations @TO@ VariableDeclarationFragment@@locations=getLocations(fs,status) @AT@ 14534 @LENGTH@ 9
---------INS MethodInvocation@@getLocations(fs,status) @TO@ VariableDeclarationFragment@@locations=getLocations(fs,status) @AT@ 14546 @LENGTH@ 24
------------INS SimpleName@@MethodName:getLocations:[fs, status] @TO@ MethodInvocation@@getLocations(fs,status) @AT@ 14546 @LENGTH@ 24
---------------INS SimpleName@@fs @TO@ SimpleName@@MethodName:getLocations:[fs, status] @AT@ 14559 @LENGTH@ 2
---------------INS SimpleName@@status @TO@ SimpleName@@MethodName:getLocations:[fs, status] @AT@ 14563 @LENGTH@ 6
---INS EnhancedForStatement@@for (BlockLocation location : locations) {  offsetBlockMap.put(location.getOffset(),location);} @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 14576 @LENGTH@ 106
------INS SingleVariableDeclaration@@BlockLocation location @TO@ EnhancedForStatement@@for (BlockLocation location : locations) {  offsetBlockMap.put(location.getOffset(),location);} @AT@ 14581 @LENGTH@ 22
---------INS SimpleType@@BlockLocation @TO@ SingleVariableDeclaration@@BlockLocation location @AT@ 14581 @LENGTH@ 13
---------INS SimpleName@@location @TO@ SingleVariableDeclaration@@BlockLocation location @AT@ 14595 @LENGTH@ 8
------INS SimpleName@@locations @TO@ EnhancedForStatement@@for (BlockLocation location : locations) {  offsetBlockMap.put(location.getOffset(),location);} @AT@ 14606 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:offsetBlockMap.put(location.getOffset(),location) @TO@ EnhancedForStatement@@for (BlockLocation location : locations) {  offsetBlockMap.put(location.getOffset(),location);} @AT@ 14625 @LENGTH@ 51
---------INS MethodInvocation@@offsetBlockMap.put(location.getOffset(),location) @TO@ ExpressionStatement@@MethodInvocation:offsetBlockMap.put(location.getOffset(),location) @AT@ 14625 @LENGTH@ 50
------------INS SimpleName@@Name:offsetBlockMap @TO@ MethodInvocation@@offsetBlockMap.put(location.getOffset(),location) @AT@ 14625 @LENGTH@ 14
------------INS SimpleName@@MethodName:put:[location.getOffset(), location] @TO@ MethodInvocation@@offsetBlockMap.put(location.getOffset(),location) @AT@ 14640 @LENGTH@ 35
---------------INS MethodInvocation@@location.getOffset() @TO@ SimpleName@@MethodName:put:[location.getOffset(), location] @AT@ 14644 @LENGTH@ 20
------------------INS SimpleName@@Name:location @TO@ MethodInvocation@@location.getOffset() @AT@ 14644 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getOffset:[] @TO@ MethodInvocation@@location.getOffset() @AT@ 14653 @LENGTH@ 11
---------------INS SimpleName@@location @TO@ SimpleName@@MethodName:put:[location.getOffset(), location] @AT@ 14666 @LENGTH@ 8
---INS ReturnStatement@@SimpleName:offsetBlockMap @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 14687 @LENGTH@ 22
------INS SimpleName@@offsetBlockMap @TO@ ReturnStatement@@SimpleName:offsetBlockMap @AT@ 14694 @LENGTH@ 14


INS MethodDeclaration@@public, Map<String,Order>, MethodName:getSortKeysWithoutAliases,  @TO@ TypeDeclaration@@[public, abstract]AbstractSqlPagingQueryProvider, [PagingQueryProvider] @AT@ 7422 @LENGTH@ 613
---INS Modifier@@public @TO@ MethodDeclaration@@public, Map<String,Order>, MethodName:getSortKeysWithoutAliases,  @AT@ 7422 @LENGTH@ 6
---INS ParameterizedType@@Map<String,Order> @TO@ MethodDeclaration@@public, Map<String,Order>, MethodName:getSortKeysWithoutAliases,  @AT@ 7429 @LENGTH@ 18
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Order> @AT@ 7429 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Order> @AT@ 7433 @LENGTH@ 6
------INS SimpleType@@Order @TO@ ParameterizedType@@Map<String,Order> @AT@ 7441 @LENGTH@ 5
---INS SimpleName@@MethodName:getSortKeysWithoutAliases @TO@ MethodDeclaration@@public, Map<String,Order>, MethodName:getSortKeysWithoutAliases,  @AT@ 7448 @LENGTH@ 25
---INS VariableDeclarationStatement@@Map<String,Order> sortKeysWithoutAliases=new LinkedHashMap<String,Order>(); @TO@ MethodDeclaration@@public, Map<String,Order>, MethodName:getSortKeysWithoutAliases,  @AT@ 7480 @LENGTH@ 79
------INS ParameterizedType@@Map<String,Order> @TO@ VariableDeclarationStatement@@Map<String,Order> sortKeysWithoutAliases=new LinkedHashMap<String,Order>(); @AT@ 7480 @LENGTH@ 18
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Order> @AT@ 7480 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Order> @AT@ 7484 @LENGTH@ 6
---------INS SimpleType@@Order @TO@ ParameterizedType@@Map<String,Order> @AT@ 7492 @LENGTH@ 5
------INS VariableDeclarationFragment@@sortKeysWithoutAliases=new LinkedHashMap<String,Order>() @TO@ VariableDeclarationStatement@@Map<String,Order> sortKeysWithoutAliases=new LinkedHashMap<String,Order>(); @AT@ 7499 @LENGTH@ 59
---------INS SimpleName@@sortKeysWithoutAliases @TO@ VariableDeclarationFragment@@sortKeysWithoutAliases=new LinkedHashMap<String,Order>() @AT@ 7499 @LENGTH@ 22
---------INS ClassInstanceCreation@@LinkedHashMap<String,Order>[] @TO@ VariableDeclarationFragment@@sortKeysWithoutAliases=new LinkedHashMap<String,Order>() @AT@ 7524 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashMap<String,Order>[] @AT@ 7524 @LENGTH@ 3
------------INS ParameterizedType@@LinkedHashMap<String,Order> @TO@ ClassInstanceCreation@@LinkedHashMap<String,Order>[] @AT@ 7528 @LENGTH@ 28
---------------INS SimpleType@@LinkedHashMap @TO@ ParameterizedType@@LinkedHashMap<String,Order> @AT@ 7528 @LENGTH@ 13
---------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<String,Order> @AT@ 7542 @LENGTH@ 6
---------------INS SimpleType@@Order @TO@ ParameterizedType@@LinkedHashMap<String,Order> @AT@ 7550 @LENGTH@ 5
---INS EnhancedForStatement@@for (Map.Entry<String,Order> sortKeyEntry : sortKeys.entrySet()) {  String key=sortKeyEntry.getKey();  int separator=key.indexOf('.');  if (separator > 0) {    int columnIndex=separator + 1;    if (columnIndex < key.length()) {      sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());    }  } else {    sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue());  }} @TO@ MethodDeclaration@@public, Map<String,Order>, MethodName:getSortKeysWithoutAliases,  @AT@ 7563 @LENGTH@ 435
------INS SingleVariableDeclaration@@Map.Entry<String,Order> sortKeyEntry @TO@ EnhancedForStatement@@for (Map.Entry<String,Order> sortKeyEntry : sortKeys.entrySet()) {  String key=sortKeyEntry.getKey();  int separator=key.indexOf('.');  if (separator > 0) {    int columnIndex=separator + 1;    if (columnIndex < key.length()) {      sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());    }  } else {    sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue());  }} @AT@ 7568 @LENGTH@ 37
---------INS ParameterizedType@@Map.Entry<String,Order> @TO@ SingleVariableDeclaration@@Map.Entry<String,Order> sortKeyEntry @AT@ 7568 @LENGTH@ 24
------------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,Order> @AT@ 7568 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,Order> @AT@ 7578 @LENGTH@ 6
------------INS SimpleType@@Order @TO@ ParameterizedType@@Map.Entry<String,Order> @AT@ 7586 @LENGTH@ 5
---------INS SimpleName@@sortKeyEntry @TO@ SingleVariableDeclaration@@Map.Entry<String,Order> sortKeyEntry @AT@ 7593 @LENGTH@ 12
------INS MethodInvocation@@sortKeys.entrySet() @TO@ EnhancedForStatement@@for (Map.Entry<String,Order> sortKeyEntry : sortKeys.entrySet()) {  String key=sortKeyEntry.getKey();  int separator=key.indexOf('.');  if (separator > 0) {    int columnIndex=separator + 1;    if (columnIndex < key.length()) {      sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());    }  } else {    sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue());  }} @AT@ 7608 @LENGTH@ 19
---------INS SimpleName@@Name:sortKeys @TO@ MethodInvocation@@sortKeys.entrySet() @AT@ 7608 @LENGTH@ 8
---------INS SimpleName@@MethodName:entrySet:[] @TO@ MethodInvocation@@sortKeys.entrySet() @AT@ 7617 @LENGTH@ 10
------INS VariableDeclarationStatement@@String key=sortKeyEntry.getKey(); @TO@ EnhancedForStatement@@for (Map.Entry<String,Order> sortKeyEntry : sortKeys.entrySet()) {  String key=sortKeyEntry.getKey();  int separator=key.indexOf('.');  if (separator > 0) {    int columnIndex=separator + 1;    if (columnIndex < key.length()) {      sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());    }  } else {    sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue());  }} @AT@ 7634 @LENGTH@ 35
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key=sortKeyEntry.getKey(); @AT@ 7634 @LENGTH@ 6
---------INS VariableDeclarationFragment@@key=sortKeyEntry.getKey() @TO@ VariableDeclarationStatement@@String key=sortKeyEntry.getKey(); @AT@ 7641 @LENGTH@ 27
------------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=sortKeyEntry.getKey() @AT@ 7641 @LENGTH@ 3
------------INS MethodInvocation@@sortKeyEntry.getKey() @TO@ VariableDeclarationFragment@@key=sortKeyEntry.getKey() @AT@ 7647 @LENGTH@ 21
---------------INS SimpleName@@Name:sortKeyEntry @TO@ MethodInvocation@@sortKeyEntry.getKey() @AT@ 7647 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@sortKeyEntry.getKey() @AT@ 7660 @LENGTH@ 8
------INS VariableDeclarationStatement@@int separator=key.indexOf('.'); @TO@ EnhancedForStatement@@for (Map.Entry<String,Order> sortKeyEntry : sortKeys.entrySet()) {  String key=sortKeyEntry.getKey();  int separator=key.indexOf('.');  if (separator > 0) {    int columnIndex=separator + 1;    if (columnIndex < key.length()) {      sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());    }  } else {    sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue());  }} @AT@ 7673 @LENGTH@ 33
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int separator=key.indexOf('.'); @AT@ 7673 @LENGTH@ 3
---------INS VariableDeclarationFragment@@separator=key.indexOf('.') @TO@ VariableDeclarationStatement@@int separator=key.indexOf('.'); @AT@ 7677 @LENGTH@ 28
------------INS SimpleName@@separator @TO@ VariableDeclarationFragment@@separator=key.indexOf('.') @AT@ 7677 @LENGTH@ 9
------------INS MethodInvocation@@key.indexOf('.') @TO@ VariableDeclarationFragment@@separator=key.indexOf('.') @AT@ 7689 @LENGTH@ 16
---------------INS SimpleName@@Name:key @TO@ MethodInvocation@@key.indexOf('.') @AT@ 7689 @LENGTH@ 3
---------------INS SimpleName@@MethodName:indexOf:['.'] @TO@ MethodInvocation@@key.indexOf('.') @AT@ 7693 @LENGTH@ 12
------------------INS CharacterLiteral@@'.' @TO@ SimpleName@@MethodName:indexOf:['.'] @AT@ 7701 @LENGTH@ 3
------INS IfStatement@@if (separator > 0) {  int columnIndex=separator + 1;  if (columnIndex < key.length()) {    sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());  }} else {  sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue());} @TO@ EnhancedForStatement@@for (Map.Entry<String,Order> sortKeyEntry : sortKeys.entrySet()) {  String key=sortKeyEntry.getKey();  int separator=key.indexOf('.');  if (separator > 0) {    int columnIndex=separator + 1;    if (columnIndex < key.length()) {      sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());    }  } else {    sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue());  }} @AT@ 7710 @LENGTH@ 284
---------INS InfixExpression@@separator > 0 @TO@ IfStatement@@if (separator > 0) {  int columnIndex=separator + 1;  if (columnIndex < key.length()) {    sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());  }} else {  sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue());} @AT@ 7714 @LENGTH@ 13
------------INS SimpleName@@separator @TO@ InfixExpression@@separator > 0 @AT@ 7714 @LENGTH@ 9
------------INS Operator@@> @TO@ InfixExpression@@separator > 0 @AT@ 7723 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@separator > 0 @AT@ 7726 @LENGTH@ 1
---------INS Block@@ThenBody:{  int columnIndex=separator + 1;  if (columnIndex < key.length()) {    sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());  }} @TO@ IfStatement@@if (separator > 0) {  int columnIndex=separator + 1;  if (columnIndex < key.length()) {    sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());  }} else {  sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue());} @AT@ 7729 @LENGTH@ 173
------------INS VariableDeclarationStatement@@int columnIndex=separator + 1; @TO@ Block@@ThenBody:{  int columnIndex=separator + 1;  if (columnIndex < key.length()) {    sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());  }} @AT@ 7735 @LENGTH@ 32
---------------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int columnIndex=separator + 1; @AT@ 7735 @LENGTH@ 3
---------------INS VariableDeclarationFragment@@columnIndex=separator + 1 @TO@ VariableDeclarationStatement@@int columnIndex=separator + 1; @AT@ 7739 @LENGTH@ 27
------------------INS SimpleName@@columnIndex @TO@ VariableDeclarationFragment@@columnIndex=separator + 1 @AT@ 7739 @LENGTH@ 11
------------------INS InfixExpression@@separator + 1 @TO@ VariableDeclarationFragment@@columnIndex=separator + 1 @AT@ 7753 @LENGTH@ 13
---------------------INS SimpleName@@separator @TO@ InfixExpression@@separator + 1 @AT@ 7753 @LENGTH@ 9
---------------------INS Operator@@+ @TO@ InfixExpression@@separator + 1 @AT@ 7762 @LENGTH@ 1
---------------------INS NumberLiteral@@1 @TO@ InfixExpression@@separator + 1 @AT@ 7765 @LENGTH@ 1
------------INS IfStatement@@if (columnIndex < key.length()) {  sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());} @TO@ Block@@ThenBody:{  int columnIndex=separator + 1;  if (columnIndex < key.length()) {    sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());  }} @AT@ 7772 @LENGTH@ 125
---------------INS InfixExpression@@columnIndex < key.length() @TO@ IfStatement@@if (columnIndex < key.length()) {  sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());} @AT@ 7776 @LENGTH@ 26
------------------INS SimpleName@@columnIndex @TO@ InfixExpression@@columnIndex < key.length() @AT@ 7776 @LENGTH@ 11
------------------INS Operator@@< @TO@ InfixExpression@@columnIndex < key.length() @AT@ 7787 @LENGTH@ 1
------------------INS MethodInvocation@@key.length() @TO@ InfixExpression@@columnIndex < key.length() @AT@ 7790 @LENGTH@ 12
---------------------INS SimpleName@@Name:key @TO@ MethodInvocation@@key.length() @AT@ 7790 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@key.length() @AT@ 7794 @LENGTH@ 8
---------------INS Block@@ThenBody:{  sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());} @TO@ IfStatement@@if (columnIndex < key.length()) {  sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());} @AT@ 7804 @LENGTH@ 93
------------------INS ExpressionStatement@@MethodInvocation:sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue()) @TO@ Block@@ThenBody:{  sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());} @AT@ 7811 @LENGTH@ 80
---------------------INS MethodInvocation@@sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue()) @TO@ ExpressionStatement@@MethodInvocation:sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue()) @AT@ 7811 @LENGTH@ 79
------------------------INS SimpleName@@Name:sortKeysWithoutAliases @TO@ MethodInvocation@@sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue()) @AT@ 7811 @LENGTH@ 22
------------------------INS SimpleName@@MethodName:put:[key.substring(columnIndex), sortKeyEntry.getValue()] @TO@ MethodInvocation@@sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue()) @AT@ 7834 @LENGTH@ 56
---------------------------INS MethodInvocation@@key.substring(columnIndex) @TO@ SimpleName@@MethodName:put:[key.substring(columnIndex), sortKeyEntry.getValue()] @AT@ 7838 @LENGTH@ 26
------------------------------INS SimpleName@@Name:key @TO@ MethodInvocation@@key.substring(columnIndex) @AT@ 7838 @LENGTH@ 3
------------------------------INS SimpleName@@MethodName:substring:[columnIndex] @TO@ MethodInvocation@@key.substring(columnIndex) @AT@ 7842 @LENGTH@ 22
---------------------------------INS SimpleName@@columnIndex @TO@ SimpleName@@MethodName:substring:[columnIndex] @AT@ 7852 @LENGTH@ 11
---------------------------INS MethodInvocation@@sortKeyEntry.getValue() @TO@ SimpleName@@MethodName:put:[key.substring(columnIndex), sortKeyEntry.getValue()] @AT@ 7866 @LENGTH@ 23
------------------------------INS SimpleName@@Name:sortKeyEntry @TO@ MethodInvocation@@sortKeyEntry.getValue() @AT@ 7866 @LENGTH@ 12
------------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@sortKeyEntry.getValue() @AT@ 7879 @LENGTH@ 10
---------INS Block@@ElseBody:{  sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue());} @TO@ IfStatement@@if (separator > 0) {  int columnIndex=separator + 1;  if (columnIndex < key.length()) {    sortKeysWithoutAliases.put(key.substring(columnIndex),sortKeyEntry.getValue());  }} else {  sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue());} @AT@ 7908 @LENGTH@ 86
------------INS ExpressionStatement@@MethodInvocation:sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue()) @TO@ Block@@ElseBody:{  sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue());} @AT@ 7914 @LENGTH@ 75
---------------INS MethodInvocation@@sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue()) @TO@ ExpressionStatement@@MethodInvocation:sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue()) @AT@ 7914 @LENGTH@ 74
------------------INS SimpleName@@Name:sortKeysWithoutAliases @TO@ MethodInvocation@@sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue()) @AT@ 7914 @LENGTH@ 22
------------------INS SimpleName@@MethodName:put:[sortKeyEntry.getKey(), sortKeyEntry.getValue()] @TO@ MethodInvocation@@sortKeysWithoutAliases.put(sortKeyEntry.getKey(),sortKeyEntry.getValue()) @AT@ 7937 @LENGTH@ 51
---------------------INS MethodInvocation@@sortKeyEntry.getKey() @TO@ SimpleName@@MethodName:put:[sortKeyEntry.getKey(), sortKeyEntry.getValue()] @AT@ 7941 @LENGTH@ 21
------------------------INS SimpleName@@Name:sortKeyEntry @TO@ MethodInvocation@@sortKeyEntry.getKey() @AT@ 7941 @LENGTH@ 12
------------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@sortKeyEntry.getKey() @AT@ 7954 @LENGTH@ 8
---------------------INS MethodInvocation@@sortKeyEntry.getValue() @TO@ SimpleName@@MethodName:put:[sortKeyEntry.getKey(), sortKeyEntry.getValue()] @AT@ 7964 @LENGTH@ 23
------------------------INS SimpleName@@Name:sortKeyEntry @TO@ MethodInvocation@@sortKeyEntry.getValue() @AT@ 7964 @LENGTH@ 12
------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@sortKeyEntry.getValue() @AT@ 7977 @LENGTH@ 10
---INS ReturnStatement@@SimpleName:sortKeysWithoutAliases @TO@ MethodDeclaration@@public, Map<String,Order>, MethodName:getSortKeysWithoutAliases,  @AT@ 8002 @LENGTH@ 30
------INS SimpleName@@sortKeysWithoutAliases @TO@ ReturnStatement@@SimpleName:sortKeysWithoutAliases @AT@ 8009 @LENGTH@ 22


INS ExpressionStatement@@MethodInvocation:iterator.closeConnection() @TO@ MethodDeclaration@@public, void, MethodName:onFailure, Exchange exchange,  @AT@ 16040 @LENGTH@ 27
---INS MethodInvocation@@iterator.closeConnection() @TO@ ExpressionStatement@@MethodInvocation:iterator.closeConnection() @AT@ 16040 @LENGTH@ 26
------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.closeConnection() @AT@ 16040 @LENGTH@ 8
------INS SimpleName@@MethodName:closeConnection:[] @TO@ MethodInvocation@@iterator.closeConnection() @AT@ 16049 @LENGTH@ 17


UPD TypeDeclaration@@JpaResultConverters,  @TO@ [final]JpaResultConverters,  @AT@ 1172 @LENGTH@ 1147
---INS Modifier@@final @TO@ TypeDeclaration@@JpaResultConverters,  @AT@ 1166 @LENGTH@ 5


UPD FieldDeclaration@@String, [ALGORITHM_DES_CRYPT="des-crypt"] @TO@ String, [ALGORITHM_CRYPT_DES="crypt-des"] @AT@ 890 @LENGTH@ 41
---UPD VariableDeclarationFragment@@ALGORITHM_DES_CRYPT="des-crypt" @TO@ ALGORITHM_CRYPT_DES="crypt-des" @AT@ 897 @LENGTH@ 33
------UPD SimpleName@@ALGORITHM_DES_CRYPT @TO@ ALGORITHM_CRYPT_DES @AT@ 897 @LENGTH@ 19
------UPD StringLiteral@@"des-crypt" @TO@ "crypt-des" @AT@ 919 @LENGTH@ 11


UPD VariableDeclarationStatement@@FileContent mediaContent=new FileContent("application/vnd.google-apps.photo",fileContent); @TO@ FileContent mediaContent=new FileContent(null,fileContent); @AT@ 7514 @LENGTH@ 93
---UPD VariableDeclarationFragment@@mediaContent=new FileContent("application/vnd.google-apps.photo",fileContent) @TO@ mediaContent=new FileContent(null,fileContent) @AT@ 7526 @LENGTH@ 80
------UPD ClassInstanceCreation@@FileContent["application/vnd.google-apps.photo", fileContent] @TO@ FileContent[null, fileContent] @AT@ 7541 @LENGTH@ 65
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@FileContent["application/vnd.google-apps.photo", fileContent] @AT@ 7493 @LENGTH@ 4
---------DEL StringLiteral@@"application/vnd.google-apps.photo" @AT@ 7557 @LENGTH@ 35


INS MethodDeclaration@@private, void, MethodName:addToPipeline, String name, ChannelPipeline pipeline, EventExecutorGroup executor, ChannelHandler handler,  @TO@ TypeDeclaration@@[public]DefaultServerPipelineFactory, ServerPipelineFactory @AT@ 4999 @LENGTH@ 177
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:addToPipeline, String name, ChannelPipeline pipeline, EventExecutorGroup executor, ChannelHandler handler,  @AT@ 4999 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:addToPipeline, String name, ChannelPipeline pipeline, EventExecutorGroup executor, ChannelHandler handler,  @AT@ 5007 @LENGTH@ 4
---INS SimpleName@@MethodName:addToPipeline @TO@ MethodDeclaration@@private, void, MethodName:addToPipeline, String name, ChannelPipeline pipeline, EventExecutorGroup executor, ChannelHandler handler,  @AT@ 5012 @LENGTH@ 13
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@private, void, MethodName:addToPipeline, String name, ChannelPipeline pipeline, EventExecutorGroup executor, ChannelHandler handler,  @AT@ 5026 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 5026 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 5033 @LENGTH@ 4
---INS SingleVariableDeclaration@@ChannelPipeline pipeline @TO@ MethodDeclaration@@private, void, MethodName:addToPipeline, String name, ChannelPipeline pipeline, EventExecutorGroup executor, ChannelHandler handler,  @AT@ 5039 @LENGTH@ 24
------INS SimpleType@@ChannelPipeline @TO@ SingleVariableDeclaration@@ChannelPipeline pipeline @AT@ 5039 @LENGTH@ 15
------INS SimpleName@@pipeline @TO@ SingleVariableDeclaration@@ChannelPipeline pipeline @AT@ 5055 @LENGTH@ 8
---INS SingleVariableDeclaration@@EventExecutorGroup executor @TO@ MethodDeclaration@@private, void, MethodName:addToPipeline, String name, ChannelPipeline pipeline, EventExecutorGroup executor, ChannelHandler handler,  @AT@ 5065 @LENGTH@ 27
------INS SimpleType@@EventExecutorGroup @TO@ SingleVariableDeclaration@@EventExecutorGroup executor @AT@ 5065 @LENGTH@ 18
------INS SimpleName@@executor @TO@ SingleVariableDeclaration@@EventExecutorGroup executor @AT@ 5084 @LENGTH@ 8
---INS SingleVariableDeclaration@@ChannelHandler handler @TO@ MethodDeclaration@@private, void, MethodName:addToPipeline, String name, ChannelPipeline pipeline, EventExecutorGroup executor, ChannelHandler handler,  @AT@ 5094 @LENGTH@ 22
------INS SimpleType@@ChannelHandler @TO@ SingleVariableDeclaration@@ChannelHandler handler @AT@ 5094 @LENGTH@ 14
------INS SimpleName@@handler @TO@ SingleVariableDeclaration@@ChannelHandler handler @AT@ 5109 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:pipeline.addLast(executor,name,handler) @TO@ MethodDeclaration@@private, void, MethodName:addToPipeline, String name, ChannelPipeline pipeline, EventExecutorGroup executor, ChannelHandler handler,  @AT@ 5128 @LENGTH@ 42
------INS MethodInvocation@@pipeline.addLast(executor,name,handler) @TO@ ExpressionStatement@@MethodInvocation:pipeline.addLast(executor,name,handler) @AT@ 5128 @LENGTH@ 41
---------INS SimpleName@@Name:pipeline @TO@ MethodInvocation@@pipeline.addLast(executor,name,handler) @AT@ 5128 @LENGTH@ 8
---------INS SimpleName@@MethodName:addLast:[executor, name, handler] @TO@ MethodInvocation@@pipeline.addLast(executor,name,handler) @AT@ 5137 @LENGTH@ 32
------------INS SimpleName@@executor @TO@ SimpleName@@MethodName:addLast:[executor, name, handler] @AT@ 5145 @LENGTH@ 8
------------INS SimpleName@@name @TO@ SimpleName@@MethodName:addLast:[executor, name, handler] @AT@ 5155 @LENGTH@ 4
------------INS SimpleName@@handler @TO@ SimpleName@@MethodName:addLast:[executor, name, handler] @AT@ 5161 @LENGTH@ 7


INS MethodDeclaration@@private, voidMethodName:Jpa21Utils,  @TO@ TypeDeclaration@@[public]Jpa21Utils,  @AT@ 1506 @LENGTH@ 52
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:Jpa21Utils,  @AT@ 1506 @LENGTH@ 7
---INS SimpleName@@MethodName:Jpa21Utils @TO@ MethodDeclaration@@private, voidMethodName:Jpa21Utils,  @AT@ 1514 @LENGTH@ 10


UPD FieldDeclaration@@private, RestContextPathMatcher, [matcher=new RestContextPathMatcher("","",true)] @TO@ private, RestContextPathMatcher, [matcher=new RestContextPathMatcher("","",null,true)] @AT@ 1018 @LENGTH@ 82
---UPD VariableDeclarationFragment@@matcher=new RestContextPathMatcher("","",true) @TO@ matcher=new RestContextPathMatcher("","",null,true) @AT@ 1049 @LENGTH@ 50
------UPD ClassInstanceCreation@@RestContextPathMatcher["", "", true] @TO@ RestContextPathMatcher["", "", null, true] @AT@ 1059 @LENGTH@ 40
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@RestContextPathMatcher["", "", true] @AT@ 1094 @LENGTH@ 4


INS IfStatement@@if (Build.VERSION.SDK_INT > Build.VERSION_CODES.FROYO) {  conversionService.addConverter(new EnumToStringConverter(conversionService));  conversionService.addConverter(new MyEnumInterfaceToStringConverter<MyEnum>());  String result=conversionService.convert(MyEnum.A,String.class);  assertEquals("1",result);} @TO@ MethodDeclaration@@public, void, MethodName:testEnumWithInterfaceToStringConversion,  @AT@ 26718 @LENGTH@ 324
---INS InfixExpression@@Build.VERSION.SDK_INT > Build.VERSION_CODES.FROYO @TO@ IfStatement@@if (Build.VERSION.SDK_INT > Build.VERSION_CODES.FROYO) {  conversionService.addConverter(new EnumToStringConverter(conversionService));  conversionService.addConverter(new MyEnumInterfaceToStringConverter<MyEnum>());  String result=conversionService.convert(MyEnum.A,String.class);  assertEquals("1",result);} @AT@ 26722 @LENGTH@ 49
------INS QualifiedName@@Build.VERSION.SDK_INT @TO@ InfixExpression@@Build.VERSION.SDK_INT > Build.VERSION_CODES.FROYO @AT@ 26722 @LENGTH@ 21
---------INS QualifiedName@@Build.VERSION @TO@ QualifiedName@@Build.VERSION.SDK_INT @AT@ 26722 @LENGTH@ 13
------------INS SimpleName@@Build @TO@ QualifiedName@@Build.VERSION @AT@ 26722 @LENGTH@ 5
------------INS SimpleName@@VERSION @TO@ QualifiedName@@Build.VERSION @AT@ 26728 @LENGTH@ 7
---------INS SimpleName@@SDK_INT @TO@ QualifiedName@@Build.VERSION.SDK_INT @AT@ 26736 @LENGTH@ 7
------INS Operator@@> @TO@ InfixExpression@@Build.VERSION.SDK_INT > Build.VERSION_CODES.FROYO @AT@ 26743 @LENGTH@ 1
------INS QualifiedName@@Build.VERSION_CODES.FROYO @TO@ InfixExpression@@Build.VERSION.SDK_INT > Build.VERSION_CODES.FROYO @AT@ 26746 @LENGTH@ 25
---------INS QualifiedName@@Build.VERSION_CODES @TO@ QualifiedName@@Build.VERSION_CODES.FROYO @AT@ 26746 @LENGTH@ 19
------------INS SimpleName@@Build @TO@ QualifiedName@@Build.VERSION_CODES @AT@ 26746 @LENGTH@ 5
------------INS SimpleName@@VERSION_CODES @TO@ QualifiedName@@Build.VERSION_CODES @AT@ 26752 @LENGTH@ 13
---------INS SimpleName@@FROYO @TO@ QualifiedName@@Build.VERSION_CODES.FROYO @AT@ 26766 @LENGTH@ 5
---INS Block@@ThenBody:{  conversionService.addConverter(new EnumToStringConverter(conversionService));  conversionService.addConverter(new MyEnumInterfaceToStringConverter<MyEnum>());  String result=conversionService.convert(MyEnum.A,String.class);  assertEquals("1",result);} @TO@ IfStatement@@if (Build.VERSION.SDK_INT > Build.VERSION_CODES.FROYO) {  conversionService.addConverter(new EnumToStringConverter(conversionService));  conversionService.addConverter(new MyEnumInterfaceToStringConverter<MyEnum>());  String result=conversionService.convert(MyEnum.A,String.class);  assertEquals("1",result);} @AT@ 26773 @LENGTH@ 269
------MOV ExpressionStatement@@MethodInvocation:conversionService.addConverter(new EnumToStringConverter(conversionService)) @TO@ Block@@ThenBody:{  conversionService.addConverter(new EnumToStringConverter(conversionService));  conversionService.addConverter(new MyEnumInterfaceToStringConverter<MyEnum>());  String result=conversionService.convert(MyEnum.A,String.class);  assertEquals("1",result);} @AT@ 26579 @LENGTH@ 77
------MOV ExpressionStatement@@MethodInvocation:conversionService.addConverter(new MyEnumInterfaceToStringConverter<MyEnum>()) @TO@ Block@@ThenBody:{  conversionService.addConverter(new EnumToStringConverter(conversionService));  conversionService.addConverter(new MyEnumInterfaceToStringConverter<MyEnum>());  String result=conversionService.convert(MyEnum.A,String.class);  assertEquals("1",result);} @AT@ 26659 @LENGTH@ 79
------MOV VariableDeclarationStatement@@String result=conversionService.convert(MyEnum.A,String.class); @TO@ Block@@ThenBody:{  conversionService.addConverter(new EnumToStringConverter(conversionService));  conversionService.addConverter(new MyEnumInterfaceToStringConverter<MyEnum>());  String result=conversionService.convert(MyEnum.A,String.class);  assertEquals("1",result);} @AT@ 26741 @LENGTH@ 66
------MOV ExpressionStatement@@MethodInvocation:assertEquals("1",result) @TO@ Block@@ThenBody:{  conversionService.addConverter(new EnumToStringConverter(conversionService));  conversionService.addConverter(new MyEnumInterfaceToStringConverter<MyEnum>());  String result=conversionService.convert(MyEnum.A,String.class);  assertEquals("1",result);} @AT@ 26810 @LENGTH@ 26


UPD IfStatement@@if (!RabbitUtils.isNormalShutdown(cause)) {  logger.error("Channel shutdown: " + cause.getMessage());} @TO@ if (!RabbitUtils.isNormalChannelClose(cause)) {  logger.error("Channel shutdown: " + cause.getMessage());} @AT@ 8430 @LENGTH@ 107
---UPD PrefixExpression@@!RabbitUtils.isNormalShutdown(cause) @TO@ !RabbitUtils.isNormalChannelClose(cause) @AT@ 8434 @LENGTH@ 36
------UPD MethodInvocation@@RabbitUtils.isNormalShutdown(cause) @TO@ RabbitUtils.isNormalChannelClose(cause) @AT@ 8435 @LENGTH@ 35
---------UPD SimpleName@@MethodName:isNormalShutdown:[cause] @TO@ MethodName:isNormalChannelClose:[cause] @AT@ 8447 @LENGTH@ 23


DEL MethodDeclaration@@public, void, MethodName:testComponentDocumentation, Exception,  @AT@ 2223 @LENGTH@ 291
---DEL Modifier@@public @AT@ 2223 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2230 @LENGTH@ 4
---DEL SimpleName@@MethodName:testComponentDocumentation @AT@ 2235 @LENGTH@ 26
---DEL SimpleType@@Exception @AT@ 2271 @LENGTH@ 9
---DEL VariableDeclarationStatement@@CamelContext context=new DefaultCamelContext(); @AT@ 2291 @LENGTH@ 49
------DEL SimpleType@@CamelContext @AT@ 2291 @LENGTH@ 12
------DEL VariableDeclarationFragment@@context=new DefaultCamelContext() @AT@ 2304 @LENGTH@ 35
---------DEL SimpleName@@context @AT@ 2304 @LENGTH@ 7
---------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 2314 @LENGTH@ 25
------------DEL New@@new @AT@ 2314 @LENGTH@ 3
------------DEL SimpleType@@DefaultCamelContext @AT@ 2318 @LENGTH@ 19
---DEL VariableDeclarationStatement@@String html=context.getComponentDocumentation("sap-idoclist-server"); @AT@ 2349 @LENGTH@ 71
------DEL SimpleType@@String @AT@ 2349 @LENGTH@ 6
------DEL VariableDeclarationFragment@@html=context.getComponentDocumentation("sap-idoclist-server") @AT@ 2356 @LENGTH@ 63
---------DEL SimpleName@@html @AT@ 2356 @LENGTH@ 4
---------DEL MethodInvocation@@context.getComponentDocumentation("sap-idoclist-server") @AT@ 2363 @LENGTH@ 56
------------DEL SimpleName@@Name:context @AT@ 2363 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponentDocumentation:["sap-idoclist-server"] @AT@ 2371 @LENGTH@ 48
---------------DEL StringLiteral@@"sap-idoclist-server" @AT@ 2397 @LENGTH@ 21
---DEL ExpressionStatement@@MethodInvocation:assertNotNull("Should have found some auto-generated HTML if on Java 7",html) @AT@ 2429 @LENGTH@ 79
------DEL MethodInvocation@@assertNotNull("Should have found some auto-generated HTML if on Java 7",html) @AT@ 2429 @LENGTH@ 78
---------DEL SimpleName@@MethodName:assertNotNull:["Should have found some auto-generated HTML if on Java 7", html] @AT@ 2429 @LENGTH@ 78
------------DEL StringLiteral@@"Should have found some auto-generated HTML if on Java 7" @AT@ 2443 @LENGTH@ 57
------------DEL SimpleName@@html @AT@ 2502 @LENGTH@ 4


UPD MethodDeclaration@@public, CompressionCodec, MethodName:modify, EnumSet<Modifier> modifiers,  @TO@ public, CompressionCodec, MethodName:modify, @Nullable EnumSet<Modifier> modifiers,  @AT@ 4382 @LENGTH@ 806
---UPD SingleVariableDeclaration@@EnumSet<Modifier> modifiers @TO@ @Nullable EnumSet<Modifier> modifiers @AT@ 4413 @LENGTH@ 27
---INS IfStatement@@if (modifiers == null) {  return this;} @TO@ MethodDeclaration@@public, CompressionCodec, MethodName:modify, EnumSet<Modifier> modifiers,  @AT@ 4494 @LENGTH@ 49
------INS InfixExpression@@modifiers == null @TO@ IfStatement@@if (modifiers == null) {  return this;} @AT@ 4498 @LENGTH@ 17
---------INS SimpleName@@modifiers @TO@ InfixExpression@@modifiers == null @AT@ 4498 @LENGTH@ 9
---------INS Operator@@== @TO@ InfixExpression@@modifiers == null @AT@ 4507 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@modifiers == null @AT@ 4511 @LENGTH@ 4
------INS Block@@ThenBody:{  return this;} @TO@ IfStatement@@if (modifiers == null) {  return this;} @AT@ 4517 @LENGTH@ 26
---------INS ReturnStatement@@ThisExpression:this @TO@ Block@@ThenBody:{  return this;} @AT@ 4525 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 4532 @LENGTH@ 4


UPD IfStatement@@if (sessionConf.get("tez.queue.name") != null) {  conf.set("tez.queue.name",sessionConf.get("tez.queue.name"));} @TO@ if (sessionConf != null && sessionConf.get("tez.queue.name") != null) {  conf.set("tez.queue.name",sessionConf.get("tez.queue.name"));} @AT@ 9865 @LENGTH@ 123
---INS InfixExpression@@sessionConf != null && sessionConf.get("tez.queue.name") != null @TO@ IfStatement@@if (sessionConf.get("tez.queue.name") != null) {  conf.set("tez.queue.name",sessionConf.get("tez.queue.name"));} @AT@ 9869 @LENGTH@ 64
------MOV InfixExpression@@sessionConf.get("tez.queue.name") != null @TO@ InfixExpression@@sessionConf != null && sessionConf.get("tez.queue.name") != null @AT@ 9869 @LENGTH@ 41
------INS InfixExpression@@sessionConf != null @TO@ InfixExpression@@sessionConf != null && sessionConf.get("tez.queue.name") != null @AT@ 9869 @LENGTH@ 19
---------INS SimpleName@@sessionConf @TO@ InfixExpression@@sessionConf != null @AT@ 9869 @LENGTH@ 11
---------INS Operator@@!= @TO@ InfixExpression@@sessionConf != null @AT@ 9880 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@sessionConf != null @AT@ 9884 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@sessionConf != null && sessionConf.get("tez.queue.name") != null @AT@ 9888 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:assertExpression(new TestMethodResolver(),rootObject,"dateFormat('yyyy/MM', 0)","1970/01",true) @TO@ MethodInvocation:assertExpression(new TestMethodResolver(),rootObject,"dateFormat('yyyy/MM', 0)",nowYYYYMMzero,true) @AT@ 2054 @LENGTH@ 100
---UPD MethodInvocation@@assertExpression(new TestMethodResolver(),rootObject,"dateFormat('yyyy/MM', 0)","1970/01",true) @TO@ assertExpression(new TestMethodResolver(),rootObject,"dateFormat('yyyy/MM', 0)",nowYYYYMMzero,true) @AT@ 2054 @LENGTH@ 99
------UPD SimpleName@@MethodName:assertExpression:[new TestMethodResolver(), rootObject, "dateFormat('yyyy/MM', 0)", "1970/01", true] @TO@ MethodName:assertExpression:[new TestMethodResolver(), rootObject, "dateFormat('yyyy/MM', 0)", nowYYYYMMzero, true] @AT@ 2054 @LENGTH@ 99
---------INS SimpleName@@nowYYYYMMzero @TO@ SimpleName@@MethodName:assertExpression:[new TestMethodResolver(), rootObject, "dateFormat('yyyy/MM', 0)", "1970/01", true] @AT@ 2042 @LENGTH@ 13
---------DEL StringLiteral@@"1970/01" @AT@ 2137 @LENGTH@ 9


UPD SwitchStatement@@switch (kind) {case DATA:case DICTIONARY_DATA:  if (getCompressionStrategy() == CompressionStrategy.SPEED) {    modifiers=EnumSet.of(Modifier.FAST,Modifier.TEXT);  } else {    modifiers=EnumSet.of(Modifier.DEFAULT,Modifier.TEXT);  }break;case LENGTH:case DICTIONARY_COUNT:case PRESENT:case ROW_INDEX:case SECONDARY:modifiers=EnumSet.of(Modifier.FASTEST,Modifier.BINARY);break;default :modifiers=null;break;} @TO@ switch (kind) {case DATA:case DICTIONARY_DATA:  if (getCompressionStrategy() == CompressionStrategy.SPEED) {    modifiers=EnumSet.of(Modifier.FAST,Modifier.TEXT);  } else {    modifiers=EnumSet.of(Modifier.DEFAULT,Modifier.TEXT);  }break;case LENGTH:case DICTIONARY_COUNT:case PRESENT:case ROW_INDEX:case SECONDARY:modifiers=EnumSet.of(Modifier.FASTEST,Modifier.BINARY);break;default :LOG.warn("Missing ORC compression modifiers for " + kind);modifiers=null;break;} @AT@ 17613 @LENGTH@ 613
---INS ExpressionStatement@@MethodInvocation:LOG.warn("Missing ORC compression modifiers for " + kind) @TO@ SwitchStatement@@switch (kind) {case DATA:case DICTIONARY_DATA:  if (getCompressionStrategy() == CompressionStrategy.SPEED) {    modifiers=EnumSet.of(Modifier.FAST,Modifier.TEXT);  } else {    modifiers=EnumSet.of(Modifier.DEFAULT,Modifier.TEXT);  }break;case LENGTH:case DICTIONARY_COUNT:case PRESENT:case ROW_INDEX:case SECONDARY:modifiers=EnumSet.of(Modifier.FASTEST,Modifier.BINARY);break;default :modifiers=null;break;} @AT@ 18186 @LENGTH@ 58
------INS MethodInvocation@@LOG.warn("Missing ORC compression modifiers for " + kind) @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("Missing ORC compression modifiers for " + kind) @AT@ 18186 @LENGTH@ 57
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("Missing ORC compression modifiers for " + kind) @AT@ 18186 @LENGTH@ 3
---------INS SimpleName@@MethodName:warn:["Missing ORC compression modifiers for " + kind] @TO@ MethodInvocation@@LOG.warn("Missing ORC compression modifiers for " + kind) @AT@ 18190 @LENGTH@ 53
------------INS InfixExpression@@"Missing ORC compression modifiers for " + kind @TO@ SimpleName@@MethodName:warn:["Missing ORC compression modifiers for " + kind] @AT@ 18195 @LENGTH@ 47
---------------INS StringLiteral@@"Missing ORC compression modifiers for " @TO@ InfixExpression@@"Missing ORC compression modifiers for " + kind @AT@ 18195 @LENGTH@ 40
---------------INS Operator@@+ @TO@ InfixExpression@@"Missing ORC compression modifiers for " + kind @AT@ 18235 @LENGTH@ 1
---------------INS SimpleName@@kind @TO@ InfixExpression@@"Missing ORC compression modifiers for " + kind @AT@ 18238 @LENGTH@ 4


UPD TypeDeclaration@@[public]GMailEndpoint, DefaultEndpoint[OutboundBindingSupport<GMailEndpoint,Message,Void>] @TO@ [@UriEndpoint(scheme="gmail"), public]GMailEndpoint, DefaultEndpoint[OutboundBindingSupport<GMailEndpoint,Message,Void>] @AT@ 1434 @LENGTH@ 1863
---INS NormalAnnotation@@@UriEndpoint(scheme="gmail") @TO@ TypeDeclaration@@[public]GMailEndpoint, DefaultEndpoint[OutboundBindingSupport<GMailEndpoint,Message,Void>] @AT@ 1513 @LENGTH@ 30


UPD FieldDeclaration@@public, static, final, String, [REQUEST_STRING="<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>"] @TO@ public, static, final, String, [REQUEST_STRING="<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"" + DATE_PARAM_IN_VAL_STR + "\" PARAM_LIST_TIME_PARAM=\""+ TIME_PARAM_IN_VAL_STR+ "\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">"+ "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\""+ DATE_PARAM_IN_VAL_STR+ "\" TIME_PARAM=\""+ TIME_PARAM_IN_VAL_STR+ "\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\""+ DATE_PARAM_IN_VAL_STR+ "\" TIME_PARAM=\""+ TIME_PARAM_IN_VAL_STR+ "\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>"] @AT@ 1437 @LENGTH@ 1512
---UPD VariableDeclarationFragment@@REQUEST_STRING="<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @TO@ REQUEST_STRING="<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"" + DATE_PARAM_IN_VAL_STR + "\" PARAM_LIST_TIME_PARAM=\""+ TIME_PARAM_IN_VAL_STR+ "\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">"+ "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\""+ DATE_PARAM_IN_VAL_STR+ "\" TIME_PARAM=\""+ TIME_PARAM_IN_VAL_STR+ "\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\""+ DATE_PARAM_IN_VAL_STR+ "\" TIME_PARAM=\""+ TIME_PARAM_IN_VAL_STR+ "\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 1464 @LENGTH@ 1484
------UPD InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @TO@ "<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"" + DATE_PARAM_IN_VAL_STR + "\" PARAM_LIST_TIME_PARAM=\""+ TIME_PARAM_IN_VAL_STR+ "\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">"+ "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\""+ DATE_PARAM_IN_VAL_STR+ "\" TIME_PARAM=\""+ TIME_PARAM_IN_VAL_STR+ "\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\""+ DATE_PARAM_IN_VAL_STR+ "\" TIME_PARAM=\""+ TIME_PARAM_IN_VAL_STR+ "\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 1485 @LENGTH@ 1463
---------INS InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 1485 @LENGTH@ 477
------------MOV StringLiteral@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"" @AT@ 1485 @LENGTH@ 44
------------MOV Operator@@+ @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"" @AT@ 1529 @LENGTH@ 1
------------MOV StringLiteral@@"<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"" @AT@ 1535 @LENGTH@ 576
---------UPD StringLiteral@@"<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" @TO@ "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"" @AT@ 1535 @LENGTH@ 576
---------INS Operator@@+ @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 1962 @LENGTH@ 1
---------INS SimpleName@@DATE_PARAM_IN_VAL_STR @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 1965 @LENGTH@ 21
---------INS StringLiteral@@"\" PARAM_LIST_TIME_PARAM=\"" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 1989 @LENGTH@ 29
---------INS SimpleName@@TIME_PARAM_IN_VAL_STR @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 2021 @LENGTH@ 21
---------INS StringLiteral@@"\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 2045 @LENGTH@ 68
---------UPD StringLiteral@@"<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>" @TO@ "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"" @AT@ 2119 @LENGTH@ 367
---------INS SimpleName@@DATE_PARAM_IN_VAL_STR @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 2363 @LENGTH@ 21
---------INS StringLiteral@@"\" TIME_PARAM=\"" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 2387 @LENGTH@ 18
---------INS SimpleName@@TIME_PARAM_IN_VAL_STR @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 2408 @LENGTH@ 21
---------INS StringLiteral@@"\" STRING_PARAM=\"Four score and seven years ago ...\"/>" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 2432 @LENGTH@ 58
---------UPD StringLiteral@@"<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>" @TO@ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"" @AT@ 2530 @LENGTH@ 344
---------INS SimpleName@@DATE_PARAM_IN_VAL_STR @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 2753 @LENGTH@ 21
---------INS StringLiteral@@"\" TIME_PARAM=\"" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 2777 @LENGTH@ 18
---------INS SimpleName@@TIME_PARAM_IN_VAL_STR @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 2798 @LENGTH@ 21
---------INS StringLiteral@@"\" STRING_PARAM=\"Four score and seven years ago ...\"/>" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"ASCII\"?>" + "<TEST_FUNCTION_MODULE:Request xmlns:TEST_FUNCTION_MODULE=\"http://sap.fusesource.org/rfc/TEST_REPOSITORY/TEST_FUNCTION_MODULE\" PARAM_LIST_CHAR_PARAM=\"ABCDEFGHIJ\" PARAM_LIST_NUM_PARAM=\"0123456789\" PARAM_LIST_INT_PARAM=\"1968526677\" PARAM_LIST_FLOAT_PARAM=\"1.0E38\" PARAM_LIST_BCD_PARAM=\"100.00000000000001\" PARAM_LIST_BINARY_PARAM=\"55\" PARAM_LIST_BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" PARAM_LIST_DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" PARAM_LIST_TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" PARAM_LIST_STRING_PARAM=\"Four score and seven years ago ...\">" + "<PARAM_LIST_STRUCTURE_PARAM CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "<PARAM_LIST_TABLE_PARAM>"+ "<row CHAR_PARAM=\"ABCDEFGHIJ\" NUM_PARAM=\"0123456789\" INT_PARAM=\"1968526677\" FLOAT_PARAM=\"1.0E38\" BCD_PARAM=\"100.00000000000001\" BINARY_PARAM=\"55\" BINARY_ARRAY_PARAM=\"FF0F1E2D3C4B5A607988\" DATE_PARAM=\"1861-04-12T00:00:00.000-0500\" TIME_PARAM=\"1970-01-01T12:15:30.000-0500\" STRING_PARAM=\"Four score and seven years ago ...\"/>"+ "</PARAM_LIST_TABLE_PARAM>"+ "</TEST_FUNCTION_MODULE:Request>" @AT@ 2822 @LENGTH@ 58


UPD IfStatement@@if (module != null) {  return module.getClassLoader();} @TO@ if (module != null) {  if (WildFlySecurityManager.isChecking()) {    return WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){      @Override public ClassLoader run(){        return module.getClassLoader();      }    });  } else {    return module.getClassLoader();  }} @AT@ 5552 @LENGTH@ 75
---UPD Block@@ThenBody:{  return module.getClassLoader();} @TO@ ElseBody:{  return module.getClassLoader();} @AT@ 5572 @LENGTH@ 55
---INS Block@@ThenBody:{  if (WildFlySecurityManager.isChecking()) {    return WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){      @Override public ClassLoader run(){        return module.getClassLoader();      }    });  } else {    return module.getClassLoader();  }} @TO@ IfStatement@@if (module != null) {  return module.getClassLoader();} @AT@ 5671 @LENGTH@ 419
------INS IfStatement@@if (WildFlySecurityManager.isChecking()) {  return WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){    @Override public ClassLoader run(){      return module.getClassLoader();    }  });} else {  return module.getClassLoader();} @TO@ Block@@ThenBody:{  if (WildFlySecurityManager.isChecking()) {    return WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){      @Override public ClassLoader run(){        return module.getClassLoader();      }    });  } else {    return module.getClassLoader();  }} @AT@ 5685 @LENGTH@ 395
---------MOV Block@@ThenBody:{  return module.getClassLoader();} @TO@ IfStatement@@if (WildFlySecurityManager.isChecking()) {  return WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){    @Override public ClassLoader run(){      return module.getClassLoader();    }  });} else {  return module.getClassLoader();} @AT@ 5572 @LENGTH@ 55
---------INS MethodInvocation@@WildFlySecurityManager.isChecking() @TO@ IfStatement@@if (WildFlySecurityManager.isChecking()) {  return WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){    @Override public ClassLoader run(){      return module.getClassLoader();    }  });} else {  return module.getClassLoader();} @AT@ 5688 @LENGTH@ 35
------------INS SimpleName@@Name:WildFlySecurityManager @TO@ MethodInvocation@@WildFlySecurityManager.isChecking() @AT@ 5688 @LENGTH@ 22
------------INS SimpleName@@MethodName:isChecking:[] @TO@ MethodInvocation@@WildFlySecurityManager.isChecking() @AT@ 5711 @LENGTH@ 12
---------INS Block@@ThenBody:{  return WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){    @Override public ClassLoader run(){      return module.getClassLoader();    }  });} @TO@ IfStatement@@if (WildFlySecurityManager.isChecking()) {  return WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){    @Override public ClassLoader run(){      return module.getClassLoader();    }  });} else {  return module.getClassLoader();} @AT@ 5725 @LENGTH@ 286
------------INS ReturnStatement@@MethodInvocation:WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){
  @Override public ClassLoader run(){
    return module.getClassLoader();
  }
}
) @TO@ Block@@ThenBody:{  return WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){    @Override public ClassLoader run(){      return module.getClassLoader();    }  });} @AT@ 5743 @LENGTH@ 254
---------------INS MethodInvocation@@WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){
  @Override public ClassLoader run(){
    return module.getClassLoader();
  }
}
) @TO@ ReturnStatement@@MethodInvocation:WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){
  @Override public ClassLoader run(){
    return module.getClassLoader();
  }
}
) @AT@ 5750 @LENGTH@ 246
------------------INS SimpleName@@Name:WildFlySecurityManager @TO@ MethodInvocation@@WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){
  @Override public ClassLoader run(){
    return module.getClassLoader();
  }
}
) @AT@ 5750 @LENGTH@ 22
------------------INS SimpleName@@MethodName:doUnchecked:[new PrivilegedAction<ClassLoader>(){
  @Override public ClassLoader run(){
    return module.getClassLoader();
  }
}
] @TO@ MethodInvocation@@WildFlySecurityManager.doUnchecked(new PrivilegedAction<ClassLoader>(){
  @Override public ClassLoader run(){
    return module.getClassLoader();
  }
}
) @AT@ 5773 @LENGTH@ 223
---------------------INS ClassInstanceCreation@@PrivilegedAction<ClassLoader>[] @TO@ SimpleName@@MethodName:doUnchecked:[new PrivilegedAction<ClassLoader>(){
  @Override public ClassLoader run(){
    return module.getClassLoader();
  }
}
] @AT@ 5785 @LENGTH@ 210
------------------------INS New@@new @TO@ ClassInstanceCreation@@PrivilegedAction<ClassLoader>[] @AT@ 5785 @LENGTH@ 3
------------------------INS ParameterizedType@@PrivilegedAction<ClassLoader> @TO@ ClassInstanceCreation@@PrivilegedAction<ClassLoader>[] @AT@ 5789 @LENGTH@ 29
---------------------------INS SimpleType@@PrivilegedAction @TO@ ParameterizedType@@PrivilegedAction<ClassLoader> @AT@ 5789 @LENGTH@ 16
---------------------------INS SimpleType@@ClassLoader @TO@ ParameterizedType@@PrivilegedAction<ClassLoader> @AT@ 5806 @LENGTH@ 11
------------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@PrivilegedAction<ClassLoader>[] @AT@ 5821 @LENGTH@ 174
---------------------------INS MethodDeclaration@@public, ClassLoader, MethodName:run,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 5873 @LENGTH@ 104
------------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, ClassLoader, MethodName:run,  @AT@ 5873 @LENGTH@ 6
------------------------------INS SimpleType@@ClassLoader @TO@ MethodDeclaration@@public, ClassLoader, MethodName:run,  @AT@ 5880 @LENGTH@ 11
------------------------------INS SimpleName@@MethodName:run @TO@ MethodDeclaration@@public, ClassLoader, MethodName:run,  @AT@ 5892 @LENGTH@ 3
------------------------------INS ReturnStatement@@MethodInvocation:module.getClassLoader() @TO@ MethodDeclaration@@public, ClassLoader, MethodName:run,  @AT@ 5924 @LENGTH@ 31
---------------------------------INS MethodInvocation@@module.getClassLoader() @TO@ ReturnStatement@@MethodInvocation:module.getClassLoader() @AT@ 5931 @LENGTH@ 23
------------------------------------INS SimpleName@@Name:module @TO@ MethodInvocation@@module.getClassLoader() @AT@ 5931 @LENGTH@ 6
------------------------------------INS SimpleName@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@module.getClassLoader() @AT@ 5938 @LENGTH@ 16


UPD MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @TO@ protected, void, MethodName:initChannel, Channel ch, Exception,  @AT@ 3475 @LENGTH@ 600
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 3472 @LENGTH@ 4
---UPD Modifier@@public @TO@ protected @AT@ 3475 @LENGTH@ 6
---INS SimpleName@@MethodName:initChannel @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 3477 @LENGTH@ 11
---DEL SimpleType@@ChannelPipeline @AT@ 3482 @LENGTH@ 15
---INS SingleVariableDeclaration@@Channel ch @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 3489 @LENGTH@ 10
------INS SimpleType@@Channel @TO@ SingleVariableDeclaration@@Channel ch @AT@ 3489 @LENGTH@ 7
------INS SimpleName@@ch @TO@ SingleVariableDeclaration@@Channel ch @AT@ 3497 @LENGTH@ 2
---DEL SimpleName@@MethodName:getPipeline @AT@ 3498 @LENGTH@ 11
---MOV ExpressionStatement@@Assignment:clientInvoked=true @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 3543 @LENGTH@ 21
---UPD VariableDeclarationStatement@@ChannelPipeline channelPipeline=Channels.pipeline(); @TO@ ChannelPipeline channelPipeline=ch.pipeline(); @AT@ 3578 @LENGTH@ 54
------UPD VariableDeclarationFragment@@channelPipeline=Channels.pipeline() @TO@ channelPipeline=ch.pipeline() @AT@ 3594 @LENGTH@ 37
---------UPD MethodInvocation@@Channels.pipeline() @TO@ ch.pipeline() @AT@ 3612 @LENGTH@ 19
------------UPD SimpleName@@Name:Channels @TO@ Name:ch @AT@ 3612 @LENGTH@ 8
---DEL ReturnStatement@@SimpleName:channelPipeline @AT@ 4042 @LENGTH@ 23
------DEL SimpleName@@channelPipeline @AT@ 4049 @LENGTH@ 15


UPD Block@@ThenBody:{  HiveSessionImplwithUGI hiveSessionUgi=new HiveSessionImplwithUGI(protocol,username,password,hiveConf,ipAddress,delegationToken);  session=HiveSessionProxy.getProxy(hiveSessionUgi,hiveSessionUgi.getSessionUgi());  hiveSessionUgi.setProxySession(session);} @TO@ ThenBody:{  HiveSessionImplwithUGI sessionWithUGI=new HiveSessionImplwithUGI(protocol,username,password,hiveConf,ipAddress,delegationToken);  session=HiveSessionProxy.getProxy(sessionWithUGI,sessionWithUGI.getSessionUgi());  sessionWithUGI.setProxySession(session);} @AT@ 9254 @LENGTH@ 295
---UPD VariableDeclarationStatement@@HiveSessionImplwithUGI hiveSessionUgi=new HiveSessionImplwithUGI(protocol,username,password,hiveConf,ipAddress,delegationToken); @TO@ HiveSessionImplwithUGI sessionWithUGI=new HiveSessionImplwithUGI(protocol,username,password,hiveConf,ipAddress,delegationToken); @AT@ 9262 @LENGTH@ 143
------UPD VariableDeclarationFragment@@hiveSessionUgi=new HiveSessionImplwithUGI(protocol,username,password,hiveConf,ipAddress,delegationToken) @TO@ sessionWithUGI=new HiveSessionImplwithUGI(protocol,username,password,hiveConf,ipAddress,delegationToken) @AT@ 9285 @LENGTH@ 119
---------UPD SimpleName@@hiveSessionUgi @TO@ sessionWithUGI @AT@ 9285 @LENGTH@ 14
---UPD ExpressionStatement@@Assignment:session=HiveSessionProxy.getProxy(hiveSessionUgi,hiveSessionUgi.getSessionUgi()) @TO@ Assignment:session=HiveSessionProxy.getProxy(sessionWithUGI,sessionWithUGI.getSessionUgi()) @AT@ 9412 @LENGTH@ 84
------UPD Assignment@@session=HiveSessionProxy.getProxy(hiveSessionUgi,hiveSessionUgi.getSessionUgi()) @TO@ session=HiveSessionProxy.getProxy(sessionWithUGI,sessionWithUGI.getSessionUgi()) @AT@ 9412 @LENGTH@ 83
---------UPD MethodInvocation@@HiveSessionProxy.getProxy(hiveSessionUgi,hiveSessionUgi.getSessionUgi()) @TO@ HiveSessionProxy.getProxy(sessionWithUGI,sessionWithUGI.getSessionUgi()) @AT@ 9422 @LENGTH@ 73
------------UPD SimpleName@@MethodName:getProxy:[hiveSessionUgi, hiveSessionUgi.getSessionUgi()] @TO@ MethodName:getProxy:[sessionWithUGI, sessionWithUGI.getSessionUgi()] @AT@ 9439 @LENGTH@ 56
---------------UPD SimpleName@@hiveSessionUgi @TO@ sessionWithUGI @AT@ 9448 @LENGTH@ 14
---------------UPD MethodInvocation@@hiveSessionUgi.getSessionUgi() @TO@ sessionWithUGI.getSessionUgi() @AT@ 9464 @LENGTH@ 30
------------------UPD SimpleName@@Name:hiveSessionUgi @TO@ Name:sessionWithUGI @AT@ 9464 @LENGTH@ 14
---UPD ExpressionStatement@@MethodInvocation:hiveSessionUgi.setProxySession(session) @TO@ MethodInvocation:sessionWithUGI.setProxySession(session) @AT@ 9503 @LENGTH@ 40
------UPD MethodInvocation@@hiveSessionUgi.setProxySession(session) @TO@ sessionWithUGI.setProxySession(session) @AT@ 9503 @LENGTH@ 39
---------UPD SimpleName@@Name:hiveSessionUgi @TO@ Name:sessionWithUGI @AT@ 9503 @LENGTH@ 14


UPD MethodDeclaration@@public, void, MethodName:testBuilderListener, ConfigurationException,  @TO@ public, void, MethodName:testBuilderListenerReset, ConfigurationException,  @AT@ 14999 @LENGTH@ 838
---UPD SimpleName@@MethodName:testBuilderListener @TO@ MethodName:testBuilderListenerReset @AT@ 15011 @LENGTH@ 19
---INS VariableDeclarationStatement@@XMLConfiguration configuration=builder.getConfiguration(); @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListener, ConfigurationException,  @AT@ 15662 @LENGTH@ 60
------INS SimpleType@@XMLConfiguration @TO@ VariableDeclarationStatement@@XMLConfiguration configuration=builder.getConfiguration(); @AT@ 15662 @LENGTH@ 16
------INS VariableDeclarationFragment@@configuration=builder.getConfiguration() @TO@ VariableDeclarationStatement@@XMLConfiguration configuration=builder.getConfiguration(); @AT@ 15679 @LENGTH@ 42
---------INS SimpleName@@configuration @TO@ VariableDeclarationFragment@@configuration=builder.getConfiguration() @AT@ 15679 @LENGTH@ 13
---------INS MethodInvocation@@builder.getConfiguration() @TO@ VariableDeclarationFragment@@configuration=builder.getConfiguration() @AT@ 15695 @LENGTH@ 26
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getConfiguration() @AT@ 15695 @LENGTH@ 7
------------INS SimpleName@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@builder.getConfiguration() @AT@ 15703 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertNotSame("Configuration not reset",configuration,builder.getConfiguration()) @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListener, ConfigurationException,  @AT@ 15969 @LENGTH@ 100
------INS MethodInvocation@@assertNotSame("Configuration not reset",configuration,builder.getConfiguration()) @TO@ ExpressionStatement@@MethodInvocation:assertNotSame("Configuration not reset",configuration,builder.getConfiguration()) @AT@ 15969 @LENGTH@ 99
---------INS SimpleName@@MethodName:assertNotSame:["Configuration not reset", configuration, builder.getConfiguration()] @TO@ MethodInvocation@@assertNotSame("Configuration not reset",configuration,builder.getConfiguration()) @AT@ 15969 @LENGTH@ 99
------------INS StringLiteral@@"Configuration not reset" @TO@ SimpleName@@MethodName:assertNotSame:["Configuration not reset", configuration, builder.getConfiguration()] @AT@ 15983 @LENGTH@ 25
------------INS SimpleName@@configuration @TO@ SimpleName@@MethodName:assertNotSame:["Configuration not reset", configuration, builder.getConfiguration()] @AT@ 16010 @LENGTH@ 13
------------INS MethodInvocation@@builder.getConfiguration() @TO@ SimpleName@@MethodName:assertNotSame:["Configuration not reset", configuration, builder.getConfiguration()] @AT@ 16041 @LENGTH@ 26
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getConfiguration() @AT@ 16041 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@builder.getConfiguration() @AT@ 16049 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:setEnableJaxbAnnotationModule, Boolean enableJaxbAnnotationModule,  @TO@ TypeDeclaration@@[@XmlRootElement(name="json"), @XmlAccessorType(XmlAccessType.FIELD), public]JsonDataFormat, DataFormatDefinition @AT@ 3917 @LENGTH@ 155
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setEnableJaxbAnnotationModule, Boolean enableJaxbAnnotationModule,  @AT@ 3917 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setEnableJaxbAnnotationModule, Boolean enableJaxbAnnotationModule,  @AT@ 3924 @LENGTH@ 4
---INS SimpleName@@MethodName:setEnableJaxbAnnotationModule @TO@ MethodDeclaration@@public, void, MethodName:setEnableJaxbAnnotationModule, Boolean enableJaxbAnnotationModule,  @AT@ 3929 @LENGTH@ 29
---INS SingleVariableDeclaration@@Boolean enableJaxbAnnotationModule @TO@ MethodDeclaration@@public, void, MethodName:setEnableJaxbAnnotationModule, Boolean enableJaxbAnnotationModule,  @AT@ 3959 @LENGTH@ 34
------INS SimpleType@@Boolean @TO@ SingleVariableDeclaration@@Boolean enableJaxbAnnotationModule @AT@ 3959 @LENGTH@ 7
------INS SimpleName@@enableJaxbAnnotationModule @TO@ SingleVariableDeclaration@@Boolean enableJaxbAnnotationModule @AT@ 3967 @LENGTH@ 26
---INS ExpressionStatement@@Assignment:this.enableJaxbAnnotationModule=enableJaxbAnnotationModule @TO@ MethodDeclaration@@public, void, MethodName:setEnableJaxbAnnotationModule, Boolean enableJaxbAnnotationModule,  @AT@ 4005 @LENGTH@ 61
------INS Assignment@@this.enableJaxbAnnotationModule=enableJaxbAnnotationModule @TO@ ExpressionStatement@@Assignment:this.enableJaxbAnnotationModule=enableJaxbAnnotationModule @AT@ 4005 @LENGTH@ 60
---------INS FieldAccess@@this.enableJaxbAnnotationModule @TO@ Assignment@@this.enableJaxbAnnotationModule=enableJaxbAnnotationModule @AT@ 4005 @LENGTH@ 31
------------INS ThisExpression@@this @TO@ FieldAccess@@this.enableJaxbAnnotationModule @AT@ 4005 @LENGTH@ 4
------------INS SimpleName@@enableJaxbAnnotationModule @TO@ FieldAccess@@this.enableJaxbAnnotationModule @AT@ 4010 @LENGTH@ 26
---------INS Operator@@= @TO@ Assignment@@this.enableJaxbAnnotationModule=enableJaxbAnnotationModule @AT@ 4036 @LENGTH@ 1
---------INS SimpleName@@enableJaxbAnnotationModule @TO@ Assignment@@this.enableJaxbAnnotationModule=enableJaxbAnnotationModule @AT@ 4039 @LENGTH@ 26


UPD VariableDeclarationStatement@@List<String> names=new ArrayList<>(headers.size()); @TO@ List<String> names=new ArrayList<String>(headers.size()); @AT@ 8287 @LENGTH@ 53
---UPD VariableDeclarationFragment@@names=new ArrayList<>(headers.size()) @TO@ names=new ArrayList<String>(headers.size()) @AT@ 8300 @LENGTH@ 39
------UPD ClassInstanceCreation@@ArrayList<>[headers.size()] @TO@ ArrayList<String>[headers.size()] @AT@ 8308 @LENGTH@ 31
---------UPD ParameterizedType@@ArrayList<> @TO@ ArrayList<String> @AT@ 8312 @LENGTH@ 11
------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<> @AT@ 8320 @LENGTH@ 6


MOV FieldDeclaration@@private, DataSource, [dataSource] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="jdbc",label="database"), public]JdbcEndpoint, DefaultEndpoint @AT@ 1447 @LENGTH@ 30


MOV ExpressionStatement@@SuperMethodInvocation:super.doStart() @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2059 @LENGTH@ 16


UPD IfStatement@@if (channel != null && channel.isOpen()) {  try {    channel.close();  } catch (  IOException ex) {    logger.debug("Could not close RabbitMQ Channel",ex);  }catch (  ShutdownSignalException sig) {    if (!isNormalShutdown(sig)) {      logger.debug("Unexpected exception on closing RabbitMQ Channel",sig);    }  }catch (  Throwable ex) {    logger.debug("Unexpected exception on closing RabbitMQ Channel",ex);  }} @TO@ if (channel != null) {  try {    channel.close();  } catch (  IOException ex) {    logger.debug("Could not close RabbitMQ Channel",ex);  }catch (  ShutdownSignalException sig) {    if (!isNormalShutdown(sig)) {      logger.debug("Unexpected exception on closing RabbitMQ Channel",sig);    }  }catch (  Throwable ex) {    logger.debug("Unexpected exception on closing RabbitMQ Channel",ex);  }} @AT@ 2575 @LENGTH@ 439
---DEL InfixExpression@@channel != null && channel.isOpen() @AT@ 2579 @LENGTH@ 35
------DEL InfixExpression@@channel != null @AT@ 2579 @LENGTH@ 15
------DEL Operator@@&& @AT@ 2594 @LENGTH@ 2
------DEL MethodInvocation@@channel.isOpen() @AT@ 2598 @LENGTH@ 16
---------DEL SimpleName@@Name:channel @AT@ 2598 @LENGTH@ 7
---------DEL SimpleName@@MethodName:isOpen:[] @AT@ 2606 @LENGTH@ 8
---INS InfixExpression@@channel != null @TO@ IfStatement@@if (channel != null && channel.isOpen()) {  try {    channel.close();  } catch (  IOException ex) {    logger.debug("Could not close RabbitMQ Channel",ex);  }catch (  ShutdownSignalException sig) {    if (!isNormalShutdown(sig)) {      logger.debug("Unexpected exception on closing RabbitMQ Channel",sig);    }  }catch (  Throwable ex) {    logger.debug("Unexpected exception on closing RabbitMQ Channel",ex);  }} @AT@ 2579 @LENGTH@ 15
------MOV SimpleName@@channel @TO@ InfixExpression@@channel != null @AT@ 2579 @LENGTH@ 7
------MOV Operator@@!= @TO@ InfixExpression@@channel != null @AT@ 2586 @LENGTH@ 2
------MOV NullLiteral@@null @TO@ InfixExpression@@channel != null @AT@ 2590 @LENGTH@ 4


UPD VariableDeclarationStatement@@final List<RexNode> aboveFilters=filter != null ? RelOptUtil.conjunctions(filter.getCondition()) : ImmutableList.<RexNode>of(); @TO@ final List<RexNode> aboveFilters=filter != null ? RelOptUtil.conjunctions(filter.getCondition()) : new ArrayList<RexNode>(); @AT@ 3299 @LENGTH@ 139
---UPD VariableDeclarationFragment@@aboveFilters=filter != null ? RelOptUtil.conjunctions(filter.getCondition()) : ImmutableList.<RexNode>of() @TO@ aboveFilters=filter != null ? RelOptUtil.conjunctions(filter.getCondition()) : new ArrayList<RexNode>() @AT@ 3319 @LENGTH@ 118
------UPD ConditionalExpression@@filter != null ? RelOptUtil.conjunctions(filter.getCondition()) : ImmutableList.<RexNode>of() @TO@ filter != null ? RelOptUtil.conjunctions(filter.getCondition()) : new ArrayList<RexNode>() @AT@ 3334 @LENGTH@ 103
---------DEL MethodInvocation@@ImmutableList.<RexNode>of() @AT@ 3409 @LENGTH@ 28
------------DEL SimpleName@@Name:ImmutableList @AT@ 3409 @LENGTH@ 13
------------DEL SimpleName@@MethodName:of:[] @AT@ 3433 @LENGTH@ 4
---------INS ClassInstanceCreation@@ArrayList<RexNode>[] @TO@ ConditionalExpression@@filter != null ? RelOptUtil.conjunctions(filter.getCondition()) : ImmutableList.<RexNode>of() @AT@ 4167 @LENGTH@ 24
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<RexNode>[] @AT@ 4167 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<RexNode> @TO@ ClassInstanceCreation@@ArrayList<RexNode>[] @AT@ 4171 @LENGTH@ 18
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<RexNode> @AT@ 4171 @LENGTH@ 9
---------------INS SimpleType@@RexNode @TO@ ParameterizedType@@ArrayList<RexNode> @AT@ 4181 @LENGTH@ 7


UPD VariableDeclarationStatement@@FileStatus[] listStatus=fs.listStatus(new Path(locn)); @TO@ FileStatus[] listStatus=fs.listStatus(new Path(locn),hiddenFileFilter); @AT@ 23433 @LENGTH@ 56
---UPD VariableDeclarationFragment@@listStatus=fs.listStatus(new Path(locn)) @TO@ listStatus=fs.listStatus(new Path(locn),hiddenFileFilter) @AT@ 23446 @LENGTH@ 42
------UPD MethodInvocation@@fs.listStatus(new Path(locn)) @TO@ fs.listStatus(new Path(locn),hiddenFileFilter) @AT@ 23459 @LENGTH@ 29
---------UPD SimpleName@@MethodName:listStatus:[new Path(locn)] @TO@ MethodName:listStatus:[new Path(locn), hiddenFileFilter] @AT@ 23462 @LENGTH@ 26
------------INS SimpleName@@hiddenFileFilter @TO@ SimpleName@@MethodName:listStatus:[new Path(locn)] @AT@ 23492 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:registerParser("routeContext",new RouteContextDefinitionParser()) @TO@ MethodDeclaration@@public, void, MethodName:init,  @AT@ 4957 @LENGTH@ 67
---INS MethodInvocation@@registerParser("routeContext",new RouteContextDefinitionParser()) @TO@ ExpressionStatement@@MethodInvocation:registerParser("routeContext",new RouteContextDefinitionParser()) @AT@ 4957 @LENGTH@ 66
------INS SimpleName@@MethodName:registerParser:["routeContext", new RouteContextDefinitionParser()] @TO@ MethodInvocation@@registerParser("routeContext",new RouteContextDefinitionParser()) @AT@ 4957 @LENGTH@ 66
---------INS StringLiteral@@"routeContext" @TO@ SimpleName@@MethodName:registerParser:["routeContext", new RouteContextDefinitionParser()] @AT@ 4972 @LENGTH@ 14
---------INS ClassInstanceCreation@@RouteContextDefinitionParser[] @TO@ SimpleName@@MethodName:registerParser:["routeContext", new RouteContextDefinitionParser()] @AT@ 4988 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@RouteContextDefinitionParser[] @AT@ 4988 @LENGTH@ 3
------------INS SimpleType@@RouteContextDefinitionParser @TO@ ClassInstanceCreation@@RouteContextDefinitionParser[] @AT@ 4992 @LENGTH@ 28


INS MethodDeclaration@@public, voidMethodName:ServletComponent,  @TO@ TypeDeclaration@@[public]ServletComponent, HttpComponent @AT@ 1722 @LENGTH@ 71
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:ServletComponent,  @AT@ 1722 @LENGTH@ 6
---INS SimpleName@@MethodName:ServletComponent @TO@ MethodDeclaration@@public, voidMethodName:ServletComponent,  @AT@ 1729 @LENGTH@ 16
---INS SuperConstructorInvocation@@super(ServletEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:ServletComponent,  @AT@ 1758 @LENGTH@ 29
------INS TypeLiteral@@ServletEndpoint.class @TO@ SuperConstructorInvocation@@super(ServletEndpoint.class);
 @AT@ 1764 @LENGTH@ 21


UPD TypeDeclaration@@[public]CollectionFactory,  @TO@ [public, abstract]CollectionFactory,  @AT@ 979 @LENGTH@ 2161
---INS Modifier@@abstract @TO@ TypeDeclaration@@[public]CollectionFactory,  @AT@ 986 @LENGTH@ 8


UPD MethodDeclaration@@BossPool, MethodName:build,  @TO@ EventLoopGroup, MethodName:build,  @AT@ 2044 @LENGTH@ 148
---UPD SimpleType@@BossPool @TO@ EventLoopGroup @AT@ 2035 @LENGTH@ 8
---UPD ReturnStatement@@ClassInstanceCreation:new NioServerBossPool(Executors.newCachedThreadPool(),bossCount,new CamelNettyThreadNameDeterminer(pattern,name)) @TO@ ClassInstanceCreation:new NioEventLoopGroup(bossCount,new CamelThreadFactory(pattern,name,false)) @AT@ 2062 @LENGTH@ 124
------UPD ClassInstanceCreation@@NioServerBossPool[Executors.newCachedThreadPool(), bossCount, new CamelNettyThreadNameDeterminer(pattern,name)] @TO@ NioEventLoopGroup[bossCount, new CamelThreadFactory(pattern,name,false)] @AT@ 2069 @LENGTH@ 116
---------UPD SimpleType@@NioServerBossPool @TO@ NioEventLoopGroup @AT@ 2073 @LENGTH@ 17
---------DEL MethodInvocation@@Executors.newCachedThreadPool() @AT@ 2091 @LENGTH@ 31
------------DEL SimpleName@@Name:Executors @AT@ 2091 @LENGTH@ 9
------------DEL SimpleName@@MethodName:newCachedThreadPool:[] @AT@ 2101 @LENGTH@ 21
---------UPD ClassInstanceCreation@@CamelNettyThreadNameDeterminer[pattern, name] @TO@ CamelThreadFactory[pattern, name, false] @AT@ 2135 @LENGTH@ 49
------------UPD SimpleType@@CamelNettyThreadNameDeterminer @TO@ CamelThreadFactory @AT@ 2139 @LENGTH@ 30
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@CamelNettyThreadNameDeterminer[pattern, name] @AT@ 2173 @LENGTH@ 5


UPD VariableDeclarationStatement@@Map<String,String[]> selected=new LinkedHashMap<>(); @TO@ Map<String,String[]> selected=new LinkedHashMap<String,String[]>(); @AT@ 48389 @LENGTH@ 55
---UPD VariableDeclarationFragment@@selected=new LinkedHashMap<>() @TO@ selected=new LinkedHashMap<String,String[]>() @AT@ 48411 @LENGTH@ 32
------UPD ClassInstanceCreation@@LinkedHashMap<>[] @TO@ LinkedHashMap<String,String[]>[] @AT@ 48422 @LENGTH@ 21
---------UPD ParameterizedType@@LinkedHashMap<> @TO@ LinkedHashMap<String,String[]> @AT@ 48426 @LENGTH@ 15
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 48440 @LENGTH@ 6
------------INS ArrayType@@String[] @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 48448 @LENGTH@ 8
---------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 48448 @LENGTH@ 6


INS MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @TO@ TypeDeclaration@@[public]DiscoveryOptionsWriteAttributeHandler, ReloadRequiredWriteAttributeHandler @AT@ 4067 @LENGTH@ 154
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 4067 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 4077 @LENGTH@ 7
---INS SimpleName@@MethodName:requiresRuntime @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 4085 @LENGTH@ 15
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 4101 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 4101 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 4118 @LENGTH@ 7
---INS ReturnStatement@@InfixExpression:context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 4137 @LENGTH@ 78
------INS InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @TO@ ReturnStatement@@InfixExpression:context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 4144 @LENGTH@ 70
---------INS InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 4144 @LENGTH@ 46
------------INS MethodInvocation@@context.getRunningMode() @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 4144 @LENGTH@ 24
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRunningMode() @AT@ 4144 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getRunningMode:[] @TO@ MethodInvocation@@context.getRunningMode() @AT@ 4152 @LENGTH@ 16
------------INS Operator@@== @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 4168 @LENGTH@ 2
------------INS QualifiedName@@RunningMode.NORMAL @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 4172 @LENGTH@ 18
---------------INS SimpleName@@RunningMode @TO@ QualifiedName@@RunningMode.NORMAL @AT@ 4172 @LENGTH@ 11
---------------INS SimpleName@@NORMAL @TO@ QualifiedName@@RunningMode.NORMAL @AT@ 4184 @LENGTH@ 6
---------INS Operator@@&& @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 4190 @LENGTH@ 2
---------INS PrefixExpression@@!context.isBooting() @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 4194 @LENGTH@ 20
------------INS Operator@@! @TO@ PrefixExpression@@!context.isBooting() @AT@ 4194 @LENGTH@ 1
------------INS MethodInvocation@@context.isBooting() @TO@ PrefixExpression@@!context.isBooting() @AT@ 4195 @LENGTH@ 19
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isBooting() @AT@ 4195 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isBooting:[] @TO@ MethodInvocation@@context.isBooting() @AT@ 4203 @LENGTH@ 11


UPD Block@@SyncBody:{  page=itemLastIndex / pageSize;  current=itemLastIndex % pageSize;  results=doPageRead();  page++;} @TO@ SyncBody:{  page=(itemLastIndex - 1) / pageSize;  current=(itemLastIndex - 1) % pageSize;  results=doPageRead();  page++;} @AT@ 5203 @LENGTH@ 119
---UPD ExpressionStatement@@Assignment:page=itemLastIndex / pageSize @TO@ Assignment:page=(itemLastIndex - 1) / pageSize @AT@ 5208 @LENGTH@ 32
------UPD Assignment@@page=itemLastIndex / pageSize @TO@ page=(itemLastIndex - 1) / pageSize @AT@ 5208 @LENGTH@ 31
---------UPD InfixExpression@@itemLastIndex / pageSize @TO@ (itemLastIndex - 1) / pageSize @AT@ 5215 @LENGTH@ 24
------------INS ParenthesizedExpression@@(itemLastIndex - 1) @TO@ InfixExpression@@itemLastIndex / pageSize @AT@ 5216 @LENGTH@ 19
---------------INS InfixExpression@@itemLastIndex - 1 @TO@ ParenthesizedExpression@@(itemLastIndex - 1) @AT@ 5217 @LENGTH@ 17
------------------MOV SimpleName@@itemLastIndex @TO@ InfixExpression@@itemLastIndex - 1 @AT@ 5215 @LENGTH@ 13
------------------INS Operator@@- @TO@ InfixExpression@@itemLastIndex - 1 @AT@ 5230 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@itemLastIndex - 1 @AT@ 5233 @LENGTH@ 1
---UPD ExpressionStatement@@Assignment:current=itemLastIndex % pageSize @TO@ Assignment:current=(itemLastIndex - 1) % pageSize @AT@ 5244 @LENGTH@ 35
------UPD Assignment@@current=itemLastIndex % pageSize @TO@ current=(itemLastIndex - 1) % pageSize @AT@ 5244 @LENGTH@ 34
---------UPD InfixExpression@@itemLastIndex % pageSize @TO@ (itemLastIndex - 1) % pageSize @AT@ 5254 @LENGTH@ 24
------------INS ParenthesizedExpression@@(itemLastIndex - 1) @TO@ InfixExpression@@itemLastIndex % pageSize @AT@ 5261 @LENGTH@ 19
---------------INS InfixExpression@@itemLastIndex - 1 @TO@ ParenthesizedExpression@@(itemLastIndex - 1) @AT@ 5262 @LENGTH@ 17
------------------MOV SimpleName@@itemLastIndex @TO@ InfixExpression@@itemLastIndex - 1 @AT@ 5254 @LENGTH@ 13
------------------INS Operator@@- @TO@ InfixExpression@@itemLastIndex - 1 @AT@ 5275 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@itemLastIndex - 1 @AT@ 5278 @LENGTH@ 1


UPD TypeDeclaration@@[public]CharacterConverter, [Converter<Character>] @TO@ [@Component, public]CharacterConverter, [Converter<Character>] @AT@ 942 @LENGTH@ 606
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]CharacterConverter, [Converter<Character>] @AT@ 992 @LENGTH@ 10


INS MethodDeclaration@@public, voidMethodName:MyBatisComponent,  @TO@ TypeDeclaration@@[public]MyBatisComponent, DefaultComponent @AT@ 1485 @LENGTH@ 71
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:MyBatisComponent,  @AT@ 1485 @LENGTH@ 6
---INS SimpleName@@MethodName:MyBatisComponent @TO@ MethodDeclaration@@public, voidMethodName:MyBatisComponent,  @AT@ 1492 @LENGTH@ 16
---INS SuperConstructorInvocation@@super(MyBatisEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:MyBatisComponent,  @AT@ 1521 @LENGTH@ 29
------INS TypeLiteral@@MyBatisEndpoint.class @TO@ SuperConstructorInvocation@@super(MyBatisEndpoint.class);
 @AT@ 1527 @LENGTH@ 21


UPD ReturnStatement@@InfixExpression:versionAttribute.getJavaType().isPrimitive() && ((Number)versionValue).longValue() == 0 @TO@ InfixExpression:((Number)versionValue).longValue() == 0 @AT@ 6524 @LENGTH@ 96
---DEL InfixExpression@@versionAttribute.getJavaType().isPrimitive() && ((Number)versionValue).longValue() == 0 @AT@ 6531 @LENGTH@ 88
------DEL MethodInvocation@@versionAttribute.getJavaType().isPrimitive() @AT@ 6531 @LENGTH@ 44
---------DEL MethodInvocation@@MethodName:getJavaType:[] @AT@ 6531 @LENGTH@ 30
---------DEL SimpleName@@Name:versionAttribute @AT@ 6531 @LENGTH@ 16
---------DEL SimpleName@@MethodName:isPrimitive:[] @AT@ 6562 @LENGTH@ 13
------DEL Operator@@&& @AT@ 6575 @LENGTH@ 2
---MOV InfixExpression@@((Number)versionValue).longValue() == 0 @TO@ ReturnStatement@@InfixExpression:versionAttribute.getJavaType().isPrimitive() && ((Number)versionValue).longValue() == 0 @AT@ 6579 @LENGTH@ 40


UPD VariableDeclarationStatement@@DefaultHttpClient client1=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client1=HttpClients.createDefault(); @AT@ 2652 @LENGTH@ 98
---UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 2652 @LENGTH@ 17
---UPD VariableDeclarationFragment@@client1=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client1=HttpClients.createDefault() @AT@ 2670 @LENGTH@ 79
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 2680 @LENGTH@ 69
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 2680 @LENGTH@ 43
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 2709 @LENGTH@ 11
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 2724 @LENGTH@ 25


UPD VariableDeclarationStatement@@A annotation=AnnotationUtils.findAnnotation(method,annotationType); @TO@ A foundAnnotation=AnnotationUtils.findAnnotation(method,annotationType); @AT@ 2770 @LENGTH@ 70
---UPD VariableDeclarationFragment@@annotation=AnnotationUtils.findAnnotation(method,annotationType) @TO@ foundAnnotation=AnnotationUtils.findAnnotation(method,annotationType) @AT@ 2772 @LENGTH@ 67
------UPD SimpleName@@annotation @TO@ foundAnnotation @AT@ 2772 @LENGTH@ 10


UPD TryStatement@@try {  clash=false;  if (candidate == null && checkFirst) {    candidate=prefix;  } else {    candidate=prefix + "-" + getNextCounter(counter);  }  LOG.trace("Checking OSGi Service Registry for existence of existing CamelContext with name: {}",candidate);  ServiceReference[] refs=context.getServiceReferences(CamelContext.class.getName(),"(" + key + "="+ candidate+ ")");  if (refs != null && refs.length > 0) {    for (    ServiceReference ref : refs) {      Object id=ref.getProperty(key);      if (id != null && candidate.equals(id)) {        clash=true;        break;      }    }  }} catch (InvalidSyntaxException e) {  LOG.debug("Error finding free Camel name in OSGi Service Registry due " + e.getMessage() + ". This exception is ignored.",e);  break;} @TO@ try {  clash=false;  if (candidate == null && checkFirst) {    candidate=prefix;  } else {    candidate=prefix + "-" + getNextCounter(counter);  }  LOG.trace("Checking OSGi Service Registry for existence of existing CamelContext with name: {}",candidate);  ServiceReference<?>[] refs=context.getServiceReferences(CamelContext.class.getName(),"(" + key + "="+ candidate+ ")");  if (refs != null && refs.length > 0) {    for (    ServiceReference<?> ref : refs) {      Object id=ref.getProperty(key);      if (id != null && candidate.equals(id)) {        clash=true;        break;      }    }  }} catch (InvalidSyntaxException e) {  LOG.debug("Error finding free Camel name in OSGi Service Registry due " + e.getMessage() + ". This exception is ignored.",e);  break;} @AT@ 2265 @LENGTH@ 1206
---UPD VariableDeclarationStatement@@ServiceReference[] refs=context.getServiceReferences(CamelContext.class.getName(),"(" + key + "="+ candidate+ ")"); @TO@ ServiceReference<?>[] refs=context.getServiceReferences(CamelContext.class.getName(),"(" + key + "="+ candidate+ ")"); @AT@ 2744 @LENGTH@ 120
------UPD ArrayType@@ServiceReference[] @TO@ ServiceReference<?>[] @AT@ 2744 @LENGTH@ 18
---------DEL SimpleType@@ServiceReference @AT@ 2744 @LENGTH@ 16
---------INS ParameterizedType@@ServiceReference<?> @TO@ ArrayType@@ServiceReference[] @AT@ 2744 @LENGTH@ 19
------------INS SimpleType@@ServiceReference @TO@ ParameterizedType@@ServiceReference<?> @AT@ 2744 @LENGTH@ 16
------------INS WildcardType@@? @TO@ ParameterizedType@@ServiceReference<?> @AT@ 2761 @LENGTH@ 1
---UPD IfStatement@@if (refs != null && refs.length > 0) {  for (  ServiceReference ref : refs) {    Object id=ref.getProperty(key);    if (id != null && candidate.equals(id)) {      clash=true;      break;    }  }} @TO@ if (refs != null && refs.length > 0) {  for (  ServiceReference<?> ref : refs) {    Object id=ref.getProperty(key);    if (id != null && candidate.equals(id)) {      clash=true;      break;    }  }} @AT@ 2881 @LENGTH@ 361
------UPD Block@@ThenBody:{  for (  ServiceReference ref : refs) {    Object id=ref.getProperty(key);    if (id != null && candidate.equals(id)) {      clash=true;      break;    }  }} @TO@ ThenBody:{  for (  ServiceReference<?> ref : refs) {    Object id=ref.getProperty(key);    if (id != null && candidate.equals(id)) {      clash=true;      break;    }  }} @AT@ 2918 @LENGTH@ 324
---------UPD EnhancedForStatement@@for (ServiceReference ref : refs) {  Object id=ref.getProperty(key);  if (id != null && candidate.equals(id)) {    clash=true;    break;  }} @TO@ for (ServiceReference<?> ref : refs) {  Object id=ref.getProperty(key);  if (id != null && candidate.equals(id)) {    clash=true;    break;  }} @AT@ 2940 @LENGTH@ 284
------------UPD SingleVariableDeclaration@@ServiceReference ref @TO@ ServiceReference<?> ref @AT@ 2945 @LENGTH@ 20
---------------DEL SimpleType@@ServiceReference @AT@ 2945 @LENGTH@ 16
---------------INS ParameterizedType@@ServiceReference<?> @TO@ SingleVariableDeclaration@@ServiceReference ref @AT@ 2948 @LENGTH@ 19
------------------INS SimpleType@@ServiceReference @TO@ ParameterizedType@@ServiceReference<?> @AT@ 2948 @LENGTH@ 16
------------------INS WildcardType@@? @TO@ ParameterizedType@@ServiceReference<?> @AT@ 2965 @LENGTH@ 1


UPD TypeDeclaration@@[public]BigIntegerConverter, [Converter<BigInteger>] @TO@ [@Component, public]BigIntegerConverter, [Converter<BigInteger>] @AT@ 972 @LENGTH@ 571
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]BigIntegerConverter, [Converter<BigInteger>] @AT@ 1022 @LENGTH@ 10


UPD TypeDeclaration@@[public]HdfsEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="hdfs",consumerClass=HdfsConsumer.class), public]HdfsEndpoint, DefaultEndpoint @AT@ 1092 @LENGTH@ 935
---INS NormalAnnotation@@@UriEndpoint(scheme="hdfs",consumerClass=HdfsConsumer.class) @TO@ TypeDeclaration@@[public]HdfsEndpoint, DefaultEndpoint @AT@ 1171 @LENGTH@ 65


UPD MethodDeclaration@@public, void, MethodName:testFindAccessTokensByUserName,  @TO@ public, void, MethodName:testFindAccessTokensByClientIdAndUserName,  @AT@ 5540 @LENGTH@ 571
---UPD SimpleName@@MethodName:testFindAccessTokensByUserName @TO@ MethodName:testFindAccessTokensByClientIdAndUserName @AT@ 5552 @LENGTH@ 30


INS IfStatement@@if (putObjectRequest.getFile() != null) {  try {    s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile()));  } catch (  FileNotFoundException e) {    throw new AmazonServiceException("Cannot store the file object.",e);  }} else {  s3Object.setObjectContent(putObjectRequest.getInputStream());} @TO@ MethodDeclaration@@public, PutObjectResult, MethodName:putObject, PutObjectRequest putObjectRequest, AmazonClientException, AmazonServiceException,  @AT@ 13439 @LENGTH@ 400
---INS InfixExpression@@putObjectRequest.getFile() != null @TO@ IfStatement@@if (putObjectRequest.getFile() != null) {  try {    s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile()));  } catch (  FileNotFoundException e) {    throw new AmazonServiceException("Cannot store the file object.",e);  }} else {  s3Object.setObjectContent(putObjectRequest.getInputStream());} @AT@ 13443 @LENGTH@ 34
------INS MethodInvocation@@putObjectRequest.getFile() @TO@ InfixExpression@@putObjectRequest.getFile() != null @AT@ 13443 @LENGTH@ 26
---------INS SimpleName@@Name:putObjectRequest @TO@ MethodInvocation@@putObjectRequest.getFile() @AT@ 13443 @LENGTH@ 16
---------INS SimpleName@@MethodName:getFile:[] @TO@ MethodInvocation@@putObjectRequest.getFile() @AT@ 13460 @LENGTH@ 9
------INS Operator@@!= @TO@ InfixExpression@@putObjectRequest.getFile() != null @AT@ 13469 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@putObjectRequest.getFile() != null @AT@ 13473 @LENGTH@ 4
---INS Block@@ThenBody:{  try {    s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile()));  } catch (  FileNotFoundException e) {    throw new AmazonServiceException("Cannot store the file object.",e);  }} @TO@ IfStatement@@if (putObjectRequest.getFile() != null) {  try {    s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile()));  } catch (  FileNotFoundException e) {    throw new AmazonServiceException("Cannot store the file object.",e);  }} else {  s3Object.setObjectContent(putObjectRequest.getInputStream());} @AT@ 13479 @LENGTH@ 269
------INS TryStatement@@try {  s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile()));} catch (FileNotFoundException e) {  throw new AmazonServiceException("Cannot store the file object.",e);} @TO@ Block@@ThenBody:{  try {    s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile()));  } catch (  FileNotFoundException e) {    throw new AmazonServiceException("Cannot store the file object.",e);  }} @AT@ 13493 @LENGTH@ 245
---------INS ExpressionStatement@@MethodInvocation:s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile())) @TO@ TryStatement@@try {  s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile()));} catch (FileNotFoundException e) {  throw new AmazonServiceException("Cannot store the file object.",e);} @AT@ 13515 @LENGTH@ 75
------------INS MethodInvocation@@s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile())) @TO@ ExpressionStatement@@MethodInvocation:s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile())) @AT@ 13515 @LENGTH@ 74
---------------INS SimpleName@@Name:s3Object @TO@ MethodInvocation@@s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile())) @AT@ 13515 @LENGTH@ 8
---------------INS SimpleName@@MethodName:setObjectContent:[new FileInputStream(putObjectRequest.getFile())] @TO@ MethodInvocation@@s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile())) @AT@ 13524 @LENGTH@ 65
------------------INS ClassInstanceCreation@@FileInputStream[putObjectRequest.getFile()] @TO@ SimpleName@@MethodName:setObjectContent:[new FileInputStream(putObjectRequest.getFile())] @AT@ 13541 @LENGTH@ 47
---------------------INS New@@new @TO@ ClassInstanceCreation@@FileInputStream[putObjectRequest.getFile()] @AT@ 13541 @LENGTH@ 3
---------------------INS SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[putObjectRequest.getFile()] @AT@ 13545 @LENGTH@ 15
---------------------INS MethodInvocation@@putObjectRequest.getFile() @TO@ ClassInstanceCreation@@FileInputStream[putObjectRequest.getFile()] @AT@ 13561 @LENGTH@ 26
------------------------INS SimpleName@@Name:putObjectRequest @TO@ MethodInvocation@@putObjectRequest.getFile() @AT@ 13561 @LENGTH@ 16
------------------------INS SimpleName@@MethodName:getFile:[] @TO@ MethodInvocation@@putObjectRequest.getFile() @AT@ 13578 @LENGTH@ 9
---------INS CatchClause@@catch (FileNotFoundException e) {  throw new AmazonServiceException("Cannot store the file object.",e);} @TO@ TryStatement@@try {  s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile()));} catch (FileNotFoundException e) {  throw new AmazonServiceException("Cannot store the file object.",e);} @AT@ 13605 @LENGTH@ 133
------------INS SingleVariableDeclaration@@FileNotFoundException e @TO@ CatchClause@@catch (FileNotFoundException e) {  throw new AmazonServiceException("Cannot store the file object.",e);} @AT@ 13612 @LENGTH@ 23
---------------INS SimpleType@@FileNotFoundException @TO@ SingleVariableDeclaration@@FileNotFoundException e @AT@ 13612 @LENGTH@ 21
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@FileNotFoundException e @AT@ 13634 @LENGTH@ 1
------------INS ThrowStatement@@ClassInstanceCreation:new AmazonServiceException("Cannot store the file object.",e) @TO@ CatchClause@@catch (FileNotFoundException e) {  throw new AmazonServiceException("Cannot store the file object.",e);} @AT@ 13655 @LENGTH@ 69
---------------INS ClassInstanceCreation@@AmazonServiceException["Cannot store the file object.", e] @TO@ ThrowStatement@@ClassInstanceCreation:new AmazonServiceException("Cannot store the file object.",e) @AT@ 13661 @LENGTH@ 62
------------------INS New@@new @TO@ ClassInstanceCreation@@AmazonServiceException["Cannot store the file object.", e] @AT@ 13661 @LENGTH@ 3
------------------INS SimpleType@@AmazonServiceException @TO@ ClassInstanceCreation@@AmazonServiceException["Cannot store the file object.", e] @AT@ 13665 @LENGTH@ 22
------------------INS StringLiteral@@"Cannot store the file object." @TO@ ClassInstanceCreation@@AmazonServiceException["Cannot store the file object.", e] @AT@ 13688 @LENGTH@ 31
------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@AmazonServiceException["Cannot store the file object.", e] @AT@ 13721 @LENGTH@ 1
---INS Block@@ElseBody:{  s3Object.setObjectContent(putObjectRequest.getInputStream());} @TO@ IfStatement@@if (putObjectRequest.getFile() != null) {  try {    s3Object.setObjectContent(new FileInputStream(putObjectRequest.getFile()));  } catch (  FileNotFoundException e) {    throw new AmazonServiceException("Cannot store the file object.",e);  }} else {  s3Object.setObjectContent(putObjectRequest.getInputStream());} @AT@ 13754 @LENGTH@ 85
------MOV ExpressionStatement@@MethodInvocation:s3Object.setObjectContent(putObjectRequest.getInputStream()) @TO@ Block@@ElseBody:{  s3Object.setObjectContent(putObjectRequest.getInputStream());} @AT@ 13336 @LENGTH@ 61


UPD IfStatement@@if (onCompletions != null) {  for (  Synchronization onCompletion : onCompletions) {    unitOfWork.addSynchronization(onCompletion);  }  onCompletions.clear();  onCompletions=null;} @TO@ if (unitOfWork != null && onCompletions != null) {  for (  Synchronization onCompletion : onCompletions) {    unitOfWork.addSynchronization(onCompletion);  }  onCompletions.clear();  onCompletions=null;} @AT@ 12138 @LENGTH@ 498
---INS InfixExpression@@unitOfWork != null && onCompletions != null @TO@ IfStatement@@if (onCompletions != null) {  for (  Synchronization onCompletion : onCompletions) {    unitOfWork.addSynchronization(onCompletion);  }  onCompletions.clear();  onCompletions=null;} @AT@ 12142 @LENGTH@ 43
------INS InfixExpression@@unitOfWork != null @TO@ InfixExpression@@unitOfWork != null && onCompletions != null @AT@ 12142 @LENGTH@ 18
---------INS SimpleName@@unitOfWork @TO@ InfixExpression@@unitOfWork != null @AT@ 12142 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@unitOfWork != null @AT@ 12152 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@unitOfWork != null @AT@ 12156 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@unitOfWork != null && onCompletions != null @AT@ 12160 @LENGTH@ 2
------INS InfixExpression@@onCompletions != null @TO@ InfixExpression@@unitOfWork != null && onCompletions != null @AT@ 12164 @LENGTH@ 21
---------MOV SimpleName@@onCompletions @TO@ InfixExpression@@onCompletions != null @AT@ 12142 @LENGTH@ 13
---------MOV Operator@@!= @TO@ InfixExpression@@onCompletions != null @AT@ 12155 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@onCompletions != null @AT@ 12159 @LENGTH@ 4
---DEL InfixExpression@@onCompletions != null @AT@ 12142 @LENGTH@ 21


UPD MethodDeclaration@@public, voidMethodName:SftpEndpoint, String uri, SftpComponent component, RemoteFileConfiguration configuration,  @TO@ public, voidMethodName:SftpEndpoint, String uri, SftpComponent component, SftpConfiguration configuration,  @AT@ 1485 @LENGTH@ 149
---UPD SingleVariableDeclaration@@RemoteFileConfiguration configuration @TO@ SftpConfiguration configuration @AT@ 1542 @LENGTH@ 37
------UPD SimpleType@@RemoteFileConfiguration @TO@ SftpConfiguration @AT@ 1542 @LENGTH@ 23
---INS ExpressionStatement@@Assignment:this.configuration=configuration @TO@ MethodDeclaration@@public, voidMethodName:SftpEndpoint, String uri, SftpComponent component, RemoteFileConfiguration configuration,  @AT@ 1631 @LENGTH@ 35
------INS Assignment@@this.configuration=configuration @TO@ ExpressionStatement@@Assignment:this.configuration=configuration @AT@ 1631 @LENGTH@ 34
---------INS FieldAccess@@this.configuration @TO@ Assignment@@this.configuration=configuration @AT@ 1631 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.configuration @AT@ 1631 @LENGTH@ 4
------------INS SimpleName@@configuration @TO@ FieldAccess@@this.configuration @AT@ 1636 @LENGTH@ 13
---------INS Operator@@= @TO@ Assignment@@this.configuration=configuration @AT@ 1649 @LENGTH@ 1
---------INS SimpleName@@configuration @TO@ Assignment@@this.configuration=configuration @AT@ 1652 @LENGTH@ 13


INS MethodDeclaration@@List<Book>, MethodName:findBy, Sort sort,  @TO@ TypeDeclaration@@[@RepositoryRestResource(excerptProjection=BookExcerpt.class), public]BookRepository, [CrudRepository<Book,Long>] @AT@ 1162 @LENGTH@ 18
---INS ParameterizedType@@List<Book> @TO@ MethodDeclaration@@List<Book>, MethodName:findBy, Sort sort,  @AT@ 1151 @LENGTH@ 10
------INS SimpleType@@List @TO@ ParameterizedType@@List<Book> @AT@ 1151 @LENGTH@ 4
------INS SimpleType@@Book @TO@ ParameterizedType@@List<Book> @AT@ 1156 @LENGTH@ 4
---INS SimpleName@@MethodName:findBy @TO@ MethodDeclaration@@List<Book>, MethodName:findBy, Sort sort,  @AT@ 1162 @LENGTH@ 6
---INS SingleVariableDeclaration@@Sort sort @TO@ MethodDeclaration@@List<Book>, MethodName:findBy, Sort sort,  @AT@ 1169 @LENGTH@ 9
------INS SimpleType@@Sort @TO@ SingleVariableDeclaration@@Sort sort @AT@ 1169 @LENGTH@ 4
------INS SimpleName@@sort @TO@ SingleVariableDeclaration@@Sort sort @AT@ 1174 @LENGTH@ 4


INS MethodDeclaration@@private, voidMethodName:DockerClientFactory,  @TO@ TypeDeclaration@@[public]DockerClientFactory,  @AT@ 1248 @LENGTH@ 60
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:DockerClientFactory,  @AT@ 1248 @LENGTH@ 7
---INS SimpleName@@MethodName:DockerClientFactory @TO@ MethodDeclaration@@private, voidMethodName:DockerClientFactory,  @AT@ 1256 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:bodyBuilder.appendFormalLine("uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ "sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());") @TO@ MethodInvocation:bodyBuilder.appendFormalLine("uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ ", sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());") @AT@ 20078 @LENGTH@ 483
---UPD MethodInvocation@@bodyBuilder.appendFormalLine("uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ "sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());") @TO@ bodyBuilder.appendFormalLine("uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ ", sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());") @AT@ 20078 @LENGTH@ 482
------UPD SimpleName@@MethodName:appendFormalLine:["uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ "sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());"] @TO@ MethodName:appendFormalLine:["uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ ", sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());"] @AT@ 20090 @LENGTH@ 470
---------UPD InfixExpression@@"uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ "sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());" @TO@ "uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ ", sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());" @AT@ 20107 @LENGTH@ 452
------------UPD StringLiteral@@"sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());" @TO@ ", sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());" @AT@ 20464 @LENGTH@ 95


UPD VariableDeclarationStatement@@String result=StringEscapeUtils.unescapeHtml(htmlString).replaceAll(NON_BREAKING_SPACE," "); @TO@ String result=StringEscapeUtils.unescapeHtml(htmlString).replaceAll(NON_BREAKING_SPACE," ").replaceAll(JAVA6_NON_BREAKING_SPACE," "); @AT@ 5405 @LENGTH@ 95
---UPD VariableDeclarationFragment@@result=StringEscapeUtils.unescapeHtml(htmlString).replaceAll(NON_BREAKING_SPACE," ") @TO@ result=StringEscapeUtils.unescapeHtml(htmlString).replaceAll(NON_BREAKING_SPACE," ").replaceAll(JAVA6_NON_BREAKING_SPACE," ") @AT@ 5412 @LENGTH@ 87
------UPD MethodInvocation@@StringEscapeUtils.unescapeHtml(htmlString).replaceAll(NON_BREAKING_SPACE," ") @TO@ StringEscapeUtils.unescapeHtml(htmlString).replaceAll(NON_BREAKING_SPACE," ").replaceAll(JAVA6_NON_BREAKING_SPACE," ") @AT@ 5421 @LENGTH@ 78
---------UPD SimpleName@@MethodName:replaceAll:[NON_BREAKING_SPACE, " "] @TO@ MethodName:replaceAll:[JAVA6_NON_BREAKING_SPACE, " "] @AT@ 5464 @LENGTH@ 35
------------UPD SimpleName@@NON_BREAKING_SPACE @TO@ JAVA6_NON_BREAKING_SPACE @AT@ 5475 @LENGTH@ 18
---------INS MethodInvocation@@MethodName:replaceAll:[NON_BREAKING_SPACE, " "] @TO@ MethodInvocation@@StringEscapeUtils.unescapeHtml(htmlString).replaceAll(NON_BREAKING_SPACE," ") @AT@ 5489 @LENGTH@ 78
------------INS SimpleName@@NON_BREAKING_SPACE @TO@ MethodInvocation@@MethodName:replaceAll:[NON_BREAKING_SPACE, " "] @AT@ 5543 @LENGTH@ 18
------------INS StringLiteral@@" " @TO@ MethodInvocation@@MethodName:replaceAll:[NON_BREAKING_SPACE, " "] @AT@ 5563 @LENGTH@ 3


UPD IfStatement@@if (route.getId() != null && route.getId().equals(id)) {  return route;} @TO@ if (route.idOrCreate(nodeIdFactory).equals(id)) {  return route;} @AT@ 67556 @LENGTH@ 100
---DEL InfixExpression@@route.getId() != null && route.getId().equals(id) @AT@ 67560 @LENGTH@ 49
------DEL InfixExpression@@route.getId() != null @AT@ 67560 @LENGTH@ 21
---------DEL MethodInvocation@@route.getId() @AT@ 67560 @LENGTH@ 13
------------DEL SimpleName@@Name:route @AT@ 67560 @LENGTH@ 5
------------DEL SimpleName@@MethodName:getId:[] @AT@ 67566 @LENGTH@ 7
---------DEL Operator@@!= @AT@ 67573 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 67577 @LENGTH@ 4
------DEL Operator@@&& @AT@ 67581 @LENGTH@ 2
------DEL MethodInvocation@@route.getId().equals(id) @AT@ 67585 @LENGTH@ 24
---INS MethodInvocation@@route.idOrCreate(nodeIdFactory).equals(id) @TO@ IfStatement@@if (route.getId() != null && route.getId().equals(id)) {  return route;} @AT@ 67560 @LENGTH@ 42
------MOV MethodInvocation@@MethodName:getId:[] @TO@ MethodInvocation@@route.idOrCreate(nodeIdFactory).equals(id) @AT@ 67585 @LENGTH@ 13
---------INS SimpleName@@nodeIdFactory @TO@ MethodInvocation@@MethodName:getId:[] @AT@ 67577 @LENGTH@ 13
------MOV SimpleName@@Name:route @TO@ MethodInvocation@@route.idOrCreate(nodeIdFactory).equals(id) @AT@ 67585 @LENGTH@ 5
------MOV SimpleName@@MethodName:equals:[id] @TO@ MethodInvocation@@route.idOrCreate(nodeIdFactory).equals(id) @AT@ 67599 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:verify(sessionState,times(1)).close(eq(true)) @TO@ MethodInvocation:verify(sessionState,times(1)).close(eq(false)) @AT@ 7147 @LENGTH@ 47
---UPD MethodInvocation@@verify(sessionState,times(1)).close(eq(true)) @TO@ verify(sessionState,times(1)).close(eq(false)) @AT@ 7147 @LENGTH@ 46
------UPD SimpleName@@MethodName:close:[eq(true)] @TO@ MethodName:close:[eq(false)] @AT@ 7178 @LENGTH@ 15
---------UPD MethodInvocation@@eq(true) @TO@ eq(false) @AT@ 7184 @LENGTH@ 8
------------UPD SimpleName@@MethodName:eq:[true] @TO@ MethodName:eq:[false] @AT@ 7184 @LENGTH@ 8
---------------UPD BooleanLiteral@@true @TO@ false @AT@ 7187 @LENGTH@ 4


UPD IfStatement@@if (log.isDebugEnabled()) {  log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()});} @TO@ if (log.isDebugEnabled()) {  if (header.getValue() == null) {    log.debug("Ignoring header: {} with null value",header.getKey());  } else {    log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()});  }} @AT@ 8015 @LENGTH@ 229
---INS Block@@ThenBody:{  if (header.getValue() == null) {    log.debug("Ignoring header: {} with null value",header.getKey());  } else {    log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()});  }} @TO@ IfStatement@@if (log.isDebugEnabled()) {  log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()});} @AT@ 8041 @LENGTH@ 406
------INS IfStatement@@if (header.getValue() == null) {  log.debug("Ignoring header: {} with null value",header.getKey());} else {  log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()});} @TO@ Block@@ThenBody:{  if (header.getValue() == null) {    log.debug("Ignoring header: {} with null value",header.getKey());  } else {    log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()});  }} @AT@ 8059 @LENGTH@ 374
---------MOV Block@@ThenBody:{  log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()});} @TO@ IfStatement@@if (header.getValue() == null) {  log.debug("Ignoring header: {} with null value",header.getKey());} else {  log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()});} @AT@ 8041 @LENGTH@ 203
------------UPD ExpressionStatement@@MethodInvocation:log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()}) @TO@ MethodInvocation:log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()}) @AT@ 8059 @LENGTH@ 171
---------------UPD MethodInvocation@@log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()}) @TO@ log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()}) @AT@ 8059 @LENGTH@ 170
------------------UPD SimpleName@@MethodName:debug:["Ignoring header: {} of class: {} with value: {}", new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()}] @TO@ MethodName:debug:["Ignoring header: {} of class: {} with value: {}", new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()}] @AT@ 8063 @LENGTH@ 166
---------------------UPD ArrayCreation@@new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()} @TO@ new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()} @AT@ 8140 @LENGTH@ 88
------------------------UPD ArrayInitializer@@{header.getKey(),header.getValue().getClass().getName(),header.getValue()} @TO@ {header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()} @AT@ 8152 @LENGTH@ 76
---------------------------DEL MethodInvocation@@header.getValue().getClass().getName() @AT@ 8170 @LENGTH@ 38
------------------------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 8170 @LENGTH@ 28
------------------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 8170 @LENGTH@ 17
---------------------------INS MethodInvocation@@ObjectHelper.classCanonicalName(header.getValue()) @TO@ ArrayInitializer@@{header.getKey(),header.getValue().getClass().getName(),header.getValue()} @AT@ 8343 @LENGTH@ 50
------------------------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.classCanonicalName(header.getValue()) @AT@ 8343 @LENGTH@ 12
------------------------------INS SimpleName@@MethodName:classCanonicalName:[header.getValue()] @TO@ MethodInvocation@@ObjectHelper.classCanonicalName(header.getValue()) @AT@ 8356 @LENGTH@ 37
---------------------------------INS MethodInvocation@@header.getValue() @TO@ SimpleName@@MethodName:classCanonicalName:[header.getValue()] @AT@ 8375 @LENGTH@ 17
------------------------------------MOV SimpleName@@Name:header @TO@ MethodInvocation@@header.getValue() @AT@ 8170 @LENGTH@ 6
------------------------------------MOV SimpleName@@Name:header @TO@ MethodInvocation@@header.getValue() @AT@ 8170 @LENGTH@ 6
------------------------------------MOV SimpleName@@Name:header @TO@ MethodInvocation@@header.getValue() @AT@ 8170 @LENGTH@ 6
------------------------------------MOV SimpleName@@Name:header @TO@ MethodInvocation@@header.getValue() @AT@ 8170 @LENGTH@ 6
------------------------------------MOV SimpleName@@Name:header @TO@ MethodInvocation@@header.getValue() @AT@ 8170 @LENGTH@ 6
------------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@header.getValue() @AT@ 8199 @LENGTH@ 9
------------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@header.getValue() @AT@ 8199 @LENGTH@ 9
------------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@header.getValue() @AT@ 8199 @LENGTH@ 9
------------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@header.getValue() @AT@ 8199 @LENGTH@ 9
------------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@header.getValue() @AT@ 8199 @LENGTH@ 9
---------MOV Block@@ThenBody:{  log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()});} @TO@ IfStatement@@if (header.getValue() == null) {  log.debug("Ignoring header: {} with null value",header.getKey());} else {  log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()});} @AT@ 8041 @LENGTH@ 203
------------UPD ExpressionStatement@@MethodInvocation:log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()}) @TO@ MethodInvocation:log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()}) @AT@ 8059 @LENGTH@ 171
---------------UPD MethodInvocation@@log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()}) @TO@ log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()}) @AT@ 8059 @LENGTH@ 170
------------------UPD SimpleName@@MethodName:debug:["Ignoring header: {} of class: {} with value: {}", new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()}] @TO@ MethodName:debug:["Ignoring header: {} of class: {} with value: {}", new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()}] @AT@ 8063 @LENGTH@ 166
---------------------UPD ArrayCreation@@new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()} @TO@ new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()} @AT@ 8140 @LENGTH@ 88
------------------------UPD ArrayInitializer@@{header.getKey(),header.getValue().getClass().getName(),header.getValue()} @TO@ {header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()} @AT@ 8152 @LENGTH@ 76
---------------------------DEL MethodInvocation@@header.getValue().getClass().getName() @AT@ 8170 @LENGTH@ 38
------------------------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 8170 @LENGTH@ 28
------------------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 8170 @LENGTH@ 17
---------------------------INS MethodInvocation@@ObjectHelper.classCanonicalName(header.getValue()) @TO@ ArrayInitializer@@{header.getKey(),header.getValue().getClass().getName(),header.getValue()} @AT@ 8343 @LENGTH@ 50
------------------------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.classCanonicalName(header.getValue()) @AT@ 8343 @LENGTH@ 12
------------------------------INS SimpleName@@MethodName:classCanonicalName:[header.getValue()] @TO@ MethodInvocation@@ObjectHelper.classCanonicalName(header.getValue()) @AT@ 8356 @LENGTH@ 37
---------------------------------INS MethodInvocation@@header.getValue() @TO@ SimpleName@@MethodName:classCanonicalName:[header.getValue()] @AT@ 8375 @LENGTH@ 17
------------------------------------MOV SimpleName@@Name:header @TO@ MethodInvocation@@header.getValue() @AT@ 8170 @LENGTH@ 6
------------------------------------MOV SimpleName@@Name:header @TO@ MethodInvocation@@header.getValue() @AT@ 8170 @LENGTH@ 6
------------------------------------MOV SimpleName@@Name:header @TO@ MethodInvocation@@header.getValue() @AT@ 8170 @LENGTH@ 6
------------------------------------MOV SimpleName@@Name:header @TO@ MethodInvocation@@header.getValue() @AT@ 8170 @LENGTH@ 6
------------------------------------MOV SimpleName@@Name:header @TO@ MethodInvocation@@header.getValue() @AT@ 8170 @LENGTH@ 6
------------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@header.getValue() @AT@ 8199 @LENGTH@ 9
------------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@header.getValue() @AT@ 8199 @LENGTH@ 9
------------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@header.getValue() @AT@ 8199 @LENGTH@ 9
------------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@header.getValue() @AT@ 8199 @LENGTH@ 9
------------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@header.getValue() @AT@ 8199 @LENGTH@ 9
---------INS InfixExpression@@header.getValue() == null @TO@ IfStatement@@if (header.getValue() == null) {  log.debug("Ignoring header: {} with null value",header.getKey());} else {  log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()});} @AT@ 8063 @LENGTH@ 25
------------INS MethodInvocation@@header.getValue() @TO@ InfixExpression@@header.getValue() == null @AT@ 8063 @LENGTH@ 17
---------------INS SimpleName@@Name:header @TO@ MethodInvocation@@header.getValue() @AT@ 8063 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@header.getValue() @AT@ 8070 @LENGTH@ 10
------------INS Operator@@== @TO@ InfixExpression@@header.getValue() == null @AT@ 8080 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@header.getValue() == null @AT@ 8084 @LENGTH@ 4
---------INS Block@@ThenBody:{  log.debug("Ignoring header: {} with null value",header.getKey());} @TO@ IfStatement@@if (header.getValue() == null) {  log.debug("Ignoring header: {} with null value",header.getKey());} else {  log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()});} @AT@ 8090 @LENGTH@ 106
------------INS ExpressionStatement@@MethodInvocation:log.debug("Ignoring header: {} with null value",header.getKey()) @TO@ Block@@ThenBody:{  log.debug("Ignoring header: {} with null value",header.getKey());} @AT@ 8112 @LENGTH@ 66
---------------INS MethodInvocation@@log.debug("Ignoring header: {} with null value",header.getKey()) @TO@ ExpressionStatement@@MethodInvocation:log.debug("Ignoring header: {} with null value",header.getKey()) @AT@ 8112 @LENGTH@ 65
------------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug("Ignoring header: {} with null value",header.getKey()) @AT@ 8112 @LENGTH@ 3
------------------INS SimpleName@@MethodName:debug:["Ignoring header: {} with null value", header.getKey()] @TO@ MethodInvocation@@log.debug("Ignoring header: {} with null value",header.getKey()) @AT@ 8116 @LENGTH@ 61
---------------------INS StringLiteral@@"Ignoring header: {} with null value" @TO@ SimpleName@@MethodName:debug:["Ignoring header: {} with null value", header.getKey()] @AT@ 8122 @LENGTH@ 37
---------------------INS MethodInvocation@@header.getKey() @TO@ SimpleName@@MethodName:debug:["Ignoring header: {} with null value", header.getKey()] @AT@ 8161 @LENGTH@ 15
------------------------INS SimpleName@@Name:header @TO@ MethodInvocation@@header.getKey() @AT@ 8161 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@header.getKey() @AT@ 8168 @LENGTH@ 8
---UPD Block@@ThenBody:{  log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),header.getValue().getClass().getName(),header.getValue()});} @TO@ ElseBody:{  log.debug("Ignoring header: {} of class: {} with value: {}",new Object[]{header.getKey(),ObjectHelper.classCanonicalName(header.getValue()),header.getValue()});} @AT@ 8041 @LENGTH@ 203


UPD EnhancedForStatement@@for (String methodName : methods) {  BeanHolder holder=new ConstantBeanHolder(beanToCall,exchange.getContext());  boolean nullSafe=OgnlHelper.isNullSafeOperator(methodName);  ognlPath+=methodName;  methodName=OgnlHelper.removeLeadingOperators(methodName);  String key=null;  KeyValueHolder<String,String> index=OgnlHelper.isOgnlIndex(methodName);  if (index != null) {    methodName=index.getKey();    key=index.getValue();  }  if (methodName != null) {    InvokeProcessor invoke=new InvokeProcessor(holder,methodName);    invoke.process(resultExchange);    if (resultExchange.getException() != null) {      throw new RuntimeBeanExpressionException(exchange,beanName,methodName,resultExchange.getException());    }    result=invoke.getResult();  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }  if (result == null && nullSafe) {    return;  }  beanToCall=result;  resultExchange.getIn().setBody(result);} @TO@ for (String methodName : methods) {  BeanHolder holder=new ConstantBeanHolder(beanToCall,exchange.getContext());  boolean nullSafe=OgnlHelper.isNullSafeOperator(methodName);  ognlPath+=methodName;  methodName=OgnlHelper.removeLeadingOperators(methodName);  String key=null;  KeyValueHolder<String,String> index=OgnlHelper.isOgnlIndex(methodName);  if (index != null) {    methodName=index.getKey();    key=index.getValue();  }  if (methodName != null) {    InvokeProcessor invoke=new InvokeProcessor(holder,methodName);    invoke.process(resultExchange);    if (resultExchange.getException() != null) {      throw new RuntimeBeanExpressionException(exchange,beanName,methodName,resultExchange.getException());    }    result=invoke.getResult();  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }  if (result == null && nullSafe) {    return;  }  beanToCall=result;} @AT@ 9963 @LENGTH@ 2133
---DEL ExpressionStatement@@MethodInvocation:resultExchange.getIn().setBody(result) @AT@ 12043 @LENGTH@ 39
------DEL MethodInvocation@@resultExchange.getIn().setBody(result) @AT@ 12043 @LENGTH@ 38
---------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 12043 @LENGTH@ 22
---------DEL SimpleName@@Name:resultExchange @AT@ 12043 @LENGTH@ 14
---------DEL SimpleName@@MethodName:setBody:[result] @AT@ 12066 @LENGTH@ 15
------------DEL SimpleName@@result @AT@ 12074 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("Pre/post split values don't match",StringUtils.unEscapeString(props[i]),StringUtils.unEscapeString(newProps[i])) @TO@ MethodInvocation:Assert.assertEquals("Pre/post split values don't match",TempletonUtils.unEscapeString(props[i]),TempletonUtils.unEscapeString(newProps[i])) @AT@ 11405 @LENGTH@ 144
---UPD MethodInvocation@@Assert.assertEquals("Pre/post split values don't match",StringUtils.unEscapeString(props[i]),StringUtils.unEscapeString(newProps[i])) @TO@ Assert.assertEquals("Pre/post split values don't match",TempletonUtils.unEscapeString(props[i]),TempletonUtils.unEscapeString(newProps[i])) @AT@ 11405 @LENGTH@ 143
------UPD SimpleName@@MethodName:assertEquals:["Pre/post split values don't match", StringUtils.unEscapeString(props[i]), StringUtils.unEscapeString(newProps[i])] @TO@ MethodName:assertEquals:["Pre/post split values don't match", TempletonUtils.unEscapeString(props[i]), TempletonUtils.unEscapeString(newProps[i])] @AT@ 11412 @LENGTH@ 136
---------UPD MethodInvocation@@StringUtils.unEscapeString(props[i]) @TO@ TempletonUtils.unEscapeString(props[i]) @AT@ 11470 @LENGTH@ 36
------------UPD SimpleName@@Name:StringUtils @TO@ Name:TempletonUtils @AT@ 11470 @LENGTH@ 11
---------UPD MethodInvocation@@StringUtils.unEscapeString(newProps[i]) @TO@ TempletonUtils.unEscapeString(newProps[i]) @AT@ 11508 @LENGTH@ 39
------------UPD SimpleName@@Name:StringUtils @TO@ Name:TempletonUtils @AT@ 11508 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:LOG.info(String.format("Padding ORC by %d bytes (<=  %0.2f * %d)",padding,availRatio,defaultStripeSize)) @TO@ MethodInvocation:LOG.info(String.format("Padding ORC by %d bytes (<=  %.2f * %d)",padding,availRatio,defaultStripeSize)) @AT@ 70464 @LENGTH@ 121
---UPD MethodInvocation@@LOG.info(String.format("Padding ORC by %d bytes (<=  %0.2f * %d)",padding,availRatio,defaultStripeSize)) @TO@ LOG.info(String.format("Padding ORC by %d bytes (<=  %.2f * %d)",padding,availRatio,defaultStripeSize)) @AT@ 70464 @LENGTH@ 120
------UPD SimpleName@@MethodName:info:[String.format("Padding ORC by %d bytes (<=  %0.2f * %d)",padding,availRatio,defaultStripeSize)] @TO@ MethodName:info:[String.format("Padding ORC by %d bytes (<=  %.2f * %d)",padding,availRatio,defaultStripeSize)] @AT@ 70468 @LENGTH@ 116
---------UPD MethodInvocation@@String.format("Padding ORC by %d bytes (<=  %0.2f * %d)",padding,availRatio,defaultStripeSize) @TO@ String.format("Padding ORC by %d bytes (<=  %.2f * %d)",padding,availRatio,defaultStripeSize) @AT@ 70473 @LENGTH@ 110
------------UPD SimpleName@@MethodName:format:["Padding ORC by %d bytes (<=  %0.2f * %d)", padding, availRatio, defaultStripeSize] @TO@ MethodName:format:["Padding ORC by %d bytes (<=  %.2f * %d)", padding, availRatio, defaultStripeSize] @AT@ 70480 @LENGTH@ 103
---------------UPD StringLiteral@@"Padding ORC by %d bytes (<=  %0.2f * %d)" @TO@ "Padding ORC by %d bytes (<=  %.2f * %d)" @AT@ 70487 @LENGTH@ 42


UPD VariableDeclarationStatement@@char upper=Character.toLowerCase(ch); @TO@ char upper=Character.toUpperCase(ch); @AT@ 1653 @LENGTH@ 39
---UPD VariableDeclarationFragment@@upper=Character.toLowerCase(ch) @TO@ upper=Character.toUpperCase(ch) @AT@ 1658 @LENGTH@ 33
------UPD MethodInvocation@@Character.toLowerCase(ch) @TO@ Character.toUpperCase(ch) @AT@ 1666 @LENGTH@ 25
---------UPD SimpleName@@MethodName:toLowerCase:[ch] @TO@ MethodName:toUpperCase:[ch] @AT@ 1676 @LENGTH@ 15


UPD FieldDeclaration@@public, Log4jLevelAdjuster, [logLevels=new Log4jLevelAdjuster(Level.OFF,RabbitTemplate.class,SimpleMessageListenerContainer.class,BlockingQueueConsumer.class,CachingConnectionFactory.class)] @TO@ public, Log4jLevelAdjuster, [logLevels=new Log4jLevelAdjuster(Level.OFF,RabbitTemplate.class,ConditionalRejectingErrorHandler.class,SimpleMessageListenerContainer.class,BlockingQueueConsumer.class,CachingConnectionFactory.class)] @AT@ 3023 @LENGTH@ 196
---UPD VariableDeclarationFragment@@logLevels=new Log4jLevelAdjuster(Level.OFF,RabbitTemplate.class,SimpleMessageListenerContainer.class,BlockingQueueConsumer.class,CachingConnectionFactory.class) @TO@ logLevels=new Log4jLevelAdjuster(Level.OFF,RabbitTemplate.class,ConditionalRejectingErrorHandler.class,SimpleMessageListenerContainer.class,BlockingQueueConsumer.class,CachingConnectionFactory.class) @AT@ 3049 @LENGTH@ 169
------UPD ClassInstanceCreation@@Log4jLevelAdjuster[Level.OFF, RabbitTemplate.class, SimpleMessageListenerContainer.class, BlockingQueueConsumer.class, CachingConnectionFactory.class] @TO@ Log4jLevelAdjuster[Level.OFF, RabbitTemplate.class, ConditionalRejectingErrorHandler.class, SimpleMessageListenerContainer.class, BlockingQueueConsumer.class, CachingConnectionFactory.class] @AT@ 3061 @LENGTH@ 157
---------INS TypeLiteral@@ConditionalRejectingErrorHandler.class @TO@ ClassInstanceCreation@@Log4jLevelAdjuster[Level.OFF, RabbitTemplate.class, SimpleMessageListenerContainer.class, BlockingQueueConsumer.class, CachingConnectionFactory.class] @AT@ 3120 @LENGTH@ 38


MOV VariableDeclarationStatement@@String httpMethodRestrict=getAndRemoveParameter(parameters,"httpMethodRestrict",String.class); @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 7498 @LENGTH@ 98


UPD ReturnStatement@@InfixExpression:position != null && this.name == null && this.position == position @TO@ InfixExpression:position != null && this.name == null && position.equals(this.position) @AT@ 12498 @LENGTH@ 74
---UPD InfixExpression@@position != null && this.name == null && this.position == position @TO@ position != null && this.name == null && position.equals(this.position) @AT@ 12505 @LENGTH@ 66
------INS MethodInvocation@@position.equals(this.position) @TO@ InfixExpression@@position != null && this.name == null && this.position == position @AT@ 12546 @LENGTH@ 30
---------INS SimpleName@@Name:position @TO@ MethodInvocation@@position.equals(this.position) @AT@ 12546 @LENGTH@ 8
---------INS SimpleName@@MethodName:equals:[this.position] @TO@ MethodInvocation@@position.equals(this.position) @AT@ 12555 @LENGTH@ 21
------------INS FieldAccess@@this.position @TO@ SimpleName@@MethodName:equals:[this.position] @AT@ 12562 @LENGTH@ 13
---------------MOV ThisExpression@@this @TO@ FieldAccess@@this.position @AT@ 12546 @LENGTH@ 4
---------------MOV SimpleName@@position @TO@ FieldAccess@@this.position @AT@ 12551 @LENGTH@ 8
------DEL InfixExpression@@this.position == position @AT@ 12546 @LENGTH@ 25
---------DEL FieldAccess@@this.position @AT@ 12546 @LENGTH@ 13
---------DEL Operator@@== @AT@ 12559 @LENGTH@ 2
---------DEL SimpleName@@position @AT@ 12563 @LENGTH@ 8


UPD VariableDeclarationStatement@@@SuppressWarnings("deprecation") List<RouteDefinition> routes=context.getRouteDefinitions(); @TO@ List<RouteDefinition> routes=context.getRouteDefinitions(); @AT@ 2372 @LENGTH@ 102


INS ExpressionStatement@@Assignment:out=template.requestBody("netty4-http:http://localhost:{{port}}/foo",null,String.class) @TO@ MethodDeclaration@@public, void, MethodName:testHttpSimple, Exception,  @AT@ 1386 @LENGTH@ 92
---INS Assignment@@out=template.requestBody("netty4-http:http://localhost:{{port}}/foo",null,String.class) @TO@ ExpressionStatement@@Assignment:out=template.requestBody("netty4-http:http://localhost:{{port}}/foo",null,String.class) @AT@ 1386 @LENGTH@ 91
------INS SimpleName@@out @TO@ Assignment@@out=template.requestBody("netty4-http:http://localhost:{{port}}/foo",null,String.class) @AT@ 1386 @LENGTH@ 3
------INS Operator@@= @TO@ Assignment@@out=template.requestBody("netty4-http:http://localhost:{{port}}/foo",null,String.class) @AT@ 1389 @LENGTH@ 1
------INS MethodInvocation@@template.requestBody("netty4-http:http://localhost:{{port}}/foo",null,String.class) @TO@ Assignment@@out=template.requestBody("netty4-http:http://localhost:{{port}}/foo",null,String.class) @AT@ 1392 @LENGTH@ 85
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBody("netty4-http:http://localhost:{{port}}/foo",null,String.class) @AT@ 1392 @LENGTH@ 8
---------INS SimpleName@@MethodName:requestBody:["netty4-http:http://localhost:{{port}}/foo", null, String.class] @TO@ MethodInvocation@@template.requestBody("netty4-http:http://localhost:{{port}}/foo",null,String.class) @AT@ 1401 @LENGTH@ 76
------------INS StringLiteral@@"netty4-http:http://localhost:{{port}}/foo" @TO@ SimpleName@@MethodName:requestBody:["netty4-http:http://localhost:{{port}}/foo", null, String.class] @AT@ 1413 @LENGTH@ 43
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:requestBody:["netty4-http:http://localhost:{{port}}/foo", null, String.class] @AT@ 1458 @LENGTH@ 4
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:requestBody:["netty4-http:http://localhost:{{port}}/foo", null, String.class] @AT@ 1464 @LENGTH@ 12


UPD EnhancedForStatement@@for (String key : consumers.keySet()) {  if (consumers.get(key).getEndpoint().isMatchOnUriPrefix() && path.startsWith(key)) {    answer=consumers.get(key);    break;  }} @TO@ for (String key : consumers.keySet()) {  String consumerPath=consumers.get(key).getPath();  HttpConsumer consumer=consumers.get(key);  if (consumerPath.equals(path) || (consumer.getEndpoint().isMatchOnUriPrefix() && path.startsWith(consumerPath))) {    answer=consumers.get(key);    break;  }} @AT@ 1434 @LENGTH@ 248
---UPD IfStatement@@if (consumers.get(key).getEndpoint().isMatchOnUriPrefix() && path.startsWith(key)) {  answer=consumers.get(key);  break;} @TO@ if (consumerPath.equals(path) || (consumer.getEndpoint().isMatchOnUriPrefix() && path.startsWith(consumerPath))) {  answer=consumers.get(key);  break;} @AT@ 1490 @LENGTH@ 178
------DEL InfixExpression@@consumers.get(key).getEndpoint().isMatchOnUriPrefix() && path.startsWith(key) @AT@ 1494 @LENGTH@ 77
------INS InfixExpression@@consumerPath.equals(path) || (consumer.getEndpoint().isMatchOnUriPrefix() && path.startsWith(consumerPath)) @TO@ IfStatement@@if (consumers.get(key).getEndpoint().isMatchOnUriPrefix() && path.startsWith(key)) {  answer=consumers.get(key);  break;} @AT@ 1757 @LENGTH@ 107
---------INS MethodInvocation@@consumerPath.equals(path) @TO@ InfixExpression@@consumerPath.equals(path) || (consumer.getEndpoint().isMatchOnUriPrefix() && path.startsWith(consumerPath)) @AT@ 1757 @LENGTH@ 25
------------INS SimpleName@@Name:consumerPath @TO@ MethodInvocation@@consumerPath.equals(path) @AT@ 1757 @LENGTH@ 12
------------INS SimpleName@@MethodName:equals:[path] @TO@ MethodInvocation@@consumerPath.equals(path) @AT@ 1770 @LENGTH@ 12
---------------INS SimpleName@@path @TO@ SimpleName@@MethodName:equals:[path] @AT@ 1777 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@consumerPath.equals(path) || (consumer.getEndpoint().isMatchOnUriPrefix() && path.startsWith(consumerPath)) @AT@ 1782 @LENGTH@ 2
---------INS ParenthesizedExpression@@(consumer.getEndpoint().isMatchOnUriPrefix() && path.startsWith(consumerPath)) @TO@ InfixExpression@@consumerPath.equals(path) || (consumer.getEndpoint().isMatchOnUriPrefix() && path.startsWith(consumerPath)) @AT@ 1786 @LENGTH@ 78
------------INS InfixExpression@@consumer.getEndpoint().isMatchOnUriPrefix() && path.startsWith(consumerPath) @TO@ ParenthesizedExpression@@(consumer.getEndpoint().isMatchOnUriPrefix() && path.startsWith(consumerPath)) @AT@ 1787 @LENGTH@ 76
---------------MOV MethodInvocation@@consumers.get(key).getEndpoint().isMatchOnUriPrefix() @TO@ InfixExpression@@consumer.getEndpoint().isMatchOnUriPrefix() && path.startsWith(consumerPath) @AT@ 1494 @LENGTH@ 53
------------------DEL MethodInvocation@@MethodName:get:[key] @AT@ 1494 @LENGTH@ 18
---------------------DEL SimpleName@@key @AT@ 1508 @LENGTH@ 3
------------------UPD SimpleName@@Name:consumers @TO@ Name:consumer @AT@ 1494 @LENGTH@ 9
---------------MOV Operator@@&& @TO@ InfixExpression@@consumer.getEndpoint().isMatchOnUriPrefix() && path.startsWith(consumerPath) @AT@ 1547 @LENGTH@ 2
---------------MOV MethodInvocation@@path.startsWith(key) @TO@ InfixExpression@@consumer.getEndpoint().isMatchOnUriPrefix() && path.startsWith(consumerPath) @AT@ 1551 @LENGTH@ 20
------------------UPD SimpleName@@MethodName:startsWith:[key] @TO@ MethodName:startsWith:[consumerPath] @AT@ 1556 @LENGTH@ 15
---------------------UPD SimpleName@@key @TO@ consumerPath @AT@ 1567 @LENGTH@ 3
---INS VariableDeclarationStatement@@String consumerPath=consumers.get(key).getPath(); @TO@ EnhancedForStatement@@for (String key : consumers.keySet()) {  if (consumers.get(key).getEndpoint().isMatchOnUriPrefix() && path.startsWith(key)) {    answer=consumers.get(key);    break;  }} @AT@ 1550 @LENGTH@ 51
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String consumerPath=consumers.get(key).getPath(); @AT@ 1550 @LENGTH@ 6
------INS VariableDeclarationFragment@@consumerPath=consumers.get(key).getPath() @TO@ VariableDeclarationStatement@@String consumerPath=consumers.get(key).getPath(); @AT@ 1557 @LENGTH@ 43
---------INS SimpleName@@consumerPath @TO@ VariableDeclarationFragment@@consumerPath=consumers.get(key).getPath() @AT@ 1557 @LENGTH@ 12
---------INS MethodInvocation@@consumers.get(key).getPath() @TO@ VariableDeclarationFragment@@consumerPath=consumers.get(key).getPath() @AT@ 1572 @LENGTH@ 28
------------INS MethodInvocation@@MethodName:get:[key] @TO@ MethodInvocation@@consumers.get(key).getPath() @AT@ 1572 @LENGTH@ 18
---------------INS SimpleName@@key @TO@ MethodInvocation@@MethodName:get:[key] @AT@ 1586 @LENGTH@ 3
------------INS SimpleName@@Name:consumers @TO@ MethodInvocation@@consumers.get(key).getPath() @AT@ 1572 @LENGTH@ 9
------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@consumers.get(key).getPath() @AT@ 1591 @LENGTH@ 9
---INS VariableDeclarationStatement@@HttpConsumer consumer=consumers.get(key); @TO@ EnhancedForStatement@@for (String key : consumers.keySet()) {  if (consumers.get(key).getEndpoint().isMatchOnUriPrefix() && path.startsWith(key)) {    answer=consumers.get(key);    break;  }} @AT@ 1618 @LENGTH@ 43
------INS SimpleType@@HttpConsumer @TO@ VariableDeclarationStatement@@HttpConsumer consumer=consumers.get(key); @AT@ 1618 @LENGTH@ 12
------INS VariableDeclarationFragment@@consumer=consumers.get(key) @TO@ VariableDeclarationStatement@@HttpConsumer consumer=consumers.get(key); @AT@ 1631 @LENGTH@ 29
---------INS SimpleName@@consumer @TO@ VariableDeclarationFragment@@consumer=consumers.get(key) @AT@ 1631 @LENGTH@ 8
---------INS MethodInvocation@@consumers.get(key) @TO@ VariableDeclarationFragment@@consumer=consumers.get(key) @AT@ 1642 @LENGTH@ 18
------------INS SimpleName@@Name:consumers @TO@ MethodInvocation@@consumers.get(key) @AT@ 1642 @LENGTH@ 9
------------INS SimpleName@@MethodName:get:[key] @TO@ MethodInvocation@@consumers.get(key) @AT@ 1652 @LENGTH@ 8
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:get:[key] @AT@ 1656 @LENGTH@ 3


UPD TypeDeclaration@@[@RunWith(WildflyTestRunner.class), @ServerControl(manual=true), @Category(CommonCriteria.class), @FixMethodOrder(MethodSorters.NAME_ASCENDING), public]HTTPSManagementInterfaceTestCase,  @TO@ [@RunWith(WildflyTestRunner.class), @ServerControl(manual=true), @Category(CommonCriteria.class), public]HTTPSManagementInterfaceTestCase,  @AT@ 4137 @LENGTH@ 11520
---DEL SingleMemberAnnotation@@@FixMethodOrder(MethodSorters.NAME_ASCENDING) @AT@ 4233 @LENGTH@ 45


UPD ExpressionStatement@@MethodInvocation:ac.setAuthorized(ac.getAuthorizationID().equals(ac.getAuthorizationID())) @TO@ MethodInvocation:ac.setAuthorized(ac.getAuthorizationID().equals(ac.getAuthenticationID())) @AT@ 11743 @LENGTH@ 74
---UPD MethodInvocation@@ac.setAuthorized(ac.getAuthorizationID().equals(ac.getAuthorizationID())) @TO@ ac.setAuthorized(ac.getAuthorizationID().equals(ac.getAuthenticationID())) @AT@ 11743 @LENGTH@ 73
------UPD SimpleName@@MethodName:setAuthorized:[ac.getAuthorizationID().equals(ac.getAuthorizationID())] @TO@ MethodName:setAuthorized:[ac.getAuthorizationID().equals(ac.getAuthenticationID())] @AT@ 11746 @LENGTH@ 70
---------UPD MethodInvocation@@ac.getAuthorizationID().equals(ac.getAuthorizationID()) @TO@ ac.getAuthorizationID().equals(ac.getAuthenticationID()) @AT@ 11760 @LENGTH@ 55
------------UPD SimpleName@@MethodName:equals:[ac.getAuthorizationID()] @TO@ MethodName:equals:[ac.getAuthenticationID()] @AT@ 11784 @LENGTH@ 31
---------------UPD MethodInvocation@@ac.getAuthorizationID() @TO@ ac.getAuthenticationID() @AT@ 11791 @LENGTH@ 23
------------------UPD SimpleName@@MethodName:getAuthorizationID:[] @TO@ MethodName:getAuthenticationID:[] @AT@ 11794 @LENGTH@ 20


UPD MethodDeclaration@@protected, Map<TypeVariable,Type>, MethodName:getTypeVariableMap,  @TO@ private, static, Map<TypeVariable<?>,Type>, MethodName:mergeMaps, TypeDiscoverer<?> parent, Map<TypeVariable<?>,Type> map,  @AT@ 1523 @LENGTH@ 143
---UPD Modifier@@protected @TO@ private @AT@ 1523 @LENGTH@ 9
---UPD ParameterizedType@@Map<TypeVariable,Type> @TO@ Map<TypeVariable<?>,Type> @AT@ 1533 @LENGTH@ 23
------INS ParameterizedType@@TypeVariable<?> @TO@ ParameterizedType@@Map<TypeVariable,Type> @AT@ 1681 @LENGTH@ 15
---------MOV SimpleType@@TypeVariable @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1537 @LENGTH@ 12
---------INS WildcardType@@? @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1694 @LENGTH@ 1
---UPD SimpleName@@MethodName:getTypeVariableMap @TO@ MethodName:mergeMaps @AT@ 1557 @LENGTH@ 18
---DEL ReturnStatement@@ConditionalExpression:parent == null ? super.getTypeVariableMap() : parent.getTypeVariableMap() @AT@ 1582 @LENGTH@ 81
------DEL ConditionalExpression@@parent == null ? super.getTypeVariableMap() : parent.getTypeVariableMap() @AT@ 1589 @LENGTH@ 73
---------DEL InfixExpression@@parent == null @AT@ 1589 @LENGTH@ 14
------------DEL SimpleName@@parent @AT@ 1589 @LENGTH@ 6
------------DEL Operator@@== @AT@ 1595 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 1599 @LENGTH@ 4
---------DEL SuperMethodInvocation@@super.getTypeVariableMap() @AT@ 1606 @LENGTH@ 26
------------DEL SimpleName@@MethodName:getTypeVariableMap:[] @AT@ 1612 @LENGTH@ 18
---------DEL MethodInvocation@@parent.getTypeVariableMap() @AT@ 1635 @LENGTH@ 27
---INS Modifier@@static @TO@ MethodDeclaration@@protected, Map<TypeVariable,Type>, MethodName:getTypeVariableMap,  @AT@ 1670 @LENGTH@ 6
---INS SingleVariableDeclaration@@TypeDiscoverer<?> parent @TO@ MethodDeclaration@@protected, Map<TypeVariable,Type>, MethodName:getTypeVariableMap,  @AT@ 1714 @LENGTH@ 24
------INS ParameterizedType@@TypeDiscoverer<?> @TO@ SingleVariableDeclaration@@TypeDiscoverer<?> parent @AT@ 1714 @LENGTH@ 17
---------INS SimpleType@@TypeDiscoverer @TO@ ParameterizedType@@TypeDiscoverer<?> @AT@ 1714 @LENGTH@ 14
---------INS WildcardType@@? @TO@ ParameterizedType@@TypeDiscoverer<?> @AT@ 1729 @LENGTH@ 1
------INS SimpleName@@parent @TO@ SingleVariableDeclaration@@TypeDiscoverer<?> parent @AT@ 1732 @LENGTH@ 6
---INS SingleVariableDeclaration@@Map<TypeVariable<?>,Type> map @TO@ MethodDeclaration@@protected, Map<TypeVariable,Type>, MethodName:getTypeVariableMap,  @AT@ 1740 @LENGTH@ 30
------INS ParameterizedType@@Map<TypeVariable<?>,Type> @TO@ SingleVariableDeclaration@@Map<TypeVariable<?>,Type> map @AT@ 1740 @LENGTH@ 26
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 1740 @LENGTH@ 3
---------INS ParameterizedType@@TypeVariable<?> @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 1744 @LENGTH@ 15
------------INS SimpleType@@TypeVariable @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1744 @LENGTH@ 12
------------INS WildcardType@@? @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1757 @LENGTH@ 1
---------INS SimpleType@@Type @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 1761 @LENGTH@ 4
------INS SimpleName@@map @TO@ SingleVariableDeclaration@@Map<TypeVariable<?>,Type> map @AT@ 1767 @LENGTH@ 3
---INS VariableDeclarationStatement@@Map<TypeVariable<?>,Type> typeVariableMap=new HashMap<TypeVariable<?>,Type>(); @TO@ MethodDeclaration@@protected, Map<TypeVariable,Type>, MethodName:getTypeVariableMap,  @AT@ 1777 @LENGTH@ 82
------INS ParameterizedType@@Map<TypeVariable<?>,Type> @TO@ VariableDeclarationStatement@@Map<TypeVariable<?>,Type> typeVariableMap=new HashMap<TypeVariable<?>,Type>(); @AT@ 1777 @LENGTH@ 26
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 1777 @LENGTH@ 3
---------INS ParameterizedType@@TypeVariable<?> @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 1781 @LENGTH@ 15
------------INS SimpleType@@TypeVariable @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1781 @LENGTH@ 12
------------INS WildcardType@@? @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1794 @LENGTH@ 1
---------INS SimpleType@@Type @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 1798 @LENGTH@ 4
------INS VariableDeclarationFragment@@typeVariableMap=new HashMap<TypeVariable<?>,Type>() @TO@ VariableDeclarationStatement@@Map<TypeVariable<?>,Type> typeVariableMap=new HashMap<TypeVariable<?>,Type>(); @AT@ 1804 @LENGTH@ 54
---------INS SimpleName@@typeVariableMap @TO@ VariableDeclarationFragment@@typeVariableMap=new HashMap<TypeVariable<?>,Type>() @AT@ 1804 @LENGTH@ 15
---------INS ClassInstanceCreation@@HashMap<TypeVariable<?>,Type>[] @TO@ VariableDeclarationFragment@@typeVariableMap=new HashMap<TypeVariable<?>,Type>() @AT@ 1822 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<TypeVariable<?>,Type>[] @AT@ 1822 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<TypeVariable<?>,Type> @TO@ ClassInstanceCreation@@HashMap<TypeVariable<?>,Type>[] @AT@ 1826 @LENGTH@ 30
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<TypeVariable<?>,Type> @AT@ 1826 @LENGTH@ 7
---------------INS ParameterizedType@@TypeVariable<?> @TO@ ParameterizedType@@HashMap<TypeVariable<?>,Type> @AT@ 1834 @LENGTH@ 15
------------------INS SimpleType@@TypeVariable @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1834 @LENGTH@ 12
------------------INS WildcardType@@? @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1847 @LENGTH@ 1
---------------INS SimpleType@@Type @TO@ ParameterizedType@@HashMap<TypeVariable<?>,Type> @AT@ 1851 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:typeVariableMap.putAll(map) @TO@ MethodDeclaration@@protected, Map<TypeVariable,Type>, MethodName:getTypeVariableMap,  @AT@ 1862 @LENGTH@ 28
------INS MethodInvocation@@typeVariableMap.putAll(map) @TO@ ExpressionStatement@@MethodInvocation:typeVariableMap.putAll(map) @AT@ 1862 @LENGTH@ 27
---------INS SimpleName@@Name:typeVariableMap @TO@ MethodInvocation@@typeVariableMap.putAll(map) @AT@ 1862 @LENGTH@ 15
---------INS SimpleName@@MethodName:putAll:[map] @TO@ MethodInvocation@@typeVariableMap.putAll(map) @AT@ 1878 @LENGTH@ 11
------------INS SimpleName@@map @TO@ SimpleName@@MethodName:putAll:[map] @AT@ 1885 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:typeVariableMap.putAll(parent.getTypeVariableMap()) @TO@ MethodDeclaration@@protected, Map<TypeVariable,Type>, MethodName:getTypeVariableMap,  @AT@ 1893 @LENGTH@ 52
------INS MethodInvocation@@typeVariableMap.putAll(parent.getTypeVariableMap()) @TO@ ExpressionStatement@@MethodInvocation:typeVariableMap.putAll(parent.getTypeVariableMap()) @AT@ 1893 @LENGTH@ 51
---------INS SimpleName@@Name:typeVariableMap @TO@ MethodInvocation@@typeVariableMap.putAll(parent.getTypeVariableMap()) @AT@ 1893 @LENGTH@ 15
---------INS SimpleName@@MethodName:putAll:[parent.getTypeVariableMap()] @TO@ MethodInvocation@@typeVariableMap.putAll(parent.getTypeVariableMap()) @AT@ 1909 @LENGTH@ 35
------------INS MethodInvocation@@parent.getTypeVariableMap() @TO@ SimpleName@@MethodName:putAll:[parent.getTypeVariableMap()] @AT@ 1916 @LENGTH@ 27
---------------MOV SimpleName@@Name:parent @TO@ MethodInvocation@@parent.getTypeVariableMap() @AT@ 1635 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:getTypeVariableMap:[] @TO@ MethodInvocation@@parent.getTypeVariableMap() @AT@ 1642 @LENGTH@ 20
---INS ReturnStatement@@SimpleName:typeVariableMap @TO@ MethodDeclaration@@protected, Map<TypeVariable,Type>, MethodName:getTypeVariableMap,  @AT@ 1949 @LENGTH@ 23
------INS SimpleName@@typeVariableMap @TO@ ReturnStatement@@SimpleName:typeVariableMap @AT@ 1956 @LENGTH@ 15


UPD Block@@ThenBody:{  LOG.debug("Using compression: {}",sftpConfig.getCompression());  session.setConfig("compression.s2c","zlib@openssh.com, zlib, none");  session.setConfig("compression.c2s","zlib@openssh.com, zlib, none");  session.setConfig("compression_level",Integer.toString(sftpConfig.getCompression()));} @TO@ ThenBody:{  LOG.debug("Using compression: {}",sftpConfig.getCompression());  session.setConfig("compression.s2c","zlib@openssh.com,zlib,none");  session.setConfig("compression.c2s","zlib@openssh.com,zlib,none");  session.setConfig("compression_level",Integer.toString(sftpConfig.getCompression()));} @AT@ 11988 @LENGTH@ 351
---UPD ExpressionStatement@@MethodInvocation:session.setConfig("compression.s2c","zlib@openssh.com, zlib, none") @TO@ MethodInvocation:session.setConfig("compression.s2c","zlib@openssh.com,zlib,none") @AT@ 12079 @LENGTH@ 69
------UPD MethodInvocation@@session.setConfig("compression.s2c","zlib@openssh.com, zlib, none") @TO@ session.setConfig("compression.s2c","zlib@openssh.com,zlib,none") @AT@ 12079 @LENGTH@ 68
---------UPD SimpleName@@MethodName:setConfig:["compression.s2c", "zlib@openssh.com, zlib, none"] @TO@ MethodName:setConfig:["compression.s2c", "zlib@openssh.com,zlib,none"] @AT@ 12087 @LENGTH@ 60
------------UPD StringLiteral@@"zlib@openssh.com, zlib, none" @TO@ "zlib@openssh.com,zlib,none" @AT@ 12116 @LENGTH@ 30
---UPD ExpressionStatement@@MethodInvocation:session.setConfig("compression.c2s","zlib@openssh.com, zlib, none") @TO@ MethodInvocation:session.setConfig("compression.c2s","zlib@openssh.com,zlib,none") @AT@ 12161 @LENGTH@ 69
------UPD MethodInvocation@@session.setConfig("compression.c2s","zlib@openssh.com, zlib, none") @TO@ session.setConfig("compression.c2s","zlib@openssh.com,zlib,none") @AT@ 12161 @LENGTH@ 68
---------UPD SimpleName@@MethodName:setConfig:["compression.c2s", "zlib@openssh.com, zlib, none"] @TO@ MethodName:setConfig:["compression.c2s", "zlib@openssh.com,zlib,none"] @AT@ 12169 @LENGTH@ 60
------------UPD StringLiteral@@"zlib@openssh.com, zlib, none" @TO@ "zlib@openssh.com,zlib,none" @AT@ 12198 @LENGTH@ 30


UPD IfStatement@@if ("ftp".equals(componentName) || "ftps".equals(componentName) || "sftp".equals(componentName)) {  return "file/remote";} @TO@ if ("ftp".equals(componentName) || "ftps".equals(componentName) || "sftp".equals(componentName)) {  return "file/remote";} else if ("cxfrs".equals(componentName)) {  return "cxf/jaxrs";} @AT@ 44271 @LENGTH@ 142
---INS Block@@ElseBody:if ("cxfrs".equals(componentName)) {  return "cxf/jaxrs";} @TO@ IfStatement@@if ("ftp".equals(componentName) || "ftps".equals(componentName) || "sftp".equals(componentName)) {  return "file/remote";} @AT@ 44419 @LENGTH@ 78
------INS IfStatement@@if ("cxfrs".equals(componentName)) {  return "cxf/jaxrs";} @TO@ Block@@ElseBody:if ("cxfrs".equals(componentName)) {  return "cxf/jaxrs";} @AT@ 44419 @LENGTH@ 78
---------INS MethodInvocation@@"cxfrs".equals(componentName) @TO@ IfStatement@@if ("cxfrs".equals(componentName)) {  return "cxf/jaxrs";} @AT@ 44423 @LENGTH@ 29
------------INS StringLiteral@@"cxfrs" @TO@ MethodInvocation@@"cxfrs".equals(componentName) @AT@ 44423 @LENGTH@ 7
------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"cxfrs".equals(componentName) @AT@ 44431 @LENGTH@ 21
---------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44438 @LENGTH@ 13
---------INS Block@@ThenBody:{  return "cxf/jaxrs";} @TO@ IfStatement@@if ("cxfrs".equals(componentName)) {  return "cxf/jaxrs";} @AT@ 44454 @LENGTH@ 43
------------INS ReturnStatement@@StringLiteral:"cxf/jaxrs" @TO@ Block@@ThenBody:{  return "cxf/jaxrs";} @AT@ 44468 @LENGTH@ 19
---------------INS StringLiteral@@"cxf/jaxrs" @TO@ ReturnStatement@@StringLiteral:"cxf/jaxrs" @AT@ 44475 @LENGTH@ 11


INS MethodDeclaration@@Map<String,Order>, MethodName:getSortKeysWithoutAliases,  @TO@ TypeDeclaration@@[public]PagingQueryProvider,  @AT@ 3172 @LENGTH@ 28
---INS ParameterizedType@@Map<String,Order> @TO@ MethodDeclaration@@Map<String,Order>, MethodName:getSortKeysWithoutAliases,  @AT@ 3153 @LENGTH@ 18
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Order> @AT@ 3153 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Order> @AT@ 3157 @LENGTH@ 6
------INS SimpleType@@Order @TO@ ParameterizedType@@Map<String,Order> @AT@ 3165 @LENGTH@ 5
---INS SimpleName@@MethodName:getSortKeysWithoutAliases @TO@ MethodDeclaration@@Map<String,Order>, MethodName:getSortKeysWithoutAliases,  @AT@ 3172 @LENGTH@ 25


UPD MethodDeclaration@@OAuth2Authentication, MethodName:loadAuthentication, String accessToken, AuthenticationException,  @TO@ OAuth2Authentication, MethodName:loadAuthentication, String accessToken, AuthenticationException, InvalidTokenException,  @AT@ 579 @LENGTH@ 70
---INS SimpleType@@InvalidTokenException @TO@ MethodDeclaration@@OAuth2Authentication, MethodName:loadAuthentication, String accessToken, AuthenticationException,  @AT@ 793 @LENGTH@ 21


UPD IfStatement@@if (ModClusterModel.VERSION_1_2_0.requiresTransformation(version)) {  builder.addChildResource(PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CIPHER_SUITE,KEY_ALIAS,PROTOCOL);} @TO@ if (ModClusterModel.VERSION_1_3_0.requiresTransformation(version)) {  builder.addChildResource(PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CIPHER_SUITE,KEY_ALIAS,PROTOCOL);} @AT@ 5507 @LENGTH@ 279
---UPD MethodInvocation@@ModClusterModel.VERSION_1_2_0.requiresTransformation(version) @TO@ ModClusterModel.VERSION_1_3_0.requiresTransformation(version) @AT@ 5511 @LENGTH@ 61
------UPD QualifiedName@@Name:ModClusterModel.VERSION_1_2_0 @TO@ Name:ModClusterModel.VERSION_1_3_0 @AT@ 5511 @LENGTH@ 29


INS MethodDeclaration@@public, voidMethodName:DefaultRedisScript,  @TO@ TypeDeclaration@@[public]DefaultRedisScript, [RedisScript<T>, InitializingBean] @AT@ 1874 @LENGTH@ 30
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:DefaultRedisScript,  @AT@ 1874 @LENGTH@ 6
---INS SimpleName@@MethodName:DefaultRedisScript @TO@ MethodDeclaration@@public, voidMethodName:DefaultRedisScript,  @AT@ 1881 @LENGTH@ 18


UPD TypeDeclaration@@[public]NettyHttpConfiguration, NettyConfiguration @TO@ [@UriParams, public]NettyHttpConfiguration, NettyConfiguration @AT@ 1116 @LENGTH@ 4171
---INS MarkerAnnotation@@@UriParams @TO@ TypeDeclaration@@[public]NettyHttpConfiguration, NettyConfiguration @AT@ 1192 @LENGTH@ 10


UPD MethodDeclaration@@protected, boolean, MethodName:compare, Object left, Object right, CommandLineException,  @TO@ protected, boolean, MethodName:doCompare, Object left, Object right,  @AT@ 1316 @LENGTH@ 255
---UPD SimpleName@@MethodName:compare @TO@ MethodName:doCompare @AT@ 1334 @LENGTH@ 7
---DEL SimpleType@@CommandLineException @AT@ 1376 @LENGTH@ 20


UPD TryStatement@@try {  CallbackHandler cbh=new AuthenticationCallbackHandler(username,password);  connInfoBean=new ConnectionInfoBean();  connInfoBean.setDisableLocalAuth(disableLocalAuth);  if (log.isDebugEnabled()) {    log.debug("connecting to " + address.getHost() + ':'+ address.getPort()+ " as "+ username);  }  ModelControllerClient tempClient=ModelControllerClientFactory.CUSTOM.getClient(address,cbh,disableLocalAuth,sslContext,connectionTimeout,this,timeoutHandler);  retry=false;  tryConnection(tempClient,address);  initNewClient(tempClient,address);  connInfoBean.setLoggedSince(new Date());} catch (RedirectException re) {  try {    URI location=new URI(re.getLocation());    if ("http-remoting".equals(address.getProtocol()) && "https".equals(location.getScheme())) {      int port=location.getPort();      if (port < 0) {        port=443;      }      address=addressResolver.resolveAddress(new URI("https-remoting",null,location.getHost(),port,null,null,null).toString());      if (visited.add(address) == false) {        throw new CommandLineException("Redirect to address already tried encountered Address=" + address.toString());      }      retry=true;    } else     if (address.getHost().equals(location.getHost()) && address.getPort() == location.getPort() && location.getPath() != null && location.getPath().length() > 1) {      throw new CommandLineException("Server at " + address.getHost() + ":"+ address.getPort()+ " does not support "+ address.getProtocol());    } else {      throw new CommandLineException("Unsupported redirect received.",re);    }  } catch (  URISyntaxException e) {    throw new CommandLineException("Bad redirect location '" + re.getLocation() + "' received.",e);  }}catch (IOException e) {  throw new CommandLineException("Failed to resolve host '" + address.getHost() + "'",e);} @TO@ try {  CallbackHandler cbh=new AuthenticationCallbackHandler(username,password);  if (log.isDebugEnabled()) {    log.debug("connecting to " + address.getHost() + ':'+ address.getPort()+ " as "+ username);  }  ModelControllerClient tempClient=ModelControllerClientFactory.CUSTOM.getClient(address,cbh,disableLocalAuth,sslContext,connectionTimeout,this,timeoutHandler);  retry=false;  tryConnection(tempClient,address);  initNewClient(tempClient,address);  connInfoBean=new ConnectionInfoBean();  connInfoBean.setDisableLocalAuth(disableLocalAuth);  connInfoBean.setLoggedSince(new Date());} catch (RedirectException re) {  try {    URI location=new URI(re.getLocation());    if ("http-remoting".equals(address.getProtocol()) && "https".equals(location.getScheme())) {      int port=location.getPort();      if (port < 0) {        port=443;      }      address=addressResolver.resolveAddress(new URI("https-remoting",null,location.getHost(),port,null,null,null).toString());      if (visited.add(address) == false) {        throw new CommandLineException("Redirect to address already tried encountered Address=" + address.toString());      }      retry=true;    } else     if (address.getHost().equals(location.getHost()) && address.getPort() == location.getPort() && location.getPath() != null && location.getPath().length() > 1) {      throw new CommandLineException("Server at " + address.getHost() + ":"+ address.getPort()+ " does not support "+ address.getProtocol());    } else {      throw new CommandLineException("Unsupported redirect received.",re);    }  } catch (  URISyntaxException e) {    throw new CommandLineException("Bad redirect location '" + re.getLocation() + "' received.",e);  }}catch (IOException e) {  throw new CommandLineException("Failed to resolve host '" + address.getHost() + "'",e);} @AT@ 35052 @LENGTH@ 2584
---MOV ExpressionStatement@@Assignment:connInfoBean=new ConnectionInfoBean() @TO@ TryStatement@@try {  CallbackHandler cbh=new AuthenticationCallbackHandler(username,password);  connInfoBean=new ConnectionInfoBean();  connInfoBean.setDisableLocalAuth(disableLocalAuth);  if (log.isDebugEnabled()) {    log.debug("connecting to " + address.getHost() + ':'+ address.getPort()+ " as "+ username);  }  ModelControllerClient tempClient=ModelControllerClientFactory.CUSTOM.getClient(address,cbh,disableLocalAuth,sslContext,connectionTimeout,this,timeoutHandler);  retry=false;  tryConnection(tempClient,address);  initNewClient(tempClient,address);  connInfoBean.setLoggedSince(new Date());} catch (RedirectException re) {  try {    URI location=new URI(re.getLocation());    if ("http-remoting".equals(address.getProtocol()) && "https".equals(location.getScheme())) {      int port=location.getPort();      if (port < 0) {        port=443;      }      address=addressResolver.resolveAddress(new URI("https-remoting",null,location.getHost(),port,null,null,null).toString());      if (visited.add(address) == false) {        throw new CommandLineException("Redirect to address already tried encountered Address=" + address.toString());      }      retry=true;    } else     if (address.getHost().equals(location.getHost()) && address.getPort() == location.getPort() && location.getPath() != null && location.getPath().length() > 1) {      throw new CommandLineException("Server at " + address.getHost() + ":"+ address.getPort()+ " does not support "+ address.getProtocol());    } else {      throw new CommandLineException("Unsupported redirect received.",re);    }  } catch (  URISyntaxException e) {    throw new CommandLineException("Bad redirect location '" + re.getLocation() + "' received.",e);  }}catch (IOException e) {  throw new CommandLineException("Failed to resolve host '" + address.getHost() + "'",e);} @AT@ 35167 @LENGTH@ 40
---MOV ExpressionStatement@@MethodInvocation:connInfoBean.setDisableLocalAuth(disableLocalAuth) @TO@ TryStatement@@try {  CallbackHandler cbh=new AuthenticationCallbackHandler(username,password);  connInfoBean=new ConnectionInfoBean();  connInfoBean.setDisableLocalAuth(disableLocalAuth);  if (log.isDebugEnabled()) {    log.debug("connecting to " + address.getHost() + ':'+ address.getPort()+ " as "+ username);  }  ModelControllerClient tempClient=ModelControllerClientFactory.CUSTOM.getClient(address,cbh,disableLocalAuth,sslContext,connectionTimeout,this,timeoutHandler);  retry=false;  tryConnection(tempClient,address);  initNewClient(tempClient,address);  connInfoBean.setLoggedSince(new Date());} catch (RedirectException re) {  try {    URI location=new URI(re.getLocation());    if ("http-remoting".equals(address.getProtocol()) && "https".equals(location.getScheme())) {      int port=location.getPort();      if (port < 0) {        port=443;      }      address=addressResolver.resolveAddress(new URI("https-remoting",null,location.getHost(),port,null,null,null).toString());      if (visited.add(address) == false) {        throw new CommandLineException("Redirect to address already tried encountered Address=" + address.toString());      }      retry=true;    } else     if (address.getHost().equals(location.getHost()) && address.getPort() == location.getPort() && location.getPath() != null && location.getPath().length() > 1) {      throw new CommandLineException("Server at " + address.getHost() + ":"+ address.getPort()+ " does not support "+ address.getProtocol());    } else {      throw new CommandLineException("Unsupported redirect received.",re);    }  } catch (  URISyntaxException e) {    throw new CommandLineException("Bad redirect location '" + re.getLocation() + "' received.",e);  }}catch (IOException e) {  throw new CommandLineException("Failed to resolve host '" + address.getHost() + "'",e);} @AT@ 35224 @LENGTH@ 51


UPD TypeDeclaration@@[public]JpaEndpoint, ScheduledPollEndpoint @TO@ [@UriEndpoint(scheme="jpa",consumerClass=JpaConsumer.class), public]JpaEndpoint, ScheduledPollEndpoint @AT@ 1793 @LENGTH@ 8715
---INS NormalAnnotation@@@UriEndpoint(scheme="jpa",consumerClass=JpaConsumer.class) @TO@ TypeDeclaration@@[public]JpaEndpoint, ScheduledPollEndpoint @AT@ 1872 @LENGTH@ 63


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]ThrottlerRejectedExecutionException, RejectedExecutionException @AT@ 993 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 993 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1001 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1008 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1014 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1019 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1019 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1038 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:testInvalidUrl, SQLException,  @TO@ TypeDeclaration@@[public]TestJdbcDriver, TestCase @AT@ 43119 @LENGTH@ 166
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testInvalidUrl, SQLException,  @AT@ 43119 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testInvalidUrl, SQLException,  @AT@ 43126 @LENGTH@ 4
---INS SimpleName@@MethodName:testInvalidUrl @TO@ MethodDeclaration@@public, void, MethodName:testInvalidUrl, SQLException,  @AT@ 43131 @LENGTH@ 14
---INS SimpleType@@SQLException @TO@ MethodDeclaration@@public, void, MethodName:testInvalidUrl, SQLException,  @AT@ 43155 @LENGTH@ 12
---INS VariableDeclarationStatement@@HiveDriver driver=new HiveDriver(); @TO@ MethodDeclaration@@public, void, MethodName:testInvalidUrl, SQLException,  @AT@ 43174 @LENGTH@ 37
------INS SimpleType@@HiveDriver @TO@ VariableDeclarationStatement@@HiveDriver driver=new HiveDriver(); @AT@ 43174 @LENGTH@ 10
------INS VariableDeclarationFragment@@driver=new HiveDriver() @TO@ VariableDeclarationStatement@@HiveDriver driver=new HiveDriver(); @AT@ 43185 @LENGTH@ 25
---------INS SimpleName@@driver @TO@ VariableDeclarationFragment@@driver=new HiveDriver() @AT@ 43185 @LENGTH@ 6
---------INS ClassInstanceCreation@@HiveDriver[] @TO@ VariableDeclarationFragment@@driver=new HiveDriver() @AT@ 43194 @LENGTH@ 16
------------INS New@@new @TO@ ClassInstanceCreation@@HiveDriver[] @AT@ 43194 @LENGTH@ 3
------------INS SimpleType@@HiveDriver @TO@ ClassInstanceCreation@@HiveDriver[] @AT@ 43198 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertNull(driver.connect("jdbc:hive2://localhost:1000",null)) @TO@ MethodDeclaration@@public, void, MethodName:testInvalidUrl, SQLException,  @AT@ 43217 @LENGTH@ 64
------INS MethodInvocation@@assertNull(driver.connect("jdbc:hive2://localhost:1000",null)) @TO@ ExpressionStatement@@MethodInvocation:assertNull(driver.connect("jdbc:hive2://localhost:1000",null)) @AT@ 43217 @LENGTH@ 63
---------INS SimpleName@@MethodName:assertNull:[driver.connect("jdbc:hive2://localhost:1000",null)] @TO@ MethodInvocation@@assertNull(driver.connect("jdbc:hive2://localhost:1000",null)) @AT@ 43217 @LENGTH@ 63
------------INS MethodInvocation@@driver.connect("jdbc:hive2://localhost:1000",null) @TO@ SimpleName@@MethodName:assertNull:[driver.connect("jdbc:hive2://localhost:1000",null)] @AT@ 43228 @LENGTH@ 51
---------------INS SimpleName@@Name:driver @TO@ MethodInvocation@@driver.connect("jdbc:hive2://localhost:1000",null) @AT@ 43228 @LENGTH@ 6
---------------INS SimpleName@@MethodName:connect:["jdbc:hive2://localhost:1000", null] @TO@ MethodInvocation@@driver.connect("jdbc:hive2://localhost:1000",null) @AT@ 43235 @LENGTH@ 44
------------------INS StringLiteral@@"jdbc:hive2://localhost:1000" @TO@ SimpleName@@MethodName:connect:["jdbc:hive2://localhost:1000", null] @AT@ 43243 @LENGTH@ 29
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:connect:["jdbc:hive2://localhost:1000", null] @AT@ 43274 @LENGTH@ 4


UPD VariableDeclarationStatement@@Collection<Message> messages=new ArrayList<>(1); @TO@ Collection<Message> messages=new ArrayList<Message>(1); @AT@ 3620 @LENGTH@ 50
---UPD VariableDeclarationFragment@@messages=new ArrayList<>(1) @TO@ messages=new ArrayList<Message>(1) @AT@ 3640 @LENGTH@ 29
------UPD ClassInstanceCreation@@ArrayList<>[1] @TO@ ArrayList<Message>[1] @AT@ 3651 @LENGTH@ 18
---------UPD ParameterizedType@@ArrayList<> @TO@ ArrayList<Message> @AT@ 3655 @LENGTH@ 11
------------INS SimpleType@@Message @TO@ ParameterizedType@@ArrayList<> @AT@ 3665 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:shouldUseTargetObjectOfLazyLoadingProxyWhenWriting,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MappingMongoConverterUnitTests,  @AT@ 53295 @LENGTH@ 239
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldUseTargetObjectOfLazyLoadingProxyWhenWriting,  @AT@ 53295 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldUseTargetObjectOfLazyLoadingProxyWhenWriting,  @AT@ 53302 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldUseTargetObjectOfLazyLoadingProxyWhenWriting @TO@ MethodDeclaration@@public, void, MethodName:shouldUseTargetObjectOfLazyLoadingProxyWhenWriting,  @AT@ 53307 @LENGTH@ 50
---INS VariableDeclarationStatement@@LazyLoadingProxy mock=mock(LazyLoadingProxy.class); @TO@ MethodDeclaration@@public, void, MethodName:shouldUseTargetObjectOfLazyLoadingProxyWhenWriting,  @AT@ 53365 @LENGTH@ 53
------INS SimpleType@@LazyLoadingProxy @TO@ VariableDeclarationStatement@@LazyLoadingProxy mock=mock(LazyLoadingProxy.class); @AT@ 53365 @LENGTH@ 16
------INS VariableDeclarationFragment@@mock=mock(LazyLoadingProxy.class) @TO@ VariableDeclarationStatement@@LazyLoadingProxy mock=mock(LazyLoadingProxy.class); @AT@ 53382 @LENGTH@ 35
---------INS SimpleName@@mock @TO@ VariableDeclarationFragment@@mock=mock(LazyLoadingProxy.class) @AT@ 53382 @LENGTH@ 4
---------INS MethodInvocation@@mock(LazyLoadingProxy.class) @TO@ VariableDeclarationFragment@@mock=mock(LazyLoadingProxy.class) @AT@ 53389 @LENGTH@ 28
------------INS SimpleName@@MethodName:mock:[LazyLoadingProxy.class] @TO@ MethodInvocation@@mock(LazyLoadingProxy.class) @AT@ 53389 @LENGTH@ 28
---------------INS TypeLiteral@@LazyLoadingProxy.class @TO@ SimpleName@@MethodName:mock:[LazyLoadingProxy.class] @AT@ 53394 @LENGTH@ 22
---INS VariableDeclarationStatement@@BasicDBObject dbo=new BasicDBObject(); @TO@ MethodDeclaration@@public, void, MethodName:shouldUseTargetObjectOfLazyLoadingProxyWhenWriting,  @AT@ 53422 @LENGTH@ 40
------INS SimpleType@@BasicDBObject @TO@ VariableDeclarationStatement@@BasicDBObject dbo=new BasicDBObject(); @AT@ 53422 @LENGTH@ 13
------INS VariableDeclarationFragment@@dbo=new BasicDBObject() @TO@ VariableDeclarationStatement@@BasicDBObject dbo=new BasicDBObject(); @AT@ 53436 @LENGTH@ 25
---------INS SimpleName@@dbo @TO@ VariableDeclarationFragment@@dbo=new BasicDBObject() @AT@ 53436 @LENGTH@ 3
---------INS ClassInstanceCreation@@BasicDBObject[] @TO@ VariableDeclarationFragment@@dbo=new BasicDBObject() @AT@ 53442 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject[] @AT@ 53442 @LENGTH@ 3
------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject[] @AT@ 53446 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:converter.write(mock,dbo) @TO@ MethodDeclaration@@public, void, MethodName:shouldUseTargetObjectOfLazyLoadingProxyWhenWriting,  @AT@ 53465 @LENGTH@ 27
------INS MethodInvocation@@converter.write(mock,dbo) @TO@ ExpressionStatement@@MethodInvocation:converter.write(mock,dbo) @AT@ 53465 @LENGTH@ 26
---------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.write(mock,dbo) @AT@ 53465 @LENGTH@ 9
---------INS SimpleName@@MethodName:write:[mock, dbo] @TO@ MethodInvocation@@converter.write(mock,dbo) @AT@ 53475 @LENGTH@ 16
------------INS SimpleName@@mock @TO@ SimpleName@@MethodName:write:[mock, dbo] @AT@ 53481 @LENGTH@ 4
------------INS SimpleName@@dbo @TO@ SimpleName@@MethodName:write:[mock, dbo] @AT@ 53487 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:verify(mock,times(1)).getTarget() @TO@ MethodDeclaration@@public, void, MethodName:shouldUseTargetObjectOfLazyLoadingProxyWhenWriting,  @AT@ 53496 @LENGTH@ 35
------INS MethodInvocation@@verify(mock,times(1)).getTarget() @TO@ ExpressionStatement@@MethodInvocation:verify(mock,times(1)).getTarget() @AT@ 53496 @LENGTH@ 34
---------INS MethodInvocation@@MethodName:verify:[mock, times(1)] @TO@ MethodInvocation@@verify(mock,times(1)).getTarget() @AT@ 53496 @LENGTH@ 22
------------INS SimpleName@@mock @TO@ MethodInvocation@@MethodName:verify:[mock, times(1)] @AT@ 53503 @LENGTH@ 4
------------INS MethodInvocation@@times(1) @TO@ MethodInvocation@@MethodName:verify:[mock, times(1)] @AT@ 53509 @LENGTH@ 8
---------------INS SimpleName@@MethodName:times:[1] @TO@ MethodInvocation@@times(1) @AT@ 53509 @LENGTH@ 8
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:times:[1] @AT@ 53515 @LENGTH@ 1
---------INS SimpleName@@MethodName:getTarget:[] @TO@ MethodInvocation@@verify(mock,times(1)).getTarget() @AT@ 53519 @LENGTH@ 11


UPD FieldDeclaration@@final, String, [AUTHORITIES="authorities"] @TO@ final, String, [AUTHORITIES=AccessTokenConverter.AUTHORITIES] @AT@ 819 @LENGTH@ 41
---UPD VariableDeclarationFragment@@AUTHORITIES="authorities" @TO@ AUTHORITIES=AccessTokenConverter.AUTHORITIES @AT@ 832 @LENGTH@ 27
------INS QualifiedName@@AccessTokenConverter.AUTHORITIES @TO@ VariableDeclarationFragment@@AUTHORITIES="authorities" @AT@ 846 @LENGTH@ 32
---------INS SimpleName@@AccessTokenConverter @TO@ QualifiedName@@AccessTokenConverter.AUTHORITIES @AT@ 846 @LENGTH@ 20
---------INS SimpleName@@AUTHORITIES @TO@ QualifiedName@@AccessTokenConverter.AUTHORITIES @AT@ 867 @LENGTH@ 11
------DEL StringLiteral@@"authorities" @AT@ 846 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:invoker.invokeDelete(id) @TO@ MethodInvocation:invoker.invokeDelete(id.toString()) @AT@ 6181 @LENGTH@ 25
---UPD MethodInvocation@@invoker.invokeDelete(id) @TO@ invoker.invokeDelete(id.toString()) @AT@ 6181 @LENGTH@ 24
------UPD SimpleName@@MethodName:invokeDelete:[id] @TO@ MethodName:invokeDelete:[id.toString()] @AT@ 6189 @LENGTH@ 16
---------DEL SimpleName@@id @AT@ 6202 @LENGTH@ 2
---------INS MethodInvocation@@id.toString() @TO@ SimpleName@@MethodName:invokeDelete:[id] @AT@ 6330 @LENGTH@ 13
------------INS SimpleName@@Name:id @TO@ MethodInvocation@@id.toString() @AT@ 6330 @LENGTH@ 2
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@id.toString() @AT@ 6333 @LENGTH@ 10


DEL VariableDeclarationStatement@@List<BooleanExample> list=new ArrayList<BooleanExample>(); @AT@ 2174 @LENGTH@ 60
---DEL ParameterizedType@@List<BooleanExample> @AT@ 2174 @LENGTH@ 20
------DEL SimpleType@@List @AT@ 2174 @LENGTH@ 4
------DEL SimpleType@@BooleanExample @AT@ 2179 @LENGTH@ 14
---DEL VariableDeclarationFragment@@list=new ArrayList<BooleanExample>() @AT@ 2195 @LENGTH@ 38
------DEL SimpleName@@list @AT@ 2195 @LENGTH@ 4
------DEL ClassInstanceCreation@@ArrayList<BooleanExample>[] @AT@ 2202 @LENGTH@ 31
---------DEL New@@new @AT@ 2202 @LENGTH@ 3
---------DEL ParameterizedType@@ArrayList<BooleanExample> @AT@ 2206 @LENGTH@ 25
------------DEL SimpleType@@ArrayList @AT@ 2206 @LENGTH@ 9
------------DEL SimpleType@@BooleanExample @AT@ 2216 @LENGTH@ 14


UPD TypeDeclaration@@[@UriEndpoint(scheme="jgroups",consumerClass=JGroupsConsumer.class,label="messaging"), public]JGroupsEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="jgroups",consumerClass=JGroupsConsumer.class,label="clustering,messaging"), public]JGroupsEndpoint, DefaultEndpoint @AT@ 1402 @LENGTH@ 5242
---UPD NormalAnnotation@@@UriEndpoint(scheme="jgroups",consumerClass=JGroupsConsumer.class,label="messaging") @TO@ @UriEndpoint(scheme="jgroups",consumerClass=JGroupsConsumer.class,label="clustering,messaging") @AT@ 1402 @LENGTH@ 92


INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ MethodDeclaration@@public, void, MethodName:testComponentConfiguration, Exception,  @AT@ 1847 @LENGTH@ 82
---INS MethodInvocation@@assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1847 @LENGTH@ 81
------INS SimpleName@@MethodName:assertTrue:[json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1847 @LENGTH@ 81
---------INS MethodInvocation@@json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")] @AT@ 1858 @LENGTH@ 69
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1858 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["\"host\": { \"kind\": \"path\", \"type\": \"string\""] @TO@ MethodInvocation@@json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1863 @LENGTH@ 64
---------------INS StringLiteral@@"\"host\": { \"kind\": \"path\", \"type\": \"string\"" @TO@ SimpleName@@MethodName:contains:["\"host\": { \"kind\": \"path\", \"type\": \"string\""] @AT@ 1872 @LENGTH@ 54


INS MethodDeclaration@@public, Set<String>, MethodName:getAutoApproveScopes,  @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), @org.codehaus.jackson.map.annotate.JsonSerialize(include=org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion.NON_DEFAULT), @org.codehaus.jackson.annotate.JsonIgnoreProperties(ignoreUnknown=true), @com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_DEFAULT), @com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown=true), public]BaseClientDetails, [ClientDetails] @AT@ 6572 @LENGTH@ 74
---INS Modifier@@public @TO@ MethodDeclaration@@public, Set<String>, MethodName:getAutoApproveScopes,  @AT@ 6572 @LENGTH@ 6
---INS ParameterizedType@@Set<String> @TO@ MethodDeclaration@@public, Set<String>, MethodName:getAutoApproveScopes,  @AT@ 6579 @LENGTH@ 11
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 6579 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 6583 @LENGTH@ 6
---INS SimpleName@@MethodName:getAutoApproveScopes @TO@ MethodDeclaration@@public, Set<String>, MethodName:getAutoApproveScopes,  @AT@ 6591 @LENGTH@ 20
---INS ReturnStatement@@SimpleName:autoApproveScopes @TO@ MethodDeclaration@@public, Set<String>, MethodName:getAutoApproveScopes,  @AT@ 6618 @LENGTH@ 25
------INS SimpleName@@autoApproveScopes @TO@ ReturnStatement@@SimpleName:autoApproveScopes @AT@ 6625 @LENGTH@ 17


UPD ReturnStatement@@MethodInvocation:appendUtf8Raw((byte)c) @TO@ MethodInvocation:appendUtf8Raw((int)c) @AT@ 1529 @LENGTH@ 31
---UPD MethodInvocation@@appendUtf8Raw((byte)c) @TO@ appendUtf8Raw((int)c) @AT@ 1536 @LENGTH@ 23
------UPD SimpleName@@MethodName:appendUtf8Raw:[(byte)c] @TO@ MethodName:appendUtf8Raw:[(int)c] @AT@ 1536 @LENGTH@ 23
---------UPD CastExpression@@(byte)c @TO@ (int)c @AT@ 1550 @LENGTH@ 8
------------UPD PrimitiveType@@byte @TO@ int @AT@ 1551 @LENGTH@ 4


UPD SuperConstructorInvocation@@super(cluster,TraitsUtil.getFilterTraitSet(cluster,traits,child),child,condition);
 @TO@ super(cluster,TraitsUtil.getDefaultTraitSet(cluster),child,condition);
 @AT@ 811 @LENGTH@ 87
---UPD MethodInvocation@@TraitsUtil.getFilterTraitSet(cluster,traits,child) @TO@ TraitsUtil.getDefaultTraitSet(cluster) @AT@ 826 @LENGTH@ 52
------UPD SimpleName@@MethodName:getFilterTraitSet:[cluster, traits, child] @TO@ MethodName:getDefaultTraitSet:[cluster] @AT@ 837 @LENGTH@ 41
---------DEL SimpleName@@traits @AT@ 864 @LENGTH@ 6
---------DEL SimpleName@@child @AT@ 872 @LENGTH@ 5


UPD IfStatement@@if (consumer.getConfiguration().isOrderedThreadPoolExecutor()) {  ExecutionHandler executionHandler=new ExecutionHandler(consumer.getEndpoint().getComponent().getExecutorService());  addToPipeline("executionHandler",channelPipeline,executionHandler);  LOG.debug("Using OrderedMemoryAwareThreadPoolExecutor with core pool size: {}",consumer.getConfiguration().getMaximumPoolSize());} @TO@ if (consumer.getConfiguration().isOrderedThreadPoolExecutor()) {  EventExecutorGroup applicationExecutor=consumer.getEndpoint().getComponent().getExecutorService();  addToPipeline("handler",channelPipeline,applicationExecutor,new ServerChannelHandler(consumer));} else {  addToPipeline("handler",channelPipeline,new ServerChannelHandler(consumer));} @AT@ 4180 @LENGTH@ 757
---UPD Block@@ThenBody:{  ExecutionHandler executionHandler=new ExecutionHandler(consumer.getEndpoint().getComponent().getExecutorService());  addToPipeline("executionHandler",channelPipeline,executionHandler);  LOG.debug("Using OrderedMemoryAwareThreadPoolExecutor with core pool size: {}",consumer.getConfiguration().getMaximumPoolSize());} @TO@ ThenBody:{  EventExecutorGroup applicationExecutor=consumer.getEndpoint().getComponent().getExecutorService();  addToPipeline("handler",channelPipeline,applicationExecutor,new ServerChannelHandler(consumer));} @AT@ 4243 @LENGTH@ 694
------UPD VariableDeclarationStatement@@ExecutionHandler executionHandler=new ExecutionHandler(consumer.getEndpoint().getComponent().getExecutorService()); @TO@ EventExecutorGroup applicationExecutor=consumer.getEndpoint().getComponent().getExecutorService(); @AT@ 4585 @LENGTH@ 117
---------UPD SimpleType@@ExecutionHandler @TO@ EventExecutorGroup @AT@ 4585 @LENGTH@ 16
---------UPD VariableDeclarationFragment@@executionHandler=new ExecutionHandler(consumer.getEndpoint().getComponent().getExecutorService()) @TO@ applicationExecutor=consumer.getEndpoint().getComponent().getExecutorService() @AT@ 4602 @LENGTH@ 99
------------INS MethodInvocation@@consumer.getEndpoint().getComponent().getExecutorService() @TO@ VariableDeclarationFragment@@executionHandler=new ExecutionHandler(consumer.getEndpoint().getComponent().getExecutorService()) @AT@ 4418 @LENGTH@ 58
---------------MOV MethodInvocation@@MethodName:getComponent:[] @TO@ MethodInvocation@@consumer.getEndpoint().getComponent().getExecutorService() @AT@ 4642 @LENGTH@ 37
---------------MOV MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@consumer.getEndpoint().getComponent().getExecutorService() @AT@ 4642 @LENGTH@ 22
---------------MOV SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getEndpoint().getComponent().getExecutorService() @AT@ 4642 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:getExecutorService:[] @TO@ MethodInvocation@@consumer.getEndpoint().getComponent().getExecutorService() @AT@ 4680 @LENGTH@ 20
------------UPD SimpleName@@executionHandler @TO@ applicationExecutor @AT@ 4602 @LENGTH@ 16
------------DEL ClassInstanceCreation@@ExecutionHandler[consumer.getEndpoint().getComponent().getExecutorService()] @AT@ 4621 @LENGTH@ 80
---------------DEL New@@new @AT@ 4621 @LENGTH@ 3
---------------DEL SimpleType@@ExecutionHandler @AT@ 4625 @LENGTH@ 16
---------------DEL MethodInvocation@@consumer.getEndpoint().getComponent().getExecutorService() @AT@ 4642 @LENGTH@ 58
------UPD ExpressionStatement@@MethodInvocation:addToPipeline("executionHandler",channelPipeline,executionHandler) @TO@ MethodInvocation:addToPipeline("handler",channelPipeline,applicationExecutor,new ServerChannelHandler(consumer)) @AT@ 4715 @LENGTH@ 69
---------UPD MethodInvocation@@addToPipeline("executionHandler",channelPipeline,executionHandler) @TO@ addToPipeline("handler",channelPipeline,applicationExecutor,new ServerChannelHandler(consumer)) @AT@ 4715 @LENGTH@ 68
------------UPD SimpleName@@MethodName:addToPipeline:["executionHandler", channelPipeline, executionHandler] @TO@ MethodName:addToPipeline:["handler", channelPipeline, applicationExecutor, new ServerChannelHandler(consumer)] @AT@ 4715 @LENGTH@ 68
---------------INS ClassInstanceCreation@@ServerChannelHandler[consumer] @TO@ SimpleName@@MethodName:addToPipeline:["executionHandler", channelPipeline, executionHandler] @AT@ 4553 @LENGTH@ 34
------------------INS New@@new @TO@ ClassInstanceCreation@@ServerChannelHandler[consumer] @AT@ 4553 @LENGTH@ 3
------------------INS SimpleType@@ServerChannelHandler @TO@ ClassInstanceCreation@@ServerChannelHandler[consumer] @AT@ 4557 @LENGTH@ 20
------------------INS SimpleName@@consumer @TO@ ClassInstanceCreation@@ServerChannelHandler[consumer] @AT@ 4578 @LENGTH@ 8
---------------UPD StringLiteral@@"executionHandler" @TO@ "handler" @AT@ 4729 @LENGTH@ 18
---------------UPD SimpleName@@executionHandler @TO@ applicationExecutor @AT@ 4766 @LENGTH@ 16
------DEL ExpressionStatement@@MethodInvocation:LOG.debug("Using OrderedMemoryAwareThreadPoolExecutor with core pool size: {}",consumer.getConfiguration().getMaximumPoolSize()) @AT@ 4797 @LENGTH@ 130
---------DEL MethodInvocation@@LOG.debug("Using OrderedMemoryAwareThreadPoolExecutor with core pool size: {}",consumer.getConfiguration().getMaximumPoolSize()) @AT@ 4797 @LENGTH@ 129
------------DEL SimpleName@@Name:LOG @AT@ 4797 @LENGTH@ 3
------------DEL SimpleName@@MethodName:debug:["Using OrderedMemoryAwareThreadPoolExecutor with core pool size: {}", consumer.getConfiguration().getMaximumPoolSize()] @AT@ 4801 @LENGTH@ 125
---------------DEL StringLiteral@@"Using OrderedMemoryAwareThreadPoolExecutor with core pool size: {}" @AT@ 4807 @LENGTH@ 68
---------------DEL MethodInvocation@@consumer.getConfiguration().getMaximumPoolSize() @AT@ 4877 @LENGTH@ 48
------------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 4877 @LENGTH@ 27
------------------DEL SimpleName@@Name:consumer @AT@ 4877 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:getMaximumPoolSize:[] @AT@ 4905 @LENGTH@ 20
---INS Block@@ElseBody:{  addToPipeline("handler",channelPipeline,new ServerChannelHandler(consumer));} @TO@ IfStatement@@if (consumer.getConfiguration().isOrderedThreadPoolExecutor()) {  ExecutionHandler executionHandler=new ExecutionHandler(consumer.getEndpoint().getComponent().getExecutorService());  addToPipeline("executionHandler",channelPipeline,executionHandler);  LOG.debug("Using OrderedMemoryAwareThreadPoolExecutor with core pool size: {}",consumer.getConfiguration().getMaximumPoolSize());} @AT@ 4610 @LENGTH@ 161
------MOV ExpressionStatement@@MethodInvocation:addToPipeline("handler",channelPipeline,new ServerChannelHandler(consumer)) @TO@ Block@@ElseBody:{  addToPipeline("handler",channelPipeline,new ServerChannelHandler(consumer));} @AT@ 4989 @LENGTH@ 78


UPD ExpressionStatement@@Assignment:this.assembler=new MBeanInfoAssembler(camelContext) @TO@ Assignment:this.assembler=new MBeanInfoAssembler() @AT@ 2218 @LENGTH@ 54
---UPD Assignment@@this.assembler=new MBeanInfoAssembler(camelContext) @TO@ this.assembler=new MBeanInfoAssembler() @AT@ 2218 @LENGTH@ 53
------UPD ClassInstanceCreation@@MBeanInfoAssembler[camelContext] @TO@ MBeanInfoAssembler[] @AT@ 2235 @LENGTH@ 36
---------DEL SimpleName@@camelContext @AT@ 2258 @LENGTH@ 12


INS IfStatement@@if (((ModelNode)left).getType() != ((ModelNode)right).getType()) {  return true;} @TO@ MethodDeclaration@@protected, boolean, MethodName:compare, Object left, Object right,  @AT@ 1357 @LENGTH@ 101
---INS InfixExpression@@((ModelNode)left).getType() != ((ModelNode)right).getType() @TO@ IfStatement@@if (((ModelNode)left).getType() != ((ModelNode)right).getType()) {  return true;} @AT@ 1360 @LENGTH@ 60
------INS MethodInvocation@@((ModelNode)left).getType() @TO@ InfixExpression@@((ModelNode)left).getType() != ((ModelNode)right).getType() @AT@ 1360 @LENGTH@ 28
---------INS ParenthesizedExpression@@((ModelNode)left) @TO@ MethodInvocation@@((ModelNode)left).getType() @AT@ 1360 @LENGTH@ 18
------------INS CastExpression@@(ModelNode)left @TO@ ParenthesizedExpression@@((ModelNode)left) @AT@ 1361 @LENGTH@ 16
---------------INS SimpleType@@ModelNode @TO@ CastExpression@@(ModelNode)left @AT@ 1362 @LENGTH@ 9
---------------INS SimpleName@@left @TO@ CastExpression@@(ModelNode)left @AT@ 1373 @LENGTH@ 4
---------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@((ModelNode)left).getType() @AT@ 1379 @LENGTH@ 9
------INS Operator@@!= @TO@ InfixExpression@@((ModelNode)left).getType() != ((ModelNode)right).getType() @AT@ 1388 @LENGTH@ 2
------INS MethodInvocation@@((ModelNode)right).getType() @TO@ InfixExpression@@((ModelNode)left).getType() != ((ModelNode)right).getType() @AT@ 1392 @LENGTH@ 28
---------INS ParenthesizedExpression@@((ModelNode)right) @TO@ MethodInvocation@@((ModelNode)right).getType() @AT@ 1392 @LENGTH@ 18
------------INS CastExpression@@(ModelNode)right @TO@ ParenthesizedExpression@@((ModelNode)right) @AT@ 1393 @LENGTH@ 16
---------------INS SimpleType@@ModelNode @TO@ CastExpression@@(ModelNode)right @AT@ 1394 @LENGTH@ 9
---------------INS SimpleName@@right @TO@ CastExpression@@(ModelNode)right @AT@ 1404 @LENGTH@ 5
---------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@((ModelNode)right).getType() @AT@ 1411 @LENGTH@ 9
---INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (((ModelNode)left).getType() != ((ModelNode)right).getType()) {  return true;} @AT@ 1422 @LENGTH@ 36
------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 1436 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 1443 @LENGTH@ 4


INS MethodDeclaration@@public, voidMethodName:CxfBeanComponent,  @TO@ TypeDeclaration@@[public]CxfBeanComponent, HeaderFilterStrategyComponent @AT@ 1425 @LENGTH@ 71
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:CxfBeanComponent,  @AT@ 1425 @LENGTH@ 6
---INS SimpleName@@MethodName:CxfBeanComponent @TO@ MethodDeclaration@@public, voidMethodName:CxfBeanComponent,  @AT@ 1432 @LENGTH@ 16
---INS SuperConstructorInvocation@@super(CxfBeanEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:CxfBeanComponent,  @AT@ 1461 @LENGTH@ 29
------INS TypeLiteral@@CxfBeanEndpoint.class @TO@ SuperConstructorInvocation@@super(CxfBeanEndpoint.class);
 @AT@ 1467 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(reason.indexOf("Trigger key myGroup.myTimerName is already in used") >= 0,true) @TO@ MethodInvocation:Assert.assertEquals(reason.indexOf("Trigger key myGroup.myTimerName is already in use") >= 0,true) @AT@ 2198 @LENGTH@ 101
---UPD MethodInvocation@@Assert.assertEquals(reason.indexOf("Trigger key myGroup.myTimerName is already in used") >= 0,true) @TO@ Assert.assertEquals(reason.indexOf("Trigger key myGroup.myTimerName is already in use") >= 0,true) @AT@ 2198 @LENGTH@ 100
------UPD SimpleName@@MethodName:assertEquals:[reason.indexOf("Trigger key myGroup.myTimerName is already in used") >= 0, true] @TO@ MethodName:assertEquals:[reason.indexOf("Trigger key myGroup.myTimerName is already in use") >= 0, true] @AT@ 2205 @LENGTH@ 93
---------UPD InfixExpression@@reason.indexOf("Trigger key myGroup.myTimerName is already in used") >= 0 @TO@ reason.indexOf("Trigger key myGroup.myTimerName is already in use") >= 0 @AT@ 2218 @LENGTH@ 73
------------UPD MethodInvocation@@reason.indexOf("Trigger key myGroup.myTimerName is already in used") @TO@ reason.indexOf("Trigger key myGroup.myTimerName is already in use") @AT@ 2218 @LENGTH@ 68
---------------UPD SimpleName@@MethodName:indexOf:["Trigger key myGroup.myTimerName is already in used"] @TO@ MethodName:indexOf:["Trigger key myGroup.myTimerName is already in use"] @AT@ 2225 @LENGTH@ 61
------------------UPD StringLiteral@@"Trigger key myGroup.myTimerName is already in used" @TO@ "Trigger key myGroup.myTimerName is already in use" @AT@ 2233 @LENGTH@ 52


MOV ExpressionStatement@@SuperMethodInvocation:super.close() @TO@ MethodDeclaration@@public, synchronized, void, MethodName:close, IOException,  @AT@ 2146 @LENGTH@ 14


UPD TryStatement@@try {  invokeResultHandler();}  finally {  try {    rollbackAddedServices();  }  finally {    if (hasRemovals) {      waitForRemovals();    }  }} @TO@ try {  rollbackAddedServices();}  finally {  try {    invokeResultHandler();  }  finally {    if (hasRemovals) {      waitForRemovals();    }  }} @AT@ 49618 @LENGTH@ 339
---UPD ExpressionStatement@@MethodInvocation:invokeResultHandler() @TO@ MethodInvocation:rollbackAddedServices() @AT@ 49644 @LENGTH@ 22
------UPD MethodInvocation@@MethodName:invokeResultHandler:[] @TO@ MethodName:rollbackAddedServices:[] @AT@ 49644 @LENGTH@ 21
---UPD Block@@FinallyBody:{  try {    rollbackAddedServices();  }  finally {    if (hasRemovals) {      waitForRemovals();    }  }} @TO@ FinallyBody:{  try {    invokeResultHandler();  }  finally {    if (hasRemovals) {      waitForRemovals();    }  }} @AT@ 49693 @LENGTH@ 264
------UPD TryStatement@@try {  rollbackAddedServices();}  finally {  if (hasRemovals) {    waitForRemovals();  }} @TO@ try {  invokeResultHandler();}  finally {  if (hasRemovals) {    waitForRemovals();  }} @AT@ 49715 @LENGTH@ 224
---------UPD ExpressionStatement@@MethodInvocation:rollbackAddedServices() @TO@ MethodInvocation:invokeResultHandler() @AT@ 49745 @LENGTH@ 24
------------UPD MethodInvocation@@MethodName:rollbackAddedServices:[] @TO@ MethodName:invokeResultHandler:[] @AT@ 49745 @LENGTH@ 23


UPD MethodDeclaration@@private, static, Map<TypeVariable<?>,Type>, MethodName:getTypeVariableMap, Class<?> type,  @TO@ private, static, Map<TypeVariable<?>,Type>, MethodName:getTypeVariableMap, Class<?> type, Collection<Type> visited,  @AT@ 3781 @LENGTH@ 376
---UPD EnhancedForStatement@@for (Entry<TypeVariable,Type> entry : source.entrySet()) {  map.put(entry.getKey(),entry.getValue());} @TO@ for (Entry<TypeVariable,Type> entry : source.entrySet()) {  Type value=entry.getValue();  map.put(entry.getKey(),entry.getValue());  if (value instanceof Class) {    map.putAll(getTypeVariableMap((Class<?>)value,visited));  }} @AT@ 4030 @LENGTH@ 109
------INS VariableDeclarationStatement@@Type value=entry.getValue(); @TO@ EnhancedForStatement@@for (Entry<TypeVariable,Type> entry : source.entrySet()) {  map.put(entry.getKey(),entry.getValue());} @AT@ 4423 @LENGTH@ 30
---------INS SimpleType@@Type @TO@ VariableDeclarationStatement@@Type value=entry.getValue(); @AT@ 4423 @LENGTH@ 4
---------INS VariableDeclarationFragment@@value=entry.getValue() @TO@ VariableDeclarationStatement@@Type value=entry.getValue(); @AT@ 4428 @LENGTH@ 24
------------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=entry.getValue() @AT@ 4428 @LENGTH@ 5
------------INS MethodInvocation@@entry.getValue() @TO@ VariableDeclarationFragment@@value=entry.getValue() @AT@ 4436 @LENGTH@ 16
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 4436 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 4442 @LENGTH@ 10
------INS IfStatement@@if (value instanceof Class) {  map.putAll(getTypeVariableMap((Class<?>)value,visited));} @TO@ EnhancedForStatement@@for (Entry<TypeVariable,Type> entry : source.entrySet()) {  map.put(entry.getKey(),entry.getValue());} @AT@ 4504 @LENGTH@ 97
---------INS InstanceofExpression@@value instanceof Class @TO@ IfStatement@@if (value instanceof Class) {  map.putAll(getTypeVariableMap((Class<?>)value,visited));} @AT@ 4508 @LENGTH@ 22
------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof Class @AT@ 4508 @LENGTH@ 5
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof Class @AT@ 4514 @LENGTH@ 10
------------INS SimpleType@@Class @TO@ InstanceofExpression@@value instanceof Class @AT@ 4525 @LENGTH@ 5
---------INS Block@@ThenBody:{  map.putAll(getTypeVariableMap((Class<?>)value,visited));} @TO@ IfStatement@@if (value instanceof Class) {  map.putAll(getTypeVariableMap((Class<?>)value,visited));} @AT@ 4532 @LENGTH@ 69
------------INS ExpressionStatement@@MethodInvocation:map.putAll(getTypeVariableMap((Class<?>)value,visited)) @TO@ Block@@ThenBody:{  map.putAll(getTypeVariableMap((Class<?>)value,visited));} @AT@ 4538 @LENGTH@ 58
---------------INS MethodInvocation@@map.putAll(getTypeVariableMap((Class<?>)value,visited)) @TO@ ExpressionStatement@@MethodInvocation:map.putAll(getTypeVariableMap((Class<?>)value,visited)) @AT@ 4538 @LENGTH@ 57
------------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.putAll(getTypeVariableMap((Class<?>)value,visited)) @AT@ 4538 @LENGTH@ 3
------------------INS SimpleName@@MethodName:putAll:[getTypeVariableMap((Class<?>)value,visited)] @TO@ MethodInvocation@@map.putAll(getTypeVariableMap((Class<?>)value,visited)) @AT@ 4542 @LENGTH@ 53
---------------------INS MethodInvocation@@getTypeVariableMap((Class<?>)value,visited) @TO@ SimpleName@@MethodName:putAll:[getTypeVariableMap((Class<?>)value,visited)] @AT@ 4549 @LENGTH@ 45
------------------------INS SimpleName@@MethodName:getTypeVariableMap:[(Class<?>)value, visited] @TO@ MethodInvocation@@getTypeVariableMap((Class<?>)value,visited) @AT@ 4549 @LENGTH@ 45
---------------------------INS CastExpression@@(Class<?>)value @TO@ SimpleName@@MethodName:getTypeVariableMap:[(Class<?>)value, visited] @AT@ 4568 @LENGTH@ 16
------------------------------INS ParameterizedType@@Class<?> @TO@ CastExpression@@(Class<?>)value @AT@ 4569 @LENGTH@ 8
---------------------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 4569 @LENGTH@ 5
---------------------------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 4575 @LENGTH@ 1
------------------------------INS SimpleName@@value @TO@ CastExpression@@(Class<?>)value @AT@ 4579 @LENGTH@ 5
---------------------------INS SimpleName@@visited @TO@ SimpleName@@MethodName:getTypeVariableMap:[(Class<?>)value, visited] @AT@ 4586 @LENGTH@ 7
---INS SingleVariableDeclaration@@Collection<Type> visited @TO@ MethodDeclaration@@private, static, Map<TypeVariable<?>,Type>, MethodName:getTypeVariableMap, Class<?> type,  @AT@ 4056 @LENGTH@ 24
------INS ParameterizedType@@Collection<Type> @TO@ SingleVariableDeclaration@@Collection<Type> visited @AT@ 4056 @LENGTH@ 16
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Type> @AT@ 4056 @LENGTH@ 10
---------INS SimpleType@@Type @TO@ ParameterizedType@@Collection<Type> @AT@ 4067 @LENGTH@ 4
------INS SimpleName@@visited @TO@ SingleVariableDeclaration@@Collection<Type> visited @AT@ 4073 @LENGTH@ 7
---INS IfStatement@@if (visited.contains(type)) {  return Collections.emptyMap();} else {  visited.add(type);} @TO@ MethodDeclaration@@private, static, Map<TypeVariable<?>,Type>, MethodName:getTypeVariableMap, Class<?> type,  @AT@ 4087 @LENGTH@ 100
------INS MethodInvocation@@visited.contains(type) @TO@ IfStatement@@if (visited.contains(type)) {  return Collections.emptyMap();} else {  visited.add(type);} @AT@ 4091 @LENGTH@ 22
---------INS SimpleName@@Name:visited @TO@ MethodInvocation@@visited.contains(type) @AT@ 4091 @LENGTH@ 7
---------INS SimpleName@@MethodName:contains:[type] @TO@ MethodInvocation@@visited.contains(type) @AT@ 4099 @LENGTH@ 14
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:contains:[type] @AT@ 4108 @LENGTH@ 4
------INS Block@@ThenBody:{  return Collections.emptyMap();} @TO@ IfStatement@@if (visited.contains(type)) {  return Collections.emptyMap();} else {  visited.add(type);} @AT@ 4115 @LENGTH@ 39
---------INS ReturnStatement@@MethodInvocation:Collections.emptyMap() @TO@ Block@@ThenBody:{  return Collections.emptyMap();} @AT@ 4120 @LENGTH@ 30
------------INS MethodInvocation@@Collections.emptyMap() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyMap() @AT@ 4127 @LENGTH@ 22
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 4127 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 4139 @LENGTH@ 10
------INS Block@@ElseBody:{  visited.add(type);} @TO@ IfStatement@@if (visited.contains(type)) {  return Collections.emptyMap();} else {  visited.add(type);} @AT@ 4160 @LENGTH@ 27
---------INS ExpressionStatement@@MethodInvocation:visited.add(type) @TO@ Block@@ElseBody:{  visited.add(type);} @AT@ 4165 @LENGTH@ 18
------------INS MethodInvocation@@visited.add(type) @TO@ ExpressionStatement@@MethodInvocation:visited.add(type) @AT@ 4165 @LENGTH@ 17
---------------INS SimpleName@@Name:visited @TO@ MethodInvocation@@visited.add(type) @AT@ 4165 @LENGTH@ 7
---------------INS SimpleName@@MethodName:add:[type] @TO@ MethodInvocation@@visited.add(type) @AT@ 4173 @LENGTH@ 9
------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:add:[type] @AT@ 4177 @LENGTH@ 4


UPD FieldDeclaration@@private, SimpleRegistry, [reg=new SimpleRegistry()] @TO@ SimpleRegistry, [reg=new SimpleRegistry()] @AT@ 1231 @LENGTH@ 50
---DEL Modifier@@private @AT@ 1231 @LENGTH@ 7


UPD ForStatement@@for (int i=0; i < 120; i++) {  state=findState(client,applicationId);  if (state == null) {    break;  }  if (state.equals(YarnApplicationState.FINISHED) || state.equals(YarnApplicationState.FAILED)) {    break;  }  Thread.sleep(1000);} @TO@ for (int i=0; i < 240; i++) {  state=findState(client,applicationId);  if (state == null) {    break;  }  if (state.equals(YarnApplicationState.FINISHED) || state.equals(YarnApplicationState.FAILED)) {    break;  }  Thread.sleep(1000);} @AT@ 3483 @LENGTH@ 256
---UPD InfixExpression@@i < 120 @TO@ i < 240 @AT@ 3499 @LENGTH@ 5
------UPD NumberLiteral@@120 @TO@ 240 @AT@ 3501 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testLineWithBlank, ConfigurationException,  @TO@ TypeDeclaration@@[public]TestPropertiesConfigurationLayout,  @AT@ 24496 @LENGTH@ 375
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testLineWithBlank, ConfigurationException,  @AT@ 24496 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testLineWithBlank, ConfigurationException,  @AT@ 24503 @LENGTH@ 4
---INS SimpleName@@MethodName:testLineWithBlank @TO@ MethodDeclaration@@public, void, MethodName:testLineWithBlank, ConfigurationException,  @AT@ 24508 @LENGTH@ 17
---INS SimpleType@@ConfigurationException @TO@ MethodDeclaration@@public, void, MethodName:testLineWithBlank, ConfigurationException,  @AT@ 24535 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:builder.addComment(TEST_COMMENT) @TO@ MethodDeclaration@@public, void, MethodName:testLineWithBlank, ConfigurationException,  @AT@ 24572 @LENGTH@ 33
------INS MethodInvocation@@builder.addComment(TEST_COMMENT) @TO@ ExpressionStatement@@MethodInvocation:builder.addComment(TEST_COMMENT) @AT@ 24572 @LENGTH@ 32
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addComment(TEST_COMMENT) @AT@ 24572 @LENGTH@ 7
---------INS SimpleName@@MethodName:addComment:[TEST_COMMENT] @TO@ MethodInvocation@@builder.addComment(TEST_COMMENT) @AT@ 24580 @LENGTH@ 24
------------INS SimpleName@@TEST_COMMENT @TO@ SimpleName@@MethodName:addComment:[TEST_COMMENT] @AT@ 24591 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:builder.addLine(" ") @TO@ MethodDeclaration@@public, void, MethodName:testLineWithBlank, ConfigurationException,  @AT@ 24614 @LENGTH@ 21
------INS MethodInvocation@@builder.addLine(" ") @TO@ ExpressionStatement@@MethodInvocation:builder.addLine(" ") @AT@ 24614 @LENGTH@ 20
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addLine(" ") @AT@ 24614 @LENGTH@ 7
---------INS SimpleName@@MethodName:addLine:[" "] @TO@ MethodInvocation@@builder.addLine(" ") @AT@ 24622 @LENGTH@ 12
------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:addLine:[" "] @AT@ 24630 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:builder.addProperty(TEST_KEY,TEST_VALUE) @TO@ MethodDeclaration@@public, void, MethodName:testLineWithBlank, ConfigurationException,  @AT@ 24644 @LENGTH@ 42
------INS MethodInvocation@@builder.addProperty(TEST_KEY,TEST_VALUE) @TO@ ExpressionStatement@@MethodInvocation:builder.addProperty(TEST_KEY,TEST_VALUE) @AT@ 24644 @LENGTH@ 41
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addProperty(TEST_KEY,TEST_VALUE) @AT@ 24644 @LENGTH@ 7
---------INS SimpleName@@MethodName:addProperty:[TEST_KEY, TEST_VALUE] @TO@ MethodInvocation@@builder.addProperty(TEST_KEY,TEST_VALUE) @AT@ 24652 @LENGTH@ 33
------------INS SimpleName@@TEST_KEY @TO@ SimpleName@@MethodName:addProperty:[TEST_KEY, TEST_VALUE] @AT@ 24664 @LENGTH@ 8
------------INS SimpleName@@TEST_VALUE @TO@ SimpleName@@MethodName:addProperty:[TEST_KEY, TEST_VALUE] @AT@ 24674 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:layout.load(config,builder.getReader()) @TO@ MethodDeclaration@@public, void, MethodName:testLineWithBlank, ConfigurationException,  @AT@ 24695 @LENGTH@ 41
------INS MethodInvocation@@layout.load(config,builder.getReader()) @TO@ ExpressionStatement@@MethodInvocation:layout.load(config,builder.getReader()) @AT@ 24695 @LENGTH@ 40
---------INS SimpleName@@Name:layout @TO@ MethodInvocation@@layout.load(config,builder.getReader()) @AT@ 24695 @LENGTH@ 6
---------INS SimpleName@@MethodName:load:[config, builder.getReader()] @TO@ MethodInvocation@@layout.load(config,builder.getReader()) @AT@ 24702 @LENGTH@ 33
------------INS SimpleName@@config @TO@ SimpleName@@MethodName:load:[config, builder.getReader()] @AT@ 24707 @LENGTH@ 6
------------INS MethodInvocation@@builder.getReader() @TO@ SimpleName@@MethodName:load:[config, builder.getReader()] @AT@ 24715 @LENGTH@ 19
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getReader() @AT@ 24715 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getReader:[] @TO@ MethodInvocation@@builder.getReader() @AT@ 24723 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertEquals("Wrong comment",TEST_COMMENT + CRNORM + " ",layout.getCanonicalComment(TEST_KEY,false)) @TO@ MethodDeclaration@@public, void, MethodName:testLineWithBlank, ConfigurationException,  @AT@ 24745 @LENGTH@ 120
------INS MethodInvocation@@assertEquals("Wrong comment",TEST_COMMENT + CRNORM + " ",layout.getCanonicalComment(TEST_KEY,false)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Wrong comment",TEST_COMMENT + CRNORM + " ",layout.getCanonicalComment(TEST_KEY,false)) @AT@ 24745 @LENGTH@ 119
---------INS SimpleName@@MethodName:assertEquals:["Wrong comment", TEST_COMMENT + CRNORM + " ", layout.getCanonicalComment(TEST_KEY,false)] @TO@ MethodInvocation@@assertEquals("Wrong comment",TEST_COMMENT + CRNORM + " ",layout.getCanonicalComment(TEST_KEY,false)) @AT@ 24745 @LENGTH@ 119
------------INS StringLiteral@@"Wrong comment" @TO@ SimpleName@@MethodName:assertEquals:["Wrong comment", TEST_COMMENT + CRNORM + " ", layout.getCanonicalComment(TEST_KEY,false)] @AT@ 24758 @LENGTH@ 15
------------INS InfixExpression@@TEST_COMMENT + CRNORM + " " @TO@ SimpleName@@MethodName:assertEquals:["Wrong comment", TEST_COMMENT + CRNORM + " ", layout.getCanonicalComment(TEST_KEY,false)] @AT@ 24775 @LENGTH@ 27
---------------INS SimpleName@@TEST_COMMENT @TO@ InfixExpression@@TEST_COMMENT + CRNORM + " " @AT@ 24775 @LENGTH@ 12
---------------INS Operator@@+ @TO@ InfixExpression@@TEST_COMMENT + CRNORM + " " @AT@ 24787 @LENGTH@ 1
---------------INS SimpleName@@CRNORM @TO@ InfixExpression@@TEST_COMMENT + CRNORM + " " @AT@ 24790 @LENGTH@ 6
---------------INS StringLiteral@@" " @TO@ InfixExpression@@TEST_COMMENT + CRNORM + " " @AT@ 24799 @LENGTH@ 3
------------INS MethodInvocation@@layout.getCanonicalComment(TEST_KEY,false) @TO@ SimpleName@@MethodName:assertEquals:["Wrong comment", TEST_COMMENT + CRNORM + " ", layout.getCanonicalComment(TEST_KEY,false)] @AT@ 24820 @LENGTH@ 43
---------------INS SimpleName@@Name:layout @TO@ MethodInvocation@@layout.getCanonicalComment(TEST_KEY,false) @AT@ 24820 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getCanonicalComment:[TEST_KEY, false] @TO@ MethodInvocation@@layout.getCanonicalComment(TEST_KEY,false) @AT@ 24827 @LENGTH@ 36
------------------INS SimpleName@@TEST_KEY @TO@ SimpleName@@MethodName:getCanonicalComment:[TEST_KEY, false] @AT@ 24847 @LENGTH@ 8
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getCanonicalComment:[TEST_KEY, false] @AT@ 24857 @LENGTH@ 5


INS MethodDeclaration@@public, Class<?>, MethodName:getType,  @TO@ TypeDeclaration@@[private, static]IdMetadata, [Iterable<SingularAttribute<? super T,?>>] @AT@ 7328 @LENGTH@ 243
---INS Modifier@@public @TO@ MethodDeclaration@@public, Class<?>, MethodName:getType,  @AT@ 7328 @LENGTH@ 6
---MOV IfStatement@@if (idType != null) {  return idType;} @TO@ MethodDeclaration@@public, Class<?>, MethodName:getType,  @AT@ 7332 @LENGTH@ 45
---INS ParameterizedType@@Class<?> @TO@ MethodDeclaration@@public, Class<?>, MethodName:getType,  @AT@ 7335 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 7335 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 7341 @LENGTH@ 1
---INS SimpleName@@MethodName:getType @TO@ MethodDeclaration@@public, Class<?>, MethodName:getType,  @AT@ 7344 @LENGTH@ 7
---INS ExpressionStatement@@Assignment:this.idType=tryExtractIdTypeWithFallbackToIdTypeLookup() @TO@ MethodDeclaration@@public, Class<?>, MethodName:getType,  @AT@ 7484 @LENGTH@ 59
------INS Assignment@@this.idType=tryExtractIdTypeWithFallbackToIdTypeLookup() @TO@ ExpressionStatement@@Assignment:this.idType=tryExtractIdTypeWithFallbackToIdTypeLookup() @AT@ 7484 @LENGTH@ 58
---------INS FieldAccess@@this.idType @TO@ Assignment@@this.idType=tryExtractIdTypeWithFallbackToIdTypeLookup() @AT@ 7484 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.idType @AT@ 7484 @LENGTH@ 4
------------INS SimpleName@@idType @TO@ FieldAccess@@this.idType @AT@ 7489 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@this.idType=tryExtractIdTypeWithFallbackToIdTypeLookup() @AT@ 7495 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:tryExtractIdTypeWithFallbackToIdTypeLookup:[] @TO@ Assignment@@this.idType=tryExtractIdTypeWithFallbackToIdTypeLookup() @AT@ 7498 @LENGTH@ 44
---INS ReturnStatement@@FieldAccess:this.idType @TO@ MethodDeclaration@@public, Class<?>, MethodName:getType,  @AT@ 7548 @LENGTH@ 19
------INS FieldAccess@@this.idType @TO@ ReturnStatement@@FieldAccess:this.idType @AT@ 7555 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ FieldAccess@@this.idType @AT@ 7555 @LENGTH@ 4
---------INS SimpleName@@idType @TO@ FieldAccess@@this.idType @AT@ 7560 @LENGTH@ 6


UPD TryStatement@@try {  Jwt jwt=JwtHelper.decodeAndVerify(token,verifier);  String content=jwt.getClaims();  @SuppressWarnings("unchecked") Map<String,Object> map=objectMapper.readValue(content,Map.class);  return map;} catch (Exception e) {  throw new InvalidTokenException("Cannot convert access token to JSON",e);} @TO@ try {  Jwt jwt=JwtHelper.decodeAndVerify(token,verifier);  String content=jwt.getClaims();  @SuppressWarnings("unchecked") Map<String,Object> map=objectMapper.readValue(content,Map.class);  if (map.containsKey(EXP) && map.get(EXP) instanceof Integer) {    Integer intValue=(Integer)map.get(EXP);    map.put(EXP,new Long(intValue));  }  return map;} catch (Exception e) {  throw new InvalidTokenException("Cannot convert access token to JSON",e);} @AT@ 7889 @LENGTH@ 331
---INS IfStatement@@if (map.containsKey(EXP) && map.get(EXP) instanceof Integer) {  Integer intValue=(Integer)map.get(EXP);  map.put(EXP,new Long(intValue));} @TO@ TryStatement@@try {  Jwt jwt=JwtHelper.decodeAndVerify(token,verifier);  String content=jwt.getClaims();  @SuppressWarnings("unchecked") Map<String,Object> map=objectMapper.readValue(content,Map.class);  return map;} catch (Exception e) {  throw new InvalidTokenException("Cannot convert access token to JSON",e);} @AT@ 8099 @LENGTH@ 152
------INS InfixExpression@@map.containsKey(EXP) && map.get(EXP) instanceof Integer @TO@ IfStatement@@if (map.containsKey(EXP) && map.get(EXP) instanceof Integer) {  Integer intValue=(Integer)map.get(EXP);  map.put(EXP,new Long(intValue));} @AT@ 8103 @LENGTH@ 55
---------INS MethodInvocation@@map.containsKey(EXP) @TO@ InfixExpression@@map.containsKey(EXP) && map.get(EXP) instanceof Integer @AT@ 8103 @LENGTH@ 20
------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.containsKey(EXP) @AT@ 8103 @LENGTH@ 3
------------INS SimpleName@@MethodName:containsKey:[EXP] @TO@ MethodInvocation@@map.containsKey(EXP) @AT@ 8107 @LENGTH@ 16
---------------INS SimpleName@@EXP @TO@ SimpleName@@MethodName:containsKey:[EXP] @AT@ 8119 @LENGTH@ 3
---------INS Operator@@&& @TO@ InfixExpression@@map.containsKey(EXP) && map.get(EXP) instanceof Integer @AT@ 8123 @LENGTH@ 2
---------INS InstanceofExpression@@map.get(EXP) instanceof Integer @TO@ InfixExpression@@map.containsKey(EXP) && map.get(EXP) instanceof Integer @AT@ 8127 @LENGTH@ 31
------------INS MethodInvocation@@map.get(EXP) @TO@ InstanceofExpression@@map.get(EXP) instanceof Integer @AT@ 8127 @LENGTH@ 12
---------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.get(EXP) @AT@ 8127 @LENGTH@ 3
---------------INS SimpleName@@MethodName:get:[EXP] @TO@ MethodInvocation@@map.get(EXP) @AT@ 8131 @LENGTH@ 8
------------------INS SimpleName@@EXP @TO@ SimpleName@@MethodName:get:[EXP] @AT@ 8135 @LENGTH@ 3
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@map.get(EXP) instanceof Integer @AT@ 8140 @LENGTH@ 10
------------INS SimpleType@@Integer @TO@ InstanceofExpression@@map.get(EXP) instanceof Integer @AT@ 8151 @LENGTH@ 7
------INS Block@@ThenBody:{  Integer intValue=(Integer)map.get(EXP);  map.put(EXP,new Long(intValue));} @TO@ IfStatement@@if (map.containsKey(EXP) && map.get(EXP) instanceof Integer) {  Integer intValue=(Integer)map.get(EXP);  map.put(EXP,new Long(intValue));} @AT@ 8160 @LENGTH@ 91
---------INS VariableDeclarationStatement@@Integer intValue=(Integer)map.get(EXP); @TO@ Block@@ThenBody:{  Integer intValue=(Integer)map.get(EXP);  map.put(EXP,new Long(intValue));} @AT@ 8166 @LENGTH@ 42
------------INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@Integer intValue=(Integer)map.get(EXP); @AT@ 8166 @LENGTH@ 7
------------INS VariableDeclarationFragment@@intValue=(Integer)map.get(EXP) @TO@ VariableDeclarationStatement@@Integer intValue=(Integer)map.get(EXP); @AT@ 8174 @LENGTH@ 33
---------------INS SimpleName@@intValue @TO@ VariableDeclarationFragment@@intValue=(Integer)map.get(EXP) @AT@ 8174 @LENGTH@ 8
---------------INS CastExpression@@(Integer)map.get(EXP) @TO@ VariableDeclarationFragment@@intValue=(Integer)map.get(EXP) @AT@ 8185 @LENGTH@ 22
------------------INS SimpleType@@Integer @TO@ CastExpression@@(Integer)map.get(EXP) @AT@ 8186 @LENGTH@ 7
------------------INS MethodInvocation@@map.get(EXP) @TO@ CastExpression@@(Integer)map.get(EXP) @AT@ 8195 @LENGTH@ 12
---------------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.get(EXP) @AT@ 8195 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:get:[EXP] @TO@ MethodInvocation@@map.get(EXP) @AT@ 8199 @LENGTH@ 8
------------------------INS SimpleName@@EXP @TO@ SimpleName@@MethodName:get:[EXP] @AT@ 8203 @LENGTH@ 3
---------INS ExpressionStatement@@MethodInvocation:map.put(EXP,new Long(intValue)) @TO@ Block@@ThenBody:{  Integer intValue=(Integer)map.get(EXP);  map.put(EXP,new Long(intValue));} @AT@ 8213 @LENGTH@ 33
------------INS MethodInvocation@@map.put(EXP,new Long(intValue)) @TO@ ExpressionStatement@@MethodInvocation:map.put(EXP,new Long(intValue)) @AT@ 8213 @LENGTH@ 32
---------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put(EXP,new Long(intValue)) @AT@ 8213 @LENGTH@ 3
---------------INS SimpleName@@MethodName:put:[EXP, new Long(intValue)] @TO@ MethodInvocation@@map.put(EXP,new Long(intValue)) @AT@ 8217 @LENGTH@ 28
------------------INS SimpleName@@EXP @TO@ SimpleName@@MethodName:put:[EXP, new Long(intValue)] @AT@ 8221 @LENGTH@ 3
------------------INS ClassInstanceCreation@@Long[intValue] @TO@ SimpleName@@MethodName:put:[EXP, new Long(intValue)] @AT@ 8226 @LENGTH@ 18
---------------------INS New@@new @TO@ ClassInstanceCreation@@Long[intValue] @AT@ 8226 @LENGTH@ 3
---------------------INS SimpleType@@Long @TO@ ClassInstanceCreation@@Long[intValue] @AT@ 8230 @LENGTH@ 4
---------------------INS SimpleName@@intValue @TO@ ClassInstanceCreation@@Long[intValue] @AT@ 8235 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:from("jpa:org.apache.camel.example.etl.CustomerEntity?consumeDelete=false&delay=3000&consumeLockEntity=false").setHeader(Exchange.FILE_NAME,el("${in.body.userName}.xml")).to("file:target/customers") @TO@ MethodInvocation:from("jpa:org.apache.camel.example.etl.CustomerEntity?consumer.initialDelay=3000&delay=3000&consumeDelete=false&consumeLockEntity=false").setHeader(Exchange.FILE_NAME,el("${in.body.userName}.xml")).to("file:target/customers") @AT@ 1364 @LENGTH@ 226
---UPD MethodInvocation@@from("jpa:org.apache.camel.example.etl.CustomerEntity?consumeDelete=false&delay=3000&consumeLockEntity=false").setHeader(Exchange.FILE_NAME,el("${in.body.userName}.xml")).to("file:target/customers") @TO@ from("jpa:org.apache.camel.example.etl.CustomerEntity?consumer.initialDelay=3000&delay=3000&consumeDelete=false&consumeLockEntity=false").setHeader(Exchange.FILE_NAME,el("${in.body.userName}.xml")).to("file:target/customers") @AT@ 1364 @LENGTH@ 225
------UPD MethodInvocation@@MethodName:from:["jpa:org.apache.camel.example.etl.CustomerEntity?consumeDelete=false&delay=3000&consumeLockEntity=false"] @TO@ MethodName:from:["jpa:org.apache.camel.example.etl.CustomerEntity?consumer.initialDelay=3000&delay=3000&consumeDelete=false&consumeLockEntity=false"] @AT@ 1364 @LENGTH@ 110
---------UPD StringLiteral@@"jpa:org.apache.camel.example.etl.CustomerEntity?consumeDelete=false&delay=3000&consumeLockEntity=false" @TO@ "jpa:org.apache.camel.example.etl.CustomerEntity?consumer.initialDelay=3000&delay=3000&consumeDelete=false&consumeLockEntity=false" @AT@ 1369 @LENGTH@ 104


DEL MethodDeclaration@@private, void, MethodName:setDependency, final OperationContext context, final ServiceBuilder<?> builder, final Injector<UnifiedHandlerChainMetaData> injector, final ServiceName serviceName, final PathAddress address, final String handlerChainType,  @AT@ 5126 @LENGTH@ 470
---DEL Modifier@@private @AT@ 5126 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 5134 @LENGTH@ 4
---DEL SimpleName@@MethodName:setDependency @AT@ 5139 @LENGTH@ 13
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 5153 @LENGTH@ 30
------DEL Modifier@@final @AT@ 5153 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 5159 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 5176 @LENGTH@ 7
---DEL SingleVariableDeclaration@@final ServiceBuilder<?> builder @AT@ 5185 @LENGTH@ 31
------DEL Modifier@@final @AT@ 5185 @LENGTH@ 5
------DEL ParameterizedType@@ServiceBuilder<?> @AT@ 5191 @LENGTH@ 17
---------DEL SimpleType@@ServiceBuilder @AT@ 5191 @LENGTH@ 14
---------DEL WildcardType@@? @AT@ 5206 @LENGTH@ 1
------DEL SimpleName@@builder @AT@ 5209 @LENGTH@ 7
---DEL SingleVariableDeclaration@@final Injector<UnifiedHandlerChainMetaData> injector @AT@ 5218 @LENGTH@ 52
------DEL Modifier@@final @AT@ 5218 @LENGTH@ 5
------DEL ParameterizedType@@Injector<UnifiedHandlerChainMetaData> @AT@ 5224 @LENGTH@ 37
---------DEL SimpleType@@Injector @AT@ 5224 @LENGTH@ 8
---------DEL SimpleType@@UnifiedHandlerChainMetaData @AT@ 5233 @LENGTH@ 27
------DEL SimpleName@@injector @AT@ 5262 @LENGTH@ 8
---DEL SingleVariableDeclaration@@final ServiceName serviceName @AT@ 5284 @LENGTH@ 29
------DEL Modifier@@final @AT@ 5284 @LENGTH@ 5
------DEL SimpleType@@ServiceName @AT@ 5290 @LENGTH@ 11
------DEL SimpleName@@serviceName @AT@ 5302 @LENGTH@ 11
---DEL SingleVariableDeclaration@@final PathAddress address @AT@ 5315 @LENGTH@ 25
------DEL Modifier@@final @AT@ 5315 @LENGTH@ 5
------DEL SimpleType@@PathAddress @AT@ 5321 @LENGTH@ 11
------DEL SimpleName@@address @AT@ 5333 @LENGTH@ 7
---DEL SingleVariableDeclaration@@final String handlerChainType @AT@ 5342 @LENGTH@ 29
------DEL Modifier@@final @AT@ 5342 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5348 @LENGTH@ 6
------DEL SimpleName@@handlerChainType @AT@ 5355 @LENGTH@ 16
---DEL EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,handlerChainType)) {  builder.addDependency(sn,UnifiedHandlerChainMetaData.class,injector);} @AT@ 5383 @LENGTH@ 207
------DEL SingleVariableDeclaration@@ServiceName sn @AT@ 5388 @LENGTH@ 14
---------DEL SimpleType@@ServiceName @AT@ 5388 @LENGTH@ 11
---------DEL SimpleName@@sn @AT@ 5400 @LENGTH@ 2
------DEL MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,handlerChainType) @AT@ 5405 @LENGTH@ 88
---------DEL SimpleName@@Name:PackageUtils @AT@ 5405 @LENGTH@ 12
---------DEL SimpleName@@MethodName:getServiceNameDependencies:[context, serviceName, address, handlerChainType] @AT@ 5418 @LENGTH@ 75
------------DEL SimpleName@@context @AT@ 5445 @LENGTH@ 7
------------DEL SimpleName@@serviceName @AT@ 5454 @LENGTH@ 11
------------DEL SimpleName@@address @AT@ 5467 @LENGTH@ 7
------------DEL SimpleName@@handlerChainType @AT@ 5476 @LENGTH@ 16
------DEL ExpressionStatement@@MethodInvocation:builder.addDependency(sn,UnifiedHandlerChainMetaData.class,injector) @AT@ 5509 @LENGTH@ 71
---------DEL MethodInvocation@@builder.addDependency(sn,UnifiedHandlerChainMetaData.class,injector) @AT@ 5509 @LENGTH@ 70
------------DEL SimpleName@@Name:builder @AT@ 5509 @LENGTH@ 7
------------DEL SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, injector] @AT@ 5517 @LENGTH@ 62
---------------DEL SimpleName@@sn @AT@ 5531 @LENGTH@ 2
---------------DEL TypeLiteral@@UnifiedHandlerChainMetaData.class @AT@ 5535 @LENGTH@ 33
---------------DEL SimpleName@@injector @AT@ 5570 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @TO@ TypeDeclaration@@[public]OAuth2AuthenticationManagerTests,  @AT@ 2317 @LENGTH@ 846
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2317 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2324 @LENGTH@ 4
---INS SimpleName@@MethodName:testDetailsEnhanced @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2329 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2358 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:authentication.setDetails("DETAILS") @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2372 @LENGTH@ 37
------INS MethodInvocation@@authentication.setDetails("DETAILS") @TO@ ExpressionStatement@@MethodInvocation:authentication.setDetails("DETAILS") @AT@ 2372 @LENGTH@ 36
---------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.setDetails("DETAILS") @AT@ 2372 @LENGTH@ 14
---------INS SimpleName@@MethodName:setDetails:["DETAILS"] @TO@ MethodInvocation@@authentication.setDetails("DETAILS") @AT@ 2387 @LENGTH@ 21
------------INS StringLiteral@@"DETAILS" @TO@ SimpleName@@MethodName:setDetails:["DETAILS"] @AT@ 2398 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Mockito.when(tokenServices.loadAuthentication("FOO")).thenReturn(authentication) @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2412 @LENGTH@ 81
------INS MethodInvocation@@Mockito.when(tokenServices.loadAuthentication("FOO")).thenReturn(authentication) @TO@ ExpressionStatement@@MethodInvocation:Mockito.when(tokenServices.loadAuthentication("FOO")).thenReturn(authentication) @AT@ 2412 @LENGTH@ 80
---------INS MethodInvocation@@MethodName:when:[tokenServices.loadAuthentication("FOO")] @TO@ MethodInvocation@@Mockito.when(tokenServices.loadAuthentication("FOO")).thenReturn(authentication) @AT@ 2412 @LENGTH@ 53
------------INS MethodInvocation@@tokenServices.loadAuthentication("FOO") @TO@ MethodInvocation@@MethodName:when:[tokenServices.loadAuthentication("FOO")] @AT@ 2425 @LENGTH@ 39
---------------INS SimpleName@@Name:tokenServices @TO@ MethodInvocation@@tokenServices.loadAuthentication("FOO") @AT@ 2425 @LENGTH@ 13
---------------INS SimpleName@@MethodName:loadAuthentication:["FOO"] @TO@ MethodInvocation@@tokenServices.loadAuthentication("FOO") @AT@ 2439 @LENGTH@ 25
------------------INS StringLiteral@@"FOO" @TO@ SimpleName@@MethodName:loadAuthentication:["FOO"] @AT@ 2458 @LENGTH@ 5
---------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.when(tokenServices.loadAuthentication("FOO")).thenReturn(authentication) @AT@ 2412 @LENGTH@ 7
---------INS SimpleName@@MethodName:thenReturn:[authentication] @TO@ MethodInvocation@@Mockito.when(tokenServices.loadAuthentication("FOO")).thenReturn(authentication) @AT@ 2466 @LENGTH@ 26
------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:thenReturn:[authentication] @AT@ 2477 @LENGTH@ 14
---INS VariableDeclarationStatement@@PreAuthenticatedAuthenticationToken request=new PreAuthenticatedAuthenticationToken("FOO",""); @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2496 @LENGTH@ 97
------INS SimpleType@@PreAuthenticatedAuthenticationToken @TO@ VariableDeclarationStatement@@PreAuthenticatedAuthenticationToken request=new PreAuthenticatedAuthenticationToken("FOO",""); @AT@ 2496 @LENGTH@ 35
------INS VariableDeclarationFragment@@request=new PreAuthenticatedAuthenticationToken("FOO","") @TO@ VariableDeclarationStatement@@PreAuthenticatedAuthenticationToken request=new PreAuthenticatedAuthenticationToken("FOO",""); @AT@ 2532 @LENGTH@ 60
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new PreAuthenticatedAuthenticationToken("FOO","") @AT@ 2532 @LENGTH@ 7
---------INS ClassInstanceCreation@@PreAuthenticatedAuthenticationToken["FOO", ""] @TO@ VariableDeclarationFragment@@request=new PreAuthenticatedAuthenticationToken("FOO","") @AT@ 2542 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@PreAuthenticatedAuthenticationToken["FOO", ""] @AT@ 2542 @LENGTH@ 3
------------INS SimpleType@@PreAuthenticatedAuthenticationToken @TO@ ClassInstanceCreation@@PreAuthenticatedAuthenticationToken["FOO", ""] @AT@ 2546 @LENGTH@ 35
------------INS StringLiteral@@"FOO" @TO@ ClassInstanceCreation@@PreAuthenticatedAuthenticationToken["FOO", ""] @AT@ 2582 @LENGTH@ 5
------------INS StringLiteral@@"" @TO@ ClassInstanceCreation@@PreAuthenticatedAuthenticationToken["FOO", ""] @AT@ 2589 @LENGTH@ 2
---INS VariableDeclarationStatement@@MockHttpServletRequest servletRequest=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2596 @LENGTH@ 69
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest servletRequest=new MockHttpServletRequest(); @AT@ 2596 @LENGTH@ 22
------INS VariableDeclarationFragment@@servletRequest=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest servletRequest=new MockHttpServletRequest(); @AT@ 2619 @LENGTH@ 45
---------INS SimpleName@@servletRequest @TO@ VariableDeclarationFragment@@servletRequest=new MockHttpServletRequest() @AT@ 2619 @LENGTH@ 14
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@servletRequest=new MockHttpServletRequest() @AT@ 2636 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2636 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2640 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:servletRequest.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE,"BAR") @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2668 @LENGTH@ 83
------INS MethodInvocation@@servletRequest.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE,"BAR") @TO@ ExpressionStatement@@MethodInvocation:servletRequest.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE,"BAR") @AT@ 2668 @LENGTH@ 82
---------INS SimpleName@@Name:servletRequest @TO@ MethodInvocation@@servletRequest.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE,"BAR") @AT@ 2668 @LENGTH@ 14
---------INS SimpleName@@MethodName:setAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE, "BAR"] @TO@ MethodInvocation@@servletRequest.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE,"BAR") @AT@ 2683 @LENGTH@ 67
------------INS QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE @TO@ SimpleName@@MethodName:setAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE, "BAR"] @AT@ 2696 @LENGTH@ 46
---------------INS SimpleName@@OAuth2AuthenticationDetails @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE @AT@ 2696 @LENGTH@ 27
---------------INS SimpleName@@ACCESS_TOKEN_VALUE @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE @AT@ 2724 @LENGTH@ 18
------------INS StringLiteral@@"BAR" @TO@ SimpleName@@MethodName:setAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE, "BAR"] @AT@ 2744 @LENGTH@ 5
---INS VariableDeclarationStatement@@OAuth2AuthenticationDetails details=new OAuth2AuthenticationDetails(servletRequest); @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2754 @LENGTH@ 86
------INS SimpleType@@OAuth2AuthenticationDetails @TO@ VariableDeclarationStatement@@OAuth2AuthenticationDetails details=new OAuth2AuthenticationDetails(servletRequest); @AT@ 2754 @LENGTH@ 27
------INS VariableDeclarationFragment@@details=new OAuth2AuthenticationDetails(servletRequest) @TO@ VariableDeclarationStatement@@OAuth2AuthenticationDetails details=new OAuth2AuthenticationDetails(servletRequest); @AT@ 2782 @LENGTH@ 57
---------INS SimpleName@@details @TO@ VariableDeclarationFragment@@details=new OAuth2AuthenticationDetails(servletRequest) @AT@ 2782 @LENGTH@ 7
---------INS ClassInstanceCreation@@OAuth2AuthenticationDetails[servletRequest] @TO@ VariableDeclarationFragment@@details=new OAuth2AuthenticationDetails(servletRequest) @AT@ 2792 @LENGTH@ 47
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthenticationDetails[servletRequest] @AT@ 2792 @LENGTH@ 3
------------INS SimpleType@@OAuth2AuthenticationDetails @TO@ ClassInstanceCreation@@OAuth2AuthenticationDetails[servletRequest] @AT@ 2796 @LENGTH@ 27
------------INS SimpleName@@servletRequest @TO@ ClassInstanceCreation@@OAuth2AuthenticationDetails[servletRequest] @AT@ 2824 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:request.setDetails(details) @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2843 @LENGTH@ 28
------INS MethodInvocation@@request.setDetails(details) @TO@ ExpressionStatement@@MethodInvocation:request.setDetails(details) @AT@ 2843 @LENGTH@ 27
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setDetails(details) @AT@ 2843 @LENGTH@ 7
---------INS SimpleName@@MethodName:setDetails:[details] @TO@ MethodInvocation@@request.setDetails(details) @AT@ 2851 @LENGTH@ 19
------------INS SimpleName@@details @TO@ SimpleName@@MethodName:setDetails:[details] @AT@ 2862 @LENGTH@ 7
---INS VariableDeclarationStatement@@Authentication result=manager.authenticate(request); @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2874 @LENGTH@ 54
------INS SimpleType@@Authentication @TO@ VariableDeclarationStatement@@Authentication result=manager.authenticate(request); @AT@ 2874 @LENGTH@ 14
------INS VariableDeclarationFragment@@result=manager.authenticate(request) @TO@ VariableDeclarationStatement@@Authentication result=manager.authenticate(request); @AT@ 2889 @LENGTH@ 38
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=manager.authenticate(request) @AT@ 2889 @LENGTH@ 6
---------INS MethodInvocation@@manager.authenticate(request) @TO@ VariableDeclarationFragment@@result=manager.authenticate(request) @AT@ 2898 @LENGTH@ 29
------------INS SimpleName@@Name:manager @TO@ MethodInvocation@@manager.authenticate(request) @AT@ 2898 @LENGTH@ 7
------------INS SimpleName@@MethodName:authenticate:[request] @TO@ MethodInvocation@@manager.authenticate(request) @AT@ 2906 @LENGTH@ 21
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:authenticate:[request] @AT@ 2919 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertEquals(authentication,result) @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2931 @LENGTH@ 37
------INS MethodInvocation@@assertEquals(authentication,result) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(authentication,result) @AT@ 2931 @LENGTH@ 36
---------INS SimpleName@@MethodName:assertEquals:[authentication, result] @TO@ MethodInvocation@@assertEquals(authentication,result) @AT@ 2931 @LENGTH@ 36
------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:assertEquals:[authentication, result] @AT@ 2944 @LENGTH@ 14
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertEquals:[authentication, result] @AT@ 2960 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("BAR",((OAuth2AuthenticationDetails)result.getDetails()).getTokenValue()) @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 2971 @LENGTH@ 89
------INS MethodInvocation@@assertEquals("BAR",((OAuth2AuthenticationDetails)result.getDetails()).getTokenValue()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("BAR",((OAuth2AuthenticationDetails)result.getDetails()).getTokenValue()) @AT@ 2971 @LENGTH@ 88
---------INS SimpleName@@MethodName:assertEquals:["BAR", ((OAuth2AuthenticationDetails)result.getDetails()).getTokenValue()] @TO@ MethodInvocation@@assertEquals("BAR",((OAuth2AuthenticationDetails)result.getDetails()).getTokenValue()) @AT@ 2971 @LENGTH@ 88
------------INS StringLiteral@@"BAR" @TO@ SimpleName@@MethodName:assertEquals:["BAR", ((OAuth2AuthenticationDetails)result.getDetails()).getTokenValue()] @AT@ 2984 @LENGTH@ 5
------------INS MethodInvocation@@((OAuth2AuthenticationDetails)result.getDetails()).getTokenValue() @TO@ SimpleName@@MethodName:assertEquals:["BAR", ((OAuth2AuthenticationDetails)result.getDetails()).getTokenValue()] @AT@ 2991 @LENGTH@ 67
---------------INS ParenthesizedExpression@@((OAuth2AuthenticationDetails)result.getDetails()) @TO@ MethodInvocation@@((OAuth2AuthenticationDetails)result.getDetails()).getTokenValue() @AT@ 2991 @LENGTH@ 51
------------------INS CastExpression@@(OAuth2AuthenticationDetails)result.getDetails() @TO@ ParenthesizedExpression@@((OAuth2AuthenticationDetails)result.getDetails()) @AT@ 2992 @LENGTH@ 49
---------------------INS SimpleType@@OAuth2AuthenticationDetails @TO@ CastExpression@@(OAuth2AuthenticationDetails)result.getDetails() @AT@ 2993 @LENGTH@ 27
---------------------INS MethodInvocation@@result.getDetails() @TO@ CastExpression@@(OAuth2AuthenticationDetails)result.getDetails() @AT@ 3022 @LENGTH@ 19
------------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getDetails() @AT@ 3022 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getDetails:[] @TO@ MethodInvocation@@result.getDetails() @AT@ 3029 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getTokenValue:[] @TO@ MethodInvocation@@((OAuth2AuthenticationDetails)result.getDetails()).getTokenValue() @AT@ 3043 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertEquals("DETAILS",((OAuth2AuthenticationDetails)result.getDetails()).getDecodedDetails()) @TO@ MethodDeclaration@@public, void, MethodName:testDetailsEnhanced, Exception,  @AT@ 3063 @LENGTH@ 97
------INS MethodInvocation@@assertEquals("DETAILS",((OAuth2AuthenticationDetails)result.getDetails()).getDecodedDetails()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("DETAILS",((OAuth2AuthenticationDetails)result.getDetails()).getDecodedDetails()) @AT@ 3063 @LENGTH@ 96
---------INS SimpleName@@MethodName:assertEquals:["DETAILS", ((OAuth2AuthenticationDetails)result.getDetails()).getDecodedDetails()] @TO@ MethodInvocation@@assertEquals("DETAILS",((OAuth2AuthenticationDetails)result.getDetails()).getDecodedDetails()) @AT@ 3063 @LENGTH@ 96
------------INS StringLiteral@@"DETAILS" @TO@ SimpleName@@MethodName:assertEquals:["DETAILS", ((OAuth2AuthenticationDetails)result.getDetails()).getDecodedDetails()] @AT@ 3076 @LENGTH@ 9
------------INS MethodInvocation@@((OAuth2AuthenticationDetails)result.getDetails()).getDecodedDetails() @TO@ SimpleName@@MethodName:assertEquals:["DETAILS", ((OAuth2AuthenticationDetails)result.getDetails()).getDecodedDetails()] @AT@ 3087 @LENGTH@ 71
---------------INS ParenthesizedExpression@@((OAuth2AuthenticationDetails)result.getDetails()) @TO@ MethodInvocation@@((OAuth2AuthenticationDetails)result.getDetails()).getDecodedDetails() @AT@ 3087 @LENGTH@ 51
------------------INS CastExpression@@(OAuth2AuthenticationDetails)result.getDetails() @TO@ ParenthesizedExpression@@((OAuth2AuthenticationDetails)result.getDetails()) @AT@ 3088 @LENGTH@ 49
---------------------INS SimpleType@@OAuth2AuthenticationDetails @TO@ CastExpression@@(OAuth2AuthenticationDetails)result.getDetails() @AT@ 3089 @LENGTH@ 27
---------------------INS MethodInvocation@@result.getDetails() @TO@ CastExpression@@(OAuth2AuthenticationDetails)result.getDetails() @AT@ 3118 @LENGTH@ 19
------------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getDetails() @AT@ 3118 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getDetails:[] @TO@ MethodInvocation@@result.getDetails() @AT@ 3125 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getDecodedDetails:[] @TO@ MethodInvocation@@((OAuth2AuthenticationDetails)result.getDetails()).getDecodedDetails() @AT@ 3139 @LENGTH@ 19


UPD IfStatement@@if (forcedUndeployScan) {  for (  Map.Entry<String,Boolean> toUndeploy : scanContext.registeredDeployments.entrySet()) {    scannerTasks.add(new UndeployTask(toUndeploy.getKey(),deploymentDir,scanContext.scanStartTime,true));  }} @TO@ if (forcedUndeployScan) {  Set<String> scannedDeployments=new HashSet<String>(scanContext.registeredDeployments.keySet());  scannedDeployments.removeAll(scanContext.persistentDeployments);  for (  String toUndeploy : scannedDeployments) {    scannerTasks.add(new UndeployTask(toUndeploy,deploymentDir,scanContext.scanStartTime,true));  }} @AT@ 18565 @LENGTH@ 307
---UPD Block@@ThenBody:{  for (  Map.Entry<String,Boolean> toUndeploy : scanContext.registeredDeployments.entrySet()) {    scannerTasks.add(new UndeployTask(toUndeploy.getKey(),deploymentDir,scanContext.scanStartTime,true));  }} @TO@ ThenBody:{  Set<String> scannedDeployments=new HashSet<String>(scanContext.registeredDeployments.keySet());  scannedDeployments.removeAll(scanContext.persistentDeployments);  for (  String toUndeploy : scannedDeployments) {    scannerTasks.add(new UndeployTask(toUndeploy,deploymentDir,scanContext.scanStartTime,true));  }} @AT@ 18589 @LENGTH@ 283
------DEL EnhancedForStatement@@for (Map.Entry<String,Boolean> toUndeploy : scanContext.registeredDeployments.entrySet()) {  scannerTasks.add(new UndeployTask(toUndeploy.getKey(),deploymentDir,scanContext.scanStartTime,true));} @AT@ 18611 @LENGTH@ 243
---------DEL SingleVariableDeclaration@@Map.Entry<String,Boolean> toUndeploy @AT@ 18616 @LENGTH@ 37
------------DEL ParameterizedType@@Map.Entry<String,Boolean> @AT@ 18616 @LENGTH@ 26
---------------DEL SimpleType@@Boolean @AT@ 18634 @LENGTH@ 7
------------DEL SimpleName@@toUndeploy @AT@ 18643 @LENGTH@ 10
---------DEL MethodInvocation@@scanContext.registeredDeployments.entrySet() @AT@ 18656 @LENGTH@ 44
------INS VariableDeclarationStatement@@Set<String> scannedDeployments=new HashSet<String>(scanContext.registeredDeployments.keySet()); @TO@ Block@@ThenBody:{  for (  Map.Entry<String,Boolean> toUndeploy : scanContext.registeredDeployments.entrySet()) {    scannerTasks.add(new UndeployTask(toUndeploy.getKey(),deploymentDir,scanContext.scanStartTime,true));  }} @AT@ 18611 @LENGTH@ 97
---------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> scannedDeployments=new HashSet<String>(scanContext.registeredDeployments.keySet()); @AT@ 18611 @LENGTH@ 11
------------MOV SimpleType@@Map.Entry @TO@ ParameterizedType@@Set<String> @AT@ 18616 @LENGTH@ 9
------------MOV SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 18626 @LENGTH@ 6
---------INS VariableDeclarationFragment@@scannedDeployments=new HashSet<String>(scanContext.registeredDeployments.keySet()) @TO@ VariableDeclarationStatement@@Set<String> scannedDeployments=new HashSet<String>(scanContext.registeredDeployments.keySet()); @AT@ 18623 @LENGTH@ 84
------------INS SimpleName@@scannedDeployments @TO@ VariableDeclarationFragment@@scannedDeployments=new HashSet<String>(scanContext.registeredDeployments.keySet()) @AT@ 18623 @LENGTH@ 18
------------INS ClassInstanceCreation@@HashSet<String>[scanContext.registeredDeployments.keySet()] @TO@ VariableDeclarationFragment@@scannedDeployments=new HashSet<String>(scanContext.registeredDeployments.keySet()) @AT@ 18644 @LENGTH@ 63
---------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<String>[scanContext.registeredDeployments.keySet()] @AT@ 18644 @LENGTH@ 3
---------------INS ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@HashSet<String>[scanContext.registeredDeployments.keySet()] @AT@ 18648 @LENGTH@ 15
------------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 18648 @LENGTH@ 7
------------------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 18656 @LENGTH@ 6
---------------INS MethodInvocation@@scanContext.registeredDeployments.keySet() @TO@ ClassInstanceCreation@@HashSet<String>[scanContext.registeredDeployments.keySet()] @AT@ 18664 @LENGTH@ 42
------------------MOV QualifiedName@@Name:scanContext.registeredDeployments @TO@ MethodInvocation@@scanContext.registeredDeployments.keySet() @AT@ 18656 @LENGTH@ 33
------------------MOV SimpleName@@MethodName:entrySet:[] @TO@ MethodInvocation@@scanContext.registeredDeployments.keySet() @AT@ 18690 @LENGTH@ 10
------INS ExpressionStatement@@MethodInvocation:scannedDeployments.removeAll(scanContext.persistentDeployments) @TO@ Block@@ThenBody:{  for (  Map.Entry<String,Boolean> toUndeploy : scanContext.registeredDeployments.entrySet()) {    scannerTasks.add(new UndeployTask(toUndeploy.getKey(),deploymentDir,scanContext.scanStartTime,true));  }} @AT@ 18729 @LENGTH@ 64
---------INS MethodInvocation@@scannedDeployments.removeAll(scanContext.persistentDeployments) @TO@ ExpressionStatement@@MethodInvocation:scannedDeployments.removeAll(scanContext.persistentDeployments) @AT@ 18729 @LENGTH@ 63
------------INS SimpleName@@Name:scannedDeployments @TO@ MethodInvocation@@scannedDeployments.removeAll(scanContext.persistentDeployments) @AT@ 18729 @LENGTH@ 18
------------INS SimpleName@@MethodName:removeAll:[scanContext.persistentDeployments] @TO@ MethodInvocation@@scannedDeployments.removeAll(scanContext.persistentDeployments) @AT@ 18748 @LENGTH@ 44
---------------INS QualifiedName@@scanContext.persistentDeployments @TO@ SimpleName@@MethodName:removeAll:[scanContext.persistentDeployments] @AT@ 18758 @LENGTH@ 33
------------------INS SimpleName@@scanContext @TO@ QualifiedName@@scanContext.persistentDeployments @AT@ 18758 @LENGTH@ 11
------------------INS SimpleName@@persistentDeployments @TO@ QualifiedName@@scanContext.persistentDeployments @AT@ 18770 @LENGTH@ 21
------INS EnhancedForStatement@@for (String toUndeploy : scannedDeployments) {  scannerTasks.add(new UndeployTask(toUndeploy,deploymentDir,scanContext.scanStartTime,true));} @TO@ Block@@ThenBody:{  for (  Map.Entry<String,Boolean> toUndeploy : scanContext.registeredDeployments.entrySet()) {    scannerTasks.add(new UndeployTask(toUndeploy.getKey(),deploymentDir,scanContext.scanStartTime,true));  }} @AT@ 18814 @LENGTH@ 188
---------MOV ExpressionStatement@@MethodInvocation:scannerTasks.add(new UndeployTask(toUndeploy.getKey(),deploymentDir,scanContext.scanStartTime,true)) @TO@ EnhancedForStatement@@for (String toUndeploy : scannedDeployments) {  scannerTasks.add(new UndeployTask(toUndeploy,deploymentDir,scanContext.scanStartTime,true));} @AT@ 18728 @LENGTH@ 104
------------UPD MethodInvocation@@scannerTasks.add(new UndeployTask(toUndeploy.getKey(),deploymentDir,scanContext.scanStartTime,true)) @TO@ scannerTasks.add(new UndeployTask(toUndeploy,deploymentDir,scanContext.scanStartTime,true)) @AT@ 18728 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:add:[new UndeployTask(toUndeploy.getKey(),deploymentDir,scanContext.scanStartTime,true)] @TO@ MethodName:add:[new UndeployTask(toUndeploy,deploymentDir,scanContext.scanStartTime,true)] @AT@ 18741 @LENGTH@ 90
------------------UPD ClassInstanceCreation@@UndeployTask[toUndeploy.getKey(), deploymentDir, scanContext.scanStartTime, true] @TO@ UndeployTask[toUndeploy, deploymentDir, scanContext.scanStartTime, true] @AT@ 18745 @LENGTH@ 85
---------------------DEL MethodInvocation@@toUndeploy.getKey() @AT@ 18762 @LENGTH@ 19
------------------------DEL SimpleName@@Name:toUndeploy @AT@ 18762 @LENGTH@ 10
------------------------DEL SimpleName@@MethodName:getKey:[] @AT@ 18773 @LENGTH@ 8
---------------------INS SimpleName@@toUndeploy @TO@ ClassInstanceCreation@@UndeployTask[toUndeploy.getKey(), deploymentDir, scanContext.scanStartTime, true] @AT@ 18919 @LENGTH@ 10
---------INS SingleVariableDeclaration@@String toUndeploy @TO@ EnhancedForStatement@@for (String toUndeploy : scannedDeployments) {  scannerTasks.add(new UndeployTask(toUndeploy,deploymentDir,scanContext.scanStartTime,true));} @AT@ 18819 @LENGTH@ 17
------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String toUndeploy @AT@ 18819 @LENGTH@ 6
------------INS SimpleName@@toUndeploy @TO@ SingleVariableDeclaration@@String toUndeploy @AT@ 18826 @LENGTH@ 10
---------INS SimpleName@@scannedDeployments @TO@ EnhancedForStatement@@for (String toUndeploy : scannedDeployments) {  scannerTasks.add(new UndeployTask(toUndeploy,deploymentDir,scanContext.scanStartTime,true));} @AT@ 18839 @LENGTH@ 18


UPD ReturnStatement@@ClassInstanceCreation:new HiveConnection(url,info) @TO@ ConditionalExpression:acceptsURL(url) ? new HiveConnection(url,info) : null @AT@ 2966 @LENGTH@ 37
---DEL ClassInstanceCreation@@HiveConnection[url, info] @AT@ 2973 @LENGTH@ 29
---INS ConditionalExpression@@acceptsURL(url) ? new HiveConnection(url,info) : null @TO@ ReturnStatement@@ClassInstanceCreation:new HiveConnection(url,info) @AT@ 2985 @LENGTH@ 54
------INS MethodInvocation@@acceptsURL(url) @TO@ ConditionalExpression@@acceptsURL(url) ? new HiveConnection(url,info) : null @AT@ 2985 @LENGTH@ 15
---------INS SimpleName@@MethodName:acceptsURL:[url] @TO@ MethodInvocation@@acceptsURL(url) @AT@ 2985 @LENGTH@ 15
------------INS SimpleName@@url @TO@ SimpleName@@MethodName:acceptsURL:[url] @AT@ 2996 @LENGTH@ 3
------INS ClassInstanceCreation@@HiveConnection[url, info] @TO@ ConditionalExpression@@acceptsURL(url) ? new HiveConnection(url,info) : null @AT@ 3003 @LENGTH@ 29
---------MOV New@@new @TO@ ClassInstanceCreation@@HiveConnection[url, info] @AT@ 2973 @LENGTH@ 3
---------MOV SimpleType@@HiveConnection @TO@ ClassInstanceCreation@@HiveConnection[url, info] @AT@ 2977 @LENGTH@ 14
---------MOV SimpleName@@url @TO@ ClassInstanceCreation@@HiveConnection[url, info] @AT@ 2992 @LENGTH@ 3
---------MOV SimpleName@@info @TO@ ClassInstanceCreation@@HiveConnection[url, info] @AT@ 2997 @LENGTH@ 4
------INS NullLiteral@@null @TO@ ConditionalExpression@@acceptsURL(url) ? new HiveConnection(url,info) : null @AT@ 3035 @LENGTH@ 4


UPD TypeDeclaration@@[@ManagedResource(description="ZooKeeper Endpoint"), public]ZooKeeperEndpoint, DefaultEndpoint @TO@ [@ManagedResource(description="ZooKeeper Endpoint"), @UriEndpoint(scheme="zookeeper",consumerClass=ZooKeeperConsumer.class), public]ZooKeeperEndpoint, DefaultEndpoint @AT@ 1276 @LENGTH@ 4994
---INS NormalAnnotation@@@UriEndpoint(scheme="zookeeper",consumerClass=ZooKeeperConsumer.class) @TO@ TypeDeclaration@@[@ManagedResource(description="ZooKeeper Endpoint"), public]ZooKeeperEndpoint, DefaultEndpoint @AT@ 1408 @LENGTH@ 75


UPD TypeDeclaration@@[public]ServletEndpoint, HttpEndpoint @TO@ [@UriEndpoint(scheme="servlet",consumerClass=ServletConsumer.class), public]ServletEndpoint, HttpEndpoint @AT@ 1247 @LENGTH@ 1282
---INS NormalAnnotation@@@UriEndpoint(scheme="servlet",consumerClass=ServletConsumer.class) @TO@ TypeDeclaration@@[public]ServletEndpoint, HttpEndpoint @AT@ 1326 @LENGTH@ 71


INS FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(SrpConverters.exceptionConverter())] @TO@ TypeDeclaration@@[public]SrpConnectionFactory, [InitializingBean, DisposableBean, RedisConnectionFactory] @AT@ 1514 @LENGTH@ 158
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(SrpConverters.exceptionConverter())] @AT@ 1514 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(SrpConverters.exceptionConverter())] @AT@ 1522 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(SrpConverters.exceptionConverter())] @AT@ 1529 @LENGTH@ 5
---INS SimpleType@@ExceptionTranslationStrategy @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(SrpConverters.exceptionConverter())] @AT@ 1535 @LENGTH@ 28
---INS VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(SrpConverters.exceptionConverter()) @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(SrpConverters.exceptionConverter())] @AT@ 1564 @LENGTH@ 107
------INS SimpleName@@EXCEPTION_TRANSLATION @TO@ VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(SrpConverters.exceptionConverter()) @AT@ 1564 @LENGTH@ 21
------INS ClassInstanceCreation@@PassThroughExceptionTranslationStrategy[SrpConverters.exceptionConverter()] @TO@ VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(SrpConverters.exceptionConverter()) @AT@ 1588 @LENGTH@ 83
---------INS New@@new @TO@ ClassInstanceCreation@@PassThroughExceptionTranslationStrategy[SrpConverters.exceptionConverter()] @AT@ 1588 @LENGTH@ 3
---------INS SimpleType@@PassThroughExceptionTranslationStrategy @TO@ ClassInstanceCreation@@PassThroughExceptionTranslationStrategy[SrpConverters.exceptionConverter()] @AT@ 1592 @LENGTH@ 39
---------INS MethodInvocation@@SrpConverters.exceptionConverter() @TO@ ClassInstanceCreation@@PassThroughExceptionTranslationStrategy[SrpConverters.exceptionConverter()] @AT@ 1636 @LENGTH@ 34
------------INS SimpleName@@Name:SrpConverters @TO@ MethodInvocation@@SrpConverters.exceptionConverter() @AT@ 1636 @LENGTH@ 13
------------INS SimpleName@@MethodName:exceptionConverter:[] @TO@ MethodInvocation@@SrpConverters.exceptionConverter() @AT@ 1650 @LENGTH@ 20


UPD MethodDeclaration@@public, void, MethodName:testDencodeEmpty, DecoderException,  @TO@ public, void, MethodName:testDecodeEmpty, DecoderException,  @AT@ 8551 @LENGTH@ 296
---UPD SimpleName@@MethodName:testDencodeEmpty @TO@ MethodName:testDecodeEmpty @AT@ 8563 @LENGTH@ 16


UPD MethodDeclaration@@T, MethodName:run, P parameter, PrivilegedActionException,  @TO@ T, MethodName:run, P parameter, Exception,  @AT@ 938 @LENGTH@ 50
---UPD SimpleType@@PrivilegedActionException @TO@ Exception @AT@ 962 @LENGTH@ 25


UPD TypeDeclaration@@[@UriEndpoint(scheme="gtask"), public]GTaskEndpoint, ServletEndpoint[OutboundBindingSupport<GTaskEndpoint,TaskOptions,Void>] @TO@ [@UriEndpoint(scheme="gtask",label="cloud"), public]GTaskEndpoint, ServletEndpoint[OutboundBindingSupport<GTaskEndpoint,TaskOptions,Void>] @AT@ 2050 @LENGTH@ 3140
---UPD NormalAnnotation@@@UriEndpoint(scheme="gtask") @TO@ @UriEndpoint(scheme="gtask",label="cloud") @AT@ 2050 @LENGTH@ 30


INS MethodDeclaration@@public, void, MethodName:setCreator, User creator,  @TO@ TypeDeclaration@@[@Document, public]Person, Contact @AT@ 5014 @LENGTH@ 67
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setCreator, User creator,  @AT@ 5014 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setCreator, User creator,  @AT@ 5021 @LENGTH@ 4
---INS SimpleName@@MethodName:setCreator @TO@ MethodDeclaration@@public, void, MethodName:setCreator, User creator,  @AT@ 5026 @LENGTH@ 10
---INS SingleVariableDeclaration@@User creator @TO@ MethodDeclaration@@public, void, MethodName:setCreator, User creator,  @AT@ 5037 @LENGTH@ 12
------INS SimpleType@@User @TO@ SingleVariableDeclaration@@User creator @AT@ 5037 @LENGTH@ 4
------INS SimpleName@@creator @TO@ SingleVariableDeclaration@@User creator @AT@ 5042 @LENGTH@ 7
---INS ExpressionStatement@@Assignment:this.creator=creator @TO@ MethodDeclaration@@public, void, MethodName:setCreator, User creator,  @AT@ 5055 @LENGTH@ 23
------INS Assignment@@this.creator=creator @TO@ ExpressionStatement@@Assignment:this.creator=creator @AT@ 5055 @LENGTH@ 22
---------INS FieldAccess@@this.creator @TO@ Assignment@@this.creator=creator @AT@ 5055 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.creator @AT@ 5055 @LENGTH@ 4
------------INS SimpleName@@creator @TO@ FieldAccess@@this.creator @AT@ 5060 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.creator=creator @AT@ 5067 @LENGTH@ 1
---------INS SimpleName@@creator @TO@ Assignment@@this.creator=creator @AT@ 5070 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:assertEquals("[bar]",request.getResourceIds().toString()) @TO@ MethodDeclaration@@public, void, MethodName:testCreateTokenThenOAuth2RequestWithGrantType,  @AT@ 4015 @LENGTH@ 59
---INS MethodInvocation@@assertEquals("[bar]",request.getResourceIds().toString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("[bar]",request.getResourceIds().toString()) @AT@ 4015 @LENGTH@ 58
------INS SimpleName@@MethodName:assertEquals:["[bar]", request.getResourceIds().toString()] @TO@ MethodInvocation@@assertEquals("[bar]",request.getResourceIds().toString()) @AT@ 4015 @LENGTH@ 58
---------INS StringLiteral@@"[bar]" @TO@ SimpleName@@MethodName:assertEquals:["[bar]", request.getResourceIds().toString()] @AT@ 4028 @LENGTH@ 7
---------INS MethodInvocation@@request.getResourceIds().toString() @TO@ SimpleName@@MethodName:assertEquals:["[bar]", request.getResourceIds().toString()] @AT@ 4037 @LENGTH@ 35
------------INS MethodInvocation@@MethodName:getResourceIds:[] @TO@ MethodInvocation@@request.getResourceIds().toString() @AT@ 4037 @LENGTH@ 24
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getResourceIds().toString() @AT@ 4037 @LENGTH@ 7
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@request.getResourceIds().toString() @AT@ 4062 @LENGTH@ 10


MOV FieldDeclaration@@private, String, [username] @TO@ TypeDeclaration@@[@UriParams, public]SshConfiguration, [Cloneable] @AT@ 1216 @LENGTH@ 24


UPD CatchClause@@catch (ListenerExecutionFailedException ex) {  assertEquals(MessageConversionException.class,ex.getCause().getClass());} @TO@ catch (ListenerExecutionFailedException ex) {  assertEquals(org.springframework.amqp.support.converter.MessageConversionException.class,ex.getCause().getClass());  assertEquals(org.springframework.messaging.converter.MessageConversionException.class,ex.getCause().getCause().getClass());} @AT@ 3855 @LENGTH@ 126
---UPD ExpressionStatement@@MethodInvocation:assertEquals(MessageConversionException.class,ex.getCause().getClass()) @TO@ MethodInvocation:assertEquals(org.springframework.amqp.support.converter.MessageConversionException.class,ex.getCause().getClass()) @AT@ 3904 @LENGTH@ 73
------UPD MethodInvocation@@assertEquals(MessageConversionException.class,ex.getCause().getClass()) @TO@ assertEquals(org.springframework.amqp.support.converter.MessageConversionException.class,ex.getCause().getClass()) @AT@ 3904 @LENGTH@ 72
---------UPD SimpleName@@MethodName:assertEquals:[MessageConversionException.class, ex.getCause().getClass()] @TO@ MethodName:assertEquals:[org.springframework.amqp.support.converter.MessageConversionException.class, ex.getCause().getClass()] @AT@ 3904 @LENGTH@ 72
------------UPD TypeLiteral@@MessageConversionException.class @TO@ org.springframework.amqp.support.converter.MessageConversionException.class @AT@ 3917 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:assertEquals(org.springframework.messaging.converter.MessageConversionException.class,ex.getCause().getCause().getClass()) @TO@ CatchClause@@catch (ListenerExecutionFailedException ex) {  assertEquals(MessageConversionException.class,ex.getCause().getClass());} @AT@ 3972 @LENGTH@ 129
------INS MethodInvocation@@assertEquals(org.springframework.messaging.converter.MessageConversionException.class,ex.getCause().getCause().getClass()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(org.springframework.messaging.converter.MessageConversionException.class,ex.getCause().getCause().getClass()) @AT@ 3972 @LENGTH@ 128
---------INS SimpleName@@MethodName:assertEquals:[org.springframework.messaging.converter.MessageConversionException.class, ex.getCause().getCause().getClass()] @TO@ MethodInvocation@@assertEquals(org.springframework.messaging.converter.MessageConversionException.class,ex.getCause().getCause().getClass()) @AT@ 3972 @LENGTH@ 128
------------INS TypeLiteral@@org.springframework.messaging.converter.MessageConversionException.class @TO@ SimpleName@@MethodName:assertEquals:[org.springframework.messaging.converter.MessageConversionException.class, ex.getCause().getCause().getClass()] @AT@ 3985 @LENGTH@ 72
------------INS MethodInvocation@@ex.getCause().getCause().getClass() @TO@ SimpleName@@MethodName:assertEquals:[org.springframework.messaging.converter.MessageConversionException.class, ex.getCause().getCause().getClass()] @AT@ 4064 @LENGTH@ 35
---------------INS MethodInvocation@@MethodName:getCause:[] @TO@ MethodInvocation@@ex.getCause().getCause().getClass() @AT@ 4064 @LENGTH@ 24
---------------INS MethodInvocation@@MethodName:getCause:[] @TO@ MethodInvocation@@ex.getCause().getCause().getClass() @AT@ 4064 @LENGTH@ 13
---------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getCause().getCause().getClass() @AT@ 4064 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@ex.getCause().getCause().getClass() @AT@ 4089 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"groupDelay\": { \"type\": \"integer\", \"javaType\": \"java.lang.Long\", \"value\": \"2000\"," + " \"description\": \"Set the initial delay for stats in millis\" },")) @TO@ MethodInvocation:assertTrue(json.contains("\"groupDelay\": { \"type\": \"integer\", \"javaType\": \"java.lang.Long\", \"value\": \"2000\"," + " \"description\": \"Set the initial delay for stats (in millis)\" },")) @AT@ 10676 @LENGTH@ 212
---UPD MethodInvocation@@assertTrue(json.contains("\"groupDelay\": { \"type\": \"integer\", \"javaType\": \"java.lang.Long\", \"value\": \"2000\"," + " \"description\": \"Set the initial delay for stats in millis\" },")) @TO@ assertTrue(json.contains("\"groupDelay\": { \"type\": \"integer\", \"javaType\": \"java.lang.Long\", \"value\": \"2000\"," + " \"description\": \"Set the initial delay for stats (in millis)\" },")) @AT@ 10676 @LENGTH@ 211
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"groupDelay\": { \"type\": \"integer\", \"javaType\": \"java.lang.Long\", \"value\": \"2000\"," + " \"description\": \"Set the initial delay for stats in millis\" },")] @TO@ MethodName:assertTrue:[json.contains("\"groupDelay\": { \"type\": \"integer\", \"javaType\": \"java.lang.Long\", \"value\": \"2000\"," + " \"description\": \"Set the initial delay for stats (in millis)\" },")] @AT@ 10676 @LENGTH@ 211
---------UPD MethodInvocation@@json.contains("\"groupDelay\": { \"type\": \"integer\", \"javaType\": \"java.lang.Long\", \"value\": \"2000\"," + " \"description\": \"Set the initial delay for stats in millis\" },") @TO@ json.contains("\"groupDelay\": { \"type\": \"integer\", \"javaType\": \"java.lang.Long\", \"value\": \"2000\"," + " \"description\": \"Set the initial delay for stats (in millis)\" },") @AT@ 10687 @LENGTH@ 199
------------UPD SimpleName@@MethodName:contains:["\"groupDelay\": { \"type\": \"integer\", \"javaType\": \"java.lang.Long\", \"value\": \"2000\"," + " \"description\": \"Set the initial delay for stats in millis\" },"] @TO@ MethodName:contains:["\"groupDelay\": { \"type\": \"integer\", \"javaType\": \"java.lang.Long\", \"value\": \"2000\"," + " \"description\": \"Set the initial delay for stats (in millis)\" },"] @AT@ 10692 @LENGTH@ 194
---------------UPD InfixExpression@@"\"groupDelay\": { \"type\": \"integer\", \"javaType\": \"java.lang.Long\", \"value\": \"2000\"," + " \"description\": \"Set the initial delay for stats in millis\" }," @TO@ "\"groupDelay\": { \"type\": \"integer\", \"javaType\": \"java.lang.Long\", \"value\": \"2000\"," + " \"description\": \"Set the initial delay for stats (in millis)\" }," @AT@ 10701 @LENGTH@ 184
------------------UPD StringLiteral@@" \"description\": \"Set the initial delay for stats in millis\" }," @TO@ " \"description\": \"Set the initial delay for stats (in millis)\" }," @AT@ 10817 @LENGTH@ 68


UPD MethodDeclaration@@public, Object, MethodName:getService, ServiceReference reference,  @TO@ public, Object, MethodName:getService, @SuppressWarnings("rawtypes") ServiceReference reference,  @AT@ 1694 @LENGTH@ 1143
---UPD SingleVariableDeclaration@@ServiceReference reference @TO@ @SuppressWarnings("rawtypes") ServiceReference reference @AT@ 1719 @LENGTH@ 26


INS IfStatement@@if (headers != null) {  for (  Map.Entry<String,Object> header : headers.entrySet()) {    in.setHeader(header.getKey(),header.getValue());  }} @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange,  @AT@ 10078 @LENGTH@ 218
---INS InfixExpression@@headers != null @TO@ IfStatement@@if (headers != null) {  for (  Map.Entry<String,Object> header : headers.entrySet()) {    in.setHeader(header.getKey(),header.getValue());  }} @AT@ 10082 @LENGTH@ 15
------INS SimpleName@@headers @TO@ InfixExpression@@headers != null @AT@ 10082 @LENGTH@ 7
------INS Operator@@!= @TO@ InfixExpression@@headers != null @AT@ 10089 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@headers != null @AT@ 10093 @LENGTH@ 4
---INS Block@@ThenBody:{  for (  Map.Entry<String,Object> header : headers.entrySet()) {    in.setHeader(header.getKey(),header.getValue());  }} @TO@ IfStatement@@if (headers != null) {  for (  Map.Entry<String,Object> header : headers.entrySet()) {    in.setHeader(header.getKey(),header.getValue());  }} @AT@ 10099 @LENGTH@ 197
------MOV EnhancedForStatement@@for (Map.Entry<String,Object> header : headers.entrySet()) {  in.setHeader(header.getKey(),header.getValue());} @TO@ Block@@ThenBody:{  for (  Map.Entry<String,Object> header : headers.entrySet()) {    in.setHeader(header.getKey(),header.getValue());  }} @AT@ 10078 @LENGTH@ 149


INS ExpressionStatement@@MethodInvocation:iterator.closeConnection() @TO@ MethodDeclaration@@public, void, MethodName:onComplete, Exchange exchange,  @AT@ 15890 @LENGTH@ 27
---INS MethodInvocation@@iterator.closeConnection() @TO@ ExpressionStatement@@MethodInvocation:iterator.closeConnection() @AT@ 15890 @LENGTH@ 26
------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.closeConnection() @AT@ 15890 @LENGTH@ 8
------INS SimpleName@@MethodName:closeConnection:[] @TO@ MethodInvocation@@iterator.closeConnection() @AT@ 15899 @LENGTH@ 17


UPD VariableDeclarationStatement@@int count=TestUtils.readField("count",projection); @TO@ Integer count=TestUtils.readField("count",projection); @AT@ 3593 @LENGTH@ 53
---INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@int count=TestUtils.readField("count",projection); @AT@ 3593 @LENGTH@ 7
---DEL PrimitiveType@@int @AT@ 3593 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:SrpConverters.toDataAccessException(ex) @TO@ MethodInvocation:EXCEPTION_TRANSLATION.translate(ex) @AT@ 8060 @LENGTH@ 47
---UPD MethodInvocation@@SrpConverters.toDataAccessException(ex) @TO@ EXCEPTION_TRANSLATION.translate(ex) @AT@ 8067 @LENGTH@ 39
------UPD SimpleName@@Name:SrpConverters @TO@ Name:EXCEPTION_TRANSLATION @AT@ 8067 @LENGTH@ 13
------UPD SimpleName@@MethodName:toDataAccessException:[ex] @TO@ MethodName:translate:[ex] @AT@ 8081 @LENGTH@ 25


UPD TypeDeclaration@@[public]NotGreaterThanOperation, ComparisonOperation @TO@ [public]NotGreaterThanOperation, SameTypeOperation @AT@ 1154 @LENGTH@ 419
---UPD SimpleType@@ComparisonOperation @TO@ SameTypeOperation @AT@ 1199 @LENGTH@ 19


UPD VariableDeclarationStatement@@int i=offs; @TO@ int i=0; @AT@ 5424 @LENGTH@ 13
---UPD VariableDeclarationFragment@@i=offs @TO@ i=0 @AT@ 5428 @LENGTH@ 8
------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=offs @AT@ 5431 @LENGTH@ 1
------DEL SimpleName@@offs @AT@ 5432 @LENGTH@ 4


INS FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(LettuceConverters.exceptionConverter())] @TO@ TypeDeclaration@@[public]LettuceConnectionFactory, [InitializingBean, DisposableBean, RedisConnectionFactory] @AT@ 2621 @LENGTH@ 162
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(LettuceConverters.exceptionConverter())] @AT@ 2621 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(LettuceConverters.exceptionConverter())] @AT@ 2629 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(LettuceConverters.exceptionConverter())] @AT@ 2636 @LENGTH@ 5
---INS SimpleType@@ExceptionTranslationStrategy @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(LettuceConverters.exceptionConverter())] @AT@ 2642 @LENGTH@ 28
---INS VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(LettuceConverters.exceptionConverter()) @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(LettuceConverters.exceptionConverter())] @AT@ 2671 @LENGTH@ 111
------INS SimpleName@@EXCEPTION_TRANSLATION @TO@ VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(LettuceConverters.exceptionConverter()) @AT@ 2671 @LENGTH@ 21
------INS ClassInstanceCreation@@PassThroughExceptionTranslationStrategy[LettuceConverters.exceptionConverter()] @TO@ VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(LettuceConverters.exceptionConverter()) @AT@ 2695 @LENGTH@ 87
---------INS New@@new @TO@ ClassInstanceCreation@@PassThroughExceptionTranslationStrategy[LettuceConverters.exceptionConverter()] @AT@ 2695 @LENGTH@ 3
---------INS SimpleType@@PassThroughExceptionTranslationStrategy @TO@ ClassInstanceCreation@@PassThroughExceptionTranslationStrategy[LettuceConverters.exceptionConverter()] @AT@ 2699 @LENGTH@ 39
---------INS MethodInvocation@@LettuceConverters.exceptionConverter() @TO@ ClassInstanceCreation@@PassThroughExceptionTranslationStrategy[LettuceConverters.exceptionConverter()] @AT@ 2743 @LENGTH@ 38
------------INS SimpleName@@Name:LettuceConverters @TO@ MethodInvocation@@LettuceConverters.exceptionConverter() @AT@ 2743 @LENGTH@ 17
------------INS SimpleName@@MethodName:exceptionConverter:[] @TO@ MethodInvocation@@LettuceConverters.exceptionConverter() @AT@ 2761 @LENGTH@ 20


UPD MethodDeclaration@@public, voidMethodName:GroupMemberFunctionExecution, String... groups,  @TO@ public, voidMethodName:GroupMemberFunctionExecution, final String... groups,  @AT@ 1003 @LENGTH@ 156
---UPD SingleVariableDeclaration@@String... groups @TO@ final String... groups @AT@ 1039 @LENGTH@ 16
------INS Modifier@@final @TO@ SingleVariableDeclaration@@String... groups @AT@ 1546 @LENGTH@ 5
---DEL SuperConstructorInvocation@@super();
 @AT@ 1061 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:Assert.notEmpty(groups,"groups cannot be null or empty.") @TO@ MethodInvocation:Assert.notEmpty(groups,"'groups' cannot be null or empty.") @AT@ 1072 @LENGTH@ 59
------UPD MethodInvocation@@Assert.notEmpty(groups,"groups cannot be null or empty.") @TO@ Assert.notEmpty(groups,"'groups' cannot be null or empty.") @AT@ 1072 @LENGTH@ 58
---------UPD SimpleName@@MethodName:notEmpty:[groups, "groups cannot be null or empty."] @TO@ MethodName:notEmpty:[groups, "'groups' cannot be null or empty."] @AT@ 1079 @LENGTH@ 51
------------UPD StringLiteral@@"groups cannot be null or empty." @TO@ "'groups' cannot be null or empty." @AT@ 1096 @LENGTH@ 33


INS MethodDeclaration@@public, void, MethodName:shouldFindPersonsWhenUsingQueryDslPerdicatedOnIdProperty,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 27841 @LENGTH@ 192
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldFindPersonsWhenUsingQueryDslPerdicatedOnIdProperty,  @AT@ 27841 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldFindPersonsWhenUsingQueryDslPerdicatedOnIdProperty,  @AT@ 27848 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldFindPersonsWhenUsingQueryDslPerdicatedOnIdProperty @TO@ MethodDeclaration@@public, void, MethodName:shouldFindPersonsWhenUsingQueryDslPerdicatedOnIdProperty,  @AT@ 27853 @LENGTH@ 56
---INS ExpressionStatement@@MethodInvocation:assertThat(repository.findAll(person.id.in(Arrays.asList(dave.id,carter.id))),containsInAnyOrder(dave,carter)) @TO@ MethodDeclaration@@public, void, MethodName:shouldFindPersonsWhenUsingQueryDslPerdicatedOnIdProperty,  @AT@ 27916 @LENGTH@ 114
------INS MethodInvocation@@assertThat(repository.findAll(person.id.in(Arrays.asList(dave.id,carter.id))),containsInAnyOrder(dave,carter)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(repository.findAll(person.id.in(Arrays.asList(dave.id,carter.id))),containsInAnyOrder(dave,carter)) @AT@ 27916 @LENGTH@ 113
---------INS SimpleName@@MethodName:assertThat:[repository.findAll(person.id.in(Arrays.asList(dave.id,carter.id))), containsInAnyOrder(dave,carter)] @TO@ MethodInvocation@@assertThat(repository.findAll(person.id.in(Arrays.asList(dave.id,carter.id))),containsInAnyOrder(dave,carter)) @AT@ 27916 @LENGTH@ 113
------------INS MethodInvocation@@repository.findAll(person.id.in(Arrays.asList(dave.id,carter.id))) @TO@ SimpleName@@MethodName:assertThat:[repository.findAll(person.id.in(Arrays.asList(dave.id,carter.id))), containsInAnyOrder(dave,carter)] @AT@ 27927 @LENGTH@ 67
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findAll(person.id.in(Arrays.asList(dave.id,carter.id))) @AT@ 27927 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findAll:[person.id.in(Arrays.asList(dave.id,carter.id))] @TO@ MethodInvocation@@repository.findAll(person.id.in(Arrays.asList(dave.id,carter.id))) @AT@ 27938 @LENGTH@ 56
------------------INS MethodInvocation@@person.id.in(Arrays.asList(dave.id,carter.id)) @TO@ SimpleName@@MethodName:findAll:[person.id.in(Arrays.asList(dave.id,carter.id))] @AT@ 27946 @LENGTH@ 47
---------------------INS QualifiedName@@Name:person.id @TO@ MethodInvocation@@person.id.in(Arrays.asList(dave.id,carter.id)) @AT@ 27946 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:in:[Arrays.asList(dave.id,carter.id)] @TO@ MethodInvocation@@person.id.in(Arrays.asList(dave.id,carter.id)) @AT@ 27956 @LENGTH@ 37
------------------------INS MethodInvocation@@Arrays.asList(dave.id,carter.id) @TO@ SimpleName@@MethodName:in:[Arrays.asList(dave.id,carter.id)] @AT@ 27959 @LENGTH@ 33
---------------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(dave.id,carter.id) @AT@ 27959 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:asList:[dave.id, carter.id] @TO@ MethodInvocation@@Arrays.asList(dave.id,carter.id) @AT@ 27966 @LENGTH@ 26
------------------------------INS QualifiedName@@dave.id @TO@ SimpleName@@MethodName:asList:[dave.id, carter.id] @AT@ 27973 @LENGTH@ 7
---------------------------------INS SimpleName@@dave @TO@ QualifiedName@@dave.id @AT@ 27973 @LENGTH@ 4
---------------------------------INS SimpleName@@id @TO@ QualifiedName@@dave.id @AT@ 27978 @LENGTH@ 2
------------------------------INS QualifiedName@@carter.id @TO@ SimpleName@@MethodName:asList:[dave.id, carter.id] @AT@ 27982 @LENGTH@ 9
---------------------------------INS SimpleName@@carter @TO@ QualifiedName@@carter.id @AT@ 27982 @LENGTH@ 6
---------------------------------INS SimpleName@@id @TO@ QualifiedName@@carter.id @AT@ 27989 @LENGTH@ 2
------------INS MethodInvocation@@containsInAnyOrder(dave,carter) @TO@ SimpleName@@MethodName:assertThat:[repository.findAll(person.id.in(Arrays.asList(dave.id,carter.id))), containsInAnyOrder(dave,carter)] @AT@ 27996 @LENGTH@ 32
---------------INS SimpleName@@MethodName:containsInAnyOrder:[dave, carter] @TO@ MethodInvocation@@containsInAnyOrder(dave,carter) @AT@ 27996 @LENGTH@ 32
------------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:containsInAnyOrder:[dave, carter] @AT@ 28015 @LENGTH@ 4
------------------INS SimpleName@@carter @TO@ SimpleName@@MethodName:containsInAnyOrder:[dave, carter] @AT@ 28021 @LENGTH@ 6
---------------INS SimpleName@@MethodName:containsInAnyOrder:[dave, carter] @TO@ MethodInvocation@@containsInAnyOrder(dave,carter) @AT@ 27996 @LENGTH@ 32
------------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:containsInAnyOrder:[dave, carter] @AT@ 28015 @LENGTH@ 4
------------------INS SimpleName@@carter @TO@ SimpleName@@MethodName:containsInAnyOrder:[dave, carter] @AT@ 28021 @LENGTH@ 6


INS MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @TO@ TypeDeclaration@@[public]NativeManagementWriteAttributeHandler, ReloadRequiredWriteAttributeHandler @AT@ 1856 @LENGTH@ 155
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1856 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1866 @LENGTH@ 7
---INS SimpleName@@MethodName:requiresRuntime @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1874 @LENGTH@ 15
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1890 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1890 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1907 @LENGTH@ 7
---INS ReturnStatement@@InfixExpression:context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1926 @LENGTH@ 78
------INS InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @TO@ ReturnStatement@@InfixExpression:context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 1933 @LENGTH@ 70
---------INS InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 1933 @LENGTH@ 46
------------INS MethodInvocation@@context.getRunningMode() @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 1933 @LENGTH@ 24
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRunningMode() @AT@ 1933 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getRunningMode:[] @TO@ MethodInvocation@@context.getRunningMode() @AT@ 1941 @LENGTH@ 16
------------INS Operator@@== @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 1957 @LENGTH@ 2
------------INS QualifiedName@@RunningMode.NORMAL @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 1961 @LENGTH@ 18
---------------INS SimpleName@@RunningMode @TO@ QualifiedName@@RunningMode.NORMAL @AT@ 1961 @LENGTH@ 11
---------------INS SimpleName@@NORMAL @TO@ QualifiedName@@RunningMode.NORMAL @AT@ 1973 @LENGTH@ 6
---------INS Operator@@&& @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 1979 @LENGTH@ 2
---------INS PrefixExpression@@!context.isBooting() @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 1983 @LENGTH@ 20
------------INS Operator@@! @TO@ PrefixExpression@@!context.isBooting() @AT@ 1983 @LENGTH@ 1
------------INS MethodInvocation@@context.isBooting() @TO@ PrefixExpression@@!context.isBooting() @AT@ 1984 @LENGTH@ 19
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isBooting() @AT@ 1984 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isBooting:[] @TO@ MethodInvocation@@context.isBooting() @AT@ 1992 @LENGTH@ 11


UPD IfStatement@@if (!authentication.isClientOnly()) {  response.putAll(userTokenConverter.convertUserAuthentication(authentication.getUserAuthentication()));} @TO@ if (!authentication.isClientOnly()) {  response.putAll(userTokenConverter.convertUserAuthentication(authentication.getUserAuthentication()));} else {  if (clientToken.getAuthorities() != null && !clientToken.getAuthorities().isEmpty()) {    response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities());  }} @AT@ 1926 @LENGTH@ 147
---INS Block@@ElseBody:{  if (clientToken.getAuthorities() != null && !clientToken.getAuthorities().isEmpty()) {    response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities());  }} @TO@ IfStatement@@if (!authentication.isClientOnly()) {  response.putAll(userTokenConverter.convertUserAuthentication(authentication.getUserAuthentication()));} @AT@ 2079 @LENGTH@ 187
------INS IfStatement@@if (clientToken.getAuthorities() != null && !clientToken.getAuthorities().isEmpty()) {  response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities());} @TO@ Block@@ElseBody:{  if (clientToken.getAuthorities() != null && !clientToken.getAuthorities().isEmpty()) {    response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities());  }} @AT@ 2084 @LENGTH@ 178
---------INS InfixExpression@@clientToken.getAuthorities() != null && !clientToken.getAuthorities().isEmpty() @TO@ IfStatement@@if (clientToken.getAuthorities() != null && !clientToken.getAuthorities().isEmpty()) {  response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities());} @AT@ 2088 @LENGTH@ 77
------------INS InfixExpression@@clientToken.getAuthorities() != null @TO@ InfixExpression@@clientToken.getAuthorities() != null && !clientToken.getAuthorities().isEmpty() @AT@ 2088 @LENGTH@ 34
---------------INS MethodInvocation@@clientToken.getAuthorities() @TO@ InfixExpression@@clientToken.getAuthorities() != null @AT@ 2088 @LENGTH@ 28
------------------INS SimpleName@@Name:clientToken @TO@ MethodInvocation@@clientToken.getAuthorities() @AT@ 2088 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@clientToken.getAuthorities() @AT@ 2100 @LENGTH@ 16
---------------INS Operator@@!= @TO@ InfixExpression@@clientToken.getAuthorities() != null @AT@ 2116 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@clientToken.getAuthorities() != null @AT@ 2118 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@clientToken.getAuthorities() != null && !clientToken.getAuthorities().isEmpty() @AT@ 2122 @LENGTH@ 2
------------INS PrefixExpression@@!clientToken.getAuthorities().isEmpty() @TO@ InfixExpression@@clientToken.getAuthorities() != null && !clientToken.getAuthorities().isEmpty() @AT@ 2126 @LENGTH@ 39
---------------INS Operator@@! @TO@ PrefixExpression@@!clientToken.getAuthorities().isEmpty() @AT@ 2126 @LENGTH@ 1
---------------INS MethodInvocation@@clientToken.getAuthorities().isEmpty() @TO@ PrefixExpression@@!clientToken.getAuthorities().isEmpty() @AT@ 2127 @LENGTH@ 38
------------------INS MethodInvocation@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@clientToken.getAuthorities().isEmpty() @AT@ 2127 @LENGTH@ 28
------------------INS SimpleName@@Name:clientToken @TO@ MethodInvocation@@clientToken.getAuthorities().isEmpty() @AT@ 2127 @LENGTH@ 11
------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@clientToken.getAuthorities().isEmpty() @AT@ 2156 @LENGTH@ 9
---------INS Block@@ThenBody:{  response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities());} @TO@ IfStatement@@if (clientToken.getAuthorities() != null && !clientToken.getAuthorities().isEmpty()) {  response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities());} @AT@ 2167 @LENGTH@ 95
------------INS ExpressionStatement@@MethodInvocation:response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities()) @TO@ Block@@ThenBody:{  response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities());} @AT@ 2173 @LENGTH@ 84
---------------INS MethodInvocation@@response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities()) @TO@ ExpressionStatement@@MethodInvocation:response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities()) @AT@ 2173 @LENGTH@ 83
------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities()) @AT@ 2173 @LENGTH@ 8
------------------INS SimpleName@@MethodName:put:[UserAuthenticationConverter.AUTHORITIES, clientToken.getAuthorities()] @TO@ MethodInvocation@@response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities()) @AT@ 2182 @LENGTH@ 74
---------------------INS QualifiedName@@UserAuthenticationConverter.AUTHORITIES @TO@ SimpleName@@MethodName:put:[UserAuthenticationConverter.AUTHORITIES, clientToken.getAuthorities()] @AT@ 2186 @LENGTH@ 39
------------------------INS SimpleName@@UserAuthenticationConverter @TO@ QualifiedName@@UserAuthenticationConverter.AUTHORITIES @AT@ 2186 @LENGTH@ 27
------------------------INS SimpleName@@AUTHORITIES @TO@ QualifiedName@@UserAuthenticationConverter.AUTHORITIES @AT@ 2214 @LENGTH@ 11
---------------------INS MethodInvocation@@clientToken.getAuthorities() @TO@ SimpleName@@MethodName:put:[UserAuthenticationConverter.AUTHORITIES, clientToken.getAuthorities()] @AT@ 2227 @LENGTH@ 28
------------------------INS SimpleName@@Name:clientToken @TO@ MethodInvocation@@clientToken.getAuthorities() @AT@ 2227 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@clientToken.getAuthorities() @AT@ 2239 @LENGTH@ 16


UPD TypeDeclaration@@[public]IntegerConverter, [Converter<Integer>] @TO@ [@Component, public]IntegerConverter, [Converter<Integer>] @AT@ 316 @LENGTH@ 600
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]IntegerConverter, [Converter<Integer>] @AT@ 366 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:test, @ArquillianResource(SimpleServlet.class) URL baseURL, ClientProtocolException, IOException,  @TO@ public, void, MethodName:test, @ArquillianResource(SimpleServlet.class) URL baseURL, ClientProtocolException, IOException, URISyntaxException,  @AT@ 2578 @LENGTH@ 1308
---UPD VariableDeclarationStatement@@DefaultHttpClient client=new DefaultHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 2703 @LENGTH@ 51
------UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 2703 @LENGTH@ 17
------UPD VariableDeclarationFragment@@client=new DefaultHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 2721 @LENGTH@ 32
---------DEL ClassInstanceCreation@@DefaultHttpClient[] @AT@ 2730 @LENGTH@ 23
------------DEL New@@new @AT@ 2730 @LENGTH@ 3
------------DEL SimpleType@@DefaultHttpClient @AT@ 2734 @LENGTH@ 17
---------INS MethodInvocation@@HttpClients.createDefault() @TO@ VariableDeclarationFragment@@client=new DefaultHttpClient() @AT@ 2889 @LENGTH@ 27
------------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 2889 @LENGTH@ 11
------------INS SimpleName@@MethodName:createDefault:[] @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 2901 @LENGTH@ 15
---UPD VariableDeclarationStatement@@String url=baseURL.toString() + "simple"; @TO@ URI uri=SimpleServlet.createURI(baseURL); @AT@ 2764 @LENGTH@ 43
------UPD SimpleType@@String @TO@ URI @AT@ 2764 @LENGTH@ 6
------UPD VariableDeclarationFragment@@url=baseURL.toString() + "simple" @TO@ uri=SimpleServlet.createURI(baseURL) @AT@ 2771 @LENGTH@ 35
---------UPD SimpleName@@url @TO@ uri @AT@ 2771 @LENGTH@ 3
---------DEL InfixExpression@@baseURL.toString() + "simple" @AT@ 2777 @LENGTH@ 29
------------DEL MethodInvocation@@baseURL.toString() @AT@ 2777 @LENGTH@ 18
------------DEL Operator@@+ @AT@ 2795 @LENGTH@ 1
------------DEL StringLiteral@@"simple" @AT@ 2798 @LENGTH@ 8
---------INS MethodInvocation@@SimpleServlet.createURI(baseURL) @TO@ VariableDeclarationFragment@@url=baseURL.toString() + "simple" @AT@ 2937 @LENGTH@ 32
------------MOV SimpleName@@Name:baseURL @TO@ MethodInvocation@@SimpleServlet.createURI(baseURL) @AT@ 2777 @LENGTH@ 7
------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@SimpleServlet.createURI(baseURL) @AT@ 2785 @LENGTH@ 10
---------------INS SimpleName@@baseURL @TO@ SimpleName@@MethodName:toString:[] @AT@ 2961 @LENGTH@ 7
---UPD TryStatement@@try {  HttpResponse response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();}  finally {  client.getConnectionManager().shutdown();} @TO@ try {  HttpResponse response=client.execute(new HttpGet(uri));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));    Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(uri));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));    Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 2817 @LENGTH@ 1063
------UPD VariableDeclarationStatement@@HttpResponse response=client.execute(new HttpGet(url)); @TO@ HttpResponse response=client.execute(new HttpGet(uri)); @AT@ 2835 @LENGTH@ 57
---------UPD VariableDeclarationFragment@@response=client.execute(new HttpGet(url)) @TO@ response=client.execute(new HttpGet(uri)) @AT@ 2848 @LENGTH@ 43
------------UPD MethodInvocation@@client.execute(new HttpGet(url)) @TO@ client.execute(new HttpGet(uri)) @AT@ 2859 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:execute:[new HttpGet(url)] @TO@ MethodName:execute:[new HttpGet(uri)] @AT@ 2866 @LENGTH@ 25
------------------UPD ClassInstanceCreation@@HttpGet[url] @TO@ HttpGet[uri] @AT@ 2874 @LENGTH@ 16
---------------------UPD SimpleName@@url @TO@ uri @AT@ 2886 @LENGTH@ 3
------INS TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ TryStatement@@try {  HttpResponse response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();}  finally {  client.getConnectionManager().shutdown();} @AT@ 3068 @LENGTH@ 411
---------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode()) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 2905 @LENGTH@ 89
---------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue())) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 3007 @LENGTH@ 86
---------MOV ExpressionStatement@@MethodInvocation:Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue())) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 3106 @LENGTH@ 86
---------INS Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 3408 @LENGTH@ 71
------------INS ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @TO@ Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @AT@ 3426 @LENGTH@ 39
---------------MOV MethodInvocation@@response.getEntity().getContent().close() @TO@ ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @AT@ 3205 @LENGTH@ 41
------------------DEL MethodInvocation@@MethodName:getContent:[] @AT@ 3205 @LENGTH@ 33
------------------DEL MethodInvocation@@MethodName:getEntity:[] @AT@ 3205 @LENGTH@ 20
------------------UPD SimpleName@@Name:response @TO@ Name:HttpClientUtils @AT@ 3205 @LENGTH@ 8
------------------UPD SimpleName@@MethodName:close:[] @TO@ MethodName:closeQuietly:[response] @AT@ 3239 @LENGTH@ 7
---------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:close:[] @AT@ 3455 @LENGTH@ 8
------DEL ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @AT@ 3205 @LENGTH@ 42
------UPD ExpressionStatement@@Assignment:response=client.execute(new HttpGet(url)) @TO@ Assignment:response=client.execute(new HttpGet(uri)) @AT@ 3261 @LENGTH@ 44
---------UPD Assignment@@response=client.execute(new HttpGet(url)) @TO@ response=client.execute(new HttpGet(uri)) @AT@ 3261 @LENGTH@ 43
------------UPD MethodInvocation@@client.execute(new HttpGet(url)) @TO@ client.execute(new HttpGet(uri)) @AT@ 3272 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:execute:[new HttpGet(url)] @TO@ MethodName:execute:[new HttpGet(uri)] @AT@ 3279 @LENGTH@ 25
------------------UPD ClassInstanceCreation@@HttpGet[url] @TO@ HttpGet[uri] @AT@ 3287 @LENGTH@ 16
---------------------UPD SimpleName@@url @TO@ uri @AT@ 3299 @LENGTH@ 3
------INS TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ TryStatement@@try {  HttpResponse response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();}  finally {  client.getConnectionManager().shutdown();} @AT@ 3550 @LENGTH@ 551
---------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode()) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 3318 @LENGTH@ 89
---------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue())) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 3420 @LENGTH@ 86
---------MOV ExpressionStatement@@MethodInvocation:Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue())) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 3655 @LENGTH@ 86
---------INS Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 4030 @LENGTH@ 71
------------INS ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @TO@ Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @AT@ 4048 @LENGTH@ 39
---------------MOV MethodInvocation@@response.getEntity().getContent().close() @TO@ ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @AT@ 3754 @LENGTH@ 41
------------------DEL MethodInvocation@@MethodName:getContent:[] @AT@ 3754 @LENGTH@ 33
------------------DEL MethodInvocation@@MethodName:getEntity:[] @AT@ 3754 @LENGTH@ 20
------------------UPD SimpleName@@Name:response @TO@ Name:HttpClientUtils @AT@ 3754 @LENGTH@ 8
------------------UPD SimpleName@@MethodName:close:[] @TO@ MethodName:closeQuietly:[response] @AT@ 3788 @LENGTH@ 7
---------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:close:[] @AT@ 4077 @LENGTH@ 8
------DEL ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @AT@ 3754 @LENGTH@ 42
------UPD Block@@FinallyBody:{  client.getConnectionManager().shutdown();} @TO@ FinallyBody:{  HttpClientUtils.closeQuietly(client);} @AT@ 3815 @LENGTH@ 65
---------UPD ExpressionStatement@@MethodInvocation:client.getConnectionManager().shutdown() @TO@ MethodInvocation:HttpClientUtils.closeQuietly(client) @AT@ 3829 @LENGTH@ 41
------------UPD MethodInvocation@@client.getConnectionManager().shutdown() @TO@ HttpClientUtils.closeQuietly(client) @AT@ 3829 @LENGTH@ 40
---------------DEL MethodInvocation@@MethodName:getConnectionManager:[] @AT@ 3829 @LENGTH@ 29
---------------UPD SimpleName@@Name:client @TO@ Name:HttpClientUtils @AT@ 3829 @LENGTH@ 6
---------------UPD SimpleName@@MethodName:shutdown:[] @TO@ MethodName:closeQuietly:[client] @AT@ 3859 @LENGTH@ 10
------------------INS SimpleName@@client @TO@ SimpleName@@MethodName:shutdown:[] @AT@ 4163 @LENGTH@ 6
---INS SimpleType@@URISyntaxException @TO@ MethodDeclaration@@public, void, MethodName:test, @ArquillianResource(SimpleServlet.class) URL baseURL, ClientProtocolException, IOException,  @AT@ 2840 @LENGTH@ 18


UPD ExpressionStatement@@Assignment:rproc=new MapRecordProcessor() @TO@ Assignment:rproc=new MapRecordProcessor(jobConf) @AT@ 5068 @LENGTH@ 33
---UPD Assignment@@rproc=new MapRecordProcessor() @TO@ rproc=new MapRecordProcessor(jobConf) @AT@ 5068 @LENGTH@ 32
------UPD ClassInstanceCreation@@MapRecordProcessor[] @TO@ MapRecordProcessor[jobConf] @AT@ 5076 @LENGTH@ 24
---------INS SimpleName@@jobConf @TO@ ClassInstanceCreation@@MapRecordProcessor[] @AT@ 5099 @LENGTH@ 7


UPD TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");}  finally {  client.getConnectionManager().shutdown();} @TO@ try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 5834 @LENGTH@ 2011
---INS TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");}  finally {  client.getConnectionManager().shutdown();} @AT@ 6042 @LENGTH@ 205
------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode()) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 6026 @LENGTH@ 89
------INS Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 6176 @LENGTH@ 71
---------INS ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @TO@ Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @AT@ 6194 @LENGTH@ 39
------------MOV MethodInvocation@@response.getEntity().getContent().close() @TO@ ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @AT@ 6128 @LENGTH@ 41
---------------DEL MethodInvocation@@MethodName:getContent:[] @AT@ 6128 @LENGTH@ 33
---------------DEL MethodInvocation@@MethodName:getEntity:[] @AT@ 6128 @LENGTH@ 20
---------------UPD SimpleName@@Name:response @TO@ Name:HttpClientUtils @AT@ 6128 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:close:[] @TO@ MethodName:closeQuietly:[response] @AT@ 6162 @LENGTH@ 7
------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:close:[] @AT@ 6223 @LENGTH@ 8
---DEL ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @AT@ 6128 @LENGTH@ 42
---INS TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");}  finally {  client.getConnectionManager().shutdown();} @AT@ 6588 @LENGTH@ 310
------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode()) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 6511 @LENGTH@ 89
------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue())) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 6613 @LENGTH@ 88
------INS Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 6827 @LENGTH@ 71
---------INS ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @TO@ Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @AT@ 6845 @LENGTH@ 39
------------MOV MethodInvocation@@response.getEntity().getContent().close() @TO@ ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @AT@ 6714 @LENGTH@ 41
---------------DEL MethodInvocation@@MethodName:getContent:[] @AT@ 6714 @LENGTH@ 33
---------------DEL MethodInvocation@@MethodName:getEntity:[] @AT@ 6714 @LENGTH@ 20
---------------UPD SimpleName@@Name:response @TO@ Name:HttpClientUtils @AT@ 6714 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:close:[] @TO@ MethodName:closeQuietly:[response] @AT@ 6748 @LENGTH@ 7
------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:close:[] @AT@ 6874 @LENGTH@ 8
---DEL ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @AT@ 6714 @LENGTH@ 42
---MOV ExpressionStatement@@MethodInvocation:System.out.println("Executed HTTP request") @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");}  finally {  client.getConnectionManager().shutdown();} @AT@ 6769 @LENGTH@ 44
---INS TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");}  finally {  client.getConnectionManager().shutdown();} @AT@ 7127 @LENGTH@ 310
------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode()) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 6985 @LENGTH@ 89
------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue())) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 7087 @LENGTH@ 88
------INS Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 7366 @LENGTH@ 71
---------INS ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @TO@ Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @AT@ 7384 @LENGTH@ 39
------------MOV MethodInvocation@@response.getEntity().getContent().close() @TO@ ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @AT@ 7188 @LENGTH@ 41
---------------DEL MethodInvocation@@MethodName:getContent:[] @AT@ 7188 @LENGTH@ 33
---------------DEL MethodInvocation@@MethodName:getEntity:[] @AT@ 7188 @LENGTH@ 20
---------------UPD SimpleName@@Name:response @TO@ Name:HttpClientUtils @AT@ 7188 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:close:[] @TO@ MethodName:closeQuietly:[response] @AT@ 7222 @LENGTH@ 7
------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:close:[] @AT@ 7413 @LENGTH@ 8
---DEL ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @AT@ 7188 @LENGTH@ 42
---MOV ExpressionStatement@@MethodInvocation:System.out.println("Executed HTTP request") @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");}  finally {  client.getConnectionManager().shutdown();} @AT@ 7243 @LENGTH@ 44
---DEL ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @AT@ 7662 @LENGTH@ 42
---INS TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");}  finally {  client.getConnectionManager().shutdown();} @AT@ 7666 @LENGTH@ 310
------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode()) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 7459 @LENGTH@ 89
------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue())) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 7561 @LENGTH@ 88
------INS Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 7905 @LENGTH@ 71
---------INS ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @TO@ Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @AT@ 7923 @LENGTH@ 39
------------MOV MethodInvocation@@response.getEntity().getContent().close() @TO@ ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @AT@ 7662 @LENGTH@ 41
---------------DEL MethodInvocation@@MethodName:getContent:[] @AT@ 7662 @LENGTH@ 33
---------------DEL MethodInvocation@@MethodName:getEntity:[] @AT@ 7662 @LENGTH@ 20
---------------UPD SimpleName@@Name:response @TO@ Name:HttpClientUtils @AT@ 7662 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:close:[] @TO@ MethodName:closeQuietly:[response] @AT@ 7696 @LENGTH@ 7
------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:close:[] @AT@ 7952 @LENGTH@ 8
---MOV ExpressionStatement@@MethodInvocation:System.out.println("Executed HTTP request") @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");}  finally {  client.getConnectionManager().shutdown();} @AT@ 7717 @LENGTH@ 44
---UPD Block@@FinallyBody:{  client.getConnectionManager().shutdown();} @TO@ FinallyBody:{  HttpClientUtils.closeQuietly(client);} @AT@ 7780 @LENGTH@ 65
------UPD ExpressionStatement@@MethodInvocation:client.getConnectionManager().shutdown() @TO@ MethodInvocation:HttpClientUtils.closeQuietly(client) @AT@ 7794 @LENGTH@ 41
---------UPD MethodInvocation@@client.getConnectionManager().shutdown() @TO@ HttpClientUtils.closeQuietly(client) @AT@ 7794 @LENGTH@ 40
------------DEL MethodInvocation@@MethodName:getConnectionManager:[] @AT@ 7794 @LENGTH@ 29
------------UPD SimpleName@@Name:client @TO@ Name:HttpClientUtils @AT@ 7794 @LENGTH@ 6
------------UPD SimpleName@@MethodName:shutdown:[] @TO@ MethodName:closeQuietly:[client] @AT@ 7824 @LENGTH@ 10
---------------INS SimpleName@@client @TO@ SimpleName@@MethodName:shutdown:[] @AT@ 8095 @LENGTH@ 6


UPD SwitchStatement@@switch (EndpointType.fromUri(properties.getType())) {case POLLING:  endpoint=new TwitterEndpointPolling(uri,this,properties);break;case EVENT:endpoint=new TwitterEndpointEvent(uri,this,properties);break;default :endpoint=new TwitterEndpointDirect(uri,this,properties);break;} @TO@ switch (properties.getType()) {case POLLING:  endpoint=new TwitterEndpointPolling(uri,this,properties);break;case EVENT:endpoint=new TwitterEndpointEvent(uri,this,properties);break;default :endpoint=new TwitterEndpointDirect(uri,this,properties);break;} @AT@ 1905 @LENGTH@ 398
---DEL MethodInvocation@@EndpointType.fromUri(properties.getType()) @AT@ 1913 @LENGTH@ 42
------DEL SimpleName@@Name:EndpointType @AT@ 1913 @LENGTH@ 12
------DEL SimpleName@@MethodName:fromUri:[properties.getType()] @AT@ 1926 @LENGTH@ 29
---------DEL MethodInvocation@@properties.getType() @AT@ 1934 @LENGTH@ 20
---INS MethodInvocation@@properties.getType() @TO@ SwitchStatement@@switch (EndpointType.fromUri(properties.getType())) {case POLLING:  endpoint=new TwitterEndpointPolling(uri,this,properties);break;case EVENT:endpoint=new TwitterEndpointEvent(uri,this,properties);break;default :endpoint=new TwitterEndpointDirect(uri,this,properties);break;} @AT@ 1914 @LENGTH@ 20
------MOV SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getType() @AT@ 1934 @LENGTH@ 10
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@properties.getType() @AT@ 1945 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:apiMethod=ApiConsumerHelper.findMethod(endpoint,this,log) @TO@ Assignment:apiMethod=ApiConsumerHelper.findMethod(endpoint,this) @AT@ 2399 @LENGTH@ 62
---UPD Assignment@@apiMethod=ApiConsumerHelper.findMethod(endpoint,this,log) @TO@ apiMethod=ApiConsumerHelper.findMethod(endpoint,this) @AT@ 2399 @LENGTH@ 61
------UPD MethodInvocation@@ApiConsumerHelper.findMethod(endpoint,this,log) @TO@ ApiConsumerHelper.findMethod(endpoint,this) @AT@ 2411 @LENGTH@ 49
---------UPD SimpleName@@MethodName:findMethod:[endpoint, this, log] @TO@ MethodName:findMethod:[endpoint, this] @AT@ 2429 @LENGTH@ 31
------------DEL SimpleName@@log @AT@ 2456 @LENGTH@ 3


MOV MethodDeclaration@@static, Map<String,String>, MethodName:asMap, String... strings,  @TO@ TypeDeclaration@@[final]TestUtils,  @AT@ 1163 @LENGTH@ 422


UPD IfStatement@@if (multiple) {synchronized (this.pendingConfirms) {    Map<Long,Listener> involvedListeners=this.listenerForSeq.headMap(seq + 1);    Set<Listener> listeners=new HashSet<Listener>(involvedListeners.values());    for (    Listener involvedListener : listeners) {      SortedMap<Long,PendingConfirm> confirmsMap=this.pendingConfirms.get(involvedListener);      if (confirmsMap != null) {        Map<Long,PendingConfirm> confirms=confirmsMap.headMap(seq + 1);        Iterator<Entry<Long,PendingConfirm>> iterator=confirms.entrySet().iterator();        while (iterator.hasNext()) {          Entry<Long,PendingConfirm> entry=iterator.next();          iterator.remove();          doHandleConfirm(ack,involvedListener,entry.getValue());        }      }    }  }} else {  Listener listener=this.listenerForSeq.get(seq);  if (listener != null) {    PendingConfirm pendingConfirm=this.pendingConfirms.get(listener).remove(seq);    if (pendingConfirm != null) {      doHandleConfirm(ack,listener,pendingConfirm);    }  } else {    logger.error("No listener for seq:" + seq);  }} @TO@ if (multiple) {synchronized (this.pendingConfirms) {    Map<Long,Listener> involvedListeners=this.listenerForSeq.headMap(seq + 1);    Set<Listener> listeners=new HashSet<Listener>(involvedListeners.values());    for (    Listener involvedListener : listeners) {      SortedMap<Long,PendingConfirm> confirmsMap=this.pendingConfirms.get(involvedListener);      if (confirmsMap != null) {        Map<Long,PendingConfirm> confirms=confirmsMap.headMap(seq + 1);        Iterator<Entry<Long,PendingConfirm>> iterator=confirms.entrySet().iterator();        while (iterator.hasNext()) {          Entry<Long,PendingConfirm> entry=iterator.next();          iterator.remove();          doHandleConfirm(ack,involvedListener,entry.getValue());        }      }    }    List<Long> seqs=new ArrayList<Long>(involvedListeners.keySet());    for (    Long key : seqs) {      this.listenerForSeq.remove(key);    }  }} else {  Listener listener=this.listenerForSeq.remove(seq);  if (listener != null) {    PendingConfirm pendingConfirm=this.pendingConfirms.get(listener).remove(seq);    if (pendingConfirm != null) {      doHandleConfirm(ack,listener,pendingConfirm);    }  } else {    logger.error("No listener for seq:" + seq);  }} @AT@ 21835 @LENGTH@ 1354
---UPD Block@@ThenBody:{synchronized (this.pendingConfirms) {    Map<Long,Listener> involvedListeners=this.listenerForSeq.headMap(seq + 1);    Set<Listener> listeners=new HashSet<Listener>(involvedListeners.values());    for (    Listener involvedListener : listeners) {      SortedMap<Long,PendingConfirm> confirmsMap=this.pendingConfirms.get(involvedListener);      if (confirmsMap != null) {        Map<Long,PendingConfirm> confirms=confirmsMap.headMap(seq + 1);        Iterator<Entry<Long,PendingConfirm>> iterator=confirms.entrySet().iterator();        while (iterator.hasNext()) {          Entry<Long,PendingConfirm> entry=iterator.next();          iterator.remove();          doHandleConfirm(ack,involvedListener,entry.getValue());        }      }    }  }} @TO@ ThenBody:{synchronized (this.pendingConfirms) {    Map<Long,Listener> involvedListeners=this.listenerForSeq.headMap(seq + 1);    Set<Listener> listeners=new HashSet<Listener>(involvedListeners.values());    for (    Listener involvedListener : listeners) {      SortedMap<Long,PendingConfirm> confirmsMap=this.pendingConfirms.get(involvedListener);      if (confirmsMap != null) {        Map<Long,PendingConfirm> confirms=confirmsMap.headMap(seq + 1);        Iterator<Entry<Long,PendingConfirm>> iterator=confirms.entrySet().iterator();        while (iterator.hasNext()) {          Entry<Long,PendingConfirm> entry=iterator.next();          iterator.remove();          doHandleConfirm(ack,involvedListener,entry.getValue());        }      }    }    List<Long> seqs=new ArrayList<Long>(involvedListeners.keySet());    for (    Long key : seqs) {      this.listenerForSeq.remove(key);    }  }} @AT@ 21849 @LENGTH@ 1002
------UPD SynchronizedStatement@@synchronized (this.pendingConfirms) {  Map<Long,Listener> involvedListeners=this.listenerForSeq.headMap(seq + 1);  Set<Listener> listeners=new HashSet<Listener>(involvedListeners.values());  for (  Listener involvedListener : listeners) {    SortedMap<Long,PendingConfirm> confirmsMap=this.pendingConfirms.get(involvedListener);    if (confirmsMap != null) {      Map<Long,PendingConfirm> confirms=confirmsMap.headMap(seq + 1);      Iterator<Entry<Long,PendingConfirm>> iterator=confirms.entrySet().iterator();      while (iterator.hasNext()) {        Entry<Long,PendingConfirm> entry=iterator.next();        iterator.remove();        doHandleConfirm(ack,involvedListener,entry.getValue());      }    }  }} @TO@ synchronized (this.pendingConfirms) {  Map<Long,Listener> involvedListeners=this.listenerForSeq.headMap(seq + 1);  Set<Listener> listeners=new HashSet<Listener>(involvedListeners.values());  for (  Listener involvedListener : listeners) {    SortedMap<Long,PendingConfirm> confirmsMap=this.pendingConfirms.get(involvedListener);    if (confirmsMap != null) {      Map<Long,PendingConfirm> confirms=confirmsMap.headMap(seq + 1);      Iterator<Entry<Long,PendingConfirm>> iterator=confirms.entrySet().iterator();      while (iterator.hasNext()) {        Entry<Long,PendingConfirm> entry=iterator.next();        iterator.remove();        doHandleConfirm(ack,involvedListener,entry.getValue());      }    }  }  List<Long> seqs=new ArrayList<Long>(involvedListeners.keySet());  for (  Long key : seqs) {    this.listenerForSeq.remove(key);  }} @AT@ 22003 @LENGTH@ 844
---------UPD Block@@SyncBody:{  Map<Long,Listener> involvedListeners=this.listenerForSeq.headMap(seq + 1);  Set<Listener> listeners=new HashSet<Listener>(involvedListeners.values());  for (  Listener involvedListener : listeners) {    SortedMap<Long,PendingConfirm> confirmsMap=this.pendingConfirms.get(involvedListener);    if (confirmsMap != null) {      Map<Long,PendingConfirm> confirms=confirmsMap.headMap(seq + 1);      Iterator<Entry<Long,PendingConfirm>> iterator=confirms.entrySet().iterator();      while (iterator.hasNext()) {        Entry<Long,PendingConfirm> entry=iterator.next();        iterator.remove();        doHandleConfirm(ack,involvedListener,entry.getValue());      }    }  }} @TO@ SyncBody:{  Map<Long,Listener> involvedListeners=this.listenerForSeq.headMap(seq + 1);  Set<Listener> listeners=new HashSet<Listener>(involvedListeners.values());  for (  Listener involvedListener : listeners) {    SortedMap<Long,PendingConfirm> confirmsMap=this.pendingConfirms.get(involvedListener);    if (confirmsMap != null) {      Map<Long,PendingConfirm> confirms=confirmsMap.headMap(seq + 1);      Iterator<Entry<Long,PendingConfirm>> iterator=confirms.entrySet().iterator();      while (iterator.hasNext()) {        Entry<Long,PendingConfirm> entry=iterator.next();        iterator.remove();        doHandleConfirm(ack,involvedListener,entry.getValue());      }    }  }  List<Long> seqs=new ArrayList<Long>(involvedListeners.keySet());  for (  Long key : seqs) {    this.listenerForSeq.remove(key);  }} @AT@ 22038 @LENGTH@ 809
------------INS VariableDeclarationStatement@@List<Long> seqs=new ArrayList<Long>(involvedListeners.keySet()); @TO@ Block@@SyncBody:{  Map<Long,Listener> involvedListeners=this.listenerForSeq.headMap(seq + 1);  Set<Listener> listeners=new HashSet<Listener>(involvedListeners.values());  for (  Listener involvedListener : listeners) {    SortedMap<Long,PendingConfirm> confirmsMap=this.pendingConfirms.get(involvedListener);    if (confirmsMap != null) {      Map<Long,PendingConfirm> confirms=confirmsMap.headMap(seq + 1);      Iterator<Entry<Long,PendingConfirm>> iterator=confirms.entrySet().iterator();      while (iterator.hasNext()) {        Entry<Long,PendingConfirm> entry=iterator.next();        iterator.remove();        doHandleConfirm(ack,involvedListener,entry.getValue());      }    }  }} @AT@ 22955 @LENGTH@ 66
---------------INS ParameterizedType@@List<Long> @TO@ VariableDeclarationStatement@@List<Long> seqs=new ArrayList<Long>(involvedListeners.keySet()); @AT@ 22955 @LENGTH@ 10
------------------INS SimpleType@@List @TO@ ParameterizedType@@List<Long> @AT@ 22955 @LENGTH@ 4
------------------INS SimpleType@@Long @TO@ ParameterizedType@@List<Long> @AT@ 22960 @LENGTH@ 4
---------------INS VariableDeclarationFragment@@seqs=new ArrayList<Long>(involvedListeners.keySet()) @TO@ VariableDeclarationStatement@@List<Long> seqs=new ArrayList<Long>(involvedListeners.keySet()); @AT@ 22966 @LENGTH@ 54
------------------INS SimpleName@@seqs @TO@ VariableDeclarationFragment@@seqs=new ArrayList<Long>(involvedListeners.keySet()) @AT@ 22966 @LENGTH@ 4
------------------INS ClassInstanceCreation@@ArrayList<Long>[involvedListeners.keySet()] @TO@ VariableDeclarationFragment@@seqs=new ArrayList<Long>(involvedListeners.keySet()) @AT@ 22973 @LENGTH@ 47
---------------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<Long>[involvedListeners.keySet()] @AT@ 22973 @LENGTH@ 3
---------------------INS ParameterizedType@@ArrayList<Long> @TO@ ClassInstanceCreation@@ArrayList<Long>[involvedListeners.keySet()] @AT@ 22977 @LENGTH@ 15
------------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<Long> @AT@ 22977 @LENGTH@ 9
------------------------INS SimpleType@@Long @TO@ ParameterizedType@@ArrayList<Long> @AT@ 22987 @LENGTH@ 4
---------------------INS MethodInvocation@@involvedListeners.keySet() @TO@ ClassInstanceCreation@@ArrayList<Long>[involvedListeners.keySet()] @AT@ 22993 @LENGTH@ 26
------------------------INS SimpleName@@Name:involvedListeners @TO@ MethodInvocation@@involvedListeners.keySet() @AT@ 22993 @LENGTH@ 17
------------------------INS SimpleName@@MethodName:keySet:[] @TO@ MethodInvocation@@involvedListeners.keySet() @AT@ 23011 @LENGTH@ 8
------------INS EnhancedForStatement@@for (Long key : seqs) {  this.listenerForSeq.remove(key);} @TO@ Block@@SyncBody:{  Map<Long,Listener> involvedListeners=this.listenerForSeq.headMap(seq + 1);  Set<Listener> listeners=new HashSet<Listener>(involvedListeners.values());  for (  Listener involvedListener : listeners) {    SortedMap<Long,PendingConfirm> confirmsMap=this.pendingConfirms.get(involvedListener);    if (confirmsMap != null) {      Map<Long,PendingConfirm> confirms=confirmsMap.headMap(seq + 1);      Iterator<Entry<Long,PendingConfirm>> iterator=confirms.entrySet().iterator();      while (iterator.hasNext()) {        Entry<Long,PendingConfirm> entry=iterator.next();        iterator.remove();        doHandleConfirm(ack,involvedListener,entry.getValue());      }    }  }} @AT@ 23026 @LENGTH@ 67
---------------INS SingleVariableDeclaration@@Long key @TO@ EnhancedForStatement@@for (Long key : seqs) {  this.listenerForSeq.remove(key);} @AT@ 23031 @LENGTH@ 8
------------------INS SimpleType@@Long @TO@ SingleVariableDeclaration@@Long key @AT@ 23031 @LENGTH@ 4
------------------INS SimpleName@@key @TO@ SingleVariableDeclaration@@Long key @AT@ 23036 @LENGTH@ 3
---------------INS SimpleName@@seqs @TO@ EnhancedForStatement@@for (Long key : seqs) {  this.listenerForSeq.remove(key);} @AT@ 23042 @LENGTH@ 4
---------------INS ExpressionStatement@@MethodInvocation:this.listenerForSeq.remove(key) @TO@ EnhancedForStatement@@for (Long key : seqs) {  this.listenerForSeq.remove(key);} @AT@ 23055 @LENGTH@ 32
------------------INS MethodInvocation@@this.listenerForSeq.remove(key) @TO@ ExpressionStatement@@MethodInvocation:this.listenerForSeq.remove(key) @AT@ 23055 @LENGTH@ 31
---------------------INS FieldAccess@@this.listenerForSeq @TO@ MethodInvocation@@this.listenerForSeq.remove(key) @AT@ 23055 @LENGTH@ 19
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.listenerForSeq @AT@ 23055 @LENGTH@ 4
------------------------INS SimpleName@@listenerForSeq @TO@ FieldAccess@@this.listenerForSeq @AT@ 23060 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:remove:[key] @TO@ MethodInvocation@@this.listenerForSeq.remove(key) @AT@ 23075 @LENGTH@ 11
------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:remove:[key] @AT@ 23082 @LENGTH@ 3
---UPD Block@@ElseBody:{  Listener listener=this.listenerForSeq.get(seq);  if (listener != null) {    PendingConfirm pendingConfirm=this.pendingConfirms.get(listener).remove(seq);    if (pendingConfirm != null) {      doHandleConfirm(ack,listener,pendingConfirm);    }  } else {    logger.error("No listener for seq:" + seq);  }} @TO@ ElseBody:{  Listener listener=this.listenerForSeq.remove(seq);  if (listener != null) {    PendingConfirm pendingConfirm=this.pendingConfirms.get(listener).remove(seq);    if (pendingConfirm != null) {      doHandleConfirm(ack,listener,pendingConfirm);    }  } else {    logger.error("No listener for seq:" + seq);  }} @AT@ 22859 @LENGTH@ 330
------UPD VariableDeclarationStatement@@Listener listener=this.listenerForSeq.get(seq); @TO@ Listener listener=this.listenerForSeq.remove(seq); @AT@ 22864 @LENGTH@ 49
---------UPD VariableDeclarationFragment@@listener=this.listenerForSeq.get(seq) @TO@ listener=this.listenerForSeq.remove(seq) @AT@ 22873 @LENGTH@ 39
------------UPD MethodInvocation@@this.listenerForSeq.get(seq) @TO@ this.listenerForSeq.remove(seq) @AT@ 22884 @LENGTH@ 28
---------------UPD SimpleName@@MethodName:get:[seq] @TO@ MethodName:remove:[seq] @AT@ 22904 @LENGTH@ 8


UPD VariableDeclarationStatement@@PatternsRequestCondition patternsInfo=new PatternsRequestCondition(patterns); @TO@ PatternsRequestCondition patternsInfo=new PatternsRequestCondition(patterns,getUrlPathHelper(),getPathMatcher(),useSuffixPatternMatch(),useTrailingSlashMatch(),getFileExtensions()); @AT@ 5073 @LENGTH@ 79
---UPD VariableDeclarationFragment@@patternsInfo=new PatternsRequestCondition(patterns) @TO@ patternsInfo=new PatternsRequestCondition(patterns,getUrlPathHelper(),getPathMatcher(),useSuffixPatternMatch(),useTrailingSlashMatch(),getFileExtensions()) @AT@ 5098 @LENGTH@ 53
------UPD ClassInstanceCreation@@PatternsRequestCondition[patterns] @TO@ PatternsRequestCondition[patterns, getUrlPathHelper(), getPathMatcher(), useSuffixPatternMatch(), useTrailingSlashMatch(), getFileExtensions()] @AT@ 5113 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:getUrlPathHelper:[] @TO@ ClassInstanceCreation@@PatternsRequestCondition[patterns] @AT@ 5153 @LENGTH@ 18
---------INS MethodInvocation@@MethodName:getPathMatcher:[] @TO@ ClassInstanceCreation@@PatternsRequestCondition[patterns] @AT@ 5177 @LENGTH@ 16
---------INS MethodInvocation@@MethodName:useSuffixPatternMatch:[] @TO@ ClassInstanceCreation@@PatternsRequestCondition[patterns] @AT@ 5195 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:useTrailingSlashMatch:[] @TO@ ClassInstanceCreation@@PatternsRequestCondition[patterns] @AT@ 5220 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:getFileExtensions:[] @TO@ ClassInstanceCreation@@PatternsRequestCondition[patterns] @AT@ 5245 @LENGTH@ 19


INS FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(SrpConverters.exceptionConverter())] @TO@ TypeDeclaration@@[public]SrpConnection, [RedisConnection] @AT@ 2936 @LENGTH@ 155
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(SrpConverters.exceptionConverter())] @AT@ 2936 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(SrpConverters.exceptionConverter())] @AT@ 2944 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(SrpConverters.exceptionConverter())] @AT@ 2951 @LENGTH@ 5
---INS SimpleType@@ExceptionTranslationStrategy @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(SrpConverters.exceptionConverter())] @AT@ 2957 @LENGTH@ 28
---INS VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(SrpConverters.exceptionConverter()) @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(SrpConverters.exceptionConverter())] @AT@ 2986 @LENGTH@ 104
------INS SimpleName@@EXCEPTION_TRANSLATION @TO@ VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(SrpConverters.exceptionConverter()) @AT@ 2986 @LENGTH@ 21
------INS ClassInstanceCreation@@FallbackExceptionTranslationStrategy[SrpConverters.exceptionConverter()] @TO@ VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(SrpConverters.exceptionConverter()) @AT@ 3010 @LENGTH@ 80
---------INS New@@new @TO@ ClassInstanceCreation@@FallbackExceptionTranslationStrategy[SrpConverters.exceptionConverter()] @AT@ 3010 @LENGTH@ 3
---------INS SimpleType@@FallbackExceptionTranslationStrategy @TO@ ClassInstanceCreation@@FallbackExceptionTranslationStrategy[SrpConverters.exceptionConverter()] @AT@ 3014 @LENGTH@ 36
---------INS MethodInvocation@@SrpConverters.exceptionConverter() @TO@ ClassInstanceCreation@@FallbackExceptionTranslationStrategy[SrpConverters.exceptionConverter()] @AT@ 3055 @LENGTH@ 34
------------INS SimpleName@@Name:SrpConverters @TO@ MethodInvocation@@SrpConverters.exceptionConverter() @AT@ 3055 @LENGTH@ 13
------------INS SimpleName@@MethodName:exceptionConverter:[] @TO@ MethodInvocation@@SrpConverters.exceptionConverter() @AT@ 3069 @LENGTH@ 20


UPD VariableDeclarationStatement@@EventEndpoint answer=new EventEndpoint(uri,this); @TO@ EventEndpoint answer=new EventEndpoint(uri,this,remaining); @AT@ 2941 @LENGTH@ 52
---UPD VariableDeclarationFragment@@answer=new EventEndpoint(uri,this) @TO@ answer=new EventEndpoint(uri,this,remaining) @AT@ 2955 @LENGTH@ 37
------UPD ClassInstanceCreation@@EventEndpoint[uri, this] @TO@ EventEndpoint[uri, this, remaining] @AT@ 2964 @LENGTH@ 28
---------INS SimpleName@@remaining @TO@ ClassInstanceCreation@@EventEndpoint[uri, this] @AT@ 2993 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:current=ChainedTransformationTools.nextInChain(current,resolver) @TO@ Assignment:current=ChainedTransformationTools.nextInChainResource(current,resolver) @AT@ 6515 @LENGTH@ 68
---UPD Assignment@@current=ChainedTransformationTools.nextInChain(current,resolver) @TO@ current=ChainedTransformationTools.nextInChainResource(current,resolver) @AT@ 6515 @LENGTH@ 67
------UPD MethodInvocation@@ChainedTransformationTools.nextInChain(current,resolver) @TO@ ChainedTransformationTools.nextInChainResource(current,resolver) @AT@ 6525 @LENGTH@ 57
---------UPD SimpleName@@MethodName:nextInChain:[current, resolver] @TO@ MethodName:nextInChainResource:[current, resolver] @AT@ 6552 @LENGTH@ 30


INS ReturnStatement@@SimpleName:answer @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 10542 @LENGTH@ 14
---MOV SimpleName@@answer @TO@ ReturnStatement@@SimpleName:answer @AT@ 10673 @LENGTH@ 6


UPD VariableDeclarationStatement@@Option[] options=combine(getDefaultCamelKarafOptions(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-20.xml")).add("org/apache/camel/itest/osgi/blueprint/example.vm",OSGiBlueprintTestSupport.class.getResource("example.vm")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle20").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-21.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle21").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-13.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle22").add(TestRouteBuilder.class).build(withBnd())).noStart(),loadCamelFeatures("camel-blueprint","camel-velocity")); @TO@ Option[] options=combine(getDefaultCamelKarafOptions(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-20.xml")).add("org/apache/camel/itest/osgi/blueprint/example.vm",OSGiBlueprintTestSupport.class.getResource("example.vm")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle20").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-21.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle21").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-13.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle22").add(TestRouteBuilder.class).build(withBnd())).noStart(),loadCamelFeatures("camel-blueprint","camel-velocity")); @AT@ 4433 @LENGTH@ 1756
---UPD VariableDeclarationFragment@@options=combine(getDefaultCamelKarafOptions(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-20.xml")).add("org/apache/camel/itest/osgi/blueprint/example.vm",OSGiBlueprintTestSupport.class.getResource("example.vm")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle20").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-21.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle21").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-13.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle22").add(TestRouteBuilder.class).build(withBnd())).noStart(),loadCamelFeatures("camel-blueprint","camel-velocity")) @TO@ options=combine(getDefaultCamelKarafOptions(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-20.xml")).add("org/apache/camel/itest/osgi/blueprint/example.vm",OSGiBlueprintTestSupport.class.getResource("example.vm")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle20").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-21.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle21").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-13.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle22").add(TestRouteBuilder.class).build(withBnd())).noStart(),loadCamelFeatures("camel-blueprint","camel-velocity")) @AT@ 4442 @LENGTH@ 1746
------UPD MethodInvocation@@combine(getDefaultCamelKarafOptions(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-20.xml")).add("org/apache/camel/itest/osgi/blueprint/example.vm",OSGiBlueprintTestSupport.class.getResource("example.vm")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle20").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-21.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle21").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-13.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle22").add(TestRouteBuilder.class).build(withBnd())).noStart(),loadCamelFeatures("camel-blueprint","camel-velocity")) @TO@ combine(getDefaultCamelKarafOptions(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-20.xml")).add("org/apache/camel/itest/osgi/blueprint/example.vm",OSGiBlueprintTestSupport.class.getResource("example.vm")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle20").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-21.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle21").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-13.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle22").add(TestRouteBuilder.class).build(withBnd())).noStart(),loadCamelFeatures("camel-blueprint","camel-velocity")) @AT@ 4452 @LENGTH@ 1736
---------UPD SimpleName@@MethodName:combine:[getDefaultCamelKarafOptions(), bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").build()).noStart(), bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-20.xml")).add("org/apache/camel/itest/osgi/blueprint/example.vm",OSGiBlueprintTestSupport.class.getResource("example.vm")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle20").build()).noStart(), bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-21.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle21").build()).noStart(), bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-13.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle22").add(TestRouteBuilder.class).build(withBnd())).noStart(), loadCamelFeatures("camel-blueprint","camel-velocity")] @TO@ MethodName:combine:[getDefaultCamelKarafOptions(), bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build()).noStart(), bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-20.xml")).add("org/apache/camel/itest/osgi/blueprint/example.vm",OSGiBlueprintTestSupport.class.getResource("example.vm")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle20").build()).noStart(), bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-21.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle21").build()).noStart(), bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-13.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle22").add(TestRouteBuilder.class).build(withBnd())).noStart(), loadCamelFeatures("camel-blueprint","camel-velocity")] @AT@ 4452 @LENGTH@ 1736
------------UPD MethodInvocation@@bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").build()).noStart() @TO@ bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build()).noStart() @AT@ 4525 @LENGTH@ 417
---------------UPD MethodInvocation@@MethodName:bundle:[newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").build()] @TO@ MethodName:bundle:[newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build()] @AT@ 4525 @LENGTH@ 407
------------------UPD MethodInvocation@@newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").build() @TO@ newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build() @AT@ 4532 @LENGTH@ 399
---------------------INS MethodInvocation@@MethodName:set:[Constants.DYNAMICIMPORT_PACKAGE, "*"] @TO@ MethodInvocation@@newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").build() @AT@ 4532 @LENGTH@ 433
------------------------INS QualifiedName@@Constants.DYNAMICIMPORT_PACKAGE @TO@ MethodInvocation@@MethodName:set:[Constants.DYNAMICIMPORT_PACKAGE, "*"] @AT@ 4928 @LENGTH@ 31
---------------------------INS SimpleName@@Constants @TO@ QualifiedName@@Constants.DYNAMICIMPORT_PACKAGE @AT@ 4928 @LENGTH@ 9
---------------------------INS SimpleName@@DYNAMICIMPORT_PACKAGE @TO@ QualifiedName@@Constants.DYNAMICIMPORT_PACKAGE @AT@ 4938 @LENGTH@ 21
------------------------INS StringLiteral@@"*" @TO@ MethodInvocation@@MethodName:set:[Constants.DYNAMICIMPORT_PACKAGE, "*"] @AT@ 4961 @LENGTH@ 3
---------------------INS MethodInvocation@@MethodName:set:[Constants.DYNAMICIMPORT_PACKAGE, "*"] @TO@ MethodInvocation@@newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-19.xml")).add("org/apache/camel/itest/osgi/blueprint/example.xsl",OSGiBlueprintTestSupport.class.getResource("example.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle19").build() @AT@ 4532 @LENGTH@ 433
------------------------INS QualifiedName@@Constants.DYNAMICIMPORT_PACKAGE @TO@ MethodInvocation@@MethodName:set:[Constants.DYNAMICIMPORT_PACKAGE, "*"] @AT@ 4928 @LENGTH@ 31
---------------------------INS SimpleName@@Constants @TO@ QualifiedName@@Constants.DYNAMICIMPORT_PACKAGE @AT@ 4928 @LENGTH@ 9
---------------------------INS SimpleName@@DYNAMICIMPORT_PACKAGE @TO@ QualifiedName@@Constants.DYNAMICIMPORT_PACKAGE @AT@ 4938 @LENGTH@ 21
------------------------INS StringLiteral@@"*" @TO@ MethodInvocation@@MethodName:set:[Constants.DYNAMICIMPORT_PACKAGE, "*"] @AT@ 4961 @LENGTH@ 3


UPD CatchClause@@catch (Exception e) {  result=connection.eval(scriptBytes(script),returnType,numKeys,keysAndArgs);} @TO@ catch (Exception e) {  if (!expectionContainsNoScriptError(e)) {    throw e instanceof RuntimeException ? (RuntimeException)e : new RedisSystemException(e.getMessage(),e);  }  result=connection.eval(scriptBytes(script),returnType,numKeys,keysAndArgs);} @AT@ 3300 @LENGTH@ 109
---INS IfStatement@@if (!expectionContainsNoScriptError(e)) {  throw e instanceof RuntimeException ? (RuntimeException)e : new RedisSystemException(e.getMessage(),e);} @TO@ CatchClause@@catch (Exception e) {  result=connection.eval(scriptBytes(script),returnType,numKeys,keysAndArgs);} @AT@ 3514 @LENGTH@ 156
------INS PrefixExpression@@!expectionContainsNoScriptError(e) @TO@ IfStatement@@if (!expectionContainsNoScriptError(e)) {  throw e instanceof RuntimeException ? (RuntimeException)e : new RedisSystemException(e.getMessage(),e);} @AT@ 3518 @LENGTH@ 34
---------INS Operator@@! @TO@ PrefixExpression@@!expectionContainsNoScriptError(e) @AT@ 3518 @LENGTH@ 1
---------INS MethodInvocation@@expectionContainsNoScriptError(e) @TO@ PrefixExpression@@!expectionContainsNoScriptError(e) @AT@ 3519 @LENGTH@ 33
------------INS SimpleName@@MethodName:expectionContainsNoScriptError:[e] @TO@ MethodInvocation@@expectionContainsNoScriptError(e) @AT@ 3519 @LENGTH@ 33
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:expectionContainsNoScriptError:[e] @AT@ 3550 @LENGTH@ 1
------INS Block@@ThenBody:{  throw e instanceof RuntimeException ? (RuntimeException)e : new RedisSystemException(e.getMessage(),e);} @TO@ IfStatement@@if (!expectionContainsNoScriptError(e)) {  throw e instanceof RuntimeException ? (RuntimeException)e : new RedisSystemException(e.getMessage(),e);} @AT@ 3554 @LENGTH@ 116
---------INS ThrowStatement@@ConditionalExpression:e instanceof RuntimeException ? (RuntimeException)e : new RedisSystemException(e.getMessage(),e) @TO@ Block@@ThenBody:{  throw e instanceof RuntimeException ? (RuntimeException)e : new RedisSystemException(e.getMessage(),e);} @AT@ 3560 @LENGTH@ 105
------------INS ConditionalExpression@@e instanceof RuntimeException ? (RuntimeException)e : new RedisSystemException(e.getMessage(),e) @TO@ ThrowStatement@@ConditionalExpression:e instanceof RuntimeException ? (RuntimeException)e : new RedisSystemException(e.getMessage(),e) @AT@ 3566 @LENGTH@ 98
---------------INS InstanceofExpression@@e instanceof RuntimeException @TO@ ConditionalExpression@@e instanceof RuntimeException ? (RuntimeException)e : new RedisSystemException(e.getMessage(),e) @AT@ 3566 @LENGTH@ 29
------------------INS SimpleName@@e @TO@ InstanceofExpression@@e instanceof RuntimeException @AT@ 3566 @LENGTH@ 1
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@e instanceof RuntimeException @AT@ 3568 @LENGTH@ 10
------------------INS SimpleType@@RuntimeException @TO@ InstanceofExpression@@e instanceof RuntimeException @AT@ 3579 @LENGTH@ 16
---------------INS CastExpression@@(RuntimeException)e @TO@ ConditionalExpression@@e instanceof RuntimeException ? (RuntimeException)e : new RedisSystemException(e.getMessage(),e) @AT@ 3598 @LENGTH@ 20
------------------INS SimpleType@@RuntimeException @TO@ CastExpression@@(RuntimeException)e @AT@ 3599 @LENGTH@ 16
------------------INS SimpleName@@e @TO@ CastExpression@@(RuntimeException)e @AT@ 3617 @LENGTH@ 1
---------------INS ClassInstanceCreation@@RedisSystemException[e.getMessage(), e] @TO@ ConditionalExpression@@e instanceof RuntimeException ? (RuntimeException)e : new RedisSystemException(e.getMessage(),e) @AT@ 3621 @LENGTH@ 43
------------------INS New@@new @TO@ ClassInstanceCreation@@RedisSystemException[e.getMessage(), e] @AT@ 3621 @LENGTH@ 3
------------------INS SimpleType@@RedisSystemException @TO@ ClassInstanceCreation@@RedisSystemException[e.getMessage(), e] @AT@ 3625 @LENGTH@ 20
------------------INS MethodInvocation@@e.getMessage() @TO@ ClassInstanceCreation@@RedisSystemException[e.getMessage(), e] @AT@ 3646 @LENGTH@ 14
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 3646 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 3648 @LENGTH@ 12
------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@RedisSystemException[e.getMessage(), e] @AT@ 3662 @LENGTH@ 1


INS MethodDeclaration@@public, static, URI, MethodName:createURI, URL baseURL, int requestDuration, URISyntaxException,  @TO@ TypeDeclaration@@[@WebServlet(urlPatterns={SimpleServlet.SERVLET_PATH}), public]SimpleServlet, HttpServlet @AT@ 2173 @LENGTH@ 258
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, URI, MethodName:createURI, URL baseURL, int requestDuration, URISyntaxException,  @AT@ 2173 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, URI, MethodName:createURI, URL baseURL, int requestDuration, URISyntaxException,  @AT@ 2180 @LENGTH@ 6
---INS SimpleType@@URI @TO@ MethodDeclaration@@public, static, URI, MethodName:createURI, URL baseURL, int requestDuration, URISyntaxException,  @AT@ 2187 @LENGTH@ 3
---INS SimpleName@@MethodName:createURI @TO@ MethodDeclaration@@public, static, URI, MethodName:createURI, URL baseURL, int requestDuration, URISyntaxException,  @AT@ 2191 @LENGTH@ 9
---INS SingleVariableDeclaration@@URL baseURL @TO@ MethodDeclaration@@public, static, URI, MethodName:createURI, URL baseURL, int requestDuration, URISyntaxException,  @AT@ 2201 @LENGTH@ 11
------INS SimpleType@@URL @TO@ SingleVariableDeclaration@@URL baseURL @AT@ 2201 @LENGTH@ 3
------INS SimpleName@@baseURL @TO@ SingleVariableDeclaration@@URL baseURL @AT@ 2205 @LENGTH@ 7
---INS SingleVariableDeclaration@@int requestDuration @TO@ MethodDeclaration@@public, static, URI, MethodName:createURI, URL baseURL, int requestDuration, URISyntaxException,  @AT@ 2214 @LENGTH@ 19
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int requestDuration @AT@ 2214 @LENGTH@ 3
------INS SimpleName@@requestDuration @TO@ SingleVariableDeclaration@@int requestDuration @AT@ 2218 @LENGTH@ 15
---INS SimpleType@@URISyntaxException @TO@ MethodDeclaration@@public, static, URI, MethodName:createURI, URL baseURL, int requestDuration, URISyntaxException,  @AT@ 2242 @LENGTH@ 18
---INS ReturnStatement@@MethodInvocation:baseURL.toURI().resolve(new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString()) @TO@ MethodDeclaration@@public, static, URI, MethodName:createURI, URL baseURL, int requestDuration, URISyntaxException,  @AT@ 2271 @LENGTH@ 154
------INS MethodInvocation@@baseURL.toURI().resolve(new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString()) @TO@ ReturnStatement@@MethodInvocation:baseURL.toURI().resolve(new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString()) @AT@ 2278 @LENGTH@ 146
---------INS MethodInvocation@@MethodName:toURI:[] @TO@ MethodInvocation@@baseURL.toURI().resolve(new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString()) @AT@ 2278 @LENGTH@ 15
---------INS SimpleName@@Name:baseURL @TO@ MethodInvocation@@baseURL.toURI().resolve(new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString()) @AT@ 2278 @LENGTH@ 7
---------INS SimpleName@@MethodName:resolve:[new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString()] @TO@ MethodInvocation@@baseURL.toURI().resolve(new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString()) @AT@ 2294 @LENGTH@ 130
------------INS MethodInvocation@@new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString() @TO@ SimpleName@@MethodName:resolve:[new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString()] @AT@ 2302 @LENGTH@ 121
---------------INS MethodInvocation@@MethodName:append:[requestDuration] @TO@ MethodInvocation@@new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString() @AT@ 2302 @LENGTH@ 110
------------------INS SimpleName@@requestDuration @TO@ MethodInvocation@@MethodName:append:[requestDuration] @AT@ 2396 @LENGTH@ 15
---------------INS MethodInvocation@@MethodName:append:['='] @TO@ MethodInvocation@@new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString() @AT@ 2302 @LENGTH@ 86
------------------INS CharacterLiteral@@'=' @TO@ MethodInvocation@@MethodName:append:['='] @AT@ 2384 @LENGTH@ 3
---------------INS MethodInvocation@@MethodName:append:[REQUEST_DURATION_PARAM] @TO@ MethodInvocation@@new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString() @AT@ 2302 @LENGTH@ 74
------------------INS SimpleName@@REQUEST_DURATION_PARAM @TO@ MethodInvocation@@MethodName:append:[REQUEST_DURATION_PARAM] @AT@ 2353 @LENGTH@ 22
---------------INS MethodInvocation@@MethodName:append:['?'] @TO@ MethodInvocation@@new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString() @AT@ 2302 @LENGTH@ 43
------------------INS CharacterLiteral@@'?' @TO@ MethodInvocation@@MethodName:append:['?'] @AT@ 2341 @LENGTH@ 3
---------------INS ClassInstanceCreation@@StringBuilder[SERVLET_NAME] @TO@ MethodInvocation@@new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString() @AT@ 2302 @LENGTH@ 31
------------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder[SERVLET_NAME] @AT@ 2302 @LENGTH@ 3
------------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder[SERVLET_NAME] @AT@ 2306 @LENGTH@ 13
------------------INS SimpleName@@SERVLET_NAME @TO@ ClassInstanceCreation@@StringBuilder[SERVLET_NAME] @AT@ 2320 @LENGTH@ 12
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString() @AT@ 2413 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ MethodDeclaration@@public, void, MethodName:testComponentConfiguration, Exception,  @AT@ 1852 @LENGTH@ 82
---INS MethodInvocation@@assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1852 @LENGTH@ 81
------INS SimpleName@@MethodName:assertTrue:[json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1852 @LENGTH@ 81
---------INS MethodInvocation@@json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")] @AT@ 1863 @LENGTH@ 69
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1863 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["\"host\": { \"kind\": \"path\", \"type\": \"string\""] @TO@ MethodInvocation@@json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1868 @LENGTH@ 64
---------------INS StringLiteral@@"\"host\": { \"kind\": \"path\", \"type\": \"string\"" @TO@ SimpleName@@MethodName:contains:["\"host\": { \"kind\": \"path\", \"type\": \"string\""] @AT@ 1877 @LENGTH@ 54


UPD ExpressionStatement@@MethodInvocation:assertEquals("124|ActiveMQ in Action|2",lines[1]) @TO@ MethodInvocation:assertEquals("124|ActiveMQ in Action|2",lines[1].trim()) @AT@ 1962 @LENGTH@ 51
---UPD MethodInvocation@@assertEquals("124|ActiveMQ in Action|2",lines[1]) @TO@ assertEquals("124|ActiveMQ in Action|2",lines[1].trim()) @AT@ 1962 @LENGTH@ 50
------UPD SimpleName@@MethodName:assertEquals:["124|ActiveMQ in Action|2", lines[1]] @TO@ MethodName:assertEquals:["124|ActiveMQ in Action|2", lines[1].trim()] @AT@ 1962 @LENGTH@ 50
---------DEL ArrayAccess@@lines[1] @AT@ 2003 @LENGTH@ 8
---------INS MethodInvocation@@lines[1].trim() @TO@ SimpleName@@MethodName:assertEquals:["124|ActiveMQ in Action|2", lines[1]] @AT@ 2010 @LENGTH@ 15
------------INS ArrayAccess@@lines[1] @TO@ MethodInvocation@@lines[1].trim() @AT@ 2010 @LENGTH@ 8
---------------MOV SimpleName@@lines @TO@ ArrayAccess@@lines[1] @AT@ 2003 @LENGTH@ 5
---------------MOV SimpleName@@lines @TO@ ArrayAccess@@lines[1] @AT@ 2003 @LENGTH@ 5
---------------MOV NumberLiteral@@1 @TO@ ArrayAccess@@lines[1] @AT@ 2009 @LENGTH@ 1
---------------MOV NumberLiteral@@1 @TO@ ArrayAccess@@lines[1] @AT@ 2009 @LENGTH@ 1
------------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@lines[1].trim() @AT@ 2019 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:endpoint.setType(getCamelContext().getTypeConverter().convertTo(JIRAType.class,remaining)) @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 1310 @LENGTH@ 92
---INS MethodInvocation@@endpoint.setType(getCamelContext().getTypeConverter().convertTo(JIRAType.class,remaining)) @TO@ ExpressionStatement@@MethodInvocation:endpoint.setType(getCamelContext().getTypeConverter().convertTo(JIRAType.class,remaining)) @AT@ 1310 @LENGTH@ 91
------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.setType(getCamelContext().getTypeConverter().convertTo(JIRAType.class,remaining)) @AT@ 1310 @LENGTH@ 8
------INS SimpleName@@MethodName:setType:[getCamelContext().getTypeConverter().convertTo(JIRAType.class,remaining)] @TO@ MethodInvocation@@endpoint.setType(getCamelContext().getTypeConverter().convertTo(JIRAType.class,remaining)) @AT@ 1319 @LENGTH@ 82
---------INS MethodInvocation@@getCamelContext().getTypeConverter().convertTo(JIRAType.class,remaining) @TO@ SimpleName@@MethodName:setType:[getCamelContext().getTypeConverter().convertTo(JIRAType.class,remaining)] @AT@ 1327 @LENGTH@ 73
------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@getCamelContext().getTypeConverter().convertTo(JIRAType.class,remaining) @AT@ 1327 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getCamelContext().getTypeConverter().convertTo(JIRAType.class,remaining) @AT@ 1327 @LENGTH@ 17
------------INS SimpleName@@MethodName:convertTo:[JIRAType.class, remaining] @TO@ MethodInvocation@@getCamelContext().getTypeConverter().convertTo(JIRAType.class,remaining) @AT@ 1364 @LENGTH@ 36
---------------INS TypeLiteral@@JIRAType.class @TO@ SimpleName@@MethodName:convertTo:[JIRAType.class, remaining] @AT@ 1374 @LENGTH@ 14
---------------INS SimpleName@@remaining @TO@ SimpleName@@MethodName:convertTo:[JIRAType.class, remaining] @AT@ 1390 @LENGTH@ 9


INS FieldDeclaration@@private, String, [name] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="direct",consumerClass=DirectConsumer.class), public]DirectEndpoint, DefaultEndpoint @AT@ 1578 @LENGTH@ 20
---INS Modifier@@private @TO@ FieldDeclaration@@private, String, [name] @AT@ 1578 @LENGTH@ 7
---INS SimpleType@@String @TO@ FieldDeclaration@@private, String, [name] @AT@ 1586 @LENGTH@ 6
---INS VariableDeclarationFragment@@name @TO@ FieldDeclaration@@private, String, [name] @AT@ 1593 @LENGTH@ 4
------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name @AT@ 1593 @LENGTH@ 4


UPD VariableDeclarationStatement@@DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 4544 @LENGTH@ 97
---UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 4544 @LENGTH@ 17
---UPD VariableDeclarationFragment@@client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 4562 @LENGTH@ 78
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 4571 @LENGTH@ 69
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 4571 @LENGTH@ 43
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 4600 @LENGTH@ 11
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 4615 @LENGTH@ 25


INS ExpressionStatement@@MethodInvocation:assertEquals("Bye Bye World",out) @TO@ MethodDeclaration@@public, void, MethodName:testRequestUsingDefaultEndpoint, Exception,  @AT@ 7573 @LENGTH@ 35
---INS MethodInvocation@@assertEquals("Bye Bye World",out) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Bye Bye World",out) @AT@ 7573 @LENGTH@ 34
------INS SimpleName@@MethodName:assertEquals:["Bye Bye World", out] @TO@ MethodInvocation@@assertEquals("Bye Bye World",out) @AT@ 7573 @LENGTH@ 34
---------INS StringLiteral@@"Bye Bye World" @TO@ SimpleName@@MethodName:assertEquals:["Bye Bye World", out] @AT@ 7586 @LENGTH@ 15
---------INS SimpleName@@out @TO@ SimpleName@@MethodName:assertEquals:["Bye Bye World", out] @AT@ 7603 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals(8,data.size()) @TO@ MethodInvocation:assertEquals(9,data.size()) @AT@ 2235 @LENGTH@ 29
---UPD MethodInvocation@@assertEquals(8,data.size()) @TO@ assertEquals(9,data.size()) @AT@ 2235 @LENGTH@ 28
------UPD SimpleName@@MethodName:assertEquals:[8, data.size()] @TO@ MethodName:assertEquals:[9, data.size()] @AT@ 2235 @LENGTH@ 28
---------UPD NumberLiteral@@8 @TO@ 9 @AT@ 2248 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:path.contains(this.path) @TO@ InfixExpression:path.equals(this.path) || path.contains(this.path + ".") || path.contains("." + this.path) @AT@ 19612 @LENGTH@ 32
---INS InfixExpression@@path.equals(this.path) || path.contains(this.path + ".") || path.contains("." + this.path) @TO@ ReturnStatement@@MethodInvocation:path.contains(this.path) @AT@ 19619 @LENGTH@ 90
------INS MethodInvocation@@path.equals(this.path) @TO@ InfixExpression@@path.equals(this.path) || path.contains(this.path + ".") || path.contains("." + this.path) @AT@ 19619 @LENGTH@ 22
---------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.equals(this.path) @AT@ 19619 @LENGTH@ 4
---------INS SimpleName@@MethodName:equals:[this.path] @TO@ MethodInvocation@@path.equals(this.path) @AT@ 19624 @LENGTH@ 17
------------INS FieldAccess@@this.path @TO@ SimpleName@@MethodName:equals:[this.path] @AT@ 19631 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.path @AT@ 19631 @LENGTH@ 4
---------------INS SimpleName@@path @TO@ FieldAccess@@this.path @AT@ 19636 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@path.equals(this.path) || path.contains(this.path + ".") || path.contains("." + this.path) @AT@ 19641 @LENGTH@ 2
------INS MethodInvocation@@path.contains(this.path + ".") @TO@ InfixExpression@@path.equals(this.path) || path.contains(this.path + ".") || path.contains("." + this.path) @AT@ 19645 @LENGTH@ 30
---------MOV SimpleName@@Name:path @TO@ MethodInvocation@@path.contains(this.path + ".") @AT@ 19619 @LENGTH@ 4
---------MOV SimpleName@@MethodName:contains:[this.path] @TO@ MethodInvocation@@path.contains(this.path + ".") @AT@ 19624 @LENGTH@ 19
------------DEL FieldAccess@@this.path @AT@ 19633 @LENGTH@ 9
------------INS InfixExpression@@this.path + "." @TO@ SimpleName@@MethodName:contains:[this.path] @AT@ 19659 @LENGTH@ 15
---------------INS FieldAccess@@this.path @TO@ InfixExpression@@this.path + "." @AT@ 19659 @LENGTH@ 9
------------------MOV ThisExpression@@this @TO@ FieldAccess@@this.path @AT@ 19633 @LENGTH@ 4
------------------MOV ThisExpression@@this @TO@ FieldAccess@@this.path @AT@ 19633 @LENGTH@ 4
------------------MOV SimpleName@@path @TO@ FieldAccess@@this.path @AT@ 19638 @LENGTH@ 4
------------------MOV SimpleName@@path @TO@ FieldAccess@@this.path @AT@ 19638 @LENGTH@ 4
---------------INS Operator@@+ @TO@ InfixExpression@@this.path + "." @AT@ 19668 @LENGTH@ 1
---------------INS StringLiteral@@"." @TO@ InfixExpression@@this.path + "." @AT@ 19671 @LENGTH@ 3
------INS MethodInvocation@@path.contains("." + this.path) @TO@ InfixExpression@@path.equals(this.path) || path.contains(this.path + ".") || path.contains("." + this.path) @AT@ 19679 @LENGTH@ 30
---------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.contains("." + this.path) @AT@ 19679 @LENGTH@ 4
---------INS SimpleName@@MethodName:contains:["." + this.path] @TO@ MethodInvocation@@path.contains("." + this.path) @AT@ 19684 @LENGTH@ 25
------------INS InfixExpression@@"." + this.path @TO@ SimpleName@@MethodName:contains:["." + this.path] @AT@ 19693 @LENGTH@ 15
---------------INS StringLiteral@@"." @TO@ InfixExpression@@"." + this.path @AT@ 19693 @LENGTH@ 3
---------------INS Operator@@+ @TO@ InfixExpression@@"." + this.path @AT@ 19696 @LENGTH@ 1
---------------INS FieldAccess@@this.path @TO@ InfixExpression@@"." + this.path @AT@ 19699 @LENGTH@ 9
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.path @AT@ 19699 @LENGTH@ 4
------------------INS SimpleName@@path @TO@ FieldAccess@@this.path @AT@ 19704 @LENGTH@ 4
---DEL MethodInvocation@@path.contains(this.path) @AT@ 19619 @LENGTH@ 24


INS MethodDeclaration@@protected, Converter<MongoPersistentProperty,String>, MethodName:getAssociationConverter,  @TO@ TypeDeclaration@@[protected, static]MetadataBackedField, Field @AT@ 24795 @LENGTH@ 138
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Converter<MongoPersistentProperty,String>, MethodName:getAssociationConverter,  @AT@ 24795 @LENGTH@ 9
---INS ParameterizedType@@Converter<MongoPersistentProperty,String> @TO@ MethodDeclaration@@protected, Converter<MongoPersistentProperty,String>, MethodName:getAssociationConverter,  @AT@ 24805 @LENGTH@ 42
------INS SimpleType@@Converter @TO@ ParameterizedType@@Converter<MongoPersistentProperty,String> @AT@ 24805 @LENGTH@ 9
------INS SimpleType@@MongoPersistentProperty @TO@ ParameterizedType@@Converter<MongoPersistentProperty,String> @AT@ 24815 @LENGTH@ 23
------INS SimpleType@@String @TO@ ParameterizedType@@Converter<MongoPersistentProperty,String> @AT@ 24840 @LENGTH@ 6
---INS SimpleName@@MethodName:getAssociationConverter @TO@ MethodDeclaration@@protected, Converter<MongoPersistentProperty,String>, MethodName:getAssociationConverter,  @AT@ 24848 @LENGTH@ 23
---INS ReturnStatement@@ClassInstanceCreation:new AssociationConverter(getAssociation()) @TO@ MethodDeclaration@@protected, Converter<MongoPersistentProperty,String>, MethodName:getAssociationConverter,  @AT@ 24879 @LENGTH@ 50
------INS ClassInstanceCreation@@AssociationConverter[getAssociation()] @TO@ ReturnStatement@@ClassInstanceCreation:new AssociationConverter(getAssociation()) @AT@ 24886 @LENGTH@ 42
---------INS New@@new @TO@ ClassInstanceCreation@@AssociationConverter[getAssociation()] @AT@ 24886 @LENGTH@ 3
---------INS SimpleType@@AssociationConverter @TO@ ClassInstanceCreation@@AssociationConverter[getAssociation()] @AT@ 24890 @LENGTH@ 20
---------INS MethodInvocation@@MethodName:getAssociation:[] @TO@ ClassInstanceCreation@@AssociationConverter[getAssociation()] @AT@ 24911 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:sd.setOutputFormat(HiveOutputFormat.class.getName()) @TO@ MethodDeclaration@@public, void, MethodName:testSimplePrivileges, Exception,  @AT@ 7141 @LENGTH@ 53
---INS MethodInvocation@@sd.setOutputFormat(HiveOutputFormat.class.getName()) @TO@ ExpressionStatement@@MethodInvocation:sd.setOutputFormat(HiveOutputFormat.class.getName()) @AT@ 7141 @LENGTH@ 52
------INS SimpleName@@Name:sd @TO@ MethodInvocation@@sd.setOutputFormat(HiveOutputFormat.class.getName()) @AT@ 7141 @LENGTH@ 2
------INS SimpleName@@MethodName:setOutputFormat:[HiveOutputFormat.class.getName()] @TO@ MethodInvocation@@sd.setOutputFormat(HiveOutputFormat.class.getName()) @AT@ 7144 @LENGTH@ 49
---------INS MethodInvocation@@HiveOutputFormat.class.getName() @TO@ SimpleName@@MethodName:setOutputFormat:[HiveOutputFormat.class.getName()] @AT@ 7160 @LENGTH@ 32
------------INS TypeLiteral@@HiveOutputFormat.class @TO@ MethodInvocation@@HiveOutputFormat.class.getName() @AT@ 7160 @LENGTH@ 22
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@HiveOutputFormat.class.getName() @AT@ 7183 @LENGTH@ 9


UPD TypeDeclaration@@[@UriEndpoint(scheme="docker",consumerClass=DockerEventsConsumer.class), public]DockerEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="docker",consumerClass=DockerEventsConsumer.class,label="container,cloud,platform"), public]DockerEndpoint, DefaultEndpoint @AT@ 1286 @LENGTH@ 1469
---UPD NormalAnnotation@@@UriEndpoint(scheme="docker",consumerClass=DockerEventsConsumer.class) @TO@ @UriEndpoint(scheme="docker",consumerClass=DockerEventsConsumer.class,label="container,cloud,platform") @AT@ 1286 @LENGTH@ 75


INS FieldDeclaration@@public, static, final, String, [OPERATION_BULK_INDEX="BULK_INDEX"] @TO@ TypeDeclaration@@[@UriParams, public]ElasticsearchConfiguration,  @AT@ 1333 @LENGTH@ 63
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [OPERATION_BULK_INDEX="BULK_INDEX"] @AT@ 1333 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [OPERATION_BULK_INDEX="BULK_INDEX"] @AT@ 1340 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [OPERATION_BULK_INDEX="BULK_INDEX"] @AT@ 1347 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [OPERATION_BULK_INDEX="BULK_INDEX"] @AT@ 1353 @LENGTH@ 6
---INS VariableDeclarationFragment@@OPERATION_BULK_INDEX="BULK_INDEX" @TO@ FieldDeclaration@@public, static, final, String, [OPERATION_BULK_INDEX="BULK_INDEX"] @AT@ 1360 @LENGTH@ 35
------INS SimpleName@@OPERATION_BULK_INDEX @TO@ VariableDeclarationFragment@@OPERATION_BULK_INDEX="BULK_INDEX" @AT@ 1360 @LENGTH@ 20
------INS StringLiteral@@"BULK_INDEX" @TO@ VariableDeclarationFragment@@OPERATION_BULK_INDEX="BULK_INDEX" @AT@ 1383 @LENGTH@ 12


UPD FieldDeclaration@@private, SimpleRegistry, [reg=new SimpleRegistry()] @TO@ SimpleRegistry, [reg=new SimpleRegistry()] @AT@ 1228 @LENGTH@ 50
---DEL Modifier@@private @AT@ 1228 @LENGTH@ 7


UPD TypeDeclaration@@[public]WeatherEndpoint, DefaultPollingEndpoint @TO@ [@UriEndpoint(scheme="weather",consumerClass=WeatherConsumer.class), public]WeatherEndpoint, DefaultPollingEndpoint @AT@ 1072 @LENGTH@ 1174
---INS NormalAnnotation@@@UriEndpoint(scheme="weather",consumerClass=WeatherConsumer.class) @TO@ TypeDeclaration@@[public]WeatherEndpoint, DefaultPollingEndpoint @AT@ 1113 @LENGTH@ 71


UPD TypeDeclaration@@[@UriEndpoint(scheme="optaplanner"), public]OptaPlannerEndpoint, ResourceEndpoint @TO@ [@UriEndpoint(scheme="optaplanner",label="engine,planning"), public]OptaPlannerEndpoint, ResourceEndpoint @AT@ 1301 @LENGTH@ 1371
---UPD NormalAnnotation@@@UriEndpoint(scheme="optaplanner") @TO@ @UriEndpoint(scheme="optaplanner",label="engine,planning") @AT@ 1301 @LENGTH@ 36


UPD FieldDeclaration@@private, static, final, String, [AMBIGUOUS_FIELD_MAPPING="Ambiguous field mapping detected! Both %s and %s map to the same field name %s! Disambiguate using @DocumentField annotation!"] @TO@ private, static, final, String, [AMBIGUOUS_FIELD_MAPPING="Ambiguous field mapping detected! Both %s and %s map to the same field name %s! Disambiguate using @Field annotation!"] @AT@ 2364 @LENGTH@ 182
---UPD VariableDeclarationFragment@@AMBIGUOUS_FIELD_MAPPING="Ambiguous field mapping detected! Both %s and %s map to the same field name %s! Disambiguate using @DocumentField annotation!" @TO@ AMBIGUOUS_FIELD_MAPPING="Ambiguous field mapping detected! Both %s and %s map to the same field name %s! Disambiguate using @Field annotation!" @AT@ 2392 @LENGTH@ 153
------UPD StringLiteral@@"Ambiguous field mapping detected! Both %s and %s map to the same field name %s! Disambiguate using @DocumentField annotation!" @TO@ "Ambiguous field mapping detected! Both %s and %s map to the same field name %s! Disambiguate using @Field annotation!" @AT@ 2418 @LENGTH@ 127


INS MethodDeclaration@@public, void, MethodName:execturesSearchThatTakesASort, Exception,  @TO@ TypeDeclaration@@[@Transactional, @ContextConfiguration(classes=JpaRepositoryConfig.class), public]JpaWebTests, AbstractWebIntegrationTests @AT@ 18161 @LENGTH@ 888
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:execturesSearchThatTakesASort, Exception,  @AT@ 18161 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:execturesSearchThatTakesASort, Exception,  @AT@ 18168 @LENGTH@ 4
---INS SimpleName@@MethodName:execturesSearchThatTakesASort @TO@ MethodDeclaration@@public, void, MethodName:execturesSearchThatTakesASort, Exception,  @AT@ 18173 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:execturesSearchThatTakesASort, Exception,  @AT@ 18212 @LENGTH@ 9
---INS VariableDeclarationStatement@@Link booksLink=discoverUnique("books"); @TO@ MethodDeclaration@@public, void, MethodName:execturesSearchThatTakesASort, Exception,  @AT@ 18227 @LENGTH@ 41
------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link booksLink=discoverUnique("books"); @AT@ 18227 @LENGTH@ 4
------INS VariableDeclarationFragment@@booksLink=discoverUnique("books") @TO@ VariableDeclarationStatement@@Link booksLink=discoverUnique("books"); @AT@ 18232 @LENGTH@ 35
---------INS SimpleName@@booksLink @TO@ VariableDeclarationFragment@@booksLink=discoverUnique("books") @AT@ 18232 @LENGTH@ 9
---------INS MethodInvocation@@discoverUnique("books") @TO@ VariableDeclarationFragment@@booksLink=discoverUnique("books") @AT@ 18244 @LENGTH@ 23
------------INS SimpleName@@MethodName:discoverUnique:["books"] @TO@ MethodInvocation@@discoverUnique("books") @AT@ 18244 @LENGTH@ 23
---------------INS StringLiteral@@"books" @TO@ SimpleName@@MethodName:discoverUnique:["books"] @AT@ 18259 @LENGTH@ 7
---INS VariableDeclarationStatement@@Link searchLink=discoverUnique(booksLink,"search"); @TO@ MethodDeclaration@@public, void, MethodName:execturesSearchThatTakesASort, Exception,  @AT@ 18271 @LENGTH@ 54
------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link searchLink=discoverUnique(booksLink,"search"); @AT@ 18271 @LENGTH@ 4
------INS VariableDeclarationFragment@@searchLink=discoverUnique(booksLink,"search") @TO@ VariableDeclarationStatement@@Link searchLink=discoverUnique(booksLink,"search"); @AT@ 18276 @LENGTH@ 48
---------INS SimpleName@@searchLink @TO@ VariableDeclarationFragment@@searchLink=discoverUnique(booksLink,"search") @AT@ 18276 @LENGTH@ 10
---------INS MethodInvocation@@discoverUnique(booksLink,"search") @TO@ VariableDeclarationFragment@@searchLink=discoverUnique(booksLink,"search") @AT@ 18289 @LENGTH@ 35
------------INS SimpleName@@MethodName:discoverUnique:[booksLink, "search"] @TO@ MethodInvocation@@discoverUnique(booksLink,"search") @AT@ 18289 @LENGTH@ 35
---------------INS SimpleName@@booksLink @TO@ SimpleName@@MethodName:discoverUnique:[booksLink, "search"] @AT@ 18304 @LENGTH@ 9
---------------INS StringLiteral@@"search" @TO@ SimpleName@@MethodName:discoverUnique:[booksLink, "search"] @AT@ 18315 @LENGTH@ 8
---INS VariableDeclarationStatement@@Link findBySortedLink=discoverUnique(searchLink,"find-by-sorted"); @TO@ MethodDeclaration@@public, void, MethodName:execturesSearchThatTakesASort, Exception,  @AT@ 18328 @LENGTH@ 69
------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link findBySortedLink=discoverUnique(searchLink,"find-by-sorted"); @AT@ 18328 @LENGTH@ 4
------INS VariableDeclarationFragment@@findBySortedLink=discoverUnique(searchLink,"find-by-sorted") @TO@ VariableDeclarationStatement@@Link findBySortedLink=discoverUnique(searchLink,"find-by-sorted"); @AT@ 18333 @LENGTH@ 63
---------INS SimpleName@@findBySortedLink @TO@ VariableDeclarationFragment@@findBySortedLink=discoverUnique(searchLink,"find-by-sorted") @AT@ 18333 @LENGTH@ 16
---------INS MethodInvocation@@discoverUnique(searchLink,"find-by-sorted") @TO@ VariableDeclarationFragment@@findBySortedLink=discoverUnique(searchLink,"find-by-sorted") @AT@ 18352 @LENGTH@ 44
------------INS SimpleName@@MethodName:discoverUnique:[searchLink, "find-by-sorted"] @TO@ MethodInvocation@@discoverUnique(searchLink,"find-by-sorted") @AT@ 18352 @LENGTH@ 44
---------------INS SimpleName@@searchLink @TO@ SimpleName@@MethodName:discoverUnique:[searchLink, "find-by-sorted"] @AT@ 18367 @LENGTH@ 10
---------------INS StringLiteral@@"find-by-sorted" @TO@ SimpleName@@MethodName:discoverUnique:[searchLink, "find-by-sorted"] @AT@ 18379 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertThat(findBySortedLink.isTemplated(),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:execturesSearchThatTakesASort, Exception,  @AT@ 18437 @LENGTH@ 53
------INS MethodInvocation@@assertThat(findBySortedLink.isTemplated(),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(findBySortedLink.isTemplated(),is(true)) @AT@ 18437 @LENGTH@ 52
---------INS SimpleName@@MethodName:assertThat:[findBySortedLink.isTemplated(), is(true)] @TO@ MethodInvocation@@assertThat(findBySortedLink.isTemplated(),is(true)) @AT@ 18437 @LENGTH@ 52
------------INS MethodInvocation@@findBySortedLink.isTemplated() @TO@ SimpleName@@MethodName:assertThat:[findBySortedLink.isTemplated(), is(true)] @AT@ 18448 @LENGTH@ 30
---------------INS SimpleName@@Name:findBySortedLink @TO@ MethodInvocation@@findBySortedLink.isTemplated() @AT@ 18448 @LENGTH@ 16
---------------INS SimpleName@@MethodName:isTemplated:[] @TO@ MethodInvocation@@findBySortedLink.isTemplated() @AT@ 18465 @LENGTH@ 13
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[findBySortedLink.isTemplated(), is(true)] @AT@ 18480 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 18480 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 18483 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 18480 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 18483 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(findBySortedLink.getVariableNames(),contains("sort")) @TO@ MethodDeclaration@@public, void, MethodName:execturesSearchThatTakesASort, Exception,  @AT@ 18493 @LENGTH@ 66
------INS MethodInvocation@@assertThat(findBySortedLink.getVariableNames(),contains("sort")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(findBySortedLink.getVariableNames(),contains("sort")) @AT@ 18493 @LENGTH@ 65
---------INS SimpleName@@MethodName:assertThat:[findBySortedLink.getVariableNames(), contains("sort")] @TO@ MethodInvocation@@assertThat(findBySortedLink.getVariableNames(),contains("sort")) @AT@ 18493 @LENGTH@ 65
------------INS MethodInvocation@@findBySortedLink.getVariableNames() @TO@ SimpleName@@MethodName:assertThat:[findBySortedLink.getVariableNames(), contains("sort")] @AT@ 18504 @LENGTH@ 35
---------------INS SimpleName@@Name:findBySortedLink @TO@ MethodInvocation@@findBySortedLink.getVariableNames() @AT@ 18504 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getVariableNames:[] @TO@ MethodInvocation@@findBySortedLink.getVariableNames() @AT@ 18521 @LENGTH@ 18
------------INS MethodInvocation@@contains("sort") @TO@ SimpleName@@MethodName:assertThat:[findBySortedLink.getVariableNames(), contains("sort")] @AT@ 18541 @LENGTH@ 16
---------------INS SimpleName@@MethodName:contains:["sort"] @TO@ MethodInvocation@@contains("sort") @AT@ 18541 @LENGTH@ 16
------------------INS StringLiteral@@"sort" @TO@ SimpleName@@MethodName:contains:["sort"] @AT@ 18550 @LENGTH@ 6
---------------INS SimpleName@@MethodName:contains:["sort"] @TO@ MethodInvocation@@contains("sort") @AT@ 18541 @LENGTH@ 16
------------------INS StringLiteral@@"sort" @TO@ SimpleName@@MethodName:contains:["sort"] @AT@ 18550 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:follow(findBySortedLink.expand("title,desc")).andExpect(jsonPath("$._embedded.books[0].title").value("Spring Data (Second Edition)")).andExpect(jsonPath("$._embedded.books[1].title").value("Spring Data")) @TO@ MethodDeclaration@@public, void, MethodName:execturesSearchThatTakesASort, Exception,  @AT@ 18605 @LENGTH@ 219
------INS MethodInvocation@@follow(findBySortedLink.expand("title,desc")).andExpect(jsonPath("$._embedded.books[0].title").value("Spring Data (Second Edition)")).andExpect(jsonPath("$._embedded.books[1].title").value("Spring Data")) @TO@ ExpressionStatement@@MethodInvocation:follow(findBySortedLink.expand("title,desc")).andExpect(jsonPath("$._embedded.books[0].title").value("Spring Data (Second Edition)")).andExpect(jsonPath("$._embedded.books[1].title").value("Spring Data")) @AT@ 18605 @LENGTH@ 218
---------INS MethodInvocation@@MethodName:andExpect:[jsonPath("$._embedded.books[0].title").value("Spring Data (Second Edition)")] @TO@ MethodInvocation@@follow(findBySortedLink.expand("title,desc")).andExpect(jsonPath("$._embedded.books[0].title").value("Spring Data (Second Edition)")).andExpect(jsonPath("$._embedded.books[1].title").value("Spring Data")) @AT@ 18605 @LENGTH@ 140
------------INS MethodInvocation@@jsonPath("$._embedded.books[0].title").value("Spring Data (Second Edition)") @TO@ MethodInvocation@@MethodName:andExpect:[jsonPath("$._embedded.books[0].title").value("Spring Data (Second Edition)")] @AT@ 18668 @LENGTH@ 76
---------------INS MethodInvocation@@MethodName:jsonPath:["$._embedded.books[0].title"] @TO@ MethodInvocation@@jsonPath("$._embedded.books[0].title").value("Spring Data (Second Edition)") @AT@ 18668 @LENGTH@ 38
------------------INS StringLiteral@@"$._embedded.books[0].title" @TO@ MethodInvocation@@MethodName:jsonPath:["$._embedded.books[0].title"] @AT@ 18677 @LENGTH@ 28
---------------INS SimpleName@@MethodName:value:["Spring Data (Second Edition)"] @TO@ MethodInvocation@@jsonPath("$._embedded.books[0].title").value("Spring Data (Second Edition)") @AT@ 18707 @LENGTH@ 37
------------------INS StringLiteral@@"Spring Data (Second Edition)" @TO@ SimpleName@@MethodName:value:["Spring Data (Second Edition)"] @AT@ 18713 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:follow:[findBySortedLink.expand("title,desc")] @TO@ MethodInvocation@@follow(findBySortedLink.expand("title,desc")).andExpect(jsonPath("$._embedded.books[0].title").value("Spring Data (Second Edition)")).andExpect(jsonPath("$._embedded.books[1].title").value("Spring Data")) @AT@ 18605 @LENGTH@ 45
------------INS MethodInvocation@@findBySortedLink.expand("title,desc") @TO@ MethodInvocation@@MethodName:follow:[findBySortedLink.expand("title,desc")] @AT@ 18612 @LENGTH@ 37
---------------INS SimpleName@@Name:findBySortedLink @TO@ MethodInvocation@@findBySortedLink.expand("title,desc") @AT@ 18612 @LENGTH@ 16
---------------INS SimpleName@@MethodName:expand:["title,desc"] @TO@ MethodInvocation@@findBySortedLink.expand("title,desc") @AT@ 18629 @LENGTH@ 20
------------------INS StringLiteral@@"title,desc" @TO@ SimpleName@@MethodName:expand:["title,desc"] @AT@ 18636 @LENGTH@ 12
---------INS SimpleName@@MethodName:andExpect:[jsonPath("$._embedded.books[1].title").value("Spring Data")] @TO@ MethodInvocation@@follow(findBySortedLink.expand("title,desc")).andExpect(jsonPath("$._embedded.books[0].title").value("Spring Data (Second Edition)")).andExpect(jsonPath("$._embedded.books[1].title").value("Spring Data")) @AT@ 18753 @LENGTH@ 70
------------INS MethodInvocation@@jsonPath("$._embedded.books[1].title").value("Spring Data") @TO@ SimpleName@@MethodName:andExpect:[jsonPath("$._embedded.books[1].title").value("Spring Data")] @AT@ 18763 @LENGTH@ 59
---------------INS MethodInvocation@@MethodName:jsonPath:["$._embedded.books[1].title"] @TO@ MethodInvocation@@jsonPath("$._embedded.books[1].title").value("Spring Data") @AT@ 18763 @LENGTH@ 38
------------------INS StringLiteral@@"$._embedded.books[1].title" @TO@ MethodInvocation@@MethodName:jsonPath:["$._embedded.books[1].title"] @AT@ 18772 @LENGTH@ 28
---------------INS SimpleName@@MethodName:value:["Spring Data"] @TO@ MethodInvocation@@jsonPath("$._embedded.books[1].title").value("Spring Data") @AT@ 18802 @LENGTH@ 20
------------------INS StringLiteral@@"Spring Data" @TO@ SimpleName@@MethodName:value:["Spring Data"] @AT@ 18808 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:follow(findBySortedLink.expand("title,asc")).andExpect(jsonPath("$._embedded.books[0].title").value("Spring Data")).andExpect(jsonPath("$._embedded.books[1].title").value("Spring Data (Second Edition)")) @TO@ MethodDeclaration@@public, void, MethodName:execturesSearchThatTakesASort, Exception,  @AT@ 18828 @LENGTH@ 218
------INS MethodInvocation@@follow(findBySortedLink.expand("title,asc")).andExpect(jsonPath("$._embedded.books[0].title").value("Spring Data")).andExpect(jsonPath("$._embedded.books[1].title").value("Spring Data (Second Edition)")) @TO@ ExpressionStatement@@MethodInvocation:follow(findBySortedLink.expand("title,asc")).andExpect(jsonPath("$._embedded.books[0].title").value("Spring Data")).andExpect(jsonPath("$._embedded.books[1].title").value("Spring Data (Second Edition)")) @AT@ 18828 @LENGTH@ 217
---------INS MethodInvocation@@MethodName:andExpect:[jsonPath("$._embedded.books[0].title").value("Spring Data")] @TO@ MethodInvocation@@follow(findBySortedLink.expand("title,asc")).andExpect(jsonPath("$._embedded.books[0].title").value("Spring Data")).andExpect(jsonPath("$._embedded.books[1].title").value("Spring Data (Second Edition)")) @AT@ 18828 @LENGTH@ 122
------------INS MethodInvocation@@jsonPath("$._embedded.books[0].title").value("Spring Data") @TO@ MethodInvocation@@MethodName:andExpect:[jsonPath("$._embedded.books[0].title").value("Spring Data")] @AT@ 18890 @LENGTH@ 59
---------------INS MethodInvocation@@MethodName:jsonPath:["$._embedded.books[0].title"] @TO@ MethodInvocation@@jsonPath("$._embedded.books[0].title").value("Spring Data") @AT@ 18890 @LENGTH@ 38
------------------INS StringLiteral@@"$._embedded.books[0].title" @TO@ MethodInvocation@@MethodName:jsonPath:["$._embedded.books[0].title"] @AT@ 18899 @LENGTH@ 28
---------------INS SimpleName@@MethodName:value:["Spring Data"] @TO@ MethodInvocation@@jsonPath("$._embedded.books[0].title").value("Spring Data") @AT@ 18929 @LENGTH@ 20
------------------INS StringLiteral@@"Spring Data" @TO@ SimpleName@@MethodName:value:["Spring Data"] @AT@ 18935 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:follow:[findBySortedLink.expand("title,asc")] @TO@ MethodInvocation@@follow(findBySortedLink.expand("title,asc")).andExpect(jsonPath("$._embedded.books[0].title").value("Spring Data")).andExpect(jsonPath("$._embedded.books[1].title").value("Spring Data (Second Edition)")) @AT@ 18828 @LENGTH@ 44
------------INS MethodInvocation@@findBySortedLink.expand("title,asc") @TO@ MethodInvocation@@MethodName:follow:[findBySortedLink.expand("title,asc")] @AT@ 18835 @LENGTH@ 36
---------------INS SimpleName@@Name:findBySortedLink @TO@ MethodInvocation@@findBySortedLink.expand("title,asc") @AT@ 18835 @LENGTH@ 16
---------------INS SimpleName@@MethodName:expand:["title,asc"] @TO@ MethodInvocation@@findBySortedLink.expand("title,asc") @AT@ 18852 @LENGTH@ 19
------------------INS StringLiteral@@"title,asc" @TO@ SimpleName@@MethodName:expand:["title,asc"] @AT@ 18859 @LENGTH@ 11
---------INS SimpleName@@MethodName:andExpect:[jsonPath("$._embedded.books[1].title").value("Spring Data (Second Edition)")] @TO@ MethodInvocation@@follow(findBySortedLink.expand("title,asc")).andExpect(jsonPath("$._embedded.books[0].title").value("Spring Data")).andExpect(jsonPath("$._embedded.books[1].title").value("Spring Data (Second Edition)")) @AT@ 18958 @LENGTH@ 87
------------INS MethodInvocation@@jsonPath("$._embedded.books[1].title").value("Spring Data (Second Edition)") @TO@ SimpleName@@MethodName:andExpect:[jsonPath("$._embedded.books[1].title").value("Spring Data (Second Edition)")] @AT@ 18968 @LENGTH@ 76
---------------INS MethodInvocation@@MethodName:jsonPath:["$._embedded.books[1].title"] @TO@ MethodInvocation@@jsonPath("$._embedded.books[1].title").value("Spring Data (Second Edition)") @AT@ 18968 @LENGTH@ 38
------------------INS StringLiteral@@"$._embedded.books[1].title" @TO@ MethodInvocation@@MethodName:jsonPath:["$._embedded.books[1].title"] @AT@ 18977 @LENGTH@ 28
---------------INS SimpleName@@MethodName:value:["Spring Data (Second Edition)"] @TO@ MethodInvocation@@jsonPath("$._embedded.books[1].title").value("Spring Data (Second Edition)") @AT@ 19007 @LENGTH@ 37
------------------INS StringLiteral@@"Spring Data (Second Edition)" @TO@ SimpleName@@MethodName:value:["Spring Data (Second Edition)"] @AT@ 19013 @LENGTH@ 30


INS IfStatement@@if (Build.VERSION.SDK_INT == Build.VERSION_CODES.FROYO) {  bigDecimalAsString="3.141592653589793";} @TO@ MethodDeclaration@@public, void, MethodName:testParseLocalizedBigDecimalNumber3,  @AT@ 8601 @LENGTH@ 207
---INS InfixExpression@@Build.VERSION.SDK_INT == Build.VERSION_CODES.FROYO @TO@ IfStatement@@if (Build.VERSION.SDK_INT == Build.VERSION_CODES.FROYO) {  bigDecimalAsString="3.141592653589793";} @AT@ 8605 @LENGTH@ 50
------INS QualifiedName@@Build.VERSION.SDK_INT @TO@ InfixExpression@@Build.VERSION.SDK_INT == Build.VERSION_CODES.FROYO @AT@ 8605 @LENGTH@ 21
---------INS QualifiedName@@Build.VERSION @TO@ QualifiedName@@Build.VERSION.SDK_INT @AT@ 8605 @LENGTH@ 13
------------INS SimpleName@@Build @TO@ QualifiedName@@Build.VERSION @AT@ 8605 @LENGTH@ 5
------------INS SimpleName@@VERSION @TO@ QualifiedName@@Build.VERSION @AT@ 8611 @LENGTH@ 7
---------INS SimpleName@@SDK_INT @TO@ QualifiedName@@Build.VERSION.SDK_INT @AT@ 8619 @LENGTH@ 7
------INS Operator@@== @TO@ InfixExpression@@Build.VERSION.SDK_INT == Build.VERSION_CODES.FROYO @AT@ 8626 @LENGTH@ 2
------INS QualifiedName@@Build.VERSION_CODES.FROYO @TO@ InfixExpression@@Build.VERSION.SDK_INT == Build.VERSION_CODES.FROYO @AT@ 8630 @LENGTH@ 25
---------INS QualifiedName@@Build.VERSION_CODES @TO@ QualifiedName@@Build.VERSION_CODES.FROYO @AT@ 8630 @LENGTH@ 19
------------INS SimpleName@@Build @TO@ QualifiedName@@Build.VERSION_CODES @AT@ 8630 @LENGTH@ 5
------------INS SimpleName@@VERSION_CODES @TO@ QualifiedName@@Build.VERSION_CODES @AT@ 8636 @LENGTH@ 13
---------INS SimpleName@@FROYO @TO@ QualifiedName@@Build.VERSION_CODES.FROYO @AT@ 8650 @LENGTH@ 5
---INS Block@@ThenBody:{  bigDecimalAsString="3.141592653589793";} @TO@ IfStatement@@if (Build.VERSION.SDK_INT == Build.VERSION_CODES.FROYO) {  bigDecimalAsString="3.141592653589793";} @AT@ 8657 @LENGTH@ 151
------INS ExpressionStatement@@Assignment:bigDecimalAsString="3.141592653589793" @TO@ Block@@ThenBody:{  bigDecimalAsString="3.141592653589793";} @AT@ 8763 @LENGTH@ 41
---------INS Assignment@@bigDecimalAsString="3.141592653589793" @TO@ ExpressionStatement@@Assignment:bigDecimalAsString="3.141592653589793" @AT@ 8763 @LENGTH@ 40
------------INS SimpleName@@bigDecimalAsString @TO@ Assignment@@bigDecimalAsString="3.141592653589793" @AT@ 8763 @LENGTH@ 18
------------INS Operator@@= @TO@ Assignment@@bigDecimalAsString="3.141592653589793" @AT@ 8781 @LENGTH@ 1
------------INS StringLiteral@@"3.141592653589793" @TO@ Assignment@@bigDecimalAsString="3.141592653589793" @AT@ 8784 @LENGTH@ 19


UPD VariableDeclarationStatement@@HttpClient httpClient=JettyHttpComponent.createHttpClient(this,min,max,sslContextParameters); @TO@ HttpClient httpClient=getComponent().createHttpClient(this,min,max,sslContextParameters); @AT@ 3462 @LENGTH@ 98
---UPD VariableDeclarationFragment@@httpClient=JettyHttpComponent.createHttpClient(this,min,max,sslContextParameters) @TO@ httpClient=getComponent().createHttpClient(this,min,max,sslContextParameters) @AT@ 3473 @LENGTH@ 86
------UPD MethodInvocation@@JettyHttpComponent.createHttpClient(this,min,max,sslContextParameters) @TO@ getComponent().createHttpClient(this,min,max,sslContextParameters) @AT@ 3486 @LENGTH@ 73
---------DEL SimpleName@@Name:JettyHttpComponent @AT@ 3486 @LENGTH@ 18
---------INS MethodInvocation@@MethodName:getComponent:[] @TO@ MethodInvocation@@JettyHttpComponent.createHttpClient(this,min,max,sslContextParameters) @AT@ 3486 @LENGTH@ 14


UPD IfStatement@@if (context.isBooting()) {  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  final ServerConfig serverConfig=ASHelper.getMSCService(WSServices.CONFIG_SERVICE,ServerConfig.class,context);  final ServiceName serviceName=getClientConfigServiceName(name);  final ConfigService clientConfigService=new ConfigService(serverConfig,name,true);  final ServiceTarget target=context.getServiceTarget();  final ServiceBuilder<?> clientServiceBuilder=target.addService(serviceName,clientConfigService);  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PROPERTY)) {    clientServiceBuilder.addDependency(sn,PropertyService.class,clientConfigService.getPropertiesInjector());  }  setDependency(context,clientServiceBuilder,clientConfigService.getPreHandlerChainsInjector(),UnifiedHandlerChainMetaData.class,serviceName,address,Constants.PRE_HANDLER_CHAIN);  final Injector<UnifiedHandlerChainMetaData> postInjector=clientConfigService.getPostHandlerChainsInjector();  setDependency(context,clientServiceBuilder,postInjector,UnifiedHandlerChainMetaData.class,serviceName,address,Constants.POST_HANDLER_CHAIN);  ServiceController<?> controller=clientServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();  if (newControllers != null) {    newControllers.add(controller);  }} else {  context.reloadRequired();} @TO@ if (context.isBooting()) {  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  final ServerConfig serverConfig=ASHelper.getMSCService(WSServices.CONFIG_SERVICE,ServerConfig.class,context);  final ServiceName serviceName=getClientConfigServiceName(name);  final ConfigService clientConfigService=new ConfigService(serverConfig,name,true);  final ServiceTarget target=context.getServiceTarget();  final ServiceBuilder<?> clientServiceBuilder=target.addService(serviceName,clientConfigService);  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PROPERTY)) {    clientServiceBuilder.addDependency(sn,PropertyService.class,clientConfigService.getPropertiesInjector());  }  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN)) {    clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPreHandlerChainsInjector());  }  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN)) {    clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPostHandlerChainsInjector());  }  ServiceController<?> controller=clientServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();  if (newControllers != null) {    newControllers.add(controller);  }} else {  context.reloadRequired();} @AT@ 3283 @LENGTH@ 1802
---UPD Block@@ThenBody:{  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  final ServerConfig serverConfig=ASHelper.getMSCService(WSServices.CONFIG_SERVICE,ServerConfig.class,context);  final ServiceName serviceName=getClientConfigServiceName(name);  final ConfigService clientConfigService=new ConfigService(serverConfig,name,true);  final ServiceTarget target=context.getServiceTarget();  final ServiceBuilder<?> clientServiceBuilder=target.addService(serviceName,clientConfigService);  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PROPERTY)) {    clientServiceBuilder.addDependency(sn,PropertyService.class,clientConfigService.getPropertiesInjector());  }  setDependency(context,clientServiceBuilder,clientConfigService.getPreHandlerChainsInjector(),UnifiedHandlerChainMetaData.class,serviceName,address,Constants.PRE_HANDLER_CHAIN);  final Injector<UnifiedHandlerChainMetaData> postInjector=clientConfigService.getPostHandlerChainsInjector();  setDependency(context,clientServiceBuilder,postInjector,UnifiedHandlerChainMetaData.class,serviceName,address,Constants.POST_HANDLER_CHAIN);  ServiceController<?> controller=clientServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();  if (newControllers != null) {    newControllers.add(controller);  }} @TO@ ThenBody:{  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  final ServerConfig serverConfig=ASHelper.getMSCService(WSServices.CONFIG_SERVICE,ServerConfig.class,context);  final ServiceName serviceName=getClientConfigServiceName(name);  final ConfigService clientConfigService=new ConfigService(serverConfig,name,true);  final ServiceTarget target=context.getServiceTarget();  final ServiceBuilder<?> clientServiceBuilder=target.addService(serviceName,clientConfigService);  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PROPERTY)) {    clientServiceBuilder.addDependency(sn,PropertyService.class,clientConfigService.getPropertiesInjector());  }  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN)) {    clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPreHandlerChainsInjector());  }  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN)) {    clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPostHandlerChainsInjector());  }  ServiceController<?> controller=clientServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();  if (newControllers != null) {    newControllers.add(controller);  }} @AT@ 3308 @LENGTH@ 1727
------DEL ExpressionStatement@@MethodInvocation:setDependency(context,clientServiceBuilder,clientConfigService.getPreHandlerChainsInjector(),UnifiedHandlerChainMetaData.class,serviceName,address,Constants.PRE_HANDLER_CHAIN) @AT@ 4353 @LENGTH@ 182
---------DEL MethodInvocation@@setDependency(context,clientServiceBuilder,clientConfigService.getPreHandlerChainsInjector(),UnifiedHandlerChainMetaData.class,serviceName,address,Constants.PRE_HANDLER_CHAIN) @AT@ 4353 @LENGTH@ 181
------INS EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN)) {  clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPreHandlerChainsInjector());} @TO@ Block@@ThenBody:{  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  final ServerConfig serverConfig=ASHelper.getMSCService(WSServices.CONFIG_SERVICE,ServerConfig.class,context);  final ServiceName serviceName=getClientConfigServiceName(name);  final ConfigService clientConfigService=new ConfigService(serverConfig,name,true);  final ServiceTarget target=context.getServiceTarget();  final ServiceBuilder<?> clientServiceBuilder=target.addService(serviceName,clientConfigService);  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PROPERTY)) {    clientServiceBuilder.addDependency(sn,PropertyService.class,clientConfigService.getPropertiesInjector());  }  setDependency(context,clientServiceBuilder,clientConfigService.getPreHandlerChainsInjector(),UnifiedHandlerChainMetaData.class,serviceName,address,Constants.PRE_HANDLER_CHAIN);  final Injector<UnifiedHandlerChainMetaData> postInjector=clientConfigService.getPostHandlerChainsInjector();  setDependency(context,clientServiceBuilder,postInjector,UnifiedHandlerChainMetaData.class,serviceName,address,Constants.POST_HANDLER_CHAIN);  ServiceController<?> controller=clientServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();  if (newControllers != null) {    newControllers.add(controller);  }} @AT@ 4355 @LENGTH@ 314
---------INS SingleVariableDeclaration@@ServiceName sn @TO@ EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN)) {  clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPreHandlerChainsInjector());} @AT@ 4360 @LENGTH@ 14
------------INS SimpleType@@ServiceName @TO@ SingleVariableDeclaration@@ServiceName sn @AT@ 4360 @LENGTH@ 11
------------INS SimpleName@@sn @TO@ SingleVariableDeclaration@@ServiceName sn @AT@ 4372 @LENGTH@ 2
---------INS MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN) @TO@ EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN)) {  clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPreHandlerChainsInjector());} @AT@ 4377 @LENGTH@ 99
------------MOV SimpleName@@MethodName:setDependency:[context, clientServiceBuilder, clientConfigService.getPreHandlerChainsInjector(), UnifiedHandlerChainMetaData.class, serviceName, address, Constants.PRE_HANDLER_CHAIN] @TO@ MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN) @AT@ 4353 @LENGTH@ 181
---------------DEL SimpleName@@clientServiceBuilder @AT@ 4376 @LENGTH@ 20
---------------DEL MethodInvocation@@clientConfigService.getPreHandlerChainsInjector() @AT@ 4398 @LENGTH@ 49
------------------DEL SimpleName@@Name:clientConfigService @AT@ 4398 @LENGTH@ 19
------------------DEL SimpleName@@MethodName:getPreHandlerChainsInjector:[] @AT@ 4418 @LENGTH@ 29
---------------DEL TypeLiteral@@UnifiedHandlerChainMetaData.class @AT@ 4449 @LENGTH@ 33
------------INS SimpleName@@Name:PackageUtils @TO@ MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN) @AT@ 4377 @LENGTH@ 12
---------INS ExpressionStatement@@MethodInvocation:clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPreHandlerChainsInjector()) @TO@ EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN)) {  clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPreHandlerChainsInjector());} @AT@ 4493 @LENGTH@ 125
------------INS MethodInvocation@@clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPreHandlerChainsInjector()) @TO@ ExpressionStatement@@MethodInvocation:clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPreHandlerChainsInjector()) @AT@ 4493 @LENGTH@ 124
---------------INS SimpleName@@Name:clientServiceBuilder @TO@ MethodInvocation@@clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPreHandlerChainsInjector()) @AT@ 4493 @LENGTH@ 20
---------------INS SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, clientConfigService.getPreHandlerChainsInjector()] @TO@ MethodInvocation@@clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPreHandlerChainsInjector()) @AT@ 4514 @LENGTH@ 103
------------------INS SimpleName@@sn @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, clientConfigService.getPreHandlerChainsInjector()] @AT@ 4528 @LENGTH@ 2
------------------INS TypeLiteral@@UnifiedHandlerChainMetaData.class @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, clientConfigService.getPreHandlerChainsInjector()] @AT@ 4532 @LENGTH@ 33
------------------INS MethodInvocation@@clientConfigService.getPreHandlerChainsInjector() @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, clientConfigService.getPreHandlerChainsInjector()] @AT@ 4567 @LENGTH@ 49
---------------------MOV SimpleName@@Name:clientConfigService @TO@ MethodInvocation@@clientConfigService.getPreHandlerChainsInjector() @AT@ 4604 @LENGTH@ 19
---------------------MOV SimpleName@@MethodName:getPostHandlerChainsInjector:[] @TO@ MethodInvocation@@clientConfigService.getPreHandlerChainsInjector() @AT@ 4624 @LENGTH@ 30
------DEL VariableDeclarationStatement@@final Injector<UnifiedHandlerChainMetaData> postInjector=clientConfigService.getPostHandlerChainsInjector(); @AT@ 4545 @LENGTH@ 110
---------DEL Modifier@@final @AT@ 4545 @LENGTH@ 5
---------DEL ParameterizedType@@Injector<UnifiedHandlerChainMetaData> @AT@ 4551 @LENGTH@ 37
------------DEL SimpleType@@Injector @AT@ 4551 @LENGTH@ 8
------------DEL SimpleType@@UnifiedHandlerChainMetaData @AT@ 4560 @LENGTH@ 27
---------DEL VariableDeclarationFragment@@postInjector=clientConfigService.getPostHandlerChainsInjector() @AT@ 4589 @LENGTH@ 65
------------DEL SimpleName@@postInjector @AT@ 4589 @LENGTH@ 12
------------DEL MethodInvocation@@clientConfigService.getPostHandlerChainsInjector() @AT@ 4604 @LENGTH@ 50
------DEL ExpressionStatement@@MethodInvocation:setDependency(context,clientServiceBuilder,postInjector,UnifiedHandlerChainMetaData.class,serviceName,address,Constants.POST_HANDLER_CHAIN) @AT@ 4665 @LENGTH@ 146
---------DEL MethodInvocation@@setDependency(context,clientServiceBuilder,postInjector,UnifiedHandlerChainMetaData.class,serviceName,address,Constants.POST_HANDLER_CHAIN) @AT@ 4665 @LENGTH@ 145
------INS EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN)) {  clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPostHandlerChainsInjector());} @TO@ Block@@ThenBody:{  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  final ServerConfig serverConfig=ASHelper.getMSCService(WSServices.CONFIG_SERVICE,ServerConfig.class,context);  final ServiceName serviceName=getClientConfigServiceName(name);  final ConfigService clientConfigService=new ConfigService(serverConfig,name,true);  final ServiceTarget target=context.getServiceTarget();  final ServiceBuilder<?> clientServiceBuilder=target.addService(serviceName,clientConfigService);  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PROPERTY)) {    clientServiceBuilder.addDependency(sn,PropertyService.class,clientConfigService.getPropertiesInjector());  }  setDependency(context,clientServiceBuilder,clientConfigService.getPreHandlerChainsInjector(),UnifiedHandlerChainMetaData.class,serviceName,address,Constants.PRE_HANDLER_CHAIN);  final Injector<UnifiedHandlerChainMetaData> postInjector=clientConfigService.getPostHandlerChainsInjector();  setDependency(context,clientServiceBuilder,postInjector,UnifiedHandlerChainMetaData.class,serviceName,address,Constants.POST_HANDLER_CHAIN);  ServiceController<?> controller=clientServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();  if (newControllers != null) {    newControllers.add(controller);  }} @AT@ 4679 @LENGTH@ 316
---------INS SingleVariableDeclaration@@ServiceName sn @TO@ EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN)) {  clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPostHandlerChainsInjector());} @AT@ 4684 @LENGTH@ 14
------------INS SimpleType@@ServiceName @TO@ SingleVariableDeclaration@@ServiceName sn @AT@ 4684 @LENGTH@ 11
------------INS SimpleName@@sn @TO@ SingleVariableDeclaration@@ServiceName sn @AT@ 4696 @LENGTH@ 2
---------INS MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN) @TO@ EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN)) {  clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPostHandlerChainsInjector());} @AT@ 4701 @LENGTH@ 100
------------MOV SimpleName@@MethodName:setDependency:[context, clientServiceBuilder, postInjector, UnifiedHandlerChainMetaData.class, serviceName, address, Constants.POST_HANDLER_CHAIN] @TO@ MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN) @AT@ 4665 @LENGTH@ 145
---------------DEL SimpleName@@clientServiceBuilder @AT@ 4688 @LENGTH@ 20
---------------DEL SimpleName@@postInjector @AT@ 4710 @LENGTH@ 12
---------------DEL TypeLiteral@@UnifiedHandlerChainMetaData.class @AT@ 4724 @LENGTH@ 33
------------INS SimpleName@@Name:PackageUtils @TO@ MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN) @AT@ 4701 @LENGTH@ 12
---------INS ExpressionStatement@@MethodInvocation:clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPostHandlerChainsInjector()) @TO@ EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN)) {  clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPostHandlerChainsInjector());} @AT@ 4818 @LENGTH@ 126
------------INS MethodInvocation@@clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPostHandlerChainsInjector()) @TO@ ExpressionStatement@@MethodInvocation:clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPostHandlerChainsInjector()) @AT@ 4818 @LENGTH@ 125
---------------INS SimpleName@@Name:clientServiceBuilder @TO@ MethodInvocation@@clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPostHandlerChainsInjector()) @AT@ 4818 @LENGTH@ 20
---------------INS SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, clientConfigService.getPostHandlerChainsInjector()] @TO@ MethodInvocation@@clientServiceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,clientConfigService.getPostHandlerChainsInjector()) @AT@ 4839 @LENGTH@ 104
------------------INS SimpleName@@sn @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, clientConfigService.getPostHandlerChainsInjector()] @AT@ 4853 @LENGTH@ 2
------------------INS TypeLiteral@@UnifiedHandlerChainMetaData.class @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, clientConfigService.getPostHandlerChainsInjector()] @AT@ 4857 @LENGTH@ 33
------------------INS MethodInvocation@@clientConfigService.getPostHandlerChainsInjector() @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, clientConfigService.getPostHandlerChainsInjector()] @AT@ 4892 @LENGTH@ 50
---------------------INS SimpleName@@Name:clientConfigService @TO@ MethodInvocation@@clientConfigService.getPostHandlerChainsInjector() @AT@ 4892 @LENGTH@ 19
---------------------INS SimpleName@@MethodName:getPostHandlerChainsInjector:[] @TO@ MethodInvocation@@clientConfigService.getPostHandlerChainsInjector() @AT@ 4912 @LENGTH@ 30


UPD VariableDeclarationStatement@@ModelControllerClient client=ModelControllerClient.Factory.create("localhost",9999); @TO@ ModelControllerClient client=ModelControllerClient.Factory.create("http-remoting","localhost",9990); @AT@ 4954 @LENGTH@ 87
---UPD VariableDeclarationFragment@@client=ModelControllerClient.Factory.create("localhost",9999) @TO@ client=ModelControllerClient.Factory.create("http-remoting","localhost",9990) @AT@ 4976 @LENGTH@ 64
------UPD MethodInvocation@@ModelControllerClient.Factory.create("localhost",9999) @TO@ ModelControllerClient.Factory.create("http-remoting","localhost",9990) @AT@ 4985 @LENGTH@ 55
---------UPD SimpleName@@MethodName:create:["localhost", 9999] @TO@ MethodName:create:["http-remoting", "localhost", 9990] @AT@ 5015 @LENGTH@ 25
------------INS StringLiteral@@"http-remoting" @TO@ SimpleName@@MethodName:create:["localhost", 9999] @AT@ 5022 @LENGTH@ 15
------------UPD NumberLiteral@@9999 @TO@ 9990 @AT@ 5035 @LENGTH@ 4


UPD FieldDeclaration@@private, static, final, AtomicInteger, [counter=new AtomicInteger()] @TO@ private, static, final, AtomicInteger, [COUNTER=new AtomicInteger()] @AT@ 1075 @LENGTH@ 65
---UPD VariableDeclarationFragment@@counter=new AtomicInteger() @TO@ COUNTER=new AtomicInteger() @AT@ 1110 @LENGTH@ 29
------UPD SimpleName@@counter @TO@ COUNTER @AT@ 1110 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:context.getProcessType().isServer() @TO@ InfixExpression:context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 3183 @LENGTH@ 43
---DEL MethodInvocation@@context.getProcessType().isServer() @AT@ 3190 @LENGTH@ 35
------DEL MethodInvocation@@MethodName:getProcessType:[] @AT@ 3190 @LENGTH@ 24
---INS InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @TO@ ReturnStatement@@MethodInvocation:context.getProcessType().isServer() @AT@ 3234 @LENGTH@ 70
------INS InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 3234 @LENGTH@ 46
---------INS MethodInvocation@@context.getRunningMode() @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 3234 @LENGTH@ 24
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRunningMode() @AT@ 3234 @LENGTH@ 7
------------INS SimpleName@@MethodName:getRunningMode:[] @TO@ MethodInvocation@@context.getRunningMode() @AT@ 3242 @LENGTH@ 16
---------INS Operator@@== @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 3258 @LENGTH@ 2
---------INS QualifiedName@@RunningMode.NORMAL @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 3262 @LENGTH@ 18
------------INS SimpleName@@RunningMode @TO@ QualifiedName@@RunningMode.NORMAL @AT@ 3262 @LENGTH@ 11
------------INS SimpleName@@NORMAL @TO@ QualifiedName@@RunningMode.NORMAL @AT@ 3274 @LENGTH@ 6
------INS Operator@@&& @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 3280 @LENGTH@ 2
------INS PrefixExpression@@!context.isBooting() @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 3284 @LENGTH@ 20
---------INS Operator@@! @TO@ PrefixExpression@@!context.isBooting() @AT@ 3284 @LENGTH@ 1
---------INS MethodInvocation@@context.isBooting() @TO@ PrefixExpression@@!context.isBooting() @AT@ 3285 @LENGTH@ 19
------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isBooting() @AT@ 3190 @LENGTH@ 7
------------MOV SimpleName@@MethodName:isServer:[] @TO@ MethodInvocation@@context.isBooting() @AT@ 3215 @LENGTH@ 10


UPD IfStatement@@if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  if (consumer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 8440 @LENGTH@ 371
---UPD Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  if (consumer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 8464 @LENGTH@ 347
------INS IfStatement@@if (consumer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @TO@ Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @AT@ 8669 @LENGTH@ 276
---------INS InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @TO@ IfStatement@@if (consumer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 8673 @LENGTH@ 61
------------INS MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @TO@ InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @AT@ 8673 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @AT@ 8673 @LENGTH@ 27
---------------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @AT@ 8673 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getSslContextParameters:[] @TO@ MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @AT@ 8701 @LENGTH@ 25
------------INS Operator@@== @TO@ InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @AT@ 8726 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @AT@ 8730 @LENGTH@ 4
---------INS Block@@ThenBody:{  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @TO@ IfStatement@@if (consumer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 8736 @LENGTH@ 209
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 8669 @LENGTH@ 89
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 8669 @LENGTH@ 89


DEL VariableDeclarationStatement@@String expected=IOUtils.toString(ClassLoader.getSystemResourceAsStream("report/article-1-report.xml")); @AT@ 1841 @LENGTH@ 105
---DEL SimpleType@@String @AT@ 1841 @LENGTH@ 6
---DEL VariableDeclarationFragment@@expected=IOUtils.toString(ClassLoader.getSystemResourceAsStream("report/article-1-report.xml")) @AT@ 1848 @LENGTH@ 97
------DEL SimpleName@@expected @AT@ 1848 @LENGTH@ 8
------DEL MethodInvocation@@IOUtils.toString(ClassLoader.getSystemResourceAsStream("report/article-1-report.xml")) @AT@ 1859 @LENGTH@ 86
---------DEL SimpleName@@Name:IOUtils @AT@ 1859 @LENGTH@ 7
---------DEL SimpleName@@MethodName:toString:[ClassLoader.getSystemResourceAsStream("report/article-1-report.xml")] @AT@ 1867 @LENGTH@ 78
------------DEL MethodInvocation@@ClassLoader.getSystemResourceAsStream("report/article-1-report.xml") @AT@ 1876 @LENGTH@ 68
---------------DEL SimpleName@@Name:ClassLoader @AT@ 1876 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:getSystemResourceAsStream:["report/article-1-report.xml"] @AT@ 1888 @LENGTH@ 56
------------------DEL StringLiteral@@"report/article-1-report.xml" @AT@ 1914 @LENGTH@ 29


UPD ExpressionStatement@@Assignment:unionRel=new HiveUnionRel(m_cluster,TraitsUtil.getUnionTraitSet(m_cluster,null),bldr.build()) @TO@ Assignment:unionRel=new HiveUnionRel(m_cluster,TraitsUtil.getDefaultTraitSet(m_cluster),bldr.build()) @AT@ 480665 @LENGTH@ 109
---UPD Assignment@@unionRel=new HiveUnionRel(m_cluster,TraitsUtil.getUnionTraitSet(m_cluster,null),bldr.build()) @TO@ unionRel=new HiveUnionRel(m_cluster,TraitsUtil.getDefaultTraitSet(m_cluster),bldr.build()) @AT@ 480665 @LENGTH@ 108
------UPD ClassInstanceCreation@@HiveUnionRel[m_cluster, TraitsUtil.getUnionTraitSet(m_cluster,null), bldr.build()] @TO@ HiveUnionRel[m_cluster, TraitsUtil.getDefaultTraitSet(m_cluster), bldr.build()] @AT@ 480676 @LENGTH@ 97
---------UPD MethodInvocation@@TraitsUtil.getUnionTraitSet(m_cluster,null) @TO@ TraitsUtil.getDefaultTraitSet(m_cluster) @AT@ 480704 @LENGTH@ 44
------------UPD SimpleName@@MethodName:getUnionTraitSet:[m_cluster, null] @TO@ MethodName:getDefaultTraitSet:[m_cluster] @AT@ 480715 @LENGTH@ 33
---------------DEL NullLiteral@@null @AT@ 480743 @LENGTH@ 4


UPD TryStatement@@try {  TabularData answer=new TabularDataSupport(CamelOpenMBeanTypes.listTypeConvertersTabularType());  List<Class[]> converters=registry.listAllTypeConvertersFromTo();  for (  Class[] entry : converters) {    CompositeType ct=CamelOpenMBeanTypes.listTypeConvertersCompositeType();    String from=entry[0].getCanonicalName();    String to=entry[1].getCanonicalName();    CompositeData data=new CompositeDataSupport(ct,new String[]{"from","to"},new Object[]{from,to});    answer.put(data);  }  return answer;} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @TO@ try {  TabularData answer=new TabularDataSupport(CamelOpenMBeanTypes.listTypeConvertersTabularType());  List<Class<?>[]> converters=registry.listAllTypeConvertersFromTo();  for (  Class<?>[] entry : converters) {    CompositeType ct=CamelOpenMBeanTypes.listTypeConvertersCompositeType();    String from=entry[0].getCanonicalName();    String to=entry[1].getCanonicalName();    CompositeData data=new CompositeDataSupport(ct,new String[]{"from","to"},new Object[]{from,to});    answer.put(data);  }  return answer;} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 3299 @LENGTH@ 744
---UPD VariableDeclarationStatement@@List<Class[]> converters=registry.listAllTypeConvertersFromTo(); @TO@ List<Class<?>[]> converters=registry.listAllTypeConvertersFromTo(); @AT@ 3427 @LENGTH@ 66
------UPD ParameterizedType@@List<Class[]> @TO@ List<Class<?>[]> @AT@ 3427 @LENGTH@ 13
---------UPD ArrayType@@Class[] @TO@ Class<?>[] @AT@ 3432 @LENGTH@ 7
------------DEL SimpleType@@Class @AT@ 3432 @LENGTH@ 5
------------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class[] @AT@ 3432 @LENGTH@ 8
---------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3432 @LENGTH@ 5
---------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3438 @LENGTH@ 1
---UPD EnhancedForStatement@@for (Class[] entry : converters) {  CompositeType ct=CamelOpenMBeanTypes.listTypeConvertersCompositeType();  String from=entry[0].getCanonicalName();  String to=entry[1].getCanonicalName();  CompositeData data=new CompositeDataSupport(ct,new String[]{"from","to"},new Object[]{from,to});  answer.put(data);} @TO@ for (Class<?>[] entry : converters) {  CompositeType ct=CamelOpenMBeanTypes.listTypeConvertersCompositeType();  String from=entry[0].getCanonicalName();  String to=entry[1].getCanonicalName();  CompositeData data=new CompositeDataSupport(ct,new String[]{"from","to"},new Object[]{from,to});  answer.put(data);} @AT@ 3506 @LENGTH@ 407
------UPD SingleVariableDeclaration@@Class[] entry @TO@ Class<?>[] entry @AT@ 3511 @LENGTH@ 13
---------UPD ArrayType@@Class[] @TO@ Class<?>[] @AT@ 3511 @LENGTH@ 7
------------DEL SimpleType@@Class @AT@ 3511 @LENGTH@ 5
------------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class[] @AT@ 3514 @LENGTH@ 8
---------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3514 @LENGTH@ 5
---------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3520 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:cleanupRepository() @AT@ 3968 @LENGTH@ 20
---DEL MethodInvocation@@MethodName:cleanupRepository:[] @AT@ 3968 @LENGTH@ 19


UPD IfStatement@@if (ModClusterModel.VERSION_1_2_0.requiresTransformation(version)) {  builder.addChildResource(PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CLASS,WEIGHT).addRejectCheck(CapacityCheckerAndConverter.INSTANCE,CAPACITY).setValueConverter(CapacityCheckerAndConverter.INSTANCE,CAPACITY).end();} @TO@ if (ModClusterModel.VERSION_1_3_0.requiresTransformation(version)) {  builder.addChildResource(PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CLASS,WEIGHT).addRejectCheck(CapacityCheckerAndConverter.INSTANCE,CAPACITY).setValueConverter(CapacityCheckerAndConverter.INSTANCE,CAPACITY).end();} @AT@ 2834 @LENGTH@ 457
---UPD MethodInvocation@@ModClusterModel.VERSION_1_2_0.requiresTransformation(version) @TO@ ModClusterModel.VERSION_1_3_0.requiresTransformation(version) @AT@ 2838 @LENGTH@ 61
------UPD QualifiedName@@Name:ModClusterModel.VERSION_1_2_0 @TO@ Name:ModClusterModel.VERSION_1_3_0 @AT@ 2838 @LENGTH@ 29


UPD MethodDeclaration@@public, void, MethodName:testNormalizationWithNFKC,  @TO@ public, void, MethodName:testCaseFoldingWithNFKC,  @AT@ 6998 @LENGTH@ 17979
---UPD SimpleName@@MethodName:testNormalizationWithNFKC @TO@ MethodName:testCaseFoldingWithNFKC @AT@ 7010 @LENGTH@ 25


UPD VariableDeclarationStatement@@BeanstalkEndpoint endpoint=new BeanstalkEndpoint(uri,context.getComponent("beanstalk"),mockConn(client)); @TO@ BeanstalkEndpoint endpoint=new BeanstalkEndpoint(uri,context.getComponent("beanstalk"),mockConn(client),""); @AT@ 1812 @LENGTH@ 109
---UPD VariableDeclarationFragment@@endpoint=new BeanstalkEndpoint(uri,context.getComponent("beanstalk"),mockConn(client)) @TO@ endpoint=new BeanstalkEndpoint(uri,context.getComponent("beanstalk"),mockConn(client),"") @AT@ 1830 @LENGTH@ 90
------UPD ClassInstanceCreation@@BeanstalkEndpoint[uri, context.getComponent("beanstalk"), mockConn(client)] @TO@ BeanstalkEndpoint[uri, context.getComponent("beanstalk"), mockConn(client), ""] @AT@ 1841 @LENGTH@ 79
---------INS StringLiteral@@"" @TO@ ClassInstanceCreation@@BeanstalkEndpoint[uri, context.getComponent("beanstalk"), mockConn(client)] @AT@ 1921 @LENGTH@ 2


UPD SuperConstructorInvocation@@super(cluster,TraitsUtil.getAggregateTraitSet(cluster,traitSet,BitSets.toList(groupSet),aggCalls,child),child,groupSet,aggCalls);
 @TO@ super(cluster,TraitsUtil.getDefaultTraitSet(cluster),child,groupSet,aggCalls);
 @AT@ 1060 @LENGTH@ 145
---UPD MethodInvocation@@TraitsUtil.getAggregateTraitSet(cluster,traitSet,BitSets.toList(groupSet),aggCalls,child) @TO@ TraitsUtil.getDefaultTraitSet(cluster) @AT@ 1075 @LENGTH@ 101
------UPD SimpleName@@MethodName:getAggregateTraitSet:[cluster, traitSet, BitSets.toList(groupSet), aggCalls, child] @TO@ MethodName:getDefaultTraitSet:[cluster] @AT@ 1086 @LENGTH@ 90
---------DEL SimpleName@@traitSet @AT@ 1116 @LENGTH@ 8
---------DEL MethodInvocation@@BitSets.toList(groupSet) @AT@ 1126 @LENGTH@ 24
------------DEL SimpleName@@Name:BitSets @AT@ 1126 @LENGTH@ 7
------------DEL SimpleName@@MethodName:toList:[groupSet] @AT@ 1134 @LENGTH@ 16
---------------DEL SimpleName@@groupSet @AT@ 1141 @LENGTH@ 8
---------DEL SimpleName@@aggCalls @AT@ 1160 @LENGTH@ 8
---------DEL SimpleName@@child @AT@ 1170 @LENGTH@ 5


UPD IfStatement@@if (s.length() < 1 || (isCommentLine(s) == comment)) {  return s;} else {  if (!comment) {    int pos=0;    while (PropertiesConfiguration.COMMENT_CHARS.indexOf(s.charAt(pos)) < 0) {      pos++;    }    pos++;    while (pos < s.length() && Character.isWhitespace(s.charAt(pos))) {      pos++;    }    return (pos < s.length()) ? s.substring(pos) : StringUtils.EMPTY;  } else {    return COMMENT_PREFIX + s;  }} @TO@ if (StringUtils.isBlank(s) || (isCommentLine(s) == comment)) {  return s;} else {  if (!comment) {    int pos=0;    while (PropertiesConfiguration.COMMENT_CHARS.indexOf(s.charAt(pos)) < 0) {      pos++;    }    pos++;    while (pos < s.length() && Character.isWhitespace(s.charAt(pos))) {      pos++;    }    return (pos < s.length()) ? s.substring(pos) : StringUtils.EMPTY;  } else {    return COMMENT_PREFIX + s;  }} @AT@ 24734 @LENGTH@ 865
---UPD InfixExpression@@s.length() < 1 || (isCommentLine(s) == comment) @TO@ StringUtils.isBlank(s) || (isCommentLine(s) == comment) @AT@ 24738 @LENGTH@ 47
------DEL InfixExpression@@s.length() < 1 @AT@ 24738 @LENGTH@ 14
---------DEL Operator@@< @AT@ 24748 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 24751 @LENGTH@ 1
------MOV MethodInvocation@@s.length() @TO@ InfixExpression@@s.length() < 1 || (isCommentLine(s) == comment) @AT@ 24738 @LENGTH@ 10
---------UPD SimpleName@@Name:s @TO@ Name:StringUtils @AT@ 24738 @LENGTH@ 1
---------UPD SimpleName@@MethodName:length:[] @TO@ MethodName:isBlank:[s] @AT@ 24740 @LENGTH@ 8
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:length:[] @AT@ 24758 @LENGTH@ 1


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=-3495429794010365522L] @TO@ TypeDeclaration@@[public]BindingException, CamelExchangeException @AT@ 1101 @LENGTH@ 67
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-3495429794010365522L] @AT@ 1101 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-3495429794010365522L] @AT@ 1109 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-3495429794010365522L] @AT@ 1116 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-3495429794010365522L] @AT@ 1122 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=-3495429794010365522L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-3495429794010365522L] @AT@ 1127 @LENGTH@ 40
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=-3495429794010365522L @AT@ 1127 @LENGTH@ 16
------INS PrefixExpression@@-3495429794010365522L @TO@ VariableDeclarationFragment@@serialVersionUID=-3495429794010365522L @AT@ 1146 @LENGTH@ 21
---------INS Operator@@- @TO@ PrefixExpression@@-3495429794010365522L @AT@ 1146 @LENGTH@ 1
---------INS NumberLiteral@@3495429794010365522L @TO@ PrefixExpression@@-3495429794010365522L @AT@ 1147 @LENGTH@ 20


UPD FieldDeclaration@@private, static, final, AtomicInteger, [counter=new AtomicInteger()] @TO@ private, static, final, AtomicInteger, [COUNTER=new AtomicInteger()] @AT@ 1072 @LENGTH@ 65
---UPD VariableDeclarationFragment@@counter=new AtomicInteger() @TO@ COUNTER=new AtomicInteger() @AT@ 1107 @LENGTH@ 29
------UPD SimpleName@@counter @TO@ COUNTER @AT@ 1107 @LENGTH@ 7


UPD Block@@ThenBody:{  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  final ServerConfig serverConfig=ASHelper.getMSCService(WSServices.CONFIG_SERVICE,ServerConfig.class,context);  final ServiceName serviceName=getEndpointConfigServiceName(name);  final ConfigService endpointConfigService=new ConfigService(serverConfig,name,false);  final ServiceTarget target=context.getServiceTarget();  final ServiceBuilder<?> clientServiceBuilder=target.addService(serviceName,endpointConfigService);  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PROPERTY)) {    clientServiceBuilder.addDependency(sn,PropertyService.class,endpointConfigService.getPropertiesInjector());  }  setDependency(context,clientServiceBuilder,endpointConfigService.getPreHandlerChainsInjector(),serviceName,address,Constants.PRE_HANDLER_CHAIN);  setDependency(context,clientServiceBuilder,endpointConfigService.getPostHandlerChainsInjector(),serviceName,address,Constants.POST_HANDLER_CHAIN);  ServiceController<?> controller=clientServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();  if (newControllers != null) {    newControllers.add(controller);  }} @TO@ ThenBody:{  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  final ServerConfig serverConfig=ASHelper.getMSCService(WSServices.CONFIG_SERVICE,ServerConfig.class,context);  final ServiceName serviceName=getEndpointConfigServiceName(name);  final ConfigService endpointConfigService=new ConfigService(serverConfig,name,false);  final ServiceTarget target=context.getServiceTarget();  final ServiceBuilder<?> serviceBuilder=target.addService(serviceName,endpointConfigService);  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PROPERTY)) {    serviceBuilder.addDependency(sn,PropertyService.class,endpointConfigService.getPropertiesInjector());  }  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN)) {    serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPreHandlerChainsInjector());  }  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN)) {    serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPostHandlerChainsInjector());  }  ServiceController<?> controller=serviceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();  if (newControllers != null) {    newControllers.add(controller);  }} @AT@ 3434 @LENGTH@ 1626
---UPD VariableDeclarationStatement@@final ServiceBuilder<?> clientServiceBuilder=target.addService(serviceName,endpointConfigService); @TO@ final ServiceBuilder<?> serviceBuilder=target.addService(serviceName,endpointConfigService); @AT@ 4136 @LENGTH@ 101
------UPD VariableDeclarationFragment@@clientServiceBuilder=target.addService(serviceName,endpointConfigService) @TO@ serviceBuilder=target.addService(serviceName,endpointConfigService) @AT@ 4160 @LENGTH@ 76
---------UPD SimpleName@@clientServiceBuilder @TO@ serviceBuilder @AT@ 4160 @LENGTH@ 20
---UPD EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PROPERTY)) {  clientServiceBuilder.addDependency(sn,PropertyService.class,endpointConfigService.getPropertiesInjector());} @TO@ for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PROPERTY)) {  serviceBuilder.addDependency(sn,PropertyService.class,endpointConfigService.getPropertiesInjector());} @AT@ 4249 @LENGTH@ 253
------UPD ExpressionStatement@@MethodInvocation:clientServiceBuilder.addDependency(sn,PropertyService.class,endpointConfigService.getPropertiesInjector()) @TO@ MethodInvocation:serviceBuilder.addDependency(sn,PropertyService.class,endpointConfigService.getPropertiesInjector()) @AT@ 4380 @LENGTH@ 109
---------UPD MethodInvocation@@clientServiceBuilder.addDependency(sn,PropertyService.class,endpointConfigService.getPropertiesInjector()) @TO@ serviceBuilder.addDependency(sn,PropertyService.class,endpointConfigService.getPropertiesInjector()) @AT@ 4380 @LENGTH@ 108
------------UPD SimpleName@@Name:clientServiceBuilder @TO@ Name:serviceBuilder @AT@ 4380 @LENGTH@ 20
---INS EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN)) {  serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPreHandlerChainsInjector());} @TO@ Block@@ThenBody:{  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  final ServerConfig serverConfig=ASHelper.getMSCService(WSServices.CONFIG_SERVICE,ServerConfig.class,context);  final ServiceName serviceName=getEndpointConfigServiceName(name);  final ConfigService endpointConfigService=new ConfigService(serverConfig,name,false);  final ServiceTarget target=context.getServiceTarget();  final ServiceBuilder<?> clientServiceBuilder=target.addService(serviceName,endpointConfigService);  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PROPERTY)) {    clientServiceBuilder.addDependency(sn,PropertyService.class,endpointConfigService.getPropertiesInjector());  }  setDependency(context,clientServiceBuilder,endpointConfigService.getPreHandlerChainsInjector(),serviceName,address,Constants.PRE_HANDLER_CHAIN);  setDependency(context,clientServiceBuilder,endpointConfigService.getPostHandlerChainsInjector(),serviceName,address,Constants.POST_HANDLER_CHAIN);  ServiceController<?> controller=clientServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();  if (newControllers != null) {    newControllers.add(controller);  }} @AT@ 4504 @LENGTH@ 314
------INS SingleVariableDeclaration@@ServiceName sn @TO@ EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN)) {  serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPreHandlerChainsInjector());} @AT@ 4509 @LENGTH@ 14
---------INS SimpleType@@ServiceName @TO@ SingleVariableDeclaration@@ServiceName sn @AT@ 4509 @LENGTH@ 11
---------INS SimpleName@@sn @TO@ SingleVariableDeclaration@@ServiceName sn @AT@ 4521 @LENGTH@ 2
------INS MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN) @TO@ EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN)) {  serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPreHandlerChainsInjector());} @AT@ 4526 @LENGTH@ 99
---------MOV SimpleName@@MethodName:setDependency:[context, clientServiceBuilder, endpointConfigService.getPreHandlerChainsInjector(), serviceName, address, Constants.PRE_HANDLER_CHAIN] @TO@ MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN) @AT@ 4514 @LENGTH@ 148
------------DEL SimpleName@@clientServiceBuilder @AT@ 4537 @LENGTH@ 20
------------DEL MethodInvocation@@endpointConfigService.getPreHandlerChainsInjector() @AT@ 4559 @LENGTH@ 51
---------------DEL SimpleName@@Name:endpointConfigService @AT@ 4559 @LENGTH@ 21
---------------DEL SimpleName@@MethodName:getPreHandlerChainsInjector:[] @AT@ 4581 @LENGTH@ 29
---------INS SimpleName@@Name:PackageUtils @TO@ MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN) @AT@ 4526 @LENGTH@ 12
------INS ExpressionStatement@@MethodInvocation:serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPreHandlerChainsInjector()) @TO@ EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PRE_HANDLER_CHAIN)) {  serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPreHandlerChainsInjector());} @AT@ 4644 @LENGTH@ 121
---------INS MethodInvocation@@serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPreHandlerChainsInjector()) @TO@ ExpressionStatement@@MethodInvocation:serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPreHandlerChainsInjector()) @AT@ 4644 @LENGTH@ 120
------------INS SimpleName@@Name:serviceBuilder @TO@ MethodInvocation@@serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPreHandlerChainsInjector()) @AT@ 4644 @LENGTH@ 14
------------INS SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, endpointConfigService.getPreHandlerChainsInjector()] @TO@ MethodInvocation@@serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPreHandlerChainsInjector()) @AT@ 4659 @LENGTH@ 105
---------------INS TypeLiteral@@UnifiedHandlerChainMetaData.class @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, endpointConfigService.getPreHandlerChainsInjector()] @AT@ 4677 @LENGTH@ 33
---------------MOV SimpleName@@clientServiceBuilder @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, endpointConfigService.getPreHandlerChainsInjector()] @AT@ 4698 @LENGTH@ 20
---------------MOV MethodInvocation@@endpointConfigService.getPostHandlerChainsInjector() @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, endpointConfigService.getPreHandlerChainsInjector()] @AT@ 4720 @LENGTH@ 52
---DEL ExpressionStatement@@MethodInvocation:setDependency(context,clientServiceBuilder,endpointConfigService.getPreHandlerChainsInjector(),serviceName,address,Constants.PRE_HANDLER_CHAIN) @AT@ 4514 @LENGTH@ 149
------DEL MethodInvocation@@setDependency(context,clientServiceBuilder,endpointConfigService.getPreHandlerChainsInjector(),serviceName,address,Constants.PRE_HANDLER_CHAIN) @AT@ 4514 @LENGTH@ 148
---DEL ExpressionStatement@@MethodInvocation:setDependency(context,clientServiceBuilder,endpointConfigService.getPostHandlerChainsInjector(),serviceName,address,Constants.POST_HANDLER_CHAIN) @AT@ 4675 @LENGTH@ 151
------DEL MethodInvocation@@setDependency(context,clientServiceBuilder,endpointConfigService.getPostHandlerChainsInjector(),serviceName,address,Constants.POST_HANDLER_CHAIN) @AT@ 4675 @LENGTH@ 150
---------DEL SimpleName@@MethodName:setDependency:[context, clientServiceBuilder, endpointConfigService.getPostHandlerChainsInjector(), serviceName, address, Constants.POST_HANDLER_CHAIN] @AT@ 4675 @LENGTH@ 150
------------DEL SimpleName@@context @AT@ 4689 @LENGTH@ 7
---INS EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN)) {  serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPostHandlerChainsInjector());} @TO@ Block@@ThenBody:{  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  final ServerConfig serverConfig=ASHelper.getMSCService(WSServices.CONFIG_SERVICE,ServerConfig.class,context);  final ServiceName serviceName=getEndpointConfigServiceName(name);  final ConfigService endpointConfigService=new ConfigService(serverConfig,name,false);  final ServiceTarget target=context.getServiceTarget();  final ServiceBuilder<?> clientServiceBuilder=target.addService(serviceName,endpointConfigService);  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.PROPERTY)) {    clientServiceBuilder.addDependency(sn,PropertyService.class,endpointConfigService.getPropertiesInjector());  }  setDependency(context,clientServiceBuilder,endpointConfigService.getPreHandlerChainsInjector(),serviceName,address,Constants.PRE_HANDLER_CHAIN);  setDependency(context,clientServiceBuilder,endpointConfigService.getPostHandlerChainsInjector(),serviceName,address,Constants.POST_HANDLER_CHAIN);  ServiceController<?> controller=clientServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();  if (newControllers != null) {    newControllers.add(controller);  }} @AT@ 4830 @LENGTH@ 316
------INS SingleVariableDeclaration@@ServiceName sn @TO@ EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN)) {  serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPostHandlerChainsInjector());} @AT@ 4835 @LENGTH@ 14
---------INS SimpleType@@ServiceName @TO@ SingleVariableDeclaration@@ServiceName sn @AT@ 4835 @LENGTH@ 11
---------INS SimpleName@@sn @TO@ SingleVariableDeclaration@@ServiceName sn @AT@ 4847 @LENGTH@ 2
------INS MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN) @TO@ EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN)) {  serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPostHandlerChainsInjector());} @AT@ 4852 @LENGTH@ 100
---------INS SimpleName@@Name:PackageUtils @TO@ MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN) @AT@ 4852 @LENGTH@ 12
---------INS SimpleName@@MethodName:getServiceNameDependencies:[context, serviceName, address, Constants.POST_HANDLER_CHAIN] @TO@ MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN) @AT@ 4865 @LENGTH@ 87
------------MOV SimpleName@@serviceName @TO@ SimpleName@@MethodName:getServiceNameDependencies:[context, serviceName, address, Constants.POST_HANDLER_CHAIN] @AT@ 4774 @LENGTH@ 11
------------MOV SimpleName@@address @TO@ SimpleName@@MethodName:getServiceNameDependencies:[context, serviceName, address, Constants.POST_HANDLER_CHAIN] @AT@ 4787 @LENGTH@ 7
------------MOV QualifiedName@@Constants.POST_HANDLER_CHAIN @TO@ SimpleName@@MethodName:getServiceNameDependencies:[context, serviceName, address, Constants.POST_HANDLER_CHAIN] @AT@ 4796 @LENGTH@ 28
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:getServiceNameDependencies:[context, serviceName, address, Constants.POST_HANDLER_CHAIN] @AT@ 4892 @LENGTH@ 7
------INS ExpressionStatement@@MethodInvocation:serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPostHandlerChainsInjector()) @TO@ EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,Constants.POST_HANDLER_CHAIN)) {  serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPostHandlerChainsInjector());} @AT@ 4971 @LENGTH@ 122
---------INS MethodInvocation@@serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPostHandlerChainsInjector()) @TO@ ExpressionStatement@@MethodInvocation:serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPostHandlerChainsInjector()) @AT@ 4971 @LENGTH@ 121
------------INS SimpleName@@Name:serviceBuilder @TO@ MethodInvocation@@serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPostHandlerChainsInjector()) @AT@ 4971 @LENGTH@ 14
------------INS SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, endpointConfigService.getPostHandlerChainsInjector()] @TO@ MethodInvocation@@serviceBuilder.addDependency(sn,UnifiedHandlerChainMetaData.class,endpointConfigService.getPostHandlerChainsInjector()) @AT@ 4986 @LENGTH@ 106
---------------INS SimpleName@@sn @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, endpointConfigService.getPostHandlerChainsInjector()] @AT@ 5000 @LENGTH@ 2
---------------INS TypeLiteral@@UnifiedHandlerChainMetaData.class @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, endpointConfigService.getPostHandlerChainsInjector()] @AT@ 5004 @LENGTH@ 33
---------------INS MethodInvocation@@endpointConfigService.getPostHandlerChainsInjector() @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerChainMetaData.class, endpointConfigService.getPostHandlerChainsInjector()] @AT@ 5039 @LENGTH@ 52
------------------INS SimpleName@@Name:endpointConfigService @TO@ MethodInvocation@@endpointConfigService.getPostHandlerChainsInjector() @AT@ 5039 @LENGTH@ 21
------------------INS SimpleName@@MethodName:getPostHandlerChainsInjector:[] @TO@ MethodInvocation@@endpointConfigService.getPostHandlerChainsInjector() @AT@ 5061 @LENGTH@ 30
---UPD VariableDeclarationStatement@@ServiceController<?> controller=clientServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install(); @TO@ ServiceController<?> controller=serviceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install(); @AT@ 4838 @LENGTH@ 111
------UPD VariableDeclarationFragment@@controller=clientServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install() @TO@ controller=serviceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 4859 @LENGTH@ 89
---------UPD MethodInvocation@@clientServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install() @TO@ serviceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 4872 @LENGTH@ 76
------------UPD SimpleName@@Name:clientServiceBuilder @TO@ Name:serviceBuilder @AT@ 4872 @LENGTH@ 20


UPD TypeDeclaration@@[public]HdfsConfiguration,  @TO@ [@UriParams, public]HdfsConfiguration,  @AT@ 1061 @LENGTH@ 12410
---INS MarkerAnnotation@@@UriParams @TO@ TypeDeclaration@@[public]HdfsConfiguration,  @AT@ 1138 @LENGTH@ 10


INS FieldDeclaration@@public, static, final, String, [PUBLISH_CONFIRM_NACK_CAUSE=PREFIX + "publishConfirmNackCause"] @TO@ TypeDeclaration@@[public, abstract]AmqpHeaders,  @AT@ 2696 @LENGTH@ 91
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [PUBLISH_CONFIRM_NACK_CAUSE=PREFIX + "publishConfirmNackCause"] @AT@ 2696 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [PUBLISH_CONFIRM_NACK_CAUSE=PREFIX + "publishConfirmNackCause"] @AT@ 2703 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [PUBLISH_CONFIRM_NACK_CAUSE=PREFIX + "publishConfirmNackCause"] @AT@ 2710 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [PUBLISH_CONFIRM_NACK_CAUSE=PREFIX + "publishConfirmNackCause"] @AT@ 2716 @LENGTH@ 6
---INS VariableDeclarationFragment@@PUBLISH_CONFIRM_NACK_CAUSE=PREFIX + "publishConfirmNackCause" @TO@ FieldDeclaration@@public, static, final, String, [PUBLISH_CONFIRM_NACK_CAUSE=PREFIX + "publishConfirmNackCause"] @AT@ 2723 @LENGTH@ 63
------INS SimpleName@@PUBLISH_CONFIRM_NACK_CAUSE @TO@ VariableDeclarationFragment@@PUBLISH_CONFIRM_NACK_CAUSE=PREFIX + "publishConfirmNackCause" @AT@ 2723 @LENGTH@ 26
------INS InfixExpression@@PREFIX + "publishConfirmNackCause" @TO@ VariableDeclarationFragment@@PUBLISH_CONFIRM_NACK_CAUSE=PREFIX + "publishConfirmNackCause" @AT@ 2752 @LENGTH@ 34
---------INS SimpleName@@PREFIX @TO@ InfixExpression@@PREFIX + "publishConfirmNackCause" @AT@ 2752 @LENGTH@ 6
---------INS Operator@@+ @TO@ InfixExpression@@PREFIX + "publishConfirmNackCause" @AT@ 2758 @LENGTH@ 1
---------INS StringLiteral@@"publishConfirmNackCause" @TO@ InfixExpression@@PREFIX + "publishConfirmNackCause" @AT@ 2761 @LENGTH@ 25


UPD TypeDeclaration@@[public]FloatConverter, [Converter<Float>] @TO@ [@Component, public]FloatConverter, [Converter<Float>] @AT@ 938 @LENGTH@ 592
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]FloatConverter, [Converter<Float>] @AT@ 988 @LENGTH@ 10


UPD MethodDeclaration@@public, TypeInformation<?>, MethodName:getComponentType,  @TO@ protected, TypeInformation<?>, MethodName:doGetComponentType,  @AT@ 1935 @LENGTH@ 141
---UPD Modifier@@public @TO@ protected @AT@ 1935 @LENGTH@ 6
---UPD SimpleName@@MethodName:getComponentType @TO@ MethodName:doGetComponentType @AT@ 1961 @LENGTH@ 16


UPD FieldDeclaration@@static, final, OperationDefinition, [SETUP_OP_DEF=new SimpleOperationDefinitionBuilder("setup",new NonResolvingResourceDescriptionResolver()).setPrivateEntry().build()] @TO@ static, final, OperationDefinition, [SETUP_OPERATION_DEF=new SimpleOperationDefinitionBuilder("setup",new NonResolvingResourceDescriptionResolver()).setPrivateEntry().build()] @AT@ 1522 @LENGTH@ 193
---UPD VariableDeclarationFragment@@SETUP_OP_DEF=new SimpleOperationDefinitionBuilder("setup",new NonResolvingResourceDescriptionResolver()).setPrivateEntry().build() @TO@ SETUP_OPERATION_DEF=new SimpleOperationDefinitionBuilder("setup",new NonResolvingResourceDescriptionResolver()).setPrivateEntry().build() @AT@ 1555 @LENGTH@ 159
------UPD SimpleName@@SETUP_OP_DEF @TO@ SETUP_OPERATION_DEF @AT@ 1555 @LENGTH@ 12


INS MethodDeclaration@@Page<Person>, MethodName:findByEmailAddress, String email, Sort pageable,  @TO@ TypeDeclaration@@PersonRepository, [Repository<Person,Long>] @AT@ 4937 @LENGTH@ 48
---INS ParameterizedType@@Page<Person> @TO@ MethodDeclaration@@Page<Person>, MethodName:findByEmailAddress, String email, Sort pageable,  @AT@ 4924 @LENGTH@ 12
------INS SimpleType@@Page @TO@ ParameterizedType@@Page<Person> @AT@ 4924 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@Page<Person> @AT@ 4929 @LENGTH@ 6
---INS SimpleName@@MethodName:findByEmailAddress @TO@ MethodDeclaration@@Page<Person>, MethodName:findByEmailAddress, String email, Sort pageable,  @AT@ 4937 @LENGTH@ 18
---INS SingleVariableDeclaration@@String email @TO@ MethodDeclaration@@Page<Person>, MethodName:findByEmailAddress, String email, Sort pageable,  @AT@ 4956 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String email @AT@ 4956 @LENGTH@ 6
------INS SimpleName@@email @TO@ SingleVariableDeclaration@@String email @AT@ 4963 @LENGTH@ 5
---INS SingleVariableDeclaration@@Sort pageable @TO@ MethodDeclaration@@Page<Person>, MethodName:findByEmailAddress, String email, Sort pageable,  @AT@ 4970 @LENGTH@ 13
------INS SimpleType@@Sort @TO@ SingleVariableDeclaration@@Sort pageable @AT@ 4970 @LENGTH@ 4
------INS SimpleName@@pageable @TO@ SingleVariableDeclaration@@Sort pageable @AT@ 4975 @LENGTH@ 8


UPD VariableDeclarationStatement@@Map<Object,Object> map=new HashMap<>(); @TO@ Map<Object,Object> map=new HashMap<Object,Object>(); @AT@ 2230 @LENGTH@ 41
---UPD VariableDeclarationFragment@@map=new HashMap<>() @TO@ map=new HashMap<Object,Object>() @AT@ 2249 @LENGTH@ 21
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<Object,Object>[] @AT@ 2255 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<Object,Object> @AT@ 2259 @LENGTH@ 9
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<> @AT@ 2268 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<> @AT@ 2276 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:rejectsAddressConfigWithoutASingleParsableServerAddress,  @TO@ public, void, MethodName:rejectsAddressConfigWithoutASingleParsableAndResolvableServerAddress,  @AT@ 1471 @LENGTH@ 107
---UPD SimpleName@@MethodName:rejectsAddressConfigWithoutASingleParsableServerAddress @TO@ MethodName:rejectsAddressConfigWithoutASingleParsableAndResolvableServerAddress @AT@ 1483 @LENGTH@ 55
---UPD ExpressionStatement@@MethodInvocation:editor.setAsText("foo, bar") @TO@ MethodInvocation:editor.setAsText(unknownHost1 + "," + unknownHost2) @AT@ 1546 @LENGTH@ 29
------UPD MethodInvocation@@editor.setAsText("foo, bar") @TO@ editor.setAsText(unknownHost1 + "," + unknownHost2) @AT@ 1546 @LENGTH@ 28
---------UPD SimpleName@@MethodName:setAsText:["foo, bar"] @TO@ MethodName:setAsText:[unknownHost1 + "," + unknownHost2] @AT@ 1553 @LENGTH@ 21
------------DEL StringLiteral@@"foo, bar" @AT@ 1563 @LENGTH@ 10
------------INS InfixExpression@@unknownHost1 + "," + unknownHost2 @TO@ SimpleName@@MethodName:setAsText:["foo, bar"] @AT@ 1990 @LENGTH@ 33
---------------INS SimpleName@@unknownHost1 @TO@ InfixExpression@@unknownHost1 + "," + unknownHost2 @AT@ 1990 @LENGTH@ 12
---------------INS Operator@@+ @TO@ InfixExpression@@unknownHost1 + "," + unknownHost2 @AT@ 2002 @LENGTH@ 1
---------------INS StringLiteral@@"," @TO@ InfixExpression@@unknownHost1 + "," + unknownHost2 @AT@ 2005 @LENGTH@ 3
---------------INS SimpleName@@unknownHost2 @TO@ InfixExpression@@unknownHost1 + "," + unknownHost2 @AT@ 2011 @LENGTH@ 12
---INS VariableDeclarationStatement@@String unknownHost1="gugu.nonexistant.example.org"; @TO@ MethodDeclaration@@public, void, MethodName:rejectsAddressConfigWithoutASingleParsableServerAddress,  @AT@ 1799 @LENGTH@ 53
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String unknownHost1="gugu.nonexistant.example.org"; @AT@ 1799 @LENGTH@ 6
------INS VariableDeclarationFragment@@unknownHost1="gugu.nonexistant.example.org" @TO@ VariableDeclarationStatement@@String unknownHost1="gugu.nonexistant.example.org"; @AT@ 1806 @LENGTH@ 45
---------INS SimpleName@@unknownHost1 @TO@ VariableDeclarationFragment@@unknownHost1="gugu.nonexistant.example.org" @AT@ 1806 @LENGTH@ 12
---------INS StringLiteral@@"gugu.nonexistant.example.org" @TO@ VariableDeclarationFragment@@unknownHost1="gugu.nonexistant.example.org" @AT@ 1821 @LENGTH@ 30
---INS VariableDeclarationStatement@@String unknownHost2="gaga.nonexistant.example.org"; @TO@ MethodDeclaration@@public, void, MethodName:rejectsAddressConfigWithoutASingleParsableServerAddress,  @AT@ 1855 @LENGTH@ 53
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String unknownHost2="gaga.nonexistant.example.org"; @AT@ 1855 @LENGTH@ 6
------INS VariableDeclarationFragment@@unknownHost2="gaga.nonexistant.example.org" @TO@ VariableDeclarationStatement@@String unknownHost2="gaga.nonexistant.example.org"; @AT@ 1862 @LENGTH@ 45
---------INS SimpleName@@unknownHost2 @TO@ VariableDeclarationFragment@@unknownHost2="gaga.nonexistant.example.org" @AT@ 1862 @LENGTH@ 12
---------INS StringLiteral@@"gaga.nonexistant.example.org" @TO@ VariableDeclarationFragment@@unknownHost2="gaga.nonexistant.example.org" @AT@ 1877 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:assertUnresolveableHostnames(unknownHost1,unknownHost2) @TO@ MethodDeclaration@@public, void, MethodName:rejectsAddressConfigWithoutASingleParsableServerAddress,  @AT@ 1912 @LENGTH@ 57
------INS MethodInvocation@@assertUnresolveableHostnames(unknownHost1,unknownHost2) @TO@ ExpressionStatement@@MethodInvocation:assertUnresolveableHostnames(unknownHost1,unknownHost2) @AT@ 1912 @LENGTH@ 56
---------INS SimpleName@@MethodName:assertUnresolveableHostnames:[unknownHost1, unknownHost2] @TO@ MethodInvocation@@assertUnresolveableHostnames(unknownHost1,unknownHost2) @AT@ 1912 @LENGTH@ 56
------------INS SimpleName@@unknownHost1 @TO@ SimpleName@@MethodName:assertUnresolveableHostnames:[unknownHost1, unknownHost2] @AT@ 1941 @LENGTH@ 12
------------INS SimpleName@@unknownHost2 @TO@ SimpleName@@MethodName:assertUnresolveableHostnames:[unknownHost1, unknownHost2] @AT@ 1955 @LENGTH@ 12


UPD TypeDeclaration@@[public]GTaskEndpoint, ServletEndpoint[OutboundBindingSupport<GTaskEndpoint,TaskOptions,Void>] @TO@ [@UriEndpoint(scheme="gtask"), public]GTaskEndpoint, ServletEndpoint[OutboundBindingSupport<GTaskEndpoint,TaskOptions,Void>] @AT@ 1934 @LENGTH@ 2900
---INS NormalAnnotation@@@UriEndpoint(scheme="gtask") @TO@ TypeDeclaration@@[public]GTaskEndpoint, ServletEndpoint[OutboundBindingSupport<GTaskEndpoint,TaskOptions,Void>] @AT@ 2013 @LENGTH@ 30


UPD IfStatement@@if (ex instanceof JobCreationException) {  return new InvalidDataAccessResourceUsageException("Map Reduce error",ex);} @TO@ if (ex.getClass().getName().contains("JobCreationException")) {  return new InvalidDataAccessResourceUsageException("Map Reduce error",ex);} @AT@ 2780 @LENGTH@ 126
---INS MethodInvocation@@ex.getClass().getName().contains("JobCreationException") @TO@ IfStatement@@if (ex instanceof JobCreationException) {  return new InvalidDataAccessResourceUsageException("Map Reduce error",ex);} @AT@ 2709 @LENGTH@ 56
------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@ex.getClass().getName().contains("JobCreationException") @AT@ 2709 @LENGTH@ 23
------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@ex.getClass().getName().contains("JobCreationException") @AT@ 2709 @LENGTH@ 13
------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getClass().getName().contains("JobCreationException") @AT@ 2709 @LENGTH@ 2
------INS SimpleName@@MethodName:contains:["JobCreationException"] @TO@ MethodInvocation@@ex.getClass().getName().contains("JobCreationException") @AT@ 2733 @LENGTH@ 32
---------INS StringLiteral@@"JobCreationException" @TO@ SimpleName@@MethodName:contains:["JobCreationException"] @AT@ 2742 @LENGTH@ 22
---DEL InstanceofExpression@@ex instanceof JobCreationException @AT@ 2784 @LENGTH@ 34
------DEL SimpleName@@ex @AT@ 2784 @LENGTH@ 2
------DEL Instanceof@@instanceof @AT@ 2787 @LENGTH@ 10
------DEL SimpleType@@JobCreationException @AT@ 2798 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:parsesDbRefDeclarationsCorrectly, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]StringBasedMongoQueryUnitTests,  @AT@ 10172 @LENGTH@ 581
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:parsesDbRefDeclarationsCorrectly, Exception,  @AT@ 10172 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:parsesDbRefDeclarationsCorrectly, Exception,  @AT@ 10179 @LENGTH@ 4
---INS SimpleName@@MethodName:parsesDbRefDeclarationsCorrectly @TO@ MethodDeclaration@@public, void, MethodName:parsesDbRefDeclarationsCorrectly, Exception,  @AT@ 10184 @LENGTH@ 32
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:parsesDbRefDeclarationsCorrectly, Exception,  @AT@ 10226 @LENGTH@ 9
---INS VariableDeclarationStatement@@StringBasedMongoQuery mongoQuery=createQueryForMethod("methodWithManuallyDefinedDbRef",String.class); @TO@ MethodDeclaration@@public, void, MethodName:parsesDbRefDeclarationsCorrectly, Exception,  @AT@ 10241 @LENGTH@ 104
------INS SimpleType@@StringBasedMongoQuery @TO@ VariableDeclarationStatement@@StringBasedMongoQuery mongoQuery=createQueryForMethod("methodWithManuallyDefinedDbRef",String.class); @AT@ 10241 @LENGTH@ 21
------INS VariableDeclarationFragment@@mongoQuery=createQueryForMethod("methodWithManuallyDefinedDbRef",String.class) @TO@ VariableDeclarationStatement@@StringBasedMongoQuery mongoQuery=createQueryForMethod("methodWithManuallyDefinedDbRef",String.class); @AT@ 10263 @LENGTH@ 81
---------INS SimpleName@@mongoQuery @TO@ VariableDeclarationFragment@@mongoQuery=createQueryForMethod("methodWithManuallyDefinedDbRef",String.class) @AT@ 10263 @LENGTH@ 10
---------INS MethodInvocation@@createQueryForMethod("methodWithManuallyDefinedDbRef",String.class) @TO@ VariableDeclarationFragment@@mongoQuery=createQueryForMethod("methodWithManuallyDefinedDbRef",String.class) @AT@ 10276 @LENGTH@ 68
------------INS SimpleName@@MethodName:createQueryForMethod:["methodWithManuallyDefinedDbRef", String.class] @TO@ MethodInvocation@@createQueryForMethod("methodWithManuallyDefinedDbRef",String.class) @AT@ 10276 @LENGTH@ 68
---------------INS StringLiteral@@"methodWithManuallyDefinedDbRef" @TO@ SimpleName@@MethodName:createQueryForMethod:["methodWithManuallyDefinedDbRef", String.class] @AT@ 10297 @LENGTH@ 32
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:createQueryForMethod:["methodWithManuallyDefinedDbRef", String.class] @AT@ 10331 @LENGTH@ 12
---INS VariableDeclarationStatement@@ConvertingParameterAccessor parameterAccessor=StubParameterAccessor.getAccessor(converter,"myid"); @TO@ MethodDeclaration@@public, void, MethodName:parsesDbRefDeclarationsCorrectly, Exception,  @AT@ 10348 @LENGTH@ 101
------INS SimpleType@@ConvertingParameterAccessor @TO@ VariableDeclarationStatement@@ConvertingParameterAccessor parameterAccessor=StubParameterAccessor.getAccessor(converter,"myid"); @AT@ 10348 @LENGTH@ 27
------INS VariableDeclarationFragment@@parameterAccessor=StubParameterAccessor.getAccessor(converter,"myid") @TO@ VariableDeclarationStatement@@ConvertingParameterAccessor parameterAccessor=StubParameterAccessor.getAccessor(converter,"myid"); @AT@ 10376 @LENGTH@ 72
---------INS SimpleName@@parameterAccessor @TO@ VariableDeclarationFragment@@parameterAccessor=StubParameterAccessor.getAccessor(converter,"myid") @AT@ 10376 @LENGTH@ 17
---------INS MethodInvocation@@StubParameterAccessor.getAccessor(converter,"myid") @TO@ VariableDeclarationFragment@@parameterAccessor=StubParameterAccessor.getAccessor(converter,"myid") @AT@ 10396 @LENGTH@ 52
------------INS SimpleName@@Name:StubParameterAccessor @TO@ MethodInvocation@@StubParameterAccessor.getAccessor(converter,"myid") @AT@ 10396 @LENGTH@ 21
------------INS SimpleName@@MethodName:getAccessor:[converter, "myid"] @TO@ MethodInvocation@@StubParameterAccessor.getAccessor(converter,"myid") @AT@ 10418 @LENGTH@ 30
---------------INS SimpleName@@converter @TO@ SimpleName@@MethodName:getAccessor:[converter, "myid"] @AT@ 10430 @LENGTH@ 9
---------------INS StringLiteral@@"myid" @TO@ SimpleName@@MethodName:getAccessor:[converter, "myid"] @AT@ 10441 @LENGTH@ 6
---INS VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=mongoQuery.createQuery(parameterAccessor); @TO@ MethodDeclaration@@public, void, MethodName:parsesDbRefDeclarationsCorrectly, Exception,  @AT@ 10453 @LENGTH@ 100
------INS SimpleType@@org.springframework.data.mongodb.core.query.Query @TO@ VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=mongoQuery.createQuery(parameterAccessor); @AT@ 10453 @LENGTH@ 49
------INS VariableDeclarationFragment@@query=mongoQuery.createQuery(parameterAccessor) @TO@ VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=mongoQuery.createQuery(parameterAccessor); @AT@ 10503 @LENGTH@ 49
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=mongoQuery.createQuery(parameterAccessor) @AT@ 10503 @LENGTH@ 5
---------INS MethodInvocation@@mongoQuery.createQuery(parameterAccessor) @TO@ VariableDeclarationFragment@@query=mongoQuery.createQuery(parameterAccessor) @AT@ 10511 @LENGTH@ 41
------------INS SimpleName@@Name:mongoQuery @TO@ MethodInvocation@@mongoQuery.createQuery(parameterAccessor) @AT@ 10511 @LENGTH@ 10
------------INS SimpleName@@MethodName:createQuery:[parameterAccessor] @TO@ MethodInvocation@@mongoQuery.createQuery(parameterAccessor) @AT@ 10522 @LENGTH@ 30
---------------INS SimpleName@@parameterAccessor @TO@ SimpleName@@MethodName:createQuery:[parameterAccessor] @AT@ 10534 @LENGTH@ 17
---INS VariableDeclarationStatement@@DBRef dbRef=DBObjectTestUtils.getTypedValue(query.getQueryObject(),"reference",DBRef.class); @TO@ MethodDeclaration@@public, void, MethodName:parsesDbRefDeclarationsCorrectly, Exception,  @AT@ 10557 @LENGTH@ 96
------INS SimpleType@@DBRef @TO@ VariableDeclarationStatement@@DBRef dbRef=DBObjectTestUtils.getTypedValue(query.getQueryObject(),"reference",DBRef.class); @AT@ 10557 @LENGTH@ 5
------INS VariableDeclarationFragment@@dbRef=DBObjectTestUtils.getTypedValue(query.getQueryObject(),"reference",DBRef.class) @TO@ VariableDeclarationStatement@@DBRef dbRef=DBObjectTestUtils.getTypedValue(query.getQueryObject(),"reference",DBRef.class); @AT@ 10563 @LENGTH@ 89
---------INS SimpleName@@dbRef @TO@ VariableDeclarationFragment@@dbRef=DBObjectTestUtils.getTypedValue(query.getQueryObject(),"reference",DBRef.class) @AT@ 10563 @LENGTH@ 5
---------INS MethodInvocation@@DBObjectTestUtils.getTypedValue(query.getQueryObject(),"reference",DBRef.class) @TO@ VariableDeclarationFragment@@dbRef=DBObjectTestUtils.getTypedValue(query.getQueryObject(),"reference",DBRef.class) @AT@ 10571 @LENGTH@ 81
------------INS SimpleName@@Name:DBObjectTestUtils @TO@ MethodInvocation@@DBObjectTestUtils.getTypedValue(query.getQueryObject(),"reference",DBRef.class) @AT@ 10571 @LENGTH@ 17
------------INS SimpleName@@MethodName:getTypedValue:[query.getQueryObject(), "reference", DBRef.class] @TO@ MethodInvocation@@DBObjectTestUtils.getTypedValue(query.getQueryObject(),"reference",DBRef.class) @AT@ 10589 @LENGTH@ 63
---------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:getTypedValue:[query.getQueryObject(), "reference", DBRef.class] @AT@ 10603 @LENGTH@ 22
------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 10603 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 10609 @LENGTH@ 16
---------------INS StringLiteral@@"reference" @TO@ SimpleName@@MethodName:getTypedValue:[query.getQueryObject(), "reference", DBRef.class] @AT@ 10627 @LENGTH@ 11
---------------INS TypeLiteral@@DBRef.class @TO@ SimpleName@@MethodName:getTypedValue:[query.getQueryObject(), "reference", DBRef.class] @AT@ 10640 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(dbRef.getId(),is((Object)"myid")) @TO@ MethodDeclaration@@public, void, MethodName:parsesDbRefDeclarationsCorrectly, Exception,  @AT@ 10656 @LENGTH@ 47
------INS MethodInvocation@@assertThat(dbRef.getId(),is((Object)"myid")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(dbRef.getId(),is((Object)"myid")) @AT@ 10656 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertThat:[dbRef.getId(), is((Object)"myid")] @TO@ MethodInvocation@@assertThat(dbRef.getId(),is((Object)"myid")) @AT@ 10656 @LENGTH@ 46
------------INS MethodInvocation@@dbRef.getId() @TO@ SimpleName@@MethodName:assertThat:[dbRef.getId(), is((Object)"myid")] @AT@ 10667 @LENGTH@ 13
---------------INS SimpleName@@Name:dbRef @TO@ MethodInvocation@@dbRef.getId() @AT@ 10667 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@dbRef.getId() @AT@ 10673 @LENGTH@ 7
------------INS MethodInvocation@@is((Object)"myid") @TO@ SimpleName@@MethodName:assertThat:[dbRef.getId(), is((Object)"myid")] @AT@ 10682 @LENGTH@ 19
---------------INS SimpleName@@MethodName:is:[(Object)"myid"] @TO@ MethodInvocation@@is((Object)"myid") @AT@ 10682 @LENGTH@ 19
------------------INS CastExpression@@(Object)"myid" @TO@ SimpleName@@MethodName:is:[(Object)"myid"] @AT@ 10685 @LENGTH@ 15
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)"myid" @AT@ 10686 @LENGTH@ 6
---------------------INS StringLiteral@@"myid" @TO@ CastExpression@@(Object)"myid" @AT@ 10694 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:[(Object)"myid"] @TO@ MethodInvocation@@is((Object)"myid") @AT@ 10682 @LENGTH@ 19
------------------INS CastExpression@@(Object)"myid" @TO@ SimpleName@@MethodName:is:[(Object)"myid"] @AT@ 10685 @LENGTH@ 15
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)"myid" @AT@ 10686 @LENGTH@ 6
---------------------INS StringLiteral@@"myid" @TO@ CastExpression@@(Object)"myid" @AT@ 10694 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(dbRef.getRef(),is("reference")) @TO@ MethodDeclaration@@public, void, MethodName:parsesDbRefDeclarationsCorrectly, Exception,  @AT@ 10706 @LENGTH@ 44
------INS MethodInvocation@@assertThat(dbRef.getRef(),is("reference")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(dbRef.getRef(),is("reference")) @AT@ 10706 @LENGTH@ 43
---------INS SimpleName@@MethodName:assertThat:[dbRef.getRef(), is("reference")] @TO@ MethodInvocation@@assertThat(dbRef.getRef(),is("reference")) @AT@ 10706 @LENGTH@ 43
------------INS MethodInvocation@@dbRef.getRef() @TO@ SimpleName@@MethodName:assertThat:[dbRef.getRef(), is("reference")] @AT@ 10717 @LENGTH@ 14
---------------INS SimpleName@@Name:dbRef @TO@ MethodInvocation@@dbRef.getRef() @AT@ 10717 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getRef:[] @TO@ MethodInvocation@@dbRef.getRef() @AT@ 10723 @LENGTH@ 8
------------INS MethodInvocation@@is("reference") @TO@ SimpleName@@MethodName:assertThat:[dbRef.getRef(), is("reference")] @AT@ 10733 @LENGTH@ 15
---------------INS SimpleName@@MethodName:is:["reference"] @TO@ MethodInvocation@@is("reference") @AT@ 10733 @LENGTH@ 15
------------------INS StringLiteral@@"reference" @TO@ SimpleName@@MethodName:is:["reference"] @AT@ 10736 @LENGTH@ 11
---------------INS SimpleName@@MethodName:is:["reference"] @TO@ MethodInvocation@@is("reference") @AT@ 10733 @LENGTH@ 15
------------------INS StringLiteral@@"reference" @TO@ SimpleName@@MethodName:is:["reference"] @AT@ 10736 @LENGTH@ 11


UPD FieldDeclaration@@static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.GET_THREAD_INFO,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setParameters(CommonAttributes.ID,CommonAttributes.MAX_DEPTH).setReplyType(ModelType.LIST).setReplyParameters(CommonAttributes.THREAD_INFO_ATTRIBUTES).setReadOnly().setRuntimeOnly().build()] @TO@ static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.GET_THREAD_INFO,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setParameters(CommonAttributes.ID,CommonAttributes.MAX_DEPTH).setReplyType(ModelType.OBJECT).setReplyParameters(CommonAttributes.THREAD_INFO_ATTRIBUTES).setReadOnly().setRuntimeOnly().build()] @AT@ 2013 @LENGTH@ 481
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.GET_THREAD_INFO,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setParameters(CommonAttributes.ID,CommonAttributes.MAX_DEPTH).setReplyType(ModelType.LIST).setReplyParameters(CommonAttributes.THREAD_INFO_ATTRIBUTES).setReadOnly().setRuntimeOnly().build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.GET_THREAD_INFO,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setParameters(CommonAttributes.ID,CommonAttributes.MAX_DEPTH).setReplyType(ModelType.OBJECT).setReplyParameters(CommonAttributes.THREAD_INFO_ATTRIBUTES).setReadOnly().setRuntimeOnly().build() @AT@ 2046 @LENGTH@ 447
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.GET_THREAD_INFO,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setParameters(CommonAttributes.ID,CommonAttributes.MAX_DEPTH).setReplyType(ModelType.LIST).setReplyParameters(CommonAttributes.THREAD_INFO_ATTRIBUTES).setReadOnly().setRuntimeOnly().build() @TO@ new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.GET_THREAD_INFO,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setParameters(CommonAttributes.ID,CommonAttributes.MAX_DEPTH).setReplyType(ModelType.OBJECT).setReplyParameters(CommonAttributes.THREAD_INFO_ATTRIBUTES).setReadOnly().setRuntimeOnly().build() @AT@ 2059 @LENGTH@ 434
---------UPD MethodInvocation@@MethodName:setReplyType:[ModelType.LIST] @TO@ MethodName:setReplyType:[ModelType.OBJECT] @AT@ 2059 @LENGTH@ 271
------------UPD QualifiedName@@ModelType.LIST @TO@ ModelType.OBJECT @AT@ 2315 @LENGTH@ 14
---------------UPD SimpleName@@LIST @TO@ OBJECT @AT@ 2325 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testPasswordErased,  @TO@ TypeDeclaration@@[public]DefaultAuthorizationRequestFactoryTests,  @AT@ 4130 @LENGTH@ 451
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testPasswordErased,  @AT@ 4130 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testPasswordErased,  @AT@ 4137 @LENGTH@ 4
---INS SimpleName@@MethodName:testPasswordErased @TO@ MethodDeclaration@@public, void, MethodName:testPasswordErased,  @AT@ 4142 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:factory.setCheckUserScopes(true) @TO@ MethodDeclaration@@public, void, MethodName:testPasswordErased,  @AT@ 4167 @LENGTH@ 33
------INS MethodInvocation@@factory.setCheckUserScopes(true) @TO@ ExpressionStatement@@MethodInvocation:factory.setCheckUserScopes(true) @AT@ 4167 @LENGTH@ 32
---------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.setCheckUserScopes(true) @AT@ 4167 @LENGTH@ 7
---------INS SimpleName@@MethodName:setCheckUserScopes:[true] @TO@ MethodInvocation@@factory.setCheckUserScopes(true) @AT@ 4175 @LENGTH@ 24
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setCheckUserScopes:[true] @AT@ 4194 @LENGTH@ 4
---INS VariableDeclarationStatement@@Map<String,String> params=new HashMap<String,String>(Collections.singletonMap("client_id","foo")); @TO@ MethodDeclaration@@public, void, MethodName:testPasswordErased,  @AT@ 4203 @LENGTH@ 103
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> params=new HashMap<String,String>(Collections.singletonMap("client_id","foo")); @AT@ 4203 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 4203 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 4207 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 4215 @LENGTH@ 6
------INS VariableDeclarationFragment@@params=new HashMap<String,String>(Collections.singletonMap("client_id","foo")) @TO@ VariableDeclarationStatement@@Map<String,String> params=new HashMap<String,String>(Collections.singletonMap("client_id","foo")); @AT@ 4223 @LENGTH@ 82
---------INS SimpleName@@params @TO@ VariableDeclarationFragment@@params=new HashMap<String,String>(Collections.singletonMap("client_id","foo")) @AT@ 4223 @LENGTH@ 6
---------INS ClassInstanceCreation@@HashMap<String,String>[Collections.singletonMap("client_id","foo")] @TO@ VariableDeclarationFragment@@params=new HashMap<String,String>(Collections.singletonMap("client_id","foo")) @AT@ 4232 @LENGTH@ 73
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[Collections.singletonMap("client_id","foo")] @AT@ 4232 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[Collections.singletonMap("client_id","foo")] @AT@ 4236 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 4236 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 4244 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 4252 @LENGTH@ 6
------------INS MethodInvocation@@Collections.singletonMap("client_id","foo") @TO@ ClassInstanceCreation@@HashMap<String,String>[Collections.singletonMap("client_id","foo")] @AT@ 4260 @LENGTH@ 44
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap("client_id","foo") @AT@ 4260 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonMap:["client_id", "foo"] @TO@ MethodInvocation@@Collections.singletonMap("client_id","foo") @AT@ 4272 @LENGTH@ 32
------------------INS StringLiteral@@"client_id" @TO@ SimpleName@@MethodName:singletonMap:["client_id", "foo"] @AT@ 4285 @LENGTH@ 11
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:singletonMap:["client_id", "foo"] @AT@ 4298 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:params.put("password","shhh") @TO@ MethodDeclaration@@public, void, MethodName:testPasswordErased,  @AT@ 4309 @LENGTH@ 31
------INS MethodInvocation@@params.put("password","shhh") @TO@ ExpressionStatement@@MethodInvocation:params.put("password","shhh") @AT@ 4309 @LENGTH@ 30
---------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.put("password","shhh") @AT@ 4309 @LENGTH@ 6
---------INS SimpleName@@MethodName:put:["password", "shhh"] @TO@ MethodInvocation@@params.put("password","shhh") @AT@ 4316 @LENGTH@ 23
------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:put:["password", "shhh"] @AT@ 4320 @LENGTH@ 10
------------INS StringLiteral@@"shhh" @TO@ SimpleName@@MethodName:put:["password", "shhh"] @AT@ 4332 @LENGTH@ 6
---INS VariableDeclarationStatement@@AuthorizationRequest auth=factory.createAuthorizationRequest(params); @TO@ MethodDeclaration@@public, void, MethodName:testPasswordErased,  @AT@ 4345 @LENGTH@ 71
------INS SimpleType@@AuthorizationRequest @TO@ VariableDeclarationStatement@@AuthorizationRequest auth=factory.createAuthorizationRequest(params); @AT@ 4345 @LENGTH@ 20
------INS VariableDeclarationFragment@@auth=factory.createAuthorizationRequest(params) @TO@ VariableDeclarationStatement@@AuthorizationRequest auth=factory.createAuthorizationRequest(params); @AT@ 4366 @LENGTH@ 49
---------INS SimpleName@@auth @TO@ VariableDeclarationFragment@@auth=factory.createAuthorizationRequest(params) @AT@ 4366 @LENGTH@ 4
---------INS MethodInvocation@@factory.createAuthorizationRequest(params) @TO@ VariableDeclarationFragment@@auth=factory.createAuthorizationRequest(params) @AT@ 4373 @LENGTH@ 42
------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.createAuthorizationRequest(params) @AT@ 4373 @LENGTH@ 7
------------INS SimpleName@@MethodName:createAuthorizationRequest:[params] @TO@ MethodInvocation@@factory.createAuthorizationRequest(params) @AT@ 4381 @LENGTH@ 34
---------------INS SimpleName@@params @TO@ SimpleName@@MethodName:createAuthorizationRequest:[params] @AT@ 4408 @LENGTH@ 6
---INS VariableDeclarationStatement@@OAuth2Request request=factory.createTokenRequest(auth,"password").createOAuth2Request(client); @TO@ MethodDeclaration@@public, void, MethodName:testPasswordErased,  @AT@ 4419 @LENGTH@ 97
------INS SimpleType@@OAuth2Request @TO@ VariableDeclarationStatement@@OAuth2Request request=factory.createTokenRequest(auth,"password").createOAuth2Request(client); @AT@ 4419 @LENGTH@ 13
------INS VariableDeclarationFragment@@request=factory.createTokenRequest(auth,"password").createOAuth2Request(client) @TO@ VariableDeclarationStatement@@OAuth2Request request=factory.createTokenRequest(auth,"password").createOAuth2Request(client); @AT@ 4433 @LENGTH@ 82
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=factory.createTokenRequest(auth,"password").createOAuth2Request(client) @AT@ 4433 @LENGTH@ 7
---------INS MethodInvocation@@factory.createTokenRequest(auth,"password").createOAuth2Request(client) @TO@ VariableDeclarationFragment@@request=factory.createTokenRequest(auth,"password").createOAuth2Request(client) @AT@ 4443 @LENGTH@ 72
------------INS MethodInvocation@@MethodName:createTokenRequest:[auth, "password"] @TO@ MethodInvocation@@factory.createTokenRequest(auth,"password").createOAuth2Request(client) @AT@ 4443 @LENGTH@ 44
---------------INS SimpleName@@auth @TO@ MethodInvocation@@MethodName:createTokenRequest:[auth, "password"] @AT@ 4470 @LENGTH@ 4
---------------INS StringLiteral@@"password" @TO@ MethodInvocation@@MethodName:createTokenRequest:[auth, "password"] @AT@ 4476 @LENGTH@ 10
------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.createTokenRequest(auth,"password").createOAuth2Request(client) @AT@ 4443 @LENGTH@ 7
------------INS SimpleName@@MethodName:createOAuth2Request:[client] @TO@ MethodInvocation@@factory.createTokenRequest(auth,"password").createOAuth2Request(client) @AT@ 4488 @LENGTH@ 27
---------------INS SimpleName@@client @TO@ SimpleName@@MethodName:createOAuth2Request:[client] @AT@ 4508 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertNull(request.getRequestParameters().get("password")) @TO@ MethodDeclaration@@public, void, MethodName:testPasswordErased,  @AT@ 4519 @LENGTH@ 59
------INS MethodInvocation@@assertNull(request.getRequestParameters().get("password")) @TO@ ExpressionStatement@@MethodInvocation:assertNull(request.getRequestParameters().get("password")) @AT@ 4519 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertNull:[request.getRequestParameters().get("password")] @TO@ MethodInvocation@@assertNull(request.getRequestParameters().get("password")) @AT@ 4519 @LENGTH@ 58
------------INS MethodInvocation@@request.getRequestParameters().get("password") @TO@ SimpleName@@MethodName:assertNull:[request.getRequestParameters().get("password")] @AT@ 4530 @LENGTH@ 46
---------------INS MethodInvocation@@MethodName:getRequestParameters:[] @TO@ MethodInvocation@@request.getRequestParameters().get("password") @AT@ 4530 @LENGTH@ 30
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getRequestParameters().get("password") @AT@ 4530 @LENGTH@ 7
---------------INS SimpleName@@MethodName:get:["password"] @TO@ MethodInvocation@@request.getRequestParameters().get("password") @AT@ 4561 @LENGTH@ 15
------------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:get:["password"] @AT@ 4565 @LENGTH@ 10


UPD FieldDeclaration@@private, volatile, ScheduledFuture, [future] @TO@ private, volatile, ScheduledFuture<?>, [future] @AT@ 2485 @LENGTH@ 40
---INS ParameterizedType@@ScheduledFuture<?> @TO@ FieldDeclaration@@private, volatile, ScheduledFuture, [future] @AT@ 2502 @LENGTH@ 18
------INS SimpleType@@ScheduledFuture @TO@ ParameterizedType@@ScheduledFuture<?> @AT@ 2502 @LENGTH@ 15
------INS WildcardType@@? @TO@ ParameterizedType@@ScheduledFuture<?> @AT@ 2518 @LENGTH@ 1
---DEL SimpleType@@ScheduledFuture @AT@ 2502 @LENGTH@ 15


DEL MethodDeclaration@@public, static, DataAccessException, MethodName:toDataAccessException, Exception ex,  @AT@ 5825 @LENGTH@ 116
---DEL Modifier@@public @AT@ 5825 @LENGTH@ 6
---DEL Modifier@@static @AT@ 5832 @LENGTH@ 6
---DEL SimpleType@@DataAccessException @AT@ 5839 @LENGTH@ 19
---DEL SimpleName@@MethodName:toDataAccessException @AT@ 5859 @LENGTH@ 21
---DEL SingleVariableDeclaration@@Exception ex @AT@ 5881 @LENGTH@ 12
------DEL SimpleType@@Exception @AT@ 5881 @LENGTH@ 9
------DEL SimpleName@@ex @AT@ 5891 @LENGTH@ 2
---DEL ReturnStatement@@MethodInvocation:EXCEPTION_CONVERTER.convert(ex) @AT@ 5899 @LENGTH@ 39
------DEL MethodInvocation@@EXCEPTION_CONVERTER.convert(ex) @AT@ 5906 @LENGTH@ 31
---------DEL SimpleName@@Name:EXCEPTION_CONVERTER @AT@ 5906 @LENGTH@ 19
---------DEL SimpleName@@MethodName:convert:[ex] @AT@ 5926 @LENGTH@ 11
------------DEL SimpleName@@ex @AT@ 5934 @LENGTH@ 2


UPD FieldDeclaration@@private, static, final, Set<Class<?>>, [PRIMITIVE_ARRAY_TYPES=new TreeSet<Class<?>>(Arrays.asList(byte[].class,short[].class,int[].class,long[].class,float[].class,double[].class,char[].class,boolean[].class))] @TO@ private, static, final, List<?>, [PRIMITIVE_ARRAY_TYPES=Arrays.asList(byte[].class,short[].class,int[].class,long[].class,float[].class,double[].class,char[].class,boolean[].class)] @AT@ 2419 @LENGTH@ 269
---UPD ParameterizedType@@Set<Class<?>> @TO@ List<?> @AT@ 2440 @LENGTH@ 13
------UPD SimpleType@@Set @TO@ List @AT@ 2440 @LENGTH@ 3
------DEL ParameterizedType@@Class<?> @AT@ 2444 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 2444 @LENGTH@ 5
------MOV WildcardType@@? @TO@ ParameterizedType@@Set<Class<?>> @AT@ 2450 @LENGTH@ 1
---UPD VariableDeclarationFragment@@PRIMITIVE_ARRAY_TYPES=new TreeSet<Class<?>>(Arrays.asList(byte[].class,short[].class,int[].class,long[].class,float[].class,double[].class,char[].class,boolean[].class)) @TO@ PRIMITIVE_ARRAY_TYPES=Arrays.asList(byte[].class,short[].class,int[].class,long[].class,float[].class,double[].class,char[].class,boolean[].class) @AT@ 2454 @LENGTH@ 233
------DEL ClassInstanceCreation@@TreeSet<Class<?>>[Arrays.asList(byte[].class,short[].class,int[].class,long[].class,float[].class,double[].class,char[].class,boolean[].class)] @AT@ 2487 @LENGTH@ 200
---------DEL New@@new @AT@ 2487 @LENGTH@ 3
---------DEL ParameterizedType@@TreeSet<Class<?>> @AT@ 2491 @LENGTH@ 17
------------DEL SimpleType@@TreeSet @AT@ 2491 @LENGTH@ 7
------------DEL ParameterizedType@@Class<?> @AT@ 2499 @LENGTH@ 8
---------------DEL SimpleType@@Class @AT@ 2499 @LENGTH@ 5
---------------DEL WildcardType@@? @AT@ 2505 @LENGTH@ 1
------MOV MethodInvocation@@Arrays.asList(byte[].class,short[].class,int[].class,long[].class,float[].class,double[].class,char[].class,boolean[].class) @TO@ VariableDeclarationFragment@@PRIMITIVE_ARRAY_TYPES=new TreeSet<Class<?>>(Arrays.asList(byte[].class,short[].class,int[].class,long[].class,float[].class,double[].class,char[].class,boolean[].class)) @AT@ 2509 @LENGTH@ 177


DEL MethodDeclaration@@public, void, MethodName:testCamelContextName, Exception,  @AT@ 2054 @LENGTH@ 447
---DEL Modifier@@public @AT@ 2054 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2061 @LENGTH@ 4
---DEL SimpleName@@MethodName:testCamelContextName @AT@ 2066 @LENGTH@ 20
---DEL SimpleType@@Exception @AT@ 2096 @LENGTH@ 9
---DEL VariableDeclarationStatement@@String name1=context.getName(); @AT@ 2175 @LENGTH@ 33
------DEL SimpleType@@String @AT@ 2175 @LENGTH@ 6
------DEL VariableDeclarationFragment@@name1=context.getName() @AT@ 2182 @LENGTH@ 25
---------DEL SimpleName@@name1 @AT@ 2182 @LENGTH@ 5
---------DEL MethodInvocation@@context.getName() @AT@ 2190 @LENGTH@ 17
------------DEL SimpleName@@Name:context @AT@ 2190 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getName:[] @AT@ 2198 @LENGTH@ 9
---DEL VariableDeclarationStatement@@CamelContext context2=createCamelContext(); @AT@ 2218 @LENGTH@ 45
------DEL SimpleType@@CamelContext @AT@ 2218 @LENGTH@ 12
------DEL VariableDeclarationFragment@@context2=createCamelContext() @AT@ 2231 @LENGTH@ 31
---------DEL SimpleName@@context2 @AT@ 2231 @LENGTH@ 8
---------DEL MethodInvocation@@MethodName:createCamelContext:[] @AT@ 2242 @LENGTH@ 20
---DEL VariableDeclarationStatement@@String name2=context2.getName(); @AT@ 2272 @LENGTH@ 34
------DEL SimpleType@@String @AT@ 2272 @LENGTH@ 6
------DEL VariableDeclarationFragment@@name2=context2.getName() @AT@ 2279 @LENGTH@ 26
---------DEL SimpleName@@name2 @AT@ 2279 @LENGTH@ 5
---------DEL MethodInvocation@@context2.getName() @AT@ 2287 @LENGTH@ 18
------------DEL SimpleName@@Name:context2 @AT@ 2287 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getName:[] @AT@ 2296 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:assertNotSame(name1,name2) @AT@ 2316 @LENGTH@ 28
------DEL MethodInvocation@@assertNotSame(name1,name2) @AT@ 2316 @LENGTH@ 27
---------DEL SimpleName@@MethodName:assertNotSame:[name1, name2] @AT@ 2316 @LENGTH@ 27
------------DEL SimpleName@@name1 @AT@ 2330 @LENGTH@ 5
------------DEL SimpleName@@name2 @AT@ 2337 @LENGTH@ 5
---DEL VariableDeclarationStatement@@String id="" + bundleContext.getBundle().getBundleId(); @AT@ 2354 @LENGTH@ 57
------DEL SimpleType@@String @AT@ 2354 @LENGTH@ 6
------DEL VariableDeclarationFragment@@id="" + bundleContext.getBundle().getBundleId() @AT@ 2361 @LENGTH@ 49
---------DEL SimpleName@@id @AT@ 2361 @LENGTH@ 2
---------DEL InfixExpression@@"" + bundleContext.getBundle().getBundleId() @AT@ 2366 @LENGTH@ 44
------------DEL StringLiteral@@"" @AT@ 2366 @LENGTH@ 2
------------DEL Operator@@+ @AT@ 2368 @LENGTH@ 1
------------DEL MethodInvocation@@bundleContext.getBundle().getBundleId() @AT@ 2371 @LENGTH@ 39
---------------DEL MethodInvocation@@MethodName:getBundle:[] @AT@ 2371 @LENGTH@ 25
---------------DEL SimpleName@@Name:bundleContext @AT@ 2371 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:getBundleId:[] @AT@ 2397 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:assertTrue(name1.startsWith(id)) @AT@ 2420 @LENGTH@ 33
------DEL MethodInvocation@@assertTrue(name1.startsWith(id)) @AT@ 2420 @LENGTH@ 32
---------DEL SimpleName@@MethodName:assertTrue:[name1.startsWith(id)] @AT@ 2420 @LENGTH@ 32
------------DEL MethodInvocation@@name1.startsWith(id) @AT@ 2431 @LENGTH@ 20
---------------DEL SimpleName@@Name:name1 @AT@ 2431 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:startsWith:[id] @AT@ 2437 @LENGTH@ 14
------------------DEL SimpleName@@id @AT@ 2448 @LENGTH@ 2
---DEL ExpressionStatement@@MethodInvocation:assertTrue(name2.startsWith(id)) @AT@ 2462 @LENGTH@ 33
------DEL MethodInvocation@@assertTrue(name2.startsWith(id)) @AT@ 2462 @LENGTH@ 32
---------DEL SimpleName@@MethodName:assertTrue:[name2.startsWith(id)] @AT@ 2462 @LENGTH@ 32
------------DEL MethodInvocation@@name2.startsWith(id) @AT@ 2473 @LENGTH@ 20
---------------DEL SimpleName@@Name:name2 @AT@ 2473 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:startsWith:[id] @AT@ 2479 @LENGTH@ 14
------------------DEL SimpleName@@id @AT@ 2490 @LENGTH@ 2


UPD VariableDeclarationStatement@@HttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 3771 @LENGTH@ 90
---UPD VariableDeclarationFragment@@client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 3782 @LENGTH@ 78
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 3791 @LENGTH@ 69
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 3791 @LENGTH@ 43
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 3835 @LENGTH@ 25
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3839 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:init, Exception,  @TO@ public, void, MethodName:init,  @AT@ 3810 @LENGTH@ 201
---DEL SimpleType@@Exception @AT@ 3836 @LENGTH@ 9
---UPD EnhancedForStatement@@for (AuthorizationServerConfigurer configurer : configurers) {  configurer.configure(endpoints);} @TO@ for (AuthorizationServerConfigurer configurer : configurers) {  try {    configurer.configure(endpoints);  } catch (  Exception e) {    throw new IllegalStateException("Cannot configure enpdoints",e);  }} @AT@ 3850 @LENGTH@ 102
------INS TryStatement@@try {  configurer.configure(endpoints);} catch (Exception e) {  throw new IllegalStateException("Cannot configure enpdoints",e);} @TO@ EnhancedForStatement@@for (AuthorizationServerConfigurer configurer : configurers) {  configurer.configure(endpoints);} @AT@ 3899 @LENGTH@ 147
---------MOV ExpressionStatement@@MethodInvocation:configurer.configure(endpoints) @TO@ TryStatement@@try {  configurer.configure(endpoints);} catch (Exception e) {  throw new IllegalStateException("Cannot configure enpdoints",e);} @AT@ 3916 @LENGTH@ 32
---------INS CatchClause@@catch (Exception e) {  throw new IllegalStateException("Cannot configure enpdoints",e);} @TO@ TryStatement@@try {  configurer.configure(endpoints);} catch (Exception e) {  throw new IllegalStateException("Cannot configure enpdoints",e);} @AT@ 3950 @LENGTH@ 96
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new IllegalStateException("Cannot configure enpdoints",e);} @AT@ 3957 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3957 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3967 @LENGTH@ 1
------------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Cannot configure enpdoints",e) @TO@ CatchClause@@catch (Exception e) {  throw new IllegalStateException("Cannot configure enpdoints",e);} @AT@ 3976 @LENGTH@ 65
---------------INS ClassInstanceCreation@@IllegalStateException["Cannot configure enpdoints", e] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Cannot configure enpdoints",e) @AT@ 3982 @LENGTH@ 58
------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["Cannot configure enpdoints", e] @AT@ 3982 @LENGTH@ 3
------------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["Cannot configure enpdoints", e] @AT@ 3986 @LENGTH@ 21
------------------INS StringLiteral@@"Cannot configure enpdoints" @TO@ ClassInstanceCreation@@IllegalStateException["Cannot configure enpdoints", e] @AT@ 4008 @LENGTH@ 28
------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@IllegalStateException["Cannot configure enpdoints", e] @AT@ 4038 @LENGTH@ 1


UPD TryStatement@@try {  ServiceHelper.stopServices(consumer);  observer.onCompleted();} catch (Exception e) {  observer.onError(e);} @TO@ try {  ServiceHelper.stopServices(consumer);} catch (Exception e) {  LOG.warn("Error stopping consumer: " + consumer + " due "+ e.getMessage()+ ". This exception is ignored.",e);} @AT@ 2296 @LENGTH@ 278
---DEL ExpressionStatement@@MethodInvocation:observer.onCompleted() @AT@ 2452 @LENGTH@ 23
------DEL MethodInvocation@@observer.onCompleted() @AT@ 2452 @LENGTH@ 22
---------DEL SimpleName@@Name:observer @AT@ 2452 @LENGTH@ 8
---------DEL SimpleName@@MethodName:onCompleted:[] @AT@ 2461 @LENGTH@ 13
---UPD CatchClause@@catch (Exception e) {  observer.onError(e);} @TO@ catch (Exception e) {  LOG.warn("Error stopping consumer: " + consumer + " due "+ e.getMessage()+ ". This exception is ignored.",e);} @AT@ 2494 @LENGTH@ 80
------UPD ExpressionStatement@@MethodInvocation:observer.onError(e) @TO@ MethodInvocation:LOG.warn("Error stopping consumer: " + consumer + " due "+ e.getMessage()+ ". This exception is ignored.",e) @AT@ 2536 @LENGTH@ 20
---------UPD MethodInvocation@@observer.onError(e) @TO@ LOG.warn("Error stopping consumer: " + consumer + " due "+ e.getMessage()+ ". This exception is ignored.",e) @AT@ 2536 @LENGTH@ 19
------------UPD SimpleName@@Name:observer @TO@ Name:LOG @AT@ 2536 @LENGTH@ 8
------------UPD SimpleName@@MethodName:onError:[e] @TO@ MethodName:warn:["Error stopping consumer: " + consumer + " due "+ e.getMessage()+ ". This exception is ignored.", e] @AT@ 2545 @LENGTH@ 10
---------------INS InfixExpression@@"Error stopping consumer: " + consumer + " due "+ e.getMessage()+ ". This exception is ignored." @TO@ SimpleName@@MethodName:onError:[e] @AT@ 2578 @LENGTH@ 98
------------------INS StringLiteral@@"Error stopping consumer: " @TO@ InfixExpression@@"Error stopping consumer: " + consumer + " due "+ e.getMessage()+ ". This exception is ignored." @AT@ 2578 @LENGTH@ 27
------------------INS Operator@@+ @TO@ InfixExpression@@"Error stopping consumer: " + consumer + " due "+ e.getMessage()+ ". This exception is ignored." @AT@ 2605 @LENGTH@ 1
------------------INS SimpleName@@consumer @TO@ InfixExpression@@"Error stopping consumer: " + consumer + " due "+ e.getMessage()+ ". This exception is ignored." @AT@ 2608 @LENGTH@ 8
------------------INS StringLiteral@@" due " @TO@ InfixExpression@@"Error stopping consumer: " + consumer + " due "+ e.getMessage()+ ". This exception is ignored." @AT@ 2619 @LENGTH@ 7
------------------INS MethodInvocation@@e.getMessage() @TO@ InfixExpression@@"Error stopping consumer: " + consumer + " due "+ e.getMessage()+ ". This exception is ignored." @AT@ 2629 @LENGTH@ 14
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 2629 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 2631 @LENGTH@ 12
------------------INS StringLiteral@@". This exception is ignored." @TO@ InfixExpression@@"Error stopping consumer: " + consumer + " due "+ e.getMessage()+ ". This exception is ignored." @AT@ 2646 @LENGTH@ 30


MOV FieldDeclaration@@SparkConfiguration, [sparkConfiguration] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="spark-rest",consumerClass=SparkConsumer.class,label="rest"), public]SparkEndpoint, DefaultEndpoint @AT@ 1464 @LENGTH@ 38


UPD IfStatement@@if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  if (producer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 7517 @LENGTH@ 284
---UPD Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  if (producer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 7541 @LENGTH@ 260
------INS IfStatement@@if (producer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @TO@ Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @AT@ 7659 @LENGTH@ 276
---------INS InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @TO@ IfStatement@@if (producer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7663 @LENGTH@ 61
------------INS MethodInvocation@@producer.getConfiguration().getSslContextParameters() @TO@ InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @AT@ 7663 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@producer.getConfiguration().getSslContextParameters() @AT@ 7663 @LENGTH@ 27
---------------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.getConfiguration().getSslContextParameters() @AT@ 7663 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getSslContextParameters:[] @TO@ MethodInvocation@@producer.getConfiguration().getSslContextParameters() @AT@ 7691 @LENGTH@ 25
------------INS Operator@@== @TO@ InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @AT@ 7716 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @AT@ 7720 @LENGTH@ 4
---------INS Block@@ThenBody:{  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @TO@ IfStatement@@if (producer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7726 @LENGTH@ 209
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7659 @LENGTH@ 89
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7659 @LENGTH@ 89


INS IfStatement@@if (StringUtils.hasText(oAuth2RequestValidatorRef)) {  tokenEndpointBean.addPropertyReference("oAuth2RequestValidator",oAuth2RequestValidatorRef);} @TO@ MethodDeclaration@@protected, AbstractBeanDefinition, MethodName:parseEndpointAndReturnFilter, Element element, ParserContext parserContext, String tokenServicesRef, String serializerRef,  @AT@ 13382 @LENGTH@ 153
---INS MethodInvocation@@StringUtils.hasText(oAuth2RequestValidatorRef) @TO@ IfStatement@@if (StringUtils.hasText(oAuth2RequestValidatorRef)) {  tokenEndpointBean.addPropertyReference("oAuth2RequestValidator",oAuth2RequestValidatorRef);} @AT@ 13386 @LENGTH@ 46
------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(oAuth2RequestValidatorRef) @AT@ 13386 @LENGTH@ 11
------INS SimpleName@@MethodName:hasText:[oAuth2RequestValidatorRef] @TO@ MethodInvocation@@StringUtils.hasText(oAuth2RequestValidatorRef) @AT@ 13398 @LENGTH@ 34
---------INS SimpleName@@oAuth2RequestValidatorRef @TO@ SimpleName@@MethodName:hasText:[oAuth2RequestValidatorRef] @AT@ 13406 @LENGTH@ 25
---INS Block@@ThenBody:{  tokenEndpointBean.addPropertyReference("oAuth2RequestValidator",oAuth2RequestValidatorRef);} @TO@ IfStatement@@if (StringUtils.hasText(oAuth2RequestValidatorRef)) {  tokenEndpointBean.addPropertyReference("oAuth2RequestValidator",oAuth2RequestValidatorRef);} @AT@ 13434 @LENGTH@ 101
------INS ExpressionStatement@@MethodInvocation:tokenEndpointBean.addPropertyReference("oAuth2RequestValidator",oAuth2RequestValidatorRef) @TO@ Block@@ThenBody:{  tokenEndpointBean.addPropertyReference("oAuth2RequestValidator",oAuth2RequestValidatorRef);} @AT@ 13439 @LENGTH@ 92
---------INS MethodInvocation@@tokenEndpointBean.addPropertyReference("oAuth2RequestValidator",oAuth2RequestValidatorRef) @TO@ ExpressionStatement@@MethodInvocation:tokenEndpointBean.addPropertyReference("oAuth2RequestValidator",oAuth2RequestValidatorRef) @AT@ 13439 @LENGTH@ 91
------------INS SimpleName@@Name:tokenEndpointBean @TO@ MethodInvocation@@tokenEndpointBean.addPropertyReference("oAuth2RequestValidator",oAuth2RequestValidatorRef) @AT@ 13439 @LENGTH@ 17
------------INS SimpleName@@MethodName:addPropertyReference:["oAuth2RequestValidator", oAuth2RequestValidatorRef] @TO@ MethodInvocation@@tokenEndpointBean.addPropertyReference("oAuth2RequestValidator",oAuth2RequestValidatorRef) @AT@ 13457 @LENGTH@ 73
---------------INS StringLiteral@@"oAuth2RequestValidator" @TO@ SimpleName@@MethodName:addPropertyReference:["oAuth2RequestValidator", oAuth2RequestValidatorRef] @AT@ 13478 @LENGTH@ 24
---------------INS SimpleName@@oAuth2RequestValidatorRef @TO@ SimpleName@@MethodName:addPropertyReference:["oAuth2RequestValidator", oAuth2RequestValidatorRef] @AT@ 13504 @LENGTH@ 25


INS MethodDeclaration@@private, void, MethodName:assertUnresolveableHostnames, String... hostnames,  @TO@ TypeDeclaration@@[public]ServerAddressPropertyEditorUnitTests,  @AT@ 5660 @LENGTH@ 306
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:assertUnresolveableHostnames, String... hostnames,  @AT@ 5660 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:assertUnresolveableHostnames, String... hostnames,  @AT@ 5668 @LENGTH@ 4
---INS SimpleName@@MethodName:assertUnresolveableHostnames @TO@ MethodDeclaration@@private, void, MethodName:assertUnresolveableHostnames, String... hostnames,  @AT@ 5673 @LENGTH@ 28
---INS SingleVariableDeclaration@@String... hostnames @TO@ MethodDeclaration@@private, void, MethodName:assertUnresolveableHostnames, String... hostnames,  @AT@ 5702 @LENGTH@ 19
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... hostnames @AT@ 5702 @LENGTH@ 6
------INS SimpleName@@hostnames @TO@ SingleVariableDeclaration@@String... hostnames @AT@ 5712 @LENGTH@ 9
---INS EnhancedForStatement@@for (String hostname : hostnames) {  try {    InetAddress.getByName(hostname);    Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.");  } catch (  UnknownHostException expected) {  }} @TO@ MethodDeclaration@@private, void, MethodName:assertUnresolveableHostnames, String... hostnames,  @AT@ 5728 @LENGTH@ 235
------INS SingleVariableDeclaration@@String hostname @TO@ EnhancedForStatement@@for (String hostname : hostnames) {  try {    InetAddress.getByName(hostname);    Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.");  } catch (  UnknownHostException expected) {  }} @AT@ 5733 @LENGTH@ 15
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String hostname @AT@ 5733 @LENGTH@ 6
---------INS SimpleName@@hostname @TO@ SingleVariableDeclaration@@String hostname @AT@ 5740 @LENGTH@ 8
------INS SimpleName@@hostnames @TO@ EnhancedForStatement@@for (String hostname : hostnames) {  try {    InetAddress.getByName(hostname);    Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.");  } catch (  UnknownHostException expected) {  }} @AT@ 5751 @LENGTH@ 9
------INS TryStatement@@try {  InetAddress.getByName(hostname);  Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.");} catch (UnknownHostException expected) {} @TO@ EnhancedForStatement@@for (String hostname : hostnames) {  try {    InetAddress.getByName(hostname);    Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.");  } catch (  UnknownHostException expected) {  }} @AT@ 5767 @LENGTH@ 192
---------INS ExpressionStatement@@MethodInvocation:InetAddress.getByName(hostname) @TO@ TryStatement@@try {  InetAddress.getByName(hostname);  Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.");} catch (UnknownHostException expected) {} @AT@ 5777 @LENGTH@ 32
------------INS MethodInvocation@@InetAddress.getByName(hostname) @TO@ ExpressionStatement@@MethodInvocation:InetAddress.getByName(hostname) @AT@ 5777 @LENGTH@ 31
---------------INS SimpleName@@Name:InetAddress @TO@ MethodInvocation@@InetAddress.getByName(hostname) @AT@ 5777 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getByName:[hostname] @TO@ MethodInvocation@@InetAddress.getByName(hostname) @AT@ 5789 @LENGTH@ 19
------------------INS SimpleName@@hostname @TO@ SimpleName@@MethodName:getByName:[hostname] @AT@ 5799 @LENGTH@ 8
---------INS ExpressionStatement@@MethodInvocation:Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.") @TO@ TryStatement@@try {  InetAddress.getByName(hostname);  Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.");} catch (UnknownHostException expected) {} @AT@ 5814 @LENGTH@ 85
------------INS MethodInvocation@@Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.") @TO@ ExpressionStatement@@MethodInvocation:Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.") @AT@ 5814 @LENGTH@ 84
---------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.") @AT@ 5814 @LENGTH@ 6
---------------INS SimpleName@@MethodName:fail:["Supposedly unresolveable hostname '" + hostname + "' can be resolved."] @TO@ MethodInvocation@@Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.") @AT@ 5821 @LENGTH@ 77
------------------INS InfixExpression@@"Supposedly unresolveable hostname '" + hostname + "' can be resolved." @TO@ SimpleName@@MethodName:fail:["Supposedly unresolveable hostname '" + hostname + "' can be resolved."] @AT@ 5826 @LENGTH@ 71
---------------------INS StringLiteral@@"Supposedly unresolveable hostname '" @TO@ InfixExpression@@"Supposedly unresolveable hostname '" + hostname + "' can be resolved." @AT@ 5826 @LENGTH@ 37
---------------------INS Operator@@+ @TO@ InfixExpression@@"Supposedly unresolveable hostname '" + hostname + "' can be resolved." @AT@ 5863 @LENGTH@ 1
---------------------INS SimpleName@@hostname @TO@ InfixExpression@@"Supposedly unresolveable hostname '" + hostname + "' can be resolved." @AT@ 5866 @LENGTH@ 8
---------------------INS StringLiteral@@"' can be resolved." @TO@ InfixExpression@@"Supposedly unresolveable hostname '" + hostname + "' can be resolved." @AT@ 5877 @LENGTH@ 20
---------INS CatchClause@@catch (UnknownHostException expected) {} @TO@ TryStatement@@try {  InetAddress.getByName(hostname);  Assert.fail("Supposedly unresolveable hostname '" + hostname + "' can be resolved.");} catch (UnknownHostException expected) {} @AT@ 5905 @LENGTH@ 54
------------INS SingleVariableDeclaration@@UnknownHostException expected @TO@ CatchClause@@catch (UnknownHostException expected) {} @AT@ 5912 @LENGTH@ 29
---------------INS SimpleType@@UnknownHostException @TO@ SingleVariableDeclaration@@UnknownHostException expected @AT@ 5912 @LENGTH@ 20
---------------INS SimpleName@@expected @TO@ SingleVariableDeclaration@@UnknownHostException expected @AT@ 5933 @LENGTH@ 8


UPD TypeDeclaration@@[private, final, static]MetricsStatistics,  @TO@ [private, static, final]MetricsStatistics,  @AT@ 2059 @LENGTH@ 991
---INS Modifier@@static @TO@ TypeDeclaration@@[private, final, static]MetricsStatistics,  @AT@ 2067 @LENGTH@ 6
---DEL Modifier@@static @AT@ 2073 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:setRefreshApprovalStatement, String refreshApprovalStatement,  @TO@ TypeDeclaration@@[public]JdbcApprovalStore, [ApprovalStore] @AT@ 3984 @LENGTH@ 137
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setRefreshApprovalStatement, String refreshApprovalStatement,  @AT@ 3984 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setRefreshApprovalStatement, String refreshApprovalStatement,  @AT@ 3991 @LENGTH@ 4
---INS SimpleName@@MethodName:setRefreshApprovalStatement @TO@ MethodDeclaration@@public, void, MethodName:setRefreshApprovalStatement, String refreshApprovalStatement,  @AT@ 3996 @LENGTH@ 27
---INS SingleVariableDeclaration@@String refreshApprovalStatement @TO@ MethodDeclaration@@public, void, MethodName:setRefreshApprovalStatement, String refreshApprovalStatement,  @AT@ 4024 @LENGTH@ 31
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String refreshApprovalStatement @AT@ 4024 @LENGTH@ 6
------INS SimpleName@@refreshApprovalStatement @TO@ SingleVariableDeclaration@@String refreshApprovalStatement @AT@ 4031 @LENGTH@ 24
---INS ExpressionStatement@@Assignment:this.refreshApprovalStatement=refreshApprovalStatement @TO@ MethodDeclaration@@public, void, MethodName:setRefreshApprovalStatement, String refreshApprovalStatement,  @AT@ 4061 @LENGTH@ 57
------INS Assignment@@this.refreshApprovalStatement=refreshApprovalStatement @TO@ ExpressionStatement@@Assignment:this.refreshApprovalStatement=refreshApprovalStatement @AT@ 4061 @LENGTH@ 56
---------INS FieldAccess@@this.refreshApprovalStatement @TO@ Assignment@@this.refreshApprovalStatement=refreshApprovalStatement @AT@ 4061 @LENGTH@ 29
------------INS ThisExpression@@this @TO@ FieldAccess@@this.refreshApprovalStatement @AT@ 4061 @LENGTH@ 4
------------INS SimpleName@@refreshApprovalStatement @TO@ FieldAccess@@this.refreshApprovalStatement @AT@ 4066 @LENGTH@ 24
---------INS Operator@@= @TO@ Assignment@@this.refreshApprovalStatement=refreshApprovalStatement @AT@ 4090 @LENGTH@ 1
---------INS SimpleName@@refreshApprovalStatement @TO@ Assignment@@this.refreshApprovalStatement=refreshApprovalStatement @AT@ 4093 @LENGTH@ 24


UPD ExpressionStatement@@Assignment:props[i]=StringUtils.unEscapeString(props[i]) @TO@ Assignment:props[i]=TempletonUtils.unEscapeString(props[i]) @AT@ 13385 @LENGTH@ 48
---UPD Assignment@@props[i]=StringUtils.unEscapeString(props[i]) @TO@ props[i]=TempletonUtils.unEscapeString(props[i]) @AT@ 13385 @LENGTH@ 47
------UPD MethodInvocation@@StringUtils.unEscapeString(props[i]) @TO@ TempletonUtils.unEscapeString(props[i]) @AT@ 13396 @LENGTH@ 36
---------UPD SimpleName@@Name:StringUtils @TO@ Name:TempletonUtils @AT@ 13396 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:when(region.getFullPath()).thenReturn(Region.SEPARATOR + name) @TO@ MethodInvocation:when(region.getFullPath()).thenReturn(fullPath) @AT@ 19555 @LENGTH@ 63
---UPD MethodInvocation@@when(region.getFullPath()).thenReturn(Region.SEPARATOR + name) @TO@ when(region.getFullPath()).thenReturn(fullPath) @AT@ 19555 @LENGTH@ 62
------UPD SimpleName@@MethodName:thenReturn:[Region.SEPARATOR + name] @TO@ MethodName:thenReturn:[fullPath] @AT@ 19582 @LENGTH@ 35
---------INS SimpleName@@fullPath @TO@ SimpleName@@MethodName:thenReturn:[Region.SEPARATOR + name] @AT@ 19684 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:count=counter.incrementAndGet() @TO@ Assignment:count=COUNTER.incrementAndGet() @AT@ 1979 @LENGTH@ 34
---UPD Assignment@@count=counter.incrementAndGet() @TO@ count=COUNTER.incrementAndGet() @AT@ 1979 @LENGTH@ 33
------UPD MethodInvocation@@counter.incrementAndGet() @TO@ COUNTER.incrementAndGet() @AT@ 1987 @LENGTH@ 25
---------UPD SimpleName@@Name:counter @TO@ Name:COUNTER @AT@ 1987 @LENGTH@ 7


UPD TypeDeclaration@@[public]StaticFieldConverterImpl, [StaticFieldConverter] @TO@ [@Component, public]StaticFieldConverterImpl, [StaticFieldConverter] @AT@ 1239 @LENGTH@ 2274
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]StaticFieldConverterImpl, [StaticFieldConverter] @AT@ 1286 @LENGTH@ 10


UPD MethodDeclaration@@public, voidMethodName:WebTestUtils, MockMvc mvc, LinkDiscoverers discoverers,  @TO@ public, voidMethodName:TestMvcClient, MockMvc mvc, LinkDiscoverers discoverers,  @AT@ 2048 @LENGTH@ 118
---UPD SimpleName@@MethodName:WebTestUtils @TO@ MethodName:TestMvcClient @AT@ 2055 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(mvc,"MockMvc must not be null!") @TO@ MethodDeclaration@@public, voidMethodName:WebTestUtils, MockMvc mvc, LinkDiscoverers discoverers,  @AT@ 2367 @LENGTH@ 49
------INS MethodInvocation@@Assert.notNull(mvc,"MockMvc must not be null!") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(mvc,"MockMvc must not be null!") @AT@ 2367 @LENGTH@ 48
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(mvc,"MockMvc must not be null!") @AT@ 2367 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[mvc, "MockMvc must not be null!"] @TO@ MethodInvocation@@Assert.notNull(mvc,"MockMvc must not be null!") @AT@ 2374 @LENGTH@ 41
------------INS SimpleName@@mvc @TO@ SimpleName@@MethodName:notNull:[mvc, "MockMvc must not be null!"] @AT@ 2382 @LENGTH@ 3
------------INS StringLiteral@@"MockMvc must not be null!" @TO@ SimpleName@@MethodName:notNull:[mvc, "MockMvc must not be null!"] @AT@ 2387 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(discoverers,"LinkDiscoverers must not be null!") @TO@ MethodDeclaration@@public, voidMethodName:WebTestUtils, MockMvc mvc, LinkDiscoverers discoverers,  @AT@ 2419 @LENGTH@ 65
------INS MethodInvocation@@Assert.notNull(discoverers,"LinkDiscoverers must not be null!") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(discoverers,"LinkDiscoverers must not be null!") @AT@ 2419 @LENGTH@ 64
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(discoverers,"LinkDiscoverers must not be null!") @AT@ 2419 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[discoverers, "LinkDiscoverers must not be null!"] @TO@ MethodInvocation@@Assert.notNull(discoverers,"LinkDiscoverers must not be null!") @AT@ 2426 @LENGTH@ 57
------------INS SimpleName@@discoverers @TO@ SimpleName@@MethodName:notNull:[discoverers, "LinkDiscoverers must not be null!"] @AT@ 2434 @LENGTH@ 11
------------INS StringLiteral@@"LinkDiscoverers must not be null!" @TO@ SimpleName@@MethodName:notNull:[discoverers, "LinkDiscoverers must not be null!"] @AT@ 2447 @LENGTH@ 35


UPD VariableDeclarationStatement@@Criteria criteria=from(part,property,where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)),(PotentiallyConvertingIterator)iterator); @TO@ Criteria criteria=from(part,property,where(path.toDotPath()),(PotentiallyConvertingIterator)iterator); @AT@ 3880 @LENGTH@ 177
---UPD VariableDeclarationFragment@@criteria=from(part,property,where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)),(PotentiallyConvertingIterator)iterator) @TO@ criteria=from(part,property,where(path.toDotPath()),(PotentiallyConvertingIterator)iterator) @AT@ 3889 @LENGTH@ 167
------UPD MethodInvocation@@from(part,property,where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)),(PotentiallyConvertingIterator)iterator) @TO@ from(part,property,where(path.toDotPath()),(PotentiallyConvertingIterator)iterator) @AT@ 3900 @LENGTH@ 156
---------UPD SimpleName@@MethodName:from:[part, property, where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)), (PotentiallyConvertingIterator)iterator] @TO@ MethodName:from:[part, property, where(path.toDotPath()), (PotentiallyConvertingIterator)iterator] @AT@ 3900 @LENGTH@ 156
------------UPD MethodInvocation@@where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)) @TO@ where(path.toDotPath()) @AT@ 3925 @LENGTH@ 84
---------------UPD SimpleName@@MethodName:where:[path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)] @TO@ MethodName:where:[path.toDotPath()] @AT@ 3925 @LENGTH@ 84
------------------UPD MethodInvocation@@path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE) @TO@ path.toDotPath() @AT@ 3931 @LENGTH@ 77
---------------------UPD SimpleName@@MethodName:toDotPath:[MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE] @TO@ MethodName:toDotPath:[] @AT@ 3936 @LENGTH@ 72
------------------------DEL QualifiedName@@MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE @AT@ 3946 @LENGTH@ 61
---------------------------DEL QualifiedName@@MongoPersistentProperty.PropertyToFieldNameConverter @AT@ 3946 @LENGTH@ 52
------------------------------DEL SimpleName@@MongoPersistentProperty @AT@ 3946 @LENGTH@ 23
------------------------------DEL SimpleName@@PropertyToFieldNameConverter @AT@ 3970 @LENGTH@ 28
---------------------------DEL SimpleName@@INSTANCE @AT@ 3999 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:where:[path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)] @TO@ MethodName:where:[path.toDotPath()] @AT@ 3925 @LENGTH@ 84
------------------UPD MethodInvocation@@path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE) @TO@ path.toDotPath() @AT@ 3931 @LENGTH@ 77
---------------------UPD SimpleName@@MethodName:toDotPath:[MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE] @TO@ MethodName:toDotPath:[] @AT@ 3936 @LENGTH@ 72
------------------------DEL QualifiedName@@MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE @AT@ 3946 @LENGTH@ 61
---------------------------DEL QualifiedName@@MongoPersistentProperty.PropertyToFieldNameConverter @AT@ 3946 @LENGTH@ 52
------------------------------DEL SimpleName@@MongoPersistentProperty @AT@ 3946 @LENGTH@ 23
------------------------------DEL SimpleName@@PropertyToFieldNameConverter @AT@ 3970 @LENGTH@ 28
---------------------------DEL SimpleName@@INSTANCE @AT@ 3999 @LENGTH@ 8


INS MethodDeclaration@@public, ResourceServerSecurityConfigurer, MethodName:expressionHandler, SecurityExpressionHandler<FilterInvocation> expressionHandler,  @TO@ TypeDeclaration@@[public, final]ResourceServerSecurityConfigurer, SecurityConfigurerAdapter<DefaultSecurityFilterChain,HttpSecurity> @AT@ 4054 @LENGTH@ 273
---INS Modifier@@public @TO@ MethodDeclaration@@public, ResourceServerSecurityConfigurer, MethodName:expressionHandler, SecurityExpressionHandler<FilterInvocation> expressionHandler,  @AT@ 4054 @LENGTH@ 6
---INS SimpleType@@ResourceServerSecurityConfigurer @TO@ MethodDeclaration@@public, ResourceServerSecurityConfigurer, MethodName:expressionHandler, SecurityExpressionHandler<FilterInvocation> expressionHandler,  @AT@ 4061 @LENGTH@ 32
---INS SimpleName@@MethodName:expressionHandler @TO@ MethodDeclaration@@public, ResourceServerSecurityConfigurer, MethodName:expressionHandler, SecurityExpressionHandler<FilterInvocation> expressionHandler,  @AT@ 4094 @LENGTH@ 17
---INS SingleVariableDeclaration@@SecurityExpressionHandler<FilterInvocation> expressionHandler @TO@ MethodDeclaration@@public, ResourceServerSecurityConfigurer, MethodName:expressionHandler, SecurityExpressionHandler<FilterInvocation> expressionHandler,  @AT@ 4112 @LENGTH@ 61
------INS ParameterizedType@@SecurityExpressionHandler<FilterInvocation> @TO@ SingleVariableDeclaration@@SecurityExpressionHandler<FilterInvocation> expressionHandler @AT@ 4112 @LENGTH@ 43
---------INS SimpleType@@SecurityExpressionHandler @TO@ ParameterizedType@@SecurityExpressionHandler<FilterInvocation> @AT@ 4112 @LENGTH@ 25
---------INS SimpleType@@FilterInvocation @TO@ ParameterizedType@@SecurityExpressionHandler<FilterInvocation> @AT@ 4138 @LENGTH@ 16
------INS SimpleName@@expressionHandler @TO@ SingleVariableDeclaration@@SecurityExpressionHandler<FilterInvocation> expressionHandler @AT@ 4156 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:Assert.state(expressionHandler != null,"SecurityExpressionHandler cannot be null") @TO@ MethodDeclaration@@public, ResourceServerSecurityConfigurer, MethodName:expressionHandler, SecurityExpressionHandler<FilterInvocation> expressionHandler,  @AT@ 4179 @LENGTH@ 84
------INS MethodInvocation@@Assert.state(expressionHandler != null,"SecurityExpressionHandler cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(expressionHandler != null,"SecurityExpressionHandler cannot be null") @AT@ 4179 @LENGTH@ 83
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(expressionHandler != null,"SecurityExpressionHandler cannot be null") @AT@ 4179 @LENGTH@ 6
---------INS SimpleName@@MethodName:state:[expressionHandler != null, "SecurityExpressionHandler cannot be null"] @TO@ MethodInvocation@@Assert.state(expressionHandler != null,"SecurityExpressionHandler cannot be null") @AT@ 4186 @LENGTH@ 76
------------INS InfixExpression@@expressionHandler != null @TO@ SimpleName@@MethodName:state:[expressionHandler != null, "SecurityExpressionHandler cannot be null"] @AT@ 4192 @LENGTH@ 25
---------------INS SimpleName@@expressionHandler @TO@ InfixExpression@@expressionHandler != null @AT@ 4192 @LENGTH@ 17
---------------INS Operator@@!= @TO@ InfixExpression@@expressionHandler != null @AT@ 4209 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@expressionHandler != null @AT@ 4213 @LENGTH@ 4
------------INS StringLiteral@@"SecurityExpressionHandler cannot be null" @TO@ SimpleName@@MethodName:state:[expressionHandler != null, "SecurityExpressionHandler cannot be null"] @AT@ 4219 @LENGTH@ 42
---INS ExpressionStatement@@Assignment:this.expressionHandler=expressionHandler @TO@ MethodDeclaration@@public, ResourceServerSecurityConfigurer, MethodName:expressionHandler, SecurityExpressionHandler<FilterInvocation> expressionHandler,  @AT@ 4266 @LENGTH@ 43
------INS Assignment@@this.expressionHandler=expressionHandler @TO@ ExpressionStatement@@Assignment:this.expressionHandler=expressionHandler @AT@ 4266 @LENGTH@ 42
---------INS FieldAccess@@this.expressionHandler @TO@ Assignment@@this.expressionHandler=expressionHandler @AT@ 4266 @LENGTH@ 22
------------INS ThisExpression@@this @TO@ FieldAccess@@this.expressionHandler @AT@ 4266 @LENGTH@ 4
------------INS SimpleName@@expressionHandler @TO@ FieldAccess@@this.expressionHandler @AT@ 4271 @LENGTH@ 17
---------INS Operator@@= @TO@ Assignment@@this.expressionHandler=expressionHandler @AT@ 4288 @LENGTH@ 1
---------INS SimpleName@@expressionHandler @TO@ Assignment@@this.expressionHandler=expressionHandler @AT@ 4291 @LENGTH@ 17
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, ResourceServerSecurityConfigurer, MethodName:expressionHandler, SecurityExpressionHandler<FilterInvocation> expressionHandler,  @AT@ 4312 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 4319 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:shouldAllowAny,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]QuerydslRepositorySupportUnitTests,  @AT@ 2125 @LENGTH@ 387
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowAny,  @AT@ 2125 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowAny,  @AT@ 2132 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldAllowAny @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowAny,  @AT@ 2137 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:person.setSkills(Arrays.asList("vocalist","songwriter","guitarist")) @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowAny,  @AT@ 2159 @LENGTH@ 71
------INS MethodInvocation@@person.setSkills(Arrays.asList("vocalist","songwriter","guitarist")) @TO@ ExpressionStatement@@MethodInvocation:person.setSkills(Arrays.asList("vocalist","songwriter","guitarist")) @AT@ 2159 @LENGTH@ 70
---------INS SimpleName@@Name:person @TO@ MethodInvocation@@person.setSkills(Arrays.asList("vocalist","songwriter","guitarist")) @AT@ 2159 @LENGTH@ 6
---------INS SimpleName@@MethodName:setSkills:[Arrays.asList("vocalist","songwriter","guitarist")] @TO@ MethodInvocation@@person.setSkills(Arrays.asList("vocalist","songwriter","guitarist")) @AT@ 2166 @LENGTH@ 63
------------INS MethodInvocation@@Arrays.asList("vocalist","songwriter","guitarist") @TO@ SimpleName@@MethodName:setSkills:[Arrays.asList("vocalist","songwriter","guitarist")] @AT@ 2176 @LENGTH@ 52
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("vocalist","songwriter","guitarist") @AT@ 2176 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["vocalist", "songwriter", "guitarist"] @TO@ MethodInvocation@@Arrays.asList("vocalist","songwriter","guitarist") @AT@ 2183 @LENGTH@ 45
------------------INS StringLiteral@@"vocalist" @TO@ SimpleName@@MethodName:asList:["vocalist", "songwriter", "guitarist"] @AT@ 2190 @LENGTH@ 10
------------------INS StringLiteral@@"songwriter" @TO@ SimpleName@@MethodName:asList:["vocalist", "songwriter", "guitarist"] @AT@ 2202 @LENGTH@ 12
------------------INS StringLiteral@@"guitarist" @TO@ SimpleName@@MethodName:asList:["vocalist", "songwriter", "guitarist"] @AT@ 2216 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:operations.save(person) @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowAny,  @AT@ 2234 @LENGTH@ 24
------INS MethodInvocation@@operations.save(person) @TO@ ExpressionStatement@@MethodInvocation:operations.save(person) @AT@ 2234 @LENGTH@ 23
---------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.save(person) @AT@ 2234 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[person] @TO@ MethodInvocation@@operations.save(person) @AT@ 2245 @LENGTH@ 12
------------INS SimpleName@@person @TO@ SimpleName@@MethodName:save:[person] @AT@ 2250 @LENGTH@ 6
---INS VariableDeclarationStatement@@QPerson p=QPerson.person; @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowAny,  @AT@ 2262 @LENGTH@ 27
------INS SimpleType@@QPerson @TO@ VariableDeclarationStatement@@QPerson p=QPerson.person; @AT@ 2262 @LENGTH@ 7
------INS VariableDeclarationFragment@@p=QPerson.person @TO@ VariableDeclarationStatement@@QPerson p=QPerson.person; @AT@ 2270 @LENGTH@ 18
---------INS SimpleName@@p @TO@ VariableDeclarationFragment@@p=QPerson.person @AT@ 2270 @LENGTH@ 1
---------INS QualifiedName@@QPerson.person @TO@ VariableDeclarationFragment@@p=QPerson.person @AT@ 2274 @LENGTH@ 14
------------INS SimpleName@@QPerson @TO@ QualifiedName@@QPerson.person @AT@ 2274 @LENGTH@ 7
------------INS SimpleName@@person @TO@ QualifiedName@@QPerson.person @AT@ 2282 @LENGTH@ 6
---INS VariableDeclarationStatement@@QuerydslRepositorySupport support=new QuerydslRepositorySupport(operations){
}
; @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowAny,  @AT@ 2292 @LENGTH@ 81
------INS SimpleType@@QuerydslRepositorySupport @TO@ VariableDeclarationStatement@@QuerydslRepositorySupport support=new QuerydslRepositorySupport(operations){
}
; @AT@ 2292 @LENGTH@ 25
------INS VariableDeclarationFragment@@support=new QuerydslRepositorySupport(operations){
}
 @TO@ VariableDeclarationStatement@@QuerydslRepositorySupport support=new QuerydslRepositorySupport(operations){
}
; @AT@ 2318 @LENGTH@ 54
---------INS SimpleName@@support @TO@ VariableDeclarationFragment@@support=new QuerydslRepositorySupport(operations){
}
 @AT@ 2318 @LENGTH@ 7
---------INS ClassInstanceCreation@@QuerydslRepositorySupport[operations] @TO@ VariableDeclarationFragment@@support=new QuerydslRepositorySupport(operations){
}
 @AT@ 2328 @LENGTH@ 44
------------INS New@@new @TO@ ClassInstanceCreation@@QuerydslRepositorySupport[operations] @AT@ 2328 @LENGTH@ 3
------------INS SimpleType@@QuerydslRepositorySupport @TO@ ClassInstanceCreation@@QuerydslRepositorySupport[operations] @AT@ 2332 @LENGTH@ 25
------------INS SimpleName@@operations @TO@ ClassInstanceCreation@@QuerydslRepositorySupport[operations] @AT@ 2358 @LENGTH@ 10
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@QuerydslRepositorySupport[operations] @AT@ 2370 @LENGTH@ 2
---INS VariableDeclarationStatement@@MongodbQuery<Person> query=support.from(p).where(p.skills.any().in("guitarist")); @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowAny,  @AT@ 2377 @LENGTH@ 83
------INS ParameterizedType@@MongodbQuery<Person> @TO@ VariableDeclarationStatement@@MongodbQuery<Person> query=support.from(p).where(p.skills.any().in("guitarist")); @AT@ 2377 @LENGTH@ 20
---------INS SimpleType@@MongodbQuery @TO@ ParameterizedType@@MongodbQuery<Person> @AT@ 2377 @LENGTH@ 12
---------INS SimpleType@@Person @TO@ ParameterizedType@@MongodbQuery<Person> @AT@ 2390 @LENGTH@ 6
------INS VariableDeclarationFragment@@query=support.from(p).where(p.skills.any().in("guitarist")) @TO@ VariableDeclarationStatement@@MongodbQuery<Person> query=support.from(p).where(p.skills.any().in("guitarist")); @AT@ 2398 @LENGTH@ 61
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=support.from(p).where(p.skills.any().in("guitarist")) @AT@ 2398 @LENGTH@ 5
---------INS MethodInvocation@@support.from(p).where(p.skills.any().in("guitarist")) @TO@ VariableDeclarationFragment@@query=support.from(p).where(p.skills.any().in("guitarist")) @AT@ 2406 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:from:[p] @TO@ MethodInvocation@@support.from(p).where(p.skills.any().in("guitarist")) @AT@ 2406 @LENGTH@ 15
---------------INS SimpleName@@p @TO@ MethodInvocation@@MethodName:from:[p] @AT@ 2419 @LENGTH@ 1
------------INS SimpleName@@Name:support @TO@ MethodInvocation@@support.from(p).where(p.skills.any().in("guitarist")) @AT@ 2406 @LENGTH@ 7
------------INS SimpleName@@MethodName:where:[p.skills.any().in("guitarist")] @TO@ MethodInvocation@@support.from(p).where(p.skills.any().in("guitarist")) @AT@ 2422 @LENGTH@ 37
---------------INS MethodInvocation@@p.skills.any().in("guitarist") @TO@ SimpleName@@MethodName:where:[p.skills.any().in("guitarist")] @AT@ 2428 @LENGTH@ 30
------------------INS MethodInvocation@@MethodName:any:[] @TO@ MethodInvocation@@p.skills.any().in("guitarist") @AT@ 2428 @LENGTH@ 14
------------------INS QualifiedName@@Name:p.skills @TO@ MethodInvocation@@p.skills.any().in("guitarist") @AT@ 2428 @LENGTH@ 8
------------------INS SimpleName@@MethodName:in:["guitarist"] @TO@ MethodInvocation@@p.skills.any().in("guitarist") @AT@ 2443 @LENGTH@ 15
---------------------INS StringLiteral@@"guitarist" @TO@ SimpleName@@MethodName:in:["guitarist"] @AT@ 2446 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(query.uniqueResult(),is(person)) @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowAny,  @AT@ 2464 @LENGTH@ 45
------INS MethodInvocation@@assertThat(query.uniqueResult(),is(person)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.uniqueResult(),is(person)) @AT@ 2464 @LENGTH@ 44
---------INS SimpleName@@MethodName:assertThat:[query.uniqueResult(), is(person)] @TO@ MethodInvocation@@assertThat(query.uniqueResult(),is(person)) @AT@ 2464 @LENGTH@ 44
------------INS MethodInvocation@@query.uniqueResult() @TO@ SimpleName@@MethodName:assertThat:[query.uniqueResult(), is(person)] @AT@ 2475 @LENGTH@ 20
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.uniqueResult() @AT@ 2475 @LENGTH@ 5
---------------INS SimpleName@@MethodName:uniqueResult:[] @TO@ MethodInvocation@@query.uniqueResult() @AT@ 2481 @LENGTH@ 14
------------INS MethodInvocation@@is(person) @TO@ SimpleName@@MethodName:assertThat:[query.uniqueResult(), is(person)] @AT@ 2497 @LENGTH@ 10
---------------INS SimpleName@@MethodName:is:[person] @TO@ MethodInvocation@@is(person) @AT@ 2497 @LENGTH@ 10
------------------INS SimpleName@@person @TO@ SimpleName@@MethodName:is:[person] @AT@ 2500 @LENGTH@ 6


UPD ReturnStatement@@ClassInstanceCreation:new TypedValue(arguments[0].hashCode() % buckets + "_hash") @TO@ ClassInstanceCreation:new TypedValue(Math.abs(arguments[0].hashCode()) % buckets + "_hash") @AT@ 1486 @LENGTH@ 67
---UPD ClassInstanceCreation@@TypedValue[arguments[0].hashCode() % buckets + "_hash"] @TO@ TypedValue[Math.abs(arguments[0].hashCode()) % buckets + "_hash"] @AT@ 1493 @LENGTH@ 59
------UPD InfixExpression@@arguments[0].hashCode() % buckets + "_hash" @TO@ Math.abs(arguments[0].hashCode()) % buckets + "_hash" @AT@ 1508 @LENGTH@ 43
---------UPD InfixExpression@@arguments[0].hashCode() % buckets @TO@ Math.abs(arguments[0].hashCode()) % buckets @AT@ 1508 @LENGTH@ 33
------------INS MethodInvocation@@Math.abs(arguments[0].hashCode()) @TO@ InfixExpression@@arguments[0].hashCode() % buckets @AT@ 1568 @LENGTH@ 33
---------------INS SimpleName@@Name:Math @TO@ MethodInvocation@@Math.abs(arguments[0].hashCode()) @AT@ 1568 @LENGTH@ 4
---------------INS SimpleName@@MethodName:abs:[arguments[0].hashCode()] @TO@ MethodInvocation@@Math.abs(arguments[0].hashCode()) @AT@ 1573 @LENGTH@ 28
------------------MOV MethodInvocation@@arguments[0].hashCode() @TO@ SimpleName@@MethodName:abs:[arguments[0].hashCode()] @AT@ 1508 @LENGTH@ 23


UPD VariableDeclarationStatement@@DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 2763 @LENGTH@ 97
---UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 2763 @LENGTH@ 17
---UPD VariableDeclarationFragment@@client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 2781 @LENGTH@ 78
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 2790 @LENGTH@ 69
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 2790 @LENGTH@ 43
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 2821 @LENGTH@ 11
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 2834 @LENGTH@ 25


UPD FieldDeclaration@@Logger, [log=LoggerFactory.getLogger(getClass())] @TO@ private, Logger, [log=LoggerFactory.getLogger(getClass())] @AT@ 1234 @LENGTH@ 49
---INS Modifier@@private @TO@ FieldDeclaration@@Logger, [log=LoggerFactory.getLogger(getClass())] @AT@ 1292 @LENGTH@ 7


UPD MethodDeclaration@@CompressionCodec, MethodName:modify, EnumSet<Modifier> modifiers,  @TO@ CompressionCodec, MethodName:modify, @Nullable EnumSet<Modifier> modifiers,  @AT@ 2137 @LENGTH@ 36
---UPD SingleVariableDeclaration@@EnumSet<Modifier> modifiers @TO@ @Nullable EnumSet<Modifier> modifiers @AT@ 2144 @LENGTH@ 27


UPD IfStatement@@if (request.getMethod() == Method.GET || (request.getMethod() == Method.POST && mediaType == MediaType.APPLICATION_WWW_FORM)) {  request.setEntity(form.getWebRepresentation());} else {  request.setEntity(body,mediaType);} @TO@ if (request.getMethod() == Method.GET || (request.getMethod() == Method.POST && mediaType == MediaType.APPLICATION_WWW_FORM)) {  request.setEntity(form.getWebRepresentation());} else {  if (body == null) {    request.setEntity(null);  } else {    request.setEntity(body,mediaType);  }} @AT@ 8098 @LENGTH@ 262
---INS Block@@ElseBody:{  if (body == null) {    request.setEntity(null);  } else {    request.setEntity(body,mediaType);  }} @TO@ IfStatement@@if (request.getMethod() == Method.GET || (request.getMethod() == Method.POST && mediaType == MediaType.APPLICATION_WWW_FORM)) {  request.setEntity(form.getWebRepresentation());} else {  request.setEntity(body,mediaType);} @AT@ 8301 @LENGTH@ 171
------INS IfStatement@@if (body == null) {  request.setEntity(null);} else {  request.setEntity(body,mediaType);} @TO@ Block@@ElseBody:{  if (body == null) {    request.setEntity(null);  } else {    request.setEntity(body,mediaType);  }} @AT@ 8315 @LENGTH@ 147
---------MOV Block@@ElseBody:{  request.setEntity(body,mediaType);} @TO@ IfStatement@@if (body == null) {  request.setEntity(null);} else {  request.setEntity(body,mediaType);} @AT@ 8301 @LENGTH@ 59
---------INS InfixExpression@@body == null @TO@ IfStatement@@if (body == null) {  request.setEntity(null);} else {  request.setEntity(body,mediaType);} @AT@ 8319 @LENGTH@ 12
------------INS SimpleName@@body @TO@ InfixExpression@@body == null @AT@ 8319 @LENGTH@ 4
------------INS Operator@@== @TO@ InfixExpression@@body == null @AT@ 8323 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@body == null @AT@ 8327 @LENGTH@ 4
---------INS Block@@ThenBody:{  request.setEntity(null);} @TO@ IfStatement@@if (body == null) {  request.setEntity(null);} else {  request.setEntity(body,mediaType);} @AT@ 8333 @LENGTH@ 56
------------INS ExpressionStatement@@MethodInvocation:request.setEntity(null) @TO@ Block@@ThenBody:{  request.setEntity(null);} @AT@ 8351 @LENGTH@ 24
---------------INS MethodInvocation@@request.setEntity(null) @TO@ ExpressionStatement@@MethodInvocation:request.setEntity(null) @AT@ 8351 @LENGTH@ 23
------------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setEntity(null) @AT@ 8351 @LENGTH@ 7
------------------INS SimpleName@@MethodName:setEntity:[null] @TO@ MethodInvocation@@request.setEntity(null) @AT@ 8359 @LENGTH@ 15
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setEntity:[null] @AT@ 8369 @LENGTH@ 4


UPD FieldDeclaration@@private, static, ContentType, [TEST_FORMAT=ContentType.APPLICATION_JSON_CS_UTF_8] @TO@ private, static, final, ContentType, [TEST_FORMAT=ContentType.APPLICATION_JSON_CS_UTF_8] @AT@ 4926 @LENGTH@ 79
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, ContentType, [TEST_FORMAT=ContentType.APPLICATION_JSON_CS_UTF_8] @AT@ 4947 @LENGTH@ 5


UPD MethodDeclaration@@voidMethodName:DefaultedPageable, Pageable pageable, boolean isDefault,  @TO@ public, voidMethodName:DefaultedPageable, Pageable pageable, boolean isDefault,  @AT@ 1124 @LENGTH@ 119
---INS Modifier@@public @TO@ MethodDeclaration@@voidMethodName:DefaultedPageable, Pageable pageable, boolean isDefault,  @AT@ 1124 @LENGTH@ 6


DEL VariableDeclarationStatement@@AbstractImplicitProviderTests test=(AbstractImplicitProviderTests)target; @AT@ 2396 @LENGTH@ 76
---DEL SimpleType@@AbstractImplicitProviderTests @AT@ 2396 @LENGTH@ 29
---DEL VariableDeclarationFragment@@test=(AbstractImplicitProviderTests)target @AT@ 2426 @LENGTH@ 45
------DEL SimpleName@@test @AT@ 2426 @LENGTH@ 4
------DEL CastExpression@@(AbstractImplicitProviderTests)target @AT@ 2433 @LENGTH@ 38
---------DEL SimpleType@@AbstractImplicitProviderTests @AT@ 2434 @LENGTH@ 29
---------DEL SimpleName@@target @AT@ 2465 @LENGTH@ 6


UPD TypeDeclaration@@[public]CxfRsEndpoint, DefaultEndpoint[HeaderFilterStrategyAware, Service] @TO@ [@UriEndpoint(scheme="cxfrs",consumerClass=CxfRsConsumer.class), public]CxfRsEndpoint, DefaultEndpoint[HeaderFilterStrategyAware, Service] @AT@ 2127 @LENGTH@ 14480
---INS NormalAnnotation@@@UriEndpoint(scheme="cxfrs",consumerClass=CxfRsConsumer.class) @TO@ TypeDeclaration@@[public]CxfRsEndpoint, DefaultEndpoint[HeaderFilterStrategyAware, Service] @AT@ 2206 @LENGTH@ 67


UPD MethodDeclaration@@void, MethodName:init, CamelContext camelContext, NettyServerBootstrapConfiguration configuration, ChannelPipelineFactory pipelineFactory,  @TO@ void, MethodName:init, CamelContext camelContext, NettyServerBootstrapConfiguration configuration, ChannelInitializer<Channel> pipelineFactory,  @AT@ 1738 @LENGTH@ 121
---UPD SingleVariableDeclaration@@ChannelPipelineFactory pipelineFactory @TO@ ChannelInitializer<Channel> pipelineFactory @AT@ 1819 @LENGTH@ 38
------DEL SimpleType@@ChannelPipelineFactory @AT@ 1819 @LENGTH@ 22
------INS ParameterizedType@@ChannelInitializer<Channel> @TO@ SingleVariableDeclaration@@ChannelPipelineFactory pipelineFactory @AT@ 1860 @LENGTH@ 27
---------INS SimpleType@@ChannelInitializer @TO@ ParameterizedType@@ChannelInitializer<Channel> @AT@ 1860 @LENGTH@ 18
---------INS SimpleType@@Channel @TO@ ParameterizedType@@ChannelInitializer<Channel> @AT@ 1879 @LENGTH@ 7


UPD FieldDeclaration@@protected, String, [enabledProtocols="TLSv1,TLSv1.1,TLSv1.2"] @TO@ protected, String, [enabledProtocols=defaultEnabledProtocols] @AT@ 2416 @LENGTH@ 60
---UPD VariableDeclarationFragment@@enabledProtocols="TLSv1,TLSv1.1,TLSv1.2" @TO@ enabledProtocols=defaultEnabledProtocols @AT@ 2433 @LENGTH@ 42
------DEL StringLiteral@@"TLSv1,TLSv1.1,TLSv1.2" @AT@ 2452 @LENGTH@ 23
------INS SimpleName@@defaultEnabledProtocols @TO@ VariableDeclarationFragment@@enabledProtocols="TLSv1,TLSv1.1,TLSv1.2" @AT@ 2527 @LENGTH@ 23


UPD MethodDeclaration@@public, void, MethodName:configure, AuthorizationServerSecurityConfigurer oauthServer, Exception,  @TO@ public, void, MethodName:configure, AuthorizationServerSecurityConfigurer security, Exception,  @AT@ 1167 @LENGTH@ 94
---UPD SingleVariableDeclaration@@AuthorizationServerSecurityConfigurer oauthServer @TO@ AuthorizationServerSecurityConfigurer security @AT@ 1189 @LENGTH@ 49
------UPD SimpleName@@oauthServer @TO@ security @AT@ 1227 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:shouldParseJsonKeyReplacementCorrectly, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]StringBasedMongoQueryUnitTests,  @AT@ 10838 @LENGTH@ 524
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldParseJsonKeyReplacementCorrectly, Exception,  @AT@ 10838 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldParseJsonKeyReplacementCorrectly, Exception,  @AT@ 10845 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldParseJsonKeyReplacementCorrectly @TO@ MethodDeclaration@@public, void, MethodName:shouldParseJsonKeyReplacementCorrectly, Exception,  @AT@ 10850 @LENGTH@ 38
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:shouldParseJsonKeyReplacementCorrectly, Exception,  @AT@ 10898 @LENGTH@ 9
---INS VariableDeclarationStatement@@StringBasedMongoQuery mongoQuery=createQueryForMethod("methodWithPlaceholderInKeyOfJsonStructure",String.class,String.class); @TO@ MethodDeclaration@@public, void, MethodName:shouldParseJsonKeyReplacementCorrectly, Exception,  @AT@ 10913 @LENGTH@ 133
------INS SimpleType@@StringBasedMongoQuery @TO@ VariableDeclarationStatement@@StringBasedMongoQuery mongoQuery=createQueryForMethod("methodWithPlaceholderInKeyOfJsonStructure",String.class,String.class); @AT@ 10913 @LENGTH@ 21
------INS VariableDeclarationFragment@@mongoQuery=createQueryForMethod("methodWithPlaceholderInKeyOfJsonStructure",String.class,String.class) @TO@ VariableDeclarationStatement@@StringBasedMongoQuery mongoQuery=createQueryForMethod("methodWithPlaceholderInKeyOfJsonStructure",String.class,String.class); @AT@ 10935 @LENGTH@ 110
---------INS SimpleName@@mongoQuery @TO@ VariableDeclarationFragment@@mongoQuery=createQueryForMethod("methodWithPlaceholderInKeyOfJsonStructure",String.class,String.class) @AT@ 10935 @LENGTH@ 10
---------INS MethodInvocation@@createQueryForMethod("methodWithPlaceholderInKeyOfJsonStructure",String.class,String.class) @TO@ VariableDeclarationFragment@@mongoQuery=createQueryForMethod("methodWithPlaceholderInKeyOfJsonStructure",String.class,String.class) @AT@ 10948 @LENGTH@ 97
------------INS SimpleName@@MethodName:createQueryForMethod:["methodWithPlaceholderInKeyOfJsonStructure", String.class, String.class] @TO@ MethodInvocation@@createQueryForMethod("methodWithPlaceholderInKeyOfJsonStructure",String.class,String.class) @AT@ 10948 @LENGTH@ 97
---------------INS StringLiteral@@"methodWithPlaceholderInKeyOfJsonStructure" @TO@ SimpleName@@MethodName:createQueryForMethod:["methodWithPlaceholderInKeyOfJsonStructure", String.class, String.class] @AT@ 10969 @LENGTH@ 43
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:createQueryForMethod:["methodWithPlaceholderInKeyOfJsonStructure", String.class, String.class] @AT@ 11014 @LENGTH@ 12
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:createQueryForMethod:["methodWithPlaceholderInKeyOfJsonStructure", String.class, String.class] @AT@ 11032 @LENGTH@ 12
---INS VariableDeclarationStatement@@ConvertingParameterAccessor parameterAccessor=StubParameterAccessor.getAccessor(converter,"key","value"); @TO@ MethodDeclaration@@public, void, MethodName:shouldParseJsonKeyReplacementCorrectly, Exception,  @AT@ 11049 @LENGTH@ 109
------INS SimpleType@@ConvertingParameterAccessor @TO@ VariableDeclarationStatement@@ConvertingParameterAccessor parameterAccessor=StubParameterAccessor.getAccessor(converter,"key","value"); @AT@ 11049 @LENGTH@ 27
------INS VariableDeclarationFragment@@parameterAccessor=StubParameterAccessor.getAccessor(converter,"key","value") @TO@ VariableDeclarationStatement@@ConvertingParameterAccessor parameterAccessor=StubParameterAccessor.getAccessor(converter,"key","value"); @AT@ 11077 @LENGTH@ 80
---------INS SimpleName@@parameterAccessor @TO@ VariableDeclarationFragment@@parameterAccessor=StubParameterAccessor.getAccessor(converter,"key","value") @AT@ 11077 @LENGTH@ 17
---------INS MethodInvocation@@StubParameterAccessor.getAccessor(converter,"key","value") @TO@ VariableDeclarationFragment@@parameterAccessor=StubParameterAccessor.getAccessor(converter,"key","value") @AT@ 11097 @LENGTH@ 60
------------INS SimpleName@@Name:StubParameterAccessor @TO@ MethodInvocation@@StubParameterAccessor.getAccessor(converter,"key","value") @AT@ 11097 @LENGTH@ 21
------------INS SimpleName@@MethodName:getAccessor:[converter, "key", "value"] @TO@ MethodInvocation@@StubParameterAccessor.getAccessor(converter,"key","value") @AT@ 11119 @LENGTH@ 38
---------------INS SimpleName@@converter @TO@ SimpleName@@MethodName:getAccessor:[converter, "key", "value"] @AT@ 11131 @LENGTH@ 9
---------------INS StringLiteral@@"key" @TO@ SimpleName@@MethodName:getAccessor:[converter, "key", "value"] @AT@ 11142 @LENGTH@ 5
---------------INS StringLiteral@@"value" @TO@ SimpleName@@MethodName:getAccessor:[converter, "key", "value"] @AT@ 11149 @LENGTH@ 7
---INS VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=mongoQuery.createQuery(parameterAccessor); @TO@ MethodDeclaration@@public, void, MethodName:shouldParseJsonKeyReplacementCorrectly, Exception,  @AT@ 11162 @LENGTH@ 100
------INS SimpleType@@org.springframework.data.mongodb.core.query.Query @TO@ VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=mongoQuery.createQuery(parameterAccessor); @AT@ 11162 @LENGTH@ 49
------INS VariableDeclarationFragment@@query=mongoQuery.createQuery(parameterAccessor) @TO@ VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=mongoQuery.createQuery(parameterAccessor); @AT@ 11212 @LENGTH@ 49
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=mongoQuery.createQuery(parameterAccessor) @AT@ 11212 @LENGTH@ 5
---------INS MethodInvocation@@mongoQuery.createQuery(parameterAccessor) @TO@ VariableDeclarationFragment@@query=mongoQuery.createQuery(parameterAccessor) @AT@ 11220 @LENGTH@ 41
------------INS SimpleName@@Name:mongoQuery @TO@ MethodInvocation@@mongoQuery.createQuery(parameterAccessor) @AT@ 11220 @LENGTH@ 10
------------INS SimpleName@@MethodName:createQuery:[parameterAccessor] @TO@ MethodInvocation@@mongoQuery.createQuery(parameterAccessor) @AT@ 11231 @LENGTH@ 30
---------------INS SimpleName@@parameterAccessor @TO@ SimpleName@@MethodName:createQuery:[parameterAccessor] @AT@ 11243 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertThat(query.getQueryObject(),is(new BasicDBObjectBuilder().add("key","value").get())) @TO@ MethodDeclaration@@public, void, MethodName:shouldParseJsonKeyReplacementCorrectly, Exception,  @AT@ 11266 @LENGTH@ 93
------INS MethodInvocation@@assertThat(query.getQueryObject(),is(new BasicDBObjectBuilder().add("key","value").get())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.getQueryObject(),is(new BasicDBObjectBuilder().add("key","value").get())) @AT@ 11266 @LENGTH@ 92
---------INS SimpleName@@MethodName:assertThat:[query.getQueryObject(), is(new BasicDBObjectBuilder().add("key","value").get())] @TO@ MethodInvocation@@assertThat(query.getQueryObject(),is(new BasicDBObjectBuilder().add("key","value").get())) @AT@ 11266 @LENGTH@ 92
------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:assertThat:[query.getQueryObject(), is(new BasicDBObjectBuilder().add("key","value").get())] @AT@ 11277 @LENGTH@ 22
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 11277 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 11283 @LENGTH@ 16
------------INS MethodInvocation@@is(new BasicDBObjectBuilder().add("key","value").get()) @TO@ SimpleName@@MethodName:assertThat:[query.getQueryObject(), is(new BasicDBObjectBuilder().add("key","value").get())] @AT@ 11301 @LENGTH@ 56
---------------INS SimpleName@@MethodName:is:[new BasicDBObjectBuilder().add("key","value").get()] @TO@ MethodInvocation@@is(new BasicDBObjectBuilder().add("key","value").get()) @AT@ 11301 @LENGTH@ 56
------------------INS MethodInvocation@@new BasicDBObjectBuilder().add("key","value").get() @TO@ SimpleName@@MethodName:is:[new BasicDBObjectBuilder().add("key","value").get()] @AT@ 11304 @LENGTH@ 52
---------------------INS MethodInvocation@@MethodName:add:["key", "value"] @TO@ MethodInvocation@@new BasicDBObjectBuilder().add("key","value").get() @AT@ 11304 @LENGTH@ 46
------------------------INS StringLiteral@@"key" @TO@ MethodInvocation@@MethodName:add:["key", "value"] @AT@ 11335 @LENGTH@ 5
------------------------INS StringLiteral@@"value" @TO@ MethodInvocation@@MethodName:add:["key", "value"] @AT@ 11342 @LENGTH@ 7
---------------------INS ClassInstanceCreation@@BasicDBObjectBuilder[] @TO@ MethodInvocation@@new BasicDBObjectBuilder().add("key","value").get() @AT@ 11304 @LENGTH@ 26
------------------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObjectBuilder[] @AT@ 11304 @LENGTH@ 3
------------------------INS SimpleType@@BasicDBObjectBuilder @TO@ ClassInstanceCreation@@BasicDBObjectBuilder[] @AT@ 11308 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@new BasicDBObjectBuilder().add("key","value").get() @AT@ 11351 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[new BasicDBObjectBuilder().add("key","value").get()] @TO@ MethodInvocation@@is(new BasicDBObjectBuilder().add("key","value").get()) @AT@ 11301 @LENGTH@ 56
------------------INS MethodInvocation@@new BasicDBObjectBuilder().add("key","value").get() @TO@ SimpleName@@MethodName:is:[new BasicDBObjectBuilder().add("key","value").get()] @AT@ 11304 @LENGTH@ 52
---------------------INS MethodInvocation@@MethodName:add:["key", "value"] @TO@ MethodInvocation@@new BasicDBObjectBuilder().add("key","value").get() @AT@ 11304 @LENGTH@ 46
------------------------INS StringLiteral@@"key" @TO@ MethodInvocation@@MethodName:add:["key", "value"] @AT@ 11335 @LENGTH@ 5
------------------------INS StringLiteral@@"value" @TO@ MethodInvocation@@MethodName:add:["key", "value"] @AT@ 11342 @LENGTH@ 7
---------------------INS ClassInstanceCreation@@BasicDBObjectBuilder[] @TO@ MethodInvocation@@new BasicDBObjectBuilder().add("key","value").get() @AT@ 11304 @LENGTH@ 26
------------------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObjectBuilder[] @AT@ 11304 @LENGTH@ 3
------------------------INS SimpleType@@BasicDBObjectBuilder @TO@ ClassInstanceCreation@@BasicDBObjectBuilder[] @AT@ 11308 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@new BasicDBObjectBuilder().add("key","value").get() @AT@ 11351 @LENGTH@ 5


UPD TryStatement@@try {  if (!doneSync) {    if (breadcrumbId != null) {      MDC.put(MDC_BREADCRUMB_ID,breadcrumbId);    }    if (exchangeId != null) {      MDC.put(MDC_EXCHANGE_ID,exchangeId);    }    if (messageId != null) {      MDC.put(MDC_MESSAGE_ID,messageId);    }    if (correlationId != null) {      MDC.put(MDC_CORRELATION_ID,correlationId);    }    if (routeId != null) {      MDC.put(MDC_ROUTE_ID,routeId);    }    if (camelContextId != null) {      MDC.put(MDC_CAMEL_CONTEXT_ID,camelContextId);    }  }}  finally {  delegate.done(doneSync);} @TO@ try {  if (!doneSync) {    if (breadcrumbId != null) {      MDC.put(MDC_BREADCRUMB_ID,breadcrumbId);    }    if (exchangeId != null) {      MDC.put(MDC_EXCHANGE_ID,exchangeId);    }    if (messageId != null) {      MDC.put(MDC_MESSAGE_ID,messageId);    }    if (correlationId != null) {      MDC.put(MDC_CORRELATION_ID,correlationId);    }    if (camelContextId != null) {      MDC.put(MDC_CAMEL_CONTEXT_ID,camelContextId);    }  }  if (routeId != null) {    MDC.put(MDC_ROUTE_ID,routeId);  }}  finally {  delegate.done(doneSync);} @AT@ 7517 @LENGTH@ 1076
---UPD IfStatement@@if (!doneSync) {  if (breadcrumbId != null) {    MDC.put(MDC_BREADCRUMB_ID,breadcrumbId);  }  if (exchangeId != null) {    MDC.put(MDC_EXCHANGE_ID,exchangeId);  }  if (messageId != null) {    MDC.put(MDC_MESSAGE_ID,messageId);  }  if (correlationId != null) {    MDC.put(MDC_CORRELATION_ID,correlationId);  }  if (routeId != null) {    MDC.put(MDC_ROUTE_ID,routeId);  }  if (camelContextId != null) {    MDC.put(MDC_CAMEL_CONTEXT_ID,camelContextId);  }} @TO@ if (!doneSync) {  if (breadcrumbId != null) {    MDC.put(MDC_BREADCRUMB_ID,breadcrumbId);  }  if (exchangeId != null) {    MDC.put(MDC_EXCHANGE_ID,exchangeId);  }  if (messageId != null) {    MDC.put(MDC_MESSAGE_ID,messageId);  }  if (correlationId != null) {    MDC.put(MDC_CORRELATION_ID,correlationId);  }  if (camelContextId != null) {    MDC.put(MDC_CAMEL_CONTEXT_ID,camelContextId);  }} @AT@ 7539 @LENGTH@ 924
------UPD Block@@ThenBody:{  if (breadcrumbId != null) {    MDC.put(MDC_BREADCRUMB_ID,breadcrumbId);  }  if (exchangeId != null) {    MDC.put(MDC_EXCHANGE_ID,exchangeId);  }  if (messageId != null) {    MDC.put(MDC_MESSAGE_ID,messageId);  }  if (correlationId != null) {    MDC.put(MDC_CORRELATION_ID,correlationId);  }  if (routeId != null) {    MDC.put(MDC_ROUTE_ID,routeId);  }  if (camelContextId != null) {    MDC.put(MDC_CAMEL_CONTEXT_ID,camelContextId);  }} @TO@ ThenBody:{  if (breadcrumbId != null) {    MDC.put(MDC_BREADCRUMB_ID,breadcrumbId);  }  if (exchangeId != null) {    MDC.put(MDC_EXCHANGE_ID,exchangeId);  }  if (messageId != null) {    MDC.put(MDC_MESSAGE_ID,messageId);  }  if (correlationId != null) {    MDC.put(MDC_CORRELATION_ID,correlationId);  }  if (camelContextId != null) {    MDC.put(MDC_CAMEL_CONTEXT_ID,camelContextId);  }} @AT@ 7554 @LENGTH@ 909
---MOV IfStatement@@if (routeId != null) {  MDC.put(MDC_ROUTE_ID,routeId);} @TO@ TryStatement@@try {  if (!doneSync) {    if (breadcrumbId != null) {      MDC.put(MDC_BREADCRUMB_ID,breadcrumbId);    }    if (exchangeId != null) {      MDC.put(MDC_EXCHANGE_ID,exchangeId);    }    if (messageId != null) {      MDC.put(MDC_MESSAGE_ID,messageId);    }    if (correlationId != null) {      MDC.put(MDC_CORRELATION_ID,correlationId);    }    if (routeId != null) {      MDC.put(MDC_ROUTE_ID,routeId);    }    if (camelContextId != null) {      MDC.put(MDC_CAMEL_CONTEXT_ID,camelContextId);    }  }}  finally {  delegate.done(doneSync);} @AT@ 8202 @LENGTH@ 100


UPD VariableDeclarationStatement@@Class<?> rawSuperType=GenericTypeResolver.resolveType(supertype,getTypeVariableMap()); @TO@ Class<?> rawSuperType=resolveType(supertype); @AT@ 2306 @LENGTH@ 89
---UPD VariableDeclarationFragment@@rawSuperType=GenericTypeResolver.resolveType(supertype,getTypeVariableMap()) @TO@ rawSuperType=resolveType(supertype) @AT@ 2315 @LENGTH@ 79
------UPD MethodInvocation@@GenericTypeResolver.resolveType(supertype,getTypeVariableMap()) @TO@ resolveType(supertype) @AT@ 2330 @LENGTH@ 64
---------DEL SimpleName@@Name:GenericTypeResolver @AT@ 2330 @LENGTH@ 19
---------UPD SimpleName@@MethodName:resolveType:[supertype, getTypeVariableMap()] @TO@ MethodName:resolveType:[supertype] @AT@ 2350 @LENGTH@ 44
------------DEL MethodInvocation@@MethodName:getTypeVariableMap:[] @AT@ 2373 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:assertTrue("Should include javadoc",json.contains("\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\" },")) @TO@ MethodInvocation:assertTrue("Should include javadoc",json.contains("\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\"")) @AT@ 2532 @LENGTH@ 229
---UPD MethodInvocation@@assertTrue("Should include javadoc",json.contains("\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\" },")) @TO@ assertTrue("Should include javadoc",json.contains("\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\"")) @AT@ 2532 @LENGTH@ 228
------UPD SimpleName@@MethodName:assertTrue:["Should include javadoc", json.contains("\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\" },")] @TO@ MethodName:assertTrue:["Should include javadoc", json.contains("\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\"")] @AT@ 2532 @LENGTH@ 228
---------UPD MethodInvocation@@json.contains("\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\" },") @TO@ json.contains("\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\"") @AT@ 2569 @LENGTH@ 190
------------UPD SimpleName@@MethodName:contains:["\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\" },"] @TO@ MethodName:contains:["\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\""] @AT@ 2574 @LENGTH@ 185
---------------UPD InfixExpression@@"\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\" }," @TO@ "\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\"" @AT@ 2583 @LENGTH@ 175
------------------UPD StringLiteral@@" \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\" }," @TO@ " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\"" @AT@ 2665 @LENGTH@ 93
------------------INS StringLiteral@@" \"defaultValue\": \"30000\"," @TO@ InfixExpression@@"\"timeout\": { \"type\": \"integer\", \"javaType\": \"long\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\" }," @AT@ 2665 @LENGTH@ 31


UPD VariableDeclarationStatement@@Exchanger<Object> messageExchanger=new Exchanger<>(); @TO@ Exchanger<Object> messageExchanger=new Exchanger<Object>(); @AT@ 8608 @LENGTH@ 55
---UPD VariableDeclarationFragment@@messageExchanger=new Exchanger<>() @TO@ messageExchanger=new Exchanger<Object>() @AT@ 8626 @LENGTH@ 36
------UPD ClassInstanceCreation@@Exchanger<>[] @TO@ Exchanger<Object>[] @AT@ 8645 @LENGTH@ 17
---------UPD ParameterizedType@@Exchanger<> @TO@ Exchanger<Object> @AT@ 8649 @LENGTH@ 11
------------INS SimpleType@@Object @TO@ ParameterizedType@@Exchanger<> @AT@ 8684 @LENGTH@ 6


INS MethodDeclaration@@public, voidMethodName:AhcComponent,  @TO@ TypeDeclaration@@[public]AhcComponent, HeaderFilterStrategyComponent @AT@ 1970 @LENGTH@ 63
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:AhcComponent,  @AT@ 1970 @LENGTH@ 6
---INS SimpleName@@MethodName:AhcComponent @TO@ MethodDeclaration@@public, voidMethodName:AhcComponent,  @AT@ 1977 @LENGTH@ 12
---INS SuperConstructorInvocation@@super(AhcEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:AhcComponent,  @AT@ 2002 @LENGTH@ 25
------INS TypeLiteral@@AhcEndpoint.class @TO@ SuperConstructorInvocation@@super(AhcEndpoint.class);
 @AT@ 2008 @LENGTH@ 17


MOV FieldDeclaration@@private, String, [clientId] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="openshift",consumerClass=OpenShiftConsumer.class), public]OpenShiftEndpoint, ScheduledPollEndpoint @AT@ 1530 @LENGTH@ 24


INS MethodDeclaration@@public, voidMethodName:GMailComponent,  @TO@ TypeDeclaration@@[public]GMailComponent, DefaultComponent @AT@ 1347 @LENGTH@ 67
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:GMailComponent,  @AT@ 1347 @LENGTH@ 6
---INS SimpleName@@MethodName:GMailComponent @TO@ MethodDeclaration@@public, voidMethodName:GMailComponent,  @AT@ 1354 @LENGTH@ 14
---INS SuperConstructorInvocation@@super(GMailEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:GMailComponent,  @AT@ 1381 @LENGTH@ 27
------INS TypeLiteral@@GMailEndpoint.class @TO@ SuperConstructorInvocation@@super(GMailEndpoint.class);
 @AT@ 1387 @LENGTH@ 19


INS FieldDeclaration@@private, String, [command] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="controlbus"), public]ControlBusEndpoint, DefaultEndpoint @AT@ 1524 @LENGTH@ 23
---INS Modifier@@private @TO@ FieldDeclaration@@private, String, [command] @AT@ 1524 @LENGTH@ 7
---INS SimpleType@@String @TO@ FieldDeclaration@@private, String, [command] @AT@ 1532 @LENGTH@ 6
---INS VariableDeclarationFragment@@command @TO@ FieldDeclaration@@private, String, [command] @AT@ 1539 @LENGTH@ 7
------INS SimpleName@@command @TO@ VariableDeclarationFragment@@command @AT@ 1539 @LENGTH@ 7


UPD VariableDeclarationStatement@@InputStream inputStream=spy(new ByteArrayInputStream(string.getBytes(charset))); @TO@ InputStream inputStream=spy(new ByteArrayInputStream(string.getBytes(charset.displayName()))); @AT@ 1926 @LENGTH@ 82
---UPD VariableDeclarationFragment@@inputStream=spy(new ByteArrayInputStream(string.getBytes(charset))) @TO@ inputStream=spy(new ByteArrayInputStream(string.getBytes(charset.displayName()))) @AT@ 1938 @LENGTH@ 69
------UPD MethodInvocation@@spy(new ByteArrayInputStream(string.getBytes(charset))) @TO@ spy(new ByteArrayInputStream(string.getBytes(charset.displayName()))) @AT@ 1952 @LENGTH@ 55
---------UPD SimpleName@@MethodName:spy:[new ByteArrayInputStream(string.getBytes(charset))] @TO@ MethodName:spy:[new ByteArrayInputStream(string.getBytes(charset.displayName()))] @AT@ 1952 @LENGTH@ 55
------------UPD ClassInstanceCreation@@ByteArrayInputStream[string.getBytes(charset)] @TO@ ByteArrayInputStream[string.getBytes(charset.displayName())] @AT@ 1956 @LENGTH@ 50
---------------UPD MethodInvocation@@string.getBytes(charset) @TO@ string.getBytes(charset.displayName()) @AT@ 1981 @LENGTH@ 24
------------------UPD SimpleName@@MethodName:getBytes:[charset] @TO@ MethodName:getBytes:[charset.displayName()] @AT@ 1988 @LENGTH@ 17
---------------------INS MethodInvocation@@charset.displayName() @TO@ SimpleName@@MethodName:getBytes:[charset] @AT@ 1997 @LENGTH@ 21
------------------------INS SimpleName@@Name:charset @TO@ MethodInvocation@@charset.displayName() @AT@ 1997 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:displayName:[] @TO@ MethodInvocation@@charset.displayName() @AT@ 2005 @LENGTH@ 13
---------------------DEL SimpleName@@charset @AT@ 1997 @LENGTH@ 7


INS MethodDeclaration@@public, static, Message, MethodName:toMessage, byte[] body, HL7Exception,  @TO@ TypeDeclaration@@[@Converter, public, final]HL7Converter,  @AT@ 1820 @LENGTH@ 148
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Message, MethodName:toMessage, byte[] body, HL7Exception,  @AT@ 1820 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Message, MethodName:toMessage, byte[] body, HL7Exception,  @AT@ 1827 @LENGTH@ 6
---INS SimpleType@@Message @TO@ MethodDeclaration@@public, static, Message, MethodName:toMessage, byte[] body, HL7Exception,  @AT@ 1834 @LENGTH@ 7
---INS SimpleName@@MethodName:toMessage @TO@ MethodDeclaration@@public, static, Message, MethodName:toMessage, byte[] body, HL7Exception,  @AT@ 1842 @LENGTH@ 9
---INS SingleVariableDeclaration@@byte[] body @TO@ MethodDeclaration@@public, static, Message, MethodName:toMessage, byte[] body, HL7Exception,  @AT@ 1852 @LENGTH@ 11
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] body @AT@ 1852 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1852 @LENGTH@ 4
------INS SimpleName@@body @TO@ SingleVariableDeclaration@@byte[] body @AT@ 1859 @LENGTH@ 4
---INS SimpleType@@HL7Exception @TO@ MethodDeclaration@@public, static, Message, MethodName:toMessage, byte[] body, HL7Exception,  @AT@ 1872 @LENGTH@ 12
---INS ReturnStatement@@MethodInvocation:parse(new String(body),DEFAULT_CONTEXT.getGenericParser()) @TO@ MethodDeclaration@@public, static, Message, MethodName:toMessage, byte[] body, HL7Exception,  @AT@ 1895 @LENGTH@ 67
------INS MethodInvocation@@parse(new String(body),DEFAULT_CONTEXT.getGenericParser()) @TO@ ReturnStatement@@MethodInvocation:parse(new String(body),DEFAULT_CONTEXT.getGenericParser()) @AT@ 1902 @LENGTH@ 59
---------INS SimpleName@@MethodName:parse:[new String(body), DEFAULT_CONTEXT.getGenericParser()] @TO@ MethodInvocation@@parse(new String(body),DEFAULT_CONTEXT.getGenericParser()) @AT@ 1902 @LENGTH@ 59
------------INS ClassInstanceCreation@@String[body] @TO@ SimpleName@@MethodName:parse:[new String(body), DEFAULT_CONTEXT.getGenericParser()] @AT@ 1908 @LENGTH@ 16
---------------INS New@@new @TO@ ClassInstanceCreation@@String[body] @AT@ 1908 @LENGTH@ 3
---------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[body] @AT@ 1912 @LENGTH@ 6
---------------INS SimpleName@@body @TO@ ClassInstanceCreation@@String[body] @AT@ 1919 @LENGTH@ 4
------------INS MethodInvocation@@DEFAULT_CONTEXT.getGenericParser() @TO@ SimpleName@@MethodName:parse:[new String(body), DEFAULT_CONTEXT.getGenericParser()] @AT@ 1926 @LENGTH@ 34
---------------INS SimpleName@@Name:DEFAULT_CONTEXT @TO@ MethodInvocation@@DEFAULT_CONTEXT.getGenericParser() @AT@ 1926 @LENGTH@ 15
---------------INS SimpleName@@MethodName:getGenericParser:[] @TO@ MethodInvocation@@DEFAULT_CONTEXT.getGenericParser() @AT@ 1942 @LENGTH@ 18


UPD VariableDeclarationStatement@@Message request=SjmsExchangeMessageHelper.createMessage(exchange,producer.getSession(),getSjmsEndpoint().getJmsKeyFormatStrategy()); @TO@ Message request=SjmsExchangeMessageHelper.createMessage(exchange,producer.getSession(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter()); @AT@ 8402 @LENGTH@ 136
---UPD VariableDeclarationFragment@@request=SjmsExchangeMessageHelper.createMessage(exchange,producer.getSession(),getSjmsEndpoint().getJmsKeyFormatStrategy()) @TO@ request=SjmsExchangeMessageHelper.createMessage(exchange,producer.getSession(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter()) @AT@ 8410 @LENGTH@ 127
------UPD MethodInvocation@@SjmsExchangeMessageHelper.createMessage(exchange,producer.getSession(),getSjmsEndpoint().getJmsKeyFormatStrategy()) @TO@ SjmsExchangeMessageHelper.createMessage(exchange,producer.getSession(),getSjmsEndpoint().getJmsKeyFormatStrategy(),getSjmsEndpoint().getCamelContext().getTypeConverter()) @AT@ 8420 @LENGTH@ 117
---------UPD SimpleName@@MethodName:createMessage:[exchange, producer.getSession(), getSjmsEndpoint().getJmsKeyFormatStrategy()] @TO@ MethodName:createMessage:[exchange, producer.getSession(), getSjmsEndpoint().getJmsKeyFormatStrategy(), getSjmsEndpoint().getCamelContext().getTypeConverter()] @AT@ 8446 @LENGTH@ 91
------------INS MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @TO@ SimpleName@@MethodName:createMessage:[exchange, producer.getSession(), getSjmsEndpoint().getJmsKeyFormatStrategy()] @AT@ 8538 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @AT@ 8538 @LENGTH@ 35
---------------INS MethodInvocation@@MethodName:getSjmsEndpoint:[] @TO@ MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @AT@ 8538 @LENGTH@ 17
---------------INS SimpleName@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@getSjmsEndpoint().getCamelContext().getTypeConverter() @AT@ 8574 @LENGTH@ 18


UPD VariableDeclarationStatement@@DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 3027 @LENGTH@ 97
---UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 3027 @LENGTH@ 17
---UPD VariableDeclarationFragment@@client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 3045 @LENGTH@ 78
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 3054 @LENGTH@ 69
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 3054 @LENGTH@ 43
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3083 @LENGTH@ 11
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 3098 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:cli.sendLine("/extension=org.jboss.as.logging:read-resource(recursive=" + String.valueOf(recursive) + ")") @TO@ MethodInvocation:cli.sendLine("/extension=org.jboss.as.logging:read-resource(recursive=" + String.valueOf(recursive) + ",include-runtime=true)") @AT@ 2272 @LENGTH@ 105
---UPD MethodInvocation@@cli.sendLine("/extension=org.jboss.as.logging:read-resource(recursive=" + String.valueOf(recursive) + ")") @TO@ cli.sendLine("/extension=org.jboss.as.logging:read-resource(recursive=" + String.valueOf(recursive) + ",include-runtime=true)") @AT@ 2272 @LENGTH@ 104
------UPD SimpleName@@MethodName:sendLine:["/extension=org.jboss.as.logging:read-resource(recursive=" + String.valueOf(recursive) + ")"] @TO@ MethodName:sendLine:["/extension=org.jboss.as.logging:read-resource(recursive=" + String.valueOf(recursive) + ",include-runtime=true)"] @AT@ 2276 @LENGTH@ 100
---------UPD InfixExpression@@"/extension=org.jboss.as.logging:read-resource(recursive=" + String.valueOf(recursive) + ")" @TO@ "/extension=org.jboss.as.logging:read-resource(recursive=" + String.valueOf(recursive) + ",include-runtime=true)" @AT@ 2285 @LENGTH@ 90
------------UPD StringLiteral@@")" @TO@ ",include-runtime=true)" @AT@ 2372 @LENGTH@ 3


UPD TypeDeclaration@@[public]MyBatisComponent, DefaultComponent @TO@ [public]MyBatisComponent, UriEndpointComponent @AT@ 1269 @LENGTH@ 1609
---UPD SimpleType@@DefaultComponent @TO@ UriEndpointComponent @AT@ 1307 @LENGTH@ 16


INS MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), public]GroovyTest, OSGiIntegrationTestSupport @AT@ 1766 @LENGTH@ 337
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1766 @LENGTH@ 9
---INS SimpleType@@CamelContext @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1776 @LENGTH@ 12
---INS SimpleName@@MethodName:createCamelContext @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1789 @LENGTH@ 18
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1817 @LENGTH@ 9
---INS VariableDeclarationStatement@@CamelContext context=super.createCamelContext(); @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1837 @LENGTH@ 50
------INS SimpleType@@CamelContext @TO@ VariableDeclarationStatement@@CamelContext context=super.createCamelContext(); @AT@ 1837 @LENGTH@ 12
------INS VariableDeclarationFragment@@context=super.createCamelContext() @TO@ VariableDeclarationStatement@@CamelContext context=super.createCamelContext(); @AT@ 1850 @LENGTH@ 36
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=super.createCamelContext() @AT@ 1850 @LENGTH@ 7
---------INS SuperMethodInvocation@@super.createCamelContext() @TO@ VariableDeclarationFragment@@context=super.createCamelContext() @AT@ 1860 @LENGTH@ 26
------------INS SimpleName@@MethodName:createCamelContext:[] @TO@ SuperMethodInvocation@@super.createCamelContext() @AT@ 1866 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1998 @LENGTH@ 75
------INS MethodInvocation@@context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @TO@ ExpressionStatement@@MethodInvocation:context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @AT@ 1998 @LENGTH@ 74
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @AT@ 1998 @LENGTH@ 7
---------INS SimpleName@@MethodName:setApplicationContextClassLoader:[this.getClass().getClassLoader()] @TO@ MethodInvocation@@context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @AT@ 2006 @LENGTH@ 66
------------INS MethodInvocation@@this.getClass().getClassLoader() @TO@ SimpleName@@MethodName:setApplicationContextClassLoader:[this.getClass().getClassLoader()] @AT@ 2039 @LENGTH@ 32
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@this.getClass().getClassLoader() @AT@ 2039 @LENGTH@ 15
---------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getClass().getClassLoader() @AT@ 2039 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@this.getClass().getClassLoader() @AT@ 2055 @LENGTH@ 16
---INS ReturnStatement@@SimpleName:context @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 2082 @LENGTH@ 15
------INS SimpleName@@context @TO@ ReturnStatement@@SimpleName:context @AT@ 2089 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:printer.printRecords(new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}) @TO@ MethodInvocation:printer.printRecords((Object[])new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}) @AT@ 5599 @LENGTH@ 98
---UPD MethodInvocation@@printer.printRecords(new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}) @TO@ printer.printRecords((Object[])new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}) @AT@ 5599 @LENGTH@ 97
------UPD SimpleName@@MethodName:printRecords:[new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}] @TO@ MethodName:printRecords:[(Object[])new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}] @AT@ 5607 @LENGTH@ 89
---------INS CastExpression@@(Object[])new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")} @TO@ SimpleName@@MethodName:printRecords:[new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}] @AT@ 5620 @LENGTH@ 86
------------MOV ArrayCreation@@new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")} @TO@ CastExpression@@(Object[])new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")} @AT@ 5620 @LENGTH@ 75
------------INS ArrayType@@Object[] @TO@ CastExpression@@(Object[])new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")} @AT@ 5621 @LENGTH@ 8
---------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 5621 @LENGTH@ 6


UPD VariableDeclarationStatement@@String hiveSiteLocation=new HiveConf().getHiveSiteLocation().getPath(); @TO@ String hiveSiteLocation=HiveConf.getHiveSiteLocation().getPath(); @AT@ 1408 @LENGTH@ 73
---UPD VariableDeclarationFragment@@hiveSiteLocation=new HiveConf().getHiveSiteLocation().getPath() @TO@ hiveSiteLocation=HiveConf.getHiveSiteLocation().getPath() @AT@ 1415 @LENGTH@ 65
------UPD MethodInvocation@@new HiveConf().getHiveSiteLocation().getPath() @TO@ HiveConf.getHiveSiteLocation().getPath() @AT@ 1434 @LENGTH@ 46
---------INS SimpleName@@Name:HiveConf @TO@ MethodInvocation@@new HiveConf().getHiveSiteLocation().getPath() @AT@ 1430 @LENGTH@ 8
---------DEL ClassInstanceCreation@@HiveConf[] @AT@ 1434 @LENGTH@ 14
------------DEL New@@new @AT@ 1434 @LENGTH@ 3
------------DEL SimpleType@@HiveConf @AT@ 1438 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:e.printStackTrace() @TO@ MethodInvocation:LOG.error("Error generating Spark Plan",e) @AT@ 5586 @LENGTH@ 20
---UPD MethodInvocation@@e.printStackTrace() @TO@ LOG.error("Error generating Spark Plan",e) @AT@ 5586 @LENGTH@ 19
------UPD SimpleName@@Name:e @TO@ Name:LOG @AT@ 5586 @LENGTH@ 1
------UPD SimpleName@@MethodName:printStackTrace:[] @TO@ MethodName:error:["Error generating Spark Plan", e] @AT@ 5588 @LENGTH@ 17
---------INS StringLiteral@@"Error generating Spark Plan" @TO@ SimpleName@@MethodName:printStackTrace:[] @AT@ 5487 @LENGTH@ 29
---------INS SimpleName@@e @TO@ SimpleName@@MethodName:printStackTrace:[] @AT@ 5518 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:ctx.connectController() @TO@ MethodInvocation:ctx.connectController(testSupport.getDomainMasterConfiguration().getHostControllerManagementAddress(),testSupport.getDomainMasterConfiguration().getHostControllerManagementPort()) @AT@ 5882 @LENGTH@ 24
---UPD MethodInvocation@@ctx.connectController() @TO@ ctx.connectController(testSupport.getDomainMasterConfiguration().getHostControllerManagementAddress(),testSupport.getDomainMasterConfiguration().getHostControllerManagementPort()) @AT@ 5882 @LENGTH@ 23
------UPD SimpleName@@MethodName:connectController:[] @TO@ MethodName:getHostControllerManagementPort:[] @AT@ 5886 @LENGTH@ 19
------INS SimpleName@@MethodName:connectController:[testSupport.getDomainMasterConfiguration().getHostControllerManagementAddress(), testSupport.getDomainMasterConfiguration().getHostControllerManagementPort()] @TO@ MethodInvocation@@ctx.connectController() @AT@ 6039 @LENGTH@ 175
---------INS MethodInvocation@@testSupport.getDomainMasterConfiguration().getHostControllerManagementAddress() @TO@ SimpleName@@MethodName:connectController:[testSupport.getDomainMasterConfiguration().getHostControllerManagementAddress(), testSupport.getDomainMasterConfiguration().getHostControllerManagementPort()] @AT@ 6057 @LENGTH@ 79
------------INS MethodInvocation@@MethodName:getDomainMasterConfiguration:[] @TO@ MethodInvocation@@testSupport.getDomainMasterConfiguration().getHostControllerManagementAddress() @AT@ 6057 @LENGTH@ 42
------------INS SimpleName@@Name:testSupport @TO@ MethodInvocation@@testSupport.getDomainMasterConfiguration().getHostControllerManagementAddress() @AT@ 6057 @LENGTH@ 11
------------INS SimpleName@@MethodName:getHostControllerManagementAddress:[] @TO@ MethodInvocation@@testSupport.getDomainMasterConfiguration().getHostControllerManagementAddress() @AT@ 6100 @LENGTH@ 36
---------INS MethodInvocation@@testSupport.getDomainMasterConfiguration().getHostControllerManagementPort() @TO@ SimpleName@@MethodName:connectController:[testSupport.getDomainMasterConfiguration().getHostControllerManagementAddress(), testSupport.getDomainMasterConfiguration().getHostControllerManagementPort()] @AT@ 6137 @LENGTH@ 76
------------MOV SimpleName@@MethodName:connectController:[] @TO@ MethodInvocation@@testSupport.getDomainMasterConfiguration().getHostControllerManagementPort() @AT@ 5886 @LENGTH@ 19
------------INS MethodInvocation@@MethodName:getDomainMasterConfiguration:[] @TO@ MethodInvocation@@testSupport.getDomainMasterConfiguration().getHostControllerManagementPort() @AT@ 6137 @LENGTH@ 42
------------INS SimpleName@@Name:testSupport @TO@ MethodInvocation@@testSupport.getDomainMasterConfiguration().getHostControllerManagementPort() @AT@ 6137 @LENGTH@ 11


UPD SwitchStatement@@switch (modelVersion) {case VERSION_2_0_0:{    resourceBuilder.rejectChildResource(PERIODIC_SIZE_ROTATING_HANDLER_PATH);    loggingProfileBuilder.rejectChildResource(PERIODIC_SIZE_ROTATING_HANDLER_PATH);    break;  }} @TO@ switch (modelVersion) {case VERSION_2_0_0:{    resourceBuilder.rejectChildResource(PERIODIC_SIZE_ROTATING_HANDLER_PATH);    if (loggingProfileBuilder != null) {      loggingProfileBuilder.rejectChildResource(PERIODIC_SIZE_ROTATING_HANDLER_PATH);    }    break;  }} @AT@ 3076 @LENGTH@ 290
---INS IfStatement@@if (loggingProfileBuilder != null) {  loggingProfileBuilder.rejectChildResource(PERIODIC_SIZE_ROTATING_HANDLER_PATH);} @TO@ SwitchStatement@@switch (modelVersion) {case VERSION_2_0_0:{    resourceBuilder.rejectChildResource(PERIODIC_SIZE_ROTATING_HANDLER_PATH);    loggingProfileBuilder.rejectChildResource(PERIODIC_SIZE_ROTATING_HANDLER_PATH);    break;  }} @AT@ 3240 @LENGTH@ 154
------INS InfixExpression@@loggingProfileBuilder != null @TO@ IfStatement@@if (loggingProfileBuilder != null) {  loggingProfileBuilder.rejectChildResource(PERIODIC_SIZE_ROTATING_HANDLER_PATH);} @AT@ 3244 @LENGTH@ 29
---------INS SimpleName@@loggingProfileBuilder @TO@ InfixExpression@@loggingProfileBuilder != null @AT@ 3244 @LENGTH@ 21
---------INS Operator@@!= @TO@ InfixExpression@@loggingProfileBuilder != null @AT@ 3265 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@loggingProfileBuilder != null @AT@ 3269 @LENGTH@ 4
------INS Block@@ThenBody:{  loggingProfileBuilder.rejectChildResource(PERIODIC_SIZE_ROTATING_HANDLER_PATH);} @TO@ IfStatement@@if (loggingProfileBuilder != null) {  loggingProfileBuilder.rejectChildResource(PERIODIC_SIZE_ROTATING_HANDLER_PATH);} @AT@ 3275 @LENGTH@ 119
---------MOV ExpressionStatement@@MethodInvocation:loggingProfileBuilder.rejectChildResource(PERIODIC_SIZE_ROTATING_HANDLER_PATH) @TO@ Block@@ThenBody:{  loggingProfileBuilder.rejectChildResource(PERIODIC_SIZE_ROTATING_HANDLER_PATH);} @AT@ 3240 @LENGTH@ 79


INS ExpressionStatement@@MethodInvocation:client.setResourceIds(Arrays.asList("bar")) @TO@ MethodDeclaration@@public, void, MethodName:start,  @AT@ 2110 @LENGTH@ 44
---INS MethodInvocation@@client.setResourceIds(Arrays.asList("bar")) @TO@ ExpressionStatement@@MethodInvocation:client.setResourceIds(Arrays.asList("bar")) @AT@ 2110 @LENGTH@ 43
------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.setResourceIds(Arrays.asList("bar")) @AT@ 2110 @LENGTH@ 6
------INS SimpleName@@MethodName:setResourceIds:[Arrays.asList("bar")] @TO@ MethodInvocation@@client.setResourceIds(Arrays.asList("bar")) @AT@ 2117 @LENGTH@ 36
---------INS MethodInvocation@@Arrays.asList("bar") @TO@ SimpleName@@MethodName:setResourceIds:[Arrays.asList("bar")] @AT@ 2132 @LENGTH@ 20
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("bar") @AT@ 2132 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:["bar"] @TO@ MethodInvocation@@Arrays.asList("bar") @AT@ 2139 @LENGTH@ 13
---------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:asList:["bar"] @AT@ 2146 @LENGTH@ 5


UPD IfStatement@@if (LOG.isInfoEnabled()) {  LOG.debug("Failed to find access token for authentication " + authentication);} @TO@ if (LOG.isDebugEnabled()) {  LOG.debug("Failed to find access token for authentication " + authentication);} @AT@ 5643 @LENGTH@ 114
---UPD MethodInvocation@@LOG.isInfoEnabled() @TO@ LOG.isDebugEnabled() @AT@ 5647 @LENGTH@ 19
------UPD SimpleName@@MethodName:isInfoEnabled:[] @TO@ MethodName:isDebugEnabled:[] @AT@ 5651 @LENGTH@ 15


UPD VariableDeclarationStatement@@DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 3767 @LENGTH@ 97
---UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 3767 @LENGTH@ 17
---UPD VariableDeclarationFragment@@client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 3785 @LENGTH@ 78
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 3794 @LENGTH@ 69
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 3794 @LENGTH@ 43
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3823 @LENGTH@ 11
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 3838 @LENGTH@ 25


INS FieldDeclaration@@private, static, final, String, [JAVA6_NON_BREAKING_SPACE="&nbsp"] @TO@ TypeDeclaration@@[public]JavadocParser, Parser @AT@ 1552 @LENGTH@ 63
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [JAVA6_NON_BREAKING_SPACE="&nbsp"] @AT@ 1552 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [JAVA6_NON_BREAKING_SPACE="&nbsp"] @AT@ 1560 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [JAVA6_NON_BREAKING_SPACE="&nbsp"] @AT@ 1567 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [JAVA6_NON_BREAKING_SPACE="&nbsp"] @AT@ 1573 @LENGTH@ 6
---INS VariableDeclarationFragment@@JAVA6_NON_BREAKING_SPACE="&nbsp" @TO@ FieldDeclaration@@private, static, final, String, [JAVA6_NON_BREAKING_SPACE="&nbsp"] @AT@ 1580 @LENGTH@ 34
------INS SimpleName@@JAVA6_NON_BREAKING_SPACE @TO@ VariableDeclarationFragment@@JAVA6_NON_BREAKING_SPACE="&nbsp" @AT@ 1580 @LENGTH@ 24
------INS StringLiteral@@"&nbsp" @TO@ VariableDeclarationFragment@@JAVA6_NON_BREAKING_SPACE="&nbsp" @AT@ 1607 @LENGTH@ 7


UPD SwitchCase@@case ALGORITHM_DES_CRYPT: @TO@ case ALGORITHM_CRYPT_DES: @AT@ 6655 @LENGTH@ 25
---UPD SimpleName@@ALGORITHM_DES_CRYPT @TO@ ALGORITHM_CRYPT_DES @AT@ 6660 @LENGTH@ 19


UPD TryStatement@@try {  HiveConf hiveConf=new HiveConf(HiveMetaTool.class);  client=new HiveMetaStoreClient(hiveConf,null);  os=new ByteArrayOutputStream();  ps=new PrintStream(os);  Database db=new Database();  db.setName(dbName);  client.dropTable(dbName,tblName);  client.dropTable(dbName,badTblName);  dropDatabase(dbName);  client.createDatabase(db);  locationUri=db.getLocationUri();  String avroUri="hdfs://nn.example.com/warehouse/hive/ab.avsc";  String badAvroUri=new String("hdfs:/hive");  client.dropType(typeName);  Type typ1=new Type();  typ1.setName(typeName);  typ1.setFields(new ArrayList<FieldSchema>(2));  typ1.getFields().add(new FieldSchema("name",serdeConstants.STRING_TYPE_NAME,""));  typ1.getFields().add(new FieldSchema("income",serdeConstants.INT_TYPE_NAME,""));  client.createType(typ1);  Table tbl=new Table();  tbl.setDbName(dbName);  tbl.setTableName(tblName);  StorageDescriptor sd=new StorageDescriptor();  tbl.setSd(sd);  sd.setCols(typ1.getFields());  sd.setCompressed(false);  sd.setNumBuckets(1);  sd.setParameters(new HashMap<String,String>());  sd.getParameters().put("test_param_1","Use this for comments etc");  sd.setBucketCols(new ArrayList<String>(2));  sd.getBucketCols().add("name");  sd.setSerdeInfo(new SerDeInfo());  sd.getSerdeInfo().setName(tbl.getTableName());  sd.getSerdeInfo().setParameters(new HashMap<String,String>());  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_FORMAT,"1");  sd.getParameters().put(AvroSerdeUtils.SCHEMA_URL,avroUri);  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.avro.AvroSerDe.class.getName());  tbl.setPartitionKeys(new ArrayList<FieldSchema>());  client.createTable(tbl);  tbl=new Table();  tbl.setDbName(dbName);  tbl.setTableName(badTblName);  sd=new StorageDescriptor();  tbl.setSd(sd);  sd.setCols(typ1.getFields());  sd.setCompressed(false);  sd.setNumBuckets(1);  sd.setParameters(new HashMap<String,String>());  sd.getParameters().put("test_param_1","Use this for comments etc");  sd.setBucketCols(new ArrayList<String>(2));  sd.getBucketCols().add("name");  sd.setSerdeInfo(new SerDeInfo());  sd.getSerdeInfo().setName(tbl.getTableName());  sd.getSerdeInfo().setParameters(new HashMap<String,String>());  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_FORMAT,"1");  sd.getParameters().put(AvroSerdeUtils.SCHEMA_URL,badAvroUri);  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.avro.AvroSerDe.class.getName());  tbl.setPartitionKeys(new ArrayList<FieldSchema>());  client.createTable(tbl);  client.close();} catch (Exception e) {  System.err.println("Unable to setup the hive metatool test");  System.err.println(StringUtils.stringifyException(e));  throw new Exception(e);} @TO@ try {  HiveConf hiveConf=new HiveConf(HiveMetaTool.class);  client=new HiveMetaStoreClient(hiveConf,null);  os=new ByteArrayOutputStream();  ps=new PrintStream(os);  Database db=new Database();  db.setName(dbName);  client.dropTable(dbName,tblName);  client.dropTable(dbName,badTblName);  dropDatabase(dbName);  client.createDatabase(db);  locationUri=db.getLocationUri();  String avroUri="hdfs://nn.example.com/warehouse/hive/ab.avsc";  String badAvroUri=new String("hdfs:/hive");  client.dropType(typeName);  Type typ1=new Type();  typ1.setName(typeName);  typ1.setFields(new ArrayList<FieldSchema>(2));  typ1.getFields().add(new FieldSchema("name",serdeConstants.STRING_TYPE_NAME,""));  typ1.getFields().add(new FieldSchema("income",serdeConstants.INT_TYPE_NAME,""));  client.createType(typ1);  Table tbl=new Table();  tbl.setDbName(dbName);  tbl.setTableName(tblName);  StorageDescriptor sd=new StorageDescriptor();  tbl.setSd(sd);  sd.setCols(typ1.getFields());  sd.setCompressed(false);  sd.setNumBuckets(1);  sd.setParameters(new HashMap<String,String>());  sd.getParameters().put("test_param_1","Use this for comments etc");  sd.setBucketCols(new ArrayList<String>(2));  sd.getBucketCols().add("name");  sd.setSerdeInfo(new SerDeInfo());  sd.getSerdeInfo().setName(tbl.getTableName());  sd.getSerdeInfo().setParameters(new HashMap<String,String>());  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_FORMAT,"1");  sd.getParameters().put(AvroSerdeUtils.SCHEMA_URL,avroUri);  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.avro.AvroSerDe.class.getName());  sd.setInputFormat(AvroContainerInputFormat.class.getName());  sd.setOutputFormat(AvroContainerOutputFormat.class.getName());  tbl.setPartitionKeys(new ArrayList<FieldSchema>());  client.createTable(tbl);  tbl=new Table();  tbl.setDbName(dbName);  tbl.setTableName(badTblName);  sd=new StorageDescriptor();  tbl.setSd(sd);  sd.setCols(typ1.getFields());  sd.setCompressed(false);  sd.setNumBuckets(1);  sd.setParameters(new HashMap<String,String>());  sd.getParameters().put("test_param_1","Use this for comments etc");  sd.setBucketCols(new ArrayList<String>(2));  sd.getBucketCols().add("name");  sd.setSerdeInfo(new SerDeInfo());  sd.getSerdeInfo().setName(tbl.getTableName());  sd.getSerdeInfo().setParameters(new HashMap<String,String>());  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_FORMAT,"1");  sd.getParameters().put(AvroSerdeUtils.SCHEMA_URL,badAvroUri);  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.avro.AvroSerDe.class.getName());  sd.setInputFormat(AvroContainerInputFormat.class.getName());  sd.setOutputFormat(AvroContainerOutputFormat.class.getName());  tbl.setPartitionKeys(new ArrayList<FieldSchema>());  client.createTable(tbl);  client.close();} catch (Exception e) {  System.err.println("Unable to setup the hive metatool test");  System.err.println(StringUtils.stringifyException(e));  throw new Exception(e);} @AT@ 2492 @LENGTH@ 3385
---INS ExpressionStatement@@MethodInvocation:sd.setInputFormat(AvroContainerInputFormat.class.getName()) @TO@ TryStatement@@try {  HiveConf hiveConf=new HiveConf(HiveMetaTool.class);  client=new HiveMetaStoreClient(hiveConf,null);  os=new ByteArrayOutputStream();  ps=new PrintStream(os);  Database db=new Database();  db.setName(dbName);  client.dropTable(dbName,tblName);  client.dropTable(dbName,badTblName);  dropDatabase(dbName);  client.createDatabase(db);  locationUri=db.getLocationUri();  String avroUri="hdfs://nn.example.com/warehouse/hive/ab.avsc";  String badAvroUri=new String("hdfs:/hive");  client.dropType(typeName);  Type typ1=new Type();  typ1.setName(typeName);  typ1.setFields(new ArrayList<FieldSchema>(2));  typ1.getFields().add(new FieldSchema("name",serdeConstants.STRING_TYPE_NAME,""));  typ1.getFields().add(new FieldSchema("income",serdeConstants.INT_TYPE_NAME,""));  client.createType(typ1);  Table tbl=new Table();  tbl.setDbName(dbName);  tbl.setTableName(tblName);  StorageDescriptor sd=new StorageDescriptor();  tbl.setSd(sd);  sd.setCols(typ1.getFields());  sd.setCompressed(false);  sd.setNumBuckets(1);  sd.setParameters(new HashMap<String,String>());  sd.getParameters().put("test_param_1","Use this for comments etc");  sd.setBucketCols(new ArrayList<String>(2));  sd.getBucketCols().add("name");  sd.setSerdeInfo(new SerDeInfo());  sd.getSerdeInfo().setName(tbl.getTableName());  sd.getSerdeInfo().setParameters(new HashMap<String,String>());  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_FORMAT,"1");  sd.getParameters().put(AvroSerdeUtils.SCHEMA_URL,avroUri);  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.avro.AvroSerDe.class.getName());  tbl.setPartitionKeys(new ArrayList<FieldSchema>());  client.createTable(tbl);  tbl=new Table();  tbl.setDbName(dbName);  tbl.setTableName(badTblName);  sd=new StorageDescriptor();  tbl.setSd(sd);  sd.setCols(typ1.getFields());  sd.setCompressed(false);  sd.setNumBuckets(1);  sd.setParameters(new HashMap<String,String>());  sd.getParameters().put("test_param_1","Use this for comments etc");  sd.setBucketCols(new ArrayList<String>(2));  sd.getBucketCols().add("name");  sd.setSerdeInfo(new SerDeInfo());  sd.getSerdeInfo().setName(tbl.getTableName());  sd.getSerdeInfo().setParameters(new HashMap<String,String>());  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_FORMAT,"1");  sd.getParameters().put(AvroSerdeUtils.SCHEMA_URL,badAvroUri);  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.avro.AvroSerDe.class.getName());  tbl.setPartitionKeys(new ArrayList<FieldSchema>());  client.createTable(tbl);  client.close();} catch (Exception e) {  System.err.println("Unable to setup the hive metatool test");  System.err.println(StringUtils.stringifyException(e));  throw new Exception(e);} @AT@ 4648 @LENGTH@ 60
------INS MethodInvocation@@sd.setInputFormat(AvroContainerInputFormat.class.getName()) @TO@ ExpressionStatement@@MethodInvocation:sd.setInputFormat(AvroContainerInputFormat.class.getName()) @AT@ 4648 @LENGTH@ 59
---------INS SimpleName@@Name:sd @TO@ MethodInvocation@@sd.setInputFormat(AvroContainerInputFormat.class.getName()) @AT@ 4648 @LENGTH@ 2
---------INS SimpleName@@MethodName:setInputFormat:[AvroContainerInputFormat.class.getName()] @TO@ MethodInvocation@@sd.setInputFormat(AvroContainerInputFormat.class.getName()) @AT@ 4651 @LENGTH@ 56
------------INS MethodInvocation@@AvroContainerInputFormat.class.getName() @TO@ SimpleName@@MethodName:setInputFormat:[AvroContainerInputFormat.class.getName()] @AT@ 4666 @LENGTH@ 40
---------------INS TypeLiteral@@AvroContainerInputFormat.class @TO@ MethodInvocation@@AvroContainerInputFormat.class.getName() @AT@ 4666 @LENGTH@ 30
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@AvroContainerInputFormat.class.getName() @AT@ 4697 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:sd.setOutputFormat(AvroContainerOutputFormat.class.getName()) @TO@ TryStatement@@try {  HiveConf hiveConf=new HiveConf(HiveMetaTool.class);  client=new HiveMetaStoreClient(hiveConf,null);  os=new ByteArrayOutputStream();  ps=new PrintStream(os);  Database db=new Database();  db.setName(dbName);  client.dropTable(dbName,tblName);  client.dropTable(dbName,badTblName);  dropDatabase(dbName);  client.createDatabase(db);  locationUri=db.getLocationUri();  String avroUri="hdfs://nn.example.com/warehouse/hive/ab.avsc";  String badAvroUri=new String("hdfs:/hive");  client.dropType(typeName);  Type typ1=new Type();  typ1.setName(typeName);  typ1.setFields(new ArrayList<FieldSchema>(2));  typ1.getFields().add(new FieldSchema("name",serdeConstants.STRING_TYPE_NAME,""));  typ1.getFields().add(new FieldSchema("income",serdeConstants.INT_TYPE_NAME,""));  client.createType(typ1);  Table tbl=new Table();  tbl.setDbName(dbName);  tbl.setTableName(tblName);  StorageDescriptor sd=new StorageDescriptor();  tbl.setSd(sd);  sd.setCols(typ1.getFields());  sd.setCompressed(false);  sd.setNumBuckets(1);  sd.setParameters(new HashMap<String,String>());  sd.getParameters().put("test_param_1","Use this for comments etc");  sd.setBucketCols(new ArrayList<String>(2));  sd.getBucketCols().add("name");  sd.setSerdeInfo(new SerDeInfo());  sd.getSerdeInfo().setName(tbl.getTableName());  sd.getSerdeInfo().setParameters(new HashMap<String,String>());  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_FORMAT,"1");  sd.getParameters().put(AvroSerdeUtils.SCHEMA_URL,avroUri);  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.avro.AvroSerDe.class.getName());  tbl.setPartitionKeys(new ArrayList<FieldSchema>());  client.createTable(tbl);  tbl=new Table();  tbl.setDbName(dbName);  tbl.setTableName(badTblName);  sd=new StorageDescriptor();  tbl.setSd(sd);  sd.setCols(typ1.getFields());  sd.setCompressed(false);  sd.setNumBuckets(1);  sd.setParameters(new HashMap<String,String>());  sd.getParameters().put("test_param_1","Use this for comments etc");  sd.setBucketCols(new ArrayList<String>(2));  sd.getBucketCols().add("name");  sd.setSerdeInfo(new SerDeInfo());  sd.getSerdeInfo().setName(tbl.getTableName());  sd.getSerdeInfo().setParameters(new HashMap<String,String>());  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_FORMAT,"1");  sd.getParameters().put(AvroSerdeUtils.SCHEMA_URL,badAvroUri);  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.avro.AvroSerDe.class.getName());  tbl.setPartitionKeys(new ArrayList<FieldSchema>());  client.createTable(tbl);  client.close();} catch (Exception e) {  System.err.println("Unable to setup the hive metatool test");  System.err.println(StringUtils.stringifyException(e));  throw new Exception(e);} @AT@ 4715 @LENGTH@ 62
------INS MethodInvocation@@sd.setOutputFormat(AvroContainerOutputFormat.class.getName()) @TO@ ExpressionStatement@@MethodInvocation:sd.setOutputFormat(AvroContainerOutputFormat.class.getName()) @AT@ 4715 @LENGTH@ 61
---------INS SimpleName@@Name:sd @TO@ MethodInvocation@@sd.setOutputFormat(AvroContainerOutputFormat.class.getName()) @AT@ 4715 @LENGTH@ 2
---------INS SimpleName@@MethodName:setOutputFormat:[AvroContainerOutputFormat.class.getName()] @TO@ MethodInvocation@@sd.setOutputFormat(AvroContainerOutputFormat.class.getName()) @AT@ 4718 @LENGTH@ 58
------------INS MethodInvocation@@AvroContainerOutputFormat.class.getName() @TO@ SimpleName@@MethodName:setOutputFormat:[AvroContainerOutputFormat.class.getName()] @AT@ 4734 @LENGTH@ 41
---------------INS TypeLiteral@@AvroContainerOutputFormat.class @TO@ MethodInvocation@@AvroContainerOutputFormat.class.getName() @AT@ 4734 @LENGTH@ 31
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@AvroContainerOutputFormat.class.getName() @AT@ 4766 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:sd.setInputFormat(AvroContainerInputFormat.class.getName()) @TO@ TryStatement@@try {  HiveConf hiveConf=new HiveConf(HiveMetaTool.class);  client=new HiveMetaStoreClient(hiveConf,null);  os=new ByteArrayOutputStream();  ps=new PrintStream(os);  Database db=new Database();  db.setName(dbName);  client.dropTable(dbName,tblName);  client.dropTable(dbName,badTblName);  dropDatabase(dbName);  client.createDatabase(db);  locationUri=db.getLocationUri();  String avroUri="hdfs://nn.example.com/warehouse/hive/ab.avsc";  String badAvroUri=new String("hdfs:/hive");  client.dropType(typeName);  Type typ1=new Type();  typ1.setName(typeName);  typ1.setFields(new ArrayList<FieldSchema>(2));  typ1.getFields().add(new FieldSchema("name",serdeConstants.STRING_TYPE_NAME,""));  typ1.getFields().add(new FieldSchema("income",serdeConstants.INT_TYPE_NAME,""));  client.createType(typ1);  Table tbl=new Table();  tbl.setDbName(dbName);  tbl.setTableName(tblName);  StorageDescriptor sd=new StorageDescriptor();  tbl.setSd(sd);  sd.setCols(typ1.getFields());  sd.setCompressed(false);  sd.setNumBuckets(1);  sd.setParameters(new HashMap<String,String>());  sd.getParameters().put("test_param_1","Use this for comments etc");  sd.setBucketCols(new ArrayList<String>(2));  sd.getBucketCols().add("name");  sd.setSerdeInfo(new SerDeInfo());  sd.getSerdeInfo().setName(tbl.getTableName());  sd.getSerdeInfo().setParameters(new HashMap<String,String>());  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_FORMAT,"1");  sd.getParameters().put(AvroSerdeUtils.SCHEMA_URL,avroUri);  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.avro.AvroSerDe.class.getName());  tbl.setPartitionKeys(new ArrayList<FieldSchema>());  client.createTable(tbl);  tbl=new Table();  tbl.setDbName(dbName);  tbl.setTableName(badTblName);  sd=new StorageDescriptor();  tbl.setSd(sd);  sd.setCols(typ1.getFields());  sd.setCompressed(false);  sd.setNumBuckets(1);  sd.setParameters(new HashMap<String,String>());  sd.getParameters().put("test_param_1","Use this for comments etc");  sd.setBucketCols(new ArrayList<String>(2));  sd.getBucketCols().add("name");  sd.setSerdeInfo(new SerDeInfo());  sd.getSerdeInfo().setName(tbl.getTableName());  sd.getSerdeInfo().setParameters(new HashMap<String,String>());  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_FORMAT,"1");  sd.getParameters().put(AvroSerdeUtils.SCHEMA_URL,badAvroUri);  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.avro.AvroSerDe.class.getName());  tbl.setPartitionKeys(new ArrayList<FieldSchema>());  client.createTable(tbl);  client.close();} catch (Exception e) {  System.err.println("Unable to setup the hive metatool test");  System.err.println(StringUtils.stringifyException(e));  throw new Exception(e);} @AT@ 5851 @LENGTH@ 60
------INS MethodInvocation@@sd.setInputFormat(AvroContainerInputFormat.class.getName()) @TO@ ExpressionStatement@@MethodInvocation:sd.setInputFormat(AvroContainerInputFormat.class.getName()) @AT@ 5851 @LENGTH@ 59
---------INS SimpleName@@Name:sd @TO@ MethodInvocation@@sd.setInputFormat(AvroContainerInputFormat.class.getName()) @AT@ 5851 @LENGTH@ 2
---------INS SimpleName@@MethodName:setInputFormat:[AvroContainerInputFormat.class.getName()] @TO@ MethodInvocation@@sd.setInputFormat(AvroContainerInputFormat.class.getName()) @AT@ 5854 @LENGTH@ 56
------------INS MethodInvocation@@AvroContainerInputFormat.class.getName() @TO@ SimpleName@@MethodName:setInputFormat:[AvroContainerInputFormat.class.getName()] @AT@ 5869 @LENGTH@ 40
---------------INS TypeLiteral@@AvroContainerInputFormat.class @TO@ MethodInvocation@@AvroContainerInputFormat.class.getName() @AT@ 5869 @LENGTH@ 30
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@AvroContainerInputFormat.class.getName() @AT@ 5900 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:sd.setOutputFormat(AvroContainerOutputFormat.class.getName()) @TO@ TryStatement@@try {  HiveConf hiveConf=new HiveConf(HiveMetaTool.class);  client=new HiveMetaStoreClient(hiveConf,null);  os=new ByteArrayOutputStream();  ps=new PrintStream(os);  Database db=new Database();  db.setName(dbName);  client.dropTable(dbName,tblName);  client.dropTable(dbName,badTblName);  dropDatabase(dbName);  client.createDatabase(db);  locationUri=db.getLocationUri();  String avroUri="hdfs://nn.example.com/warehouse/hive/ab.avsc";  String badAvroUri=new String("hdfs:/hive");  client.dropType(typeName);  Type typ1=new Type();  typ1.setName(typeName);  typ1.setFields(new ArrayList<FieldSchema>(2));  typ1.getFields().add(new FieldSchema("name",serdeConstants.STRING_TYPE_NAME,""));  typ1.getFields().add(new FieldSchema("income",serdeConstants.INT_TYPE_NAME,""));  client.createType(typ1);  Table tbl=new Table();  tbl.setDbName(dbName);  tbl.setTableName(tblName);  StorageDescriptor sd=new StorageDescriptor();  tbl.setSd(sd);  sd.setCols(typ1.getFields());  sd.setCompressed(false);  sd.setNumBuckets(1);  sd.setParameters(new HashMap<String,String>());  sd.getParameters().put("test_param_1","Use this for comments etc");  sd.setBucketCols(new ArrayList<String>(2));  sd.getBucketCols().add("name");  sd.setSerdeInfo(new SerDeInfo());  sd.getSerdeInfo().setName(tbl.getTableName());  sd.getSerdeInfo().setParameters(new HashMap<String,String>());  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_FORMAT,"1");  sd.getParameters().put(AvroSerdeUtils.SCHEMA_URL,avroUri);  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.avro.AvroSerDe.class.getName());  tbl.setPartitionKeys(new ArrayList<FieldSchema>());  client.createTable(tbl);  tbl=new Table();  tbl.setDbName(dbName);  tbl.setTableName(badTblName);  sd=new StorageDescriptor();  tbl.setSd(sd);  sd.setCols(typ1.getFields());  sd.setCompressed(false);  sd.setNumBuckets(1);  sd.setParameters(new HashMap<String,String>());  sd.getParameters().put("test_param_1","Use this for comments etc");  sd.setBucketCols(new ArrayList<String>(2));  sd.getBucketCols().add("name");  sd.setSerdeInfo(new SerDeInfo());  sd.getSerdeInfo().setName(tbl.getTableName());  sd.getSerdeInfo().setParameters(new HashMap<String,String>());  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_FORMAT,"1");  sd.getParameters().put(AvroSerdeUtils.SCHEMA_URL,badAvroUri);  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.avro.AvroSerDe.class.getName());  tbl.setPartitionKeys(new ArrayList<FieldSchema>());  client.createTable(tbl);  client.close();} catch (Exception e) {  System.err.println("Unable to setup the hive metatool test");  System.err.println(StringUtils.stringifyException(e));  throw new Exception(e);} @AT@ 5918 @LENGTH@ 62
------INS MethodInvocation@@sd.setOutputFormat(AvroContainerOutputFormat.class.getName()) @TO@ ExpressionStatement@@MethodInvocation:sd.setOutputFormat(AvroContainerOutputFormat.class.getName()) @AT@ 5918 @LENGTH@ 61
---------INS SimpleName@@Name:sd @TO@ MethodInvocation@@sd.setOutputFormat(AvroContainerOutputFormat.class.getName()) @AT@ 5918 @LENGTH@ 2
---------INS SimpleName@@MethodName:setOutputFormat:[AvroContainerOutputFormat.class.getName()] @TO@ MethodInvocation@@sd.setOutputFormat(AvroContainerOutputFormat.class.getName()) @AT@ 5921 @LENGTH@ 58
------------INS MethodInvocation@@AvroContainerOutputFormat.class.getName() @TO@ SimpleName@@MethodName:setOutputFormat:[AvroContainerOutputFormat.class.getName()] @AT@ 5937 @LENGTH@ 41
---------------INS TypeLiteral@@AvroContainerOutputFormat.class @TO@ MethodInvocation@@AvroContainerOutputFormat.class.getName() @AT@ 5937 @LENGTH@ 31
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@AvroContainerOutputFormat.class.getName() @AT@ 5969 @LENGTH@ 9


INS MethodDeclaration@@public, voidMethodName:HttpComponent,  @TO@ TypeDeclaration@@[public]HttpComponent, HeaderFilterStrategyComponent @AT@ 3269 @LENGTH@ 65
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:HttpComponent,  @AT@ 3269 @LENGTH@ 6
---INS SimpleName@@MethodName:HttpComponent @TO@ MethodDeclaration@@public, voidMethodName:HttpComponent,  @AT@ 3276 @LENGTH@ 13
---INS SuperConstructorInvocation@@super(HttpEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:HttpComponent,  @AT@ 3302 @LENGTH@ 26
------INS TypeLiteral@@HttpEndpoint.class @TO@ SuperConstructorInvocation@@super(HttpEndpoint.class);
 @AT@ 3308 @LENGTH@ 18


DEL MethodDeclaration@@public, void, MethodName:testComponentDocumentation, Exception,  @AT@ 2197 @LENGTH@ 292
---DEL Modifier@@public @AT@ 2197 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2204 @LENGTH@ 4
---DEL SimpleName@@MethodName:testComponentDocumentation @AT@ 2209 @LENGTH@ 26
---DEL SimpleType@@Exception @AT@ 2245 @LENGTH@ 9
---DEL VariableDeclarationStatement@@CamelContext context=new DefaultCamelContext(); @AT@ 2265 @LENGTH@ 49
------DEL SimpleType@@CamelContext @AT@ 2265 @LENGTH@ 12
------DEL VariableDeclarationFragment@@context=new DefaultCamelContext() @AT@ 2278 @LENGTH@ 35
---------DEL SimpleName@@context @AT@ 2278 @LENGTH@ 7
---------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 2288 @LENGTH@ 25
------------DEL New@@new @AT@ 2288 @LENGTH@ 3
------------DEL SimpleType@@DefaultCamelContext @AT@ 2292 @LENGTH@ 19
---DEL VariableDeclarationStatement@@String html=context.getComponentDocumentation("sap-srfc-destination"); @AT@ 2323 @LENGTH@ 72
------DEL SimpleType@@String @AT@ 2323 @LENGTH@ 6
------DEL VariableDeclarationFragment@@html=context.getComponentDocumentation("sap-srfc-destination") @AT@ 2330 @LENGTH@ 64
---------DEL SimpleName@@html @AT@ 2330 @LENGTH@ 4
---------DEL MethodInvocation@@context.getComponentDocumentation("sap-srfc-destination") @AT@ 2337 @LENGTH@ 57
------------DEL SimpleName@@Name:context @AT@ 2337 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponentDocumentation:["sap-srfc-destination"] @AT@ 2345 @LENGTH@ 49
---------------DEL StringLiteral@@"sap-srfc-destination" @AT@ 2371 @LENGTH@ 22
---DEL ExpressionStatement@@MethodInvocation:assertNotNull("Should have found some auto-generated HTML if on Java 7",html) @AT@ 2404 @LENGTH@ 79
------DEL MethodInvocation@@assertNotNull("Should have found some auto-generated HTML if on Java 7",html) @AT@ 2404 @LENGTH@ 78
---------DEL SimpleName@@MethodName:assertNotNull:["Should have found some auto-generated HTML if on Java 7", html] @AT@ 2404 @LENGTH@ 78
------------DEL StringLiteral@@"Should have found some auto-generated HTML if on Java 7" @AT@ 2418 @LENGTH@ 57
------------DEL SimpleName@@html @AT@ 2477 @LENGTH@ 4


UPD SwitchStatement@@switch (key.getType()) {case ACTION:  compositeOrSimpleKey=getActionCompositeLookupKey(map);if (map.getAction() != null) {  simpleKey=map.getAction().toString();}break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);if (map.getTo() != null) {simpleKey=map.getTo().toString();}break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");} @TO@ switch (key.getType()) {case ACTION:  if (map.getAction() != null) {    simpleKey=map.getAction().toString();  }break;case TO:if (map.getTo() != null) {simpleKey=map.getTo().toString();}break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");} @AT@ 2915 @LENGTH@ 905


UPD TypeDeclaration@@[public]HdfsEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="hdfs2",consumerClass=HdfsConsumer.class), public]HdfsEndpoint, DefaultEndpoint @AT@ 1093 @LENGTH@ 935
---INS NormalAnnotation@@@UriEndpoint(scheme="hdfs2",consumerClass=HdfsConsumer.class) @TO@ TypeDeclaration@@[public]HdfsEndpoint, DefaultEndpoint @AT@ 1172 @LENGTH@ 66


UPD MethodDeclaration@@public, List<Class[]>, MethodName:listAllTypeConvertersFromTo,  @TO@ public, List<Class<?>[]>, MethodName:listAllTypeConvertersFromTo,  @AT@ 20693 @LENGTH@ 308
---UPD ParameterizedType@@List<Class[]> @TO@ List<Class<?>[]> @AT@ 20700 @LENGTH@ 13
------UPD ArrayType@@Class[] @TO@ Class<?>[] @AT@ 20705 @LENGTH@ 7
---------DEL SimpleType@@Class @AT@ 20705 @LENGTH@ 5
---------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class[] @AT@ 20705 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 20705 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 20711 @LENGTH@ 1
---UPD VariableDeclarationStatement@@List<Class[]> answer=new ArrayList<Class[]>(typeMappings.size()); @TO@ List<Class<?>[]> answer=new ArrayList<Class<?>[]>(typeMappings.size()); @AT@ 20754 @LENGTH@ 67
------UPD ParameterizedType@@List<Class[]> @TO@ List<Class<?>[]> @AT@ 20754 @LENGTH@ 13
---------UPD ArrayType@@Class[] @TO@ Class<?>[] @AT@ 20759 @LENGTH@ 7
------------DEL SimpleType@@Class @AT@ 20759 @LENGTH@ 5
------------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class[] @AT@ 20762 @LENGTH@ 8
---------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 20762 @LENGTH@ 5
---------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 20768 @LENGTH@ 1
------UPD VariableDeclarationFragment@@answer=new ArrayList<Class[]>(typeMappings.size()) @TO@ answer=new ArrayList<Class<?>[]>(typeMappings.size()) @AT@ 20768 @LENGTH@ 52
---------UPD ClassInstanceCreation@@ArrayList<Class[]>[typeMappings.size()] @TO@ ArrayList<Class<?>[]>[typeMappings.size()] @AT@ 20777 @LENGTH@ 43
------------UPD ParameterizedType@@ArrayList<Class[]> @TO@ ArrayList<Class<?>[]> @AT@ 20781 @LENGTH@ 18
---------------UPD ArrayType@@Class[] @TO@ Class<?>[] @AT@ 20791 @LENGTH@ 7
------------------DEL SimpleType@@Class @AT@ 20791 @LENGTH@ 5
------------------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class[] @AT@ 20797 @LENGTH@ 8
---------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 20797 @LENGTH@ 5
---------------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 20803 @LENGTH@ 1
---UPD EnhancedForStatement@@for (TypeMapping mapping : typeMappings.keySet()) {  answer.add(new Class[]{mapping.getFromType(),mapping.getToType()});} @TO@ for (TypeMapping mapping : typeMappings.keySet()) {  answer.add(new Class<?>[]{mapping.getFromType(),mapping.getToType()});} @AT@ 20830 @LENGTH@ 142
------UPD ExpressionStatement@@MethodInvocation:answer.add(new Class[]{mapping.getFromType(),mapping.getToType()}) @TO@ MethodInvocation:answer.add(new Class<?>[]{mapping.getFromType(),mapping.getToType()}) @AT@ 20894 @LENGTH@ 68
---------UPD MethodInvocation@@answer.add(new Class[]{mapping.getFromType(),mapping.getToType()}) @TO@ answer.add(new Class<?>[]{mapping.getFromType(),mapping.getToType()}) @AT@ 20894 @LENGTH@ 67
------------UPD SimpleName@@MethodName:add:[new Class[]{mapping.getFromType(),mapping.getToType()}] @TO@ MethodName:add:[new Class<?>[]{mapping.getFromType(),mapping.getToType()}] @AT@ 20901 @LENGTH@ 60
---------------UPD ArrayCreation@@new Class[]{mapping.getFromType(),mapping.getToType()} @TO@ new Class<?>[]{mapping.getFromType(),mapping.getToType()} @AT@ 20905 @LENGTH@ 55
------------------UPD ArrayType@@Class[] @TO@ Class<?>[] @AT@ 20909 @LENGTH@ 7
---------------------DEL SimpleType@@Class @AT@ 20909 @LENGTH@ 5
---------------------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class[] @AT@ 20918 @LENGTH@ 8
------------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 20918 @LENGTH@ 5
------------------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 20924 @LENGTH@ 1


DEL MethodDeclaration@@public, void, MethodName:testComponentDocumentation, Exception,  @AT@ 2006 @LENGTH@ 321
---DEL Modifier@@public @AT@ 2006 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2013 @LENGTH@ 4
---DEL SimpleName@@MethodName:testComponentDocumentation @AT@ 2018 @LENGTH@ 26
---DEL SimpleType@@Exception @AT@ 2054 @LENGTH@ 9
---DEL VariableDeclarationStatement@@CamelContext context=new DefaultCamelContext(); @AT@ 2074 @LENGTH@ 49
------DEL SimpleType@@CamelContext @AT@ 2074 @LENGTH@ 12
------DEL VariableDeclarationFragment@@context=new DefaultCamelContext() @AT@ 2087 @LENGTH@ 35
---------DEL SimpleName@@context @AT@ 2087 @LENGTH@ 7
---------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 2097 @LENGTH@ 25
------------DEL New@@new @AT@ 2097 @LENGTH@ 3
------------DEL SimpleType@@DefaultCamelContext @AT@ 2101 @LENGTH@ 19
---DEL VariableDeclarationStatement@@String html=context.getComponentDocumentation("sap-srfc-server"); @AT@ 2132 @LENGTH@ 67
------DEL SimpleType@@String @AT@ 2132 @LENGTH@ 6
------DEL VariableDeclarationFragment@@html=context.getComponentDocumentation("sap-srfc-server") @AT@ 2139 @LENGTH@ 59
---------DEL SimpleName@@html @AT@ 2139 @LENGTH@ 4
---------DEL MethodInvocation@@context.getComponentDocumentation("sap-srfc-server") @AT@ 2146 @LENGTH@ 52
------------DEL SimpleName@@Name:context @AT@ 2146 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponentDocumentation:["sap-srfc-server"] @AT@ 2154 @LENGTH@ 44
---------------DEL StringLiteral@@"sap-srfc-server" @AT@ 2180 @LENGTH@ 17
---DEL ExpressionStatement@@MethodInvocation:assertNotNull("Should have found some auto-generated HTML if on Java 7",html) @AT@ 2208 @LENGTH@ 79
------DEL MethodInvocation@@assertNotNull("Should have found some auto-generated HTML if on Java 7",html) @AT@ 2208 @LENGTH@ 78
---------DEL SimpleName@@MethodName:assertNotNull:["Should have found some auto-generated HTML if on Java 7", html] @AT@ 2208 @LENGTH@ 78
------------DEL StringLiteral@@"Should have found some auto-generated HTML if on Java 7" @AT@ 2222 @LENGTH@ 57
------------DEL SimpleName@@html @AT@ 2281 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:System.out.println(html) @AT@ 2296 @LENGTH@ 25
------DEL MethodInvocation@@System.out.println(html) @AT@ 2296 @LENGTH@ 24
---------DEL QualifiedName@@Name:System.out @AT@ 2296 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:[html] @AT@ 2307 @LENGTH@ 13
------------DEL SimpleName@@html @AT@ 2315 @LENGTH@ 4


DEL FieldDeclaration@@private, List<ColStatistics>, [m_hiveColStat] @AT@ 885 @LENGTH@ 42
---DEL Modifier@@private @AT@ 885 @LENGTH@ 7
---DEL ParameterizedType@@List<ColStatistics> @AT@ 893 @LENGTH@ 19
------DEL SimpleType@@List @AT@ 893 @LENGTH@ 4
------DEL SimpleType@@ColStatistics @AT@ 898 @LENGTH@ 13
---DEL VariableDeclarationFragment@@m_hiveColStat @AT@ 913 @LENGTH@ 13
------DEL SimpleName@@m_hiveColStat @AT@ 913 @LENGTH@ 13


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[public]GeoPage, PageImpl<GeoResult<T>> @AT@ 2572 @LENGTH@ 106
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2572 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2579 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2583 @LENGTH@ 8
---INS ReturnStatement@@InfixExpression:super.hashCode() + ObjectUtils.nullSafeHashCode(this.averageDistance) @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2598 @LENGTH@ 77
------INS InfixExpression@@super.hashCode() + ObjectUtils.nullSafeHashCode(this.averageDistance) @TO@ ReturnStatement@@InfixExpression:super.hashCode() + ObjectUtils.nullSafeHashCode(this.averageDistance) @AT@ 2605 @LENGTH@ 69
---------INS SuperMethodInvocation@@super.hashCode() @TO@ InfixExpression@@super.hashCode() + ObjectUtils.nullSafeHashCode(this.averageDistance) @AT@ 2605 @LENGTH@ 16
------------INS SimpleName@@MethodName:hashCode:[] @TO@ SuperMethodInvocation@@super.hashCode() @AT@ 2611 @LENGTH@ 8
---------INS Operator@@+ @TO@ InfixExpression@@super.hashCode() + ObjectUtils.nullSafeHashCode(this.averageDistance) @AT@ 2621 @LENGTH@ 1
---------INS MethodInvocation@@ObjectUtils.nullSafeHashCode(this.averageDistance) @TO@ InfixExpression@@super.hashCode() + ObjectUtils.nullSafeHashCode(this.averageDistance) @AT@ 2624 @LENGTH@ 50
------------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.nullSafeHashCode(this.averageDistance) @AT@ 2624 @LENGTH@ 11
------------INS SimpleName@@MethodName:nullSafeHashCode:[this.averageDistance] @TO@ MethodInvocation@@ObjectUtils.nullSafeHashCode(this.averageDistance) @AT@ 2636 @LENGTH@ 38
---------------INS FieldAccess@@this.averageDistance @TO@ SimpleName@@MethodName:nullSafeHashCode:[this.averageDistance] @AT@ 2653 @LENGTH@ 20
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.averageDistance @AT@ 2653 @LENGTH@ 4
------------------INS SimpleName@@averageDistance @TO@ FieldAccess@@this.averageDistance @AT@ 2658 @LENGTH@ 15


UPD FieldDeclaration@@private, List<RepositoryTag>, [tags=new ArrayList<>()] @TO@ private, List<RepositoryTag>, [tags=new ArrayList<RepositoryTag>()] @AT@ 1378 @LENGTH@ 53
---UPD VariableDeclarationFragment@@tags=new ArrayList<>() @TO@ tags=new ArrayList<RepositoryTag>() @AT@ 1406 @LENGTH@ 24
------UPD ClassInstanceCreation@@ArrayList<>[] @TO@ ArrayList<RepositoryTag>[] @AT@ 1413 @LENGTH@ 17
---------UPD ParameterizedType@@ArrayList<> @TO@ ArrayList<RepositoryTag> @AT@ 1417 @LENGTH@ 11
------------INS SimpleType@@RepositoryTag @TO@ ParameterizedType@@ArrayList<> @AT@ 1427 @LENGTH@ 13


INS MethodDeclaration@@public, voidMethodName:GTaskComponent,  @TO@ TypeDeclaration@@[public]GTaskComponent, ServletComponent @AT@ 2067 @LENGTH@ 67
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:GTaskComponent,  @AT@ 2067 @LENGTH@ 6
---INS SimpleName@@MethodName:GTaskComponent @TO@ MethodDeclaration@@public, voidMethodName:GTaskComponent,  @AT@ 2074 @LENGTH@ 14
---INS SuperConstructorInvocation@@super(GTaskEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:GTaskComponent,  @AT@ 2101 @LENGTH@ 27
------INS TypeLiteral@@GTaskEndpoint.class @TO@ SuperConstructorInvocation@@super(GTaskEndpoint.class);
 @AT@ 2107 @LENGTH@ 19


INS FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(LettuceConverters.exceptionConverter())] @TO@ TypeDeclaration@@[public]LettuceConnection, [RedisConnection] @AT@ 4590 @LENGTH@ 159
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(LettuceConverters.exceptionConverter())] @AT@ 4590 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(LettuceConverters.exceptionConverter())] @AT@ 4598 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(LettuceConverters.exceptionConverter())] @AT@ 4605 @LENGTH@ 5
---INS SimpleType@@ExceptionTranslationStrategy @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(LettuceConverters.exceptionConverter())] @AT@ 4611 @LENGTH@ 28
---INS VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(LettuceConverters.exceptionConverter()) @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(LettuceConverters.exceptionConverter())] @AT@ 4640 @LENGTH@ 108
------INS SimpleName@@EXCEPTION_TRANSLATION @TO@ VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(LettuceConverters.exceptionConverter()) @AT@ 4640 @LENGTH@ 21
------INS ClassInstanceCreation@@FallbackExceptionTranslationStrategy[LettuceConverters.exceptionConverter()] @TO@ VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(LettuceConverters.exceptionConverter()) @AT@ 4664 @LENGTH@ 84
---------INS New@@new @TO@ ClassInstanceCreation@@FallbackExceptionTranslationStrategy[LettuceConverters.exceptionConverter()] @AT@ 4664 @LENGTH@ 3
---------INS SimpleType@@FallbackExceptionTranslationStrategy @TO@ ClassInstanceCreation@@FallbackExceptionTranslationStrategy[LettuceConverters.exceptionConverter()] @AT@ 4668 @LENGTH@ 36
---------INS MethodInvocation@@LettuceConverters.exceptionConverter() @TO@ ClassInstanceCreation@@FallbackExceptionTranslationStrategy[LettuceConverters.exceptionConverter()] @AT@ 4709 @LENGTH@ 38
------------INS SimpleName@@Name:LettuceConverters @TO@ MethodInvocation@@LettuceConverters.exceptionConverter() @AT@ 4709 @LENGTH@ 17
------------INS SimpleName@@MethodName:exceptionConverter:[] @TO@ MethodInvocation@@LettuceConverters.exceptionConverter() @AT@ 4727 @LENGTH@ 20


UPD FieldDeclaration@@private, Privacy, [value] @TO@ private, PrivacyType, [value] @AT@ 3248 @LENGTH@ 22
---UPD SimpleType@@Privacy @TO@ PrivacyType @AT@ 3256 @LENGTH@ 7


UPD Block@@ThenBody:{  return new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf);} @TO@ ThenBody:{  final OAuth2AuthenticationService<A> authService=new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf);  authService.setDefaultScope(((OAuth2ConnectionFactory<A>)cf).getScope());  return authService;} @AT@ 2356 @LENGTH@ 84
---INS VariableDeclarationStatement@@final OAuth2AuthenticationService<A> authService=new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf); @TO@ Block@@ThenBody:{  return new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf);} @AT@ 2361 @LENGTH@ 119
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final OAuth2AuthenticationService<A> authService=new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf); @AT@ 2361 @LENGTH@ 5
------INS ParameterizedType@@OAuth2AuthenticationService<A> @TO@ VariableDeclarationStatement@@final OAuth2AuthenticationService<A> authService=new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf); @AT@ 2367 @LENGTH@ 30
---------INS SimpleType@@OAuth2AuthenticationService @TO@ ParameterizedType@@OAuth2AuthenticationService<A> @AT@ 2367 @LENGTH@ 27
---------INS SimpleType@@A @TO@ ParameterizedType@@OAuth2AuthenticationService<A> @AT@ 2395 @LENGTH@ 1
------INS VariableDeclarationFragment@@authService=new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf) @TO@ VariableDeclarationStatement@@final OAuth2AuthenticationService<A> authService=new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf); @AT@ 2398 @LENGTH@ 81
---------MOV ClassInstanceCreation@@OAuth2AuthenticationService<A>[(OAuth2ConnectionFactory<A>)cf] @TO@ VariableDeclarationFragment@@authService=new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf) @AT@ 2368 @LENGTH@ 67
---------MOV ClassInstanceCreation@@OAuth2AuthenticationService<A>[(OAuth2ConnectionFactory<A>)cf] @TO@ VariableDeclarationFragment@@authService=new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf) @AT@ 2368 @LENGTH@ 67
---------INS SimpleName@@authService @TO@ VariableDeclarationFragment@@authService=new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf) @AT@ 2398 @LENGTH@ 11
---UPD ReturnStatement@@ClassInstanceCreation:new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf) @TO@ SimpleName:authService @AT@ 2361 @LENGTH@ 75
------INS SimpleName@@authService @TO@ ReturnStatement@@ClassInstanceCreation:new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf) @AT@ 2569 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:authService.setDefaultScope(((OAuth2ConnectionFactory<A>)cf).getScope()) @TO@ Block@@ThenBody:{  return new OAuth2AuthenticationService<A>((OAuth2ConnectionFactory<A>)cf);} @AT@ 2484 @LENGTH@ 74
------INS MethodInvocation@@authService.setDefaultScope(((OAuth2ConnectionFactory<A>)cf).getScope()) @TO@ ExpressionStatement@@MethodInvocation:authService.setDefaultScope(((OAuth2ConnectionFactory<A>)cf).getScope()) @AT@ 2484 @LENGTH@ 73
---------INS SimpleName@@Name:authService @TO@ MethodInvocation@@authService.setDefaultScope(((OAuth2ConnectionFactory<A>)cf).getScope()) @AT@ 2484 @LENGTH@ 11
---------INS SimpleName@@MethodName:setDefaultScope:[((OAuth2ConnectionFactory<A>)cf).getScope()] @TO@ MethodInvocation@@authService.setDefaultScope(((OAuth2ConnectionFactory<A>)cf).getScope()) @AT@ 2496 @LENGTH@ 61
------------INS MethodInvocation@@((OAuth2ConnectionFactory<A>)cf).getScope() @TO@ SimpleName@@MethodName:setDefaultScope:[((OAuth2ConnectionFactory<A>)cf).getScope()] @AT@ 2512 @LENGTH@ 44
---------------INS ParenthesizedExpression@@((OAuth2ConnectionFactory<A>)cf) @TO@ MethodInvocation@@((OAuth2ConnectionFactory<A>)cf).getScope() @AT@ 2512 @LENGTH@ 33
------------------INS CastExpression@@(OAuth2ConnectionFactory<A>)cf @TO@ ParenthesizedExpression@@((OAuth2ConnectionFactory<A>)cf) @AT@ 2513 @LENGTH@ 31
---------------------INS ParameterizedType@@OAuth2ConnectionFactory<A> @TO@ CastExpression@@(OAuth2ConnectionFactory<A>)cf @AT@ 2514 @LENGTH@ 26
------------------------INS SimpleType@@OAuth2ConnectionFactory @TO@ ParameterizedType@@OAuth2ConnectionFactory<A> @AT@ 2514 @LENGTH@ 23
------------------------INS SimpleType@@A @TO@ ParameterizedType@@OAuth2ConnectionFactory<A> @AT@ 2538 @LENGTH@ 1
---------------------INS SimpleName@@cf @TO@ CastExpression@@(OAuth2ConnectionFactory<A>)cf @AT@ 2542 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getScope:[] @TO@ MethodInvocation@@((OAuth2ConnectionFactory<A>)cf).getScope() @AT@ 2546 @LENGTH@ 10


UPD Block@@ElseBody:if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @TO@ ElseBody:if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} else if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44503 @LENGTH@ 251
---UPD IfStatement@@if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @TO@ if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} else if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44503 @LENGTH@ 251
------INS Block@@ElseBody:if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @TO@ IfStatement@@if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @AT@ 44760 @LENGTH@ 104
---------INS IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @TO@ Block@@ElseBody:if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44760 @LENGTH@ 104
------------INS MethodInvocation@@"atmosphere-websocket".equals(componentName) @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44764 @LENGTH@ 44
---------------INS StringLiteral@@"atmosphere-websocket" @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44764 @LENGTH@ 22
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44787 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44794 @LENGTH@ 13
------------INS Block@@ThenBody:{  return "atmosphere/websocket";} @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44810 @LENGTH@ 54
---------------INS ReturnStatement@@StringLiteral:"atmosphere/websocket" @TO@ Block@@ThenBody:{  return "atmosphere/websocket";} @AT@ 44824 @LENGTH@ 30
------------------INS StringLiteral@@"atmosphere/websocket" @TO@ ReturnStatement@@StringLiteral:"atmosphere/websocket" @AT@ 44831 @LENGTH@ 22
---------INS IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @TO@ Block@@ElseBody:if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44760 @LENGTH@ 104
------------INS MethodInvocation@@"atmosphere-websocket".equals(componentName) @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44764 @LENGTH@ 44
---------------INS StringLiteral@@"atmosphere-websocket" @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44764 @LENGTH@ 22
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44787 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44794 @LENGTH@ 13
------------INS Block@@ThenBody:{  return "atmosphere/websocket";} @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44810 @LENGTH@ 54
---------------INS ReturnStatement@@StringLiteral:"atmosphere/websocket" @TO@ Block@@ThenBody:{  return "atmosphere/websocket";} @AT@ 44824 @LENGTH@ 30
------------------INS StringLiteral@@"atmosphere/websocket" @TO@ ReturnStatement@@StringLiteral:"atmosphere/websocket" @AT@ 44831 @LENGTH@ 22
---------INS IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @TO@ Block@@ElseBody:if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44760 @LENGTH@ 104
------------INS MethodInvocation@@"atmosphere-websocket".equals(componentName) @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44764 @LENGTH@ 44
---------------INS StringLiteral@@"atmosphere-websocket" @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44764 @LENGTH@ 22
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44787 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44794 @LENGTH@ 13
------------INS Block@@ThenBody:{  return "atmosphere/websocket";} @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44810 @LENGTH@ 54
---------------INS ReturnStatement@@StringLiteral:"atmosphere/websocket" @TO@ Block@@ThenBody:{  return "atmosphere/websocket";} @AT@ 44824 @LENGTH@ 30
------------------INS StringLiteral@@"atmosphere/websocket" @TO@ ReturnStatement@@StringLiteral:"atmosphere/websocket" @AT@ 44831 @LENGTH@ 22
---------INS IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @TO@ Block@@ElseBody:if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44760 @LENGTH@ 104
------------INS MethodInvocation@@"atmosphere-websocket".equals(componentName) @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44764 @LENGTH@ 44
---------------INS StringLiteral@@"atmosphere-websocket" @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44764 @LENGTH@ 22
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44787 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44794 @LENGTH@ 13
------------INS Block@@ThenBody:{  return "atmosphere/websocket";} @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44810 @LENGTH@ 54
---------------INS ReturnStatement@@StringLiteral:"atmosphere/websocket" @TO@ Block@@ThenBody:{  return "atmosphere/websocket";} @AT@ 44824 @LENGTH@ 30
------------------INS StringLiteral@@"atmosphere/websocket" @TO@ ReturnStatement@@StringLiteral:"atmosphere/websocket" @AT@ 44831 @LENGTH@ 22
---------INS IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @TO@ Block@@ElseBody:if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44760 @LENGTH@ 104
------------INS MethodInvocation@@"atmosphere-websocket".equals(componentName) @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44764 @LENGTH@ 44
---------------INS StringLiteral@@"atmosphere-websocket" @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44764 @LENGTH@ 22
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44787 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44794 @LENGTH@ 13
------------INS Block@@ThenBody:{  return "atmosphere/websocket";} @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44810 @LENGTH@ 54
---------------INS ReturnStatement@@StringLiteral:"atmosphere/websocket" @TO@ Block@@ThenBody:{  return "atmosphere/websocket";} @AT@ 44824 @LENGTH@ 30
------------------INS StringLiteral@@"atmosphere/websocket" @TO@ ReturnStatement@@StringLiteral:"atmosphere/websocket" @AT@ 44831 @LENGTH@ 22
---UPD IfStatement@@if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @TO@ if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} else if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44503 @LENGTH@ 251
------INS Block@@ElseBody:if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @TO@ IfStatement@@if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @AT@ 44760 @LENGTH@ 104
---------INS IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @TO@ Block@@ElseBody:if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44760 @LENGTH@ 104
------------INS MethodInvocation@@"atmosphere-websocket".equals(componentName) @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44764 @LENGTH@ 44
---------------INS StringLiteral@@"atmosphere-websocket" @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44764 @LENGTH@ 22
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44787 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44794 @LENGTH@ 13
------------INS Block@@ThenBody:{  return "atmosphere/websocket";} @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44810 @LENGTH@ 54
---------------INS ReturnStatement@@StringLiteral:"atmosphere/websocket" @TO@ Block@@ThenBody:{  return "atmosphere/websocket";} @AT@ 44824 @LENGTH@ 30
------------------INS StringLiteral@@"atmosphere/websocket" @TO@ ReturnStatement@@StringLiteral:"atmosphere/websocket" @AT@ 44831 @LENGTH@ 22
---------INS IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @TO@ Block@@ElseBody:if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44760 @LENGTH@ 104
------------INS MethodInvocation@@"atmosphere-websocket".equals(componentName) @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44764 @LENGTH@ 44
---------------INS StringLiteral@@"atmosphere-websocket" @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44764 @LENGTH@ 22
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44787 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44794 @LENGTH@ 13
------------INS Block@@ThenBody:{  return "atmosphere/websocket";} @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44810 @LENGTH@ 54
---------------INS ReturnStatement@@StringLiteral:"atmosphere/websocket" @TO@ Block@@ThenBody:{  return "atmosphere/websocket";} @AT@ 44824 @LENGTH@ 30
------------------INS StringLiteral@@"atmosphere/websocket" @TO@ ReturnStatement@@StringLiteral:"atmosphere/websocket" @AT@ 44831 @LENGTH@ 22
---------INS IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @TO@ Block@@ElseBody:if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44760 @LENGTH@ 104
------------INS MethodInvocation@@"atmosphere-websocket".equals(componentName) @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44764 @LENGTH@ 44
---------------INS StringLiteral@@"atmosphere-websocket" @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44764 @LENGTH@ 22
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44787 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44794 @LENGTH@ 13
------------INS Block@@ThenBody:{  return "atmosphere/websocket";} @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44810 @LENGTH@ 54
---------------INS ReturnStatement@@StringLiteral:"atmosphere/websocket" @TO@ Block@@ThenBody:{  return "atmosphere/websocket";} @AT@ 44824 @LENGTH@ 30
------------------INS StringLiteral@@"atmosphere/websocket" @TO@ ReturnStatement@@StringLiteral:"atmosphere/websocket" @AT@ 44831 @LENGTH@ 22
---------INS IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @TO@ Block@@ElseBody:if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44760 @LENGTH@ 104
------------INS MethodInvocation@@"atmosphere-websocket".equals(componentName) @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44764 @LENGTH@ 44
---------------INS StringLiteral@@"atmosphere-websocket" @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44764 @LENGTH@ 22
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44787 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44794 @LENGTH@ 13
------------INS Block@@ThenBody:{  return "atmosphere/websocket";} @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44810 @LENGTH@ 54
---------------INS ReturnStatement@@StringLiteral:"atmosphere/websocket" @TO@ Block@@ThenBody:{  return "atmosphere/websocket";} @AT@ 44824 @LENGTH@ 30
------------------INS StringLiteral@@"atmosphere/websocket" @TO@ ReturnStatement@@StringLiteral:"atmosphere/websocket" @AT@ 44831 @LENGTH@ 22
---------INS IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @TO@ Block@@ElseBody:if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44760 @LENGTH@ 104
------------INS MethodInvocation@@"atmosphere-websocket".equals(componentName) @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44764 @LENGTH@ 44
---------------INS StringLiteral@@"atmosphere-websocket" @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44764 @LENGTH@ 22
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"atmosphere-websocket".equals(componentName) @AT@ 44787 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44794 @LENGTH@ 13
------------INS Block@@ThenBody:{  return "atmosphere/websocket";} @TO@ IfStatement@@if ("atmosphere-websocket".equals(componentName)) {  return "atmosphere/websocket";} @AT@ 44810 @LENGTH@ 54
---------------INS ReturnStatement@@StringLiteral:"atmosphere/websocket" @TO@ Block@@ThenBody:{  return "atmosphere/websocket";} @AT@ 44824 @LENGTH@ 30
------------------INS StringLiteral@@"atmosphere/websocket" @TO@ ReturnStatement@@StringLiteral:"atmosphere/websocket" @AT@ 44831 @LENGTH@ 22


INS IfStatement@@if (!StringUtils.hasText(this.key)) {  if (not) {    return new BasicDBObject("$not",dbo);  }  return dbo;} @TO@ MethodDeclaration@@protected, DBObject, MethodName:getSingleCriteriaObject,  @AT@ 14568 @LENGTH@ 118
---INS PrefixExpression@@!StringUtils.hasText(this.key) @TO@ IfStatement@@if (!StringUtils.hasText(this.key)) {  if (not) {    return new BasicDBObject("$not",dbo);  }  return dbo;} @AT@ 14572 @LENGTH@ 30
------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.hasText(this.key) @AT@ 14572 @LENGTH@ 1
------INS MethodInvocation@@StringUtils.hasText(this.key) @TO@ PrefixExpression@@!StringUtils.hasText(this.key) @AT@ 14573 @LENGTH@ 29
---------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(this.key) @AT@ 14573 @LENGTH@ 11
---------INS SimpleName@@MethodName:hasText:[this.key] @TO@ MethodInvocation@@StringUtils.hasText(this.key) @AT@ 14585 @LENGTH@ 17
------------INS FieldAccess@@this.key @TO@ SimpleName@@MethodName:hasText:[this.key] @AT@ 14593 @LENGTH@ 8
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.key @AT@ 14593 @LENGTH@ 4
---------------INS SimpleName@@key @TO@ FieldAccess@@this.key @AT@ 14598 @LENGTH@ 3
---INS Block@@ThenBody:{  if (not) {    return new BasicDBObject("$not",dbo);  }  return dbo;} @TO@ IfStatement@@if (!StringUtils.hasText(this.key)) {  if (not) {    return new BasicDBObject("$not",dbo);  }  return dbo;} @AT@ 14604 @LENGTH@ 82
------INS IfStatement@@if (not) {  return new BasicDBObject("$not",dbo);} @TO@ Block@@ThenBody:{  if (not) {    return new BasicDBObject("$not",dbo);  }  return dbo;} @AT@ 14609 @LENGTH@ 58
---------INS SimpleName@@not @TO@ IfStatement@@if (not) {  return new BasicDBObject("$not",dbo);} @AT@ 14613 @LENGTH@ 3
---------INS Block@@ThenBody:{  return new BasicDBObject("$not",dbo);} @TO@ IfStatement@@if (not) {  return new BasicDBObject("$not",dbo);} @AT@ 14618 @LENGTH@ 49
------------INS ReturnStatement@@ClassInstanceCreation:new BasicDBObject("$not",dbo) @TO@ Block@@ThenBody:{  return new BasicDBObject("$not",dbo);} @AT@ 14624 @LENGTH@ 38
---------------INS ClassInstanceCreation@@BasicDBObject["$not", dbo] @TO@ ReturnStatement@@ClassInstanceCreation:new BasicDBObject("$not",dbo) @AT@ 14631 @LENGTH@ 30
------------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject["$not", dbo] @AT@ 14631 @LENGTH@ 3
------------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject["$not", dbo] @AT@ 14635 @LENGTH@ 13
------------------INS StringLiteral@@"$not" @TO@ ClassInstanceCreation@@BasicDBObject["$not", dbo] @AT@ 14649 @LENGTH@ 6
------------------INS SimpleName@@dbo @TO@ ClassInstanceCreation@@BasicDBObject["$not", dbo] @AT@ 14657 @LENGTH@ 3
------INS ReturnStatement@@SimpleName:dbo @TO@ Block@@ThenBody:{  if (not) {    return new BasicDBObject("$not",dbo);  }  return dbo;} @AT@ 14671 @LENGTH@ 11
---------INS SimpleName@@dbo @TO@ ReturnStatement@@SimpleName:dbo @AT@ 14678 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:client.getConnectionManager().shutdown() @TO@ MethodInvocation:HttpClientUtils.closeQuietly(client) @AT@ 6493 @LENGTH@ 41
---UPD MethodInvocation@@client.getConnectionManager().shutdown() @TO@ HttpClientUtils.closeQuietly(client) @AT@ 6493 @LENGTH@ 40
------DEL MethodInvocation@@MethodName:getConnectionManager:[] @AT@ 6493 @LENGTH@ 29
------UPD SimpleName@@Name:client @TO@ Name:HttpClientUtils @AT@ 6493 @LENGTH@ 6
------UPD SimpleName@@MethodName:shutdown:[] @TO@ MethodName:closeQuietly:[client] @AT@ 6523 @LENGTH@ 10
---------INS SimpleName@@client @TO@ SimpleName@@MethodName:shutdown:[] @AT@ 6468 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:oauthAuthenticationManager.setClientDetailsService(clientDetails()) @TO@ MethodDeclaration@@private, AuthenticationManager, MethodName:oauthAuthenticationManager, HttpSecurity http,  @AT@ 7107 @LENGTH@ 68
---INS MethodInvocation@@oauthAuthenticationManager.setClientDetailsService(clientDetails()) @TO@ ExpressionStatement@@MethodInvocation:oauthAuthenticationManager.setClientDetailsService(clientDetails()) @AT@ 7107 @LENGTH@ 67
------INS SimpleName@@Name:oauthAuthenticationManager @TO@ MethodInvocation@@oauthAuthenticationManager.setClientDetailsService(clientDetails()) @AT@ 7107 @LENGTH@ 26
------INS SimpleName@@MethodName:setClientDetailsService:[clientDetails()] @TO@ MethodInvocation@@oauthAuthenticationManager.setClientDetailsService(clientDetails()) @AT@ 7134 @LENGTH@ 40
---------INS MethodInvocation@@MethodName:clientDetails:[] @TO@ SimpleName@@MethodName:setClientDetailsService:[clientDetails()] @AT@ 7158 @LENGTH@ 15


UPD MethodDeclaration@@public, synchronized, void, MethodName:stop, final StopContext context,  @TO@ public, void, MethodName:stop, final StopContext context,  @AT@ 2732 @LENGTH@ 454
---DEL Modifier@@synchronized @AT@ 2739 @LENGTH@ 12
---UPD VariableDeclarationStatement@@final ManagedJBossThreadPoolExecutorService executor=getValue(); @TO@ final ManagedJBossThreadPoolExecutorService executor; @AT@ 2799 @LENGTH@ 66
------UPD VariableDeclarationFragment@@executor=getValue() @TO@ executor @AT@ 2843 @LENGTH@ 21
---------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 2854 @LENGTH@ 10
---INS SynchronizedStatement@@synchronized (this) {  executor=this.executor;  this.executor=null;} @TO@ MethodDeclaration@@public, synchronized, void, MethodName:stop, final StopContext context,  @AT@ 2808 @LENGTH@ 103
------INS ThisExpression@@this @TO@ SynchronizedStatement@@synchronized (this) {  executor=this.executor;  this.executor=null;} @AT@ 2822 @LENGTH@ 4
------INS Block@@SyncBody:{  executor=this.executor;  this.executor=null;} @TO@ SynchronizedStatement@@synchronized (this) {  executor=this.executor;  this.executor=null;} @AT@ 2828 @LENGTH@ 83
---------INS ExpressionStatement@@Assignment:executor=this.executor @TO@ Block@@SyncBody:{  executor=this.executor;  this.executor=null;} @AT@ 2842 @LENGTH@ 25
------------INS Assignment@@executor=this.executor @TO@ ExpressionStatement@@Assignment:executor=this.executor @AT@ 2842 @LENGTH@ 24
---------------INS SimpleName@@executor @TO@ Assignment@@executor=this.executor @AT@ 2842 @LENGTH@ 8
---------------INS Operator@@= @TO@ Assignment@@executor=this.executor @AT@ 2850 @LENGTH@ 1
---------------INS FieldAccess@@this.executor @TO@ Assignment@@executor=this.executor @AT@ 2853 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.executor @AT@ 2853 @LENGTH@ 4
------------------INS SimpleName@@executor @TO@ FieldAccess@@this.executor @AT@ 2858 @LENGTH@ 8
---------MOV ExpressionStatement@@Assignment:this.executor=null @TO@ Block@@SyncBody:{  executor=this.executor;  this.executor=null;} @AT@ 3159 @LENGTH@ 21
---UPD ExpressionStatement@@MethodInvocation:executor.addShutdownListener(new EventListener<StopContext>(){
  public void handleEvent(  final StopContext stopContext){
    stopContext.complete();
  }
}
,context) @TO@ MethodInvocation:executor.addShutdownListener(StopContextEventListener.getInstance(),context) @AT@ 2943 @LENGTH@ 207
------UPD MethodInvocation@@executor.addShutdownListener(new EventListener<StopContext>(){
  public void handleEvent(  final StopContext stopContext){
    stopContext.complete();
  }
}
,context) @TO@ executor.addShutdownListener(StopContextEventListener.getInstance(),context) @AT@ 2943 @LENGTH@ 206
---------UPD SimpleName@@MethodName:addShutdownListener:[new EventListener<StopContext>(){
  public void handleEvent(  final StopContext stopContext){
    stopContext.complete();
  }
}
, context] @TO@ MethodName:addShutdownListener:[StopContextEventListener.getInstance(), context] @AT@ 2952 @LENGTH@ 197
------------DEL ClassInstanceCreation@@EventListener<StopContext>[] @AT@ 2972 @LENGTH@ 167
---------------DEL New@@new @AT@ 2972 @LENGTH@ 3
---------------DEL ParameterizedType@@EventListener<StopContext> @AT@ 2976 @LENGTH@ 26
------------------DEL SimpleType@@EventListener @AT@ 2976 @LENGTH@ 13
------------------DEL SimpleType@@StopContext @AT@ 2990 @LENGTH@ 11
---------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 3005 @LENGTH@ 134
------------------DEL MethodDeclaration@@public, void, MethodName:handleEvent, final StopContext stopContext,  @AT@ 3019 @LENGTH@ 110
---------------------DEL Modifier@@public @AT@ 3019 @LENGTH@ 6
---------------------DEL PrimitiveType@@void @AT@ 3026 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:handleEvent @AT@ 3031 @LENGTH@ 11
---------------------DEL SingleVariableDeclaration@@final StopContext stopContext @AT@ 3043 @LENGTH@ 29
------------------------DEL Modifier@@final @AT@ 3043 @LENGTH@ 5
------------------------DEL SimpleType@@StopContext @AT@ 3049 @LENGTH@ 11
------------------------DEL SimpleName@@stopContext @AT@ 3061 @LENGTH@ 11
---------------------DEL ExpressionStatement@@MethodInvocation:stopContext.complete() @AT@ 3092 @LENGTH@ 23
------------------------DEL MethodInvocation@@stopContext.complete() @AT@ 3092 @LENGTH@ 22
------------INS MethodInvocation@@StopContextEventListener.getInstance() @TO@ SimpleName@@MethodName:addShutdownListener:[new EventListener<StopContext>(){
  public void handleEvent(  final StopContext stopContext){
    stopContext.complete();
  }
}
, context] @AT@ 3018 @LENGTH@ 38
---------------MOV SimpleName@@Name:stopContext @TO@ MethodInvocation@@StopContextEventListener.getInstance() @AT@ 3092 @LENGTH@ 11
---------------MOV SimpleName@@MethodName:complete:[] @TO@ MethodInvocation@@StopContextEventListener.getInstance() @AT@ 3104 @LENGTH@ 10


UPD IfStatement@@if (exchange.getPattern().isOutCapable()) {  exchange.getOut().copyFrom(exchange.getIn());  exchange.getOut().setBody(issue);} @TO@ if (exchange.getPattern().isOutCapable()) {  exchange.getOut().copyFrom(exchange.getIn());  exchange.getOut().setBody(issue);} else {  exchange.getIn().setBody(issue);} @AT@ 1913 @LENGTH@ 221
---INS Block@@ElseBody:{  exchange.getIn().setBody(issue);} @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  exchange.getOut().copyFrom(exchange.getIn());  exchange.getOut().setBody(issue);} @AT@ 2140 @LENGTH@ 56
------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(issue) @TO@ Block@@ElseBody:{  exchange.getIn().setBody(issue);} @AT@ 2154 @LENGTH@ 32
---------INS MethodInvocation@@exchange.getIn().setBody(issue) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(issue) @AT@ 2154 @LENGTH@ 31
------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody(issue) @AT@ 2154 @LENGTH@ 16
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody(issue) @AT@ 2154 @LENGTH@ 8
------------INS SimpleName@@MethodName:setBody:[issue] @TO@ MethodInvocation@@exchange.getIn().setBody(issue) @AT@ 2171 @LENGTH@ 14
---------------INS SimpleName@@issue @TO@ SimpleName@@MethodName:setBody:[issue] @AT@ 2179 @LENGTH@ 5


UPD ReturnStatement@@ConditionalExpression:path == null ? name : path.toDotPath(isAssociation() ? new AssociationConverter(getAssociation()) : getPropertyConverter()) @TO@ ConditionalExpression:path == null ? name : path.toDotPath(isAssociation() ? getAssociationConverter() : getPropertyConverter()) @AT@ 23048 @LENGTH@ 136
---UPD ConditionalExpression@@path == null ? name : path.toDotPath(isAssociation() ? new AssociationConverter(getAssociation()) : getPropertyConverter()) @TO@ path == null ? name : path.toDotPath(isAssociation() ? getAssociationConverter() : getPropertyConverter()) @AT@ 23055 @LENGTH@ 128
------UPD MethodInvocation@@path.toDotPath(isAssociation() ? new AssociationConverter(getAssociation()) : getPropertyConverter()) @TO@ path.toDotPath(isAssociation() ? getAssociationConverter() : getPropertyConverter()) @AT@ 23077 @LENGTH@ 106
---------UPD SimpleName@@MethodName:toDotPath:[isAssociation() ? new AssociationConverter(getAssociation()) : getPropertyConverter()] @TO@ MethodName:toDotPath:[isAssociation() ? getAssociationConverter() : getPropertyConverter()] @AT@ 23082 @LENGTH@ 101
------------UPD ConditionalExpression@@isAssociation() ? new AssociationConverter(getAssociation()) : getPropertyConverter() @TO@ isAssociation() ? getAssociationConverter() : getPropertyConverter() @AT@ 23092 @LENGTH@ 90
---------------DEL ClassInstanceCreation@@AssociationConverter[getAssociation()] @AT@ 23110 @LENGTH@ 42
------------------DEL New@@new @AT@ 23110 @LENGTH@ 3
------------------DEL SimpleType@@AssociationConverter @AT@ 23114 @LENGTH@ 20
------------------DEL MethodInvocation@@MethodName:getAssociation:[] @AT@ 23135 @LENGTH@ 16
---------------INS MethodInvocation@@MethodName:getAssociationConverter:[] @TO@ ConditionalExpression@@isAssociation() ? new AssociationConverter(getAssociation()) : getPropertyConverter() @AT@ 23110 @LENGTH@ 25


UPD ExpressionStatement@@Assignment:this.sortTerm=(sortTerm == null ? null : sortTerm.clone()) @TO@ Assignment:this.sortTerm=sortTerm == null ? null : sortTerm.clone() @AT@ 6734 @LENGTH@ 61
---UPD Assignment@@this.sortTerm=(sortTerm == null ? null : sortTerm.clone()) @TO@ this.sortTerm=sortTerm == null ? null : sortTerm.clone() @AT@ 6734 @LENGTH@ 60
------DEL ParenthesizedExpression@@(sortTerm == null ? null : sortTerm.clone()) @AT@ 6750 @LENGTH@ 44
------MOV ConditionalExpression@@sortTerm == null ? null : sortTerm.clone() @TO@ Assignment@@this.sortTerm=(sortTerm == null ? null : sortTerm.clone()) @AT@ 6751 @LENGTH@ 42


INS MethodDeclaration@@public, ApplicationObjectSupport, MethodName:fakeApplicationObjectSupport,  @TO@ TypeDeclaration@@[@Configuration, public, static]TestConfiguration,  @AT@ 4405 @LENGTH@ 113
---INS Modifier@@public @TO@ MethodDeclaration@@public, ApplicationObjectSupport, MethodName:fakeApplicationObjectSupport,  @AT@ 4405 @LENGTH@ 6
---INS SimpleType@@ApplicationObjectSupport @TO@ MethodDeclaration@@public, ApplicationObjectSupport, MethodName:fakeApplicationObjectSupport,  @AT@ 4412 @LENGTH@ 24
---INS SimpleName@@MethodName:fakeApplicationObjectSupport @TO@ MethodDeclaration@@public, ApplicationObjectSupport, MethodName:fakeApplicationObjectSupport,  @AT@ 4437 @LENGTH@ 28
---INS ReturnStatement@@ClassInstanceCreation:new ApplicationObjectSupport(){
}
 @TO@ MethodDeclaration@@public, ApplicationObjectSupport, MethodName:fakeApplicationObjectSupport,  @AT@ 4473 @LENGTH@ 41
------INS ClassInstanceCreation@@ApplicationObjectSupport[] @TO@ ReturnStatement@@ClassInstanceCreation:new ApplicationObjectSupport(){
}
 @AT@ 4480 @LENGTH@ 33
---------INS New@@new @TO@ ClassInstanceCreation@@ApplicationObjectSupport[] @AT@ 4480 @LENGTH@ 3
---------INS SimpleType@@ApplicationObjectSupport @TO@ ClassInstanceCreation@@ApplicationObjectSupport[] @AT@ 4484 @LENGTH@ 24
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ApplicationObjectSupport[] @AT@ 4511 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:BigDecimalPatternFormat,  @TO@ public, voidMethodName:BigDecimalPatternFormat,  @AT@ 284 @LENGTH@ 45
---DEL PrimitiveType@@void @AT@ 291 @LENGTH@ 4


UPD TypeDeclaration@@[public]MailConfiguration, [Cloneable] @TO@ [@UriParams, public]MailConfiguration, [Cloneable] @AT@ 1226 @LENGTH@ 14035
---INS MarkerAnnotation@@@UriParams @TO@ TypeDeclaration@@[public]MailConfiguration, [Cloneable] @AT@ 1303 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:registerFunction("<>",SqlStdOperatorTable.NOT_EQUALS,hToken(HiveParser.NOTEQUAL,"<>")) @TO@ MethodDeclaration@@voidMethodName:StaticBlockBuilder,  @AT@ 12645 @LENGTH@ 90
---INS MethodInvocation@@registerFunction("<>",SqlStdOperatorTable.NOT_EQUALS,hToken(HiveParser.NOTEQUAL,"<>")) @TO@ ExpressionStatement@@MethodInvocation:registerFunction("<>",SqlStdOperatorTable.NOT_EQUALS,hToken(HiveParser.NOTEQUAL,"<>")) @AT@ 12645 @LENGTH@ 89
------INS SimpleName@@MethodName:registerFunction:["<>", SqlStdOperatorTable.NOT_EQUALS, hToken(HiveParser.NOTEQUAL,"<>")] @TO@ MethodInvocation@@registerFunction("<>",SqlStdOperatorTable.NOT_EQUALS,hToken(HiveParser.NOTEQUAL,"<>")) @AT@ 12645 @LENGTH@ 89
---------INS StringLiteral@@"<>" @TO@ SimpleName@@MethodName:registerFunction:["<>", SqlStdOperatorTable.NOT_EQUALS, hToken(HiveParser.NOTEQUAL,"<>")] @AT@ 12662 @LENGTH@ 4
---------INS QualifiedName@@SqlStdOperatorTable.NOT_EQUALS @TO@ SimpleName@@MethodName:registerFunction:["<>", SqlStdOperatorTable.NOT_EQUALS, hToken(HiveParser.NOTEQUAL,"<>")] @AT@ 12668 @LENGTH@ 30
------------INS SimpleName@@SqlStdOperatorTable @TO@ QualifiedName@@SqlStdOperatorTable.NOT_EQUALS @AT@ 12668 @LENGTH@ 19
------------INS SimpleName@@NOT_EQUALS @TO@ QualifiedName@@SqlStdOperatorTable.NOT_EQUALS @AT@ 12688 @LENGTH@ 10
---------INS MethodInvocation@@hToken(HiveParser.NOTEQUAL,"<>") @TO@ SimpleName@@MethodName:registerFunction:["<>", SqlStdOperatorTable.NOT_EQUALS, hToken(HiveParser.NOTEQUAL,"<>")] @AT@ 12700 @LENGTH@ 33
------------INS SimpleName@@MethodName:hToken:[HiveParser.NOTEQUAL, "<>"] @TO@ MethodInvocation@@hToken(HiveParser.NOTEQUAL,"<>") @AT@ 12700 @LENGTH@ 33
---------------INS QualifiedName@@HiveParser.NOTEQUAL @TO@ SimpleName@@MethodName:hToken:[HiveParser.NOTEQUAL, "<>"] @AT@ 12707 @LENGTH@ 19
------------------INS SimpleName@@HiveParser @TO@ QualifiedName@@HiveParser.NOTEQUAL @AT@ 12707 @LENGTH@ 10
------------------INS SimpleName@@NOTEQUAL @TO@ QualifiedName@@HiveParser.NOTEQUAL @AT@ 12718 @LENGTH@ 8
---------------INS StringLiteral@@"<>" @TO@ SimpleName@@MethodName:hToken:[HiveParser.NOTEQUAL, "<>"] @AT@ 12728 @LENGTH@ 4
------------INS SimpleName@@MethodName:hToken:[HiveParser.NOTEQUAL, "<>"] @TO@ MethodInvocation@@hToken(HiveParser.NOTEQUAL,"<>") @AT@ 12700 @LENGTH@ 33
---------------INS QualifiedName@@HiveParser.NOTEQUAL @TO@ SimpleName@@MethodName:hToken:[HiveParser.NOTEQUAL, "<>"] @AT@ 12707 @LENGTH@ 19
------------------INS SimpleName@@HiveParser @TO@ QualifiedName@@HiveParser.NOTEQUAL @AT@ 12707 @LENGTH@ 10
------------------INS SimpleName@@NOTEQUAL @TO@ QualifiedName@@HiveParser.NOTEQUAL @AT@ 12718 @LENGTH@ 8
---------------INS StringLiteral@@"<>" @TO@ SimpleName@@MethodName:hToken:[HiveParser.NOTEQUAL, "<>"] @AT@ 12728 @LENGTH@ 4


UPD MethodDeclaration@@public, static, JmsMessageType, MethodName:discoverMessgeTypeFromPayload, final Object payload,  @TO@ public, static, JmsMessageType, MethodName:discoverMessageTypeFromPayload, final Object payload,  @AT@ 15851 @LENGTH@ 1053
---UPD SimpleName@@MethodName:discoverMessgeTypeFromPayload @TO@ MethodName:discoverMessageTypeFromPayload @AT@ 15880 @LENGTH@ 29


DEL MethodDeclaration@@protected, void, MethodName:doValidateOnModelStage, OperationContext context, ModelNode operation,  @AT@ 4474 @LENGTH@ 92
---DEL Modifier@@protected @AT@ 4474 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 4484 @LENGTH@ 4
---DEL SimpleName@@MethodName:doValidateOnModelStage @AT@ 4489 @LENGTH@ 22
---DEL SingleVariableDeclaration@@OperationContext context @AT@ 4512 @LENGTH@ 24
------DEL SimpleType@@OperationContext @AT@ 4512 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 4529 @LENGTH@ 7
---DEL SingleVariableDeclaration@@ModelNode operation @AT@ 4538 @LENGTH@ 19
------DEL SimpleType@@ModelNode @AT@ 4538 @LENGTH@ 9
------DEL SimpleName@@operation @AT@ 4548 @LENGTH@ 9


UPD TypeDeclaration@@[@UriEndpoint(scheme="netty",consumerClass=NettyConsumer.class), public]NettyEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="netty4",consumerClass=NettyConsumer.class), public]NettyEndpoint, DefaultEndpoint @AT@ 1550 @LENGTH@ 4829
---UPD NormalAnnotation@@@UriEndpoint(scheme="netty",consumerClass=NettyConsumer.class) @TO@ @UriEndpoint(scheme="netty4",consumerClass=NettyConsumer.class) @AT@ 1550 @LENGTH@ 67


UPD TypeDeclaration@@[public]DateConverter, [Converter<Date>] @TO@ [@Component, public]DateConverter, [Converter<Date>] @AT@ 1047 @LENGTH@ 933
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]DateConverter, [Converter<Date>] @AT@ 1097 @LENGTH@ 10


UPD IfStatement@@if (name != null) {  result.put(name,type.cast(service));} @TO@ if (name != null) {  result.put(name,type.cast(service));} else {  result.put(type.getSimpleName() + count,type.cast(service));  count++;} @AT@ 4240 @LENGTH@ 120
---INS Block@@ElseBody:{  result.put(type.getSimpleName() + count,type.cast(service));  count++;} @TO@ IfStatement@@if (name != null) {  result.put(name,type.cast(service));} @AT@ 4389 @LENGTH@ 231
------INS ExpressionStatement@@MethodInvocation:result.put(type.getSimpleName() + count,type.cast(service)) @TO@ Block@@ElseBody:{  result.put(type.getSimpleName() + count,type.cast(service));  count++;} @AT@ 4488 @LENGTH@ 61
---------INS MethodInvocation@@result.put(type.getSimpleName() + count,type.cast(service)) @TO@ ExpressionStatement@@MethodInvocation:result.put(type.getSimpleName() + count,type.cast(service)) @AT@ 4488 @LENGTH@ 60
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.put(type.getSimpleName() + count,type.cast(service)) @AT@ 4488 @LENGTH@ 6
------------INS SimpleName@@MethodName:put:[type.getSimpleName() + count, type.cast(service)] @TO@ MethodInvocation@@result.put(type.getSimpleName() + count,type.cast(service)) @AT@ 4495 @LENGTH@ 53
---------------INS InfixExpression@@type.getSimpleName() + count @TO@ SimpleName@@MethodName:put:[type.getSimpleName() + count, type.cast(service)] @AT@ 4499 @LENGTH@ 28
------------------INS MethodInvocation@@type.getSimpleName() @TO@ InfixExpression@@type.getSimpleName() + count @AT@ 4499 @LENGTH@ 20
---------------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getSimpleName() @AT@ 4499 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@type.getSimpleName() @AT@ 4504 @LENGTH@ 15
------------------INS Operator@@+ @TO@ InfixExpression@@type.getSimpleName() + count @AT@ 4519 @LENGTH@ 1
------------------INS SimpleName@@count @TO@ InfixExpression@@type.getSimpleName() + count @AT@ 4522 @LENGTH@ 5
---------------INS MethodInvocation@@type.cast(service) @TO@ SimpleName@@MethodName:put:[type.getSimpleName() + count, type.cast(service)] @AT@ 4529 @LENGTH@ 18
------------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.cast(service) @AT@ 4529 @LENGTH@ 4
------------------INS SimpleName@@MethodName:cast:[service] @TO@ MethodInvocation@@type.cast(service) @AT@ 4534 @LENGTH@ 13
---------------------INS SimpleName@@service @TO@ SimpleName@@MethodName:cast:[service] @AT@ 4539 @LENGTH@ 7
------INS ExpressionStatement@@PostfixExpression:count++ @TO@ Block@@ElseBody:{  result.put(type.getSimpleName() + count,type.cast(service));  count++;} @AT@ 4582 @LENGTH@ 8
---------INS PostfixExpression@@count++ @TO@ ExpressionStatement@@PostfixExpression:count++ @AT@ 4582 @LENGTH@ 7
------------INS SimpleName@@count @TO@ PostfixExpression@@count++ @AT@ 4582 @LENGTH@ 5
------------INS Operator@@++ @TO@ PostfixExpression@@count++ @AT@ 4588 @LENGTH@ 2


UPD TypeDeclaration@@[@UriEndpoint(scheme="twitter",consumerClass=Twitter4JConsumer.class), public]TwitterEndpointEvent, DirectEndpoint[TwitterEndpoint] @TO@ [@UriEndpoint(scheme="twitter",consumerClass=Twitter4JConsumer.class,label="api,social"), public]TwitterEndpointEvent, DirectEndpoint[TwitterEndpoint] @AT@ 1293 @LENGTH@ 1333
---UPD NormalAnnotation@@@UriEndpoint(scheme="twitter",consumerClass=Twitter4JConsumer.class) @TO@ @UriEndpoint(scheme="twitter",consumerClass=Twitter4JConsumer.class,label="api,social") @AT@ 1293 @LENGTH@ 73


UPD FieldDeclaration@@private, final, String, [path] @TO@ protected, final, String, [path] @AT@ 1055 @LENGTH@ 26
---UPD Modifier@@private @TO@ protected @AT@ 1055 @LENGTH@ 7


DEL ExpressionStatement@@Assignment:lookupPath=new UriTemplate(lookupPath).expand().toString() @AT@ 3056 @LENGTH@ 61
---DEL Assignment@@lookupPath=new UriTemplate(lookupPath).expand().toString() @AT@ 3056 @LENGTH@ 60
------DEL SimpleName@@lookupPath @AT@ 3056 @LENGTH@ 10
------DEL Operator@@= @AT@ 3066 @LENGTH@ 1
------DEL MethodInvocation@@new UriTemplate(lookupPath).expand().toString() @AT@ 3069 @LENGTH@ 47
---------DEL MethodInvocation@@MethodName:expand:[] @AT@ 3069 @LENGTH@ 36
---------DEL ClassInstanceCreation@@UriTemplate[lookupPath] @AT@ 3069 @LENGTH@ 27
------------DEL New@@new @AT@ 3069 @LENGTH@ 3
------------DEL SimpleType@@UriTemplate @AT@ 3073 @LENGTH@ 11
------------DEL SimpleName@@lookupPath @AT@ 3085 @LENGTH@ 10
---------DEL SimpleName@@MethodName:toString:[] @AT@ 3106 @LENGTH@ 10


UPD IfStatement@@if (value.getClass().isArray() && type.getComponentType().isAssignableFrom(value.getClass().getComponentType())) {  final int size=Array.getLength(value);  Object array=Array.newInstance(type.getComponentType(),size);  for (int i=0; i < size; i++) {    Array.set(array,i,Array.get(value,i));  }  value=array;} else {  throw new IllegalArgumentException(String.format("Cannot convert %s to %s",value.getClass(),type));} @TO@ if (value.getClass().isArray() && type.getComponentType().isAssignableFrom(value.getClass().getComponentType())) {  if (type.getComponentType() != value.getClass().getComponentType()) {    final int size=Array.getLength(value);    Object array=Array.newInstance(type.getComponentType(),size);    for (int i=0; i < size; i++) {      Array.set(array,i,Array.get(value,i));    }    value=array;  }} else {  throw new IllegalArgumentException(String.format("Cannot convert %s to %s",value.getClass(),type));} @AT@ 13753 @LENGTH@ 706
---INS Block@@ThenBody:{  if (type.getComponentType() != value.getClass().getComponentType()) {    final int size=Array.getLength(value);    Object array=Array.newInstance(type.getComponentType(),size);    for (int i=0; i < size; i++) {      Array.set(array,i,Array.get(value,i));    }    value=array;  }} @TO@ IfStatement@@if (value.getClass().isArray() && type.getComponentType().isAssignableFrom(value.getClass().getComponentType())) {  final int size=Array.getLength(value);  Object array=Array.newInstance(type.getComponentType(),size);  for (int i=0; i < size; i++) {    Array.set(array,i,Array.get(value,i));  }  value=array;} else {  throw new IllegalArgumentException(String.format("Cannot convert %s to %s",value.getClass(),type));} @AT@ 13887 @LENGTH@ 547
------INS IfStatement@@if (type.getComponentType() != value.getClass().getComponentType()) {  final int size=Array.getLength(value);  Object array=Array.newInstance(type.getComponentType(),size);  for (int i=0; i < size; i++) {    Array.set(array,i,Array.get(value,i));  }  value=array;} @TO@ Block@@ThenBody:{  if (type.getComponentType() != value.getClass().getComponentType()) {    final int size=Array.getLength(value);    Object array=Array.newInstance(type.getComponentType(),size);    for (int i=0; i < size; i++) {      Array.set(array,i,Array.get(value,i));    }    value=array;  }} @AT@ 13979 @LENGTH@ 437
---------MOV Block@@ThenBody:{  final int size=Array.getLength(value);  Object array=Array.newInstance(type.getComponentType(),size);  for (int i=0; i < size; i++) {    Array.set(array,i,Array.get(value,i));  }  value=array;} @TO@ IfStatement@@if (type.getComponentType() != value.getClass().getComponentType()) {  final int size=Array.getLength(value);  Object array=Array.newInstance(type.getComponentType(),size);  for (int i=0; i < size; i++) {    Array.set(array,i,Array.get(value,i));  }  value=array;} @AT@ 13886 @LENGTH@ 401
---------MOV Block@@ThenBody:{  final int size=Array.getLength(value);  Object array=Array.newInstance(type.getComponentType(),size);  for (int i=0; i < size; i++) {    Array.set(array,i,Array.get(value,i));  }  value=array;} @TO@ IfStatement@@if (type.getComponentType() != value.getClass().getComponentType()) {  final int size=Array.getLength(value);  Object array=Array.newInstance(type.getComponentType(),size);  for (int i=0; i < size; i++) {    Array.set(array,i,Array.get(value,i));  }  value=array;} @AT@ 13886 @LENGTH@ 401
---------INS InfixExpression@@type.getComponentType() != value.getClass().getComponentType() @TO@ IfStatement@@if (type.getComponentType() != value.getClass().getComponentType()) {  final int size=Array.getLength(value);  Object array=Array.newInstance(type.getComponentType(),size);  for (int i=0; i < size; i++) {    Array.set(array,i,Array.get(value,i));  }  value=array;} @AT@ 13983 @LENGTH@ 62
------------INS MethodInvocation@@type.getComponentType() @TO@ InfixExpression@@type.getComponentType() != value.getClass().getComponentType() @AT@ 13983 @LENGTH@ 23
---------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getComponentType() @AT@ 13983 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getComponentType:[] @TO@ MethodInvocation@@type.getComponentType() @AT@ 13988 @LENGTH@ 18
------------INS Operator@@!= @TO@ InfixExpression@@type.getComponentType() != value.getClass().getComponentType() @AT@ 14006 @LENGTH@ 2
------------INS MethodInvocation@@value.getClass().getComponentType() @TO@ InfixExpression@@type.getComponentType() != value.getClass().getComponentType() @AT@ 14010 @LENGTH@ 35
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@value.getClass().getComponentType() @AT@ 14010 @LENGTH@ 16
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.getClass().getComponentType() @AT@ 14010 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getComponentType:[] @TO@ MethodInvocation@@value.getClass().getComponentType() @AT@ 14027 @LENGTH@ 18


UPD MethodDeclaration@@private, static, void, MethodName:performVersionChecks,  @TO@ private, static, void, MethodName:performVersionChecks, String minSpringVersion,  @AT@ 1202 @LENGTH@ 592
---INS SingleVariableDeclaration@@String minSpringVersion @TO@ MethodDeclaration@@private, static, void, MethodName:performVersionChecks,  @AT@ 1466 @LENGTH@ 23
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String minSpringVersion @AT@ 1466 @LENGTH@ 6
------INS SimpleName@@minSpringVersion @TO@ SingleVariableDeclaration@@String minSpringVersion @AT@ 1473 @LENGTH@ 16
---UPD IfStatement@@if (springVersion.compareTo(MIN_SPRING_VERSION) < 0) {  logger.warn("**** You are advised to use Spring " + MIN_SPRING_VERSION + " or later with this version. You are running: "+ springVersion);} @TO@ if (new ComparableVersion(springVersion).compareTo(new ComparableVersion(minSpringVersion)) < 0) {  logger.warn("**** You are advised to use Spring " + minSpringVersion + " or later with this version. You are running: "+ springVersion);} @AT@ 1552 @LENGTH@ 236
------UPD InfixExpression@@springVersion.compareTo(MIN_SPRING_VERSION) < 0 @TO@ new ComparableVersion(springVersion).compareTo(new ComparableVersion(minSpringVersion)) < 0 @AT@ 1556 @LENGTH@ 47
---------UPD MethodInvocation@@springVersion.compareTo(MIN_SPRING_VERSION) @TO@ new ComparableVersion(springVersion).compareTo(new ComparableVersion(minSpringVersion)) @AT@ 1556 @LENGTH@ 43
------------DEL SimpleName@@Name:springVersion @AT@ 1556 @LENGTH@ 13
------------UPD SimpleName@@MethodName:compareTo:[MIN_SPRING_VERSION] @TO@ MethodName:compareTo:[new ComparableVersion(minSpringVersion)] @AT@ 1570 @LENGTH@ 29
---------------DEL SimpleName@@MIN_SPRING_VERSION @AT@ 1580 @LENGTH@ 18
---------------INS ClassInstanceCreation@@ComparableVersion[minSpringVersion] @TO@ SimpleName@@MethodName:compareTo:[MIN_SPRING_VERSION] @AT@ 1849 @LENGTH@ 39
------------------INS New@@new @TO@ ClassInstanceCreation@@ComparableVersion[minSpringVersion] @AT@ 1849 @LENGTH@ 3
------------------INS SimpleType@@ComparableVersion @TO@ ClassInstanceCreation@@ComparableVersion[minSpringVersion] @AT@ 1853 @LENGTH@ 17
------------------INS SimpleName@@minSpringVersion @TO@ ClassInstanceCreation@@ComparableVersion[minSpringVersion] @AT@ 1871 @LENGTH@ 16
------------INS ClassInstanceCreation@@ComparableVersion[springVersion] @TO@ MethodInvocation@@springVersion.compareTo(MIN_SPRING_VERSION) @AT@ 1802 @LENGTH@ 36
---------------INS New@@new @TO@ ClassInstanceCreation@@ComparableVersion[springVersion] @AT@ 1802 @LENGTH@ 3
---------------INS SimpleType@@ComparableVersion @TO@ ClassInstanceCreation@@ComparableVersion[springVersion] @AT@ 1806 @LENGTH@ 17
---------------INS SimpleName@@springVersion @TO@ ClassInstanceCreation@@ComparableVersion[springVersion] @AT@ 1824 @LENGTH@ 13
------UPD Block@@ThenBody:{  logger.warn("**** You are advised to use Spring " + MIN_SPRING_VERSION + " or later with this version. You are running: "+ springVersion);} @TO@ ThenBody:{  logger.warn("**** You are advised to use Spring " + minSpringVersion + " or later with this version. You are running: "+ springVersion);} @AT@ 1605 @LENGTH@ 183
---------UPD ExpressionStatement@@MethodInvocation:logger.warn("**** You are advised to use Spring " + MIN_SPRING_VERSION + " or later with this version. You are running: "+ springVersion) @TO@ MethodInvocation:logger.warn("**** You are advised to use Spring " + minSpringVersion + " or later with this version. You are running: "+ springVersion) @AT@ 1619 @LENGTH@ 159
------------UPD MethodInvocation@@logger.warn("**** You are advised to use Spring " + MIN_SPRING_VERSION + " or later with this version. You are running: "+ springVersion) @TO@ logger.warn("**** You are advised to use Spring " + minSpringVersion + " or later with this version. You are running: "+ springVersion) @AT@ 1619 @LENGTH@ 158
---------------UPD SimpleName@@MethodName:warn:["**** You are advised to use Spring " + MIN_SPRING_VERSION + " or later with this version. You are running: "+ springVersion] @TO@ MethodName:warn:["**** You are advised to use Spring " + minSpringVersion + " or later with this version. You are running: "+ springVersion] @AT@ 1626 @LENGTH@ 151
------------------UPD InfixExpression@@"**** You are advised to use Spring " + MIN_SPRING_VERSION + " or later with this version. You are running: "+ springVersion @TO@ "**** You are advised to use Spring " + minSpringVersion + " or later with this version. You are running: "+ springVersion @AT@ 1631 @LENGTH@ 145
---------------------UPD SimpleName@@MIN_SPRING_VERSION @TO@ minSpringVersion @AT@ 1671 @LENGTH@ 18


UPD VariableDeclarationStatement@@String out=(String)template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString()); @TO@ String out=template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString(),String.class); @AT@ 3200 @LENGTH@ 126
---UPD VariableDeclarationFragment@@out=(String)template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString()) @TO@ out=template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString(),String.class) @AT@ 3207 @LENGTH@ 118
------INS MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString(),String.class) @TO@ VariableDeclarationFragment@@out=(String)template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString()) @AT@ 3213 @LENGTH@ 118
---------MOV SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString(),String.class) @AT@ 3221 @LENGTH@ 8
---------MOV SimpleName@@MethodName:requestBody:["mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec", in.toString()] @TO@ MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString(),String.class) @AT@ 3230 @LENGTH@ 95
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:requestBody:["mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec", in.toString()] @AT@ 3318 @LENGTH@ 12
------DEL CastExpression@@(String)template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString()) @AT@ 3213 @LENGTH@ 112
---------DEL SimpleType@@String @AT@ 3214 @LENGTH@ 6
---------DEL MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString()) @AT@ 3221 @LENGTH@ 104


DEL VariableDeclarationStatement@@AbstractResourceOwnerPasswordProviderTests test=(AbstractResourceOwnerPasswordProviderTests)target; @AT@ 8254 @LENGTH@ 102
---DEL SimpleType@@AbstractResourceOwnerPasswordProviderTests @AT@ 8254 @LENGTH@ 42
---DEL VariableDeclarationFragment@@test=(AbstractResourceOwnerPasswordProviderTests)target @AT@ 8297 @LENGTH@ 58
------DEL SimpleName@@test @AT@ 8297 @LENGTH@ 4
------DEL CastExpression@@(AbstractResourceOwnerPasswordProviderTests)target @AT@ 8304 @LENGTH@ 51
---------DEL SimpleType@@AbstractResourceOwnerPasswordProviderTests @AT@ 8305 @LENGTH@ 42
---------DEL SimpleName@@target @AT@ 8349 @LENGTH@ 6


MOV FieldDeclaration@@private, String, [beanName] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="bean"), public]BeanEndpoint, ProcessorEndpoint @AT@ 1426 @LENGTH@ 24


UPD TypeDeclaration@@[public]DockerConstants,  @TO@ [public, final]DockerConstants,  @AT@ 935 @LENGTH@ 6974
---INS Modifier@@final @TO@ TypeDeclaration@@[public]DockerConstants,  @AT@ 942 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:formatPathWithEmptyRootPath,  @TO@ TypeDeclaration@@[public, abstract]AbstractSitePathUrlFactoryTest,  @AT@ 3269 @LENGTH@ 287
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:formatPathWithEmptyRootPath,  @AT@ 3269 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:formatPathWithEmptyRootPath,  @AT@ 3276 @LENGTH@ 4
---INS SimpleName@@MethodName:formatPathWithEmptyRootPath @TO@ MethodDeclaration@@public, void, MethodName:formatPathWithEmptyRootPath,  @AT@ 3281 @LENGTH@ 27
---INS VariableDeclarationStatement@@AbstractSitePathUrlFactory factory=new MockSitePathUrlFactory("mobile","tablet",""); @TO@ MethodDeclaration@@public, void, MethodName:formatPathWithEmptyRootPath,  @AT@ 3315 @LENGTH@ 88
------INS SimpleType@@AbstractSitePathUrlFactory @TO@ VariableDeclarationStatement@@AbstractSitePathUrlFactory factory=new MockSitePathUrlFactory("mobile","tablet",""); @AT@ 3315 @LENGTH@ 26
------INS VariableDeclarationFragment@@factory=new MockSitePathUrlFactory("mobile","tablet","") @TO@ VariableDeclarationStatement@@AbstractSitePathUrlFactory factory=new MockSitePathUrlFactory("mobile","tablet",""); @AT@ 3342 @LENGTH@ 60
---------INS SimpleName@@factory @TO@ VariableDeclarationFragment@@factory=new MockSitePathUrlFactory("mobile","tablet","") @AT@ 3342 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockSitePathUrlFactory["mobile", "tablet", ""] @TO@ VariableDeclarationFragment@@factory=new MockSitePathUrlFactory("mobile","tablet","") @AT@ 3352 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@MockSitePathUrlFactory["mobile", "tablet", ""] @AT@ 3352 @LENGTH@ 3
------------INS SimpleType@@MockSitePathUrlFactory @TO@ ClassInstanceCreation@@MockSitePathUrlFactory["mobile", "tablet", ""] @AT@ 3356 @LENGTH@ 22
------------INS StringLiteral@@"mobile" @TO@ ClassInstanceCreation@@MockSitePathUrlFactory["mobile", "tablet", ""] @AT@ 3379 @LENGTH@ 8
------------INS StringLiteral@@"tablet" @TO@ ClassInstanceCreation@@MockSitePathUrlFactory["mobile", "tablet", ""] @AT@ 3389 @LENGTH@ 8
------------INS StringLiteral@@"" @TO@ ClassInstanceCreation@@MockSitePathUrlFactory["mobile", "tablet", ""] @AT@ 3399 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertEquals("/mobile/",factory.getMobilePath()) @TO@ MethodDeclaration@@public, void, MethodName:formatPathWithEmptyRootPath,  @AT@ 3406 @LENGTH@ 50
------INS MethodInvocation@@assertEquals("/mobile/",factory.getMobilePath()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("/mobile/",factory.getMobilePath()) @AT@ 3406 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertEquals:["/mobile/", factory.getMobilePath()] @TO@ MethodInvocation@@assertEquals("/mobile/",factory.getMobilePath()) @AT@ 3406 @LENGTH@ 49
------------INS StringLiteral@@"/mobile/" @TO@ SimpleName@@MethodName:assertEquals:["/mobile/", factory.getMobilePath()] @AT@ 3419 @LENGTH@ 10
------------INS MethodInvocation@@factory.getMobilePath() @TO@ SimpleName@@MethodName:assertEquals:["/mobile/", factory.getMobilePath()] @AT@ 3431 @LENGTH@ 23
---------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getMobilePath() @AT@ 3431 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getMobilePath:[] @TO@ MethodInvocation@@factory.getMobilePath() @AT@ 3439 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertEquals("/tablet/",factory.getTabletPath()) @TO@ MethodDeclaration@@public, void, MethodName:formatPathWithEmptyRootPath,  @AT@ 3459 @LENGTH@ 50
------INS MethodInvocation@@assertEquals("/tablet/",factory.getTabletPath()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("/tablet/",factory.getTabletPath()) @AT@ 3459 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertEquals:["/tablet/", factory.getTabletPath()] @TO@ MethodInvocation@@assertEquals("/tablet/",factory.getTabletPath()) @AT@ 3459 @LENGTH@ 49
------------INS StringLiteral@@"/tablet/" @TO@ SimpleName@@MethodName:assertEquals:["/tablet/", factory.getTabletPath()] @AT@ 3472 @LENGTH@ 10
------------INS MethodInvocation@@factory.getTabletPath() @TO@ SimpleName@@MethodName:assertEquals:["/tablet/", factory.getTabletPath()] @AT@ 3484 @LENGTH@ 23
---------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getTabletPath() @AT@ 3484 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getTabletPath:[] @TO@ MethodInvocation@@factory.getTabletPath() @AT@ 3492 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertEquals("/",factory.getRootPath()) @TO@ MethodDeclaration@@public, void, MethodName:formatPathWithEmptyRootPath,  @AT@ 3512 @LENGTH@ 41
------INS MethodInvocation@@assertEquals("/",factory.getRootPath()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("/",factory.getRootPath()) @AT@ 3512 @LENGTH@ 40
---------INS SimpleName@@MethodName:assertEquals:["/", factory.getRootPath()] @TO@ MethodInvocation@@assertEquals("/",factory.getRootPath()) @AT@ 3512 @LENGTH@ 40
------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:assertEquals:["/", factory.getRootPath()] @AT@ 3525 @LENGTH@ 3
------------INS MethodInvocation@@factory.getRootPath() @TO@ SimpleName@@MethodName:assertEquals:["/", factory.getRootPath()] @AT@ 3530 @LENGTH@ 21
---------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getRootPath() @AT@ 3530 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getRootPath:[] @TO@ MethodInvocation@@factory.getRootPath() @AT@ 3538 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertEquals("124|ActiveMQ in Action|2",lines[1]) @TO@ MethodInvocation:assertEquals("124|ActiveMQ in Action|2",lines[1].trim()) @AT@ 1836 @LENGTH@ 51
---UPD MethodInvocation@@assertEquals("124|ActiveMQ in Action|2",lines[1]) @TO@ assertEquals("124|ActiveMQ in Action|2",lines[1].trim()) @AT@ 1836 @LENGTH@ 50
------UPD SimpleName@@MethodName:assertEquals:["124|ActiveMQ in Action|2", lines[1]] @TO@ MethodName:assertEquals:["124|ActiveMQ in Action|2", lines[1].trim()] @AT@ 1836 @LENGTH@ 50
---------DEL ArrayAccess@@lines[1] @AT@ 1877 @LENGTH@ 8
---------INS MethodInvocation@@lines[1].trim() @TO@ SimpleName@@MethodName:assertEquals:["124|ActiveMQ in Action|2", lines[1]] @AT@ 1884 @LENGTH@ 15
------------INS ArrayAccess@@lines[1] @TO@ MethodInvocation@@lines[1].trim() @AT@ 1884 @LENGTH@ 8
---------------MOV SimpleName@@lines @TO@ ArrayAccess@@lines[1] @AT@ 1877 @LENGTH@ 5
---------------MOV SimpleName@@lines @TO@ ArrayAccess@@lines[1] @AT@ 1877 @LENGTH@ 5
---------------MOV NumberLiteral@@1 @TO@ ArrayAccess@@lines[1] @AT@ 1883 @LENGTH@ 1
---------------MOV NumberLiteral@@1 @TO@ ArrayAccess@@lines[1] @AT@ 1883 @LENGTH@ 1
------------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@lines[1].trim() @AT@ 1893 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:restConfiguration().component("netty4-http").host("localhost").port(getPort()) @TO@ MethodInvocation:restConfiguration().component("netty4-http").host("localhost").port(getPort()).endpointProperty("nettyHttpBinding","#mybinding") @AT@ 1644 @LENGTH@ 79
---UPD MethodInvocation@@restConfiguration().component("netty4-http").host("localhost").port(getPort()) @TO@ restConfiguration().component("netty4-http").host("localhost").port(getPort()).endpointProperty("nettyHttpBinding","#mybinding") @AT@ 1644 @LENGTH@ 78
------DEL SimpleName@@MethodName:port:[getPort()] @AT@ 1707 @LENGTH@ 15
---------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 1712 @LENGTH@ 9
------INS MethodInvocation@@MethodName:port:[getPort()] @TO@ MethodInvocation@@restConfiguration().component("netty4-http").host("localhost").port(getPort()) @AT@ 1975 @LENGTH@ 78
---------INS MethodInvocation@@MethodName:getPort:[] @TO@ MethodInvocation@@MethodName:port:[getPort()] @AT@ 2043 @LENGTH@ 9
------INS SimpleName@@MethodName:endpointProperty:["nettyHttpBinding", "#mybinding"] @TO@ MethodInvocation@@restConfiguration().component("netty4-http").host("localhost").port(getPort()) @AT@ 2054 @LENGTH@ 50
---------INS StringLiteral@@"nettyHttpBinding" @TO@ SimpleName@@MethodName:endpointProperty:["nettyHttpBinding", "#mybinding"] @AT@ 2071 @LENGTH@ 18
---------INS StringLiteral@@"#mybinding" @TO@ SimpleName@@MethodName:endpointProperty:["nettyHttpBinding", "#mybinding"] @AT@ 2091 @LENGTH@ 12


INS VariableDeclarationStatement@@int j=0; @TO@ MethodDeclaration@@public, String[], MethodName:getAllAddresses,  @AT@ 8279 @LENGTH@ 10
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int j=0; @AT@ 8279 @LENGTH@ 3
---INS VariableDeclarationFragment@@j=0 @TO@ VariableDeclarationStatement@@int j=0; @AT@ 8283 @LENGTH@ 5
------INS SimpleName@@j @TO@ VariableDeclarationFragment@@j=0 @AT@ 8283 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@j=0 @AT@ 8287 @LENGTH@ 1


UPD Block@@ElseBody:if (rel instanceof HiveJoinRel) {  if (!validJoinParent(rel,parent)) {    introduceDerivedTable(rel,parent);  }} else if (rel instanceof MultiJoinRel) {} else if (rel instanceof OneRowRelBase) {} else if (rel instanceof RelSubset) {} else if (rel instanceof SetOpRel) {} else if (rel instanceof SingleRel) {  if (rel instanceof FilterRelBase) {    if (!validFilterParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }  } else   if (rel instanceof HiveSortRel) {    if (!validSortParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }    if (!validSortChild((HiveSortRel)rel)) {      introduceDerivedTable(((HiveSortRel)rel).getChild(),rel);    }  } else   if (rel instanceof HiveAggregateRel) {    if (!validGBParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }  }} else if (rel instanceof TableAccessRelBase) {} else if (rel instanceof TableFunctionRelBase) {} else if (rel instanceof ValuesRelBase) {} @TO@ ElseBody:if (rel instanceof JoinRelBase) {  if (!validJoinParent(rel,parent)) {    introduceDerivedTable(rel,parent);  }} else if (rel instanceof MultiJoinRel) {} else if (rel instanceof OneRowRelBase) {} else if (rel instanceof RelSubset) {} else if (rel instanceof SetOpRel) {} else if (rel instanceof SingleRel) {  if (rel instanceof FilterRelBase) {    if (!validFilterParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }  } else   if (rel instanceof HiveSortRel) {    if (!validSortParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }    if (!validSortChild((HiveSortRel)rel)) {      introduceDerivedTable(((HiveSortRel)rel).getChild(),rel);    }  } else   if (rel instanceof HiveAggregateRel) {    if (!validGBParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }  }} else if (rel instanceof TableAccessRelBase) {} else if (rel instanceof TableFunctionRelBase) {} else if (rel instanceof ValuesRelBase) {} @AT@ 1962 @LENGTH@ 1097
---UPD IfStatement@@if (rel instanceof HiveJoinRel) {  if (!validJoinParent(rel,parent)) {    introduceDerivedTable(rel,parent);  }} else if (rel instanceof MultiJoinRel) {} else if (rel instanceof OneRowRelBase) {} else if (rel instanceof RelSubset) {} else if (rel instanceof SetOpRel) {} else if (rel instanceof SingleRel) {  if (rel instanceof FilterRelBase) {    if (!validFilterParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }  } else   if (rel instanceof HiveSortRel) {    if (!validSortParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }    if (!validSortChild((HiveSortRel)rel)) {      introduceDerivedTable(((HiveSortRel)rel).getChild(),rel);    }  } else   if (rel instanceof HiveAggregateRel) {    if (!validGBParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }  }} else if (rel instanceof TableAccessRelBase) {} else if (rel instanceof TableFunctionRelBase) {} else if (rel instanceof ValuesRelBase) {} @TO@ if (rel instanceof JoinRelBase) {  if (!validJoinParent(rel,parent)) {    introduceDerivedTable(rel,parent);  }} else if (rel instanceof MultiJoinRel) {} else if (rel instanceof OneRowRelBase) {} else if (rel instanceof RelSubset) {} else if (rel instanceof SetOpRel) {} else if (rel instanceof SingleRel) {  if (rel instanceof FilterRelBase) {    if (!validFilterParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }  } else   if (rel instanceof HiveSortRel) {    if (!validSortParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }    if (!validSortChild((HiveSortRel)rel)) {      introduceDerivedTable(((HiveSortRel)rel).getChild(),rel);    }  } else   if (rel instanceof HiveAggregateRel) {    if (!validGBParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }  }} else if (rel instanceof TableAccessRelBase) {} else if (rel instanceof TableFunctionRelBase) {} else if (rel instanceof ValuesRelBase) {} @AT@ 1962 @LENGTH@ 1097
------UPD InstanceofExpression@@rel instanceof HiveJoinRel @TO@ rel instanceof JoinRelBase @AT@ 1966 @LENGTH@ 26
---------UPD SimpleType@@HiveJoinRel @TO@ JoinRelBase @AT@ 1981 @LENGTH@ 11
---UPD IfStatement@@if (rel instanceof HiveJoinRel) {  if (!validJoinParent(rel,parent)) {    introduceDerivedTable(rel,parent);  }} else if (rel instanceof MultiJoinRel) {} else if (rel instanceof OneRowRelBase) {} else if (rel instanceof RelSubset) {} else if (rel instanceof SetOpRel) {} else if (rel instanceof SingleRel) {  if (rel instanceof FilterRelBase) {    if (!validFilterParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }  } else   if (rel instanceof HiveSortRel) {    if (!validSortParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }    if (!validSortChild((HiveSortRel)rel)) {      introduceDerivedTable(((HiveSortRel)rel).getChild(),rel);    }  } else   if (rel instanceof HiveAggregateRel) {    if (!validGBParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }  }} else if (rel instanceof TableAccessRelBase) {} else if (rel instanceof TableFunctionRelBase) {} else if (rel instanceof ValuesRelBase) {} @TO@ if (rel instanceof JoinRelBase) {  if (!validJoinParent(rel,parent)) {    introduceDerivedTable(rel,parent);  }} else if (rel instanceof MultiJoinRel) {} else if (rel instanceof OneRowRelBase) {} else if (rel instanceof RelSubset) {} else if (rel instanceof SetOpRel) {} else if (rel instanceof SingleRel) {  if (rel instanceof FilterRelBase) {    if (!validFilterParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }  } else   if (rel instanceof HiveSortRel) {    if (!validSortParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }    if (!validSortChild((HiveSortRel)rel)) {      introduceDerivedTable(((HiveSortRel)rel).getChild(),rel);    }  } else   if (rel instanceof HiveAggregateRel) {    if (!validGBParent(rel,parent)) {      introduceDerivedTable(rel,parent);    }  }} else if (rel instanceof TableAccessRelBase) {} else if (rel instanceof TableFunctionRelBase) {} else if (rel instanceof ValuesRelBase) {} @AT@ 1962 @LENGTH@ 1097
------UPD InstanceofExpression@@rel instanceof HiveJoinRel @TO@ rel instanceof JoinRelBase @AT@ 1966 @LENGTH@ 26
---------UPD SimpleType@@HiveJoinRel @TO@ JoinRelBase @AT@ 1981 @LENGTH@ 11


UPD VariableDeclarationStatement@@DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 5201 @LENGTH@ 97
---UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 5201 @LENGTH@ 17
---UPD VariableDeclarationFragment@@client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 5219 @LENGTH@ 78
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 5228 @LENGTH@ 69
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 5216 @LENGTH@ 11
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 5228 @LENGTH@ 43
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 5272 @LENGTH@ 25


UPD MethodDeclaration@@public, void, MethodName:process, SplunkEvent splunkData,  @TO@ void, MethodName:process, SplunkEvent splunkData,  @AT@ 998 @LENGTH@ 44
---DEL Modifier@@public @AT@ 998 @LENGTH@ 6


UPD TypeDeclaration@@[@XmlRootElement(name="restBinding"), @XmlAccessorType(XmlAccessType.FIELD), public]RestBindingDefinition, NoOutputDefinition @TO@ [@XmlRootElement(name="restBinding"), @XmlAccessorType(XmlAccessType.FIELD), public]RestBindingDefinition, NoOutputDefinition<RestBindingDefinition> @AT@ 1441 @LENGTH@ 6728
---INS ParameterizedType@@NoOutputDefinition<RestBindingDefinition> @TO@ TypeDeclaration@@[@XmlRootElement(name="restBinding"), @XmlAccessorType(XmlAccessType.FIELD), public]RestBindingDefinition, NoOutputDefinition @AT@ 1560 @LENGTH@ 41
------INS SimpleType@@NoOutputDefinition @TO@ ParameterizedType@@NoOutputDefinition<RestBindingDefinition> @AT@ 1560 @LENGTH@ 18
------INS SimpleType@@RestBindingDefinition @TO@ ParameterizedType@@NoOutputDefinition<RestBindingDefinition> @AT@ 1579 @LENGTH@ 21
---DEL SimpleType@@NoOutputDefinition @AT@ 1560 @LENGTH@ 18


INS ExpressionStatement@@MethodInvocation:answer.setGroupName(group) @TO@ MethodDeclaration@@protected, QuartzEndpoint, MethodName:createEndpoint, final String uri, final String remaining, final Map<String,Object> parameters, Exception,  @AT@ 6554 @LENGTH@ 27
---INS MethodInvocation@@answer.setGroupName(group) @TO@ ExpressionStatement@@MethodInvocation:answer.setGroupName(group) @AT@ 6554 @LENGTH@ 26
------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.setGroupName(group) @AT@ 6554 @LENGTH@ 6
------INS SimpleName@@MethodName:setGroupName:[group] @TO@ MethodInvocation@@answer.setGroupName(group) @AT@ 6561 @LENGTH@ 19
---------INS SimpleName@@group @TO@ SimpleName@@MethodName:setGroupName:[group] @AT@ 6574 @LENGTH@ 5


UPD FieldDeclaration@@private, static, final, Permission, [GET_STACK_INSPECTOR_PERMMISSION=new RuntimePermission("getStackInspector")] @TO@ private, static, final, Permission, [GET_STACK_INSPECTOR_PERMISSION=new RuntimePermission("getStackInspector")] @AT@ 1133 @LENGTH@ 109
---UPD VariableDeclarationFragment@@GET_STACK_INSPECTOR_PERMMISSION=new RuntimePermission("getStackInspector") @TO@ GET_STACK_INSPECTOR_PERMISSION=new RuntimePermission("getStackInspector") @AT@ 1165 @LENGTH@ 76
------UPD SimpleName@@GET_STACK_INSPECTOR_PERMMISSION @TO@ GET_STACK_INSPECTOR_PERMISSION @AT@ 1165 @LENGTH@ 31


UPD IfStatement@@if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  engine.setUseClientMode(true);  return new SslHandler(engine);} @TO@ if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  if (producer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  }  engine.setUseClientMode(true);  return new SslHandler(engine);} @AT@ 6900 @LENGTH@ 284
---UPD Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  engine.setUseClientMode(true);  return new SslHandler(engine);} @TO@ ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  if (producer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  }  engine.setUseClientMode(true);  return new SslHandler(engine);} @AT@ 6924 @LENGTH@ 260
------INS IfStatement@@if (producer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @TO@ Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  engine.setUseClientMode(true);  return new SslHandler(engine);} @AT@ 6999 @LENGTH@ 276
---------INS InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @TO@ IfStatement@@if (producer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7003 @LENGTH@ 61
------------INS MethodInvocation@@producer.getConfiguration().getSslContextParameters() @TO@ InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @AT@ 7003 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@producer.getConfiguration().getSslContextParameters() @AT@ 7003 @LENGTH@ 27
---------------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.getConfiguration().getSslContextParameters() @AT@ 7003 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getSslContextParameters:[] @TO@ MethodInvocation@@producer.getConfiguration().getSslContextParameters() @AT@ 7031 @LENGTH@ 25
------------INS Operator@@== @TO@ InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @AT@ 7056 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @AT@ 7060 @LENGTH@ 4
---------INS Block@@ThenBody:{  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @TO@ IfStatement@@if (producer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7066 @LENGTH@ 209
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 6999 @LENGTH@ 89
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 6999 @LENGTH@ 89


UPD FieldDeclaration@@private, List<LifecycleStrategy>, [lifecycleStrategies=new ArrayList<LifecycleStrategy>()] @TO@ private, List<LifecycleStrategy>, [lifecycleStrategies=new CopyOnWriteArrayList<LifecycleStrategy>()] @AT@ 7881 @LENGTH@ 89
---UPD VariableDeclarationFragment@@lifecycleStrategies=new ArrayList<LifecycleStrategy>() @TO@ lifecycleStrategies=new CopyOnWriteArrayList<LifecycleStrategy>() @AT@ 7913 @LENGTH@ 56
------UPD ClassInstanceCreation@@ArrayList<LifecycleStrategy>[] @TO@ CopyOnWriteArrayList<LifecycleStrategy>[] @AT@ 7935 @LENGTH@ 34
---------UPD ParameterizedType@@ArrayList<LifecycleStrategy> @TO@ CopyOnWriteArrayList<LifecycleStrategy> @AT@ 7939 @LENGTH@ 28
------------UPD SimpleType@@ArrayList @TO@ CopyOnWriteArrayList @AT@ 7939 @LENGTH@ 9


INS MethodDeclaration@@public, voidMethodName:DefaultRedisScript, String script, Class<T> resultType,  @TO@ TypeDeclaration@@[public]DefaultRedisScript, [RedisScript<T>, InitializingBean] @AT@ 2007 @LENGTH@ 129
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:DefaultRedisScript, String script, Class<T> resultType,  @AT@ 2007 @LENGTH@ 6
---INS SimpleName@@MethodName:DefaultRedisScript @TO@ MethodDeclaration@@public, voidMethodName:DefaultRedisScript, String script, Class<T> resultType,  @AT@ 2014 @LENGTH@ 18
---INS SingleVariableDeclaration@@String script @TO@ MethodDeclaration@@public, voidMethodName:DefaultRedisScript, String script, Class<T> resultType,  @AT@ 2033 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String script @AT@ 2033 @LENGTH@ 6
------INS SimpleName@@script @TO@ SingleVariableDeclaration@@String script @AT@ 2040 @LENGTH@ 6
---INS SingleVariableDeclaration@@Class<T> resultType @TO@ MethodDeclaration@@public, voidMethodName:DefaultRedisScript, String script, Class<T> resultType,  @AT@ 2048 @LENGTH@ 19
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> resultType @AT@ 2048 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2048 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2054 @LENGTH@ 1
------INS SimpleName@@resultType @TO@ SingleVariableDeclaration@@Class<T> resultType @AT@ 2057 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:this.setScriptText(script) @TO@ MethodDeclaration@@public, voidMethodName:DefaultRedisScript, String script, Class<T> resultType,  @AT@ 2074 @LENGTH@ 27
------INS MethodInvocation@@this.setScriptText(script) @TO@ ExpressionStatement@@MethodInvocation:this.setScriptText(script) @AT@ 2074 @LENGTH@ 26
---------INS ThisExpression@@this @TO@ MethodInvocation@@this.setScriptText(script) @AT@ 2074 @LENGTH@ 4
---------INS SimpleName@@MethodName:setScriptText:[script] @TO@ MethodInvocation@@this.setScriptText(script) @AT@ 2079 @LENGTH@ 21
------------INS SimpleName@@script @TO@ SimpleName@@MethodName:setScriptText:[script] @AT@ 2093 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:this.resultType=resultType @TO@ MethodDeclaration@@public, voidMethodName:DefaultRedisScript, String script, Class<T> resultType,  @AT@ 2104 @LENGTH@ 29
------INS Assignment@@this.resultType=resultType @TO@ ExpressionStatement@@Assignment:this.resultType=resultType @AT@ 2104 @LENGTH@ 28
---------INS FieldAccess@@this.resultType @TO@ Assignment@@this.resultType=resultType @AT@ 2104 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.resultType @AT@ 2104 @LENGTH@ 4
------------INS SimpleName@@resultType @TO@ FieldAccess@@this.resultType @AT@ 2109 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@this.resultType=resultType @AT@ 2119 @LENGTH@ 1
---------INS SimpleName@@resultType @TO@ Assignment@@this.resultType=resultType @AT@ 2122 @LENGTH@ 10


UPD IfStatement@@if (fromVal != null && !fromVal.equals(targetWrapper.getProperty(persistentProperty))) {  targetWrapper.setProperty(persistentProperty,fromVal);} @TO@ if (!isNullOrEmpty(fromVal) && !fromVal.equals(targetWrapper.getProperty(persistentProperty))) {  targetWrapper.setProperty(persistentProperty,fromVal);} @AT@ 4159 @LENGTH@ 155
---UPD InfixExpression@@fromVal != null && !fromVal.equals(targetWrapper.getProperty(persistentProperty)) @TO@ !isNullOrEmpty(fromVal) && !fromVal.equals(targetWrapper.getProperty(persistentProperty)) @AT@ 4163 @LENGTH@ 81
------INS PrefixExpression@@!isNullOrEmpty(fromVal) @TO@ InfixExpression@@fromVal != null && !fromVal.equals(targetWrapper.getProperty(persistentProperty)) @AT@ 4163 @LENGTH@ 23
---------INS Operator@@! @TO@ PrefixExpression@@!isNullOrEmpty(fromVal) @AT@ 4163 @LENGTH@ 1
---------INS MethodInvocation@@isNullOrEmpty(fromVal) @TO@ PrefixExpression@@!isNullOrEmpty(fromVal) @AT@ 4164 @LENGTH@ 22
------------INS SimpleName@@MethodName:isNullOrEmpty:[fromVal] @TO@ MethodInvocation@@isNullOrEmpty(fromVal) @AT@ 4164 @LENGTH@ 22
---------------INS SimpleName@@fromVal @TO@ SimpleName@@MethodName:isNullOrEmpty:[fromVal] @AT@ 4178 @LENGTH@ 7
------DEL InfixExpression@@fromVal != null @AT@ 4163 @LENGTH@ 15
---------DEL SimpleName@@fromVal @AT@ 4163 @LENGTH@ 7
---------DEL Operator@@!= @AT@ 4170 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 4174 @LENGTH@ 4


UPD DoStatement@@do {  try {    p=getResolvedPath();    if (isAppendable() && p.getFileSystem(getConfiguration()).exists(p)) {      wout=fs.append(p);    } else {      wout=fs.create(p,isOverwrite());    }    break;  } catch (  Exception e) {    getOutputContext().rollStrategies();  }} while (++openAttempt < maxOpenAttempts); @TO@ do {  boolean rollStrategies=false;  try {    p=getResolvedPath();synchronized (lock) {      boolean exists=fs.exists(p);      if (isAppendable() && exists) {        wout=fs.append(p);        break;      } else       if (!isOverwrite() && exists) {        rollStrategies=true;      } else {        wout=fs.create(p,isOverwrite());        break;      }    }  } catch (  Exception e) {    rollStrategies=true;  }  if (rollStrategies) {    getOutputContext().rollStrategies();  }} while (++openAttempt < maxOpenAttempts); @AT@ 3370 @LENGTH@ 331
---UPD TryStatement@@try {  p=getResolvedPath();  if (isAppendable() && p.getFileSystem(getConfiguration()).exists(p)) {    wout=fs.append(p);  } else {    wout=fs.create(p,isOverwrite());  }  break;} catch (Exception e) {  getOutputContext().rollStrategies();} @TO@ try {  p=getResolvedPath();synchronized (lock) {    boolean exists=fs.exists(p);    if (isAppendable() && exists) {      wout=fs.append(p);      break;    } else     if (!isOverwrite() && exists) {      rollStrategies=true;    } else {      wout=fs.create(p,isOverwrite());      break;    }  }} catch (Exception e) {  rollStrategies=true;} @AT@ 3378 @LENGTH@ 277
------UPD IfStatement@@if (isAppendable() && p.getFileSystem(getConfiguration()).exists(p)) {  wout=fs.append(p);} else {  wout=fs.create(p,isOverwrite());} @TO@ if (isAppendable() && exists) {  wout=fs.append(p);  break;} else if (!isOverwrite() && exists) {  rollStrategies=true;} else {  wout=fs.create(p,isOverwrite());  break;} @AT@ 3415 @LENGTH@ 156
------DEL BreakStatement@@ @AT@ 3576 @LENGTH@ 6
------UPD CatchClause@@catch (Exception e) {  getOutputContext().rollStrategies();} @TO@ catch (Exception e) {  rollStrategies=true;} @AT@ 3588 @LENGTH@ 67
---------INS ExpressionStatement@@Assignment:rollStrategies=true @TO@ CatchClause@@catch (Exception e) {  getOutputContext().rollStrategies();} @AT@ 4685 @LENGTH@ 22
------------INS Assignment@@rollStrategies=true @TO@ ExpressionStatement@@Assignment:rollStrategies=true @AT@ 4685 @LENGTH@ 21
---------------INS SimpleName@@rollStrategies @TO@ Assignment@@rollStrategies=true @AT@ 4685 @LENGTH@ 14
---------------INS Operator@@= @TO@ Assignment@@rollStrategies=true @AT@ 4699 @LENGTH@ 1
---------------INS BooleanLiteral@@true @TO@ Assignment@@rollStrategies=true @AT@ 4702 @LENGTH@ 4
------INS SynchronizedStatement@@synchronized (lock) {  boolean exists=fs.exists(p);  if (isAppendable() && exists) {    wout=fs.append(p);    break;  } else   if (!isOverwrite() && exists) {    rollStrategies=true;  } else {    wout=fs.create(p,isOverwrite());    break;  }} @TO@ TryStatement@@try {  p=getResolvedPath();  if (isAppendable() && p.getFileSystem(getConfiguration()).exists(p)) {    wout=fs.append(p);  } else {    wout=fs.create(p,isOverwrite());  }  break;} catch (Exception e) {  getOutputContext().rollStrategies();} @AT@ 4288 @LENGTH@ 365
---------INS SimpleName@@lock @TO@ SynchronizedStatement@@synchronized (lock) {  boolean exists=fs.exists(p);  if (isAppendable() && exists) {    wout=fs.append(p);    break;  } else   if (!isOverwrite() && exists) {    rollStrategies=true;  } else {    wout=fs.create(p,isOverwrite());    break;  }} @AT@ 4302 @LENGTH@ 4
---------INS Block@@SyncBody:{  boolean exists=fs.exists(p);  if (isAppendable() && exists) {    wout=fs.append(p);    break;  } else   if (!isOverwrite() && exists) {    rollStrategies=true;  } else {    wout=fs.create(p,isOverwrite());    break;  }} @TO@ SynchronizedStatement@@synchronized (lock) {  boolean exists=fs.exists(p);  if (isAppendable() && exists) {    wout=fs.append(p);    break;  } else   if (!isOverwrite() && exists) {    rollStrategies=true;  } else {    wout=fs.create(p,isOverwrite());    break;  }} @AT@ 4308 @LENGTH@ 345
------------MOV IfStatement@@if (isAppendable() && p.getFileSystem(getConfiguration()).exists(p)) {  wout=fs.append(p);} else {  wout=fs.create(p,isOverwrite());} @TO@ Block@@SyncBody:{  boolean exists=fs.exists(p);  if (isAppendable() && exists) {    wout=fs.append(p);    break;  } else   if (!isOverwrite() && exists) {    rollStrategies=true;  } else {    wout=fs.create(p,isOverwrite());    break;  }} @AT@ 3415 @LENGTH@ 156
---------------DEL InfixExpression@@isAppendable() && p.getFileSystem(getConfiguration()).exists(p) @AT@ 3419 @LENGTH@ 63
------------------DEL MethodInvocation@@p.getFileSystem(getConfiguration()).exists(p) @AT@ 3437 @LENGTH@ 45
---------------------DEL MethodInvocation@@MethodName:getFileSystem:[getConfiguration()] @AT@ 3437 @LENGTH@ 35
------------------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 3453 @LENGTH@ 18
---------------------DEL SimpleName@@Name:p @AT@ 3437 @LENGTH@ 1
---------------------DEL SimpleName@@MethodName:exists:[p] @AT@ 3473 @LENGTH@ 9
------------------------DEL SimpleName@@p @AT@ 3480 @LENGTH@ 1
---------------UPD Block@@ThenBody:{  wout=fs.append(p);} @TO@ ThenBody:{  wout=fs.append(p);  break;} @AT@ 3484 @LENGTH@ 33
------------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  wout=fs.append(p);} @AT@ 4416 @LENGTH@ 6
---------------UPD Block@@ElseBody:{  wout=fs.create(p,isOverwrite());} @TO@ ElseBody:{  wout=fs.create(p,isOverwrite());  break;} @AT@ 3523 @LENGTH@ 48
---------------INS InfixExpression@@isAppendable() && exists @TO@ IfStatement@@if (isAppendable() && p.getFileSystem(getConfiguration()).exists(p)) {  wout=fs.append(p);} else {  wout=fs.create(p,isOverwrite());} @AT@ 4355 @LENGTH@ 24
------------------MOV MethodInvocation@@MethodName:isAppendable:[] @TO@ InfixExpression@@isAppendable() && exists @AT@ 3419 @LENGTH@ 14
------------------MOV MethodInvocation@@MethodName:isAppendable:[] @TO@ InfixExpression@@isAppendable() && exists @AT@ 3419 @LENGTH@ 14
------------------MOV Operator@@&& @TO@ InfixExpression@@isAppendable() && exists @AT@ 3433 @LENGTH@ 2
------------------MOV Operator@@&& @TO@ InfixExpression@@isAppendable() && exists @AT@ 3433 @LENGTH@ 2
------------------INS SimpleName@@exists @TO@ InfixExpression@@isAppendable() && exists @AT@ 4373 @LENGTH@ 6
---------------INS Block@@ElseBody:if (!isOverwrite() && exists) {  rollStrategies=true;} else {  wout=fs.create(p,isOverwrite());  break;} @TO@ IfStatement@@if (isAppendable() && p.getFileSystem(getConfiguration()).exists(p)) {  wout=fs.append(p);} else {  wout=fs.create(p,isOverwrite());} @AT@ 4435 @LENGTH@ 212
------------------INS IfStatement@@if (!isOverwrite() && exists) {  rollStrategies=true;} else {  wout=fs.create(p,isOverwrite());  break;} @TO@ Block@@ElseBody:if (!isOverwrite() && exists) {  rollStrategies=true;} else {  wout=fs.create(p,isOverwrite());  break;} @AT@ 4435 @LENGTH@ 212
---------------------MOV Block@@ElseBody:{  wout=fs.create(p,isOverwrite());} @TO@ IfStatement@@if (!isOverwrite() && exists) {  rollStrategies=true;} else {  wout=fs.create(p,isOverwrite());  break;} @AT@ 3523 @LENGTH@ 48
------------------------INS BreakStatement@@ @TO@ Block@@ElseBody:{  wout=fs.create(p,isOverwrite());} @AT@ 4634 @LENGTH@ 6
---------------------INS InfixExpression@@!isOverwrite() && exists @TO@ IfStatement@@if (!isOverwrite() && exists) {  rollStrategies=true;} else {  wout=fs.create(p,isOverwrite());  break;} @AT@ 4439 @LENGTH@ 24
------------------------INS PrefixExpression@@!isOverwrite() @TO@ InfixExpression@@!isOverwrite() && exists @AT@ 4439 @LENGTH@ 14
---------------------------INS Operator@@! @TO@ PrefixExpression@@!isOverwrite() @AT@ 4439 @LENGTH@ 1
---------------------------INS MethodInvocation@@MethodName:isOverwrite:[] @TO@ PrefixExpression@@!isOverwrite() @AT@ 4440 @LENGTH@ 13
------------------------INS Operator@@&& @TO@ InfixExpression@@!isOverwrite() && exists @AT@ 4453 @LENGTH@ 2
------------------------INS SimpleName@@exists @TO@ InfixExpression@@!isOverwrite() && exists @AT@ 4457 @LENGTH@ 6
---------------------INS Block@@ThenBody:{  rollStrategies=true;} @TO@ IfStatement@@if (!isOverwrite() && exists) {  rollStrategies=true;} else {  wout=fs.create(p,isOverwrite());  break;} @AT@ 4465 @LENGTH@ 113
------------------------INS ExpressionStatement@@Assignment:rollStrategies=true @TO@ Block@@ThenBody:{  rollStrategies=true;} @AT@ 4549 @LENGTH@ 22
---------------------------INS Assignment@@rollStrategies=true @TO@ ExpressionStatement@@Assignment:rollStrategies=true @AT@ 4549 @LENGTH@ 21
------------------------------INS SimpleName@@rollStrategies @TO@ Assignment@@rollStrategies=true @AT@ 4549 @LENGTH@ 14
------------------------------INS Operator@@= @TO@ Assignment@@rollStrategies=true @AT@ 4563 @LENGTH@ 1
------------------------------INS BooleanLiteral@@true @TO@ Assignment@@rollStrategies=true @AT@ 4566 @LENGTH@ 4
------------------INS IfStatement@@if (!isOverwrite() && exists) {  rollStrategies=true;} else {  wout=fs.create(p,isOverwrite());  break;} @TO@ Block@@ElseBody:if (!isOverwrite() && exists) {  rollStrategies=true;} else {  wout=fs.create(p,isOverwrite());  break;} @AT@ 4435 @LENGTH@ 212
---------------------MOV Block@@ElseBody:{  wout=fs.create(p,isOverwrite());} @TO@ IfStatement@@if (!isOverwrite() && exists) {  rollStrategies=true;} else {  wout=fs.create(p,isOverwrite());  break;} @AT@ 3523 @LENGTH@ 48
------------------------INS BreakStatement@@ @TO@ Block@@ElseBody:{  wout=fs.create(p,isOverwrite());} @AT@ 4634 @LENGTH@ 6
---------------------INS InfixExpression@@!isOverwrite() && exists @TO@ IfStatement@@if (!isOverwrite() && exists) {  rollStrategies=true;} else {  wout=fs.create(p,isOverwrite());  break;} @AT@ 4439 @LENGTH@ 24
------------------------INS PrefixExpression@@!isOverwrite() @TO@ InfixExpression@@!isOverwrite() && exists @AT@ 4439 @LENGTH@ 14
---------------------------INS Operator@@! @TO@ PrefixExpression@@!isOverwrite() @AT@ 4439 @LENGTH@ 1
---------------------------INS MethodInvocation@@MethodName:isOverwrite:[] @TO@ PrefixExpression@@!isOverwrite() @AT@ 4440 @LENGTH@ 13
------------------------INS Operator@@&& @TO@ InfixExpression@@!isOverwrite() && exists @AT@ 4453 @LENGTH@ 2
------------------------INS SimpleName@@exists @TO@ InfixExpression@@!isOverwrite() && exists @AT@ 4457 @LENGTH@ 6
---------------------INS Block@@ThenBody:{  rollStrategies=true;} @TO@ IfStatement@@if (!isOverwrite() && exists) {  rollStrategies=true;} else {  wout=fs.create(p,isOverwrite());  break;} @AT@ 4465 @LENGTH@ 113
------------------------INS ExpressionStatement@@Assignment:rollStrategies=true @TO@ Block@@ThenBody:{  rollStrategies=true;} @AT@ 4549 @LENGTH@ 22
---------------------------INS Assignment@@rollStrategies=true @TO@ ExpressionStatement@@Assignment:rollStrategies=true @AT@ 4549 @LENGTH@ 21
------------------------------INS SimpleName@@rollStrategies @TO@ Assignment@@rollStrategies=true @AT@ 4549 @LENGTH@ 14
------------------------------INS Operator@@= @TO@ Assignment@@rollStrategies=true @AT@ 4563 @LENGTH@ 1
------------------------------INS BooleanLiteral@@true @TO@ Assignment@@rollStrategies=true @AT@ 4566 @LENGTH@ 4
------------INS VariableDeclarationStatement@@boolean exists=fs.exists(p); @TO@ Block@@SyncBody:{  boolean exists=fs.exists(p);  if (isAppendable() && exists) {    wout=fs.append(p);    break;  } else   if (!isOverwrite() && exists) {    rollStrategies=true;  } else {    wout=fs.create(p,isOverwrite());    break;  }} @AT@ 4315 @LENGTH@ 30
---------------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean exists=fs.exists(p); @AT@ 4315 @LENGTH@ 7
---------------INS VariableDeclarationFragment@@exists=fs.exists(p) @TO@ VariableDeclarationStatement@@boolean exists=fs.exists(p); @AT@ 4323 @LENGTH@ 21
------------------INS SimpleName@@exists @TO@ VariableDeclarationFragment@@exists=fs.exists(p) @AT@ 4323 @LENGTH@ 6
------------------INS MethodInvocation@@fs.exists(p) @TO@ VariableDeclarationFragment@@exists=fs.exists(p) @AT@ 4332 @LENGTH@ 12
---------------------INS SimpleName@@Name:fs @TO@ MethodInvocation@@fs.exists(p) @AT@ 4332 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:exists:[p] @TO@ MethodInvocation@@fs.exists(p) @AT@ 4335 @LENGTH@ 9
------------------------INS SimpleName@@p @TO@ SimpleName@@MethodName:exists:[p] @AT@ 4342 @LENGTH@ 1
---INS VariableDeclarationStatement@@boolean rollStrategies=false; @TO@ DoStatement@@do {  try {    p=getResolvedPath();    if (isAppendable() && p.getFileSystem(getConfiguration()).exists(p)) {      wout=fs.append(p);    } else {      wout=fs.create(p,isOverwrite());    }    break;  } catch (  Exception e) {    getOutputContext().rollStrategies();  }} while (++openAttempt < maxOpenAttempts); @AT@ 4216 @LENGTH@ 31
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean rollStrategies=false; @AT@ 4216 @LENGTH@ 7
------INS VariableDeclarationFragment@@rollStrategies=false @TO@ VariableDeclarationStatement@@boolean rollStrategies=false; @AT@ 4224 @LENGTH@ 22
---------INS SimpleName@@rollStrategies @TO@ VariableDeclarationFragment@@rollStrategies=false @AT@ 4224 @LENGTH@ 14
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@rollStrategies=false @AT@ 4241 @LENGTH@ 5
---INS IfStatement@@if (rollStrategies) {  getOutputContext().rollStrategies();} @TO@ DoStatement@@do {  try {    p=getResolvedPath();    if (isAppendable() && p.getFileSystem(getConfiguration()).exists(p)) {      wout=fs.append(p);    } else {      wout=fs.create(p,isOverwrite());    }    break;  } catch (  Exception e) {    getOutputContext().rollStrategies();  }} while (++openAttempt < maxOpenAttempts); @AT@ 4717 @LENGTH@ 67
------INS SimpleName@@rollStrategies @TO@ IfStatement@@if (rollStrategies) {  getOutputContext().rollStrategies();} @AT@ 4721 @LENGTH@ 14
------INS Block@@ThenBody:{  getOutputContext().rollStrategies();} @TO@ IfStatement@@if (rollStrategies) {  getOutputContext().rollStrategies();} @AT@ 4737 @LENGTH@ 47
---------MOV ExpressionStatement@@MethodInvocation:getOutputContext().rollStrategies() @TO@ Block@@ThenBody:{  getOutputContext().rollStrategies();} @AT@ 3614 @LENGTH@ 36


UPD MethodDeclaration@@public, List<Class[]>, MethodName:listAllTypeConvertersFromTo,  @TO@ public, List<Class<?>[]>, MethodName:listAllTypeConvertersFromTo,  @AT@ 2012 @LENGTH@ 79
---UPD ParameterizedType@@List<Class[]> @TO@ List<Class<?>[]> @AT@ 2019 @LENGTH@ 13
------UPD ArrayType@@Class[] @TO@ Class<?>[] @AT@ 2024 @LENGTH@ 7
---------DEL SimpleType@@Class @AT@ 2024 @LENGTH@ 5
---------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class[] @AT@ 2024 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 2024 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 2030 @LENGTH@ 1


UPD WhileStatement@@while (m.find()) {  counter=Integer.parseInt(m.group(1)) + 1;} @TO@ while (m.find()) {  try {    counter=Integer.parseInt(m.group(1)) + 1;  } catch (  NumberFormatException e) {  }} @AT@ 1975 @LENGTH@ 71
---UPD Block@@WhileBody:{  counter=Integer.parseInt(m.group(1)) + 1;} @TO@ WhileBody:{  try {    counter=Integer.parseInt(m.group(1)) + 1;  } catch (  NumberFormatException e) {  }} @AT@ 1992 @LENGTH@ 54
------INS TryStatement@@try {  counter=Integer.parseInt(m.group(1)) + 1;} catch (NumberFormatException e) {} @TO@ Block@@WhileBody:{  counter=Integer.parseInt(m.group(1)) + 1;} @AT@ 1998 @LENGTH@ 157
---------MOV ExpressionStatement@@Assignment:counter=Integer.parseInt(m.group(1)) + 1 @TO@ TryStatement@@try {  counter=Integer.parseInt(m.group(1)) + 1;} catch (NumberFormatException e) {} @AT@ 1998 @LENGTH@ 43
---------INS CatchClause@@catch (NumberFormatException e) {} @TO@ TryStatement@@try {  counter=Integer.parseInt(m.group(1)) + 1;} catch (NumberFormatException e) {} @AT@ 2059 @LENGTH@ 96
------------INS SingleVariableDeclaration@@NumberFormatException e @TO@ CatchClause@@catch (NumberFormatException e) {} @AT@ 2066 @LENGTH@ 23
---------------INS SimpleType@@NumberFormatException @TO@ SingleVariableDeclaration@@NumberFormatException e @AT@ 2066 @LENGTH@ 21
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NumberFormatException e @AT@ 2088 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(getType().equals(bean.getClass()),"Target bean is not of type of the persistent entity!") @TO@ MethodInvocation:Assert.isTrue(getType().isInstance(bean),"Target bean is not of type of the persistent entity!") @AT@ 11292 @LENGTH@ 105
---UPD MethodInvocation@@Assert.isTrue(getType().equals(bean.getClass()),"Target bean is not of type of the persistent entity!") @TO@ Assert.isTrue(getType().isInstance(bean),"Target bean is not of type of the persistent entity!") @AT@ 11292 @LENGTH@ 104
------UPD SimpleName@@MethodName:isTrue:[getType().equals(bean.getClass()), "Target bean is not of type of the persistent entity!"] @TO@ MethodName:isTrue:[getType().isInstance(bean), "Target bean is not of type of the persistent entity!"] @AT@ 11299 @LENGTH@ 97
---------UPD MethodInvocation@@getType().equals(bean.getClass()) @TO@ getType().isInstance(bean) @AT@ 11306 @LENGTH@ 33
------------UPD SimpleName@@MethodName:equals:[bean.getClass()] @TO@ MethodName:isInstance:[bean] @AT@ 11316 @LENGTH@ 23
---------------DEL MethodInvocation@@bean.getClass() @AT@ 11323 @LENGTH@ 15
------------------DEL SimpleName@@Name:bean @AT@ 11323 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getClass:[] @AT@ 11328 @LENGTH@ 10
---------------INS SimpleName@@bean @TO@ SimpleName@@MethodName:equals:[bean.getClass()] @AT@ 11327 @LENGTH@ 4


UPD FieldDeclaration@@private, ChannelBuffer, [buf] @TO@ private, ByteBuf, [buf] @AT@ 1305 @LENGTH@ 26
---UPD SimpleType@@ChannelBuffer @TO@ ByteBuf @AT@ 1313 @LENGTH@ 13


UPD IfStatement@@if (!Util.isDistinct(fieldNames)) {  String msg="Select list contains multiple expressions with the same name." + fieldNames;  throw new OptiqSemanticException(msg);} @TO@ if (fieldNames != null && !Util.isDistinct(fieldNames)) {  String msg="Select list contains multiple expressions with the same name." + fieldNames;  throw new OptiqSemanticException(msg);} @AT@ 3363 @LENGTH@ 183
---INS InfixExpression@@fieldNames != null && !Util.isDistinct(fieldNames) @TO@ IfStatement@@if (!Util.isDistinct(fieldNames)) {  String msg="Select list contains multiple expressions with the same name." + fieldNames;  throw new OptiqSemanticException(msg);} @AT@ 3367 @LENGTH@ 50
------MOV PrefixExpression@@!Util.isDistinct(fieldNames) @TO@ InfixExpression@@fieldNames != null && !Util.isDistinct(fieldNames) @AT@ 3367 @LENGTH@ 28
------INS InfixExpression@@fieldNames != null @TO@ InfixExpression@@fieldNames != null && !Util.isDistinct(fieldNames) @AT@ 3367 @LENGTH@ 18
---------INS SimpleName@@fieldNames @TO@ InfixExpression@@fieldNames != null @AT@ 3367 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@fieldNames != null @AT@ 3377 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@fieldNames != null @AT@ 3381 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@fieldNames != null && !Util.isDistinct(fieldNames) @AT@ 3385 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithLongExpiration, Exception,  @TO@ TypeDeclaration@@[public]JwtTokenStoreTests,  @AT@ 2516 @LENGTH@ 404
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithLongExpiration, Exception,  @AT@ 2516 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithLongExpiration, Exception,  @AT@ 2523 @LENGTH@ 4
---INS SimpleName@@MethodName:testReadAccessTokenWithLongExpiration @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithLongExpiration, Exception,  @AT@ 2528 @LENGTH@ 37
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithLongExpiration, Exception,  @AT@ 2575 @LENGTH@ 9
---INS VariableDeclarationStatement@@DefaultOAuth2AccessToken token=new DefaultOAuth2AccessToken(expectedOAuth2AccessToken); @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithLongExpiration, Exception,  @AT@ 2589 @LENGTH@ 89
------INS SimpleType@@DefaultOAuth2AccessToken @TO@ VariableDeclarationStatement@@DefaultOAuth2AccessToken token=new DefaultOAuth2AccessToken(expectedOAuth2AccessToken); @AT@ 2589 @LENGTH@ 24
------INS VariableDeclarationFragment@@token=new DefaultOAuth2AccessToken(expectedOAuth2AccessToken) @TO@ VariableDeclarationStatement@@DefaultOAuth2AccessToken token=new DefaultOAuth2AccessToken(expectedOAuth2AccessToken); @AT@ 2614 @LENGTH@ 63
---------INS SimpleName@@token @TO@ VariableDeclarationFragment@@token=new DefaultOAuth2AccessToken(expectedOAuth2AccessToken) @AT@ 2614 @LENGTH@ 5
---------INS ClassInstanceCreation@@DefaultOAuth2AccessToken[expectedOAuth2AccessToken] @TO@ VariableDeclarationFragment@@token=new DefaultOAuth2AccessToken(expectedOAuth2AccessToken) @AT@ 2622 @LENGTH@ 55
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken[expectedOAuth2AccessToken] @AT@ 2622 @LENGTH@ 3
------------INS SimpleType@@DefaultOAuth2AccessToken @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken[expectedOAuth2AccessToken] @AT@ 2626 @LENGTH@ 24
------------INS SimpleName@@expectedOAuth2AccessToken @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken[expectedOAuth2AccessToken] @AT@ 2651 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:token.setExpiration(new Date(Long.MAX_VALUE - 1)) @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithLongExpiration, Exception,  @AT@ 2681 @LENGTH@ 48
------INS MethodInvocation@@token.setExpiration(new Date(Long.MAX_VALUE - 1)) @TO@ ExpressionStatement@@MethodInvocation:token.setExpiration(new Date(Long.MAX_VALUE - 1)) @AT@ 2681 @LENGTH@ 47
---------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.setExpiration(new Date(Long.MAX_VALUE - 1)) @AT@ 2681 @LENGTH@ 5
---------INS SimpleName@@MethodName:setExpiration:[new Date(Long.MAX_VALUE - 1)] @TO@ MethodInvocation@@token.setExpiration(new Date(Long.MAX_VALUE - 1)) @AT@ 2687 @LENGTH@ 41
------------INS ClassInstanceCreation@@Date[Long.MAX_VALUE - 1] @TO@ SimpleName@@MethodName:setExpiration:[new Date(Long.MAX_VALUE - 1)] @AT@ 2701 @LENGTH@ 26
---------------INS New@@new @TO@ ClassInstanceCreation@@Date[Long.MAX_VALUE - 1] @AT@ 2701 @LENGTH@ 3
---------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[Long.MAX_VALUE - 1] @AT@ 2705 @LENGTH@ 4
---------------INS InfixExpression@@Long.MAX_VALUE - 1 @TO@ ClassInstanceCreation@@Date[Long.MAX_VALUE - 1] @AT@ 2710 @LENGTH@ 16
------------------INS QualifiedName@@Long.MAX_VALUE @TO@ InfixExpression@@Long.MAX_VALUE - 1 @AT@ 2710 @LENGTH@ 14
---------------------INS SimpleName@@Long @TO@ QualifiedName@@Long.MAX_VALUE @AT@ 2710 @LENGTH@ 4
---------------------INS SimpleName@@MAX_VALUE @TO@ QualifiedName@@Long.MAX_VALUE @AT@ 2715 @LENGTH@ 9
------------------INS Operator@@- @TO@ InfixExpression@@Long.MAX_VALUE - 1 @AT@ 2724 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@Long.MAX_VALUE - 1 @AT@ 2725 @LENGTH@ 1
---INS ExpressionStatement@@Assignment:expectedOAuth2AccessToken=enhancer.enhance(token,expectedAuthentication) @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithLongExpiration, Exception,  @AT@ 2732 @LENGTH@ 76
------INS Assignment@@expectedOAuth2AccessToken=enhancer.enhance(token,expectedAuthentication) @TO@ ExpressionStatement@@Assignment:expectedOAuth2AccessToken=enhancer.enhance(token,expectedAuthentication) @AT@ 2732 @LENGTH@ 75
---------INS SimpleName@@expectedOAuth2AccessToken @TO@ Assignment@@expectedOAuth2AccessToken=enhancer.enhance(token,expectedAuthentication) @AT@ 2732 @LENGTH@ 25
---------INS Operator@@= @TO@ Assignment@@expectedOAuth2AccessToken=enhancer.enhance(token,expectedAuthentication) @AT@ 2757 @LENGTH@ 1
---------INS MethodInvocation@@enhancer.enhance(token,expectedAuthentication) @TO@ Assignment@@expectedOAuth2AccessToken=enhancer.enhance(token,expectedAuthentication) @AT@ 2760 @LENGTH@ 47
------------INS SimpleName@@Name:enhancer @TO@ MethodInvocation@@enhancer.enhance(token,expectedAuthentication) @AT@ 2760 @LENGTH@ 8
------------INS SimpleName@@MethodName:enhance:[token, expectedAuthentication] @TO@ MethodInvocation@@enhancer.enhance(token,expectedAuthentication) @AT@ 2769 @LENGTH@ 38
---------------INS SimpleName@@token @TO@ SimpleName@@MethodName:enhance:[token, expectedAuthentication] @AT@ 2777 @LENGTH@ 5
---------------INS SimpleName@@expectedAuthentication @TO@ SimpleName@@MethodName:enhance:[token, expectedAuthentication] @AT@ 2784 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:assertEquals(expectedOAuth2AccessToken,tokenStore.readAccessToken(expectedOAuth2AccessToken.getValue())) @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithLongExpiration, Exception,  @AT@ 2811 @LENGTH@ 106
------INS MethodInvocation@@assertEquals(expectedOAuth2AccessToken,tokenStore.readAccessToken(expectedOAuth2AccessToken.getValue())) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expectedOAuth2AccessToken,tokenStore.readAccessToken(expectedOAuth2AccessToken.getValue())) @AT@ 2811 @LENGTH@ 105
---------INS SimpleName@@MethodName:assertEquals:[expectedOAuth2AccessToken, tokenStore.readAccessToken(expectedOAuth2AccessToken.getValue())] @TO@ MethodInvocation@@assertEquals(expectedOAuth2AccessToken,tokenStore.readAccessToken(expectedOAuth2AccessToken.getValue())) @AT@ 2811 @LENGTH@ 105
------------INS SimpleName@@expectedOAuth2AccessToken @TO@ SimpleName@@MethodName:assertEquals:[expectedOAuth2AccessToken, tokenStore.readAccessToken(expectedOAuth2AccessToken.getValue())] @AT@ 2824 @LENGTH@ 25
------------INS MethodInvocation@@tokenStore.readAccessToken(expectedOAuth2AccessToken.getValue()) @TO@ SimpleName@@MethodName:assertEquals:[expectedOAuth2AccessToken, tokenStore.readAccessToken(expectedOAuth2AccessToken.getValue())] @AT@ 2851 @LENGTH@ 64
---------------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.readAccessToken(expectedOAuth2AccessToken.getValue()) @AT@ 2851 @LENGTH@ 10
---------------INS SimpleName@@MethodName:readAccessToken:[expectedOAuth2AccessToken.getValue()] @TO@ MethodInvocation@@tokenStore.readAccessToken(expectedOAuth2AccessToken.getValue()) @AT@ 2862 @LENGTH@ 53
------------------INS MethodInvocation@@expectedOAuth2AccessToken.getValue() @TO@ SimpleName@@MethodName:readAccessToken:[expectedOAuth2AccessToken.getValue()] @AT@ 2878 @LENGTH@ 36
---------------------INS SimpleName@@Name:expectedOAuth2AccessToken @TO@ MethodInvocation@@expectedOAuth2AccessToken.getValue() @AT@ 2878 @LENGTH@ 25
---------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@expectedOAuth2AccessToken.getValue() @AT@ 2904 @LENGTH@ 10


UPD TypeDeclaration@@[public]FtpConfiguration, RemoteFileConfiguration @TO@ [@UriParams, public]FtpConfiguration, RemoteFileConfiguration @AT@ 904 @LENGTH@ 345
---INS MarkerAnnotation@@@UriParams @TO@ TypeDeclaration@@[public]FtpConfiguration, RemoteFileConfiguration @AT@ 944 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:rootRegistration.registerOperationHandler(TestUtils.SETUP_OP_DEF,new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    final ModelNode model=new ModelNode();
    model.get("profile","profileA","subsystem","subsystem1","attr1").add(1);
    model.get("profile","profileA","subsystem","subsystem1","attr1").add(2);
    model.get("profile","profileA","subsystem","subsystem1","type1","thing1","name").set("Name11");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing1","value").set("201");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing2","name").set("Name12");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing2","value").set("202");
    model.get("profile","profileA","subsystem","subsystem1","type2","other","name").set("Name2");
    model.get("profile","profileA","subsystem","subsystem2","bigdecimal").set(new BigDecimal(100));
    model.get("profile","profileA","subsystem","subsystem2","biginteger").set(new BigInteger("101"));
    model.get("profile","profileA","subsystem","subsystem2","boolean").set(true);
    model.get("profile","profileA","subsystem","subsystem2","bytes").set(new byte[]{1,2,3});
    model.get("profile","profileA","subsystem","subsystem2","double").set(Double.MAX_VALUE);
    model.get("profile","profileA","subsystem","subsystem2","expression").set(new ValueExpression("{expr}"));
    model.get("profile","profileA","subsystem","subsystem2","int").set(102);
    model.get("profile","profileA","subsystem","subsystem2","list").add("l1A");
    model.get("profile","profileA","subsystem","subsystem2","list").add("l1B");
    model.get("profile","profileA","subsystem","subsystem2","long").set(Long.MAX_VALUE);
    model.get("profile","profileA","subsystem","subsystem2","object","value").set("objVal");
    model.get("profile","profileA","subsystem","subsystem2","property").set(new Property("prop1",new ModelNode().set("value1")));
    model.get("profile","profileA","subsystem","subsystem2","string1").set("s1");
    model.get("profile","profileA","subsystem","subsystem2","string2").set("s2");
    model.get("profile","profileA","subsystem","subsystem2","type").set(ModelType.TYPE);
    model.get("profile","profileB","name").set("Profile B");
    model.get("profile","profileC","subsystem","subsystem4");
    model.get("profile","profileC","subsystem","subsystem5","name").set("Test");
    createModel(context,model);
    context.stepCompleted();
  }
}
) @TO@ MethodInvocation:rootRegistration.registerOperationHandler(TestUtils.SETUP_OPERATION_DEF,new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    final ModelNode model=new ModelNode();
    model.get("profile","profileA","subsystem","subsystem1","attr1").add(1);
    model.get("profile","profileA","subsystem","subsystem1","attr1").add(2);
    model.get("profile","profileA","subsystem","subsystem1","type1","thing1","name").set("Name11");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing1","value").set("201");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing2","name").set("Name12");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing2","value").set("202");
    model.get("profile","profileA","subsystem","subsystem1","type2","other","name").set("Name2");
    model.get("profile","profileA","subsystem","subsystem2","bigdecimal").set(new BigDecimal(100));
    model.get("profile","profileA","subsystem","subsystem2","biginteger").set(new BigInteger("101"));
    model.get("profile","profileA","subsystem","subsystem2","boolean").set(true);
    model.get("profile","profileA","subsystem","subsystem2","bytes").set(new byte[]{1,2,3});
    model.get("profile","profileA","subsystem","subsystem2","double").set(Double.MAX_VALUE);
    model.get("profile","profileA","subsystem","subsystem2","expression").set(new ValueExpression("{expr}"));
    model.get("profile","profileA","subsystem","subsystem2","int").set(102);
    model.get("profile","profileA","subsystem","subsystem2","list").add("l1A");
    model.get("profile","profileA","subsystem","subsystem2","list").add("l1B");
    model.get("profile","profileA","subsystem","subsystem2","long").set(Long.MAX_VALUE);
    model.get("profile","profileA","subsystem","subsystem2","object","value").set("objVal");
    model.get("profile","profileA","subsystem","subsystem2","property").set(new Property("prop1",new ModelNode().set("value1")));
    model.get("profile","profileA","subsystem","subsystem2","string1").set("s1");
    model.get("profile","profileA","subsystem","subsystem2","string2").set("s2");
    model.get("profile","profileA","subsystem","subsystem2","type").set(ModelType.TYPE);
    model.get("profile","profileB","name").set("Profile B");
    model.get("profile","profileC","subsystem","subsystem4");
    model.get("profile","profileC","subsystem","subsystem5","name").set("Test");
    createModel(context,model);
    context.stepCompleted();
  }
}
) @AT@ 5971 @LENGTH@ 3388
---UPD MethodInvocation@@rootRegistration.registerOperationHandler(TestUtils.SETUP_OP_DEF,new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    final ModelNode model=new ModelNode();
    model.get("profile","profileA","subsystem","subsystem1","attr1").add(1);
    model.get("profile","profileA","subsystem","subsystem1","attr1").add(2);
    model.get("profile","profileA","subsystem","subsystem1","type1","thing1","name").set("Name11");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing1","value").set("201");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing2","name").set("Name12");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing2","value").set("202");
    model.get("profile","profileA","subsystem","subsystem1","type2","other","name").set("Name2");
    model.get("profile","profileA","subsystem","subsystem2","bigdecimal").set(new BigDecimal(100));
    model.get("profile","profileA","subsystem","subsystem2","biginteger").set(new BigInteger("101"));
    model.get("profile","profileA","subsystem","subsystem2","boolean").set(true);
    model.get("profile","profileA","subsystem","subsystem2","bytes").set(new byte[]{1,2,3});
    model.get("profile","profileA","subsystem","subsystem2","double").set(Double.MAX_VALUE);
    model.get("profile","profileA","subsystem","subsystem2","expression").set(new ValueExpression("{expr}"));
    model.get("profile","profileA","subsystem","subsystem2","int").set(102);
    model.get("profile","profileA","subsystem","subsystem2","list").add("l1A");
    model.get("profile","profileA","subsystem","subsystem2","list").add("l1B");
    model.get("profile","profileA","subsystem","subsystem2","long").set(Long.MAX_VALUE);
    model.get("profile","profileA","subsystem","subsystem2","object","value").set("objVal");
    model.get("profile","profileA","subsystem","subsystem2","property").set(new Property("prop1",new ModelNode().set("value1")));
    model.get("profile","profileA","subsystem","subsystem2","string1").set("s1");
    model.get("profile","profileA","subsystem","subsystem2","string2").set("s2");
    model.get("profile","profileA","subsystem","subsystem2","type").set(ModelType.TYPE);
    model.get("profile","profileB","name").set("Profile B");
    model.get("profile","profileC","subsystem","subsystem4");
    model.get("profile","profileC","subsystem","subsystem5","name").set("Test");
    createModel(context,model);
    context.stepCompleted();
  }
}
) @TO@ rootRegistration.registerOperationHandler(TestUtils.SETUP_OPERATION_DEF,new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    final ModelNode model=new ModelNode();
    model.get("profile","profileA","subsystem","subsystem1","attr1").add(1);
    model.get("profile","profileA","subsystem","subsystem1","attr1").add(2);
    model.get("profile","profileA","subsystem","subsystem1","type1","thing1","name").set("Name11");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing1","value").set("201");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing2","name").set("Name12");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing2","value").set("202");
    model.get("profile","profileA","subsystem","subsystem1","type2","other","name").set("Name2");
    model.get("profile","profileA","subsystem","subsystem2","bigdecimal").set(new BigDecimal(100));
    model.get("profile","profileA","subsystem","subsystem2","biginteger").set(new BigInteger("101"));
    model.get("profile","profileA","subsystem","subsystem2","boolean").set(true);
    model.get("profile","profileA","subsystem","subsystem2","bytes").set(new byte[]{1,2,3});
    model.get("profile","profileA","subsystem","subsystem2","double").set(Double.MAX_VALUE);
    model.get("profile","profileA","subsystem","subsystem2","expression").set(new ValueExpression("{expr}"));
    model.get("profile","profileA","subsystem","subsystem2","int").set(102);
    model.get("profile","profileA","subsystem","subsystem2","list").add("l1A");
    model.get("profile","profileA","subsystem","subsystem2","list").add("l1B");
    model.get("profile","profileA","subsystem","subsystem2","long").set(Long.MAX_VALUE);
    model.get("profile","profileA","subsystem","subsystem2","object","value").set("objVal");
    model.get("profile","profileA","subsystem","subsystem2","property").set(new Property("prop1",new ModelNode().set("value1")));
    model.get("profile","profileA","subsystem","subsystem2","string1").set("s1");
    model.get("profile","profileA","subsystem","subsystem2","string2").set("s2");
    model.get("profile","profileA","subsystem","subsystem2","type").set(ModelType.TYPE);
    model.get("profile","profileB","name").set("Profile B");
    model.get("profile","profileC","subsystem","subsystem4");
    model.get("profile","profileC","subsystem","subsystem5","name").set("Test");
    createModel(context,model);
    context.stepCompleted();
  }
}
) @AT@ 5971 @LENGTH@ 3387
------UPD SimpleName@@MethodName:registerOperationHandler:[TestUtils.SETUP_OP_DEF, new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    final ModelNode model=new ModelNode();
    model.get("profile","profileA","subsystem","subsystem1","attr1").add(1);
    model.get("profile","profileA","subsystem","subsystem1","attr1").add(2);
    model.get("profile","profileA","subsystem","subsystem1","type1","thing1","name").set("Name11");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing1","value").set("201");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing2","name").set("Name12");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing2","value").set("202");
    model.get("profile","profileA","subsystem","subsystem1","type2","other","name").set("Name2");
    model.get("profile","profileA","subsystem","subsystem2","bigdecimal").set(new BigDecimal(100));
    model.get("profile","profileA","subsystem","subsystem2","biginteger").set(new BigInteger("101"));
    model.get("profile","profileA","subsystem","subsystem2","boolean").set(true);
    model.get("profile","profileA","subsystem","subsystem2","bytes").set(new byte[]{1,2,3});
    model.get("profile","profileA","subsystem","subsystem2","double").set(Double.MAX_VALUE);
    model.get("profile","profileA","subsystem","subsystem2","expression").set(new ValueExpression("{expr}"));
    model.get("profile","profileA","subsystem","subsystem2","int").set(102);
    model.get("profile","profileA","subsystem","subsystem2","list").add("l1A");
    model.get("profile","profileA","subsystem","subsystem2","list").add("l1B");
    model.get("profile","profileA","subsystem","subsystem2","long").set(Long.MAX_VALUE);
    model.get("profile","profileA","subsystem","subsystem2","object","value").set("objVal");
    model.get("profile","profileA","subsystem","subsystem2","property").set(new Property("prop1",new ModelNode().set("value1")));
    model.get("profile","profileA","subsystem","subsystem2","string1").set("s1");
    model.get("profile","profileA","subsystem","subsystem2","string2").set("s2");
    model.get("profile","profileA","subsystem","subsystem2","type").set(ModelType.TYPE);
    model.get("profile","profileB","name").set("Profile B");
    model.get("profile","profileC","subsystem","subsystem4");
    model.get("profile","profileC","subsystem","subsystem5","name").set("Test");
    createModel(context,model);
    context.stepCompleted();
  }
}
] @TO@ MethodName:registerOperationHandler:[TestUtils.SETUP_OPERATION_DEF, new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    final ModelNode model=new ModelNode();
    model.get("profile","profileA","subsystem","subsystem1","attr1").add(1);
    model.get("profile","profileA","subsystem","subsystem1","attr1").add(2);
    model.get("profile","profileA","subsystem","subsystem1","type1","thing1","name").set("Name11");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing1","value").set("201");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing2","name").set("Name12");
    model.get("profile","profileA","subsystem","subsystem1","type1","thing2","value").set("202");
    model.get("profile","profileA","subsystem","subsystem1","type2","other","name").set("Name2");
    model.get("profile","profileA","subsystem","subsystem2","bigdecimal").set(new BigDecimal(100));
    model.get("profile","profileA","subsystem","subsystem2","biginteger").set(new BigInteger("101"));
    model.get("profile","profileA","subsystem","subsystem2","boolean").set(true);
    model.get("profile","profileA","subsystem","subsystem2","bytes").set(new byte[]{1,2,3});
    model.get("profile","profileA","subsystem","subsystem2","double").set(Double.MAX_VALUE);
    model.get("profile","profileA","subsystem","subsystem2","expression").set(new ValueExpression("{expr}"));
    model.get("profile","profileA","subsystem","subsystem2","int").set(102);
    model.get("profile","profileA","subsystem","subsystem2","list").add("l1A");
    model.get("profile","profileA","subsystem","subsystem2","list").add("l1B");
    model.get("profile","profileA","subsystem","subsystem2","long").set(Long.MAX_VALUE);
    model.get("profile","profileA","subsystem","subsystem2","object","value").set("objVal");
    model.get("profile","profileA","subsystem","subsystem2","property").set(new Property("prop1",new ModelNode().set("value1")));
    model.get("profile","profileA","subsystem","subsystem2","string1").set("s1");
    model.get("profile","profileA","subsystem","subsystem2","string2").set("s2");
    model.get("profile","profileA","subsystem","subsystem2","type").set(ModelType.TYPE);
    model.get("profile","profileB","name").set("Profile B");
    model.get("profile","profileC","subsystem","subsystem4");
    model.get("profile","profileC","subsystem","subsystem5","name").set("Test");
    createModel(context,model);
    context.stepCompleted();
  }
}
] @AT@ 5988 @LENGTH@ 3370
---------UPD QualifiedName@@TestUtils.SETUP_OP_DEF @TO@ TestUtils.SETUP_OPERATION_DEF @AT@ 6013 @LENGTH@ 22
------------UPD SimpleName@@SETUP_OP_DEF @TO@ SETUP_OPERATION_DEF @AT@ 6023 @LENGTH@ 12


UPD VariableDeclarationStatement@@String value=index > 0 ? pair.substring(index) : null; @TO@ String value=index > 0 ? pair.substring(index + 1) : null; @AT@ 6623 @LENGTH@ 56
---UPD VariableDeclarationFragment@@value=index > 0 ? pair.substring(index) : null @TO@ value=index > 0 ? pair.substring(index + 1) : null @AT@ 6630 @LENGTH@ 48
------UPD ConditionalExpression@@index > 0 ? pair.substring(index) : null @TO@ index > 0 ? pair.substring(index + 1) : null @AT@ 6638 @LENGTH@ 40
---------UPD MethodInvocation@@pair.substring(index) @TO@ pair.substring(index + 1) @AT@ 6650 @LENGTH@ 21
------------UPD SimpleName@@MethodName:substring:[index] @TO@ MethodName:substring:[index + 1] @AT@ 6655 @LENGTH@ 16
---------------INS InfixExpression@@index + 1 @TO@ SimpleName@@MethodName:substring:[index] @AT@ 6665 @LENGTH@ 7
------------------INS SimpleName@@index @TO@ InfixExpression@@index + 1 @AT@ 6665 @LENGTH@ 5
------------------INS Operator@@+ @TO@ InfixExpression@@index + 1 @AT@ 6670 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@index + 1 @AT@ 6671 @LENGTH@ 1
---------------DEL SimpleName@@index @AT@ 6665 @LENGTH@ 5


UPD EnhancedForStatement@@for (ApiMethodModel model : result) {  String uniqueName=model.name.toUpperCase();  Integer suffix=dups.get(uniqueName);  if (suffix == null) {    dups.put(uniqueName,1);  } else {    dups.put(uniqueName,suffix + 1);    StringBuilder builder=new StringBuilder(uniqueName);    builder.append("_").append(suffix);    uniqueName=builder.toString();  }  model.uniqueName=uniqueName;} @TO@ for (ApiMethodModel model : result) {  final String name=model.getName();  final char[] upperCase=new char[name.length()];  final char[] lowerCase=name.toCharArray();  for (int i=0; i < upperCase.length; i++) {    upperCase[i]=Character.toUpperCase(lowerCase[i]);  }  String uniqueName=new String(upperCase);  Integer suffix=dups.get(uniqueName);  if (suffix == null) {    dups.put(uniqueName,1);  } else {    dups.put(uniqueName,suffix + 1);    StringBuilder builder=new StringBuilder(uniqueName);    builder.append("_").append(suffix);    uniqueName=builder.toString();  }  model.uniqueName=uniqueName;} @AT@ 7345 @LENGTH@ 612
---UPD VariableDeclarationStatement@@String uniqueName=model.name.toUpperCase(); @TO@ final String name=model.getName(); @AT@ 7476 @LENGTH@ 45
------INS Modifier@@final @TO@ VariableDeclarationStatement@@String uniqueName=model.name.toUpperCase(); @AT@ 7451 @LENGTH@ 5
------UPD VariableDeclarationFragment@@uniqueName=model.name.toUpperCase() @TO@ name=model.getName() @AT@ 7483 @LENGTH@ 37
---------UPD SimpleName@@uniqueName @TO@ name @AT@ 7483 @LENGTH@ 10
---------UPD MethodInvocation@@model.name.toUpperCase() @TO@ model.getName() @AT@ 7496 @LENGTH@ 24
------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.name.toUpperCase() @AT@ 7471 @LENGTH@ 5
------------DEL QualifiedName@@Name:model.name @AT@ 7496 @LENGTH@ 10
------------UPD SimpleName@@MethodName:toUpperCase:[] @TO@ MethodName:getName:[] @AT@ 7507 @LENGTH@ 13
---INS VariableDeclarationStatement@@final char[] upperCase=new char[name.length()]; @TO@ EnhancedForStatement@@for (ApiMethodModel model : result) {  String uniqueName=model.name.toUpperCase();  Integer suffix=dups.get(uniqueName);  if (suffix == null) {    dups.put(uniqueName,1);  } else {    dups.put(uniqueName,suffix + 1);    StringBuilder builder=new StringBuilder(uniqueName);    builder.append("_").append(suffix);    uniqueName=builder.toString();  }  model.uniqueName=uniqueName;} @AT@ 7500 @LENGTH@ 49
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final char[] upperCase=new char[name.length()]; @AT@ 7500 @LENGTH@ 5
------INS ArrayType@@char[] @TO@ VariableDeclarationStatement@@final char[] upperCase=new char[name.length()]; @AT@ 7506 @LENGTH@ 6
---------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 7506 @LENGTH@ 4
------INS VariableDeclarationFragment@@upperCase=new char[name.length()] @TO@ VariableDeclarationStatement@@final char[] upperCase=new char[name.length()]; @AT@ 7513 @LENGTH@ 35
---------INS SimpleName@@upperCase @TO@ VariableDeclarationFragment@@upperCase=new char[name.length()] @AT@ 7513 @LENGTH@ 9
---------INS ArrayCreation@@new char[name.length()] @TO@ VariableDeclarationFragment@@upperCase=new char[name.length()] @AT@ 7525 @LENGTH@ 23
------------INS ArrayType@@char[] @TO@ ArrayCreation@@new char[name.length()] @AT@ 7529 @LENGTH@ 19
---------------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 7529 @LENGTH@ 4
------------INS MethodInvocation@@name.length() @TO@ ArrayCreation@@new char[name.length()] @AT@ 7534 @LENGTH@ 13
---------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.length() @AT@ 7534 @LENGTH@ 4
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@name.length() @AT@ 7539 @LENGTH@ 8
---INS VariableDeclarationStatement@@final char[] lowerCase=name.toCharArray(); @TO@ EnhancedForStatement@@for (ApiMethodModel model : result) {  String uniqueName=model.name.toUpperCase();  Integer suffix=dups.get(uniqueName);  if (suffix == null) {    dups.put(uniqueName,1);  } else {    dups.put(uniqueName,suffix + 1);    StringBuilder builder=new StringBuilder(uniqueName);    builder.append("_").append(suffix);    uniqueName=builder.toString();  }  model.uniqueName=uniqueName;} @AT@ 7562 @LENGTH@ 44
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final char[] lowerCase=name.toCharArray(); @AT@ 7562 @LENGTH@ 5
------INS ArrayType@@char[] @TO@ VariableDeclarationStatement@@final char[] lowerCase=name.toCharArray(); @AT@ 7568 @LENGTH@ 6
---------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 7568 @LENGTH@ 4
------INS VariableDeclarationFragment@@lowerCase=name.toCharArray() @TO@ VariableDeclarationStatement@@final char[] lowerCase=name.toCharArray(); @AT@ 7575 @LENGTH@ 30
---------INS SimpleName@@lowerCase @TO@ VariableDeclarationFragment@@lowerCase=name.toCharArray() @AT@ 7575 @LENGTH@ 9
---------INS MethodInvocation@@name.toCharArray() @TO@ VariableDeclarationFragment@@lowerCase=name.toCharArray() @AT@ 7587 @LENGTH@ 18
------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.toCharArray() @AT@ 7587 @LENGTH@ 4
------------INS SimpleName@@MethodName:toCharArray:[] @TO@ MethodInvocation@@name.toCharArray() @AT@ 7592 @LENGTH@ 13
---INS ForStatement@@for (int i=0; i < upperCase.length; i++) {  upperCase[i]=Character.toUpperCase(lowerCase[i]);} @TO@ EnhancedForStatement@@for (ApiMethodModel model : result) {  String uniqueName=model.name.toUpperCase();  Integer suffix=dups.get(uniqueName);  if (suffix == null) {    dups.put(uniqueName,1);  } else {    dups.put(uniqueName,suffix + 1);    StringBuilder builder=new StringBuilder(uniqueName);    builder.append("_").append(suffix);    uniqueName=builder.toString();  }  model.uniqueName=uniqueName;} @AT@ 7619 @LENGTH@ 126
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < upperCase.length; i++) {  upperCase[i]=Character.toUpperCase(lowerCase[i]);} @AT@ 7624 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 7624 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 7628 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 7628 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 7632 @LENGTH@ 1
------INS InfixExpression@@i < upperCase.length @TO@ ForStatement@@for (int i=0; i < upperCase.length; i++) {  upperCase[i]=Character.toUpperCase(lowerCase[i]);} @AT@ 7635 @LENGTH@ 20
---------INS SimpleName@@i @TO@ InfixExpression@@i < upperCase.length @AT@ 7635 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < upperCase.length @AT@ 7636 @LENGTH@ 1
---------INS QualifiedName@@upperCase.length @TO@ InfixExpression@@i < upperCase.length @AT@ 7639 @LENGTH@ 16
------------INS SimpleName@@upperCase @TO@ QualifiedName@@upperCase.length @AT@ 7639 @LENGTH@ 9
------------INS SimpleName@@length @TO@ QualifiedName@@upperCase.length @AT@ 7649 @LENGTH@ 6
------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < upperCase.length; i++) {  upperCase[i]=Character.toUpperCase(lowerCase[i]);} @AT@ 7657 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 7657 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 7659 @LENGTH@ 2
------INS ExpressionStatement@@Assignment:upperCase[i]=Character.toUpperCase(lowerCase[i]) @TO@ ForStatement@@for (int i=0; i < upperCase.length; i++) {  upperCase[i]=Character.toUpperCase(lowerCase[i]);} @AT@ 7680 @LENGTH@ 51
---------INS Assignment@@upperCase[i]=Character.toUpperCase(lowerCase[i]) @TO@ ExpressionStatement@@Assignment:upperCase[i]=Character.toUpperCase(lowerCase[i]) @AT@ 7680 @LENGTH@ 50
------------INS ArrayAccess@@upperCase[i] @TO@ Assignment@@upperCase[i]=Character.toUpperCase(lowerCase[i]) @AT@ 7680 @LENGTH@ 12
---------------INS SimpleName@@upperCase @TO@ ArrayAccess@@upperCase[i] @AT@ 7680 @LENGTH@ 9
---------------INS SimpleName@@i @TO@ ArrayAccess@@upperCase[i] @AT@ 7690 @LENGTH@ 1
------------INS Operator@@= @TO@ Assignment@@upperCase[i]=Character.toUpperCase(lowerCase[i]) @AT@ 7692 @LENGTH@ 1
------------INS MethodInvocation@@Character.toUpperCase(lowerCase[i]) @TO@ Assignment@@upperCase[i]=Character.toUpperCase(lowerCase[i]) @AT@ 7695 @LENGTH@ 35
---------------INS SimpleName@@Name:Character @TO@ MethodInvocation@@Character.toUpperCase(lowerCase[i]) @AT@ 7695 @LENGTH@ 9
---------------INS SimpleName@@MethodName:toUpperCase:[lowerCase[i]] @TO@ MethodInvocation@@Character.toUpperCase(lowerCase[i]) @AT@ 7705 @LENGTH@ 25
------------------INS ArrayAccess@@lowerCase[i] @TO@ SimpleName@@MethodName:toUpperCase:[lowerCase[i]] @AT@ 7717 @LENGTH@ 12
---------------------INS SimpleName@@lowerCase @TO@ ArrayAccess@@lowerCase[i] @AT@ 7717 @LENGTH@ 9
---------------------INS SimpleName@@i @TO@ ArrayAccess@@lowerCase[i] @AT@ 7727 @LENGTH@ 1
---INS VariableDeclarationStatement@@String uniqueName=new String(upperCase); @TO@ EnhancedForStatement@@for (ApiMethodModel model : result) {  String uniqueName=model.name.toUpperCase();  Integer suffix=dups.get(uniqueName);  if (suffix == null) {    dups.put(uniqueName,1);  } else {    dups.put(uniqueName,suffix + 1);    StringBuilder builder=new StringBuilder(uniqueName);    builder.append("_").append(suffix);    uniqueName=builder.toString();  }  model.uniqueName=uniqueName;} @AT@ 7758 @LENGTH@ 42
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String uniqueName=new String(upperCase); @AT@ 7758 @LENGTH@ 6
------INS VariableDeclarationFragment@@uniqueName=new String(upperCase) @TO@ VariableDeclarationStatement@@String uniqueName=new String(upperCase); @AT@ 7765 @LENGTH@ 34
---------INS SimpleName@@uniqueName @TO@ VariableDeclarationFragment@@uniqueName=new String(upperCase) @AT@ 7765 @LENGTH@ 10
---------INS ClassInstanceCreation@@String[upperCase] @TO@ VariableDeclarationFragment@@uniqueName=new String(upperCase) @AT@ 7778 @LENGTH@ 21
------------INS New@@new @TO@ ClassInstanceCreation@@String[upperCase] @AT@ 7778 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[upperCase] @AT@ 7782 @LENGTH@ 6
------------INS SimpleName@@upperCase @TO@ ClassInstanceCreation@@String[upperCase] @AT@ 7789 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:setText, String text,  @TO@ TypeDeclaration@@[public, static]SomeContent,  @AT@ 91812 @LENGTH@ 60
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setText, String text,  @AT@ 91812 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setText, String text,  @AT@ 91819 @LENGTH@ 4
---INS SimpleName@@MethodName:setText @TO@ MethodDeclaration@@public, void, MethodName:setText, String text,  @AT@ 91824 @LENGTH@ 7
---INS SingleVariableDeclaration@@String text @TO@ MethodDeclaration@@public, void, MethodName:setText, String text,  @AT@ 91832 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String text @AT@ 91832 @LENGTH@ 6
------INS SimpleName@@text @TO@ SingleVariableDeclaration@@String text @AT@ 91839 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:this.text=text @TO@ MethodDeclaration@@public, void, MethodName:setText, String text,  @AT@ 91850 @LENGTH@ 17
------INS Assignment@@this.text=text @TO@ ExpressionStatement@@Assignment:this.text=text @AT@ 91850 @LENGTH@ 16
---------INS FieldAccess@@this.text @TO@ Assignment@@this.text=text @AT@ 91850 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.text @AT@ 91850 @LENGTH@ 4
------------INS SimpleName@@text @TO@ FieldAccess@@this.text @AT@ 91855 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@this.text=text @AT@ 91859 @LENGTH@ 1
---------INS SimpleName@@text @TO@ Assignment@@this.text=text @AT@ 91862 @LENGTH@ 4


UPD IfStatement@@if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  if (consumer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 7521 @LENGTH@ 371
---UPD Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  if (consumer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 7545 @LENGTH@ 347
------INS IfStatement@@if (consumer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @TO@ Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @AT@ 7750 @LENGTH@ 276
---------INS InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @TO@ IfStatement@@if (consumer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7754 @LENGTH@ 61
------------INS MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @TO@ InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @AT@ 7754 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @AT@ 7754 @LENGTH@ 27
---------------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @AT@ 7754 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getSslContextParameters:[] @TO@ MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @AT@ 7782 @LENGTH@ 25
------------INS Operator@@== @TO@ InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @AT@ 7807 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @AT@ 7811 @LENGTH@ 4
---------INS Block@@ThenBody:{  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @TO@ IfStatement@@if (consumer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7817 @LENGTH@ 209
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7750 @LENGTH@ 89
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7750 @LENGTH@ 89


DEL MethodDeclaration@@private, Object, MethodName:computeParameterValue, JpaParameter parameter, Object value, Object[] values,  @AT@ 3640 @LENGTH@ 112
---DEL Modifier@@private @AT@ 3640 @LENGTH@ 7
---DEL SimpleType@@Object @AT@ 3648 @LENGTH@ 6
---DEL SimpleName@@MethodName:computeParameterValue @AT@ 3655 @LENGTH@ 21
---DEL SingleVariableDeclaration@@JpaParameter parameter @AT@ 3677 @LENGTH@ 22
------DEL SimpleType@@JpaParameter @AT@ 3677 @LENGTH@ 12
------DEL SimpleName@@parameter @AT@ 3690 @LENGTH@ 9
---DEL SingleVariableDeclaration@@Object value @AT@ 3701 @LENGTH@ 12
------DEL SimpleType@@Object @AT@ 3701 @LENGTH@ 6
------DEL SimpleName@@value @AT@ 3708 @LENGTH@ 5
---DEL SingleVariableDeclaration@@Object[] values @AT@ 3715 @LENGTH@ 15
------DEL ArrayType@@Object[] @AT@ 3715 @LENGTH@ 8
---------DEL SimpleType@@Object @AT@ 3715 @LENGTH@ 6
------DEL SimpleName@@values @AT@ 3724 @LENGTH@ 6
---DEL ReturnStatement@@SimpleName:value @AT@ 3736 @LENGTH@ 13
------DEL SimpleName@@value @AT@ 3743 @LENGTH@ 5


INS MethodDeclaration@@Object, MethodName:methodWithPlaceholderInKeyOfJsonStructure, String keyReplacement, String valueReplacement,  @TO@ TypeDeclaration@@[private]SampleRepository,  @AT@ 13004 @LENGTH@ 90
---INS SimpleType@@Object @TO@ MethodDeclaration@@Object, MethodName:methodWithPlaceholderInKeyOfJsonStructure, String keyReplacement, String valueReplacement,  @AT@ 12997 @LENGTH@ 6
---INS SimpleName@@MethodName:methodWithPlaceholderInKeyOfJsonStructure @TO@ MethodDeclaration@@Object, MethodName:methodWithPlaceholderInKeyOfJsonStructure, String keyReplacement, String valueReplacement,  @AT@ 13004 @LENGTH@ 41
---INS SingleVariableDeclaration@@String keyReplacement @TO@ MethodDeclaration@@Object, MethodName:methodWithPlaceholderInKeyOfJsonStructure, String keyReplacement, String valueReplacement,  @AT@ 13046 @LENGTH@ 21
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String keyReplacement @AT@ 13046 @LENGTH@ 6
------INS SimpleName@@keyReplacement @TO@ SingleVariableDeclaration@@String keyReplacement @AT@ 13053 @LENGTH@ 14
---INS SingleVariableDeclaration@@String valueReplacement @TO@ MethodDeclaration@@Object, MethodName:methodWithPlaceholderInKeyOfJsonStructure, String keyReplacement, String valueReplacement,  @AT@ 13069 @LENGTH@ 23
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String valueReplacement @AT@ 13069 @LENGTH@ 6
------INS SimpleName@@valueReplacement @TO@ SingleVariableDeclaration@@String valueReplacement @AT@ 13076 @LENGTH@ 16


UPD ReturnStatement@@ClassInstanceCreation:new OAuth2Request(modifiable,client.getClientId(),client.getAuthorities(),true,this.getScope(),null,null,null,null) @TO@ ClassInstanceCreation:new OAuth2Request(modifiable,client.getClientId(),client.getAuthorities(),true,this.getScope(),client.getResourceIds(),null,null,null) @AT@ 2931 @LENGTH@ 139
---UPD ClassInstanceCreation@@OAuth2Request[modifiable, client.getClientId(), client.getAuthorities(), true, this.getScope(), null, null, null, null] @TO@ OAuth2Request[modifiable, client.getClientId(), client.getAuthorities(), true, this.getScope(), client.getResourceIds(), null, null, null] @AT@ 2938 @LENGTH@ 131
------INS MethodInvocation@@client.getResourceIds() @TO@ ClassInstanceCreation@@OAuth2Request[modifiable, client.getClientId(), client.getAuthorities(), true, this.getScope(), null, null, null, null] @AT@ 3019 @LENGTH@ 23
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getResourceIds() @AT@ 3019 @LENGTH@ 6
---------INS SimpleName@@MethodName:getResourceIds:[] @TO@ MethodInvocation@@client.getResourceIds() @AT@ 3026 @LENGTH@ 16
------DEL NullLiteral@@null @AT@ 3064 @LENGTH@ 4


INS MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), public]JaxbDataFormatTest, OSGiIntegrationTestSupport @AT@ 1880 @LENGTH@ 235
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1880 @LENGTH@ 9
---INS SimpleType@@CamelContext @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1890 @LENGTH@ 12
---INS SimpleName@@MethodName:createCamelContext @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1903 @LENGTH@ 18
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1931 @LENGTH@ 9
---INS VariableDeclarationStatement@@CamelContext context=super.createCamelContext(); @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1951 @LENGTH@ 50
------INS SimpleType@@CamelContext @TO@ VariableDeclarationStatement@@CamelContext context=super.createCamelContext(); @AT@ 1951 @LENGTH@ 12
------INS VariableDeclarationFragment@@context=super.createCamelContext() @TO@ VariableDeclarationStatement@@CamelContext context=super.createCamelContext(); @AT@ 1964 @LENGTH@ 36
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=super.createCamelContext() @AT@ 1964 @LENGTH@ 7
---------INS SuperMethodInvocation@@super.createCamelContext() @TO@ VariableDeclarationFragment@@context=super.createCamelContext() @AT@ 1974 @LENGTH@ 26
------------INS SimpleName@@MethodName:createCamelContext:[] @TO@ SuperMethodInvocation@@super.createCamelContext() @AT@ 1980 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 2010 @LENGTH@ 75
------INS MethodInvocation@@context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @TO@ ExpressionStatement@@MethodInvocation:context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @AT@ 2010 @LENGTH@ 74
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @AT@ 2010 @LENGTH@ 7
---------INS SimpleName@@MethodName:setApplicationContextClassLoader:[this.getClass().getClassLoader()] @TO@ MethodInvocation@@context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @AT@ 2018 @LENGTH@ 66
------------INS MethodInvocation@@this.getClass().getClassLoader() @TO@ SimpleName@@MethodName:setApplicationContextClassLoader:[this.getClass().getClassLoader()] @AT@ 2051 @LENGTH@ 32
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@this.getClass().getClassLoader() @AT@ 2051 @LENGTH@ 15
---------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getClass().getClassLoader() @AT@ 2051 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@this.getClass().getClassLoader() @AT@ 2067 @LENGTH@ 16
---INS ReturnStatement@@SimpleName:context @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 2094 @LENGTH@ 15
------INS SimpleName@@context @TO@ ReturnStatement@@SimpleName:context @AT@ 2101 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:exp=SimpleLanguage.simple("body.getMyArray.length") @TO@ Assignment:exp=SimpleLanguage.simple("body.myArray.length") @AT@ 6624 @LENGTH@ 54
---UPD Assignment@@exp=SimpleLanguage.simple("body.getMyArray.length") @TO@ exp=SimpleLanguage.simple("body.myArray.length") @AT@ 6624 @LENGTH@ 53
------UPD MethodInvocation@@SimpleLanguage.simple("body.getMyArray.length") @TO@ SimpleLanguage.simple("body.myArray.length") @AT@ 6630 @LENGTH@ 47
---------UPD SimpleName@@MethodName:simple:["body.getMyArray.length"] @TO@ MethodName:simple:["body.myArray.length"] @AT@ 6645 @LENGTH@ 32
------------UPD StringLiteral@@"body.getMyArray.length" @TO@ "body.myArray.length" @AT@ 6652 @LENGTH@ 24


UPD MethodDeclaration@@List<Class[]>, MethodName:listAllTypeConvertersFromTo,  @TO@ List<Class<?>[]>, MethodName:listAllTypeConvertersFromTo,  @AT@ 3680 @LENGTH@ 30
---UPD ParameterizedType@@List<Class[]> @TO@ List<Class<?>[]> @AT@ 3666 @LENGTH@ 13
------UPD ArrayType@@Class[] @TO@ Class<?>[] @AT@ 3671 @LENGTH@ 7
---------DEL SimpleType@@Class @AT@ 3671 @LENGTH@ 5
---------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class[] @AT@ 3671 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3671 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3677 @LENGTH@ 1
---------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class[] @AT@ 3671 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3671 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3677 @LENGTH@ 1


DEL ExpressionStatement@@Assignment:cxfRsEndpoint=endpoint @AT@ 2694 @LENGTH@ 25
---DEL Assignment@@cxfRsEndpoint=endpoint @AT@ 2694 @LENGTH@ 24
------DEL SimpleName@@cxfRsEndpoint @AT@ 2694 @LENGTH@ 13
------DEL Operator@@= @AT@ 2707 @LENGTH@ 1
------DEL SimpleName@@endpoint @AT@ 2710 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:((AbstractAuthenticationToken)userAuth).setDetails(parameters) @TO@ MethodDeclaration@@protected, OAuth2Authentication, MethodName:getOAuth2Authentication, ClientDetails client, TokenRequest tokenRequest,  @AT@ 2797 @LENGTH@ 64
---INS MethodInvocation@@((AbstractAuthenticationToken)userAuth).setDetails(parameters) @TO@ ExpressionStatement@@MethodInvocation:((AbstractAuthenticationToken)userAuth).setDetails(parameters) @AT@ 2797 @LENGTH@ 63
------INS ParenthesizedExpression@@((AbstractAuthenticationToken)userAuth) @TO@ MethodInvocation@@((AbstractAuthenticationToken)userAuth).setDetails(parameters) @AT@ 2797 @LENGTH@ 40
---------INS CastExpression@@(AbstractAuthenticationToken)userAuth @TO@ ParenthesizedExpression@@((AbstractAuthenticationToken)userAuth) @AT@ 2798 @LENGTH@ 38
------------INS SimpleType@@AbstractAuthenticationToken @TO@ CastExpression@@(AbstractAuthenticationToken)userAuth @AT@ 2799 @LENGTH@ 27
------------INS SimpleName@@userAuth @TO@ CastExpression@@(AbstractAuthenticationToken)userAuth @AT@ 2828 @LENGTH@ 8
------INS SimpleName@@MethodName:setDetails:[parameters] @TO@ MethodInvocation@@((AbstractAuthenticationToken)userAuth).setDetails(parameters) @AT@ 2838 @LENGTH@ 22
---------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:setDetails:[parameters] @AT@ 2849 @LENGTH@ 10


UPD VariableDeclarationStatement@@ModelControllerClient client=ModelControllerClient.Factory.create("localhost",9999); @TO@ ModelControllerClient client=ModelControllerClient.Factory.create("http-remoting","localhost",9990); @AT@ 6583 @LENGTH@ 87
---UPD VariableDeclarationFragment@@client=ModelControllerClient.Factory.create("localhost",9999) @TO@ client=ModelControllerClient.Factory.create("http-remoting","localhost",9990) @AT@ 6605 @LENGTH@ 64
------UPD MethodInvocation@@ModelControllerClient.Factory.create("localhost",9999) @TO@ ModelControllerClient.Factory.create("http-remoting","localhost",9990) @AT@ 6614 @LENGTH@ 55
---------UPD SimpleName@@MethodName:create:["localhost", 9999] @TO@ MethodName:create:["http-remoting", "localhost", 9990] @AT@ 6644 @LENGTH@ 25
------------UPD NumberLiteral@@9999 @TO@ 9990 @AT@ 6664 @LENGTH@ 4
------------INS StringLiteral@@"http-remoting" @TO@ SimpleName@@MethodName:create:["localhost", 9999] @AT@ 6667 @LENGTH@ 15


INS SuperConstructorInvocation@@super(CxfEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:CxfComponent,  @AT@ 1426 @LENGTH@ 25
---INS TypeLiteral@@CxfEndpoint.class @TO@ SuperConstructorInvocation@@super(CxfEndpoint.class);
 @AT@ 1432 @LENGTH@ 17


INS MethodDeclaration@@protected, void, MethodName:init, AuthenticationManagerBuilder builder,  @TO@ TypeDeclaration@@[@Configuration, public]ResourceServerConfiguration, WebSecurityConfigurerAdapter[Ordered] @AT@ 3983 @LENGTH@ 182
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:init, AuthenticationManagerBuilder builder,  @AT@ 3983 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:init, AuthenticationManagerBuilder builder,  @AT@ 3993 @LENGTH@ 4
---INS SimpleName@@MethodName:init @TO@ MethodDeclaration@@protected, void, MethodName:init, AuthenticationManagerBuilder builder,  @AT@ 3998 @LENGTH@ 4
---INS SingleVariableDeclaration@@AuthenticationManagerBuilder builder @TO@ MethodDeclaration@@protected, void, MethodName:init, AuthenticationManagerBuilder builder,  @AT@ 4003 @LENGTH@ 36
------INS SimpleType@@AuthenticationManagerBuilder @TO@ SingleVariableDeclaration@@AuthenticationManagerBuilder builder @AT@ 4003 @LENGTH@ 28
------INS SimpleName@@builder @TO@ SingleVariableDeclaration@@AuthenticationManagerBuilder builder @AT@ 4032 @LENGTH@ 7
---INS IfStatement@@if (!builder.isConfigured()) {  builder.authenticationProvider(new AnonymousAuthenticationProvider("default"));} @TO@ MethodDeclaration@@protected, void, MethodName:init, AuthenticationManagerBuilder builder,  @AT@ 4045 @LENGTH@ 117
------INS PrefixExpression@@!builder.isConfigured() @TO@ IfStatement@@if (!builder.isConfigured()) {  builder.authenticationProvider(new AnonymousAuthenticationProvider("default"));} @AT@ 4049 @LENGTH@ 23
---------INS Operator@@! @TO@ PrefixExpression@@!builder.isConfigured() @AT@ 4049 @LENGTH@ 1
---------INS MethodInvocation@@builder.isConfigured() @TO@ PrefixExpression@@!builder.isConfigured() @AT@ 4050 @LENGTH@ 22
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.isConfigured() @AT@ 4050 @LENGTH@ 7
------------INS SimpleName@@MethodName:isConfigured:[] @TO@ MethodInvocation@@builder.isConfigured() @AT@ 4058 @LENGTH@ 14
------INS Block@@ThenBody:{  builder.authenticationProvider(new AnonymousAuthenticationProvider("default"));} @TO@ IfStatement@@if (!builder.isConfigured()) {  builder.authenticationProvider(new AnonymousAuthenticationProvider("default"));} @AT@ 4074 @LENGTH@ 88
---------INS ExpressionStatement@@MethodInvocation:builder.authenticationProvider(new AnonymousAuthenticationProvider("default")) @TO@ Block@@ThenBody:{  builder.authenticationProvider(new AnonymousAuthenticationProvider("default"));} @AT@ 4079 @LENGTH@ 79
------------INS MethodInvocation@@builder.authenticationProvider(new AnonymousAuthenticationProvider("default")) @TO@ ExpressionStatement@@MethodInvocation:builder.authenticationProvider(new AnonymousAuthenticationProvider("default")) @AT@ 4079 @LENGTH@ 78
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.authenticationProvider(new AnonymousAuthenticationProvider("default")) @AT@ 4079 @LENGTH@ 7
---------------INS SimpleName@@MethodName:authenticationProvider:[new AnonymousAuthenticationProvider("default")] @TO@ MethodInvocation@@builder.authenticationProvider(new AnonymousAuthenticationProvider("default")) @AT@ 4087 @LENGTH@ 70
------------------INS ClassInstanceCreation@@AnonymousAuthenticationProvider["default"] @TO@ SimpleName@@MethodName:authenticationProvider:[new AnonymousAuthenticationProvider("default")] @AT@ 4110 @LENGTH@ 46
---------------------INS New@@new @TO@ ClassInstanceCreation@@AnonymousAuthenticationProvider["default"] @AT@ 4110 @LENGTH@ 3
---------------------INS SimpleType@@AnonymousAuthenticationProvider @TO@ ClassInstanceCreation@@AnonymousAuthenticationProvider["default"] @AT@ 4114 @LENGTH@ 31
---------------------INS StringLiteral@@"default" @TO@ ClassInstanceCreation@@AnonymousAuthenticationProvider["default"] @AT@ 4146 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read')").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read')").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/clients/([^/].*?)/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @TO@ MethodInvocation:http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read') or hasRole('ROLE_USER')").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read') or hasRole('ROLE_USER')").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/clients/([^/].*?)/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @AT@ 4206 @LENGTH@ 1051
---UPD MethodInvocation@@http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read')").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read')").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/clients/([^/].*?)/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @TO@ http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read') or hasRole('ROLE_USER')").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read') or hasRole('ROLE_USER')").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/clients/([^/].*?)/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @AT@ 4206 @LENGTH@ 1050
------UPD MethodInvocation@@MethodName:access:["#oauth2.hasScope('read')"] @TO@ MethodName:access:["#oauth2.hasScope('read') or hasRole('ROLE_USER')"] @AT@ 4206 @LENGTH@ 474
---------UPD StringLiteral@@"#oauth2.hasScope('read')" @TO@ "#oauth2.hasScope('read') or hasRole('ROLE_USER')" @AT@ 4653 @LENGTH@ 26
------UPD MethodInvocation@@MethodName:access:["#oauth2.hasScope('read')"] @TO@ MethodName:access:["#oauth2.hasScope('read') or hasRole('ROLE_USER')"] @AT@ 4206 @LENGTH@ 258
---------UPD StringLiteral@@"#oauth2.hasScope('read')" @TO@ "#oauth2.hasScope('read') or hasRole('ROLE_USER')" @AT@ 4437 @LENGTH@ 26


UPD IfStatement@@if (file.isDirectory()) {  return true;} @TO@ if (file.isDir()) {  return true;} @AT@ 10487 @LENGTH@ 58
---UPD MethodInvocation@@file.isDirectory() @TO@ file.isDir() @AT@ 10491 @LENGTH@ 18
------UPD SimpleName@@MethodName:isDirectory:[] @TO@ MethodName:isDir:[] @AT@ 10496 @LENGTH@ 13


UPD IfStatement@@if (exchange.getIn().getHeader(Exchange.BEAN_MULTI_PARAMETER_ARRAY) != null) {  multiParameterArray=exchange.getIn().getHeader(Exchange.BEAN_MULTI_PARAMETER_ARRAY,Boolean.class);} @TO@ if (exchange.getIn().getHeader(Exchange.BEAN_MULTI_PARAMETER_ARRAY) != null) {  multiParameterArray=exchange.getIn().getHeader(Exchange.BEAN_MULTI_PARAMETER_ARRAY,Boolean.class);  if (multiParameterArray) {    if (!(body instanceof Object[])) {      body=exchange.getIn().getBody(Object[].class);    }  }} @AT@ 18399 @LENGTH@ 218
---UPD Block@@ThenBody:{  multiParameterArray=exchange.getIn().getHeader(Exchange.BEAN_MULTI_PARAMETER_ARRAY,Boolean.class);} @TO@ ThenBody:{  multiParameterArray=exchange.getIn().getHeader(Exchange.BEAN_MULTI_PARAMETER_ARRAY,Boolean.class);  if (multiParameterArray) {    if (!(body instanceof Object[])) {      body=exchange.getIn().getBody(Object[].class);    }  }} @AT@ 18476 @LENGTH@ 141
------INS IfStatement@@if (multiParameterArray) {  if (!(body instanceof Object[])) {    body=exchange.getIn().getBody(Object[].class);  }} @TO@ Block@@ThenBody:{  multiParameterArray=exchange.getIn().getHeader(Exchange.BEAN_MULTI_PARAMETER_ARRAY,Boolean.class);} @AT@ 18620 @LENGTH@ 285
---------INS SimpleName@@multiParameterArray @TO@ IfStatement@@if (multiParameterArray) {  if (!(body instanceof Object[])) {    body=exchange.getIn().getBody(Object[].class);  }} @AT@ 18624 @LENGTH@ 19
---------INS Block@@ThenBody:{  if (!(body instanceof Object[])) {    body=exchange.getIn().getBody(Object[].class);  }} @TO@ IfStatement@@if (multiParameterArray) {  if (!(body instanceof Object[])) {    body=exchange.getIn().getBody(Object[].class);  }} @AT@ 18645 @LENGTH@ 260
------------INS IfStatement@@if (!(body instanceof Object[])) {  body=exchange.getIn().getBody(Object[].class);} @TO@ Block@@ThenBody:{  if (!(body instanceof Object[])) {    body=exchange.getIn().getBody(Object[].class);  }} @AT@ 18746 @LENGTH@ 137
---------------INS PrefixExpression@@!(body instanceof Object[]) @TO@ IfStatement@@if (!(body instanceof Object[])) {  body=exchange.getIn().getBody(Object[].class);} @AT@ 18750 @LENGTH@ 27
------------------INS Operator@@! @TO@ PrefixExpression@@!(body instanceof Object[]) @AT@ 18750 @LENGTH@ 1
------------------INS ParenthesizedExpression@@(body instanceof Object[]) @TO@ PrefixExpression@@!(body instanceof Object[]) @AT@ 18751 @LENGTH@ 26
---------------------INS InstanceofExpression@@body instanceof Object[] @TO@ ParenthesizedExpression@@(body instanceof Object[]) @AT@ 18752 @LENGTH@ 24
------------------------INS SimpleName@@body @TO@ InstanceofExpression@@body instanceof Object[] @AT@ 18752 @LENGTH@ 4
------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@body instanceof Object[] @AT@ 18757 @LENGTH@ 10
------------------------INS ArrayType@@Object[] @TO@ InstanceofExpression@@body instanceof Object[] @AT@ 18768 @LENGTH@ 8
---------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 18768 @LENGTH@ 6
---------------INS Block@@ThenBody:{  body=exchange.getIn().getBody(Object[].class);} @TO@ IfStatement@@if (!(body instanceof Object[])) {  body=exchange.getIn().getBody(Object[].class);} @AT@ 18779 @LENGTH@ 104
------------------INS ExpressionStatement@@Assignment:body=exchange.getIn().getBody(Object[].class) @TO@ Block@@ThenBody:{  body=exchange.getIn().getBody(Object[].class);} @AT@ 18809 @LENGTH@ 48
---------------------INS Assignment@@body=exchange.getIn().getBody(Object[].class) @TO@ ExpressionStatement@@Assignment:body=exchange.getIn().getBody(Object[].class) @AT@ 18809 @LENGTH@ 47
------------------------INS SimpleName@@body @TO@ Assignment@@body=exchange.getIn().getBody(Object[].class) @AT@ 18809 @LENGTH@ 4
------------------------INS Operator@@= @TO@ Assignment@@body=exchange.getIn().getBody(Object[].class) @AT@ 18813 @LENGTH@ 1
------------------------INS MethodInvocation@@exchange.getIn().getBody(Object[].class) @TO@ Assignment@@body=exchange.getIn().getBody(Object[].class) @AT@ 18816 @LENGTH@ 40
---------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getBody(Object[].class) @AT@ 18816 @LENGTH@ 16
---------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getBody(Object[].class) @AT@ 18816 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:getBody:[Object[].class] @TO@ MethodInvocation@@exchange.getIn().getBody(Object[].class) @AT@ 18833 @LENGTH@ 23
------------------------------INS TypeLiteral@@Object[].class @TO@ SimpleName@@MethodName:getBody:[Object[].class] @AT@ 18841 @LENGTH@ 14


INS MethodDeclaration@@private, void, MethodName:potentiallyAddBinding, String source, List<ParameterBinding> bindings,  @TO@ EnumDeclaration@@[private, static]ParameterBindingParser,  @AT@ 8418 @LENGTH@ 472
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:potentiallyAddBinding, String source, List<ParameterBinding> bindings,  @AT@ 8418 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:potentiallyAddBinding, String source, List<ParameterBinding> bindings,  @AT@ 8426 @LENGTH@ 4
---INS SimpleName@@MethodName:potentiallyAddBinding @TO@ MethodDeclaration@@private, void, MethodName:potentiallyAddBinding, String source, List<ParameterBinding> bindings,  @AT@ 8431 @LENGTH@ 21
---INS SingleVariableDeclaration@@String source @TO@ MethodDeclaration@@private, void, MethodName:potentiallyAddBinding, String source, List<ParameterBinding> bindings,  @AT@ 8453 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String source @AT@ 8453 @LENGTH@ 6
------INS SimpleName@@source @TO@ SingleVariableDeclaration@@String source @AT@ 8460 @LENGTH@ 6
---INS SingleVariableDeclaration@@List<ParameterBinding> bindings @TO@ MethodDeclaration@@private, void, MethodName:potentiallyAddBinding, String source, List<ParameterBinding> bindings,  @AT@ 8468 @LENGTH@ 31
------INS ParameterizedType@@List<ParameterBinding> @TO@ SingleVariableDeclaration@@List<ParameterBinding> bindings @AT@ 8468 @LENGTH@ 22
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ParameterBinding> @AT@ 8468 @LENGTH@ 4
---------INS SimpleType@@ParameterBinding @TO@ ParameterizedType@@List<ParameterBinding> @AT@ 8473 @LENGTH@ 16
------INS SimpleName@@bindings @TO@ SingleVariableDeclaration@@List<ParameterBinding> bindings @AT@ 8491 @LENGTH@ 8
---INS VariableDeclarationStatement@@Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(source); @TO@ MethodDeclaration@@private, void, MethodName:potentiallyAddBinding, String source, List<ParameterBinding> bindings,  @AT@ 8507 @LENGTH@ 65
------INS SimpleType@@Matcher @TO@ VariableDeclarationStatement@@Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(source); @AT@ 8507 @LENGTH@ 7
------INS VariableDeclarationFragment@@valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(source) @TO@ VariableDeclarationStatement@@Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(source); @AT@ 8515 @LENGTH@ 56
---------INS SimpleName@@valueMatcher @TO@ VariableDeclarationFragment@@valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(source) @AT@ 8515 @LENGTH@ 12
---------INS MethodInvocation@@PARSEABLE_BINDING_PATTERN.matcher(source) @TO@ VariableDeclarationFragment@@valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(source) @AT@ 8530 @LENGTH@ 41
------------INS SimpleName@@Name:PARSEABLE_BINDING_PATTERN @TO@ MethodInvocation@@PARSEABLE_BINDING_PATTERN.matcher(source) @AT@ 8530 @LENGTH@ 25
------------INS SimpleName@@MethodName:matcher:[source] @TO@ MethodInvocation@@PARSEABLE_BINDING_PATTERN.matcher(source) @AT@ 8556 @LENGTH@ 15
---------------INS SimpleName@@source @TO@ SimpleName@@MethodName:matcher:[source] @AT@ 8564 @LENGTH@ 6
---INS WhileStatement@@while (valueMatcher.find()) {  int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));  boolean quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\""));  bindings.add(new ParameterBinding(paramIndex,quoted));} @TO@ MethodDeclaration@@private, void, MethodName:potentiallyAddBinding, String source, List<ParameterBinding> bindings,  @AT@ 8577 @LENGTH@ 309
------INS MethodInvocation@@valueMatcher.find() @TO@ WhileStatement@@while (valueMatcher.find()) {  int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));  boolean quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\""));  bindings.add(new ParameterBinding(paramIndex,quoted));} @AT@ 8584 @LENGTH@ 19
---------INS SimpleName@@Name:valueMatcher @TO@ MethodInvocation@@valueMatcher.find() @AT@ 8584 @LENGTH@ 12
---------INS SimpleName@@MethodName:find:[] @TO@ MethodInvocation@@valueMatcher.find() @AT@ 8597 @LENGTH@ 6
------INS Block@@WhileBody:{  int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));  boolean quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\""));  bindings.add(new ParameterBinding(paramIndex,quoted));} @TO@ WhileStatement@@while (valueMatcher.find()) {  int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));  boolean quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\""));  bindings.add(new ParameterBinding(paramIndex,quoted));} @AT@ 8605 @LENGTH@ 281
---------MOV VariableDeclarationStatement@@int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP)); @TO@ Block@@WhileBody:{  int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));  boolean quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\""));  bindings.add(new ParameterBinding(paramIndex,quoted));} @AT@ 7392 @LENGTH@ 77
---------MOV ExpressionStatement@@MethodInvocation:bindings.add(new ParameterBinding(paramIndex,quoted)) @TO@ Block@@WhileBody:{  int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));  boolean quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\""));  bindings.add(new ParameterBinding(paramIndex,quoted));} @AT@ 7608 @LENGTH@ 55
---------INS VariableDeclarationStatement@@boolean quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")); @TO@ Block@@WhileBody:{  int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));  boolean quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\""));  bindings.add(new ParameterBinding(paramIndex,quoted));} @AT@ 8694 @LENGTH@ 126
------------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")); @AT@ 8694 @LENGTH@ 7
------------INS VariableDeclarationFragment@@quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")) @TO@ VariableDeclarationStatement@@boolean quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")); @AT@ 8702 @LENGTH@ 117
---------------INS SimpleName@@quoted @TO@ VariableDeclarationFragment@@quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")) @AT@ 8702 @LENGTH@ 6
---------------INS InfixExpression@@(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")) @TO@ VariableDeclarationFragment@@quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")) @AT@ 8711 @LENGTH@ 108
------------------INS ParenthesizedExpression@@(source.startsWith("'") && source.endsWith("'")) @TO@ InfixExpression@@(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")) @AT@ 8711 @LENGTH@ 48
---------------------INS InfixExpression@@source.startsWith("'") && source.endsWith("'") @TO@ ParenthesizedExpression@@(source.startsWith("'") && source.endsWith("'")) @AT@ 8712 @LENGTH@ 46
------------------------INS MethodInvocation@@source.startsWith("'") @TO@ InfixExpression@@source.startsWith("'") && source.endsWith("'") @AT@ 8712 @LENGTH@ 22
---------------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.startsWith("'") @AT@ 8712 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:startsWith:["'"] @TO@ MethodInvocation@@source.startsWith("'") @AT@ 8719 @LENGTH@ 15
------------------------------INS StringLiteral@@"'" @TO@ SimpleName@@MethodName:startsWith:["'"] @AT@ 8730 @LENGTH@ 3
------------------------INS Operator@@&& @TO@ InfixExpression@@source.startsWith("'") && source.endsWith("'") @AT@ 8734 @LENGTH@ 2
------------------------INS MethodInvocation@@source.endsWith("'") @TO@ InfixExpression@@source.startsWith("'") && source.endsWith("'") @AT@ 8738 @LENGTH@ 20
---------------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.endsWith("'") @AT@ 8738 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:endsWith:["'"] @TO@ MethodInvocation@@source.endsWith("'") @AT@ 8745 @LENGTH@ 13
------------------------------INS StringLiteral@@"'" @TO@ SimpleName@@MethodName:endsWith:["'"] @AT@ 8754 @LENGTH@ 3
------------------INS Operator@@|| @TO@ InfixExpression@@(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")) @AT@ 8759 @LENGTH@ 2
------------------INS ParenthesizedExpression@@(source.startsWith("\"") && source.endsWith("\"")) @TO@ InfixExpression@@(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")) @AT@ 8769 @LENGTH@ 50
---------------------INS InfixExpression@@source.startsWith("\"") && source.endsWith("\"") @TO@ ParenthesizedExpression@@(source.startsWith("\"") && source.endsWith("\"")) @AT@ 8770 @LENGTH@ 48
------------------------INS MethodInvocation@@source.startsWith("\"") @TO@ InfixExpression@@source.startsWith("\"") && source.endsWith("\"") @AT@ 8770 @LENGTH@ 23
---------------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.startsWith("\"") @AT@ 8770 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:startsWith:["\""] @TO@ MethodInvocation@@source.startsWith("\"") @AT@ 8777 @LENGTH@ 16
------------------------------INS StringLiteral@@"\"" @TO@ SimpleName@@MethodName:startsWith:["\""] @AT@ 8788 @LENGTH@ 4
------------------------INS Operator@@&& @TO@ InfixExpression@@source.startsWith("\"") && source.endsWith("\"") @AT@ 8793 @LENGTH@ 2
------------------------INS MethodInvocation@@source.endsWith("\"") @TO@ InfixExpression@@source.startsWith("\"") && source.endsWith("\"") @AT@ 8797 @LENGTH@ 21
---------------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.endsWith("\"") @AT@ 8797 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:endsWith:["\""] @TO@ MethodInvocation@@source.endsWith("\"") @AT@ 8804 @LENGTH@ 14
------------------------------INS StringLiteral@@"\"" @TO@ SimpleName@@MethodName:endsWith:["\""] @AT@ 8813 @LENGTH@ 4


UPD TypeDeclaration@@[public]BigDecimalConverter, [Converter<BigDecimal>] @TO@ [@Component, public]BigDecimalConverter, [Converter<BigDecimal>] @AT@ 972 @LENGTH@ 571
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]BigDecimalConverter, [Converter<BigDecimal>] @AT@ 1022 @LENGTH@ 10


UPD VariableDeclarationStatement@@Option[] options=combine(getDefaultCamelKarafOptions(),loadCamelFeatures("camel-blueprint"),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").build(withBnd())).noStart()); @TO@ Option[] options=combine(getDefaultCamelKarafOptions(),loadCamelFeatures("camel-blueprint"),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build(withBnd())).noStart()); @AT@ 3093 @LENGTH@ 619
---UPD VariableDeclarationFragment@@options=combine(getDefaultCamelKarafOptions(),loadCamelFeatures("camel-blueprint"),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").build(withBnd())).noStart()) @TO@ options=combine(getDefaultCamelKarafOptions(),loadCamelFeatures("camel-blueprint"),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build(withBnd())).noStart()) @AT@ 3102 @LENGTH@ 609
------UPD MethodInvocation@@combine(getDefaultCamelKarafOptions(),loadCamelFeatures("camel-blueprint"),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").build(withBnd())).noStart()) @TO@ combine(getDefaultCamelKarafOptions(),loadCamelFeatures("camel-blueprint"),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build(withBnd())).noStart()) @AT@ 3112 @LENGTH@ 599
---------UPD SimpleName@@MethodName:combine:[getDefaultCamelKarafOptions(), loadCamelFeatures("camel-blueprint"), bundle(newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").build(withBnd())).noStart()] @TO@ MethodName:combine:[getDefaultCamelKarafOptions(), loadCamelFeatures("camel-blueprint"), bundle(newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build(withBnd())).noStart()] @AT@ 3112 @LENGTH@ 599
------------UPD MethodInvocation@@bundle(newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").build(withBnd())).noStart() @TO@ bundle(newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build(withBnd())).noStart() @AT@ 3309 @LENGTH@ 391
---------------UPD MethodInvocation@@MethodName:bundle:[newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").build(withBnd())] @TO@ MethodName:bundle:[newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build(withBnd())] @AT@ 3309 @LENGTH@ 381
------------------UPD MethodInvocation@@newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").build(withBnd()) @TO@ newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build(withBnd()) @AT@ 3316 @LENGTH@ 373
---------------------INS MethodInvocation@@MethodName:set:[Constants.DYNAMICIMPORT_PACKAGE, "*"] @TO@ MethodInvocation@@newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").build(withBnd()) @AT@ 3316 @LENGTH@ 398
------------------------INS QualifiedName@@Constants.DYNAMICIMPORT_PACKAGE @TO@ MethodInvocation@@MethodName:set:[Constants.DYNAMICIMPORT_PACKAGE, "*"] @AT@ 3677 @LENGTH@ 31
---------------------------INS SimpleName@@Constants @TO@ QualifiedName@@Constants.DYNAMICIMPORT_PACKAGE @AT@ 3677 @LENGTH@ 9
---------------------------INS SimpleName@@DYNAMICIMPORT_PACKAGE @TO@ QualifiedName@@Constants.DYNAMICIMPORT_PACKAGE @AT@ 3687 @LENGTH@ 21
------------------------INS StringLiteral@@"*" @TO@ MethodInvocation@@MethodName:set:[Constants.DYNAMICIMPORT_PACKAGE, "*"] @AT@ 3710 @LENGTH@ 3
---------------------INS MethodInvocation@@MethodName:set:[Constants.DYNAMICIMPORT_PACKAGE, "*"] @TO@ MethodInvocation@@newBundle().add("OSGI-INF/blueprint/test.xml",XsltBlueprintRouteTest.class.getResource("XsltBlueprintRouter.xml")).add("transform.xsl",XsltBlueprintRouteTest.class.getResource("transform.xsl")).set(Constants.BUNDLE_SYMBOLICNAME,"XsltBlueprintRouteTest").build(withBnd()) @AT@ 3316 @LENGTH@ 398
------------------------INS QualifiedName@@Constants.DYNAMICIMPORT_PACKAGE @TO@ MethodInvocation@@MethodName:set:[Constants.DYNAMICIMPORT_PACKAGE, "*"] @AT@ 3677 @LENGTH@ 31
---------------------------INS SimpleName@@Constants @TO@ QualifiedName@@Constants.DYNAMICIMPORT_PACKAGE @AT@ 3677 @LENGTH@ 9
---------------------------INS SimpleName@@DYNAMICIMPORT_PACKAGE @TO@ QualifiedName@@Constants.DYNAMICIMPORT_PACKAGE @AT@ 3687 @LENGTH@ 21
------------------------INS StringLiteral@@"*" @TO@ MethodInvocation@@MethodName:set:[Constants.DYNAMICIMPORT_PACKAGE, "*"] @AT@ 3710 @LENGTH@ 3


MOV MethodDeclaration@@public, static, CsvUnmarshaller, MethodName:create, CSVFormat format, CsvDataFormat dataFormat,  @TO@ TypeDeclaration@@[abstract]CsvUnmarshaller,  @AT@ 1397 @LENGTH@ 702


UPD VariableDeclarationStatement@@ResponseEntity<Object> response=controller.executeSearch(resourceInformation,getRequest(parameters),"firstname",null,assembler); @TO@ ResponseEntity<Object> response=controller.executeSearch(resourceInformation,getRequest(parameters),"firstname",new DefaultedPageable(new PageRequest(0,10),true),null,assembler); @AT@ 3599 @LENGTH@ 138
---UPD VariableDeclarationFragment@@response=controller.executeSearch(resourceInformation,getRequest(parameters),"firstname",null,assembler) @TO@ response=controller.executeSearch(resourceInformation,getRequest(parameters),"firstname",new DefaultedPageable(new PageRequest(0,10),true),null,assembler) @AT@ 3622 @LENGTH@ 114
------UPD MethodInvocation@@controller.executeSearch(resourceInformation,getRequest(parameters),"firstname",null,assembler) @TO@ controller.executeSearch(resourceInformation,getRequest(parameters),"firstname",new DefaultedPageable(new PageRequest(0,10),true),null,assembler) @AT@ 3633 @LENGTH@ 103
---------UPD SimpleName@@MethodName:executeSearch:[resourceInformation, getRequest(parameters), "firstname", null, assembler] @TO@ MethodName:executeSearch:[resourceInformation, getRequest(parameters), "firstname", new DefaultedPageable(new PageRequest(0,10),true), null, assembler] @AT@ 3644 @LENGTH@ 92
------------INS ClassInstanceCreation@@DefaultedPageable[new PageRequest(0,10), true] @TO@ SimpleName@@MethodName:executeSearch:[resourceInformation, getRequest(parameters), "firstname", null, assembler] @AT@ 3843 @LENGTH@ 51
---------------INS New@@new @TO@ ClassInstanceCreation@@DefaultedPageable[new PageRequest(0,10), true] @AT@ 3843 @LENGTH@ 3
---------------INS SimpleType@@DefaultedPageable @TO@ ClassInstanceCreation@@DefaultedPageable[new PageRequest(0,10), true] @AT@ 3847 @LENGTH@ 17
---------------INS ClassInstanceCreation@@PageRequest[0, 10] @TO@ ClassInstanceCreation@@DefaultedPageable[new PageRequest(0,10), true] @AT@ 3865 @LENGTH@ 22
------------------INS New@@new @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 3865 @LENGTH@ 3
------------------INS SimpleType@@PageRequest @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 3869 @LENGTH@ 11
------------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 3881 @LENGTH@ 1
------------------INS NumberLiteral@@10 @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 3884 @LENGTH@ 2
---------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@DefaultedPageable[new PageRequest(0,10), true] @AT@ 3889 @LENGTH@ 4


UPD ReturnStatement@@ClassInstanceCreation:new RedisSystemException("Unknown jedis exception",ex) @TO@ NullLiteral:null @AT@ 2183 @LENGTH@ 63
---INS NullLiteral@@null @TO@ ReturnStatement@@ClassInstanceCreation:new RedisSystemException("Unknown jedis exception",ex) @AT@ 2164 @LENGTH@ 4
---DEL ClassInstanceCreation@@RedisSystemException["Unknown jedis exception", ex] @AT@ 2190 @LENGTH@ 55
------DEL New@@new @AT@ 2190 @LENGTH@ 3
------DEL SimpleType@@RedisSystemException @AT@ 2194 @LENGTH@ 20
------DEL StringLiteral@@"Unknown jedis exception" @AT@ 2215 @LENGTH@ 25
------DEL SimpleName@@ex @AT@ 2242 @LENGTH@ 2


UPD TryStatement@@try {  Method method=ObjectHelper.class.getMethod("arrayLength",Object[].class);  ParameterInfo pi=new ParameterInfo(0,Object[].class,null,ExpressionBuilder.mandatoryBodyExpression(Object[].class,true));  List<ParameterInfo> lpi=new ArrayList<ParameterInfo>(1);  lpi.add(pi);  methodInfo=new MethodInfo(exchange.getContext(),pojo.getClass(),method,lpi,lpi,false,false);} catch (NoSuchMethodException e) {  throw new MethodNotFoundException(exchange,pojo,"getClass");} @TO@ try {  Method method=ObjectHelper.class.getMethod("arrayLength",Object[].class);  ParameterInfo pi=new ParameterInfo(0,Object[].class,null,ExpressionBuilder.mandatoryBodyExpression(Object[].class,true));  List<ParameterInfo> lpi=new ArrayList<ParameterInfo>(1);  lpi.add(pi);  methodInfo=new MethodInfo(exchange.getContext(),pojo.getClass(),method,lpi,lpi,false,false);  exchange.getIn().setBody(pojo);} catch (NoSuchMethodException e) {  throw new MethodNotFoundException(exchange,pojo,"getClass");} @AT@ 9933 @LENGTH@ 994
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(pojo) @TO@ TryStatement@@try {  Method method=ObjectHelper.class.getMethod("arrayLength",Object[].class);  ParameterInfo pi=new ParameterInfo(0,Object[].class,null,ExpressionBuilder.mandatoryBodyExpression(Object[].class,true));  List<ParameterInfo> lpi=new ArrayList<ParameterInfo>(1);  lpi.add(pi);  methodInfo=new MethodInfo(exchange.getContext(),pojo.getClass(),method,lpi,lpi,false,false);} catch (NoSuchMethodException e) {  throw new MethodNotFoundException(exchange,pojo,"getClass");} @AT@ 10880 @LENGTH@ 31
------INS MethodInvocation@@exchange.getIn().setBody(pojo) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(pojo) @AT@ 10880 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody(pojo) @AT@ 10880 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody(pojo) @AT@ 10880 @LENGTH@ 8
---------INS SimpleName@@MethodName:setBody:[pojo] @TO@ MethodInvocation@@exchange.getIn().setBody(pojo) @AT@ 10897 @LENGTH@ 13
------------INS SimpleName@@pojo @TO@ SimpleName@@MethodName:setBody:[pojo] @AT@ 10905 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:label=history.getNode().getLabel() @TO@ Assignment:label=URISupport.sanitizeUri(history.getNode().getLabel()) @AT@ 17243 @LENGTH@ 37
---UPD Assignment@@label=history.getNode().getLabel() @TO@ label=URISupport.sanitizeUri(history.getNode().getLabel()) @AT@ 17243 @LENGTH@ 36
------DEL MethodInvocation@@history.getNode().getLabel() @AT@ 17251 @LENGTH@ 28
------INS MethodInvocation@@URISupport.sanitizeUri(history.getNode().getLabel()) @TO@ Assignment@@label=history.getNode().getLabel() @AT@ 17320 @LENGTH@ 52
---------INS SimpleName@@Name:URISupport @TO@ MethodInvocation@@URISupport.sanitizeUri(history.getNode().getLabel()) @AT@ 17320 @LENGTH@ 10
---------INS SimpleName@@MethodName:sanitizeUri:[history.getNode().getLabel()] @TO@ MethodInvocation@@URISupport.sanitizeUri(history.getNode().getLabel()) @AT@ 17331 @LENGTH@ 41
------------INS MethodInvocation@@history.getNode().getLabel() @TO@ SimpleName@@MethodName:sanitizeUri:[history.getNode().getLabel()] @AT@ 17343 @LENGTH@ 28
---------------MOV MethodInvocation@@MethodName:getNode:[] @TO@ MethodInvocation@@history.getNode().getLabel() @AT@ 17251 @LENGTH@ 17
---------------MOV SimpleName@@Name:history @TO@ MethodInvocation@@history.getNode().getLabel() @AT@ 17251 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:getLabel:[] @TO@ MethodInvocation@@history.getNode().getLabel() @AT@ 17269 @LENGTH@ 10


UPD IfStatement@@if ("cxfrs".equals(componentName)) {  return "cxf/jaxrs";} @TO@ if ("cxfrs".equals(componentName)) {  return "cxf/jaxrs";} else if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @AT@ 44419 @LENGTH@ 78
---INS Block@@ElseBody:if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @TO@ IfStatement@@if ("cxfrs".equals(componentName)) {  return "cxf/jaxrs";} @AT@ 44503 @LENGTH@ 251
------INS IfStatement@@if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @TO@ Block@@ElseBody:if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @AT@ 44503 @LENGTH@ 251
---------INS InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @TO@ IfStatement@@if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @AT@ 44507 @LENGTH@ 177
------------INS MethodInvocation@@"gauth".equals(componentName) @TO@ InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @AT@ 44507 @LENGTH@ 29
---------------INS StringLiteral@@"gauth" @TO@ MethodInvocation@@"gauth".equals(componentName) @AT@ 44507 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"gauth".equals(componentName) @AT@ 44515 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44522 @LENGTH@ 13
------------INS Operator@@|| @TO@ InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @AT@ 44536 @LENGTH@ 2
------------INS MethodInvocation@@"ghttp".equals(componentName) @TO@ InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @AT@ 44540 @LENGTH@ 29
---------------INS StringLiteral@@"ghttp" @TO@ MethodInvocation@@"ghttp".equals(componentName) @AT@ 44540 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"ghttp".equals(componentName) @AT@ 44548 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44555 @LENGTH@ 13
------------INS MethodInvocation@@"glogin".equals(componentName) @TO@ InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @AT@ 44573 @LENGTH@ 30
---------------INS StringLiteral@@"glogin" @TO@ MethodInvocation@@"glogin".equals(componentName) @AT@ 44573 @LENGTH@ 8
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"glogin".equals(componentName) @AT@ 44582 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44589 @LENGTH@ 13
------------INS MethodInvocation@@"gmail".equals(componentName) @TO@ InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @AT@ 44622 @LENGTH@ 29
---------------INS StringLiteral@@"gmail" @TO@ MethodInvocation@@"gmail".equals(componentName) @AT@ 44622 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"gmail".equals(componentName) @AT@ 44630 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44637 @LENGTH@ 13
------------INS MethodInvocation@@"gtask".equals(componentName) @TO@ InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @AT@ 44655 @LENGTH@ 29
---------------INS StringLiteral@@"gtask" @TO@ MethodInvocation@@"gtask".equals(componentName) @AT@ 44655 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"gtask".equals(componentName) @AT@ 44663 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44670 @LENGTH@ 13
---------INS Block@@ThenBody:{  return "gae/" + componentName.substring(1);} @TO@ IfStatement@@if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @AT@ 44687 @LENGTH@ 67
------------INS ReturnStatement@@InfixExpression:"gae/" + componentName.substring(1) @TO@ Block@@ThenBody:{  return "gae/" + componentName.substring(1);} @AT@ 44701 @LENGTH@ 43
---------------INS InfixExpression@@"gae/" + componentName.substring(1) @TO@ ReturnStatement@@InfixExpression:"gae/" + componentName.substring(1) @AT@ 44708 @LENGTH@ 35
------------------INS StringLiteral@@"gae/" @TO@ InfixExpression@@"gae/" + componentName.substring(1) @AT@ 44708 @LENGTH@ 6
------------------INS Operator@@+ @TO@ InfixExpression@@"gae/" + componentName.substring(1) @AT@ 44714 @LENGTH@ 1
------------------INS MethodInvocation@@componentName.substring(1) @TO@ InfixExpression@@"gae/" + componentName.substring(1) @AT@ 44717 @LENGTH@ 26
---------------------INS SimpleName@@Name:componentName @TO@ MethodInvocation@@componentName.substring(1) @AT@ 44717 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:substring:[1] @TO@ MethodInvocation@@componentName.substring(1) @AT@ 44731 @LENGTH@ 12
------------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:substring:[1] @AT@ 44741 @LENGTH@ 1
------INS IfStatement@@if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @TO@ Block@@ElseBody:if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @AT@ 44503 @LENGTH@ 251
---------INS InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @TO@ IfStatement@@if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @AT@ 44507 @LENGTH@ 177
------------INS MethodInvocation@@"gauth".equals(componentName) @TO@ InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @AT@ 44507 @LENGTH@ 29
---------------INS StringLiteral@@"gauth" @TO@ MethodInvocation@@"gauth".equals(componentName) @AT@ 44507 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"gauth".equals(componentName) @AT@ 44515 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44522 @LENGTH@ 13
------------INS Operator@@|| @TO@ InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @AT@ 44536 @LENGTH@ 2
------------INS MethodInvocation@@"ghttp".equals(componentName) @TO@ InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @AT@ 44540 @LENGTH@ 29
---------------INS StringLiteral@@"ghttp" @TO@ MethodInvocation@@"ghttp".equals(componentName) @AT@ 44540 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"ghttp".equals(componentName) @AT@ 44548 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44555 @LENGTH@ 13
------------INS MethodInvocation@@"glogin".equals(componentName) @TO@ InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @AT@ 44573 @LENGTH@ 30
---------------INS StringLiteral@@"glogin" @TO@ MethodInvocation@@"glogin".equals(componentName) @AT@ 44573 @LENGTH@ 8
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"glogin".equals(componentName) @AT@ 44582 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44589 @LENGTH@ 13
------------INS MethodInvocation@@"gmail".equals(componentName) @TO@ InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @AT@ 44622 @LENGTH@ 29
---------------INS StringLiteral@@"gmail" @TO@ MethodInvocation@@"gmail".equals(componentName) @AT@ 44622 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"gmail".equals(componentName) @AT@ 44630 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44637 @LENGTH@ 13
------------INS MethodInvocation@@"gtask".equals(componentName) @TO@ InfixExpression@@"gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName) @AT@ 44655 @LENGTH@ 29
---------------INS StringLiteral@@"gtask" @TO@ MethodInvocation@@"gtask".equals(componentName) @AT@ 44655 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[componentName] @TO@ MethodInvocation@@"gtask".equals(componentName) @AT@ 44663 @LENGTH@ 21
------------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:equals:[componentName] @AT@ 44670 @LENGTH@ 13
---------INS Block@@ThenBody:{  return "gae/" + componentName.substring(1);} @TO@ IfStatement@@if ("gauth".equals(componentName) || "ghttp".equals(componentName) || "glogin".equals(componentName)|| "gmail".equals(componentName)|| "gtask".equals(componentName)) {  return "gae/" + componentName.substring(1);} @AT@ 44687 @LENGTH@ 67
------------INS ReturnStatement@@InfixExpression:"gae/" + componentName.substring(1) @TO@ Block@@ThenBody:{  return "gae/" + componentName.substring(1);} @AT@ 44701 @LENGTH@ 43
---------------INS InfixExpression@@"gae/" + componentName.substring(1) @TO@ ReturnStatement@@InfixExpression:"gae/" + componentName.substring(1) @AT@ 44708 @LENGTH@ 35
------------------INS StringLiteral@@"gae/" @TO@ InfixExpression@@"gae/" + componentName.substring(1) @AT@ 44708 @LENGTH@ 6
------------------INS Operator@@+ @TO@ InfixExpression@@"gae/" + componentName.substring(1) @AT@ 44714 @LENGTH@ 1
------------------INS MethodInvocation@@componentName.substring(1) @TO@ InfixExpression@@"gae/" + componentName.substring(1) @AT@ 44717 @LENGTH@ 26
---------------------INS SimpleName@@Name:componentName @TO@ MethodInvocation@@componentName.substring(1) @AT@ 44717 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:substring:[1] @TO@ MethodInvocation@@componentName.substring(1) @AT@ 44731 @LENGTH@ 12
------------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:substring:[1] @AT@ 44741 @LENGTH@ 1


UPD MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @TO@ protected, void, MethodName:initChannel, Channel ch, Exception,  @AT@ 4576 @LENGTH@ 600
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 4525 @LENGTH@ 4
---INS SimpleName@@MethodName:initChannel @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 4530 @LENGTH@ 11
---INS SingleVariableDeclaration@@Channel ch @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 4542 @LENGTH@ 10
------INS SimpleType@@Channel @TO@ SingleVariableDeclaration@@Channel ch @AT@ 4542 @LENGTH@ 7
------INS SimpleName@@ch @TO@ SingleVariableDeclaration@@Channel ch @AT@ 4550 @LENGTH@ 2
---UPD Modifier@@public @TO@ protected @AT@ 4576 @LENGTH@ 6
---DEL SimpleType@@ChannelPipeline @AT@ 4583 @LENGTH@ 15
---DEL SimpleName@@MethodName:getPipeline @AT@ 4599 @LENGTH@ 11
---MOV ExpressionStatement@@Assignment:serverInvoked=true @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 4644 @LENGTH@ 21
---UPD VariableDeclarationStatement@@ChannelPipeline channelPipeline=Channels.pipeline(); @TO@ ChannelPipeline channelPipeline=ch.pipeline(); @AT@ 4679 @LENGTH@ 54
------UPD VariableDeclarationFragment@@channelPipeline=Channels.pipeline() @TO@ channelPipeline=ch.pipeline() @AT@ 4695 @LENGTH@ 37
---------UPD MethodInvocation@@Channels.pipeline() @TO@ ch.pipeline() @AT@ 4713 @LENGTH@ 19
------------UPD SimpleName@@Name:Channels @TO@ Name:ch @AT@ 4713 @LENGTH@ 8
---DEL ReturnStatement@@SimpleName:channelPipeline @AT@ 5143 @LENGTH@ 23
------DEL SimpleName@@channelPipeline @AT@ 5150 @LENGTH@ 15


UPD MethodDeclaration@@TransformersSubRegistration, MethodName:registerSubResource, PathElement element, PathAddressTransformer pathAddressTransformer, ResourceTransformer resourceTransformer, OperationTransformer operationTransformer, boolean inherited, boolean handleAllChildren,  @TO@ TransformersSubRegistration, MethodName:registerSubResource, PathElement element, PathAddressTransformer pathAddressTransformer, ResourceTransformer resourceTransformer, OperationTransformer operationTransformer, boolean inherited, boolean placeholder,  @AT@ 4325 @LENGTH@ 218
---UPD SingleVariableDeclaration@@boolean handleAllChildren @TO@ boolean placeholder @AT@ 4516 @LENGTH@ 25
------UPD SimpleName@@handleAllChildren @TO@ placeholder @AT@ 4524 @LENGTH@ 17


DEL ExpressionStatement@@MethodInvocation:setAccessTokenUri(test.http.getUrl(tokenPath())) @AT@ 8360 @LENGTH@ 49
---DEL MethodInvocation@@setAccessTokenUri(test.http.getUrl(tokenPath())) @AT@ 8360 @LENGTH@ 48
------DEL SimpleName@@MethodName:setAccessTokenUri:[test.http.getUrl(tokenPath())] @AT@ 8360 @LENGTH@ 48
---------DEL MethodInvocation@@test.http.getUrl(tokenPath()) @AT@ 8378 @LENGTH@ 29
------------DEL QualifiedName@@Name:test.http @AT@ 8378 @LENGTH@ 9
------------DEL SimpleName@@MethodName:getUrl:[tokenPath()] @AT@ 8388 @LENGTH@ 19
---------------DEL MethodInvocation@@MethodName:tokenPath:[] @AT@ 8395 @LENGTH@ 11


MOV FieldDeclaration@@public, static, final, String, [PULL_REQUEST_PRODUCER_ENDPOINT="direct:validPullRequest"] @TO@ TypeDeclaration@@[public]ClosePullRequestProducerTest, GitHubComponentTestBase @AT@ 1499 @LENGTH@ 86


INS FieldDeclaration@@private, String, [name] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="dataformat"), public]DataFormatEndpoint, DefaultEndpoint @AT@ 1761 @LENGTH@ 20
---INS Modifier@@private @TO@ FieldDeclaration@@private, String, [name] @AT@ 1761 @LENGTH@ 7
---INS SimpleType@@String @TO@ FieldDeclaration@@private, String, [name] @AT@ 1769 @LENGTH@ 6
---INS VariableDeclarationFragment@@name @TO@ FieldDeclaration@@private, String, [name] @AT@ 1776 @LENGTH@ 4
------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name @AT@ 1776 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:getCamelContext().addService(endpoint) @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2265 @LENGTH@ 39
---INS MethodInvocation@@getCamelContext().addService(endpoint) @TO@ ExpressionStatement@@MethodInvocation:getCamelContext().addService(endpoint) @AT@ 2265 @LENGTH@ 38
------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getCamelContext().addService(endpoint) @AT@ 2265 @LENGTH@ 17
------INS SimpleName@@MethodName:addService:[endpoint] @TO@ MethodInvocation@@getCamelContext().addService(endpoint) @AT@ 2283 @LENGTH@ 20
---------INS SimpleName@@endpoint @TO@ SimpleName@@MethodName:addService:[endpoint] @AT@ 2294 @LENGTH@ 8


UPD IfStatement@@if (existingAccessToken.isExpired()) {  if (existingAccessToken.getRefreshToken() != null) {    refreshToken=existingAccessToken.getRefreshToken();    tokenStore.removeRefreshToken(refreshToken);  }  tokenStore.removeAccessToken(existingAccessToken);} else {  return existingAccessToken;} @TO@ if (existingAccessToken.isExpired()) {  if (existingAccessToken.getRefreshToken() != null) {    refreshToken=existingAccessToken.getRefreshToken();    tokenStore.removeRefreshToken(refreshToken);  }  tokenStore.removeAccessToken(existingAccessToken);} else {  tokenStore.storeAccessToken(existingAccessToken,authentication);  return existingAccessToken;} @AT@ 3572 @LENGTH@ 448
---UPD Block@@ElseBody:{  return existingAccessToken;} @TO@ ElseBody:{  tokenStore.storeAccessToken(existingAccessToken,authentication);  return existingAccessToken;} @AT@ 3982 @LENGTH@ 38
------INS ExpressionStatement@@MethodInvocation:tokenStore.storeAccessToken(existingAccessToken,authentication) @TO@ Block@@ElseBody:{  return existingAccessToken;} @AT@ 4060 @LENGTH@ 65
---------INS MethodInvocation@@tokenStore.storeAccessToken(existingAccessToken,authentication) @TO@ ExpressionStatement@@MethodInvocation:tokenStore.storeAccessToken(existingAccessToken,authentication) @AT@ 4060 @LENGTH@ 64
------------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.storeAccessToken(existingAccessToken,authentication) @AT@ 4060 @LENGTH@ 10
------------INS SimpleName@@MethodName:storeAccessToken:[existingAccessToken, authentication] @TO@ MethodInvocation@@tokenStore.storeAccessToken(existingAccessToken,authentication) @AT@ 4071 @LENGTH@ 53
---------------INS SimpleName@@existingAccessToken @TO@ SimpleName@@MethodName:storeAccessToken:[existingAccessToken, authentication] @AT@ 4088 @LENGTH@ 19
---------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:storeAccessToken:[existingAccessToken, authentication] @AT@ 4109 @LENGTH@ 14


UPD VariableDeclarationStatement@@EntityManager entityManager=exchange.getIn().getHeader(JpaConstants.ENTITYMANAGER,EntityManager.class); @TO@ EntityManager entityManager=exchange.getProperty(JpaConstants.ENTITY_MANAGER,EntityManager.class); @AT@ 1822 @LENGTH@ 106
---UPD VariableDeclarationFragment@@entityManager=exchange.getIn().getHeader(JpaConstants.ENTITYMANAGER,EntityManager.class) @TO@ entityManager=exchange.getProperty(JpaConstants.ENTITY_MANAGER,EntityManager.class) @AT@ 1836 @LENGTH@ 91
------UPD MethodInvocation@@exchange.getIn().getHeader(JpaConstants.ENTITYMANAGER,EntityManager.class) @TO@ exchange.getProperty(JpaConstants.ENTITY_MANAGER,EntityManager.class) @AT@ 1852 @LENGTH@ 75
---------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 1852 @LENGTH@ 16
---------UPD SimpleName@@MethodName:getHeader:[JpaConstants.ENTITYMANAGER, EntityManager.class] @TO@ MethodName:getProperty:[JpaConstants.ENTITY_MANAGER, EntityManager.class] @AT@ 1869 @LENGTH@ 58
------------UPD QualifiedName@@JpaConstants.ENTITYMANAGER @TO@ JpaConstants.ENTITY_MANAGER @AT@ 1879 @LENGTH@ 26
---------------UPD SimpleName@@ENTITYMANAGER @TO@ ENTITY_MANAGER @AT@ 1892 @LENGTH@ 13


UPD VariableDeclarationStatement@@Object value=computeParameterValue(parameter,values[methodParameterPosition],values); @TO@ Object value=values[methodParameterPosition]; @AT@ 2978 @LENGTH@ 89
---UPD VariableDeclarationFragment@@value=computeParameterValue(parameter,values[methodParameterPosition],values) @TO@ value=values[methodParameterPosition] @AT@ 2985 @LENGTH@ 81
------DEL MethodInvocation@@computeParameterValue(parameter,values[methodParameterPosition],values) @AT@ 2993 @LENGTH@ 73
---------DEL SimpleName@@MethodName:computeParameterValue:[parameter, values[methodParameterPosition], values] @AT@ 2993 @LENGTH@ 73
------------DEL SimpleName@@parameter @AT@ 3015 @LENGTH@ 9
------------DEL ArrayAccess@@values[methodParameterPosition] @AT@ 3026 @LENGTH@ 31
------------DEL SimpleName@@values @AT@ 3059 @LENGTH@ 6
------INS ArrayAccess@@values[methodParameterPosition] @TO@ VariableDeclarationFragment@@value=computeParameterValue(parameter,values[methodParameterPosition],values) @AT@ 2993 @LENGTH@ 31
---------MOV SimpleName@@values @TO@ ArrayAccess@@values[methodParameterPosition] @AT@ 3026 @LENGTH@ 6
---------MOV SimpleName@@methodParameterPosition @TO@ ArrayAccess@@values[methodParameterPosition] @AT@ 3033 @LENGTH@ 23


UPD ExpressionStatement@@Assignment:url=url + "?" + query @TO@ Assignment:url=url + "&" + query @AT@ 12295 @LENGTH@ 24
---UPD Assignment@@url=url + "?" + query @TO@ url=url + "&" + query @AT@ 12295 @LENGTH@ 23
------UPD InfixExpression@@url + "?" + query @TO@ url + "&" + query @AT@ 12301 @LENGTH@ 17
---------UPD StringLiteral@@"?" @TO@ "&" @AT@ 12307 @LENGTH@ 3


INS MethodDeclaration@@static, boolean, MethodName:isNullOrEmpty, Object source,  @TO@ TypeDeclaration@@[public]DomainObjectMerger,  @AT@ 4566 @LENGTH@ 299
---INS Modifier@@static @TO@ MethodDeclaration@@static, boolean, MethodName:isNullOrEmpty, Object source,  @AT@ 4566 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@static, boolean, MethodName:isNullOrEmpty, Object source,  @AT@ 4573 @LENGTH@ 7
---INS SimpleName@@MethodName:isNullOrEmpty @TO@ MethodDeclaration@@static, boolean, MethodName:isNullOrEmpty, Object source,  @AT@ 4581 @LENGTH@ 13
---INS SingleVariableDeclaration@@Object source @TO@ MethodDeclaration@@static, boolean, MethodName:isNullOrEmpty, Object source,  @AT@ 4595 @LENGTH@ 13
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object source @AT@ 4595 @LENGTH@ 6
------INS SimpleName@@source @TO@ SingleVariableDeclaration@@Object source @AT@ 4602 @LENGTH@ 6
---INS IfStatement@@if (source == null) {  return true;} @TO@ MethodDeclaration@@static, boolean, MethodName:isNullOrEmpty, Object source,  @AT@ 4615 @LENGTH@ 41
------INS InfixExpression@@source == null @TO@ IfStatement@@if (source == null) {  return true;} @AT@ 4619 @LENGTH@ 14
---------INS SimpleName@@source @TO@ InfixExpression@@source == null @AT@ 4619 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@source == null @AT@ 4625 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@source == null @AT@ 4629 @LENGTH@ 4
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (source == null) {  return true;} @AT@ 4635 @LENGTH@ 21
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 4640 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 4647 @LENGTH@ 4
---INS IfStatement@@if (source instanceof Iterable) {  return !((Iterable<?>)source).iterator().hasNext();} @TO@ MethodDeclaration@@static, boolean, MethodName:isNullOrEmpty, Object source,  @AT@ 4660 @LENGTH@ 93
------INS InstanceofExpression@@source instanceof Iterable @TO@ IfStatement@@if (source instanceof Iterable) {  return !((Iterable<?>)source).iterator().hasNext();} @AT@ 4664 @LENGTH@ 26
---------INS SimpleName@@source @TO@ InstanceofExpression@@source instanceof Iterable @AT@ 4664 @LENGTH@ 6
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@source instanceof Iterable @AT@ 4671 @LENGTH@ 10
---------INS SimpleType@@Iterable @TO@ InstanceofExpression@@source instanceof Iterable @AT@ 4682 @LENGTH@ 8
------INS Block@@ThenBody:{  return !((Iterable<?>)source).iterator().hasNext();} @TO@ IfStatement@@if (source instanceof Iterable) {  return !((Iterable<?>)source).iterator().hasNext();} @AT@ 4692 @LENGTH@ 61
---------INS ReturnStatement@@PrefixExpression:!((Iterable<?>)source).iterator().hasNext() @TO@ Block@@ThenBody:{  return !((Iterable<?>)source).iterator().hasNext();} @AT@ 4697 @LENGTH@ 52
------------INS PrefixExpression@@!((Iterable<?>)source).iterator().hasNext() @TO@ ReturnStatement@@PrefixExpression:!((Iterable<?>)source).iterator().hasNext() @AT@ 4704 @LENGTH@ 44
---------------INS Operator@@! @TO@ PrefixExpression@@!((Iterable<?>)source).iterator().hasNext() @AT@ 4704 @LENGTH@ 1
---------------INS MethodInvocation@@((Iterable<?>)source).iterator().hasNext() @TO@ PrefixExpression@@!((Iterable<?>)source).iterator().hasNext() @AT@ 4705 @LENGTH@ 43
------------------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@((Iterable<?>)source).iterator().hasNext() @AT@ 4705 @LENGTH@ 33
------------------INS ParenthesizedExpression@@((Iterable<?>)source) @TO@ MethodInvocation@@((Iterable<?>)source).iterator().hasNext() @AT@ 4705 @LENGTH@ 22
---------------------INS CastExpression@@(Iterable<?>)source @TO@ ParenthesizedExpression@@((Iterable<?>)source) @AT@ 4706 @LENGTH@ 20
------------------------INS ParameterizedType@@Iterable<?> @TO@ CastExpression@@(Iterable<?>)source @AT@ 4707 @LENGTH@ 11
---------------------------INS SimpleType@@Iterable @TO@ ParameterizedType@@Iterable<?> @AT@ 4707 @LENGTH@ 8
---------------------------INS WildcardType@@? @TO@ ParameterizedType@@Iterable<?> @AT@ 4716 @LENGTH@ 1
------------------------INS SimpleName@@source @TO@ CastExpression@@(Iterable<?>)source @AT@ 4720 @LENGTH@ 6
------------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@((Iterable<?>)source).iterator().hasNext() @AT@ 4739 @LENGTH@ 9
---INS IfStatement@@if (ObjectUtils.isArray(source)) {  return ObjectUtils.isEmpty((Object[])source);} @TO@ MethodDeclaration@@static, boolean, MethodName:isNullOrEmpty, Object source,  @AT@ 4757 @LENGTH@ 88
------INS MethodInvocation@@ObjectUtils.isArray(source) @TO@ IfStatement@@if (ObjectUtils.isArray(source)) {  return ObjectUtils.isEmpty((Object[])source);} @AT@ 4761 @LENGTH@ 27
---------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.isArray(source) @AT@ 4761 @LENGTH@ 11
---------INS SimpleName@@MethodName:isArray:[source] @TO@ MethodInvocation@@ObjectUtils.isArray(source) @AT@ 4773 @LENGTH@ 15
------------INS SimpleName@@source @TO@ SimpleName@@MethodName:isArray:[source] @AT@ 4781 @LENGTH@ 6
------INS Block@@ThenBody:{  return ObjectUtils.isEmpty((Object[])source);} @TO@ IfStatement@@if (ObjectUtils.isArray(source)) {  return ObjectUtils.isEmpty((Object[])source);} @AT@ 4790 @LENGTH@ 55
---------INS ReturnStatement@@MethodInvocation:ObjectUtils.isEmpty((Object[])source) @TO@ Block@@ThenBody:{  return ObjectUtils.isEmpty((Object[])source);} @AT@ 4795 @LENGTH@ 46
------------INS MethodInvocation@@ObjectUtils.isEmpty((Object[])source) @TO@ ReturnStatement@@MethodInvocation:ObjectUtils.isEmpty((Object[])source) @AT@ 4802 @LENGTH@ 38
---------------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.isEmpty((Object[])source) @AT@ 4802 @LENGTH@ 11
---------------INS SimpleName@@MethodName:isEmpty:[(Object[])source] @TO@ MethodInvocation@@ObjectUtils.isEmpty((Object[])source) @AT@ 4814 @LENGTH@ 26
------------------INS CastExpression@@(Object[])source @TO@ SimpleName@@MethodName:isEmpty:[(Object[])source] @AT@ 4822 @LENGTH@ 17
---------------------INS ArrayType@@Object[] @TO@ CastExpression@@(Object[])source @AT@ 4823 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 4823 @LENGTH@ 6
---------------------INS SimpleName@@source @TO@ CastExpression@@(Object[])source @AT@ 4833 @LENGTH@ 6
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@static, boolean, MethodName:isNullOrEmpty, Object source,  @AT@ 4849 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4856 @LENGTH@ 5


UPD TypeDeclaration@@[public]JdbcEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="jdbc"), public]JdbcEndpoint, DefaultEndpoint @AT@ 1104 @LENGTH@ 4643
---INS NormalAnnotation@@@UriEndpoint(scheme="jdbc") @TO@ TypeDeclaration@@[public]JdbcEndpoint, DefaultEndpoint @AT@ 1183 @LENGTH@ 29


UPD TypeDeclaration@@[public]QuartzEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="quartz2",consumerClass=QuartzComponent.class), public]QuartzEndpoint, DefaultEndpoint @AT@ 2021 @LENGTH@ 12558
---INS NormalAnnotation@@@UriEndpoint(scheme="quartz2",consumerClass=QuartzComponent.class) @TO@ TypeDeclaration@@[public]QuartzEndpoint, DefaultEndpoint @AT@ 2100 @LENGTH@ 71


UPD ExpressionStatement@@MethodInvocation:headers.set("Content-Type","application/json") @TO@ MethodInvocation:headers.set("Content-Type","application/javascript") @AT@ 2548 @LENGTH@ 48
---UPD MethodInvocation@@headers.set("Content-Type","application/json") @TO@ headers.set("Content-Type","application/javascript") @AT@ 2548 @LENGTH@ 47
------UPD SimpleName@@MethodName:set:["Content-Type", "application/json"] @TO@ MethodName:set:["Content-Type", "application/javascript"] @AT@ 2556 @LENGTH@ 39
---------UPD StringLiteral@@"application/json" @TO@ "application/javascript" @AT@ 2576 @LENGTH@ 18


UPD FieldDeclaration@@private, final, WeatherConfiguration, [configuration] @TO@ private, WeatherConfiguration, [configuration] @AT@ 1152 @LENGTH@ 49
---DEL Modifier@@final @AT@ 1160 @LENGTH@ 5


INS TypeDeclaration@@[static]Subtype, Entity @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]BasicPersistentEntityUnitTests,  @AT@ 7553 @LENGTH@ 38
---INS Modifier@@static @TO@ TypeDeclaration@@[static]Subtype, Entity @AT@ 7553 @LENGTH@ 6
---INS SimpleName@@ClassName:Subtype @TO@ TypeDeclaration@@[static]Subtype, Entity @AT@ 7566 @LENGTH@ 7
---INS SimpleType@@Entity @TO@ TypeDeclaration@@[static]Subtype, Entity @AT@ 7582 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:answer.setTimerName(name) @TO@ MethodDeclaration@@protected, QuartzEndpoint, MethodName:createEndpoint, final String uri, final String remaining, final Map<String,Object> parameters, Exception,  @AT@ 6590 @LENGTH@ 26
---INS MethodInvocation@@answer.setTimerName(name) @TO@ ExpressionStatement@@MethodInvocation:answer.setTimerName(name) @AT@ 6590 @LENGTH@ 25
------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.setTimerName(name) @AT@ 6590 @LENGTH@ 6
------INS SimpleName@@MethodName:setTimerName:[name] @TO@ MethodInvocation@@answer.setTimerName(name) @AT@ 6597 @LENGTH@ 18
---------INS SimpleName@@name @TO@ SimpleName@@MethodName:setTimerName:[name] @AT@ 6610 @LENGTH@ 4


UPD TypeDeclaration@@[public]LongConverter, [Converter<Long>] @TO@ [@Component, public]LongConverter, [Converter<Long>] @AT@ 937 @LENGTH@ 586
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]LongConverter, [Converter<Long>] @AT@ 987 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:supportsSubtypeInstancesOnPropertyAccessorLookup,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]BasicPersistentEntityUnitTests,  @AT@ 6810 @LENGTH@ 312
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:supportsSubtypeInstancesOnPropertyAccessorLookup,  @AT@ 6810 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:supportsSubtypeInstancesOnPropertyAccessorLookup,  @AT@ 6817 @LENGTH@ 4
---INS SimpleName@@MethodName:supportsSubtypeInstancesOnPropertyAccessorLookup @TO@ MethodDeclaration@@public, void, MethodName:supportsSubtypeInstancesOnPropertyAccessorLookup,  @AT@ 6822 @LENGTH@ 48
---INS VariableDeclarationStatement@@SampleMappingContext context=new SampleMappingContext(); @TO@ MethodDeclaration@@public, void, MethodName:supportsSubtypeInstancesOnPropertyAccessorLookup,  @AT@ 6878 @LENGTH@ 58
------INS SimpleType@@SampleMappingContext @TO@ VariableDeclarationStatement@@SampleMappingContext context=new SampleMappingContext(); @AT@ 6878 @LENGTH@ 20
------INS VariableDeclarationFragment@@context=new SampleMappingContext() @TO@ VariableDeclarationStatement@@SampleMappingContext context=new SampleMappingContext(); @AT@ 6899 @LENGTH@ 36
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=new SampleMappingContext() @AT@ 6899 @LENGTH@ 7
---------INS ClassInstanceCreation@@SampleMappingContext[] @TO@ VariableDeclarationFragment@@context=new SampleMappingContext() @AT@ 6909 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@SampleMappingContext[] @AT@ 6909 @LENGTH@ 3
------------INS SimpleType@@SampleMappingContext @TO@ ClassInstanceCreation@@SampleMappingContext[] @AT@ 6913 @LENGTH@ 20
---INS VariableDeclarationStatement@@PersistentEntity<Object,SamplePersistentProperty> entity=context.getPersistentEntity(Entity.class); @TO@ MethodDeclaration@@public, void, MethodName:supportsSubtypeInstancesOnPropertyAccessorLookup,  @AT@ 6939 @LENGTH@ 102
------INS ParameterizedType@@PersistentEntity<Object,SamplePersistentProperty> @TO@ VariableDeclarationStatement@@PersistentEntity<Object,SamplePersistentProperty> entity=context.getPersistentEntity(Entity.class); @AT@ 6939 @LENGTH@ 50
---------INS SimpleType@@PersistentEntity @TO@ ParameterizedType@@PersistentEntity<Object,SamplePersistentProperty> @AT@ 6939 @LENGTH@ 16
---------INS SimpleType@@Object @TO@ ParameterizedType@@PersistentEntity<Object,SamplePersistentProperty> @AT@ 6956 @LENGTH@ 6
---------INS SimpleType@@SamplePersistentProperty @TO@ ParameterizedType@@PersistentEntity<Object,SamplePersistentProperty> @AT@ 6964 @LENGTH@ 24
------INS VariableDeclarationFragment@@entity=context.getPersistentEntity(Entity.class) @TO@ VariableDeclarationStatement@@PersistentEntity<Object,SamplePersistentProperty> entity=context.getPersistentEntity(Entity.class); @AT@ 6990 @LENGTH@ 50
---------INS SimpleName@@entity @TO@ VariableDeclarationFragment@@entity=context.getPersistentEntity(Entity.class) @AT@ 6990 @LENGTH@ 6
---------INS MethodInvocation@@context.getPersistentEntity(Entity.class) @TO@ VariableDeclarationFragment@@entity=context.getPersistentEntity(Entity.class) @AT@ 6999 @LENGTH@ 41
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(Entity.class) @AT@ 6999 @LENGTH@ 7
------------INS SimpleName@@MethodName:getPersistentEntity:[Entity.class] @TO@ MethodInvocation@@context.getPersistentEntity(Entity.class) @AT@ 7007 @LENGTH@ 33
---------------INS TypeLiteral@@Entity.class @TO@ SimpleName@@MethodName:getPersistentEntity:[Entity.class] @AT@ 7027 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(entity.getPropertyAccessor(new Subtype()),is(notNullValue())) @TO@ MethodDeclaration@@public, void, MethodName:supportsSubtypeInstancesOnPropertyAccessorLookup,  @AT@ 7045 @LENGTH@ 74
------INS MethodInvocation@@assertThat(entity.getPropertyAccessor(new Subtype()),is(notNullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(entity.getPropertyAccessor(new Subtype()),is(notNullValue())) @AT@ 7045 @LENGTH@ 73
---------INS SimpleName@@MethodName:assertThat:[entity.getPropertyAccessor(new Subtype()), is(notNullValue())] @TO@ MethodInvocation@@assertThat(entity.getPropertyAccessor(new Subtype()),is(notNullValue())) @AT@ 7045 @LENGTH@ 73
------------INS MethodInvocation@@entity.getPropertyAccessor(new Subtype()) @TO@ SimpleName@@MethodName:assertThat:[entity.getPropertyAccessor(new Subtype()), is(notNullValue())] @AT@ 7056 @LENGTH@ 41
---------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getPropertyAccessor(new Subtype()) @AT@ 7056 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getPropertyAccessor:[new Subtype()] @TO@ MethodInvocation@@entity.getPropertyAccessor(new Subtype()) @AT@ 7063 @LENGTH@ 34
------------------INS ClassInstanceCreation@@Subtype[] @TO@ SimpleName@@MethodName:getPropertyAccessor:[new Subtype()] @AT@ 7083 @LENGTH@ 13
---------------------INS New@@new @TO@ ClassInstanceCreation@@Subtype[] @AT@ 7083 @LENGTH@ 3
---------------------INS SimpleType@@Subtype @TO@ ClassInstanceCreation@@Subtype[] @AT@ 7087 @LENGTH@ 7
------------INS MethodInvocation@@is(notNullValue()) @TO@ SimpleName@@MethodName:assertThat:[entity.getPropertyAccessor(new Subtype()), is(notNullValue())] @AT@ 7099 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 7099 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 7102 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 7099 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 7102 @LENGTH@ 14


UPD VariableDeclarationStatement@@String value=index > 0 ? null : pair.substring(index); @TO@ String value=index > 0 ? pair.substring(index) : null; @AT@ 6623 @LENGTH@ 56
---UPD VariableDeclarationFragment@@value=index > 0 ? null : pair.substring(index) @TO@ value=index > 0 ? pair.substring(index) : null @AT@ 6630 @LENGTH@ 48
------UPD ConditionalExpression@@index > 0 ? null : pair.substring(index) @TO@ index > 0 ? pair.substring(index) : null @AT@ 6638 @LENGTH@ 40
---------MOV NullLiteral@@null @TO@ ConditionalExpression@@index > 0 ? null : pair.substring(index) @AT@ 6650 @LENGTH@ 4


UPD IfStatement@@if (object instanceof Integer) {  keys=(Integer)object;} @TO@ if (object instanceof Number) {  keys=((Number)object).intValue();} @AT@ 1933 @LENGTH@ 64
---UPD InstanceofExpression@@object instanceof Integer @TO@ object instanceof Number @AT@ 1937 @LENGTH@ 25
------UPD SimpleType@@Integer @TO@ Number @AT@ 1955 @LENGTH@ 7
---UPD Block@@ThenBody:{  keys=(Integer)object;} @TO@ ThenBody:{  keys=((Number)object).intValue();} @AT@ 1964 @LENGTH@ 33
------UPD ExpressionStatement@@Assignment:keys=(Integer)object @TO@ Assignment:keys=((Number)object).intValue() @AT@ 1969 @LENGTH@ 24
---------UPD Assignment@@keys=(Integer)object @TO@ keys=((Number)object).intValue() @AT@ 1969 @LENGTH@ 23
------------DEL CastExpression@@(Integer)object @AT@ 1976 @LENGTH@ 16
------------INS MethodInvocation@@((Number)object).intValue() @TO@ Assignment@@keys=(Integer)object @AT@ 2036 @LENGTH@ 28
---------------INS ParenthesizedExpression@@((Number)object) @TO@ MethodInvocation@@((Number)object).intValue() @AT@ 2036 @LENGTH@ 17
------------------INS CastExpression@@(Number)object @TO@ ParenthesizedExpression@@((Number)object) @AT@ 2037 @LENGTH@ 15
---------------------MOV SimpleType@@Integer @TO@ CastExpression@@(Number)object @AT@ 1977 @LENGTH@ 7
---------------------MOV SimpleName@@object @TO@ CastExpression@@(Number)object @AT@ 1986 @LENGTH@ 6
---------------INS SimpleName@@MethodName:intValue:[] @TO@ MethodInvocation@@((Number)object).intValue() @AT@ 2054 @LENGTH@ 10


UPD IfStatement@@if (remaining.startsWith(CxfConstants.SPRING_CONTEXT_ENDPOINT)) {  String beanId=remaining.substring(CxfConstants.SPRING_CONTEXT_ENDPOINT.length());  if (beanId.startsWith("//")) {    beanId=beanId.substring(2);  }  result=CamelContextHelper.mandatoryLookup(getCamelContext(),beanId,CxfEndpoint.class);  if (getCamelContext().equals(result.getCamelContext())) {    result.setCamelContext(getCamelContext());  }} else {  result=new CxfEndpoint(remaining,this);} @TO@ if (remaining.startsWith(CxfConstants.SPRING_CONTEXT_ENDPOINT)) {  String beanId=remaining.substring(CxfConstants.SPRING_CONTEXT_ENDPOINT.length());  if (beanId.startsWith("//")) {    beanId=beanId.substring(2);  }  result=CamelContextHelper.mandatoryLookup(getCamelContext(),beanId,CxfEndpoint.class);  if (getCamelContext().equals(result.getCamelContext())) {    result.setCamelContext(getCamelContext());  }  result.setBeanId(beanId);} else {  result=new CxfEndpoint(remaining,this);} @AT@ 2304 @LENGTH@ 763
---UPD Block@@ThenBody:{  String beanId=remaining.substring(CxfConstants.SPRING_CONTEXT_ENDPOINT.length());  if (beanId.startsWith("//")) {    beanId=beanId.substring(2);  }  result=CamelContextHelper.mandatoryLookup(getCamelContext(),beanId,CxfEndpoint.class);  if (getCamelContext().equals(result.getCamelContext())) {    result.setCamelContext(getCamelContext());  }} @TO@ ThenBody:{  String beanId=remaining.substring(CxfConstants.SPRING_CONTEXT_ENDPOINT.length());  if (beanId.startsWith("//")) {    beanId=beanId.substring(2);  }  result=CamelContextHelper.mandatoryLookup(getCamelContext(),beanId,CxfEndpoint.class);  if (getCamelContext().equals(result.getCamelContext())) {    result.setCamelContext(getCamelContext());  }  result.setBeanId(beanId);} @AT@ 2368 @LENGTH@ 575
------INS ExpressionStatement@@MethodInvocation:result.setBeanId(beanId) @TO@ Block@@ThenBody:{  String beanId=remaining.substring(CxfConstants.SPRING_CONTEXT_ENDPOINT.length());  if (beanId.startsWith("//")) {    beanId=beanId.substring(2);  }  result=CamelContextHelper.mandatoryLookup(getCamelContext(),beanId,CxfEndpoint.class);  if (getCamelContext().equals(result.getCamelContext())) {    result.setCamelContext(getCamelContext());  }} @AT@ 2934 @LENGTH@ 25
---------INS MethodInvocation@@result.setBeanId(beanId) @TO@ ExpressionStatement@@MethodInvocation:result.setBeanId(beanId) @AT@ 2934 @LENGTH@ 24
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.setBeanId(beanId) @AT@ 2934 @LENGTH@ 6
------------INS SimpleName@@MethodName:setBeanId:[beanId] @TO@ MethodInvocation@@result.setBeanId(beanId) @AT@ 2941 @LENGTH@ 17
---------------INS SimpleName@@beanId @TO@ SimpleName@@MethodName:setBeanId:[beanId] @AT@ 2951 @LENGTH@ 6


DEL MethodDeclaration@@public, void, MethodName:testComponentDocumentation, Exception,  @AT@ 2192 @LENGTH@ 292
---DEL Modifier@@public @AT@ 2192 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2199 @LENGTH@ 4
---DEL SimpleName@@MethodName:testComponentDocumentation @AT@ 2204 @LENGTH@ 26
---DEL SimpleType@@Exception @AT@ 2240 @LENGTH@ 9
---DEL VariableDeclarationStatement@@CamelContext context=new DefaultCamelContext(); @AT@ 2260 @LENGTH@ 49
------DEL SimpleType@@CamelContext @AT@ 2260 @LENGTH@ 12
------DEL VariableDeclarationFragment@@context=new DefaultCamelContext() @AT@ 2273 @LENGTH@ 35
---------DEL SimpleName@@context @AT@ 2273 @LENGTH@ 7
---------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 2283 @LENGTH@ 25
------------DEL New@@new @AT@ 2283 @LENGTH@ 3
------------DEL SimpleType@@DefaultCamelContext @AT@ 2287 @LENGTH@ 19
---DEL VariableDeclarationStatement@@String html=context.getComponentDocumentation("sap-qrfc-destination"); @AT@ 2318 @LENGTH@ 72
------DEL SimpleType@@String @AT@ 2318 @LENGTH@ 6
------DEL VariableDeclarationFragment@@html=context.getComponentDocumentation("sap-qrfc-destination") @AT@ 2325 @LENGTH@ 64
---------DEL SimpleName@@html @AT@ 2325 @LENGTH@ 4
---------DEL MethodInvocation@@context.getComponentDocumentation("sap-qrfc-destination") @AT@ 2332 @LENGTH@ 57
------------DEL SimpleName@@Name:context @AT@ 2332 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponentDocumentation:["sap-qrfc-destination"] @AT@ 2340 @LENGTH@ 49
---------------DEL StringLiteral@@"sap-qrfc-destination" @AT@ 2366 @LENGTH@ 22
---DEL ExpressionStatement@@MethodInvocation:assertNotNull("Should have found some auto-generated HTML if on Java 7",html) @AT@ 2399 @LENGTH@ 79
------DEL MethodInvocation@@assertNotNull("Should have found some auto-generated HTML if on Java 7",html) @AT@ 2399 @LENGTH@ 78
---------DEL SimpleName@@MethodName:assertNotNull:["Should have found some auto-generated HTML if on Java 7", html] @AT@ 2399 @LENGTH@ 78
------------DEL StringLiteral@@"Should have found some auto-generated HTML if on Java 7" @AT@ 2413 @LENGTH@ 57
------------DEL SimpleName@@html @AT@ 2472 @LENGTH@ 4


UPD IfStatement@@if (lastUpdate.after(updated)) {  LOG.debug("Entry is older than lastupdate=[{}], no valid entry=[{}]",lastUpdate,entry);  return false;} @TO@ if (lastUpdate.after(updated) || lastUpdate.equals(updated)) {  LOG.debug("Entry is older than lastupdate=[{}], no valid entry=[{}]",lastUpdate,entry);  return false;} @AT@ 2004 @LENGTH@ 182
---INS InfixExpression@@lastUpdate.after(updated) || lastUpdate.equals(updated) @TO@ IfStatement@@if (lastUpdate.after(updated)) {  LOG.debug("Entry is older than lastupdate=[{}], no valid entry=[{}]",lastUpdate,entry);  return false;} @AT@ 2064 @LENGTH@ 55
------MOV MethodInvocation@@lastUpdate.after(updated) @TO@ InfixExpression@@lastUpdate.after(updated) || lastUpdate.equals(updated) @AT@ 2008 @LENGTH@ 25
------INS Operator@@|| @TO@ InfixExpression@@lastUpdate.after(updated) || lastUpdate.equals(updated) @AT@ 2089 @LENGTH@ 2
------INS MethodInvocation@@lastUpdate.equals(updated) @TO@ InfixExpression@@lastUpdate.after(updated) || lastUpdate.equals(updated) @AT@ 2093 @LENGTH@ 26
---------INS SimpleName@@Name:lastUpdate @TO@ MethodInvocation@@lastUpdate.equals(updated) @AT@ 2093 @LENGTH@ 10
---------INS SimpleName@@MethodName:equals:[updated] @TO@ MethodInvocation@@lastUpdate.equals(updated) @AT@ 2104 @LENGTH@ 15
------------INS SimpleName@@updated @TO@ SimpleName@@MethodName:equals:[updated] @AT@ 2111 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testCalculateDecodedLengthOfTooShort, Exception,  @TO@ TypeDeclaration@@[public]Base64Test,  @AT@ 22821 @LENGTH@ 139
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCalculateDecodedLengthOfTooShort, Exception,  @AT@ 22821 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCalculateDecodedLengthOfTooShort, Exception,  @AT@ 22828 @LENGTH@ 4
---INS SimpleName@@MethodName:testCalculateDecodedLengthOfTooShort @TO@ MethodDeclaration@@public, void, MethodName:testCalculateDecodedLengthOfTooShort, Exception,  @AT@ 22833 @LENGTH@ 36
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testCalculateDecodedLengthOfTooShort, Exception,  @AT@ 22879 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Base64.calculateDecodedLength("=".toCharArray(),0,1) @TO@ MethodDeclaration@@public, void, MethodName:testCalculateDecodedLengthOfTooShort, Exception,  @AT@ 22899 @LENGTH@ 55
------INS MethodInvocation@@Base64.calculateDecodedLength("=".toCharArray(),0,1) @TO@ ExpressionStatement@@MethodInvocation:Base64.calculateDecodedLength("=".toCharArray(),0,1) @AT@ 22899 @LENGTH@ 54
---------INS SimpleName@@Name:Base64 @TO@ MethodInvocation@@Base64.calculateDecodedLength("=".toCharArray(),0,1) @AT@ 22899 @LENGTH@ 6
---------INS SimpleName@@MethodName:calculateDecodedLength:["=".toCharArray(), 0, 1] @TO@ MethodInvocation@@Base64.calculateDecodedLength("=".toCharArray(),0,1) @AT@ 22906 @LENGTH@ 47
------------INS MethodInvocation@@"=".toCharArray() @TO@ SimpleName@@MethodName:calculateDecodedLength:["=".toCharArray(), 0, 1] @AT@ 22929 @LENGTH@ 17
---------------INS StringLiteral@@"=" @TO@ MethodInvocation@@"=".toCharArray() @AT@ 22929 @LENGTH@ 3
---------------INS SimpleName@@MethodName:toCharArray:[] @TO@ MethodInvocation@@"=".toCharArray() @AT@ 22933 @LENGTH@ 13
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:calculateDecodedLength:["=".toCharArray(), 0, 1] @AT@ 22948 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:calculateDecodedLength:["=".toCharArray(), 0, 1] @AT@ 22951 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:doValidateOnModelStage(context,operation) @AT@ 4376 @LENGTH@ 43
---DEL MethodInvocation@@doValidateOnModelStage(context,operation) @AT@ 4376 @LENGTH@ 42
------DEL SimpleName@@MethodName:doValidateOnModelStage:[context, operation] @AT@ 4376 @LENGTH@ 42
---------DEL SimpleName@@context @AT@ 4399 @LENGTH@ 7
---------DEL SimpleName@@operation @AT@ 4408 @LENGTH@ 9


DEL MethodDeclaration@@public, void, MethodName:testCamelContextName, Exception,  @AT@ 1884 @LENGTH@ 523
---DEL Modifier@@public @AT@ 1884 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1891 @LENGTH@ 4
---DEL SimpleName@@MethodName:testCamelContextName @AT@ 1896 @LENGTH@ 20
---DEL SimpleType@@Exception @AT@ 1926 @LENGTH@ 9
---DEL VariableDeclarationStatement@@String name1=context.getName(); @AT@ 2005 @LENGTH@ 33
------DEL SimpleType@@String @AT@ 2005 @LENGTH@ 6
------DEL VariableDeclarationFragment@@name1=context.getName() @AT@ 2012 @LENGTH@ 25
---------DEL SimpleName@@name1 @AT@ 2012 @LENGTH@ 5
---------DEL MethodInvocation@@context.getName() @AT@ 2020 @LENGTH@ 17
------------DEL SimpleName@@Name:context @AT@ 2020 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getName:[] @AT@ 2028 @LENGTH@ 9
---DEL VariableDeclarationStatement@@CamelContext context2=createCamelContext(); @AT@ 2048 @LENGTH@ 45
------DEL SimpleType@@CamelContext @AT@ 2048 @LENGTH@ 12
------DEL VariableDeclarationFragment@@context2=createCamelContext() @AT@ 2061 @LENGTH@ 31
---------DEL SimpleName@@context2 @AT@ 2061 @LENGTH@ 8
---------DEL MethodInvocation@@MethodName:createCamelContext:[] @AT@ 2072 @LENGTH@ 20
---DEL VariableDeclarationStatement@@String name2=context2.getName(); @AT@ 2102 @LENGTH@ 34
------DEL SimpleType@@String @AT@ 2102 @LENGTH@ 6
------DEL VariableDeclarationFragment@@name2=context2.getName() @AT@ 2109 @LENGTH@ 26
---------DEL SimpleName@@name2 @AT@ 2109 @LENGTH@ 5
---------DEL MethodInvocation@@context2.getName() @AT@ 2117 @LENGTH@ 18
------------DEL SimpleName@@Name:context2 @AT@ 2117 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getName:[] @AT@ 2126 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:assertNotSame(name1,name2) @AT@ 2146 @LENGTH@ 28
------DEL MethodInvocation@@assertNotSame(name1,name2) @AT@ 2146 @LENGTH@ 27
---------DEL SimpleName@@MethodName:assertNotSame:[name1, name2] @AT@ 2146 @LENGTH@ 27
------------DEL SimpleName@@name1 @AT@ 2160 @LENGTH@ 5
------------DEL SimpleName@@name2 @AT@ 2167 @LENGTH@ 5
---DEL VariableDeclarationStatement@@String id="" + bundleContext.getBundle().getBundleId(); @AT@ 2184 @LENGTH@ 57
------DEL SimpleType@@String @AT@ 2184 @LENGTH@ 6
------DEL VariableDeclarationFragment@@id="" + bundleContext.getBundle().getBundleId() @AT@ 2191 @LENGTH@ 49
---------DEL SimpleName@@id @AT@ 2191 @LENGTH@ 2
---------DEL InfixExpression@@"" + bundleContext.getBundle().getBundleId() @AT@ 2196 @LENGTH@ 44
------------DEL StringLiteral@@"" @AT@ 2196 @LENGTH@ 2
------------DEL Operator@@+ @AT@ 2198 @LENGTH@ 1
------------DEL MethodInvocation@@bundleContext.getBundle().getBundleId() @AT@ 2201 @LENGTH@ 39
---------------DEL MethodInvocation@@MethodName:getBundle:[] @AT@ 2201 @LENGTH@ 25
---------------DEL SimpleName@@Name:bundleContext @AT@ 2201 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:getBundleId:[] @AT@ 2227 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:assertTrue(name1 + " does not start with " + id,name1.startsWith(id)) @AT@ 2250 @LENGTH@ 71
------DEL MethodInvocation@@assertTrue(name1 + " does not start with " + id,name1.startsWith(id)) @AT@ 2250 @LENGTH@ 70
---------DEL SimpleName@@MethodName:assertTrue:[name1 + " does not start with " + id, name1.startsWith(id)] @AT@ 2250 @LENGTH@ 70
------------DEL InfixExpression@@name1 + " does not start with " + id @AT@ 2261 @LENGTH@ 36
---------------DEL SimpleName@@name1 @AT@ 2261 @LENGTH@ 5
---------------DEL Operator@@+ @AT@ 2266 @LENGTH@ 1
---------------DEL StringLiteral@@" does not start with " @AT@ 2269 @LENGTH@ 23
---------------DEL SimpleName@@id @AT@ 2295 @LENGTH@ 2
------------DEL MethodInvocation@@name1.startsWith(id) @AT@ 2299 @LENGTH@ 20
---------------DEL SimpleName@@Name:name1 @AT@ 2299 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:startsWith:[id] @AT@ 2305 @LENGTH@ 14
------------------DEL SimpleName@@id @AT@ 2316 @LENGTH@ 2
---DEL ExpressionStatement@@MethodInvocation:assertTrue(name2 + " does not start with " + id,name2.startsWith(id)) @AT@ 2330 @LENGTH@ 71
------DEL MethodInvocation@@assertTrue(name2 + " does not start with " + id,name2.startsWith(id)) @AT@ 2330 @LENGTH@ 70
---------DEL SimpleName@@MethodName:assertTrue:[name2 + " does not start with " + id, name2.startsWith(id)] @AT@ 2330 @LENGTH@ 70
------------DEL InfixExpression@@name2 + " does not start with " + id @AT@ 2341 @LENGTH@ 36
---------------DEL SimpleName@@name2 @AT@ 2341 @LENGTH@ 5
---------------DEL Operator@@+ @AT@ 2346 @LENGTH@ 1
---------------DEL StringLiteral@@" does not start with " @AT@ 2349 @LENGTH@ 23
---------------DEL SimpleName@@id @AT@ 2375 @LENGTH@ 2
------------DEL MethodInvocation@@name2.startsWith(id) @AT@ 2379 @LENGTH@ 20
---------------DEL SimpleName@@Name:name2 @AT@ 2379 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:startsWith:[id] @AT@ 2385 @LENGTH@ 14
------------------DEL SimpleName@@id @AT@ 2396 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:buffer.append("\n  }") @TO@ MethodInvocation:buffer.append("\n  },") @AT@ 8739 @LENGTH@ 23
---UPD MethodInvocation@@buffer.append("\n  }") @TO@ buffer.append("\n  },") @AT@ 8739 @LENGTH@ 22
------UPD SimpleName@@MethodName:append:["\n  }"] @TO@ MethodName:append:["\n  },"] @AT@ 8746 @LENGTH@ 15
---------UPD StringLiteral@@"\n  }" @TO@ "\n  }," @AT@ 8753 @LENGTH@ 7


UPD MethodDeclaration@@public, boolean, MethodName:verify, char[] guess, InvalidKeyException,  @TO@ boolean, MethodName:verify, char[] guess, InvalidKeyException,  @AT@ 4533 @LENGTH@ 387
---DEL Modifier@@public @AT@ 4533 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:WebTestUtils.initWebTest() @TO@ MethodInvocation:TestMvcClient.initWebTest() @AT@ 2711 @LENGTH@ 27
---UPD MethodInvocation@@WebTestUtils.initWebTest() @TO@ TestMvcClient.initWebTest() @AT@ 2711 @LENGTH@ 26
------UPD SimpleName@@Name:WebTestUtils @TO@ Name:TestMvcClient @AT@ 2711 @LENGTH@ 12


DEL VariableDeclarationStatement@@String expected=IOUtils.toString(ClassLoader.getSystemResourceAsStream("report/article-1-report.xml")); @AT@ 1521 @LENGTH@ 105
---DEL SimpleType@@String @AT@ 1521 @LENGTH@ 6
---DEL VariableDeclarationFragment@@expected=IOUtils.toString(ClassLoader.getSystemResourceAsStream("report/article-1-report.xml")) @AT@ 1528 @LENGTH@ 97
------DEL SimpleName@@expected @AT@ 1528 @LENGTH@ 8
------DEL MethodInvocation@@IOUtils.toString(ClassLoader.getSystemResourceAsStream("report/article-1-report.xml")) @AT@ 1539 @LENGTH@ 86
---------DEL SimpleName@@Name:IOUtils @AT@ 1539 @LENGTH@ 7
---------DEL SimpleName@@MethodName:toString:[ClassLoader.getSystemResourceAsStream("report/article-1-report.xml")] @AT@ 1547 @LENGTH@ 78
------------DEL MethodInvocation@@ClassLoader.getSystemResourceAsStream("report/article-1-report.xml") @AT@ 1556 @LENGTH@ 68
---------------DEL SimpleName@@Name:ClassLoader @AT@ 1556 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:getSystemResourceAsStream:["report/article-1-report.xml"] @AT@ 1568 @LENGTH@ 56
------------------DEL StringLiteral@@"report/article-1-report.xml" @AT@ 1594 @LENGTH@ 29


UPD VariableDeclarationStatement@@DataAccessException exception=LettuceConverters.toDataAccessException(ex); @TO@ DataAccessException exception=EXCEPTION_TRANSLATION.translate(ex); @AT@ 10197 @LENGTH@ 76
---UPD VariableDeclarationFragment@@exception=LettuceConverters.toDataAccessException(ex) @TO@ exception=EXCEPTION_TRANSLATION.translate(ex) @AT@ 10217 @LENGTH@ 55
------UPD MethodInvocation@@LettuceConverters.toDataAccessException(ex) @TO@ EXCEPTION_TRANSLATION.translate(ex) @AT@ 10229 @LENGTH@ 43
---------UPD SimpleName@@Name:LettuceConverters @TO@ Name:EXCEPTION_TRANSLATION @AT@ 10229 @LENGTH@ 17
---------UPD SimpleName@@MethodName:toDataAccessException:[ex] @TO@ MethodName:translate:[ex] @AT@ 10247 @LENGTH@ 25


UPD ReturnStatement@@QualifiedName:UnixDESCryptPassword.ALGORITHM_DES_CRYPT @TO@ QualifiedName:UnixDESCryptPassword.ALGORITHM_CRYPT_DES @AT@ 4153 @LENGTH@ 48
---UPD QualifiedName@@UnixDESCryptPassword.ALGORITHM_DES_CRYPT @TO@ UnixDESCryptPassword.ALGORITHM_CRYPT_DES @AT@ 4160 @LENGTH@ 40
------UPD SimpleName@@ALGORITHM_DES_CRYPT @TO@ ALGORITHM_CRYPT_DES @AT@ 4181 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:thrown.expectCause(Matchers.isA(org.springframework.messaging.converter.MessageConversionException.class)) @TO@ MethodInvocation:thrown.expectCause(Matchers.isA(MessageConversionException.class)) @AT@ 14609 @LENGTH@ 107
---UPD MethodInvocation@@thrown.expectCause(Matchers.isA(org.springframework.messaging.converter.MessageConversionException.class)) @TO@ thrown.expectCause(Matchers.isA(MessageConversionException.class)) @AT@ 14609 @LENGTH@ 106
------UPD SimpleName@@MethodName:expectCause:[Matchers.isA(org.springframework.messaging.converter.MessageConversionException.class)] @TO@ MethodName:expectCause:[Matchers.isA(MessageConversionException.class)] @AT@ 14616 @LENGTH@ 99
---------UPD MethodInvocation@@Matchers.isA(org.springframework.messaging.converter.MessageConversionException.class) @TO@ Matchers.isA(MessageConversionException.class) @AT@ 14628 @LENGTH@ 86
------------UPD SimpleName@@MethodName:isA:[org.springframework.messaging.converter.MessageConversionException.class] @TO@ MethodName:isA:[MessageConversionException.class] @AT@ 14637 @LENGTH@ 77
---------------UPD TypeLiteral@@org.springframework.messaging.converter.MessageConversionException.class @TO@ MessageConversionException.class @AT@ 14641 @LENGTH@ 72


UPD TypeDeclaration@@[@FixMethodOrder(MethodSorters.JVM), public, abstract]AbstractJobExecutionDaoTests,  @TO@ [public, abstract]AbstractJobExecutionDaoTests,  @AT@ 1579 @LENGTH@ 8856
---DEL SingleMemberAnnotation@@@FixMethodOrder(MethodSorters.JVM) @AT@ 1579 @LENGTH@ 34


UPD VariableDeclarationStatement@@Authentication authentication=filter.attemptAuthentication(null,null); @TO@ Authentication authentication=filter.attemptAuthentication(new MockHttpServletRequest(),null); @AT@ 2577 @LENGTH@ 73
---UPD VariableDeclarationFragment@@authentication=filter.attemptAuthentication(null,null) @TO@ authentication=filter.attemptAuthentication(new MockHttpServletRequest(),null) @AT@ 2592 @LENGTH@ 57
------UPD MethodInvocation@@filter.attemptAuthentication(null,null) @TO@ filter.attemptAuthentication(new MockHttpServletRequest(),null) @AT@ 2609 @LENGTH@ 40
---------UPD SimpleName@@MethodName:attemptAuthentication:[null, null] @TO@ MethodName:attemptAuthentication:[new MockHttpServletRequest(), null] @AT@ 2616 @LENGTH@ 33
------------DEL NullLiteral@@null @AT@ 2644 @LENGTH@ 4
------------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ SimpleName@@MethodName:attemptAuthentication:[null, null] @AT@ 2698 @LENGTH@ 28
---------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2698 @LENGTH@ 3
---------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2702 @LENGTH@ 22


UPD TypeDeclaration@@[@RequestMapping("/" + YarnContainerClusterEndpoint.ENDPOINT_ID), public]YarnContainerClusterMvcEndpoint, EndpointMvcAdapter @TO@ [public]YarnContainerClusterMvcEndpoint, EndpointMvcAdapter @AT@ 2344 @LENGTH@ 6743
---DEL SingleMemberAnnotation@@@RequestMapping("/" + YarnContainerClusterEndpoint.ENDPOINT_ID) @AT@ 2344 @LENGTH@ 63


UPD TypeDeclaration@@[@ManagedResource(description="Managed Twitter Endpoint"), @UriEndpoint(scheme="twitter",consumerClass=Twitter4JConsumer.class), public]TwitterEndpointPolling, DefaultPollingEndpoint[TwitterEndpoint] @TO@ [@ManagedResource(description="Managed Twitter Endpoint"), @UriEndpoint(scheme="twitter",consumerClass=Twitter4JConsumer.class,label="api,social"), public]TwitterEndpointPolling, DefaultPollingEndpoint[TwitterEndpoint] @AT@ 1479 @LENGTH@ 4035
---UPD NormalAnnotation@@@UriEndpoint(scheme="twitter",consumerClass=Twitter4JConsumer.class) @TO@ @UriEndpoint(scheme="twitter",consumerClass=Twitter4JConsumer.class,label="api,social") @AT@ 1538 @LENGTH@ 73


UPD TypeDeclaration@@[public]DoubleConverter, [Converter<Double>] @TO@ [@Component, public]DoubleConverter, [Converter<Double>] @AT@ 939 @LENGTH@ 598
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]DoubleConverter, [Converter<Double>] @AT@ 989 @LENGTH@ 10


UPD FieldDeclaration@@protected, String, [enabledProtocols="TLSv1,TLSv1.1,TLSv1.2"] @TO@ protected, String, [enabledProtocols=defaultEnabledProtocols] @AT@ 2328 @LENGTH@ 60
---UPD VariableDeclarationFragment@@enabledProtocols="TLSv1,TLSv1.1,TLSv1.2" @TO@ enabledProtocols=defaultEnabledProtocols @AT@ 2345 @LENGTH@ 42
------DEL StringLiteral@@"TLSv1,TLSv1.1,TLSv1.2" @AT@ 2364 @LENGTH@ 23
------INS SimpleName@@defaultEnabledProtocols @TO@ VariableDeclarationFragment@@enabledProtocols="TLSv1,TLSv1.1,TLSv1.2" @AT@ 2438 @LENGTH@ 23


UPD IfStatement@@if (adapter.type == null || adapter.type.isAssignableFrom(argument.getType())) {  argument=new Argument(matcher.replaceAll(adapter.replacement),argument.getType());} @TO@ if (adapter.type == null || adapter.type == argument.getType()) {  argument=new Argument(matcher.replaceAll(adapter.replacement),argument.getType());} @AT@ 3709 @LENGTH@ 244
---UPD InfixExpression@@adapter.type == null || adapter.type.isAssignableFrom(argument.getType()) @TO@ adapter.type == null || adapter.type == argument.getType() @AT@ 3713 @LENGTH@ 73
------DEL MethodInvocation@@adapter.type.isAssignableFrom(argument.getType()) @AT@ 3737 @LENGTH@ 49
---------DEL QualifiedName@@Name:adapter.type @AT@ 3737 @LENGTH@ 12
---------DEL SimpleName@@MethodName:isAssignableFrom:[argument.getType()] @AT@ 3750 @LENGTH@ 36
------------DEL MethodInvocation@@argument.getType() @AT@ 3767 @LENGTH@ 18
------INS InfixExpression@@adapter.type == argument.getType() @TO@ InfixExpression@@adapter.type == null || adapter.type.isAssignableFrom(argument.getType()) @AT@ 3737 @LENGTH@ 34
---------INS QualifiedName@@adapter.type @TO@ InfixExpression@@adapter.type == argument.getType() @AT@ 3737 @LENGTH@ 12
------------INS SimpleName@@adapter @TO@ QualifiedName@@adapter.type @AT@ 3737 @LENGTH@ 7
------------INS SimpleName@@type @TO@ QualifiedName@@adapter.type @AT@ 3745 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@adapter.type == argument.getType() @AT@ 3749 @LENGTH@ 2
---------INS MethodInvocation@@argument.getType() @TO@ InfixExpression@@adapter.type == argument.getType() @AT@ 3753 @LENGTH@ 18
------------MOV SimpleName@@Name:argument @TO@ MethodInvocation@@argument.getType() @AT@ 3767 @LENGTH@ 8
------------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@argument.getType() @AT@ 3776 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isEqualTo("rod") @TO@ MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @AT@ 8818 @LENGTH@ 84
---UPD MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isEqualTo("rod") @TO@ assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @AT@ 8818 @LENGTH@ 83
------UPD MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @TO@ MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication().getName()] @AT@ 8818 @LENGTH@ 66
---------UPD MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ SecurityContextHolder.getContext().getAuthentication().getName() @AT@ 8829 @LENGTH@ 54
------------INS MethodInvocation@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 8839 @LENGTH@ 54
------------UPD SimpleName@@MethodName:getAuthentication:[] @TO@ MethodName:getName:[] @AT@ 8864 @LENGTH@ 19


INS MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), public]GroovyScriptOsgiTest, OSGiIntegrationTestSupport @AT@ 1909 @LENGTH@ 337
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1909 @LENGTH@ 9
---INS SimpleType@@CamelContext @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1919 @LENGTH@ 12
---INS SimpleName@@MethodName:createCamelContext @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1932 @LENGTH@ 18
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1960 @LENGTH@ 9
---INS VariableDeclarationStatement@@CamelContext context=super.createCamelContext(); @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 1980 @LENGTH@ 50
------INS SimpleType@@CamelContext @TO@ VariableDeclarationStatement@@CamelContext context=super.createCamelContext(); @AT@ 1980 @LENGTH@ 12
------INS VariableDeclarationFragment@@context=super.createCamelContext() @TO@ VariableDeclarationStatement@@CamelContext context=super.createCamelContext(); @AT@ 1993 @LENGTH@ 36
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=super.createCamelContext() @AT@ 1993 @LENGTH@ 7
---------INS SuperMethodInvocation@@super.createCamelContext() @TO@ VariableDeclarationFragment@@context=super.createCamelContext() @AT@ 2003 @LENGTH@ 26
------------INS SimpleName@@MethodName:createCamelContext:[] @TO@ SuperMethodInvocation@@super.createCamelContext() @AT@ 2009 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 2141 @LENGTH@ 75
------INS MethodInvocation@@context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @TO@ ExpressionStatement@@MethodInvocation:context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @AT@ 2141 @LENGTH@ 74
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @AT@ 2141 @LENGTH@ 7
---------INS SimpleName@@MethodName:setApplicationContextClassLoader:[this.getClass().getClassLoader()] @TO@ MethodInvocation@@context.setApplicationContextClassLoader(this.getClass().getClassLoader()) @AT@ 2149 @LENGTH@ 66
------------INS MethodInvocation@@this.getClass().getClassLoader() @TO@ SimpleName@@MethodName:setApplicationContextClassLoader:[this.getClass().getClassLoader()] @AT@ 2182 @LENGTH@ 32
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@this.getClass().getClassLoader() @AT@ 2182 @LENGTH@ 15
---------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getClass().getClassLoader() @AT@ 2182 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@this.getClass().getClassLoader() @AT@ 2198 @LENGTH@ 16
---INS ReturnStatement@@SimpleName:context @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 2225 @LENGTH@ 15
------INS SimpleName@@context @TO@ ReturnStatement@@SimpleName:context @AT@ 2232 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new NotWritablePropertyException(getWrappedClass(),propertyName,"Could not find field for property during fallback access!") @TO@ ClassInstanceCreation:new NotWritablePropertyException(getWrappedClass(),propertyName,"Could not find field for property during fallback access!",e) @AT@ 2374 @LENGTH@ 139
---UPD ClassInstanceCreation@@NotWritablePropertyException[getWrappedClass(), propertyName, "Could not find field for property during fallback access!"] @TO@ NotWritablePropertyException[getWrappedClass(), propertyName, "Could not find field for property during fallback access!", e] @AT@ 2380 @LENGTH@ 132
------INS SimpleName@@e @TO@ ClassInstanceCreation@@NotWritablePropertyException[getWrappedClass(), propertyName, "Could not find field for property during fallback access!"] @AT@ 2513 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:testSessionPersistence, @ArquillianResource(SimpleServlet.class) @OperateOnDeployment(DEPLOYMENT_1) URL baseURL, IOException,  @TO@ public, void, MethodName:testSessionPersistence, @ArquillianResource(SimpleServlet.class) @OperateOnDeployment(DEPLOYMENT_1) URL baseURL, IOException, URISyntaxException,  @AT@ 3205 @LENGTH@ 1681
---UPD VariableDeclarationStatement@@DefaultHttpClient client=new DefaultHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 3358 @LENGTH@ 51
------UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 3358 @LENGTH@ 17
------UPD VariableDeclarationFragment@@client=new DefaultHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 3376 @LENGTH@ 32
---------DEL ClassInstanceCreation@@DefaultHttpClient[] @AT@ 3385 @LENGTH@ 23
------------DEL New@@new @AT@ 3385 @LENGTH@ 3
------------DEL SimpleType@@DefaultHttpClient @AT@ 3389 @LENGTH@ 17
---------INS MethodInvocation@@HttpClients.createDefault() @TO@ VariableDeclarationFragment@@client=new DefaultHttpClient() @AT@ 3544 @LENGTH@ 27
------------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 3544 @LENGTH@ 11
------------INS SimpleName@@MethodName:createDefault:[] @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 3556 @LENGTH@ 15
---UPD VariableDeclarationStatement@@String url=baseURL.toString() + "simple"; @TO@ URI url=SimpleServlet.createURI(baseURL); @AT@ 3419 @LENGTH@ 43
------UPD SimpleType@@String @TO@ URI @AT@ 3419 @LENGTH@ 6
------UPD VariableDeclarationFragment@@url=baseURL.toString() + "simple" @TO@ url=SimpleServlet.createURI(baseURL) @AT@ 3426 @LENGTH@ 35
---------DEL InfixExpression@@baseURL.toString() + "simple" @AT@ 3432 @LENGTH@ 29
------------DEL MethodInvocation@@baseURL.toString() @AT@ 3432 @LENGTH@ 18
------------DEL Operator@@+ @AT@ 3450 @LENGTH@ 1
------------DEL StringLiteral@@"simple" @AT@ 3453 @LENGTH@ 8
---------INS MethodInvocation@@SimpleServlet.createURI(baseURL) @TO@ VariableDeclarationFragment@@url=baseURL.toString() + "simple" @AT@ 3592 @LENGTH@ 32
------------MOV SimpleName@@Name:baseURL @TO@ MethodInvocation@@SimpleServlet.createURI(baseURL) @AT@ 3432 @LENGTH@ 7
------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@SimpleServlet.createURI(baseURL) @AT@ 3440 @LENGTH@ 10
---------------INS SimpleName@@baseURL @TO@ SimpleName@@MethodName:toString:[] @AT@ 3616 @LENGTH@ 7
---UPD TryStatement@@try {  HttpResponse response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();  stop(CONTAINER_SINGLE);  start(CONTAINER_SINGLE);  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("Session passivation was configured but session was lost after restart.",3,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();}  finally {  client.getConnectionManager().shutdown();} @TO@ try {  HttpResponse response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();  stop(CONTAINER_SINGLE);  start(CONTAINER_SINGLE);  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("Session passivation was configured but session was lost after restart.",3,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 3472 @LENGTH@ 1408
------UPD Block@@FinallyBody:{  client.getConnectionManager().shutdown();} @TO@ FinallyBody:{  HttpClientUtils.closeQuietly(client);} @AT@ 4815 @LENGTH@ 65
---------UPD ExpressionStatement@@MethodInvocation:client.getConnectionManager().shutdown() @TO@ MethodInvocation:HttpClientUtils.closeQuietly(client) @AT@ 4829 @LENGTH@ 41
------------UPD MethodInvocation@@client.getConnectionManager().shutdown() @TO@ HttpClientUtils.closeQuietly(client) @AT@ 4829 @LENGTH@ 40
---------------DEL MethodInvocation@@MethodName:getConnectionManager:[] @AT@ 4829 @LENGTH@ 29
---------------UPD SimpleName@@Name:client @TO@ Name:HttpClientUtils @AT@ 4829 @LENGTH@ 6
---------------UPD SimpleName@@MethodName:shutdown:[] @TO@ MethodName:closeQuietly:[client] @AT@ 4859 @LENGTH@ 10
------------------INS SimpleName@@client @TO@ SimpleName@@MethodName:shutdown:[] @AT@ 5021 @LENGTH@ 6
---INS SimpleType@@URISyntaxException @TO@ MethodDeclaration@@public, void, MethodName:testSessionPersistence, @ArquillianResource(SimpleServlet.class) @OperateOnDeployment(DEPLOYMENT_1) URL baseURL, IOException,  @AT@ 3495 @LENGTH@ 18


UPD MethodDeclaration@@public, Class<?>, MethodName:getType,  @TO@ private, Class<?>, MethodName:tryExtractIdTypeWithFallbackToIdTypeLookup,  @AT@ 7300 @LENGTH@ 420
---UPD Modifier@@public @TO@ private @AT@ 7300 @LENGTH@ 6
---UPD SimpleName@@MethodName:getType @TO@ MethodName:tryExtractIdTypeWithFallbackToIdTypeLookup @AT@ 7316 @LENGTH@ 7
---DEL VariableDeclarationStatement@@Class<?> idType; @AT@ 7382 @LENGTH@ 16
------DEL ParameterizedType@@Class<?> @AT@ 7382 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 7382 @LENGTH@ 5
---------DEL WildcardType@@? @AT@ 7388 @LENGTH@ 1
------DEL VariableDeclarationFragment@@idType @AT@ 7391 @LENGTH@ 6
---------DEL SimpleName@@idType @AT@ 7391 @LENGTH@ 6
---UPD TryStatement@@try {  Type<?> idType2=type.getIdType();  idType=idType2 == null ? fallbackIdTypeLookup(type) : idType2.getJavaType();} catch (IllegalStateException e) {  idType=fallbackIdTypeLookup(type);} @TO@ try {  Type<?> idType2=type.getIdType();  return idType2 == null ? fallbackIdTypeLookup(type) : idType2.getJavaType();} catch (IllegalStateException e) {  return fallbackIdTypeLookup(type);} @AT@ 7403 @LENGTH@ 269
------DEL ExpressionStatement@@Assignment:idType=idType2 == null ? fallbackIdTypeLookup(type) : idType2.getJavaType() @AT@ 7453 @LENGTH@ 78
---------DEL Assignment@@idType=idType2 == null ? fallbackIdTypeLookup(type) : idType2.getJavaType() @AT@ 7453 @LENGTH@ 77
------------DEL SimpleName@@idType @AT@ 7453 @LENGTH@ 6
------------DEL Operator@@= @AT@ 7459 @LENGTH@ 1
------UPD CatchClause@@catch (IllegalStateException e) {  idType=fallbackIdTypeLookup(type);} @TO@ catch (IllegalStateException e) {  return fallbackIdTypeLookup(type);} @AT@ 7537 @LENGTH@ 135
---------DEL ExpressionStatement@@Assignment:idType=fallbackIdTypeLookup(type) @AT@ 7631 @LENGTH@ 36
------------DEL Assignment@@idType=fallbackIdTypeLookup(type) @AT@ 7631 @LENGTH@ 35
---------------DEL SimpleName@@idType @AT@ 7631 @LENGTH@ 6
---------------DEL Operator@@= @AT@ 7637 @LENGTH@ 1
---------INS ReturnStatement@@MethodInvocation:fallbackIdTypeLookup(type) @TO@ CatchClause@@catch (IllegalStateException e) {  idType=fallbackIdTypeLookup(type);} @AT@ 7869 @LENGTH@ 34
------------MOV MethodInvocation@@fallbackIdTypeLookup(type) @TO@ ReturnStatement@@MethodInvocation:fallbackIdTypeLookup(type) @AT@ 7640 @LENGTH@ 26
------INS ReturnStatement@@ConditionalExpression:idType2 == null ? fallbackIdTypeLookup(type) : idType2.getJavaType() @TO@ TryStatement@@try {  Type<?> idType2=type.getIdType();  idType=idType2 == null ? fallbackIdTypeLookup(type) : idType2.getJavaType();} catch (IllegalStateException e) {  idType=fallbackIdTypeLookup(type);} @AT@ 7693 @LENGTH@ 76
---------MOV ConditionalExpression@@idType2 == null ? fallbackIdTypeLookup(type) : idType2.getJavaType() @TO@ ReturnStatement@@ConditionalExpression:idType2 == null ? fallbackIdTypeLookup(type) : idType2.getJavaType() @AT@ 7462 @LENGTH@ 68
---DEL ExpressionStatement@@Assignment:this.idType=idType @AT@ 7677 @LENGTH@ 21
------DEL Assignment@@this.idType=idType @AT@ 7677 @LENGTH@ 20
---------DEL FieldAccess@@this.idType @AT@ 7677 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 7677 @LENGTH@ 4
------------DEL SimpleName@@idType @AT@ 7682 @LENGTH@ 6
---------DEL Operator@@= @AT@ 7688 @LENGTH@ 1
---------DEL SimpleName@@idType @AT@ 7691 @LENGTH@ 6
---DEL ReturnStatement@@SimpleName:idType @AT@ 7702 @LENGTH@ 14
------DEL SimpleName@@idType @AT@ 7709 @LENGTH@ 6


INS FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(JedisConverters.exceptionConverter())] @TO@ TypeDeclaration@@[public]JedisConnection, [RedisConnection] @AT@ 3939 @LENGTH@ 157
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(JedisConverters.exceptionConverter())] @AT@ 3939 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(JedisConverters.exceptionConverter())] @AT@ 3947 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(JedisConverters.exceptionConverter())] @AT@ 3954 @LENGTH@ 5
---INS SimpleType@@ExceptionTranslationStrategy @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(JedisConverters.exceptionConverter())] @AT@ 3960 @LENGTH@ 28
---INS VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(JedisConverters.exceptionConverter()) @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(JedisConverters.exceptionConverter())] @AT@ 3989 @LENGTH@ 106
------INS SimpleName@@EXCEPTION_TRANSLATION @TO@ VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(JedisConverters.exceptionConverter()) @AT@ 3989 @LENGTH@ 21
------INS ClassInstanceCreation@@FallbackExceptionTranslationStrategy[JedisConverters.exceptionConverter()] @TO@ VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new FallbackExceptionTranslationStrategy(JedisConverters.exceptionConverter()) @AT@ 4013 @LENGTH@ 82
---------INS New@@new @TO@ ClassInstanceCreation@@FallbackExceptionTranslationStrategy[JedisConverters.exceptionConverter()] @AT@ 4013 @LENGTH@ 3
---------INS SimpleType@@FallbackExceptionTranslationStrategy @TO@ ClassInstanceCreation@@FallbackExceptionTranslationStrategy[JedisConverters.exceptionConverter()] @AT@ 4017 @LENGTH@ 36
---------INS MethodInvocation@@JedisConverters.exceptionConverter() @TO@ ClassInstanceCreation@@FallbackExceptionTranslationStrategy[JedisConverters.exceptionConverter()] @AT@ 4058 @LENGTH@ 36
------------INS SimpleName@@Name:JedisConverters @TO@ MethodInvocation@@JedisConverters.exceptionConverter() @AT@ 4058 @LENGTH@ 15
------------INS SimpleName@@MethodName:exceptionConverter:[] @TO@ MethodInvocation@@JedisConverters.exceptionConverter() @AT@ 4074 @LENGTH@ 20


UPD Block@@WhileBody:{  t1=decodeByte(encoded[offset + count++]);  if (t1 == -1)   return count - 1;  if (t1 == -2)   throw unexpectedPadding();  if (count == len)   throw truncatedInput();  t2=decodeByte(encoded[offset + count++]);  if (t2 == -1)   throw truncatedInput();  if (t2 == -2)   throw unexpectedPadding();  if (count == len)   throw truncatedInput();  target.appendNumber((byte)(t1 << 2 | t2 >>> 4));  t1=decodeByte(encoded[offset + count++]);  if (t1 == -1)   throw truncatedInput();  if (count == len)   throw truncatedInput();  if (t1 == -2) {    assert count < len;    if (encoded[offset + count++] != '=') {      throw missingRequiredPadding();    }    return count;  }  target.appendNumber((byte)(t2 << 4 | t1 >>> 4));  t2=decodeByte(encoded[offset + count++]);  if (t2 == -1)   throw truncatedInput();  if (t2 == -2)   return count;  target.appendNumber((byte)(t1 << 6 | t2));} @TO@ WhileBody:{  t1=decodeByte(encoded[offset + count++]);  if (t1 == -1)   return count - 1;  if (t1 == -2)   throw unexpectedPadding();  if (count == len)   throw truncatedInput();  t2=decodeByte(encoded[offset + count++]);  if (t2 == -1)   throw truncatedInput();  if (t2 == -2)   throw unexpectedPadding();  if (count == len)   throw truncatedInput();  target.append(new byte[]{(byte)((t1 & 0xff) << 2 | (t2 & 0xff) >>> 4)});  t1=decodeByte(encoded[offset + count++]);  if (t1 == -1)   throw truncatedInput();  if (count == len)   throw truncatedInput();  if (t1 == -2) {    assert count < len;    if (encoded[offset + count++] != '=') {      throw missingRequiredPadding();    }    return count;  }  target.append(new byte[]{(byte)((t2 & 0xff) << 4 | (t1 & 0xff) >>> 2)});  t2=decodeByte(encoded[offset + count++]);  if (t2 == -1)   throw truncatedInput();  if (t2 == -2)   return count;  target.append(new byte[]{(byte)((t1 & 0xff) << 6 | t2)});} @AT@ 3333 @LENGTH@ 1464
---UPD ExpressionStatement@@MethodInvocation:target.appendNumber((byte)(t1 << 2 | t2 >>> 4)) @TO@ MethodInvocation:target.append(new byte[]{(byte)((t1 & 0xff) << 2 | (t2 & 0xff) >>> 4)}) @AT@ 3873 @LENGTH@ 49
------UPD MethodInvocation@@target.appendNumber((byte)(t1 << 2 | t2 >>> 4)) @TO@ target.append(new byte[]{(byte)((t1 & 0xff) << 2 | (t2 & 0xff) >>> 4)}) @AT@ 3873 @LENGTH@ 48
---------UPD SimpleName@@MethodName:appendNumber:[(byte)(t1 << 2 | t2 >>> 4)] @TO@ MethodName:append:[new byte[]{(byte)((t1 & 0xff) << 2 | (t2 & 0xff) >>> 4)}] @AT@ 3880 @LENGTH@ 41
------------DEL CastExpression@@(byte)(t1 << 2 | t2 >>> 4) @AT@ 3893 @LENGTH@ 27
------------INS ArrayCreation@@new byte[]{(byte)((t1 & 0xff) << 2 | (t2 & 0xff) >>> 4)} @TO@ SimpleName@@MethodName:appendNumber:[(byte)(t1 << 2 | t2 >>> 4)] @AT@ 3932 @LENGTH@ 57
---------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[]{(byte)((t1 & 0xff) << 2 | (t2 & 0xff) >>> 4)} @AT@ 3936 @LENGTH@ 6
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 3936 @LENGTH@ 4
---------------INS ArrayInitializer@@{(byte)((t1 & 0xff) << 2 | (t2 & 0xff) >>> 4)} @TO@ ArrayCreation@@new byte[]{(byte)((t1 & 0xff) << 2 | (t2 & 0xff) >>> 4)} @AT@ 3943 @LENGTH@ 46
------------------INS CastExpression@@(byte)((t1 & 0xff) << 2 | (t2 & 0xff) >>> 4) @TO@ ArrayInitializer@@{(byte)((t1 & 0xff) << 2 | (t2 & 0xff) >>> 4)} @AT@ 3944 @LENGTH@ 44
---------------------MOV PrimitiveType@@byte @TO@ CastExpression@@(byte)((t1 & 0xff) << 2 | (t2 & 0xff) >>> 4) @AT@ 3894 @LENGTH@ 4
---------------------MOV ParenthesizedExpression@@(t1 << 2 | t2 >>> 4) @TO@ CastExpression@@(byte)((t1 & 0xff) << 2 | (t2 & 0xff) >>> 4) @AT@ 3900 @LENGTH@ 20
------------------------UPD InfixExpression@@t1 << 2 | t2 >>> 4 @TO@ (t1 & 0xff) << 2 | (t2 & 0xff) >>> 4 @AT@ 3901 @LENGTH@ 18
---------------------------UPD InfixExpression@@t1 << 2 @TO@ (t1 & 0xff) << 2 @AT@ 3901 @LENGTH@ 7
------------------------------INS ParenthesizedExpression@@(t1 & 0xff) @TO@ InfixExpression@@t1 << 2 @AT@ 3951 @LENGTH@ 11
---------------------------------INS InfixExpression@@t1 & 0xff @TO@ ParenthesizedExpression@@(t1 & 0xff) @AT@ 3952 @LENGTH@ 9
------------------------------------MOV SimpleName@@t1 @TO@ InfixExpression@@t1 & 0xff @AT@ 3901 @LENGTH@ 2
------------------------------------MOV SimpleName@@t1 @TO@ InfixExpression@@t1 & 0xff @AT@ 3901 @LENGTH@ 2
------------------------------------INS Operator@@& @TO@ InfixExpression@@t1 & 0xff @AT@ 3954 @LENGTH@ 1
------------------------------------INS NumberLiteral@@0xff @TO@ InfixExpression@@t1 & 0xff @AT@ 3957 @LENGTH@ 4
---------------------------UPD InfixExpression@@t2 >>> 4 @TO@ (t2 & 0xff) >>> 4 @AT@ 3911 @LENGTH@ 8
------------------------------INS ParenthesizedExpression@@(t2 & 0xff) @TO@ InfixExpression@@t2 >>> 4 @AT@ 3970 @LENGTH@ 11
---------------------------------INS InfixExpression@@t2 & 0xff @TO@ ParenthesizedExpression@@(t2 & 0xff) @AT@ 3971 @LENGTH@ 9
------------------------------------MOV SimpleName@@t2 @TO@ InfixExpression@@t2 & 0xff @AT@ 3911 @LENGTH@ 2
------------------------------------MOV SimpleName@@t2 @TO@ InfixExpression@@t2 & 0xff @AT@ 3911 @LENGTH@ 2
------------------------------------INS Operator@@& @TO@ InfixExpression@@t2 & 0xff @AT@ 3973 @LENGTH@ 1
------------------------------------INS NumberLiteral@@0xff @TO@ InfixExpression@@t2 & 0xff @AT@ 3976 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:target.appendNumber((byte)(t2 << 4 | t1 >>> 4)) @TO@ MethodInvocation:target.append(new byte[]{(byte)((t2 & 0xff) << 4 | (t1 & 0xff) >>> 2)}) @AT@ 4465 @LENGTH@ 49
------UPD MethodInvocation@@target.appendNumber((byte)(t2 << 4 | t1 >>> 4)) @TO@ target.append(new byte[]{(byte)((t2 & 0xff) << 4 | (t1 & 0xff) >>> 2)}) @AT@ 4465 @LENGTH@ 48
---------UPD SimpleName@@MethodName:appendNumber:[(byte)(t2 << 4 | t1 >>> 4)] @TO@ MethodName:append:[new byte[]{(byte)((t2 & 0xff) << 4 | (t1 & 0xff) >>> 2)}] @AT@ 4472 @LENGTH@ 41
------------DEL CastExpression@@(byte)(t2 << 4 | t1 >>> 4) @AT@ 4485 @LENGTH@ 27
------------INS ArrayCreation@@new byte[]{(byte)((t2 & 0xff) << 4 | (t1 & 0xff) >>> 2)} @TO@ SimpleName@@MethodName:appendNumber:[(byte)(t2 << 4 | t1 >>> 4)] @AT@ 4548 @LENGTH@ 58
---------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[]{(byte)((t2 & 0xff) << 4 | (t1 & 0xff) >>> 2)} @AT@ 4552 @LENGTH@ 6
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4552 @LENGTH@ 4
---------------INS ArrayInitializer@@{(byte)((t2 & 0xff) << 4 | (t1 & 0xff) >>> 2)} @TO@ ArrayCreation@@new byte[]{(byte)((t2 & 0xff) << 4 | (t1 & 0xff) >>> 2)} @AT@ 4559 @LENGTH@ 47
------------------INS CastExpression@@(byte)((t2 & 0xff) << 4 | (t1 & 0xff) >>> 2) @TO@ ArrayInitializer@@{(byte)((t2 & 0xff) << 4 | (t1 & 0xff) >>> 2)} @AT@ 4560 @LENGTH@ 45
---------------------MOV PrimitiveType@@byte @TO@ CastExpression@@(byte)((t2 & 0xff) << 4 | (t1 & 0xff) >>> 2) @AT@ 4486 @LENGTH@ 4
---------------------MOV ParenthesizedExpression@@(t2 << 4 | t1 >>> 4) @TO@ CastExpression@@(byte)((t2 & 0xff) << 4 | (t1 & 0xff) >>> 2) @AT@ 4492 @LENGTH@ 20
------------------------UPD InfixExpression@@t2 << 4 | t1 >>> 4 @TO@ (t2 & 0xff) << 4 | (t1 & 0xff) >>> 2 @AT@ 4493 @LENGTH@ 18
---------------------------UPD InfixExpression@@t2 << 4 @TO@ (t2 & 0xff) << 4 @AT@ 4493 @LENGTH@ 7
------------------------------INS ParenthesizedExpression@@(t2 & 0xff) @TO@ InfixExpression@@t2 << 4 @AT@ 4568 @LENGTH@ 11
---------------------------------INS InfixExpression@@t2 & 0xff @TO@ ParenthesizedExpression@@(t2 & 0xff) @AT@ 4569 @LENGTH@ 9
------------------------------------MOV SimpleName@@t2 @TO@ InfixExpression@@t2 & 0xff @AT@ 4493 @LENGTH@ 2
------------------------------------MOV SimpleName@@t2 @TO@ InfixExpression@@t2 & 0xff @AT@ 4493 @LENGTH@ 2
------------------------------------INS Operator@@& @TO@ InfixExpression@@t2 & 0xff @AT@ 4571 @LENGTH@ 1
------------------------------------INS NumberLiteral@@0xff @TO@ InfixExpression@@t2 & 0xff @AT@ 4574 @LENGTH@ 4
---------------------------UPD InfixExpression@@t1 >>> 4 @TO@ (t1 & 0xff) >>> 2 @AT@ 4503 @LENGTH@ 8
------------------------------UPD NumberLiteral@@4 @TO@ 2 @AT@ 4510 @LENGTH@ 1
------------------------------INS ParenthesizedExpression@@(t1 & 0xff) @TO@ InfixExpression@@t1 >>> 4 @AT@ 4587 @LENGTH@ 11
---------------------------------INS InfixExpression@@t1 & 0xff @TO@ ParenthesizedExpression@@(t1 & 0xff) @AT@ 4588 @LENGTH@ 9
------------------------------------MOV SimpleName@@t1 @TO@ InfixExpression@@t1 & 0xff @AT@ 4503 @LENGTH@ 2
------------------------------------MOV SimpleName@@t1 @TO@ InfixExpression@@t1 & 0xff @AT@ 4503 @LENGTH@ 2
------------------------------------INS Operator@@& @TO@ InfixExpression@@t1 & 0xff @AT@ 4590 @LENGTH@ 1
------------------------------------INS NumberLiteral@@0xff @TO@ InfixExpression@@t1 & 0xff @AT@ 4593 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:target.appendNumber((byte)(t1 << 6 | t2)) @TO@ MethodInvocation:target.append(new byte[]{(byte)((t1 & 0xff) << 6 | t2)}) @AT@ 4744 @LENGTH@ 43
------UPD MethodInvocation@@target.appendNumber((byte)(t1 << 6 | t2)) @TO@ target.append(new byte[]{(byte)((t1 & 0xff) << 6 | t2)}) @AT@ 4744 @LENGTH@ 42
---------UPD SimpleName@@MethodName:appendNumber:[(byte)(t1 << 6 | t2)] @TO@ MethodName:append:[new byte[]{(byte)((t1 & 0xff) << 6 | t2)}] @AT@ 4751 @LENGTH@ 35
------------DEL CastExpression@@(byte)(t1 << 6 | t2) @AT@ 4764 @LENGTH@ 21
------------INS ArrayCreation@@new byte[]{(byte)((t1 & 0xff) << 6 | t2)} @TO@ SimpleName@@MethodName:appendNumber:[(byte)(t1 << 6 | t2)] @AT@ 4884 @LENGTH@ 43
---------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[]{(byte)((t1 & 0xff) << 6 | t2)} @AT@ 4888 @LENGTH@ 6
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4888 @LENGTH@ 4
---------------INS ArrayInitializer@@{(byte)((t1 & 0xff) << 6 | t2)} @TO@ ArrayCreation@@new byte[]{(byte)((t1 & 0xff) << 6 | t2)} @AT@ 4895 @LENGTH@ 32
------------------INS CastExpression@@(byte)((t1 & 0xff) << 6 | t2) @TO@ ArrayInitializer@@{(byte)((t1 & 0xff) << 6 | t2)} @AT@ 4896 @LENGTH@ 30
---------------------MOV PrimitiveType@@byte @TO@ CastExpression@@(byte)((t1 & 0xff) << 6 | t2) @AT@ 4765 @LENGTH@ 4
---------------------MOV ParenthesizedExpression@@(t1 << 6 | t2) @TO@ CastExpression@@(byte)((t1 & 0xff) << 6 | t2) @AT@ 4771 @LENGTH@ 14
------------------------UPD InfixExpression@@t1 << 6 | t2 @TO@ (t1 & 0xff) << 6 | t2 @AT@ 4772 @LENGTH@ 12
---------------------------UPD InfixExpression@@t1 << 6 @TO@ (t1 & 0xff) << 6 @AT@ 4772 @LENGTH@ 7
------------------------------INS ParenthesizedExpression@@(t1 & 0xff) @TO@ InfixExpression@@t1 << 6 @AT@ 4904 @LENGTH@ 11
---------------------------------INS InfixExpression@@t1 & 0xff @TO@ ParenthesizedExpression@@(t1 & 0xff) @AT@ 4905 @LENGTH@ 9
------------------------------------MOV SimpleName@@t1 @TO@ InfixExpression@@t1 & 0xff @AT@ 4772 @LENGTH@ 2
------------------------------------MOV SimpleName@@t1 @TO@ InfixExpression@@t1 & 0xff @AT@ 4772 @LENGTH@ 2
------------------------------------INS Operator@@& @TO@ InfixExpression@@t1 & 0xff @AT@ 4907 @LENGTH@ 1
------------------------------------INS NumberLiteral@@0xff @TO@ InfixExpression@@t1 & 0xff @AT@ 4910 @LENGTH@ 4


UPD ReturnStatement@@ArrayCreation:new ModelValidationStepHandler[]{new NotEmptyResourceValidationStepHandler(),new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @TO@ ArrayCreation:new ModelValidationStepHandler[]{NotEmptyResourceValidationStepHandler.INSTANCE,new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @AT@ 4313 @LENGTH@ 190
---UPD ArrayCreation@@new ModelValidationStepHandler[]{new NotEmptyResourceValidationStepHandler(),new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @TO@ new ModelValidationStepHandler[]{NotEmptyResourceValidationStepHandler.INSTANCE,new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @AT@ 4320 @LENGTH@ 182
------UPD ArrayInitializer@@{new NotEmptyResourceValidationStepHandler(),new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @TO@ {NotEmptyResourceValidationStepHandler.INSTANCE,new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @AT@ 4353 @LENGTH@ 149
---------INS QualifiedName@@NotEmptyResourceValidationStepHandler.INSTANCE @TO@ ArrayInitializer@@{new NotEmptyResourceValidationStepHandler(),new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @AT@ 4367 @LENGTH@ 46
------------INS SimpleName@@NotEmptyResourceValidationStepHandler @TO@ QualifiedName@@NotEmptyResourceValidationStepHandler.INSTANCE @AT@ 4367 @LENGTH@ 37
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@NotEmptyResourceValidationStepHandler.INSTANCE @AT@ 4405 @LENGTH@ 8
---------DEL ClassInstanceCreation@@NotEmptyResourceValidationStepHandler[] @AT@ 4367 @LENGTH@ 43
------------DEL New@@new @AT@ 4367 @LENGTH@ 3
------------DEL SimpleType@@NotEmptyResourceValidationStepHandler @AT@ 4371 @LENGTH@ 37


UPD MethodDeclaration@@public, voidMethodName:FtpEndpoint, String uri, RemoteFileComponent<FTPFile> component, RemoteFileConfiguration configuration,  @TO@ public, voidMethodName:FtpEndpoint, String uri, RemoteFileComponent<FTPFile> component, FtpConfiguration configuration,  @AT@ 2052 @LENGTH@ 163
---UPD SingleVariableDeclaration@@RemoteFileConfiguration configuration @TO@ FtpConfiguration configuration @AT@ 2123 @LENGTH@ 37
------UPD SimpleType@@RemoteFileConfiguration @TO@ FtpConfiguration @AT@ 2123 @LENGTH@ 23
---INS ExpressionStatement@@Assignment:this.configuration=configuration @TO@ MethodDeclaration@@public, voidMethodName:FtpEndpoint, String uri, RemoteFileComponent<FTPFile> component, RemoteFileConfiguration configuration,  @AT@ 2211 @LENGTH@ 35
------INS Assignment@@this.configuration=configuration @TO@ ExpressionStatement@@Assignment:this.configuration=configuration @AT@ 2211 @LENGTH@ 34
---------INS FieldAccess@@this.configuration @TO@ Assignment@@this.configuration=configuration @AT@ 2211 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.configuration @AT@ 2211 @LENGTH@ 4
------------INS SimpleName@@configuration @TO@ FieldAccess@@this.configuration @AT@ 2216 @LENGTH@ 13
---------INS Operator@@= @TO@ Assignment@@this.configuration=configuration @AT@ 2229 @LENGTH@ 1
---------INS SimpleName@@configuration @TO@ Assignment@@this.configuration=configuration @AT@ 2232 @LENGTH@ 13


UPD ReturnStatement@@MethodInvocation:getStringHeader(in,MetricsComponent.HEADER_METRIC_NAME,defaultValue) @TO@ MethodInvocation:getStringHeader(in,MetricsConstants.HEADER_METRIC_NAME,defaultValue) @AT@ 2407 @LENGTH@ 78
---UPD MethodInvocation@@getStringHeader(in,MetricsComponent.HEADER_METRIC_NAME,defaultValue) @TO@ getStringHeader(in,MetricsConstants.HEADER_METRIC_NAME,defaultValue) @AT@ 2414 @LENGTH@ 70
------UPD SimpleName@@MethodName:getStringHeader:[in, MetricsComponent.HEADER_METRIC_NAME, defaultValue] @TO@ MethodName:getStringHeader:[in, MetricsConstants.HEADER_METRIC_NAME, defaultValue] @AT@ 2414 @LENGTH@ 70
---------UPD QualifiedName@@MetricsComponent.HEADER_METRIC_NAME @TO@ MetricsConstants.HEADER_METRIC_NAME @AT@ 2434 @LENGTH@ 35
------------UPD SimpleName@@MetricsComponent @TO@ MetricsConstants @AT@ 2434 @LENGTH@ 16


UPD TypeDeclaration@@[public]GAuthEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="gauth"), public]GAuthEndpoint, DefaultEndpoint @AT@ 1911 @LENGTH@ 6527
---INS NormalAnnotation@@@UriEndpoint(scheme="gauth") @TO@ TypeDeclaration@@[public]GAuthEndpoint, DefaultEndpoint @AT@ 1990 @LENGTH@ 30


DEL MethodDeclaration@@protected, void, MethodName:disallowCreateDatabase, String userName, Exception,  @AT@ 5643 @LENGTH@ 149
---DEL Modifier@@protected @AT@ 5643 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 5653 @LENGTH@ 4
---DEL SimpleName@@MethodName:disallowCreateDatabase @AT@ 5658 @LENGTH@ 22
---DEL SingleVariableDeclaration@@String userName @AT@ 5681 @LENGTH@ 15
------DEL SimpleType@@String @AT@ 5681 @LENGTH@ 6
------DEL SimpleName@@userName @AT@ 5688 @LENGTH@ 8
---DEL SimpleType@@Exception @AT@ 5711 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:disallowWriteAccessViaAcl(userName,warehouseDir.toString()) @AT@ 5727 @LENGTH@ 61
------DEL MethodInvocation@@disallowWriteAccessViaAcl(userName,warehouseDir.toString()) @AT@ 5727 @LENGTH@ 60
---------DEL SimpleName@@MethodName:disallowWriteAccessViaAcl:[userName, warehouseDir.toString()] @AT@ 5727 @LENGTH@ 60
------------DEL SimpleName@@userName @AT@ 5753 @LENGTH@ 8
------------DEL MethodInvocation@@warehouseDir.toString() @AT@ 5763 @LENGTH@ 23
---------------DEL SimpleName@@Name:warehouseDir @AT@ 5763 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:toString:[] @AT@ 5776 @LENGTH@ 10


UPD EnhancedForStatement@@for (T parameter : this.getBindableParameters()) {  if (parameter.isNamedParameter()) {    Assert.isTrue(nameFound || parameter.isFirst(),ALL_OR_NOTHING);    nameFound=true;  } else {    Assert.isTrue(!nameFound,ALL_OR_NOTHING);  }} @TO@ for (T parameter : this.getBindableParameters()) {  if (parameter.isNamedParameter()) {    Assert.isTrue(nameFound || index == 0,ALL_OR_NOTHING);    nameFound=true;  } else {    Assert.isTrue(!nameFound,ALL_OR_NOTHING);  }  index++;} @AT@ 7311 @LENGTH@ 249
---UPD IfStatement@@if (parameter.isNamedParameter()) {  Assert.isTrue(nameFound || parameter.isFirst(),ALL_OR_NOTHING);  nameFound=true;} else {  Assert.isTrue(!nameFound,ALL_OR_NOTHING);} @TO@ if (parameter.isNamedParameter()) {  Assert.isTrue(nameFound || index == 0,ALL_OR_NOTHING);  nameFound=true;} else {  Assert.isTrue(!nameFound,ALL_OR_NOTHING);} @AT@ 7366 @LENGTH@ 190
------UPD Block@@ThenBody:{  Assert.isTrue(nameFound || parameter.isFirst(),ALL_OR_NOTHING);  nameFound=true;} @TO@ ThenBody:{  Assert.isTrue(nameFound || index == 0,ALL_OR_NOTHING);  nameFound=true;} @AT@ 7400 @LENGTH@ 97
---------UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(nameFound || parameter.isFirst(),ALL_OR_NOTHING) @TO@ MethodInvocation:Assert.isTrue(nameFound || index == 0,ALL_OR_NOTHING) @AT@ 7406 @LENGTH@ 64
------------UPD MethodInvocation@@Assert.isTrue(nameFound || parameter.isFirst(),ALL_OR_NOTHING) @TO@ Assert.isTrue(nameFound || index == 0,ALL_OR_NOTHING) @AT@ 7406 @LENGTH@ 63
---------------UPD SimpleName@@MethodName:isTrue:[nameFound || parameter.isFirst(), ALL_OR_NOTHING] @TO@ MethodName:isTrue:[nameFound || index == 0, ALL_OR_NOTHING] @AT@ 7413 @LENGTH@ 56
------------------UPD InfixExpression@@nameFound || parameter.isFirst() @TO@ nameFound || index == 0 @AT@ 7420 @LENGTH@ 32
---------------------DEL MethodInvocation@@parameter.isFirst() @AT@ 7433 @LENGTH@ 19
------------------------DEL SimpleName@@Name:parameter @AT@ 7433 @LENGTH@ 9
------------------------DEL SimpleName@@MethodName:isFirst:[] @AT@ 7443 @LENGTH@ 9
---------------------INS InfixExpression@@index == 0 @TO@ InfixExpression@@nameFound || parameter.isFirst() @AT@ 7450 @LENGTH@ 10
------------------------INS SimpleName@@index @TO@ InfixExpression@@index == 0 @AT@ 7450 @LENGTH@ 5
------------------------INS Operator@@== @TO@ InfixExpression@@index == 0 @AT@ 7455 @LENGTH@ 2
------------------------INS NumberLiteral@@0 @TO@ InfixExpression@@index == 0 @AT@ 7459 @LENGTH@ 1
---INS ExpressionStatement@@PostfixExpression:index++ @TO@ EnhancedForStatement@@for (T parameter : this.getBindableParameters()) {  if (parameter.isNamedParameter()) {    Assert.isTrue(nameFound || parameter.isFirst(),ALL_OR_NOTHING);    nameFound=true;  } else {    Assert.isTrue(!nameFound,ALL_OR_NOTHING);  }} @AT@ 7569 @LENGTH@ 8
------INS PostfixExpression@@index++ @TO@ ExpressionStatement@@PostfixExpression:index++ @AT@ 7569 @LENGTH@ 7
---------INS SimpleName@@index @TO@ PostfixExpression@@index++ @AT@ 7569 @LENGTH@ 5
---------INS Operator@@++ @TO@ PostfixExpression@@index++ @AT@ 7575 @LENGTH@ 2


UPD MethodDeclaration@@void, MethodName:init, ThreadFactory threadFactory, NettyServerBootstrapConfiguration configuration, ChannelPipelineFactory pipelineFactory,  @TO@ void, MethodName:init, ThreadFactory threadFactory, NettyServerBootstrapConfiguration configuration, ChannelInitializer<Channel> pipelineFactory,  @AT@ 2165 @LENGTH@ 123
---UPD SingleVariableDeclaration@@ChannelPipelineFactory pipelineFactory @TO@ ChannelInitializer<Channel> pipelineFactory @AT@ 2248 @LENGTH@ 38
------DEL SimpleType@@ChannelPipelineFactory @AT@ 2248 @LENGTH@ 22
------INS ParameterizedType@@ChannelInitializer<Channel> @TO@ SingleVariableDeclaration@@ChannelPipelineFactory pipelineFactory @AT@ 2339 @LENGTH@ 27
---------INS SimpleType@@ChannelInitializer @TO@ ParameterizedType@@ChannelInitializer<Channel> @AT@ 2339 @LENGTH@ 18
---------INS SimpleType@@Channel @TO@ ParameterizedType@@ChannelInitializer<Channel> @AT@ 2358 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals(70010,exchange.getIn().getBody().toString().length()) @TO@ MethodInvocation:assertEquals(70010,exchange.getIn().getBody(byte[].class).length) @AT@ 2069 @LENGTH@ 68
---UPD MethodInvocation@@assertEquals(70010,exchange.getIn().getBody().toString().length()) @TO@ assertEquals(70010,exchange.getIn().getBody(byte[].class).length) @AT@ 2069 @LENGTH@ 67
------UPD SimpleName@@MethodName:assertEquals:[70010, exchange.getIn().getBody().toString().length()] @TO@ MethodName:assertEquals:[70010, exchange.getIn().getBody(byte[].class).length] @AT@ 2069 @LENGTH@ 67
---------DEL MethodInvocation@@exchange.getIn().getBody().toString().length() @AT@ 2089 @LENGTH@ 46
------------DEL MethodInvocation@@MethodName:toString:[] @AT@ 2089 @LENGTH@ 37
------------DEL MethodInvocation@@MethodName:getBody:[] @AT@ 2089 @LENGTH@ 26
---------INS FieldAccess@@exchange.getIn().getBody(byte[].class).length @TO@ SimpleName@@MethodName:assertEquals:[70010, exchange.getIn().getBody().toString().length()] @AT@ 2089 @LENGTH@ 45
------------INS MethodInvocation@@exchange.getIn().getBody(byte[].class) @TO@ FieldAccess@@exchange.getIn().getBody(byte[].class).length @AT@ 2089 @LENGTH@ 38
---------------MOV MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getBody(byte[].class) @AT@ 2089 @LENGTH@ 16
---------------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getBody(byte[].class) @AT@ 2089 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@exchange.getIn().getBody(byte[].class) @AT@ 2127 @LENGTH@ 8
------------------INS TypeLiteral@@byte[].class @TO@ SimpleName@@MethodName:length:[] @AT@ 2114 @LENGTH@ 12
------------------INS TypeLiteral@@byte[].class @TO@ SimpleName@@MethodName:length:[] @AT@ 2114 @LENGTH@ 12
------------INS SimpleName@@length @TO@ FieldAccess@@exchange.getIn().getBody(byte[].class).length @AT@ 2128 @LENGTH@ 6


UPD FieldDeclaration@@static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.RESET_PEAK_THREAD_COUNT,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setReplyType(ModelType.OBJECT).setRuntimeOnly().build()] @TO@ static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.RESET_PEAK_THREAD_COUNT,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setRuntimeOnly().build()] @AT@ 1692 @LENGTH@ 291
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.RESET_PEAK_THREAD_COUNT,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setReplyType(ModelType.OBJECT).setRuntimeOnly().build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.RESET_PEAK_THREAD_COUNT,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setRuntimeOnly().build() @AT@ 1725 @LENGTH@ 257
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.RESET_PEAK_THREAD_COUNT,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setReplyType(ModelType.OBJECT).setRuntimeOnly().build() @TO@ new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.RESET_PEAK_THREAD_COUNT,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setRuntimeOnly().build() @AT@ 1738 @LENGTH@ 244
---------DEL MethodInvocation@@MethodName:setReplyType:[ModelType.OBJECT] @AT@ 1738 @LENGTH@ 193
------------DEL QualifiedName@@ModelType.OBJECT @AT@ 1914 @LENGTH@ 16
---------------DEL SimpleName@@ModelType @AT@ 1914 @LENGTH@ 9
---------------DEL SimpleName@@OBJECT @AT@ 1924 @LENGTH@ 6


INS FieldDeclaration@@private, static, String, [defaultEnabledProtocols] @TO@ TypeDeclaration@@[public]NettyServerBootstrapConfiguration, [Cloneable] @AT@ 1128 @LENGTH@ 46
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, String, [defaultEnabledProtocols] @AT@ 1128 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, String, [defaultEnabledProtocols] @AT@ 1136 @LENGTH@ 6
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, String, [defaultEnabledProtocols] @AT@ 1143 @LENGTH@ 6
---INS VariableDeclarationFragment@@defaultEnabledProtocols @TO@ FieldDeclaration@@private, static, String, [defaultEnabledProtocols] @AT@ 1150 @LENGTH@ 23
------INS SimpleName@@defaultEnabledProtocols @TO@ VariableDeclarationFragment@@defaultEnabledProtocols @AT@ 1150 @LENGTH@ 23


DEL VariableDeclarationStatement@@int ttl=index.expireAfterSeconds(); @AT@ 12374 @LENGTH@ 37
---DEL PrimitiveType@@int @AT@ 12374 @LENGTH@ 3
---DEL VariableDeclarationFragment@@ttl=index.expireAfterSeconds() @AT@ 12378 @LENGTH@ 32
------DEL SimpleName@@ttl @AT@ 12378 @LENGTH@ 3
------DEL MethodInvocation@@index.expireAfterSeconds() @AT@ 12384 @LENGTH@ 26
---------DEL SimpleName@@Name:index @AT@ 12384 @LENGTH@ 5
---------DEL SimpleName@@MethodName:expireAfterSeconds:[] @AT@ 12390 @LENGTH@ 20


MOV FieldDeclaration@@private, static, final, Map<Class<?>,String>, [PRIMITIVE_VALUES] @TO@ TypeDeclaration@@[public, abstract]AbstractApiMethodGeneratorMojo, AbstractApiMethodBaseMojo @AT@ 9952 @LENGTH@ 60


UPD VariableDeclarationStatement@@IndexRequestBuilder prepareIndex=client.prepareIndex(indexName,indexType); @TO@ IndexRequestBuilder prepareIndex=client.prepareIndex(indexName,indexType,indexId); @AT@ 5164 @LENGTH@ 77
---UPD VariableDeclarationFragment@@prepareIndex=client.prepareIndex(indexName,indexType) @TO@ prepareIndex=client.prepareIndex(indexName,indexType,indexId) @AT@ 5184 @LENGTH@ 56
------UPD MethodInvocation@@client.prepareIndex(indexName,indexType) @TO@ client.prepareIndex(indexName,indexType,indexId) @AT@ 5199 @LENGTH@ 41
---------UPD SimpleName@@MethodName:prepareIndex:[indexName, indexType] @TO@ MethodName:prepareIndex:[indexName, indexType, indexId] @AT@ 5206 @LENGTH@ 34
------------INS SimpleName@@indexId @TO@ SimpleName@@MethodName:prepareIndex:[indexName, indexType] @AT@ 5352 @LENGTH@ 7


UPD SwitchCase@@case ALGORITHM_DES_CRYPT: @TO@ case ALGORITHM_CRYPT_DES: @AT@ 10592 @LENGTH@ 25
---UPD SimpleName@@ALGORITHM_DES_CRYPT @TO@ ALGORITHM_CRYPT_DES @AT@ 10597 @LENGTH@ 19


MOV FieldDeclaration@@private, String, [cacheName] @TO@ TypeDeclaration@@[@UriParams, public]InfinispanConfiguration,  @AT@ 1175 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:builder.append(type).append(" ").append(names[i]).append(",") @TO@ MethodInvocation:builder.append(type).append(" ").append(names[i++]).append(",") @AT@ 13869 @LENGTH@ 62
---UPD MethodInvocation@@builder.append(type).append(" ").append(names[i]).append(",") @TO@ builder.append(type).append(" ").append(names[i++]).append(",") @AT@ 13869 @LENGTH@ 61
------UPD MethodInvocation@@MethodName:append:[names[i]] @TO@ MethodName:append:[names[i++]] @AT@ 13869 @LENGTH@ 49
---------UPD ArrayAccess@@names[i] @TO@ names[i++] @AT@ 13909 @LENGTH@ 8
------------INS PostfixExpression@@i++ @TO@ ArrayAccess@@names[i] @AT@ 13915 @LENGTH@ 3
---------------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 13915 @LENGTH@ 1
---------------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 13917 @LENGTH@ 2
------------DEL SimpleName@@i @AT@ 13915 @LENGTH@ 1


UPD TypeDeclaration@@[@VectorizedExpressions({IfExprLongColumnLongColumn.class,IfExprDoubleColumnDoubleColumn.class,IfExprLongColumnLongScalar.class,IfExprDoubleColumnDoubleScalar.class,IfExprLongColumnDoubleScalar.class,IfExprDoubleColumnLongScalar.class,IfExprLongScalarLongColumn.class,IfExprDoubleScalarDoubleColumn.class,IfExprLongScalarDoubleColumn.class,IfExprDoubleScalarLongColumn.class,IfExprLongScalarLongScalar.class,IfExprDoubleScalarDoubleScalar.class,IfExprLongScalarDoubleScalar.class,IfExprDoubleScalarLongScalar.class,IfExprStringColumnStringColumn.class,IfExprStringColumnStringScalar.class,IfExprStringScalarStringColumn.class,IfExprStringScalarStringScalar.class}), public]GenericUDFIf, GenericUDF @TO@ [@Description(name="if",value="IF(expr1,expr2,expr3) - If expr1 is TRUE (expr1 <> 0 and expr1 <> NULL) then" + " IF() returns expr2; otherwise it returns expr3. IF() returns a numeric or string value," + " depending on the context in which it is used."), @VectorizedExpressions({IfExprLongColumnLongColumn.class,IfExprDoubleColumnDoubleColumn.class,IfExprLongColumnLongScalar.class,IfExprDoubleColumnDoubleScalar.class,IfExprLongColumnDoubleScalar.class,IfExprDoubleColumnLongScalar.class,IfExprLongScalarLongColumn.class,IfExprDoubleScalarDoubleColumn.class,IfExprLongScalarDoubleColumn.class,IfExprDoubleScalarLongColumn.class,IfExprLongScalarLongScalar.class,IfExprDoubleScalarDoubleScalar.class,IfExprLongScalarDoubleScalar.class,IfExprDoubleScalarLongScalar.class,IfExprStringColumnStringColumn.class,IfExprStringColumnStringScalar.class,IfExprStringScalarStringColumn.class,IfExprStringScalarStringScalar.class}), public]GenericUDFIf, GenericUDF @AT@ 3324 @LENGTH@ 3115
---INS NormalAnnotation@@@Description(name="if",value="IF(expr1,expr2,expr3) - If expr1 is TRUE (expr1 <> 0 and expr1 <> NULL) then" + " IF() returns expr2; otherwise it returns expr3. IF() returns a numeric or string value," + " depending on the context in which it is used.") @TO@ TypeDeclaration@@[@VectorizedExpressions({IfExprLongColumnLongColumn.class,IfExprDoubleColumnDoubleColumn.class,IfExprLongColumnLongScalar.class,IfExprDoubleColumnDoubleScalar.class,IfExprLongColumnDoubleScalar.class,IfExprDoubleColumnLongScalar.class,IfExprLongScalarLongColumn.class,IfExprDoubleScalarDoubleColumn.class,IfExprLongScalarDoubleColumn.class,IfExprDoubleScalarLongColumn.class,IfExprLongScalarLongScalar.class,IfExprDoubleScalarDoubleScalar.class,IfExprLongScalarDoubleScalar.class,IfExprDoubleScalarLongScalar.class,IfExprStringColumnStringColumn.class,IfExprStringColumnStringScalar.class,IfExprStringScalarStringColumn.class,IfExprStringScalarStringScalar.class}), public]GenericUDFIf, GenericUDF @AT@ 3375 @LENGTH@ 274


UPD VariableDeclarationStatement@@Map<String,Object> copy=new HashMap<>(parameters); @TO@ Map<String,Object> copy=new HashMap<String,Object>(parameters); @AT@ 10781 @LENGTH@ 53
---UPD VariableDeclarationFragment@@copy=new HashMap<>(parameters) @TO@ copy=new HashMap<String,Object>(parameters) @AT@ 10801 @LENGTH@ 32
------UPD ClassInstanceCreation@@HashMap<>[parameters] @TO@ HashMap<String,Object>[parameters] @AT@ 10808 @LENGTH@ 25
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<String,Object> @AT@ 10812 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 10820 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<> @AT@ 10828 @LENGTH@ 6


INS VariableDeclarationStatement@@String fullPath=(name.startsWith(Region.SEPARATOR) ? name : Region.SEPARATOR + name); @TO@ MethodDeclaration@@public, Region, MethodName:mockRegion, String name,  @AT@ 19555 @LENGTH@ 87
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String fullPath=(name.startsWith(Region.SEPARATOR) ? name : Region.SEPARATOR + name); @AT@ 19555 @LENGTH@ 6
---INS VariableDeclarationFragment@@fullPath=(name.startsWith(Region.SEPARATOR) ? name : Region.SEPARATOR + name) @TO@ VariableDeclarationStatement@@String fullPath=(name.startsWith(Region.SEPARATOR) ? name : Region.SEPARATOR + name); @AT@ 19562 @LENGTH@ 79
------INS SimpleName@@fullPath @TO@ VariableDeclarationFragment@@fullPath=(name.startsWith(Region.SEPARATOR) ? name : Region.SEPARATOR + name) @AT@ 19562 @LENGTH@ 8
------INS ParenthesizedExpression@@(name.startsWith(Region.SEPARATOR) ? name : Region.SEPARATOR + name) @TO@ VariableDeclarationFragment@@fullPath=(name.startsWith(Region.SEPARATOR) ? name : Region.SEPARATOR + name) @AT@ 19573 @LENGTH@ 68
---------INS ConditionalExpression@@name.startsWith(Region.SEPARATOR) ? name : Region.SEPARATOR + name @TO@ ParenthesizedExpression@@(name.startsWith(Region.SEPARATOR) ? name : Region.SEPARATOR + name) @AT@ 19574 @LENGTH@ 66
------------INS MethodInvocation@@name.startsWith(Region.SEPARATOR) @TO@ ConditionalExpression@@name.startsWith(Region.SEPARATOR) ? name : Region.SEPARATOR + name @AT@ 19574 @LENGTH@ 33
---------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.startsWith(Region.SEPARATOR) @AT@ 19574 @LENGTH@ 4
---------------INS SimpleName@@MethodName:startsWith:[Region.SEPARATOR] @TO@ MethodInvocation@@name.startsWith(Region.SEPARATOR) @AT@ 19579 @LENGTH@ 28
------------------INS QualifiedName@@Region.SEPARATOR @TO@ SimpleName@@MethodName:startsWith:[Region.SEPARATOR] @AT@ 19590 @LENGTH@ 16
---------------------INS SimpleName@@Region @TO@ QualifiedName@@Region.SEPARATOR @AT@ 19590 @LENGTH@ 6
---------------------INS SimpleName@@SEPARATOR @TO@ QualifiedName@@Region.SEPARATOR @AT@ 19597 @LENGTH@ 9
------------MOV InfixExpression@@Region.SEPARATOR + name @TO@ ConditionalExpression@@name.startsWith(Region.SEPARATOR) ? name : Region.SEPARATOR + name @AT@ 19593 @LENGTH@ 23
------------INS SimpleName@@name @TO@ ConditionalExpression@@name.startsWith(Region.SEPARATOR) ? name : Region.SEPARATOR + name @AT@ 19610 @LENGTH@ 4


UPD MethodDeclaration@@private, void, MethodName:assertEitherAllParamAnnotatedOrNone,  @TO@ private, final, void, MethodName:assertEitherAllParamAnnotatedOrNone,  @AT@ 7014 @LENGTH@ 359
---INS Modifier@@final @TO@ MethodDeclaration@@private, void, MethodName:assertEitherAllParamAnnotatedOrNone,  @AT@ 7022 @LENGTH@ 5


UPD EnhancedForStatement@@for (String ns : nsMap.keySet()) {  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @TO@ for (String ns : nsMap.keySet()) {  if (XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) {    element.setAttribute(ns,nsMap.get(ns));  } else {    element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));  }} @AT@ 3820 @LENGTH@ 142
---INS IfStatement@@if (XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) {  element.setAttribute(ns,nsMap.get(ns));} else {  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @TO@ EnhancedForStatement@@for (String ns : nsMap.keySet()) {  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @AT@ 3871 @LENGTH@ 248
------INS MethodInvocation@@XMLConstants.XMLNS_ATTRIBUTE.equals(ns) @TO@ IfStatement@@if (XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) {  element.setAttribute(ns,nsMap.get(ns));} else {  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @AT@ 3875 @LENGTH@ 39
---------INS QualifiedName@@Name:XMLConstants.XMLNS_ATTRIBUTE @TO@ MethodInvocation@@XMLConstants.XMLNS_ATTRIBUTE.equals(ns) @AT@ 3875 @LENGTH@ 28
---------INS SimpleName@@MethodName:equals:[ns] @TO@ MethodInvocation@@XMLConstants.XMLNS_ATTRIBUTE.equals(ns) @AT@ 3904 @LENGTH@ 10
------------INS SimpleName@@ns @TO@ SimpleName@@MethodName:equals:[ns] @AT@ 3911 @LENGTH@ 2
------INS Block@@ThenBody:{  element.setAttribute(ns,nsMap.get(ns));} @TO@ IfStatement@@if (XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) {  element.setAttribute(ns,nsMap.get(ns));} else {  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @AT@ 3916 @LENGTH@ 80
---------INS ExpressionStatement@@MethodInvocation:element.setAttribute(ns,nsMap.get(ns)) @TO@ Block@@ThenBody:{  element.setAttribute(ns,nsMap.get(ns));} @AT@ 3938 @LENGTH@ 40
------------INS MethodInvocation@@element.setAttribute(ns,nsMap.get(ns)) @TO@ ExpressionStatement@@MethodInvocation:element.setAttribute(ns,nsMap.get(ns)) @AT@ 3938 @LENGTH@ 39
---------------INS SimpleName@@Name:element @TO@ MethodInvocation@@element.setAttribute(ns,nsMap.get(ns)) @AT@ 3938 @LENGTH@ 7
---------------INS SimpleName@@MethodName:setAttribute:[ns, nsMap.get(ns)] @TO@ MethodInvocation@@element.setAttribute(ns,nsMap.get(ns)) @AT@ 3946 @LENGTH@ 31
------------------INS SimpleName@@ns @TO@ SimpleName@@MethodName:setAttribute:[ns, nsMap.get(ns)] @AT@ 3959 @LENGTH@ 2
------------------INS MethodInvocation@@nsMap.get(ns) @TO@ SimpleName@@MethodName:setAttribute:[ns, nsMap.get(ns)] @AT@ 3963 @LENGTH@ 13
---------------------INS SimpleName@@Name:nsMap @TO@ MethodInvocation@@nsMap.get(ns) @AT@ 3963 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:get:[ns] @TO@ MethodInvocation@@nsMap.get(ns) @AT@ 3969 @LENGTH@ 7
------------------------INS SimpleName@@ns @TO@ SimpleName@@MethodName:get:[ns] @AT@ 3973 @LENGTH@ 2
------INS Block@@ElseBody:{  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @TO@ IfStatement@@if (XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) {  element.setAttribute(ns,nsMap.get(ns));} else {  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @AT@ 4002 @LENGTH@ 117
---------MOV ExpressionStatement@@MethodInvocation:element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns)) @TO@ Block@@ElseBody:{  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @AT@ 3871 @LENGTH@ 77


UPD VariableDeclarationStatement@@String out=(String)template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString()); @TO@ String out=template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString(),String.class); @AT@ 3080 @LENGTH@ 126
---UPD VariableDeclarationFragment@@out=(String)template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString()) @TO@ out=template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString(),String.class) @AT@ 3087 @LENGTH@ 118
------INS MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString(),String.class) @TO@ VariableDeclarationFragment@@out=(String)template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString()) @AT@ 3093 @LENGTH@ 118
---------MOV SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString(),String.class) @AT@ 3101 @LENGTH@ 8
---------MOV SimpleName@@MethodName:requestBody:["mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec", in.toString()] @TO@ MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString(),String.class) @AT@ 3110 @LENGTH@ 95
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:requestBody:["mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec", in.toString()] @AT@ 3198 @LENGTH@ 12
------DEL CastExpression@@(String)template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString()) @AT@ 3093 @LENGTH@ 112
---------DEL SimpleType@@String @AT@ 3094 @LENGTH@ 6
---------DEL MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec",in.toString()) @AT@ 3101 @LENGTH@ 104


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"accessToken\": { \"type\": \"java.lang.String\" }")) @TO@ MethodInvocation:assertTrue(json.contains("\"accessToken\": { \"type\": \"string\" }")) @AT@ 3764 @LENGTH@ 81
---UPD MethodInvocation@@assertTrue(json.contains("\"accessToken\": { \"type\": \"java.lang.String\" }")) @TO@ assertTrue(json.contains("\"accessToken\": { \"type\": \"string\" }")) @AT@ 3764 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"accessToken\": { \"type\": \"java.lang.String\" }")] @TO@ MethodName:assertTrue:[json.contains("\"accessToken\": { \"type\": \"string\" }")] @AT@ 3764 @LENGTH@ 80
---------UPD MethodInvocation@@json.contains("\"accessToken\": { \"type\": \"java.lang.String\" }") @TO@ json.contains("\"accessToken\": { \"type\": \"string\" }") @AT@ 3775 @LENGTH@ 68
------------UPD SimpleName@@MethodName:contains:["\"accessToken\": { \"type\": \"java.lang.String\" }"] @TO@ MethodName:contains:["\"accessToken\": { \"type\": \"string\" }"] @AT@ 3780 @LENGTH@ 63
---------------UPD StringLiteral@@"\"accessToken\": { \"type\": \"java.lang.String\" }" @TO@ "\"accessToken\": { \"type\": \"string\" }" @AT@ 3789 @LENGTH@ 53


UPD ExpressionStatement@@MethodInvocation:assertThat(optionsCaptor.getValue(),equalTo(new BasicDBObjectBuilder().add("name","location").add("min",-180).add("max",180).add("bits",26).get())) @TO@ MethodInvocation:assertThat(optionsCaptor.getValue(),equalTo(new BasicDBObjectBuilder().add("name","company.address.location").add("min",-180).add("max",180).add("bits",26).get())) @AT@ 5938 @LENGTH@ 158
---UPD MethodInvocation@@assertThat(optionsCaptor.getValue(),equalTo(new BasicDBObjectBuilder().add("name","location").add("min",-180).add("max",180).add("bits",26).get())) @TO@ assertThat(optionsCaptor.getValue(),equalTo(new BasicDBObjectBuilder().add("name","company.address.location").add("min",-180).add("max",180).add("bits",26).get())) @AT@ 5938 @LENGTH@ 157
------UPD SimpleName@@MethodName:assertThat:[optionsCaptor.getValue(), equalTo(new BasicDBObjectBuilder().add("name","location").add("min",-180).add("max",180).add("bits",26).get())] @TO@ MethodName:assertThat:[optionsCaptor.getValue(), equalTo(new BasicDBObjectBuilder().add("name","company.address.location").add("min",-180).add("max",180).add("bits",26).get())] @AT@ 5938 @LENGTH@ 157
---------UPD MethodInvocation@@equalTo(new BasicDBObjectBuilder().add("name","location").add("min",-180).add("max",180).add("bits",26).get()) @TO@ equalTo(new BasicDBObjectBuilder().add("name","company.address.location").add("min",-180).add("max",180).add("bits",26).get()) @AT@ 5975 @LENGTH@ 119
------------UPD SimpleName@@MethodName:equalTo:[new BasicDBObjectBuilder().add("name","location").add("min",-180).add("max",180).add("bits",26).get()] @TO@ MethodName:equalTo:[new BasicDBObjectBuilder().add("name","company.address.location").add("min",-180).add("max",180).add("bits",26).get()] @AT@ 5975 @LENGTH@ 119
---------------UPD MethodInvocation@@new BasicDBObjectBuilder().add("name","location").add("min",-180).add("max",180).add("bits",26).get() @TO@ new BasicDBObjectBuilder().add("name","company.address.location").add("min",-180).add("max",180).add("bits",26).get() @AT@ 5983 @LENGTH@ 110
------------------UPD MethodInvocation@@MethodName:add:["name", "location"] @TO@ MethodName:add:["name", "company.address.location"] @AT@ 5983 @LENGTH@ 50
---------------------UPD StringLiteral@@"location" @TO@ "company.address.location" @AT@ 6022 @LENGTH@ 10
------------UPD SimpleName@@MethodName:equalTo:[new BasicDBObjectBuilder().add("name","location").add("min",-180).add("max",180).add("bits",26).get()] @TO@ MethodName:equalTo:[new BasicDBObjectBuilder().add("name","company.address.location").add("min",-180).add("max",180).add("bits",26).get()] @AT@ 5975 @LENGTH@ 119
---------------UPD MethodInvocation@@new BasicDBObjectBuilder().add("name","location").add("min",-180).add("max",180).add("bits",26).get() @TO@ new BasicDBObjectBuilder().add("name","company.address.location").add("min",-180).add("max",180).add("bits",26).get() @AT@ 5983 @LENGTH@ 110
------------------UPD MethodInvocation@@MethodName:add:["name", "location"] @TO@ MethodName:add:["name", "company.address.location"] @AT@ 5983 @LENGTH@ 50
---------------------UPD StringLiteral@@"location" @TO@ "company.address.location" @AT@ 6022 @LENGTH@ 10


UPD TypeDeclaration@@[public]NotLesserThanOperation, ComparisonOperation @TO@ [public]NotLesserThanOperation, SameTypeOperation @AT@ 1154 @LENGTH@ 417
---UPD SimpleType@@ComparisonOperation @TO@ SameTypeOperation @AT@ 1198 @LENGTH@ 19


UPD MethodDeclaration@@public, void, MethodName:testClasspath, Exception,  @TO@ public, void, MethodName:testRedirectInvocation, Exception,  @AT@ 1186 @LENGTH@ 287
---UPD SimpleName@@MethodName:testClasspath @TO@ MethodName:testRedirectInvocation @AT@ 1198 @LENGTH@ 13


UPD VariableDeclarationStatement@@Map<String,RejectAttributeChecker> mapChecker=new HashMap<>(); @TO@ Map<String,RejectAttributeChecker> mapChecker=new HashMap<String,RejectAttributeChecker>(); @AT@ 11325 @LENGTH@ 65
---UPD VariableDeclarationFragment@@mapChecker=new HashMap<>() @TO@ mapChecker=new HashMap<String,RejectAttributeChecker>() @AT@ 11361 @LENGTH@ 28
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<String,RejectAttributeChecker>[] @AT@ 11374 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<String,RejectAttributeChecker> @AT@ 11378 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 11386 @LENGTH@ 6
------------INS SimpleType@@RejectAttributeChecker @TO@ ParameterizedType@@HashMap<> @AT@ 11394 @LENGTH@ 22


INS MethodDeclaration@@public, voidMethodName:GHttpComponent,  @TO@ TypeDeclaration@@[public]GHttpComponent, ServletComponent @AT@ 1998 @LENGTH@ 67
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:GHttpComponent,  @AT@ 1998 @LENGTH@ 6
---INS SimpleName@@MethodName:GHttpComponent @TO@ MethodDeclaration@@public, voidMethodName:GHttpComponent,  @AT@ 2005 @LENGTH@ 14
---INS SuperConstructorInvocation@@super(GHttpEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:GHttpComponent,  @AT@ 2032 @LENGTH@ 27
------INS TypeLiteral@@GHttpEndpoint.class @TO@ SuperConstructorInvocation@@super(GHttpEndpoint.class);
 @AT@ 2038 @LENGTH@ 19


UPD TypeDeclaration@@[public]OptaPlannerComponent, DefaultComponent @TO@ [public]OptaPlannerComponent, UriEndpointComponent @AT@ 1115 @LENGTH@ 468
---UPD SimpleType@@DefaultComponent @TO@ UriEndpointComponent @AT@ 1157 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:testFindAccessTokensByUserName,  @TO@ TypeDeclaration@@[public]JdbcTokenStoreTests, TokenStoreBaseTests @AT@ 1171 @LENGTH@ 554
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testFindAccessTokensByUserName,  @AT@ 1171 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testFindAccessTokensByUserName,  @AT@ 1178 @LENGTH@ 4
---INS SimpleName@@MethodName:testFindAccessTokensByUserName @TO@ MethodDeclaration@@public, void, MethodName:testFindAccessTokensByUserName,  @AT@ 1183 @LENGTH@ 30
---INS VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(RequestTokenFactory.createOAuth2Request("id",false),new TestAuthentication("test2",false)); @TO@ MethodDeclaration@@public, void, MethodName:testFindAccessTokensByUserName,  @AT@ 1220 @LENGTH@ 165
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(RequestTokenFactory.createOAuth2Request("id",false),new TestAuthentication("test2",false)); @AT@ 1220 @LENGTH@ 20
------INS VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(RequestTokenFactory.createOAuth2Request("id",false),new TestAuthentication("test2",false)) @TO@ VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(RequestTokenFactory.createOAuth2Request("id",false),new TestAuthentication("test2",false)); @AT@ 1241 @LENGTH@ 143
---------INS SimpleName@@expectedAuthentication @TO@ VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(RequestTokenFactory.createOAuth2Request("id",false),new TestAuthentication("test2",false)) @AT@ 1241 @LENGTH@ 22
---------INS ClassInstanceCreation@@OAuth2Authentication[RequestTokenFactory.createOAuth2Request("id",false), new TestAuthentication("test2",false)] @TO@ VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(RequestTokenFactory.createOAuth2Request("id",false),new TestAuthentication("test2",false)) @AT@ 1266 @LENGTH@ 118
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Authentication[RequestTokenFactory.createOAuth2Request("id",false), new TestAuthentication("test2",false)] @AT@ 1266 @LENGTH@ 3
------------INS SimpleType@@OAuth2Authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[RequestTokenFactory.createOAuth2Request("id",false), new TestAuthentication("test2",false)] @AT@ 1270 @LENGTH@ 20
------------INS MethodInvocation@@RequestTokenFactory.createOAuth2Request("id",false) @TO@ ClassInstanceCreation@@OAuth2Authentication[RequestTokenFactory.createOAuth2Request("id",false), new TestAuthentication("test2",false)] @AT@ 1291 @LENGTH@ 52
---------------INS SimpleName@@Name:RequestTokenFactory @TO@ MethodInvocation@@RequestTokenFactory.createOAuth2Request("id",false) @AT@ 1291 @LENGTH@ 19
---------------INS SimpleName@@MethodName:createOAuth2Request:["id", false] @TO@ MethodInvocation@@RequestTokenFactory.createOAuth2Request("id",false) @AT@ 1311 @LENGTH@ 32
------------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:createOAuth2Request:["id", false] @AT@ 1331 @LENGTH@ 4
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:createOAuth2Request:["id", false] @AT@ 1337 @LENGTH@ 5
------------INS ClassInstanceCreation@@TestAuthentication["test2", false] @TO@ ClassInstanceCreation@@OAuth2Authentication[RequestTokenFactory.createOAuth2Request("id",false), new TestAuthentication("test2",false)] @AT@ 1345 @LENGTH@ 38
---------------INS New@@new @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 1345 @LENGTH@ 3
---------------INS SimpleType@@TestAuthentication @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 1349 @LENGTH@ 18
---------------INS StringLiteral@@"test2" @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 1368 @LENGTH@ 7
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 1377 @LENGTH@ 5
---INS VariableDeclarationStatement@@OAuth2AccessToken expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken"); @TO@ MethodDeclaration@@public, void, MethodName:testFindAccessTokensByUserName,  @AT@ 1388 @LENGTH@ 88
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken"); @AT@ 1388 @LENGTH@ 17
------INS VariableDeclarationFragment@@expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken") @TO@ VariableDeclarationStatement@@OAuth2AccessToken expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken"); @AT@ 1406 @LENGTH@ 69
---------INS SimpleName@@expectedOAuth2AccessToken @TO@ VariableDeclarationFragment@@expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken") @AT@ 1406 @LENGTH@ 25
---------INS ClassInstanceCreation@@DefaultOAuth2AccessToken["testToken"] @TO@ VariableDeclarationFragment@@expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken") @AT@ 1434 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["testToken"] @AT@ 1434 @LENGTH@ 3
------------INS SimpleType@@DefaultOAuth2AccessToken @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["testToken"] @AT@ 1438 @LENGTH@ 24
------------INS StringLiteral@@"testToken" @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["testToken"] @AT@ 1463 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @TO@ MethodDeclaration@@public, void, MethodName:testFindAccessTokensByUserName,  @AT@ 1479 @LENGTH@ 84
------INS MethodInvocation@@getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @TO@ ExpressionStatement@@MethodInvocation:getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @AT@ 1479 @LENGTH@ 83
---------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @AT@ 1479 @LENGTH@ 15
---------INS SimpleName@@MethodName:storeAccessToken:[expectedOAuth2AccessToken, expectedAuthentication] @TO@ MethodInvocation@@getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @AT@ 1495 @LENGTH@ 67
------------INS SimpleName@@expectedOAuth2AccessToken @TO@ SimpleName@@MethodName:storeAccessToken:[expectedOAuth2AccessToken, expectedAuthentication] @AT@ 1512 @LENGTH@ 25
------------INS SimpleName@@expectedAuthentication @TO@ SimpleName@@MethodName:storeAccessToken:[expectedOAuth2AccessToken, expectedAuthentication] @AT@ 1539 @LENGTH@ 22
---INS VariableDeclarationStatement@@Collection<OAuth2AccessToken> actualOAuth2AccessTokens=getTokenStore().findTokensByUserName("test2"); @TO@ MethodDeclaration@@public, void, MethodName:testFindAccessTokensByUserName,  @AT@ 1567 @LENGTH@ 103
------INS ParameterizedType@@Collection<OAuth2AccessToken> @TO@ VariableDeclarationStatement@@Collection<OAuth2AccessToken> actualOAuth2AccessTokens=getTokenStore().findTokensByUserName("test2"); @AT@ 1567 @LENGTH@ 29
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<OAuth2AccessToken> @AT@ 1567 @LENGTH@ 10
---------INS SimpleType@@OAuth2AccessToken @TO@ ParameterizedType@@Collection<OAuth2AccessToken> @AT@ 1578 @LENGTH@ 17
------INS VariableDeclarationFragment@@actualOAuth2AccessTokens=getTokenStore().findTokensByUserName("test2") @TO@ VariableDeclarationStatement@@Collection<OAuth2AccessToken> actualOAuth2AccessTokens=getTokenStore().findTokensByUserName("test2"); @AT@ 1597 @LENGTH@ 72
---------INS SimpleName@@actualOAuth2AccessTokens @TO@ VariableDeclarationFragment@@actualOAuth2AccessTokens=getTokenStore().findTokensByUserName("test2") @AT@ 1597 @LENGTH@ 24
---------INS MethodInvocation@@getTokenStore().findTokensByUserName("test2") @TO@ VariableDeclarationFragment@@actualOAuth2AccessTokens=getTokenStore().findTokensByUserName("test2") @AT@ 1624 @LENGTH@ 45
------------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().findTokensByUserName("test2") @AT@ 1624 @LENGTH@ 15
------------INS SimpleName@@MethodName:findTokensByUserName:["test2"] @TO@ MethodInvocation@@getTokenStore().findTokensByUserName("test2") @AT@ 1640 @LENGTH@ 29
---------------INS StringLiteral@@"test2" @TO@ SimpleName@@MethodName:findTokensByUserName:["test2"] @AT@ 1661 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,actualOAuth2AccessTokens.size()) @TO@ MethodDeclaration@@public, void, MethodName:testFindAccessTokensByUserName,  @AT@ 1673 @LENGTH@ 49
------INS MethodInvocation@@assertEquals(1,actualOAuth2AccessTokens.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,actualOAuth2AccessTokens.size()) @AT@ 1673 @LENGTH@ 48
---------INS SimpleName@@MethodName:assertEquals:[1, actualOAuth2AccessTokens.size()] @TO@ MethodInvocation@@assertEquals(1,actualOAuth2AccessTokens.size()) @AT@ 1673 @LENGTH@ 48
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, actualOAuth2AccessTokens.size()] @AT@ 1686 @LENGTH@ 1
------------INS MethodInvocation@@actualOAuth2AccessTokens.size() @TO@ SimpleName@@MethodName:assertEquals:[1, actualOAuth2AccessTokens.size()] @AT@ 1689 @LENGTH@ 31
---------------INS SimpleName@@Name:actualOAuth2AccessTokens @TO@ MethodInvocation@@actualOAuth2AccessTokens.size() @AT@ 1689 @LENGTH@ 24
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@actualOAuth2AccessTokens.size() @AT@ 1714 @LENGTH@ 6


UPD IfStatement@@if (fieldSchema.getType().equals(Schema.Type.RECORD)) {  throw new StoreException("Nested record currently not supported for field: " + f.name() + " of type: "+ beanWrapper.getPropertyDescriptor(f.name()).getPropertyType().getName());} else {  builder.set(f.name(),beanWrapper.getPropertyValue(f.name()));} @TO@ if (fieldSchema.getType().equals(Schema.Type.RECORD)) {  throw new StoreException("Nested record currently not supported for field: " + f.name() + " of type: "+ beanWrapper.getPropertyDescriptor(f.name()).getPropertyType().getName());} else {  if (fieldSchema.getType().equals(Schema.Type.BYTES)) {    ByteBuffer buffer=null;    Object value=beanWrapper.getPropertyValue(f.name());    if (value == null || value instanceof byte[]) {      if (value != null) {        byte[] bytes=(byte[])value;        buffer=ByteBuffer.wrap(bytes);      }      builder.set(f.name(),buffer);    } else {      throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);    }  } else {    builder.set(f.name(),beanWrapper.getPropertyValue(f.name()));  }} @AT@ 3623 @LENGTH@ 333
---INS Block@@ElseBody:{  if (fieldSchema.getType().equals(Schema.Type.BYTES)) {    ByteBuffer buffer=null;    Object value=beanWrapper.getPropertyValue(f.name());    if (value == null || value instanceof byte[]) {      if (value != null) {        byte[] bytes=(byte[])value;        buffer=ByteBuffer.wrap(bytes);      }      builder.set(f.name(),buffer);    } else {      throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);    }  } else {    builder.set(f.name(),beanWrapper.getPropertyValue(f.name()));  }} @TO@ IfStatement@@if (fieldSchema.getType().equals(Schema.Type.RECORD)) {  throw new StoreException("Nested record currently not supported for field: " + f.name() + " of type: "+ beanWrapper.getPropertyDescriptor(f.name()).getPropertyType().getName());} else {  builder.set(f.name(),beanWrapper.getPropertyValue(f.name()));} @AT@ 3909 @LENGTH@ 589
------INS IfStatement@@if (fieldSchema.getType().equals(Schema.Type.BYTES)) {  ByteBuffer buffer=null;  Object value=beanWrapper.getPropertyValue(f.name());  if (value == null || value instanceof byte[]) {    if (value != null) {      byte[] bytes=(byte[])value;      buffer=ByteBuffer.wrap(bytes);    }    builder.set(f.name(),buffer);  } else {    throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);  }} else {  builder.set(f.name(),beanWrapper.getPropertyValue(f.name()));} @TO@ Block@@ElseBody:{  if (fieldSchema.getType().equals(Schema.Type.BYTES)) {    ByteBuffer buffer=null;    Object value=beanWrapper.getPropertyValue(f.name());    if (value == null || value instanceof byte[]) {      if (value != null) {        byte[] bytes=(byte[])value;        buffer=ByteBuffer.wrap(bytes);      }      builder.set(f.name(),buffer);    } else {      throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);    }  } else {    builder.set(f.name(),beanWrapper.getPropertyValue(f.name()));  }} @AT@ 3916 @LENGTH@ 576
---------MOV Block@@ElseBody:{  builder.set(f.name(),beanWrapper.getPropertyValue(f.name()));} @TO@ IfStatement@@if (fieldSchema.getType().equals(Schema.Type.BYTES)) {  ByteBuffer buffer=null;  Object value=beanWrapper.getPropertyValue(f.name());  if (value == null || value instanceof byte[]) {    if (value != null) {      byte[] bytes=(byte[])value;      buffer=ByteBuffer.wrap(bytes);    }    builder.set(f.name(),buffer);  } else {    throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);  }} else {  builder.set(f.name(),beanWrapper.getPropertyValue(f.name()));} @AT@ 3881 @LENGTH@ 75
---------INS MethodInvocation@@fieldSchema.getType().equals(Schema.Type.BYTES) @TO@ IfStatement@@if (fieldSchema.getType().equals(Schema.Type.BYTES)) {  ByteBuffer buffer=null;  Object value=beanWrapper.getPropertyValue(f.name());  if (value == null || value instanceof byte[]) {    if (value != null) {      byte[] bytes=(byte[])value;      buffer=ByteBuffer.wrap(bytes);    }    builder.set(f.name(),buffer);  } else {    throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);  }} else {  builder.set(f.name(),beanWrapper.getPropertyValue(f.name()));} @AT@ 3920 @LENGTH@ 47
------------INS MethodInvocation@@MethodName:getType:[] @TO@ MethodInvocation@@fieldSchema.getType().equals(Schema.Type.BYTES) @AT@ 3920 @LENGTH@ 21
------------INS SimpleName@@Name:fieldSchema @TO@ MethodInvocation@@fieldSchema.getType().equals(Schema.Type.BYTES) @AT@ 3920 @LENGTH@ 11
------------INS SimpleName@@MethodName:equals:[Schema.Type.BYTES] @TO@ MethodInvocation@@fieldSchema.getType().equals(Schema.Type.BYTES) @AT@ 3942 @LENGTH@ 25
---------------INS QualifiedName@@Schema.Type.BYTES @TO@ SimpleName@@MethodName:equals:[Schema.Type.BYTES] @AT@ 3949 @LENGTH@ 17
------------------INS QualifiedName@@Schema.Type @TO@ QualifiedName@@Schema.Type.BYTES @AT@ 3949 @LENGTH@ 11
---------------------INS SimpleName@@Schema @TO@ QualifiedName@@Schema.Type @AT@ 3949 @LENGTH@ 6
---------------------INS SimpleName@@Type @TO@ QualifiedName@@Schema.Type @AT@ 3956 @LENGTH@ 4
------------------INS SimpleName@@BYTES @TO@ QualifiedName@@Schema.Type.BYTES @AT@ 3961 @LENGTH@ 5
---------INS Block@@ThenBody:{  ByteBuffer buffer=null;  Object value=beanWrapper.getPropertyValue(f.name());  if (value == null || value instanceof byte[]) {    if (value != null) {      byte[] bytes=(byte[])value;      buffer=ByteBuffer.wrap(bytes);    }    builder.set(f.name(),buffer);  } else {    throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);  }} @TO@ IfStatement@@if (fieldSchema.getType().equals(Schema.Type.BYTES)) {  ByteBuffer buffer=null;  Object value=beanWrapper.getPropertyValue(f.name());  if (value == null || value instanceof byte[]) {    if (value != null) {      byte[] bytes=(byte[])value;      buffer=ByteBuffer.wrap(bytes);    }    builder.set(f.name(),buffer);  } else {    throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);  }} else {  builder.set(f.name(),beanWrapper.getPropertyValue(f.name()));} @AT@ 3969 @LENGTH@ 437
------------INS VariableDeclarationStatement@@ByteBuffer buffer=null; @TO@ Block@@ThenBody:{  ByteBuffer buffer=null;  Object value=beanWrapper.getPropertyValue(f.name());  if (value == null || value instanceof byte[]) {    if (value != null) {      byte[] bytes=(byte[])value;      buffer=ByteBuffer.wrap(bytes);    }    builder.set(f.name(),buffer);  } else {    throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);  }} @AT@ 3977 @LENGTH@ 25
---------------INS SimpleType@@ByteBuffer @TO@ VariableDeclarationStatement@@ByteBuffer buffer=null; @AT@ 3977 @LENGTH@ 10
---------------INS VariableDeclarationFragment@@buffer=null @TO@ VariableDeclarationStatement@@ByteBuffer buffer=null; @AT@ 3988 @LENGTH@ 13
------------------INS SimpleName@@buffer @TO@ VariableDeclarationFragment@@buffer=null @AT@ 3988 @LENGTH@ 6
------------------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@buffer=null @AT@ 3997 @LENGTH@ 4
------------INS VariableDeclarationStatement@@Object value=beanWrapper.getPropertyValue(f.name()); @TO@ Block@@ThenBody:{  ByteBuffer buffer=null;  Object value=beanWrapper.getPropertyValue(f.name());  if (value == null || value instanceof byte[]) {    if (value != null) {      byte[] bytes=(byte[])value;      buffer=ByteBuffer.wrap(bytes);    }    builder.set(f.name(),buffer);  } else {    throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);  }} @AT@ 4009 @LENGTH@ 54
---------------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value=beanWrapper.getPropertyValue(f.name()); @AT@ 4009 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@value=beanWrapper.getPropertyValue(f.name()) @TO@ VariableDeclarationStatement@@Object value=beanWrapper.getPropertyValue(f.name()); @AT@ 4016 @LENGTH@ 46
------------------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=beanWrapper.getPropertyValue(f.name()) @AT@ 4016 @LENGTH@ 5
------------------INS MethodInvocation@@beanWrapper.getPropertyValue(f.name()) @TO@ VariableDeclarationFragment@@value=beanWrapper.getPropertyValue(f.name()) @AT@ 4024 @LENGTH@ 38
---------------------INS SimpleName@@Name:beanWrapper @TO@ MethodInvocation@@beanWrapper.getPropertyValue(f.name()) @AT@ 4024 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:getPropertyValue:[f.name()] @TO@ MethodInvocation@@beanWrapper.getPropertyValue(f.name()) @AT@ 4036 @LENGTH@ 26
------------------------INS MethodInvocation@@f.name() @TO@ SimpleName@@MethodName:getPropertyValue:[f.name()] @AT@ 4053 @LENGTH@ 8
---------------------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.name() @AT@ 4053 @LENGTH@ 1
---------------------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@f.name() @AT@ 4055 @LENGTH@ 6
------------INS IfStatement@@if (value == null || value instanceof byte[]) {  if (value != null) {    byte[] bytes=(byte[])value;    buffer=ByteBuffer.wrap(bytes);  }  builder.set(f.name(),buffer);} else {  throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);} @TO@ Block@@ThenBody:{  ByteBuffer buffer=null;  Object value=beanWrapper.getPropertyValue(f.name());  if (value == null || value instanceof byte[]) {    if (value != null) {      byte[] bytes=(byte[])value;      buffer=ByteBuffer.wrap(bytes);    }    builder.set(f.name(),buffer);  } else {    throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);  }} @AT@ 4070 @LENGTH@ 329
---------------INS InfixExpression@@value == null || value instanceof byte[] @TO@ IfStatement@@if (value == null || value instanceof byte[]) {  if (value != null) {    byte[] bytes=(byte[])value;    buffer=ByteBuffer.wrap(bytes);  }  builder.set(f.name(),buffer);} else {  throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);} @AT@ 4074 @LENGTH@ 40
------------------INS InfixExpression@@value == null @TO@ InfixExpression@@value == null || value instanceof byte[] @AT@ 4074 @LENGTH@ 13
---------------------INS SimpleName@@value @TO@ InfixExpression@@value == null @AT@ 4074 @LENGTH@ 5
---------------------INS Operator@@== @TO@ InfixExpression@@value == null @AT@ 4079 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@value == null @AT@ 4083 @LENGTH@ 4
------------------INS Operator@@|| @TO@ InfixExpression@@value == null || value instanceof byte[] @AT@ 4087 @LENGTH@ 2
------------------INS InstanceofExpression@@value instanceof byte[] @TO@ InfixExpression@@value == null || value instanceof byte[] @AT@ 4091 @LENGTH@ 23
---------------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof byte[] @AT@ 4091 @LENGTH@ 5
---------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof byte[] @AT@ 4097 @LENGTH@ 10
---------------------INS ArrayType@@byte[] @TO@ InstanceofExpression@@value instanceof byte[] @AT@ 4108 @LENGTH@ 6
------------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4108 @LENGTH@ 4
---------------INS Block@@ThenBody:{  if (value != null) {    byte[] bytes=(byte[])value;    buffer=ByteBuffer.wrap(bytes);  }  builder.set(f.name(),buffer);} @TO@ IfStatement@@if (value == null || value instanceof byte[]) {  if (value != null) {    byte[] bytes=(byte[])value;    buffer=ByteBuffer.wrap(bytes);  }  builder.set(f.name(),buffer);} else {  throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);} @AT@ 4116 @LENGTH@ 163
------------------INS IfStatement@@if (value != null) {  byte[] bytes=(byte[])value;  buffer=ByteBuffer.wrap(bytes);} @TO@ Block@@ThenBody:{  if (value != null) {    byte[] bytes=(byte[])value;    buffer=ByteBuffer.wrap(bytes);  }  builder.set(f.name(),buffer);} @AT@ 4125 @LENGTH@ 108
---------------------INS InfixExpression@@value != null @TO@ IfStatement@@if (value != null) {  byte[] bytes=(byte[])value;  buffer=ByteBuffer.wrap(bytes);} @AT@ 4128 @LENGTH@ 13
------------------------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 4128 @LENGTH@ 5
------------------------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 4133 @LENGTH@ 2
------------------------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 4137 @LENGTH@ 4
---------------------INS Block@@ThenBody:{  byte[] bytes=(byte[])value;  buffer=ByteBuffer.wrap(bytes);} @TO@ IfStatement@@if (value != null) {  byte[] bytes=(byte[])value;  buffer=ByteBuffer.wrap(bytes);} @AT@ 4143 @LENGTH@ 90
------------------------INS VariableDeclarationStatement@@byte[] bytes=(byte[])value; @TO@ Block@@ThenBody:{  byte[] bytes=(byte[])value;  buffer=ByteBuffer.wrap(bytes);} @AT@ 4153 @LENGTH@ 30
---------------------------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] bytes=(byte[])value; @AT@ 4153 @LENGTH@ 6
------------------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4153 @LENGTH@ 4
---------------------------INS VariableDeclarationFragment@@bytes=(byte[])value @TO@ VariableDeclarationStatement@@byte[] bytes=(byte[])value; @AT@ 4160 @LENGTH@ 22
------------------------------INS SimpleName@@bytes @TO@ VariableDeclarationFragment@@bytes=(byte[])value @AT@ 4160 @LENGTH@ 5
------------------------------INS CastExpression@@(byte[])value @TO@ VariableDeclarationFragment@@bytes=(byte[])value @AT@ 4168 @LENGTH@ 14
---------------------------------INS ArrayType@@byte[] @TO@ CastExpression@@(byte[])value @AT@ 4169 @LENGTH@ 6
------------------------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4169 @LENGTH@ 4
---------------------------------INS SimpleName@@value @TO@ CastExpression@@(byte[])value @AT@ 4177 @LENGTH@ 5
------------------------INS ExpressionStatement@@Assignment:buffer=ByteBuffer.wrap(bytes) @TO@ Block@@ThenBody:{  byte[] bytes=(byte[])value;  buffer=ByteBuffer.wrap(bytes);} @AT@ 4192 @LENGTH@ 32
---------------------------INS Assignment@@buffer=ByteBuffer.wrap(bytes) @TO@ ExpressionStatement@@Assignment:buffer=ByteBuffer.wrap(bytes) @AT@ 4192 @LENGTH@ 31
------------------------------INS SimpleName@@buffer @TO@ Assignment@@buffer=ByteBuffer.wrap(bytes) @AT@ 4192 @LENGTH@ 6
------------------------------INS Operator@@= @TO@ Assignment@@buffer=ByteBuffer.wrap(bytes) @AT@ 4198 @LENGTH@ 1
------------------------------INS MethodInvocation@@ByteBuffer.wrap(bytes) @TO@ Assignment@@buffer=ByteBuffer.wrap(bytes) @AT@ 4201 @LENGTH@ 22
---------------------------------INS SimpleName@@Name:ByteBuffer @TO@ MethodInvocation@@ByteBuffer.wrap(bytes) @AT@ 4201 @LENGTH@ 10
---------------------------------INS SimpleName@@MethodName:wrap:[bytes] @TO@ MethodInvocation@@ByteBuffer.wrap(bytes) @AT@ 4212 @LENGTH@ 11
------------------------------------INS SimpleName@@bytes @TO@ SimpleName@@MethodName:wrap:[bytes] @AT@ 4217 @LENGTH@ 5
------------------INS ExpressionStatement@@MethodInvocation:builder.set(f.name(),buffer) @TO@ Block@@ThenBody:{  if (value != null) {    byte[] bytes=(byte[])value;    buffer=ByteBuffer.wrap(bytes);  }  builder.set(f.name(),buffer);} @AT@ 4241 @LENGTH@ 30
---------------------INS MethodInvocation@@builder.set(f.name(),buffer) @TO@ ExpressionStatement@@MethodInvocation:builder.set(f.name(),buffer) @AT@ 4241 @LENGTH@ 29
------------------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.set(f.name(),buffer) @AT@ 4241 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:set:[f.name(), buffer] @TO@ MethodInvocation@@builder.set(f.name(),buffer) @AT@ 4249 @LENGTH@ 21
---------------------------INS MethodInvocation@@f.name() @TO@ SimpleName@@MethodName:set:[f.name(), buffer] @AT@ 4253 @LENGTH@ 8
------------------------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.name() @AT@ 4253 @LENGTH@ 1
------------------------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@f.name() @AT@ 4255 @LENGTH@ 6
---------------------------INS SimpleName@@buffer @TO@ SimpleName@@MethodName:set:[f.name(), buffer] @AT@ 4263 @LENGTH@ 6
---------------INS Block@@ElseBody:{  throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);} @TO@ IfStatement@@if (value == null || value instanceof byte[]) {  if (value != null) {    byte[] bytes=(byte[])value;    buffer=ByteBuffer.wrap(bytes);  }  builder.set(f.name(),buffer);} else {  throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);} @AT@ 4285 @LENGTH@ 114
------------------INS ThrowStatement@@ClassInstanceCreation:new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema) @TO@ Block@@ElseBody:{  throw new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema);} @AT@ 4294 @LENGTH@ 97
---------------------INS ClassInstanceCreation@@StoreException["Don't know how to handle " + value.getClass() + " for "+ fieldSchema] @TO@ ThrowStatement@@ClassInstanceCreation:new StoreException("Don't know how to handle " + value.getClass() + " for "+ fieldSchema) @AT@ 4300 @LENGTH@ 90
------------------------INS New@@new @TO@ ClassInstanceCreation@@StoreException["Don't know how to handle " + value.getClass() + " for "+ fieldSchema] @AT@ 4300 @LENGTH@ 3
------------------------INS SimpleType@@StoreException @TO@ ClassInstanceCreation@@StoreException["Don't know how to handle " + value.getClass() + " for "+ fieldSchema] @AT@ 4304 @LENGTH@ 14
------------------------INS InfixExpression@@"Don't know how to handle " + value.getClass() + " for "+ fieldSchema @TO@ ClassInstanceCreation@@StoreException["Don't know how to handle " + value.getClass() + " for "+ fieldSchema] @AT@ 4319 @LENGTH@ 70
---------------------------INS StringLiteral@@"Don't know how to handle " @TO@ InfixExpression@@"Don't know how to handle " + value.getClass() + " for "+ fieldSchema @AT@ 4319 @LENGTH@ 27
---------------------------INS Operator@@+ @TO@ InfixExpression@@"Don't know how to handle " + value.getClass() + " for "+ fieldSchema @AT@ 4346 @LENGTH@ 1
---------------------------INS MethodInvocation@@value.getClass() @TO@ InfixExpression@@"Don't know how to handle " + value.getClass() + " for "+ fieldSchema @AT@ 4349 @LENGTH@ 16
------------------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.getClass() @AT@ 4349 @LENGTH@ 5
------------------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@value.getClass() @AT@ 4355 @LENGTH@ 10
---------------------------INS StringLiteral@@" for " @TO@ InfixExpression@@"Don't know how to handle " + value.getClass() + " for "+ fieldSchema @AT@ 4368 @LENGTH@ 7
---------------------------INS SimpleName@@fieldSchema @TO@ InfixExpression@@"Don't know how to handle " + value.getClass() + " for "+ fieldSchema @AT@ 4378 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:shouldNotRemovePositionalParameter,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]UpdateMapperUnitTests,  @AT@ 17757 @LENGTH@ 446
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldNotRemovePositionalParameter,  @AT@ 17757 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldNotRemovePositionalParameter,  @AT@ 17764 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldNotRemovePositionalParameter @TO@ MethodDeclaration@@public, void, MethodName:shouldNotRemovePositionalParameter,  @AT@ 17769 @LENGTH@ 34
---INS VariableDeclarationStatement@@Update update=new Update(); @TO@ MethodDeclaration@@public, void, MethodName:shouldNotRemovePositionalParameter,  @AT@ 17811 @LENGTH@ 29
------INS SimpleType@@Update @TO@ VariableDeclarationStatement@@Update update=new Update(); @AT@ 17811 @LENGTH@ 6
------INS VariableDeclarationFragment@@update=new Update() @TO@ VariableDeclarationStatement@@Update update=new Update(); @AT@ 17818 @LENGTH@ 21
---------INS SimpleName@@update @TO@ VariableDeclarationFragment@@update=new Update() @AT@ 17818 @LENGTH@ 6
---------INS ClassInstanceCreation@@Update[] @TO@ VariableDeclarationFragment@@update=new Update() @AT@ 17827 @LENGTH@ 12
------------INS New@@new @TO@ ClassInstanceCreation@@Update[] @AT@ 17827 @LENGTH@ 3
------------INS SimpleType@@Update @TO@ ClassInstanceCreation@@Update[] @AT@ 17831 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:update.unset("dbRefAnnotatedList.$") @TO@ MethodDeclaration@@public, void, MethodName:shouldNotRemovePositionalParameter,  @AT@ 17843 @LENGTH@ 37
------INS MethodInvocation@@update.unset("dbRefAnnotatedList.$") @TO@ ExpressionStatement@@MethodInvocation:update.unset("dbRefAnnotatedList.$") @AT@ 17843 @LENGTH@ 36
---------INS SimpleName@@Name:update @TO@ MethodInvocation@@update.unset("dbRefAnnotatedList.$") @AT@ 17843 @LENGTH@ 6
---------INS SimpleName@@MethodName:unset:["dbRefAnnotatedList.$"] @TO@ MethodInvocation@@update.unset("dbRefAnnotatedList.$") @AT@ 17850 @LENGTH@ 29
------------INS StringLiteral@@"dbRefAnnotatedList.$" @TO@ SimpleName@@MethodName:unset:["dbRefAnnotatedList.$"] @AT@ 17856 @LENGTH@ 22
---INS VariableDeclarationStatement@@DBObject mappedUpdate=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(DocumentWithDBRefCollection.class)); @TO@ MethodDeclaration@@public, void, MethodName:shouldNotRemovePositionalParameter,  @AT@ 17884 @LENGTH@ 141
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject mappedUpdate=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(DocumentWithDBRefCollection.class)); @AT@ 17884 @LENGTH@ 8
------INS VariableDeclarationFragment@@mappedUpdate=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(DocumentWithDBRefCollection.class)) @TO@ VariableDeclarationStatement@@DBObject mappedUpdate=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(DocumentWithDBRefCollection.class)); @AT@ 17893 @LENGTH@ 131
---------INS SimpleName@@mappedUpdate @TO@ VariableDeclarationFragment@@mappedUpdate=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(DocumentWithDBRefCollection.class)) @AT@ 17893 @LENGTH@ 12
---------INS MethodInvocation@@mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(DocumentWithDBRefCollection.class)) @TO@ VariableDeclarationFragment@@mappedUpdate=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(DocumentWithDBRefCollection.class)) @AT@ 17908 @LENGTH@ 116
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(DocumentWithDBRefCollection.class)) @AT@ 17908 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[update.getUpdateObject(), context.getPersistentEntity(DocumentWithDBRefCollection.class)] @TO@ MethodInvocation@@mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(DocumentWithDBRefCollection.class)) @AT@ 17915 @LENGTH@ 109
---------------INS MethodInvocation@@update.getUpdateObject() @TO@ SimpleName@@MethodName:getMappedObject:[update.getUpdateObject(), context.getPersistentEntity(DocumentWithDBRefCollection.class)] @AT@ 17931 @LENGTH@ 24
------------------INS SimpleName@@Name:update @TO@ MethodInvocation@@update.getUpdateObject() @AT@ 17931 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getUpdateObject:[] @TO@ MethodInvocation@@update.getUpdateObject() @AT@ 17938 @LENGTH@ 17
---------------INS MethodInvocation@@context.getPersistentEntity(DocumentWithDBRefCollection.class) @TO@ SimpleName@@MethodName:getMappedObject:[update.getUpdateObject(), context.getPersistentEntity(DocumentWithDBRefCollection.class)] @AT@ 17961 @LENGTH@ 62
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(DocumentWithDBRefCollection.class) @AT@ 17961 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getPersistentEntity:[DocumentWithDBRefCollection.class] @TO@ MethodInvocation@@context.getPersistentEntity(DocumentWithDBRefCollection.class) @AT@ 17969 @LENGTH@ 54
---------------------INS TypeLiteral@@DocumentWithDBRefCollection.class @TO@ SimpleName@@MethodName:getPersistentEntity:[DocumentWithDBRefCollection.class] @AT@ 17989 @LENGTH@ 33
---INS VariableDeclarationStatement@@DBObject $unset=DBObjectTestUtils.getAsDBObject(mappedUpdate,"$unset"); @TO@ MethodDeclaration@@public, void, MethodName:shouldNotRemovePositionalParameter,  @AT@ 18029 @LENGTH@ 74
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject $unset=DBObjectTestUtils.getAsDBObject(mappedUpdate,"$unset"); @AT@ 18029 @LENGTH@ 8
------INS VariableDeclarationFragment@@$unset=DBObjectTestUtils.getAsDBObject(mappedUpdate,"$unset") @TO@ VariableDeclarationStatement@@DBObject $unset=DBObjectTestUtils.getAsDBObject(mappedUpdate,"$unset"); @AT@ 18038 @LENGTH@ 64
---------INS SimpleName@@$unset @TO@ VariableDeclarationFragment@@$unset=DBObjectTestUtils.getAsDBObject(mappedUpdate,"$unset") @AT@ 18038 @LENGTH@ 6
---------INS MethodInvocation@@DBObjectTestUtils.getAsDBObject(mappedUpdate,"$unset") @TO@ VariableDeclarationFragment@@$unset=DBObjectTestUtils.getAsDBObject(mappedUpdate,"$unset") @AT@ 18047 @LENGTH@ 55
------------INS SimpleName@@Name:DBObjectTestUtils @TO@ MethodInvocation@@DBObjectTestUtils.getAsDBObject(mappedUpdate,"$unset") @AT@ 18047 @LENGTH@ 17
------------INS SimpleName@@MethodName:getAsDBObject:[mappedUpdate, "$unset"] @TO@ MethodInvocation@@DBObjectTestUtils.getAsDBObject(mappedUpdate,"$unset") @AT@ 18065 @LENGTH@ 37
---------------INS SimpleName@@mappedUpdate @TO@ SimpleName@@MethodName:getAsDBObject:[mappedUpdate, "$unset"] @AT@ 18079 @LENGTH@ 12
---------------INS StringLiteral@@"$unset" @TO@ SimpleName@@MethodName:getAsDBObject:[mappedUpdate, "$unset"] @AT@ 18093 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat($unset,equalTo(new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get())) @TO@ MethodDeclaration@@public, void, MethodName:shouldNotRemovePositionalParameter,  @AT@ 18107 @LENGTH@ 93
------INS MethodInvocation@@assertThat($unset,equalTo(new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get())) @TO@ ExpressionStatement@@MethodInvocation:assertThat($unset,equalTo(new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get())) @AT@ 18107 @LENGTH@ 92
---------INS SimpleName@@MethodName:assertThat:[$unset, equalTo(new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get())] @TO@ MethodInvocation@@assertThat($unset,equalTo(new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get())) @AT@ 18107 @LENGTH@ 92
------------INS SimpleName@@$unset @TO@ SimpleName@@MethodName:assertThat:[$unset, equalTo(new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get())] @AT@ 18118 @LENGTH@ 6
------------INS MethodInvocation@@equalTo(new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get()) @TO@ SimpleName@@MethodName:assertThat:[$unset, equalTo(new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get())] @AT@ 18126 @LENGTH@ 72
---------------INS SimpleName@@MethodName:equalTo:[new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get()] @TO@ MethodInvocation@@equalTo(new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get()) @AT@ 18126 @LENGTH@ 72
------------------INS MethodInvocation@@new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get() @TO@ SimpleName@@MethodName:equalTo:[new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get()] @AT@ 18134 @LENGTH@ 63
---------------------INS MethodInvocation@@MethodName:add:["dbRefAnnotatedList.$", 1] @TO@ MethodInvocation@@new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get() @AT@ 18134 @LENGTH@ 57
------------------------INS StringLiteral@@"dbRefAnnotatedList.$" @TO@ MethodInvocation@@MethodName:add:["dbRefAnnotatedList.$", 1] @AT@ 18165 @LENGTH@ 22
------------------------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:add:["dbRefAnnotatedList.$", 1] @AT@ 18189 @LENGTH@ 1
---------------------INS ClassInstanceCreation@@BasicDBObjectBuilder[] @TO@ MethodInvocation@@new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get() @AT@ 18134 @LENGTH@ 26
------------------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObjectBuilder[] @AT@ 18134 @LENGTH@ 3
------------------------INS SimpleType@@BasicDBObjectBuilder @TO@ ClassInstanceCreation@@BasicDBObjectBuilder[] @AT@ 18138 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get() @AT@ 18192 @LENGTH@ 5
---------------INS SimpleName@@MethodName:equalTo:[new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get()] @TO@ MethodInvocation@@equalTo(new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get()) @AT@ 18126 @LENGTH@ 72
------------------INS MethodInvocation@@new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get() @TO@ SimpleName@@MethodName:equalTo:[new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get()] @AT@ 18134 @LENGTH@ 63
---------------------INS MethodInvocation@@MethodName:add:["dbRefAnnotatedList.$", 1] @TO@ MethodInvocation@@new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get() @AT@ 18134 @LENGTH@ 57
------------------------INS StringLiteral@@"dbRefAnnotatedList.$" @TO@ MethodInvocation@@MethodName:add:["dbRefAnnotatedList.$", 1] @AT@ 18165 @LENGTH@ 22
------------------------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:add:["dbRefAnnotatedList.$", 1] @AT@ 18189 @LENGTH@ 1
---------------------INS ClassInstanceCreation@@BasicDBObjectBuilder[] @TO@ MethodInvocation@@new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get() @AT@ 18134 @LENGTH@ 26
------------------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObjectBuilder[] @AT@ 18134 @LENGTH@ 3
------------------------INS SimpleType@@BasicDBObjectBuilder @TO@ ClassInstanceCreation@@BasicDBObjectBuilder[] @AT@ 18138 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@new BasicDBObjectBuilder().add("dbRefAnnotatedList.$",1).get() @AT@ 18192 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:PRIMITIVE_TYPES=new HashMap<String,Class>() @TO@ Assignment:PRIMITIVE_TYPES=new HashMap<String,Class<?>>() @AT@ 1899 @LENGTH@ 47
---UPD Assignment@@PRIMITIVE_TYPES=new HashMap<String,Class>() @TO@ PRIMITIVE_TYPES=new HashMap<String,Class<?>>() @AT@ 1899 @LENGTH@ 46
------UPD ClassInstanceCreation@@HashMap<String,Class>[] @TO@ HashMap<String,Class<?>>[] @AT@ 1917 @LENGTH@ 28
---------UPD ParameterizedType@@HashMap<String,Class> @TO@ HashMap<String,Class<?>> @AT@ 1921 @LENGTH@ 22
------------INS ParameterizedType@@Class<?> @TO@ ParameterizedType@@HashMap<String,Class> @AT@ 1940 @LENGTH@ 8
---------------MOV SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1937 @LENGTH@ 5
---------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1946 @LENGTH@ 1


UPD TypeDeclaration@@[@ContextConfiguration(loader=HadoopDelegatingSmartContextLoader.class), @MiniHadoopCluster, @Ignore, public]FileWriteOpenTests, AbstractStoreTests @TO@ [@ContextConfiguration(loader=HadoopDelegatingSmartContextLoader.class), @MiniHadoopCluster, public]FileWriteOpenTests, AbstractStoreTests @AT@ 1585 @LENGTH@ 2739
---DEL MarkerAnnotation@@@Ignore @AT@ 1675 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertTrue(ret.getErrorMessage().indexOf("not permitted") != -1) @TO@ MethodInvocation:assertTrue(ret.getErrorMessage().indexOf("AccessControlException") != -1) @AT@ 2972 @LENGTH@ 65
---UPD MethodInvocation@@assertTrue(ret.getErrorMessage().indexOf("not permitted") != -1) @TO@ assertTrue(ret.getErrorMessage().indexOf("AccessControlException") != -1) @AT@ 2972 @LENGTH@ 64
------UPD SimpleName@@MethodName:assertTrue:[ret.getErrorMessage().indexOf("not permitted") != -1] @TO@ MethodName:assertTrue:[ret.getErrorMessage().indexOf("AccessControlException") != -1] @AT@ 2972 @LENGTH@ 64
---------UPD InfixExpression@@ret.getErrorMessage().indexOf("not permitted") != -1 @TO@ ret.getErrorMessage().indexOf("AccessControlException") != -1 @AT@ 2983 @LENGTH@ 52
------------UPD MethodInvocation@@ret.getErrorMessage().indexOf("not permitted") @TO@ ret.getErrorMessage().indexOf("AccessControlException") @AT@ 2983 @LENGTH@ 46
---------------UPD SimpleName@@MethodName:indexOf:["not permitted"] @TO@ MethodName:indexOf:["AccessControlException"] @AT@ 3005 @LENGTH@ 24
------------------UPD StringLiteral@@"not permitted" @TO@ "AccessControlException" @AT@ 3013 @LENGTH@ 15


UPD ThrowStatement@@ClassInstanceCreation:new ExitUtil.ExitException(status,"System.exit() was called. Raising exception. ") @TO@ ClassInstanceCreation:new RuntimeException("System.exit() was called. Raising exception. ") @AT@ 1796 @LENGTH@ 90
---UPD ClassInstanceCreation@@ExitUtil.ExitException[status, "System.exit() was called. Raising exception. "] @TO@ RuntimeException["System.exit() was called. Raising exception. "] @AT@ 1802 @LENGTH@ 83
------UPD SimpleType@@ExitUtil.ExitException @TO@ RuntimeException @AT@ 1806 @LENGTH@ 22
------DEL SimpleName@@status @AT@ 1829 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertFalse("The GemFire Cache is close!",gemfireCache.isClosed()) @TO@ MethodInvocation:assertFalse("The GemFire Cache is closed!",gemfireCache.isClosed()) @AT@ 5435 @LENGTH@ 68
---UPD MethodInvocation@@assertFalse("The GemFire Cache is close!",gemfireCache.isClosed()) @TO@ assertFalse("The GemFire Cache is closed!",gemfireCache.isClosed()) @AT@ 5435 @LENGTH@ 67
------UPD SimpleName@@MethodName:assertFalse:["The GemFire Cache is close!", gemfireCache.isClosed()] @TO@ MethodName:assertFalse:["The GemFire Cache is closed!", gemfireCache.isClosed()] @AT@ 5435 @LENGTH@ 67
---------UPD StringLiteral@@"The GemFire Cache is close!" @TO@ "The GemFire Cache is closed!" @AT@ 5447 @LENGTH@ 29


DEL FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(BindyBigDecimalRoundingUnmarshallTest.class)] @AT@ 783 @LENGTH@ 103
---DEL Modifier@@private @AT@ 783 @LENGTH@ 7
---DEL Modifier@@static @AT@ 791 @LENGTH@ 6
---DEL Modifier@@final @AT@ 798 @LENGTH@ 5
---DEL SimpleType@@Logger @AT@ 804 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(BindyBigDecimalRoundingUnmarshallTest.class) @AT@ 811 @LENGTH@ 74
------DEL SimpleName@@LOG @AT@ 811 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(BindyBigDecimalRoundingUnmarshallTest.class) @AT@ 817 @LENGTH@ 68
---------DEL SimpleName@@Name:LoggerFactory @AT@ 817 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[BindyBigDecimalRoundingUnmarshallTest.class] @AT@ 831 @LENGTH@ 54
------------DEL TypeLiteral@@BindyBigDecimalRoundingUnmarshallTest.class @AT@ 841 @LENGTH@ 43


UPD FieldDeclaration@@static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.GET_THREAD_INFO,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setParameters(CommonAttributes.ID,CommonAttributes.MAX_DEPTH).setReplyType(ModelType.LIST).setReplyParameters(CommonAttributes.THREAD_INFO_ATTRIBUTES).setReadOnly().setRuntimeOnly().build()] @TO@ static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.GET_THREAD_INFO,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setParameters(CommonAttributes.ID,CommonAttributes.MAX_DEPTH).setReplyType(ModelType.OBJECT).setReplyParameters(CommonAttributes.THREAD_INFO_ATTRIBUTES).setReadOnly().setRuntimeOnly().build()] @AT@ 2013 @LENGTH@ 481
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.GET_THREAD_INFO,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setParameters(CommonAttributes.ID,CommonAttributes.MAX_DEPTH).setReplyType(ModelType.LIST).setReplyParameters(CommonAttributes.THREAD_INFO_ATTRIBUTES).setReadOnly().setRuntimeOnly().build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.GET_THREAD_INFO,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setParameters(CommonAttributes.ID,CommonAttributes.MAX_DEPTH).setReplyType(ModelType.OBJECT).setReplyParameters(CommonAttributes.THREAD_INFO_ATTRIBUTES).setReadOnly().setRuntimeOnly().build() @AT@ 2046 @LENGTH@ 447
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.GET_THREAD_INFO,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setParameters(CommonAttributes.ID,CommonAttributes.MAX_DEPTH).setReplyType(ModelType.LIST).setReplyParameters(CommonAttributes.THREAD_INFO_ATTRIBUTES).setReadOnly().setRuntimeOnly().build() @TO@ new SimpleOperationDefinitionBuilder(PlatformMBeanConstants.GET_THREAD_INFO,PlatformMBeanUtil.getResolver(PlatformMBeanConstants.THREADING)).setParameters(CommonAttributes.ID,CommonAttributes.MAX_DEPTH).setReplyType(ModelType.OBJECT).setReplyParameters(CommonAttributes.THREAD_INFO_ATTRIBUTES).setReadOnly().setRuntimeOnly().build() @AT@ 2059 @LENGTH@ 434
---------UPD MethodInvocation@@MethodName:setReplyType:[ModelType.LIST] @TO@ MethodName:setReplyType:[ModelType.OBJECT] @AT@ 2059 @LENGTH@ 271
------------UPD QualifiedName@@ModelType.LIST @TO@ ModelType.OBJECT @AT@ 2315 @LENGTH@ 14
---------------UPD SimpleName@@LIST @TO@ OBJECT @AT@ 2325 @LENGTH@ 4


INS FieldDeclaration@@final, String, [AUTHORITIES="authorities"] @TO@ TypeDeclaration@@[public]AccessTokenConverter,  @AT@ 1098 @LENGTH@ 41
---INS Modifier@@final @TO@ FieldDeclaration@@final, String, [AUTHORITIES="authorities"] @AT@ 1098 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@final, String, [AUTHORITIES="authorities"] @AT@ 1104 @LENGTH@ 6
---INS VariableDeclarationFragment@@AUTHORITIES="authorities" @TO@ FieldDeclaration@@final, String, [AUTHORITIES="authorities"] @AT@ 1111 @LENGTH@ 27
------INS SimpleName@@AUTHORITIES @TO@ VariableDeclarationFragment@@AUTHORITIES="authorities" @AT@ 1111 @LENGTH@ 11
------INS StringLiteral@@"authorities" @TO@ VariableDeclarationFragment@@AUTHORITIES="authorities" @AT@ 1125 @LENGTH@ 13


MOV FieldDeclaration@@private, DockerOperation, [operation] @TO@ TypeDeclaration@@[public]DockerConfiguration,  @AT@ 1370 @LENGTH@ 34


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Trigger key " + triggerKey + " is already in used by "+ quartzEndpoint) @TO@ ClassInstanceCreation:new IllegalArgumentException("Trigger key " + triggerKey + " is already in use by "+ quartzEndpoint) @AT@ 9027 @LENGTH@ 109
---UPD ClassInstanceCreation@@IllegalArgumentException["Trigger key " + triggerKey + " is already in used by "+ quartzEndpoint] @TO@ IllegalArgumentException["Trigger key " + triggerKey + " is already in use by "+ quartzEndpoint] @AT@ 9033 @LENGTH@ 102
------UPD InfixExpression@@"Trigger key " + triggerKey + " is already in used by "+ quartzEndpoint @TO@ "Trigger key " + triggerKey + " is already in use by "+ quartzEndpoint @AT@ 9062 @LENGTH@ 72
---------UPD StringLiteral@@" is already in used by " @TO@ " is already in use by " @AT@ 9092 @LENGTH@ 25


UPD MethodDeclaration@@protected, voidMethodName:GenericArrayTypeInformation, GenericArrayType type, TypeDiscoverer<?> parent,  @TO@ protected, voidMethodName:GenericArrayTypeInformation, GenericArrayType type, TypeDiscoverer<?> parent, Map<TypeVariable<?>,Type> typeVariableMap,  @AT@ 1176 @LENGTH@ 164
---UPD SuperConstructorInvocation@@super(type,parent,parent.getTypeVariableMap());
 @TO@ super(type,parent,typeVariableMap);
 @AT@ 1268 @LENGTH@ 49
------DEL MethodInvocation@@parent.getTypeVariableMap() @AT@ 1288 @LENGTH@ 27
---------DEL SimpleName@@Name:parent @AT@ 1288 @LENGTH@ 6
---------DEL SimpleName@@MethodName:getTypeVariableMap:[] @AT@ 1295 @LENGTH@ 20
------INS SimpleName@@typeVariableMap @TO@ SuperConstructorInvocation@@super(type,parent,parent.getTypeVariableMap());
 @AT@ 1516 @LENGTH@ 15
---INS SingleVariableDeclaration@@Map<TypeVariable<?>,Type> typeVariableMap @TO@ MethodDeclaration@@protected, voidMethodName:GenericArrayTypeInformation, GenericArrayType type, TypeDiscoverer<?> parent,  @AT@ 1447 @LENGTH@ 42
------INS ParameterizedType@@Map<TypeVariable<?>,Type> @TO@ SingleVariableDeclaration@@Map<TypeVariable<?>,Type> typeVariableMap @AT@ 1447 @LENGTH@ 26
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 1447 @LENGTH@ 3
---------INS ParameterizedType@@TypeVariable<?> @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 1451 @LENGTH@ 15
------------INS SimpleType@@TypeVariable @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1451 @LENGTH@ 12
------------INS WildcardType@@? @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1464 @LENGTH@ 1
---------INS SimpleType@@Type @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 1468 @LENGTH@ 4
------INS SimpleName@@typeVariableMap @TO@ SingleVariableDeclaration@@Map<TypeVariable<?>,Type> typeVariableMap @AT@ 1474 @LENGTH@ 15


UPD VariableDeclarationStatement@@Option[] options=combine(getDefaultCamelKarafOptions(),loadCamelFeatures("camel-disruptor")); @TO@ Option[] options=combine(getDefaultCamelKarafOptions(),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.6",",sun.misc"),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.7",",sun.misc"),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.8",",sun.misc"),loadCamelFeatures("camel-disruptor")); @AT@ 2575 @LENGTH@ 206
---UPD VariableDeclarationFragment@@options=combine(getDefaultCamelKarafOptions(),loadCamelFeatures("camel-disruptor")) @TO@ options=combine(getDefaultCamelKarafOptions(),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.6",",sun.misc"),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.7",",sun.misc"),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.8",",sun.misc"),loadCamelFeatures("camel-disruptor")) @AT@ 2584 @LENGTH@ 196
------UPD MethodInvocation@@combine(getDefaultCamelKarafOptions(),loadCamelFeatures("camel-disruptor")) @TO@ combine(getDefaultCamelKarafOptions(),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.6",",sun.misc"),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.7",",sun.misc"),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.8",",sun.misc"),loadCamelFeatures("camel-disruptor")) @AT@ 2594 @LENGTH@ 186
---------UPD SimpleName@@MethodName:combine:[getDefaultCamelKarafOptions(), loadCamelFeatures("camel-disruptor")] @TO@ MethodName:combine:[getDefaultCamelKarafOptions(), new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.6",",sun.misc"), new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.7",",sun.misc"), new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.8",",sun.misc"), loadCamelFeatures("camel-disruptor")] @AT@ 2594 @LENGTH@ 186
------------INS ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.6", ",sun.misc"] @TO@ SimpleName@@MethodName:combine:[getDefaultCamelKarafOptions(), loadCamelFeatures("camel-disruptor")] @AT@ 2402 @LENGTH@ 96
---------------INS New@@new @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.6", ",sun.misc"] @AT@ 2402 @LENGTH@ 3
---------------INS SimpleType@@KarafDistributionConfigurationFileExtendOption @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.6", ",sun.misc"] @AT@ 2406 @LENGTH@ 46
---------------INS StringLiteral@@"etc/jre.properties" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.6", ",sun.misc"] @AT@ 2453 @LENGTH@ 20
---------------INS StringLiteral@@"jre-1.6" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.6", ",sun.misc"] @AT@ 2475 @LENGTH@ 9
---------------INS StringLiteral@@",sun.misc" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.6", ",sun.misc"] @AT@ 2486 @LENGTH@ 11
------------INS ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.7", ",sun.misc"] @TO@ SimpleName@@MethodName:combine:[getDefaultCamelKarafOptions(), loadCamelFeatures("camel-disruptor")] @AT@ 2512 @LENGTH@ 96
---------------INS New@@new @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.7", ",sun.misc"] @AT@ 2512 @LENGTH@ 3
---------------INS SimpleType@@KarafDistributionConfigurationFileExtendOption @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.7", ",sun.misc"] @AT@ 2516 @LENGTH@ 46
---------------INS StringLiteral@@"etc/jre.properties" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.7", ",sun.misc"] @AT@ 2563 @LENGTH@ 20
---------------INS StringLiteral@@"jre-1.7" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.7", ",sun.misc"] @AT@ 2585 @LENGTH@ 9
---------------INS StringLiteral@@",sun.misc" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.7", ",sun.misc"] @AT@ 2596 @LENGTH@ 11
------------INS ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.8", ",sun.misc"] @TO@ SimpleName@@MethodName:combine:[getDefaultCamelKarafOptions(), loadCamelFeatures("camel-disruptor")] @AT@ 2622 @LENGTH@ 96
---------------INS New@@new @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.8", ",sun.misc"] @AT@ 2622 @LENGTH@ 3
---------------INS SimpleType@@KarafDistributionConfigurationFileExtendOption @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.8", ",sun.misc"] @AT@ 2626 @LENGTH@ 46
---------------INS StringLiteral@@"etc/jre.properties" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.8", ",sun.misc"] @AT@ 2673 @LENGTH@ 20
---------------INS StringLiteral@@"jre-1.8" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.8", ",sun.misc"] @AT@ 2695 @LENGTH@ 9
---------------INS StringLiteral@@",sun.misc" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.8", ",sun.misc"] @AT@ 2706 @LENGTH@ 11


UPD TypeDeclaration@@[public]SimpleFileConverter, FileConverter @TO@ [@Component, public]SimpleFileConverter, FileConverter @AT@ 815 @LENGTH@ 172
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]SimpleFileConverter, FileConverter @AT@ 851 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"clientId\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"clientId\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1989 @LENGTH@ 91
---UPD MethodInvocation@@assertTrue(json.contains("\"clientId\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ assertTrue(json.contains("\"clientId\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1989 @LENGTH@ 90
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"clientId\": { \"kind\": \"parameter\", \"type\": \"string\"")] @TO@ MethodName:assertTrue:[json.contains("\"clientId\": { \"kind\": \"path\", \"type\": \"string\"")] @AT@ 1989 @LENGTH@ 90
---------UPD MethodInvocation@@json.contains("\"clientId\": { \"kind\": \"parameter\", \"type\": \"string\"") @TO@ json.contains("\"clientId\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 2000 @LENGTH@ 78
------------UPD SimpleName@@MethodName:contains:["\"clientId\": { \"kind\": \"parameter\", \"type\": \"string\""] @TO@ MethodName:contains:["\"clientId\": { \"kind\": \"path\", \"type\": \"string\""] @AT@ 2005 @LENGTH@ 73
---------------UPD StringLiteral@@"\"clientId\": { \"kind\": \"parameter\", \"type\": \"string\"" @TO@ "\"clientId\": { \"kind\": \"path\", \"type\": \"string\"" @AT@ 2014 @LENGTH@ 63


UPD Block@@ElseBody:if (InputStream.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (ByteBuffer.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (File.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (Reader.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (String.class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (char[].class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (Character.class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (Serializable.class.isInstance(payload)) {  answer=JmsMessageType.Object;} else {  answer=JmsMessageType.Message;} @TO@ ElseBody:if (InputStream.class.isInstance(payload)) {  answer=JmsMessageType.Stream;} else if (ByteBuffer.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (File.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (Reader.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (String.class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (char[].class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (Character.class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (Serializable.class.isInstance(payload)) {  answer=JmsMessageType.Object;} else {  answer=JmsMessageType.Message;} @AT@ 16687 @LENGTH@ 926
---UPD IfStatement@@if (InputStream.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (ByteBuffer.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (File.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (Reader.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (String.class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (char[].class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (Character.class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (Serializable.class.isInstance(payload)) {  answer=JmsMessageType.Object;} else {  answer=JmsMessageType.Message;} @TO@ if (InputStream.class.isInstance(payload)) {  answer=JmsMessageType.Stream;} else if (ByteBuffer.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (File.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (Reader.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (String.class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (char[].class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (Character.class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (Serializable.class.isInstance(payload)) {  answer=JmsMessageType.Object;} else {  answer=JmsMessageType.Message;} @AT@ 16687 @LENGTH@ 926
------UPD Block@@ThenBody:{  answer=JmsMessageType.Bytes;} @TO@ ThenBody:{  answer=JmsMessageType.Stream;} @AT@ 16730 @LENGTH@ 62
---------UPD ExpressionStatement@@Assignment:answer=JmsMessageType.Bytes @TO@ Assignment:answer=JmsMessageType.Stream @AT@ 16748 @LENGTH@ 30
------------UPD Assignment@@answer=JmsMessageType.Bytes @TO@ answer=JmsMessageType.Stream @AT@ 16748 @LENGTH@ 29
---------------UPD QualifiedName@@JmsMessageType.Bytes @TO@ JmsMessageType.Stream @AT@ 16757 @LENGTH@ 20
------------------UPD SimpleName@@Bytes @TO@ Stream @AT@ 16772 @LENGTH@ 5
---UPD IfStatement@@if (InputStream.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (ByteBuffer.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (File.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (Reader.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (String.class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (char[].class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (Character.class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (Serializable.class.isInstance(payload)) {  answer=JmsMessageType.Object;} else {  answer=JmsMessageType.Message;} @TO@ if (InputStream.class.isInstance(payload)) {  answer=JmsMessageType.Stream;} else if (ByteBuffer.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (File.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (Reader.class.isInstance(payload)) {  answer=JmsMessageType.Bytes;} else if (String.class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (char[].class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (Character.class.isInstance(payload)) {  answer=JmsMessageType.Text;} else if (Serializable.class.isInstance(payload)) {  answer=JmsMessageType.Object;} else {  answer=JmsMessageType.Message;} @AT@ 16687 @LENGTH@ 926
------UPD Block@@ThenBody:{  answer=JmsMessageType.Bytes;} @TO@ ThenBody:{  answer=JmsMessageType.Stream;} @AT@ 16730 @LENGTH@ 62
---------UPD ExpressionStatement@@Assignment:answer=JmsMessageType.Bytes @TO@ Assignment:answer=JmsMessageType.Stream @AT@ 16748 @LENGTH@ 30
------------UPD Assignment@@answer=JmsMessageType.Bytes @TO@ answer=JmsMessageType.Stream @AT@ 16748 @LENGTH@ 29
---------------UPD QualifiedName@@JmsMessageType.Bytes @TO@ JmsMessageType.Stream @AT@ 16757 @LENGTH@ 20
------------------UPD SimpleName@@Bytes @TO@ Stream @AT@ 16772 @LENGTH@ 5


INS FieldDeclaration@@protected, FtpsConfiguration, [configuration] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="ftps",consumerClass=FtpConsumer.class,label="file"), public]FtpsEndpoint, FtpEndpoint<FTPFile> @AT@ 1717 @LENGTH@ 42
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, FtpsConfiguration, [configuration] @AT@ 1717 @LENGTH@ 9
---INS SimpleType@@FtpsConfiguration @TO@ FieldDeclaration@@protected, FtpsConfiguration, [configuration] @AT@ 1727 @LENGTH@ 17
---INS VariableDeclarationFragment@@configuration @TO@ FieldDeclaration@@protected, FtpsConfiguration, [configuration] @AT@ 1745 @LENGTH@ 13
------INS SimpleName@@configuration @TO@ VariableDeclarationFragment@@configuration @AT@ 1745 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ MethodDeclaration@@public, void, MethodName:testComponentConfiguration, Exception,  @AT@ 1906 @LENGTH@ 87
---INS MethodInvocation@@assertTrue(json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1906 @LENGTH@ 86
------INS SimpleName@@MethodName:assertTrue:[json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1906 @LENGTH@ 86
---------INS MethodInvocation@@json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"")] @AT@ 1917 @LENGTH@ 74
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1917 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["\"groupName\": { \"kind\": \"path\", \"type\": \"string\""] @TO@ MethodInvocation@@json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1922 @LENGTH@ 69
---------------INS StringLiteral@@"\"groupName\": { \"kind\": \"path\", \"type\": \"string\"" @TO@ SimpleName@@MethodName:contains:["\"groupName\": { \"kind\": \"path\", \"type\": \"string\""] @AT@ 1931 @LENGTH@ 59


INS MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]SpringDataMongodbSerializerUnitTests,  @AT@ 4877 @LENGTH@ 611
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 4877 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 4884 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 4889 @LENGTH@ 65
---INS VariableDeclarationStatement@@ObjectId firstId=new ObjectId("53bb9fd14438765b29c2d56e"); @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 4962 @LENGTH@ 60
------INS SimpleType@@ObjectId @TO@ VariableDeclarationStatement@@ObjectId firstId=new ObjectId("53bb9fd14438765b29c2d56e"); @AT@ 4962 @LENGTH@ 8
------INS VariableDeclarationFragment@@firstId=new ObjectId("53bb9fd14438765b29c2d56e") @TO@ VariableDeclarationStatement@@ObjectId firstId=new ObjectId("53bb9fd14438765b29c2d56e"); @AT@ 4971 @LENGTH@ 50
---------INS SimpleName@@firstId @TO@ VariableDeclarationFragment@@firstId=new ObjectId("53bb9fd14438765b29c2d56e") @AT@ 4971 @LENGTH@ 7
---------INS ClassInstanceCreation@@ObjectId["53bb9fd14438765b29c2d56e"] @TO@ VariableDeclarationFragment@@firstId=new ObjectId("53bb9fd14438765b29c2d56e") @AT@ 4981 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@ObjectId["53bb9fd14438765b29c2d56e"] @AT@ 4981 @LENGTH@ 3
------------INS SimpleType@@ObjectId @TO@ ClassInstanceCreation@@ObjectId["53bb9fd14438765b29c2d56e"] @AT@ 4985 @LENGTH@ 8
------------INS StringLiteral@@"53bb9fd14438765b29c2d56e" @TO@ ClassInstanceCreation@@ObjectId["53bb9fd14438765b29c2d56e"] @AT@ 4994 @LENGTH@ 26
---INS VariableDeclarationStatement@@ObjectId secondId=new ObjectId("53bb9fda4438765b29c2d56f"); @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 5025 @LENGTH@ 61
------INS SimpleType@@ObjectId @TO@ VariableDeclarationStatement@@ObjectId secondId=new ObjectId("53bb9fda4438765b29c2d56f"); @AT@ 5025 @LENGTH@ 8
------INS VariableDeclarationFragment@@secondId=new ObjectId("53bb9fda4438765b29c2d56f") @TO@ VariableDeclarationStatement@@ObjectId secondId=new ObjectId("53bb9fda4438765b29c2d56f"); @AT@ 5034 @LENGTH@ 51
---------INS SimpleName@@secondId @TO@ VariableDeclarationFragment@@secondId=new ObjectId("53bb9fda4438765b29c2d56f") @AT@ 5034 @LENGTH@ 8
---------INS ClassInstanceCreation@@ObjectId["53bb9fda4438765b29c2d56f"] @TO@ VariableDeclarationFragment@@secondId=new ObjectId("53bb9fda4438765b29c2d56f") @AT@ 5045 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@ObjectId["53bb9fda4438765b29c2d56f"] @AT@ 5045 @LENGTH@ 3
------------INS SimpleType@@ObjectId @TO@ ClassInstanceCreation@@ObjectId["53bb9fda4438765b29c2d56f"] @AT@ 5049 @LENGTH@ 8
------------INS StringLiteral@@"53bb9fda4438765b29c2d56f" @TO@ ClassInstanceCreation@@ObjectId["53bb9fda4438765b29c2d56f"] @AT@ 5058 @LENGTH@ 26
---INS VariableDeclarationStatement@@BasicDBList objectIds=new BasicDBList(); @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 5090 @LENGTH@ 42
------INS SimpleType@@BasicDBList @TO@ VariableDeclarationStatement@@BasicDBList objectIds=new BasicDBList(); @AT@ 5090 @LENGTH@ 11
------INS VariableDeclarationFragment@@objectIds=new BasicDBList() @TO@ VariableDeclarationStatement@@BasicDBList objectIds=new BasicDBList(); @AT@ 5102 @LENGTH@ 29
---------INS SimpleName@@objectIds @TO@ VariableDeclarationFragment@@objectIds=new BasicDBList() @AT@ 5102 @LENGTH@ 9
---------INS ClassInstanceCreation@@BasicDBList[] @TO@ VariableDeclarationFragment@@objectIds=new BasicDBList() @AT@ 5114 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBList[] @AT@ 5114 @LENGTH@ 3
------------INS SimpleType@@BasicDBList @TO@ ClassInstanceCreation@@BasicDBList[] @AT@ 5118 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:objectIds.add(firstId.toString()) @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 5135 @LENGTH@ 34
------INS MethodInvocation@@objectIds.add(firstId.toString()) @TO@ ExpressionStatement@@MethodInvocation:objectIds.add(firstId.toString()) @AT@ 5135 @LENGTH@ 33
---------INS SimpleName@@Name:objectIds @TO@ MethodInvocation@@objectIds.add(firstId.toString()) @AT@ 5135 @LENGTH@ 9
---------INS SimpleName@@MethodName:add:[firstId.toString()] @TO@ MethodInvocation@@objectIds.add(firstId.toString()) @AT@ 5145 @LENGTH@ 23
------------INS MethodInvocation@@firstId.toString() @TO@ SimpleName@@MethodName:add:[firstId.toString()] @AT@ 5149 @LENGTH@ 18
---------------INS SimpleName@@Name:firstId @TO@ MethodInvocation@@firstId.toString() @AT@ 5149 @LENGTH@ 7
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@firstId.toString() @AT@ 5157 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:objectIds.add(secondId.toString()) @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 5172 @LENGTH@ 35
------INS MethodInvocation@@objectIds.add(secondId.toString()) @TO@ ExpressionStatement@@MethodInvocation:objectIds.add(secondId.toString()) @AT@ 5172 @LENGTH@ 34
---------INS SimpleName@@Name:objectIds @TO@ MethodInvocation@@objectIds.add(secondId.toString()) @AT@ 5172 @LENGTH@ 9
---------INS SimpleName@@MethodName:add:[secondId.toString()] @TO@ MethodInvocation@@objectIds.add(secondId.toString()) @AT@ 5182 @LENGTH@ 24
------------INS MethodInvocation@@secondId.toString() @TO@ SimpleName@@MethodName:add:[secondId.toString()] @AT@ 5186 @LENGTH@ 19
---------------INS SimpleName@@Name:secondId @TO@ MethodInvocation@@secondId.toString() @AT@ 5186 @LENGTH@ 8
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@secondId.toString() @AT@ 5195 @LENGTH@ 10
---INS VariableDeclarationStatement@@DBObject serialized=serializer.asDBObject("_id",new BasicDBObject("$in",objectIds)); @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 5211 @LENGTH@ 88
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject serialized=serializer.asDBObject("_id",new BasicDBObject("$in",objectIds)); @AT@ 5211 @LENGTH@ 8
------INS VariableDeclarationFragment@@serialized=serializer.asDBObject("_id",new BasicDBObject("$in",objectIds)) @TO@ VariableDeclarationStatement@@DBObject serialized=serializer.asDBObject("_id",new BasicDBObject("$in",objectIds)); @AT@ 5220 @LENGTH@ 78
---------INS SimpleName@@serialized @TO@ VariableDeclarationFragment@@serialized=serializer.asDBObject("_id",new BasicDBObject("$in",objectIds)) @AT@ 5220 @LENGTH@ 10
---------INS MethodInvocation@@serializer.asDBObject("_id",new BasicDBObject("$in",objectIds)) @TO@ VariableDeclarationFragment@@serialized=serializer.asDBObject("_id",new BasicDBObject("$in",objectIds)) @AT@ 5233 @LENGTH@ 65
------------INS SimpleName@@Name:serializer @TO@ MethodInvocation@@serializer.asDBObject("_id",new BasicDBObject("$in",objectIds)) @AT@ 5233 @LENGTH@ 10
------------INS SimpleName@@MethodName:asDBObject:["_id", new BasicDBObject("$in",objectIds)] @TO@ MethodInvocation@@serializer.asDBObject("_id",new BasicDBObject("$in",objectIds)) @AT@ 5244 @LENGTH@ 54
---------------INS StringLiteral@@"_id" @TO@ SimpleName@@MethodName:asDBObject:["_id", new BasicDBObject("$in",objectIds)] @AT@ 5255 @LENGTH@ 5
---------------INS ClassInstanceCreation@@BasicDBObject["$in", objectIds] @TO@ SimpleName@@MethodName:asDBObject:["_id", new BasicDBObject("$in",objectIds)] @AT@ 5262 @LENGTH@ 35
------------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject["$in", objectIds] @AT@ 5262 @LENGTH@ 3
------------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject["$in", objectIds] @AT@ 5266 @LENGTH@ 13
------------------INS StringLiteral@@"$in" @TO@ ClassInstanceCreation@@BasicDBObject["$in", objectIds] @AT@ 5280 @LENGTH@ 5
------------------INS SimpleName@@objectIds @TO@ ClassInstanceCreation@@BasicDBObject["$in", objectIds] @AT@ 5287 @LENGTH@ 9
---INS VariableDeclarationStatement@@DBObject _id=getAsDBObject(serialized,"_id"); @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 5303 @LENGTH@ 48
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject _id=getAsDBObject(serialized,"_id"); @AT@ 5303 @LENGTH@ 8
------INS VariableDeclarationFragment@@_id=getAsDBObject(serialized,"_id") @TO@ VariableDeclarationStatement@@DBObject _id=getAsDBObject(serialized,"_id"); @AT@ 5312 @LENGTH@ 38
---------INS SimpleName@@_id @TO@ VariableDeclarationFragment@@_id=getAsDBObject(serialized,"_id") @AT@ 5312 @LENGTH@ 3
---------INS MethodInvocation@@getAsDBObject(serialized,"_id") @TO@ VariableDeclarationFragment@@_id=getAsDBObject(serialized,"_id") @AT@ 5318 @LENGTH@ 32
------------INS SimpleName@@MethodName:getAsDBObject:[serialized, "_id"] @TO@ MethodInvocation@@getAsDBObject(serialized,"_id") @AT@ 5318 @LENGTH@ 32
---------------INS SimpleName@@serialized @TO@ SimpleName@@MethodName:getAsDBObject:[serialized, "_id"] @AT@ 5332 @LENGTH@ 10
---------------INS StringLiteral@@"_id" @TO@ SimpleName@@MethodName:getAsDBObject:[serialized, "_id"] @AT@ 5344 @LENGTH@ 5
---INS VariableDeclarationStatement@@Object[] $in=getTypedValue(_id,"$in",Object[].class); @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 5354 @LENGTH@ 57
------INS ArrayType@@Object[] @TO@ VariableDeclarationStatement@@Object[] $in=getTypedValue(_id,"$in",Object[].class); @AT@ 5354 @LENGTH@ 8
---------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 5354 @LENGTH@ 6
------INS VariableDeclarationFragment@@$in=getTypedValue(_id,"$in",Object[].class) @TO@ VariableDeclarationStatement@@Object[] $in=getTypedValue(_id,"$in",Object[].class); @AT@ 5363 @LENGTH@ 47
---------INS SimpleName@@$in @TO@ VariableDeclarationFragment@@$in=getTypedValue(_id,"$in",Object[].class) @AT@ 5363 @LENGTH@ 3
---------INS MethodInvocation@@getTypedValue(_id,"$in",Object[].class) @TO@ VariableDeclarationFragment@@$in=getTypedValue(_id,"$in",Object[].class) @AT@ 5369 @LENGTH@ 41
------------INS SimpleName@@MethodName:getTypedValue:[_id, "$in", Object[].class] @TO@ MethodInvocation@@getTypedValue(_id,"$in",Object[].class) @AT@ 5369 @LENGTH@ 41
---------------INS SimpleName@@_id @TO@ SimpleName@@MethodName:getTypedValue:[_id, "$in", Object[].class] @AT@ 5383 @LENGTH@ 3
---------------INS StringLiteral@@"$in" @TO@ SimpleName@@MethodName:getTypedValue:[_id, "$in", Object[].class] @AT@ 5388 @LENGTH@ 5
---------------INS TypeLiteral@@Object[].class @TO@ SimpleName@@MethodName:getTypedValue:[_id, "$in", Object[].class] @AT@ 5395 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat($in,Matchers.<Object>arrayContaining(firstId,secondId)) @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertCollectionOfObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 5415 @LENGTH@ 70
------INS MethodInvocation@@assertThat($in,Matchers.<Object>arrayContaining(firstId,secondId)) @TO@ ExpressionStatement@@MethodInvocation:assertThat($in,Matchers.<Object>arrayContaining(firstId,secondId)) @AT@ 5415 @LENGTH@ 69
---------INS SimpleName@@MethodName:assertThat:[$in, Matchers.<Object>arrayContaining(firstId,secondId)] @TO@ MethodInvocation@@assertThat($in,Matchers.<Object>arrayContaining(firstId,secondId)) @AT@ 5415 @LENGTH@ 69
------------INS SimpleName@@$in @TO@ SimpleName@@MethodName:assertThat:[$in, Matchers.<Object>arrayContaining(firstId,secondId)] @AT@ 5426 @LENGTH@ 3
------------INS MethodInvocation@@Matchers.<Object>arrayContaining(firstId,secondId) @TO@ SimpleName@@MethodName:assertThat:[$in, Matchers.<Object>arrayContaining(firstId,secondId)] @AT@ 5431 @LENGTH@ 52
---------------INS SimpleName@@Name:Matchers @TO@ MethodInvocation@@Matchers.<Object>arrayContaining(firstId,secondId) @AT@ 5431 @LENGTH@ 8
---------------INS SimpleName@@MethodName:arrayContaining:[firstId, secondId] @TO@ MethodInvocation@@Matchers.<Object>arrayContaining(firstId,secondId) @AT@ 5449 @LENGTH@ 34
------------------INS SimpleName@@firstId @TO@ SimpleName@@MethodName:arrayContaining:[firstId, secondId] @AT@ 5465 @LENGTH@ 7
------------------INS SimpleName@@secondId @TO@ SimpleName@@MethodName:arrayContaining:[firstId, secondId] @AT@ 5474 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"address\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"address\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1936 @LENGTH@ 90
---UPD MethodInvocation@@assertTrue(json.contains("\"address\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ assertTrue(json.contains("\"address\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1936 @LENGTH@ 89
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"address\": { \"kind\": \"parameter\", \"type\": \"string\"")] @TO@ MethodName:assertTrue:[json.contains("\"address\": { \"kind\": \"path\", \"type\": \"string\"")] @AT@ 1936 @LENGTH@ 89
---------UPD MethodInvocation@@json.contains("\"address\": { \"kind\": \"parameter\", \"type\": \"string\"") @TO@ json.contains("\"address\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1947 @LENGTH@ 77
------------UPD SimpleName@@MethodName:contains:["\"address\": { \"kind\": \"parameter\", \"type\": \"string\""] @TO@ MethodName:contains:["\"address\": { \"kind\": \"path\", \"type\": \"string\""] @AT@ 1952 @LENGTH@ 72
---------------UPD StringLiteral@@"\"address\": { \"kind\": \"parameter\", \"type\": \"string\"" @TO@ "\"address\": { \"kind\": \"path\", \"type\": \"string\"" @AT@ 1961 @LENGTH@ 62


UPD MethodDeclaration@@public, T, T, MethodName:hasService, Class<T> type,  @TO@ T, T, MethodName:hasService, Class<T> type,  @AT@ 9238 @LENGTH@ 39
---DEL Modifier@@public @AT@ 9238 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("unused"), public, abstract]ApiCollection,  @TO@ [public, abstract]ApiCollection,  @AT@ 1090 @LENGTH@ 1606
---DEL SingleMemberAnnotation@@@SuppressWarnings("unused") @AT@ 1090 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:assertTrue("Message was [" + e.getMessage() + "]",e.getMessage().endsWith("due to: chmod option [abc] is not valid")) @TO@ MethodInvocation:assertTrue("Message was [" + e.getMessage() + "]",e.getMessage().endsWith("conversion possible: chmod option [abc] is not valid")) @AT@ 3506 @LENGTH@ 119
---UPD MethodInvocation@@assertTrue("Message was [" + e.getMessage() + "]",e.getMessage().endsWith("due to: chmod option [abc] is not valid")) @TO@ assertTrue("Message was [" + e.getMessage() + "]",e.getMessage().endsWith("conversion possible: chmod option [abc] is not valid")) @AT@ 3506 @LENGTH@ 118
------UPD SimpleName@@MethodName:assertTrue:["Message was [" + e.getMessage() + "]", e.getMessage().endsWith("due to: chmod option [abc] is not valid")] @TO@ MethodName:assertTrue:["Message was [" + e.getMessage() + "]", e.getMessage().endsWith("conversion possible: chmod option [abc] is not valid")] @AT@ 3506 @LENGTH@ 118
---------UPD MethodInvocation@@e.getMessage().endsWith("due to: chmod option [abc] is not valid") @TO@ e.getMessage().endsWith("conversion possible: chmod option [abc] is not valid") @AT@ 3557 @LENGTH@ 66
------------UPD SimpleName@@MethodName:endsWith:["due to: chmod option [abc] is not valid"] @TO@ MethodName:endsWith:["conversion possible: chmod option [abc] is not valid"] @AT@ 3572 @LENGTH@ 51
---------------UPD StringLiteral@@"due to: chmod option [abc] is not valid" @TO@ "conversion possible: chmod option [abc] is not valid" @AT@ 3581 @LENGTH@ 41


UPD FieldDeclaration@@public, static, final, String, [JMS_MESSAGE_TYPE="JmsMessageType"] @TO@ String, [JMS_MESSAGE_TYPE="JmsMessageType"] @AT@ 884 @LENGTH@ 63
---DEL Modifier@@public @AT@ 884 @LENGTH@ 6
---DEL Modifier@@static @AT@ 891 @LENGTH@ 6
---DEL Modifier@@final @AT@ 898 @LENGTH@ 5


MOV FieldDeclaration@@private, ExchangeFormatter, [localFormatter] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="log"), public]LogEndpoint, ProcessorEndpoint @AT@ 1849 @LENGTH@ 41


INS MethodDeclaration@@public, voidMethodName:WSDLServiceFactoryBean, Class<?> serviceClass,  @TO@ TypeDeclaration@@[public]WSDLServiceFactoryBean, JaxWsServiceFactoryBean @AT@ 1958 @LENGTH@ 99
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:WSDLServiceFactoryBean, Class<?> serviceClass,  @AT@ 1958 @LENGTH@ 6
---INS SimpleName@@MethodName:WSDLServiceFactoryBean @TO@ MethodDeclaration@@public, voidMethodName:WSDLServiceFactoryBean, Class<?> serviceClass,  @AT@ 1965 @LENGTH@ 22
---INS SingleVariableDeclaration@@Class<?> serviceClass @TO@ MethodDeclaration@@public, voidMethodName:WSDLServiceFactoryBean, Class<?> serviceClass,  @AT@ 1988 @LENGTH@ 21
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> serviceClass @AT@ 1988 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1988 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1994 @LENGTH@ 1
------INS SimpleName@@serviceClass @TO@ SingleVariableDeclaration@@Class<?> serviceClass @AT@ 1997 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:setServiceClass(serviceClass) @TO@ MethodDeclaration@@public, voidMethodName:WSDLServiceFactoryBean, Class<?> serviceClass,  @AT@ 2021 @LENGTH@ 30
------INS MethodInvocation@@setServiceClass(serviceClass) @TO@ ExpressionStatement@@MethodInvocation:setServiceClass(serviceClass) @AT@ 2021 @LENGTH@ 29
---------INS SimpleName@@MethodName:setServiceClass:[serviceClass] @TO@ MethodInvocation@@setServiceClass(serviceClass) @AT@ 2021 @LENGTH@ 29
------------INS SimpleName@@serviceClass @TO@ SimpleName@@MethodName:setServiceClass:[serviceClass] @AT@ 2037 @LENGTH@ 12


UPD TypeDeclaration@@[private, static]ResourcesProcessorWrapper, DefaultProcessorWrapper @TO@ [static]ResourcesProcessorWrapper, DefaultProcessorWrapper @AT@ 14046 @LENGTH@ 1777
---DEL Modifier@@private @AT@ 14046 @LENGTH@ 7


UPD TypeDeclaration@@[public]OptaPlannerEndpoint, ResourceEndpoint @TO@ [@UriEndpoint(scheme="optaplanner"), public]OptaPlannerEndpoint, ResourceEndpoint @AT@ 1254 @LENGTH@ 1371
---INS NormalAnnotation@@@UriEndpoint(scheme="optaplanner") @TO@ TypeDeclaration@@[public]OptaPlannerEndpoint, ResourceEndpoint @AT@ 1295 @LENGTH@ 36


UPD VariableDeclarationStatement@@final List arguments=helper.getArguments(methodName); @TO@ final List<Object> arguments=helper.getArguments(methodName); @AT@ 8941 @LENGTH@ 55
---INS ParameterizedType@@List<Object> @TO@ VariableDeclarationStatement@@final List arguments=helper.getArguments(methodName); @AT@ 8947 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 8947 @LENGTH@ 4
------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 8952 @LENGTH@ 6
---DEL SimpleType@@List @AT@ 8947 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:shouldWriteCglibProxiedClassTypeInformationCorrectly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MappingMongoConverterUnitTests,  @AT@ 52835 @LENGTH@ 416
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteCglibProxiedClassTypeInformationCorrectly,  @AT@ 52835 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteCglibProxiedClassTypeInformationCorrectly,  @AT@ 52842 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldWriteCglibProxiedClassTypeInformationCorrectly @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteCglibProxiedClassTypeInformationCorrectly,  @AT@ 52847 @LENGTH@ 52
---INS VariableDeclarationStatement@@ProxyFactory factory=new ProxyFactory(); @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteCglibProxiedClassTypeInformationCorrectly,  @AT@ 52907 @LENGTH@ 42
------INS SimpleType@@ProxyFactory @TO@ VariableDeclarationStatement@@ProxyFactory factory=new ProxyFactory(); @AT@ 52907 @LENGTH@ 12
------INS VariableDeclarationFragment@@factory=new ProxyFactory() @TO@ VariableDeclarationStatement@@ProxyFactory factory=new ProxyFactory(); @AT@ 52920 @LENGTH@ 28
---------INS SimpleName@@factory @TO@ VariableDeclarationFragment@@factory=new ProxyFactory() @AT@ 52920 @LENGTH@ 7
---------INS ClassInstanceCreation@@ProxyFactory[] @TO@ VariableDeclarationFragment@@factory=new ProxyFactory() @AT@ 52930 @LENGTH@ 18
------------INS New@@new @TO@ ClassInstanceCreation@@ProxyFactory[] @AT@ 52930 @LENGTH@ 3
------------INS SimpleType@@ProxyFactory @TO@ ClassInstanceCreation@@ProxyFactory[] @AT@ 52934 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:factory.setTargetClass(GenericType.class) @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteCglibProxiedClassTypeInformationCorrectly,  @AT@ 52952 @LENGTH@ 42
------INS MethodInvocation@@factory.setTargetClass(GenericType.class) @TO@ ExpressionStatement@@MethodInvocation:factory.setTargetClass(GenericType.class) @AT@ 52952 @LENGTH@ 41
---------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.setTargetClass(GenericType.class) @AT@ 52952 @LENGTH@ 7
---------INS SimpleName@@MethodName:setTargetClass:[GenericType.class] @TO@ MethodInvocation@@factory.setTargetClass(GenericType.class) @AT@ 52960 @LENGTH@ 33
------------INS TypeLiteral@@GenericType.class @TO@ SimpleName@@MethodName:setTargetClass:[GenericType.class] @AT@ 52975 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:factory.setProxyTargetClass(true) @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteCglibProxiedClassTypeInformationCorrectly,  @AT@ 52997 @LENGTH@ 34
------INS MethodInvocation@@factory.setProxyTargetClass(true) @TO@ ExpressionStatement@@MethodInvocation:factory.setProxyTargetClass(true) @AT@ 52997 @LENGTH@ 33
---------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.setProxyTargetClass(true) @AT@ 52997 @LENGTH@ 7
---------INS SimpleName@@MethodName:setProxyTargetClass:[true] @TO@ MethodInvocation@@factory.setProxyTargetClass(true) @AT@ 53005 @LENGTH@ 25
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setProxyTargetClass:[true] @AT@ 53025 @LENGTH@ 4
---INS VariableDeclarationStatement@@GenericType<?> proxied=(GenericType<?>)factory.getProxy(); @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteCglibProxiedClassTypeInformationCorrectly,  @AT@ 53035 @LENGTH@ 61
------INS ParameterizedType@@GenericType<?> @TO@ VariableDeclarationStatement@@GenericType<?> proxied=(GenericType<?>)factory.getProxy(); @AT@ 53035 @LENGTH@ 14
---------INS SimpleType@@GenericType @TO@ ParameterizedType@@GenericType<?> @AT@ 53035 @LENGTH@ 11
---------INS WildcardType@@? @TO@ ParameterizedType@@GenericType<?> @AT@ 53047 @LENGTH@ 1
------INS VariableDeclarationFragment@@proxied=(GenericType<?>)factory.getProxy() @TO@ VariableDeclarationStatement@@GenericType<?> proxied=(GenericType<?>)factory.getProxy(); @AT@ 53050 @LENGTH@ 45
---------INS SimpleName@@proxied @TO@ VariableDeclarationFragment@@proxied=(GenericType<?>)factory.getProxy() @AT@ 53050 @LENGTH@ 7
---------INS CastExpression@@(GenericType<?>)factory.getProxy() @TO@ VariableDeclarationFragment@@proxied=(GenericType<?>)factory.getProxy() @AT@ 53060 @LENGTH@ 35
------------INS ParameterizedType@@GenericType<?> @TO@ CastExpression@@(GenericType<?>)factory.getProxy() @AT@ 53061 @LENGTH@ 14
---------------INS SimpleType@@GenericType @TO@ ParameterizedType@@GenericType<?> @AT@ 53061 @LENGTH@ 11
---------------INS WildcardType@@? @TO@ ParameterizedType@@GenericType<?> @AT@ 53073 @LENGTH@ 1
------------INS MethodInvocation@@factory.getProxy() @TO@ CastExpression@@(GenericType<?>)factory.getProxy() @AT@ 53077 @LENGTH@ 18
---------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getProxy() @AT@ 53077 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getProxy:[] @TO@ MethodInvocation@@factory.getProxy() @AT@ 53085 @LENGTH@ 10
---INS VariableDeclarationStatement@@BasicDBObject dbo=new BasicDBObject(); @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteCglibProxiedClassTypeInformationCorrectly,  @AT@ 53099 @LENGTH@ 40
------INS SimpleType@@BasicDBObject @TO@ VariableDeclarationStatement@@BasicDBObject dbo=new BasicDBObject(); @AT@ 53099 @LENGTH@ 13
------INS VariableDeclarationFragment@@dbo=new BasicDBObject() @TO@ VariableDeclarationStatement@@BasicDBObject dbo=new BasicDBObject(); @AT@ 53113 @LENGTH@ 25
---------INS SimpleName@@dbo @TO@ VariableDeclarationFragment@@dbo=new BasicDBObject() @AT@ 53113 @LENGTH@ 3
---------INS ClassInstanceCreation@@BasicDBObject[] @TO@ VariableDeclarationFragment@@dbo=new BasicDBObject() @AT@ 53119 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject[] @AT@ 53119 @LENGTH@ 3
------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject[] @AT@ 53123 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:converter.write(proxied,dbo) @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteCglibProxiedClassTypeInformationCorrectly,  @AT@ 53142 @LENGTH@ 30
------INS MethodInvocation@@converter.write(proxied,dbo) @TO@ ExpressionStatement@@MethodInvocation:converter.write(proxied,dbo) @AT@ 53142 @LENGTH@ 29
---------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.write(proxied,dbo) @AT@ 53142 @LENGTH@ 9
---------INS SimpleName@@MethodName:write:[proxied, dbo] @TO@ MethodInvocation@@converter.write(proxied,dbo) @AT@ 53152 @LENGTH@ 19
------------INS SimpleName@@proxied @TO@ SimpleName@@MethodName:write:[proxied, dbo] @AT@ 53158 @LENGTH@ 7
------------INS SimpleName@@dbo @TO@ SimpleName@@MethodName:write:[proxied, dbo] @AT@ 53167 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(dbo.get("_class"),is((Object)GenericType.class.getName())) @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteCglibProxiedClassTypeInformationCorrectly,  @AT@ 53176 @LENGTH@ 72
------INS MethodInvocation@@assertThat(dbo.get("_class"),is((Object)GenericType.class.getName())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(dbo.get("_class"),is((Object)GenericType.class.getName())) @AT@ 53176 @LENGTH@ 71
---------INS SimpleName@@MethodName:assertThat:[dbo.get("_class"), is((Object)GenericType.class.getName())] @TO@ MethodInvocation@@assertThat(dbo.get("_class"),is((Object)GenericType.class.getName())) @AT@ 53176 @LENGTH@ 71
------------INS MethodInvocation@@dbo.get("_class") @TO@ SimpleName@@MethodName:assertThat:[dbo.get("_class"), is((Object)GenericType.class.getName())] @AT@ 53187 @LENGTH@ 17
---------------INS SimpleName@@Name:dbo @TO@ MethodInvocation@@dbo.get("_class") @AT@ 53187 @LENGTH@ 3
---------------INS SimpleName@@MethodName:get:["_class"] @TO@ MethodInvocation@@dbo.get("_class") @AT@ 53191 @LENGTH@ 13
------------------INS StringLiteral@@"_class" @TO@ SimpleName@@MethodName:get:["_class"] @AT@ 53195 @LENGTH@ 8
------------INS MethodInvocation@@is((Object)GenericType.class.getName()) @TO@ SimpleName@@MethodName:assertThat:[dbo.get("_class"), is((Object)GenericType.class.getName())] @AT@ 53206 @LENGTH@ 40
---------------INS SimpleName@@MethodName:is:[(Object)GenericType.class.getName()] @TO@ MethodInvocation@@is((Object)GenericType.class.getName()) @AT@ 53206 @LENGTH@ 40
------------------INS CastExpression@@(Object)GenericType.class.getName() @TO@ SimpleName@@MethodName:is:[(Object)GenericType.class.getName()] @AT@ 53209 @LENGTH@ 36
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)GenericType.class.getName() @AT@ 53210 @LENGTH@ 6
---------------------INS MethodInvocation@@GenericType.class.getName() @TO@ CastExpression@@(Object)GenericType.class.getName() @AT@ 53218 @LENGTH@ 27
------------------------INS TypeLiteral@@GenericType.class @TO@ MethodInvocation@@GenericType.class.getName() @AT@ 53218 @LENGTH@ 17
------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@GenericType.class.getName() @AT@ 53236 @LENGTH@ 9


UPD ReturnStatement@@ArrayCreation:new ModelValidationStepHandler[]{new NotEmptyResourceValidationStepHandler(),new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @TO@ ArrayCreation:new ModelValidationStepHandler[]{NotEmptyResourceValidationStepHandler.INSTANCE,new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @AT@ 4221 @LENGTH@ 190
---UPD ArrayCreation@@new ModelValidationStepHandler[]{new NotEmptyResourceValidationStepHandler(),new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @TO@ new ModelValidationStepHandler[]{NotEmptyResourceValidationStepHandler.INSTANCE,new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @AT@ 4228 @LENGTH@ 182
------UPD ArrayInitializer@@{new NotEmptyResourceValidationStepHandler(),new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @TO@ {NotEmptyResourceValidationStepHandler.INSTANCE,new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @AT@ 4261 @LENGTH@ 149
---------INS QualifiedName@@NotEmptyResourceValidationStepHandler.INSTANCE @TO@ ArrayInitializer@@{new NotEmptyResourceValidationStepHandler(),new RequiredChildValidationStepHandler(ModelElement.SUPPORTED_TYPES)} @AT@ 4275 @LENGTH@ 46
------------INS SimpleName@@NotEmptyResourceValidationStepHandler @TO@ QualifiedName@@NotEmptyResourceValidationStepHandler.INSTANCE @AT@ 4275 @LENGTH@ 37
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@NotEmptyResourceValidationStepHandler.INSTANCE @AT@ 4313 @LENGTH@ 8
---------DEL ClassInstanceCreation@@NotEmptyResourceValidationStepHandler[] @AT@ 4275 @LENGTH@ 43
------------DEL New@@new @AT@ 4275 @LENGTH@ 3
------------DEL SimpleType@@NotEmptyResourceValidationStepHandler @AT@ 4279 @LENGTH@ 37


UPD IfStatement@@if (ModClusterModel.VERSION_1_2_0.requiresTransformation(version)) {  builder.addChildResource(PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,TYPE,WEIGHT,CAPACITY,PROPERTY).addRejectCheck(CapacityCheckerAndConverter.INSTANCE,CAPACITY).setValueConverter(CapacityCheckerAndConverter.INSTANCE,CAPACITY).addRejectCheck(PropertyCheckerAndConverter.INSTANCE,PROPERTY).setValueConverter(PropertyCheckerAndConverter.INSTANCE,PROPERTY).end();} @TO@ if (ModClusterModel.VERSION_1_3_0.requiresTransformation(version)) {  builder.addChildResource(PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,TYPE,WEIGHT,CAPACITY,PROPERTY).addRejectCheck(CapacityCheckerAndConverter.INSTANCE,CAPACITY).setValueConverter(CapacityCheckerAndConverter.INSTANCE,CAPACITY).addRejectCheck(PropertyCheckerAndConverter.INSTANCE,PROPERTY).setValueConverter(PropertyCheckerAndConverter.INSTANCE,PROPERTY).end();} @AT@ 3750 @LENGTH@ 647
---UPD MethodInvocation@@ModClusterModel.VERSION_1_2_0.requiresTransformation(version) @TO@ ModClusterModel.VERSION_1_3_0.requiresTransformation(version) @AT@ 3754 @LENGTH@ 61
------UPD QualifiedName@@Name:ModClusterModel.VERSION_1_2_0 @TO@ Name:ModClusterModel.VERSION_1_3_0 @AT@ 3754 @LENGTH@ 29


UPD VariableDeclarationStatement@@final SslHandler sslHandler=ctx.getPipeline().get(SslHandler.class); @TO@ final SslHandler sslHandler=ctx.pipeline().get(SslHandler.class); @AT@ 3759 @LENGTH@ 70
---UPD VariableDeclarationFragment@@sslHandler=ctx.getPipeline().get(SslHandler.class) @TO@ sslHandler=ctx.pipeline().get(SslHandler.class) @AT@ 3776 @LENGTH@ 52
------UPD MethodInvocation@@ctx.getPipeline().get(SslHandler.class) @TO@ ctx.pipeline().get(SslHandler.class) @AT@ 3789 @LENGTH@ 39
---------UPD MethodInvocation@@MethodName:getPipeline:[] @TO@ MethodName:pipeline:[] @AT@ 3789 @LENGTH@ 17


UPD Block@@ThenBody:{  MediaType mediaType=response.getEntity().getMediaType();  if (mediaType != null) {    exchange.getOut().setHeader(Exchange.CONTENT_TYPE,mediaType.toString());  }  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @TO@ ThenBody:{  MediaType mediaType=response.getEntity().getMediaType();  if (mediaType != null) {    LOG.debug("Setting the Content-Type to be {}",mediaType.toString());    exchange.getOut().setHeader(Exchange.CONTENT_TYPE,mediaType.toString());  }  if (mediaType != null && mediaType.equals(MediaType.APPLICATION_OCTET_STREAM)) {    exchange.getOut().setBody(response.getEntity().getStream());  } else {    String text=response.getEntity().getText();    LOG.debug("Populate exchange from Restlet response: {}",text);    exchange.getOut().setBody(text);  }} @AT@ 14068 @LENGTH@ 467
---UPD IfStatement@@if (mediaType != null) {  exchange.getOut().setHeader(Exchange.CONTENT_TYPE,mediaType.toString());} @TO@ if (mediaType != null) {  LOG.debug("Setting the Content-Type to be {}",mediaType.toString());  exchange.getOut().setHeader(Exchange.CONTENT_TYPE,mediaType.toString());} @AT@ 14185 @LENGTH@ 128
------UPD Block@@ThenBody:{  exchange.getOut().setHeader(Exchange.CONTENT_TYPE,mediaType.toString());} @TO@ ThenBody:{  LOG.debug("Setting the Content-Type to be {}",mediaType.toString());  exchange.getOut().setHeader(Exchange.CONTENT_TYPE,mediaType.toString());} @AT@ 14208 @LENGTH@ 105
---------INS ExpressionStatement@@MethodInvocation:LOG.debug("Setting the Content-Type to be {}",mediaType.toString()) @TO@ Block@@ThenBody:{  exchange.getOut().setHeader(Exchange.CONTENT_TYPE,mediaType.toString());} @AT@ 14226 @LENGTH@ 70
------------INS MethodInvocation@@LOG.debug("Setting the Content-Type to be {}",mediaType.toString()) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Setting the Content-Type to be {}",mediaType.toString()) @AT@ 14226 @LENGTH@ 69
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Setting the Content-Type to be {}",mediaType.toString()) @AT@ 14226 @LENGTH@ 3
---------------INS SimpleName@@MethodName:debug:["Setting the Content-Type to be {}", mediaType.toString()] @TO@ MethodInvocation@@LOG.debug("Setting the Content-Type to be {}",mediaType.toString()) @AT@ 14230 @LENGTH@ 65
------------------INS StringLiteral@@"Setting the Content-Type to be {}" @TO@ SimpleName@@MethodName:debug:["Setting the Content-Type to be {}", mediaType.toString()] @AT@ 14236 @LENGTH@ 35
------------------INS MethodInvocation@@mediaType.toString() @TO@ SimpleName@@MethodName:debug:["Setting the Content-Type to be {}", mediaType.toString()] @AT@ 14274 @LENGTH@ 20
---------------------INS SimpleName@@Name:mediaType @TO@ MethodInvocation@@mediaType.toString() @AT@ 14274 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@mediaType.toString() @AT@ 14284 @LENGTH@ 10
---INS IfStatement@@if (mediaType != null && mediaType.equals(MediaType.APPLICATION_OCTET_STREAM)) {  exchange.getOut().setBody(response.getEntity().getStream());} else {  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @TO@ Block@@ThenBody:{  MediaType mediaType=response.getEntity().getMediaType();  if (mediaType != null) {    exchange.getOut().setHeader(Exchange.CONTENT_TYPE,mediaType.toString());  }  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @AT@ 14413 @LENGTH@ 419
------INS InfixExpression@@mediaType != null && mediaType.equals(MediaType.APPLICATION_OCTET_STREAM) @TO@ IfStatement@@if (mediaType != null && mediaType.equals(MediaType.APPLICATION_OCTET_STREAM)) {  exchange.getOut().setBody(response.getEntity().getStream());} else {  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @AT@ 14417 @LENGTH@ 73
---------INS InfixExpression@@mediaType != null @TO@ InfixExpression@@mediaType != null && mediaType.equals(MediaType.APPLICATION_OCTET_STREAM) @AT@ 14417 @LENGTH@ 17
------------INS SimpleName@@mediaType @TO@ InfixExpression@@mediaType != null @AT@ 14417 @LENGTH@ 9
------------INS Operator@@!= @TO@ InfixExpression@@mediaType != null @AT@ 14426 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@mediaType != null @AT@ 14430 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@mediaType != null && mediaType.equals(MediaType.APPLICATION_OCTET_STREAM) @AT@ 14434 @LENGTH@ 2
---------INS MethodInvocation@@mediaType.equals(MediaType.APPLICATION_OCTET_STREAM) @TO@ InfixExpression@@mediaType != null && mediaType.equals(MediaType.APPLICATION_OCTET_STREAM) @AT@ 14438 @LENGTH@ 52
------------INS SimpleName@@Name:mediaType @TO@ MethodInvocation@@mediaType.equals(MediaType.APPLICATION_OCTET_STREAM) @AT@ 14438 @LENGTH@ 9
------------INS SimpleName@@MethodName:equals:[MediaType.APPLICATION_OCTET_STREAM] @TO@ MethodInvocation@@mediaType.equals(MediaType.APPLICATION_OCTET_STREAM) @AT@ 14448 @LENGTH@ 42
---------------INS QualifiedName@@MediaType.APPLICATION_OCTET_STREAM @TO@ SimpleName@@MethodName:equals:[MediaType.APPLICATION_OCTET_STREAM] @AT@ 14455 @LENGTH@ 34
------------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_OCTET_STREAM @AT@ 14455 @LENGTH@ 9
------------------INS SimpleName@@APPLICATION_OCTET_STREAM @TO@ QualifiedName@@MediaType.APPLICATION_OCTET_STREAM @AT@ 14465 @LENGTH@ 24
------INS Block@@ThenBody:{  exchange.getOut().setBody(response.getEntity().getStream());} @TO@ IfStatement@@if (mediaType != null && mediaType.equals(MediaType.APPLICATION_OCTET_STREAM)) {  exchange.getOut().setBody(response.getEntity().getStream());} else {  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @AT@ 14492 @LENGTH@ 92
---------INS ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(response.getEntity().getStream()) @TO@ Block@@ThenBody:{  exchange.getOut().setBody(response.getEntity().getStream());} @AT@ 14510 @LENGTH@ 60
------------INS MethodInvocation@@exchange.getOut().setBody(response.getEntity().getStream()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(response.getEntity().getStream()) @AT@ 14510 @LENGTH@ 59
---------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().setBody(response.getEntity().getStream()) @AT@ 14510 @LENGTH@ 17
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().setBody(response.getEntity().getStream()) @AT@ 14510 @LENGTH@ 8
---------------INS SimpleName@@MethodName:setBody:[response.getEntity().getStream()] @TO@ MethodInvocation@@exchange.getOut().setBody(response.getEntity().getStream()) @AT@ 14528 @LENGTH@ 41
------------------INS MethodInvocation@@response.getEntity().getStream() @TO@ SimpleName@@MethodName:setBody:[response.getEntity().getStream()] @AT@ 14536 @LENGTH@ 32
---------------------INS MethodInvocation@@MethodName:getEntity:[] @TO@ MethodInvocation@@response.getEntity().getStream() @AT@ 14536 @LENGTH@ 20
---------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getEntity().getStream() @AT@ 14536 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getStream:[] @TO@ MethodInvocation@@response.getEntity().getStream() @AT@ 14557 @LENGTH@ 11
------INS Block@@ElseBody:{  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @TO@ IfStatement@@if (mediaType != null && mediaType.equals(MediaType.APPLICATION_OCTET_STREAM)) {  exchange.getOut().setBody(response.getEntity().getStream());} else {  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @AT@ 14590 @LENGTH@ 242
---------MOV VariableDeclarationStatement@@String text=response.getEntity().getText(); @TO@ Block@@ElseBody:{  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @AT@ 14359 @LENGTH@ 45
---------MOV ExpressionStatement@@MethodInvocation:LOG.debug("Populate exchange from Restlet response: {}",text) @TO@ Block@@ElseBody:{  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @AT@ 14417 @LENGTH@ 63
---------MOV ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(text) @TO@ Block@@ElseBody:{  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @AT@ 14493 @LENGTH@ 32


UPD CatchClause@@catch (IOException e) {  e.printStackTrace();  System.err.println("Error launching map-reduce job" + "\n" + org.apache.hadoop.util.StringUtils.stringifyException(e));  return 5;} @TO@ catch (IOException e) {  LOG.error("Error launching map-reduce job",e);  return 5;} @AT@ 5159 @LENGTH@ 208
---DEL ExpressionStatement@@MethodInvocation:e.printStackTrace() @AT@ 5189 @LENGTH@ 20
------DEL MethodInvocation@@e.printStackTrace() @AT@ 5189 @LENGTH@ 19
---------DEL SimpleName@@Name:e @AT@ 5189 @LENGTH@ 1
---------DEL SimpleName@@MethodName:printStackTrace:[] @AT@ 5191 @LENGTH@ 17
---UPD ExpressionStatement@@MethodInvocation:System.err.println("Error launching map-reduce job" + "\n" + org.apache.hadoop.util.StringUtils.stringifyException(e)) @TO@ MethodInvocation:LOG.error("Error launching map-reduce job",e) @AT@ 5216 @LENGTH@ 129
------UPD MethodInvocation@@System.err.println("Error launching map-reduce job" + "\n" + org.apache.hadoop.util.StringUtils.stringifyException(e)) @TO@ LOG.error("Error launching map-reduce job",e) @AT@ 5216 @LENGTH@ 128
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@System.err.println("Error launching map-reduce job" + "\n" + org.apache.hadoop.util.StringUtils.stringifyException(e)) @AT@ 5189 @LENGTH@ 3
---------DEL QualifiedName@@Name:System.err @AT@ 5216 @LENGTH@ 10
---------UPD SimpleName@@MethodName:println:["Error launching map-reduce job" + "\n" + org.apache.hadoop.util.StringUtils.stringifyException(e)] @TO@ MethodName:error:["Error launching map-reduce job", e] @AT@ 5227 @LENGTH@ 117
------------INS StringLiteral@@"Error launching map-reduce job" @TO@ SimpleName@@MethodName:println:["Error launching map-reduce job" + "\n" + org.apache.hadoop.util.StringUtils.stringifyException(e)] @AT@ 5199 @LENGTH@ 32
------------DEL InfixExpression@@"Error launching map-reduce job" + "\n" + org.apache.hadoop.util.StringUtils.stringifyException(e) @AT@ 5235 @LENGTH@ 108
---------------DEL StringLiteral@@"Error launching map-reduce job" @AT@ 5235 @LENGTH@ 32
---------------DEL Operator@@+ @AT@ 5267 @LENGTH@ 1
---------------DEL StringLiteral@@"\n" @AT@ 5270 @LENGTH@ 4
---------------DEL MethodInvocation@@org.apache.hadoop.util.StringUtils.stringifyException(e) @AT@ 5287 @LENGTH@ 56
------------------DEL QualifiedName@@Name:org.apache.hadoop.util.StringUtils @AT@ 5287 @LENGTH@ 34
------------------DEL SimpleName@@MethodName:stringifyException:[e] @AT@ 5322 @LENGTH@ 21
------------MOV SimpleName@@e @TO@ SimpleName@@MethodName:println:["Error launching map-reduce job" + "\n" + org.apache.hadoop.util.StringUtils.stringifyException(e)] @AT@ 5341 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isEqualTo("rod") @TO@ MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @AT@ 6729 @LENGTH@ 84
---UPD MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isEqualTo("rod") @TO@ assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @AT@ 6729 @LENGTH@ 83
------UPD MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @TO@ MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication().getName()] @AT@ 6729 @LENGTH@ 66
---------UPD MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ SecurityContextHolder.getContext().getAuthentication().getName() @AT@ 6740 @LENGTH@ 54
------------INS MethodInvocation@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 6740 @LENGTH@ 54
------------UPD SimpleName@@MethodName:getAuthentication:[] @TO@ MethodName:getName:[] @AT@ 6775 @LENGTH@ 19


UPD VariableDeclarationStatement@@HiveFilterRel filter=new HiveFilterRel(cluster,TraitsUtil.getFilterTraitSet(cluster,null,child),child,condition); @TO@ HiveFilterRel filter=new HiveFilterRel(cluster,TraitsUtil.getDefaultTraitSet(cluster),child,condition); @AT@ 1705 @LENGTH@ 130
---UPD VariableDeclarationFragment@@filter=new HiveFilterRel(cluster,TraitsUtil.getFilterTraitSet(cluster,null,child),child,condition) @TO@ filter=new HiveFilterRel(cluster,TraitsUtil.getDefaultTraitSet(cluster),child,condition) @AT@ 1719 @LENGTH@ 115
------UPD ClassInstanceCreation@@HiveFilterRel[cluster, TraitsUtil.getFilterTraitSet(cluster,null,child), child, condition] @TO@ HiveFilterRel[cluster, TraitsUtil.getDefaultTraitSet(cluster), child, condition] @AT@ 1728 @LENGTH@ 106
---------UPD MethodInvocation@@TraitsUtil.getFilterTraitSet(cluster,null,child) @TO@ TraitsUtil.getDefaultTraitSet(cluster) @AT@ 1755 @LENGTH@ 60
------------UPD SimpleName@@MethodName:getFilterTraitSet:[cluster, null, child] @TO@ MethodName:getDefaultTraitSet:[cluster] @AT@ 1766 @LENGTH@ 49
---------------DEL NullLiteral@@null @AT@ 1793 @LENGTH@ 4
---------------DEL SimpleName@@child @AT@ 1809 @LENGTH@ 5


UPD SuperConstructorInvocation@@super(context);
 @TO@ super(context,CxfRsEndpoint.class);
 @AT@ 1637 @LENGTH@ 15
---INS TypeLiteral@@CxfRsEndpoint.class @TO@ SuperConstructorInvocation@@super(context);
 @AT@ 1688 @LENGTH@ 19


INS EnhancedForStatement@@for (Map.Entry<String,DestinationData> entry : store.getEntries()) {  destinationDataStoreListener.addDestinationDataListener(entry.getKey(),entry.getValue());} @TO@ MethodDeclaration@@public, void, MethodName:addDestinationDataStore, DestinationDataStore store,  @AT@ 5822 @LENGTH@ 167
---INS SingleVariableDeclaration@@Map.Entry<String,DestinationData> entry @TO@ EnhancedForStatement@@for (Map.Entry<String,DestinationData> entry : store.getEntries()) {  destinationDataStoreListener.addDestinationDataListener(entry.getKey(),entry.getValue());} @AT@ 5827 @LENGTH@ 40
------INS ParameterizedType@@Map.Entry<String,DestinationData> @TO@ SingleVariableDeclaration@@Map.Entry<String,DestinationData> entry @AT@ 5827 @LENGTH@ 34
---------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,DestinationData> @AT@ 5827 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,DestinationData> @AT@ 5837 @LENGTH@ 6
---------INS SimpleType@@DestinationData @TO@ ParameterizedType@@Map.Entry<String,DestinationData> @AT@ 5845 @LENGTH@ 15
------INS SimpleName@@entry @TO@ SingleVariableDeclaration@@Map.Entry<String,DestinationData> entry @AT@ 5862 @LENGTH@ 5
---INS MethodInvocation@@store.getEntries() @TO@ EnhancedForStatement@@for (Map.Entry<String,DestinationData> entry : store.getEntries()) {  destinationDataStoreListener.addDestinationDataListener(entry.getKey(),entry.getValue());} @AT@ 5870 @LENGTH@ 18
------INS SimpleName@@Name:store @TO@ MethodInvocation@@store.getEntries() @AT@ 5870 @LENGTH@ 5
------INS SimpleName@@MethodName:getEntries:[] @TO@ MethodInvocation@@store.getEntries() @AT@ 5876 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:destinationDataStoreListener.addDestinationDataListener(entry.getKey(),entry.getValue()) @TO@ EnhancedForStatement@@for (Map.Entry<String,DestinationData> entry : store.getEntries()) {  destinationDataStoreListener.addDestinationDataListener(entry.getKey(),entry.getValue());} @AT@ 5895 @LENGTH@ 90
------INS MethodInvocation@@destinationDataStoreListener.addDestinationDataListener(entry.getKey(),entry.getValue()) @TO@ ExpressionStatement@@MethodInvocation:destinationDataStoreListener.addDestinationDataListener(entry.getKey(),entry.getValue()) @AT@ 5895 @LENGTH@ 89
---------INS SimpleName@@Name:destinationDataStoreListener @TO@ MethodInvocation@@destinationDataStoreListener.addDestinationDataListener(entry.getKey(),entry.getValue()) @AT@ 5895 @LENGTH@ 28
---------INS SimpleName@@MethodName:addDestinationDataListener:[entry.getKey(), entry.getValue()] @TO@ MethodInvocation@@destinationDataStoreListener.addDestinationDataListener(entry.getKey(),entry.getValue()) @AT@ 5924 @LENGTH@ 60
------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:addDestinationDataListener:[entry.getKey(), entry.getValue()] @AT@ 5951 @LENGTH@ 14
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 5951 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 5957 @LENGTH@ 8
------------INS MethodInvocation@@entry.getValue() @TO@ SimpleName@@MethodName:addDestinationDataListener:[entry.getKey(), entry.getValue()] @AT@ 5967 @LENGTH@ 16
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 5967 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 5973 @LENGTH@ 10


UPD TypeDeclaration@@[public]GreaterThanOperation, ComparisonOperation @TO@ [public]GreaterThanOperation, SameTypeOperation @AT@ 1154 @LENGTH@ 411
---UPD SimpleType@@ComparisonOperation @TO@ SameTypeOperation @AT@ 1196 @LENGTH@ 19


INS MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @TO@ TypeDeclaration@@[public, abstract]AbstractSocketBindingGroupAddHandler, AbstractAddStepHandler @AT@ 2463 @LENGTH@ 154
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 2463 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 2473 @LENGTH@ 7
---INS SimpleName@@MethodName:requiresRuntime @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 2481 @LENGTH@ 15
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 2497 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 2497 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 2514 @LENGTH@ 7
---INS ReturnStatement@@InfixExpression:context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 2533 @LENGTH@ 78
------INS InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @TO@ ReturnStatement@@InfixExpression:context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 2540 @LENGTH@ 70
---------INS InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 2540 @LENGTH@ 46
------------INS MethodInvocation@@context.getRunningMode() @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 2540 @LENGTH@ 24
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRunningMode() @AT@ 2540 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getRunningMode:[] @TO@ MethodInvocation@@context.getRunningMode() @AT@ 2548 @LENGTH@ 16
------------INS Operator@@== @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 2564 @LENGTH@ 2
------------INS QualifiedName@@RunningMode.NORMAL @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 2568 @LENGTH@ 18
---------------INS SimpleName@@RunningMode @TO@ QualifiedName@@RunningMode.NORMAL @AT@ 2568 @LENGTH@ 11
---------------INS SimpleName@@NORMAL @TO@ QualifiedName@@RunningMode.NORMAL @AT@ 2580 @LENGTH@ 6
---------INS Operator@@&& @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 2586 @LENGTH@ 2
---------INS PrefixExpression@@!context.isBooting() @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL && !context.isBooting() @AT@ 2590 @LENGTH@ 20
------------INS Operator@@! @TO@ PrefixExpression@@!context.isBooting() @AT@ 2590 @LENGTH@ 1
------------INS MethodInvocation@@context.isBooting() @TO@ PrefixExpression@@!context.isBooting() @AT@ 2591 @LENGTH@ 19
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isBooting() @AT@ 2591 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isBooting:[] @TO@ MethodInvocation@@context.isBooting() @AT@ 2599 @LENGTH@ 11


MOV MethodDeclaration@@protected, voidMethodName:TimerEndpoint, String endpointUri, Component component,  @TO@ TypeDeclaration@@[@ManagedResource(description="Managed TimerEndpoint"), @UriEndpoint(scheme="timer",consumerClass=TimerConsumer.class), public]TimerEndpoint, DefaultEndpoint[MultipleConsumersSupport] @AT@ 5544 @LENGTH@ 111


UPD FieldDeclaration@@private, GenericArrayType, [type] @TO@ private, final, GenericArrayType, [type] @AT@ 958 @LENGTH@ 30
---INS Modifier@@final @TO@ FieldDeclaration@@private, GenericArrayType, [type] @AT@ 1027 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:printer.printRecords(new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}) @TO@ MethodInvocation:printer.printRecords((Object)new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}) @AT@ 5588 @LENGTH@ 98
---UPD MethodInvocation@@printer.printRecords(new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}) @TO@ printer.printRecords((Object)new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}) @AT@ 5588 @LENGTH@ 97
------UPD SimpleName@@MethodName:printRecords:[new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}] @TO@ MethodName:printRecords:[(Object)new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}] @AT@ 5596 @LENGTH@ 89
---------INS CastExpression@@(Object)new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")} @TO@ SimpleName@@MethodName:printRecords:[new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")}] @AT@ 5620 @LENGTH@ 84
------------MOV ArrayCreation@@new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")} @TO@ CastExpression@@(Object)new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")} @AT@ 5609 @LENGTH@ 75
------------INS SimpleType@@Object @TO@ CastExpression@@(Object)new List[]{Arrays.asList("r1c1","r1c2"),Arrays.asList("r2c1","r2c2")} @AT@ 5621 @LENGTH@ 6


UPD MethodDeclaration@@protected, boolean, MethodName:compare, Object left, Object right, CommandLineException,  @TO@ protected, boolean, MethodName:doCompare, Object left, Object right,  @AT@ 1314 @LENGTH@ 255
---UPD SimpleName@@MethodName:compare @TO@ MethodName:doCompare @AT@ 1332 @LENGTH@ 7
---DEL SimpleType@@CommandLineException @AT@ 1374 @LENGTH@ 20


UPD SuperConstructorInvocation@@super(cluster,TraitsUtil.getTableScanTraitSet(cluster,traitSet,table,rowtype),table);
 @TO@ super(cluster,TraitsUtil.getDefaultTraitSet(cluster),table);
 @AT@ 1270 @LENGTH@ 90
---UPD MethodInvocation@@TraitsUtil.getTableScanTraitSet(cluster,traitSet,table,rowtype) @TO@ TraitsUtil.getDefaultTraitSet(cluster) @AT@ 1285 @LENGTH@ 66
------UPD SimpleName@@MethodName:getTableScanTraitSet:[cluster, traitSet, table, rowtype] @TO@ MethodName:getDefaultTraitSet:[cluster] @AT@ 1296 @LENGTH@ 55
---------DEL SimpleName@@traitSet @AT@ 1326 @LENGTH@ 8
---------DEL SimpleName@@table @AT@ 1336 @LENGTH@ 5
---------DEL SimpleName@@rowtype @AT@ 1343 @LENGTH@ 7


UPD Block@@ThenBody:{  Pair<RexNode,TypeInfo> wtp=genWindowingProj(qb,wExprSpec,srcRel);  projsForWindowSelOp.add(wtp.getFirst());  ColumnInfo oColInfo=new ColumnInfo(getColumnInternalName(projsForWindowSelOp.size()),wtp.getSecond(),null,false);  String colAlias=wExprSpec.getAlias();  if (false) {    out_rwsch.checkColumn(null,wExprSpec.getAlias());    out_rwsch.put(null,wExprSpec.getAlias(),oColInfo);  } else {    out_rwsch.putExpression(wExprSpec.getExpression(),oColInfo);  }} @TO@ ThenBody:{  Pair<RexNode,TypeInfo> wtp=genWindowingProj(qb,wExprSpec,srcRel);  projsForWindowSelOp.add(wtp.getKey());  ColumnInfo oColInfo=new ColumnInfo(getColumnInternalName(projsForWindowSelOp.size()),wtp.getValue(),null,false);  String colAlias=wExprSpec.getAlias();  if (false) {    out_rwsch.checkColumn(null,wExprSpec.getAlias());    out_rwsch.put(null,wExprSpec.getAlias(),oColInfo);  } else {    out_rwsch.putExpression(wExprSpec.getExpression(),oColInfo);  }} @AT@ 528887 @LENGTH@ 690
---UPD ExpressionStatement@@MethodInvocation:projsForWindowSelOp.add(wtp.getFirst()) @TO@ MethodInvocation:projsForWindowSelOp.add(wtp.getKey()) @AT@ 528988 @LENGTH@ 40
------UPD MethodInvocation@@projsForWindowSelOp.add(wtp.getFirst()) @TO@ projsForWindowSelOp.add(wtp.getKey()) @AT@ 528988 @LENGTH@ 39
---------UPD SimpleName@@MethodName:add:[wtp.getFirst()] @TO@ MethodName:add:[wtp.getKey()] @AT@ 529008 @LENGTH@ 19
------------UPD MethodInvocation@@wtp.getFirst() @TO@ wtp.getKey() @AT@ 529012 @LENGTH@ 14
---------------UPD SimpleName@@MethodName:getFirst:[] @TO@ MethodName:getKey:[] @AT@ 529016 @LENGTH@ 10
---UPD VariableDeclarationStatement@@ColumnInfo oColInfo=new ColumnInfo(getColumnInternalName(projsForWindowSelOp.size()),wtp.getSecond(),null,false); @TO@ ColumnInfo oColInfo=new ColumnInfo(getColumnInternalName(projsForWindowSelOp.size()),wtp.getValue(),null,false); @AT@ 529092 @LENGTH@ 137
------UPD VariableDeclarationFragment@@oColInfo=new ColumnInfo(getColumnInternalName(projsForWindowSelOp.size()),wtp.getSecond(),null,false) @TO@ oColInfo=new ColumnInfo(getColumnInternalName(projsForWindowSelOp.size()),wtp.getValue(),null,false) @AT@ 529103 @LENGTH@ 125
---------UPD ClassInstanceCreation@@ColumnInfo[getColumnInternalName(projsForWindowSelOp.size()), wtp.getSecond(), null, false] @TO@ ColumnInfo[getColumnInternalName(projsForWindowSelOp.size()), wtp.getValue(), null, false] @AT@ 529114 @LENGTH@ 114
------------UPD MethodInvocation@@wtp.getSecond() @TO@ wtp.getValue() @AT@ 529199 @LENGTH@ 15
---------------UPD SimpleName@@MethodName:getSecond:[] @TO@ MethodName:getValue:[] @AT@ 529203 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:wout=fs.create(p) @TO@ Assignment:wout=fs.create(p,isOverwrite()) @AT@ 3530 @LENGTH@ 20
---UPD Assignment@@wout=fs.create(p) @TO@ wout=fs.create(p,isOverwrite()) @AT@ 3530 @LENGTH@ 19
------UPD MethodInvocation@@fs.create(p) @TO@ fs.create(p,isOverwrite()) @AT@ 3537 @LENGTH@ 12
---------UPD SimpleName@@MethodName:create:[p] @TO@ MethodName:create:[p, isOverwrite()] @AT@ 3540 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:isOverwrite:[] @TO@ SimpleName@@MethodName:create:[p] @AT@ 3550 @LENGTH@ 13


UPD FieldDeclaration@@private, static, final, Pattern, [NAMESPACE_PATTERN=Pattern.compile("xmlns(:\\w+|)\\s*=\\s*('[^']+'|\"[^\"]+\")")] @TO@ private, static, final, Pattern, [NAMESPACE_PATTERN=Pattern.compile("xmlns(:\\w+|)\\s*=\\s*('[^']*'|\"[^\"]*\")")] @AT@ 4203 @LENGTH@ 111
---UPD VariableDeclarationFragment@@NAMESPACE_PATTERN=Pattern.compile("xmlns(:\\w+|)\\s*=\\s*('[^']+'|\"[^\"]+\")") @TO@ NAMESPACE_PATTERN=Pattern.compile("xmlns(:\\w+|)\\s*=\\s*('[^']*'|\"[^\"]*\")") @AT@ 4232 @LENGTH@ 81
------UPD MethodInvocation@@Pattern.compile("xmlns(:\\w+|)\\s*=\\s*('[^']+'|\"[^\"]+\")") @TO@ Pattern.compile("xmlns(:\\w+|)\\s*=\\s*('[^']*'|\"[^\"]*\")") @AT@ 4252 @LENGTH@ 61
---------UPD SimpleName@@MethodName:compile:["xmlns(:\\w+|)\\s*=\\s*('[^']+'|\"[^\"]+\")"] @TO@ MethodName:compile:["xmlns(:\\w+|)\\s*=\\s*('[^']*'|\"[^\"]*\")"] @AT@ 4260 @LENGTH@ 53
------------UPD StringLiteral@@"xmlns(:\\w+|)\\s*=\\s*('[^']+'|\"[^\"]+\")" @TO@ "xmlns(:\\w+|)\\s*=\\s*('[^']*'|\"[^\"]*\")" @AT@ 4268 @LENGTH@ 44


UPD VariableDeclarationStatement@@DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 3955 @LENGTH@ 97
---UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 3955 @LENGTH@ 17
---UPD VariableDeclarationFragment@@client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 3973 @LENGTH@ 78
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 3982 @LENGTH@ 69
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3969 @LENGTH@ 11
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 3982 @LENGTH@ 43
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 4026 @LENGTH@ 25


UPD VariableDeclarationStatement@@DataAccessException exception=JedisConverters.toDataAccessException(ex); @TO@ DataAccessException exception=EXCEPTION_TRANSLATION.translate(ex); @AT@ 6628 @LENGTH@ 74
---UPD VariableDeclarationFragment@@exception=JedisConverters.toDataAccessException(ex) @TO@ exception=EXCEPTION_TRANSLATION.translate(ex) @AT@ 6648 @LENGTH@ 53
------UPD MethodInvocation@@JedisConverters.toDataAccessException(ex) @TO@ EXCEPTION_TRANSLATION.translate(ex) @AT@ 6660 @LENGTH@ 41
---------UPD SimpleName@@Name:JedisConverters @TO@ Name:EXCEPTION_TRANSLATION @AT@ 6660 @LENGTH@ 15
---------UPD SimpleName@@MethodName:toDataAccessException:[ex] @TO@ MethodName:translate:[ex] @AT@ 6676 @LENGTH@ 25


INS MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @TO@ TypeDeclaration@@[public]Hadoop20Shims, [HadoopShims] @AT@ 20691 @LENGTH@ 460
---INS Modifier@@public @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 20691 @LENGTH@ 6
---INS ParameterizedType@@TreeMap<Long,BlockLocation> @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 20698 @LENGTH@ 28
------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 20698 @LENGTH@ 7
------INS SimpleType@@Long @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 20706 @LENGTH@ 4
------INS SimpleType@@BlockLocation @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 20712 @LENGTH@ 13
---INS SimpleName@@MethodName:getLocationsWithOffset @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 20727 @LENGTH@ 22
---INS SingleVariableDeclaration@@FileSystem fs @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 20750 @LENGTH@ 13
------INS SimpleType@@FileSystem @TO@ SingleVariableDeclaration@@FileSystem fs @AT@ 20750 @LENGTH@ 10
------INS SimpleName@@fs @TO@ SingleVariableDeclaration@@FileSystem fs @AT@ 20761 @LENGTH@ 2
---INS SingleVariableDeclaration@@FileStatus status @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 20826 @LENGTH@ 17
------INS SimpleType@@FileStatus @TO@ SingleVariableDeclaration@@FileStatus status @AT@ 20826 @LENGTH@ 10
------INS SimpleName@@status @TO@ SingleVariableDeclaration@@FileStatus status @AT@ 20837 @LENGTH@ 6
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 20852 @LENGTH@ 11
---INS VariableDeclarationStatement@@TreeMap<Long,BlockLocation> offsetBlockMap=new TreeMap<Long,BlockLocation>(); @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 20870 @LENGTH@ 81
------INS ParameterizedType@@TreeMap<Long,BlockLocation> @TO@ VariableDeclarationStatement@@TreeMap<Long,BlockLocation> offsetBlockMap=new TreeMap<Long,BlockLocation>(); @AT@ 20870 @LENGTH@ 28
---------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 20870 @LENGTH@ 7
---------INS SimpleType@@Long @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 20878 @LENGTH@ 4
---------INS SimpleType@@BlockLocation @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 20884 @LENGTH@ 13
------INS VariableDeclarationFragment@@offsetBlockMap=new TreeMap<Long,BlockLocation>() @TO@ VariableDeclarationStatement@@TreeMap<Long,BlockLocation> offsetBlockMap=new TreeMap<Long,BlockLocation>(); @AT@ 20899 @LENGTH@ 51
---------INS SimpleName@@offsetBlockMap @TO@ VariableDeclarationFragment@@offsetBlockMap=new TreeMap<Long,BlockLocation>() @AT@ 20899 @LENGTH@ 14
---------INS ClassInstanceCreation@@TreeMap<Long,BlockLocation>[] @TO@ VariableDeclarationFragment@@offsetBlockMap=new TreeMap<Long,BlockLocation>() @AT@ 20916 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@TreeMap<Long,BlockLocation>[] @AT@ 20916 @LENGTH@ 3
------------INS ParameterizedType@@TreeMap<Long,BlockLocation> @TO@ ClassInstanceCreation@@TreeMap<Long,BlockLocation>[] @AT@ 20920 @LENGTH@ 28
---------------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 20920 @LENGTH@ 7
---------------INS SimpleType@@Long @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 20928 @LENGTH@ 4
---------------INS SimpleType@@BlockLocation @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 20934 @LENGTH@ 13
---INS VariableDeclarationStatement@@BlockLocation[] locations=getLocations(fs,status); @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 20956 @LENGTH@ 53
------INS ArrayType@@BlockLocation[] @TO@ VariableDeclarationStatement@@BlockLocation[] locations=getLocations(fs,status); @AT@ 20956 @LENGTH@ 15
---------INS SimpleType@@BlockLocation @TO@ ArrayType@@BlockLocation[] @AT@ 20956 @LENGTH@ 13
------INS VariableDeclarationFragment@@locations=getLocations(fs,status) @TO@ VariableDeclarationStatement@@BlockLocation[] locations=getLocations(fs,status); @AT@ 20972 @LENGTH@ 36
---------INS SimpleName@@locations @TO@ VariableDeclarationFragment@@locations=getLocations(fs,status) @AT@ 20972 @LENGTH@ 9
---------INS MethodInvocation@@getLocations(fs,status) @TO@ VariableDeclarationFragment@@locations=getLocations(fs,status) @AT@ 20984 @LENGTH@ 24
------------INS SimpleName@@MethodName:getLocations:[fs, status] @TO@ MethodInvocation@@getLocations(fs,status) @AT@ 20984 @LENGTH@ 24
---------------INS SimpleName@@fs @TO@ SimpleName@@MethodName:getLocations:[fs, status] @AT@ 20997 @LENGTH@ 2
---------------INS SimpleName@@status @TO@ SimpleName@@MethodName:getLocations:[fs, status] @AT@ 21001 @LENGTH@ 6
---INS EnhancedForStatement@@for (BlockLocation location : locations) {  offsetBlockMap.put(location.getOffset(),location);} @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 21014 @LENGTH@ 106
------INS SingleVariableDeclaration@@BlockLocation location @TO@ EnhancedForStatement@@for (BlockLocation location : locations) {  offsetBlockMap.put(location.getOffset(),location);} @AT@ 21019 @LENGTH@ 22
---------INS SimpleType@@BlockLocation @TO@ SingleVariableDeclaration@@BlockLocation location @AT@ 21019 @LENGTH@ 13
---------INS SimpleName@@location @TO@ SingleVariableDeclaration@@BlockLocation location @AT@ 21033 @LENGTH@ 8
------INS SimpleName@@locations @TO@ EnhancedForStatement@@for (BlockLocation location : locations) {  offsetBlockMap.put(location.getOffset(),location);} @AT@ 21044 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:offsetBlockMap.put(location.getOffset(),location) @TO@ EnhancedForStatement@@for (BlockLocation location : locations) {  offsetBlockMap.put(location.getOffset(),location);} @AT@ 21063 @LENGTH@ 51
---------INS MethodInvocation@@offsetBlockMap.put(location.getOffset(),location) @TO@ ExpressionStatement@@MethodInvocation:offsetBlockMap.put(location.getOffset(),location) @AT@ 21063 @LENGTH@ 50
------------INS SimpleName@@Name:offsetBlockMap @TO@ MethodInvocation@@offsetBlockMap.put(location.getOffset(),location) @AT@ 21063 @LENGTH@ 14
------------INS SimpleName@@MethodName:put:[location.getOffset(), location] @TO@ MethodInvocation@@offsetBlockMap.put(location.getOffset(),location) @AT@ 21078 @LENGTH@ 35
---------------INS MethodInvocation@@location.getOffset() @TO@ SimpleName@@MethodName:put:[location.getOffset(), location] @AT@ 21082 @LENGTH@ 20
------------------INS SimpleName@@Name:location @TO@ MethodInvocation@@location.getOffset() @AT@ 21082 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getOffset:[] @TO@ MethodInvocation@@location.getOffset() @AT@ 21091 @LENGTH@ 11
---------------INS SimpleName@@location @TO@ SimpleName@@MethodName:put:[location.getOffset(), location] @AT@ 21104 @LENGTH@ 8
---INS ReturnStatement@@SimpleName:offsetBlockMap @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 21125 @LENGTH@ 22
------INS SimpleName@@offsetBlockMap @TO@ ReturnStatement@@SimpleName:offsetBlockMap @AT@ 21132 @LENGTH@ 14


UPD TypeDeclaration@@[public]InfinispanConfiguration,  @TO@ [@UriParams, public]InfinispanConfiguration,  @AT@ 982 @LENGTH@ 1344
---INS MarkerAnnotation@@@UriParams @TO@ TypeDeclaration@@[public]InfinispanConfiguration,  @AT@ 1059 @LENGTH@ 10


UPD MethodDeclaration@@public, static, Message, MethodName:createMessage, Exchange exchange, Session session, KeyFormatStrategy keyFormatStrategy, Exception,  @TO@ public, static, Message, MethodName:createMessage, Exchange exchange, Session session, KeyFormatStrategy keyFormatStrategy, TypeConverter typeConverter, Exception,  @AT@ 17653 @LENGTH@ 709
---INS SingleVariableDeclaration@@TypeConverter typeConverter @TO@ MethodDeclaration@@public, static, Message, MethodName:createMessage, Exchange exchange, Session session, KeyFormatStrategy keyFormatStrategy, Exception,  @AT@ 17801 @LENGTH@ 27
------INS SimpleType@@TypeConverter @TO@ SingleVariableDeclaration@@TypeConverter typeConverter @AT@ 17801 @LENGTH@ 13
------INS SimpleName@@typeConverter @TO@ SingleVariableDeclaration@@TypeConverter typeConverter @AT@ 17815 @LENGTH@ 13
---UPD ExpressionStatement@@Assignment:answer=JmsMessageHelper.createMessage(session,body,bodyHeaders,keyFormatStrategy) @TO@ Assignment:answer=JmsMessageHelper.createMessage(session,body,bodyHeaders,keyFormatStrategy,typeConverter) @AT@ 18245 @LENGTH@ 87
------UPD Assignment@@answer=JmsMessageHelper.createMessage(session,body,bodyHeaders,keyFormatStrategy) @TO@ answer=JmsMessageHelper.createMessage(session,body,bodyHeaders,keyFormatStrategy,typeConverter) @AT@ 18245 @LENGTH@ 86
---------UPD MethodInvocation@@JmsMessageHelper.createMessage(session,body,bodyHeaders,keyFormatStrategy) @TO@ JmsMessageHelper.createMessage(session,body,bodyHeaders,keyFormatStrategy,typeConverter) @AT@ 18254 @LENGTH@ 77
------------UPD SimpleName@@MethodName:createMessage:[session, body, bodyHeaders, keyFormatStrategy] @TO@ MethodName:createMessage:[session, body, bodyHeaders, keyFormatStrategy, typeConverter] @AT@ 18271 @LENGTH@ 60
---------------INS SimpleName@@typeConverter @TO@ SimpleName@@MethodName:createMessage:[session, body, bodyHeaders, keyFormatStrategy] @AT@ 18400 @LENGTH@ 13


UPD MethodDeclaration@@protected, boolean, MethodName:compare, Object left, Object right, CommandLineException,  @TO@ protected, boolean, MethodName:doCompare, Object left, Object right,  @AT@ 1309 @LENGTH@ 254
---UPD SimpleName@@MethodName:compare @TO@ MethodName:doCompare @AT@ 1327 @LENGTH@ 7
---DEL SimpleType@@CommandLineException @AT@ 1369 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:assertEquals("123|Camel in Action|1",lines[0]) @TO@ MethodInvocation:assertEquals("123|Camel in Action|1",lines[0].trim()) @AT@ 1778 @LENGTH@ 48
---UPD MethodInvocation@@assertEquals("123|Camel in Action|1",lines[0]) @TO@ assertEquals("123|Camel in Action|1",lines[0].trim()) @AT@ 1778 @LENGTH@ 47
------UPD SimpleName@@MethodName:assertEquals:["123|Camel in Action|1", lines[0]] @TO@ MethodName:assertEquals:["123|Camel in Action|1", lines[0].trim()] @AT@ 1778 @LENGTH@ 47
---------INS MethodInvocation@@lines[0].trim() @TO@ SimpleName@@MethodName:assertEquals:["123|Camel in Action|1", lines[0]] @AT@ 1816 @LENGTH@ 15
------------INS ArrayAccess@@lines[0] @TO@ MethodInvocation@@lines[0].trim() @AT@ 1816 @LENGTH@ 8
---------------MOV SimpleName@@lines @TO@ ArrayAccess@@lines[0] @AT@ 1816 @LENGTH@ 5
---------------MOV NumberLiteral@@0 @TO@ ArrayAccess@@lines[0] @AT@ 1822 @LENGTH@ 1
------------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@lines[0].trim() @AT@ 1825 @LENGTH@ 6
---------DEL ArrayAccess@@lines[0] @AT@ 1816 @LENGTH@ 8


DEL IfStatement@@if (((ModelNode)left).getType() != ((ModelNode)right).getType()) {  return false;} @AT@ 2366 @LENGTH@ 102
---DEL InfixExpression@@((ModelNode)left).getType() != ((ModelNode)right).getType() @AT@ 2369 @LENGTH@ 60
------DEL MethodInvocation@@((ModelNode)left).getType() @AT@ 2369 @LENGTH@ 28
---------DEL ParenthesizedExpression@@((ModelNode)left) @AT@ 2369 @LENGTH@ 18
------------DEL CastExpression@@(ModelNode)left @AT@ 2370 @LENGTH@ 16
---------------DEL SimpleType@@ModelNode @AT@ 2371 @LENGTH@ 9
---------------DEL SimpleName@@left @AT@ 2382 @LENGTH@ 4
---------DEL SimpleName@@MethodName:getType:[] @AT@ 2388 @LENGTH@ 9
------DEL Operator@@!= @AT@ 2397 @LENGTH@ 2
------DEL MethodInvocation@@((ModelNode)right).getType() @AT@ 2401 @LENGTH@ 28
---------DEL ParenthesizedExpression@@((ModelNode)right) @AT@ 2401 @LENGTH@ 18
------------DEL CastExpression@@(ModelNode)right @AT@ 2402 @LENGTH@ 16
---------------DEL SimpleType@@ModelNode @AT@ 2403 @LENGTH@ 9
---------------DEL SimpleName@@right @AT@ 2413 @LENGTH@ 5
---------DEL SimpleName@@MethodName:getType:[] @AT@ 2420 @LENGTH@ 9
---DEL Block@@ThenBody:{  return false;} @AT@ 2431 @LENGTH@ 37
------DEL ReturnStatement@@BooleanLiteral:false @AT@ 2445 @LENGTH@ 13
---------DEL BooleanLiteral@@false @AT@ 2452 @LENGTH@ 5


UPD IfStatement@@if (remaining != null && remaining.startsWith("language:")) {  String lan=remaining.substring(9);  if (lan != null) {    answer.setLanguage(getCamelContext().resolveLanguage(lan));  } else {    throw new IllegalArgumentException("Language must be configured in endpoint uri: " + uri);  }} @TO@ if (remaining != null && remaining.startsWith("language:")) {  String lan=remaining.substring(9);  answer.setLanguage(getCamelContext().resolveLanguage(lan));} @AT@ 1552 @LENGTH@ 369
---DEL Block@@ThenBody:{  String lan=remaining.substring(9);  if (lan != null) {    answer.setLanguage(getCamelContext().resolveLanguage(lan));  } else {    throw new IllegalArgumentException("Language must be configured in endpoint uri: " + uri);  }} @AT@ 1612 @LENGTH@ 309
------DEL IfStatement@@if (lan != null) {  answer.setLanguage(getCamelContext().resolveLanguage(lan));} else {  throw new IllegalArgumentException("Language must be configured in endpoint uri: " + uri);} @AT@ 1675 @LENGTH@ 236
---------DEL InfixExpression@@lan != null @AT@ 1679 @LENGTH@ 11
------------DEL SimpleName@@lan @AT@ 1679 @LENGTH@ 3
------------DEL Operator@@!= @AT@ 1682 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 1686 @LENGTH@ 4
---------DEL Block@@ElseBody:{  throw new IllegalArgumentException("Language must be configured in endpoint uri: " + uri);} @AT@ 1789 @LENGTH@ 122
------------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Language must be configured in endpoint uri: " + uri) @AT@ 1807 @LENGTH@ 90
---------------DEL ClassInstanceCreation@@IllegalArgumentException["Language must be configured in endpoint uri: " + uri] @AT@ 1813 @LENGTH@ 83
------------------DEL New@@new @AT@ 1813 @LENGTH@ 3
------------------DEL SimpleType@@IllegalArgumentException @AT@ 1817 @LENGTH@ 24
------------------DEL InfixExpression@@"Language must be configured in endpoint uri: " + uri @AT@ 1842 @LENGTH@ 53
---------------------DEL StringLiteral@@"Language must be configured in endpoint uri: " @AT@ 1842 @LENGTH@ 47
---------------------DEL Operator@@+ @AT@ 1889 @LENGTH@ 1
---------------------DEL SimpleName@@uri @AT@ 1892 @LENGTH@ 3
---MOV Block@@ThenBody:{  answer.setLanguage(getCamelContext().resolveLanguage(lan));} @TO@ IfStatement@@if (remaining != null && remaining.startsWith("language:")) {  String lan=remaining.substring(9);  if (lan != null) {    answer.setLanguage(getCamelContext().resolveLanguage(lan));  } else {    throw new IllegalArgumentException("Language must be configured in endpoint uri: " + uri);  }} @AT@ 1692 @LENGTH@ 91
------MOV VariableDeclarationStatement@@String lan=remaining.substring(9); @TO@ Block@@ThenBody:{  answer.setLanguage(getCamelContext().resolveLanguage(lan));} @AT@ 1626 @LENGTH@ 36


UPD FieldDeclaration@@private, long, [latestPullRequestId=0] @TO@ private, long, [latestPullRequestId] @AT@ 1465 @LENGTH@ 37
---UPD VariableDeclarationFragment@@latestPullRequestId=0 @TO@ latestPullRequestId @AT@ 1478 @LENGTH@ 23
------DEL NumberLiteral@@0 @AT@ 1500 @LENGTH@ 1


UPD IfStatement@@if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  if (producer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 7679 @LENGTH@ 284
---UPD Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  if (producer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 7703 @LENGTH@ 260
------INS IfStatement@@if (producer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @TO@ Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(true);  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @AT@ 7821 @LENGTH@ 276
---------INS InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @TO@ IfStatement@@if (producer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7825 @LENGTH@ 61
------------INS MethodInvocation@@producer.getConfiguration().getSslContextParameters() @TO@ InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @AT@ 7825 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@producer.getConfiguration().getSslContextParameters() @AT@ 7825 @LENGTH@ 27
---------------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.getConfiguration().getSslContextParameters() @AT@ 7825 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getSslContextParameters:[] @TO@ MethodInvocation@@producer.getConfiguration().getSslContextParameters() @AT@ 7853 @LENGTH@ 25
------------INS Operator@@== @TO@ InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @AT@ 7878 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@producer.getConfiguration().getSslContextParameters() == null @AT@ 7882 @LENGTH@ 4
---------INS Block@@ThenBody:{  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @TO@ IfStatement@@if (producer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7888 @LENGTH@ 209
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7821 @LENGTH@ 89
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(producer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7821 @LENGTH@ 89


INS MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @TO@ TypeDeclaration@@[public]GeoPage, PageImpl<GeoResult<T>> @AT@ 2190 @LENGTH@ 279
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 2190 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 2197 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 2205 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object obj @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 2212 @LENGTH@ 10
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object obj @AT@ 2212 @LENGTH@ 6
------INS SimpleName@@obj @TO@ SingleVariableDeclaration@@Object obj @AT@ 2219 @LENGTH@ 3
---INS IfStatement@@if (this == obj) {  return true;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 2229 @LENGTH@ 38
------INS InfixExpression@@this == obj @TO@ IfStatement@@if (this == obj) {  return true;} @AT@ 2233 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ InfixExpression@@this == obj @AT@ 2233 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@this == obj @AT@ 2237 @LENGTH@ 2
---------INS SimpleName@@obj @TO@ InfixExpression@@this == obj @AT@ 2241 @LENGTH@ 3
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (this == obj) {  return true;} @AT@ 2246 @LENGTH@ 21
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 2251 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2258 @LENGTH@ 4
---INS IfStatement@@if (!(obj instanceof GeoPage)) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 2271 @LENGTH@ 53
------INS PrefixExpression@@!(obj instanceof GeoPage) @TO@ IfStatement@@if (!(obj instanceof GeoPage)) {  return false;} @AT@ 2275 @LENGTH@ 25
---------INS Operator@@! @TO@ PrefixExpression@@!(obj instanceof GeoPage) @AT@ 2275 @LENGTH@ 1
---------INS ParenthesizedExpression@@(obj instanceof GeoPage) @TO@ PrefixExpression@@!(obj instanceof GeoPage) @AT@ 2276 @LENGTH@ 24
------------INS InstanceofExpression@@obj instanceof GeoPage @TO@ ParenthesizedExpression@@(obj instanceof GeoPage) @AT@ 2277 @LENGTH@ 22
---------------INS SimpleName@@obj @TO@ InstanceofExpression@@obj instanceof GeoPage @AT@ 2277 @LENGTH@ 3
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@obj instanceof GeoPage @AT@ 2281 @LENGTH@ 10
---------------INS SimpleType@@GeoPage @TO@ InstanceofExpression@@obj instanceof GeoPage @AT@ 2292 @LENGTH@ 7
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (!(obj instanceof GeoPage)) {  return false;} @AT@ 2302 @LENGTH@ 22
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 2307 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2314 @LENGTH@ 5
---INS VariableDeclarationStatement@@GeoPage<?> that=(GeoPage<?>)obj; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 2328 @LENGTH@ 35
------INS ParameterizedType@@GeoPage<?> @TO@ VariableDeclarationStatement@@GeoPage<?> that=(GeoPage<?>)obj; @AT@ 2328 @LENGTH@ 10
---------INS SimpleType@@GeoPage @TO@ ParameterizedType@@GeoPage<?> @AT@ 2328 @LENGTH@ 7
---------INS WildcardType@@? @TO@ ParameterizedType@@GeoPage<?> @AT@ 2336 @LENGTH@ 1
------INS VariableDeclarationFragment@@that=(GeoPage<?>)obj @TO@ VariableDeclarationStatement@@GeoPage<?> that=(GeoPage<?>)obj; @AT@ 2339 @LENGTH@ 23
---------INS SimpleName@@that @TO@ VariableDeclarationFragment@@that=(GeoPage<?>)obj @AT@ 2339 @LENGTH@ 4
---------INS CastExpression@@(GeoPage<?>)obj @TO@ VariableDeclarationFragment@@that=(GeoPage<?>)obj @AT@ 2346 @LENGTH@ 16
------------INS ParameterizedType@@GeoPage<?> @TO@ CastExpression@@(GeoPage<?>)obj @AT@ 2347 @LENGTH@ 10
---------------INS SimpleType@@GeoPage @TO@ ParameterizedType@@GeoPage<?> @AT@ 2347 @LENGTH@ 7
---------------INS WildcardType@@? @TO@ ParameterizedType@@GeoPage<?> @AT@ 2355 @LENGTH@ 1
------------INS SimpleName@@obj @TO@ CastExpression@@(GeoPage<?>)obj @AT@ 2359 @LENGTH@ 3
---INS ReturnStatement@@InfixExpression:super.equals(obj) && ObjectUtils.nullSafeEquals(this.averageDistance,that.averageDistance) @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 2367 @LENGTH@ 99
------INS InfixExpression@@super.equals(obj) && ObjectUtils.nullSafeEquals(this.averageDistance,that.averageDistance) @TO@ ReturnStatement@@InfixExpression:super.equals(obj) && ObjectUtils.nullSafeEquals(this.averageDistance,that.averageDistance) @AT@ 2374 @LENGTH@ 91
---------INS SuperMethodInvocation@@super.equals(obj) @TO@ InfixExpression@@super.equals(obj) && ObjectUtils.nullSafeEquals(this.averageDistance,that.averageDistance) @AT@ 2374 @LENGTH@ 17
------------INS SimpleName@@MethodName:equals:[obj] @TO@ SuperMethodInvocation@@super.equals(obj) @AT@ 2380 @LENGTH@ 6
------------INS SimpleName@@obj @TO@ SuperMethodInvocation@@super.equals(obj) @AT@ 2387 @LENGTH@ 3
---------INS Operator@@&& @TO@ InfixExpression@@super.equals(obj) && ObjectUtils.nullSafeEquals(this.averageDistance,that.averageDistance) @AT@ 2391 @LENGTH@ 2
---------INS MethodInvocation@@ObjectUtils.nullSafeEquals(this.averageDistance,that.averageDistance) @TO@ InfixExpression@@super.equals(obj) && ObjectUtils.nullSafeEquals(this.averageDistance,that.averageDistance) @AT@ 2395 @LENGTH@ 70
------------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(this.averageDistance,that.averageDistance) @AT@ 2395 @LENGTH@ 11
------------INS SimpleName@@MethodName:nullSafeEquals:[this.averageDistance, that.averageDistance] @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(this.averageDistance,that.averageDistance) @AT@ 2407 @LENGTH@ 58
---------------INS FieldAccess@@this.averageDistance @TO@ SimpleName@@MethodName:nullSafeEquals:[this.averageDistance, that.averageDistance] @AT@ 2422 @LENGTH@ 20
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.averageDistance @AT@ 2422 @LENGTH@ 4
------------------INS SimpleName@@averageDistance @TO@ FieldAccess@@this.averageDistance @AT@ 2427 @LENGTH@ 15
---------------INS QualifiedName@@that.averageDistance @TO@ SimpleName@@MethodName:nullSafeEquals:[this.averageDistance, that.averageDistance] @AT@ 2444 @LENGTH@ 20
------------------INS SimpleName@@that @TO@ QualifiedName@@that.averageDistance @AT@ 2444 @LENGTH@ 4
------------------INS SimpleName@@averageDistance @TO@ QualifiedName@@that.averageDistance @AT@ 2449 @LENGTH@ 15


UPD ExpressionStatement@@Assignment:castExpr=m_cluster.getRexBuilder().makeCast(TypeConverter.convert(func.getTypeInfo(),m_cluster.getTypeFactory()),childRexNodeLst.get(0)) @TO@ Assignment:castExpr=m_cluster.getRexBuilder().makeAbstractCast(TypeConverter.convert(func.getTypeInfo(),m_cluster.getTypeFactory()),childRexNodeLst.get(0)) @AT@ 9085 @LENGTH@ 166
---UPD Assignment@@castExpr=m_cluster.getRexBuilder().makeCast(TypeConverter.convert(func.getTypeInfo(),m_cluster.getTypeFactory()),childRexNodeLst.get(0)) @TO@ castExpr=m_cluster.getRexBuilder().makeAbstractCast(TypeConverter.convert(func.getTypeInfo(),m_cluster.getTypeFactory()),childRexNodeLst.get(0)) @AT@ 9085 @LENGTH@ 165
------UPD MethodInvocation@@m_cluster.getRexBuilder().makeCast(TypeConverter.convert(func.getTypeInfo(),m_cluster.getTypeFactory()),childRexNodeLst.get(0)) @TO@ m_cluster.getRexBuilder().makeAbstractCast(TypeConverter.convert(func.getTypeInfo(),m_cluster.getTypeFactory()),childRexNodeLst.get(0)) @AT@ 9096 @LENGTH@ 154
---------UPD SimpleName@@MethodName:makeCast:[TypeConverter.convert(func.getTypeInfo(),m_cluster.getTypeFactory()), childRexNodeLst.get(0)] @TO@ MethodName:makeAbstractCast:[TypeConverter.convert(func.getTypeInfo(),m_cluster.getTypeFactory()), childRexNodeLst.get(0)] @AT@ 9122 @LENGTH@ 128


INS FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(EndpointSubscription.class)] @TO@ TypeDeclaration@@[public]EndpointSubscription, [Subscription] @AT@ 1337 @LENGTH@ 86
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(EndpointSubscription.class)] @AT@ 1337 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(EndpointSubscription.class)] @AT@ 1345 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(EndpointSubscription.class)] @AT@ 1352 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(EndpointSubscription.class)] @AT@ 1358 @LENGTH@ 6
---INS VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(EndpointSubscription.class) @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(EndpointSubscription.class)] @AT@ 1365 @LENGTH@ 57
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(EndpointSubscription.class) @AT@ 1365 @LENGTH@ 3
------INS MethodInvocation@@LoggerFactory.getLogger(EndpointSubscription.class) @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(EndpointSubscription.class) @AT@ 1371 @LENGTH@ 51
---------INS SimpleName@@Name:LoggerFactory @TO@ MethodInvocation@@LoggerFactory.getLogger(EndpointSubscription.class) @AT@ 1371 @LENGTH@ 13
---------INS SimpleName@@MethodName:getLogger:[EndpointSubscription.class] @TO@ MethodInvocation@@LoggerFactory.getLogger(EndpointSubscription.class) @AT@ 1385 @LENGTH@ 37
------------INS TypeLiteral@@EndpointSubscription.class @TO@ SimpleName@@MethodName:getLogger:[EndpointSubscription.class] @AT@ 1395 @LENGTH@ 26


UPD VariableDeclarationStatement@@Set<Class<?>> types=new HashSet<Class<?>>(4); @TO@ Set<Class<?>> types=new HashSet<Class<?>>(); @AT@ 2147 @LENGTH@ 47
---UPD VariableDeclarationFragment@@types=new HashSet<Class<?>>(4) @TO@ types=new HashSet<Class<?>>() @AT@ 2161 @LENGTH@ 32
------UPD ClassInstanceCreation@@HashSet<Class<?>>[4] @TO@ HashSet<Class<?>>[] @AT@ 2169 @LENGTH@ 24
---------DEL NumberLiteral@@4 @AT@ 2191 @LENGTH@ 1


UPD TypeDeclaration@@[public]LesserThanOperation, ComparisonOperation @TO@ [public]LesserThanOperation, SameTypeOperation @AT@ 1154 @LENGTH@ 409
---UPD SimpleType@@ComparisonOperation @TO@ SameTypeOperation @AT@ 1195 @LENGTH@ 19


UPD VariableDeclarationStatement@@OAuth2AccessToken expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken"); @TO@ DefaultOAuth2AccessToken expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken"); @AT@ 4080 @LENGTH@ 88
---UPD SimpleType@@OAuth2AccessToken @TO@ DefaultOAuth2AccessToken @AT@ 4080 @LENGTH@ 17


UPD VariableDeclarationStatement@@Message response=SjmsExchangeMessageHelper.createMessage(exchange,getSession(),((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy()); @TO@ Message response=SjmsExchangeMessageHelper.createMessage(exchange,getSession(),((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy(),((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter()); @AT@ 6378 @LENGTH@ 141
---UPD VariableDeclarationFragment@@response=SjmsExchangeMessageHelper.createMessage(exchange,getSession(),((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy()) @TO@ response=SjmsExchangeMessageHelper.createMessage(exchange,getSession(),((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy(),((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter()) @AT@ 6386 @LENGTH@ 132
------UPD MethodInvocation@@SjmsExchangeMessageHelper.createMessage(exchange,getSession(),((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy()) @TO@ SjmsExchangeMessageHelper.createMessage(exchange,getSession(),((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy(),((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter()) @AT@ 6397 @LENGTH@ 121
---------UPD SimpleName@@MethodName:createMessage:[exchange, getSession(), ((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy()] @TO@ MethodName:createMessage:[exchange, getSession(), ((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy(), ((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter()] @AT@ 6423 @LENGTH@ 95
------------INS MethodInvocation@@((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter() @TO@ SimpleName@@MethodName:createMessage:[exchange, getSession(), ((SjmsEndpoint)getEndpoint()).getJmsKeyFormatStrategy()] @AT@ 6519 @LENGTH@ 67
---------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter() @AT@ 6519 @LENGTH@ 48
---------------INS ParenthesizedExpression@@((SjmsEndpoint)getEndpoint()) @TO@ MethodInvocation@@((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter() @AT@ 6519 @LENGTH@ 30
------------------INS CastExpression@@(SjmsEndpoint)getEndpoint() @TO@ ParenthesizedExpression@@((SjmsEndpoint)getEndpoint()) @AT@ 6520 @LENGTH@ 28
---------------------INS SimpleType@@SjmsEndpoint @TO@ CastExpression@@(SjmsEndpoint)getEndpoint() @AT@ 6521 @LENGTH@ 12
---------------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ CastExpression@@(SjmsEndpoint)getEndpoint() @AT@ 6535 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@((SjmsEndpoint)getEndpoint()).getCamelContext().getTypeConverter() @AT@ 6568 @LENGTH@ 18


UPD MethodDeclaration@@public, static, Message, MethodName:createMessage, Session session, Object payload, Map<String,Object> messageHeaders, KeyFormatStrategy keyFormatStrategy, Exception,  @TO@ public, static, Message, MethodName:createMessage, Session session, Object payload, Map<String,Object> messageHeaders, KeyFormatStrategy keyFormatStrategy, TypeConverter typeConverter, Exception,  @AT@ 2903 @LENGTH@ 2452
---INS SingleVariableDeclaration@@TypeConverter typeConverter @TO@ MethodDeclaration@@public, static, Message, MethodName:createMessage, Session session, Object payload, Map<String,Object> messageHeaders, KeyFormatStrategy keyFormatStrategy, Exception,  @AT@ 3087 @LENGTH@ 27
------INS SimpleType@@TypeConverter @TO@ SingleVariableDeclaration@@TypeConverter typeConverter @AT@ 3087 @LENGTH@ 13
------INS SimpleName@@typeConverter @TO@ SingleVariableDeclaration@@TypeConverter typeConverter @AT@ 3101 @LENGTH@ 13
---UPD VariableDeclarationStatement@@JmsMessageType messageType=JmsMessageHelper.discoverMessgeTypeFromPayload(payload); @TO@ JmsMessageType messageType=JmsMessageHelper.discoverMessageTypeFromPayload(payload); @AT@ 3103 @LENGTH@ 85
------UPD VariableDeclarationFragment@@messageType=JmsMessageHelper.discoverMessgeTypeFromPayload(payload) @TO@ messageType=JmsMessageHelper.discoverMessageTypeFromPayload(payload) @AT@ 3118 @LENGTH@ 69
---------UPD MethodInvocation@@JmsMessageHelper.discoverMessgeTypeFromPayload(payload) @TO@ JmsMessageHelper.discoverMessageTypeFromPayload(payload) @AT@ 3132 @LENGTH@ 55
------------UPD SimpleName@@MethodName:discoverMessgeTypeFromPayload:[payload] @TO@ MethodName:discoverMessageTypeFromPayload:[payload] @AT@ 3149 @LENGTH@ 38
---UPD TryStatement@@try {switch (messageType) {case Bytes:    BytesMessage bytesMessage=session.createBytesMessage();  bytesMessage.writeBytes((byte[])payload);answer=bytesMessage;break;case Map:MapMessage mapMessage=session.createMapMessage();Map<String,Object> objMap=(Map<String,Object>)payload;Set<String> keys=objMap.keySet();for (String key : keys) {Object value=objMap.get(key);mapMessage.setObject(key,value);}answer=mapMessage;break;case Object:ObjectMessage objectMessage=session.createObjectMessage();objectMessage.setObject((Serializable)payload);answer=objectMessage;break;case Text:TextMessage textMessage=session.createTextMessage();textMessage.setText((String)payload);answer=textMessage;break;case Stream:ByteArrayOutputStream baos=new ByteArrayOutputStream();InputStream is=(InputStream)payload;int reads=is.read();while (reads != -1) {baos.write(reads);reads=is.read();}BytesMessage bytesStreamMessage=session.createBytesMessage();bytesStreamMessage.writeBytes(baos.toByteArray());baos.close();is.close();answer=bytesStreamMessage;break;default :break;}} catch (Exception e) {LOGGER.error("Error creating a message of type: {}",messageType,e);throw e;} @TO@ try {switch (messageType) {case Bytes:    BytesMessage bytesMessage=session.createBytesMessage();  bytesMessage=typeConverter.convertTo(BytesMessage.class,payload);answer=bytesMessage;break;case Map:MapMessage mapMessage=session.createMapMessage();Map<String,Object> objMap=(Map<String,Object>)payload;Set<String> keys=objMap.keySet();for (String key : keys) {Object value=objMap.get(key);mapMessage.setObject(key,value);}answer=mapMessage;break;case Object:ObjectMessage objectMessage=session.createObjectMessage();objectMessage.setObject((Serializable)payload);answer=objectMessage;break;case Text:TextMessage textMessage=session.createTextMessage();textMessage.setText((String)payload);answer=textMessage;break;case Stream:ByteArrayOutputStream baos=new ByteArrayOutputStream();InputStream is=typeConverter.convertTo(InputStream.class,payload);int reads=is.read();while (reads != -1) {baos.write(reads);reads=is.read();}BytesMessage bytesStreamMessage=session.createBytesMessage();bytesStreamMessage.writeBytes(baos.toByteArray());baos.close();is.close();answer=bytesStreamMessage;break;default :break;}} catch (Exception e) {LOGGER.error("Error creating a message of type: {}",messageType,e);throw e;} @AT@ 3197 @LENGTH@ 1949
------UPD SwitchStatement@@switch (messageType) {case Bytes:  BytesMessage bytesMessage=session.createBytesMessage();bytesMessage.writeBytes((byte[])payload);answer=bytesMessage;break;case Map:MapMessage mapMessage=session.createMapMessage();Map<String,Object> objMap=(Map<String,Object>)payload;Set<String> keys=objMap.keySet();for (String key : keys) {Object value=objMap.get(key);mapMessage.setObject(key,value);}answer=mapMessage;break;case Object:ObjectMessage objectMessage=session.createObjectMessage();objectMessage.setObject((Serializable)payload);answer=objectMessage;break;case Text:TextMessage textMessage=session.createTextMessage();textMessage.setText((String)payload);answer=textMessage;break;case Stream:ByteArrayOutputStream baos=new ByteArrayOutputStream();InputStream is=(InputStream)payload;int reads=is.read();while (reads != -1) {baos.write(reads);reads=is.read();}BytesMessage bytesStreamMessage=session.createBytesMessage();bytesStreamMessage.writeBytes(baos.toByteArray());baos.close();is.close();answer=bytesStreamMessage;break;default :break;} @TO@ switch (messageType) {case Bytes:  BytesMessage bytesMessage=session.createBytesMessage();bytesMessage=typeConverter.convertTo(BytesMessage.class,payload);answer=bytesMessage;break;case Map:MapMessage mapMessage=session.createMapMessage();Map<String,Object> objMap=(Map<String,Object>)payload;Set<String> keys=objMap.keySet();for (String key : keys) {Object value=objMap.get(key);mapMessage.setObject(key,value);}answer=mapMessage;break;case Object:ObjectMessage objectMessage=session.createObjectMessage();objectMessage.setObject((Serializable)payload);answer=objectMessage;break;case Text:TextMessage textMessage=session.createTextMessage();textMessage.setText((String)payload);answer=textMessage;break;case Stream:ByteArrayOutputStream baos=new ByteArrayOutputStream();InputStream is=typeConverter.convertTo(InputStream.class,payload);int reads=is.read();while (reads != -1) {baos.write(reads);reads=is.read();}BytesMessage bytesStreamMessage=session.createBytesMessage();bytesStreamMessage.writeBytes(baos.toByteArray());baos.close();is.close();answer=bytesStreamMessage;break;default :break;} @AT@ 3216 @LENGTH@ 1785
---------UPD ExpressionStatement@@MethodInvocation:bytesMessage.writeBytes((byte[])payload) @TO@ Assignment:bytesMessage=typeConverter.convertTo(BytesMessage.class,payload) @AT@ 3353 @LENGTH@ 42
------------DEL MethodInvocation@@bytesMessage.writeBytes((byte[])payload) @AT@ 3353 @LENGTH@ 41
------------INS Assignment@@bytesMessage=typeConverter.convertTo(BytesMessage.class,payload) @TO@ ExpressionStatement@@MethodInvocation:bytesMessage.writeBytes((byte[])payload) @AT@ 3422 @LENGTH@ 67
---------------INS SimpleName@@bytesMessage @TO@ Assignment@@bytesMessage=typeConverter.convertTo(BytesMessage.class,payload) @AT@ 3422 @LENGTH@ 12
---------------INS Operator@@= @TO@ Assignment@@bytesMessage=typeConverter.convertTo(BytesMessage.class,payload) @AT@ 3434 @LENGTH@ 1
---------------INS MethodInvocation@@typeConverter.convertTo(BytesMessage.class,payload) @TO@ Assignment@@bytesMessage=typeConverter.convertTo(BytesMessage.class,payload) @AT@ 3437 @LENGTH@ 52
------------------MOV SimpleName@@Name:bytesMessage @TO@ MethodInvocation@@typeConverter.convertTo(BytesMessage.class,payload) @AT@ 3353 @LENGTH@ 12
------------------MOV SimpleName@@MethodName:writeBytes:[(byte[])payload] @TO@ MethodInvocation@@typeConverter.convertTo(BytesMessage.class,payload) @AT@ 3366 @LENGTH@ 28
---------------------DEL CastExpression@@(byte[])payload @AT@ 3377 @LENGTH@ 16
------------------------DEL ArrayType@@byte[] @AT@ 3378 @LENGTH@ 6
---------------------------DEL PrimitiveType@@byte @AT@ 3378 @LENGTH@ 4
------------------------DEL SimpleName@@payload @AT@ 3386 @LENGTH@ 7
---------------------INS TypeLiteral@@BytesMessage.class @TO@ SimpleName@@MethodName:writeBytes:[(byte[])payload] @AT@ 3461 @LENGTH@ 18
---------------------INS SimpleName@@payload @TO@ SimpleName@@MethodName:writeBytes:[(byte[])payload] @AT@ 3481 @LENGTH@ 7
---------UPD VariableDeclarationStatement@@InputStream is=(InputStream)payload; @TO@ InputStream is=typeConverter.convertTo(InputStream.class,payload); @AT@ 4457 @LENGTH@ 39
------------UPD VariableDeclarationFragment@@is=(InputStream)payload @TO@ is=typeConverter.convertTo(InputStream.class,payload) @AT@ 4469 @LENGTH@ 26
---------------DEL CastExpression@@(InputStream)payload @AT@ 4474 @LENGTH@ 21
------------------DEL SimpleType@@InputStream @AT@ 4475 @LENGTH@ 11
------------------DEL SimpleName@@payload @AT@ 4488 @LENGTH@ 7
---------------INS MethodInvocation@@typeConverter.convertTo(InputStream.class,payload) @TO@ VariableDeclarationFragment@@is=(InputStream)payload @AT@ 4569 @LENGTH@ 51
------------------INS SimpleName@@Name:typeConverter @TO@ MethodInvocation@@typeConverter.convertTo(InputStream.class,payload) @AT@ 4569 @LENGTH@ 13
------------------INS SimpleName@@MethodName:convertTo:[InputStream.class, payload] @TO@ MethodInvocation@@typeConverter.convertTo(InputStream.class,payload) @AT@ 4583 @LENGTH@ 37
---------------------INS TypeLiteral@@InputStream.class @TO@ SimpleName@@MethodName:convertTo:[InputStream.class, payload] @AT@ 4593 @LENGTH@ 17
---------------------INS SimpleName@@payload @TO@ SimpleName@@MethodName:convertTo:[InputStream.class, payload] @AT@ 4612 @LENGTH@ 7


UPD Block@@ThenBody:{  String pattern;  try {    pattern=context.resolvePropertyPlaceholders(intercept.getUri());  } catch (  Exception e) {    throw ObjectHelper.wrapRuntimeCamelException(e);  }  match=false;  for (  FromDefinition input : route.getInputs()) {    String uri=input.getUri();    if (uri != null && uri.startsWith("ref:")) {      uri=CamelContextHelper.getMandatoryEndpoint(context,uri).getEndpointUri();    } else     if (input.getRef() != null) {      uri=CamelContextHelper.getMandatoryEndpoint(context,"ref:" + input.getRef()).getEndpointUri();    }    if (EndpointHelper.matchEndpoint(context,uri,pattern)) {      match=true;      break;    }  }} @TO@ ThenBody:{  String pattern;  try {    pattern=context.resolvePropertyPlaceholders(intercept.getUri());  } catch (  Exception e) {    throw ObjectHelper.wrapRuntimeCamelException(e);  }  boolean isRefPattern=pattern.startsWith("ref*") || pattern.startsWith("ref:");  match=false;  for (  FromDefinition input : route.getInputs()) {    String uri=input.getUri();    if (!isRefPattern) {      if (uri != null && uri.startsWith("ref:")) {        String ref=uri.substring(4);        uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri();      } else       if (input.getRef() != null) {        uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();      }    }    if (EndpointHelper.matchEndpoint(context,uri,pattern)) {      match=true;      break;    }  }} @AT@ 19395 @LENGTH@ 1390
---INS VariableDeclarationStatement@@boolean isRefPattern=pattern.startsWith("ref*") || pattern.startsWith("ref:"); @TO@ Block@@ThenBody:{  String pattern;  try {    pattern=context.resolvePropertyPlaceholders(intercept.getUri());  } catch (  Exception e) {    throw ObjectHelper.wrapRuntimeCamelException(e);  }  match=false;  for (  FromDefinition input : route.getInputs()) {    String uri=input.getUri();    if (uri != null && uri.startsWith("ref:")) {      uri=CamelContextHelper.getMandatoryEndpoint(context,uri).getEndpointUri();    } else     if (input.getRef() != null) {      uri=CamelContextHelper.getMandatoryEndpoint(context,"ref:" + input.getRef()).getEndpointUri();    }    if (EndpointHelper.matchEndpoint(context,uri,pattern)) {      match=true;      break;    }  }} @AT@ 19794 @LENGTH@ 80
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean isRefPattern=pattern.startsWith("ref*") || pattern.startsWith("ref:"); @AT@ 19794 @LENGTH@ 7
------INS VariableDeclarationFragment@@isRefPattern=pattern.startsWith("ref*") || pattern.startsWith("ref:") @TO@ VariableDeclarationStatement@@boolean isRefPattern=pattern.startsWith("ref*") || pattern.startsWith("ref:"); @AT@ 19802 @LENGTH@ 71
---------INS SimpleName@@isRefPattern @TO@ VariableDeclarationFragment@@isRefPattern=pattern.startsWith("ref*") || pattern.startsWith("ref:") @AT@ 19802 @LENGTH@ 12
---------INS InfixExpression@@pattern.startsWith("ref*") || pattern.startsWith("ref:") @TO@ VariableDeclarationFragment@@isRefPattern=pattern.startsWith("ref*") || pattern.startsWith("ref:") @AT@ 19817 @LENGTH@ 56
------------INS MethodInvocation@@pattern.startsWith("ref*") @TO@ InfixExpression@@pattern.startsWith("ref*") || pattern.startsWith("ref:") @AT@ 19817 @LENGTH@ 26
---------------INS SimpleName@@Name:pattern @TO@ MethodInvocation@@pattern.startsWith("ref*") @AT@ 19817 @LENGTH@ 7
---------------INS SimpleName@@MethodName:startsWith:["ref*"] @TO@ MethodInvocation@@pattern.startsWith("ref*") @AT@ 19825 @LENGTH@ 18
------------------INS StringLiteral@@"ref*" @TO@ SimpleName@@MethodName:startsWith:["ref*"] @AT@ 19836 @LENGTH@ 6
------------INS Operator@@|| @TO@ InfixExpression@@pattern.startsWith("ref*") || pattern.startsWith("ref:") @AT@ 19843 @LENGTH@ 2
------------INS MethodInvocation@@pattern.startsWith("ref:") @TO@ InfixExpression@@pattern.startsWith("ref*") || pattern.startsWith("ref:") @AT@ 19847 @LENGTH@ 26
---------------INS SimpleName@@Name:pattern @TO@ MethodInvocation@@pattern.startsWith("ref:") @AT@ 19847 @LENGTH@ 7
---------------INS SimpleName@@MethodName:startsWith:["ref:"] @TO@ MethodInvocation@@pattern.startsWith("ref:") @AT@ 19855 @LENGTH@ 18
------------------INS StringLiteral@@"ref:" @TO@ SimpleName@@MethodName:startsWith:["ref:"] @AT@ 19866 @LENGTH@ 6
---UPD EnhancedForStatement@@for (FromDefinition input : route.getInputs()) {  String uri=input.getUri();  if (uri != null && uri.startsWith("ref:")) {    uri=CamelContextHelper.getMandatoryEndpoint(context,uri).getEndpointUri();  } else   if (input.getRef() != null) {    uri=CamelContextHelper.getMandatoryEndpoint(context,"ref:" + input.getRef()).getEndpointUri();  }  if (EndpointHelper.matchEndpoint(context,uri,pattern)) {    match=true;    break;  }} @TO@ for (FromDefinition input : route.getInputs()) {  String uri=input.getUri();  if (!isRefPattern) {    if (uri != null && uri.startsWith("ref:")) {      String ref=uri.substring(4);      uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri();    } else     if (input.getRef() != null) {      uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();    }  }  if (EndpointHelper.matchEndpoint(context,uri,pattern)) {    match=true;    break;  }} @AT@ 19830 @LENGTH@ 937
------DEL IfStatement@@if (uri != null && uri.startsWith("ref:")) {  uri=CamelContextHelper.getMandatoryEndpoint(context,uri).getEndpointUri();} else if (input.getRef() != null) {  uri=CamelContextHelper.getMandatoryEndpoint(context,"ref:" + input.getRef()).getEndpointUri();} @AT@ 20050 @LENGTH@ 509
------INS IfStatement@@if (!isRefPattern) {  if (uri != null && uri.startsWith("ref:")) {    String ref=uri.substring(4);    uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri();  } else   if (input.getRef() != null) {    uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();  }} @TO@ EnhancedForStatement@@for (FromDefinition input : route.getInputs()) {  String uri=input.getUri();  if (uri != null && uri.startsWith("ref:")) {    uri=CamelContextHelper.getMandatoryEndpoint(context,uri).getEndpointUri();  } else   if (input.getRef() != null) {    uri=CamelContextHelper.getMandatoryEndpoint(context,"ref:" + input.getRef()).getEndpointUri();  }  if (EndpointHelper.matchEndpoint(context,uri,pattern)) {    match=true;    break;  }} @AT@ 20290 @LENGTH@ 662
---------INS PrefixExpression@@!isRefPattern @TO@ IfStatement@@if (!isRefPattern) {  if (uri != null && uri.startsWith("ref:")) {    String ref=uri.substring(4);    uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri();  } else   if (input.getRef() != null) {    uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();  }} @AT@ 20294 @LENGTH@ 13
------------INS Operator@@! @TO@ PrefixExpression@@!isRefPattern @AT@ 20294 @LENGTH@ 1
------------INS SimpleName@@isRefPattern @TO@ PrefixExpression@@!isRefPattern @AT@ 20295 @LENGTH@ 12
---------INS Block@@ThenBody:{  if (uri != null && uri.startsWith("ref:")) {    String ref=uri.substring(4);    uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri();  } else   if (input.getRef() != null) {    uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();  }} @TO@ IfStatement@@if (!isRefPattern) {  if (uri != null && uri.startsWith("ref:")) {    String ref=uri.substring(4);    uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri();  } else   if (input.getRef() != null) {    uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();  }} @AT@ 20309 @LENGTH@ 643
------------INS IfStatement@@if (uri != null && uri.startsWith("ref:")) {  String ref=uri.substring(4);  uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri();} else if (input.getRef() != null) {  uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();} @TO@ Block@@ThenBody:{  if (uri != null && uri.startsWith("ref:")) {    String ref=uri.substring(4);    uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri();  } else   if (input.getRef() != null) {    uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();  }} @AT@ 20339 @LENGTH@ 587
---------------MOV InfixExpression@@uri != null && uri.startsWith("ref:") @TO@ IfStatement@@if (uri != null && uri.startsWith("ref:")) {  String ref=uri.substring(4);  uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri();} else if (input.getRef() != null) {  uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();} @AT@ 20054 @LENGTH@ 37
---------------MOV Block@@ThenBody:{  uri=CamelContextHelper.getMandatoryEndpoint(context,uri).getEndpointUri();} @TO@ IfStatement@@if (uri != null && uri.startsWith("ref:")) {  String ref=uri.substring(4);  uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri();} else if (input.getRef() != null) {  uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();} @AT@ 20093 @LENGTH@ 213
------------------UPD ExpressionStatement@@Assignment:uri=CamelContextHelper.getMandatoryEndpoint(context,uri).getEndpointUri() @TO@ Assignment:uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri() @AT@ 20203 @LENGTH@ 77
---------------------UPD Assignment@@uri=CamelContextHelper.getMandatoryEndpoint(context,uri).getEndpointUri() @TO@ uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri() @AT@ 20203 @LENGTH@ 76
------------------------UPD MethodInvocation@@CamelContextHelper.getMandatoryEndpoint(context,uri).getEndpointUri() @TO@ CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri() @AT@ 20209 @LENGTH@ 70
---------------------------UPD MethodInvocation@@MethodName:getMandatoryEndpoint:[context, uri] @TO@ MethodName:getMandatoryEndpoint:[context, ref] @AT@ 20209 @LENGTH@ 53
------------------------------UPD SimpleName@@uri @TO@ ref @AT@ 20258 @LENGTH@ 3
------------------INS VariableDeclarationStatement@@String ref=uri.substring(4); @TO@ Block@@ThenBody:{  uri=CamelContextHelper.getMandatoryEndpoint(context,uri).getEndpointUri();} @AT@ 20500 @LENGTH@ 30
---------------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String ref=uri.substring(4); @AT@ 20500 @LENGTH@ 6
---------------------INS VariableDeclarationFragment@@ref=uri.substring(4) @TO@ VariableDeclarationStatement@@String ref=uri.substring(4); @AT@ 20507 @LENGTH@ 22
------------------------INS SimpleName@@ref @TO@ VariableDeclarationFragment@@ref=uri.substring(4) @AT@ 20507 @LENGTH@ 3
------------------------INS MethodInvocation@@uri.substring(4) @TO@ VariableDeclarationFragment@@ref=uri.substring(4) @AT@ 20513 @LENGTH@ 16
---------------------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.substring(4) @AT@ 20513 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:substring:[4] @TO@ MethodInvocation@@uri.substring(4) @AT@ 20517 @LENGTH@ 12
------------------------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:substring:[4] @AT@ 20527 @LENGTH@ 1
---------------MOV Block@@ElseBody:if (input.getRef() != null) {  uri=CamelContextHelper.getMandatoryEndpoint(context,"ref:" + input.getRef()).getEndpointUri();} @TO@ IfStatement@@if (uri != null && uri.startsWith("ref:")) {  String ref=uri.substring(4);  uri=CamelContextHelper.getMandatoryEndpoint(context,ref).getEndpointUri();} else if (input.getRef() != null) {  uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();} @AT@ 20312 @LENGTH@ 247
------------------UPD IfStatement@@if (input.getRef() != null) {  uri=CamelContextHelper.getMandatoryEndpoint(context,"ref:" + input.getRef()).getEndpointUri();} @TO@ if (input.getRef() != null) {  uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();} @AT@ 20312 @LENGTH@ 247
---------------------UPD Block@@ThenBody:{  uri=CamelContextHelper.getMandatoryEndpoint(context,"ref:" + input.getRef()).getEndpointUri();} @TO@ ThenBody:{  uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri();} @AT@ 20340 @LENGTH@ 219
------------------------UPD ExpressionStatement@@Assignment:uri=CamelContextHelper.getMandatoryEndpoint(context,"ref:" + input.getRef()).getEndpointUri() @TO@ Assignment:uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri() @AT@ 20436 @LENGTH@ 97
---------------------------UPD Assignment@@uri=CamelContextHelper.getMandatoryEndpoint(context,"ref:" + input.getRef()).getEndpointUri() @TO@ uri=CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri() @AT@ 20436 @LENGTH@ 96
------------------------------UPD MethodInvocation@@CamelContextHelper.getMandatoryEndpoint(context,"ref:" + input.getRef()).getEndpointUri() @TO@ CamelContextHelper.getMandatoryEndpoint(context,input.getRef()).getEndpointUri() @AT@ 20442 @LENGTH@ 90
---------------------------------UPD MethodInvocation@@MethodName:getMandatoryEndpoint:[context, "ref:" + input.getRef()] @TO@ MethodName:getMandatoryEndpoint:[context, input.getRef()] @AT@ 20442 @LENGTH@ 73
------------------------------------DEL InfixExpression@@"ref:" + input.getRef() @AT@ 20491 @LENGTH@ 23
---------------------------------------DEL StringLiteral@@"ref:" @AT@ 20491 @LENGTH@ 6
---------------------------------------DEL Operator@@+ @AT@ 20497 @LENGTH@ 1
---------------------------------------DEL MethodInvocation@@input.getRef() @AT@ 20500 @LENGTH@ 14
------------------------------------INS MethodInvocation@@input.getRef() @TO@ MethodInvocation@@MethodName:getMandatoryEndpoint:[context, "ref:" + input.getRef()] @AT@ 20863 @LENGTH@ 14
---------------------------------------MOV SimpleName@@Name:input @TO@ MethodInvocation@@input.getRef() @AT@ 20500 @LENGTH@ 5
---------------------------------------MOV SimpleName@@Name:input @TO@ MethodInvocation@@input.getRef() @AT@ 20500 @LENGTH@ 5
---------------------------------------MOV SimpleName@@Name:input @TO@ MethodInvocation@@input.getRef() @AT@ 20500 @LENGTH@ 5
---------------------------------------MOV SimpleName@@MethodName:getRef:[] @TO@ MethodInvocation@@input.getRef() @AT@ 20506 @LENGTH@ 8
---------------------------------------MOV SimpleName@@MethodName:getRef:[] @TO@ MethodInvocation@@input.getRef() @AT@ 20506 @LENGTH@ 8
---------------------------------------MOV SimpleName@@MethodName:getRef:[] @TO@ MethodInvocation@@input.getRef() @AT@ 20506 @LENGTH@ 8


INS MethodDeclaration@@private, static, Map<TypeVariable<?>,Type>, MethodName:getTypeVariableMap, Class<?> type,  @TO@ TypeDeclaration@@[@SuppressWarnings({"unchecked","rawtypes"}), public]ClassTypeInformation, TypeDiscoverer<S> @AT@ 3807 @LENGTH@ 136
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, Map<TypeVariable<?>,Type>, MethodName:getTypeVariableMap, Class<?> type,  @AT@ 3807 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, Map<TypeVariable<?>,Type>, MethodName:getTypeVariableMap, Class<?> type,  @AT@ 3815 @LENGTH@ 6
---INS ParameterizedType@@Map<TypeVariable<?>,Type> @TO@ MethodDeclaration@@private, static, Map<TypeVariable<?>,Type>, MethodName:getTypeVariableMap, Class<?> type,  @AT@ 3822 @LENGTH@ 26
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 3822 @LENGTH@ 3
------INS ParameterizedType@@TypeVariable<?> @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 3826 @LENGTH@ 15
---------INS SimpleType@@TypeVariable @TO@ ParameterizedType@@TypeVariable<?> @AT@ 3826 @LENGTH@ 12
---------INS WildcardType@@? @TO@ ParameterizedType@@TypeVariable<?> @AT@ 3839 @LENGTH@ 1
------INS SimpleType@@Type @TO@ ParameterizedType@@Map<TypeVariable<?>,Type> @AT@ 3843 @LENGTH@ 4
---INS SimpleName@@MethodName:getTypeVariableMap @TO@ MethodDeclaration@@private, static, Map<TypeVariable<?>,Type>, MethodName:getTypeVariableMap, Class<?> type,  @AT@ 3849 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<?> type @TO@ MethodDeclaration@@private, static, Map<TypeVariable<?>,Type>, MethodName:getTypeVariableMap, Class<?> type,  @AT@ 3868 @LENGTH@ 13
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> type @AT@ 3868 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3868 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3874 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<?> type @AT@ 3877 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:getTypeVariableMap(type,new HashSet<Type>()) @TO@ MethodDeclaration@@private, static, Map<TypeVariable<?>,Type>, MethodName:getTypeVariableMap, Class<?> type,  @AT@ 3887 @LENGTH@ 53
------INS MethodInvocation@@getTypeVariableMap(type,new HashSet<Type>()) @TO@ ReturnStatement@@MethodInvocation:getTypeVariableMap(type,new HashSet<Type>()) @AT@ 3894 @LENGTH@ 45
---------INS SimpleName@@MethodName:getTypeVariableMap:[type, new HashSet<Type>()] @TO@ MethodInvocation@@getTypeVariableMap(type,new HashSet<Type>()) @AT@ 3894 @LENGTH@ 45
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:getTypeVariableMap:[type, new HashSet<Type>()] @AT@ 3913 @LENGTH@ 4
------------INS ClassInstanceCreation@@HashSet<Type>[] @TO@ SimpleName@@MethodName:getTypeVariableMap:[type, new HashSet<Type>()] @AT@ 3919 @LENGTH@ 19
---------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<Type>[] @AT@ 3919 @LENGTH@ 3
---------------INS ParameterizedType@@HashSet<Type> @TO@ ClassInstanceCreation@@HashSet<Type>[] @AT@ 3923 @LENGTH@ 13
------------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<Type> @AT@ 3923 @LENGTH@ 7
------------------INS SimpleType@@Type @TO@ ParameterizedType@@HashSet<Type> @AT@ 3931 @LENGTH@ 4


UPD VariableDeclarationStatement@@int value=((Enum)state).ordinal(); @TO@ int value=((Enum<?>)state).ordinal(); @AT@ 5068 @LENGTH@ 36
---UPD VariableDeclarationFragment@@value=((Enum)state).ordinal() @TO@ value=((Enum<?>)state).ordinal() @AT@ 5072 @LENGTH@ 31
------UPD MethodInvocation@@((Enum)state).ordinal() @TO@ ((Enum<?>)state).ordinal() @AT@ 5080 @LENGTH@ 23
---------UPD ParenthesizedExpression@@((Enum)state) @TO@ ((Enum<?>)state) @AT@ 5080 @LENGTH@ 13
------------UPD CastExpression@@(Enum)state @TO@ (Enum<?>)state @AT@ 5081 @LENGTH@ 11
---------------INS ParameterizedType@@Enum<?> @TO@ CastExpression@@(Enum)state @AT@ 5073 @LENGTH@ 7
------------------INS SimpleType@@Enum @TO@ ParameterizedType@@Enum<?> @AT@ 5073 @LENGTH@ 4
------------------INS WildcardType@@? @TO@ ParameterizedType@@Enum<?> @AT@ 5078 @LENGTH@ 1
---------------DEL SimpleType@@Enum @AT@ 5082 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:shouldExecuteFindOnDbRefCorrectly,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 27432 @LENGTH@ 365
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldExecuteFindOnDbRefCorrectly,  @AT@ 27432 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldExecuteFindOnDbRefCorrectly,  @AT@ 27439 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldExecuteFindOnDbRefCorrectly @TO@ MethodDeclaration@@public, void, MethodName:shouldExecuteFindOnDbRefCorrectly,  @AT@ 27444 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:operations.remove(new org.springframework.data.mongodb.core.query.Query(),User.class) @TO@ MethodDeclaration@@public, void, MethodName:shouldExecuteFindOnDbRefCorrectly,  @AT@ 27485 @LENGTH@ 87
------INS MethodInvocation@@operations.remove(new org.springframework.data.mongodb.core.query.Query(),User.class) @TO@ ExpressionStatement@@MethodInvocation:operations.remove(new org.springframework.data.mongodb.core.query.Query(),User.class) @AT@ 27485 @LENGTH@ 86
---------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.remove(new org.springframework.data.mongodb.core.query.Query(),User.class) @AT@ 27485 @LENGTH@ 10
---------INS SimpleName@@MethodName:remove:[new org.springframework.data.mongodb.core.query.Query(), User.class] @TO@ MethodInvocation@@operations.remove(new org.springframework.data.mongodb.core.query.Query(),User.class) @AT@ 27496 @LENGTH@ 75
------------INS ClassInstanceCreation@@org.springframework.data.mongodb.core.query.Query[] @TO@ SimpleName@@MethodName:remove:[new org.springframework.data.mongodb.core.query.Query(), User.class] @AT@ 27503 @LENGTH@ 55
---------------INS New@@new @TO@ ClassInstanceCreation@@org.springframework.data.mongodb.core.query.Query[] @AT@ 27503 @LENGTH@ 3
---------------INS SimpleType@@org.springframework.data.mongodb.core.query.Query @TO@ ClassInstanceCreation@@org.springframework.data.mongodb.core.query.Query[] @AT@ 27507 @LENGTH@ 49
------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:remove:[new org.springframework.data.mongodb.core.query.Query(), User.class] @AT@ 27560 @LENGTH@ 10
---INS VariableDeclarationStatement@@User user=new User(); @TO@ MethodDeclaration@@public, void, MethodName:shouldExecuteFindOnDbRefCorrectly,  @AT@ 27576 @LENGTH@ 23
------INS SimpleType@@User @TO@ VariableDeclarationStatement@@User user=new User(); @AT@ 27576 @LENGTH@ 4
------INS VariableDeclarationFragment@@user=new User() @TO@ VariableDeclarationStatement@@User user=new User(); @AT@ 27581 @LENGTH@ 17
---------INS SimpleName@@user @TO@ VariableDeclarationFragment@@user=new User() @AT@ 27581 @LENGTH@ 4
---------INS ClassInstanceCreation@@User[] @TO@ VariableDeclarationFragment@@user=new User() @AT@ 27588 @LENGTH@ 10
------------INS New@@new @TO@ ClassInstanceCreation@@User[] @AT@ 27588 @LENGTH@ 3
------------INS SimpleType@@User @TO@ ClassInstanceCreation@@User[] @AT@ 27592 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:user.setUsername("Valerie Matthews") @TO@ MethodDeclaration@@public, void, MethodName:shouldExecuteFindOnDbRefCorrectly,  @AT@ 27602 @LENGTH@ 37
------INS MethodInvocation@@user.setUsername("Valerie Matthews") @TO@ ExpressionStatement@@MethodInvocation:user.setUsername("Valerie Matthews") @AT@ 27602 @LENGTH@ 36
---------INS SimpleName@@Name:user @TO@ MethodInvocation@@user.setUsername("Valerie Matthews") @AT@ 27602 @LENGTH@ 4
---------INS SimpleName@@MethodName:setUsername:["Valerie Matthews"] @TO@ MethodInvocation@@user.setUsername("Valerie Matthews") @AT@ 27607 @LENGTH@ 31
------------INS StringLiteral@@"Valerie Matthews" @TO@ SimpleName@@MethodName:setUsername:["Valerie Matthews"] @AT@ 27619 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:operations.save(user) @TO@ MethodDeclaration@@public, void, MethodName:shouldExecuteFindOnDbRefCorrectly,  @AT@ 27643 @LENGTH@ 22
------INS MethodInvocation@@operations.save(user) @TO@ ExpressionStatement@@MethodInvocation:operations.save(user) @AT@ 27643 @LENGTH@ 21
---------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.save(user) @AT@ 27643 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[user] @TO@ MethodInvocation@@operations.save(user) @AT@ 27654 @LENGTH@ 10
------------INS SimpleName@@user @TO@ SimpleName@@MethodName:save:[user] @AT@ 27659 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:dave.setCreator(user) @TO@ MethodDeclaration@@public, void, MethodName:shouldExecuteFindOnDbRefCorrectly,  @AT@ 27669 @LENGTH@ 22
------INS MethodInvocation@@dave.setCreator(user) @TO@ ExpressionStatement@@MethodInvocation:dave.setCreator(user) @AT@ 27669 @LENGTH@ 21
---------INS SimpleName@@Name:dave @TO@ MethodInvocation@@dave.setCreator(user) @AT@ 27669 @LENGTH@ 4
---------INS SimpleName@@MethodName:setCreator:[user] @TO@ MethodInvocation@@dave.setCreator(user) @AT@ 27674 @LENGTH@ 16
------------INS SimpleName@@user @TO@ SimpleName@@MethodName:setCreator:[user] @AT@ 27685 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:operations.save(dave) @TO@ MethodDeclaration@@public, void, MethodName:shouldExecuteFindOnDbRefCorrectly,  @AT@ 27694 @LENGTH@ 22
------INS MethodInvocation@@operations.save(dave) @TO@ ExpressionStatement@@MethodInvocation:operations.save(dave) @AT@ 27694 @LENGTH@ 21
---------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.save(dave) @AT@ 27694 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[dave] @TO@ MethodInvocation@@operations.save(dave) @AT@ 27705 @LENGTH@ 10
------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:save:[dave] @AT@ 27710 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(repository.findOne(QPerson.person.creator.eq(user)),is(dave)) @TO@ MethodDeclaration@@public, void, MethodName:shouldExecuteFindOnDbRefCorrectly,  @AT@ 27720 @LENGTH@ 74
------INS MethodInvocation@@assertThat(repository.findOne(QPerson.person.creator.eq(user)),is(dave)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(repository.findOne(QPerson.person.creator.eq(user)),is(dave)) @AT@ 27720 @LENGTH@ 73
---------INS SimpleName@@MethodName:assertThat:[repository.findOne(QPerson.person.creator.eq(user)), is(dave)] @TO@ MethodInvocation@@assertThat(repository.findOne(QPerson.person.creator.eq(user)),is(dave)) @AT@ 27720 @LENGTH@ 73
------------INS MethodInvocation@@repository.findOne(QPerson.person.creator.eq(user)) @TO@ SimpleName@@MethodName:assertThat:[repository.findOne(QPerson.person.creator.eq(user)), is(dave)] @AT@ 27731 @LENGTH@ 51
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findOne(QPerson.person.creator.eq(user)) @AT@ 27731 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findOne:[QPerson.person.creator.eq(user)] @TO@ MethodInvocation@@repository.findOne(QPerson.person.creator.eq(user)) @AT@ 27742 @LENGTH@ 40
------------------INS MethodInvocation@@QPerson.person.creator.eq(user) @TO@ SimpleName@@MethodName:findOne:[QPerson.person.creator.eq(user)] @AT@ 27750 @LENGTH@ 31
---------------------INS QualifiedName@@Name:QPerson.person.creator @TO@ MethodInvocation@@QPerson.person.creator.eq(user) @AT@ 27750 @LENGTH@ 22
---------------------INS SimpleName@@MethodName:eq:[user] @TO@ MethodInvocation@@QPerson.person.creator.eq(user) @AT@ 27773 @LENGTH@ 8
------------------------INS SimpleName@@user @TO@ SimpleName@@MethodName:eq:[user] @AT@ 27776 @LENGTH@ 4
------------INS MethodInvocation@@is(dave) @TO@ SimpleName@@MethodName:assertThat:[repository.findOne(QPerson.person.creator.eq(user)), is(dave)] @AT@ 27784 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[dave] @TO@ MethodInvocation@@is(dave) @AT@ 27784 @LENGTH@ 8
------------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:is:[dave] @AT@ 27787 @LENGTH@ 4


INS MethodDeclaration@@private, void, MethodName:performChecks, String minSpringVersion, Exception,  @TO@ TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareForTest({SpringSecurityCoreVersion.class,SpringVersion.class}), public]SpringSecurityCoreVersionTests,  @AT@ 5494 @LENGTH@ 182
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:performChecks, String minSpringVersion, Exception,  @AT@ 5494 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:performChecks, String minSpringVersion, Exception,  @AT@ 5502 @LENGTH@ 4
---INS SimpleName@@MethodName:performChecks @TO@ MethodDeclaration@@private, void, MethodName:performChecks, String minSpringVersion, Exception,  @AT@ 5507 @LENGTH@ 13
---INS SingleVariableDeclaration@@String minSpringVersion @TO@ MethodDeclaration@@private, void, MethodName:performChecks, String minSpringVersion, Exception,  @AT@ 5521 @LENGTH@ 23
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String minSpringVersion @AT@ 5521 @LENGTH@ 6
------INS SimpleName@@minSpringVersion @TO@ SingleVariableDeclaration@@String minSpringVersion @AT@ 5528 @LENGTH@ 16
---INS SimpleType@@Exception @TO@ MethodDeclaration@@private, void, MethodName:performChecks, String minSpringVersion, Exception,  @AT@ 5553 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Whitebox.invokeMethod(SpringSecurityCoreVersion.class,"performVersionChecks",minSpringVersion) @TO@ MethodDeclaration@@private, void, MethodName:performChecks, String minSpringVersion, Exception,  @AT@ 5573 @LENGTH@ 97
------INS MethodInvocation@@Whitebox.invokeMethod(SpringSecurityCoreVersion.class,"performVersionChecks",minSpringVersion) @TO@ ExpressionStatement@@MethodInvocation:Whitebox.invokeMethod(SpringSecurityCoreVersion.class,"performVersionChecks",minSpringVersion) @AT@ 5573 @LENGTH@ 96
---------INS SimpleName@@Name:Whitebox @TO@ MethodInvocation@@Whitebox.invokeMethod(SpringSecurityCoreVersion.class,"performVersionChecks",minSpringVersion) @AT@ 5573 @LENGTH@ 8
---------INS SimpleName@@MethodName:invokeMethod:[SpringSecurityCoreVersion.class, "performVersionChecks", minSpringVersion] @TO@ MethodInvocation@@Whitebox.invokeMethod(SpringSecurityCoreVersion.class,"performVersionChecks",minSpringVersion) @AT@ 5582 @LENGTH@ 87
------------INS TypeLiteral@@SpringSecurityCoreVersion.class @TO@ SimpleName@@MethodName:invokeMethod:[SpringSecurityCoreVersion.class, "performVersionChecks", minSpringVersion] @AT@ 5595 @LENGTH@ 31
------------INS StringLiteral@@"performVersionChecks" @TO@ SimpleName@@MethodName:invokeMethod:[SpringSecurityCoreVersion.class, "performVersionChecks", minSpringVersion] @AT@ 5628 @LENGTH@ 22
------------INS SimpleName@@minSpringVersion @TO@ SimpleName@@MethodName:invokeMethod:[SpringSecurityCoreVersion.class, "performVersionChecks", minSpringVersion] @AT@ 5652 @LENGTH@ 16


INS MethodDeclaration@@Object, MethodName:invoke, @PathParam("id") String id, String payload,  @TO@ TypeDeclaration@@[@Path("/customerservice/"), public]CustomerServiceResource,  @AT@ 1558 @LENGTH@ 71
---INS SimpleType@@Object @TO@ MethodDeclaration@@Object, MethodName:invoke, @PathParam("id") String id, String payload,  @AT@ 1551 @LENGTH@ 6
---INS SimpleName@@MethodName:invoke @TO@ MethodDeclaration@@Object, MethodName:invoke, @PathParam("id") String id, String payload,  @AT@ 1558 @LENGTH@ 6
---INS SingleVariableDeclaration@@@PathParam("id") String id @TO@ MethodDeclaration@@Object, MethodName:invoke, @PathParam("id") String id, String payload,  @AT@ 1565 @LENGTH@ 26
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@@PathParam("id") String id @AT@ 1582 @LENGTH@ 6
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@@PathParam("id") String id @AT@ 1589 @LENGTH@ 2
---INS SingleVariableDeclaration@@String payload @TO@ MethodDeclaration@@Object, MethodName:invoke, @PathParam("id") String id, String payload,  @AT@ 1613 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String payload @AT@ 1613 @LENGTH@ 6
------INS SimpleName@@payload @TO@ SingleVariableDeclaration@@String payload @AT@ 1620 @LENGTH@ 7


INS EnhancedForStatement@@for (EndpointMappingKey key : endpoints.keySet()) {  String compositeOrSimpleKey=null;switch (key.getType()) {case ACTION:    compositeOrSimpleKey=getActionCompositeLookupKey(map);  break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");}if (compositeOrSimpleKey != null && key.getLookupKey().equals(compositeOrSimpleKey)) {LOG.debug("Found mapping for key" + key);return endpoints.get(key);}} @TO@ MethodDeclaration@@protected, Object, MethodName:getEndpointInternal, MessageAddressingProperties map,  @AT@ 2820 @LENGTH@ 1043
---INS SingleVariableDeclaration@@EndpointMappingKey key @TO@ EnhancedForStatement@@for (EndpointMappingKey key : endpoints.keySet()) {  String compositeOrSimpleKey=null;switch (key.getType()) {case ACTION:    compositeOrSimpleKey=getActionCompositeLookupKey(map);  break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");}if (compositeOrSimpleKey != null && key.getLookupKey().equals(compositeOrSimpleKey)) {LOG.debug("Found mapping for key" + key);return endpoints.get(key);}} @AT@ 2825 @LENGTH@ 22
------INS SimpleType@@EndpointMappingKey @TO@ SingleVariableDeclaration@@EndpointMappingKey key @AT@ 2825 @LENGTH@ 18
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@EndpointMappingKey key @AT@ 2844 @LENGTH@ 3
---MOV VariableDeclarationStatement@@String compositeOrSimpleKey=null; @TO@ EnhancedForStatement@@for (EndpointMappingKey key : endpoints.keySet()) {  String compositeOrSimpleKey=null;switch (key.getType()) {case ACTION:    compositeOrSimpleKey=getActionCompositeLookupKey(map);  break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");}if (compositeOrSimpleKey != null && key.getLookupKey().equals(compositeOrSimpleKey)) {LOG.debug("Found mapping for key" + key);return endpoints.get(key);}} @AT@ 2830 @LENGTH@ 35
---INS MethodInvocation@@endpoints.keySet() @TO@ EnhancedForStatement@@for (EndpointMappingKey key : endpoints.keySet()) {  String compositeOrSimpleKey=null;switch (key.getType()) {case ACTION:    compositeOrSimpleKey=getActionCompositeLookupKey(map);  break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");}if (compositeOrSimpleKey != null && key.getLookupKey().equals(compositeOrSimpleKey)) {LOG.debug("Found mapping for key" + key);return endpoints.get(key);}} @AT@ 2850 @LENGTH@ 18
------INS SimpleName@@Name:endpoints @TO@ MethodInvocation@@endpoints.keySet() @AT@ 2850 @LENGTH@ 9
------INS SimpleName@@MethodName:keySet:[] @TO@ MethodInvocation@@endpoints.keySet() @AT@ 2860 @LENGTH@ 8
---INS SwitchStatement@@switch (key.getType()) {case ACTION:  compositeOrSimpleKey=getActionCompositeLookupKey(map);break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");} @TO@ EnhancedForStatement@@for (EndpointMappingKey key : endpoints.keySet()) {  String compositeOrSimpleKey=null;switch (key.getType()) {case ACTION:    compositeOrSimpleKey=getActionCompositeLookupKey(map);  break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");}if (compositeOrSimpleKey != null && key.getLookupKey().equals(compositeOrSimpleKey)) {LOG.debug("Found mapping for key" + key);return endpoints.get(key);}} @AT@ 2932 @LENGTH@ 663
------INS MethodInvocation@@key.getType() @TO@ SwitchStatement@@switch (key.getType()) {case ACTION:  compositeOrSimpleKey=getActionCompositeLookupKey(map);break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");} @AT@ 2940 @LENGTH@ 13
---------INS SimpleName@@Name:key @TO@ MethodInvocation@@key.getType() @AT@ 2940 @LENGTH@ 3
---------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@key.getType() @AT@ 2944 @LENGTH@ 9
------INS SwitchCase@@case ACTION: @TO@ SwitchStatement@@switch (key.getType()) {case ACTION:  compositeOrSimpleKey=getActionCompositeLookupKey(map);break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");} @AT@ 2969 @LENGTH@ 12
---------INS SimpleName@@ACTION @TO@ SwitchCase@@case ACTION: @AT@ 2974 @LENGTH@ 6
------MOV ExpressionStatement@@Assignment:compositeOrSimpleKey=getActionCompositeLookupKey(map) @TO@ SwitchStatement@@switch (key.getType()) {case ACTION:  compositeOrSimpleKey=getActionCompositeLookupKey(map);break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");} @AT@ 2981 @LENGTH@ 56
------INS BreakStatement@@ @TO@ SwitchStatement@@switch (key.getType()) {case ACTION:  compositeOrSimpleKey=getActionCompositeLookupKey(map);break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");} @AT@ 3071 @LENGTH@ 6
------INS SwitchCase@@case TO: @TO@ SwitchStatement@@switch (key.getType()) {case ACTION:  compositeOrSimpleKey=getActionCompositeLookupKey(map);break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");} @AT@ 3090 @LENGTH@ 8
---------INS SimpleName@@TO @TO@ SwitchCase@@case TO: @AT@ 3095 @LENGTH@ 2
------INS BreakStatement@@ @TO@ SwitchStatement@@switch (key.getType()) {case ACTION:  compositeOrSimpleKey=getActionCompositeLookupKey(map);break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");} @AT@ 3184 @LENGTH@ 6
------INS SwitchCase@@default @TO@ SwitchStatement@@switch (key.getType()) {case ACTION:  compositeOrSimpleKey=getActionCompositeLookupKey(map);break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");} @AT@ 3203 @LENGTH@ 8
------MOV ExpressionStatement@@Assignment:compositeOrSimpleKey=getToCompositeLookupKey(map) @TO@ SwitchStatement@@switch (key.getType()) {case ACTION:  compositeOrSimpleKey=getActionCompositeLookupKey(map);break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");} @AT@ 3223 @LENGTH@ 52
------INS ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)") @TO@ SwitchStatement@@switch (key.getType()) {case ACTION:  compositeOrSimpleKey=getActionCompositeLookupKey(map);break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");} @AT@ 3228 @LENGTH@ 353
---------INS ClassInstanceCreation@@RuntimeCamelException["Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)") @AT@ 3234 @LENGTH@ 346
------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeCamelException["Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)"] @AT@ 3234 @LENGTH@ 3
------------INS SimpleType@@RuntimeCamelException @TO@ ClassInstanceCreation@@RuntimeCamelException["Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)"] @AT@ 3238 @LENGTH@ 21
------------INS InfixExpression@@"Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)" @TO@ ClassInstanceCreation@@RuntimeCamelException["Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)"] @AT@ 3309 @LENGTH@ 270
---------------INS StringLiteral@@"Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" @TO@ InfixExpression@@"Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)" @AT@ 3309 @LENGTH@ 137
---------------INS Operator@@+ @TO@ InfixExpression@@"Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)" @AT@ 3446 @LENGTH@ 1
---------------INS StringLiteral@@"spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)" @TO@ InfixExpression@@"Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)" @AT@ 3501 @LENGTH@ 78
---MOV IfStatement@@if (compositeOrSimpleKey != null && key.getLookupKey().equals(compositeOrSimpleKey)) {  LOG.debug("Found mapping for key" + key);  return endpoints.get(key);} @TO@ EnhancedForStatement@@for (EndpointMappingKey key : endpoints.keySet()) {  String compositeOrSimpleKey=null;switch (key.getType()) {case ACTION:    compositeOrSimpleKey=getActionCompositeLookupKey(map);  break;case TO:compositeOrSimpleKey=getToCompositeLookupKey(map);break;default :throw new RuntimeCamelException("Invalid mapping type specified. Supported types are: spring-ws:action:<WS-Addressing Action>(optional:<WS-Addressing To>?<params...>\n)" + "spring-ws:to:<WS-Addressing To>(optional:<WS-Addressing Action>?<params...>)");}if (compositeOrSimpleKey != null && key.getLookupKey().equals(compositeOrSimpleKey)) {LOG.debug("Found mapping for key" + key);return endpoints.get(key);}} @AT@ 3877 @LENGTH@ 201


UPD VariableDeclarationStatement@@ApplicationInfo info=submitApplicationAndWait(120,TimeUnit.SECONDS); @TO@ ApplicationInfo info=submitApplicationAndWait(240,TimeUnit.SECONDS); @AT@ 2306 @LENGTH@ 71
---UPD VariableDeclarationFragment@@info=submitApplicationAndWait(120,TimeUnit.SECONDS) @TO@ info=submitApplicationAndWait(240,TimeUnit.SECONDS) @AT@ 2322 @LENGTH@ 54
------UPD MethodInvocation@@submitApplicationAndWait(120,TimeUnit.SECONDS) @TO@ submitApplicationAndWait(240,TimeUnit.SECONDS) @AT@ 2329 @LENGTH@ 47
---------UPD SimpleName@@MethodName:submitApplicationAndWait:[120, TimeUnit.SECONDS] @TO@ MethodName:submitApplicationAndWait:[240, TimeUnit.SECONDS] @AT@ 2329 @LENGTH@ 47
------------UPD NumberLiteral@@120 @TO@ 240 @AT@ 2354 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:TezJobMonitor.initShutdownHook() @TO@ MethodDeclaration@@public, void, MethodName:open, HiveConf conf, String[] additionalFiles, IOException, LoginException, IllegalArgumentException, URISyntaxException, TezException,  @AT@ 6772 @LENGTH@ 33
---INS MethodInvocation@@TezJobMonitor.initShutdownHook() @TO@ ExpressionStatement@@MethodInvocation:TezJobMonitor.initShutdownHook() @AT@ 6772 @LENGTH@ 32
------INS SimpleName@@Name:TezJobMonitor @TO@ MethodInvocation@@TezJobMonitor.initShutdownHook() @AT@ 6772 @LENGTH@ 13
------INS SimpleName@@MethodName:initShutdownHook:[] @TO@ MethodInvocation@@TezJobMonitor.initShutdownHook() @AT@ 6786 @LENGTH@ 18


INS MethodDeclaration@@public, static, String, MethodName:unEscapeString, String s,  @TO@ TypeDeclaration@@[public]TempletonUtils,  @AT@ 10528 @LENGTH@ 130
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:unEscapeString, String s,  @AT@ 10528 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:unEscapeString, String s,  @AT@ 10535 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:unEscapeString, String s,  @AT@ 10542 @LENGTH@ 6
---INS SimpleName@@MethodName:unEscapeString @TO@ MethodDeclaration@@public, static, String, MethodName:unEscapeString, String s,  @AT@ 10549 @LENGTH@ 14
---INS SingleVariableDeclaration@@String s @TO@ MethodDeclaration@@public, static, String, MethodName:unEscapeString, String s,  @AT@ 10564 @LENGTH@ 8
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String s @AT@ 10564 @LENGTH@ 6
------INS SimpleName@@s @TO@ SingleVariableDeclaration@@String s @AT@ 10571 @LENGTH@ 1
---INS ReturnStatement@@ConditionalExpression:s != null && s.contains("\\,") ? StringUtils.unEscapeString(s) : s @TO@ MethodDeclaration@@public, static, String, MethodName:unEscapeString, String s,  @AT@ 10580 @LENGTH@ 74
------INS ConditionalExpression@@s != null && s.contains("\\,") ? StringUtils.unEscapeString(s) : s @TO@ ReturnStatement@@ConditionalExpression:s != null && s.contains("\\,") ? StringUtils.unEscapeString(s) : s @AT@ 10587 @LENGTH@ 66
---------INS InfixExpression@@s != null && s.contains("\\,") @TO@ ConditionalExpression@@s != null && s.contains("\\,") ? StringUtils.unEscapeString(s) : s @AT@ 10587 @LENGTH@ 30
------------INS InfixExpression@@s != null @TO@ InfixExpression@@s != null && s.contains("\\,") @AT@ 10587 @LENGTH@ 9
---------------INS SimpleName@@s @TO@ InfixExpression@@s != null @AT@ 10587 @LENGTH@ 1
---------------INS Operator@@!= @TO@ InfixExpression@@s != null @AT@ 10588 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@s != null @AT@ 10592 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@s != null && s.contains("\\,") @AT@ 10596 @LENGTH@ 2
------------INS MethodInvocation@@s.contains("\\,") @TO@ InfixExpression@@s != null && s.contains("\\,") @AT@ 10600 @LENGTH@ 17
---------------INS SimpleName@@Name:s @TO@ MethodInvocation@@s.contains("\\,") @AT@ 10600 @LENGTH@ 1
---------------INS SimpleName@@MethodName:contains:["\\,"] @TO@ MethodInvocation@@s.contains("\\,") @AT@ 10602 @LENGTH@ 15
------------------INS StringLiteral@@"\\," @TO@ SimpleName@@MethodName:contains:["\\,"] @AT@ 10611 @LENGTH@ 5
---------INS MethodInvocation@@StringUtils.unEscapeString(s) @TO@ ConditionalExpression@@s != null && s.contains("\\,") ? StringUtils.unEscapeString(s) : s @AT@ 10620 @LENGTH@ 29
------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.unEscapeString(s) @AT@ 10620 @LENGTH@ 11
------------INS SimpleName@@MethodName:unEscapeString:[s] @TO@ MethodInvocation@@StringUtils.unEscapeString(s) @AT@ 10632 @LENGTH@ 17
---------------INS SimpleName@@s @TO@ SimpleName@@MethodName:unEscapeString:[s] @AT@ 10647 @LENGTH@ 1
---------INS SimpleName@@s @TO@ ConditionalExpression@@s != null && s.contains("\\,") ? StringUtils.unEscapeString(s) : s @AT@ 10652 @LENGTH@ 1


UPD VariableDeclarationStatement@@HttpRequest request=new DefaultHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.GET,uri); @TO@ HttpRequest request=new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.GET,uri); @AT@ 19662 @LENGTH@ 88
---UPD VariableDeclarationFragment@@request=new DefaultHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.GET,uri) @TO@ request=new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.GET,uri) @AT@ 19674 @LENGTH@ 75
------UPD ClassInstanceCreation@@DefaultHttpRequest[HttpVersion.HTTP_1_1, HttpMethod.GET, uri] @TO@ DefaultFullHttpRequest[HttpVersion.HTTP_1_1, HttpMethod.GET, uri] @AT@ 19684 @LENGTH@ 65
---------UPD SimpleType@@DefaultHttpRequest @TO@ DefaultFullHttpRequest @AT@ 19688 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"consumerKey\": { \"type\": \"java.lang.String\" }")) @TO@ MethodInvocation:assertTrue(json.contains("\"consumerKey\": { \"type\": \"string\" }")) @AT@ 3854 @LENGTH@ 81
---UPD MethodInvocation@@assertTrue(json.contains("\"consumerKey\": { \"type\": \"java.lang.String\" }")) @TO@ assertTrue(json.contains("\"consumerKey\": { \"type\": \"string\" }")) @AT@ 3854 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"consumerKey\": { \"type\": \"java.lang.String\" }")] @TO@ MethodName:assertTrue:[json.contains("\"consumerKey\": { \"type\": \"string\" }")] @AT@ 3854 @LENGTH@ 80
---------UPD MethodInvocation@@json.contains("\"consumerKey\": { \"type\": \"java.lang.String\" }") @TO@ json.contains("\"consumerKey\": { \"type\": \"string\" }") @AT@ 3865 @LENGTH@ 68
------------UPD SimpleName@@MethodName:contains:["\"consumerKey\": { \"type\": \"java.lang.String\" }"] @TO@ MethodName:contains:["\"consumerKey\": { \"type\": \"string\" }"] @AT@ 3870 @LENGTH@ 63
---------------UPD StringLiteral@@"\"consumerKey\": { \"type\": \"java.lang.String\" }" @TO@ "\"consumerKey\": { \"type\": \"string\" }" @AT@ 3879 @LENGTH@ 53


UPD ExpressionStatement@@MethodInvocation:books.save(new Book("1449323953","Spring Data (SecondEdition)",authors)) @TO@ MethodInvocation:books.save(new Book("1449323953","Spring Data (Second Edition)",authors)) @AT@ 1031 @LENGTH@ 75
---UPD MethodInvocation@@books.save(new Book("1449323953","Spring Data (SecondEdition)",authors)) @TO@ books.save(new Book("1449323953","Spring Data (Second Edition)",authors)) @AT@ 1031 @LENGTH@ 74
------UPD SimpleName@@MethodName:save:[new Book("1449323953","Spring Data (SecondEdition)",authors)] @TO@ MethodName:save:[new Book("1449323953","Spring Data (Second Edition)",authors)] @AT@ 1037 @LENGTH@ 68
---------UPD ClassInstanceCreation@@Book["1449323953", "Spring Data (SecondEdition)", authors] @TO@ Book["1449323953", "Spring Data (Second Edition)", authors] @AT@ 1042 @LENGTH@ 62
------------UPD StringLiteral@@"Spring Data (SecondEdition)" @TO@ "Spring Data (Second Edition)" @AT@ 1065 @LENGTH@ 29


INS MethodDeclaration@@List<Person>, MethodName:findByKeyValue, String key, String value,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QueryDslPredicateExecutor<Person>] @AT@ 8114 @LENGTH@ 41
---INS ParameterizedType@@List<Person> @TO@ MethodDeclaration@@List<Person>, MethodName:findByKeyValue, String key, String value,  @AT@ 8101 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 8101 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 8106 @LENGTH@ 6
---INS SimpleName@@MethodName:findByKeyValue @TO@ MethodDeclaration@@List<Person>, MethodName:findByKeyValue, String key, String value,  @AT@ 8114 @LENGTH@ 14
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@List<Person>, MethodName:findByKeyValue, String key, String value,  @AT@ 8129 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 8129 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 8136 @LENGTH@ 3
---INS SingleVariableDeclaration@@String value @TO@ MethodDeclaration@@List<Person>, MethodName:findByKeyValue, String key, String value,  @AT@ 8141 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String value @AT@ 8141 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@String value @AT@ 8148 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:TypeVariableTypeInformation, TypeVariable<?> variable, Type owningType, TypeDiscoverer<?> parent, Map<TypeVariable,Type> map,  @TO@ public, voidMethodName:TypeVariableTypeInformation, TypeVariable<?> variable, Type owningType, TypeDiscoverer<?> parent, Map<TypeVariable<?>,Type> typeVariableMap,  @AT@ 1561 @LENGTH@ 261
---UPD SingleVariableDeclaration@@Map<TypeVariable,Type> map @TO@ Map<TypeVariable<?>,Type> typeVariableMap @AT@ 1668 @LENGTH@ 27
------UPD ParameterizedType@@Map<TypeVariable,Type> @TO@ Map<TypeVariable<?>,Type> @AT@ 1668 @LENGTH@ 23
---------INS ParameterizedType@@TypeVariable<?> @TO@ ParameterizedType@@Map<TypeVariable,Type> @AT@ 1641 @LENGTH@ 15
------------INS WildcardType@@? @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1654 @LENGTH@ 1
------------MOV SimpleType@@TypeVariable @TO@ ParameterizedType@@TypeVariable<?> @AT@ 1672 @LENGTH@ 12
------UPD SimpleName@@map @TO@ typeVariableMap @AT@ 1692 @LENGTH@ 3
---UPD SuperConstructorInvocation@@super(variable,parent,map);
 @TO@ super(variable,parent,typeVariableMap);
 @AT@ 1702 @LENGTH@ 29
------UPD SimpleName@@map @TO@ typeVariableMap @AT@ 1726 @LENGTH@ 3


UPD TypeDeclaration@@IOHelper,  @TO@ [final]IOHelper,  @AT@ 995 @LENGTH@ 1636
---INS Modifier@@final @TO@ TypeDeclaration@@IOHelper,  @AT@ 989 @LENGTH@ 5


UPD IfStatement@@if (split != null) {  try {    realReader=newInputFormat.createRecordReader(split,taskContext);    realReader.initialize(split,taskContext);    if (realReader.nextKeyValue()) {      firstRecord=true;      valueObj=realReader.getCurrentValue();    } else {      eof=true;    }  } catch (  final InterruptedException e) {    throw new IOException(e);  }} else {  realReader=null;  eof=true;  if (valueObj == null) {    valueObj=new ArrayWritable(Writable.class,new Writable[schemaSize]);  }} @TO@ if (split != null) {  try {    realReader=newInputFormat.createRecordReader(split,taskContext);    realReader.initialize(split,taskContext);    if (realReader.nextKeyValue()) {      firstRecord=true;      valueObj=realReader.getCurrentValue();    } else {      eof=true;    }  } catch (  final InterruptedException e) {    throw new IOException(e);  }} else {  realReader=null;  eof=true;} @AT@ 3458 @LENGTH@ 708
---UPD Block@@ElseBody:{  realReader=null;  eof=true;  if (valueObj == null) {    valueObj=new ArrayWritable(Writable.class,new Writable[schemaSize]);  }} @TO@ ElseBody:{  realReader=null;  eof=true;} @AT@ 3951 @LENGTH@ 215


UPD TypeDeclaration@@[@SuppressWarnings("all"), public]EnumConverter, [Converter<Enum<?>>] @TO@ [@SuppressWarnings("all"), @Component, public]EnumConverter, [Converter<Enum<?>>] @AT@ 955 @LENGTH@ 1328
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[@SuppressWarnings("all"), public]EnumConverter, [Converter<Enum<?>>] @AT@ 1030 @LENGTH@ 10


UPD VariableDeclarationStatement@@HttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 4353 @LENGTH@ 90
---UPD VariableDeclarationFragment@@client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 4364 @LENGTH@ 78
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 4373 @LENGTH@ 69
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 4373 @LENGTH@ 43
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 4417 @LENGTH@ 25
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 4421 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"clusterName\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ MethodDeclaration@@public, void, MethodName:testComponentConfiguration, Exception,  @AT@ 1808 @LENGTH@ 89
---INS MethodInvocation@@assertTrue(json.contains("\"clusterName\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"clusterName\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1808 @LENGTH@ 88
------INS SimpleName@@MethodName:assertTrue:[json.contains("\"clusterName\": { \"kind\": \"path\", \"type\": \"string\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"clusterName\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1808 @LENGTH@ 88
---------INS MethodInvocation@@json.contains("\"clusterName\": { \"kind\": \"path\", \"type\": \"string\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"clusterName\": { \"kind\": \"path\", \"type\": \"string\"")] @AT@ 1819 @LENGTH@ 76
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"clusterName\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1819 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["\"clusterName\": { \"kind\": \"path\", \"type\": \"string\""] @TO@ MethodInvocation@@json.contains("\"clusterName\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1824 @LENGTH@ 71
---------------INS StringLiteral@@"\"clusterName\": { \"kind\": \"path\", \"type\": \"string\"" @TO@ SimpleName@@MethodName:contains:["\"clusterName\": { \"kind\": \"path\", \"type\": \"string\""] @AT@ 1833 @LENGTH@ 61


UPD VariableDeclarationStatement@@int counter=TestUtils.readField("counter",strategy); @TO@ Integer counter=TestUtils.readField("counter",strategy); @AT@ 3106 @LENGTH@ 55
---INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@int counter=TestUtils.readField("counter",strategy); @AT@ 3106 @LENGTH@ 7
---DEL PrimitiveType@@int @AT@ 3106 @LENGTH@ 3


INS VariableDeclarationStatement@@String nowYYYYMMzero=new SimpleDateFormat("yyyy/MM").format(new Date(0)); @TO@ MethodDeclaration@@public, void, MethodName:testCompilables, Exception,  @AT@ 1598 @LENGTH@ 75
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String nowYYYYMMzero=new SimpleDateFormat("yyyy/MM").format(new Date(0)); @AT@ 1598 @LENGTH@ 6
---INS VariableDeclarationFragment@@nowYYYYMMzero=new SimpleDateFormat("yyyy/MM").format(new Date(0)) @TO@ VariableDeclarationStatement@@String nowYYYYMMzero=new SimpleDateFormat("yyyy/MM").format(new Date(0)); @AT@ 1605 @LENGTH@ 67
------INS SimpleName@@nowYYYYMMzero @TO@ VariableDeclarationFragment@@nowYYYYMMzero=new SimpleDateFormat("yyyy/MM").format(new Date(0)) @AT@ 1605 @LENGTH@ 13
------INS MethodInvocation@@new SimpleDateFormat("yyyy/MM").format(new Date(0)) @TO@ VariableDeclarationFragment@@nowYYYYMMzero=new SimpleDateFormat("yyyy/MM").format(new Date(0)) @AT@ 1621 @LENGTH@ 51
---------INS ClassInstanceCreation@@SimpleDateFormat["yyyy/MM"] @TO@ MethodInvocation@@new SimpleDateFormat("yyyy/MM").format(new Date(0)) @AT@ 1621 @LENGTH@ 31
------------INS New@@new @TO@ ClassInstanceCreation@@SimpleDateFormat["yyyy/MM"] @AT@ 1621 @LENGTH@ 3
------------INS SimpleType@@SimpleDateFormat @TO@ ClassInstanceCreation@@SimpleDateFormat["yyyy/MM"] @AT@ 1625 @LENGTH@ 16
------------INS StringLiteral@@"yyyy/MM" @TO@ ClassInstanceCreation@@SimpleDateFormat["yyyy/MM"] @AT@ 1642 @LENGTH@ 9
---------INS SimpleName@@MethodName:format:[new Date(0)] @TO@ MethodInvocation@@new SimpleDateFormat("yyyy/MM").format(new Date(0)) @AT@ 1653 @LENGTH@ 19
------------INS ClassInstanceCreation@@Date[0] @TO@ SimpleName@@MethodName:format:[new Date(0)] @AT@ 1660 @LENGTH@ 11
---------------INS New@@new @TO@ ClassInstanceCreation@@Date[0] @AT@ 1660 @LENGTH@ 3
---------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[0] @AT@ 1664 @LENGTH@ 4
---------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@Date[0] @AT@ 1669 @LENGTH@ 1


INS MethodDeclaration@@private, boolean, MethodName:expectionContainsNoScriptError, Exception e,  @TO@ TypeDeclaration@@[public]DefaultScriptExecutor, [ScriptExecutor<K>] @AT@ 5379 @LENGTH@ 382
---INS Modifier@@private @TO@ MethodDeclaration@@private, boolean, MethodName:expectionContainsNoScriptError, Exception e,  @AT@ 5379 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@private, boolean, MethodName:expectionContainsNoScriptError, Exception e,  @AT@ 5387 @LENGTH@ 7
---INS SimpleName@@MethodName:expectionContainsNoScriptError @TO@ MethodDeclaration@@private, boolean, MethodName:expectionContainsNoScriptError, Exception e,  @AT@ 5395 @LENGTH@ 30
---INS SingleVariableDeclaration@@Exception e @TO@ MethodDeclaration@@private, boolean, MethodName:expectionContainsNoScriptError, Exception e,  @AT@ 5426 @LENGTH@ 11
------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5426 @LENGTH@ 9
------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 5436 @LENGTH@ 1
---INS IfStatement@@if (!(e instanceof UncategorizedDataAccessException)) {  return false;} @TO@ MethodDeclaration@@private, boolean, MethodName:expectionContainsNoScriptError, Exception e,  @AT@ 5444 @LENGTH@ 76
------INS PrefixExpression@@!(e instanceof UncategorizedDataAccessException) @TO@ IfStatement@@if (!(e instanceof UncategorizedDataAccessException)) {  return false;} @AT@ 5448 @LENGTH@ 48
---------INS Operator@@! @TO@ PrefixExpression@@!(e instanceof UncategorizedDataAccessException) @AT@ 5448 @LENGTH@ 1
---------INS ParenthesizedExpression@@(e instanceof UncategorizedDataAccessException) @TO@ PrefixExpression@@!(e instanceof UncategorizedDataAccessException) @AT@ 5449 @LENGTH@ 47
------------INS InstanceofExpression@@e instanceof UncategorizedDataAccessException @TO@ ParenthesizedExpression@@(e instanceof UncategorizedDataAccessException) @AT@ 5450 @LENGTH@ 45
---------------INS SimpleName@@e @TO@ InstanceofExpression@@e instanceof UncategorizedDataAccessException @AT@ 5450 @LENGTH@ 1
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@e instanceof UncategorizedDataAccessException @AT@ 5452 @LENGTH@ 10
---------------INS SimpleType@@UncategorizedDataAccessException @TO@ InstanceofExpression@@e instanceof UncategorizedDataAccessException @AT@ 5463 @LENGTH@ 32
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (!(e instanceof UncategorizedDataAccessException)) {  return false;} @AT@ 5498 @LENGTH@ 22
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 5503 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 5510 @LENGTH@ 5
---INS VariableDeclarationStatement@@Throwable current=e; @TO@ MethodDeclaration@@private, boolean, MethodName:expectionContainsNoScriptError, Exception e,  @AT@ 5524 @LENGTH@ 22
------INS SimpleType@@Throwable @TO@ VariableDeclarationStatement@@Throwable current=e; @AT@ 5524 @LENGTH@ 9
------INS VariableDeclarationFragment@@current=e @TO@ VariableDeclarationStatement@@Throwable current=e; @AT@ 5534 @LENGTH@ 11
---------INS SimpleName@@current @TO@ VariableDeclarationFragment@@current=e @AT@ 5534 @LENGTH@ 7
---------INS SimpleName@@e @TO@ VariableDeclarationFragment@@current=e @AT@ 5544 @LENGTH@ 1
---INS WhileStatement@@while (current != null) {  String exMessage=current.getMessage();  if (exMessage != null && exMessage.contains("NOSCRIPT")) {    return true;  }  current=current.getCause();} @TO@ MethodDeclaration@@private, boolean, MethodName:expectionContainsNoScriptError, Exception e,  @AT@ 5549 @LENGTH@ 192
------INS InfixExpression@@current != null @TO@ WhileStatement@@while (current != null) {  String exMessage=current.getMessage();  if (exMessage != null && exMessage.contains("NOSCRIPT")) {    return true;  }  current=current.getCause();} @AT@ 5556 @LENGTH@ 15
---------INS SimpleName@@current @TO@ InfixExpression@@current != null @AT@ 5556 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@current != null @AT@ 5563 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@current != null @AT@ 5567 @LENGTH@ 4
------INS Block@@WhileBody:{  String exMessage=current.getMessage();  if (exMessage != null && exMessage.contains("NOSCRIPT")) {    return true;  }  current=current.getCause();} @TO@ WhileStatement@@while (current != null) {  String exMessage=current.getMessage();  if (exMessage != null && exMessage.contains("NOSCRIPT")) {    return true;  }  current=current.getCause();} @AT@ 5573 @LENGTH@ 168
---------INS VariableDeclarationStatement@@String exMessage=current.getMessage(); @TO@ Block@@WhileBody:{  String exMessage=current.getMessage();  if (exMessage != null && exMessage.contains("NOSCRIPT")) {    return true;  }  current=current.getCause();} @AT@ 5579 @LENGTH@ 40
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String exMessage=current.getMessage(); @AT@ 5579 @LENGTH@ 6
------------INS VariableDeclarationFragment@@exMessage=current.getMessage() @TO@ VariableDeclarationStatement@@String exMessage=current.getMessage(); @AT@ 5586 @LENGTH@ 32
---------------INS SimpleName@@exMessage @TO@ VariableDeclarationFragment@@exMessage=current.getMessage() @AT@ 5586 @LENGTH@ 9
---------------INS MethodInvocation@@current.getMessage() @TO@ VariableDeclarationFragment@@exMessage=current.getMessage() @AT@ 5598 @LENGTH@ 20
------------------INS SimpleName@@Name:current @TO@ MethodInvocation@@current.getMessage() @AT@ 5598 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@current.getMessage() @AT@ 5606 @LENGTH@ 12
---------INS IfStatement@@if (exMessage != null && exMessage.contains("NOSCRIPT")) {  return true;} @TO@ Block@@WhileBody:{  String exMessage=current.getMessage();  if (exMessage != null && exMessage.contains("NOSCRIPT")) {    return true;  }  current=current.getCause();} @AT@ 5623 @LENGTH@ 80
------------INS InfixExpression@@exMessage != null && exMessage.contains("NOSCRIPT") @TO@ IfStatement@@if (exMessage != null && exMessage.contains("NOSCRIPT")) {  return true;} @AT@ 5627 @LENGTH@ 51
---------------INS InfixExpression@@exMessage != null @TO@ InfixExpression@@exMessage != null && exMessage.contains("NOSCRIPT") @AT@ 5627 @LENGTH@ 17
------------------INS SimpleName@@exMessage @TO@ InfixExpression@@exMessage != null @AT@ 5627 @LENGTH@ 9
------------------INS Operator@@!= @TO@ InfixExpression@@exMessage != null @AT@ 5636 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@exMessage != null @AT@ 5640 @LENGTH@ 4
---------------INS Operator@@&& @TO@ InfixExpression@@exMessage != null && exMessage.contains("NOSCRIPT") @AT@ 5644 @LENGTH@ 2
---------------INS MethodInvocation@@exMessage.contains("NOSCRIPT") @TO@ InfixExpression@@exMessage != null && exMessage.contains("NOSCRIPT") @AT@ 5648 @LENGTH@ 30
------------------INS SimpleName@@Name:exMessage @TO@ MethodInvocation@@exMessage.contains("NOSCRIPT") @AT@ 5648 @LENGTH@ 9
------------------INS SimpleName@@MethodName:contains:["NOSCRIPT"] @TO@ MethodInvocation@@exMessage.contains("NOSCRIPT") @AT@ 5658 @LENGTH@ 20
---------------------INS StringLiteral@@"NOSCRIPT" @TO@ SimpleName@@MethodName:contains:["NOSCRIPT"] @AT@ 5667 @LENGTH@ 10
------------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (exMessage != null && exMessage.contains("NOSCRIPT")) {  return true;} @AT@ 5680 @LENGTH@ 23
---------------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 5686 @LENGTH@ 12
------------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 5693 @LENGTH@ 4
---------INS ExpressionStatement@@Assignment:current=current.getCause() @TO@ Block@@WhileBody:{  String exMessage=current.getMessage();  if (exMessage != null && exMessage.contains("NOSCRIPT")) {    return true;  }  current=current.getCause();} @AT@ 5708 @LENGTH@ 29
------------INS Assignment@@current=current.getCause() @TO@ ExpressionStatement@@Assignment:current=current.getCause() @AT@ 5708 @LENGTH@ 28
---------------INS SimpleName@@current @TO@ Assignment@@current=current.getCause() @AT@ 5708 @LENGTH@ 7
---------------INS Operator@@= @TO@ Assignment@@current=current.getCause() @AT@ 5715 @LENGTH@ 1
---------------INS MethodInvocation@@current.getCause() @TO@ Assignment@@current=current.getCause() @AT@ 5718 @LENGTH@ 18
------------------INS SimpleName@@Name:current @TO@ MethodInvocation@@current.getCause() @AT@ 5718 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@current.getCause() @AT@ 5726 @LENGTH@ 10
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@private, boolean, MethodName:expectionContainsNoScriptError, Exception e,  @AT@ 5745 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 5752 @LENGTH@ 5


DEL MethodDeclaration@@public, void, MethodName:testComponentDocumentation, Exception,  @AT@ 2203 @LENGTH@ 292
---DEL Modifier@@public @AT@ 2203 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2210 @LENGTH@ 4
---DEL SimpleName@@MethodName:testComponentDocumentation @AT@ 2215 @LENGTH@ 26
---DEL SimpleType@@Exception @AT@ 2251 @LENGTH@ 9
---DEL VariableDeclarationStatement@@CamelContext context=new DefaultCamelContext(); @AT@ 2271 @LENGTH@ 49
------DEL SimpleType@@CamelContext @AT@ 2271 @LENGTH@ 12
------DEL VariableDeclarationFragment@@context=new DefaultCamelContext() @AT@ 2284 @LENGTH@ 35
---------DEL SimpleName@@context @AT@ 2284 @LENGTH@ 7
---------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 2294 @LENGTH@ 25
------------DEL New@@new @AT@ 2294 @LENGTH@ 3
------------DEL SimpleType@@DefaultCamelContext @AT@ 2298 @LENGTH@ 19
---DEL VariableDeclarationStatement@@String html=context.getComponentDocumentation("sap-trfc-destination"); @AT@ 2329 @LENGTH@ 72
------DEL SimpleType@@String @AT@ 2329 @LENGTH@ 6
------DEL VariableDeclarationFragment@@html=context.getComponentDocumentation("sap-trfc-destination") @AT@ 2336 @LENGTH@ 64
---------DEL SimpleName@@html @AT@ 2336 @LENGTH@ 4
---------DEL MethodInvocation@@context.getComponentDocumentation("sap-trfc-destination") @AT@ 2343 @LENGTH@ 57
------------DEL SimpleName@@Name:context @AT@ 2343 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponentDocumentation:["sap-trfc-destination"] @AT@ 2351 @LENGTH@ 49
---------------DEL StringLiteral@@"sap-trfc-destination" @AT@ 2377 @LENGTH@ 22
---DEL ExpressionStatement@@MethodInvocation:assertNotNull("Should have found some auto-generated HTML if on Java 7",html) @AT@ 2410 @LENGTH@ 79
------DEL MethodInvocation@@assertNotNull("Should have found some auto-generated HTML if on Java 7",html) @AT@ 2410 @LENGTH@ 78
---------DEL SimpleName@@MethodName:assertNotNull:["Should have found some auto-generated HTML if on Java 7", html] @AT@ 2410 @LENGTH@ 78
------------DEL StringLiteral@@"Should have found some auto-generated HTML if on Java 7" @AT@ 2424 @LENGTH@ 57
------------DEL SimpleName@@html @AT@ 2483 @LENGTH@ 4


UPD FieldDeclaration@@private, transient, static, final, Logger, [LOGGER=LoggerFactory.getLogger(DockerEventsConsumer.class)] @TO@ private, static, final, transient, Logger, [LOGGER=LoggerFactory.getLogger(DockerEventsConsumer.class)] @AT@ 1696 @LENGTH@ 99
---DEL Modifier@@transient @AT@ 1704 @LENGTH@ 9
---INS Modifier@@transient @TO@ FieldDeclaration@@private, transient, static, final, Logger, [LOGGER=LoggerFactory.getLogger(DockerEventsConsumer.class)] @AT@ 1717 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertEquals("2",localUserIds.get(0)) @TO@ MethodInvocation:assertTrue(localUserIds.contains("1")) @AT@ 4090 @LENGTH@ 39
---UPD MethodInvocation@@assertEquals("2",localUserIds.get(0)) @TO@ assertTrue(localUserIds.contains("1")) @AT@ 4090 @LENGTH@ 38
------UPD SimpleName@@MethodName:assertEquals:["2", localUserIds.get(0)] @TO@ MethodName:assertTrue:[localUserIds.contains("1")] @AT@ 4090 @LENGTH@ 38
---------DEL StringLiteral@@"2" @AT@ 4103 @LENGTH@ 3
---------UPD MethodInvocation@@localUserIds.get(0) @TO@ localUserIds.contains("1") @AT@ 4108 @LENGTH@ 19
------------UPD SimpleName@@MethodName:get:[0] @TO@ MethodName:contains:["1"] @AT@ 4121 @LENGTH@ 6
---------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:get:[0] @AT@ 4123 @LENGTH@ 3
---------------DEL NumberLiteral@@0 @AT@ 4125 @LENGTH@ 1


INS FieldDeclaration@@private, static, final, String, [SOAP_MESSAGE="<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>"] @TO@ TypeDeclaration@@[public]DefaultCxfBindingTest, Assert @AT@ 2249 @LENGTH@ 346
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [SOAP_MESSAGE="<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>"] @AT@ 2249 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [SOAP_MESSAGE="<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>"] @AT@ 2257 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [SOAP_MESSAGE="<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>"] @AT@ 2264 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [SOAP_MESSAGE="<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>"] @AT@ 2270 @LENGTH@ 6
---INS VariableDeclarationFragment@@SOAP_MESSAGE="<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>" @TO@ FieldDeclaration@@private, static, final, String, [SOAP_MESSAGE="<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>"] @AT@ 2277 @LENGTH@ 317
------INS SimpleName@@SOAP_MESSAGE @TO@ VariableDeclarationFragment@@SOAP_MESSAGE="<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>" @AT@ 2277 @LENGTH@ 12
------INS InfixExpression@@"<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>" @TO@ VariableDeclarationFragment@@SOAP_MESSAGE="<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>" @AT@ 2292 @LENGTH@ 302
---------INS StringLiteral@@"<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" @TO@ InfixExpression@@"<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>" @AT@ 2292 @LENGTH@ 73
---------INS Operator@@+ @TO@ InfixExpression@@"<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>" @AT@ 2365 @LENGTH@ 1
---------INS StringLiteral@@" xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" @TO@ InfixExpression@@"<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>" @AT@ 2376 @LENGTH@ 91
---------INS StringLiteral@@" <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>" @TO@ InfixExpression@@"<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>" @AT@ 2478 @LENGTH@ 73
---------INS StringLiteral@@" </soap:Body> </soap:Envelope>" @TO@ InfixExpression@@"<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"" + " xmlns=\"http://www.mycompany.com/test/\" xmlns:ns1=\"http://www.mycompany.com/test/1/\">" + " <soap:Body> <request> <ns1:identifier>TEST</ns1:identifier> </request>"+ " </soap:Body> </soap:Envelope>" @AT@ 2562 @LENGTH@ 32


DEL MethodDeclaration@@public, void, MethodName:testFSUmaskReset, Exception,  @AT@ 4751 @LENGTH@ 165
---DEL Modifier@@public @AT@ 4751 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 4758 @LENGTH@ 4
---DEL SimpleName@@MethodName:testFSUmaskReset @AT@ 4763 @LENGTH@ 16
---DEL SimpleType@@Exception @AT@ 4789 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:checkFSUMaskReset(true) @AT@ 4858 @LENGTH@ 24
------DEL MethodInvocation@@checkFSUMaskReset(true) @AT@ 4858 @LENGTH@ 23
---------DEL SimpleName@@MethodName:checkFSUMaskReset:[true] @AT@ 4858 @LENGTH@ 23
------------DEL BooleanLiteral@@true @AT@ 4876 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:checkFSUMaskReset(false) @AT@ 4887 @LENGTH@ 25
------DEL MethodInvocation@@checkFSUMaskReset(false) @AT@ 4887 @LENGTH@ 24
---------DEL SimpleName@@MethodName:checkFSUMaskReset:[false] @AT@ 4887 @LENGTH@ 24
------------DEL BooleanLiteral@@false @AT@ 4905 @LENGTH@ 5


UPD IfStatement@@if (stmtExecutionResult) {  rs=stmt.getResultSet();  shouldCloseResources=setResultSet(exchange,rs);} else {  int updateCount=stmt.getUpdateCount();  exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT,updateCount);} @TO@ if (stmtExecutionResult) {  rs=stmt.getResultSet();  shouldCloseResources=setResultSet(exchange,rs);} else {  int updateCount=stmt.getUpdateCount();  exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders());  exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT,updateCount);} @AT@ 8976 @LENGTH@ 318
---UPD Block@@ElseBody:{  int updateCount=stmt.getUpdateCount();  exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT,updateCount);} @TO@ ElseBody:{  int updateCount=stmt.getUpdateCount();  exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders());  exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT,updateCount);} @AT@ 9131 @LENGTH@ 163
------INS ExpressionStatement@@MethodInvocation:exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders()) @TO@ Block@@ElseBody:{  int updateCount=stmt.getUpdateCount();  exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT,updateCount);} @AT@ 9242 @LENGTH@ 69
---------INS MethodInvocation@@exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders()) @AT@ 9242 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders()) @AT@ 9242 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders()) @AT@ 9242 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders()) @AT@ 9242 @LENGTH@ 8
------------INS SimpleName@@MethodName:putAll:[exchange.getIn().getHeaders()] @TO@ MethodInvocation@@exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders()) @AT@ 9273 @LENGTH@ 37
---------------INS MethodInvocation@@exchange.getIn().getHeaders() @TO@ SimpleName@@MethodName:putAll:[exchange.getIn().getHeaders()] @AT@ 9280 @LENGTH@ 29
------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeaders() @AT@ 9280 @LENGTH@ 16
------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeaders() @AT@ 9280 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getIn().getHeaders() @AT@ 9297 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:addLine, String s,  @TO@ TypeDeclaration@@[static]PropertiesBuilder,  @AT@ 26768 @LENGTH@ 87
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addLine, String s,  @AT@ 26768 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addLine, String s,  @AT@ 26775 @LENGTH@ 4
---INS SimpleName@@MethodName:addLine @TO@ MethodDeclaration@@public, void, MethodName:addLine, String s,  @AT@ 26780 @LENGTH@ 7
---INS SingleVariableDeclaration@@String s @TO@ MethodDeclaration@@public, void, MethodName:addLine, String s,  @AT@ 26788 @LENGTH@ 8
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String s @AT@ 26788 @LENGTH@ 6
------INS SimpleName@@s @TO@ SingleVariableDeclaration@@String s @AT@ 26795 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:buf.append(s).append(CR) @TO@ MethodDeclaration@@public, void, MethodName:addLine, String s,  @AT@ 26820 @LENGTH@ 25
------INS MethodInvocation@@buf.append(s).append(CR) @TO@ ExpressionStatement@@MethodInvocation:buf.append(s).append(CR) @AT@ 26820 @LENGTH@ 24
---------INS MethodInvocation@@MethodName:append:[s] @TO@ MethodInvocation@@buf.append(s).append(CR) @AT@ 26820 @LENGTH@ 13
------------INS SimpleName@@s @TO@ MethodInvocation@@MethodName:append:[s] @AT@ 26831 @LENGTH@ 1
---------INS SimpleName@@Name:buf @TO@ MethodInvocation@@buf.append(s).append(CR) @AT@ 26820 @LENGTH@ 3
---------INS SimpleName@@MethodName:append:[CR] @TO@ MethodInvocation@@buf.append(s).append(CR) @AT@ 26834 @LENGTH@ 10
------------INS SimpleName@@CR @TO@ SimpleName@@MethodName:append:[CR] @AT@ 26841 @LENGTH@ 2


UPD MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @TO@ protected, void, MethodName:initChannel, Channel ch, Exception,  @AT@ 3498 @LENGTH@ 600
---UPD Modifier@@public @TO@ protected @AT@ 3498 @LENGTH@ 6
---DEL SimpleType@@ChannelPipeline @AT@ 3505 @LENGTH@ 15
---DEL SimpleName@@MethodName:getPipeline @AT@ 3521 @LENGTH@ 11
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 3531 @LENGTH@ 4
---INS SimpleName@@MethodName:initChannel @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 3536 @LENGTH@ 11
---INS SingleVariableDeclaration@@Channel ch @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 3548 @LENGTH@ 10
------INS SimpleType@@Channel @TO@ SingleVariableDeclaration@@Channel ch @AT@ 3548 @LENGTH@ 7
------INS SimpleName@@ch @TO@ SingleVariableDeclaration@@Channel ch @AT@ 3556 @LENGTH@ 2
---MOV ExpressionStatement@@Assignment:clientInvoked=true @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 3566 @LENGTH@ 21
---UPD VariableDeclarationStatement@@ChannelPipeline channelPipeline=Channels.pipeline(); @TO@ ChannelPipeline channelPipeline=ch.pipeline(); @AT@ 3601 @LENGTH@ 54
------UPD VariableDeclarationFragment@@channelPipeline=Channels.pipeline() @TO@ channelPipeline=ch.pipeline() @AT@ 3617 @LENGTH@ 37
---------UPD MethodInvocation@@Channels.pipeline() @TO@ ch.pipeline() @AT@ 3635 @LENGTH@ 19
------------UPD SimpleName@@Name:Channels @TO@ Name:ch @AT@ 3635 @LENGTH@ 8
---DEL ReturnStatement@@SimpleName:channelPipeline @AT@ 4065 @LENGTH@ 23
------DEL SimpleName@@channelPipeline @AT@ 4072 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:doesNotMatchOnNonMatchingResourcesTypes, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]ResourceProcessorHandlerMethodReturnValueHandlerUnitTests,  @AT@ 10073 @LENGTH@ 476
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesNotMatchOnNonMatchingResourcesTypes, Exception,  @AT@ 10073 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesNotMatchOnNonMatchingResourcesTypes, Exception,  @AT@ 10080 @LENGTH@ 4
---INS SimpleName@@MethodName:doesNotMatchOnNonMatchingResourcesTypes @TO@ MethodDeclaration@@public, void, MethodName:doesNotMatchOnNonMatchingResourcesTypes, Exception,  @AT@ 10085 @LENGTH@ 39
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:doesNotMatchOnNonMatchingResourcesTypes, Exception,  @AT@ 10134 @LENGTH@ 9
---INS VariableDeclarationStatement@@Resource<Object> resource=new Resource<Object>(new Object()); @TO@ MethodDeclaration@@public, void, MethodName:doesNotMatchOnNonMatchingResourcesTypes, Exception,  @AT@ 10149 @LENGTH@ 63
------INS ParameterizedType@@Resource<Object> @TO@ VariableDeclarationStatement@@Resource<Object> resource=new Resource<Object>(new Object()); @AT@ 10149 @LENGTH@ 16
---------INS SimpleType@@Resource @TO@ ParameterizedType@@Resource<Object> @AT@ 10149 @LENGTH@ 8
---------INS SimpleType@@Object @TO@ ParameterizedType@@Resource<Object> @AT@ 10158 @LENGTH@ 6
------INS VariableDeclarationFragment@@resource=new Resource<Object>(new Object()) @TO@ VariableDeclarationStatement@@Resource<Object> resource=new Resource<Object>(new Object()); @AT@ 10166 @LENGTH@ 45
---------INS SimpleName@@resource @TO@ VariableDeclarationFragment@@resource=new Resource<Object>(new Object()) @AT@ 10166 @LENGTH@ 8
---------INS ClassInstanceCreation@@Resource<Object>[new Object()] @TO@ VariableDeclarationFragment@@resource=new Resource<Object>(new Object()) @AT@ 10177 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@Resource<Object>[new Object()] @AT@ 10177 @LENGTH@ 3
------------INS ParameterizedType@@Resource<Object> @TO@ ClassInstanceCreation@@Resource<Object>[new Object()] @AT@ 10181 @LENGTH@ 16
---------------INS SimpleType@@Resource @TO@ ParameterizedType@@Resource<Object> @AT@ 10181 @LENGTH@ 8
---------------INS SimpleType@@Object @TO@ ParameterizedType@@Resource<Object> @AT@ 10190 @LENGTH@ 6
------------INS ClassInstanceCreation@@Object[] @TO@ ClassInstanceCreation@@Resource<Object>[new Object()] @AT@ 10198 @LENGTH@ 12
---------------INS New@@new @TO@ ClassInstanceCreation@@Object[] @AT@ 10198 @LENGTH@ 3
---------------INS SimpleType@@Object @TO@ ClassInstanceCreation@@Object[] @AT@ 10202 @LENGTH@ 6
---INS VariableDeclarationStatement@@PagedResources<Resource<Object>> pagedResources=new PagedResources<Resource<Object>>(Collections.singleton(resource),new PageMetadata(1,0,10)); @TO@ MethodDeclaration@@public, void, MethodName:doesNotMatchOnNonMatchingResourcesTypes, Exception,  @AT@ 10215 @LENGTH@ 153
------INS ParameterizedType@@PagedResources<Resource<Object>> @TO@ VariableDeclarationStatement@@PagedResources<Resource<Object>> pagedResources=new PagedResources<Resource<Object>>(Collections.singleton(resource),new PageMetadata(1,0,10)); @AT@ 10215 @LENGTH@ 32
---------INS SimpleType@@PagedResources @TO@ ParameterizedType@@PagedResources<Resource<Object>> @AT@ 10215 @LENGTH@ 14
---------INS ParameterizedType@@Resource<Object> @TO@ ParameterizedType@@PagedResources<Resource<Object>> @AT@ 10230 @LENGTH@ 16
------------INS SimpleType@@Resource @TO@ ParameterizedType@@Resource<Object> @AT@ 10230 @LENGTH@ 8
------------INS SimpleType@@Object @TO@ ParameterizedType@@Resource<Object> @AT@ 10239 @LENGTH@ 6
------INS VariableDeclarationFragment@@pagedResources=new PagedResources<Resource<Object>>(Collections.singleton(resource),new PageMetadata(1,0,10)) @TO@ VariableDeclarationStatement@@PagedResources<Resource<Object>> pagedResources=new PagedResources<Resource<Object>>(Collections.singleton(resource),new PageMetadata(1,0,10)); @AT@ 10248 @LENGTH@ 119
---------INS SimpleName@@pagedResources @TO@ VariableDeclarationFragment@@pagedResources=new PagedResources<Resource<Object>>(Collections.singleton(resource),new PageMetadata(1,0,10)) @AT@ 10248 @LENGTH@ 14
---------INS ClassInstanceCreation@@PagedResources<Resource<Object>>[Collections.singleton(resource), new PageMetadata(1,0,10)] @TO@ VariableDeclarationFragment@@pagedResources=new PagedResources<Resource<Object>>(Collections.singleton(resource),new PageMetadata(1,0,10)) @AT@ 10265 @LENGTH@ 102
------------INS New@@new @TO@ ClassInstanceCreation@@PagedResources<Resource<Object>>[Collections.singleton(resource), new PageMetadata(1,0,10)] @AT@ 10265 @LENGTH@ 3
------------INS ParameterizedType@@PagedResources<Resource<Object>> @TO@ ClassInstanceCreation@@PagedResources<Resource<Object>>[Collections.singleton(resource), new PageMetadata(1,0,10)] @AT@ 10269 @LENGTH@ 32
---------------INS SimpleType@@PagedResources @TO@ ParameterizedType@@PagedResources<Resource<Object>> @AT@ 10269 @LENGTH@ 14
---------------INS ParameterizedType@@Resource<Object> @TO@ ParameterizedType@@PagedResources<Resource<Object>> @AT@ 10284 @LENGTH@ 16
------------------INS SimpleType@@Resource @TO@ ParameterizedType@@Resource<Object> @AT@ 10284 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ParameterizedType@@Resource<Object> @AT@ 10293 @LENGTH@ 6
------------INS MethodInvocation@@Collections.singleton(resource) @TO@ ClassInstanceCreation@@PagedResources<Resource<Object>>[Collections.singleton(resource), new PageMetadata(1,0,10)] @AT@ 10307 @LENGTH@ 31
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(resource) @AT@ 10307 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singleton:[resource] @TO@ MethodInvocation@@Collections.singleton(resource) @AT@ 10319 @LENGTH@ 19
------------------INS SimpleName@@resource @TO@ SimpleName@@MethodName:singleton:[resource] @AT@ 10329 @LENGTH@ 8
------------INS ClassInstanceCreation@@PageMetadata[1, 0, 10] @TO@ ClassInstanceCreation@@PagedResources<Resource<Object>>[Collections.singleton(resource), new PageMetadata(1,0,10)] @AT@ 10340 @LENGTH@ 26
---------------INS New@@new @TO@ ClassInstanceCreation@@PageMetadata[1, 0, 10] @AT@ 10340 @LENGTH@ 3
---------------INS SimpleType@@PageMetadata @TO@ ClassInstanceCreation@@PageMetadata[1, 0, 10] @AT@ 10344 @LENGTH@ 12
---------------INS NumberLiteral@@1 @TO@ ClassInstanceCreation@@PageMetadata[1, 0, 10] @AT@ 10357 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@PageMetadata[1, 0, 10] @AT@ 10360 @LENGTH@ 1
---------------INS NumberLiteral@@10 @TO@ ClassInstanceCreation@@PageMetadata[1, 0, 10] @AT@ 10363 @LENGTH@ 2
---INS VariableDeclarationStatement@@TypeInformation<?> type=ClassTypeInformation.from(RepositoryLinksResource.class); @TO@ MethodDeclaration@@public, void, MethodName:doesNotMatchOnNonMatchingResourcesTypes, Exception,  @AT@ 10372 @LENGTH@ 83
------INS ParameterizedType@@TypeInformation<?> @TO@ VariableDeclarationStatement@@TypeInformation<?> type=ClassTypeInformation.from(RepositoryLinksResource.class); @AT@ 10372 @LENGTH@ 18
---------INS SimpleType@@TypeInformation @TO@ ParameterizedType@@TypeInformation<?> @AT@ 10372 @LENGTH@ 15
---------INS WildcardType@@? @TO@ ParameterizedType@@TypeInformation<?> @AT@ 10388 @LENGTH@ 1
------INS VariableDeclarationFragment@@type=ClassTypeInformation.from(RepositoryLinksResource.class) @TO@ VariableDeclarationStatement@@TypeInformation<?> type=ClassTypeInformation.from(RepositoryLinksResource.class); @AT@ 10391 @LENGTH@ 63
---------INS SimpleName@@type @TO@ VariableDeclarationFragment@@type=ClassTypeInformation.from(RepositoryLinksResource.class) @AT@ 10391 @LENGTH@ 4
---------INS MethodInvocation@@ClassTypeInformation.from(RepositoryLinksResource.class) @TO@ VariableDeclarationFragment@@type=ClassTypeInformation.from(RepositoryLinksResource.class) @AT@ 10398 @LENGTH@ 56
------------INS SimpleName@@Name:ClassTypeInformation @TO@ MethodInvocation@@ClassTypeInformation.from(RepositoryLinksResource.class) @AT@ 10398 @LENGTH@ 20
------------INS SimpleName@@MethodName:from:[RepositoryLinksResource.class] @TO@ MethodInvocation@@ClassTypeInformation.from(RepositoryLinksResource.class) @AT@ 10419 @LENGTH@ 35
---------------INS TypeLiteral@@RepositoryLinksResource.class @TO@ SimpleName@@MethodName:from:[RepositoryLinksResource.class] @AT@ 10424 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:assertThat(ResourcesProcessorWrapper.isValueTypeMatch(pagedResources,type),is(false)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotMatchOnNonMatchingResourcesTypes, Exception,  @AT@ 10458 @LENGTH@ 88
------INS MethodInvocation@@assertThat(ResourcesProcessorWrapper.isValueTypeMatch(pagedResources,type),is(false)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(ResourcesProcessorWrapper.isValueTypeMatch(pagedResources,type),is(false)) @AT@ 10458 @LENGTH@ 87
---------INS SimpleName@@MethodName:assertThat:[ResourcesProcessorWrapper.isValueTypeMatch(pagedResources,type), is(false)] @TO@ MethodInvocation@@assertThat(ResourcesProcessorWrapper.isValueTypeMatch(pagedResources,type),is(false)) @AT@ 10458 @LENGTH@ 87
------------INS MethodInvocation@@ResourcesProcessorWrapper.isValueTypeMatch(pagedResources,type) @TO@ SimpleName@@MethodName:assertThat:[ResourcesProcessorWrapper.isValueTypeMatch(pagedResources,type), is(false)] @AT@ 10469 @LENGTH@ 64
---------------INS SimpleName@@Name:ResourcesProcessorWrapper @TO@ MethodInvocation@@ResourcesProcessorWrapper.isValueTypeMatch(pagedResources,type) @AT@ 10469 @LENGTH@ 25
---------------INS SimpleName@@MethodName:isValueTypeMatch:[pagedResources, type] @TO@ MethodInvocation@@ResourcesProcessorWrapper.isValueTypeMatch(pagedResources,type) @AT@ 10495 @LENGTH@ 38
------------------INS SimpleName@@pagedResources @TO@ SimpleName@@MethodName:isValueTypeMatch:[pagedResources, type] @AT@ 10512 @LENGTH@ 14
------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:isValueTypeMatch:[pagedResources, type] @AT@ 10528 @LENGTH@ 4
------------INS MethodInvocation@@is(false) @TO@ SimpleName@@MethodName:assertThat:[ResourcesProcessorWrapper.isValueTypeMatch(pagedResources,type), is(false)] @AT@ 10535 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 10535 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 10538 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:returns404WhenTryingToDeleteANonExistingResource, Exception,  @TO@ TypeDeclaration@@[@Transactional, @ContextConfiguration(classes=JpaRepositoryConfig.class), public]JpaWebTests, AbstractWebIntegrationTests @AT@ 17877 @LENGTH@ 242
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:returns404WhenTryingToDeleteANonExistingResource, Exception,  @AT@ 17877 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:returns404WhenTryingToDeleteANonExistingResource, Exception,  @AT@ 17884 @LENGTH@ 4
---INS SimpleName@@MethodName:returns404WhenTryingToDeleteANonExistingResource @TO@ MethodDeclaration@@public, void, MethodName:returns404WhenTryingToDeleteANonExistingResource, Exception,  @AT@ 17889 @LENGTH@ 48
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:returns404WhenTryingToDeleteANonExistingResource, Exception,  @AT@ 17947 @LENGTH@ 9
---INS VariableDeclarationStatement@@Link authorsLink=discoverUnique("authors"); @TO@ MethodDeclaration@@public, void, MethodName:returns404WhenTryingToDeleteANonExistingResource, Exception,  @AT@ 17962 @LENGTH@ 45
------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link authorsLink=discoverUnique("authors"); @AT@ 17962 @LENGTH@ 4
------INS VariableDeclarationFragment@@authorsLink=discoverUnique("authors") @TO@ VariableDeclarationStatement@@Link authorsLink=discoverUnique("authors"); @AT@ 17967 @LENGTH@ 39
---------INS SimpleName@@authorsLink @TO@ VariableDeclarationFragment@@authorsLink=discoverUnique("authors") @AT@ 17967 @LENGTH@ 11
---------INS MethodInvocation@@discoverUnique("authors") @TO@ VariableDeclarationFragment@@authorsLink=discoverUnique("authors") @AT@ 17981 @LENGTH@ 25
------------INS SimpleName@@MethodName:discoverUnique:["authors"] @TO@ MethodInvocation@@discoverUnique("authors") @AT@ 17981 @LENGTH@ 25
---------------INS StringLiteral@@"authors" @TO@ SimpleName@@MethodName:discoverUnique:["authors"] @AT@ 17996 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:mvc.perform(delete(authorsLink.getHref().concat("/{id}"),4711)).andExpect(status().isNotFound()) @TO@ MethodDeclaration@@public, void, MethodName:returns404WhenTryingToDeleteANonExistingResource, Exception,  @AT@ 18011 @LENGTH@ 105
------INS MethodInvocation@@mvc.perform(delete(authorsLink.getHref().concat("/{id}"),4711)).andExpect(status().isNotFound()) @TO@ ExpressionStatement@@MethodInvocation:mvc.perform(delete(authorsLink.getHref().concat("/{id}"),4711)).andExpect(status().isNotFound()) @AT@ 18011 @LENGTH@ 104
---------INS MethodInvocation@@MethodName:perform:[delete(authorsLink.getHref().concat("/{id}"),4711)] @TO@ MethodInvocation@@mvc.perform(delete(authorsLink.getHref().concat("/{id}"),4711)).andExpect(status().isNotFound()) @AT@ 18011 @LENGTH@ 64
------------INS MethodInvocation@@delete(authorsLink.getHref().concat("/{id}"),4711) @TO@ MethodInvocation@@MethodName:perform:[delete(authorsLink.getHref().concat("/{id}"),4711)] @AT@ 18023 @LENGTH@ 51
---------------INS SimpleName@@MethodName:delete:[authorsLink.getHref().concat("/{id}"), 4711] @TO@ MethodInvocation@@delete(authorsLink.getHref().concat("/{id}"),4711) @AT@ 18023 @LENGTH@ 51
------------------INS MethodInvocation@@authorsLink.getHref().concat("/{id}") @TO@ SimpleName@@MethodName:delete:[authorsLink.getHref().concat("/{id}"), 4711] @AT@ 18030 @LENGTH@ 37
---------------------INS MethodInvocation@@MethodName:getHref:[] @TO@ MethodInvocation@@authorsLink.getHref().concat("/{id}") @AT@ 18030 @LENGTH@ 21
---------------------INS SimpleName@@Name:authorsLink @TO@ MethodInvocation@@authorsLink.getHref().concat("/{id}") @AT@ 18030 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:concat:["/{id}"] @TO@ MethodInvocation@@authorsLink.getHref().concat("/{id}") @AT@ 18052 @LENGTH@ 15
------------------------INS StringLiteral@@"/{id}" @TO@ SimpleName@@MethodName:concat:["/{id}"] @AT@ 18059 @LENGTH@ 7
------------------INS NumberLiteral@@4711 @TO@ SimpleName@@MethodName:delete:[authorsLink.getHref().concat("/{id}"), 4711] @AT@ 18069 @LENGTH@ 4
---------INS SimpleName@@Name:mvc @TO@ MethodInvocation@@mvc.perform(delete(authorsLink.getHref().concat("/{id}"),4711)).andExpect(status().isNotFound()) @AT@ 18011 @LENGTH@ 3
---------INS SimpleName@@MethodName:andExpect:[status().isNotFound()] @TO@ MethodInvocation@@mvc.perform(delete(authorsLink.getHref().concat("/{id}"),4711)).andExpect(status().isNotFound()) @AT@ 18083 @LENGTH@ 32
------------INS MethodInvocation@@status().isNotFound() @TO@ SimpleName@@MethodName:andExpect:[status().isNotFound()] @AT@ 18093 @LENGTH@ 21
---------------INS MethodInvocation@@MethodName:status:[] @TO@ MethodInvocation@@status().isNotFound() @AT@ 18093 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isNotFound:[] @TO@ MethodInvocation@@status().isNotFound() @AT@ 18102 @LENGTH@ 12


UPD TypeDeclaration@@[static, abstract]DateConvertingAuditableBeanWrapper, [AuditableBeanWrapper] @TO@ [abstract, static]DateConvertingAuditableBeanWrapper, [AuditableBeanWrapper] @AT@ 3495 @LENGTH@ 1542
---INS Modifier@@abstract @TO@ TypeDeclaration@@[static, abstract]DateConvertingAuditableBeanWrapper, [AuditableBeanWrapper] @AT@ 3495 @LENGTH@ 8
---DEL Modifier@@abstract @AT@ 3502 @LENGTH@ 8


INS SuperConstructorInvocation@@super(CxfRsEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:CxfRsComponent,  @AT@ 1576 @LENGTH@ 27
---INS TypeLiteral@@CxfRsEndpoint.class @TO@ SuperConstructorInvocation@@super(CxfRsEndpoint.class);
 @AT@ 1582 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"statement\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"statement\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 2069 @LENGTH@ 92
---UPD MethodInvocation@@assertTrue(json.contains("\"statement\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ assertTrue(json.contains("\"statement\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 2069 @LENGTH@ 91
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"statement\": { \"kind\": \"parameter\", \"type\": \"string\"")] @TO@ MethodName:assertTrue:[json.contains("\"statement\": { \"kind\": \"path\", \"type\": \"string\"")] @AT@ 2069 @LENGTH@ 91
---------UPD MethodInvocation@@json.contains("\"statement\": { \"kind\": \"parameter\", \"type\": \"string\"") @TO@ json.contains("\"statement\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 2080 @LENGTH@ 79
------------UPD SimpleName@@MethodName:contains:["\"statement\": { \"kind\": \"parameter\", \"type\": \"string\""] @TO@ MethodName:contains:["\"statement\": { \"kind\": \"path\", \"type\": \"string\""] @AT@ 2085 @LENGTH@ 74
---------------UPD StringLiteral@@"\"statement\": { \"kind\": \"parameter\", \"type\": \"string\"" @TO@ "\"statement\": { \"kind\": \"path\", \"type\": \"string\"" @AT@ 2094 @LENGTH@ 64


UPD ForStatement@@for (int add=low(), j=0; add <= high(); ++add, ++j) {  addresses[j]=format(toArray(add));} @TO@ for (int add=low(); add <= high(); ++add) {  addresses[j]=format(toArray(add));  ++j;} @AT@ 8279 @LENGTH@ 124
---UPD VariableDeclarationExpression@@int add=low(), j=0 @TO@ int add=low() @AT@ 8284 @LENGTH@ 22
------DEL VariableDeclarationFragment@@j=0 @AT@ 8301 @LENGTH@ 5
---------DEL SimpleName@@j @AT@ 8301 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 8305 @LENGTH@ 1
---DEL PrefixExpression@@++j @AT@ 8330 @LENGTH@ 3
---INS ExpressionStatement@@PrefixExpression:++j @TO@ ForStatement@@for (int add=low(), j=0; add <= high(); ++add, ++j) {  addresses[j]=format(toArray(add));} @AT@ 8417 @LENGTH@ 4
------INS PrefixExpression@@++j @TO@ ExpressionStatement@@PrefixExpression:++j @AT@ 8417 @LENGTH@ 3
---------MOV Operator@@++ @TO@ PrefixExpression@@++j @AT@ 8330 @LENGTH@ 2
---------MOV SimpleName@@j @TO@ PrefixExpression@@++j @AT@ 8332 @LENGTH@ 1


UPD IfStatement@@if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(configuration.isNeedClientAuth());  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(configuration.isNeedClientAuth());  if (configuration.getSslContextParameters() == null) {    engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 6417 @LENGTH@ 343
---UPD Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(configuration.isNeedClientAuth());  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(configuration.isNeedClientAuth());  if (configuration.getSslContextParameters() == null) {    engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 6441 @LENGTH@ 319
------INS IfStatement@@if (configuration.getSslContextParameters() == null) {  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));} @TO@ Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(configuration.isNeedClientAuth());  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));  return new SslHandler(engine);} @AT@ 6632 @LENGTH@ 248
---------INS InfixExpression@@configuration.getSslContextParameters() == null @TO@ IfStatement@@if (configuration.getSslContextParameters() == null) {  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));} @AT@ 6636 @LENGTH@ 47
------------INS MethodInvocation@@configuration.getSslContextParameters() @TO@ InfixExpression@@configuration.getSslContextParameters() == null @AT@ 6636 @LENGTH@ 39
---------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getSslContextParameters() @AT@ 6636 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getSslContextParameters:[] @TO@ MethodInvocation@@configuration.getSslContextParameters() @AT@ 6650 @LENGTH@ 25
------------INS Operator@@== @TO@ InfixExpression@@configuration.getSslContextParameters() == null @AT@ 6675 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@configuration.getSslContextParameters() == null @AT@ 6679 @LENGTH@ 4
---------INS Block@@ThenBody:{  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));} @TO@ IfStatement@@if (configuration.getSslContextParameters() == null) {  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));} @AT@ 6685 @LENGTH@ 195
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(configuration.getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));} @AT@ 6632 @LENGTH@ 75
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(configuration.getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));} @AT@ 6632 @LENGTH@ 75


UPD ExpressionStatement@@MethodInvocation:from("direct:bicycle2").choice().when(PredicateBuilder.isLessThan(ExpressionBuilder.languageExpression("JsonPath","$.store.bicycle.price"),ExpressionBuilder.constantExpression(20))).to("mock:cheap").otherwise().to("mock:expensive") @TO@ MethodInvocation:from("direct:bicycle2").choice().when(PredicateBuilder.isLessThan(ExpressionBuilder.languageExpression("jsonpath","$.store.bicycle.price"),ExpressionBuilder.constantExpression(20))).to("mock:cheap").otherwise().to("mock:expensive") @AT@ 2048 @LENGTH@ 347
---UPD MethodInvocation@@from("direct:bicycle2").choice().when(PredicateBuilder.isLessThan(ExpressionBuilder.languageExpression("JsonPath","$.store.bicycle.price"),ExpressionBuilder.constantExpression(20))).to("mock:cheap").otherwise().to("mock:expensive") @TO@ from("direct:bicycle2").choice().when(PredicateBuilder.isLessThan(ExpressionBuilder.languageExpression("jsonpath","$.store.bicycle.price"),ExpressionBuilder.constantExpression(20))).to("mock:cheap").otherwise().to("mock:expensive") @AT@ 2048 @LENGTH@ 346
------UPD MethodInvocation@@MethodName:when:[PredicateBuilder.isLessThan(ExpressionBuilder.languageExpression("JsonPath","$.store.bicycle.price"),ExpressionBuilder.constantExpression(20))] @TO@ MethodName:when:[PredicateBuilder.isLessThan(ExpressionBuilder.languageExpression("jsonpath","$.store.bicycle.price"),ExpressionBuilder.constantExpression(20))] @AT@ 2048 @LENGTH@ 225
---------UPD MethodInvocation@@PredicateBuilder.isLessThan(ExpressionBuilder.languageExpression("JsonPath","$.store.bicycle.price"),ExpressionBuilder.constantExpression(20)) @TO@ PredicateBuilder.isLessThan(ExpressionBuilder.languageExpression("jsonpath","$.store.bicycle.price"),ExpressionBuilder.constantExpression(20)) @AT@ 2128 @LENGTH@ 144
------------UPD SimpleName@@MethodName:isLessThan:[ExpressionBuilder.languageExpression("JsonPath","$.store.bicycle.price"), ExpressionBuilder.constantExpression(20)] @TO@ MethodName:isLessThan:[ExpressionBuilder.languageExpression("jsonpath","$.store.bicycle.price"), ExpressionBuilder.constantExpression(20)] @AT@ 2145 @LENGTH@ 127
---------------UPD MethodInvocation@@ExpressionBuilder.languageExpression("JsonPath","$.store.bicycle.price") @TO@ ExpressionBuilder.languageExpression("jsonpath","$.store.bicycle.price") @AT@ 2156 @LENGTH@ 73
------------------UPD SimpleName@@MethodName:languageExpression:["JsonPath", "$.store.bicycle.price"] @TO@ MethodName:languageExpression:["jsonpath", "$.store.bicycle.price"] @AT@ 2174 @LENGTH@ 55
---------------------UPD StringLiteral@@"JsonPath" @TO@ "jsonpath" @AT@ 2193 @LENGTH@ 10


UPD VariableDeclarationStatement@@AggregationStrategyBeanInfo bi=new AggregationStrategyBeanInfo(getCamelContext(),type,found); @TO@ AggregationStrategyBeanInfo bi=new AggregationStrategyBeanInfo(type,found); @AT@ 7330 @LENGTH@ 97
---UPD VariableDeclarationFragment@@bi=new AggregationStrategyBeanInfo(getCamelContext(),type,found) @TO@ bi=new AggregationStrategyBeanInfo(type,found) @AT@ 7358 @LENGTH@ 68
------UPD ClassInstanceCreation@@AggregationStrategyBeanInfo[getCamelContext(), type, found] @TO@ AggregationStrategyBeanInfo[type, found] @AT@ 7363 @LENGTH@ 63
---------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 7395 @LENGTH@ 17


DEL MethodDeclaration@@boolean, MethodName:isFirst,  @AT@ 1758 @LENGTH@ 40
---DEL PrimitiveType@@boolean @AT@ 1750 @LENGTH@ 7
---DEL SimpleName@@MethodName:isFirst @AT@ 1758 @LENGTH@ 7
---DEL ReturnStatement@@InfixExpression:getIndex() == 0 @AT@ 1772 @LENGTH@ 23
------DEL InfixExpression@@getIndex() == 0 @AT@ 1779 @LENGTH@ 15
---------DEL MethodInvocation@@MethodName:getIndex:[] @AT@ 1779 @LENGTH@ 10
---------DEL Operator@@== @AT@ 1789 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 1793 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:WebTestUtils.initWebTest() @TO@ MethodInvocation:TestMvcClient.initWebTest() @AT@ 1573 @LENGTH@ 27
---UPD MethodInvocation@@WebTestUtils.initWebTest() @TO@ TestMvcClient.initWebTest() @AT@ 1573 @LENGTH@ 26
------UPD SimpleName@@Name:WebTestUtils @TO@ Name:TestMvcClient @AT@ 1573 @LENGTH@ 12


UPD MethodDeclaration@@private, static, boolean, MethodName:isValueTypeMatch, Resources<?> resources, TypeInformation<?> target,  @TO@ static, boolean, MethodName:isValueTypeMatch, Resources<?> resources, TypeInformation<?> target,  @AT@ 15188 @LENGTH@ 632
---DEL Modifier@@private @AT@ 15188 @LENGTH@ 7
---INS IfStatement@@if (resources == null) {  return false;} @TO@ MethodDeclaration@@private, static, boolean, MethodName:isValueTypeMatch, Resources<?> resources, TypeInformation<?> target,  @AT@ 15269 @LENGTH@ 47
------INS InfixExpression@@resources == null @TO@ IfStatement@@if (resources == null) {  return false;} @AT@ 15273 @LENGTH@ 17
---------MOV SimpleName@@resources @TO@ InfixExpression@@resources == null @AT@ 15289 @LENGTH@ 9
---------MOV Operator@@== @TO@ InfixExpression@@resources == null @AT@ 15298 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@resources == null @AT@ 15302 @LENGTH@ 4
------MOV Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (resources == null) {  return false;} @AT@ 15357 @LENGTH@ 24
---DEL IfStatement@@if (resources == null || !Resources.class.equals(resources.getClass())) {  return false;} @AT@ 15285 @LENGTH@ 96
------DEL InfixExpression@@resources == null || !Resources.class.equals(resources.getClass()) @AT@ 15289 @LENGTH@ 66
---------DEL InfixExpression@@resources == null @AT@ 15289 @LENGTH@ 17
---------DEL Operator@@|| @AT@ 15306 @LENGTH@ 2
---------DEL PrefixExpression@@!Resources.class.equals(resources.getClass()) @AT@ 15310 @LENGTH@ 45
------------DEL Operator@@! @AT@ 15310 @LENGTH@ 1
------------DEL MethodInvocation@@Resources.class.equals(resources.getClass()) @AT@ 15311 @LENGTH@ 44
---------------DEL TypeLiteral@@Resources.class @AT@ 15311 @LENGTH@ 15
---------------DEL SimpleName@@MethodName:equals:[resources.getClass()] @AT@ 15327 @LENGTH@ 28
------------------DEL MethodInvocation@@resources.getClass() @AT@ 15334 @LENGTH@ 20
---INS VariableDeclarationStatement@@Class<?> resourcesType=resources.getClass(); @TO@ MethodDeclaration@@private, static, boolean, MethodName:isValueTypeMatch, Resources<?> resources, TypeInformation<?> target,  @AT@ 15538 @LENGTH@ 46
------INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class<?> resourcesType=resources.getClass(); @AT@ 15538 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 15538 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 15544 @LENGTH@ 1
------INS VariableDeclarationFragment@@resourcesType=resources.getClass() @TO@ VariableDeclarationStatement@@Class<?> resourcesType=resources.getClass(); @AT@ 15547 @LENGTH@ 36
---------INS SimpleName@@resourcesType @TO@ VariableDeclarationFragment@@resourcesType=resources.getClass() @AT@ 15547 @LENGTH@ 13
---------INS MethodInvocation@@resources.getClass() @TO@ VariableDeclarationFragment@@resourcesType=resources.getClass() @AT@ 15563 @LENGTH@ 20
------------MOV SimpleName@@Name:resources @TO@ MethodInvocation@@resources.getClass() @AT@ 15334 @LENGTH@ 9
------------MOV SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@resources.getClass() @AT@ 15344 @LENGTH@ 10
---UPD VariableDeclarationStatement@@TypeInformation<?> resourceTypeInformation=target.getSuperTypeInformation(Resources.class).getComponentType(); @TO@ TypeInformation<?> resourceTypeInformation=target.getSuperTypeInformation(resourcesType).getComponentType(); @AT@ 15603 @LENGTH@ 112
------UPD VariableDeclarationFragment@@resourceTypeInformation=target.getSuperTypeInformation(Resources.class).getComponentType() @TO@ resourceTypeInformation=target.getSuperTypeInformation(resourcesType).getComponentType() @AT@ 15622 @LENGTH@ 92
---------UPD MethodInvocation@@target.getSuperTypeInformation(Resources.class).getComponentType() @TO@ target.getSuperTypeInformation(resourcesType).getComponentType() @AT@ 15648 @LENGTH@ 66
------------UPD MethodInvocation@@MethodName:getSuperTypeInformation:[Resources.class] @TO@ MethodName:getSuperTypeInformation:[resourcesType] @AT@ 15648 @LENGTH@ 47
---------------INS SimpleName@@resourcesType @TO@ MethodInvocation@@MethodName:getSuperTypeInformation:[Resources.class] @AT@ 15665 @LENGTH@ 13
---------------DEL TypeLiteral@@Resources.class @AT@ 15679 @LENGTH@ 15


UPD VariableDeclarationStatement@@Pattern pattern=Pattern.compile("\\p{Punct}?" + Pattern.quote(property.getFieldName()) + "(\\p{Punct}|\\w)?"); @TO@ Pattern pattern=Pattern.compile("\\b" + Pattern.quote(property.getFieldName()) + "\\b"); @AT@ 14488 @LENGTH@ 112
---UPD VariableDeclarationFragment@@pattern=Pattern.compile("\\p{Punct}?" + Pattern.quote(property.getFieldName()) + "(\\p{Punct}|\\w)?") @TO@ pattern=Pattern.compile("\\b" + Pattern.quote(property.getFieldName()) + "\\b") @AT@ 14496 @LENGTH@ 103
------UPD MethodInvocation@@Pattern.compile("\\p{Punct}?" + Pattern.quote(property.getFieldName()) + "(\\p{Punct}|\\w)?") @TO@ Pattern.compile("\\b" + Pattern.quote(property.getFieldName()) + "\\b") @AT@ 14506 @LENGTH@ 93
---------UPD SimpleName@@MethodName:compile:["\\p{Punct}?" + Pattern.quote(property.getFieldName()) + "(\\p{Punct}|\\w)?"] @TO@ MethodName:compile:["\\b" + Pattern.quote(property.getFieldName()) + "\\b"] @AT@ 14514 @LENGTH@ 85
------------UPD InfixExpression@@"\\p{Punct}?" + Pattern.quote(property.getFieldName()) + "(\\p{Punct}|\\w)?" @TO@ "\\b" + Pattern.quote(property.getFieldName()) + "\\b" @AT@ 14522 @LENGTH@ 76
---------------UPD StringLiteral@@"\\p{Punct}?" @TO@ "\\b" @AT@ 14522 @LENGTH@ 13
---------------UPD StringLiteral@@"(\\p{Punct}|\\w)?" @TO@ "\\b" @AT@ 14579 @LENGTH@ 19


UPD TypeDeclaration@@[public]ScramDigestPasswordImpl, AbstractPasswordImpl[ScramDigestPassword] @TO@ ScramDigestPasswordImpl, AbstractPasswordImpl[ScramDigestPassword] @AT@ 1610 @LENGTH@ 6958
---DEL Modifier@@public @AT@ 1610 @LENGTH@ 6


INS SuperConstructorInvocation@@super(WebsocketEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:WebsocketComponent,  @AT@ 1455 @LENGTH@ 31
---INS TypeLiteral@@WebsocketEndpoint.class @TO@ SuperConstructorInvocation@@super(WebsocketEndpoint.class);
 @AT@ 1461 @LENGTH@ 23


UPD FieldDeclaration@@private, static, final, String, [OUT_PACKAGE=COMPONENT_PACKAGE + ".internal"] @TO@ protected, static, final, String, [OUT_PACKAGE=COMPONENT_PACKAGE + ".internal"] @AT@ 1431 @LENGTH@ 74
---UPD Modifier@@private @TO@ protected @AT@ 1431 @LENGTH@ 7


UPD IfStatement@@if (multicastSubnet.getInfo().isInRange(configuration.getHost())) {  datagramChannel=(DatagramChannel)bootstrap.bind(hostAddress);  String networkInterface=configuration.getNetworkInterface() == null ? LOOPBACK_INTERFACE : configuration.getNetworkInterface();  multicastNetworkInterface=NetworkInterface.getByName(networkInterface);  ObjectHelper.notNull(multicastNetworkInterface,"No network interface found for '" + networkInterface + "'.");  LOG.info("ConnectionlessBootstrap joining {}:{} using network interface: {}",new Object[]{configuration.getHost(),configuration.getPort(),multicastNetworkInterface.getName()});  datagramChannel.joinGroup(hostAddress,multicastNetworkInterface).syncUninterruptibly();  allChannels.add(datagramChannel);} else {  LOG.info("ConnectionlessBootstrap binding to {}:{}",configuration.getHost(),configuration.getPort());  ChannelFuture channelFuture=bootstrap.bind(hostAddress);  channelFuture.awaitUninterruptibly();  channel=channelFuture.channel();  allChannels.add(channel);} @TO@ if (multicastSubnet.getInfo().isInRange(configuration.getHost())) {  ChannelFuture channelFuture=bootstrap.bind(hostAddress);  channelFuture.awaitUninterruptibly();  channel=channelFuture.channel();  DatagramChannel datagramChannel=(DatagramChannel)channel;  String networkInterface=configuration.getNetworkInterface() == null ? LOOPBACK_INTERFACE : configuration.getNetworkInterface();  multicastNetworkInterface=NetworkInterface.getByName(networkInterface);  ObjectHelper.notNull(multicastNetworkInterface,"No network interface found for '" + networkInterface + "'.");  LOG.info("ConnectionlessBootstrap joining {}:{} using network interface: {}",new Object[]{configuration.getHost(),configuration.getPort(),multicastNetworkInterface.getName()});  datagramChannel.joinGroup(hostAddress,multicastNetworkInterface).syncUninterruptibly();  allChannels.add(datagramChannel);} else {  LOG.info("ConnectionlessBootstrap binding to {}:{}",configuration.getHost(),configuration.getPort());  ChannelFuture channelFuture=bootstrap.bind(hostAddress);  channelFuture.awaitUninterruptibly();  channel=channelFuture.channel();  allChannels.add(channel);} @AT@ 6709 @LENGTH@ 1182
---UPD Block@@ThenBody:{  datagramChannel=(DatagramChannel)bootstrap.bind(hostAddress);  String networkInterface=configuration.getNetworkInterface() == null ? LOOPBACK_INTERFACE : configuration.getNetworkInterface();  multicastNetworkInterface=NetworkInterface.getByName(networkInterface);  ObjectHelper.notNull(multicastNetworkInterface,"No network interface found for '" + networkInterface + "'.");  LOG.info("ConnectionlessBootstrap joining {}:{} using network interface: {}",new Object[]{configuration.getHost(),configuration.getPort(),multicastNetworkInterface.getName()});  datagramChannel.joinGroup(hostAddress,multicastNetworkInterface).syncUninterruptibly();  allChannels.add(datagramChannel);} @TO@ ThenBody:{  ChannelFuture channelFuture=bootstrap.bind(hostAddress);  channelFuture.awaitUninterruptibly();  channel=channelFuture.channel();  DatagramChannel datagramChannel=(DatagramChannel)channel;  String networkInterface=configuration.getNetworkInterface() == null ? LOOPBACK_INTERFACE : configuration.getNetworkInterface();  multicastNetworkInterface=NetworkInterface.getByName(networkInterface);  ObjectHelper.notNull(multicastNetworkInterface,"No network interface found for '" + networkInterface + "'.");  LOG.info("ConnectionlessBootstrap joining {}:{} using network interface: {}",new Object[]{configuration.getHost(),configuration.getPort(),multicastNetworkInterface.getName()});  datagramChannel.joinGroup(hostAddress,multicastNetworkInterface).syncUninterruptibly();  allChannels.add(datagramChannel);} @AT@ 6775 @LENGTH@ 777
------DEL ExpressionStatement@@Assignment:datagramChannel=(DatagramChannel)bootstrap.bind(hostAddress) @AT@ 6789 @LENGTH@ 63
---------DEL Assignment@@datagramChannel=(DatagramChannel)bootstrap.bind(hostAddress) @AT@ 6789 @LENGTH@ 62
------------DEL CastExpression@@(DatagramChannel)bootstrap.bind(hostAddress) @AT@ 6807 @LENGTH@ 44
------INS VariableDeclarationStatement@@ChannelFuture channelFuture=bootstrap.bind(hostAddress); @TO@ Block@@ThenBody:{  datagramChannel=(DatagramChannel)bootstrap.bind(hostAddress);  String networkInterface=configuration.getNetworkInterface() == null ? LOOPBACK_INTERFACE : configuration.getNetworkInterface();  multicastNetworkInterface=NetworkInterface.getByName(networkInterface);  ObjectHelper.notNull(multicastNetworkInterface,"No network interface found for '" + networkInterface + "'.");  LOG.info("ConnectionlessBootstrap joining {}:{} using network interface: {}",new Object[]{configuration.getHost(),configuration.getPort(),multicastNetworkInterface.getName()});  datagramChannel.joinGroup(hostAddress,multicastNetworkInterface).syncUninterruptibly();  allChannels.add(datagramChannel);} @AT@ 6789 @LENGTH@ 58
---------INS SimpleType@@ChannelFuture @TO@ VariableDeclarationStatement@@ChannelFuture channelFuture=bootstrap.bind(hostAddress); @AT@ 6789 @LENGTH@ 13
---------INS VariableDeclarationFragment@@channelFuture=bootstrap.bind(hostAddress) @TO@ VariableDeclarationStatement@@ChannelFuture channelFuture=bootstrap.bind(hostAddress); @AT@ 6803 @LENGTH@ 43
------------INS SimpleName@@channelFuture @TO@ VariableDeclarationFragment@@channelFuture=bootstrap.bind(hostAddress) @AT@ 6803 @LENGTH@ 13
------------MOV MethodInvocation@@bootstrap.bind(hostAddress) @TO@ VariableDeclarationFragment@@channelFuture=bootstrap.bind(hostAddress) @AT@ 6824 @LENGTH@ 27
------INS ExpressionStatement@@MethodInvocation:channelFuture.awaitUninterruptibly() @TO@ Block@@ThenBody:{  datagramChannel=(DatagramChannel)bootstrap.bind(hostAddress);  String networkInterface=configuration.getNetworkInterface() == null ? LOOPBACK_INTERFACE : configuration.getNetworkInterface();  multicastNetworkInterface=NetworkInterface.getByName(networkInterface);  ObjectHelper.notNull(multicastNetworkInterface,"No network interface found for '" + networkInterface + "'.");  LOG.info("ConnectionlessBootstrap joining {}:{} using network interface: {}",new Object[]{configuration.getHost(),configuration.getPort(),multicastNetworkInterface.getName()});  datagramChannel.joinGroup(hostAddress,multicastNetworkInterface).syncUninterruptibly();  allChannels.add(datagramChannel);} @AT@ 6860 @LENGTH@ 37
---------INS MethodInvocation@@channelFuture.awaitUninterruptibly() @TO@ ExpressionStatement@@MethodInvocation:channelFuture.awaitUninterruptibly() @AT@ 6860 @LENGTH@ 36
------------INS SimpleName@@Name:channelFuture @TO@ MethodInvocation@@channelFuture.awaitUninterruptibly() @AT@ 6860 @LENGTH@ 13
------------INS SimpleName@@MethodName:awaitUninterruptibly:[] @TO@ MethodInvocation@@channelFuture.awaitUninterruptibly() @AT@ 6874 @LENGTH@ 22
------INS ExpressionStatement@@Assignment:channel=channelFuture.channel() @TO@ Block@@ThenBody:{  datagramChannel=(DatagramChannel)bootstrap.bind(hostAddress);  String networkInterface=configuration.getNetworkInterface() == null ? LOOPBACK_INTERFACE : configuration.getNetworkInterface();  multicastNetworkInterface=NetworkInterface.getByName(networkInterface);  ObjectHelper.notNull(multicastNetworkInterface,"No network interface found for '" + networkInterface + "'.");  LOG.info("ConnectionlessBootstrap joining {}:{} using network interface: {}",new Object[]{configuration.getHost(),configuration.getPort(),multicastNetworkInterface.getName()});  datagramChannel.joinGroup(hostAddress,multicastNetworkInterface).syncUninterruptibly();  allChannels.add(datagramChannel);} @AT@ 6910 @LENGTH@ 34
---------INS Assignment@@channel=channelFuture.channel() @TO@ ExpressionStatement@@Assignment:channel=channelFuture.channel() @AT@ 6910 @LENGTH@ 33
------------MOV SimpleName@@datagramChannel @TO@ Assignment@@channel=channelFuture.channel() @AT@ 6789 @LENGTH@ 15
------------MOV Operator@@= @TO@ Assignment@@channel=channelFuture.channel() @AT@ 6804 @LENGTH@ 1
------------INS MethodInvocation@@channelFuture.channel() @TO@ Assignment@@channel=channelFuture.channel() @AT@ 6920 @LENGTH@ 23
---------------INS SimpleName@@Name:channelFuture @TO@ MethodInvocation@@channelFuture.channel() @AT@ 6920 @LENGTH@ 13
---------------INS SimpleName@@MethodName:channel:[] @TO@ MethodInvocation@@channelFuture.channel() @AT@ 6934 @LENGTH@ 9
------INS VariableDeclarationStatement@@DatagramChannel datagramChannel=(DatagramChannel)channel; @TO@ Block@@ThenBody:{  datagramChannel=(DatagramChannel)bootstrap.bind(hostAddress);  String networkInterface=configuration.getNetworkInterface() == null ? LOOPBACK_INTERFACE : configuration.getNetworkInterface();  multicastNetworkInterface=NetworkInterface.getByName(networkInterface);  ObjectHelper.notNull(multicastNetworkInterface,"No network interface found for '" + networkInterface + "'.");  LOG.info("ConnectionlessBootstrap joining {}:{} using network interface: {}",new Object[]{configuration.getHost(),configuration.getPort(),multicastNetworkInterface.getName()});  datagramChannel.joinGroup(hostAddress,multicastNetworkInterface).syncUninterruptibly();  allChannels.add(datagramChannel);} @AT@ 6957 @LENGTH@ 60
---------INS SimpleType@@DatagramChannel @TO@ VariableDeclarationStatement@@DatagramChannel datagramChannel=(DatagramChannel)channel; @AT@ 6957 @LENGTH@ 15
---------INS VariableDeclarationFragment@@datagramChannel=(DatagramChannel)channel @TO@ VariableDeclarationStatement@@DatagramChannel datagramChannel=(DatagramChannel)channel; @AT@ 6973 @LENGTH@ 43
------------INS SimpleName@@datagramChannel @TO@ VariableDeclarationFragment@@datagramChannel=(DatagramChannel)channel @AT@ 6973 @LENGTH@ 15
------------INS CastExpression@@(DatagramChannel)channel @TO@ VariableDeclarationFragment@@datagramChannel=(DatagramChannel)channel @AT@ 6991 @LENGTH@ 25
---------------MOV SimpleType@@DatagramChannel @TO@ CastExpression@@(DatagramChannel)channel @AT@ 6808 @LENGTH@ 15
---------------INS SimpleName@@channel @TO@ CastExpression@@(DatagramChannel)channel @AT@ 7009 @LENGTH@ 7


UPD FieldDeclaration@@private, String, [tokenName] @TO@ private, String, [tokenName="token"] @AT@ 2344 @LENGTH@ 25
---UPD VariableDeclarationFragment@@tokenName @TO@ tokenName="token" @AT@ 2359 @LENGTH@ 9
------INS StringLiteral@@"token" @TO@ VariableDeclarationFragment@@tokenName @AT@ 2371 @LENGTH@ 7


UPD VariableDeclarationStatement@@ConnectFuture connectFuture=client.connect(getHost(),getPort()); @TO@ ConnectFuture connectFuture=client.connect(null,getHost(),getPort()); @AT@ 2941 @LENGTH@ 67
---UPD VariableDeclarationFragment@@connectFuture=client.connect(getHost(),getPort()) @TO@ connectFuture=client.connect(null,getHost(),getPort()) @AT@ 2955 @LENGTH@ 52
------UPD MethodInvocation@@client.connect(getHost(),getPort()) @TO@ client.connect(null,getHost(),getPort()) @AT@ 2971 @LENGTH@ 36
---------UPD SimpleName@@MethodName:connect:[getHost(), getPort()] @TO@ MethodName:connect:[null, getHost(), getPort()] @AT@ 2978 @LENGTH@ 29
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:connect:[getHost(), getPort()] @AT@ 2986 @LENGTH@ 4


INS MethodDeclaration@@public, voidMethodName:HttpComponent,  @TO@ TypeDeclaration@@[public]HttpComponent, HeaderFilterStrategyComponent @AT@ 2061 @LENGTH@ 65
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:HttpComponent,  @AT@ 2061 @LENGTH@ 6
---INS SimpleName@@MethodName:HttpComponent @TO@ MethodDeclaration@@public, voidMethodName:HttpComponent,  @AT@ 2068 @LENGTH@ 13
---INS SuperConstructorInvocation@@super(HttpEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:HttpComponent,  @AT@ 2094 @LENGTH@ 26
------INS TypeLiteral@@HttpEndpoint.class @TO@ SuperConstructorInvocation@@super(HttpEndpoint.class);
 @AT@ 2100 @LENGTH@ 18


INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ MethodDeclaration@@public, void, MethodName:testComponentConfiguration, Exception,  @AT@ 1839 @LENGTH@ 87
---INS MethodInvocation@@assertTrue(json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1839 @LENGTH@ 86
------INS SimpleName@@MethodName:assertTrue:[json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1839 @LENGTH@ 86
---------INS MethodInvocation@@json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"")] @AT@ 1850 @LENGTH@ 74
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1850 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["\"groupName\": { \"kind\": \"path\", \"type\": \"string\""] @TO@ MethodInvocation@@json.contains("\"groupName\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1855 @LENGTH@ 69
---------------INS StringLiteral@@"\"groupName\": { \"kind\": \"path\", \"type\": \"string\"" @TO@ SimpleName@@MethodName:contains:["\"groupName\": { \"kind\": \"path\", \"type\": \"string\""] @AT@ 1864 @LENGTH@ 59


UPD TypeDeclaration@@[public]GenericFileConfiguration,  @TO@ [@UriParams, public]GenericFileConfiguration,  @AT@ 908 @LENGTH@ 940
---INS MarkerAnnotation@@@UriParams @TO@ TypeDeclaration@@[public]GenericFileConfiguration,  @AT@ 947 @LENGTH@ 10


INS MethodDeclaration@@private, voidMethodName:DockerConstants,  @TO@ TypeDeclaration@@[public]DockerConstants,  @AT@ 7924 @LENGTH@ 57
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:DockerConstants,  @AT@ 7924 @LENGTH@ 7
---INS SimpleName@@MethodName:DockerConstants @TO@ MethodDeclaration@@private, voidMethodName:DockerConstants,  @AT@ 7932 @LENGTH@ 15


UPD TypeDeclaration@@[public]HdfsConfiguration,  @TO@ [@UriParams, public]HdfsConfiguration,  @AT@ 1062 @LENGTH@ 12411
---INS MarkerAnnotation@@@UriParams @TO@ TypeDeclaration@@[public]HdfsConfiguration,  @AT@ 1139 @LENGTH@ 10


INS MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @TO@ TypeDeclaration@@[public]RestNettyHttpGetTest, BaseNettyTest @AT@ 1250 @LENGTH@ 197
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 1250 @LENGTH@ 9
---INS SimpleType@@JndiRegistry @TO@ MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 1260 @LENGTH@ 12
---INS SimpleName@@MethodName:createRegistry @TO@ MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 1273 @LENGTH@ 14
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 1297 @LENGTH@ 9
---INS VariableDeclarationStatement@@JndiRegistry jndi=super.createRegistry(); @TO@ MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 1317 @LENGTH@ 43
------INS SimpleType@@JndiRegistry @TO@ VariableDeclarationStatement@@JndiRegistry jndi=super.createRegistry(); @AT@ 1317 @LENGTH@ 12
------INS VariableDeclarationFragment@@jndi=super.createRegistry() @TO@ VariableDeclarationStatement@@JndiRegistry jndi=super.createRegistry(); @AT@ 1330 @LENGTH@ 29
---------INS SimpleName@@jndi @TO@ VariableDeclarationFragment@@jndi=super.createRegistry() @AT@ 1330 @LENGTH@ 4
---------INS SuperMethodInvocation@@super.createRegistry() @TO@ VariableDeclarationFragment@@jndi=super.createRegistry() @AT@ 1337 @LENGTH@ 22
------------INS SimpleName@@MethodName:createRegistry:[] @TO@ SuperMethodInvocation@@super.createRegistry() @AT@ 1343 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:jndi.bind("mybinding",new RestNettyHttpBinding()) @TO@ MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 1369 @LENGTH@ 51
------INS MethodInvocation@@jndi.bind("mybinding",new RestNettyHttpBinding()) @TO@ ExpressionStatement@@MethodInvocation:jndi.bind("mybinding",new RestNettyHttpBinding()) @AT@ 1369 @LENGTH@ 50
---------INS SimpleName@@Name:jndi @TO@ MethodInvocation@@jndi.bind("mybinding",new RestNettyHttpBinding()) @AT@ 1369 @LENGTH@ 4
---------INS SimpleName@@MethodName:bind:["mybinding", new RestNettyHttpBinding()] @TO@ MethodInvocation@@jndi.bind("mybinding",new RestNettyHttpBinding()) @AT@ 1374 @LENGTH@ 45
------------INS StringLiteral@@"mybinding" @TO@ SimpleName@@MethodName:bind:["mybinding", new RestNettyHttpBinding()] @AT@ 1379 @LENGTH@ 11
------------INS ClassInstanceCreation@@RestNettyHttpBinding[] @TO@ SimpleName@@MethodName:bind:["mybinding", new RestNettyHttpBinding()] @AT@ 1392 @LENGTH@ 26
---------------INS New@@new @TO@ ClassInstanceCreation@@RestNettyHttpBinding[] @AT@ 1392 @LENGTH@ 3
---------------INS SimpleType@@RestNettyHttpBinding @TO@ ClassInstanceCreation@@RestNettyHttpBinding[] @AT@ 1396 @LENGTH@ 20
---INS ReturnStatement@@SimpleName:jndi @TO@ MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 1429 @LENGTH@ 12
------INS SimpleName@@jndi @TO@ ReturnStatement@@SimpleName:jndi @AT@ 1436 @LENGTH@ 4


UPD IfStatement@@if (!entry.isDirectory()) return entry; @TO@ if (!entry.isDirectory()) {  return entry;} @AT@ 4761 @LENGTH@ 43
---UPD Block@@ThenBody:return entry; @TO@ ThenBody:{  return entry;} @AT@ 4791 @LENGTH@ 13


INS MethodDeclaration@@public, static, ResourceTransformationContext, MethodName:nextInChainOperation, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @TO@ TypeDeclaration@@[public]ChainedTransformationTools,  @AT@ 4000 @LENGTH@ 437
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, ResourceTransformationContext, MethodName:nextInChainOperation, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @AT@ 4000 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, ResourceTransformationContext, MethodName:nextInChainOperation, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @AT@ 4007 @LENGTH@ 6
---INS SimpleType@@ResourceTransformationContext @TO@ MethodDeclaration@@public, static, ResourceTransformationContext, MethodName:nextInChainOperation, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @AT@ 4014 @LENGTH@ 29
---INS SimpleName@@MethodName:nextInChainOperation @TO@ MethodDeclaration@@public, static, ResourceTransformationContext, MethodName:nextInChainOperation, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @AT@ 4044 @LENGTH@ 20
---INS SingleVariableDeclaration@@ResourceTransformationContext context @TO@ MethodDeclaration@@public, static, ResourceTransformationContext, MethodName:nextInChainOperation, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @AT@ 4065 @LENGTH@ 37
------INS SimpleType@@ResourceTransformationContext @TO@ SingleVariableDeclaration@@ResourceTransformationContext context @AT@ 4065 @LENGTH@ 29
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@ResourceTransformationContext context @AT@ 4095 @LENGTH@ 7
---INS SingleVariableDeclaration@@PlaceholderResolver placeholderResolver @TO@ MethodDeclaration@@public, static, ResourceTransformationContext, MethodName:nextInChainOperation, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @AT@ 4104 @LENGTH@ 39
------INS SimpleType@@PlaceholderResolver @TO@ SingleVariableDeclaration@@PlaceholderResolver placeholderResolver @AT@ 4104 @LENGTH@ 19
------INS SimpleName@@placeholderResolver @TO@ SingleVariableDeclaration@@PlaceholderResolver placeholderResolver @AT@ 4124 @LENGTH@ 19
---INS AssertStatement@@InstanceofExpression:context instanceof ResourceTransformationContextImpl, Msg-StringLiteral:"Wrong type of context" @TO@ MethodDeclaration@@public, static, ResourceTransformationContext, MethodName:nextInChainOperation, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @AT@ 4155 @LENGTH@ 86
------INS InstanceofExpression@@context instanceof ResourceTransformationContextImpl @TO@ AssertStatement@@InstanceofExpression:context instanceof ResourceTransformationContextImpl, Msg-StringLiteral:"Wrong type of context" @AT@ 4162 @LENGTH@ 52
---------INS SimpleName@@context @TO@ InstanceofExpression@@context instanceof ResourceTransformationContextImpl @AT@ 4162 @LENGTH@ 7
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@context instanceof ResourceTransformationContextImpl @AT@ 4170 @LENGTH@ 10
---------INS SimpleType@@ResourceTransformationContextImpl @TO@ InstanceofExpression@@context instanceof ResourceTransformationContextImpl @AT@ 4181 @LENGTH@ 33
------INS StringLiteral@@"Wrong type of context" @TO@ AssertStatement@@InstanceofExpression:context instanceof ResourceTransformationContextImpl, Msg-StringLiteral:"Wrong type of context" @AT@ 4217 @LENGTH@ 23
---INS VariableDeclarationStatement@@ResourceTransformationContextImpl ctx=(ResourceTransformationContextImpl)context; @TO@ MethodDeclaration@@public, static, ResourceTransformationContext, MethodName:nextInChainOperation, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @AT@ 4250 @LENGTH@ 83
------INS SimpleType@@ResourceTransformationContextImpl @TO@ VariableDeclarationStatement@@ResourceTransformationContextImpl ctx=(ResourceTransformationContextImpl)context; @AT@ 4250 @LENGTH@ 33
------INS VariableDeclarationFragment@@ctx=(ResourceTransformationContextImpl)context @TO@ VariableDeclarationStatement@@ResourceTransformationContextImpl ctx=(ResourceTransformationContextImpl)context; @AT@ 4284 @LENGTH@ 48
---------INS SimpleName@@ctx @TO@ VariableDeclarationFragment@@ctx=(ResourceTransformationContextImpl)context @AT@ 4284 @LENGTH@ 3
---------INS CastExpression@@(ResourceTransformationContextImpl)context @TO@ VariableDeclarationFragment@@ctx=(ResourceTransformationContextImpl)context @AT@ 4290 @LENGTH@ 42
------------INS SimpleType@@ResourceTransformationContextImpl @TO@ CastExpression@@(ResourceTransformationContextImpl)context @AT@ 4291 @LENGTH@ 33
------------INS SimpleName@@context @TO@ CastExpression@@(ResourceTransformationContextImpl)context @AT@ 4325 @LENGTH@ 7
---INS VariableDeclarationStatement@@ResourceTransformationContext copy=ctx.copy(placeholderResolver); @TO@ MethodDeclaration@@public, static, ResourceTransformationContext, MethodName:nextInChainOperation, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @AT@ 4342 @LENGTH@ 67
------INS SimpleType@@ResourceTransformationContext @TO@ VariableDeclarationStatement@@ResourceTransformationContext copy=ctx.copy(placeholderResolver); @AT@ 4342 @LENGTH@ 29
------INS VariableDeclarationFragment@@copy=ctx.copy(placeholderResolver) @TO@ VariableDeclarationStatement@@ResourceTransformationContext copy=ctx.copy(placeholderResolver); @AT@ 4372 @LENGTH@ 36
---------INS SimpleName@@copy @TO@ VariableDeclarationFragment@@copy=ctx.copy(placeholderResolver) @AT@ 4372 @LENGTH@ 4
---------INS MethodInvocation@@ctx.copy(placeholderResolver) @TO@ VariableDeclarationFragment@@copy=ctx.copy(placeholderResolver) @AT@ 4379 @LENGTH@ 29
------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.copy(placeholderResolver) @AT@ 4379 @LENGTH@ 3
------------INS SimpleName@@MethodName:copy:[placeholderResolver] @TO@ MethodInvocation@@ctx.copy(placeholderResolver) @AT@ 4383 @LENGTH@ 25
---------------INS SimpleName@@placeholderResolver @TO@ SimpleName@@MethodName:copy:[placeholderResolver] @AT@ 4388 @LENGTH@ 19
---INS ReturnStatement@@SimpleName:copy @TO@ MethodDeclaration@@public, static, ResourceTransformationContext, MethodName:nextInChainOperation, ResourceTransformationContext context, PlaceholderResolver placeholderResolver,  @AT@ 4419 @LENGTH@ 12
------INS SimpleName@@copy @TO@ ReturnStatement@@SimpleName:copy @AT@ 4426 @LENGTH@ 4


UPD TypeDeclaration@@[public]SpringDataJaxb,  @TO@ [public, abstract]SpringDataJaxb,  @AT@ 1730 @LENGTH@ 2652
---INS Modifier@@abstract @TO@ TypeDeclaration@@[public]SpringDataJaxb,  @AT@ 1737 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:ObjectCache.setupObjectRegistry(context.getObjectRegistry()) @TO@ MethodDeclaration@@public, voidMethodName:TezProcessor, ProcessorContext context,  @AT@ 2716 @LENGTH@ 61
---INS MethodInvocation@@ObjectCache.setupObjectRegistry(context.getObjectRegistry()) @TO@ ExpressionStatement@@MethodInvocation:ObjectCache.setupObjectRegistry(context.getObjectRegistry()) @AT@ 2716 @LENGTH@ 60
------INS SimpleName@@Name:ObjectCache @TO@ MethodInvocation@@ObjectCache.setupObjectRegistry(context.getObjectRegistry()) @AT@ 2716 @LENGTH@ 11
------INS SimpleName@@MethodName:setupObjectRegistry:[context.getObjectRegistry()] @TO@ MethodInvocation@@ObjectCache.setupObjectRegistry(context.getObjectRegistry()) @AT@ 2728 @LENGTH@ 48
---------INS MethodInvocation@@context.getObjectRegistry() @TO@ SimpleName@@MethodName:setupObjectRegistry:[context.getObjectRegistry()] @AT@ 2748 @LENGTH@ 27
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getObjectRegistry() @AT@ 2748 @LENGTH@ 7
------------INS SimpleName@@MethodName:getObjectRegistry:[] @TO@ MethodInvocation@@context.getObjectRegistry() @AT@ 2756 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertThat(out.toByteArray(),equalTo(string.getBytes(charset))) @TO@ MethodInvocation:assertThat(out.toByteArray(),equalTo(string.getBytes(charset.displayName()))) @AT@ 2590 @LENGTH@ 65
---UPD MethodInvocation@@assertThat(out.toByteArray(),equalTo(string.getBytes(charset))) @TO@ assertThat(out.toByteArray(),equalTo(string.getBytes(charset.displayName()))) @AT@ 2590 @LENGTH@ 64
------UPD SimpleName@@MethodName:assertThat:[out.toByteArray(), equalTo(string.getBytes(charset))] @TO@ MethodName:assertThat:[out.toByteArray(), equalTo(string.getBytes(charset.displayName()))] @AT@ 2590 @LENGTH@ 64
---------UPD MethodInvocation@@equalTo(string.getBytes(charset)) @TO@ equalTo(string.getBytes(charset.displayName())) @AT@ 2620 @LENGTH@ 33
------------UPD SimpleName@@MethodName:equalTo:[string.getBytes(charset)] @TO@ MethodName:equalTo:[string.getBytes(charset.displayName())] @AT@ 2620 @LENGTH@ 33
---------------UPD MethodInvocation@@string.getBytes(charset) @TO@ string.getBytes(charset.displayName()) @AT@ 2628 @LENGTH@ 24
------------------UPD SimpleName@@MethodName:getBytes:[charset] @TO@ MethodName:getBytes:[charset.displayName()] @AT@ 2635 @LENGTH@ 17
---------------------DEL SimpleName@@charset @AT@ 2644 @LENGTH@ 7
---------------------INS MethodInvocation@@charset.displayName() @TO@ SimpleName@@MethodName:getBytes:[charset] @AT@ 2658 @LENGTH@ 21
------------------------INS SimpleName@@Name:charset @TO@ MethodInvocation@@charset.displayName() @AT@ 2658 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:displayName:[] @TO@ MethodInvocation@@charset.displayName() @AT@ 2666 @LENGTH@ 13
------------UPD SimpleName@@MethodName:equalTo:[string.getBytes(charset)] @TO@ MethodName:equalTo:[string.getBytes(charset.displayName())] @AT@ 2620 @LENGTH@ 33
---------------UPD MethodInvocation@@string.getBytes(charset) @TO@ string.getBytes(charset.displayName()) @AT@ 2628 @LENGTH@ 24
------------------UPD SimpleName@@MethodName:getBytes:[charset] @TO@ MethodName:getBytes:[charset.displayName()] @AT@ 2635 @LENGTH@ 17
---------------------DEL SimpleName@@charset @AT@ 2644 @LENGTH@ 7
---------------------INS MethodInvocation@@charset.displayName() @TO@ SimpleName@@MethodName:getBytes:[charset] @AT@ 2658 @LENGTH@ 21
------------------------INS SimpleName@@Name:charset @TO@ MethodInvocation@@charset.displayName() @AT@ 2658 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:displayName:[] @TO@ MethodInvocation@@charset.displayName() @AT@ 2666 @LENGTH@ 13


UPD IfStatement@@if (annotation != null) {  if (foundMethod != null && enforceUniqueness) {    throw new IllegalStateException(String.format(MULTIPLE_FOUND,annotation.getClass().getName(),foundMethod,method));  }  this.annotation=annotation;  this.foundMethod=method;} @TO@ if (foundAnnotation != null) {  if (foundMethod != null && enforceUniqueness) {    throw new IllegalStateException(String.format(MULTIPLE_FOUND,foundAnnotation.getClass().getName(),foundMethod,method));  }  this.annotation=foundAnnotation;  this.foundMethod=method;} @AT@ 2844 @LENGTH@ 278
---UPD InfixExpression@@annotation != null @TO@ foundAnnotation != null @AT@ 2848 @LENGTH@ 18
------UPD SimpleName@@annotation @TO@ foundAnnotation @AT@ 2848 @LENGTH@ 10
---UPD Block@@ThenBody:{  if (foundMethod != null && enforceUniqueness) {    throw new IllegalStateException(String.format(MULTIPLE_FOUND,annotation.getClass().getName(),foundMethod,method));  }  this.annotation=annotation;  this.foundMethod=method;} @TO@ ThenBody:{  if (foundMethod != null && enforceUniqueness) {    throw new IllegalStateException(String.format(MULTIPLE_FOUND,foundAnnotation.getClass().getName(),foundMethod,method));  }  this.annotation=foundAnnotation;  this.foundMethod=method;} @AT@ 2868 @LENGTH@ 254
------UPD IfStatement@@if (foundMethod != null && enforceUniqueness) {  throw new IllegalStateException(String.format(MULTIPLE_FOUND,annotation.getClass().getName(),foundMethod,method));} @TO@ if (foundMethod != null && enforceUniqueness) {  throw new IllegalStateException(String.format(MULTIPLE_FOUND,foundAnnotation.getClass().getName(),foundMethod,method));} @AT@ 2874 @LENGTH@ 180
---------UPD Block@@ThenBody:{  throw new IllegalStateException(String.format(MULTIPLE_FOUND,annotation.getClass().getName(),foundMethod,method));} @TO@ ThenBody:{  throw new IllegalStateException(String.format(MULTIPLE_FOUND,foundAnnotation.getClass().getName(),foundMethod,method));} @AT@ 2920 @LENGTH@ 134
------------UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException(String.format(MULTIPLE_FOUND,annotation.getClass().getName(),foundMethod,method)) @TO@ ClassInstanceCreation:new IllegalStateException(String.format(MULTIPLE_FOUND,foundAnnotation.getClass().getName(),foundMethod,method)) @AT@ 2926 @LENGTH@ 123
---------------UPD ClassInstanceCreation@@IllegalStateException[String.format(MULTIPLE_FOUND,annotation.getClass().getName(),foundMethod,method)] @TO@ IllegalStateException[String.format(MULTIPLE_FOUND,foundAnnotation.getClass().getName(),foundMethod,method)] @AT@ 2932 @LENGTH@ 116
------------------UPD MethodInvocation@@String.format(MULTIPLE_FOUND,annotation.getClass().getName(),foundMethod,method) @TO@ String.format(MULTIPLE_FOUND,foundAnnotation.getClass().getName(),foundMethod,method) @AT@ 2958 @LENGTH@ 89
---------------------UPD SimpleName@@MethodName:format:[MULTIPLE_FOUND, annotation.getClass().getName(), foundMethod, method] @TO@ MethodName:format:[MULTIPLE_FOUND, foundAnnotation.getClass().getName(), foundMethod, method] @AT@ 2965 @LENGTH@ 82
------------------------UPD MethodInvocation@@annotation.getClass().getName() @TO@ foundAnnotation.getClass().getName() @AT@ 2988 @LENGTH@ 31
---------------------------UPD SimpleName@@Name:annotation @TO@ Name:foundAnnotation @AT@ 2988 @LENGTH@ 10
------UPD ExpressionStatement@@Assignment:this.annotation=annotation @TO@ Assignment:this.annotation=foundAnnotation @AT@ 3059 @LENGTH@ 29
---------UPD Assignment@@this.annotation=annotation @TO@ this.annotation=foundAnnotation @AT@ 3059 @LENGTH@ 28
------------UPD SimpleName@@annotation @TO@ foundAnnotation @AT@ 3077 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @TO@ TypeDeclaration@@[public]TestMultiFileConfigurationBuilder, AbstractMultiFileConfigurationBuilderTest @AT@ 17060 @LENGTH@ 937
---MOV ExpressionStatement@@MethodInvocation:builder.getConfiguration() @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 15566 @LENGTH@ 27
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17060 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17067 @LENGTH@ 4
---INS SimpleName@@MethodName:testBuilderListenerOtherTypes @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17072 @LENGTH@ 29
---INS SimpleType@@ConfigurationException @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17111 @LENGTH@ 22
---INS VariableDeclarationStatement@@BuilderEventListenerImpl listener=new BuilderEventListenerImpl(); @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17148 @LENGTH@ 67
------INS SimpleType@@BuilderEventListenerImpl @TO@ VariableDeclarationStatement@@BuilderEventListenerImpl listener=new BuilderEventListenerImpl(); @AT@ 17148 @LENGTH@ 24
------INS VariableDeclarationFragment@@listener=new BuilderEventListenerImpl() @TO@ VariableDeclarationStatement@@BuilderEventListenerImpl listener=new BuilderEventListenerImpl(); @AT@ 17173 @LENGTH@ 41
---------INS SimpleName@@listener @TO@ VariableDeclarationFragment@@listener=new BuilderEventListenerImpl() @AT@ 17173 @LENGTH@ 8
---------INS ClassInstanceCreation@@BuilderEventListenerImpl[] @TO@ VariableDeclarationFragment@@listener=new BuilderEventListenerImpl() @AT@ 17184 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@BuilderEventListenerImpl[] @AT@ 17184 @LENGTH@ 3
------------INS SimpleType@@BuilderEventListenerImpl @TO@ ClassInstanceCreation@@BuilderEventListenerImpl[] @AT@ 17188 @LENGTH@ 24
---INS VariableDeclarationStatement@@MultiFileConfigurationBuilder<XMLConfiguration> builder=createTestBuilder(null); @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17224 @LENGTH@ 98
------INS ParameterizedType@@MultiFileConfigurationBuilder<XMLConfiguration> @TO@ VariableDeclarationStatement@@MultiFileConfigurationBuilder<XMLConfiguration> builder=createTestBuilder(null); @AT@ 17224 @LENGTH@ 47
---------INS SimpleType@@MultiFileConfigurationBuilder @TO@ ParameterizedType@@MultiFileConfigurationBuilder<XMLConfiguration> @AT@ 17224 @LENGTH@ 29
---------INS SimpleType@@XMLConfiguration @TO@ ParameterizedType@@MultiFileConfigurationBuilder<XMLConfiguration> @AT@ 17254 @LENGTH@ 16
------INS VariableDeclarationFragment@@builder=createTestBuilder(null) @TO@ VariableDeclarationStatement@@MultiFileConfigurationBuilder<XMLConfiguration> builder=createTestBuilder(null); @AT@ 17272 @LENGTH@ 49
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=createTestBuilder(null) @AT@ 17272 @LENGTH@ 7
---------INS MethodInvocation@@createTestBuilder(null) @TO@ VariableDeclarationFragment@@builder=createTestBuilder(null) @AT@ 17298 @LENGTH@ 23
------------INS SimpleName@@MethodName:createTestBuilder:[null] @TO@ MethodInvocation@@createTestBuilder(null) @AT@ 17298 @LENGTH@ 23
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createTestBuilder:[null] @AT@ 17316 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:builder.addEventListener(ConfigurationBuilderEvent.ANY,listener) @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17331 @LENGTH@ 66
------INS MethodInvocation@@builder.addEventListener(ConfigurationBuilderEvent.ANY,listener) @TO@ ExpressionStatement@@MethodInvocation:builder.addEventListener(ConfigurationBuilderEvent.ANY,listener) @AT@ 17331 @LENGTH@ 65
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addEventListener(ConfigurationBuilderEvent.ANY,listener) @AT@ 17331 @LENGTH@ 7
---------INS SimpleName@@MethodName:addEventListener:[ConfigurationBuilderEvent.ANY, listener] @TO@ MethodInvocation@@builder.addEventListener(ConfigurationBuilderEvent.ANY,listener) @AT@ 17339 @LENGTH@ 57
------------INS QualifiedName@@ConfigurationBuilderEvent.ANY @TO@ SimpleName@@MethodName:addEventListener:[ConfigurationBuilderEvent.ANY, listener] @AT@ 17356 @LENGTH@ 29
---------------INS SimpleName@@ConfigurationBuilderEvent @TO@ QualifiedName@@ConfigurationBuilderEvent.ANY @AT@ 17356 @LENGTH@ 25
---------------INS SimpleName@@ANY @TO@ QualifiedName@@ConfigurationBuilderEvent.ANY @AT@ 17382 @LENGTH@ 3
------------INS SimpleName@@listener @TO@ SimpleName@@MethodName:addEventListener:[ConfigurationBuilderEvent.ANY, listener] @AT@ 17387 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:switchToConfig(1) @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17406 @LENGTH@ 18
------INS MethodInvocation@@switchToConfig(1) @TO@ ExpressionStatement@@MethodInvocation:switchToConfig(1) @AT@ 17406 @LENGTH@ 17
---------INS SimpleName@@MethodName:switchToConfig:[1] @TO@ MethodInvocation@@switchToConfig(1) @AT@ 17406 @LENGTH@ 17
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:switchToConfig:[1] @AT@ 17421 @LENGTH@ 1
---INS VariableDeclarationStatement@@ConfigurationBuilderEvent event=listener.nextEvent(ConfigurationBuilderEvent.CONFIGURATION_REQUEST); @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17469 @LENGTH@ 118
------INS SimpleType@@ConfigurationBuilderEvent @TO@ VariableDeclarationStatement@@ConfigurationBuilderEvent event=listener.nextEvent(ConfigurationBuilderEvent.CONFIGURATION_REQUEST); @AT@ 17469 @LENGTH@ 25
------INS VariableDeclarationFragment@@event=listener.nextEvent(ConfigurationBuilderEvent.CONFIGURATION_REQUEST) @TO@ VariableDeclarationStatement@@ConfigurationBuilderEvent event=listener.nextEvent(ConfigurationBuilderEvent.CONFIGURATION_REQUEST); @AT@ 17495 @LENGTH@ 91
---------INS SimpleName@@event @TO@ VariableDeclarationFragment@@event=listener.nextEvent(ConfigurationBuilderEvent.CONFIGURATION_REQUEST) @AT@ 17495 @LENGTH@ 5
---------INS MethodInvocation@@listener.nextEvent(ConfigurationBuilderEvent.CONFIGURATION_REQUEST) @TO@ VariableDeclarationFragment@@event=listener.nextEvent(ConfigurationBuilderEvent.CONFIGURATION_REQUEST) @AT@ 17519 @LENGTH@ 67
------------INS SimpleName@@Name:listener @TO@ MethodInvocation@@listener.nextEvent(ConfigurationBuilderEvent.CONFIGURATION_REQUEST) @AT@ 17519 @LENGTH@ 8
------------INS SimpleName@@MethodName:nextEvent:[ConfigurationBuilderEvent.CONFIGURATION_REQUEST] @TO@ MethodInvocation@@listener.nextEvent(ConfigurationBuilderEvent.CONFIGURATION_REQUEST) @AT@ 17528 @LENGTH@ 58
---------------INS QualifiedName@@ConfigurationBuilderEvent.CONFIGURATION_REQUEST @TO@ SimpleName@@MethodName:nextEvent:[ConfigurationBuilderEvent.CONFIGURATION_REQUEST] @AT@ 17538 @LENGTH@ 47
------------------INS SimpleName@@ConfigurationBuilderEvent @TO@ QualifiedName@@ConfigurationBuilderEvent.CONFIGURATION_REQUEST @AT@ 17538 @LENGTH@ 25
------------------INS SimpleName@@CONFIGURATION_REQUEST @TO@ QualifiedName@@ConfigurationBuilderEvent.CONFIGURATION_REQUEST @AT@ 17564 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertEquals("Wrong event source of request event",builder,event.getSource()) @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17596 @LENGTH@ 96
------INS MethodInvocation@@assertEquals("Wrong event source of request event",builder,event.getSource()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Wrong event source of request event",builder,event.getSource()) @AT@ 17596 @LENGTH@ 95
---------INS SimpleName@@MethodName:assertEquals:["Wrong event source of request event", builder, event.getSource()] @TO@ MethodInvocation@@assertEquals("Wrong event source of request event",builder,event.getSource()) @AT@ 17596 @LENGTH@ 95
------------INS StringLiteral@@"Wrong event source of request event" @TO@ SimpleName@@MethodName:assertEquals:["Wrong event source of request event", builder, event.getSource()] @AT@ 17609 @LENGTH@ 37
------------INS SimpleName@@builder @TO@ SimpleName@@MethodName:assertEquals:["Wrong event source of request event", builder, event.getSource()] @AT@ 17648 @LENGTH@ 7
------------INS MethodInvocation@@event.getSource() @TO@ SimpleName@@MethodName:assertEquals:["Wrong event source of request event", builder, event.getSource()] @AT@ 17673 @LENGTH@ 17
---------------INS SimpleName@@Name:event @TO@ MethodInvocation@@event.getSource() @AT@ 17673 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getSource:[] @TO@ MethodInvocation@@event.getSource() @AT@ 17679 @LENGTH@ 11
---INS VariableDeclarationStatement@@ConfigurationBuilderResultCreatedEvent createdEvent=listener.nextEvent(ConfigurationBuilderResultCreatedEvent.RESULT_CREATED); @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17701 @LENGTH@ 144
------INS SimpleType@@ConfigurationBuilderResultCreatedEvent @TO@ VariableDeclarationStatement@@ConfigurationBuilderResultCreatedEvent createdEvent=listener.nextEvent(ConfigurationBuilderResultCreatedEvent.RESULT_CREATED); @AT@ 17701 @LENGTH@ 38
------INS VariableDeclarationFragment@@createdEvent=listener.nextEvent(ConfigurationBuilderResultCreatedEvent.RESULT_CREATED) @TO@ VariableDeclarationStatement@@ConfigurationBuilderResultCreatedEvent createdEvent=listener.nextEvent(ConfigurationBuilderResultCreatedEvent.RESULT_CREATED); @AT@ 17740 @LENGTH@ 104
---------INS SimpleName@@createdEvent @TO@ VariableDeclarationFragment@@createdEvent=listener.nextEvent(ConfigurationBuilderResultCreatedEvent.RESULT_CREATED) @AT@ 17740 @LENGTH@ 12
---------INS MethodInvocation@@listener.nextEvent(ConfigurationBuilderResultCreatedEvent.RESULT_CREATED) @TO@ VariableDeclarationFragment@@createdEvent=listener.nextEvent(ConfigurationBuilderResultCreatedEvent.RESULT_CREATED) @AT@ 17771 @LENGTH@ 73
------------INS SimpleName@@Name:listener @TO@ MethodInvocation@@listener.nextEvent(ConfigurationBuilderResultCreatedEvent.RESULT_CREATED) @AT@ 17771 @LENGTH@ 8
------------INS SimpleName@@MethodName:nextEvent:[ConfigurationBuilderResultCreatedEvent.RESULT_CREATED] @TO@ MethodInvocation@@listener.nextEvent(ConfigurationBuilderResultCreatedEvent.RESULT_CREATED) @AT@ 17780 @LENGTH@ 64
---------------INS QualifiedName@@ConfigurationBuilderResultCreatedEvent.RESULT_CREATED @TO@ SimpleName@@MethodName:nextEvent:[ConfigurationBuilderResultCreatedEvent.RESULT_CREATED] @AT@ 17790 @LENGTH@ 53
------------------INS SimpleName@@ConfigurationBuilderResultCreatedEvent @TO@ QualifiedName@@ConfigurationBuilderResultCreatedEvent.RESULT_CREATED @AT@ 17790 @LENGTH@ 38
------------------INS SimpleName@@RESULT_CREATED @TO@ QualifiedName@@ConfigurationBuilderResultCreatedEvent.RESULT_CREATED @AT@ 17829 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertEquals("Wrong source of creation event",builder,createdEvent.getSource()) @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17854 @LENGTH@ 98
------INS MethodInvocation@@assertEquals("Wrong source of creation event",builder,createdEvent.getSource()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Wrong source of creation event",builder,createdEvent.getSource()) @AT@ 17854 @LENGTH@ 97
---------INS SimpleName@@MethodName:assertEquals:["Wrong source of creation event", builder, createdEvent.getSource()] @TO@ MethodInvocation@@assertEquals("Wrong source of creation event",builder,createdEvent.getSource()) @AT@ 17854 @LENGTH@ 97
------------INS StringLiteral@@"Wrong source of creation event" @TO@ SimpleName@@MethodName:assertEquals:["Wrong source of creation event", builder, createdEvent.getSource()] @AT@ 17867 @LENGTH@ 32
------------INS SimpleName@@builder @TO@ SimpleName@@MethodName:assertEquals:["Wrong source of creation event", builder, createdEvent.getSource()] @AT@ 17901 @LENGTH@ 7
------------INS MethodInvocation@@createdEvent.getSource() @TO@ SimpleName@@MethodName:assertEquals:["Wrong source of creation event", builder, createdEvent.getSource()] @AT@ 17926 @LENGTH@ 24
---------------INS SimpleName@@Name:createdEvent @TO@ MethodInvocation@@createdEvent.getSource() @AT@ 17926 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getSource:[] @TO@ MethodInvocation@@createdEvent.getSource() @AT@ 17939 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:listener.assertNoMoreEvents() @TO@ MethodDeclaration@@public, void, MethodName:testBuilderListenerOtherTypes, ConfigurationException,  @AT@ 17961 @LENGTH@ 30
------INS MethodInvocation@@listener.assertNoMoreEvents() @TO@ ExpressionStatement@@MethodInvocation:listener.assertNoMoreEvents() @AT@ 17961 @LENGTH@ 29
---------INS SimpleName@@Name:listener @TO@ MethodInvocation@@listener.assertNoMoreEvents() @AT@ 17961 @LENGTH@ 8
---------INS SimpleName@@MethodName:assertNoMoreEvents:[] @TO@ MethodInvocation@@listener.assertNoMoreEvents() @AT@ 17970 @LENGTH@ 20


UPD Block@@ThenBody:{  final String protocolBindings=getAttributeValue(operation,PROTOCOL_BINDINGS);  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final PathElement confElem=address.getElement(address.size() - 2);  final String configType=confElem.getKey();  final String configName=confElem.getValue();  final String handlerChainType=address.getElement(address.size() - 1).getKey();  final String handlerChainId=address.getElement(address.size() - 1).getValue();  final ServiceName configServiceName=getConfigServiceName(configType,configName);  if (context.getServiceRegistry(false).getService(configServiceName) == null) {    throw WSLogger.ROOT_LOGGER.missingConfig(configName);  }  final ServiceName handlerChainServiceName=getHandlerChainServiceName(configServiceName,handlerChainType,handlerChainId);  final HandlerChainService service=new HandlerChainService(handlerChainType,handlerChainId,protocolBindings);  final ServiceTarget target=context.getServiceTarget();  final ServiceBuilder<?> handlerChainServiceBuilder=target.addService(handlerChainServiceName,service);  final Injector<UnifiedHandlerMetaData> injector=service.getHandlersInjector();  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,handlerChainServiceName,address,HANDLER)) {    handlerChainServiceBuilder.addDependency(sn,UnifiedHandlerMetaData.class,injector);  }  ServiceController<?> controller=handlerChainServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();  if (newControllers != null) {    newControllers.add(controller);  }} @TO@ ThenBody:{  final String protocolBindings=getAttributeValue(operation,PROTOCOL_BINDINGS);  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final PathElement confElem=address.getElement(address.size() - 2);  final String configType=confElem.getKey();  final String configName=confElem.getValue();  final String handlerChainType=address.getElement(address.size() - 1).getKey();  final String handlerChainId=address.getElement(address.size() - 1).getValue();  final ServiceName configServiceName=getConfigServiceName(configType,configName);  if (context.getServiceRegistry(false).getService(configServiceName) == null) {    throw WSLogger.ROOT_LOGGER.missingConfig(configName);  }  final ServiceName handlerChainServiceName=getHandlerChainServiceName(configServiceName,handlerChainType,handlerChainId);  final HandlerChainService service=new HandlerChainService(handlerChainType,handlerChainId,protocolBindings);  final ServiceTarget target=context.getServiceTarget();  final ServiceBuilder<?> handlerChainServiceBuilder=target.addService(handlerChainServiceName,service);  for (  ServiceName sn : PackageUtils.getServiceNameDependencies(context,handlerChainServiceName,address,HANDLER)) {    handlerChainServiceBuilder.addDependency(sn,UnifiedHandlerMetaData.class,service.getHandlersInjector());  }  ServiceController<?> controller=handlerChainServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();  if (newControllers != null) {    newControllers.add(controller);  }} @AT@ 3320 @LENGTH@ 1874
---DEL VariableDeclarationStatement@@final Injector<UnifiedHandlerMetaData> injector=service.getHandlersInjector(); @AT@ 4625 @LENGTH@ 80
------DEL Modifier@@final @AT@ 4625 @LENGTH@ 5
------DEL ParameterizedType@@Injector<UnifiedHandlerMetaData> @AT@ 4631 @LENGTH@ 32
---------DEL SimpleType@@Injector @AT@ 4631 @LENGTH@ 8
---------DEL SimpleType@@UnifiedHandlerMetaData @AT@ 4640 @LENGTH@ 22
------DEL VariableDeclarationFragment@@injector=service.getHandlersInjector() @AT@ 4664 @LENGTH@ 40
---------DEL SimpleName@@injector @AT@ 4664 @LENGTH@ 8
---------DEL MethodInvocation@@service.getHandlersInjector() @AT@ 4675 @LENGTH@ 29
------------DEL SimpleName@@Name:service @AT@ 4675 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getHandlersInjector:[] @AT@ 4683 @LENGTH@ 21
---UPD EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,handlerChainServiceName,address,HANDLER)) {  handlerChainServiceBuilder.addDependency(sn,UnifiedHandlerMetaData.class,injector);} @TO@ for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,handlerChainServiceName,address,HANDLER)) {  handlerChainServiceBuilder.addDependency(sn,UnifiedHandlerMetaData.class,service.getHandlersInjector());} @AT@ 4718 @LENGTH@ 232
------UPD ExpressionStatement@@MethodInvocation:handlerChainServiceBuilder.addDependency(sn,UnifiedHandlerMetaData.class,injector) @TO@ MethodInvocation:handlerChainServiceBuilder.addDependency(sn,UnifiedHandlerMetaData.class,service.getHandlersInjector()) @AT@ 4851 @LENGTH@ 85
---------UPD MethodInvocation@@handlerChainServiceBuilder.addDependency(sn,UnifiedHandlerMetaData.class,injector) @TO@ handlerChainServiceBuilder.addDependency(sn,UnifiedHandlerMetaData.class,service.getHandlersInjector()) @AT@ 4851 @LENGTH@ 84
------------UPD SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerMetaData.class, injector] @TO@ MethodName:addDependency:[sn, UnifiedHandlerMetaData.class, service.getHandlersInjector()] @AT@ 4878 @LENGTH@ 57
---------------INS MethodInvocation@@service.getHandlersInjector() @TO@ SimpleName@@MethodName:addDependency:[sn, UnifiedHandlerMetaData.class, injector] @AT@ 4795 @LENGTH@ 29
------------------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.getHandlersInjector() @AT@ 4795 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getHandlersInjector:[] @TO@ MethodInvocation@@service.getHandlersInjector() @AT@ 4803 @LENGTH@ 21
---------------DEL SimpleName@@injector @AT@ 4926 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:sslSession=sslHandler.getEngine().getSession() @TO@ Assignment:sslSession=sslHandler.engine().getSession() @AT@ 3914 @LENGTH@ 49
---UPD Assignment@@sslSession=sslHandler.getEngine().getSession() @TO@ sslSession=sslHandler.engine().getSession() @AT@ 3914 @LENGTH@ 48
------UPD MethodInvocation@@sslHandler.getEngine().getSession() @TO@ sslHandler.engine().getSession() @AT@ 3927 @LENGTH@ 35
---------UPD MethodInvocation@@MethodName:getEngine:[] @TO@ MethodName:engine:[] @AT@ 3927 @LENGTH@ 22


UPD ReturnStatement@@MethodInvocation:JedisConverters.toDataAccessException(ex) @TO@ MethodInvocation:EXCEPTION_TRANSLATION.translate(ex) @AT@ 4869 @LENGTH@ 49
---UPD MethodInvocation@@JedisConverters.toDataAccessException(ex) @TO@ EXCEPTION_TRANSLATION.translate(ex) @AT@ 4876 @LENGTH@ 41
------UPD SimpleName@@Name:JedisConverters @TO@ Name:EXCEPTION_TRANSLATION @AT@ 4876 @LENGTH@ 15
------UPD SimpleName@@MethodName:toDataAccessException:[ex] @TO@ MethodName:translate:[ex] @AT@ 4892 @LENGTH@ 25


INS VariableDeclarationStatement@@int count=0; @TO@ MethodDeclaration@@public, Map<String,T>, T, MethodName:findByTypeWithName, Class<T> type,  @AT@ 3733 @LENGTH@ 14
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int count=0; @AT@ 3733 @LENGTH@ 3
---INS VariableDeclarationFragment@@count=0 @TO@ VariableDeclarationStatement@@int count=0; @AT@ 3737 @LENGTH@ 9
------INS SimpleName@@count @TO@ VariableDeclarationFragment@@count=0 @AT@ 3737 @LENGTH@ 5
------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@count=0 @AT@ 3745 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:setttingNullPersistenceExceptionTranslatorShouldThrowException,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]KeyValueTemplateUnitTests,  @AT@ 9890 @LENGTH@ 122
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setttingNullPersistenceExceptionTranslatorShouldThrowException,  @AT@ 9890 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setttingNullPersistenceExceptionTranslatorShouldThrowException,  @AT@ 9897 @LENGTH@ 4
---INS SimpleName@@MethodName:setttingNullPersistenceExceptionTranslatorShouldThrowException @TO@ MethodDeclaration@@public, void, MethodName:setttingNullPersistenceExceptionTranslatorShouldThrowException,  @AT@ 9902 @LENGTH@ 62
---INS ExpressionStatement@@MethodInvocation:template.setExceptionTranslator(null) @TO@ MethodDeclaration@@public, void, MethodName:setttingNullPersistenceExceptionTranslatorShouldThrowException,  @AT@ 9971 @LENGTH@ 38
------INS MethodInvocation@@template.setExceptionTranslator(null) @TO@ ExpressionStatement@@MethodInvocation:template.setExceptionTranslator(null) @AT@ 9971 @LENGTH@ 37
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.setExceptionTranslator(null) @AT@ 9971 @LENGTH@ 8
---------INS SimpleName@@MethodName:setExceptionTranslator:[null] @TO@ MethodInvocation@@template.setExceptionTranslator(null) @AT@ 9980 @LENGTH@ 28
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setExceptionTranslator:[null] @AT@ 10003 @LENGTH@ 4


MOV FieldDeclaration@@private, String, [loggerName] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="log"), public]LogEndpoint, ProcessorEndpoint @AT@ 1930 @LENGTH@ 26


UPD EnhancedForStatement@@for (Method method : m) {  if (!method.getName().equals(methodName))   continue;  Class<?>[] params=method.getParameterTypes();  if (params.length != parameterTypes.length)   continue;  for (int i=0; i < parameterTypes.length; i++) {    if (!params[i].isAssignableFrom(parameterTypes[i])) {      continue iterate_on_methods;    }  }  return method;} @TO@ for (Method method : m) {  if (!method.getName().equals(methodName)) {    continue;  }  Class<?>[] params=method.getParameterTypes();  if (params.length != parameterTypes.length) {    continue;  }  for (int i=0; i < parameterTypes.length; i++) {    if (!params[i].isAssignableFrom(parameterTypes[i])) {      continue iterate_on_methods;    }  }  return method;} @AT@ 12660 @LENGTH@ 593
---UPD IfStatement@@if (!method.getName().equals(methodName)) continue; @TO@ if (!method.getName().equals(methodName)) {  continue;} @AT@ 12706 @LENGTH@ 75
------UPD Block@@ThenBody:continue; @TO@ ThenBody:{  continue;} @AT@ 12772 @LENGTH@ 9
---UPD IfStatement@@if (params.length != parameterTypes.length) continue; @TO@ if (params.length != parameterTypes.length) {  continue;} @AT@ 12870 @LENGTH@ 77
------UPD Block@@ThenBody:continue; @TO@ ThenBody:{  continue;} @AT@ 12938 @LENGTH@ 9


MOV ExpressionStatement@@Assignment:client=testSupport.getDomainMasterLifecycleUtil().createDomainClient() @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 5916 @LENGTH@ 73


UPD TypeDeclaration@@[public]BCryptPasswordImpl, AbstractPasswordImpl[BCryptPassword] @TO@ BCryptPasswordImpl, AbstractPasswordImpl[BCryptPassword] @AT@ 1406 @LENGTH@ 29456
---DEL Modifier@@public @AT@ 1406 @LENGTH@ 6


UPD VariableDeclarationStatement@@Set<PosixFilePermission> permissions=new HashSet<>(); @TO@ Set<PosixFilePermission> permissions=new HashSet<PosixFilePermission>(); @AT@ 11750 @LENGTH@ 55
---UPD VariableDeclarationFragment@@permissions=new HashSet<>() @TO@ permissions=new HashSet<PosixFilePermission>() @AT@ 11775 @LENGTH@ 29
------UPD ClassInstanceCreation@@HashSet<>[] @TO@ HashSet<PosixFilePermission>[] @AT@ 11789 @LENGTH@ 15
---------UPD ParameterizedType@@HashSet<> @TO@ HashSet<PosixFilePermission> @AT@ 11793 @LENGTH@ 9
------------INS SimpleType@@PosixFilePermission @TO@ ParameterizedType@@HashSet<> @AT@ 11801 @LENGTH@ 19


UPD TypeDeclaration@@[public]GMailComponent, DefaultComponent @TO@ [public]GMailComponent, UriEndpointComponent @AT@ 1279 @LENGTH@ 571
---UPD SimpleType@@DefaultComponent @TO@ UriEndpointComponent @AT@ 1315 @LENGTH@ 16


UPD TypeDeclaration@@[public]GLoginEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="glogin"), public]GLoginEndpoint, DefaultEndpoint @AT@ 1190 @LENGTH@ 4353
---INS NormalAnnotation@@@UriEndpoint(scheme="glogin") @TO@ TypeDeclaration@@[public]GLoginEndpoint, DefaultEndpoint @AT@ 1269 @LENGTH@ 31


UPD ThrowStatement@@ClassInstanceCreation:new ExceptionInInitializerError(String.format("Argument %s has ambiguous types (%s, %s) across methods!",name,previousType,argType)) @TO@ ClassInstanceCreation:new IllegalArgumentException(String.format("Argument %s has ambiguous types (%s, %s) across methods!",name,previousType,argType)) @AT@ 5562 @LENGTH@ 191
---UPD ClassInstanceCreation@@ExceptionInInitializerError[String.format("Argument %s has ambiguous types (%s, %s) across methods!",name,previousType,argType)] @TO@ IllegalArgumentException[String.format("Argument %s has ambiguous types (%s, %s) across methods!",name,previousType,argType)] @AT@ 5568 @LENGTH@ 184
------UPD SimpleType@@ExceptionInInitializerError @TO@ IllegalArgumentException @AT@ 5572 @LENGTH@ 27


UPD VariableDeclarationStatement@@DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 4118 @LENGTH@ 97
---UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 4118 @LENGTH@ 17
---UPD VariableDeclarationFragment@@client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 4136 @LENGTH@ 78
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 4145 @LENGTH@ 69
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 4145 @LENGTH@ 43
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 4174 @LENGTH@ 11
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 4189 @LENGTH@ 25


UPD EnhancedForStatement@@for (String ns : nsMap.keySet()) {  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @TO@ for (String ns : nsMap.keySet()) {  if (XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) {    element.setAttribute(ns,nsMap.get(ns));  } else {    element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));  }} @AT@ 33552 @LENGTH@ 134
---INS IfStatement@@if (XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) {  element.setAttribute(ns,nsMap.get(ns));} else {  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @TO@ EnhancedForStatement@@for (String ns : nsMap.keySet()) {  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @AT@ 33599 @LENGTH@ 232
------INS MethodInvocation@@XMLConstants.XMLNS_ATTRIBUTE.equals(ns) @TO@ IfStatement@@if (XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) {  element.setAttribute(ns,nsMap.get(ns));} else {  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @AT@ 33603 @LENGTH@ 39
---------INS QualifiedName@@Name:XMLConstants.XMLNS_ATTRIBUTE @TO@ MethodInvocation@@XMLConstants.XMLNS_ATTRIBUTE.equals(ns) @AT@ 33603 @LENGTH@ 28
---------INS SimpleName@@MethodName:equals:[ns] @TO@ MethodInvocation@@XMLConstants.XMLNS_ATTRIBUTE.equals(ns) @AT@ 33632 @LENGTH@ 10
------------INS SimpleName@@ns @TO@ SimpleName@@MethodName:equals:[ns] @AT@ 33639 @LENGTH@ 2
------INS Block@@ThenBody:{  element.setAttribute(ns,nsMap.get(ns));} @TO@ IfStatement@@if (XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) {  element.setAttribute(ns,nsMap.get(ns));} else {  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @AT@ 33644 @LENGTH@ 72
---------INS ExpressionStatement@@MethodInvocation:element.setAttribute(ns,nsMap.get(ns)) @TO@ Block@@ThenBody:{  element.setAttribute(ns,nsMap.get(ns));} @AT@ 33662 @LENGTH@ 40
------------INS MethodInvocation@@element.setAttribute(ns,nsMap.get(ns)) @TO@ ExpressionStatement@@MethodInvocation:element.setAttribute(ns,nsMap.get(ns)) @AT@ 33662 @LENGTH@ 39
---------------INS SimpleName@@Name:element @TO@ MethodInvocation@@element.setAttribute(ns,nsMap.get(ns)) @AT@ 33662 @LENGTH@ 7
---------------INS SimpleName@@MethodName:setAttribute:[ns, nsMap.get(ns)] @TO@ MethodInvocation@@element.setAttribute(ns,nsMap.get(ns)) @AT@ 33670 @LENGTH@ 31
------------------INS SimpleName@@ns @TO@ SimpleName@@MethodName:setAttribute:[ns, nsMap.get(ns)] @AT@ 33683 @LENGTH@ 2
------------------INS MethodInvocation@@nsMap.get(ns) @TO@ SimpleName@@MethodName:setAttribute:[ns, nsMap.get(ns)] @AT@ 33687 @LENGTH@ 13
---------------------INS SimpleName@@Name:nsMap @TO@ MethodInvocation@@nsMap.get(ns) @AT@ 33687 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:get:[ns] @TO@ MethodInvocation@@nsMap.get(ns) @AT@ 33693 @LENGTH@ 7
------------------------INS SimpleName@@ns @TO@ SimpleName@@MethodName:get:[ns] @AT@ 33697 @LENGTH@ 2
------INS Block@@ElseBody:{  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @TO@ IfStatement@@if (XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) {  element.setAttribute(ns,nsMap.get(ns));} else {  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @AT@ 33722 @LENGTH@ 109
---------MOV ExpressionStatement@@MethodInvocation:element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns)) @TO@ Block@@ElseBody:{  element.setAttribute(XMLConstants.XMLNS_ATTRIBUTE + ":" + ns,nsMap.get(ns));} @AT@ 33599 @LENGTH@ 77


UPD ExpressionStatement@@Assignment:basePlan=hepPlan(basePlan,false,mdProvider,new TransitivePredicatesOnJoinRule(JoinRelBase.class,HiveFilterRel.DEFAULT_FILTER_FACTORY),RemoveTrivialProjectRule.INSTANCE,new HivePartitionPrunerRule(SemanticAnalyzer.this.conf)) @TO@ Assignment:basePlan=hepPlan(basePlan,false,mdProvider,new TransitivePredicatesOnJoinRule(JoinRelBase.class,HiveFilterRel.DEFAULT_FILTER_FACTORY),new HivePartitionPrunerRule(SemanticAnalyzer.this.conf)) @AT@ 473590 @LENGTH@ 264
---UPD Assignment@@basePlan=hepPlan(basePlan,false,mdProvider,new TransitivePredicatesOnJoinRule(JoinRelBase.class,HiveFilterRel.DEFAULT_FILTER_FACTORY),RemoveTrivialProjectRule.INSTANCE,new HivePartitionPrunerRule(SemanticAnalyzer.this.conf)) @TO@ basePlan=hepPlan(basePlan,false,mdProvider,new TransitivePredicatesOnJoinRule(JoinRelBase.class,HiveFilterRel.DEFAULT_FILTER_FACTORY),new HivePartitionPrunerRule(SemanticAnalyzer.this.conf)) @AT@ 473590 @LENGTH@ 263
------UPD MethodInvocation@@hepPlan(basePlan,false,mdProvider,new TransitivePredicatesOnJoinRule(JoinRelBase.class,HiveFilterRel.DEFAULT_FILTER_FACTORY),RemoveTrivialProjectRule.INSTANCE,new HivePartitionPrunerRule(SemanticAnalyzer.this.conf)) @TO@ hepPlan(basePlan,false,mdProvider,new TransitivePredicatesOnJoinRule(JoinRelBase.class,HiveFilterRel.DEFAULT_FILTER_FACTORY),new HivePartitionPrunerRule(SemanticAnalyzer.this.conf)) @AT@ 473601 @LENGTH@ 252
---------UPD SimpleName@@MethodName:hepPlan:[basePlan, false, mdProvider, new TransitivePredicatesOnJoinRule(JoinRelBase.class,HiveFilterRel.DEFAULT_FILTER_FACTORY), RemoveTrivialProjectRule.INSTANCE, new HivePartitionPrunerRule(SemanticAnalyzer.this.conf)] @TO@ MethodName:hepPlan:[basePlan, false, mdProvider, new TransitivePredicatesOnJoinRule(JoinRelBase.class,HiveFilterRel.DEFAULT_FILTER_FACTORY), new HivePartitionPrunerRule(SemanticAnalyzer.this.conf)] @AT@ 473601 @LENGTH@ 252
------------DEL QualifiedName@@RemoveTrivialProjectRule.INSTANCE @AT@ 473752 @LENGTH@ 33
---------------DEL SimpleName@@RemoveTrivialProjectRule @AT@ 473752 @LENGTH@ 24
---------------DEL SimpleName@@INSTANCE @AT@ 473777 @LENGTH@ 8


UPD TypeDeclaration@@[public, final]ConditionalRejectingErrorHandler, [ErrorHandler] @TO@ [public]ConditionalRejectingErrorHandler, [ErrorHandler] @AT@ 1717 @LENGTH@ 2004
---DEL Modifier@@final @AT@ 1724 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @TO@ TypeDeclaration@@[public]ElasticsearchComponentTest, CamelTestSupport @AT@ 5090 @LENGTH@ 809
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5090 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5097 @LENGTH@ 4
---INS SimpleName@@MethodName:testIndexWithIDInHeader @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5102 @LENGTH@ 23
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5135 @LENGTH@ 9
---INS VariableDeclarationStatement@@Map<String,String> map=new HashMap<String,String>(); @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5155 @LENGTH@ 56
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> map=new HashMap<String,String>(); @AT@ 5155 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 5155 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 5159 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 5167 @LENGTH@ 6
------INS VariableDeclarationFragment@@map=new HashMap<String,String>() @TO@ VariableDeclarationStatement@@Map<String,String> map=new HashMap<String,String>(); @AT@ 5175 @LENGTH@ 35
---------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=new HashMap<String,String>() @AT@ 5175 @LENGTH@ 3
---------INS ClassInstanceCreation@@HashMap<String,String>[] @TO@ VariableDeclarationFragment@@map=new HashMap<String,String>() @AT@ 5181 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 5181 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 5185 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 5185 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 5193 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 5201 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:map.put("content","test") @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5220 @LENGTH@ 27
------INS MethodInvocation@@map.put("content","test") @TO@ ExpressionStatement@@MethodInvocation:map.put("content","test") @AT@ 5220 @LENGTH@ 26
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("content","test") @AT@ 5220 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["content", "test"] @TO@ MethodInvocation@@map.put("content","test") @AT@ 5224 @LENGTH@ 22
------------INS StringLiteral@@"content" @TO@ SimpleName@@MethodName:put:["content", "test"] @AT@ 5228 @LENGTH@ 9
------------INS StringLiteral@@"test" @TO@ SimpleName@@MethodName:put:["content", "test"] @AT@ 5239 @LENGTH@ 6
---INS VariableDeclarationStatement@@Map<String,Object> headers=new HashMap<String,Object>(); @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5257 @LENGTH@ 60
------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> headers=new HashMap<String,Object>(); @AT@ 5257 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 5257 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 5261 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 5269 @LENGTH@ 6
------INS VariableDeclarationFragment@@headers=new HashMap<String,Object>() @TO@ VariableDeclarationStatement@@Map<String,Object> headers=new HashMap<String,Object>(); @AT@ 5277 @LENGTH@ 39
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=new HashMap<String,Object>() @AT@ 5277 @LENGTH@ 7
---------INS ClassInstanceCreation@@HashMap<String,Object>[] @TO@ VariableDeclarationFragment@@headers=new HashMap<String,Object>() @AT@ 5287 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,Object>[] @AT@ 5287 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap<String,Object>[] @AT@ 5291 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 5291 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 5299 @LENGTH@ 6
---------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 5307 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:headers.put(ElasticsearchConfiguration.PARAM_OPERATION,ElasticsearchConfiguration.OPERATION_INDEX) @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5326 @LENGTH@ 100
------INS MethodInvocation@@headers.put(ElasticsearchConfiguration.PARAM_OPERATION,ElasticsearchConfiguration.OPERATION_INDEX) @TO@ ExpressionStatement@@MethodInvocation:headers.put(ElasticsearchConfiguration.PARAM_OPERATION,ElasticsearchConfiguration.OPERATION_INDEX) @AT@ 5326 @LENGTH@ 99
---------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.put(ElasticsearchConfiguration.PARAM_OPERATION,ElasticsearchConfiguration.OPERATION_INDEX) @AT@ 5326 @LENGTH@ 7
---------INS SimpleName@@MethodName:put:[ElasticsearchConfiguration.PARAM_OPERATION, ElasticsearchConfiguration.OPERATION_INDEX] @TO@ MethodInvocation@@headers.put(ElasticsearchConfiguration.PARAM_OPERATION,ElasticsearchConfiguration.OPERATION_INDEX) @AT@ 5334 @LENGTH@ 91
------------INS QualifiedName@@ElasticsearchConfiguration.PARAM_OPERATION @TO@ SimpleName@@MethodName:put:[ElasticsearchConfiguration.PARAM_OPERATION, ElasticsearchConfiguration.OPERATION_INDEX] @AT@ 5338 @LENGTH@ 42
---------------INS SimpleName@@ElasticsearchConfiguration @TO@ QualifiedName@@ElasticsearchConfiguration.PARAM_OPERATION @AT@ 5338 @LENGTH@ 26
---------------INS SimpleName@@PARAM_OPERATION @TO@ QualifiedName@@ElasticsearchConfiguration.PARAM_OPERATION @AT@ 5365 @LENGTH@ 15
------------INS QualifiedName@@ElasticsearchConfiguration.OPERATION_INDEX @TO@ SimpleName@@MethodName:put:[ElasticsearchConfiguration.PARAM_OPERATION, ElasticsearchConfiguration.OPERATION_INDEX] @AT@ 5382 @LENGTH@ 42
---------------INS SimpleName@@ElasticsearchConfiguration @TO@ QualifiedName@@ElasticsearchConfiguration.OPERATION_INDEX @AT@ 5382 @LENGTH@ 26
---------------INS SimpleName@@OPERATION_INDEX @TO@ QualifiedName@@ElasticsearchConfiguration.OPERATION_INDEX @AT@ 5409 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:headers.put(ElasticsearchConfiguration.PARAM_INDEX_NAME,"twitter") @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5435 @LENGTH@ 68
------INS MethodInvocation@@headers.put(ElasticsearchConfiguration.PARAM_INDEX_NAME,"twitter") @TO@ ExpressionStatement@@MethodInvocation:headers.put(ElasticsearchConfiguration.PARAM_INDEX_NAME,"twitter") @AT@ 5435 @LENGTH@ 67
---------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.put(ElasticsearchConfiguration.PARAM_INDEX_NAME,"twitter") @AT@ 5435 @LENGTH@ 7
---------INS SimpleName@@MethodName:put:[ElasticsearchConfiguration.PARAM_INDEX_NAME, "twitter"] @TO@ MethodInvocation@@headers.put(ElasticsearchConfiguration.PARAM_INDEX_NAME,"twitter") @AT@ 5443 @LENGTH@ 59
------------INS QualifiedName@@ElasticsearchConfiguration.PARAM_INDEX_NAME @TO@ SimpleName@@MethodName:put:[ElasticsearchConfiguration.PARAM_INDEX_NAME, "twitter"] @AT@ 5447 @LENGTH@ 43
---------------INS SimpleName@@ElasticsearchConfiguration @TO@ QualifiedName@@ElasticsearchConfiguration.PARAM_INDEX_NAME @AT@ 5447 @LENGTH@ 26
---------------INS SimpleName@@PARAM_INDEX_NAME @TO@ QualifiedName@@ElasticsearchConfiguration.PARAM_INDEX_NAME @AT@ 5474 @LENGTH@ 16
------------INS StringLiteral@@"twitter" @TO@ SimpleName@@MethodName:put:[ElasticsearchConfiguration.PARAM_INDEX_NAME, "twitter"] @AT@ 5492 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:headers.put(ElasticsearchConfiguration.PARAM_INDEX_TYPE,"tweet") @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5512 @LENGTH@ 66
------INS MethodInvocation@@headers.put(ElasticsearchConfiguration.PARAM_INDEX_TYPE,"tweet") @TO@ ExpressionStatement@@MethodInvocation:headers.put(ElasticsearchConfiguration.PARAM_INDEX_TYPE,"tweet") @AT@ 5512 @LENGTH@ 65
---------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.put(ElasticsearchConfiguration.PARAM_INDEX_TYPE,"tweet") @AT@ 5512 @LENGTH@ 7
---------INS SimpleName@@MethodName:put:[ElasticsearchConfiguration.PARAM_INDEX_TYPE, "tweet"] @TO@ MethodInvocation@@headers.put(ElasticsearchConfiguration.PARAM_INDEX_TYPE,"tweet") @AT@ 5520 @LENGTH@ 57
------------INS QualifiedName@@ElasticsearchConfiguration.PARAM_INDEX_TYPE @TO@ SimpleName@@MethodName:put:[ElasticsearchConfiguration.PARAM_INDEX_TYPE, "tweet"] @AT@ 5524 @LENGTH@ 43
---------------INS SimpleName@@ElasticsearchConfiguration @TO@ QualifiedName@@ElasticsearchConfiguration.PARAM_INDEX_TYPE @AT@ 5524 @LENGTH@ 26
---------------INS SimpleName@@PARAM_INDEX_TYPE @TO@ QualifiedName@@ElasticsearchConfiguration.PARAM_INDEX_TYPE @AT@ 5551 @LENGTH@ 16
------------INS StringLiteral@@"tweet" @TO@ SimpleName@@MethodName:put:[ElasticsearchConfiguration.PARAM_INDEX_TYPE, "tweet"] @AT@ 5569 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:headers.put(ElasticsearchConfiguration.PARAM_INDEX_ID,"123") @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5587 @LENGTH@ 62
------INS MethodInvocation@@headers.put(ElasticsearchConfiguration.PARAM_INDEX_ID,"123") @TO@ ExpressionStatement@@MethodInvocation:headers.put(ElasticsearchConfiguration.PARAM_INDEX_ID,"123") @AT@ 5587 @LENGTH@ 61
---------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.put(ElasticsearchConfiguration.PARAM_INDEX_ID,"123") @AT@ 5587 @LENGTH@ 7
---------INS SimpleName@@MethodName:put:[ElasticsearchConfiguration.PARAM_INDEX_ID, "123"] @TO@ MethodInvocation@@headers.put(ElasticsearchConfiguration.PARAM_INDEX_ID,"123") @AT@ 5595 @LENGTH@ 53
------------INS QualifiedName@@ElasticsearchConfiguration.PARAM_INDEX_ID @TO@ SimpleName@@MethodName:put:[ElasticsearchConfiguration.PARAM_INDEX_ID, "123"] @AT@ 5599 @LENGTH@ 41
---------------INS SimpleName@@ElasticsearchConfiguration @TO@ QualifiedName@@ElasticsearchConfiguration.PARAM_INDEX_ID @AT@ 5599 @LENGTH@ 26
---------------INS SimpleName@@PARAM_INDEX_ID @TO@ QualifiedName@@ElasticsearchConfiguration.PARAM_INDEX_ID @AT@ 5626 @LENGTH@ 14
------------INS StringLiteral@@"123" @TO@ SimpleName@@MethodName:put:[ElasticsearchConfiguration.PARAM_INDEX_ID, "123"] @AT@ 5642 @LENGTH@ 5
---INS VariableDeclarationStatement@@String indexId=template.requestBodyAndHeaders("direct:start",map,headers,String.class); @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5659 @LENGTH@ 92
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String indexId=template.requestBodyAndHeaders("direct:start",map,headers,String.class); @AT@ 5659 @LENGTH@ 6
------INS VariableDeclarationFragment@@indexId=template.requestBodyAndHeaders("direct:start",map,headers,String.class) @TO@ VariableDeclarationStatement@@String indexId=template.requestBodyAndHeaders("direct:start",map,headers,String.class); @AT@ 5666 @LENGTH@ 84
---------INS SimpleName@@indexId @TO@ VariableDeclarationFragment@@indexId=template.requestBodyAndHeaders("direct:start",map,headers,String.class) @AT@ 5666 @LENGTH@ 7
---------INS MethodInvocation@@template.requestBodyAndHeaders("direct:start",map,headers,String.class) @TO@ VariableDeclarationFragment@@indexId=template.requestBodyAndHeaders("direct:start",map,headers,String.class) @AT@ 5676 @LENGTH@ 74
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBodyAndHeaders("direct:start",map,headers,String.class) @AT@ 5676 @LENGTH@ 8
------------INS SimpleName@@MethodName:requestBodyAndHeaders:["direct:start", map, headers, String.class] @TO@ MethodInvocation@@template.requestBodyAndHeaders("direct:start",map,headers,String.class) @AT@ 5685 @LENGTH@ 65
---------------INS StringLiteral@@"direct:start" @TO@ SimpleName@@MethodName:requestBodyAndHeaders:["direct:start", map, headers, String.class] @AT@ 5707 @LENGTH@ 14
---------------INS SimpleName@@map @TO@ SimpleName@@MethodName:requestBodyAndHeaders:["direct:start", map, headers, String.class] @AT@ 5723 @LENGTH@ 3
---------------INS SimpleName@@headers @TO@ SimpleName@@MethodName:requestBodyAndHeaders:["direct:start", map, headers, String.class] @AT@ 5728 @LENGTH@ 7
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:requestBodyAndHeaders:["direct:start", map, headers, String.class] @AT@ 5737 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertNotNull("indexId should be set",indexId) @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5760 @LENGTH@ 48
------INS MethodInvocation@@assertNotNull("indexId should be set",indexId) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull("indexId should be set",indexId) @AT@ 5760 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertNotNull:["indexId should be set", indexId] @TO@ MethodInvocation@@assertNotNull("indexId should be set",indexId) @AT@ 5760 @LENGTH@ 47
------------INS StringLiteral@@"indexId should be set" @TO@ SimpleName@@MethodName:assertNotNull:["indexId should be set", indexId] @AT@ 5774 @LENGTH@ 23
------------INS SimpleName@@indexId @TO@ SimpleName@@MethodName:assertNotNull:["indexId should be set", indexId] @AT@ 5799 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertEquals("indexId should be equals to the provided id","123",indexId) @TO@ MethodDeclaration@@public, void, MethodName:testIndexWithIDInHeader, Exception,  @AT@ 5817 @LENGTH@ 76
------INS MethodInvocation@@assertEquals("indexId should be equals to the provided id","123",indexId) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("indexId should be equals to the provided id","123",indexId) @AT@ 5817 @LENGTH@ 75
---------INS SimpleName@@MethodName:assertEquals:["indexId should be equals to the provided id", "123", indexId] @TO@ MethodInvocation@@assertEquals("indexId should be equals to the provided id","123",indexId) @AT@ 5817 @LENGTH@ 75
------------INS StringLiteral@@"indexId should be equals to the provided id" @TO@ SimpleName@@MethodName:assertEquals:["indexId should be equals to the provided id", "123", indexId] @AT@ 5830 @LENGTH@ 45
------------INS StringLiteral@@"123" @TO@ SimpleName@@MethodName:assertEquals:["indexId should be equals to the provided id", "123", indexId] @AT@ 5877 @LENGTH@ 5
------------INS SimpleName@@indexId @TO@ SimpleName@@MethodName:assertEquals:["indexId should be equals to the provided id", "123", indexId] @AT@ 5884 @LENGTH@ 7


UPD TypeDeclaration@@[@RunWith(WildflyTestRunner.class), @ServerControl(manual=true), @FixMethodOrder(MethodSorters.NAME_ASCENDING), public]CustomVaultInCLITestCase,  @TO@ [@RunWith(WildflyTestRunner.class), @ServerControl(manual=true), public]CustomVaultInCLITestCase,  @AT@ 2388 @LENGTH@ 6405
---DEL SingleMemberAnnotation@@@FixMethodOrder(MethodSorters.NAME_ASCENDING) @AT@ 2452 @LENGTH@ 45


INS ExpressionStatement@@MethodInvocation:((DefaultCamelContextRegistry)CamelContextRegistry.INSTANCE).clear() @TO@ MethodDeclaration@@public, void, MethodName:testContainerSet, Exception,  @AT@ 1663 @LENGTH@ 70
---INS MethodInvocation@@((DefaultCamelContextRegistry)CamelContextRegistry.INSTANCE).clear() @TO@ ExpressionStatement@@MethodInvocation:((DefaultCamelContextRegistry)CamelContextRegistry.INSTANCE).clear() @AT@ 1663 @LENGTH@ 69
------INS ParenthesizedExpression@@((DefaultCamelContextRegistry)CamelContextRegistry.INSTANCE) @TO@ MethodInvocation@@((DefaultCamelContextRegistry)CamelContextRegistry.INSTANCE).clear() @AT@ 1663 @LENGTH@ 61
---------INS CastExpression@@(DefaultCamelContextRegistry)CamelContextRegistry.INSTANCE @TO@ ParenthesizedExpression@@((DefaultCamelContextRegistry)CamelContextRegistry.INSTANCE) @AT@ 1664 @LENGTH@ 59
------------INS SimpleType@@DefaultCamelContextRegistry @TO@ CastExpression@@(DefaultCamelContextRegistry)CamelContextRegistry.INSTANCE @AT@ 1665 @LENGTH@ 27
------------INS QualifiedName@@CamelContextRegistry.INSTANCE @TO@ CastExpression@@(DefaultCamelContextRegistry)CamelContextRegistry.INSTANCE @AT@ 1694 @LENGTH@ 29
---------------INS SimpleName@@CamelContextRegistry @TO@ QualifiedName@@CamelContextRegistry.INSTANCE @AT@ 1694 @LENGTH@ 20
---------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@CamelContextRegistry.INSTANCE @AT@ 1715 @LENGTH@ 8
------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@((DefaultCamelContextRegistry)CamelContextRegistry.INSTANCE).clear() @AT@ 1725 @LENGTH@ 7


UPD IfStatement@@if (value instanceof String) {  String string=((String)value).trim();  Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(string);  while (valueMatcher.find()) {    int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));    boolean quoted=(string.startsWith("'") && string.endsWith("'")) || (string.startsWith("\"") && string.endsWith("\""));    bindings.add(new ParameterBinding(paramIndex,quoted));  }} else if (value instanceof Pattern) {  String string=((Pattern)value).toString().trim();  Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(string);  while (valueMatcher.find()) {    int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));    boolean quoted=!string.equals(PARAMETER_PREFIX + paramIndex);    bindings.add(new ParameterBinding(paramIndex,quoted));  }} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @TO@ if (value instanceof String) {  String string=((String)value).trim();  potentiallyAddBinding(string,bindings);} else if (value instanceof Pattern) {  String string=((Pattern)value).toString().trim();  Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(string);  while (valueMatcher.find()) {    int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));    boolean quoted=!string.equals(PARAMETER_PREFIX + paramIndex);    bindings.add(new ParameterBinding(paramIndex,quoted));  }} else if (value instanceof DBRef) {  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @AT@ 7205 @LENGTH@ 1271
---UPD Block@@ThenBody:{  String string=((String)value).trim();  Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(string);  while (valueMatcher.find()) {    int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));    boolean quoted=(string.startsWith("'") && string.endsWith("'")) || (string.startsWith("\"") && string.endsWith("\""));    bindings.add(new ParameterBinding(paramIndex,quoted));  }} @TO@ ThenBody:{  String string=((String)value).trim();  potentiallyAddBinding(string,bindings);} @AT@ 7234 @LENGTH@ 441
------DEL VariableDeclarationStatement@@Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(string); @AT@ 7287 @LENGTH@ 65
---------DEL SimpleType@@Matcher @AT@ 7287 @LENGTH@ 7
---------DEL VariableDeclarationFragment@@valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(string) @AT@ 7295 @LENGTH@ 56
------------DEL SimpleName@@valueMatcher @AT@ 7295 @LENGTH@ 12
------------DEL MethodInvocation@@PARSEABLE_BINDING_PATTERN.matcher(string) @AT@ 7310 @LENGTH@ 41
---------------DEL SimpleName@@Name:PARSEABLE_BINDING_PATTERN @AT@ 7310 @LENGTH@ 25
------DEL WhileStatement@@while (valueMatcher.find()) {  int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));  boolean quoted=(string.startsWith("'") && string.endsWith("'")) || (string.startsWith("\"") && string.endsWith("\""));  bindings.add(new ParameterBinding(paramIndex,quoted));} @AT@ 7357 @LENGTH@ 312
---------DEL MethodInvocation@@valueMatcher.find() @AT@ 7364 @LENGTH@ 19
------------DEL SimpleName@@Name:valueMatcher @AT@ 7364 @LENGTH@ 12
------------DEL SimpleName@@MethodName:find:[] @AT@ 7377 @LENGTH@ 6
---------DEL Block@@WhileBody:{  int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));  boolean quoted=(string.startsWith("'") && string.endsWith("'")) || (string.startsWith("\"") && string.endsWith("\""));  bindings.add(new ParameterBinding(paramIndex,quoted));} @AT@ 7385 @LENGTH@ 284
------------DEL VariableDeclarationStatement@@boolean quoted=(string.startsWith("'") && string.endsWith("'")) || (string.startsWith("\"") && string.endsWith("\"")); @AT@ 7475 @LENGTH@ 127
---------------DEL PrimitiveType@@boolean @AT@ 7475 @LENGTH@ 7
---------------DEL VariableDeclarationFragment@@quoted=(string.startsWith("'") && string.endsWith("'")) || (string.startsWith("\"") && string.endsWith("\"")) @AT@ 7483 @LENGTH@ 118
------------------DEL SimpleName@@quoted @AT@ 7483 @LENGTH@ 6
------------------DEL InfixExpression@@(string.startsWith("'") && string.endsWith("'")) || (string.startsWith("\"") && string.endsWith("\"")) @AT@ 7492 @LENGTH@ 109
---------------------DEL ParenthesizedExpression@@(string.startsWith("'") && string.endsWith("'")) @AT@ 7492 @LENGTH@ 48
------------------------DEL InfixExpression@@string.startsWith("'") && string.endsWith("'") @AT@ 7493 @LENGTH@ 46
---------------------------DEL MethodInvocation@@string.startsWith("'") @AT@ 7493 @LENGTH@ 22
------------------------------DEL SimpleName@@Name:string @AT@ 7493 @LENGTH@ 6
------------------------------DEL SimpleName@@MethodName:startsWith:["'"] @AT@ 7500 @LENGTH@ 15
---------------------------------DEL StringLiteral@@"'" @AT@ 7511 @LENGTH@ 3
---------------------------DEL Operator@@&& @AT@ 7515 @LENGTH@ 2
---------------------------DEL MethodInvocation@@string.endsWith("'") @AT@ 7519 @LENGTH@ 20
------------------------------DEL SimpleName@@Name:string @AT@ 7519 @LENGTH@ 6
------------------------------DEL SimpleName@@MethodName:endsWith:["'"] @AT@ 7526 @LENGTH@ 13
---------------------------------DEL StringLiteral@@"'" @AT@ 7535 @LENGTH@ 3
---------------------DEL Operator@@|| @AT@ 7540 @LENGTH@ 2
---------------------DEL ParenthesizedExpression@@(string.startsWith("\"") && string.endsWith("\"")) @AT@ 7551 @LENGTH@ 50
------------------------DEL InfixExpression@@string.startsWith("\"") && string.endsWith("\"") @AT@ 7552 @LENGTH@ 48
---------------------------DEL MethodInvocation@@string.startsWith("\"") @AT@ 7552 @LENGTH@ 23
------------------------------DEL SimpleName@@Name:string @AT@ 7552 @LENGTH@ 6
------------------------------DEL SimpleName@@MethodName:startsWith:["\""] @AT@ 7559 @LENGTH@ 16
---------------------------------DEL StringLiteral@@"\"" @AT@ 7570 @LENGTH@ 4
---------------------------DEL Operator@@&& @AT@ 7575 @LENGTH@ 2
---------------------------DEL MethodInvocation@@string.endsWith("\"") @AT@ 7579 @LENGTH@ 21
------------------------------DEL SimpleName@@Name:string @AT@ 7579 @LENGTH@ 6
------------------------------DEL SimpleName@@MethodName:endsWith:["\""] @AT@ 7586 @LENGTH@ 14
---------------------------------DEL StringLiteral@@"\"" @AT@ 7595 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:potentiallyAddBinding(string,bindings) @TO@ Block@@ThenBody:{  String string=((String)value).trim();  Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(string);  while (valueMatcher.find()) {    int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));    boolean quoted=(string.startsWith("'") && string.endsWith("'")) || (string.startsWith("\"") && string.endsWith("\""));    bindings.add(new ParameterBinding(paramIndex,quoted));  }} @AT@ 7371 @LENGTH@ 40
---------INS MethodInvocation@@potentiallyAddBinding(string,bindings) @TO@ ExpressionStatement@@MethodInvocation:potentiallyAddBinding(string,bindings) @AT@ 7371 @LENGTH@ 39
------------MOV SimpleName@@MethodName:matcher:[string] @TO@ MethodInvocation@@potentiallyAddBinding(string,bindings) @AT@ 7336 @LENGTH@ 15
---------------INS SimpleName@@bindings @TO@ SimpleName@@MethodName:matcher:[string] @AT@ 7401 @LENGTH@ 8
---UPD Block@@ElseBody:if (value instanceof Pattern) {  String string=((Pattern)value).toString().trim();  Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(string);  while (valueMatcher.find()) {    int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));    boolean quoted=!string.equals(PARAMETER_PREFIX + paramIndex);    bindings.add(new ParameterBinding(paramIndex,quoted));  }} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @TO@ ElseBody:if (value instanceof Pattern) {  String string=((Pattern)value).toString().trim();  Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(string);  while (valueMatcher.find()) {    int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));    boolean quoted=!string.equals(PARAMETER_PREFIX + paramIndex);    bindings.add(new ParameterBinding(paramIndex,quoted));  }} else if (value instanceof DBRef) {  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @AT@ 7681 @LENGTH@ 795
------UPD IfStatement@@if (value instanceof Pattern) {  String string=((Pattern)value).toString().trim();  Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(string);  while (valueMatcher.find()) {    int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));    boolean quoted=!string.equals(PARAMETER_PREFIX + paramIndex);    bindings.add(new ParameterBinding(paramIndex,quoted));  }} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @TO@ if (value instanceof Pattern) {  String string=((Pattern)value).toString().trim();  Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(string);  while (valueMatcher.find()) {    int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));    boolean quoted=!string.equals(PARAMETER_PREFIX + paramIndex);    bindings.add(new ParameterBinding(paramIndex,quoted));  }} else if (value instanceof DBRef) {  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @AT@ 7681 @LENGTH@ 795
---------INS Block@@ElseBody:if (value instanceof DBRef) {  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @TO@ IfStatement@@if (value instanceof Pattern) {  String string=((Pattern)value).toString().trim();  Matcher valueMatcher=PARSEABLE_BINDING_PATTERN.matcher(string);  while (valueMatcher.find()) {    int paramIndex=Integer.parseInt(valueMatcher.group(PARAMETER_INDEX_GROUP));    boolean quoted=!string.equals(PARAMETER_PREFIX + paramIndex);    bindings.add(new ParameterBinding(paramIndex,quoted));  }} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @AT@ 8025 @LENGTH@ 385
------------INS IfStatement@@if (value instanceof DBRef) {  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @TO@ Block@@ElseBody:if (value instanceof DBRef) {  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @AT@ 8025 @LENGTH@ 385
---------------INS InstanceofExpression@@value instanceof DBRef @TO@ IfStatement@@if (value instanceof DBRef) {  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @AT@ 8029 @LENGTH@ 22
------------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof DBRef @AT@ 8029 @LENGTH@ 5
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof DBRef @AT@ 8035 @LENGTH@ 10
------------------INS SimpleType@@DBRef @TO@ InstanceofExpression@@value instanceof DBRef @AT@ 8046 @LENGTH@ 5
---------------INS Block@@ThenBody:{  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} @TO@ IfStatement@@if (value instanceof DBRef) {  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @AT@ 8053 @LENGTH@ 158
------------------INS VariableDeclarationStatement@@DBRef dbref=(DBRef)value; @TO@ Block@@ThenBody:{  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} @AT@ 8060 @LENGTH@ 28
---------------------INS SimpleType@@DBRef @TO@ VariableDeclarationStatement@@DBRef dbref=(DBRef)value; @AT@ 8060 @LENGTH@ 5
---------------------INS VariableDeclarationFragment@@dbref=(DBRef)value @TO@ VariableDeclarationStatement@@DBRef dbref=(DBRef)value; @AT@ 8066 @LENGTH@ 21
------------------------INS SimpleName@@dbref @TO@ VariableDeclarationFragment@@dbref=(DBRef)value @AT@ 8066 @LENGTH@ 5
------------------------INS CastExpression@@(DBRef)value @TO@ VariableDeclarationFragment@@dbref=(DBRef)value @AT@ 8074 @LENGTH@ 13
---------------------------INS SimpleType@@DBRef @TO@ CastExpression@@(DBRef)value @AT@ 8075 @LENGTH@ 5
---------------------------INS SimpleName@@value @TO@ CastExpression@@(DBRef)value @AT@ 8082 @LENGTH@ 5
------------------INS ExpressionStatement@@MethodInvocation:potentiallyAddBinding(dbref.getRef(),bindings) @TO@ Block@@ThenBody:{  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} @AT@ 8094 @LENGTH@ 48
---------------------INS MethodInvocation@@potentiallyAddBinding(dbref.getRef(),bindings) @TO@ ExpressionStatement@@MethodInvocation:potentiallyAddBinding(dbref.getRef(),bindings) @AT@ 8094 @LENGTH@ 47
------------------------INS SimpleName@@MethodName:potentiallyAddBinding:[dbref.getRef(), bindings] @TO@ MethodInvocation@@potentiallyAddBinding(dbref.getRef(),bindings) @AT@ 8094 @LENGTH@ 47
---------------------------INS MethodInvocation@@dbref.getRef() @TO@ SimpleName@@MethodName:potentiallyAddBinding:[dbref.getRef(), bindings] @AT@ 8116 @LENGTH@ 14
------------------------------INS SimpleName@@Name:dbref @TO@ MethodInvocation@@dbref.getRef() @AT@ 8116 @LENGTH@ 5
------------------------------INS SimpleName@@MethodName:getRef:[] @TO@ MethodInvocation@@dbref.getRef() @AT@ 8122 @LENGTH@ 8
---------------------------INS SimpleName@@bindings @TO@ SimpleName@@MethodName:potentiallyAddBinding:[dbref.getRef(), bindings] @AT@ 8132 @LENGTH@ 8
------------------INS ExpressionStatement@@MethodInvocation:potentiallyAddBinding(dbref.getId().toString(),bindings) @TO@ Block@@ThenBody:{  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} @AT@ 8147 @LENGTH@ 58
---------------------INS MethodInvocation@@potentiallyAddBinding(dbref.getId().toString(),bindings) @TO@ ExpressionStatement@@MethodInvocation:potentiallyAddBinding(dbref.getId().toString(),bindings) @AT@ 8147 @LENGTH@ 57
------------------------INS SimpleName@@MethodName:potentiallyAddBinding:[dbref.getId().toString(), bindings] @TO@ MethodInvocation@@potentiallyAddBinding(dbref.getId().toString(),bindings) @AT@ 8147 @LENGTH@ 57
---------------------------INS MethodInvocation@@dbref.getId().toString() @TO@ SimpleName@@MethodName:potentiallyAddBinding:[dbref.getId().toString(), bindings] @AT@ 8169 @LENGTH@ 24
------------------------------INS MethodInvocation@@MethodName:getId:[] @TO@ MethodInvocation@@dbref.getId().toString() @AT@ 8169 @LENGTH@ 13
------------------------------INS SimpleName@@Name:dbref @TO@ MethodInvocation@@dbref.getId().toString() @AT@ 8169 @LENGTH@ 5
------------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@dbref.getId().toString() @AT@ 8183 @LENGTH@ 10
---------------------------INS SimpleName@@bindings @TO@ SimpleName@@MethodName:potentiallyAddBinding:[dbref.getId().toString(), bindings] @AT@ 8195 @LENGTH@ 8
---------------MOV Block@@ElseBody:if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @TO@ IfStatement@@if (value instanceof DBRef) {  DBRef dbref=(DBRef)value;  potentiallyAddBinding(dbref.getRef(),bindings);  potentiallyAddBinding(dbref.getId().toString(),bindings);} else if (value instanceof DBObject) {  DBObject dbo=(DBObject)value;  for (  String field : dbo.keySet()) {    collectParameterReferencesIntoBindings(bindings,dbo.get(field));  }} @AT@ 8283 @LENGTH@ 193


UPD VariableDeclarationStatement@@Object out=template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec","Hello World"); @TO@ Object out=template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec","Hello World",String.class); @AT@ 1836 @LENGTH@ 118
---UPD VariableDeclarationFragment@@out=template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec","Hello World") @TO@ out=template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec","Hello World",String.class) @AT@ 1843 @LENGTH@ 110
------UPD MethodInvocation@@template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec","Hello World") @TO@ template.requestBody("mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec","Hello World",String.class) @AT@ 1849 @LENGTH@ 104
---------UPD SimpleName@@MethodName:requestBody:["mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec", "Hello World"] @TO@ MethodName:requestBody:["mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec", "Hello World", String.class] @AT@ 1858 @LENGTH@ 95
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:requestBody:["mina2:tcp://127.0.0.1:" + getPort() + "?sync=true&codec=#hl7codec", "Hello World"] @AT@ 1954 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:testNFKC,  @TO@ TypeDeclaration@@[public]StringPrepTest,  @AT@ 6866 @LENGTH@ 216
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNFKC,  @AT@ 6866 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNFKC,  @AT@ 6873 @LENGTH@ 4
---INS SimpleName@@MethodName:testNFKC @TO@ MethodDeclaration@@public, void, MethodName:testNFKC,  @AT@ 6878 @LENGTH@ 8
---INS VariableDeclarationStatement@@ByteStringBuilder b=new ByteStringBuilder(); @TO@ MethodDeclaration@@public, void, MethodName:testNFKC,  @AT@ 6898 @LENGTH@ 46
------INS SimpleType@@ByteStringBuilder @TO@ VariableDeclarationStatement@@ByteStringBuilder b=new ByteStringBuilder(); @AT@ 6898 @LENGTH@ 17
------INS VariableDeclarationFragment@@b=new ByteStringBuilder() @TO@ VariableDeclarationStatement@@ByteStringBuilder b=new ByteStringBuilder(); @AT@ 6916 @LENGTH@ 27
---------INS SimpleName@@b @TO@ VariableDeclarationFragment@@b=new ByteStringBuilder() @AT@ 6916 @LENGTH@ 1
---------INS ClassInstanceCreation@@ByteStringBuilder[] @TO@ VariableDeclarationFragment@@b=new ByteStringBuilder() @AT@ 6920 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@ByteStringBuilder[] @AT@ 6920 @LENGTH@ 3
------------INS SimpleType@@ByteStringBuilder @TO@ ClassInstanceCreation@@ByteStringBuilder[] @AT@ 6924 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:StringPrep.encode("a\u0041\u030Ab",b,StringPrep.NORMALIZE_KC) @TO@ MethodDeclaration@@public, void, MethodName:testNFKC,  @AT@ 6953 @LENGTH@ 64
------INS MethodInvocation@@StringPrep.encode("a\u0041\u030Ab",b,StringPrep.NORMALIZE_KC) @TO@ ExpressionStatement@@MethodInvocation:StringPrep.encode("a\u0041\u030Ab",b,StringPrep.NORMALIZE_KC) @AT@ 6953 @LENGTH@ 63
---------INS SimpleName@@Name:StringPrep @TO@ MethodInvocation@@StringPrep.encode("a\u0041\u030Ab",b,StringPrep.NORMALIZE_KC) @AT@ 6953 @LENGTH@ 10
---------INS SimpleName@@MethodName:encode:["a\u0041\u030Ab", b, StringPrep.NORMALIZE_KC] @TO@ MethodInvocation@@StringPrep.encode("a\u0041\u030Ab",b,StringPrep.NORMALIZE_KC) @AT@ 6964 @LENGTH@ 52
------------INS StringLiteral@@"a\u0041\u030Ab" @TO@ SimpleName@@MethodName:encode:["a\u0041\u030Ab", b, StringPrep.NORMALIZE_KC] @AT@ 6971 @LENGTH@ 16
------------INS SimpleName@@b @TO@ SimpleName@@MethodName:encode:["a\u0041\u030Ab", b, StringPrep.NORMALIZE_KC] @AT@ 6989 @LENGTH@ 1
------------INS QualifiedName@@StringPrep.NORMALIZE_KC @TO@ SimpleName@@MethodName:encode:["a\u0041\u030Ab", b, StringPrep.NORMALIZE_KC] @AT@ 6992 @LENGTH@ 23
---------------INS SimpleName@@StringPrep @TO@ QualifiedName@@StringPrep.NORMALIZE_KC @AT@ 6992 @LENGTH@ 10
---------------INS SimpleName@@NORMALIZE_KC @TO@ QualifiedName@@StringPrep.NORMALIZE_KC @AT@ 7003 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals("a\u00C5b",new String(b.toArray())) @TO@ MethodDeclaration@@public, void, MethodName:testNFKC,  @AT@ 7026 @LENGTH@ 50
------INS MethodInvocation@@assertEquals("a\u00C5b",new String(b.toArray())) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("a\u00C5b",new String(b.toArray())) @AT@ 7026 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertEquals:["a\u00C5b", new String(b.toArray())] @TO@ MethodInvocation@@assertEquals("a\u00C5b",new String(b.toArray())) @AT@ 7026 @LENGTH@ 49
------------INS StringLiteral@@"a\u00C5b" @TO@ SimpleName@@MethodName:assertEquals:["a\u00C5b", new String(b.toArray())] @AT@ 7039 @LENGTH@ 10
------------INS ClassInstanceCreation@@String[b.toArray()] @TO@ SimpleName@@MethodName:assertEquals:["a\u00C5b", new String(b.toArray())] @AT@ 7051 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@String[b.toArray()] @AT@ 7051 @LENGTH@ 3
---------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[b.toArray()] @AT@ 7055 @LENGTH@ 6
---------------INS MethodInvocation@@b.toArray() @TO@ ClassInstanceCreation@@String[b.toArray()] @AT@ 7062 @LENGTH@ 11
------------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.toArray() @AT@ 7062 @LENGTH@ 1
------------------INS SimpleName@@MethodName:toArray:[] @TO@ MethodInvocation@@b.toArray() @AT@ 7064 @LENGTH@ 9


INS MethodDeclaration@@public, Map<String,String>, MethodName:greetAll, Map<String,String> nameMap,  @TO@ TypeDeclaration@@TestProxy,  @AT@ 2261 @LENGTH@ 397
---INS Modifier@@public @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:greetAll, Map<String,String> nameMap,  @AT@ 2261 @LENGTH@ 6
---INS ParameterizedType@@Map<String,String> @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:greetAll, Map<String,String> nameMap,  @AT@ 2268 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2268 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2272 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2280 @LENGTH@ 6
---INS SimpleName@@MethodName:greetAll @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:greetAll, Map<String,String> nameMap,  @AT@ 2288 @LENGTH@ 8
---INS SingleVariableDeclaration@@Map<String,String> nameMap @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:greetAll, Map<String,String> nameMap,  @AT@ 2297 @LENGTH@ 27
------INS ParameterizedType@@Map<String,String> @TO@ SingleVariableDeclaration@@Map<String,String> nameMap @AT@ 2297 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2297 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2301 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2309 @LENGTH@ 6
------INS SimpleName@@nameMap @TO@ SingleVariableDeclaration@@Map<String,String> nameMap @AT@ 2317 @LENGTH@ 7
---INS VariableDeclarationStatement@@Map<String,String> result=new HashMap<String,String>(); @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:greetAll, Map<String,String> nameMap,  @AT@ 2336 @LENGTH@ 59
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> result=new HashMap<String,String>(); @AT@ 2336 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2336 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2340 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2348 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=new HashMap<String,String>() @TO@ VariableDeclarationStatement@@Map<String,String> result=new HashMap<String,String>(); @AT@ 2356 @LENGTH@ 38
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=new HashMap<String,String>() @AT@ 2356 @LENGTH@ 6
---------INS ClassInstanceCreation@@HashMap<String,String>[] @TO@ VariableDeclarationFragment@@result=new HashMap<String,String>() @AT@ 2365 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 2365 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 2369 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2369 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2377 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2385 @LENGTH@ 6
---INS EnhancedForStatement@@for (Map.Entry<String,String> entry : nameMap.entrySet()) {  final String name=entry.getKey();  final String greeting=entry.getValue();  result.put(name,greeting + " " + name);} @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:greetAll, Map<String,String> nameMap,  @AT@ 2404 @LENGTH@ 225
------INS SingleVariableDeclaration@@Map.Entry<String,String> entry @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : nameMap.entrySet()) {  final String name=entry.getKey();  final String greeting=entry.getValue();  result.put(name,greeting + " " + name);} @AT@ 2409 @LENGTH@ 31
---------INS ParameterizedType@@Map.Entry<String,String> @TO@ SingleVariableDeclaration@@Map.Entry<String,String> entry @AT@ 2409 @LENGTH@ 25
------------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,String> @AT@ 2409 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,String> @AT@ 2419 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,String> @AT@ 2427 @LENGTH@ 6
---------INS SimpleName@@entry @TO@ SingleVariableDeclaration@@Map.Entry<String,String> entry @AT@ 2435 @LENGTH@ 5
------INS MethodInvocation@@nameMap.entrySet() @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : nameMap.entrySet()) {  final String name=entry.getKey();  final String greeting=entry.getValue();  result.put(name,greeting + " " + name);} @AT@ 2443 @LENGTH@ 18
---------INS SimpleName@@Name:nameMap @TO@ MethodInvocation@@nameMap.entrySet() @AT@ 2443 @LENGTH@ 7
---------INS SimpleName@@MethodName:entrySet:[] @TO@ MethodInvocation@@nameMap.entrySet() @AT@ 2451 @LENGTH@ 10
------INS VariableDeclarationStatement@@final String name=entry.getKey(); @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : nameMap.entrySet()) {  final String name=entry.getKey();  final String greeting=entry.getValue();  result.put(name,greeting + " " + name);} @AT@ 2477 @LENGTH@ 35
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String name=entry.getKey(); @AT@ 2477 @LENGTH@ 5
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String name=entry.getKey(); @AT@ 2483 @LENGTH@ 6
---------INS VariableDeclarationFragment@@name=entry.getKey() @TO@ VariableDeclarationStatement@@final String name=entry.getKey(); @AT@ 2490 @LENGTH@ 21
------------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=entry.getKey() @AT@ 2490 @LENGTH@ 4
------------INS MethodInvocation@@entry.getKey() @TO@ VariableDeclarationFragment@@name=entry.getKey() @AT@ 2497 @LENGTH@ 14
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 2497 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 2503 @LENGTH@ 8
------INS VariableDeclarationStatement@@final String greeting=entry.getValue(); @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : nameMap.entrySet()) {  final String name=entry.getKey();  final String greeting=entry.getValue();  result.put(name,greeting + " " + name);} @AT@ 2525 @LENGTH@ 41
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String greeting=entry.getValue(); @AT@ 2525 @LENGTH@ 5
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String greeting=entry.getValue(); @AT@ 2531 @LENGTH@ 6
---------INS VariableDeclarationFragment@@greeting=entry.getValue() @TO@ VariableDeclarationStatement@@final String greeting=entry.getValue(); @AT@ 2538 @LENGTH@ 27
------------INS SimpleName@@greeting @TO@ VariableDeclarationFragment@@greeting=entry.getValue() @AT@ 2538 @LENGTH@ 8
------------INS MethodInvocation@@entry.getValue() @TO@ VariableDeclarationFragment@@greeting=entry.getValue() @AT@ 2549 @LENGTH@ 16
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 2549 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 2555 @LENGTH@ 10
------INS ExpressionStatement@@MethodInvocation:result.put(name,greeting + " " + name) @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : nameMap.entrySet()) {  final String name=entry.getKey();  final String greeting=entry.getValue();  result.put(name,greeting + " " + name);} @AT@ 2579 @LENGTH@ 40
---------INS MethodInvocation@@result.put(name,greeting + " " + name) @TO@ ExpressionStatement@@MethodInvocation:result.put(name,greeting + " " + name) @AT@ 2579 @LENGTH@ 39
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.put(name,greeting + " " + name) @AT@ 2579 @LENGTH@ 6
------------INS SimpleName@@MethodName:put:[name, greeting + " " + name] @TO@ MethodInvocation@@result.put(name,greeting + " " + name) @AT@ 2586 @LENGTH@ 32
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:put:[name, greeting + " " + name] @AT@ 2590 @LENGTH@ 4
---------------INS InfixExpression@@greeting + " " + name @TO@ SimpleName@@MethodName:put:[name, greeting + " " + name] @AT@ 2596 @LENGTH@ 21
------------------INS SimpleName@@greeting @TO@ InfixExpression@@greeting + " " + name @AT@ 2596 @LENGTH@ 8
------------------INS Operator@@+ @TO@ InfixExpression@@greeting + " " + name @AT@ 2604 @LENGTH@ 1
------------------INS StringLiteral@@" " @TO@ InfixExpression@@greeting + " " + name @AT@ 2607 @LENGTH@ 3
------------------INS SimpleName@@name @TO@ InfixExpression@@greeting + " " + name @AT@ 2613 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:greetAll, Map<String,String> nameMap,  @AT@ 2638 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 2645 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:formattedPath=(path.endsWith("/") ? formattedPath : formattedPath + "/") @TO@ Assignment:formattedPath=(formattedPath.endsWith("/") ? formattedPath : formattedPath + "/") @AT@ 4789 @LENGTH@ 75
---UPD Assignment@@formattedPath=(path.endsWith("/") ? formattedPath : formattedPath + "/") @TO@ formattedPath=(formattedPath.endsWith("/") ? formattedPath : formattedPath + "/") @AT@ 4789 @LENGTH@ 74
------UPD ParenthesizedExpression@@(path.endsWith("/") ? formattedPath : formattedPath + "/") @TO@ (formattedPath.endsWith("/") ? formattedPath : formattedPath + "/") @AT@ 4805 @LENGTH@ 58
---------UPD ConditionalExpression@@path.endsWith("/") ? formattedPath : formattedPath + "/" @TO@ formattedPath.endsWith("/") ? formattedPath : formattedPath + "/" @AT@ 4806 @LENGTH@ 56
------------UPD MethodInvocation@@path.endsWith("/") @TO@ formattedPath.endsWith("/") @AT@ 4806 @LENGTH@ 18
---------------UPD SimpleName@@Name:path @TO@ Name:formattedPath @AT@ 4806 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:initialize, Exception,  @TO@ public, void, MethodName:initialize,  @AT@ 2793 @LENGTH@ 1038
---DEL SimpleType@@Exception @AT@ 2825 @LENGTH@ 9
---INS TryStatement@@try {  if (dataSource == null) {    logger.warn("No datasource was provided...using a Map based JobRepository");    if (this.transactionManager == null) {      this.transactionManager=new ResourcelessTransactionManager();    }    MapJobRepositoryFactoryBean jobRepositoryFactory=new MapJobRepositoryFactoryBean(this.transactionManager);    jobRepositoryFactory.afterPropertiesSet();    this.jobRepository=jobRepositoryFactory.getObject();    MapJobExplorerFactoryBean jobExplorerFactory=new MapJobExplorerFactoryBean(jobRepositoryFactory);    jobExplorerFactory.afterPropertiesSet();    this.jobExplorer=jobExplorerFactory.getObject();  } else {    this.jobRepository=createJobRepository();    JobExplorerFactoryBean jobExplorerFactoryBean=new JobExplorerFactoryBean();    jobExplorerFactoryBean.setDataSource(this.dataSource);    jobExplorerFactoryBean.afterPropertiesSet();    this.jobExplorer=jobExplorerFactoryBean.getObject();  }  this.jobLauncher=createJobLauncher();} catch (Exception e) {  throw new BatchConfigurationException(e);} @TO@ MethodDeclaration@@public, void, MethodName:initialize, Exception,  @AT@ 2903 @LENGTH@ 1091
------MOV IfStatement@@if (dataSource == null) {  logger.warn("No datasource was provided...using a Map based JobRepository");  if (this.transactionManager == null) {    this.transactionManager=new ResourcelessTransactionManager();  }  MapJobRepositoryFactoryBean jobRepositoryFactory=new MapJobRepositoryFactoryBean(this.transactionManager);  jobRepositoryFactory.afterPropertiesSet();  this.jobRepository=jobRepositoryFactory.getObject();  MapJobExplorerFactoryBean jobExplorerFactory=new MapJobExplorerFactoryBean(jobRepositoryFactory);  jobExplorerFactory.afterPropertiesSet();  this.jobExplorer=jobExplorerFactory.getObject();} else {  this.jobRepository=createJobRepository();  JobExplorerFactoryBean jobExplorerFactoryBean=new JobExplorerFactoryBean();  jobExplorerFactoryBean.setDataSource(this.dataSource);  jobExplorerFactoryBean.afterPropertiesSet();  this.jobExplorer=jobExplorerFactoryBean.getObject();} @TO@ TryStatement@@try {  if (dataSource == null) {    logger.warn("No datasource was provided...using a Map based JobRepository");    if (this.transactionManager == null) {      this.transactionManager=new ResourcelessTransactionManager();    }    MapJobRepositoryFactoryBean jobRepositoryFactory=new MapJobRepositoryFactoryBean(this.transactionManager);    jobRepositoryFactory.afterPropertiesSet();    this.jobRepository=jobRepositoryFactory.getObject();    MapJobExplorerFactoryBean jobExplorerFactory=new MapJobExplorerFactoryBean(jobRepositoryFactory);    jobExplorerFactory.afterPropertiesSet();    this.jobExplorer=jobExplorerFactory.getObject();  } else {    this.jobRepository=createJobRepository();    JobExplorerFactoryBean jobExplorerFactoryBean=new JobExplorerFactoryBean();    jobExplorerFactoryBean.setDataSource(this.dataSource);    jobExplorerFactoryBean.afterPropertiesSet();    this.jobExplorer=jobExplorerFactoryBean.getObject();  }  this.jobLauncher=createJobLauncher();} catch (Exception e) {  throw new BatchConfigurationException(e);} @AT@ 2839 @LENGTH@ 946
------MOV ExpressionStatement@@Assignment:this.jobLauncher=createJobLauncher() @TO@ TryStatement@@try {  if (dataSource == null) {    logger.warn("No datasource was provided...using a Map based JobRepository");    if (this.transactionManager == null) {      this.transactionManager=new ResourcelessTransactionManager();    }    MapJobRepositoryFactoryBean jobRepositoryFactory=new MapJobRepositoryFactoryBean(this.transactionManager);    jobRepositoryFactory.afterPropertiesSet();    this.jobRepository=jobRepositoryFactory.getObject();    MapJobExplorerFactoryBean jobExplorerFactory=new MapJobExplorerFactoryBean(jobRepositoryFactory);    jobExplorerFactory.afterPropertiesSet();    this.jobExplorer=jobExplorerFactory.getObject();  } else {    this.jobRepository=createJobRepository();    JobExplorerFactoryBean jobExplorerFactoryBean=new JobExplorerFactoryBean();    jobExplorerFactoryBean.setDataSource(this.dataSource);    jobExplorerFactoryBean.afterPropertiesSet();    this.jobExplorer=jobExplorerFactoryBean.getObject();  }  this.jobLauncher=createJobLauncher();} catch (Exception e) {  throw new BatchConfigurationException(e);} @AT@ 3789 @LENGTH@ 39
------INS CatchClause@@catch (Exception e) {  throw new BatchConfigurationException(e);} @TO@ TryStatement@@try {  if (dataSource == null) {    logger.warn("No datasource was provided...using a Map based JobRepository");    if (this.transactionManager == null) {      this.transactionManager=new ResourcelessTransactionManager();    }    MapJobRepositoryFactoryBean jobRepositoryFactory=new MapJobRepositoryFactoryBean(this.transactionManager);    jobRepositoryFactory.afterPropertiesSet();    this.jobRepository=jobRepositoryFactory.getObject();    MapJobExplorerFactoryBean jobExplorerFactory=new MapJobExplorerFactoryBean(jobRepositoryFactory);    jobExplorerFactory.afterPropertiesSet();    this.jobExplorer=jobExplorerFactory.getObject();  } else {    this.jobRepository=createJobRepository();    JobExplorerFactoryBean jobExplorerFactoryBean=new JobExplorerFactoryBean();    jobExplorerFactoryBean.setDataSource(this.dataSource);    jobExplorerFactoryBean.afterPropertiesSet();    this.jobExplorer=jobExplorerFactoryBean.getObject();  }  this.jobLauncher=createJobLauncher();} catch (Exception e) {  throw new BatchConfigurationException(e);} @AT@ 3924 @LENGTH@ 70
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new BatchConfigurationException(e);} @AT@ 3931 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3931 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3941 @LENGTH@ 1
---------INS ThrowStatement@@ClassInstanceCreation:new BatchConfigurationException(e) @TO@ CatchClause@@catch (Exception e) {  throw new BatchConfigurationException(e);} @AT@ 3949 @LENGTH@ 41
------------INS ClassInstanceCreation@@BatchConfigurationException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new BatchConfigurationException(e) @AT@ 3955 @LENGTH@ 34
---------------INS New@@new @TO@ ClassInstanceCreation@@BatchConfigurationException[e] @AT@ 3955 @LENGTH@ 3
---------------INS SimpleType@@BatchConfigurationException @TO@ ClassInstanceCreation@@BatchConfigurationException[e] @AT@ 3959 @LENGTH@ 27
---------------INS SimpleName@@e @TO@ ClassInstanceCreation@@BatchConfigurationException[e] @AT@ 3987 @LENGTH@ 1


UPD SuperConstructorInvocation@@super(cluster,TraitsUtil.getLimitTraitSet(cluster,traitSet,child),child);
 @TO@ super(cluster,TraitsUtil.getDefaultTraitSet(cluster),child);
 @AT@ 733 @LENGTH@ 77
---UPD MethodInvocation@@TraitsUtil.getLimitTraitSet(cluster,traitSet,child) @TO@ TraitsUtil.getDefaultTraitSet(cluster) @AT@ 748 @LENGTH@ 53
------UPD SimpleName@@MethodName:getLimitTraitSet:[cluster, traitSet, child] @TO@ MethodName:getDefaultTraitSet:[cluster] @AT@ 759 @LENGTH@ 42
---------DEL SimpleName@@traitSet @AT@ 785 @LENGTH@ 8
---------DEL SimpleName@@child @AT@ 795 @LENGTH@ 5


UPD MethodDeclaration@@public, List<Class[]>, MethodName:listAllTypeConvertersFromTo,  @TO@ public, List<Class<?>[]>, MethodName:listAllTypeConvertersFromTo,  @AT@ 5603 @LENGTH@ 118
---UPD ParameterizedType@@List<Class[]> @TO@ List<Class<?>[]> @AT@ 5610 @LENGTH@ 13
------UPD ArrayType@@Class[] @TO@ Class<?>[] @AT@ 5615 @LENGTH@ 7
---------DEL SimpleType@@Class @AT@ 5615 @LENGTH@ 5
---------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class[] @AT@ 5615 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 5615 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 5621 @LENGTH@ 1


INS TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @TO@ MethodDeclaration@@public, void, MethodName:testStringValueParsing, Exception,  @AT@ 8569 @LENGTH@ 1041
---MOV ExpressionStatement@@MethodInvocation:cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add") @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 8523 @LENGTH@ 67
---MOV VariableDeclarationStatement@@CLIOpResult result=cli.readAllAsOpResult(); @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 8599 @LENGTH@ 45
---MOV ExpressionStatement@@MethodInvocation:assertTrue(result.isIsOutcomeSuccess()) @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 8653 @LENGTH@ 40
---MOV ExpressionStatement@@MethodInvocation:cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")") @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 8702 @LENGTH@ 150
---MOV ExpressionStatement@@Assignment:result=cli.readAllAsOpResult() @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 8861 @LENGTH@ 33
---MOV ExpressionStatement@@MethodInvocation:assertTrue(result.isIsOutcomeSuccess()) @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 8903 @LENGTH@ 40
---MOV ExpressionStatement@@MethodInvocation:cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)") @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 8952 @LENGTH@ 93
---MOV ExpressionStatement@@Assignment:result=cli.readAllAsOpResult() @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 9054 @LENGTH@ 33
---MOV ExpressionStatement@@MethodInvocation:assertTrue(result.isIsOutcomeSuccess()) @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 9096 @LENGTH@ 40
---MOV VariableDeclarationStatement@@Map<String,Object> resource=result.getResultAsMap(); @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 9145 @LENGTH@ 55
---MOV ExpressionStatement@@MethodInvocation:assertTrue(resource.containsKey("filter-spec")) @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 9209 @LENGTH@ 48
---MOV ExpressionStatement@@MethodInvocation:Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")")) @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 9266 @LENGTH@ 123
---INS Block@@FinallyBody:{  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @TO@ TryStatement@@try {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:add");  CLIOpResult result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:write-attribute(name=filter-spec, value=\"substituteAll(\\\"JBAS\\\",\\\"DUMMY\\\")\")");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:read-resource(recursive=true)");  result=cli.readAllAsOpResult();  assertTrue(result.isIsOutcomeSuccess());  Map<String,Object> resource=result.getResultAsMap();  assertTrue(resource.containsKey("filter-spec"));  Assert.assertThat((String)resource.get("filter-spec"),org.hamcrest.CoreMatchers.is("substituteAll(\"JBAS\",\"DUMMY\")"));}  finally {  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 9516 @LENGTH@ 94
------INS ExpressionStatement@@MethodInvocation:cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove") @TO@ Block@@FinallyBody:{  cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove");} @AT@ 9530 @LENGTH@ 70
---------INS MethodInvocation@@cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove") @TO@ ExpressionStatement@@MethodInvocation:cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove") @AT@ 9530 @LENGTH@ 69
------------INS SimpleName@@Name:cli @TO@ MethodInvocation@@cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove") @AT@ 9530 @LENGTH@ 3
------------INS SimpleName@@MethodName:sendLine:["/subsystem=logging/console-handler=TEST-FILTER:remove"] @TO@ MethodInvocation@@cli.sendLine("/subsystem=logging/console-handler=TEST-FILTER:remove") @AT@ 9534 @LENGTH@ 65
---------------INS StringLiteral@@"/subsystem=logging/console-handler=TEST-FILTER:remove" @TO@ SimpleName@@MethodName:sendLine:["/subsystem=logging/console-handler=TEST-FILTER:remove"] @AT@ 9543 @LENGTH@ 55


INS ExpressionStatement@@MethodInvocation:registerFunction("<>",SqlStdOperatorTable.NOT_EQUALS,hToken(HiveParser.NOTEQUAL,"<>")) @TO@ MethodDeclaration@@voidMethodName:StaticBlockBuilder,  @AT@ 12645 @LENGTH@ 90
---INS MethodInvocation@@registerFunction("<>",SqlStdOperatorTable.NOT_EQUALS,hToken(HiveParser.NOTEQUAL,"<>")) @TO@ ExpressionStatement@@MethodInvocation:registerFunction("<>",SqlStdOperatorTable.NOT_EQUALS,hToken(HiveParser.NOTEQUAL,"<>")) @AT@ 12645 @LENGTH@ 89
------INS SimpleName@@MethodName:registerFunction:["<>", SqlStdOperatorTable.NOT_EQUALS, hToken(HiveParser.NOTEQUAL,"<>")] @TO@ MethodInvocation@@registerFunction("<>",SqlStdOperatorTable.NOT_EQUALS,hToken(HiveParser.NOTEQUAL,"<>")) @AT@ 12645 @LENGTH@ 89
---------INS StringLiteral@@"<>" @TO@ SimpleName@@MethodName:registerFunction:["<>", SqlStdOperatorTable.NOT_EQUALS, hToken(HiveParser.NOTEQUAL,"<>")] @AT@ 12662 @LENGTH@ 4
---------INS QualifiedName@@SqlStdOperatorTable.NOT_EQUALS @TO@ SimpleName@@MethodName:registerFunction:["<>", SqlStdOperatorTable.NOT_EQUALS, hToken(HiveParser.NOTEQUAL,"<>")] @AT@ 12668 @LENGTH@ 30
------------INS SimpleName@@SqlStdOperatorTable @TO@ QualifiedName@@SqlStdOperatorTable.NOT_EQUALS @AT@ 12668 @LENGTH@ 19
------------INS SimpleName@@NOT_EQUALS @TO@ QualifiedName@@SqlStdOperatorTable.NOT_EQUALS @AT@ 12688 @LENGTH@ 10
---------INS MethodInvocation@@hToken(HiveParser.NOTEQUAL,"<>") @TO@ SimpleName@@MethodName:registerFunction:["<>", SqlStdOperatorTable.NOT_EQUALS, hToken(HiveParser.NOTEQUAL,"<>")] @AT@ 12700 @LENGTH@ 33
------------INS SimpleName@@MethodName:hToken:[HiveParser.NOTEQUAL, "<>"] @TO@ MethodInvocation@@hToken(HiveParser.NOTEQUAL,"<>") @AT@ 12700 @LENGTH@ 33
---------------INS QualifiedName@@HiveParser.NOTEQUAL @TO@ SimpleName@@MethodName:hToken:[HiveParser.NOTEQUAL, "<>"] @AT@ 12707 @LENGTH@ 19
------------------INS SimpleName@@HiveParser @TO@ QualifiedName@@HiveParser.NOTEQUAL @AT@ 12707 @LENGTH@ 10
------------------INS SimpleName@@NOTEQUAL @TO@ QualifiedName@@HiveParser.NOTEQUAL @AT@ 12718 @LENGTH@ 8
---------------INS StringLiteral@@"<>" @TO@ SimpleName@@MethodName:hToken:[HiveParser.NOTEQUAL, "<>"] @AT@ 12728 @LENGTH@ 4
------------INS SimpleName@@MethodName:hToken:[HiveParser.NOTEQUAL, "<>"] @TO@ MethodInvocation@@hToken(HiveParser.NOTEQUAL,"<>") @AT@ 12700 @LENGTH@ 33
---------------INS QualifiedName@@HiveParser.NOTEQUAL @TO@ SimpleName@@MethodName:hToken:[HiveParser.NOTEQUAL, "<>"] @AT@ 12707 @LENGTH@ 19
------------------INS SimpleName@@HiveParser @TO@ QualifiedName@@HiveParser.NOTEQUAL @AT@ 12707 @LENGTH@ 10
------------------INS SimpleName@@NOTEQUAL @TO@ QualifiedName@@HiveParser.NOTEQUAL @AT@ 12718 @LENGTH@ 8
---------------INS StringLiteral@@"<>" @TO@ SimpleName@@MethodName:hToken:[HiveParser.NOTEQUAL, "<>"] @AT@ 12728 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:apiProxy.getOlingo2App().setHttpHeaders(configuration.getHttpHeaders()) @TO@ MethodDeclaration@@private, Olingo2AppWrapper, MethodName:createOlingo2App, Olingo2Configuration configuration,  @AT@ 5648 @LENGTH@ 72
---INS MethodInvocation@@apiProxy.getOlingo2App().setHttpHeaders(configuration.getHttpHeaders()) @TO@ ExpressionStatement@@MethodInvocation:apiProxy.getOlingo2App().setHttpHeaders(configuration.getHttpHeaders()) @AT@ 5648 @LENGTH@ 71
------INS MethodInvocation@@MethodName:getOlingo2App:[] @TO@ MethodInvocation@@apiProxy.getOlingo2App().setHttpHeaders(configuration.getHttpHeaders()) @AT@ 5648 @LENGTH@ 24
------INS SimpleName@@Name:apiProxy @TO@ MethodInvocation@@apiProxy.getOlingo2App().setHttpHeaders(configuration.getHttpHeaders()) @AT@ 5648 @LENGTH@ 8
------INS SimpleName@@MethodName:setHttpHeaders:[configuration.getHttpHeaders()] @TO@ MethodInvocation@@apiProxy.getOlingo2App().setHttpHeaders(configuration.getHttpHeaders()) @AT@ 5673 @LENGTH@ 46
---------INS MethodInvocation@@configuration.getHttpHeaders() @TO@ SimpleName@@MethodName:setHttpHeaders:[configuration.getHttpHeaders()] @AT@ 5688 @LENGTH@ 30
------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getHttpHeaders() @AT@ 5688 @LENGTH@ 13
------------INS SimpleName@@MethodName:getHttpHeaders:[] @TO@ MethodInvocation@@configuration.getHttpHeaders() @AT@ 5702 @LENGTH@ 16


MOV FieldDeclaration@@private, Map<DockerClientProfile,DockerClient>, [clients=new HashMap<DockerClientProfile,DockerClient>()] @TO@ TypeDeclaration@@[public]DockerConfiguration,  @AT@ 1131 @LENGTH@ 106


UPD VariableDeclarationStatement@@Map<String,String> row=new LinkedHashMap<>(); @TO@ Map<String,String> row=new LinkedHashMap<String,String>(); @AT@ 4720 @LENGTH@ 48
---UPD VariableDeclarationFragment@@row=new LinkedHashMap<>() @TO@ row=new LinkedHashMap<String,String>() @AT@ 4740 @LENGTH@ 27
------UPD ClassInstanceCreation@@LinkedHashMap<>[] @TO@ LinkedHashMap<String,String>[] @AT@ 4746 @LENGTH@ 21
---------UPD ParameterizedType@@LinkedHashMap<> @TO@ LinkedHashMap<String,String> @AT@ 4750 @LENGTH@ 15
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 4764 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 4772 @LENGTH@ 6


INS MethodDeclaration@@private, static, void, MethodName:performVersionChecks,  @TO@ TypeDeclaration@@[public]SpringSecurityCoreVersion,  @AT@ 1202 @LENGTH@ 100
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, void, MethodName:performVersionChecks,  @AT@ 1202 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, void, MethodName:performVersionChecks,  @AT@ 1210 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, static, void, MethodName:performVersionChecks,  @AT@ 1217 @LENGTH@ 4
---INS SimpleName@@MethodName:performVersionChecks @TO@ MethodDeclaration@@private, static, void, MethodName:performVersionChecks,  @AT@ 1222 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:performVersionChecks(MIN_SPRING_VERSION) @TO@ MethodDeclaration@@private, static, void, MethodName:performVersionChecks,  @AT@ 1255 @LENGTH@ 41
------INS MethodInvocation@@performVersionChecks(MIN_SPRING_VERSION) @TO@ ExpressionStatement@@MethodInvocation:performVersionChecks(MIN_SPRING_VERSION) @AT@ 1255 @LENGTH@ 40
---------INS SimpleName@@MethodName:performVersionChecks:[MIN_SPRING_VERSION] @TO@ MethodInvocation@@performVersionChecks(MIN_SPRING_VERSION) @AT@ 1255 @LENGTH@ 40
------------INS SimpleName@@MIN_SPRING_VERSION @TO@ SimpleName@@MethodName:performVersionChecks:[MIN_SPRING_VERSION] @AT@ 1276 @LENGTH@ 18


UPD MethodDeclaration@@public, voidMethodName:CommitConsumer, String branchName, GitHubEndpoint endpoint, Processor processor, Exception,  @TO@ public, voidMethodName:CommitConsumer, GitHubEndpoint endpoint, Processor processor, String branchName, Exception,  @AT@ 1549 @LENGTH@ 880
---DEL SingleVariableDeclaration@@String branchName @AT@ 1571 @LENGTH@ 17
------DEL SimpleType@@String @AT@ 1571 @LENGTH@ 6
------DEL SimpleName@@branchName @AT@ 1578 @LENGTH@ 10
---INS SingleVariableDeclaration@@String branchName @TO@ MethodDeclaration@@public, voidMethodName:CommitConsumer, String branchName, GitHubEndpoint endpoint, Processor processor, Exception,  @AT@ 1617 @LENGTH@ 17
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String branchName @AT@ 1617 @LENGTH@ 6
------INS SimpleName@@branchName @TO@ SingleVariableDeclaration@@String branchName @AT@ 1624 @LENGTH@ 10


UPD Block@@ThenBody:{  assertTrue("Authentication cannot be null",auth != null);  Collection<? extends GrantedAuthority> authorities=auth.getAuthorities();  assertEquals(this.expectedGrantedAuthorities + " does not equal " + authorities,this.expectedGrantedAuthorities,authorities);} @TO@ ThenBody:{  assertTrue("Authentication cannot be null",auth != null);  Collection<? extends GrantedAuthority> authorities=auth.getAuthorities();  assertTrue(authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities,authorities.containsAll(this.expectedGrantedAuthorities));  assertTrue(this.expectedGrantedAuthorities + " does not contain the same authorities as " + authorities,this.expectedGrantedAuthorities.containsAll(authorities));} @AT@ 4728 @LENGTH@ 326
---INS ExpressionStatement@@MethodInvocation:assertTrue(authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities,authorities.containsAll(this.expectedGrantedAuthorities)) @TO@ Block@@ThenBody:{  assertTrue("Authentication cannot be null",auth != null);  Collection<? extends GrantedAuthority> authorities=auth.getAuthorities();  assertEquals(this.expectedGrantedAuthorities + " does not equal " + authorities,this.expectedGrantedAuthorities,authorities);} @AT@ 4913 @LENGTH@ 163
------INS MethodInvocation@@assertTrue(authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities,authorities.containsAll(this.expectedGrantedAuthorities)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities,authorities.containsAll(this.expectedGrantedAuthorities)) @AT@ 4913 @LENGTH@ 162
---------INS SimpleName@@MethodName:assertTrue:[authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities, authorities.containsAll(this.expectedGrantedAuthorities)] @TO@ MethodInvocation@@assertTrue(authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities,authorities.containsAll(this.expectedGrantedAuthorities)) @AT@ 4913 @LENGTH@ 162
------------INS InfixExpression@@authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities @TO@ SimpleName@@MethodName:assertTrue:[authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities, authorities.containsAll(this.expectedGrantedAuthorities)] @AT@ 4924 @LENGTH@ 92
---------------INS SimpleName@@authorities @TO@ InfixExpression@@authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities @AT@ 4924 @LENGTH@ 11
---------------INS Operator@@+ @TO@ InfixExpression@@authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities @AT@ 4935 @LENGTH@ 1
---------------INS StringLiteral@@" does not contain the same authorities as " @TO@ InfixExpression@@authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities @AT@ 4938 @LENGTH@ 44
---------------INS FieldAccess@@this.expectedGrantedAuthorities @TO@ InfixExpression@@authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities @AT@ 4985 @LENGTH@ 31
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.expectedGrantedAuthorities @AT@ 4985 @LENGTH@ 4
------------------INS SimpleName@@expectedGrantedAuthorities @TO@ FieldAccess@@this.expectedGrantedAuthorities @AT@ 4990 @LENGTH@ 26
------------INS MethodInvocation@@authorities.containsAll(this.expectedGrantedAuthorities) @TO@ SimpleName@@MethodName:assertTrue:[authorities + " does not contain the same authorities as " + this.expectedGrantedAuthorities, authorities.containsAll(this.expectedGrantedAuthorities)] @AT@ 5018 @LENGTH@ 56
---------------INS SimpleName@@Name:authorities @TO@ MethodInvocation@@authorities.containsAll(this.expectedGrantedAuthorities) @AT@ 5018 @LENGTH@ 11
---------------INS SimpleName@@MethodName:containsAll:[this.expectedGrantedAuthorities] @TO@ MethodInvocation@@authorities.containsAll(this.expectedGrantedAuthorities) @AT@ 5030 @LENGTH@ 44
------------------INS FieldAccess@@this.expectedGrantedAuthorities @TO@ SimpleName@@MethodName:containsAll:[this.expectedGrantedAuthorities] @AT@ 5042 @LENGTH@ 31
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.expectedGrantedAuthorities @AT@ 5042 @LENGTH@ 4
---------------------INS SimpleName@@expectedGrantedAuthorities @TO@ FieldAccess@@this.expectedGrantedAuthorities @AT@ 5047 @LENGTH@ 26
---UPD ExpressionStatement@@MethodInvocation:assertEquals(this.expectedGrantedAuthorities + " does not equal " + authorities,this.expectedGrantedAuthorities,authorities) @TO@ MethodInvocation:assertTrue(this.expectedGrantedAuthorities + " does not contain the same authorities as " + authorities,this.expectedGrantedAuthorities.containsAll(authorities)) @AT@ 4913 @LENGTH@ 127
------UPD MethodInvocation@@assertEquals(this.expectedGrantedAuthorities + " does not equal " + authorities,this.expectedGrantedAuthorities,authorities) @TO@ assertTrue(this.expectedGrantedAuthorities + " does not contain the same authorities as " + authorities,this.expectedGrantedAuthorities.containsAll(authorities)) @AT@ 4913 @LENGTH@ 126
---------UPD SimpleName@@MethodName:assertEquals:[this.expectedGrantedAuthorities + " does not equal " + authorities, this.expectedGrantedAuthorities, authorities] @TO@ MethodName:assertTrue:[this.expectedGrantedAuthorities + " does not contain the same authorities as " + authorities, this.expectedGrantedAuthorities.containsAll(authorities)] @AT@ 4913 @LENGTH@ 126
------------UPD InfixExpression@@this.expectedGrantedAuthorities + " does not equal " + authorities @TO@ this.expectedGrantedAuthorities + " does not contain the same authorities as " + authorities @AT@ 4926 @LENGTH@ 66
---------------UPD StringLiteral@@" does not equal " @TO@ " does not contain the same authorities as " @AT@ 4960 @LENGTH@ 18
------------DEL FieldAccess@@this.expectedGrantedAuthorities @AT@ 4994 @LENGTH@ 31
------------INS MethodInvocation@@this.expectedGrantedAuthorities.containsAll(authorities) @TO@ SimpleName@@MethodName:assertEquals:[this.expectedGrantedAuthorities + " does not equal " + authorities, this.expectedGrantedAuthorities, authorities] @AT@ 5199 @LENGTH@ 56
---------------INS FieldAccess@@this.expectedGrantedAuthorities @TO@ MethodInvocation@@this.expectedGrantedAuthorities.containsAll(authorities) @AT@ 5199 @LENGTH@ 31
------------------MOV ThisExpression@@this @TO@ FieldAccess@@this.expectedGrantedAuthorities @AT@ 4994 @LENGTH@ 4
------------------MOV ThisExpression@@this @TO@ FieldAccess@@this.expectedGrantedAuthorities @AT@ 4994 @LENGTH@ 4
------------------MOV SimpleName@@expectedGrantedAuthorities @TO@ FieldAccess@@this.expectedGrantedAuthorities @AT@ 4999 @LENGTH@ 26
------------------MOV SimpleName@@expectedGrantedAuthorities @TO@ FieldAccess@@this.expectedGrantedAuthorities @AT@ 4999 @LENGTH@ 26
---------------INS SimpleName@@MethodName:containsAll:[authorities] @TO@ MethodInvocation@@this.expectedGrantedAuthorities.containsAll(authorities) @AT@ 5231 @LENGTH@ 24
------------------MOV SimpleName@@authorities @TO@ SimpleName@@MethodName:containsAll:[authorities] @AT@ 5027 @LENGTH@ 11
------------------MOV SimpleName@@authorities @TO@ SimpleName@@MethodName:containsAll:[authorities] @AT@ 5027 @LENGTH@ 11


UPD TypeDeclaration@@[@ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]OptimisticLockingFailureTests,  @TO@ [@Ignore, @ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]OptimisticLockingFailureTests,  @AT@ 1656 @LENGTH@ 2869
---INS MarkerAnnotation@@@Ignore @TO@ TypeDeclaration@@[@ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]OptimisticLockingFailureTests,  @AT@ 1681 @LENGTH@ 7


MOV FieldDeclaration@@Logger, [log=LoggerFactory.getLogger(getClass())] @TO@ TypeDeclaration@@[@RunWith(JUnit4.class), public]AbstractCamelRunnerTest,  @AT@ 1234 @LENGTH@ 49


UPD VariableDeclarationStatement@@ApiMethodHelper methodHelper=endpoint.getMethodHelper(); @TO@ ApiMethodHelper<? extends ApiMethod> methodHelper=endpoint.getMethodHelper(); @AT@ 2499 @LENGTH@ 58
---INS ParameterizedType@@ApiMethodHelper<? extends ApiMethod> @TO@ VariableDeclarationStatement@@ApiMethodHelper methodHelper=endpoint.getMethodHelper(); @AT@ 2499 @LENGTH@ 36
------INS SimpleType@@ApiMethodHelper @TO@ ParameterizedType@@ApiMethodHelper<? extends ApiMethod> @AT@ 2499 @LENGTH@ 15
------INS WildcardType@@? @TO@ ParameterizedType@@ApiMethodHelper<? extends ApiMethod> @AT@ 2515 @LENGTH@ 19
---DEL SimpleType@@ApiMethodHelper @AT@ 2499 @LENGTH@ 15


INS MethodDeclaration@@public, voidMethodName:JpaComponent,  @TO@ TypeDeclaration@@[public]JpaComponent, DefaultComponent @AT@ 1582 @LENGTH@ 63
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:JpaComponent,  @AT@ 1582 @LENGTH@ 6
---INS SimpleName@@MethodName:JpaComponent @TO@ MethodDeclaration@@public, voidMethodName:JpaComponent,  @AT@ 1589 @LENGTH@ 12
---INS SuperConstructorInvocation@@super(JpaEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:JpaComponent,  @AT@ 1614 @LENGTH@ 25
------INS TypeLiteral@@JpaEndpoint.class @TO@ SuperConstructorInvocation@@super(JpaEndpoint.class);
 @AT@ 1620 @LENGTH@ 17


UPD TryStatement@@try {  return this.handlerMethod.invoke(message,amqpMessage,channel);} catch (MessagingException ex) {  throw new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"),ex);}catch (Exception ex) {  throw new ListenerExecutionFailedException("Listener method '" + this.handlerMethod.getMethod().toGenericString() + "' threw exception",ex);} @TO@ try {  return this.handlerMethod.invoke(message,amqpMessage,channel);} catch (org.springframework.messaging.converter.MessageConversionException ex) {  throw new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"),new MessageConversionException("Cannot handle message",ex));}catch (MessagingException ex) {  throw new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"),ex);}catch (Exception ex) {  throw new ListenerExecutionFailedException("Listener method '" + this.handlerMethod.getMethod().toGenericString() + "' threw exception",ex);} @AT@ 4394 @LENGTH@ 450
---INS CatchClause@@catch (org.springframework.messaging.converter.MessageConversionException ex) {  throw new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"),new MessageConversionException("Cannot handle message",ex));} @TO@ TryStatement@@try {  return this.handlerMethod.invoke(message,amqpMessage,channel);} catch (MessagingException ex) {  throw new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"),ex);}catch (Exception ex) {  throw new ListenerExecutionFailedException("Listener method '" + this.handlerMethod.getMethod().toGenericString() + "' threw exception",ex);} @AT@ 4497 @LENGTH@ 301
------INS SingleVariableDeclaration@@org.springframework.messaging.converter.MessageConversionException ex @TO@ CatchClause@@catch (org.springframework.messaging.converter.MessageConversionException ex) {  throw new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"),new MessageConversionException("Cannot handle message",ex));} @AT@ 4504 @LENGTH@ 69
---------INS SimpleType@@org.springframework.messaging.converter.MessageConversionException @TO@ SingleVariableDeclaration@@org.springframework.messaging.converter.MessageConversionException ex @AT@ 4504 @LENGTH@ 66
---------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@org.springframework.messaging.converter.MessageConversionException ex @AT@ 4571 @LENGTH@ 2
------INS ThrowStatement@@ClassInstanceCreation:new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"),new MessageConversionException("Cannot handle message",ex)) @TO@ CatchClause@@catch (org.springframework.messaging.converter.MessageConversionException ex) {  throw new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"),new MessageConversionException("Cannot handle message",ex));} @AT@ 4580 @LENGTH@ 214
---------INS ClassInstanceCreation@@ListenerExecutionFailedException[createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"), new MessageConversionException("Cannot handle message",ex)] @TO@ ThrowStatement@@ClassInstanceCreation:new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"),new MessageConversionException("Cannot handle message",ex)) @AT@ 4586 @LENGTH@ 207
------------INS New@@new @TO@ ClassInstanceCreation@@ListenerExecutionFailedException[createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"), new MessageConversionException("Cannot handle message",ex)] @AT@ 4586 @LENGTH@ 3
------------INS SimpleType@@ListenerExecutionFailedException @TO@ ClassInstanceCreation@@ListenerExecutionFailedException[createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"), new MessageConversionException("Cannot handle message",ex)] @AT@ 4590 @LENGTH@ 32
------------INS MethodInvocation@@createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message") @TO@ ClassInstanceCreation@@ListenerExecutionFailedException[createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"), new MessageConversionException("Cannot handle message",ex)] @AT@ 4623 @LENGTH@ 103
---------------INS SimpleName@@MethodName:createMessagingErrorMessage:["Listener method could not " + "be invoked with the incoming message"] @TO@ MethodInvocation@@createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message") @AT@ 4623 @LENGTH@ 103
------------------INS InfixExpression@@"Listener method could not " + "be invoked with the incoming message" @TO@ SimpleName@@MethodName:createMessagingErrorMessage:["Listener method could not " + "be invoked with the incoming message"] @AT@ 4651 @LENGTH@ 74
---------------------INS StringLiteral@@"Listener method could not " @TO@ InfixExpression@@"Listener method could not " + "be invoked with the incoming message" @AT@ 4651 @LENGTH@ 28
---------------------INS Operator@@+ @TO@ InfixExpression@@"Listener method could not " + "be invoked with the incoming message" @AT@ 4679 @LENGTH@ 1
---------------------INS StringLiteral@@"be invoked with the incoming message" @TO@ InfixExpression@@"Listener method could not " + "be invoked with the incoming message" @AT@ 4687 @LENGTH@ 38
------------INS ClassInstanceCreation@@MessageConversionException["Cannot handle message", ex] @TO@ ClassInstanceCreation@@ListenerExecutionFailedException[createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message"), new MessageConversionException("Cannot handle message",ex)] @AT@ 4733 @LENGTH@ 59
---------------INS New@@new @TO@ ClassInstanceCreation@@MessageConversionException["Cannot handle message", ex] @AT@ 4733 @LENGTH@ 3
---------------INS SimpleType@@MessageConversionException @TO@ ClassInstanceCreation@@MessageConversionException["Cannot handle message", ex] @AT@ 4737 @LENGTH@ 26
---------------INS StringLiteral@@"Cannot handle message" @TO@ ClassInstanceCreation@@MessageConversionException["Cannot handle message", ex] @AT@ 4764 @LENGTH@ 23
---------------INS SimpleName@@ex @TO@ ClassInstanceCreation@@MessageConversionException["Cannot handle message", ex] @AT@ 4789 @LENGTH@ 2


INS FieldDeclaration@@private, static, String, [defaultEnabledProtocols] @TO@ TypeDeclaration@@[public]NettyServerBootstrapConfiguration, [Cloneable] @AT@ 1200 @LENGTH@ 46
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, String, [defaultEnabledProtocols] @AT@ 1200 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, String, [defaultEnabledProtocols] @AT@ 1208 @LENGTH@ 6
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, String, [defaultEnabledProtocols] @AT@ 1215 @LENGTH@ 6
---INS VariableDeclarationFragment@@defaultEnabledProtocols @TO@ FieldDeclaration@@private, static, String, [defaultEnabledProtocols] @AT@ 1222 @LENGTH@ 23
------INS SimpleName@@defaultEnabledProtocols @TO@ VariableDeclarationFragment@@defaultEnabledProtocols @AT@ 1222 @LENGTH@ 23


UPD TypeDeclaration@@[@UriEndpoint(scheme="msv"), public]MsvEndpoint, ValidatorEndpoint @TO@ [@UriEndpoint(scheme="msv",label="validation"), public]MsvEndpoint, ValidatorEndpoint @AT@ 1165 @LENGTH@ 780
---UPD NormalAnnotation@@@UriEndpoint(scheme="msv") @TO@ @UriEndpoint(scheme="msv",label="validation") @AT@ 1165 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:assertEquals(3,set.size()) @TO@ MethodInvocation:assertEquals(4,set.size()) @AT@ 3038 @LENGTH@ 28
---UPD MethodInvocation@@assertEquals(3,set.size()) @TO@ assertEquals(4,set.size()) @AT@ 3038 @LENGTH@ 27
------UPD SimpleName@@MethodName:assertEquals:[3, set.size()] @TO@ MethodName:assertEquals:[4, set.size()] @AT@ 3038 @LENGTH@ 27
---------UPD NumberLiteral@@3 @TO@ 4 @AT@ 3051 @LENGTH@ 1


DEL IfStatement@@if (answer == null) {  throw new InvalidPayloadRuntimeException(exchange,getEntityType());} else {  return answer;} @AT@ 10510 @LENGTH@ 188
---DEL InfixExpression@@answer == null @AT@ 10514 @LENGTH@ 14
------DEL SimpleName@@answer @AT@ 10514 @LENGTH@ 6
------DEL Operator@@== @AT@ 10520 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 10524 @LENGTH@ 4
---DEL Block@@ThenBody:{  throw new InvalidPayloadRuntimeException(exchange,getEntityType());} @AT@ 10530 @LENGTH@ 108
------DEL ThrowStatement@@ClassInstanceCreation:new InvalidPayloadRuntimeException(exchange,getEntityType()) @AT@ 10552 @LENGTH@ 68
---------DEL ClassInstanceCreation@@InvalidPayloadRuntimeException[exchange, getEntityType()] @AT@ 10558 @LENGTH@ 61
------------DEL New@@new @AT@ 10558 @LENGTH@ 3
------------DEL SimpleType@@InvalidPayloadRuntimeException @AT@ 10562 @LENGTH@ 30
------------DEL SimpleName@@exchange @AT@ 10593 @LENGTH@ 8
------------DEL MethodInvocation@@MethodName:getEntityType:[] @AT@ 10603 @LENGTH@ 15
---DEL Block@@ElseBody:{  return answer;} @AT@ 10644 @LENGTH@ 54
------DEL ReturnStatement@@SimpleName:answer @AT@ 10666 @LENGTH@ 14


UPD ReturnStatement@@ArrayCreation:new ModelValidationStepHandler[]{new NotEmptyResourceValidationStepHandler()} @TO@ ArrayCreation:new ModelValidationStepHandler[]{NotEmptyResourceValidationStepHandler.INSTANCE} @AT@ 2361 @LENGTH@ 108
---UPD ArrayCreation@@new ModelValidationStepHandler[]{new NotEmptyResourceValidationStepHandler()} @TO@ new ModelValidationStepHandler[]{NotEmptyResourceValidationStepHandler.INSTANCE} @AT@ 2368 @LENGTH@ 100
------UPD ArrayInitializer@@{new NotEmptyResourceValidationStepHandler()} @TO@ {NotEmptyResourceValidationStepHandler.INSTANCE} @AT@ 2401 @LENGTH@ 67
---------DEL ClassInstanceCreation@@NotEmptyResourceValidationStepHandler[] @AT@ 2415 @LENGTH@ 43
------------DEL New@@new @AT@ 2415 @LENGTH@ 3
------------DEL SimpleType@@NotEmptyResourceValidationStepHandler @AT@ 2419 @LENGTH@ 37
---------INS QualifiedName@@NotEmptyResourceValidationStepHandler.INSTANCE @TO@ ArrayInitializer@@{new NotEmptyResourceValidationStepHandler()} @AT@ 2419 @LENGTH@ 46
------------INS SimpleName@@NotEmptyResourceValidationStepHandler @TO@ QualifiedName@@NotEmptyResourceValidationStepHandler.INSTANCE @AT@ 2419 @LENGTH@ 37
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@NotEmptyResourceValidationStepHandler.INSTANCE @AT@ 2457 @LENGTH@ 8


INS MethodDeclaration@@public, boolean, MethodName:isOverwrite,  @TO@ TypeDeclaration@@[public, abstract]OutputStoreObjectSupport, StoreObjectSupport @AT@ 5690 @LENGTH@ 53
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isOverwrite,  @AT@ 5690 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isOverwrite,  @AT@ 5697 @LENGTH@ 7
---INS SimpleName@@MethodName:isOverwrite @TO@ MethodDeclaration@@public, boolean, MethodName:isOverwrite,  @AT@ 5705 @LENGTH@ 11
---INS ReturnStatement@@SimpleName:overwrite @TO@ MethodDeclaration@@public, boolean, MethodName:isOverwrite,  @AT@ 5723 @LENGTH@ 17
------INS SimpleName@@overwrite @TO@ ReturnStatement@@SimpleName:overwrite @AT@ 5730 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:exception.expectMessage("@Field") @TO@ MethodDeclaration@@public, void, MethodName:rejectsClassWithAmbiguousFieldMappings,  @AT@ 3256 @LENGTH@ 34
---INS MethodInvocation@@exception.expectMessage("@Field") @TO@ ExpressionStatement@@MethodInvocation:exception.expectMessage("@Field") @AT@ 3256 @LENGTH@ 33
------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.expectMessage("@Field") @AT@ 3256 @LENGTH@ 9
------INS SimpleName@@MethodName:expectMessage:["@Field"] @TO@ MethodInvocation@@exception.expectMessage("@Field") @AT@ 3266 @LENGTH@ 23
---------INS StringLiteral@@"@Field" @TO@ SimpleName@@MethodName:expectMessage:["@Field"] @AT@ 3280 @LENGTH@ 8


UPD FieldDeclaration@@private, List<RepositoryCommit>, [commitsList=new ArrayList<>()] @TO@ private, List<RepositoryCommit>, [commitsList=new ArrayList<RepositoryCommit>()] @AT@ 1406 @LENGTH@ 63
---UPD VariableDeclarationFragment@@commitsList=new ArrayList<>() @TO@ commitsList=new ArrayList<RepositoryCommit>() @AT@ 1437 @LENGTH@ 31
------UPD ClassInstanceCreation@@ArrayList<>[] @TO@ ArrayList<RepositoryCommit>[] @AT@ 1451 @LENGTH@ 17
---------UPD ParameterizedType@@ArrayList<> @TO@ ArrayList<RepositoryCommit> @AT@ 1455 @LENGTH@ 11
------------INS SimpleType@@RepositoryCommit @TO@ ParameterizedType@@ArrayList<> @AT@ 1465 @LENGTH@ 16


UPD VariableDeclarationStatement@@Option[] options=new Option[]{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),vmOption("-Dfile.encoding=UTF-8"),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),KarafDistributionOption.features(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)}; @TO@ Option[] options=new Option[]{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),vmOption("-Dfile.encoding=UTF-8"),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),KarafDistributionOption.features(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)}; @AT@ 6818 @LENGTH@ 1665
---UPD VariableDeclarationFragment@@options=new Option[]{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),vmOption("-Dfile.encoding=UTF-8"),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),KarafDistributionOption.features(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)} @TO@ options=new Option[]{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),vmOption("-Dfile.encoding=UTF-8"),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),KarafDistributionOption.features(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)} @AT@ 6827 @LENGTH@ 1655
------UPD ArrayCreation@@new Option[]{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),vmOption("-Dfile.encoding=UTF-8"),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),KarafDistributionOption.features(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)} @TO@ new Option[]{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),vmOption("-Dfile.encoding=UTF-8"),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),KarafDistributionOption.features(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)} @AT@ 6853 @LENGTH@ 1629
---------UPD ArrayInitializer@@{KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),vmOption("-Dfile.encoding=UTF-8"),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),KarafDistributionOption.features(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)} @TO@ {KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion(karafVersion).name("Apache Karaf").useDeployFolder(false).unpackDirectory(new File("target/paxexam/unpack/")),vmOption("-Dfile.encoding=UTF-8"),KarafDistributionOption.keepRuntimeFolder(),KarafDistributionOption.replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),KarafDistributionOption.replaceConfigurationFile("etc/org.ops4j.pax.url.mvn.cfg",new File("src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg")),new LogLevelOption(LogLevelOption.LogLevel.INFO),KarafDistributionOption.features(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)} @AT@ 6865 @LENGTH@ 1617
------------DEL MethodInvocation@@KarafDistributionOption.replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")) @AT@ 7551 @LENGTH@ 152
---------------DEL SimpleName@@Name:KarafDistributionOption @AT@ 7551 @LENGTH@ 23
---------------DEL SimpleName@@MethodName:replaceConfigurationFile:["etc/config.properties", new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")] @AT@ 7575 @LENGTH@ 128
------------------DEL StringLiteral@@"etc/config.properties" @AT@ 7600 @LENGTH@ 23
------------------DEL ClassInstanceCreation@@File["src/test/resources/org/apache/camel/itest/karaf/config.properties"] @AT@ 7625 @LENGTH@ 77
---------------------DEL New@@new @AT@ 7625 @LENGTH@ 3
---------------------DEL SimpleType@@File @AT@ 7629 @LENGTH@ 4
---------------------DEL StringLiteral@@"src/test/resources/org/apache/camel/itest/karaf/config.properties" @AT@ 7634 @LENGTH@ 67


UPD FieldDeclaration@@private, final, String, [groups[]] @TO@ private, final, String[], [groups] @AT@ 937 @LENGTH@ 30
---DEL SimpleType@@String @AT@ 951 @LENGTH@ 6
---UPD VariableDeclarationFragment@@groups[] @TO@ groups @AT@ 958 @LENGTH@ 8
---INS ArrayType@@String[] @TO@ FieldDeclaration@@private, final, String, [groups[]] @AT@ 1167 @LENGTH@ 8
------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 1167 @LENGTH@ 6


UPD TypeDeclaration@@[@UriEndpoint(scheme="infinispan",consumerClass=InfinispanConsumer.class,label="cache,datagrid"), public]InfinispanEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="infinispan",consumerClass=InfinispanConsumer.class,label="cache,datagrid,clustering"), public]InfinispanEndpoint, DefaultEndpoint @AT@ 1081 @LENGTH@ 847
---UPD NormalAnnotation@@@UriEndpoint(scheme="infinispan",consumerClass=InfinispanConsumer.class,label="cache,datagrid") @TO@ @UriEndpoint(scheme="infinispan",consumerClass=InfinispanConsumer.class,label="cache,datagrid,clustering") @AT@ 1081 @LENGTH@ 103


UPD VariableDeclarationStatement@@ContextPathMatcher matcher=new RestContextPathMatcher(rawPath,path,consumer.getConfiguration().isMatchOnUriPrefix()); @TO@ ContextPathMatcher matcher=new RestContextPathMatcher(rawPath,path,consumer.getEndpoint().getHttpMethodRestrict(),consumer.getConfiguration().isMatchOnUriPrefix()); @AT@ 3578 @LENGTH@ 121
---UPD VariableDeclarationFragment@@matcher=new RestContextPathMatcher(rawPath,path,consumer.getConfiguration().isMatchOnUriPrefix()) @TO@ matcher=new RestContextPathMatcher(rawPath,path,consumer.getEndpoint().getHttpMethodRestrict(),consumer.getConfiguration().isMatchOnUriPrefix()) @AT@ 3597 @LENGTH@ 101
------UPD ClassInstanceCreation@@RestContextPathMatcher[rawPath, path, consumer.getConfiguration().isMatchOnUriPrefix()] @TO@ RestContextPathMatcher[rawPath, path, consumer.getEndpoint().getHttpMethodRestrict(), consumer.getConfiguration().isMatchOnUriPrefix()] @AT@ 3607 @LENGTH@ 91
---------INS MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @TO@ ClassInstanceCreation@@RestContextPathMatcher[rawPath, path, consumer.getConfiguration().isMatchOnUriPrefix()] @AT@ 3649 @LENGTH@ 46
------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 3649 @LENGTH@ 22
------------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 3649 @LENGTH@ 8
------------INS SimpleName@@MethodName:getHttpMethodRestrict:[] @TO@ MethodInvocation@@consumer.getEndpoint().getHttpMethodRestrict() @AT@ 3672 @LENGTH@ 23


UPD IfStatement@@if (LOG.isInfoEnabled()) {  for (  CounterGroup group : counters) {    LOG.info(group.getDisplayName() + ":");    for (    TezCounter counter : group) {      LOG.info("   " + counter.getDisplayName() + ": "+ counter.getValue());    }  }} @TO@ if (LOG.isInfoEnabled() && counters != null) {  for (  CounterGroup group : counters) {    LOG.info(group.getDisplayName() + ":");    for (    TezCounter counter : group) {      LOG.info("   " + counter.getDisplayName() + ": "+ counter.getValue());    }  }} @AT@ 6188 @LENGTH@ 272
---INS InfixExpression@@LOG.isInfoEnabled() && counters != null @TO@ IfStatement@@if (LOG.isInfoEnabled()) {  for (  CounterGroup group : counters) {    LOG.info(group.getDisplayName() + ":");    for (    TezCounter counter : group) {      LOG.info("   " + counter.getDisplayName() + ": "+ counter.getValue());    }  }} @AT@ 6186 @LENGTH@ 39
------INS MethodInvocation@@LOG.isInfoEnabled() @TO@ InfixExpression@@LOG.isInfoEnabled() && counters != null @AT@ 6186 @LENGTH@ 19
---------MOV SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isInfoEnabled() @AT@ 6192 @LENGTH@ 3
---------MOV SimpleName@@MethodName:isInfoEnabled:[] @TO@ MethodInvocation@@LOG.isInfoEnabled() @AT@ 6196 @LENGTH@ 15
------INS Operator@@&& @TO@ InfixExpression@@LOG.isInfoEnabled() && counters != null @AT@ 6205 @LENGTH@ 2
------INS InfixExpression@@counters != null @TO@ InfixExpression@@LOG.isInfoEnabled() && counters != null @AT@ 6209 @LENGTH@ 16
---------INS SimpleName@@counters @TO@ InfixExpression@@counters != null @AT@ 6209 @LENGTH@ 8
---------INS Operator@@!= @TO@ InfixExpression@@counters != null @AT@ 6217 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@counters != null @AT@ 6221 @LENGTH@ 4
---DEL MethodInvocation@@LOG.isInfoEnabled() @AT@ 6192 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:ReflectionUtil.setAccessible(m).invoke(cf,new WSDLServiceFactoryBean()) @TO@ MethodInvocation:ReflectionUtil.setAccessible(m).invoke(cf,new WSDLServiceFactoryBean(Object.class)) @AT@ 14604 @LENGTH@ 73
---UPD MethodInvocation@@ReflectionUtil.setAccessible(m).invoke(cf,new WSDLServiceFactoryBean()) @TO@ ReflectionUtil.setAccessible(m).invoke(cf,new WSDLServiceFactoryBean(Object.class)) @AT@ 14604 @LENGTH@ 72
------UPD SimpleName@@MethodName:invoke:[cf, new WSDLServiceFactoryBean()] @TO@ MethodName:invoke:[cf, new WSDLServiceFactoryBean(Object.class)] @AT@ 14636 @LENGTH@ 40
---------UPD ClassInstanceCreation@@WSDLServiceFactoryBean[] @TO@ WSDLServiceFactoryBean[Object.class] @AT@ 14647 @LENGTH@ 28
------------INS TypeLiteral@@Object.class @TO@ ClassInstanceCreation@@WSDLServiceFactoryBean[] @AT@ 14762 @LENGTH@ 12


INS ExpressionStatement@@Assignment:out=producer.requestBodyAndHeaders("Hello",null) @TO@ MethodDeclaration@@public, void, MethodName:testRequestUsingDefaultEndpoint, Exception,  @AT@ 7512 @LENGTH@ 52
---INS Assignment@@out=producer.requestBodyAndHeaders("Hello",null) @TO@ ExpressionStatement@@Assignment:out=producer.requestBodyAndHeaders("Hello",null) @AT@ 7512 @LENGTH@ 51
------INS SimpleName@@out @TO@ Assignment@@out=producer.requestBodyAndHeaders("Hello",null) @AT@ 7512 @LENGTH@ 3
------INS Operator@@= @TO@ Assignment@@out=producer.requestBodyAndHeaders("Hello",null) @AT@ 7515 @LENGTH@ 1
------INS MethodInvocation@@producer.requestBodyAndHeaders("Hello",null) @TO@ Assignment@@out=producer.requestBodyAndHeaders("Hello",null) @AT@ 7518 @LENGTH@ 45
---------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.requestBodyAndHeaders("Hello",null) @AT@ 7518 @LENGTH@ 8
---------INS SimpleName@@MethodName:requestBodyAndHeaders:["Hello", null] @TO@ MethodInvocation@@producer.requestBodyAndHeaders("Hello",null) @AT@ 7527 @LENGTH@ 36
------------INS StringLiteral@@"Hello" @TO@ SimpleName@@MethodName:requestBodyAndHeaders:["Hello", null] @AT@ 7549 @LENGTH@ 7
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:requestBodyAndHeaders:["Hello", null] @AT@ 7558 @LENGTH@ 4


UPD FieldDeclaration@@private, List<Comment>, [comments=new ArrayList<>()] @TO@ private, List<Comment>, [comments=new ArrayList<Comment>()] @AT@ 1158 @LENGTH@ 51
---UPD VariableDeclarationFragment@@comments=new ArrayList<>() @TO@ comments=new ArrayList<Comment>() @AT@ 1180 @LENGTH@ 28
------UPD ClassInstanceCreation@@ArrayList<>[] @TO@ ArrayList<Comment>[] @AT@ 1191 @LENGTH@ 17
---------UPD ParameterizedType@@ArrayList<> @TO@ ArrayList<Comment> @AT@ 1195 @LENGTH@ 11
------------INS SimpleType@@Comment @TO@ ParameterizedType@@ArrayList<> @AT@ 1205 @LENGTH@ 7


DEL IfStatement@@if (ttl >= 0) {  if (indexDefinition.getIndexKeys().keySet().size() > 1) {    LOGGER.warn("TTL is not supported for compound index with more than one key. TTL={} will be ignored.",ttl);  } else {    indexDefinition.expire(ttl,TimeUnit.SECONDS);  }} @AT@ 12415 @LENGTH@ 261
---DEL InfixExpression@@ttl >= 0 @AT@ 12419 @LENGTH@ 8
------DEL SimpleName@@ttl @AT@ 12419 @LENGTH@ 3
------DEL Operator@@>= @AT@ 12422 @LENGTH@ 2
------DEL NumberLiteral@@0 @AT@ 12426 @LENGTH@ 1
---DEL Block@@ThenBody:{  if (indexDefinition.getIndexKeys().keySet().size() > 1) {    LOGGER.warn("TTL is not supported for compound index with more than one key. TTL={} will be ignored.",ttl);  } else {    indexDefinition.expire(ttl,TimeUnit.SECONDS);  }} @AT@ 12429 @LENGTH@ 247
------DEL IfStatement@@if (indexDefinition.getIndexKeys().keySet().size() > 1) {  LOGGER.warn("TTL is not supported for compound index with more than one key. TTL={} will be ignored.",ttl);} else {  indexDefinition.expire(ttl,TimeUnit.SECONDS);} @AT@ 12434 @LENGTH@ 238
---------DEL InfixExpression@@indexDefinition.getIndexKeys().keySet().size() > 1 @AT@ 12438 @LENGTH@ 50
------------DEL MethodInvocation@@indexDefinition.getIndexKeys().keySet().size() @AT@ 12438 @LENGTH@ 46
---------------DEL MethodInvocation@@MethodName:keySet:[] @AT@ 12438 @LENGTH@ 39
---------------DEL MethodInvocation@@MethodName:getIndexKeys:[] @AT@ 12438 @LENGTH@ 30
---------------DEL SimpleName@@Name:indexDefinition @AT@ 12438 @LENGTH@ 15
---------------DEL SimpleName@@MethodName:size:[] @AT@ 12478 @LENGTH@ 6
------------DEL Operator@@> @AT@ 12484 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 12487 @LENGTH@ 1
---------DEL Block@@ThenBody:{  LOGGER.warn("TTL is not supported for compound index with more than one key. TTL={} will be ignored.",ttl);} @AT@ 12490 @LENGTH@ 119
------------DEL ExpressionStatement@@MethodInvocation:LOGGER.warn("TTL is not supported for compound index with more than one key. TTL={} will be ignored.",ttl) @AT@ 12496 @LENGTH@ 108
---------------DEL MethodInvocation@@LOGGER.warn("TTL is not supported for compound index with more than one key. TTL={} will be ignored.",ttl) @AT@ 12496 @LENGTH@ 107
------------------DEL SimpleName@@Name:LOGGER @AT@ 12496 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:warn:["TTL is not supported for compound index with more than one key. TTL={} will be ignored.", ttl] @AT@ 12503 @LENGTH@ 100
---------------------DEL StringLiteral@@"TTL is not supported for compound index with more than one key. TTL={} will be ignored." @AT@ 12508 @LENGTH@ 89
---------------------DEL SimpleName@@ttl @AT@ 12599 @LENGTH@ 3
---------DEL Block@@ElseBody:{  indexDefinition.expire(ttl,TimeUnit.SECONDS);} @AT@ 12615 @LENGTH@ 57
------------DEL ExpressionStatement@@MethodInvocation:indexDefinition.expire(ttl,TimeUnit.SECONDS) @AT@ 12621 @LENGTH@ 46
---------------DEL MethodInvocation@@indexDefinition.expire(ttl,TimeUnit.SECONDS) @AT@ 12621 @LENGTH@ 45
------------------DEL SimpleName@@Name:indexDefinition @AT@ 12621 @LENGTH@ 15
------------------DEL SimpleName@@MethodName:expire:[ttl, TimeUnit.SECONDS] @AT@ 12637 @LENGTH@ 29
---------------------DEL SimpleName@@ttl @AT@ 12644 @LENGTH@ 3
---------------------DEL QualifiedName@@TimeUnit.SECONDS @AT@ 12649 @LENGTH@ 16
------------------------DEL SimpleName@@TimeUnit @AT@ 12649 @LENGTH@ 8
------------------------DEL SimpleName@@SECONDS @AT@ 12658 @LENGTH@ 7


INS FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(JedisConverters.exceptionConverter())] @TO@ TypeDeclaration@@[public]JedisConnectionFactory, [InitializingBean, DisposableBean, RedisConnectionFactory] @AT@ 1928 @LENGTH@ 160
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(JedisConverters.exceptionConverter())] @AT@ 1928 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(JedisConverters.exceptionConverter())] @AT@ 1936 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(JedisConverters.exceptionConverter())] @AT@ 1943 @LENGTH@ 5
---INS SimpleType@@ExceptionTranslationStrategy @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(JedisConverters.exceptionConverter())] @AT@ 1949 @LENGTH@ 28
---INS VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(JedisConverters.exceptionConverter()) @TO@ FieldDeclaration@@private, static, final, ExceptionTranslationStrategy, [EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(JedisConverters.exceptionConverter())] @AT@ 1978 @LENGTH@ 109
------INS SimpleName@@EXCEPTION_TRANSLATION @TO@ VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(JedisConverters.exceptionConverter()) @AT@ 1978 @LENGTH@ 21
------INS ClassInstanceCreation@@PassThroughExceptionTranslationStrategy[JedisConverters.exceptionConverter()] @TO@ VariableDeclarationFragment@@EXCEPTION_TRANSLATION=new PassThroughExceptionTranslationStrategy(JedisConverters.exceptionConverter()) @AT@ 2002 @LENGTH@ 85
---------INS New@@new @TO@ ClassInstanceCreation@@PassThroughExceptionTranslationStrategy[JedisConverters.exceptionConverter()] @AT@ 2002 @LENGTH@ 3
---------INS SimpleType@@PassThroughExceptionTranslationStrategy @TO@ ClassInstanceCreation@@PassThroughExceptionTranslationStrategy[JedisConverters.exceptionConverter()] @AT@ 2006 @LENGTH@ 39
---------INS MethodInvocation@@JedisConverters.exceptionConverter() @TO@ ClassInstanceCreation@@PassThroughExceptionTranslationStrategy[JedisConverters.exceptionConverter()] @AT@ 2050 @LENGTH@ 36
------------INS SimpleName@@Name:JedisConverters @TO@ MethodInvocation@@JedisConverters.exceptionConverter() @AT@ 2050 @LENGTH@ 15
------------INS SimpleName@@MethodName:exceptionConverter:[] @TO@ MethodInvocation@@JedisConverters.exceptionConverter() @AT@ 2066 @LENGTH@ 20


UPD MethodDeclaration@@private, static, List<ImmutableHierarchicalConfiguration>, MethodName:toImmutable, List<? extends HierarchicalConfiguration> subs,  @TO@ private, static, List<ImmutableHierarchicalConfiguration>, MethodName:toImmutable, List<? extends HierarchicalConfiguration<?>> subs,  @AT@ 24651 @LENGTH@ 438
---UPD SingleVariableDeclaration@@List<? extends HierarchicalConfiguration> subs @TO@ List<? extends HierarchicalConfiguration<?>> subs @AT@ 24732 @LENGTH@ 46
------UPD ParameterizedType@@List<? extends HierarchicalConfiguration> @TO@ List<? extends HierarchicalConfiguration<?>> @AT@ 24732 @LENGTH@ 41
---UPD EnhancedForStatement@@for (HierarchicalConfiguration sub : subs) {  res.add(ConfigurationUtils.unmodifiableConfiguration(sub));} @TO@ for (HierarchicalConfiguration<?> sub : subs) {  res.add(ConfigurationUtils.unmodifiableConfiguration(sub));} @AT@ 24929 @LENGTH@ 134
------UPD SingleVariableDeclaration@@HierarchicalConfiguration sub @TO@ HierarchicalConfiguration<?> sub @AT@ 24934 @LENGTH@ 29
---------DEL SimpleType@@HierarchicalConfiguration @AT@ 24934 @LENGTH@ 25
---------INS ParameterizedType@@HierarchicalConfiguration<?> @TO@ SingleVariableDeclaration@@HierarchicalConfiguration sub @AT@ 24937 @LENGTH@ 28
------------INS SimpleType@@HierarchicalConfiguration @TO@ ParameterizedType@@HierarchicalConfiguration<?> @AT@ 24937 @LENGTH@ 25
------------INS WildcardType@@? @TO@ ParameterizedType@@HierarchicalConfiguration<?> @AT@ 24963 @LENGTH@ 1


UPD WhileStatement@@while (list.hasMore()) {  NameClassPair pair=list.next();  if (type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName())) {    Object instance=context.lookup(pair.getName());    answer.put(pair.getName(),type.cast(instance));  }} @TO@ while (list.hasMore()) {  NameClassPair pair=list.next();  Object instance=context.lookup(pair.getName());  if (type.isInstance(instance)) {    answer.put(pair.getName(),type.cast(instance));  }} @AT@ 2625 @LENGTH@ 347
---DEL Block@@WhileBody:{  NameClassPair pair=list.next();  if (type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName())) {    Object instance=context.lookup(pair.getName());    answer.put(pair.getName(),type.cast(instance));  }} @AT@ 2648 @LENGTH@ 324
------DEL IfStatement@@if (type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName())) {  Object instance=context.lookup(pair.getName());  answer.put(pair.getName(),type.cast(instance));} @AT@ 2716 @LENGTH@ 242
---------DEL InfixExpression@@type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName()) @AT@ 2720 @LENGTH@ 78
------------DEL MethodInvocation@@type.isInstance(pair.getClass()) @AT@ 2720 @LENGTH@ 32
---------------DEL SimpleName@@Name:type @AT@ 2720 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:isInstance:[pair.getClass()] @AT@ 2725 @LENGTH@ 27
------------------DEL MethodInvocation@@pair.getClass() @AT@ 2736 @LENGTH@ 15
---------------------DEL SimpleName@@Name:pair @AT@ 2736 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getClass:[] @AT@ 2741 @LENGTH@ 10
------------DEL Operator@@|| @AT@ 2752 @LENGTH@ 2
------------DEL MethodInvocation@@type.getName().equals(pair.getClassName()) @AT@ 2756 @LENGTH@ 42
---------------DEL MethodInvocation@@MethodName:getName:[] @AT@ 2756 @LENGTH@ 14
---------------DEL SimpleName@@Name:type @AT@ 2756 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:equals:[pair.getClassName()] @AT@ 2771 @LENGTH@ 27
------------------DEL MethodInvocation@@pair.getClassName() @AT@ 2778 @LENGTH@ 19
---------------------DEL SimpleName@@Name:pair @AT@ 2778 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getClassName:[] @AT@ 2783 @LENGTH@ 14
---MOV Block@@ThenBody:{  Object instance=context.lookup(pair.getName());  answer.put(pair.getName(),type.cast(instance));} @TO@ WhileStatement@@while (list.hasMore()) {  NameClassPair pair=list.next();  if (type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName())) {    Object instance=context.lookup(pair.getName());    answer.put(pair.getName(),type.cast(instance));  }} @AT@ 2800 @LENGTH@ 158
------MOV VariableDeclarationStatement@@NameClassPair pair=list.next(); @TO@ Block@@ThenBody:{  Object instance=context.lookup(pair.getName());  answer.put(pair.getName(),type.cast(instance));} @AT@ 2666 @LENGTH@ 33
------INS IfStatement@@if (type.isInstance(instance)) {  answer.put(pair.getName(),type.cast(instance));} @TO@ Block@@ThenBody:{  Object instance=context.lookup(pair.getName());  answer.put(pair.getName(),type.cast(instance));} @AT@ 2782 @LENGTH@ 119
---------INS MethodInvocation@@type.isInstance(instance) @TO@ IfStatement@@if (type.isInstance(instance)) {  answer.put(pair.getName(),type.cast(instance));} @AT@ 2786 @LENGTH@ 25
------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.isInstance(instance) @AT@ 2786 @LENGTH@ 4
------------INS SimpleName@@MethodName:isInstance:[instance] @TO@ MethodInvocation@@type.isInstance(instance) @AT@ 2791 @LENGTH@ 20
---------------INS SimpleName@@instance @TO@ SimpleName@@MethodName:isInstance:[instance] @AT@ 2802 @LENGTH@ 8
---------INS Block@@ThenBody:{  answer.put(pair.getName(),type.cast(instance));} @TO@ IfStatement@@if (type.isInstance(instance)) {  answer.put(pair.getName(),type.cast(instance));} @AT@ 2813 @LENGTH@ 88
------------MOV ExpressionStatement@@MethodInvocation:answer.put(pair.getName(),type.cast(instance)) @TO@ Block@@ThenBody:{  answer.put(pair.getName(),type.cast(instance));} @AT@ 2892 @LENGTH@ 48


UPD TypeDeclaration@@[public]WebTestUtils,  @TO@ [public]TestMvcClient,  @AT@ 1849 @LENGTH@ 6468
---UPD SimpleName@@ClassName:WebTestUtils @TO@ ClassName:TestMvcClient @AT@ 1862 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:consumerMulticastProcessor=new MulticastProcessor(getCamelContext(),processors,null,true,multicastExecutor,false,false,false,0,null,false) @TO@ Assignment:consumerMulticastProcessor=new MulticastProcessor(getCamelContext(),processors,null,true,multicastExecutor,false,false,false,0,null,false,false) @AT@ 9710 @LENGTH@ 151
---UPD Assignment@@consumerMulticastProcessor=new MulticastProcessor(getCamelContext(),processors,null,true,multicastExecutor,false,false,false,0,null,false) @TO@ consumerMulticastProcessor=new MulticastProcessor(getCamelContext(),processors,null,true,multicastExecutor,false,false,false,0,null,false,false) @AT@ 9710 @LENGTH@ 150
------UPD ClassInstanceCreation@@MulticastProcessor[getCamelContext(), processors, null, true, multicastExecutor, false, false, false, 0, null, false] @TO@ MulticastProcessor[getCamelContext(), processors, null, true, multicastExecutor, false, false, false, 0, null, false, false] @AT@ 9739 @LENGTH@ 121
---------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@MulticastProcessor[getCamelContext(), processors, null, true, multicastExecutor, false, false, false, 0, null, false] @AT@ 9990 @LENGTH@ 5


INS MethodDeclaration@@protected, void, MethodName:assertInitialized,  @TO@ TypeDeclaration@@[public, static, final]UserDataStoreCacheLoader, LazyWiringDeclarableSupport[CacheLoader<String,User>] @AT@ 9671 @LENGTH@ 247
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:assertInitialized,  @AT@ 9671 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:assertInitialized,  @AT@ 9681 @LENGTH@ 4
---INS SimpleName@@MethodName:assertInitialized @TO@ MethodDeclaration@@protected, void, MethodName:assertInitialized,  @AT@ 9686 @LENGTH@ 17
---INS ExpressionStatement@@SuperMethodInvocation:super.assertInitialized() @TO@ MethodDeclaration@@protected, void, MethodName:assertInitialized,  @AT@ 9711 @LENGTH@ 26
------INS SuperMethodInvocation@@super.assertInitialized() @TO@ ExpressionStatement@@SuperMethodInvocation:super.assertInitialized() @AT@ 9711 @LENGTH@ 25
---------INS SimpleName@@MethodName:assertInitialized:[] @TO@ SuperMethodInvocation@@super.assertInitialized() @AT@ 9717 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:Assert.state(userDataSource != null,String.format("The 'User' Data Source was not properly configured and initialized for use in (%1$s!)",getClass().getName())) @TO@ MethodDeclaration@@protected, void, MethodName:assertInitialized,  @AT@ 9741 @LENGTH@ 173
------INS MethodInvocation@@Assert.state(userDataSource != null,String.format("The 'User' Data Source was not properly configured and initialized for use in (%1$s!)",getClass().getName())) @TO@ ExpressionStatement@@MethodInvocation:Assert.state(userDataSource != null,String.format("The 'User' Data Source was not properly configured and initialized for use in (%1$s!)",getClass().getName())) @AT@ 9741 @LENGTH@ 172
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(userDataSource != null,String.format("The 'User' Data Source was not properly configured and initialized for use in (%1$s!)",getClass().getName())) @AT@ 9741 @LENGTH@ 6
---------INS SimpleName@@MethodName:state:[userDataSource != null, String.format("The 'User' Data Source was not properly configured and initialized for use in (%1$s!)",getClass().getName())] @TO@ MethodInvocation@@Assert.state(userDataSource != null,String.format("The 'User' Data Source was not properly configured and initialized for use in (%1$s!)",getClass().getName())) @AT@ 9748 @LENGTH@ 165
------------INS InfixExpression@@userDataSource != null @TO@ SimpleName@@MethodName:state:[userDataSource != null, String.format("The 'User' Data Source was not properly configured and initialized for use in (%1$s!)",getClass().getName())] @AT@ 9754 @LENGTH@ 22
---------------INS SimpleName@@userDataSource @TO@ InfixExpression@@userDataSource != null @AT@ 9754 @LENGTH@ 14
---------------INS Operator@@!= @TO@ InfixExpression@@userDataSource != null @AT@ 9768 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@userDataSource != null @AT@ 9772 @LENGTH@ 4
------------INS MethodInvocation@@String.format("The 'User' Data Source was not properly configured and initialized for use in (%1$s!)",getClass().getName()) @TO@ SimpleName@@MethodName:state:[userDataSource != null, String.format("The 'User' Data Source was not properly configured and initialized for use in (%1$s!)",getClass().getName())] @AT@ 9778 @LENGTH@ 134
---------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("The 'User' Data Source was not properly configured and initialized for use in (%1$s!)",getClass().getName()) @AT@ 9778 @LENGTH@ 6
---------------INS SimpleName@@MethodName:format:["The 'User' Data Source was not properly configured and initialized for use in (%1$s!)", getClass().getName()] @TO@ MethodInvocation@@String.format("The 'User' Data Source was not properly configured and initialized for use in (%1$s!)",getClass().getName()) @AT@ 9785 @LENGTH@ 127
------------------INS StringLiteral@@"The 'User' Data Source was not properly configured and initialized for use in (%1$s!)" @TO@ SimpleName@@MethodName:format:["The 'User' Data Source was not properly configured and initialized for use in (%1$s!)", getClass().getName()] @AT@ 9797 @LENGTH@ 87
------------------INS MethodInvocation@@getClass().getName() @TO@ SimpleName@@MethodName:format:["The 'User' Data Source was not properly configured and initialized for use in (%1$s!)", getClass().getName()] @AT@ 9891 @LENGTH@ 20
---------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@getClass().getName() @AT@ 9891 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@getClass().getName() @AT@ 9902 @LENGTH@ 9


UPD IfStatement@@if (ret == 0) {  ret=Integer.compare(r1.getNumContainers(),r2.getNumContainers());} @TO@ if (ret == 0) {  int x=r1.getNumContainers();  int y=r2.getNumContainers();  ret=(x < y) ? -1 : ((x == y) ? 0 : 1);} @AT@ 11351 @LENGTH@ 93
---UPD Block@@ThenBody:{  ret=Integer.compare(r1.getNumContainers(),r2.getNumContainers());} @TO@ ThenBody:{  int x=r1.getNumContainers();  int y=r2.getNumContainers();  ret=(x < y) ? -1 : ((x == y) ? 0 : 1);} @AT@ 11365 @LENGTH@ 79
------DEL ExpressionStatement@@Assignment:ret=Integer.compare(r1.getNumContainers(),r2.getNumContainers()) @AT@ 11371 @LENGTH@ 68
---------DEL Assignment@@ret=Integer.compare(r1.getNumContainers(),r2.getNumContainers()) @AT@ 11371 @LENGTH@ 67
------------DEL SimpleName@@ret @AT@ 11371 @LENGTH@ 3
------------DEL Operator@@= @AT@ 11374 @LENGTH@ 1
------------DEL MethodInvocation@@Integer.compare(r1.getNumContainers(),r2.getNumContainers()) @AT@ 11377 @LENGTH@ 61
---------------DEL SimpleName@@Name:Integer @AT@ 11377 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:compare:[r1.getNumContainers(), r2.getNumContainers()] @AT@ 11385 @LENGTH@ 53
------------------DEL MethodInvocation@@r1.getNumContainers() @AT@ 11393 @LENGTH@ 21
------------------DEL MethodInvocation@@r2.getNumContainers() @AT@ 11416 @LENGTH@ 21
------INS VariableDeclarationStatement@@int x=r1.getNumContainers(); @TO@ Block@@ThenBody:{  ret=Integer.compare(r1.getNumContainers(),r2.getNumContainers());} @AT@ 11371 @LENGTH@ 30
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int x=r1.getNumContainers(); @AT@ 11371 @LENGTH@ 3
---------INS VariableDeclarationFragment@@x=r1.getNumContainers() @TO@ VariableDeclarationStatement@@int x=r1.getNumContainers(); @AT@ 11375 @LENGTH@ 25
------------INS SimpleName@@x @TO@ VariableDeclarationFragment@@x=r1.getNumContainers() @AT@ 11375 @LENGTH@ 1
------------INS MethodInvocation@@r1.getNumContainers() @TO@ VariableDeclarationFragment@@x=r1.getNumContainers() @AT@ 11379 @LENGTH@ 21
---------------MOV SimpleName@@Name:r1 @TO@ MethodInvocation@@r1.getNumContainers() @AT@ 11393 @LENGTH@ 2
---------------MOV SimpleName@@MethodName:getNumContainers:[] @TO@ MethodInvocation@@r1.getNumContainers() @AT@ 11396 @LENGTH@ 18
------INS VariableDeclarationStatement@@int y=r2.getNumContainers(); @TO@ Block@@ThenBody:{  ret=Integer.compare(r1.getNumContainers(),r2.getNumContainers());} @AT@ 11406 @LENGTH@ 30
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int y=r2.getNumContainers(); @AT@ 11406 @LENGTH@ 3
---------INS VariableDeclarationFragment@@y=r2.getNumContainers() @TO@ VariableDeclarationStatement@@int y=r2.getNumContainers(); @AT@ 11410 @LENGTH@ 25
------------INS SimpleName@@y @TO@ VariableDeclarationFragment@@y=r2.getNumContainers() @AT@ 11410 @LENGTH@ 1
------------INS MethodInvocation@@r2.getNumContainers() @TO@ VariableDeclarationFragment@@y=r2.getNumContainers() @AT@ 11414 @LENGTH@ 21
---------------MOV SimpleName@@Name:r2 @TO@ MethodInvocation@@r2.getNumContainers() @AT@ 11416 @LENGTH@ 2
---------------MOV SimpleName@@MethodName:getNumContainers:[] @TO@ MethodInvocation@@r2.getNumContainers() @AT@ 11419 @LENGTH@ 18
------INS ExpressionStatement@@Assignment:ret=(x < y) ? -1 : ((x == y) ? 0 : 1) @TO@ Block@@ThenBody:{  ret=Integer.compare(r1.getNumContainers(),r2.getNumContainers());} @AT@ 11441 @LENGTH@ 41
---------INS Assignment@@ret=(x < y) ? -1 : ((x == y) ? 0 : 1) @TO@ ExpressionStatement@@Assignment:ret=(x < y) ? -1 : ((x == y) ? 0 : 1) @AT@ 11441 @LENGTH@ 40
------------INS SimpleName@@ret @TO@ Assignment@@ret=(x < y) ? -1 : ((x == y) ? 0 : 1) @AT@ 11441 @LENGTH@ 3
------------INS Operator@@= @TO@ Assignment@@ret=(x < y) ? -1 : ((x == y) ? 0 : 1) @AT@ 11444 @LENGTH@ 1
------------INS ConditionalExpression@@(x < y) ? -1 : ((x == y) ? 0 : 1) @TO@ Assignment@@ret=(x < y) ? -1 : ((x == y) ? 0 : 1) @AT@ 11448 @LENGTH@ 33
---------------INS ParenthesizedExpression@@(x < y) @TO@ ConditionalExpression@@(x < y) ? -1 : ((x == y) ? 0 : 1) @AT@ 11448 @LENGTH@ 7
------------------INS InfixExpression@@x < y @TO@ ParenthesizedExpression@@(x < y) @AT@ 11449 @LENGTH@ 5
---------------------INS SimpleName@@x @TO@ InfixExpression@@x < y @AT@ 11449 @LENGTH@ 1
---------------------INS Operator@@< @TO@ InfixExpression@@x < y @AT@ 11450 @LENGTH@ 1
---------------------INS SimpleName@@y @TO@ InfixExpression@@x < y @AT@ 11453 @LENGTH@ 1
---------------INS PrefixExpression@@-1 @TO@ ConditionalExpression@@(x < y) ? -1 : ((x == y) ? 0 : 1) @AT@ 11458 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 11458 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 11459 @LENGTH@ 1
---------------INS ParenthesizedExpression@@((x == y) ? 0 : 1) @TO@ ConditionalExpression@@(x < y) ? -1 : ((x == y) ? 0 : 1) @AT@ 11463 @LENGTH@ 18
------------------INS ConditionalExpression@@(x == y) ? 0 : 1 @TO@ ParenthesizedExpression@@((x == y) ? 0 : 1) @AT@ 11464 @LENGTH@ 16
---------------------INS ParenthesizedExpression@@(x == y) @TO@ ConditionalExpression@@(x == y) ? 0 : 1 @AT@ 11464 @LENGTH@ 8
------------------------INS InfixExpression@@x == y @TO@ ParenthesizedExpression@@(x == y) @AT@ 11465 @LENGTH@ 6
---------------------------INS SimpleName@@x @TO@ InfixExpression@@x == y @AT@ 11465 @LENGTH@ 1
---------------------------INS Operator@@== @TO@ InfixExpression@@x == y @AT@ 11466 @LENGTH@ 2
---------------------------INS SimpleName@@y @TO@ InfixExpression@@x == y @AT@ 11470 @LENGTH@ 1
---------------------INS NumberLiteral@@0 @TO@ ConditionalExpression@@(x == y) ? 0 : 1 @AT@ 11475 @LENGTH@ 1
---------------------INS NumberLiteral@@1 @TO@ ConditionalExpression@@(x == y) ? 0 : 1 @AT@ 11479 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:mapsIdReferenceToDBRefCorrectly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]QueryMapperUnitTests,  @AT@ 21297 @LENGTH@ 510
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:mapsIdReferenceToDBRefCorrectly,  @AT@ 21297 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:mapsIdReferenceToDBRefCorrectly,  @AT@ 21304 @LENGTH@ 4
---INS SimpleName@@MethodName:mapsIdReferenceToDBRefCorrectly @TO@ MethodDeclaration@@public, void, MethodName:mapsIdReferenceToDBRefCorrectly,  @AT@ 21309 @LENGTH@ 31
---INS VariableDeclarationStatement@@ObjectId id=new ObjectId(); @TO@ MethodDeclaration@@public, void, MethodName:mapsIdReferenceToDBRefCorrectly,  @AT@ 21348 @LENGTH@ 29
------INS SimpleType@@ObjectId @TO@ VariableDeclarationStatement@@ObjectId id=new ObjectId(); @AT@ 21348 @LENGTH@ 8
------INS VariableDeclarationFragment@@id=new ObjectId() @TO@ VariableDeclarationStatement@@ObjectId id=new ObjectId(); @AT@ 21357 @LENGTH@ 19
---------INS SimpleName@@id @TO@ VariableDeclarationFragment@@id=new ObjectId() @AT@ 21357 @LENGTH@ 2
---------INS ClassInstanceCreation@@ObjectId[] @TO@ VariableDeclarationFragment@@id=new ObjectId() @AT@ 21362 @LENGTH@ 14
------------INS New@@new @TO@ ClassInstanceCreation@@ObjectId[] @AT@ 21362 @LENGTH@ 3
------------INS SimpleType@@ObjectId @TO@ ClassInstanceCreation@@ObjectId[] @AT@ 21366 @LENGTH@ 8
---INS VariableDeclarationStatement@@DBObject query=new BasicDBObject("reference.id",new com.mongodb.DBRef(null,"reference",id.toString())); @TO@ MethodDeclaration@@public, void, MethodName:mapsIdReferenceToDBRefCorrectly,  @AT@ 21381 @LENGTH@ 108
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject query=new BasicDBObject("reference.id",new com.mongodb.DBRef(null,"reference",id.toString())); @AT@ 21381 @LENGTH@ 8
------INS VariableDeclarationFragment@@query=new BasicDBObject("reference.id",new com.mongodb.DBRef(null,"reference",id.toString())) @TO@ VariableDeclarationStatement@@DBObject query=new BasicDBObject("reference.id",new com.mongodb.DBRef(null,"reference",id.toString())); @AT@ 21390 @LENGTH@ 98
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new BasicDBObject("reference.id",new com.mongodb.DBRef(null,"reference",id.toString())) @AT@ 21390 @LENGTH@ 5
---------INS ClassInstanceCreation@@BasicDBObject["reference.id", new com.mongodb.DBRef(null,"reference",id.toString())] @TO@ VariableDeclarationFragment@@query=new BasicDBObject("reference.id",new com.mongodb.DBRef(null,"reference",id.toString())) @AT@ 21398 @LENGTH@ 90
------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject["reference.id", new com.mongodb.DBRef(null,"reference",id.toString())] @AT@ 21398 @LENGTH@ 3
------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject["reference.id", new com.mongodb.DBRef(null,"reference",id.toString())] @AT@ 21402 @LENGTH@ 13
------------INS StringLiteral@@"reference.id" @TO@ ClassInstanceCreation@@BasicDBObject["reference.id", new com.mongodb.DBRef(null,"reference",id.toString())] @AT@ 21416 @LENGTH@ 14
------------INS ClassInstanceCreation@@com.mongodb.DBRef[null, "reference", id.toString()] @TO@ ClassInstanceCreation@@BasicDBObject["reference.id", new com.mongodb.DBRef(null,"reference",id.toString())] @AT@ 21432 @LENGTH@ 55
---------------INS New@@new @TO@ ClassInstanceCreation@@com.mongodb.DBRef[null, "reference", id.toString()] @AT@ 21432 @LENGTH@ 3
---------------INS SimpleType@@com.mongodb.DBRef @TO@ ClassInstanceCreation@@com.mongodb.DBRef[null, "reference", id.toString()] @AT@ 21436 @LENGTH@ 17
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@com.mongodb.DBRef[null, "reference", id.toString()] @AT@ 21454 @LENGTH@ 4
---------------INS StringLiteral@@"reference" @TO@ ClassInstanceCreation@@com.mongodb.DBRef[null, "reference", id.toString()] @AT@ 21460 @LENGTH@ 11
---------------INS MethodInvocation@@id.toString() @TO@ ClassInstanceCreation@@com.mongodb.DBRef[null, "reference", id.toString()] @AT@ 21473 @LENGTH@ 13
------------------INS SimpleName@@Name:id @TO@ MethodInvocation@@id.toString() @AT@ 21473 @LENGTH@ 2
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@id.toString() @AT@ 21476 @LENGTH@ 10
---INS VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query,context.getPersistentEntity(WithDBRef.class)); @TO@ MethodDeclaration@@public, void, MethodName:mapsIdReferenceToDBRefCorrectly,  @AT@ 21492 @LENGTH@ 94
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query,context.getPersistentEntity(WithDBRef.class)); @AT@ 21492 @LENGTH@ 8
------INS VariableDeclarationFragment@@result=mapper.getMappedObject(query,context.getPersistentEntity(WithDBRef.class)) @TO@ VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query,context.getPersistentEntity(WithDBRef.class)); @AT@ 21501 @LENGTH@ 84
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=mapper.getMappedObject(query,context.getPersistentEntity(WithDBRef.class)) @AT@ 21501 @LENGTH@ 6
---------INS MethodInvocation@@mapper.getMappedObject(query,context.getPersistentEntity(WithDBRef.class)) @TO@ VariableDeclarationFragment@@result=mapper.getMappedObject(query,context.getPersistentEntity(WithDBRef.class)) @AT@ 21510 @LENGTH@ 75
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query,context.getPersistentEntity(WithDBRef.class)) @AT@ 21510 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[query, context.getPersistentEntity(WithDBRef.class)] @TO@ MethodInvocation@@mapper.getMappedObject(query,context.getPersistentEntity(WithDBRef.class)) @AT@ 21517 @LENGTH@ 68
---------------INS SimpleName@@query @TO@ SimpleName@@MethodName:getMappedObject:[query, context.getPersistentEntity(WithDBRef.class)] @AT@ 21533 @LENGTH@ 5
---------------INS MethodInvocation@@context.getPersistentEntity(WithDBRef.class) @TO@ SimpleName@@MethodName:getMappedObject:[query, context.getPersistentEntity(WithDBRef.class)] @AT@ 21540 @LENGTH@ 44
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(WithDBRef.class) @AT@ 21540 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getPersistentEntity:[WithDBRef.class] @TO@ MethodInvocation@@context.getPersistentEntity(WithDBRef.class) @AT@ 21548 @LENGTH@ 36
---------------------INS TypeLiteral@@WithDBRef.class @TO@ SimpleName@@MethodName:getPersistentEntity:[WithDBRef.class] @AT@ 21568 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertThat(result.containsField("reference"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:mapsIdReferenceToDBRefCorrectly,  @AT@ 21590 @LENGTH@ 56
------INS MethodInvocation@@assertThat(result.containsField("reference"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.containsField("reference"),is(true)) @AT@ 21590 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertThat:[result.containsField("reference"), is(true)] @TO@ MethodInvocation@@assertThat(result.containsField("reference"),is(true)) @AT@ 21590 @LENGTH@ 55
------------INS MethodInvocation@@result.containsField("reference") @TO@ SimpleName@@MethodName:assertThat:[result.containsField("reference"), is(true)] @AT@ 21601 @LENGTH@ 33
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.containsField("reference") @AT@ 21601 @LENGTH@ 6
---------------INS SimpleName@@MethodName:containsField:["reference"] @TO@ MethodInvocation@@result.containsField("reference") @AT@ 21608 @LENGTH@ 26
------------------INS StringLiteral@@"reference" @TO@ SimpleName@@MethodName:containsField:["reference"] @AT@ 21622 @LENGTH@ 11
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[result.containsField("reference"), is(true)] @AT@ 21636 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 21636 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 21639 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 21636 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 21639 @LENGTH@ 4
---INS VariableDeclarationStatement@@com.mongodb.DBRef reference=getTypedValue(result,"reference",com.mongodb.DBRef.class); @TO@ MethodDeclaration@@public, void, MethodName:mapsIdReferenceToDBRefCorrectly,  @AT@ 21649 @LENGTH@ 90
------INS SimpleType@@com.mongodb.DBRef @TO@ VariableDeclarationStatement@@com.mongodb.DBRef reference=getTypedValue(result,"reference",com.mongodb.DBRef.class); @AT@ 21649 @LENGTH@ 17
------INS VariableDeclarationFragment@@reference=getTypedValue(result,"reference",com.mongodb.DBRef.class) @TO@ VariableDeclarationStatement@@com.mongodb.DBRef reference=getTypedValue(result,"reference",com.mongodb.DBRef.class); @AT@ 21667 @LENGTH@ 71
---------INS SimpleName@@reference @TO@ VariableDeclarationFragment@@reference=getTypedValue(result,"reference",com.mongodb.DBRef.class) @AT@ 21667 @LENGTH@ 9
---------INS MethodInvocation@@getTypedValue(result,"reference",com.mongodb.DBRef.class) @TO@ VariableDeclarationFragment@@reference=getTypedValue(result,"reference",com.mongodb.DBRef.class) @AT@ 21679 @LENGTH@ 59
------------INS SimpleName@@MethodName:getTypedValue:[result, "reference", com.mongodb.DBRef.class] @TO@ MethodInvocation@@getTypedValue(result,"reference",com.mongodb.DBRef.class) @AT@ 21679 @LENGTH@ 59
---------------INS SimpleName@@result @TO@ SimpleName@@MethodName:getTypedValue:[result, "reference", com.mongodb.DBRef.class] @AT@ 21693 @LENGTH@ 6
---------------INS StringLiteral@@"reference" @TO@ SimpleName@@MethodName:getTypedValue:[result, "reference", com.mongodb.DBRef.class] @AT@ 21701 @LENGTH@ 11
---------------INS TypeLiteral@@com.mongodb.DBRef.class @TO@ SimpleName@@MethodName:getTypedValue:[result, "reference", com.mongodb.DBRef.class] @AT@ 21714 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertThat(reference.getId(),is(instanceOf(ObjectId.class))) @TO@ MethodDeclaration@@public, void, MethodName:mapsIdReferenceToDBRefCorrectly,  @AT@ 21742 @LENGTH@ 62
------INS MethodInvocation@@assertThat(reference.getId(),is(instanceOf(ObjectId.class))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(reference.getId(),is(instanceOf(ObjectId.class))) @AT@ 21742 @LENGTH@ 61
---------INS SimpleName@@MethodName:assertThat:[reference.getId(), is(instanceOf(ObjectId.class))] @TO@ MethodInvocation@@assertThat(reference.getId(),is(instanceOf(ObjectId.class))) @AT@ 21742 @LENGTH@ 61
------------INS MethodInvocation@@reference.getId() @TO@ SimpleName@@MethodName:assertThat:[reference.getId(), is(instanceOf(ObjectId.class))] @AT@ 21753 @LENGTH@ 17
---------------INS SimpleName@@Name:reference @TO@ MethodInvocation@@reference.getId() @AT@ 21753 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@reference.getId() @AT@ 21763 @LENGTH@ 7
------------INS MethodInvocation@@is(instanceOf(ObjectId.class)) @TO@ SimpleName@@MethodName:assertThat:[reference.getId(), is(instanceOf(ObjectId.class))] @AT@ 21772 @LENGTH@ 30
---------------INS SimpleName@@MethodName:is:[instanceOf(ObjectId.class)] @TO@ MethodInvocation@@is(instanceOf(ObjectId.class)) @AT@ 21772 @LENGTH@ 30
------------------INS MethodInvocation@@instanceOf(ObjectId.class) @TO@ SimpleName@@MethodName:is:[instanceOf(ObjectId.class)] @AT@ 21775 @LENGTH@ 26
---------------------INS SimpleName@@MethodName:instanceOf:[ObjectId.class] @TO@ MethodInvocation@@instanceOf(ObjectId.class) @AT@ 21775 @LENGTH@ 26
------------------------INS TypeLiteral@@ObjectId.class @TO@ SimpleName@@MethodName:instanceOf:[ObjectId.class] @AT@ 21786 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:instanceOf:[ObjectId.class] @TO@ MethodInvocation@@instanceOf(ObjectId.class) @AT@ 21775 @LENGTH@ 26
------------------------INS TypeLiteral@@ObjectId.class @TO@ SimpleName@@MethodName:instanceOf:[ObjectId.class] @AT@ 21786 @LENGTH@ 14


UPD TryStatement@@try {  dirContext=groupLoadHandler.getConnection();  Attributes groupNameAttrs=dirContext.getAttributes(distingushedName,groupNameAttribute != null ? new String[]{groupNameAttribute} : new String[]{});  if (groupNameAttribute != null) {    Attribute groupNameAttr=groupNameAttrs.get(groupNameAttribute);    simpleName=(String)groupNameAttr.get();    SECURITY_LOGGER.tracef("simpleName %s loaded for group with distinguishedName=%s",simpleName,distingushedName);  } else {    SECURITY_LOGGER.trace("No groupNameAttribute to load simpleName");  }  foundEntries.add(new LdapEntry(simpleName,distingushedName,groupReferralAddress));} catch (LdapReferralException e) {  Object info=e.getReferralInfo();  try {    URI fullUri=new URI(info.toString());    groupReferralAddress=new URI(fullUri.getScheme(),null,fullUri.getHost(),fullUri.getPort(),null,null,null);    distingushedName=fullUri.getPath().substring(1);    SECURITY_LOGGER.tracef("Received referral with address '%s' for dn '%s'",groupReferralAddress.toString(),distingushedName);    groupLoadHandler=groupLoadHandler.findForReferral(groupReferralAddress);    if (groupLoadHandler == null) {      SECURITY_LOGGER.tracef("Unable to follow referral to '%s'",fullUri);    }    retry=true;  } catch (  URISyntaxException ue) {    SECURITY_LOGGER.tracef("Unable to construct URI from referral: %s",info);  }} @TO@ try {  dirContext=groupLoadHandler.getConnection();  Attributes groupNameAttrs=dirContext.getAttributes(distingushedName,groupNameAttribute != null ? new String[]{groupNameAttribute} : new String[]{});  if (groupNameAttribute != null) {    Attribute groupNameAttr=groupNameAttrs.get(groupNameAttribute);    simpleName=(String)groupNameAttr.get();    SECURITY_LOGGER.tracef("simpleName %s loaded for group with distinguishedName=%s",simpleName,distingushedName);  } else {    SECURITY_LOGGER.trace("No groupNameAttribute to load simpleName");  }  foundEntries.add(new LdapEntry(simpleName,distingushedName,groupReferralAddress));} catch (NameNotFoundException e) {  SECURITY_LOGGER.tracef("Failed to query roleNameAttrName: %s",e.getMessage());  if (!this.IGNORE_NONEXISTENT_ROLE)   throw e;}catch (LdapReferralException e) {  Object info=e.getReferralInfo();  try {    URI fullUri=new URI(info.toString());    groupReferralAddress=new URI(fullUri.getScheme(),null,fullUri.getHost(),fullUri.getPort(),null,null,null);    distingushedName=fullUri.getPath().substring(1);    SECURITY_LOGGER.tracef("Received referral with address '%s' for dn '%s'",groupReferralAddress.toString(),distingushedName);    groupLoadHandler=groupLoadHandler.findForReferral(groupReferralAddress);    if (groupLoadHandler == null) {      SECURITY_LOGGER.tracef("Unable to follow referral to '%s'",fullUri);    }    retry=true;  } catch (  URISyntaxException ue) {    SECURITY_LOGGER.tracef("Unable to construct URI from referral: %s",info);  }} @AT@ 13838 @LENGTH@ 2326
---INS CatchClause@@catch (NameNotFoundException e) {  SECURITY_LOGGER.tracef("Failed to query roleNameAttrName: %s",e.getMessage());  if (!this.IGNORE_NONEXISTENT_ROLE)   throw e;} @TO@ TryStatement@@try {  dirContext=groupLoadHandler.getConnection();  Attributes groupNameAttrs=dirContext.getAttributes(distingushedName,groupNameAttribute != null ? new String[]{groupNameAttribute} : new String[]{});  if (groupNameAttribute != null) {    Attribute groupNameAttr=groupNameAttrs.get(groupNameAttribute);    simpleName=(String)groupNameAttr.get();    SECURITY_LOGGER.tracef("simpleName %s loaded for group with distinguishedName=%s",simpleName,distingushedName);  } else {    SECURITY_LOGGER.trace("No groupNameAttribute to load simpleName");  }  foundEntries.add(new LdapEntry(simpleName,distingushedName,groupReferralAddress));} catch (LdapReferralException e) {  Object info=e.getReferralInfo();  try {    URI fullUri=new URI(info.toString());    groupReferralAddress=new URI(fullUri.getScheme(),null,fullUri.getHost(),fullUri.getPort(),null,null,null);    distingushedName=fullUri.getPath().substring(1);    SECURITY_LOGGER.tracef("Received referral with address '%s' for dn '%s'",groupReferralAddress.toString(),distingushedName);    groupLoadHandler=groupLoadHandler.findForReferral(groupReferralAddress);    if (groupLoadHandler == null) {      SECURITY_LOGGER.tracef("Unable to follow referral to '%s'",fullUri);    }    retry=true;  } catch (  URISyntaxException ue) {    SECURITY_LOGGER.tracef("Unable to construct URI from referral: %s",info);  }} @AT@ 15184 @LENGTH@ 272
------INS SingleVariableDeclaration@@NameNotFoundException e @TO@ CatchClause@@catch (NameNotFoundException e) {  SECURITY_LOGGER.tracef("Failed to query roleNameAttrName: %s",e.getMessage());  if (!this.IGNORE_NONEXISTENT_ROLE)   throw e;} @AT@ 15191 @LENGTH@ 23
---------INS SimpleType@@NameNotFoundException @TO@ SingleVariableDeclaration@@NameNotFoundException e @AT@ 15191 @LENGTH@ 21
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NameNotFoundException e @AT@ 15213 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:SECURITY_LOGGER.tracef("Failed to query roleNameAttrName: %s",e.getMessage()) @TO@ CatchClause@@catch (NameNotFoundException e) {  SECURITY_LOGGER.tracef("Failed to query roleNameAttrName: %s",e.getMessage());  if (!this.IGNORE_NONEXISTENT_ROLE)   throw e;} @AT@ 15246 @LENGTH@ 79
---------INS MethodInvocation@@SECURITY_LOGGER.tracef("Failed to query roleNameAttrName: %s",e.getMessage()) @TO@ ExpressionStatement@@MethodInvocation:SECURITY_LOGGER.tracef("Failed to query roleNameAttrName: %s",e.getMessage()) @AT@ 15246 @LENGTH@ 78
------------INS SimpleName@@Name:SECURITY_LOGGER @TO@ MethodInvocation@@SECURITY_LOGGER.tracef("Failed to query roleNameAttrName: %s",e.getMessage()) @AT@ 15246 @LENGTH@ 15
------------INS SimpleName@@MethodName:tracef:["Failed to query roleNameAttrName: %s", e.getMessage()] @TO@ MethodInvocation@@SECURITY_LOGGER.tracef("Failed to query roleNameAttrName: %s",e.getMessage()) @AT@ 15262 @LENGTH@ 62
---------------INS StringLiteral@@"Failed to query roleNameAttrName: %s" @TO@ SimpleName@@MethodName:tracef:["Failed to query roleNameAttrName: %s", e.getMessage()] @AT@ 15269 @LENGTH@ 38
---------------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:tracef:["Failed to query roleNameAttrName: %s", e.getMessage()] @AT@ 15309 @LENGTH@ 14
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 15309 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 15311 @LENGTH@ 12
------INS IfStatement@@if (!this.IGNORE_NONEXISTENT_ROLE) throw e; @TO@ CatchClause@@catch (NameNotFoundException e) {  SECURITY_LOGGER.tracef("Failed to query roleNameAttrName: %s",e.getMessage());  if (!this.IGNORE_NONEXISTENT_ROLE)   throw e;} @AT@ 15354 @LENGTH@ 76
---------INS PrefixExpression@@!this.IGNORE_NONEXISTENT_ROLE @TO@ IfStatement@@if (!this.IGNORE_NONEXISTENT_ROLE) throw e; @AT@ 15358 @LENGTH@ 29
------------INS Operator@@! @TO@ PrefixExpression@@!this.IGNORE_NONEXISTENT_ROLE @AT@ 15358 @LENGTH@ 1
------------INS FieldAccess@@this.IGNORE_NONEXISTENT_ROLE @TO@ PrefixExpression@@!this.IGNORE_NONEXISTENT_ROLE @AT@ 15359 @LENGTH@ 28
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.IGNORE_NONEXISTENT_ROLE @AT@ 15359 @LENGTH@ 4
---------------INS SimpleName@@IGNORE_NONEXISTENT_ROLE @TO@ FieldAccess@@this.IGNORE_NONEXISTENT_ROLE @AT@ 15364 @LENGTH@ 23
---------INS Block@@ThenBody:throw e; @TO@ IfStatement@@if (!this.IGNORE_NONEXISTENT_ROLE) throw e; @AT@ 15422 @LENGTH@ 8
------------INS ThrowStatement@@SimpleName:e @TO@ Block@@ThenBody:throw e; @AT@ 15422 @LENGTH@ 8
---------------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 15428 @LENGTH@ 1


INS MethodDeclaration@@Object, MethodName:methodWithManuallyDefinedDbRef, String id,  @TO@ TypeDeclaration@@[private]SampleRepository,  @AT@ 12319 @LENGTH@ 42
---INS SimpleType@@Object @TO@ MethodDeclaration@@Object, MethodName:methodWithManuallyDefinedDbRef, String id,  @AT@ 12312 @LENGTH@ 6
---INS SimpleName@@MethodName:methodWithManuallyDefinedDbRef @TO@ MethodDeclaration@@Object, MethodName:methodWithManuallyDefinedDbRef, String id,  @AT@ 12319 @LENGTH@ 30
---INS SingleVariableDeclaration@@String id @TO@ MethodDeclaration@@Object, MethodName:methodWithManuallyDefinedDbRef, String id,  @AT@ 12350 @LENGTH@ 9
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String id @AT@ 12350 @LENGTH@ 6
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@String id @AT@ 12357 @LENGTH@ 2


UPD ForStatement@@for (int i=0; i < 3; i++) {  ObjectName on=it.next();  boolean registered=mbeanServer.isRegistered(on);  assertEquals("Should be registered",true,registered);  String uri=(String)mbeanServer.getAttribute(on,"EndpointUri");  assertTrue(uri,uri.equals("direct://start") || uri.equals("mock://foo") || uri.equals("mock://result"));} @TO@ for (int i=0; i < 4; i++) {  ObjectName on=it.next();  boolean registered=mbeanServer.isRegistered(on);  assertEquals("Should be registered",true,registered);  String uri=(String)mbeanServer.getAttribute(on,"EndpointUri");  assertTrue(uri,uri.equals("direct://start") || uri.equals("ref://foo") || uri.equals("mock://foo")|| uri.equals("mock://result"));} @AT@ 3105 @LENGTH@ 408
---UPD InfixExpression@@i < 3 @TO@ i < 4 @AT@ 3121 @LENGTH@ 5
------UPD NumberLiteral@@3 @TO@ 4 @AT@ 3125 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:assertTrue(uri,uri.equals("direct://start") || uri.equals("mock://foo") || uri.equals("mock://result")) @TO@ MethodInvocation:assertTrue(uri,uri.equals("direct://start") || uri.equals("ref://foo") || uri.equals("mock://foo")|| uri.equals("mock://result")) @AT@ 3398 @LENGTH@ 105
------UPD MethodInvocation@@assertTrue(uri,uri.equals("direct://start") || uri.equals("mock://foo") || uri.equals("mock://result")) @TO@ assertTrue(uri,uri.equals("direct://start") || uri.equals("ref://foo") || uri.equals("mock://foo")|| uri.equals("mock://result")) @AT@ 3398 @LENGTH@ 104
---------UPD SimpleName@@MethodName:assertTrue:[uri, uri.equals("direct://start") || uri.equals("mock://foo") || uri.equals("mock://result")] @TO@ MethodName:assertTrue:[uri, uri.equals("direct://start") || uri.equals("ref://foo") || uri.equals("mock://foo")|| uri.equals("mock://result")] @AT@ 3398 @LENGTH@ 104
------------UPD InfixExpression@@uri.equals("direct://start") || uri.equals("mock://foo") || uri.equals("mock://result") @TO@ uri.equals("direct://start") || uri.equals("ref://foo") || uri.equals("mock://foo")|| uri.equals("mock://result") @AT@ 3414 @LENGTH@ 87
---------------INS MethodInvocation@@uri.equals("ref://foo") @TO@ InfixExpression@@uri.equals("direct://start") || uri.equals("mock://foo") || uri.equals("mock://result") @AT@ 3446 @LENGTH@ 23
------------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.equals("ref://foo") @AT@ 3446 @LENGTH@ 3
------------------INS SimpleName@@MethodName:equals:["ref://foo"] @TO@ MethodInvocation@@uri.equals("ref://foo") @AT@ 3450 @LENGTH@ 19
---------------------INS StringLiteral@@"ref://foo" @TO@ SimpleName@@MethodName:equals:["ref://foo"] @AT@ 3457 @LENGTH@ 11


UPD VariableDeclarationStatement@@BinaryBitmap bitmap=new BinaryBitmap((new HybridBinarizer(new BufferedImageLuminanceSource(ImageIO.read(file))))); @TO@ BinaryBitmap bitmap=new BinaryBitmap(new HybridBinarizer(new BufferedImageLuminanceSource(ImageIO.read(file)))); @AT@ 2895 @LENGTH@ 133
---UPD VariableDeclarationFragment@@bitmap=new BinaryBitmap((new HybridBinarizer(new BufferedImageLuminanceSource(ImageIO.read(file))))) @TO@ bitmap=new BinaryBitmap(new HybridBinarizer(new BufferedImageLuminanceSource(ImageIO.read(file)))) @AT@ 2908 @LENGTH@ 119
------UPD ClassInstanceCreation@@BinaryBitmap[(new HybridBinarizer(new BufferedImageLuminanceSource(ImageIO.read(file))))] @TO@ BinaryBitmap[new HybridBinarizer(new BufferedImageLuminanceSource(ImageIO.read(file)))] @AT@ 2917 @LENGTH@ 110
---------DEL ParenthesizedExpression@@(new HybridBinarizer(new BufferedImageLuminanceSource(ImageIO.read(file)))) @AT@ 2934 @LENGTH@ 92
---------MOV ClassInstanceCreation@@HybridBinarizer[new BufferedImageLuminanceSource(ImageIO.read(file))] @TO@ ClassInstanceCreation@@BinaryBitmap[(new HybridBinarizer(new BufferedImageLuminanceSource(ImageIO.read(file))))] @AT@ 2935 @LENGTH@ 90


UPD MethodDeclaration@@protected, boolean, MethodName:compare, Object left, Object right, CommandLineException,  @TO@ protected, boolean, MethodName:doCompare, Object left, Object right,  @AT@ 1307 @LENGTH@ 254
---UPD SimpleName@@MethodName:compare @TO@ MethodName:doCompare @AT@ 1325 @LENGTH@ 7
---DEL SimpleType@@CommandLineException @AT@ 1367 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:shouldConvertObjectIdEvenWhenNestedInOperatorDbObject,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]SpringDataMongodbSerializerUnitTests,  @AT@ 4460 @LENGTH@ 374
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 4460 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 4467 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldConvertObjectIdEvenWhenNestedInOperatorDbObject @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 4472 @LENGTH@ 53
---INS VariableDeclarationStatement@@ObjectId value=new ObjectId("53bb9fd14438765b29c2d56e"); @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 4533 @LENGTH@ 58
------INS SimpleType@@ObjectId @TO@ VariableDeclarationStatement@@ObjectId value=new ObjectId("53bb9fd14438765b29c2d56e"); @AT@ 4533 @LENGTH@ 8
------INS VariableDeclarationFragment@@value=new ObjectId("53bb9fd14438765b29c2d56e") @TO@ VariableDeclarationStatement@@ObjectId value=new ObjectId("53bb9fd14438765b29c2d56e"); @AT@ 4542 @LENGTH@ 48
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=new ObjectId("53bb9fd14438765b29c2d56e") @AT@ 4542 @LENGTH@ 5
---------INS ClassInstanceCreation@@ObjectId["53bb9fd14438765b29c2d56e"] @TO@ VariableDeclarationFragment@@value=new ObjectId("53bb9fd14438765b29c2d56e") @AT@ 4550 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@ObjectId["53bb9fd14438765b29c2d56e"] @AT@ 4550 @LENGTH@ 3
------------INS SimpleType@@ObjectId @TO@ ClassInstanceCreation@@ObjectId["53bb9fd14438765b29c2d56e"] @AT@ 4554 @LENGTH@ 8
------------INS StringLiteral@@"53bb9fd14438765b29c2d56e" @TO@ ClassInstanceCreation@@ObjectId["53bb9fd14438765b29c2d56e"] @AT@ 4563 @LENGTH@ 26
---INS VariableDeclarationStatement@@DBObject serialized=serializer.asDBObject("_id",new BasicDBObject("$ne",value.toString())); @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 4594 @LENGTH@ 95
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject serialized=serializer.asDBObject("_id",new BasicDBObject("$ne",value.toString())); @AT@ 4594 @LENGTH@ 8
------INS VariableDeclarationFragment@@serialized=serializer.asDBObject("_id",new BasicDBObject("$ne",value.toString())) @TO@ VariableDeclarationStatement@@DBObject serialized=serializer.asDBObject("_id",new BasicDBObject("$ne",value.toString())); @AT@ 4603 @LENGTH@ 85
---------INS SimpleName@@serialized @TO@ VariableDeclarationFragment@@serialized=serializer.asDBObject("_id",new BasicDBObject("$ne",value.toString())) @AT@ 4603 @LENGTH@ 10
---------INS MethodInvocation@@serializer.asDBObject("_id",new BasicDBObject("$ne",value.toString())) @TO@ VariableDeclarationFragment@@serialized=serializer.asDBObject("_id",new BasicDBObject("$ne",value.toString())) @AT@ 4616 @LENGTH@ 72
------------INS SimpleName@@Name:serializer @TO@ MethodInvocation@@serializer.asDBObject("_id",new BasicDBObject("$ne",value.toString())) @AT@ 4616 @LENGTH@ 10
------------INS SimpleName@@MethodName:asDBObject:["_id", new BasicDBObject("$ne",value.toString())] @TO@ MethodInvocation@@serializer.asDBObject("_id",new BasicDBObject("$ne",value.toString())) @AT@ 4627 @LENGTH@ 61
---------------INS StringLiteral@@"_id" @TO@ SimpleName@@MethodName:asDBObject:["_id", new BasicDBObject("$ne",value.toString())] @AT@ 4638 @LENGTH@ 5
---------------INS ClassInstanceCreation@@BasicDBObject["$ne", value.toString()] @TO@ SimpleName@@MethodName:asDBObject:["_id", new BasicDBObject("$ne",value.toString())] @AT@ 4645 @LENGTH@ 42
------------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject["$ne", value.toString()] @AT@ 4645 @LENGTH@ 3
------------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject["$ne", value.toString()] @AT@ 4649 @LENGTH@ 13
------------------INS StringLiteral@@"$ne" @TO@ ClassInstanceCreation@@BasicDBObject["$ne", value.toString()] @AT@ 4663 @LENGTH@ 5
------------------INS MethodInvocation@@value.toString() @TO@ ClassInstanceCreation@@BasicDBObject["$ne", value.toString()] @AT@ 4670 @LENGTH@ 16
---------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.toString() @AT@ 4670 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@value.toString() @AT@ 4676 @LENGTH@ 10
---INS VariableDeclarationStatement@@DBObject _id=getAsDBObject(serialized,"_id"); @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 4693 @LENGTH@ 48
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject _id=getAsDBObject(serialized,"_id"); @AT@ 4693 @LENGTH@ 8
------INS VariableDeclarationFragment@@_id=getAsDBObject(serialized,"_id") @TO@ VariableDeclarationStatement@@DBObject _id=getAsDBObject(serialized,"_id"); @AT@ 4702 @LENGTH@ 38
---------INS SimpleName@@_id @TO@ VariableDeclarationFragment@@_id=getAsDBObject(serialized,"_id") @AT@ 4702 @LENGTH@ 3
---------INS MethodInvocation@@getAsDBObject(serialized,"_id") @TO@ VariableDeclarationFragment@@_id=getAsDBObject(serialized,"_id") @AT@ 4708 @LENGTH@ 32
------------INS SimpleName@@MethodName:getAsDBObject:[serialized, "_id"] @TO@ MethodInvocation@@getAsDBObject(serialized,"_id") @AT@ 4708 @LENGTH@ 32
---------------INS SimpleName@@serialized @TO@ SimpleName@@MethodName:getAsDBObject:[serialized, "_id"] @AT@ 4722 @LENGTH@ 10
---------------INS StringLiteral@@"_id" @TO@ SimpleName@@MethodName:getAsDBObject:[serialized, "_id"] @AT@ 4734 @LENGTH@ 5
---INS VariableDeclarationStatement@@ObjectId $ne=getTypedValue(_id,"$ne",ObjectId.class); @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 4744 @LENGTH@ 57
------INS SimpleType@@ObjectId @TO@ VariableDeclarationStatement@@ObjectId $ne=getTypedValue(_id,"$ne",ObjectId.class); @AT@ 4744 @LENGTH@ 8
------INS VariableDeclarationFragment@@$ne=getTypedValue(_id,"$ne",ObjectId.class) @TO@ VariableDeclarationStatement@@ObjectId $ne=getTypedValue(_id,"$ne",ObjectId.class); @AT@ 4753 @LENGTH@ 47
---------INS SimpleName@@$ne @TO@ VariableDeclarationFragment@@$ne=getTypedValue(_id,"$ne",ObjectId.class) @AT@ 4753 @LENGTH@ 3
---------INS MethodInvocation@@getTypedValue(_id,"$ne",ObjectId.class) @TO@ VariableDeclarationFragment@@$ne=getTypedValue(_id,"$ne",ObjectId.class) @AT@ 4759 @LENGTH@ 41
------------INS SimpleName@@MethodName:getTypedValue:[_id, "$ne", ObjectId.class] @TO@ MethodInvocation@@getTypedValue(_id,"$ne",ObjectId.class) @AT@ 4759 @LENGTH@ 41
---------------INS SimpleName@@_id @TO@ SimpleName@@MethodName:getTypedValue:[_id, "$ne", ObjectId.class] @AT@ 4773 @LENGTH@ 3
---------------INS StringLiteral@@"$ne" @TO@ SimpleName@@MethodName:getTypedValue:[_id, "$ne", ObjectId.class] @AT@ 4778 @LENGTH@ 5
---------------INS TypeLiteral@@ObjectId.class @TO@ SimpleName@@MethodName:getTypedValue:[_id, "$ne", ObjectId.class] @AT@ 4785 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat($ne,is(value)) @TO@ MethodDeclaration@@public, void, MethodName:shouldConvertObjectIdEvenWhenNestedInOperatorDbObject,  @AT@ 4804 @LENGTH@ 27
------INS MethodInvocation@@assertThat($ne,is(value)) @TO@ ExpressionStatement@@MethodInvocation:assertThat($ne,is(value)) @AT@ 4804 @LENGTH@ 26
---------INS SimpleName@@MethodName:assertThat:[$ne, is(value)] @TO@ MethodInvocation@@assertThat($ne,is(value)) @AT@ 4804 @LENGTH@ 26
------------INS SimpleName@@$ne @TO@ SimpleName@@MethodName:assertThat:[$ne, is(value)] @AT@ 4815 @LENGTH@ 3
------------INS MethodInvocation@@is(value) @TO@ SimpleName@@MethodName:assertThat:[$ne, is(value)] @AT@ 4820 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[value] @TO@ MethodInvocation@@is(value) @AT@ 4820 @LENGTH@ 9
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:is:[value] @AT@ 4823 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[value] @TO@ MethodInvocation@@is(value) @AT@ 4820 @LENGTH@ 9
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:is:[value] @AT@ 4823 @LENGTH@ 5


UPD Block@@ThenBody:{  String contentTypeString=ExchangeHelper.getContentType(exchange);  ContentType contentType=null;  if (contentTypeString != null) {    contentType=ContentType.create(contentTypeString);  }  if (contentTypeString != null && HttpConstants.CONTENT_TYPE_JAVA_SERIALIZED_OBJECT.equals(contentTypeString)) {    Serializable obj=in.getMandatoryBody(Serializable.class);    ByteArrayOutputStream bos=new ByteArrayOutputStream();    HttpHelper.writeObjectToStream(bos,obj);    ByteArrayEntity entity=new ByteArrayEntity(bos.toByteArray());    entity.setContentType(HttpConstants.CONTENT_TYPE_JAVA_SERIALIZED_OBJECT);    IOHelper.close(bos);    answer=entity;  } else   if (data instanceof File || data instanceof GenericFile) {    File file=in.getBody(File.class);    if (file != null) {      if (contentType != null) {        answer=new FileEntity(file,contentType);      } else {        answer=new FileEntity(file);      }    }  } else   if (data instanceof String) {    String charset=IOHelper.getCharsetName(exchange,false);    if (charset == null && contentType != null) {      Charset cs=contentType.getCharset();      if (cs != null) {        charset=cs.name();      }    }    StringEntity entity=new StringEntity((String)data,charset);    if (contentType != null) {      entity.setContentType(contentType.toString());    }    answer=entity;  }  if (answer == null) {    InputStream is=in.getMandatoryBody(InputStream.class);    InputStreamEntity entity=new InputStreamEntity(is,-1);    if (contentType != null) {      entity.setContentType(contentType.toString());    }    answer=entity;  }} @TO@ ThenBody:{  String contentTypeString=ExchangeHelper.getContentType(exchange);  ContentType contentType=null;  if (contentTypeString != null) {    if (contentTypeString.indexOf("charset") > 0) {      contentType=ContentType.parse(contentTypeString);    } else {      contentType=ContentType.create(contentTypeString);    }  }  if (contentTypeString != null && HttpConstants.CONTENT_TYPE_JAVA_SERIALIZED_OBJECT.equals(contentTypeString)) {    Serializable obj=in.getMandatoryBody(Serializable.class);    ByteArrayOutputStream bos=new ByteArrayOutputStream();    HttpHelper.writeObjectToStream(bos,obj);    ByteArrayEntity entity=new ByteArrayEntity(bos.toByteArray());    entity.setContentType(HttpConstants.CONTENT_TYPE_JAVA_SERIALIZED_OBJECT);    IOHelper.close(bos);    answer=entity;  } else   if (data instanceof File || data instanceof GenericFile) {    File file=in.getBody(File.class);    if (file != null) {      if (contentType != null) {        answer=new FileEntity(file,contentType);      } else {        answer=new FileEntity(file);      }    }  } else   if (data instanceof String) {    String charset=IOHelper.getCharsetName(exchange,false);    if (charset == null && contentType != null) {      Charset cs=contentType.getCharset();      if (cs != null) {        charset=cs.name();      }    }    StringEntity entity=new StringEntity((String)data,charset);    if (contentType != null) {      entity.setContentType(contentType.toString());    }    answer=entity;  }  if (answer == null) {    InputStream is=in.getMandatoryBody(InputStream.class);    InputStreamEntity entity=new InputStreamEntity(is,-1);    if (contentType != null) {      entity.setContentType(contentType.toString());    }    answer=entity;  }} @AT@ 18005 @LENGTH@ 3787
---INS IfStatement@@if (contentTypeString != null) {  if (contentTypeString.indexOf("charset") > 0) {    contentType=ContentType.parse(contentTypeString);  } else {    contentType=ContentType.create(contentTypeString);  }} @TO@ Block@@ThenBody:{  String contentTypeString=ExchangeHelper.getContentType(exchange);  ContentType contentType=null;  if (contentTypeString != null) {    contentType=ContentType.create(contentTypeString);  }  if (contentTypeString != null && HttpConstants.CONTENT_TYPE_JAVA_SERIALIZED_OBJECT.equals(contentTypeString)) {    Serializable obj=in.getMandatoryBody(Serializable.class);    ByteArrayOutputStream bos=new ByteArrayOutputStream();    HttpHelper.writeObjectToStream(bos,obj);    ByteArrayEntity entity=new ByteArrayEntity(bos.toByteArray());    entity.setContentType(HttpConstants.CONTENT_TYPE_JAVA_SERIALIZED_OBJECT);    IOHelper.close(bos);    answer=entity;  } else   if (data instanceof File || data instanceof GenericFile) {    File file=in.getBody(File.class);    if (file != null) {      if (contentType != null) {        answer=new FileEntity(file,contentType);      } else {        answer=new FileEntity(file);      }    }  } else   if (data instanceof String) {    String charset=IOHelper.getCharsetName(exchange,false);    if (charset == null && contentType != null) {      Charset cs=contentType.getCharset();      if (cs != null) {        charset=cs.name();      }    }    StringEntity entity=new StringEntity((String)data,charset);    if (contentType != null) {      entity.setContentType(contentType.toString());    }    answer=entity;  }  if (answer == null) {    InputStream is=in.getMandatoryBody(InputStream.class);    InputStreamEntity entity=new InputStreamEntity(is,-1);    if (contentType != null) {      entity.setContentType(contentType.toString());    }    answer=entity;  }} @AT@ 18517 @LENGTH@ 411
------INS InfixExpression@@contentTypeString != null @TO@ IfStatement@@if (contentTypeString != null) {  if (contentTypeString.indexOf("charset") > 0) {    contentType=ContentType.parse(contentTypeString);  } else {    contentType=ContentType.create(contentTypeString);  }} @AT@ 18521 @LENGTH@ 25
---------INS SimpleName@@contentTypeString @TO@ InfixExpression@@contentTypeString != null @AT@ 18521 @LENGTH@ 17
---------INS Operator@@!= @TO@ InfixExpression@@contentTypeString != null @AT@ 18538 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@contentTypeString != null @AT@ 18542 @LENGTH@ 4
------INS Block@@ThenBody:{  if (contentTypeString.indexOf("charset") > 0) {    contentType=ContentType.parse(contentTypeString);  } else {    contentType=ContentType.create(contentTypeString);  }} @TO@ IfStatement@@if (contentTypeString != null) {  if (contentTypeString.indexOf("charset") > 0) {    contentType=ContentType.parse(contentTypeString);  } else {    contentType=ContentType.create(contentTypeString);  }} @AT@ 18548 @LENGTH@ 380
---------MOV IfStatement@@if (contentTypeString != null) {  contentType=ContentType.create(contentTypeString);} @TO@ Block@@ThenBody:{  if (contentTypeString.indexOf("charset") > 0) {    contentType=ContentType.parse(contentTypeString);  } else {    contentType=ContentType.create(contentTypeString);  }} @AT@ 18517 @LENGTH@ 131
------------UPD InfixExpression@@contentTypeString != null @TO@ contentTypeString.indexOf("charset") > 0 @AT@ 18521 @LENGTH@ 25
---------------DEL SimpleName@@contentTypeString @AT@ 18521 @LENGTH@ 17
---------------UPD Operator@@!= @TO@ > @AT@ 18538 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 18542 @LENGTH@ 4
---------------INS MethodInvocation@@contentTypeString.indexOf("charset") @TO@ InfixExpression@@contentTypeString != null @AT@ 18643 @LENGTH@ 36
------------------INS SimpleName@@Name:contentTypeString @TO@ MethodInvocation@@contentTypeString.indexOf("charset") @AT@ 18643 @LENGTH@ 17
------------------INS SimpleName@@MethodName:indexOf:["charset"] @TO@ MethodInvocation@@contentTypeString.indexOf("charset") @AT@ 18661 @LENGTH@ 18
---------------------INS StringLiteral@@"charset" @TO@ SimpleName@@MethodName:indexOf:["charset"] @AT@ 18669 @LENGTH@ 9
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@contentTypeString != null @AT@ 18682 @LENGTH@ 1
------------UPD Block@@ThenBody:{  contentType=ContentType.create(contentTypeString);} @TO@ ElseBody:{  contentType=ContentType.create(contentTypeString);} @AT@ 18548 @LENGTH@ 100
------------INS Block@@ThenBody:{  contentType=ContentType.parse(contentTypeString);} @TO@ IfStatement@@if (contentTypeString != null) {  contentType=ContentType.create(contentTypeString);} @AT@ 18685 @LENGTH@ 107
---------------INS ExpressionStatement@@Assignment:contentType=ContentType.parse(contentTypeString) @TO@ Block@@ThenBody:{  contentType=ContentType.parse(contentTypeString);} @AT@ 18715 @LENGTH@ 51
------------------INS Assignment@@contentType=ContentType.parse(contentTypeString) @TO@ ExpressionStatement@@Assignment:contentType=ContentType.parse(contentTypeString) @AT@ 18715 @LENGTH@ 50
---------------------INS SimpleName@@contentType @TO@ Assignment@@contentType=ContentType.parse(contentTypeString) @AT@ 18715 @LENGTH@ 11
---------------------INS Operator@@= @TO@ Assignment@@contentType=ContentType.parse(contentTypeString) @AT@ 18726 @LENGTH@ 1
---------------------INS MethodInvocation@@ContentType.parse(contentTypeString) @TO@ Assignment@@contentType=ContentType.parse(contentTypeString) @AT@ 18729 @LENGTH@ 36
------------------------INS SimpleName@@Name:ContentType @TO@ MethodInvocation@@ContentType.parse(contentTypeString) @AT@ 18729 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:parse:[contentTypeString] @TO@ MethodInvocation@@ContentType.parse(contentTypeString) @AT@ 18741 @LENGTH@ 24
---------------------------INS SimpleName@@contentTypeString @TO@ SimpleName@@MethodName:parse:[contentTypeString] @AT@ 18747 @LENGTH@ 17
---UPD IfStatement@@if (contentTypeString != null) {  contentType=ContentType.create(contentTypeString);} @TO@ if (contentTypeString.indexOf("charset") > 0) {  contentType=ContentType.parse(contentTypeString);} else {  contentType=ContentType.create(contentTypeString);} @AT@ 18517 @LENGTH@ 131


INS ExpressionStatement@@MethodInvocation:sd.setInputFormat(HiveInputFormat.class.getName()) @TO@ MethodDeclaration@@public, void, MethodName:testSimplePrivileges, Exception,  @AT@ 7085 @LENGTH@ 51
---INS MethodInvocation@@sd.setInputFormat(HiveInputFormat.class.getName()) @TO@ ExpressionStatement@@MethodInvocation:sd.setInputFormat(HiveInputFormat.class.getName()) @AT@ 7085 @LENGTH@ 50
------INS SimpleName@@Name:sd @TO@ MethodInvocation@@sd.setInputFormat(HiveInputFormat.class.getName()) @AT@ 7085 @LENGTH@ 2
------INS SimpleName@@MethodName:setInputFormat:[HiveInputFormat.class.getName()] @TO@ MethodInvocation@@sd.setInputFormat(HiveInputFormat.class.getName()) @AT@ 7088 @LENGTH@ 47
---------INS MethodInvocation@@HiveInputFormat.class.getName() @TO@ SimpleName@@MethodName:setInputFormat:[HiveInputFormat.class.getName()] @AT@ 7103 @LENGTH@ 31
------------INS TypeLiteral@@HiveInputFormat.class @TO@ MethodInvocation@@HiveInputFormat.class.getName() @AT@ 7103 @LENGTH@ 21
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@HiveInputFormat.class.getName() @AT@ 7125 @LENGTH@ 9


INS MethodDeclaration@@public, voidMethodName:ServletComponent, Class<? extends HttpEndpoint> endpointClass,  @TO@ TypeDeclaration@@[public]ServletComponent, HttpComponent @AT@ 1852 @LENGTH@ 106
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:ServletComponent, Class<? extends HttpEndpoint> endpointClass,  @AT@ 1852 @LENGTH@ 6
---INS SimpleName@@MethodName:ServletComponent @TO@ MethodDeclaration@@public, voidMethodName:ServletComponent, Class<? extends HttpEndpoint> endpointClass,  @AT@ 1859 @LENGTH@ 16
---INS SingleVariableDeclaration@@Class<? extends HttpEndpoint> endpointClass @TO@ MethodDeclaration@@public, voidMethodName:ServletComponent, Class<? extends HttpEndpoint> endpointClass,  @AT@ 1876 @LENGTH@ 43
------INS ParameterizedType@@Class<? extends HttpEndpoint> @TO@ SingleVariableDeclaration@@Class<? extends HttpEndpoint> endpointClass @AT@ 1876 @LENGTH@ 29
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends HttpEndpoint> @AT@ 1876 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends HttpEndpoint> @AT@ 1882 @LENGTH@ 22
------INS SimpleName@@endpointClass @TO@ SingleVariableDeclaration@@Class<? extends HttpEndpoint> endpointClass @AT@ 1906 @LENGTH@ 13
---INS SuperConstructorInvocation@@super(endpointClass);
 @TO@ MethodDeclaration@@public, voidMethodName:ServletComponent, Class<? extends HttpEndpoint> endpointClass,  @AT@ 1931 @LENGTH@ 21
------INS SimpleName@@endpointClass @TO@ SuperConstructorInvocation@@super(endpointClass);
 @AT@ 1937 @LENGTH@ 13


UPD IfStatement@@if (remaining.startsWith(CxfConstants.SPRING_CONTEXT_ENDPOINT)) {  String beanId=remaining.substring(CxfConstants.SPRING_CONTEXT_ENDPOINT.length());  if (beanId.startsWith("//")) {    beanId=beanId.substring(2);  }  AbstractJAXRSFactoryBean bean=CamelContextHelper.mandatoryLookup(getCamelContext(),beanId,AbstractJAXRSFactoryBean.class);  if (bean instanceof BlueprintSupport) {    answer=new CxfRsBlueprintEndpoint(this,remaining,bean);  } else {    answer=new CxfRsSpringEndpoint(this,remaining,bean);  }  if (bean.getProperties() != null) {    Map<String,Object> copy=new HashMap<String,Object>();    copy.putAll(bean.getProperties());    setProperties(answer,copy);  }} else {  answer=new CxfRsEndpoint(remaining,this);} @TO@ if (remaining.startsWith(CxfConstants.SPRING_CONTEXT_ENDPOINT)) {  String beanId=remaining.substring(CxfConstants.SPRING_CONTEXT_ENDPOINT.length());  if (beanId.startsWith("//")) {    beanId=beanId.substring(2);  }  AbstractJAXRSFactoryBean bean=CamelContextHelper.mandatoryLookup(getCamelContext(),beanId,AbstractJAXRSFactoryBean.class);  if (bean instanceof BlueprintSupport) {    answer=new CxfRsBlueprintEndpoint(this,remaining,bean);  } else {    answer=new CxfRsSpringEndpoint(this,remaining,bean);  }  if (bean.getProperties() != null) {    Map<String,Object> copy=new HashMap<String,Object>();    copy.putAll(bean.getProperties());    setProperties(answer,copy);  }  answer.setBeanId(beanId);} else {  answer=new CxfRsEndpoint(remaining,this);} @AT@ 1895 @LENGTH@ 1511
---UPD Block@@ThenBody:{  String beanId=remaining.substring(CxfConstants.SPRING_CONTEXT_ENDPOINT.length());  if (beanId.startsWith("//")) {    beanId=beanId.substring(2);  }  AbstractJAXRSFactoryBean bean=CamelContextHelper.mandatoryLookup(getCamelContext(),beanId,AbstractJAXRSFactoryBean.class);  if (bean instanceof BlueprintSupport) {    answer=new CxfRsBlueprintEndpoint(this,remaining,bean);  } else {    answer=new CxfRsSpringEndpoint(this,remaining,bean);  }  if (bean.getProperties() != null) {    Map<String,Object> copy=new HashMap<String,Object>();    copy.putAll(bean.getProperties());    setProperties(answer,copy);  }} @TO@ ThenBody:{  String beanId=remaining.substring(CxfConstants.SPRING_CONTEXT_ENDPOINT.length());  if (beanId.startsWith("//")) {    beanId=beanId.substring(2);  }  AbstractJAXRSFactoryBean bean=CamelContextHelper.mandatoryLookup(getCamelContext(),beanId,AbstractJAXRSFactoryBean.class);  if (bean instanceof BlueprintSupport) {    answer=new CxfRsBlueprintEndpoint(this,remaining,bean);  } else {    answer=new CxfRsSpringEndpoint(this,remaining,bean);  }  if (bean.getProperties() != null) {    Map<String,Object> copy=new HashMap<String,Object>();    copy.putAll(bean.getProperties());    setProperties(answer,copy);  }  answer.setBeanId(beanId);} @AT@ 1959 @LENGTH@ 1321
------INS ExpressionStatement@@MethodInvocation:answer.setBeanId(beanId) @TO@ Block@@ThenBody:{  String beanId=remaining.substring(CxfConstants.SPRING_CONTEXT_ENDPOINT.length());  if (beanId.startsWith("//")) {    beanId=beanId.substring(2);  }  AbstractJAXRSFactoryBean bean=CamelContextHelper.mandatoryLookup(getCamelContext(),beanId,AbstractJAXRSFactoryBean.class);  if (bean instanceof BlueprintSupport) {    answer=new CxfRsBlueprintEndpoint(this,remaining,bean);  } else {    answer=new CxfRsSpringEndpoint(this,remaining,bean);  }  if (bean.getProperties() != null) {    Map<String,Object> copy=new HashMap<String,Object>();    copy.putAll(bean.getProperties());    setProperties(answer,copy);  }} @AT@ 3259 @LENGTH@ 25
---------INS MethodInvocation@@answer.setBeanId(beanId) @TO@ ExpressionStatement@@MethodInvocation:answer.setBeanId(beanId) @AT@ 3259 @LENGTH@ 24
------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.setBeanId(beanId) @AT@ 3259 @LENGTH@ 6
------------INS SimpleName@@MethodName:setBeanId:[beanId] @TO@ MethodInvocation@@answer.setBeanId(beanId) @AT@ 3266 @LENGTH@ 17
---------------INS SimpleName@@beanId @TO@ SimpleName@@MethodName:setBeanId:[beanId] @AT@ 3276 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:printer.printRecords(new String[][]{{"r1c1","r1c2"},{"r2c1","r2c2"}}) @TO@ MethodInvocation:printer.printRecords((Object[])new String[][]{{"r1c1","r1c2"},{"r2c1","r2c2"}}) @AT@ 5164 @LENGTH@ 80
---UPD MethodInvocation@@printer.printRecords(new String[][]{{"r1c1","r1c2"},{"r2c1","r2c2"}}) @TO@ printer.printRecords((Object[])new String[][]{{"r1c1","r1c2"},{"r2c1","r2c2"}}) @AT@ 5164 @LENGTH@ 79
------UPD SimpleName@@MethodName:printRecords:[new String[][]{{"r1c1","r1c2"},{"r2c1","r2c2"}}] @TO@ MethodName:printRecords:[(Object[])new String[][]{{"r1c1","r1c2"},{"r2c1","r2c2"}}] @AT@ 5172 @LENGTH@ 71
---------INS CastExpression@@(Object[])new String[][]{{"r1c1","r1c2"},{"r2c1","r2c2"}} @TO@ SimpleName@@MethodName:printRecords:[new String[][]{{"r1c1","r1c2"},{"r2c1","r2c2"}}] @AT@ 5185 @LENGTH@ 68
------------MOV ArrayCreation@@new String[][]{{"r1c1","r1c2"},{"r2c1","r2c2"}} @TO@ CastExpression@@(Object[])new String[][]{{"r1c1","r1c2"},{"r2c1","r2c2"}} @AT@ 5185 @LENGTH@ 57
------------INS ArrayType@@Object[] @TO@ CastExpression@@(Object[])new String[][]{{"r1c1","r1c2"},{"r2c1","r2c2"}} @AT@ 5186 @LENGTH@ 8
---------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 5186 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:FtpsEndpoint, String uri, RemoteFileComponent<FTPFile> remoteFileComponent, RemoteFileConfiguration configuration,  @TO@ public, voidMethodName:FtpsEndpoint, String uri, RemoteFileComponent<FTPFile> remoteFileComponent, FtpsConfiguration configuration,  @AT@ 1891 @LENGTH@ 184
---UPD SingleVariableDeclaration@@RemoteFileConfiguration configuration @TO@ FtpsConfiguration configuration @AT@ 1973 @LENGTH@ 37
------UPD SimpleType@@RemoteFileConfiguration @TO@ FtpsConfiguration @AT@ 1973 @LENGTH@ 23
---INS ExpressionStatement@@Assignment:this.configuration=configuration @TO@ MethodDeclaration@@public, voidMethodName:FtpsEndpoint, String uri, RemoteFileComponent<FTPFile> remoteFileComponent, RemoteFileConfiguration configuration,  @AT@ 2166 @LENGTH@ 35
------INS Assignment@@this.configuration=configuration @TO@ ExpressionStatement@@Assignment:this.configuration=configuration @AT@ 2166 @LENGTH@ 34
---------INS FieldAccess@@this.configuration @TO@ Assignment@@this.configuration=configuration @AT@ 2166 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.configuration @AT@ 2166 @LENGTH@ 4
------------INS SimpleName@@configuration @TO@ FieldAccess@@this.configuration @AT@ 2171 @LENGTH@ 13
---------INS Operator@@= @TO@ Assignment@@this.configuration=configuration @AT@ 2184 @LENGTH@ 1
---------INS SimpleName@@configuration @TO@ Assignment@@this.configuration=configuration @AT@ 2187 @LENGTH@ 13


UPD VariableDeclarationStatement@@DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 3452 @LENGTH@ 97
---UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 3452 @LENGTH@ 17
---UPD VariableDeclarationFragment@@client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 3470 @LENGTH@ 78
------UPD MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 3479 @LENGTH@ 69
---------DEL QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @AT@ 3479 @LENGTH@ 43
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3508 @LENGTH@ 11
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 3523 @LENGTH@ 25


INS ExpressionStatement@@MethodInvocation:from("direct:bulk_index").to("elasticsearch://local?operation=BULK_INDEX&indexName=twitter&indexType=tweet") @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 9966 @LENGTH@ 109
---INS MethodInvocation@@from("direct:bulk_index").to("elasticsearch://local?operation=BULK_INDEX&indexName=twitter&indexType=tweet") @TO@ ExpressionStatement@@MethodInvocation:from("direct:bulk_index").to("elasticsearch://local?operation=BULK_INDEX&indexName=twitter&indexType=tweet") @AT@ 9966 @LENGTH@ 108
------INS MethodInvocation@@MethodName:from:["direct:bulk_index"] @TO@ MethodInvocation@@from("direct:bulk_index").to("elasticsearch://local?operation=BULK_INDEX&indexName=twitter&indexType=tweet") @AT@ 9966 @LENGTH@ 25
---------INS StringLiteral@@"direct:bulk_index" @TO@ MethodInvocation@@MethodName:from:["direct:bulk_index"] @AT@ 9971 @LENGTH@ 19
------INS SimpleName@@MethodName:to:["elasticsearch://local?operation=BULK_INDEX&indexName=twitter&indexType=tweet"] @TO@ MethodInvocation@@from("direct:bulk_index").to("elasticsearch://local?operation=BULK_INDEX&indexName=twitter&indexType=tweet") @AT@ 9992 @LENGTH@ 82
---------INS StringLiteral@@"elasticsearch://local?operation=BULK_INDEX&indexName=twitter&indexType=tweet" @TO@ SimpleName@@MethodName:to:["elasticsearch://local?operation=BULK_INDEX&indexName=twitter&indexType=tweet"] @AT@ 9995 @LENGTH@ 78


DEL FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(BindyBigDecimalGroupingUnmarshallTest.class)] @AT@ 783 @LENGTH@ 103
---DEL Modifier@@private @AT@ 783 @LENGTH@ 7
---DEL Modifier@@static @AT@ 791 @LENGTH@ 6
---DEL Modifier@@final @AT@ 798 @LENGTH@ 5
---DEL SimpleType@@Logger @AT@ 804 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(BindyBigDecimalGroupingUnmarshallTest.class) @AT@ 811 @LENGTH@ 74
------DEL SimpleName@@LOG @AT@ 811 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(BindyBigDecimalGroupingUnmarshallTest.class) @AT@ 817 @LENGTH@ 68
---------DEL SimpleName@@Name:LoggerFactory @AT@ 817 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[BindyBigDecimalGroupingUnmarshallTest.class] @AT@ 831 @LENGTH@ 54
------------DEL TypeLiteral@@BindyBigDecimalGroupingUnmarshallTest.class @AT@ 841 @LENGTH@ 43


INS MethodDeclaration@@public, static, byte[], MethodName:toByteArray, Message message, HL7Exception,  @TO@ TypeDeclaration@@[@Converter, public, final]HL7Converter,  @AT@ 1521 @LENGTH@ 121
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, byte[], MethodName:toByteArray, Message message, HL7Exception,  @AT@ 1521 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, byte[], MethodName:toByteArray, Message message, HL7Exception,  @AT@ 1528 @LENGTH@ 6
---INS ArrayType@@byte[] @TO@ MethodDeclaration@@public, static, byte[], MethodName:toByteArray, Message message, HL7Exception,  @AT@ 1535 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1535 @LENGTH@ 4
---INS SimpleName@@MethodName:toByteArray @TO@ MethodDeclaration@@public, static, byte[], MethodName:toByteArray, Message message, HL7Exception,  @AT@ 1542 @LENGTH@ 11
---INS SingleVariableDeclaration@@Message message @TO@ MethodDeclaration@@public, static, byte[], MethodName:toByteArray, Message message, HL7Exception,  @AT@ 1554 @LENGTH@ 15
------INS SimpleType@@Message @TO@ SingleVariableDeclaration@@Message message @AT@ 1554 @LENGTH@ 7
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@Message message @AT@ 1562 @LENGTH@ 7
---INS SimpleType@@HL7Exception @TO@ MethodDeclaration@@public, static, byte[], MethodName:toByteArray, Message message, HL7Exception,  @AT@ 1578 @LENGTH@ 12
---INS ReturnStatement@@MethodInvocation:message.encode().getBytes() @TO@ MethodDeclaration@@public, static, byte[], MethodName:toByteArray, Message message, HL7Exception,  @AT@ 1601 @LENGTH@ 35
------INS MethodInvocation@@message.encode().getBytes() @TO@ ReturnStatement@@MethodInvocation:message.encode().getBytes() @AT@ 1608 @LENGTH@ 27
---------INS MethodInvocation@@MethodName:encode:[] @TO@ MethodInvocation@@message.encode().getBytes() @AT@ 1608 @LENGTH@ 16
---------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.encode().getBytes() @AT@ 1608 @LENGTH@ 7
---------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@message.encode().getBytes() @AT@ 1625 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertEquals(body[0][0][0],resp.getOut().getHeader(HbaseAttribute.HBASE_VALUE.asHeader())) @TO@ MethodInvocation:assertEquals(body[0][0][1],resp.getOut().getHeader(HbaseAttribute.HBASE_VALUE.asHeader())) @AT@ 4679 @LENGTH@ 92
---UPD MethodInvocation@@assertEquals(body[0][0][0],resp.getOut().getHeader(HbaseAttribute.HBASE_VALUE.asHeader())) @TO@ assertEquals(body[0][0][1],resp.getOut().getHeader(HbaseAttribute.HBASE_VALUE.asHeader())) @AT@ 4679 @LENGTH@ 91
------UPD SimpleName@@MethodName:assertEquals:[body[0][0][0], resp.getOut().getHeader(HbaseAttribute.HBASE_VALUE.asHeader())] @TO@ MethodName:assertEquals:[body[0][0][1], resp.getOut().getHeader(HbaseAttribute.HBASE_VALUE.asHeader())] @AT@ 4679 @LENGTH@ 91
---------UPD ArrayAccess@@body[0][0][0] @TO@ body[0][0][1] @AT@ 4692 @LENGTH@ 13
------------UPD NumberLiteral@@0 @TO@ 1 @AT@ 4703 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:currentCtx=ChainedTransformationTools.nextInChain(currentCtx,resolver) @TO@ Assignment:currentCtx=ChainedTransformationTools.nextInChainOperation(currentCtx,resolver) @AT@ 4733 @LENGTH@ 74
---UPD Assignment@@currentCtx=ChainedTransformationTools.nextInChain(currentCtx,resolver) @TO@ currentCtx=ChainedTransformationTools.nextInChainOperation(currentCtx,resolver) @AT@ 4733 @LENGTH@ 73
------UPD MethodInvocation@@ChainedTransformationTools.nextInChain(currentCtx,resolver) @TO@ ChainedTransformationTools.nextInChainOperation(currentCtx,resolver) @AT@ 4746 @LENGTH@ 60
---------UPD SimpleName@@MethodName:nextInChain:[currentCtx, resolver] @TO@ MethodName:nextInChainOperation:[currentCtx, resolver] @AT@ 4773 @LENGTH@ 33


UPD ReturnStatement@@InfixExpression:"TxnIds=[" + txnIds.get(0) + "src/gen/thrift"+ txnIds.get(txnIds.size() - 1)+ "] on endPoint= "+ endPt @TO@ InfixExpression:"TxnIds=[" + txnIds.get(0) + "..."+ txnIds.get(txnIds.size() - 1)+ "] on endPoint = "+ endPt @AT@ 20293 @LENGTH@ 125
---UPD InfixExpression@@"TxnIds=[" + txnIds.get(0) + "src/gen/thrift"+ txnIds.get(txnIds.size() - 1)+ "] on endPoint= "+ endPt @TO@ "TxnIds=[" + txnIds.get(0) + "..."+ txnIds.get(txnIds.size() - 1)+ "] on endPoint = "+ endPt @AT@ 20300 @LENGTH@ 117
------UPD StringLiteral@@"src/gen/thrift" @TO@ "..." @AT@ 20329 @LENGTH@ 16
------UPD StringLiteral@@"] on endPoint= " @TO@ "] on endPoint = " @AT@ 20392 @LENGTH@ 17


UPD VariableDeclarationStatement@@Option[] options=combine(getDefaultCamelKarafOptions(),loadCamelFeatures("camel-disruptor")); @TO@ Option[] options=combine(getDefaultCamelKarafOptions(),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.6",",sun.misc"),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.7",",sun.misc"),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.8",",sun.misc"),loadCamelFeatures("camel-disruptor")); @AT@ 2354 @LENGTH@ 206
---UPD VariableDeclarationFragment@@options=combine(getDefaultCamelKarafOptions(),loadCamelFeatures("camel-disruptor")) @TO@ options=combine(getDefaultCamelKarafOptions(),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.6",",sun.misc"),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.7",",sun.misc"),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.8",",sun.misc"),loadCamelFeatures("camel-disruptor")) @AT@ 2363 @LENGTH@ 196
------UPD MethodInvocation@@combine(getDefaultCamelKarafOptions(),loadCamelFeatures("camel-disruptor")) @TO@ combine(getDefaultCamelKarafOptions(),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.6",",sun.misc"),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.7",",sun.misc"),new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.8",",sun.misc"),loadCamelFeatures("camel-disruptor")) @AT@ 2373 @LENGTH@ 186
---------UPD SimpleName@@MethodName:combine:[getDefaultCamelKarafOptions(), loadCamelFeatures("camel-disruptor")] @TO@ MethodName:combine:[getDefaultCamelKarafOptions(), new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.6",",sun.misc"), new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.7",",sun.misc"), new KarafDistributionConfigurationFileExtendOption("etc/jre.properties","jre-1.8",",sun.misc"), loadCamelFeatures("camel-disruptor")] @AT@ 2373 @LENGTH@ 186
------------INS ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.6", ",sun.misc"] @TO@ SimpleName@@MethodName:combine:[getDefaultCamelKarafOptions(), loadCamelFeatures("camel-disruptor")] @AT@ 2582 @LENGTH@ 96
---------------INS New@@new @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.6", ",sun.misc"] @AT@ 2582 @LENGTH@ 3
---------------INS SimpleType@@KarafDistributionConfigurationFileExtendOption @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.6", ",sun.misc"] @AT@ 2586 @LENGTH@ 46
---------------INS StringLiteral@@"etc/jre.properties" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.6", ",sun.misc"] @AT@ 2633 @LENGTH@ 20
---------------INS StringLiteral@@"jre-1.6" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.6", ",sun.misc"] @AT@ 2655 @LENGTH@ 9
---------------INS StringLiteral@@",sun.misc" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.6", ",sun.misc"] @AT@ 2666 @LENGTH@ 11
------------INS ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.7", ",sun.misc"] @TO@ SimpleName@@MethodName:combine:[getDefaultCamelKarafOptions(), loadCamelFeatures("camel-disruptor")] @AT@ 2692 @LENGTH@ 96
---------------INS New@@new @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.7", ",sun.misc"] @AT@ 2692 @LENGTH@ 3
---------------INS SimpleType@@KarafDistributionConfigurationFileExtendOption @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.7", ",sun.misc"] @AT@ 2696 @LENGTH@ 46
---------------INS StringLiteral@@"etc/jre.properties" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.7", ",sun.misc"] @AT@ 2743 @LENGTH@ 20
---------------INS StringLiteral@@"jre-1.7" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.7", ",sun.misc"] @AT@ 2765 @LENGTH@ 9
---------------INS StringLiteral@@",sun.misc" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.7", ",sun.misc"] @AT@ 2776 @LENGTH@ 11
------------INS ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.8", ",sun.misc"] @TO@ SimpleName@@MethodName:combine:[getDefaultCamelKarafOptions(), loadCamelFeatures("camel-disruptor")] @AT@ 2802 @LENGTH@ 96
---------------INS New@@new @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.8", ",sun.misc"] @AT@ 2802 @LENGTH@ 3
---------------INS SimpleType@@KarafDistributionConfigurationFileExtendOption @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.8", ",sun.misc"] @AT@ 2806 @LENGTH@ 46
---------------INS StringLiteral@@"etc/jre.properties" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.8", ",sun.misc"] @AT@ 2853 @LENGTH@ 20
---------------INS StringLiteral@@"jre-1.8" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.8", ",sun.misc"] @AT@ 2875 @LENGTH@ 9
---------------INS StringLiteral@@",sun.misc" @TO@ ClassInstanceCreation@@KarafDistributionConfigurationFileExtendOption["etc/jre.properties", "jre-1.8", ",sun.misc"] @AT@ 2886 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"")) @TO@ MethodDeclaration@@public, void, MethodName:testComponentConfiguration, Exception,  @AT@ 1943 @LENGTH@ 83
---INS MethodInvocation@@assertTrue(json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"")) @AT@ 1943 @LENGTH@ 82
------INS SimpleName@@MethodName:assertTrue:[json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"")) @AT@ 1943 @LENGTH@ 82
---------INS MethodInvocation@@json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"")] @AT@ 1954 @LENGTH@ 70
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"") @AT@ 1954 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["\"port\": { \"kind\": \"path\", \"type\": \"integer\""] @TO@ MethodInvocation@@json.contains("\"port\": { \"kind\": \"path\", \"type\": \"integer\"") @AT@ 1959 @LENGTH@ 65
---------------INS StringLiteral@@"\"port\": { \"kind\": \"path\", \"type\": \"integer\"" @TO@ SimpleName@@MethodName:contains:["\"port\": { \"kind\": \"path\", \"type\": \"integer\""] @AT@ 1968 @LENGTH@ 55


UPD VariableDeclarationStatement@@DefaultHttpClient client=HttpClientUtils.relaxedCookieHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 5479 @LENGTH@ 69
---UPD SimpleType@@DefaultHttpClient @TO@ HttpClient @AT@ 5479 @LENGTH@ 17
---UPD VariableDeclarationFragment@@client=HttpClientUtils.relaxedCookieHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 5497 @LENGTH@ 50
------UPD MethodInvocation@@HttpClientUtils.relaxedCookieHttpClient() @TO@ HttpClients.createDefault() @AT@ 5506 @LENGTH@ 41
---------UPD SimpleName@@Name:HttpClientUtils @TO@ Name:HttpClients @AT@ 5506 @LENGTH@ 15
---------UPD SimpleName@@MethodName:relaxedCookieHttpClient:[] @TO@ MethodName:createDefault:[] @AT@ 5522 @LENGTH@ 25


UPD TypeDeclaration@@[public]FtpsConfiguration, FtpConfiguration @TO@ [@UriParams, public]FtpsConfiguration, FtpConfiguration @AT@ 947 @LENGTH@ 2398
---INS MarkerAnnotation@@@UriParams @TO@ TypeDeclaration@@[public]FtpsConfiguration, FtpConfiguration @AT@ 1025 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:reloadCachedMappings, List<String> names,  @TO@ TypeDeclaration@@[public]TestDNSToSwitchMapping, [DNSToSwitchMapping] @AT@ 639 @LENGTH@ 172
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:reloadCachedMappings, List<String> names,  @AT@ 639 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:reloadCachedMappings, List<String> names,  @AT@ 646 @LENGTH@ 4
---INS SimpleName@@MethodName:reloadCachedMappings @TO@ MethodDeclaration@@public, void, MethodName:reloadCachedMappings, List<String> names,  @AT@ 651 @LENGTH@ 20
---INS SingleVariableDeclaration@@List<String> names @TO@ MethodDeclaration@@public, void, MethodName:reloadCachedMappings, List<String> names,  @AT@ 672 @LENGTH@ 18
------INS ParameterizedType@@List<String> @TO@ SingleVariableDeclaration@@List<String> names @AT@ 672 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 672 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 677 @LENGTH@ 6
------INS SimpleName@@names @TO@ SingleVariableDeclaration@@List<String> names @AT@ 685 @LENGTH@ 5


UPD IfStatement@@if ("_id".equals(key)) {  return super.asDBObject(key,mapper.convertId(value));} @TO@ if (ID_KEY.equals(key)) {  return mapper.getMappedObject(super.asDBObject(key,value),null);} @AT@ 3138 @LENGTH@ 86
---UPD MethodInvocation@@"_id".equals(key) @TO@ ID_KEY.equals(key) @AT@ 3142 @LENGTH@ 17
------DEL StringLiteral@@"_id" @AT@ 3142 @LENGTH@ 5
------INS SimpleName@@Name:ID_KEY @TO@ MethodInvocation@@"_id".equals(key) @AT@ 3181 @LENGTH@ 6
---UPD Block@@ThenBody:{  return super.asDBObject(key,mapper.convertId(value));} @TO@ ThenBody:{  return mapper.getMappedObject(super.asDBObject(key,value),null);} @AT@ 3161 @LENGTH@ 63
------UPD ReturnStatement@@SuperMethodInvocation:super.asDBObject(key,mapper.convertId(value)) @TO@ MethodInvocation:mapper.getMappedObject(super.asDBObject(key,value),null) @AT@ 3166 @LENGTH@ 54
---------DEL SuperMethodInvocation@@super.asDBObject(key,mapper.convertId(value)) @AT@ 3173 @LENGTH@ 46
------------DEL MethodInvocation@@mapper.convertId(value) @AT@ 3195 @LENGTH@ 23
---------------DEL SimpleName@@Name:mapper @AT@ 3195 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:convertId:[value] @AT@ 3202 @LENGTH@ 16
------------------DEL SimpleName@@value @AT@ 3212 @LENGTH@ 5
---------INS MethodInvocation@@mapper.getMappedObject(super.asDBObject(key,value),null) @TO@ ReturnStatement@@SuperMethodInvocation:super.asDBObject(key,mapper.convertId(value)) @AT@ 3213 @LENGTH@ 58
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(super.asDBObject(key,value),null) @AT@ 3213 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[super.asDBObject(key,value), null] @TO@ MethodInvocation@@mapper.getMappedObject(super.asDBObject(key,value),null) @AT@ 3220 @LENGTH@ 51
---------------INS SuperMethodInvocation@@super.asDBObject(key,value) @TO@ SimpleName@@MethodName:getMappedObject:[super.asDBObject(key,value), null] @AT@ 3236 @LENGTH@ 28
------------------MOV SimpleName@@MethodName:asDBObject:[key, mapper.convertId(value)] @TO@ SuperMethodInvocation@@super.asDBObject(key,value) @AT@ 3179 @LENGTH@ 10
------------------MOV SimpleName@@key @TO@ SuperMethodInvocation@@super.asDBObject(key,value) @AT@ 3190 @LENGTH@ 3
------------------INS SimpleName@@value @TO@ SuperMethodInvocation@@super.asDBObject(key,value) @AT@ 3258 @LENGTH@ 5
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getMappedObject:[super.asDBObject(key,value), null] @AT@ 3266 @LENGTH@ 4


UPD TypeDeclaration@@SpringDataAnnotationUtils,  @TO@ [abstract]SpringDataAnnotationUtils,  @AT@ 1226 @LENGTH@ 3301
---INS Modifier@@abstract @TO@ TypeDeclaration@@SpringDataAnnotationUtils,  @AT@ 1220 @LENGTH@ 8


UPD ReturnStatement@@ClassInstanceCreation:new BeanstalkEndpoint(uri,this,connectionSettingsFactory.parseUri(remaining)) @TO@ ClassInstanceCreation:new BeanstalkEndpoint(uri,this,connectionSettingsFactory.parseUri(remaining),remaining) @AT@ 2576 @LENGTH@ 87
---UPD ClassInstanceCreation@@BeanstalkEndpoint[uri, this, connectionSettingsFactory.parseUri(remaining)] @TO@ BeanstalkEndpoint[uri, this, connectionSettingsFactory.parseUri(remaining), remaining] @AT@ 2583 @LENGTH@ 79
------INS SimpleName@@remaining @TO@ ClassInstanceCreation@@BeanstalkEndpoint[uri, this, connectionSettingsFactory.parseUri(remaining)] @AT@ 2663 @LENGTH@ 9


UPD IfStatement@@if (HiveConf.getBoolVar(conf,ConfVars.HIVE_AM_SPLIT_GENERATION) && !mapWork.isUseOneNullRowInputFormat()) {  if (groupSplitsInInputInitializer) {    InputInitializerDescriptor descriptor=InputInitializerDescriptor.create(HiveSplitGenerator.class.getName());    dataSource=MRInputLegacy.createConfigBuilder(conf,inputFormatClass).groupSplits(true).setCustomInitializerDescriptor(descriptor).build();  } else {    dataSource=MRInputLegacy.createConfigBuilder(conf,inputFormatClass).groupSplits(false).build();  }} else {  dataSource=MRInputHelpers.configureMRInputWithLegacySplitGeneration(conf,new Path(tezDir,"split_" + mapWork.getName().replaceAll(" ","_")),true);  numTasks=dataSource.getNumberOfShards();} @TO@ if (HiveConf.getBoolVar(conf,ConfVars.HIVE_AM_SPLIT_GENERATION) && !mapWork.isUseOneNullRowInputFormat()) {  Utilities.setMapWork(conf,mapWork,mrScratchDir,false);  if (groupSplitsInInputInitializer) {    InputInitializerDescriptor descriptor=InputInitializerDescriptor.create(HiveSplitGenerator.class.getName());    dataSource=MRInputLegacy.createConfigBuilder(conf,inputFormatClass).groupSplits(true).setCustomInitializerDescriptor(descriptor).build();  } else {    dataSource=MRInputLegacy.createConfigBuilder(conf,inputFormatClass).groupSplits(false).build();  }} else {  dataSource=MRInputHelpers.configureMRInputWithLegacySplitGeneration(conf,new Path(tezDir,"split_" + mapWork.getName().replaceAll(" ","_")),true);  numTasks=dataSource.getNumberOfShards();  Utilities.setMapWork(conf,mapWork,mrScratchDir,false);} @AT@ 18339 @LENGTH@ 1149
---UPD Block@@ThenBody:{  if (groupSplitsInInputInitializer) {    InputInitializerDescriptor descriptor=InputInitializerDescriptor.create(HiveSplitGenerator.class.getName());    dataSource=MRInputLegacy.createConfigBuilder(conf,inputFormatClass).groupSplits(true).setCustomInitializerDescriptor(descriptor).build();  } else {    dataSource=MRInputLegacy.createConfigBuilder(conf,inputFormatClass).groupSplits(false).build();  }} @TO@ ThenBody:{  Utilities.setMapWork(conf,mapWork,mrScratchDir,false);  if (groupSplitsInInputInitializer) {    InputInitializerDescriptor descriptor=InputInitializerDescriptor.create(HiveSplitGenerator.class.getName());    dataSource=MRInputLegacy.createConfigBuilder(conf,inputFormatClass).groupSplits(true).setCustomInitializerDescriptor(descriptor).build();  } else {    dataSource=MRInputLegacy.createConfigBuilder(conf,inputFormatClass).groupSplits(false).build();  }} @AT@ 18454 @LENGTH@ 759
------MOV ExpressionStatement@@MethodInvocation:Utilities.setMapWork(conf,mapWork,mrScratchDir,false) @TO@ Block@@ThenBody:{  if (groupSplitsInInputInitializer) {    InputInitializerDescriptor descriptor=InputInitializerDescriptor.create(HiveSplitGenerator.class.getName());    dataSource=MRInputLegacy.createConfigBuilder(conf,inputFormatClass).groupSplits(true).setCustomInitializerDescriptor(descriptor).build();  } else {    dataSource=MRInputLegacy.createConfigBuilder(conf,inputFormatClass).groupSplits(false).build();  }} @AT@ 18272 @LENGTH@ 57
---UPD Block@@ElseBody:{  dataSource=MRInputHelpers.configureMRInputWithLegacySplitGeneration(conf,new Path(tezDir,"split_" + mapWork.getName().replaceAll(" ","_")),true);  numTasks=dataSource.getNumberOfShards();} @TO@ ElseBody:{  dataSource=MRInputHelpers.configureMRInputWithLegacySplitGeneration(conf,new Path(tezDir,"split_" + mapWork.getName().replaceAll(" ","_")),true);  numTasks=dataSource.getNumberOfShards();  Utilities.setMapWork(conf,mapWork,mrScratchDir,false);} @AT@ 19219 @LENGTH@ 269
------INS ExpressionStatement@@MethodInvocation:Utilities.setMapWork(conf,mapWork,mrScratchDir,false) @TO@ Block@@ElseBody:{  dataSource=MRInputHelpers.configureMRInputWithLegacySplitGeneration(conf,new Path(tezDir,"split_" + mapWork.getName().replaceAll(" ","_")),true);  numTasks=dataSource.getNumberOfShards();} @AT@ 19553 @LENGTH@ 57
---------INS MethodInvocation@@Utilities.setMapWork(conf,mapWork,mrScratchDir,false) @TO@ ExpressionStatement@@MethodInvocation:Utilities.setMapWork(conf,mapWork,mrScratchDir,false) @AT@ 19553 @LENGTH@ 56
------------INS SimpleName@@Name:Utilities @TO@ MethodInvocation@@Utilities.setMapWork(conf,mapWork,mrScratchDir,false) @AT@ 19553 @LENGTH@ 9
------------INS SimpleName@@MethodName:setMapWork:[conf, mapWork, mrScratchDir, false] @TO@ MethodInvocation@@Utilities.setMapWork(conf,mapWork,mrScratchDir,false) @AT@ 19563 @LENGTH@ 46
---------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:setMapWork:[conf, mapWork, mrScratchDir, false] @AT@ 19574 @LENGTH@ 4
---------------INS SimpleName@@mapWork @TO@ SimpleName@@MethodName:setMapWork:[conf, mapWork, mrScratchDir, false] @AT@ 19580 @LENGTH@ 7
---------------INS SimpleName@@mrScratchDir @TO@ SimpleName@@MethodName:setMapWork:[conf, mapWork, mrScratchDir, false] @AT@ 19589 @LENGTH@ 12
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setMapWork:[conf, mapWork, mrScratchDir, false] @AT@ 19603 @LENGTH@ 5


UPD TypeDeclaration@@[public]InfinispanEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="infinispan",consumerClass=InfinispanConsumer.class), public]InfinispanEndpoint, DefaultEndpoint @AT@ 1002 @LENGTH@ 729
---INS NormalAnnotation@@@UriEndpoint(scheme="infinispan",consumerClass=InfinispanConsumer.class) @TO@ TypeDeclaration@@[public]InfinispanEndpoint, DefaultEndpoint @AT@ 1081 @LENGTH@ 77


INS MethodDeclaration@@public, void, MethodName:testSecretErased,  @TO@ TypeDeclaration@@[public]DefaultAuthorizationRequestFactoryTests,  @AT@ 4591 @LENGTH@ 469
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSecretErased,  @AT@ 4591 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSecretErased,  @AT@ 4598 @LENGTH@ 4
---INS SimpleName@@MethodName:testSecretErased @TO@ MethodDeclaration@@public, void, MethodName:testSecretErased,  @AT@ 4603 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:factory.setCheckUserScopes(true) @TO@ MethodDeclaration@@public, void, MethodName:testSecretErased,  @AT@ 4626 @LENGTH@ 33
------INS MethodInvocation@@factory.setCheckUserScopes(true) @TO@ ExpressionStatement@@MethodInvocation:factory.setCheckUserScopes(true) @AT@ 4626 @LENGTH@ 32
---------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.setCheckUserScopes(true) @AT@ 4626 @LENGTH@ 7
---------INS SimpleName@@MethodName:setCheckUserScopes:[true] @TO@ MethodInvocation@@factory.setCheckUserScopes(true) @AT@ 4634 @LENGTH@ 24
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setCheckUserScopes:[true] @AT@ 4653 @LENGTH@ 4
---INS VariableDeclarationStatement@@Map<String,String> params=new HashMap<String,String>(Collections.singletonMap("client_id","foo")); @TO@ MethodDeclaration@@public, void, MethodName:testSecretErased,  @AT@ 4662 @LENGTH@ 103
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> params=new HashMap<String,String>(Collections.singletonMap("client_id","foo")); @AT@ 4662 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 4662 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 4666 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 4674 @LENGTH@ 6
------INS VariableDeclarationFragment@@params=new HashMap<String,String>(Collections.singletonMap("client_id","foo")) @TO@ VariableDeclarationStatement@@Map<String,String> params=new HashMap<String,String>(Collections.singletonMap("client_id","foo")); @AT@ 4682 @LENGTH@ 82
---------INS SimpleName@@params @TO@ VariableDeclarationFragment@@params=new HashMap<String,String>(Collections.singletonMap("client_id","foo")) @AT@ 4682 @LENGTH@ 6
---------INS ClassInstanceCreation@@HashMap<String,String>[Collections.singletonMap("client_id","foo")] @TO@ VariableDeclarationFragment@@params=new HashMap<String,String>(Collections.singletonMap("client_id","foo")) @AT@ 4691 @LENGTH@ 73
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[Collections.singletonMap("client_id","foo")] @AT@ 4691 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[Collections.singletonMap("client_id","foo")] @AT@ 4695 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 4695 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 4703 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 4711 @LENGTH@ 6
------------INS MethodInvocation@@Collections.singletonMap("client_id","foo") @TO@ ClassInstanceCreation@@HashMap<String,String>[Collections.singletonMap("client_id","foo")] @AT@ 4719 @LENGTH@ 44
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap("client_id","foo") @AT@ 4719 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonMap:["client_id", "foo"] @TO@ MethodInvocation@@Collections.singletonMap("client_id","foo") @AT@ 4731 @LENGTH@ 32
------------------INS StringLiteral@@"client_id" @TO@ SimpleName@@MethodName:singletonMap:["client_id", "foo"] @AT@ 4744 @LENGTH@ 11
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:singletonMap:["client_id", "foo"] @AT@ 4757 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:params.put("client_secret","shhh") @TO@ MethodDeclaration@@public, void, MethodName:testSecretErased,  @AT@ 4768 @LENGTH@ 36
------INS MethodInvocation@@params.put("client_secret","shhh") @TO@ ExpressionStatement@@MethodInvocation:params.put("client_secret","shhh") @AT@ 4768 @LENGTH@ 35
---------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.put("client_secret","shhh") @AT@ 4768 @LENGTH@ 6
---------INS SimpleName@@MethodName:put:["client_secret", "shhh"] @TO@ MethodInvocation@@params.put("client_secret","shhh") @AT@ 4775 @LENGTH@ 28
------------INS StringLiteral@@"client_secret" @TO@ SimpleName@@MethodName:put:["client_secret", "shhh"] @AT@ 4779 @LENGTH@ 15
------------INS StringLiteral@@"shhh" @TO@ SimpleName@@MethodName:put:["client_secret", "shhh"] @AT@ 4796 @LENGTH@ 6
---INS VariableDeclarationStatement@@AuthorizationRequest auth=factory.createAuthorizationRequest(params); @TO@ MethodDeclaration@@public, void, MethodName:testSecretErased,  @AT@ 4809 @LENGTH@ 71
------INS SimpleType@@AuthorizationRequest @TO@ VariableDeclarationStatement@@AuthorizationRequest auth=factory.createAuthorizationRequest(params); @AT@ 4809 @LENGTH@ 20
------INS VariableDeclarationFragment@@auth=factory.createAuthorizationRequest(params) @TO@ VariableDeclarationStatement@@AuthorizationRequest auth=factory.createAuthorizationRequest(params); @AT@ 4830 @LENGTH@ 49
---------INS SimpleName@@auth @TO@ VariableDeclarationFragment@@auth=factory.createAuthorizationRequest(params) @AT@ 4830 @LENGTH@ 4
---------INS MethodInvocation@@factory.createAuthorizationRequest(params) @TO@ VariableDeclarationFragment@@auth=factory.createAuthorizationRequest(params) @AT@ 4837 @LENGTH@ 42
------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.createAuthorizationRequest(params) @AT@ 4837 @LENGTH@ 7
------------INS SimpleName@@MethodName:createAuthorizationRequest:[params] @TO@ MethodInvocation@@factory.createAuthorizationRequest(params) @AT@ 4845 @LENGTH@ 34
---------------INS SimpleName@@params @TO@ SimpleName@@MethodName:createAuthorizationRequest:[params] @AT@ 4872 @LENGTH@ 6
---INS VariableDeclarationStatement@@OAuth2Request request=factory.createTokenRequest(auth,"client_credentials").createOAuth2Request(client); @TO@ MethodDeclaration@@public, void, MethodName:testSecretErased,  @AT@ 4883 @LENGTH@ 107
------INS SimpleType@@OAuth2Request @TO@ VariableDeclarationStatement@@OAuth2Request request=factory.createTokenRequest(auth,"client_credentials").createOAuth2Request(client); @AT@ 4883 @LENGTH@ 13
------INS VariableDeclarationFragment@@request=factory.createTokenRequest(auth,"client_credentials").createOAuth2Request(client) @TO@ VariableDeclarationStatement@@OAuth2Request request=factory.createTokenRequest(auth,"client_credentials").createOAuth2Request(client); @AT@ 4897 @LENGTH@ 92
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=factory.createTokenRequest(auth,"client_credentials").createOAuth2Request(client) @AT@ 4897 @LENGTH@ 7
---------INS MethodInvocation@@factory.createTokenRequest(auth,"client_credentials").createOAuth2Request(client) @TO@ VariableDeclarationFragment@@request=factory.createTokenRequest(auth,"client_credentials").createOAuth2Request(client) @AT@ 4907 @LENGTH@ 82
------------INS MethodInvocation@@MethodName:createTokenRequest:[auth, "client_credentials"] @TO@ MethodInvocation@@factory.createTokenRequest(auth,"client_credentials").createOAuth2Request(client) @AT@ 4907 @LENGTH@ 54
---------------INS SimpleName@@auth @TO@ MethodInvocation@@MethodName:createTokenRequest:[auth, "client_credentials"] @AT@ 4934 @LENGTH@ 4
---------------INS StringLiteral@@"client_credentials" @TO@ MethodInvocation@@MethodName:createTokenRequest:[auth, "client_credentials"] @AT@ 4940 @LENGTH@ 20
------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.createTokenRequest(auth,"client_credentials").createOAuth2Request(client) @AT@ 4907 @LENGTH@ 7
------------INS SimpleName@@MethodName:createOAuth2Request:[client] @TO@ MethodInvocation@@factory.createTokenRequest(auth,"client_credentials").createOAuth2Request(client) @AT@ 4962 @LENGTH@ 27
---------------INS SimpleName@@client @TO@ SimpleName@@MethodName:createOAuth2Request:[client] @AT@ 4982 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertNull(request.getRequestParameters().get("client_secret")) @TO@ MethodDeclaration@@public, void, MethodName:testSecretErased,  @AT@ 4993 @LENGTH@ 64
------INS MethodInvocation@@assertNull(request.getRequestParameters().get("client_secret")) @TO@ ExpressionStatement@@MethodInvocation:assertNull(request.getRequestParameters().get("client_secret")) @AT@ 4993 @LENGTH@ 63
---------INS SimpleName@@MethodName:assertNull:[request.getRequestParameters().get("client_secret")] @TO@ MethodInvocation@@assertNull(request.getRequestParameters().get("client_secret")) @AT@ 4993 @LENGTH@ 63
------------INS MethodInvocation@@request.getRequestParameters().get("client_secret") @TO@ SimpleName@@MethodName:assertNull:[request.getRequestParameters().get("client_secret")] @AT@ 5004 @LENGTH@ 51
---------------INS MethodInvocation@@MethodName:getRequestParameters:[] @TO@ MethodInvocation@@request.getRequestParameters().get("client_secret") @AT@ 5004 @LENGTH@ 30
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getRequestParameters().get("client_secret") @AT@ 5004 @LENGTH@ 7
---------------INS SimpleName@@MethodName:get:["client_secret"] @TO@ MethodInvocation@@request.getRequestParameters().get("client_secret") @AT@ 5035 @LENGTH@ 20
------------------INS StringLiteral@@"client_secret" @TO@ SimpleName@@MethodName:get:["client_secret"] @AT@ 5039 @LENGTH@ 15


UPD FieldDeclaration@@public, static, final, String, [FREEMARKER_DATA_MODLE="CamelFreemarkerDataModle"] @TO@ public, static, final, String, [FREEMARKER_DATA_MODEL="CamelFreemarkerDataModel"] @AT@ 1103 @LENGTH@ 78
---UPD VariableDeclarationFragment@@FREEMARKER_DATA_MODLE="CamelFreemarkerDataModle" @TO@ FREEMARKER_DATA_MODEL="CamelFreemarkerDataModel" @AT@ 1130 @LENGTH@ 50
------UPD SimpleName@@FREEMARKER_DATA_MODLE @TO@ FREEMARKER_DATA_MODEL @AT@ 1130 @LENGTH@ 21
------UPD StringLiteral@@"CamelFreemarkerDataModle" @TO@ "CamelFreemarkerDataModel" @AT@ 1154 @LENGTH@ 26


MOV IfStatement@@if (qb.getParseInfo().getAlias() != null) {  RowResolver rr=this.relToHiveRR.get(srcRel);  RowResolver newRR=new RowResolver();  String alias=qb.getParseInfo().getAlias();  for (  ColumnInfo colInfo : rr.getColumnInfos()) {    String name=colInfo.getInternalName();    String[] tmp=rr.reverseLookup(name);    if ("".equals(tmp[0]) || tmp[1] == null) {      tmp[1]=colInfo.getInternalName();    }    ColumnInfo newCi=new ColumnInfo(colInfo);    newCi.setTabAlias(alias);    newRR.put(alias,tmp[1],newCi);  }  relToHiveRR.put(srcRel,newRR);  relToHiveColNameOptiqPosMap.put(srcRel,buildHiveToOptiqColumnMap(newRR,srcRel));} @TO@ MethodDeclaration@@private, RelNode, MethodName:genLogicalPlan, QB qb, SemanticException,  @AT@ 558439 @LENGTH@ 817


UPD IfStatement@@if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  if (consumer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 7894 @LENGTH@ 371
---UPD Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  if (consumer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 7918 @LENGTH@ 347
------INS IfStatement@@if (consumer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @TO@ Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @AT@ 8123 @LENGTH@ 276
---------INS InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @TO@ IfStatement@@if (consumer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 8127 @LENGTH@ 61
------------INS MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @TO@ InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @AT@ 8127 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @AT@ 8127 @LENGTH@ 27
---------------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @AT@ 8127 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getSslContextParameters:[] @TO@ MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @AT@ 8155 @LENGTH@ 25
------------INS Operator@@== @TO@ InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @AT@ 8180 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @AT@ 8184 @LENGTH@ 4
---------INS Block@@ThenBody:{  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @TO@ IfStatement@@if (consumer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 8190 @LENGTH@ 209
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 8123 @LENGTH@ 89
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 8123 @LENGTH@ 89


UPD ExpressionStatement@@MethodInvocation:assertEquals("Command",BeanstalkComponent.COMMAND_RELEASE,endpoint.getCommand()) @TO@ MethodInvocation:assertEquals("Command",BeanstalkComponent.COMMAND_RELEASE,endpoint.getCommand().name()) @AT@ 2564 @LENGTH@ 83
---UPD MethodInvocation@@assertEquals("Command",BeanstalkComponent.COMMAND_RELEASE,endpoint.getCommand()) @TO@ assertEquals("Command",BeanstalkComponent.COMMAND_RELEASE,endpoint.getCommand().name()) @AT@ 2564 @LENGTH@ 82
------UPD SimpleName@@MethodName:assertEquals:["Command", BeanstalkComponent.COMMAND_RELEASE, endpoint.getCommand()] @TO@ MethodName:assertEquals:["Command", BeanstalkComponent.COMMAND_RELEASE, endpoint.getCommand().name()] @AT@ 2564 @LENGTH@ 82
---------UPD MethodInvocation@@endpoint.getCommand() @TO@ endpoint.getCommand().name() @AT@ 2624 @LENGTH@ 21
------------INS MethodInvocation@@MethodName:getCommand:[] @TO@ MethodInvocation@@endpoint.getCommand() @AT@ 2621 @LENGTH@ 21
------------INS MethodInvocation@@MethodName:getCommand:[] @TO@ MethodInvocation@@endpoint.getCommand() @AT@ 2621 @LENGTH@ 21
------------UPD SimpleName@@MethodName:getCommand:[] @TO@ MethodName:name:[] @AT@ 2633 @LENGTH@ 12


UPD Block@@ElseBody:if (data != null) {  InputStream is=context.getTypeConverter().mandatoryConvertTo(InputStream.class,data);  IOHelper.copy(is,bos);} @TO@ ElseBody:if (data != null) {  InputStream is=camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class,data);  IOHelper.copy(is,bos);} @AT@ 5602 @LENGTH@ 221
---UPD IfStatement@@if (data != null) {  InputStream is=context.getTypeConverter().mandatoryConvertTo(InputStream.class,data);  IOHelper.copy(is,bos);} @TO@ if (data != null) {  InputStream is=camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class,data);  IOHelper.copy(is,bos);} @AT@ 5602 @LENGTH@ 221
------UPD Block@@ThenBody:{  InputStream is=context.getTypeConverter().mandatoryConvertTo(InputStream.class,data);  IOHelper.copy(is,bos);} @TO@ ThenBody:{  InputStream is=camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class,data);  IOHelper.copy(is,bos);} @AT@ 5620 @LENGTH@ 203
---------UPD VariableDeclarationStatement@@InputStream is=context.getTypeConverter().mandatoryConvertTo(InputStream.class,data); @TO@ InputStream is=camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class,data); @AT@ 5681 @LENGTH@ 88
------------UPD VariableDeclarationFragment@@is=context.getTypeConverter().mandatoryConvertTo(InputStream.class,data) @TO@ is=camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class,data) @AT@ 5693 @LENGTH@ 75
---------------UPD MethodInvocation@@context.getTypeConverter().mandatoryConvertTo(InputStream.class,data) @TO@ camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class,data) @AT@ 5698 @LENGTH@ 70
------------------UPD SimpleName@@Name:context @TO@ Name:camelContext @AT@ 5698 @LENGTH@ 7
---UPD IfStatement@@if (data != null) {  InputStream is=context.getTypeConverter().mandatoryConvertTo(InputStream.class,data);  IOHelper.copy(is,bos);} @TO@ if (data != null) {  InputStream is=camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class,data);  IOHelper.copy(is,bos);} @AT@ 5602 @LENGTH@ 221
------UPD Block@@ThenBody:{  InputStream is=context.getTypeConverter().mandatoryConvertTo(InputStream.class,data);  IOHelper.copy(is,bos);} @TO@ ThenBody:{  InputStream is=camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class,data);  IOHelper.copy(is,bos);} @AT@ 5620 @LENGTH@ 203
---------UPD VariableDeclarationStatement@@InputStream is=context.getTypeConverter().mandatoryConvertTo(InputStream.class,data); @TO@ InputStream is=camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class,data); @AT@ 5681 @LENGTH@ 88
------------UPD VariableDeclarationFragment@@is=context.getTypeConverter().mandatoryConvertTo(InputStream.class,data) @TO@ is=camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class,data) @AT@ 5693 @LENGTH@ 75
---------------UPD MethodInvocation@@context.getTypeConverter().mandatoryConvertTo(InputStream.class,data) @TO@ camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class,data) @AT@ 5698 @LENGTH@ 70
------------------UPD SimpleName@@Name:context @TO@ Name:camelContext @AT@ 5698 @LENGTH@ 7


UPD TypeDeclaration@@[public]GHttpEndpoint, ServletEndpoint[OutboundBindingSupport<GHttpEndpoint,HTTPRequest,HTTPResponse>] @TO@ [@UriEndpoint(scheme="ghttp"), public]GHttpEndpoint, ServletEndpoint[OutboundBindingSupport<GHttpEndpoint,HTTPRequest,HTTPResponse>] @AT@ 2199 @LENGTH@ 4210
---INS NormalAnnotation@@@UriEndpoint(scheme="ghttp") @TO@ TypeDeclaration@@[public]GHttpEndpoint, ServletEndpoint[OutboundBindingSupport<GHttpEndpoint,HTTPRequest,HTTPResponse>] @AT@ 2278 @LENGTH@ 30


UPD FieldDeclaration@@private, static, String, [TEST_SERVICE_URL="http://localhost:8080/MyFormula.svc"] @TO@ private, static, final, String, [TEST_SERVICE_URL="http://localhost:8080/MyFormula.svc"] @AT@ 4643 @LENGTH@ 79
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, String, [TEST_SERVICE_URL="http://localhost:8080/MyFormula.svc"] @AT@ 4658 @LENGTH@ 5


UPD VariableDeclarationStatement@@char upper=Character.toLowerCase(ch); @TO@ char upper=Character.toUpperCase(ch); @AT@ 1653 @LENGTH@ 39
---UPD VariableDeclarationFragment@@upper=Character.toLowerCase(ch) @TO@ upper=Character.toUpperCase(ch) @AT@ 1658 @LENGTH@ 33
------UPD MethodInvocation@@Character.toLowerCase(ch) @TO@ Character.toUpperCase(ch) @AT@ 1666 @LENGTH@ 25
---------UPD SimpleName@@MethodName:toLowerCase:[ch] @TO@ MethodName:toUpperCase:[ch] @AT@ 1676 @LENGTH@ 15


UPD TypeDeclaration@@[public]WeatherConfiguration,  @TO@ [@UriParams, public]WeatherConfiguration,  @AT@ 1274 @LENGTH@ 3751
---INS MarkerAnnotation@@@UriParams @TO@ TypeDeclaration@@[public]WeatherConfiguration,  @AT@ 1313 @LENGTH@ 10


UPD TryStatement@@try {  HexConverter.convertFromHex(new char[]{'1','F','A'});  throw new Exception("Not throwed IllegalArgumentException!");} catch (IllegalArgumentException e) {} @TO@ try {  HexConverter.convertFromHex(new char[]{'1','F','A'});  fail("Not throwed IllegalArgumentException!");} catch (IllegalArgumentException e) {} @AT@ 2849 @LENGTH@ 195
---DEL ThrowStatement@@ClassInstanceCreation:new Exception("Not throwed IllegalArgumentException!") @AT@ 2929 @LENGTH@ 61
------DEL ClassInstanceCreation@@Exception["Not throwed IllegalArgumentException!"] @AT@ 2935 @LENGTH@ 54
---------DEL New@@new @AT@ 2935 @LENGTH@ 3
---------DEL SimpleType@@Exception @AT@ 2939 @LENGTH@ 9
---------DEL StringLiteral@@"Not throwed IllegalArgumentException!" @AT@ 2949 @LENGTH@ 39
---INS ExpressionStatement@@MethodInvocation:fail("Not throwed IllegalArgumentException!") @TO@ TryStatement@@try {  HexConverter.convertFromHex(new char[]{'1','F','A'});  throw new Exception("Not throwed IllegalArgumentException!");} catch (IllegalArgumentException e) {} @AT@ 2929 @LENGTH@ 46
------INS MethodInvocation@@fail("Not throwed IllegalArgumentException!") @TO@ ExpressionStatement@@MethodInvocation:fail("Not throwed IllegalArgumentException!") @AT@ 2929 @LENGTH@ 45
---------INS SimpleName@@MethodName:fail:["Not throwed IllegalArgumentException!"] @TO@ MethodInvocation@@fail("Not throwed IllegalArgumentException!") @AT@ 2929 @LENGTH@ 45
------------INS StringLiteral@@"Not throwed IllegalArgumentException!" @TO@ SimpleName@@MethodName:fail:["Not throwed IllegalArgumentException!"] @AT@ 2934 @LENGTH@ 39


UPD SwitchStatement@@switch (hiveTypeCategory) {case BOOLEAN:  optiqLiteral=rexBuilder.makeLiteral(((Boolean)value).booleanValue());break;case BYTE:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case SHORT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case INT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Integer)value));break;case LONG:optiqLiteral=rexBuilder.makeBigintLiteral(new BigDecimal((Long)value));break;case DECIMAL:if (value instanceof HiveDecimal) value=((HiveDecimal)value).bigDecimalValue();if (value instanceof Decimal128) value=((Decimal128)value).toBigDecimal();optiqLiteral=rexBuilder.makeExactLiteral((BigDecimal)value);break;case FLOAT:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Float)value),optiqDataType);break;case DOUBLE:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Double)value),optiqDataType);break;case CHAR:if (value instanceof HiveChar) value=((HiveChar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case VARCHAR:if (value instanceof HiveVarchar) value=((HiveVarchar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case STRING:optiqLiteral=rexBuilder.makeLiteral((String)value);break;case DATE:Calendar cal=new GregorianCalendar();cal.setTime((Date)value);optiqLiteral=rexBuilder.makeDateLiteral(cal);break;case TIMESTAMP:optiqLiteral=rexBuilder.makeTimestampLiteral((Calendar)value,RelDataType.PRECISION_NOT_SPECIFIED);break;case BINARY:case VOID:case UNKNOWN:default :throw new RuntimeException("UnSupported Literal");} @TO@ switch (hiveTypeCategory) {case BOOLEAN:  optiqLiteral=rexBuilder.makeLiteral(((Boolean)value).booleanValue());break;case BYTE:byte[] byteArray=new byte[]{(Byte)value};ByteString bs=new ByteString(byteArray);optiqLiteral=rexBuilder.makeBinaryLiteral(bs);break;case SHORT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case INT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Integer)value));break;case LONG:optiqLiteral=rexBuilder.makeBigintLiteral(new BigDecimal((Long)value));break;case DECIMAL:if (value instanceof HiveDecimal) value=((HiveDecimal)value).bigDecimalValue();if (value instanceof Decimal128) value=((Decimal128)value).toBigDecimal();optiqLiteral=rexBuilder.makeExactLiteral((BigDecimal)value);break;case FLOAT:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Float)value),optiqDataType);break;case DOUBLE:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Double)value),optiqDataType);break;case CHAR:if (value instanceof HiveChar) value=((HiveChar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case VARCHAR:if (value instanceof HiveVarchar) value=((HiveVarchar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case STRING:optiqLiteral=rexBuilder.makeLiteral((String)value);break;case DATE:Calendar cal=new GregorianCalendar();cal.setTime((Date)value);optiqLiteral=rexBuilder.makeDateLiteral(cal);break;case TIMESTAMP:optiqLiteral=rexBuilder.makeTimestampLiteral((Calendar)value,RelDataType.PRECISION_NOT_SPECIFIED);break;case BINARY:case VOID:case UNKNOWN:default :throw new RuntimeException("UnSupported Literal");} @AT@ 11051 @LENGTH@ 2069
---UPD ExpressionStatement@@Assignment:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value)) @TO@ Assignment:optiqLiteral=rexBuilder.makeBinaryLiteral(bs) @AT@ 11210 @LENGTH@ 74
------UPD Assignment@@optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value)) @TO@ optiqLiteral=rexBuilder.makeBinaryLiteral(bs) @AT@ 11210 @LENGTH@ 73
---------UPD MethodInvocation@@rexBuilder.makeExactLiteral(new BigDecimal((Short)value)) @TO@ rexBuilder.makeBinaryLiteral(bs) @AT@ 11225 @LENGTH@ 58
------------UPD SimpleName@@MethodName:makeExactLiteral:[new BigDecimal((Short)value)] @TO@ MethodName:makeBinaryLiteral:[bs] @AT@ 11236 @LENGTH@ 47
---------------DEL ClassInstanceCreation@@BigDecimal[(Short)value] @AT@ 11253 @LENGTH@ 29
------------------DEL New@@new @AT@ 11253 @LENGTH@ 3
------------------DEL SimpleType@@BigDecimal @AT@ 11257 @LENGTH@ 10
------------------DEL CastExpression@@(Short)value @AT@ 11268 @LENGTH@ 13
---------------------DEL SimpleType@@Short @AT@ 11269 @LENGTH@ 5
---------------------DEL SimpleName@@value @AT@ 11276 @LENGTH@ 5
---------------INS SimpleName@@bs @TO@ SimpleName@@MethodName:makeExactLiteral:[new BigDecimal((Short)value)] @AT@ 12076 @LENGTH@ 2
---INS VariableDeclarationStatement@@byte[] byteArray=new byte[]{(Byte)value}; @TO@ SwitchStatement@@switch (hiveTypeCategory) {case BOOLEAN:  optiqLiteral=rexBuilder.makeLiteral(((Boolean)value).booleanValue());break;case BYTE:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case SHORT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case INT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Integer)value));break;case LONG:optiqLiteral=rexBuilder.makeBigintLiteral(new BigDecimal((Long)value));break;case DECIMAL:if (value instanceof HiveDecimal) value=((HiveDecimal)value).bigDecimalValue();if (value instanceof Decimal128) value=((Decimal128)value).toBigDecimal();optiqLiteral=rexBuilder.makeExactLiteral((BigDecimal)value);break;case FLOAT:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Float)value),optiqDataType);break;case DOUBLE:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Double)value),optiqDataType);break;case CHAR:if (value instanceof HiveChar) value=((HiveChar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case VARCHAR:if (value instanceof HiveVarchar) value=((HiveVarchar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case STRING:optiqLiteral=rexBuilder.makeLiteral((String)value);break;case DATE:Calendar cal=new GregorianCalendar();cal.setTime((Date)value);optiqLiteral=rexBuilder.makeDateLiteral(cal);break;case TIMESTAMP:optiqLiteral=rexBuilder.makeTimestampLiteral((Calendar)value,RelDataType.PRECISION_NOT_SPECIFIED);break;case BINARY:case VOID:case UNKNOWN:default :throw new RuntimeException("UnSupported Literal");} @AT@ 11930 @LENGTH@ 46
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] byteArray=new byte[]{(Byte)value}; @AT@ 11930 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 11930 @LENGTH@ 4
------INS VariableDeclarationFragment@@byteArray=new byte[]{(Byte)value} @TO@ VariableDeclarationStatement@@byte[] byteArray=new byte[]{(Byte)value}; @AT@ 11937 @LENGTH@ 38
---------INS SimpleName@@byteArray @TO@ VariableDeclarationFragment@@byteArray=new byte[]{(Byte)value} @AT@ 11937 @LENGTH@ 9
---------INS ArrayCreation@@new byte[]{(Byte)value} @TO@ VariableDeclarationFragment@@byteArray=new byte[]{(Byte)value} @AT@ 11949 @LENGTH@ 26
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[]{(Byte)value} @AT@ 11953 @LENGTH@ 6
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 11953 @LENGTH@ 4
------------INS ArrayInitializer@@{(Byte)value} @TO@ ArrayCreation@@new byte[]{(Byte)value} @AT@ 11960 @LENGTH@ 15
---------------INS CastExpression@@(Byte)value @TO@ ArrayInitializer@@{(Byte)value} @AT@ 11962 @LENGTH@ 12
------------------INS SimpleType@@Byte @TO@ CastExpression@@(Byte)value @AT@ 11963 @LENGTH@ 4
------------------INS SimpleName@@value @TO@ CastExpression@@(Byte)value @AT@ 11969 @LENGTH@ 5
---INS VariableDeclarationStatement@@ByteString bs=new ByteString(byteArray); @TO@ SwitchStatement@@switch (hiveTypeCategory) {case BOOLEAN:  optiqLiteral=rexBuilder.makeLiteral(((Boolean)value).booleanValue());break;case BYTE:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case SHORT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case INT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Integer)value));break;case LONG:optiqLiteral=rexBuilder.makeBigintLiteral(new BigDecimal((Long)value));break;case DECIMAL:if (value instanceof HiveDecimal) value=((HiveDecimal)value).bigDecimalValue();if (value instanceof Decimal128) value=((Decimal128)value).toBigDecimal();optiqLiteral=rexBuilder.makeExactLiteral((BigDecimal)value);break;case FLOAT:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Float)value),optiqDataType);break;case DOUBLE:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Double)value),optiqDataType);break;case CHAR:if (value instanceof HiveChar) value=((HiveChar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case VARCHAR:if (value instanceof HiveVarchar) value=((HiveVarchar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case STRING:optiqLiteral=rexBuilder.makeLiteral((String)value);break;case DATE:Calendar cal=new GregorianCalendar();cal.setTime((Date)value);optiqLiteral=rexBuilder.makeDateLiteral(cal);break;case TIMESTAMP:optiqLiteral=rexBuilder.makeTimestampLiteral((Calendar)value,RelDataType.PRECISION_NOT_SPECIFIED);break;case BINARY:case VOID:case UNKNOWN:default :throw new RuntimeException("UnSupported Literal");} @AT@ 11983 @LENGTH@ 42
------INS SimpleType@@ByteString @TO@ VariableDeclarationStatement@@ByteString bs=new ByteString(byteArray); @AT@ 11983 @LENGTH@ 10
------INS VariableDeclarationFragment@@bs=new ByteString(byteArray) @TO@ VariableDeclarationStatement@@ByteString bs=new ByteString(byteArray); @AT@ 11994 @LENGTH@ 30
---------INS SimpleName@@bs @TO@ VariableDeclarationFragment@@bs=new ByteString(byteArray) @AT@ 11994 @LENGTH@ 2
---------INS ClassInstanceCreation@@ByteString[byteArray] @TO@ VariableDeclarationFragment@@bs=new ByteString(byteArray) @AT@ 11999 @LENGTH@ 25
------------INS New@@new @TO@ ClassInstanceCreation@@ByteString[byteArray] @AT@ 11999 @LENGTH@ 3
------------INS SimpleType@@ByteString @TO@ ClassInstanceCreation@@ByteString[byteArray] @AT@ 12003 @LENGTH@ 10
------------INS SimpleName@@byteArray @TO@ ClassInstanceCreation@@ByteString[byteArray] @AT@ 12014 @LENGTH@ 9
---MOV ExpressionStatement@@Assignment:optiqLiteral=rexBuilder.makeLiteral((String)value) @TO@ SwitchStatement@@switch (hiveTypeCategory) {case BOOLEAN:  optiqLiteral=rexBuilder.makeLiteral(((Boolean)value).booleanValue());break;case BYTE:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case SHORT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case INT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Integer)value));break;case LONG:optiqLiteral=rexBuilder.makeBigintLiteral(new BigDecimal((Long)value));break;case DECIMAL:if (value instanceof HiveDecimal) value=((HiveDecimal)value).bigDecimalValue();if (value instanceof Decimal128) value=((Decimal128)value).toBigDecimal();optiqLiteral=rexBuilder.makeExactLiteral((BigDecimal)value);break;case FLOAT:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Float)value),optiqDataType);break;case DOUBLE:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Double)value),optiqDataType);break;case CHAR:if (value instanceof HiveChar) value=((HiveChar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case VARCHAR:if (value instanceof HiveVarchar) value=((HiveVarchar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case STRING:optiqLiteral=rexBuilder.makeLiteral((String)value);break;case DATE:Calendar cal=new GregorianCalendar();cal.setTime((Date)value);optiqLiteral=rexBuilder.makeDateLiteral(cal);break;case TIMESTAMP:optiqLiteral=rexBuilder.makeTimestampLiteral((Calendar)value,RelDataType.PRECISION_NOT_SPECIFIED);break;case BINARY:case VOID:case UNKNOWN:default :throw new RuntimeException("UnSupported Literal");} @AT@ 12341 @LENGTH@ 54
---MOV ExpressionStatement@@Assignment:optiqLiteral=rexBuilder.makeLiteral((String)value) @TO@ SwitchStatement@@switch (hiveTypeCategory) {case BOOLEAN:  optiqLiteral=rexBuilder.makeLiteral(((Boolean)value).booleanValue());break;case BYTE:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case SHORT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case INT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Integer)value));break;case LONG:optiqLiteral=rexBuilder.makeBigintLiteral(new BigDecimal((Long)value));break;case DECIMAL:if (value instanceof HiveDecimal) value=((HiveDecimal)value).bigDecimalValue();if (value instanceof Decimal128) value=((Decimal128)value).toBigDecimal();optiqLiteral=rexBuilder.makeExactLiteral((BigDecimal)value);break;case FLOAT:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Float)value),optiqDataType);break;case DOUBLE:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Double)value),optiqDataType);break;case CHAR:if (value instanceof HiveChar) value=((HiveChar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case VARCHAR:if (value instanceof HiveVarchar) value=((HiveVarchar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case STRING:optiqLiteral=rexBuilder.makeLiteral((String)value);break;case DATE:Calendar cal=new GregorianCalendar();cal.setTime((Date)value);optiqLiteral=rexBuilder.makeDateLiteral(cal);break;case TIMESTAMP:optiqLiteral=rexBuilder.makeTimestampLiteral((Calendar)value,RelDataType.PRECISION_NOT_SPECIFIED);break;case BINARY:case VOID:case UNKNOWN:default :throw new RuntimeException("UnSupported Literal");} @AT@ 12523 @LENGTH@ 54
---MOV ExpressionStatement@@Assignment:optiqLiteral=rexBuilder.makeLiteral((String)value) @TO@ SwitchStatement@@switch (hiveTypeCategory) {case BOOLEAN:  optiqLiteral=rexBuilder.makeLiteral(((Boolean)value).booleanValue());break;case BYTE:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case SHORT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Short)value));break;case INT:optiqLiteral=rexBuilder.makeExactLiteral(new BigDecimal((Integer)value));break;case LONG:optiqLiteral=rexBuilder.makeBigintLiteral(new BigDecimal((Long)value));break;case DECIMAL:if (value instanceof HiveDecimal) value=((HiveDecimal)value).bigDecimalValue();if (value instanceof Decimal128) value=((Decimal128)value).toBigDecimal();optiqLiteral=rexBuilder.makeExactLiteral((BigDecimal)value);break;case FLOAT:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Float)value),optiqDataType);break;case DOUBLE:optiqLiteral=rexBuilder.makeApproxLiteral(new BigDecimal((Double)value),optiqDataType);break;case CHAR:if (value instanceof HiveChar) value=((HiveChar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case VARCHAR:if (value instanceof HiveVarchar) value=((HiveVarchar)value).getValue();optiqLiteral=rexBuilder.makeLiteral((String)value);break;case STRING:optiqLiteral=rexBuilder.makeLiteral((String)value);break;case DATE:Calendar cal=new GregorianCalendar();cal.setTime((Date)value);optiqLiteral=rexBuilder.makeDateLiteral(cal);break;case TIMESTAMP:optiqLiteral=rexBuilder.makeTimestampLiteral((Calendar)value,RelDataType.PRECISION_NOT_SPECIFIED);break;case BINARY:case VOID:case UNKNOWN:default :throw new RuntimeException("UnSupported Literal");} @AT@ 12614 @LENGTH@ 54


UPD TypeDeclaration@@[public]MailEndpoint, ScheduledPollEndpoint @TO@ [@UriEndpoint(scheme="mail",consumerClass=MailConsumer.class), public]MailEndpoint, ScheduledPollEndpoint @AT@ 1348 @LENGTH@ 4797
---INS NormalAnnotation@@@UriEndpoint(scheme="mail",consumerClass=MailConsumer.class) @TO@ TypeDeclaration@@[public]MailEndpoint, ScheduledPollEndpoint @AT@ 1427 @LENGTH@ 65


INS MethodDeclaration@@private, static, String, MethodName:bytesWritableToString, BytesWritable bw,  @TO@ TypeDeclaration@@[@SuppressWarnings({"unchecked","rawtypes"}), public]TestHiveKVResultCache,  @AT@ 5509 @LENGTH@ 219
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, String, MethodName:bytesWritableToString, BytesWritable bw,  @AT@ 5509 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, String, MethodName:bytesWritableToString, BytesWritable bw,  @AT@ 5517 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@private, static, String, MethodName:bytesWritableToString, BytesWritable bw,  @AT@ 5524 @LENGTH@ 6
---INS SimpleName@@MethodName:bytesWritableToString @TO@ MethodDeclaration@@private, static, String, MethodName:bytesWritableToString, BytesWritable bw,  @AT@ 5531 @LENGTH@ 21
---INS SingleVariableDeclaration@@BytesWritable bw @TO@ MethodDeclaration@@private, static, String, MethodName:bytesWritableToString, BytesWritable bw,  @AT@ 5553 @LENGTH@ 16
------INS SimpleType@@BytesWritable @TO@ SingleVariableDeclaration@@BytesWritable bw @AT@ 5553 @LENGTH@ 13
------INS SimpleName@@bw @TO@ SingleVariableDeclaration@@BytesWritable bw @AT@ 5567 @LENGTH@ 2
---INS VariableDeclarationStatement@@int size=bw.getLength(); @TO@ MethodDeclaration@@private, static, String, MethodName:bytesWritableToString, BytesWritable bw,  @AT@ 5577 @LENGTH@ 26
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int size=bw.getLength(); @AT@ 5577 @LENGTH@ 3
------INS VariableDeclarationFragment@@size=bw.getLength() @TO@ VariableDeclarationStatement@@int size=bw.getLength(); @AT@ 5581 @LENGTH@ 21
---------INS SimpleName@@size @TO@ VariableDeclarationFragment@@size=bw.getLength() @AT@ 5581 @LENGTH@ 4
---------INS MethodInvocation@@bw.getLength() @TO@ VariableDeclarationFragment@@size=bw.getLength() @AT@ 5588 @LENGTH@ 14
------------INS SimpleName@@Name:bw @TO@ MethodInvocation@@bw.getLength() @AT@ 5588 @LENGTH@ 2
------------INS SimpleName@@MethodName:getLength:[] @TO@ MethodInvocation@@bw.getLength() @AT@ 5591 @LENGTH@ 11
---INS VariableDeclarationStatement@@byte[] bytes=new byte[size]; @TO@ MethodDeclaration@@private, static, String, MethodName:bytesWritableToString, BytesWritable bw,  @AT@ 5608 @LENGTH@ 30
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] bytes=new byte[size]; @AT@ 5608 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 5608 @LENGTH@ 4
------INS VariableDeclarationFragment@@bytes=new byte[size] @TO@ VariableDeclarationStatement@@byte[] bytes=new byte[size]; @AT@ 5615 @LENGTH@ 22
---------INS SimpleName@@bytes @TO@ VariableDeclarationFragment@@bytes=new byte[size] @AT@ 5615 @LENGTH@ 5
---------INS ArrayCreation@@new byte[size] @TO@ VariableDeclarationFragment@@bytes=new byte[size] @AT@ 5623 @LENGTH@ 14
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[size] @AT@ 5627 @LENGTH@ 10
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 5627 @LENGTH@ 4
------------INS SimpleName@@size @TO@ ArrayCreation@@new byte[size] @AT@ 5632 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:System.arraycopy(bw.getBytes(),0,bytes,0,size) @TO@ MethodDeclaration@@private, static, String, MethodName:bytesWritableToString, BytesWritable bw,  @AT@ 5643 @LENGTH@ 51
------INS MethodInvocation@@System.arraycopy(bw.getBytes(),0,bytes,0,size) @TO@ ExpressionStatement@@MethodInvocation:System.arraycopy(bw.getBytes(),0,bytes,0,size) @AT@ 5643 @LENGTH@ 50
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.arraycopy(bw.getBytes(),0,bytes,0,size) @AT@ 5643 @LENGTH@ 6
---------INS SimpleName@@MethodName:arraycopy:[bw.getBytes(), 0, bytes, 0, size] @TO@ MethodInvocation@@System.arraycopy(bw.getBytes(),0,bytes,0,size) @AT@ 5650 @LENGTH@ 43
------------INS MethodInvocation@@bw.getBytes() @TO@ SimpleName@@MethodName:arraycopy:[bw.getBytes(), 0, bytes, 0, size] @AT@ 5660 @LENGTH@ 13
---------------INS SimpleName@@Name:bw @TO@ MethodInvocation@@bw.getBytes() @AT@ 5660 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@bw.getBytes() @AT@ 5663 @LENGTH@ 10
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[bw.getBytes(), 0, bytes, 0, size] @AT@ 5675 @LENGTH@ 1
------------INS SimpleName@@bytes @TO@ SimpleName@@MethodName:arraycopy:[bw.getBytes(), 0, bytes, 0, size] @AT@ 5678 @LENGTH@ 5
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[bw.getBytes(), 0, bytes, 0, size] @AT@ 5685 @LENGTH@ 1
------------INS SimpleName@@size @TO@ SimpleName@@MethodName:arraycopy:[bw.getBytes(), 0, bytes, 0, size] @AT@ 5688 @LENGTH@ 4
---INS ReturnStatement@@ClassInstanceCreation:new String(bytes) @TO@ MethodDeclaration@@private, static, String, MethodName:bytesWritableToString, BytesWritable bw,  @AT@ 5699 @LENGTH@ 25
------INS ClassInstanceCreation@@String[bytes] @TO@ ReturnStatement@@ClassInstanceCreation:new String(bytes) @AT@ 5706 @LENGTH@ 17
---------INS New@@new @TO@ ClassInstanceCreation@@String[bytes] @AT@ 5706 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[bytes] @AT@ 5710 @LENGTH@ 6
---------INS SimpleName@@bytes @TO@ ClassInstanceCreation@@String[bytes] @AT@ 5717 @LENGTH@ 5


UPD VariableDeclarationStatement@@Resource[] scannedResources=new Resource[0]; @TO@ Resource[] scannedResources; @AT@ 5738 @LENGTH@ 46
---UPD VariableDeclarationFragment@@scannedResources=new Resource[0] @TO@ scannedResources @AT@ 5749 @LENGTH@ 34
------DEL ArrayCreation@@new Resource[0] @AT@ 5768 @LENGTH@ 15
---------DEL ArrayType@@Resource[] @AT@ 5772 @LENGTH@ 11
------------DEL SimpleType@@Resource @AT@ 5772 @LENGTH@ 8
---------DEL NumberLiteral@@0 @AT@ 5781 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:bodyBuilder.appendFormalLine("uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ "sortFieldName, sortOrder).getResultList());") @TO@ MethodInvocation:bodyBuilder.appendFormalLine("uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ ", sortFieldName, sortOrder).getResultList());") @AT@ 21399 @LENGTH@ 432
---UPD MethodInvocation@@bodyBuilder.appendFormalLine("uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ "sortFieldName, sortOrder).getResultList());") @TO@ bodyBuilder.appendFormalLine("uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ ", sortFieldName, sortOrder).getResultList());") @AT@ 21399 @LENGTH@ 431
------UPD SimpleName@@MethodName:appendFormalLine:["uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ "sortFieldName, sortOrder).getResultList());"] @TO@ MethodName:appendFormalLine:["uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ ", sortFieldName, sortOrder).getResultList());"] @AT@ 21411 @LENGTH@ 419
---------UPD InfixExpression@@"uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ "sortFieldName, sortOrder).getResultList());" @TO@ "uiModel.addAttribute(\"" + javaTypeMetadataHolder.getPlural().toLowerCase() + "\", "+ getShortName(formBackingType)+ "."+ finderMetadataDetails.getFinderMethodMetadata().getMethodName().getSymbolName()+ "("+ methodParamsString+ ", sortFieldName, sortOrder).getResultList());" @AT@ 21428 @LENGTH@ 401
------------UPD StringLiteral@@"sortFieldName, sortOrder).getResultList());" @TO@ ", sortFieldName, sortOrder).getResultList());" @AT@ 21784 @LENGTH@ 45


UPD TypeDeclaration@@[public]HttpEndpoint, DefaultPollingEndpoint[HeaderFilterStrategyAware] @TO@ [@UriEndpoint(scheme="http",consumerClass=HttpConsumer.class), public]HttpEndpoint, DefaultPollingEndpoint[HeaderFilterStrategyAware] @AT@ 1643 @LENGTH@ 10550
---INS NormalAnnotation@@@UriEndpoint(scheme="http",consumerClass=HttpConsumer.class) @TO@ TypeDeclaration@@[public]HttpEndpoint, DefaultPollingEndpoint[HeaderFilterStrategyAware] @AT@ 1722 @LENGTH@ 65


INS MethodDeclaration@@public, voidMethodName:OptaPlannerComponent,  @TO@ TypeDeclaration@@[public]OptaPlannerComponent, DefaultComponent @AT@ 1189 @LENGTH@ 79
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:OptaPlannerComponent,  @AT@ 1189 @LENGTH@ 6
---INS SimpleName@@MethodName:OptaPlannerComponent @TO@ MethodDeclaration@@public, voidMethodName:OptaPlannerComponent,  @AT@ 1196 @LENGTH@ 20
---INS SuperConstructorInvocation@@super(OptaPlannerEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:OptaPlannerComponent,  @AT@ 1229 @LENGTH@ 33
------INS TypeLiteral@@OptaPlannerEndpoint.class @TO@ SuperConstructorInvocation@@super(OptaPlannerEndpoint.class);
 @AT@ 1235 @LENGTH@ 25


MOV FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]SplunkEvent, [Serializable] @AT@ 1221 @LENGTH@ 48


UPD ExpressionStatement@@MethodInvocation:builder.sources(YarnPushApplication.class,OperationProperties.class) @TO@ MethodInvocation:builder.sources(YarnInfoApplication.class,OperationProperties.class) @AT@ 3160 @LENGTH@ 70
---UPD MethodInvocation@@builder.sources(YarnPushApplication.class,OperationProperties.class) @TO@ builder.sources(YarnInfoApplication.class,OperationProperties.class) @AT@ 3160 @LENGTH@ 69
------UPD SimpleName@@MethodName:sources:[YarnPushApplication.class, OperationProperties.class] @TO@ MethodName:sources:[YarnInfoApplication.class, OperationProperties.class] @AT@ 3168 @LENGTH@ 61
---------UPD TypeLiteral@@YarnPushApplication.class @TO@ YarnInfoApplication.class @AT@ 3176 @LENGTH@ 25


INS MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @TO@ TypeDeclaration@@[public]Hadoop23Shims, HadoopShimsSecure @AT@ 17710 @LENGTH@ 460
---INS Modifier@@public @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 17710 @LENGTH@ 6
---INS ParameterizedType@@TreeMap<Long,BlockLocation> @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 17717 @LENGTH@ 28
------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 17717 @LENGTH@ 7
------INS SimpleType@@Long @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 17725 @LENGTH@ 4
------INS SimpleType@@BlockLocation @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 17731 @LENGTH@ 13
---INS SimpleName@@MethodName:getLocationsWithOffset @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 17746 @LENGTH@ 22
---INS SingleVariableDeclaration@@FileSystem fs @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 17769 @LENGTH@ 13
------INS SimpleType@@FileSystem @TO@ SingleVariableDeclaration@@FileSystem fs @AT@ 17769 @LENGTH@ 10
------INS SimpleName@@fs @TO@ SingleVariableDeclaration@@FileSystem fs @AT@ 17780 @LENGTH@ 2
---INS SingleVariableDeclaration@@FileStatus status @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 17845 @LENGTH@ 17
------INS SimpleType@@FileStatus @TO@ SingleVariableDeclaration@@FileStatus status @AT@ 17845 @LENGTH@ 10
------INS SimpleName@@status @TO@ SingleVariableDeclaration@@FileStatus status @AT@ 17856 @LENGTH@ 6
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 17871 @LENGTH@ 11
---INS VariableDeclarationStatement@@TreeMap<Long,BlockLocation> offsetBlockMap=new TreeMap<Long,BlockLocation>(); @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 17889 @LENGTH@ 81
------INS ParameterizedType@@TreeMap<Long,BlockLocation> @TO@ VariableDeclarationStatement@@TreeMap<Long,BlockLocation> offsetBlockMap=new TreeMap<Long,BlockLocation>(); @AT@ 17889 @LENGTH@ 28
---------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 17889 @LENGTH@ 7
---------INS SimpleType@@Long @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 17897 @LENGTH@ 4
---------INS SimpleType@@BlockLocation @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 17903 @LENGTH@ 13
------INS VariableDeclarationFragment@@offsetBlockMap=new TreeMap<Long,BlockLocation>() @TO@ VariableDeclarationStatement@@TreeMap<Long,BlockLocation> offsetBlockMap=new TreeMap<Long,BlockLocation>(); @AT@ 17918 @LENGTH@ 51
---------INS SimpleName@@offsetBlockMap @TO@ VariableDeclarationFragment@@offsetBlockMap=new TreeMap<Long,BlockLocation>() @AT@ 17918 @LENGTH@ 14
---------INS ClassInstanceCreation@@TreeMap<Long,BlockLocation>[] @TO@ VariableDeclarationFragment@@offsetBlockMap=new TreeMap<Long,BlockLocation>() @AT@ 17935 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@TreeMap<Long,BlockLocation>[] @AT@ 17935 @LENGTH@ 3
------------INS ParameterizedType@@TreeMap<Long,BlockLocation> @TO@ ClassInstanceCreation@@TreeMap<Long,BlockLocation>[] @AT@ 17939 @LENGTH@ 28
---------------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 17939 @LENGTH@ 7
---------------INS SimpleType@@Long @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 17947 @LENGTH@ 4
---------------INS SimpleType@@BlockLocation @TO@ ParameterizedType@@TreeMap<Long,BlockLocation> @AT@ 17953 @LENGTH@ 13
---INS VariableDeclarationStatement@@BlockLocation[] locations=getLocations(fs,status); @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 17975 @LENGTH@ 53
------INS ArrayType@@BlockLocation[] @TO@ VariableDeclarationStatement@@BlockLocation[] locations=getLocations(fs,status); @AT@ 17975 @LENGTH@ 15
---------INS SimpleType@@BlockLocation @TO@ ArrayType@@BlockLocation[] @AT@ 17975 @LENGTH@ 13
------INS VariableDeclarationFragment@@locations=getLocations(fs,status) @TO@ VariableDeclarationStatement@@BlockLocation[] locations=getLocations(fs,status); @AT@ 17991 @LENGTH@ 36
---------INS SimpleName@@locations @TO@ VariableDeclarationFragment@@locations=getLocations(fs,status) @AT@ 17991 @LENGTH@ 9
---------INS MethodInvocation@@getLocations(fs,status) @TO@ VariableDeclarationFragment@@locations=getLocations(fs,status) @AT@ 18003 @LENGTH@ 24
------------INS SimpleName@@MethodName:getLocations:[fs, status] @TO@ MethodInvocation@@getLocations(fs,status) @AT@ 18003 @LENGTH@ 24
---------------INS SimpleName@@fs @TO@ SimpleName@@MethodName:getLocations:[fs, status] @AT@ 18016 @LENGTH@ 2
---------------INS SimpleName@@status @TO@ SimpleName@@MethodName:getLocations:[fs, status] @AT@ 18020 @LENGTH@ 6
---INS EnhancedForStatement@@for (BlockLocation location : locations) {  offsetBlockMap.put(location.getOffset(),location);} @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 18033 @LENGTH@ 106
------INS SingleVariableDeclaration@@BlockLocation location @TO@ EnhancedForStatement@@for (BlockLocation location : locations) {  offsetBlockMap.put(location.getOffset(),location);} @AT@ 18038 @LENGTH@ 22
---------INS SimpleType@@BlockLocation @TO@ SingleVariableDeclaration@@BlockLocation location @AT@ 18038 @LENGTH@ 13
---------INS SimpleName@@location @TO@ SingleVariableDeclaration@@BlockLocation location @AT@ 18052 @LENGTH@ 8
------INS SimpleName@@locations @TO@ EnhancedForStatement@@for (BlockLocation location : locations) {  offsetBlockMap.put(location.getOffset(),location);} @AT@ 18063 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:offsetBlockMap.put(location.getOffset(),location) @TO@ EnhancedForStatement@@for (BlockLocation location : locations) {  offsetBlockMap.put(location.getOffset(),location);} @AT@ 18082 @LENGTH@ 51
---------INS MethodInvocation@@offsetBlockMap.put(location.getOffset(),location) @TO@ ExpressionStatement@@MethodInvocation:offsetBlockMap.put(location.getOffset(),location) @AT@ 18082 @LENGTH@ 50
------------INS SimpleName@@Name:offsetBlockMap @TO@ MethodInvocation@@offsetBlockMap.put(location.getOffset(),location) @AT@ 18082 @LENGTH@ 14
------------INS SimpleName@@MethodName:put:[location.getOffset(), location] @TO@ MethodInvocation@@offsetBlockMap.put(location.getOffset(),location) @AT@ 18097 @LENGTH@ 35
---------------INS MethodInvocation@@location.getOffset() @TO@ SimpleName@@MethodName:put:[location.getOffset(), location] @AT@ 18101 @LENGTH@ 20
------------------INS SimpleName@@Name:location @TO@ MethodInvocation@@location.getOffset() @AT@ 18101 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getOffset:[] @TO@ MethodInvocation@@location.getOffset() @AT@ 18110 @LENGTH@ 11
---------------INS SimpleName@@location @TO@ SimpleName@@MethodName:put:[location.getOffset(), location] @AT@ 18123 @LENGTH@ 8
---INS ReturnStatement@@SimpleName:offsetBlockMap @TO@ MethodDeclaration@@public, TreeMap<Long,BlockLocation>, MethodName:getLocationsWithOffset, FileSystem fs, FileStatus status, IOException,  @AT@ 18144 @LENGTH@ 22
------INS SimpleName@@offsetBlockMap @TO@ ReturnStatement@@SimpleName:offsetBlockMap @AT@ 18151 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:setDelay(6000) @TO@ MethodInvocation:setDelay(endpoint.getDelay()) @AT@ 1952 @LENGTH@ 15
---UPD MethodInvocation@@setDelay(6000) @TO@ setDelay(endpoint.getDelay()) @AT@ 1952 @LENGTH@ 14
------UPD SimpleName@@MethodName:setDelay:[6000] @TO@ MethodName:getDelay:[] @AT@ 1952 @LENGTH@ 14
------INS SimpleName@@MethodName:setDelay:[endpoint.getDelay()] @TO@ MethodInvocation@@setDelay(6000) @AT@ 1965 @LENGTH@ 29
---------INS MethodInvocation@@endpoint.getDelay() @TO@ SimpleName@@MethodName:setDelay:[endpoint.getDelay()] @AT@ 1974 @LENGTH@ 19
------------MOV SimpleName@@MethodName:setDelay:[6000] @TO@ MethodInvocation@@endpoint.getDelay() @AT@ 1952 @LENGTH@ 14
---------------DEL NumberLiteral@@6000 @AT@ 1961 @LENGTH@ 4
------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getDelay() @AT@ 1974 @LENGTH@ 8


DEL MethodDeclaration@@private, void, T, MethodName:setDependency, final OperationContext context, final ServiceBuilder<?> builder, final Injector<T> injector, final Class<T> injectedClass, final ServiceName serviceName, final PathAddress address, final String handlerChainType,  @AT@ 5097 @LENGTH@ 458
---DEL Modifier@@private @AT@ 5097 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 5109 @LENGTH@ 4
---DEL SimpleName@@MethodName:setDependency @AT@ 5114 @LENGTH@ 13
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 5128 @LENGTH@ 30
------DEL Modifier@@final @AT@ 5128 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 5134 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 5151 @LENGTH@ 7
---DEL SingleVariableDeclaration@@final ServiceBuilder<?> builder @AT@ 5160 @LENGTH@ 31
------DEL Modifier@@final @AT@ 5160 @LENGTH@ 5
------DEL ParameterizedType@@ServiceBuilder<?> @AT@ 5166 @LENGTH@ 17
---------DEL SimpleType@@ServiceBuilder @AT@ 5166 @LENGTH@ 14
---------DEL WildcardType@@? @AT@ 5181 @LENGTH@ 1
------DEL SimpleName@@builder @AT@ 5184 @LENGTH@ 7
---DEL SingleVariableDeclaration@@final Injector<T> injector @AT@ 5193 @LENGTH@ 26
------DEL Modifier@@final @AT@ 5193 @LENGTH@ 5
------DEL ParameterizedType@@Injector<T> @AT@ 5199 @LENGTH@ 11
---------DEL SimpleType@@Injector @AT@ 5199 @LENGTH@ 8
---------DEL SimpleType@@T @AT@ 5208 @LENGTH@ 1
------DEL SimpleName@@injector @AT@ 5211 @LENGTH@ 8
---DEL SingleVariableDeclaration@@final Class<T> injectedClass @AT@ 5233 @LENGTH@ 28
------DEL Modifier@@final @AT@ 5233 @LENGTH@ 5
------DEL ParameterizedType@@Class<T> @AT@ 5239 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 5239 @LENGTH@ 5
---------DEL SimpleType@@T @AT@ 5245 @LENGTH@ 1
------DEL SimpleName@@injectedClass @AT@ 5248 @LENGTH@ 13
---DEL SingleVariableDeclaration@@final ServiceName serviceName @AT@ 5263 @LENGTH@ 29
------DEL Modifier@@final @AT@ 5263 @LENGTH@ 5
------DEL SimpleType@@ServiceName @AT@ 5269 @LENGTH@ 11
------DEL SimpleName@@serviceName @AT@ 5281 @LENGTH@ 11
---DEL SingleVariableDeclaration@@final PathAddress address @AT@ 5294 @LENGTH@ 25
------DEL Modifier@@final @AT@ 5294 @LENGTH@ 5
------DEL SimpleType@@PathAddress @AT@ 5300 @LENGTH@ 11
------DEL SimpleName@@address @AT@ 5312 @LENGTH@ 7
---DEL SingleVariableDeclaration@@final String handlerChainType @AT@ 5321 @LENGTH@ 29
------DEL Modifier@@final @AT@ 5321 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5327 @LENGTH@ 6
------DEL SimpleName@@handlerChainType @AT@ 5334 @LENGTH@ 16
---DEL EnhancedForStatement@@for (ServiceName sn : PackageUtils.getServiceNameDependencies(context,serviceName,address,handlerChainType)) {  builder.addDependency(sn,injectedClass,injector);} @AT@ 5362 @LENGTH@ 187
------DEL SingleVariableDeclaration@@ServiceName sn @AT@ 5367 @LENGTH@ 14
---------DEL SimpleType@@ServiceName @AT@ 5367 @LENGTH@ 11
---------DEL SimpleName@@sn @AT@ 5379 @LENGTH@ 2
------DEL MethodInvocation@@PackageUtils.getServiceNameDependencies(context,serviceName,address,handlerChainType) @AT@ 5384 @LENGTH@ 88
---------DEL SimpleName@@Name:PackageUtils @AT@ 5384 @LENGTH@ 12
---------DEL SimpleName@@MethodName:getServiceNameDependencies:[context, serviceName, address, handlerChainType] @AT@ 5397 @LENGTH@ 75
------------DEL SimpleName@@context @AT@ 5424 @LENGTH@ 7
------------DEL SimpleName@@serviceName @AT@ 5433 @LENGTH@ 11
------------DEL SimpleName@@address @AT@ 5446 @LENGTH@ 7
------------DEL SimpleName@@handlerChainType @AT@ 5455 @LENGTH@ 16
------DEL ExpressionStatement@@MethodInvocation:builder.addDependency(sn,injectedClass,injector) @AT@ 5488 @LENGTH@ 51
---------DEL MethodInvocation@@builder.addDependency(sn,injectedClass,injector) @AT@ 5488 @LENGTH@ 50
------------DEL SimpleName@@Name:builder @AT@ 5488 @LENGTH@ 7
------------DEL SimpleName@@MethodName:addDependency:[sn, injectedClass, injector] @AT@ 5496 @LENGTH@ 42
---------------DEL SimpleName@@sn @AT@ 5510 @LENGTH@ 2
---------------DEL SimpleName@@injectedClass @AT@ 5514 @LENGTH@ 13
---------------DEL SimpleName@@injector @AT@ 5529 @LENGTH@ 8


DEL ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"timerName\": { \"type\": \"string\"")) @AT@ 1756 @LENGTH@ 67
---DEL MethodInvocation@@assertTrue(json.contains("\"timerName\": { \"type\": \"string\"")) @AT@ 1756 @LENGTH@ 66
------DEL SimpleName@@MethodName:assertTrue:[json.contains("\"timerName\": { \"type\": \"string\"")] @AT@ 1756 @LENGTH@ 66
---------DEL MethodInvocation@@json.contains("\"timerName\": { \"type\": \"string\"") @AT@ 1767 @LENGTH@ 54
------------DEL SimpleName@@Name:json @AT@ 1767 @LENGTH@ 4
------------DEL SimpleName@@MethodName:contains:["\"timerName\": { \"type\": \"string\""] @AT@ 1772 @LENGTH@ 49
---------------DEL StringLiteral@@"\"timerName\": { \"type\": \"string\"" @AT@ 1781 @LENGTH@ 39


UPD TypeDeclaration@@[public]QuartzEndpoint, DefaultEndpoint[ShutdownableService] @TO@ [@UriEndpoint(scheme="quartz",consumerClass=QuartzConsumer.class), public]QuartzEndpoint, DefaultEndpoint[ShutdownableService] @AT@ 1711 @LENGTH@ 7669
---INS NormalAnnotation@@@UriEndpoint(scheme="quartz",consumerClass=QuartzConsumer.class) @TO@ TypeDeclaration@@[public]QuartzEndpoint, DefaultEndpoint[ShutdownableService] @AT@ 1790 @LENGTH@ 69


UPD ExpressionStatement@@MethodInvocation:mvc.perform(post(BASE).content(content).contentType(MediaType.APPLICATION_JSON)).andExpect(status().isCreated()).andExpect(content().string(is(""))).andExpect(header().string("Location",endsWith(BASE + "/cluster1"))) @TO@ MethodInvocation:mvc.perform(post(BASE).content(content).contentType(MediaType.APPLICATION_JSON)).andExpect(status().isCreated()).andExpect(content().string(is(""))).andExpect(header().string("Location",endsWith("/cluster1"))) @AT@ 5213 @LENGTH@ 234
---UPD MethodInvocation@@mvc.perform(post(BASE).content(content).contentType(MediaType.APPLICATION_JSON)).andExpect(status().isCreated()).andExpect(content().string(is(""))).andExpect(header().string("Location",endsWith(BASE + "/cluster1"))) @TO@ mvc.perform(post(BASE).content(content).contentType(MediaType.APPLICATION_JSON)).andExpect(status().isCreated()).andExpect(content().string(is(""))).andExpect(header().string("Location",endsWith("/cluster1"))) @AT@ 5213 @LENGTH@ 233
------UPD SimpleName@@MethodName:andExpect:[header().string("Location",endsWith(BASE + "/cluster1"))] @TO@ MethodName:andExpect:[header().string("Location",endsWith("/cluster1"))] @AT@ 5378 @LENGTH@ 68
---------UPD MethodInvocation@@header().string("Location",endsWith(BASE + "/cluster1")) @TO@ header().string("Location",endsWith("/cluster1")) @AT@ 5388 @LENGTH@ 57
------------UPD SimpleName@@MethodName:string:["Location", endsWith(BASE + "/cluster1")] @TO@ MethodName:string:["Location", endsWith("/cluster1")] @AT@ 5397 @LENGTH@ 48
---------------UPD MethodInvocation@@endsWith(BASE + "/cluster1") @TO@ endsWith("/cluster1") @AT@ 5416 @LENGTH@ 28
------------------UPD SimpleName@@MethodName:endsWith:[BASE + "/cluster1"] @TO@ MethodName:endsWith:["/cluster1"] @AT@ 5416 @LENGTH@ 28
---------------------DEL InfixExpression@@BASE + "/cluster1" @AT@ 5425 @LENGTH@ 18
------------------------DEL SimpleName@@BASE @AT@ 5425 @LENGTH@ 4
------------------------DEL Operator@@+ @AT@ 5429 @LENGTH@ 1
------------------------DEL StringLiteral@@"/cluster1" @AT@ 5432 @LENGTH@ 11
---------------------INS StringLiteral@@"/cluster1" @TO@ SimpleName@@MethodName:endsWith:[BASE + "/cluster1"] @AT@ 5425 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FreemarkerConstants.FREEMARKER_DATA_MODLE,variableMap) @TO@ MethodInvocation:exchange.getIn().setHeader(FreemarkerConstants.FREEMARKER_DATA_MODEL,variableMap) @AT@ 2807 @LENGTH@ 83
---UPD MethodInvocation@@exchange.getIn().setHeader(FreemarkerConstants.FREEMARKER_DATA_MODLE,variableMap) @TO@ exchange.getIn().setHeader(FreemarkerConstants.FREEMARKER_DATA_MODEL,variableMap) @AT@ 2807 @LENGTH@ 82
------UPD SimpleName@@MethodName:setHeader:[FreemarkerConstants.FREEMARKER_DATA_MODLE, variableMap] @TO@ MethodName:setHeader:[FreemarkerConstants.FREEMARKER_DATA_MODEL, variableMap] @AT@ 2824 @LENGTH@ 65
---------UPD QualifiedName@@FreemarkerConstants.FREEMARKER_DATA_MODLE @TO@ FreemarkerConstants.FREEMARKER_DATA_MODEL @AT@ 2834 @LENGTH@ 41
------------UPD SimpleName@@FREEMARKER_DATA_MODLE @TO@ FREEMARKER_DATA_MODEL @AT@ 2854 @LENGTH@ 21


UPD IfStatement@@if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  if (consumer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 7700 @LENGTH@ 384
---UPD Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  if (consumer.getConfiguration().getSslContextParameters() == null) {    engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 7724 @LENGTH@ 360
------INS IfStatement@@if (consumer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @TO@ Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(consumer.getConfiguration().isNeedClientAuth());  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));  return new SslHandler(engine);} @AT@ 7941 @LENGTH@ 276
---------INS InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @TO@ IfStatement@@if (consumer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7945 @LENGTH@ 61
------------INS MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @TO@ InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @AT@ 7945 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @AT@ 7945 @LENGTH@ 27
---------------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @AT@ 7945 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getSslContextParameters:[] @TO@ MethodInvocation@@consumer.getConfiguration().getSslContextParameters() @AT@ 7973 @LENGTH@ 25
------------INS Operator@@== @TO@ InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @AT@ 7998 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@consumer.getConfiguration().getSslContextParameters() == null @AT@ 8002 @LENGTH@ 4
---------INS Block@@ThenBody:{  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @TO@ IfStatement@@if (consumer.getConfiguration().getSslContextParameters() == null) {  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 8008 @LENGTH@ 209
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7941 @LENGTH@ 89
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(consumer.getConfiguration().getEnabledProtocols().split(","));} @AT@ 7941 @LENGTH@ 89


UPD ExpressionStatement@@MethodInvocation:consumers.remove(consumer.getPath()) @TO@ MethodInvocation:consumers.remove(consumer.getEndpoint().getEndpointUri()) @AT@ 7540 @LENGTH@ 37
---UPD MethodInvocation@@consumers.remove(consumer.getPath()) @TO@ consumers.remove(consumer.getEndpoint().getEndpointUri()) @AT@ 7540 @LENGTH@ 36
------UPD SimpleName@@MethodName:remove:[consumer.getPath()] @TO@ MethodName:remove:[consumer.getEndpoint().getEndpointUri()] @AT@ 7550 @LENGTH@ 26
---------UPD MethodInvocation@@consumer.getPath() @TO@ consumer.getEndpoint().getEndpointUri() @AT@ 7557 @LENGTH@ 18
------------UPD SimpleName@@MethodName:getPath:[] @TO@ MethodName:getEndpointUri:[] @AT@ 7566 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@consumer.getPath() @AT@ 7578 @LENGTH@ 22


UPD ReturnStatement@@MethodInvocation:SrpConverters.toDataAccessException(ex) @TO@ MethodInvocation:EXCEPTION_TRANSLATION.translate(ex) @AT@ 2600 @LENGTH@ 47
---UPD MethodInvocation@@SrpConverters.toDataAccessException(ex) @TO@ EXCEPTION_TRANSLATION.translate(ex) @AT@ 2607 @LENGTH@ 39
------UPD SimpleName@@Name:SrpConverters @TO@ Name:EXCEPTION_TRANSLATION @AT@ 2607 @LENGTH@ 13
------UPD SimpleName@@MethodName:toDataAccessException:[ex] @TO@ MethodName:translate:[ex] @AT@ 2621 @LENGTH@ 25


UPD MethodDeclaration@@public, void, MethodName:testClasspath, Exception,  @TO@ public, void, MethodName:testRedirectInvocation, Exception,  @AT@ 1123 @LENGTH@ 330
---UPD SimpleName@@MethodName:testClasspath @TO@ MethodName:testRedirectInvocation @AT@ 1135 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:stripsTemplateVariablesFromRequest,  @TO@ TypeDeclaration@@[public]BaseUriUnitTests,  @AT@ 2757 @LENGTH@ 280
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:stripsTemplateVariablesFromRequest,  @AT@ 2757 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:stripsTemplateVariablesFromRequest,  @AT@ 2764 @LENGTH@ 4
---INS SimpleName@@MethodName:stripsTemplateVariablesFromRequest @TO@ MethodDeclaration@@public, void, MethodName:stripsTemplateVariablesFromRequest,  @AT@ 2769 @LENGTH@ 34
---INS VariableDeclarationStatement@@BaseUri uri=new BaseUri(URI.create("foo")); @TO@ MethodDeclaration@@public, void, MethodName:stripsTemplateVariablesFromRequest,  @AT@ 2811 @LENGTH@ 45
------INS SimpleType@@BaseUri @TO@ VariableDeclarationStatement@@BaseUri uri=new BaseUri(URI.create("foo")); @AT@ 2811 @LENGTH@ 7
------INS VariableDeclarationFragment@@uri=new BaseUri(URI.create("foo")) @TO@ VariableDeclarationStatement@@BaseUri uri=new BaseUri(URI.create("foo")); @AT@ 2819 @LENGTH@ 36
---------INS SimpleName@@uri @TO@ VariableDeclarationFragment@@uri=new BaseUri(URI.create("foo")) @AT@ 2819 @LENGTH@ 3
---------INS ClassInstanceCreation@@BaseUri[URI.create("foo")] @TO@ VariableDeclarationFragment@@uri=new BaseUri(URI.create("foo")) @AT@ 2825 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@BaseUri[URI.create("foo")] @AT@ 2825 @LENGTH@ 3
------------INS SimpleType@@BaseUri @TO@ ClassInstanceCreation@@BaseUri[URI.create("foo")] @AT@ 2829 @LENGTH@ 7
------------INS MethodInvocation@@URI.create("foo") @TO@ ClassInstanceCreation@@BaseUri[URI.create("foo")] @AT@ 2837 @LENGTH@ 17
---------------INS SimpleName@@Name:URI @TO@ MethodInvocation@@URI.create("foo") @AT@ 2837 @LENGTH@ 3
---------------INS SimpleName@@MethodName:create:["foo"] @TO@ MethodInvocation@@URI.create("foo") @AT@ 2841 @LENGTH@ 13
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:create:["foo"] @AT@ 2848 @LENGTH@ 5
---INS VariableDeclarationStatement@@ServletWebRequest request=new ServletWebRequest(new MockHttpServletRequest("GET","/foo/bar{?projection}")); @TO@ MethodDeclaration@@public, void, MethodName:stripsTemplateVariablesFromRequest,  @AT@ 2860 @LENGTH@ 110
------INS SimpleType@@ServletWebRequest @TO@ VariableDeclarationStatement@@ServletWebRequest request=new ServletWebRequest(new MockHttpServletRequest("GET","/foo/bar{?projection}")); @AT@ 2860 @LENGTH@ 17
------INS VariableDeclarationFragment@@request=new ServletWebRequest(new MockHttpServletRequest("GET","/foo/bar{?projection}")) @TO@ VariableDeclarationStatement@@ServletWebRequest request=new ServletWebRequest(new MockHttpServletRequest("GET","/foo/bar{?projection}")); @AT@ 2878 @LENGTH@ 91
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new ServletWebRequest(new MockHttpServletRequest("GET","/foo/bar{?projection}")) @AT@ 2878 @LENGTH@ 7
---------INS ClassInstanceCreation@@ServletWebRequest[new MockHttpServletRequest("GET","/foo/bar{?projection}")] @TO@ VariableDeclarationFragment@@request=new ServletWebRequest(new MockHttpServletRequest("GET","/foo/bar{?projection}")) @AT@ 2888 @LENGTH@ 81
------------INS New@@new @TO@ ClassInstanceCreation@@ServletWebRequest[new MockHttpServletRequest("GET","/foo/bar{?projection}")] @AT@ 2888 @LENGTH@ 3
------------INS SimpleType@@ServletWebRequest @TO@ ClassInstanceCreation@@ServletWebRequest[new MockHttpServletRequest("GET","/foo/bar{?projection}")] @AT@ 2892 @LENGTH@ 17
------------INS ClassInstanceCreation@@MockHttpServletRequest["GET", "/foo/bar{?projection}"] @TO@ ClassInstanceCreation@@ServletWebRequest[new MockHttpServletRequest("GET","/foo/bar{?projection}")] @AT@ 2910 @LENGTH@ 58
---------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/foo/bar{?projection}"] @AT@ 2910 @LENGTH@ 3
---------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/foo/bar{?projection}"] @AT@ 2914 @LENGTH@ 22
---------------INS StringLiteral@@"GET" @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/foo/bar{?projection}"] @AT@ 2937 @LENGTH@ 5
---------------INS StringLiteral@@"/foo/bar{?projection}" @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/foo/bar{?projection}"] @AT@ 2944 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertThat(uri.getRepositoryLookupPath(request),is("/bar")) @TO@ MethodDeclaration@@public, void, MethodName:stripsTemplateVariablesFromRequest,  @AT@ 2973 @LENGTH@ 61
------INS MethodInvocation@@assertThat(uri.getRepositoryLookupPath(request),is("/bar")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(uri.getRepositoryLookupPath(request),is("/bar")) @AT@ 2973 @LENGTH@ 60
---------INS SimpleName@@MethodName:assertThat:[uri.getRepositoryLookupPath(request), is("/bar")] @TO@ MethodInvocation@@assertThat(uri.getRepositoryLookupPath(request),is("/bar")) @AT@ 2973 @LENGTH@ 60
------------INS MethodInvocation@@uri.getRepositoryLookupPath(request) @TO@ SimpleName@@MethodName:assertThat:[uri.getRepositoryLookupPath(request), is("/bar")] @AT@ 2984 @LENGTH@ 36
---------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.getRepositoryLookupPath(request) @AT@ 2984 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getRepositoryLookupPath:[request] @TO@ MethodInvocation@@uri.getRepositoryLookupPath(request) @AT@ 2988 @LENGTH@ 32
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:getRepositoryLookupPath:[request] @AT@ 3012 @LENGTH@ 7
------------INS MethodInvocation@@is("/bar") @TO@ SimpleName@@MethodName:assertThat:[uri.getRepositoryLookupPath(request), is("/bar")] @AT@ 3022 @LENGTH@ 10
---------------INS SimpleName@@MethodName:is:["/bar"] @TO@ MethodInvocation@@is("/bar") @AT@ 3022 @LENGTH@ 10
------------------INS StringLiteral@@"/bar" @TO@ SimpleName@@MethodName:is:["/bar"] @AT@ 3025 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:["/bar"] @TO@ MethodInvocation@@is("/bar") @AT@ 3022 @LENGTH@ 10
------------------INS StringLiteral@@"/bar" @TO@ SimpleName@@MethodName:is:["/bar"] @AT@ 3025 @LENGTH@ 6


INS FieldDeclaration@@private, final, static, Object, [lock=new Object()] @TO@ TypeDeclaration@@[public, abstract]AbstractDataStreamWriter, OutputStoreObjectSupport @AT@ 2618 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, static, Object, [lock=new Object()] @AT@ 2618 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, static, Object, [lock=new Object()] @AT@ 2626 @LENGTH@ 5
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, static, Object, [lock=new Object()] @AT@ 2632 @LENGTH@ 6
---INS SimpleType@@Object @TO@ FieldDeclaration@@private, final, static, Object, [lock=new Object()] @AT@ 2639 @LENGTH@ 6
---INS VariableDeclarationFragment@@lock=new Object() @TO@ FieldDeclaration@@private, final, static, Object, [lock=new Object()] @AT@ 2646 @LENGTH@ 19
------INS SimpleName@@lock @TO@ VariableDeclarationFragment@@lock=new Object() @AT@ 2646 @LENGTH@ 4
------INS ClassInstanceCreation@@Object[] @TO@ VariableDeclarationFragment@@lock=new Object() @AT@ 2653 @LENGTH@ 12
---------INS New@@new @TO@ ClassInstanceCreation@@Object[] @AT@ 2653 @LENGTH@ 3
---------INS SimpleType@@Object @TO@ ClassInstanceCreation@@Object[] @AT@ 2657 @LENGTH@ 6


UPD TypeDeclaration@@[public]LocaleConverter, [Converter<Locale>] @TO@ [@Component, public]LocaleConverter, [Converter<Locale>] @AT@ 1065 @LENGTH@ 854
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]LocaleConverter, [Converter<Locale>] @AT@ 1112 @LENGTH@ 10


UPD IfStatement@@if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(configuration.isNeedClientAuth());  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ if (sslContext != null) {  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(configuration.isNeedClientAuth());  if (configuration.getSslContextParameters() == null) {    engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 6324 @LENGTH@ 343
---UPD Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(configuration.isNeedClientAuth());  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));  return new SslHandler(engine);} @TO@ ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(configuration.isNeedClientAuth());  if (configuration.getSslContextParameters() == null) {    engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));  }  return new SslHandler(engine);} @AT@ 6348 @LENGTH@ 319
------INS IfStatement@@if (configuration.getSslContextParameters() == null) {  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));} @TO@ Block@@ThenBody:{  SSLEngine engine=sslContext.createSSLEngine();  engine.setUseClientMode(false);  engine.setNeedClientAuth(configuration.isNeedClientAuth());  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));  return new SslHandler(engine);} @AT@ 6539 @LENGTH@ 248
---------INS InfixExpression@@configuration.getSslContextParameters() == null @TO@ IfStatement@@if (configuration.getSslContextParameters() == null) {  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));} @AT@ 6543 @LENGTH@ 47
------------INS MethodInvocation@@configuration.getSslContextParameters() @TO@ InfixExpression@@configuration.getSslContextParameters() == null @AT@ 6543 @LENGTH@ 39
---------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getSslContextParameters() @AT@ 6543 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getSslContextParameters:[] @TO@ MethodInvocation@@configuration.getSslContextParameters() @AT@ 6557 @LENGTH@ 25
------------INS Operator@@== @TO@ InfixExpression@@configuration.getSslContextParameters() == null @AT@ 6582 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@configuration.getSslContextParameters() == null @AT@ 6586 @LENGTH@ 4
---------INS Block@@ThenBody:{  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));} @TO@ IfStatement@@if (configuration.getSslContextParameters() == null) {  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));} @AT@ 6592 @LENGTH@ 195
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(configuration.getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));} @AT@ 6539 @LENGTH@ 75
------------MOV ExpressionStatement@@MethodInvocation:engine.setEnabledProtocols(configuration.getEnabledProtocols().split(",")) @TO@ Block@@ThenBody:{  engine.setEnabledProtocols(configuration.getEnabledProtocols().split(","));} @AT@ 6539 @LENGTH@ 75


UPD TypeDeclaration@@[public]BooleanConverter, [Converter<Boolean>] @TO@ [@Component, public]BooleanConverter, [Converter<Boolean>] @AT@ 940 @LENGTH@ 1156
---INS MarkerAnnotation@@@Component @TO@ TypeDeclaration@@[public]BooleanConverter, [Converter<Boolean>] @AT@ 990 @LENGTH@ 10


UPD MethodDeclaration@@public, OAuth2Authentication, MethodName:loadAuthentication, String accessToken, AuthenticationException,  @TO@ public, OAuth2Authentication, MethodName:loadAuthentication, String accessToken, AuthenticationException, InvalidTokenException,  @AT@ 3324 @LENGTH@ 745
---INS SimpleType@@InvalidTokenException @TO@ MethodDeclaration@@public, OAuth2Authentication, MethodName:loadAuthentication, String accessToken, AuthenticationException,  @AT@ 3423 @LENGTH@ 21


MOV FieldDeclaration@@private, String, [username] @TO@ TypeDeclaration@@[public, abstract]RemoteFileConfiguration, GenericFileConfiguration @AT@ 1416 @LENGTH@ 24


UPD VariableDeclarationStatement@@HttpClient client=new DefaultHttpClient(); @TO@ HttpClient client=HttpClients.createDefault(); @AT@ 2021 @LENGTH@ 44
---UPD VariableDeclarationFragment@@client=new DefaultHttpClient() @TO@ client=HttpClients.createDefault() @AT@ 2032 @LENGTH@ 32
------INS MethodInvocation@@HttpClients.createDefault() @TO@ VariableDeclarationFragment@@client=new DefaultHttpClient() @AT@ 2035 @LENGTH@ 27
---------INS SimpleName@@Name:HttpClients @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 2035 @LENGTH@ 11
---------INS SimpleName@@MethodName:createDefault:[] @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 2047 @LENGTH@ 15
------DEL ClassInstanceCreation@@DefaultHttpClient[] @AT@ 2041 @LENGTH@ 23
---------DEL New@@new @AT@ 2041 @LENGTH@ 3
---------DEL SimpleType@@DefaultHttpClient @AT@ 2045 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:restConfiguration().component("jetty").scheme("http").port(port) @TO@ MethodInvocation:restConfiguration().component("jetty").host("localhost").scheme("http").port(port) @AT@ 1711 @LENGTH@ 65
---UPD MethodInvocation@@restConfiguration().component("jetty").scheme("http").port(port) @TO@ restConfiguration().component("jetty").host("localhost").scheme("http").port(port) @AT@ 1711 @LENGTH@ 64
------INS MethodInvocation@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().component("jetty").scheme("http").port(port) @AT@ 1720 @LENGTH@ 56
---------INS StringLiteral@@"localhost" @TO@ MethodInvocation@@MethodName:host:["localhost"] @AT@ 1764 @LENGTH@ 11


INS MethodDeclaration@@protected, void, MethodName:setExternalVaultPassword, String externalVaultPassword,  @TO@ TypeDeclaration@@[public]BasicVaultServerSetupTask, [ServerSetupTask] @AT@ 6617 @LENGTH@ 137
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:setExternalVaultPassword, String externalVaultPassword,  @AT@ 6617 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:setExternalVaultPassword, String externalVaultPassword,  @AT@ 6627 @LENGTH@ 4
---INS SimpleName@@MethodName:setExternalVaultPassword @TO@ MethodDeclaration@@protected, void, MethodName:setExternalVaultPassword, String externalVaultPassword,  @AT@ 6632 @LENGTH@ 24
---INS SingleVariableDeclaration@@String externalVaultPassword @TO@ MethodDeclaration@@protected, void, MethodName:setExternalVaultPassword, String externalVaultPassword,  @AT@ 6657 @LENGTH@ 28
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String externalVaultPassword @AT@ 6657 @LENGTH@ 6
------INS SimpleName@@externalVaultPassword @TO@ SingleVariableDeclaration@@String externalVaultPassword @AT@ 6664 @LENGTH@ 21
---INS ExpressionStatement@@Assignment:this.externalVaultPassword=externalVaultPassword @TO@ MethodDeclaration@@protected, void, MethodName:setExternalVaultPassword, String externalVaultPassword,  @AT@ 6697 @LENGTH@ 51
------INS Assignment@@this.externalVaultPassword=externalVaultPassword @TO@ ExpressionStatement@@Assignment:this.externalVaultPassword=externalVaultPassword @AT@ 6697 @LENGTH@ 50
---------INS FieldAccess@@this.externalVaultPassword @TO@ Assignment@@this.externalVaultPassword=externalVaultPassword @AT@ 6697 @LENGTH@ 26
------------INS ThisExpression@@this @TO@ FieldAccess@@this.externalVaultPassword @AT@ 6697 @LENGTH@ 4
------------INS SimpleName@@externalVaultPassword @TO@ FieldAccess@@this.externalVaultPassword @AT@ 6702 @LENGTH@ 21
---------INS Operator@@= @TO@ Assignment@@this.externalVaultPassword=externalVaultPassword @AT@ 6723 @LENGTH@ 1
---------INS SimpleName@@externalVaultPassword @TO@ Assignment@@this.externalVaultPassword=externalVaultPassword @AT@ 6726 @LENGTH@ 21


INS IfStatement@@if (headers != null) {  for (  Map.Entry<String,Object> header : headers.entrySet()) {    in.setHeader(header.getKey(),header.getValue());  }} @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 11111 @LENGTH@ 218
---INS InfixExpression@@headers != null @TO@ IfStatement@@if (headers != null) {  for (  Map.Entry<String,Object> header : headers.entrySet()) {    in.setHeader(header.getKey(),header.getValue());  }} @AT@ 11115 @LENGTH@ 15
------INS SimpleName@@headers @TO@ InfixExpression@@headers != null @AT@ 11115 @LENGTH@ 7
------INS Operator@@!= @TO@ InfixExpression@@headers != null @AT@ 11122 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@headers != null @AT@ 11126 @LENGTH@ 4
---INS Block@@ThenBody:{  for (  Map.Entry<String,Object> header : headers.entrySet()) {    in.setHeader(header.getKey(),header.getValue());  }} @TO@ IfStatement@@if (headers != null) {  for (  Map.Entry<String,Object> header : headers.entrySet()) {    in.setHeader(header.getKey(),header.getValue());  }} @AT@ 11132 @LENGTH@ 197
------MOV EnhancedForStatement@@for (Map.Entry<String,Object> header : headers.entrySet()) {  in.setHeader(header.getKey(),header.getValue());} @TO@ Block@@ThenBody:{  for (  Map.Entry<String,Object> header : headers.entrySet()) {    in.setHeader(header.getKey(),header.getValue());  }} @AT@ 11042 @LENGTH@ 149


MOV FieldDeclaration@@private, Map<String,Object>, [parameters=new HashMap<String,Object>()] @TO@ TypeDeclaration@@[public]DockerConfiguration,  @AT@ 1055 @LENGTH@ 71


UPD ExpressionStatement@@MethodInvocation:restConfiguration().component("jetty").scheme("http").port(getPort2()) @TO@ MethodInvocation:restConfiguration().component("jetty").host("localhost").scheme("http").port(getPort2()) @AT@ 1632 @LENGTH@ 71
---UPD MethodInvocation@@restConfiguration().component("jetty").scheme("http").port(getPort2()) @TO@ restConfiguration().component("jetty").host("localhost").scheme("http").port(getPort2()) @AT@ 1632 @LENGTH@ 70
------INS MethodInvocation@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().component("jetty").scheme("http").port(getPort2()) @AT@ 1641 @LENGTH@ 56
---------INS StringLiteral@@"localhost" @TO@ MethodInvocation@@MethodName:host:["localhost"] @AT@ 1685 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:noWarnIfSpringPatchVersionDoubleDigits, Exception,  @TO@ TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareForTest({SpringSecurityCoreVersion.class,SpringVersion.class}), public]SpringSecurityCoreVersionTests,  @AT@ 4303 @LENGTH@ 449
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:noWarnIfSpringPatchVersionDoubleDigits, Exception,  @AT@ 4303 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:noWarnIfSpringPatchVersionDoubleDigits, Exception,  @AT@ 4310 @LENGTH@ 4
---INS SimpleName@@MethodName:noWarnIfSpringPatchVersionDoubleDigits @TO@ MethodDeclaration@@public, void, MethodName:noWarnIfSpringPatchVersionDoubleDigits, Exception,  @AT@ 4315 @LENGTH@ 38
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:noWarnIfSpringPatchVersionDoubleDigits, Exception,  @AT@ 4363 @LENGTH@ 9
---INS VariableDeclarationStatement@@String minSpringVersion="3.2.8.RELEASE"; @TO@ MethodDeclaration@@public, void, MethodName:noWarnIfSpringPatchVersionDoubleDigits, Exception,  @AT@ 4383 @LENGTH@ 42
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String minSpringVersion="3.2.8.RELEASE"; @AT@ 4383 @LENGTH@ 6
------INS VariableDeclarationFragment@@minSpringVersion="3.2.8.RELEASE" @TO@ VariableDeclarationStatement@@String minSpringVersion="3.2.8.RELEASE"; @AT@ 4390 @LENGTH@ 34
---------INS SimpleName@@minSpringVersion @TO@ VariableDeclarationFragment@@minSpringVersion="3.2.8.RELEASE" @AT@ 4390 @LENGTH@ 16
---------INS StringLiteral@@"3.2.8.RELEASE" @TO@ VariableDeclarationFragment@@minSpringVersion="3.2.8.RELEASE" @AT@ 4409 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:spy(SpringSecurityCoreVersion.class) @TO@ MethodDeclaration@@public, void, MethodName:noWarnIfSpringPatchVersionDoubleDigits, Exception,  @AT@ 4434 @LENGTH@ 37
------INS MethodInvocation@@spy(SpringSecurityCoreVersion.class) @TO@ ExpressionStatement@@MethodInvocation:spy(SpringSecurityCoreVersion.class) @AT@ 4434 @LENGTH@ 36
---------INS SimpleName@@MethodName:spy:[SpringSecurityCoreVersion.class] @TO@ MethodInvocation@@spy(SpringSecurityCoreVersion.class) @AT@ 4434 @LENGTH@ 36
------------INS TypeLiteral@@SpringSecurityCoreVersion.class @TO@ SimpleName@@MethodName:spy:[SpringSecurityCoreVersion.class] @AT@ 4438 @LENGTH@ 31
---INS ExpressionStatement@@MethodInvocation:spy(SpringVersion.class) @TO@ MethodDeclaration@@public, void, MethodName:noWarnIfSpringPatchVersionDoubleDigits, Exception,  @AT@ 4480 @LENGTH@ 25
------INS MethodInvocation@@spy(SpringVersion.class) @TO@ ExpressionStatement@@MethodInvocation:spy(SpringVersion.class) @AT@ 4480 @LENGTH@ 24
---------INS SimpleName@@MethodName:spy:[SpringVersion.class] @TO@ MethodInvocation@@spy(SpringVersion.class) @AT@ 4480 @LENGTH@ 24
------------INS TypeLiteral@@SpringVersion.class @TO@ SimpleName@@MethodName:spy:[SpringVersion.class] @AT@ 4484 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:when(SpringSecurityCoreVersion.getVersion()).thenReturn("3.2.0.RELEASE") @TO@ MethodDeclaration@@public, void, MethodName:noWarnIfSpringPatchVersionDoubleDigits, Exception,  @AT@ 4514 @LENGTH@ 73
------INS MethodInvocation@@when(SpringSecurityCoreVersion.getVersion()).thenReturn("3.2.0.RELEASE") @TO@ ExpressionStatement@@MethodInvocation:when(SpringSecurityCoreVersion.getVersion()).thenReturn("3.2.0.RELEASE") @AT@ 4514 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:when:[SpringSecurityCoreVersion.getVersion()] @TO@ MethodInvocation@@when(SpringSecurityCoreVersion.getVersion()).thenReturn("3.2.0.RELEASE") @AT@ 4514 @LENGTH@ 44
------------INS MethodInvocation@@SpringSecurityCoreVersion.getVersion() @TO@ MethodInvocation@@MethodName:when:[SpringSecurityCoreVersion.getVersion()] @AT@ 4519 @LENGTH@ 38
---------------INS SimpleName@@Name:SpringSecurityCoreVersion @TO@ MethodInvocation@@SpringSecurityCoreVersion.getVersion() @AT@ 4519 @LENGTH@ 25
---------------INS SimpleName@@MethodName:getVersion:[] @TO@ MethodInvocation@@SpringSecurityCoreVersion.getVersion() @AT@ 4545 @LENGTH@ 12
---------INS SimpleName@@MethodName:thenReturn:["3.2.0.RELEASE"] @TO@ MethodInvocation@@when(SpringSecurityCoreVersion.getVersion()).thenReturn("3.2.0.RELEASE") @AT@ 4559 @LENGTH@ 27
------------INS StringLiteral@@"3.2.0.RELEASE" @TO@ SimpleName@@MethodName:thenReturn:["3.2.0.RELEASE"] @AT@ 4570 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:when(SpringVersion.getVersion()).thenReturn("3.2.10.RELEASE") @TO@ MethodDeclaration@@public, void, MethodName:noWarnIfSpringPatchVersionDoubleDigits, Exception,  @AT@ 4596 @LENGTH@ 62
------INS MethodInvocation@@when(SpringVersion.getVersion()).thenReturn("3.2.10.RELEASE") @TO@ ExpressionStatement@@MethodInvocation:when(SpringVersion.getVersion()).thenReturn("3.2.10.RELEASE") @AT@ 4596 @LENGTH@ 61
---------INS MethodInvocation@@MethodName:when:[SpringVersion.getVersion()] @TO@ MethodInvocation@@when(SpringVersion.getVersion()).thenReturn("3.2.10.RELEASE") @AT@ 4596 @LENGTH@ 32
------------INS MethodInvocation@@SpringVersion.getVersion() @TO@ MethodInvocation@@MethodName:when:[SpringVersion.getVersion()] @AT@ 4601 @LENGTH@ 26
---------------INS SimpleName@@Name:SpringVersion @TO@ MethodInvocation@@SpringVersion.getVersion() @AT@ 4601 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getVersion:[] @TO@ MethodInvocation@@SpringVersion.getVersion() @AT@ 4615 @LENGTH@ 12
---------INS SimpleName@@MethodName:thenReturn:["3.2.10.RELEASE"] @TO@ MethodInvocation@@when(SpringVersion.getVersion()).thenReturn("3.2.10.RELEASE") @AT@ 4629 @LENGTH@ 28
------------INS StringLiteral@@"3.2.10.RELEASE" @TO@ SimpleName@@MethodName:thenReturn:["3.2.10.RELEASE"] @AT@ 4640 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:performChecks(minSpringVersion) @TO@ MethodDeclaration@@public, void, MethodName:noWarnIfSpringPatchVersionDoubleDigits, Exception,  @AT@ 4668 @LENGTH@ 32
------INS MethodInvocation@@performChecks(minSpringVersion) @TO@ ExpressionStatement@@MethodInvocation:performChecks(minSpringVersion) @AT@ 4668 @LENGTH@ 31
---------INS SimpleName@@MethodName:performChecks:[minSpringVersion] @TO@ MethodInvocation@@performChecks(minSpringVersion) @AT@ 4668 @LENGTH@ 31
------------INS SimpleName@@minSpringVersion @TO@ SimpleName@@MethodName:performChecks:[minSpringVersion] @AT@ 4682 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:verify(logger,never()).warn(any()) @TO@ MethodDeclaration@@public, void, MethodName:noWarnIfSpringPatchVersionDoubleDigits, Exception,  @AT@ 4710 @LENGTH@ 36
------INS MethodInvocation@@verify(logger,never()).warn(any()) @TO@ ExpressionStatement@@MethodInvocation:verify(logger,never()).warn(any()) @AT@ 4710 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:verify:[logger, never()] @TO@ MethodInvocation@@verify(logger,never()).warn(any()) @AT@ 4710 @LENGTH@ 23
------------INS SimpleName@@logger @TO@ MethodInvocation@@MethodName:verify:[logger, never()] @AT@ 4717 @LENGTH@ 6
------------INS MethodInvocation@@MethodName:never:[] @TO@ MethodInvocation@@MethodName:verify:[logger, never()] @AT@ 4725 @LENGTH@ 7
---------INS SimpleName@@MethodName:warn:[any()] @TO@ MethodInvocation@@verify(logger,never()).warn(any()) @AT@ 4734 @LENGTH@ 11
------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:warn:[any()] @AT@ 4739 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:camelToCxfHeaderMap.put(Exchange.CONTENT_TYPE,org.apache.cxf.message.Message.CONTENT_TYPE) @TO@ MethodDeclaration@@public, voidMethodName:DefaultCxfRsBinding,  @AT@ 2567 @LENGTH@ 92
---INS MethodInvocation@@camelToCxfHeaderMap.put(Exchange.CONTENT_TYPE,org.apache.cxf.message.Message.CONTENT_TYPE) @TO@ ExpressionStatement@@MethodInvocation:camelToCxfHeaderMap.put(Exchange.CONTENT_TYPE,org.apache.cxf.message.Message.CONTENT_TYPE) @AT@ 2567 @LENGTH@ 91
------INS SimpleName@@Name:camelToCxfHeaderMap @TO@ MethodInvocation@@camelToCxfHeaderMap.put(Exchange.CONTENT_TYPE,org.apache.cxf.message.Message.CONTENT_TYPE) @AT@ 2567 @LENGTH@ 19
------INS SimpleName@@MethodName:put:[Exchange.CONTENT_TYPE, org.apache.cxf.message.Message.CONTENT_TYPE] @TO@ MethodInvocation@@camelToCxfHeaderMap.put(Exchange.CONTENT_TYPE,org.apache.cxf.message.Message.CONTENT_TYPE) @AT@ 2587 @LENGTH@ 71
---------INS QualifiedName@@Exchange.CONTENT_TYPE @TO@ SimpleName@@MethodName:put:[Exchange.CONTENT_TYPE, org.apache.cxf.message.Message.CONTENT_TYPE] @AT@ 2591 @LENGTH@ 21
------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.CONTENT_TYPE @AT@ 2591 @LENGTH@ 8
------------INS SimpleName@@CONTENT_TYPE @TO@ QualifiedName@@Exchange.CONTENT_TYPE @AT@ 2600 @LENGTH@ 12
---------INS QualifiedName@@org.apache.cxf.message.Message.CONTENT_TYPE @TO@ SimpleName@@MethodName:put:[Exchange.CONTENT_TYPE, org.apache.cxf.message.Message.CONTENT_TYPE] @AT@ 2614 @LENGTH@ 43
------------INS QualifiedName@@org.apache.cxf.message.Message @TO@ QualifiedName@@org.apache.cxf.message.Message.CONTENT_TYPE @AT@ 2614 @LENGTH@ 30
---------------INS QualifiedName@@org.apache.cxf.message @TO@ QualifiedName@@org.apache.cxf.message.Message @AT@ 2614 @LENGTH@ 22
------------------INS QualifiedName@@org.apache.cxf @TO@ QualifiedName@@org.apache.cxf.message @AT@ 2614 @LENGTH@ 14
---------------------INS QualifiedName@@org.apache @TO@ QualifiedName@@org.apache.cxf @AT@ 2614 @LENGTH@ 10
------------------------INS SimpleName@@org @TO@ QualifiedName@@org.apache @AT@ 2614 @LENGTH@ 3
------------------------INS SimpleName@@apache @TO@ QualifiedName@@org.apache @AT@ 2618 @LENGTH@ 6
---------------------INS SimpleName@@cxf @TO@ QualifiedName@@org.apache.cxf @AT@ 2625 @LENGTH@ 3
------------------INS SimpleName@@message @TO@ QualifiedName@@org.apache.cxf.message @AT@ 2629 @LENGTH@ 7
---------------INS SimpleName@@Message @TO@ QualifiedName@@org.apache.cxf.message.Message @AT@ 2637 @LENGTH@ 7
------------INS SimpleName@@CONTENT_TYPE @TO@ QualifiedName@@org.apache.cxf.message.Message.CONTENT_TYPE @AT@ 2645 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @TO@ TypeDeclaration@@[public]FileSystemDeploymentServiceUnitTestCase,  @AT@ 72163 @LENGTH@ 620
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @AT@ 72163 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @AT@ 72170 @LENGTH@ 4
---INS SimpleName@@MethodName:testForcedUndeployment @TO@ MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @AT@ 72175 @LENGTH@ 22
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @AT@ 72207 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockServerController sc=new MockServerController("foo.war","failure.ear"); @TO@ MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @AT@ 72227 @LENGTH@ 77
------INS SimpleType@@MockServerController @TO@ VariableDeclarationStatement@@MockServerController sc=new MockServerController("foo.war","failure.ear"); @AT@ 72227 @LENGTH@ 20
------INS VariableDeclarationFragment@@sc=new MockServerController("foo.war","failure.ear") @TO@ VariableDeclarationStatement@@MockServerController sc=new MockServerController("foo.war","failure.ear"); @AT@ 72248 @LENGTH@ 55
---------INS SimpleName@@sc @TO@ VariableDeclarationFragment@@sc=new MockServerController("foo.war","failure.ear") @AT@ 72248 @LENGTH@ 2
---------INS ClassInstanceCreation@@MockServerController["foo.war", "failure.ear"] @TO@ VariableDeclarationFragment@@sc=new MockServerController("foo.war","failure.ear") @AT@ 72253 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@MockServerController["foo.war", "failure.ear"] @AT@ 72253 @LENGTH@ 3
------------INS SimpleType@@MockServerController @TO@ ClassInstanceCreation@@MockServerController["foo.war", "failure.ear"] @AT@ 72257 @LENGTH@ 20
------------INS StringLiteral@@"foo.war" @TO@ ClassInstanceCreation@@MockServerController["foo.war", "failure.ear"] @AT@ 72278 @LENGTH@ 9
------------INS StringLiteral@@"failure.ear" @TO@ ClassInstanceCreation@@MockServerController["foo.war", "failure.ear"] @AT@ 72289 @LENGTH@ 13
---INS VariableDeclarationStatement@@TesteeSet ts=createTestee(sc); @TO@ MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @AT@ 72313 @LENGTH@ 32
------INS SimpleType@@TesteeSet @TO@ VariableDeclarationStatement@@TesteeSet ts=createTestee(sc); @AT@ 72313 @LENGTH@ 9
------INS VariableDeclarationFragment@@ts=createTestee(sc) @TO@ VariableDeclarationStatement@@TesteeSet ts=createTestee(sc); @AT@ 72323 @LENGTH@ 21
---------INS SimpleName@@ts @TO@ VariableDeclarationFragment@@ts=createTestee(sc) @AT@ 72323 @LENGTH@ 2
---------INS MethodInvocation@@createTestee(sc) @TO@ VariableDeclarationFragment@@ts=createTestee(sc) @AT@ 72328 @LENGTH@ 16
------------INS SimpleName@@MethodName:createTestee:[sc] @TO@ MethodInvocation@@createTestee(sc) @AT@ 72328 @LENGTH@ 16
---------------INS SimpleName@@sc @TO@ SimpleName@@MethodName:createTestee:[sc] @AT@ 72341 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:ts.controller.externallyDeployed.add("foo.war") @TO@ MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @AT@ 72354 @LENGTH@ 48
------INS MethodInvocation@@ts.controller.externallyDeployed.add("foo.war") @TO@ ExpressionStatement@@MethodInvocation:ts.controller.externallyDeployed.add("foo.war") @AT@ 72354 @LENGTH@ 47
---------INS QualifiedName@@Name:ts.controller.externallyDeployed @TO@ MethodInvocation@@ts.controller.externallyDeployed.add("foo.war") @AT@ 72354 @LENGTH@ 32
---------INS SimpleName@@MethodName:add:["foo.war"] @TO@ MethodInvocation@@ts.controller.externallyDeployed.add("foo.war") @AT@ 72387 @LENGTH@ 14
------------INS StringLiteral@@"foo.war" @TO@ SimpleName@@MethodName:add:["foo.war"] @AT@ 72391 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:ts.controller.addCompositeSuccessResponse(1) @TO@ MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @AT@ 72411 @LENGTH@ 45
------INS MethodInvocation@@ts.controller.addCompositeSuccessResponse(1) @TO@ ExpressionStatement@@MethodInvocation:ts.controller.addCompositeSuccessResponse(1) @AT@ 72411 @LENGTH@ 44
---------INS QualifiedName@@Name:ts.controller @TO@ MethodInvocation@@ts.controller.addCompositeSuccessResponse(1) @AT@ 72411 @LENGTH@ 13
---------INS SimpleName@@MethodName:addCompositeSuccessResponse:[1] @TO@ MethodInvocation@@ts.controller.addCompositeSuccessResponse(1) @AT@ 72425 @LENGTH@ 30
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:addCompositeSuccessResponse:[1] @AT@ 72453 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(ts.controller.deployed.size(),is(2)) @TO@ MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @AT@ 72465 @LENGTH@ 50
------INS MethodInvocation@@assertThat(ts.controller.deployed.size(),is(2)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(ts.controller.deployed.size(),is(2)) @AT@ 72465 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertThat:[ts.controller.deployed.size(), is(2)] @TO@ MethodInvocation@@assertThat(ts.controller.deployed.size(),is(2)) @AT@ 72465 @LENGTH@ 49
------------INS MethodInvocation@@ts.controller.deployed.size() @TO@ SimpleName@@MethodName:assertThat:[ts.controller.deployed.size(), is(2)] @AT@ 72476 @LENGTH@ 29
---------------INS QualifiedName@@Name:ts.controller.deployed @TO@ MethodInvocation@@ts.controller.deployed.size() @AT@ 72476 @LENGTH@ 22
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@ts.controller.deployed.size() @AT@ 72499 @LENGTH@ 6
------------INS MethodInvocation@@is(2) @TO@ SimpleName@@MethodName:assertThat:[ts.controller.deployed.size(), is(2)] @AT@ 72508 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[2] @TO@ MethodInvocation@@is(2) @AT@ 72508 @LENGTH@ 5
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:is:[2] @AT@ 72511 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[2] @TO@ MethodInvocation@@is(2) @AT@ 72508 @LENGTH@ 5
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:is:[2] @AT@ 72511 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:ts.testee.scan(true,new DefaultDeploymentOperations(sc),true) @TO@ MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @AT@ 72524 @LENGTH@ 64
------INS MethodInvocation@@ts.testee.scan(true,new DefaultDeploymentOperations(sc),true) @TO@ ExpressionStatement@@MethodInvocation:ts.testee.scan(true,new DefaultDeploymentOperations(sc),true) @AT@ 72524 @LENGTH@ 63
---------INS QualifiedName@@Name:ts.testee @TO@ MethodInvocation@@ts.testee.scan(true,new DefaultDeploymentOperations(sc),true) @AT@ 72524 @LENGTH@ 9
---------INS SimpleName@@MethodName:scan:[true, new DefaultDeploymentOperations(sc), true] @TO@ MethodInvocation@@ts.testee.scan(true,new DefaultDeploymentOperations(sc),true) @AT@ 72534 @LENGTH@ 53
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:scan:[true, new DefaultDeploymentOperations(sc), true] @AT@ 72539 @LENGTH@ 4
------------INS ClassInstanceCreation@@DefaultDeploymentOperations[sc] @TO@ SimpleName@@MethodName:scan:[true, new DefaultDeploymentOperations(sc), true] @AT@ 72545 @LENGTH@ 35
---------------INS New@@new @TO@ ClassInstanceCreation@@DefaultDeploymentOperations[sc] @AT@ 72545 @LENGTH@ 3
---------------INS SimpleType@@DefaultDeploymentOperations @TO@ ClassInstanceCreation@@DefaultDeploymentOperations[sc] @AT@ 72549 @LENGTH@ 27
---------------INS SimpleName@@sc @TO@ ClassInstanceCreation@@DefaultDeploymentOperations[sc] @AT@ 72577 @LENGTH@ 2
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:scan:[true, new DefaultDeploymentOperations(sc), true] @AT@ 72582 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(ts.controller.deployed.size(),is(1)) @TO@ MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @AT@ 72597 @LENGTH@ 50
------INS MethodInvocation@@assertThat(ts.controller.deployed.size(),is(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(ts.controller.deployed.size(),is(1)) @AT@ 72597 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertThat:[ts.controller.deployed.size(), is(1)] @TO@ MethodInvocation@@assertThat(ts.controller.deployed.size(),is(1)) @AT@ 72597 @LENGTH@ 49
------------INS MethodInvocation@@ts.controller.deployed.size() @TO@ SimpleName@@MethodName:assertThat:[ts.controller.deployed.size(), is(1)] @AT@ 72608 @LENGTH@ 29
---------------INS QualifiedName@@Name:ts.controller.deployed @TO@ MethodInvocation@@ts.controller.deployed.size() @AT@ 72608 @LENGTH@ 22
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@ts.controller.deployed.size() @AT@ 72631 @LENGTH@ 6
------------INS MethodInvocation@@is(1) @TO@ SimpleName@@MethodName:assertThat:[ts.controller.deployed.size(), is(1)] @AT@ 72640 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 72640 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 72643 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 72640 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 72643 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(ts.controller.deployed.keySet(),hasItems("foo.war")) @TO@ MethodDeclaration@@public, void, MethodName:testForcedUndeployment, Exception,  @AT@ 72712 @LENGTH@ 65
------INS MethodInvocation@@assertThat(ts.controller.deployed.keySet(),hasItems("foo.war")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(ts.controller.deployed.keySet(),hasItems("foo.war")) @AT@ 72712 @LENGTH@ 64
---------INS SimpleName@@MethodName:assertThat:[ts.controller.deployed.keySet(), hasItems("foo.war")] @TO@ MethodInvocation@@assertThat(ts.controller.deployed.keySet(),hasItems("foo.war")) @AT@ 72712 @LENGTH@ 64
------------INS MethodInvocation@@ts.controller.deployed.keySet() @TO@ SimpleName@@MethodName:assertThat:[ts.controller.deployed.keySet(), hasItems("foo.war")] @AT@ 72723 @LENGTH@ 31
---------------INS QualifiedName@@Name:ts.controller.deployed @TO@ MethodInvocation@@ts.controller.deployed.keySet() @AT@ 72723 @LENGTH@ 22
---------------INS SimpleName@@MethodName:keySet:[] @TO@ MethodInvocation@@ts.controller.deployed.keySet() @AT@ 72746 @LENGTH@ 8
------------INS MethodInvocation@@hasItems("foo.war") @TO@ SimpleName@@MethodName:assertThat:[ts.controller.deployed.keySet(), hasItems("foo.war")] @AT@ 72756 @LENGTH@ 19
---------------INS SimpleName@@MethodName:hasItems:["foo.war"] @TO@ MethodInvocation@@hasItems("foo.war") @AT@ 72756 @LENGTH@ 19
------------------INS StringLiteral@@"foo.war" @TO@ SimpleName@@MethodName:hasItems:["foo.war"] @AT@ 72765 @LENGTH@ 9


UPD FieldDeclaration@@public, static, final, String, [JPA_MAPPING_CONTEXT_BEAN_NAME="jpaMapppingContext"] @TO@ public, static, final, String, [JPA_MAPPING_CONTEXT_BEAN_NAME="jpaMappingContext"] @AT@ 838 @LENGTH@ 80
---UPD VariableDeclarationFragment@@JPA_MAPPING_CONTEXT_BEAN_NAME="jpaMapppingContext" @TO@ JPA_MAPPING_CONTEXT_BEAN_NAME="jpaMappingContext" @AT@ 865 @LENGTH@ 52
------UPD StringLiteral@@"jpaMapppingContext" @TO@ "jpaMappingContext" @AT@ 897 @LENGTH@ 20


UPD TypeDeclaration@@[public]HttpEndpoint, DefaultPollingEndpoint[HeaderFilterStrategyAware] @TO@ [@UriEndpoint(scheme="http4",consumerClass=HttpConsumer.class), public]HttpEndpoint, DefaultPollingEndpoint[HeaderFilterStrategyAware] @AT@ 1779 @LENGTH@ 11668
---INS NormalAnnotation@@@UriEndpoint(scheme="http4",consumerClass=HttpConsumer.class) @TO@ TypeDeclaration@@[public]HttpEndpoint, DefaultPollingEndpoint[HeaderFilterStrategyAware] @AT@ 1858 @LENGTH@ 66


UPD EnhancedForStatement@@for (EntityManagerFactoryBeanDefinition definitions : getEntityManagerFactoryBeanDefinitions(beanFactory)) {  if (!(definitions.beanFactory instanceof BeanDefinitionRegistry)) {    continue;  }  BeanDefinitionBuilder builder=BeanDefinitionBuilder.rootBeanDefinition("org.springframework.orm.jpa.SharedEntityManagerCreator");  builder.setFactoryMethod("createSharedEntityManager");  builder.addConstructorArgReference(definitions.beanName);  AbstractBeanDefinition emBeanDefinition=builder.getRawBeanDefinition();  emBeanDefinition.addQualifier(new AutowireCandidateQualifier(Qualifier.class,definitions.beanName));  emBeanDefinition.setScope(definitions.beanDefinition.getScope());  emBeanDefinition.setSource(definitions.beanDefinition.getSource());  BeanDefinitionReaderUtils.registerWithGeneratedName(emBeanDefinition,(BeanDefinitionRegistry)definitions.beanFactory);} @TO@ for (EntityManagerFactoryBeanDefinition definition : getEntityManagerFactoryBeanDefinitions(beanFactory)) {  if (!(definition.getBeanFactory() instanceof BeanDefinitionRegistry)) {    continue;  }  BeanDefinitionBuilder builder=BeanDefinitionBuilder.rootBeanDefinition("org.springframework.orm.jpa.SharedEntityManagerCreator");  builder.setFactoryMethod("createSharedEntityManager");  builder.addConstructorArgReference(definition.getBeanName());  AbstractBeanDefinition emBeanDefinition=builder.getRawBeanDefinition();  emBeanDefinition.addQualifier(new AutowireCandidateQualifier(Qualifier.class,definition.getBeanName()));  emBeanDefinition.setScope(definition.getBeanDefinition().getScope());  emBeanDefinition.setSource(definition.getBeanDefinition().getSource());  BeanDefinitionReaderUtils.registerWithGeneratedName(emBeanDefinition,(BeanDefinitionRegistry)definition.getBeanFactory());} @AT@ 2624 @LENGTH@ 918
---UPD SingleVariableDeclaration@@EntityManagerFactoryBeanDefinition definitions @TO@ EntityManagerFactoryBeanDefinition definition @AT@ 2629 @LENGTH@ 46
------UPD SimpleName@@definitions @TO@ definition @AT@ 2664 @LENGTH@ 11
---UPD IfStatement@@if (!(definitions.beanFactory instanceof BeanDefinitionRegistry)) {  continue;} @TO@ if (!(definition.getBeanFactory() instanceof BeanDefinitionRegistry)) {  continue;} @AT@ 2737 @LENGTH@ 86
------UPD PrefixExpression@@!(definitions.beanFactory instanceof BeanDefinitionRegistry) @TO@ !(definition.getBeanFactory() instanceof BeanDefinitionRegistry) @AT@ 2741 @LENGTH@ 60
---------UPD ParenthesizedExpression@@(definitions.beanFactory instanceof BeanDefinitionRegistry) @TO@ (definition.getBeanFactory() instanceof BeanDefinitionRegistry) @AT@ 2742 @LENGTH@ 59
------------UPD InstanceofExpression@@definitions.beanFactory instanceof BeanDefinitionRegistry @TO@ definition.getBeanFactory() instanceof BeanDefinitionRegistry @AT@ 2743 @LENGTH@ 57
---------------INS MethodInvocation@@definition.getBeanFactory() @TO@ InstanceofExpression@@definitions.beanFactory instanceof BeanDefinitionRegistry @AT@ 2742 @LENGTH@ 27
------------------INS SimpleName@@Name:definition @TO@ MethodInvocation@@definition.getBeanFactory() @AT@ 2742 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getBeanFactory:[] @TO@ MethodInvocation@@definition.getBeanFactory() @AT@ 2753 @LENGTH@ 16
---------------DEL QualifiedName@@definitions.beanFactory @AT@ 2743 @LENGTH@ 23
------------------DEL SimpleName@@definitions @AT@ 2743 @LENGTH@ 11
------------------DEL SimpleName@@beanFactory @AT@ 2755 @LENGTH@ 11
---UPD ExpressionStatement@@MethodInvocation:builder.addConstructorArgReference(definitions.beanName) @TO@ MethodInvocation:builder.addConstructorArgReference(definition.getBeanName()) @AT@ 3027 @LENGTH@ 57
------UPD MethodInvocation@@builder.addConstructorArgReference(definitions.beanName) @TO@ builder.addConstructorArgReference(definition.getBeanName()) @AT@ 3027 @LENGTH@ 56
---------UPD SimpleName@@MethodName:addConstructorArgReference:[definitions.beanName] @TO@ MethodName:addConstructorArgReference:[definition.getBeanName()] @AT@ 3035 @LENGTH@ 48
------------DEL QualifiedName@@definitions.beanName @AT@ 3062 @LENGTH@ 20
---------------DEL SimpleName@@definitions @AT@ 3062 @LENGTH@ 11
---------------DEL SimpleName@@beanName @AT@ 3074 @LENGTH@ 8
------------INS MethodInvocation@@definition.getBeanName() @TO@ SimpleName@@MethodName:addConstructorArgReference:[definitions.beanName] @AT@ 3065 @LENGTH@ 24
---------------INS SimpleName@@Name:definition @TO@ MethodInvocation@@definition.getBeanName() @AT@ 3065 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getBeanName:[] @TO@ MethodInvocation@@definition.getBeanName() @AT@ 3076 @LENGTH@ 13
---UPD ExpressionStatement@@MethodInvocation:emBeanDefinition.addQualifier(new AutowireCandidateQualifier(Qualifier.class,definitions.beanName)) @TO@ MethodInvocation:emBeanDefinition.addQualifier(new AutowireCandidateQualifier(Qualifier.class,definition.getBeanName())) @AT@ 3167 @LENGTH@ 101
------UPD MethodInvocation@@emBeanDefinition.addQualifier(new AutowireCandidateQualifier(Qualifier.class,definitions.beanName)) @TO@ emBeanDefinition.addQualifier(new AutowireCandidateQualifier(Qualifier.class,definition.getBeanName())) @AT@ 3167 @LENGTH@ 100
---------UPD SimpleName@@MethodName:addQualifier:[new AutowireCandidateQualifier(Qualifier.class,definitions.beanName)] @TO@ MethodName:addQualifier:[new AutowireCandidateQualifier(Qualifier.class,definition.getBeanName())] @AT@ 3184 @LENGTH@ 83
------------UPD ClassInstanceCreation@@AutowireCandidateQualifier[Qualifier.class, definitions.beanName] @TO@ AutowireCandidateQualifier[Qualifier.class, definition.getBeanName()] @AT@ 3197 @LENGTH@ 69
---------------DEL QualifiedName@@definitions.beanName @AT@ 3245 @LENGTH@ 20
------------------DEL SimpleName@@definitions @AT@ 3245 @LENGTH@ 11
------------------DEL SimpleName@@beanName @AT@ 3257 @LENGTH@ 8
---------------INS MethodInvocation@@definition.getBeanName() @TO@ ClassInstanceCreation@@AutowireCandidateQualifier[Qualifier.class, definitions.beanName] @AT@ 3252 @LENGTH@ 24
------------------INS SimpleName@@Name:definition @TO@ MethodInvocation@@definition.getBeanName() @AT@ 3252 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getBeanName:[] @TO@ MethodInvocation@@definition.getBeanName() @AT@ 3263 @LENGTH@ 13
---UPD ExpressionStatement@@MethodInvocation:emBeanDefinition.setScope(definitions.beanDefinition.getScope()) @TO@ MethodInvocation:emBeanDefinition.setScope(definition.getBeanDefinition().getScope()) @AT@ 3272 @LENGTH@ 65
------UPD MethodInvocation@@emBeanDefinition.setScope(definitions.beanDefinition.getScope()) @TO@ emBeanDefinition.setScope(definition.getBeanDefinition().getScope()) @AT@ 3272 @LENGTH@ 64
---------UPD SimpleName@@MethodName:setScope:[definitions.beanDefinition.getScope()] @TO@ MethodName:setScope:[definition.getBeanDefinition().getScope()] @AT@ 3289 @LENGTH@ 47
------------UPD MethodInvocation@@definitions.beanDefinition.getScope() @TO@ definition.getBeanDefinition().getScope() @AT@ 3298 @LENGTH@ 37
---------------DEL QualifiedName@@Name:definitions.beanDefinition @AT@ 3298 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:getBeanDefinition:[] @TO@ MethodInvocation@@definitions.beanDefinition.getScope() @AT@ 3309 @LENGTH@ 30
---------------INS SimpleName@@Name:definition @TO@ MethodInvocation@@definitions.beanDefinition.getScope() @AT@ 3309 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:emBeanDefinition.setSource(definitions.beanDefinition.getSource()) @TO@ MethodInvocation:emBeanDefinition.setSource(definition.getBeanDefinition().getSource()) @AT@ 3341 @LENGTH@ 67
------UPD MethodInvocation@@emBeanDefinition.setSource(definitions.beanDefinition.getSource()) @TO@ emBeanDefinition.setSource(definition.getBeanDefinition().getSource()) @AT@ 3341 @LENGTH@ 66
---------UPD SimpleName@@MethodName:setSource:[definitions.beanDefinition.getSource()] @TO@ MethodName:setSource:[definition.getBeanDefinition().getSource()] @AT@ 3358 @LENGTH@ 49
------------UPD MethodInvocation@@definitions.beanDefinition.getSource() @TO@ definition.getBeanDefinition().getSource() @AT@ 3368 @LENGTH@ 38
---------------DEL QualifiedName@@Name:definitions.beanDefinition @AT@ 3368 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:getBeanDefinition:[] @TO@ MethodInvocation@@definitions.beanDefinition.getSource() @AT@ 3383 @LENGTH@ 30
---------------INS SimpleName@@Name:definition @TO@ MethodInvocation@@definitions.beanDefinition.getSource() @AT@ 3383 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:BeanDefinitionReaderUtils.registerWithGeneratedName(emBeanDefinition,(BeanDefinitionRegistry)definitions.beanFactory) @TO@ MethodInvocation:BeanDefinitionReaderUtils.registerWithGeneratedName(emBeanDefinition,(BeanDefinitionRegistry)definition.getBeanFactory()) @AT@ 3413 @LENGTH@ 125
------UPD MethodInvocation@@BeanDefinitionReaderUtils.registerWithGeneratedName(emBeanDefinition,(BeanDefinitionRegistry)definitions.beanFactory) @TO@ BeanDefinitionReaderUtils.registerWithGeneratedName(emBeanDefinition,(BeanDefinitionRegistry)definition.getBeanFactory()) @AT@ 3413 @LENGTH@ 124
---------UPD SimpleName@@MethodName:registerWithGeneratedName:[emBeanDefinition, (BeanDefinitionRegistry)definitions.beanFactory] @TO@ MethodName:registerWithGeneratedName:[emBeanDefinition, (BeanDefinitionRegistry)definition.getBeanFactory()] @AT@ 3439 @LENGTH@ 98
------------UPD CastExpression@@(BeanDefinitionRegistry)definitions.beanFactory @TO@ (BeanDefinitionRegistry)definition.getBeanFactory() @AT@ 3488 @LENGTH@ 48
---------------DEL QualifiedName@@definitions.beanFactory @AT@ 3513 @LENGTH@ 23
------------------DEL SimpleName@@definitions @AT@ 3513 @LENGTH@ 11
------------------DEL SimpleName@@beanFactory @AT@ 3525 @LENGTH@ 11
---------------INS MethodInvocation@@definition.getBeanFactory() @TO@ CastExpression@@(BeanDefinitionRegistry)definitions.beanFactory @AT@ 3532 @LENGTH@ 27
------------------INS SimpleName@@Name:definition @TO@ MethodInvocation@@definition.getBeanFactory() @AT@ 3532 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getBeanFactory:[] @TO@ MethodInvocation@@definition.getBeanFactory() @AT@ 3543 @LENGTH@ 16


INS MethodDeclaration@@public, voidMethodName:InfinispanComponent,  @TO@ TypeDeclaration@@[public]InfinispanComponent, DefaultComponent @AT@ 1030 @LENGTH@ 77
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:InfinispanComponent,  @AT@ 1030 @LENGTH@ 6
---INS SimpleName@@MethodName:InfinispanComponent @TO@ MethodDeclaration@@public, voidMethodName:InfinispanComponent,  @AT@ 1037 @LENGTH@ 19
---INS SuperConstructorInvocation@@super(InfinispanEndpoint.class);
 @TO@ MethodDeclaration@@public, voidMethodName:InfinispanComponent,  @AT@ 1069 @LENGTH@ 32
------INS TypeLiteral@@InfinispanEndpoint.class @TO@ SuperConstructorInvocation@@super(InfinispanEndpoint.class);
 @AT@ 1075 @LENGTH@ 24


INS MethodDeclaration@@private, voidMethodName:SpringDataJaxb,  @TO@ TypeDeclaration@@[public]SpringDataJaxb,  @AT@ 1863 @LENGTH@ 27
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:SpringDataJaxb,  @AT@ 1863 @LENGTH@ 7
---INS SimpleName@@MethodName:SpringDataJaxb @TO@ MethodDeclaration@@private, voidMethodName:SpringDataJaxb,  @AT@ 1871 @LENGTH@ 14


INS MethodDeclaration@@public, AuthorizationServerSecurityConfigurer, MethodName:accessDeniedHandler, AccessDeniedHandler accessDeniedHandler,  @TO@ TypeDeclaration@@[public, final]AuthorizationServerSecurityConfigurer, SecurityConfigurerAdapter<DefaultSecurityFilterChain,HttpSecurity> @AT@ 3280 @LENGTH@ 179
---INS Modifier@@public @TO@ MethodDeclaration@@public, AuthorizationServerSecurityConfigurer, MethodName:accessDeniedHandler, AccessDeniedHandler accessDeniedHandler,  @AT@ 3280 @LENGTH@ 6
---INS SimpleType@@AuthorizationServerSecurityConfigurer @TO@ MethodDeclaration@@public, AuthorizationServerSecurityConfigurer, MethodName:accessDeniedHandler, AccessDeniedHandler accessDeniedHandler,  @AT@ 3287 @LENGTH@ 37
---INS SimpleName@@MethodName:accessDeniedHandler @TO@ MethodDeclaration@@public, AuthorizationServerSecurityConfigurer, MethodName:accessDeniedHandler, AccessDeniedHandler accessDeniedHandler,  @AT@ 3325 @LENGTH@ 19
---INS SingleVariableDeclaration@@AccessDeniedHandler accessDeniedHandler @TO@ MethodDeclaration@@public, AuthorizationServerSecurityConfigurer, MethodName:accessDeniedHandler, AccessDeniedHandler accessDeniedHandler,  @AT@ 3349 @LENGTH@ 39
------INS SimpleType@@AccessDeniedHandler @TO@ SingleVariableDeclaration@@AccessDeniedHandler accessDeniedHandler @AT@ 3349 @LENGTH@ 19
------INS SimpleName@@accessDeniedHandler @TO@ SingleVariableDeclaration@@AccessDeniedHandler accessDeniedHandler @AT@ 3369 @LENGTH@ 19
---INS ExpressionStatement@@Assignment:this.accessDeniedHandler=accessDeniedHandler @TO@ MethodDeclaration@@public, AuthorizationServerSecurityConfigurer, MethodName:accessDeniedHandler, AccessDeniedHandler accessDeniedHandler,  @AT@ 3394 @LENGTH@ 47
------INS Assignment@@this.accessDeniedHandler=accessDeniedHandler @TO@ ExpressionStatement@@Assignment:this.accessDeniedHandler=accessDeniedHandler @AT@ 3394 @LENGTH@ 46
---------INS FieldAccess@@this.accessDeniedHandler @TO@ Assignment@@this.accessDeniedHandler=accessDeniedHandler @AT@ 3394 @LENGTH@ 24
------------INS ThisExpression@@this @TO@ FieldAccess@@this.accessDeniedHandler @AT@ 3394 @LENGTH@ 4
------------INS SimpleName@@accessDeniedHandler @TO@ FieldAccess@@this.accessDeniedHandler @AT@ 3399 @LENGTH@ 19
---------INS Operator@@= @TO@ Assignment@@this.accessDeniedHandler=accessDeniedHandler @AT@ 3418 @LENGTH@ 1
---------INS SimpleName@@accessDeniedHandler @TO@ Assignment@@this.accessDeniedHandler=accessDeniedHandler @AT@ 3421 @LENGTH@ 19
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, AuthorizationServerSecurityConfigurer, MethodName:accessDeniedHandler, AccessDeniedHandler accessDeniedHandler,  @AT@ 3444 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 3451 @LENGTH@ 4


UPD TypeDeclaration@@[public]JpaComponent, DefaultComponent @TO@ [public]JpaComponent, UriEndpointComponent @AT@ 1275 @LENGTH@ 5076
---UPD SimpleType@@DefaultComponent @TO@ UriEndpointComponent @AT@ 1309 @LENGTH@ 16


DEL MethodDeclaration@@private, void, MethodName:checkFSUMaskReset, boolean recursiveArg, IllegalArgumentException, IOException,  @AT@ 4920 @LENGTH@ 495
---DEL Modifier@@private @AT@ 4920 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 4928 @LENGTH@ 4
---DEL SimpleName@@MethodName:checkFSUMaskReset @AT@ 4933 @LENGTH@ 17
---DEL SingleVariableDeclaration@@boolean recursiveArg @AT@ 4951 @LENGTH@ 20
------DEL PrimitiveType@@boolean @AT@ 4951 @LENGTH@ 7
------DEL SimpleName@@recursiveArg @AT@ 4959 @LENGTH@ 12
---DEL SimpleType@@IllegalArgumentException @AT@ 4980 @LENGTH@ 24
---DEL SimpleType@@IOException @AT@ 5006 @LENGTH@ 11
---DEL VariableDeclarationStatement@@final String FS_MASK_VAL="055"; @AT@ 5024 @LENGTH@ 33
------DEL Modifier@@final @AT@ 5024 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5030 @LENGTH@ 6
------DEL VariableDeclarationFragment@@FS_MASK_VAL="055" @AT@ 5037 @LENGTH@ 19
---------DEL SimpleName@@FS_MASK_VAL @AT@ 5037 @LENGTH@ 11
---------DEL StringLiteral@@"055" @AT@ 5051 @LENGTH@ 5
---DEL VariableDeclarationStatement@@HiveConf conf=new HiveConf(); @AT@ 5062 @LENGTH@ 31
------DEL SimpleType@@HiveConf @AT@ 5062 @LENGTH@ 8
------DEL VariableDeclarationFragment@@conf=new HiveConf() @AT@ 5071 @LENGTH@ 21
---------DEL SimpleName@@conf @AT@ 5071 @LENGTH@ 4
---------DEL ClassInstanceCreation@@HiveConf[] @AT@ 5078 @LENGTH@ 14
------------DEL New@@new @AT@ 5078 @LENGTH@ 3
------------DEL SimpleType@@HiveConf @AT@ 5082 @LENGTH@ 8
---DEL VariableDeclarationStatement@@String dir=System.getProperty("test.tmp.dir") + "/testUtilitiesUMaskReset"; @AT@ 5098 @LENGTH@ 77
------DEL SimpleType@@String @AT@ 5098 @LENGTH@ 6
------DEL VariableDeclarationFragment@@dir=System.getProperty("test.tmp.dir") + "/testUtilitiesUMaskReset" @AT@ 5105 @LENGTH@ 69
---------DEL SimpleName@@dir @AT@ 5105 @LENGTH@ 3
---------DEL InfixExpression@@System.getProperty("test.tmp.dir") + "/testUtilitiesUMaskReset" @AT@ 5111 @LENGTH@ 63
------------DEL MethodInvocation@@System.getProperty("test.tmp.dir") @AT@ 5111 @LENGTH@ 34
---------------DEL SimpleName@@Name:System @AT@ 5111 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:getProperty:["test.tmp.dir"] @AT@ 5118 @LENGTH@ 27
------------------DEL StringLiteral@@"test.tmp.dir" @AT@ 5130 @LENGTH@ 14
------------DEL Operator@@+ @AT@ 5145 @LENGTH@ 1
------------DEL StringLiteral@@"/testUtilitiesUMaskReset" @AT@ 5148 @LENGTH@ 26
---DEL ExpressionStatement@@MethodInvocation:conf.set(FsPermission.UMASK_LABEL,FS_MASK_VAL) @AT@ 5180 @LENGTH@ 48
------DEL MethodInvocation@@conf.set(FsPermission.UMASK_LABEL,FS_MASK_VAL) @AT@ 5180 @LENGTH@ 47
---------DEL SimpleName@@Name:conf @AT@ 5180 @LENGTH@ 4
---------DEL SimpleName@@MethodName:set:[FsPermission.UMASK_LABEL, FS_MASK_VAL] @AT@ 5185 @LENGTH@ 42
------------DEL QualifiedName@@FsPermission.UMASK_LABEL @AT@ 5189 @LENGTH@ 24
---------------DEL SimpleName@@FsPermission @AT@ 5189 @LENGTH@ 12
---------------DEL SimpleName@@UMASK_LABEL @AT@ 5202 @LENGTH@ 11
------------DEL SimpleName@@FS_MASK_VAL @AT@ 5215 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:Utilities.createDirsWithPermission(conf,new Path(dir),new FsPermission((short)00777),recursiveArg) @AT@ 5233 @LENGTH@ 111
------DEL MethodInvocation@@Utilities.createDirsWithPermission(conf,new Path(dir),new FsPermission((short)00777),recursiveArg) @AT@ 5233 @LENGTH@ 110
---------DEL SimpleName@@Name:Utilities @AT@ 5233 @LENGTH@ 9
---------DEL SimpleName@@MethodName:createDirsWithPermission:[conf, new Path(dir), new FsPermission((short)00777), recursiveArg] @AT@ 5243 @LENGTH@ 100
------------DEL SimpleName@@conf @AT@ 5268 @LENGTH@ 4
------------DEL ClassInstanceCreation@@Path[dir] @AT@ 5274 @LENGTH@ 13
---------------DEL New@@new @AT@ 5274 @LENGTH@ 3
---------------DEL SimpleType@@Path @AT@ 5278 @LENGTH@ 4
---------------DEL SimpleName@@dir @AT@ 5283 @LENGTH@ 3
------------DEL ClassInstanceCreation@@FsPermission[(short)00777] @AT@ 5289 @LENGTH@ 31
---------------DEL New@@new @AT@ 5289 @LENGTH@ 3
---------------DEL SimpleType@@FsPermission @AT@ 5293 @LENGTH@ 12
---------------DEL CastExpression@@(short)00777 @AT@ 5306 @LENGTH@ 13
------------------DEL PrimitiveType@@short @AT@ 5307 @LENGTH@ 5
------------------DEL NumberLiteral@@00777 @AT@ 5314 @LENGTH@ 5
------------DEL SimpleName@@recursiveArg @AT@ 5330 @LENGTH@ 12
---DEL ExpressionStatement@@MethodInvocation:assertEquals(conf.get(FsPermission.UMASK_LABEL),FS_MASK_VAL) @AT@ 5349 @LENGTH@ 62
------DEL MethodInvocation@@assertEquals(conf.get(FsPermission.UMASK_LABEL),FS_MASK_VAL) @AT@ 5349 @LENGTH@ 61
---------DEL SimpleName@@MethodName:assertEquals:[conf.get(FsPermission.UMASK_LABEL), FS_MASK_VAL] @AT@ 5349 @LENGTH@ 61
------------DEL MethodInvocation@@conf.get(FsPermission.UMASK_LABEL) @AT@ 5362 @LENGTH@ 34
---------------DEL SimpleName@@Name:conf @AT@ 5362 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:get:[FsPermission.UMASK_LABEL] @AT@ 5367 @LENGTH@ 29
------------------DEL QualifiedName@@FsPermission.UMASK_LABEL @AT@ 5371 @LENGTH@ 24
---------------------DEL SimpleName@@FsPermission @AT@ 5371 @LENGTH@ 12
---------------------DEL SimpleName@@UMASK_LABEL @AT@ 5384 @LENGTH@ 11
------------DEL SimpleName@@FS_MASK_VAL @AT@ 5398 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:from(part,property,base.and(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)),(PotentiallyConvertingIterator)iterator) @TO@ MethodInvocation:from(part,property,base.and(path.toDotPath()),(PotentiallyConvertingIterator)iterator) @AT@ 4613 @LENGTH@ 167
---UPD MethodInvocation@@from(part,property,base.and(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)),(PotentiallyConvertingIterator)iterator) @TO@ from(part,property,base.and(path.toDotPath()),(PotentiallyConvertingIterator)iterator) @AT@ 4620 @LENGTH@ 159
------UPD SimpleName@@MethodName:from:[part, property, base.and(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)), (PotentiallyConvertingIterator)iterator] @TO@ MethodName:from:[part, property, base.and(path.toDotPath()), (PotentiallyConvertingIterator)iterator] @AT@ 4620 @LENGTH@ 159
---------UPD MethodInvocation@@base.and(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)) @TO@ base.and(path.toDotPath()) @AT@ 4645 @LENGTH@ 87
------------UPD SimpleName@@MethodName:and:[path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)] @TO@ MethodName:and:[path.toDotPath()] @AT@ 4650 @LENGTH@ 82
---------------UPD MethodInvocation@@path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE) @TO@ path.toDotPath() @AT@ 4654 @LENGTH@ 77
------------------UPD SimpleName@@MethodName:toDotPath:[MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE] @TO@ MethodName:toDotPath:[] @AT@ 4659 @LENGTH@ 72
---------------------DEL QualifiedName@@MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE @AT@ 4669 @LENGTH@ 61
------------------------DEL QualifiedName@@MongoPersistentProperty.PropertyToFieldNameConverter @AT@ 4669 @LENGTH@ 52
---------------------------DEL SimpleName@@MongoPersistentProperty @AT@ 4669 @LENGTH@ 23
---------------------------DEL SimpleName@@PropertyToFieldNameConverter @AT@ 4693 @LENGTH@ 28
------------------------DEL SimpleName@@INSTANCE @AT@ 4722 @LENGTH@ 8


INS FieldDeclaration@@private, String, [name] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="direct-vm",consumerClass=DirectConsumer.class), public]DirectVmEndpoint, DefaultEndpoint @AT@ 1399 @LENGTH@ 20
---INS Modifier@@private @TO@ FieldDeclaration@@private, String, [name] @AT@ 1399 @LENGTH@ 7
---INS SimpleType@@String @TO@ FieldDeclaration@@private, String, [name] @AT@ 1407 @LENGTH@ 6
---INS VariableDeclarationFragment@@name @TO@ FieldDeclaration@@private, String, [name] @AT@ 1414 @LENGTH@ 4
------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name @AT@ 1414 @LENGTH@ 4


INS FieldDeclaration@@private, final, String, [ID_KEY="_id"] @TO@ TypeDeclaration@@SpringDataMongodbSerializer, MongodbSerializer @AT@ 1660 @LENGTH@ 36
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, String, [ID_KEY="_id"] @AT@ 1660 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, String, [ID_KEY="_id"] @AT@ 1668 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, final, String, [ID_KEY="_id"] @AT@ 1674 @LENGTH@ 6
---INS VariableDeclarationFragment@@ID_KEY="_id" @TO@ FieldDeclaration@@private, final, String, [ID_KEY="_id"] @AT@ 1681 @LENGTH@ 14
------INS SimpleName@@ID_KEY @TO@ VariableDeclarationFragment@@ID_KEY="_id" @AT@ 1681 @LENGTH@ 6
------INS StringLiteral@@"_id" @TO@ VariableDeclarationFragment@@ID_KEY="_id" @AT@ 1690 @LENGTH@ 5


UPD TypeDeclaration@@[@UriEndpoint(scheme="jgroups",consumerClass=JGroupsConsumer.class), public]JGroupsEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="jgroups",consumerClass=JGroupsConsumer.class,label="messaging"), public]JGroupsEndpoint, DefaultEndpoint @AT@ 1365 @LENGTH@ 5222
---UPD NormalAnnotation@@@UriEndpoint(scheme="jgroups",consumerClass=JGroupsConsumer.class) @TO@ @UriEndpoint(scheme="jgroups",consumerClass=JGroupsConsumer.class,label="messaging") @AT@ 1365 @LENGTH@ 71


UPD TypeDeclaration@@[public]SftpConfiguration, RemoteFileConfiguration @TO@ [@UriParams, public]SftpConfiguration, RemoteFileConfiguration @AT@ 941 @LENGTH@ 4055
---INS MarkerAnnotation@@@UriParams @TO@ TypeDeclaration@@[public]SftpConfiguration, RemoteFileConfiguration @AT@ 1019 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:closeConnection,  @TO@ TypeDeclaration@@[public]ResultSetIterator, [Iterator<Map<String,Object>>] @AT@ 3849 @LENGTH@ 68
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:closeConnection,  @AT@ 3849 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:closeConnection,  @AT@ 3856 @LENGTH@ 4
---INS SimpleName@@MethodName:closeConnection @TO@ MethodDeclaration@@public, void, MethodName:closeConnection,  @AT@ 3861 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:safeCloseConnection() @TO@ MethodDeclaration@@public, void, MethodName:closeConnection,  @AT@ 3889 @LENGTH@ 22
------INS MethodInvocation@@MethodName:safeCloseConnection:[] @TO@ ExpressionStatement@@MethodInvocation:safeCloseConnection() @AT@ 3889 @LENGTH@ 21


UPD FieldDeclaration@@private, static, ApiMethodPropertiesHelper, [propertiesHelper=new ApiMethodPropertiesHelper<TestComponentConfiguration>(TestComponentConfiguration.class,TEST_PREFIX){
}
] @TO@ private, static, ApiMethodPropertiesHelper<TestComponentConfiguration>, [propertiesHelper=new ApiMethodPropertiesHelper<TestComponentConfiguration>(TestComponentConfiguration.class,TEST_PREFIX){
}
] @AT@ 1639 @LENGTH@ 181
---INS ParameterizedType@@ApiMethodPropertiesHelper<TestComponentConfiguration> @TO@ FieldDeclaration@@private, static, ApiMethodPropertiesHelper, [propertiesHelper=new ApiMethodPropertiesHelper<TestComponentConfiguration>(TestComponentConfiguration.class,TEST_PREFIX){
}
] @AT@ 1654 @LENGTH@ 53
------INS SimpleType@@ApiMethodPropertiesHelper @TO@ ParameterizedType@@ApiMethodPropertiesHelper<TestComponentConfiguration> @AT@ 1654 @LENGTH@ 25
------INS SimpleType@@TestComponentConfiguration @TO@ ParameterizedType@@ApiMethodPropertiesHelper<TestComponentConfiguration> @AT@ 1680 @LENGTH@ 26
---DEL SimpleType@@ApiMethodPropertiesHelper @AT@ 1654 @LENGTH@ 25


UPD SuperConstructorInvocation@@super(context);
 @TO@ super(context,CxfEndpoint.class);
 @AT@ 1481 @LENGTH@ 15
---INS TypeLiteral@@CxfEndpoint.class @TO@ SuperConstructorInvocation@@super(context);
 @AT@ 1530 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:shouldBindPlaceholdersUsedAsKeysCorrectly,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 29439 @LENGTH@ 225
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldBindPlaceholdersUsedAsKeysCorrectly,  @AT@ 29439 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldBindPlaceholdersUsedAsKeysCorrectly,  @AT@ 29446 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldBindPlaceholdersUsedAsKeysCorrectly @TO@ MethodDeclaration@@public, void, MethodName:shouldBindPlaceholdersUsedAsKeysCorrectly,  @AT@ 29451 @LENGTH@ 41
---INS VariableDeclarationStatement@@List<Person> persons=repository.findByKeyValue("firstname",alicia.getFirstname()); @TO@ MethodDeclaration@@public, void, MethodName:shouldBindPlaceholdersUsedAsKeysCorrectly,  @AT@ 29500 @LENGTH@ 85
------INS ParameterizedType@@List<Person> @TO@ VariableDeclarationStatement@@List<Person> persons=repository.findByKeyValue("firstname",alicia.getFirstname()); @AT@ 29500 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 29500 @LENGTH@ 4
---------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 29505 @LENGTH@ 6
------INS VariableDeclarationFragment@@persons=repository.findByKeyValue("firstname",alicia.getFirstname()) @TO@ VariableDeclarationStatement@@List<Person> persons=repository.findByKeyValue("firstname",alicia.getFirstname()); @AT@ 29513 @LENGTH@ 71
---------INS SimpleName@@persons @TO@ VariableDeclarationFragment@@persons=repository.findByKeyValue("firstname",alicia.getFirstname()) @AT@ 29513 @LENGTH@ 7
---------INS MethodInvocation@@repository.findByKeyValue("firstname",alicia.getFirstname()) @TO@ VariableDeclarationFragment@@persons=repository.findByKeyValue("firstname",alicia.getFirstname()) @AT@ 29523 @LENGTH@ 61
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByKeyValue("firstname",alicia.getFirstname()) @AT@ 29523 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByKeyValue:["firstname", alicia.getFirstname()] @TO@ MethodInvocation@@repository.findByKeyValue("firstname",alicia.getFirstname()) @AT@ 29534 @LENGTH@ 50
---------------INS StringLiteral@@"firstname" @TO@ SimpleName@@MethodName:findByKeyValue:["firstname", alicia.getFirstname()] @AT@ 29549 @LENGTH@ 11
---------------INS MethodInvocation@@alicia.getFirstname() @TO@ SimpleName@@MethodName:findByKeyValue:["firstname", alicia.getFirstname()] @AT@ 29562 @LENGTH@ 21
------------------INS SimpleName@@Name:alicia @TO@ MethodInvocation@@alicia.getFirstname() @AT@ 29562 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getFirstname:[] @TO@ MethodInvocation@@alicia.getFirstname() @AT@ 29569 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(persons,hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:shouldBindPlaceholdersUsedAsKeysCorrectly,  @AT@ 29589 @LENGTH@ 32
------INS MethodInvocation@@assertThat(persons,hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(persons,hasSize(1)) @AT@ 29589 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertThat:[persons, hasSize(1)] @TO@ MethodInvocation@@assertThat(persons,hasSize(1)) @AT@ 29589 @LENGTH@ 31
------------INS SimpleName@@persons @TO@ SimpleName@@MethodName:assertThat:[persons, hasSize(1)] @AT@ 29600 @LENGTH@ 7
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[persons, hasSize(1)] @AT@ 29609 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 29609 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 29617 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 29609 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 29617 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(persons,hasItem(alicia)) @TO@ MethodDeclaration@@public, void, MethodName:shouldBindPlaceholdersUsedAsKeysCorrectly,  @AT@ 29624 @LENGTH@ 37
------INS MethodInvocation@@assertThat(persons,hasItem(alicia)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(persons,hasItem(alicia)) @AT@ 29624 @LENGTH@ 36
---------INS SimpleName@@MethodName:assertThat:[persons, hasItem(alicia)] @TO@ MethodInvocation@@assertThat(persons,hasItem(alicia)) @AT@ 29624 @LENGTH@ 36
------------INS SimpleName@@persons @TO@ SimpleName@@MethodName:assertThat:[persons, hasItem(alicia)] @AT@ 29635 @LENGTH@ 7
------------INS MethodInvocation@@hasItem(alicia) @TO@ SimpleName@@MethodName:assertThat:[persons, hasItem(alicia)] @AT@ 29644 @LENGTH@ 15
---------------INS SimpleName@@MethodName:hasItem:[alicia] @TO@ MethodInvocation@@hasItem(alicia) @AT@ 29644 @LENGTH@ 15
------------------INS SimpleName@@alicia @TO@ SimpleName@@MethodName:hasItem:[alicia] @AT@ 29652 @LENGTH@ 6
---------------INS SimpleName@@MethodName:hasItem:[alicia] @TO@ MethodInvocation@@hasItem(alicia) @AT@ 29644 @LENGTH@ 15
------------------INS SimpleName@@alicia @TO@ SimpleName@@MethodName:hasItem:[alicia] @AT@ 29652 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals("Command",BeanstalkComponent.COMMAND_KICK,endpoint.getCommand()) @TO@ MethodInvocation:assertEquals("Command",BeanstalkComponent.COMMAND_KICK,endpoint.getCommand().name()) @AT@ 2900 @LENGTH@ 80
---UPD MethodInvocation@@assertEquals("Command",BeanstalkComponent.COMMAND_KICK,endpoint.getCommand()) @TO@ assertEquals("Command",BeanstalkComponent.COMMAND_KICK,endpoint.getCommand().name()) @AT@ 2900 @LENGTH@ 79
------UPD SimpleName@@MethodName:assertEquals:["Command", BeanstalkComponent.COMMAND_KICK, endpoint.getCommand()] @TO@ MethodName:assertEquals:["Command", BeanstalkComponent.COMMAND_KICK, endpoint.getCommand().name()] @AT@ 2900 @LENGTH@ 79
---------UPD MethodInvocation@@endpoint.getCommand() @TO@ endpoint.getCommand().name() @AT@ 2957 @LENGTH@ 21
------------INS MethodInvocation@@MethodName:getCommand:[] @TO@ MethodInvocation@@endpoint.getCommand() @AT@ 2961 @LENGTH@ 21
------------UPD SimpleName@@MethodName:getCommand:[] @TO@ MethodName:name:[] @AT@ 2966 @LENGTH@ 12


UPD ReturnStatement@@ClassInstanceCreation:new ExprNodeConstantDesc(TypeInfoFactory.dateTypeInfo,literal.getValue3()) @TO@ ClassInstanceCreation:new ExprNodeConstantDesc(TypeInfoFactory.dateTypeInfo,new Date(((Calendar)literal.getValue()).getTimeInMillis())) @AT@ 5285 @LENGTH@ 83
---UPD ClassInstanceCreation@@ExprNodeConstantDesc[TypeInfoFactory.dateTypeInfo, literal.getValue3()] @TO@ ExprNodeConstantDesc[TypeInfoFactory.dateTypeInfo, new Date(((Calendar)literal.getValue()).getTimeInMillis())] @AT@ 5292 @LENGTH@ 75
------DEL MethodInvocation@@literal.getValue3() @AT@ 5347 @LENGTH@ 19
------INS ClassInstanceCreation@@Date[((Calendar)literal.getValue()).getTimeInMillis()] @TO@ ClassInstanceCreation@@ExprNodeConstantDesc[TypeInfoFactory.dateTypeInfo, literal.getValue3()] @AT@ 5400 @LENGTH@ 58
---------INS New@@new @TO@ ClassInstanceCreation@@Date[((Calendar)literal.getValue()).getTimeInMillis()] @AT@ 5400 @LENGTH@ 3
---------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[((Calendar)literal.getValue()).getTimeInMillis()] @AT@ 5404 @LENGTH@ 4
---------INS MethodInvocation@@((Calendar)literal.getValue()).getTimeInMillis() @TO@ ClassInstanceCreation@@Date[((Calendar)literal.getValue()).getTimeInMillis()] @AT@ 5409 @LENGTH@ 48
------------INS ParenthesizedExpression@@((Calendar)literal.getValue()) @TO@ MethodInvocation@@((Calendar)literal.getValue()).getTimeInMillis() @AT@ 5409 @LENGTH@ 30
---------------INS CastExpression@@(Calendar)literal.getValue() @TO@ ParenthesizedExpression@@((Calendar)literal.getValue()) @AT@ 5410 @LENGTH@ 28
------------------INS SimpleType@@Calendar @TO@ CastExpression@@(Calendar)literal.getValue() @AT@ 5411 @LENGTH@ 8
------------------INS MethodInvocation@@literal.getValue() @TO@ CastExpression@@(Calendar)literal.getValue() @AT@ 5420 @LENGTH@ 18
---------------------MOV SimpleName@@Name:literal @TO@ MethodInvocation@@literal.getValue() @AT@ 5347 @LENGTH@ 7
---------------------MOV SimpleName@@MethodName:getValue3:[] @TO@ MethodInvocation@@literal.getValue() @AT@ 5355 @LENGTH@ 11
------------INS SimpleName@@MethodName:getTimeInMillis:[] @TO@ MethodInvocation@@((Calendar)literal.getValue()).getTimeInMillis() @AT@ 5440 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:saxSource, XMLReader reader, InputSource inputSource, JAXBException,  @TO@ public, void, MethodName:saxSource, XMLReader reader, InputSource inputSource, Exception,  @AT@ 10020 @LENGTH@ 155
---UPD SimpleType@@JAXBException @TO@ Exception @AT@ 10092 @LENGTH@ 13
---INS IfStatement@@if (inputSource.getByteStream() == null && inputSource.getCharacterStream() == null && inputSource.getSystemId() == null) {  UnmarshallerHandler handler=unmarshaller.getUnmarshallerHandler();  reader.setContentHandler(handler);  reader.parse(inputSource);  result=handler.getResult();} else {  result=unmarshaller.unmarshal(inputSource);} @TO@ MethodDeclaration@@public, void, MethodName:saxSource, XMLReader reader, InputSource inputSource, JAXBException,  @AT@ 10159 @LENGTH@ 1211
------INS InfixExpression@@inputSource.getByteStream() == null && inputSource.getCharacterStream() == null && inputSource.getSystemId() == null @TO@ IfStatement@@if (inputSource.getByteStream() == null && inputSource.getCharacterStream() == null && inputSource.getSystemId() == null) {  UnmarshallerHandler handler=unmarshaller.getUnmarshallerHandler();  reader.setContentHandler(handler);  reader.parse(inputSource);  result=handler.getResult();} else {  result=unmarshaller.unmarshal(inputSource);} @AT@ 10163 @LENGTH@ 136
---------INS InfixExpression@@inputSource.getByteStream() == null && inputSource.getCharacterStream() == null @TO@ InfixExpression@@inputSource.getByteStream() == null && inputSource.getCharacterStream() == null && inputSource.getSystemId() == null @AT@ 10163 @LENGTH@ 79
------------INS InfixExpression@@inputSource.getByteStream() == null @TO@ InfixExpression@@inputSource.getByteStream() == null && inputSource.getCharacterStream() == null @AT@ 10163 @LENGTH@ 35
---------------INS MethodInvocation@@inputSource.getByteStream() @TO@ InfixExpression@@inputSource.getByteStream() == null @AT@ 10163 @LENGTH@ 27
------------------INS SimpleName@@Name:inputSource @TO@ MethodInvocation@@inputSource.getByteStream() @AT@ 10163 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getByteStream:[] @TO@ MethodInvocation@@inputSource.getByteStream() @AT@ 10175 @LENGTH@ 15
---------------INS Operator@@== @TO@ InfixExpression@@inputSource.getByteStream() == null @AT@ 10190 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@inputSource.getByteStream() == null @AT@ 10194 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@inputSource.getByteStream() == null && inputSource.getCharacterStream() == null @AT@ 10198 @LENGTH@ 2
------------INS InfixExpression@@inputSource.getCharacterStream() == null @TO@ InfixExpression@@inputSource.getByteStream() == null && inputSource.getCharacterStream() == null @AT@ 10202 @LENGTH@ 40
---------------INS MethodInvocation@@inputSource.getCharacterStream() @TO@ InfixExpression@@inputSource.getCharacterStream() == null @AT@ 10202 @LENGTH@ 32
------------------INS SimpleName@@Name:inputSource @TO@ MethodInvocation@@inputSource.getCharacterStream() @AT@ 10202 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getCharacterStream:[] @TO@ MethodInvocation@@inputSource.getCharacterStream() @AT@ 10214 @LENGTH@ 20
---------------INS Operator@@== @TO@ InfixExpression@@inputSource.getCharacterStream() == null @AT@ 10234 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@inputSource.getCharacterStream() == null @AT@ 10238 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@inputSource.getByteStream() == null && inputSource.getCharacterStream() == null && inputSource.getSystemId() == null @AT@ 10242 @LENGTH@ 2
---------INS InfixExpression@@inputSource.getSystemId() == null @TO@ InfixExpression@@inputSource.getByteStream() == null && inputSource.getCharacterStream() == null && inputSource.getSystemId() == null @AT@ 10266 @LENGTH@ 33
------------INS MethodInvocation@@inputSource.getSystemId() @TO@ InfixExpression@@inputSource.getSystemId() == null @AT@ 10266 @LENGTH@ 25
---------------INS SimpleName@@Name:inputSource @TO@ MethodInvocation@@inputSource.getSystemId() @AT@ 10266 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getSystemId:[] @TO@ MethodInvocation@@inputSource.getSystemId() @AT@ 10278 @LENGTH@ 13
------------INS Operator@@== @TO@ InfixExpression@@inputSource.getSystemId() == null @AT@ 10291 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@inputSource.getSystemId() == null @AT@ 10295 @LENGTH@ 4
------INS Block@@ThenBody:{  UnmarshallerHandler handler=unmarshaller.getUnmarshallerHandler();  reader.setContentHandler(handler);  reader.parse(inputSource);  result=handler.getResult();} @TO@ IfStatement@@if (inputSource.getByteStream() == null && inputSource.getCharacterStream() == null && inputSource.getSystemId() == null) {  UnmarshallerHandler handler=unmarshaller.getUnmarshallerHandler();  reader.setContentHandler(handler);  reader.parse(inputSource);  result=handler.getResult();} else {  result=unmarshaller.unmarshal(inputSource);} @AT@ 10301 @LENGTH@ 638
---------INS VariableDeclarationStatement@@UnmarshallerHandler handler=unmarshaller.getUnmarshallerHandler(); @TO@ Block@@ThenBody:{  UnmarshallerHandler handler=unmarshaller.getUnmarshallerHandler();  reader.setContentHandler(handler);  reader.parse(inputSource);  result=handler.getResult();} @AT@ 10717 @LENGTH@ 68
------------INS SimpleType@@UnmarshallerHandler @TO@ VariableDeclarationStatement@@UnmarshallerHandler handler=unmarshaller.getUnmarshallerHandler(); @AT@ 10717 @LENGTH@ 19
------------INS VariableDeclarationFragment@@handler=unmarshaller.getUnmarshallerHandler() @TO@ VariableDeclarationStatement@@UnmarshallerHandler handler=unmarshaller.getUnmarshallerHandler(); @AT@ 10737 @LENGTH@ 47
---------------INS SimpleName@@handler @TO@ VariableDeclarationFragment@@handler=unmarshaller.getUnmarshallerHandler() @AT@ 10737 @LENGTH@ 7
---------------INS MethodInvocation@@unmarshaller.getUnmarshallerHandler() @TO@ VariableDeclarationFragment@@handler=unmarshaller.getUnmarshallerHandler() @AT@ 10747 @LENGTH@ 37
------------------INS SimpleName@@Name:unmarshaller @TO@ MethodInvocation@@unmarshaller.getUnmarshallerHandler() @AT@ 10747 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getUnmarshallerHandler:[] @TO@ MethodInvocation@@unmarshaller.getUnmarshallerHandler() @AT@ 10760 @LENGTH@ 24
---------INS ExpressionStatement@@MethodInvocation:reader.setContentHandler(handler) @TO@ Block@@ThenBody:{  UnmarshallerHandler handler=unmarshaller.getUnmarshallerHandler();  reader.setContentHandler(handler);  reader.parse(inputSource);  result=handler.getResult();} @AT@ 10802 @LENGTH@ 34
------------INS MethodInvocation@@reader.setContentHandler(handler) @TO@ ExpressionStatement@@MethodInvocation:reader.setContentHandler(handler) @AT@ 10802 @LENGTH@ 33
---------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.setContentHandler(handler) @AT@ 10802 @LENGTH@ 6
---------------INS SimpleName@@MethodName:setContentHandler:[handler] @TO@ MethodInvocation@@reader.setContentHandler(handler) @AT@ 10809 @LENGTH@ 26
------------------INS SimpleName@@handler @TO@ SimpleName@@MethodName:setContentHandler:[handler] @AT@ 10827 @LENGTH@ 7
---------INS ExpressionStatement@@MethodInvocation:reader.parse(inputSource) @TO@ Block@@ThenBody:{  UnmarshallerHandler handler=unmarshaller.getUnmarshallerHandler();  reader.setContentHandler(handler);  reader.parse(inputSource);  result=handler.getResult();} @AT@ 10853 @LENGTH@ 26
------------INS MethodInvocation@@reader.parse(inputSource) @TO@ ExpressionStatement@@MethodInvocation:reader.parse(inputSource) @AT@ 10853 @LENGTH@ 25
---------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.parse(inputSource) @AT@ 10853 @LENGTH@ 6
---------------INS SimpleName@@MethodName:parse:[inputSource] @TO@ MethodInvocation@@reader.parse(inputSource) @AT@ 10860 @LENGTH@ 18
------------------INS SimpleName@@inputSource @TO@ SimpleName@@MethodName:parse:[inputSource] @AT@ 10866 @LENGTH@ 11
---------INS ExpressionStatement@@Assignment:result=handler.getResult() @TO@ Block@@ThenBody:{  UnmarshallerHandler handler=unmarshaller.getUnmarshallerHandler();  reader.setContentHandler(handler);  reader.parse(inputSource);  result=handler.getResult();} @AT@ 10896 @LENGTH@ 29
------------INS Assignment@@result=handler.getResult() @TO@ ExpressionStatement@@Assignment:result=handler.getResult() @AT@ 10896 @LENGTH@ 28
---------------INS SimpleName@@result @TO@ Assignment@@result=handler.getResult() @AT@ 10896 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@result=handler.getResult() @AT@ 10902 @LENGTH@ 1
---------------INS MethodInvocation@@handler.getResult() @TO@ Assignment@@result=handler.getResult() @AT@ 10905 @LENGTH@ 19
------------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.getResult() @AT@ 10905 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getResult:[] @TO@ MethodInvocation@@handler.getResult() @AT@ 10913 @LENGTH@ 11
------INS Block@@ElseBody:{  result=unmarshaller.unmarshal(inputSource);} @TO@ IfStatement@@if (inputSource.getByteStream() == null && inputSource.getCharacterStream() == null && inputSource.getSystemId() == null) {  UnmarshallerHandler handler=unmarshaller.getUnmarshallerHandler();  reader.setContentHandler(handler);  reader.parse(inputSource);  result=handler.getResult();} else {  result=unmarshaller.unmarshal(inputSource);} @AT@ 10945 @LENGTH@ 425
---------MOV ExpressionStatement@@Assignment:result=unmarshaller.unmarshal(inputSource) @TO@ Block@@ElseBody:{  result=unmarshaller.unmarshal(inputSource);} @AT@ 10120 @LENGTH@ 45


INS FieldDeclaration@@private, static, final, boolean, [IGNORE_NONEXISTENT_ROLE=Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue()] @TO@ TypeDeclaration@@[private, static]PrincipalToGroupSearcher, [LdapSearcher<LdapEntry[],LdapEntry>] @AT@ 10712 @LENGTH@ 221
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, boolean, [IGNORE_NONEXISTENT_ROLE=Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue()] @AT@ 10712 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, boolean, [IGNORE_NONEXISTENT_ROLE=Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue()] @AT@ 10720 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, boolean, [IGNORE_NONEXISTENT_ROLE=Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue()] @AT@ 10727 @LENGTH@ 5
---INS PrimitiveType@@boolean @TO@ FieldDeclaration@@private, static, final, boolean, [IGNORE_NONEXISTENT_ROLE=Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue()] @AT@ 10733 @LENGTH@ 7
---INS VariableDeclarationFragment@@IGNORE_NONEXISTENT_ROLE=Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue() @TO@ FieldDeclaration@@private, static, final, boolean, [IGNORE_NONEXISTENT_ROLE=Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue()] @AT@ 10741 @LENGTH@ 191
------INS SimpleName@@IGNORE_NONEXISTENT_ROLE @TO@ VariableDeclarationFragment@@IGNORE_NONEXISTENT_ROLE=Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue() @AT@ 10741 @LENGTH@ 23
------INS MethodInvocation@@Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue() @TO@ VariableDeclarationFragment@@IGNORE_NONEXISTENT_ROLE=Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue() @AT@ 10781 @LENGTH@ 151
---------INS MethodInvocation@@MethodName:valueOf:[System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")] @TO@ MethodInvocation@@Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue() @AT@ 10781 @LENGTH@ 136
------------INS MethodInvocation@@System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false") @TO@ MethodInvocation@@MethodName:valueOf:[System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")] @AT@ 10797 @LENGTH@ 119
---------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false") @AT@ 10797 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getProperty:["org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE", "false"] @TO@ MethodInvocation@@System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false") @AT@ 10804 @LENGTH@ 112
------------------INS StringLiteral@@"org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE" @TO@ SimpleName@@MethodName:getProperty:["org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE", "false"] @AT@ 10816 @LENGTH@ 90
------------------INS StringLiteral@@"false" @TO@ SimpleName@@MethodName:getProperty:["org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE", "false"] @AT@ 10908 @LENGTH@ 7
---------INS SimpleName@@Name:Boolean @TO@ MethodInvocation@@Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue() @AT@ 10781 @LENGTH@ 7
---------INS SimpleName@@MethodName:booleanValue:[] @TO@ MethodInvocation@@Boolean.valueOf(System.getProperty("org.jboss.as.domain.management.security.LdapGroupSearcherService.IGNORE_NONEXISTENT_ROLE","false")).booleanValue() @AT@ 10918 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @TO@ TypeDeclaration@@[public]ElasticsearchComponentTest, CamelTestSupport @AT@ 1911 @LENGTH@ 699
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 1911 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 1918 @LENGTH@ 4
---INS SimpleName@@MethodName:testBulkIndex @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 1923 @LENGTH@ 13
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 1946 @LENGTH@ 9
---INS VariableDeclarationStatement@@List<Map<String,String>> documents=new ArrayList<Map<String,String>>(); @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 1966 @LENGTH@ 75
------INS ParameterizedType@@List<Map<String,String>> @TO@ VariableDeclarationStatement@@List<Map<String,String>> documents=new ArrayList<Map<String,String>>(); @AT@ 1966 @LENGTH@ 25
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Map<String,String>> @AT@ 1966 @LENGTH@ 4
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@List<Map<String,String>> @AT@ 1971 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 1971 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1975 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1983 @LENGTH@ 6
------INS VariableDeclarationFragment@@documents=new ArrayList<Map<String,String>>() @TO@ VariableDeclarationStatement@@List<Map<String,String>> documents=new ArrayList<Map<String,String>>(); @AT@ 1992 @LENGTH@ 48
---------INS SimpleName@@documents @TO@ VariableDeclarationFragment@@documents=new ArrayList<Map<String,String>>() @AT@ 1992 @LENGTH@ 9
---------INS ClassInstanceCreation@@ArrayList<Map<String,String>>[] @TO@ VariableDeclarationFragment@@documents=new ArrayList<Map<String,String>>() @AT@ 2004 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<Map<String,String>>[] @AT@ 2004 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<Map<String,String>> @TO@ ClassInstanceCreation@@ArrayList<Map<String,String>>[] @AT@ 2008 @LENGTH@ 30
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<Map<String,String>> @AT@ 2008 @LENGTH@ 9
---------------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@ArrayList<Map<String,String>> @AT@ 2018 @LENGTH@ 19
------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2018 @LENGTH@ 3
------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2022 @LENGTH@ 6
------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2030 @LENGTH@ 6
---INS VariableDeclarationStatement@@Map<String,String> document1=new HashMap<String,String>(); @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 2050 @LENGTH@ 62
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> document1=new HashMap<String,String>(); @AT@ 2050 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2050 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2054 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2062 @LENGTH@ 6
------INS VariableDeclarationFragment@@document1=new HashMap<String,String>() @TO@ VariableDeclarationStatement@@Map<String,String> document1=new HashMap<String,String>(); @AT@ 2070 @LENGTH@ 41
---------INS SimpleName@@document1 @TO@ VariableDeclarationFragment@@document1=new HashMap<String,String>() @AT@ 2070 @LENGTH@ 9
---------INS ClassInstanceCreation@@HashMap<String,String>[] @TO@ VariableDeclarationFragment@@document1=new HashMap<String,String>() @AT@ 2082 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 2082 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 2086 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2086 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2094 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2102 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:document1.put("content1","test1") @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 2121 @LENGTH@ 35
------INS MethodInvocation@@document1.put("content1","test1") @TO@ ExpressionStatement@@MethodInvocation:document1.put("content1","test1") @AT@ 2121 @LENGTH@ 34
---------INS SimpleName@@Name:document1 @TO@ MethodInvocation@@document1.put("content1","test1") @AT@ 2121 @LENGTH@ 9
---------INS SimpleName@@MethodName:put:["content1", "test1"] @TO@ MethodInvocation@@document1.put("content1","test1") @AT@ 2131 @LENGTH@ 24
------------INS StringLiteral@@"content1" @TO@ SimpleName@@MethodName:put:["content1", "test1"] @AT@ 2135 @LENGTH@ 10
------------INS StringLiteral@@"test1" @TO@ SimpleName@@MethodName:put:["content1", "test1"] @AT@ 2147 @LENGTH@ 7
---INS VariableDeclarationStatement@@Map<String,String> document2=new HashMap<String,String>(); @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 2165 @LENGTH@ 62
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> document2=new HashMap<String,String>(); @AT@ 2165 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2165 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2169 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2177 @LENGTH@ 6
------INS VariableDeclarationFragment@@document2=new HashMap<String,String>() @TO@ VariableDeclarationStatement@@Map<String,String> document2=new HashMap<String,String>(); @AT@ 2185 @LENGTH@ 41
---------INS SimpleName@@document2 @TO@ VariableDeclarationFragment@@document2=new HashMap<String,String>() @AT@ 2185 @LENGTH@ 9
---------INS ClassInstanceCreation@@HashMap<String,String>[] @TO@ VariableDeclarationFragment@@document2=new HashMap<String,String>() @AT@ 2197 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 2197 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 2201 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2201 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2209 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2217 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:document2.put("content2","test2") @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 2236 @LENGTH@ 35
------INS MethodInvocation@@document2.put("content2","test2") @TO@ ExpressionStatement@@MethodInvocation:document2.put("content2","test2") @AT@ 2236 @LENGTH@ 34
---------INS SimpleName@@Name:document2 @TO@ MethodInvocation@@document2.put("content2","test2") @AT@ 2236 @LENGTH@ 9
---------INS SimpleName@@MethodName:put:["content2", "test2"] @TO@ MethodInvocation@@document2.put("content2","test2") @AT@ 2246 @LENGTH@ 24
------------INS StringLiteral@@"content2" @TO@ SimpleName@@MethodName:put:["content2", "test2"] @AT@ 2250 @LENGTH@ 10
------------INS StringLiteral@@"test2" @TO@ SimpleName@@MethodName:put:["content2", "test2"] @AT@ 2262 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:documents.add(document1) @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 2281 @LENGTH@ 25
------INS MethodInvocation@@documents.add(document1) @TO@ ExpressionStatement@@MethodInvocation:documents.add(document1) @AT@ 2281 @LENGTH@ 24
---------INS SimpleName@@Name:documents @TO@ MethodInvocation@@documents.add(document1) @AT@ 2281 @LENGTH@ 9
---------INS SimpleName@@MethodName:add:[document1] @TO@ MethodInvocation@@documents.add(document1) @AT@ 2291 @LENGTH@ 14
------------INS SimpleName@@document1 @TO@ SimpleName@@MethodName:add:[document1] @AT@ 2295 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:documents.add(document2) @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 2315 @LENGTH@ 25
------INS MethodInvocation@@documents.add(document2) @TO@ ExpressionStatement@@MethodInvocation:documents.add(document2) @AT@ 2315 @LENGTH@ 24
---------INS SimpleName@@Name:documents @TO@ MethodInvocation@@documents.add(document2) @AT@ 2315 @LENGTH@ 9
---------INS SimpleName@@MethodName:add:[document2] @TO@ MethodInvocation@@documents.add(document2) @AT@ 2325 @LENGTH@ 14
------------INS SimpleName@@document2 @TO@ SimpleName@@MethodName:add:[document2] @AT@ 2329 @LENGTH@ 9
---INS VariableDeclarationStatement@@List indexIds=template.requestBody("direct:bulk_index",documents,List.class); @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 2350 @LENGTH@ 81
------INS SimpleType@@List @TO@ VariableDeclarationStatement@@List indexIds=template.requestBody("direct:bulk_index",documents,List.class); @AT@ 2350 @LENGTH@ 4
------INS VariableDeclarationFragment@@indexIds=template.requestBody("direct:bulk_index",documents,List.class) @TO@ VariableDeclarationStatement@@List indexIds=template.requestBody("direct:bulk_index",documents,List.class); @AT@ 2355 @LENGTH@ 75
---------INS SimpleName@@indexIds @TO@ VariableDeclarationFragment@@indexIds=template.requestBody("direct:bulk_index",documents,List.class) @AT@ 2355 @LENGTH@ 8
---------INS MethodInvocation@@template.requestBody("direct:bulk_index",documents,List.class) @TO@ VariableDeclarationFragment@@indexIds=template.requestBody("direct:bulk_index",documents,List.class) @AT@ 2366 @LENGTH@ 64
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBody("direct:bulk_index",documents,List.class) @AT@ 2366 @LENGTH@ 8
------------INS SimpleName@@MethodName:requestBody:["direct:bulk_index", documents, List.class] @TO@ MethodInvocation@@template.requestBody("direct:bulk_index",documents,List.class) @AT@ 2375 @LENGTH@ 55
---------------INS StringLiteral@@"direct:bulk_index" @TO@ SimpleName@@MethodName:requestBody:["direct:bulk_index", documents, List.class] @AT@ 2387 @LENGTH@ 19
---------------INS SimpleName@@documents @TO@ SimpleName@@MethodName:requestBody:["direct:bulk_index", documents, List.class] @AT@ 2408 @LENGTH@ 9
---------------INS TypeLiteral@@List.class @TO@ SimpleName@@MethodName:requestBody:["direct:bulk_index", documents, List.class] @AT@ 2419 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertNotNull("indexIds should be set",indexIds) @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 2440 @LENGTH@ 50
------INS MethodInvocation@@assertNotNull("indexIds should be set",indexIds) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull("indexIds should be set",indexIds) @AT@ 2440 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertNotNull:["indexIds should be set", indexIds] @TO@ MethodInvocation@@assertNotNull("indexIds should be set",indexIds) @AT@ 2440 @LENGTH@ 49
------------INS StringLiteral@@"indexIds should be set" @TO@ SimpleName@@MethodName:assertNotNull:["indexIds should be set", indexIds] @AT@ 2454 @LENGTH@ 24
------------INS SimpleName@@indexIds @TO@ SimpleName@@MethodName:assertNotNull:["indexIds should be set", indexIds] @AT@ 2480 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertCollectionSize("Indexed documents should match the size of documents",indexIds,documents.size()) @TO@ MethodDeclaration@@public, void, MethodName:testBulkIndex, Exception,  @AT@ 2499 @LENGTH@ 105
------INS MethodInvocation@@assertCollectionSize("Indexed documents should match the size of documents",indexIds,documents.size()) @TO@ ExpressionStatement@@MethodInvocation:assertCollectionSize("Indexed documents should match the size of documents",indexIds,documents.size()) @AT@ 2499 @LENGTH@ 104
---------INS SimpleName@@MethodName:assertCollectionSize:["Indexed documents should match the size of documents", indexIds, documents.size()] @TO@ MethodInvocation@@assertCollectionSize("Indexed documents should match the size of documents",indexIds,documents.size()) @AT@ 2499 @LENGTH@ 104
------------INS StringLiteral@@"Indexed documents should match the size of documents" @TO@ SimpleName@@MethodName:assertCollectionSize:["Indexed documents should match the size of documents", indexIds, documents.size()] @AT@ 2520 @LENGTH@ 54
------------INS SimpleName@@indexIds @TO@ SimpleName@@MethodName:assertCollectionSize:["Indexed documents should match the size of documents", indexIds, documents.size()] @AT@ 2576 @LENGTH@ 8
------------INS MethodInvocation@@documents.size() @TO@ SimpleName@@MethodName:assertCollectionSize:["Indexed documents should match the size of documents", indexIds, documents.size()] @AT@ 2586 @LENGTH@ 16
---------------INS SimpleName@@Name:documents @TO@ MethodInvocation@@documents.size() @AT@ 2586 @LENGTH@ 9
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@documents.size() @AT@ 2596 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:doesNotRejectParameterIfPageableComesFirst, Exception,  @TO@ TypeDeclaration@@[public]ParametersUnitTests,  @AT@ 3756 @LENGTH@ 154
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesNotRejectParameterIfPageableComesFirst, Exception,  @AT@ 3756 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesNotRejectParameterIfPageableComesFirst, Exception,  @AT@ 3763 @LENGTH@ 4
---INS SimpleName@@MethodName:doesNotRejectParameterIfPageableComesFirst @TO@ MethodDeclaration@@public, void, MethodName:doesNotRejectParameterIfPageableComesFirst, Exception,  @AT@ 3768 @LENGTH@ 42
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:doesNotRejectParameterIfPageableComesFirst, Exception,  @AT@ 3820 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:getParametersFor("validWithPageableFirst",Pageable.class,String.class) @TO@ MethodDeclaration@@public, void, MethodName:doesNotRejectParameterIfPageableComesFirst, Exception,  @AT@ 3834 @LENGTH@ 73
------INS MethodInvocation@@getParametersFor("validWithPageableFirst",Pageable.class,String.class) @TO@ ExpressionStatement@@MethodInvocation:getParametersFor("validWithPageableFirst",Pageable.class,String.class) @AT@ 3834 @LENGTH@ 72
---------INS SimpleName@@MethodName:getParametersFor:["validWithPageableFirst", Pageable.class, String.class] @TO@ MethodInvocation@@getParametersFor("validWithPageableFirst",Pageable.class,String.class) @AT@ 3834 @LENGTH@ 72
------------INS StringLiteral@@"validWithPageableFirst" @TO@ SimpleName@@MethodName:getParametersFor:["validWithPageableFirst", Pageable.class, String.class] @AT@ 3851 @LENGTH@ 24
------------INS TypeLiteral@@Pageable.class @TO@ SimpleName@@MethodName:getParametersFor:["validWithPageableFirst", Pageable.class, String.class] @AT@ 3877 @LENGTH@ 14
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getParametersFor:["validWithPageableFirst", Pageable.class, String.class] @AT@ 3893 @LENGTH@ 12


DEL ExpressionStatement@@MethodInvocation:setAccessTokenUri(test.http.getUrl(tokenPath())) @AT@ 2476 @LENGTH@ 49
---DEL MethodInvocation@@setAccessTokenUri(test.http.getUrl(tokenPath())) @AT@ 2476 @LENGTH@ 48
------DEL SimpleName@@MethodName:setAccessTokenUri:[test.http.getUrl(tokenPath())] @AT@ 2476 @LENGTH@ 48
---------DEL MethodInvocation@@test.http.getUrl(tokenPath()) @AT@ 2494 @LENGTH@ 29
------------DEL QualifiedName@@Name:test.http @AT@ 2494 @LENGTH@ 9
------------DEL SimpleName@@MethodName:getUrl:[tokenPath()] @AT@ 2504 @LENGTH@ 19
---------------DEL MethodInvocation@@MethodName:tokenPath:[] @AT@ 2511 @LENGTH@ 11

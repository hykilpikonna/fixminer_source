UPD ExpressionStatement@@MethodInvocation:assertEquals("Size should be 50",50,template.getCurrentCacheSize()) @TO@ MethodInvocation:assertTrue("Size should be around 50",template.getCurrentCacheSize() >= 50) @AT@ 2173 @LENGTH@ 70
---UPD MethodInvocation@@assertEquals("Size should be 50",50,template.getCurrentCacheSize()) @TO@ assertTrue("Size should be around 50",template.getCurrentCacheSize() >= 50) @AT@ 2173 @LENGTH@ 69
------UPD SimpleName@@MethodName:assertEquals:["Size should be 50", 50, template.getCurrentCacheSize()] @TO@ MethodName:assertTrue:["Size should be around 50", template.getCurrentCacheSize() >= 50] @AT@ 2173 @LENGTH@ 69
---------UPD StringLiteral@@"Size should be 50" @TO@ "Size should be around 50" @AT@ 2186 @LENGTH@ 19
---------DEL NumberLiteral@@50 @AT@ 2207 @LENGTH@ 2
---------DEL MethodInvocation@@template.getCurrentCacheSize() @AT@ 2211 @LENGTH@ 30
---------INS InfixExpression@@template.getCurrentCacheSize() >= 50 @TO@ SimpleName@@MethodName:assertEquals:["Size should be 50", 50, template.getCurrentCacheSize()] @AT@ 2212 @LENGTH@ 36
------------INS MethodInvocation@@template.getCurrentCacheSize() @TO@ InfixExpression@@template.getCurrentCacheSize() >= 50 @AT@ 2212 @LENGTH@ 30
---------------MOV SimpleName@@Name:template @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2211 @LENGTH@ 8
---------------MOV SimpleName@@Name:template @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2211 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:getCurrentCacheSize:[] @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2220 @LENGTH@ 21
------------INS Operator@@>= @TO@ InfixExpression@@template.getCurrentCacheSize() >= 50 @AT@ 2242 @LENGTH@ 2
------------INS NumberLiteral@@50 @TO@ InfixExpression@@template.getCurrentCacheSize() >= 50 @AT@ 2246 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:run("REPL LOAD " + replicatedDbName + " FROM '"+ dumpLocation+ "'") @TO@ MethodInvocation:run("REPL LOAD " + replicatedDbName + " FROM '"+ dumpLocation+ "' with ('hive.exec.parallel'='true')") @AT@ 12441 @LENGTH@ 70
---UPD MethodInvocation@@run("REPL LOAD " + replicatedDbName + " FROM '"+ dumpLocation+ "'") @TO@ run("REPL LOAD " + replicatedDbName + " FROM '"+ dumpLocation+ "' with ('hive.exec.parallel'='true')") @AT@ 12441 @LENGTH@ 69
------UPD SimpleName@@MethodName:run:["REPL LOAD " + replicatedDbName + " FROM '"+ dumpLocation+ "'"] @TO@ MethodName:run:["REPL LOAD " + replicatedDbName + " FROM '"+ dumpLocation+ "' with ('hive.exec.parallel'='true')"] @AT@ 12441 @LENGTH@ 69
---------UPD InfixExpression@@"REPL LOAD " + replicatedDbName + " FROM '"+ dumpLocation+ "'" @TO@ "REPL LOAD " + replicatedDbName + " FROM '"+ dumpLocation+ "' with ('hive.exec.parallel'='true')" @AT@ 12445 @LENGTH@ 64
------------UPD StringLiteral@@"'" @TO@ "' with ('hive.exec.parallel'='true')" @AT@ 12506 @LENGTH@ 3


UPD MethodDeclaration@@public, void, MethodName:givenPulsarConsumerAndRetryPolicyNonNull_whenICreateFactory_verifyIllegalArgumentExceptionIsNotThrown,  @TO@ public, void, MethodName:givenPulsarConsumerAndRetryPolicyNonNullwhenICreateFactoryverifyIllegalArgumentExceptionIsNotThrown,  @AT@ 1361 @LENGTH@ 274
---UPD SimpleName@@MethodName:givenPulsarConsumerAndRetryPolicyNonNull_whenICreateFactory_verifyIllegalArgumentExceptionIsNotThrown @TO@ MethodName:givenPulsarConsumerAndRetryPolicyNonNullwhenICreateFactoryverifyIllegalArgumentExceptionIsNotThrown @AT@ 1373 @LENGTH@ 101


UPD ExpressionStatement@@MethodInvocation:assertEquals("Size should be 50",50,template.getCurrentCacheSize()) @TO@ MethodInvocation:assertTrue("Size should be around 50",(template.getCurrentCacheSize() <= 51)) @AT@ 2171 @LENGTH@ 70
---UPD MethodInvocation@@assertEquals("Size should be 50",50,template.getCurrentCacheSize()) @TO@ assertTrue("Size should be around 50",(template.getCurrentCacheSize() <= 51)) @AT@ 2171 @LENGTH@ 69
------UPD SimpleName@@MethodName:assertEquals:["Size should be 50", 50, template.getCurrentCacheSize()] @TO@ MethodName:assertTrue:["Size should be around 50", (template.getCurrentCacheSize() <= 51)] @AT@ 2171 @LENGTH@ 69
---------UPD StringLiteral@@"Size should be 50" @TO@ "Size should be around 50" @AT@ 2184 @LENGTH@ 19
---------DEL NumberLiteral@@50 @AT@ 2205 @LENGTH@ 2
---------DEL MethodInvocation@@template.getCurrentCacheSize() @AT@ 2209 @LENGTH@ 30
---------INS ParenthesizedExpression@@(template.getCurrentCacheSize() <= 51) @TO@ SimpleName@@MethodName:assertEquals:["Size should be 50", 50, template.getCurrentCacheSize()] @AT@ 2250 @LENGTH@ 38
------------INS InfixExpression@@template.getCurrentCacheSize() <= 51 @TO@ ParenthesizedExpression@@(template.getCurrentCacheSize() <= 51) @AT@ 2251 @LENGTH@ 36
---------------INS MethodInvocation@@template.getCurrentCacheSize() @TO@ InfixExpression@@template.getCurrentCacheSize() <= 51 @AT@ 2251 @LENGTH@ 30
------------------MOV SimpleName@@Name:template @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2209 @LENGTH@ 8
------------------MOV SimpleName@@Name:template @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2209 @LENGTH@ 8
------------------MOV SimpleName@@MethodName:getCurrentCacheSize:[] @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2218 @LENGTH@ 21
------------------MOV SimpleName@@MethodName:getCurrentCacheSize:[] @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2218 @LENGTH@ 21
---------------INS Operator@@<= @TO@ InfixExpression@@template.getCurrentCacheSize() <= 51 @AT@ 2281 @LENGTH@ 2
---------------INS NumberLiteral@@51 @TO@ InfixExpression@@template.getCurrentCacheSize() <= 51 @AT@ 2285 @LENGTH@ 2


DEL FieldDeclaration@@private, static, final, Pattern, [CR_OR_LF=Pattern.compile("\\r|\\n")] @AT@ 1016 @LENGTH@ 67
---DEL Modifier@@private @AT@ 1016 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1024 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1031 @LENGTH@ 5
---DEL SimpleType@@Pattern @AT@ 1037 @LENGTH@ 7
---DEL VariableDeclarationFragment@@CR_OR_LF=Pattern.compile("\\r|\\n") @AT@ 1045 @LENGTH@ 37
------DEL SimpleName@@CR_OR_LF @AT@ 1045 @LENGTH@ 8
------DEL MethodInvocation@@Pattern.compile("\\r|\\n") @AT@ 1056 @LENGTH@ 26
---------DEL SimpleName@@Name:Pattern @AT@ 1056 @LENGTH@ 7
---------DEL SimpleName@@MethodName:compile:["\\r|\\n"] @AT@ 1064 @LENGTH@ 18
------------DEL StringLiteral@@"\\r|\\n" @AT@ 1072 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @TO@ TypeDeclaration@@[@SuppressWarnings("unchecked"), public]ProviderManagerTests,  @AT@ 10533 @LENGTH@ 1126
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 10533 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 10540 @LENGTH@ 4
---INS SimpleName@@MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 10545 @LENGTH@ 64
---INS VariableDeclarationStatement@@BadCredentialsException badCredentialsExParent=new BadCredentialsException("Bad Credentials in parent"); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 10616 @LENGTH@ 106
------INS SimpleType@@BadCredentialsException @TO@ VariableDeclarationStatement@@BadCredentialsException badCredentialsExParent=new BadCredentialsException("Bad Credentials in parent"); @AT@ 10616 @LENGTH@ 23
------INS VariableDeclarationFragment@@badCredentialsExParent=new BadCredentialsException("Bad Credentials in parent") @TO@ VariableDeclarationStatement@@BadCredentialsException badCredentialsExParent=new BadCredentialsException("Bad Credentials in parent"); @AT@ 10640 @LENGTH@ 81
---------INS SimpleName@@badCredentialsExParent @TO@ VariableDeclarationFragment@@badCredentialsExParent=new BadCredentialsException("Bad Credentials in parent") @AT@ 10640 @LENGTH@ 22
---------INS ClassInstanceCreation@@BadCredentialsException["Bad Credentials in parent"] @TO@ VariableDeclarationFragment@@badCredentialsExParent=new BadCredentialsException("Bad Credentials in parent") @AT@ 10665 @LENGTH@ 56
------------INS New@@new @TO@ ClassInstanceCreation@@BadCredentialsException["Bad Credentials in parent"] @AT@ 10665 @LENGTH@ 3
------------INS SimpleType@@BadCredentialsException @TO@ ClassInstanceCreation@@BadCredentialsException["Bad Credentials in parent"] @AT@ 10669 @LENGTH@ 23
------------INS StringLiteral@@"Bad Credentials in parent" @TO@ ClassInstanceCreation@@BadCredentialsException["Bad Credentials in parent"] @AT@ 10693 @LENGTH@ 27
---INS VariableDeclarationStatement@@ProviderManager parentMgr=new ProviderManager(Collections.singletonList(createProviderWhichThrows(badCredentialsExParent))); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 10725 @LENGTH@ 131
------INS SimpleType@@ProviderManager @TO@ VariableDeclarationStatement@@ProviderManager parentMgr=new ProviderManager(Collections.singletonList(createProviderWhichThrows(badCredentialsExParent))); @AT@ 10725 @LENGTH@ 15
------INS VariableDeclarationFragment@@parentMgr=new ProviderManager(Collections.singletonList(createProviderWhichThrows(badCredentialsExParent))) @TO@ VariableDeclarationStatement@@ProviderManager parentMgr=new ProviderManager(Collections.singletonList(createProviderWhichThrows(badCredentialsExParent))); @AT@ 10741 @LENGTH@ 114
---------INS SimpleName@@parentMgr @TO@ VariableDeclarationFragment@@parentMgr=new ProviderManager(Collections.singletonList(createProviderWhichThrows(badCredentialsExParent))) @AT@ 10741 @LENGTH@ 9
---------INS ClassInstanceCreation@@ProviderManager[Collections.singletonList(createProviderWhichThrows(badCredentialsExParent))] @TO@ VariableDeclarationFragment@@parentMgr=new ProviderManager(Collections.singletonList(createProviderWhichThrows(badCredentialsExParent))) @AT@ 10753 @LENGTH@ 102
------------INS New@@new @TO@ ClassInstanceCreation@@ProviderManager[Collections.singletonList(createProviderWhichThrows(badCredentialsExParent))] @AT@ 10753 @LENGTH@ 3
------------INS SimpleType@@ProviderManager @TO@ ClassInstanceCreation@@ProviderManager[Collections.singletonList(createProviderWhichThrows(badCredentialsExParent))] @AT@ 10757 @LENGTH@ 15
------------INS MethodInvocation@@Collections.singletonList(createProviderWhichThrows(badCredentialsExParent)) @TO@ ClassInstanceCreation@@ProviderManager[Collections.singletonList(createProviderWhichThrows(badCredentialsExParent))] @AT@ 10778 @LENGTH@ 76
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonList(createProviderWhichThrows(badCredentialsExParent)) @AT@ 10778 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonList:[createProviderWhichThrows(badCredentialsExParent)] @TO@ MethodInvocation@@Collections.singletonList(createProviderWhichThrows(badCredentialsExParent)) @AT@ 10790 @LENGTH@ 64
------------------INS MethodInvocation@@createProviderWhichThrows(badCredentialsExParent) @TO@ SimpleName@@MethodName:singletonList:[createProviderWhichThrows(badCredentialsExParent)] @AT@ 10804 @LENGTH@ 49
---------------------INS SimpleName@@MethodName:createProviderWhichThrows:[badCredentialsExParent] @TO@ MethodInvocation@@createProviderWhichThrows(badCredentialsExParent) @AT@ 10804 @LENGTH@ 49
------------------------INS SimpleName@@badCredentialsExParent @TO@ SimpleName@@MethodName:createProviderWhichThrows:[badCredentialsExParent] @AT@ 10830 @LENGTH@ 22
---INS VariableDeclarationStatement@@ProviderManager childMgr=new ProviderManager(Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))),parentMgr); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 10859 @LENGTH@ 176
------INS SimpleType@@ProviderManager @TO@ VariableDeclarationStatement@@ProviderManager childMgr=new ProviderManager(Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))),parentMgr); @AT@ 10859 @LENGTH@ 15
------INS VariableDeclarationFragment@@childMgr=new ProviderManager(Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))),parentMgr) @TO@ VariableDeclarationStatement@@ProviderManager childMgr=new ProviderManager(Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))),parentMgr); @AT@ 10875 @LENGTH@ 159
---------INS SimpleName@@childMgr @TO@ VariableDeclarationFragment@@childMgr=new ProviderManager(Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))),parentMgr) @AT@ 10875 @LENGTH@ 8
---------INS ClassInstanceCreation@@ProviderManager[Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))), parentMgr] @TO@ VariableDeclarationFragment@@childMgr=new ProviderManager(Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))),parentMgr) @AT@ 10886 @LENGTH@ 148
------------INS New@@new @TO@ ClassInstanceCreation@@ProviderManager[Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))), parentMgr] @AT@ 10886 @LENGTH@ 3
------------INS SimpleType@@ProviderManager @TO@ ClassInstanceCreation@@ProviderManager[Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))), parentMgr] @AT@ 10890 @LENGTH@ 15
------------INS MethodInvocation@@Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))) @TO@ ClassInstanceCreation@@ProviderManager[Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))), parentMgr] @AT@ 10906 @LENGTH@ 116
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))) @AT@ 10906 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonList:[createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))] @TO@ MethodInvocation@@Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))) @AT@ 10918 @LENGTH@ 104
------------------INS MethodInvocation@@createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child")) @TO@ SimpleName@@MethodName:singletonList:[createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))] @AT@ 10932 @LENGTH@ 89
---------------------INS SimpleName@@MethodName:createProviderWhichThrows:[new BadCredentialsException("Bad Credentials in child")] @TO@ MethodInvocation@@createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child")) @AT@ 10932 @LENGTH@ 89
------------------------INS ClassInstanceCreation@@BadCredentialsException["Bad Credentials in child"] @TO@ SimpleName@@MethodName:createProviderWhichThrows:[new BadCredentialsException("Bad Credentials in child")] @AT@ 10965 @LENGTH@ 55
---------------------------INS New@@new @TO@ ClassInstanceCreation@@BadCredentialsException["Bad Credentials in child"] @AT@ 10965 @LENGTH@ 3
---------------------------INS SimpleType@@BadCredentialsException @TO@ ClassInstanceCreation@@BadCredentialsException["Bad Credentials in child"] @AT@ 10969 @LENGTH@ 23
---------------------------INS StringLiteral@@"Bad Credentials in child" @TO@ ClassInstanceCreation@@BadCredentialsException["Bad Credentials in child"] @AT@ 10993 @LENGTH@ 26
------------INS SimpleName@@parentMgr @TO@ ClassInstanceCreation@@ProviderManager[Collections.singletonList(createProviderWhichThrows(new BadCredentialsException("Bad Credentials in child"))), parentMgr] @AT@ 11024 @LENGTH@ 9
---INS VariableDeclarationStatement@@AuthenticationEventPublisher publisher=mock(AuthenticationEventPublisher.class); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 11039 @LENGTH@ 82
------INS SimpleType@@AuthenticationEventPublisher @TO@ VariableDeclarationStatement@@AuthenticationEventPublisher publisher=mock(AuthenticationEventPublisher.class); @AT@ 11039 @LENGTH@ 28
------INS VariableDeclarationFragment@@publisher=mock(AuthenticationEventPublisher.class) @TO@ VariableDeclarationStatement@@AuthenticationEventPublisher publisher=mock(AuthenticationEventPublisher.class); @AT@ 11068 @LENGTH@ 52
---------INS SimpleName@@publisher @TO@ VariableDeclarationFragment@@publisher=mock(AuthenticationEventPublisher.class) @AT@ 11068 @LENGTH@ 9
---------INS MethodInvocation@@mock(AuthenticationEventPublisher.class) @TO@ VariableDeclarationFragment@@publisher=mock(AuthenticationEventPublisher.class) @AT@ 11080 @LENGTH@ 40
------------INS SimpleName@@MethodName:mock:[AuthenticationEventPublisher.class] @TO@ MethodInvocation@@mock(AuthenticationEventPublisher.class) @AT@ 11080 @LENGTH@ 40
---------------INS TypeLiteral@@AuthenticationEventPublisher.class @TO@ SimpleName@@MethodName:mock:[AuthenticationEventPublisher.class] @AT@ 11085 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:parentMgr.setAuthenticationEventPublisher(publisher) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 11124 @LENGTH@ 53
------INS MethodInvocation@@parentMgr.setAuthenticationEventPublisher(publisher) @TO@ ExpressionStatement@@MethodInvocation:parentMgr.setAuthenticationEventPublisher(publisher) @AT@ 11124 @LENGTH@ 52
---------INS SimpleName@@Name:parentMgr @TO@ MethodInvocation@@parentMgr.setAuthenticationEventPublisher(publisher) @AT@ 11124 @LENGTH@ 9
---------INS SimpleName@@MethodName:setAuthenticationEventPublisher:[publisher] @TO@ MethodInvocation@@parentMgr.setAuthenticationEventPublisher(publisher) @AT@ 11134 @LENGTH@ 42
------------INS SimpleName@@publisher @TO@ SimpleName@@MethodName:setAuthenticationEventPublisher:[publisher] @AT@ 11166 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:childMgr.setAuthenticationEventPublisher(publisher) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 11180 @LENGTH@ 52
------INS MethodInvocation@@childMgr.setAuthenticationEventPublisher(publisher) @TO@ ExpressionStatement@@MethodInvocation:childMgr.setAuthenticationEventPublisher(publisher) @AT@ 11180 @LENGTH@ 51
---------INS SimpleName@@Name:childMgr @TO@ MethodInvocation@@childMgr.setAuthenticationEventPublisher(publisher) @AT@ 11180 @LENGTH@ 8
---------INS SimpleName@@MethodName:setAuthenticationEventPublisher:[publisher] @TO@ MethodInvocation@@childMgr.setAuthenticationEventPublisher(publisher) @AT@ 11189 @LENGTH@ 42
------------INS SimpleName@@publisher @TO@ SimpleName@@MethodName:setAuthenticationEventPublisher:[publisher] @AT@ 11221 @LENGTH@ 9
---INS VariableDeclarationStatement@@final Authentication authReq=mock(Authentication.class); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 11236 @LENGTH@ 58
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Authentication authReq=mock(Authentication.class); @AT@ 11236 @LENGTH@ 5
------INS SimpleType@@Authentication @TO@ VariableDeclarationStatement@@final Authentication authReq=mock(Authentication.class); @AT@ 11242 @LENGTH@ 14
------INS VariableDeclarationFragment@@authReq=mock(Authentication.class) @TO@ VariableDeclarationStatement@@final Authentication authReq=mock(Authentication.class); @AT@ 11257 @LENGTH@ 36
---------INS SimpleName@@authReq @TO@ VariableDeclarationFragment@@authReq=mock(Authentication.class) @AT@ 11257 @LENGTH@ 7
---------INS MethodInvocation@@mock(Authentication.class) @TO@ VariableDeclarationFragment@@authReq=mock(Authentication.class) @AT@ 11267 @LENGTH@ 26
------------INS SimpleName@@MethodName:mock:[Authentication.class] @TO@ MethodInvocation@@mock(Authentication.class) @AT@ 11267 @LENGTH@ 26
---------------INS TypeLiteral@@Authentication.class @TO@ SimpleName@@MethodName:mock:[Authentication.class] @AT@ 11272 @LENGTH@ 20
---INS TryStatement@@try {  childMgr.authenticate(authReq);  fail("Expected exception");} catch (BadCredentialsException e) {  assertThat(e).isSameAs(badCredentialsExParent);} @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 11298 @LENGTH@ 168
------INS ExpressionStatement@@MethodInvocation:childMgr.authenticate(authReq) @TO@ TryStatement@@try {  childMgr.authenticate(authReq);  fail("Expected exception");} catch (BadCredentialsException e) {  assertThat(e).isSameAs(badCredentialsExParent);} @AT@ 11307 @LENGTH@ 31
---------INS MethodInvocation@@childMgr.authenticate(authReq) @TO@ ExpressionStatement@@MethodInvocation:childMgr.authenticate(authReq) @AT@ 11307 @LENGTH@ 30
------------INS SimpleName@@Name:childMgr @TO@ MethodInvocation@@childMgr.authenticate(authReq) @AT@ 11307 @LENGTH@ 8
------------INS SimpleName@@MethodName:authenticate:[authReq] @TO@ MethodInvocation@@childMgr.authenticate(authReq) @AT@ 11316 @LENGTH@ 21
---------------INS SimpleName@@authReq @TO@ SimpleName@@MethodName:authenticate:[authReq] @AT@ 11329 @LENGTH@ 7
------INS ExpressionStatement@@MethodInvocation:fail("Expected exception") @TO@ TryStatement@@try {  childMgr.authenticate(authReq);  fail("Expected exception");} catch (BadCredentialsException e) {  assertThat(e).isSameAs(badCredentialsExParent);} @AT@ 11342 @LENGTH@ 27
---------INS MethodInvocation@@fail("Expected exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Expected exception") @AT@ 11342 @LENGTH@ 26
------------INS SimpleName@@MethodName:fail:["Expected exception"] @TO@ MethodInvocation@@fail("Expected exception") @AT@ 11342 @LENGTH@ 26
---------------INS StringLiteral@@"Expected exception" @TO@ SimpleName@@MethodName:fail:["Expected exception"] @AT@ 11347 @LENGTH@ 20
------INS CatchClause@@catch (BadCredentialsException e) {  assertThat(e).isSameAs(badCredentialsExParent);} @TO@ TryStatement@@try {  childMgr.authenticate(authReq);  fail("Expected exception");} catch (BadCredentialsException e) {  assertThat(e).isSameAs(badCredentialsExParent);} @AT@ 11376 @LENGTH@ 90
---------INS SingleVariableDeclaration@@BadCredentialsException e @TO@ CatchClause@@catch (BadCredentialsException e) {  assertThat(e).isSameAs(badCredentialsExParent);} @AT@ 11383 @LENGTH@ 25
------------INS SimpleType@@BadCredentialsException @TO@ SingleVariableDeclaration@@BadCredentialsException e @AT@ 11383 @LENGTH@ 23
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@BadCredentialsException e @AT@ 11407 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:assertThat(e).isSameAs(badCredentialsExParent) @TO@ CatchClause@@catch (BadCredentialsException e) {  assertThat(e).isSameAs(badCredentialsExParent);} @AT@ 11415 @LENGTH@ 47
------------INS MethodInvocation@@assertThat(e).isSameAs(badCredentialsExParent) @TO@ ExpressionStatement@@MethodInvocation:assertThat(e).isSameAs(badCredentialsExParent) @AT@ 11415 @LENGTH@ 46
---------------INS MethodInvocation@@MethodName:assertThat:[e] @TO@ MethodInvocation@@assertThat(e).isSameAs(badCredentialsExParent) @AT@ 11415 @LENGTH@ 13
------------------INS SimpleName@@e @TO@ MethodInvocation@@MethodName:assertThat:[e] @AT@ 11426 @LENGTH@ 1
---------------INS SimpleName@@MethodName:isSameAs:[badCredentialsExParent] @TO@ MethodInvocation@@assertThat(e).isSameAs(badCredentialsExParent) @AT@ 11429 @LENGTH@ 32
------------------INS SimpleName@@badCredentialsExParent @TO@ SimpleName@@MethodName:isSameAs:[badCredentialsExParent] @AT@ 11438 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:verify(publisher).publishAuthenticationFailure(badCredentialsExParent,authReq) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 11469 @LENGTH@ 80
------INS MethodInvocation@@verify(publisher).publishAuthenticationFailure(badCredentialsExParent,authReq) @TO@ ExpressionStatement@@MethodInvocation:verify(publisher).publishAuthenticationFailure(badCredentialsExParent,authReq) @AT@ 11469 @LENGTH@ 79
---------INS MethodInvocation@@MethodName:verify:[publisher] @TO@ MethodInvocation@@verify(publisher).publishAuthenticationFailure(badCredentialsExParent,authReq) @AT@ 11469 @LENGTH@ 17
------------INS SimpleName@@publisher @TO@ MethodInvocation@@MethodName:verify:[publisher] @AT@ 11476 @LENGTH@ 9
---------INS SimpleName@@MethodName:publishAuthenticationFailure:[badCredentialsExParent, authReq] @TO@ MethodInvocation@@verify(publisher).publishAuthenticationFailure(badCredentialsExParent,authReq) @AT@ 11487 @LENGTH@ 61
------------INS SimpleName@@badCredentialsExParent @TO@ SimpleName@@MethodName:publishAuthenticationFailure:[badCredentialsExParent, authReq] @AT@ 11516 @LENGTH@ 22
------------INS SimpleName@@authReq @TO@ SimpleName@@MethodName:publishAuthenticationFailure:[badCredentialsExParent, authReq] @AT@ 11540 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:verifyNoMoreInteractions(publisher) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish,  @AT@ 11573 @LENGTH@ 36
------INS MethodInvocation@@verifyNoMoreInteractions(publisher) @TO@ ExpressionStatement@@MethodInvocation:verifyNoMoreInteractions(publisher) @AT@ 11573 @LENGTH@ 35
---------INS SimpleName@@MethodName:verifyNoMoreInteractions:[publisher] @TO@ MethodInvocation@@verifyNoMoreInteractions(publisher) @AT@ 11573 @LENGTH@ 35
------------INS SimpleName@@publisher @TO@ SimpleName@@MethodName:verifyNoMoreInteractions:[publisher] @AT@ 11598 @LENGTH@ 9


UPD VariableDeclarationStatement@@TaskRunner tskRun=new TaskRunner(tsk); @TO@ TaskRunner tskRun=new TaskRunner(tsk,cxt); @AT@ 106686 @LENGTH@ 40
---UPD VariableDeclarationFragment@@tskRun=new TaskRunner(tsk) @TO@ tskRun=new TaskRunner(tsk,cxt) @AT@ 106697 @LENGTH@ 28
------UPD ClassInstanceCreation@@TaskRunner[tsk] @TO@ TaskRunner[tsk, cxt] @AT@ 106706 @LENGTH@ 19
---------INS SimpleName@@cxt @TO@ ClassInstanceCreation@@TaskRunner[tsk] @AT@ 106726 @LENGTH@ 3


UPD TypeDeclaration@@[public]ApacheDSContainer, [InitializingBean, DisposableBean, Lifecycle, ApplicationContextAware] @TO@ [@Deprecated, public]ApacheDSContainer, [InitializingBean, DisposableBean, Lifecycle, ApplicationContextAware] @AT@ 3472 @LENGTH@ 8315
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ApacheDSContainer, [InitializingBean, DisposableBean, Lifecycle, ApplicationContextAware] @AT@ 3609 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals("A name is required when saveSate is set to true",iae.getMessage()) @TO@ MethodInvocation:assertEquals("A name is required when saveState is set to true",iae.getMessage()) @AT@ 9266 @LENGTH@ 82
---UPD MethodInvocation@@assertEquals("A name is required when saveSate is set to true",iae.getMessage()) @TO@ assertEquals("A name is required when saveState is set to true",iae.getMessage()) @AT@ 9266 @LENGTH@ 81
------UPD SimpleName@@MethodName:assertEquals:["A name is required when saveSate is set to true", iae.getMessage()] @TO@ MethodName:assertEquals:["A name is required when saveState is set to true", iae.getMessage()] @AT@ 9266 @LENGTH@ 81
---------UPD StringLiteral@@"A name is required when saveSate is set to true" @TO@ "A name is required when saveState is set to true" @AT@ 9279 @LENGTH@ 49


INS MethodDeclaration@@public, void, MethodName:registersCleanupBeanAsNonLazy,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]JpaMetamodelCacheCleanupIntegrationTests,  @AT@ 2001 @LENGTH@ 613
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:registersCleanupBeanAsNonLazy,  @AT@ 2001 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:registersCleanupBeanAsNonLazy,  @AT@ 2008 @LENGTH@ 4
---INS SimpleName@@MethodName:registersCleanupBeanAsNonLazy @TO@ MethodDeclaration@@public, void, MethodName:registersCleanupBeanAsNonLazy,  @AT@ 2013 @LENGTH@ 29
---INS VariableDeclarationStatement@@DefaultListableBeanFactory beanFactory=new DefaultListableBeanFactory(); @TO@ MethodDeclaration@@public, void, MethodName:registersCleanupBeanAsNonLazy,  @AT@ 2050 @LENGTH@ 74
------INS SimpleType@@DefaultListableBeanFactory @TO@ VariableDeclarationStatement@@DefaultListableBeanFactory beanFactory=new DefaultListableBeanFactory(); @AT@ 2050 @LENGTH@ 26
------INS VariableDeclarationFragment@@beanFactory=new DefaultListableBeanFactory() @TO@ VariableDeclarationStatement@@DefaultListableBeanFactory beanFactory=new DefaultListableBeanFactory(); @AT@ 2077 @LENGTH@ 46
---------INS SimpleName@@beanFactory @TO@ VariableDeclarationFragment@@beanFactory=new DefaultListableBeanFactory() @AT@ 2077 @LENGTH@ 11
---------INS ClassInstanceCreation@@DefaultListableBeanFactory[] @TO@ VariableDeclarationFragment@@beanFactory=new DefaultListableBeanFactory() @AT@ 2091 @LENGTH@ 32
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultListableBeanFactory[] @AT@ 2091 @LENGTH@ 3
------------INS SimpleType@@DefaultListableBeanFactory @TO@ ClassInstanceCreation@@DefaultListableBeanFactory[] @AT@ 2095 @LENGTH@ 26
---INS VariableDeclarationStatement@@RepositoryConfigurationSource configurationSource=mock(RepositoryConfigurationSource.class); @TO@ MethodDeclaration@@public, void, MethodName:registersCleanupBeanAsNonLazy,  @AT@ 2127 @LENGTH@ 94
------INS SimpleType@@RepositoryConfigurationSource @TO@ VariableDeclarationStatement@@RepositoryConfigurationSource configurationSource=mock(RepositoryConfigurationSource.class); @AT@ 2127 @LENGTH@ 29
------INS VariableDeclarationFragment@@configurationSource=mock(RepositoryConfigurationSource.class) @TO@ VariableDeclarationStatement@@RepositoryConfigurationSource configurationSource=mock(RepositoryConfigurationSource.class); @AT@ 2157 @LENGTH@ 63
---------INS SimpleName@@configurationSource @TO@ VariableDeclarationFragment@@configurationSource=mock(RepositoryConfigurationSource.class) @AT@ 2157 @LENGTH@ 19
---------INS MethodInvocation@@mock(RepositoryConfigurationSource.class) @TO@ VariableDeclarationFragment@@configurationSource=mock(RepositoryConfigurationSource.class) @AT@ 2179 @LENGTH@ 41
------------INS SimpleName@@MethodName:mock:[RepositoryConfigurationSource.class] @TO@ MethodInvocation@@mock(RepositoryConfigurationSource.class) @AT@ 2179 @LENGTH@ 41
---------------INS TypeLiteral@@RepositoryConfigurationSource.class @TO@ SimpleName@@MethodName:mock:[RepositoryConfigurationSource.class] @AT@ 2184 @LENGTH@ 35
---INS VariableDeclarationStatement@@RepositoryConfigurationExtension extension=new JpaRepositoryConfigExtension(); @TO@ MethodDeclaration@@public, void, MethodName:registersCleanupBeanAsNonLazy,  @AT@ 2225 @LENGTH@ 80
------INS SimpleType@@RepositoryConfigurationExtension @TO@ VariableDeclarationStatement@@RepositoryConfigurationExtension extension=new JpaRepositoryConfigExtension(); @AT@ 2225 @LENGTH@ 32
------INS VariableDeclarationFragment@@extension=new JpaRepositoryConfigExtension() @TO@ VariableDeclarationStatement@@RepositoryConfigurationExtension extension=new JpaRepositoryConfigExtension(); @AT@ 2258 @LENGTH@ 46
---------INS SimpleName@@extension @TO@ VariableDeclarationFragment@@extension=new JpaRepositoryConfigExtension() @AT@ 2258 @LENGTH@ 9
---------INS ClassInstanceCreation@@JpaRepositoryConfigExtension[] @TO@ VariableDeclarationFragment@@extension=new JpaRepositoryConfigExtension() @AT@ 2270 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@JpaRepositoryConfigExtension[] @AT@ 2270 @LENGTH@ 3
------------INS SimpleType@@JpaRepositoryConfigExtension @TO@ ClassInstanceCreation@@JpaRepositoryConfigExtension[] @AT@ 2274 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:extension.registerBeansForRoot(beanFactory,configurationSource) @TO@ MethodDeclaration@@public, void, MethodName:registersCleanupBeanAsNonLazy,  @AT@ 2308 @LENGTH@ 65
------INS MethodInvocation@@extension.registerBeansForRoot(beanFactory,configurationSource) @TO@ ExpressionStatement@@MethodInvocation:extension.registerBeansForRoot(beanFactory,configurationSource) @AT@ 2308 @LENGTH@ 64
---------INS SimpleName@@Name:extension @TO@ MethodInvocation@@extension.registerBeansForRoot(beanFactory,configurationSource) @AT@ 2308 @LENGTH@ 9
---------INS SimpleName@@MethodName:registerBeansForRoot:[beanFactory, configurationSource] @TO@ MethodInvocation@@extension.registerBeansForRoot(beanFactory,configurationSource) @AT@ 2318 @LENGTH@ 54
------------INS SimpleName@@beanFactory @TO@ SimpleName@@MethodName:registerBeansForRoot:[beanFactory, configurationSource] @AT@ 2339 @LENGTH@ 11
------------INS SimpleName@@configurationSource @TO@ SimpleName@@MethodName:registerBeansForRoot:[beanFactory, configurationSource] @AT@ 2352 @LENGTH@ 19
---INS VariableDeclarationStatement@@String[] cleanupBeanNames=beanFactory.getBeanNamesForType(JpaMetamodelCacheCleanup.class); @TO@ MethodDeclaration@@public, void, MethodName:registersCleanupBeanAsNonLazy,  @AT@ 2377 @LENGTH@ 92
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] cleanupBeanNames=beanFactory.getBeanNamesForType(JpaMetamodelCacheCleanup.class); @AT@ 2377 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 2377 @LENGTH@ 6
------INS VariableDeclarationFragment@@cleanupBeanNames=beanFactory.getBeanNamesForType(JpaMetamodelCacheCleanup.class) @TO@ VariableDeclarationStatement@@String[] cleanupBeanNames=beanFactory.getBeanNamesForType(JpaMetamodelCacheCleanup.class); @AT@ 2386 @LENGTH@ 82
---------INS SimpleName@@cleanupBeanNames @TO@ VariableDeclarationFragment@@cleanupBeanNames=beanFactory.getBeanNamesForType(JpaMetamodelCacheCleanup.class) @AT@ 2386 @LENGTH@ 16
---------INS MethodInvocation@@beanFactory.getBeanNamesForType(JpaMetamodelCacheCleanup.class) @TO@ VariableDeclarationFragment@@cleanupBeanNames=beanFactory.getBeanNamesForType(JpaMetamodelCacheCleanup.class) @AT@ 2405 @LENGTH@ 63
------------INS SimpleName@@Name:beanFactory @TO@ MethodInvocation@@beanFactory.getBeanNamesForType(JpaMetamodelCacheCleanup.class) @AT@ 2405 @LENGTH@ 11
------------INS SimpleName@@MethodName:getBeanNamesForType:[JpaMetamodelCacheCleanup.class] @TO@ MethodInvocation@@beanFactory.getBeanNamesForType(JpaMetamodelCacheCleanup.class) @AT@ 2417 @LENGTH@ 51
---------------INS TypeLiteral@@JpaMetamodelCacheCleanup.class @TO@ SimpleName@@MethodName:getBeanNamesForType:[JpaMetamodelCacheCleanup.class] @AT@ 2437 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:assertThat(cleanupBeanNames.length).isEqualTo(1) @TO@ MethodDeclaration@@public, void, MethodName:registersCleanupBeanAsNonLazy,  @AT@ 2473 @LENGTH@ 49
------INS MethodInvocation@@assertThat(cleanupBeanNames.length).isEqualTo(1) @TO@ ExpressionStatement@@MethodInvocation:assertThat(cleanupBeanNames.length).isEqualTo(1) @AT@ 2473 @LENGTH@ 48
---------INS MethodInvocation@@MethodName:assertThat:[cleanupBeanNames.length] @TO@ MethodInvocation@@assertThat(cleanupBeanNames.length).isEqualTo(1) @AT@ 2473 @LENGTH@ 35
------------INS QualifiedName@@cleanupBeanNames.length @TO@ MethodInvocation@@MethodName:assertThat:[cleanupBeanNames.length] @AT@ 2484 @LENGTH@ 23
---------------INS SimpleName@@cleanupBeanNames @TO@ QualifiedName@@cleanupBeanNames.length @AT@ 2484 @LENGTH@ 16
---------------INS SimpleName@@length @TO@ QualifiedName@@cleanupBeanNames.length @AT@ 2501 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:[1] @TO@ MethodInvocation@@assertThat(cleanupBeanNames.length).isEqualTo(1) @AT@ 2509 @LENGTH@ 12
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:isEqualTo:[1] @AT@ 2519 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(beanFactory.getBeanDefinition(cleanupBeanNames[0]).isLazyInit()).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:registersCleanupBeanAsNonLazy,  @AT@ 2525 @LENGTH@ 86
------INS MethodInvocation@@assertThat(beanFactory.getBeanDefinition(cleanupBeanNames[0]).isLazyInit()).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(beanFactory.getBeanDefinition(cleanupBeanNames[0]).isLazyInit()).isFalse() @AT@ 2525 @LENGTH@ 85
---------INS MethodInvocation@@MethodName:assertThat:[beanFactory.getBeanDefinition(cleanupBeanNames[0]).isLazyInit()] @TO@ MethodInvocation@@assertThat(beanFactory.getBeanDefinition(cleanupBeanNames[0]).isLazyInit()).isFalse() @AT@ 2525 @LENGTH@ 75
------------INS MethodInvocation@@beanFactory.getBeanDefinition(cleanupBeanNames[0]).isLazyInit() @TO@ MethodInvocation@@MethodName:assertThat:[beanFactory.getBeanDefinition(cleanupBeanNames[0]).isLazyInit()] @AT@ 2536 @LENGTH@ 63
---------------INS MethodInvocation@@MethodName:getBeanDefinition:[cleanupBeanNames[0]] @TO@ MethodInvocation@@beanFactory.getBeanDefinition(cleanupBeanNames[0]).isLazyInit() @AT@ 2536 @LENGTH@ 50
------------------INS ArrayAccess@@cleanupBeanNames[0] @TO@ MethodInvocation@@MethodName:getBeanDefinition:[cleanupBeanNames[0]] @AT@ 2566 @LENGTH@ 19
---------------------INS SimpleName@@cleanupBeanNames @TO@ ArrayAccess@@cleanupBeanNames[0] @AT@ 2566 @LENGTH@ 16
---------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@cleanupBeanNames[0] @AT@ 2583 @LENGTH@ 1
---------------INS SimpleName@@Name:beanFactory @TO@ MethodInvocation@@beanFactory.getBeanDefinition(cleanupBeanNames[0]).isLazyInit() @AT@ 2536 @LENGTH@ 11
---------------INS SimpleName@@MethodName:isLazyInit:[] @TO@ MethodInvocation@@beanFactory.getBeanDefinition(cleanupBeanNames[0]).isLazyInit() @AT@ 2587 @LENGTH@ 12
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(beanFactory.getBeanDefinition(cleanupBeanNames[0]).isLazyInit()).isFalse() @AT@ 2601 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Received ping --> {}",payload) @TO@ MethodInvocation:log.debug("Received ping --> {}",payload) @AT@ 6974 @LENGTH@ 43
---UPD MethodInvocation@@LOG.debug("Received ping --> {}",payload) @TO@ log.debug("Received ping --> {}",payload) @AT@ 6974 @LENGTH@ 42
------UPD SimpleName@@Name:LOG @TO@ Name:log @AT@ 6974 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:context.startRoute("consumer") @TO@ MethodInvocation:context.start() @AT@ 1422 @LENGTH@ 31
---UPD MethodInvocation@@context.startRoute("consumer") @TO@ context.start() @AT@ 1422 @LENGTH@ 30
------UPD SimpleName@@MethodName:startRoute:["consumer"] @TO@ MethodName:start:[] @AT@ 1430 @LENGTH@ 22
---------DEL StringLiteral@@"consumer" @AT@ 1441 @LENGTH@ 10


UPD VariableDeclarationStatement@@Pattern pattern=Pattern.compile("(" + Pattern.quote(path) + ")\\.\\[.*?\\]"); @TO@ Pattern pattern=Pattern.compile("^(" + Pattern.quote(path) + ")\\.\\[.*?\\]"); @AT@ 4343 @LENGTH@ 79
---UPD VariableDeclarationFragment@@pattern=Pattern.compile("(" + Pattern.quote(path) + ")\\.\\[.*?\\]") @TO@ pattern=Pattern.compile("^(" + Pattern.quote(path) + ")\\.\\[.*?\\]") @AT@ 4351 @LENGTH@ 70
------UPD MethodInvocation@@Pattern.compile("(" + Pattern.quote(path) + ")\\.\\[.*?\\]") @TO@ Pattern.compile("^(" + Pattern.quote(path) + ")\\.\\[.*?\\]") @AT@ 4361 @LENGTH@ 60
---------UPD SimpleName@@MethodName:compile:["(" + Pattern.quote(path) + ")\\.\\[.*?\\]"] @TO@ MethodName:compile:["^(" + Pattern.quote(path) + ")\\.\\[.*?\\]"] @AT@ 4369 @LENGTH@ 52
------------UPD InfixExpression@@"(" + Pattern.quote(path) + ")\\.\\[.*?\\]" @TO@ "^(" + Pattern.quote(path) + ")\\.\\[.*?\\]" @AT@ 4377 @LENGTH@ 43
---------------UPD StringLiteral@@"(" @TO@ "^(" @AT@ 4377 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals("https://baz:15672/api/",brokerRunning.getAdminUri()) @TO@ MethodInvocation:assertEquals("http://baz:15672/api/",brokerRunning.getAdminUri()) @AT@ 1299 @LENGTH@ 68
---UPD MethodInvocation@@assertEquals("https://baz:15672/api/",brokerRunning.getAdminUri()) @TO@ assertEquals("http://baz:15672/api/",brokerRunning.getAdminUri()) @AT@ 1299 @LENGTH@ 67
------UPD SimpleName@@MethodName:assertEquals:["https://baz:15672/api/", brokerRunning.getAdminUri()] @TO@ MethodName:assertEquals:["http://baz:15672/api/", brokerRunning.getAdminUri()] @AT@ 1299 @LENGTH@ 67
---------UPD StringLiteral@@"https://baz:15672/api/" @TO@ "http://baz:15672/api/" @AT@ 1312 @LENGTH@ 24


INS MethodDeclaration@@public, String, MethodName:methodWithVarArgs, String... args,  @TO@ TypeDeclaration@@[public, static]RootWithOverloads,  @AT@ 14040 @LENGTH@ 74
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:methodWithVarArgs, String... args,  @AT@ 14040 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:methodWithVarArgs, String... args,  @AT@ 14047 @LENGTH@ 6
---INS SimpleName@@MethodName:methodWithVarArgs @TO@ MethodDeclaration@@public, String, MethodName:methodWithVarArgs, String... args,  @AT@ 14054 @LENGTH@ 17
---INS SingleVariableDeclaration@@String... args @TO@ MethodDeclaration@@public, String, MethodName:methodWithVarArgs, String... args,  @AT@ 14072 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... args @AT@ 14072 @LENGTH@ 6
------INS SimpleName@@args @TO@ SingleVariableDeclaration@@String... args @AT@ 14082 @LENGTH@ 4
---INS ReturnStatement@@StringLiteral:"varargs" @TO@ MethodDeclaration@@public, String, MethodName:methodWithVarArgs, String... args,  @AT@ 14093 @LENGTH@ 17
------INS StringLiteral@@"varargs" @TO@ ReturnStatement@@StringLiteral:"varargs" @AT@ 14100 @LENGTH@ 9


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1750 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1750 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1757 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1765 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1795 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1802 @LENGTH@ 5


UPD IfStatement@@if (credentialsNode.isNull()) {  credentials=null;} else {  credentials=credentialsNode.asText();} @TO@ if (credentialsNode.isNull() || credentialsNode.isMissingNode()) {  credentials=null;} else {  credentials=credentialsNode.asText();} @AT@ 3042 @LENGTH@ 112
---DEL MethodInvocation@@credentialsNode.isNull() @AT@ 3046 @LENGTH@ 24
---INS InfixExpression@@credentialsNode.isNull() || credentialsNode.isMissingNode() @TO@ IfStatement@@if (credentialsNode.isNull()) {  credentials=null;} else {  credentials=credentialsNode.asText();} @AT@ 3074 @LENGTH@ 59
------INS MethodInvocation@@credentialsNode.isNull() @TO@ InfixExpression@@credentialsNode.isNull() || credentialsNode.isMissingNode() @AT@ 3074 @LENGTH@ 24
---------MOV SimpleName@@Name:credentialsNode @TO@ MethodInvocation@@credentialsNode.isNull() @AT@ 3046 @LENGTH@ 15
---------MOV SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@credentialsNode.isNull() @AT@ 3062 @LENGTH@ 8
------INS Operator@@|| @TO@ InfixExpression@@credentialsNode.isNull() || credentialsNode.isMissingNode() @AT@ 3098 @LENGTH@ 2
------INS MethodInvocation@@credentialsNode.isMissingNode() @TO@ InfixExpression@@credentialsNode.isNull() || credentialsNode.isMissingNode() @AT@ 3102 @LENGTH@ 31
---------INS SimpleName@@Name:credentialsNode @TO@ MethodInvocation@@credentialsNode.isMissingNode() @AT@ 3102 @LENGTH@ 15
---------INS SimpleName@@MethodName:isMissingNode:[] @TO@ MethodInvocation@@credentialsNode.isMissingNode() @AT@ 3118 @LENGTH@ 15


UPD MethodDeclaration@@public, void, MethodName:testMultipleMessageConsumedByCluster_withConcurrentConfiguration, Exception,  @TO@ public, void, MethodName:testMultipleMessageConsumedByClusterwithConcurrentConfiguration, Exception,  @AT@ 4114 @LENGTH@ 552
---UPD SimpleName@@MethodName:testMultipleMessageConsumedByCluster_withConcurrentConfiguration @TO@ MethodName:testMultipleMessageConsumedByClusterwithConcurrentConfiguration @AT@ 4126 @LENGTH@ 64


MOV FieldDeclaration@@private, MockEndpoint, [mock] @TO@ TypeDeclaration@@[public]S3BatchConsumerTest, CamelTestSupport @AT@ 1338 @LENGTH@ 26


UPD Block@@ThenBody:{  Method changeSessionIdMethod=ReflectionUtils.findMethod(HttpServletRequest.class,"changeSessionId");  sessionFixationAttribute=changeSessionIdMethod == null ? OPT_SESSION_FIXATION_MIGRATE_SESSION : OPT_CHANGE_SESSION_ID;} @TO@ ThenBody:{  sessionFixationAttribute=OPT_CHANGE_SESSION_ID;} @AT@ 16037 @LENGTH@ 247
---DEL VariableDeclarationStatement@@Method changeSessionIdMethod=ReflectionUtils.findMethod(HttpServletRequest.class,"changeSessionId"); @AT@ 16042 @LENGTH@ 109
------DEL SimpleType@@Method @AT@ 16042 @LENGTH@ 6
------DEL VariableDeclarationFragment@@changeSessionIdMethod=ReflectionUtils.findMethod(HttpServletRequest.class,"changeSessionId") @AT@ 16049 @LENGTH@ 101
---------DEL SimpleName@@changeSessionIdMethod @AT@ 16049 @LENGTH@ 21
---------DEL MethodInvocation@@ReflectionUtils.findMethod(HttpServletRequest.class,"changeSessionId") @AT@ 16073 @LENGTH@ 77
------------DEL SimpleName@@Name:ReflectionUtils @AT@ 16073 @LENGTH@ 15
------------DEL SimpleName@@MethodName:findMethod:[HttpServletRequest.class, "changeSessionId"] @AT@ 16089 @LENGTH@ 61
---------------DEL TypeLiteral@@HttpServletRequest.class @AT@ 16106 @LENGTH@ 24
---------------DEL StringLiteral@@"changeSessionId" @AT@ 16132 @LENGTH@ 17
---UPD ExpressionStatement@@Assignment:sessionFixationAttribute=changeSessionIdMethod == null ? OPT_SESSION_FIXATION_MIGRATE_SESSION : OPT_CHANGE_SESSION_ID @TO@ Assignment:sessionFixationAttribute=OPT_CHANGE_SESSION_ID @AT@ 16155 @LENGTH@ 125
------UPD Assignment@@sessionFixationAttribute=changeSessionIdMethod == null ? OPT_SESSION_FIXATION_MIGRATE_SESSION : OPT_CHANGE_SESSION_ID @TO@ sessionFixationAttribute=OPT_CHANGE_SESSION_ID @AT@ 16155 @LENGTH@ 124
---------INS SimpleName@@OPT_CHANGE_SESSION_ID @TO@ Assignment@@sessionFixationAttribute=changeSessionIdMethod == null ? OPT_SESSION_FIXATION_MIGRATE_SESSION : OPT_CHANGE_SESSION_ID @AT@ 15942 @LENGTH@ 21
---------DEL ConditionalExpression@@changeSessionIdMethod == null ? OPT_SESSION_FIXATION_MIGRATE_SESSION : OPT_CHANGE_SESSION_ID @AT@ 16182 @LENGTH@ 97
------------DEL InfixExpression@@changeSessionIdMethod == null @AT@ 16182 @LENGTH@ 29
---------------DEL SimpleName@@changeSessionIdMethod @AT@ 16182 @LENGTH@ 21
---------------DEL Operator@@== @AT@ 16203 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 16207 @LENGTH@ 4
------------DEL SimpleName@@OPT_SESSION_FIXATION_MIGRATE_SESSION @AT@ 16214 @LENGTH@ 36
------------DEL SimpleName@@OPT_CHANGE_SESSION_ID @AT@ 16258 @LENGTH@ 21


UPD MethodDeclaration@@private, Object, MethodName:convertHeaderValueIfNecessary, @Nullable Object value,  @TO@ private, Object, MethodName:convertHeaderValueIfNecessary, @Nullable Object valueArg,  @AT@ 6433 @LENGTH@ 1586
---UPD SingleVariableDeclaration@@@Nullable Object value @TO@ @Nullable Object valueArg @AT@ 6478 @LENGTH@ 22
------UPD SimpleName@@value @TO@ valueArg @AT@ 6495 @LENGTH@ 5
---INS VariableDeclarationStatement@@Object value=valueArg; @TO@ MethodDeclaration@@private, Object, MethodName:convertHeaderValueIfNecessary, @Nullable Object value,  @AT@ 6534 @LENGTH@ 24
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value=valueArg; @AT@ 6534 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=valueArg @TO@ VariableDeclarationStatement@@Object value=valueArg; @AT@ 6541 @LENGTH@ 16
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=valueArg @AT@ 6541 @LENGTH@ 5
---------INS SimpleName@@valueArg @TO@ VariableDeclarationFragment@@value=valueArg @AT@ 6549 @LENGTH@ 8


INS MethodDeclaration@@protected, Visitable, MethodName:prepareVisit, T child,  @TO@ TypeDeclaration@@[public, abstract]TypedSubtree, [Visitable] @AT@ 1602 @LENGTH@ 62
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Visitable, MethodName:prepareVisit, T child,  @AT@ 1602 @LENGTH@ 9
---INS SimpleType@@Visitable @TO@ MethodDeclaration@@protected, Visitable, MethodName:prepareVisit, T child,  @AT@ 1612 @LENGTH@ 9
---INS SimpleName@@MethodName:prepareVisit @TO@ MethodDeclaration@@protected, Visitable, MethodName:prepareVisit, T child,  @AT@ 1622 @LENGTH@ 12
---INS SingleVariableDeclaration@@T child @TO@ MethodDeclaration@@protected, Visitable, MethodName:prepareVisit, T child,  @AT@ 1635 @LENGTH@ 7
------INS SimpleType@@T @TO@ SingleVariableDeclaration@@T child @AT@ 1635 @LENGTH@ 1
------INS SimpleName@@child @TO@ SingleVariableDeclaration@@T child @AT@ 1637 @LENGTH@ 5
---INS ReturnStatement@@SimpleName:child @TO@ MethodDeclaration@@protected, Visitable, MethodName:prepareVisit, T child,  @AT@ 1648 @LENGTH@ 13
------INS SimpleName@@child @TO@ ReturnStatement@@SimpleName:child @AT@ 1655 @LENGTH@ 5


UPD VariableDeclarationStatement@@List<CapabilityServiceConfigurator> builders=new ArrayList<>(4); @TO@ List<CapabilityServiceConfigurator> builders=new ArrayList<>(3); @AT@ 5806 @LENGTH@ 66
---UPD VariableDeclarationFragment@@builders=new ArrayList<>(4) @TO@ builders=new ArrayList<>(3) @AT@ 5842 @LENGTH@ 29
------UPD ClassInstanceCreation@@ArrayList<>[4] @TO@ ArrayList<>[3] @AT@ 5853 @LENGTH@ 18
---------UPD NumberLiteral@@4 @TO@ 3 @AT@ 5869 @LENGTH@ 1


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 6349 @LENGTH@ 64
---DEL Modifier@@public @AT@ 6349 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 6356 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 6364 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 6394 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 6401 @LENGTH@ 5


DEL FieldDeclaration@@AmazonS3ClientMock, [clientMock=new AmazonS3ClientMock()] @AT@ 1620 @LENGTH@ 57
---DEL SimpleType@@AmazonS3ClientMock @AT@ 1620 @LENGTH@ 18
---DEL VariableDeclarationFragment@@clientMock=new AmazonS3ClientMock() @AT@ 1639 @LENGTH@ 37
------DEL SimpleName@@clientMock @AT@ 1639 @LENGTH@ 10
------DEL ClassInstanceCreation@@AmazonS3ClientMock[] @AT@ 1652 @LENGTH@ 24
---------DEL New@@new @AT@ 1652 @LENGTH@ 3
---------DEL SimpleType@@AmazonS3ClientMock @AT@ 1656 @LENGTH@ 18


UPD Block@@ElseBody:if ("skipBindingOnErrorcode".equals(name)) {  verb.setSkipBindingOnErrorCode(extractValueFromFirstArgument(clazz,block,mi));} else if ("clientRequestValidation".equals(name)) {  verb.setClientRequestValidation(extractValueFromFirstArgument(clazz,block,mi));} else if ("consumes".equals(name)) {  verb.setConsumes(extractValueFromFirstArgument(clazz,block,mi));} else if ("produces".equals(name)) {  verb.setProduces(extractValueFromFirstArgument(clazz,block,mi));} else if ("type".equals(name)) {  verb.setType(extractValueFromFirstArgument(clazz,block,mi));} else if ("outType".equals(name)) {  verb.setOutType(extractValueFromFirstArgument(clazz,block,mi));} else if ("apiDocs".equals(name)) {  verb.setApiDocs(extractValueFromFirstArgument(clazz,block,mi));} else if ("to".equals(name)) {  verb.setTo(extractValueFromFirstArgument(clazz,block,mi));} else if ("toD".equals(name)) {  verb.setToD(extractValueFromFirstArgument(clazz,block,mi));} else if ("tag".equals(name)) {  node.setTag(extractValueFromFirstArgument(clazz,block,mi));} @TO@ ElseBody:if ("skipBindingOnErrorCode".equals(name)) {  verb.setSkipBindingOnErrorCode(extractValueFromFirstArgument(clazz,block,mi));} else if ("clientRequestValidation".equals(name)) {  verb.setClientRequestValidation(extractValueFromFirstArgument(clazz,block,mi));} else if ("consumes".equals(name)) {  verb.setConsumes(extractValueFromFirstArgument(clazz,block,mi));} else if ("produces".equals(name)) {  verb.setProduces(extractValueFromFirstArgument(clazz,block,mi));} else if ("type".equals(name)) {  verb.setType(extractValueFromFirstArgument(clazz,block,mi));} else if ("outType".equals(name)) {  verb.setOutType(extractValueFromFirstArgument(clazz,block,mi));} else if ("apiDocs".equals(name)) {  verb.setApiDocs(extractValueFromFirstArgument(clazz,block,mi));} else if ("to".equals(name)) {  verb.setTo(extractValueFromFirstArgument(clazz,block,mi));} else if ("toD".equals(name)) {  verb.setToD(extractValueFromFirstArgument(clazz,block,mi));} else if ("tag".equals(name)) {  node.setTag(extractValueFromFirstArgument(clazz,block,mi));} @AT@ 18667 @LENGTH@ 1316
---UPD IfStatement@@if ("skipBindingOnErrorcode".equals(name)) {  verb.setSkipBindingOnErrorCode(extractValueFromFirstArgument(clazz,block,mi));} else if ("clientRequestValidation".equals(name)) {  verb.setClientRequestValidation(extractValueFromFirstArgument(clazz,block,mi));} else if ("consumes".equals(name)) {  verb.setConsumes(extractValueFromFirstArgument(clazz,block,mi));} else if ("produces".equals(name)) {  verb.setProduces(extractValueFromFirstArgument(clazz,block,mi));} else if ("type".equals(name)) {  verb.setType(extractValueFromFirstArgument(clazz,block,mi));} else if ("outType".equals(name)) {  verb.setOutType(extractValueFromFirstArgument(clazz,block,mi));} else if ("apiDocs".equals(name)) {  verb.setApiDocs(extractValueFromFirstArgument(clazz,block,mi));} else if ("to".equals(name)) {  verb.setTo(extractValueFromFirstArgument(clazz,block,mi));} else if ("toD".equals(name)) {  verb.setToD(extractValueFromFirstArgument(clazz,block,mi));} else if ("tag".equals(name)) {  node.setTag(extractValueFromFirstArgument(clazz,block,mi));} @TO@ if ("skipBindingOnErrorCode".equals(name)) {  verb.setSkipBindingOnErrorCode(extractValueFromFirstArgument(clazz,block,mi));} else if ("clientRequestValidation".equals(name)) {  verb.setClientRequestValidation(extractValueFromFirstArgument(clazz,block,mi));} else if ("consumes".equals(name)) {  verb.setConsumes(extractValueFromFirstArgument(clazz,block,mi));} else if ("produces".equals(name)) {  verb.setProduces(extractValueFromFirstArgument(clazz,block,mi));} else if ("type".equals(name)) {  verb.setType(extractValueFromFirstArgument(clazz,block,mi));} else if ("outType".equals(name)) {  verb.setOutType(extractValueFromFirstArgument(clazz,block,mi));} else if ("apiDocs".equals(name)) {  verb.setApiDocs(extractValueFromFirstArgument(clazz,block,mi));} else if ("to".equals(name)) {  verb.setTo(extractValueFromFirstArgument(clazz,block,mi));} else if ("toD".equals(name)) {  verb.setToD(extractValueFromFirstArgument(clazz,block,mi));} else if ("tag".equals(name)) {  node.setTag(extractValueFromFirstArgument(clazz,block,mi));} @AT@ 18667 @LENGTH@ 1316
------UPD MethodInvocation@@"skipBindingOnErrorcode".equals(name) @TO@ "skipBindingOnErrorCode".equals(name) @AT@ 18671 @LENGTH@ 37
---------UPD StringLiteral@@"skipBindingOnErrorcode" @TO@ "skipBindingOnErrorCode" @AT@ 18671 @LENGTH@ 24
---UPD IfStatement@@if ("skipBindingOnErrorcode".equals(name)) {  verb.setSkipBindingOnErrorCode(extractValueFromFirstArgument(clazz,block,mi));} else if ("clientRequestValidation".equals(name)) {  verb.setClientRequestValidation(extractValueFromFirstArgument(clazz,block,mi));} else if ("consumes".equals(name)) {  verb.setConsumes(extractValueFromFirstArgument(clazz,block,mi));} else if ("produces".equals(name)) {  verb.setProduces(extractValueFromFirstArgument(clazz,block,mi));} else if ("type".equals(name)) {  verb.setType(extractValueFromFirstArgument(clazz,block,mi));} else if ("outType".equals(name)) {  verb.setOutType(extractValueFromFirstArgument(clazz,block,mi));} else if ("apiDocs".equals(name)) {  verb.setApiDocs(extractValueFromFirstArgument(clazz,block,mi));} else if ("to".equals(name)) {  verb.setTo(extractValueFromFirstArgument(clazz,block,mi));} else if ("toD".equals(name)) {  verb.setToD(extractValueFromFirstArgument(clazz,block,mi));} else if ("tag".equals(name)) {  node.setTag(extractValueFromFirstArgument(clazz,block,mi));} @TO@ if ("skipBindingOnErrorCode".equals(name)) {  verb.setSkipBindingOnErrorCode(extractValueFromFirstArgument(clazz,block,mi));} else if ("clientRequestValidation".equals(name)) {  verb.setClientRequestValidation(extractValueFromFirstArgument(clazz,block,mi));} else if ("consumes".equals(name)) {  verb.setConsumes(extractValueFromFirstArgument(clazz,block,mi));} else if ("produces".equals(name)) {  verb.setProduces(extractValueFromFirstArgument(clazz,block,mi));} else if ("type".equals(name)) {  verb.setType(extractValueFromFirstArgument(clazz,block,mi));} else if ("outType".equals(name)) {  verb.setOutType(extractValueFromFirstArgument(clazz,block,mi));} else if ("apiDocs".equals(name)) {  verb.setApiDocs(extractValueFromFirstArgument(clazz,block,mi));} else if ("to".equals(name)) {  verb.setTo(extractValueFromFirstArgument(clazz,block,mi));} else if ("toD".equals(name)) {  verb.setToD(extractValueFromFirstArgument(clazz,block,mi));} else if ("tag".equals(name)) {  node.setTag(extractValueFromFirstArgument(clazz,block,mi));} @AT@ 18667 @LENGTH@ 1316
------UPD MethodInvocation@@"skipBindingOnErrorcode".equals(name) @TO@ "skipBindingOnErrorCode".equals(name) @AT@ 18671 @LENGTH@ 37
---------UPD StringLiteral@@"skipBindingOnErrorcode" @TO@ "skipBindingOnErrorCode" @AT@ 18671 @LENGTH@ 24


UPD TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareForTest({ReflectionUtils.class,Method.class}), @PowerMockIgnore({"org.w3c.dom.*","org.xml.sax.*","org.apache.xerces.*","javax.xml.parsers.*"}), public]SessionManagementConfigurerServlet31Tests,  @TO@ [@RunWith(PowerMockRunner.class), @PowerMockIgnore({"org.w3c.dom.*","org.xml.sax.*","org.apache.xerces.*","javax.xml.parsers.*"}), public]SessionManagementConfigurerServlet31Tests,  @AT@ 2727 @LENGTH@ 3104
---DEL SingleMemberAnnotation@@@PrepareForTest({ReflectionUtils.class,Method.class}) @AT@ 2759 @LENGTH@ 56


INS MethodDeclaration@@public, void, MethodName:setClockSkewWhenNegativeSecondsThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[public]OidcIdTokenValidatorTests,  @AT@ 2647 @LENGTH@ 311
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setClockSkewWhenNegativeSecondsThenThrowIllegalArgumentException,  @AT@ 2647 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setClockSkewWhenNegativeSecondsThenThrowIllegalArgumentException,  @AT@ 2654 @LENGTH@ 4
---INS SimpleName@@MethodName:setClockSkewWhenNegativeSecondsThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setClockSkewWhenNegativeSecondsThenThrowIllegalArgumentException,  @AT@ 2659 @LENGTH@ 64
---INS VariableDeclarationStatement@@OidcIdTokenValidator idTokenValidator=new OidcIdTokenValidator(this.registration.build()); @TO@ MethodDeclaration@@public, void, MethodName:setClockSkewWhenNegativeSecondsThenThrowIllegalArgumentException,  @AT@ 2730 @LENGTH@ 92
------INS SimpleType@@OidcIdTokenValidator @TO@ VariableDeclarationStatement@@OidcIdTokenValidator idTokenValidator=new OidcIdTokenValidator(this.registration.build()); @AT@ 2730 @LENGTH@ 20
------INS VariableDeclarationFragment@@idTokenValidator=new OidcIdTokenValidator(this.registration.build()) @TO@ VariableDeclarationStatement@@OidcIdTokenValidator idTokenValidator=new OidcIdTokenValidator(this.registration.build()); @AT@ 2751 @LENGTH@ 70
---------INS SimpleName@@idTokenValidator @TO@ VariableDeclarationFragment@@idTokenValidator=new OidcIdTokenValidator(this.registration.build()) @AT@ 2751 @LENGTH@ 16
---------INS ClassInstanceCreation@@OidcIdTokenValidator[this.registration.build()] @TO@ VariableDeclarationFragment@@idTokenValidator=new OidcIdTokenValidator(this.registration.build()) @AT@ 2770 @LENGTH@ 51
------------INS New@@new @TO@ ClassInstanceCreation@@OidcIdTokenValidator[this.registration.build()] @AT@ 2770 @LENGTH@ 3
------------INS SimpleType@@OidcIdTokenValidator @TO@ ClassInstanceCreation@@OidcIdTokenValidator[this.registration.build()] @AT@ 2774 @LENGTH@ 20
------------INS MethodInvocation@@this.registration.build() @TO@ ClassInstanceCreation@@OidcIdTokenValidator[this.registration.build()] @AT@ 2795 @LENGTH@ 25
---------------INS FieldAccess@@this.registration @TO@ MethodInvocation@@this.registration.build() @AT@ 2795 @LENGTH@ 17
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration @AT@ 2795 @LENGTH@ 4
------------------INS SimpleName@@registration @TO@ FieldAccess@@this.registration @AT@ 2800 @LENGTH@ 12
---------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@this.registration.build() @AT@ 2813 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> idTokenValidator.setClockSkew(Duration.ofSeconds(-1))).isInstanceOf(IllegalArgumentException.class) @TO@ MethodDeclaration@@public, void, MethodName:setClockSkewWhenNegativeSecondsThenThrowIllegalArgumentException,  @AT@ 2825 @LENGTH@ 130
------INS MethodInvocation@@assertThatThrownBy(() -> idTokenValidator.setClockSkew(Duration.ofSeconds(-1))).isInstanceOf(IllegalArgumentException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> idTokenValidator.setClockSkew(Duration.ofSeconds(-1))).isInstanceOf(IllegalArgumentException.class) @AT@ 2825 @LENGTH@ 129
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> idTokenValidator.setClockSkew(Duration.ofSeconds(-1))] @TO@ MethodInvocation@@assertThatThrownBy(() -> idTokenValidator.setClockSkew(Duration.ofSeconds(-1))).isInstanceOf(IllegalArgumentException.class) @AT@ 2825 @LENGTH@ 79
------------INS LambdaExpression@@() -> idTokenValidator.setClockSkew(Duration.ofSeconds(-1)) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> idTokenValidator.setClockSkew(Duration.ofSeconds(-1))] @AT@ 2844 @LENGTH@ 59
---------------INS MethodInvocation@@idTokenValidator.setClockSkew(Duration.ofSeconds(-1)) @TO@ LambdaExpression@@() -> idTokenValidator.setClockSkew(Duration.ofSeconds(-1)) @AT@ 2850 @LENGTH@ 53
------------------INS SimpleName@@Name:idTokenValidator @TO@ MethodInvocation@@idTokenValidator.setClockSkew(Duration.ofSeconds(-1)) @AT@ 2850 @LENGTH@ 16
------------------INS SimpleName@@MethodName:setClockSkew:[Duration.ofSeconds(-1)] @TO@ MethodInvocation@@idTokenValidator.setClockSkew(Duration.ofSeconds(-1)) @AT@ 2867 @LENGTH@ 36
---------------------INS MethodInvocation@@Duration.ofSeconds(-1) @TO@ SimpleName@@MethodName:setClockSkew:[Duration.ofSeconds(-1)] @AT@ 2880 @LENGTH@ 22
------------------------INS SimpleName@@Name:Duration @TO@ MethodInvocation@@Duration.ofSeconds(-1) @AT@ 2880 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:ofSeconds:[-1] @TO@ MethodInvocation@@Duration.ofSeconds(-1) @AT@ 2889 @LENGTH@ 13
---------------------------INS PrefixExpression@@-1 @TO@ SimpleName@@MethodName:ofSeconds:[-1] @AT@ 2899 @LENGTH@ 2
------------------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 2899 @LENGTH@ 1
------------------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 2900 @LENGTH@ 1
---------INS SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> idTokenValidator.setClockSkew(Duration.ofSeconds(-1))).isInstanceOf(IllegalArgumentException.class) @AT@ 2910 @LENGTH@ 44
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 2923 @LENGTH@ 30


UPD SwitchStatement@@switch (completedBy) {case COMPLETED_BY_INTERVAL:  completedByInterval.incrementAndGet();break;case COMPLETED_BY_TIMEOUT:completedByTimeout.incrementAndGet();break;case COMPLETED_BY_FORCE:completedByForce.incrementAndGet();break;case COMPLETED_BY_CONSUMER:completedByBatchConsumer.incrementAndGet();break;case COMPLETED_BY_PREDICATE:completedByPredicate.incrementAndGet();break;case COMPLETED_BY_SIZE:completedBySize.incrementAndGet();break;case COMPLETED_BY_STRATEGY:completedByStrategy.incrementAndGet();break;} @TO@ switch (completedBy) {case COMPLETED_BY_INTERVAL:  completedByInterval.incrementAndGet();break;case COMPLETED_BY_TIMEOUT:completedByTimeout.incrementAndGet();break;case COMPLETED_BY_FORCE:completedByForce.incrementAndGet();break;case COMPLETED_BY_CONSUMER:completedByBatchConsumer.incrementAndGet();break;case COMPLETED_BY_PREDICATE:completedByPredicate.incrementAndGet();break;case COMPLETED_BY_SIZE:completedBySize.incrementAndGet();break;case COMPLETED_BY_STRATEGY:completedByStrategy.incrementAndGet();break;default :log.error("Invalid value of {} property: {}",Exchange.AGGREGATED_COMPLETED_BY,exchange);break;} @AT@ 32342 @LENGTH@ 937
---INS SwitchCase@@default @TO@ SwitchStatement@@switch (completedBy) {case COMPLETED_BY_INTERVAL:  completedByInterval.incrementAndGet();break;case COMPLETED_BY_TIMEOUT:completedByTimeout.incrementAndGet();break;case COMPLETED_BY_FORCE:completedByForce.incrementAndGet();break;case COMPLETED_BY_CONSUMER:completedByBatchConsumer.incrementAndGet();break;case COMPLETED_BY_PREDICATE:completedByPredicate.incrementAndGet();break;case COMPLETED_BY_SIZE:completedBySize.incrementAndGet();break;case COMPLETED_BY_STRATEGY:completedByStrategy.incrementAndGet();break;} @AT@ 33193 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:log.error("Invalid value of {} property: {}",Exchange.AGGREGATED_COMPLETED_BY,exchange) @TO@ SwitchStatement@@switch (completedBy) {case COMPLETED_BY_INTERVAL:  completedByInterval.incrementAndGet();break;case COMPLETED_BY_TIMEOUT:completedByTimeout.incrementAndGet();break;case COMPLETED_BY_FORCE:completedByForce.incrementAndGet();break;case COMPLETED_BY_CONSUMER:completedByBatchConsumer.incrementAndGet();break;case COMPLETED_BY_PREDICATE:completedByPredicate.incrementAndGet();break;case COMPLETED_BY_SIZE:completedBySize.incrementAndGet();break;case COMPLETED_BY_STRATEGY:completedByStrategy.incrementAndGet();break;} @AT@ 33218 @LENGTH@ 90
------INS MethodInvocation@@log.error("Invalid value of {} property: {}",Exchange.AGGREGATED_COMPLETED_BY,exchange) @TO@ ExpressionStatement@@MethodInvocation:log.error("Invalid value of {} property: {}",Exchange.AGGREGATED_COMPLETED_BY,exchange) @AT@ 33218 @LENGTH@ 89
---------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.error("Invalid value of {} property: {}",Exchange.AGGREGATED_COMPLETED_BY,exchange) @AT@ 33218 @LENGTH@ 3
---------INS SimpleName@@MethodName:error:["Invalid value of {} property: {}", Exchange.AGGREGATED_COMPLETED_BY, exchange] @TO@ MethodInvocation@@log.error("Invalid value of {} property: {}",Exchange.AGGREGATED_COMPLETED_BY,exchange) @AT@ 33222 @LENGTH@ 85
------------INS StringLiteral@@"Invalid value of {} property: {}" @TO@ SimpleName@@MethodName:error:["Invalid value of {} property: {}", Exchange.AGGREGATED_COMPLETED_BY, exchange] @AT@ 33228 @LENGTH@ 34
------------INS QualifiedName@@Exchange.AGGREGATED_COMPLETED_BY @TO@ SimpleName@@MethodName:error:["Invalid value of {} property: {}", Exchange.AGGREGATED_COMPLETED_BY, exchange] @AT@ 33264 @LENGTH@ 32
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.AGGREGATED_COMPLETED_BY @AT@ 33264 @LENGTH@ 8
---------------INS SimpleName@@AGGREGATED_COMPLETED_BY @TO@ QualifiedName@@Exchange.AGGREGATED_COMPLETED_BY @AT@ 33273 @LENGTH@ 23
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:error:["Invalid value of {} property: {}", Exchange.AGGREGATED_COMPLETED_BY, exchange] @AT@ 33298 @LENGTH@ 8
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (completedBy) {case COMPLETED_BY_INTERVAL:  completedByInterval.incrementAndGet();break;case COMPLETED_BY_TIMEOUT:completedByTimeout.incrementAndGet();break;case COMPLETED_BY_FORCE:completedByForce.incrementAndGet();break;case COMPLETED_BY_CONSUMER:completedByBatchConsumer.incrementAndGet();break;case COMPLETED_BY_PREDICATE:completedByPredicate.incrementAndGet();break;case COMPLETED_BY_SIZE:completedBySize.incrementAndGet();break;case COMPLETED_BY_STRATEGY:completedByStrategy.incrementAndGet();break;} @AT@ 33325 @LENGTH@ 6


INS MethodDeclaration@@private, voidMethodName:CommonCreationStrategyImpl,  @TO@ TypeDeclaration@@[public, final]CommonCreationStrategyImpl,  @AT@ 1228 @LENGTH@ 44
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:CommonCreationStrategyImpl,  @AT@ 1228 @LENGTH@ 7
---INS SimpleName@@MethodName:CommonCreationStrategyImpl @TO@ MethodDeclaration@@private, voidMethodName:CommonCreationStrategyImpl,  @AT@ 1236 @LENGTH@ 26


DEL MethodDeclaration@@void, MethodName:forNodes,  @AT@ 1807 @LENGTH@ 378
---DEL PrimitiveType@@void @AT@ 1802 @LENGTH@ 4
---DEL SimpleName@@MethodName:forNodes @AT@ 1807 @LENGTH@ 8
---DEL VariableDeclarationStatement@@DefaultStatementBuilder builder=new DefaultStatementBuilder(); @AT@ 1824 @LENGTH@ 64
------DEL SimpleType@@DefaultStatementBuilder @AT@ 1824 @LENGTH@ 23
------DEL VariableDeclarationFragment@@builder=new DefaultStatementBuilder() @AT@ 1848 @LENGTH@ 39
---------DEL SimpleName@@builder @AT@ 1848 @LENGTH@ 7
---------DEL ClassInstanceCreation@@DefaultStatementBuilder[] @AT@ 1858 @LENGTH@ 29
------------DEL New@@new @AT@ 1858 @LENGTH@ 3
------------DEL SimpleType@@DefaultStatementBuilder @AT@ 1862 @LENGTH@ 23
---DEL ExpressionStatement@@MethodInvocation:assertThatIllegalArgumentException().isThrownBy(() -> builder.returning((Node[])null)).withMessage("Nodes to return are required.") @AT@ 1892 @LENGTH@ 138
------DEL MethodInvocation@@assertThatIllegalArgumentException().isThrownBy(() -> builder.returning((Node[])null)).withMessage("Nodes to return are required.") @AT@ 1892 @LENGTH@ 137
---------DEL MethodInvocation@@MethodName:isThrownBy:[() -> builder.returning((Node[])null)] @AT@ 1892 @LENGTH@ 87
------------DEL LambdaExpression@@() -> builder.returning((Node[])null) @AT@ 1940 @LENGTH@ 38
---------------DEL MethodInvocation@@builder.returning((Node[])null) @AT@ 1946 @LENGTH@ 32
------------------DEL SimpleName@@Name:builder @AT@ 1946 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:returning:[(Node[])null] @AT@ 1954 @LENGTH@ 24
---------------------DEL CastExpression@@(Node[])null @AT@ 1964 @LENGTH@ 13
------------------------DEL ArrayType@@Node[] @AT@ 1965 @LENGTH@ 6
---------------------------DEL SimpleType@@Node @AT@ 1965 @LENGTH@ 4
------------------------DEL NullLiteral@@null @AT@ 1973 @LENGTH@ 4
---------DEL MethodInvocation@@MethodName:assertThatIllegalArgumentException:[] @AT@ 1892 @LENGTH@ 36
---------DEL SimpleName@@MethodName:withMessage:["Nodes to return are required."] @AT@ 1985 @LENGTH@ 44
------------DEL StringLiteral@@"Nodes to return are required." @AT@ 1997 @LENGTH@ 31
---DEL ExpressionStatement@@MethodInvocation:assertThatIllegalArgumentException().isThrownBy(() -> builder.returning(new Node[0])).withMessage("At least one node to return is required.") @AT@ 2034 @LENGTH@ 147
------DEL MethodInvocation@@assertThatIllegalArgumentException().isThrownBy(() -> builder.returning(new Node[0])).withMessage("At least one node to return is required.") @AT@ 2034 @LENGTH@ 146
---------DEL MethodInvocation@@MethodName:isThrownBy:[() -> builder.returning(new Node[0])] @AT@ 2034 @LENGTH@ 85
------------DEL LambdaExpression@@() -> builder.returning(new Node[0]) @AT@ 2082 @LENGTH@ 36
---------------DEL MethodInvocation@@builder.returning(new Node[0]) @AT@ 2088 @LENGTH@ 30
------------------DEL SimpleName@@Name:builder @AT@ 2088 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:returning:[new Node[0]] @AT@ 2096 @LENGTH@ 22
---------------------DEL ArrayCreation@@new Node[0] @AT@ 2106 @LENGTH@ 11
------------------------DEL ArrayType@@Node[] @AT@ 2110 @LENGTH@ 7
---------------------------DEL SimpleType@@Node @AT@ 2110 @LENGTH@ 4
------------------------DEL NumberLiteral@@0 @AT@ 2115 @LENGTH@ 1
---------DEL MethodInvocation@@MethodName:assertThatIllegalArgumentException:[] @AT@ 2034 @LENGTH@ 36
---------DEL SimpleName@@MethodName:withMessage:["At least one node to return is required."] @AT@ 2125 @LENGTH@ 55
------------DEL StringLiteral@@"At least one node to return is required." @AT@ 2137 @LENGTH@ 42


UPD VariableDeclarationStatement@@final BuildTool tool=new BuildTool(mavenArtifactResolvingHelper()).projectArtifact(primaryArtifact.getGroupId(),primaryArtifact.getArtifactId(),primaryArtifact.getBaseVersion(),type,primaryArtifactFile,finalName.endsWith("." + type) ? finalName : String.format("%s.%s",finalName,type)).properties(this.properties).mainClass(this.mainClass).bundleDependencies(this.bundleDependencies).filterWebinfLib(this.filterWebinfLib).executable(executable).executableScript(executableScript).fractionDetectionMode(fractionDetectMode).hollow(hollow).logger(new SimpleLogger(){
  @Override public void debug(  String msg){
    getLog().debug(msg);
  }
  @Override public void info(  String msg){
    getLog().info(msg);
  }
  @Override public void error(  String msg){
    getLog().error(msg);
  }
  @Override public void error(  String msg,  Throwable t){
    getLog().error(msg,t);
  }
}
); @TO@ final BuildTool tool=new BuildTool(mavenArtifactResolvingHelper()).projectArtifact(primaryArtifact.getGroupId(),primaryArtifact.getArtifactId(),primaryArtifact.getBaseVersion(),type,primaryArtifactFile,finalName.endsWith("." + type) ? finalName : String.format("%s.%s",finalName,type)).properties(this.properties).mainClass(this.mainClass).bundleDependencies(this.bundleDependencies).filterWebInfLib(this.filterWebInfLib).executable(executable).executableScript(executableScript).fractionDetectionMode(fractionDetectMode).hollow(hollow).logger(new SimpleLogger(){
  @Override public void debug(  String msg){
    getLog().debug(msg);
  }
  @Override public void info(  String msg){
    getLog().info(msg);
  }
  @Override public void error(  String msg){
    getLog().error(msg);
  }
  @Override public void error(  String msg,  Throwable t){
    getLog().error(msg,t);
  }
}
); @AT@ 4803 @LENGTH@ 1560
---UPD VariableDeclarationFragment@@tool=new BuildTool(mavenArtifactResolvingHelper()).projectArtifact(primaryArtifact.getGroupId(),primaryArtifact.getArtifactId(),primaryArtifact.getBaseVersion(),type,primaryArtifactFile,finalName.endsWith("." + type) ? finalName : String.format("%s.%s",finalName,type)).properties(this.properties).mainClass(this.mainClass).bundleDependencies(this.bundleDependencies).filterWebinfLib(this.filterWebinfLib).executable(executable).executableScript(executableScript).fractionDetectionMode(fractionDetectMode).hollow(hollow).logger(new SimpleLogger(){
  @Override public void debug(  String msg){
    getLog().debug(msg);
  }
  @Override public void info(  String msg){
    getLog().info(msg);
  }
  @Override public void error(  String msg){
    getLog().error(msg);
  }
  @Override public void error(  String msg,  Throwable t){
    getLog().error(msg,t);
  }
}
) @TO@ tool=new BuildTool(mavenArtifactResolvingHelper()).projectArtifact(primaryArtifact.getGroupId(),primaryArtifact.getArtifactId(),primaryArtifact.getBaseVersion(),type,primaryArtifactFile,finalName.endsWith("." + type) ? finalName : String.format("%s.%s",finalName,type)).properties(this.properties).mainClass(this.mainClass).bundleDependencies(this.bundleDependencies).filterWebInfLib(this.filterWebInfLib).executable(executable).executableScript(executableScript).fractionDetectionMode(fractionDetectMode).hollow(hollow).logger(new SimpleLogger(){
  @Override public void debug(  String msg){
    getLog().debug(msg);
  }
  @Override public void info(  String msg){
    getLog().info(msg);
  }
  @Override public void error(  String msg){
    getLog().error(msg);
  }
  @Override public void error(  String msg,  Throwable t){
    getLog().error(msg,t);
  }
}
) @AT@ 4819 @LENGTH@ 1543
------UPD MethodInvocation@@new BuildTool(mavenArtifactResolvingHelper()).projectArtifact(primaryArtifact.getGroupId(),primaryArtifact.getArtifactId(),primaryArtifact.getBaseVersion(),type,primaryArtifactFile,finalName.endsWith("." + type) ? finalName : String.format("%s.%s",finalName,type)).properties(this.properties).mainClass(this.mainClass).bundleDependencies(this.bundleDependencies).filterWebinfLib(this.filterWebinfLib).executable(executable).executableScript(executableScript).fractionDetectionMode(fractionDetectMode).hollow(hollow).logger(new SimpleLogger(){
  @Override public void debug(  String msg){
    getLog().debug(msg);
  }
  @Override public void info(  String msg){
    getLog().info(msg);
  }
  @Override public void error(  String msg){
    getLog().error(msg);
  }
  @Override public void error(  String msg,  Throwable t){
    getLog().error(msg,t);
  }
}
) @TO@ new BuildTool(mavenArtifactResolvingHelper()).projectArtifact(primaryArtifact.getGroupId(),primaryArtifact.getArtifactId(),primaryArtifact.getBaseVersion(),type,primaryArtifactFile,finalName.endsWith("." + type) ? finalName : String.format("%s.%s",finalName,type)).properties(this.properties).mainClass(this.mainClass).bundleDependencies(this.bundleDependencies).filterWebInfLib(this.filterWebInfLib).executable(executable).executableScript(executableScript).fractionDetectionMode(fractionDetectMode).hollow(hollow).logger(new SimpleLogger(){
  @Override public void debug(  String msg){
    getLog().debug(msg);
  }
  @Override public void info(  String msg){
    getLog().info(msg);
  }
  @Override public void error(  String msg){
    getLog().error(msg);
  }
  @Override public void error(  String msg,  Throwable t){
    getLog().error(msg,t);
  }
}
) @AT@ 4826 @LENGTH@ 1536
---------UPD MethodInvocation@@MethodName:filterWebinfLib:[this.filterWebinfLib] @TO@ MethodName:filterWebInfLib:[this.filterWebInfLib] @AT@ 4826 @LENGTH@ 676
------------UPD FieldAccess@@this.filterWebinfLib @TO@ this.filterWebInfLib @AT@ 5481 @LENGTH@ 20
---------------UPD SimpleName@@filterWebinfLib @TO@ filterWebInfLib @AT@ 5486 @LENGTH@ 15


MOV MethodDeclaration@@private, voidMethodName:CamelPropertiesHelper,  @TO@ TypeDeclaration@@[public, final]CamelPropertiesHelper,  @AT@ 1401 @LENGTH@ 39


UPD IfStatement@@if (this.requestMatcher.matches(request)) {  response.setHeader(HSTS_HEADER_NAME,this.hstsHeaderValue);} else if (this.logger.isDebugEnabled()) {  this.logger.debug("Not injecting HSTS header since it did not match the requestMatcher " + this.requestMatcher);} @TO@ if (this.requestMatcher.matches(request)) {  if (!response.containsHeader(HSTS_HEADER_NAME)) {    response.setHeader(HSTS_HEADER_NAME,this.hstsHeaderValue);  }} else if (this.logger.isDebugEnabled()) {  this.logger.debug("Not injecting HSTS header since it did not match the requestMatcher " + this.requestMatcher);} @AT@ 5457 @LENGTH@ 286
---INS Block@@ThenBody:{  if (!response.containsHeader(HSTS_HEADER_NAME)) {    response.setHeader(HSTS_HEADER_NAME,this.hstsHeaderValue);  }} @TO@ IfStatement@@if (this.requestMatcher.matches(request)) {  response.setHeader(HSTS_HEADER_NAME,this.hstsHeaderValue);} else if (this.logger.isDebugEnabled()) {  this.logger.debug("Not injecting HSTS header since it did not match the requestMatcher " + this.requestMatcher);} @AT@ 5523 @LENGTH@ 127
------INS IfStatement@@if (!response.containsHeader(HSTS_HEADER_NAME)) {  response.setHeader(HSTS_HEADER_NAME,this.hstsHeaderValue);} @TO@ Block@@ThenBody:{  if (!response.containsHeader(HSTS_HEADER_NAME)) {    response.setHeader(HSTS_HEADER_NAME,this.hstsHeaderValue);  }} @AT@ 5528 @LENGTH@ 118
---------MOV Block@@ThenBody:{  response.setHeader(HSTS_HEADER_NAME,this.hstsHeaderValue);} @TO@ IfStatement@@if (!response.containsHeader(HSTS_HEADER_NAME)) {  response.setHeader(HSTS_HEADER_NAME,this.hstsHeaderValue);} @AT@ 5499 @LENGTH@ 68
---------INS PrefixExpression@@!response.containsHeader(HSTS_HEADER_NAME) @TO@ IfStatement@@if (!response.containsHeader(HSTS_HEADER_NAME)) {  response.setHeader(HSTS_HEADER_NAME,this.hstsHeaderValue);} @AT@ 5532 @LENGTH@ 42
------------INS Operator@@! @TO@ PrefixExpression@@!response.containsHeader(HSTS_HEADER_NAME) @AT@ 5532 @LENGTH@ 1
------------INS MethodInvocation@@response.containsHeader(HSTS_HEADER_NAME) @TO@ PrefixExpression@@!response.containsHeader(HSTS_HEADER_NAME) @AT@ 5533 @LENGTH@ 41
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.containsHeader(HSTS_HEADER_NAME) @AT@ 5533 @LENGTH@ 8
---------------INS SimpleName@@MethodName:containsHeader:[HSTS_HEADER_NAME] @TO@ MethodInvocation@@response.containsHeader(HSTS_HEADER_NAME) @AT@ 5542 @LENGTH@ 32
------------------INS SimpleName@@HSTS_HEADER_NAME @TO@ SimpleName@@MethodName:containsHeader:[HSTS_HEADER_NAME] @AT@ 5557 @LENGTH@ 16


UPD VariableDeclarationStatement@@boolean createSegment=(entity == null || !Objects.equals(entity.getName(),routeId)); @TO@ boolean createSegment=entity == null || !Objects.equals(entity.getName(),routeId); @AT@ 16647 @LENGTH@ 87
---UPD VariableDeclarationFragment@@createSegment=(entity == null || !Objects.equals(entity.getName(),routeId)) @TO@ createSegment=entity == null || !Objects.equals(entity.getName(),routeId) @AT@ 16655 @LENGTH@ 78
------DEL ParenthesizedExpression@@(entity == null || !Objects.equals(entity.getName(),routeId)) @AT@ 16671 @LENGTH@ 62
------MOV InfixExpression@@entity == null || !Objects.equals(entity.getName(),routeId) @TO@ VariableDeclarationFragment@@createSegment=(entity == null || !Objects.equals(entity.getName(),routeId)) @AT@ 16672 @LENGTH@ 60


UPD IfStatement@@if (input.available() == 0) {  return null;} @TO@ if (read == 0) {  return null;} @AT@ 4468 @LENGTH@ 64
---UPD InfixExpression@@input.available() == 0 @TO@ read == 0 @AT@ 4472 @LENGTH@ 22
------DEL MethodInvocation@@input.available() @AT@ 4472 @LENGTH@ 17
---------DEL SimpleName@@Name:input @AT@ 4472 @LENGTH@ 5
---------DEL SimpleName@@MethodName:available:[] @AT@ 4478 @LENGTH@ 11
------INS SimpleName@@read @TO@ InfixExpression@@input.available() == 0 @AT@ 4585 @LENGTH@ 4


UPD FieldDeclaration@@private, static, final, String, [YAMMER_MESSAGES_CONSUMER="yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=58802444918784" + "&newerThan=58802444918781"] @TO@ private, static, final, String, [YAMMER_MESSAGES_CONSUMER="yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey" + "&accessToken=aAccessToken&limit=1&threaded=true&olderThan=58802444918784" + "&newerThan=58802444918781"] @AT@ 1006 @LENGTH@ 242
---UPD VariableDeclarationFragment@@YAMMER_MESSAGES_CONSUMER="yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=58802444918784" + "&newerThan=58802444918781" @TO@ YAMMER_MESSAGES_CONSUMER="yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey" + "&accessToken=aAccessToken&limit=1&threaded=true&olderThan=58802444918784" + "&newerThan=58802444918781" @AT@ 1034 @LENGTH@ 213
------UPD InfixExpression@@"yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=58802444918784" + "&newerThan=58802444918781" @TO@ "yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey" + "&accessToken=aAccessToken&limit=1&threaded=true&olderThan=58802444918784" + "&newerThan=58802444918781" @AT@ 1061 @LENGTH@ 186
---------UPD StringLiteral@@"yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=58802444918784" @TO@ "yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey" @AT@ 1061 @LENGTH@ 148
---------INS StringLiteral@@"&accessToken=aAccessToken&limit=1&threaded=true&olderThan=58802444918784" @TO@ InfixExpression@@"yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=58802444918784" + "&newerThan=58802444918781" @AT@ 1149 @LENGTH@ 74


UPD ExpressionStatement@@MethodInvocation:assertEquals("camel-core",prop.get("artifactId")) @TO@ MethodInvocation:assertEquals("camel-seda",prop.get("artifactId")) @AT@ 10231 @LENGTH@ 51
---UPD MethodInvocation@@assertEquals("camel-core",prop.get("artifactId")) @TO@ assertEquals("camel-seda",prop.get("artifactId")) @AT@ 10231 @LENGTH@ 50
------UPD SimpleName@@MethodName:assertEquals:["camel-core", prop.get("artifactId")] @TO@ MethodName:assertEquals:["camel-seda", prop.get("artifactId")] @AT@ 10231 @LENGTH@ 50
---------UPD StringLiteral@@"camel-core" @TO@ "camel-seda" @AT@ 10244 @LENGTH@ 12


UPD MethodDeclaration@@public, void, MethodName:setHttpOnlyIgnoredForServlet25, Exception,  @TO@ public, void, MethodName:setCookieSetsIsHttpOnlyFlagByDefault, Exception,  @AT@ 13956 @LENGTH@ 528
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:setHttpOnlyIgnoredForServlet25, Exception,  @AT@ 13853 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 13853 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 13876 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 13876 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 13886 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 13886 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 13890 @LENGTH@ 22
---INS VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @TO@ MethodDeclaration@@public, void, MethodName:setHttpOnlyIgnoredForServlet25, Exception,  @AT@ 13918 @LENGTH@ 65
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 13918 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=new MockHttpServletResponse() @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 13942 @LENGTH@ 40
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 13942 @LENGTH@ 8
---------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 13953 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 13953 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 13957 @LENGTH@ 23
---UPD SimpleName@@MethodName:setHttpOnlyIgnoredForServlet25 @TO@ MethodName:setCookieSetsIsHttpOnlyFlagByDefault @AT@ 13968 @LENGTH@ 30
---DEL ExpressionStatement@@MethodInvocation:spy(ReflectionUtils.class) @AT@ 14022 @LENGTH@ 27
------DEL MethodInvocation@@spy(ReflectionUtils.class) @AT@ 14022 @LENGTH@ 26
---------DEL SimpleName@@MethodName:spy:[ReflectionUtils.class] @AT@ 14022 @LENGTH@ 26
------------DEL TypeLiteral@@ReflectionUtils.class @AT@ 14026 @LENGTH@ 21
---UPD ExpressionStatement@@MethodInvocation:when(ReflectionUtils.findMethod(Cookie.class,"setHttpOnly",boolean.class)).thenReturn(null) @TO@ MethodInvocation:request.setContextPath("contextpath") @AT@ 14052 @LENGTH@ 98
------INS MethodInvocation@@request.setContextPath("contextpath") @TO@ ExpressionStatement@@MethodInvocation:when(ReflectionUtils.findMethod(Cookie.class,"setHttpOnly",boolean.class)).thenReturn(null) @AT@ 13986 @LENGTH@ 37
---------MOV SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@request.setContextPath("contextpath") @AT@ 14057 @LENGTH@ 15
---------MOV SimpleName@@MethodName:findMethod:[Cookie.class, "setHttpOnly", boolean.class] @TO@ MethodInvocation@@request.setContextPath("contextpath") @AT@ 14073 @LENGTH@ 58
------DEL MethodInvocation@@when(ReflectionUtils.findMethod(Cookie.class,"setHttpOnly",boolean.class)).thenReturn(null) @AT@ 14052 @LENGTH@ 97
---------DEL MethodInvocation@@MethodName:when:[ReflectionUtils.findMethod(Cookie.class,"setHttpOnly",boolean.class)] @AT@ 14052 @LENGTH@ 80
------------DEL MethodInvocation@@ReflectionUtils.findMethod(Cookie.class,"setHttpOnly",boolean.class) @AT@ 14057 @LENGTH@ 74
---------DEL SimpleName@@MethodName:thenReturn:[null] @AT@ 14133 @LENGTH@ 16
------------DEL NullLiteral@@null @AT@ 14144 @LENGTH@ 4
---INS VariableDeclarationStatement@@Cookie cookie=response.getCookie(AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY); @TO@ MethodDeclaration@@public, void, MethodName:setHttpOnlyIgnoredForServlet25, Exception,  @AT@ 14173 @LENGTH@ 107
------INS SimpleType@@Cookie @TO@ VariableDeclarationStatement@@Cookie cookie=response.getCookie(AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY); @AT@ 14173 @LENGTH@ 6
------INS VariableDeclarationFragment@@cookie=response.getCookie(AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY) @TO@ VariableDeclarationStatement@@Cookie cookie=response.getCookie(AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY); @AT@ 14180 @LENGTH@ 99
---------INS SimpleName@@cookie @TO@ VariableDeclarationFragment@@cookie=response.getCookie(AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY) @AT@ 14180 @LENGTH@ 6
---------INS MethodInvocation@@response.getCookie(AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY) @TO@ VariableDeclarationFragment@@cookie=response.getCookie(AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY) @AT@ 14189 @LENGTH@ 90
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getCookie(AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY) @AT@ 14189 @LENGTH@ 8
------------INS SimpleName@@MethodName:getCookie:[AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY] @TO@ MethodInvocation@@response.getCookie(AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY) @AT@ 14198 @LENGTH@ 81
---------------INS QualifiedName@@AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY @TO@ SimpleName@@MethodName:getCookie:[AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY] @AT@ 14213 @LENGTH@ 65
------------------INS SimpleName@@AbstractRememberMeServices @TO@ QualifiedName@@AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY @AT@ 14213 @LENGTH@ 26
------------------INS SimpleName@@SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY @TO@ QualifiedName@@AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY @AT@ 14240 @LENGTH@ 38
---UPD ExpressionStatement@@MethodInvocation:assertThat(ReflectionTestUtils.getField(services,"setHttpOnlyMethod")).isNull() @TO@ MethodInvocation:services.setCookie(new String[]{"mycookie"},1000,request,response) @AT@ 14223 @LENGTH@ 81
------UPD MethodInvocation@@assertThat(ReflectionTestUtils.getField(services,"setHttpOnlyMethod")).isNull() @TO@ services.setCookie(new String[]{"mycookie"},1000,request,response) @AT@ 14223 @LENGTH@ 80
---------INS SimpleName@@Name:services @TO@ MethodInvocation@@assertThat(ReflectionTestUtils.getField(services,"setHttpOnlyMethod")).isNull() @AT@ 14097 @LENGTH@ 8
---------INS SimpleName@@MethodName:setCookie:[new String[]{"mycookie"}, 1000, request, response] @TO@ MethodInvocation@@assertThat(ReflectionTestUtils.getField(services,"setHttpOnlyMethod")).isNull() @AT@ 14106 @LENGTH@ 63
------------INS ArrayCreation@@new String[]{"mycookie"} @TO@ SimpleName@@MethodName:setCookie:[new String[]{"mycookie"}, 1000, request, response] @AT@ 14116 @LENGTH@ 27
---------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[]{"mycookie"} @AT@ 14120 @LENGTH@ 8
------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 14120 @LENGTH@ 6
---------------INS ArrayInitializer@@{"mycookie"} @TO@ ArrayCreation@@new String[]{"mycookie"} @AT@ 14129 @LENGTH@ 14
------------------INS StringLiteral@@"mycookie" @TO@ ArrayInitializer@@{"mycookie"} @AT@ 14131 @LENGTH@ 10
------------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:setCookie:[new String[]{"mycookie"}, 1000, request, response] @AT@ 14145 @LENGTH@ 4
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:setCookie:[new String[]{"mycookie"}, 1000, request, response] @AT@ 14151 @LENGTH@ 7
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:setCookie:[new String[]{"mycookie"}, 1000, request, response] @AT@ 14160 @LENGTH@ 8
---------DEL MethodInvocation@@MethodName:assertThat:[ReflectionTestUtils.getField(services,"setHttpOnlyMethod")] @AT@ 14223 @LENGTH@ 71
------------DEL MethodInvocation@@ReflectionTestUtils.getField(services,"setHttpOnlyMethod") @AT@ 14234 @LENGTH@ 59
---------------DEL SimpleName@@Name:ReflectionTestUtils @AT@ 14234 @LENGTH@ 19
---------------DEL SimpleName@@MethodName:getField:[services, "setHttpOnlyMethod"] @AT@ 14254 @LENGTH@ 39
------------------DEL SimpleName@@services @AT@ 14263 @LENGTH@ 8
------------------DEL StringLiteral@@"setHttpOnlyMethod" @AT@ 14273 @LENGTH@ 19
---------DEL SimpleName@@MethodName:isNull:[] @AT@ 14295 @LENGTH@ 8
---DEL ExpressionStatement@@Assignment:services=new MockRememberMeServices("key",new MockUserDetailsService(joe,false)) @AT@ 14308 @LENGTH@ 89
------DEL Assignment@@services=new MockRememberMeServices("key",new MockUserDetailsService(joe,false)) @AT@ 14308 @LENGTH@ 88
---------DEL SimpleName@@services @AT@ 14308 @LENGTH@ 8
---------DEL Operator@@= @AT@ 14316 @LENGTH@ 1
---------DEL ClassInstanceCreation@@MockRememberMeServices["key", new MockUserDetailsService(joe,false)] @AT@ 14319 @LENGTH@ 77
------------DEL New@@new @AT@ 14319 @LENGTH@ 3
------------DEL SimpleType@@MockRememberMeServices @AT@ 14323 @LENGTH@ 22
------------DEL StringLiteral@@"key" @AT@ 14346 @LENGTH@ 5
------------DEL ClassInstanceCreation@@MockUserDetailsService[joe, false] @AT@ 14357 @LENGTH@ 38
---------------DEL New@@new @AT@ 14357 @LENGTH@ 3
---------------DEL SimpleType@@MockUserDetailsService @AT@ 14361 @LENGTH@ 22
---------------DEL SimpleName@@joe @AT@ 14384 @LENGTH@ 3
---------------DEL BooleanLiteral@@false @AT@ 14389 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:assertThat(ReflectionTestUtils.getField(services,"setHttpOnlyMethod")).isNull() @TO@ MethodInvocation:assertThat(cookie.isHttpOnly()).isTrue() @AT@ 14400 @LENGTH@ 81
------UPD MethodInvocation@@assertThat(ReflectionTestUtils.getField(services,"setHttpOnlyMethod")).isNull() @TO@ assertThat(cookie.isHttpOnly()).isTrue() @AT@ 14400 @LENGTH@ 80
---------UPD MethodInvocation@@MethodName:assertThat:[ReflectionTestUtils.getField(services,"setHttpOnlyMethod")] @TO@ MethodName:assertThat:[cookie.isHttpOnly()] @AT@ 14400 @LENGTH@ 71
------------UPD MethodInvocation@@ReflectionTestUtils.getField(services,"setHttpOnlyMethod") @TO@ cookie.isHttpOnly() @AT@ 14411 @LENGTH@ 59
---------------UPD SimpleName@@Name:ReflectionTestUtils @TO@ Name:cookie @AT@ 14411 @LENGTH@ 19
---------------UPD SimpleName@@MethodName:getField:[services, "setHttpOnlyMethod"] @TO@ MethodName:isHttpOnly:[] @AT@ 14431 @LENGTH@ 39
------------------DEL SimpleName@@services @AT@ 14440 @LENGTH@ 8
------------------DEL StringLiteral@@"setHttpOnlyMethod" @AT@ 14450 @LENGTH@ 19
---------UPD SimpleName@@MethodName:isNull:[] @TO@ MethodName:isTrue:[] @AT@ 14472 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @TO@ TypeDeclaration@@[public]RemoteTokenServicesTest,  @AT@ 2851 @LENGTH@ 786
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @AT@ 2851 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @AT@ 2858 @LENGTH@ 4
---INS SimpleName@@MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @AT@ 2863 @LENGTH@ 91
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @AT@ 2964 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:responseAttrs.put("active","true") @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @AT@ 3015 @LENGTH@ 36
------INS MethodInvocation@@responseAttrs.put("active","true") @TO@ ExpressionStatement@@MethodInvocation:responseAttrs.put("active","true") @AT@ 3015 @LENGTH@ 35
---------INS SimpleName@@Name:responseAttrs @TO@ MethodInvocation@@responseAttrs.put("active","true") @AT@ 3015 @LENGTH@ 13
---------INS SimpleName@@MethodName:put:["active", "true"] @TO@ MethodInvocation@@responseAttrs.put("active","true") @AT@ 3029 @LENGTH@ 21
------------INS StringLiteral@@"active" @TO@ SimpleName@@MethodName:put:["active", "true"] @AT@ 3033 @LENGTH@ 8
------------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:put:["active", "true"] @AT@ 3043 @LENGTH@ 6
---INS VariableDeclarationStatement@@ResponseEntity<Map> response=new ResponseEntity<Map>(responseAttrs,HttpStatus.OK); @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @AT@ 3166 @LENGTH@ 85
------INS ParameterizedType@@ResponseEntity<Map> @TO@ VariableDeclarationStatement@@ResponseEntity<Map> response=new ResponseEntity<Map>(responseAttrs,HttpStatus.OK); @AT@ 3166 @LENGTH@ 19
---------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<Map> @AT@ 3166 @LENGTH@ 14
---------INS SimpleType@@Map @TO@ ParameterizedType@@ResponseEntity<Map> @AT@ 3181 @LENGTH@ 3
------INS VariableDeclarationFragment@@response=new ResponseEntity<Map>(responseAttrs,HttpStatus.OK) @TO@ VariableDeclarationStatement@@ResponseEntity<Map> response=new ResponseEntity<Map>(responseAttrs,HttpStatus.OK); @AT@ 3186 @LENGTH@ 64
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new ResponseEntity<Map>(responseAttrs,HttpStatus.OK) @AT@ 3186 @LENGTH@ 8
---------INS ClassInstanceCreation@@ResponseEntity<Map>[responseAttrs, HttpStatus.OK] @TO@ VariableDeclarationFragment@@response=new ResponseEntity<Map>(responseAttrs,HttpStatus.OK) @AT@ 3197 @LENGTH@ 53
------------INS New@@new @TO@ ClassInstanceCreation@@ResponseEntity<Map>[responseAttrs, HttpStatus.OK] @AT@ 3197 @LENGTH@ 3
------------INS ParameterizedType@@ResponseEntity<Map> @TO@ ClassInstanceCreation@@ResponseEntity<Map>[responseAttrs, HttpStatus.OK] @AT@ 3201 @LENGTH@ 19
---------------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<Map> @AT@ 3201 @LENGTH@ 14
---------------INS SimpleType@@Map @TO@ ParameterizedType@@ResponseEntity<Map> @AT@ 3216 @LENGTH@ 3
------------INS SimpleName@@responseAttrs @TO@ ClassInstanceCreation@@ResponseEntity<Map>[responseAttrs, HttpStatus.OK] @AT@ 3221 @LENGTH@ 13
------------INS QualifiedName@@HttpStatus.OK @TO@ ClassInstanceCreation@@ResponseEntity<Map>[responseAttrs, HttpStatus.OK] @AT@ 3236 @LENGTH@ 13
---------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.OK @AT@ 3236 @LENGTH@ 10
---------------INS SimpleName@@OK @TO@ QualifiedName@@HttpStatus.OK @AT@ 3247 @LENGTH@ 2
---INS VariableDeclarationStatement@@RestTemplate restTemplate=mock(RestTemplate.class); @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @AT@ 3254 @LENGTH@ 53
------INS SimpleType@@RestTemplate @TO@ VariableDeclarationStatement@@RestTemplate restTemplate=mock(RestTemplate.class); @AT@ 3254 @LENGTH@ 12
------INS VariableDeclarationFragment@@restTemplate=mock(RestTemplate.class) @TO@ VariableDeclarationStatement@@RestTemplate restTemplate=mock(RestTemplate.class); @AT@ 3267 @LENGTH@ 39
---------INS SimpleName@@restTemplate @TO@ VariableDeclarationFragment@@restTemplate=mock(RestTemplate.class) @AT@ 3267 @LENGTH@ 12
---------INS MethodInvocation@@mock(RestTemplate.class) @TO@ VariableDeclarationFragment@@restTemplate=mock(RestTemplate.class) @AT@ 3282 @LENGTH@ 24
------------INS SimpleName@@MethodName:mock:[RestTemplate.class] @TO@ MethodInvocation@@mock(RestTemplate.class) @AT@ 3282 @LENGTH@ 24
---------------INS TypeLiteral@@RestTemplate.class @TO@ SimpleName@@MethodName:mock:[RestTemplate.class] @AT@ 3287 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:when(restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))).thenReturn(response) @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @AT@ 3310 @LENGTH@ 126
------INS MethodInvocation@@when(restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))).thenReturn(response) @TO@ ExpressionStatement@@MethodInvocation:when(restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))).thenReturn(response) @AT@ 3310 @LENGTH@ 125
---------INS MethodInvocation@@MethodName:when:[restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))] @TO@ MethodInvocation@@when(restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))).thenReturn(response) @AT@ 3310 @LENGTH@ 104
------------INS MethodInvocation@@restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class)) @TO@ MethodInvocation@@MethodName:when:[restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))] @AT@ 3315 @LENGTH@ 98
---------------INS SimpleName@@Name:restTemplate @TO@ MethodInvocation@@restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class)) @AT@ 3315 @LENGTH@ 12
---------------INS SimpleName@@MethodName:exchange:[anyString(), any(HttpMethod.class), any(HttpEntity.class), any(Class.class)] @TO@ MethodInvocation@@restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class)) @AT@ 3328 @LENGTH@ 85
------------------INS MethodInvocation@@MethodName:anyString:[] @TO@ SimpleName@@MethodName:exchange:[anyString(), any(HttpMethod.class), any(HttpEntity.class), any(Class.class)] @AT@ 3337 @LENGTH@ 11
------------------INS MethodInvocation@@any(HttpMethod.class) @TO@ SimpleName@@MethodName:exchange:[anyString(), any(HttpMethod.class), any(HttpEntity.class), any(Class.class)] @AT@ 3350 @LENGTH@ 21
---------------------INS SimpleName@@MethodName:any:[HttpMethod.class] @TO@ MethodInvocation@@any(HttpMethod.class) @AT@ 3350 @LENGTH@ 21
------------------------INS TypeLiteral@@HttpMethod.class @TO@ SimpleName@@MethodName:any:[HttpMethod.class] @AT@ 3354 @LENGTH@ 16
------------------INS MethodInvocation@@any(HttpEntity.class) @TO@ SimpleName@@MethodName:exchange:[anyString(), any(HttpMethod.class), any(HttpEntity.class), any(Class.class)] @AT@ 3373 @LENGTH@ 21
---------------------INS SimpleName@@MethodName:any:[HttpEntity.class] @TO@ MethodInvocation@@any(HttpEntity.class) @AT@ 3373 @LENGTH@ 21
------------------------INS TypeLiteral@@HttpEntity.class @TO@ SimpleName@@MethodName:any:[HttpEntity.class] @AT@ 3377 @LENGTH@ 16
------------------INS MethodInvocation@@any(Class.class) @TO@ SimpleName@@MethodName:exchange:[anyString(), any(HttpMethod.class), any(HttpEntity.class), any(Class.class)] @AT@ 3396 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:any:[Class.class] @TO@ MethodInvocation@@any(Class.class) @AT@ 3396 @LENGTH@ 16
------------------------INS TypeLiteral@@Class.class @TO@ SimpleName@@MethodName:any:[Class.class] @AT@ 3400 @LENGTH@ 11
---------INS SimpleName@@MethodName:thenReturn:[response] @TO@ MethodInvocation@@when(restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))).thenReturn(response) @AT@ 3415 @LENGTH@ 20
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:thenReturn:[response] @AT@ 3426 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:this.remoteTokenServices.setRestTemplate(restTemplate) @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @AT@ 3439 @LENGTH@ 55
------INS MethodInvocation@@this.remoteTokenServices.setRestTemplate(restTemplate) @TO@ ExpressionStatement@@MethodInvocation:this.remoteTokenServices.setRestTemplate(restTemplate) @AT@ 3439 @LENGTH@ 54
---------INS FieldAccess@@this.remoteTokenServices @TO@ MethodInvocation@@this.remoteTokenServices.setRestTemplate(restTemplate) @AT@ 3439 @LENGTH@ 24
------------INS ThisExpression@@this @TO@ FieldAccess@@this.remoteTokenServices @AT@ 3439 @LENGTH@ 4
------------INS SimpleName@@remoteTokenServices @TO@ FieldAccess@@this.remoteTokenServices @AT@ 3444 @LENGTH@ 19
---------INS SimpleName@@MethodName:setRestTemplate:[restTemplate] @TO@ MethodInvocation@@this.remoteTokenServices.setRestTemplate(restTemplate) @AT@ 3464 @LENGTH@ 29
------------INS SimpleName@@restTemplate @TO@ SimpleName@@MethodName:setRestTemplate:[restTemplate] @AT@ 3480 @LENGTH@ 12
---INS VariableDeclarationStatement@@OAuth2Authentication authentication=this.remoteTokenServices.loadAuthentication("access-token-1234"); @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @AT@ 3498 @LENGTH@ 103
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication authentication=this.remoteTokenServices.loadAuthentication("access-token-1234"); @AT@ 3498 @LENGTH@ 20
------INS VariableDeclarationFragment@@authentication=this.remoteTokenServices.loadAuthentication("access-token-1234") @TO@ VariableDeclarationStatement@@OAuth2Authentication authentication=this.remoteTokenServices.loadAuthentication("access-token-1234"); @AT@ 3519 @LENGTH@ 81
---------INS SimpleName@@authentication @TO@ VariableDeclarationFragment@@authentication=this.remoteTokenServices.loadAuthentication("access-token-1234") @AT@ 3519 @LENGTH@ 14
---------INS MethodInvocation@@this.remoteTokenServices.loadAuthentication("access-token-1234") @TO@ VariableDeclarationFragment@@authentication=this.remoteTokenServices.loadAuthentication("access-token-1234") @AT@ 3536 @LENGTH@ 64
------------INS FieldAccess@@this.remoteTokenServices @TO@ MethodInvocation@@this.remoteTokenServices.loadAuthentication("access-token-1234") @AT@ 3536 @LENGTH@ 24
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.remoteTokenServices @AT@ 3536 @LENGTH@ 4
---------------INS SimpleName@@remoteTokenServices @TO@ FieldAccess@@this.remoteTokenServices @AT@ 3541 @LENGTH@ 19
------------INS SimpleName@@MethodName:loadAuthentication:["access-token-1234"] @TO@ MethodInvocation@@this.remoteTokenServices.loadAuthentication("access-token-1234") @AT@ 3561 @LENGTH@ 39
---------------INS StringLiteral@@"access-token-1234" @TO@ SimpleName@@MethodName:loadAuthentication:["access-token-1234"] @AT@ 3580 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertNotNull(authentication) @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @AT@ 3604 @LENGTH@ 30
------INS MethodInvocation@@assertNotNull(authentication) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(authentication) @AT@ 3604 @LENGTH@ 29
---------INS SimpleName@@MethodName:assertNotNull:[authentication] @TO@ MethodInvocation@@assertNotNull(authentication) @AT@ 3604 @LENGTH@ 29
------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:assertNotNull:[authentication] @AT@ 3618 @LENGTH@ 14
---MOV VariableDeclarationStatement@@Map responseAttrs=new HashMap(); @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueStringThenReturnAuthentication, Exception,  @AT@ 3802 @LENGTH@ 34


UPD ReturnStatement@@MethodInvocation:next.exchange(refreshRequest).flatMap(response -> response.body(oauth2AccessTokenResponse())).map(accessTokenResponse -> new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken())).map(result -> {
  Authentication principal=(Authentication)request.attribute(AUTHENTICATION_ATTR_NAME).orElse(new PrincipalNameAuthentication(authorizedClient.getPrincipalName()));
  HttpServletRequest httpRequest=(HttpServletRequest)request.attributes().get(HTTP_SERVLET_REQUEST_ATTR_NAME);
  HttpServletResponse httpResponse=(HttpServletResponse)request.attributes().get(HTTP_SERVLET_RESPONSE_ATTR_NAME);
  this.authorizedClientRepository.saveAuthorizedClient(result,principal,httpRequest,httpResponse);
  return result;
}
).publishOn(Schedulers.elastic()) @TO@ MethodInvocation:next.exchange(refreshRequest).flatMap(response -> response.body(oauth2AccessTokenResponse())).map(accessTokenResponse -> {
  OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken());
  return new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),refreshToken);
}
).map(result -> {
  Authentication principal=(Authentication)request.attribute(AUTHENTICATION_ATTR_NAME).orElse(new PrincipalNameAuthentication(authorizedClient.getPrincipalName()));
  HttpServletRequest httpRequest=(HttpServletRequest)request.attributes().get(HTTP_SERVLET_REQUEST_ATTR_NAME);
  HttpServletResponse httpResponse=(HttpServletResponse)request.attributes().get(HTTP_SERVLET_RESPONSE_ATTR_NAME);
  this.authorizedClientRepository.saveAuthorizedClient(result,principal,httpRequest,httpResponse);
  return result;
}
).publishOn(Schedulers.elastic()) @AT@ 17993 @LENGTH@ 945
---UPD MethodInvocation@@next.exchange(refreshRequest).flatMap(response -> response.body(oauth2AccessTokenResponse())).map(accessTokenResponse -> new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken())).map(result -> {
  Authentication principal=(Authentication)request.attribute(AUTHENTICATION_ATTR_NAME).orElse(new PrincipalNameAuthentication(authorizedClient.getPrincipalName()));
  HttpServletRequest httpRequest=(HttpServletRequest)request.attributes().get(HTTP_SERVLET_REQUEST_ATTR_NAME);
  HttpServletResponse httpResponse=(HttpServletResponse)request.attributes().get(HTTP_SERVLET_RESPONSE_ATTR_NAME);
  this.authorizedClientRepository.saveAuthorizedClient(result,principal,httpRequest,httpResponse);
  return result;
}
).publishOn(Schedulers.elastic()) @TO@ next.exchange(refreshRequest).flatMap(response -> response.body(oauth2AccessTokenResponse())).map(accessTokenResponse -> {
  OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken());
  return new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),refreshToken);
}
).map(result -> {
  Authentication principal=(Authentication)request.attribute(AUTHENTICATION_ATTR_NAME).orElse(new PrincipalNameAuthentication(authorizedClient.getPrincipalName()));
  HttpServletRequest httpRequest=(HttpServletRequest)request.attributes().get(HTTP_SERVLET_REQUEST_ATTR_NAME);
  HttpServletResponse httpResponse=(HttpServletResponse)request.attributes().get(HTTP_SERVLET_RESPONSE_ATTR_NAME);
  this.authorizedClientRepository.saveAuthorizedClient(result,principal,httpRequest,httpResponse);
  return result;
}
).publishOn(Schedulers.elastic()) @AT@ 18000 @LENGTH@ 937
------UPD MethodInvocation@@MethodName:map:[accessTokenResponse -> new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken())] @TO@ MethodName:map:[accessTokenResponse -> {
  OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken());
  return new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),refreshToken);
}
] @AT@ 18000 @LENGTH@ 314
---------UPD LambdaExpression@@accessTokenResponse -> new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken()) @TO@ accessTokenResponse -> {
  OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken());
  return new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),refreshToken);
}
 @AT@ 18108 @LENGTH@ 205
------------DEL ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), accessTokenResponse.getRefreshToken()] @AT@ 18131 @LENGTH@ 182
---------------DEL MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 18275 @LENGTH@ 37
------------------DEL SimpleName@@Name:accessTokenResponse @AT@ 18275 @LENGTH@ 19
------------------DEL SimpleName@@MethodName:getRefreshToken:[] @AT@ 18295 @LENGTH@ 17
------------INS VariableDeclarationStatement@@OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()); @TO@ LambdaExpression@@accessTokenResponse -> new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken()) @AT@ 18138 @LENGTH@ 144
---------------INS SimpleType@@OAuth2RefreshToken @TO@ VariableDeclarationStatement@@OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()); @AT@ 18138 @LENGTH@ 18
---------------INS VariableDeclarationFragment@@refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @TO@ VariableDeclarationStatement@@OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()); @AT@ 18157 @LENGTH@ 124
------------------INS SimpleName@@refreshToken @TO@ VariableDeclarationFragment@@refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @AT@ 18157 @LENGTH@ 12
------------------INS MethodInvocation@@Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @TO@ VariableDeclarationFragment@@refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @AT@ 18172 @LENGTH@ 109
---------------------INS MethodInvocation@@MethodName:ofNullable:[accessTokenResponse.getRefreshToken()] @TO@ MethodInvocation@@Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @AT@ 18172 @LENGTH@ 58
------------------------INS MethodInvocation@@accessTokenResponse.getRefreshToken() @TO@ MethodInvocation@@MethodName:ofNullable:[accessTokenResponse.getRefreshToken()] @AT@ 18192 @LENGTH@ 37
---------------------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 18192 @LENGTH@ 19
---------------------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 18212 @LENGTH@ 17
---------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @AT@ 18172 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:orElse:[authorizedClient.getRefreshToken()] @TO@ MethodInvocation@@Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @AT@ 18239 @LENGTH@ 42
------------------------INS MethodInvocation@@authorizedClient.getRefreshToken() @TO@ SimpleName@@MethodName:orElse:[authorizedClient.getRefreshToken()] @AT@ 18246 @LENGTH@ 34
---------------------------INS SimpleName@@Name:authorizedClient @TO@ MethodInvocation@@authorizedClient.getRefreshToken() @AT@ 18246 @LENGTH@ 16
---------------------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@authorizedClient.getRefreshToken() @AT@ 18263 @LENGTH@ 17
------------INS ReturnStatement@@ClassInstanceCreation:new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),refreshToken) @TO@ LambdaExpression@@accessTokenResponse -> new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken()) @AT@ 18288 @LENGTH@ 165
---------------INS ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @TO@ ReturnStatement@@ClassInstanceCreation:new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),refreshToken) @AT@ 18295 @LENGTH@ 157
------------------MOV New@@new @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @AT@ 18131 @LENGTH@ 3
------------------MOV SimpleType@@OAuth2AuthorizedClient @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @AT@ 18135 @LENGTH@ 22
------------------MOV MethodInvocation@@authorizedClient.getClientRegistration() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @AT@ 18158 @LENGTH@ 40
------------------MOV MethodInvocation@@authorizedClient.getPrincipalName() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @AT@ 18200 @LENGTH@ 35
------------------MOV MethodInvocation@@accessTokenResponse.getAccessToken() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @AT@ 18237 @LENGTH@ 36
------------------INS SimpleName@@refreshToken @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @AT@ 18439 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:peerCache=new CacheFactory().set("name",LocatorApplicationIntegrationTests.class.getSimpleName()).set("bind-address",distributedSystemProperties.getProperty("bind-address")).set("cache-xml-file",distributedSystemProperties.getProperty("cache-xml-file")).set("jmx-manager",distributedSystemProperties.getProperty("jmx-manager")).set("locators",distributedSystemProperties.getProperty("locators")).set("log-file",distributedSystemProperties.getProperty("log-file")).create() @TO@ Assignment:peerCache=new CacheFactory().set("name",LocatorApplicationIntegrationTests.class.getSimpleName()).set("bind-address",distributedSystemProperties.getProperty("bind-address")).set("cache-xml-file",distributedSystemProperties.getProperty("cache-xml-file")).set("jmx-manager",distributedSystemProperties.getProperty("jmx-manager")).set("locators",distributedSystemProperties.getProperty("locators")).set("log-file",distributedSystemProperties.getProperty("log-file")).set("log-level",distributedSystemProperties.getProperty("log-level")).create() @AT@ 2625 @LENGTH@ 516
---UPD Assignment@@peerCache=new CacheFactory().set("name",LocatorApplicationIntegrationTests.class.getSimpleName()).set("bind-address",distributedSystemProperties.getProperty("bind-address")).set("cache-xml-file",distributedSystemProperties.getProperty("cache-xml-file")).set("jmx-manager",distributedSystemProperties.getProperty("jmx-manager")).set("locators",distributedSystemProperties.getProperty("locators")).set("log-file",distributedSystemProperties.getProperty("log-file")).create() @TO@ peerCache=new CacheFactory().set("name",LocatorApplicationIntegrationTests.class.getSimpleName()).set("bind-address",distributedSystemProperties.getProperty("bind-address")).set("cache-xml-file",distributedSystemProperties.getProperty("cache-xml-file")).set("jmx-manager",distributedSystemProperties.getProperty("jmx-manager")).set("locators",distributedSystemProperties.getProperty("locators")).set("log-file",distributedSystemProperties.getProperty("log-file")).set("log-level",distributedSystemProperties.getProperty("log-level")).create() @AT@ 2625 @LENGTH@ 515
------UPD MethodInvocation@@new CacheFactory().set("name",LocatorApplicationIntegrationTests.class.getSimpleName()).set("bind-address",distributedSystemProperties.getProperty("bind-address")).set("cache-xml-file",distributedSystemProperties.getProperty("cache-xml-file")).set("jmx-manager",distributedSystemProperties.getProperty("jmx-manager")).set("locators",distributedSystemProperties.getProperty("locators")).set("log-file",distributedSystemProperties.getProperty("log-file")).create() @TO@ new CacheFactory().set("name",LocatorApplicationIntegrationTests.class.getSimpleName()).set("bind-address",distributedSystemProperties.getProperty("bind-address")).set("cache-xml-file",distributedSystemProperties.getProperty("cache-xml-file")).set("jmx-manager",distributedSystemProperties.getProperty("jmx-manager")).set("locators",distributedSystemProperties.getProperty("locators")).set("log-file",distributedSystemProperties.getProperty("log-file")).set("log-level",distributedSystemProperties.getProperty("log-level")).create() @AT@ 2637 @LENGTH@ 503
---------INS MethodInvocation@@MethodName:set:["log-level", distributedSystemProperties.getProperty("log-level")] @TO@ MethodInvocation@@new CacheFactory().set("name",LocatorApplicationIntegrationTests.class.getSimpleName()).set("bind-address",distributedSystemProperties.getProperty("bind-address")).set("cache-xml-file",distributedSystemProperties.getProperty("cache-xml-file")).set("jmx-manager",distributedSystemProperties.getProperty("jmx-manager")).set("locators",distributedSystemProperties.getProperty("locators")).set("log-file",distributedSystemProperties.getProperty("log-file")).create() @AT@ 2637 @LENGTH@ 565
------------INS StringLiteral@@"log-level" @TO@ MethodInvocation@@MethodName:set:["log-level", distributedSystemProperties.getProperty("log-level")] @AT@ 3136 @LENGTH@ 11
------------INS MethodInvocation@@distributedSystemProperties.getProperty("log-level") @TO@ MethodInvocation@@MethodName:set:["log-level", distributedSystemProperties.getProperty("log-level")] @AT@ 3149 @LENGTH@ 52
---------------INS SimpleName@@Name:distributedSystemProperties @TO@ MethodInvocation@@distributedSystemProperties.getProperty("log-level") @AT@ 3149 @LENGTH@ 27
---------------INS SimpleName@@MethodName:getProperty:["log-level"] @TO@ MethodInvocation@@distributedSystemProperties.getProperty("log-level") @AT@ 3177 @LENGTH@ 24
------------------INS StringLiteral@@"log-level" @TO@ SimpleName@@MethodName:getProperty:["log-level"] @AT@ 3189 @LENGTH@ 11


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1438 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1438 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1445 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1453 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1483 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1490 @LENGTH@ 5


UPD TryStatement@@try {  log.tracef("onMessage received message: %s '%s'",message,((TextMessage)message).getText());  if (checker.getRolledback() > 0) {    log.tracef("Discarding message '%s' as onMessage called for second time",message);    return;  }  final Destination replyTo=message.getJMSReplyTo();  if (replyTo == null) {    throw new RuntimeException("ReplyTo info in message was not specified" + " and bean does not know where to reply to");  }  TxTestUtil.enlistTestXAResource(tm.getTransaction(),checker);  try (JMSContext context=factory.createContext()){    context.createProducer().setJMSCorrelationID(message.getJMSMessageID()).send(replyTo,REPLY_PREFIX + ((TextMessage)message).getText());  }   TxTestUtil.waitForTimeout(tm);} catch (Exception e) {  throw new RuntimeException("onMessage method execution failed",e);} @TO@ try {  log.tracef("onMessage received message: %s '%s'",message,((TextMessage)message).getText());  if (checker.getRolledback() > 0) {    log.tracef("Discarding message '%s' as onMessage called for second time",message);    return;  }  final Destination replyTo=message.getJMSReplyTo();  if (replyTo == null) {    throw new RuntimeException("ReplyTo info in message was not specified" + " and bean does not know where to reply to");  }  TxTestUtil.waitForTimeout(tm);  TxTestUtil.enlistTestXAResource(tm.getTransaction(),checker);  try (JMSContext context=factory.createContext()){    context.createProducer().setJMSCorrelationID(message.getJMSMessageID()).send(replyTo,REPLY_PREFIX + ((TextMessage)message).getText());  } } catch (Exception e) {  throw new RuntimeException("onMessage method execution failed",e);} @AT@ 2423 @LENGTH@ 1353
---MOV ExpressionStatement@@MethodInvocation:TxTestUtil.waitForTimeout(tm) @TO@ TryStatement@@try {  log.tracef("onMessage received message: %s '%s'",message,((TextMessage)message).getText());  if (checker.getRolledback() > 0) {    log.tracef("Discarding message '%s' as onMessage called for second time",message);    return;  }  final Destination replyTo=message.getJMSReplyTo();  if (replyTo == null) {    throw new RuntimeException("ReplyTo info in message was not specified" + " and bean does not know where to reply to");  }  TxTestUtil.enlistTestXAResource(tm.getTransaction(),checker);  try (JMSContext context=factory.createContext()){    context.createProducer().setJMSCorrelationID(message.getJMSMessageID()).send(replyTo,REPLY_PREFIX + ((TextMessage)message).getText());  }   TxTestUtil.waitForTimeout(tm);} catch (Exception e) {  throw new RuntimeException("onMessage method execution failed",e);} @AT@ 3624 @LENGTH@ 30


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1003 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1003 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1010 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1018 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1048 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1055 @LENGTH@ 5


UPD VariableDeclarationStatement@@DdbEndpoint endpoint=(DdbEndpoint)component.createEndpoint("aws-myTable://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1"); @TO@ DdbEndpoint endpoint=(DdbEndpoint)component.createEndpoint("aws-ddb://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1"); @AT@ 1895 @LENGTH@ 136
---UPD VariableDeclarationFragment@@endpoint=(DdbEndpoint)component.createEndpoint("aws-myTable://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @TO@ endpoint=(DdbEndpoint)component.createEndpoint("aws-ddb://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @AT@ 1907 @LENGTH@ 123
------UPD CastExpression@@(DdbEndpoint)component.createEndpoint("aws-myTable://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @TO@ (DdbEndpoint)component.createEndpoint("aws-ddb://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @AT@ 1918 @LENGTH@ 112
---------UPD MethodInvocation@@component.createEndpoint("aws-myTable://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @TO@ component.createEndpoint("aws-ddb://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @AT@ 1931 @LENGTH@ 99
------------UPD SimpleName@@MethodName:createEndpoint:["aws-myTable://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1"] @TO@ MethodName:createEndpoint:["aws-ddb://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1"] @AT@ 1941 @LENGTH@ 89
---------------UPD StringLiteral@@"aws-myTable://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1" @TO@ "aws-ddb://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1" @AT@ 1956 @LENGTH@ 73


UPD ExpressionStatement@@MethodInvocation:from("file:target/data/zip/out?initialDelay=0&delay=10&delete=true").unmarshal().zipDefalter().to("mock:result") @TO@ MethodInvocation:from("file:target/data/zip/out?initialDelay=0&delay=10&delete=true").unmarshal().zipDeflater().to("mock:result") @AT@ 2458 @LENGTH@ 155
---UPD MethodInvocation@@from("file:target/data/zip/out?initialDelay=0&delay=10&delete=true").unmarshal().zipDefalter().to("mock:result") @TO@ from("file:target/data/zip/out?initialDelay=0&delay=10&delete=true").unmarshal().zipDeflater().to("mock:result") @AT@ 2458 @LENGTH@ 154
------UPD MethodInvocation@@MethodName:zipDefalter:[] @TO@ MethodName:zipDeflater:[] @AT@ 2458 @LENGTH@ 115


UPD ExpressionStatement@@MethodInvocation:registry.put("groovyShellFactory",groovyShellFactory) @TO@ MethodInvocation:registry.bind("groovyShellFactory",groovyShellFactory) @AT@ 1747 @LENGTH@ 55
---UPD MethodInvocation@@registry.put("groovyShellFactory",groovyShellFactory) @TO@ registry.bind("groovyShellFactory",groovyShellFactory) @AT@ 1747 @LENGTH@ 54
------UPD SimpleName@@MethodName:put:["groovyShellFactory", groovyShellFactory] @TO@ MethodName:bind:["groovyShellFactory", groovyShellFactory] @AT@ 1756 @LENGTH@ 45


INS VariableDeclarationStatement@@RequestMatcher notXRequestedWith=new NegatedRequestMatcher(new RequestHeaderRequestMatcher("X-Requested-With","XMLHttpRequest")); @TO@ MethodDeclaration@@private, AuthenticationEntryPoint, MethodName:getLoginEntryPoint, B http, String providerLoginPage,  @AT@ 28258 @LENGTH@ 137
---INS SimpleType@@RequestMatcher @TO@ VariableDeclarationStatement@@RequestMatcher notXRequestedWith=new NegatedRequestMatcher(new RequestHeaderRequestMatcher("X-Requested-With","XMLHttpRequest")); @AT@ 28258 @LENGTH@ 14
---INS VariableDeclarationFragment@@notXRequestedWith=new NegatedRequestMatcher(new RequestHeaderRequestMatcher("X-Requested-With","XMLHttpRequest")) @TO@ VariableDeclarationStatement@@RequestMatcher notXRequestedWith=new NegatedRequestMatcher(new RequestHeaderRequestMatcher("X-Requested-With","XMLHttpRequest")); @AT@ 28273 @LENGTH@ 121
------INS SimpleName@@notXRequestedWith @TO@ VariableDeclarationFragment@@notXRequestedWith=new NegatedRequestMatcher(new RequestHeaderRequestMatcher("X-Requested-With","XMLHttpRequest")) @AT@ 28273 @LENGTH@ 17
------INS ClassInstanceCreation@@NegatedRequestMatcher[new RequestHeaderRequestMatcher("X-Requested-With","XMLHttpRequest")] @TO@ VariableDeclarationFragment@@notXRequestedWith=new NegatedRequestMatcher(new RequestHeaderRequestMatcher("X-Requested-With","XMLHttpRequest")) @AT@ 28293 @LENGTH@ 101
---------INS New@@new @TO@ ClassInstanceCreation@@NegatedRequestMatcher[new RequestHeaderRequestMatcher("X-Requested-With","XMLHttpRequest")] @AT@ 28293 @LENGTH@ 3
---------INS SimpleType@@NegatedRequestMatcher @TO@ ClassInstanceCreation@@NegatedRequestMatcher[new RequestHeaderRequestMatcher("X-Requested-With","XMLHttpRequest")] @AT@ 28297 @LENGTH@ 21
---------INS ClassInstanceCreation@@RequestHeaderRequestMatcher["X-Requested-With", "XMLHttpRequest"] @TO@ ClassInstanceCreation@@NegatedRequestMatcher[new RequestHeaderRequestMatcher("X-Requested-With","XMLHttpRequest")] @AT@ 28324 @LENGTH@ 69
------------INS New@@new @TO@ ClassInstanceCreation@@RequestHeaderRequestMatcher["X-Requested-With", "XMLHttpRequest"] @AT@ 28324 @LENGTH@ 3
------------INS SimpleType@@RequestHeaderRequestMatcher @TO@ ClassInstanceCreation@@RequestHeaderRequestMatcher["X-Requested-With", "XMLHttpRequest"] @AT@ 28328 @LENGTH@ 27
------------INS StringLiteral@@"X-Requested-With" @TO@ ClassInstanceCreation@@RequestHeaderRequestMatcher["X-Requested-With", "XMLHttpRequest"] @AT@ 28356 @LENGTH@ 18
------------INS StringLiteral@@"XMLHttpRequest" @TO@ ClassInstanceCreation@@RequestHeaderRequestMatcher["X-Requested-With", "XMLHttpRequest"] @AT@ 28376 @LENGTH@ 16


UPD ReturnStatement@@MethodInvocation:ShrinkWrap.create(WebArchive.class,EXECUTOR_SERVICE_ARCHIVE_NAME + ".war").addClasses(ExecutorService.class,RemoteService.class,Helpers.class).addAsResource("context-handlers.xml","context-handlers.xml").addAsManifestResource(new StringAsset("Dependencies: org.jboss.xts, org.jboss.jts"),"MANIFEST.MF").addAsManifestResource(createPermissionsXmlAsset(new SocketPermission("127.0.0.1:8180","connect,resolve"),new RuntimePermission("org.apache.cxf.permission","resolveUri"),new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read")),"permissions.xml") @TO@ MethodInvocation:ShrinkWrap.create(WebArchive.class,EXECUTOR_SERVICE_ARCHIVE_NAME + ".war").addClasses(ExecutorService.class,RemoteService.class,Helpers.class).addAsResource("context-handlers.xml","context-handlers.xml").addAsManifestResource(new StringAsset("Dependencies: org.jboss.xts, org.jboss.jts"),"MANIFEST.MF").addAsManifestResource(createPermissionsXmlAsset(new SocketPermission("127.0.0.1:8180","connect,resolve"),new RuntimePermission("org.apache.cxf.permission","resolveUri"),new RuntimePermission("getClassLoader"),new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read")),"permissions.xml") @AT@ 2957 @LENGTH@ 881
---UPD MethodInvocation@@ShrinkWrap.create(WebArchive.class,EXECUTOR_SERVICE_ARCHIVE_NAME + ".war").addClasses(ExecutorService.class,RemoteService.class,Helpers.class).addAsResource("context-handlers.xml","context-handlers.xml").addAsManifestResource(new StringAsset("Dependencies: org.jboss.xts, org.jboss.jts"),"MANIFEST.MF").addAsManifestResource(createPermissionsXmlAsset(new SocketPermission("127.0.0.1:8180","connect,resolve"),new RuntimePermission("org.apache.cxf.permission","resolveUri"),new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read")),"permissions.xml") @TO@ ShrinkWrap.create(WebArchive.class,EXECUTOR_SERVICE_ARCHIVE_NAME + ".war").addClasses(ExecutorService.class,RemoteService.class,Helpers.class).addAsResource("context-handlers.xml","context-handlers.xml").addAsManifestResource(new StringAsset("Dependencies: org.jboss.xts, org.jboss.jts"),"MANIFEST.MF").addAsManifestResource(createPermissionsXmlAsset(new SocketPermission("127.0.0.1:8180","connect,resolve"),new RuntimePermission("org.apache.cxf.permission","resolveUri"),new RuntimePermission("getClassLoader"),new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read")),"permissions.xml") @AT@ 2964 @LENGTH@ 873
------UPD SimpleName@@MethodName:addAsManifestResource:[createPermissionsXmlAsset(new SocketPermission("127.0.0.1:8180","connect,resolve"),new RuntimePermission("org.apache.cxf.permission","resolveUri"),new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read")), "permissions.xml"] @TO@ MethodName:addAsManifestResource:[createPermissionsXmlAsset(new SocketPermission("127.0.0.1:8180","connect,resolve"),new RuntimePermission("org.apache.cxf.permission","resolveUri"),new RuntimePermission("getClassLoader"),new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read")), "permissions.xml"] @AT@ 3340 @LENGTH@ 497
---------UPD MethodInvocation@@createPermissionsXmlAsset(new SocketPermission("127.0.0.1:8180","connect,resolve"),new RuntimePermission("org.apache.cxf.permission","resolveUri"),new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read")) @TO@ createPermissionsXmlAsset(new SocketPermission("127.0.0.1:8180","connect,resolve"),new RuntimePermission("org.apache.cxf.permission","resolveUri"),new RuntimePermission("getClassLoader"),new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read")) @AT@ 3362 @LENGTH@ 455
------------UPD SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission("127.0.0.1:8180","connect,resolve"), new RuntimePermission("org.apache.cxf.permission","resolveUri"), new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read")] @TO@ MethodName:createPermissionsXmlAsset:[new SocketPermission("127.0.0.1:8180","connect,resolve"), new RuntimePermission("org.apache.cxf.permission","resolveUri"), new RuntimePermission("getClassLoader"), new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read")] @AT@ 3362 @LENGTH@ 455
---------------INS ClassInstanceCreation@@RuntimePermission["getClassLoader"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission("127.0.0.1:8180","connect,resolve"), new RuntimePermission("org.apache.cxf.permission","resolveUri"), new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read")] @AT@ 3586 @LENGTH@ 39
------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimePermission["getClassLoader"] @AT@ 3586 @LENGTH@ 3
------------------INS SimpleType@@RuntimePermission @TO@ ClassInstanceCreation@@RuntimePermission["getClassLoader"] @AT@ 3590 @LENGTH@ 17
------------------INS StringLiteral@@"getClassLoader" @TO@ ClassInstanceCreation@@RuntimePermission["getClassLoader"] @AT@ 3608 @LENGTH@ 16


UPD Block@@ThenBody:{  return createMapEntry(field,convertSimpleOrDocument(rawValue,field.getPropertyEntity()));} @TO@ ThenBody:{  Object val=field.isMap() ? new LinkedHashMap<>((Document)rawValue) : rawValue;  return createMapEntry(field,convertSimpleOrDocument(val,field.getPropertyEntity()));} @AT@ 4533 @LENGTH@ 100
---UPD ReturnStatement@@MethodInvocation:createMapEntry(field,convertSimpleOrDocument(rawValue,field.getPropertyEntity())) @TO@ MethodInvocation:createMapEntry(field,convertSimpleOrDocument(val,field.getPropertyEntity())) @AT@ 4538 @LENGTH@ 91
------UPD MethodInvocation@@createMapEntry(field,convertSimpleOrDocument(rawValue,field.getPropertyEntity())) @TO@ createMapEntry(field,convertSimpleOrDocument(val,field.getPropertyEntity())) @AT@ 4545 @LENGTH@ 83
---------UPD SimpleName@@MethodName:createMapEntry:[field, convertSimpleOrDocument(rawValue,field.getPropertyEntity())] @TO@ MethodName:createMapEntry:[field, convertSimpleOrDocument(val,field.getPropertyEntity())] @AT@ 4545 @LENGTH@ 83
------------UPD MethodInvocation@@convertSimpleOrDocument(rawValue,field.getPropertyEntity()) @TO@ convertSimpleOrDocument(val,field.getPropertyEntity()) @AT@ 4567 @LENGTH@ 60
---------------UPD SimpleName@@MethodName:convertSimpleOrDocument:[rawValue, field.getPropertyEntity()] @TO@ MethodName:convertSimpleOrDocument:[val, field.getPropertyEntity()] @AT@ 4567 @LENGTH@ 60
------------------UPD SimpleName@@rawValue @TO@ val @AT@ 4591 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:convertSimpleOrDocument:[rawValue, field.getPropertyEntity()] @TO@ MethodName:convertSimpleOrDocument:[val, field.getPropertyEntity()] @AT@ 4567 @LENGTH@ 60
------------------UPD SimpleName@@rawValue @TO@ val @AT@ 4591 @LENGTH@ 8
---INS VariableDeclarationStatement@@Object val=field.isMap() ? new LinkedHashMap<>((Document)rawValue) : rawValue; @TO@ Block@@ThenBody:{  return createMapEntry(field,convertSimpleOrDocument(rawValue,field.getPropertyEntity()));} @AT@ 4571 @LENGTH@ 81
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object val=field.isMap() ? new LinkedHashMap<>((Document)rawValue) : rawValue; @AT@ 4571 @LENGTH@ 6
------INS VariableDeclarationFragment@@val=field.isMap() ? new LinkedHashMap<>((Document)rawValue) : rawValue @TO@ VariableDeclarationStatement@@Object val=field.isMap() ? new LinkedHashMap<>((Document)rawValue) : rawValue; @AT@ 4578 @LENGTH@ 73
---------INS SimpleName@@val @TO@ VariableDeclarationFragment@@val=field.isMap() ? new LinkedHashMap<>((Document)rawValue) : rawValue @AT@ 4578 @LENGTH@ 3
---------INS ConditionalExpression@@field.isMap() ? new LinkedHashMap<>((Document)rawValue) : rawValue @TO@ VariableDeclarationFragment@@val=field.isMap() ? new LinkedHashMap<>((Document)rawValue) : rawValue @AT@ 4584 @LENGTH@ 67
------------INS MethodInvocation@@field.isMap() @TO@ ConditionalExpression@@field.isMap() ? new LinkedHashMap<>((Document)rawValue) : rawValue @AT@ 4584 @LENGTH@ 13
---------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.isMap() @AT@ 4584 @LENGTH@ 5
---------------INS SimpleName@@MethodName:isMap:[] @TO@ MethodInvocation@@field.isMap() @AT@ 4590 @LENGTH@ 7
------------INS ClassInstanceCreation@@LinkedHashMap<>[(Document)rawValue] @TO@ ConditionalExpression@@field.isMap() ? new LinkedHashMap<>((Document)rawValue) : rawValue @AT@ 4600 @LENGTH@ 40
---------------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashMap<>[(Document)rawValue] @AT@ 4600 @LENGTH@ 3
---------------INS ParameterizedType@@LinkedHashMap<> @TO@ ClassInstanceCreation@@LinkedHashMap<>[(Document)rawValue] @AT@ 4604 @LENGTH@ 15
------------------INS SimpleType@@LinkedHashMap @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 4604 @LENGTH@ 13
---------------INS CastExpression@@(Document)rawValue @TO@ ClassInstanceCreation@@LinkedHashMap<>[(Document)rawValue] @AT@ 4620 @LENGTH@ 19
------------------INS SimpleType@@Document @TO@ CastExpression@@(Document)rawValue @AT@ 4621 @LENGTH@ 8
------------------INS SimpleName@@rawValue @TO@ CastExpression@@(Document)rawValue @AT@ 4631 @LENGTH@ 8
------------INS SimpleName@@rawValue @TO@ ConditionalExpression@@field.isMap() ? new LinkedHashMap<>((Document)rawValue) : rawValue @AT@ 4643 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:mqListBrokersTest, Exception,  @TO@ public, void, MethodName:kmsListBrokersTest, Exception,  @AT@ 1574 @LENGTH@ 640
---UPD SimpleName@@MethodName:mqListBrokersTest @TO@ MethodName:kmsListBrokersTest @AT@ 1586 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:accept, Visitor visitor,  @TO@ public, final, void, MethodName:accept, Visitor visitor,  @AT@ 1169 @LENGTH@ 144
---UPD ExpressionStatement@@MethodInvocation:this.children.forEach(child -> child.accept(visitor)) @TO@ MethodInvocation:this.children.forEach(child -> prepareVisit(child).accept(visitor)) @AT@ 1233 @LENGTH@ 54
------UPD MethodInvocation@@this.children.forEach(child -> child.accept(visitor)) @TO@ this.children.forEach(child -> prepareVisit(child).accept(visitor)) @AT@ 1233 @LENGTH@ 53
---------UPD SimpleName@@MethodName:forEach:[child -> child.accept(visitor)] @TO@ MethodName:forEach:[child -> prepareVisit(child).accept(visitor)] @AT@ 1247 @LENGTH@ 39
------------UPD LambdaExpression@@child -> child.accept(visitor) @TO@ child -> prepareVisit(child).accept(visitor) @AT@ 1255 @LENGTH@ 30
---------------UPD MethodInvocation@@child.accept(visitor) @TO@ prepareVisit(child).accept(visitor) @AT@ 1264 @LENGTH@ 21
------------------UPD SimpleName@@Name:child @TO@ child @AT@ 1264 @LENGTH@ 5
------------------INS MethodInvocation@@MethodName:prepareVisit:[child] @TO@ MethodInvocation@@child.accept(visitor) @AT@ 1415 @LENGTH@ 19
---------------------MOV SimpleName@@Name:child @TO@ MethodInvocation@@MethodName:prepareVisit:[child] @AT@ 1264 @LENGTH@ 5
---INS Modifier@@final @TO@ MethodDeclaration@@public, void, MethodName:accept, Visitor visitor,  @AT@ 1321 @LENGTH@ 5


UPD IfStatement@@if (o == null || getClass() != o.getClass()) return false; @TO@ if (o == null || getClass() != o.getClass()) {  return false;} @AT@ 1294 @LENGTH@ 58
---UPD Block@@ThenBody:return false; @TO@ ThenBody:{  return false;} @AT@ 1339 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:testNullRegistryInput,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]AuditingBeanDefinitionRegistrarSupportUnitTests,  @AT@ 2264 @LENGTH@ 283
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNullRegistryInput,  @AT@ 2264 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNullRegistryInput,  @AT@ 2271 @LENGTH@ 4
---INS SimpleName@@MethodName:testNullRegistryInput @TO@ MethodDeclaration@@public, void, MethodName:testNullRegistryInput,  @AT@ 2276 @LENGTH@ 21
---INS VariableDeclarationStatement@@AuditingBeanDefinitionRegistrarSupport registrar=new DummyAuditingBeanDefinitionRegistrarSupport(); @TO@ MethodDeclaration@@public, void, MethodName:testNullRegistryInput,  @AT@ 2305 @LENGTH@ 101
------INS SimpleType@@AuditingBeanDefinitionRegistrarSupport @TO@ VariableDeclarationStatement@@AuditingBeanDefinitionRegistrarSupport registrar=new DummyAuditingBeanDefinitionRegistrarSupport(); @AT@ 2305 @LENGTH@ 38
------INS VariableDeclarationFragment@@registrar=new DummyAuditingBeanDefinitionRegistrarSupport() @TO@ VariableDeclarationStatement@@AuditingBeanDefinitionRegistrarSupport registrar=new DummyAuditingBeanDefinitionRegistrarSupport(); @AT@ 2344 @LENGTH@ 61
---------INS SimpleName@@registrar @TO@ VariableDeclarationFragment@@registrar=new DummyAuditingBeanDefinitionRegistrarSupport() @AT@ 2344 @LENGTH@ 9
---------INS ClassInstanceCreation@@DummyAuditingBeanDefinitionRegistrarSupport[] @TO@ VariableDeclarationFragment@@registrar=new DummyAuditingBeanDefinitionRegistrarSupport() @AT@ 2356 @LENGTH@ 49
------------INS New@@new @TO@ ClassInstanceCreation@@DummyAuditingBeanDefinitionRegistrarSupport[] @AT@ 2356 @LENGTH@ 3
------------INS SimpleType@@DummyAuditingBeanDefinitionRegistrarSupport @TO@ ClassInstanceCreation@@DummyAuditingBeanDefinitionRegistrarSupport[] @AT@ 2360 @LENGTH@ 43
---INS VariableDeclarationStatement@@AnnotationMetadata metadata=new StandardAnnotationMetadata(SampleConfig.class); @TO@ MethodDeclaration@@public, void, MethodName:testNullRegistryInput,  @AT@ 2409 @LENGTH@ 81
------INS SimpleType@@AnnotationMetadata @TO@ VariableDeclarationStatement@@AnnotationMetadata metadata=new StandardAnnotationMetadata(SampleConfig.class); @AT@ 2409 @LENGTH@ 18
------INS VariableDeclarationFragment@@metadata=new StandardAnnotationMetadata(SampleConfig.class) @TO@ VariableDeclarationStatement@@AnnotationMetadata metadata=new StandardAnnotationMetadata(SampleConfig.class); @AT@ 2428 @LENGTH@ 61
---------INS SimpleName@@metadata @TO@ VariableDeclarationFragment@@metadata=new StandardAnnotationMetadata(SampleConfig.class) @AT@ 2428 @LENGTH@ 8
---------INS ClassInstanceCreation@@StandardAnnotationMetadata[SampleConfig.class] @TO@ VariableDeclarationFragment@@metadata=new StandardAnnotationMetadata(SampleConfig.class) @AT@ 2439 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@StandardAnnotationMetadata[SampleConfig.class] @AT@ 2439 @LENGTH@ 3
------------INS SimpleType@@StandardAnnotationMetadata @TO@ ClassInstanceCreation@@StandardAnnotationMetadata[SampleConfig.class] @AT@ 2443 @LENGTH@ 26
------------INS TypeLiteral@@SampleConfig.class @TO@ ClassInstanceCreation@@StandardAnnotationMetadata[SampleConfig.class] @AT@ 2470 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:registrar.registerBeanDefinitions(metadata,null) @TO@ MethodDeclaration@@public, void, MethodName:testNullRegistryInput,  @AT@ 2494 @LENGTH@ 50
------INS MethodInvocation@@registrar.registerBeanDefinitions(metadata,null) @TO@ ExpressionStatement@@MethodInvocation:registrar.registerBeanDefinitions(metadata,null) @AT@ 2494 @LENGTH@ 49
---------INS SimpleName@@Name:registrar @TO@ MethodInvocation@@registrar.registerBeanDefinitions(metadata,null) @AT@ 2494 @LENGTH@ 9
---------INS SimpleName@@MethodName:registerBeanDefinitions:[metadata, null] @TO@ MethodInvocation@@registrar.registerBeanDefinitions(metadata,null) @AT@ 2504 @LENGTH@ 39
------------INS SimpleName@@metadata @TO@ SimpleName@@MethodName:registerBeanDefinitions:[metadata, null] @AT@ 2528 @LENGTH@ 8
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:registerBeanDefinitions:[metadata, null] @AT@ 2538 @LENGTH@ 4


UPD IfStatement@@if ("xpath".equals(name)) {  is=new FileInputStream(new File(buildDir,"../src/main/schema/xpath.json"));} else {  is=new FileInputStream(new File(core,"target/classes/org/apache/camel/model/language/" + modelName + ".json"));} @TO@ if ("xpath".equals(name)) {  is=new FileInputStream(new File(buildDir,"../src/main/schema/xpath.json"));} else if ("bean".equals(name)) {  is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json"));} else {  is=new FileInputStream(new File(core,"target/classes/org/apache/camel/model/language/" + modelName + ".json"));} @AT@ 6367 @LENGTH@ 475
---INS Block@@ElseBody:if ("bean".equals(name)) {  is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json"));} else {  is=new FileInputStream(new File(core,"target/classes/org/apache/camel/model/language/" + modelName + ".json"));} @TO@ IfStatement@@if ("xpath".equals(name)) {  is=new FileInputStream(new File(buildDir,"../src/main/schema/xpath.json"));} else {  is=new FileInputStream(new File(core,"target/classes/org/apache/camel/model/language/" + modelName + ".json"));} @AT@ 6672 @LENGTH@ 474
------INS IfStatement@@if ("bean".equals(name)) {  is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json"));} else {  is=new FileInputStream(new File(core,"target/classes/org/apache/camel/model/language/" + modelName + ".json"));} @TO@ Block@@ElseBody:if ("bean".equals(name)) {  is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json"));} else {  is=new FileInputStream(new File(core,"target/classes/org/apache/camel/model/language/" + modelName + ".json"));} @AT@ 6672 @LENGTH@ 474
---------MOV Block@@ElseBody:{  is=new FileInputStream(new File(core,"target/classes/org/apache/camel/model/language/" + modelName + ".json"));} @TO@ IfStatement@@if ("bean".equals(name)) {  is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json"));} else {  is=new FileInputStream(new File(core,"target/classes/org/apache/camel/model/language/" + modelName + ".json"));} @AT@ 6672 @LENGTH@ 170
---------INS MethodInvocation@@"bean".equals(name) @TO@ IfStatement@@if ("bean".equals(name)) {  is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json"));} else {  is=new FileInputStream(new File(core,"target/classes/org/apache/camel/model/language/" + modelName + ".json"));} @AT@ 6676 @LENGTH@ 19
------------INS StringLiteral@@"bean" @TO@ MethodInvocation@@"bean".equals(name) @AT@ 6676 @LENGTH@ 6
------------INS SimpleName@@MethodName:equals:[name] @TO@ MethodInvocation@@"bean".equals(name) @AT@ 6683 @LENGTH@ 12
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:equals:[name] @AT@ 6690 @LENGTH@ 4
---------INS Block@@ThenBody:{  is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json"));} @TO@ IfStatement@@if ("bean".equals(name)) {  is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json"));} else {  is=new FileInputStream(new File(core,"target/classes/org/apache/camel/model/language/" + modelName + ".json"));} @AT@ 6697 @LENGTH@ 273
------------INS ExpressionStatement@@Assignment:is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json")) @TO@ Block@@ThenBody:{  is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json"));} @AT@ 6865 @LENGTH@ 79
---------------INS Assignment@@is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json")) @TO@ ExpressionStatement@@Assignment:is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json")) @AT@ 6865 @LENGTH@ 78
------------------INS SimpleName@@is @TO@ Assignment@@is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json")) @AT@ 6865 @LENGTH@ 2
------------------INS Operator@@= @TO@ Assignment@@is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json")) @AT@ 6867 @LENGTH@ 1
------------------INS ClassInstanceCreation@@FileInputStream[new File(buildDir,"../src/main/schema/method.json")] @TO@ Assignment@@is=new FileInputStream(new File(buildDir,"../src/main/schema/method.json")) @AT@ 6870 @LENGTH@ 73
---------------------INS New@@new @TO@ ClassInstanceCreation@@FileInputStream[new File(buildDir,"../src/main/schema/method.json")] @AT@ 6870 @LENGTH@ 3
---------------------INS SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[new File(buildDir,"../src/main/schema/method.json")] @AT@ 6874 @LENGTH@ 15
---------------------INS ClassInstanceCreation@@File[buildDir, "../src/main/schema/method.json"] @TO@ ClassInstanceCreation@@FileInputStream[new File(buildDir,"../src/main/schema/method.json")] @AT@ 6890 @LENGTH@ 52
------------------------INS New@@new @TO@ ClassInstanceCreation@@File[buildDir, "../src/main/schema/method.json"] @AT@ 6890 @LENGTH@ 3
------------------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[buildDir, "../src/main/schema/method.json"] @AT@ 6894 @LENGTH@ 4
------------------------INS SimpleName@@buildDir @TO@ ClassInstanceCreation@@File[buildDir, "../src/main/schema/method.json"] @AT@ 6899 @LENGTH@ 8
------------------------INS StringLiteral@@"../src/main/schema/method.json" @TO@ ClassInstanceCreation@@File[buildDir, "../src/main/schema/method.json"] @AT@ 6909 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:assertEquals("GET&http%3A%2F%2Fphotos.example.net%2Fphotos&file%3Dvacation.jpg%26oauth_consumer_key%3Ddpf43f3p2l4k3l03%26oauth_nonce%3Dkllo9940pd9333jh%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1191242096%26oauth_token%3Dnnch734d00sl2jdk%26oauth_version%3D1.0%26size%3Doriginal",baseString) @TO@ MethodInvocation:assertEquals("GET&https%3A%2F%2Fphotos.example.net%2Fphotos&file%3Dvacation.jpg%26oauth_consumer_key%3Ddpf43f3p2l4k3l03%26oauth_nonce%3Dkllo9940pd9333jh%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1191242096%26oauth_token%3Dnnch734d00sl2jdk%26oauth_version%3D1.0%26size%3Doriginal",baseString) @AT@ 4374 @LENGTH@ 316
---UPD MethodInvocation@@assertEquals("GET&http%3A%2F%2Fphotos.example.net%2Fphotos&file%3Dvacation.jpg%26oauth_consumer_key%3Ddpf43f3p2l4k3l03%26oauth_nonce%3Dkllo9940pd9333jh%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1191242096%26oauth_token%3Dnnch734d00sl2jdk%26oauth_version%3D1.0%26size%3Doriginal",baseString) @TO@ assertEquals("GET&https%3A%2F%2Fphotos.example.net%2Fphotos&file%3Dvacation.jpg%26oauth_consumer_key%3Ddpf43f3p2l4k3l03%26oauth_nonce%3Dkllo9940pd9333jh%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1191242096%26oauth_token%3Dnnch734d00sl2jdk%26oauth_version%3D1.0%26size%3Doriginal",baseString) @AT@ 4374 @LENGTH@ 315
------UPD SimpleName@@MethodName:assertEquals:["GET&http%3A%2F%2Fphotos.example.net%2Fphotos&file%3Dvacation.jpg%26oauth_consumer_key%3Ddpf43f3p2l4k3l03%26oauth_nonce%3Dkllo9940pd9333jh%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1191242096%26oauth_token%3Dnnch734d00sl2jdk%26oauth_version%3D1.0%26size%3Doriginal", baseString] @TO@ MethodName:assertEquals:["GET&https%3A%2F%2Fphotos.example.net%2Fphotos&file%3Dvacation.jpg%26oauth_consumer_key%3Ddpf43f3p2l4k3l03%26oauth_nonce%3Dkllo9940pd9333jh%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1191242096%26oauth_token%3Dnnch734d00sl2jdk%26oauth_version%3D1.0%26size%3Doriginal", baseString] @AT@ 4374 @LENGTH@ 315
---------UPD StringLiteral@@"GET&http%3A%2F%2Fphotos.example.net%2Fphotos&file%3Dvacation.jpg%26oauth_consumer_key%3Ddpf43f3p2l4k3l03%26oauth_nonce%3Dkllo9940pd9333jh%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1191242096%26oauth_token%3Dnnch734d00sl2jdk%26oauth_version%3D1.0%26size%3Doriginal" @TO@ "GET&https%3A%2F%2Fphotos.example.net%2Fphotos&file%3Dvacation.jpg%26oauth_consumer_key%3Ddpf43f3p2l4k3l03%26oauth_nonce%3Dkllo9940pd9333jh%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1191242096%26oauth_token%3Dnnch734d00sl2jdk%26oauth_version%3D1.0%26size%3Doriginal" @AT@ 4392 @LENGTH@ 280


UPD ExpressionStatement@@MethodInvocation:LOG.debug("adding table {} to external tables list") @TO@ MethodInvocation:LOG.debug("adding table {} to external tables list",tblName) @AT@ 12292 @LENGTH@ 53
---UPD MethodInvocation@@LOG.debug("adding table {} to external tables list") @TO@ LOG.debug("adding table {} to external tables list",tblName) @AT@ 12292 @LENGTH@ 52
------UPD SimpleName@@MethodName:debug:["adding table {} to external tables list"] @TO@ MethodName:debug:["adding table {} to external tables list", tblName] @AT@ 12296 @LENGTH@ 48
---------INS SimpleName@@tblName @TO@ SimpleName@@MethodName:debug:["adding table {} to external tables list"] @AT@ 12345 @LENGTH@ 7


UPD FieldDeclaration@@private, static, final, Class, [BEAN_CLASS=PointlessInterface.class] @TO@ private, static, final, Class<?>, [BEAN_CLASS=PointlessInterface.class] @AT@ 1718 @LENGTH@ 65
---INS ParameterizedType@@Class<?> @TO@ FieldDeclaration@@private, static, final, Class, [BEAN_CLASS=PointlessInterface.class] @AT@ 1739 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1739 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1745 @LENGTH@ 1
---DEL SimpleType@@Class @AT@ 1739 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:anonymous,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]ServerHttpSecurityTests,  @AT@ 8979 @LENGTH@ 417
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:anonymous,  @AT@ 8979 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:anonymous,  @AT@ 8986 @LENGTH@ 4
---INS SimpleName@@MethodName:anonymous @TO@ MethodDeclaration@@public, void, MethodName:anonymous,  @AT@ 8991 @LENGTH@ 9
---INS VariableDeclarationStatement@@SecurityWebFilterChain securityFilterChain=this.http.anonymous().and().build(); @TO@ MethodDeclaration@@public, void, MethodName:anonymous,  @AT@ 9006 @LENGTH@ 81
------INS SimpleType@@SecurityWebFilterChain @TO@ VariableDeclarationStatement@@SecurityWebFilterChain securityFilterChain=this.http.anonymous().and().build(); @AT@ 9006 @LENGTH@ 22
------INS VariableDeclarationFragment@@securityFilterChain=this.http.anonymous().and().build() @TO@ VariableDeclarationStatement@@SecurityWebFilterChain securityFilterChain=this.http.anonymous().and().build(); @AT@ 9029 @LENGTH@ 57
---------INS SimpleName@@securityFilterChain @TO@ VariableDeclarationFragment@@securityFilterChain=this.http.anonymous().and().build() @AT@ 9029 @LENGTH@ 19
---------INS MethodInvocation@@this.http.anonymous().and().build() @TO@ VariableDeclarationFragment@@securityFilterChain=this.http.anonymous().and().build() @AT@ 9051 @LENGTH@ 35
------------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@this.http.anonymous().and().build() @AT@ 9051 @LENGTH@ 27
------------INS MethodInvocation@@MethodName:anonymous:[] @TO@ MethodInvocation@@this.http.anonymous().and().build() @AT@ 9051 @LENGTH@ 21
------------INS FieldAccess@@this.http @TO@ MethodInvocation@@this.http.anonymous().and().build() @AT@ 9051 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.http @AT@ 9051 @LENGTH@ 4
---------------INS SimpleName@@http @TO@ FieldAccess@@this.http @AT@ 9056 @LENGTH@ 4
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@this.http.anonymous().and().build() @AT@ 9079 @LENGTH@ 7
---INS VariableDeclarationStatement@@WebTestClient client=WebTestClientBuilder.bindToControllerAndWebFilters(AnonymousAuthenticationWebFilterTests.HttpMeController.class,securityFilterChain).build(); @TO@ MethodDeclaration@@public, void, MethodName:anonymous,  @AT@ 9090 @LENGTH@ 169
------INS SimpleType@@WebTestClient @TO@ VariableDeclarationStatement@@WebTestClient client=WebTestClientBuilder.bindToControllerAndWebFilters(AnonymousAuthenticationWebFilterTests.HttpMeController.class,securityFilterChain).build(); @AT@ 9090 @LENGTH@ 13
------INS VariableDeclarationFragment@@client=WebTestClientBuilder.bindToControllerAndWebFilters(AnonymousAuthenticationWebFilterTests.HttpMeController.class,securityFilterChain).build() @TO@ VariableDeclarationStatement@@WebTestClient client=WebTestClientBuilder.bindToControllerAndWebFilters(AnonymousAuthenticationWebFilterTests.HttpMeController.class,securityFilterChain).build(); @AT@ 9104 @LENGTH@ 154
---------INS SimpleName@@client @TO@ VariableDeclarationFragment@@client=WebTestClientBuilder.bindToControllerAndWebFilters(AnonymousAuthenticationWebFilterTests.HttpMeController.class,securityFilterChain).build() @AT@ 9104 @LENGTH@ 6
---------INS MethodInvocation@@WebTestClientBuilder.bindToControllerAndWebFilters(AnonymousAuthenticationWebFilterTests.HttpMeController.class,securityFilterChain).build() @TO@ VariableDeclarationFragment@@client=WebTestClientBuilder.bindToControllerAndWebFilters(AnonymousAuthenticationWebFilterTests.HttpMeController.class,securityFilterChain).build() @AT@ 9113 @LENGTH@ 145
------------INS MethodInvocation@@MethodName:bindToControllerAndWebFilters:[AnonymousAuthenticationWebFilterTests.HttpMeController.class, securityFilterChain] @TO@ MethodInvocation@@WebTestClientBuilder.bindToControllerAndWebFilters(AnonymousAuthenticationWebFilterTests.HttpMeController.class,securityFilterChain).build() @AT@ 9113 @LENGTH@ 137
---------------INS TypeLiteral@@AnonymousAuthenticationWebFilterTests.HttpMeController.class @TO@ MethodInvocation@@MethodName:bindToControllerAndWebFilters:[AnonymousAuthenticationWebFilterTests.HttpMeController.class, securityFilterChain] @AT@ 9164 @LENGTH@ 60
---------------INS SimpleName@@securityFilterChain @TO@ MethodInvocation@@MethodName:bindToControllerAndWebFilters:[AnonymousAuthenticationWebFilterTests.HttpMeController.class, securityFilterChain] @AT@ 9230 @LENGTH@ 19
------------INS SimpleName@@Name:WebTestClientBuilder @TO@ MethodInvocation@@WebTestClientBuilder.bindToControllerAndWebFilters(AnonymousAuthenticationWebFilterTests.HttpMeController.class,securityFilterChain).build() @AT@ 9113 @LENGTH@ 20
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@WebTestClientBuilder.bindToControllerAndWebFilters(AnonymousAuthenticationWebFilterTests.HttpMeController.class,securityFilterChain).build() @AT@ 9251 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:client.get().uri("/me").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("anonymousUser") @TO@ MethodDeclaration@@public, void, MethodName:anonymous,  @AT@ 9263 @LENGTH@ 129
------INS MethodInvocation@@client.get().uri("/me").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("anonymousUser") @TO@ ExpressionStatement@@MethodInvocation:client.get().uri("/me").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("anonymousUser") @AT@ 9263 @LENGTH@ 128
---------INS MethodInvocation@@MethodName:expectBody:[String.class] @TO@ MethodInvocation@@client.get().uri("/me").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("anonymousUser") @AT@ 9263 @LENGTH@ 101
------------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:expectBody:[String.class] @AT@ 9351 @LENGTH@ 12
---------INS MethodInvocation@@MethodName:isOk:[] @TO@ MethodInvocation@@client.get().uri("/me").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("anonymousUser") @AT@ 9263 @LENGTH@ 71
---------INS MethodInvocation@@MethodName:expectStatus:[] @TO@ MethodInvocation@@client.get().uri("/me").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("anonymousUser") @AT@ 9263 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:exchange:[] @TO@ MethodInvocation@@client.get().uri("/me").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("anonymousUser") @AT@ 9263 @LENGTH@ 44
---------INS MethodInvocation@@MethodName:uri:["/me"] @TO@ MethodInvocation@@client.get().uri("/me").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("anonymousUser") @AT@ 9263 @LENGTH@ 28
------------INS StringLiteral@@"/me" @TO@ MethodInvocation@@MethodName:uri:["/me"] @AT@ 9285 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@client.get().uri("/me").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("anonymousUser") @AT@ 9263 @LENGTH@ 12
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.get().uri("/me").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("anonymousUser") @AT@ 9263 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:["anonymousUser"] @TO@ MethodInvocation@@client.get().uri("/me").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("anonymousUser") @AT@ 9365 @LENGTH@ 26
------------INS StringLiteral@@"anonymousUser" @TO@ SimpleName@@MethodName:isEqualTo:["anonymousUser"] @AT@ 9375 @LENGTH@ 15


UPD IfStatement@@if (logger.isWarnEnabled()) {  logger.warn("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage());} @TO@ if (logger.isErrorEnabled()) {  logger.error("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage(),e);} @AT@ 7528 @LENGTH@ 124
---UPD MethodInvocation@@logger.isWarnEnabled() @TO@ logger.isErrorEnabled() @AT@ 7532 @LENGTH@ 22
------UPD SimpleName@@MethodName:isWarnEnabled:[] @TO@ MethodName:isErrorEnabled:[] @AT@ 7539 @LENGTH@ 15
---UPD Block@@ThenBody:{  logger.warn("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage());} @TO@ ThenBody:{  logger.error("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage(),e);} @AT@ 7556 @LENGTH@ 96
------UPD ExpressionStatement@@MethodInvocation:logger.warn("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage()) @TO@ MethodInvocation:logger.error("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage(),e) @AT@ 7561 @LENGTH@ 87
---------UPD MethodInvocation@@logger.warn("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage()) @TO@ logger.error("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage(),e) @AT@ 7561 @LENGTH@ 86
------------UPD SimpleName@@MethodName:warn:["Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage()] @TO@ MethodName:error:["Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage(), e] @AT@ 7568 @LENGTH@ 79
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:warn:["Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage()] @AT@ 7650 @LENGTH@ 1


UPD IfStatement@@if (this == o) return true; @TO@ if (this == o) {  return true;} @AT@ 1243 @LENGTH@ 27
---UPD Block@@ThenBody:return true; @TO@ ThenBody:{  return true;} @AT@ 1258 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @TO@ MethodDeclaration@@public, void, MethodName:testComponentOptions, Exception,  @AT@ 1737 @LENGTH@ 79
---INS MethodInvocation@@when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @TO@ ExpressionStatement@@MethodInvocation:when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @AT@ 1737 @LENGTH@ 78
------INS MethodInvocation@@MethodName:when:[context.resolvePropertyPlaceholders(anyString())] @TO@ MethodInvocation@@when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @AT@ 1737 @LENGTH@ 54
---------INS MethodInvocation@@context.resolvePropertyPlaceholders(anyString()) @TO@ MethodInvocation@@MethodName:when:[context.resolvePropertyPlaceholders(anyString())] @AT@ 1742 @LENGTH@ 48
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.resolvePropertyPlaceholders(anyString()) @AT@ 1742 @LENGTH@ 7
------------INS SimpleName@@MethodName:resolvePropertyPlaceholders:[anyString()] @TO@ MethodInvocation@@context.resolvePropertyPlaceholders(anyString()) @AT@ 1750 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:anyString:[] @TO@ SimpleName@@MethodName:resolvePropertyPlaceholders:[anyString()] @AT@ 1778 @LENGTH@ 11
------INS SimpleName@@MethodName:then:[returnsFirstArg()] @TO@ MethodInvocation@@when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @AT@ 1792 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:returnsFirstArg:[] @TO@ SimpleName@@MethodName:then:[returnsFirstArg()] @AT@ 1797 @LENGTH@ 17


INS MethodDeclaration@@Schema, MethodName:getSchema,  @TO@ TypeDeclaration@@[@API(status=API.Status.STABLE,since="1.0"), public]NodeManager,  @AT@ 2723 @LENGTH@ 12
---INS SimpleType@@Schema @TO@ MethodDeclaration@@Schema, MethodName:getSchema,  @AT@ 2716 @LENGTH@ 6
---INS SimpleName@@MethodName:getSchema @TO@ MethodDeclaration@@Schema, MethodName:getSchema,  @AT@ 2723 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertTrue("Exchange should be transacted",exchange.isTransacted()) @TO@ MethodInvocation:assertFalse("Exchange should NO longer be transacted",exchange.isTransacted()) @AT@ 3524 @LENGTH@ 69
---UPD MethodInvocation@@assertTrue("Exchange should be transacted",exchange.isTransacted()) @TO@ assertFalse("Exchange should NO longer be transacted",exchange.isTransacted()) @AT@ 3524 @LENGTH@ 68
------UPD SimpleName@@MethodName:assertTrue:["Exchange should be transacted", exchange.isTransacted()] @TO@ MethodName:assertFalse:["Exchange should NO longer be transacted", exchange.isTransacted()] @AT@ 3524 @LENGTH@ 68
---------UPD StringLiteral@@"Exchange should be transacted" @TO@ "Exchange should NO longer be transacted" @AT@ 3535 @LENGTH@ 31


UPD ReturnStatement@@MethodInvocation:neo4jClient.newQuery(query).fetch().one() @TO@ MethodInvocation:neo4jClient.newQuery(query).fetch().all() @AT@ 2469 @LENGTH@ 49
---UPD MethodInvocation@@neo4jClient.newQuery(query).fetch().one() @TO@ neo4jClient.newQuery(query).fetch().all() @AT@ 2476 @LENGTH@ 41
------UPD SimpleName@@MethodName:one:[] @TO@ MethodName:all:[] @AT@ 2512 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:context.getRouteDefinition(routeId).adviceWith(context,new SpringRouteBuilder(){
  @Override public void configure() throws Exception {
    interceptSendToEndpoint("direct:(foo|bar)").to("mock:intercepted");
  }
}
) @TO@ MethodInvocation:RouteReifier.adviceWith(context.getRouteDefinitions().get(0),context,new AdviceWithRouteBuilder(){
  @Override public void configure() throws Exception {
    interceptSendToEndpoint("direct:(foo|bar)").to("mock:intercepted");
  }
}
) @AT@ 2009 @LENGTH@ 290
---UPD MethodInvocation@@context.getRouteDefinition(routeId).adviceWith(context,new SpringRouteBuilder(){
  @Override public void configure() throws Exception {
    interceptSendToEndpoint("direct:(foo|bar)").to("mock:intercepted");
  }
}
) @TO@ RouteReifier.adviceWith(context.getRouteDefinitions().get(0),context,new AdviceWithRouteBuilder(){
  @Override public void configure() throws Exception {
    interceptSendToEndpoint("direct:(foo|bar)").to("mock:intercepted");
  }
}
) @AT@ 2009 @LENGTH@ 289
------DEL MethodInvocation@@MethodName:getRouteDefinition:[routeId] @AT@ 2009 @LENGTH@ 35
---------DEL SimpleName@@routeId @AT@ 2036 @LENGTH@ 7
------UPD SimpleName@@Name:context @TO@ Name:RouteReifier @AT@ 2009 @LENGTH@ 7
------UPD SimpleName@@MethodName:adviceWith:[context, new SpringRouteBuilder(){
  @Override public void configure() throws Exception {
    interceptSendToEndpoint("direct:(foo|bar)").to("mock:intercepted");
  }
}
] @TO@ MethodName:adviceWith:[context.getRouteDefinitions().get(0), context, new AdviceWithRouteBuilder(){
  @Override public void configure() throws Exception {
    interceptSendToEndpoint("direct:(foo|bar)").to("mock:intercepted");
  }
}
] @AT@ 2045 @LENGTH@ 253
---------UPD ClassInstanceCreation@@SpringRouteBuilder[] @TO@ AdviceWithRouteBuilder[] @AT@ 2065 @LENGTH@ 232
------------UPD SimpleType@@SpringRouteBuilder @TO@ AdviceWithRouteBuilder @AT@ 2069 @LENGTH@ 18
---------INS MethodInvocation@@context.getRouteDefinitions().get(0) @TO@ SimpleName@@MethodName:adviceWith:[context, new SpringRouteBuilder(){
  @Override public void configure() throws Exception {
    interceptSendToEndpoint("direct:(foo|bar)").to("mock:intercepted");
  }
}
] @AT@ 2132 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getRouteDefinitions:[] @TO@ MethodInvocation@@context.getRouteDefinitions().get(0) @AT@ 2132 @LENGTH@ 29
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRouteDefinitions().get(0) @AT@ 2132 @LENGTH@ 7
------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@context.getRouteDefinitions().get(0) @AT@ 2162 @LENGTH@ 6
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 2166 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenConverterIsNullThenExceptionIsThrown,  @TO@ TypeDeclaration@@[public]NimbusOAuth2TokenIntrospectionClientTests,  @AT@ 11651 @LENGTH@ 430
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenConverterIsNullThenExceptionIsThrown,  @AT@ 11651 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenConverterIsNullThenExceptionIsThrown,  @AT@ 11658 @LENGTH@ 4
---INS SimpleName@@MethodName:setRequestEntityConverterWhenConverterIsNullThenExceptionIsThrown @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenConverterIsNullThenExceptionIsThrown,  @AT@ 11663 @LENGTH@ 65
---INS VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenConverterIsNullThenExceptionIsThrown,  @AT@ 11735 @LENGTH@ 59
------INS SimpleType@@RestOperations @TO@ VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @AT@ 11735 @LENGTH@ 14
------INS VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @TO@ VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @AT@ 11750 @LENGTH@ 43
---------INS SimpleName@@restOperations @TO@ VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @AT@ 11750 @LENGTH@ 14
---------INS MethodInvocation@@mock(RestOperations.class) @TO@ VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @AT@ 11767 @LENGTH@ 26
------------INS SimpleName@@MethodName:mock:[RestOperations.class] @TO@ MethodInvocation@@mock(RestOperations.class) @AT@ 11767 @LENGTH@ 26
---------------INS TypeLiteral@@RestOperations.class @TO@ SimpleName@@MethodName:mock:[RestOperations.class] @AT@ 11772 @LENGTH@ 20
---INS VariableDeclarationStatement@@NimbusOAuth2TokenIntrospectionClient introspectionClient=new NimbusOAuth2TokenIntrospectionClient(INTROSPECTION_URL,restOperations); @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenConverterIsNullThenExceptionIsThrown,  @AT@ 11798 @LENGTH@ 143
------INS SimpleType@@NimbusOAuth2TokenIntrospectionClient @TO@ VariableDeclarationStatement@@NimbusOAuth2TokenIntrospectionClient introspectionClient=new NimbusOAuth2TokenIntrospectionClient(INTROSPECTION_URL,restOperations); @AT@ 11798 @LENGTH@ 36
------INS VariableDeclarationFragment@@introspectionClient=new NimbusOAuth2TokenIntrospectionClient(INTROSPECTION_URL,restOperations) @TO@ VariableDeclarationStatement@@NimbusOAuth2TokenIntrospectionClient introspectionClient=new NimbusOAuth2TokenIntrospectionClient(INTROSPECTION_URL,restOperations); @AT@ 11835 @LENGTH@ 105
---------INS SimpleName@@introspectionClient @TO@ VariableDeclarationFragment@@introspectionClient=new NimbusOAuth2TokenIntrospectionClient(INTROSPECTION_URL,restOperations) @AT@ 11835 @LENGTH@ 19
---------INS ClassInstanceCreation@@NimbusOAuth2TokenIntrospectionClient[INTROSPECTION_URL, restOperations] @TO@ VariableDeclarationFragment@@introspectionClient=new NimbusOAuth2TokenIntrospectionClient(INTROSPECTION_URL,restOperations) @AT@ 11857 @LENGTH@ 83
------------INS New@@new @TO@ ClassInstanceCreation@@NimbusOAuth2TokenIntrospectionClient[INTROSPECTION_URL, restOperations] @AT@ 11857 @LENGTH@ 3
------------INS SimpleType@@NimbusOAuth2TokenIntrospectionClient @TO@ ClassInstanceCreation@@NimbusOAuth2TokenIntrospectionClient[INTROSPECTION_URL, restOperations] @AT@ 11861 @LENGTH@ 36
------------INS SimpleName@@INTROSPECTION_URL @TO@ ClassInstanceCreation@@NimbusOAuth2TokenIntrospectionClient[INTROSPECTION_URL, restOperations] @AT@ 11903 @LENGTH@ 17
------------INS SimpleName@@restOperations @TO@ ClassInstanceCreation@@NimbusOAuth2TokenIntrospectionClient[INTROSPECTION_URL, restOperations] @AT@ 11922 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> introspectionClient.setRequestEntityConverter(null)) @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenConverterIsNullThenExceptionIsThrown,  @AT@ 11945 @LENGTH@ 133
------INS MethodInvocation@@assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> introspectionClient.setRequestEntityConverter(null)) @TO@ ExpressionStatement@@MethodInvocation:assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> introspectionClient.setRequestEntityConverter(null)) @AT@ 11945 @LENGTH@ 132
---------INS MethodInvocation@@MethodName:assertThatExceptionOfType:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> introspectionClient.setRequestEntityConverter(null)) @AT@ 11945 @LENGTH@ 57
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:assertThatExceptionOfType:[IllegalArgumentException.class] @AT@ 11971 @LENGTH@ 30
---------INS SimpleName@@MethodName:isThrownBy:[() -> introspectionClient.setRequestEntityConverter(null)] @TO@ MethodInvocation@@assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> introspectionClient.setRequestEntityConverter(null)) @AT@ 12008 @LENGTH@ 69
------------INS LambdaExpression@@() -> introspectionClient.setRequestEntityConverter(null) @TO@ SimpleName@@MethodName:isThrownBy:[() -> introspectionClient.setRequestEntityConverter(null)] @AT@ 12019 @LENGTH@ 57
---------------INS MethodInvocation@@introspectionClient.setRequestEntityConverter(null) @TO@ LambdaExpression@@() -> introspectionClient.setRequestEntityConverter(null) @AT@ 12025 @LENGTH@ 51
------------------INS SimpleName@@Name:introspectionClient @TO@ MethodInvocation@@introspectionClient.setRequestEntityConverter(null) @AT@ 12025 @LENGTH@ 19
------------------INS SimpleName@@MethodName:setRequestEntityConverter:[null] @TO@ MethodInvocation@@introspectionClient.setRequestEntityConverter(null) @AT@ 12045 @LENGTH@ 31
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setRequestEntityConverter:[null] @AT@ 12071 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException("Managed server was not started within 30s") @TO@ ClassInstanceCreation:new RuntimeException("Managed server was not started within " + startupTimeout + " seconds.") @AT@ 9060 @LENGTH@ 72
---UPD ClassInstanceCreation@@RuntimeException["Managed server was not started within 30s"] @TO@ RuntimeException["Managed server was not started within " + startupTimeout + " seconds."] @AT@ 9066 @LENGTH@ 65
------INS InfixExpression@@"Managed server was not started within " + startupTimeout + " seconds." @TO@ ClassInstanceCreation@@RuntimeException["Managed server was not started within 30s"] @AT@ 9087 @LENGTH@ 71
---------INS StringLiteral@@"Managed server was not started within " @TO@ InfixExpression@@"Managed server was not started within " + startupTimeout + " seconds." @AT@ 9087 @LENGTH@ 40
---------INS Operator@@+ @TO@ InfixExpression@@"Managed server was not started within " + startupTimeout + " seconds." @AT@ 9127 @LENGTH@ 1
---------INS SimpleName@@startupTimeout @TO@ InfixExpression@@"Managed server was not started within " + startupTimeout + " seconds." @AT@ 9130 @LENGTH@ 14
---------INS StringLiteral@@" seconds." @TO@ InfixExpression@@"Managed server was not started within " + startupTimeout + " seconds." @AT@ 9147 @LENGTH@ 11
------DEL StringLiteral@@"Managed server was not started within 30s" @AT@ 9087 @LENGTH@ 43


UPD MethodDeclaration@@protected, void, MethodName:doGet, HttpServletRequest request, HttpServletResponse response, ServletException, IOException,  @TO@ protected, void, MethodName:doGet, HttpServletRequest request, HttpServletResponse response, IOException,  @AT@ 424 @LENGTH@ 493
---DEL SimpleType@@ServletException @AT@ 522 @LENGTH@ 16


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 4330 @LENGTH@ 64
---DEL Modifier@@public @AT@ 4330 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 4337 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 4345 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 4375 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 4382 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertTrue("Should use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @TO@ MethodInvocation:assertFalse("Should not use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @AT@ 2140 @LENGTH@ 90
---UPD MethodInvocation@@assertTrue("Should use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @TO@ assertFalse("Should not use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @AT@ 2140 @LENGTH@ 89
------UPD SimpleName@@MethodName:assertTrue:["Should use same threads", beforeThreadName.equalsIgnoreCase(afterThreadName)] @TO@ MethodName:assertFalse:["Should not use same threads", beforeThreadName.equalsIgnoreCase(afterThreadName)] @AT@ 2140 @LENGTH@ 89
---------UPD StringLiteral@@"Should use same threads" @TO@ "Should not use same threads" @AT@ 2151 @LENGTH@ 25


UPD IfStatement@@if (genericUDAFEvaluator instanceof Serializable || genericUDAFEvaluator instanceof Externalizable) {  this.genericUDAFWritableEvaluator=genericUDAFEvaluator;} else {  this.genericUDAFEvaluatorClassName=genericUDAFEvaluator.getClass().getName();} @TO@ if (genericUDAFEvaluator instanceof Serializable) {  this.genericUDAFWritableEvaluator=genericUDAFEvaluator;} else {  this.genericUDAFEvaluatorClassName=genericUDAFEvaluator.getClass().getName();} @AT@ 2525 @LENGTH@ 278
---INS InstanceofExpression@@genericUDAFEvaluator instanceof Serializable @TO@ IfStatement@@if (genericUDAFEvaluator instanceof Serializable || genericUDAFEvaluator instanceof Externalizable) {  this.genericUDAFWritableEvaluator=genericUDAFEvaluator;} else {  this.genericUDAFEvaluatorClassName=genericUDAFEvaluator.getClass().getName();} @AT@ 2402 @LENGTH@ 44
------MOV SimpleName@@genericUDAFEvaluator @TO@ InstanceofExpression@@genericUDAFEvaluator instanceof Serializable @AT@ 2529 @LENGTH@ 20
------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@genericUDAFEvaluator instanceof Serializable @AT@ 2550 @LENGTH@ 10
------MOV SimpleType@@Serializable @TO@ InstanceofExpression@@genericUDAFEvaluator instanceof Serializable @AT@ 2561 @LENGTH@ 12
---DEL InfixExpression@@genericUDAFEvaluator instanceof Serializable || genericUDAFEvaluator instanceof Externalizable @AT@ 2529 @LENGTH@ 102
------DEL InstanceofExpression@@genericUDAFEvaluator instanceof Serializable @AT@ 2529 @LENGTH@ 44
------DEL Operator@@|| @AT@ 2573 @LENGTH@ 2
------DEL InstanceofExpression@@genericUDAFEvaluator instanceof Externalizable @AT@ 2585 @LENGTH@ 46
---------DEL SimpleName@@genericUDAFEvaluator @AT@ 2585 @LENGTH@ 20
---------DEL Instanceof@@instanceof @AT@ 2606 @LENGTH@ 10
---------DEL SimpleType@@Externalizable @AT@ 2617 @LENGTH@ 14


UPD MethodDeclaration@@private, voidMethodName:PulsarProducer, PulsarEndpoint pulsarEndpoint,  @TO@ public, voidMethodName:PulsarProducer, PulsarEndpoint pulsarEndpoint,  @AT@ 1602 @LENGTH@ 139
---UPD Modifier@@private @TO@ public @AT@ 1602 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:request.setServerName("example.com") @TO@ MethodInvocation:request.setServerName("localhost") @AT@ 8953 @LENGTH@ 37
---UPD MethodInvocation@@request.setServerName("example.com") @TO@ request.setServerName("localhost") @AT@ 8953 @LENGTH@ 36
------UPD SimpleName@@MethodName:setServerName:["example.com"] @TO@ MethodName:setServerName:["localhost"] @AT@ 8961 @LENGTH@ 28
---------UPD StringLiteral@@"example.com" @TO@ "localhost" @AT@ 8975 @LENGTH@ 13


INS MethodDeclaration@@public, CompletableFuture<Exchange>, MethodName:processAsync, Exchange exchange,  @TO@ TypeDeclaration@@[private, final]EchoProducer, DefaultProducer[AsyncProcessor] @AT@ 2783 @LENGTH@ 126
---INS Modifier@@public @TO@ MethodDeclaration@@public, CompletableFuture<Exchange>, MethodName:processAsync, Exchange exchange,  @AT@ 2783 @LENGTH@ 6
---INS ParameterizedType@@CompletableFuture<Exchange> @TO@ MethodDeclaration@@public, CompletableFuture<Exchange>, MethodName:processAsync, Exchange exchange,  @AT@ 2790 @LENGTH@ 27
------INS SimpleType@@CompletableFuture @TO@ ParameterizedType@@CompletableFuture<Exchange> @AT@ 2790 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ ParameterizedType@@CompletableFuture<Exchange> @AT@ 2808 @LENGTH@ 8
---INS SimpleName@@MethodName:processAsync @TO@ MethodDeclaration@@public, CompletableFuture<Exchange>, MethodName:processAsync, Exchange exchange,  @AT@ 2818 @LENGTH@ 12
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, CompletableFuture<Exchange>, MethodName:processAsync, Exchange exchange,  @AT@ 2831 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2831 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2840 @LENGTH@ 8
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, CompletableFuture<Exchange>, MethodName:processAsync, Exchange exchange,  @AT@ 2893 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2900 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Event#{} was a CREATE_TABLE_EVENT with no table listed") @TO@ MethodInvocation:LOG.debug("Event#{} was a CREATE_TABLE_EVENT with no table listed",fromEventId()) @AT@ 1955 @LENGTH@ 68
---UPD MethodInvocation@@LOG.debug("Event#{} was a CREATE_TABLE_EVENT with no table listed") @TO@ LOG.debug("Event#{} was a CREATE_TABLE_EVENT with no table listed",fromEventId()) @AT@ 1955 @LENGTH@ 67
------UPD SimpleName@@MethodName:debug:["Event#{} was a CREATE_TABLE_EVENT with no table listed"] @TO@ MethodName:debug:["Event#{} was a CREATE_TABLE_EVENT with no table listed", fromEventId()] @AT@ 1959 @LENGTH@ 63
---------INS MethodInvocation@@MethodName:fromEventId:[] @TO@ SimpleName@@MethodName:debug:["Event#{} was a CREATE_TABLE_EVENT with no table listed"] @AT@ 2023 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:Assert.state(getConnectionFactory() == null,"Property 'connectionFactory' is required") @TO@ MethodInvocation:Assert.state(getConnectionFactory() != null,"Property 'connectionFactory' is required") @AT@ 5257 @LENGTH@ 89
---UPD MethodInvocation@@Assert.state(getConnectionFactory() == null,"Property 'connectionFactory' is required") @TO@ Assert.state(getConnectionFactory() != null,"Property 'connectionFactory' is required") @AT@ 5257 @LENGTH@ 88
------UPD SimpleName@@MethodName:state:[getConnectionFactory() == null, "Property 'connectionFactory' is required"] @TO@ MethodName:state:[getConnectionFactory() != null, "Property 'connectionFactory' is required"] @AT@ 5264 @LENGTH@ 81
---------UPD InfixExpression@@getConnectionFactory() == null @TO@ getConnectionFactory() != null @AT@ 5270 @LENGTH@ 30
------------UPD Operator@@== @TO@ != @AT@ 5292 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:testInsertJsonInputStreamWithSpaces, Exception,  @TO@ TypeDeclaration@@[public]MongoDbConversionsTest, AbstractMongoDbTest @AT@ 3406 @LENGTH@ 469
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testInsertJsonInputStreamWithSpaces, Exception,  @AT@ 3406 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testInsertJsonInputStreamWithSpaces, Exception,  @AT@ 3413 @LENGTH@ 4
---INS SimpleName@@MethodName:testInsertJsonInputStreamWithSpaces @TO@ MethodDeclaration@@public, void, MethodName:testInsertJsonInputStreamWithSpaces, Exception,  @AT@ 3418 @LENGTH@ 35
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testInsertJsonInputStreamWithSpaces, Exception,  @AT@ 3463 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(0,testCollection.count()) @TO@ MethodDeclaration@@public, void, MethodName:testInsertJsonInputStreamWithSpaces, Exception,  @AT@ 3483 @LENGTH@ 40
------INS MethodInvocation@@assertEquals(0,testCollection.count()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(0,testCollection.count()) @AT@ 3483 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertEquals:[0, testCollection.count()] @TO@ MethodInvocation@@assertEquals(0,testCollection.count()) @AT@ 3483 @LENGTH@ 39
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[0, testCollection.count()] @AT@ 3496 @LENGTH@ 1
------------INS MethodInvocation@@testCollection.count() @TO@ SimpleName@@MethodName:assertEquals:[0, testCollection.count()] @AT@ 3499 @LENGTH@ 22
---------------INS SimpleName@@Name:testCollection @TO@ MethodInvocation@@testCollection.count() @AT@ 3499 @LENGTH@ 14
---------------INS SimpleName@@MethodName:count:[] @TO@ MethodInvocation@@testCollection.count() @AT@ 3514 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:template.requestBody("direct:insertJsonString",IOConverter.toInputStream("    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n",null)) @TO@ MethodDeclaration@@public, void, MethodName:testInsertJsonInputStreamWithSpaces, Exception,  @AT@ 3532 @LENGTH@ 158
------INS MethodInvocation@@template.requestBody("direct:insertJsonString",IOConverter.toInputStream("    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n",null)) @TO@ ExpressionStatement@@MethodInvocation:template.requestBody("direct:insertJsonString",IOConverter.toInputStream("    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n",null)) @AT@ 3532 @LENGTH@ 157
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBody("direct:insertJsonString",IOConverter.toInputStream("    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n",null)) @AT@ 3532 @LENGTH@ 8
---------INS SimpleName@@MethodName:requestBody:["direct:insertJsonString", IOConverter.toInputStream("    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n",null)] @TO@ MethodInvocation@@template.requestBody("direct:insertJsonString",IOConverter.toInputStream("    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n",null)) @AT@ 3541 @LENGTH@ 148
------------INS StringLiteral@@"direct:insertJsonString" @TO@ SimpleName@@MethodName:requestBody:["direct:insertJsonString", IOConverter.toInputStream("    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n",null)] @AT@ 3553 @LENGTH@ 25
------------INS MethodInvocation@@IOConverter.toInputStream("    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n",null) @TO@ SimpleName@@MethodName:requestBody:["direct:insertJsonString", IOConverter.toInputStream("    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n",null)] @AT@ 3580 @LENGTH@ 108
---------------INS SimpleName@@Name:IOConverter @TO@ MethodInvocation@@IOConverter.toInputStream("    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n",null) @AT@ 3580 @LENGTH@ 11
---------------INS SimpleName@@MethodName:toInputStream:["    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n", null] @TO@ MethodInvocation@@IOConverter.toInputStream("    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n",null) @AT@ 3592 @LENGTH@ 96
------------------INS StringLiteral@@"    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n" @TO@ SimpleName@@MethodName:toInputStream:["    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n", null] @AT@ 3606 @LENGTH@ 75
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toInputStream:["    {\"test\": [\"test\"], \"_id\": \"testInsertJsonStringWithSpaces\"}\n", null] @AT@ 3683 @LENGTH@ 4
---INS VariableDeclarationStatement@@Document b=testCollection.find(eq(MONGO_ID,"testInsertJsonStringWithSpaces")).first(); @TO@ MethodDeclaration@@public, void, MethodName:testInsertJsonInputStreamWithSpaces, Exception,  @AT@ 3699 @LENGTH@ 89
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document b=testCollection.find(eq(MONGO_ID,"testInsertJsonStringWithSpaces")).first(); @AT@ 3699 @LENGTH@ 8
------INS VariableDeclarationFragment@@b=testCollection.find(eq(MONGO_ID,"testInsertJsonStringWithSpaces")).first() @TO@ VariableDeclarationStatement@@Document b=testCollection.find(eq(MONGO_ID,"testInsertJsonStringWithSpaces")).first(); @AT@ 3708 @LENGTH@ 79
---------INS SimpleName@@b @TO@ VariableDeclarationFragment@@b=testCollection.find(eq(MONGO_ID,"testInsertJsonStringWithSpaces")).first() @AT@ 3708 @LENGTH@ 1
---------INS MethodInvocation@@testCollection.find(eq(MONGO_ID,"testInsertJsonStringWithSpaces")).first() @TO@ VariableDeclarationFragment@@b=testCollection.find(eq(MONGO_ID,"testInsertJsonStringWithSpaces")).first() @AT@ 3712 @LENGTH@ 75
------------INS MethodInvocation@@MethodName:find:[eq(MONGO_ID,"testInsertJsonStringWithSpaces")] @TO@ MethodInvocation@@testCollection.find(eq(MONGO_ID,"testInsertJsonStringWithSpaces")).first() @AT@ 3712 @LENGTH@ 67
---------------INS MethodInvocation@@eq(MONGO_ID,"testInsertJsonStringWithSpaces") @TO@ MethodInvocation@@MethodName:find:[eq(MONGO_ID,"testInsertJsonStringWithSpaces")] @AT@ 3732 @LENGTH@ 46
------------------INS SimpleName@@MethodName:eq:[MONGO_ID, "testInsertJsonStringWithSpaces"] @TO@ MethodInvocation@@eq(MONGO_ID,"testInsertJsonStringWithSpaces") @AT@ 3732 @LENGTH@ 46
---------------------INS SimpleName@@MONGO_ID @TO@ SimpleName@@MethodName:eq:[MONGO_ID, "testInsertJsonStringWithSpaces"] @AT@ 3735 @LENGTH@ 8
---------------------INS StringLiteral@@"testInsertJsonStringWithSpaces" @TO@ SimpleName@@MethodName:eq:[MONGO_ID, "testInsertJsonStringWithSpaces"] @AT@ 3745 @LENGTH@ 32
------------INS SimpleName@@Name:testCollection @TO@ MethodInvocation@@testCollection.find(eq(MONGO_ID,"testInsertJsonStringWithSpaces")).first() @AT@ 3712 @LENGTH@ 14
------------INS SimpleName@@MethodName:first:[] @TO@ MethodInvocation@@testCollection.find(eq(MONGO_ID,"testInsertJsonStringWithSpaces")).first() @AT@ 3780 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertNotNull("No record with 'testInsertJsonStringWithSpaces' _id",b) @TO@ MethodDeclaration@@public, void, MethodName:testInsertJsonInputStreamWithSpaces, Exception,  @AT@ 3797 @LENGTH@ 72
------INS MethodInvocation@@assertNotNull("No record with 'testInsertJsonStringWithSpaces' _id",b) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull("No record with 'testInsertJsonStringWithSpaces' _id",b) @AT@ 3797 @LENGTH@ 71
---------INS SimpleName@@MethodName:assertNotNull:["No record with 'testInsertJsonStringWithSpaces' _id", b] @TO@ MethodInvocation@@assertNotNull("No record with 'testInsertJsonStringWithSpaces' _id",b) @AT@ 3797 @LENGTH@ 71
------------INS StringLiteral@@"No record with 'testInsertJsonStringWithSpaces' _id" @TO@ SimpleName@@MethodName:assertNotNull:["No record with 'testInsertJsonStringWithSpaces' _id", b] @AT@ 3811 @LENGTH@ 53
------------INS SimpleName@@b @TO@ SimpleName@@MethodName:assertNotNull:["No record with 'testInsertJsonStringWithSpaces' _id", b] @AT@ 3866 @LENGTH@ 1


UPD MethodDeclaration@@protected, Expression, MethodName:createInstance, Exception,  @TO@ protected, Expression, MethodName:createInstance,  @AT@ 1902 @LENGTH@ 120
---DEL SimpleType@@Exception @AT@ 1947 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:indexOperationsMapFieldNameCorrectly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]DefaultIndexOperationsUnitTests,  @AT@ 2575 @LENGTH@ 207
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:indexOperationsMapFieldNameCorrectly,  @AT@ 2575 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:indexOperationsMapFieldNameCorrectly,  @AT@ 2582 @LENGTH@ 4
---INS SimpleName@@MethodName:indexOperationsMapFieldNameCorrectly @TO@ MethodDeclaration@@public, void, MethodName:indexOperationsMapFieldNameCorrectly,  @AT@ 2587 @LENGTH@ 36
---INS ExpressionStatement@@MethodInvocation:indexOpsFor(Jedi.class).ensureIndex(new Index("name",Direction.DESC)) @TO@ MethodDeclaration@@public, void, MethodName:indexOperationsMapFieldNameCorrectly,  @AT@ 2631 @LENGTH@ 71
------INS MethodInvocation@@indexOpsFor(Jedi.class).ensureIndex(new Index("name",Direction.DESC)) @TO@ ExpressionStatement@@MethodInvocation:indexOpsFor(Jedi.class).ensureIndex(new Index("name",Direction.DESC)) @AT@ 2631 @LENGTH@ 70
---------INS MethodInvocation@@MethodName:indexOpsFor:[Jedi.class] @TO@ MethodInvocation@@indexOpsFor(Jedi.class).ensureIndex(new Index("name",Direction.DESC)) @AT@ 2631 @LENGTH@ 23
------------INS TypeLiteral@@Jedi.class @TO@ MethodInvocation@@MethodName:indexOpsFor:[Jedi.class] @AT@ 2643 @LENGTH@ 10
---------INS SimpleName@@MethodName:ensureIndex:[new Index("name",Direction.DESC)] @TO@ MethodInvocation@@indexOpsFor(Jedi.class).ensureIndex(new Index("name",Direction.DESC)) @AT@ 2655 @LENGTH@ 46
------------INS ClassInstanceCreation@@Index["name", Direction.DESC] @TO@ SimpleName@@MethodName:ensureIndex:[new Index("name",Direction.DESC)] @AT@ 2667 @LENGTH@ 33
---------------INS New@@new @TO@ ClassInstanceCreation@@Index["name", Direction.DESC] @AT@ 2667 @LENGTH@ 3
---------------INS SimpleType@@Index @TO@ ClassInstanceCreation@@Index["name", Direction.DESC] @AT@ 2671 @LENGTH@ 5
---------------INS StringLiteral@@"name" @TO@ ClassInstanceCreation@@Index["name", Direction.DESC] @AT@ 2677 @LENGTH@ 6
---------------INS QualifiedName@@Direction.DESC @TO@ ClassInstanceCreation@@Index["name", Direction.DESC] @AT@ 2685 @LENGTH@ 14
------------------INS SimpleName@@Direction @TO@ QualifiedName@@Direction.DESC @AT@ 2685 @LENGTH@ 9
------------------INS SimpleName@@DESC @TO@ QualifiedName@@Direction.DESC @AT@ 2695 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:verify(collection).createIndex(eq(new Document("firstname",-1)),any()) @TO@ MethodDeclaration@@public, void, MethodName:indexOperationsMapFieldNameCorrectly,  @AT@ 2706 @LENGTH@ 73
------INS MethodInvocation@@verify(collection).createIndex(eq(new Document("firstname",-1)),any()) @TO@ ExpressionStatement@@MethodInvocation:verify(collection).createIndex(eq(new Document("firstname",-1)),any()) @AT@ 2706 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:verify:[collection] @TO@ MethodInvocation@@verify(collection).createIndex(eq(new Document("firstname",-1)),any()) @AT@ 2706 @LENGTH@ 18
------------INS SimpleName@@collection @TO@ MethodInvocation@@MethodName:verify:[collection] @AT@ 2713 @LENGTH@ 10
---------INS SimpleName@@MethodName:createIndex:[eq(new Document("firstname",-1)), any()] @TO@ MethodInvocation@@verify(collection).createIndex(eq(new Document("firstname",-1)),any()) @AT@ 2725 @LENGTH@ 53
------------INS MethodInvocation@@eq(new Document("firstname",-1)) @TO@ SimpleName@@MethodName:createIndex:[eq(new Document("firstname",-1)), any()] @AT@ 2737 @LENGTH@ 33
---------------INS SimpleName@@MethodName:eq:[new Document("firstname",-1)] @TO@ MethodInvocation@@eq(new Document("firstname",-1)) @AT@ 2737 @LENGTH@ 33
------------------INS ClassInstanceCreation@@Document["firstname", -1] @TO@ SimpleName@@MethodName:eq:[new Document("firstname",-1)] @AT@ 2740 @LENGTH@ 29
---------------------INS New@@new @TO@ ClassInstanceCreation@@Document["firstname", -1] @AT@ 2740 @LENGTH@ 3
---------------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document["firstname", -1] @AT@ 2744 @LENGTH@ 8
---------------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@Document["firstname", -1] @AT@ 2753 @LENGTH@ 11
---------------------INS PrefixExpression@@-1 @TO@ ClassInstanceCreation@@Document["firstname", -1] @AT@ 2766 @LENGTH@ 2
------------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 2766 @LENGTH@ 1
------------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 2767 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:createIndex:[eq(new Document("firstname",-1)), any()] @AT@ 2772 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:CamelSpringBootApplicationController, final ApplicationContext applicationContext, final CamelContext camelContext,  @TO@ public, voidMethodName:CamelSpringBootApplicationController, final ApplicationContext applicationContext, final CamelContext context,  @AT@ 1525 @LENGTH@ 935
---UPD SingleVariableDeclaration@@final CamelContext camelContext @TO@ final CamelContext context @AT@ 1614 @LENGTH@ 31
------UPD SimpleName@@camelContext @TO@ context @AT@ 1633 @LENGTH@ 12
---UPD ExpressionStatement@@Assignment:this.main=new Main(){
  @Override protected ProducerTemplate findOrCreateCamelTemplate(){
    return applicationContext.getBean(ProducerTemplate.class);
  }
  @Override protected CamelContext createCamelContext(){
    return camelContext;
  }
  @Override protected void doStop() throws Exception {
    LOG.debug("Controller is shutting down CamelContext");
    try {
      super.doStop();
    }
  finally {
      completed.set(true);
      CamelSpringBootApplicationController.this.latch.countDown();
    }
  }
}
 @TO@ Assignment:this.main=new Main(){
{
    this.camelContext=context;
  }
  @Override protected ProducerTemplate findOrCreateCamelTemplate(){
    return applicationContext.getBean(ProducerTemplate.class);
  }
  @Override protected CamelContext createCamelContext(){
    return context;
  }
  @Override protected void doStop() throws Exception {
    LOG.debug("Controller is shutting down CamelContext");
    try {
      super.doStop();
    }
  finally {
      completed.set(true);
      CamelSpringBootApplicationController.this.latch.countDown();
    }
  }
}
 @AT@ 1657 @LENGTH@ 797
------UPD Assignment@@this.main=new Main(){
  @Override protected ProducerTemplate findOrCreateCamelTemplate(){
    return applicationContext.getBean(ProducerTemplate.class);
  }
  @Override protected CamelContext createCamelContext(){
    return camelContext;
  }
  @Override protected void doStop() throws Exception {
    LOG.debug("Controller is shutting down CamelContext");
    try {
      super.doStop();
    }
  finally {
      completed.set(true);
      CamelSpringBootApplicationController.this.latch.countDown();
    }
  }
}
 @TO@ this.main=new Main(){
{
    this.camelContext=context;
  }
  @Override protected ProducerTemplate findOrCreateCamelTemplate(){
    return applicationContext.getBean(ProducerTemplate.class);
  }
  @Override protected CamelContext createCamelContext(){
    return context;
  }
  @Override protected void doStop() throws Exception {
    LOG.debug("Controller is shutting down CamelContext");
    try {
      super.doStop();
    }
  finally {
      completed.set(true);
      CamelSpringBootApplicationController.this.latch.countDown();
    }
  }
}
 @AT@ 1657 @LENGTH@ 796


MOV MethodDeclaration@@private, static, void, MethodName:toResult, Source source, Result result, TransformerException,  @TO@ TypeDeclaration@@[public]CachedCxfPayload, CxfPayload<T>[StreamCache] @AT@ 5070 @LENGTH@ 1089


UPD Block@@ThenBody:{  boolean done=false;  String id=null;  while (!done) {    id=route.idOrCreate(context.adapt(ExtendedCamelContext.class).getNodeIdFactory());    done=!customIds.contains(id);  }  route.setId(id);  ProcessorDefinitionHelper.addPropertyPlaceholdersChangeRevertAction(new Runnable(){    @Override public void run(){      route.setId(null);      route.setCustomId(false);    }  });  route.setCustomId(false);  customIds.add(route.getId());} @TO@ ThenBody:{  boolean done=false;  String id=null;  int attempts=0;  while (!done && attempts < 1000) {    attempts++;    id=route.idOrCreate(context.adapt(ExtendedCamelContext.class).getNodeIdFactory());    if (customIds.contains(id)) {      route.setId(null);    } else {      done=true;    }  }  if (!done) {    throw new IllegalArgumentException("Cannot auto assign id to route: " + route);  }  route.setId(id);  ProcessorDefinitionHelper.addPropertyPlaceholdersChangeRevertAction(new Runnable(){    @Override public void run(){      route.setId(null);      route.setCustomId(false);    }  });  route.setCustomId(false);  customIds.add(route.getId());} @AT@ 6741 @LENGTH@ 803
---UPD WhileStatement@@while (!done) {  id=route.idOrCreate(context.adapt(ExtendedCamelContext.class).getNodeIdFactory());  done=!customIds.contains(id);} @TO@ while (!done && attempts < 1000) {  attempts++;  id=route.idOrCreate(context.adapt(ExtendedCamelContext.class).getNodeIdFactory());  if (customIds.contains(id)) {    route.setId(null);  } else {    done=true;  }} @AT@ 6913 @LENGTH@ 190
------DEL PrefixExpression@@!done @AT@ 6920 @LENGTH@ 5
------UPD Block@@WhileBody:{  id=route.idOrCreate(context.adapt(ExtendedCamelContext.class).getNodeIdFactory());  done=!customIds.contains(id);} @TO@ WhileBody:{  attempts++;  id=route.idOrCreate(context.adapt(ExtendedCamelContext.class).getNodeIdFactory());  if (customIds.contains(id)) {    route.setId(null);  } else {    done=true;  }} @AT@ 6927 @LENGTH@ 176
---------INS ExpressionStatement@@PostfixExpression:attempts++ @TO@ Block@@WhileBody:{  id=route.idOrCreate(context.adapt(ExtendedCamelContext.class).getNodeIdFactory());  done=!customIds.contains(id);} @AT@ 7002 @LENGTH@ 11
------------INS PostfixExpression@@attempts++ @TO@ ExpressionStatement@@PostfixExpression:attempts++ @AT@ 7002 @LENGTH@ 10
---------------INS SimpleName@@attempts @TO@ PostfixExpression@@attempts++ @AT@ 7002 @LENGTH@ 8
---------------INS Operator@@++ @TO@ PostfixExpression@@attempts++ @AT@ 7011 @LENGTH@ 2
---------UPD ExpressionStatement@@Assignment:done=!customIds.contains(id) @TO@ Assignment:done=true @AT@ 7054 @LENGTH@ 31
---------INS IfStatement@@if (customIds.contains(id)) {  route.setId(null);} else {  done=true;} @TO@ Block@@WhileBody:{  id=route.idOrCreate(context.adapt(ExtendedCamelContext.class).getNodeIdFactory());  done=!customIds.contains(id);} @AT@ 7139 @LENGTH@ 210
------------MOV MethodInvocation@@customIds.contains(id) @TO@ IfStatement@@if (customIds.contains(id)) {  route.setId(null);} else {  done=true;} @AT@ 7062 @LENGTH@ 22
------------INS Block@@ThenBody:{  route.setId(null);} @TO@ IfStatement@@if (customIds.contains(id)) {  route.setId(null);} else {  done=true;} @AT@ 7167 @LENGTH@ 116
---------------INS ExpressionStatement@@MethodInvocation:route.setId(null) @TO@ Block@@ThenBody:{  route.setId(null);} @AT@ 7243 @LENGTH@ 18
------------------INS MethodInvocation@@route.setId(null) @TO@ ExpressionStatement@@MethodInvocation:route.setId(null) @AT@ 7243 @LENGTH@ 17
---------------------INS SimpleName@@Name:route @TO@ MethodInvocation@@route.setId(null) @AT@ 7243 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:setId:[null] @TO@ MethodInvocation@@route.setId(null) @AT@ 7249 @LENGTH@ 11
------------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setId:[null] @AT@ 7255 @LENGTH@ 4
------------INS Block@@ElseBody:{  done=true;} @TO@ IfStatement@@if (customIds.contains(id)) {  route.setId(null);} else {  done=true;} @AT@ 7289 @LENGTH@ 60
---------------MOV ExpressionStatement@@Assignment:done=!customIds.contains(id) @TO@ Block@@ElseBody:{  done=true;} @AT@ 7054 @LENGTH@ 31
------------------UPD Assignment@@done=!customIds.contains(id) @TO@ done=true @AT@ 7054 @LENGTH@ 30
---------------------DEL PrefixExpression@@!customIds.contains(id) @AT@ 7061 @LENGTH@ 23
------------------------DEL Operator@@! @AT@ 7061 @LENGTH@ 1
---------------------INS BooleanLiteral@@true @TO@ Assignment@@done=!customIds.contains(id) @AT@ 7322 @LENGTH@ 4
------INS InfixExpression@@!done && attempts < 1000 @TO@ WhileStatement@@while (!done) {  id=route.idOrCreate(context.adapt(ExtendedCamelContext.class).getNodeIdFactory());  done=!customIds.contains(id);} @AT@ 6954 @LENGTH@ 24
---------INS PrefixExpression@@!done @TO@ InfixExpression@@!done && attempts < 1000 @AT@ 6954 @LENGTH@ 5
------------MOV Operator@@! @TO@ PrefixExpression@@!done @AT@ 6920 @LENGTH@ 1
------------MOV SimpleName@@done @TO@ PrefixExpression@@!done @AT@ 6921 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@!done && attempts < 1000 @AT@ 6959 @LENGTH@ 2
---------INS InfixExpression@@attempts < 1000 @TO@ InfixExpression@@!done && attempts < 1000 @AT@ 6963 @LENGTH@ 15
------------INS SimpleName@@attempts @TO@ InfixExpression@@attempts < 1000 @AT@ 6963 @LENGTH@ 8
------------INS Operator@@< @TO@ InfixExpression@@attempts < 1000 @AT@ 6971 @LENGTH@ 1
------------INS NumberLiteral@@1000 @TO@ InfixExpression@@attempts < 1000 @AT@ 6974 @LENGTH@ 4
---INS VariableDeclarationStatement@@int attempts=0; @TO@ Block@@ThenBody:{  boolean done=false;  String id=null;  while (!done) {    id=route.idOrCreate(context.adapt(ExtendedCamelContext.class).getNodeIdFactory());    done=!customIds.contains(id);  }  route.setId(id);  ProcessorDefinitionHelper.addPropertyPlaceholdersChangeRevertAction(new Runnable(){    @Override public void run(){      route.setId(null);      route.setCustomId(false);    }  });  route.setCustomId(false);  customIds.add(route.getId());} @AT@ 6913 @LENGTH@ 17
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int attempts=0; @AT@ 6913 @LENGTH@ 3
------INS VariableDeclarationFragment@@attempts=0 @TO@ VariableDeclarationStatement@@int attempts=0; @AT@ 6917 @LENGTH@ 12
---------INS SimpleName@@attempts @TO@ VariableDeclarationFragment@@attempts=0 @AT@ 6917 @LENGTH@ 8
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@attempts=0 @AT@ 6928 @LENGTH@ 1
---INS IfStatement@@if (!done) {  throw new IllegalArgumentException("Cannot auto assign id to route: " + route);} @TO@ Block@@ThenBody:{  boolean done=false;  String id=null;  while (!done) {    id=route.idOrCreate(context.adapt(ExtendedCamelContext.class).getNodeIdFactory());    done=!customIds.contains(id);  }  route.setId(id);  ProcessorDefinitionHelper.addPropertyPlaceholdersChangeRevertAction(new Runnable(){    @Override public void run(){      route.setId(null);      route.setCustomId(false);    }  });  route.setCustomId(false);  customIds.add(route.getId());} @AT@ 7384 @LENGTH@ 130
------INS PrefixExpression@@!done @TO@ IfStatement@@if (!done) {  throw new IllegalArgumentException("Cannot auto assign id to route: " + route);} @AT@ 7388 @LENGTH@ 5
---------INS Operator@@! @TO@ PrefixExpression@@!done @AT@ 7388 @LENGTH@ 1
---------INS SimpleName@@done @TO@ PrefixExpression@@!done @AT@ 7389 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new IllegalArgumentException("Cannot auto assign id to route: " + route);} @TO@ IfStatement@@if (!done) {  throw new IllegalArgumentException("Cannot auto assign id to route: " + route);} @AT@ 7395 @LENGTH@ 119
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Cannot auto assign id to route: " + route) @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("Cannot auto assign id to route: " + route);} @AT@ 7417 @LENGTH@ 79
------------INS ClassInstanceCreation@@IllegalArgumentException["Cannot auto assign id to route: " + route] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Cannot auto assign id to route: " + route) @AT@ 7423 @LENGTH@ 72
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Cannot auto assign id to route: " + route] @AT@ 7423 @LENGTH@ 3
---------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Cannot auto assign id to route: " + route] @AT@ 7427 @LENGTH@ 24
---------------INS InfixExpression@@"Cannot auto assign id to route: " + route @TO@ ClassInstanceCreation@@IllegalArgumentException["Cannot auto assign id to route: " + route] @AT@ 7452 @LENGTH@ 42
------------------INS StringLiteral@@"Cannot auto assign id to route: " @TO@ InfixExpression@@"Cannot auto assign id to route: " + route @AT@ 7452 @LENGTH@ 34
------------------INS Operator@@+ @TO@ InfixExpression@@"Cannot auto assign id to route: " + route @AT@ 7486 @LENGTH@ 1
------------------INS SimpleName@@route @TO@ InfixExpression@@"Cannot auto assign id to route: " + route @AT@ 7489 @LENGTH@ 5


MOV FieldDeclaration@@private, Map<ErrorHandlerFactory,Set<NamedNode>>, [errorHandlers=new HashMap<>()] @TO@ TypeDeclaration@@[public]DefaultRouteContext, [RouteContext] @AT@ 15879 @LENGTH@ 81


UPD TryStatement@@try {  setQueryDir("ql/src/test/queries/clientpositive");  includesFrom(testConfigProps,"minillap.query.files");  includesFrom(testConfigProps,"minillap.shared.query.files");  excludeQuery("cbo_limit.q");  setResultsDir("ql/src/test/results/clientpositive/llap");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("data/conf/llap");  setClusterType(MiniClusterType.llap);  setMetastoreType(MetastoreType.sql);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @TO@ try {  setQueryDir("ql/src/test/queries/clientpositive");  includesFrom(testConfigProps,"minillap.query.files");  includesFrom(testConfigProps,"minillap.shared.query.files");  setResultsDir("ql/src/test/results/clientpositive/llap");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("data/conf/llap");  setClusterType(MiniClusterType.llap);  setMetastoreType(MetastoreType.sql);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @AT@ 5769 @LENGTH@ 729


UPD ExpressionStatement@@MethodInvocation:assertTrue(xml.contains("<stepStat id=\"foo\" index=\"1\"")) @TO@ MethodInvocation:assertTrue(xml.contains("<stepStat id=\"foo\"")) @AT@ 3509 @LENGTH@ 61
---UPD MethodInvocation@@assertTrue(xml.contains("<stepStat id=\"foo\" index=\"1\"")) @TO@ assertTrue(xml.contains("<stepStat id=\"foo\"")) @AT@ 3509 @LENGTH@ 60
------UPD SimpleName@@MethodName:assertTrue:[xml.contains("<stepStat id=\"foo\" index=\"1\"")] @TO@ MethodName:assertTrue:[xml.contains("<stepStat id=\"foo\"")] @AT@ 3509 @LENGTH@ 60
---------UPD MethodInvocation@@xml.contains("<stepStat id=\"foo\" index=\"1\"") @TO@ xml.contains("<stepStat id=\"foo\"") @AT@ 3520 @LENGTH@ 48
------------UPD SimpleName@@MethodName:contains:["<stepStat id=\"foo\" index=\"1\""] @TO@ MethodName:contains:["<stepStat id=\"foo\""] @AT@ 3524 @LENGTH@ 44
---------------UPD StringLiteral@@"<stepStat id=\"foo\" index=\"1\"" @TO@ "<stepStat id=\"foo\"" @AT@ 3533 @LENGTH@ 34


INS MethodDeclaration@@public, void, MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization, Exception,  @TO@ TypeDeclaration@@[public]OAuth2LoginConfigurerTests,  @AT@ 16710 @LENGTH@ 573
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization, Exception,  @AT@ 16710 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization, Exception,  @AT@ 16717 @LENGTH@ 4
---INS SimpleName@@MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization, Exception,  @AT@ 16722 @LENGTH@ 98
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization, Exception,  @AT@ 16830 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:loadConfig(OAuth2LoginConfig.class) @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization, Exception,  @AT@ 16844 @LENGTH@ 36
------INS MethodInvocation@@loadConfig(OAuth2LoginConfig.class) @TO@ ExpressionStatement@@MethodInvocation:loadConfig(OAuth2LoginConfig.class) @AT@ 16844 @LENGTH@ 35
---------INS SimpleName@@MethodName:loadConfig:[OAuth2LoginConfig.class] @TO@ MethodInvocation@@loadConfig(OAuth2LoginConfig.class) @AT@ 16844 @LENGTH@ 35
------------INS TypeLiteral@@OAuth2LoginConfig.class @TO@ SimpleName@@MethodName:loadConfig:[OAuth2LoginConfig.class] @AT@ 16855 @LENGTH@ 23
---INS VariableDeclarationStatement@@String requestUri="/"; @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization, Exception,  @AT@ 16884 @LENGTH@ 24
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String requestUri="/"; @AT@ 16884 @LENGTH@ 6
------INS VariableDeclarationFragment@@requestUri="/" @TO@ VariableDeclarationStatement@@String requestUri="/"; @AT@ 16891 @LENGTH@ 16
---------INS SimpleName@@requestUri @TO@ VariableDeclarationFragment@@requestUri="/" @AT@ 16891 @LENGTH@ 10
---------INS StringLiteral@@"/" @TO@ VariableDeclarationFragment@@requestUri="/" @AT@ 16904 @LENGTH@ 3
---INS ExpressionStatement@@Assignment:this.request=new MockHttpServletRequest("GET",requestUri) @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization, Exception,  @AT@ 16911 @LENGTH@ 61
------INS Assignment@@this.request=new MockHttpServletRequest("GET",requestUri) @TO@ ExpressionStatement@@Assignment:this.request=new MockHttpServletRequest("GET",requestUri) @AT@ 16911 @LENGTH@ 60
---------INS FieldAccess@@this.request @TO@ Assignment@@this.request=new MockHttpServletRequest("GET",requestUri) @AT@ 16911 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 16911 @LENGTH@ 4
------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 16916 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.request=new MockHttpServletRequest("GET",requestUri) @AT@ 16923 @LENGTH@ 1
---------INS ClassInstanceCreation@@MockHttpServletRequest["GET", requestUri] @TO@ Assignment@@this.request=new MockHttpServletRequest("GET",requestUri) @AT@ 16926 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", requestUri] @AT@ 16926 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", requestUri] @AT@ 16930 @LENGTH@ 22
------------INS StringLiteral@@"GET" @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", requestUri] @AT@ 16953 @LENGTH@ 5
------------INS SimpleName@@requestUri @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", requestUri] @AT@ 16960 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:this.request.setServletPath(requestUri) @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization, Exception,  @AT@ 16975 @LENGTH@ 40
------INS MethodInvocation@@this.request.setServletPath(requestUri) @TO@ ExpressionStatement@@MethodInvocation:this.request.setServletPath(requestUri) @AT@ 16975 @LENGTH@ 39
---------INS FieldAccess@@this.request @TO@ MethodInvocation@@this.request.setServletPath(requestUri) @AT@ 16975 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 16975 @LENGTH@ 4
------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 16980 @LENGTH@ 7
---------INS SimpleName@@MethodName:setServletPath:[requestUri] @TO@ MethodInvocation@@this.request.setServletPath(requestUri) @AT@ 16988 @LENGTH@ 26
------------INS SimpleName@@requestUri @TO@ SimpleName@@MethodName:setServletPath:[requestUri] @AT@ 17003 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:this.request.addHeader("X-Requested-With","XMLHttpRequest") @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization, Exception,  @AT@ 17018 @LENGTH@ 61
------INS MethodInvocation@@this.request.addHeader("X-Requested-With","XMLHttpRequest") @TO@ ExpressionStatement@@MethodInvocation:this.request.addHeader("X-Requested-With","XMLHttpRequest") @AT@ 17018 @LENGTH@ 60
---------INS FieldAccess@@this.request @TO@ MethodInvocation@@this.request.addHeader("X-Requested-With","XMLHttpRequest") @AT@ 17018 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 17018 @LENGTH@ 4
------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 17023 @LENGTH@ 7
---------INS SimpleName@@MethodName:addHeader:["X-Requested-With", "XMLHttpRequest"] @TO@ MethodInvocation@@this.request.addHeader("X-Requested-With","XMLHttpRequest") @AT@ 17031 @LENGTH@ 47
------------INS StringLiteral@@"X-Requested-With" @TO@ SimpleName@@MethodName:addHeader:["X-Requested-With", "XMLHttpRequest"] @AT@ 17041 @LENGTH@ 18
------------INS StringLiteral@@"XMLHttpRequest" @TO@ SimpleName@@MethodName:addHeader:["X-Requested-With", "XMLHttpRequest"] @AT@ 17061 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain) @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization, Exception,  @AT@ 17083 @LENGTH@ 87
------INS MethodInvocation@@this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain) @TO@ ExpressionStatement@@MethodInvocation:this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain) @AT@ 17083 @LENGTH@ 86
---------INS FieldAccess@@this.springSecurityFilterChain @TO@ MethodInvocation@@this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain) @AT@ 17083 @LENGTH@ 30
------------INS ThisExpression@@this @TO@ FieldAccess@@this.springSecurityFilterChain @AT@ 17083 @LENGTH@ 4
------------INS SimpleName@@springSecurityFilterChain @TO@ FieldAccess@@this.springSecurityFilterChain @AT@ 17088 @LENGTH@ 25
---------INS SimpleName@@MethodName:doFilter:[this.request, this.response, this.filterChain] @TO@ MethodInvocation@@this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain) @AT@ 17114 @LENGTH@ 55
------------INS FieldAccess@@this.request @TO@ SimpleName@@MethodName:doFilter:[this.request, this.response, this.filterChain] @AT@ 17123 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 17123 @LENGTH@ 4
---------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 17128 @LENGTH@ 7
------------INS FieldAccess@@this.response @TO@ SimpleName@@MethodName:doFilter:[this.request, this.response, this.filterChain] @AT@ 17137 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 17137 @LENGTH@ 4
---------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 17142 @LENGTH@ 8
------------INS FieldAccess@@this.filterChain @TO@ SimpleName@@MethodName:doFilter:[this.request, this.response, this.filterChain] @AT@ 17152 @LENGTH@ 16
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.filterChain @AT@ 17152 @LENGTH@ 4
---------------INS SimpleName@@filterChain @TO@ FieldAccess@@this.filterChain @AT@ 17157 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(this.response.getRedirectedUrl()).doesNotMatch("http://localhost/oauth2/authorization/google") @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWithOneClientConfiguredAndRequestXHRNotAuthenticatedThenDoesNotRedirectForAuthorization, Exception,  @AT@ 17174 @LENGTH@ 106
------INS MethodInvocation@@assertThat(this.response.getRedirectedUrl()).doesNotMatch("http://localhost/oauth2/authorization/google") @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.response.getRedirectedUrl()).doesNotMatch("http://localhost/oauth2/authorization/google") @AT@ 17174 @LENGTH@ 105
---------INS MethodInvocation@@MethodName:assertThat:[this.response.getRedirectedUrl()] @TO@ MethodInvocation@@assertThat(this.response.getRedirectedUrl()).doesNotMatch("http://localhost/oauth2/authorization/google") @AT@ 17174 @LENGTH@ 44
------------INS MethodInvocation@@this.response.getRedirectedUrl() @TO@ MethodInvocation@@MethodName:assertThat:[this.response.getRedirectedUrl()] @AT@ 17185 @LENGTH@ 32
---------------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.getRedirectedUrl() @AT@ 17185 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 17185 @LENGTH@ 4
------------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 17190 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getRedirectedUrl:[] @TO@ MethodInvocation@@this.response.getRedirectedUrl() @AT@ 17199 @LENGTH@ 18
---------INS SimpleName@@MethodName:doesNotMatch:["http://localhost/oauth2/authorization/google"] @TO@ MethodInvocation@@assertThat(this.response.getRedirectedUrl()).doesNotMatch("http://localhost/oauth2/authorization/google") @AT@ 17219 @LENGTH@ 60
------------INS StringLiteral@@"http://localhost/oauth2/authorization/google" @TO@ SimpleName@@MethodName:doesNotMatch:["http://localhost/oauth2/authorization/google"] @AT@ 17232 @LENGTH@ 46


UPD FieldDeclaration@@private, Map<String,OAuth2AuthorizedClient>, [clientRegistrationIdToAuthorizedClient=new HashMap<>()] @TO@ private, final, Map<String,OAuth2AuthorizedClient>, [clientRegistrationIdToAuthorizedClient=new ConcurrentHashMap<>()] @AT@ 1720 @LENGTH@ 101
---INS Modifier@@final @TO@ FieldDeclaration@@private, Map<String,OAuth2AuthorizedClient>, [clientRegistrationIdToAuthorizedClient=new HashMap<>()] @AT@ 1749 @LENGTH@ 5
---UPD VariableDeclarationFragment@@clientRegistrationIdToAuthorizedClient=new HashMap<>() @TO@ clientRegistrationIdToAuthorizedClient=new ConcurrentHashMap<>() @AT@ 1764 @LENGTH@ 56
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ ConcurrentHashMap<>[] @AT@ 1805 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ ConcurrentHashMap<> @AT@ 1809 @LENGTH@ 9
------------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 1809 @LENGTH@ 7


INS MethodDeclaration@@public, EntityInstantiator, MethodName:getInstantiatorFor, PersistentEntity<?,?> entity,  @TO@ TypeDeclaration@@[public]Neo4jMappingContext, AbstractMappingContext<Neo4jPersistentEntity<?>,Neo4jPersistentProperty> @AT@ 4197 @LENGTH@ 131
---INS Modifier@@public @TO@ MethodDeclaration@@public, EntityInstantiator, MethodName:getInstantiatorFor, PersistentEntity<?,?> entity,  @AT@ 4197 @LENGTH@ 6
---INS SimpleType@@EntityInstantiator @TO@ MethodDeclaration@@public, EntityInstantiator, MethodName:getInstantiatorFor, PersistentEntity<?,?> entity,  @AT@ 4204 @LENGTH@ 18
---INS SimpleName@@MethodName:getInstantiatorFor @TO@ MethodDeclaration@@public, EntityInstantiator, MethodName:getInstantiatorFor, PersistentEntity<?,?> entity,  @AT@ 4223 @LENGTH@ 18
---INS SingleVariableDeclaration@@PersistentEntity<?,?> entity @TO@ MethodDeclaration@@public, EntityInstantiator, MethodName:getInstantiatorFor, PersistentEntity<?,?> entity,  @AT@ 4242 @LENGTH@ 29
------INS ParameterizedType@@PersistentEntity<?,?> @TO@ SingleVariableDeclaration@@PersistentEntity<?,?> entity @AT@ 4242 @LENGTH@ 22
---------INS SimpleType@@PersistentEntity @TO@ ParameterizedType@@PersistentEntity<?,?> @AT@ 4242 @LENGTH@ 16
---------INS WildcardType@@? @TO@ ParameterizedType@@PersistentEntity<?,?> @AT@ 4259 @LENGTH@ 1
---------INS WildcardType@@? @TO@ ParameterizedType@@PersistentEntity<?,?> @AT@ 4262 @LENGTH@ 1
------INS SimpleName@@entity @TO@ SingleVariableDeclaration@@PersistentEntity<?,?> entity @AT@ 4265 @LENGTH@ 6
---INS ReturnStatement@@MethodInvocation:instantiators.getInstantiatorFor(entity) @TO@ MethodDeclaration@@public, EntityInstantiator, MethodName:getInstantiatorFor, PersistentEntity<?,?> entity,  @AT@ 4277 @LENGTH@ 48
------INS MethodInvocation@@instantiators.getInstantiatorFor(entity) @TO@ ReturnStatement@@MethodInvocation:instantiators.getInstantiatorFor(entity) @AT@ 4284 @LENGTH@ 40
---------INS SimpleName@@Name:instantiators @TO@ MethodInvocation@@instantiators.getInstantiatorFor(entity) @AT@ 4284 @LENGTH@ 13
---------INS SimpleName@@MethodName:getInstantiatorFor:[entity] @TO@ MethodInvocation@@instantiators.getInstantiatorFor(entity) @AT@ 4298 @LENGTH@ 26
------------INS SimpleName@@entity @TO@ SimpleName@@MethodName:getInstantiatorFor:[entity] @AT@ 4317 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(configuration,options) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 2621 @LENGTH@ 59
---UPD MethodInvocation@@IntrospectionSupport.setProperties(configuration,options) @TO@ PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 2621 @LENGTH@ 58
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 2621 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[configuration, options] @TO@ MethodName:bindProperties:[context, configuration, options] @AT@ 2642 @LENGTH@ 37
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:setProperties:[configuration, options] @AT@ 2661 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:execute(collection -> {
  MongoPersistentEntity<?> entity=lookupPersistentEntity(type,collectionName);
  IndexOptions indexOptions=IndexConverters.indexDefinitionToIndexOptionsConverter().convert(indexDefinition);
  indexOptions=addPartialFilterIfPresent(indexOptions,indexDefinition.getIndexOptions(),entity);
  indexOptions=addDefaultCollationIfRequired(indexOptions,entity);
  return collection.createIndex(indexDefinition.getIndexKeys(),indexOptions);
}
) @TO@ MethodInvocation:execute(collection -> {
  MongoPersistentEntity<?> entity=lookupPersistentEntity(type,collectionName);
  IndexOptions indexOptions=IndexConverters.indexDefinitionToIndexOptionsConverter().convert(indexDefinition);
  indexOptions=addPartialFilterIfPresent(indexOptions,indexDefinition.getIndexOptions(),entity);
  indexOptions=addDefaultCollationIfRequired(indexOptions,entity);
  Document mappedKeys=mapper.getMappedObject(indexDefinition.getIndexKeys(),entity);
  return collection.createIndex(mappedKeys,indexOptions);
}
) @AT@ 4447 @LENGTH@ 490
---UPD MethodInvocation@@execute(collection -> {
  MongoPersistentEntity<?> entity=lookupPersistentEntity(type,collectionName);
  IndexOptions indexOptions=IndexConverters.indexDefinitionToIndexOptionsConverter().convert(indexDefinition);
  indexOptions=addPartialFilterIfPresent(indexOptions,indexDefinition.getIndexOptions(),entity);
  indexOptions=addDefaultCollationIfRequired(indexOptions,entity);
  return collection.createIndex(indexDefinition.getIndexKeys(),indexOptions);
}
) @TO@ execute(collection -> {
  MongoPersistentEntity<?> entity=lookupPersistentEntity(type,collectionName);
  IndexOptions indexOptions=IndexConverters.indexDefinitionToIndexOptionsConverter().convert(indexDefinition);
  indexOptions=addPartialFilterIfPresent(indexOptions,indexDefinition.getIndexOptions(),entity);
  indexOptions=addDefaultCollationIfRequired(indexOptions,entity);
  Document mappedKeys=mapper.getMappedObject(indexDefinition.getIndexKeys(),entity);
  return collection.createIndex(mappedKeys,indexOptions);
}
) @AT@ 4454 @LENGTH@ 482
------UPD SimpleName@@MethodName:execute:[collection -> {
  MongoPersistentEntity<?> entity=lookupPersistentEntity(type,collectionName);
  IndexOptions indexOptions=IndexConverters.indexDefinitionToIndexOptionsConverter().convert(indexDefinition);
  indexOptions=addPartialFilterIfPresent(indexOptions,indexDefinition.getIndexOptions(),entity);
  indexOptions=addDefaultCollationIfRequired(indexOptions,entity);
  return collection.createIndex(indexDefinition.getIndexKeys(),indexOptions);
}
] @TO@ MethodName:execute:[collection -> {
  MongoPersistentEntity<?> entity=lookupPersistentEntity(type,collectionName);
  IndexOptions indexOptions=IndexConverters.indexDefinitionToIndexOptionsConverter().convert(indexDefinition);
  indexOptions=addPartialFilterIfPresent(indexOptions,indexDefinition.getIndexOptions(),entity);
  indexOptions=addDefaultCollationIfRequired(indexOptions,entity);
  Document mappedKeys=mapper.getMappedObject(indexDefinition.getIndexKeys(),entity);
  return collection.createIndex(mappedKeys,indexOptions);
}
] @AT@ 4454 @LENGTH@ 482
---------UPD LambdaExpression@@collection -> {
  MongoPersistentEntity<?> entity=lookupPersistentEntity(type,collectionName);
  IndexOptions indexOptions=IndexConverters.indexDefinitionToIndexOptionsConverter().convert(indexDefinition);
  indexOptions=addPartialFilterIfPresent(indexOptions,indexDefinition.getIndexOptions(),entity);
  indexOptions=addDefaultCollationIfRequired(indexOptions,entity);
  return collection.createIndex(indexDefinition.getIndexKeys(),indexOptions);
}
 @TO@ collection -> {
  MongoPersistentEntity<?> entity=lookupPersistentEntity(type,collectionName);
  IndexOptions indexOptions=IndexConverters.indexDefinitionToIndexOptionsConverter().convert(indexDefinition);
  indexOptions=addPartialFilterIfPresent(indexOptions,indexDefinition.getIndexOptions(),entity);
  indexOptions=addDefaultCollationIfRequired(indexOptions,entity);
  Document mappedKeys=mapper.getMappedObject(indexDefinition.getIndexKeys(),entity);
  return collection.createIndex(mappedKeys,indexOptions);
}
 @AT@ 4462 @LENGTH@ 473
------------INS VariableDeclarationStatement@@Document mappedKeys=mapper.getMappedObject(indexDefinition.getIndexKeys(),entity); @TO@ LambdaExpression@@collection -> {
  MongoPersistentEntity<?> entity=lookupPersistentEntity(type,collectionName);
  IndexOptions indexOptions=IndexConverters.indexDefinitionToIndexOptionsConverter().convert(indexDefinition);
  indexOptions=addPartialFilterIfPresent(indexOptions,indexDefinition.getIndexOptions(),entity);
  indexOptions=addDefaultCollationIfRequired(indexOptions,entity);
  return collection.createIndex(indexDefinition.getIndexKeys(),indexOptions);
}
 @AT@ 4855 @LENGTH@ 85
---------------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document mappedKeys=mapper.getMappedObject(indexDefinition.getIndexKeys(),entity); @AT@ 4855 @LENGTH@ 8
---------------INS VariableDeclarationFragment@@mappedKeys=mapper.getMappedObject(indexDefinition.getIndexKeys(),entity) @TO@ VariableDeclarationStatement@@Document mappedKeys=mapper.getMappedObject(indexDefinition.getIndexKeys(),entity); @AT@ 4864 @LENGTH@ 75
------------------INS SimpleName@@mappedKeys @TO@ VariableDeclarationFragment@@mappedKeys=mapper.getMappedObject(indexDefinition.getIndexKeys(),entity) @AT@ 4864 @LENGTH@ 10
------------------INS MethodInvocation@@mapper.getMappedObject(indexDefinition.getIndexKeys(),entity) @TO@ VariableDeclarationFragment@@mappedKeys=mapper.getMappedObject(indexDefinition.getIndexKeys(),entity) @AT@ 4877 @LENGTH@ 62
---------------------MOV SimpleName@@Name:collection @TO@ MethodInvocation@@mapper.getMappedObject(indexDefinition.getIndexKeys(),entity) @AT@ 4862 @LENGTH@ 10
---------------------MOV SimpleName@@Name:collection @TO@ MethodInvocation@@mapper.getMappedObject(indexDefinition.getIndexKeys(),entity) @AT@ 4862 @LENGTH@ 10
---------------------MOV SimpleName@@MethodName:createIndex:[indexDefinition.getIndexKeys(), indexOptions] @TO@ MethodInvocation@@mapper.getMappedObject(indexDefinition.getIndexKeys(),entity) @AT@ 4873 @LENGTH@ 57
------------------------UPD SimpleName@@indexOptions @TO@ entity @AT@ 4917 @LENGTH@ 12
---------------------MOV SimpleName@@MethodName:createIndex:[indexDefinition.getIndexKeys(), indexOptions] @TO@ MethodInvocation@@mapper.getMappedObject(indexDefinition.getIndexKeys(),entity) @AT@ 4873 @LENGTH@ 57
------------------------UPD SimpleName@@indexOptions @TO@ entity @AT@ 4917 @LENGTH@ 12
------------DEL ReturnStatement@@MethodInvocation:collection.createIndex(indexDefinition.getIndexKeys(),indexOptions) @AT@ 4855 @LENGTH@ 76
---------------DEL MethodInvocation@@collection.createIndex(indexDefinition.getIndexKeys(),indexOptions) @AT@ 4862 @LENGTH@ 68
------------INS ReturnStatement@@MethodInvocation:collection.createIndex(mappedKeys,indexOptions) @TO@ LambdaExpression@@collection -> {
  MongoPersistentEntity<?> entity=lookupPersistentEntity(type,collectionName);
  IndexOptions indexOptions=IndexConverters.indexDefinitionToIndexOptionsConverter().convert(indexDefinition);
  indexOptions=addPartialFilterIfPresent(indexOptions,indexDefinition.getIndexOptions(),entity);
  indexOptions=addDefaultCollationIfRequired(indexOptions,entity);
  return collection.createIndex(indexDefinition.getIndexKeys(),indexOptions);
}
 @AT@ 4944 @LENGTH@ 56
---------------INS MethodInvocation@@collection.createIndex(mappedKeys,indexOptions) @TO@ ReturnStatement@@MethodInvocation:collection.createIndex(mappedKeys,indexOptions) @AT@ 4951 @LENGTH@ 48
------------------INS SimpleName@@Name:collection @TO@ MethodInvocation@@collection.createIndex(mappedKeys,indexOptions) @AT@ 4951 @LENGTH@ 10
------------------INS SimpleName@@MethodName:createIndex:[mappedKeys, indexOptions] @TO@ MethodInvocation@@collection.createIndex(mappedKeys,indexOptions) @AT@ 4962 @LENGTH@ 37
---------------------INS SimpleName@@mappedKeys @TO@ SimpleName@@MethodName:createIndex:[mappedKeys, indexOptions] @AT@ 4974 @LENGTH@ 10
---------------------INS SimpleName@@indexOptions @TO@ SimpleName@@MethodName:createIndex:[mappedKeys, indexOptions] @AT@ 4986 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:Assert.assertTrue(responseBody.startsWith("No TransformerFactory could be found!")) @TO@ MethodInvocation:Assert.assertTrue("unexpected response '" + responseBody + "'",responseBody.startsWith("__redirected.__TransformerFactory")) @AT@ 1286 @LENGTH@ 84
---UPD MethodInvocation@@Assert.assertTrue(responseBody.startsWith("No TransformerFactory could be found!")) @TO@ Assert.assertTrue("unexpected response '" + responseBody + "'",responseBody.startsWith("__redirected.__TransformerFactory")) @AT@ 1286 @LENGTH@ 83
------UPD SimpleName@@MethodName:assertTrue:[responseBody.startsWith("No TransformerFactory could be found!")] @TO@ MethodName:assertTrue:["unexpected response '" + responseBody + "'", responseBody.startsWith("__redirected.__TransformerFactory")] @AT@ 1293 @LENGTH@ 76
---------UPD MethodInvocation@@responseBody.startsWith("No TransformerFactory could be found!") @TO@ responseBody.startsWith("__redirected.__TransformerFactory") @AT@ 1304 @LENGTH@ 64
------------UPD SimpleName@@MethodName:startsWith:["No TransformerFactory could be found!"] @TO@ MethodName:startsWith:["__redirected.__TransformerFactory"] @AT@ 1317 @LENGTH@ 51
---------------UPD StringLiteral@@"No TransformerFactory could be found!" @TO@ "__redirected.__TransformerFactory" @AT@ 1328 @LENGTH@ 39
---------INS InfixExpression@@"unexpected response '" + responseBody + "'" @TO@ SimpleName@@MethodName:assertTrue:[responseBody.startsWith("No TransformerFactory could be found!")] @AT@ 1373 @LENGTH@ 44
------------INS StringLiteral@@"unexpected response '" @TO@ InfixExpression@@"unexpected response '" + responseBody + "'" @AT@ 1373 @LENGTH@ 23
------------INS Operator@@+ @TO@ InfixExpression@@"unexpected response '" + responseBody + "'" @AT@ 1396 @LENGTH@ 1
------------INS SimpleName@@responseBody @TO@ InfixExpression@@"unexpected response '" + responseBody + "'" @AT@ 1399 @LENGTH@ 12
------------INS StringLiteral@@"'" @TO@ InfixExpression@@"unexpected response '" + responseBody + "'" @AT@ 1414 @LENGTH@ 3


MOV ExpressionStatement@@MethodInvocation:rnd.nextBytes(new byte[1]) @TO@ MethodDeclaration@@public, SecureRandom, MethodName:getObject, Exception,  @AT@ 1530 @LENGTH@ 27


UPD VariableDeclarationStatement@@@SuppressWarnings("deprecation") final ExtensionRegistry extensionRegistry=new ExtensionRegistry(ProcessType.EMBEDDED_SERVER,new RunningModeControl(RunningMode.NORMAL)); @TO@ ExtensionRegistry extensionRegistry=new ExtensionRegistry(ProcessType.SELF_CONTAINED,new RunningModeControl(RunningMode.NORMAL),null,null,null,RuntimeHostControllerInfoAccessor.SERVER); @AT@ 2237 @LENGTH@ 192
---DEL Modifier@@final @AT@ 2278 @LENGTH@ 5
---UPD VariableDeclarationFragment@@extensionRegistry=new ExtensionRegistry(ProcessType.EMBEDDED_SERVER,new RunningModeControl(RunningMode.NORMAL)) @TO@ extensionRegistry=new ExtensionRegistry(ProcessType.SELF_CONTAINED,new RunningModeControl(RunningMode.NORMAL),null,null,null,RuntimeHostControllerInfoAccessor.SERVER) @AT@ 2302 @LENGTH@ 126
------UPD ClassInstanceCreation@@ExtensionRegistry[ProcessType.EMBEDDED_SERVER, new RunningModeControl(RunningMode.NORMAL)] @TO@ ExtensionRegistry[ProcessType.SELF_CONTAINED, new RunningModeControl(RunningMode.NORMAL), null, null, null, RuntimeHostControllerInfoAccessor.SERVER] @AT@ 2334 @LENGTH@ 94
---------UPD QualifiedName@@ProcessType.EMBEDDED_SERVER @TO@ ProcessType.SELF_CONTAINED @AT@ 2356 @LENGTH@ 27
------------UPD SimpleName@@EMBEDDED_SERVER @TO@ SELF_CONTAINED @AT@ 2368 @LENGTH@ 15
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ExtensionRegistry[ProcessType.EMBEDDED_SERVER, new RunningModeControl(RunningMode.NORMAL)] @AT@ 2620 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ExtensionRegistry[ProcessType.EMBEDDED_SERVER, new RunningModeControl(RunningMode.NORMAL)] @AT@ 2642 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ExtensionRegistry[ProcessType.EMBEDDED_SERVER, new RunningModeControl(RunningMode.NORMAL)] @AT@ 2664 @LENGTH@ 4
---------INS QualifiedName@@RuntimeHostControllerInfoAccessor.SERVER @TO@ ClassInstanceCreation@@ExtensionRegistry[ProcessType.EMBEDDED_SERVER, new RunningModeControl(RunningMode.NORMAL)] @AT@ 2686 @LENGTH@ 40
------------INS SimpleName@@RuntimeHostControllerInfoAccessor @TO@ QualifiedName@@RuntimeHostControllerInfoAccessor.SERVER @AT@ 2686 @LENGTH@ 33
------------INS SimpleName@@SERVER @TO@ QualifiedName@@RuntimeHostControllerInfoAccessor.SERVER @AT@ 2720 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:timeDomain.setArrayOfDurations(new Duration[]{Duration.ofMinutes(23)}) @TO@ MethodDeclaration@@public, void, MethodName:setUpDomainObject,  @AT@ 2145 @LENGTH@ 71
---INS MethodInvocation@@timeDomain.setArrayOfDurations(new Duration[]{Duration.ofMinutes(23)}) @TO@ ExpressionStatement@@MethodInvocation:timeDomain.setArrayOfDurations(new Duration[]{Duration.ofMinutes(23)}) @AT@ 2145 @LENGTH@ 70
------INS SimpleName@@Name:timeDomain @TO@ MethodInvocation@@timeDomain.setArrayOfDurations(new Duration[]{Duration.ofMinutes(23)}) @AT@ 2145 @LENGTH@ 10
------INS SimpleName@@MethodName:setArrayOfDurations:[new Duration[]{Duration.ofMinutes(23)}] @TO@ MethodInvocation@@timeDomain.setArrayOfDurations(new Duration[]{Duration.ofMinutes(23)}) @AT@ 2156 @LENGTH@ 59
---------INS ArrayCreation@@new Duration[]{Duration.ofMinutes(23)} @TO@ SimpleName@@MethodName:setArrayOfDurations:[new Duration[]{Duration.ofMinutes(23)}] @AT@ 2176 @LENGTH@ 38
------------INS ArrayType@@Duration[] @TO@ ArrayCreation@@new Duration[]{Duration.ofMinutes(23)} @AT@ 2180 @LENGTH@ 10
---------------INS SimpleType@@Duration @TO@ ArrayType@@Duration[] @AT@ 2180 @LENGTH@ 8
------------INS ArrayInitializer@@{Duration.ofMinutes(23)} @TO@ ArrayCreation@@new Duration[]{Duration.ofMinutes(23)} @AT@ 2190 @LENGTH@ 24
---------------INS MethodInvocation@@Duration.ofMinutes(23) @TO@ ArrayInitializer@@{Duration.ofMinutes(23)} @AT@ 2191 @LENGTH@ 22
------------------INS SimpleName@@Name:Duration @TO@ MethodInvocation@@Duration.ofMinutes(23) @AT@ 2191 @LENGTH@ 8
------------------INS SimpleName@@MethodName:ofMinutes:[23] @TO@ MethodInvocation@@Duration.ofMinutes(23) @AT@ 2200 @LENGTH@ 13
---------------------INS NumberLiteral@@23 @TO@ SimpleName@@MethodName:ofMinutes:[23] @AT@ 2210 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:getValueWhenAuthenticationMethodNoneThenReturnNone,  @TO@ TypeDeclaration@@[public]ClientAuthenticationMethodTests,  @AT@ 1379 @LENGTH@ 145
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getValueWhenAuthenticationMethodNoneThenReturnNone,  @AT@ 1379 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getValueWhenAuthenticationMethodNoneThenReturnNone,  @AT@ 1386 @LENGTH@ 4
---INS SimpleName@@MethodName:getValueWhenAuthenticationMethodNoneThenReturnNone @TO@ MethodDeclaration@@public, void, MethodName:getValueWhenAuthenticationMethodNoneThenReturnNone,  @AT@ 1391 @LENGTH@ 50
---INS ExpressionStatement@@MethodInvocation:assertThat(ClientAuthenticationMethod.NONE.getValue()).isEqualTo("none") @TO@ MethodDeclaration@@public, void, MethodName:getValueWhenAuthenticationMethodNoneThenReturnNone,  @AT@ 1448 @LENGTH@ 73
------INS MethodInvocation@@assertThat(ClientAuthenticationMethod.NONE.getValue()).isEqualTo("none") @TO@ ExpressionStatement@@MethodInvocation:assertThat(ClientAuthenticationMethod.NONE.getValue()).isEqualTo("none") @AT@ 1448 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:assertThat:[ClientAuthenticationMethod.NONE.getValue()] @TO@ MethodInvocation@@assertThat(ClientAuthenticationMethod.NONE.getValue()).isEqualTo("none") @AT@ 1448 @LENGTH@ 54
------------INS MethodInvocation@@ClientAuthenticationMethod.NONE.getValue() @TO@ MethodInvocation@@MethodName:assertThat:[ClientAuthenticationMethod.NONE.getValue()] @AT@ 1459 @LENGTH@ 42
---------------INS QualifiedName@@Name:ClientAuthenticationMethod.NONE @TO@ MethodInvocation@@ClientAuthenticationMethod.NONE.getValue() @AT@ 1459 @LENGTH@ 31
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@ClientAuthenticationMethod.NONE.getValue() @AT@ 1491 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:["none"] @TO@ MethodInvocation@@assertThat(ClientAuthenticationMethod.NONE.getValue()).isEqualTo("none") @AT@ 1503 @LENGTH@ 17
------------INS StringLiteral@@"none" @TO@ SimpleName@@MethodName:isEqualTo:["none"] @AT@ 1513 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @TO@ TypeDeclaration@@[public]FeaturePolicyHeaderWriterTests,  @AT@ 2407 @LENGTH@ 275
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2407 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2414 @LENGTH@ 4
---INS SimpleName@@MethodName:writeHeaderOnlyIfNotPresent @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2419 @LENGTH@ 27
---INS VariableDeclarationStatement@@String value=new String("value"); @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2452 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=new String("value"); @AT@ 2452 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=new String("value") @TO@ VariableDeclarationStatement@@String value=new String("value"); @AT@ 2459 @LENGTH@ 27
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=new String("value") @AT@ 2459 @LENGTH@ 5
---------INS ClassInstanceCreation@@String["value"] @TO@ VariableDeclarationFragment@@value=new String("value") @AT@ 2467 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@String["value"] @AT@ 2467 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String["value"] @AT@ 2471 @LENGTH@ 6
------------INS StringLiteral@@"value" @TO@ ClassInstanceCreation@@String["value"] @AT@ 2478 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:this.response.setHeader(FEATURE_POLICY_HEADER,value) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2490 @LENGTH@ 54
------INS MethodInvocation@@this.response.setHeader(FEATURE_POLICY_HEADER,value) @TO@ ExpressionStatement@@MethodInvocation:this.response.setHeader(FEATURE_POLICY_HEADER,value) @AT@ 2490 @LENGTH@ 53
---------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.setHeader(FEATURE_POLICY_HEADER,value) @AT@ 2490 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 2490 @LENGTH@ 4
------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 2495 @LENGTH@ 8
---------INS SimpleName@@MethodName:setHeader:[FEATURE_POLICY_HEADER, value] @TO@ MethodInvocation@@this.response.setHeader(FEATURE_POLICY_HEADER,value) @AT@ 2504 @LENGTH@ 39
------------INS SimpleName@@FEATURE_POLICY_HEADER @TO@ SimpleName@@MethodName:setHeader:[FEATURE_POLICY_HEADER, value] @AT@ 2514 @LENGTH@ 21
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:setHeader:[FEATURE_POLICY_HEADER, value] @AT@ 2537 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:this.writer.writeHeaders(this.request,this.response) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2547 @LENGTH@ 54
------INS MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @TO@ ExpressionStatement@@MethodInvocation:this.writer.writeHeaders(this.request,this.response) @AT@ 2547 @LENGTH@ 53
---------INS FieldAccess@@this.writer @TO@ MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @AT@ 2547 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.writer @AT@ 2547 @LENGTH@ 4
------------INS SimpleName@@writer @TO@ FieldAccess@@this.writer @AT@ 2552 @LENGTH@ 6
---------INS SimpleName@@MethodName:writeHeaders:[this.request, this.response] @TO@ MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @AT@ 2559 @LENGTH@ 41
------------INS FieldAccess@@this.request @TO@ SimpleName@@MethodName:writeHeaders:[this.request, this.response] @AT@ 2572 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 2572 @LENGTH@ 4
---------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 2577 @LENGTH@ 7
------------INS FieldAccess@@this.response @TO@ SimpleName@@MethodName:writeHeaders:[this.request, this.response] @AT@ 2586 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 2586 @LENGTH@ 4
---------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 2591 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(this.response.getHeader(FEATURE_POLICY_HEADER)).isSameAs(value) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2604 @LENGTH@ 75
------INS MethodInvocation@@assertThat(this.response.getHeader(FEATURE_POLICY_HEADER)).isSameAs(value) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.response.getHeader(FEATURE_POLICY_HEADER)).isSameAs(value) @AT@ 2604 @LENGTH@ 74
---------INS MethodInvocation@@MethodName:assertThat:[this.response.getHeader(FEATURE_POLICY_HEADER)] @TO@ MethodInvocation@@assertThat(this.response.getHeader(FEATURE_POLICY_HEADER)).isSameAs(value) @AT@ 2604 @LENGTH@ 58
------------INS MethodInvocation@@this.response.getHeader(FEATURE_POLICY_HEADER) @TO@ MethodInvocation@@MethodName:assertThat:[this.response.getHeader(FEATURE_POLICY_HEADER)] @AT@ 2615 @LENGTH@ 46
---------------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.getHeader(FEATURE_POLICY_HEADER) @AT@ 2615 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 2615 @LENGTH@ 4
------------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 2620 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getHeader:[FEATURE_POLICY_HEADER] @TO@ MethodInvocation@@this.response.getHeader(FEATURE_POLICY_HEADER) @AT@ 2629 @LENGTH@ 32
------------------INS SimpleName@@FEATURE_POLICY_HEADER @TO@ SimpleName@@MethodName:getHeader:[FEATURE_POLICY_HEADER] @AT@ 2639 @LENGTH@ 21
---------INS SimpleName@@MethodName:isSameAs:[value] @TO@ MethodInvocation@@assertThat(this.response.getHeader(FEATURE_POLICY_HEADER)).isSameAs(value) @AT@ 2663 @LENGTH@ 15
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:isSameAs:[value] @AT@ 2672 @LENGTH@ 5


UPD TypeDeclaration@@[@Ignore("HIVE-21022: disabled until fixed"), @Category(MetastoreCheckinTest.class), public]TestRemoteHiveMetaStoreZKBindHost, TestRemoteHiveMetaStoreZK @TO@ [@Category(MetastoreCheckinTest.class), public]TestRemoteHiveMetaStoreZKBindHost, TestRemoteHiveMetaStoreZK @AT@ 1154 @LENGTH@ 396
---DEL SingleMemberAnnotation@@@Ignore("HIVE-21022: disabled until fixed") @AT@ 1154 @LENGTH@ 43


UPD ExpressionStatement@@MethodInvocation:consumer.subscribe(Arrays.asList(topicName.split(","))) @TO@ MethodInvocation:consumer.subscribe(Arrays.asList(topicName.split(",")),this) @AT@ 10133 @LENGTH@ 56
---UPD MethodInvocation@@consumer.subscribe(Arrays.asList(topicName.split(","))) @TO@ consumer.subscribe(Arrays.asList(topicName.split(",")),this) @AT@ 10133 @LENGTH@ 55
------UPD SimpleName@@MethodName:subscribe:[Arrays.asList(topicName.split(","))] @TO@ MethodName:subscribe:[Arrays.asList(topicName.split(",")), this] @AT@ 10142 @LENGTH@ 46
---------INS ThisExpression@@this @TO@ SimpleName@@MethodName:subscribe:[Arrays.asList(topicName.split(","))] @AT@ 10189 @LENGTH@ 4


MOV FieldDeclaration@@transient, int, [lastIndex=-1] @TO@ TypeDeclaration@@[public, abstract]WeightedLoadBalancer, QueueLoadBalancer @AT@ 1019 @LENGTH@ 29


INS MethodDeclaration@@public, voidMethodName:NodeManagerFactory, Driver driver, Class<?>... initialPersistentClasses,  @TO@ TypeDeclaration@@[@API(status=API.Status.STABLE,since="1.0"), @Slf4j, public, final]NodeManagerFactory,  @AT@ 2518 @LENGTH@ 140
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:NodeManagerFactory, Driver driver, Class<?>... initialPersistentClasses,  @AT@ 2518 @LENGTH@ 6
---INS SimpleName@@MethodName:NodeManagerFactory @TO@ MethodDeclaration@@public, voidMethodName:NodeManagerFactory, Driver driver, Class<?>... initialPersistentClasses,  @AT@ 2525 @LENGTH@ 18
---MOV SingleVariableDeclaration@@Class<?>... initialPersistentClasses @TO@ MethodDeclaration@@public, voidMethodName:NodeManagerFactory, Driver driver, Class<?>... initialPersistentClasses,  @AT@ 2530 @LENGTH@ 36
---INS SingleVariableDeclaration@@Driver driver @TO@ MethodDeclaration@@public, voidMethodName:NodeManagerFactory, Driver driver, Class<?>... initialPersistentClasses,  @AT@ 2544 @LENGTH@ 13
------INS SimpleType@@Driver @TO@ SingleVariableDeclaration@@Driver driver @AT@ 2544 @LENGTH@ 6
------INS SimpleName@@driver @TO@ SingleVariableDeclaration@@Driver driver @AT@ 2551 @LENGTH@ 6
---INS ConstructorInvocation@@this(driver,Arrays.asList(initialPersistentClasses)); @TO@ MethodDeclaration@@public, voidMethodName:NodeManagerFactory, Driver driver, Class<?>... initialPersistentClasses,  @AT@ 2601 @LENGTH@ 54
------INS SimpleName@@driver @TO@ ConstructorInvocation@@this(driver,Arrays.asList(initialPersistentClasses)); @AT@ 2606 @LENGTH@ 6
------INS MethodInvocation@@Arrays.asList(initialPersistentClasses) @TO@ ConstructorInvocation@@this(driver,Arrays.asList(initialPersistentClasses)); @AT@ 2614 @LENGTH@ 39
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(initialPersistentClasses) @AT@ 2614 @LENGTH@ 6
---------INS SimpleName@@MethodName:asList:[initialPersistentClasses] @TO@ MethodInvocation@@Arrays.asList(initialPersistentClasses) @AT@ 2621 @LENGTH@ 32
------------INS SimpleName@@initialPersistentClasses @TO@ SimpleName@@MethodName:asList:[initialPersistentClasses] @AT@ 2628 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:sb.append("<h2 class=\"form-signin-heading\">Login with OAuth 2.0</h3>") @TO@ MethodInvocation:sb.append("<h2 class=\"form-signin-heading\">Login with OAuth 2.0</h2>") @AT@ 10718 @LENGTH@ 73
---UPD MethodInvocation@@sb.append("<h2 class=\"form-signin-heading\">Login with OAuth 2.0</h3>") @TO@ sb.append("<h2 class=\"form-signin-heading\">Login with OAuth 2.0</h2>") @AT@ 10718 @LENGTH@ 72
------UPD SimpleName@@MethodName:append:["<h2 class=\"form-signin-heading\">Login with OAuth 2.0</h3>"] @TO@ MethodName:append:["<h2 class=\"form-signin-heading\">Login with OAuth 2.0</h2>"] @AT@ 10721 @LENGTH@ 69
---------UPD StringLiteral@@"<h2 class=\"form-signin-heading\">Login with OAuth 2.0</h3>" @TO@ "<h2 class=\"form-signin-heading\">Login with OAuth 2.0</h2>" @AT@ 10728 @LENGTH@ 61


UPD ExpressionStatement@@MethodInvocation:registry.put("kinesisClient",amazonKinesisClient) @TO@ MethodInvocation:registry.bind("kinesisClient",amazonKinesisClient) @AT@ 1633 @LENGTH@ 51
---UPD MethodInvocation@@registry.put("kinesisClient",amazonKinesisClient) @TO@ registry.bind("kinesisClient",amazonKinesisClient) @AT@ 1633 @LENGTH@ 50
------UPD SimpleName@@MethodName:put:["kinesisClient", amazonKinesisClient] @TO@ MethodName:bind:["kinesisClient", amazonKinesisClient] @AT@ 1642 @LENGTH@ 41


INS ExpressionStatement@@MethodInvocation:assertEquals(0,stats.size()) @TO@ MethodDeclaration@@public, void, MethodName:testTxnPartitions, Exception,  @AT@ 12212 @LENGTH@ 30
---INS MethodInvocation@@assertEquals(0,stats.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(0,stats.size()) @AT@ 12212 @LENGTH@ 29
------INS SimpleName@@MethodName:assertEquals:[0, stats.size()] @TO@ MethodInvocation@@assertEquals(0,stats.size()) @AT@ 12212 @LENGTH@ 29
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[0, stats.size()] @AT@ 12225 @LENGTH@ 1
---------INS MethodInvocation@@stats.size() @TO@ SimpleName@@MethodName:assertEquals:[0, stats.size()] @AT@ 12228 @LENGTH@ 12
------------INS SimpleName@@Name:stats @TO@ MethodInvocation@@stats.size() @AT@ 12228 @LENGTH@ 5
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@stats.size() @AT@ 12234 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:templateChannel.set(c) @TO@ MethodInvocation:templateChannel.set(((ChannelProxy)c).getTargetChannel()) @AT@ 15295 @LENGTH@ 23
---UPD MethodInvocation@@templateChannel.set(c) @TO@ templateChannel.set(((ChannelProxy)c).getTargetChannel()) @AT@ 15295 @LENGTH@ 22
------UPD SimpleName@@MethodName:set:[c] @TO@ MethodName:set:[((ChannelProxy)c).getTargetChannel()] @AT@ 15311 @LENGTH@ 6
---------INS MethodInvocation@@((ChannelProxy)c).getTargetChannel() @TO@ SimpleName@@MethodName:set:[c] @AT@ 15315 @LENGTH@ 37
------------INS ParenthesizedExpression@@((ChannelProxy)c) @TO@ MethodInvocation@@((ChannelProxy)c).getTargetChannel() @AT@ 15315 @LENGTH@ 18
---------------INS CastExpression@@(ChannelProxy)c @TO@ ParenthesizedExpression@@((ChannelProxy)c) @AT@ 15316 @LENGTH@ 16
------------------INS SimpleType@@ChannelProxy @TO@ CastExpression@@(ChannelProxy)c @AT@ 15317 @LENGTH@ 12
------------------INS SimpleName@@c @TO@ CastExpression@@(ChannelProxy)c @AT@ 15331 @LENGTH@ 1
------------INS SimpleName@@MethodName:getTargetChannel:[] @TO@ MethodInvocation@@((ChannelProxy)c).getTargetChannel() @AT@ 15334 @LENGTH@ 18
---------DEL SimpleName@@c @AT@ 15315 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:handlesCorsPreflightRequestsProperly, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.Silent.class), public]RepositoryRestHandlerMappingUnitTests,  @AT@ 10262 @LENGTH@ 527
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesCorsPreflightRequestsProperly, Exception,  @AT@ 10262 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesCorsPreflightRequestsProperly, Exception,  @AT@ 10269 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesCorsPreflightRequestsProperly @TO@ MethodDeclaration@@public, void, MethodName:handlesCorsPreflightRequestsProperly, Exception,  @AT@ 10274 @LENGTH@ 36
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:handlesCorsPreflightRequestsProperly, Exception,  @AT@ 10320 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:when(mappings.exportsTopLevelResourceFor("/people")).thenReturn(true) @TO@ MethodDeclaration@@public, void, MethodName:handlesCorsPreflightRequestsProperly, Exception,  @AT@ 10335 @LENGTH@ 70
------INS MethodInvocation@@when(mappings.exportsTopLevelResourceFor("/people")).thenReturn(true) @TO@ ExpressionStatement@@MethodInvocation:when(mappings.exportsTopLevelResourceFor("/people")).thenReturn(true) @AT@ 10335 @LENGTH@ 69
---------INS MethodInvocation@@MethodName:when:[mappings.exportsTopLevelResourceFor("/people")] @TO@ MethodInvocation@@when(mappings.exportsTopLevelResourceFor("/people")).thenReturn(true) @AT@ 10335 @LENGTH@ 52
------------INS MethodInvocation@@mappings.exportsTopLevelResourceFor("/people") @TO@ MethodInvocation@@MethodName:when:[mappings.exportsTopLevelResourceFor("/people")] @AT@ 10340 @LENGTH@ 46
---------------INS SimpleName@@Name:mappings @TO@ MethodInvocation@@mappings.exportsTopLevelResourceFor("/people") @AT@ 10340 @LENGTH@ 8
---------------INS SimpleName@@MethodName:exportsTopLevelResourceFor:["/people"] @TO@ MethodInvocation@@mappings.exportsTopLevelResourceFor("/people") @AT@ 10349 @LENGTH@ 37
------------------INS StringLiteral@@"/people" @TO@ SimpleName@@MethodName:exportsTopLevelResourceFor:["/people"] @AT@ 10376 @LENGTH@ 9
---------INS SimpleName@@MethodName:thenReturn:[true] @TO@ MethodInvocation@@when(mappings.exportsTopLevelResourceFor("/people")).thenReturn(true) @AT@ 10388 @LENGTH@ 16
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:thenReturn:[true] @AT@ 10399 @LENGTH@ 4
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("OPTIONS","/people/search"); @TO@ MethodDeclaration@@public, void, MethodName:handlesCorsPreflightRequestsProperly, Exception,  @AT@ 10409 @LENGTH@ 89
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("OPTIONS","/people/search"); @AT@ 10409 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest("OPTIONS","/people/search") @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("OPTIONS","/people/search"); @AT@ 10432 @LENGTH@ 65
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest("OPTIONS","/people/search") @AT@ 10432 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest["OPTIONS", "/people/search"] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest("OPTIONS","/people/search") @AT@ 10442 @LENGTH@ 55
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest["OPTIONS", "/people/search"] @AT@ 10442 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest["OPTIONS", "/people/search"] @AT@ 10446 @LENGTH@ 22
------------INS StringLiteral@@"OPTIONS" @TO@ ClassInstanceCreation@@MockHttpServletRequest["OPTIONS", "/people/search"] @AT@ 10469 @LENGTH@ 9
------------INS StringLiteral@@"/people/search" @TO@ ClassInstanceCreation@@MockHttpServletRequest["OPTIONS", "/people/search"] @AT@ 10480 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:request.addHeader(HttpHeaders.ORIGIN,"test case") @TO@ MethodDeclaration@@public, void, MethodName:handlesCorsPreflightRequestsProperly, Exception,  @AT@ 10501 @LENGTH@ 51
------INS MethodInvocation@@request.addHeader(HttpHeaders.ORIGIN,"test case") @TO@ ExpressionStatement@@MethodInvocation:request.addHeader(HttpHeaders.ORIGIN,"test case") @AT@ 10501 @LENGTH@ 50
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addHeader(HttpHeaders.ORIGIN,"test case") @AT@ 10501 @LENGTH@ 7
---------INS SimpleName@@MethodName:addHeader:[HttpHeaders.ORIGIN, "test case"] @TO@ MethodInvocation@@request.addHeader(HttpHeaders.ORIGIN,"test case") @AT@ 10509 @LENGTH@ 42
------------INS QualifiedName@@HttpHeaders.ORIGIN @TO@ SimpleName@@MethodName:addHeader:[HttpHeaders.ORIGIN, "test case"] @AT@ 10519 @LENGTH@ 18
---------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.ORIGIN @AT@ 10519 @LENGTH@ 11
---------------INS SimpleName@@ORIGIN @TO@ QualifiedName@@HttpHeaders.ORIGIN @AT@ 10531 @LENGTH@ 6
------------INS StringLiteral@@"test case" @TO@ SimpleName@@MethodName:addHeader:[HttpHeaders.ORIGIN, "test case"] @AT@ 10539 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:request.addHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD,"GET") @TO@ MethodDeclaration@@public, void, MethodName:handlesCorsPreflightRequestsProperly, Exception,  @AT@ 10555 @LENGTH@ 68
------INS MethodInvocation@@request.addHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD,"GET") @TO@ ExpressionStatement@@MethodInvocation:request.addHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD,"GET") @AT@ 10555 @LENGTH@ 67
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD,"GET") @AT@ 10555 @LENGTH@ 7
---------INS SimpleName@@MethodName:addHeader:[HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET"] @TO@ MethodInvocation@@request.addHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD,"GET") @AT@ 10563 @LENGTH@ 59
------------INS QualifiedName@@HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD @TO@ SimpleName@@MethodName:addHeader:[HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET"] @AT@ 10573 @LENGTH@ 41
---------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD @AT@ 10573 @LENGTH@ 11
---------------INS SimpleName@@ACCESS_CONTROL_REQUEST_METHOD @TO@ QualifiedName@@HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD @AT@ 10585 @LENGTH@ 29
------------INS StringLiteral@@"GET" @TO@ SimpleName@@MethodName:addHeader:[HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET"] @AT@ 10616 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:handlerMapping.afterPropertiesSet() @TO@ MethodDeclaration@@public, void, MethodName:handlesCorsPreflightRequestsProperly, Exception,  @AT@ 10627 @LENGTH@ 36
------INS MethodInvocation@@handlerMapping.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:handlerMapping.afterPropertiesSet() @AT@ 10627 @LENGTH@ 35
---------INS SimpleName@@Name:handlerMapping @TO@ MethodInvocation@@handlerMapping.afterPropertiesSet() @AT@ 10627 @LENGTH@ 14
---------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@handlerMapping.afterPropertiesSet() @AT@ 10642 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:assertThatCode(() -> handlerMapping.lookupHandlerMethod("/people/search",request)).doesNotThrowAnyException() @TO@ MethodDeclaration@@public, void, MethodName:handlesCorsPreflightRequestsProperly, Exception,  @AT@ 10667 @LENGTH@ 119
------INS MethodInvocation@@assertThatCode(() -> handlerMapping.lookupHandlerMethod("/people/search",request)).doesNotThrowAnyException() @TO@ ExpressionStatement@@MethodInvocation:assertThatCode(() -> handlerMapping.lookupHandlerMethod("/people/search",request)).doesNotThrowAnyException() @AT@ 10667 @LENGTH@ 118
---------INS MethodInvocation@@MethodName:assertThatCode:[() -> handlerMapping.lookupHandlerMethod("/people/search",request)] @TO@ MethodInvocation@@assertThatCode(() -> handlerMapping.lookupHandlerMethod("/people/search",request)).doesNotThrowAnyException() @AT@ 10667 @LENGTH@ 83
------------INS LambdaExpression@@() -> handlerMapping.lookupHandlerMethod("/people/search",request) @TO@ MethodInvocation@@MethodName:assertThatCode:[() -> handlerMapping.lookupHandlerMethod("/people/search",request)] @AT@ 10682 @LENGTH@ 67
---------------INS MethodInvocation@@handlerMapping.lookupHandlerMethod("/people/search",request) @TO@ LambdaExpression@@() -> handlerMapping.lookupHandlerMethod("/people/search",request) @AT@ 10688 @LENGTH@ 61
------------------INS SimpleName@@Name:handlerMapping @TO@ MethodInvocation@@handlerMapping.lookupHandlerMethod("/people/search",request) @AT@ 10688 @LENGTH@ 14
------------------INS SimpleName@@MethodName:lookupHandlerMethod:["/people/search", request] @TO@ MethodInvocation@@handlerMapping.lookupHandlerMethod("/people/search",request) @AT@ 10703 @LENGTH@ 46
---------------------INS StringLiteral@@"/people/search" @TO@ SimpleName@@MethodName:lookupHandlerMethod:["/people/search", request] @AT@ 10723 @LENGTH@ 16
---------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:lookupHandlerMethod:["/people/search", request] @AT@ 10741 @LENGTH@ 7
---------INS SimpleName@@MethodName:doesNotThrowAnyException:[] @TO@ MethodInvocation@@assertThatCode(() -> handlerMapping.lookupHandlerMethod("/people/search",request)).doesNotThrowAnyException() @AT@ 10759 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:exception.expect(anyOf(instanceOf(AmqpIOException.class),instanceOf(AmqpAuthenticationException.class))) @TO@ MethodInvocation:exception.expect(anyOf(instanceOf(AmqpIOException.class),instanceOf(AmqpAuthenticationException.class),instanceOf(AmqpConnectException.class))) @AT@ 11820 @LENGTH@ 110
---UPD MethodInvocation@@exception.expect(anyOf(instanceOf(AmqpIOException.class),instanceOf(AmqpAuthenticationException.class))) @TO@ exception.expect(anyOf(instanceOf(AmqpIOException.class),instanceOf(AmqpAuthenticationException.class),instanceOf(AmqpConnectException.class))) @AT@ 11820 @LENGTH@ 109
------UPD SimpleName@@MethodName:expect:[anyOf(instanceOf(AmqpIOException.class),instanceOf(AmqpAuthenticationException.class))] @TO@ MethodName:expect:[anyOf(instanceOf(AmqpIOException.class),instanceOf(AmqpAuthenticationException.class),instanceOf(AmqpConnectException.class))] @AT@ 11830 @LENGTH@ 99
---------UPD MethodInvocation@@anyOf(instanceOf(AmqpIOException.class),instanceOf(AmqpAuthenticationException.class)) @TO@ anyOf(instanceOf(AmqpIOException.class),instanceOf(AmqpAuthenticationException.class),instanceOf(AmqpConnectException.class)) @AT@ 11837 @LENGTH@ 91
------------UPD SimpleName@@MethodName:anyOf:[instanceOf(AmqpIOException.class), instanceOf(AmqpAuthenticationException.class)] @TO@ MethodName:anyOf:[instanceOf(AmqpIOException.class), instanceOf(AmqpAuthenticationException.class), instanceOf(AmqpConnectException.class)] @AT@ 11837 @LENGTH@ 91
---------------INS MethodInvocation@@instanceOf(AmqpConnectException.class) @TO@ SimpleName@@MethodName:anyOf:[instanceOf(AmqpIOException.class), instanceOf(AmqpAuthenticationException.class)] @AT@ 12187 @LENGTH@ 38
------------------INS SimpleName@@MethodName:instanceOf:[AmqpConnectException.class] @TO@ MethodInvocation@@instanceOf(AmqpConnectException.class) @AT@ 12187 @LENGTH@ 38
---------------------INS TypeLiteral@@AmqpConnectException.class @TO@ SimpleName@@MethodName:instanceOf:[AmqpConnectException.class] @AT@ 12198 @LENGTH@ 26
------------------INS SimpleName@@MethodName:instanceOf:[AmqpConnectException.class] @TO@ MethodInvocation@@instanceOf(AmqpConnectException.class) @AT@ 12187 @LENGTH@ 38
---------------------INS TypeLiteral@@AmqpConnectException.class @TO@ SimpleName@@MethodName:instanceOf:[AmqpConnectException.class] @AT@ 12198 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(configuration,options) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 2389 @LENGTH@ 59
---UPD MethodInvocation@@IntrospectionSupport.setProperties(configuration,options) @TO@ PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 2389 @LENGTH@ 58
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 2389 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[configuration, options] @TO@ MethodName:bindProperties:[context, configuration, options] @AT@ 2410 @LENGTH@ 37
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:setProperties:[configuration, options] @AT@ 2429 @LENGTH@ 7


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1279 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1279 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1286 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1294 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1324 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1331 @LENGTH@ 5


INS FieldDeclaration@@private, static, final, String, [XSS_PROTECTION_HEADER="X-XSS-Protection"] @TO@ TypeDeclaration@@[public]XXssProtectionHeaderWriterTests,  @AT@ 1144 @LENGTH@ 71
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [XSS_PROTECTION_HEADER="X-XSS-Protection"] @AT@ 1144 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [XSS_PROTECTION_HEADER="X-XSS-Protection"] @AT@ 1152 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [XSS_PROTECTION_HEADER="X-XSS-Protection"] @AT@ 1159 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [XSS_PROTECTION_HEADER="X-XSS-Protection"] @AT@ 1165 @LENGTH@ 6
---INS VariableDeclarationFragment@@XSS_PROTECTION_HEADER="X-XSS-Protection" @TO@ FieldDeclaration@@private, static, final, String, [XSS_PROTECTION_HEADER="X-XSS-Protection"] @AT@ 1172 @LENGTH@ 42
------INS SimpleName@@XSS_PROTECTION_HEADER @TO@ VariableDeclarationFragment@@XSS_PROTECTION_HEADER="X-XSS-Protection" @AT@ 1172 @LENGTH@ 21
------INS StringLiteral@@"X-XSS-Protection" @TO@ VariableDeclarationFragment@@XSS_PROTECTION_HEADER="X-XSS-Protection" @AT@ 1196 @LENGTH@ 18


UPD FieldDeclaration@@Exchange, [copy=null] @TO@ Exchange, [copy] @AT@ 5895 @LENGTH@ 21
---UPD VariableDeclarationFragment@@copy=null @TO@ copy @AT@ 5904 @LENGTH@ 11
------DEL NullLiteral@@null @AT@ 5911 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:givenPulsarEndpointConfigurationIsNull_throwIllegalArgumentExceptionOnCreation, PulsarClientException,  @TO@ public, void, MethodName:givenPulsarEndpointConfigurationIsNullthrowIllegalArgumentExceptionOnCreation, PulsarClientException,  @AT@ 1023 @LENGTH@ 186
---UPD SimpleName@@MethodName:givenPulsarEndpointConfigurationIsNull_throwIllegalArgumentExceptionOnCreation @TO@ MethodName:givenPulsarEndpointConfigurationIsNullthrowIllegalArgumentExceptionOnCreation @AT@ 1035 @LENGTH@ 78


UPD ReturnStatement@@ConditionalExpression:nodeList == null ? false : index < nodeList.getLength() @TO@ InfixExpression:nodeList != null && index < nodeList.getLength() @AT@ 2228 @LENGTH@ 63
---DEL ConditionalExpression@@nodeList == null ? false : index < nodeList.getLength() @AT@ 2235 @LENGTH@ 55
------DEL InfixExpression@@nodeList == null @AT@ 2235 @LENGTH@ 16
------DEL BooleanLiteral@@false @AT@ 2254 @LENGTH@ 5
---INS InfixExpression@@nodeList != null && index < nodeList.getLength() @TO@ ReturnStatement@@ConditionalExpression:nodeList == null ? false : index < nodeList.getLength() @AT@ 2235 @LENGTH@ 48
------INS InfixExpression@@nodeList != null @TO@ InfixExpression@@nodeList != null && index < nodeList.getLength() @AT@ 2235 @LENGTH@ 16
---------MOV SimpleName@@nodeList @TO@ InfixExpression@@nodeList != null @AT@ 2235 @LENGTH@ 8
---------MOV Operator@@== @TO@ InfixExpression@@nodeList != null @AT@ 2243 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@nodeList != null @AT@ 2247 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@nodeList != null && index < nodeList.getLength() @AT@ 2251 @LENGTH@ 2
------MOV InfixExpression@@index < nodeList.getLength() @TO@ InfixExpression@@nodeList != null && index < nodeList.getLength() @AT@ 2262 @LENGTH@ 28


INS MethodDeclaration@@private, JavaType, MethodName:fromTypeHeader, MessageProperties properties, String typeIdHeader,  @TO@ TypeDeclaration@@[public]DefaultJackson2JavaTypeMapper, AbstractJavaTypeMapper[Jackson2JavaTypeMapper, ClassMapper] @AT@ 4401 @LENGTH@ 717
---MOV VariableDeclarationStatement@@JavaType classType=getClassIdType(typeIdHeader); @TO@ MethodDeclaration@@private, JavaType, MethodName:fromTypeHeader, MessageProperties properties, String typeIdHeader,  @AT@ 4193 @LENGTH@ 50
---MOV IfStatement@@if (!classType.isContainerType() || classType.isArrayType()) {  return classType;} @TO@ MethodDeclaration@@private, JavaType, MethodName:fromTypeHeader, MessageProperties properties, String typeIdHeader,  @AT@ 4247 @LENGTH@ 89
---MOV VariableDeclarationStatement@@JavaType contentClassType=getClassIdType(retrieveHeader(properties,getContentClassIdFieldName())); @TO@ MethodDeclaration@@private, JavaType, MethodName:fromTypeHeader, MessageProperties properties, String typeIdHeader,  @AT@ 4341 @LENGTH@ 101
---INS Modifier@@private @TO@ MethodDeclaration@@private, JavaType, MethodName:fromTypeHeader, MessageProperties properties, String typeIdHeader,  @AT@ 4401 @LENGTH@ 7
---INS SimpleType@@JavaType @TO@ MethodDeclaration@@private, JavaType, MethodName:fromTypeHeader, MessageProperties properties, String typeIdHeader,  @AT@ 4409 @LENGTH@ 8
---INS SimpleName@@MethodName:fromTypeHeader @TO@ MethodDeclaration@@private, JavaType, MethodName:fromTypeHeader, MessageProperties properties, String typeIdHeader,  @AT@ 4418 @LENGTH@ 14
---INS SingleVariableDeclaration@@MessageProperties properties @TO@ MethodDeclaration@@private, JavaType, MethodName:fromTypeHeader, MessageProperties properties, String typeIdHeader,  @AT@ 4433 @LENGTH@ 28
------INS SimpleType@@MessageProperties @TO@ SingleVariableDeclaration@@MessageProperties properties @AT@ 4433 @LENGTH@ 17
------INS SimpleName@@properties @TO@ SingleVariableDeclaration@@MessageProperties properties @AT@ 4451 @LENGTH@ 10
---MOV IfStatement@@if (classType.getKeyType() == null) {  return TypeFactory.defaultInstance().constructCollectionLikeType(classType.getRawClass(),contentClassType);} @TO@ MethodDeclaration@@private, JavaType, MethodName:fromTypeHeader, MessageProperties properties, String typeIdHeader,  @AT@ 4446 @LENGTH@ 162
---INS SingleVariableDeclaration@@String typeIdHeader @TO@ MethodDeclaration@@private, JavaType, MethodName:fromTypeHeader, MessageProperties properties, String typeIdHeader,  @AT@ 4463 @LENGTH@ 19
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String typeIdHeader @AT@ 4463 @LENGTH@ 6
------INS SimpleName@@typeIdHeader @TO@ SingleVariableDeclaration@@String typeIdHeader @AT@ 4470 @LENGTH@ 12
---MOV VariableDeclarationStatement@@JavaType keyClassType=getClassIdType(retrieveHeader(properties,getKeyClassIdFieldName())); @TO@ MethodDeclaration@@private, JavaType, MethodName:fromTypeHeader, MessageProperties properties, String typeIdHeader,  @AT@ 4613 @LENGTH@ 93
---MOV ReturnStatement@@MethodInvocation:TypeFactory.defaultInstance().constructMapLikeType(classType.getRawClass(),keyClassType,contentClassType) @TO@ MethodDeclaration@@private, JavaType, MethodName:fromTypeHeader, MessageProperties properties, String typeIdHeader,  @AT@ 4710 @LENGTH@ 121


INS FieldDeclaration@@String, [HANDLE_EXCEPTION_WI_PARAM="HandleExceptions"] @TO@ TypeDeclaration@@[public]JBPMConstants,  @AT@ 2207 @LENGTH@ 54
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [HANDLE_EXCEPTION_WI_PARAM="HandleExceptions"] @AT@ 2207 @LENGTH@ 6
---INS VariableDeclarationFragment@@HANDLE_EXCEPTION_WI_PARAM="HandleExceptions" @TO@ FieldDeclaration@@String, [HANDLE_EXCEPTION_WI_PARAM="HandleExceptions"] @AT@ 2214 @LENGTH@ 46
------INS SimpleName@@HANDLE_EXCEPTION_WI_PARAM @TO@ VariableDeclarationFragment@@HANDLE_EXCEPTION_WI_PARAM="HandleExceptions" @AT@ 2214 @LENGTH@ 25
------INS StringLiteral@@"HandleExceptions" @TO@ VariableDeclarationFragment@@HANDLE_EXCEPTION_WI_PARAM="HandleExceptions" @AT@ 2242 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(configuration,options) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 4802 @LENGTH@ 59
---UPD MethodInvocation@@IntrospectionSupport.setProperties(configuration,options) @TO@ PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 4802 @LENGTH@ 58
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 4802 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[configuration, options] @TO@ MethodName:bindProperties:[context, configuration, options] @AT@ 4823 @LENGTH@ 37
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:setProperties:[configuration, options] @AT@ 4842 @LENGTH@ 7


UPD VariableDeclarationStatement@@File[] names=root.listFiles(pathname -> pathname.getName().equals("camel-core")); @TO@ File[] names=root.listFiles(pathname -> pathname.getName().equals("core")); @AT@ 1235 @LENGTH@ 83
---UPD VariableDeclarationFragment@@names=root.listFiles(pathname -> pathname.getName().equals("camel-core")) @TO@ names=root.listFiles(pathname -> pathname.getName().equals("core")) @AT@ 1242 @LENGTH@ 75
------UPD MethodInvocation@@root.listFiles(pathname -> pathname.getName().equals("camel-core")) @TO@ root.listFiles(pathname -> pathname.getName().equals("core")) @AT@ 1250 @LENGTH@ 67
---------UPD SimpleName@@MethodName:listFiles:[pathname -> pathname.getName().equals("camel-core")] @TO@ MethodName:listFiles:[pathname -> pathname.getName().equals("core")] @AT@ 1255 @LENGTH@ 62
------------UPD LambdaExpression@@pathname -> pathname.getName().equals("camel-core") @TO@ pathname -> pathname.getName().equals("core") @AT@ 1265 @LENGTH@ 51
---------------UPD MethodInvocation@@pathname.getName().equals("camel-core") @TO@ pathname.getName().equals("core") @AT@ 1277 @LENGTH@ 39
------------------UPD SimpleName@@MethodName:equals:["camel-core"] @TO@ MethodName:equals:["core"] @AT@ 1296 @LENGTH@ 20
---------------------UPD StringLiteral@@"camel-core" @TO@ "core" @AT@ 1303 @LENGTH@ 12


UPD IfStatement@@if (value == 0) {  return "";} @TO@ if (value <= 0) {  return "";} @AT@ 11981 @LENGTH@ 50
---UPD InfixExpression@@value == 0 @TO@ value <= 0 @AT@ 11985 @LENGTH@ 10
------UPD Operator@@== @TO@ <= @AT@ 11990 @LENGTH@ 2


INS MethodDeclaration@@public, HttpBasicSpec, MethodName:authenticationEntryPoint, ServerAuthenticationEntryPoint authenticationEntryPoint,  @TO@ TypeDeclaration@@[public]HttpBasicSpec,  @AT@ 73776 @LENGTH@ 258
---INS Modifier@@public @TO@ MethodDeclaration@@public, HttpBasicSpec, MethodName:authenticationEntryPoint, ServerAuthenticationEntryPoint authenticationEntryPoint,  @AT@ 73776 @LENGTH@ 6
---INS SimpleType@@HttpBasicSpec @TO@ MethodDeclaration@@public, HttpBasicSpec, MethodName:authenticationEntryPoint, ServerAuthenticationEntryPoint authenticationEntryPoint,  @AT@ 73783 @LENGTH@ 13
---INS SimpleName@@MethodName:authenticationEntryPoint @TO@ MethodDeclaration@@public, HttpBasicSpec, MethodName:authenticationEntryPoint, ServerAuthenticationEntryPoint authenticationEntryPoint,  @AT@ 73797 @LENGTH@ 24
---INS SingleVariableDeclaration@@ServerAuthenticationEntryPoint authenticationEntryPoint @TO@ MethodDeclaration@@public, HttpBasicSpec, MethodName:authenticationEntryPoint, ServerAuthenticationEntryPoint authenticationEntryPoint,  @AT@ 73822 @LENGTH@ 55
------INS SimpleType@@ServerAuthenticationEntryPoint @TO@ SingleVariableDeclaration@@ServerAuthenticationEntryPoint authenticationEntryPoint @AT@ 73822 @LENGTH@ 30
------INS SimpleName@@authenticationEntryPoint @TO@ SingleVariableDeclaration@@ServerAuthenticationEntryPoint authenticationEntryPoint @AT@ 73853 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(authenticationEntryPoint,"authenticationEntryPoint cannot be null") @TO@ MethodDeclaration@@public, HttpBasicSpec, MethodName:authenticationEntryPoint, ServerAuthenticationEntryPoint authenticationEntryPoint,  @AT@ 73883 @LENGTH@ 84
------INS MethodInvocation@@Assert.notNull(authenticationEntryPoint,"authenticationEntryPoint cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(authenticationEntryPoint,"authenticationEntryPoint cannot be null") @AT@ 73883 @LENGTH@ 83
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(authenticationEntryPoint,"authenticationEntryPoint cannot be null") @AT@ 73883 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[authenticationEntryPoint, "authenticationEntryPoint cannot be null"] @TO@ MethodInvocation@@Assert.notNull(authenticationEntryPoint,"authenticationEntryPoint cannot be null") @AT@ 73890 @LENGTH@ 76
------------INS SimpleName@@authenticationEntryPoint @TO@ SimpleName@@MethodName:notNull:[authenticationEntryPoint, "authenticationEntryPoint cannot be null"] @AT@ 73898 @LENGTH@ 24
------------INS StringLiteral@@"authenticationEntryPoint cannot be null" @TO@ SimpleName@@MethodName:notNull:[authenticationEntryPoint, "authenticationEntryPoint cannot be null"] @AT@ 73924 @LENGTH@ 41
---INS ExpressionStatement@@Assignment:this.entryPoint=authenticationEntryPoint @TO@ MethodDeclaration@@public, HttpBasicSpec, MethodName:authenticationEntryPoint, ServerAuthenticationEntryPoint authenticationEntryPoint,  @AT@ 73971 @LENGTH@ 43
------INS Assignment@@this.entryPoint=authenticationEntryPoint @TO@ ExpressionStatement@@Assignment:this.entryPoint=authenticationEntryPoint @AT@ 73971 @LENGTH@ 42
---------INS FieldAccess@@this.entryPoint @TO@ Assignment@@this.entryPoint=authenticationEntryPoint @AT@ 73971 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.entryPoint @AT@ 73971 @LENGTH@ 4
------------INS SimpleName@@entryPoint @TO@ FieldAccess@@this.entryPoint @AT@ 73976 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@this.entryPoint=authenticationEntryPoint @AT@ 73986 @LENGTH@ 1
---------INS SimpleName@@authenticationEntryPoint @TO@ Assignment@@this.entryPoint=authenticationEntryPoint @AT@ 73989 @LENGTH@ 24
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, HttpBasicSpec, MethodName:authenticationEntryPoint, ServerAuthenticationEntryPoint authenticationEntryPoint,  @AT@ 74018 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 74025 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(getCamelContext(),getCamelContext().getTypeConverter(),conf,map) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(getCamelContext(),conf,map) @AT@ 8053 @LENGTH@ 103
---UPD MethodInvocation@@IntrospectionSupport.setProperties(getCamelContext(),getCamelContext().getTypeConverter(),conf,map) @TO@ PropertyBindingSupport.bindProperties(getCamelContext(),conf,map) @AT@ 8053 @LENGTH@ 102
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 8053 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[getCamelContext(), getCamelContext().getTypeConverter(), conf, map] @TO@ MethodName:bindProperties:[getCamelContext(), conf, map] @AT@ 8074 @LENGTH@ 81
---------DEL MethodInvocation@@getCamelContext().getTypeConverter() @AT@ 8107 @LENGTH@ 36
------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 8107 @LENGTH@ 17
------------DEL SimpleName@@MethodName:getTypeConverter:[] @AT@ 8125 @LENGTH@ 18


DEL ExpressionStatement@@Assignment:this.databaseName=databaseName @AT@ 1935 @LENGTH@ 33
---DEL Assignment@@this.databaseName=databaseName @AT@ 1935 @LENGTH@ 32
------DEL FieldAccess@@this.databaseName @AT@ 1935 @LENGTH@ 17
---------DEL ThisExpression@@this @AT@ 1935 @LENGTH@ 4
---------DEL SimpleName@@databaseName @AT@ 1940 @LENGTH@ 12
------DEL Operator@@= @AT@ 1952 @LENGTH@ 1
------DEL SimpleName@@databaseName @AT@ 1955 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:registry.put("activemq",connectionFactory) @TO@ MethodInvocation:registry.bind("activemq",connectionFactory) @AT@ 2965 @LENGTH@ 44
---UPD MethodInvocation@@registry.put("activemq",connectionFactory) @TO@ registry.bind("activemq",connectionFactory) @AT@ 2965 @LENGTH@ 43
------UPD SimpleName@@MethodName:put:["activemq", connectionFactory] @TO@ MethodName:bind:["activemq", connectionFactory] @AT@ 2974 @LENGTH@ 34


UPD IfStatement@@if (oidcAuthenticationProviderEnabled) {  OAuth2UserService<OidcUserRequest,OidcUser> oidcUserService=this.userInfoEndpointConfig.oidcUserService;  if (oidcUserService == null) {    oidcUserService=new OidcUserService();  }  OidcAuthorizationCodeAuthenticationProvider oidcAuthorizationCodeAuthenticationProvider=new OidcAuthorizationCodeAuthenticationProvider(accessTokenResponseClient,oidcUserService);  if (userAuthoritiesMapper != null) {    oidcAuthorizationCodeAuthenticationProvider.setAuthoritiesMapper(userAuthoritiesMapper);  }  http.authenticationProvider(this.postProcess(oidcAuthorizationCodeAuthenticationProvider));} else {  http.authenticationProvider(new OidcAuthenticationRequestChecker());} @TO@ if (oidcAuthenticationProviderEnabled) {  OAuth2UserService<OidcUserRequest,OidcUser> oidcUserService=this.userInfoEndpointConfig.oidcUserService;  if (oidcUserService == null) {    oidcUserService=new OidcUserService();  }  OidcAuthorizationCodeAuthenticationProvider oidcAuthorizationCodeAuthenticationProvider=new OidcAuthorizationCodeAuthenticationProvider(accessTokenResponseClient,oidcUserService);  JwtDecoderFactory<ClientRegistration> jwtDecoderFactory=this.getJwtDecoderFactoryBean();  if (jwtDecoderFactory != null) {    oidcAuthorizationCodeAuthenticationProvider.setJwtDecoderFactory(jwtDecoderFactory);  }  if (userAuthoritiesMapper != null) {    oidcAuthorizationCodeAuthenticationProvider.setAuthoritiesMapper(userAuthoritiesMapper);  }  http.authenticationProvider(this.postProcess(oidcAuthorizationCodeAuthenticationProvider));} else {  http.authenticationProvider(new OidcAuthenticationRequestChecker());} @AT@ 21313 @LENGTH@ 746
---UPD Block@@ThenBody:{  OAuth2UserService<OidcUserRequest,OidcUser> oidcUserService=this.userInfoEndpointConfig.oidcUserService;  if (oidcUserService == null) {    oidcUserService=new OidcUserService();  }  OidcAuthorizationCodeAuthenticationProvider oidcAuthorizationCodeAuthenticationProvider=new OidcAuthorizationCodeAuthenticationProvider(accessTokenResponseClient,oidcUserService);  if (userAuthoritiesMapper != null) {    oidcAuthorizationCodeAuthenticationProvider.setAuthoritiesMapper(userAuthoritiesMapper);  }  http.authenticationProvider(this.postProcess(oidcAuthorizationCodeAuthenticationProvider));} @TO@ ThenBody:{  OAuth2UserService<OidcUserRequest,OidcUser> oidcUserService=this.userInfoEndpointConfig.oidcUserService;  if (oidcUserService == null) {    oidcUserService=new OidcUserService();  }  OidcAuthorizationCodeAuthenticationProvider oidcAuthorizationCodeAuthenticationProvider=new OidcAuthorizationCodeAuthenticationProvider(accessTokenResponseClient,oidcUserService);  JwtDecoderFactory<ClientRegistration> jwtDecoderFactory=this.getJwtDecoderFactoryBean();  if (jwtDecoderFactory != null) {    oidcAuthorizationCodeAuthenticationProvider.setJwtDecoderFactory(jwtDecoderFactory);  }  if (userAuthoritiesMapper != null) {    oidcAuthorizationCodeAuthenticationProvider.setAuthoritiesMapper(userAuthoritiesMapper);  }  http.authenticationProvider(this.postProcess(oidcAuthorizationCodeAuthenticationProvider));} @AT@ 21352 @LENGTH@ 624
------INS VariableDeclarationStatement@@JwtDecoderFactory<ClientRegistration> jwtDecoderFactory=this.getJwtDecoderFactoryBean(); @TO@ Block@@ThenBody:{  OAuth2UserService<OidcUserRequest,OidcUser> oidcUserService=this.userInfoEndpointConfig.oidcUserService;  if (oidcUserService == null) {    oidcUserService=new OidcUserService();  }  OidcAuthorizationCodeAuthenticationProvider oidcAuthorizationCodeAuthenticationProvider=new OidcAuthorizationCodeAuthenticationProvider(accessTokenResponseClient,oidcUserService);  if (userAuthoritiesMapper != null) {    oidcAuthorizationCodeAuthenticationProvider.setAuthoritiesMapper(userAuthoritiesMapper);  }  http.authenticationProvider(this.postProcess(oidcAuthorizationCodeAuthenticationProvider));} @AT@ 21883 @LENGTH@ 90
---------INS ParameterizedType@@JwtDecoderFactory<ClientRegistration> @TO@ VariableDeclarationStatement@@JwtDecoderFactory<ClientRegistration> jwtDecoderFactory=this.getJwtDecoderFactoryBean(); @AT@ 21883 @LENGTH@ 37
------------INS SimpleType@@JwtDecoderFactory @TO@ ParameterizedType@@JwtDecoderFactory<ClientRegistration> @AT@ 21883 @LENGTH@ 17
------------INS SimpleType@@ClientRegistration @TO@ ParameterizedType@@JwtDecoderFactory<ClientRegistration> @AT@ 21901 @LENGTH@ 18
---------INS VariableDeclarationFragment@@jwtDecoderFactory=this.getJwtDecoderFactoryBean() @TO@ VariableDeclarationStatement@@JwtDecoderFactory<ClientRegistration> jwtDecoderFactory=this.getJwtDecoderFactoryBean(); @AT@ 21921 @LENGTH@ 51
------------INS SimpleName@@jwtDecoderFactory @TO@ VariableDeclarationFragment@@jwtDecoderFactory=this.getJwtDecoderFactoryBean() @AT@ 21921 @LENGTH@ 17
------------INS MethodInvocation@@this.getJwtDecoderFactoryBean() @TO@ VariableDeclarationFragment@@jwtDecoderFactory=this.getJwtDecoderFactoryBean() @AT@ 21941 @LENGTH@ 31
---------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getJwtDecoderFactoryBean() @AT@ 21941 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getJwtDecoderFactoryBean:[] @TO@ MethodInvocation@@this.getJwtDecoderFactoryBean() @AT@ 21946 @LENGTH@ 26
------INS IfStatement@@if (jwtDecoderFactory != null) {  oidcAuthorizationCodeAuthenticationProvider.setJwtDecoderFactory(jwtDecoderFactory);} @TO@ Block@@ThenBody:{  OAuth2UserService<OidcUserRequest,OidcUser> oidcUserService=this.userInfoEndpointConfig.oidcUserService;  if (oidcUserService == null) {    oidcUserService=new OidcUserService();  }  OidcAuthorizationCodeAuthenticationProvider oidcAuthorizationCodeAuthenticationProvider=new OidcAuthorizationCodeAuthenticationProvider(accessTokenResponseClient,oidcUserService);  if (userAuthoritiesMapper != null) {    oidcAuthorizationCodeAuthenticationProvider.setAuthoritiesMapper(userAuthoritiesMapper);  }  http.authenticationProvider(this.postProcess(oidcAuthorizationCodeAuthenticationProvider));} @AT@ 21977 @LENGTH@ 126
---------INS InfixExpression@@jwtDecoderFactory != null @TO@ IfStatement@@if (jwtDecoderFactory != null) {  oidcAuthorizationCodeAuthenticationProvider.setJwtDecoderFactory(jwtDecoderFactory);} @AT@ 21981 @LENGTH@ 25
------------INS SimpleName@@jwtDecoderFactory @TO@ InfixExpression@@jwtDecoderFactory != null @AT@ 21981 @LENGTH@ 17
------------INS Operator@@!= @TO@ InfixExpression@@jwtDecoderFactory != null @AT@ 21998 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@jwtDecoderFactory != null @AT@ 22002 @LENGTH@ 4
---------INS Block@@ThenBody:{  oidcAuthorizationCodeAuthenticationProvider.setJwtDecoderFactory(jwtDecoderFactory);} @TO@ IfStatement@@if (jwtDecoderFactory != null) {  oidcAuthorizationCodeAuthenticationProvider.setJwtDecoderFactory(jwtDecoderFactory);} @AT@ 22008 @LENGTH@ 95
------------INS ExpressionStatement@@MethodInvocation:oidcAuthorizationCodeAuthenticationProvider.setJwtDecoderFactory(jwtDecoderFactory) @TO@ Block@@ThenBody:{  oidcAuthorizationCodeAuthenticationProvider.setJwtDecoderFactory(jwtDecoderFactory);} @AT@ 22014 @LENGTH@ 84
---------------INS MethodInvocation@@oidcAuthorizationCodeAuthenticationProvider.setJwtDecoderFactory(jwtDecoderFactory) @TO@ ExpressionStatement@@MethodInvocation:oidcAuthorizationCodeAuthenticationProvider.setJwtDecoderFactory(jwtDecoderFactory) @AT@ 22014 @LENGTH@ 83
------------------INS SimpleName@@Name:oidcAuthorizationCodeAuthenticationProvider @TO@ MethodInvocation@@oidcAuthorizationCodeAuthenticationProvider.setJwtDecoderFactory(jwtDecoderFactory) @AT@ 22014 @LENGTH@ 43
------------------INS SimpleName@@MethodName:setJwtDecoderFactory:[jwtDecoderFactory] @TO@ MethodInvocation@@oidcAuthorizationCodeAuthenticationProvider.setJwtDecoderFactory(jwtDecoderFactory) @AT@ 22058 @LENGTH@ 39
---------------------INS SimpleName@@jwtDecoderFactory @TO@ SimpleName@@MethodName:setJwtDecoderFactory:[jwtDecoderFactory] @AT@ 22079 @LENGTH@ 17


INS MethodDeclaration@@private, voidMethodName:ExpressionBuilder,  @TO@ TypeDeclaration@@[public]ExpressionBuilder,  @AT@ 2259 @LENGTH@ 35
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:ExpressionBuilder,  @AT@ 2259 @LENGTH@ 7
---INS SimpleName@@MethodName:ExpressionBuilder @TO@ MethodDeclaration@@private, voidMethodName:ExpressionBuilder,  @AT@ 2267 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:setClockSkewWhenNullThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[public]OidcIdTokenValidatorTests,  @AT@ 2355 @LENGTH@ 282
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setClockSkewWhenNullThenThrowIllegalArgumentException,  @AT@ 2355 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setClockSkewWhenNullThenThrowIllegalArgumentException,  @AT@ 2362 @LENGTH@ 4
---INS SimpleName@@MethodName:setClockSkewWhenNullThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setClockSkewWhenNullThenThrowIllegalArgumentException,  @AT@ 2367 @LENGTH@ 53
---INS VariableDeclarationStatement@@OidcIdTokenValidator idTokenValidator=new OidcIdTokenValidator(this.registration.build()); @TO@ MethodDeclaration@@public, void, MethodName:setClockSkewWhenNullThenThrowIllegalArgumentException,  @AT@ 2427 @LENGTH@ 92
------INS SimpleType@@OidcIdTokenValidator @TO@ VariableDeclarationStatement@@OidcIdTokenValidator idTokenValidator=new OidcIdTokenValidator(this.registration.build()); @AT@ 2427 @LENGTH@ 20
------INS VariableDeclarationFragment@@idTokenValidator=new OidcIdTokenValidator(this.registration.build()) @TO@ VariableDeclarationStatement@@OidcIdTokenValidator idTokenValidator=new OidcIdTokenValidator(this.registration.build()); @AT@ 2448 @LENGTH@ 70
---------INS SimpleName@@idTokenValidator @TO@ VariableDeclarationFragment@@idTokenValidator=new OidcIdTokenValidator(this.registration.build()) @AT@ 2448 @LENGTH@ 16
---------INS ClassInstanceCreation@@OidcIdTokenValidator[this.registration.build()] @TO@ VariableDeclarationFragment@@idTokenValidator=new OidcIdTokenValidator(this.registration.build()) @AT@ 2467 @LENGTH@ 51
------------INS New@@new @TO@ ClassInstanceCreation@@OidcIdTokenValidator[this.registration.build()] @AT@ 2467 @LENGTH@ 3
------------INS SimpleType@@OidcIdTokenValidator @TO@ ClassInstanceCreation@@OidcIdTokenValidator[this.registration.build()] @AT@ 2471 @LENGTH@ 20
------------INS MethodInvocation@@this.registration.build() @TO@ ClassInstanceCreation@@OidcIdTokenValidator[this.registration.build()] @AT@ 2492 @LENGTH@ 25
---------------INS FieldAccess@@this.registration @TO@ MethodInvocation@@this.registration.build() @AT@ 2492 @LENGTH@ 17
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration @AT@ 2492 @LENGTH@ 4
------------------INS SimpleName@@registration @TO@ FieldAccess@@this.registration @AT@ 2497 @LENGTH@ 12
---------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@this.registration.build() @AT@ 2510 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> idTokenValidator.setClockSkew(null)).isInstanceOf(IllegalArgumentException.class) @TO@ MethodDeclaration@@public, void, MethodName:setClockSkewWhenNullThenThrowIllegalArgumentException,  @AT@ 2522 @LENGTH@ 112
------INS MethodInvocation@@assertThatThrownBy(() -> idTokenValidator.setClockSkew(null)).isInstanceOf(IllegalArgumentException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> idTokenValidator.setClockSkew(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 2522 @LENGTH@ 111
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> idTokenValidator.setClockSkew(null)] @TO@ MethodInvocation@@assertThatThrownBy(() -> idTokenValidator.setClockSkew(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 2522 @LENGTH@ 61
------------INS LambdaExpression@@() -> idTokenValidator.setClockSkew(null) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> idTokenValidator.setClockSkew(null)] @AT@ 2541 @LENGTH@ 41
---------------INS MethodInvocation@@idTokenValidator.setClockSkew(null) @TO@ LambdaExpression@@() -> idTokenValidator.setClockSkew(null) @AT@ 2547 @LENGTH@ 35
------------------INS SimpleName@@Name:idTokenValidator @TO@ MethodInvocation@@idTokenValidator.setClockSkew(null) @AT@ 2547 @LENGTH@ 16
------------------INS SimpleName@@MethodName:setClockSkew:[null] @TO@ MethodInvocation@@idTokenValidator.setClockSkew(null) @AT@ 2564 @LENGTH@ 18
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setClockSkew:[null] @AT@ 2577 @LENGTH@ 4
---------INS SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> idTokenValidator.setClockSkew(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 2589 @LENGTH@ 44
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 2602 @LENGTH@ 30


UPD TryStatement@@try {  cacheLock.writeLock().lock();  if (!isTableCachePrewarmed) {    tablesDeletedDuringPrewarm.add(CacheUtils.buildTableKey(catName,dbName,tblName));  }  TableWrapper tblWrapper=tableCache.remove(CacheUtils.buildTableKey(catName,dbName,tblName));  if (tblWrapper == null) {    return;  }  if (tblWrapper != null) {    byte[] sdHash=tblWrapper.getSdHash();    if (sdHash != null) {      decrSd(sdHash);    }    isTableCacheDirty.set(true);  }}  finally {  cacheLock.writeLock().unlock();} @TO@ try {  cacheLock.writeLock().lock();  if (!isTableCachePrewarmed) {    tablesDeletedDuringPrewarm.add(CacheUtils.buildTableKey(catName,dbName,tblName));  }  TableWrapper tblWrapper=tableCache.remove(CacheUtils.buildTableKey(catName,dbName,tblName));  if (tblWrapper == null) {    return;  }  byte[] sdHash=tblWrapper.getSdHash();  if (sdHash != null) {    decrSd(sdHash);  }  isTableCacheDirty.set(true);}  finally {  cacheLock.writeLock().unlock();} @AT@ 50428 @LENGTH@ 800
---DEL IfStatement@@if (tblWrapper != null) {  byte[] sdHash=tblWrapper.getSdHash();  if (sdHash != null) {    decrSd(sdHash);  }  isTableCacheDirty.set(true);} @AT@ 50984 @LENGTH@ 184
------DEL InfixExpression@@tblWrapper != null @AT@ 50988 @LENGTH@ 18
---------DEL SimpleName@@tblWrapper @AT@ 50988 @LENGTH@ 10
---------DEL Operator@@!= @AT@ 50998 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 51002 @LENGTH@ 4
------DEL Block@@ThenBody:{  byte[] sdHash=tblWrapper.getSdHash();  if (sdHash != null) {    decrSd(sdHash);  }  isTableCacheDirty.set(true);} @AT@ 51008 @LENGTH@ 160
---MOV VariableDeclarationStatement@@byte[] sdHash=tblWrapper.getSdHash(); @TO@ TryStatement@@try {  cacheLock.writeLock().lock();  if (!isTableCachePrewarmed) {    tablesDeletedDuringPrewarm.add(CacheUtils.buildTableKey(catName,dbName,tblName));  }  TableWrapper tblWrapper=tableCache.remove(CacheUtils.buildTableKey(catName,dbName,tblName));  if (tblWrapper == null) {    return;  }  if (tblWrapper != null) {    byte[] sdHash=tblWrapper.getSdHash();    if (sdHash != null) {      decrSd(sdHash);    }    isTableCacheDirty.set(true);  }}  finally {  cacheLock.writeLock().unlock();} @AT@ 51018 @LENGTH@ 39
---MOV IfStatement@@if (sdHash != null) {  decrSd(sdHash);} @TO@ TryStatement@@try {  cacheLock.writeLock().lock();  if (!isTableCachePrewarmed) {    tablesDeletedDuringPrewarm.add(CacheUtils.buildTableKey(catName,dbName,tblName));  }  TableWrapper tblWrapper=tableCache.remove(CacheUtils.buildTableKey(catName,dbName,tblName));  if (tblWrapper == null) {    return;  }  if (tblWrapper != null) {    byte[] sdHash=tblWrapper.getSdHash();    if (sdHash != null) {      decrSd(sdHash);    }    isTableCacheDirty.set(true);  }}  finally {  cacheLock.writeLock().unlock();} @AT@ 51066 @LENGTH@ 57
---MOV ExpressionStatement@@MethodInvocation:isTableCacheDirty.set(true) @TO@ TryStatement@@try {  cacheLock.writeLock().lock();  if (!isTableCachePrewarmed) {    tablesDeletedDuringPrewarm.add(CacheUtils.buildTableKey(catName,dbName,tblName));  }  TableWrapper tblWrapper=tableCache.remove(CacheUtils.buildTableKey(catName,dbName,tblName));  if (tblWrapper == null) {    return;  }  if (tblWrapper != null) {    byte[] sdHash=tblWrapper.getSdHash();    if (sdHash != null) {      decrSd(sdHash);    }    isTableCacheDirty.set(true);  }}  finally {  cacheLock.writeLock().unlock();} @AT@ 51132 @LENGTH@ 28


UPD VariableDeclarationStatement@@ConfigurableApplicationContext context=new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false"); @TO@ ConfigurableApplicationContext context=new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false","--spring.main.allow-bean-definition-overriding=true"); @AT@ 1508 @LENGTH@ 736
---UPD VariableDeclarationFragment@@context=new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false") @TO@ context=new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false","--spring.main.allow-bean-definition-overriding=true") @AT@ 1539 @LENGTH@ 704
------UPD MethodInvocation@@new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false") @TO@ new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false","--spring.main.allow-bean-definition-overriding=true") @AT@ 1549 @LENGTH@ 694
---------UPD SimpleName@@MethodName:run:["--debug=false", "--spring.main.banner-mode=OFF", "--spring.application.name=" + UUID.randomUUID().toString(), "--ribbon.enabled=false", "--ribbon.eureka.enabled=false", "--management.endpoint.enabled=false", "--spring.cloud.consul.enabled=true", "--spring.cloud.consul.config.enabled=false", "--spring.cloud.consul.discovery.enabled=true", "--spring.cloud.service-registry.auto-registration.enabled=false"] @TO@ MethodName:run:["--debug=false", "--spring.main.banner-mode=OFF", "--spring.application.name=" + UUID.randomUUID().toString(), "--ribbon.enabled=false", "--ribbon.eureka.enabled=false", "--management.endpoint.enabled=false", "--spring.cloud.consul.enabled=true", "--spring.cloud.consul.config.enabled=false", "--spring.cloud.consul.discovery.enabled=true", "--spring.cloud.service-registry.auto-registration.enabled=false", "--spring.main.allow-bean-definition-overriding=true"] @AT@ 1658 @LENGTH@ 585
------------INS StringLiteral@@"--spring.main.allow-bean-definition-overriding=true" @TO@ SimpleName@@MethodName:run:["--debug=false", "--spring.main.banner-mode=OFF", "--spring.application.name=" + UUID.randomUUID().toString(), "--ribbon.enabled=false", "--ribbon.eureka.enabled=false", "--management.endpoint.enabled=false", "--spring.cloud.consul.enabled=true", "--spring.cloud.consul.config.enabled=false", "--spring.cloud.consul.discovery.enabled=true", "--spring.cloud.service-registry.auto-registration.enabled=false"] @AT@ 2247 @LENGTH@ 53


UPD IfStatement@@if (result instanceof ODataEntry) {  splitResult.add(result);} @TO@ if (result instanceof List) {  return result;} else {  splitResult.add(result);} @AT@ 5109 @LENGTH@ 82
---UPD InstanceofExpression@@result instanceof ODataEntry @TO@ result instanceof List @AT@ 5113 @LENGTH@ 28
------UPD SimpleType@@ODataEntry @TO@ List @AT@ 5131 @LENGTH@ 10
---INS Block@@ThenBody:{  return result;} @TO@ IfStatement@@if (result instanceof ODataEntry) {  splitResult.add(result);} @AT@ 5137 @LENGTH@ 38
------INS ReturnStatement@@SimpleName:result @TO@ Block@@ThenBody:{  return result;} @AT@ 5151 @LENGTH@ 14
---------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 5158 @LENGTH@ 6
---UPD Block@@ThenBody:{  splitResult.add(result);} @TO@ ElseBody:{  splitResult.add(result);} @AT@ 5143 @LENGTH@ 48


UPD MethodDeclaration@@T, T extends Object, MethodName:save, T entityWithUnknownState,  @TO@ T, T, MethodName:save, T entityWithUnknownState,  @AT@ 2280 @LENGTH@ 31


UPD VariableDeclarationStatement@@Class<?> beanType=ClassUtils.getUserClass(bean); @TO@ Class<?> beanType=ProxyUtils.getUserClass(bean); @AT@ 4712 @LENGTH@ 50
---UPD VariableDeclarationFragment@@beanType=ClassUtils.getUserClass(bean) @TO@ beanType=ProxyUtils.getUserClass(bean) @AT@ 4721 @LENGTH@ 40
------UPD MethodInvocation@@ClassUtils.getUserClass(bean) @TO@ ProxyUtils.getUserClass(bean) @AT@ 4732 @LENGTH@ 29
---------UPD SimpleName@@Name:ClassUtils @TO@ Name:ProxyUtils @AT@ 4732 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:mock.expectedMinimumMessageCount(2) @TO@ MethodDeclaration@@public, void, MethodName:testRedeliverWithDelay, Exception,  @AT@ 1782 @LENGTH@ 36
---INS MethodInvocation@@mock.expectedMinimumMessageCount(2) @TO@ ExpressionStatement@@MethodInvocation:mock.expectedMinimumMessageCount(2) @AT@ 1782 @LENGTH@ 35
------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.expectedMinimumMessageCount(2) @AT@ 1782 @LENGTH@ 4
------INS SimpleName@@MethodName:expectedMinimumMessageCount:[2] @TO@ MethodInvocation@@mock.expectedMinimumMessageCount(2) @AT@ 1787 @LENGTH@ 30
---------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:expectedMinimumMessageCount:[2] @AT@ 1815 @LENGTH@ 1


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1394 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1394 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1401 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1409 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1439 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1446 @LENGTH@ 5


UPD VariableDeclarationStatement@@String expectedRedirectUri="https://example.com/login/oauth2/code/registration-id-2"; @TO@ String expectedRedirectUri="http://localhost/login/oauth2/code/registration-id-2"; @AT@ 17045 @LENGTH@ 87
---UPD VariableDeclarationFragment@@expectedRedirectUri="https://example.com/login/oauth2/code/registration-id-2" @TO@ expectedRedirectUri="http://localhost/login/oauth2/code/registration-id-2" @AT@ 17052 @LENGTH@ 79
------UPD StringLiteral@@"https://example.com/login/oauth2/code/registration-id-2" @TO@ "http://localhost/login/oauth2/code/registration-id-2" @AT@ 17074 @LENGTH@ 57


DEL MethodDeclaration@@public, voidMethodName:FailedToStartRouteException, Throwable cause,  @AT@ 1419 @LENGTH@ 81
---DEL Modifier@@public @AT@ 1419 @LENGTH@ 6
---DEL SimpleName@@MethodName:FailedToStartRouteException @AT@ 1426 @LENGTH@ 27
---DEL SingleVariableDeclaration@@Throwable cause @AT@ 1454 @LENGTH@ 15
------DEL SimpleType@@Throwable @AT@ 1454 @LENGTH@ 9
------DEL SimpleName@@cause @AT@ 1464 @LENGTH@ 5
---DEL SuperConstructorInvocation@@super(cause);
 @AT@ 1481 @LENGTH@ 13
------DEL SimpleName@@cause @AT@ 1487 @LENGTH@ 5


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 2098 @LENGTH@ 64
---DEL Modifier@@public @AT@ 2098 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 2105 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 2113 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 2143 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 2150 @LENGTH@ 5


INS VariableDeclarationStatement@@Boolean result=execute(channel -> {
  Message receiveMessage=receiveForReply(queueName,channel);
  if (receiveMessage != null) {
    return sendReply(callback,replyToAddressCallback,channel,receiveMessage);
  }
  return false;
}
,obtainTargetConnectionFactory(this.receiveConnectionFactorySelectorExpression,queueName)); @TO@ MethodDeclaration@@private, boolean, R, S, MethodName:doReceiveAndReply, final String queueName, final ReceiveAndReplyCallback<R,S> callback, final ReplyToAddressCallback<S> replyToAddressCallback, AmqpException,  @AT@ 44921 @LENGTH@ 347
---INS SimpleType@@Boolean @TO@ VariableDeclarationStatement@@Boolean result=execute(channel -> {
  Message receiveMessage=receiveForReply(queueName,channel);
  if (receiveMessage != null) {
    return sendReply(callback,replyToAddressCallback,channel,receiveMessage);
  }
  return false;
}
,obtainTargetConnectionFactory(this.receiveConnectionFactorySelectorExpression,queueName)); @AT@ 44921 @LENGTH@ 7
---INS VariableDeclarationFragment@@result=execute(channel -> {
  Message receiveMessage=receiveForReply(queueName,channel);
  if (receiveMessage != null) {
    return sendReply(callback,replyToAddressCallback,channel,receiveMessage);
  }
  return false;
}
,obtainTargetConnectionFactory(this.receiveConnectionFactorySelectorExpression,queueName)) @TO@ VariableDeclarationStatement@@Boolean result=execute(channel -> {
  Message receiveMessage=receiveForReply(queueName,channel);
  if (receiveMessage != null) {
    return sendReply(callback,replyToAddressCallback,channel,receiveMessage);
  }
  return false;
}
,obtainTargetConnectionFactory(this.receiveConnectionFactorySelectorExpression,queueName)); @AT@ 44929 @LENGTH@ 338
------MOV MethodInvocation@@execute(channel -> {
  Message receiveMessage=receiveForReply(queueName,channel);
  if (receiveMessage != null) {
    return sendReply(callback,replyToAddressCallback,channel,receiveMessage);
  }
  return false;
}
,obtainTargetConnectionFactory(this.receiveConnectionFactorySelectorExpression,queueName)) @TO@ VariableDeclarationFragment@@result=execute(channel -> {
  Message receiveMessage=receiveForReply(queueName,channel);
  if (receiveMessage != null) {
    return sendReply(callback,replyToAddressCallback,channel,receiveMessage);
  }
  return false;
}
,obtainTargetConnectionFactory(this.receiveConnectionFactorySelectorExpression,queueName)) @AT@ 44928 @LENGTH@ 317
------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=execute(channel -> {
  Message receiveMessage=receiveForReply(queueName,channel);
  if (receiveMessage != null) {
    return sendReply(callback,replyToAddressCallback,channel,receiveMessage);
  }
  return false;
}
,obtainTargetConnectionFactory(this.receiveConnectionFactorySelectorExpression,queueName)) @AT@ 44929 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertFalse("Exchange should NO longer be transacted",exchange.isTransacted()) @TO@ MethodInvocation:assertTrue("Exchange should be transacted",exchange.isTransacted()) @AT@ 3550 @LENGTH@ 80
---UPD MethodInvocation@@assertFalse("Exchange should NO longer be transacted",exchange.isTransacted()) @TO@ assertTrue("Exchange should be transacted",exchange.isTransacted()) @AT@ 3550 @LENGTH@ 79
------UPD SimpleName@@MethodName:assertFalse:["Exchange should NO longer be transacted", exchange.isTransacted()] @TO@ MethodName:assertTrue:["Exchange should be transacted", exchange.isTransacted()] @AT@ 3550 @LENGTH@ 79
---------UPD StringLiteral@@"Exchange should NO longer be transacted" @TO@ "Exchange should be transacted" @AT@ 3562 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:reg.put("localhost:" + port,ctx) @TO@ MethodInvocation:reg.bind("localhost:" + port,ctx) @AT@ 2769 @LENGTH@ 34
---UPD MethodInvocation@@reg.put("localhost:" + port,ctx) @TO@ reg.bind("localhost:" + port,ctx) @AT@ 2769 @LENGTH@ 33
------UPD SimpleName@@MethodName:put:["localhost:" + port, ctx] @TO@ MethodName:bind:["localhost:" + port, ctx] @AT@ 2773 @LENGTH@ 29


UPD CatchClause@@catch (PropertyReferenceException e) {  return null;} @TO@ catch (PropertyReferenceException|InvalidPersistentPropertyPath e) {  return null;} @AT@ 30087 @LENGTH@ 60
---UPD SingleVariableDeclaration@@PropertyReferenceException e @TO@ PropertyReferenceException|InvalidPersistentPropertyPath e @AT@ 30094 @LENGTH@ 28
------DEL SimpleType@@PropertyReferenceException @AT@ 30094 @LENGTH@ 26
------INS UnionType@@PropertyReferenceException|InvalidPersistentPropertyPath @TO@ SingleVariableDeclaration@@PropertyReferenceException e @AT@ 30106 @LENGTH@ 58
---------INS SimpleType@@PropertyReferenceException @TO@ UnionType@@PropertyReferenceException|InvalidPersistentPropertyPath @AT@ 30106 @LENGTH@ 26
---------INS SimpleType@@InvalidPersistentPropertyPath @TO@ UnionType@@PropertyReferenceException|InvalidPersistentPropertyPath @AT@ 30135 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:fail("Should fail due timeout") @TO@ MethodInvocation:fail("Should fail due to timeout") @AT@ 2198 @LENGTH@ 32
---UPD MethodInvocation@@fail("Should fail due timeout") @TO@ fail("Should fail due to timeout") @AT@ 2198 @LENGTH@ 31
------UPD SimpleName@@MethodName:fail:["Should fail due timeout"] @TO@ MethodName:fail:["Should fail due to timeout"] @AT@ 2198 @LENGTH@ 31
---------UPD StringLiteral@@"Should fail due timeout" @TO@ "Should fail due to timeout" @AT@ 2203 @LENGTH@ 25


MOV MethodDeclaration@@public, void, MethodName:setRaftId, String raftId,  @TO@ TypeDeclaration@@[@ConfigurationProperties(prefix="camel.component.jgroups.raft.cluster.service"), public]JGroupsRaftClusterServiceConfiguration,  @AT@ 1367 @LENGTH@ 74


UPD VariableDeclarationStatement@@ConfigurableApplicationContext context=new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.host=" + container.getContainerIpAddress(),"--spring.cloud.consul.port=" + container.getMappedPort(8500),"--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false","--camel.cloud.service-registry.service-host=localhost"); @TO@ ConfigurableApplicationContext context=new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.host=" + container.getContainerIpAddress(),"--spring.cloud.consul.port=" + container.getMappedPort(8500),"--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false","--camel.cloud.service-registry.service-host=localhost","--spring.main.allow-bean-definition-overriding=true"); @AT@ 2833 @LENGTH@ 971
---UPD VariableDeclarationFragment@@context=new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.host=" + container.getContainerIpAddress(),"--spring.cloud.consul.port=" + container.getMappedPort(8500),"--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false","--camel.cloud.service-registry.service-host=localhost") @TO@ context=new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.host=" + container.getContainerIpAddress(),"--spring.cloud.consul.port=" + container.getMappedPort(8500),"--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false","--camel.cloud.service-registry.service-host=localhost","--spring.main.allow-bean-definition-overriding=true") @AT@ 2864 @LENGTH@ 939
------UPD MethodInvocation@@new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.host=" + container.getContainerIpAddress(),"--spring.cloud.consul.port=" + container.getMappedPort(8500),"--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false","--camel.cloud.service-registry.service-host=localhost") @TO@ new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.host=" + container.getContainerIpAddress(),"--spring.cloud.consul.port=" + container.getMappedPort(8500),"--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false","--camel.cloud.service-registry.service-host=localhost","--spring.main.allow-bean-definition-overriding=true") @AT@ 2874 @LENGTH@ 929
---------UPD SimpleName@@MethodName:run:["--debug=false", "--spring.main.banner-mode=OFF", "--spring.application.name=" + UUID.randomUUID().toString(), "--ribbon.enabled=false", "--ribbon.eureka.enabled=false", "--management.endpoint.enabled=false", "--spring.cloud.consul.enabled=true", "--spring.cloud.consul.host=" + container.getContainerIpAddress(), "--spring.cloud.consul.port=" + container.getMappedPort(8500), "--spring.cloud.consul.config.enabled=false", "--spring.cloud.consul.discovery.enabled=true", "--spring.cloud.service-registry.auto-registration.enabled=false", "--camel.cloud.service-registry.service-host=localhost"] @TO@ MethodName:run:["--debug=false", "--spring.main.banner-mode=OFF", "--spring.application.name=" + UUID.randomUUID().toString(), "--ribbon.enabled=false", "--ribbon.eureka.enabled=false", "--management.endpoint.enabled=false", "--spring.cloud.consul.enabled=true", "--spring.cloud.consul.host=" + container.getContainerIpAddress(), "--spring.cloud.consul.port=" + container.getMappedPort(8500), "--spring.cloud.consul.config.enabled=false", "--spring.cloud.consul.discovery.enabled=true", "--spring.cloud.service-registry.auto-registration.enabled=false", "--camel.cloud.service-registry.service-host=localhost", "--spring.main.allow-bean-definition-overriding=true"] @AT@ 2983 @LENGTH@ 820
------------INS StringLiteral@@"--spring.main.allow-bean-definition-overriding=true" @TO@ SimpleName@@MethodName:run:["--debug=false", "--spring.main.banner-mode=OFF", "--spring.application.name=" + UUID.randomUUID().toString(), "--ribbon.enabled=false", "--ribbon.eureka.enabled=false", "--management.endpoint.enabled=false", "--spring.cloud.consul.enabled=true", "--spring.cloud.consul.host=" + container.getContainerIpAddress(), "--spring.cloud.consul.port=" + container.getMappedPort(8500), "--spring.cloud.consul.config.enabled=false", "--spring.cloud.consul.discovery.enabled=true", "--spring.cloud.service-registry.auto-registration.enabled=false", "--camel.cloud.service-registry.service-host=localhost"] @AT@ 3807 @LENGTH@ 53


UPD TypeDeclaration@@[public, final]PredicateBuilder,  @TO@ [public]PredicateBuilder,  @AT@ 1285 @LENGTH@ 18421
---DEL Modifier@@final @AT@ 1292 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:foo.toUpperCase() @TO@ InfixExpression:foo.toUpperCase() + Thread.currentThread().getName() @AT@ 39435 @LENGTH@ 25
---DEL MethodInvocation@@foo.toUpperCase() @AT@ 39442 @LENGTH@ 17
---INS InfixExpression@@foo.toUpperCase() + Thread.currentThread().getName() @TO@ ReturnStatement@@MethodInvocation:foo.toUpperCase() @AT@ 39475 @LENGTH@ 52
------INS MethodInvocation@@foo.toUpperCase() @TO@ InfixExpression@@foo.toUpperCase() + Thread.currentThread().getName() @AT@ 39475 @LENGTH@ 17
---------MOV SimpleName@@Name:foo @TO@ MethodInvocation@@foo.toUpperCase() @AT@ 39442 @LENGTH@ 3
---------MOV SimpleName@@MethodName:toUpperCase:[] @TO@ MethodInvocation@@foo.toUpperCase() @AT@ 39446 @LENGTH@ 13
------INS Operator@@+ @TO@ InfixExpression@@foo.toUpperCase() + Thread.currentThread().getName() @AT@ 39492 @LENGTH@ 1
------INS MethodInvocation@@Thread.currentThread().getName() @TO@ InfixExpression@@foo.toUpperCase() + Thread.currentThread().getName() @AT@ 39495 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread().getName() @AT@ 39495 @LENGTH@ 22
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread().getName() @AT@ 39495 @LENGTH@ 6
---------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@Thread.currentThread().getName() @AT@ 39518 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).unitTestExpectedNumber(0).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.20.0.Final").dependency("org.drools:drools-compiler:7.20.0.Final").unitTestExpectedNumber(0).build() @AT@ 1441 @LENGTH@ 162
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).unitTestExpectedNumber(0).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.20.0.Final").dependency("org.drools:drools-compiler:7.20.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 154
------INS MethodInvocation@@MethodName:dependency:["org.drools:drools-core:7.20.0.Final"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 153
---------INS StringLiteral@@"org.drools:drools-core:7.20.0.Final" @TO@ MethodInvocation@@MethodName:dependency:["org.drools:drools-core:7.20.0.Final"] @AT@ 1563 @LENGTH@ 37
------INS MethodInvocation@@MethodName:dependency:["org.drools:drools-compiler:7.20.0.Final"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 224
---------INS StringLiteral@@"org.drools:drools-compiler:7.20.0.Final" @TO@ MethodInvocation@@MethodName:dependency:["org.drools:drools-compiler:7.20.0.Final"] @AT@ 1630 @LENGTH@ 41


INS IfStatement@@if (!response.containsHeader(FEATURE_POLICY_HEADER)) {  response.setHeader(FEATURE_POLICY_HEADER,this.policyDirectives);} @TO@ MethodDeclaration@@public, void, MethodName:writeHeaders, HttpServletRequest request, HttpServletResponse response,  @AT@ 2024 @LENGTH@ 127
---INS PrefixExpression@@!response.containsHeader(FEATURE_POLICY_HEADER) @TO@ IfStatement@@if (!response.containsHeader(FEATURE_POLICY_HEADER)) {  response.setHeader(FEATURE_POLICY_HEADER,this.policyDirectives);} @AT@ 2028 @LENGTH@ 47
------INS Operator@@! @TO@ PrefixExpression@@!response.containsHeader(FEATURE_POLICY_HEADER) @AT@ 2028 @LENGTH@ 1
------INS MethodInvocation@@response.containsHeader(FEATURE_POLICY_HEADER) @TO@ PrefixExpression@@!response.containsHeader(FEATURE_POLICY_HEADER) @AT@ 2029 @LENGTH@ 46
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.containsHeader(FEATURE_POLICY_HEADER) @AT@ 2029 @LENGTH@ 8
---------INS SimpleName@@MethodName:containsHeader:[FEATURE_POLICY_HEADER] @TO@ MethodInvocation@@response.containsHeader(FEATURE_POLICY_HEADER) @AT@ 2038 @LENGTH@ 37
------------INS SimpleName@@FEATURE_POLICY_HEADER @TO@ SimpleName@@MethodName:containsHeader:[FEATURE_POLICY_HEADER] @AT@ 2053 @LENGTH@ 21
---INS Block@@ThenBody:{  response.setHeader(FEATURE_POLICY_HEADER,this.policyDirectives);} @TO@ IfStatement@@if (!response.containsHeader(FEATURE_POLICY_HEADER)) {  response.setHeader(FEATURE_POLICY_HEADER,this.policyDirectives);} @AT@ 2077 @LENGTH@ 74
------MOV ExpressionStatement@@MethodInvocation:response.setHeader(FEATURE_POLICY_HEADER,this.policyDirectives) @TO@ Block@@ThenBody:{  response.setHeader(FEATURE_POLICY_HEADER,this.policyDirectives);} @AT@ 2000 @LENGTH@ 65


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1064 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1064 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1071 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1079 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1109 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1116 @LENGTH@ 5


MOV FieldDeclaration@@AmazonS3ClientMock, [clientMock=new AmazonS3ClientMock()] @TO@ TypeDeclaration@@[public]S3ComponentDeleteObjectTest, CamelTestSupport @AT@ 1575 @LENGTH@ 57


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1034 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1034 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1041 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1049 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1079 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1086 @LENGTH@ 5


UPD TryStatement@@try {  triggerPreWarm(rawStore);  shouldRunPrewarm=false;} catch (Exception e) {  LOG.error("Prewarm failure",e);  return;} @TO@ try {  triggerPreWarm(rawStore);} catch (Exception e) {  LOG.error("Prewarm failure",e);  return;} @AT@ 33869 @LENGTH@ 180
---DEL ExpressionStatement@@Assignment:shouldRunPrewarm=false @AT@ 33921 @LENGTH@ 25
------DEL Assignment@@shouldRunPrewarm=false @AT@ 33921 @LENGTH@ 24
---------DEL SimpleName@@shouldRunPrewarm @AT@ 33921 @LENGTH@ 16
---------DEL Operator@@= @AT@ 33937 @LENGTH@ 1
---------DEL BooleanLiteral@@false @AT@ 33940 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @TO@ TypeDeclaration@@[public]WebClientReactiveAuthorizationCodeTokenResponseClient, [ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>] @AT@ 2640 @LENGTH@ 137
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @AT@ 2640 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @AT@ 2647 @LENGTH@ 4
---INS SimpleName@@MethodName:setWebClient @TO@ MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @AT@ 2652 @LENGTH@ 12
---INS SingleVariableDeclaration@@WebClient webClient @TO@ MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @AT@ 2665 @LENGTH@ 19
------INS SimpleType@@WebClient @TO@ SingleVariableDeclaration@@WebClient webClient @AT@ 2665 @LENGTH@ 9
------INS SimpleName@@webClient @TO@ SingleVariableDeclaration@@WebClient webClient @AT@ 2675 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(webClient,"webClient cannot be null") @TO@ MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @AT@ 2690 @LENGTH@ 54
------INS MethodInvocation@@Assert.notNull(webClient,"webClient cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(webClient,"webClient cannot be null") @AT@ 2690 @LENGTH@ 53
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(webClient,"webClient cannot be null") @AT@ 2690 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[webClient, "webClient cannot be null"] @TO@ MethodInvocation@@Assert.notNull(webClient,"webClient cannot be null") @AT@ 2697 @LENGTH@ 46
------------INS SimpleName@@webClient @TO@ SimpleName@@MethodName:notNull:[webClient, "webClient cannot be null"] @AT@ 2705 @LENGTH@ 9
------------INS StringLiteral@@"webClient cannot be null" @TO@ SimpleName@@MethodName:notNull:[webClient, "webClient cannot be null"] @AT@ 2716 @LENGTH@ 26
---INS ExpressionStatement@@Assignment:this.webClient=webClient @TO@ MethodDeclaration@@public, void, MethodName:setWebClient, WebClient webClient,  @AT@ 2747 @LENGTH@ 27
------INS Assignment@@this.webClient=webClient @TO@ ExpressionStatement@@Assignment:this.webClient=webClient @AT@ 2747 @LENGTH@ 26
---------INS FieldAccess@@this.webClient @TO@ Assignment@@this.webClient=webClient @AT@ 2747 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.webClient @AT@ 2747 @LENGTH@ 4
------------INS SimpleName@@webClient @TO@ FieldAccess@@this.webClient @AT@ 2752 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@this.webClient=webClient @AT@ 2761 @LENGTH@ 1
---------INS SimpleName@@webClient @TO@ Assignment@@this.webClient=webClient @AT@ 2764 @LENGTH@ 9


INS FieldDeclaration@@private, static, final, String, [XFRAME_OPTIONS_HEADER="X-Frame-Options"] @TO@ TypeDeclaration@@[public]XFrameOptionsHeaderWriterTests,  @AT@ 1214 @LENGTH@ 70
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [XFRAME_OPTIONS_HEADER="X-Frame-Options"] @AT@ 1214 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [XFRAME_OPTIONS_HEADER="X-Frame-Options"] @AT@ 1222 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [XFRAME_OPTIONS_HEADER="X-Frame-Options"] @AT@ 1229 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [XFRAME_OPTIONS_HEADER="X-Frame-Options"] @AT@ 1235 @LENGTH@ 6
---INS VariableDeclarationFragment@@XFRAME_OPTIONS_HEADER="X-Frame-Options" @TO@ FieldDeclaration@@private, static, final, String, [XFRAME_OPTIONS_HEADER="X-Frame-Options"] @AT@ 1242 @LENGTH@ 41
------INS SimpleName@@XFRAME_OPTIONS_HEADER @TO@ VariableDeclarationFragment@@XFRAME_OPTIONS_HEADER="X-Frame-Options" @AT@ 1242 @LENGTH@ 21
------INS StringLiteral@@"X-Frame-Options" @TO@ VariableDeclarationFragment@@XFRAME_OPTIONS_HEADER="X-Frame-Options" @AT@ 1266 @LENGTH@ 17


MOV FieldDeclaration@@AmazonS3EncryptionClientMock, [clientMock=new AmazonS3EncryptionClientMock()] @TO@ TypeDeclaration@@[public]S3ComponentCopyObjectEncryptionTest, CamelTestSupport @AT@ 1583 @LENGTH@ 77


INS IfStatement@@if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) && !StringUtils.hasText(this.clientSecret)) {  clientRegistration.clientAuthenticationMethod=ClientAuthenticationMethod.NONE;} @TO@ MethodDeclaration@@private, ClientRegistration, MethodName:create,  @AT@ 14748 @LENGTH@ 222
---INS InfixExpression@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) && !StringUtils.hasText(this.clientSecret) @TO@ IfStatement@@if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) && !StringUtils.hasText(this.clientSecret)) {  clientRegistration.clientAuthenticationMethod=ClientAuthenticationMethod.NONE;} @AT@ 14752 @LENGTH@ 125
------INS MethodInvocation@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) @TO@ InfixExpression@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) && !StringUtils.hasText(this.clientSecret) @AT@ 14752 @LENGTH@ 77
---------INS QualifiedName@@Name:AuthorizationGrantType.AUTHORIZATION_CODE @TO@ MethodInvocation@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) @AT@ 14752 @LENGTH@ 41
---------INS SimpleName@@MethodName:equals:[this.authorizationGrantType] @TO@ MethodInvocation@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) @AT@ 14794 @LENGTH@ 35
------------INS FieldAccess@@this.authorizationGrantType @TO@ SimpleName@@MethodName:equals:[this.authorizationGrantType] @AT@ 14801 @LENGTH@ 27
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationGrantType @AT@ 14801 @LENGTH@ 4
---------------INS SimpleName@@authorizationGrantType @TO@ FieldAccess@@this.authorizationGrantType @AT@ 14806 @LENGTH@ 22
------INS Operator@@&& @TO@ InfixExpression@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) && !StringUtils.hasText(this.clientSecret) @AT@ 14829 @LENGTH@ 2
------INS PrefixExpression@@!StringUtils.hasText(this.clientSecret) @TO@ InfixExpression@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) && !StringUtils.hasText(this.clientSecret) @AT@ 14838 @LENGTH@ 39
---------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.hasText(this.clientSecret) @AT@ 14838 @LENGTH@ 1
---------INS MethodInvocation@@StringUtils.hasText(this.clientSecret) @TO@ PrefixExpression@@!StringUtils.hasText(this.clientSecret) @AT@ 14839 @LENGTH@ 38
------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(this.clientSecret) @AT@ 14839 @LENGTH@ 11
------------INS SimpleName@@MethodName:hasText:[this.clientSecret] @TO@ MethodInvocation@@StringUtils.hasText(this.clientSecret) @AT@ 14851 @LENGTH@ 26
---------------INS FieldAccess@@this.clientSecret @TO@ SimpleName@@MethodName:hasText:[this.clientSecret] @AT@ 14859 @LENGTH@ 17
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientSecret @AT@ 14859 @LENGTH@ 4
------------------INS SimpleName@@clientSecret @TO@ FieldAccess@@this.clientSecret @AT@ 14864 @LENGTH@ 12
---INS Block@@ThenBody:{  clientRegistration.clientAuthenticationMethod=ClientAuthenticationMethod.NONE;} @TO@ IfStatement@@if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) && !StringUtils.hasText(this.clientSecret)) {  clientRegistration.clientAuthenticationMethod=ClientAuthenticationMethod.NONE;} @AT@ 14879 @LENGTH@ 91
------INS ExpressionStatement@@Assignment:clientRegistration.clientAuthenticationMethod=ClientAuthenticationMethod.NONE @TO@ Block@@ThenBody:{  clientRegistration.clientAuthenticationMethod=ClientAuthenticationMethod.NONE;} @AT@ 14885 @LENGTH@ 80
---------INS Assignment@@clientRegistration.clientAuthenticationMethod=ClientAuthenticationMethod.NONE @TO@ ExpressionStatement@@Assignment:clientRegistration.clientAuthenticationMethod=ClientAuthenticationMethod.NONE @AT@ 14885 @LENGTH@ 79
------------INS QualifiedName@@clientRegistration.clientAuthenticationMethod @TO@ Assignment@@clientRegistration.clientAuthenticationMethod=ClientAuthenticationMethod.NONE @AT@ 14885 @LENGTH@ 45
---------------INS SimpleName@@clientRegistration @TO@ QualifiedName@@clientRegistration.clientAuthenticationMethod @AT@ 14885 @LENGTH@ 18
---------------INS SimpleName@@clientAuthenticationMethod @TO@ QualifiedName@@clientRegistration.clientAuthenticationMethod @AT@ 14904 @LENGTH@ 26
------------INS Operator@@= @TO@ Assignment@@clientRegistration.clientAuthenticationMethod=ClientAuthenticationMethod.NONE @AT@ 14930 @LENGTH@ 1
------------INS QualifiedName@@ClientAuthenticationMethod.NONE @TO@ Assignment@@clientRegistration.clientAuthenticationMethod=ClientAuthenticationMethod.NONE @AT@ 14933 @LENGTH@ 31
---------------INS SimpleName@@ClientAuthenticationMethod @TO@ QualifiedName@@ClientAuthenticationMethod.NONE @AT@ 14933 @LENGTH@ 26
---------------INS SimpleName@@NONE @TO@ QualifiedName@@ClientAuthenticationMethod.NONE @AT@ 14960 @LENGTH@ 4


UPD IfStatement@@if (mi.getArguments().length == 1) {  Object arg=mi.getArguments()[0];  if (arg.getClass().isArray() || arg instanceof Collection<?>) {    filterTarget=arg;  }  if (filterTarget == null) {    throw new IllegalArgumentException("A PreFilter expression was set but the method argument type" + arg.getClass() + " is not filterable");  }} @TO@ if (mi.getArguments().length == 1) {  Object arg=mi.getArguments()[0];  if (arg.getClass().isArray() || arg instanceof Collection<?>) {    filterTarget=arg;  }  if (filterTarget == null) {    throw new IllegalArgumentException("A PreFilter expression was set but the method argument type" + arg.getClass() + " is not filterable");  }} else if (mi.getArguments().length > 1) {  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @AT@ 2606 @LENGTH@ 368
---INS Block@@ElseBody:if (mi.getArguments().length > 1) {  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @TO@ IfStatement@@if (mi.getArguments().length == 1) {  Object arg=mi.getArguments()[0];  if (arg.getClass().isArray() || arg instanceof Collection<?>) {    filterTarget=arg;  }  if (filterTarget == null) {    throw new IllegalArgumentException("A PreFilter expression was set but the method argument type" + arg.getClass() + " is not filterable");  }} @AT@ 2980 @LENGTH@ 169
------INS IfStatement@@if (mi.getArguments().length > 1) {  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @TO@ Block@@ElseBody:if (mi.getArguments().length > 1) {  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @AT@ 2980 @LENGTH@ 169
---------INS InfixExpression@@mi.getArguments().length > 1 @TO@ IfStatement@@if (mi.getArguments().length > 1) {  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @AT@ 2984 @LENGTH@ 28
------------INS FieldAccess@@mi.getArguments().length @TO@ InfixExpression@@mi.getArguments().length > 1 @AT@ 2984 @LENGTH@ 24
---------------INS MethodInvocation@@mi.getArguments() @TO@ FieldAccess@@mi.getArguments().length @AT@ 2984 @LENGTH@ 17
------------------INS SimpleName@@Name:mi @TO@ MethodInvocation@@mi.getArguments() @AT@ 2984 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getArguments:[] @TO@ MethodInvocation@@mi.getArguments() @AT@ 2987 @LENGTH@ 14
---------------INS SimpleName@@length @TO@ FieldAccess@@mi.getArguments().length @AT@ 3002 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@mi.getArguments().length > 1 @AT@ 3008 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ InfixExpression@@mi.getArguments().length > 1 @AT@ 3011 @LENGTH@ 1
---------INS Block@@ThenBody:{  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @TO@ IfStatement@@if (mi.getArguments().length > 1) {  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @AT@ 3014 @LENGTH@ 135
------------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @AT@ 3019 @LENGTH@ 126
---------------INS ClassInstanceCreation@@IllegalArgumentException["Unable to determine the method argument for filtering. Specify the filter target."] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.") @AT@ 3025 @LENGTH@ 119
------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Unable to determine the method argument for filtering. Specify the filter target."] @AT@ 3025 @LENGTH@ 3
------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Unable to determine the method argument for filtering. Specify the filter target."] @AT@ 3029 @LENGTH@ 24
------------------INS StringLiteral@@"Unable to determine the method argument for filtering. Specify the filter target." @TO@ ClassInstanceCreation@@IllegalArgumentException["Unable to determine the method argument for filtering. Specify the filter target."] @AT@ 3060 @LENGTH@ 83
------INS IfStatement@@if (mi.getArguments().length > 1) {  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @TO@ Block@@ElseBody:if (mi.getArguments().length > 1) {  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @AT@ 2980 @LENGTH@ 169
---------INS InfixExpression@@mi.getArguments().length > 1 @TO@ IfStatement@@if (mi.getArguments().length > 1) {  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @AT@ 2984 @LENGTH@ 28
------------INS FieldAccess@@mi.getArguments().length @TO@ InfixExpression@@mi.getArguments().length > 1 @AT@ 2984 @LENGTH@ 24
---------------INS MethodInvocation@@mi.getArguments() @TO@ FieldAccess@@mi.getArguments().length @AT@ 2984 @LENGTH@ 17
------------------INS SimpleName@@Name:mi @TO@ MethodInvocation@@mi.getArguments() @AT@ 2984 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getArguments:[] @TO@ MethodInvocation@@mi.getArguments() @AT@ 2987 @LENGTH@ 14
---------------INS SimpleName@@length @TO@ FieldAccess@@mi.getArguments().length @AT@ 3002 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@mi.getArguments().length > 1 @AT@ 3008 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ InfixExpression@@mi.getArguments().length > 1 @AT@ 3011 @LENGTH@ 1
---------INS Block@@ThenBody:{  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @TO@ IfStatement@@if (mi.getArguments().length > 1) {  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @AT@ 3014 @LENGTH@ 135
------------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.");} @AT@ 3019 @LENGTH@ 126
---------------INS ClassInstanceCreation@@IllegalArgumentException["Unable to determine the method argument for filtering. Specify the filter target."] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unable to determine the method argument for filtering. Specify the filter target.") @AT@ 3025 @LENGTH@ 119
------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Unable to determine the method argument for filtering. Specify the filter target."] @AT@ 3025 @LENGTH@ 3
------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Unable to determine the method argument for filtering. Specify the filter target."] @AT@ 3029 @LENGTH@ 24
------------------INS StringLiteral@@"Unable to determine the method argument for filtering. Specify the filter target." @TO@ ClassInstanceCreation@@IllegalArgumentException["Unable to determine the method argument for filtering. Specify the filter target."] @AT@ 3060 @LENGTH@ 83


UPD MethodDeclaration@@protected, HttpConversation, MethodName:getConversation,  @TO@ public, HttpConversation, MethodName:getConversation,  @AT@ 1324 @LENGTH@ 92
---UPD Modifier@@protected @TO@ public @AT@ 1324 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:setJwtDecoderFactoryWhenNullThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[public]OidcAuthorizationCodeAuthenticationProviderTests,  @AT@ 5485 @LENGTH@ 195
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setJwtDecoderFactoryWhenNullThenThrowIllegalArgumentException,  @AT@ 5485 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setJwtDecoderFactoryWhenNullThenThrowIllegalArgumentException,  @AT@ 5492 @LENGTH@ 4
---INS SimpleName@@MethodName:setJwtDecoderFactoryWhenNullThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setJwtDecoderFactoryWhenNullThenThrowIllegalArgumentException,  @AT@ 5497 @LENGTH@ 61
---INS ExpressionStatement@@MethodInvocation:this.exception.expect(IllegalArgumentException.class) @TO@ MethodDeclaration@@public, void, MethodName:setJwtDecoderFactoryWhenNullThenThrowIllegalArgumentException,  @AT@ 5565 @LENGTH@ 54
------INS MethodInvocation@@this.exception.expect(IllegalArgumentException.class) @TO@ ExpressionStatement@@MethodInvocation:this.exception.expect(IllegalArgumentException.class) @AT@ 5565 @LENGTH@ 53
---------INS FieldAccess@@this.exception @TO@ MethodInvocation@@this.exception.expect(IllegalArgumentException.class) @AT@ 5565 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.exception @AT@ 5565 @LENGTH@ 4
------------INS SimpleName@@exception @TO@ FieldAccess@@this.exception @AT@ 5570 @LENGTH@ 9
---------INS SimpleName@@MethodName:expect:[IllegalArgumentException.class] @TO@ MethodInvocation@@this.exception.expect(IllegalArgumentException.class) @AT@ 5580 @LENGTH@ 38
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:expect:[IllegalArgumentException.class] @AT@ 5587 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:this.authenticationProvider.setJwtDecoderFactory(null) @TO@ MethodDeclaration@@public, void, MethodName:setJwtDecoderFactoryWhenNullThenThrowIllegalArgumentException,  @AT@ 5622 @LENGTH@ 55
------INS MethodInvocation@@this.authenticationProvider.setJwtDecoderFactory(null) @TO@ ExpressionStatement@@MethodInvocation:this.authenticationProvider.setJwtDecoderFactory(null) @AT@ 5622 @LENGTH@ 54
---------INS FieldAccess@@this.authenticationProvider @TO@ MethodInvocation@@this.authenticationProvider.setJwtDecoderFactory(null) @AT@ 5622 @LENGTH@ 27
------------INS ThisExpression@@this @TO@ FieldAccess@@this.authenticationProvider @AT@ 5622 @LENGTH@ 4
------------INS SimpleName@@authenticationProvider @TO@ FieldAccess@@this.authenticationProvider @AT@ 5627 @LENGTH@ 22
---------INS SimpleName@@MethodName:setJwtDecoderFactory:[null] @TO@ MethodInvocation@@this.authenticationProvider.setJwtDecoderFactory(null) @AT@ 5650 @LENGTH@ 26
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setJwtDecoderFactory:[null] @AT@ 5671 @LENGTH@ 4


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 2863 @LENGTH@ 64
---DEL Modifier@@public @AT@ 2863 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 2870 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 2878 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 2908 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 2915 @LENGTH@ 5


UPD FieldDeclaration@@private, static, String, [HEADER="<?xml version='1.0' encoding='UTF-8'?><beans xmlns='http://www.springframework.org/schema/beans' xmlns:oauth='http://www.springframework.org/schema/security/oauth2' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'	xsi:schemaLocation='http://www.springframework.org/schema/security/oauth2 https://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd	http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-3.0.xsd'>"] @TO@ private, static, String, [HEADER="<?xml version='1.0' encoding='UTF-8'?><beans xmlns='http://www.springframework.org/schema/beans' xmlns:oauth='http://www.springframework.org/schema/security/oauth2' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'	xsi:schemaLocation='http://www.springframework.org/schema/security/oauth2 https://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd	http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-3.0.xsd'>"] @AT@ 2895 @LENGTH@ 517
---UPD VariableDeclarationFragment@@HEADER="<?xml version='1.0' encoding='UTF-8'?><beans xmlns='http://www.springframework.org/schema/beans' xmlns:oauth='http://www.springframework.org/schema/security/oauth2' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'	xsi:schemaLocation='http://www.springframework.org/schema/security/oauth2 https://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd	http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-3.0.xsd'>" @TO@ HEADER="<?xml version='1.0' encoding='UTF-8'?><beans xmlns='http://www.springframework.org/schema/beans' xmlns:oauth='http://www.springframework.org/schema/security/oauth2' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'	xsi:schemaLocation='http://www.springframework.org/schema/security/oauth2 https://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd	http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-3.0.xsd'>" @AT@ 2917 @LENGTH@ 494
------UPD StringLiteral@@"<?xml version='1.0' encoding='UTF-8'?><beans xmlns='http://www.springframework.org/schema/beans' xmlns:oauth='http://www.springframework.org/schema/security/oauth2' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'	xsi:schemaLocation='http://www.springframework.org/schema/security/oauth2 https://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd	http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-3.0.xsd'>" @TO@ "<?xml version='1.0' encoding='UTF-8'?><beans xmlns='http://www.springframework.org/schema/beans' xmlns:oauth='http://www.springframework.org/schema/security/oauth2' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'	xsi:schemaLocation='http://www.springframework.org/schema/security/oauth2 https://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd	http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-3.0.xsd'>" @AT@ 2926 @LENGTH@ 485


UPD SuperConstructorInvocation@@super(ctx,"shutdown",true);
 @TO@ super(ctx,"shutdown",true,false);
 @AT@ 2448 @LENGTH@ 29
---INS BooleanLiteral@@false @TO@ SuperConstructorInvocation@@super(ctx,"shutdown",true);
 @AT@ 2477 @LENGTH@ 5


UPD Block@@ThenBody:{  List<MavenResolvedArtifact> resolved=Arrays.asList(resolver(config).loadPomFromFile("pom.xml").importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact());  for (  MavenResolvedArtifact dep : resolved) {    if (dep.getCoordinate().getGroupId().equals("org.apache.camel")) {      version=dep.getCoordinate().getVersion();      break;    }  }} @TO@ ThenBody:{  PomEquippedResolveStage pom=resolver(config).loadPomFromFile("pom.xml");  List<MavenResolvedArtifact> resolved=Arrays.asList(pom.importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact());  for (  MavenResolvedArtifact dep : resolved) {    if (dep.getCoordinate().getGroupId().equals("org.apache.camel")) {      version=dep.getCoordinate().getVersion();      break;    }  }} @AT@ 5679 @LENGTH@ 529
---UPD VariableDeclarationStatement@@List<MavenResolvedArtifact> resolved=Arrays.asList(resolver(config).loadPomFromFile("pom.xml").importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact()); @TO@ List<MavenResolvedArtifact> resolved=Arrays.asList(pom.importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact()); @AT@ 5746 @LENGTH@ 189
------UPD VariableDeclarationFragment@@resolved=Arrays.asList(resolver(config).loadPomFromFile("pom.xml").importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact()) @TO@ resolved=Arrays.asList(pom.importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact()) @AT@ 5774 @LENGTH@ 160
---------UPD MethodInvocation@@Arrays.asList(resolver(config).loadPomFromFile("pom.xml").importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact()) @TO@ Arrays.asList(pom.importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact()) @AT@ 5785 @LENGTH@ 149
------------UPD SimpleName@@MethodName:asList:[resolver(config).loadPomFromFile("pom.xml").importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact()] @TO@ MethodName:asList:[pom.importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact()] @AT@ 5792 @LENGTH@ 142
---------------UPD MethodInvocation@@resolver(config).loadPomFromFile("pom.xml").importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact() @TO@ pom.importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact() @AT@ 5799 @LENGTH@ 134
------------------DEL MethodInvocation@@MethodName:loadPomFromFile:["pom.xml"] @AT@ 5799 @LENGTH@ 43
---------------------DEL StringLiteral@@"pom.xml" @AT@ 5832 @LENGTH@ 9
------------------DEL MethodInvocation@@MethodName:resolver:[config] @AT@ 5799 @LENGTH@ 16
------------------MOV SimpleName@@config @TO@ MethodInvocation@@resolver(config).loadPomFromFile("pom.xml").importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact() @AT@ 5808 @LENGTH@ 6
---INS VariableDeclarationStatement@@PomEquippedResolveStage pom=resolver(config).loadPomFromFile("pom.xml"); @TO@ Block@@ThenBody:{  List<MavenResolvedArtifact> resolved=Arrays.asList(resolver(config).loadPomFromFile("pom.xml").importCompileAndRuntimeDependencies().resolve().withoutTransitivity().asResolvedArtifact());  for (  MavenResolvedArtifact dep : resolved) {    if (dep.getCoordinate().getGroupId().equals("org.apache.camel")) {      version=dep.getCoordinate().getVersion();      break;    }  }} @AT@ 5818 @LENGTH@ 74
------INS SimpleType@@PomEquippedResolveStage @TO@ VariableDeclarationStatement@@PomEquippedResolveStage pom=resolver(config).loadPomFromFile("pom.xml"); @AT@ 5818 @LENGTH@ 23
------INS VariableDeclarationFragment@@pom=resolver(config).loadPomFromFile("pom.xml") @TO@ VariableDeclarationStatement@@PomEquippedResolveStage pom=resolver(config).loadPomFromFile("pom.xml"); @AT@ 5842 @LENGTH@ 49
---------INS SimpleName@@pom @TO@ VariableDeclarationFragment@@pom=resolver(config).loadPomFromFile("pom.xml") @AT@ 5842 @LENGTH@ 3
---------INS MethodInvocation@@resolver(config).loadPomFromFile("pom.xml") @TO@ VariableDeclarationFragment@@pom=resolver(config).loadPomFromFile("pom.xml") @AT@ 5848 @LENGTH@ 43
------------INS MethodInvocation@@MethodName:resolver:[config] @TO@ MethodInvocation@@resolver(config).loadPomFromFile("pom.xml") @AT@ 5848 @LENGTH@ 16
---------------INS SimpleName@@config @TO@ MethodInvocation@@MethodName:resolver:[config] @AT@ 5857 @LENGTH@ 6
------------INS SimpleName@@MethodName:loadPomFromFile:["pom.xml"] @TO@ MethodInvocation@@resolver(config).loadPomFromFile("pom.xml") @AT@ 5865 @LENGTH@ 26
---------------INS StringLiteral@@"pom.xml" @TO@ SimpleName@@MethodName:loadPomFromFile:["pom.xml"] @AT@ 5881 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(httpClient,params) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(getCamelContext(),httpClient,params) @AT@ 10579 @LENGTH@ 55
---UPD MethodInvocation@@IntrospectionSupport.setProperties(httpClient,params) @TO@ PropertyBindingSupport.bindProperties(getCamelContext(),httpClient,params) @AT@ 10579 @LENGTH@ 54
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 10579 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[httpClient, params] @TO@ MethodName:bindProperties:[getCamelContext(), httpClient, params] @AT@ 10600 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:setProperties:[httpClient, params] @AT@ 10619 @LENGTH@ 17


UPD TypeDeclaration@@[@Component("sftp"), @FileProcessStrategy(FtpProcessStrategyFactory.class), public]SftpComponent, RemoteFileComponent<SftpRemoteFile> @TO@ [@Component("sftp"), @FileProcessStrategy(SftpProcessStrategyFactory.class), public]SftpComponent, RemoteFileComponent<SftpRemoteFile> @AT@ 1221 @LENGTH@ 1289
---UPD SingleMemberAnnotation@@@FileProcessStrategy(FtpProcessStrategyFactory.class) @TO@ @FileProcessStrategy(SftpProcessStrategyFactory.class) @AT@ 1240 @LENGTH@ 53


MOV FieldDeclaration@@private, AS2SignedDataGenerator, [gen] @TO@ TypeDeclaration@@[public]AS2MessageTest,  @AT@ 6814 @LENGTH@ 35


INS MethodDeclaration@@public, void, MethodName:shouldNotConvertHexStringToObjectIdForRenamedNestedIdField,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]QueryMapperUnitTests,  @AT@ 30439 @LENGTH@ 421
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldNotConvertHexStringToObjectIdForRenamedNestedIdField,  @AT@ 30439 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldNotConvertHexStringToObjectIdForRenamedNestedIdField,  @AT@ 30446 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldNotConvertHexStringToObjectIdForRenamedNestedIdField @TO@ MethodDeclaration@@public, void, MethodName:shouldNotConvertHexStringToObjectIdForRenamedNestedIdField,  @AT@ 30451 @LENGTH@ 58
---INS VariableDeclarationStatement@@String idHex=new ObjectId().toHexString(); @TO@ MethodDeclaration@@public, void, MethodName:shouldNotConvertHexStringToObjectIdForRenamedNestedIdField,  @AT@ 30517 @LENGTH@ 44
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String idHex=new ObjectId().toHexString(); @AT@ 30517 @LENGTH@ 6
------INS VariableDeclarationFragment@@idHex=new ObjectId().toHexString() @TO@ VariableDeclarationStatement@@String idHex=new ObjectId().toHexString(); @AT@ 30524 @LENGTH@ 36
---------INS SimpleName@@idHex @TO@ VariableDeclarationFragment@@idHex=new ObjectId().toHexString() @AT@ 30524 @LENGTH@ 5
---------INS MethodInvocation@@new ObjectId().toHexString() @TO@ VariableDeclarationFragment@@idHex=new ObjectId().toHexString() @AT@ 30532 @LENGTH@ 28
------------INS ClassInstanceCreation@@ObjectId[] @TO@ MethodInvocation@@new ObjectId().toHexString() @AT@ 30532 @LENGTH@ 14
---------------INS New@@new @TO@ ClassInstanceCreation@@ObjectId[] @AT@ 30532 @LENGTH@ 3
---------------INS SimpleType@@ObjectId @TO@ ClassInstanceCreation@@ObjectId[] @AT@ 30536 @LENGTH@ 8
------------INS SimpleName@@MethodName:toHexString:[] @TO@ MethodInvocation@@new ObjectId().toHexString() @AT@ 30547 @LENGTH@ 13
---INS VariableDeclarationStatement@@Query query=new Query(where("nested.id").is(idHex)); @TO@ MethodDeclaration@@public, void, MethodName:shouldNotConvertHexStringToObjectIdForRenamedNestedIdField,  @AT@ 30564 @LENGTH@ 54
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=new Query(where("nested.id").is(idHex)); @AT@ 30564 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=new Query(where("nested.id").is(idHex)) @TO@ VariableDeclarationStatement@@Query query=new Query(where("nested.id").is(idHex)); @AT@ 30570 @LENGTH@ 47
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new Query(where("nested.id").is(idHex)) @AT@ 30570 @LENGTH@ 5
---------INS ClassInstanceCreation@@Query[where("nested.id").is(idHex)] @TO@ VariableDeclarationFragment@@query=new Query(where("nested.id").is(idHex)) @AT@ 30578 @LENGTH@ 39
------------INS New@@new @TO@ ClassInstanceCreation@@Query[where("nested.id").is(idHex)] @AT@ 30578 @LENGTH@ 3
------------INS SimpleType@@Query @TO@ ClassInstanceCreation@@Query[where("nested.id").is(idHex)] @AT@ 30582 @LENGTH@ 5
------------INS MethodInvocation@@where("nested.id").is(idHex) @TO@ ClassInstanceCreation@@Query[where("nested.id").is(idHex)] @AT@ 30588 @LENGTH@ 28
---------------INS MethodInvocation@@MethodName:where:["nested.id"] @TO@ MethodInvocation@@where("nested.id").is(idHex) @AT@ 30588 @LENGTH@ 18
------------------INS StringLiteral@@"nested.id" @TO@ MethodInvocation@@MethodName:where:["nested.id"] @AT@ 30594 @LENGTH@ 11
---------------INS SimpleName@@MethodName:is:[idHex] @TO@ MethodInvocation@@where("nested.id").is(idHex) @AT@ 30607 @LENGTH@ 9
------------------INS SimpleName@@idHex @TO@ SimpleName@@MethodName:is:[idHex] @AT@ 30610 @LENGTH@ 5
---INS VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class)); @TO@ MethodDeclaration@@public, void, MethodName:shouldNotConvertHexStringToObjectIdForRenamedNestedIdField,  @AT@ 30622 @LENGTH@ 157
------INS SimpleType@@org.bson.Document @TO@ VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class)); @AT@ 30622 @LENGTH@ 17
------INS VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class)) @TO@ VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class)); @AT@ 30640 @LENGTH@ 138
---------INS SimpleName@@document @TO@ VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class)) @AT@ 30640 @LENGTH@ 8
---------INS MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class)) @TO@ VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class)) @AT@ 30651 @LENGTH@ 127
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class)) @AT@ 30651 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class)] @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class)) @AT@ 30658 @LENGTH@ 120
---------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class)] @AT@ 30674 @LENGTH@ 22
------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 30674 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 30680 @LENGTH@ 16
---------------INS MethodInvocation@@context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class) @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class)] @AT@ 30702 @LENGTH@ 75
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class) @AT@ 30702 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getPersistentEntity:[RootForClassWithExplicitlyRenamedIdField.class] @TO@ MethodInvocation@@context.getPersistentEntity(RootForClassWithExplicitlyRenamedIdField.class) @AT@ 30710 @LENGTH@ 67
---------------------INS TypeLiteral@@RootForClassWithExplicitlyRenamedIdField.class @TO@ SimpleName@@MethodName:getPersistentEntity:[RootForClassWithExplicitlyRenamedIdField.class] @AT@ 30730 @LENGTH@ 46
---INS ExpressionStatement@@MethodInvocation:assertThat(document).isEqualTo(new org.bson.Document("nested.id",idHex)) @TO@ MethodDeclaration@@public, void, MethodName:shouldNotConvertHexStringToObjectIdForRenamedNestedIdField,  @AT@ 30783 @LENGTH@ 74
------INS MethodInvocation@@assertThat(document).isEqualTo(new org.bson.Document("nested.id",idHex)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(document).isEqualTo(new org.bson.Document("nested.id",idHex)) @AT@ 30783 @LENGTH@ 73
---------INS MethodInvocation@@MethodName:assertThat:[document] @TO@ MethodInvocation@@assertThat(document).isEqualTo(new org.bson.Document("nested.id",idHex)) @AT@ 30783 @LENGTH@ 20
------------INS SimpleName@@document @TO@ MethodInvocation@@MethodName:assertThat:[document] @AT@ 30794 @LENGTH@ 8
---------INS SimpleName@@MethodName:isEqualTo:[new org.bson.Document("nested.id",idHex)] @TO@ MethodInvocation@@assertThat(document).isEqualTo(new org.bson.Document("nested.id",idHex)) @AT@ 30804 @LENGTH@ 52
------------INS ClassInstanceCreation@@org.bson.Document["nested.id", idHex] @TO@ SimpleName@@MethodName:isEqualTo:[new org.bson.Document("nested.id",idHex)] @AT@ 30814 @LENGTH@ 41
---------------INS New@@new @TO@ ClassInstanceCreation@@org.bson.Document["nested.id", idHex] @AT@ 30814 @LENGTH@ 3
---------------INS SimpleType@@org.bson.Document @TO@ ClassInstanceCreation@@org.bson.Document["nested.id", idHex] @AT@ 30818 @LENGTH@ 17
---------------INS StringLiteral@@"nested.id" @TO@ ClassInstanceCreation@@org.bson.Document["nested.id", idHex] @AT@ 30836 @LENGTH@ 11
---------------INS SimpleName@@idHex @TO@ ClassInstanceCreation@@org.bson.Document["nested.id", idHex] @AT@ 30849 @LENGTH@ 5


INS MethodDeclaration@@default, Condition, MethodName:isIn, Iterable<Long> ids,  @TO@ TypeDeclaration@@[public]Expression, [Visitable] @AT@ 1557 @LENGTH@ 119
---INS Modifier@@default @TO@ MethodDeclaration@@default, Condition, MethodName:isIn, Iterable<Long> ids,  @AT@ 1557 @LENGTH@ 7
---INS SimpleType@@Condition @TO@ MethodDeclaration@@default, Condition, MethodName:isIn, Iterable<Long> ids,  @AT@ 1565 @LENGTH@ 9
---INS SimpleName@@MethodName:isIn @TO@ MethodDeclaration@@default, Condition, MethodName:isIn, Iterable<Long> ids,  @AT@ 1575 @LENGTH@ 4
---INS SingleVariableDeclaration@@Iterable<Long> ids @TO@ MethodDeclaration@@default, Condition, MethodName:isIn, Iterable<Long> ids,  @AT@ 1580 @LENGTH@ 18
------INS ParameterizedType@@Iterable<Long> @TO@ SingleVariableDeclaration@@Iterable<Long> ids @AT@ 1580 @LENGTH@ 14
---------INS SimpleType@@Iterable @TO@ ParameterizedType@@Iterable<Long> @AT@ 1580 @LENGTH@ 8
---------INS SimpleType@@Long @TO@ ParameterizedType@@Iterable<Long> @AT@ 1589 @LENGTH@ 4
------INS SimpleName@@ids @TO@ SingleVariableDeclaration@@Iterable<Long> ids @AT@ 1595 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:Comparison.create(this,"in",new ListLiteral(ids)) @TO@ MethodDeclaration@@default, Condition, MethodName:isIn, Iterable<Long> ids,  @AT@ 1604 @LENGTH@ 69
------INS MethodInvocation@@Comparison.create(this,"in",new ListLiteral(ids)) @TO@ ReturnStatement@@MethodInvocation:Comparison.create(this,"in",new ListLiteral(ids)) @AT@ 1611 @LENGTH@ 61
---------INS SimpleName@@Name:Comparison @TO@ MethodInvocation@@Comparison.create(this,"in",new ListLiteral(ids)) @AT@ 1611 @LENGTH@ 10
---------INS SimpleName@@MethodName:create:[this, "in", new ListLiteral(ids)] @TO@ MethodInvocation@@Comparison.create(this,"in",new ListLiteral(ids)) @AT@ 1622 @LENGTH@ 50
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:create:[this, "in", new ListLiteral(ids)] @AT@ 1633 @LENGTH@ 4
------------INS StringLiteral@@"in" @TO@ SimpleName@@MethodName:create:[this, "in", new ListLiteral(ids)] @AT@ 1642 @LENGTH@ 4
------------INS ClassInstanceCreation@@ListLiteral[ids] @TO@ SimpleName@@MethodName:create:[this, "in", new ListLiteral(ids)] @AT@ 1651 @LENGTH@ 20
---------------INS New@@new @TO@ ClassInstanceCreation@@ListLiteral[ids] @AT@ 1651 @LENGTH@ 3
---------------INS SimpleType@@ListLiteral @TO@ ClassInstanceCreation@@ListLiteral[ids] @AT@ 1655 @LENGTH@ 11
---------------INS SimpleName@@ids @TO@ ClassInstanceCreation@@ListLiteral[ids] @AT@ 1667 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertTrue(names.contains("zip")) @TO@ MethodInvocation:assertTrue(names.contains("zipdeflater")) @AT@ 2527 @LENGTH@ 34
---UPD MethodInvocation@@assertTrue(names.contains("zip")) @TO@ assertTrue(names.contains("zipdeflater")) @AT@ 2527 @LENGTH@ 33
------UPD SimpleName@@MethodName:assertTrue:[names.contains("zip")] @TO@ MethodName:assertTrue:[names.contains("zipdeflater")] @AT@ 2527 @LENGTH@ 33
---------UPD MethodInvocation@@names.contains("zip") @TO@ names.contains("zipdeflater") @AT@ 2538 @LENGTH@ 21
------------UPD SimpleName@@MethodName:contains:["zip"] @TO@ MethodName:contains:["zipdeflater"] @AT@ 2544 @LENGTH@ 15
---------------UPD StringLiteral@@"zip" @TO@ "zipdeflater" @AT@ 2553 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:registry.put("params",params) @TO@ MethodInvocation:registry.bind("params",params) @AT@ 5255 @LENGTH@ 31
---UPD MethodInvocation@@registry.put("params",params) @TO@ registry.bind("params",params) @AT@ 5255 @LENGTH@ 30
------UPD SimpleName@@MethodName:put:["params", params] @TO@ MethodName:bind:["params", params] @AT@ 5264 @LENGTH@ 21


UPD TypeDeclaration@@[@Component("tidyMarkup"), public]TidyMarkupDataFormat, ServiceSupport[DataFormat, DataFormatName] @TO@ [@Dataformat("tidyMarkup"), public]TidyMarkupDataFormat, ServiceSupport[DataFormat, DataFormatName] @AT@ 2111 @LENGTH@ 7982
---UPD SingleMemberAnnotation@@@Component("tidyMarkup") @TO@ @Dataformat("tidyMarkup") @AT@ 2111 @LENGTH@ 24


INS IfStatement@@if (mappingInfo == null) {  return;} @TO@ MethodDeclaration@@private, void, MethodName:exposeEffectiveLookupPathKey, HandlerMethod method, HttpServletRequest request, String repositoryBasePath,  @AT@ 10020 @LENGTH@ 41
---INS InfixExpression@@mappingInfo == null @TO@ IfStatement@@if (mappingInfo == null) {  return;} @AT@ 10024 @LENGTH@ 19
------INS SimpleName@@mappingInfo @TO@ InfixExpression@@mappingInfo == null @AT@ 10024 @LENGTH@ 11
------INS Operator@@== @TO@ InfixExpression@@mappingInfo == null @AT@ 10035 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@mappingInfo == null @AT@ 10039 @LENGTH@ 4
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (mappingInfo == null) {  return;} @AT@ 10045 @LENGTH@ 16
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 10050 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:resolvers.add(new BundleTypeConverterLoader(bundle,url2 != null)) @TO@ MethodInvocation:resolvers.add(new BundleTypeConverterLoader(bundle,url3 != null)) @AT@ 11080 @LENGTH@ 67
---UPD MethodInvocation@@resolvers.add(new BundleTypeConverterLoader(bundle,url2 != null)) @TO@ resolvers.add(new BundleTypeConverterLoader(bundle,url3 != null)) @AT@ 11080 @LENGTH@ 66
------UPD SimpleName@@MethodName:add:[new BundleTypeConverterLoader(bundle,url2 != null)] @TO@ MethodName:add:[new BundleTypeConverterLoader(bundle,url3 != null)] @AT@ 11090 @LENGTH@ 56
---------UPD ClassInstanceCreation@@BundleTypeConverterLoader[bundle, url2 != null] @TO@ BundleTypeConverterLoader[bundle, url3 != null] @AT@ 11094 @LENGTH@ 51
------------UPD InfixExpression@@url2 != null @TO@ url3 != null @AT@ 11132 @LENGTH@ 12
---------------UPD SimpleName@@url2 @TO@ url3 @AT@ 11132 @LENGTH@ 4


UPD TypeDeclaration@@[public]CxfUtilsTestHelper,  @TO@ [public, final]CxfUtilsTestHelper,  @AT@ 1425 @LENGTH@ 5092
---INS Modifier@@final @TO@ TypeDeclaration@@[public]CxfUtilsTestHelper,  @AT@ 1432 @LENGTH@ 5


UPD IfStatement@@if (detailsNode.isNull()) {  token.setDetails(null);} else {  token.setDetails(detailsNode);} @TO@ if (detailsNode.isNull() || detailsNode.isMissingNode()) {  token.setDetails(null);} else {  token.setDetails(detailsNode);} @AT@ 3589 @LENGTH@ 103
---DEL MethodInvocation@@detailsNode.isNull() @AT@ 3593 @LENGTH@ 20
---INS InfixExpression@@detailsNode.isNull() || detailsNode.isMissingNode() @TO@ IfStatement@@if (detailsNode.isNull()) {  token.setDetails(null);} else {  token.setDetails(detailsNode);} @AT@ 3656 @LENGTH@ 51
------INS MethodInvocation@@detailsNode.isNull() @TO@ InfixExpression@@detailsNode.isNull() || detailsNode.isMissingNode() @AT@ 3656 @LENGTH@ 20
---------MOV SimpleName@@Name:detailsNode @TO@ MethodInvocation@@detailsNode.isNull() @AT@ 3593 @LENGTH@ 11
---------MOV SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@detailsNode.isNull() @AT@ 3605 @LENGTH@ 8
------INS Operator@@|| @TO@ InfixExpression@@detailsNode.isNull() || detailsNode.isMissingNode() @AT@ 3676 @LENGTH@ 2
------INS MethodInvocation@@detailsNode.isMissingNode() @TO@ InfixExpression@@detailsNode.isNull() || detailsNode.isMissingNode() @AT@ 3680 @LENGTH@ 27
---------INS SimpleName@@Name:detailsNode @TO@ MethodInvocation@@detailsNode.isMissingNode() @AT@ 3680 @LENGTH@ 11
---------INS SimpleName@@MethodName:isMissingNode:[] @TO@ MethodInvocation@@detailsNode.isMissingNode() @AT@ 3692 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:dropsValuesContainingAnEmptyString,  @TO@ TypeDeclaration@@[public]QuerydslPredicateBuilderUnitTests,  @AT@ 7538 @LENGTH@ 168
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:dropsValuesContainingAnEmptyString,  @AT@ 7538 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:dropsValuesContainingAnEmptyString,  @AT@ 7545 @LENGTH@ 4
---INS SimpleName@@MethodName:dropsValuesContainingAnEmptyString @TO@ MethodDeclaration@@public, void, MethodName:dropsValuesContainingAnEmptyString,  @AT@ 7550 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:values.add("firstname","") @TO@ MethodDeclaration@@public, void, MethodName:dropsValuesContainingAnEmptyString,  @AT@ 7592 @LENGTH@ 28
------INS MethodInvocation@@values.add("firstname","") @TO@ ExpressionStatement@@MethodInvocation:values.add("firstname","") @AT@ 7592 @LENGTH@ 27
---------INS SimpleName@@Name:values @TO@ MethodInvocation@@values.add("firstname","") @AT@ 7592 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:["firstname", ""] @TO@ MethodInvocation@@values.add("firstname","") @AT@ 7599 @LENGTH@ 20
------------INS StringLiteral@@"firstname" @TO@ SimpleName@@MethodName:add:["firstname", ""] @AT@ 7603 @LENGTH@ 11
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:add:["firstname", ""] @AT@ 7616 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)).isNull() @TO@ MethodDeclaration@@public, void, MethodName:dropsValuesContainingAnEmptyString,  @AT@ 7624 @LENGTH@ 79
------INS MethodInvocation@@assertThat(builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)).isNull() @AT@ 7624 @LENGTH@ 78
---------INS MethodInvocation@@MethodName:assertThat:[builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)] @TO@ MethodInvocation@@assertThat(builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)).isNull() @AT@ 7624 @LENGTH@ 69
------------INS MethodInvocation@@builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS) @TO@ MethodInvocation@@MethodName:assertThat:[builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)] @AT@ 7635 @LENGTH@ 57
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS) @AT@ 7635 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getPredicate:[USER_TYPE, values, DEFAULT_BINDINGS] @TO@ MethodInvocation@@builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS) @AT@ 7643 @LENGTH@ 49
------------------INS SimpleName@@USER_TYPE @TO@ SimpleName@@MethodName:getPredicate:[USER_TYPE, values, DEFAULT_BINDINGS] @AT@ 7656 @LENGTH@ 9
------------------INS SimpleName@@values @TO@ SimpleName@@MethodName:getPredicate:[USER_TYPE, values, DEFAULT_BINDINGS] @AT@ 7667 @LENGTH@ 6
------------------INS SimpleName@@DEFAULT_BINDINGS @TO@ SimpleName@@MethodName:getPredicate:[USER_TYPE, values, DEFAULT_BINDINGS] @AT@ 7675 @LENGTH@ 16
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)).isNull() @AT@ 7694 @LENGTH@ 8


DEL MethodDeclaration@@private, voidMethodName:PredicateBuilder,  @AT@ 1328 @LENGTH@ 34
---DEL Modifier@@private @AT@ 1328 @LENGTH@ 7
---DEL SimpleName@@MethodName:PredicateBuilder @AT@ 1336 @LENGTH@ 16


DEL ExpressionStatement@@MethodInvocation:jar.addAsManifestResource(new StringAsset("Dependencies: org.jboss.jts \n"),"MANIFEST.MF") @AT@ 1922 @LENGTH@ 92
---DEL MethodInvocation@@jar.addAsManifestResource(new StringAsset("Dependencies: org.jboss.jts \n"),"MANIFEST.MF") @AT@ 1922 @LENGTH@ 91
------DEL SimpleName@@Name:jar @AT@ 1922 @LENGTH@ 3
------DEL SimpleName@@MethodName:addAsManifestResource:[new StringAsset("Dependencies: org.jboss.jts \n"), "MANIFEST.MF"] @AT@ 1926 @LENGTH@ 87
---------DEL ClassInstanceCreation@@StringAsset["Dependencies: org.jboss.jts \n"] @AT@ 1948 @LENGTH@ 49
------------DEL New@@new @AT@ 1948 @LENGTH@ 3
------------DEL SimpleType@@StringAsset @AT@ 1952 @LENGTH@ 11
------------DEL StringLiteral@@"Dependencies: org.jboss.jts \n" @AT@ 1964 @LENGTH@ 32
---------DEL StringLiteral@@"MANIFEST.MF" @AT@ 1999 @LENGTH@ 13


UPD VariableDeclarationStatement@@int c=counter.updateAndGet(x -> (++x < size ? x : 0)); @TO@ int c=counter.updateAndGet(x -> ++x < size ? x : 0); @AT@ 1305 @LENGTH@ 56
---UPD VariableDeclarationFragment@@c=counter.updateAndGet(x -> (++x < size ? x : 0)) @TO@ c=counter.updateAndGet(x -> ++x < size ? x : 0) @AT@ 1309 @LENGTH@ 51
------UPD MethodInvocation@@counter.updateAndGet(x -> (++x < size ? x : 0)) @TO@ counter.updateAndGet(x -> ++x < size ? x : 0) @AT@ 1313 @LENGTH@ 47
---------UPD SimpleName@@MethodName:updateAndGet:[x -> (++x < size ? x : 0)] @TO@ MethodName:updateAndGet:[x -> ++x < size ? x : 0] @AT@ 1321 @LENGTH@ 39
------------UPD LambdaExpression@@x -> (++x < size ? x : 0) @TO@ x -> ++x < size ? x : 0 @AT@ 1334 @LENGTH@ 25
---------------DEL ParenthesizedExpression@@(++x < size ? x : 0) @AT@ 1339 @LENGTH@ 20
---------------MOV ConditionalExpression@@++x < size ? x : 0 @TO@ LambdaExpression@@x -> (++x < size ? x : 0) @AT@ 1340 @LENGTH@ 18


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(FallbackTypeConverter.class)] @TO@ TypeDeclaration@@[@Converter(loader=true), public]FallbackTypeConverter,  @AT@ 2291 @LENGTH@ 87


INS MethodDeclaration@@public, static, void, MethodName:noJDK12,  @TO@ TypeDeclaration@@[@RunWith(WildflyTestRunner.class), @ServerControl(manual=true), public]AuditLogBootingSyslogTest,  @AT@ 3044 @LENGTH@ 202
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:noJDK12,  @AT@ 3044 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:noJDK12,  @AT@ 3051 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:noJDK12,  @AT@ 3058 @LENGTH@ 4
---INS SimpleName@@MethodName:noJDK12 @TO@ MethodDeclaration@@public, static, void, MethodName:noJDK12,  @AT@ 3063 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:Assume.assumeFalse("Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658","12".equals(System.getProperty("java.specification.version"))) @TO@ MethodDeclaration@@public, static, void, MethodName:noJDK12,  @AT@ 3083 @LENGTH@ 157
------INS MethodInvocation@@Assume.assumeFalse("Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658","12".equals(System.getProperty("java.specification.version"))) @TO@ ExpressionStatement@@MethodInvocation:Assume.assumeFalse("Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658","12".equals(System.getProperty("java.specification.version"))) @AT@ 3083 @LENGTH@ 156
---------INS SimpleName@@Name:Assume @TO@ MethodInvocation@@Assume.assumeFalse("Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658","12".equals(System.getProperty("java.specification.version"))) @AT@ 3083 @LENGTH@ 6
---------INS SimpleName@@MethodName:assumeFalse:["Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658", "12".equals(System.getProperty("java.specification.version"))] @TO@ MethodInvocation@@Assume.assumeFalse("Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658","12".equals(System.getProperty("java.specification.version"))) @AT@ 3090 @LENGTH@ 149
------------INS StringLiteral@@"Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658" @TO@ SimpleName@@MethodName:assumeFalse:["Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658", "12".equals(System.getProperty("java.specification.version"))] @AT@ 3102 @LENGTH@ 73
------------INS MethodInvocation@@"12".equals(System.getProperty("java.specification.version")) @TO@ SimpleName@@MethodName:assumeFalse:["Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658", "12".equals(System.getProperty("java.specification.version"))] @AT@ 3177 @LENGTH@ 61
---------------INS StringLiteral@@"12" @TO@ MethodInvocation@@"12".equals(System.getProperty("java.specification.version")) @AT@ 3177 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:[System.getProperty("java.specification.version")] @TO@ MethodInvocation@@"12".equals(System.getProperty("java.specification.version")) @AT@ 3182 @LENGTH@ 56
------------------INS MethodInvocation@@System.getProperty("java.specification.version") @TO@ SimpleName@@MethodName:equals:[System.getProperty("java.specification.version")] @AT@ 3189 @LENGTH@ 48
---------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("java.specification.version") @AT@ 3189 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getProperty:["java.specification.version"] @TO@ MethodInvocation@@System.getProperty("java.specification.version") @AT@ 3196 @LENGTH@ 41
------------------------INS StringLiteral@@"java.specification.version" @TO@ SimpleName@@MethodName:getProperty:["java.specification.version"] @AT@ 3208 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:assertNotNull(ee.getExitValue()) @TO@ MethodInvocation:assertTrue(ee.getExitValue() > 0) @AT@ 16210 @LENGTH@ 33
---UPD MethodInvocation@@assertNotNull(ee.getExitValue()) @TO@ assertTrue(ee.getExitValue() > 0) @AT@ 16210 @LENGTH@ 32
------UPD SimpleName@@MethodName:assertNotNull:[ee.getExitValue()] @TO@ MethodName:assertTrue:[ee.getExitValue() > 0] @AT@ 16210 @LENGTH@ 32
---------INS InfixExpression@@ee.getExitValue() > 0 @TO@ SimpleName@@MethodName:assertNotNull:[ee.getExitValue()] @AT@ 16222 @LENGTH@ 21
------------INS MethodInvocation@@ee.getExitValue() @TO@ InfixExpression@@ee.getExitValue() > 0 @AT@ 16222 @LENGTH@ 17
---------------MOV SimpleName@@Name:ee @TO@ MethodInvocation@@ee.getExitValue() @AT@ 16224 @LENGTH@ 2
---------------MOV SimpleName@@MethodName:getExitValue:[] @TO@ MethodInvocation@@ee.getExitValue() @AT@ 16227 @LENGTH@ 14
------------INS Operator@@> @TO@ InfixExpression@@ee.getExitValue() > 0 @AT@ 16239 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@ee.getExitValue() > 0 @AT@ 16242 @LENGTH@ 1
---------DEL MethodInvocation@@ee.getExitValue() @AT@ 16224 @LENGTH@ 17


DEL ExpressionStatement@@MethodInvocation:assertNull(this.template.receiveAndConvert(ROUTE,1)) @AT@ 15340 @LENGTH@ 54


INS ExpressionStatement@@MethodInvocation:registry.bind("sslContextParameters",new SSLContextParameters()) @TO@ MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 2960 @LENGTH@ 66
---INS MethodInvocation@@registry.bind("sslContextParameters",new SSLContextParameters()) @TO@ ExpressionStatement@@MethodInvocation:registry.bind("sslContextParameters",new SSLContextParameters()) @AT@ 2960 @LENGTH@ 65
------INS SimpleName@@Name:registry @TO@ MethodInvocation@@registry.bind("sslContextParameters",new SSLContextParameters()) @AT@ 2960 @LENGTH@ 8
------INS SimpleName@@MethodName:bind:["sslContextParameters", new SSLContextParameters()] @TO@ MethodInvocation@@registry.bind("sslContextParameters",new SSLContextParameters()) @AT@ 2969 @LENGTH@ 56
---------INS StringLiteral@@"sslContextParameters" @TO@ SimpleName@@MethodName:bind:["sslContextParameters", new SSLContextParameters()] @AT@ 2974 @LENGTH@ 22
---------INS ClassInstanceCreation@@SSLContextParameters[] @TO@ SimpleName@@MethodName:bind:["sslContextParameters", new SSLContextParameters()] @AT@ 2998 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@SSLContextParameters[] @AT@ 2998 @LENGTH@ 3
------------INS SimpleType@@SSLContextParameters @TO@ ClassInstanceCreation@@SSLContextParameters[] @AT@ 3002 @LENGTH@ 20


INS FieldDeclaration@@private, static, final, int, [SIXTEEN=16] @TO@ TypeDeclaration@@[public]Base64UrlNamingStrategy, [NamingStrategy] @AT@ 1244 @LENGTH@ 38
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, int, [SIXTEEN=16] @AT@ 1244 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, int, [SIXTEEN=16] @AT@ 1252 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, int, [SIXTEEN=16] @AT@ 1259 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@private, static, final, int, [SIXTEEN=16] @AT@ 1265 @LENGTH@ 3
---INS VariableDeclarationFragment@@SIXTEEN=16 @TO@ FieldDeclaration@@private, static, final, int, [SIXTEEN=16] @AT@ 1269 @LENGTH@ 12
------INS SimpleName@@SIXTEEN @TO@ VariableDeclarationFragment@@SIXTEEN=16 @AT@ 1269 @LENGTH@ 7
------INS NumberLiteral@@16 @TO@ VariableDeclarationFragment@@SIXTEEN=16 @AT@ 1279 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(clientBuilder,httpClientOptions) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(getCamelContext(),clientBuilder,httpClientOptions) @AT@ 19349 @LENGTH@ 69
---UPD MethodInvocation@@IntrospectionSupport.setProperties(clientBuilder,httpClientOptions) @TO@ PropertyBindingSupport.bindProperties(getCamelContext(),clientBuilder,httpClientOptions) @AT@ 19349 @LENGTH@ 68
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 19349 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[clientBuilder, httpClientOptions] @TO@ MethodName:bindProperties:[getCamelContext(), clientBuilder, httpClientOptions] @AT@ 19370 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:setProperties:[clientBuilder, httpClientOptions] @AT@ 19443 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:invokesMethodWithVarArgs,  @TO@ TypeDeclaration@@[public]ExtensionAwareEvaluationContextProviderUnitTests,  @AT@ 10114 @LENGTH@ 186
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:invokesMethodWithVarArgs,  @AT@ 10114 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:invokesMethodWithVarArgs,  @AT@ 10121 @LENGTH@ 4
---INS SimpleName@@MethodName:invokesMethodWithVarArgs @TO@ MethodDeclaration@@public, void, MethodName:invokesMethodWithVarArgs,  @AT@ 10126 @LENGTH@ 24
---INS ExpressionStatement@@Assignment:provider=createContextProviderWithOverloads() @TO@ MethodDeclaration@@public, void, MethodName:invokesMethodWithVarArgs,  @AT@ 10158 @LENGTH@ 48
------INS Assignment@@provider=createContextProviderWithOverloads() @TO@ ExpressionStatement@@Assignment:provider=createContextProviderWithOverloads() @AT@ 10158 @LENGTH@ 47
---------INS SimpleName@@provider @TO@ Assignment@@provider=createContextProviderWithOverloads() @AT@ 10158 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@provider=createContextProviderWithOverloads() @AT@ 10166 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:createContextProviderWithOverloads:[] @TO@ Assignment@@provider=createContextProviderWithOverloads() @AT@ 10169 @LENGTH@ 36
---INS ExpressionStatement@@MethodInvocation:assertThat(evaluateExpression("methodWithVarArgs('one', 'two')")).isEqualTo("varargs") @TO@ MethodDeclaration@@public, void, MethodName:invokesMethodWithVarArgs,  @AT@ 10210 @LENGTH@ 87
------INS MethodInvocation@@assertThat(evaluateExpression("methodWithVarArgs('one', 'two')")).isEqualTo("varargs") @TO@ ExpressionStatement@@MethodInvocation:assertThat(evaluateExpression("methodWithVarArgs('one', 'two')")).isEqualTo("varargs") @AT@ 10210 @LENGTH@ 86
---------INS MethodInvocation@@MethodName:assertThat:[evaluateExpression("methodWithVarArgs('one', 'two')")] @TO@ MethodInvocation@@assertThat(evaluateExpression("methodWithVarArgs('one', 'two')")).isEqualTo("varargs") @AT@ 10210 @LENGTH@ 65
------------INS MethodInvocation@@evaluateExpression("methodWithVarArgs('one', 'two')") @TO@ MethodInvocation@@MethodName:assertThat:[evaluateExpression("methodWithVarArgs('one', 'two')")] @AT@ 10221 @LENGTH@ 53
---------------INS SimpleName@@MethodName:evaluateExpression:["methodWithVarArgs('one', 'two')"] @TO@ MethodInvocation@@evaluateExpression("methodWithVarArgs('one', 'two')") @AT@ 10221 @LENGTH@ 53
------------------INS StringLiteral@@"methodWithVarArgs('one', 'two')" @TO@ SimpleName@@MethodName:evaluateExpression:["methodWithVarArgs('one', 'two')"] @AT@ 10240 @LENGTH@ 33
---------INS SimpleName@@MethodName:isEqualTo:["varargs"] @TO@ MethodInvocation@@assertThat(evaluateExpression("methodWithVarArgs('one', 'two')")).isEqualTo("varargs") @AT@ 10276 @LENGTH@ 20
------------INS StringLiteral@@"varargs" @TO@ SimpleName@@MethodName:isEqualTo:["varargs"] @AT@ 10286 @LENGTH@ 9


UPD MethodDeclaration@@public, T, MethodName:zipDefalter,  @TO@ public, T, MethodName:zipDeflater,  @AT@ 42695 @LENGTH@ 127
---UPD SimpleName@@MethodName:zipDefalter @TO@ MethodName:zipDeflater @AT@ 42704 @LENGTH@ 11


UPD MethodDeclaration@@public, abstract, String, MethodName:toString,  @TO@ public, abstract, String, MethodName:asString,  @AT@ 1090 @LENGTH@ 34
---UPD SimpleName@@MethodName:toString @TO@ MethodName:asString @AT@ 1113 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Event#{} was an ADD_PTN_EVENT with no partitions") @TO@ MethodInvocation:LOG.debug("Event#{} was an ADD_PTN_EVENT with no partitions",fromEventId()) @AT@ 2773 @LENGTH@ 62
---UPD MethodInvocation@@LOG.debug("Event#{} was an ADD_PTN_EVENT with no partitions") @TO@ LOG.debug("Event#{} was an ADD_PTN_EVENT with no partitions",fromEventId()) @AT@ 2773 @LENGTH@ 61
------UPD SimpleName@@MethodName:debug:["Event#{} was an ADD_PTN_EVENT with no partitions"] @TO@ MethodName:debug:["Event#{} was an ADD_PTN_EVENT with no partitions", fromEventId()] @AT@ 2777 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:fromEventId:[] @TO@ SimpleName@@MethodName:debug:["Event#{} was an ADD_PTN_EVENT with no partitions"] @AT@ 2850 @LENGTH@ 13


INS MethodDeclaration@@protected, boolean, MethodName:isTypeKey, String key,  @TO@ TypeDeclaration@@[public]QueryMapper,  @AT@ 20337 @LENGTH@ 95
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:isTypeKey, String key,  @AT@ 20337 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:isTypeKey, String key,  @AT@ 20347 @LENGTH@ 7
---INS SimpleName@@MethodName:isTypeKey @TO@ MethodDeclaration@@protected, boolean, MethodName:isTypeKey, String key,  @AT@ 20355 @LENGTH@ 9
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@protected, boolean, MethodName:isTypeKey, String key,  @AT@ 20365 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 20365 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 20372 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:converter.getTypeMapper().isTypeKey(key) @TO@ MethodDeclaration@@protected, boolean, MethodName:isTypeKey, String key,  @AT@ 20381 @LENGTH@ 48
------INS MethodInvocation@@converter.getTypeMapper().isTypeKey(key) @TO@ ReturnStatement@@MethodInvocation:converter.getTypeMapper().isTypeKey(key) @AT@ 20388 @LENGTH@ 40
---------INS MethodInvocation@@MethodName:getTypeMapper:[] @TO@ MethodInvocation@@converter.getTypeMapper().isTypeKey(key) @AT@ 20388 @LENGTH@ 25
---------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.getTypeMapper().isTypeKey(key) @AT@ 20388 @LENGTH@ 9
---------INS SimpleName@@MethodName:isTypeKey:[key] @TO@ MethodInvocation@@converter.getTypeMapper().isTypeKey(key) @AT@ 20414 @LENGTH@ 14
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:isTypeKey:[key] @AT@ 20424 @LENGTH@ 3


UPD MethodDeclaration@@public, void, MethodName:convertWhenJwkSetStreamHasRSAJwkElementWithENCPublicKeyUseAttributeThenThrowJwkException, Exception,  @TO@ public, void, MethodName:convertWhenJwkSetStreamHasRSAJwkElementWithENCPublicKeyUseAttributeThenReturnEmptyJwkSet, Exception,  @AT@ 5771 @LENGTH@ 554
---UPD SimpleName@@MethodName:convertWhenJwkSetStreamHasRSAJwkElementWithENCPublicKeyUseAttributeThenThrowJwkException @TO@ MethodName:convertWhenJwkSetStreamHasRSAJwkElementWithENCPublicKeyUseAttributeThenReturnEmptyJwkSet @AT@ 5783 @LENGTH@ 88
---DEL ExpressionStatement@@MethodInvocation:this.thrown.expect(JwkException.class) @AT@ 5895 @LENGTH@ 39
------DEL MethodInvocation@@this.thrown.expect(JwkException.class) @AT@ 5895 @LENGTH@ 38
---------DEL FieldAccess@@this.thrown @AT@ 5895 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 5895 @LENGTH@ 4
------------DEL SimpleName@@thrown @AT@ 5900 @LENGTH@ 6
---------DEL SimpleName@@MethodName:expect:[JwkException.class] @AT@ 5907 @LENGTH@ 26
------------DEL TypeLiteral@@JwkException.class @AT@ 5914 @LENGTH@ 18
---UPD ExpressionStatement@@MethodInvocation:this.thrown.expectMessage("enc (use) is currently not supported.") @TO@ MethodInvocation:assertTrue("JWK Set NOT empty",jwkSet.isEmpty()) @AT@ 5937 @LENGTH@ 67
------UPD MethodInvocation@@this.thrown.expectMessage("enc (use) is currently not supported.") @TO@ assertTrue("JWK Set NOT empty",jwkSet.isEmpty()) @AT@ 5937 @LENGTH@ 66
---------DEL FieldAccess@@this.thrown @AT@ 5937 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 5937 @LENGTH@ 4
------------DEL SimpleName@@thrown @AT@ 5942 @LENGTH@ 6
---------UPD SimpleName@@MethodName:expectMessage:["enc (use) is currently not supported."] @TO@ MethodName:assertTrue:["JWK Set NOT empty", jwkSet.isEmpty()] @AT@ 5949 @LENGTH@ 54
------------UPD StringLiteral@@"enc (use) is currently not supported." @TO@ "JWK Set NOT empty" @AT@ 5963 @LENGTH@ 39
------------INS MethodInvocation@@jwkSet.isEmpty() @TO@ SimpleName@@MethodName:expectMessage:["enc (use) is currently not supported."] @AT@ 6273 @LENGTH@ 16
---------------INS SimpleName@@Name:jwkSet @TO@ MethodInvocation@@jwkSet.isEmpty() @AT@ 6273 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@jwkSet.isEmpty() @AT@ 6280 @LENGTH@ 9
---MOV ExpressionStatement@@MethodInvocation:this.thrown.expectMessage("enc (use) is currently not supported.") @TO@ MethodDeclaration@@public, void, MethodName:convertWhenJwkSetStreamHasRSAJwkElementWithENCPublicKeyUseAttributeThenThrowJwkException, Exception,  @AT@ 5937 @LENGTH@ 67
---INS VariableDeclarationStatement@@Set<JwkDefinition> jwkSet=this.converter.convert(this.asInputStream(jwkSetObject)); @TO@ MethodDeclaration@@public, void, MethodName:convertWhenJwkSetStreamHasRSAJwkElementWithENCPublicKeyUseAttributeThenThrowJwkException, Exception,  @AT@ 6153 @LENGTH@ 85
------INS ParameterizedType@@Set<JwkDefinition> @TO@ VariableDeclarationStatement@@Set<JwkDefinition> jwkSet=this.converter.convert(this.asInputStream(jwkSetObject)); @AT@ 6153 @LENGTH@ 18
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<JwkDefinition> @AT@ 6153 @LENGTH@ 3
---------INS SimpleType@@JwkDefinition @TO@ ParameterizedType@@Set<JwkDefinition> @AT@ 6157 @LENGTH@ 13
------INS VariableDeclarationFragment@@jwkSet=this.converter.convert(this.asInputStream(jwkSetObject)) @TO@ VariableDeclarationStatement@@Set<JwkDefinition> jwkSet=this.converter.convert(this.asInputStream(jwkSetObject)); @AT@ 6172 @LENGTH@ 65
---------INS SimpleName@@jwkSet @TO@ VariableDeclarationFragment@@jwkSet=this.converter.convert(this.asInputStream(jwkSetObject)) @AT@ 6172 @LENGTH@ 6
---------MOV MethodInvocation@@this.converter.convert(this.asInputStream(jwkSetObject)) @TO@ VariableDeclarationFragment@@jwkSet=this.converter.convert(this.asInputStream(jwkSetObject)) @AT@ 6265 @LENGTH@ 56
---DEL ExpressionStatement@@MethodInvocation:this.converter.convert(this.asInputStream(jwkSetObject)) @AT@ 6265 @LENGTH@ 57


INS VariableDeclarationStatement@@Object value=extractParameterValue(parameter); @TO@ MethodDeclaration@@public, Object, MethodName:getParameterValue, PreferredConstructor.Parameter parameter,  @AT@ 3472 @LENGTH@ 48
---INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value=extractParameterValue(parameter); @AT@ 3472 @LENGTH@ 6
---INS VariableDeclarationFragment@@value=extractParameterValue(parameter) @TO@ VariableDeclarationStatement@@Object value=extractParameterValue(parameter); @AT@ 3479 @LENGTH@ 40
------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=extractParameterValue(parameter) @AT@ 3479 @LENGTH@ 5
------INS MethodInvocation@@extractParameterValue(parameter) @TO@ VariableDeclarationFragment@@value=extractParameterValue(parameter) @AT@ 3487 @LENGTH@ 32
---------INS SimpleName@@MethodName:extractParameterValue:[parameter] @TO@ MethodInvocation@@extractParameterValue(parameter) @AT@ 3487 @LENGTH@ 32
------------INS SimpleName@@parameter @TO@ SimpleName@@MethodName:extractParameterValue:[parameter] @AT@ 3509 @LENGTH@ 9


INS MethodDeclaration@@private, voidMethodName:ErrorHandlerReifier,  @TO@ TypeDeclaration@@[public]ErrorHandlerReifier,  @AT@ 1267 @LENGTH@ 37
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:ErrorHandlerReifier,  @AT@ 1267 @LENGTH@ 7
---INS SimpleName@@MethodName:ErrorHandlerReifier @TO@ MethodDeclaration@@private, voidMethodName:ErrorHandlerReifier,  @AT@ 1275 @LENGTH@ 19


MOV FieldDeclaration@@AmazonS3ClientMock, [clientMock=new AmazonS3ClientMock()] @TO@ TypeDeclaration@@[public]S3ComponentCopyObjectTest, CamelTestSupport @AT@ 1573 @LENGTH@ 57


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1291 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1291 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1298 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1306 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1336 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1343 @LENGTH@ 5


UPD SwitchStatement@@switch (as2MessageStructure) {case PLAIN:{    applicationEDIEntity.setMainBody(true);    EntityUtils.setMessageEntity(request,applicationEDIEntity);    break;  }case SIGNED:{  AS2SignedDataGenerator signingGenrator=createSigningGenerator(httpContext);  MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,signingGenrator,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,true,null);  EntityUtils.setMessageEntity(request,multipartSignedEntity);  break;}case ENCRYPTED:{CMSEnvelopedDataGenerator envelopedDataGenerator=createEncryptingGenerator(httpContext);OutputEncryptor encryptor=createEncryptor(httpContext);ApplicationPkcs7MimeEnvelopedDataEntity pkcs7MimeEnvelopedDataEntity=new ApplicationPkcs7MimeEnvelopedDataEntity(applicationEDIEntity,envelopedDataGenerator,encryptor,AS2TransferEncoding.BASE64,true);EntityUtils.setMessageEntity(request,pkcs7MimeEnvelopedDataEntity);break;}case SIGNED_ENCRYPTED:{AS2SignedDataGenerator signingGenrator=createSigningGenerator(httpContext);MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,signingGenrator,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,false,null);CMSEnvelopedDataGenerator envelopedDataGenerator=createEncryptingGenerator(httpContext);OutputEncryptor encryptor=createEncryptor(httpContext);ApplicationPkcs7MimeEnvelopedDataEntity pkcs7MimeEnvelopedDataEntity=new ApplicationPkcs7MimeEnvelopedDataEntity(multipartSignedEntity,envelopedDataGenerator,encryptor,AS2TransferEncoding.BASE64,true);EntityUtils.setMessageEntity(request,pkcs7MimeEnvelopedDataEntity);break;}case PLAIN_COMPRESSED:{CMSCompressedDataGenerator compressedDataGenerator=createCompressorGenerator(httpContext);OutputCompressor compressor=createCompressor(httpContext);ApplicationPkcs7MimeCompressedDataEntity pkcs7MimeCompressedDataEntity=new ApplicationPkcs7MimeCompressedDataEntity(applicationEDIEntity,compressedDataGenerator,compressor,AS2TransferEncoding.BASE64,true);EntityUtils.setMessageEntity(request,pkcs7MimeCompressedDataEntity);break;}case SIGNED_COMPRESSED:{AS2SignedDataGenerator signingGenrator=createSigningGenerator(httpContext);MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,signingGenrator,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,false,null);CMSCompressedDataGenerator compressedDataGenerator=createCompressorGenerator(httpContext);OutputCompressor compressor=createCompressor(httpContext);ApplicationPkcs7MimeCompressedDataEntity pkcs7MimeCompressedDataEntity=new ApplicationPkcs7MimeCompressedDataEntity(multipartSignedEntity,compressedDataGenerator,compressor,AS2TransferEncoding.BASE64,true);EntityUtils.setMessageEntity(request,pkcs7MimeCompressedDataEntity);break;}case ENCRYPTED_COMPRESSED:{CMSCompressedDataGenerator compressedDataGenerator=createCompressorGenerator(httpContext);OutputCompressor compressor=createCompressor(httpContext);ApplicationPkcs7MimeCompressedDataEntity pkcs7MimeCompressedDataEntity=new ApplicationPkcs7MimeCompressedDataEntity(applicationEDIEntity,compressedDataGenerator,compressor,AS2TransferEncoding.BASE64,false);CMSEnvelopedDataGenerator envelopedDataGenerator=createEncryptingGenerator(httpContext);OutputEncryptor encryptor=createEncryptor(httpContext);ApplicationPkcs7MimeEnvelopedDataEntity pkcs7MimeEnvelopedDataEntity=new ApplicationPkcs7MimeEnvelopedDataEntity(pkcs7MimeCompressedDataEntity,envelopedDataGenerator,encryptor,AS2TransferEncoding.BASE64,true);EntityUtils.setMessageEntity(request,pkcs7MimeEnvelopedDataEntity);break;}case SIGNED_ENCRYPTED_COMPRESSED:{AS2SignedDataGenerator signingGenrator=createSigningGenerator(httpContext);MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,signingGenrator,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,true,null);CMSCompressedDataGenerator compressedDataGenerator=createCompressorGenerator(httpContext);OutputCompressor compressor=createCompressor(httpContext);ApplicationPkcs7MimeCompressedDataEntity pkcs7MimeCompressedDataEntity=new ApplicationPkcs7MimeCompressedDataEntity(multipartSignedEntity,compressedDataGenerator,compressor,AS2TransferEncoding.BASE64,false);CMSEnvelopedDataGenerator envelopedDataGenerator=createEncryptingGenerator(httpContext);OutputEncryptor encryptor=createEncryptor(httpContext);ApplicationPkcs7MimeEnvelopedDataEntity pkcs7MimeEnvelopedDataEntity=new ApplicationPkcs7MimeEnvelopedDataEntity(pkcs7MimeCompressedDataEntity,envelopedDataGenerator,encryptor,AS2TransferEncoding.BASE64,true);EntityUtils.setMessageEntity(request,pkcs7MimeEnvelopedDataEntity);break;}default :throw new HttpException("Unknown AS2 Message Structure");} @TO@ switch (as2MessageStructure) {case PLAIN:{    applicationEDIEntity.setMainBody(true);    EntityUtils.setMessageEntity(request,applicationEDIEntity);    break;  }case SIGNED:{  AS2SignedDataGenerator signingGenrator=createSigningGenerator(httpContext);  MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,signingGenrator,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,true,null);  EntityUtils.setMessageEntity(request,multipartSignedEntity);  break;}case ENCRYPTED:{CMSEnvelopedDataGenerator envelopedDataGenerator=createEncryptingGenerator(httpContext);OutputEncryptor encryptor=createEncryptor(httpContext);ApplicationPkcs7MimeEnvelopedDataEntity pkcs7MimeEnvelopedDataEntity=new ApplicationPkcs7MimeEnvelopedDataEntity(applicationEDIEntity,envelopedDataGenerator,encryptor,AS2TransferEncoding.BASE64,true);EntityUtils.setMessageEntity(request,pkcs7MimeEnvelopedDataEntity);break;}case SIGNED_ENCRYPTED:{AS2SignedDataGenerator signingGenrator=createSigningGenerator(httpContext);MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,signingGenrator,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,false,null);CMSEnvelopedDataGenerator envelopedDataGenerator=createEncryptingGenerator(httpContext);OutputEncryptor encryptor=createEncryptor(httpContext);ApplicationPkcs7MimeEnvelopedDataEntity pkcs7MimeEnvelopedDataEntity=new ApplicationPkcs7MimeEnvelopedDataEntity(multipartSignedEntity,envelopedDataGenerator,encryptor,AS2TransferEncoding.BASE64,true);EntityUtils.setMessageEntity(request,pkcs7MimeEnvelopedDataEntity);break;}case PLAIN_COMPRESSED:{CMSCompressedDataGenerator compressedDataGenerator=createCompressorGenerator(httpContext);OutputCompressor compressor=createCompressor(httpContext);ApplicationPkcs7MimeCompressedDataEntity pkcs7MimeCompressedDataEntity=new ApplicationPkcs7MimeCompressedDataEntity(applicationEDIEntity,compressedDataGenerator,compressor,AS2TransferEncoding.BASE64,true);EntityUtils.setMessageEntity(request,pkcs7MimeCompressedDataEntity);break;}case SIGNED_COMPRESSED:{AS2SignedDataGenerator signingGenrator=createSigningGenerator(httpContext);MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,signingGenrator,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,false,null);CMSCompressedDataGenerator compressedDataGenerator=createCompressorGenerator(httpContext);OutputCompressor compressor=createCompressor(httpContext);ApplicationPkcs7MimeCompressedDataEntity pkcs7MimeCompressedDataEntity=new ApplicationPkcs7MimeCompressedDataEntity(multipartSignedEntity,compressedDataGenerator,compressor,AS2TransferEncoding.BASE64,true);EntityUtils.setMessageEntity(request,pkcs7MimeCompressedDataEntity);break;}case ENCRYPTED_COMPRESSED:{CMSCompressedDataGenerator compressedDataGenerator=createCompressorGenerator(httpContext);OutputCompressor compressor=createCompressor(httpContext);ApplicationPkcs7MimeCompressedDataEntity pkcs7MimeCompressedDataEntity=new ApplicationPkcs7MimeCompressedDataEntity(applicationEDIEntity,compressedDataGenerator,compressor,AS2TransferEncoding.BASE64,false);CMSEnvelopedDataGenerator envelopedDataGenerator=createEncryptingGenerator(httpContext);OutputEncryptor encryptor=createEncryptor(httpContext);ApplicationPkcs7MimeEnvelopedDataEntity pkcs7MimeEnvelopedDataEntity=new ApplicationPkcs7MimeEnvelopedDataEntity(pkcs7MimeCompressedDataEntity,envelopedDataGenerator,encryptor,AS2TransferEncoding.BASE64,true);EntityUtils.setMessageEntity(request,pkcs7MimeEnvelopedDataEntity);break;}case ENCRYPTED_COMPRESSED_SIGNED:{AS2SignedDataGenerator signingGenrator=createSigningGenerator(httpContext);MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,signingGenrator,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,false,null);CMSCompressedDataGenerator compressedDataGenerator=createCompressorGenerator(httpContext);OutputCompressor compressor=createCompressor(httpContext);ApplicationPkcs7MimeCompressedDataEntity pkcs7MimeCompressedDataEntity=new ApplicationPkcs7MimeCompressedDataEntity(multipartSignedEntity,compressedDataGenerator,compressor,AS2TransferEncoding.BASE64,false);CMSEnvelopedDataGenerator envelopedDataGenerator=createEncryptingGenerator(httpContext);OutputEncryptor encryptor=createEncryptor(httpContext);ApplicationPkcs7MimeEnvelopedDataEntity pkcs7MimeEnvelopedDataEntity=new ApplicationPkcs7MimeEnvelopedDataEntity(pkcs7MimeCompressedDataEntity,envelopedDataGenerator,encryptor,AS2TransferEncoding.BASE64,true);EntityUtils.setMessageEntity(request,pkcs7MimeEnvelopedDataEntity);break;}default :throw new HttpException("Unknown AS2 Message Structure");} @AT@ 12591 @LENGTH@ 7270
---UPD SwitchCase@@case SIGNED_ENCRYPTED_COMPRESSED: @TO@ case ENCRYPTED_COMPRESSED_SIGNED: @AT@ 18179 @LENGTH@ 33
------UPD SimpleName@@SIGNED_ENCRYPTED_COMPRESSED @TO@ ENCRYPTED_COMPRESSED_SIGNED @AT@ 18184 @LENGTH@ 27
---UPD VariableDeclarationStatement@@MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,signingGenrator,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,true,null); @TO@ MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,signingGenrator,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,false,null); @AT@ 18385 @LENGTH@ 192
------UPD VariableDeclarationFragment@@multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,signingGenrator,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,true,null) @TO@ multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,signingGenrator,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,false,null) @AT@ 18407 @LENGTH@ 169
---------UPD ClassInstanceCreation@@MultipartSignedEntity[applicationEDIEntity, signingGenrator, AS2Charset.US_ASCII, AS2TransferEncoding.BASE64, true, null] @TO@ MultipartSignedEntity[applicationEDIEntity, signingGenrator, AS2Charset.US_ASCII, AS2TransferEncoding.BASE64, false, null] @AT@ 18431 @LENGTH@ 145
------------UPD BooleanLiteral@@true @TO@ false @AT@ 18565 @LENGTH@ 4


UPD TryStatement@@try {  String instanceName=UUID.randomUUID().toString();  Config namedConfig=new Config();  namedConfig.setInstanceName("named-" + instanceName);  namedConfig.getNetworkConfig().setPort(9001);  namedConfig.getNetworkConfig().getJoin().getAwsConfig().setEnabled(false);  namedConfig.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(true);  namedConfig.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(false);  Config customConfig=new Config();  customConfig.setInstanceName("custom-" + instanceName);  customConfig.getNetworkConfig().setPort(9002);  customConfig.getNetworkConfig().getJoin().getAwsConfig().setEnabled(false);  customConfig.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(true);  customConfig.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(false);  Config sharedConfig=new Config();  sharedConfig.setInstanceName("custom-" + instanceName);  sharedConfig.getNetworkConfig().setPort(9003);  sharedConfig.getNetworkConfig().getJoin().getAwsConfig().setEnabled(false);  sharedConfig.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(true);  sharedConfig.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(false);  Config componentConfig=new Config();  sharedConfig.setInstanceName("component-" + instanceName);  sharedConfig.getNetworkConfig().setPort(9004);  sharedConfig.getNetworkConfig().getJoin().getAwsConfig().setEnabled(false);  sharedConfig.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(true);  sharedConfig.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(false);  HazelcastInstance hzNamed=Hazelcast.newHazelcastInstance(namedConfig);  HazelcastInstance hzShared=Hazelcast.newHazelcastInstance(sharedConfig);  HazelcastInstance hzComponent=Hazelcast.newHazelcastInstance(componentConfig);  SimpleRegistry reg=new SimpleRegistry();  reg.put(customConfig.getInstanceName(),customConfig);  reg.put(sharedConfig.getInstanceName(),hzShared);  HazelcastMapComponent component=new HazelcastMapComponent();  component.setHazelcastInstance(hzComponent);  context=new DefaultCamelContext(reg);  context.addComponent("hazelcast-map",component);  context.start();  HazelcastDefaultEndpoint endpoint1=getHzEndpoint(context,"hazelcast-map:my-cache-1?hazelcastInstanceName=" + namedConfig.getInstanceName());  HazelcastDefaultEndpoint endpoint2=getHzEndpoint(context,"hazelcast-map:my-cache-2?hazelcastConfig=#" + customConfig.getInstanceName());  HazelcastDefaultEndpoint endpoint3=getHzEndpoint(context,"hazelcast-map:my-cache-2?hazelcastInstance=#" + sharedConfig.getInstanceName());  HazelcastDefaultEndpoint endpoint4=getHzEndpoint(context,"hazelcast-map:my-cache-4");  Assert.assertNotNull(endpoint1.getHazelcastInstance());  Assert.assertNotNull(endpoint2.getHazelcastInstance());  Assert.assertNotNull(endpoint3.getHazelcastInstance());  Assert.assertNotNull(endpoint4.getHazelcastInstance());  Assert.assertEquals(4,Hazelcast.getAllHazelcastInstances().size());  Assert.assertTrue(hzNamed == endpoint1.getHazelcastInstance());  Assert.assertTrue(Hazelcast.getHazelcastInstanceByName(customConfig.getInstanceName()) == endpoint2.getHazelcastInstance());  Assert.assertTrue(hzShared == endpoint3.getHazelcastInstance());  Assert.assertTrue(hzComponent == endpoint4.getHazelcastInstance());  Assert.assertNotNull(component.getHazelcastInstance());  Assert.assertTrue(hzComponent == component.getHazelcastInstance());  context.stop();  Assert.assertEquals(3,Hazelcast.getAllHazelcastInstances().size());}  finally {  if (context != null && context.isStarted()) {    context.stop();  }} @TO@ try {  String instanceName=UUID.randomUUID().toString();  Config namedConfig=new Config();  namedConfig.setInstanceName("named-" + instanceName);  namedConfig.getNetworkConfig().setPort(9001);  namedConfig.getNetworkConfig().getJoin().getAwsConfig().setEnabled(false);  namedConfig.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(true);  namedConfig.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(false);  Config customConfig=new Config();  customConfig.setInstanceName("custom-" + instanceName);  customConfig.getNetworkConfig().setPort(9002);  customConfig.getNetworkConfig().getJoin().getAwsConfig().setEnabled(false);  customConfig.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(true);  customConfig.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(false);  Config sharedConfig=new Config();  sharedConfig.setInstanceName("custom-" + instanceName);  sharedConfig.getNetworkConfig().setPort(9003);  sharedConfig.getNetworkConfig().getJoin().getAwsConfig().setEnabled(false);  sharedConfig.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(true);  sharedConfig.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(false);  Config componentConfig=new Config();  sharedConfig.setInstanceName("component-" + instanceName);  sharedConfig.getNetworkConfig().setPort(9004);  sharedConfig.getNetworkConfig().getJoin().getAwsConfig().setEnabled(false);  sharedConfig.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(true);  sharedConfig.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(false);  HazelcastInstance hzNamed=Hazelcast.newHazelcastInstance(namedConfig);  HazelcastInstance hzShared=Hazelcast.newHazelcastInstance(sharedConfig);  HazelcastInstance hzComponent=Hazelcast.newHazelcastInstance(componentConfig);  SimpleRegistry reg=new SimpleRegistry();  reg.bind(customConfig.getInstanceName(),customConfig);  reg.bind(sharedConfig.getInstanceName(),hzShared);  HazelcastMapComponent component=new HazelcastMapComponent();  component.setHazelcastInstance(hzComponent);  context=new DefaultCamelContext(reg);  context.addComponent("hazelcast-map",component);  context.start();  HazelcastDefaultEndpoint endpoint1=getHzEndpoint(context,"hazelcast-map:my-cache-1?hazelcastInstanceName=" + namedConfig.getInstanceName());  HazelcastDefaultEndpoint endpoint2=getHzEndpoint(context,"hazelcast-map:my-cache-2?hazelcastConfig=#" + customConfig.getInstanceName());  HazelcastDefaultEndpoint endpoint3=getHzEndpoint(context,"hazelcast-map:my-cache-2?hazelcastInstance=#" + sharedConfig.getInstanceName());  HazelcastDefaultEndpoint endpoint4=getHzEndpoint(context,"hazelcast-map:my-cache-4");  Assert.assertNotNull(endpoint1.getHazelcastInstance());  Assert.assertNotNull(endpoint2.getHazelcastInstance());  Assert.assertNotNull(endpoint3.getHazelcastInstance());  Assert.assertNotNull(endpoint4.getHazelcastInstance());  Assert.assertEquals(4,Hazelcast.getAllHazelcastInstances().size());  Assert.assertTrue(hzNamed == endpoint1.getHazelcastInstance());  Assert.assertTrue(Hazelcast.getHazelcastInstanceByName(customConfig.getInstanceName()) == endpoint2.getHazelcastInstance());  Assert.assertTrue(hzShared == endpoint3.getHazelcastInstance());  Assert.assertTrue(hzComponent == endpoint4.getHazelcastInstance());  Assert.assertNotNull(component.getHazelcastInstance());  Assert.assertTrue(hzComponent == component.getHazelcastInstance());  context.stop();  Assert.assertEquals(3,Hazelcast.getAllHazelcastInstances().size());}  finally {  if (context != null && context.isStarted()) {    context.stop();  }} @AT@ 10189 @LENGTH@ 4270
---UPD ExpressionStatement@@MethodInvocation:reg.put(customConfig.getInstanceName(),customConfig) @TO@ MethodInvocation:reg.bind(customConfig.getInstanceName(),customConfig) @AT@ 12380 @LENGTH@ 54
------UPD MethodInvocation@@reg.put(customConfig.getInstanceName(),customConfig) @TO@ reg.bind(customConfig.getInstanceName(),customConfig) @AT@ 12380 @LENGTH@ 53
---------UPD SimpleName@@MethodName:put:[customConfig.getInstanceName(), customConfig] @TO@ MethodName:bind:[customConfig.getInstanceName(), customConfig] @AT@ 12384 @LENGTH@ 49
---UPD ExpressionStatement@@MethodInvocation:reg.put(sharedConfig.getInstanceName(),hzShared) @TO@ MethodInvocation:reg.bind(sharedConfig.getInstanceName(),hzShared) @AT@ 12447 @LENGTH@ 50
------UPD MethodInvocation@@reg.put(sharedConfig.getInstanceName(),hzShared) @TO@ reg.bind(sharedConfig.getInstanceName(),hzShared) @AT@ 12447 @LENGTH@ 49
---------UPD SimpleName@@MethodName:put:[sharedConfig.getInstanceName(), hzShared] @TO@ MethodName:bind:[sharedConfig.getInstanceName(), hzShared] @AT@ 12451 @LENGTH@ 45


UPD VariableDeclarationStatement@@WebClientReactiveAuthorizationCodeTokenResponseClient client=new WebClientReactiveAuthorizationCodeTokenResponseClient(); @TO@ ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> client=getAccessTokenResponseClient(); @AT@ 27288 @LENGTH@ 123
---DEL SimpleType@@WebClientReactiveAuthorizationCodeTokenResponseClient @AT@ 27288 @LENGTH@ 53
---UPD VariableDeclarationFragment@@client=new WebClientReactiveAuthorizationCodeTokenResponseClient() @TO@ client=getAccessTokenResponseClient() @AT@ 27342 @LENGTH@ 68
------DEL ClassInstanceCreation@@WebClientReactiveAuthorizationCodeTokenResponseClient[] @AT@ 27351 @LENGTH@ 59
---------DEL New@@new @AT@ 27351 @LENGTH@ 3
---------DEL SimpleType@@WebClientReactiveAuthorizationCodeTokenResponseClient @AT@ 27355 @LENGTH@ 53
------INS MethodInvocation@@MethodName:getAccessTokenResponseClient:[] @TO@ VariableDeclarationFragment@@client=new WebClientReactiveAuthorizationCodeTokenResponseClient() @AT@ 27570 @LENGTH@ 30
---INS ParameterizedType@@ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> @TO@ VariableDeclarationStatement@@WebClientReactiveAuthorizationCodeTokenResponseClient client=new WebClientReactiveAuthorizationCodeTokenResponseClient(); @AT@ 27484 @LENGTH@ 76
------INS SimpleType@@ReactiveOAuth2AccessTokenResponseClient @TO@ ParameterizedType@@ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> @AT@ 27484 @LENGTH@ 39
------INS SimpleType@@OAuth2AuthorizationCodeGrantRequest @TO@ ParameterizedType@@ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> @AT@ 27524 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(searchCriteria,criteriaOptions) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(getCamelContext(),searchCriteria,criteriaOptions) @AT@ 5499 @LENGTH@ 68
---UPD MethodInvocation@@IntrospectionSupport.setProperties(searchCriteria,criteriaOptions) @TO@ PropertyBindingSupport.bindProperties(getCamelContext(),searchCriteria,criteriaOptions) @AT@ 5499 @LENGTH@ 67
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 5499 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[searchCriteria, criteriaOptions] @TO@ MethodName:bindProperties:[getCamelContext(), searchCriteria, criteriaOptions] @AT@ 5520 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:setProperties:[searchCriteria, criteriaOptions] @AT@ 5593 @LENGTH@ 17


UPD ReturnStatement@@MethodInvocation:OAuth2AuthorizationRequest.authorizationCode().authorizationUri("https://example.com/login/oauth/authorize").clientId(clientId).redirectUri("https://example.com/authorize/oauth2/code/registration-id").state("state").additionalParameters(additionalParameters) @TO@ MethodInvocation:OAuth2AuthorizationRequest.authorizationCode().authorizationUri("https://example.com/login/oauth/authorize").clientId(clientId).scope("openid").redirectUri("https://example.com/authorize/oauth2/code/registration-id").state("state").additionalParameters(additionalParameters) @AT@ 1107 @LENGTH@ 291
---UPD MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri("https://example.com/login/oauth/authorize").clientId(clientId).redirectUri("https://example.com/authorize/oauth2/code/registration-id").state("state").additionalParameters(additionalParameters) @TO@ OAuth2AuthorizationRequest.authorizationCode().authorizationUri("https://example.com/login/oauth/authorize").clientId(clientId).scope("openid").redirectUri("https://example.com/authorize/oauth2/code/registration-id").state("state").additionalParameters(additionalParameters) @AT@ 1114 @LENGTH@ 283
------INS MethodInvocation@@MethodName:scope:["openid"] @TO@ MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri("https://example.com/login/oauth/authorize").clientId(clientId).redirectUri("https://example.com/authorize/oauth2/code/registration-id").state("state").additionalParameters(additionalParameters) @AT@ 1114 @LENGTH@ 158
---------INS StringLiteral@@"openid" @TO@ MethodInvocation@@MethodName:scope:["openid"] @AT@ 1263 @LENGTH@ 8


UPD ReturnStatement@@LambdaExpression:headers -> {
  headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
  headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());
  if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {
    headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());
  }
}
 @TO@ LambdaExpression:headers -> {
  headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
  if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {
    headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());
  }
}
 @AT@ 4122 @LENGTH@ 392
---UPD LambdaExpression@@headers -> {
  headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
  headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());
  if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {
    headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());
  }
}
 @TO@ headers -> {
  headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
  if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {
    headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());
  }
}
 @AT@ 4129 @LENGTH@ 384
------DEL ExpressionStatement@@MethodInvocation:headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret()) @AT@ 4211 @LENGTH@ 93
---------DEL MethodInvocation@@headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret()) @AT@ 4211 @LENGTH@ 92
------------DEL SimpleName@@Name:headers @AT@ 4211 @LENGTH@ 7
------------DEL SimpleName@@MethodName:setBasicAuth:[clientRegistration.getClientId(), clientRegistration.getClientSecret()] @AT@ 4219 @LENGTH@ 84
---------------DEL MethodInvocation@@clientRegistration.getClientId() @AT@ 4232 @LENGTH@ 32
------------------DEL SimpleName@@Name:clientRegistration @AT@ 4232 @LENGTH@ 18
------------------DEL SimpleName@@MethodName:getClientId:[] @AT@ 4251 @LENGTH@ 13
---------------DEL MethodInvocation@@clientRegistration.getClientSecret() @AT@ 4266 @LENGTH@ 36
------------------DEL SimpleName@@Name:clientRegistration @AT@ 4266 @LENGTH@ 18
------------------DEL SimpleName@@MethodName:getClientSecret:[] @AT@ 4285 @LENGTH@ 17


UPD VariableDeclarationStatement@@EKSEndpoint endpoint=(EKSEndpoint)component.createEndpoint("aws-mq://label?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1"); @TO@ EKSEndpoint endpoint=(EKSEndpoint)component.createEndpoint("aws-eks://label?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1"); @AT@ 1817 @LENGTH@ 129
---UPD VariableDeclarationFragment@@endpoint=(EKSEndpoint)component.createEndpoint("aws-mq://label?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @TO@ endpoint=(EKSEndpoint)component.createEndpoint("aws-eks://label?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @AT@ 1829 @LENGTH@ 116
------UPD CastExpression@@(EKSEndpoint)component.createEndpoint("aws-mq://label?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @TO@ (EKSEndpoint)component.createEndpoint("aws-eks://label?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @AT@ 1840 @LENGTH@ 105
---------UPD MethodInvocation@@component.createEndpoint("aws-mq://label?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @TO@ component.createEndpoint("aws-eks://label?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @AT@ 1853 @LENGTH@ 92
------------UPD SimpleName@@MethodName:createEndpoint:["aws-mq://label?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1"] @TO@ MethodName:createEndpoint:["aws-eks://label?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1"] @AT@ 1863 @LENGTH@ 82
---------------UPD StringLiteral@@"aws-mq://label?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1" @TO@ "aws-eks://label?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1" @AT@ 1878 @LENGTH@ 66


UPD MethodDeclaration@@public, CompositeItemWriterBuilder<T>, MethodName:delegates, ItemWriter<? super T>... delegates,  @TO@ public, final, CompositeItemWriterBuilder<T>, MethodName:delegates, ItemWriter<? super T>... delegates,  @AT@ 2613 @LENGTH@ 133
---INS Modifier@@final @TO@ MethodDeclaration@@public, CompositeItemWriterBuilder<T>, MethodName:delegates, ItemWriter<? super T>... delegates,  @AT@ 2641 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:connectionFactory=new CachingConnectionFactory() @TO@ Assignment:connectionFactory=new CachingConnectionFactory("localhost") @AT@ 3976 @LENGTH@ 51
---UPD Assignment@@connectionFactory=new CachingConnectionFactory() @TO@ connectionFactory=new CachingConnectionFactory("localhost") @AT@ 3976 @LENGTH@ 50
------UPD ClassInstanceCreation@@CachingConnectionFactory[] @TO@ CachingConnectionFactory["localhost"] @AT@ 3996 @LENGTH@ 30
---------INS StringLiteral@@"localhost" @TO@ ClassInstanceCreation@@CachingConnectionFactory[] @AT@ 4025 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:from("file:target/data/zip?initialDelay=0&delay=10&delete=true").marshal().zipDefalter().to("file:target/data/zip/out?fileName=${file:name}.zip") @TO@ MethodInvocation:from("file:target/data/zip?initialDelay=0&delay=10&delete=true").marshal().zipDeflater().to("file:target/data/zip/out?fileName=${file:name}.zip") @AT@ 2252 @LENGTH@ 188
---UPD MethodInvocation@@from("file:target/data/zip?initialDelay=0&delay=10&delete=true").marshal().zipDefalter().to("file:target/data/zip/out?fileName=${file:name}.zip") @TO@ from("file:target/data/zip?initialDelay=0&delay=10&delete=true").marshal().zipDeflater().to("file:target/data/zip/out?fileName=${file:name}.zip") @AT@ 2252 @LENGTH@ 187
------UPD MethodInvocation@@MethodName:zipDefalter:[] @TO@ MethodName:zipDeflater:[] @AT@ 2252 @LENGTH@ 109


UPD ExpressionStatement@@MethodInvocation:camel.getProperties().put(JacksonConstants.TYPE_CONVERTER_TO_POJO,"true") @TO@ MethodInvocation:camel.getGlobalOptions().put(JacksonConstants.TYPE_CONVERTER_TO_POJO,"true") @AT@ 2215 @LENGTH@ 75
---UPD MethodInvocation@@camel.getProperties().put(JacksonConstants.TYPE_CONVERTER_TO_POJO,"true") @TO@ camel.getGlobalOptions().put(JacksonConstants.TYPE_CONVERTER_TO_POJO,"true") @AT@ 2215 @LENGTH@ 74
------UPD MethodInvocation@@MethodName:getProperties:[] @TO@ MethodName:getGlobalOptions:[] @AT@ 2215 @LENGTH@ 21


INS FieldDeclaration@@public, static, final, ClientAuthenticationMethod, [NONE=new ClientAuthenticationMethod("none")] @TO@ TypeDeclaration@@[public, final]ClientAuthenticationMethod, [Serializable] @AT@ 1458 @LENGTH@ 93
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, ClientAuthenticationMethod, [NONE=new ClientAuthenticationMethod("none")] @AT@ 1458 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, ClientAuthenticationMethod, [NONE=new ClientAuthenticationMethod("none")] @AT@ 1465 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, ClientAuthenticationMethod, [NONE=new ClientAuthenticationMethod("none")] @AT@ 1472 @LENGTH@ 5
---INS SimpleType@@ClientAuthenticationMethod @TO@ FieldDeclaration@@public, static, final, ClientAuthenticationMethod, [NONE=new ClientAuthenticationMethod("none")] @AT@ 1478 @LENGTH@ 26
---INS VariableDeclarationFragment@@NONE=new ClientAuthenticationMethod("none") @TO@ FieldDeclaration@@public, static, final, ClientAuthenticationMethod, [NONE=new ClientAuthenticationMethod("none")] @AT@ 1505 @LENGTH@ 45
------INS SimpleName@@NONE @TO@ VariableDeclarationFragment@@NONE=new ClientAuthenticationMethod("none") @AT@ 1505 @LENGTH@ 4
------INS ClassInstanceCreation@@ClientAuthenticationMethod["none"] @TO@ VariableDeclarationFragment@@NONE=new ClientAuthenticationMethod("none") @AT@ 1512 @LENGTH@ 38
---------INS New@@new @TO@ ClassInstanceCreation@@ClientAuthenticationMethod["none"] @AT@ 1512 @LENGTH@ 3
---------INS SimpleType@@ClientAuthenticationMethod @TO@ ClassInstanceCreation@@ClientAuthenticationMethod["none"] @AT@ 1516 @LENGTH@ 26
---------INS StringLiteral@@"none" @TO@ ClassInstanceCreation@@ClientAuthenticationMethod["none"] @AT@ 1543 @LENGTH@ 6


UPD MethodDeclaration@@public, Object, MethodName:save, Object entityWithUnknownState,  @TO@ public, T, T, MethodName:save, T entityWithUnknownState,  @AT@ 1818 @LENGTH@ 234
---UPD SimpleType@@Object @TO@ T @AT@ 1825 @LENGTH@ 6
---UPD SingleVariableDeclaration@@Object entityWithUnknownState @TO@ T entityWithUnknownState @AT@ 1837 @LENGTH@ 29
------UPD SimpleType@@Object @TO@ T @AT@ 1837 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:geoNearWithMiles,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]GeoJsonTests,  @AT@ 3420 @LENGTH@ 369
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:geoNearWithMiles,  @AT@ 3420 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:geoNearWithMiles,  @AT@ 3427 @LENGTH@ 4
---INS SimpleName@@MethodName:geoNearWithMiles @TO@ MethodDeclaration@@public, void, MethodName:geoNearWithMiles,  @AT@ 3432 @LENGTH@ 16
---INS VariableDeclarationStatement@@NearQuery geoNear=NearQuery.near(new GeoJsonPoint(-73,40),Metrics.MILES).num(10).maxDistance(93.2057); @TO@ MethodDeclaration@@public, void, MethodName:geoNearWithMiles,  @AT@ 3456 @LENGTH@ 106
------INS SimpleType@@NearQuery @TO@ VariableDeclarationStatement@@NearQuery geoNear=NearQuery.near(new GeoJsonPoint(-73,40),Metrics.MILES).num(10).maxDistance(93.2057); @AT@ 3456 @LENGTH@ 9
------INS VariableDeclarationFragment@@geoNear=NearQuery.near(new GeoJsonPoint(-73,40),Metrics.MILES).num(10).maxDistance(93.2057) @TO@ VariableDeclarationStatement@@NearQuery geoNear=NearQuery.near(new GeoJsonPoint(-73,40),Metrics.MILES).num(10).maxDistance(93.2057); @AT@ 3466 @LENGTH@ 95
---------INS SimpleName@@geoNear @TO@ VariableDeclarationFragment@@geoNear=NearQuery.near(new GeoJsonPoint(-73,40),Metrics.MILES).num(10).maxDistance(93.2057) @AT@ 3466 @LENGTH@ 7
---------INS MethodInvocation@@NearQuery.near(new GeoJsonPoint(-73,40),Metrics.MILES).num(10).maxDistance(93.2057) @TO@ VariableDeclarationFragment@@geoNear=NearQuery.near(new GeoJsonPoint(-73,40),Metrics.MILES).num(10).maxDistance(93.2057) @AT@ 3476 @LENGTH@ 85
------------INS MethodInvocation@@MethodName:num:[10] @TO@ MethodInvocation@@NearQuery.near(new GeoJsonPoint(-73,40),Metrics.MILES).num(10).maxDistance(93.2057) @AT@ 3476 @LENGTH@ 64
---------------INS NumberLiteral@@10 @TO@ MethodInvocation@@MethodName:num:[10] @AT@ 3537 @LENGTH@ 2
------------INS MethodInvocation@@MethodName:near:[new GeoJsonPoint(-73,40), Metrics.MILES] @TO@ MethodInvocation@@NearQuery.near(new GeoJsonPoint(-73,40),Metrics.MILES).num(10).maxDistance(93.2057) @AT@ 3476 @LENGTH@ 56
---------------INS ClassInstanceCreation@@GeoJsonPoint[-73, 40] @TO@ MethodInvocation@@MethodName:near:[new GeoJsonPoint(-73,40), Metrics.MILES] @AT@ 3491 @LENGTH@ 25
------------------INS New@@new @TO@ ClassInstanceCreation@@GeoJsonPoint[-73, 40] @AT@ 3491 @LENGTH@ 3
------------------INS SimpleType@@GeoJsonPoint @TO@ ClassInstanceCreation@@GeoJsonPoint[-73, 40] @AT@ 3495 @LENGTH@ 12
------------------INS PrefixExpression@@-73 @TO@ ClassInstanceCreation@@GeoJsonPoint[-73, 40] @AT@ 3508 @LENGTH@ 3
---------------------INS Operator@@- @TO@ PrefixExpression@@-73 @AT@ 3508 @LENGTH@ 1
---------------------INS NumberLiteral@@73 @TO@ PrefixExpression@@-73 @AT@ 3509 @LENGTH@ 2
------------------INS NumberLiteral@@40 @TO@ ClassInstanceCreation@@GeoJsonPoint[-73, 40] @AT@ 3513 @LENGTH@ 2
---------------INS QualifiedName@@Metrics.MILES @TO@ MethodInvocation@@MethodName:near:[new GeoJsonPoint(-73,40), Metrics.MILES] @AT@ 3518 @LENGTH@ 13
------------------INS SimpleName@@Metrics @TO@ QualifiedName@@Metrics.MILES @AT@ 3518 @LENGTH@ 7
------------------INS SimpleName@@MILES @TO@ QualifiedName@@Metrics.MILES @AT@ 3526 @LENGTH@ 5
------------INS SimpleName@@Name:NearQuery @TO@ MethodInvocation@@NearQuery.near(new GeoJsonPoint(-73,40),Metrics.MILES).num(10).maxDistance(93.2057) @AT@ 3476 @LENGTH@ 9
------------INS SimpleName@@MethodName:maxDistance:[93.2057] @TO@ MethodInvocation@@NearQuery.near(new GeoJsonPoint(-73,40),Metrics.MILES).num(10).maxDistance(93.2057) @AT@ 3541 @LENGTH@ 20
---------------INS NumberLiteral@@93.2057 @TO@ SimpleName@@MethodName:maxDistance:[93.2057] @AT@ 3553 @LENGTH@ 7
---INS VariableDeclarationStatement@@GeoResults<Venue2DSphere> result=template.geoNear(geoNear,Venue2DSphere.class); @TO@ MethodDeclaration@@public, void, MethodName:geoNearWithMiles,  @AT@ 3566 @LENGTH@ 82
------INS ParameterizedType@@GeoResults<Venue2DSphere> @TO@ VariableDeclarationStatement@@GeoResults<Venue2DSphere> result=template.geoNear(geoNear,Venue2DSphere.class); @AT@ 3566 @LENGTH@ 25
---------INS SimpleType@@GeoResults @TO@ ParameterizedType@@GeoResults<Venue2DSphere> @AT@ 3566 @LENGTH@ 10
---------INS SimpleType@@Venue2DSphere @TO@ ParameterizedType@@GeoResults<Venue2DSphere> @AT@ 3577 @LENGTH@ 13
------INS VariableDeclarationFragment@@result=template.geoNear(geoNear,Venue2DSphere.class) @TO@ VariableDeclarationStatement@@GeoResults<Venue2DSphere> result=template.geoNear(geoNear,Venue2DSphere.class); @AT@ 3592 @LENGTH@ 55
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=template.geoNear(geoNear,Venue2DSphere.class) @AT@ 3592 @LENGTH@ 6
---------INS MethodInvocation@@template.geoNear(geoNear,Venue2DSphere.class) @TO@ VariableDeclarationFragment@@result=template.geoNear(geoNear,Venue2DSphere.class) @AT@ 3601 @LENGTH@ 46
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.geoNear(geoNear,Venue2DSphere.class) @AT@ 3601 @LENGTH@ 8
------------INS SimpleName@@MethodName:geoNear:[geoNear, Venue2DSphere.class] @TO@ MethodInvocation@@template.geoNear(geoNear,Venue2DSphere.class) @AT@ 3610 @LENGTH@ 37
---------------INS SimpleName@@geoNear @TO@ SimpleName@@MethodName:geoNear:[geoNear, Venue2DSphere.class] @AT@ 3618 @LENGTH@ 7
---------------INS TypeLiteral@@Venue2DSphere.class @TO@ SimpleName@@MethodName:geoNear:[geoNear, Venue2DSphere.class] @AT@ 3627 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getContent().size(),is(not(0))) @TO@ MethodDeclaration@@public, void, MethodName:geoNearWithMiles,  @AT@ 3652 @LENGTH@ 51
------INS MethodInvocation@@assertThat(result.getContent().size(),is(not(0))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getContent().size(),is(not(0))) @AT@ 3652 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertThat:[result.getContent().size(), is(not(0))] @TO@ MethodInvocation@@assertThat(result.getContent().size(),is(not(0))) @AT@ 3652 @LENGTH@ 50
------------INS MethodInvocation@@result.getContent().size() @TO@ SimpleName@@MethodName:assertThat:[result.getContent().size(), is(not(0))] @AT@ 3663 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:getContent:[] @TO@ MethodInvocation@@result.getContent().size() @AT@ 3663 @LENGTH@ 19
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getContent().size() @AT@ 3663 @LENGTH@ 6
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@result.getContent().size() @AT@ 3683 @LENGTH@ 6
------------INS MethodInvocation@@is(not(0)) @TO@ SimpleName@@MethodName:assertThat:[result.getContent().size(), is(not(0))] @AT@ 3691 @LENGTH@ 10
---------------INS SimpleName@@MethodName:is:[not(0)] @TO@ MethodInvocation@@is(not(0)) @AT@ 3691 @LENGTH@ 10
------------------INS MethodInvocation@@not(0) @TO@ SimpleName@@MethodName:is:[not(0)] @AT@ 3694 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:not:[0] @TO@ MethodInvocation@@not(0) @AT@ 3694 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:not:[0] @AT@ 3698 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:not:[0] @TO@ MethodInvocation@@not(0) @AT@ 3694 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:not:[0] @AT@ 3698 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:not:[0] @TO@ MethodInvocation@@not(0) @AT@ 3694 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:not:[0] @AT@ 3698 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:not:[0] @TO@ MethodInvocation@@not(0) @AT@ 3694 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:not:[0] @AT@ 3698 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:not:[0] @TO@ MethodInvocation@@not(0) @AT@ 3694 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:not:[0] @AT@ 3698 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[not(0)] @TO@ MethodInvocation@@is(not(0)) @AT@ 3691 @LENGTH@ 10
------------------INS MethodInvocation@@not(0) @TO@ SimpleName@@MethodName:is:[not(0)] @AT@ 3694 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:not:[0] @TO@ MethodInvocation@@not(0) @AT@ 3694 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:not:[0] @AT@ 3698 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:not:[0] @TO@ MethodInvocation@@not(0) @AT@ 3694 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:not:[0] @AT@ 3698 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:not:[0] @TO@ MethodInvocation@@not(0) @AT@ 3694 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:not:[0] @AT@ 3698 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:not:[0] @TO@ MethodInvocation@@not(0) @AT@ 3694 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:not:[0] @AT@ 3698 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:not:[0] @TO@ MethodInvocation@@not(0) @AT@ 3694 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:not:[0] @AT@ 3698 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getAverageDistance().getMetric(),is((Metric)Metrics.MILES)) @TO@ MethodDeclaration@@public, void, MethodName:geoNearWithMiles,  @AT@ 3706 @LENGTH@ 80
------INS MethodInvocation@@assertThat(result.getAverageDistance().getMetric(),is((Metric)Metrics.MILES)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getAverageDistance().getMetric(),is((Metric)Metrics.MILES)) @AT@ 3706 @LENGTH@ 79
---------INS SimpleName@@MethodName:assertThat:[result.getAverageDistance().getMetric(), is((Metric)Metrics.MILES)] @TO@ MethodInvocation@@assertThat(result.getAverageDistance().getMetric(),is((Metric)Metrics.MILES)) @AT@ 3706 @LENGTH@ 79
------------INS MethodInvocation@@result.getAverageDistance().getMetric() @TO@ SimpleName@@MethodName:assertThat:[result.getAverageDistance().getMetric(), is((Metric)Metrics.MILES)] @AT@ 3717 @LENGTH@ 39
---------------INS MethodInvocation@@MethodName:getAverageDistance:[] @TO@ MethodInvocation@@result.getAverageDistance().getMetric() @AT@ 3717 @LENGTH@ 27
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getAverageDistance().getMetric() @AT@ 3717 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getMetric:[] @TO@ MethodInvocation@@result.getAverageDistance().getMetric() @AT@ 3745 @LENGTH@ 11
------------INS MethodInvocation@@is((Metric)Metrics.MILES) @TO@ SimpleName@@MethodName:assertThat:[result.getAverageDistance().getMetric(), is((Metric)Metrics.MILES)] @AT@ 3758 @LENGTH@ 26
---------------INS SimpleName@@MethodName:is:[(Metric)Metrics.MILES] @TO@ MethodInvocation@@is((Metric)Metrics.MILES) @AT@ 3758 @LENGTH@ 26
------------------INS CastExpression@@(Metric)Metrics.MILES @TO@ SimpleName@@MethodName:is:[(Metric)Metrics.MILES] @AT@ 3761 @LENGTH@ 22
---------------------INS SimpleType@@Metric @TO@ CastExpression@@(Metric)Metrics.MILES @AT@ 3762 @LENGTH@ 6
---------------------INS QualifiedName@@Metrics.MILES @TO@ CastExpression@@(Metric)Metrics.MILES @AT@ 3770 @LENGTH@ 13
------------------------INS SimpleName@@Metrics @TO@ QualifiedName@@Metrics.MILES @AT@ 3770 @LENGTH@ 7
------------------------INS SimpleName@@MILES @TO@ QualifiedName@@Metrics.MILES @AT@ 3778 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[(Metric)Metrics.MILES] @TO@ MethodInvocation@@is((Metric)Metrics.MILES) @AT@ 3758 @LENGTH@ 26
------------------INS CastExpression@@(Metric)Metrics.MILES @TO@ SimpleName@@MethodName:is:[(Metric)Metrics.MILES] @AT@ 3761 @LENGTH@ 22
---------------------INS SimpleType@@Metric @TO@ CastExpression@@(Metric)Metrics.MILES @AT@ 3762 @LENGTH@ 6
---------------------INS QualifiedName@@Metrics.MILES @TO@ CastExpression@@(Metric)Metrics.MILES @AT@ 3770 @LENGTH@ 13
------------------------INS SimpleName@@Metrics @TO@ QualifiedName@@Metrics.MILES @AT@ 3770 @LENGTH@ 7
------------------------INS SimpleName@@MILES @TO@ QualifiedName@@Metrics.MILES @AT@ 3778 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.{15,}&"+ "redirect_uri=https://example.com/login/oauth2/code/registration-id") @TO@ MethodInvocation:assertThat(authorizationRequest.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.{15,}&"+ "redirect_uri=http://localhost/login/oauth2/code/registration-id") @AT@ 9145 @LENGTH@ 290
---UPD MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.{15,}&"+ "redirect_uri=https://example.com/login/oauth2/code/registration-id") @TO@ assertThat(authorizationRequest.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.{15,}&"+ "redirect_uri=http://localhost/login/oauth2/code/registration-id") @AT@ 9145 @LENGTH@ 289
------UPD SimpleName@@MethodName:matches:["https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.{15,}&"+ "redirect_uri=https://example.com/login/oauth2/code/registration-id"] @TO@ MethodName:matches:["https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.{15,}&"+ "redirect_uri=http://localhost/login/oauth2/code/registration-id"] @AT@ 9212 @LENGTH@ 222
---------UPD InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.{15,}&"+ "redirect_uri=https://example.com/login/oauth2/code/registration-id" @TO@ "https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.{15,}&"+ "redirect_uri=http://localhost/login/oauth2/code/registration-id" @AT@ 9220 @LENGTH@ 213
------------UPD StringLiteral@@"redirect_uri=https://example.com/login/oauth2/code/registration-id" @TO@ "redirect_uri=http://localhost/login/oauth2/code/registration-id" @AT@ 9365 @LENGTH@ 68


INS EnhancedForStatement@@for (Operator<? extends OperatorDesc> parent : (List<Operator<? extends OperatorDesc>>)input.getParentOperators()) {  setWriteIdForSurrogateKeys(ltd,parent);} @TO@ MethodDeclaration@@private, void, MethodName:setWriteIdForSurrogateKeys, LoadTableDesc ltd, Operator input, SemanticException,  @AT@ 337093 @LENGTH@ 169
---INS SingleVariableDeclaration@@Operator<? extends OperatorDesc> parent @TO@ EnhancedForStatement@@for (Operator<? extends OperatorDesc> parent : (List<Operator<? extends OperatorDesc>>)input.getParentOperators()) {  setWriteIdForSurrogateKeys(ltd,parent);} @AT@ 337098 @LENGTH@ 39
------INS ParameterizedType@@Operator<? extends OperatorDesc> @TO@ SingleVariableDeclaration@@Operator<? extends OperatorDesc> parent @AT@ 337098 @LENGTH@ 32
---------INS SimpleType@@Operator @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 337098 @LENGTH@ 8
---------INS WildcardType@@? @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 337107 @LENGTH@ 22
------INS SimpleName@@parent @TO@ SingleVariableDeclaration@@Operator<? extends OperatorDesc> parent @AT@ 337131 @LENGTH@ 6
---INS CastExpression@@(List<Operator<? extends OperatorDesc>>)input.getParentOperators() @TO@ EnhancedForStatement@@for (Operator<? extends OperatorDesc> parent : (List<Operator<? extends OperatorDesc>>)input.getParentOperators()) {  setWriteIdForSurrogateKeys(ltd,parent);} @AT@ 337140 @LENGTH@ 66
------INS ParameterizedType@@List<Operator<? extends OperatorDesc>> @TO@ CastExpression@@(List<Operator<? extends OperatorDesc>>)input.getParentOperators() @AT@ 337141 @LENGTH@ 38
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Operator<? extends OperatorDesc>> @AT@ 337141 @LENGTH@ 4
---------INS ParameterizedType@@Operator<? extends OperatorDesc> @TO@ ParameterizedType@@List<Operator<? extends OperatorDesc>> @AT@ 337146 @LENGTH@ 32
------------INS SimpleType@@Operator @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 337146 @LENGTH@ 8
------------INS WildcardType@@? @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 337155 @LENGTH@ 22
------INS MethodInvocation@@input.getParentOperators() @TO@ CastExpression@@(List<Operator<? extends OperatorDesc>>)input.getParentOperators() @AT@ 337180 @LENGTH@ 26
---------INS SimpleName@@Name:input @TO@ MethodInvocation@@input.getParentOperators() @AT@ 337180 @LENGTH@ 5
---------INS SimpleName@@MethodName:getParentOperators:[] @TO@ MethodInvocation@@input.getParentOperators() @AT@ 337186 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:setWriteIdForSurrogateKeys(ltd,parent) @TO@ EnhancedForStatement@@for (Operator<? extends OperatorDesc> parent : (List<Operator<? extends OperatorDesc>>)input.getParentOperators()) {  setWriteIdForSurrogateKeys(ltd,parent);} @AT@ 337216 @LENGTH@ 40
------INS MethodInvocation@@setWriteIdForSurrogateKeys(ltd,parent) @TO@ ExpressionStatement@@MethodInvocation:setWriteIdForSurrogateKeys(ltd,parent) @AT@ 337216 @LENGTH@ 39
---------INS SimpleName@@MethodName:setWriteIdForSurrogateKeys:[ltd, parent] @TO@ MethodInvocation@@setWriteIdForSurrogateKeys(ltd,parent) @AT@ 337216 @LENGTH@ 39
------------INS SimpleName@@ltd @TO@ SimpleName@@MethodName:setWriteIdForSurrogateKeys:[ltd, parent] @AT@ 337243 @LENGTH@ 3
------------INS SimpleName@@parent @TO@ SimpleName@@MethodName:setWriteIdForSurrogateKeys:[ltd, parent] @AT@ 337248 @LENGTH@ 6


MOV MethodDeclaration@@protected, Client, MethodName:createClient, Endpoint ep,  @TO@ TypeDeclaration@@[@UriEndpoint(firstVersion="1.0.0",scheme="cxf",title="CXF",syntax="cxf:beanId:address",label="soap,webservice"), public]CxfEndpoint, DefaultEndpoint[AsyncEndpoint, HeaderFilterStrategyAware, Service, Cloneable] @AT@ 14950 @LENGTH@ 127


UPD IfStatement@@if (matchStats.hits > bestMatchHits) {  bestMatch=candidate;} @TO@ if (matchStats.hits > bestMatchHits) {  bestMatch=candidate;  bestMatchHits=matchStats.hits;} @AT@ 10335 @LENGTH@ 81
---UPD Block@@ThenBody:{  bestMatch=candidate;} @TO@ ThenBody:{  bestMatch=candidate;  bestMatchHits=matchStats.hits;} @AT@ 10372 @LENGTH@ 44
------INS ExpressionStatement@@Assignment:bestMatchHits=matchStats.hits @TO@ Block@@ThenBody:{  bestMatch=candidate;} @AT@ 10417 @LENGTH@ 32
---------INS Assignment@@bestMatchHits=matchStats.hits @TO@ ExpressionStatement@@Assignment:bestMatchHits=matchStats.hits @AT@ 10417 @LENGTH@ 31
------------INS SimpleName@@bestMatchHits @TO@ Assignment@@bestMatchHits=matchStats.hits @AT@ 10417 @LENGTH@ 13
------------INS Operator@@= @TO@ Assignment@@bestMatchHits=matchStats.hits @AT@ 10430 @LENGTH@ 1
------------INS QualifiedName@@matchStats.hits @TO@ Assignment@@bestMatchHits=matchStats.hits @AT@ 10433 @LENGTH@ 15
---------------INS SimpleName@@matchStats @TO@ QualifiedName@@matchStats.hits @AT@ 10433 @LENGTH@ 10
---------------INS SimpleName@@hits @TO@ QualifiedName@@matchStats.hits @AT@ 10444 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testSanitizePathWithUserInfoAndColonPassword,  @TO@ TypeDeclaration@@[public]URISupportTest,  @AT@ 10889 @LENGTH@ 257
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSanitizePathWithUserInfoAndColonPassword,  @AT@ 10889 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSanitizePathWithUserInfoAndColonPassword,  @AT@ 10896 @LENGTH@ 4
---INS SimpleName@@MethodName:testSanitizePathWithUserInfoAndColonPassword @TO@ MethodDeclaration@@public, void, MethodName:testSanitizePathWithUserInfoAndColonPassword,  @AT@ 10901 @LENGTH@ 44
---INS VariableDeclarationStatement@@String path="USERNAME:HARRISON:COLON@sftp.server.test"; @TO@ MethodDeclaration@@public, void, MethodName:testSanitizePathWithUserInfoAndColonPassword,  @AT@ 10958 @LENGTH@ 57
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String path="USERNAME:HARRISON:COLON@sftp.server.test"; @AT@ 10958 @LENGTH@ 6
------INS VariableDeclarationFragment@@path="USERNAME:HARRISON:COLON@sftp.server.test" @TO@ VariableDeclarationStatement@@String path="USERNAME:HARRISON:COLON@sftp.server.test"; @AT@ 10965 @LENGTH@ 49
---------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path="USERNAME:HARRISON:COLON@sftp.server.test" @AT@ 10965 @LENGTH@ 4
---------INS StringLiteral@@"USERNAME:HARRISON:COLON@sftp.server.test" @TO@ VariableDeclarationFragment@@path="USERNAME:HARRISON:COLON@sftp.server.test" @AT@ 10972 @LENGTH@ 42
---INS VariableDeclarationStatement@@String expected="USERNAME:xxxxxx@sftp.server.test"; @TO@ MethodDeclaration@@public, void, MethodName:testSanitizePathWithUserInfoAndColonPassword,  @AT@ 11024 @LENGTH@ 53
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String expected="USERNAME:xxxxxx@sftp.server.test"; @AT@ 11024 @LENGTH@ 6
------INS VariableDeclarationFragment@@expected="USERNAME:xxxxxx@sftp.server.test" @TO@ VariableDeclarationStatement@@String expected="USERNAME:xxxxxx@sftp.server.test"; @AT@ 11031 @LENGTH@ 45
---------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected="USERNAME:xxxxxx@sftp.server.test" @AT@ 11031 @LENGTH@ 8
---------INS StringLiteral@@"USERNAME:xxxxxx@sftp.server.test" @TO@ VariableDeclarationFragment@@expected="USERNAME:xxxxxx@sftp.server.test" @AT@ 11042 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:assertEquals(expected,URISupport.sanitizePath(path)) @TO@ MethodDeclaration@@public, void, MethodName:testSanitizePathWithUserInfoAndColonPassword,  @AT@ 11086 @LENGTH@ 54
------INS MethodInvocation@@assertEquals(expected,URISupport.sanitizePath(path)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expected,URISupport.sanitizePath(path)) @AT@ 11086 @LENGTH@ 53
---------INS SimpleName@@MethodName:assertEquals:[expected, URISupport.sanitizePath(path)] @TO@ MethodInvocation@@assertEquals(expected,URISupport.sanitizePath(path)) @AT@ 11086 @LENGTH@ 53
------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:assertEquals:[expected, URISupport.sanitizePath(path)] @AT@ 11099 @LENGTH@ 8
------------INS MethodInvocation@@URISupport.sanitizePath(path) @TO@ SimpleName@@MethodName:assertEquals:[expected, URISupport.sanitizePath(path)] @AT@ 11109 @LENGTH@ 29
---------------INS SimpleName@@Name:URISupport @TO@ MethodInvocation@@URISupport.sanitizePath(path) @AT@ 11109 @LENGTH@ 10
---------------INS SimpleName@@MethodName:sanitizePath:[path] @TO@ MethodInvocation@@URISupport.sanitizePath(path) @AT@ 11120 @LENGTH@ 18
------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:sanitizePath:[path] @AT@ 11133 @LENGTH@ 4


UPD IfStatement@@if (worker == null) {  return true;} @TO@ if (worker == null || !value.isDefined()) {  return true;} @AT@ 13077 @LENGTH@ 163
---INS InfixExpression@@worker == null || !value.isDefined() @TO@ IfStatement@@if (worker == null) {  return true;} @AT@ 13081 @LENGTH@ 36
------INS InfixExpression@@worker == null @TO@ InfixExpression@@worker == null || !value.isDefined() @AT@ 13081 @LENGTH@ 14
---------MOV SimpleName@@worker @TO@ InfixExpression@@worker == null @AT@ 13081 @LENGTH@ 6
---------MOV Operator@@== @TO@ InfixExpression@@worker == null @AT@ 13087 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@worker == null @AT@ 13091 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@worker == null || !value.isDefined() @AT@ 13095 @LENGTH@ 2
------INS PrefixExpression@@!value.isDefined() @TO@ InfixExpression@@worker == null || !value.isDefined() @AT@ 13099 @LENGTH@ 18
---------INS Operator@@! @TO@ PrefixExpression@@!value.isDefined() @AT@ 13099 @LENGTH@ 1
---------INS MethodInvocation@@value.isDefined() @TO@ PrefixExpression@@!value.isDefined() @AT@ 13100 @LENGTH@ 17
------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.isDefined() @AT@ 13100 @LENGTH@ 5
------------INS SimpleName@@MethodName:isDefined:[] @TO@ MethodInvocation@@value.isDefined() @AT@ 13106 @LENGTH@ 11
---DEL InfixExpression@@worker == null @AT@ 13081 @LENGTH@ 14


DEL MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1673 @LENGTH@ 163
---DEL Modifier@@public @AT@ 1673 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1680 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 1687 @LENGTH@ 6
---DEL SimpleName@@MethodName:buildDbKeyWithDelimiterSuffix @AT@ 1694 @LENGTH@ 29
---DEL SingleVariableDeclaration@@String catName @AT@ 1724 @LENGTH@ 14
------DEL SimpleType@@String @AT@ 1724 @LENGTH@ 6
------DEL SimpleName@@catName @AT@ 1731 @LENGTH@ 7
---DEL SingleVariableDeclaration@@String dbName @AT@ 1740 @LENGTH@ 13
------DEL SimpleType@@String @AT@ 1740 @LENGTH@ 6
------DEL SimpleName@@dbName @AT@ 1747 @LENGTH@ 6
---DEL ReturnStatement@@InfixExpression:buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @AT@ 1761 @LENGTH@ 71
------DEL InfixExpression@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @AT@ 1768 @LENGTH@ 63
---------DEL MethodInvocation@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) @AT@ 1768 @LENGTH@ 53
------------DEL SimpleName@@MethodName:buildKey:[catName.toLowerCase(), dbName.toLowerCase()] @AT@ 1768 @LENGTH@ 53
---------------DEL MethodInvocation@@catName.toLowerCase() @AT@ 1777 @LENGTH@ 21
------------------DEL SimpleName@@Name:catName @AT@ 1777 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:toLowerCase:[] @AT@ 1785 @LENGTH@ 13
---------------DEL MethodInvocation@@dbName.toLowerCase() @AT@ 1800 @LENGTH@ 20
------------------DEL SimpleName@@Name:dbName @AT@ 1800 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:toLowerCase:[] @AT@ 1807 @LENGTH@ 13
---------DEL Operator@@+ @AT@ 1821 @LENGTH@ 1
---------DEL SimpleName@@delimit @AT@ 1824 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Schedule health-checks to be executed every %d (%s)",checkInterval,checkIntervalUnit.name()) @TO@ MethodInvocation:LOGGER.debug("Schedule health-checks to be executed every {} ({})",checkInterval,checkIntervalUnit.name()) @AT@ 6192 @LENGTH@ 109
---UPD MethodInvocation@@LOGGER.debug("Schedule health-checks to be executed every %d (%s)",checkInterval,checkIntervalUnit.name()) @TO@ LOGGER.debug("Schedule health-checks to be executed every {} ({})",checkInterval,checkIntervalUnit.name()) @AT@ 6192 @LENGTH@ 108
------UPD SimpleName@@MethodName:debug:["Schedule health-checks to be executed every %d (%s)", checkInterval, checkIntervalUnit.name()] @TO@ MethodName:debug:["Schedule health-checks to be executed every {} ({})", checkInterval, checkIntervalUnit.name()] @AT@ 6199 @LENGTH@ 101
---------UPD StringLiteral@@"Schedule health-checks to be executed every %d (%s)" @TO@ "Schedule health-checks to be executed every {} ({})" @AT@ 6205 @LENGTH@ 53


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Only ClientAuthenticationMethod.BASIC and ClientAuthenticationMethod.POST are supported. The issuer \"" + issuer + "\" returned a configuration of "+ metadataAuthMethods) @TO@ ClassInstanceCreation:new IllegalArgumentException("Only ClientAuthenticationMethod.BASIC, ClientAuthenticationMethod.POST and ClientAuthenticationMethod.NONE are supported. The issuer \"" + issuer + "\" returned a configuration of "+ metadataAuthMethods) @AT@ 5750 @LENGTH@ 208
---UPD ClassInstanceCreation@@IllegalArgumentException["Only ClientAuthenticationMethod.BASIC and ClientAuthenticationMethod.POST are supported. The issuer \"" + issuer + "\" returned a configuration of "+ metadataAuthMethods] @TO@ IllegalArgumentException["Only ClientAuthenticationMethod.BASIC, ClientAuthenticationMethod.POST and ClientAuthenticationMethod.NONE are supported. The issuer \"" + issuer + "\" returned a configuration of "+ metadataAuthMethods] @AT@ 5756 @LENGTH@ 201
------UPD InfixExpression@@"Only ClientAuthenticationMethod.BASIC and ClientAuthenticationMethod.POST are supported. The issuer \"" + issuer + "\" returned a configuration of "+ metadataAuthMethods @TO@ "Only ClientAuthenticationMethod.BASIC, ClientAuthenticationMethod.POST and ClientAuthenticationMethod.NONE are supported. The issuer \"" + issuer + "\" returned a configuration of "+ metadataAuthMethods @AT@ 5785 @LENGTH@ 171
---------UPD StringLiteral@@"Only ClientAuthenticationMethod.BASIC and ClientAuthenticationMethod.POST are supported. The issuer \"" @TO@ "Only ClientAuthenticationMethod.BASIC, ClientAuthenticationMethod.POST and ClientAuthenticationMethod.NONE are supported. The issuer \"" @AT@ 5785 @LENGTH@ 104


UPD MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @TO@ private, void, MethodName:doSend, Event event, LogEvent logEvent, MessageProperties amqpProps,  @AT@ 10709 @LENGTH@ 2987
---UPD SimpleName@@MethodName:sendEvent @TO@ MethodName:doSend @AT@ 10722 @LENGTH@ 9
---INS SingleVariableDeclaration@@LogEvent logEvent @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 12237 @LENGTH@ 17
------INS SimpleType@@LogEvent @TO@ SingleVariableDeclaration@@LogEvent logEvent @AT@ 12237 @LENGTH@ 8
------INS SimpleName@@logEvent @TO@ SingleVariableDeclaration@@LogEvent logEvent @AT@ 12246 @LENGTH@ 8
---INS SingleVariableDeclaration@@MessageProperties amqpProps @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 12256 @LENGTH@ 27
------INS SimpleType@@MessageProperties @TO@ SingleVariableDeclaration@@MessageProperties amqpProps @AT@ 12256 @LENGTH@ 17
------INS SimpleName@@amqpProps @TO@ SingleVariableDeclaration@@MessageProperties amqpProps @AT@ 12274 @LENGTH@ 9


UPD FieldDeclaration@@private, static, final, Pattern, [PATH_USERINFO_PASSWORD=Pattern.compile("(.*:)(.*)(@)")] @TO@ private, static, final, Pattern, [PATH_USERINFO_PASSWORD=Pattern.compile("(.*?:)(.*)(@)")] @AT@ 2179 @LENGTH@ 86
---UPD VariableDeclarationFragment@@PATH_USERINFO_PASSWORD=Pattern.compile("(.*:)(.*)(@)") @TO@ PATH_USERINFO_PASSWORD=Pattern.compile("(.*?:)(.*)(@)") @AT@ 2208 @LENGTH@ 56
------UPD MethodInvocation@@Pattern.compile("(.*:)(.*)(@)") @TO@ Pattern.compile("(.*?:)(.*)(@)") @AT@ 2233 @LENGTH@ 31
---------UPD SimpleName@@MethodName:compile:["(.*:)(.*)(@)"] @TO@ MethodName:compile:["(.*?:)(.*)(@)"] @AT@ 2241 @LENGTH@ 23
------------UPD StringLiteral@@"(.*:)(.*)(@)" @TO@ "(.*?:)(.*)(@)" @AT@ 2249 @LENGTH@ 14


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1363 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1363 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1370 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1378 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1408 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1415 @LENGTH@ 5


INS MethodDeclaration@@default, Condition, MethodName:isEqualTo, Expression rhs,  @TO@ TypeDeclaration@@[public]Expression, [Visitable] @AT@ 1391 @LENGTH@ 92
---INS Modifier@@default @TO@ MethodDeclaration@@default, Condition, MethodName:isEqualTo, Expression rhs,  @AT@ 1391 @LENGTH@ 7
---INS SimpleType@@Condition @TO@ MethodDeclaration@@default, Condition, MethodName:isEqualTo, Expression rhs,  @AT@ 1399 @LENGTH@ 9
---INS SimpleName@@MethodName:isEqualTo @TO@ MethodDeclaration@@default, Condition, MethodName:isEqualTo, Expression rhs,  @AT@ 1409 @LENGTH@ 9
---INS SingleVariableDeclaration@@Expression rhs @TO@ MethodDeclaration@@default, Condition, MethodName:isEqualTo, Expression rhs,  @AT@ 1419 @LENGTH@ 14
------INS SimpleType@@Expression @TO@ SingleVariableDeclaration@@Expression rhs @AT@ 1419 @LENGTH@ 10
------INS SimpleName@@rhs @TO@ SingleVariableDeclaration@@Expression rhs @AT@ 1430 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:Comparison.create(this,"=",rhs) @TO@ MethodDeclaration@@default, Condition, MethodName:isEqualTo, Expression rhs,  @AT@ 1439 @LENGTH@ 41
------INS MethodInvocation@@Comparison.create(this,"=",rhs) @TO@ ReturnStatement@@MethodInvocation:Comparison.create(this,"=",rhs) @AT@ 1446 @LENGTH@ 33
---------INS SimpleName@@Name:Comparison @TO@ MethodInvocation@@Comparison.create(this,"=",rhs) @AT@ 1446 @LENGTH@ 10
---------INS SimpleName@@MethodName:create:[this, "=", rhs] @TO@ MethodInvocation@@Comparison.create(this,"=",rhs) @AT@ 1457 @LENGTH@ 22
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:create:[this, "=", rhs] @AT@ 1464 @LENGTH@ 4
------------INS StringLiteral@@"=" @TO@ SimpleName@@MethodName:create:[this, "=", rhs] @AT@ 1470 @LENGTH@ 3
------------INS SimpleName@@rhs @TO@ SimpleName@@MethodName:create:[this, "=", rhs] @AT@ 1475 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:http.securityContext().securityContextRepository(new NullSecurityContextRepository()).and().csrf().disable().httpBasic().realmName(realm) @TO@ MethodInvocation:http.securityContext().securityContextRepository(new NullSecurityContextRepository()).and().csrf().disable().httpBasic().authenticationEntryPoint(this.authenticationEntryPoint).realmName(realm) @AT@ 5492 @LENGTH@ 143
---UPD MethodInvocation@@http.securityContext().securityContextRepository(new NullSecurityContextRepository()).and().csrf().disable().httpBasic().realmName(realm) @TO@ http.securityContext().securityContextRepository(new NullSecurityContextRepository()).and().csrf().disable().httpBasic().authenticationEntryPoint(this.authenticationEntryPoint).realmName(realm) @AT@ 5492 @LENGTH@ 142
------INS MethodInvocation@@MethodName:authenticationEntryPoint:[this.authenticationEntryPoint] @TO@ MethodInvocation@@http.securityContext().securityContextRepository(new NullSecurityContextRepository()).and().csrf().disable().httpBasic().realmName(realm) @AT@ 5492 @LENGTH@ 181
---------INS FieldAccess@@this.authenticationEntryPoint @TO@ MethodInvocation@@MethodName:authenticationEntryPoint:[this.authenticationEntryPoint] @AT@ 5643 @LENGTH@ 29
------------INS ThisExpression@@this @TO@ FieldAccess@@this.authenticationEntryPoint @AT@ 5643 @LENGTH@ 4
------------INS SimpleName@@authenticationEntryPoint @TO@ FieldAccess@@this.authenticationEntryPoint @AT@ 5648 @LENGTH@ 24


DEL FieldDeclaration@@AmazonS3ClientMock, [clientMock=new AmazonS3ClientMock()] @AT@ 1673 @LENGTH@ 57
---DEL SimpleType@@AmazonS3ClientMock @AT@ 1673 @LENGTH@ 18
---DEL VariableDeclarationFragment@@clientMock=new AmazonS3ClientMock() @AT@ 1692 @LENGTH@ 37
------DEL SimpleName@@clientMock @AT@ 1692 @LENGTH@ 10
------DEL ClassInstanceCreation@@AmazonS3ClientMock[] @AT@ 1705 @LENGTH@ 24
---------DEL New@@new @AT@ 1705 @LENGTH@ 3
---------DEL SimpleType@@AmazonS3ClientMock @AT@ 1709 @LENGTH@ 18


MOV FieldDeclaration@@AmazonS3ClientMock, [clientMock=new AmazonS3ClientMock()] @TO@ TypeDeclaration@@[public]S3ComponentGetObjectTest, CamelTestSupport @AT@ 1537 @LENGTH@ 57


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJettyCommonTest.class)).unitTestExpectedNumber(0).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJettyCommonTest.class)).dependency("javax.servlet:javax.servlet-api").dependency("org.eclipse.jetty:jetty-server").unitTestExpectedNumber(0).build() @AT@ 1449 @LENGTH@ 169
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJettyCommonTest.class)).unitTestExpectedNumber(0).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelJettyCommonTest.class)).dependency("javax.servlet:javax.servlet-api").dependency("org.eclipse.jetty:jetty-server").unitTestExpectedNumber(0).build() @AT@ 1456 @LENGTH@ 161
------INS MethodInvocation@@MethodName:dependency:["javax.servlet:javax.servlet-api"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJettyCommonTest.class)).unitTestExpectedNumber(0).build() @AT@ 1456 @LENGTH@ 156
---------INS StringLiteral@@"javax.servlet:javax.servlet-api" @TO@ MethodInvocation@@MethodName:dependency:["javax.servlet:javax.servlet-api"] @AT@ 1578 @LENGTH@ 33
------INS MethodInvocation@@MethodName:dependency:["org.eclipse.jetty:jetty-server"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJettyCommonTest.class)).unitTestExpectedNumber(0).build() @AT@ 1456 @LENGTH@ 218
---------INS StringLiteral@@"org.eclipse.jetty:jetty-server" @TO@ MethodInvocation@@MethodName:dependency:["org.eclipse.jetty:jetty-server"] @AT@ 1641 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:command.putAll(nearDocument) @TO@ MethodInvocation:command.putAll(queryMapper.getMappedObject(nearDocument,Optional.empty())) @AT@ 38494 @LENGTH@ 29
---UPD MethodInvocation@@command.putAll(nearDocument) @TO@ command.putAll(queryMapper.getMappedObject(nearDocument,Optional.empty())) @AT@ 38494 @LENGTH@ 28
------UPD SimpleName@@MethodName:putAll:[nearDocument] @TO@ MethodName:putAll:[queryMapper.getMappedObject(nearDocument,Optional.empty())] @AT@ 38502 @LENGTH@ 20
---------INS MethodInvocation@@queryMapper.getMappedObject(nearDocument,Optional.empty()) @TO@ SimpleName@@MethodName:putAll:[nearDocument] @AT@ 38509 @LENGTH@ 59
------------INS SimpleName@@Name:queryMapper @TO@ MethodInvocation@@queryMapper.getMappedObject(nearDocument,Optional.empty()) @AT@ 38509 @LENGTH@ 11
------------INS SimpleName@@MethodName:getMappedObject:[nearDocument, Optional.empty()] @TO@ MethodInvocation@@queryMapper.getMappedObject(nearDocument,Optional.empty()) @AT@ 38521 @LENGTH@ 47
---------------MOV SimpleName@@nearDocument @TO@ SimpleName@@MethodName:getMappedObject:[nearDocument, Optional.empty()] @AT@ 38509 @LENGTH@ 12
---------------INS MethodInvocation@@Optional.empty() @TO@ SimpleName@@MethodName:getMappedObject:[nearDocument, Optional.empty()] @AT@ 38551 @LENGTH@ 16
------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.empty() @AT@ 38551 @LENGTH@ 8
------------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Optional.empty() @AT@ 38560 @LENGTH@ 7


UPD IfStatement@@if (s.contains("test")) return true; @TO@ if (s.contains("test")) {  return true;} @AT@ 2875 @LENGTH@ 64
---UPD Block@@ThenBody:return true; @TO@ ThenBody:{  return true;} @AT@ 2927 @LENGTH@ 12


INS MethodDeclaration@@public, RestOperationParamDefinition, MethodName:allowableValues, String allowableValues,  @TO@ TypeDeclaration@@[@Metadata(label="rest"), @XmlRootElement(name="param"), @XmlAccessorType(XmlAccessType.FIELD), public]RestOperationParamDefinition,  @AT@ 8088 @LENGTH@ 175
---INS Modifier@@public @TO@ MethodDeclaration@@public, RestOperationParamDefinition, MethodName:allowableValues, String allowableValues,  @AT@ 8088 @LENGTH@ 6
---INS SimpleType@@RestOperationParamDefinition @TO@ MethodDeclaration@@public, RestOperationParamDefinition, MethodName:allowableValues, String allowableValues,  @AT@ 8095 @LENGTH@ 28
---INS SimpleName@@MethodName:allowableValues @TO@ MethodDeclaration@@public, RestOperationParamDefinition, MethodName:allowableValues, String allowableValues,  @AT@ 8124 @LENGTH@ 15
---INS SingleVariableDeclaration@@String allowableValues @TO@ MethodDeclaration@@public, RestOperationParamDefinition, MethodName:allowableValues, String allowableValues,  @AT@ 8140 @LENGTH@ 22
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String allowableValues @AT@ 8140 @LENGTH@ 6
------INS SimpleName@@allowableValues @TO@ SingleVariableDeclaration@@String allowableValues @AT@ 8147 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:setAllowableValues(Arrays.asList(allowableValues.split(","))) @TO@ MethodDeclaration@@public, RestOperationParamDefinition, MethodName:allowableValues, String allowableValues,  @AT@ 8174 @LENGTH@ 62
------INS MethodInvocation@@setAllowableValues(Arrays.asList(allowableValues.split(","))) @TO@ ExpressionStatement@@MethodInvocation:setAllowableValues(Arrays.asList(allowableValues.split(","))) @AT@ 8174 @LENGTH@ 61
---------INS SimpleName@@MethodName:setAllowableValues:[Arrays.asList(allowableValues.split(","))] @TO@ MethodInvocation@@setAllowableValues(Arrays.asList(allowableValues.split(","))) @AT@ 8174 @LENGTH@ 61
------------INS MethodInvocation@@Arrays.asList(allowableValues.split(",")) @TO@ SimpleName@@MethodName:setAllowableValues:[Arrays.asList(allowableValues.split(","))] @AT@ 8193 @LENGTH@ 41
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(allowableValues.split(",")) @AT@ 8193 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[allowableValues.split(",")] @TO@ MethodInvocation@@Arrays.asList(allowableValues.split(",")) @AT@ 8200 @LENGTH@ 34
------------------INS MethodInvocation@@allowableValues.split(",") @TO@ SimpleName@@MethodName:asList:[allowableValues.split(",")] @AT@ 8207 @LENGTH@ 26
---------------------INS SimpleName@@Name:allowableValues @TO@ MethodInvocation@@allowableValues.split(",") @AT@ 8207 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:split:[","] @TO@ MethodInvocation@@allowableValues.split(",") @AT@ 8223 @LENGTH@ 10
------------------------INS StringLiteral@@"," @TO@ SimpleName@@MethodName:split:[","] @AT@ 8229 @LENGTH@ 3
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, RestOperationParamDefinition, MethodName:allowableValues, String allowableValues,  @AT@ 8245 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 8252 @LENGTH@ 4


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1150 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1150 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1157 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1165 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1195 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1202 @LENGTH@ 5


INS MethodDeclaration@@private, ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>, MethodName:getAccessTokenResponseClient,  @TO@ TypeDeclaration@@[public]OAuth2LoginSpec,  @AT@ 35335 @LENGTH@ 497
---INS Modifier@@private @TO@ MethodDeclaration@@private, ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>, MethodName:getAccessTokenResponseClient,  @AT@ 35335 @LENGTH@ 7
---INS ParameterizedType@@ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> @TO@ MethodDeclaration@@private, ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>, MethodName:getAccessTokenResponseClient,  @AT@ 35343 @LENGTH@ 76
------INS SimpleType@@ReactiveOAuth2AccessTokenResponseClient @TO@ ParameterizedType@@ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> @AT@ 35343 @LENGTH@ 39
------INS SimpleType@@OAuth2AuthorizationCodeGrantRequest @TO@ ParameterizedType@@ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> @AT@ 35383 @LENGTH@ 35
---INS SimpleName@@MethodName:getAccessTokenResponseClient @TO@ MethodDeclaration@@private, ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>, MethodName:getAccessTokenResponseClient,  @AT@ 35420 @LENGTH@ 28
---INS VariableDeclarationStatement@@ResolvableType type=ResolvableType.forClassWithGenerics(ReactiveOAuth2AccessTokenResponseClient.class,OAuth2AuthorizationCodeGrantRequest.class); @TO@ MethodDeclaration@@private, ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>, MethodName:getAccessTokenResponseClient,  @AT@ 35456 @LENGTH@ 148
------INS SimpleType@@ResolvableType @TO@ VariableDeclarationStatement@@ResolvableType type=ResolvableType.forClassWithGenerics(ReactiveOAuth2AccessTokenResponseClient.class,OAuth2AuthorizationCodeGrantRequest.class); @AT@ 35456 @LENGTH@ 14
------INS VariableDeclarationFragment@@type=ResolvableType.forClassWithGenerics(ReactiveOAuth2AccessTokenResponseClient.class,OAuth2AuthorizationCodeGrantRequest.class) @TO@ VariableDeclarationStatement@@ResolvableType type=ResolvableType.forClassWithGenerics(ReactiveOAuth2AccessTokenResponseClient.class,OAuth2AuthorizationCodeGrantRequest.class); @AT@ 35471 @LENGTH@ 132
---------INS SimpleName@@type @TO@ VariableDeclarationFragment@@type=ResolvableType.forClassWithGenerics(ReactiveOAuth2AccessTokenResponseClient.class,OAuth2AuthorizationCodeGrantRequest.class) @AT@ 35471 @LENGTH@ 4
---------INS MethodInvocation@@ResolvableType.forClassWithGenerics(ReactiveOAuth2AccessTokenResponseClient.class,OAuth2AuthorizationCodeGrantRequest.class) @TO@ VariableDeclarationFragment@@type=ResolvableType.forClassWithGenerics(ReactiveOAuth2AccessTokenResponseClient.class,OAuth2AuthorizationCodeGrantRequest.class) @AT@ 35478 @LENGTH@ 125
------------INS SimpleName@@Name:ResolvableType @TO@ MethodInvocation@@ResolvableType.forClassWithGenerics(ReactiveOAuth2AccessTokenResponseClient.class,OAuth2AuthorizationCodeGrantRequest.class) @AT@ 35478 @LENGTH@ 14
------------INS SimpleName@@MethodName:forClassWithGenerics:[ReactiveOAuth2AccessTokenResponseClient.class, OAuth2AuthorizationCodeGrantRequest.class] @TO@ MethodInvocation@@ResolvableType.forClassWithGenerics(ReactiveOAuth2AccessTokenResponseClient.class,OAuth2AuthorizationCodeGrantRequest.class) @AT@ 35493 @LENGTH@ 110
---------------INS TypeLiteral@@ReactiveOAuth2AccessTokenResponseClient.class @TO@ SimpleName@@MethodName:forClassWithGenerics:[ReactiveOAuth2AccessTokenResponseClient.class, OAuth2AuthorizationCodeGrantRequest.class] @AT@ 35514 @LENGTH@ 45
---------------INS TypeLiteral@@OAuth2AuthorizationCodeGrantRequest.class @TO@ SimpleName@@MethodName:forClassWithGenerics:[ReactiveOAuth2AccessTokenResponseClient.class, OAuth2AuthorizationCodeGrantRequest.class] @AT@ 35561 @LENGTH@ 41
---INS VariableDeclarationStatement@@ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> bean=getBeanOrNull(type); @TO@ MethodDeclaration@@private, ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>, MethodName:getAccessTokenResponseClient,  @AT@ 35608 @LENGTH@ 104
------INS ParameterizedType@@ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> @TO@ VariableDeclarationStatement@@ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> bean=getBeanOrNull(type); @AT@ 35608 @LENGTH@ 76
---------INS SimpleType@@ReactiveOAuth2AccessTokenResponseClient @TO@ ParameterizedType@@ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> @AT@ 35608 @LENGTH@ 39
---------INS SimpleType@@OAuth2AuthorizationCodeGrantRequest @TO@ ParameterizedType@@ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> @AT@ 35648 @LENGTH@ 35
------INS VariableDeclarationFragment@@bean=getBeanOrNull(type) @TO@ VariableDeclarationStatement@@ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> bean=getBeanOrNull(type); @AT@ 35685 @LENGTH@ 26
---------INS SimpleName@@bean @TO@ VariableDeclarationFragment@@bean=getBeanOrNull(type) @AT@ 35685 @LENGTH@ 4
---------INS MethodInvocation@@getBeanOrNull(type) @TO@ VariableDeclarationFragment@@bean=getBeanOrNull(type) @AT@ 35692 @LENGTH@ 19
------------INS SimpleName@@MethodName:getBeanOrNull:[type] @TO@ MethodInvocation@@getBeanOrNull(type) @AT@ 35692 @LENGTH@ 19
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:getBeanOrNull:[type] @AT@ 35706 @LENGTH@ 4
---INS IfStatement@@if (bean == null) {  return new WebClientReactiveAuthorizationCodeTokenResponseClient();} @TO@ MethodDeclaration@@private, ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>, MethodName:getAccessTokenResponseClient,  @AT@ 35716 @LENGTH@ 96
------INS InfixExpression@@bean == null @TO@ IfStatement@@if (bean == null) {  return new WebClientReactiveAuthorizationCodeTokenResponseClient();} @AT@ 35720 @LENGTH@ 12
---------INS SimpleName@@bean @TO@ InfixExpression@@bean == null @AT@ 35720 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@bean == null @AT@ 35724 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@bean == null @AT@ 35728 @LENGTH@ 4
------INS Block@@ThenBody:{  return new WebClientReactiveAuthorizationCodeTokenResponseClient();} @TO@ IfStatement@@if (bean == null) {  return new WebClientReactiveAuthorizationCodeTokenResponseClient();} @AT@ 35734 @LENGTH@ 78
---------INS ReturnStatement@@ClassInstanceCreation:new WebClientReactiveAuthorizationCodeTokenResponseClient() @TO@ Block@@ThenBody:{  return new WebClientReactiveAuthorizationCodeTokenResponseClient();} @AT@ 35740 @LENGTH@ 67
------------INS ClassInstanceCreation@@WebClientReactiveAuthorizationCodeTokenResponseClient[] @TO@ ReturnStatement@@ClassInstanceCreation:new WebClientReactiveAuthorizationCodeTokenResponseClient() @AT@ 35747 @LENGTH@ 59
---------------INS New@@new @TO@ ClassInstanceCreation@@WebClientReactiveAuthorizationCodeTokenResponseClient[] @AT@ 35747 @LENGTH@ 3
---------------INS SimpleType@@WebClientReactiveAuthorizationCodeTokenResponseClient @TO@ ClassInstanceCreation@@WebClientReactiveAuthorizationCodeTokenResponseClient[] @AT@ 35751 @LENGTH@ 53
---INS ReturnStatement@@SimpleName:bean @TO@ MethodDeclaration@@private, ReactiveOAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>, MethodName:getAccessTokenResponseClient,  @AT@ 35816 @LENGTH@ 12
------INS SimpleName@@bean @TO@ ReturnStatement@@SimpleName:bean @AT@ 35823 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:builder.append("(?!(?:where))(\\w+)") @TO@ MethodInvocation:builder.append("(?!(?:where|group by|order by))(\\w+)") @AT@ 5554 @LENGTH@ 38
---UPD MethodInvocation@@builder.append("(?!(?:where))(\\w+)") @TO@ builder.append("(?!(?:where|group by|order by))(\\w+)") @AT@ 5554 @LENGTH@ 37
------UPD SimpleName@@MethodName:append:["(?!(?:where))(\\w+)"] @TO@ MethodName:append:["(?!(?:where|group by|order by))(\\w+)"] @AT@ 5562 @LENGTH@ 29
---------UPD StringLiteral@@"(?!(?:where))(\\w+)" @TO@ "(?!(?:where|group by|order by))(\\w+)" @AT@ 5569 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(configuration,new HashMap<>(parameters)) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(getCamelContext(),configuration,new HashMap<>(parameters)) @AT@ 23235 @LENGTH@ 77
---UPD MethodInvocation@@IntrospectionSupport.setProperties(configuration,new HashMap<>(parameters)) @TO@ PropertyBindingSupport.bindProperties(getCamelContext(),configuration,new HashMap<>(parameters)) @AT@ 23235 @LENGTH@ 76
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 23235 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[configuration, new HashMap<>(parameters)] @TO@ MethodName:bindProperties:[getCamelContext(), configuration, new HashMap<>(parameters)] @AT@ 23256 @LENGTH@ 55
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:setProperties:[configuration, new HashMap<>(parameters)] @AT@ 23275 @LENGTH@ 17


UPD IfStatement@@if (!this.taskExecutorSet && StringUtils.hasText(this.getBeanName())) {  this.taskExecutor=new SimpleAsyncTaskExecutor(this.getBeanName() + "-");  this.taskExecutorSet=true;} @TO@ if (!this.taskExecutorSet && StringUtils.hasText(getListenerId())) {  this.taskExecutor=new SimpleAsyncTaskExecutor(getListenerId() + "-");  this.taskExecutorSet=true;} @AT@ 42004 @LENGTH@ 188
---UPD InfixExpression@@!this.taskExecutorSet && StringUtils.hasText(this.getBeanName()) @TO@ !this.taskExecutorSet && StringUtils.hasText(getListenerId()) @AT@ 42008 @LENGTH@ 64
------UPD MethodInvocation@@StringUtils.hasText(this.getBeanName()) @TO@ StringUtils.hasText(getListenerId()) @AT@ 42033 @LENGTH@ 39
---------UPD SimpleName@@MethodName:hasText:[this.getBeanName()] @TO@ MethodName:hasText:[getListenerId()] @AT@ 42045 @LENGTH@ 27
------------UPD MethodInvocation@@this.getBeanName() @TO@ MethodName:getListenerId:[] @AT@ 42053 @LENGTH@ 18
---------------DEL ThisExpression@@this @AT@ 42053 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:getBeanName:[] @AT@ 42058 @LENGTH@ 13
---UPD Block@@ThenBody:{  this.taskExecutor=new SimpleAsyncTaskExecutor(this.getBeanName() + "-");  this.taskExecutorSet=true;} @TO@ ThenBody:{  this.taskExecutor=new SimpleAsyncTaskExecutor(getListenerId() + "-");  this.taskExecutorSet=true;} @AT@ 42074 @LENGTH@ 118
------UPD ExpressionStatement@@Assignment:this.taskExecutor=new SimpleAsyncTaskExecutor(this.getBeanName() + "-") @TO@ Assignment:this.taskExecutor=new SimpleAsyncTaskExecutor(getListenerId() + "-") @AT@ 42080 @LENGTH@ 74
---------UPD Assignment@@this.taskExecutor=new SimpleAsyncTaskExecutor(this.getBeanName() + "-") @TO@ this.taskExecutor=new SimpleAsyncTaskExecutor(getListenerId() + "-") @AT@ 42080 @LENGTH@ 73
------------UPD ClassInstanceCreation@@SimpleAsyncTaskExecutor[this.getBeanName() + "-"] @TO@ SimpleAsyncTaskExecutor[getListenerId() + "-"] @AT@ 42100 @LENGTH@ 53
---------------UPD InfixExpression@@this.getBeanName() + "-" @TO@ getListenerId() + "-" @AT@ 42128 @LENGTH@ 24
------------------UPD MethodInvocation@@this.getBeanName() @TO@ MethodName:getListenerId:[] @AT@ 42128 @LENGTH@ 18
---------------------DEL ThisExpression@@this @AT@ 42128 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getBeanName:[] @AT@ 42133 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:toJson, Writer writable, IOException,  @TO@ void, MethodName:toJson, Writer writable, IOException,  @AT@ 1129 @LENGTH@ 55
---DEL Modifier@@public @AT@ 1129 @LENGTH@ 6


INS MethodDeclaration@@public, synchronized, void, MethodName:releaseRunnable,  @TO@ TypeDeclaration@@[public]DriverContext,  @AT@ 3254 @LENGTH@ 96
---INS Modifier@@public @TO@ MethodDeclaration@@public, synchronized, void, MethodName:releaseRunnable,  @AT@ 3254 @LENGTH@ 6
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, synchronized, void, MethodName:releaseRunnable,  @AT@ 3261 @LENGTH@ 12
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, synchronized, void, MethodName:releaseRunnable,  @AT@ 3274 @LENGTH@ 4
---INS SimpleName@@MethodName:releaseRunnable @TO@ MethodDeclaration@@public, synchronized, void, MethodName:releaseRunnable,  @AT@ 3279 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:notify() @TO@ MethodDeclaration@@public, synchronized, void, MethodName:releaseRunnable,  @AT@ 3337 @LENGTH@ 9
------INS MethodInvocation@@MethodName:notify:[] @TO@ ExpressionStatement@@MethodInvocation:notify() @AT@ 3337 @LENGTH@ 8


UPD TypeDeclaration@@[@FunctionalInterface, public]OperationsCallback,  @TO@ [@FunctionalInterface]OperationsCallback,  @AT@ 18511 @LENGTH@ 469
---DEL Modifier@@public @AT@ 18533 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:InvocationResult, Object result, Expression sendTo, Type returnType,  @TO@ public, voidMethodName:InvocationResult, Object result, Expression sendTo, @Nullable Type returnType,  @AT@ 1002 @LENGTH@ 164
---UPD SingleVariableDeclaration@@Type returnType @TO@ @Nullable Type returnType @AT@ 1060 @LENGTH@ 15


UPD TryStatement@@try {  shutdownStrategy.shutdownForced(this,getRouteStartupOrder());} catch (Throwable e) {  log.warn("Error occurred while shutting down routes. This exception will be ignored.",e);} @TO@ try {  if (shutdownStrategy != null) {    shutdownStrategy.shutdownForced(this,getRouteStartupOrder());  }} catch (Throwable e) {  log.warn("Error occurred while shutting down routes. This exception will be ignored.",e);} @AT@ 94529 @LENGTH@ 327
---INS IfStatement@@if (shutdownStrategy != null) {  shutdownStrategy.shutdownForced(this,getRouteStartupOrder());} @TO@ TryStatement@@try {  shutdownStrategy.shutdownForced(this,getRouteStartupOrder());} catch (Throwable e) {  log.warn("Error occurred while shutting down routes. This exception will be ignored.",e);} @AT@ 94634 @LENGTH@ 124
------INS InfixExpression@@shutdownStrategy != null @TO@ IfStatement@@if (shutdownStrategy != null) {  shutdownStrategy.shutdownForced(this,getRouteStartupOrder());} @AT@ 94638 @LENGTH@ 24
---------INS SimpleName@@shutdownStrategy @TO@ InfixExpression@@shutdownStrategy != null @AT@ 94638 @LENGTH@ 16
---------INS Operator@@!= @TO@ InfixExpression@@shutdownStrategy != null @AT@ 94654 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@shutdownStrategy != null @AT@ 94658 @LENGTH@ 4
------INS Block@@ThenBody:{  shutdownStrategy.shutdownForced(this,getRouteStartupOrder());} @TO@ IfStatement@@if (shutdownStrategy != null) {  shutdownStrategy.shutdownForced(this,getRouteStartupOrder());} @AT@ 94664 @LENGTH@ 94
---------MOV ExpressionStatement@@MethodInvocation:shutdownStrategy.shutdownForced(this,getRouteStartupOrder()) @TO@ Block@@ThenBody:{  shutdownStrategy.shutdownForced(this,getRouteStartupOrder());} @AT@ 94649 @LENGTH@ 62


UPD TypeDeclaration@@[public]PredicateBuilder,  @TO@ [public, final]PredicateBuilder,  @AT@ 1285 @LENGTH@ 18375
---INS Modifier@@final @TO@ TypeDeclaration@@[public]PredicateBuilder,  @AT@ 1292 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:camelContext.addLifecycleStrategy(lifecycle) @TO@ MethodInvocation:camelContext.getLifecycleStrategies().add(0,lifecycle) @AT@ 2118 @LENGTH@ 45
---UPD MethodInvocation@@camelContext.addLifecycleStrategy(lifecycle) @TO@ camelContext.getLifecycleStrategies().add(0,lifecycle) @AT@ 2118 @LENGTH@ 44
------UPD SimpleName@@MethodName:addLifecycleStrategy:[lifecycle] @TO@ MethodName:add:[0, lifecycle] @AT@ 2131 @LENGTH@ 31
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:addLifecycleStrategy:[lifecycle] @AT@ 2367 @LENGTH@ 1
------INS MethodInvocation@@MethodName:getLifecycleStrategies:[] @TO@ MethodInvocation@@camelContext.addLifecycleStrategy(lifecycle) @AT@ 2325 @LENGTH@ 37


UPD TypeDeclaration@@[private]UpdatedFileProcessor, DefaultProducer @TO@ [private, final]UpdatedFileProcessor, DefaultProducer @AT@ 4137 @LENGTH@ 799
---INS Modifier@@final @TO@ TypeDeclaration@@[private]UpdatedFileProcessor, DefaultProducer @AT@ 4145 @LENGTH@ 5


MOV MethodDeclaration@@public, static, MavenCoordinates, MethodName:parseMavenCoordinates, String coordinates,  @TO@ TypeDeclaration@@[public]MavenCoordinates,  @AT@ 1030 @LENGTH@ 622


UPD VariableDeclarationStatement@@Constructor<?> constructor=type.getDeclaredConstructor(String.class); @TO@ Constructor<?> constructor=type.getConstructor(String.class); @AT@ 2441 @LENGTH@ 71
---UPD VariableDeclarationFragment@@constructor=type.getDeclaredConstructor(String.class) @TO@ constructor=type.getConstructor(String.class) @AT@ 2456 @LENGTH@ 55
------UPD MethodInvocation@@type.getDeclaredConstructor(String.class) @TO@ type.getConstructor(String.class) @AT@ 2470 @LENGTH@ 41
---------UPD SimpleName@@MethodName:getDeclaredConstructor:[String.class] @TO@ MethodName:getConstructor:[String.class] @AT@ 2475 @LENGTH@ 36


UPD ExpressionStatement@@Assignment:exchange=exchange(MockServerHttpRequest.get("https://example.com/")) @TO@ Assignment:exchange=exchange(MockServerHttpRequest.get("http://localhost/")) @AT@ 3077 @LENGTH@ 71
---UPD Assignment@@exchange=exchange(MockServerHttpRequest.get("https://example.com/")) @TO@ exchange=exchange(MockServerHttpRequest.get("http://localhost/")) @AT@ 3077 @LENGTH@ 70
------UPD MethodInvocation@@exchange(MockServerHttpRequest.get("https://example.com/")) @TO@ exchange(MockServerHttpRequest.get("http://localhost/")) @AT@ 3088 @LENGTH@ 59
---------UPD SimpleName@@MethodName:exchange:[MockServerHttpRequest.get("https://example.com/")] @TO@ MethodName:exchange:[MockServerHttpRequest.get("http://localhost/")] @AT@ 3088 @LENGTH@ 59
------------UPD MethodInvocation@@MockServerHttpRequest.get("https://example.com/") @TO@ MockServerHttpRequest.get("http://localhost/") @AT@ 3097 @LENGTH@ 49
---------------UPD SimpleName@@MethodName:get:["https://example.com/"] @TO@ MethodName:get:["http://localhost/"] @AT@ 3119 @LENGTH@ 27
------------------UPD StringLiteral@@"https://example.com/" @TO@ "http://localhost/" @AT@ 3123 @LENGTH@ 22


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Bucket Name must be specified for deleteObject Operation") @TO@ ClassInstanceCreation:new IllegalArgumentException("Bucket Name must be specified for getObject Operation") @AT@ 17620 @LENGTH@ 95
---UPD ClassInstanceCreation@@IllegalArgumentException["Bucket Name must be specified for deleteObject Operation"] @TO@ IllegalArgumentException["Bucket Name must be specified for getObject Operation"] @AT@ 17626 @LENGTH@ 88
------UPD StringLiteral@@"Bucket Name must be specified for deleteObject Operation" @TO@ "Bucket Name must be specified for getObject Operation" @AT@ 17655 @LENGTH@ 58


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1212 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1212 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1219 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1227 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1257 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1264 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:registry.put("firehoseClient",amazonKinesisFirehoseClient) @TO@ MethodInvocation:registry.bind("firehoseClient",amazonKinesisFirehoseClient) @AT@ 1649 @LENGTH@ 60
---UPD MethodInvocation@@registry.put("firehoseClient",amazonKinesisFirehoseClient) @TO@ registry.bind("firehoseClient",amazonKinesisFirehoseClient) @AT@ 1649 @LENGTH@ 59
------UPD SimpleName@@MethodName:put:["firehoseClient", amazonKinesisFirehoseClient] @TO@ MethodName:bind:["firehoseClient", amazonKinesisFirehoseClient] @AT@ 1658 @LENGTH@ 50


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1070 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1070 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1077 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1085 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1115 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1122 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:request.setServerName("example.com") @TO@ MethodInvocation:request.setServerName("localhost") @AT@ 15945 @LENGTH@ 37
---UPD MethodInvocation@@request.setServerName("example.com") @TO@ request.setServerName("localhost") @AT@ 15945 @LENGTH@ 36
------UPD SimpleName@@MethodName:setServerName:["example.com"] @TO@ MethodName:setServerName:["localhost"] @AT@ 15953 @LENGTH@ 28
---------UPD StringLiteral@@"example.com" @TO@ "localhost" @AT@ 15967 @LENGTH@ 13


UPD FieldDeclaration@@private, static, final, Pattern, [USERINFO_PASSWORD=Pattern.compile("(.*://.*:)(.*)(@)")] @TO@ private, static, final, Pattern, [USERINFO_PASSWORD=Pattern.compile("(.*://.*?:)(.*)(@)")] @AT@ 1907 @LENGTH@ 86
---UPD VariableDeclarationFragment@@USERINFO_PASSWORD=Pattern.compile("(.*://.*:)(.*)(@)") @TO@ USERINFO_PASSWORD=Pattern.compile("(.*://.*?:)(.*)(@)") @AT@ 1936 @LENGTH@ 56
------UPD MethodInvocation@@Pattern.compile("(.*://.*:)(.*)(@)") @TO@ Pattern.compile("(.*://.*?:)(.*)(@)") @AT@ 1956 @LENGTH@ 36
---------UPD SimpleName@@MethodName:compile:["(.*://.*:)(.*)(@)"] @TO@ MethodName:compile:["(.*://.*?:)(.*)(@)"] @AT@ 1964 @LENGTH@ 28
------------UPD StringLiteral@@"(.*://.*:)(.*)(@)" @TO@ "(.*://.*?:)(.*)(@)" @AT@ 1972 @LENGTH@ 19


MOV FieldDeclaration@@AmazonS3ClientMock, [clientMock=new AmazonS3ClientMock()] @TO@ TypeDeclaration@@[public]S3ComponentExistingBucketTest, CamelTestSupport @AT@ 1768 @LENGTH@ 57


UPD ExpressionStatement@@Assignment:this.jwtDecoderBuilder=withJwkSetUri(jwkSetUrl).jwsAlgorithm(jwsAlgorithm) @TO@ Assignment:this.jwtDecoderBuilder=withJwkSetUri(jwkSetUrl).jwsAlgorithm(SignatureAlgorithm.from(jwsAlgorithm)) @AT@ 3221 @LENGTH@ 77
---UPD Assignment@@this.jwtDecoderBuilder=withJwkSetUri(jwkSetUrl).jwsAlgorithm(jwsAlgorithm) @TO@ this.jwtDecoderBuilder=withJwkSetUri(jwkSetUrl).jwsAlgorithm(SignatureAlgorithm.from(jwsAlgorithm)) @AT@ 3221 @LENGTH@ 76
------UPD MethodInvocation@@withJwkSetUri(jwkSetUrl).jwsAlgorithm(jwsAlgorithm) @TO@ withJwkSetUri(jwkSetUrl).jwsAlgorithm(SignatureAlgorithm.from(jwsAlgorithm)) @AT@ 3246 @LENGTH@ 51
---------UPD SimpleName@@MethodName:jwsAlgorithm:[jwsAlgorithm] @TO@ MethodName:from:[jwsAlgorithm] @AT@ 3271 @LENGTH@ 26
---------INS SimpleName@@MethodName:jwsAlgorithm:[SignatureAlgorithm.from(jwsAlgorithm)] @TO@ MethodInvocation@@withJwkSetUri(jwkSetUrl).jwsAlgorithm(jwsAlgorithm) @AT@ 3343 @LENGTH@ 51
------------INS MethodInvocation@@SignatureAlgorithm.from(jwsAlgorithm) @TO@ SimpleName@@MethodName:jwsAlgorithm:[SignatureAlgorithm.from(jwsAlgorithm)] @AT@ 3356 @LENGTH@ 37
---------------MOV SimpleName@@MethodName:jwsAlgorithm:[jwsAlgorithm] @TO@ MethodInvocation@@SignatureAlgorithm.from(jwsAlgorithm) @AT@ 3271 @LENGTH@ 26
---------------INS SimpleName@@Name:SignatureAlgorithm @TO@ MethodInvocation@@SignatureAlgorithm.from(jwsAlgorithm) @AT@ 3356 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess,  @TO@ TypeDeclaration@@[public]JwtDecodersTests,  @AT@ 5195 @LENGTH@ 286
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess,  @AT@ 5195 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess,  @AT@ 5202 @LENGTH@ 4
---INS SimpleName@@MethodName:issuerWhenContainsTrailingSlashThenSuccess @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess,  @AT@ 5207 @LENGTH@ 42
---INS ExpressionStatement@@MethodInvocation:prepareOpenIdConfigurationResponse() @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess,  @AT@ 5256 @LENGTH@ 37
------INS MethodInvocation@@MethodName:prepareOpenIdConfigurationResponse:[] @TO@ ExpressionStatement@@MethodInvocation:prepareOpenIdConfigurationResponse() @AT@ 5256 @LENGTH@ 36
---INS ExpressionStatement@@MethodInvocation:this.server.enqueue(new MockResponse().setBody(JWK_SET)) @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess,  @AT@ 5296 @LENGTH@ 57
------INS MethodInvocation@@this.server.enqueue(new MockResponse().setBody(JWK_SET)) @TO@ ExpressionStatement@@MethodInvocation:this.server.enqueue(new MockResponse().setBody(JWK_SET)) @AT@ 5296 @LENGTH@ 56
---------INS FieldAccess@@this.server @TO@ MethodInvocation@@this.server.enqueue(new MockResponse().setBody(JWK_SET)) @AT@ 5296 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.server @AT@ 5296 @LENGTH@ 4
------------INS SimpleName@@server @TO@ FieldAccess@@this.server @AT@ 5301 @LENGTH@ 6
---------INS SimpleName@@MethodName:enqueue:[new MockResponse().setBody(JWK_SET)] @TO@ MethodInvocation@@this.server.enqueue(new MockResponse().setBody(JWK_SET)) @AT@ 5308 @LENGTH@ 44
------------INS MethodInvocation@@new MockResponse().setBody(JWK_SET) @TO@ SimpleName@@MethodName:enqueue:[new MockResponse().setBody(JWK_SET)] @AT@ 5316 @LENGTH@ 35
---------------INS ClassInstanceCreation@@MockResponse[] @TO@ MethodInvocation@@new MockResponse().setBody(JWK_SET) @AT@ 5316 @LENGTH@ 18
------------------INS New@@new @TO@ ClassInstanceCreation@@MockResponse[] @AT@ 5316 @LENGTH@ 3
------------------INS SimpleType@@MockResponse @TO@ ClassInstanceCreation@@MockResponse[] @AT@ 5320 @LENGTH@ 12
---------------INS SimpleName@@MethodName:setBody:[JWK_SET] @TO@ MethodInvocation@@new MockResponse().setBody(JWK_SET) @AT@ 5335 @LENGTH@ 16
------------------INS SimpleName@@JWK_SET @TO@ SimpleName@@MethodName:setBody:[JWK_SET] @AT@ 5343 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(JwtDecoders.fromOidcIssuerLocation(this.issuer)).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess,  @AT@ 5356 @LENGTH@ 72
------INS MethodInvocation@@assertThat(JwtDecoders.fromOidcIssuerLocation(this.issuer)).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(JwtDecoders.fromOidcIssuerLocation(this.issuer)).isNotNull() @AT@ 5356 @LENGTH@ 71
---------INS MethodInvocation@@MethodName:assertThat:[JwtDecoders.fromOidcIssuerLocation(this.issuer)] @TO@ MethodInvocation@@assertThat(JwtDecoders.fromOidcIssuerLocation(this.issuer)).isNotNull() @AT@ 5356 @LENGTH@ 59
------------INS MethodInvocation@@JwtDecoders.fromOidcIssuerLocation(this.issuer) @TO@ MethodInvocation@@MethodName:assertThat:[JwtDecoders.fromOidcIssuerLocation(this.issuer)] @AT@ 5367 @LENGTH@ 47
---------------INS SimpleName@@Name:JwtDecoders @TO@ MethodInvocation@@JwtDecoders.fromOidcIssuerLocation(this.issuer) @AT@ 5367 @LENGTH@ 11
---------------INS SimpleName@@MethodName:fromOidcIssuerLocation:[this.issuer] @TO@ MethodInvocation@@JwtDecoders.fromOidcIssuerLocation(this.issuer) @AT@ 5379 @LENGTH@ 35
------------------INS FieldAccess@@this.issuer @TO@ SimpleName@@MethodName:fromOidcIssuerLocation:[this.issuer] @AT@ 5402 @LENGTH@ 11
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.issuer @AT@ 5402 @LENGTH@ 4
---------------------INS SimpleName@@issuer @TO@ FieldAccess@@this.issuer @AT@ 5407 @LENGTH@ 6
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(JwtDecoders.fromOidcIssuerLocation(this.issuer)).isNotNull() @AT@ 5416 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(this.issuer.endsWith("/")).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess,  @AT@ 5431 @LENGTH@ 47
------INS MethodInvocation@@assertThat(this.issuer.endsWith("/")).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.issuer.endsWith("/")).isTrue() @AT@ 5431 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:assertThat:[this.issuer.endsWith("/")] @TO@ MethodInvocation@@assertThat(this.issuer.endsWith("/")).isTrue() @AT@ 5431 @LENGTH@ 37
------------INS MethodInvocation@@this.issuer.endsWith("/") @TO@ MethodInvocation@@MethodName:assertThat:[this.issuer.endsWith("/")] @AT@ 5442 @LENGTH@ 25
---------------INS FieldAccess@@this.issuer @TO@ MethodInvocation@@this.issuer.endsWith("/") @AT@ 5442 @LENGTH@ 11
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.issuer @AT@ 5442 @LENGTH@ 4
------------------INS SimpleName@@issuer @TO@ FieldAccess@@this.issuer @AT@ 5447 @LENGTH@ 6
---------------INS SimpleName@@MethodName:endsWith:["/"] @TO@ MethodInvocation@@this.issuer.endsWith("/") @AT@ 5454 @LENGTH@ 13
------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:endsWith:["/"] @AT@ 5463 @LENGTH@ 3
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(this.issuer.endsWith("/")).isTrue() @AT@ 5469 @LENGTH@ 8


MOV MethodDeclaration@@public, static, void, MethodName:registerReifier, Class<?> errorHandlerClass, Function<ErrorHandlerFactory,ErrorHandlerReifier<? extends ErrorHandlerFactory>> creator,  @TO@ TypeDeclaration@@[public, abstract]ErrorHandlerReifier,  @AT@ 3077 @LENGTH@ 217


DEL MethodDeclaration@@public, static, PulsarProducer, MethodName:create, final PulsarEndpoint pulsarEndpoint,  @AT@ 1747 @LENGTH@ 131
---DEL Modifier@@public @AT@ 1747 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1754 @LENGTH@ 6
---DEL SimpleType@@PulsarProducer @AT@ 1761 @LENGTH@ 14
---DEL SimpleName@@MethodName:create @AT@ 1776 @LENGTH@ 6
---DEL SingleVariableDeclaration@@final PulsarEndpoint pulsarEndpoint @AT@ 1783 @LENGTH@ 35
------DEL Modifier@@final @AT@ 1783 @LENGTH@ 5
------DEL SimpleType@@PulsarEndpoint @AT@ 1789 @LENGTH@ 14
------DEL SimpleName@@pulsarEndpoint @AT@ 1804 @LENGTH@ 14
---DEL ReturnStatement@@ClassInstanceCreation:new PulsarProducer(pulsarEndpoint) @AT@ 1830 @LENGTH@ 42
------DEL ClassInstanceCreation@@PulsarProducer[pulsarEndpoint] @AT@ 1837 @LENGTH@ 34
---------DEL New@@new @AT@ 1837 @LENGTH@ 3
---------DEL SimpleType@@PulsarProducer @AT@ 1841 @LENGTH@ 14
---------DEL SimpleName@@pulsarEndpoint @AT@ 1856 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:registry.put("ddbStreamsClient",amazonDynamoDBStreams) @TO@ MethodInvocation:registry.bind("ddbStreamsClient",amazonDynamoDBStreams) @AT@ 2052 @LENGTH@ 56
---UPD MethodInvocation@@registry.put("ddbStreamsClient",amazonDynamoDBStreams) @TO@ registry.bind("ddbStreamsClient",amazonDynamoDBStreams) @AT@ 2052 @LENGTH@ 55
------UPD SimpleName@@MethodName:put:["ddbStreamsClient", amazonDynamoDBStreams] @TO@ MethodName:bind:["ddbStreamsClient", amazonDynamoDBStreams] @AT@ 2061 @LENGTH@ 46


MOV FieldDeclaration@@public, PulsarContainer, [pulsarContainer=new PulsarContainer()] @TO@ TypeDeclaration@@[public]PulsarConsumerInTest, CamelTestSupport @AT@ 1876 @LENGTH@ 63


UPD LambdaExpression@@() -> {
  ClientRegistration clientRegistration=authorizationGrantRequest.getClientRegistration();
  OAuth2AuthorizationExchange authorizationExchange=authorizationGrantRequest.getAuthorizationExchange();
  String tokenUri=clientRegistration.getProviderDetails().getTokenUri();
  BodyInserters.FormInserter<String> body=body(authorizationExchange);
  return this.webClient.post().uri(tokenUri).accept(MediaType.APPLICATION_JSON).headers(headers -> headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret())).body(body).exchange().flatMap(response -> response.body(oauth2AccessTokenResponse())).map(response -> {
    if (response.getAccessToken().getScopes().isEmpty()) {
      response=OAuth2AccessTokenResponse.withResponse(response).scopes(authorizationExchange.getAuthorizationRequest().getScopes()).build();
    }
    return response;
  }
);
}
 @TO@ () -> {
  ClientRegistration clientRegistration=authorizationGrantRequest.getClientRegistration();
  OAuth2AuthorizationExchange authorizationExchange=authorizationGrantRequest.getAuthorizationExchange();
  String tokenUri=clientRegistration.getProviderDetails().getTokenUri();
  BodyInserters.FormInserter<String> body=body(authorizationExchange,clientRegistration);
  return this.webClient.post().uri(tokenUri).accept(MediaType.APPLICATION_JSON).headers(headers -> {
    if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {
      headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());
    }
  }
).body(body).exchange().flatMap(response -> response.body(oauth2AccessTokenResponse())).map(response -> {
    if (response.getAccessToken().getScopes().isEmpty()) {
      response=OAuth2AccessTokenResponse.withResponse(response).scopes(authorizationExchange.getAuthorizationRequest().getScopes()).build();
    }
    return response;
  }
);
}
 @AT@ 2932 @LENGTH@ 968
---UPD VariableDeclarationStatement@@BodyInserters.FormInserter<String> body=body(authorizationExchange); @TO@ BodyInserters.FormInserter<String> body=body(authorizationExchange,clientRegistration); @AT@ 3222 @LENGTH@ 70
------UPD VariableDeclarationFragment@@body=body(authorizationExchange) @TO@ body=body(authorizationExchange,clientRegistration) @AT@ 3257 @LENGTH@ 34
---------UPD MethodInvocation@@body(authorizationExchange) @TO@ body(authorizationExchange,clientRegistration) @AT@ 3264 @LENGTH@ 27
------------UPD SimpleName@@MethodName:body:[authorizationExchange] @TO@ MethodName:body:[authorizationExchange, clientRegistration] @AT@ 3264 @LENGTH@ 27
---------------INS SimpleName@@clientRegistration @TO@ SimpleName@@MethodName:body:[authorizationExchange] @AT@ 3656 @LENGTH@ 18
---UPD ReturnStatement@@MethodInvocation:this.webClient.post().uri(tokenUri).accept(MediaType.APPLICATION_JSON).headers(headers -> headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret())).body(body).exchange().flatMap(response -> response.body(oauth2AccessTokenResponse())).map(response -> {
  if (response.getAccessToken().getScopes().isEmpty()) {
    response=OAuth2AccessTokenResponse.withResponse(response).scopes(authorizationExchange.getAuthorizationRequest().getScopes()).build();
  }
  return response;
}
) @TO@ MethodInvocation:this.webClient.post().uri(tokenUri).accept(MediaType.APPLICATION_JSON).headers(headers -> {
  if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {
    headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());
  }
}
).body(body).exchange().flatMap(response -> response.body(oauth2AccessTokenResponse())).map(response -> {
  if (response.getAccessToken().getScopes().isEmpty()) {
    response=OAuth2AccessTokenResponse.withResponse(response).scopes(authorizationExchange.getAuthorizationRequest().getScopes()).build();
  }
  return response;
}
) @AT@ 3297 @LENGTH@ 599
------UPD MethodInvocation@@this.webClient.post().uri(tokenUri).accept(MediaType.APPLICATION_JSON).headers(headers -> headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret())).body(body).exchange().flatMap(response -> response.body(oauth2AccessTokenResponse())).map(response -> {
  if (response.getAccessToken().getScopes().isEmpty()) {
    response=OAuth2AccessTokenResponse.withResponse(response).scopes(authorizationExchange.getAuthorizationRequest().getScopes()).build();
  }
  return response;
}
) @TO@ this.webClient.post().uri(tokenUri).accept(MediaType.APPLICATION_JSON).headers(headers -> {
  if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {
    headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());
  }
}
).body(body).exchange().flatMap(response -> response.body(oauth2AccessTokenResponse())).map(response -> {
  if (response.getAccessToken().getScopes().isEmpty()) {
    response=OAuth2AccessTokenResponse.withResponse(response).scopes(authorizationExchange.getAuthorizationRequest().getScopes()).build();
  }
  return response;
}
) @AT@ 3304 @LENGTH@ 591
---------UPD MethodInvocation@@MethodName:headers:[headers -> headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret())] @TO@ MethodName:headers:[headers -> {
  if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {
    headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());
  }
}
] @AT@ 3304 @LENGTH@ 201
------------UPD LambdaExpression@@headers -> headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret()) @TO@ headers -> {
  if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {
    headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());
  }
}
 @AT@ 3401 @LENGTH@ 103
---------------INS IfStatement@@if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {  headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());} @TO@ LambdaExpression@@headers -> headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret()) @AT@ 3804 @LENGTH@ 207
------------------INS MethodInvocation@@ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod()) @TO@ IfStatement@@if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {  headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());} @AT@ 3808 @LENGTH@ 91
---------------------INS QualifiedName@@Name:ClientAuthenticationMethod.BASIC @TO@ MethodInvocation@@ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod()) @AT@ 3808 @LENGTH@ 32
---------------------INS SimpleName@@MethodName:equals:[clientRegistration.getClientAuthenticationMethod()] @TO@ MethodInvocation@@ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod()) @AT@ 3841 @LENGTH@ 58
------------------------INS MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @TO@ SimpleName@@MethodName:equals:[clientRegistration.getClientAuthenticationMethod()] @AT@ 3848 @LENGTH@ 50
---------------------------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @AT@ 3848 @LENGTH@ 18
---------------------------INS SimpleName@@MethodName:getClientAuthenticationMethod:[] @TO@ MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @AT@ 3867 @LENGTH@ 31
------------------INS Block@@ThenBody:{  headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());} @TO@ IfStatement@@if (ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {  headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());} @AT@ 3901 @LENGTH@ 110
---------------------INS ExpressionStatement@@MethodInvocation:headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret()) @TO@ Block@@ThenBody:{  headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret());} @AT@ 3910 @LENGTH@ 93
------------------------MOV MethodInvocation@@headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret()) @TO@ ExpressionStatement@@MethodInvocation:headers.setBasicAuth(clientRegistration.getClientId(),clientRegistration.getClientSecret()) @AT@ 3412 @LENGTH@ 92


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(configuration,getTestOptions()) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(context,configuration,getTestOptions()) @AT@ 1502 @LENGTH@ 68
---UPD MethodInvocation@@IntrospectionSupport.setProperties(configuration,getTestOptions()) @TO@ PropertyBindingSupport.bindProperties(context,configuration,getTestOptions()) @AT@ 1502 @LENGTH@ 67
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 1502 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[configuration, getTestOptions()] @TO@ MethodName:bindProperties:[context, configuration, getTestOptions()] @AT@ 1523 @LENGTH@ 46
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:setProperties:[configuration, getTestOptions()] @AT@ 1542 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:context.getLifecycleStrategies().add(0,new JmxManagementLifecycleStrategy(context)) @AT@ 1998 @LENGTH@ 85
---DEL MethodInvocation@@context.getLifecycleStrategies().add(0,new JmxManagementLifecycleStrategy(context)) @AT@ 1998 @LENGTH@ 84
------DEL MethodInvocation@@MethodName:getLifecycleStrategies:[] @AT@ 1998 @LENGTH@ 32
------DEL SimpleName@@Name:context @AT@ 1998 @LENGTH@ 7
------DEL SimpleName@@MethodName:add:[0, new JmxManagementLifecycleStrategy(context)] @AT@ 2031 @LENGTH@ 51
---------DEL NumberLiteral@@0 @AT@ 2035 @LENGTH@ 1
---------DEL ClassInstanceCreation@@JmxManagementLifecycleStrategy[context] @AT@ 2038 @LENGTH@ 43
------------DEL New@@new @AT@ 2038 @LENGTH@ 3
------------DEL SimpleType@@JmxManagementLifecycleStrategy @AT@ 2042 @LENGTH@ 30
------------DEL SimpleName@@context @AT@ 2073 @LENGTH@ 7


UPD FieldDeclaration@@boolean, [canceled] @TO@ private, boolean, [canceled] @AT@ 28862 @LENGTH@ 17
---INS Modifier@@private @TO@ FieldDeclaration@@boolean, [canceled] @AT@ 28862 @LENGTH@ 7


INS ExpressionStatement@@Assignment:stats=msClient.getPartitionColumnStatistics(dbName,tblName,null,Lists.newArrayList("s"),currentWriteIds) @TO@ MethodDeclaration@@public, void, MethodName:testTxnPartitions, Exception,  @AT@ 12079 @LENGTH@ 128
---INS Assignment@@stats=msClient.getPartitionColumnStatistics(dbName,tblName,null,Lists.newArrayList("s"),currentWriteIds) @TO@ ExpressionStatement@@Assignment:stats=msClient.getPartitionColumnStatistics(dbName,tblName,null,Lists.newArrayList("s"),currentWriteIds) @AT@ 12079 @LENGTH@ 127
------INS SimpleName@@stats @TO@ Assignment@@stats=msClient.getPartitionColumnStatistics(dbName,tblName,null,Lists.newArrayList("s"),currentWriteIds) @AT@ 12079 @LENGTH@ 5
------INS Operator@@= @TO@ Assignment@@stats=msClient.getPartitionColumnStatistics(dbName,tblName,null,Lists.newArrayList("s"),currentWriteIds) @AT@ 12084 @LENGTH@ 1
------INS MethodInvocation@@msClient.getPartitionColumnStatistics(dbName,tblName,null,Lists.newArrayList("s"),currentWriteIds) @TO@ Assignment@@stats=msClient.getPartitionColumnStatistics(dbName,tblName,null,Lists.newArrayList("s"),currentWriteIds) @AT@ 12087 @LENGTH@ 119
---------INS SimpleName@@Name:msClient @TO@ MethodInvocation@@msClient.getPartitionColumnStatistics(dbName,tblName,null,Lists.newArrayList("s"),currentWriteIds) @AT@ 12087 @LENGTH@ 8
---------INS SimpleName@@MethodName:getPartitionColumnStatistics:[dbName, tblName, null, Lists.newArrayList("s"), currentWriteIds] @TO@ MethodInvocation@@msClient.getPartitionColumnStatistics(dbName,tblName,null,Lists.newArrayList("s"),currentWriteIds) @AT@ 12096 @LENGTH@ 110
------------INS SimpleName@@dbName @TO@ SimpleName@@MethodName:getPartitionColumnStatistics:[dbName, tblName, null, Lists.newArrayList("s"), currentWriteIds] @AT@ 12134 @LENGTH@ 6
------------INS SimpleName@@tblName @TO@ SimpleName@@MethodName:getPartitionColumnStatistics:[dbName, tblName, null, Lists.newArrayList("s"), currentWriteIds] @AT@ 12142 @LENGTH@ 7
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getPartitionColumnStatistics:[dbName, tblName, null, Lists.newArrayList("s"), currentWriteIds] @AT@ 12151 @LENGTH@ 4
------------INS MethodInvocation@@Lists.newArrayList("s") @TO@ SimpleName@@MethodName:getPartitionColumnStatistics:[dbName, tblName, null, Lists.newArrayList("s"), currentWriteIds] @AT@ 12165 @LENGTH@ 23
---------------INS SimpleName@@Name:Lists @TO@ MethodInvocation@@Lists.newArrayList("s") @AT@ 12165 @LENGTH@ 5
---------------INS SimpleName@@MethodName:newArrayList:["s"] @TO@ MethodInvocation@@Lists.newArrayList("s") @AT@ 12171 @LENGTH@ 17
------------------INS StringLiteral@@"s" @TO@ SimpleName@@MethodName:newArrayList:["s"] @AT@ 12184 @LENGTH@ 3
------------INS SimpleName@@currentWriteIds @TO@ SimpleName@@MethodName:getPartitionColumnStatistics:[dbName, tblName, null, Lists.newArrayList("s"), currentWriteIds] @AT@ 12190 @LENGTH@ 15


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1331 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1331 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1338 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1346 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1376 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1383 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:camel.getProperties().put(JacksonConstants.ENABLE_TYPE_CONVERTER,"true") @TO@ MethodInvocation:camel.getGlobalOptions().put(JacksonConstants.ENABLE_TYPE_CONVERTER,"true") @AT@ 2004 @LENGTH@ 74
---UPD MethodInvocation@@camel.getProperties().put(JacksonConstants.ENABLE_TYPE_CONVERTER,"true") @TO@ camel.getGlobalOptions().put(JacksonConstants.ENABLE_TYPE_CONVERTER,"true") @AT@ 2004 @LENGTH@ 73
------UPD MethodInvocation@@MethodName:getProperties:[] @TO@ MethodName:getGlobalOptions:[] @AT@ 2004 @LENGTH@ 21


UPD TypeDeclaration@@[@ManagedResource(description="Managed Service Endpoint"), @UriEndpoint(firstVersion="2.22.0",scheme="service",syntax="service:serviceName:delegateUri",consumerOnly=true,title="Service",lenientProperties=true,label="cloud"), public]ServiceEndpoint, DefaultEndpoint[DelegateEndpoint] @TO@ [@ManagedResource(description="Managed Service Endpoint"), @UriEndpoint(firstVersion="2.22.0",scheme="service",syntax="service:delegateUri",consumerOnly=true,title="Service",lenientProperties=true,label="cloud"), public]ServiceEndpoint, DefaultEndpoint[DelegateEndpoint] @AT@ 1699 @LENGTH@ 2816
---UPD NormalAnnotation@@@UriEndpoint(firstVersion="2.22.0",scheme="service",syntax="service:serviceName:delegateUri",consumerOnly=true,title="Service",lenientProperties=true,label="cloud") @TO@ @UriEndpoint(firstVersion="2.22.0",scheme="service",syntax="service:delegateUri",consumerOnly=true,title="Service",lenientProperties=true,label="cloud") @AT@ 1758 @LENGTH@ 213


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1397 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1397 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1404 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1412 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1442 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1449 @LENGTH@ 5


INS FieldDeclaration@@private, final, EntityInstantiators, [instantiators=new EntityInstantiators()] @TO@ TypeDeclaration@@[public]Neo4jMappingContext, AbstractMappingContext<Neo4jPersistentEntity<?>,Neo4jPersistentProperty> @AT@ 2268 @LENGTH@ 76
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, EntityInstantiators, [instantiators=new EntityInstantiators()] @AT@ 2268 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, EntityInstantiators, [instantiators=new EntityInstantiators()] @AT@ 2276 @LENGTH@ 5
---INS SimpleType@@EntityInstantiators @TO@ FieldDeclaration@@private, final, EntityInstantiators, [instantiators=new EntityInstantiators()] @AT@ 2282 @LENGTH@ 19
---INS VariableDeclarationFragment@@instantiators=new EntityInstantiators() @TO@ FieldDeclaration@@private, final, EntityInstantiators, [instantiators=new EntityInstantiators()] @AT@ 2302 @LENGTH@ 41
------INS SimpleName@@instantiators @TO@ VariableDeclarationFragment@@instantiators=new EntityInstantiators() @AT@ 2302 @LENGTH@ 13
------INS ClassInstanceCreation@@EntityInstantiators[] @TO@ VariableDeclarationFragment@@instantiators=new EntityInstantiators() @AT@ 2318 @LENGTH@ 25
---------INS New@@new @TO@ ClassInstanceCreation@@EntityInstantiators[] @AT@ 2318 @LENGTH@ 3
---------INS SimpleType@@EntityInstantiators @TO@ ClassInstanceCreation@@EntityInstantiators[] @AT@ 2322 @LENGTH@ 19


INS MethodDeclaration@@public, void, MethodName:returnsNullForBasePropertyOnEmptyPath,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]DefaultPersistentPropertyPathUnitTests,  @AT@ 4220 @LENGTH@ 203
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:returnsNullForBasePropertyOnEmptyPath,  @AT@ 4220 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:returnsNullForBasePropertyOnEmptyPath,  @AT@ 4227 @LENGTH@ 4
---INS SimpleName@@MethodName:returnsNullForBasePropertyOnEmptyPath @TO@ MethodDeclaration@@public, void, MethodName:returnsNullForBasePropertyOnEmptyPath,  @AT@ 4232 @LENGTH@ 37
---INS VariableDeclarationStatement@@PersistentPropertyPath<P> path=new DefaultPersistentPropertyPath<P>(Collections.emptyList()); @TO@ MethodDeclaration@@public, void, MethodName:returnsNullForBasePropertyOnEmptyPath,  @AT@ 4277 @LENGTH@ 95
------INS ParameterizedType@@PersistentPropertyPath<P> @TO@ VariableDeclarationStatement@@PersistentPropertyPath<P> path=new DefaultPersistentPropertyPath<P>(Collections.emptyList()); @AT@ 4277 @LENGTH@ 25
---------INS SimpleType@@PersistentPropertyPath @TO@ ParameterizedType@@PersistentPropertyPath<P> @AT@ 4277 @LENGTH@ 22
---------INS SimpleType@@P @TO@ ParameterizedType@@PersistentPropertyPath<P> @AT@ 4300 @LENGTH@ 1
------INS VariableDeclarationFragment@@path=new DefaultPersistentPropertyPath<P>(Collections.emptyList()) @TO@ VariableDeclarationStatement@@PersistentPropertyPath<P> path=new DefaultPersistentPropertyPath<P>(Collections.emptyList()); @AT@ 4303 @LENGTH@ 68
---------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=new DefaultPersistentPropertyPath<P>(Collections.emptyList()) @AT@ 4303 @LENGTH@ 4
---------INS ClassInstanceCreation@@DefaultPersistentPropertyPath<P>[Collections.emptyList()] @TO@ VariableDeclarationFragment@@path=new DefaultPersistentPropertyPath<P>(Collections.emptyList()) @AT@ 4310 @LENGTH@ 61
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultPersistentPropertyPath<P>[Collections.emptyList()] @AT@ 4310 @LENGTH@ 3
------------INS ParameterizedType@@DefaultPersistentPropertyPath<P> @TO@ ClassInstanceCreation@@DefaultPersistentPropertyPath<P>[Collections.emptyList()] @AT@ 4314 @LENGTH@ 32
---------------INS SimpleType@@DefaultPersistentPropertyPath @TO@ ParameterizedType@@DefaultPersistentPropertyPath<P> @AT@ 4314 @LENGTH@ 29
---------------INS SimpleType@@P @TO@ ParameterizedType@@DefaultPersistentPropertyPath<P> @AT@ 4344 @LENGTH@ 1
------------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@DefaultPersistentPropertyPath<P>[Collections.emptyList()] @AT@ 4347 @LENGTH@ 23
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 4347 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 4359 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(path.getBaseProperty()).isNull() @TO@ MethodDeclaration@@public, void, MethodName:returnsNullForBasePropertyOnEmptyPath,  @AT@ 4376 @LENGTH@ 44
------INS MethodInvocation@@assertThat(path.getBaseProperty()).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(path.getBaseProperty()).isNull() @AT@ 4376 @LENGTH@ 43
---------INS MethodInvocation@@MethodName:assertThat:[path.getBaseProperty()] @TO@ MethodInvocation@@assertThat(path.getBaseProperty()).isNull() @AT@ 4376 @LENGTH@ 34
------------INS MethodInvocation@@path.getBaseProperty() @TO@ MethodInvocation@@MethodName:assertThat:[path.getBaseProperty()] @AT@ 4387 @LENGTH@ 22
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.getBaseProperty() @AT@ 4387 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getBaseProperty:[] @TO@ MethodInvocation@@path.getBaseProperty() @AT@ 4392 @LENGTH@ 17
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(path.getBaseProperty()).isNull() @AT@ 4411 @LENGTH@ 8


UPD TypeDeclaration@@[public, static]ContextBag,  @TO@ [public, static, final]ContextBag,  @AT@ 3276 @LENGTH@ 479
---INS Modifier@@final @TO@ TypeDeclaration@@[public, static]ContextBag,  @AT@ 3408 @LENGTH@ 5


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1387 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1387 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1394 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1402 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1432 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1439 @LENGTH@ 5


INS MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, SecurityWebFilterChain securityWebFilterChain,  @TO@ TypeDeclaration@@[public]WebTestClientBuilder,  @AT@ 1982 @LENGTH@ 225
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, SecurityWebFilterChain securityWebFilterChain,  @AT@ 1982 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, SecurityWebFilterChain securityWebFilterChain,  @AT@ 1989 @LENGTH@ 6
---INS SimpleType@@Builder @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, SecurityWebFilterChain securityWebFilterChain,  @AT@ 1996 @LENGTH@ 7
---INS SimpleName@@MethodName:bindToControllerAndWebFilters @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, SecurityWebFilterChain securityWebFilterChain,  @AT@ 2004 @LENGTH@ 29
---INS SingleVariableDeclaration@@Class<?> controller @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, SecurityWebFilterChain securityWebFilterChain,  @AT@ 2034 @LENGTH@ 19
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> controller @AT@ 2034 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 2034 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 2040 @LENGTH@ 1
------INS SimpleName@@controller @TO@ SingleVariableDeclaration@@Class<?> controller @AT@ 2043 @LENGTH@ 10
---INS SingleVariableDeclaration@@SecurityWebFilterChain securityWebFilterChain @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, SecurityWebFilterChain securityWebFilterChain,  @AT@ 2055 @LENGTH@ 45
------INS SimpleType@@SecurityWebFilterChain @TO@ SingleVariableDeclaration@@SecurityWebFilterChain securityWebFilterChain @AT@ 2055 @LENGTH@ 22
------INS SimpleName@@securityWebFilterChain @TO@ SingleVariableDeclaration@@SecurityWebFilterChain securityWebFilterChain @AT@ 2078 @LENGTH@ 22
---INS ReturnStatement@@MethodInvocation:bindToControllerAndWebFilters(controller,new WebFilterChainProxy(securityWebFilterChain)) @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, SecurityWebFilterChain securityWebFilterChain,  @AT@ 2106 @LENGTH@ 98
------INS MethodInvocation@@bindToControllerAndWebFilters(controller,new WebFilterChainProxy(securityWebFilterChain)) @TO@ ReturnStatement@@MethodInvocation:bindToControllerAndWebFilters(controller,new WebFilterChainProxy(securityWebFilterChain)) @AT@ 2113 @LENGTH@ 90
---------INS SimpleName@@MethodName:bindToControllerAndWebFilters:[controller, new WebFilterChainProxy(securityWebFilterChain)] @TO@ MethodInvocation@@bindToControllerAndWebFilters(controller,new WebFilterChainProxy(securityWebFilterChain)) @AT@ 2113 @LENGTH@ 90
------------INS SimpleName@@controller @TO@ SimpleName@@MethodName:bindToControllerAndWebFilters:[controller, new WebFilterChainProxy(securityWebFilterChain)] @AT@ 2143 @LENGTH@ 10
------------INS ClassInstanceCreation@@WebFilterChainProxy[securityWebFilterChain] @TO@ SimpleName@@MethodName:bindToControllerAndWebFilters:[controller, new WebFilterChainProxy(securityWebFilterChain)] @AT@ 2155 @LENGTH@ 47
---------------INS New@@new @TO@ ClassInstanceCreation@@WebFilterChainProxy[securityWebFilterChain] @AT@ 2155 @LENGTH@ 3
---------------INS SimpleType@@WebFilterChainProxy @TO@ ClassInstanceCreation@@WebFilterChainProxy[securityWebFilterChain] @AT@ 2159 @LENGTH@ 19
---------------INS SimpleName@@securityWebFilterChain @TO@ ClassInstanceCreation@@WebFilterChainProxy[securityWebFilterChain] @AT@ 2179 @LENGTH@ 22


INS IfStatement@@if (sourceType.isAssignableTo(targetType)) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:matches, TypeDescriptor sourceType, TypeDescriptor targetType,  @AT@ 22489 @LENGTH@ 67
---INS MethodInvocation@@sourceType.isAssignableTo(targetType) @TO@ IfStatement@@if (sourceType.isAssignableTo(targetType)) {  return false;} @AT@ 22493 @LENGTH@ 37
------INS SimpleName@@Name:sourceType @TO@ MethodInvocation@@sourceType.isAssignableTo(targetType) @AT@ 22493 @LENGTH@ 10
------INS SimpleName@@MethodName:isAssignableTo:[targetType] @TO@ MethodInvocation@@sourceType.isAssignableTo(targetType) @AT@ 22504 @LENGTH@ 26
---------INS SimpleName@@targetType @TO@ SimpleName@@MethodName:isAssignableTo:[targetType] @AT@ 22519 @LENGTH@ 10
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (sourceType.isAssignableTo(targetType)) {  return false;} @AT@ 22532 @LENGTH@ 24
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 22538 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 22545 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @TO@ TypeDeclaration@@[public]NimbusOAuth2TokenIntrospectionClientTests,  @AT@ 12123 @LENGTH@ 837
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12123 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12130 @LENGTH@ 4
---INS SimpleName@@MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12135 @LENGTH@ 67
---INS VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12209 @LENGTH@ 59
------INS SimpleType@@RestOperations @TO@ VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @AT@ 12209 @LENGTH@ 14
------INS VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @TO@ VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @AT@ 12224 @LENGTH@ 43
---------INS SimpleName@@restOperations @TO@ VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @AT@ 12224 @LENGTH@ 14
---------INS MethodInvocation@@mock(RestOperations.class) @TO@ VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @AT@ 12241 @LENGTH@ 26
------------INS SimpleName@@MethodName:mock:[RestOperations.class] @TO@ MethodInvocation@@mock(RestOperations.class) @AT@ 12241 @LENGTH@ 26
---------------INS TypeLiteral@@RestOperations.class @TO@ SimpleName@@MethodName:mock:[RestOperations.class] @AT@ 12246 @LENGTH@ 20
---INS VariableDeclarationStatement@@Converter<String,RequestEntity<?>> requestEntityConverter=mock(Converter.class); @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12271 @LENGTH@ 83
------INS ParameterizedType@@Converter<String,RequestEntity<?>> @TO@ VariableDeclarationStatement@@Converter<String,RequestEntity<?>> requestEntityConverter=mock(Converter.class); @AT@ 12271 @LENGTH@ 35
---------INS SimpleType@@Converter @TO@ ParameterizedType@@Converter<String,RequestEntity<?>> @AT@ 12271 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@Converter<String,RequestEntity<?>> @AT@ 12281 @LENGTH@ 6
---------INS ParameterizedType@@RequestEntity<?> @TO@ ParameterizedType@@Converter<String,RequestEntity<?>> @AT@ 12289 @LENGTH@ 16
------------INS SimpleType@@RequestEntity @TO@ ParameterizedType@@RequestEntity<?> @AT@ 12289 @LENGTH@ 13
------------INS WildcardType@@? @TO@ ParameterizedType@@RequestEntity<?> @AT@ 12303 @LENGTH@ 1
------INS VariableDeclarationFragment@@requestEntityConverter=mock(Converter.class) @TO@ VariableDeclarationStatement@@Converter<String,RequestEntity<?>> requestEntityConverter=mock(Converter.class); @AT@ 12307 @LENGTH@ 46
---------INS SimpleName@@requestEntityConverter @TO@ VariableDeclarationFragment@@requestEntityConverter=mock(Converter.class) @AT@ 12307 @LENGTH@ 22
---------INS MethodInvocation@@mock(Converter.class) @TO@ VariableDeclarationFragment@@requestEntityConverter=mock(Converter.class) @AT@ 12332 @LENGTH@ 21
------------INS SimpleName@@MethodName:mock:[Converter.class] @TO@ MethodInvocation@@mock(Converter.class) @AT@ 12332 @LENGTH@ 21
---------------INS TypeLiteral@@Converter.class @TO@ SimpleName@@MethodName:mock:[Converter.class] @AT@ 12337 @LENGTH@ 15
---INS VariableDeclarationStatement@@RequestEntity requestEntity=mock(RequestEntity.class); @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12357 @LENGTH@ 56
------INS SimpleType@@RequestEntity @TO@ VariableDeclarationStatement@@RequestEntity requestEntity=mock(RequestEntity.class); @AT@ 12357 @LENGTH@ 13
------INS VariableDeclarationFragment@@requestEntity=mock(RequestEntity.class) @TO@ VariableDeclarationStatement@@RequestEntity requestEntity=mock(RequestEntity.class); @AT@ 12371 @LENGTH@ 41
---------INS SimpleName@@requestEntity @TO@ VariableDeclarationFragment@@requestEntity=mock(RequestEntity.class) @AT@ 12371 @LENGTH@ 13
---------INS MethodInvocation@@mock(RequestEntity.class) @TO@ VariableDeclarationFragment@@requestEntity=mock(RequestEntity.class) @AT@ 12387 @LENGTH@ 25
------------INS SimpleName@@MethodName:mock:[RequestEntity.class] @TO@ MethodInvocation@@mock(RequestEntity.class) @AT@ 12387 @LENGTH@ 25
---------------INS TypeLiteral@@RequestEntity.class @TO@ SimpleName@@MethodName:mock:[RequestEntity.class] @AT@ 12392 @LENGTH@ 19
---INS VariableDeclarationStatement@@String tokenToIntrospect="some token"; @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12416 @LENGTH@ 40
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String tokenToIntrospect="some token"; @AT@ 12416 @LENGTH@ 6
------INS VariableDeclarationFragment@@tokenToIntrospect="some token" @TO@ VariableDeclarationStatement@@String tokenToIntrospect="some token"; @AT@ 12423 @LENGTH@ 32
---------INS SimpleName@@tokenToIntrospect @TO@ VariableDeclarationFragment@@tokenToIntrospect="some token" @AT@ 12423 @LENGTH@ 17
---------INS StringLiteral@@"some token" @TO@ VariableDeclarationFragment@@tokenToIntrospect="some token" @AT@ 12443 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:when(requestEntityConverter.convert(tokenToIntrospect)).thenReturn(requestEntity) @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12459 @LENGTH@ 82
------INS MethodInvocation@@when(requestEntityConverter.convert(tokenToIntrospect)).thenReturn(requestEntity) @TO@ ExpressionStatement@@MethodInvocation:when(requestEntityConverter.convert(tokenToIntrospect)).thenReturn(requestEntity) @AT@ 12459 @LENGTH@ 81
---------INS MethodInvocation@@MethodName:when:[requestEntityConverter.convert(tokenToIntrospect)] @TO@ MethodInvocation@@when(requestEntityConverter.convert(tokenToIntrospect)).thenReturn(requestEntity) @AT@ 12459 @LENGTH@ 55
------------INS MethodInvocation@@requestEntityConverter.convert(tokenToIntrospect) @TO@ MethodInvocation@@MethodName:when:[requestEntityConverter.convert(tokenToIntrospect)] @AT@ 12464 @LENGTH@ 49
---------------INS SimpleName@@Name:requestEntityConverter @TO@ MethodInvocation@@requestEntityConverter.convert(tokenToIntrospect) @AT@ 12464 @LENGTH@ 22
---------------INS SimpleName@@MethodName:convert:[tokenToIntrospect] @TO@ MethodInvocation@@requestEntityConverter.convert(tokenToIntrospect) @AT@ 12487 @LENGTH@ 26
------------------INS SimpleName@@tokenToIntrospect @TO@ SimpleName@@MethodName:convert:[tokenToIntrospect] @AT@ 12495 @LENGTH@ 17
---------INS SimpleName@@MethodName:thenReturn:[requestEntity] @TO@ MethodInvocation@@when(requestEntityConverter.convert(tokenToIntrospect)).thenReturn(requestEntity) @AT@ 12515 @LENGTH@ 25
------------INS SimpleName@@requestEntity @TO@ SimpleName@@MethodName:thenReturn:[requestEntity] @AT@ 12526 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:when(restOperations.exchange(requestEntity,String.class)).thenReturn(ACTIVE) @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12544 @LENGTH@ 78
------INS MethodInvocation@@when(restOperations.exchange(requestEntity,String.class)).thenReturn(ACTIVE) @TO@ ExpressionStatement@@MethodInvocation:when(restOperations.exchange(requestEntity,String.class)).thenReturn(ACTIVE) @AT@ 12544 @LENGTH@ 77
---------INS MethodInvocation@@MethodName:when:[restOperations.exchange(requestEntity,String.class)] @TO@ MethodInvocation@@when(restOperations.exchange(requestEntity,String.class)).thenReturn(ACTIVE) @AT@ 12544 @LENGTH@ 58
------------INS MethodInvocation@@restOperations.exchange(requestEntity,String.class) @TO@ MethodInvocation@@MethodName:when:[restOperations.exchange(requestEntity,String.class)] @AT@ 12549 @LENGTH@ 52
---------------INS SimpleName@@Name:restOperations @TO@ MethodInvocation@@restOperations.exchange(requestEntity,String.class) @AT@ 12549 @LENGTH@ 14
---------------INS SimpleName@@MethodName:exchange:[requestEntity, String.class] @TO@ MethodInvocation@@restOperations.exchange(requestEntity,String.class) @AT@ 12564 @LENGTH@ 37
------------------INS SimpleName@@requestEntity @TO@ SimpleName@@MethodName:exchange:[requestEntity, String.class] @AT@ 12573 @LENGTH@ 13
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:exchange:[requestEntity, String.class] @AT@ 12588 @LENGTH@ 12
---------INS SimpleName@@MethodName:thenReturn:[ACTIVE] @TO@ MethodInvocation@@when(restOperations.exchange(requestEntity,String.class)).thenReturn(ACTIVE) @AT@ 12603 @LENGTH@ 18
------------INS SimpleName@@ACTIVE @TO@ SimpleName@@MethodName:thenReturn:[ACTIVE] @AT@ 12614 @LENGTH@ 6
---INS VariableDeclarationStatement@@NimbusOAuth2TokenIntrospectionClient introspectionClient=new NimbusOAuth2TokenIntrospectionClient(INTROSPECTION_URL,restOperations); @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12625 @LENGTH@ 143
------INS SimpleType@@NimbusOAuth2TokenIntrospectionClient @TO@ VariableDeclarationStatement@@NimbusOAuth2TokenIntrospectionClient introspectionClient=new NimbusOAuth2TokenIntrospectionClient(INTROSPECTION_URL,restOperations); @AT@ 12625 @LENGTH@ 36
------INS VariableDeclarationFragment@@introspectionClient=new NimbusOAuth2TokenIntrospectionClient(INTROSPECTION_URL,restOperations) @TO@ VariableDeclarationStatement@@NimbusOAuth2TokenIntrospectionClient introspectionClient=new NimbusOAuth2TokenIntrospectionClient(INTROSPECTION_URL,restOperations); @AT@ 12662 @LENGTH@ 105
---------INS SimpleName@@introspectionClient @TO@ VariableDeclarationFragment@@introspectionClient=new NimbusOAuth2TokenIntrospectionClient(INTROSPECTION_URL,restOperations) @AT@ 12662 @LENGTH@ 19
---------INS ClassInstanceCreation@@NimbusOAuth2TokenIntrospectionClient[INTROSPECTION_URL, restOperations] @TO@ VariableDeclarationFragment@@introspectionClient=new NimbusOAuth2TokenIntrospectionClient(INTROSPECTION_URL,restOperations) @AT@ 12684 @LENGTH@ 83
------------INS New@@new @TO@ ClassInstanceCreation@@NimbusOAuth2TokenIntrospectionClient[INTROSPECTION_URL, restOperations] @AT@ 12684 @LENGTH@ 3
------------INS SimpleType@@NimbusOAuth2TokenIntrospectionClient @TO@ ClassInstanceCreation@@NimbusOAuth2TokenIntrospectionClient[INTROSPECTION_URL, restOperations] @AT@ 12688 @LENGTH@ 36
------------INS SimpleName@@INTROSPECTION_URL @TO@ ClassInstanceCreation@@NimbusOAuth2TokenIntrospectionClient[INTROSPECTION_URL, restOperations] @AT@ 12730 @LENGTH@ 17
------------INS SimpleName@@restOperations @TO@ ClassInstanceCreation@@NimbusOAuth2TokenIntrospectionClient[INTROSPECTION_URL, restOperations] @AT@ 12749 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:introspectionClient.setRequestEntityConverter(requestEntityConverter) @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12771 @LENGTH@ 70
------INS MethodInvocation@@introspectionClient.setRequestEntityConverter(requestEntityConverter) @TO@ ExpressionStatement@@MethodInvocation:introspectionClient.setRequestEntityConverter(requestEntityConverter) @AT@ 12771 @LENGTH@ 69
---------INS SimpleName@@Name:introspectionClient @TO@ MethodInvocation@@introspectionClient.setRequestEntityConverter(requestEntityConverter) @AT@ 12771 @LENGTH@ 19
---------INS SimpleName@@MethodName:setRequestEntityConverter:[requestEntityConverter] @TO@ MethodInvocation@@introspectionClient.setRequestEntityConverter(requestEntityConverter) @AT@ 12791 @LENGTH@ 49
------------INS SimpleName@@requestEntityConverter @TO@ SimpleName@@MethodName:setRequestEntityConverter:[requestEntityConverter] @AT@ 12817 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:introspectionClient.introspect(tokenToIntrospect) @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12845 @LENGTH@ 50
------INS MethodInvocation@@introspectionClient.introspect(tokenToIntrospect) @TO@ ExpressionStatement@@MethodInvocation:introspectionClient.introspect(tokenToIntrospect) @AT@ 12845 @LENGTH@ 49
---------INS SimpleName@@Name:introspectionClient @TO@ MethodInvocation@@introspectionClient.introspect(tokenToIntrospect) @AT@ 12845 @LENGTH@ 19
---------INS SimpleName@@MethodName:introspect:[tokenToIntrospect] @TO@ MethodInvocation@@introspectionClient.introspect(tokenToIntrospect) @AT@ 12865 @LENGTH@ 29
------------INS SimpleName@@tokenToIntrospect @TO@ SimpleName@@MethodName:introspect:[tokenToIntrospect] @AT@ 12876 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:verify(requestEntityConverter).convert(tokenToIntrospect) @TO@ MethodDeclaration@@public, void, MethodName:setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed,  @AT@ 12899 @LENGTH@ 58
------INS MethodInvocation@@verify(requestEntityConverter).convert(tokenToIntrospect) @TO@ ExpressionStatement@@MethodInvocation:verify(requestEntityConverter).convert(tokenToIntrospect) @AT@ 12899 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:verify:[requestEntityConverter] @TO@ MethodInvocation@@verify(requestEntityConverter).convert(tokenToIntrospect) @AT@ 12899 @LENGTH@ 30
------------INS SimpleName@@requestEntityConverter @TO@ MethodInvocation@@MethodName:verify:[requestEntityConverter] @AT@ 12906 @LENGTH@ 22
---------INS SimpleName@@MethodName:convert:[tokenToIntrospect] @TO@ MethodInvocation@@verify(requestEntityConverter).convert(tokenToIntrospect) @AT@ 12930 @LENGTH@ 26
------------INS SimpleName@@tokenToIntrospect @TO@ SimpleName@@MethodName:convert:[tokenToIntrospect] @AT@ 12938 @LENGTH@ 17


UPD IfStatement@@if (ObjectHelper.isNotEmpty(definition)) {  setProperty(camelContext,dataFormat,"definition",definition);} @TO@ if (ObjectHelper.isNotEmpty(definition.getDefinition())) {  setProperty(camelContext,dataFormat,"definition",definition.getDefinition());} @AT@ 1938 @LENGTH@ 129
---UPD MethodInvocation@@ObjectHelper.isNotEmpty(definition) @TO@ ObjectHelper.isNotEmpty(definition.getDefinition()) @AT@ 1942 @LENGTH@ 35
------UPD SimpleName@@MethodName:isNotEmpty:[definition] @TO@ MethodName:isNotEmpty:[definition.getDefinition()] @AT@ 1955 @LENGTH@ 22
---------INS MethodInvocation@@definition.getDefinition() @TO@ SimpleName@@MethodName:isNotEmpty:[definition] @AT@ 1966 @LENGTH@ 26
------------INS SimpleName@@Name:definition @TO@ MethodInvocation@@definition.getDefinition() @AT@ 1966 @LENGTH@ 10
------------INS SimpleName@@MethodName:getDefinition:[] @TO@ MethodInvocation@@definition.getDefinition() @AT@ 1977 @LENGTH@ 15
---------DEL SimpleName@@definition @AT@ 1966 @LENGTH@ 10
---UPD Block@@ThenBody:{  setProperty(camelContext,dataFormat,"definition",definition);} @TO@ ThenBody:{  setProperty(camelContext,dataFormat,"definition",definition.getDefinition());} @AT@ 1979 @LENGTH@ 88
------UPD ExpressionStatement@@MethodInvocation:setProperty(camelContext,dataFormat,"definition",definition) @TO@ MethodInvocation:setProperty(camelContext,dataFormat,"definition",definition.getDefinition()) @AT@ 1993 @LENGTH@ 64
---------UPD MethodInvocation@@setProperty(camelContext,dataFormat,"definition",definition) @TO@ setProperty(camelContext,dataFormat,"definition",definition.getDefinition()) @AT@ 1993 @LENGTH@ 63
------------UPD SimpleName@@MethodName:setProperty:[camelContext, dataFormat, "definition", definition] @TO@ MethodName:setProperty:[camelContext, dataFormat, "definition", definition.getDefinition()] @AT@ 1993 @LENGTH@ 63
---------------DEL SimpleName@@definition @AT@ 2045 @LENGTH@ 10
---------------INS MethodInvocation@@definition.getDefinition() @TO@ SimpleName@@MethodName:setProperty:[camelContext, dataFormat, "definition", definition] @AT@ 2061 @LENGTH@ 26
------------------INS SimpleName@@Name:definition @TO@ MethodInvocation@@definition.getDefinition() @AT@ 2061 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getDefinition:[] @TO@ MethodInvocation@@definition.getDefinition() @AT@ 2072 @LENGTH@ 15


UPD ExpressionStatement@@Assignment:iamClient=configuration.getIamClient() != null ? configuration.getIamClient() : createKMSClient() @TO@ Assignment:iamClient=configuration.getIamClient() != null ? configuration.getIamClient() : createIAMClient() @AT@ 2549 @LENGTH@ 100
---UPD Assignment@@iamClient=configuration.getIamClient() != null ? configuration.getIamClient() : createKMSClient() @TO@ iamClient=configuration.getIamClient() != null ? configuration.getIamClient() : createIAMClient() @AT@ 2549 @LENGTH@ 99
------UPD ConditionalExpression@@configuration.getIamClient() != null ? configuration.getIamClient() : createKMSClient() @TO@ configuration.getIamClient() != null ? configuration.getIamClient() : createIAMClient() @AT@ 2561 @LENGTH@ 87
---------UPD MethodInvocation@@MethodName:createKMSClient:[] @TO@ MethodName:createIAMClient:[] @AT@ 2631 @LENGTH@ 17


INS MethodDeclaration@@public, Mono<Void>, MethodName:myPojoMessageMethod, String input,  @TO@ TypeDeclaration@@Delegate,  @AT@ 9268 @LENGTH@ 83
---INS Modifier@@public @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:myPojoMessageMethod, String input,  @AT@ 9268 @LENGTH@ 6
---INS ParameterizedType@@Mono<Void> @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:myPojoMessageMethod, String input,  @AT@ 9275 @LENGTH@ 10
------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<Void> @AT@ 9275 @LENGTH@ 4
------INS SimpleType@@Void @TO@ ParameterizedType@@Mono<Void> @AT@ 9280 @LENGTH@ 4
---INS SimpleName@@MethodName:myPojoMessageMethod @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:myPojoMessageMethod, String input,  @AT@ 9286 @LENGTH@ 19
---INS SingleVariableDeclaration@@String input @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:myPojoMessageMethod, String input,  @AT@ 9306 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String input @AT@ 9306 @LENGTH@ 6
------INS SimpleName@@input @TO@ SingleVariableDeclaration@@String input @AT@ 9313 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:Mono.empty() @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:myPojoMessageMethod, String input,  @AT@ 9326 @LENGTH@ 20
------INS MethodInvocation@@Mono.empty() @TO@ ReturnStatement@@MethodInvocation:Mono.empty() @AT@ 9333 @LENGTH@ 12
---------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.empty() @AT@ 9333 @LENGTH@ 4
---------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Mono.empty() @AT@ 9338 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:applyWhenAdditionalParametersMissingThenOAuth2AuthorizationException,  @TO@ public, void, MethodName:applyWhenAttributesMissingThenOAuth2AuthorizationException,  @AT@ 4159 @LENGTH@ 524
---UPD SimpleName@@MethodName:applyWhenAdditionalParametersMissingThenOAuth2AuthorizationException @TO@ MethodName:applyWhenAttributesMissingThenOAuth2AuthorizationException @AT@ 4171 @LENGTH@ 68
---UPD ExpressionStatement@@MethodInvocation:this.authorizationRequest.additionalParameters(Collections.emptyMap()) @TO@ MethodInvocation:this.authorizationRequest.attributes(Collections.emptyMap()) @AT@ 4246 @LENGTH@ 71
------UPD MethodInvocation@@this.authorizationRequest.additionalParameters(Collections.emptyMap()) @TO@ this.authorizationRequest.attributes(Collections.emptyMap()) @AT@ 4246 @LENGTH@ 70
---------UPD SimpleName@@MethodName:additionalParameters:[Collections.emptyMap()] @TO@ MethodName:attributes:[Collections.emptyMap()] @AT@ 4272 @LENGTH@ 44


UPD CatchClause@@catch (InterruptedException ex) {} @TO@ catch (InterruptedException e) {  Thread.currentThread().interrupt();} @AT@ 3559 @LENGTH@ 47
---UPD SingleVariableDeclaration@@InterruptedException ex @TO@ InterruptedException e @AT@ 3566 @LENGTH@ 23
------UPD SimpleName@@ex @TO@ e @AT@ 3587 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:Thread.currentThread().interrupt() @TO@ CatchClause@@catch (InterruptedException ex) {} @AT@ 3608 @LENGTH@ 35
------INS MethodInvocation@@Thread.currentThread().interrupt() @TO@ ExpressionStatement@@MethodInvocation:Thread.currentThread().interrupt() @AT@ 3608 @LENGTH@ 34
---------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread().interrupt() @AT@ 3608 @LENGTH@ 22
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread().interrupt() @AT@ 3608 @LENGTH@ 6
---------INS SimpleName@@MethodName:interrupt:[] @TO@ MethodInvocation@@Thread.currentThread().interrupt() @AT@ 3631 @LENGTH@ 11


UPD SynchronizedStatement@@synchronized (this.consumersMonitor) {  SimpleConsumer consumer=this.inUseConsumerChannels.get(channelHolder.getChannel());  if (consumer != null) {    if (consumer.getEpoch() == channelHolder.getConsumerEpoch()) {      this.inUseConsumerChannels.remove(channelHolder.getChannel());      if (cancelConsumer) {        Assert.isTrue(message != null,"A 'message' is required when 'cancelConsumer' is 'true'");        consumer.cancelConsumer("Consumer " + this + " canceled due to "+ message);      }    }  }} @TO@ synchronized (this.consumersMonitor) {  SimpleConsumer consumer=this.inUseConsumerChannels.get(channelHolder.getChannel());  if (consumer != null && consumer.getEpoch() == channelHolder.getConsumerEpoch()) {    this.inUseConsumerChannels.remove(channelHolder.getChannel());    if (cancelConsumer) {      Assert.isTrue(message != null,"A 'message' is required when 'cancelConsumer' is 'true'");      consumer.cancelConsumer("Consumer " + this + " canceled due to "+ message);    }  }} @AT@ 6437 @LENGTH@ 518
---DEL Block@@SyncBody:{  SimpleConsumer consumer=this.inUseConsumerChannels.get(channelHolder.getChannel());  if (consumer != null) {    if (consumer.getEpoch() == channelHolder.getConsumerEpoch()) {      this.inUseConsumerChannels.remove(channelHolder.getChannel());      if (cancelConsumer) {        Assert.isTrue(message != null,"A 'message' is required when 'cancelConsumer' is 'true'");        consumer.cancelConsumer("Consumer " + this + " canceled due to "+ message);      }    }  }} @AT@ 6474 @LENGTH@ 481
------DEL IfStatement@@if (consumer != null) {  if (consumer.getEpoch() == channelHolder.getConsumerEpoch()) {    this.inUseConsumerChannels.remove(channelHolder.getChannel());    if (cancelConsumer) {      Assert.isTrue(message != null,"A 'message' is required when 'cancelConsumer' is 'true'");      consumer.cancelConsumer("Consumer " + this + " canceled due to "+ message);    }  }} @AT@ 6568 @LENGTH@ 383
---------DEL InfixExpression@@consumer != null @AT@ 6572 @LENGTH@ 16
------------DEL SimpleName@@consumer @AT@ 6572 @LENGTH@ 8
------------DEL Operator@@!= @AT@ 6580 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 6584 @LENGTH@ 4
---MOV Block@@ThenBody:{  if (consumer.getEpoch() == channelHolder.getConsumerEpoch()) {    this.inUseConsumerChannels.remove(channelHolder.getChannel());    if (cancelConsumer) {      Assert.isTrue(message != null,"A 'message' is required when 'cancelConsumer' is 'true'");      consumer.cancelConsumer("Consumer " + this + " canceled due to "+ message);    }  }} @TO@ SynchronizedStatement@@synchronized (this.consumersMonitor) {  SimpleConsumer consumer=this.inUseConsumerChannels.get(channelHolder.getChannel());  if (consumer != null) {    if (consumer.getEpoch() == channelHolder.getConsumerEpoch()) {      this.inUseConsumerChannels.remove(channelHolder.getChannel());      if (cancelConsumer) {        Assert.isTrue(message != null,"A 'message' is required when 'cancelConsumer' is 'true'");        consumer.cancelConsumer("Consumer " + this + " canceled due to "+ message);      }    }  }} @AT@ 6590 @LENGTH@ 361
------MOV VariableDeclarationStatement@@SimpleConsumer consumer=this.inUseConsumerChannels.get(channelHolder.getChannel()); @TO@ Block@@ThenBody:{  if (consumer.getEpoch() == channelHolder.getConsumerEpoch()) {    this.inUseConsumerChannels.remove(channelHolder.getChannel());    if (cancelConsumer) {      Assert.isTrue(message != null,"A 'message' is required when 'cancelConsumer' is 'true'");      consumer.cancelConsumer("Consumer " + this + " canceled due to "+ message);    }  }} @AT@ 6479 @LENGTH@ 85
------UPD IfStatement@@if (consumer.getEpoch() == channelHolder.getConsumerEpoch()) {  this.inUseConsumerChannels.remove(channelHolder.getChannel());  if (cancelConsumer) {    Assert.isTrue(message != null,"A 'message' is required when 'cancelConsumer' is 'true'");    consumer.cancelConsumer("Consumer " + this + " canceled due to "+ message);  }} @TO@ if (consumer != null && consumer.getEpoch() == channelHolder.getConsumerEpoch()) {  this.inUseConsumerChannels.remove(channelHolder.getChannel());  if (cancelConsumer) {    Assert.isTrue(message != null,"A 'message' is required when 'cancelConsumer' is 'true'");    consumer.cancelConsumer("Consumer " + this + " canceled due to "+ message);  }} @AT@ 6596 @LENGTH@ 350
---------INS InfixExpression@@consumer != null && consumer.getEpoch() == channelHolder.getConsumerEpoch() @TO@ IfStatement@@if (consumer.getEpoch() == channelHolder.getConsumerEpoch()) {  this.inUseConsumerChannels.remove(channelHolder.getChannel());  if (cancelConsumer) {    Assert.isTrue(message != null,"A 'message' is required when 'cancelConsumer' is 'true'");    consumer.cancelConsumer("Consumer " + this + " canceled due to "+ message);  }} @AT@ 6572 @LENGTH@ 75
------------INS InfixExpression@@consumer != null @TO@ InfixExpression@@consumer != null && consumer.getEpoch() == channelHolder.getConsumerEpoch() @AT@ 6572 @LENGTH@ 16
---------------INS SimpleName@@consumer @TO@ InfixExpression@@consumer != null @AT@ 6572 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@consumer != null @AT@ 6580 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@consumer != null @AT@ 6584 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@consumer != null && consumer.getEpoch() == channelHolder.getConsumerEpoch() @AT@ 6588 @LENGTH@ 2
------------MOV InfixExpression@@consumer.getEpoch() == channelHolder.getConsumerEpoch() @TO@ InfixExpression@@consumer != null && consumer.getEpoch() == channelHolder.getConsumerEpoch() @AT@ 6600 @LENGTH@ 55


UPD ExpressionStatement@@MethodInvocation:approveAccessTokenGrant("http://anywhere",true) @TO@ MethodInvocation:approveAccessTokenGrant("http://anywhere?key=value",true) @AT@ 1337 @LENGTH@ 49
---UPD MethodInvocation@@approveAccessTokenGrant("http://anywhere",true) @TO@ approveAccessTokenGrant("http://anywhere?key=value",true) @AT@ 1337 @LENGTH@ 48
------UPD SimpleName@@MethodName:approveAccessTokenGrant:["http://anywhere", true] @TO@ MethodName:approveAccessTokenGrant:["http://anywhere?key=value", true] @AT@ 1337 @LENGTH@ 48
---------UPD StringLiteral@@"http://anywhere" @TO@ "http://anywhere?key=value" @AT@ 1361 @LENGTH@ 17


UPD MethodDeclaration@@private, Object, MethodName:convertLongStringIfNecessary, Object value, String charset,  @TO@ private, Object, MethodName:convertLongStringIfNecessary, Object valueArg, String charset,  @AT@ 9107 @LENGTH@ 885
---UPD SingleVariableDeclaration@@Object value @TO@ Object valueArg @AT@ 9151 @LENGTH@ 12
------UPD SimpleName@@value @TO@ valueArg @AT@ 9158 @LENGTH@ 5
---INS VariableDeclarationStatement@@Object value=valueArg; @TO@ MethodDeclaration@@private, Object, MethodName:convertLongStringIfNecessary, Object value, String charset,  @AT@ 9280 @LENGTH@ 24
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value=valueArg; @AT@ 9280 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=valueArg @TO@ VariableDeclarationStatement@@Object value=valueArg; @AT@ 9287 @LENGTH@ 16
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=valueArg @AT@ 9287 @LENGTH@ 5
---------INS SimpleName@@valueArg @TO@ VariableDeclarationFragment@@value=valueArg @AT@ 9295 @LENGTH@ 8


UPD MethodDeclaration@@public, RabbitTemplate, MethodName:getRabbitTemplateTemplate,  @TO@ public, RabbitTemplate, MethodName:getRabbitTemplate,  @AT@ 13701 @LENGTH@ 78
---UPD SimpleName@@MethodName:getRabbitTemplateTemplate @TO@ MethodName:getRabbitTemplate @AT@ 13723 @LENGTH@ 25


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1083 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1083 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1090 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1098 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1128 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1135 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:shouldWriteReadObjectWithConstructorConversion,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MappingRedisConverterUnitTests,  @AT@ 50008 @LENGTH@ 331
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteReadObjectWithConstructorConversion,  @AT@ 50008 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteReadObjectWithConstructorConversion,  @AT@ 50015 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldWriteReadObjectWithConstructorConversion @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteReadObjectWithConstructorConversion,  @AT@ 50020 @LENGTH@ 46
---INS VariableDeclarationStatement@@Device sample=new Device(Instant.now(),Collections.singleton("foo")); @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteReadObjectWithConstructorConversion,  @AT@ 50074 @LENGTH@ 72
------INS SimpleType@@Device @TO@ VariableDeclarationStatement@@Device sample=new Device(Instant.now(),Collections.singleton("foo")); @AT@ 50074 @LENGTH@ 6
------INS VariableDeclarationFragment@@sample=new Device(Instant.now(),Collections.singleton("foo")) @TO@ VariableDeclarationStatement@@Device sample=new Device(Instant.now(),Collections.singleton("foo")); @AT@ 50081 @LENGTH@ 64
---------INS SimpleName@@sample @TO@ VariableDeclarationFragment@@sample=new Device(Instant.now(),Collections.singleton("foo")) @AT@ 50081 @LENGTH@ 6
---------INS ClassInstanceCreation@@Device[Instant.now(), Collections.singleton("foo")] @TO@ VariableDeclarationFragment@@sample=new Device(Instant.now(),Collections.singleton("foo")) @AT@ 50090 @LENGTH@ 55
------------INS New@@new @TO@ ClassInstanceCreation@@Device[Instant.now(), Collections.singleton("foo")] @AT@ 50090 @LENGTH@ 3
------------INS SimpleType@@Device @TO@ ClassInstanceCreation@@Device[Instant.now(), Collections.singleton("foo")] @AT@ 50094 @LENGTH@ 6
------------INS MethodInvocation@@Instant.now() @TO@ ClassInstanceCreation@@Device[Instant.now(), Collections.singleton("foo")] @AT@ 50101 @LENGTH@ 13
---------------INS SimpleName@@Name:Instant @TO@ MethodInvocation@@Instant.now() @AT@ 50101 @LENGTH@ 7
---------------INS SimpleName@@MethodName:now:[] @TO@ MethodInvocation@@Instant.now() @AT@ 50109 @LENGTH@ 5
------------INS MethodInvocation@@Collections.singleton("foo") @TO@ ClassInstanceCreation@@Device[Instant.now(), Collections.singleton("foo")] @AT@ 50116 @LENGTH@ 28
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton("foo") @AT@ 50116 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singleton:["foo"] @TO@ MethodInvocation@@Collections.singleton("foo") @AT@ 50128 @LENGTH@ 16
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:singleton:["foo"] @AT@ 50138 @LENGTH@ 5
---INS VariableDeclarationStatement@@RedisData rd=write(sample); @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteReadObjectWithConstructorConversion,  @AT@ 50150 @LENGTH@ 29
------INS SimpleType@@RedisData @TO@ VariableDeclarationStatement@@RedisData rd=write(sample); @AT@ 50150 @LENGTH@ 9
------INS VariableDeclarationFragment@@rd=write(sample) @TO@ VariableDeclarationStatement@@RedisData rd=write(sample); @AT@ 50160 @LENGTH@ 18
---------INS SimpleName@@rd @TO@ VariableDeclarationFragment@@rd=write(sample) @AT@ 50160 @LENGTH@ 2
---------INS MethodInvocation@@write(sample) @TO@ VariableDeclarationFragment@@rd=write(sample) @AT@ 50165 @LENGTH@ 13
------------INS SimpleName@@MethodName:write:[sample] @TO@ MethodInvocation@@write(sample) @AT@ 50165 @LENGTH@ 13
---------------INS SimpleName@@sample @TO@ SimpleName@@MethodName:write:[sample] @AT@ 50171 @LENGTH@ 6
---INS VariableDeclarationStatement@@Device result=converter.read(Device.class,rd); @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteReadObjectWithConstructorConversion,  @AT@ 50183 @LENGTH@ 49
------INS SimpleType@@Device @TO@ VariableDeclarationStatement@@Device result=converter.read(Device.class,rd); @AT@ 50183 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=converter.read(Device.class,rd) @TO@ VariableDeclarationStatement@@Device result=converter.read(Device.class,rd); @AT@ 50190 @LENGTH@ 41
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=converter.read(Device.class,rd) @AT@ 50190 @LENGTH@ 6
---------INS MethodInvocation@@converter.read(Device.class,rd) @TO@ VariableDeclarationFragment@@result=converter.read(Device.class,rd) @AT@ 50199 @LENGTH@ 32
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.read(Device.class,rd) @AT@ 50199 @LENGTH@ 9
------------INS SimpleName@@MethodName:read:[Device.class, rd] @TO@ MethodInvocation@@converter.read(Device.class,rd) @AT@ 50209 @LENGTH@ 22
---------------INS TypeLiteral@@Device.class @TO@ SimpleName@@MethodName:read:[Device.class, rd] @AT@ 50214 @LENGTH@ 12
---------------INS SimpleName@@rd @TO@ SimpleName@@MethodName:read:[Device.class, rd] @AT@ 50228 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(result.now,equalTo(sample.now)) @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteReadObjectWithConstructorConversion,  @AT@ 50235 @LENGTH@ 44
------INS MethodInvocation@@assertThat(result.now,equalTo(sample.now)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.now,equalTo(sample.now)) @AT@ 50235 @LENGTH@ 43
---------INS SimpleName@@MethodName:assertThat:[result.now, equalTo(sample.now)] @TO@ MethodInvocation@@assertThat(result.now,equalTo(sample.now)) @AT@ 50235 @LENGTH@ 43
------------INS QualifiedName@@result.now @TO@ SimpleName@@MethodName:assertThat:[result.now, equalTo(sample.now)] @AT@ 50246 @LENGTH@ 10
---------------INS SimpleName@@result @TO@ QualifiedName@@result.now @AT@ 50246 @LENGTH@ 6
---------------INS SimpleName@@now @TO@ QualifiedName@@result.now @AT@ 50253 @LENGTH@ 3
------------INS MethodInvocation@@equalTo(sample.now) @TO@ SimpleName@@MethodName:assertThat:[result.now, equalTo(sample.now)] @AT@ 50258 @LENGTH@ 19
---------------INS SimpleName@@MethodName:equalTo:[sample.now] @TO@ MethodInvocation@@equalTo(sample.now) @AT@ 50258 @LENGTH@ 19
------------------INS QualifiedName@@sample.now @TO@ SimpleName@@MethodName:equalTo:[sample.now] @AT@ 50266 @LENGTH@ 10
---------------------INS SimpleName@@sample @TO@ QualifiedName@@sample.now @AT@ 50266 @LENGTH@ 6
---------------------INS SimpleName@@now @TO@ QualifiedName@@sample.now @AT@ 50273 @LENGTH@ 3
---------------INS SimpleName@@MethodName:equalTo:[sample.now] @TO@ MethodInvocation@@equalTo(sample.now) @AT@ 50258 @LENGTH@ 19
------------------INS QualifiedName@@sample.now @TO@ SimpleName@@MethodName:equalTo:[sample.now] @AT@ 50266 @LENGTH@ 10
---------------------INS SimpleName@@sample @TO@ QualifiedName@@sample.now @AT@ 50266 @LENGTH@ 6
---------------------INS SimpleName@@now @TO@ QualifiedName@@sample.now @AT@ 50273 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(result.profiles,equalTo(sample.profiles)) @TO@ MethodDeclaration@@public, void, MethodName:shouldWriteReadObjectWithConstructorConversion,  @AT@ 50282 @LENGTH@ 54
------INS MethodInvocation@@assertThat(result.profiles,equalTo(sample.profiles)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.profiles,equalTo(sample.profiles)) @AT@ 50282 @LENGTH@ 53
---------INS SimpleName@@MethodName:assertThat:[result.profiles, equalTo(sample.profiles)] @TO@ MethodInvocation@@assertThat(result.profiles,equalTo(sample.profiles)) @AT@ 50282 @LENGTH@ 53
------------INS QualifiedName@@result.profiles @TO@ SimpleName@@MethodName:assertThat:[result.profiles, equalTo(sample.profiles)] @AT@ 50293 @LENGTH@ 15
---------------INS SimpleName@@result @TO@ QualifiedName@@result.profiles @AT@ 50293 @LENGTH@ 6
---------------INS SimpleName@@profiles @TO@ QualifiedName@@result.profiles @AT@ 50300 @LENGTH@ 8
------------INS MethodInvocation@@equalTo(sample.profiles) @TO@ SimpleName@@MethodName:assertThat:[result.profiles, equalTo(sample.profiles)] @AT@ 50310 @LENGTH@ 24
---------------INS SimpleName@@MethodName:equalTo:[sample.profiles] @TO@ MethodInvocation@@equalTo(sample.profiles) @AT@ 50310 @LENGTH@ 24
------------------INS QualifiedName@@sample.profiles @TO@ SimpleName@@MethodName:equalTo:[sample.profiles] @AT@ 50318 @LENGTH@ 15
---------------------INS SimpleName@@sample @TO@ QualifiedName@@sample.profiles @AT@ 50318 @LENGTH@ 6
---------------------INS SimpleName@@profiles @TO@ QualifiedName@@sample.profiles @AT@ 50325 @LENGTH@ 8
---------------INS SimpleName@@MethodName:equalTo:[sample.profiles] @TO@ MethodInvocation@@equalTo(sample.profiles) @AT@ 50310 @LENGTH@ 24
------------------INS QualifiedName@@sample.profiles @TO@ SimpleName@@MethodName:equalTo:[sample.profiles] @AT@ 50318 @LENGTH@ 15
---------------------INS SimpleName@@sample @TO@ QualifiedName@@sample.profiles @AT@ 50318 @LENGTH@ 6
---------------------INS SimpleName@@profiles @TO@ QualifiedName@@sample.profiles @AT@ 50325 @LENGTH@ 8


UPD VariableDeclarationStatement@@Matcher matcher=pattern.matcher(path); @TO@ Matcher matcher=PATTERN.matcher(path); @AT@ 1219 @LENGTH@ 40
---UPD VariableDeclarationFragment@@matcher=pattern.matcher(path) @TO@ matcher=PATTERN.matcher(path) @AT@ 1227 @LENGTH@ 31
------UPD MethodInvocation@@pattern.matcher(path) @TO@ PATTERN.matcher(path) @AT@ 1237 @LENGTH@ 21
---------UPD SimpleName@@Name:pattern @TO@ Name:PATTERN @AT@ 1237 @LENGTH@ 7


UPD TypeDeclaration@@[public]ConsumerCreationStrategyFactory,  @TO@ [public, final]ConsumerCreationStrategyFactory,  @AT@ 922 @LENGTH@ 1253
---INS Modifier@@final @TO@ TypeDeclaration@@[public]ConsumerCreationStrategyFactory,  @AT@ 928 @LENGTH@ 5


UPD VariableDeclarationStatement@@Class<?> type=ClassUtils.getUserClass(beanType); @TO@ Class<?> type=ProxyUtils.getUserClass(beanType); @AT@ 7057 @LENGTH@ 50
---UPD VariableDeclarationFragment@@type=ClassUtils.getUserClass(beanType) @TO@ type=ProxyUtils.getUserClass(beanType) @AT@ 7066 @LENGTH@ 40
------UPD MethodInvocation@@ClassUtils.getUserClass(beanType) @TO@ ProxyUtils.getUserClass(beanType) @AT@ 7073 @LENGTH@ 33
---------UPD SimpleName@@Name:ClassUtils @TO@ Name:ProxyUtils @AT@ 7073 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:kmsListKeysTest, Exception,  @TO@ public, void, MethodName:mskListKeysTest, Exception,  @AT@ 1634 @LENGTH@ 678
---UPD SimpleName@@MethodName:kmsListKeysTest @TO@ MethodName:mskListKeysTest @AT@ 1646 @LENGTH@ 15


UPD VariableDeclarationStatement@@ConfigurableApplicationContext context=new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false"); @TO@ ConfigurableApplicationContext context=new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false","--spring.main.allow-bean-definition-overriding=true"); @AT@ 2684 @LENGTH@ 736
---UPD VariableDeclarationFragment@@context=new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false") @TO@ context=new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false","--spring.main.allow-bean-definition-overriding=true") @AT@ 2715 @LENGTH@ 704
------UPD MethodInvocation@@new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false") @TO@ new SpringApplicationBuilder(TestConfiguration.class).web(WebApplicationType.NONE).run("--debug=false","--spring.main.banner-mode=OFF","--spring.application.name=" + UUID.randomUUID().toString(),"--ribbon.enabled=false","--ribbon.eureka.enabled=false","--management.endpoint.enabled=false","--spring.cloud.consul.enabled=true","--spring.cloud.consul.config.enabled=false","--spring.cloud.consul.discovery.enabled=true","--spring.cloud.service-registry.auto-registration.enabled=false","--spring.main.allow-bean-definition-overriding=true") @AT@ 2725 @LENGTH@ 694
---------UPD SimpleName@@MethodName:run:["--debug=false", "--spring.main.banner-mode=OFF", "--spring.application.name=" + UUID.randomUUID().toString(), "--ribbon.enabled=false", "--ribbon.eureka.enabled=false", "--management.endpoint.enabled=false", "--spring.cloud.consul.enabled=true", "--spring.cloud.consul.config.enabled=false", "--spring.cloud.consul.discovery.enabled=true", "--spring.cloud.service-registry.auto-registration.enabled=false"] @TO@ MethodName:run:["--debug=false", "--spring.main.banner-mode=OFF", "--spring.application.name=" + UUID.randomUUID().toString(), "--ribbon.enabled=false", "--ribbon.eureka.enabled=false", "--management.endpoint.enabled=false", "--spring.cloud.consul.enabled=true", "--spring.cloud.consul.config.enabled=false", "--spring.cloud.consul.discovery.enabled=true", "--spring.cloud.service-registry.auto-registration.enabled=false", "--spring.main.allow-bean-definition-overriding=true"] @AT@ 2834 @LENGTH@ 585
------------INS StringLiteral@@"--spring.main.allow-bean-definition-overriding=true" @TO@ SimpleName@@MethodName:run:["--debug=false", "--spring.main.banner-mode=OFF", "--spring.application.name=" + UUID.randomUUID().toString(), "--ribbon.enabled=false", "--ribbon.eureka.enabled=false", "--management.endpoint.enabled=false", "--spring.cloud.consul.enabled=true", "--spring.cloud.consul.config.enabled=false", "--spring.cloud.consul.discovery.enabled=true", "--spring.cloud.service-registry.auto-registration.enabled=false"] @AT@ 3672 @LENGTH@ 53


UPD ExpressionStatement@@Assignment:pattern=pattern.replaceFirst("\\$simple\\{file:name.noext\\}",FileUtil.stripExt(onlyName)) @TO@ Assignment:pattern=pattern.replaceFirst("\\$simple\\{file:name.noext\\}",FileUtil.stripExt(onlyName,true)) @AT@ 60048 @LENGTH@ 94
---UPD Assignment@@pattern=pattern.replaceFirst("\\$simple\\{file:name.noext\\}",FileUtil.stripExt(onlyName)) @TO@ pattern=pattern.replaceFirst("\\$simple\\{file:name.noext\\}",FileUtil.stripExt(onlyName,true)) @AT@ 60048 @LENGTH@ 93
------UPD MethodInvocation@@pattern.replaceFirst("\\$simple\\{file:name.noext\\}",FileUtil.stripExt(onlyName)) @TO@ pattern.replaceFirst("\\$simple\\{file:name.noext\\}",FileUtil.stripExt(onlyName,true)) @AT@ 60058 @LENGTH@ 83
---------UPD SimpleName@@MethodName:replaceFirst:["\\$simple\\{file:name.noext\\}", FileUtil.stripExt(onlyName)] @TO@ MethodName:replaceFirst:["\\$simple\\{file:name.noext\\}", FileUtil.stripExt(onlyName,true)] @AT@ 60066 @LENGTH@ 75
------------UPD MethodInvocation@@FileUtil.stripExt(onlyName) @TO@ FileUtil.stripExt(onlyName,true) @AT@ 60113 @LENGTH@ 27
---------------UPD SimpleName@@MethodName:stripExt:[onlyName] @TO@ MethodName:stripExt:[onlyName, true] @AT@ 60122 @LENGTH@ 18
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:stripExt:[onlyName] @AT@ 60147 @LENGTH@ 4


UPD IfStatement@@if (table != null) {  List<String> colNames=MetaStoreUtils.getColumnNamesForTable(table);  List<String> partNames=rawStore.listPartitionNames(catName,dbName,tblName,(short)-1);  Deadline.startTimer("getPartitionColumnStatistics");  List<ColumnStatistics> partitionColStats=rawStore.getPartitionColumnStatistics(catName,dbName,tblName,partNames,colNames);  Deadline.stopTimer();  sharedCache.refreshPartitionColStatsInCache(catName,dbName,tblName,partitionColStats);  Deadline.startTimer("getPartitionsByNames");  List<Partition> parts=rawStore.getPartitionsByNames(catName,dbName,tblName,partNames);  Deadline.stopTimer();  for (  Partition part : parts) {    sharedCache.alterPartitionInCache(catName,dbName,tblName,part.getValues(),part);  }} @TO@ if (table != null) {  List<String> colNames=MetaStoreUtils.getColumnNamesForTable(table);  List<String> partNames=rawStore.listPartitionNames(catName,dbName,tblName,(short)-1);  Deadline.startTimer("getPartitionColumnStatistics");  List<ColumnStatistics> partitionColStats=rawStore.getPartitionColumnStatistics(catName,dbName,tblName,partNames,colNames);  Deadline.stopTimer();  sharedCache.refreshPartitionColStatsInCache(catName,dbName,tblName,partitionColStats);  List<Partition> parts=rawStore.getPartitionsByNames(catName,dbName,tblName,partNames);  for (  Partition part : parts) {    sharedCache.alterPartitionInCache(catName,dbName,tblName,part.getValues(),part);  }} @AT@ 39498 @LENGTH@ 1038
---UPD Block@@ThenBody:{  List<String> colNames=MetaStoreUtils.getColumnNamesForTable(table);  List<String> partNames=rawStore.listPartitionNames(catName,dbName,tblName,(short)-1);  Deadline.startTimer("getPartitionColumnStatistics");  List<ColumnStatistics> partitionColStats=rawStore.getPartitionColumnStatistics(catName,dbName,tblName,partNames,colNames);  Deadline.stopTimer();  sharedCache.refreshPartitionColStatsInCache(catName,dbName,tblName,partitionColStats);  Deadline.startTimer("getPartitionsByNames");  List<Partition> parts=rawStore.getPartitionsByNames(catName,dbName,tblName,partNames);  Deadline.stopTimer();  for (  Partition part : parts) {    sharedCache.alterPartitionInCache(catName,dbName,tblName,part.getValues(),part);  }} @TO@ ThenBody:{  List<String> colNames=MetaStoreUtils.getColumnNamesForTable(table);  List<String> partNames=rawStore.listPartitionNames(catName,dbName,tblName,(short)-1);  Deadline.startTimer("getPartitionColumnStatistics");  List<ColumnStatistics> partitionColStats=rawStore.getPartitionColumnStatistics(catName,dbName,tblName,partNames,colNames);  Deadline.stopTimer();  sharedCache.refreshPartitionColStatsInCache(catName,dbName,tblName,partitionColStats);  List<Partition> parts=rawStore.getPartitionsByNames(catName,dbName,tblName,partNames);  for (  Partition part : parts) {    sharedCache.alterPartitionInCache(catName,dbName,tblName,part.getValues(),part);  }} @AT@ 39517 @LENGTH@ 1019
------DEL ExpressionStatement@@MethodInvocation:Deadline.startTimer("getPartitionsByNames") @AT@ 40118 @LENGTH@ 44
---------DEL MethodInvocation@@Deadline.startTimer("getPartitionsByNames") @AT@ 40118 @LENGTH@ 43
------------DEL SimpleName@@Name:Deadline @AT@ 40118 @LENGTH@ 8
------------DEL SimpleName@@MethodName:startTimer:["getPartitionsByNames"] @AT@ 40127 @LENGTH@ 34
---------------DEL StringLiteral@@"getPartitionsByNames" @AT@ 40138 @LENGTH@ 22
------DEL ExpressionStatement@@MethodInvocation:Deadline.stopTimer() @AT@ 40275 @LENGTH@ 21
---------DEL MethodInvocation@@Deadline.stopTimer() @AT@ 40275 @LENGTH@ 20
------------DEL SimpleName@@Name:Deadline @AT@ 40275 @LENGTH@ 8
------------DEL SimpleName@@MethodName:stopTimer:[] @AT@ 40284 @LENGTH@ 11


INS MethodDeclaration@@private, voidMethodName:PredicateBuilder,  @TO@ TypeDeclaration@@[public]PredicateBuilder,  @AT@ 1328 @LENGTH@ 34
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:PredicateBuilder,  @AT@ 1328 @LENGTH@ 7
---INS SimpleName@@MethodName:PredicateBuilder @TO@ MethodDeclaration@@private, voidMethodName:PredicateBuilder,  @AT@ 1336 @LENGTH@ 16


DEL IfStatement@@if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {  return new JaxWsClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} else {  return new ClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} @AT@ 14805 @LENGTH@ 544
---DEL MethodInvocation@@CxfEndpointUtils.hasWebServiceAnnotation(cls) @AT@ 14809 @LENGTH@ 45
------DEL SimpleName@@Name:CxfEndpointUtils @AT@ 14809 @LENGTH@ 16
------DEL SimpleName@@MethodName:hasWebServiceAnnotation:[cls] @AT@ 14826 @LENGTH@ 28
---------DEL SimpleName@@cls @AT@ 14850 @LENGTH@ 3
---DEL Block@@ThenBody:{  return new JaxWsClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} @AT@ 14856 @LENGTH@ 246
------DEL ReturnStatement@@ClassInstanceCreation:new JaxWsClientFactoryBean(){
  @Override protected Client createClient(  Endpoint ep){
    return new CamelCxfClientImpl(getBus(),ep);
  }
}
 @AT@ 14870 @LENGTH@ 222
---------DEL ClassInstanceCreation@@JaxWsClientFactoryBean[] @AT@ 14877 @LENGTH@ 214
------------DEL New@@new @AT@ 14877 @LENGTH@ 3
------------DEL SimpleType@@JaxWsClientFactoryBean @AT@ 14881 @LENGTH@ 22
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 14906 @LENGTH@ 185
---DEL Block@@ElseBody:{  return new ClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} @AT@ 15108 @LENGTH@ 241
------DEL ReturnStatement@@ClassInstanceCreation:new ClientFactoryBean(){
  @Override protected Client createClient(  Endpoint ep){
    return new CamelCxfClientImpl(getBus(),ep);
  }
}
 @AT@ 15122 @LENGTH@ 217
---------DEL ClassInstanceCreation@@ClientFactoryBean[] @AT@ 15129 @LENGTH@ 209
------------DEL New@@new @AT@ 15129 @LENGTH@ 3
------------DEL SimpleType@@ClientFactoryBean @AT@ 15133 @LENGTH@ 17
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 15153 @LENGTH@ 185
---------------DEL MethodDeclaration@@protected, Client, MethodName:createClient, Endpoint ep,  @AT@ 15197 @LENGTH@ 127
------------------DEL Modifier@@protected @AT@ 15197 @LENGTH@ 9
------------------DEL SimpleType@@Client @AT@ 15207 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:createClient @AT@ 15214 @LENGTH@ 12
------------------DEL SingleVariableDeclaration@@Endpoint ep @AT@ 15227 @LENGTH@ 11
---------------------DEL SimpleType@@Endpoint @AT@ 15227 @LENGTH@ 8
---------------------DEL SimpleName@@ep @AT@ 15236 @LENGTH@ 2
------------------DEL ReturnStatement@@ClassInstanceCreation:new CamelCxfClientImpl(getBus(),ep) @AT@ 15262 @LENGTH@ 44
---------------------DEL ClassInstanceCreation@@CamelCxfClientImpl[getBus(), ep] @AT@ 15269 @LENGTH@ 36
------------------------DEL New@@new @AT@ 15269 @LENGTH@ 3
------------------------DEL SimpleType@@CamelCxfClientImpl @AT@ 15273 @LENGTH@ 18
------------------------DEL MethodInvocation@@MethodName:getBus:[] @AT@ 15292 @LENGTH@ 8
------------------------DEL SimpleName@@ep @AT@ 15302 @LENGTH@ 2


UPD MethodDeclaration@@protected, RabbitTemplate, MethodName:getRabbitTemplateTemplate,  @TO@ public, RabbitTemplate, MethodName:getRabbitTemplateTemplate,  @AT@ 13701 @LENGTH@ 81
---UPD Modifier@@protected @TO@ public @AT@ 13701 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:shouldCreateStoredProcedureAttributesFromProcedureMethodWithExplictProcedureNameAliasAndOutputParameterName,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]StoredProcedureAttributeSourceUnitTests,  @AT@ 3988 @LENGTH@ 489
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldCreateStoredProcedureAttributesFromProcedureMethodWithExplictProcedureNameAliasAndOutputParameterName,  @AT@ 3988 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldCreateStoredProcedureAttributesFromProcedureMethodWithExplictProcedureNameAliasAndOutputParameterName,  @AT@ 3995 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldCreateStoredProcedureAttributesFromProcedureMethodWithExplictProcedureNameAliasAndOutputParameterName @TO@ MethodDeclaration@@public, void, MethodName:shouldCreateStoredProcedureAttributesFromProcedureMethodWithExplictProcedureNameAliasAndOutputParameterName,  @AT@ 4000 @LENGTH@ 107
---INS VariableDeclarationStatement@@StoredProcedureAttributes attr=creator.createFrom(method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class),entityMetadata); @TO@ MethodDeclaration@@public, void, MethodName:shouldCreateStoredProcedureAttributesFromProcedureMethodWithExplictProcedureNameAliasAndOutputParameterName,  @AT@ 4115 @LENGTH@ 161
------INS SimpleType@@StoredProcedureAttributes @TO@ VariableDeclarationStatement@@StoredProcedureAttributes attr=creator.createFrom(method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class),entityMetadata); @AT@ 4115 @LENGTH@ 25
------INS VariableDeclarationFragment@@attr=creator.createFrom(method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class),entityMetadata) @TO@ VariableDeclarationStatement@@StoredProcedureAttributes attr=creator.createFrom(method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class),entityMetadata); @AT@ 4141 @LENGTH@ 134
---------INS SimpleName@@attr @TO@ VariableDeclarationFragment@@attr=creator.createFrom(method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class),entityMetadata) @AT@ 4141 @LENGTH@ 4
---------INS MethodInvocation@@creator.createFrom(method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class),entityMetadata) @TO@ VariableDeclarationFragment@@attr=creator.createFrom(method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class),entityMetadata) @AT@ 4148 @LENGTH@ 127
------------INS SimpleName@@Name:creator @TO@ MethodInvocation@@creator.createFrom(method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class),entityMetadata) @AT@ 4148 @LENGTH@ 7
------------INS SimpleName@@MethodName:createFrom:[method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class), entityMetadata] @TO@ MethodInvocation@@creator.createFrom(method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class),entityMetadata) @AT@ 4161 @LENGTH@ 114
---------------INS MethodInvocation@@method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class) @TO@ SimpleName@@MethodName:createFrom:[method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class), entityMetadata] @AT@ 4172 @LENGTH@ 86
------------------INS SimpleName@@MethodName:method:["explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName", Integer.class] @TO@ MethodInvocation@@method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class) @AT@ 4172 @LENGTH@ 86
---------------------INS StringLiteral@@"explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName" @TO@ SimpleName@@MethodName:method:["explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName", Integer.class] @AT@ 4179 @LENGTH@ 63
---------------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:method:["explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName", Integer.class] @AT@ 4244 @LENGTH@ 13
---------------INS SimpleName@@entityMetadata @TO@ SimpleName@@MethodName:createFrom:[method("explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName",Integer.class), entityMetadata] @AT@ 4260 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(attr.getProcedureName(),is("plus1inout")) @TO@ MethodDeclaration@@public, void, MethodName:shouldCreateStoredProcedureAttributesFromProcedureMethodWithExplictProcedureNameAliasAndOutputParameterName,  @AT@ 4280 @LENGTH@ 54
------INS MethodInvocation@@assertThat(attr.getProcedureName(),is("plus1inout")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(attr.getProcedureName(),is("plus1inout")) @AT@ 4280 @LENGTH@ 53
---------INS SimpleName@@MethodName:assertThat:[attr.getProcedureName(), is("plus1inout")] @TO@ MethodInvocation@@assertThat(attr.getProcedureName(),is("plus1inout")) @AT@ 4280 @LENGTH@ 53
------------INS MethodInvocation@@attr.getProcedureName() @TO@ SimpleName@@MethodName:assertThat:[attr.getProcedureName(), is("plus1inout")] @AT@ 4291 @LENGTH@ 23
---------------INS SimpleName@@Name:attr @TO@ MethodInvocation@@attr.getProcedureName() @AT@ 4291 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getProcedureName:[] @TO@ MethodInvocation@@attr.getProcedureName() @AT@ 4296 @LENGTH@ 18
------------INS MethodInvocation@@is("plus1inout") @TO@ SimpleName@@MethodName:assertThat:[attr.getProcedureName(), is("plus1inout")] @AT@ 4316 @LENGTH@ 16
---------------INS SimpleName@@MethodName:is:["plus1inout"] @TO@ MethodInvocation@@is("plus1inout") @AT@ 4316 @LENGTH@ 16
------------------INS StringLiteral@@"plus1inout" @TO@ SimpleName@@MethodName:is:["plus1inout"] @AT@ 4319 @LENGTH@ 12
---------------INS SimpleName@@MethodName:is:["plus1inout"] @TO@ MethodInvocation@@is("plus1inout") @AT@ 4316 @LENGTH@ 16
------------------INS StringLiteral@@"plus1inout" @TO@ SimpleName@@MethodName:is:["plus1inout"] @AT@ 4319 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(attr.getOutputParameterType(),is(typeCompatibleWith(Integer.class))) @TO@ MethodDeclaration@@public, void, MethodName:shouldCreateStoredProcedureAttributesFromProcedureMethodWithExplictProcedureNameAliasAndOutputParameterName,  @AT@ 4337 @LENGTH@ 81
------INS MethodInvocation@@assertThat(attr.getOutputParameterType(),is(typeCompatibleWith(Integer.class))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(attr.getOutputParameterType(),is(typeCompatibleWith(Integer.class))) @AT@ 4337 @LENGTH@ 80
---------INS SimpleName@@MethodName:assertThat:[attr.getOutputParameterType(), is(typeCompatibleWith(Integer.class))] @TO@ MethodInvocation@@assertThat(attr.getOutputParameterType(),is(typeCompatibleWith(Integer.class))) @AT@ 4337 @LENGTH@ 80
------------INS MethodInvocation@@attr.getOutputParameterType() @TO@ SimpleName@@MethodName:assertThat:[attr.getOutputParameterType(), is(typeCompatibleWith(Integer.class))] @AT@ 4348 @LENGTH@ 29
---------------INS SimpleName@@Name:attr @TO@ MethodInvocation@@attr.getOutputParameterType() @AT@ 4348 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getOutputParameterType:[] @TO@ MethodInvocation@@attr.getOutputParameterType() @AT@ 4353 @LENGTH@ 24
------------INS MethodInvocation@@is(typeCompatibleWith(Integer.class)) @TO@ SimpleName@@MethodName:assertThat:[attr.getOutputParameterType(), is(typeCompatibleWith(Integer.class))] @AT@ 4379 @LENGTH@ 37
---------------INS SimpleName@@MethodName:is:[typeCompatibleWith(Integer.class)] @TO@ MethodInvocation@@is(typeCompatibleWith(Integer.class)) @AT@ 4379 @LENGTH@ 37
------------------INS MethodInvocation@@typeCompatibleWith(Integer.class) @TO@ SimpleName@@MethodName:is:[typeCompatibleWith(Integer.class)] @AT@ 4382 @LENGTH@ 33
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @TO@ MethodInvocation@@typeCompatibleWith(Integer.class) @AT@ 4382 @LENGTH@ 33
------------------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @AT@ 4401 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @TO@ MethodInvocation@@typeCompatibleWith(Integer.class) @AT@ 4382 @LENGTH@ 33
------------------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @AT@ 4401 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @TO@ MethodInvocation@@typeCompatibleWith(Integer.class) @AT@ 4382 @LENGTH@ 33
------------------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @AT@ 4401 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @TO@ MethodInvocation@@typeCompatibleWith(Integer.class) @AT@ 4382 @LENGTH@ 33
------------------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @AT@ 4401 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @TO@ MethodInvocation@@typeCompatibleWith(Integer.class) @AT@ 4382 @LENGTH@ 33
------------------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @AT@ 4401 @LENGTH@ 13
---------------INS SimpleName@@MethodName:is:[typeCompatibleWith(Integer.class)] @TO@ MethodInvocation@@is(typeCompatibleWith(Integer.class)) @AT@ 4379 @LENGTH@ 37
------------------INS MethodInvocation@@typeCompatibleWith(Integer.class) @TO@ SimpleName@@MethodName:is:[typeCompatibleWith(Integer.class)] @AT@ 4382 @LENGTH@ 33
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @TO@ MethodInvocation@@typeCompatibleWith(Integer.class) @AT@ 4382 @LENGTH@ 33
------------------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @AT@ 4401 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @TO@ MethodInvocation@@typeCompatibleWith(Integer.class) @AT@ 4382 @LENGTH@ 33
------------------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @AT@ 4401 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @TO@ MethodInvocation@@typeCompatibleWith(Integer.class) @AT@ 4382 @LENGTH@ 33
------------------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @AT@ 4401 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @TO@ MethodInvocation@@typeCompatibleWith(Integer.class) @AT@ 4382 @LENGTH@ 33
------------------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @AT@ 4401 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @TO@ MethodInvocation@@typeCompatibleWith(Integer.class) @AT@ 4382 @LENGTH@ 33
------------------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[Integer.class] @AT@ 4401 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertThat(attr.getOutputParameterName(),is("res")) @TO@ MethodDeclaration@@public, void, MethodName:shouldCreateStoredProcedureAttributesFromProcedureMethodWithExplictProcedureNameAliasAndOutputParameterName,  @AT@ 4421 @LENGTH@ 53
------INS MethodInvocation@@assertThat(attr.getOutputParameterName(),is("res")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(attr.getOutputParameterName(),is("res")) @AT@ 4421 @LENGTH@ 52
---------INS SimpleName@@MethodName:assertThat:[attr.getOutputParameterName(), is("res")] @TO@ MethodInvocation@@assertThat(attr.getOutputParameterName(),is("res")) @AT@ 4421 @LENGTH@ 52
------------INS MethodInvocation@@attr.getOutputParameterName() @TO@ SimpleName@@MethodName:assertThat:[attr.getOutputParameterName(), is("res")] @AT@ 4432 @LENGTH@ 29
---------------INS SimpleName@@Name:attr @TO@ MethodInvocation@@attr.getOutputParameterName() @AT@ 4432 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getOutputParameterName:[] @TO@ MethodInvocation@@attr.getOutputParameterName() @AT@ 4437 @LENGTH@ 24
------------INS MethodInvocation@@is("res") @TO@ SimpleName@@MethodName:assertThat:[attr.getOutputParameterName(), is("res")] @AT@ 4463 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:["res"] @TO@ MethodInvocation@@is("res") @AT@ 4463 @LENGTH@ 9
------------------INS StringLiteral@@"res" @TO@ SimpleName@@MethodName:is:["res"] @AT@ 4466 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:["res"] @TO@ MethodInvocation@@is("res") @AT@ 4463 @LENGTH@ 9
------------------INS StringLiteral@@"res" @TO@ SimpleName@@MethodName:is:["res"] @AT@ 4466 @LENGTH@ 5


UPD IfStatement@@if (!pins.isEmpty()) {  response.setHeader(reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME,hpkpHeaderValue);} @TO@ if (!pins.isEmpty()) {  String headerName=reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME;  if (!response.containsHeader(headerName)) {    response.setHeader(headerName,hpkpHeaderValue);  }} @AT@ 6295 @LENGTH@ 121
---UPD Block@@ThenBody:{  response.setHeader(reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME,hpkpHeaderValue);} @TO@ ThenBody:{  String headerName=reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME;  if (!response.containsHeader(headerName)) {    response.setHeader(headerName,hpkpHeaderValue);  }} @AT@ 6316 @LENGTH@ 100
------DEL ExpressionStatement@@MethodInvocation:response.setHeader(reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME,hpkpHeaderValue) @AT@ 6322 @LENGTH@ 89
---------DEL MethodInvocation@@response.setHeader(reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME,hpkpHeaderValue) @AT@ 6322 @LENGTH@ 88
------------DEL SimpleName@@Name:response @AT@ 6322 @LENGTH@ 8
------------DEL SimpleName@@MethodName:setHeader:[reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME, hpkpHeaderValue] @AT@ 6331 @LENGTH@ 79
---------------DEL ConditionalExpression@@reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME @AT@ 6341 @LENGTH@ 51
------INS VariableDeclarationStatement@@String headerName=reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME; @TO@ Block@@ThenBody:{  response.setHeader(reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME,hpkpHeaderValue);} @AT@ 6346 @LENGTH@ 72
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String headerName=reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME; @AT@ 6346 @LENGTH@ 6
---------INS VariableDeclarationFragment@@headerName=reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME @TO@ VariableDeclarationStatement@@String headerName=reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME; @AT@ 6353 @LENGTH@ 64
------------INS SimpleName@@headerName @TO@ VariableDeclarationFragment@@headerName=reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME @AT@ 6353 @LENGTH@ 10
------------INS ConditionalExpression@@reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME @TO@ VariableDeclarationFragment@@headerName=reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME @AT@ 6366 @LENGTH@ 51
---------------MOV SimpleName@@reportOnly @TO@ ConditionalExpression@@reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME @AT@ 6341 @LENGTH@ 10
---------------MOV SimpleName@@HPKP_RO_HEADER_NAME @TO@ ConditionalExpression@@reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME @AT@ 6354 @LENGTH@ 19
---------------MOV SimpleName@@HPKP_HEADER_NAME @TO@ ConditionalExpression@@reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME @AT@ 6376 @LENGTH@ 16
------INS IfStatement@@if (!response.containsHeader(headerName)) {  response.setHeader(headerName,hpkpHeaderValue);} @TO@ Block@@ThenBody:{  response.setHeader(reportOnly ? HPKP_RO_HEADER_NAME : HPKP_HEADER_NAME,hpkpHeaderValue);} @AT@ 6423 @LENGTH@ 103
---------INS PrefixExpression@@!response.containsHeader(headerName) @TO@ IfStatement@@if (!response.containsHeader(headerName)) {  response.setHeader(headerName,hpkpHeaderValue);} @AT@ 6427 @LENGTH@ 36
------------INS Operator@@! @TO@ PrefixExpression@@!response.containsHeader(headerName) @AT@ 6427 @LENGTH@ 1
------------INS MethodInvocation@@response.containsHeader(headerName) @TO@ PrefixExpression@@!response.containsHeader(headerName) @AT@ 6428 @LENGTH@ 35
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.containsHeader(headerName) @AT@ 6428 @LENGTH@ 8
---------------INS SimpleName@@MethodName:containsHeader:[headerName] @TO@ MethodInvocation@@response.containsHeader(headerName) @AT@ 6437 @LENGTH@ 26
------------------INS SimpleName@@headerName @TO@ SimpleName@@MethodName:containsHeader:[headerName] @AT@ 6452 @LENGTH@ 10
---------INS Block@@ThenBody:{  response.setHeader(headerName,hpkpHeaderValue);} @TO@ IfStatement@@if (!response.containsHeader(headerName)) {  response.setHeader(headerName,hpkpHeaderValue);} @AT@ 6465 @LENGTH@ 61
------------INS ExpressionStatement@@MethodInvocation:response.setHeader(headerName,hpkpHeaderValue) @TO@ Block@@ThenBody:{  response.setHeader(headerName,hpkpHeaderValue);} @AT@ 6472 @LENGTH@ 48
---------------INS MethodInvocation@@response.setHeader(headerName,hpkpHeaderValue) @TO@ ExpressionStatement@@MethodInvocation:response.setHeader(headerName,hpkpHeaderValue) @AT@ 6472 @LENGTH@ 47
------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.setHeader(headerName,hpkpHeaderValue) @AT@ 6472 @LENGTH@ 8
------------------INS SimpleName@@MethodName:setHeader:[headerName, hpkpHeaderValue] @TO@ MethodInvocation@@response.setHeader(headerName,hpkpHeaderValue) @AT@ 6481 @LENGTH@ 38
---------------------MOV SimpleName@@hpkpHeaderValue @TO@ SimpleName@@MethodName:setHeader:[headerName, hpkpHeaderValue] @AT@ 6394 @LENGTH@ 15
---------------------INS SimpleName@@headerName @TO@ SimpleName@@MethodName:setHeader:[headerName, hpkpHeaderValue] @AT@ 6491 @LENGTH@ 10


UPD VariableDeclarationStatement@@Exchange exchange=template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/?authUsername=camel&authPassword=password&x509HostnameVerifier=#x509HostnameVerifier",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @TO@ Exchange exchange=template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/?authUsername=camel&authPassword=password&x509HostnameVerifier=#x509HostnameVerifier&sslContextParameters=#sslContextParameters",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @AT@ 3009 @LENGTH@ 317
---UPD VariableDeclarationFragment@@exchange=template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/?authUsername=camel&authPassword=password&x509HostnameVerifier=#x509HostnameVerifier",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @TO@ exchange=template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/?authUsername=camel&authPassword=password&x509HostnameVerifier=#x509HostnameVerifier&sslContextParameters=#sslContextParameters",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 3018 @LENGTH@ 307
------UPD MethodInvocation@@template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/?authUsername=camel&authPassword=password&x509HostnameVerifier=#x509HostnameVerifier",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @TO@ template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/?authUsername=camel&authPassword=password&x509HostnameVerifier=#x509HostnameVerifier&sslContextParameters=#sslContextParameters",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 3029 @LENGTH@ 296
---------UPD SimpleName@@MethodName:request:["https4://127.0.0.1:" + localServer.getLocalPort() + "/?authUsername=camel&authPassword=password&x509HostnameVerifier=#x509HostnameVerifier", new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
] @TO@ MethodName:request:["https4://127.0.0.1:" + localServer.getLocalPort() + "/?authUsername=camel&authPassword=password&x509HostnameVerifier=#x509HostnameVerifier&sslContextParameters=#sslContextParameters", new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
] @AT@ 3038 @LENGTH@ 287
------------UPD InfixExpression@@"https4://127.0.0.1:" + localServer.getLocalPort() + "/?authUsername=camel&authPassword=password&x509HostnameVerifier=#x509HostnameVerifier" @TO@ "https4://127.0.0.1:" + localServer.getLocalPort() + "/?authUsername=camel&authPassword=password&x509HostnameVerifier=#x509HostnameVerifier&sslContextParameters=#sslContextParameters" @AT@ 3046 @LENGTH@ 153
---------------UPD StringLiteral@@"/?authUsername=camel&authPassword=password&x509HostnameVerifier=#x509HostnameVerifier" @TO@ "/?authUsername=camel&authPassword=password&x509HostnameVerifier=#x509HostnameVerifier&sslContextParameters=#sslContextParameters" @AT@ 3112 @LENGTH@ 87


UPD IfStatement@@if (this.properties.isTransactional()) {  this.mutations.put(name,Mutator.PASSIVE);} else {  this.mutations.remove(name);} @TO@ if (this.properties.isTransactional()) {  this.mutations.put(name,Mutator.PASSIVE);} else {  if (SessionAttributeImmutability.INSTANCE.test(attribute)) {    this.mutations.remove(name);  } else {    this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value));  }} @AT@ 4956 @LENGTH@ 300
---INS Block@@ElseBody:{  if (SessionAttributeImmutability.INSTANCE.test(attribute)) {    this.mutations.remove(name);  } else {    this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value));  }} @TO@ IfStatement@@if (this.properties.isTransactional()) {  this.mutations.put(name,Mutator.PASSIVE);} else {  this.mutations.remove(name);} @AT@ 5204 @LENGTH@ 353
------INS IfStatement@@if (SessionAttributeImmutability.INSTANCE.test(attribute)) {  this.mutations.remove(name);} else {  this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value));} @TO@ Block@@ElseBody:{  if (SessionAttributeImmutability.INSTANCE.test(attribute)) {    this.mutations.remove(name);  } else {    this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value));  }} @AT@ 5307 @LENGTH@ 240
---------MOV Block@@ElseBody:{  this.mutations.remove(name);} @TO@ IfStatement@@if (SessionAttributeImmutability.INSTANCE.test(attribute)) {  this.mutations.remove(name);} else {  this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value));} @AT@ 5204 @LENGTH@ 52
---------INS MethodInvocation@@SessionAttributeImmutability.INSTANCE.test(attribute) @TO@ IfStatement@@if (SessionAttributeImmutability.INSTANCE.test(attribute)) {  this.mutations.remove(name);} else {  this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value));} @AT@ 5311 @LENGTH@ 53
------------INS QualifiedName@@Name:SessionAttributeImmutability.INSTANCE @TO@ MethodInvocation@@SessionAttributeImmutability.INSTANCE.test(attribute) @AT@ 5311 @LENGTH@ 37
------------INS SimpleName@@MethodName:test:[attribute] @TO@ MethodInvocation@@SessionAttributeImmutability.INSTANCE.test(attribute) @AT@ 5349 @LENGTH@ 15
---------------INS SimpleName@@attribute @TO@ SimpleName@@MethodName:test:[attribute] @AT@ 5354 @LENGTH@ 9
---------INS Block@@ElseBody:{  this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value));} @TO@ IfStatement@@if (SessionAttributeImmutability.INSTANCE.test(attribute)) {  this.mutations.remove(name);} else {  this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value));} @AT@ 5432 @LENGTH@ 115
------------INS ExpressionStatement@@MethodInvocation:this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value)) @TO@ Block@@ElseBody:{  this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value));} @AT@ 5450 @LENGTH@ 83
---------------INS MethodInvocation@@this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value)) @TO@ ExpressionStatement@@MethodInvocation:this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value)) @AT@ 5450 @LENGTH@ 82
------------------INS FieldAccess@@this.mutations @TO@ MethodInvocation@@this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value)) @AT@ 5450 @LENGTH@ 14
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.mutations @AT@ 5450 @LENGTH@ 4
---------------------INS SimpleName@@mutations @TO@ FieldAccess@@this.mutations @AT@ 5455 @LENGTH@ 9
------------------INS SimpleName@@MethodName:put:[name, new CacheEntryMutator<>(this.attributeCache,key,value)] @TO@ MethodInvocation@@this.mutations.put(name,new CacheEntryMutator<>(this.attributeCache,key,value)) @AT@ 5465 @LENGTH@ 67
---------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:put:[name, new CacheEntryMutator<>(this.attributeCache,key,value)] @AT@ 5469 @LENGTH@ 4
---------------------INS ClassInstanceCreation@@CacheEntryMutator<>[this.attributeCache, key, value] @TO@ SimpleName@@MethodName:put:[name, new CacheEntryMutator<>(this.attributeCache,key,value)] @AT@ 5475 @LENGTH@ 56
------------------------INS New@@new @TO@ ClassInstanceCreation@@CacheEntryMutator<>[this.attributeCache, key, value] @AT@ 5475 @LENGTH@ 3
------------------------INS ParameterizedType@@CacheEntryMutator<> @TO@ ClassInstanceCreation@@CacheEntryMutator<>[this.attributeCache, key, value] @AT@ 5479 @LENGTH@ 19
---------------------------INS SimpleType@@CacheEntryMutator @TO@ ParameterizedType@@CacheEntryMutator<> @AT@ 5479 @LENGTH@ 17
------------------------INS FieldAccess@@this.attributeCache @TO@ ClassInstanceCreation@@CacheEntryMutator<>[this.attributeCache, key, value] @AT@ 5499 @LENGTH@ 19
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.attributeCache @AT@ 5499 @LENGTH@ 4
---------------------------INS SimpleName@@attributeCache @TO@ FieldAccess@@this.attributeCache @AT@ 5504 @LENGTH@ 14
------------------------INS SimpleName@@key @TO@ ClassInstanceCreation@@CacheEntryMutator<>[this.attributeCache, key, value] @AT@ 5520 @LENGTH@ 3
------------------------INS SimpleName@@value @TO@ ClassInstanceCreation@@CacheEntryMutator<>[this.attributeCache, key, value] @AT@ 5525 @LENGTH@ 5
---UPD Block@@ElseBody:{  this.mutations.remove(name);} @TO@ ThenBody:{  this.mutations.remove(name);} @AT@ 5204 @LENGTH@ 52


UPD ReturnStatement@@SimpleName:camelContext @TO@ SimpleName:context @AT@ 1959 @LENGTH@ 20
---UPD SimpleName@@camelContext @TO@ context @AT@ 1966 @LENGTH@ 12


UPD TryStatement@@try {  isInEventLoop=true;  doLoop(request.getStreamOffset().getKey());}  finally {  isInEventLoop=false;} @TO@ try {  isInEventLoop=true;  pollState.running();  doLoop(request.getStreamOffset().getKey());}  finally {  isInEventLoop=false;} @AT@ 3864 @LENGTH@ 122
---MOV ExpressionStatement@@MethodInvocation:pollState.running() @TO@ TryStatement@@try {  isInEventLoop=true;  doLoop(request.getStreamOffset().getKey());}  finally {  isInEventLoop=false;} @AT@ 3840 @LENGTH@ 20


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1079 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1079 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1086 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1094 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1124 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1131 @LENGTH@ 5


INS MethodDeclaration@@List<SpatialDomain>, MethodName:findBySdnPointNear, Distance distance, Point aPoint,  @TO@ TypeDeclaration@@[public]SpatialDomainRepository, [Neo4jRepository<SpatialDomain,Long>] @AT@ 1918 @LENGTH@ 52
---INS ParameterizedType@@List<SpatialDomain> @TO@ MethodDeclaration@@List<SpatialDomain>, MethodName:findBySdnPointNear, Distance distance, Point aPoint,  @AT@ 1898 @LENGTH@ 19
------INS SimpleType@@List @TO@ ParameterizedType@@List<SpatialDomain> @AT@ 1898 @LENGTH@ 4
------INS SimpleType@@SpatialDomain @TO@ ParameterizedType@@List<SpatialDomain> @AT@ 1903 @LENGTH@ 13
---INS SimpleName@@MethodName:findBySdnPointNear @TO@ MethodDeclaration@@List<SpatialDomain>, MethodName:findBySdnPointNear, Distance distance, Point aPoint,  @AT@ 1918 @LENGTH@ 18
---INS SingleVariableDeclaration@@Distance distance @TO@ MethodDeclaration@@List<SpatialDomain>, MethodName:findBySdnPointNear, Distance distance, Point aPoint,  @AT@ 1937 @LENGTH@ 17
------INS SimpleType@@Distance @TO@ SingleVariableDeclaration@@Distance distance @AT@ 1937 @LENGTH@ 8
------INS SimpleName@@distance @TO@ SingleVariableDeclaration@@Distance distance @AT@ 1946 @LENGTH@ 8
---INS SingleVariableDeclaration@@Point aPoint @TO@ MethodDeclaration@@List<SpatialDomain>, MethodName:findBySdnPointNear, Distance distance, Point aPoint,  @AT@ 1956 @LENGTH@ 12
------INS SimpleType@@Point @TO@ SingleVariableDeclaration@@Point aPoint @AT@ 1956 @LENGTH@ 5
------INS SimpleName@@aPoint @TO@ SingleVariableDeclaration@@Point aPoint @AT@ 1962 @LENGTH@ 6


UPD TypeDeclaration@@[public]ExpressionBuilder,  @TO@ [public, final]ExpressionBuilder,  @AT@ 2215 @LENGTH@ 53953
---INS Modifier@@final @TO@ TypeDeclaration@@[public]ExpressionBuilder,  @AT@ 2222 @LENGTH@ 5


DEL MethodDeclaration@@public, static, void, MethodName:skipSecurityManager,  @AT@ 4895 @LENGTH@ 183
---DEL Modifier@@public @AT@ 4895 @LENGTH@ 6
---DEL Modifier@@static @AT@ 4902 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 4909 @LENGTH@ 4
---DEL SimpleName@@MethodName:skipSecurityManager @AT@ 4914 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:AssumeTestGroupUtil.assumeSecurityManagerDisabled() @AT@ 5020 @LENGTH@ 52
------DEL MethodInvocation@@AssumeTestGroupUtil.assumeSecurityManagerDisabled() @AT@ 5020 @LENGTH@ 51
---------DEL SimpleName@@Name:AssumeTestGroupUtil @AT@ 5020 @LENGTH@ 19
---------DEL SimpleName@@MethodName:assumeSecurityManagerDisabled:[] @AT@ 5040 @LENGTH@ 31


UPD MethodDeclaration@@public, void, MethodName:testRedirectWatchdox, Exception,  @TO@ public, void, MethodName:testRedirectMatch, Exception,  @AT@ 776 @LENGTH@ 344
---UPD SimpleName@@MethodName:testRedirectWatchdox @TO@ MethodName:testRedirectMatch @AT@ 788 @LENGTH@ 20


UPD WhileStatement@@while (i < input.length) {  if (input[i] == '{') {    return false;  } else   if (!Character.isWhitespace(input[i])) {    return true;  }} @TO@ while (i < input.length) {  if (input[i] == '{') {    return false;  } else   if (!Character.isWhitespace(input[i])) {    return true;  }  i++;} @AT@ 3602 @LENGTH@ 204
---UPD Block@@WhileBody:{  if (input[i] == '{') {    return false;  } else   if (!Character.isWhitespace(input[i])) {    return true;  }} @TO@ WhileBody:{  if (input[i] == '{') {    return false;  } else   if (!Character.isWhitespace(input[i])) {    return true;  }  i++;} @AT@ 3627 @LENGTH@ 179
------INS ExpressionStatement@@PostfixExpression:i++ @TO@ Block@@WhileBody:{  if (input[i] == '{') {    return false;  } else   if (!Character.isWhitespace(input[i])) {    return true;  }} @AT@ 3810 @LENGTH@ 4
---------INS PostfixExpression@@i++ @TO@ ExpressionStatement@@PostfixExpression:i++ @AT@ 3810 @LENGTH@ 3
------------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 3810 @LENGTH@ 1
------------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 3812 @LENGTH@ 2


UPD TypeDeclaration@@[@Configuration, @RabbitListenerTest, public, static]Config,  @TO@ [@Configuration, @EnableRabbit, @RabbitListenerTest, public, static]Config,  @AT@ 3513 @LENGTH@ 886
---INS MarkerAnnotation@@@EnableRabbit @TO@ TypeDeclaration@@[@Configuration, @RabbitListenerTest, public, static]Config,  @AT@ 3602 @LENGTH@ 13


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1035 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1035 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1042 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1050 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1080 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1087 @LENGTH@ 5


UPD ReturnStatement@@ClassInstanceCreation:new User(returnUsername,userFromUserQuery.getPassword(),userFromUserQuery.isEnabled(),true,true,true,combinedAuthorities) @TO@ ClassInstanceCreation:new User(returnUsername,userFromUserQuery.getPassword(),userFromUserQuery.isEnabled(),userFromUserQuery.isAccountNonExpired(),userFromUserQuery.isCredentialsNonExpired(),userFromUserQuery.isAccountNonLocked(),combinedAuthorities) @AT@ 10895 @LENGTH@ 139
---UPD ClassInstanceCreation@@User[returnUsername, userFromUserQuery.getPassword(), userFromUserQuery.isEnabled(), true, true, true, combinedAuthorities] @TO@ User[returnUsername, userFromUserQuery.getPassword(), userFromUserQuery.isEnabled(), userFromUserQuery.isAccountNonExpired(), userFromUserQuery.isCredentialsNonExpired(), userFromUserQuery.isAccountNonLocked(), combinedAuthorities] @AT@ 10902 @LENGTH@ 131
------INS MethodInvocation@@userFromUserQuery.isAccountNonExpired() @TO@ ClassInstanceCreation@@User[returnUsername, userFromUserQuery.getPassword(), userFromUserQuery.isEnabled(), true, true, true, combinedAuthorities] @AT@ 10995 @LENGTH@ 39
---------INS SimpleName@@Name:userFromUserQuery @TO@ MethodInvocation@@userFromUserQuery.isAccountNonExpired() @AT@ 10995 @LENGTH@ 17
---------INS SimpleName@@MethodName:isAccountNonExpired:[] @TO@ MethodInvocation@@userFromUserQuery.isAccountNonExpired() @AT@ 11013 @LENGTH@ 21
------DEL BooleanLiteral@@true @AT@ 10995 @LENGTH@ 4
------DEL BooleanLiteral@@true @AT@ 11001 @LENGTH@ 4
------DEL BooleanLiteral@@true @AT@ 11007 @LENGTH@ 4
------INS MethodInvocation@@userFromUserQuery.isCredentialsNonExpired() @TO@ ClassInstanceCreation@@User[returnUsername, userFromUserQuery.getPassword(), userFromUserQuery.isEnabled(), true, true, true, combinedAuthorities] @AT@ 11040 @LENGTH@ 43
---------INS SimpleName@@Name:userFromUserQuery @TO@ MethodInvocation@@userFromUserQuery.isCredentialsNonExpired() @AT@ 11040 @LENGTH@ 17
---------INS SimpleName@@MethodName:isCredentialsNonExpired:[] @TO@ MethodInvocation@@userFromUserQuery.isCredentialsNonExpired() @AT@ 11058 @LENGTH@ 25
------INS MethodInvocation@@userFromUserQuery.isAccountNonLocked() @TO@ ClassInstanceCreation@@User[returnUsername, userFromUserQuery.getPassword(), userFromUserQuery.isEnabled(), true, true, true, combinedAuthorities] @AT@ 11085 @LENGTH@ 38
---------INS SimpleName@@Name:userFromUserQuery @TO@ MethodInvocation@@userFromUserQuery.isAccountNonLocked() @AT@ 11085 @LENGTH@ 17
---------INS SimpleName@@MethodName:isAccountNonLocked:[] @TO@ MethodInvocation@@userFromUserQuery.isAccountNonLocked() @AT@ 11103 @LENGTH@ 20


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 4278 @LENGTH@ 64
---DEL Modifier@@public @AT@ 4278 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 4285 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 4293 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 4323 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 4330 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testMonoVoidReturnAck, Exception,  @TO@ TypeDeclaration@@[public]MessageListenerAdapterTests,  @AT@ 9159 @LENGTH@ 581
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMonoVoidReturnAck, Exception,  @AT@ 9159 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMonoVoidReturnAck, Exception,  @AT@ 9166 @LENGTH@ 4
---INS SimpleName@@MethodName:testMonoVoidReturnAck @TO@ MethodDeclaration@@public, void, MethodName:testMonoVoidReturnAck, Exception,  @AT@ 9171 @LENGTH@ 21
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testMonoVoidReturnAck, Exception,  @AT@ 9202 @LENGTH@ 9
---INS TypeDeclaration@@Delegate,  @TO@ MethodDeclaration@@public, void, MethodName:testMonoVoidReturnAck, Exception,  @AT@ 9222 @LENGTH@ 134
------INS SimpleName@@ClassName:Delegate @TO@ TypeDeclaration@@Delegate,  @AT@ 9222 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:this.adapter=new MessageListenerAdapter(new Delegate(),"myPojoMessageMethod") @TO@ MethodDeclaration@@public, void, MethodName:testMonoVoidReturnAck, Exception,  @AT@ 9359 @LENGTH@ 81
------INS Assignment@@this.adapter=new MessageListenerAdapter(new Delegate(),"myPojoMessageMethod") @TO@ ExpressionStatement@@Assignment:this.adapter=new MessageListenerAdapter(new Delegate(),"myPojoMessageMethod") @AT@ 9359 @LENGTH@ 80
---------INS FieldAccess@@this.adapter @TO@ Assignment@@this.adapter=new MessageListenerAdapter(new Delegate(),"myPojoMessageMethod") @AT@ 9359 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.adapter @AT@ 9359 @LENGTH@ 4
------------INS SimpleName@@adapter @TO@ FieldAccess@@this.adapter @AT@ 9364 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.adapter=new MessageListenerAdapter(new Delegate(),"myPojoMessageMethod") @AT@ 9371 @LENGTH@ 1
---------INS ClassInstanceCreation@@MessageListenerAdapter[new Delegate(), "myPojoMessageMethod"] @TO@ Assignment@@this.adapter=new MessageListenerAdapter(new Delegate(),"myPojoMessageMethod") @AT@ 9374 @LENGTH@ 65
------------INS New@@new @TO@ ClassInstanceCreation@@MessageListenerAdapter[new Delegate(), "myPojoMessageMethod"] @AT@ 9374 @LENGTH@ 3
------------INS SimpleType@@MessageListenerAdapter @TO@ ClassInstanceCreation@@MessageListenerAdapter[new Delegate(), "myPojoMessageMethod"] @AT@ 9378 @LENGTH@ 22
------------INS ClassInstanceCreation@@Delegate[] @TO@ ClassInstanceCreation@@MessageListenerAdapter[new Delegate(), "myPojoMessageMethod"] @AT@ 9401 @LENGTH@ 14
---------------INS New@@new @TO@ ClassInstanceCreation@@Delegate[] @AT@ 9401 @LENGTH@ 3
---------------INS SimpleType@@Delegate @TO@ ClassInstanceCreation@@Delegate[] @AT@ 9405 @LENGTH@ 8
------------INS StringLiteral@@"myPojoMessageMethod" @TO@ ClassInstanceCreation@@MessageListenerAdapter[new Delegate(), "myPojoMessageMethod"] @AT@ 9417 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:this.adapter.containerAckMode(AcknowledgeMode.MANUAL) @TO@ MethodDeclaration@@public, void, MethodName:testMonoVoidReturnAck, Exception,  @AT@ 9443 @LENGTH@ 54
------INS MethodInvocation@@this.adapter.containerAckMode(AcknowledgeMode.MANUAL) @TO@ ExpressionStatement@@MethodInvocation:this.adapter.containerAckMode(AcknowledgeMode.MANUAL) @AT@ 9443 @LENGTH@ 53
---------INS FieldAccess@@this.adapter @TO@ MethodInvocation@@this.adapter.containerAckMode(AcknowledgeMode.MANUAL) @AT@ 9443 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.adapter @AT@ 9443 @LENGTH@ 4
------------INS SimpleName@@adapter @TO@ FieldAccess@@this.adapter @AT@ 9448 @LENGTH@ 7
---------INS SimpleName@@MethodName:containerAckMode:[AcknowledgeMode.MANUAL] @TO@ MethodInvocation@@this.adapter.containerAckMode(AcknowledgeMode.MANUAL) @AT@ 9456 @LENGTH@ 40
------------INS QualifiedName@@AcknowledgeMode.MANUAL @TO@ SimpleName@@MethodName:containerAckMode:[AcknowledgeMode.MANUAL] @AT@ 9473 @LENGTH@ 22
---------------INS SimpleName@@AcknowledgeMode @TO@ QualifiedName@@AcknowledgeMode.MANUAL @AT@ 9473 @LENGTH@ 15
---------------INS SimpleName@@MANUAL @TO@ QualifiedName@@AcknowledgeMode.MANUAL @AT@ 9489 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:this.adapter.setResponseExchange("default") @TO@ MethodDeclaration@@public, void, MethodName:testMonoVoidReturnAck, Exception,  @AT@ 9500 @LENGTH@ 44
------INS MethodInvocation@@this.adapter.setResponseExchange("default") @TO@ ExpressionStatement@@MethodInvocation:this.adapter.setResponseExchange("default") @AT@ 9500 @LENGTH@ 43
---------INS FieldAccess@@this.adapter @TO@ MethodInvocation@@this.adapter.setResponseExchange("default") @AT@ 9500 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.adapter @AT@ 9500 @LENGTH@ 4
------------INS SimpleName@@adapter @TO@ FieldAccess@@this.adapter @AT@ 9505 @LENGTH@ 7
---------INS SimpleName@@MethodName:setResponseExchange:["default"] @TO@ MethodInvocation@@this.adapter.setResponseExchange("default") @AT@ 9513 @LENGTH@ 30
------------INS StringLiteral@@"default" @TO@ SimpleName@@MethodName:setResponseExchange:["default"] @AT@ 9533 @LENGTH@ 9
---INS VariableDeclarationStatement@@Channel mockChannel=mock(Channel.class); @TO@ MethodDeclaration@@public, void, MethodName:testMonoVoidReturnAck, Exception,  @AT@ 9547 @LENGTH@ 42
------INS SimpleType@@Channel @TO@ VariableDeclarationStatement@@Channel mockChannel=mock(Channel.class); @AT@ 9547 @LENGTH@ 7
------INS VariableDeclarationFragment@@mockChannel=mock(Channel.class) @TO@ VariableDeclarationStatement@@Channel mockChannel=mock(Channel.class); @AT@ 9555 @LENGTH@ 33
---------INS SimpleName@@mockChannel @TO@ VariableDeclarationFragment@@mockChannel=mock(Channel.class) @AT@ 9555 @LENGTH@ 11
---------INS MethodInvocation@@mock(Channel.class) @TO@ VariableDeclarationFragment@@mockChannel=mock(Channel.class) @AT@ 9569 @LENGTH@ 19
------------INS SimpleName@@MethodName:mock:[Channel.class] @TO@ MethodInvocation@@mock(Channel.class) @AT@ 9569 @LENGTH@ 19
---------------INS TypeLiteral@@Channel.class @TO@ SimpleName@@MethodName:mock:[Channel.class] @AT@ 9574 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:this.adapter.onMessage(new Message("foo".getBytes(),this.messageProperties),mockChannel) @TO@ MethodDeclaration@@public, void, MethodName:testMonoVoidReturnAck, Exception,  @AT@ 9592 @LENGTH@ 91
------INS MethodInvocation@@this.adapter.onMessage(new Message("foo".getBytes(),this.messageProperties),mockChannel) @TO@ ExpressionStatement@@MethodInvocation:this.adapter.onMessage(new Message("foo".getBytes(),this.messageProperties),mockChannel) @AT@ 9592 @LENGTH@ 90
---------INS FieldAccess@@this.adapter @TO@ MethodInvocation@@this.adapter.onMessage(new Message("foo".getBytes(),this.messageProperties),mockChannel) @AT@ 9592 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.adapter @AT@ 9592 @LENGTH@ 4
------------INS SimpleName@@adapter @TO@ FieldAccess@@this.adapter @AT@ 9597 @LENGTH@ 7
---------INS SimpleName@@MethodName:onMessage:[new Message("foo".getBytes(),this.messageProperties), mockChannel] @TO@ MethodInvocation@@this.adapter.onMessage(new Message("foo".getBytes(),this.messageProperties),mockChannel) @AT@ 9605 @LENGTH@ 77
------------INS ClassInstanceCreation@@Message["foo".getBytes(), this.messageProperties] @TO@ SimpleName@@MethodName:onMessage:[new Message("foo".getBytes(),this.messageProperties), mockChannel] @AT@ 9615 @LENGTH@ 53
---------------INS New@@new @TO@ ClassInstanceCreation@@Message["foo".getBytes(), this.messageProperties] @AT@ 9615 @LENGTH@ 3
---------------INS SimpleType@@Message @TO@ ClassInstanceCreation@@Message["foo".getBytes(), this.messageProperties] @AT@ 9619 @LENGTH@ 7
---------------INS MethodInvocation@@"foo".getBytes() @TO@ ClassInstanceCreation@@Message["foo".getBytes(), this.messageProperties] @AT@ 9627 @LENGTH@ 16
------------------INS StringLiteral@@"foo" @TO@ MethodInvocation@@"foo".getBytes() @AT@ 9627 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"foo".getBytes() @AT@ 9633 @LENGTH@ 10
---------------INS FieldAccess@@this.messageProperties @TO@ ClassInstanceCreation@@Message["foo".getBytes(), this.messageProperties] @AT@ 9645 @LENGTH@ 22
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.messageProperties @AT@ 9645 @LENGTH@ 4
------------------INS SimpleName@@messageProperties @TO@ FieldAccess@@this.messageProperties @AT@ 9650 @LENGTH@ 17
------------INS SimpleName@@mockChannel @TO@ SimpleName@@MethodName:onMessage:[new Message("foo".getBytes(),this.messageProperties), mockChannel] @AT@ 9670 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:verify(mockChannel).basicAck(anyLong(),eq(false)) @TO@ MethodDeclaration@@public, void, MethodName:testMonoVoidReturnAck, Exception,  @AT@ 9686 @LENGTH@ 51
------INS MethodInvocation@@verify(mockChannel).basicAck(anyLong(),eq(false)) @TO@ ExpressionStatement@@MethodInvocation:verify(mockChannel).basicAck(anyLong(),eq(false)) @AT@ 9686 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:verify:[mockChannel] @TO@ MethodInvocation@@verify(mockChannel).basicAck(anyLong(),eq(false)) @AT@ 9686 @LENGTH@ 19
------------INS SimpleName@@mockChannel @TO@ MethodInvocation@@MethodName:verify:[mockChannel] @AT@ 9693 @LENGTH@ 11
---------INS SimpleName@@MethodName:basicAck:[anyLong(), eq(false)] @TO@ MethodInvocation@@verify(mockChannel).basicAck(anyLong(),eq(false)) @AT@ 9706 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:anyLong:[] @TO@ SimpleName@@MethodName:basicAck:[anyLong(), eq(false)] @AT@ 9715 @LENGTH@ 9
------------INS MethodInvocation@@eq(false) @TO@ SimpleName@@MethodName:basicAck:[anyLong(), eq(false)] @AT@ 9726 @LENGTH@ 9
---------------INS SimpleName@@MethodName:eq:[false] @TO@ MethodInvocation@@eq(false) @AT@ 9726 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:eq:[false] @AT@ 9729 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:saveTokenWithCookieDomain,  @TO@ TypeDeclaration@@[public]CookieCsrfTokenRepositoryTests,  @AT@ 6494 @LENGTH@ 427
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:saveTokenWithCookieDomain,  @AT@ 6494 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:saveTokenWithCookieDomain,  @AT@ 6501 @LENGTH@ 4
---INS SimpleName@@MethodName:saveTokenWithCookieDomain @TO@ MethodDeclaration@@public, void, MethodName:saveTokenWithCookieDomain,  @AT@ 6506 @LENGTH@ 25
---INS VariableDeclarationStatement@@String domainName="example.com"; @TO@ MethodDeclaration@@public, void, MethodName:saveTokenWithCookieDomain,  @AT@ 6538 @LENGTH@ 34
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String domainName="example.com"; @AT@ 6538 @LENGTH@ 6
------INS VariableDeclarationFragment@@domainName="example.com" @TO@ VariableDeclarationStatement@@String domainName="example.com"; @AT@ 6545 @LENGTH@ 26
---------INS SimpleName@@domainName @TO@ VariableDeclarationFragment@@domainName="example.com" @AT@ 6545 @LENGTH@ 10
---------INS StringLiteral@@"example.com" @TO@ VariableDeclarationFragment@@domainName="example.com" @AT@ 6558 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:this.repository.setCookieDomain(domainName) @TO@ MethodDeclaration@@public, void, MethodName:saveTokenWithCookieDomain,  @AT@ 6575 @LENGTH@ 44
------INS MethodInvocation@@this.repository.setCookieDomain(domainName) @TO@ ExpressionStatement@@MethodInvocation:this.repository.setCookieDomain(domainName) @AT@ 6575 @LENGTH@ 43
---------INS FieldAccess@@this.repository @TO@ MethodInvocation@@this.repository.setCookieDomain(domainName) @AT@ 6575 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.repository @AT@ 6575 @LENGTH@ 4
------------INS SimpleName@@repository @TO@ FieldAccess@@this.repository @AT@ 6580 @LENGTH@ 10
---------INS SimpleName@@MethodName:setCookieDomain:[domainName] @TO@ MethodInvocation@@this.repository.setCookieDomain(domainName) @AT@ 6591 @LENGTH@ 27
------------INS SimpleName@@domainName @TO@ SimpleName@@MethodName:setCookieDomain:[domainName] @AT@ 6607 @LENGTH@ 10
---INS VariableDeclarationStatement@@CsrfToken token=this.repository.generateToken(this.request); @TO@ MethodDeclaration@@public, void, MethodName:saveTokenWithCookieDomain,  @AT@ 6623 @LENGTH@ 62
------INS SimpleType@@CsrfToken @TO@ VariableDeclarationStatement@@CsrfToken token=this.repository.generateToken(this.request); @AT@ 6623 @LENGTH@ 9
------INS VariableDeclarationFragment@@token=this.repository.generateToken(this.request) @TO@ VariableDeclarationStatement@@CsrfToken token=this.repository.generateToken(this.request); @AT@ 6633 @LENGTH@ 51
---------INS SimpleName@@token @TO@ VariableDeclarationFragment@@token=this.repository.generateToken(this.request) @AT@ 6633 @LENGTH@ 5
---------INS MethodInvocation@@this.repository.generateToken(this.request) @TO@ VariableDeclarationFragment@@token=this.repository.generateToken(this.request) @AT@ 6641 @LENGTH@ 43
------------INS FieldAccess@@this.repository @TO@ MethodInvocation@@this.repository.generateToken(this.request) @AT@ 6641 @LENGTH@ 15
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.repository @AT@ 6641 @LENGTH@ 4
---------------INS SimpleName@@repository @TO@ FieldAccess@@this.repository @AT@ 6646 @LENGTH@ 10
------------INS SimpleName@@MethodName:generateToken:[this.request] @TO@ MethodInvocation@@this.repository.generateToken(this.request) @AT@ 6657 @LENGTH@ 27
---------------INS FieldAccess@@this.request @TO@ SimpleName@@MethodName:generateToken:[this.request] @AT@ 6671 @LENGTH@ 12
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 6671 @LENGTH@ 4
------------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 6676 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:this.repository.saveToken(token,this.request,this.response) @TO@ MethodDeclaration@@public, void, MethodName:saveTokenWithCookieDomain,  @AT@ 6688 @LENGTH@ 62
------INS MethodInvocation@@this.repository.saveToken(token,this.request,this.response) @TO@ ExpressionStatement@@MethodInvocation:this.repository.saveToken(token,this.request,this.response) @AT@ 6688 @LENGTH@ 61
---------INS FieldAccess@@this.repository @TO@ MethodInvocation@@this.repository.saveToken(token,this.request,this.response) @AT@ 6688 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.repository @AT@ 6688 @LENGTH@ 4
------------INS SimpleName@@repository @TO@ FieldAccess@@this.repository @AT@ 6693 @LENGTH@ 10
---------INS SimpleName@@MethodName:saveToken:[token, this.request, this.response] @TO@ MethodInvocation@@this.repository.saveToken(token,this.request,this.response) @AT@ 6704 @LENGTH@ 45
------------INS SimpleName@@token @TO@ SimpleName@@MethodName:saveToken:[token, this.request, this.response] @AT@ 6714 @LENGTH@ 5
------------INS FieldAccess@@this.request @TO@ SimpleName@@MethodName:saveToken:[token, this.request, this.response] @AT@ 6721 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 6721 @LENGTH@ 4
---------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 6726 @LENGTH@ 7
------------INS FieldAccess@@this.response @TO@ SimpleName@@MethodName:saveToken:[token, this.request, this.response] @AT@ 6735 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 6735 @LENGTH@ 4
---------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 6740 @LENGTH@ 8
---INS VariableDeclarationStatement@@Cookie tokenCookie=this.response.getCookie(CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME); @TO@ MethodDeclaration@@public, void, MethodName:saveTokenWithCookieDomain,  @AT@ 6754 @LENGTH@ 102
------INS SimpleType@@Cookie @TO@ VariableDeclarationStatement@@Cookie tokenCookie=this.response.getCookie(CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME); @AT@ 6754 @LENGTH@ 6
------INS VariableDeclarationFragment@@tokenCookie=this.response.getCookie(CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME) @TO@ VariableDeclarationStatement@@Cookie tokenCookie=this.response.getCookie(CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME); @AT@ 6761 @LENGTH@ 94
---------INS SimpleName@@tokenCookie @TO@ VariableDeclarationFragment@@tokenCookie=this.response.getCookie(CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME) @AT@ 6761 @LENGTH@ 11
---------INS MethodInvocation@@this.response.getCookie(CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME) @TO@ VariableDeclarationFragment@@tokenCookie=this.response.getCookie(CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME) @AT@ 6775 @LENGTH@ 80
------------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.getCookie(CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME) @AT@ 6775 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 6775 @LENGTH@ 4
---------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 6780 @LENGTH@ 8
------------INS SimpleName@@MethodName:getCookie:[CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME] @TO@ MethodInvocation@@this.response.getCookie(CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME) @AT@ 6794 @LENGTH@ 61
---------------INS QualifiedName@@CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME @TO@ SimpleName@@MethodName:getCookie:[CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME] @AT@ 6804 @LENGTH@ 50
------------------INS SimpleName@@CookieCsrfTokenRepository @TO@ QualifiedName@@CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME @AT@ 6804 @LENGTH@ 25
------------------INS SimpleName@@DEFAULT_CSRF_COOKIE_NAME @TO@ QualifiedName@@CookieCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME @AT@ 6830 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:assertThat(tokenCookie.getDomain()).isEqualTo(domainName) @TO@ MethodDeclaration@@public, void, MethodName:saveTokenWithCookieDomain,  @AT@ 6860 @LENGTH@ 58
------INS MethodInvocation@@assertThat(tokenCookie.getDomain()).isEqualTo(domainName) @TO@ ExpressionStatement@@MethodInvocation:assertThat(tokenCookie.getDomain()).isEqualTo(domainName) @AT@ 6860 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:assertThat:[tokenCookie.getDomain()] @TO@ MethodInvocation@@assertThat(tokenCookie.getDomain()).isEqualTo(domainName) @AT@ 6860 @LENGTH@ 35
------------INS MethodInvocation@@tokenCookie.getDomain() @TO@ MethodInvocation@@MethodName:assertThat:[tokenCookie.getDomain()] @AT@ 6871 @LENGTH@ 23
---------------INS SimpleName@@Name:tokenCookie @TO@ MethodInvocation@@tokenCookie.getDomain() @AT@ 6871 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getDomain:[] @TO@ MethodInvocation@@tokenCookie.getDomain() @AT@ 6883 @LENGTH@ 11
---------INS SimpleName@@MethodName:isEqualTo:[domainName] @TO@ MethodInvocation@@assertThat(tokenCookie.getDomain()).isEqualTo(domainName) @AT@ 6896 @LENGTH@ 21
------------INS SimpleName@@domainName @TO@ SimpleName@@MethodName:isEqualTo:[domainName] @AT@ 6906 @LENGTH@ 10


UPD ReturnStatement@@QualifiedName:ModelJAXBContextFactoryHolder.INSTANCE @TO@ QualifiedName:ModelJAXBContextFactoryHolder.defaultInstance @AT@ 11632 @LENGTH@ 46
---UPD QualifiedName@@ModelJAXBContextFactoryHolder.INSTANCE @TO@ ModelJAXBContextFactoryHolder.defaultInstance @AT@ 11639 @LENGTH@ 38
------UPD SimpleName@@INSTANCE @TO@ defaultInstance @AT@ 11669 @LENGTH@ 8


UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 3055 @LENGTH@ 13
---UPD BooleanLiteral@@false @TO@ true @AT@ 3062 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestWithValidPkceClientThenResolves,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]DefaultServerOAuth2AuthorizationRequestResolverTests,  @AT@ 3674 @LENGTH@ 885
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestWithValidPkceClientThenResolves,  @AT@ 3674 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestWithValidPkceClientThenResolves,  @AT@ 3681 @LENGTH@ 4
---INS SimpleName@@MethodName:resolveWhenAuthorizationRequestWithValidPkceClientThenResolves @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestWithValidPkceClientThenResolves,  @AT@ 3686 @LENGTH@ 62
---INS ExpressionStatement@@MethodInvocation:when(this.clientRegistrationRepository.findByRegistrationId(any())).thenReturn(Mono.just(TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build())) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestWithValidPkceClientThenResolves,  @AT@ 3755 @LENGTH@ 249
------INS MethodInvocation@@when(this.clientRegistrationRepository.findByRegistrationId(any())).thenReturn(Mono.just(TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build())) @TO@ ExpressionStatement@@MethodInvocation:when(this.clientRegistrationRepository.findByRegistrationId(any())).thenReturn(Mono.just(TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build())) @AT@ 3755 @LENGTH@ 248
---------INS MethodInvocation@@MethodName:when:[this.clientRegistrationRepository.findByRegistrationId(any())] @TO@ MethodInvocation@@when(this.clientRegistrationRepository.findByRegistrationId(any())).thenReturn(Mono.just(TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build())) @AT@ 3755 @LENGTH@ 67
------------INS MethodInvocation@@this.clientRegistrationRepository.findByRegistrationId(any()) @TO@ MethodInvocation@@MethodName:when:[this.clientRegistrationRepository.findByRegistrationId(any())] @AT@ 3760 @LENGTH@ 61
---------------INS FieldAccess@@this.clientRegistrationRepository @TO@ MethodInvocation@@this.clientRegistrationRepository.findByRegistrationId(any()) @AT@ 3760 @LENGTH@ 33
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistrationRepository @AT@ 3760 @LENGTH@ 4
------------------INS SimpleName@@clientRegistrationRepository @TO@ FieldAccess@@this.clientRegistrationRepository @AT@ 3765 @LENGTH@ 28
---------------INS SimpleName@@MethodName:findByRegistrationId:[any()] @TO@ MethodInvocation@@this.clientRegistrationRepository.findByRegistrationId(any()) @AT@ 3794 @LENGTH@ 27
------------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:findByRegistrationId:[any()] @AT@ 3815 @LENGTH@ 5
---------INS SimpleName@@MethodName:thenReturn:[Mono.just(TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build())] @TO@ MethodInvocation@@when(this.clientRegistrationRepository.findByRegistrationId(any())).thenReturn(Mono.just(TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build())) @AT@ 3823 @LENGTH@ 180
------------INS MethodInvocation@@Mono.just(TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build()) @TO@ SimpleName@@MethodName:thenReturn:[Mono.just(TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build())] @AT@ 3839 @LENGTH@ 163
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.just(TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build()) @AT@ 3839 @LENGTH@ 4
---------------INS SimpleName@@MethodName:just:[TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build()] @TO@ MethodInvocation@@Mono.just(TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build()) @AT@ 3844 @LENGTH@ 158
------------------INS MethodInvocation@@TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build() @TO@ SimpleName@@MethodName:just:[TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build()] @AT@ 3849 @LENGTH@ 152
---------------------INS MethodInvocation@@MethodName:clientSecret:[null] @TO@ MethodInvocation@@TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build() @AT@ 3849 @LENGTH@ 137
------------------------INS NullLiteral@@null @TO@ MethodInvocation@@MethodName:clientSecret:[null] @AT@ 3981 @LENGTH@ 4
---------------------INS MethodInvocation@@MethodName:clientAuthenticationMethod:[ClientAuthenticationMethod.NONE] @TO@ MethodInvocation@@TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build() @AT@ 3849 @LENGTH@ 111
------------------------INS QualifiedName@@ClientAuthenticationMethod.NONE @TO@ MethodInvocation@@MethodName:clientAuthenticationMethod:[ClientAuthenticationMethod.NONE] @AT@ 3928 @LENGTH@ 31
---------------------------INS SimpleName@@ClientAuthenticationMethod @TO@ QualifiedName@@ClientAuthenticationMethod.NONE @AT@ 3928 @LENGTH@ 26
---------------------------INS SimpleName@@NONE @TO@ QualifiedName@@ClientAuthenticationMethod.NONE @AT@ 3955 @LENGTH@ 4
---------------------INS MethodInvocation@@MethodName:clientRegistration:[] @TO@ MethodInvocation@@TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build() @AT@ 3849 @LENGTH@ 44
---------------------INS SimpleName@@Name:TestClientRegistrations @TO@ MethodInvocation@@TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build() @AT@ 3849 @LENGTH@ 23
---------------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@TestClientRegistrations.clientRegistration().clientAuthenticationMethod(ClientAuthenticationMethod.NONE).clientSecret(null).build() @AT@ 3994 @LENGTH@ 7
---INS VariableDeclarationStatement@@OAuth2AuthorizationRequest request=resolve("/oauth2/authorization/registration-id"); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestWithValidPkceClientThenResolves,  @AT@ 4008 @LENGTH@ 86
------INS SimpleType@@OAuth2AuthorizationRequest @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest request=resolve("/oauth2/authorization/registration-id"); @AT@ 4008 @LENGTH@ 26
------INS VariableDeclarationFragment@@request=resolve("/oauth2/authorization/registration-id") @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest request=resolve("/oauth2/authorization/registration-id"); @AT@ 4035 @LENGTH@ 58
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=resolve("/oauth2/authorization/registration-id") @AT@ 4035 @LENGTH@ 7
---------INS MethodInvocation@@resolve("/oauth2/authorization/registration-id") @TO@ VariableDeclarationFragment@@request=resolve("/oauth2/authorization/registration-id") @AT@ 4045 @LENGTH@ 48
------------INS SimpleName@@MethodName:resolve:["/oauth2/authorization/registration-id"] @TO@ MethodInvocation@@resolve("/oauth2/authorization/registration-id") @AT@ 4045 @LENGTH@ 48
---------------INS StringLiteral@@"/oauth2/authorization/registration-id" @TO@ SimpleName@@MethodName:resolve:["/oauth2/authorization/registration-id"] @AT@ 4053 @LENGTH@ 39
---INS ExpressionStatement@@MethodInvocation:assertThat((String)request.getAttribute(PkceParameterNames.CODE_VERIFIER)).matches("^([a-zA-Z0-9\\-\\.\\_\\~]){128}$") @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestWithValidPkceClientThenResolves,  @AT@ 4098 @LENGTH@ 120
------INS MethodInvocation@@assertThat((String)request.getAttribute(PkceParameterNames.CODE_VERIFIER)).matches("^([a-zA-Z0-9\\-\\.\\_\\~]){128}$") @TO@ ExpressionStatement@@MethodInvocation:assertThat((String)request.getAttribute(PkceParameterNames.CODE_VERIFIER)).matches("^([a-zA-Z0-9\\-\\.\\_\\~]){128}$") @AT@ 4098 @LENGTH@ 119
---------INS MethodInvocation@@MethodName:assertThat:[(String)request.getAttribute(PkceParameterNames.CODE_VERIFIER)] @TO@ MethodInvocation@@assertThat((String)request.getAttribute(PkceParameterNames.CODE_VERIFIER)).matches("^([a-zA-Z0-9\\-\\.\\_\\~]){128}$") @AT@ 4098 @LENGTH@ 75
------------INS CastExpression@@(String)request.getAttribute(PkceParameterNames.CODE_VERIFIER) @TO@ MethodInvocation@@MethodName:assertThat:[(String)request.getAttribute(PkceParameterNames.CODE_VERIFIER)] @AT@ 4109 @LENGTH@ 63
---------------INS SimpleType@@String @TO@ CastExpression@@(String)request.getAttribute(PkceParameterNames.CODE_VERIFIER) @AT@ 4110 @LENGTH@ 6
---------------INS MethodInvocation@@request.getAttribute(PkceParameterNames.CODE_VERIFIER) @TO@ CastExpression@@(String)request.getAttribute(PkceParameterNames.CODE_VERIFIER) @AT@ 4118 @LENGTH@ 54
------------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getAttribute(PkceParameterNames.CODE_VERIFIER) @AT@ 4118 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getAttribute:[PkceParameterNames.CODE_VERIFIER] @TO@ MethodInvocation@@request.getAttribute(PkceParameterNames.CODE_VERIFIER) @AT@ 4126 @LENGTH@ 46
---------------------INS QualifiedName@@PkceParameterNames.CODE_VERIFIER @TO@ SimpleName@@MethodName:getAttribute:[PkceParameterNames.CODE_VERIFIER] @AT@ 4139 @LENGTH@ 32
------------------------INS SimpleName@@PkceParameterNames @TO@ QualifiedName@@PkceParameterNames.CODE_VERIFIER @AT@ 4139 @LENGTH@ 18
------------------------INS SimpleName@@CODE_VERIFIER @TO@ QualifiedName@@PkceParameterNames.CODE_VERIFIER @AT@ 4158 @LENGTH@ 13
---------INS SimpleName@@MethodName:matches:["^([a-zA-Z0-9\\-\\.\\_\\~]){128}$"] @TO@ MethodInvocation@@assertThat((String)request.getAttribute(PkceParameterNames.CODE_VERIFIER)).matches("^([a-zA-Z0-9\\-\\.\\_\\~]){128}$") @AT@ 4174 @LENGTH@ 43
------------INS StringLiteral@@"^([a-zA-Z0-9\\-\\.\\_\\~]){128}$" @TO@ SimpleName@@MethodName:matches:["^([a-zA-Z0-9\\-\\.\\_\\~]){128}$"] @AT@ 4182 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:assertThat(request.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}") @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestWithValidPkceClientThenResolves,  @AT@ 4222 @LENGTH@ 334
------INS MethodInvocation@@assertThat(request.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}") @TO@ ExpressionStatement@@MethodInvocation:assertThat(request.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}") @AT@ 4222 @LENGTH@ 333
---------INS MethodInvocation@@MethodName:assertThat:[request.getAuthorizationRequestUri()] @TO@ MethodInvocation@@assertThat(request.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}") @AT@ 4222 @LENGTH@ 48
------------INS MethodInvocation@@request.getAuthorizationRequestUri() @TO@ MethodInvocation@@MethodName:assertThat:[request.getAuthorizationRequestUri()] @AT@ 4233 @LENGTH@ 36
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getAuthorizationRequestUri() @AT@ 4233 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getAuthorizationRequestUri:[] @TO@ MethodInvocation@@request.getAuthorizationRequestUri() @AT@ 4241 @LENGTH@ 28
---------INS SimpleName@@MethodName:matches:["https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}"] @TO@ MethodInvocation@@assertThat(request.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}") @AT@ 4271 @LENGTH@ 284
------------INS InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}" @TO@ SimpleName@@MethodName:matches:["https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}"] @AT@ 4279 @LENGTH@ 275
---------------INS StringLiteral@@"https://example.com/login/oauth/authorize\\?" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}" @AT@ 4279 @LENGTH@ 46
---------------INS Operator@@+ @TO@ InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}" @AT@ 4325 @LENGTH@ 1
---------------INS StringLiteral@@"response_type=code&client_id=client-id&" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}" @AT@ 4332 @LENGTH@ 41
---------------INS StringLiteral@@"scope=read:user&state=.*?&" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}" @AT@ 4380 @LENGTH@ 28
---------------INS StringLiteral@@"redirect_uri=/login/oauth2/code/registration-id&" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}" @AT@ 4415 @LENGTH@ 50
---------------INS StringLiteral@@"code_challenge_method=S256&" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}" @AT@ 4472 @LENGTH@ 29
---------------INS StringLiteral@@"code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id&"+ "code_challenge_method=S256&"+ "code_challenge=([a-zA-Z0-9\\-\\.\\_\\~]){43}" @AT@ 4508 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(configuration,options) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 2385 @LENGTH@ 59
---UPD MethodInvocation@@IntrospectionSupport.setProperties(configuration,options) @TO@ PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 2385 @LENGTH@ 58
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 2385 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[configuration, options] @TO@ MethodName:bindProperties:[context, configuration, options] @AT@ 2406 @LENGTH@ 37
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:setProperties:[configuration, options] @AT@ 2425 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertTrue(xml.contains("<stepStat id=\"foo\" index=\"1\"")) @TO@ MethodInvocation:assertTrue(xml.contains("<stepStat id=\"foo\"")) @AT@ 3341 @LENGTH@ 61
---UPD MethodInvocation@@assertTrue(xml.contains("<stepStat id=\"foo\" index=\"1\"")) @TO@ assertTrue(xml.contains("<stepStat id=\"foo\"")) @AT@ 3341 @LENGTH@ 60
------UPD SimpleName@@MethodName:assertTrue:[xml.contains("<stepStat id=\"foo\" index=\"1\"")] @TO@ MethodName:assertTrue:[xml.contains("<stepStat id=\"foo\"")] @AT@ 3341 @LENGTH@ 60
---------UPD MethodInvocation@@xml.contains("<stepStat id=\"foo\" index=\"1\"") @TO@ xml.contains("<stepStat id=\"foo\"") @AT@ 3352 @LENGTH@ 48
------------UPD SimpleName@@MethodName:contains:["<stepStat id=\"foo\" index=\"1\""] @TO@ MethodName:contains:["<stepStat id=\"foo\""] @AT@ 3356 @LENGTH@ 44
---------------UPD StringLiteral@@"<stepStat id=\"foo\" index=\"1\"" @TO@ "<stepStat id=\"foo\"" @AT@ 3365 @LENGTH@ 34


INS MethodDeclaration@@public, FunctionInvocation, MethodName:internalId,  @TO@ TypeDeclaration@@[public]Node, [PatternElement, Named, Expression] @AT@ 3115 @LENGTH@ 72
---INS Modifier@@public @TO@ MethodDeclaration@@public, FunctionInvocation, MethodName:internalId,  @AT@ 3115 @LENGTH@ 6
---INS SimpleType@@FunctionInvocation @TO@ MethodDeclaration@@public, FunctionInvocation, MethodName:internalId,  @AT@ 3122 @LENGTH@ 18
---INS SimpleName@@MethodName:internalId @TO@ MethodDeclaration@@public, FunctionInvocation, MethodName:internalId,  @AT@ 3141 @LENGTH@ 10
---INS ReturnStatement@@MethodInvocation:Functions.id(this) @TO@ MethodDeclaration@@public, FunctionInvocation, MethodName:internalId,  @AT@ 3158 @LENGTH@ 26
------INS MethodInvocation@@Functions.id(this) @TO@ ReturnStatement@@MethodInvocation:Functions.id(this) @AT@ 3165 @LENGTH@ 18
---------INS SimpleName@@Name:Functions @TO@ MethodInvocation@@Functions.id(this) @AT@ 3165 @LENGTH@ 9
---------INS SimpleName@@MethodName:id:[this] @TO@ MethodInvocation@@Functions.id(this) @AT@ 3175 @LENGTH@ 8
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:id:[this] @AT@ 3178 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertTrue("Size should be around 50",(template.getCurrentCacheSize() <= 51)) @TO@ MethodInvocation:assertTrue("Size should be around 50",template.getCurrentCacheSize() <= 51) @AT@ 2211 @LENGTH@ 79
---UPD MethodInvocation@@assertTrue("Size should be around 50",(template.getCurrentCacheSize() <= 51)) @TO@ assertTrue("Size should be around 50",template.getCurrentCacheSize() <= 51) @AT@ 2211 @LENGTH@ 78
------UPD SimpleName@@MethodName:assertTrue:["Size should be around 50", (template.getCurrentCacheSize() <= 51)] @TO@ MethodName:assertTrue:["Size should be around 50", template.getCurrentCacheSize() <= 51] @AT@ 2211 @LENGTH@ 78
---------DEL ParenthesizedExpression@@(template.getCurrentCacheSize() <= 51) @AT@ 2250 @LENGTH@ 38
---------MOV InfixExpression@@template.getCurrentCacheSize() <= 51 @TO@ SimpleName@@MethodName:assertTrue:["Size should be around 50", (template.getCurrentCacheSize() <= 51)] @AT@ 2251 @LENGTH@ 36


UPD IfStatement@@if (!expectedNonceSignature.equals(nonceTokens[1])) {  new BadCredentialsException(DigestAuthenticationFilter.this.messages.getMessage("DigestAuthenticationFilter.nonceCompromised",new Object[]{nonceAsPlainText},"Nonce token compromised {0}"));} @TO@ if (!expectedNonceSignature.equals(nonceTokens[1])) {  throw new BadCredentialsException(DigestAuthenticationFilter.this.messages.getMessage("DigestAuthenticationFilter.nonceCompromised",new Object[]{nonceAsPlainText},"Nonce token compromised {0}"));} @AT@ 16906 @LENGTH@ 280
---UPD Block@@ThenBody:{  new BadCredentialsException(DigestAuthenticationFilter.this.messages.getMessage("DigestAuthenticationFilter.nonceCompromised",new Object[]{nonceAsPlainText},"Nonce token compromised {0}"));} @TO@ ThenBody:{  throw new BadCredentialsException(DigestAuthenticationFilter.this.messages.getMessage("DigestAuthenticationFilter.nonceCompromised",new Object[]{nonceAsPlainText},"Nonce token compromised {0}"));} @AT@ 16958 @LENGTH@ 228
------INS ThrowStatement@@ClassInstanceCreation:new BadCredentialsException(DigestAuthenticationFilter.this.messages.getMessage("DigestAuthenticationFilter.nonceCompromised",new Object[]{nonceAsPlainText},"Nonce token compromised {0}")) @TO@ Block@@ThenBody:{  new BadCredentialsException(DigestAuthenticationFilter.this.messages.getMessage("DigestAuthenticationFilter.nonceCompromised",new Object[]{nonceAsPlainText},"Nonce token compromised {0}"));} @AT@ 16964 @LENGTH@ 223
---------MOV ClassInstanceCreation@@BadCredentialsException[DigestAuthenticationFilter.this.messages.getMessage("DigestAuthenticationFilter.nonceCompromised",new Object[]{nonceAsPlainText},"Nonce token compromised {0}")] @TO@ ThrowStatement@@ClassInstanceCreation:new BadCredentialsException(DigestAuthenticationFilter.this.messages.getMessage("DigestAuthenticationFilter.nonceCompromised",new Object[]{nonceAsPlainText},"Nonce token compromised {0}")) @AT@ 16964 @LENGTH@ 216
------DEL ExpressionStatement@@ClassInstanceCreation:new BadCredentialsException(DigestAuthenticationFilter.this.messages.getMessage("DigestAuthenticationFilter.nonceCompromised",new Object[]{nonceAsPlainText},"Nonce token compromised {0}")) @AT@ 16964 @LENGTH@ 217


UPD ReturnStatement@@MethodInvocation:getExecutorServiceArchiveBase().addClasses(AtomicTransactionExecutionService.class,AtomicTransactionRemoteService.class,TransactionParticipant.class).addAsManifestResource(PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve")),"permissions.xml") @TO@ MethodInvocation:getExecutorServiceArchiveBase().addClasses(AtomicTransactionExecutionService.class,AtomicTransactionRemoteService.class,TransactionParticipant.class).addAsManifestResource(PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve"),new RuntimePermission("getClassLoader")),"permissions.xml") @AT@ 2135 @LENGTH@ 376
---UPD MethodInvocation@@getExecutorServiceArchiveBase().addClasses(AtomicTransactionExecutionService.class,AtomicTransactionRemoteService.class,TransactionParticipant.class).addAsManifestResource(PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve")),"permissions.xml") @TO@ getExecutorServiceArchiveBase().addClasses(AtomicTransactionExecutionService.class,AtomicTransactionRemoteService.class,TransactionParticipant.class).addAsManifestResource(PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve"),new RuntimePermission("getClassLoader")),"permissions.xml") @AT@ 2142 @LENGTH@ 368
------UPD SimpleName@@MethodName:addAsManifestResource:[PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve")), "permissions.xml"] @TO@ MethodName:addAsManifestResource:[PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve"),new RuntimePermission("getClassLoader")), "permissions.xml"] @AT@ 2327 @LENGTH@ 183
---------UPD MethodInvocation@@PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve")) @TO@ PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve"),new RuntimePermission("getClassLoader")) @AT@ 2349 @LENGTH@ 141
------------UPD SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission(serverHostPort,"connect, resolve")] @TO@ MethodName:createPermissionsXmlAsset:[new SocketPermission(serverHostPort,"connect, resolve"), new RuntimePermission("getClassLoader")] @AT@ 2365 @LENGTH@ 125
---------------INS ClassInstanceCreation@@RuntimePermission["getClassLoader"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission(serverHostPort,"connect, resolve")] @AT@ 2498 @LENGTH@ 39
------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimePermission["getClassLoader"] @AT@ 2498 @LENGTH@ 3
------------------INS SimpleType@@RuntimePermission @TO@ ClassInstanceCreation@@RuntimePermission["getClassLoader"] @AT@ 2502 @LENGTH@ 17
------------------INS StringLiteral@@"getClassLoader" @TO@ ClassInstanceCreation@@RuntimePermission["getClassLoader"] @AT@ 2520 @LENGTH@ 16


DEL FieldDeclaration@@private, static, final, int, [WAIT_TIME=1] @AT@ 1444 @LENGTH@ 39
---DEL Modifier@@private @AT@ 1444 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1452 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1459 @LENGTH@ 5
---DEL PrimitiveType@@int @AT@ 1465 @LENGTH@ 3
---DEL VariableDeclarationFragment@@WAIT_TIME=1 @AT@ 1469 @LENGTH@ 13
------DEL SimpleName@@WAIT_TIME @AT@ 1469 @LENGTH@ 9
------DEL NumberLiteral@@1 @AT@ 1481 @LENGTH@ 1


UPD IfStatement@@if (this.channelList.contains(proxy)) {  this.channelList.remove(proxy);} @TO@ if (this.channelList.contains(proxy)) {  this.channelList.remove(proxy);} else {  releasePermitIfNecessary(proxy);} @AT@ 44399 @LENGTH@ 86
---INS Block@@ElseBody:{  releasePermitIfNecessary(proxy);} @TO@ IfStatement@@if (this.channelList.contains(proxy)) {  this.channelList.remove(proxy);} @AT@ 44497 @LENGTH@ 49
------INS ExpressionStatement@@MethodInvocation:releasePermitIfNecessary(proxy) @TO@ Block@@ElseBody:{  releasePermitIfNecessary(proxy);} @AT@ 44506 @LENGTH@ 32
---------INS MethodInvocation@@releasePermitIfNecessary(proxy) @TO@ ExpressionStatement@@MethodInvocation:releasePermitIfNecessary(proxy) @AT@ 44506 @LENGTH@ 31
------------INS SimpleName@@MethodName:releasePermitIfNecessary:[proxy] @TO@ MethodInvocation@@releasePermitIfNecessary(proxy) @AT@ 44506 @LENGTH@ 31
---------------INS SimpleName@@proxy @TO@ SimpleName@@MethodName:releasePermitIfNecessary:[proxy] @AT@ 44531 @LENGTH@ 5


UPD FieldDeclaration@@private, static, final, String, [GEMFIRE_LOG_LEVEL="error"] @TO@ private, static, final, String, [GEMFIRE_LOG_LEVEL="config"] @AT@ 1738 @LENGTH@ 56
---UPD VariableDeclarationFragment@@GEMFIRE_LOG_LEVEL="error" @TO@ GEMFIRE_LOG_LEVEL="config" @AT@ 1766 @LENGTH@ 27
------UPD StringLiteral@@"error" @TO@ "config" @AT@ 1786 @LENGTH@ 7


UPD IfStatement@@if (result instanceof ClientEntity) {  splitResult.add(result);} @TO@ if (result instanceof ClientValue && ((ClientValue)result).isCollection()) {  ClientValue value=(ClientValue)result;  ClientCollectionValue<ClientValue> collection=value.asCollection();  collection.forEach(v -> {    splitResult.add(v);  });} else {  splitResult.add(result);} @AT@ 5896 @LENGTH@ 84
---DEL InstanceofExpression@@result instanceof ClientEntity @AT@ 5900 @LENGTH@ 30
---UPD Block@@ThenBody:{  splitResult.add(result);} @TO@ ElseBody:{  splitResult.add(result);} @AT@ 5932 @LENGTH@ 48
---INS InfixExpression@@result instanceof ClientValue && ((ClientValue)result).isCollection() @TO@ IfStatement@@if (result instanceof ClientEntity) {  splitResult.add(result);} @AT@ 5966 @LENGTH@ 70
------INS InstanceofExpression@@result instanceof ClientValue @TO@ InfixExpression@@result instanceof ClientValue && ((ClientValue)result).isCollection() @AT@ 5966 @LENGTH@ 29
---------MOV SimpleName@@result @TO@ InstanceofExpression@@result instanceof ClientValue @AT@ 5900 @LENGTH@ 6
---------MOV SimpleName@@result @TO@ InstanceofExpression@@result instanceof ClientValue @AT@ 5900 @LENGTH@ 6
---------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@result instanceof ClientValue @AT@ 5907 @LENGTH@ 10
---------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@result instanceof ClientValue @AT@ 5907 @LENGTH@ 10
---------MOV SimpleType@@ClientEntity @TO@ InstanceofExpression@@result instanceof ClientValue @AT@ 5918 @LENGTH@ 12
---------MOV SimpleType@@ClientEntity @TO@ InstanceofExpression@@result instanceof ClientValue @AT@ 5918 @LENGTH@ 12
------INS Operator@@&& @TO@ InfixExpression@@result instanceof ClientValue && ((ClientValue)result).isCollection() @AT@ 5995 @LENGTH@ 2
------INS MethodInvocation@@((ClientValue)result).isCollection() @TO@ InfixExpression@@result instanceof ClientValue && ((ClientValue)result).isCollection() @AT@ 5999 @LENGTH@ 37
---------INS ParenthesizedExpression@@((ClientValue)result) @TO@ MethodInvocation@@((ClientValue)result).isCollection() @AT@ 5999 @LENGTH@ 22
------------INS CastExpression@@(ClientValue)result @TO@ ParenthesizedExpression@@((ClientValue)result) @AT@ 6000 @LENGTH@ 20
---------------INS SimpleType@@ClientValue @TO@ CastExpression@@(ClientValue)result @AT@ 6001 @LENGTH@ 11
---------------INS SimpleName@@result @TO@ CastExpression@@(ClientValue)result @AT@ 6014 @LENGTH@ 6
---------INS SimpleName@@MethodName:isCollection:[] @TO@ MethodInvocation@@((ClientValue)result).isCollection() @AT@ 6022 @LENGTH@ 14
---INS Block@@ThenBody:{  ClientValue value=(ClientValue)result;  ClientCollectionValue<ClientValue> collection=value.asCollection();  collection.forEach(v -> {    splitResult.add(v);  });} @TO@ IfStatement@@if (result instanceof ClientEntity) {  splitResult.add(result);} @AT@ 6038 @LENGTH@ 237
------INS VariableDeclarationStatement@@ClientValue value=(ClientValue)result; @TO@ Block@@ThenBody:{  ClientValue value=(ClientValue)result;  ClientCollectionValue<ClientValue> collection=value.asCollection();  collection.forEach(v -> {    splitResult.add(v);  });} @AT@ 6052 @LENGTH@ 41
---------INS SimpleType@@ClientValue @TO@ VariableDeclarationStatement@@ClientValue value=(ClientValue)result; @AT@ 6052 @LENGTH@ 11
---------INS VariableDeclarationFragment@@value=(ClientValue)result @TO@ VariableDeclarationStatement@@ClientValue value=(ClientValue)result; @AT@ 6064 @LENGTH@ 28
------------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=(ClientValue)result @AT@ 6064 @LENGTH@ 5
------------INS CastExpression@@(ClientValue)result @TO@ VariableDeclarationFragment@@value=(ClientValue)result @AT@ 6072 @LENGTH@ 20
---------------INS SimpleType@@ClientValue @TO@ CastExpression@@(ClientValue)result @AT@ 6073 @LENGTH@ 11
---------------INS SimpleName@@result @TO@ CastExpression@@(ClientValue)result @AT@ 6086 @LENGTH@ 6
------INS VariableDeclarationStatement@@ClientCollectionValue<ClientValue> collection=value.asCollection(); @TO@ Block@@ThenBody:{  ClientValue value=(ClientValue)result;  ClientCollectionValue<ClientValue> collection=value.asCollection();  collection.forEach(v -> {    splitResult.add(v);  });} @AT@ 6106 @LENGTH@ 69
---------INS ParameterizedType@@ClientCollectionValue<ClientValue> @TO@ VariableDeclarationStatement@@ClientCollectionValue<ClientValue> collection=value.asCollection(); @AT@ 6106 @LENGTH@ 34
------------INS SimpleType@@ClientCollectionValue @TO@ ParameterizedType@@ClientCollectionValue<ClientValue> @AT@ 6106 @LENGTH@ 21
------------INS SimpleType@@ClientValue @TO@ ParameterizedType@@ClientCollectionValue<ClientValue> @AT@ 6128 @LENGTH@ 11
---------INS VariableDeclarationFragment@@collection=value.asCollection() @TO@ VariableDeclarationStatement@@ClientCollectionValue<ClientValue> collection=value.asCollection(); @AT@ 6141 @LENGTH@ 33
------------INS SimpleName@@collection @TO@ VariableDeclarationFragment@@collection=value.asCollection() @AT@ 6141 @LENGTH@ 10
------------INS MethodInvocation@@value.asCollection() @TO@ VariableDeclarationFragment@@collection=value.asCollection() @AT@ 6154 @LENGTH@ 20
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.asCollection() @AT@ 6154 @LENGTH@ 5
---------------INS SimpleName@@MethodName:asCollection:[] @TO@ MethodInvocation@@value.asCollection() @AT@ 6160 @LENGTH@ 14
------INS ExpressionStatement@@MethodInvocation:collection.forEach(v -> {
  splitResult.add(v);
}
) @TO@ Block@@ThenBody:{  ClientValue value=(ClientValue)result;  ClientCollectionValue<ClientValue> collection=value.asCollection();  collection.forEach(v -> {    splitResult.add(v);  });} @AT@ 6188 @LENGTH@ 77
---------INS MethodInvocation@@collection.forEach(v -> {
  splitResult.add(v);
}
) @TO@ ExpressionStatement@@MethodInvocation:collection.forEach(v -> {
  splitResult.add(v);
}
) @AT@ 6188 @LENGTH@ 76
------------INS SimpleName@@Name:collection @TO@ MethodInvocation@@collection.forEach(v -> {
  splitResult.add(v);
}
) @AT@ 6188 @LENGTH@ 10
------------INS SimpleName@@MethodName:forEach:[v -> {
  splitResult.add(v);
}
] @TO@ MethodInvocation@@collection.forEach(v -> {
  splitResult.add(v);
}
) @AT@ 6199 @LENGTH@ 65
---------------INS LambdaExpression@@v -> {
  splitResult.add(v);
}
 @TO@ SimpleName@@MethodName:forEach:[v -> {
  splitResult.add(v);
}
] @AT@ 6207 @LENGTH@ 56
------------------INS VariableDeclarationFragment@@v @TO@ LambdaExpression@@v -> {
  splitResult.add(v);
}
 @AT@ 6207 @LENGTH@ 1
---------------------INS SimpleName@@v @TO@ VariableDeclarationFragment@@v @AT@ 6207 @LENGTH@ 1
---------------------INS SimpleName@@v @TO@ VariableDeclarationFragment@@v @AT@ 6207 @LENGTH@ 1
------------------INS ExpressionStatement@@MethodInvocation:splitResult.add(v) @TO@ LambdaExpression@@v -> {
  splitResult.add(v);
}
 @AT@ 6230 @LENGTH@ 19
---------------------INS MethodInvocation@@splitResult.add(v) @TO@ ExpressionStatement@@MethodInvocation:splitResult.add(v) @AT@ 6230 @LENGTH@ 18
------------------------INS SimpleName@@Name:splitResult @TO@ MethodInvocation@@splitResult.add(v) @AT@ 6230 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:add:[v] @TO@ MethodInvocation@@splitResult.add(v) @AT@ 6242 @LENGTH@ 6
---------------------------INS SimpleName@@v @TO@ SimpleName@@MethodName:add:[v] @AT@ 6246 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:Assert.isTrue(clockSkew.getSeconds() >= 0,"clockSkew must be >= 0") @TO@ MethodDeclaration@@public, final, void, MethodName:setClockSkew, Duration clockSkew,  @AT@ 5830 @LENGTH@ 69
---INS MethodInvocation@@Assert.isTrue(clockSkew.getSeconds() >= 0,"clockSkew must be >= 0") @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue(clockSkew.getSeconds() >= 0,"clockSkew must be >= 0") @AT@ 5830 @LENGTH@ 68
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue(clockSkew.getSeconds() >= 0,"clockSkew must be >= 0") @AT@ 5830 @LENGTH@ 6
------INS SimpleName@@MethodName:isTrue:[clockSkew.getSeconds() >= 0, "clockSkew must be >= 0"] @TO@ MethodInvocation@@Assert.isTrue(clockSkew.getSeconds() >= 0,"clockSkew must be >= 0") @AT@ 5837 @LENGTH@ 61
---------INS InfixExpression@@clockSkew.getSeconds() >= 0 @TO@ SimpleName@@MethodName:isTrue:[clockSkew.getSeconds() >= 0, "clockSkew must be >= 0"] @AT@ 5844 @LENGTH@ 27
------------INS MethodInvocation@@clockSkew.getSeconds() @TO@ InfixExpression@@clockSkew.getSeconds() >= 0 @AT@ 5844 @LENGTH@ 22
---------------INS SimpleName@@Name:clockSkew @TO@ MethodInvocation@@clockSkew.getSeconds() @AT@ 5844 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getSeconds:[] @TO@ MethodInvocation@@clockSkew.getSeconds() @AT@ 5854 @LENGTH@ 12
------------INS Operator@@>= @TO@ InfixExpression@@clockSkew.getSeconds() >= 0 @AT@ 5866 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@clockSkew.getSeconds() >= 0 @AT@ 5870 @LENGTH@ 1
---------INS StringLiteral@@"clockSkew must be >= 0" @TO@ SimpleName@@MethodName:isTrue:[clockSkew.getSeconds() >= 0, "clockSkew must be >= 0"] @AT@ 5873 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:registry.put("someSeqNumProv",sequenceNumberProvider) @TO@ MethodInvocation:registry.bind("someSeqNumProv",sequenceNumberProvider) @AT@ 1988 @LENGTH@ 55
---UPD MethodInvocation@@registry.put("someSeqNumProv",sequenceNumberProvider) @TO@ registry.bind("someSeqNumProv",sequenceNumberProvider) @AT@ 1988 @LENGTH@ 54
------UPD SimpleName@@MethodName:put:["someSeqNumProv", sequenceNumberProvider] @TO@ MethodName:bind:["someSeqNumProv", sequenceNumberProvider] @AT@ 1997 @LENGTH@ 45


MOV ExpressionStatement@@MethodInvocation:delegate.addShutdownListener(this) @TO@ MethodDeclaration@@public, voidMethodName:PublisherCallbackChannelImpl, Channel delegate, ExecutorService executor,  @AT@ 4787 @LENGTH@ 35


INS FieldDeclaration@@private, static, final, String, [FEATURE_POLICY_HEADER="Feature-Policy"] @TO@ TypeDeclaration@@[public]FeaturePolicyHeaderWriterTests,  @AT@ 1341 @LENGTH@ 69
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [FEATURE_POLICY_HEADER="Feature-Policy"] @AT@ 1341 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [FEATURE_POLICY_HEADER="Feature-Policy"] @AT@ 1349 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [FEATURE_POLICY_HEADER="Feature-Policy"] @AT@ 1356 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [FEATURE_POLICY_HEADER="Feature-Policy"] @AT@ 1362 @LENGTH@ 6
---INS VariableDeclarationFragment@@FEATURE_POLICY_HEADER="Feature-Policy" @TO@ FieldDeclaration@@private, static, final, String, [FEATURE_POLICY_HEADER="Feature-Policy"] @AT@ 1369 @LENGTH@ 40
------INS SimpleName@@FEATURE_POLICY_HEADER @TO@ VariableDeclarationFragment@@FEATURE_POLICY_HEADER="Feature-Policy" @AT@ 1369 @LENGTH@ 21
------INS StringLiteral@@"Feature-Policy" @TO@ VariableDeclarationFragment@@FEATURE_POLICY_HEADER="Feature-Policy" @AT@ 1393 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @TO@ TypeDeclaration@@[public]CamelCatalogTest,  @AT@ 11902 @LENGTH@ 651
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 11902 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 11909 @LENGTH@ 4
---INS SimpleName@@MethodName:testNetty4Http4DynamicToIssueHost @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 11914 @LENGTH@ 33
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 11957 @LENGTH@ 9
---INS VariableDeclarationStatement@@String uri="netty4-http:http://a-b-c.hostname.tld:8080/anything"; @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 11977 @LENGTH@ 67
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String uri="netty4-http:http://a-b-c.hostname.tld:8080/anything"; @AT@ 11977 @LENGTH@ 6
------INS VariableDeclarationFragment@@uri="netty4-http:http://a-b-c.hostname.tld:8080/anything" @TO@ VariableDeclarationStatement@@String uri="netty4-http:http://a-b-c.hostname.tld:8080/anything"; @AT@ 11984 @LENGTH@ 59
---------INS SimpleName@@uri @TO@ VariableDeclarationFragment@@uri="netty4-http:http://a-b-c.hostname.tld:8080/anything" @AT@ 11984 @LENGTH@ 3
---------INS StringLiteral@@"netty4-http:http://a-b-c.hostname.tld:8080/anything" @TO@ VariableDeclarationFragment@@uri="netty4-http:http://a-b-c.hostname.tld:8080/anything" @AT@ 11990 @LENGTH@ 53
---INS VariableDeclarationStatement@@Map<String,String> params=catalog.endpointProperties(uri); @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 12053 @LENGTH@ 61
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> params=catalog.endpointProperties(uri); @AT@ 12053 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 12053 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 12057 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 12065 @LENGTH@ 6
------INS VariableDeclarationFragment@@params=catalog.endpointProperties(uri) @TO@ VariableDeclarationStatement@@Map<String,String> params=catalog.endpointProperties(uri); @AT@ 12073 @LENGTH@ 40
---------INS SimpleName@@params @TO@ VariableDeclarationFragment@@params=catalog.endpointProperties(uri) @AT@ 12073 @LENGTH@ 6
---------INS MethodInvocation@@catalog.endpointProperties(uri) @TO@ VariableDeclarationFragment@@params=catalog.endpointProperties(uri) @AT@ 12082 @LENGTH@ 31
------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.endpointProperties(uri) @AT@ 12082 @LENGTH@ 7
------------INS SimpleName@@MethodName:endpointProperties:[uri] @TO@ MethodInvocation@@catalog.endpointProperties(uri) @AT@ 12090 @LENGTH@ 23
---------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:endpointProperties:[uri] @AT@ 12109 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals("http",params.get("protocol")) @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 12123 @LENGTH@ 45
------INS MethodInvocation@@assertEquals("http",params.get("protocol")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("http",params.get("protocol")) @AT@ 12123 @LENGTH@ 44
---------INS SimpleName@@MethodName:assertEquals:["http", params.get("protocol")] @TO@ MethodInvocation@@assertEquals("http",params.get("protocol")) @AT@ 12123 @LENGTH@ 44
------------INS StringLiteral@@"http" @TO@ SimpleName@@MethodName:assertEquals:["http", params.get("protocol")] @AT@ 12136 @LENGTH@ 6
------------INS MethodInvocation@@params.get("protocol") @TO@ SimpleName@@MethodName:assertEquals:["http", params.get("protocol")] @AT@ 12144 @LENGTH@ 22
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.get("protocol") @AT@ 12144 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["protocol"] @TO@ MethodInvocation@@params.get("protocol") @AT@ 12151 @LENGTH@ 15
------------------INS StringLiteral@@"protocol" @TO@ SimpleName@@MethodName:get:["protocol"] @AT@ 12155 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals("a-b-c.hostname.tld",params.get("host")) @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 12177 @LENGTH@ 55
------INS MethodInvocation@@assertEquals("a-b-c.hostname.tld",params.get("host")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("a-b-c.hostname.tld",params.get("host")) @AT@ 12177 @LENGTH@ 54
---------INS SimpleName@@MethodName:assertEquals:["a-b-c.hostname.tld", params.get("host")] @TO@ MethodInvocation@@assertEquals("a-b-c.hostname.tld",params.get("host")) @AT@ 12177 @LENGTH@ 54
------------INS StringLiteral@@"a-b-c.hostname.tld" @TO@ SimpleName@@MethodName:assertEquals:["a-b-c.hostname.tld", params.get("host")] @AT@ 12190 @LENGTH@ 20
------------INS MethodInvocation@@params.get("host") @TO@ SimpleName@@MethodName:assertEquals:["a-b-c.hostname.tld", params.get("host")] @AT@ 12212 @LENGTH@ 18
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.get("host") @AT@ 12212 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["host"] @TO@ MethodInvocation@@params.get("host") @AT@ 12219 @LENGTH@ 11
------------------INS StringLiteral@@"host" @TO@ SimpleName@@MethodName:get:["host"] @AT@ 12223 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("8080",params.get("port")) @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 12241 @LENGTH@ 41
------INS MethodInvocation@@assertEquals("8080",params.get("port")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("8080",params.get("port")) @AT@ 12241 @LENGTH@ 40
---------INS SimpleName@@MethodName:assertEquals:["8080", params.get("port")] @TO@ MethodInvocation@@assertEquals("8080",params.get("port")) @AT@ 12241 @LENGTH@ 40
------------INS StringLiteral@@"8080" @TO@ SimpleName@@MethodName:assertEquals:["8080", params.get("port")] @AT@ 12254 @LENGTH@ 6
------------INS MethodInvocation@@params.get("port") @TO@ SimpleName@@MethodName:assertEquals:["8080", params.get("port")] @AT@ 12262 @LENGTH@ 18
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.get("port") @AT@ 12262 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["port"] @TO@ MethodInvocation@@params.get("port") @AT@ 12269 @LENGTH@ 11
------------------INS StringLiteral@@"port" @TO@ SimpleName@@MethodName:get:["port"] @AT@ 12273 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("anything",params.get("path")) @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 12291 @LENGTH@ 45
------INS MethodInvocation@@assertEquals("anything",params.get("path")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("anything",params.get("path")) @AT@ 12291 @LENGTH@ 44
---------INS SimpleName@@MethodName:assertEquals:["anything", params.get("path")] @TO@ MethodInvocation@@assertEquals("anything",params.get("path")) @AT@ 12291 @LENGTH@ 44
------------INS StringLiteral@@"anything" @TO@ SimpleName@@MethodName:assertEquals:["anything", params.get("path")] @AT@ 12304 @LENGTH@ 10
------------INS MethodInvocation@@params.get("path") @TO@ SimpleName@@MethodName:assertEquals:["anything", params.get("path")] @AT@ 12316 @LENGTH@ 18
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.get("path") @AT@ 12316 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["path"] @TO@ MethodInvocation@@params.get("path") @AT@ 12323 @LENGTH@ 11
------------------INS StringLiteral@@"path" @TO@ SimpleName@@MethodName:get:["path"] @AT@ 12327 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:params.remove("path") @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 12369 @LENGTH@ 22
------INS MethodInvocation@@params.remove("path") @TO@ ExpressionStatement@@MethodInvocation:params.remove("path") @AT@ 12369 @LENGTH@ 21
---------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.remove("path") @AT@ 12369 @LENGTH@ 6
---------INS SimpleName@@MethodName:remove:["path"] @TO@ MethodInvocation@@params.remove("path") @AT@ 12376 @LENGTH@ 14
------------INS StringLiteral@@"path" @TO@ SimpleName@@MethodName:remove:["path"] @AT@ 12383 @LENGTH@ 6
---INS VariableDeclarationStatement@@String resolved=catalog.asEndpointUri("netty4-http",params,false); @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 12401 @LENGTH@ 70
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String resolved=catalog.asEndpointUri("netty4-http",params,false); @AT@ 12401 @LENGTH@ 6
------INS VariableDeclarationFragment@@resolved=catalog.asEndpointUri("netty4-http",params,false) @TO@ VariableDeclarationStatement@@String resolved=catalog.asEndpointUri("netty4-http",params,false); @AT@ 12408 @LENGTH@ 62
---------INS SimpleName@@resolved @TO@ VariableDeclarationFragment@@resolved=catalog.asEndpointUri("netty4-http",params,false) @AT@ 12408 @LENGTH@ 8
---------INS MethodInvocation@@catalog.asEndpointUri("netty4-http",params,false) @TO@ VariableDeclarationFragment@@resolved=catalog.asEndpointUri("netty4-http",params,false) @AT@ 12419 @LENGTH@ 51
------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.asEndpointUri("netty4-http",params,false) @AT@ 12419 @LENGTH@ 7
------------INS SimpleName@@MethodName:asEndpointUri:["netty4-http", params, false] @TO@ MethodInvocation@@catalog.asEndpointUri("netty4-http",params,false) @AT@ 12427 @LENGTH@ 43
---------------INS StringLiteral@@"netty4-http" @TO@ SimpleName@@MethodName:asEndpointUri:["netty4-http", params, false] @AT@ 12441 @LENGTH@ 13
---------------INS SimpleName@@params @TO@ SimpleName@@MethodName:asEndpointUri:["netty4-http", params, false] @AT@ 12456 @LENGTH@ 6
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:asEndpointUri:["netty4-http", params, false] @AT@ 12464 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals("netty4-http:http:a-b-c.hostname.tld:8080",resolved) @TO@ MethodDeclaration@@public, void, MethodName:testNetty4Http4DynamicToIssueHost, Exception,  @AT@ 12480 @LENGTH@ 67
------INS MethodInvocation@@assertEquals("netty4-http:http:a-b-c.hostname.tld:8080",resolved) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("netty4-http:http:a-b-c.hostname.tld:8080",resolved) @AT@ 12480 @LENGTH@ 66
---------INS SimpleName@@MethodName:assertEquals:["netty4-http:http:a-b-c.hostname.tld:8080", resolved] @TO@ MethodInvocation@@assertEquals("netty4-http:http:a-b-c.hostname.tld:8080",resolved) @AT@ 12480 @LENGTH@ 66
------------INS StringLiteral@@"netty4-http:http:a-b-c.hostname.tld:8080" @TO@ SimpleName@@MethodName:assertEquals:["netty4-http:http:a-b-c.hostname.tld:8080", resolved] @AT@ 12493 @LENGTH@ 42
------------INS SimpleName@@resolved @TO@ SimpleName@@MethodName:assertEquals:["netty4-http:http:a-b-c.hostname.tld:8080", resolved] @AT@ 12537 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess, Exception,  @TO@ TypeDeclaration@@[public]ClientRegistrationsTest,  @AT@ 5383 @LENGTH@ 172
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess, Exception,  @AT@ 5383 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess, Exception,  @AT@ 5390 @LENGTH@ 4
---INS SimpleName@@MethodName:issuerWhenContainsTrailingSlashThenSuccess @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess, Exception,  @AT@ 5395 @LENGTH@ 42
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess, Exception,  @AT@ 5447 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(registration("")).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess, Exception,  @AT@ 5461 @LENGTH@ 41
------INS MethodInvocation@@assertThat(registration("")).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(registration("")).isNotNull() @AT@ 5461 @LENGTH@ 40
---------INS MethodInvocation@@MethodName:assertThat:[registration("")] @TO@ MethodInvocation@@assertThat(registration("")).isNotNull() @AT@ 5461 @LENGTH@ 28
------------INS MethodInvocation@@registration("") @TO@ MethodInvocation@@MethodName:assertThat:[registration("")] @AT@ 5472 @LENGTH@ 16
---------------INS SimpleName@@MethodName:registration:[""] @TO@ MethodInvocation@@registration("") @AT@ 5472 @LENGTH@ 16
------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:registration:[""] @AT@ 5485 @LENGTH@ 2
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(registration("")).isNotNull() @AT@ 5490 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(this.issuer.endsWith("/")).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenContainsTrailingSlashThenSuccess, Exception,  @AT@ 5505 @LENGTH@ 47
------INS MethodInvocation@@assertThat(this.issuer.endsWith("/")).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.issuer.endsWith("/")).isTrue() @AT@ 5505 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:assertThat:[this.issuer.endsWith("/")] @TO@ MethodInvocation@@assertThat(this.issuer.endsWith("/")).isTrue() @AT@ 5505 @LENGTH@ 37
------------INS MethodInvocation@@this.issuer.endsWith("/") @TO@ MethodInvocation@@MethodName:assertThat:[this.issuer.endsWith("/")] @AT@ 5516 @LENGTH@ 25
---------------INS FieldAccess@@this.issuer @TO@ MethodInvocation@@this.issuer.endsWith("/") @AT@ 5516 @LENGTH@ 11
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.issuer @AT@ 5516 @LENGTH@ 4
------------------INS SimpleName@@issuer @TO@ FieldAccess@@this.issuer @AT@ 5521 @LENGTH@ 6
---------------INS SimpleName@@MethodName:endsWith:["/"] @TO@ MethodInvocation@@this.issuer.endsWith("/") @AT@ 5528 @LENGTH@ 13
------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:endsWith:["/"] @AT@ 5537 @LENGTH@ 3
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(this.issuer.endsWith("/")).isTrue() @AT@ 5543 @LENGTH@ 8


INS MethodDeclaration@@private, static, Collection<? extends ModelNode>, MethodName:removeDistributableWeb, final PathAddress subsystem,  @TO@ TypeDeclaration@@[public]DomainAdjuster720, DomainAdjuster @AT@ 3013 @LENGTH@ 432
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, Collection<? extends ModelNode>, MethodName:removeDistributableWeb, final PathAddress subsystem,  @AT@ 3013 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, Collection<? extends ModelNode>, MethodName:removeDistributableWeb, final PathAddress subsystem,  @AT@ 3021 @LENGTH@ 6
---INS ParameterizedType@@Collection<? extends ModelNode> @TO@ MethodDeclaration@@private, static, Collection<? extends ModelNode>, MethodName:removeDistributableWeb, final PathAddress subsystem,  @AT@ 3028 @LENGTH@ 31
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<? extends ModelNode> @AT@ 3028 @LENGTH@ 10
------INS WildcardType@@? @TO@ ParameterizedType@@Collection<? extends ModelNode> @AT@ 3039 @LENGTH@ 19
---INS SimpleName@@MethodName:removeDistributableWeb @TO@ MethodDeclaration@@private, static, Collection<? extends ModelNode>, MethodName:removeDistributableWeb, final PathAddress subsystem,  @AT@ 3060 @LENGTH@ 22
---INS SingleVariableDeclaration@@final PathAddress subsystem @TO@ MethodDeclaration@@private, static, Collection<? extends ModelNode>, MethodName:removeDistributableWeb, final PathAddress subsystem,  @AT@ 3083 @LENGTH@ 27
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final PathAddress subsystem @AT@ 3083 @LENGTH@ 5
------INS SimpleType@@PathAddress @TO@ SingleVariableDeclaration@@final PathAddress subsystem @AT@ 3089 @LENGTH@ 11
------INS SimpleName@@subsystem @TO@ SingleVariableDeclaration@@final PathAddress subsystem @AT@ 3101 @LENGTH@ 9
---INS VariableDeclarationStatement@@final List<ModelNode> list=new ArrayList<>(); @TO@ MethodDeclaration@@private, static, Collection<? extends ModelNode>, MethodName:removeDistributableWeb, final PathAddress subsystem,  @AT@ 3122 @LENGTH@ 47
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final List<ModelNode> list=new ArrayList<>(); @AT@ 3122 @LENGTH@ 5
------INS ParameterizedType@@List<ModelNode> @TO@ VariableDeclarationStatement@@final List<ModelNode> list=new ArrayList<>(); @AT@ 3128 @LENGTH@ 15
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ModelNode> @AT@ 3128 @LENGTH@ 4
---------INS SimpleType@@ModelNode @TO@ ParameterizedType@@List<ModelNode> @AT@ 3133 @LENGTH@ 9
------INS VariableDeclarationFragment@@list=new ArrayList<>() @TO@ VariableDeclarationStatement@@final List<ModelNode> list=new ArrayList<>(); @AT@ 3144 @LENGTH@ 24
---------INS SimpleName@@list @TO@ VariableDeclarationFragment@@list=new ArrayList<>() @AT@ 3144 @LENGTH@ 4
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@list=new ArrayList<>() @AT@ 3151 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 3151 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 3155 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 3155 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:list.add(createRemoveOperation(subsystem)) @TO@ MethodDeclaration@@private, static, Collection<? extends ModelNode>, MethodName:removeDistributableWeb, final PathAddress subsystem,  @AT@ 3258 @LENGTH@ 43
------INS MethodInvocation@@list.add(createRemoveOperation(subsystem)) @TO@ ExpressionStatement@@MethodInvocation:list.add(createRemoveOperation(subsystem)) @AT@ 3258 @LENGTH@ 42
---------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(createRemoveOperation(subsystem)) @AT@ 3258 @LENGTH@ 4
---------INS SimpleName@@MethodName:add:[createRemoveOperation(subsystem)] @TO@ MethodInvocation@@list.add(createRemoveOperation(subsystem)) @AT@ 3263 @LENGTH@ 37
------------INS MethodInvocation@@createRemoveOperation(subsystem) @TO@ SimpleName@@MethodName:add:[createRemoveOperation(subsystem)] @AT@ 3267 @LENGTH@ 32
---------------INS SimpleName@@MethodName:createRemoveOperation:[subsystem] @TO@ MethodInvocation@@createRemoveOperation(subsystem) @AT@ 3267 @LENGTH@ 32
------------------INS SimpleName@@subsystem @TO@ SimpleName@@MethodName:createRemoveOperation:[subsystem] @AT@ 3289 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:list.add(createRemoveOperation(PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web"))) @TO@ MethodDeclaration@@private, static, Collection<? extends ModelNode>, MethodName:removeDistributableWeb, final PathAddress subsystem,  @AT@ 3310 @LENGTH@ 108
------INS MethodInvocation@@list.add(createRemoveOperation(PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web"))) @TO@ ExpressionStatement@@MethodInvocation:list.add(createRemoveOperation(PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web"))) @AT@ 3310 @LENGTH@ 107
---------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(createRemoveOperation(PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web"))) @AT@ 3310 @LENGTH@ 4
---------INS SimpleName@@MethodName:add:[createRemoveOperation(PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web"))] @TO@ MethodInvocation@@list.add(createRemoveOperation(PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web"))) @AT@ 3315 @LENGTH@ 102
------------INS MethodInvocation@@createRemoveOperation(PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web")) @TO@ SimpleName@@MethodName:add:[createRemoveOperation(PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web"))] @AT@ 3319 @LENGTH@ 97
---------------INS SimpleName@@MethodName:createRemoveOperation:[PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web")] @TO@ MethodInvocation@@createRemoveOperation(PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web")) @AT@ 3319 @LENGTH@ 97
------------------INS MethodInvocation@@PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web") @TO@ SimpleName@@MethodName:createRemoveOperation:[PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web")] @AT@ 3341 @LENGTH@ 74
---------------------INS SimpleName@@Name:PathAddress @TO@ MethodInvocation@@PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web") @AT@ 3341 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:pathAddress:[EXTENSION, "org.wildfly.extension.clustering.web"] @TO@ MethodInvocation@@PathAddress.pathAddress(EXTENSION,"org.wildfly.extension.clustering.web") @AT@ 3353 @LENGTH@ 62
------------------------INS SimpleName@@EXTENSION @TO@ SimpleName@@MethodName:pathAddress:[EXTENSION, "org.wildfly.extension.clustering.web"] @AT@ 3365 @LENGTH@ 9
------------------------INS StringLiteral@@"org.wildfly.extension.clustering.web" @TO@ SimpleName@@MethodName:pathAddress:[EXTENSION, "org.wildfly.extension.clustering.web"] @AT@ 3376 @LENGTH@ 38
---INS ReturnStatement@@SimpleName:list @TO@ MethodDeclaration@@private, static, Collection<? extends ModelNode>, MethodName:removeDistributableWeb, final PathAddress subsystem,  @AT@ 3427 @LENGTH@ 12
------INS SimpleName@@list @TO@ ReturnStatement@@SimpleName:list @AT@ 3434 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:getRegistry().put("myTable",ht) @TO@ MethodInvocation:getRegistry().bind("myTable",ht) @AT@ 1638 @LENGTH@ 33
---UPD MethodInvocation@@getRegistry().put("myTable",ht) @TO@ getRegistry().bind("myTable",ht) @AT@ 1638 @LENGTH@ 32
------UPD SimpleName@@MethodName:put:["myTable", ht] @TO@ MethodName:bind:["myTable", ht] @AT@ 1652 @LENGTH@ 18


UPD TryStatement@@try {  setQueryDir("ql/src/test/queries/clientpositive");  includesFrom(testConfigProps,"minillaplocal.query.files");  includesFrom(testConfigProps,"minillaplocal.shared.query.files");  excludeQuery("bucket_map_join_tez1.q");  excludeQuery("special_character_in_tabnames_1.q");  excludeQuery("tez_smb_1.q");  excludeQuery("union_fast_stats.q");  excludeQuery("schema_evol_orc_acidvec_part.q");  excludeQuery("schema_evol_orc_vec_part_llap_io.q");  excludeQuery("load_dyn_part3.q");  setResultsDir("ql/src/test/results/clientpositive/llap");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("data/conf/llap");  setClusterType(MiniClusterType.llap_local);  setMetastoreType(MetastoreType.sql);  setFsType(QTestUtil.FsType.local);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @TO@ try {  setQueryDir("ql/src/test/queries/clientpositive");  includesFrom(testConfigProps,"minillaplocal.query.files");  includesFrom(testConfigProps,"minillaplocal.shared.query.files");  excludeQuery("bucket_map_join_tez1.q");  excludeQuery("special_character_in_tabnames_1.q");  excludeQuery("tez_smb_1.q");  excludeQuery("union_fast_stats.q");  excludeQuery("schema_evol_orc_acidvec_part.q");  excludeQuery("schema_evol_orc_vec_part_llap_io.q");  excludeQuery("load_dyn_part3.q");  excludeQuery("cbo_limit.q");  setResultsDir("ql/src/test/results/clientpositive/llap");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("data/conf/llap");  setClusterType(MiniClusterType.llap_local);  setMetastoreType(MetastoreType.sql);  setFsType(QTestUtil.FsType.local);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @AT@ 9212 @LENGTH@ 1277
---MOV ExpressionStatement@@MethodInvocation:excludeQuery("cbo_limit.q") @TO@ TryStatement@@try {  setQueryDir("ql/src/test/queries/clientpositive");  includesFrom(testConfigProps,"minillaplocal.query.files");  includesFrom(testConfigProps,"minillaplocal.shared.query.files");  excludeQuery("bucket_map_join_tez1.q");  excludeQuery("special_character_in_tabnames_1.q");  excludeQuery("tez_smb_1.q");  excludeQuery("union_fast_stats.q");  excludeQuery("schema_evol_orc_acidvec_part.q");  excludeQuery("schema_evol_orc_vec_part_llap_io.q");  excludeQuery("load_dyn_part3.q");  setResultsDir("ql/src/test/results/clientpositive/llap");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("data/conf/llap");  setClusterType(MiniClusterType.llap_local);  setMetastoreType(MetastoreType.sql);  setFsType(QTestUtil.FsType.local);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @AT@ 5976 @LENGTH@ 28


MOV VariableDeclarationStatement@@Map<String,Object> sstParams=IntrospectionSupport.extractProperties(parameters,"searchTerm."); @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 4249 @LENGTH@ 98


UPD ExpressionStatement@@MethodInvocation:result.expectedMessageCount(0) @TO@ MethodInvocation:result.expectedMessageCount(1) @AT@ 1550 @LENGTH@ 31
---UPD MethodInvocation@@result.expectedMessageCount(0) @TO@ result.expectedMessageCount(1) @AT@ 1550 @LENGTH@ 30
------UPD SimpleName@@MethodName:expectedMessageCount:[0] @TO@ MethodName:expectedMessageCount:[1] @AT@ 1557 @LENGTH@ 23
---------UPD NumberLiteral@@0 @TO@ 1 @AT@ 1578 @LENGTH@ 1


DEL ExpressionStatement@@Assignment:physicalContext=physicalContext @AT@ 103568 @LENGTH@ 34
---DEL Assignment@@physicalContext=physicalContext @AT@ 103568 @LENGTH@ 33
------DEL SimpleName@@physicalContext @AT@ 103568 @LENGTH@ 15
------DEL Operator@@= @AT@ 103583 @LENGTH@ 1
------DEL SimpleName@@physicalContext @AT@ 103586 @LENGTH@ 15


MOV MethodDeclaration@@public, static, TransformerReifier<? extends TransformerDefinition>, MethodName:reifier, TransformerDefinition definition,  @TO@ TypeDeclaration@@[public, abstract]TransformerReifier,  @AT@ 1927 @LENGTH@ 428


UPD IfStatement@@if (partNames == null && partNames.isEmpty()) {  return null;} @TO@ if (partNames == null || partNames.isEmpty()) {  return null;} @AT@ 361224 @LENGTH@ 76
---UPD InfixExpression@@partNames == null && partNames.isEmpty() @TO@ partNames == null || partNames.isEmpty() @AT@ 361228 @LENGTH@ 40
------UPD Operator@@&& @TO@ || @AT@ 361245 @LENGTH@ 2


UPD VariableDeclarationStatement@@Bundle camelCore=getBundleBySymbolicName("org.apache.camel.camel-core"); @TO@ Bundle camelCore=getBundleBySymbolicName("org.apache.camel.camel-blueprint"); @AT@ 1360 @LENGTH@ 74
---UPD VariableDeclarationFragment@@camelCore=getBundleBySymbolicName("org.apache.camel.camel-core") @TO@ camelCore=getBundleBySymbolicName("org.apache.camel.camel-blueprint") @AT@ 1367 @LENGTH@ 66
------UPD MethodInvocation@@getBundleBySymbolicName("org.apache.camel.camel-core") @TO@ getBundleBySymbolicName("org.apache.camel.camel-blueprint") @AT@ 1379 @LENGTH@ 54
---------UPD SimpleName@@MethodName:getBundleBySymbolicName:["org.apache.camel.camel-core"] @TO@ MethodName:getBundleBySymbolicName:["org.apache.camel.camel-blueprint"] @AT@ 1379 @LENGTH@ 54
------------UPD StringLiteral@@"org.apache.camel.camel-core" @TO@ "org.apache.camel.camel-blueprint" @AT@ 1403 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Event#{} was a ADD_PTN_EVENT with no table listed") @TO@ MethodInvocation:LOG.debug("Event#{} was a ADD_PTN_EVENT with no table listed",fromEventId()) @AT@ 2366 @LENGTH@ 63
---UPD MethodInvocation@@LOG.debug("Event#{} was a ADD_PTN_EVENT with no table listed") @TO@ LOG.debug("Event#{} was a ADD_PTN_EVENT with no table listed",fromEventId()) @AT@ 2366 @LENGTH@ 62
------UPD SimpleName@@MethodName:debug:["Event#{} was a ADD_PTN_EVENT with no table listed"] @TO@ MethodName:debug:["Event#{} was a ADD_PTN_EVENT with no table listed", fromEventId()] @AT@ 2370 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:fromEventId:[] @TO@ SimpleName@@MethodName:debug:["Event#{} was a ADD_PTN_EVENT with no table listed"] @AT@ 2429 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:doHandleResult(new InvocationResult(r,resultArg.getSendTo(),resultArg.getReturnType()),request,channel,source) @TO@ MethodInvocation:doHandleResult(new InvocationResult(r,resultArg.getSendTo(),null),request,channel,source) @AT@ 13127 @LENGTH@ 120
---UPD MethodInvocation@@doHandleResult(new InvocationResult(r,resultArg.getSendTo(),resultArg.getReturnType()),request,channel,source) @TO@ doHandleResult(new InvocationResult(r,resultArg.getSendTo(),null),request,channel,source) @AT@ 13127 @LENGTH@ 119
------UPD SimpleName@@MethodName:doHandleResult:[new InvocationResult(r,resultArg.getSendTo(),resultArg.getReturnType()), request, channel, source] @TO@ MethodName:doHandleResult:[new InvocationResult(r,resultArg.getSendTo(),null), request, channel, source] @AT@ 13127 @LENGTH@ 119
---------UPD ClassInstanceCreation@@InvocationResult[r, resultArg.getSendTo(), resultArg.getReturnType()] @TO@ InvocationResult[r, resultArg.getSendTo(), null] @AT@ 13142 @LENGTH@ 73
------------DEL MethodInvocation@@resultArg.getReturnType() @AT@ 13189 @LENGTH@ 25
---------------DEL SimpleName@@Name:resultArg @AT@ 13189 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:getReturnType:[] @AT@ 13199 @LENGTH@ 15
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@InvocationResult[r, resultArg.getSendTo(), resultArg.getReturnType()] @AT@ 13297 @LENGTH@ 4


UPD VariableDeclarationStatement@@Elements errorDivs=page.select("div[class*=error_message"); @TO@ Elements errorDivs=page.select("div[class*=error_message]"); @AT@ 8138 @LENGTH@ 61
---UPD VariableDeclarationFragment@@errorDivs=page.select("div[class*=error_message") @TO@ errorDivs=page.select("div[class*=error_message]") @AT@ 8147 @LENGTH@ 51
------UPD MethodInvocation@@page.select("div[class*=error_message") @TO@ page.select("div[class*=error_message]") @AT@ 8159 @LENGTH@ 39
---------UPD SimpleName@@MethodName:select:["div[class*=error_message"] @TO@ MethodName:select:["div[class*=error_message]"] @AT@ 8164 @LENGTH@ 34
------------UPD StringLiteral@@"div[class*=error_message" @TO@ "div[class*=error_message]" @AT@ 8171 @LENGTH@ 26


INS ExpressionStatement@@MethodInvocation:System.setProperty("jdk.tls.server.protocols","TLSv1.2") @TO@ MethodDeclaration@@public, static, void, MethodName:initPort, Exception,  @AT@ 1417 @LENGTH@ 58
---INS MethodInvocation@@System.setProperty("jdk.tls.server.protocols","TLSv1.2") @TO@ ExpressionStatement@@MethodInvocation:System.setProperty("jdk.tls.server.protocols","TLSv1.2") @AT@ 1417 @LENGTH@ 57
------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.setProperty("jdk.tls.server.protocols","TLSv1.2") @AT@ 1417 @LENGTH@ 6
------INS SimpleName@@MethodName:setProperty:["jdk.tls.server.protocols", "TLSv1.2"] @TO@ MethodInvocation@@System.setProperty("jdk.tls.server.protocols","TLSv1.2") @AT@ 1424 @LENGTH@ 50
---------INS StringLiteral@@"jdk.tls.server.protocols" @TO@ SimpleName@@MethodName:setProperty:["jdk.tls.server.protocols", "TLSv1.2"] @AT@ 1436 @LENGTH@ 26
---------INS StringLiteral@@"TLSv1.2" @TO@ SimpleName@@MethodName:setProperty:["jdk.tls.server.protocols", "TLSv1.2"] @AT@ 1464 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:System.setProperty("jdk.tls.client.protocols","TLSv1.2") @TO@ MethodDeclaration@@public, static, void, MethodName:initPort, Exception,  @AT@ 1350 @LENGTH@ 58
---INS MethodInvocation@@System.setProperty("jdk.tls.client.protocols","TLSv1.2") @TO@ ExpressionStatement@@MethodInvocation:System.setProperty("jdk.tls.client.protocols","TLSv1.2") @AT@ 1350 @LENGTH@ 57
------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.setProperty("jdk.tls.client.protocols","TLSv1.2") @AT@ 1350 @LENGTH@ 6
------INS SimpleName@@MethodName:setProperty:["jdk.tls.client.protocols", "TLSv1.2"] @TO@ MethodInvocation@@System.setProperty("jdk.tls.client.protocols","TLSv1.2") @AT@ 1357 @LENGTH@ 50
---------INS StringLiteral@@"jdk.tls.client.protocols" @TO@ SimpleName@@MethodName:setProperty:["jdk.tls.client.protocols", "TLSv1.2"] @AT@ 1369 @LENGTH@ 26
---------INS StringLiteral@@"TLSv1.2" @TO@ SimpleName@@MethodName:setProperty:["jdk.tls.client.protocols", "TLSv1.2"] @AT@ 1397 @LENGTH@ 9


INS MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @TO@ TypeDeclaration@@[@Plugin(name="RabbitMQ",category="Core",elementType="appender",printObject=true), public]AmqpAppender, AbstractAppender @AT@ 10735 @LENGTH@ 1466
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 10735 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 10743 @LENGTH@ 4
---MOV SingleVariableDeclaration@@Map<?,?> properties @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 10745 @LENGTH@ 20
---INS SimpleName@@MethodName:sendEvent @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 10748 @LENGTH@ 9
---INS SingleVariableDeclaration@@Event event @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 10758 @LENGTH@ 11
------INS SimpleType@@Event @TO@ SingleVariableDeclaration@@Event event @AT@ 10758 @LENGTH@ 5
------INS SimpleName@@event @TO@ SingleVariableDeclaration@@Event event @AT@ 10764 @LENGTH@ 5
---MOV VariableDeclarationStatement@@LogEvent logEvent=event.getEvent(); @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 10771 @LENGTH@ 37
---MOV VariableDeclarationStatement@@String name=logEvent.getLoggerName(); @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 10811 @LENGTH@ 39
---MOV VariableDeclarationStatement@@Level level=logEvent.getLevel(); @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 10853 @LENGTH@ 34
---MOV VariableDeclarationStatement@@MessageProperties amqpProps=new MessageProperties(); @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 10891 @LENGTH@ 54
---MOV ExpressionStatement@@MethodInvocation:amqpProps.setDeliveryMode(this.manager.deliveryMode) @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 10948 @LENGTH@ 53
---MOV ExpressionStatement@@MethodInvocation:amqpProps.setContentType(this.manager.contentType) @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 11004 @LENGTH@ 51
---MOV IfStatement@@if (null != this.manager.contentEncoding) {  amqpProps.setContentEncoding(this.manager.contentEncoding);} @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 11058 @LENGTH@ 110
---MOV ExpressionStatement@@MethodInvocation:amqpProps.setHeader(CATEGORY_NAME,name) @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 11171 @LENGTH@ 41
---MOV ExpressionStatement@@MethodInvocation:amqpProps.setHeader(THREAD_NAME,logEvent.getThreadName()) @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 11215 @LENGTH@ 59
---MOV ExpressionStatement@@MethodInvocation:amqpProps.setHeader(CATEGORY_LEVEL,level.toString()) @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 11277 @LENGTH@ 54
---MOV IfStatement@@if (this.manager.generateId) {  amqpProps.setMessageId(UUID.randomUUID().toString());} @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 11334 @LENGTH@ 91
---MOV IfStatement@@if (null != this.manager.applicationId) {  amqpProps.setAppId(this.manager.applicationId);} @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 11472 @LENGTH@ 96
---MOV VariableDeclarationStatement@@Calendar tstamp=Calendar.getInstance(); @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 11591 @LENGTH@ 41
---MOV ExpressionStatement@@MethodInvocation:tstamp.setTimeInMillis(logEvent.getTimeMillis()) @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 11635 @LENGTH@ 49
---MOV ExpressionStatement@@MethodInvocation:amqpProps.setTimestamp(tstamp.getTime()) @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 11687 @LENGTH@ 41
---MOV EnhancedForStatement@@for (Entry<?,?> entry : properties.entrySet()) {  amqpProps.setHeader(entry.getKey().toString(),entry.getValue());} @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 11765 @LENGTH@ 122
---MOV IfStatement@@if (logEvent.getSource() != null) {  amqpProps.setHeader("location",String.format("%s.%s()[%s]",logEvent.getSource().getClassName(),logEvent.getSource().getMethodName(),logEvent.getSource().getLineNumber()));} @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 11890 @LENGTH@ 243
---INS ExpressionStatement@@MethodInvocation:doSend(event,logEvent,amqpProps) @TO@ MethodDeclaration@@private, void, MethodName:sendEvent, Event event, Map<?,?> properties,  @AT@ 12163 @LENGTH@ 35
------INS MethodInvocation@@doSend(event,logEvent,amqpProps) @TO@ ExpressionStatement@@MethodInvocation:doSend(event,logEvent,amqpProps) @AT@ 12163 @LENGTH@ 34
---------INS SimpleName@@MethodName:doSend:[event, logEvent, amqpProps] @TO@ MethodInvocation@@doSend(event,logEvent,amqpProps) @AT@ 12163 @LENGTH@ 34
------------INS SimpleName@@event @TO@ SimpleName@@MethodName:doSend:[event, logEvent, amqpProps] @AT@ 12170 @LENGTH@ 5
------------INS SimpleName@@logEvent @TO@ SimpleName@@MethodName:doSend:[event, logEvent, amqpProps] @AT@ 12177 @LENGTH@ 8
------------INS SimpleName@@amqpProps @TO@ SimpleName@@MethodName:doSend:[event, logEvent, amqpProps] @AT@ 12187 @LENGTH@ 9


UPD VariableDeclarationStatement@@PartitionsStatsRequest rqst=new PartitionsStatsRequest(dbName,tableName,colNames,partNames); @TO@ PartitionsStatsRequest rqst=new PartitionsStatsRequest(dbName,tableName,colNames,partNames == null ? new ArrayList<String>() : partNames); @AT@ 38142 @LENGTH@ 105
---UPD VariableDeclarationFragment@@rqst=new PartitionsStatsRequest(dbName,tableName,colNames,partNames) @TO@ rqst=new PartitionsStatsRequest(dbName,tableName,colNames,partNames == null ? new ArrayList<String>() : partNames) @AT@ 38165 @LENGTH@ 81
------UPD ClassInstanceCreation@@PartitionsStatsRequest[dbName, tableName, colNames, partNames] @TO@ PartitionsStatsRequest[dbName, tableName, colNames, partNames == null ? new ArrayList<String>() : partNames] @AT@ 38172 @LENGTH@ 74
---------INS ConditionalExpression@@partNames == null ? new ArrayList<String>() : partNames @TO@ ClassInstanceCreation@@PartitionsStatsRequest[dbName, tableName, colNames, partNames] @AT@ 38236 @LENGTH@ 55
------------INS InfixExpression@@partNames == null @TO@ ConditionalExpression@@partNames == null ? new ArrayList<String>() : partNames @AT@ 38236 @LENGTH@ 17
---------------INS SimpleName@@partNames @TO@ InfixExpression@@partNames == null @AT@ 38236 @LENGTH@ 9
---------------INS Operator@@== @TO@ InfixExpression@@partNames == null @AT@ 38245 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@partNames == null @AT@ 38249 @LENGTH@ 4
------------INS ClassInstanceCreation@@ArrayList<String>[] @TO@ ConditionalExpression@@partNames == null ? new ArrayList<String>() : partNames @AT@ 38256 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<String>[] @AT@ 38256 @LENGTH@ 3
---------------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList<String>[] @AT@ 38260 @LENGTH@ 17
------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 38260 @LENGTH@ 9
------------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 38270 @LENGTH@ 6
------------INS SimpleName@@partNames @TO@ ConditionalExpression@@partNames == null ? new ArrayList<String>() : partNames @AT@ 38282 @LENGTH@ 9
---------DEL SimpleName@@partNames @AT@ 38236 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testArgumentValueConverterWithCustomHeader, Exception,  @TO@ TypeDeclaration@@[public]CommandHeadersParsingTestCase,  @AT@ 3480 @LENGTH@ 506
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testArgumentValueConverterWithCustomHeader, Exception,  @AT@ 3480 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testArgumentValueConverterWithCustomHeader, Exception,  @AT@ 3487 @LENGTH@ 4
---INS SimpleName@@MethodName:testArgumentValueConverterWithCustomHeader @TO@ MethodDeclaration@@public, void, MethodName:testArgumentValueConverterWithCustomHeader, Exception,  @AT@ 3492 @LENGTH@ 42
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testArgumentValueConverterWithCustomHeader, Exception,  @AT@ 3544 @LENGTH@ 9
---INS VariableDeclarationStatement@@final ModelNode node=converter.fromString(ctx,"{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}"); @TO@ MethodDeclaration@@public, void, MethodName:testArgumentValueConverterWithCustomHeader, Exception,  @AT@ 3565 @LENGTH@ 104
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode node=converter.fromString(ctx,"{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}"); @AT@ 3565 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode node=converter.fromString(ctx,"{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}"); @AT@ 3571 @LENGTH@ 9
------INS VariableDeclarationFragment@@node=converter.fromString(ctx,"{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}") @TO@ VariableDeclarationStatement@@final ModelNode node=converter.fromString(ctx,"{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}"); @AT@ 3581 @LENGTH@ 87
---------INS SimpleName@@node @TO@ VariableDeclarationFragment@@node=converter.fromString(ctx,"{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}") @AT@ 3581 @LENGTH@ 4
---------INS MethodInvocation@@converter.fromString(ctx,"{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}") @TO@ VariableDeclarationFragment@@node=converter.fromString(ctx,"{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}") @AT@ 3588 @LENGTH@ 80
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.fromString(ctx,"{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}") @AT@ 3588 @LENGTH@ 9
------------INS SimpleName@@MethodName:fromString:[ctx, "{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}"] @TO@ MethodInvocation@@converter.fromString(ctx,"{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}") @AT@ 3598 @LENGTH@ 70
---------------INS SimpleName@@ctx @TO@ SimpleName@@MethodName:fromString:[ctx, "{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}"] @AT@ 3609 @LENGTH@ 3
---------------INS StringLiteral@@"{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}" @TO@ SimpleName@@MethodName:fromString:[ctx, "{ foo=\"1 2 3\"; rollback-on-runtime-failure=false}"] @AT@ 3614 @LENGTH@ 53
---INS VariableDeclarationStatement@@final ModelNode expectedHeaders=new ModelNode(); @TO@ MethodDeclaration@@public, void, MethodName:testArgumentValueConverterWithCustomHeader, Exception,  @AT@ 3679 @LENGTH@ 50
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode expectedHeaders=new ModelNode(); @AT@ 3679 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode expectedHeaders=new ModelNode(); @AT@ 3685 @LENGTH@ 9
------INS VariableDeclarationFragment@@expectedHeaders=new ModelNode() @TO@ VariableDeclarationStatement@@final ModelNode expectedHeaders=new ModelNode(); @AT@ 3695 @LENGTH@ 33
---------INS SimpleName@@expectedHeaders @TO@ VariableDeclarationFragment@@expectedHeaders=new ModelNode() @AT@ 3695 @LENGTH@ 15
---------INS ClassInstanceCreation@@ModelNode[] @TO@ VariableDeclarationFragment@@expectedHeaders=new ModelNode() @AT@ 3713 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 3713 @LENGTH@ 3
------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 3717 @LENGTH@ 9
---INS VariableDeclarationStatement@@final ModelNode foo=expectedHeaders.get("foo"); @TO@ MethodDeclaration@@public, void, MethodName:testArgumentValueConverterWithCustomHeader, Exception,  @AT@ 3738 @LENGTH@ 49
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode foo=expectedHeaders.get("foo"); @AT@ 3738 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode foo=expectedHeaders.get("foo"); @AT@ 3744 @LENGTH@ 9
------INS VariableDeclarationFragment@@foo=expectedHeaders.get("foo") @TO@ VariableDeclarationStatement@@final ModelNode foo=expectedHeaders.get("foo"); @AT@ 3754 @LENGTH@ 32
---------INS SimpleName@@foo @TO@ VariableDeclarationFragment@@foo=expectedHeaders.get("foo") @AT@ 3754 @LENGTH@ 3
---------INS MethodInvocation@@expectedHeaders.get("foo") @TO@ VariableDeclarationFragment@@foo=expectedHeaders.get("foo") @AT@ 3760 @LENGTH@ 26
------------INS SimpleName@@Name:expectedHeaders @TO@ MethodInvocation@@expectedHeaders.get("foo") @AT@ 3760 @LENGTH@ 15
------------INS SimpleName@@MethodName:get:["foo"] @TO@ MethodInvocation@@expectedHeaders.get("foo") @AT@ 3776 @LENGTH@ 10
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:get:["foo"] @AT@ 3780 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:foo.set("1 2 3") @TO@ MethodDeclaration@@public, void, MethodName:testArgumentValueConverterWithCustomHeader, Exception,  @AT@ 3796 @LENGTH@ 17
------INS MethodInvocation@@foo.set("1 2 3") @TO@ ExpressionStatement@@MethodInvocation:foo.set("1 2 3") @AT@ 3796 @LENGTH@ 16
---------INS SimpleName@@Name:foo @TO@ MethodInvocation@@foo.set("1 2 3") @AT@ 3796 @LENGTH@ 3
---------INS SimpleName@@MethodName:set:["1 2 3"] @TO@ MethodInvocation@@foo.set("1 2 3") @AT@ 3800 @LENGTH@ 12
------------INS StringLiteral@@"1 2 3" @TO@ SimpleName@@MethodName:set:["1 2 3"] @AT@ 3804 @LENGTH@ 7
---INS VariableDeclarationStatement@@final ModelNode rollback=expectedHeaders.get(Util.ROLLBACK_ON_RUNTIME_FAILURE); @TO@ MethodDeclaration@@public, void, MethodName:testArgumentValueConverterWithCustomHeader, Exception,  @AT@ 3822 @LENGTH@ 81
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode rollback=expectedHeaders.get(Util.ROLLBACK_ON_RUNTIME_FAILURE); @AT@ 3822 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode rollback=expectedHeaders.get(Util.ROLLBACK_ON_RUNTIME_FAILURE); @AT@ 3828 @LENGTH@ 9
------INS VariableDeclarationFragment@@rollback=expectedHeaders.get(Util.ROLLBACK_ON_RUNTIME_FAILURE) @TO@ VariableDeclarationStatement@@final ModelNode rollback=expectedHeaders.get(Util.ROLLBACK_ON_RUNTIME_FAILURE); @AT@ 3838 @LENGTH@ 64
---------INS SimpleName@@rollback @TO@ VariableDeclarationFragment@@rollback=expectedHeaders.get(Util.ROLLBACK_ON_RUNTIME_FAILURE) @AT@ 3838 @LENGTH@ 8
---------INS MethodInvocation@@expectedHeaders.get(Util.ROLLBACK_ON_RUNTIME_FAILURE) @TO@ VariableDeclarationFragment@@rollback=expectedHeaders.get(Util.ROLLBACK_ON_RUNTIME_FAILURE) @AT@ 3849 @LENGTH@ 53
------------INS SimpleName@@Name:expectedHeaders @TO@ MethodInvocation@@expectedHeaders.get(Util.ROLLBACK_ON_RUNTIME_FAILURE) @AT@ 3849 @LENGTH@ 15
------------INS SimpleName@@MethodName:get:[Util.ROLLBACK_ON_RUNTIME_FAILURE] @TO@ MethodInvocation@@expectedHeaders.get(Util.ROLLBACK_ON_RUNTIME_FAILURE) @AT@ 3865 @LENGTH@ 37
---------------INS QualifiedName@@Util.ROLLBACK_ON_RUNTIME_FAILURE @TO@ SimpleName@@MethodName:get:[Util.ROLLBACK_ON_RUNTIME_FAILURE] @AT@ 3869 @LENGTH@ 32
------------------INS SimpleName@@Util @TO@ QualifiedName@@Util.ROLLBACK_ON_RUNTIME_FAILURE @AT@ 3869 @LENGTH@ 4
------------------INS SimpleName@@ROLLBACK_ON_RUNTIME_FAILURE @TO@ QualifiedName@@Util.ROLLBACK_ON_RUNTIME_FAILURE @AT@ 3874 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:rollback.set("false") @TO@ MethodDeclaration@@public, void, MethodName:testArgumentValueConverterWithCustomHeader, Exception,  @AT@ 3912 @LENGTH@ 22
------INS MethodInvocation@@rollback.set("false") @TO@ ExpressionStatement@@MethodInvocation:rollback.set("false") @AT@ 3912 @LENGTH@ 21
---------INS SimpleName@@Name:rollback @TO@ MethodInvocation@@rollback.set("false") @AT@ 3912 @LENGTH@ 8
---------INS SimpleName@@MethodName:set:["false"] @TO@ MethodInvocation@@rollback.set("false") @AT@ 3921 @LENGTH@ 12
------------INS StringLiteral@@"false" @TO@ SimpleName@@MethodName:set:["false"] @AT@ 3925 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertEquals(expectedHeaders,node) @TO@ MethodDeclaration@@public, void, MethodName:testArgumentValueConverterWithCustomHeader, Exception,  @AT@ 3944 @LENGTH@ 36
------INS MethodInvocation@@assertEquals(expectedHeaders,node) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expectedHeaders,node) @AT@ 3944 @LENGTH@ 35
---------INS SimpleName@@MethodName:assertEquals:[expectedHeaders, node] @TO@ MethodInvocation@@assertEquals(expectedHeaders,node) @AT@ 3944 @LENGTH@ 35
------------INS SimpleName@@expectedHeaders @TO@ SimpleName@@MethodName:assertEquals:[expectedHeaders, node] @AT@ 3957 @LENGTH@ 15
------------INS SimpleName@@node @TO@ SimpleName@@MethodName:assertEquals:[expectedHeaders, node] @AT@ 3974 @LENGTH@ 4


UPD VariableDeclarationStatement@@final String sqsEndpointUri=String.format("aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId&messageDeduplicationIdStrategy=useContentBasedDeduplication"); @TO@ final String sqsEndpointUri=String.format("aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId" + "&messageDeduplicationIdStrategy=useContentBasedDeduplication"); @AT@ 2332 @LENGTH@ 222
---UPD VariableDeclarationFragment@@sqsEndpointUri=String.format("aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId&messageDeduplicationIdStrategy=useContentBasedDeduplication") @TO@ sqsEndpointUri=String.format("aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId" + "&messageDeduplicationIdStrategy=useContentBasedDeduplication") @AT@ 2345 @LENGTH@ 208
------UPD MethodInvocation@@String.format("aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId&messageDeduplicationIdStrategy=useContentBasedDeduplication") @TO@ String.format("aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId" + "&messageDeduplicationIdStrategy=useContentBasedDeduplication") @AT@ 2362 @LENGTH@ 191
---------UPD SimpleName@@MethodName:format:["aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId&messageDeduplicationIdStrategy=useContentBasedDeduplication"] @TO@ MethodName:format:["aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId" + "&messageDeduplicationIdStrategy=useContentBasedDeduplication"] @AT@ 2369 @LENGTH@ 184
------------DEL StringLiteral@@"aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId&messageDeduplicationIdStrategy=useContentBasedDeduplication" @AT@ 2376 @LENGTH@ 176
------------INS InfixExpression@@"aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId" + "&messageDeduplicationIdStrategy=useContentBasedDeduplication" @TO@ SimpleName@@MethodName:format:["aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId&messageDeduplicationIdStrategy=useContentBasedDeduplication"] @AT@ 2391 @LENGTH@ 200
---------------INS StringLiteral@@"aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId" @TO@ InfixExpression@@"aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId" + "&messageDeduplicationIdStrategy=useContentBasedDeduplication" @AT@ 2391 @LENGTH@ 116
---------------INS Operator@@+ @TO@ InfixExpression@@"aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId" + "&messageDeduplicationIdStrategy=useContentBasedDeduplication" @AT@ 2507 @LENGTH@ 1
---------------INS StringLiteral@@"&messageDeduplicationIdStrategy=useContentBasedDeduplication" @TO@ InfixExpression@@"aws-sqs://camel-1.fifo?accessKey=RAW(xxx)&secretKey=RAW(xxx)&region=EU_WEST_1&messageGroupIdStrategy=useExchangeId" + "&messageDeduplicationIdStrategy=useContentBasedDeduplication" @AT@ 2529 @LENGTH@ 62


UPD ReturnStatement@@ConditionalExpression:!items.isEmpty() ? true : iterator.hasNext() @TO@ InfixExpression:!items.isEmpty() || iterator.hasNext() @AT@ 3234 @LENGTH@ 52
---DEL ConditionalExpression@@!items.isEmpty() ? true : iterator.hasNext() @AT@ 3241 @LENGTH@ 44
------DEL BooleanLiteral@@true @AT@ 3260 @LENGTH@ 4
------DEL MethodInvocation@@iterator.hasNext() @AT@ 3267 @LENGTH@ 18
---INS InfixExpression@@!items.isEmpty() || iterator.hasNext() @TO@ ReturnStatement@@ConditionalExpression:!items.isEmpty() ? true : iterator.hasNext() @AT@ 3241 @LENGTH@ 38
------MOV PrefixExpression@@!items.isEmpty() @TO@ InfixExpression@@!items.isEmpty() || iterator.hasNext() @AT@ 3241 @LENGTH@ 16
------INS Operator@@|| @TO@ InfixExpression@@!items.isEmpty() || iterator.hasNext() @AT@ 3257 @LENGTH@ 2
------INS MethodInvocation@@iterator.hasNext() @TO@ InfixExpression@@!items.isEmpty() || iterator.hasNext() @AT@ 3261 @LENGTH@ 18
---------MOV SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.hasNext() @AT@ 3267 @LENGTH@ 8
---------MOV SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@iterator.hasNext() @AT@ 3276 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:findsWithSchemaReturningRawDocument,  @TO@ TypeDeclaration@@[public]JsonSchemaQueryTests,  @AT@ 6743 @LENGTH@ 283
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findsWithSchemaReturningRawDocument,  @AT@ 6743 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findsWithSchemaReturningRawDocument,  @AT@ 6750 @LENGTH@ 4
---INS SimpleName@@MethodName:findsWithSchemaReturningRawDocument @TO@ MethodDeclaration@@public, void, MethodName:findsWithSchemaReturningRawDocument,  @AT@ 6755 @LENGTH@ 35
---INS VariableDeclarationStatement@@MongoJsonSchema schema=MongoJsonSchema.builder().required("address").build(); @TO@ MethodDeclaration@@public, void, MethodName:findsWithSchemaReturningRawDocument,  @AT@ 6798 @LENGTH@ 79
------INS SimpleType@@MongoJsonSchema @TO@ VariableDeclarationStatement@@MongoJsonSchema schema=MongoJsonSchema.builder().required("address").build(); @AT@ 6798 @LENGTH@ 15
------INS VariableDeclarationFragment@@schema=MongoJsonSchema.builder().required("address").build() @TO@ VariableDeclarationStatement@@MongoJsonSchema schema=MongoJsonSchema.builder().required("address").build(); @AT@ 6814 @LENGTH@ 62
---------INS SimpleName@@schema @TO@ VariableDeclarationFragment@@schema=MongoJsonSchema.builder().required("address").build() @AT@ 6814 @LENGTH@ 6
---------INS MethodInvocation@@MongoJsonSchema.builder().required("address").build() @TO@ VariableDeclarationFragment@@schema=MongoJsonSchema.builder().required("address").build() @AT@ 6823 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:required:["address"] @TO@ MethodInvocation@@MongoJsonSchema.builder().required("address").build() @AT@ 6823 @LENGTH@ 45
---------------INS StringLiteral@@"address" @TO@ MethodInvocation@@MethodName:required:["address"] @AT@ 6858 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:builder:[] @TO@ MethodInvocation@@MongoJsonSchema.builder().required("address").build() @AT@ 6823 @LENGTH@ 25
------------INS SimpleName@@Name:MongoJsonSchema @TO@ MethodInvocation@@MongoJsonSchema.builder().required("address").build() @AT@ 6823 @LENGTH@ 15
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@MongoJsonSchema.builder().required("address").build() @AT@ 6869 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(template.find(query(matchingDocumentStructure(schema)),Document.class,template.getCollectionName(Person.class))).hasSize(2) @TO@ MethodDeclaration@@public, void, MethodName:findsWithSchemaReturningRawDocument,  @AT@ 6881 @LENGTH@ 142
------INS MethodInvocation@@assertThat(template.find(query(matchingDocumentStructure(schema)),Document.class,template.getCollectionName(Person.class))).hasSize(2) @TO@ ExpressionStatement@@MethodInvocation:assertThat(template.find(query(matchingDocumentStructure(schema)),Document.class,template.getCollectionName(Person.class))).hasSize(2) @AT@ 6881 @LENGTH@ 141
---------INS MethodInvocation@@MethodName:assertThat:[template.find(query(matchingDocumentStructure(schema)),Document.class,template.getCollectionName(Person.class))] @TO@ MethodInvocation@@assertThat(template.find(query(matchingDocumentStructure(schema)),Document.class,template.getCollectionName(Person.class))).hasSize(2) @AT@ 6881 @LENGTH@ 125
------------INS MethodInvocation@@template.find(query(matchingDocumentStructure(schema)),Document.class,template.getCollectionName(Person.class)) @TO@ MethodInvocation@@MethodName:assertThat:[template.find(query(matchingDocumentStructure(schema)),Document.class,template.getCollectionName(Person.class))] @AT@ 6892 @LENGTH@ 113
---------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.find(query(matchingDocumentStructure(schema)),Document.class,template.getCollectionName(Person.class)) @AT@ 6892 @LENGTH@ 8
---------------INS SimpleName@@MethodName:find:[query(matchingDocumentStructure(schema)), Document.class, template.getCollectionName(Person.class)] @TO@ MethodInvocation@@template.find(query(matchingDocumentStructure(schema)),Document.class,template.getCollectionName(Person.class)) @AT@ 6901 @LENGTH@ 104
------------------INS MethodInvocation@@query(matchingDocumentStructure(schema)) @TO@ SimpleName@@MethodName:find:[query(matchingDocumentStructure(schema)), Document.class, template.getCollectionName(Person.class)] @AT@ 6906 @LENGTH@ 40
---------------------INS SimpleName@@MethodName:query:[matchingDocumentStructure(schema)] @TO@ MethodInvocation@@query(matchingDocumentStructure(schema)) @AT@ 6906 @LENGTH@ 40
------------------------INS MethodInvocation@@matchingDocumentStructure(schema) @TO@ SimpleName@@MethodName:query:[matchingDocumentStructure(schema)] @AT@ 6912 @LENGTH@ 33
---------------------------INS SimpleName@@MethodName:matchingDocumentStructure:[schema] @TO@ MethodInvocation@@matchingDocumentStructure(schema) @AT@ 6912 @LENGTH@ 33
------------------------------INS SimpleName@@schema @TO@ SimpleName@@MethodName:matchingDocumentStructure:[schema] @AT@ 6938 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:matchingDocumentStructure:[schema] @TO@ MethodInvocation@@matchingDocumentStructure(schema) @AT@ 6912 @LENGTH@ 33
------------------------------INS SimpleName@@schema @TO@ SimpleName@@MethodName:matchingDocumentStructure:[schema] @AT@ 6938 @LENGTH@ 6
------------------INS TypeLiteral@@Document.class @TO@ SimpleName@@MethodName:find:[query(matchingDocumentStructure(schema)), Document.class, template.getCollectionName(Person.class)] @AT@ 6948 @LENGTH@ 14
------------------INS MethodInvocation@@template.getCollectionName(Person.class) @TO@ SimpleName@@MethodName:find:[query(matchingDocumentStructure(schema)), Document.class, template.getCollectionName(Person.class)] @AT@ 6964 @LENGTH@ 40
---------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.getCollectionName(Person.class) @AT@ 6964 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getCollectionName:[Person.class] @TO@ MethodInvocation@@template.getCollectionName(Person.class) @AT@ 6973 @LENGTH@ 31
------------------------INS TypeLiteral@@Person.class @TO@ SimpleName@@MethodName:getCollectionName:[Person.class] @AT@ 6991 @LENGTH@ 12
---------INS SimpleName@@MethodName:hasSize:[2] @TO@ MethodInvocation@@assertThat(template.find(query(matchingDocumentStructure(schema)),Document.class,template.getCollectionName(Person.class))).hasSize(2) @AT@ 7012 @LENGTH@ 10
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:hasSize:[2] @AT@ 7020 @LENGTH@ 1


INS VariableDeclarationStatement@@String uncompressedContentString=new String(uncompressedContent); @TO@ MethodDeclaration@@public, static, MimeEntity, MethodName:parseCompressedEntity, byte[] compressedData, InputExpanderProvider expanderProvider, HttpException,  @AT@ 7118 @LENGTH@ 67
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String uncompressedContentString=new String(uncompressedContent); @AT@ 7118 @LENGTH@ 6
---INS VariableDeclarationFragment@@uncompressedContentString=new String(uncompressedContent) @TO@ VariableDeclarationStatement@@String uncompressedContentString=new String(uncompressedContent); @AT@ 7125 @LENGTH@ 59
------INS SimpleName@@uncompressedContentString @TO@ VariableDeclarationFragment@@uncompressedContentString=new String(uncompressedContent) @AT@ 7125 @LENGTH@ 25
------INS ClassInstanceCreation@@String[uncompressedContent] @TO@ VariableDeclarationFragment@@uncompressedContentString=new String(uncompressedContent) @AT@ 7153 @LENGTH@ 31
---------INS New@@new @TO@ ClassInstanceCreation@@String[uncompressedContent] @AT@ 7153 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[uncompressedContent] @AT@ 7157 @LENGTH@ 6
---------INS SimpleName@@uncompressedContent @TO@ ClassInstanceCreation@@String[uncompressedContent] @AT@ 7164 @LENGTH@ 19


UPD Block@@ThenBody:{  value=this.beanExpressionContext.getBeanFactory().resolveEmbeddedValue(value);  Object newValue=this.resolver.evaluate(value,this.beanExpressionContext);  Assert.isInstanceOf(String.class,newValue,"Invalid @SendTo expression");  return (String)newValue;} @TO@ ThenBody:{  String resolvedValue=this.beanExpressionContext.getBeanFactory().resolveEmbeddedValue(value);  Object newValue=this.resolver.evaluate(resolvedValue,this.beanExpressionContext);  Assert.isInstanceOf(String.class,newValue,"Invalid @SendTo expression");  return (String)newValue;} @AT@ 6831 @LENGTH@ 276
---DEL ExpressionStatement@@Assignment:value=this.beanExpressionContext.getBeanFactory().resolveEmbeddedValue(value) @AT@ 6836 @LENGTH@ 80
------DEL Assignment@@value=this.beanExpressionContext.getBeanFactory().resolveEmbeddedValue(value) @AT@ 6836 @LENGTH@ 79
---------DEL SimpleName@@value @AT@ 6836 @LENGTH@ 5
---------DEL Operator@@= @AT@ 6841 @LENGTH@ 1
---INS VariableDeclarationStatement@@String resolvedValue=this.beanExpressionContext.getBeanFactory().resolveEmbeddedValue(value); @TO@ Block@@ThenBody:{  value=this.beanExpressionContext.getBeanFactory().resolveEmbeddedValue(value);  Object newValue=this.resolver.evaluate(value,this.beanExpressionContext);  Assert.isInstanceOf(String.class,newValue,"Invalid @SendTo expression");  return (String)newValue;} @AT@ 6847 @LENGTH@ 95
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String resolvedValue=this.beanExpressionContext.getBeanFactory().resolveEmbeddedValue(value); @AT@ 6847 @LENGTH@ 6
------INS VariableDeclarationFragment@@resolvedValue=this.beanExpressionContext.getBeanFactory().resolveEmbeddedValue(value) @TO@ VariableDeclarationStatement@@String resolvedValue=this.beanExpressionContext.getBeanFactory().resolveEmbeddedValue(value); @AT@ 6854 @LENGTH@ 87
---------MOV MethodInvocation@@this.beanExpressionContext.getBeanFactory().resolveEmbeddedValue(value) @TO@ VariableDeclarationFragment@@resolvedValue=this.beanExpressionContext.getBeanFactory().resolveEmbeddedValue(value) @AT@ 6844 @LENGTH@ 71
---------INS SimpleName@@resolvedValue @TO@ VariableDeclarationFragment@@resolvedValue=this.beanExpressionContext.getBeanFactory().resolveEmbeddedValue(value) @AT@ 6854 @LENGTH@ 13
---UPD VariableDeclarationStatement@@Object newValue=this.resolver.evaluate(value,this.beanExpressionContext); @TO@ Object newValue=this.resolver.evaluate(resolvedValue,this.beanExpressionContext); @AT@ 6920 @LENGTH@ 76
------UPD VariableDeclarationFragment@@newValue=this.resolver.evaluate(value,this.beanExpressionContext) @TO@ newValue=this.resolver.evaluate(resolvedValue,this.beanExpressionContext) @AT@ 6927 @LENGTH@ 68
---------UPD MethodInvocation@@this.resolver.evaluate(value,this.beanExpressionContext) @TO@ this.resolver.evaluate(resolvedValue,this.beanExpressionContext) @AT@ 6938 @LENGTH@ 57
------------UPD SimpleName@@MethodName:evaluate:[value, this.beanExpressionContext] @TO@ MethodName:evaluate:[resolvedValue, this.beanExpressionContext] @AT@ 6952 @LENGTH@ 43
---------------UPD SimpleName@@value @TO@ resolvedValue @AT@ 6961 @LENGTH@ 5


UPD TypeDeclaration@@[public]Neo4jOgmEntityInstantiatorConfigurationBean,  @TO@ Neo4jOgmEntityInstantiatorConfigurationBean,  @AT@ 1250 @LENGTH@ 1113
---DEL Modifier@@public @AT@ 1250 @LENGTH@ 6


DEL FieldDeclaration@@AmazonS3ClientMock, [clientMock=new AmazonS3ClientMock()] @AT@ 1647 @LENGTH@ 57
---DEL SimpleType@@AmazonS3ClientMock @AT@ 1647 @LENGTH@ 18
---DEL VariableDeclarationFragment@@clientMock=new AmazonS3ClientMock() @AT@ 1666 @LENGTH@ 37
------DEL SimpleName@@clientMock @AT@ 1666 @LENGTH@ 10
------DEL ClassInstanceCreation@@AmazonS3ClientMock[] @AT@ 1679 @LENGTH@ 24
---------DEL New@@new @AT@ 1679 @LENGTH@ 3
---------DEL SimpleType@@AmazonS3ClientMock @AT@ 1683 @LENGTH@ 18


UPD FieldDeclaration@@private, static, final, Pattern, [pattern=Pattern.compile("^((persistent|non-persistent)://)?(?<namespace>(?<tenant>.+)/.+)/.+$")] @TO@ private, static, final, Pattern, [PATTERN=Pattern.compile("^((persistent|non-persistent)://)?(?<namespace>(?<tenant>.+)/.+)/.+$")] @AT@ 949 @LENGTH@ 127
---UPD VariableDeclarationFragment@@pattern=Pattern.compile("^((persistent|non-persistent)://)?(?<namespace>(?<tenant>.+)/.+)/.+$") @TO@ PATTERN=Pattern.compile("^((persistent|non-persistent)://)?(?<namespace>(?<tenant>.+)/.+)/.+$") @AT@ 978 @LENGTH@ 97
------UPD SimpleName@@pattern @TO@ PATTERN @AT@ 978 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new InvalidDataAccessApiUsageException("MUTLI is currently not supported in cluster mode.") @TO@ ClassInstanceCreation:new InvalidDataAccessApiUsageException("MULTI is currently not supported in cluster mode.") @AT@ 11958 @LENGTH@ 98
---UPD ClassInstanceCreation@@InvalidDataAccessApiUsageException["MUTLI is currently not supported in cluster mode."] @TO@ InvalidDataAccessApiUsageException["MULTI is currently not supported in cluster mode."] @AT@ 11964 @LENGTH@ 91
------UPD StringLiteral@@"MUTLI is currently not supported in cluster mode." @TO@ "MULTI is currently not supported in cluster mode." @AT@ 12003 @LENGTH@ 51


UPD CatchClause@@catch (Exception e) {  logger.error("Failed to proxy @RabbitListener with id: " + id);} @TO@ catch (Exception e) {  throw new AmqpException("Failed to proxy @RabbitListener with id: " + id,e);} @AT@ 3497 @LENGTH@ 96
---DEL ExpressionStatement@@MethodInvocation:logger.error("Failed to proxy @RabbitListener with id: " + id) @AT@ 3524 @LENGTH@ 63
------DEL MethodInvocation@@logger.error("Failed to proxy @RabbitListener with id: " + id) @AT@ 3524 @LENGTH@ 62
---------DEL SimpleName@@Name:logger @AT@ 3524 @LENGTH@ 6
---------DEL SimpleName@@MethodName:error:["Failed to proxy @RabbitListener with id: " + id] @AT@ 3531 @LENGTH@ 55
------------DEL InfixExpression@@"Failed to proxy @RabbitListener with id: " + id @AT@ 3537 @LENGTH@ 48
---INS ThrowStatement@@ClassInstanceCreation:new AmqpException("Failed to proxy @RabbitListener with id: " + id,e) @TO@ CatchClause@@catch (Exception e) {  logger.error("Failed to proxy @RabbitListener with id: " + id);} @AT@ 3571 @LENGTH@ 77
------INS ClassInstanceCreation@@AmqpException["Failed to proxy @RabbitListener with id: " + id, e] @TO@ ThrowStatement@@ClassInstanceCreation:new AmqpException("Failed to proxy @RabbitListener with id: " + id,e) @AT@ 3577 @LENGTH@ 70
---------INS New@@new @TO@ ClassInstanceCreation@@AmqpException["Failed to proxy @RabbitListener with id: " + id, e] @AT@ 3577 @LENGTH@ 3
---------INS SimpleType@@AmqpException @TO@ ClassInstanceCreation@@AmqpException["Failed to proxy @RabbitListener with id: " + id, e] @AT@ 3581 @LENGTH@ 13
---------INS InfixExpression@@"Failed to proxy @RabbitListener with id: " + id @TO@ ClassInstanceCreation@@AmqpException["Failed to proxy @RabbitListener with id: " + id, e] @AT@ 3595 @LENGTH@ 48
------------MOV StringLiteral@@"Failed to proxy @RabbitListener with id: " @TO@ InfixExpression@@"Failed to proxy @RabbitListener with id: " + id @AT@ 3537 @LENGTH@ 43
------------MOV Operator@@+ @TO@ InfixExpression@@"Failed to proxy @RabbitListener with id: " + id @AT@ 3580 @LENGTH@ 1
------------MOV SimpleName@@id @TO@ InfixExpression@@"Failed to proxy @RabbitListener with id: " + id @AT@ 3583 @LENGTH@ 2
---------INS SimpleName@@e @TO@ ClassInstanceCreation@@AmqpException["Failed to proxy @RabbitListener with id: " + id, e] @AT@ 3645 @LENGTH@ 1


UPD TryStatement@@try {  triggerPreWarm(rawStore);} catch (Exception e) {  LOG.error("Prewarm failure",e);  return;} @TO@ try {  triggerPreWarm(rawStore);  shouldRunPrewarm=false;} catch (Exception e) {  LOG.error("Prewarm failure",e);  return;} @AT@ 33869 @LENGTH@ 144
---INS ExpressionStatement@@Assignment:shouldRunPrewarm=false @TO@ TryStatement@@try {  triggerPreWarm(rawStore);} catch (Exception e) {  LOG.error("Prewarm failure",e);  return;} @AT@ 33921 @LENGTH@ 25
------INS Assignment@@shouldRunPrewarm=false @TO@ ExpressionStatement@@Assignment:shouldRunPrewarm=false @AT@ 33921 @LENGTH@ 24
---------INS SimpleName@@shouldRunPrewarm @TO@ Assignment@@shouldRunPrewarm=false @AT@ 33921 @LENGTH@ 16
---------INS Operator@@= @TO@ Assignment@@shouldRunPrewarm=false @AT@ 33937 @LENGTH@ 1
---------INS BooleanLiteral@@false @TO@ Assignment@@shouldRunPrewarm=false @AT@ 33940 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:logger.info(" >>>>>>>>>>>>>>>>>>>>> jira example - add new issue") @TO@ MethodInvocation:LOG.info(" >>>>>>>>>>>>>>>>>>>>> jira example - add new issue") @AT@ 1532 @LENGTH@ 67
---UPD MethodInvocation@@logger.info(" >>>>>>>>>>>>>>>>>>>>> jira example - add new issue") @TO@ LOG.info(" >>>>>>>>>>>>>>>>>>>>> jira example - add new issue") @AT@ 1532 @LENGTH@ 66
------UPD SimpleName@@Name:logger @TO@ Name:LOG @AT@ 1532 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:givenPulsarConsumerIsNull_whenICreateFactory_verifyIllegalArgumentExceptionIsThrown,  @TO@ public, void, MethodName:givenPulsarConsumerIsNullwhenICreateFactoryverifyIllegalArgumentExceptionIsThrown,  @AT@ 1186 @LENGTH@ 159
---UPD SimpleName@@MethodName:givenPulsarConsumerIsNull_whenICreateFactory_verifyIllegalArgumentExceptionIsThrown @TO@ MethodName:givenPulsarConsumerIsNullwhenICreateFactoryverifyIllegalArgumentExceptionIsThrown @AT@ 1198 @LENGTH@ 83


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelMailTest.class)).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelMailTest.class)).dependency("javax.mail:javax.mail-api").build() @AT@ 1441 @LENGTH@ 119
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelMailTest.class)).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelMailTest.class)).dependency("javax.mail:javax.mail-api").build() @AT@ 1448 @LENGTH@ 111
------INS MethodInvocation@@MethodName:dependency:["javax.mail:javax.mail-api"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelMailTest.class)).build() @AT@ 1448 @LENGTH@ 143
---------INS StringLiteral@@"javax.mail:javax.mail-api" @TO@ MethodInvocation@@MethodName:dependency:["javax.mail:javax.mail-api"] @AT@ 1563 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:registry.put("myManager",cacheManager) @TO@ MethodInvocation:registry.bind("myManager",cacheManager) @AT@ 5269 @LENGTH@ 40
---UPD MethodInvocation@@registry.put("myManager",cacheManager) @TO@ registry.bind("myManager",cacheManager) @AT@ 5269 @LENGTH@ 39
------UPD SimpleName@@MethodName:put:["myManager", cacheManager] @TO@ MethodName:bind:["myManager", cacheManager] @AT@ 5278 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:assertEquals("FOO",rabbitTemplate.convertSendAndReceive("auto.exch","auto.rk","foo")) @TO@ MethodInvocation:assertEquals("FOOthreadNamer-1",rabbitTemplate.convertSendAndReceive("auto.exch","auto.rk","foo")) @AT@ 10786 @LENGTH@ 89
---UPD MethodInvocation@@assertEquals("FOO",rabbitTemplate.convertSendAndReceive("auto.exch","auto.rk","foo")) @TO@ assertEquals("FOOthreadNamer-1",rabbitTemplate.convertSendAndReceive("auto.exch","auto.rk","foo")) @AT@ 10786 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertEquals:["FOO", rabbitTemplate.convertSendAndReceive("auto.exch","auto.rk","foo")] @TO@ MethodName:assertEquals:["FOOthreadNamer-1", rabbitTemplate.convertSendAndReceive("auto.exch","auto.rk","foo")] @AT@ 10786 @LENGTH@ 88
---------UPD StringLiteral@@"FOO" @TO@ "FOOthreadNamer-1" @AT@ 10799 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:result=catalog.validateLanguagePredicate(null,"simple",detail.getSimple()) @TO@ Assignment:result=catalog.validateLanguageExpression(null,"simple",detail.getSimple()) @AT@ 27674 @LENGTH@ 79
---UPD Assignment@@result=catalog.validateLanguagePredicate(null,"simple",detail.getSimple()) @TO@ result=catalog.validateLanguageExpression(null,"simple",detail.getSimple()) @AT@ 27674 @LENGTH@ 78
------UPD MethodInvocation@@catalog.validateLanguagePredicate(null,"simple",detail.getSimple()) @TO@ catalog.validateLanguageExpression(null,"simple",detail.getSimple()) @AT@ 27683 @LENGTH@ 69
---------UPD SimpleName@@MethodName:validateLanguagePredicate:[null, "simple", detail.getSimple()] @TO@ MethodName:validateLanguageExpression:[null, "simple", detail.getSimple()] @AT@ 27691 @LENGTH@ 61


UPD EnhancedForStatement@@for (Header header : headers) {  for (  String value : header.getValues()) {    response.addHeader(header.getName(),value);  }} @TO@ for (Header header : headers) {  if (!response.containsHeader(header.getName())) {    for (    String value : header.getValues()) {      response.addHeader(header.getName(),value);    }  }} @AT@ 1867 @LENGTH@ 134
---INS IfStatement@@if (!response.containsHeader(header.getName())) {  for (  String value : header.getValues()) {    response.addHeader(header.getName(),value);  }} @TO@ EnhancedForStatement@@for (Header header : headers) {  for (  String value : header.getValues()) {    response.addHeader(header.getName(),value);  }} @AT@ 1926 @LENGTH@ 156
------INS PrefixExpression@@!response.containsHeader(header.getName()) @TO@ IfStatement@@if (!response.containsHeader(header.getName())) {  for (  String value : header.getValues()) {    response.addHeader(header.getName(),value);  }} @AT@ 1930 @LENGTH@ 42
---------INS Operator@@! @TO@ PrefixExpression@@!response.containsHeader(header.getName()) @AT@ 1930 @LENGTH@ 1
---------INS MethodInvocation@@response.containsHeader(header.getName()) @TO@ PrefixExpression@@!response.containsHeader(header.getName()) @AT@ 1931 @LENGTH@ 41
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.containsHeader(header.getName()) @AT@ 1931 @LENGTH@ 8
------------INS SimpleName@@MethodName:containsHeader:[header.getName()] @TO@ MethodInvocation@@response.containsHeader(header.getName()) @AT@ 1940 @LENGTH@ 32
---------------INS MethodInvocation@@header.getName() @TO@ SimpleName@@MethodName:containsHeader:[header.getName()] @AT@ 1955 @LENGTH@ 16
------------------INS SimpleName@@Name:header @TO@ MethodInvocation@@header.getName() @AT@ 1955 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@header.getName() @AT@ 1962 @LENGTH@ 9
------INS Block@@ThenBody:{  for (  String value : header.getValues()) {    response.addHeader(header.getName(),value);  }} @TO@ IfStatement@@if (!response.containsHeader(header.getName())) {  for (  String value : header.getValues()) {    response.addHeader(header.getName(),value);  }} @AT@ 1974 @LENGTH@ 108
---------MOV EnhancedForStatement@@for (String value : header.getValues()) {  response.addHeader(header.getName(),value);} @TO@ Block@@ThenBody:{  for (  String value : header.getValues()) {    response.addHeader(header.getName(),value);  }} @AT@ 1902 @LENGTH@ 95


UPD ReturnStatement@@InfixExpression:source.size() == 1 && !StringUtils.hasText(source.get(0)) @TO@ InfixExpression:source.size() == 1 && !StringUtils.hasLength(source.get(0)) @AT@ 7395 @LENGTH@ 65
---UPD InfixExpression@@source.size() == 1 && !StringUtils.hasText(source.get(0)) @TO@ source.size() == 1 && !StringUtils.hasLength(source.get(0)) @AT@ 7402 @LENGTH@ 57
------UPD PrefixExpression@@!StringUtils.hasText(source.get(0)) @TO@ !StringUtils.hasLength(source.get(0)) @AT@ 7424 @LENGTH@ 35
---------UPD MethodInvocation@@StringUtils.hasText(source.get(0)) @TO@ StringUtils.hasLength(source.get(0)) @AT@ 7425 @LENGTH@ 34
------------UPD SimpleName@@MethodName:hasText:[source.get(0)] @TO@ MethodName:hasLength:[source.get(0)] @AT@ 7437 @LENGTH@ 22


INS ExpressionStatement@@MethodInvocation:registry.bind("sslContextParameters",new SSLContextParameters()) @TO@ MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 2429 @LENGTH@ 66
---INS MethodInvocation@@registry.bind("sslContextParameters",new SSLContextParameters()) @TO@ ExpressionStatement@@MethodInvocation:registry.bind("sslContextParameters",new SSLContextParameters()) @AT@ 2429 @LENGTH@ 65
------INS SimpleName@@Name:registry @TO@ MethodInvocation@@registry.bind("sslContextParameters",new SSLContextParameters()) @AT@ 2429 @LENGTH@ 8
------INS SimpleName@@MethodName:bind:["sslContextParameters", new SSLContextParameters()] @TO@ MethodInvocation@@registry.bind("sslContextParameters",new SSLContextParameters()) @AT@ 2438 @LENGTH@ 56
---------INS StringLiteral@@"sslContextParameters" @TO@ SimpleName@@MethodName:bind:["sslContextParameters", new SSLContextParameters()] @AT@ 2443 @LENGTH@ 22
---------INS ClassInstanceCreation@@SSLContextParameters[] @TO@ SimpleName@@MethodName:bind:["sslContextParameters", new SSLContextParameters()] @AT@ 2467 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@SSLContextParameters[] @AT@ 2467 @LENGTH@ 3
------------INS SimpleType@@SSLContextParameters @TO@ ClassInstanceCreation@@SSLContextParameters[] @AT@ 2471 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:template.sendBody("mock:results",new TestResult(uri,iterations,threads,watch.stop())) @TO@ MethodInvocation:template.sendBody("mock:results",new TestResult(uri,iterations,threads,watch.taken())) @AT@ 2507 @LENGTH@ 90
---UPD MethodInvocation@@template.sendBody("mock:results",new TestResult(uri,iterations,threads,watch.stop())) @TO@ template.sendBody("mock:results",new TestResult(uri,iterations,threads,watch.taken())) @AT@ 2507 @LENGTH@ 89
------UPD SimpleName@@MethodName:sendBody:["mock:results", new TestResult(uri,iterations,threads,watch.stop())] @TO@ MethodName:sendBody:["mock:results", new TestResult(uri,iterations,threads,watch.taken())] @AT@ 2516 @LENGTH@ 80
---------UPD ClassInstanceCreation@@TestResult[uri, iterations, threads, watch.stop()] @TO@ TestResult[uri, iterations, threads, watch.taken()] @AT@ 2541 @LENGTH@ 54
------------UPD MethodInvocation@@watch.stop() @TO@ watch.taken() @AT@ 2582 @LENGTH@ 12
---------------UPD SimpleName@@MethodName:stop:[] @TO@ MethodName:taken:[] @AT@ 2588 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.20.0.Final").dependency("org.drools:drools-compiler:7.20.0.Final").unitTestExpectedNumber(0).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.21.0.Final").dependency("org.drools:drools-compiler:7.21.0.Final").unitTestExpectedNumber(0).build() @AT@ 1441 @LENGTH@ 300
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.20.0.Final").dependency("org.drools:drools-compiler:7.20.0.Final").unitTestExpectedNumber(0).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.21.0.Final").dependency("org.drools:drools-compiler:7.21.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 292
------UPD MethodInvocation@@MethodName:dependency:["org.drools:drools-compiler:7.20.0.Final"] @TO@ MethodName:dependency:["org.drools:drools-compiler:7.21.0.Final"] @AT@ 1448 @LENGTH@ 224
---------UPD StringLiteral@@"org.drools:drools-compiler:7.20.0.Final" @TO@ "org.drools:drools-compiler:7.21.0.Final" @AT@ 1630 @LENGTH@ 41
------UPD MethodInvocation@@MethodName:dependency:["org.drools:drools-core:7.20.0.Final"] @TO@ MethodName:dependency:["org.drools:drools-core:7.21.0.Final"] @AT@ 1448 @LENGTH@ 153
---------UPD StringLiteral@@"org.drools:drools-core:7.20.0.Final" @TO@ "org.drools:drools-core:7.21.0.Final" @AT@ 1563 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:entryPoints.put(new NegatedRequestMatcher(defaultLoginPageMatcher),new LoginUrlAuthenticationEntryPoint(providerLoginPage)) @TO@ MethodInvocation:entryPoints.put(new AndRequestMatcher(notXRequestedWith,new NegatedRequestMatcher(defaultLoginPageMatcher)),new LoginUrlAuthenticationEntryPoint(providerLoginPage)) @AT@ 28271 @LENGTH@ 129
---UPD MethodInvocation@@entryPoints.put(new NegatedRequestMatcher(defaultLoginPageMatcher),new LoginUrlAuthenticationEntryPoint(providerLoginPage)) @TO@ entryPoints.put(new AndRequestMatcher(notXRequestedWith,new NegatedRequestMatcher(defaultLoginPageMatcher)),new LoginUrlAuthenticationEntryPoint(providerLoginPage)) @AT@ 28271 @LENGTH@ 128
------UPD SimpleName@@MethodName:put:[new NegatedRequestMatcher(defaultLoginPageMatcher), new LoginUrlAuthenticationEntryPoint(providerLoginPage)] @TO@ MethodName:put:[new AndRequestMatcher(notXRequestedWith,new NegatedRequestMatcher(defaultLoginPageMatcher)), new LoginUrlAuthenticationEntryPoint(providerLoginPage)] @AT@ 28283 @LENGTH@ 116
---------DEL ClassInstanceCreation@@NegatedRequestMatcher[defaultLoginPageMatcher] @AT@ 28287 @LENGTH@ 50
---------INS ClassInstanceCreation@@AndRequestMatcher[notXRequestedWith, new NegatedRequestMatcher(defaultLoginPageMatcher)] @TO@ SimpleName@@MethodName:put:[new NegatedRequestMatcher(defaultLoginPageMatcher), new LoginUrlAuthenticationEntryPoint(providerLoginPage)] @AT@ 28510 @LENGTH@ 92
------------INS New@@new @TO@ ClassInstanceCreation@@AndRequestMatcher[notXRequestedWith, new NegatedRequestMatcher(defaultLoginPageMatcher)] @AT@ 28510 @LENGTH@ 3
------------INS SimpleType@@AndRequestMatcher @TO@ ClassInstanceCreation@@AndRequestMatcher[notXRequestedWith, new NegatedRequestMatcher(defaultLoginPageMatcher)] @AT@ 28514 @LENGTH@ 17
------------INS SimpleName@@notXRequestedWith @TO@ ClassInstanceCreation@@AndRequestMatcher[notXRequestedWith, new NegatedRequestMatcher(defaultLoginPageMatcher)] @AT@ 28532 @LENGTH@ 17
------------INS ClassInstanceCreation@@NegatedRequestMatcher[defaultLoginPageMatcher] @TO@ ClassInstanceCreation@@AndRequestMatcher[notXRequestedWith, new NegatedRequestMatcher(defaultLoginPageMatcher)] @AT@ 28551 @LENGTH@ 50
---------------MOV New@@new @TO@ ClassInstanceCreation@@NegatedRequestMatcher[defaultLoginPageMatcher] @AT@ 28287 @LENGTH@ 3
---------------MOV SimpleType@@NegatedRequestMatcher @TO@ ClassInstanceCreation@@NegatedRequestMatcher[defaultLoginPageMatcher] @AT@ 28291 @LENGTH@ 21
---------------MOV SimpleName@@defaultLoginPageMatcher @TO@ ClassInstanceCreation@@NegatedRequestMatcher[defaultLoginPageMatcher] @AT@ 28313 @LENGTH@ 23


INS MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @TO@ TypeDeclaration@@[public]XXssProtectionHeaderWriterTests,  @AT@ 2582 @LENGTH@ 275
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2582 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2589 @LENGTH@ 4
---INS SimpleName@@MethodName:writeHeaderOnlyIfNotPresent @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2594 @LENGTH@ 27
---INS VariableDeclarationStatement@@String value=new String("value"); @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2627 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=new String("value"); @AT@ 2627 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=new String("value") @TO@ VariableDeclarationStatement@@String value=new String("value"); @AT@ 2634 @LENGTH@ 27
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=new String("value") @AT@ 2634 @LENGTH@ 5
---------INS ClassInstanceCreation@@String["value"] @TO@ VariableDeclarationFragment@@value=new String("value") @AT@ 2642 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@String["value"] @AT@ 2642 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String["value"] @AT@ 2646 @LENGTH@ 6
------------INS StringLiteral@@"value" @TO@ ClassInstanceCreation@@String["value"] @AT@ 2653 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:this.response.setHeader(XSS_PROTECTION_HEADER,value) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2665 @LENGTH@ 54
------INS MethodInvocation@@this.response.setHeader(XSS_PROTECTION_HEADER,value) @TO@ ExpressionStatement@@MethodInvocation:this.response.setHeader(XSS_PROTECTION_HEADER,value) @AT@ 2665 @LENGTH@ 53
---------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.setHeader(XSS_PROTECTION_HEADER,value) @AT@ 2665 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 2665 @LENGTH@ 4
------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 2670 @LENGTH@ 8
---------INS SimpleName@@MethodName:setHeader:[XSS_PROTECTION_HEADER, value] @TO@ MethodInvocation@@this.response.setHeader(XSS_PROTECTION_HEADER,value) @AT@ 2679 @LENGTH@ 39
------------INS SimpleName@@XSS_PROTECTION_HEADER @TO@ SimpleName@@MethodName:setHeader:[XSS_PROTECTION_HEADER, value] @AT@ 2689 @LENGTH@ 21
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:setHeader:[XSS_PROTECTION_HEADER, value] @AT@ 2712 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:this.writer.writeHeaders(this.request,this.response) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2722 @LENGTH@ 54
------INS MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @TO@ ExpressionStatement@@MethodInvocation:this.writer.writeHeaders(this.request,this.response) @AT@ 2722 @LENGTH@ 53
---------INS FieldAccess@@this.writer @TO@ MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @AT@ 2722 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.writer @AT@ 2722 @LENGTH@ 4
------------INS SimpleName@@writer @TO@ FieldAccess@@this.writer @AT@ 2727 @LENGTH@ 6
---------INS SimpleName@@MethodName:writeHeaders:[this.request, this.response] @TO@ MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @AT@ 2734 @LENGTH@ 41
------------INS FieldAccess@@this.request @TO@ SimpleName@@MethodName:writeHeaders:[this.request, this.response] @AT@ 2747 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 2747 @LENGTH@ 4
---------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 2752 @LENGTH@ 7
------------INS FieldAccess@@this.response @TO@ SimpleName@@MethodName:writeHeaders:[this.request, this.response] @AT@ 2761 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 2761 @LENGTH@ 4
---------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 2766 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(this.response.getHeader(XSS_PROTECTION_HEADER)).isSameAs(value) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2779 @LENGTH@ 75
------INS MethodInvocation@@assertThat(this.response.getHeader(XSS_PROTECTION_HEADER)).isSameAs(value) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.response.getHeader(XSS_PROTECTION_HEADER)).isSameAs(value) @AT@ 2779 @LENGTH@ 74
---------INS MethodInvocation@@MethodName:assertThat:[this.response.getHeader(XSS_PROTECTION_HEADER)] @TO@ MethodInvocation@@assertThat(this.response.getHeader(XSS_PROTECTION_HEADER)).isSameAs(value) @AT@ 2779 @LENGTH@ 58
------------INS MethodInvocation@@this.response.getHeader(XSS_PROTECTION_HEADER) @TO@ MethodInvocation@@MethodName:assertThat:[this.response.getHeader(XSS_PROTECTION_HEADER)] @AT@ 2790 @LENGTH@ 46
---------------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.getHeader(XSS_PROTECTION_HEADER) @AT@ 2790 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 2790 @LENGTH@ 4
------------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 2795 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getHeader:[XSS_PROTECTION_HEADER] @TO@ MethodInvocation@@this.response.getHeader(XSS_PROTECTION_HEADER) @AT@ 2804 @LENGTH@ 32
------------------INS SimpleName@@XSS_PROTECTION_HEADER @TO@ SimpleName@@MethodName:getHeader:[XSS_PROTECTION_HEADER] @AT@ 2814 @LENGTH@ 21
---------INS SimpleName@@MethodName:isSameAs:[value] @TO@ MethodInvocation@@assertThat(this.response.getHeader(XSS_PROTECTION_HEADER)).isSameAs(value) @AT@ 2838 @LENGTH@ 15
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:isSameAs:[value] @AT@ 2847 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:mock.expectedFileExists("target/data/fileMEPInOutTest.txt","Hello World") @TO@ MethodInvocation:mock.expectedFileExists("target/data/FileMEPInOutTest.txt","Hello World") @AT@ 1396 @LENGTH@ 75
---UPD MethodInvocation@@mock.expectedFileExists("target/data/fileMEPInOutTest.txt","Hello World") @TO@ mock.expectedFileExists("target/data/FileMEPInOutTest.txt","Hello World") @AT@ 1396 @LENGTH@ 74
------UPD SimpleName@@MethodName:expectedFileExists:["target/data/fileMEPInOutTest.txt", "Hello World"] @TO@ MethodName:expectedFileExists:["target/data/FileMEPInOutTest.txt", "Hello World"] @AT@ 1401 @LENGTH@ 69
---------UPD StringLiteral@@"target/data/fileMEPInOutTest.txt" @TO@ "target/data/FileMEPInOutTest.txt" @AT@ 1420 @LENGTH@ 34


INS FieldDeclaration@@private, static, final, int, [SIXTEEN=16] @TO@ TypeDeclaration@@[public, final]BrokerRunning, TestWatcher @AT@ 2880 @LENGTH@ 38
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, int, [SIXTEEN=16] @AT@ 2880 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, int, [SIXTEEN=16] @AT@ 2888 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, int, [SIXTEEN=16] @AT@ 2895 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@private, static, final, int, [SIXTEEN=16] @AT@ 2901 @LENGTH@ 3
---INS VariableDeclarationFragment@@SIXTEEN=16 @TO@ FieldDeclaration@@private, static, final, int, [SIXTEEN=16] @AT@ 2905 @LENGTH@ 12
------INS SimpleName@@SIXTEEN @TO@ VariableDeclarationFragment@@SIXTEEN=16 @AT@ 2905 @LENGTH@ 7
------INS NumberLiteral@@16 @TO@ VariableDeclarationFragment@@SIXTEEN=16 @AT@ 2915 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:jstlTransform, IOException, InterruptedException,  @TO@ public, void, MethodName:jstlTransform, IOException,  @AT@ 898 @LENGTH@ 266
---DEL SimpleType@@InterruptedException @AT@ 946 @LENGTH@ 20
---UPD ExpressionStatement@@MethodInvocation:assertThat(result).contains("table") @TO@ MethodInvocation:assertThat(result).contains("<table") @AT@ 1121 @LENGTH@ 37
------UPD MethodInvocation@@assertThat(result).contains("table") @TO@ assertThat(result).contains("<table") @AT@ 1121 @LENGTH@ 36
---------UPD SimpleName@@MethodName:contains:["table"] @TO@ MethodName:contains:["<table"] @AT@ 1140 @LENGTH@ 17
------------UPD StringLiteral@@"table" @TO@ "<table" @AT@ 1149 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(result).contains("<i>Padam History</i>") @TO@ MethodDeclaration@@public, void, MethodName:jstlTransform, IOException, InterruptedException,  @AT@ 1146 @LENGTH@ 52
------INS MethodInvocation@@assertThat(result).contains("<i>Padam History</i>") @TO@ ExpressionStatement@@MethodInvocation:assertThat(result).contains("<i>Padam History</i>") @AT@ 1146 @LENGTH@ 51
---------INS MethodInvocation@@MethodName:assertThat:[result] @TO@ MethodInvocation@@assertThat(result).contains("<i>Padam History</i>") @AT@ 1146 @LENGTH@ 18
------------INS SimpleName@@result @TO@ MethodInvocation@@MethodName:assertThat:[result] @AT@ 1157 @LENGTH@ 6
---------INS SimpleName@@MethodName:contains:["<i>Padam History</i>"] @TO@ MethodInvocation@@assertThat(result).contains("<i>Padam History</i>") @AT@ 1165 @LENGTH@ 32
------------INS StringLiteral@@"<i>Padam History</i>" @TO@ SimpleName@@MethodName:contains:["<i>Padam History</i>"] @AT@ 1174 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:assertThat(result).contains("<i>Great Mistry</i>") @TO@ MethodDeclaration@@public, void, MethodName:jstlTransform, IOException, InterruptedException,  @AT@ 1207 @LENGTH@ 51
------INS MethodInvocation@@assertThat(result).contains("<i>Great Mistry</i>") @TO@ ExpressionStatement@@MethodInvocation:assertThat(result).contains("<i>Great Mistry</i>") @AT@ 1207 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:assertThat:[result] @TO@ MethodInvocation@@assertThat(result).contains("<i>Great Mistry</i>") @AT@ 1207 @LENGTH@ 18
------------INS SimpleName@@result @TO@ MethodInvocation@@MethodName:assertThat:[result] @AT@ 1218 @LENGTH@ 6
---------INS SimpleName@@MethodName:contains:["<i>Great Mistry</i>"] @TO@ MethodInvocation@@assertThat(result).contains("<i>Great Mistry</i>") @AT@ 1226 @LENGTH@ 31
------------INS StringLiteral@@"<i>Great Mistry</i>" @TO@ SimpleName@@MethodName:contains:["<i>Great Mistry</i>"] @AT@ 1235 @LENGTH@ 21


UPD FieldDeclaration@@private, SecurityContext, [securityContext] @TO@ private, volatile, SecurityContext, [securityContext] @AT@ 1796 @LENGTH@ 40
---INS Modifier@@volatile @TO@ FieldDeclaration@@private, SecurityContext, [securityContext] @AT@ 1804 @LENGTH@ 8


INS MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterBefore, WebFilter webFilter, SecurityWebFiltersOrder order,  @TO@ TypeDeclaration@@[public]ServerHttpSecurity,  @AT@ 16432 @LENGTH@ 191
---INS Modifier@@public @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterBefore, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 16432 @LENGTH@ 6
---INS SimpleType@@ServerHttpSecurity @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterBefore, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 16439 @LENGTH@ 18
---INS SimpleName@@MethodName:addFilterBefore @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterBefore, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 16458 @LENGTH@ 15
---INS SingleVariableDeclaration@@WebFilter webFilter @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterBefore, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 16474 @LENGTH@ 19
------INS SimpleType@@WebFilter @TO@ SingleVariableDeclaration@@WebFilter webFilter @AT@ 16474 @LENGTH@ 9
------INS SimpleName@@webFilter @TO@ SingleVariableDeclaration@@WebFilter webFilter @AT@ 16484 @LENGTH@ 9
---INS SingleVariableDeclaration@@SecurityWebFiltersOrder order @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterBefore, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 16495 @LENGTH@ 29
------INS SimpleType@@SecurityWebFiltersOrder @TO@ SingleVariableDeclaration@@SecurityWebFiltersOrder order @AT@ 16495 @LENGTH@ 23
------INS SimpleName@@order @TO@ SingleVariableDeclaration@@SecurityWebFiltersOrder order @AT@ 16519 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:this.webFilters.add(new OrderedWebFilter(webFilter,order.getOrder() - 1)) @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterBefore, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 16530 @LENGTH@ 75
------INS MethodInvocation@@this.webFilters.add(new OrderedWebFilter(webFilter,order.getOrder() - 1)) @TO@ ExpressionStatement@@MethodInvocation:this.webFilters.add(new OrderedWebFilter(webFilter,order.getOrder() - 1)) @AT@ 16530 @LENGTH@ 74
---------INS FieldAccess@@this.webFilters @TO@ MethodInvocation@@this.webFilters.add(new OrderedWebFilter(webFilter,order.getOrder() - 1)) @AT@ 16530 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.webFilters @AT@ 16530 @LENGTH@ 4
------------INS SimpleName@@webFilters @TO@ FieldAccess@@this.webFilters @AT@ 16535 @LENGTH@ 10
---------INS SimpleName@@MethodName:add:[new OrderedWebFilter(webFilter,order.getOrder() - 1)] @TO@ MethodInvocation@@this.webFilters.add(new OrderedWebFilter(webFilter,order.getOrder() - 1)) @AT@ 16546 @LENGTH@ 58
------------INS ClassInstanceCreation@@OrderedWebFilter[webFilter, order.getOrder() - 1] @TO@ SimpleName@@MethodName:add:[new OrderedWebFilter(webFilter,order.getOrder() - 1)] @AT@ 16550 @LENGTH@ 53
---------------INS New@@new @TO@ ClassInstanceCreation@@OrderedWebFilter[webFilter, order.getOrder() - 1] @AT@ 16550 @LENGTH@ 3
---------------INS SimpleType@@OrderedWebFilter @TO@ ClassInstanceCreation@@OrderedWebFilter[webFilter, order.getOrder() - 1] @AT@ 16554 @LENGTH@ 16
---------------INS SimpleName@@webFilter @TO@ ClassInstanceCreation@@OrderedWebFilter[webFilter, order.getOrder() - 1] @AT@ 16571 @LENGTH@ 9
---------------INS InfixExpression@@order.getOrder() - 1 @TO@ ClassInstanceCreation@@OrderedWebFilter[webFilter, order.getOrder() - 1] @AT@ 16582 @LENGTH@ 20
------------------INS MethodInvocation@@order.getOrder() @TO@ InfixExpression@@order.getOrder() - 1 @AT@ 16582 @LENGTH@ 16
---------------------INS SimpleName@@Name:order @TO@ MethodInvocation@@order.getOrder() @AT@ 16582 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getOrder:[] @TO@ MethodInvocation@@order.getOrder() @AT@ 16588 @LENGTH@ 10
------------------INS Operator@@- @TO@ InfixExpression@@order.getOrder() - 1 @AT@ 16598 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@order.getOrder() - 1 @AT@ 16601 @LENGTH@ 1
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterBefore, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 16608 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 16615 @LENGTH@ 4


UPD TryStatement@@try {  log.tracef("onMessage received message: %s '%s'",message,((TextMessage)message).getText());  final Destination replyTo=message.getJMSReplyTo();  if (replyTo == null) {    throw new RuntimeException("ReplyTo info in message was not specified" + " and bean does not know where to reply to");  }  TxTestUtil.enlistTestXAResource(tm.getTransaction(),checker);  try (JMSContext context=factory.createContext()){    context.createProducer().setJMSCorrelationID(message.getJMSMessageID()).send(replyTo,REPLY_PREFIX + ((TextMessage)message).getText());  }   TxTestUtil.waitForTimeout(tm);} catch (Exception e) {  throw new RuntimeException("onMessage method execution failed",e);} @TO@ try {  log.tracef("onMessage received message: %s '%s'",message,((TextMessage)message).getText());  final Destination replyTo=message.getJMSReplyTo();  if (replyTo == null) {    throw new RuntimeException("ReplyTo info in message was not specified" + " and bean does not know where to reply to");  }  TxTestUtil.waitForTimeout(tm);  TxTestUtil.enlistTestXAResource(tm.getTransaction(),checker);  try (JMSContext context=factory.createContext()){    context.createProducer().setJMSCorrelationID(message.getJMSMessageID()).send(replyTo,REPLY_PREFIX + ((TextMessage)message).getText());  } } catch (Exception e) {  throw new RuntimeException("onMessage method execution failed",e);} @AT@ 2650 @LENGTH@ 979
---MOV ExpressionStatement@@MethodInvocation:TxTestUtil.waitForTimeout(tm) @TO@ TryStatement@@try {  log.tracef("onMessage received message: %s '%s'",message,((TextMessage)message).getText());  final Destination replyTo=message.getJMSReplyTo();  if (replyTo == null) {    throw new RuntimeException("ReplyTo info in message was not specified" + " and bean does not know where to reply to");  }  TxTestUtil.enlistTestXAResource(tm.getTransaction(),checker);  try (JMSContext context=factory.createContext()){    context.createProducer().setJMSCorrelationID(message.getJMSMessageID()).send(replyTo,REPLY_PREFIX + ((TextMessage)message).getText());  }   TxTestUtil.waitForTimeout(tm);} catch (Exception e) {  throw new RuntimeException("onMessage method execution failed",e);} @AT@ 3477 @LENGTH@ 30


UPD ExpressionStatement@@Assignment:index=counter.updateAndGet(x -> (++x < processors.length ? x : 0)) @TO@ Assignment:index=counter.updateAndGet(x -> ++x < processors.length ? x : 0) @AT@ 6347 @LENGTH@ 69
---UPD Assignment@@index=counter.updateAndGet(x -> (++x < processors.length ? x : 0)) @TO@ index=counter.updateAndGet(x -> ++x < processors.length ? x : 0) @AT@ 6347 @LENGTH@ 68
------UPD MethodInvocation@@counter.updateAndGet(x -> (++x < processors.length ? x : 0)) @TO@ counter.updateAndGet(x -> ++x < processors.length ? x : 0) @AT@ 6355 @LENGTH@ 60
---------UPD SimpleName@@MethodName:updateAndGet:[x -> (++x < processors.length ? x : 0)] @TO@ MethodName:updateAndGet:[x -> ++x < processors.length ? x : 0] @AT@ 6363 @LENGTH@ 52
------------UPD LambdaExpression@@x -> (++x < processors.length ? x : 0) @TO@ x -> ++x < processors.length ? x : 0 @AT@ 6376 @LENGTH@ 38
---------------DEL ParenthesizedExpression@@(++x < processors.length ? x : 0) @AT@ 6381 @LENGTH@ 33
---------------MOV ConditionalExpression@@++x < processors.length ? x : 0 @TO@ LambdaExpression@@x -> (++x < processors.length ? x : 0) @AT@ 6382 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:ParserUtil.parseHeaders(buffer,parsedOp,ctx) @TO@ MethodInvocation:parsedOp.parseOperation(null,buffer,ctx) @AT@ 4398 @LENGTH@ 47
---UPD MethodInvocation@@ParserUtil.parseHeaders(buffer,parsedOp,ctx) @TO@ parsedOp.parseOperation(null,buffer,ctx) @AT@ 4398 @LENGTH@ 46
------UPD SimpleName@@Name:ParserUtil @TO@ Name:parsedOp @AT@ 4398 @LENGTH@ 10
------UPD SimpleName@@MethodName:parseHeaders:[buffer, parsedOp, ctx] @TO@ MethodName:parseOperation:[null, buffer, ctx] @AT@ 4409 @LENGTH@ 35
---------DEL SimpleName@@parsedOp @AT@ 4430 @LENGTH@ 8
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:parseHeaders:[buffer, parsedOp, ctx] @AT@ 4626 @LENGTH@ 4


INS MethodDeclaration@@public, static, Option[], MethodName:configure,  @TO@ TypeDeclaration@@[@RunWith(PaxExam.class), public]CamelNatsTest, BaseKarafTest @AT@ 1236 @LENGTH@ 521
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure,  @AT@ 1236 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure,  @AT@ 1243 @LENGTH@ 6
---INS ArrayType@@Option[] @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure,  @AT@ 1250 @LENGTH@ 8
------INS SimpleType@@Option @TO@ ArrayType@@Option[] @AT@ 1250 @LENGTH@ 6
---INS SimpleName@@MethodName:configure @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure,  @AT@ 1259 @LENGTH@ 9
---INS VariableDeclarationStatement@@Option[] baseOptions=BaseKarafTest.configure(); @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure,  @AT@ 1281 @LENGTH@ 49
------INS ArrayType@@Option[] @TO@ VariableDeclarationStatement@@Option[] baseOptions=BaseKarafTest.configure(); @AT@ 1281 @LENGTH@ 8
---------INS SimpleType@@Option @TO@ ArrayType@@Option[] @AT@ 1281 @LENGTH@ 6
------INS VariableDeclarationFragment@@baseOptions=BaseKarafTest.configure() @TO@ VariableDeclarationStatement@@Option[] baseOptions=BaseKarafTest.configure(); @AT@ 1290 @LENGTH@ 39
---------INS SimpleName@@baseOptions @TO@ VariableDeclarationFragment@@baseOptions=BaseKarafTest.configure() @AT@ 1290 @LENGTH@ 11
---------INS MethodInvocation@@BaseKarafTest.configure() @TO@ VariableDeclarationFragment@@baseOptions=BaseKarafTest.configure() @AT@ 1304 @LENGTH@ 25
------------INS SimpleName@@Name:BaseKarafTest @TO@ MethodInvocation@@BaseKarafTest.configure() @AT@ 1304 @LENGTH@ 13
------------INS SimpleName@@MethodName:configure:[] @TO@ MethodInvocation@@BaseKarafTest.configure() @AT@ 1318 @LENGTH@ 11
---INS VariableDeclarationStatement@@Option[] additionalOptions=CoreOptions.options(CoreOptions.systemPackage("sun.security.x509")); @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure,  @AT@ 1339 @LENGTH@ 119
------INS ArrayType@@Option[] @TO@ VariableDeclarationStatement@@Option[] additionalOptions=CoreOptions.options(CoreOptions.systemPackage("sun.security.x509")); @AT@ 1339 @LENGTH@ 8
---------INS SimpleType@@Option @TO@ ArrayType@@Option[] @AT@ 1339 @LENGTH@ 6
------INS VariableDeclarationFragment@@additionalOptions=CoreOptions.options(CoreOptions.systemPackage("sun.security.x509")) @TO@ VariableDeclarationStatement@@Option[] additionalOptions=CoreOptions.options(CoreOptions.systemPackage("sun.security.x509")); @AT@ 1348 @LENGTH@ 109
---------INS SimpleName@@additionalOptions @TO@ VariableDeclarationFragment@@additionalOptions=CoreOptions.options(CoreOptions.systemPackage("sun.security.x509")) @AT@ 1348 @LENGTH@ 17
---------INS MethodInvocation@@CoreOptions.options(CoreOptions.systemPackage("sun.security.x509")) @TO@ VariableDeclarationFragment@@additionalOptions=CoreOptions.options(CoreOptions.systemPackage("sun.security.x509")) @AT@ 1368 @LENGTH@ 89
------------INS SimpleName@@Name:CoreOptions @TO@ MethodInvocation@@CoreOptions.options(CoreOptions.systemPackage("sun.security.x509")) @AT@ 1368 @LENGTH@ 11
------------INS SimpleName@@MethodName:options:[CoreOptions.systemPackage("sun.security.x509")] @TO@ MethodInvocation@@CoreOptions.options(CoreOptions.systemPackage("sun.security.x509")) @AT@ 1380 @LENGTH@ 77
---------------INS MethodInvocation@@CoreOptions.systemPackage("sun.security.x509") @TO@ SimpleName@@MethodName:options:[CoreOptions.systemPackage("sun.security.x509")] @AT@ 1401 @LENGTH@ 46
------------------INS SimpleName@@Name:CoreOptions @TO@ MethodInvocation@@CoreOptions.systemPackage("sun.security.x509") @AT@ 1401 @LENGTH@ 11
------------------INS SimpleName@@MethodName:systemPackage:["sun.security.x509"] @TO@ MethodInvocation@@CoreOptions.systemPackage("sun.security.x509") @AT@ 1413 @LENGTH@ 34
---------------------INS StringLiteral@@"sun.security.x509" @TO@ SimpleName@@MethodName:systemPackage:["sun.security.x509"] @AT@ 1427 @LENGTH@ 19
---INS VariableDeclarationStatement@@Option[] options=new Option[baseOptions.length + additionalOptions.length]; @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure,  @AT@ 1468 @LENGTH@ 77
------INS ArrayType@@Option[] @TO@ VariableDeclarationStatement@@Option[] options=new Option[baseOptions.length + additionalOptions.length]; @AT@ 1468 @LENGTH@ 8
---------INS SimpleType@@Option @TO@ ArrayType@@Option[] @AT@ 1468 @LENGTH@ 6
------INS VariableDeclarationFragment@@options=new Option[baseOptions.length + additionalOptions.length] @TO@ VariableDeclarationStatement@@Option[] options=new Option[baseOptions.length + additionalOptions.length]; @AT@ 1477 @LENGTH@ 67
---------INS SimpleName@@options @TO@ VariableDeclarationFragment@@options=new Option[baseOptions.length + additionalOptions.length] @AT@ 1477 @LENGTH@ 7
---------INS ArrayCreation@@new Option[baseOptions.length + additionalOptions.length] @TO@ VariableDeclarationFragment@@options=new Option[baseOptions.length + additionalOptions.length] @AT@ 1487 @LENGTH@ 57
------------INS ArrayType@@Option[] @TO@ ArrayCreation@@new Option[baseOptions.length + additionalOptions.length] @AT@ 1491 @LENGTH@ 53
---------------INS SimpleType@@Option @TO@ ArrayType@@Option[] @AT@ 1491 @LENGTH@ 6
------------INS InfixExpression@@baseOptions.length + additionalOptions.length @TO@ ArrayCreation@@new Option[baseOptions.length + additionalOptions.length] @AT@ 1498 @LENGTH@ 45
---------------INS QualifiedName@@baseOptions.length @TO@ InfixExpression@@baseOptions.length + additionalOptions.length @AT@ 1498 @LENGTH@ 18
------------------INS SimpleName@@baseOptions @TO@ QualifiedName@@baseOptions.length @AT@ 1498 @LENGTH@ 11
------------------INS SimpleName@@length @TO@ QualifiedName@@baseOptions.length @AT@ 1510 @LENGTH@ 6
---------------INS Operator@@+ @TO@ InfixExpression@@baseOptions.length + additionalOptions.length @AT@ 1516 @LENGTH@ 1
---------------INS QualifiedName@@additionalOptions.length @TO@ InfixExpression@@baseOptions.length + additionalOptions.length @AT@ 1519 @LENGTH@ 24
------------------INS SimpleName@@additionalOptions @TO@ QualifiedName@@additionalOptions.length @AT@ 1519 @LENGTH@ 17
------------------INS SimpleName@@length @TO@ QualifiedName@@additionalOptions.length @AT@ 1537 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:System.arraycopy(baseOptions,0,options,0,baseOptions.length) @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure,  @AT@ 1554 @LENGTH@ 65
------INS MethodInvocation@@System.arraycopy(baseOptions,0,options,0,baseOptions.length) @TO@ ExpressionStatement@@MethodInvocation:System.arraycopy(baseOptions,0,options,0,baseOptions.length) @AT@ 1554 @LENGTH@ 64
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.arraycopy(baseOptions,0,options,0,baseOptions.length) @AT@ 1554 @LENGTH@ 6
---------INS SimpleName@@MethodName:arraycopy:[baseOptions, 0, options, 0, baseOptions.length] @TO@ MethodInvocation@@System.arraycopy(baseOptions,0,options,0,baseOptions.length) @AT@ 1561 @LENGTH@ 57
------------INS SimpleName@@baseOptions @TO@ SimpleName@@MethodName:arraycopy:[baseOptions, 0, options, 0, baseOptions.length] @AT@ 1571 @LENGTH@ 11
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[baseOptions, 0, options, 0, baseOptions.length] @AT@ 1584 @LENGTH@ 1
------------INS SimpleName@@options @TO@ SimpleName@@MethodName:arraycopy:[baseOptions, 0, options, 0, baseOptions.length] @AT@ 1587 @LENGTH@ 7
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[baseOptions, 0, options, 0, baseOptions.length] @AT@ 1596 @LENGTH@ 1
------------INS QualifiedName@@baseOptions.length @TO@ SimpleName@@MethodName:arraycopy:[baseOptions, 0, options, 0, baseOptions.length] @AT@ 1599 @LENGTH@ 18
---------------INS SimpleName@@baseOptions @TO@ QualifiedName@@baseOptions.length @AT@ 1599 @LENGTH@ 11
---------------INS SimpleName@@length @TO@ QualifiedName@@baseOptions.length @AT@ 1611 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:System.arraycopy(additionalOptions,0,options,baseOptions.length,additionalOptions.length) @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure,  @AT@ 1628 @LENGTH@ 94
------INS MethodInvocation@@System.arraycopy(additionalOptions,0,options,baseOptions.length,additionalOptions.length) @TO@ ExpressionStatement@@MethodInvocation:System.arraycopy(additionalOptions,0,options,baseOptions.length,additionalOptions.length) @AT@ 1628 @LENGTH@ 93
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.arraycopy(additionalOptions,0,options,baseOptions.length,additionalOptions.length) @AT@ 1628 @LENGTH@ 6
---------INS SimpleName@@MethodName:arraycopy:[additionalOptions, 0, options, baseOptions.length, additionalOptions.length] @TO@ MethodInvocation@@System.arraycopy(additionalOptions,0,options,baseOptions.length,additionalOptions.length) @AT@ 1635 @LENGTH@ 86
------------INS SimpleName@@additionalOptions @TO@ SimpleName@@MethodName:arraycopy:[additionalOptions, 0, options, baseOptions.length, additionalOptions.length] @AT@ 1645 @LENGTH@ 17
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[additionalOptions, 0, options, baseOptions.length, additionalOptions.length] @AT@ 1664 @LENGTH@ 1
------------INS SimpleName@@options @TO@ SimpleName@@MethodName:arraycopy:[additionalOptions, 0, options, baseOptions.length, additionalOptions.length] @AT@ 1667 @LENGTH@ 7
------------INS QualifiedName@@baseOptions.length @TO@ SimpleName@@MethodName:arraycopy:[additionalOptions, 0, options, baseOptions.length, additionalOptions.length] @AT@ 1676 @LENGTH@ 18
---------------INS SimpleName@@baseOptions @TO@ QualifiedName@@baseOptions.length @AT@ 1676 @LENGTH@ 11
---------------INS SimpleName@@length @TO@ QualifiedName@@baseOptions.length @AT@ 1688 @LENGTH@ 6
------------INS QualifiedName@@additionalOptions.length @TO@ SimpleName@@MethodName:arraycopy:[additionalOptions, 0, options, baseOptions.length, additionalOptions.length] @AT@ 1696 @LENGTH@ 24
---------------INS SimpleName@@additionalOptions @TO@ QualifiedName@@additionalOptions.length @AT@ 1696 @LENGTH@ 17
---------------INS SimpleName@@length @TO@ QualifiedName@@additionalOptions.length @AT@ 1714 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:options @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure,  @AT@ 1732 @LENGTH@ 15
------INS SimpleName@@options @TO@ ReturnStatement@@SimpleName:options @AT@ 1739 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testSanitizeUriWithUserInfoAndColonPassword,  @TO@ TypeDeclaration@@[public]URISupportTest,  @AT@ 10303 @LENGTH@ 267
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSanitizeUriWithUserInfoAndColonPassword,  @AT@ 10303 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSanitizeUriWithUserInfoAndColonPassword,  @AT@ 10310 @LENGTH@ 4
---INS SimpleName@@MethodName:testSanitizeUriWithUserInfoAndColonPassword @TO@ MethodDeclaration@@public, void, MethodName:testSanitizeUriWithUserInfoAndColonPassword,  @AT@ 10315 @LENGTH@ 43
---INS VariableDeclarationStatement@@String uri="sftp://USERNAME:HARRISON:COLON@sftp.server.test"; @TO@ MethodDeclaration@@public, void, MethodName:testSanitizeUriWithUserInfoAndColonPassword,  @AT@ 10371 @LENGTH@ 63
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String uri="sftp://USERNAME:HARRISON:COLON@sftp.server.test"; @AT@ 10371 @LENGTH@ 6
------INS VariableDeclarationFragment@@uri="sftp://USERNAME:HARRISON:COLON@sftp.server.test" @TO@ VariableDeclarationStatement@@String uri="sftp://USERNAME:HARRISON:COLON@sftp.server.test"; @AT@ 10378 @LENGTH@ 55
---------INS SimpleName@@uri @TO@ VariableDeclarationFragment@@uri="sftp://USERNAME:HARRISON:COLON@sftp.server.test" @AT@ 10378 @LENGTH@ 3
---------INS StringLiteral@@"sftp://USERNAME:HARRISON:COLON@sftp.server.test" @TO@ VariableDeclarationFragment@@uri="sftp://USERNAME:HARRISON:COLON@sftp.server.test" @AT@ 10384 @LENGTH@ 49
---INS VariableDeclarationStatement@@String expected="sftp://USERNAME:xxxxxx@sftp.server.test"; @TO@ MethodDeclaration@@public, void, MethodName:testSanitizeUriWithUserInfoAndColonPassword,  @AT@ 10443 @LENGTH@ 60
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String expected="sftp://USERNAME:xxxxxx@sftp.server.test"; @AT@ 10443 @LENGTH@ 6
------INS VariableDeclarationFragment@@expected="sftp://USERNAME:xxxxxx@sftp.server.test" @TO@ VariableDeclarationStatement@@String expected="sftp://USERNAME:xxxxxx@sftp.server.test"; @AT@ 10450 @LENGTH@ 52
---------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected="sftp://USERNAME:xxxxxx@sftp.server.test" @AT@ 10450 @LENGTH@ 8
---------INS StringLiteral@@"sftp://USERNAME:xxxxxx@sftp.server.test" @TO@ VariableDeclarationFragment@@expected="sftp://USERNAME:xxxxxx@sftp.server.test" @AT@ 10461 @LENGTH@ 41
---INS ExpressionStatement@@MethodInvocation:assertEquals(expected,URISupport.sanitizeUri(uri)) @TO@ MethodDeclaration@@public, void, MethodName:testSanitizeUriWithUserInfoAndColonPassword,  @AT@ 10512 @LENGTH@ 52
------INS MethodInvocation@@assertEquals(expected,URISupport.sanitizeUri(uri)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expected,URISupport.sanitizeUri(uri)) @AT@ 10512 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertEquals:[expected, URISupport.sanitizeUri(uri)] @TO@ MethodInvocation@@assertEquals(expected,URISupport.sanitizeUri(uri)) @AT@ 10512 @LENGTH@ 51
------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:assertEquals:[expected, URISupport.sanitizeUri(uri)] @AT@ 10525 @LENGTH@ 8
------------INS MethodInvocation@@URISupport.sanitizeUri(uri) @TO@ SimpleName@@MethodName:assertEquals:[expected, URISupport.sanitizeUri(uri)] @AT@ 10535 @LENGTH@ 27
---------------INS SimpleName@@Name:URISupport @TO@ MethodInvocation@@URISupport.sanitizeUri(uri) @AT@ 10535 @LENGTH@ 10
---------------INS SimpleName@@MethodName:sanitizeUri:[uri] @TO@ MethodInvocation@@URISupport.sanitizeUri(uri) @AT@ 10546 @LENGTH@ 16
------------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:sanitizeUri:[uri] @AT@ 10558 @LENGTH@ 3


MOV FieldDeclaration@@AmazonS3ClientMock, [client=new AmazonS3ClientMock()] @TO@ TypeDeclaration@@[public]S3ComponentStringTest, CamelTestSupport @AT@ 1681 @LENGTH@ 53


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(camelContext,camelContext.getTypeConverter(),config,properties) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(camelContext,config,properties) @AT@ 12687 @LENGTH@ 102
---UPD MethodInvocation@@IntrospectionSupport.setProperties(camelContext,camelContext.getTypeConverter(),config,properties) @TO@ PropertyBindingSupport.bindProperties(camelContext,config,properties) @AT@ 12687 @LENGTH@ 101
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 12687 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[camelContext, camelContext.getTypeConverter(), config, properties] @TO@ MethodName:bindProperties:[camelContext, config, properties] @AT@ 12708 @LENGTH@ 80
---------DEL MethodInvocation@@camelContext.getTypeConverter() @AT@ 12736 @LENGTH@ 31
------------DEL SimpleName@@Name:camelContext @AT@ 12736 @LENGTH@ 12
------------DEL SimpleName@@MethodName:getTypeConverter:[] @AT@ 12749 @LENGTH@ 18


UPD VariableDeclarationStatement@@final JavaArchive jar=ShrinkWrap.create(JavaArchive.class,"test-txn-one-phase.jar").addPackage(TxTestUtil.class.getPackage()).addClasses(InnerBean.class,OuterBean.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.jboss-transaction-spi \n"),"MANIFEST.MF").addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml"); @TO@ final JavaArchive jar=ShrinkWrap.create(JavaArchive.class,"test-txn-one-phase.jar").addPackage(TxTestUtil.class.getPackage()).addPackage(TestLastResource.class.getPackage()).addClasses(InnerBean.class,OuterBean.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.jboss-transaction-spi \n"),"MANIFEST.MF").addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml"); @AT@ 2448 @LENGTH@ 519
---UPD VariableDeclarationFragment@@jar=ShrinkWrap.create(JavaArchive.class,"test-txn-one-phase.jar").addPackage(TxTestUtil.class.getPackage()).addClasses(InnerBean.class,OuterBean.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.jboss-transaction-spi \n"),"MANIFEST.MF").addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml") @TO@ jar=ShrinkWrap.create(JavaArchive.class,"test-txn-one-phase.jar").addPackage(TxTestUtil.class.getPackage()).addPackage(TestLastResource.class.getPackage()).addClasses(InnerBean.class,OuterBean.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.jboss-transaction-spi \n"),"MANIFEST.MF").addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml") @AT@ 2466 @LENGTH@ 500
------UPD MethodInvocation@@ShrinkWrap.create(JavaArchive.class,"test-txn-one-phase.jar").addPackage(TxTestUtil.class.getPackage()).addClasses(InnerBean.class,OuterBean.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.jboss-transaction-spi \n"),"MANIFEST.MF").addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml") @TO@ ShrinkWrap.create(JavaArchive.class,"test-txn-one-phase.jar").addPackage(TxTestUtil.class.getPackage()).addPackage(TestLastResource.class.getPackage()).addClasses(InnerBean.class,OuterBean.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.jboss-transaction-spi \n"),"MANIFEST.MF").addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml") @AT@ 2472 @LENGTH@ 494
---------INS MethodInvocation@@MethodName:addPackage:[TestLastResource.class.getPackage()] @TO@ MethodInvocation@@ShrinkWrap.create(JavaArchive.class,"test-txn-one-phase.jar").addPackage(TxTestUtil.class.getPackage()).addClasses(InnerBean.class,OuterBean.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.jboss-transaction-spi \n"),"MANIFEST.MF").addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml") @AT@ 2544 @LENGTH@ 170
------------INS MethodInvocation@@TestLastResource.class.getPackage() @TO@ MethodInvocation@@MethodName:addPackage:[TestLastResource.class.getPackage()] @AT@ 2678 @LENGTH@ 35
---------------INS TypeLiteral@@TestLastResource.class @TO@ MethodInvocation@@TestLastResource.class.getPackage() @AT@ 2678 @LENGTH@ 22
---------------INS SimpleName@@MethodName:getPackage:[] @TO@ MethodInvocation@@TestLastResource.class.getPackage() @AT@ 2701 @LENGTH@ 12


INS MethodDeclaration@@public, static, PublisherCallbackChannelFactory, MethodName:factory,  @TO@ TypeDeclaration@@[public]PublisherCallbackChannelImpl, [PublisherCallbackChannel, ConfirmListener, ReturnListener, ShutdownListener] @AT@ 36259 @LENGTH@ 137
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, PublisherCallbackChannelFactory, MethodName:factory,  @AT@ 36259 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, PublisherCallbackChannelFactory, MethodName:factory,  @AT@ 36266 @LENGTH@ 6
---INS SimpleType@@PublisherCallbackChannelFactory @TO@ MethodDeclaration@@public, static, PublisherCallbackChannelFactory, MethodName:factory,  @AT@ 36273 @LENGTH@ 31
---INS SimpleName@@MethodName:factory @TO@ MethodDeclaration@@public, static, PublisherCallbackChannelFactory, MethodName:factory,  @AT@ 36305 @LENGTH@ 7
---INS ReturnStatement@@LambdaExpression:(channel,exec) -> new PublisherCallbackChannelImpl(channel,exec) @TO@ MethodDeclaration@@public, static, PublisherCallbackChannelFactory, MethodName:factory,  @AT@ 36319 @LENGTH@ 74
------INS LambdaExpression@@(channel,exec) -> new PublisherCallbackChannelImpl(channel,exec) @TO@ ReturnStatement@@LambdaExpression:(channel,exec) -> new PublisherCallbackChannelImpl(channel,exec) @AT@ 36326 @LENGTH@ 66
---------INS VariableDeclarationFragment@@channel @TO@ LambdaExpression@@(channel,exec) -> new PublisherCallbackChannelImpl(channel,exec) @AT@ 36327 @LENGTH@ 7
------------INS SimpleName@@channel @TO@ VariableDeclarationFragment@@channel @AT@ 36327 @LENGTH@ 7
---------INS VariableDeclarationFragment@@exec @TO@ LambdaExpression@@(channel,exec) -> new PublisherCallbackChannelImpl(channel,exec) @AT@ 36336 @LENGTH@ 4
------------INS SimpleName@@exec @TO@ VariableDeclarationFragment@@exec @AT@ 36336 @LENGTH@ 4
---------INS ClassInstanceCreation@@PublisherCallbackChannelImpl[channel, exec] @TO@ LambdaExpression@@(channel,exec) -> new PublisherCallbackChannelImpl(channel,exec) @AT@ 36345 @LENGTH@ 47
------------INS New@@new @TO@ ClassInstanceCreation@@PublisherCallbackChannelImpl[channel, exec] @AT@ 36345 @LENGTH@ 3
------------INS SimpleType@@PublisherCallbackChannelImpl @TO@ ClassInstanceCreation@@PublisherCallbackChannelImpl[channel, exec] @AT@ 36349 @LENGTH@ 28
------------INS SimpleName@@channel @TO@ ClassInstanceCreation@@PublisherCallbackChannelImpl[channel, exec] @AT@ 36378 @LENGTH@ 7
------------INS SimpleName@@exec @TO@ ClassInstanceCreation@@PublisherCallbackChannelImpl[channel, exec] @AT@ 36387 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:registry.put("myConfigurer",configurer) @TO@ MethodInvocation:registry.bind("myConfigurer",configurer) @AT@ 4939 @LENGTH@ 41
---UPD MethodInvocation@@registry.put("myConfigurer",configurer) @TO@ registry.bind("myConfigurer",configurer) @AT@ 4939 @LENGTH@ 40
------UPD SimpleName@@MethodName:put:["myConfigurer", configurer] @TO@ MethodName:bind:["myConfigurer", configurer] @AT@ 4948 @LENGTH@ 31


UPD TryStatement@@try {  InputStream is=new ByteArrayInputStream(content);  AS2SessionInputBuffer inbuffer=new AS2SessionInputBuffer(new HttpTransportMetricsImpl(),DEFAULT_BUFFER_SIZE);  inbuffer.bind(is);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType entityContentType=null;  String entityContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      entityContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  entityContentTransferEncoding=header.getValue();break;default :continue;}}if (entityContentType == null) {throw new HttpException("Failed to find Content-Type header in enveloped entity");}MimeEntity entity=parseEntityBody(inbuffer,null,entityContentType,entityContentTransferEncoding,headers);entity.removeAllHeaders();entity.setHeaders(headers);return entity;} catch (Exception e) {throw new HttpException("Failed to parse entity",e);} @TO@ try {  String contentString=new String(content);  InputStream is=new ByteArrayInputStream(content);  AS2SessionInputBuffer inbuffer=new AS2SessionInputBuffer(new HttpTransportMetricsImpl(),DEFAULT_BUFFER_SIZE);  inbuffer.bind(is);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType entityContentType=null;  String entityContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      entityContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  entityContentTransferEncoding=header.getValue();break;default :continue;}}if (entityContentType == null) {throw new HttpException("Failed to find Content-Type header in enveloped entity");}MimeEntity entity=parseEntityBody(inbuffer,null,entityContentType,entityContentTransferEncoding,headers);entity.removeAllHeaders();entity.setHeaders(headers);return entity;} catch (Exception e) {throw new HttpException("Failed to parse entity",e);} @AT@ 7508 @LENGTH@ 1615
---INS VariableDeclarationStatement@@String contentString=new String(content); @TO@ TryStatement@@try {  InputStream is=new ByteArrayInputStream(content);  AS2SessionInputBuffer inbuffer=new AS2SessionInputBuffer(new HttpTransportMetricsImpl(),DEFAULT_BUFFER_SIZE);  inbuffer.bind(is);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType entityContentType=null;  String entityContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      entityContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  entityContentTransferEncoding=header.getValue();break;default :continue;}}if (entityContentType == null) {throw new HttpException("Failed to find Content-Type header in enveloped entity");}MimeEntity entity=parseEntityBody(inbuffer,null,entityContentType,entityContentTransferEncoding,headers);entity.removeAllHeaders();entity.setHeaders(headers);return entity;} catch (Exception e) {throw new HttpException("Failed to parse entity",e);} @AT@ 7611 @LENGTH@ 43
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String contentString=new String(content); @AT@ 7611 @LENGTH@ 6
------INS VariableDeclarationFragment@@contentString=new String(content) @TO@ VariableDeclarationStatement@@String contentString=new String(content); @AT@ 7618 @LENGTH@ 35
---------INS SimpleName@@contentString @TO@ VariableDeclarationFragment@@contentString=new String(content) @AT@ 7618 @LENGTH@ 13
---------INS ClassInstanceCreation@@String[content] @TO@ VariableDeclarationFragment@@contentString=new String(content) @AT@ 7634 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@String[content] @AT@ 7634 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[content] @AT@ 7638 @LENGTH@ 6
------------INS SimpleName@@content @TO@ ClassInstanceCreation@@String[content] @AT@ 7645 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:pollState.cancel() @TO@ MethodInvocation:cancel() @AT@ 4341 @LENGTH@ 19
---UPD MethodInvocation@@pollState.cancel() @TO@ MethodName:cancel:[] @AT@ 4341 @LENGTH@ 18
------DEL SimpleName@@Name:pollState @AT@ 4341 @LENGTH@ 9
------DEL SimpleName@@MethodName:cancel:[] @AT@ 4351 @LENGTH@ 8


UPD FieldDeclaration@@private, final, static, Log, [logger=LogFactory.getLog(LongRunningIntegrationTest.class)] @TO@ private, static, final, Log, [logger=LogFactory.getLog(LongRunningIntegrationTest.class)] @AT@ 1201 @LENGTH@ 86
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, static, Log, [logger=LogFactory.getLog(LongRunningIntegrationTest.class)] @AT@ 1209 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1215 @LENGTH@ 6


DEL ExpressionStatement@@MethodInvocation:camelContext.setManagementStrategy(new DefaultManagementStrategy()) @AT@ 1736 @LENGTH@ 68
---DEL MethodInvocation@@camelContext.setManagementStrategy(new DefaultManagementStrategy()) @AT@ 1736 @LENGTH@ 67
------DEL SimpleName@@Name:camelContext @AT@ 1736 @LENGTH@ 12
------DEL SimpleName@@MethodName:setManagementStrategy:[new DefaultManagementStrategy()] @AT@ 1749 @LENGTH@ 54
---------DEL ClassInstanceCreation@@DefaultManagementStrategy[] @AT@ 1771 @LENGTH@ 31
------------DEL New@@new @AT@ 1771 @LENGTH@ 3
------------DEL SimpleType@@DefaultManagementStrategy @AT@ 1775 @LENGTH@ 25


INS MethodDeclaration@@private, voidMethodName:PulsarUtils,  @TO@ TypeDeclaration@@[public, final]PulsarUtils,  @AT@ 1076 @LENGTH@ 29
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:PulsarUtils,  @AT@ 1076 @LENGTH@ 7
---INS SimpleName@@MethodName:PulsarUtils @TO@ MethodDeclaration@@private, voidMethodName:PulsarUtils,  @AT@ 1084 @LENGTH@ 11


UPD TypeDeclaration@@[@Component("mila-client"), public]MiloClientComponent, DefaultComponent @TO@ [@Component("milo-client"), public]MiloClientComponent, DefaultComponent @AT@ 1128 @LENGTH@ 3395
---UPD SingleMemberAnnotation@@@Component("mila-client") @TO@ @Component("milo-client") @AT@ 1128 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:Assert.hasText(this.name,"A name is required when saveSate is set to true") @TO@ MethodInvocation:Assert.hasText(this.name,"A name is required when saveState is set to true") @AT@ 10274 @LENGTH@ 82
---UPD MethodInvocation@@Assert.hasText(this.name,"A name is required when saveSate is set to true") @TO@ Assert.hasText(this.name,"A name is required when saveState is set to true") @AT@ 10274 @LENGTH@ 81
------UPD SimpleName@@MethodName:hasText:[this.name, "A name is required when saveSate is set to true"] @TO@ MethodName:hasText:[this.name, "A name is required when saveState is set to true"] @AT@ 10281 @LENGTH@ 74
---------UPD StringLiteral@@"A name is required when saveSate is set to true" @TO@ "A name is required when saveState is set to true" @AT@ 10305 @LENGTH@ 49


UPD TryStatement@@try {  if (exchange.getUnitOfWork() != null)   exchange.getUnitOfWork().beginTransactedBy(transactionKey);  logTransactionBegin(redelivered,ids);  doInTransactionTemplate(exchange);  logTransactionCommit(redelivered,ids);} catch (TransactionRollbackException e) {  logTransactionRollback(redelivered,ids,null,true);}catch (Throwable e) {  exchange.setException(e);  logTransactionRollback(redelivered,ids,e,false);} finally {  if (exchange.getUnitOfWork() != null)   exchange.getUnitOfWork().endTransactedBy(transactionKey);} @TO@ try {  if (exchange.getUnitOfWork() != null) {    exchange.getUnitOfWork().beginTransactedBy(transactionKey);  }  logTransactionBegin(redelivered,ids);  doInTransactionTemplate(exchange);  logTransactionCommit(redelivered,ids);} catch (TransactionRollbackException e) {  logTransactionRollback(redelivered,ids,null,true);}catch (Throwable e) {  exchange.setException(e);  logTransactionRollback(redelivered,ids,e,false);} finally {  if (exchange.getUnitOfWork() != null) {    exchange.getUnitOfWork().endTransactedBy(transactionKey);  }} @AT@ 6245 @LENGTH@ 942
---UPD IfStatement@@if (exchange.getUnitOfWork() != null) exchange.getUnitOfWork().beginTransactedBy(transactionKey); @TO@ if (exchange.getUnitOfWork() != null) {  exchange.getUnitOfWork().beginTransactedBy(transactionKey);} @AT@ 6326 @LENGTH@ 113
------UPD Block@@ThenBody:exchange.getUnitOfWork().beginTransactedBy(transactionKey); @TO@ ThenBody:{  exchange.getUnitOfWork().beginTransactedBy(transactionKey);} @AT@ 6380 @LENGTH@ 59
---UPD Block@@FinallyBody:{  if (exchange.getUnitOfWork() != null)   exchange.getUnitOfWork().endTransactedBy(transactionKey);} @TO@ FinallyBody:{  if (exchange.getUnitOfWork() != null) {    exchange.getUnitOfWork().endTransactedBy(transactionKey);  }} @AT@ 6995 @LENGTH@ 192
------UPD IfStatement@@if (exchange.getUnitOfWork() != null) exchange.getUnitOfWork().endTransactedBy(transactionKey); @TO@ if (exchange.getUnitOfWork() != null) {  exchange.getUnitOfWork().endTransactedBy(transactionKey);} @AT@ 7066 @LENGTH@ 111
---------UPD Block@@ThenBody:exchange.getUnitOfWork().endTransactedBy(transactionKey); @TO@ ThenBody:{  exchange.getUnitOfWork().endTransactedBy(transactionKey);} @AT@ 7120 @LENGTH@ 57


UPD MethodDeclaration@@public, void, MethodName:changeSessionIdDefaultsInServlet31Plus, Exception,  @TO@ public, void, MethodName:changeSessionIdThenPreserveParameters, Exception,  @AT@ 3428 @LENGTH@ 1018
---UPD SimpleName@@MethodName:changeSessionIdDefaultsInServlet31Plus @TO@ MethodName:changeSessionIdThenPreserveParameters @AT@ 3440 @LENGTH@ 38
---DEL ExpressionStatement@@MethodInvocation:spy(ReflectionUtils.class) @AT@ 3502 @LENGTH@ 27
------DEL MethodInvocation@@spy(ReflectionUtils.class) @AT@ 3502 @LENGTH@ 26
---------DEL SimpleName@@MethodName:spy:[ReflectionUtils.class] @AT@ 3502 @LENGTH@ 26
------------DEL TypeLiteral@@ReflectionUtils.class @AT@ 3506 @LENGTH@ 21
---UPD VariableDeclarationStatement@@Method method=mock(Method.class); @TO@ String id=request.getSession().getId(); @AT@ 3532 @LENGTH@ 35
------UPD SimpleType@@Method @TO@ String @AT@ 3532 @LENGTH@ 6
------UPD VariableDeclarationFragment@@method=mock(Method.class) @TO@ id=request.getSession().getId() @AT@ 3539 @LENGTH@ 27
---------UPD SimpleName@@method @TO@ id @AT@ 3539 @LENGTH@ 6
---------UPD MethodInvocation@@mock(Method.class) @TO@ request.getSession().getId() @AT@ 3548 @LENGTH@ 18
------------INS MethodInvocation@@MethodName:getSession:[] @TO@ MethodInvocation@@mock(Method.class) @AT@ 3121 @LENGTH@ 20
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@mock(Method.class) @AT@ 3121 @LENGTH@ 7
------------UPD SimpleName@@MethodName:mock:[Method.class] @TO@ MethodName:getId:[] @AT@ 3548 @LENGTH@ 18
---------------DEL TypeLiteral@@Method.class @AT@ 3553 @LENGTH@ 12
---MOV VariableDeclarationStatement@@Method method=mock(Method.class); @TO@ MethodDeclaration@@public, void, MethodName:changeSessionIdDefaultsInServlet31Plus, Exception,  @AT@ 3532 @LENGTH@ 35
---UPD ExpressionStatement@@MethodInvocation:when(ReflectionUtils.findMethod(HttpServletRequest.class,"changeSessionId")).thenReturn(method) @TO@ MethodInvocation:request.getSession().setAttribute("attribute1","value1") @AT@ 4082 @LENGTH@ 102
------INS MethodInvocation@@request.getSession().setAttribute("attribute1","value1") @TO@ ExpressionStatement@@MethodInvocation:when(ReflectionUtils.findMethod(HttpServletRequest.class,"changeSessionId")).thenReturn(method) @AT@ 3591 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:getSession:[] @TO@ MethodInvocation@@request.getSession().setAttribute("attribute1","value1") @AT@ 3591 @LENGTH@ 20
---------MOV SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@request.getSession().setAttribute("attribute1","value1") @AT@ 4087 @LENGTH@ 15
---------MOV SimpleName@@MethodName:findMethod:[HttpServletRequest.class, "changeSessionId"] @TO@ MethodInvocation@@request.getSession().setAttribute("attribute1","value1") @AT@ 4103 @LENGTH@ 55
------------INS StringLiteral@@"attribute1" @TO@ SimpleName@@MethodName:findMethod:[HttpServletRequest.class, "changeSessionId"] @AT@ 3625 @LENGTH@ 12
------------INS StringLiteral@@"attribute1" @TO@ SimpleName@@MethodName:findMethod:[HttpServletRequest.class, "changeSessionId"] @AT@ 3625 @LENGTH@ 12
------DEL MethodInvocation@@when(ReflectionUtils.findMethod(HttpServletRequest.class,"changeSessionId")).thenReturn(method) @AT@ 4082 @LENGTH@ 101
---------DEL MethodInvocation@@MethodName:when:[ReflectionUtils.findMethod(HttpServletRequest.class,"changeSessionId")] @AT@ 4082 @LENGTH@ 77
------------DEL MethodInvocation@@ReflectionUtils.findMethod(HttpServletRequest.class,"changeSessionId") @AT@ 4087 @LENGTH@ 71
---------DEL SimpleName@@MethodName:thenReturn:[method] @AT@ 4165 @LENGTH@ 18
------------DEL SimpleName@@method @AT@ 4176 @LENGTH@ 6
---UPD ExpressionStatement@@MethodInvocation:verifyStatic(ReflectionUtils.class) @TO@ MethodInvocation:assertThat(!request.getSession().getId().equals(id)) @AT@ 4330 @LENGTH@ 36
------UPD MethodInvocation@@verifyStatic(ReflectionUtils.class) @TO@ assertThat(!request.getSession().getId().equals(id)) @AT@ 4330 @LENGTH@ 35
---------INS SimpleName@@MethodName:assertThat:[!request.getSession().getId().equals(id)] @TO@ MethodInvocation@@verifyStatic(ReflectionUtils.class) @AT@ 3795 @LENGTH@ 52
------------INS PrefixExpression@@!request.getSession().getId().equals(id) @TO@ SimpleName@@MethodName:assertThat:[!request.getSession().getId().equals(id)] @AT@ 3806 @LENGTH@ 40
---------------INS Operator@@! @TO@ PrefixExpression@@!request.getSession().getId().equals(id) @AT@ 3806 @LENGTH@ 1
---------------INS MethodInvocation@@request.getSession().getId().equals(id) @TO@ PrefixExpression@@!request.getSession().getId().equals(id) @AT@ 3807 @LENGTH@ 39
------------------INS MethodInvocation@@MethodName:getId:[] @TO@ MethodInvocation@@request.getSession().getId().equals(id) @AT@ 3807 @LENGTH@ 28
------------------INS MethodInvocation@@MethodName:getSession:[] @TO@ MethodInvocation@@request.getSession().getId().equals(id) @AT@ 3807 @LENGTH@ 20
------------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getSession().getId().equals(id) @AT@ 3807 @LENGTH@ 7
------------------MOV SimpleName@@MethodName:verifyStatic:[ReflectionUtils.class] @TO@ MethodInvocation@@request.getSession().getId().equals(id) @AT@ 4330 @LENGTH@ 35
---------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:verifyStatic:[ReflectionUtils.class] @AT@ 3843 @LENGTH@ 2
---------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:verifyStatic:[ReflectionUtils.class] @AT@ 3843 @LENGTH@ 2
---------UPD SimpleName@@MethodName:verifyStatic:[ReflectionUtils.class] @TO@ MethodName:equals:[id] @AT@ 4330 @LENGTH@ 35
---UPD ExpressionStatement@@MethodInvocation:ReflectionUtils.invokeMethod(same(method),any(HttpServletRequest.class)) @TO@ MethodInvocation:assertThat(request.getSession().getAttribute("attribute1").equals("value1")) @AT@ 4369 @LENGTH@ 74
------UPD MethodInvocation@@ReflectionUtils.invokeMethod(same(method),any(HttpServletRequest.class)) @TO@ assertThat(request.getSession().getAttribute("attribute1").equals("value1")) @AT@ 4369 @LENGTH@ 73
---------INS SimpleName@@MethodName:assertThat:[request.getSession().getAttribute("attribute1").equals("value1")] @TO@ MethodInvocation@@ReflectionUtils.invokeMethod(same(method),any(HttpServletRequest.class)) @AT@ 3851 @LENGTH@ 76
------------INS MethodInvocation@@request.getSession().getAttribute("attribute1").equals("value1") @TO@ SimpleName@@MethodName:assertThat:[request.getSession().getAttribute("attribute1").equals("value1")] @AT@ 3862 @LENGTH@ 64
---------------INS MethodInvocation@@MethodName:getAttribute:["attribute1"] @TO@ MethodInvocation@@request.getSession().getAttribute("attribute1").equals("value1") @AT@ 3862 @LENGTH@ 47
------------------INS StringLiteral@@"attribute1" @TO@ MethodInvocation@@MethodName:getAttribute:["attribute1"] @AT@ 3896 @LENGTH@ 12
---------------INS MethodInvocation@@MethodName:getSession:[] @TO@ MethodInvocation@@request.getSession().getAttribute("attribute1").equals("value1") @AT@ 3862 @LENGTH@ 20
---------------MOV SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@request.getSession().getAttribute("attribute1").equals("value1") @AT@ 4369 @LENGTH@ 15
---------------MOV SimpleName@@MethodName:any:[HttpServletRequest.class] @TO@ MethodInvocation@@request.getSession().getAttribute("attribute1").equals("value1") @AT@ 4412 @LENGTH@ 29
------------------INS StringLiteral@@"value1" @TO@ SimpleName@@MethodName:any:[HttpServletRequest.class] @AT@ 3917 @LENGTH@ 8
------------------INS StringLiteral@@"value1" @TO@ SimpleName@@MethodName:any:[HttpServletRequest.class] @AT@ 3917 @LENGTH@ 8
---------UPD SimpleName@@Name:ReflectionUtils @TO@ Name:request @AT@ 4369 @LENGTH@ 15
---------DEL SimpleName@@MethodName:invokeMethod:[same(method), any(HttpServletRequest.class)] @AT@ 4385 @LENGTH@ 57
------------DEL MethodInvocation@@same(method) @AT@ 4398 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:same:[method] @AT@ 4398 @LENGTH@ 12
------------------DEL SimpleName@@method @AT@ 4403 @LENGTH@ 6
------------DEL MethodInvocation@@any(HttpServletRequest.class) @AT@ 4412 @LENGTH@ 29


UPD ReturnStatement@@MethodInvocation:getTargetRepositoryViaReflection(metadata,nodeManager) @TO@ MethodInvocation:getTargetRepositoryViaReflection(metadata,nodeManager,metadata.getDomainType()) @AT@ 2371 @LENGTH@ 63
---UPD MethodInvocation@@getTargetRepositoryViaReflection(metadata,nodeManager) @TO@ getTargetRepositoryViaReflection(metadata,nodeManager,metadata.getDomainType()) @AT@ 2378 @LENGTH@ 55
------UPD SimpleName@@MethodName:getTargetRepositoryViaReflection:[metadata, nodeManager] @TO@ MethodName:getTargetRepositoryViaReflection:[metadata, nodeManager, metadata.getDomainType()] @AT@ 2378 @LENGTH@ 55
---------INS MethodInvocation@@metadata.getDomainType() @TO@ SimpleName@@MethodName:getTargetRepositoryViaReflection:[metadata, nodeManager] @AT@ 2434 @LENGTH@ 24
------------INS SimpleName@@Name:metadata @TO@ MethodInvocation@@metadata.getDomainType() @AT@ 2434 @LENGTH@ 8
------------INS SimpleName@@MethodName:getDomainType:[] @TO@ MethodInvocation@@metadata.getDomainType() @AT@ 2443 @LENGTH@ 15


MOV FieldDeclaration@@private, MockEndpoint, [mock] @TO@ TypeDeclaration@@[public]EC2ProducerTest, CamelTestSupport @AT@ 2183 @LENGTH@ 26


MOV ReturnStatement@@ClassInstanceCreation:new ChangeSessionIdAuthenticationStrategy() @TO@ MethodDeclaration@@private, static, SessionAuthenticationStrategy, MethodName:createDefaultSessionFixationProtectionStrategy,  @AT@ 27066 @LENGTH@ 51


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 6904 @LENGTH@ 64
---DEL Modifier@@public @AT@ 6904 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 6911 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 6919 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 6949 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 6956 @LENGTH@ 5


UPD IfStatement@@if (salt[i].getBytes().length != correctSaltByteSize) {  Assert.fail("It must fail.");} @TO@ if (salt[i].getBytes(StandardCharsets.UTF_8).length != correctSaltByteSize) {  Assert.fail("It must fail.");} @AT@ 4020 @LENGTH@ 123
---UPD InfixExpression@@salt[i].getBytes().length != correctSaltByteSize @TO@ salt[i].getBytes(StandardCharsets.UTF_8).length != correctSaltByteSize @AT@ 4024 @LENGTH@ 48
------UPD FieldAccess@@salt[i].getBytes().length @TO@ salt[i].getBytes(StandardCharsets.UTF_8).length @AT@ 4024 @LENGTH@ 25
---------UPD MethodInvocation@@salt[i].getBytes() @TO@ salt[i].getBytes(StandardCharsets.UTF_8) @AT@ 4024 @LENGTH@ 18
------------UPD SimpleName@@MethodName:getBytes:[] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 4032 @LENGTH@ 10
---------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:[] @AT@ 4116 @LENGTH@ 22
------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4116 @LENGTH@ 16
------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4133 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(component,options) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(context,component,options) @AT@ 2309 @LENGTH@ 55
---UPD MethodInvocation@@IntrospectionSupport.setProperties(component,options) @TO@ PropertyBindingSupport.bindProperties(context,component,options) @AT@ 2309 @LENGTH@ 54
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 2309 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[component, options] @TO@ MethodName:bindProperties:[context, component, options] @AT@ 2330 @LENGTH@ 33
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:setProperties:[component, options] @AT@ 2349 @LENGTH@ 7


UPD VariableDeclarationStatement@@final Map<Double,Object> results=new HashMap<Double,Object>(); @TO@ final Map<Double,Object> results=new ConcurrentHashMap<Double,Object>(); @AT@ 48003 @LENGTH@ 66
---UPD VariableDeclarationFragment@@results=new HashMap<Double,Object>() @TO@ results=new ConcurrentHashMap<Double,Object>() @AT@ 48029 @LENGTH@ 39
------UPD ClassInstanceCreation@@HashMap<Double,Object>[] @TO@ ConcurrentHashMap<Double,Object>[] @AT@ 48039 @LENGTH@ 29
---------UPD ParameterizedType@@HashMap<Double,Object> @TO@ ConcurrentHashMap<Double,Object> @AT@ 48043 @LENGTH@ 23
------------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 48043 @LENGTH@ 7


UPD ReturnStatement@@CastExpression:(ChannelProxy)Proxy.newProxyInstance(ClassUtils.getDefaultClassLoader(),interfaces,new CachedChannelInvocationHandler(connection,targetChannel,channelList,transactional)) @TO@ CastExpression:(ChannelProxy)Proxy.newProxyInstance(ChannelProxy.class.getClassLoader(),interfaces,new CachedChannelInvocationHandler(connection,targetChannel,channelList,transactional)) @AT@ 22955 @LENGTH@ 194
---UPD CastExpression@@(ChannelProxy)Proxy.newProxyInstance(ClassUtils.getDefaultClassLoader(),interfaces,new CachedChannelInvocationHandler(connection,targetChannel,channelList,transactional)) @TO@ (ChannelProxy)Proxy.newProxyInstance(ChannelProxy.class.getClassLoader(),interfaces,new CachedChannelInvocationHandler(connection,targetChannel,channelList,transactional)) @AT@ 22962 @LENGTH@ 186
------UPD MethodInvocation@@Proxy.newProxyInstance(ClassUtils.getDefaultClassLoader(),interfaces,new CachedChannelInvocationHandler(connection,targetChannel,channelList,transactional)) @TO@ Proxy.newProxyInstance(ChannelProxy.class.getClassLoader(),interfaces,new CachedChannelInvocationHandler(connection,targetChannel,channelList,transactional)) @AT@ 22977 @LENGTH@ 171
---------UPD SimpleName@@MethodName:newProxyInstance:[ClassUtils.getDefaultClassLoader(), interfaces, new CachedChannelInvocationHandler(connection,targetChannel,channelList,transactional)] @TO@ MethodName:newProxyInstance:[ChannelProxy.class.getClassLoader(), interfaces, new CachedChannelInvocationHandler(connection,targetChannel,channelList,transactional)] @AT@ 22983 @LENGTH@ 165
------------UPD MethodInvocation@@ClassUtils.getDefaultClassLoader() @TO@ ChannelProxy.class.getClassLoader() @AT@ 23000 @LENGTH@ 34
---------------INS TypeLiteral@@ChannelProxy.class @TO@ MethodInvocation@@ClassUtils.getDefaultClassLoader() @AT@ 22960 @LENGTH@ 18
---------------DEL SimpleName@@Name:ClassUtils @AT@ 23000 @LENGTH@ 10
---------------UPD SimpleName@@MethodName:getDefaultClassLoader:[] @TO@ MethodName:getClassLoader:[] @AT@ 23011 @LENGTH@ 23


UPD MethodDeclaration@@AmazonIdentityManagement, MethodName:createKMSClient,  @TO@ AmazonIdentityManagement, MethodName:createIAMClient,  @AT@ 3112 @LENGTH@ 1840
---UPD SimpleName@@MethodName:createKMSClient @TO@ MethodName:createIAMClient @AT@ 3112 @LENGTH@ 15


DEL FieldDeclaration@@private, static, final, TimeUnit, [WAIT_UNIT=TimeUnit.SECONDS] @AT@ 1488 @LENGTH@ 59
---DEL Modifier@@private @AT@ 1488 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1496 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1503 @LENGTH@ 5
---DEL SimpleType@@TimeUnit @AT@ 1509 @LENGTH@ 8
---DEL VariableDeclarationFragment@@WAIT_UNIT=TimeUnit.SECONDS @AT@ 1518 @LENGTH@ 28
------DEL SimpleName@@WAIT_UNIT @AT@ 1518 @LENGTH@ 9
------DEL QualifiedName@@TimeUnit.SECONDS @AT@ 1530 @LENGTH@ 16
---------DEL SimpleName@@TimeUnit @AT@ 1530 @LENGTH@ 8
---------DEL SimpleName@@SECONDS @AT@ 1539 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretBlankThenDefaultToNone,  @TO@ TypeDeclaration@@[public]ClientRegistrationTests,  @AT@ 8492 @LENGTH@ 794
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretBlankThenDefaultToNone,  @AT@ 8492 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretBlankThenDefaultToNone,  @AT@ 8499 @LENGTH@ 4
---INS SimpleName@@MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretBlankThenDefaultToNone @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretBlankThenDefaultToNone,  @AT@ 8504 @LENGTH@ 105
---INS VariableDeclarationStatement@@ClientRegistration clientRegistration=ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build(); @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretBlankThenDefaultToNone,  @AT@ 8616 @LENGTH@ 492
------INS SimpleType@@ClientRegistration @TO@ VariableDeclarationStatement@@ClientRegistration clientRegistration=ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build(); @AT@ 8616 @LENGTH@ 18
------INS VariableDeclarationFragment@@clientRegistration=ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @TO@ VariableDeclarationStatement@@ClientRegistration clientRegistration=ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build(); @AT@ 8635 @LENGTH@ 472
---------INS SimpleName@@clientRegistration @TO@ VariableDeclarationFragment@@clientRegistration=ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8635 @LENGTH@ 18
---------INS MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @TO@ VariableDeclarationFragment@@clientRegistration=ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 451
------------INS MethodInvocation@@MethodName:clientName:[CLIENT_NAME] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 438
---------------INS SimpleName@@CLIENT_NAME @TO@ MethodInvocation@@MethodName:clientName:[CLIENT_NAME] @AT@ 9082 @LENGTH@ 11
------------INS MethodInvocation@@MethodName:jwkSetUri:[JWK_SET_URI] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 409
---------------INS SimpleName@@JWK_SET_URI @TO@ MethodInvocation@@MethodName:jwkSetUri:[JWK_SET_URI] @AT@ 9053 @LENGTH@ 11
------------INS MethodInvocation@@MethodName:userInfoAuthenticationMethod:[AuthenticationMethod.FORM] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 381
---------------INS QualifiedName@@AuthenticationMethod.FORM @TO@ MethodInvocation@@MethodName:userInfoAuthenticationMethod:[AuthenticationMethod.FORM] @AT@ 9011 @LENGTH@ 25
------------------INS SimpleName@@AuthenticationMethod @TO@ QualifiedName@@AuthenticationMethod.FORM @AT@ 9011 @LENGTH@ 20
------------------INS SimpleName@@FORM @TO@ QualifiedName@@AuthenticationMethod.FORM @AT@ 9032 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:tokenUri:[TOKEN_URI] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 320
---------------INS SimpleName@@TOKEN_URI @TO@ MethodInvocation@@MethodName:tokenUri:[TOKEN_URI] @AT@ 8966 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:authorizationUri:[AUTHORIZATION_URI] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 295
---------------INS SimpleName@@AUTHORIZATION_URI @TO@ MethodInvocation@@MethodName:authorizationUri:[AUTHORIZATION_URI] @AT@ 8933 @LENGTH@ 17
------------INS MethodInvocation@@MethodName:scope:[SCOPES.toArray(new String[0])] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 254
---------------INS MethodInvocation@@SCOPES.toArray(new String[0]) @TO@ MethodInvocation@@MethodName:scope:[SCOPES.toArray(new String[0])] @AT@ 8880 @LENGTH@ 29
------------------INS SimpleName@@Name:SCOPES @TO@ MethodInvocation@@SCOPES.toArray(new String[0]) @AT@ 8880 @LENGTH@ 6
------------------INS SimpleName@@MethodName:toArray:[new String[0]] @TO@ MethodInvocation@@SCOPES.toArray(new String[0]) @AT@ 8887 @LENGTH@ 22
---------------------INS ArrayCreation@@new String[0] @TO@ SimpleName@@MethodName:toArray:[new String[0]] @AT@ 8895 @LENGTH@ 13
------------------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[0] @AT@ 8899 @LENGTH@ 9
---------------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 8899 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ ArrayCreation@@new String[0] @AT@ 8906 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:redirectUriTemplate:[REDIRECT_URI] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 212
---------------INS SimpleName@@REDIRECT_URI @TO@ MethodInvocation@@MethodName:redirectUriTemplate:[REDIRECT_URI] @AT@ 8855 @LENGTH@ 12
------------INS MethodInvocation@@MethodName:authorizationGrantType:[AuthorizationGrantType.AUTHORIZATION_CODE] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 173
---------------INS QualifiedName@@AuthorizationGrantType.AUTHORIZATION_CODE @TO@ MethodInvocation@@MethodName:authorizationGrantType:[AuthorizationGrantType.AUTHORIZATION_CODE] @AT@ 8787 @LENGTH@ 41
------------------INS SimpleName@@AuthorizationGrantType @TO@ QualifiedName@@AuthorizationGrantType.AUTHORIZATION_CODE @AT@ 8787 @LENGTH@ 22
------------------INS SimpleName@@AUTHORIZATION_CODE @TO@ QualifiedName@@AuthorizationGrantType.AUTHORIZATION_CODE @AT@ 8810 @LENGTH@ 18
------------INS MethodInvocation@@MethodName:clientSecret:[" "] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 102
---------------INS StringLiteral@@" " @TO@ MethodInvocation@@MethodName:clientSecret:[" "] @AT@ 8754 @LENGTH@ 3
------------INS MethodInvocation@@MethodName:clientId:[CLIENT_ID] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 79
---------------INS SimpleName@@CLIENT_ID @TO@ MethodInvocation@@MethodName:clientId:[CLIENT_ID] @AT@ 8725 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:withRegistrationId:[REGISTRATION_ID] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 54
---------------INS SimpleName@@REGISTRATION_ID @TO@ MethodInvocation@@MethodName:withRegistrationId:[REGISTRATION_ID] @AT@ 8694 @LENGTH@ 15
------------INS SimpleName@@Name:ClientRegistration @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8656 @LENGTH@ 18
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(" ").authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 9100 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(clientRegistration.getClientAuthenticationMethod()).isEqualTo(ClientAuthenticationMethod.NONE) @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretBlankThenDefaultToNone,  @AT@ 9111 @LENGTH@ 106
------INS MethodInvocation@@assertThat(clientRegistration.getClientAuthenticationMethod()).isEqualTo(ClientAuthenticationMethod.NONE) @TO@ ExpressionStatement@@MethodInvocation:assertThat(clientRegistration.getClientAuthenticationMethod()).isEqualTo(ClientAuthenticationMethod.NONE) @AT@ 9111 @LENGTH@ 105
---------INS MethodInvocation@@MethodName:assertThat:[clientRegistration.getClientAuthenticationMethod()] @TO@ MethodInvocation@@assertThat(clientRegistration.getClientAuthenticationMethod()).isEqualTo(ClientAuthenticationMethod.NONE) @AT@ 9111 @LENGTH@ 62
------------INS MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @TO@ MethodInvocation@@MethodName:assertThat:[clientRegistration.getClientAuthenticationMethod()] @AT@ 9122 @LENGTH@ 50
---------------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @AT@ 9122 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getClientAuthenticationMethod:[] @TO@ MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @AT@ 9141 @LENGTH@ 31
---------INS SimpleName@@MethodName:isEqualTo:[ClientAuthenticationMethod.NONE] @TO@ MethodInvocation@@assertThat(clientRegistration.getClientAuthenticationMethod()).isEqualTo(ClientAuthenticationMethod.NONE) @AT@ 9174 @LENGTH@ 42
------------INS QualifiedName@@ClientAuthenticationMethod.NONE @TO@ SimpleName@@MethodName:isEqualTo:[ClientAuthenticationMethod.NONE] @AT@ 9184 @LENGTH@ 31
---------------INS SimpleName@@ClientAuthenticationMethod @TO@ QualifiedName@@ClientAuthenticationMethod.NONE @AT@ 9184 @LENGTH@ 26
---------------INS SimpleName@@NONE @TO@ QualifiedName@@ClientAuthenticationMethod.NONE @AT@ 9211 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(clientRegistration.getClientSecret()).isEqualTo("") @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretBlankThenDefaultToNone,  @AT@ 9220 @LENGTH@ 63
------INS MethodInvocation@@assertThat(clientRegistration.getClientSecret()).isEqualTo("") @TO@ ExpressionStatement@@MethodInvocation:assertThat(clientRegistration.getClientSecret()).isEqualTo("") @AT@ 9220 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:assertThat:[clientRegistration.getClientSecret()] @TO@ MethodInvocation@@assertThat(clientRegistration.getClientSecret()).isEqualTo("") @AT@ 9220 @LENGTH@ 48
------------INS MethodInvocation@@clientRegistration.getClientSecret() @TO@ MethodInvocation@@MethodName:assertThat:[clientRegistration.getClientSecret()] @AT@ 9231 @LENGTH@ 36
---------------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getClientSecret() @AT@ 9231 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getClientSecret:[] @TO@ MethodInvocation@@clientRegistration.getClientSecret() @AT@ 9250 @LENGTH@ 17
---------INS SimpleName@@MethodName:isEqualTo:[""] @TO@ MethodInvocation@@assertThat(clientRegistration.getClientSecret()).isEqualTo("") @AT@ 9269 @LENGTH@ 13
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:isEqualTo:[""] @AT@ 9279 @LENGTH@ 2


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1095 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1095 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1102 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1110 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1140 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1147 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:when(lookupStrategy.readAclsById(anyListOf(ObjectIdentity.class),anyListOf(Sid.class))).thenReturn(result) @TO@ MethodInvocation:when(lookupStrategy.readAclsById(anyList(),anyList())).thenReturn(result) @AT@ 1843 @LENGTH@ 119
---UPD MethodInvocation@@when(lookupStrategy.readAclsById(anyListOf(ObjectIdentity.class),anyListOf(Sid.class))).thenReturn(result) @TO@ when(lookupStrategy.readAclsById(anyList(),anyList())).thenReturn(result) @AT@ 1843 @LENGTH@ 118
------UPD MethodInvocation@@MethodName:when:[lookupStrategy.readAclsById(anyListOf(ObjectIdentity.class),anyListOf(Sid.class))] @TO@ MethodName:when:[lookupStrategy.readAclsById(anyList(),anyList())] @AT@ 1843 @LENGTH@ 99
---------UPD MethodInvocation@@lookupStrategy.readAclsById(anyListOf(ObjectIdentity.class),anyListOf(Sid.class)) @TO@ lookupStrategy.readAclsById(anyList(),anyList()) @AT@ 1853 @LENGTH@ 88
------------UPD SimpleName@@MethodName:readAclsById:[anyListOf(ObjectIdentity.class), anyListOf(Sid.class)] @TO@ MethodName:readAclsById:[anyList(), anyList()] @AT@ 1868 @LENGTH@ 73
---------------UPD MethodInvocation@@anyListOf(ObjectIdentity.class) @TO@ MethodName:anyList:[] @AT@ 1881 @LENGTH@ 31
------------------DEL SimpleName@@MethodName:anyListOf:[ObjectIdentity.class] @AT@ 1881 @LENGTH@ 31
---------------------DEL TypeLiteral@@ObjectIdentity.class @AT@ 1891 @LENGTH@ 20
---------------UPD MethodInvocation@@anyListOf(Sid.class) @TO@ MethodName:anyList:[] @AT@ 1920 @LENGTH@ 20
------------------DEL SimpleName@@MethodName:anyListOf:[Sid.class] @AT@ 1920 @LENGTH@ 20
---------------------DEL TypeLiteral@@Sid.class @AT@ 1930 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:jar.addAsManifestResource(new StringAsset("Dependencies: org.jboss.jts \n"),"MANIFEST.MF") @AT@ 1958 @LENGTH@ 92
---DEL MethodInvocation@@jar.addAsManifestResource(new StringAsset("Dependencies: org.jboss.jts \n"),"MANIFEST.MF") @AT@ 1958 @LENGTH@ 91
------DEL SimpleName@@Name:jar @AT@ 1958 @LENGTH@ 3
------DEL SimpleName@@MethodName:addAsManifestResource:[new StringAsset("Dependencies: org.jboss.jts \n"), "MANIFEST.MF"] @AT@ 1962 @LENGTH@ 87
---------DEL ClassInstanceCreation@@StringAsset["Dependencies: org.jboss.jts \n"] @AT@ 1984 @LENGTH@ 49
------------DEL New@@new @AT@ 1984 @LENGTH@ 3
------------DEL SimpleType@@StringAsset @AT@ 1988 @LENGTH@ 11
------------DEL StringLiteral@@"Dependencies: org.jboss.jts \n" @AT@ 2000 @LENGTH@ 32
---------DEL StringLiteral@@"MANIFEST.MF" @AT@ 2035 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:registry.put("amazonSQSClient",clientMock) @TO@ MethodInvocation:registry.bind("amazonSQSClient",clientMock) @AT@ 4706 @LENGTH@ 44
---UPD MethodInvocation@@registry.put("amazonSQSClient",clientMock) @TO@ registry.bind("amazonSQSClient",clientMock) @AT@ 4706 @LENGTH@ 43
------UPD SimpleName@@MethodName:put:["amazonSQSClient", clientMock] @TO@ MethodName:bind:["amazonSQSClient", clientMock] @AT@ 4715 @LENGTH@ 34


DEL FieldDeclaration@@AmazonS3ClientMock, [clientMock=new AmazonS3ClientMock()] @AT@ 1622 @LENGTH@ 57
---DEL SimpleType@@AmazonS3ClientMock @AT@ 1622 @LENGTH@ 18
---DEL VariableDeclarationFragment@@clientMock=new AmazonS3ClientMock() @AT@ 1641 @LENGTH@ 37
------DEL SimpleName@@clientMock @AT@ 1641 @LENGTH@ 10
------DEL ClassInstanceCreation@@AmazonS3ClientMock[] @AT@ 1654 @LENGTH@ 24
---------DEL New@@new @AT@ 1654 @LENGTH@ 3
---------DEL SimpleType@@AmazonS3ClientMock @AT@ 1658 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Finding all components using class resolver: {} -> {}",resolver) @TO@ MethodInvocation:LOG.debug("Finding all components using class resolver: {}",resolver) @AT@ 20732 @LENGTH@ 77
---UPD MethodInvocation@@LOG.debug("Finding all components using class resolver: {} -> {}",resolver) @TO@ LOG.debug("Finding all components using class resolver: {}",resolver) @AT@ 20732 @LENGTH@ 76
------UPD SimpleName@@MethodName:debug:["Finding all components using class resolver: {} -> {}", resolver] @TO@ MethodName:debug:["Finding all components using class resolver: {}", resolver] @AT@ 20736 @LENGTH@ 72
---------UPD StringLiteral@@"Finding all components using class resolver: {} -> {}" @TO@ "Finding all components using class resolver: {}" @AT@ 20742 @LENGTH@ 55


INS MethodDeclaration@@public, void, MethodName:returnsNullForLeafPropertyOnEmptyPath,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]DefaultPersistentPropertyPathUnitTests,  @AT@ 3990 @LENGTH@ 203
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:returnsNullForLeafPropertyOnEmptyPath,  @AT@ 3990 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:returnsNullForLeafPropertyOnEmptyPath,  @AT@ 3997 @LENGTH@ 4
---INS SimpleName@@MethodName:returnsNullForLeafPropertyOnEmptyPath @TO@ MethodDeclaration@@public, void, MethodName:returnsNullForLeafPropertyOnEmptyPath,  @AT@ 4002 @LENGTH@ 37
---INS VariableDeclarationStatement@@PersistentPropertyPath<P> path=new DefaultPersistentPropertyPath<P>(Collections.emptyList()); @TO@ MethodDeclaration@@public, void, MethodName:returnsNullForLeafPropertyOnEmptyPath,  @AT@ 4047 @LENGTH@ 95
------INS ParameterizedType@@PersistentPropertyPath<P> @TO@ VariableDeclarationStatement@@PersistentPropertyPath<P> path=new DefaultPersistentPropertyPath<P>(Collections.emptyList()); @AT@ 4047 @LENGTH@ 25
---------INS SimpleType@@PersistentPropertyPath @TO@ ParameterizedType@@PersistentPropertyPath<P> @AT@ 4047 @LENGTH@ 22
---------INS SimpleType@@P @TO@ ParameterizedType@@PersistentPropertyPath<P> @AT@ 4070 @LENGTH@ 1
------INS VariableDeclarationFragment@@path=new DefaultPersistentPropertyPath<P>(Collections.emptyList()) @TO@ VariableDeclarationStatement@@PersistentPropertyPath<P> path=new DefaultPersistentPropertyPath<P>(Collections.emptyList()); @AT@ 4073 @LENGTH@ 68
---------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=new DefaultPersistentPropertyPath<P>(Collections.emptyList()) @AT@ 4073 @LENGTH@ 4
---------INS ClassInstanceCreation@@DefaultPersistentPropertyPath<P>[Collections.emptyList()] @TO@ VariableDeclarationFragment@@path=new DefaultPersistentPropertyPath<P>(Collections.emptyList()) @AT@ 4080 @LENGTH@ 61
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultPersistentPropertyPath<P>[Collections.emptyList()] @AT@ 4080 @LENGTH@ 3
------------INS ParameterizedType@@DefaultPersistentPropertyPath<P> @TO@ ClassInstanceCreation@@DefaultPersistentPropertyPath<P>[Collections.emptyList()] @AT@ 4084 @LENGTH@ 32
---------------INS SimpleType@@DefaultPersistentPropertyPath @TO@ ParameterizedType@@DefaultPersistentPropertyPath<P> @AT@ 4084 @LENGTH@ 29
---------------INS SimpleType@@P @TO@ ParameterizedType@@DefaultPersistentPropertyPath<P> @AT@ 4114 @LENGTH@ 1
------------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@DefaultPersistentPropertyPath<P>[Collections.emptyList()] @AT@ 4117 @LENGTH@ 23
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 4117 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 4129 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(path.getLeafProperty()).isNull() @TO@ MethodDeclaration@@public, void, MethodName:returnsNullForLeafPropertyOnEmptyPath,  @AT@ 4146 @LENGTH@ 44
------INS MethodInvocation@@assertThat(path.getLeafProperty()).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(path.getLeafProperty()).isNull() @AT@ 4146 @LENGTH@ 43
---------INS MethodInvocation@@MethodName:assertThat:[path.getLeafProperty()] @TO@ MethodInvocation@@assertThat(path.getLeafProperty()).isNull() @AT@ 4146 @LENGTH@ 34
------------INS MethodInvocation@@path.getLeafProperty() @TO@ MethodInvocation@@MethodName:assertThat:[path.getLeafProperty()] @AT@ 4157 @LENGTH@ 22
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.getLeafProperty() @AT@ 4157 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getLeafProperty:[] @TO@ MethodInvocation@@path.getLeafProperty() @AT@ 4162 @LENGTH@ 17
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(path.getLeafProperty()).isNull() @AT@ 4181 @LENGTH@ 8


UPD TypeDeclaration@@[public]BacklogDebugger, ServiceSupport @TO@ [public, final]BacklogDebugger, ServiceSupport @AT@ 3023 @LENGTH@ 22960
---INS Modifier@@final @TO@ TypeDeclaration@@[public]BacklogDebugger, ServiceSupport @AT@ 3030 @LENGTH@ 5


UPD ReturnStatement@@InfixExpression:t instanceof RuntimeException || t instanceof InvocationTargetException || t instanceof UndeclaredThrowableException @TO@ InfixExpression:t instanceof RuntimeException || t instanceof InvocationTargetException @AT@ 72731 @LENGTH@ 132
---UPD InfixExpression@@t instanceof RuntimeException || t instanceof InvocationTargetException || t instanceof UndeclaredThrowableException @TO@ t instanceof RuntimeException || t instanceof InvocationTargetException @AT@ 72738 @LENGTH@ 124
------DEL InstanceofExpression@@t instanceof UndeclaredThrowableException @AT@ 72821 @LENGTH@ 41
---------DEL SimpleName@@t @AT@ 72821 @LENGTH@ 1
---------DEL Instanceof@@instanceof @AT@ 72823 @LENGTH@ 10
---------DEL SimpleType@@UndeclaredThrowableException @AT@ 72834 @LENGTH@ 28


INS MethodDeclaration@@public, voidMethodName:MediaTypeRequestMatcher, Collection<MediaType> matchingMediaTypes,  @TO@ TypeDeclaration@@[public, final]MediaTypeRequestMatcher, [RequestMatcher] @AT@ 6036 @LENGTH@ 145
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:MediaTypeRequestMatcher, Collection<MediaType> matchingMediaTypes,  @AT@ 6036 @LENGTH@ 6
---INS SimpleName@@MethodName:MediaTypeRequestMatcher @TO@ MethodDeclaration@@public, voidMethodName:MediaTypeRequestMatcher, Collection<MediaType> matchingMediaTypes,  @AT@ 6043 @LENGTH@ 23
---INS SingleVariableDeclaration@@Collection<MediaType> matchingMediaTypes @TO@ MethodDeclaration@@public, voidMethodName:MediaTypeRequestMatcher, Collection<MediaType> matchingMediaTypes,  @AT@ 6067 @LENGTH@ 40
------INS ParameterizedType@@Collection<MediaType> @TO@ SingleVariableDeclaration@@Collection<MediaType> matchingMediaTypes @AT@ 6067 @LENGTH@ 21
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<MediaType> @AT@ 6067 @LENGTH@ 10
---------INS SimpleType@@MediaType @TO@ ParameterizedType@@Collection<MediaType> @AT@ 6078 @LENGTH@ 9
------INS SimpleName@@matchingMediaTypes @TO@ SingleVariableDeclaration@@Collection<MediaType> matchingMediaTypes @AT@ 6089 @LENGTH@ 18
---INS ConstructorInvocation@@this(new HeaderContentNegotiationStrategy(),matchingMediaTypes); @TO@ MethodDeclaration@@public, voidMethodName:MediaTypeRequestMatcher, Collection<MediaType> matchingMediaTypes,  @AT@ 6113 @LENGTH@ 65
------INS ClassInstanceCreation@@HeaderContentNegotiationStrategy[] @TO@ ConstructorInvocation@@this(new HeaderContentNegotiationStrategy(),matchingMediaTypes); @AT@ 6118 @LENGTH@ 38
---------INS New@@new @TO@ ClassInstanceCreation@@HeaderContentNegotiationStrategy[] @AT@ 6118 @LENGTH@ 3
---------INS SimpleType@@HeaderContentNegotiationStrategy @TO@ ClassInstanceCreation@@HeaderContentNegotiationStrategy[] @AT@ 6122 @LENGTH@ 32
------INS SimpleName@@matchingMediaTypes @TO@ ConstructorInvocation@@this(new HeaderContentNegotiationStrategy(),matchingMediaTypes); @AT@ 6158 @LENGTH@ 18


UPD MethodDeclaration@@private, Boolean, R, S, MethodName:sendReply, final ReceiveAndReplyCallback<R,S> callback, final ReplyToAddressCallback<S> replyToAddressCallback, Channel channel, Message receiveMessage, Exception,  @TO@ private, boolean, R, S, MethodName:sendReply, final ReceiveAndReplyCallback<R,S> callback, final ReplyToAddressCallback<S> replyToAddressCallback, Channel channel, Message receiveMessage, Exception,  @AT@ 48735 @LENGTH@ 1078
---DEL SimpleType@@Boolean @AT@ 48750 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@private, Boolean, R, S, MethodName:sendReply, final ReceiveAndReplyCallback<R,S> callback, final ReplyToAddressCallback<S> replyToAddressCallback, Channel channel, Message receiveMessage, Exception,  @AT@ 48814 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:transactionManager.afterPropertiesSet() @TO@ MethodDeclaration@@public, void, MethodName:init,  @AT@ 1882 @LENGTH@ 40
---INS MethodInvocation@@transactionManager.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:transactionManager.afterPropertiesSet() @AT@ 1882 @LENGTH@ 39
------INS SimpleName@@Name:transactionManager @TO@ MethodInvocation@@transactionManager.afterPropertiesSet() @AT@ 1882 @LENGTH@ 18
------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@transactionManager.afterPropertiesSet() @AT@ 1901 @LENGTH@ 20


UPD MethodDeclaration@@public, T, MethodName:zipDefalter, int compressionLevel,  @TO@ public, T, MethodName:zipDeflater, int compressionLevel,  @AT@ 42885 @LENGTH@ 198
---UPD SimpleName@@MethodName:zipDefalter @TO@ MethodName:zipDeflater @AT@ 42894 @LENGTH@ 11


UPD ReturnStatement@@ClassInstanceCreation:new BitFieldType(false,bits) @TO@ ClassInstanceCreation:new BitFieldType(true,bits) @AT@ 10498 @LENGTH@ 37
---UPD ClassInstanceCreation@@BitFieldType[false, bits] @TO@ BitFieldType[true, bits] @AT@ 10505 @LENGTH@ 29
------UPD BooleanLiteral@@false @TO@ true @AT@ 10522 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:getRemoteServiceArchiveBase().addClasses(AtomicTransactionRemoteService.class,TransactionParticipant.class).addAsManifestResource(PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve")),"permissions.xml") @TO@ MethodInvocation:getRemoteServiceArchiveBase().addClasses(AtomicTransactionRemoteService.class,TransactionParticipant.class).addAsManifestResource(PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve"),new RuntimePermission("getClassLoader")),"permissions.xml") @AT@ 2702 @LENGTH@ 317
---UPD MethodInvocation@@getRemoteServiceArchiveBase().addClasses(AtomicTransactionRemoteService.class,TransactionParticipant.class).addAsManifestResource(PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve")),"permissions.xml") @TO@ getRemoteServiceArchiveBase().addClasses(AtomicTransactionRemoteService.class,TransactionParticipant.class).addAsManifestResource(PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve"),new RuntimePermission("getClassLoader")),"permissions.xml") @AT@ 2709 @LENGTH@ 309
------UPD SimpleName@@MethodName:addAsManifestResource:[PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve")), "permissions.xml"] @TO@ MethodName:addAsManifestResource:[PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve"),new RuntimePermission("getClassLoader")), "permissions.xml"] @AT@ 2835 @LENGTH@ 183
---------UPD MethodInvocation@@PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve")) @TO@ PermissionUtils.createPermissionsXmlAsset(new SocketPermission(serverHostPort,"connect, resolve"),new RuntimePermission("getClassLoader")) @AT@ 2857 @LENGTH@ 141
------------UPD SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission(serverHostPort,"connect, resolve")] @TO@ MethodName:createPermissionsXmlAsset:[new SocketPermission(serverHostPort,"connect, resolve"), new RuntimePermission("getClassLoader")] @AT@ 2873 @LENGTH@ 125
---------------INS ClassInstanceCreation@@RuntimePermission["getClassLoader"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission(serverHostPort,"connect, resolve")] @AT@ 3071 @LENGTH@ 39
------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimePermission["getClassLoader"] @AT@ 3071 @LENGTH@ 3
------------------INS SimpleType@@RuntimePermission @TO@ ClassInstanceCreation@@RuntimePermission["getClassLoader"] @AT@ 3075 @LENGTH@ 17
------------------INS StringLiteral@@"getClassLoader" @TO@ ClassInstanceCreation@@RuntimePermission["getClassLoader"] @AT@ 3093 @LENGTH@ 16


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 2860 @LENGTH@ 64
---DEL Modifier@@public @AT@ 2860 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 2867 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 2875 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 2905 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 2912 @LENGTH@ 5


DEL MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 2196 @LENGTH@ 221
---DEL Modifier@@protected @AT@ 2196 @LENGTH@ 9
---DEL SimpleType@@JndiRegistry @AT@ 2206 @LENGTH@ 12
---DEL SimpleName@@MethodName:createRegistry @AT@ 2219 @LENGTH@ 14
---DEL SimpleType@@Exception @AT@ 2243 @LENGTH@ 9
---DEL VariableDeclarationStatement@@JndiRegistry registry=super.createRegistry(); @AT@ 2263 @LENGTH@ 47
------DEL SimpleType@@JndiRegistry @AT@ 2263 @LENGTH@ 12
------DEL VariableDeclarationFragment@@registry=super.createRegistry() @AT@ 2276 @LENGTH@ 33
---------DEL SimpleName@@registry @AT@ 2276 @LENGTH@ 8
---------DEL SuperMethodInvocation@@super.createRegistry() @AT@ 2287 @LENGTH@ 22
------------DEL SimpleName@@MethodName:createRegistry:[] @AT@ 2293 @LENGTH@ 14
---DEL ExpressionStatement@@MethodInvocation:registry.bind("sslContextParameters",new SSLContextParameters()) @AT@ 2319 @LENGTH@ 66
------DEL MethodInvocation@@registry.bind("sslContextParameters",new SSLContextParameters()) @AT@ 2319 @LENGTH@ 65
---------DEL SimpleName@@Name:registry @AT@ 2319 @LENGTH@ 8
---------DEL SimpleName@@MethodName:bind:["sslContextParameters", new SSLContextParameters()] @AT@ 2328 @LENGTH@ 56
------------DEL StringLiteral@@"sslContextParameters" @AT@ 2333 @LENGTH@ 22
------------DEL ClassInstanceCreation@@SSLContextParameters[] @AT@ 2357 @LENGTH@ 26
---------------DEL New@@new @AT@ 2357 @LENGTH@ 3
---------------DEL SimpleType@@SSLContextParameters @AT@ 2361 @LENGTH@ 20
---DEL ReturnStatement@@SimpleName:registry @AT@ 2395 @LENGTH@ 16
------DEL SimpleName@@registry @AT@ 2402 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:list.addAll(removeDistributableWeb(profileAddress.append(SUBSYSTEM,"distributable-web"))) @TO@ MethodDeclaration@@protected, List<ModelNode>, MethodName:adjustForVersion, final DomainClient client, PathAddress profileAddress, boolean withMasterServers, Exception,  @AT@ 2262 @LENGTH@ 91
---INS MethodInvocation@@list.addAll(removeDistributableWeb(profileAddress.append(SUBSYSTEM,"distributable-web"))) @TO@ ExpressionStatement@@MethodInvocation:list.addAll(removeDistributableWeb(profileAddress.append(SUBSYSTEM,"distributable-web"))) @AT@ 2262 @LENGTH@ 90
------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.addAll(removeDistributableWeb(profileAddress.append(SUBSYSTEM,"distributable-web"))) @AT@ 2262 @LENGTH@ 4
------INS SimpleName@@MethodName:addAll:[removeDistributableWeb(profileAddress.append(SUBSYSTEM,"distributable-web"))] @TO@ MethodInvocation@@list.addAll(removeDistributableWeb(profileAddress.append(SUBSYSTEM,"distributable-web"))) @AT@ 2267 @LENGTH@ 85
---------INS MethodInvocation@@removeDistributableWeb(profileAddress.append(SUBSYSTEM,"distributable-web")) @TO@ SimpleName@@MethodName:addAll:[removeDistributableWeb(profileAddress.append(SUBSYSTEM,"distributable-web"))] @AT@ 2274 @LENGTH@ 77
------------INS SimpleName@@MethodName:removeDistributableWeb:[profileAddress.append(SUBSYSTEM,"distributable-web")] @TO@ MethodInvocation@@removeDistributableWeb(profileAddress.append(SUBSYSTEM,"distributable-web")) @AT@ 2274 @LENGTH@ 77
---------------INS MethodInvocation@@profileAddress.append(SUBSYSTEM,"distributable-web") @TO@ SimpleName@@MethodName:removeDistributableWeb:[profileAddress.append(SUBSYSTEM,"distributable-web")] @AT@ 2297 @LENGTH@ 53
------------------INS SimpleName@@Name:profileAddress @TO@ MethodInvocation@@profileAddress.append(SUBSYSTEM,"distributable-web") @AT@ 2297 @LENGTH@ 14
------------------INS SimpleName@@MethodName:append:[SUBSYSTEM, "distributable-web"] @TO@ MethodInvocation@@profileAddress.append(SUBSYSTEM,"distributable-web") @AT@ 2312 @LENGTH@ 38
---------------------INS SimpleName@@SUBSYSTEM @TO@ SimpleName@@MethodName:append:[SUBSYSTEM, "distributable-web"] @AT@ 2319 @LENGTH@ 9
---------------------INS StringLiteral@@"distributable-web" @TO@ SimpleName@@MethodName:append:[SUBSYSTEM, "distributable-web"] @AT@ 2330 @LENGTH@ 19


UPD MethodDeclaration@@private, static, BodyInserters.FormInserter<String>, MethodName:body, OAuth2AuthorizationExchange authorizationExchange,  @TO@ private, static, BodyInserters.FormInserter<String>, MethodName:body, OAuth2AuthorizationExchange authorizationExchange, ClientRegistration clientRegistration,  @AT@ 3908 @LENGTH@ 590
---MOV VariableDeclarationStatement@@String redirectUri=authorizationExchange.getAuthorizationRequest().getRedirectUri(); @TO@ MethodDeclaration@@private, static, BodyInserters.FormInserter<String>, MethodName:body, OAuth2AuthorizationExchange authorizationExchange,  @AT@ 4122 @LENGTH@ 86
---UPD VariableDeclarationStatement@@BodyInserters.FormInserter<String> body=BodyInserters.fromFormData("grant_type",AuthorizationGrantType.AUTHORIZATION_CODE.getValue()).with("code",authorizationResponse.getCode()); @TO@ BodyInserters.FormInserter<String> body=BodyInserters.fromFormData(OAuth2ParameterNames.GRANT_TYPE,AuthorizationGrantType.AUTHORIZATION_CODE.getValue()).with(OAuth2ParameterNames.CODE,authorizationResponse.getCode()); @AT@ 4211 @LENGTH@ 193
------UPD VariableDeclarationFragment@@body=BodyInserters.fromFormData("grant_type",AuthorizationGrantType.AUTHORIZATION_CODE.getValue()).with("code",authorizationResponse.getCode()) @TO@ body=BodyInserters.fromFormData(OAuth2ParameterNames.GRANT_TYPE,AuthorizationGrantType.AUTHORIZATION_CODE.getValue()).with(OAuth2ParameterNames.CODE,authorizationResponse.getCode()) @AT@ 4246 @LENGTH@ 157
---------UPD MethodInvocation@@BodyInserters.fromFormData("grant_type",AuthorizationGrantType.AUTHORIZATION_CODE.getValue()).with("code",authorizationResponse.getCode()) @TO@ BodyInserters.fromFormData(OAuth2ParameterNames.GRANT_TYPE,AuthorizationGrantType.AUTHORIZATION_CODE.getValue()).with(OAuth2ParameterNames.CODE,authorizationResponse.getCode()) @AT@ 4253 @LENGTH@ 150
------------UPD MethodInvocation@@MethodName:fromFormData:["grant_type", AuthorizationGrantType.AUTHORIZATION_CODE.getValue()] @TO@ MethodName:fromFormData:[OAuth2ParameterNames.GRANT_TYPE, AuthorizationGrantType.AUTHORIZATION_CODE.getValue()] @AT@ 4253 @LENGTH@ 99
---------------DEL StringLiteral@@"grant_type" @AT@ 4285 @LENGTH@ 12
---------------INS QualifiedName@@OAuth2ParameterNames.GRANT_TYPE @TO@ MethodInvocation@@MethodName:fromFormData:["grant_type", AuthorizationGrantType.AUTHORIZATION_CODE.getValue()] @AT@ 4749 @LENGTH@ 31
------------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.GRANT_TYPE @AT@ 4749 @LENGTH@ 20
------------------INS SimpleName@@GRANT_TYPE @TO@ QualifiedName@@OAuth2ParameterNames.GRANT_TYPE @AT@ 4770 @LENGTH@ 10
------------UPD SimpleName@@MethodName:with:["code", authorizationResponse.getCode()] @TO@ MethodName:with:[OAuth2ParameterNames.CODE, authorizationResponse.getCode()] @AT@ 4358 @LENGTH@ 45
---------------DEL StringLiteral@@"code" @AT@ 4363 @LENGTH@ 6
---------------INS QualifiedName@@OAuth2ParameterNames.CODE @TO@ SimpleName@@MethodName:with:["code", authorizationResponse.getCode()] @AT@ 4846 @LENGTH@ 25
------------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.CODE @AT@ 4846 @LENGTH@ 20
------------------INS SimpleName@@CODE @TO@ QualifiedName@@OAuth2ParameterNames.CODE @AT@ 4867 @LENGTH@ 4
---UPD IfStatement@@if (redirectUri != null) {  body.with("redirect_uri",redirectUri);} @TO@ if (redirectUri != null) {  body.with(OAuth2ParameterNames.REDIRECT_URI,redirectUri);} @AT@ 4407 @LENGTH@ 73
------UPD Block@@ThenBody:{  body.with("redirect_uri",redirectUri);} @TO@ ThenBody:{  body.with(OAuth2ParameterNames.REDIRECT_URI,redirectUri);} @AT@ 4432 @LENGTH@ 48
---------UPD ExpressionStatement@@MethodInvocation:body.with("redirect_uri",redirectUri) @TO@ MethodInvocation:body.with(OAuth2ParameterNames.REDIRECT_URI,redirectUri) @AT@ 4437 @LENGTH@ 39
------------UPD MethodInvocation@@body.with("redirect_uri",redirectUri) @TO@ body.with(OAuth2ParameterNames.REDIRECT_URI,redirectUri) @AT@ 4437 @LENGTH@ 38
---------------UPD SimpleName@@MethodName:with:["redirect_uri", redirectUri] @TO@ MethodName:with:[OAuth2ParameterNames.REDIRECT_URI, redirectUri] @AT@ 4442 @LENGTH@ 33
------------------DEL StringLiteral@@"redirect_uri" @AT@ 4447 @LENGTH@ 14
------------------INS QualifiedName@@OAuth2ParameterNames.REDIRECT_URI @TO@ SimpleName@@MethodName:with:["redirect_uri", redirectUri] @AT@ 5158 @LENGTH@ 33
---------------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.REDIRECT_URI @AT@ 5158 @LENGTH@ 20
---------------------INS SimpleName@@REDIRECT_URI @TO@ QualifiedName@@OAuth2ParameterNames.REDIRECT_URI @AT@ 5179 @LENGTH@ 12
---INS SingleVariableDeclaration@@ClientRegistration clientRegistration @TO@ MethodDeclaration@@private, static, BodyInserters.FormInserter<String>, MethodName:body, OAuth2AuthorizationExchange authorizationExchange,  @AT@ 4528 @LENGTH@ 37
------INS SimpleType@@ClientRegistration @TO@ SingleVariableDeclaration@@ClientRegistration clientRegistration @AT@ 4528 @LENGTH@ 18
------INS SimpleName@@clientRegistration @TO@ SingleVariableDeclaration@@ClientRegistration clientRegistration @AT@ 4547 @LENGTH@ 18
---INS VariableDeclarationStatement@@String codeVerifier=authorizationExchange.getAuthorizationRequest().getAttribute(PkceParameterNames.CODE_VERIFIER); @TO@ MethodDeclaration@@private, static, BodyInserters.FormInserter<String>, MethodName:body, OAuth2AuthorizationExchange authorizationExchange,  @AT@ 4998 @LENGTH@ 117
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String codeVerifier=authorizationExchange.getAuthorizationRequest().getAttribute(PkceParameterNames.CODE_VERIFIER); @AT@ 4998 @LENGTH@ 6
------INS VariableDeclarationFragment@@codeVerifier=authorizationExchange.getAuthorizationRequest().getAttribute(PkceParameterNames.CODE_VERIFIER) @TO@ VariableDeclarationStatement@@String codeVerifier=authorizationExchange.getAuthorizationRequest().getAttribute(PkceParameterNames.CODE_VERIFIER); @AT@ 5005 @LENGTH@ 109
---------INS SimpleName@@codeVerifier @TO@ VariableDeclarationFragment@@codeVerifier=authorizationExchange.getAuthorizationRequest().getAttribute(PkceParameterNames.CODE_VERIFIER) @AT@ 5005 @LENGTH@ 12
---------INS MethodInvocation@@authorizationExchange.getAuthorizationRequest().getAttribute(PkceParameterNames.CODE_VERIFIER) @TO@ VariableDeclarationFragment@@codeVerifier=authorizationExchange.getAuthorizationRequest().getAttribute(PkceParameterNames.CODE_VERIFIER) @AT@ 5020 @LENGTH@ 94
------------INS MethodInvocation@@MethodName:getAuthorizationRequest:[] @TO@ MethodInvocation@@authorizationExchange.getAuthorizationRequest().getAttribute(PkceParameterNames.CODE_VERIFIER) @AT@ 5020 @LENGTH@ 47
------------INS SimpleName@@Name:authorizationExchange @TO@ MethodInvocation@@authorizationExchange.getAuthorizationRequest().getAttribute(PkceParameterNames.CODE_VERIFIER) @AT@ 5020 @LENGTH@ 21
------------INS SimpleName@@MethodName:getAttribute:[PkceParameterNames.CODE_VERIFIER] @TO@ MethodInvocation@@authorizationExchange.getAuthorizationRequest().getAttribute(PkceParameterNames.CODE_VERIFIER) @AT@ 5068 @LENGTH@ 46
---------------INS QualifiedName@@PkceParameterNames.CODE_VERIFIER @TO@ SimpleName@@MethodName:getAttribute:[PkceParameterNames.CODE_VERIFIER] @AT@ 5081 @LENGTH@ 32
------------------INS SimpleName@@PkceParameterNames @TO@ QualifiedName@@PkceParameterNames.CODE_VERIFIER @AT@ 5081 @LENGTH@ 18
------------------INS SimpleName@@CODE_VERIFIER @TO@ QualifiedName@@PkceParameterNames.CODE_VERIFIER @AT@ 5100 @LENGTH@ 13
---INS IfStatement@@if (!ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {  body.with(OAuth2ParameterNames.CLIENT_ID,clientRegistration.getClientId());} @TO@ MethodDeclaration@@private, static, BodyInserters.FormInserter<String>, MethodName:body, OAuth2AuthorizationExchange authorizationExchange,  @AT@ 5213 @LENGTH@ 183
------INS PrefixExpression@@!ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod()) @TO@ IfStatement@@if (!ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {  body.with(OAuth2ParameterNames.CLIENT_ID,clientRegistration.getClientId());} @AT@ 5217 @LENGTH@ 92
---------INS Operator@@! @TO@ PrefixExpression@@!ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod()) @AT@ 5217 @LENGTH@ 1
---------INS MethodInvocation@@ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod()) @TO@ PrefixExpression@@!ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod()) @AT@ 5218 @LENGTH@ 91
------------INS QualifiedName@@Name:ClientAuthenticationMethod.BASIC @TO@ MethodInvocation@@ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod()) @AT@ 5218 @LENGTH@ 32
------------INS SimpleName@@MethodName:equals:[clientRegistration.getClientAuthenticationMethod()] @TO@ MethodInvocation@@ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod()) @AT@ 5251 @LENGTH@ 58
---------------INS MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @TO@ SimpleName@@MethodName:equals:[clientRegistration.getClientAuthenticationMethod()] @AT@ 5258 @LENGTH@ 50
------------------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @AT@ 5258 @LENGTH@ 18
------------------INS SimpleName@@MethodName:getClientAuthenticationMethod:[] @TO@ MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @AT@ 5277 @LENGTH@ 31
------INS Block@@ThenBody:{  body.with(OAuth2ParameterNames.CLIENT_ID,clientRegistration.getClientId());} @TO@ IfStatement@@if (!ClientAuthenticationMethod.BASIC.equals(clientRegistration.getClientAuthenticationMethod())) {  body.with(OAuth2ParameterNames.CLIENT_ID,clientRegistration.getClientId());} @AT@ 5311 @LENGTH@ 85
---------INS ExpressionStatement@@MethodInvocation:body.with(OAuth2ParameterNames.CLIENT_ID,clientRegistration.getClientId()) @TO@ Block@@ThenBody:{  body.with(OAuth2ParameterNames.CLIENT_ID,clientRegistration.getClientId());} @AT@ 5316 @LENGTH@ 76
------------INS MethodInvocation@@body.with(OAuth2ParameterNames.CLIENT_ID,clientRegistration.getClientId()) @TO@ ExpressionStatement@@MethodInvocation:body.with(OAuth2ParameterNames.CLIENT_ID,clientRegistration.getClientId()) @AT@ 5316 @LENGTH@ 75
---------------INS SimpleName@@Name:body @TO@ MethodInvocation@@body.with(OAuth2ParameterNames.CLIENT_ID,clientRegistration.getClientId()) @AT@ 5316 @LENGTH@ 4
---------------INS SimpleName@@MethodName:with:[OAuth2ParameterNames.CLIENT_ID, clientRegistration.getClientId()] @TO@ MethodInvocation@@body.with(OAuth2ParameterNames.CLIENT_ID,clientRegistration.getClientId()) @AT@ 5321 @LENGTH@ 70
------------------INS QualifiedName@@OAuth2ParameterNames.CLIENT_ID @TO@ SimpleName@@MethodName:with:[OAuth2ParameterNames.CLIENT_ID, clientRegistration.getClientId()] @AT@ 5326 @LENGTH@ 30
---------------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.CLIENT_ID @AT@ 5326 @LENGTH@ 20
---------------------INS SimpleName@@CLIENT_ID @TO@ QualifiedName@@OAuth2ParameterNames.CLIENT_ID @AT@ 5347 @LENGTH@ 9
------------------INS MethodInvocation@@clientRegistration.getClientId() @TO@ SimpleName@@MethodName:with:[OAuth2ParameterNames.CLIENT_ID, clientRegistration.getClientId()] @AT@ 5358 @LENGTH@ 32
---------------------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getClientId() @AT@ 5358 @LENGTH@ 18
---------------------INS SimpleName@@MethodName:getClientId:[] @TO@ MethodInvocation@@clientRegistration.getClientId() @AT@ 5377 @LENGTH@ 13
---INS IfStatement@@if (ClientAuthenticationMethod.POST.equals(clientRegistration.getClientAuthenticationMethod())) {  body.with(OAuth2ParameterNames.CLIENT_SECRET,clientRegistration.getClientSecret());} @TO@ MethodDeclaration@@private, static, BodyInserters.FormInserter<String>, MethodName:body, OAuth2AuthorizationExchange authorizationExchange,  @AT@ 5399 @LENGTH@ 189
------INS MethodInvocation@@ClientAuthenticationMethod.POST.equals(clientRegistration.getClientAuthenticationMethod()) @TO@ IfStatement@@if (ClientAuthenticationMethod.POST.equals(clientRegistration.getClientAuthenticationMethod())) {  body.with(OAuth2ParameterNames.CLIENT_SECRET,clientRegistration.getClientSecret());} @AT@ 5403 @LENGTH@ 90
---------INS QualifiedName@@Name:ClientAuthenticationMethod.POST @TO@ MethodInvocation@@ClientAuthenticationMethod.POST.equals(clientRegistration.getClientAuthenticationMethod()) @AT@ 5403 @LENGTH@ 31
---------INS SimpleName@@MethodName:equals:[clientRegistration.getClientAuthenticationMethod()] @TO@ MethodInvocation@@ClientAuthenticationMethod.POST.equals(clientRegistration.getClientAuthenticationMethod()) @AT@ 5435 @LENGTH@ 58
------------INS MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @TO@ SimpleName@@MethodName:equals:[clientRegistration.getClientAuthenticationMethod()] @AT@ 5442 @LENGTH@ 50
---------------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @AT@ 5442 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getClientAuthenticationMethod:[] @TO@ MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @AT@ 5461 @LENGTH@ 31
------INS Block@@ThenBody:{  body.with(OAuth2ParameterNames.CLIENT_SECRET,clientRegistration.getClientSecret());} @TO@ IfStatement@@if (ClientAuthenticationMethod.POST.equals(clientRegistration.getClientAuthenticationMethod())) {  body.with(OAuth2ParameterNames.CLIENT_SECRET,clientRegistration.getClientSecret());} @AT@ 5495 @LENGTH@ 93
---------INS ExpressionStatement@@MethodInvocation:body.with(OAuth2ParameterNames.CLIENT_SECRET,clientRegistration.getClientSecret()) @TO@ Block@@ThenBody:{  body.with(OAuth2ParameterNames.CLIENT_SECRET,clientRegistration.getClientSecret());} @AT@ 5500 @LENGTH@ 84
------------INS MethodInvocation@@body.with(OAuth2ParameterNames.CLIENT_SECRET,clientRegistration.getClientSecret()) @TO@ ExpressionStatement@@MethodInvocation:body.with(OAuth2ParameterNames.CLIENT_SECRET,clientRegistration.getClientSecret()) @AT@ 5500 @LENGTH@ 83
---------------INS SimpleName@@Name:body @TO@ MethodInvocation@@body.with(OAuth2ParameterNames.CLIENT_SECRET,clientRegistration.getClientSecret()) @AT@ 5500 @LENGTH@ 4
---------------INS SimpleName@@MethodName:with:[OAuth2ParameterNames.CLIENT_SECRET, clientRegistration.getClientSecret()] @TO@ MethodInvocation@@body.with(OAuth2ParameterNames.CLIENT_SECRET,clientRegistration.getClientSecret()) @AT@ 5505 @LENGTH@ 78
------------------INS QualifiedName@@OAuth2ParameterNames.CLIENT_SECRET @TO@ SimpleName@@MethodName:with:[OAuth2ParameterNames.CLIENT_SECRET, clientRegistration.getClientSecret()] @AT@ 5510 @LENGTH@ 34
---------------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.CLIENT_SECRET @AT@ 5510 @LENGTH@ 20
---------------------INS SimpleName@@CLIENT_SECRET @TO@ QualifiedName@@OAuth2ParameterNames.CLIENT_SECRET @AT@ 5531 @LENGTH@ 13
------------------INS MethodInvocation@@clientRegistration.getClientSecret() @TO@ SimpleName@@MethodName:with:[OAuth2ParameterNames.CLIENT_SECRET, clientRegistration.getClientSecret()] @AT@ 5546 @LENGTH@ 36
---------------------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getClientSecret() @AT@ 5546 @LENGTH@ 18
---------------------INS SimpleName@@MethodName:getClientSecret:[] @TO@ MethodInvocation@@clientRegistration.getClientSecret() @AT@ 5565 @LENGTH@ 17
---INS IfStatement@@if (codeVerifier != null) {  body.with(PkceParameterNames.CODE_VERIFIER,codeVerifier);} @TO@ MethodDeclaration@@private, static, BodyInserters.FormInserter<String>, MethodName:body, OAuth2AuthorizationExchange authorizationExchange,  @AT@ 5591 @LENGTH@ 93
------INS InfixExpression@@codeVerifier != null @TO@ IfStatement@@if (codeVerifier != null) {  body.with(PkceParameterNames.CODE_VERIFIER,codeVerifier);} @AT@ 5595 @LENGTH@ 20
---------INS SimpleName@@codeVerifier @TO@ InfixExpression@@codeVerifier != null @AT@ 5595 @LENGTH@ 12
---------INS Operator@@!= @TO@ InfixExpression@@codeVerifier != null @AT@ 5607 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@codeVerifier != null @AT@ 5611 @LENGTH@ 4
------INS Block@@ThenBody:{  body.with(PkceParameterNames.CODE_VERIFIER,codeVerifier);} @TO@ IfStatement@@if (codeVerifier != null) {  body.with(PkceParameterNames.CODE_VERIFIER,codeVerifier);} @AT@ 5617 @LENGTH@ 67
---------INS ExpressionStatement@@MethodInvocation:body.with(PkceParameterNames.CODE_VERIFIER,codeVerifier) @TO@ Block@@ThenBody:{  body.with(PkceParameterNames.CODE_VERIFIER,codeVerifier);} @AT@ 5622 @LENGTH@ 58
------------INS MethodInvocation@@body.with(PkceParameterNames.CODE_VERIFIER,codeVerifier) @TO@ ExpressionStatement@@MethodInvocation:body.with(PkceParameterNames.CODE_VERIFIER,codeVerifier) @AT@ 5622 @LENGTH@ 57
---------------INS SimpleName@@Name:body @TO@ MethodInvocation@@body.with(PkceParameterNames.CODE_VERIFIER,codeVerifier) @AT@ 5622 @LENGTH@ 4
---------------INS SimpleName@@MethodName:with:[PkceParameterNames.CODE_VERIFIER, codeVerifier] @TO@ MethodInvocation@@body.with(PkceParameterNames.CODE_VERIFIER,codeVerifier) @AT@ 5627 @LENGTH@ 52
------------------INS QualifiedName@@PkceParameterNames.CODE_VERIFIER @TO@ SimpleName@@MethodName:with:[PkceParameterNames.CODE_VERIFIER, codeVerifier] @AT@ 5632 @LENGTH@ 32
---------------------INS SimpleName@@PkceParameterNames @TO@ QualifiedName@@PkceParameterNames.CODE_VERIFIER @AT@ 5632 @LENGTH@ 18
---------------------INS SimpleName@@CODE_VERIFIER @TO@ QualifiedName@@PkceParameterNames.CODE_VERIFIER @AT@ 5651 @LENGTH@ 13
------------------INS SimpleName@@codeVerifier @TO@ SimpleName@@MethodName:with:[PkceParameterNames.CODE_VERIFIER, codeVerifier] @AT@ 5666 @LENGTH@ 12


INS IfStatement@@if (!camelContext.getLifecycleStrategies().isEmpty()) {  camelContext.getLifecycleStrategies().removeIf(s -> s instanceof JmxManagementLifecycleStrategy);} @TO@ MethodDeclaration@@public, void, MethodName:setupManagement, CamelContext camelContext, ManagementStrategy strategy, LifecycleStrategy lifecycle,  @AT@ 2036 @LENGTH@ 280
---INS PrefixExpression@@!camelContext.getLifecycleStrategies().isEmpty() @TO@ IfStatement@@if (!camelContext.getLifecycleStrategies().isEmpty()) {  camelContext.getLifecycleStrategies().removeIf(s -> s instanceof JmxManagementLifecycleStrategy);} @AT@ 2040 @LENGTH@ 48
------INS Operator@@! @TO@ PrefixExpression@@!camelContext.getLifecycleStrategies().isEmpty() @AT@ 2040 @LENGTH@ 1
------INS MethodInvocation@@camelContext.getLifecycleStrategies().isEmpty() @TO@ PrefixExpression@@!camelContext.getLifecycleStrategies().isEmpty() @AT@ 2041 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:getLifecycleStrategies:[] @TO@ MethodInvocation@@camelContext.getLifecycleStrategies().isEmpty() @AT@ 2041 @LENGTH@ 37
---------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.getLifecycleStrategies().isEmpty() @AT@ 2041 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@camelContext.getLifecycleStrategies().isEmpty() @AT@ 2079 @LENGTH@ 9
---INS Block@@ThenBody:{  camelContext.getLifecycleStrategies().removeIf(s -> s instanceof JmxManagementLifecycleStrategy);} @TO@ IfStatement@@if (!camelContext.getLifecycleStrategies().isEmpty()) {  camelContext.getLifecycleStrategies().removeIf(s -> s instanceof JmxManagementLifecycleStrategy);} @AT@ 2090 @LENGTH@ 226
------INS ExpressionStatement@@MethodInvocation:camelContext.getLifecycleStrategies().removeIf(s -> s instanceof JmxManagementLifecycleStrategy) @TO@ Block@@ThenBody:{  camelContext.getLifecycleStrategies().removeIf(s -> s instanceof JmxManagementLifecycleStrategy);} @AT@ 2209 @LENGTH@ 97
---------MOV MethodInvocation@@camelContext.getLifecycleStrategies().clear() @TO@ ExpressionStatement@@MethodInvocation:camelContext.getLifecycleStrategies().removeIf(s -> s instanceof JmxManagementLifecycleStrategy) @AT@ 2063 @LENGTH@ 45
------------UPD SimpleName@@MethodName:clear:[] @TO@ MethodName:removeIf:[s -> s instanceof JmxManagementLifecycleStrategy] @AT@ 2101 @LENGTH@ 7
---------------INS LambdaExpression@@s -> s instanceof JmxManagementLifecycleStrategy @TO@ SimpleName@@MethodName:clear:[] @AT@ 2256 @LENGTH@ 48
------------------INS VariableDeclarationFragment@@s @TO@ LambdaExpression@@s -> s instanceof JmxManagementLifecycleStrategy @AT@ 2256 @LENGTH@ 1
---------------------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s @AT@ 2256 @LENGTH@ 1
---------------------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s @AT@ 2256 @LENGTH@ 1
------------------INS InstanceofExpression@@s instanceof JmxManagementLifecycleStrategy @TO@ LambdaExpression@@s -> s instanceof JmxManagementLifecycleStrategy @AT@ 2261 @LENGTH@ 43
---------------------INS SimpleName@@s @TO@ InstanceofExpression@@s instanceof JmxManagementLifecycleStrategy @AT@ 2261 @LENGTH@ 1
---------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@s instanceof JmxManagementLifecycleStrategy @AT@ 2263 @LENGTH@ 10
---------------------INS SimpleType@@JmxManagementLifecycleStrategy @TO@ InstanceofExpression@@s instanceof JmxManagementLifecycleStrategy @AT@ 2274 @LENGTH@ 30


UPD ReturnStatement@@InfixExpression:entry.getKey().equals("_id") && entry.getValue() == null || entry.getValue().equals(Optional.empty()) @TO@ InfixExpression:entry.getKey().equals("_id") && (entry.getValue() == null || entry.getValue().equals(Optional.empty())) @AT@ 8994 @LENGTH@ 109
---DEL InfixExpression@@entry.getKey().equals("_id") && entry.getValue() == null || entry.getValue().equals(Optional.empty()) @AT@ 9001 @LENGTH@ 101
------DEL Operator@@|| @AT@ 9057 @LENGTH@ 2
---MOV InfixExpression@@entry.getKey().equals("_id") && entry.getValue() == null @TO@ ReturnStatement@@InfixExpression:entry.getKey().equals("_id") && entry.getValue() == null || entry.getValue().equals(Optional.empty()) @AT@ 9001 @LENGTH@ 56
------INS ParenthesizedExpression@@(entry.getValue() == null || entry.getValue().equals(Optional.empty())) @TO@ InfixExpression@@entry.getKey().equals("_id") && entry.getValue() == null @AT@ 9033 @LENGTH@ 71
---------INS InfixExpression@@entry.getValue() == null || entry.getValue().equals(Optional.empty()) @TO@ ParenthesizedExpression@@(entry.getValue() == null || entry.getValue().equals(Optional.empty())) @AT@ 9034 @LENGTH@ 69
------------MOV InfixExpression@@entry.getValue() == null @TO@ InfixExpression@@entry.getValue() == null || entry.getValue().equals(Optional.empty()) @AT@ 9033 @LENGTH@ 24
------------INS Operator@@|| @TO@ InfixExpression@@entry.getValue() == null || entry.getValue().equals(Optional.empty()) @AT@ 9058 @LENGTH@ 2
------------MOV MethodInvocation@@entry.getValue().equals(Optional.empty()) @TO@ InfixExpression@@entry.getValue() == null || entry.getValue().equals(Optional.empty()) @AT@ 9061 @LENGTH@ 41


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1294 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1294 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1301 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1309 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1339 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1346 @LENGTH@ 5


UPD IfStatement@@if (!Boolean.TRUE.equals(map.get("active"))) {  logger.debug("check_token returned active attribute: " + map.get("active"));  throw new InvalidTokenException(accessToken);} @TO@ if (map.containsKey("active") && !"true".equals(String.valueOf(map.get("active")))) {  logger.debug("check_token returned active attribute: " + map.get("active"));  throw new InvalidTokenException(accessToken);} @AT@ 4082 @LENGTH@ 179
---INS InfixExpression@@map.containsKey("active") && !"true".equals(String.valueOf(map.get("active"))) @TO@ IfStatement@@if (!Boolean.TRUE.equals(map.get("active"))) {  logger.debug("check_token returned active attribute: " + map.get("active"));  throw new InvalidTokenException(accessToken);} @AT@ 4086 @LENGTH@ 78
------MOV PrefixExpression@@!Boolean.TRUE.equals(map.get("active")) @TO@ InfixExpression@@map.containsKey("active") && !"true".equals(String.valueOf(map.get("active"))) @AT@ 4086 @LENGTH@ 39
---------INS MethodInvocation@@"true".equals(String.valueOf(map.get("active"))) @TO@ PrefixExpression@@!Boolean.TRUE.equals(map.get("active")) @AT@ 4116 @LENGTH@ 48
------------INS StringLiteral@@"true" @TO@ MethodInvocation@@"true".equals(String.valueOf(map.get("active"))) @AT@ 4116 @LENGTH@ 6
------------INS SimpleName@@MethodName:equals:[String.valueOf(map.get("active"))] @TO@ MethodInvocation@@"true".equals(String.valueOf(map.get("active"))) @AT@ 4123 @LENGTH@ 41
---------------MOV MethodInvocation@@Boolean.TRUE.equals(map.get("active")) @TO@ SimpleName@@MethodName:equals:[String.valueOf(map.get("active"))] @AT@ 4087 @LENGTH@ 38
------------------DEL QualifiedName@@Name:Boolean.TRUE @AT@ 4087 @LENGTH@ 12
------------------UPD SimpleName@@MethodName:equals:[map.get("active")] @TO@ MethodName:valueOf:[map.get("active")] @AT@ 4100 @LENGTH@ 25
------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@Boolean.TRUE.equals(map.get("active")) @AT@ 4130 @LENGTH@ 6
------INS MethodInvocation@@map.containsKey("active") @TO@ InfixExpression@@map.containsKey("active") && !"true".equals(String.valueOf(map.get("active"))) @AT@ 4086 @LENGTH@ 25
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.containsKey("active") @AT@ 4086 @LENGTH@ 3
---------INS SimpleName@@MethodName:containsKey:["active"] @TO@ MethodInvocation@@map.containsKey("active") @AT@ 4090 @LENGTH@ 21
------------INS StringLiteral@@"active" @TO@ SimpleName@@MethodName:containsKey:["active"] @AT@ 4102 @LENGTH@ 8
------INS Operator@@&& @TO@ InfixExpression@@map.containsKey("active") && !"true".equals(String.valueOf(map.get("active"))) @AT@ 4111 @LENGTH@ 2
---UPD PrefixExpression@@!Boolean.TRUE.equals(map.get("active")) @TO@ !"true".equals(String.valueOf(map.get("active"))) @AT@ 4086 @LENGTH@ 39


INS MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @TO@ TypeDeclaration@@[public]ReferrerPolicyHeaderWriterTests,  @AT@ 2371 @LENGTH@ 277
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2371 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2378 @LENGTH@ 4
---INS SimpleName@@MethodName:writeHeaderOnlyIfNotPresent @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2383 @LENGTH@ 27
---INS VariableDeclarationStatement@@String value=new String("value"); @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2416 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=new String("value"); @AT@ 2416 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=new String("value") @TO@ VariableDeclarationStatement@@String value=new String("value"); @AT@ 2423 @LENGTH@ 27
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=new String("value") @AT@ 2423 @LENGTH@ 5
---------INS ClassInstanceCreation@@String["value"] @TO@ VariableDeclarationFragment@@value=new String("value") @AT@ 2431 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@String["value"] @AT@ 2431 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String["value"] @AT@ 2435 @LENGTH@ 6
------------INS StringLiteral@@"value" @TO@ ClassInstanceCreation@@String["value"] @AT@ 2442 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:this.response.setHeader(REFERRER_POLICY_HEADER,value) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2454 @LENGTH@ 55
------INS MethodInvocation@@this.response.setHeader(REFERRER_POLICY_HEADER,value) @TO@ ExpressionStatement@@MethodInvocation:this.response.setHeader(REFERRER_POLICY_HEADER,value) @AT@ 2454 @LENGTH@ 54
---------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.setHeader(REFERRER_POLICY_HEADER,value) @AT@ 2454 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 2454 @LENGTH@ 4
------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 2459 @LENGTH@ 8
---------INS SimpleName@@MethodName:setHeader:[REFERRER_POLICY_HEADER, value] @TO@ MethodInvocation@@this.response.setHeader(REFERRER_POLICY_HEADER,value) @AT@ 2468 @LENGTH@ 40
------------INS SimpleName@@REFERRER_POLICY_HEADER @TO@ SimpleName@@MethodName:setHeader:[REFERRER_POLICY_HEADER, value] @AT@ 2478 @LENGTH@ 22
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:setHeader:[REFERRER_POLICY_HEADER, value] @AT@ 2502 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:this.writer.writeHeaders(this.request,this.response) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2512 @LENGTH@ 54
------INS MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @TO@ ExpressionStatement@@MethodInvocation:this.writer.writeHeaders(this.request,this.response) @AT@ 2512 @LENGTH@ 53
---------INS FieldAccess@@this.writer @TO@ MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @AT@ 2512 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.writer @AT@ 2512 @LENGTH@ 4
------------INS SimpleName@@writer @TO@ FieldAccess@@this.writer @AT@ 2517 @LENGTH@ 6
---------INS SimpleName@@MethodName:writeHeaders:[this.request, this.response] @TO@ MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @AT@ 2524 @LENGTH@ 41
------------INS FieldAccess@@this.request @TO@ SimpleName@@MethodName:writeHeaders:[this.request, this.response] @AT@ 2537 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 2537 @LENGTH@ 4
---------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 2542 @LENGTH@ 7
------------INS FieldAccess@@this.response @TO@ SimpleName@@MethodName:writeHeaders:[this.request, this.response] @AT@ 2551 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 2551 @LENGTH@ 4
---------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 2556 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(this.response.getHeader(REFERRER_POLICY_HEADER)).isSameAs(value) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2569 @LENGTH@ 76
------INS MethodInvocation@@assertThat(this.response.getHeader(REFERRER_POLICY_HEADER)).isSameAs(value) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.response.getHeader(REFERRER_POLICY_HEADER)).isSameAs(value) @AT@ 2569 @LENGTH@ 75
---------INS MethodInvocation@@MethodName:assertThat:[this.response.getHeader(REFERRER_POLICY_HEADER)] @TO@ MethodInvocation@@assertThat(this.response.getHeader(REFERRER_POLICY_HEADER)).isSameAs(value) @AT@ 2569 @LENGTH@ 59
------------INS MethodInvocation@@this.response.getHeader(REFERRER_POLICY_HEADER) @TO@ MethodInvocation@@MethodName:assertThat:[this.response.getHeader(REFERRER_POLICY_HEADER)] @AT@ 2580 @LENGTH@ 47
---------------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.getHeader(REFERRER_POLICY_HEADER) @AT@ 2580 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 2580 @LENGTH@ 4
------------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 2585 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getHeader:[REFERRER_POLICY_HEADER] @TO@ MethodInvocation@@this.response.getHeader(REFERRER_POLICY_HEADER) @AT@ 2594 @LENGTH@ 33
------------------INS SimpleName@@REFERRER_POLICY_HEADER @TO@ SimpleName@@MethodName:getHeader:[REFERRER_POLICY_HEADER] @AT@ 2604 @LENGTH@ 22
---------INS SimpleName@@MethodName:isSameAs:[value] @TO@ MethodInvocation@@assertThat(this.response.getHeader(REFERRER_POLICY_HEADER)).isSameAs(value) @AT@ 2629 @LENGTH@ 15
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:isSameAs:[value] @AT@ 2638 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Cannot create the SAXParser XMLReader, due to {}",ex) @TO@ MethodInvocation:LOG.warn("Cannot create the SAXParser XMLReader, due to {}",ex.getMessage(),ex) @AT@ 20504 @LENGTH@ 65
---UPD MethodInvocation@@LOG.warn("Cannot create the SAXParser XMLReader, due to {}",ex) @TO@ LOG.warn("Cannot create the SAXParser XMLReader, due to {}",ex.getMessage(),ex) @AT@ 20504 @LENGTH@ 64
------UPD SimpleName@@MethodName:warn:["Cannot create the SAXParser XMLReader, due to {}", ex] @TO@ MethodName:warn:["Cannot create the SAXParser XMLReader, due to {}", ex.getMessage(), ex] @AT@ 20508 @LENGTH@ 60
---------INS MethodInvocation@@ex.getMessage() @TO@ SimpleName@@MethodName:warn:["Cannot create the SAXParser XMLReader, due to {}", ex] @AT@ 20565 @LENGTH@ 15
------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getMessage() @AT@ 20565 @LENGTH@ 2
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@ex.getMessage() @AT@ 20568 @LENGTH@ 12


UPD VariableDeclarationStatement@@URL res=loadResourceAsURL(name); @TO@ URL res=loadResourceAsURL(name,loader); @AT@ 17538 @LENGTH@ 34
---UPD VariableDeclarationFragment@@res=loadResourceAsURL(name) @TO@ res=loadResourceAsURL(name,loader) @AT@ 17542 @LENGTH@ 29
------UPD MethodInvocation@@loadResourceAsURL(name) @TO@ loadResourceAsURL(name,loader) @AT@ 17548 @LENGTH@ 23
---------UPD SimpleName@@MethodName:loadResourceAsURL:[name] @TO@ MethodName:loadResourceAsURL:[name, loader] @AT@ 17548 @LENGTH@ 23
------------INS SimpleName@@loader @TO@ SimpleName@@MethodName:loadResourceAsURL:[name] @AT@ 17572 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:maybeEmitEvent(new AfterSaveEvent<>(initialized,dbDoc,collectionName)) @TO@ MethodInvocation:maybeEmitEvent(new AfterSaveEvent<>(saved,dbDoc,collectionName)) @AT@ 51464 @LENGTH@ 73
---UPD MethodInvocation@@maybeEmitEvent(new AfterSaveEvent<>(initialized,dbDoc,collectionName)) @TO@ maybeEmitEvent(new AfterSaveEvent<>(saved,dbDoc,collectionName)) @AT@ 51464 @LENGTH@ 72
------UPD SimpleName@@MethodName:maybeEmitEvent:[new AfterSaveEvent<>(initialized,dbDoc,collectionName)] @TO@ MethodName:maybeEmitEvent:[new AfterSaveEvent<>(saved,dbDoc,collectionName)] @AT@ 51464 @LENGTH@ 72
---------UPD ClassInstanceCreation@@AfterSaveEvent<>[initialized, dbDoc, collectionName] @TO@ AfterSaveEvent<>[saved, dbDoc, collectionName] @AT@ 51479 @LENGTH@ 56
------------UPD SimpleName@@initialized @TO@ saved @AT@ 51500 @LENGTH@ 11


UPD VariableDeclarationStatement@@final DeferredExtensionContext deferredExtensionContext=new DeferredExtensionContext(new BootModuleLoader(),extensionRegistry,null); @TO@ DeferredExtensionContext deferredExtensionContext=new DeferredExtensionContext(new BootModuleLoader(),extensionRegistry,Executors.newSingleThreadExecutor()); @AT@ 2438 @LENGTH@ 148
---DEL Modifier@@final @AT@ 2438 @LENGTH@ 5
---UPD VariableDeclarationFragment@@deferredExtensionContext=new DeferredExtensionContext(new BootModuleLoader(),extensionRegistry,null) @TO@ deferredExtensionContext=new DeferredExtensionContext(new BootModuleLoader(),extensionRegistry,Executors.newSingleThreadExecutor()) @AT@ 2469 @LENGTH@ 116
------UPD ClassInstanceCreation@@DeferredExtensionContext[new BootModuleLoader(), extensionRegistry, null] @TO@ DeferredExtensionContext[new BootModuleLoader(), extensionRegistry, Executors.newSingleThreadExecutor()] @AT@ 2508 @LENGTH@ 77
---------DEL NullLiteral@@null @AT@ 2580 @LENGTH@ 4
---------INS MethodInvocation@@Executors.newSingleThreadExecutor() @TO@ ClassInstanceCreation@@DeferredExtensionContext[new BootModuleLoader(), extensionRegistry, null] @AT@ 2882 @LENGTH@ 35
------------INS SimpleName@@Name:Executors @TO@ MethodInvocation@@Executors.newSingleThreadExecutor() @AT@ 2882 @LENGTH@ 9
------------INS SimpleName@@MethodName:newSingleThreadExecutor:[] @TO@ MethodInvocation@@Executors.newSingleThreadExecutor() @AT@ 2892 @LENGTH@ 25


INS MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @TO@ TypeDeclaration@@[public]CacheUtils,  @AT@ 1673 @LENGTH@ 163
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1673 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1680 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1687 @LENGTH@ 6
---INS SimpleName@@MethodName:buildDbKeyWithDelimiterSuffix @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1694 @LENGTH@ 29
---INS SingleVariableDeclaration@@String catName @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1724 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String catName @AT@ 1724 @LENGTH@ 6
------INS SimpleName@@catName @TO@ SingleVariableDeclaration@@String catName @AT@ 1731 @LENGTH@ 7
---INS SingleVariableDeclaration@@String dbName @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1740 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String dbName @AT@ 1740 @LENGTH@ 6
------INS SimpleName@@dbName @TO@ SingleVariableDeclaration@@String dbName @AT@ 1747 @LENGTH@ 6
---INS ReturnStatement@@InfixExpression:buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1761 @LENGTH@ 71
------INS InfixExpression@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @TO@ ReturnStatement@@InfixExpression:buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @AT@ 1768 @LENGTH@ 63
---------INS MethodInvocation@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) @TO@ InfixExpression@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @AT@ 1768 @LENGTH@ 53
------------INS SimpleName@@MethodName:buildKey:[catName.toLowerCase(), dbName.toLowerCase()] @TO@ MethodInvocation@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) @AT@ 1768 @LENGTH@ 53
---------------INS MethodInvocation@@catName.toLowerCase() @TO@ SimpleName@@MethodName:buildKey:[catName.toLowerCase(), dbName.toLowerCase()] @AT@ 1777 @LENGTH@ 21
------------------INS SimpleName@@Name:catName @TO@ MethodInvocation@@catName.toLowerCase() @AT@ 1777 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@catName.toLowerCase() @AT@ 1785 @LENGTH@ 13
---------------INS MethodInvocation@@dbName.toLowerCase() @TO@ SimpleName@@MethodName:buildKey:[catName.toLowerCase(), dbName.toLowerCase()] @AT@ 1800 @LENGTH@ 20
------------------INS SimpleName@@Name:dbName @TO@ MethodInvocation@@dbName.toLowerCase() @AT@ 1800 @LENGTH@ 6
------------------INS SimpleName@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@dbName.toLowerCase() @AT@ 1807 @LENGTH@ 13
---------INS Operator@@+ @TO@ InfixExpression@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @AT@ 1821 @LENGTH@ 1
---------INS SimpleName@@delimit @TO@ InfixExpression@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @AT@ 1824 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:kmsListClustersTest, Exception,  @TO@ public, void, MethodName:mskListClustersTest, Exception,  @AT@ 1630 @LENGTH@ 682
---UPD SimpleName@@MethodName:kmsListClustersTest @TO@ MethodName:mskListClustersTest @AT@ 1642 @LENGTH@ 19


UPD MethodDeclaration@@private, voidMethodName:ReferenceStrength, final int value,  @TO@ voidMethodName:ReferenceStrength, final int value,  @AT@ 4532 @LENGTH@ 86
---DEL Modifier@@private @AT@ 4532 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:from("olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true").to("mock:consumer-splitresult-value") @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 25070 @LENGTH@ 147
---INS MethodInvocation@@from("olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true").to("mock:consumer-splitresult-value") @TO@ ExpressionStatement@@MethodInvocation:from("olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true").to("mock:consumer-splitresult-value") @AT@ 25070 @LENGTH@ 146
------INS MethodInvocation@@MethodName:from:["olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true"] @TO@ MethodInvocation@@from("olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true").to("mock:consumer-splitresult-value") @AT@ 25070 @LENGTH@ 87
---------INS StringLiteral@@"olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true" @TO@ MethodInvocation@@MethodName:from:["olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true"] @AT@ 25075 @LENGTH@ 81
------INS SimpleName@@MethodName:to:["mock:consumer-splitresult-value"] @TO@ MethodInvocation@@from("olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true").to("mock:consumer-splitresult-value") @AT@ 25179 @LENGTH@ 37
---------INS StringLiteral@@"mock:consumer-splitresult-value" @TO@ SimpleName@@MethodName:to:["mock:consumer-splitresult-value"] @AT@ 25182 @LENGTH@ 33


INS MethodDeclaration@@public, void, MethodName:testFindAllAndRemoveReturnsEmptyWithoutMatches,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:reactive-infrastructure.xml"), public]ReactiveMongoTemplateTests,  @AT@ 22878 @LENGTH@ 320
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testFindAllAndRemoveReturnsEmptyWithoutMatches,  @AT@ 22878 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testFindAllAndRemoveReturnsEmptyWithoutMatches,  @AT@ 22885 @LENGTH@ 4
---INS SimpleName@@MethodName:testFindAllAndRemoveReturnsEmptyWithoutMatches @TO@ MethodDeclaration@@public, void, MethodName:testFindAllAndRemoveReturnsEmptyWithoutMatches,  @AT@ 22890 @LENGTH@ 46
---INS VariableDeclarationStatement@@Query qry=query(where("field").in("spring","mongodb")); @TO@ MethodDeclaration@@public, void, MethodName:testFindAllAndRemoveReturnsEmptyWithoutMatches,  @AT@ 22944 @LENGTH@ 58
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query qry=query(where("field").in("spring","mongodb")); @AT@ 22944 @LENGTH@ 5
------INS VariableDeclarationFragment@@qry=query(where("field").in("spring","mongodb")) @TO@ VariableDeclarationStatement@@Query qry=query(where("field").in("spring","mongodb")); @AT@ 22950 @LENGTH@ 51
---------INS SimpleName@@qry @TO@ VariableDeclarationFragment@@qry=query(where("field").in("spring","mongodb")) @AT@ 22950 @LENGTH@ 3
---------INS MethodInvocation@@query(where("field").in("spring","mongodb")) @TO@ VariableDeclarationFragment@@qry=query(where("field").in("spring","mongodb")) @AT@ 22956 @LENGTH@ 45
------------INS SimpleName@@MethodName:query:[where("field").in("spring","mongodb")] @TO@ MethodInvocation@@query(where("field").in("spring","mongodb")) @AT@ 22956 @LENGTH@ 45
---------------INS MethodInvocation@@where("field").in("spring","mongodb") @TO@ SimpleName@@MethodName:query:[where("field").in("spring","mongodb")] @AT@ 22962 @LENGTH@ 38
------------------INS MethodInvocation@@MethodName:where:["field"] @TO@ MethodInvocation@@where("field").in("spring","mongodb") @AT@ 22962 @LENGTH@ 14
---------------------INS StringLiteral@@"field" @TO@ MethodInvocation@@MethodName:where:["field"] @AT@ 22968 @LENGTH@ 7
------------------INS SimpleName@@MethodName:in:["spring", "mongodb"] @TO@ MethodInvocation@@where("field").in("spring","mongodb") @AT@ 22977 @LENGTH@ 23
---------------------INS StringLiteral@@"spring" @TO@ SimpleName@@MethodName:in:["spring", "mongodb"] @AT@ 22980 @LENGTH@ 8
---------------------INS StringLiteral@@"mongodb" @TO@ SimpleName@@MethodName:in:["spring", "mongodb"] @AT@ 22990 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:template.findAllAndRemove(qry,Sample.class).as(StepVerifier::create).verifyComplete() @TO@ MethodDeclaration@@public, void, MethodName:testFindAllAndRemoveReturnsEmptyWithoutMatches,  @AT@ 23005 @LENGTH@ 87
------INS MethodInvocation@@template.findAllAndRemove(qry,Sample.class).as(StepVerifier::create).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:template.findAllAndRemove(qry,Sample.class).as(StepVerifier::create).verifyComplete() @AT@ 23005 @LENGTH@ 86
---------INS MethodInvocation@@MethodName:as:[StepVerifier::create] @TO@ MethodInvocation@@template.findAllAndRemove(qry,Sample.class).as(StepVerifier::create).verifyComplete() @AT@ 23005 @LENGTH@ 69
---------INS MethodInvocation@@MethodName:findAllAndRemove:[qry, Sample.class] @TO@ MethodInvocation@@template.findAllAndRemove(qry,Sample.class).as(StepVerifier::create).verifyComplete() @AT@ 23005 @LENGTH@ 44
------------INS SimpleName@@qry @TO@ MethodInvocation@@MethodName:findAllAndRemove:[qry, Sample.class] @AT@ 23031 @LENGTH@ 3
------------INS TypeLiteral@@Sample.class @TO@ MethodInvocation@@MethodName:findAllAndRemove:[qry, Sample.class] @AT@ 23036 @LENGTH@ 12
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.findAllAndRemove(qry,Sample.class).as(StepVerifier::create).verifyComplete() @AT@ 23005 @LENGTH@ 8
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@template.findAllAndRemove(qry,Sample.class).as(StepVerifier::create).verifyComplete() @AT@ 23075 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:template.count(new Query(),Sample.class).as(StepVerifier::create).expectNext(0L).verifyComplete() @TO@ MethodDeclaration@@public, void, MethodName:testFindAllAndRemoveReturnsEmptyWithoutMatches,  @AT@ 23096 @LENGTH@ 99
------INS MethodInvocation@@template.count(new Query(),Sample.class).as(StepVerifier::create).expectNext(0L).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:template.count(new Query(),Sample.class).as(StepVerifier::create).expectNext(0L).verifyComplete() @AT@ 23096 @LENGTH@ 98
---------INS MethodInvocation@@MethodName:expectNext:[0L] @TO@ MethodInvocation@@template.count(new Query(),Sample.class).as(StepVerifier::create).expectNext(0L).verifyComplete() @AT@ 23096 @LENGTH@ 81
------------INS NumberLiteral@@0L @TO@ MethodInvocation@@MethodName:expectNext:[0L] @AT@ 23174 @LENGTH@ 2
---------INS MethodInvocation@@MethodName:as:[StepVerifier::create] @TO@ MethodInvocation@@template.count(new Query(),Sample.class).as(StepVerifier::create).expectNext(0L).verifyComplete() @AT@ 23096 @LENGTH@ 66
---------INS MethodInvocation@@MethodName:count:[new Query(), Sample.class] @TO@ MethodInvocation@@template.count(new Query(),Sample.class).as(StepVerifier::create).expectNext(0L).verifyComplete() @AT@ 23096 @LENGTH@ 41
------------INS ClassInstanceCreation@@Query[] @TO@ MethodInvocation@@MethodName:count:[new Query(), Sample.class] @AT@ 23111 @LENGTH@ 11
---------------INS New@@new @TO@ ClassInstanceCreation@@Query[] @AT@ 23111 @LENGTH@ 3
---------------INS SimpleType@@Query @TO@ ClassInstanceCreation@@Query[] @AT@ 23115 @LENGTH@ 5
------------INS TypeLiteral@@Sample.class @TO@ MethodInvocation@@MethodName:count:[new Query(), Sample.class] @AT@ 23124 @LENGTH@ 12
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.count(new Query(),Sample.class).as(StepVerifier::create).expectNext(0L).verifyComplete() @AT@ 23096 @LENGTH@ 8
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@template.count(new Query(),Sample.class).as(StepVerifier::create).expectNext(0L).verifyComplete() @AT@ 23178 @LENGTH@ 16


UPD ExpressionStatement@@Assignment:total=total * 37 + (map == null ? 0 : map.hashCode()) @TO@ Assignment:total=total * 37 + map.hashCode() @AT@ 10016 @LENGTH@ 54
---UPD Assignment@@total=total * 37 + (map == null ? 0 : map.hashCode()) @TO@ total=total * 37 + map.hashCode() @AT@ 10016 @LENGTH@ 53
------UPD InfixExpression@@total * 37 + (map == null ? 0 : map.hashCode()) @TO@ total * 37 + map.hashCode() @AT@ 10024 @LENGTH@ 45
---------DEL ParenthesizedExpression@@(map == null ? 0 : map.hashCode()) @AT@ 10035 @LENGTH@ 34
------------DEL ConditionalExpression@@map == null ? 0 : map.hashCode() @AT@ 10036 @LENGTH@ 32
---------------DEL InfixExpression@@map == null @AT@ 10036 @LENGTH@ 11
------------------DEL SimpleName@@map @AT@ 10036 @LENGTH@ 3
------------------DEL Operator@@== @AT@ 10039 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 10043 @LENGTH@ 4
---------------DEL NumberLiteral@@0 @AT@ 10050 @LENGTH@ 1
---------------DEL MethodInvocation@@map.hashCode() @AT@ 10054 @LENGTH@ 14
---------INS MethodInvocation@@map.hashCode() @TO@ InfixExpression@@total * 37 + (map == null ? 0 : map.hashCode()) @AT@ 10035 @LENGTH@ 14
------------MOV SimpleName@@Name:map @TO@ MethodInvocation@@map.hashCode() @AT@ 10054 @LENGTH@ 3
------------MOV SimpleName@@MethodName:hashCode:[] @TO@ MethodInvocation@@map.hashCode() @AT@ 10058 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:_log.info(" >>>>>>>>>>>>>>>>>>>>> jira example - add attachment") @TO@ MethodInvocation:LOG.info(" >>>>>>>>>>>>>>>>>>>>> jira example - add attachment") @AT@ 1268 @LENGTH@ 66
---UPD MethodInvocation@@_log.info(" >>>>>>>>>>>>>>>>>>>>> jira example - add attachment") @TO@ LOG.info(" >>>>>>>>>>>>>>>>>>>>> jira example - add attachment") @AT@ 1268 @LENGTH@ 65
------UPD SimpleName@@Name:_log @TO@ Name:LOG @AT@ 1268 @LENGTH@ 4


UPD ReturnStatement@@ClassInstanceCreation:new OAuth2AuthenticationException(invalidRequest,e.getMessage()) @TO@ ClassInstanceCreation:new OAuth2AuthenticationException(invalidRequest,invalidRequest.getDescription(),e) @AT@ 3378 @LENGTH@ 73
---UPD ClassInstanceCreation@@OAuth2AuthenticationException[invalidRequest, e.getMessage()] @TO@ OAuth2AuthenticationException[invalidRequest, invalidRequest.getDescription(), e] @AT@ 3385 @LENGTH@ 65
------UPD MethodInvocation@@e.getMessage() @TO@ invalidRequest.getDescription() @AT@ 3435 @LENGTH@ 14
---------UPD SimpleName@@Name:e @TO@ Name:invalidRequest @AT@ 3435 @LENGTH@ 1
---------UPD SimpleName@@MethodName:getMessage:[] @TO@ MethodName:getDescription:[] @AT@ 3437 @LENGTH@ 12
------INS SimpleName@@e @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[invalidRequest, e.getMessage()] @AT@ 3468 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:logger.warn("Failed to create pre-defined Indexes: {}",cause.getMessage(),cause) @TO@ MethodInvocation:logger.warn(String.format("Failed to create pre-defined Indexes: %s",cause.getMessage()),cause) @AT@ 2640 @LENGTH@ 83
---UPD MethodInvocation@@logger.warn("Failed to create pre-defined Indexes: {}",cause.getMessage(),cause) @TO@ logger.warn(String.format("Failed to create pre-defined Indexes: %s",cause.getMessage()),cause) @AT@ 2640 @LENGTH@ 82
------UPD SimpleName@@MethodName:warn:["Failed to create pre-defined Indexes: {}", cause.getMessage(), cause] @TO@ MethodName:warn:[String.format("Failed to create pre-defined Indexes: %s",cause.getMessage()), cause] @AT@ 2647 @LENGTH@ 75
---------INS MethodInvocation@@String.format("Failed to create pre-defined Indexes: %s",cause.getMessage()) @TO@ SimpleName@@MethodName:warn:["Failed to create pre-defined Indexes: {}", cause.getMessage(), cause] @AT@ 2652 @LENGTH@ 77
------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Failed to create pre-defined Indexes: %s",cause.getMessage()) @AT@ 2652 @LENGTH@ 6
------------INS SimpleName@@MethodName:format:["Failed to create pre-defined Indexes: %s", cause.getMessage()] @TO@ MethodInvocation@@String.format("Failed to create pre-defined Indexes: %s",cause.getMessage()) @AT@ 2659 @LENGTH@ 70
---------------MOV StringLiteral@@"Failed to create pre-defined Indexes: {}" @TO@ SimpleName@@MethodName:format:["Failed to create pre-defined Indexes: %s", cause.getMessage()] @AT@ 2652 @LENGTH@ 42
---------------MOV MethodInvocation@@cause.getMessage() @TO@ SimpleName@@MethodName:format:["Failed to create pre-defined Indexes: %s", cause.getMessage()] @AT@ 2696 @LENGTH@ 18
---------UPD StringLiteral@@"Failed to create pre-defined Indexes: {}" @TO@ "Failed to create pre-defined Indexes: %s" @AT@ 2652 @LENGTH@ 42


UPD ExpressionStatement@@Assignment:eksProducerToString="KMSProducer[" + URISupport.sanitizeUri(getEndpoint().getEndpointUri()) + "]" @TO@ Assignment:eksProducerToString="EKSProducer[" + URISupport.sanitizeUri(getEndpoint().getEndpointUri()) + "]" @AT@ 3218 @LENGTH@ 100
---UPD Assignment@@eksProducerToString="KMSProducer[" + URISupport.sanitizeUri(getEndpoint().getEndpointUri()) + "]" @TO@ eksProducerToString="EKSProducer[" + URISupport.sanitizeUri(getEndpoint().getEndpointUri()) + "]" @AT@ 3218 @LENGTH@ 99
------UPD InfixExpression@@"KMSProducer[" + URISupport.sanitizeUri(getEndpoint().getEndpointUri()) + "]" @TO@ "EKSProducer[" + URISupport.sanitizeUri(getEndpoint().getEndpointUri()) + "]" @AT@ 3240 @LENGTH@ 77
---------UPD StringLiteral@@"KMSProducer[" @TO@ "EKSProducer[" @AT@ 3240 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:registry.put("amazonSQSClient",clientMock) @TO@ MethodInvocation:registry.bind("amazonSQSClient",clientMock) @AT@ 3059 @LENGTH@ 44
---UPD MethodInvocation@@registry.put("amazonSQSClient",clientMock) @TO@ registry.bind("amazonSQSClient",clientMock) @AT@ 3059 @LENGTH@ 43
------UPD SimpleName@@MethodName:put:["amazonSQSClient", clientMock] @TO@ MethodName:bind:["amazonSQSClient", clientMock] @AT@ 3068 @LENGTH@ 34


DEL ExpressionStatement@@MethodInvocation:verify(publisher).publishAuthenticationFailure(expected,authReq) @AT@ 9086 @LENGTH@ 66
---DEL MethodInvocation@@verify(publisher).publishAuthenticationFailure(expected,authReq) @AT@ 9086 @LENGTH@ 65
------DEL MethodInvocation@@MethodName:verify:[publisher] @AT@ 9086 @LENGTH@ 17
---------DEL SimpleName@@publisher @AT@ 9093 @LENGTH@ 9
------DEL SimpleName@@MethodName:publishAuthenticationFailure:[expected, authReq] @AT@ 9104 @LENGTH@ 47
---------DEL SimpleName@@expected @AT@ 9133 @LENGTH@ 8
---------DEL SimpleName@@authReq @AT@ 9143 @LENGTH@ 7


INS MethodDeclaration@@private, voidMethodName:IntrospectionSupport,  @TO@ TypeDeclaration@@[public]IntrospectionSupport,  @AT@ 953 @LENGTH@ 38
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:IntrospectionSupport,  @AT@ 953 @LENGTH@ 7
---INS SimpleName@@MethodName:IntrospectionSupport @TO@ MethodDeclaration@@private, voidMethodName:IntrospectionSupport,  @AT@ 961 @LENGTH@ 20


DEL MethodDeclaration@@private, void, MethodName:asyncSendTwoOverCapacity, String uri, int capacity,  @AT@ 4608 @LENGTH@ 189
---DEL Modifier@@private @AT@ 4608 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 4616 @LENGTH@ 4
---DEL SimpleName@@MethodName:asyncSendTwoOverCapacity @AT@ 4621 @LENGTH@ 24
---DEL SingleVariableDeclaration@@String uri @AT@ 4646 @LENGTH@ 10
------DEL SimpleType@@String @AT@ 4646 @LENGTH@ 6
------DEL SimpleName@@uri @AT@ 4653 @LENGTH@ 3
---DEL SingleVariableDeclaration@@int capacity @AT@ 4658 @LENGTH@ 12
------DEL PrimitiveType@@int @AT@ 4658 @LENGTH@ 3
------DEL SimpleName@@capacity @AT@ 4662 @LENGTH@ 8
---DEL ForStatement@@for (int i=0; i < (capacity + 2); i++) {  template.asyncSendBody(uri,"Message " + i);} @AT@ 4682 @LENGTH@ 109
------DEL VariableDeclarationExpression@@int i=0 @AT@ 4687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 4687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 4691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 4691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 4695 @LENGTH@ 1
------DEL InfixExpression@@i < (capacity + 2) @AT@ 4698 @LENGTH@ 18
---------DEL SimpleName@@i @AT@ 4698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 4699 @LENGTH@ 1
---------DEL ParenthesizedExpression@@(capacity + 2) @AT@ 4702 @LENGTH@ 14
------------DEL InfixExpression@@capacity + 2 @AT@ 4703 @LENGTH@ 12
---------------DEL SimpleName@@capacity @AT@ 4703 @LENGTH@ 8
---------------DEL Operator@@+ @AT@ 4711 @LENGTH@ 1
---------------DEL NumberLiteral@@2 @AT@ 4714 @LENGTH@ 1
------DEL PostfixExpression@@i++ @AT@ 4718 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 4718 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 4720 @LENGTH@ 2
------DEL ExpressionStatement@@MethodInvocation:template.asyncSendBody(uri,"Message " + i) @AT@ 4737 @LENGTH@ 44
---------DEL MethodInvocation@@template.asyncSendBody(uri,"Message " + i) @AT@ 4737 @LENGTH@ 43
------------DEL SimpleName@@Name:template @AT@ 4737 @LENGTH@ 8
------------DEL SimpleName@@MethodName:asyncSendBody:[uri, "Message " + i] @AT@ 4746 @LENGTH@ 34
---------------DEL SimpleName@@uri @AT@ 4760 @LENGTH@ 3
---------------DEL InfixExpression@@"Message " + i @AT@ 4765 @LENGTH@ 14
------------------DEL StringLiteral@@"Message " @AT@ 4765 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 4775 @LENGTH@ 1
------------------DEL SimpleName@@i @AT@ 4778 @LENGTH@ 1


INS IfStatement@@if (!camelContext.getLifecycleStrategies().isEmpty()) {  camelContext.getLifecycleStrategies().removeIf(s -> s.getClass().getName().startsWith("org.apache.camel.management"));} @TO@ MethodDeclaration@@public, void, MethodName:setupManagement, CamelContext camelContext, ManagementStrategy strategy, LifecycleStrategy lifecycle,  @AT@ 1746 @LENGTH@ 351
---INS PrefixExpression@@!camelContext.getLifecycleStrategies().isEmpty() @TO@ IfStatement@@if (!camelContext.getLifecycleStrategies().isEmpty()) {  camelContext.getLifecycleStrategies().removeIf(s -> s.getClass().getName().startsWith("org.apache.camel.management"));} @AT@ 1750 @LENGTH@ 48
------INS Operator@@! @TO@ PrefixExpression@@!camelContext.getLifecycleStrategies().isEmpty() @AT@ 1750 @LENGTH@ 1
------INS MethodInvocation@@camelContext.getLifecycleStrategies().isEmpty() @TO@ PrefixExpression@@!camelContext.getLifecycleStrategies().isEmpty() @AT@ 1751 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:getLifecycleStrategies:[] @TO@ MethodInvocation@@camelContext.getLifecycleStrategies().isEmpty() @AT@ 1751 @LENGTH@ 37
---------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.getLifecycleStrategies().isEmpty() @AT@ 1751 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@camelContext.getLifecycleStrategies().isEmpty() @AT@ 1789 @LENGTH@ 9
---INS Block@@ThenBody:{  camelContext.getLifecycleStrategies().removeIf(s -> s.getClass().getName().startsWith("org.apache.camel.management"));} @TO@ IfStatement@@if (!camelContext.getLifecycleStrategies().isEmpty()) {  camelContext.getLifecycleStrategies().removeIf(s -> s.getClass().getName().startsWith("org.apache.camel.management"));} @AT@ 1800 @LENGTH@ 297
------INS ExpressionStatement@@MethodInvocation:camelContext.getLifecycleStrategies().removeIf(s -> s.getClass().getName().startsWith("org.apache.camel.management")) @TO@ Block@@ThenBody:{  camelContext.getLifecycleStrategies().removeIf(s -> s.getClass().getName().startsWith("org.apache.camel.management"));} @AT@ 1969 @LENGTH@ 118
---------INS MethodInvocation@@camelContext.getLifecycleStrategies().removeIf(s -> s.getClass().getName().startsWith("org.apache.camel.management")) @TO@ ExpressionStatement@@MethodInvocation:camelContext.getLifecycleStrategies().removeIf(s -> s.getClass().getName().startsWith("org.apache.camel.management")) @AT@ 1969 @LENGTH@ 117
------------INS MethodInvocation@@MethodName:getLifecycleStrategies:[] @TO@ MethodInvocation@@camelContext.getLifecycleStrategies().removeIf(s -> s.getClass().getName().startsWith("org.apache.camel.management")) @AT@ 1969 @LENGTH@ 37
------------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.getLifecycleStrategies().removeIf(s -> s.getClass().getName().startsWith("org.apache.camel.management")) @AT@ 1969 @LENGTH@ 12
------------INS SimpleName@@MethodName:removeIf:[s -> s.getClass().getName().startsWith("org.apache.camel.management")] @TO@ MethodInvocation@@camelContext.getLifecycleStrategies().removeIf(s -> s.getClass().getName().startsWith("org.apache.camel.management")) @AT@ 2007 @LENGTH@ 79
---------------INS LambdaExpression@@s -> s.getClass().getName().startsWith("org.apache.camel.management") @TO@ SimpleName@@MethodName:removeIf:[s -> s.getClass().getName().startsWith("org.apache.camel.management")] @AT@ 2016 @LENGTH@ 69
------------------INS VariableDeclarationFragment@@s @TO@ LambdaExpression@@s -> s.getClass().getName().startsWith("org.apache.camel.management") @AT@ 2016 @LENGTH@ 1
---------------------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s @AT@ 2016 @LENGTH@ 1
------------------INS MethodInvocation@@s.getClass().getName().startsWith("org.apache.camel.management") @TO@ LambdaExpression@@s -> s.getClass().getName().startsWith("org.apache.camel.management") @AT@ 2021 @LENGTH@ 64
---------------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@s.getClass().getName().startsWith("org.apache.camel.management") @AT@ 2021 @LENGTH@ 22
---------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@s.getClass().getName().startsWith("org.apache.camel.management") @AT@ 2021 @LENGTH@ 12
---------------------INS SimpleName@@Name:s @TO@ MethodInvocation@@s.getClass().getName().startsWith("org.apache.camel.management") @AT@ 2021 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:startsWith:["org.apache.camel.management"] @TO@ MethodInvocation@@s.getClass().getName().startsWith("org.apache.camel.management") @AT@ 2044 @LENGTH@ 41
------------------------INS StringLiteral@@"org.apache.camel.management" @TO@ SimpleName@@MethodName:startsWith:["org.apache.camel.management"] @AT@ 2055 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(getCamelContext().getTypeConverter(),config,options) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(getCamelContext(),config,options) @AT@ 4540 @LENGTH@ 90
---UPD MethodInvocation@@IntrospectionSupport.setProperties(getCamelContext().getTypeConverter(),config,options) @TO@ PropertyBindingSupport.bindProperties(getCamelContext(),config,options) @AT@ 4540 @LENGTH@ 89
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 4540 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[getCamelContext().getTypeConverter(), config, options] @TO@ MethodName:bindProperties:[getCamelContext(), config, options] @AT@ 4561 @LENGTH@ 68
---------DEL MethodInvocation@@getCamelContext().getTypeConverter() @AT@ 4575 @LENGTH@ 36
------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 4575 @LENGTH@ 17
------------DEL SimpleName@@MethodName:getTypeConverter:[] @AT@ 4593 @LENGTH@ 18
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:setProperties:[getCamelContext().getTypeConverter(), config, options] @AT@ 4634 @LENGTH@ 17


UPD FieldDeclaration@@private, OAuth2AuthorizationRequest.Builder, [authorizationRequest=OAuth2AuthorizationRequest.authorizationCode().authorizationUri("https://example.com/oauth2/authorize").clientId("client-id").redirectUri("http://localhost/client-1").state("state").additionalParameters(Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,this.clientRegistrationId))] @TO@ private, OAuth2AuthorizationRequest.Builder, [authorizationRequest=OAuth2AuthorizationRequest.authorizationCode().authorizationUri("https://example.com/oauth2/authorize").clientId("client-id").redirectUri("http://localhost/client-1").state("state").attributes(Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,this.clientRegistrationId))] @AT@ 3053 @LENGTH@ 380
---UPD VariableDeclarationFragment@@authorizationRequest=OAuth2AuthorizationRequest.authorizationCode().authorizationUri("https://example.com/oauth2/authorize").clientId("client-id").redirectUri("http://localhost/client-1").state("state").additionalParameters(Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,this.clientRegistrationId)) @TO@ authorizationRequest=OAuth2AuthorizationRequest.authorizationCode().authorizationUri("https://example.com/oauth2/authorize").clientId("client-id").redirectUri("http://localhost/client-1").state("state").attributes(Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,this.clientRegistrationId)) @AT@ 3096 @LENGTH@ 336
------UPD MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri("https://example.com/oauth2/authorize").clientId("client-id").redirectUri("http://localhost/client-1").state("state").additionalParameters(Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,this.clientRegistrationId)) @TO@ OAuth2AuthorizationRequest.authorizationCode().authorizationUri("https://example.com/oauth2/authorize").clientId("client-id").redirectUri("http://localhost/client-1").state("state").attributes(Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,this.clientRegistrationId)) @AT@ 3119 @LENGTH@ 313
---------UPD SimpleName@@MethodName:additionalParameters:[Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,this.clientRegistrationId)] @TO@ MethodName:attributes:[Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,this.clientRegistrationId)] @AT@ 3321 @LENGTH@ 111


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1237 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1237 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1244 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1252 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1282 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1289 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:filterWhenRequestIsInsecureAndNoPortMappingThenThrowsIllegalState,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]HttpsRedirectWebFilterTests,  @AT@ 4185 @LENGTH@ 266
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:filterWhenRequestIsInsecureAndNoPortMappingThenThrowsIllegalState,  @AT@ 4185 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:filterWhenRequestIsInsecureAndNoPortMappingThenThrowsIllegalState,  @AT@ 4192 @LENGTH@ 4
---INS SimpleName@@MethodName:filterWhenRequestIsInsecureAndNoPortMappingThenThrowsIllegalState @TO@ MethodDeclaration@@public, void, MethodName:filterWhenRequestIsInsecureAndNoPortMappingThenThrowsIllegalState,  @AT@ 4197 @LENGTH@ 65
---INS VariableDeclarationStatement@@ServerWebExchange exchange=get("http://localhost:1234"); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenRequestIsInsecureAndNoPortMappingThenThrowsIllegalState,  @AT@ 4269 @LENGTH@ 58
------INS SimpleType@@ServerWebExchange @TO@ VariableDeclarationStatement@@ServerWebExchange exchange=get("http://localhost:1234"); @AT@ 4269 @LENGTH@ 17
------INS VariableDeclarationFragment@@exchange=get("http://localhost:1234") @TO@ VariableDeclarationStatement@@ServerWebExchange exchange=get("http://localhost:1234"); @AT@ 4287 @LENGTH@ 39
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=get("http://localhost:1234") @AT@ 4287 @LENGTH@ 8
---------INS MethodInvocation@@get("http://localhost:1234") @TO@ VariableDeclarationFragment@@exchange=get("http://localhost:1234") @AT@ 4298 @LENGTH@ 28
------------INS SimpleName@@MethodName:get:["http://localhost:1234"] @TO@ MethodInvocation@@get("http://localhost:1234") @AT@ 4298 @LENGTH@ 28
---------------INS StringLiteral@@"http://localhost:1234" @TO@ SimpleName@@MethodName:get:["http://localhost:1234"] @AT@ 4302 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.filter.filter(exchange,this.chain).block()).isInstanceOf(IllegalStateException.class) @TO@ MethodDeclaration@@public, void, MethodName:filterWhenRequestIsInsecureAndNoPortMappingThenThrowsIllegalState,  @AT@ 4330 @LENGTH@ 118
------INS MethodInvocation@@assertThatCode(() -> this.filter.filter(exchange,this.chain).block()).isInstanceOf(IllegalStateException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.filter.filter(exchange,this.chain).block()).isInstanceOf(IllegalStateException.class) @AT@ 4330 @LENGTH@ 117
---------INS MethodInvocation@@MethodName:assertThatCode:[() -> this.filter.filter(exchange,this.chain).block()] @TO@ MethodInvocation@@assertThatCode(() -> this.filter.filter(exchange,this.chain).block()).isInstanceOf(IllegalStateException.class) @AT@ 4330 @LENGTH@ 70
------------INS LambdaExpression@@() -> this.filter.filter(exchange,this.chain).block() @TO@ MethodInvocation@@MethodName:assertThatCode:[() -> this.filter.filter(exchange,this.chain).block()] @AT@ 4345 @LENGTH@ 54
---------------INS MethodInvocation@@this.filter.filter(exchange,this.chain).block() @TO@ LambdaExpression@@() -> this.filter.filter(exchange,this.chain).block() @AT@ 4351 @LENGTH@ 48
------------------INS MethodInvocation@@MethodName:filter:[exchange, this.chain] @TO@ MethodInvocation@@this.filter.filter(exchange,this.chain).block() @AT@ 4351 @LENGTH@ 40
---------------------INS SimpleName@@exchange @TO@ MethodInvocation@@MethodName:filter:[exchange, this.chain] @AT@ 4370 @LENGTH@ 8
---------------------INS FieldAccess@@this.chain @TO@ MethodInvocation@@MethodName:filter:[exchange, this.chain] @AT@ 4380 @LENGTH@ 10
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.chain @AT@ 4380 @LENGTH@ 4
------------------------INS SimpleName@@chain @TO@ FieldAccess@@this.chain @AT@ 4385 @LENGTH@ 5
------------------INS FieldAccess@@this.filter @TO@ MethodInvocation@@this.filter.filter(exchange,this.chain).block() @AT@ 4351 @LENGTH@ 11
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.filter @AT@ 4351 @LENGTH@ 4
---------------------INS SimpleName@@filter @TO@ FieldAccess@@this.filter @AT@ 4356 @LENGTH@ 6
------------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@this.filter.filter(exchange,this.chain).block() @AT@ 4392 @LENGTH@ 7
---------INS SimpleName@@MethodName:isInstanceOf:[IllegalStateException.class] @TO@ MethodInvocation@@assertThatCode(() -> this.filter.filter(exchange,this.chain).block()).isInstanceOf(IllegalStateException.class) @AT@ 4406 @LENGTH@ 41
------------INS TypeLiteral@@IllegalStateException.class @TO@ SimpleName@@MethodName:isInstanceOf:[IllegalStateException.class] @AT@ 4419 @LENGTH@ 27


UPD MethodDeclaration@@public, String, MethodName:toJson,  @TO@ String, MethodName:toJson,  @AT@ 912 @LENGTH@ 23
---DEL Modifier@@public @AT@ 912 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:when(request.getAttribute(UserAuthorizationProcessingFilter.CALLBACK_ATTRIBUTE)).thenReturn("http://my.host.com/my/context") @TO@ MethodInvocation:when(request.getAttribute(UserAuthorizationProcessingFilter.CALLBACK_ATTRIBUTE)).thenReturn("https://my.host.com/my/context") @AT@ 1732 @LENGTH@ 130
---UPD MethodInvocation@@when(request.getAttribute(UserAuthorizationProcessingFilter.CALLBACK_ATTRIBUTE)).thenReturn("http://my.host.com/my/context") @TO@ when(request.getAttribute(UserAuthorizationProcessingFilter.CALLBACK_ATTRIBUTE)).thenReturn("https://my.host.com/my/context") @AT@ 1732 @LENGTH@ 129
------UPD SimpleName@@MethodName:thenReturn:["http://my.host.com/my/context"] @TO@ MethodName:thenReturn:["https://my.host.com/my/context"] @AT@ 1813 @LENGTH@ 48
---------UPD StringLiteral@@"http://my.host.com/my/context" @TO@ "https://my.host.com/my/context" @AT@ 1829 @LENGTH@ 31


DEL MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 1320 @LENGTH@ 202
---DEL Modifier@@protected @AT@ 1320 @LENGTH@ 9
---DEL SimpleType@@JndiRegistry @AT@ 1330 @LENGTH@ 12
---DEL SimpleName@@MethodName:createRegistry @AT@ 1343 @LENGTH@ 14
---DEL SimpleType@@Exception @AT@ 1367 @LENGTH@ 9
---DEL VariableDeclarationStatement@@JndiRegistry jndi=super.createRegistry(); @AT@ 1387 @LENGTH@ 43
------DEL SimpleType@@JndiRegistry @AT@ 1387 @LENGTH@ 12
------DEL VariableDeclarationFragment@@jndi=super.createRegistry() @AT@ 1400 @LENGTH@ 29
---------DEL SimpleName@@jndi @AT@ 1400 @LENGTH@ 4
---------DEL SuperMethodInvocation@@super.createRegistry() @AT@ 1407 @LENGTH@ 22
------------DEL SimpleName@@MethodName:createRegistry:[] @AT@ 1413 @LENGTH@ 14
---DEL ExpressionStatement@@MethodInvocation:jndi.bind("dummy-rest",new DummyRestConsumerFactory()) @AT@ 1439 @LENGTH@ 56
------DEL MethodInvocation@@jndi.bind("dummy-rest",new DummyRestConsumerFactory()) @AT@ 1439 @LENGTH@ 55
---------DEL SimpleName@@Name:jndi @AT@ 1439 @LENGTH@ 4
---------DEL SimpleName@@MethodName:bind:["dummy-rest", new DummyRestConsumerFactory()] @AT@ 1444 @LENGTH@ 50
------------DEL StringLiteral@@"dummy-rest" @AT@ 1449 @LENGTH@ 12
------------DEL ClassInstanceCreation@@DummyRestConsumerFactory[] @AT@ 1463 @LENGTH@ 30
---------------DEL New@@new @AT@ 1463 @LENGTH@ 3
---------------DEL SimpleType@@DummyRestConsumerFactory @AT@ 1467 @LENGTH@ 24
---DEL ReturnStatement@@SimpleName:jndi @AT@ 1504 @LENGTH@ 12
------DEL SimpleName@@jndi @AT@ 1511 @LENGTH@ 4


UPD VariableDeclarationStatement@@String message="CamelContext with identifier '" + camelContextKey + "' not found in ServiceRegistry. This can be caused by the order in which the platform extensions are initialized. Deferring Camel ProducerTemplate creation until the first WorkItemHandler call."; @TO@ String message="CamelContext with identifier '" + camelContextKey + "' not found in ServiceRegistry. This can be caused by the order in which the platform extensions are initialized. "+ "Deferring Camel ProducerTemplate creation until the first WorkItemHandler call."; @AT@ 5003 @LENGTH@ 286
---UPD VariableDeclarationFragment@@message="CamelContext with identifier '" + camelContextKey + "' not found in ServiceRegistry. This can be caused by the order in which the platform extensions are initialized. Deferring Camel ProducerTemplate creation until the first WorkItemHandler call." @TO@ message="CamelContext with identifier '" + camelContextKey + "' not found in ServiceRegistry. This can be caused by the order in which the platform extensions are initialized. "+ "Deferring Camel ProducerTemplate creation until the first WorkItemHandler call." @AT@ 5010 @LENGTH@ 278
------UPD InfixExpression@@"CamelContext with identifier '" + camelContextKey + "' not found in ServiceRegistry. This can be caused by the order in which the platform extensions are initialized. Deferring Camel ProducerTemplate creation until the first WorkItemHandler call." @TO@ "CamelContext with identifier '" + camelContextKey + "' not found in ServiceRegistry. This can be caused by the order in which the platform extensions are initialized. "+ "Deferring Camel ProducerTemplate creation until the first WorkItemHandler call." @AT@ 5020 @LENGTH@ 268
---------UPD StringLiteral@@"' not found in ServiceRegistry. This can be caused by the order in which the platform extensions are initialized. Deferring Camel ProducerTemplate creation until the first WorkItemHandler call." @TO@ "' not found in ServiceRegistry. This can be caused by the order in which the platform extensions are initialized. " @AT@ 5093 @LENGTH@ 195
---------INS StringLiteral@@"Deferring Camel ProducerTemplate creation until the first WorkItemHandler call." @TO@ InfixExpression@@"CamelContext with identifier '" + camelContextKey + "' not found in ServiceRegistry. This can be caused by the order in which the platform extensions are initialized. Deferring Camel ProducerTemplate creation until the first WorkItemHandler call." @AT@ 5225 @LENGTH@ 81


UPD ExpressionStatement@@MethodInvocation:Assert.assertNull("No message should be received as mdb timeouted",MessageDrivenTimeoutTestCase.receiveMessage(q,initCtx)) @TO@ MethodInvocation:Assert.assertNull("No message should be received as mdb timeouted",MessageDrivenTimeoutTestCase.receiveMessage(q,initCtx,false)) @AT@ 3828 @LENGTH@ 125
---UPD MethodInvocation@@Assert.assertNull("No message should be received as mdb timeouted",MessageDrivenTimeoutTestCase.receiveMessage(q,initCtx)) @TO@ Assert.assertNull("No message should be received as mdb timeouted",MessageDrivenTimeoutTestCase.receiveMessage(q,initCtx,false)) @AT@ 3828 @LENGTH@ 124
------UPD SimpleName@@MethodName:assertNull:["No message should be received as mdb timeouted", MessageDrivenTimeoutTestCase.receiveMessage(q,initCtx)] @TO@ MethodName:assertNull:["No message should be received as mdb timeouted", MessageDrivenTimeoutTestCase.receiveMessage(q,initCtx,false)] @AT@ 3835 @LENGTH@ 117
---------UPD MethodInvocation@@MessageDrivenTimeoutTestCase.receiveMessage(q,initCtx) @TO@ MessageDrivenTimeoutTestCase.receiveMessage(q,initCtx,false) @AT@ 3896 @LENGTH@ 55
------------UPD SimpleName@@MethodName:receiveMessage:[q, initCtx] @TO@ MethodName:receiveMessage:[q, initCtx, false] @AT@ 3925 @LENGTH@ 26
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:receiveMessage:[q, initCtx] @AT@ 3952 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelServletTest.class)).unitTestExclusionPattern(".*(\\.integration\\..*|IntegrationTest$|ExposedServletEndpointURIToJMXTest$.*Arquillian.*)").build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelServletTest.class)).dependency("javax.servlet:javax.servlet-api").unitTestExclusionPattern(".*(\\.integration\\..*|IntegrationTest$|ExposedServletEndpointURIToJMXTest$.*Arquillian.*)").build() @AT@ 1445 @LENGTH@ 471
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelServletTest.class)).unitTestExclusionPattern(".*(\\.integration\\..*|IntegrationTest$|ExposedServletEndpointURIToJMXTest$.*Arquillian.*)").build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelServletTest.class)).dependency("javax.servlet:javax.servlet-api").unitTestExclusionPattern(".*(\\.integration\\..*|IntegrationTest$|ExposedServletEndpointURIToJMXTest$.*Arquillian.*)").build() @AT@ 1452 @LENGTH@ 463
------INS MethodInvocation@@MethodName:dependency:["javax.servlet:javax.servlet-api"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelServletTest.class)).unitTestExclusionPattern(".*(\\.integration\\..*|IntegrationTest$|ExposedServletEndpointURIToJMXTest$.*Arquillian.*)").build() @AT@ 1452 @LENGTH@ 365
---------INS StringLiteral@@"javax.servlet:javax.servlet-api" @TO@ MethodInvocation@@MethodName:dependency:["javax.servlet:javax.servlet-api"] @AT@ 1783 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(configuration,options) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 2361 @LENGTH@ 59
---UPD MethodInvocation@@IntrospectionSupport.setProperties(configuration,options) @TO@ PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 2361 @LENGTH@ 58
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 2361 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[configuration, options] @TO@ MethodName:bindProperties:[context, configuration, options] @AT@ 2382 @LENGTH@ 37
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:setProperties:[configuration, options] @AT@ 2401 @LENGTH@ 7


UPD TypeDeclaration@@[public]PGPDataFormat, PGPKeyAccessDataFormat[PGPPublicKeyAccessor, PGPSecretKeyAccessor] @TO@ [@Dataformat("pgp"), public]PGPDataFormat, PGPKeyAccessDataFormat[PGPPublicKeyAccessor, PGPSecretKeyAccessor] @AT@ 1498 @LENGTH@ 10445
---INS SingleMemberAnnotation@@@Dataformat("pgp") @TO@ TypeDeclaration@@[public]PGPDataFormat, PGPKeyAccessDataFormat[PGPPublicKeyAccessor, PGPSecretKeyAccessor] @AT@ 1550 @LENGTH@ 18


UPD FieldDeclaration@@private, static, final, List<String>, [securityJackson2ModuleClasses=Arrays.asList("org.springframework.security.jackson2.CoreJackson2Module","org.springframework.security.cas.jackson2.CasJackson2Module","org.springframework.security.web.jackson2.WebJackson2Module")] @TO@ private, static, final, List<String>, [securityJackson2ModuleClasses=Arrays.asList("org.springframework.security.jackson2.CoreJackson2Module","org.springframework.security.cas.jackson2.CasJackson2Module","org.springframework.security.web.jackson2.WebJackson2Module","org.springframework.security.web.server.jackson2.WebServerJackson2Module")] @AT@ 2526 @LENGTH@ 278
---UPD VariableDeclarationFragment@@securityJackson2ModuleClasses=Arrays.asList("org.springframework.security.jackson2.CoreJackson2Module","org.springframework.security.cas.jackson2.CasJackson2Module","org.springframework.security.web.jackson2.WebJackson2Module") @TO@ securityJackson2ModuleClasses=Arrays.asList("org.springframework.security.jackson2.CoreJackson2Module","org.springframework.security.cas.jackson2.CasJackson2Module","org.springframework.security.web.jackson2.WebJackson2Module","org.springframework.security.web.server.jackson2.WebServerJackson2Module") @AT@ 2560 @LENGTH@ 243
------UPD MethodInvocation@@Arrays.asList("org.springframework.security.jackson2.CoreJackson2Module","org.springframework.security.cas.jackson2.CasJackson2Module","org.springframework.security.web.jackson2.WebJackson2Module") @TO@ Arrays.asList("org.springframework.security.jackson2.CoreJackson2Module","org.springframework.security.cas.jackson2.CasJackson2Module","org.springframework.security.web.jackson2.WebJackson2Module","org.springframework.security.web.server.jackson2.WebServerJackson2Module") @AT@ 2592 @LENGTH@ 211
---------UPD SimpleName@@MethodName:asList:["org.springframework.security.jackson2.CoreJackson2Module", "org.springframework.security.cas.jackson2.CasJackson2Module", "org.springframework.security.web.jackson2.WebJackson2Module"] @TO@ MethodName:asList:["org.springframework.security.jackson2.CoreJackson2Module", "org.springframework.security.cas.jackson2.CasJackson2Module", "org.springframework.security.web.jackson2.WebJackson2Module", "org.springframework.security.web.server.jackson2.WebServerJackson2Module"] @AT@ 2599 @LENGTH@ 204
------------INS StringLiteral@@"org.springframework.security.web.server.jackson2.WebServerJackson2Module" @TO@ SimpleName@@MethodName:asList:["org.springframework.security.jackson2.CoreJackson2Module", "org.springframework.security.cas.jackson2.CasJackson2Module", "org.springframework.security.web.jackson2.WebJackson2Module"] @AT@ 2866 @LENGTH@ 74


UPD SwitchStatement@@switch (command) {case grab:  ClassLoader classLoader=exchange.getContext().getApplicationContextClassLoader();String rawCoordinates=exchange.getIn().getBody(String.class);LinkedHashMap<String,Object> map=new LinkedHashMap<String,Object>(5);try {MavenCoordinates coordinates=MavenCoordinates.parseMavenCoordinates(rawCoordinates);map.put("classLoader",classLoader);map.put("group",coordinates.getGroupId());map.put("module",coordinates.getArtifactId());map.put("version",coordinates.getVersion());map.put("classifier",coordinates.getClassifier());Grape.grab(map);getEndpoint().getComponent().getPatchesRepository().install(rawCoordinates);} catch (IllegalArgumentException ex) {MavenCoordinates coordinates=MavenCoordinates.parseMavenCoordinates(getEndpoint().getDefaultCoordinates());map.put("classLoader",classLoader);map.put("group",coordinates.getGroupId());map.put("module",coordinates.getArtifactId());map.put("version",coordinates.getVersion());map.put("classifier",coordinates.getClassifier());Grape.grab(map);getEndpoint().getComponent().getPatchesRepository().install(getEndpoint().getDefaultCoordinates());}break;case listPatches:List<String> patches=getEndpoint().getComponent().getPatchesRepository().listPatches();exchange.getIn().setBody(patches);break;case clearPatches:getEndpoint().getComponent().getPatchesRepository().clear();break;} @TO@ switch (command) {case grab:  ClassLoader classLoader=exchange.getContext().getApplicationContextClassLoader();String rawCoordinates=exchange.getIn().getBody(String.class);LinkedHashMap<String,Object> map=new LinkedHashMap<String,Object>(5);try {MavenCoordinates coordinates=MavenCoordinates.parseMavenCoordinates(rawCoordinates);map.put("classLoader",classLoader);map.put("group",coordinates.getGroupId());map.put("module",coordinates.getArtifactId());map.put("version",coordinates.getVersion());map.put("classifier",coordinates.getClassifier());Grape.grab(map);getEndpoint().getComponent().getPatchesRepository().install(rawCoordinates);} catch (IllegalArgumentException ex) {MavenCoordinates coordinates=MavenCoordinates.parseMavenCoordinates(getEndpoint().getDefaultCoordinates());map.put("classLoader",classLoader);map.put("group",coordinates.getGroupId());map.put("module",coordinates.getArtifactId());map.put("version",coordinates.getVersion());map.put("classifier",coordinates.getClassifier());Grape.grab(map);getEndpoint().getComponent().getPatchesRepository().install(getEndpoint().getDefaultCoordinates());}break;case listPatches:List<String> patches=getEndpoint().getComponent().getPatchesRepository().listPatches();exchange.getIn().setBody(patches);break;case clearPatches:getEndpoint().getComponent().getPatchesRepository().clear();break;default :break;} @AT@ 1347 @LENGTH@ 1841
---INS SwitchCase@@default @TO@ SwitchStatement@@switch (command) {case grab:  ClassLoader classLoader=exchange.getContext().getApplicationContextClassLoader();String rawCoordinates=exchange.getIn().getBody(String.class);LinkedHashMap<String,Object> map=new LinkedHashMap<String,Object>(5);try {MavenCoordinates coordinates=MavenCoordinates.parseMavenCoordinates(rawCoordinates);map.put("classLoader",classLoader);map.put("group",coordinates.getGroupId());map.put("module",coordinates.getArtifactId());map.put("version",coordinates.getVersion());map.put("classifier",coordinates.getClassifier());Grape.grab(map);getEndpoint().getComponent().getPatchesRepository().install(rawCoordinates);} catch (IllegalArgumentException ex) {MavenCoordinates coordinates=MavenCoordinates.parseMavenCoordinates(getEndpoint().getDefaultCoordinates());map.put("classLoader",classLoader);map.put("group",coordinates.getGroupId());map.put("module",coordinates.getArtifactId());map.put("version",coordinates.getVersion());map.put("classifier",coordinates.getClassifier());Grape.grab(map);getEndpoint().getComponent().getPatchesRepository().install(getEndpoint().getDefaultCoordinates());}break;case listPatches:List<String> patches=getEndpoint().getComponent().getPatchesRepository().listPatches();exchange.getIn().setBody(patches);break;case clearPatches:getEndpoint().getComponent().getPatchesRepository().clear();break;} @AT@ 3200 @LENGTH@ 8
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (command) {case grab:  ClassLoader classLoader=exchange.getContext().getApplicationContextClassLoader();String rawCoordinates=exchange.getIn().getBody(String.class);LinkedHashMap<String,Object> map=new LinkedHashMap<String,Object>(5);try {MavenCoordinates coordinates=MavenCoordinates.parseMavenCoordinates(rawCoordinates);map.put("classLoader",classLoader);map.put("group",coordinates.getGroupId());map.put("module",coordinates.getArtifactId());map.put("version",coordinates.getVersion());map.put("classifier",coordinates.getClassifier());Grape.grab(map);getEndpoint().getComponent().getPatchesRepository().install(rawCoordinates);} catch (IllegalArgumentException ex) {MavenCoordinates coordinates=MavenCoordinates.parseMavenCoordinates(getEndpoint().getDefaultCoordinates());map.put("classLoader",classLoader);map.put("group",coordinates.getGroupId());map.put("module",coordinates.getArtifactId());map.put("version",coordinates.getVersion());map.put("classifier",coordinates.getClassifier());Grape.grab(map);getEndpoint().getComponent().getPatchesRepository().install(getEndpoint().getDefaultCoordinates());}break;case listPatches:List<String> patches=getEndpoint().getComponent().getPatchesRepository().listPatches();exchange.getIn().setBody(patches);break;case clearPatches:getEndpoint().getComponent().getPatchesRepository().clear();break;} @AT@ 3221 @LENGTH@ 6


UPD TypeDeclaration@@[protected, static, abstract]TemplateConsumer, DefaultConsumer @TO@ [protected, abstract, static]TemplateConsumer, DefaultConsumer @AT@ 94455 @LENGTH@ 302
---DEL Modifier@@abstract @AT@ 94472 @LENGTH@ 8
---INS Modifier@@abstract @TO@ TypeDeclaration@@[protected, static, abstract]TemplateConsumer, DefaultConsumer @AT@ 94491 @LENGTH@ 8


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1430 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1430 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1437 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1445 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1475 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1482 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"")) @AT@ 12382 @LENGTH@ 244
---UPD MethodInvocation@@assertTrue(json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"")) @TO@ assertTrue(json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"")) @AT@ 12382 @LENGTH@ 243
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"")] @TO@ MethodName:assertTrue:[json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"")] @AT@ 12382 @LENGTH@ 243
---------UPD MethodInvocation@@json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"") @TO@ json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"") @AT@ 12393 @LENGTH@ 231
------------UPD SimpleName@@MethodName:contains:["\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\""] @TO@ MethodName:contains:["\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\""] @AT@ 12398 @LENGTH@ 226
---------------UPD InfixExpression@@"\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"" @TO@ "\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"" @AT@ 12407 @LENGTH@ 216
------------------UPD StringLiteral@@"\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," @TO@ "\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," @AT@ 12407 @LENGTH@ 91


UPD MethodDeclaration@@public, voidMethodName:NodeManagerFactory, Driver driver, Class<?>... initialPersistentClasses,  @TO@ public, voidMethodName:NodeManagerFactory, Driver driver, Collection<Class<?>> initialPersistentClasses,  @AT@ 2489 @LENGTH@ 247
---UPD ExpressionStatement@@Assignment:this.initialPersistentClasses=new HashSet<>() @TO@ Assignment:this.initialPersistentClasses=new HashSet<>(initialPersistentClasses) @AT@ 2597 @LENGTH@ 48
------UPD Assignment@@this.initialPersistentClasses=new HashSet<>() @TO@ this.initialPersistentClasses=new HashSet<>(initialPersistentClasses) @AT@ 2597 @LENGTH@ 47
---------UPD ClassInstanceCreation@@HashSet<>[] @TO@ HashSet<>[initialPersistentClasses] @AT@ 2629 @LENGTH@ 15
------------INS SimpleName@@initialPersistentClasses @TO@ ClassInstanceCreation@@HashSet<>[] @AT@ 2898 @LENGTH@ 24
---DEL ExpressionStatement@@MethodInvocation:Arrays.stream(initialPersistentClasses).forEach(this.initialPersistentClasses::add) @AT@ 2649 @LENGTH@ 84
------DEL MethodInvocation@@Arrays.stream(initialPersistentClasses).forEach(this.initialPersistentClasses::add) @AT@ 2649 @LENGTH@ 83
---------DEL MethodInvocation@@MethodName:stream:[initialPersistentClasses] @AT@ 2649 @LENGTH@ 39
------------DEL SimpleName@@initialPersistentClasses @AT@ 2663 @LENGTH@ 24
---------DEL SimpleName@@Name:Arrays @AT@ 2649 @LENGTH@ 6
---------DEL SimpleName@@MethodName:forEach:[this.initialPersistentClasses::add] @AT@ 2689 @LENGTH@ 43
---INS SingleVariableDeclaration@@Collection<Class<?>> initialPersistentClasses @TO@ MethodDeclaration@@public, voidMethodName:NodeManagerFactory, Driver driver, Class<?>... initialPersistentClasses,  @AT@ 2777 @LENGTH@ 45
------INS ParameterizedType@@Collection<Class<?>> @TO@ SingleVariableDeclaration@@Collection<Class<?>> initialPersistentClasses @AT@ 2777 @LENGTH@ 20
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Class<?>> @AT@ 2777 @LENGTH@ 10
---------INS ParameterizedType@@Class<?> @TO@ ParameterizedType@@Collection<Class<?>> @AT@ 2788 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 2788 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 2794 @LENGTH@ 1
------INS SimpleName@@initialPersistentClasses @TO@ SingleVariableDeclaration@@Collection<Class<?>> initialPersistentClasses @AT@ 2798 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(configuration,options) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 2601 @LENGTH@ 59
---UPD MethodInvocation@@IntrospectionSupport.setProperties(configuration,options) @TO@ PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 2601 @LENGTH@ 58
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 2601 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[configuration, options] @TO@ MethodName:bindProperties:[context, configuration, options] @AT@ 2622 @LENGTH@ 37
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:setProperties:[configuration, options] @AT@ 2641 @LENGTH@ 7


UPD FieldDeclaration@@private, Runnable, [closeTask=null] @TO@ private, Runnable, [closeTask] @AT@ 1364 @LENGTH@ 34
---UPD VariableDeclarationFragment@@closeTask=null @TO@ closeTask @AT@ 1381 @LENGTH@ 16
------DEL NullLiteral@@null @AT@ 1393 @LENGTH@ 4


INS FieldDeclaration@@private, static, final, String, [HSTS_HEADER_NAME="Strict-Transport-Security"] @TO@ TypeDeclaration@@[public]HstsHeaderWriterTests,  @AT@ 1194 @LENGTH@ 75
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [HSTS_HEADER_NAME="Strict-Transport-Security"] @AT@ 1194 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [HSTS_HEADER_NAME="Strict-Transport-Security"] @AT@ 1202 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [HSTS_HEADER_NAME="Strict-Transport-Security"] @AT@ 1209 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [HSTS_HEADER_NAME="Strict-Transport-Security"] @AT@ 1215 @LENGTH@ 6
---INS VariableDeclarationFragment@@HSTS_HEADER_NAME="Strict-Transport-Security" @TO@ FieldDeclaration@@private, static, final, String, [HSTS_HEADER_NAME="Strict-Transport-Security"] @AT@ 1222 @LENGTH@ 46
------INS SimpleName@@HSTS_HEADER_NAME @TO@ VariableDeclarationFragment@@HSTS_HEADER_NAME="Strict-Transport-Security" @AT@ 1222 @LENGTH@ 16
------INS StringLiteral@@"Strict-Transport-Security" @TO@ VariableDeclarationFragment@@HSTS_HEADER_NAME="Strict-Transport-Security" @AT@ 1241 @LENGTH@ 27


UPD TryStatement@@try {  zkClient.create().creatingParentsIfNeeded().withMode(CreateMode.PERSISTENT).forPath(ZooKeeperHiveHelper.ZOOKEEPER_PATH_SEPARATOR + rootNamespace);  LOG.info("Created the root name space: " + rootNamespace + " on ZooKeeper for HiveServer2");} catch (KeeperException e) {  if (e.code() != KeeperException.Code.NODEEXISTS) {    LOG.error("Unable to create HiveServer2 namespace: " + rootNamespace + " on ZooKeeper",e);    throw e;  }} @TO@ try {  zkClient.create().creatingParentsIfNeeded().withMode(CreateMode.PERSISTENT).forPath(ZooKeeperHiveHelper.ZOOKEEPER_PATH_SEPARATOR + rootNamespace);  LOG.info("Created the root name space: " + rootNamespace + " on ZooKeeper");} catch (KeeperException e) {  if (e.code() != KeeperException.Code.NODEEXISTS) {    LOG.error("Unable to create namespace: " + rootNamespace + " on ZooKeeper",e);    throw e;  }} @AT@ 7384 @LENGTH@ 546
---UPD ExpressionStatement@@MethodInvocation:LOG.info("Created the root name space: " + rootNamespace + " on ZooKeeper for HiveServer2") @TO@ MethodInvocation:LOG.info("Created the root name space: " + rootNamespace + " on ZooKeeper") @AT@ 7604 @LENGTH@ 92
------UPD MethodInvocation@@LOG.info("Created the root name space: " + rootNamespace + " on ZooKeeper for HiveServer2") @TO@ LOG.info("Created the root name space: " + rootNamespace + " on ZooKeeper") @AT@ 7604 @LENGTH@ 91
---------UPD SimpleName@@MethodName:info:["Created the root name space: " + rootNamespace + " on ZooKeeper for HiveServer2"] @TO@ MethodName:info:["Created the root name space: " + rootNamespace + " on ZooKeeper"] @AT@ 7608 @LENGTH@ 87
------------UPD InfixExpression@@"Created the root name space: " + rootNamespace + " on ZooKeeper for HiveServer2" @TO@ "Created the root name space: " + rootNamespace + " on ZooKeeper" @AT@ 7613 @LENGTH@ 81
---------------UPD StringLiteral@@" on ZooKeeper for HiveServer2" @TO@ " on ZooKeeper" @AT@ 7663 @LENGTH@ 31
---UPD CatchClause@@catch (KeeperException e) {  if (e.code() != KeeperException.Code.NODEEXISTS) {    LOG.error("Unable to create HiveServer2 namespace: " + rootNamespace + " on ZooKeeper",e);    throw e;  }} @TO@ catch (KeeperException e) {  if (e.code() != KeeperException.Code.NODEEXISTS) {    LOG.error("Unable to create namespace: " + rootNamespace + " on ZooKeeper",e);    throw e;  }} @AT@ 7705 @LENGTH@ 225
------UPD IfStatement@@if (e.code() != KeeperException.Code.NODEEXISTS) {  LOG.error("Unable to create HiveServer2 namespace: " + rootNamespace + " on ZooKeeper",e);  throw e;} @TO@ if (e.code() != KeeperException.Code.NODEEXISTS) {  LOG.error("Unable to create namespace: " + rootNamespace + " on ZooKeeper",e);  throw e;} @AT@ 7741 @LENGTH@ 181
---------UPD Block@@ThenBody:{  LOG.error("Unable to create HiveServer2 namespace: " + rootNamespace + " on ZooKeeper",e);  throw e;} @TO@ ThenBody:{  LOG.error("Unable to create namespace: " + rootNamespace + " on ZooKeeper",e);  throw e;} @AT@ 7790 @LENGTH@ 132
------------UPD ExpressionStatement@@MethodInvocation:LOG.error("Unable to create HiveServer2 namespace: " + rootNamespace + " on ZooKeeper",e) @TO@ MethodInvocation:LOG.error("Unable to create namespace: " + rootNamespace + " on ZooKeeper",e) @AT@ 7802 @LENGTH@ 91
---------------UPD MethodInvocation@@LOG.error("Unable to create HiveServer2 namespace: " + rootNamespace + " on ZooKeeper",e) @TO@ LOG.error("Unable to create namespace: " + rootNamespace + " on ZooKeeper",e) @AT@ 7802 @LENGTH@ 90
------------------UPD SimpleName@@MethodName:error:["Unable to create HiveServer2 namespace: " + rootNamespace + " on ZooKeeper", e] @TO@ MethodName:error:["Unable to create namespace: " + rootNamespace + " on ZooKeeper", e] @AT@ 7806 @LENGTH@ 86
---------------------UPD InfixExpression@@"Unable to create HiveServer2 namespace: " + rootNamespace + " on ZooKeeper" @TO@ "Unable to create namespace: " + rootNamespace + " on ZooKeeper" @AT@ 7812 @LENGTH@ 76
------------------------UPD StringLiteral@@"Unable to create HiveServer2 namespace: " @TO@ "Unable to create namespace: " @AT@ 7812 @LENGTH@ 42


UPD FieldDeclaration@@protected, static, final, String, [DEFAULT_SECURE_SOCKET_PROTOCOL="TLS"] @TO@ protected, static, final, String, [DEFAULT_SECURE_SOCKET_PROTOCOL="TLSv1.2"] @AT@ 1557 @LENGTH@ 69
---UPD VariableDeclarationFragment@@DEFAULT_SECURE_SOCKET_PROTOCOL="TLS" @TO@ DEFAULT_SECURE_SOCKET_PROTOCOL="TLSv1.2" @AT@ 1587 @LENGTH@ 38
------UPD StringLiteral@@"TLS" @TO@ "TLSv1.2" @AT@ 1620 @LENGTH@ 5


INS IfStatement@@if (getProperties().executionTimeoutEnabled().get() && getProperties().fallbackEnabled().get() && isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT) {  LOG.debug("Exiting run command due to a hystrix execution timeout in processing exchange: {}",exchange);  return null;} @TO@ MethodDeclaration@@protected, Message, MethodName:run, Exception,  @AT@ 5720 @LENGTH@ 336
---INS InfixExpression@@getProperties().executionTimeoutEnabled().get() && getProperties().fallbackEnabled().get() && isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT @TO@ IfStatement@@if (getProperties().executionTimeoutEnabled().get() && getProperties().fallbackEnabled().get() && isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT) {  LOG.debug("Exiting run command due to a hystrix execution timeout in processing exchange: {}",exchange);  return null;} @AT@ 5723 @LENGTH@ 177
------INS MethodInvocation@@getProperties().executionTimeoutEnabled().get() @TO@ InfixExpression@@getProperties().executionTimeoutEnabled().get() && getProperties().fallbackEnabled().get() && isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT @AT@ 5723 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:executionTimeoutEnabled:[] @TO@ MethodInvocation@@getProperties().executionTimeoutEnabled().get() @AT@ 5723 @LENGTH@ 41
---------INS MethodInvocation@@MethodName:getProperties:[] @TO@ MethodInvocation@@getProperties().executionTimeoutEnabled().get() @AT@ 5723 @LENGTH@ 15
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@getProperties().executionTimeoutEnabled().get() @AT@ 5765 @LENGTH@ 5
------INS Operator@@&& @TO@ InfixExpression@@getProperties().executionTimeoutEnabled().get() && getProperties().fallbackEnabled().get() && isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT @AT@ 5770 @LENGTH@ 2
------INS MethodInvocation@@getProperties().fallbackEnabled().get() @TO@ InfixExpression@@getProperties().executionTimeoutEnabled().get() && getProperties().fallbackEnabled().get() && isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT @AT@ 5790 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:fallbackEnabled:[] @TO@ MethodInvocation@@getProperties().fallbackEnabled().get() @AT@ 5790 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:getProperties:[] @TO@ MethodInvocation@@getProperties().fallbackEnabled().get() @AT@ 5790 @LENGTH@ 15
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@getProperties().fallbackEnabled().get() @AT@ 5824 @LENGTH@ 5
------INS InfixExpression@@isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT @TO@ InfixExpression@@getProperties().executionTimeoutEnabled().get() && getProperties().fallbackEnabled().get() && isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT @AT@ 5849 @LENGTH@ 51
---------INS MethodInvocation@@isCommandTimedOut.get() @TO@ InfixExpression@@isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT @AT@ 5849 @LENGTH@ 23
------------INS SimpleName@@Name:isCommandTimedOut @TO@ MethodInvocation@@isCommandTimedOut.get() @AT@ 5849 @LENGTH@ 17
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@isCommandTimedOut.get() @AT@ 5867 @LENGTH@ 5
---------INS Operator@@== @TO@ InfixExpression@@isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT @AT@ 5872 @LENGTH@ 2
---------INS QualifiedName@@TimedOutStatus.TIMED_OUT @TO@ InfixExpression@@isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT @AT@ 5876 @LENGTH@ 24
------------INS SimpleName@@TimedOutStatus @TO@ QualifiedName@@TimedOutStatus.TIMED_OUT @AT@ 5876 @LENGTH@ 14
------------INS SimpleName@@TIMED_OUT @TO@ QualifiedName@@TimedOutStatus.TIMED_OUT @AT@ 5891 @LENGTH@ 9
---INS Block@@ThenBody:{  LOG.debug("Exiting run command due to a hystrix execution timeout in processing exchange: {}",exchange);  return null;} @TO@ IfStatement@@if (getProperties().executionTimeoutEnabled().get() && getProperties().fallbackEnabled().get() && isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT) {  LOG.debug("Exiting run command due to a hystrix execution timeout in processing exchange: {}",exchange);  return null;} @AT@ 5902 @LENGTH@ 154
------INS ExpressionStatement@@MethodInvocation:LOG.debug("Exiting run command due to a hystrix execution timeout in processing exchange: {}",exchange) @TO@ Block@@ThenBody:{  LOG.debug("Exiting run command due to a hystrix execution timeout in processing exchange: {}",exchange);  return null;} @AT@ 5916 @LENGTH@ 105
---------INS MethodInvocation@@LOG.debug("Exiting run command due to a hystrix execution timeout in processing exchange: {}",exchange) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Exiting run command due to a hystrix execution timeout in processing exchange: {}",exchange) @AT@ 5916 @LENGTH@ 104
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Exiting run command due to a hystrix execution timeout in processing exchange: {}",exchange) @AT@ 5916 @LENGTH@ 3
------------INS SimpleName@@MethodName:debug:["Exiting run command due to a hystrix execution timeout in processing exchange: {}", exchange] @TO@ MethodInvocation@@LOG.debug("Exiting run command due to a hystrix execution timeout in processing exchange: {}",exchange) @AT@ 5920 @LENGTH@ 100
---------------INS StringLiteral@@"Exiting run command due to a hystrix execution timeout in processing exchange: {}" @TO@ SimpleName@@MethodName:debug:["Exiting run command due to a hystrix execution timeout in processing exchange: {}", exchange] @AT@ 5926 @LENGTH@ 83
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:debug:["Exiting run command due to a hystrix execution timeout in processing exchange: {}", exchange] @AT@ 6011 @LENGTH@ 8
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  LOG.debug("Exiting run command due to a hystrix execution timeout in processing exchange: {}",exchange);  return null;} @AT@ 6034 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 6041 @LENGTH@ 4


UPD FieldDeclaration@@private, static, final, Logger, [logger=LoggerFactory.getLogger(AddIssueRoute.class)] @TO@ private, static, final, Logger, [LOG=LoggerFactory.getLogger(AddIssueRoute.class)] @AT@ 1395 @LENGTH@ 82
---UPD VariableDeclarationFragment@@logger=LoggerFactory.getLogger(AddIssueRoute.class) @TO@ LOG=LoggerFactory.getLogger(AddIssueRoute.class) @AT@ 1423 @LENGTH@ 53
------UPD SimpleName@@logger @TO@ LOG @AT@ 1423 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @TO@ TypeDeclaration@@[public]Olingo4ComponentTest, AbstractOlingo4TestSupport @AT@ 21497 @LENGTH@ 909
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 21497 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 21504 @LENGTH@ 4
---INS SimpleName@@MethodName:testConsumerReadClientValuesSplitResults @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 21509 @LENGTH@ 40
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 21559 @LENGTH@ 9
---INS VariableDeclarationStatement@@final Map<String,Object> headers=new HashMap<>(); @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 21579 @LENGTH@ 52
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Map<String,Object> headers=new HashMap<>(); @AT@ 21579 @LENGTH@ 5
------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@final Map<String,Object> headers=new HashMap<>(); @AT@ 21585 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 21585 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 21589 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 21597 @LENGTH@ 6
------INS VariableDeclarationFragment@@headers=new HashMap<>() @TO@ VariableDeclarationStatement@@final Map<String,Object> headers=new HashMap<>(); @AT@ 21605 @LENGTH@ 25
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=new HashMap<>() @AT@ 21605 @LENGTH@ 7
---------INS ClassInstanceCreation@@HashMap<>[] @TO@ VariableDeclarationFragment@@headers=new HashMap<>() @AT@ 21615 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 21615 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 21619 @LENGTH@ 9
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 21619 @LENGTH@ 7
---INS VariableDeclarationStatement@@String endpoint="olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true"; @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 21640 @LENGTH@ 100
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String endpoint="olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true"; @AT@ 21640 @LENGTH@ 6
------INS VariableDeclarationFragment@@endpoint="olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true" @TO@ VariableDeclarationStatement@@String endpoint="olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true"; @AT@ 21647 @LENGTH@ 92
---------INS SimpleName@@endpoint @TO@ VariableDeclarationFragment@@endpoint="olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true" @AT@ 21647 @LENGTH@ 8
---------INS StringLiteral@@"olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true" @TO@ VariableDeclarationFragment@@endpoint="olingo4://read/People('russellwhyte')/FavoriteFeature?consumer.splitResult=true" @AT@ 21658 @LENGTH@ 81
---INS VariableDeclarationStatement@@MockEndpoint mockEndpoint=getMockEndpoint("mock:consumer-splitresult-value"); @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 21750 @LENGTH@ 79
------INS SimpleType@@MockEndpoint @TO@ VariableDeclarationStatement@@MockEndpoint mockEndpoint=getMockEndpoint("mock:consumer-splitresult-value"); @AT@ 21750 @LENGTH@ 12
------INS VariableDeclarationFragment@@mockEndpoint=getMockEndpoint("mock:consumer-splitresult-value") @TO@ VariableDeclarationStatement@@MockEndpoint mockEndpoint=getMockEndpoint("mock:consumer-splitresult-value"); @AT@ 21763 @LENGTH@ 65
---------INS SimpleName@@mockEndpoint @TO@ VariableDeclarationFragment@@mockEndpoint=getMockEndpoint("mock:consumer-splitresult-value") @AT@ 21763 @LENGTH@ 12
---------INS MethodInvocation@@getMockEndpoint("mock:consumer-splitresult-value") @TO@ VariableDeclarationFragment@@mockEndpoint=getMockEndpoint("mock:consumer-splitresult-value") @AT@ 21778 @LENGTH@ 50
------------INS SimpleName@@MethodName:getMockEndpoint:["mock:consumer-splitresult-value"] @TO@ MethodInvocation@@getMockEndpoint("mock:consumer-splitresult-value") @AT@ 21778 @LENGTH@ 50
---------------INS StringLiteral@@"mock:consumer-splitresult-value" @TO@ SimpleName@@MethodName:getMockEndpoint:["mock:consumer-splitresult-value"] @AT@ 21794 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:mockEndpoint.expectedMinimumMessageCount(1) @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 21838 @LENGTH@ 44
------INS MethodInvocation@@mockEndpoint.expectedMinimumMessageCount(1) @TO@ ExpressionStatement@@MethodInvocation:mockEndpoint.expectedMinimumMessageCount(1) @AT@ 21838 @LENGTH@ 43
---------INS SimpleName@@Name:mockEndpoint @TO@ MethodInvocation@@mockEndpoint.expectedMinimumMessageCount(1) @AT@ 21838 @LENGTH@ 12
---------INS SimpleName@@MethodName:expectedMinimumMessageCount:[1] @TO@ MethodInvocation@@mockEndpoint.expectedMinimumMessageCount(1) @AT@ 21851 @LENGTH@ 30
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedMinimumMessageCount:[1] @AT@ 21879 @LENGTH@ 1
---INS VariableDeclarationStatement@@final ClientValue resultValue=requestBodyAndHeaders(endpoint,null,headers); @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 21892 @LENGTH@ 79
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ClientValue resultValue=requestBodyAndHeaders(endpoint,null,headers); @AT@ 21892 @LENGTH@ 5
------INS SimpleType@@ClientValue @TO@ VariableDeclarationStatement@@final ClientValue resultValue=requestBodyAndHeaders(endpoint,null,headers); @AT@ 21898 @LENGTH@ 11
------INS VariableDeclarationFragment@@resultValue=requestBodyAndHeaders(endpoint,null,headers) @TO@ VariableDeclarationStatement@@final ClientValue resultValue=requestBodyAndHeaders(endpoint,null,headers); @AT@ 21910 @LENGTH@ 60
---------INS SimpleName@@resultValue @TO@ VariableDeclarationFragment@@resultValue=requestBodyAndHeaders(endpoint,null,headers) @AT@ 21910 @LENGTH@ 11
---------INS MethodInvocation@@requestBodyAndHeaders(endpoint,null,headers) @TO@ VariableDeclarationFragment@@resultValue=requestBodyAndHeaders(endpoint,null,headers) @AT@ 21924 @LENGTH@ 46
------------INS SimpleName@@MethodName:requestBodyAndHeaders:[endpoint, null, headers] @TO@ MethodInvocation@@requestBodyAndHeaders(endpoint,null,headers) @AT@ 21924 @LENGTH@ 46
---------------INS SimpleName@@endpoint @TO@ SimpleName@@MethodName:requestBodyAndHeaders:[endpoint, null, headers] @AT@ 21946 @LENGTH@ 8
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:requestBodyAndHeaders:[endpoint, null, headers] @AT@ 21956 @LENGTH@ 4
---------------INS SimpleName@@headers @TO@ SimpleName@@MethodName:requestBodyAndHeaders:[endpoint, null, headers] @AT@ 21962 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertIsInstanceOf(ClientValue.class,resultValue) @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 21980 @LENGTH@ 51
------INS MethodInvocation@@assertIsInstanceOf(ClientValue.class,resultValue) @TO@ ExpressionStatement@@MethodInvocation:assertIsInstanceOf(ClientValue.class,resultValue) @AT@ 21980 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertIsInstanceOf:[ClientValue.class, resultValue] @TO@ MethodInvocation@@assertIsInstanceOf(ClientValue.class,resultValue) @AT@ 21980 @LENGTH@ 50
------------INS TypeLiteral@@ClientValue.class @TO@ SimpleName@@MethodName:assertIsInstanceOf:[ClientValue.class, resultValue] @AT@ 21999 @LENGTH@ 17
------------INS SimpleName@@resultValue @TO@ SimpleName@@MethodName:assertIsInstanceOf:[ClientValue.class, resultValue] @AT@ 22018 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:mockEndpoint.assertIsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 22041 @LENGTH@ 33
------INS MethodInvocation@@mockEndpoint.assertIsSatisfied() @TO@ ExpressionStatement@@MethodInvocation:mockEndpoint.assertIsSatisfied() @AT@ 22041 @LENGTH@ 32
---------INS SimpleName@@Name:mockEndpoint @TO@ MethodInvocation@@mockEndpoint.assertIsSatisfied() @AT@ 22041 @LENGTH@ 12
---------INS SimpleName@@MethodName:assertIsSatisfied:[] @TO@ MethodInvocation@@mockEndpoint.assertIsSatisfied() @AT@ 22054 @LENGTH@ 19
---INS VariableDeclarationStatement@@Object body=mockEndpoint.getExchanges().get(0).getIn().getBody(); @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 22153 @LENGTH@ 67
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object body=mockEndpoint.getExchanges().get(0).getIn().getBody(); @AT@ 22153 @LENGTH@ 6
------INS VariableDeclarationFragment@@body=mockEndpoint.getExchanges().get(0).getIn().getBody() @TO@ VariableDeclarationStatement@@Object body=mockEndpoint.getExchanges().get(0).getIn().getBody(); @AT@ 22160 @LENGTH@ 59
---------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body=mockEndpoint.getExchanges().get(0).getIn().getBody() @AT@ 22160 @LENGTH@ 4
---------INS MethodInvocation@@mockEndpoint.getExchanges().get(0).getIn().getBody() @TO@ VariableDeclarationFragment@@body=mockEndpoint.getExchanges().get(0).getIn().getBody() @AT@ 22167 @LENGTH@ 52
------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@mockEndpoint.getExchanges().get(0).getIn().getBody() @AT@ 22167 @LENGTH@ 42
------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@mockEndpoint.getExchanges().get(0).getIn().getBody() @AT@ 22167 @LENGTH@ 34
---------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 22199 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getExchanges:[] @TO@ MethodInvocation@@mockEndpoint.getExchanges().get(0).getIn().getBody() @AT@ 22167 @LENGTH@ 27
------------INS SimpleName@@Name:mockEndpoint @TO@ MethodInvocation@@mockEndpoint.getExchanges().get(0).getIn().getBody() @AT@ 22167 @LENGTH@ 12
------------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@mockEndpoint.getExchanges().get(0).getIn().getBody() @AT@ 22210 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertIsInstanceOf(ClientPrimitiveValue.class,body) @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 22229 @LENGTH@ 53
------INS MethodInvocation@@assertIsInstanceOf(ClientPrimitiveValue.class,body) @TO@ ExpressionStatement@@MethodInvocation:assertIsInstanceOf(ClientPrimitiveValue.class,body) @AT@ 22229 @LENGTH@ 52
---------INS SimpleName@@MethodName:assertIsInstanceOf:[ClientPrimitiveValue.class, body] @TO@ MethodInvocation@@assertIsInstanceOf(ClientPrimitiveValue.class,body) @AT@ 22229 @LENGTH@ 52
------------INS TypeLiteral@@ClientPrimitiveValue.class @TO@ SimpleName@@MethodName:assertIsInstanceOf:[ClientPrimitiveValue.class, body] @AT@ 22248 @LENGTH@ 26
------------INS SimpleName@@body @TO@ SimpleName@@MethodName:assertIsInstanceOf:[ClientPrimitiveValue.class, body] @AT@ 22276 @LENGTH@ 4
---INS VariableDeclarationStatement@@ClientPrimitiveValue value=(ClientPrimitiveValue)body; @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 22291 @LENGTH@ 57
------INS SimpleType@@ClientPrimitiveValue @TO@ VariableDeclarationStatement@@ClientPrimitiveValue value=(ClientPrimitiveValue)body; @AT@ 22291 @LENGTH@ 20
------INS VariableDeclarationFragment@@value=(ClientPrimitiveValue)body @TO@ VariableDeclarationStatement@@ClientPrimitiveValue value=(ClientPrimitiveValue)body; @AT@ 22312 @LENGTH@ 35
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=(ClientPrimitiveValue)body @AT@ 22312 @LENGTH@ 5
---------INS CastExpression@@(ClientPrimitiveValue)body @TO@ VariableDeclarationFragment@@value=(ClientPrimitiveValue)body @AT@ 22320 @LENGTH@ 27
------------INS SimpleType@@ClientPrimitiveValue @TO@ CastExpression@@(ClientPrimitiveValue)body @AT@ 22321 @LENGTH@ 20
------------INS SimpleName@@body @TO@ CastExpression@@(ClientPrimitiveValue)body @AT@ 22343 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals("Feature1",value.toString()) @TO@ MethodDeclaration@@public, void, MethodName:testConsumerReadClientValuesSplitResults, Exception,  @AT@ 22357 @LENGTH@ 43
------INS MethodInvocation@@assertEquals("Feature1",value.toString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Feature1",value.toString()) @AT@ 22357 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertEquals:["Feature1", value.toString()] @TO@ MethodInvocation@@assertEquals("Feature1",value.toString()) @AT@ 22357 @LENGTH@ 42
------------INS StringLiteral@@"Feature1" @TO@ SimpleName@@MethodName:assertEquals:["Feature1", value.toString()] @AT@ 22370 @LENGTH@ 10
------------INS MethodInvocation@@value.toString() @TO@ SimpleName@@MethodName:assertEquals:["Feature1", value.toString()] @AT@ 22382 @LENGTH@ 16
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.toString() @AT@ 22382 @LENGTH@ 5
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@value.toString() @AT@ 22388 @LENGTH@ 10


INS MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterAfter, WebFilter webFilter, SecurityWebFiltersOrder order,  @TO@ TypeDeclaration@@[public]ServerHttpSecurity,  @AT@ 16920 @LENGTH@ 190
---INS Modifier@@public @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterAfter, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 16920 @LENGTH@ 6
---INS SimpleType@@ServerHttpSecurity @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterAfter, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 16927 @LENGTH@ 18
---INS SimpleName@@MethodName:addFilterAfter @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterAfter, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 16946 @LENGTH@ 14
---INS SingleVariableDeclaration@@WebFilter webFilter @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterAfter, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 16961 @LENGTH@ 19
------INS SimpleType@@WebFilter @TO@ SingleVariableDeclaration@@WebFilter webFilter @AT@ 16961 @LENGTH@ 9
------INS SimpleName@@webFilter @TO@ SingleVariableDeclaration@@WebFilter webFilter @AT@ 16971 @LENGTH@ 9
---INS SingleVariableDeclaration@@SecurityWebFiltersOrder order @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterAfter, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 16982 @LENGTH@ 29
------INS SimpleType@@SecurityWebFiltersOrder @TO@ SingleVariableDeclaration@@SecurityWebFiltersOrder order @AT@ 16982 @LENGTH@ 23
------INS SimpleName@@order @TO@ SingleVariableDeclaration@@SecurityWebFiltersOrder order @AT@ 17006 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:this.webFilters.add(new OrderedWebFilter(webFilter,order.getOrder() + 1)) @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterAfter, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 17017 @LENGTH@ 75
------INS MethodInvocation@@this.webFilters.add(new OrderedWebFilter(webFilter,order.getOrder() + 1)) @TO@ ExpressionStatement@@MethodInvocation:this.webFilters.add(new OrderedWebFilter(webFilter,order.getOrder() + 1)) @AT@ 17017 @LENGTH@ 74
---------INS FieldAccess@@this.webFilters @TO@ MethodInvocation@@this.webFilters.add(new OrderedWebFilter(webFilter,order.getOrder() + 1)) @AT@ 17017 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.webFilters @AT@ 17017 @LENGTH@ 4
------------INS SimpleName@@webFilters @TO@ FieldAccess@@this.webFilters @AT@ 17022 @LENGTH@ 10
---------INS SimpleName@@MethodName:add:[new OrderedWebFilter(webFilter,order.getOrder() + 1)] @TO@ MethodInvocation@@this.webFilters.add(new OrderedWebFilter(webFilter,order.getOrder() + 1)) @AT@ 17033 @LENGTH@ 58
------------INS ClassInstanceCreation@@OrderedWebFilter[webFilter, order.getOrder() + 1] @TO@ SimpleName@@MethodName:add:[new OrderedWebFilter(webFilter,order.getOrder() + 1)] @AT@ 17037 @LENGTH@ 53
---------------INS New@@new @TO@ ClassInstanceCreation@@OrderedWebFilter[webFilter, order.getOrder() + 1] @AT@ 17037 @LENGTH@ 3
---------------INS SimpleType@@OrderedWebFilter @TO@ ClassInstanceCreation@@OrderedWebFilter[webFilter, order.getOrder() + 1] @AT@ 17041 @LENGTH@ 16
---------------INS SimpleName@@webFilter @TO@ ClassInstanceCreation@@OrderedWebFilter[webFilter, order.getOrder() + 1] @AT@ 17058 @LENGTH@ 9
---------------INS InfixExpression@@order.getOrder() + 1 @TO@ ClassInstanceCreation@@OrderedWebFilter[webFilter, order.getOrder() + 1] @AT@ 17069 @LENGTH@ 20
------------------INS MethodInvocation@@order.getOrder() @TO@ InfixExpression@@order.getOrder() + 1 @AT@ 17069 @LENGTH@ 16
---------------------INS SimpleName@@Name:order @TO@ MethodInvocation@@order.getOrder() @AT@ 17069 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getOrder:[] @TO@ MethodInvocation@@order.getOrder() @AT@ 17075 @LENGTH@ 10
------------------INS Operator@@+ @TO@ InfixExpression@@order.getOrder() + 1 @AT@ 17085 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@order.getOrder() + 1 @AT@ 17088 @LENGTH@ 1
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, ServerHttpSecurity, MethodName:addFilterAfter, WebFilter webFilter, SecurityWebFiltersOrder order,  @AT@ 17095 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 17102 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:properties.get(0) @TO@ ConditionalExpression:properties.isEmpty() ? null : properties.get(0) @AT@ 5006 @LENGTH@ 25
---INS ConditionalExpression@@properties.isEmpty() ? null : properties.get(0) @TO@ ReturnStatement@@MethodInvocation:properties.get(0) @AT@ 5043 @LENGTH@ 47
------MOV MethodInvocation@@properties.get(0) @TO@ ConditionalExpression@@properties.isEmpty() ? null : properties.get(0) @AT@ 5013 @LENGTH@ 17
------INS MethodInvocation@@properties.isEmpty() @TO@ ConditionalExpression@@properties.isEmpty() ? null : properties.get(0) @AT@ 5043 @LENGTH@ 20
---------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.isEmpty() @AT@ 5043 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@properties.isEmpty() @AT@ 5054 @LENGTH@ 9
------INS NullLiteral@@null @TO@ ConditionalExpression@@properties.isEmpty() ? null : properties.get(0) @AT@ 5066 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(page,"Page must must not be null!") @TO@ MethodInvocation:Assert.notNull(page,"Page must not be null!") @AT@ 6750 @LENGTH@ 52
---UPD MethodInvocation@@Assert.notNull(page,"Page must must not be null!") @TO@ Assert.notNull(page,"Page must not be null!") @AT@ 6750 @LENGTH@ 51
------UPD SimpleName@@MethodName:notNull:[page, "Page must must not be null!"] @TO@ MethodName:notNull:[page, "Page must not be null!"] @AT@ 6757 @LENGTH@ 44
---------UPD StringLiteral@@"Page must must not be null!" @TO@ "Page must not be null!" @AT@ 6771 @LENGTH@ 29


UPD MethodDeclaration@@public, HttpMethods, MethodName:enable, HttpMethod... methods,  @TO@ public, ConfigurableHttpMethods, MethodName:enable, HttpMethod... methods,  @AT@ 2935 @LENGTH@ 348
---UPD SimpleType@@HttpMethods @TO@ ConfigurableHttpMethods @AT@ 2942 @LENGTH@ 11


DEL IfStatement@@if (IBMJDK16) {  final String preSubMap="TransformedSortedMapTest.bulkTestSubMap.";  final String preTailMap="TransformedSortedMapTest.bulkTestTailMap.";  return new String[]{preSubMap + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSubMap + "bulkTestMapKeySet.testCollectionRemove",preSubMap + "bulkTestMapValues.testCollectionIteratorRemove",preTailMap + "testMapRemove",preTailMap + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTailMap + "bulkTestMapEntrySet.testCollectionRemoveAll",preTailMap + "bulkTestMapKeySet.testCollectionIteratorRemove",preTailMap + "bulkTestMapKeySet.testCollectionRemoveAll",preTailMap + "bulkTestMapValues.testCollectionClear",preTailMap + "bulkTestMapValues.testCollectionRemoveAll",preTailMap + "bulkTestMapValues.testCollectionRetainAll"};} @AT@ 1694 @LENGTH@ 1083
---DEL SimpleName@@IBMJDK16 @AT@ 1698 @LENGTH@ 8
---DEL Block@@ThenBody:{  final String preSubMap="TransformedSortedMapTest.bulkTestSubMap.";  final String preTailMap="TransformedSortedMapTest.bulkTestTailMap.";  return new String[]{preSubMap + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSubMap + "bulkTestMapKeySet.testCollectionRemove",preSubMap + "bulkTestMapValues.testCollectionIteratorRemove",preTailMap + "testMapRemove",preTailMap + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTailMap + "bulkTestMapEntrySet.testCollectionRemoveAll",preTailMap + "bulkTestMapKeySet.testCollectionIteratorRemove",preTailMap + "bulkTestMapKeySet.testCollectionRemoveAll",preTailMap + "bulkTestMapValues.testCollectionClear",preTailMap + "bulkTestMapValues.testCollectionRemoveAll",preTailMap + "bulkTestMapValues.testCollectionRetainAll"};} @AT@ 1708 @LENGTH@ 1069
------DEL VariableDeclarationStatement@@final String preSubMap="TransformedSortedMapTest.bulkTestSubMap."; @AT@ 1722 @LENGTH@ 68
---------DEL Modifier@@final @AT@ 1722 @LENGTH@ 5
---------DEL SimpleType@@String @AT@ 1728 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@preSubMap="TransformedSortedMapTest.bulkTestSubMap." @AT@ 1735 @LENGTH@ 54
------------DEL SimpleName@@preSubMap @AT@ 1735 @LENGTH@ 9
------------DEL StringLiteral@@"TransformedSortedMapTest.bulkTestSubMap." @AT@ 1747 @LENGTH@ 42
------DEL VariableDeclarationStatement@@final String preTailMap="TransformedSortedMapTest.bulkTestTailMap."; @AT@ 1803 @LENGTH@ 70
---------DEL Modifier@@final @AT@ 1803 @LENGTH@ 5
---------DEL SimpleType@@String @AT@ 1809 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@preTailMap="TransformedSortedMapTest.bulkTestTailMap." @AT@ 1816 @LENGTH@ 56
------------DEL SimpleName@@preTailMap @AT@ 1816 @LENGTH@ 10
------------DEL StringLiteral@@"TransformedSortedMapTest.bulkTestTailMap." @AT@ 1829 @LENGTH@ 43
------DEL ReturnStatement@@ArrayCreation:new String[]{preSubMap + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSubMap + "bulkTestMapKeySet.testCollectionRemove",preSubMap + "bulkTestMapValues.testCollectionIteratorRemove",preTailMap + "testMapRemove",preTailMap + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTailMap + "bulkTestMapEntrySet.testCollectionRemoveAll",preTailMap + "bulkTestMapKeySet.testCollectionIteratorRemove",preTailMap + "bulkTestMapKeySet.testCollectionRemoveAll",preTailMap + "bulkTestMapValues.testCollectionClear",preTailMap + "bulkTestMapValues.testCollectionRemoveAll",preTailMap + "bulkTestMapValues.testCollectionRetainAll"} @AT@ 1886 @LENGTH@ 881
---------DEL ArrayCreation@@new String[]{preSubMap + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSubMap + "bulkTestMapKeySet.testCollectionRemove",preSubMap + "bulkTestMapValues.testCollectionIteratorRemove",preTailMap + "testMapRemove",preTailMap + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTailMap + "bulkTestMapEntrySet.testCollectionRemoveAll",preTailMap + "bulkTestMapKeySet.testCollectionIteratorRemove",preTailMap + "bulkTestMapKeySet.testCollectionRemoveAll",preTailMap + "bulkTestMapValues.testCollectionClear",preTailMap + "bulkTestMapValues.testCollectionRemoveAll",preTailMap + "bulkTestMapValues.testCollectionRetainAll"} @AT@ 1893 @LENGTH@ 873
------------DEL ArrayType@@String[] @AT@ 1897 @LENGTH@ 8
---------------DEL SimpleType@@String @AT@ 1897 @LENGTH@ 6
------------DEL ArrayInitializer@@{preSubMap + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSubMap + "bulkTestMapKeySet.testCollectionRemove",preSubMap + "bulkTestMapValues.testCollectionIteratorRemove",preTailMap + "testMapRemove",preTailMap + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTailMap + "bulkTestMapEntrySet.testCollectionRemoveAll",preTailMap + "bulkTestMapKeySet.testCollectionIteratorRemove",preTailMap + "bulkTestMapKeySet.testCollectionRemoveAll",preTailMap + "bulkTestMapValues.testCollectionClear",preTailMap + "bulkTestMapValues.testCollectionRemoveAll",preTailMap + "bulkTestMapValues.testCollectionRetainAll"} @AT@ 1906 @LENGTH@ 860
---------------DEL InfixExpression@@preSubMap + "bulkTestMapEntrySet.testCollectionIteratorRemove" @AT@ 1928 @LENGTH@ 62
------------------DEL SimpleName@@preSubMap @AT@ 1928 @LENGTH@ 9
------------------DEL Operator@@+ @AT@ 1937 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapEntrySet.testCollectionIteratorRemove" @AT@ 1940 @LENGTH@ 50
---------------DEL InfixExpression@@preSubMap + "bulkTestMapKeySet.testCollectionRemove" @AT@ 2012 @LENGTH@ 52
------------------DEL SimpleName@@preSubMap @AT@ 2012 @LENGTH@ 9
------------------DEL Operator@@+ @AT@ 2021 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapKeySet.testCollectionRemove" @AT@ 2024 @LENGTH@ 40
---------------DEL InfixExpression@@preSubMap + "bulkTestMapValues.testCollectionIteratorRemove" @AT@ 2086 @LENGTH@ 60
------------------DEL SimpleName@@preSubMap @AT@ 2086 @LENGTH@ 9
------------------DEL Operator@@+ @AT@ 2095 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapValues.testCollectionIteratorRemove" @AT@ 2098 @LENGTH@ 48
---------------DEL InfixExpression@@preTailMap + "testMapRemove" @AT@ 2168 @LENGTH@ 28
------------------DEL SimpleName@@preTailMap @AT@ 2168 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 2178 @LENGTH@ 1
------------------DEL StringLiteral@@"testMapRemove" @AT@ 2181 @LENGTH@ 15
---------------DEL InfixExpression@@preTailMap + "bulkTestMapEntrySet.testCollectionIteratorRemove" @AT@ 2218 @LENGTH@ 63
------------------DEL SimpleName@@preTailMap @AT@ 2218 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 2228 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapEntrySet.testCollectionIteratorRemove" @AT@ 2231 @LENGTH@ 50
---------------DEL InfixExpression@@preTailMap + "bulkTestMapEntrySet.testCollectionRemoveAll" @AT@ 2303 @LENGTH@ 58
------------------DEL SimpleName@@preTailMap @AT@ 2303 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 2313 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapEntrySet.testCollectionRemoveAll" @AT@ 2316 @LENGTH@ 45
---------------DEL InfixExpression@@preTailMap + "bulkTestMapKeySet.testCollectionIteratorRemove" @AT@ 2383 @LENGTH@ 61
------------------DEL SimpleName@@preTailMap @AT@ 2383 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 2393 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapKeySet.testCollectionIteratorRemove" @AT@ 2396 @LENGTH@ 48
---------------DEL InfixExpression@@preTailMap + "bulkTestMapKeySet.testCollectionRemoveAll" @AT@ 2466 @LENGTH@ 56
------------------DEL SimpleName@@preTailMap @AT@ 2466 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 2476 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapKeySet.testCollectionRemoveAll" @AT@ 2479 @LENGTH@ 43
---------------DEL InfixExpression@@preTailMap + "bulkTestMapValues.testCollectionClear" @AT@ 2544 @LENGTH@ 52
------------------DEL SimpleName@@preTailMap @AT@ 2544 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 2554 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapValues.testCollectionClear" @AT@ 2557 @LENGTH@ 39
---------------DEL InfixExpression@@preTailMap + "bulkTestMapValues.testCollectionRemoveAll" @AT@ 2618 @LENGTH@ 56
------------------DEL SimpleName@@preTailMap @AT@ 2618 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 2628 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapValues.testCollectionRemoveAll" @AT@ 2631 @LENGTH@ 43
---------------DEL InfixExpression@@preTailMap + "bulkTestMapValues.testCollectionRetainAll" @AT@ 2696 @LENGTH@ 56
------------------DEL SimpleName@@preTailMap @AT@ 2696 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 2706 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapValues.testCollectionRetainAll" @AT@ 2709 @LENGTH@ 43


UPD IfStatement@@if (CoAPEndpoint.enableTLS((uri))) {  DTLSConnector connector=endpoint.createDTLSConnector(null,true);  CoapEndpoint.Builder coapBuilder=new CoapEndpoint.Builder();  coapBuilder.setConnector(connector);  client.setEndpoint(coapBuilder.build());} @TO@ if (CoAPEndpoint.enableTLS(uri)) {  DTLSConnector connector=endpoint.createDTLSConnector(null,true);  CoapEndpoint.Builder coapBuilder=new CoapEndpoint.Builder();  coapBuilder.setConnector(connector);  client.setEndpoint(coapBuilder.build());} @AT@ 3672 @LENGTH@ 324
---UPD MethodInvocation@@CoAPEndpoint.enableTLS((uri)) @TO@ CoAPEndpoint.enableTLS(uri) @AT@ 3676 @LENGTH@ 29
------UPD SimpleName@@MethodName:enableTLS:[(uri)] @TO@ MethodName:enableTLS:[uri] @AT@ 3689 @LENGTH@ 16
---------DEL ParenthesizedExpression@@(uri) @AT@ 3699 @LENGTH@ 5
------------DEL SimpleName@@uri @AT@ 3700 @LENGTH@ 3
---------INS SimpleName@@uri @TO@ SimpleName@@MethodName:enableTLS:[(uri)] @AT@ 3699 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:jdbcTemplate.query(sql,new Object[]{key},new AbstractLobStreamingResultSetExtractor(){
  @Override protected void streamData(  ResultSet rs) throws SQLException, IOException, DataAccessException {
    FileCopyUtils.copy(getLobHandler().getBlobAsBinaryStream(rs,EXCHANGE),bis);
  }
}
) @TO@ MethodInvocation:jdbcTemplate.query(sql,new Object[]{key},new AbstractLobStreamingResultSetExtractor<Object>(){
  @Override protected void streamData(  ResultSet rs) throws SQLException, IOException, DataAccessException {
    FileCopyUtils.copy(getLobHandler().getBlobAsBinaryStream(rs,EXCHANGE),bis);
  }
}
) @AT@ 12872 @LENGTH@ 472
---UPD MethodInvocation@@jdbcTemplate.query(sql,new Object[]{key},new AbstractLobStreamingResultSetExtractor(){
  @Override protected void streamData(  ResultSet rs) throws SQLException, IOException, DataAccessException {
    FileCopyUtils.copy(getLobHandler().getBlobAsBinaryStream(rs,EXCHANGE),bis);
  }
}
) @TO@ jdbcTemplate.query(sql,new Object[]{key},new AbstractLobStreamingResultSetExtractor<Object>(){
  @Override protected void streamData(  ResultSet rs) throws SQLException, IOException, DataAccessException {
    FileCopyUtils.copy(getLobHandler().getBlobAsBinaryStream(rs,EXCHANGE),bis);
  }
}
) @AT@ 12872 @LENGTH@ 471
------UPD SimpleName@@MethodName:query:[sql, new Object[]{key}, new AbstractLobStreamingResultSetExtractor(){
  @Override protected void streamData(  ResultSet rs) throws SQLException, IOException, DataAccessException {
    FileCopyUtils.copy(getLobHandler().getBlobAsBinaryStream(rs,EXCHANGE),bis);
  }
}
] @TO@ MethodName:query:[sql, new Object[]{key}, new AbstractLobStreamingResultSetExtractor<Object>(){
  @Override protected void streamData(  ResultSet rs) throws SQLException, IOException, DataAccessException {
    FileCopyUtils.copy(getLobHandler().getBlobAsBinaryStream(rs,EXCHANGE),bis);
  }
}
] @AT@ 12885 @LENGTH@ 458
---------UPD ClassInstanceCreation@@AbstractLobStreamingResultSetExtractor[] @TO@ AbstractLobStreamingResultSetExtractor<Object>[] @AT@ 12934 @LENGTH@ 408
------------INS ParameterizedType@@AbstractLobStreamingResultSetExtractor<Object> @TO@ ClassInstanceCreation@@AbstractLobStreamingResultSetExtractor[] @AT@ 12929 @LENGTH@ 46
---------------INS SimpleType@@AbstractLobStreamingResultSetExtractor @TO@ ParameterizedType@@AbstractLobStreamingResultSetExtractor<Object> @AT@ 12929 @LENGTH@ 38
---------------INS SimpleType@@Object @TO@ ParameterizedType@@AbstractLobStreamingResultSetExtractor<Object> @AT@ 12968 @LENGTH@ 6
------------DEL SimpleType@@AbstractLobStreamingResultSetExtractor @AT@ 12938 @LENGTH@ 38


UPD MethodDeclaration@@public, Object, MethodName:getObject, Exception,  @TO@ public, Object, MethodName:getObject,  @AT@ 2401 @LENGTH@ 75
---DEL SimpleType@@Exception @AT@ 2434 @LENGTH@ 9


DEL MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 4227 @LENGTH@ 59
---DEL Modifier@@public @AT@ 4227 @LENGTH@ 6
---DEL PrimitiveType@@int @AT@ 4234 @LENGTH@ 3
---DEL SimpleName@@MethodName:getOrder @AT@ 4238 @LENGTH@ 8
---DEL ReturnStatement@@InfixExpression:super.getOrder() - 100 @AT@ 4253 @LENGTH@ 30
------DEL InfixExpression@@super.getOrder() - 100 @AT@ 4260 @LENGTH@ 22
---------DEL SuperMethodInvocation@@super.getOrder() @AT@ 4260 @LENGTH@ 16
------------DEL SimpleName@@MethodName:getOrder:[] @AT@ 4266 @LENGTH@ 8
---------DEL Operator@@- @AT@ 4276 @LENGTH@ 1
---------DEL NumberLiteral@@100 @AT@ 4279 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:authenticateWhenIdTokenValidationErrorThenOAuth2AuthenticationException,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]OidcAuthorizationCodeReactiveAuthenticationManagerTests,  @AT@ 6217 @LENGTH@ 829
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenIdTokenValidationErrorThenOAuth2AuthenticationException,  @AT@ 6217 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenIdTokenValidationErrorThenOAuth2AuthenticationException,  @AT@ 6224 @LENGTH@ 4
---INS SimpleName@@MethodName:authenticateWhenIdTokenValidationErrorThenOAuth2AuthenticationException @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenIdTokenValidationErrorThenOAuth2AuthenticationException,  @AT@ 6229 @LENGTH@ 71
---INS VariableDeclarationStatement@@OAuth2AccessTokenResponse accessTokenResponse=OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())).build(); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenIdTokenValidationErrorThenOAuth2AuthenticationException,  @AT@ 6307 @LENGTH@ 266
------INS SimpleType@@OAuth2AccessTokenResponse @TO@ VariableDeclarationStatement@@OAuth2AccessTokenResponse accessTokenResponse=OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())).build(); @AT@ 6307 @LENGTH@ 25
------INS VariableDeclarationFragment@@accessTokenResponse=OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())).build() @TO@ VariableDeclarationStatement@@OAuth2AccessTokenResponse accessTokenResponse=OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())).build(); @AT@ 6333 @LENGTH@ 239
---------INS SimpleName@@accessTokenResponse @TO@ VariableDeclarationFragment@@accessTokenResponse=OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())).build() @AT@ 6333 @LENGTH@ 19
---------INS MethodInvocation@@OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())).build() @TO@ VariableDeclarationFragment@@accessTokenResponse=OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())).build() @AT@ 6355 @LENGTH@ 217
------------INS MethodInvocation@@MethodName:additionalParameters:[Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())] @TO@ MethodInvocation@@OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())).build() @AT@ 6355 @LENGTH@ 204
---------------INS MethodInvocation@@Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue()) @TO@ MethodInvocation@@MethodName:additionalParameters:[Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())] @AT@ 6475 @LENGTH@ 83
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue()) @AT@ 6475 @LENGTH@ 11
------------------INS SimpleName@@MethodName:singletonMap:[OidcParameterNames.ID_TOKEN, this.idToken.getTokenValue()] @TO@ MethodInvocation@@Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue()) @AT@ 6487 @LENGTH@ 71
---------------------INS QualifiedName@@OidcParameterNames.ID_TOKEN @TO@ SimpleName@@MethodName:singletonMap:[OidcParameterNames.ID_TOKEN, this.idToken.getTokenValue()] @AT@ 6500 @LENGTH@ 27
------------------------INS SimpleName@@OidcParameterNames @TO@ QualifiedName@@OidcParameterNames.ID_TOKEN @AT@ 6500 @LENGTH@ 18
------------------------INS SimpleName@@ID_TOKEN @TO@ QualifiedName@@OidcParameterNames.ID_TOKEN @AT@ 6519 @LENGTH@ 8
---------------------INS MethodInvocation@@this.idToken.getTokenValue() @TO@ SimpleName@@MethodName:singletonMap:[OidcParameterNames.ID_TOKEN, this.idToken.getTokenValue()] @AT@ 6529 @LENGTH@ 28
------------------------INS FieldAccess@@this.idToken @TO@ MethodInvocation@@this.idToken.getTokenValue() @AT@ 6529 @LENGTH@ 12
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.idToken @AT@ 6529 @LENGTH@ 4
---------------------------INS SimpleName@@idToken @TO@ FieldAccess@@this.idToken @AT@ 6534 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getTokenValue:[] @TO@ MethodInvocation@@this.idToken.getTokenValue() @AT@ 6542 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:tokenType:[OAuth2AccessToken.TokenType.BEARER] @TO@ MethodInvocation@@OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())).build() @AT@ 6355 @LENGTH@ 93
---------------INS QualifiedName@@OAuth2AccessToken.TokenType.BEARER @TO@ MethodInvocation@@MethodName:tokenType:[OAuth2AccessToken.TokenType.BEARER] @AT@ 6413 @LENGTH@ 34
------------------INS QualifiedName@@OAuth2AccessToken.TokenType @TO@ QualifiedName@@OAuth2AccessToken.TokenType.BEARER @AT@ 6413 @LENGTH@ 27
---------------------INS SimpleName@@OAuth2AccessToken @TO@ QualifiedName@@OAuth2AccessToken.TokenType @AT@ 6413 @LENGTH@ 17
---------------------INS SimpleName@@TokenType @TO@ QualifiedName@@OAuth2AccessToken.TokenType @AT@ 6431 @LENGTH@ 9
------------------INS SimpleName@@BEARER @TO@ QualifiedName@@OAuth2AccessToken.TokenType.BEARER @AT@ 6441 @LENGTH@ 6
------------INS MethodInvocation@@MethodName:withToken:["foo"] @TO@ MethodInvocation@@OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())).build() @AT@ 6355 @LENGTH@ 42
---------------INS StringLiteral@@"foo" @TO@ MethodInvocation@@MethodName:withToken:["foo"] @AT@ 6391 @LENGTH@ 5
------------INS SimpleName@@Name:OAuth2AccessTokenResponse @TO@ MethodInvocation@@OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())).build() @AT@ 6355 @LENGTH@ 25
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@OAuth2AccessTokenResponse.withToken("foo").tokenType(OAuth2AccessToken.TokenType.BEARER).additionalParameters(Collections.singletonMap(OidcParameterNames.ID_TOKEN,this.idToken.getTokenValue())).build() @AT@ 6565 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:when(this.accessTokenResponseClient.getTokenResponse(any())).thenReturn(Mono.just(accessTokenResponse)) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenIdTokenValidationErrorThenOAuth2AuthenticationException,  @AT@ 6576 @LENGTH@ 104
------INS MethodInvocation@@when(this.accessTokenResponseClient.getTokenResponse(any())).thenReturn(Mono.just(accessTokenResponse)) @TO@ ExpressionStatement@@MethodInvocation:when(this.accessTokenResponseClient.getTokenResponse(any())).thenReturn(Mono.just(accessTokenResponse)) @AT@ 6576 @LENGTH@ 103
---------INS MethodInvocation@@MethodName:when:[this.accessTokenResponseClient.getTokenResponse(any())] @TO@ MethodInvocation@@when(this.accessTokenResponseClient.getTokenResponse(any())).thenReturn(Mono.just(accessTokenResponse)) @AT@ 6576 @LENGTH@ 60
------------INS MethodInvocation@@this.accessTokenResponseClient.getTokenResponse(any()) @TO@ MethodInvocation@@MethodName:when:[this.accessTokenResponseClient.getTokenResponse(any())] @AT@ 6581 @LENGTH@ 54
---------------INS FieldAccess@@this.accessTokenResponseClient @TO@ MethodInvocation@@this.accessTokenResponseClient.getTokenResponse(any()) @AT@ 6581 @LENGTH@ 30
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.accessTokenResponseClient @AT@ 6581 @LENGTH@ 4
------------------INS SimpleName@@accessTokenResponseClient @TO@ FieldAccess@@this.accessTokenResponseClient @AT@ 6586 @LENGTH@ 25
---------------INS SimpleName@@MethodName:getTokenResponse:[any()] @TO@ MethodInvocation@@this.accessTokenResponseClient.getTokenResponse(any()) @AT@ 6612 @LENGTH@ 23
------------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:getTokenResponse:[any()] @AT@ 6629 @LENGTH@ 5
---------INS SimpleName@@MethodName:thenReturn:[Mono.just(accessTokenResponse)] @TO@ MethodInvocation@@when(this.accessTokenResponseClient.getTokenResponse(any())).thenReturn(Mono.just(accessTokenResponse)) @AT@ 6637 @LENGTH@ 42
------------INS MethodInvocation@@Mono.just(accessTokenResponse) @TO@ SimpleName@@MethodName:thenReturn:[Mono.just(accessTokenResponse)] @AT@ 6648 @LENGTH@ 30
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.just(accessTokenResponse) @AT@ 6648 @LENGTH@ 4
---------------INS SimpleName@@MethodName:just:[accessTokenResponse] @TO@ MethodInvocation@@Mono.just(accessTokenResponse) @AT@ 6653 @LENGTH@ 25
------------------INS SimpleName@@accessTokenResponse @TO@ SimpleName@@MethodName:just:[accessTokenResponse] @AT@ 6658 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:when(this.jwtDecoder.decode(any())).thenThrow(new JwtException("ID Token Validation Error")) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenIdTokenValidationErrorThenOAuth2AuthenticationException,  @AT@ 6684 @LENGTH@ 93
------INS MethodInvocation@@when(this.jwtDecoder.decode(any())).thenThrow(new JwtException("ID Token Validation Error")) @TO@ ExpressionStatement@@MethodInvocation:when(this.jwtDecoder.decode(any())).thenThrow(new JwtException("ID Token Validation Error")) @AT@ 6684 @LENGTH@ 92
---------INS MethodInvocation@@MethodName:when:[this.jwtDecoder.decode(any())] @TO@ MethodInvocation@@when(this.jwtDecoder.decode(any())).thenThrow(new JwtException("ID Token Validation Error")) @AT@ 6684 @LENGTH@ 35
------------INS MethodInvocation@@this.jwtDecoder.decode(any()) @TO@ MethodInvocation@@MethodName:when:[this.jwtDecoder.decode(any())] @AT@ 6689 @LENGTH@ 29
---------------INS FieldAccess@@this.jwtDecoder @TO@ MethodInvocation@@this.jwtDecoder.decode(any()) @AT@ 6689 @LENGTH@ 15
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.jwtDecoder @AT@ 6689 @LENGTH@ 4
------------------INS SimpleName@@jwtDecoder @TO@ FieldAccess@@this.jwtDecoder @AT@ 6694 @LENGTH@ 10
---------------INS SimpleName@@MethodName:decode:[any()] @TO@ MethodInvocation@@this.jwtDecoder.decode(any()) @AT@ 6705 @LENGTH@ 13
------------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:decode:[any()] @AT@ 6712 @LENGTH@ 5
---------INS SimpleName@@MethodName:thenThrow:[new JwtException("ID Token Validation Error")] @TO@ MethodInvocation@@when(this.jwtDecoder.decode(any())).thenThrow(new JwtException("ID Token Validation Error")) @AT@ 6720 @LENGTH@ 56
------------INS ClassInstanceCreation@@JwtException["ID Token Validation Error"] @TO@ SimpleName@@MethodName:thenThrow:[new JwtException("ID Token Validation Error")] @AT@ 6730 @LENGTH@ 45
---------------INS New@@new @TO@ ClassInstanceCreation@@JwtException["ID Token Validation Error"] @AT@ 6730 @LENGTH@ 3
---------------INS SimpleType@@JwtException @TO@ ClassInstanceCreation@@JwtException["ID Token Validation Error"] @AT@ 6734 @LENGTH@ 12
---------------INS StringLiteral@@"ID Token Validation Error" @TO@ ClassInstanceCreation@@JwtException["ID Token Validation Error"] @AT@ 6747 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:this.manager.setJwtDecoderFactory(c -> this.jwtDecoder) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenIdTokenValidationErrorThenOAuth2AuthenticationException,  @AT@ 6780 @LENGTH@ 56
------INS MethodInvocation@@this.manager.setJwtDecoderFactory(c -> this.jwtDecoder) @TO@ ExpressionStatement@@MethodInvocation:this.manager.setJwtDecoderFactory(c -> this.jwtDecoder) @AT@ 6780 @LENGTH@ 55
---------INS FieldAccess@@this.manager @TO@ MethodInvocation@@this.manager.setJwtDecoderFactory(c -> this.jwtDecoder) @AT@ 6780 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.manager @AT@ 6780 @LENGTH@ 4
------------INS SimpleName@@manager @TO@ FieldAccess@@this.manager @AT@ 6785 @LENGTH@ 7
---------INS SimpleName@@MethodName:setJwtDecoderFactory:[c -> this.jwtDecoder] @TO@ MethodInvocation@@this.manager.setJwtDecoderFactory(c -> this.jwtDecoder) @AT@ 6793 @LENGTH@ 42
------------INS LambdaExpression@@c -> this.jwtDecoder @TO@ SimpleName@@MethodName:setJwtDecoderFactory:[c -> this.jwtDecoder] @AT@ 6814 @LENGTH@ 20
---------------INS VariableDeclarationFragment@@c @TO@ LambdaExpression@@c -> this.jwtDecoder @AT@ 6814 @LENGTH@ 1
------------------INS SimpleName@@c @TO@ VariableDeclarationFragment@@c @AT@ 6814 @LENGTH@ 1
---------------INS FieldAccess@@this.jwtDecoder @TO@ LambdaExpression@@c -> this.jwtDecoder @AT@ 6819 @LENGTH@ 15
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.jwtDecoder @AT@ 6819 @LENGTH@ 4
------------------INS SimpleName@@jwtDecoder @TO@ FieldAccess@@this.jwtDecoder @AT@ 6824 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.manager.authenticate(loginToken()).block()).isInstanceOf(OAuth2AuthenticationException.class).hasMessageContaining("[invalid_id_token] ID Token Validation Error") @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenIdTokenValidationErrorThenOAuth2AuthenticationException,  @AT@ 6840 @LENGTH@ 203
------INS MethodInvocation@@assertThatThrownBy(() -> this.manager.authenticate(loginToken()).block()).isInstanceOf(OAuth2AuthenticationException.class).hasMessageContaining("[invalid_id_token] ID Token Validation Error") @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.manager.authenticate(loginToken()).block()).isInstanceOf(OAuth2AuthenticationException.class).hasMessageContaining("[invalid_id_token] ID Token Validation Error") @AT@ 6840 @LENGTH@ 202
---------INS MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthenticationException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.manager.authenticate(loginToken()).block()).isInstanceOf(OAuth2AuthenticationException.class).hasMessageContaining("[invalid_id_token] ID Token Validation Error") @AT@ 6840 @LENGTH@ 128
------------INS TypeLiteral@@OAuth2AuthenticationException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthenticationException.class] @AT@ 6932 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.manager.authenticate(loginToken()).block()] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.manager.authenticate(loginToken()).block()).isInstanceOf(OAuth2AuthenticationException.class).hasMessageContaining("[invalid_id_token] ID Token Validation Error") @AT@ 6840 @LENGTH@ 73
------------INS LambdaExpression@@() -> this.manager.authenticate(loginToken()).block() @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.manager.authenticate(loginToken()).block()] @AT@ 6859 @LENGTH@ 53
---------------INS MethodInvocation@@this.manager.authenticate(loginToken()).block() @TO@ LambdaExpression@@() -> this.manager.authenticate(loginToken()).block() @AT@ 6865 @LENGTH@ 47
------------------INS MethodInvocation@@MethodName:authenticate:[loginToken()] @TO@ MethodInvocation@@this.manager.authenticate(loginToken()).block() @AT@ 6865 @LENGTH@ 39
---------------------INS MethodInvocation@@MethodName:loginToken:[] @TO@ MethodInvocation@@MethodName:authenticate:[loginToken()] @AT@ 6891 @LENGTH@ 12
------------------INS FieldAccess@@this.manager @TO@ MethodInvocation@@this.manager.authenticate(loginToken()).block() @AT@ 6865 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.manager @AT@ 6865 @LENGTH@ 4
---------------------INS SimpleName@@manager @TO@ FieldAccess@@this.manager @AT@ 6870 @LENGTH@ 7
------------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@this.manager.authenticate(loginToken()).block() @AT@ 6905 @LENGTH@ 7
---------INS SimpleName@@MethodName:hasMessageContaining:["[invalid_id_token] ID Token Validation Error"] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.manager.authenticate(loginToken()).block()).isInstanceOf(OAuth2AuthenticationException.class).hasMessageContaining("[invalid_id_token] ID Token Validation Error") @AT@ 6974 @LENGTH@ 68
------------INS StringLiteral@@"[invalid_id_token] ID Token Validation Error" @TO@ SimpleName@@MethodName:hasMessageContaining:["[invalid_id_token] ID Token Validation Error"] @AT@ 6995 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Unable to kill query {} for trigger violation") @TO@ MethodInvocation:LOG.warn("Unable to kill query {} for trigger violation",queryId) @AT@ 2406 @LENGTH@ 58
---UPD MethodInvocation@@LOG.warn("Unable to kill query {} for trigger violation") @TO@ LOG.warn("Unable to kill query {} for trigger violation",queryId) @AT@ 2406 @LENGTH@ 57
------UPD SimpleName@@MethodName:warn:["Unable to kill query {} for trigger violation"] @TO@ MethodName:warn:["Unable to kill query {} for trigger violation", queryId] @AT@ 2410 @LENGTH@ 53
---------INS SimpleName@@queryId @TO@ SimpleName@@MethodName:warn:["Unable to kill query {} for trigger violation"] @AT@ 2436 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:when(camelContext.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @TO@ MethodDeclaration@@public, void, MethodName:shouldCreateProducers, Exception,  @AT@ 3533 @LENGTH@ 84
---INS MethodInvocation@@when(camelContext.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @TO@ ExpressionStatement@@MethodInvocation:when(camelContext.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @AT@ 3533 @LENGTH@ 83
------INS MethodInvocation@@MethodName:when:[camelContext.resolvePropertyPlaceholders(anyString())] @TO@ MethodInvocation@@when(camelContext.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @AT@ 3533 @LENGTH@ 59
---------INS MethodInvocation@@camelContext.resolvePropertyPlaceholders(anyString()) @TO@ MethodInvocation@@MethodName:when:[camelContext.resolvePropertyPlaceholders(anyString())] @AT@ 3538 @LENGTH@ 53
------------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.resolvePropertyPlaceholders(anyString()) @AT@ 3538 @LENGTH@ 12
------------INS SimpleName@@MethodName:resolvePropertyPlaceholders:[anyString()] @TO@ MethodInvocation@@camelContext.resolvePropertyPlaceholders(anyString()) @AT@ 3551 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:anyString:[] @TO@ SimpleName@@MethodName:resolvePropertyPlaceholders:[anyString()] @AT@ 3579 @LENGTH@ 11
------INS SimpleName@@MethodName:then:[returnsFirstArg()] @TO@ MethodInvocation@@when(camelContext.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @AT@ 3593 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:returnsFirstArg:[] @TO@ SimpleName@@MethodName:then:[returnsFirstArg()] @AT@ 3598 @LENGTH@ 17


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1015 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1015 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1022 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1030 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1060 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1067 @LENGTH@ 5


INS MethodDeclaration@@private, JwtDecoderFactory<ClientRegistration>, MethodName:getJwtDecoderFactoryBean,  @TO@ TypeDeclaration@@[public, final]OAuth2LoginConfigurer, AbstractAuthenticationFilterConfigurer<B,OAuth2LoginConfigurer<B>,OAuth2LoginAuthenticationFilter> @AT@ 24466 @LENGTH@ 559
---INS Modifier@@private @TO@ MethodDeclaration@@private, JwtDecoderFactory<ClientRegistration>, MethodName:getJwtDecoderFactoryBean,  @AT@ 24466 @LENGTH@ 7
---INS ParameterizedType@@JwtDecoderFactory<ClientRegistration> @TO@ MethodDeclaration@@private, JwtDecoderFactory<ClientRegistration>, MethodName:getJwtDecoderFactoryBean,  @AT@ 24474 @LENGTH@ 37
------INS SimpleType@@JwtDecoderFactory @TO@ ParameterizedType@@JwtDecoderFactory<ClientRegistration> @AT@ 24474 @LENGTH@ 17
------INS SimpleType@@ClientRegistration @TO@ ParameterizedType@@JwtDecoderFactory<ClientRegistration> @AT@ 24492 @LENGTH@ 18
---INS SimpleName@@MethodName:getJwtDecoderFactoryBean @TO@ MethodDeclaration@@private, JwtDecoderFactory<ClientRegistration>, MethodName:getJwtDecoderFactoryBean,  @AT@ 24512 @LENGTH@ 24
---INS VariableDeclarationStatement@@ResolvableType type=ResolvableType.forClassWithGenerics(JwtDecoderFactory.class,ClientRegistration.class); @TO@ MethodDeclaration@@private, JwtDecoderFactory<ClientRegistration>, MethodName:getJwtDecoderFactoryBean,  @AT@ 24543 @LENGTH@ 109
------INS SimpleType@@ResolvableType @TO@ VariableDeclarationStatement@@ResolvableType type=ResolvableType.forClassWithGenerics(JwtDecoderFactory.class,ClientRegistration.class); @AT@ 24543 @LENGTH@ 14
------INS VariableDeclarationFragment@@type=ResolvableType.forClassWithGenerics(JwtDecoderFactory.class,ClientRegistration.class) @TO@ VariableDeclarationStatement@@ResolvableType type=ResolvableType.forClassWithGenerics(JwtDecoderFactory.class,ClientRegistration.class); @AT@ 24558 @LENGTH@ 93
---------INS SimpleName@@type @TO@ VariableDeclarationFragment@@type=ResolvableType.forClassWithGenerics(JwtDecoderFactory.class,ClientRegistration.class) @AT@ 24558 @LENGTH@ 4
---------INS MethodInvocation@@ResolvableType.forClassWithGenerics(JwtDecoderFactory.class,ClientRegistration.class) @TO@ VariableDeclarationFragment@@type=ResolvableType.forClassWithGenerics(JwtDecoderFactory.class,ClientRegistration.class) @AT@ 24565 @LENGTH@ 86
------------INS SimpleName@@Name:ResolvableType @TO@ MethodInvocation@@ResolvableType.forClassWithGenerics(JwtDecoderFactory.class,ClientRegistration.class) @AT@ 24565 @LENGTH@ 14
------------INS SimpleName@@MethodName:forClassWithGenerics:[JwtDecoderFactory.class, ClientRegistration.class] @TO@ MethodInvocation@@ResolvableType.forClassWithGenerics(JwtDecoderFactory.class,ClientRegistration.class) @AT@ 24580 @LENGTH@ 71
---------------INS TypeLiteral@@JwtDecoderFactory.class @TO@ SimpleName@@MethodName:forClassWithGenerics:[JwtDecoderFactory.class, ClientRegistration.class] @AT@ 24601 @LENGTH@ 23
---------------INS TypeLiteral@@ClientRegistration.class @TO@ SimpleName@@MethodName:forClassWithGenerics:[JwtDecoderFactory.class, ClientRegistration.class] @AT@ 24626 @LENGTH@ 24
---INS VariableDeclarationStatement@@String[] names=this.getBuilder().getSharedObject(ApplicationContext.class).getBeanNamesForType(type); @TO@ MethodDeclaration@@private, JwtDecoderFactory<ClientRegistration>, MethodName:getJwtDecoderFactoryBean,  @AT@ 24655 @LENGTH@ 103
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] names=this.getBuilder().getSharedObject(ApplicationContext.class).getBeanNamesForType(type); @AT@ 24655 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 24655 @LENGTH@ 6
------INS VariableDeclarationFragment@@names=this.getBuilder().getSharedObject(ApplicationContext.class).getBeanNamesForType(type) @TO@ VariableDeclarationStatement@@String[] names=this.getBuilder().getSharedObject(ApplicationContext.class).getBeanNamesForType(type); @AT@ 24664 @LENGTH@ 93
---------INS SimpleName@@names @TO@ VariableDeclarationFragment@@names=this.getBuilder().getSharedObject(ApplicationContext.class).getBeanNamesForType(type) @AT@ 24664 @LENGTH@ 5
---------INS MethodInvocation@@this.getBuilder().getSharedObject(ApplicationContext.class).getBeanNamesForType(type) @TO@ VariableDeclarationFragment@@names=this.getBuilder().getSharedObject(ApplicationContext.class).getBeanNamesForType(type) @AT@ 24672 @LENGTH@ 85
------------INS MethodInvocation@@MethodName:getSharedObject:[ApplicationContext.class] @TO@ MethodInvocation@@this.getBuilder().getSharedObject(ApplicationContext.class).getBeanNamesForType(type) @AT@ 24672 @LENGTH@ 59
---------------INS TypeLiteral@@ApplicationContext.class @TO@ MethodInvocation@@MethodName:getSharedObject:[ApplicationContext.class] @AT@ 24706 @LENGTH@ 24
------------INS MethodInvocation@@MethodName:getBuilder:[] @TO@ MethodInvocation@@this.getBuilder().getSharedObject(ApplicationContext.class).getBeanNamesForType(type) @AT@ 24672 @LENGTH@ 17
------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getBuilder().getSharedObject(ApplicationContext.class).getBeanNamesForType(type) @AT@ 24672 @LENGTH@ 4
------------INS SimpleName@@MethodName:getBeanNamesForType:[type] @TO@ MethodInvocation@@this.getBuilder().getSharedObject(ApplicationContext.class).getBeanNamesForType(type) @AT@ 24732 @LENGTH@ 25
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:getBeanNamesForType:[type] @AT@ 24752 @LENGTH@ 4
---INS IfStatement@@if (names.length > 1) {  throw new NoUniqueBeanDefinitionException(type,names);} @TO@ MethodDeclaration@@private, JwtDecoderFactory<ClientRegistration>, MethodName:getJwtDecoderFactoryBean,  @AT@ 24761 @LENGTH@ 86
------INS InfixExpression@@names.length > 1 @TO@ IfStatement@@if (names.length > 1) {  throw new NoUniqueBeanDefinitionException(type,names);} @AT@ 24765 @LENGTH@ 16
---------INS QualifiedName@@names.length @TO@ InfixExpression@@names.length > 1 @AT@ 24765 @LENGTH@ 12
------------INS SimpleName@@names @TO@ QualifiedName@@names.length @AT@ 24765 @LENGTH@ 5
------------INS SimpleName@@length @TO@ QualifiedName@@names.length @AT@ 24771 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@names.length > 1 @AT@ 24777 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ InfixExpression@@names.length > 1 @AT@ 24780 @LENGTH@ 1
------INS Block@@ThenBody:{  throw new NoUniqueBeanDefinitionException(type,names);} @TO@ IfStatement@@if (names.length > 1) {  throw new NoUniqueBeanDefinitionException(type,names);} @AT@ 24783 @LENGTH@ 64
---------INS ThrowStatement@@ClassInstanceCreation:new NoUniqueBeanDefinitionException(type,names) @TO@ Block@@ThenBody:{  throw new NoUniqueBeanDefinitionException(type,names);} @AT@ 24788 @LENGTH@ 55
------------INS ClassInstanceCreation@@NoUniqueBeanDefinitionException[type, names] @TO@ ThrowStatement@@ClassInstanceCreation:new NoUniqueBeanDefinitionException(type,names) @AT@ 24794 @LENGTH@ 48
---------------INS New@@new @TO@ ClassInstanceCreation@@NoUniqueBeanDefinitionException[type, names] @AT@ 24794 @LENGTH@ 3
---------------INS SimpleType@@NoUniqueBeanDefinitionException @TO@ ClassInstanceCreation@@NoUniqueBeanDefinitionException[type, names] @AT@ 24798 @LENGTH@ 31
---------------INS SimpleName@@type @TO@ ClassInstanceCreation@@NoUniqueBeanDefinitionException[type, names] @AT@ 24830 @LENGTH@ 4
---------------INS SimpleName@@names @TO@ ClassInstanceCreation@@NoUniqueBeanDefinitionException[type, names] @AT@ 24836 @LENGTH@ 5
---INS IfStatement@@if (names.length == 1) {  return (JwtDecoderFactory<ClientRegistration>)this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]);} @TO@ MethodDeclaration@@private, JwtDecoderFactory<ClientRegistration>, MethodName:getJwtDecoderFactoryBean,  @AT@ 24850 @LENGTH@ 157
------INS InfixExpression@@names.length == 1 @TO@ IfStatement@@if (names.length == 1) {  return (JwtDecoderFactory<ClientRegistration>)this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]);} @AT@ 24854 @LENGTH@ 17
---------INS QualifiedName@@names.length @TO@ InfixExpression@@names.length == 1 @AT@ 24854 @LENGTH@ 12
------------INS SimpleName@@names @TO@ QualifiedName@@names.length @AT@ 24854 @LENGTH@ 5
------------INS SimpleName@@length @TO@ QualifiedName@@names.length @AT@ 24860 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@names.length == 1 @AT@ 24866 @LENGTH@ 2
---------INS NumberLiteral@@1 @TO@ InfixExpression@@names.length == 1 @AT@ 24870 @LENGTH@ 1
------INS Block@@ThenBody:{  return (JwtDecoderFactory<ClientRegistration>)this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]);} @TO@ IfStatement@@if (names.length == 1) {  return (JwtDecoderFactory<ClientRegistration>)this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]);} @AT@ 24873 @LENGTH@ 134
---------INS ReturnStatement@@CastExpression:(JwtDecoderFactory<ClientRegistration>)this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]) @TO@ Block@@ThenBody:{  return (JwtDecoderFactory<ClientRegistration>)this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]);} @AT@ 24878 @LENGTH@ 125
------------INS CastExpression@@(JwtDecoderFactory<ClientRegistration>)this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]) @TO@ ReturnStatement@@CastExpression:(JwtDecoderFactory<ClientRegistration>)this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]) @AT@ 24885 @LENGTH@ 117
---------------INS ParameterizedType@@JwtDecoderFactory<ClientRegistration> @TO@ CastExpression@@(JwtDecoderFactory<ClientRegistration>)this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]) @AT@ 24886 @LENGTH@ 37
------------------INS SimpleType@@JwtDecoderFactory @TO@ ParameterizedType@@JwtDecoderFactory<ClientRegistration> @AT@ 24886 @LENGTH@ 17
------------------INS SimpleType@@ClientRegistration @TO@ ParameterizedType@@JwtDecoderFactory<ClientRegistration> @AT@ 24904 @LENGTH@ 18
---------------INS MethodInvocation@@this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]) @TO@ CastExpression@@(JwtDecoderFactory<ClientRegistration>)this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]) @AT@ 24925 @LENGTH@ 77
------------------INS MethodInvocation@@MethodName:getSharedObject:[ApplicationContext.class] @TO@ MethodInvocation@@this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]) @AT@ 24925 @LENGTH@ 59
---------------------INS TypeLiteral@@ApplicationContext.class @TO@ MethodInvocation@@MethodName:getSharedObject:[ApplicationContext.class] @AT@ 24959 @LENGTH@ 24
------------------INS MethodInvocation@@MethodName:getBuilder:[] @TO@ MethodInvocation@@this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]) @AT@ 24925 @LENGTH@ 17
------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]) @AT@ 24925 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getBean:[names[0]] @TO@ MethodInvocation@@this.getBuilder().getSharedObject(ApplicationContext.class).getBean(names[0]) @AT@ 24985 @LENGTH@ 17
---------------------INS ArrayAccess@@names[0] @TO@ SimpleName@@MethodName:getBean:[names[0]] @AT@ 24993 @LENGTH@ 8
------------------------INS SimpleName@@names @TO@ ArrayAccess@@names[0] @AT@ 24993 @LENGTH@ 5
------------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@names[0] @AT@ 24999 @LENGTH@ 1
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@private, JwtDecoderFactory<ClientRegistration>, MethodName:getJwtDecoderFactoryBean,  @AT@ 25010 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 25017 @LENGTH@ 4


DEL MethodDeclaration@@private, voidMethodName:ExpressionBuilder,  @AT@ 2259 @LENGTH@ 35
---DEL Modifier@@private @AT@ 2259 @LENGTH@ 7
---DEL SimpleName@@MethodName:ExpressionBuilder @AT@ 2267 @LENGTH@ 17


UPD TypeDeclaration@@[public]ErrorHandlerReifier,  @TO@ [public, final]ErrorHandlerReifier,  @AT@ 336 @LENGTH@ 6881
---INS Modifier@@final @TO@ TypeDeclaration@@[public]ErrorHandlerReifier,  @AT@ 1147 @LENGTH@ 5


INS MethodDeclaration@@public, Document, MethodName:getMappedObject, Document document,  @TO@ TypeDeclaration@@NestedDelegatingExpressionAggregationOperationContext, [AggregationOperationContext] @AT@ 1929 @LENGTH@ 100
---INS Modifier@@public @TO@ MethodDeclaration@@public, Document, MethodName:getMappedObject, Document document,  @AT@ 1929 @LENGTH@ 6
---INS SimpleType@@Document @TO@ MethodDeclaration@@public, Document, MethodName:getMappedObject, Document document,  @AT@ 1936 @LENGTH@ 8
---INS SimpleName@@MethodName:getMappedObject @TO@ MethodDeclaration@@public, Document, MethodName:getMappedObject, Document document,  @AT@ 1945 @LENGTH@ 15
---INS SingleVariableDeclaration@@Document document @TO@ MethodDeclaration@@public, Document, MethodName:getMappedObject, Document document,  @AT@ 1961 @LENGTH@ 17
------INS SimpleType@@Document @TO@ SingleVariableDeclaration@@Document document @AT@ 1961 @LENGTH@ 8
------INS SimpleName@@document @TO@ SingleVariableDeclaration@@Document document @AT@ 1970 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:delegate.getMappedObject(document) @TO@ MethodDeclaration@@public, Document, MethodName:getMappedObject, Document document,  @AT@ 1984 @LENGTH@ 42
------INS MethodInvocation@@delegate.getMappedObject(document) @TO@ ReturnStatement@@MethodInvocation:delegate.getMappedObject(document) @AT@ 1991 @LENGTH@ 34
---------INS SimpleName@@Name:delegate @TO@ MethodInvocation@@delegate.getMappedObject(document) @AT@ 1991 @LENGTH@ 8
---------INS SimpleName@@MethodName:getMappedObject:[document] @TO@ MethodInvocation@@delegate.getMappedObject(document) @AT@ 2000 @LENGTH@ 25
------------INS SimpleName@@document @TO@ SimpleName@@MethodName:getMappedObject:[document] @AT@ 2016 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:properties.get(properties.size() - 1) @TO@ ConditionalExpression:properties.isEmpty() ? null : properties.get(properties.size() - 1) @AT@ 4795 @LENGTH@ 45
---INS ConditionalExpression@@properties.isEmpty() ? null : properties.get(properties.size() - 1) @TO@ ReturnStatement@@MethodInvocation:properties.get(properties.size() - 1) @AT@ 4802 @LENGTH@ 67
------MOV MethodInvocation@@properties.get(properties.size() - 1) @TO@ ConditionalExpression@@properties.isEmpty() ? null : properties.get(properties.size() - 1) @AT@ 4802 @LENGTH@ 37
------INS MethodInvocation@@properties.isEmpty() @TO@ ConditionalExpression@@properties.isEmpty() ? null : properties.get(properties.size() - 1) @AT@ 4802 @LENGTH@ 20
---------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.isEmpty() @AT@ 4802 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@properties.isEmpty() @AT@ 4813 @LENGTH@ 9
------INS NullLiteral@@null @TO@ ConditionalExpression@@properties.isEmpty() ? null : properties.get(properties.size() - 1) @AT@ 4825 @LENGTH@ 4


UPD IfStatement@@if (typeIdHeader != null) {  JavaType classType=getClassIdType(typeIdHeader);  if (!classType.isContainerType() || classType.isArrayType()) {    return classType;  }  JavaType contentClassType=getClassIdType(retrieveHeader(properties,getContentClassIdFieldName()));  if (classType.getKeyType() == null) {    return TypeFactory.defaultInstance().constructCollectionLikeType(classType.getRawClass(),contentClassType);  }  JavaType keyClassType=getClassIdType(retrieveHeader(properties,getKeyClassIdFieldName()));  return TypeFactory.defaultInstance().constructMapLikeType(classType.getRawClass(),keyClassType,contentClassType);} @TO@ if (typeIdHeader != null) {  return fromTypeHeader(properties,typeIdHeader);} @AT@ 4161 @LENGTH@ 674
---UPD Block@@ThenBody:{  JavaType classType=getClassIdType(typeIdHeader);  if (!classType.isContainerType() || classType.isArrayType()) {    return classType;  }  JavaType contentClassType=getClassIdType(retrieveHeader(properties,getContentClassIdFieldName()));  if (classType.getKeyType() == null) {    return TypeFactory.defaultInstance().constructCollectionLikeType(classType.getRawClass(),contentClassType);  }  JavaType keyClassType=getClassIdType(retrieveHeader(properties,getKeyClassIdFieldName()));  return TypeFactory.defaultInstance().constructMapLikeType(classType.getRawClass(),keyClassType,contentClassType);} @TO@ ThenBody:{  return fromTypeHeader(properties,typeIdHeader);} @AT@ 4187 @LENGTH@ 648
------INS ReturnStatement@@MethodInvocation:fromTypeHeader(properties,typeIdHeader) @TO@ Block@@ThenBody:{  JavaType classType=getClassIdType(typeIdHeader);  if (!classType.isContainerType() || classType.isArrayType()) {    return classType;  }  JavaType contentClassType=getClassIdType(retrieveHeader(properties,getContentClassIdFieldName()));  if (classType.getKeyType() == null) {    return TypeFactory.defaultInstance().constructCollectionLikeType(classType.getRawClass(),contentClassType);  }  JavaType keyClassType=getClassIdType(retrieveHeader(properties,getKeyClassIdFieldName()));  return TypeFactory.defaultInstance().constructMapLikeType(classType.getRawClass(),keyClassType,contentClassType);} @AT@ 4192 @LENGTH@ 48
---------INS MethodInvocation@@fromTypeHeader(properties,typeIdHeader) @TO@ ReturnStatement@@MethodInvocation:fromTypeHeader(properties,typeIdHeader) @AT@ 4199 @LENGTH@ 40
------------INS SimpleName@@MethodName:fromTypeHeader:[properties, typeIdHeader] @TO@ MethodInvocation@@fromTypeHeader(properties,typeIdHeader) @AT@ 4199 @LENGTH@ 40
---------------INS SimpleName@@properties @TO@ SimpleName@@MethodName:fromTypeHeader:[properties, typeIdHeader] @AT@ 4214 @LENGTH@ 10
---------------INS SimpleName@@typeIdHeader @TO@ SimpleName@@MethodName:fromTypeHeader:[properties, typeIdHeader] @AT@ 4226 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:from("google-sheets-stream://data?spreadsheetId=" + spreadsheetId + "&range="+ range+ "&delay=2000&maxResults=5").routeId("google-stream-test").to("mock:result") @TO@ MethodInvocation:from("google-sheets-stream://data?spreadsheetId=" + spreadsheetId + "&range="+ range+ "&delay=2000&maxResults=5&splitResults=true").routeId("google-stream-values-test").to("mock:rows") @AT@ 3238 @LENGTH@ 164
---UPD MethodInvocation@@from("google-sheets-stream://data?spreadsheetId=" + spreadsheetId + "&range="+ range+ "&delay=2000&maxResults=5").routeId("google-stream-test").to("mock:result") @TO@ from("google-sheets-stream://data?spreadsheetId=" + spreadsheetId + "&range="+ range+ "&delay=2000&maxResults=5&splitResults=true").routeId("google-stream-values-test").to("mock:rows") @AT@ 3238 @LENGTH@ 163
------UPD MethodInvocation@@MethodName:routeId:["google-stream-test"] @TO@ MethodName:routeId:["google-stream-values-test"] @AT@ 3238 @LENGTH@ 145
---------UPD StringLiteral@@"google-stream-test" @TO@ "google-stream-values-test" @AT@ 3362 @LENGTH@ 20
------UPD MethodInvocation@@MethodName:from:["google-sheets-stream://data?spreadsheetId=" + spreadsheetId + "&range="+ range+ "&delay=2000&maxResults=5"] @TO@ MethodName:from:["google-sheets-stream://data?spreadsheetId=" + spreadsheetId + "&range="+ range+ "&delay=2000&maxResults=5&splitResults=true"] @AT@ 3238 @LENGTH@ 115
---------UPD InfixExpression@@"google-sheets-stream://data?spreadsheetId=" + spreadsheetId + "&range="+ range+ "&delay=2000&maxResults=5" @TO@ "google-sheets-stream://data?spreadsheetId=" + spreadsheetId + "&range="+ range+ "&delay=2000&maxResults=5&splitResults=true" @AT@ 3243 @LENGTH@ 109
------------UPD StringLiteral@@"&delay=2000&maxResults=5" @TO@ "&delay=2000&maxResults=5&splitResults=true" @AT@ 3326 @LENGTH@ 26
------UPD SimpleName@@MethodName:to:["mock:result"] @TO@ MethodName:to:["mock:rows"] @AT@ 3384 @LENGTH@ 17
---------UPD StringLiteral@@"mock:result" @TO@ "mock:rows" @AT@ 3387 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:sb.append("<div class=\"container\"><h2 class=\"form-signin-heading\">Login with OAuth 2.0</h3>") @TO@ MethodInvocation:sb.append("<div class=\"container\"><h2 class=\"form-signin-heading\">Login with OAuth 2.0</h2>") @AT@ 6206 @LENGTH@ 98
---UPD MethodInvocation@@sb.append("<div class=\"container\"><h2 class=\"form-signin-heading\">Login with OAuth 2.0</h3>") @TO@ sb.append("<div class=\"container\"><h2 class=\"form-signin-heading\">Login with OAuth 2.0</h2>") @AT@ 6206 @LENGTH@ 97
------UPD SimpleName@@MethodName:append:["<div class=\"container\"><h2 class=\"form-signin-heading\">Login with OAuth 2.0</h3>"] @TO@ MethodName:append:["<div class=\"container\"><h2 class=\"form-signin-heading\">Login with OAuth 2.0</h2>"] @AT@ 6209 @LENGTH@ 94
---------UPD StringLiteral@@"<div class=\"container\"><h2 class=\"form-signin-heading\">Login with OAuth 2.0</h3>" @TO@ "<div class=\"container\"><h2 class=\"form-signin-heading\">Login with OAuth 2.0</h2>" @AT@ 6216 @LENGTH@ 86


UPD ExpressionStatement@@MethodInvocation:assertTrue("Should use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @TO@ MethodInvocation:assertFalse("Should not use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @AT@ 2144 @LENGTH@ 90
---UPD MethodInvocation@@assertTrue("Should use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @TO@ assertFalse("Should not use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @AT@ 2144 @LENGTH@ 89
------UPD SimpleName@@MethodName:assertTrue:["Should use same threads", beforeThreadName.equalsIgnoreCase(afterThreadName)] @TO@ MethodName:assertFalse:["Should not use same threads", beforeThreadName.equalsIgnoreCase(afterThreadName)] @AT@ 2144 @LENGTH@ 89
---------UPD StringLiteral@@"Should use same threads" @TO@ "Should not use same threads" @AT@ 2155 @LENGTH@ 25


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 3670 @LENGTH@ 64
---DEL Modifier@@public @AT@ 3670 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 3677 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 3685 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 3715 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 3722 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:next.exchange(refreshRequest).flatMap(refreshResponse -> refreshResponse.body(oauth2AccessTokenResponse())).map(accessTokenResponse -> new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken())).flatMap(result -> this.authorizedClientRepository.saveAuthorizedClient(result,authentication,exchange).thenReturn(result)) @TO@ MethodInvocation:next.exchange(refreshRequest).flatMap(refreshResponse -> refreshResponse.body(oauth2AccessTokenResponse())).map(accessTokenResponse -> {
  OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken());
  return new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),refreshToken);
}
).flatMap(result -> this.authorizedClientRepository.saveAuthorizedClient(result,authentication,exchange).thenReturn(result)) @AT@ 13799 @LENGTH@ 473
---UPD MethodInvocation@@next.exchange(refreshRequest).flatMap(refreshResponse -> refreshResponse.body(oauth2AccessTokenResponse())).map(accessTokenResponse -> new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken())).flatMap(result -> this.authorizedClientRepository.saveAuthorizedClient(result,authentication,exchange).thenReturn(result)) @TO@ next.exchange(refreshRequest).flatMap(refreshResponse -> refreshResponse.body(oauth2AccessTokenResponse())).map(accessTokenResponse -> {
  OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken());
  return new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),refreshToken);
}
).flatMap(result -> this.authorizedClientRepository.saveAuthorizedClient(result,authentication,exchange).thenReturn(result)) @AT@ 13806 @LENGTH@ 465
------UPD MethodInvocation@@MethodName:map:[accessTokenResponse -> new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken())] @TO@ MethodName:map:[accessTokenResponse -> {
  OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken());
  return new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),refreshToken);
}
] @AT@ 13806 @LENGTH@ 328
---------UPD LambdaExpression@@accessTokenResponse -> new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken()) @TO@ accessTokenResponse -> {
  OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken());
  return new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),refreshToken);
}
 @AT@ 13928 @LENGTH@ 205
------------DEL ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), accessTokenResponse.getRefreshToken()] @AT@ 13951 @LENGTH@ 182
---------------DEL MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 14095 @LENGTH@ 37
------------------DEL SimpleName@@Name:accessTokenResponse @AT@ 14095 @LENGTH@ 19
------------------DEL SimpleName@@MethodName:getRefreshToken:[] @AT@ 14115 @LENGTH@ 17
------------INS VariableDeclarationStatement@@OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()); @TO@ LambdaExpression@@accessTokenResponse -> new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken()) @AT@ 13985 @LENGTH@ 144
---------------INS SimpleType@@OAuth2RefreshToken @TO@ VariableDeclarationStatement@@OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()); @AT@ 13985 @LENGTH@ 18
---------------INS VariableDeclarationFragment@@refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @TO@ VariableDeclarationStatement@@OAuth2RefreshToken refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()); @AT@ 14004 @LENGTH@ 124
------------------INS SimpleName@@refreshToken @TO@ VariableDeclarationFragment@@refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @AT@ 14004 @LENGTH@ 12
------------------INS MethodInvocation@@Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @TO@ VariableDeclarationFragment@@refreshToken=Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @AT@ 14019 @LENGTH@ 109
---------------------INS MethodInvocation@@MethodName:ofNullable:[accessTokenResponse.getRefreshToken()] @TO@ MethodInvocation@@Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @AT@ 14019 @LENGTH@ 58
------------------------INS MethodInvocation@@accessTokenResponse.getRefreshToken() @TO@ MethodInvocation@@MethodName:ofNullable:[accessTokenResponse.getRefreshToken()] @AT@ 14039 @LENGTH@ 37
---------------------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 14039 @LENGTH@ 19
---------------------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken() @AT@ 14059 @LENGTH@ 17
---------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @AT@ 14019 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:orElse:[authorizedClient.getRefreshToken()] @TO@ MethodInvocation@@Optional.ofNullable(accessTokenResponse.getRefreshToken()).orElse(authorizedClient.getRefreshToken()) @AT@ 14086 @LENGTH@ 42
------------------------INS MethodInvocation@@authorizedClient.getRefreshToken() @TO@ SimpleName@@MethodName:orElse:[authorizedClient.getRefreshToken()] @AT@ 14093 @LENGTH@ 34
---------------------------INS SimpleName@@Name:authorizedClient @TO@ MethodInvocation@@authorizedClient.getRefreshToken() @AT@ 14093 @LENGTH@ 16
---------------------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@authorizedClient.getRefreshToken() @AT@ 14110 @LENGTH@ 17
------------INS ReturnStatement@@ClassInstanceCreation:new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),refreshToken) @TO@ LambdaExpression@@accessTokenResponse -> new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken()) @AT@ 14135 @LENGTH@ 165
---------------INS ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @TO@ ReturnStatement@@ClassInstanceCreation:new OAuth2AuthorizedClient(authorizedClient.getClientRegistration(),authorizedClient.getPrincipalName(),accessTokenResponse.getAccessToken(),refreshToken) @AT@ 14142 @LENGTH@ 157
------------------MOV New@@new @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @AT@ 13951 @LENGTH@ 3
------------------MOV SimpleType@@OAuth2AuthorizedClient @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @AT@ 13955 @LENGTH@ 22
------------------MOV MethodInvocation@@authorizedClient.getClientRegistration() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @AT@ 13978 @LENGTH@ 40
------------------MOV MethodInvocation@@authorizedClient.getPrincipalName() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @AT@ 14020 @LENGTH@ 35
------------------MOV MethodInvocation@@accessTokenResponse.getAccessToken() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @AT@ 14057 @LENGTH@ 36
------------------INS SimpleName@@refreshToken @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[authorizedClient.getClientRegistration(), authorizedClient.getPrincipalName(), accessTokenResponse.getAccessToken(), refreshToken] @AT@ 14286 @LENGTH@ 12


DEL TryStatement@@try {  return new ChangeSessionIdAuthenticationStrategy();} catch (IllegalStateException e) {  return new SessionFixationProtectionStrategy();} @AT@ 27057 @LENGTH@ 155
---DEL CatchClause@@catch (IllegalStateException e) {  return new SessionFixationProtectionStrategy();} @AT@ 27124 @LENGTH@ 88
------DEL SingleVariableDeclaration@@IllegalStateException e @AT@ 27131 @LENGTH@ 23
---------DEL SimpleType@@IllegalStateException @AT@ 27131 @LENGTH@ 21
---------DEL SimpleName@@e @AT@ 27153 @LENGTH@ 1
------DEL ReturnStatement@@ClassInstanceCreation:new SessionFixationProtectionStrategy() @AT@ 27161 @LENGTH@ 47
---------DEL ClassInstanceCreation@@SessionFixationProtectionStrategy[] @AT@ 27168 @LENGTH@ 39
------------DEL New@@new @AT@ 27168 @LENGTH@ 3
------------DEL SimpleType@@SessionFixationProtectionStrategy @AT@ 27172 @LENGTH@ 33


INS MethodDeclaration@@private, voidMethodName:PulsarMessageUtils,  @TO@ TypeDeclaration@@[public, final]PulsarMessageUtils,  @AT@ 2033 @LENGTH@ 36
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:PulsarMessageUtils,  @AT@ 2033 @LENGTH@ 7
---INS SimpleName@@MethodName:PulsarMessageUtils @TO@ MethodDeclaration@@private, voidMethodName:PulsarMessageUtils,  @AT@ 2041 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:Optional.of(delegate).filter(Named.class::isInstance).map(Named.class::cast).flatMap(Named::getSymbolicName).map(Expression.class::cast).orElse(delegate).accept(visitor) @TO@ MethodInvocation:nameOrExpression(this.delegate).accept(visitor) @AT@ 1790 @LENGTH@ 178
---UPD MethodInvocation@@Optional.of(delegate).filter(Named.class::isInstance).map(Named.class::cast).flatMap(Named::getSymbolicName).map(Expression.class::cast).orElse(delegate).accept(visitor) @TO@ nameOrExpression(this.delegate).accept(visitor) @AT@ 1790 @LENGTH@ 177
------DEL MethodInvocation@@MethodName:orElse:[delegate] @AT@ 1790 @LENGTH@ 161
---------DEL SimpleName@@delegate @AT@ 1942 @LENGTH@ 8
------DEL MethodInvocation@@MethodName:map:[Expression.class::cast] @AT@ 1790 @LENGTH@ 140
------DEL MethodInvocation@@MethodName:flatMap:[Named::getSymbolicName] @AT@ 1790 @LENGTH@ 108
------DEL MethodInvocation@@MethodName:map:[Named.class::cast] @AT@ 1790 @LENGTH@ 76
------DEL MethodInvocation@@MethodName:filter:[Named.class::isInstance] @AT@ 1790 @LENGTH@ 53
------UPD MethodInvocation@@MethodName:of:[delegate] @TO@ MethodName:nameOrExpression:[this.delegate] @AT@ 1790 @LENGTH@ 21
---------INS FieldAccess@@this.delegate @TO@ MethodInvocation@@MethodName:of:[delegate] @AT@ 1801 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.delegate @AT@ 1801 @LENGTH@ 4
------------INS SimpleName@@delegate @TO@ FieldAccess@@this.delegate @AT@ 1806 @LENGTH@ 8
---------DEL SimpleName@@delegate @AT@ 1802 @LENGTH@ 8
------DEL SimpleName@@Name:Optional @AT@ 1790 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertTrue(e.getCause().getMessage().contains("onErrorDelay must be a positive number, was -1")) @TO@ MethodInvocation:assertIsInstanceOf(PropertyBindingException.class,e.getCause()) @AT@ 4962 @LENGTH@ 97
---UPD MethodInvocation@@assertTrue(e.getCause().getMessage().contains("onErrorDelay must be a positive number, was -1")) @TO@ assertIsInstanceOf(PropertyBindingException.class,e.getCause()) @AT@ 4962 @LENGTH@ 96
------UPD SimpleName@@MethodName:assertTrue:[e.getCause().getMessage().contains("onErrorDelay must be a positive number, was -1")] @TO@ MethodName:assertIsInstanceOf:[PropertyBindingException.class, e.getCause()] @AT@ 4962 @LENGTH@ 96
---------UPD MethodInvocation@@e.getCause().getMessage().contains("onErrorDelay must be a positive number, was -1") @TO@ e.getCause() @AT@ 4973 @LENGTH@ 84
------------DEL MethodInvocation@@MethodName:getMessage:[] @AT@ 4973 @LENGTH@ 25
------------DEL MethodInvocation@@MethodName:getCause:[] @AT@ 4973 @LENGTH@ 12
------------UPD SimpleName@@MethodName:contains:["onErrorDelay must be a positive number, was -1"] @TO@ MethodName:getCause:[] @AT@ 4999 @LENGTH@ 58
---------------DEL StringLiteral@@"onErrorDelay must be a positive number, was -1" @AT@ 5008 @LENGTH@ 48
---------INS TypeLiteral@@PropertyBindingException.class @TO@ SimpleName@@MethodName:assertTrue:[e.getCause().getMessage().contains("onErrorDelay must be a positive number, was -1")] @AT@ 5031 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:parsedOp.parseHeaders(buffer,ctx) @TO@ MethodInvocation:parsedOp.parseOperation(null,buffer,ctx) @AT@ 2839 @LENGTH@ 35
---UPD MethodInvocation@@parsedOp.parseHeaders(buffer,ctx) @TO@ parsedOp.parseOperation(null,buffer,ctx) @AT@ 2839 @LENGTH@ 34
------UPD SimpleName@@MethodName:parseHeaders:[buffer, ctx] @TO@ MethodName:parseOperation:[null, buffer, ctx] @AT@ 2848 @LENGTH@ 25
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:parseHeaders:[buffer, ctx] @AT@ 2939 @LENGTH@ 4


UPD ReturnStatement@@InfixExpression:"ListenerContainerIdleEvent [idleTime=" + ((float)this.idleTime / 1000) + "s, listenerId="+ this.listenerId+ ", container="+ getSource()+ "]" @TO@ InfixExpression:"ListenerContainerIdleEvent [idleTime=" + Duration.ofMillis(this.idleTime) + ", listenerId="+ this.listenerId+ ", container="+ getSource()+ "]" @AT@ 1965 @LENGTH@ 162
---UPD InfixExpression@@"ListenerContainerIdleEvent [idleTime=" + ((float)this.idleTime / 1000) + "s, listenerId="+ this.listenerId+ ", container="+ getSource()+ "]" @TO@ "ListenerContainerIdleEvent [idleTime=" + Duration.ofMillis(this.idleTime) + ", listenerId="+ this.listenerId+ ", container="+ getSource()+ "]" @AT@ 1972 @LENGTH@ 154
------DEL ParenthesizedExpression@@((float)this.idleTime / 1000) @AT@ 2018 @LENGTH@ 30
---------DEL InfixExpression@@(float)this.idleTime / 1000 @AT@ 2019 @LENGTH@ 28
------------DEL CastExpression@@(float)this.idleTime @AT@ 2019 @LENGTH@ 21
---------------DEL PrimitiveType@@float @AT@ 2020 @LENGTH@ 5
---------------DEL FieldAccess@@this.idleTime @AT@ 2027 @LENGTH@ 13
------------DEL Operator@@/ @AT@ 2040 @LENGTH@ 1
------------DEL NumberLiteral@@1000 @AT@ 2043 @LENGTH@ 4
------INS MethodInvocation@@Duration.ofMillis(this.idleTime) @TO@ InfixExpression@@"ListenerContainerIdleEvent [idleTime=" + ((float)this.idleTime / 1000) + "s, listenerId="+ this.listenerId+ ", container="+ getSource()+ "]" @AT@ 2045 @LENGTH@ 32
---------INS SimpleName@@Name:Duration @TO@ MethodInvocation@@Duration.ofMillis(this.idleTime) @AT@ 2045 @LENGTH@ 8
---------INS SimpleName@@MethodName:ofMillis:[this.idleTime] @TO@ MethodInvocation@@Duration.ofMillis(this.idleTime) @AT@ 2054 @LENGTH@ 23
------------INS FieldAccess@@this.idleTime @TO@ SimpleName@@MethodName:ofMillis:[this.idleTime] @AT@ 2063 @LENGTH@ 13
---------------MOV ThisExpression@@this @TO@ FieldAccess@@this.idleTime @AT@ 2027 @LENGTH@ 4
---------------MOV SimpleName@@idleTime @TO@ FieldAccess@@this.idleTime @AT@ 2032 @LENGTH@ 8
------UPD StringLiteral@@"s, listenerId=" @TO@ ", listenerId=" @AT@ 2051 @LENGTH@ 16


UPD MethodDeclaration@@void, MethodName:process, final AsyncProcessor processor, final Exchange exchange,  @TO@ void, MethodName:process, AsyncProcessor processor, Exchange exchange,  @AT@ 3951 @LENGTH@ 65
---UPD SingleVariableDeclaration@@final AsyncProcessor processor @TO@ AsyncProcessor processor @AT@ 3959 @LENGTH@ 30
------DEL Modifier@@final @AT@ 3959 @LENGTH@ 5
---UPD SingleVariableDeclaration@@final Exchange exchange @TO@ Exchange exchange @AT@ 3991 @LENGTH@ 23
------DEL Modifier@@final @AT@ 3991 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:timeDomain.setListOfDurations(Collections.singletonList(Duration.ofMinutes(42))) @TO@ MethodDeclaration@@public, void, MethodName:setUpDomainObject,  @AT@ 2219 @LENGTH@ 81
---INS MethodInvocation@@timeDomain.setListOfDurations(Collections.singletonList(Duration.ofMinutes(42))) @TO@ ExpressionStatement@@MethodInvocation:timeDomain.setListOfDurations(Collections.singletonList(Duration.ofMinutes(42))) @AT@ 2219 @LENGTH@ 80
------INS SimpleName@@Name:timeDomain @TO@ MethodInvocation@@timeDomain.setListOfDurations(Collections.singletonList(Duration.ofMinutes(42))) @AT@ 2219 @LENGTH@ 10
------INS SimpleName@@MethodName:setListOfDurations:[Collections.singletonList(Duration.ofMinutes(42))] @TO@ MethodInvocation@@timeDomain.setListOfDurations(Collections.singletonList(Duration.ofMinutes(42))) @AT@ 2230 @LENGTH@ 69
---------INS MethodInvocation@@Collections.singletonList(Duration.ofMinutes(42)) @TO@ SimpleName@@MethodName:setListOfDurations:[Collections.singletonList(Duration.ofMinutes(42))] @AT@ 2249 @LENGTH@ 49
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonList(Duration.ofMinutes(42)) @AT@ 2249 @LENGTH@ 11
------------INS SimpleName@@MethodName:singletonList:[Duration.ofMinutes(42)] @TO@ MethodInvocation@@Collections.singletonList(Duration.ofMinutes(42)) @AT@ 2261 @LENGTH@ 37
---------------INS MethodInvocation@@Duration.ofMinutes(42) @TO@ SimpleName@@MethodName:singletonList:[Duration.ofMinutes(42)] @AT@ 2275 @LENGTH@ 22
------------------INS SimpleName@@Name:Duration @TO@ MethodInvocation@@Duration.ofMinutes(42) @AT@ 2275 @LENGTH@ 8
------------------INS SimpleName@@MethodName:ofMinutes:[42] @TO@ MethodInvocation@@Duration.ofMinutes(42) @AT@ 2284 @LENGTH@ 13
---------------------INS NumberLiteral@@42 @TO@ SimpleName@@MethodName:ofMinutes:[42] @AT@ 2294 @LENGTH@ 2


UPD SynchronizedStatement@@synchronized (this.jwkDefinitions) {  this.jwkDefinitions.clear();  for (  URL jwkSetUrl : jwkSetUrls) {    this.jwkDefinitions.putAll(loadJwkDefinitions(jwkSetUrl));  }  return this.getDefinition(keyId);} @TO@ synchronized (this.jwkDefinitions) {  result=this.getDefinition(keyId);  if (result != null) {    return result;  }  this.jwkDefinitions.clear();  for (  URL jwkSetUrl : jwkSetUrls) {    this.jwkDefinitions.putAll(loadJwkDefinitions(jwkSetUrl));  }  return this.getDefinition(keyId);} @AT@ 3359 @LENGTH@ 215
---UPD Block@@SyncBody:{  this.jwkDefinitions.clear();  for (  URL jwkSetUrl : jwkSetUrls) {    this.jwkDefinitions.putAll(loadJwkDefinitions(jwkSetUrl));  }  return this.getDefinition(keyId);} @TO@ SyncBody:{  result=this.getDefinition(keyId);  if (result != null) {    return result;  }  this.jwkDefinitions.clear();  for (  URL jwkSetUrl : jwkSetUrls) {    this.jwkDefinitions.putAll(loadJwkDefinitions(jwkSetUrl));  }  return this.getDefinition(keyId);} @AT@ 3394 @LENGTH@ 180
------INS ExpressionStatement@@Assignment:result=this.getDefinition(keyId) @TO@ Block@@SyncBody:{  this.jwkDefinitions.clear();  for (  URL jwkSetUrl : jwkSetUrls) {    this.jwkDefinitions.putAll(loadJwkDefinitions(jwkSetUrl));  }  return this.getDefinition(keyId);} @AT@ 3399 @LENGTH@ 35
---------INS Assignment@@result=this.getDefinition(keyId) @TO@ ExpressionStatement@@Assignment:result=this.getDefinition(keyId) @AT@ 3399 @LENGTH@ 34
------------INS SimpleName@@result @TO@ Assignment@@result=this.getDefinition(keyId) @AT@ 3399 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@result=this.getDefinition(keyId) @AT@ 3405 @LENGTH@ 1
------------INS MethodInvocation@@this.getDefinition(keyId) @TO@ Assignment@@result=this.getDefinition(keyId) @AT@ 3408 @LENGTH@ 25
---------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getDefinition(keyId) @AT@ 3408 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getDefinition:[keyId] @TO@ MethodInvocation@@this.getDefinition(keyId) @AT@ 3413 @LENGTH@ 20
------------------INS SimpleName@@keyId @TO@ SimpleName@@MethodName:getDefinition:[keyId] @AT@ 3427 @LENGTH@ 5
------INS IfStatement@@if (result != null) {  return result;} @TO@ Block@@SyncBody:{  this.jwkDefinitions.clear();  for (  URL jwkSetUrl : jwkSetUrls) {    this.jwkDefinitions.putAll(loadJwkDefinitions(jwkSetUrl));  }  return this.getDefinition(keyId);} @AT@ 3438 @LENGTH@ 45
---------INS InfixExpression@@result != null @TO@ IfStatement@@if (result != null) {  return result;} @AT@ 3442 @LENGTH@ 14
------------INS SimpleName@@result @TO@ InfixExpression@@result != null @AT@ 3442 @LENGTH@ 6
------------INS Operator@@!= @TO@ InfixExpression@@result != null @AT@ 3448 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@result != null @AT@ 3452 @LENGTH@ 4
---------INS Block@@ThenBody:{  return result;} @TO@ IfStatement@@if (result != null) {  return result;} @AT@ 3458 @LENGTH@ 25
------------INS ReturnStatement@@SimpleName:result @TO@ Block@@ThenBody:{  return result;} @AT@ 3464 @LENGTH@ 14
---------------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 3471 @LENGTH@ 6


UPD Block@@WhileBody:{  String key=it.next().replace("\\.",".");  if (!(current instanceof Bson) && !key.startsWith("[")) {    return Lookup.found(null);  }  if (key.startsWith("[")) {    String indexNumber=key.substring(1,key.indexOf("]"));    if (current instanceof List) {      current=((List)current).get(Integer.valueOf(indexNumber));    }    if (!it.hasNext()) {      return Lookup.found((T)current);    }  } else {    if (current instanceof Document) {      Document document=(Document)current;      if (!it.hasNext() && !document.containsKey(key)) {        return Lookup.notFound();      }      current=document.get(key);    }    if (!it.hasNext()) {      return Lookup.found((T)current);    }  }} @TO@ WhileBody:{  String key=it.next().replace("\\.",".");  if ((!(current instanceof Bson) && !(current instanceof Map)) && !key.startsWith("[")) {    return Lookup.found(null);  }  if (key.startsWith("[")) {    String indexNumber=key.substring(1,key.indexOf("]"));    if (current instanceof List) {      current=((List)current).get(Integer.valueOf(indexNumber));    }    if (!it.hasNext()) {      return Lookup.found((T)current);    }  } else {    if (current instanceof Document) {      Document document=(Document)current;      if (!it.hasNext() && !document.containsKey(key)) {        return Lookup.notFound();      }      current=document.get(key);    } else     if (current instanceof Map) {      Map document=(Map)current;      if (!it.hasNext() && !document.containsKey(key)) {        return Lookup.notFound();      }      current=document.get(key);    }    if (!it.hasNext()) {      return Lookup.found((T)current);    }  }} @AT@ 8144 @LENGTH@ 735
---UPD IfStatement@@if (!(current instanceof Bson) && !key.startsWith("[")) {  return Lookup.found(null);} @TO@ if ((!(current instanceof Bson) && !(current instanceof Map)) && !key.startsWith("[")) {  return Lookup.found(null);} @AT@ 8198 @LENGTH@ 93
------UPD InfixExpression@@!(current instanceof Bson) && !key.startsWith("[") @TO@ (!(current instanceof Bson) && !(current instanceof Map)) && !key.startsWith("[") @AT@ 8202 @LENGTH@ 50
---------INS ParenthesizedExpression@@(!(current instanceof Bson) && !(current instanceof Map)) @TO@ InfixExpression@@!(current instanceof Bson) && !key.startsWith("[") @AT@ 8202 @LENGTH@ 57
------------INS InfixExpression@@!(current instanceof Bson) && !(current instanceof Map) @TO@ ParenthesizedExpression@@(!(current instanceof Bson) && !(current instanceof Map)) @AT@ 8203 @LENGTH@ 55
---------------MOV PrefixExpression@@!(current instanceof Bson) @TO@ InfixExpression@@!(current instanceof Bson) && !(current instanceof Map) @AT@ 8202 @LENGTH@ 26
---------------MOV PrefixExpression@@!(current instanceof Bson) @TO@ InfixExpression@@!(current instanceof Bson) && !(current instanceof Map) @AT@ 8202 @LENGTH@ 26
---------------MOV Operator@@&& @TO@ InfixExpression@@!(current instanceof Bson) && !(current instanceof Map) @AT@ 8228 @LENGTH@ 2
---------------INS PrefixExpression@@!(current instanceof Map) @TO@ InfixExpression@@!(current instanceof Bson) && !(current instanceof Map) @AT@ 8233 @LENGTH@ 25
------------------INS Operator@@! @TO@ PrefixExpression@@!(current instanceof Map) @AT@ 8233 @LENGTH@ 1
------------------INS ParenthesizedExpression@@(current instanceof Map) @TO@ PrefixExpression@@!(current instanceof Map) @AT@ 8234 @LENGTH@ 24
---------------------INS InstanceofExpression@@current instanceof Map @TO@ ParenthesizedExpression@@(current instanceof Map) @AT@ 8235 @LENGTH@ 22
------------------------INS SimpleName@@current @TO@ InstanceofExpression@@current instanceof Map @AT@ 8235 @LENGTH@ 7
------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@current instanceof Map @AT@ 8243 @LENGTH@ 10
------------------------INS SimpleType@@Map @TO@ InstanceofExpression@@current instanceof Map @AT@ 8254 @LENGTH@ 3
---------INS Operator@@&& @TO@ InfixExpression@@!(current instanceof Bson) && !key.startsWith("[") @AT@ 8259 @LENGTH@ 2
---UPD IfStatement@@if (key.startsWith("[")) {  String indexNumber=key.substring(1,key.indexOf("]"));  if (current instanceof List) {    current=((List)current).get(Integer.valueOf(indexNumber));  }  if (!it.hasNext()) {    return Lookup.found((T)current);  }} else {  if (current instanceof Document) {    Document document=(Document)current;    if (!it.hasNext() && !document.containsKey(key)) {      return Lookup.notFound();    }    current=document.get(key);  }  if (!it.hasNext()) {    return Lookup.found((T)current);  }} @TO@ if (key.startsWith("[")) {  String indexNumber=key.substring(1,key.indexOf("]"));  if (current instanceof List) {    current=((List)current).get(Integer.valueOf(indexNumber));  }  if (!it.hasNext()) {    return Lookup.found((T)current);  }} else {  if (current instanceof Document) {    Document document=(Document)current;    if (!it.hasNext() && !document.containsKey(key)) {      return Lookup.notFound();    }    current=document.get(key);  } else   if (current instanceof Map) {    Map document=(Map)current;    if (!it.hasNext() && !document.containsKey(key)) {      return Lookup.notFound();    }    current=document.get(key);  }  if (!it.hasNext()) {    return Lookup.found((T)current);  }} @AT@ 8296 @LENGTH@ 579
------UPD Block@@ElseBody:{  if (current instanceof Document) {    Document document=(Document)current;    if (!it.hasNext() && !document.containsKey(key)) {      return Lookup.notFound();    }    current=document.get(key);  }  if (!it.hasNext()) {    return Lookup.found((T)current);  }} @TO@ ElseBody:{  if (current instanceof Document) {    Document document=(Document)current;    if (!it.hasNext() && !document.containsKey(key)) {      return Lookup.notFound();    }    current=document.get(key);  } else   if (current instanceof Map) {    Map document=(Map)current;    if (!it.hasNext() && !document.containsKey(key)) {      return Lookup.notFound();    }    current=document.get(key);  }  if (!it.hasNext()) {    return Lookup.found((T)current);  }} @AT@ 8575 @LENGTH@ 300
---------UPD IfStatement@@if (current instanceof Document) {  Document document=(Document)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} @TO@ if (current instanceof Document) {  Document document=(Document)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} else if (current instanceof Map) {  Map document=(Map)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} @AT@ 8582 @LENGTH@ 217
------------INS Block@@ElseBody:if (current instanceof Map) {  Map document=(Map)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} @TO@ IfStatement@@if (current instanceof Document) {  Document document=(Document)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} @AT@ 8841 @LENGTH@ 202
---------------INS IfStatement@@if (current instanceof Map) {  Map document=(Map)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} @TO@ Block@@ElseBody:if (current instanceof Map) {  Map document=(Map)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} @AT@ 8841 @LENGTH@ 202
------------------INS InstanceofExpression@@current instanceof Map @TO@ IfStatement@@if (current instanceof Map) {  Map document=(Map)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} @AT@ 8845 @LENGTH@ 22
---------------------INS SimpleName@@current @TO@ InstanceofExpression@@current instanceof Map @AT@ 8845 @LENGTH@ 7
---------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@current instanceof Map @AT@ 8853 @LENGTH@ 10
---------------------INS SimpleType@@Map @TO@ InstanceofExpression@@current instanceof Map @AT@ 8864 @LENGTH@ 3
------------------INS Block@@ThenBody:{  Map document=(Map)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} @TO@ IfStatement@@if (current instanceof Map) {  Map document=(Map)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} @AT@ 8869 @LENGTH@ 174
---------------------INS VariableDeclarationStatement@@Map document=(Map)current; @TO@ Block@@ThenBody:{  Map document=(Map)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} @AT@ 8877 @LENGTH@ 29
------------------------INS SimpleType@@Map @TO@ VariableDeclarationStatement@@Map document=(Map)current; @AT@ 8877 @LENGTH@ 3
------------------------INS VariableDeclarationFragment@@document=(Map)current @TO@ VariableDeclarationStatement@@Map document=(Map)current; @AT@ 8881 @LENGTH@ 24
---------------------------INS SimpleName@@document @TO@ VariableDeclarationFragment@@document=(Map)current @AT@ 8881 @LENGTH@ 8
---------------------------INS CastExpression@@(Map)current @TO@ VariableDeclarationFragment@@document=(Map)current @AT@ 8892 @LENGTH@ 13
------------------------------INS SimpleType@@Map @TO@ CastExpression@@(Map)current @AT@ 8893 @LENGTH@ 3
------------------------------INS SimpleName@@current @TO@ CastExpression@@(Map)current @AT@ 8898 @LENGTH@ 7
---------------------INS IfStatement@@if (!it.hasNext() && !document.containsKey(key)) {  return Lookup.notFound();} @TO@ Block@@ThenBody:{  Map document=(Map)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} @AT@ 8913 @LENGTH@ 89
------------------------INS InfixExpression@@!it.hasNext() && !document.containsKey(key) @TO@ IfStatement@@if (!it.hasNext() && !document.containsKey(key)) {  return Lookup.notFound();} @AT@ 8917 @LENGTH@ 43
---------------------------INS PrefixExpression@@!it.hasNext() @TO@ InfixExpression@@!it.hasNext() && !document.containsKey(key) @AT@ 8917 @LENGTH@ 13
------------------------------INS Operator@@! @TO@ PrefixExpression@@!it.hasNext() @AT@ 8917 @LENGTH@ 1
------------------------------INS MethodInvocation@@it.hasNext() @TO@ PrefixExpression@@!it.hasNext() @AT@ 8918 @LENGTH@ 12
---------------------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.hasNext() @AT@ 8918 @LENGTH@ 2
---------------------------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@it.hasNext() @AT@ 8921 @LENGTH@ 9
---------------------------INS Operator@@&& @TO@ InfixExpression@@!it.hasNext() && !document.containsKey(key) @AT@ 8930 @LENGTH@ 2
---------------------------INS PrefixExpression@@!document.containsKey(key) @TO@ InfixExpression@@!it.hasNext() && !document.containsKey(key) @AT@ 8934 @LENGTH@ 26
------------------------------INS Operator@@! @TO@ PrefixExpression@@!document.containsKey(key) @AT@ 8934 @LENGTH@ 1
------------------------------INS MethodInvocation@@document.containsKey(key) @TO@ PrefixExpression@@!document.containsKey(key) @AT@ 8935 @LENGTH@ 25
---------------------------------INS SimpleName@@Name:document @TO@ MethodInvocation@@document.containsKey(key) @AT@ 8935 @LENGTH@ 8
---------------------------------INS SimpleName@@MethodName:containsKey:[key] @TO@ MethodInvocation@@document.containsKey(key) @AT@ 8944 @LENGTH@ 16
------------------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:containsKey:[key] @AT@ 8956 @LENGTH@ 3
------------------------INS Block@@ThenBody:{  return Lookup.notFound();} @TO@ IfStatement@@if (!it.hasNext() && !document.containsKey(key)) {  return Lookup.notFound();} @AT@ 8962 @LENGTH@ 40
---------------------------INS ReturnStatement@@MethodInvocation:Lookup.notFound() @TO@ Block@@ThenBody:{  return Lookup.notFound();} @AT@ 8970 @LENGTH@ 25
------------------------------INS MethodInvocation@@Lookup.notFound() @TO@ ReturnStatement@@MethodInvocation:Lookup.notFound() @AT@ 8977 @LENGTH@ 17
---------------------------------INS SimpleName@@Name:Lookup @TO@ MethodInvocation@@Lookup.notFound() @AT@ 8977 @LENGTH@ 6
---------------------------------INS SimpleName@@MethodName:notFound:[] @TO@ MethodInvocation@@Lookup.notFound() @AT@ 8984 @LENGTH@ 10
---------------------INS ExpressionStatement@@Assignment:current=document.get(key) @TO@ Block@@ThenBody:{  Map document=(Map)current;  if (!it.hasNext() && !document.containsKey(key)) {    return Lookup.notFound();  }  current=document.get(key);} @AT@ 9009 @LENGTH@ 28
------------------------INS Assignment@@current=document.get(key) @TO@ ExpressionStatement@@Assignment:current=document.get(key) @AT@ 9009 @LENGTH@ 27
---------------------------INS SimpleName@@current @TO@ Assignment@@current=document.get(key) @AT@ 9009 @LENGTH@ 7
---------------------------INS Operator@@= @TO@ Assignment@@current=document.get(key) @AT@ 9016 @LENGTH@ 1
---------------------------INS MethodInvocation@@document.get(key) @TO@ Assignment@@current=document.get(key) @AT@ 9019 @LENGTH@ 17
------------------------------INS SimpleName@@Name:document @TO@ MethodInvocation@@document.get(key) @AT@ 9019 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:get:[key] @TO@ MethodInvocation@@document.get(key) @AT@ 9028 @LENGTH@ 8
---------------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:get:[key] @AT@ 9032 @LENGTH@ 3


DEL ExpressionStatement@@MethodInvocation:connectionFactory.setHost("localhost") @AT@ 4030 @LENGTH@ 39
---DEL MethodInvocation@@connectionFactory.setHost("localhost") @AT@ 4030 @LENGTH@ 38
------DEL SimpleName@@Name:connectionFactory @AT@ 4030 @LENGTH@ 17
------DEL SimpleName@@MethodName:setHost:["localhost"] @AT@ 4048 @LENGTH@ 20
---------DEL StringLiteral@@"localhost" @AT@ 4056 @LENGTH@ 11


MOV MethodDeclaration@@public, static, ValidatorReifier<? extends ValidatorDefinition>, MethodName:reifier, ValidatorDefinition definition,  @TO@ TypeDeclaration@@[public, abstract]ValidatorReifier,  @AT@ 1877 @LENGTH@ 414


DEL FieldDeclaration@@private, static, final, String, [PATH_PREFIX=GoogleDriveApiCollection.getCollection().getApiName(DriveFilesApiMethod.class).getName()] @AT@ 1469 @LENGTH@ 131
---DEL Modifier@@private @AT@ 1469 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1477 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1484 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 1490 @LENGTH@ 6
---DEL VariableDeclarationFragment@@PATH_PREFIX=GoogleDriveApiCollection.getCollection().getApiName(DriveFilesApiMethod.class).getName() @AT@ 1497 @LENGTH@ 102
------DEL SimpleName@@PATH_PREFIX @AT@ 1497 @LENGTH@ 11
------DEL MethodInvocation@@GoogleDriveApiCollection.getCollection().getApiName(DriveFilesApiMethod.class).getName() @AT@ 1511 @LENGTH@ 88
---------DEL MethodInvocation@@MethodName:getApiName:[DriveFilesApiMethod.class] @AT@ 1511 @LENGTH@ 78
------------DEL TypeLiteral@@DriveFilesApiMethod.class @AT@ 1563 @LENGTH@ 25
---------DEL MethodInvocation@@MethodName:getCollection:[] @AT@ 1511 @LENGTH@ 40
---------DEL SimpleName@@Name:GoogleDriveApiCollection @AT@ 1511 @LENGTH@ 24
---------DEL SimpleName@@MethodName:getName:[] @AT@ 1590 @LENGTH@ 9


INS MethodDeclaration@@Integer, MethodName:explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName, Integer arg,  @TO@ TypeDeclaration@@[static]DummyRepository,  @AT@ 7182 @LENGTH@ 75
---INS SimpleType@@Integer @TO@ MethodDeclaration@@Integer, MethodName:explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName, Integer arg,  @AT@ 7174 @LENGTH@ 7
---INS SimpleName@@MethodName:explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName @TO@ MethodDeclaration@@Integer, MethodName:explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName, Integer arg,  @AT@ 7182 @LENGTH@ 61
---INS SingleVariableDeclaration@@Integer arg @TO@ MethodDeclaration@@Integer, MethodName:explicitPlus1inoutViaProcedureNameAliasAndOutputParameterName, Integer arg,  @AT@ 7244 @LENGTH@ 11
------INS SimpleType@@Integer @TO@ SingleVariableDeclaration@@Integer arg @AT@ 7244 @LENGTH@ 7
------INS SimpleName@@arg @TO@ SingleVariableDeclaration@@Integer arg @AT@ 7252 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertFalse("Should not use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @TO@ MethodInvocation:assertTrue("Should use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @AT@ 2161 @LENGTH@ 95
---UPD MethodInvocation@@assertFalse("Should not use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @TO@ assertTrue("Should use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @AT@ 2161 @LENGTH@ 94
------UPD SimpleName@@MethodName:assertFalse:["Should not use same threads", beforeThreadName.equalsIgnoreCase(afterThreadName)] @TO@ MethodName:assertTrue:["Should use same threads", beforeThreadName.equalsIgnoreCase(afterThreadName)] @AT@ 2161 @LENGTH@ 94
---------UPD StringLiteral@@"Should not use same threads" @TO@ "Should use same threads" @AT@ 2173 @LENGTH@ 29


UPD VariableDeclarationStatement@@ByteBuffer bb=ByteBuffer.wrap(new byte[16]); @TO@ ByteBuffer bb=ByteBuffer.wrap(new byte[SIXTEEN]); @AT@ 1907 @LENGTH@ 46
---UPD VariableDeclarationFragment@@bb=ByteBuffer.wrap(new byte[16]) @TO@ bb=ByteBuffer.wrap(new byte[SIXTEEN]) @AT@ 1918 @LENGTH@ 34
------UPD MethodInvocation@@ByteBuffer.wrap(new byte[16]) @TO@ ByteBuffer.wrap(new byte[SIXTEEN]) @AT@ 1923 @LENGTH@ 29
---------UPD SimpleName@@MethodName:wrap:[new byte[16]] @TO@ MethodName:wrap:[new byte[SIXTEEN]] @AT@ 1934 @LENGTH@ 18
------------UPD ArrayCreation@@new byte[16] @TO@ new byte[SIXTEEN] @AT@ 1939 @LENGTH@ 12
---------------DEL NumberLiteral@@16 @AT@ 1948 @LENGTH@ 2
---------------INS SimpleName@@SIXTEEN @TO@ ArrayCreation@@new byte[16] @AT@ 1989 @LENGTH@ 7


MOV MethodDeclaration@@public, static, ProcessorReifier<? extends ProcessorDefinition<?>>, MethodName:reifier, ProcessorDefinition<?> definition,  @TO@ TypeDeclaration@@[public, abstract]ProcessorReifier,  @AT@ 10040 @LENGTH@ 426


INS MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, WebFilter... webFilters,  @TO@ TypeDeclaration@@[public]WebTestClientBuilder,  @AT@ 1784 @LENGTH@ 195
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, WebFilter... webFilters,  @AT@ 1784 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, WebFilter... webFilters,  @AT@ 1791 @LENGTH@ 6
---INS SimpleType@@Builder @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, WebFilter... webFilters,  @AT@ 1798 @LENGTH@ 7
---INS SimpleName@@MethodName:bindToControllerAndWebFilters @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, WebFilter... webFilters,  @AT@ 1806 @LENGTH@ 29
---INS SingleVariableDeclaration@@Class<?> controller @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, WebFilter... webFilters,  @AT@ 1836 @LENGTH@ 19
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> controller @AT@ 1836 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1836 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1842 @LENGTH@ 1
------INS SimpleName@@controller @TO@ SingleVariableDeclaration@@Class<?> controller @AT@ 1845 @LENGTH@ 10
---INS SingleVariableDeclaration@@WebFilter... webFilters @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, WebFilter... webFilters,  @AT@ 1857 @LENGTH@ 23
------INS SimpleType@@WebFilter @TO@ SingleVariableDeclaration@@WebFilter... webFilters @AT@ 1857 @LENGTH@ 9
------INS SimpleName@@webFilters @TO@ SingleVariableDeclaration@@WebFilter... webFilters @AT@ 1870 @LENGTH@ 10
---INS ReturnStatement@@MethodInvocation:WebTestClient.bindToController(controller).webFilter(webFilters).configureClient() @TO@ MethodDeclaration@@public, static, Builder, MethodName:bindToControllerAndWebFilters, Class<?> controller, WebFilter... webFilters,  @AT@ 1886 @LENGTH@ 90
------INS MethodInvocation@@WebTestClient.bindToController(controller).webFilter(webFilters).configureClient() @TO@ ReturnStatement@@MethodInvocation:WebTestClient.bindToController(controller).webFilter(webFilters).configureClient() @AT@ 1893 @LENGTH@ 82
---------INS MethodInvocation@@MethodName:webFilter:[webFilters] @TO@ MethodInvocation@@WebTestClient.bindToController(controller).webFilter(webFilters).configureClient() @AT@ 1893 @LENGTH@ 64
------------INS SimpleName@@webFilters @TO@ MethodInvocation@@MethodName:webFilter:[webFilters] @AT@ 1946 @LENGTH@ 10
---------INS MethodInvocation@@MethodName:bindToController:[controller] @TO@ MethodInvocation@@WebTestClient.bindToController(controller).webFilter(webFilters).configureClient() @AT@ 1893 @LENGTH@ 42
------------INS SimpleName@@controller @TO@ MethodInvocation@@MethodName:bindToController:[controller] @AT@ 1924 @LENGTH@ 10
---------INS SimpleName@@Name:WebTestClient @TO@ MethodInvocation@@WebTestClient.bindToController(controller).webFilter(webFilters).configureClient() @AT@ 1893 @LENGTH@ 13
---------INS SimpleName@@MethodName:configureClient:[] @TO@ MethodInvocation@@WebTestClient.bindToController(controller).webFilter(webFilters).configureClient() @AT@ 1958 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"")) @AT@ 14051 @LENGTH@ 244
---UPD MethodInvocation@@assertTrue(json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"")) @TO@ assertTrue(json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"")) @AT@ 14051 @LENGTH@ 243
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"")] @TO@ MethodName:assertTrue:[json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"")] @AT@ 14051 @LENGTH@ 243
---------UPD MethodInvocation@@json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"") @TO@ json.contains("\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"") @AT@ 14062 @LENGTH@ 231
------------UPD SimpleName@@MethodName:contains:["\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\""] @TO@ MethodName:contains:["\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\""] @AT@ 14067 @LENGTH@ 226
---------------UPD InfixExpression@@"\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"" @TO@ "\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," + " \"javaType\": \"java.lang.Integer\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"5\"" @AT@ 14076 @LENGTH@ 216
------------------UPD StringLiteral@@"\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"integer\"," @TO@ "\"groupSize\": { \"kind\": \"parameter\", \"group\": \"producer\", \"required\": \"false\", \"type\": \"integer\"," @AT@ 14076 @LENGTH@ 91


UPD FieldDeclaration@@public, static, final, Class, [CAMEL_NESTED_CLASS=org.apache.camel.converter.jaxp.XmlConverter.class] @TO@ public, static, final, Class, [CAMEL_NESTED_CLASS=org.apache.camel.component.xslt.XmlConverter.class] @AT@ 5887 @LENGTH@ 98
---UPD VariableDeclarationFragment@@CAMEL_NESTED_CLASS=org.apache.camel.converter.jaxp.XmlConverter.class @TO@ CAMEL_NESTED_CLASS=org.apache.camel.component.xslt.XmlConverter.class @AT@ 5913 @LENGTH@ 71
------UPD TypeLiteral@@org.apache.camel.converter.jaxp.XmlConverter.class @TO@ org.apache.camel.component.xslt.XmlConverter.class @AT@ 5934 @LENGTH@ 50


UPD IfStatement@@if (this == o) return true; @TO@ if (this == o) {  return true;} @AT@ 1258 @LENGTH@ 27
---UPD Block@@ThenBody:return true; @TO@ ThenBody:{  return true;} @AT@ 1273 @LENGTH@ 12


UPD ReturnStatement@@ClassInstanceCreation:new BeanDefinitionHolder(builder.getBeanDefinition(),generateBeanName()) @TO@ ClassInstanceCreation:new BeanDefinitionHolder(builder.getBeanDefinition(),generateBeanName(builder.getRawBeanDefinition().getBeanClass().getSimpleName())) @AT@ 7322 @LENGTH@ 81
---UPD ClassInstanceCreation@@BeanDefinitionHolder[builder.getBeanDefinition(), generateBeanName()] @TO@ BeanDefinitionHolder[builder.getBeanDefinition(), generateBeanName(builder.getRawBeanDefinition().getBeanClass().getSimpleName())] @AT@ 7329 @LENGTH@ 73
------INS MethodInvocation@@generateBeanName(builder.getRawBeanDefinition().getBeanClass().getSimpleName()) @TO@ ClassInstanceCreation@@BeanDefinitionHolder[builder.getBeanDefinition(), generateBeanName()] @AT@ 7361 @LENGTH@ 79
---------INS SimpleName@@MethodName:generateBeanName:[builder.getRawBeanDefinition().getBeanClass().getSimpleName()] @TO@ MethodInvocation@@generateBeanName(builder.getRawBeanDefinition().getBeanClass().getSimpleName()) @AT@ 7361 @LENGTH@ 79
------------INS MethodInvocation@@builder.getRawBeanDefinition().getBeanClass().getSimpleName() @TO@ SimpleName@@MethodName:generateBeanName:[builder.getRawBeanDefinition().getBeanClass().getSimpleName()] @AT@ 7378 @LENGTH@ 61
---------------INS MethodInvocation@@MethodName:getBeanClass:[] @TO@ MethodInvocation@@builder.getRawBeanDefinition().getBeanClass().getSimpleName() @AT@ 7378 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:getRawBeanDefinition:[] @TO@ MethodInvocation@@builder.getRawBeanDefinition().getBeanClass().getSimpleName() @AT@ 7378 @LENGTH@ 30
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getRawBeanDefinition().getBeanClass().getSimpleName() @AT@ 7378 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@builder.getRawBeanDefinition().getBeanClass().getSimpleName() @AT@ 7424 @LENGTH@ 15
------DEL MethodInvocation@@MethodName:generateBeanName:[] @AT@ 7383 @LENGTH@ 18


UPD IfStatement@@if (value == null) throw new RuntimeExchangeException("SQL pattern with name '" + paramKey + "' not found in the message headers",exchange); @TO@ if (value == null) {  throw new RuntimeExchangeException("SQL pattern with name '" + paramKey + "' not found in the message headers",exchange);} @AT@ 2757 @LENGTH@ 161
---UPD Block@@ThenBody:throw new RuntimeExchangeException("SQL pattern with name '" + paramKey + "' not found in the message headers",exchange); @TO@ ThenBody:{  throw new RuntimeExchangeException("SQL pattern with name '" + paramKey + "' not found in the message headers",exchange);} @AT@ 2796 @LENGTH@ 122


DEL IfStatement@@if (IBMJDK16) {  final String preSub="DualTreeBidiMapTest.bulkTestSubMap.";  final String preTail="DualTreeBidiMapTest.bulkTestTailMap.";  return new String[]{recursiveTest,preSub + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSub + "bulkTestMapValues.testCollectionIteratorRemove",preTail + "testMapRemove",preTail + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTail + "bulkTestMapEntrySet.testCollectionRemoveAll",preTail + "bulkTestMapKeySet.testCollectionIteratorRemove",preTail + "bulkTestMapKeySet.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionClear",preTail + "bulkTestMapValues.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionRetainAll"};} @AT@ 1652 @LENGTH@ 998
---DEL SimpleName@@IBMJDK16 @AT@ 1656 @LENGTH@ 8
---DEL Block@@ThenBody:{  final String preSub="DualTreeBidiMapTest.bulkTestSubMap.";  final String preTail="DualTreeBidiMapTest.bulkTestTailMap.";  return new String[]{recursiveTest,preSub + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSub + "bulkTestMapValues.testCollectionIteratorRemove",preTail + "testMapRemove",preTail + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTail + "bulkTestMapEntrySet.testCollectionRemoveAll",preTail + "bulkTestMapKeySet.testCollectionIteratorRemove",preTail + "bulkTestMapKeySet.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionClear",preTail + "bulkTestMapValues.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionRetainAll"};} @AT@ 1666 @LENGTH@ 984
------DEL VariableDeclarationStatement@@final String preSub="DualTreeBidiMapTest.bulkTestSubMap."; @AT@ 1680 @LENGTH@ 60
---------DEL Modifier@@final @AT@ 1680 @LENGTH@ 5
---------DEL SimpleType@@String @AT@ 1686 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@preSub="DualTreeBidiMapTest.bulkTestSubMap." @AT@ 1693 @LENGTH@ 46
------------DEL SimpleName@@preSub @AT@ 1693 @LENGTH@ 6
------------DEL StringLiteral@@"DualTreeBidiMapTest.bulkTestSubMap." @AT@ 1702 @LENGTH@ 37
------DEL VariableDeclarationStatement@@final String preTail="DualTreeBidiMapTest.bulkTestTailMap."; @AT@ 1753 @LENGTH@ 62
---------DEL Modifier@@final @AT@ 1753 @LENGTH@ 5
---------DEL SimpleType@@String @AT@ 1759 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@preTail="DualTreeBidiMapTest.bulkTestTailMap." @AT@ 1766 @LENGTH@ 48
------------DEL SimpleName@@preTail @AT@ 1766 @LENGTH@ 7
------------DEL StringLiteral@@"DualTreeBidiMapTest.bulkTestTailMap." @AT@ 1776 @LENGTH@ 38
------DEL ReturnStatement@@ArrayCreation:new String[]{recursiveTest,preSub + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSub + "bulkTestMapValues.testCollectionIteratorRemove",preTail + "testMapRemove",preTail + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTail + "bulkTestMapEntrySet.testCollectionRemoveAll",preTail + "bulkTestMapKeySet.testCollectionIteratorRemove",preTail + "bulkTestMapKeySet.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionClear",preTail + "bulkTestMapValues.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionRetainAll"} @AT@ 1828 @LENGTH@ 812
---------DEL ArrayCreation@@new String[]{recursiveTest,preSub + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSub + "bulkTestMapValues.testCollectionIteratorRemove",preTail + "testMapRemove",preTail + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTail + "bulkTestMapEntrySet.testCollectionRemoveAll",preTail + "bulkTestMapKeySet.testCollectionIteratorRemove",preTail + "bulkTestMapKeySet.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionClear",preTail + "bulkTestMapValues.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionRetainAll"} @AT@ 1835 @LENGTH@ 804
------------DEL ArrayType@@String[] @AT@ 1839 @LENGTH@ 8
---------------DEL SimpleType@@String @AT@ 1839 @LENGTH@ 6
------------DEL ArrayInitializer@@{recursiveTest,preSub + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSub + "bulkTestMapValues.testCollectionIteratorRemove",preTail + "testMapRemove",preTail + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTail + "bulkTestMapEntrySet.testCollectionRemoveAll",preTail + "bulkTestMapKeySet.testCollectionIteratorRemove",preTail + "bulkTestMapKeySet.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionClear",preTail + "bulkTestMapValues.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionRetainAll"} @AT@ 1848 @LENGTH@ 791
---------------DEL SimpleName@@recursiveTest @AT@ 1870 @LENGTH@ 13
---------------DEL InfixExpression@@preSub + "bulkTestMapEntrySet.testCollectionIteratorRemove" @AT@ 1905 @LENGTH@ 59
------------------DEL SimpleName@@preSub @AT@ 1905 @LENGTH@ 6
------------------DEL Operator@@+ @AT@ 1911 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapEntrySet.testCollectionIteratorRemove" @AT@ 1914 @LENGTH@ 50
---------------DEL InfixExpression@@preSub + "bulkTestMapValues.testCollectionIteratorRemove" @AT@ 1986 @LENGTH@ 57
------------------DEL SimpleName@@preSub @AT@ 1986 @LENGTH@ 6
------------------DEL Operator@@+ @AT@ 1992 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapValues.testCollectionIteratorRemove" @AT@ 1995 @LENGTH@ 48
---------------DEL InfixExpression@@preTail + "testMapRemove" @AT@ 2065 @LENGTH@ 25
------------------DEL SimpleName@@preTail @AT@ 2065 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 2072 @LENGTH@ 1
------------------DEL StringLiteral@@"testMapRemove" @AT@ 2075 @LENGTH@ 15
---------------DEL InfixExpression@@preTail + "bulkTestMapEntrySet.testCollectionIteratorRemove" @AT@ 2112 @LENGTH@ 60
------------------DEL SimpleName@@preTail @AT@ 2112 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 2119 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapEntrySet.testCollectionIteratorRemove" @AT@ 2122 @LENGTH@ 50
---------------DEL InfixExpression@@preTail + "bulkTestMapEntrySet.testCollectionRemoveAll" @AT@ 2194 @LENGTH@ 55
------------------DEL SimpleName@@preTail @AT@ 2194 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 2201 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapEntrySet.testCollectionRemoveAll" @AT@ 2204 @LENGTH@ 45
---------------DEL InfixExpression@@preTail + "bulkTestMapKeySet.testCollectionIteratorRemove" @AT@ 2271 @LENGTH@ 58
------------------DEL SimpleName@@preTail @AT@ 2271 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 2278 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapKeySet.testCollectionIteratorRemove" @AT@ 2281 @LENGTH@ 48
---------------DEL InfixExpression@@preTail + "bulkTestMapKeySet.testCollectionRemoveAll" @AT@ 2351 @LENGTH@ 53
------------------DEL SimpleName@@preTail @AT@ 2351 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 2358 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapKeySet.testCollectionRemoveAll" @AT@ 2361 @LENGTH@ 43
---------------DEL InfixExpression@@preTail + "bulkTestMapValues.testCollectionClear" @AT@ 2426 @LENGTH@ 49
------------------DEL SimpleName@@preTail @AT@ 2426 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 2433 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapValues.testCollectionClear" @AT@ 2436 @LENGTH@ 39
---------------DEL InfixExpression@@preTail + "bulkTestMapValues.testCollectionRemoveAll" @AT@ 2497 @LENGTH@ 53
------------------DEL SimpleName@@preTail @AT@ 2497 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 2504 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapValues.testCollectionRemoveAll" @AT@ 2507 @LENGTH@ 43
---------------DEL InfixExpression@@preTail + "bulkTestMapValues.testCollectionRetainAll" @AT@ 2572 @LENGTH@ 53
------------------DEL SimpleName@@preTail @AT@ 2572 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 2579 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapValues.testCollectionRetainAll" @AT@ 2582 @LENGTH@ 43


INS MethodDeclaration@@QueueInformation, MethodName:getQueueInfo, String queueName,  @TO@ TypeDeclaration@@[public]AmqpAdmin,  @AT@ 3723 @LENGTH@ 31
---INS SimpleType@@QueueInformation @TO@ MethodDeclaration@@QueueInformation, MethodName:getQueueInfo, String queueName,  @AT@ 3706 @LENGTH@ 16
---INS SimpleName@@MethodName:getQueueInfo @TO@ MethodDeclaration@@QueueInformation, MethodName:getQueueInfo, String queueName,  @AT@ 3723 @LENGTH@ 12
---INS SingleVariableDeclaration@@String queueName @TO@ MethodDeclaration@@QueueInformation, MethodName:getQueueInfo, String queueName,  @AT@ 3736 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String queueName @AT@ 3736 @LENGTH@ 6
------INS SimpleName@@queueName @TO@ SingleVariableDeclaration@@String queueName @AT@ 3743 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(configuration,getTestOptions()) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(context,configuration,getTestOptions()) @AT@ 3797 @LENGTH@ 68
---UPD MethodInvocation@@IntrospectionSupport.setProperties(configuration,getTestOptions()) @TO@ PropertyBindingSupport.bindProperties(context,configuration,getTestOptions()) @AT@ 3797 @LENGTH@ 67
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 3797 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[configuration, getTestOptions()] @TO@ MethodName:bindProperties:[context, configuration, getTestOptions()] @AT@ 3818 @LENGTH@ 46
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:setProperties:[configuration, getTestOptions()] @AT@ 3837 @LENGTH@ 7


UPD MethodInvocation@@Mono.just(authorizationRequest).map(OAuth2AuthorizationRequest::getAdditionalParameters).flatMap(additionalParams -> {
  String id=(String)additionalParams.get(OAuth2ParameterNames.REGISTRATION_ID);
  if (id == null) {
    return oauth2AuthorizationException(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE);
  }
  return this.clientRegistrationRepository.findByRegistrationId(id);
}
).switchIfEmpty(oauth2AuthorizationException(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE)).map(clientRegistration -> {
  OAuth2AuthorizationResponse authorizationResponse=convertResponse(exchange);
  OAuth2AuthorizationCodeAuthenticationToken authenticationRequest=new OAuth2AuthorizationCodeAuthenticationToken(clientRegistration,new OAuth2AuthorizationExchange(authorizationRequest,authorizationResponse));
  return authenticationRequest;
}
) @TO@ Mono.just(authorizationRequest).map(OAuth2AuthorizationRequest::getAttributes).flatMap(attributes -> {
  String id=(String)attributes.get(OAuth2ParameterNames.REGISTRATION_ID);
  if (id == null) {
    return oauth2AuthorizationException(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE);
  }
  return this.clientRegistrationRepository.findByRegistrationId(id);
}
).switchIfEmpty(oauth2AuthorizationException(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE)).map(clientRegistration -> {
  OAuth2AuthorizationResponse authorizationResponse=convertResponse(exchange);
  OAuth2AuthorizationCodeAuthenticationToken authenticationRequest=new OAuth2AuthorizationCodeAuthenticationToken(clientRegistration,new OAuth2AuthorizationExchange(authorizationRequest,authorizationResponse));
  return authenticationRequest;
}
) @AT@ 4450 @LENGTH@ 884
---UPD MethodInvocation@@MethodName:flatMap:[additionalParams -> {
  String id=(String)additionalParams.get(OAuth2ParameterNames.REGISTRATION_ID);
  if (id == null) {
    return oauth2AuthorizationException(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE);
  }
  return this.clientRegistrationRepository.findByRegistrationId(id);
}
] @TO@ MethodName:flatMap:[attributes -> {
  String id=(String)attributes.get(OAuth2ParameterNames.REGISTRATION_ID);
  if (id == null) {
    return oauth2AuthorizationException(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE);
  }
  return this.clientRegistrationRepository.findByRegistrationId(id);
}
] @AT@ 4450 @LENGTH@ 408
------UPD LambdaExpression@@additionalParams -> {
  String id=(String)additionalParams.get(OAuth2ParameterNames.REGISTRATION_ID);
  if (id == null) {
    return oauth2AuthorizationException(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE);
  }
  return this.clientRegistrationRepository.findByRegistrationId(id);
}
 @TO@ attributes -> {
  String id=(String)attributes.get(OAuth2ParameterNames.REGISTRATION_ID);
  if (id == null) {
    return oauth2AuthorizationException(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE);
  }
  return this.clientRegistrationRepository.findByRegistrationId(id);
}
 @AT@ 4557 @LENGTH@ 300
---------UPD VariableDeclarationFragment@@additionalParams @TO@ attributes @AT@ 4557 @LENGTH@ 16
------------UPD SimpleName@@additionalParams @TO@ attributes @AT@ 4557 @LENGTH@ 16
---------UPD VariableDeclarationStatement@@String id=(String)additionalParams.get(OAuth2ParameterNames.REGISTRATION_ID); @TO@ String id=(String)attributes.get(OAuth2ParameterNames.REGISTRATION_ID); @AT@ 4584 @LENGTH@ 80
------------UPD VariableDeclarationFragment@@id=(String)additionalParams.get(OAuth2ParameterNames.REGISTRATION_ID) @TO@ id=(String)attributes.get(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 4591 @LENGTH@ 72
---------------UPD CastExpression@@(String)additionalParams.get(OAuth2ParameterNames.REGISTRATION_ID) @TO@ (String)attributes.get(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 4596 @LENGTH@ 67
------------------UPD MethodInvocation@@additionalParams.get(OAuth2ParameterNames.REGISTRATION_ID) @TO@ attributes.get(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 4605 @LENGTH@ 58
---------------------UPD SimpleName@@Name:additionalParams @TO@ Name:attributes @AT@ 4605 @LENGTH@ 16
---UPD MethodInvocation@@MethodName:map:[OAuth2AuthorizationRequest::getAdditionalParameters] @TO@ MethodName:map:[OAuth2AuthorizationRequest::getAttributes] @AT@ 4450 @LENGTH@ 93


UPD FieldDeclaration@@protected, static, final, String, [SECURE_SOCKET_PROTOCOL="TLS"] @TO@ protected, static, final, String, [SECURE_SOCKET_PROTOCOL="TLSv1.2"] @AT@ 1333 @LENGTH@ 61
---UPD VariableDeclarationFragment@@SECURE_SOCKET_PROTOCOL="TLS" @TO@ SECURE_SOCKET_PROTOCOL="TLSv1.2" @AT@ 1363 @LENGTH@ 30
------UPD StringLiteral@@"TLS" @TO@ "TLSv1.2" @AT@ 1388 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:testActive, InterruptedException,  @TO@ public, void, MethodName:testActive,  @AT@ 1688 @LENGTH@ 375
---DEL SimpleType@@InterruptedException @AT@ 1720 @LENGTH@ 20
---UPD VariableDeclarationStatement@@ServiceController<?> config=registry.getService(ServiceName.parse("org.wildfly.mod_cluster.config")); @TO@ ServiceController<?> config=registry.getService(ServiceName.parse("org.wildfly.mod_cluster.service.modcluster")); @AT@ 1751 @LENGTH@ 103
------UPD VariableDeclarationFragment@@config=registry.getService(ServiceName.parse("org.wildfly.mod_cluster.config")) @TO@ config=registry.getService(ServiceName.parse("org.wildfly.mod_cluster.service.modcluster")) @AT@ 1772 @LENGTH@ 81
---------UPD MethodInvocation@@registry.getService(ServiceName.parse("org.wildfly.mod_cluster.config")) @TO@ registry.getService(ServiceName.parse("org.wildfly.mod_cluster.service.modcluster")) @AT@ 1781 @LENGTH@ 72
------------UPD SimpleName@@MethodName:getService:[ServiceName.parse("org.wildfly.mod_cluster.config")] @TO@ MethodName:getService:[ServiceName.parse("org.wildfly.mod_cluster.service.modcluster")] @AT@ 1790 @LENGTH@ 63
---------------UPD MethodInvocation@@ServiceName.parse("org.wildfly.mod_cluster.config") @TO@ ServiceName.parse("org.wildfly.mod_cluster.service.modcluster") @AT@ 1801 @LENGTH@ 51
------------------UPD SimpleName@@MethodName:parse:["org.wildfly.mod_cluster.config"] @TO@ MethodName:parse:["org.wildfly.mod_cluster.service.modcluster"] @AT@ 1813 @LENGTH@ 39
---------------------UPD StringLiteral@@"org.wildfly.mod_cluster.config" @TO@ "org.wildfly.mod_cluster.service.modcluster" @AT@ 1819 @LENGTH@ 32


UPD ReturnStatement@@MethodInvocation:next.process(exchange,doneSync -> {
  LoggerFactory.getLogger(getClass()).info("Resetting body");
  exchange.getMessage().setBody("");
  callback.done(doneSync);
}
) @TO@ MethodInvocation:next.process(exchange,doneSync -> {
  exchange.getMessage().setBody("");
  callback.done(doneSync);
}
) @AT@ 2235 @LENGTH@ 252
---UPD MethodInvocation@@next.process(exchange,doneSync -> {
  LoggerFactory.getLogger(getClass()).info("Resetting body");
  exchange.getMessage().setBody("");
  callback.done(doneSync);
}
) @TO@ next.process(exchange,doneSync -> {
  exchange.getMessage().setBody("");
  callback.done(doneSync);
}
) @AT@ 2242 @LENGTH@ 244
------UPD SimpleName@@MethodName:process:[exchange, doneSync -> {
  LoggerFactory.getLogger(getClass()).info("Resetting body");
  exchange.getMessage().setBody("");
  callback.done(doneSync);
}
] @TO@ MethodName:process:[exchange, doneSync -> {
  exchange.getMessage().setBody("");
  callback.done(doneSync);
}
] @AT@ 2247 @LENGTH@ 239
---------UPD LambdaExpression@@doneSync -> {
  LoggerFactory.getLogger(getClass()).info("Resetting body");
  exchange.getMessage().setBody("");
  callback.done(doneSync);
}
 @TO@ doneSync -> {
  exchange.getMessage().setBody("");
  callback.done(doneSync);
}
 @AT@ 2265 @LENGTH@ 220
------------DEL ExpressionStatement@@MethodInvocation:LoggerFactory.getLogger(getClass()).info("Resetting body") @AT@ 2332 @LENGTH@ 59
---------------DEL MethodInvocation@@LoggerFactory.getLogger(getClass()).info("Resetting body") @AT@ 2332 @LENGTH@ 58
------------------DEL MethodInvocation@@MethodName:getLogger:[getClass()] @AT@ 2332 @LENGTH@ 35
---------------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 2356 @LENGTH@ 10
------------------DEL SimpleName@@Name:LoggerFactory @AT@ 2332 @LENGTH@ 13
------------------DEL SimpleName@@MethodName:info:["Resetting body"] @AT@ 2368 @LENGTH@ 22
---------------------DEL StringLiteral@@"Resetting body" @AT@ 2373 @LENGTH@ 16


UPD EnhancedForStatement@@for (Map.Entry<String,String> entry : entries) {  String prefix=entry.getKey();  String uri=entry.getValue();  staticQueryContext.declareNamespace(prefix,uri);  staticQueryContext.setInheritNamespaces(true);} @TO@ for (Map.Entry<String,String> entry : entries) {  String prefix=entry.getKey();  String uri=entry.getValue();  boolean invalid="xml".equals(prefix) || "xmlns".equals(prefix);  if (!invalid) {    LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri);    staticQueryContext.declareNamespace(prefix,uri);    staticQueryContext.setInheritNamespaces(true);  }} @AT@ 25943 @LENGTH@ 287
---INS VariableDeclarationStatement@@boolean invalid="xml".equals(prefix) || "xmlns".equals(prefix); @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : entries) {  String prefix=entry.getKey();  String uri=entry.getValue();  staticQueryContext.declareNamespace(prefix,uri);  staticQueryContext.setInheritNamespaces(true);} @AT@ 26175 @LENGTH@ 65
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean invalid="xml".equals(prefix) || "xmlns".equals(prefix); @AT@ 26175 @LENGTH@ 7
------INS VariableDeclarationFragment@@invalid="xml".equals(prefix) || "xmlns".equals(prefix) @TO@ VariableDeclarationStatement@@boolean invalid="xml".equals(prefix) || "xmlns".equals(prefix); @AT@ 26183 @LENGTH@ 56
---------INS SimpleName@@invalid @TO@ VariableDeclarationFragment@@invalid="xml".equals(prefix) || "xmlns".equals(prefix) @AT@ 26183 @LENGTH@ 7
---------INS InfixExpression@@"xml".equals(prefix) || "xmlns".equals(prefix) @TO@ VariableDeclarationFragment@@invalid="xml".equals(prefix) || "xmlns".equals(prefix) @AT@ 26193 @LENGTH@ 46
------------INS MethodInvocation@@"xml".equals(prefix) @TO@ InfixExpression@@"xml".equals(prefix) || "xmlns".equals(prefix) @AT@ 26193 @LENGTH@ 20
---------------INS StringLiteral@@"xml" @TO@ MethodInvocation@@"xml".equals(prefix) @AT@ 26193 @LENGTH@ 5
---------------INS SimpleName@@MethodName:equals:[prefix] @TO@ MethodInvocation@@"xml".equals(prefix) @AT@ 26199 @LENGTH@ 14
------------------INS SimpleName@@prefix @TO@ SimpleName@@MethodName:equals:[prefix] @AT@ 26206 @LENGTH@ 6
------------INS Operator@@|| @TO@ InfixExpression@@"xml".equals(prefix) || "xmlns".equals(prefix) @AT@ 26213 @LENGTH@ 2
------------INS MethodInvocation@@"xmlns".equals(prefix) @TO@ InfixExpression@@"xml".equals(prefix) || "xmlns".equals(prefix) @AT@ 26217 @LENGTH@ 22
---------------INS StringLiteral@@"xmlns" @TO@ MethodInvocation@@"xmlns".equals(prefix) @AT@ 26217 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[prefix] @TO@ MethodInvocation@@"xmlns".equals(prefix) @AT@ 26225 @LENGTH@ 14
------------------INS SimpleName@@prefix @TO@ SimpleName@@MethodName:equals:[prefix] @AT@ 26232 @LENGTH@ 6
---INS IfStatement@@if (!invalid) {  LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri);  staticQueryContext.declareNamespace(prefix,uri);  staticQueryContext.setInheritNamespaces(true);} @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : entries) {  String prefix=entry.getKey();  String uri=entry.getValue();  staticQueryContext.declareNamespace(prefix,uri);  staticQueryContext.setInheritNamespaces(true);} @AT@ 26257 @LENGTH@ 259
------INS PrefixExpression@@!invalid @TO@ IfStatement@@if (!invalid) {  LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri);  staticQueryContext.declareNamespace(prefix,uri);  staticQueryContext.setInheritNamespaces(true);} @AT@ 26261 @LENGTH@ 8
---------INS Operator@@! @TO@ PrefixExpression@@!invalid @AT@ 26261 @LENGTH@ 1
---------INS SimpleName@@invalid @TO@ PrefixExpression@@!invalid @AT@ 26262 @LENGTH@ 7
------INS Block@@ThenBody:{  LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri);  staticQueryContext.declareNamespace(prefix,uri);  staticQueryContext.setInheritNamespaces(true);} @TO@ IfStatement@@if (!invalid) {  LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri);  staticQueryContext.declareNamespace(prefix,uri);  staticQueryContext.setInheritNamespaces(true);} @AT@ 26271 @LENGTH@ 245
---------MOV ExpressionStatement@@MethodInvocation:staticQueryContext.declareNamespace(prefix,uri) @TO@ Block@@ThenBody:{  LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri);  staticQueryContext.declareNamespace(prefix,uri);  staticQueryContext.setInheritNamespaces(true);} @AT@ 26104 @LENGTH@ 49
---------MOV ExpressionStatement@@MethodInvocation:staticQueryContext.setInheritNamespaces(true) @TO@ Block@@ThenBody:{  LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri);  staticQueryContext.declareNamespace(prefix,uri);  staticQueryContext.setInheritNamespaces(true);} @AT@ 26170 @LENGTH@ 46
---------INS ExpressionStatement@@MethodInvocation:LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri) @TO@ Block@@ThenBody:{  LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri);  staticQueryContext.declareNamespace(prefix,uri);  staticQueryContext.setInheritNamespaces(true);} @AT@ 26293 @LENGTH@ 68
------------INS MethodInvocation@@LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri) @AT@ 26293 @LENGTH@ 67
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri) @AT@ 26293 @LENGTH@ 3
---------------INS SimpleName@@MethodName:debug:["Declaring namespace [prefix: {}, uri: {}]", prefix, uri] @TO@ MethodInvocation@@LOG.debug("Declaring namespace [prefix: {}, uri: {}]",prefix,uri) @AT@ 26297 @LENGTH@ 63
------------------INS StringLiteral@@"Declaring namespace [prefix: {}, uri: {}]" @TO@ SimpleName@@MethodName:debug:["Declaring namespace [prefix: {}, uri: {}]", prefix, uri] @AT@ 26303 @LENGTH@ 43
------------------INS SimpleName@@prefix @TO@ SimpleName@@MethodName:debug:["Declaring namespace [prefix: {}, uri: {}]", prefix, uri] @AT@ 26348 @LENGTH@ 6
------------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:debug:["Declaring namespace [prefix: {}, uri: {}]", prefix, uri] @AT@ 26356 @LENGTH@ 3


UPD ReturnStatement@@SuperMethodInvocation:super.createDataFormat(camelContext) @TO@ SuperMethodInvocation:super.doCreateDataFormat(camelContext) @AT@ 2209 @LENGTH@ 44
---UPD SuperMethodInvocation@@super.createDataFormat(camelContext) @TO@ super.doCreateDataFormat(camelContext) @AT@ 2216 @LENGTH@ 36
------UPD SimpleName@@MethodName:createDataFormat:[camelContext] @TO@ MethodName:doCreateDataFormat:[camelContext] @AT@ 2222 @LENGTH@ 16


UPD Block@@ElseBody:if (op == Ops.AND) {  Map<Object,Object> lhs=(Map<Object,Object>)handle(expr.getArg(0));  Map<Object,Object> rhs=(Map<Object,Object>)handle(expr.getArg(1));  LinkedHashSet<Entry<Object,Object>> lhs2=new LinkedHashSet<>(lhs.entrySet());  lhs2.retainAll(rhs.entrySet());  if (lhs2.isEmpty()) {    lhs.putAll(rhs);    return lhs;  } else {    List<Object> list=new ArrayList<>(2);    list.add(handle(expr.getArg(0)));    list.add(handle(expr.getArg(1)));    return asDocument("$and",list);  }} else if (op == Ops.NOT) {  Operation<?> subOperation=(Operation<?>)expr.getArg(0);  Operator subOp=subOperation.getOperator();  if (subOp == Ops.IN) {    return visit(ExpressionUtils.operation(Boolean.class,Ops.NOT_IN,subOperation.getArg(0),subOperation.getArg(1)),context);  } else {    Document arg=(Document)handle(expr.getArg(0));    return negate(arg);  }} else if (op == Ops.OR) {  List<Object> list=new ArrayList<>(2);  list.add(handle(expr.getArg(0)));  list.add(handle(expr.getArg(1)));  return asDocument("$or",list);} else if (op == Ops.NE) {  Path<?> path=(Path<?>)expr.getArg(0);  Constant<?> constant=(Constant<?>)expr.getArg(1);  return asDocument(asDBKey(expr,0),asDocument("$ne",convert(path,constant)));} else if (op == Ops.STARTS_WITH) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1)));} else if (op == Ops.STARTS_WITH_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1),"i"));} else if (op == Ops.ENDS_WITH) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regexValue(expr,1) + "$"));} else if (op == Ops.ENDS_WITH_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regexValue(expr,1) + "$","i"));} else if (op == Ops.EQ_IGNORE_CASE) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1) + "$","i"));} else if (op == Ops.STRING_CONTAINS) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(".*" + regexValue(expr,1) + ".*"));} else if (op == Ops.STRING_CONTAINS_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(".*" + regexValue(expr,1) + ".*","i"));} else if (op == Ops.MATCHES) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(asDBValue(expr,1).toString()));} else if (op == Ops.MATCHES_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(asDBValue(expr,1).toString(),"i"));} else if (op == Ops.LIKE) {  String regex=ExpressionUtils.likeToRegex((Expression)expr.getArg(1)).toString();  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regex));} else if (op == Ops.BETWEEN) {  Document value=new Document("$gte",asDBValue(expr,1));  value.append("$lte",asDBValue(expr,2));  return asDocument(asDBKey(expr,0),value);} else if (op == Ops.IN) {  int constIndex=0;  int exprIndex=1;  if (expr.getArg(1) instanceof Constant<?>) {    constIndex=1;    exprIndex=0;  }  if (Collection.class.isAssignableFrom(expr.getArg(constIndex).getType())) {    @SuppressWarnings("unchecked") Collection<?> values=((Constant<? extends Collection<?>>)expr.getArg(constIndex)).getConstant();    return asDocument(asDBKey(expr,exprIndex),asDocument("$in",values));  } else {    Path<?> path=(Path<?>)expr.getArg(exprIndex);    Constant<?> constant=(Constant<?>)expr.getArg(constIndex);    return asDocument(asDBKey(expr,exprIndex),convert(path,constant));  }} else if (op == Ops.NOT_IN) {  int constIndex=0;  int exprIndex=1;  if (expr.getArg(1) instanceof Constant<?>) {    constIndex=1;    exprIndex=0;  }  if (Collection.class.isAssignableFrom(expr.getArg(constIndex).getType())) {    @SuppressWarnings("unchecked") Collection<?> values=((Constant<? extends Collection<?>>)expr.getArg(constIndex)).getConstant();    return asDocument(asDBKey(expr,exprIndex),asDocument("$nin",values));  } else {    Path<?> path=(Path<?>)expr.getArg(exprIndex);    Constant<?> constant=(Constant<?>)expr.getArg(constIndex);    return asDocument(asDBKey(expr,exprIndex),asDocument("$ne",convert(path,constant)));  }} else if (op == Ops.COL_IS_EMPTY) {  List<Object> list=new ArrayList<>(2);  list.add(asDocument(asDBKey(expr,0),new ArrayList<Object>()));  list.add(asDocument(asDBKey(expr,0),asDocument("$exists",false)));  return asDocument("$or",list);} else if (op == Ops.LT) {  return asDocument(asDBKey(expr,0),asDocument("$lt",asDBValue(expr,1)));} else if (op == Ops.GT) {  return asDocument(asDBKey(expr,0),asDocument("$gt",asDBValue(expr,1)));} else if (op == Ops.LOE) {  return asDocument(asDBKey(expr,0),asDocument("$lte",asDBValue(expr,1)));} else if (op == Ops.GOE) {  return asDocument(asDBKey(expr,0),asDocument("$gte",asDBValue(expr,1)));} else if (op == Ops.IS_NULL) {  return asDocument(asDBKey(expr,0),asDocument("$exists",false));} else if (op == Ops.IS_NOT_NULL) {  return asDocument(asDBKey(expr,0),asDocument("$exists",true));} else if (op == Ops.CONTAINS_KEY) {  Path<?> path=(Path<?>)expr.getArg(0);  Expression<?> key=expr.getArg(1);  return asDocument(visit(path,context) + "." + key.toString(),asDocument("$exists",true));} else if (op == MongodbOps.NEAR) {  return asDocument(asDBKey(expr,0),asDocument("$near",asDBValue(expr,1)));} else if (op == MongodbOps.NEAR_SPHERE) {  return asDocument(asDBKey(expr,0),asDocument("$nearSphere",asDBValue(expr,1)));} else if (op == MongodbOps.ELEM_MATCH) {  return asDocument(asDBKey(expr,0),asDocument("$elemMatch",asDBValue(expr,1)));} else if (op == QuerydslMongoOps.NO_MATCH) {  return new Document("$where",new BsonJavaScript("function() { return false }"));} @TO@ ElseBody:if (op == Ops.AND) {  Map<Object,Object> lhs=(Map<Object,Object>)handle(expr.getArg(0));  Map<Object,Object> rhs=(Map<Object,Object>)handle(expr.getArg(1));  LinkedHashSet<Object> lhs2=new LinkedHashSet<>(lhs.keySet());  lhs2.retainAll(rhs.keySet());  if (lhs2.isEmpty()) {    lhs.putAll(rhs);    return lhs;  } else {    List<Object> list=new ArrayList<>(2);    list.add(handle(expr.getArg(0)));    list.add(handle(expr.getArg(1)));    return asDocument("$and",list);  }} else if (op == Ops.NOT) {  Operation<?> subOperation=(Operation<?>)expr.getArg(0);  Operator subOp=subOperation.getOperator();  if (subOp == Ops.IN) {    return visit(ExpressionUtils.operation(Boolean.class,Ops.NOT_IN,subOperation.getArg(0),subOperation.getArg(1)),context);  } else {    Document arg=(Document)handle(expr.getArg(0));    return negate(arg);  }} else if (op == Ops.OR) {  List<Object> list=new ArrayList<>(2);  list.add(handle(expr.getArg(0)));  list.add(handle(expr.getArg(1)));  return asDocument("$or",list);} else if (op == Ops.NE) {  Path<?> path=(Path<?>)expr.getArg(0);  Constant<?> constant=(Constant<?>)expr.getArg(1);  return asDocument(asDBKey(expr,0),asDocument("$ne",convert(path,constant)));} else if (op == Ops.STARTS_WITH) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1)));} else if (op == Ops.STARTS_WITH_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1),"i"));} else if (op == Ops.ENDS_WITH) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regexValue(expr,1) + "$"));} else if (op == Ops.ENDS_WITH_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regexValue(expr,1) + "$","i"));} else if (op == Ops.EQ_IGNORE_CASE) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1) + "$","i"));} else if (op == Ops.STRING_CONTAINS) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(".*" + regexValue(expr,1) + ".*"));} else if (op == Ops.STRING_CONTAINS_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(".*" + regexValue(expr,1) + ".*","i"));} else if (op == Ops.MATCHES) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(asDBValue(expr,1).toString()));} else if (op == Ops.MATCHES_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(asDBValue(expr,1).toString(),"i"));} else if (op == Ops.LIKE) {  String regex=ExpressionUtils.likeToRegex((Expression)expr.getArg(1)).toString();  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regex));} else if (op == Ops.BETWEEN) {  Document value=new Document("$gte",asDBValue(expr,1));  value.append("$lte",asDBValue(expr,2));  return asDocument(asDBKey(expr,0),value);} else if (op == Ops.IN) {  int constIndex=0;  int exprIndex=1;  if (expr.getArg(1) instanceof Constant<?>) {    constIndex=1;    exprIndex=0;  }  if (Collection.class.isAssignableFrom(expr.getArg(constIndex).getType())) {    @SuppressWarnings("unchecked") Collection<?> values=((Constant<? extends Collection<?>>)expr.getArg(constIndex)).getConstant();    return asDocument(asDBKey(expr,exprIndex),asDocument("$in",values));  } else {    Path<?> path=(Path<?>)expr.getArg(exprIndex);    Constant<?> constant=(Constant<?>)expr.getArg(constIndex);    return asDocument(asDBKey(expr,exprIndex),convert(path,constant));  }} else if (op == Ops.NOT_IN) {  int constIndex=0;  int exprIndex=1;  if (expr.getArg(1) instanceof Constant<?>) {    constIndex=1;    exprIndex=0;  }  if (Collection.class.isAssignableFrom(expr.getArg(constIndex).getType())) {    @SuppressWarnings("unchecked") Collection<?> values=((Constant<? extends Collection<?>>)expr.getArg(constIndex)).getConstant();    return asDocument(asDBKey(expr,exprIndex),asDocument("$nin",values));  } else {    Path<?> path=(Path<?>)expr.getArg(exprIndex);    Constant<?> constant=(Constant<?>)expr.getArg(constIndex);    return asDocument(asDBKey(expr,exprIndex),asDocument("$ne",convert(path,constant)));  }} else if (op == Ops.COL_IS_EMPTY) {  List<Object> list=new ArrayList<>(2);  list.add(asDocument(asDBKey(expr,0),new ArrayList<Object>()));  list.add(asDocument(asDBKey(expr,0),asDocument("$exists",false)));  return asDocument("$or",list);} else if (op == Ops.LT) {  return asDocument(asDBKey(expr,0),asDocument("$lt",asDBValue(expr,1)));} else if (op == Ops.GT) {  return asDocument(asDBKey(expr,0),asDocument("$gt",asDBValue(expr,1)));} else if (op == Ops.LOE) {  return asDocument(asDBKey(expr,0),asDocument("$lte",asDBValue(expr,1)));} else if (op == Ops.GOE) {  return asDocument(asDBKey(expr,0),asDocument("$gte",asDBValue(expr,1)));} else if (op == Ops.IS_NULL) {  return asDocument(asDBKey(expr,0),asDocument("$exists",false));} else if (op == Ops.IS_NOT_NULL) {  return asDocument(asDBKey(expr,0),asDocument("$exists",true));} else if (op == Ops.CONTAINS_KEY) {  Path<?> path=(Path<?>)expr.getArg(0);  Expression<?> key=expr.getArg(1);  return asDocument(visit(path,context) + "." + key.toString(),asDocument("$exists",true));} else if (op == MongodbOps.NEAR) {  return asDocument(asDBKey(expr,0),asDocument("$near",asDBValue(expr,1)));} else if (op == MongodbOps.NEAR_SPHERE) {  return asDocument(asDBKey(expr,0),asDocument("$nearSphere",asDBValue(expr,1)));} else if (op == MongodbOps.ELEM_MATCH) {  return asDocument(asDBKey(expr,0),asDocument("$elemMatch",asDBValue(expr,1)));} else if (op == QuerydslMongoOps.NO_MATCH) {  return new Document("$where",new BsonJavaScript("function() { return false }"));} @AT@ 5550 @LENGTH@ 6066
---UPD IfStatement@@if (op == Ops.AND) {  Map<Object,Object> lhs=(Map<Object,Object>)handle(expr.getArg(0));  Map<Object,Object> rhs=(Map<Object,Object>)handle(expr.getArg(1));  LinkedHashSet<Entry<Object,Object>> lhs2=new LinkedHashSet<>(lhs.entrySet());  lhs2.retainAll(rhs.entrySet());  if (lhs2.isEmpty()) {    lhs.putAll(rhs);    return lhs;  } else {    List<Object> list=new ArrayList<>(2);    list.add(handle(expr.getArg(0)));    list.add(handle(expr.getArg(1)));    return asDocument("$and",list);  }} else if (op == Ops.NOT) {  Operation<?> subOperation=(Operation<?>)expr.getArg(0);  Operator subOp=subOperation.getOperator();  if (subOp == Ops.IN) {    return visit(ExpressionUtils.operation(Boolean.class,Ops.NOT_IN,subOperation.getArg(0),subOperation.getArg(1)),context);  } else {    Document arg=(Document)handle(expr.getArg(0));    return negate(arg);  }} else if (op == Ops.OR) {  List<Object> list=new ArrayList<>(2);  list.add(handle(expr.getArg(0)));  list.add(handle(expr.getArg(1)));  return asDocument("$or",list);} else if (op == Ops.NE) {  Path<?> path=(Path<?>)expr.getArg(0);  Constant<?> constant=(Constant<?>)expr.getArg(1);  return asDocument(asDBKey(expr,0),asDocument("$ne",convert(path,constant)));} else if (op == Ops.STARTS_WITH) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1)));} else if (op == Ops.STARTS_WITH_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1),"i"));} else if (op == Ops.ENDS_WITH) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regexValue(expr,1) + "$"));} else if (op == Ops.ENDS_WITH_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regexValue(expr,1) + "$","i"));} else if (op == Ops.EQ_IGNORE_CASE) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1) + "$","i"));} else if (op == Ops.STRING_CONTAINS) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(".*" + regexValue(expr,1) + ".*"));} else if (op == Ops.STRING_CONTAINS_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(".*" + regexValue(expr,1) + ".*","i"));} else if (op == Ops.MATCHES) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(asDBValue(expr,1).toString()));} else if (op == Ops.MATCHES_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(asDBValue(expr,1).toString(),"i"));} else if (op == Ops.LIKE) {  String regex=ExpressionUtils.likeToRegex((Expression)expr.getArg(1)).toString();  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regex));} else if (op == Ops.BETWEEN) {  Document value=new Document("$gte",asDBValue(expr,1));  value.append("$lte",asDBValue(expr,2));  return asDocument(asDBKey(expr,0),value);} else if (op == Ops.IN) {  int constIndex=0;  int exprIndex=1;  if (expr.getArg(1) instanceof Constant<?>) {    constIndex=1;    exprIndex=0;  }  if (Collection.class.isAssignableFrom(expr.getArg(constIndex).getType())) {    @SuppressWarnings("unchecked") Collection<?> values=((Constant<? extends Collection<?>>)expr.getArg(constIndex)).getConstant();    return asDocument(asDBKey(expr,exprIndex),asDocument("$in",values));  } else {    Path<?> path=(Path<?>)expr.getArg(exprIndex);    Constant<?> constant=(Constant<?>)expr.getArg(constIndex);    return asDocument(asDBKey(expr,exprIndex),convert(path,constant));  }} else if (op == Ops.NOT_IN) {  int constIndex=0;  int exprIndex=1;  if (expr.getArg(1) instanceof Constant<?>) {    constIndex=1;    exprIndex=0;  }  if (Collection.class.isAssignableFrom(expr.getArg(constIndex).getType())) {    @SuppressWarnings("unchecked") Collection<?> values=((Constant<? extends Collection<?>>)expr.getArg(constIndex)).getConstant();    return asDocument(asDBKey(expr,exprIndex),asDocument("$nin",values));  } else {    Path<?> path=(Path<?>)expr.getArg(exprIndex);    Constant<?> constant=(Constant<?>)expr.getArg(constIndex);    return asDocument(asDBKey(expr,exprIndex),asDocument("$ne",convert(path,constant)));  }} else if (op == Ops.COL_IS_EMPTY) {  List<Object> list=new ArrayList<>(2);  list.add(asDocument(asDBKey(expr,0),new ArrayList<Object>()));  list.add(asDocument(asDBKey(expr,0),asDocument("$exists",false)));  return asDocument("$or",list);} else if (op == Ops.LT) {  return asDocument(asDBKey(expr,0),asDocument("$lt",asDBValue(expr,1)));} else if (op == Ops.GT) {  return asDocument(asDBKey(expr,0),asDocument("$gt",asDBValue(expr,1)));} else if (op == Ops.LOE) {  return asDocument(asDBKey(expr,0),asDocument("$lte",asDBValue(expr,1)));} else if (op == Ops.GOE) {  return asDocument(asDBKey(expr,0),asDocument("$gte",asDBValue(expr,1)));} else if (op == Ops.IS_NULL) {  return asDocument(asDBKey(expr,0),asDocument("$exists",false));} else if (op == Ops.IS_NOT_NULL) {  return asDocument(asDBKey(expr,0),asDocument("$exists",true));} else if (op == Ops.CONTAINS_KEY) {  Path<?> path=(Path<?>)expr.getArg(0);  Expression<?> key=expr.getArg(1);  return asDocument(visit(path,context) + "." + key.toString(),asDocument("$exists",true));} else if (op == MongodbOps.NEAR) {  return asDocument(asDBKey(expr,0),asDocument("$near",asDBValue(expr,1)));} else if (op == MongodbOps.NEAR_SPHERE) {  return asDocument(asDBKey(expr,0),asDocument("$nearSphere",asDBValue(expr,1)));} else if (op == MongodbOps.ELEM_MATCH) {  return asDocument(asDBKey(expr,0),asDocument("$elemMatch",asDBValue(expr,1)));} else if (op == QuerydslMongoOps.NO_MATCH) {  return new Document("$where",new BsonJavaScript("function() { return false }"));} @TO@ if (op == Ops.AND) {  Map<Object,Object> lhs=(Map<Object,Object>)handle(expr.getArg(0));  Map<Object,Object> rhs=(Map<Object,Object>)handle(expr.getArg(1));  LinkedHashSet<Object> lhs2=new LinkedHashSet<>(lhs.keySet());  lhs2.retainAll(rhs.keySet());  if (lhs2.isEmpty()) {    lhs.putAll(rhs);    return lhs;  } else {    List<Object> list=new ArrayList<>(2);    list.add(handle(expr.getArg(0)));    list.add(handle(expr.getArg(1)));    return asDocument("$and",list);  }} else if (op == Ops.NOT) {  Operation<?> subOperation=(Operation<?>)expr.getArg(0);  Operator subOp=subOperation.getOperator();  if (subOp == Ops.IN) {    return visit(ExpressionUtils.operation(Boolean.class,Ops.NOT_IN,subOperation.getArg(0),subOperation.getArg(1)),context);  } else {    Document arg=(Document)handle(expr.getArg(0));    return negate(arg);  }} else if (op == Ops.OR) {  List<Object> list=new ArrayList<>(2);  list.add(handle(expr.getArg(0)));  list.add(handle(expr.getArg(1)));  return asDocument("$or",list);} else if (op == Ops.NE) {  Path<?> path=(Path<?>)expr.getArg(0);  Constant<?> constant=(Constant<?>)expr.getArg(1);  return asDocument(asDBKey(expr,0),asDocument("$ne",convert(path,constant)));} else if (op == Ops.STARTS_WITH) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1)));} else if (op == Ops.STARTS_WITH_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1),"i"));} else if (op == Ops.ENDS_WITH) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regexValue(expr,1) + "$"));} else if (op == Ops.ENDS_WITH_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regexValue(expr,1) + "$","i"));} else if (op == Ops.EQ_IGNORE_CASE) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1) + "$","i"));} else if (op == Ops.STRING_CONTAINS) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(".*" + regexValue(expr,1) + ".*"));} else if (op == Ops.STRING_CONTAINS_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(".*" + regexValue(expr,1) + ".*","i"));} else if (op == Ops.MATCHES) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(asDBValue(expr,1).toString()));} else if (op == Ops.MATCHES_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(asDBValue(expr,1).toString(),"i"));} else if (op == Ops.LIKE) {  String regex=ExpressionUtils.likeToRegex((Expression)expr.getArg(1)).toString();  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regex));} else if (op == Ops.BETWEEN) {  Document value=new Document("$gte",asDBValue(expr,1));  value.append("$lte",asDBValue(expr,2));  return asDocument(asDBKey(expr,0),value);} else if (op == Ops.IN) {  int constIndex=0;  int exprIndex=1;  if (expr.getArg(1) instanceof Constant<?>) {    constIndex=1;    exprIndex=0;  }  if (Collection.class.isAssignableFrom(expr.getArg(constIndex).getType())) {    @SuppressWarnings("unchecked") Collection<?> values=((Constant<? extends Collection<?>>)expr.getArg(constIndex)).getConstant();    return asDocument(asDBKey(expr,exprIndex),asDocument("$in",values));  } else {    Path<?> path=(Path<?>)expr.getArg(exprIndex);    Constant<?> constant=(Constant<?>)expr.getArg(constIndex);    return asDocument(asDBKey(expr,exprIndex),convert(path,constant));  }} else if (op == Ops.NOT_IN) {  int constIndex=0;  int exprIndex=1;  if (expr.getArg(1) instanceof Constant<?>) {    constIndex=1;    exprIndex=0;  }  if (Collection.class.isAssignableFrom(expr.getArg(constIndex).getType())) {    @SuppressWarnings("unchecked") Collection<?> values=((Constant<? extends Collection<?>>)expr.getArg(constIndex)).getConstant();    return asDocument(asDBKey(expr,exprIndex),asDocument("$nin",values));  } else {    Path<?> path=(Path<?>)expr.getArg(exprIndex);    Constant<?> constant=(Constant<?>)expr.getArg(constIndex);    return asDocument(asDBKey(expr,exprIndex),asDocument("$ne",convert(path,constant)));  }} else if (op == Ops.COL_IS_EMPTY) {  List<Object> list=new ArrayList<>(2);  list.add(asDocument(asDBKey(expr,0),new ArrayList<Object>()));  list.add(asDocument(asDBKey(expr,0),asDocument("$exists",false)));  return asDocument("$or",list);} else if (op == Ops.LT) {  return asDocument(asDBKey(expr,0),asDocument("$lt",asDBValue(expr,1)));} else if (op == Ops.GT) {  return asDocument(asDBKey(expr,0),asDocument("$gt",asDBValue(expr,1)));} else if (op == Ops.LOE) {  return asDocument(asDBKey(expr,0),asDocument("$lte",asDBValue(expr,1)));} else if (op == Ops.GOE) {  return asDocument(asDBKey(expr,0),asDocument("$gte",asDBValue(expr,1)));} else if (op == Ops.IS_NULL) {  return asDocument(asDBKey(expr,0),asDocument("$exists",false));} else if (op == Ops.IS_NOT_NULL) {  return asDocument(asDBKey(expr,0),asDocument("$exists",true));} else if (op == Ops.CONTAINS_KEY) {  Path<?> path=(Path<?>)expr.getArg(0);  Expression<?> key=expr.getArg(1);  return asDocument(visit(path,context) + "." + key.toString(),asDocument("$exists",true));} else if (op == MongodbOps.NEAR) {  return asDocument(asDBKey(expr,0),asDocument("$near",asDBValue(expr,1)));} else if (op == MongodbOps.NEAR_SPHERE) {  return asDocument(asDBKey(expr,0),asDocument("$nearSphere",asDBValue(expr,1)));} else if (op == MongodbOps.ELEM_MATCH) {  return asDocument(asDBKey(expr,0),asDocument("$elemMatch",asDBValue(expr,1)));} else if (op == QuerydslMongoOps.NO_MATCH) {  return new Document("$where",new BsonJavaScript("function() { return false }"));} @AT@ 5550 @LENGTH@ 6066
------UPD Block@@ThenBody:{  Map<Object,Object> lhs=(Map<Object,Object>)handle(expr.getArg(0));  Map<Object,Object> rhs=(Map<Object,Object>)handle(expr.getArg(1));  LinkedHashSet<Entry<Object,Object>> lhs2=new LinkedHashSet<>(lhs.entrySet());  lhs2.retainAll(rhs.entrySet());  if (lhs2.isEmpty()) {    lhs.putAll(rhs);    return lhs;  } else {    List<Object> list=new ArrayList<>(2);    list.add(handle(expr.getArg(0)));    list.add(handle(expr.getArg(1)));    return asDocument("$and",list);  }} @TO@ ThenBody:{  Map<Object,Object> lhs=(Map<Object,Object>)handle(expr.getArg(0));  Map<Object,Object> rhs=(Map<Object,Object>)handle(expr.getArg(1));  LinkedHashSet<Object> lhs2=new LinkedHashSet<>(lhs.keySet());  lhs2.retainAll(rhs.keySet());  if (lhs2.isEmpty()) {    lhs.putAll(rhs);    return lhs;  } else {    List<Object> list=new ArrayList<>(2);    list.add(handle(expr.getArg(0)));    list.add(handle(expr.getArg(1)));    return asDocument("$and",list);  }} @AT@ 5569 @LENGTH@ 514
---------UPD VariableDeclarationStatement@@LinkedHashSet<Entry<Object,Object>> lhs2=new LinkedHashSet<>(lhs.entrySet()); @TO@ LinkedHashSet<Object> lhs2=new LinkedHashSet<>(lhs.keySet()); @AT@ 5726 @LENGTH@ 80
------------UPD ParameterizedType@@LinkedHashSet<Entry<Object,Object>> @TO@ LinkedHashSet<Object> @AT@ 5726 @LENGTH@ 36
---------------DEL ParameterizedType@@Entry<Object,Object> @AT@ 5740 @LENGTH@ 21
------------------DEL SimpleType@@Entry @AT@ 5740 @LENGTH@ 5
------------------DEL SimpleType@@Object @AT@ 5754 @LENGTH@ 6
---------------MOV SimpleType@@Object @TO@ ParameterizedType@@LinkedHashSet<Entry<Object,Object>> @AT@ 5746 @LENGTH@ 6
------------UPD VariableDeclarationFragment@@lhs2=new LinkedHashSet<>(lhs.entrySet()) @TO@ lhs2=new LinkedHashSet<>(lhs.keySet()) @AT@ 5763 @LENGTH@ 42
---------------UPD ClassInstanceCreation@@LinkedHashSet<>[lhs.entrySet()] @TO@ LinkedHashSet<>[lhs.keySet()] @AT@ 5770 @LENGTH@ 35
------------------UPD MethodInvocation@@lhs.entrySet() @TO@ lhs.keySet() @AT@ 5790 @LENGTH@ 14
---------------------UPD SimpleName@@MethodName:entrySet:[] @TO@ MethodName:keySet:[] @AT@ 5794 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:lhs2.retainAll(rhs.entrySet()) @TO@ MethodInvocation:lhs2.retainAll(rhs.keySet()) @AT@ 5810 @LENGTH@ 31
------------UPD MethodInvocation@@lhs2.retainAll(rhs.entrySet()) @TO@ lhs2.retainAll(rhs.keySet()) @AT@ 5810 @LENGTH@ 30
---------------UPD SimpleName@@MethodName:retainAll:[rhs.entrySet()] @TO@ MethodName:retainAll:[rhs.keySet()] @AT@ 5815 @LENGTH@ 25
------------------UPD MethodInvocation@@rhs.entrySet() @TO@ rhs.keySet() @AT@ 5825 @LENGTH@ 14
---------------------UPD SimpleName@@MethodName:entrySet:[] @TO@ MethodName:keySet:[] @AT@ 5829 @LENGTH@ 10
---UPD IfStatement@@if (op == Ops.AND) {  Map<Object,Object> lhs=(Map<Object,Object>)handle(expr.getArg(0));  Map<Object,Object> rhs=(Map<Object,Object>)handle(expr.getArg(1));  LinkedHashSet<Entry<Object,Object>> lhs2=new LinkedHashSet<>(lhs.entrySet());  lhs2.retainAll(rhs.entrySet());  if (lhs2.isEmpty()) {    lhs.putAll(rhs);    return lhs;  } else {    List<Object> list=new ArrayList<>(2);    list.add(handle(expr.getArg(0)));    list.add(handle(expr.getArg(1)));    return asDocument("$and",list);  }} else if (op == Ops.NOT) {  Operation<?> subOperation=(Operation<?>)expr.getArg(0);  Operator subOp=subOperation.getOperator();  if (subOp == Ops.IN) {    return visit(ExpressionUtils.operation(Boolean.class,Ops.NOT_IN,subOperation.getArg(0),subOperation.getArg(1)),context);  } else {    Document arg=(Document)handle(expr.getArg(0));    return negate(arg);  }} else if (op == Ops.OR) {  List<Object> list=new ArrayList<>(2);  list.add(handle(expr.getArg(0)));  list.add(handle(expr.getArg(1)));  return asDocument("$or",list);} else if (op == Ops.NE) {  Path<?> path=(Path<?>)expr.getArg(0);  Constant<?> constant=(Constant<?>)expr.getArg(1);  return asDocument(asDBKey(expr,0),asDocument("$ne",convert(path,constant)));} else if (op == Ops.STARTS_WITH) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1)));} else if (op == Ops.STARTS_WITH_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1),"i"));} else if (op == Ops.ENDS_WITH) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regexValue(expr,1) + "$"));} else if (op == Ops.ENDS_WITH_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regexValue(expr,1) + "$","i"));} else if (op == Ops.EQ_IGNORE_CASE) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1) + "$","i"));} else if (op == Ops.STRING_CONTAINS) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(".*" + regexValue(expr,1) + ".*"));} else if (op == Ops.STRING_CONTAINS_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(".*" + regexValue(expr,1) + ".*","i"));} else if (op == Ops.MATCHES) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(asDBValue(expr,1).toString()));} else if (op == Ops.MATCHES_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(asDBValue(expr,1).toString(),"i"));} else if (op == Ops.LIKE) {  String regex=ExpressionUtils.likeToRegex((Expression)expr.getArg(1)).toString();  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regex));} else if (op == Ops.BETWEEN) {  Document value=new Document("$gte",asDBValue(expr,1));  value.append("$lte",asDBValue(expr,2));  return asDocument(asDBKey(expr,0),value);} else if (op == Ops.IN) {  int constIndex=0;  int exprIndex=1;  if (expr.getArg(1) instanceof Constant<?>) {    constIndex=1;    exprIndex=0;  }  if (Collection.class.isAssignableFrom(expr.getArg(constIndex).getType())) {    @SuppressWarnings("unchecked") Collection<?> values=((Constant<? extends Collection<?>>)expr.getArg(constIndex)).getConstant();    return asDocument(asDBKey(expr,exprIndex),asDocument("$in",values));  } else {    Path<?> path=(Path<?>)expr.getArg(exprIndex);    Constant<?> constant=(Constant<?>)expr.getArg(constIndex);    return asDocument(asDBKey(expr,exprIndex),convert(path,constant));  }} else if (op == Ops.NOT_IN) {  int constIndex=0;  int exprIndex=1;  if (expr.getArg(1) instanceof Constant<?>) {    constIndex=1;    exprIndex=0;  }  if (Collection.class.isAssignableFrom(expr.getArg(constIndex).getType())) {    @SuppressWarnings("unchecked") Collection<?> values=((Constant<? extends Collection<?>>)expr.getArg(constIndex)).getConstant();    return asDocument(asDBKey(expr,exprIndex),asDocument("$nin",values));  } else {    Path<?> path=(Path<?>)expr.getArg(exprIndex);    Constant<?> constant=(Constant<?>)expr.getArg(constIndex);    return asDocument(asDBKey(expr,exprIndex),asDocument("$ne",convert(path,constant)));  }} else if (op == Ops.COL_IS_EMPTY) {  List<Object> list=new ArrayList<>(2);  list.add(asDocument(asDBKey(expr,0),new ArrayList<Object>()));  list.add(asDocument(asDBKey(expr,0),asDocument("$exists",false)));  return asDocument("$or",list);} else if (op == Ops.LT) {  return asDocument(asDBKey(expr,0),asDocument("$lt",asDBValue(expr,1)));} else if (op == Ops.GT) {  return asDocument(asDBKey(expr,0),asDocument("$gt",asDBValue(expr,1)));} else if (op == Ops.LOE) {  return asDocument(asDBKey(expr,0),asDocument("$lte",asDBValue(expr,1)));} else if (op == Ops.GOE) {  return asDocument(asDBKey(expr,0),asDocument("$gte",asDBValue(expr,1)));} else if (op == Ops.IS_NULL) {  return asDocument(asDBKey(expr,0),asDocument("$exists",false));} else if (op == Ops.IS_NOT_NULL) {  return asDocument(asDBKey(expr,0),asDocument("$exists",true));} else if (op == Ops.CONTAINS_KEY) {  Path<?> path=(Path<?>)expr.getArg(0);  Expression<?> key=expr.getArg(1);  return asDocument(visit(path,context) + "." + key.toString(),asDocument("$exists",true));} else if (op == MongodbOps.NEAR) {  return asDocument(asDBKey(expr,0),asDocument("$near",asDBValue(expr,1)));} else if (op == MongodbOps.NEAR_SPHERE) {  return asDocument(asDBKey(expr,0),asDocument("$nearSphere",asDBValue(expr,1)));} else if (op == MongodbOps.ELEM_MATCH) {  return asDocument(asDBKey(expr,0),asDocument("$elemMatch",asDBValue(expr,1)));} else if (op == QuerydslMongoOps.NO_MATCH) {  return new Document("$where",new BsonJavaScript("function() { return false }"));} @TO@ if (op == Ops.AND) {  Map<Object,Object> lhs=(Map<Object,Object>)handle(expr.getArg(0));  Map<Object,Object> rhs=(Map<Object,Object>)handle(expr.getArg(1));  LinkedHashSet<Object> lhs2=new LinkedHashSet<>(lhs.keySet());  lhs2.retainAll(rhs.keySet());  if (lhs2.isEmpty()) {    lhs.putAll(rhs);    return lhs;  } else {    List<Object> list=new ArrayList<>(2);    list.add(handle(expr.getArg(0)));    list.add(handle(expr.getArg(1)));    return asDocument("$and",list);  }} else if (op == Ops.NOT) {  Operation<?> subOperation=(Operation<?>)expr.getArg(0);  Operator subOp=subOperation.getOperator();  if (subOp == Ops.IN) {    return visit(ExpressionUtils.operation(Boolean.class,Ops.NOT_IN,subOperation.getArg(0),subOperation.getArg(1)),context);  } else {    Document arg=(Document)handle(expr.getArg(0));    return negate(arg);  }} else if (op == Ops.OR) {  List<Object> list=new ArrayList<>(2);  list.add(handle(expr.getArg(0)));  list.add(handle(expr.getArg(1)));  return asDocument("$or",list);} else if (op == Ops.NE) {  Path<?> path=(Path<?>)expr.getArg(0);  Constant<?> constant=(Constant<?>)expr.getArg(1);  return asDocument(asDBKey(expr,0),asDocument("$ne",convert(path,constant)));} else if (op == Ops.STARTS_WITH) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1)));} else if (op == Ops.STARTS_WITH_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1),"i"));} else if (op == Ops.ENDS_WITH) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regexValue(expr,1) + "$"));} else if (op == Ops.ENDS_WITH_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regexValue(expr,1) + "$","i"));} else if (op == Ops.EQ_IGNORE_CASE) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression("^" + regexValue(expr,1) + "$","i"));} else if (op == Ops.STRING_CONTAINS) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(".*" + regexValue(expr,1) + ".*"));} else if (op == Ops.STRING_CONTAINS_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(".*" + regexValue(expr,1) + ".*","i"));} else if (op == Ops.MATCHES) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(asDBValue(expr,1).toString()));} else if (op == Ops.MATCHES_IC) {  return asDocument(asDBKey(expr,0),new BsonRegularExpression(asDBValue(expr,1).toString(),"i"));} else if (op == Ops.LIKE) {  String regex=ExpressionUtils.likeToRegex((Expression)expr.getArg(1)).toString();  return asDocument(asDBKey(expr,0),new BsonRegularExpression(regex));} else if (op == Ops.BETWEEN) {  Document value=new Document("$gte",asDBValue(expr,1));  value.append("$lte",asDBValue(expr,2));  return asDocument(asDBKey(expr,0),value);} else if (op == Ops.IN) {  int constIndex=0;  int exprIndex=1;  if (expr.getArg(1) instanceof Constant<?>) {    constIndex=1;    exprIndex=0;  }  if (Collection.class.isAssignableFrom(expr.getArg(constIndex).getType())) {    @SuppressWarnings("unchecked") Collection<?> values=((Constant<? extends Collection<?>>)expr.getArg(constIndex)).getConstant();    return asDocument(asDBKey(expr,exprIndex),asDocument("$in",values));  } else {    Path<?> path=(Path<?>)expr.getArg(exprIndex);    Constant<?> constant=(Constant<?>)expr.getArg(constIndex);    return asDocument(asDBKey(expr,exprIndex),convert(path,constant));  }} else if (op == Ops.NOT_IN) {  int constIndex=0;  int exprIndex=1;  if (expr.getArg(1) instanceof Constant<?>) {    constIndex=1;    exprIndex=0;  }  if (Collection.class.isAssignableFrom(expr.getArg(constIndex).getType())) {    @SuppressWarnings("unchecked") Collection<?> values=((Constant<? extends Collection<?>>)expr.getArg(constIndex)).getConstant();    return asDocument(asDBKey(expr,exprIndex),asDocument("$nin",values));  } else {    Path<?> path=(Path<?>)expr.getArg(exprIndex);    Constant<?> constant=(Constant<?>)expr.getArg(constIndex);    return asDocument(asDBKey(expr,exprIndex),asDocument("$ne",convert(path,constant)));  }} else if (op == Ops.COL_IS_EMPTY) {  List<Object> list=new ArrayList<>(2);  list.add(asDocument(asDBKey(expr,0),new ArrayList<Object>()));  list.add(asDocument(asDBKey(expr,0),asDocument("$exists",false)));  return asDocument("$or",list);} else if (op == Ops.LT) {  return asDocument(asDBKey(expr,0),asDocument("$lt",asDBValue(expr,1)));} else if (op == Ops.GT) {  return asDocument(asDBKey(expr,0),asDocument("$gt",asDBValue(expr,1)));} else if (op == Ops.LOE) {  return asDocument(asDBKey(expr,0),asDocument("$lte",asDBValue(expr,1)));} else if (op == Ops.GOE) {  return asDocument(asDBKey(expr,0),asDocument("$gte",asDBValue(expr,1)));} else if (op == Ops.IS_NULL) {  return asDocument(asDBKey(expr,0),asDocument("$exists",false));} else if (op == Ops.IS_NOT_NULL) {  return asDocument(asDBKey(expr,0),asDocument("$exists",true));} else if (op == Ops.CONTAINS_KEY) {  Path<?> path=(Path<?>)expr.getArg(0);  Expression<?> key=expr.getArg(1);  return asDocument(visit(path,context) + "." + key.toString(),asDocument("$exists",true));} else if (op == MongodbOps.NEAR) {  return asDocument(asDBKey(expr,0),asDocument("$near",asDBValue(expr,1)));} else if (op == MongodbOps.NEAR_SPHERE) {  return asDocument(asDBKey(expr,0),asDocument("$nearSphere",asDBValue(expr,1)));} else if (op == MongodbOps.ELEM_MATCH) {  return asDocument(asDBKey(expr,0),asDocument("$elemMatch",asDBValue(expr,1)));} else if (op == QuerydslMongoOps.NO_MATCH) {  return new Document("$where",new BsonJavaScript("function() { return false }"));} @AT@ 5550 @LENGTH@ 6066
------UPD Block@@ThenBody:{  Map<Object,Object> lhs=(Map<Object,Object>)handle(expr.getArg(0));  Map<Object,Object> rhs=(Map<Object,Object>)handle(expr.getArg(1));  LinkedHashSet<Entry<Object,Object>> lhs2=new LinkedHashSet<>(lhs.entrySet());  lhs2.retainAll(rhs.entrySet());  if (lhs2.isEmpty()) {    lhs.putAll(rhs);    return lhs;  } else {    List<Object> list=new ArrayList<>(2);    list.add(handle(expr.getArg(0)));    list.add(handle(expr.getArg(1)));    return asDocument("$and",list);  }} @TO@ ThenBody:{  Map<Object,Object> lhs=(Map<Object,Object>)handle(expr.getArg(0));  Map<Object,Object> rhs=(Map<Object,Object>)handle(expr.getArg(1));  LinkedHashSet<Object> lhs2=new LinkedHashSet<>(lhs.keySet());  lhs2.retainAll(rhs.keySet());  if (lhs2.isEmpty()) {    lhs.putAll(rhs);    return lhs;  } else {    List<Object> list=new ArrayList<>(2);    list.add(handle(expr.getArg(0)));    list.add(handle(expr.getArg(1)));    return asDocument("$and",list);  }} @AT@ 5569 @LENGTH@ 514
---------UPD VariableDeclarationStatement@@LinkedHashSet<Entry<Object,Object>> lhs2=new LinkedHashSet<>(lhs.entrySet()); @TO@ LinkedHashSet<Object> lhs2=new LinkedHashSet<>(lhs.keySet()); @AT@ 5726 @LENGTH@ 80
------------UPD ParameterizedType@@LinkedHashSet<Entry<Object,Object>> @TO@ LinkedHashSet<Object> @AT@ 5726 @LENGTH@ 36
---------------DEL ParameterizedType@@Entry<Object,Object> @AT@ 5740 @LENGTH@ 21
------------------DEL SimpleType@@Entry @AT@ 5740 @LENGTH@ 5
------------------DEL SimpleType@@Object @AT@ 5754 @LENGTH@ 6
---------------MOV SimpleType@@Object @TO@ ParameterizedType@@LinkedHashSet<Entry<Object,Object>> @AT@ 5746 @LENGTH@ 6
------------UPD VariableDeclarationFragment@@lhs2=new LinkedHashSet<>(lhs.entrySet()) @TO@ lhs2=new LinkedHashSet<>(lhs.keySet()) @AT@ 5763 @LENGTH@ 42
---------------UPD ClassInstanceCreation@@LinkedHashSet<>[lhs.entrySet()] @TO@ LinkedHashSet<>[lhs.keySet()] @AT@ 5770 @LENGTH@ 35
------------------UPD MethodInvocation@@lhs.entrySet() @TO@ lhs.keySet() @AT@ 5790 @LENGTH@ 14
---------------------UPD SimpleName@@MethodName:entrySet:[] @TO@ MethodName:keySet:[] @AT@ 5794 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:lhs2.retainAll(rhs.entrySet()) @TO@ MethodInvocation:lhs2.retainAll(rhs.keySet()) @AT@ 5810 @LENGTH@ 31
------------UPD MethodInvocation@@lhs2.retainAll(rhs.entrySet()) @TO@ lhs2.retainAll(rhs.keySet()) @AT@ 5810 @LENGTH@ 30
---------------UPD SimpleName@@MethodName:retainAll:[rhs.entrySet()] @TO@ MethodName:retainAll:[rhs.keySet()] @AT@ 5815 @LENGTH@ 25
------------------UPD MethodInvocation@@rhs.entrySet() @TO@ rhs.keySet() @AT@ 5825 @LENGTH@ 14
---------------------UPD SimpleName@@MethodName:entrySet:[] @TO@ MethodName:keySet:[] @AT@ 5829 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertTrue(names.contains("zip")) @TO@ MethodInvocation:assertTrue(names.contains("zipdeflater")) @AT@ 2698 @LENGTH@ 34
---UPD MethodInvocation@@assertTrue(names.contains("zip")) @TO@ assertTrue(names.contains("zipdeflater")) @AT@ 2698 @LENGTH@ 33
------UPD SimpleName@@MethodName:assertTrue:[names.contains("zip")] @TO@ MethodName:assertTrue:[names.contains("zipdeflater")] @AT@ 2698 @LENGTH@ 33
---------UPD MethodInvocation@@names.contains("zip") @TO@ names.contains("zipdeflater") @AT@ 2709 @LENGTH@ 21
------------UPD SimpleName@@MethodName:contains:["zip"] @TO@ MethodName:contains:["zipdeflater"] @AT@ 2715 @LENGTH@ 15
---------------UPD StringLiteral@@"zip" @TO@ "zipdeflater" @AT@ 2724 @LENGTH@ 5


UPD VariableDeclarationStatement@@Document updateObj=updateMapper.getMappedObject(update.getUpdateObject(),entity); @TO@ Document updateObj=update instanceof MappedUpdate ? update.getUpdateObject() : updateMapper.getMappedObject(update.getUpdateObject(),entity); @AT@ 60616 @LENGTH@ 84
---UPD VariableDeclarationFragment@@updateObj=updateMapper.getMappedObject(update.getUpdateObject(),entity) @TO@ updateObj=update instanceof MappedUpdate ? update.getUpdateObject() : updateMapper.getMappedObject(update.getUpdateObject(),entity) @AT@ 60625 @LENGTH@ 74
------INS ConditionalExpression@@update instanceof MappedUpdate ? update.getUpdateObject() : updateMapper.getMappedObject(update.getUpdateObject(),entity) @TO@ VariableDeclarationFragment@@updateObj=updateMapper.getMappedObject(update.getUpdateObject(),entity) @AT@ 60718 @LENGTH@ 122
---------MOV MethodInvocation@@updateMapper.getMappedObject(update.getUpdateObject(),entity) @TO@ ConditionalExpression@@update instanceof MappedUpdate ? update.getUpdateObject() : updateMapper.getMappedObject(update.getUpdateObject(),entity) @AT@ 60637 @LENGTH@ 62
---------INS InstanceofExpression@@update instanceof MappedUpdate @TO@ ConditionalExpression@@update instanceof MappedUpdate ? update.getUpdateObject() : updateMapper.getMappedObject(update.getUpdateObject(),entity) @AT@ 60718 @LENGTH@ 30
------------INS SimpleName@@update @TO@ InstanceofExpression@@update instanceof MappedUpdate @AT@ 60718 @LENGTH@ 6
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@update instanceof MappedUpdate @AT@ 60725 @LENGTH@ 10
------------INS SimpleType@@MappedUpdate @TO@ InstanceofExpression@@update instanceof MappedUpdate @AT@ 60736 @LENGTH@ 12
---------INS MethodInvocation@@update.getUpdateObject() @TO@ ConditionalExpression@@update instanceof MappedUpdate ? update.getUpdateObject() : updateMapper.getMappedObject(update.getUpdateObject(),entity) @AT@ 60751 @LENGTH@ 24
------------INS SimpleName@@Name:update @TO@ MethodInvocation@@update.getUpdateObject() @AT@ 60751 @LENGTH@ 6
------------INS SimpleName@@MethodName:getUpdateObject:[] @TO@ MethodInvocation@@update.getUpdateObject() @AT@ 60758 @LENGTH@ 17


UPD FieldDeclaration@@private, String, [sslProtocol="TLS"] @TO@ private, String, [sslProtocol="TLSv1.2"] @AT@ 19121 @LENGTH@ 35
---UPD VariableDeclarationFragment@@sslProtocol="TLS" @TO@ sslProtocol="TLSv1.2" @AT@ 19136 @LENGTH@ 19
------UPD StringLiteral@@"TLS" @TO@ "TLSv1.2" @AT@ 19150 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:jar.addAsManifestResource(new StringAsset("Dependencies: org.jboss.jts \n"),"MANIFEST.MF") @AT@ 1906 @LENGTH@ 92
---DEL MethodInvocation@@jar.addAsManifestResource(new StringAsset("Dependencies: org.jboss.jts \n"),"MANIFEST.MF") @AT@ 1906 @LENGTH@ 91
------DEL SimpleName@@Name:jar @AT@ 1906 @LENGTH@ 3
------DEL SimpleName@@MethodName:addAsManifestResource:[new StringAsset("Dependencies: org.jboss.jts \n"), "MANIFEST.MF"] @AT@ 1910 @LENGTH@ 87
---------DEL ClassInstanceCreation@@StringAsset["Dependencies: org.jboss.jts \n"] @AT@ 1932 @LENGTH@ 49
------------DEL New@@new @AT@ 1932 @LENGTH@ 3
------------DEL SimpleType@@StringAsset @AT@ 1936 @LENGTH@ 11
------------DEL StringLiteral@@"Dependencies: org.jboss.jts \n" @AT@ 1948 @LENGTH@ 32
---------DEL StringLiteral@@"MANIFEST.MF" @AT@ 1983 @LENGTH@ 13


UPD VariableDeclarationStatement@@final List<Branch> nextBranches=branching ? new ArrayList<>() : Collections.EMPTY_LIST; @TO@ final List<Branch> nextBranches=branching ? new ArrayList<Branch>() : Collections.<Branch>emptyList(); @AT@ 17994 @LENGTH@ 89
---UPD VariableDeclarationFragment@@nextBranches=branching ? new ArrayList<>() : Collections.EMPTY_LIST @TO@ nextBranches=branching ? new ArrayList<Branch>() : Collections.<Branch>emptyList() @AT@ 18013 @LENGTH@ 69
------UPD ConditionalExpression@@branching ? new ArrayList<>() : Collections.EMPTY_LIST @TO@ branching ? new ArrayList<Branch>() : Collections.<Branch>emptyList() @AT@ 18028 @LENGTH@ 54
---------UPD ClassInstanceCreation@@ArrayList<>[] @TO@ ArrayList<Branch>[] @AT@ 18040 @LENGTH@ 17
------------UPD ParameterizedType@@ArrayList<> @TO@ ArrayList<Branch> @AT@ 18044 @LENGTH@ 11
---------------INS SimpleType@@Branch @TO@ ParameterizedType@@ArrayList<> @AT@ 18054 @LENGTH@ 6
---------DEL QualifiedName@@Collections.EMPTY_LIST @AT@ 18060 @LENGTH@ 22
------------DEL SimpleName@@Collections @AT@ 18060 @LENGTH@ 11
------------DEL SimpleName@@EMPTY_LIST @AT@ 18072 @LENGTH@ 10
---------INS MethodInvocation@@Collections.<Branch>emptyList() @TO@ ConditionalExpression@@branching ? new ArrayList<>() : Collections.EMPTY_LIST @AT@ 18066 @LENGTH@ 31
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<Branch>emptyList() @AT@ 18066 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.<Branch>emptyList() @AT@ 18086 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:setCustomWebClientThenCustomWebClientIsUsed,  @TO@ TypeDeclaration@@[public]WebClientReactiveAuthorizationCodeTokenResponseClientTests,  @AT@ 11360 @LENGTH@ 783
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setCustomWebClientThenCustomWebClientIsUsed,  @AT@ 11360 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setCustomWebClientThenCustomWebClientIsUsed,  @AT@ 11367 @LENGTH@ 4
---INS SimpleName@@MethodName:setCustomWebClientThenCustomWebClientIsUsed @TO@ MethodDeclaration@@public, void, MethodName:setCustomWebClientThenCustomWebClientIsUsed,  @AT@ 11372 @LENGTH@ 43
---INS VariableDeclarationStatement@@WebClient customClient=mock(WebClient.class); @TO@ MethodDeclaration@@public, void, MethodName:setCustomWebClientThenCustomWebClientIsUsed,  @AT@ 11422 @LENGTH@ 47
------INS SimpleType@@WebClient @TO@ VariableDeclarationStatement@@WebClient customClient=mock(WebClient.class); @AT@ 11422 @LENGTH@ 9
------INS VariableDeclarationFragment@@customClient=mock(WebClient.class) @TO@ VariableDeclarationStatement@@WebClient customClient=mock(WebClient.class); @AT@ 11432 @LENGTH@ 36
---------INS SimpleName@@customClient @TO@ VariableDeclarationFragment@@customClient=mock(WebClient.class) @AT@ 11432 @LENGTH@ 12
---------INS MethodInvocation@@mock(WebClient.class) @TO@ VariableDeclarationFragment@@customClient=mock(WebClient.class) @AT@ 11447 @LENGTH@ 21
------------INS SimpleName@@MethodName:mock:[WebClient.class] @TO@ MethodInvocation@@mock(WebClient.class) @AT@ 11447 @LENGTH@ 21
---------------INS TypeLiteral@@WebClient.class @TO@ SimpleName@@MethodName:mock:[WebClient.class] @AT@ 11452 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:when(customClient.post()).thenReturn(WebClient.builder().build().post()) @TO@ MethodDeclaration@@public, void, MethodName:setCustomWebClientThenCustomWebClientIsUsed,  @AT@ 11472 @LENGTH@ 73
------INS MethodInvocation@@when(customClient.post()).thenReturn(WebClient.builder().build().post()) @TO@ ExpressionStatement@@MethodInvocation:when(customClient.post()).thenReturn(WebClient.builder().build().post()) @AT@ 11472 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:when:[customClient.post()] @TO@ MethodInvocation@@when(customClient.post()).thenReturn(WebClient.builder().build().post()) @AT@ 11472 @LENGTH@ 25
------------INS MethodInvocation@@customClient.post() @TO@ MethodInvocation@@MethodName:when:[customClient.post()] @AT@ 11477 @LENGTH@ 19
---------------INS SimpleName@@Name:customClient @TO@ MethodInvocation@@customClient.post() @AT@ 11477 @LENGTH@ 12
---------------INS SimpleName@@MethodName:post:[] @TO@ MethodInvocation@@customClient.post() @AT@ 11490 @LENGTH@ 6
---------INS SimpleName@@MethodName:thenReturn:[WebClient.builder().build().post()] @TO@ MethodInvocation@@when(customClient.post()).thenReturn(WebClient.builder().build().post()) @AT@ 11498 @LENGTH@ 46
------------INS MethodInvocation@@WebClient.builder().build().post() @TO@ SimpleName@@MethodName:thenReturn:[WebClient.builder().build().post()] @AT@ 11509 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:build:[] @TO@ MethodInvocation@@WebClient.builder().build().post() @AT@ 11509 @LENGTH@ 27
---------------INS MethodInvocation@@MethodName:builder:[] @TO@ MethodInvocation@@WebClient.builder().build().post() @AT@ 11509 @LENGTH@ 19
---------------INS SimpleName@@Name:WebClient @TO@ MethodInvocation@@WebClient.builder().build().post() @AT@ 11509 @LENGTH@ 9
---------------INS SimpleName@@MethodName:post:[] @TO@ MethodInvocation@@WebClient.builder().build().post() @AT@ 11537 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:tokenResponseClient.setWebClient(customClient) @TO@ MethodDeclaration@@public, void, MethodName:setCustomWebClientThenCustomWebClientIsUsed,  @AT@ 11549 @LENGTH@ 47
------INS MethodInvocation@@tokenResponseClient.setWebClient(customClient) @TO@ ExpressionStatement@@MethodInvocation:tokenResponseClient.setWebClient(customClient) @AT@ 11549 @LENGTH@ 46
---------INS SimpleName@@Name:tokenResponseClient @TO@ MethodInvocation@@tokenResponseClient.setWebClient(customClient) @AT@ 11549 @LENGTH@ 19
---------INS SimpleName@@MethodName:setWebClient:[customClient] @TO@ MethodInvocation@@tokenResponseClient.setWebClient(customClient) @AT@ 11569 @LENGTH@ 26
------------INS SimpleName@@customClient @TO@ SimpleName@@MethodName:setWebClient:[customClient] @AT@ 11582 @LENGTH@ 12
---INS VariableDeclarationStatement@@String accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n"; @TO@ MethodDeclaration@@public, void, MethodName:setCustomWebClientThenCustomWebClientIsUsed,  @AT@ 11600 @LENGTH@ 229
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n"; @AT@ 11600 @LENGTH@ 6
------INS VariableDeclarationFragment@@accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n" @TO@ VariableDeclarationStatement@@String accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n"; @AT@ 11607 @LENGTH@ 221
---------INS SimpleName@@accessTokenSuccessResponse @TO@ VariableDeclarationFragment@@accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n" @AT@ 11607 @LENGTH@ 26
---------INS InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n" @TO@ VariableDeclarationFragment@@accessTokenSuccessResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n" @AT@ 11636 @LENGTH@ 192
------------INS StringLiteral@@"{\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n" @AT@ 11636 @LENGTH@ 5
------------INS Operator@@+ @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n" @AT@ 11641 @LENGTH@ 1
------------INS StringLiteral@@"	\"access_token\": \"access-token-1234\",\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n" @AT@ 11648 @LENGTH@ 45
------------INS StringLiteral@@"   \"token_type\": \"bearer\",\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n" @AT@ 11700 @LENGTH@ 34
------------INS StringLiteral@@"   \"expires_in\": \"3600\",\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n" @AT@ 11741 @LENGTH@ 32
------------INS StringLiteral@@"   \"scope\": \"openid profile\"\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n" @AT@ 11780 @LENGTH@ 36
------------INS StringLiteral@@"}\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": \"3600\",\n"+ "   \"scope\": \"openid profile\"\n"+ "}\n" @AT@ 11823 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:this.server.enqueue(jsonResponse(accessTokenSuccessResponse)) @TO@ MethodDeclaration@@public, void, MethodName:setCustomWebClientThenCustomWebClientIsUsed,  @AT@ 11832 @LENGTH@ 62
------INS MethodInvocation@@this.server.enqueue(jsonResponse(accessTokenSuccessResponse)) @TO@ ExpressionStatement@@MethodInvocation:this.server.enqueue(jsonResponse(accessTokenSuccessResponse)) @AT@ 11832 @LENGTH@ 61
---------INS FieldAccess@@this.server @TO@ MethodInvocation@@this.server.enqueue(jsonResponse(accessTokenSuccessResponse)) @AT@ 11832 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.server @AT@ 11832 @LENGTH@ 4
------------INS SimpleName@@server @TO@ FieldAccess@@this.server @AT@ 11837 @LENGTH@ 6
---------INS SimpleName@@MethodName:enqueue:[jsonResponse(accessTokenSuccessResponse)] @TO@ MethodInvocation@@this.server.enqueue(jsonResponse(accessTokenSuccessResponse)) @AT@ 11844 @LENGTH@ 49
------------INS MethodInvocation@@jsonResponse(accessTokenSuccessResponse) @TO@ SimpleName@@MethodName:enqueue:[jsonResponse(accessTokenSuccessResponse)] @AT@ 11852 @LENGTH@ 40
---------------INS SimpleName@@MethodName:jsonResponse:[accessTokenSuccessResponse] @TO@ MethodInvocation@@jsonResponse(accessTokenSuccessResponse) @AT@ 11852 @LENGTH@ 40
------------------INS SimpleName@@accessTokenSuccessResponse @TO@ SimpleName@@MethodName:jsonResponse:[accessTokenSuccessResponse] @AT@ 11865 @LENGTH@ 26
---INS ExpressionStatement@@MethodInvocation:this.clientRegistration.scope("openid","profile","email","address") @TO@ MethodDeclaration@@public, void, MethodName:setCustomWebClientThenCustomWebClientIsUsed,  @AT@ 11898 @LENGTH@ 71
------INS MethodInvocation@@this.clientRegistration.scope("openid","profile","email","address") @TO@ ExpressionStatement@@MethodInvocation:this.clientRegistration.scope("openid","profile","email","address") @AT@ 11898 @LENGTH@ 70
---------INS FieldAccess@@this.clientRegistration @TO@ MethodInvocation@@this.clientRegistration.scope("openid","profile","email","address") @AT@ 11898 @LENGTH@ 23
------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistration @AT@ 11898 @LENGTH@ 4
------------INS SimpleName@@clientRegistration @TO@ FieldAccess@@this.clientRegistration @AT@ 11903 @LENGTH@ 18
---------INS SimpleName@@MethodName:scope:["openid", "profile", "email", "address"] @TO@ MethodInvocation@@this.clientRegistration.scope("openid","profile","email","address") @AT@ 11922 @LENGTH@ 46
------------INS StringLiteral@@"openid" @TO@ SimpleName@@MethodName:scope:["openid", "profile", "email", "address"] @AT@ 11928 @LENGTH@ 8
------------INS StringLiteral@@"profile" @TO@ SimpleName@@MethodName:scope:["openid", "profile", "email", "address"] @AT@ 11938 @LENGTH@ 9
------------INS StringLiteral@@"email" @TO@ SimpleName@@MethodName:scope:["openid", "profile", "email", "address"] @AT@ 11949 @LENGTH@ 7
------------INS StringLiteral@@"address" @TO@ SimpleName@@MethodName:scope:["openid", "profile", "email", "address"] @AT@ 11958 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2AccessTokenResponse response=this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block(); @TO@ MethodDeclaration@@public, void, MethodName:setCustomWebClientThenCustomWebClientIsUsed,  @AT@ 11973 @LENGTH@ 120
------INS SimpleType@@OAuth2AccessTokenResponse @TO@ VariableDeclarationStatement@@OAuth2AccessTokenResponse response=this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block(); @AT@ 11973 @LENGTH@ 25
------INS VariableDeclarationFragment@@response=this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @TO@ VariableDeclarationStatement@@OAuth2AccessTokenResponse response=this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block(); @AT@ 11999 @LENGTH@ 93
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @AT@ 11999 @LENGTH@ 8
---------INS MethodInvocation@@this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @TO@ VariableDeclarationFragment@@response=this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @AT@ 12010 @LENGTH@ 82
------------INS MethodInvocation@@MethodName:getTokenResponse:[authorizationCodeGrantRequest()] @TO@ MethodInvocation@@this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @AT@ 12010 @LENGTH@ 74
---------------INS MethodInvocation@@MethodName:authorizationCodeGrantRequest:[] @TO@ MethodInvocation@@MethodName:getTokenResponse:[authorizationCodeGrantRequest()] @AT@ 12052 @LENGTH@ 31
------------INS FieldAccess@@this.tokenResponseClient @TO@ MethodInvocation@@this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @AT@ 12010 @LENGTH@ 24
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.tokenResponseClient @AT@ 12010 @LENGTH@ 4
---------------INS SimpleName@@tokenResponseClient @TO@ FieldAccess@@this.tokenResponseClient @AT@ 12015 @LENGTH@ 19
------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@this.tokenResponseClient.getTokenResponse(authorizationCodeGrantRequest()).block() @AT@ 12085 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:verify(customClient,atLeastOnce()).post() @TO@ MethodDeclaration@@public, void, MethodName:setCustomWebClientThenCustomWebClientIsUsed,  @AT@ 12097 @LENGTH@ 43
------INS MethodInvocation@@verify(customClient,atLeastOnce()).post() @TO@ ExpressionStatement@@MethodInvocation:verify(customClient,atLeastOnce()).post() @AT@ 12097 @LENGTH@ 42
---------INS MethodInvocation@@MethodName:verify:[customClient, atLeastOnce()] @TO@ MethodInvocation@@verify(customClient,atLeastOnce()).post() @AT@ 12097 @LENGTH@ 35
------------INS SimpleName@@customClient @TO@ MethodInvocation@@MethodName:verify:[customClient, atLeastOnce()] @AT@ 12104 @LENGTH@ 12
------------INS MethodInvocation@@MethodName:atLeastOnce:[] @TO@ MethodInvocation@@MethodName:verify:[customClient, atLeastOnce()] @AT@ 12118 @LENGTH@ 13
---------INS SimpleName@@MethodName:post:[] @TO@ MethodInvocation@@verify(customClient,atLeastOnce()).post() @AT@ 12133 @LENGTH@ 6


UPD MethodDeclaration@@private, TaskExecutor, MethodName:resolveExecutor, RabbitListener rabbitListener, Object execTarget, String beanName,  @TO@ private, void, MethodName:resolveExecutor, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListener, Object execTarget, String beanName,  @AT@ 20839 @LENGTH@ 776
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, TaskExecutor, MethodName:resolveExecutor, RabbitListener rabbitListener, Object execTarget, String beanName,  @AT@ 20820 @LENGTH@ 4
---INS SingleVariableDeclaration@@MethodRabbitListenerEndpoint endpoint @TO@ MethodDeclaration@@private, TaskExecutor, MethodName:resolveExecutor, RabbitListener rabbitListener, Object execTarget, String beanName,  @AT@ 20841 @LENGTH@ 37
------INS SimpleType@@MethodRabbitListenerEndpoint @TO@ SingleVariableDeclaration@@MethodRabbitListenerEndpoint endpoint @AT@ 20841 @LENGTH@ 28
------INS SimpleName@@endpoint @TO@ SingleVariableDeclaration@@MethodRabbitListenerEndpoint endpoint @AT@ 20870 @LENGTH@ 8
---DEL SimpleType@@TaskExecutor @AT@ 20847 @LENGTH@ 12
---DEL VariableDeclarationStatement@@TaskExecutor exec=null; @AT@ 20947 @LENGTH@ 25
------DEL SimpleType@@TaskExecutor @AT@ 20947 @LENGTH@ 12
------DEL VariableDeclarationFragment@@exec=null @AT@ 20960 @LENGTH@ 11
---------DEL SimpleName@@exec @AT@ 20960 @LENGTH@ 4
---------DEL NullLiteral@@null @AT@ 20967 @LENGTH@ 4
---UPD IfStatement@@if (StringUtils.hasText(execBeanName)) {  Assert.state(this.beanFactory != null,"BeanFactory must be set to obtain container factory by bean name");  try {    exec=this.beanFactory.getBean(execBeanName,TaskExecutor.class);  } catch (  NoSuchBeanDefinitionException ex) {    throw new BeanInitializationException("Could not register rabbit listener endpoint on [" + execTarget + "] for bean "+ beanName+ ", no "+ TaskExecutor.class.getSimpleName()+ " with id '"+ execBeanName+ "' was found in the application context",ex);  }} @TO@ if (StringUtils.hasText(execBeanName)) {  Assert.state(this.beanFactory != null,"BeanFactory must be set to obtain container factory by bean name");  try {    endpoint.setTaskExecutor(this.beanFactory.getBean(execBeanName,TaskExecutor.class));  } catch (  NoSuchBeanDefinitionException ex) {    throw new BeanInitializationException("Could not register rabbit listener endpoint on [" + execTarget + "] for bean "+ beanName+ ", no "+ TaskExecutor.class.getSimpleName()+ " with id '"+ execBeanName+ "' was found in the application context",ex);  }} @AT@ 21035 @LENGTH@ 562
------UPD Block@@ThenBody:{  Assert.state(this.beanFactory != null,"BeanFactory must be set to obtain container factory by bean name");  try {    exec=this.beanFactory.getBean(execBeanName,TaskExecutor.class);  } catch (  NoSuchBeanDefinitionException ex) {    throw new BeanInitializationException("Could not register rabbit listener endpoint on [" + execTarget + "] for bean "+ beanName+ ", no "+ TaskExecutor.class.getSimpleName()+ " with id '"+ execBeanName+ "' was found in the application context",ex);  }} @TO@ ThenBody:{  Assert.state(this.beanFactory != null,"BeanFactory must be set to obtain container factory by bean name");  try {    endpoint.setTaskExecutor(this.beanFactory.getBean(execBeanName,TaskExecutor.class));  } catch (  NoSuchBeanDefinitionException ex) {    throw new BeanInitializationException("Could not register rabbit listener endpoint on [" + execTarget + "] for bean "+ beanName+ ", no "+ TaskExecutor.class.getSimpleName()+ " with id '"+ execBeanName+ "' was found in the application context",ex);  }} @AT@ 21074 @LENGTH@ 523
---------UPD TryStatement@@try {  exec=this.beanFactory.getBean(execBeanName,TaskExecutor.class);} catch (NoSuchBeanDefinitionException ex) {  throw new BeanInitializationException("Could not register rabbit listener endpoint on [" + execTarget + "] for bean "+ beanName+ ", no "+ TaskExecutor.class.getSimpleName()+ " with id '"+ execBeanName+ "' was found in the application context",ex);} @TO@ try {  endpoint.setTaskExecutor(this.beanFactory.getBean(execBeanName,TaskExecutor.class));} catch (NoSuchBeanDefinitionException ex) {  throw new BeanInitializationException("Could not register rabbit listener endpoint on [" + execTarget + "] for bean "+ beanName+ ", no "+ TaskExecutor.class.getSimpleName()+ " with id '"+ execBeanName+ "' was found in the application context",ex);} @AT@ 21190 @LENGTH@ 403
------------UPD ExpressionStatement@@Assignment:exec=this.beanFactory.getBean(execBeanName,TaskExecutor.class) @TO@ MethodInvocation:endpoint.setTaskExecutor(this.beanFactory.getBean(execBeanName,TaskExecutor.class)) @AT@ 21200 @LENGTH@ 66
---------------INS MethodInvocation@@endpoint.setTaskExecutor(this.beanFactory.getBean(execBeanName,TaskExecutor.class)) @TO@ ExpressionStatement@@Assignment:exec=this.beanFactory.getBean(execBeanName,TaskExecutor.class) @AT@ 21180 @LENGTH@ 84
------------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.setTaskExecutor(this.beanFactory.getBean(execBeanName,TaskExecutor.class)) @AT@ 21180 @LENGTH@ 8
------------------INS SimpleName@@MethodName:setTaskExecutor:[this.beanFactory.getBean(execBeanName,TaskExecutor.class)] @TO@ MethodInvocation@@endpoint.setTaskExecutor(this.beanFactory.getBean(execBeanName,TaskExecutor.class)) @AT@ 21189 @LENGTH@ 75
---------------------MOV MethodInvocation@@this.beanFactory.getBean(execBeanName,TaskExecutor.class) @TO@ SimpleName@@MethodName:setTaskExecutor:[this.beanFactory.getBean(execBeanName,TaskExecutor.class)] @AT@ 21207 @LENGTH@ 58
---------------DEL Assignment@@exec=this.beanFactory.getBean(execBeanName,TaskExecutor.class) @AT@ 21200 @LENGTH@ 65
------------------DEL SimpleName@@exec @AT@ 21200 @LENGTH@ 4
------------------DEL Operator@@= @AT@ 21204 @LENGTH@ 1
---DEL ReturnStatement@@SimpleName:exec @AT@ 21600 @LENGTH@ 12
------DEL SimpleName@@exec @AT@ 21607 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testNullMetadataInput,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]AuditingBeanDefinitionRegistrarSupportUnitTests,  @AT@ 1995 @LENGTH@ 199
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNullMetadataInput,  @AT@ 1995 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNullMetadataInput,  @AT@ 2002 @LENGTH@ 4
---INS SimpleName@@MethodName:testNullMetadataInput @TO@ MethodDeclaration@@public, void, MethodName:testNullMetadataInput,  @AT@ 2007 @LENGTH@ 21
---INS VariableDeclarationStatement@@AuditingBeanDefinitionRegistrarSupport registrar=new DummyAuditingBeanDefinitionRegistrarSupport(); @TO@ MethodDeclaration@@public, void, MethodName:testNullMetadataInput,  @AT@ 2036 @LENGTH@ 101
------INS SimpleType@@AuditingBeanDefinitionRegistrarSupport @TO@ VariableDeclarationStatement@@AuditingBeanDefinitionRegistrarSupport registrar=new DummyAuditingBeanDefinitionRegistrarSupport(); @AT@ 2036 @LENGTH@ 38
------INS VariableDeclarationFragment@@registrar=new DummyAuditingBeanDefinitionRegistrarSupport() @TO@ VariableDeclarationStatement@@AuditingBeanDefinitionRegistrarSupport registrar=new DummyAuditingBeanDefinitionRegistrarSupport(); @AT@ 2075 @LENGTH@ 61
---------INS SimpleName@@registrar @TO@ VariableDeclarationFragment@@registrar=new DummyAuditingBeanDefinitionRegistrarSupport() @AT@ 2075 @LENGTH@ 9
---------INS ClassInstanceCreation@@DummyAuditingBeanDefinitionRegistrarSupport[] @TO@ VariableDeclarationFragment@@registrar=new DummyAuditingBeanDefinitionRegistrarSupport() @AT@ 2087 @LENGTH@ 49
------------INS New@@new @TO@ ClassInstanceCreation@@DummyAuditingBeanDefinitionRegistrarSupport[] @AT@ 2087 @LENGTH@ 3
------------INS SimpleType@@DummyAuditingBeanDefinitionRegistrarSupport @TO@ ClassInstanceCreation@@DummyAuditingBeanDefinitionRegistrarSupport[] @AT@ 2091 @LENGTH@ 43
---INS ExpressionStatement@@MethodInvocation:registrar.registerBeanDefinitions(null,registry) @TO@ MethodDeclaration@@public, void, MethodName:testNullMetadataInput,  @AT@ 2141 @LENGTH@ 50
------INS MethodInvocation@@registrar.registerBeanDefinitions(null,registry) @TO@ ExpressionStatement@@MethodInvocation:registrar.registerBeanDefinitions(null,registry) @AT@ 2141 @LENGTH@ 49
---------INS SimpleName@@Name:registrar @TO@ MethodInvocation@@registrar.registerBeanDefinitions(null,registry) @AT@ 2141 @LENGTH@ 9
---------INS SimpleName@@MethodName:registerBeanDefinitions:[null, registry] @TO@ MethodInvocation@@registrar.registerBeanDefinitions(null,registry) @AT@ 2151 @LENGTH@ 39
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:registerBeanDefinitions:[null, registry] @AT@ 2175 @LENGTH@ 4
------------INS SimpleName@@registry @TO@ SimpleName@@MethodName:registerBeanDefinitions:[null, registry] @AT@ 2181 @LENGTH@ 8


UPD FieldDeclaration@@private, boolean, [initialized=false] @TO@ private, boolean, [initialized] @AT@ 3408 @LENGTH@ 36
---UPD VariableDeclarationFragment@@initialized=false @TO@ initialized @AT@ 3424 @LENGTH@ 19
------DEL BooleanLiteral@@false @AT@ 3438 @LENGTH@ 5


UPD TypeDeclaration@@[public]PropertyPlaceholdersHelper,  @TO@ [public, final]PropertyPlaceholdersHelper,  @AT@ 984 @LENGTH@ 2558
---INS Modifier@@final @TO@ TypeDeclaration@@[public]PropertyPlaceholdersHelper,  @AT@ 991 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testListenableFutureReturn, Exception,  @TO@ TypeDeclaration@@[public]MessageListenerAdapterTests,  @AT@ 8402 @LENGTH@ 711
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testListenableFutureReturn, Exception,  @AT@ 8402 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testListenableFutureReturn, Exception,  @AT@ 8409 @LENGTH@ 4
---INS SimpleName@@MethodName:testListenableFutureReturn @TO@ MethodDeclaration@@public, void, MethodName:testListenableFutureReturn, Exception,  @AT@ 8414 @LENGTH@ 26
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testListenableFutureReturn, Exception,  @AT@ 8450 @LENGTH@ 9
---INS TypeDeclaration@@Delegate,  @TO@ MethodDeclaration@@public, void, MethodName:testListenableFutureReturn, Exception,  @AT@ 8470 @LENGTH@ 259
------INS SimpleName@@ClassName:Delegate @TO@ TypeDeclaration@@Delegate,  @AT@ 8470 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:this.adapter=new MessageListenerAdapter(new Delegate(),"myPojoMessageMethod") @TO@ MethodDeclaration@@public, void, MethodName:testListenableFutureReturn, Exception,  @AT@ 8732 @LENGTH@ 81
------INS Assignment@@this.adapter=new MessageListenerAdapter(new Delegate(),"myPojoMessageMethod") @TO@ ExpressionStatement@@Assignment:this.adapter=new MessageListenerAdapter(new Delegate(),"myPojoMessageMethod") @AT@ 8732 @LENGTH@ 80
---------INS FieldAccess@@this.adapter @TO@ Assignment@@this.adapter=new MessageListenerAdapter(new Delegate(),"myPojoMessageMethod") @AT@ 8732 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.adapter @AT@ 8732 @LENGTH@ 4
------------INS SimpleName@@adapter @TO@ FieldAccess@@this.adapter @AT@ 8737 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.adapter=new MessageListenerAdapter(new Delegate(),"myPojoMessageMethod") @AT@ 8744 @LENGTH@ 1
---------INS ClassInstanceCreation@@MessageListenerAdapter[new Delegate(), "myPojoMessageMethod"] @TO@ Assignment@@this.adapter=new MessageListenerAdapter(new Delegate(),"myPojoMessageMethod") @AT@ 8747 @LENGTH@ 65
------------INS New@@new @TO@ ClassInstanceCreation@@MessageListenerAdapter[new Delegate(), "myPojoMessageMethod"] @AT@ 8747 @LENGTH@ 3
------------INS SimpleType@@MessageListenerAdapter @TO@ ClassInstanceCreation@@MessageListenerAdapter[new Delegate(), "myPojoMessageMethod"] @AT@ 8751 @LENGTH@ 22
------------INS ClassInstanceCreation@@Delegate[] @TO@ ClassInstanceCreation@@MessageListenerAdapter[new Delegate(), "myPojoMessageMethod"] @AT@ 8774 @LENGTH@ 14
---------------INS New@@new @TO@ ClassInstanceCreation@@Delegate[] @AT@ 8774 @LENGTH@ 3
---------------INS SimpleType@@Delegate @TO@ ClassInstanceCreation@@Delegate[] @AT@ 8778 @LENGTH@ 8
------------INS StringLiteral@@"myPojoMessageMethod" @TO@ ClassInstanceCreation@@MessageListenerAdapter[new Delegate(), "myPojoMessageMethod"] @AT@ 8790 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:this.adapter.containerAckMode(AcknowledgeMode.MANUAL) @TO@ MethodDeclaration@@public, void, MethodName:testListenableFutureReturn, Exception,  @AT@ 8816 @LENGTH@ 54
------INS MethodInvocation@@this.adapter.containerAckMode(AcknowledgeMode.MANUAL) @TO@ ExpressionStatement@@MethodInvocation:this.adapter.containerAckMode(AcknowledgeMode.MANUAL) @AT@ 8816 @LENGTH@ 53
---------INS FieldAccess@@this.adapter @TO@ MethodInvocation@@this.adapter.containerAckMode(AcknowledgeMode.MANUAL) @AT@ 8816 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.adapter @AT@ 8816 @LENGTH@ 4
------------INS SimpleName@@adapter @TO@ FieldAccess@@this.adapter @AT@ 8821 @LENGTH@ 7
---------INS SimpleName@@MethodName:containerAckMode:[AcknowledgeMode.MANUAL] @TO@ MethodInvocation@@this.adapter.containerAckMode(AcknowledgeMode.MANUAL) @AT@ 8829 @LENGTH@ 40
------------INS QualifiedName@@AcknowledgeMode.MANUAL @TO@ SimpleName@@MethodName:containerAckMode:[AcknowledgeMode.MANUAL] @AT@ 8846 @LENGTH@ 22
---------------INS SimpleName@@AcknowledgeMode @TO@ QualifiedName@@AcknowledgeMode.MANUAL @AT@ 8846 @LENGTH@ 15
---------------INS SimpleName@@MANUAL @TO@ QualifiedName@@AcknowledgeMode.MANUAL @AT@ 8862 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:this.adapter.setResponseExchange("default") @TO@ MethodDeclaration@@public, void, MethodName:testListenableFutureReturn, Exception,  @AT@ 8873 @LENGTH@ 44
------INS MethodInvocation@@this.adapter.setResponseExchange("default") @TO@ ExpressionStatement@@MethodInvocation:this.adapter.setResponseExchange("default") @AT@ 8873 @LENGTH@ 43
---------INS FieldAccess@@this.adapter @TO@ MethodInvocation@@this.adapter.setResponseExchange("default") @AT@ 8873 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.adapter @AT@ 8873 @LENGTH@ 4
------------INS SimpleName@@adapter @TO@ FieldAccess@@this.adapter @AT@ 8878 @LENGTH@ 7
---------INS SimpleName@@MethodName:setResponseExchange:["default"] @TO@ MethodInvocation@@this.adapter.setResponseExchange("default") @AT@ 8886 @LENGTH@ 30
------------INS StringLiteral@@"default" @TO@ SimpleName@@MethodName:setResponseExchange:["default"] @AT@ 8906 @LENGTH@ 9
---INS VariableDeclarationStatement@@Channel mockChannel=mock(Channel.class); @TO@ MethodDeclaration@@public, void, MethodName:testListenableFutureReturn, Exception,  @AT@ 8920 @LENGTH@ 42
------INS SimpleType@@Channel @TO@ VariableDeclarationStatement@@Channel mockChannel=mock(Channel.class); @AT@ 8920 @LENGTH@ 7
------INS VariableDeclarationFragment@@mockChannel=mock(Channel.class) @TO@ VariableDeclarationStatement@@Channel mockChannel=mock(Channel.class); @AT@ 8928 @LENGTH@ 33
---------INS SimpleName@@mockChannel @TO@ VariableDeclarationFragment@@mockChannel=mock(Channel.class) @AT@ 8928 @LENGTH@ 11
---------INS MethodInvocation@@mock(Channel.class) @TO@ VariableDeclarationFragment@@mockChannel=mock(Channel.class) @AT@ 8942 @LENGTH@ 19
------------INS SimpleName@@MethodName:mock:[Channel.class] @TO@ MethodInvocation@@mock(Channel.class) @AT@ 8942 @LENGTH@ 19
---------------INS TypeLiteral@@Channel.class @TO@ SimpleName@@MethodName:mock:[Channel.class] @AT@ 8947 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:this.adapter.onMessage(new Message("foo".getBytes(),this.messageProperties),mockChannel) @TO@ MethodDeclaration@@public, void, MethodName:testListenableFutureReturn, Exception,  @AT@ 8965 @LENGTH@ 91
------INS MethodInvocation@@this.adapter.onMessage(new Message("foo".getBytes(),this.messageProperties),mockChannel) @TO@ ExpressionStatement@@MethodInvocation:this.adapter.onMessage(new Message("foo".getBytes(),this.messageProperties),mockChannel) @AT@ 8965 @LENGTH@ 90
---------INS FieldAccess@@this.adapter @TO@ MethodInvocation@@this.adapter.onMessage(new Message("foo".getBytes(),this.messageProperties),mockChannel) @AT@ 8965 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.adapter @AT@ 8965 @LENGTH@ 4
------------INS SimpleName@@adapter @TO@ FieldAccess@@this.adapter @AT@ 8970 @LENGTH@ 7
---------INS SimpleName@@MethodName:onMessage:[new Message("foo".getBytes(),this.messageProperties), mockChannel] @TO@ MethodInvocation@@this.adapter.onMessage(new Message("foo".getBytes(),this.messageProperties),mockChannel) @AT@ 8978 @LENGTH@ 77
------------INS ClassInstanceCreation@@Message["foo".getBytes(), this.messageProperties] @TO@ SimpleName@@MethodName:onMessage:[new Message("foo".getBytes(),this.messageProperties), mockChannel] @AT@ 8988 @LENGTH@ 53
---------------INS New@@new @TO@ ClassInstanceCreation@@Message["foo".getBytes(), this.messageProperties] @AT@ 8988 @LENGTH@ 3
---------------INS SimpleType@@Message @TO@ ClassInstanceCreation@@Message["foo".getBytes(), this.messageProperties] @AT@ 8992 @LENGTH@ 7
---------------INS MethodInvocation@@"foo".getBytes() @TO@ ClassInstanceCreation@@Message["foo".getBytes(), this.messageProperties] @AT@ 9000 @LENGTH@ 16
------------------INS StringLiteral@@"foo" @TO@ MethodInvocation@@"foo".getBytes() @AT@ 9000 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"foo".getBytes() @AT@ 9006 @LENGTH@ 10
---------------INS FieldAccess@@this.messageProperties @TO@ ClassInstanceCreation@@Message["foo".getBytes(), this.messageProperties] @AT@ 9018 @LENGTH@ 22
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.messageProperties @AT@ 9018 @LENGTH@ 4
------------------INS SimpleName@@messageProperties @TO@ FieldAccess@@this.messageProperties @AT@ 9023 @LENGTH@ 17
------------INS SimpleName@@mockChannel @TO@ SimpleName@@MethodName:onMessage:[new Message("foo".getBytes(),this.messageProperties), mockChannel] @AT@ 9043 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:verify(mockChannel).basicAck(anyLong(),eq(false)) @TO@ MethodDeclaration@@public, void, MethodName:testListenableFutureReturn, Exception,  @AT@ 9059 @LENGTH@ 51
------INS MethodInvocation@@verify(mockChannel).basicAck(anyLong(),eq(false)) @TO@ ExpressionStatement@@MethodInvocation:verify(mockChannel).basicAck(anyLong(),eq(false)) @AT@ 9059 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:verify:[mockChannel] @TO@ MethodInvocation@@verify(mockChannel).basicAck(anyLong(),eq(false)) @AT@ 9059 @LENGTH@ 19
------------INS SimpleName@@mockChannel @TO@ MethodInvocation@@MethodName:verify:[mockChannel] @AT@ 9066 @LENGTH@ 11
---------INS SimpleName@@MethodName:basicAck:[anyLong(), eq(false)] @TO@ MethodInvocation@@verify(mockChannel).basicAck(anyLong(),eq(false)) @AT@ 9079 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:anyLong:[] @TO@ SimpleName@@MethodName:basicAck:[anyLong(), eq(false)] @AT@ 9088 @LENGTH@ 9
------------INS MethodInvocation@@eq(false) @TO@ SimpleName@@MethodName:basicAck:[anyLong(), eq(false)] @AT@ 9099 @LENGTH@ 9
---------------INS SimpleName@@MethodName:eq:[false] @TO@ MethodInvocation@@eq(false) @AT@ 9099 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:eq:[false] @AT@ 9102 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(((ChannelProxy)templateChannel.get()).getTargetChannel(),equalTo(channel1)) @TO@ MethodInvocation:assertThat(templateChannel.get(),equalTo(channel1)) @AT@ 15480 @LENGTH@ 89
---UPD MethodInvocation@@assertThat(((ChannelProxy)templateChannel.get()).getTargetChannel(),equalTo(channel1)) @TO@ assertThat(templateChannel.get(),equalTo(channel1)) @AT@ 15480 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertThat:[((ChannelProxy)templateChannel.get()).getTargetChannel(), equalTo(channel1)] @TO@ MethodName:assertThat:[templateChannel.get(), equalTo(channel1)] @AT@ 15480 @LENGTH@ 88
---------DEL MethodInvocation@@((ChannelProxy)templateChannel.get()).getTargetChannel() @AT@ 15491 @LENGTH@ 57
------------DEL ParenthesizedExpression@@((ChannelProxy)templateChannel.get()) @AT@ 15491 @LENGTH@ 38
---------------DEL CastExpression@@(ChannelProxy)templateChannel.get() @AT@ 15492 @LENGTH@ 36
------------------DEL SimpleType@@ChannelProxy @AT@ 15493 @LENGTH@ 12
------------------DEL MethodInvocation@@templateChannel.get() @AT@ 15507 @LENGTH@ 21
------------DEL SimpleName@@MethodName:getTargetChannel:[] @AT@ 15530 @LENGTH@ 18
---------INS MethodInvocation@@templateChannel.get() @TO@ SimpleName@@MethodName:assertThat:[((ChannelProxy)templateChannel.get()).getTargetChannel(), equalTo(channel1)] @AT@ 15527 @LENGTH@ 21
------------MOV SimpleName@@Name:templateChannel @TO@ MethodInvocation@@templateChannel.get() @AT@ 15507 @LENGTH@ 15
------------MOV SimpleName@@Name:templateChannel @TO@ MethodInvocation@@templateChannel.get() @AT@ 15507 @LENGTH@ 15
------------MOV SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@templateChannel.get() @AT@ 15523 @LENGTH@ 5
------------MOV SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@templateChannel.get() @AT@ 15523 @LENGTH@ 5


UPD FieldDeclaration@@protected, boolean, [filterWebinfLib] @TO@ protected, boolean, [filterWebInfLib] @AT@ 2402 @LENGTH@ 34
---UPD VariableDeclarationFragment@@filterWebinfLib @TO@ filterWebInfLib @AT@ 2420 @LENGTH@ 15
------UPD SimpleName@@filterWebinfLib @TO@ filterWebInfLib @AT@ 2420 @LENGTH@ 15


UPD Block@@ThenBody:{  try {    Map<String,String> env=new HashMap<>();    return FileSystems.newFileSystem(URI.create("jar:file:" + p + "!/"),env).getPath("/");  } catch (  FileSystemAlreadyExistsException e) {    return FileSystems.getFileSystem(URI.create("jar:file:" + p + "!/")).getPath("/");  }catch (  IOException e) {    throw new IOError(e);  }} @TO@ ThenBody:{  File fp=new File(p);  try {    Map<String,String> env=new HashMap<>();    return FileSystems.newFileSystem(URI.create("jar:" + fp.toURI().toString()),env).getPath("/");  } catch (  FileSystemAlreadyExistsException e) {    return FileSystems.getFileSystem(URI.create("jar:" + fp.toURI().toString())).getPath("/");  }catch (  IOException e) {    throw new IOError(e);  }} @AT@ 6424 @LENGTH@ 440
---UPD TryStatement@@try {  Map<String,String> env=new HashMap<>();  return FileSystems.newFileSystem(URI.create("jar:file:" + p + "!/"),env).getPath("/");} catch (FileSystemAlreadyExistsException e) {  return FileSystems.getFileSystem(URI.create("jar:file:" + p + "!/")).getPath("/");}catch (IOException e) {  throw new IOError(e);} @TO@ try {  Map<String,String> env=new HashMap<>();  return FileSystems.newFileSystem(URI.create("jar:" + fp.toURI().toString()),env).getPath("/");} catch (FileSystemAlreadyExistsException e) {  return FileSystems.getFileSystem(URI.create("jar:" + fp.toURI().toString())).getPath("/");}catch (IOException e) {  throw new IOError(e);} @AT@ 6438 @LENGTH@ 416
------UPD ReturnStatement@@MethodInvocation:FileSystems.newFileSystem(URI.create("jar:file:" + p + "!/"),env).getPath("/") @TO@ MethodInvocation:FileSystems.newFileSystem(URI.create("jar:" + fp.toURI().toString()),env).getPath("/") @AT@ 6519 @LENGTH@ 87
---------UPD MethodInvocation@@FileSystems.newFileSystem(URI.create("jar:file:" + p + "!/"),env).getPath("/") @TO@ FileSystems.newFileSystem(URI.create("jar:" + fp.toURI().toString()),env).getPath("/") @AT@ 6526 @LENGTH@ 79
------------UPD MethodInvocation@@MethodName:newFileSystem:[URI.create("jar:file:" + p + "!/"), env] @TO@ MethodName:newFileSystem:[URI.create("jar:" + fp.toURI().toString()), env] @AT@ 6526 @LENGTH@ 66
---------------UPD MethodInvocation@@URI.create("jar:file:" + p + "!/") @TO@ URI.create("jar:" + fp.toURI().toString()) @AT@ 6552 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:create:["jar:file:" + p + "!/"] @TO@ MethodName:create:["jar:" + fp.toURI().toString()] @AT@ 6556 @LENGTH@ 30
---------------------UPD InfixExpression@@"jar:file:" + p + "!/" @TO@ "jar:" + fp.toURI().toString() @AT@ 6563 @LENGTH@ 22
------------------------UPD StringLiteral@@"jar:file:" @TO@ "jar:" @AT@ 6563 @LENGTH@ 11
------------------------DEL SimpleName@@p @AT@ 6577 @LENGTH@ 1
------------------------DEL StringLiteral@@"!/" @AT@ 6581 @LENGTH@ 4
------------------------INS MethodInvocation@@fp.toURI().toString() @TO@ InfixExpression@@"jar:file:" + p + "!/" @AT@ 6607 @LENGTH@ 21
---------------------------INS MethodInvocation@@MethodName:toURI:[] @TO@ MethodInvocation@@fp.toURI().toString() @AT@ 6607 @LENGTH@ 10
---------------------------INS SimpleName@@Name:fp @TO@ MethodInvocation@@fp.toURI().toString() @AT@ 6607 @LENGTH@ 2
---------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@fp.toURI().toString() @AT@ 6618 @LENGTH@ 10
------UPD CatchClause@@catch (FileSystemAlreadyExistsException e) {  return FileSystems.getFileSystem(URI.create("jar:file:" + p + "!/")).getPath("/");} @TO@ catch (FileSystemAlreadyExistsException e) {  return FileSystems.getFileSystem(URI.create("jar:" + fp.toURI().toString())).getPath("/");} @AT@ 6621 @LENGTH@ 157
---------UPD ReturnStatement@@MethodInvocation:FileSystems.getFileSystem(URI.create("jar:file:" + p + "!/")).getPath("/") @TO@ MethodInvocation:FileSystems.getFileSystem(URI.create("jar:" + fp.toURI().toString())).getPath("/") @AT@ 6682 @LENGTH@ 82
------------UPD MethodInvocation@@FileSystems.getFileSystem(URI.create("jar:file:" + p + "!/")).getPath("/") @TO@ FileSystems.getFileSystem(URI.create("jar:" + fp.toURI().toString())).getPath("/") @AT@ 6689 @LENGTH@ 74
---------------UPD MethodInvocation@@MethodName:getFileSystem:[URI.create("jar:file:" + p + "!/")] @TO@ MethodName:getFileSystem:[URI.create("jar:" + fp.toURI().toString())] @AT@ 6689 @LENGTH@ 61
------------------UPD MethodInvocation@@URI.create("jar:file:" + p + "!/") @TO@ URI.create("jar:" + fp.toURI().toString()) @AT@ 6715 @LENGTH@ 34
---------------------UPD SimpleName@@MethodName:create:["jar:file:" + p + "!/"] @TO@ MethodName:create:["jar:" + fp.toURI().toString()] @AT@ 6719 @LENGTH@ 30
------------------------UPD InfixExpression@@"jar:file:" + p + "!/" @TO@ "jar:" + fp.toURI().toString() @AT@ 6726 @LENGTH@ 22
---------------------------UPD StringLiteral@@"jar:file:" @TO@ "jar:" @AT@ 6726 @LENGTH@ 11
---------------------------DEL SimpleName@@p @AT@ 6740 @LENGTH@ 1
---------------------------DEL StringLiteral@@"!/" @AT@ 6744 @LENGTH@ 4
---------------------------INS MethodInvocation@@fp.toURI().toString() @TO@ InfixExpression@@"jar:file:" + p + "!/" @AT@ 6778 @LENGTH@ 21
------------------------------INS MethodInvocation@@MethodName:toURI:[] @TO@ MethodInvocation@@fp.toURI().toString() @AT@ 6778 @LENGTH@ 10
------------------------------INS SimpleName@@Name:fp @TO@ MethodInvocation@@fp.toURI().toString() @AT@ 6778 @LENGTH@ 2
------------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@fp.toURI().toString() @AT@ 6789 @LENGTH@ 10
---INS VariableDeclarationStatement@@File fp=new File(p); @TO@ Block@@ThenBody:{  try {    Map<String,String> env=new HashMap<>();    return FileSystems.newFileSystem(URI.create("jar:file:" + p + "!/"),env).getPath("/");  } catch (  FileSystemAlreadyExistsException e) {    return FileSystems.getFileSystem(URI.create("jar:file:" + p + "!/")).getPath("/");  }catch (  IOException e) {    throw new IOError(e);  }} @AT@ 6438 @LENGTH@ 22
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File fp=new File(p); @AT@ 6438 @LENGTH@ 4
------INS VariableDeclarationFragment@@fp=new File(p) @TO@ VariableDeclarationStatement@@File fp=new File(p); @AT@ 6443 @LENGTH@ 16
---------INS SimpleName@@fp @TO@ VariableDeclarationFragment@@fp=new File(p) @AT@ 6443 @LENGTH@ 2
---------INS ClassInstanceCreation@@File[p] @TO@ VariableDeclarationFragment@@fp=new File(p) @AT@ 6448 @LENGTH@ 11
------------INS New@@new @TO@ ClassInstanceCreation@@File[p] @AT@ 6448 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[p] @AT@ 6452 @LENGTH@ 4
------------INS SimpleName@@p @TO@ ClassInstanceCreation@@File[p] @AT@ 6457 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelHttpCommonTest.class)).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelHttpCommonTest.class)).dependency("javax.servlet:javax.servlet-api").build() @AT@ 1448 @LENGTH@ 125
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelHttpCommonTest.class)).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelHttpCommonTest.class)).dependency("javax.servlet:javax.servlet-api").build() @AT@ 1455 @LENGTH@ 117
------INS MethodInvocation@@MethodName:dependency:["javax.servlet:javax.servlet-api"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelHttpCommonTest.class)).build() @AT@ 1455 @LENGTH@ 155
---------INS StringLiteral@@"javax.servlet:javax.servlet-api" @TO@ MethodInvocation@@MethodName:dependency:["javax.servlet:javax.servlet-api"] @AT@ 1576 @LENGTH@ 33


MOV FieldDeclaration@@AmazonS3ClientMock, [clientMock=new AmazonS3ClientMock()] @TO@ TypeDeclaration@@[public]S3ComponentListBucketsTest, CamelTestSupport @AT@ 1617 @LENGTH@ 57


UPD VariableDeclarationStatement@@String retValNoNewLine=retVal.substring(0,retVal.length() - 1); @TO@ String retValNoNewLine=retVal.substring(0,retVal.indexOf(System.getProperty("line.separator"))); @AT@ 1754 @LENGTH@ 66
---UPD VariableDeclarationFragment@@retValNoNewLine=retVal.substring(0,retVal.length() - 1) @TO@ retValNoNewLine=retVal.substring(0,retVal.indexOf(System.getProperty("line.separator"))) @AT@ 1761 @LENGTH@ 58
------UPD MethodInvocation@@retVal.substring(0,retVal.length() - 1) @TO@ retVal.substring(0,retVal.indexOf(System.getProperty("line.separator"))) @AT@ 1779 @LENGTH@ 40
---------UPD SimpleName@@MethodName:substring:[0, retVal.length() - 1] @TO@ MethodName:substring:[0, retVal.indexOf(System.getProperty("line.separator"))] @AT@ 1786 @LENGTH@ 33
------------DEL InfixExpression@@retVal.length() - 1 @AT@ 1799 @LENGTH@ 19
---------------DEL MethodInvocation@@retVal.length() @AT@ 1799 @LENGTH@ 15
---------------DEL Operator@@- @AT@ 1814 @LENGTH@ 1
---------------DEL NumberLiteral@@1 @AT@ 1817 @LENGTH@ 1
------------INS MethodInvocation@@retVal.indexOf(System.getProperty("line.separator")) @TO@ SimpleName@@MethodName:substring:[0, retVal.length() - 1] @AT@ 1841 @LENGTH@ 52
---------------MOV SimpleName@@Name:retVal @TO@ MethodInvocation@@retVal.indexOf(System.getProperty("line.separator")) @AT@ 1799 @LENGTH@ 6
---------------INS SimpleName@@MethodName:indexOf:[System.getProperty("line.separator")] @TO@ MethodInvocation@@retVal.indexOf(System.getProperty("line.separator")) @AT@ 1848 @LENGTH@ 45
------------------INS MethodInvocation@@System.getProperty("line.separator") @TO@ SimpleName@@MethodName:indexOf:[System.getProperty("line.separator")] @AT@ 1856 @LENGTH@ 36
---------------------MOV SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@System.getProperty("line.separator") @AT@ 1806 @LENGTH@ 8
------------------------INS StringLiteral@@"line.separator" @TO@ SimpleName@@MethodName:length:[] @AT@ 1875 @LENGTH@ 16
---------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("line.separator") @AT@ 1856 @LENGTH@ 6


UPD ReturnStatement@@ClassInstanceCreation:new StoredProcedureAttributes(procedureName,null,method.getReturnType(),false) @TO@ ClassInstanceCreation:new StoredProcedureAttributes(procedureName,procedure.outputParameterName(),method.getReturnType(),false) @AT@ 2498 @LENGTH@ 89
---UPD ClassInstanceCreation@@StoredProcedureAttributes[procedureName, null, method.getReturnType(), false] @TO@ StoredProcedureAttributes[procedureName, procedure.outputParameterName(), method.getReturnType(), false] @AT@ 2505 @LENGTH@ 81
------DEL NullLiteral@@null @AT@ 2550 @LENGTH@ 4
------INS MethodInvocation@@procedure.outputParameterName() @TO@ ClassInstanceCreation@@StoredProcedureAttributes[procedureName, null, method.getReturnType(), false] @AT@ 2572 @LENGTH@ 31
---------INS SimpleName@@Name:procedure @TO@ MethodInvocation@@procedure.outputParameterName() @AT@ 2572 @LENGTH@ 9
---------INS SimpleName@@MethodName:outputParameterName:[] @TO@ MethodInvocation@@procedure.outputParameterName() @AT@ 2582 @LENGTH@ 21


DEL MethodDeclaration@@private, boolean, MethodName:isServlet3,  @AT@ 8238 @LENGTH@ 100
---DEL Modifier@@private @AT@ 8238 @LENGTH@ 7
---DEL PrimitiveType@@boolean @AT@ 8246 @LENGTH@ 7
---DEL SimpleName@@MethodName:isServlet3 @AT@ 8254 @LENGTH@ 10
---DEL ReturnStatement@@MethodInvocation:ClassUtils.hasMethod(ServletRequest.class,"startAsync") @AT@ 8271 @LENGTH@ 64
------DEL MethodInvocation@@ClassUtils.hasMethod(ServletRequest.class,"startAsync") @AT@ 8278 @LENGTH@ 56
---------DEL SimpleName@@Name:ClassUtils @AT@ 8278 @LENGTH@ 10
---------DEL SimpleName@@MethodName:hasMethod:[ServletRequest.class, "startAsync"] @AT@ 8289 @LENGTH@ 45
------------DEL TypeLiteral@@ServletRequest.class @AT@ 8299 @LENGTH@ 20
------------DEL StringLiteral@@"startAsync" @AT@ 8321 @LENGTH@ 12


UPD TryStatement@@try {  cacheLock.writeLock().lock();  if (!isTableCachePrewarmed) {    tablesDeletedDuringPrewarm.add(CacheUtils.buildTableKey(catName,dbName,tblName));  }  TableWrapper tblWrapper=tableCache.remove(CacheUtils.buildTableKey(catName,dbName,tblName));  if (tblWrapper == null) {    return;  }  byte[] sdHash=tblWrapper.getSdHash();  if (sdHash != null) {    decrSd(sdHash);  }  isTableCacheDirty.set(true);}  finally {  cacheLock.writeLock().unlock();} @TO@ try {  cacheLock.writeLock().lock();  if (!isTableCachePrewarmed) {    tablesDeletedDuringPrewarm.add(CacheUtils.buildTableKey(catName,dbName,tblName));  }  TableWrapper tblWrapper=tableCache.remove(CacheUtils.buildTableKey(catName,dbName,tblName));  if (tblWrapper == null) {    return;  }  if (tblWrapper != null) {    byte[] sdHash=tblWrapper.getSdHash();    if (sdHash != null) {      decrSd(sdHash);    }    isTableCacheDirty.set(true);  }}  finally {  cacheLock.writeLock().unlock();} @AT@ 50428 @LENGTH@ 750
---INS IfStatement@@if (tblWrapper != null) {  byte[] sdHash=tblWrapper.getSdHash();  if (sdHash != null) {    decrSd(sdHash);  }  isTableCacheDirty.set(true);} @TO@ TryStatement@@try {  cacheLock.writeLock().lock();  if (!isTableCachePrewarmed) {    tablesDeletedDuringPrewarm.add(CacheUtils.buildTableKey(catName,dbName,tblName));  }  TableWrapper tblWrapper=tableCache.remove(CacheUtils.buildTableKey(catName,dbName,tblName));  if (tblWrapper == null) {    return;  }  byte[] sdHash=tblWrapper.getSdHash();  if (sdHash != null) {    decrSd(sdHash);  }  isTableCacheDirty.set(true);}  finally {  cacheLock.writeLock().unlock();} @AT@ 50984 @LENGTH@ 184
------INS InfixExpression@@tblWrapper != null @TO@ IfStatement@@if (tblWrapper != null) {  byte[] sdHash=tblWrapper.getSdHash();  if (sdHash != null) {    decrSd(sdHash);  }  isTableCacheDirty.set(true);} @AT@ 50988 @LENGTH@ 18
---------INS SimpleName@@tblWrapper @TO@ InfixExpression@@tblWrapper != null @AT@ 50988 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@tblWrapper != null @AT@ 50998 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@tblWrapper != null @AT@ 51002 @LENGTH@ 4
------INS Block@@ThenBody:{  byte[] sdHash=tblWrapper.getSdHash();  if (sdHash != null) {    decrSd(sdHash);  }  isTableCacheDirty.set(true);} @TO@ IfStatement@@if (tblWrapper != null) {  byte[] sdHash=tblWrapper.getSdHash();  if (sdHash != null) {    decrSd(sdHash);  }  isTableCacheDirty.set(true);} @AT@ 51008 @LENGTH@ 160
---------MOV VariableDeclarationStatement@@byte[] sdHash=tblWrapper.getSdHash(); @TO@ Block@@ThenBody:{  byte[] sdHash=tblWrapper.getSdHash();  if (sdHash != null) {    decrSd(sdHash);  }  isTableCacheDirty.set(true);} @AT@ 50984 @LENGTH@ 39
---------MOV IfStatement@@if (sdHash != null) {  decrSd(sdHash);} @TO@ Block@@ThenBody:{  byte[] sdHash=tblWrapper.getSdHash();  if (sdHash != null) {    decrSd(sdHash);  }  isTableCacheDirty.set(true);} @AT@ 51030 @LENGTH@ 53
---------MOV ExpressionStatement@@MethodInvocation:isTableCacheDirty.set(true) @TO@ Block@@ThenBody:{  byte[] sdHash=tblWrapper.getSdHash();  if (sdHash != null) {    decrSd(sdHash);  }  isTableCacheDirty.set(true);} @AT@ 51090 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:headersWrittenAtBeginningOfRequest, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]HeaderWriterFilterTests,  @AT@ 4634 @LENGTH@ 725
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:headersWrittenAtBeginningOfRequest, Exception,  @AT@ 4634 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:headersWrittenAtBeginningOfRequest, Exception,  @AT@ 4641 @LENGTH@ 4
---INS SimpleName@@MethodName:headersWrittenAtBeginningOfRequest @TO@ MethodDeclaration@@public, void, MethodName:headersWrittenAtBeginningOfRequest, Exception,  @AT@ 4646 @LENGTH@ 34
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:headersWrittenAtBeginningOfRequest, Exception,  @AT@ 4690 @LENGTH@ 9
---INS VariableDeclarationStatement@@HeaderWriterFilter filter=new HeaderWriterFilter(Collections.singletonList(this.writer1)); @TO@ MethodDeclaration@@public, void, MethodName:headersWrittenAtBeginningOfRequest, Exception,  @AT@ 4704 @LENGTH@ 97
------INS SimpleType@@HeaderWriterFilter @TO@ VariableDeclarationStatement@@HeaderWriterFilter filter=new HeaderWriterFilter(Collections.singletonList(this.writer1)); @AT@ 4704 @LENGTH@ 18
------INS VariableDeclarationFragment@@filter=new HeaderWriterFilter(Collections.singletonList(this.writer1)) @TO@ VariableDeclarationStatement@@HeaderWriterFilter filter=new HeaderWriterFilter(Collections.singletonList(this.writer1)); @AT@ 4723 @LENGTH@ 77
---------INS SimpleName@@filter @TO@ VariableDeclarationFragment@@filter=new HeaderWriterFilter(Collections.singletonList(this.writer1)) @AT@ 4723 @LENGTH@ 6
---------INS ClassInstanceCreation@@HeaderWriterFilter[Collections.singletonList(this.writer1)] @TO@ VariableDeclarationFragment@@filter=new HeaderWriterFilter(Collections.singletonList(this.writer1)) @AT@ 4732 @LENGTH@ 68
------------INS New@@new @TO@ ClassInstanceCreation@@HeaderWriterFilter[Collections.singletonList(this.writer1)] @AT@ 4732 @LENGTH@ 3
------------INS SimpleType@@HeaderWriterFilter @TO@ ClassInstanceCreation@@HeaderWriterFilter[Collections.singletonList(this.writer1)] @AT@ 4736 @LENGTH@ 18
------------INS MethodInvocation@@Collections.singletonList(this.writer1) @TO@ ClassInstanceCreation@@HeaderWriterFilter[Collections.singletonList(this.writer1)] @AT@ 4760 @LENGTH@ 39
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonList(this.writer1) @AT@ 4760 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonList:[this.writer1] @TO@ MethodInvocation@@Collections.singletonList(this.writer1) @AT@ 4772 @LENGTH@ 27
------------------INS FieldAccess@@this.writer1 @TO@ SimpleName@@MethodName:singletonList:[this.writer1] @AT@ 4786 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.writer1 @AT@ 4786 @LENGTH@ 4
---------------------INS SimpleName@@writer1 @TO@ FieldAccess@@this.writer1 @AT@ 4791 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:filter.setShouldWriteHeadersEagerly(true) @TO@ MethodDeclaration@@public, void, MethodName:headersWrittenAtBeginningOfRequest, Exception,  @AT@ 4804 @LENGTH@ 42
------INS MethodInvocation@@filter.setShouldWriteHeadersEagerly(true) @TO@ ExpressionStatement@@MethodInvocation:filter.setShouldWriteHeadersEagerly(true) @AT@ 4804 @LENGTH@ 41
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.setShouldWriteHeadersEagerly(true) @AT@ 4804 @LENGTH@ 6
---------INS SimpleName@@MethodName:setShouldWriteHeadersEagerly:[true] @TO@ MethodInvocation@@filter.setShouldWriteHeadersEagerly(true) @AT@ 4811 @LENGTH@ 34
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setShouldWriteHeadersEagerly:[true] @AT@ 4840 @LENGTH@ 4
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:headersWrittenAtBeginningOfRequest, Exception,  @AT@ 4850 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 4850 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 4873 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 4873 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 4883 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 4883 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 4887 @LENGTH@ 22
---INS VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @TO@ MethodDeclaration@@public, void, MethodName:headersWrittenAtBeginningOfRequest, Exception,  @AT@ 4915 @LENGTH@ 65
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 4915 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=new MockHttpServletResponse() @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 4939 @LENGTH@ 40
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 4939 @LENGTH@ 8
---------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 4950 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 4950 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 4954 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:filter.doFilter(request,response,new FilterChain(){
  @Override public void doFilter(  ServletRequest request,  ServletResponse response) throws IOException, ServletException {
    verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class));
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:headersWrittenAtBeginningOfRequest, Exception,  @AT@ 4984 @LENGTH@ 329
------INS MethodInvocation@@filter.doFilter(request,response,new FilterChain(){
  @Override public void doFilter(  ServletRequest request,  ServletResponse response) throws IOException, ServletException {
    verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class));
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:filter.doFilter(request,response,new FilterChain(){
  @Override public void doFilter(  ServletRequest request,  ServletResponse response) throws IOException, ServletException {
    verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class));
  }
}
) @AT@ 4984 @LENGTH@ 328
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.doFilter(request,response,new FilterChain(){
  @Override public void doFilter(  ServletRequest request,  ServletResponse response) throws IOException, ServletException {
    verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class));
  }
}
) @AT@ 4984 @LENGTH@ 6
---------INS SimpleName@@MethodName:doFilter:[request, response, new FilterChain(){
  @Override public void doFilter(  ServletRequest request,  ServletResponse response) throws IOException, ServletException {
    verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class));
  }
}
] @TO@ MethodInvocation@@filter.doFilter(request,response,new FilterChain(){
  @Override public void doFilter(  ServletRequest request,  ServletResponse response) throws IOException, ServletException {
    verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class));
  }
}
) @AT@ 4991 @LENGTH@ 321
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:doFilter:[request, response, new FilterChain(){
  @Override public void doFilter(  ServletRequest request,  ServletResponse response) throws IOException, ServletException {
    verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class));
  }
}
] @AT@ 5000 @LENGTH@ 7
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:doFilter:[request, response, new FilterChain(){
  @Override public void doFilter(  ServletRequest request,  ServletResponse response) throws IOException, ServletException {
    verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class));
  }
}
] @AT@ 5009 @LENGTH@ 8
------------INS ClassInstanceCreation@@FilterChain[] @TO@ SimpleName@@MethodName:doFilter:[request, response, new FilterChain(){
  @Override public void doFilter(  ServletRequest request,  ServletResponse response) throws IOException, ServletException {
    verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class));
  }
}
] @AT@ 5019 @LENGTH@ 292
---------------INS New@@new @TO@ ClassInstanceCreation@@FilterChain[] @AT@ 5019 @LENGTH@ 3
---------------INS SimpleType@@FilterChain @TO@ ClassInstanceCreation@@FilterChain[] @AT@ 5023 @LENGTH@ 11
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@FilterChain[] @AT@ 5037 @LENGTH@ 274
------------------INS MethodDeclaration@@public, void, MethodName:doFilter, ServletRequest request, ServletResponse response, IOException, ServletException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 5055 @LENGTH@ 252
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doFilter, ServletRequest request, ServletResponse response, IOException, ServletException,  @AT@ 5055 @LENGTH@ 6
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doFilter, ServletRequest request, ServletResponse response, IOException, ServletException,  @AT@ 5062 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:doFilter @TO@ MethodDeclaration@@public, void, MethodName:doFilter, ServletRequest request, ServletResponse response, IOException, ServletException,  @AT@ 5067 @LENGTH@ 8
---------------------INS SingleVariableDeclaration@@ServletRequest request @TO@ MethodDeclaration@@public, void, MethodName:doFilter, ServletRequest request, ServletResponse response, IOException, ServletException,  @AT@ 5076 @LENGTH@ 22
------------------------INS SimpleType@@ServletRequest @TO@ SingleVariableDeclaration@@ServletRequest request @AT@ 5076 @LENGTH@ 14
------------------------INS SimpleName@@request @TO@ SingleVariableDeclaration@@ServletRequest request @AT@ 5091 @LENGTH@ 7
---------------------INS SingleVariableDeclaration@@ServletResponse response @TO@ MethodDeclaration@@public, void, MethodName:doFilter, ServletRequest request, ServletResponse response, IOException, ServletException,  @AT@ 5100 @LENGTH@ 24
------------------------INS SimpleType@@ServletResponse @TO@ SingleVariableDeclaration@@ServletResponse response @AT@ 5100 @LENGTH@ 15
------------------------INS SimpleName@@response @TO@ SingleVariableDeclaration@@ServletResponse response @AT@ 5116 @LENGTH@ 8
---------------------INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:doFilter, ServletRequest request, ServletResponse response, IOException, ServletException,  @AT@ 5138 @LENGTH@ 11
---------------------INS SimpleType@@ServletException @TO@ MethodDeclaration@@public, void, MethodName:doFilter, ServletRequest request, ServletResponse response, IOException, ServletException,  @AT@ 5151 @LENGTH@ 16
---------------------INS ExpressionStatement@@MethodInvocation:verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class)) @TO@ MethodDeclaration@@public, void, MethodName:doFilter, ServletRequest request, ServletResponse response, IOException, ServletException,  @AT@ 5174 @LENGTH@ 128
------------------------INS MethodInvocation@@verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class)) @TO@ ExpressionStatement@@MethodInvocation:verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class)) @AT@ 5174 @LENGTH@ 127
---------------------------INS MethodInvocation@@MethodName:verify:[HeaderWriterFilterTests.this.writer1] @TO@ MethodInvocation@@verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class)) @AT@ 5174 @LENGTH@ 44
------------------------------INS FieldAccess@@HeaderWriterFilterTests.this.writer1 @TO@ MethodInvocation@@MethodName:verify:[HeaderWriterFilterTests.this.writer1] @AT@ 5181 @LENGTH@ 36
---------------------------------INS ThisExpression@@this @TO@ FieldAccess@@HeaderWriterFilterTests.this.writer1 @AT@ 5181 @LENGTH@ 28
---------------------------------INS SimpleName@@writer1 @TO@ FieldAccess@@HeaderWriterFilterTests.this.writer1 @AT@ 5210 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:writeHeaders:[any(HttpServletRequest.class), any(HttpServletResponse.class)] @TO@ MethodInvocation@@verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class),any(HttpServletResponse.class)) @AT@ 5219 @LENGTH@ 82
------------------------------INS MethodInvocation@@any(HttpServletRequest.class) @TO@ SimpleName@@MethodName:writeHeaders:[any(HttpServletRequest.class), any(HttpServletResponse.class)] @AT@ 5239 @LENGTH@ 29
---------------------------------INS SimpleName@@MethodName:any:[HttpServletRequest.class] @TO@ MethodInvocation@@any(HttpServletRequest.class) @AT@ 5239 @LENGTH@ 29
------------------------------------INS TypeLiteral@@HttpServletRequest.class @TO@ SimpleName@@MethodName:any:[HttpServletRequest.class] @AT@ 5243 @LENGTH@ 24
------------------------------INS MethodInvocation@@any(HttpServletResponse.class) @TO@ SimpleName@@MethodName:writeHeaders:[any(HttpServletRequest.class), any(HttpServletResponse.class)] @AT@ 5270 @LENGTH@ 30
---------------------------------INS SimpleName@@MethodName:any:[HttpServletResponse.class] @TO@ MethodInvocation@@any(HttpServletResponse.class) @AT@ 5270 @LENGTH@ 30
------------------------------------INS TypeLiteral@@HttpServletResponse.class @TO@ SimpleName@@MethodName:any:[HttpServletResponse.class] @AT@ 5274 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:verifyNoMoreInteractions(this.writer1) @TO@ MethodDeclaration@@public, void, MethodName:headersWrittenAtBeginningOfRequest, Exception,  @AT@ 5317 @LENGTH@ 39
------INS MethodInvocation@@verifyNoMoreInteractions(this.writer1) @TO@ ExpressionStatement@@MethodInvocation:verifyNoMoreInteractions(this.writer1) @AT@ 5317 @LENGTH@ 38
---------INS SimpleName@@MethodName:verifyNoMoreInteractions:[this.writer1] @TO@ MethodInvocation@@verifyNoMoreInteractions(this.writer1) @AT@ 5317 @LENGTH@ 38
------------INS FieldAccess@@this.writer1 @TO@ SimpleName@@MethodName:verifyNoMoreInteractions:[this.writer1] @AT@ 5342 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.writer1 @AT@ 5342 @LENGTH@ 4
---------------INS SimpleName@@writer1 @TO@ FieldAccess@@this.writer1 @AT@ 5347 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:testTwoWay, Exception,  @TO@ public, void, MethodName:testTwoWay,  @AT@ 2658 @LENGTH@ 251
---DEL SimpleType@@Exception @AT@ 2690 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:getChannel().basicCancel(consumerTag) @TO@ MethodInvocation:channelToClose.basicCancel(consumerTag) @AT@ 31627 @LENGTH@ 38
---UPD MethodInvocation@@getChannel().basicCancel(consumerTag) @TO@ channelToClose.basicCancel(consumerTag) @AT@ 31627 @LENGTH@ 37
------DEL MethodInvocation@@MethodName:getChannel:[] @AT@ 31627 @LENGTH@ 12
------INS SimpleName@@Name:channelToClose @TO@ MethodInvocation@@getChannel().basicCancel(consumerTag) @AT@ 31635 @LENGTH@ 14


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1147 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1147 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1154 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1162 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1192 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1199 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:testRedirectBadWatchdox, Exception,  @TO@ public, void, MethodName:testRedirectNoMatch, Exception,  @AT@ 1172 @LENGTH@ 344
---UPD SimpleName@@MethodName:testRedirectBadWatchdox @TO@ MethodName:testRedirectNoMatch @AT@ 1184 @LENGTH@ 23
---UPD VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("http//watchdox.com")); @TO@ Set<String> redirectUris=new HashSet<String>(Arrays.asList("http://watchdox.com")); @AT@ 1233 @LENGTH@ 84
------UPD VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("http//watchdox.com")) @TO@ redirectUris=new HashSet<String>(Arrays.asList("http://watchdox.com")) @AT@ 1245 @LENGTH@ 71
---------UPD ClassInstanceCreation@@HashSet<String>[Arrays.asList("http//watchdox.com")] @TO@ HashSet<String>[Arrays.asList("http://watchdox.com")] @AT@ 1260 @LENGTH@ 56
------------UPD MethodInvocation@@Arrays.asList("http//watchdox.com") @TO@ Arrays.asList("http://watchdox.com") @AT@ 1280 @LENGTH@ 35
---------------UPD SimpleName@@MethodName:asList:["http//watchdox.com"] @TO@ MethodName:asList:["http://watchdox.com"] @AT@ 1287 @LENGTH@ 28
------------------UPD StringLiteral@@"http//watchdox.com" @TO@ "http://watchdox.com" @AT@ 1294 @LENGTH@ 20


INS IfStatement@@if (ObjectHelper.isEmpty(operation)) {  throw new IllegalArgumentException("Operation must be specified");} @TO@ MethodDeclaration@@private, KMSOperations, MethodName:determineOperation, Exchange exchange,  @AT@ 3346 @LENGTH@ 127
---INS MethodInvocation@@ObjectHelper.isEmpty(operation) @TO@ IfStatement@@if (ObjectHelper.isEmpty(operation)) {  throw new IllegalArgumentException("Operation must be specified");} @AT@ 3350 @LENGTH@ 31
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(operation) @AT@ 3350 @LENGTH@ 12
------INS SimpleName@@MethodName:isEmpty:[operation] @TO@ MethodInvocation@@ObjectHelper.isEmpty(operation) @AT@ 3363 @LENGTH@ 18
---------INS SimpleName@@operation @TO@ SimpleName@@MethodName:isEmpty:[operation] @AT@ 3371 @LENGTH@ 9
---INS Block@@ThenBody:{  throw new IllegalArgumentException("Operation must be specified");} @TO@ IfStatement@@if (ObjectHelper.isEmpty(operation)) {  throw new IllegalArgumentException("Operation must be specified");} @AT@ 3383 @LENGTH@ 90
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Operation must be specified") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("Operation must be specified");} @AT@ 3397 @LENGTH@ 66
---------INS ClassInstanceCreation@@IllegalArgumentException["Operation must be specified"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Operation must be specified") @AT@ 3403 @LENGTH@ 59
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Operation must be specified"] @AT@ 3403 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Operation must be specified"] @AT@ 3407 @LENGTH@ 24
------------INS StringLiteral@@"Operation must be specified" @TO@ ClassInstanceCreation@@IllegalArgumentException["Operation must be specified"] @AT@ 3432 @LENGTH@ 29


UPD VariableDeclarationStatement@@boolean isInverseOptionalOneToOne=PersistentAttributeType.ONE_TO_ONE == attribute.getPersistentAttributeType() && !getAnnotationProperty(attribute,"mappedBy","").isEmpty(); @TO@ boolean isInverseOptionalOneToOne=PersistentAttributeType.ONE_TO_ONE == attribute.getPersistentAttributeType() && StringUtils.hasText(getAnnotationProperty(attribute,"mappedBy","")); @AT@ 22629 @LENGTH@ 180
---UPD VariableDeclarationFragment@@isInverseOptionalOneToOne=PersistentAttributeType.ONE_TO_ONE == attribute.getPersistentAttributeType() && !getAnnotationProperty(attribute,"mappedBy","").isEmpty() @TO@ isInverseOptionalOneToOne=PersistentAttributeType.ONE_TO_ONE == attribute.getPersistentAttributeType() && StringUtils.hasText(getAnnotationProperty(attribute,"mappedBy","")) @AT@ 22637 @LENGTH@ 171
------UPD InfixExpression@@PersistentAttributeType.ONE_TO_ONE == attribute.getPersistentAttributeType() && !getAnnotationProperty(attribute,"mappedBy","").isEmpty() @TO@ PersistentAttributeType.ONE_TO_ONE == attribute.getPersistentAttributeType() && StringUtils.hasText(getAnnotationProperty(attribute,"mappedBy","")) @AT@ 22665 @LENGTH@ 143
---------DEL PrefixExpression@@!getAnnotationProperty(attribute,"mappedBy","").isEmpty() @AT@ 22749 @LENGTH@ 59
------------DEL Operator@@! @AT@ 22749 @LENGTH@ 1
------------DEL MethodInvocation@@getAnnotationProperty(attribute,"mappedBy","").isEmpty() @AT@ 22750 @LENGTH@ 58
---------------DEL MethodInvocation@@MethodName:getAnnotationProperty:[attribute, "mappedBy", ""] @AT@ 22750 @LENGTH@ 48
------------------DEL SimpleName@@attribute @AT@ 22772 @LENGTH@ 9
------------------DEL StringLiteral@@"mappedBy" @AT@ 22783 @LENGTH@ 10
------------------DEL StringLiteral@@"" @AT@ 22795 @LENGTH@ 2
---------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 22799 @LENGTH@ 9
---------INS MethodInvocation@@StringUtils.hasText(getAnnotationProperty(attribute,"mappedBy","")) @TO@ InfixExpression@@PersistentAttributeType.ONE_TO_ONE == attribute.getPersistentAttributeType() && !getAnnotationProperty(attribute,"mappedBy","").isEmpty() @AT@ 22750 @LENGTH@ 69
------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(getAnnotationProperty(attribute,"mappedBy","")) @AT@ 22750 @LENGTH@ 11
------------INS SimpleName@@MethodName:hasText:[getAnnotationProperty(attribute,"mappedBy","")] @TO@ MethodInvocation@@StringUtils.hasText(getAnnotationProperty(attribute,"mappedBy","")) @AT@ 22762 @LENGTH@ 57
---------------INS MethodInvocation@@getAnnotationProperty(attribute,"mappedBy","") @TO@ SimpleName@@MethodName:hasText:[getAnnotationProperty(attribute,"mappedBy","")] @AT@ 22770 @LENGTH@ 48
------------------INS SimpleName@@MethodName:getAnnotationProperty:[attribute, "mappedBy", ""] @TO@ MethodInvocation@@getAnnotationProperty(attribute,"mappedBy","") @AT@ 22770 @LENGTH@ 48
---------------------INS SimpleName@@attribute @TO@ SimpleName@@MethodName:getAnnotationProperty:[attribute, "mappedBy", ""] @AT@ 22792 @LENGTH@ 9
---------------------INS StringLiteral@@"mappedBy" @TO@ SimpleName@@MethodName:getAnnotationProperty:[attribute, "mappedBy", ""] @AT@ 22803 @LENGTH@ 10
---------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:getAnnotationProperty:[attribute, "mappedBy", ""] @AT@ 22815 @LENGTH@ 2


UPD ReturnStatement@@MethodInvocation:schemaMapper.mapSchema(new Document(keyword.getKey(),keyword.getValue()),entity.getType()) @TO@ MethodInvocation:schemaMapper.mapSchema(new Document(keyword.getKey(),keyword.getValue()),entity != null ? entity.getType() : Object.class) @AT@ 10027 @LENGTH@ 100
---UPD MethodInvocation@@schemaMapper.mapSchema(new Document(keyword.getKey(),keyword.getValue()),entity.getType()) @TO@ schemaMapper.mapSchema(new Document(keyword.getKey(),keyword.getValue()),entity != null ? entity.getType() : Object.class) @AT@ 10034 @LENGTH@ 92
------UPD SimpleName@@MethodName:mapSchema:[new Document(keyword.getKey(),keyword.getValue()), entity.getType()] @TO@ MethodName:mapSchema:[new Document(keyword.getKey(),keyword.getValue()), entity != null ? entity.getType() : Object.class] @AT@ 10047 @LENGTH@ 79
---------INS ConditionalExpression@@entity != null ? entity.getType() : Object.class @TO@ SimpleName@@MethodName:mapSchema:[new Document(keyword.getKey(),keyword.getValue()), entity.getType()] @AT@ 10109 @LENGTH@ 48
------------INS InfixExpression@@entity != null @TO@ ConditionalExpression@@entity != null ? entity.getType() : Object.class @AT@ 10109 @LENGTH@ 14
---------------INS SimpleName@@entity @TO@ InfixExpression@@entity != null @AT@ 10109 @LENGTH@ 6
---------------INS Operator@@!= @TO@ InfixExpression@@entity != null @AT@ 10115 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@entity != null @AT@ 10119 @LENGTH@ 4
------------INS MethodInvocation@@entity.getType() @TO@ ConditionalExpression@@entity != null ? entity.getType() : Object.class @AT@ 10126 @LENGTH@ 16
---------------MOV SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getType() @AT@ 10109 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@entity.getType() @AT@ 10116 @LENGTH@ 9
------------INS TypeLiteral@@Object.class @TO@ ConditionalExpression@@entity != null ? entity.getType() : Object.class @AT@ 10145 @LENGTH@ 12
---------DEL MethodInvocation@@entity.getType() @AT@ 10109 @LENGTH@ 16


INS MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @TO@ TypeDeclaration@@[public]CacheUtils,  @AT@ 1673 @LENGTH@ 163
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1673 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1680 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1687 @LENGTH@ 6
---INS SimpleName@@MethodName:buildDbKeyWithDelimiterSuffix @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1694 @LENGTH@ 29
---INS SingleVariableDeclaration@@String catName @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1724 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String catName @AT@ 1724 @LENGTH@ 6
------INS SimpleName@@catName @TO@ SingleVariableDeclaration@@String catName @AT@ 1731 @LENGTH@ 7
---INS SingleVariableDeclaration@@String dbName @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1740 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String dbName @AT@ 1740 @LENGTH@ 6
------INS SimpleName@@dbName @TO@ SingleVariableDeclaration@@String dbName @AT@ 1747 @LENGTH@ 6
---INS ReturnStatement@@InfixExpression:buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @TO@ MethodDeclaration@@public, static, String, MethodName:buildDbKeyWithDelimiterSuffix, String catName, String dbName,  @AT@ 1761 @LENGTH@ 71
------INS InfixExpression@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @TO@ ReturnStatement@@InfixExpression:buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @AT@ 1768 @LENGTH@ 63
---------INS MethodInvocation@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) @TO@ InfixExpression@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @AT@ 1768 @LENGTH@ 53
------------INS SimpleName@@MethodName:buildKey:[catName.toLowerCase(), dbName.toLowerCase()] @TO@ MethodInvocation@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) @AT@ 1768 @LENGTH@ 53
---------------INS MethodInvocation@@catName.toLowerCase() @TO@ SimpleName@@MethodName:buildKey:[catName.toLowerCase(), dbName.toLowerCase()] @AT@ 1777 @LENGTH@ 21
------------------INS SimpleName@@Name:catName @TO@ MethodInvocation@@catName.toLowerCase() @AT@ 1777 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@catName.toLowerCase() @AT@ 1785 @LENGTH@ 13
---------------INS MethodInvocation@@dbName.toLowerCase() @TO@ SimpleName@@MethodName:buildKey:[catName.toLowerCase(), dbName.toLowerCase()] @AT@ 1800 @LENGTH@ 20
------------------INS SimpleName@@Name:dbName @TO@ MethodInvocation@@dbName.toLowerCase() @AT@ 1800 @LENGTH@ 6
------------------INS SimpleName@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@dbName.toLowerCase() @AT@ 1807 @LENGTH@ 13
---------INS Operator@@+ @TO@ InfixExpression@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @AT@ 1821 @LENGTH@ 1
---------INS SimpleName@@delimit @TO@ InfixExpression@@buildKey(catName.toLowerCase(),dbName.toLowerCase()) + delimit @AT@ 1824 @LENGTH@ 7


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1441 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1441 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1448 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1456 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1486 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1493 @LENGTH@ 5


UPD VariableDeclarationStatement@@WebArchive archive=ShrinkWrap.create(WebArchive.class,"NotClosingInjectedContextTestCase.war").addPackage(StartUp.class.getPackage()).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml").addClass(TimeoutUtil.class).addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml").addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller\n"),"MANIFEST.MF"); @TO@ WebArchive archive=ShrinkWrap.create(WebArchive.class,"NotClosingInjectedContextTestCase.war").addPackage(StartUp.class.getPackage()).addClass(TimeoutUtil.class).addAsManifestResource(PermissionUtils.createPermissionsXmlAsset(new FilePermission(System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*","read"),RemotingPermission.CREATE_ENDPOINT,RemotingPermission.CONNECT,new SocketPermission("localhost","resolve"),new PropertyPermission("ts.timeout.factor","read")),"jboss-permissions.xml").addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml").addClass(TimeoutUtil.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller,org.jboss.remoting3\n"),"MANIFEST.MF"); @AT@ 4310 @LENGTH@ 531
---UPD VariableDeclarationFragment@@archive=ShrinkWrap.create(WebArchive.class,"NotClosingInjectedContextTestCase.war").addPackage(StartUp.class.getPackage()).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml").addClass(TimeoutUtil.class).addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml").addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller\n"),"MANIFEST.MF") @TO@ archive=ShrinkWrap.create(WebArchive.class,"NotClosingInjectedContextTestCase.war").addPackage(StartUp.class.getPackage()).addClass(TimeoutUtil.class).addAsManifestResource(PermissionUtils.createPermissionsXmlAsset(new FilePermission(System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*","read"),RemotingPermission.CREATE_ENDPOINT,RemotingPermission.CONNECT,new SocketPermission("localhost","resolve"),new PropertyPermission("ts.timeout.factor","read")),"jboss-permissions.xml").addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml").addClass(TimeoutUtil.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller,org.jboss.remoting3\n"),"MANIFEST.MF") @AT@ 4321 @LENGTH@ 519
------UPD MethodInvocation@@ShrinkWrap.create(WebArchive.class,"NotClosingInjectedContextTestCase.war").addPackage(StartUp.class.getPackage()).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml").addClass(TimeoutUtil.class).addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml").addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller\n"),"MANIFEST.MF") @TO@ ShrinkWrap.create(WebArchive.class,"NotClosingInjectedContextTestCase.war").addPackage(StartUp.class.getPackage()).addClass(TimeoutUtil.class).addAsManifestResource(PermissionUtils.createPermissionsXmlAsset(new FilePermission(System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*","read"),RemotingPermission.CREATE_ENDPOINT,RemotingPermission.CONNECT,new SocketPermission("localhost","resolve"),new PropertyPermission("ts.timeout.factor","read")),"jboss-permissions.xml").addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml").addClass(TimeoutUtil.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller,org.jboss.remoting3\n"),"MANIFEST.MF") @AT@ 4331 @LENGTH@ 509
---------UPD MethodInvocation@@MethodName:addAsResource:[createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")), "META-INF/jboss-permissions.xml"] @TO@ MethodName:addAsManifestResource:[PermissionUtils.createPermissionsXmlAsset(new FilePermission(System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*","read"),RemotingPermission.CREATE_ENDPOINT,RemotingPermission.CONNECT,new SocketPermission("localhost","resolve"),new PropertyPermission("ts.timeout.factor","read")), "jboss-permissions.xml"] @AT@ 4331 @LENGTH@ 395
------------UPD MethodInvocation@@createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")) @TO@ PermissionUtils.createPermissionsXmlAsset(new FilePermission(System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*","read"),RemotingPermission.CREATE_ENDPOINT,RemotingPermission.CONNECT,new SocketPermission("localhost","resolve"),new PropertyPermission("ts.timeout.factor","read")) @AT@ 4613 @LENGTH@ 78
---------------INS SimpleName@@Name:PermissionUtils @TO@ MethodInvocation@@createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")) @AT@ 4570 @LENGTH@ 15
---------------UPD SimpleName@@MethodName:createPermissionsXmlAsset:[new PropertyPermission("ts.timeout.factor","read")] @TO@ MethodName:createPermissionsXmlAsset:[new FilePermission(System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*","read"), RemotingPermission.CREATE_ENDPOINT, RemotingPermission.CONNECT, new SocketPermission("localhost","resolve"), new PropertyPermission("ts.timeout.factor","read")] @AT@ 4613 @LENGTH@ 78
------------------INS ClassInstanceCreation@@FilePermission[System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*", "read"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new PropertyPermission("ts.timeout.factor","read")] @AT@ 4637 @LENGTH@ 182
---------------------INS New@@new @TO@ ClassInstanceCreation@@FilePermission[System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*", "read"] @AT@ 4637 @LENGTH@ 3
---------------------INS SimpleType@@FilePermission @TO@ ClassInstanceCreation@@FilePermission[System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*", "read"] @AT@ 4641 @LENGTH@ 14
---------------------INS InfixExpression@@System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*" @TO@ ClassInstanceCreation@@FilePermission[System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*", "read"] @AT@ 4656 @LENGTH@ 154
------------------------INS MethodInvocation@@System.getProperty("jboss.inst") @TO@ InfixExpression@@System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*" @AT@ 4656 @LENGTH@ 32
---------------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("jboss.inst") @AT@ 4656 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:getProperty:["jboss.inst"] @TO@ MethodInvocation@@System.getProperty("jboss.inst") @AT@ 4663 @LENGTH@ 25
------------------------------INS StringLiteral@@"jboss.inst" @TO@ SimpleName@@MethodName:getProperty:["jboss.inst"] @AT@ 4675 @LENGTH@ 12
------------------------INS Operator@@+ @TO@ InfixExpression@@System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*" @AT@ 4688 @LENGTH@ 1
------------------------INS QualifiedName@@File.separatorChar @TO@ InfixExpression@@System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*" @AT@ 4691 @LENGTH@ 18
---------------------------INS SimpleName@@File @TO@ QualifiedName@@File.separatorChar @AT@ 4691 @LENGTH@ 4
---------------------------INS SimpleName@@separatorChar @TO@ QualifiedName@@File.separatorChar @AT@ 4696 @LENGTH@ 13
------------------------INS StringLiteral@@"standalone" @TO@ InfixExpression@@System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*" @AT@ 4712 @LENGTH@ 12
------------------------INS QualifiedName@@File.separatorChar @TO@ InfixExpression@@System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*" @AT@ 4727 @LENGTH@ 18
---------------------------INS SimpleName@@File @TO@ QualifiedName@@File.separatorChar @AT@ 4727 @LENGTH@ 4
---------------------------INS SimpleName@@separatorChar @TO@ QualifiedName@@File.separatorChar @AT@ 4732 @LENGTH@ 13
------------------------INS StringLiteral@@"tmp" @TO@ InfixExpression@@System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*" @AT@ 4748 @LENGTH@ 5
------------------------INS QualifiedName@@File.separatorChar @TO@ InfixExpression@@System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*" @AT@ 4756 @LENGTH@ 18
---------------------------INS SimpleName@@File @TO@ QualifiedName@@File.separatorChar @AT@ 4756 @LENGTH@ 4
---------------------------INS SimpleName@@separatorChar @TO@ QualifiedName@@File.separatorChar @AT@ 4761 @LENGTH@ 13
------------------------INS StringLiteral@@"auth" @TO@ InfixExpression@@System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*" @AT@ 4777 @LENGTH@ 6
------------------------INS QualifiedName@@File.separatorChar @TO@ InfixExpression@@System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*" @AT@ 4786 @LENGTH@ 18
---------------------------INS SimpleName@@File @TO@ QualifiedName@@File.separatorChar @AT@ 4786 @LENGTH@ 4
---------------------------INS SimpleName@@separatorChar @TO@ QualifiedName@@File.separatorChar @AT@ 4791 @LENGTH@ 13
------------------------INS StringLiteral@@"*" @TO@ InfixExpression@@System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*" @AT@ 4807 @LENGTH@ 3
---------------------INS StringLiteral@@"read" @TO@ ClassInstanceCreation@@FilePermission[System.getProperty("jboss.inst") + File.separatorChar + "standalone"+ File.separatorChar+ "tmp"+ File.separatorChar+ "auth"+ File.separatorChar+ "*", "read"] @AT@ 4812 @LENGTH@ 6
------------------INS QualifiedName@@RemotingPermission.CREATE_ENDPOINT @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new PropertyPermission("ts.timeout.factor","read")] @AT@ 4845 @LENGTH@ 34
---------------------INS SimpleName@@RemotingPermission @TO@ QualifiedName@@RemotingPermission.CREATE_ENDPOINT @AT@ 4845 @LENGTH@ 18
---------------------INS SimpleName@@CREATE_ENDPOINT @TO@ QualifiedName@@RemotingPermission.CREATE_ENDPOINT @AT@ 4864 @LENGTH@ 15
------------------INS QualifiedName@@RemotingPermission.CONNECT @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new PropertyPermission("ts.timeout.factor","read")] @AT@ 4905 @LENGTH@ 26
---------------------INS SimpleName@@RemotingPermission @TO@ QualifiedName@@RemotingPermission.CONNECT @AT@ 4905 @LENGTH@ 18
---------------------INS SimpleName@@CONNECT @TO@ QualifiedName@@RemotingPermission.CONNECT @AT@ 4924 @LENGTH@ 7
------------------INS ClassInstanceCreation@@SocketPermission["localhost", "resolve"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new PropertyPermission("ts.timeout.factor","read")] @AT@ 4957 @LENGTH@ 44
---------------------INS New@@new @TO@ ClassInstanceCreation@@SocketPermission["localhost", "resolve"] @AT@ 4957 @LENGTH@ 3
---------------------INS SimpleType@@SocketPermission @TO@ ClassInstanceCreation@@SocketPermission["localhost", "resolve"] @AT@ 4961 @LENGTH@ 16
---------------------INS StringLiteral@@"localhost" @TO@ ClassInstanceCreation@@SocketPermission["localhost", "resolve"] @AT@ 4978 @LENGTH@ 11
---------------------INS StringLiteral@@"resolve" @TO@ ClassInstanceCreation@@SocketPermission["localhost", "resolve"] @AT@ 4991 @LENGTH@ 9
------------UPD StringLiteral@@"META-INF/jboss-permissions.xml" @TO@ "jboss-permissions.xml" @AT@ 4693 @LENGTH@ 32
---------MOV MethodInvocation@@MethodName:addAsManifestResource:[EmptyAsset.INSTANCE, "beans.xml"] @TO@ MethodInvocation@@ShrinkWrap.create(WebArchive.class,"NotClosingInjectedContextTestCase.war").addPackage(StartUp.class.getPackage()).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml").addClass(TimeoutUtil.class).addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml").addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller\n"),"MANIFEST.MF") @AT@ 4331 @LENGTH@ 205
---------INS MethodInvocation@@MethodName:addClass:[TimeoutUtil.class] @TO@ MethodInvocation@@ShrinkWrap.create(WebArchive.class,"NotClosingInjectedContextTestCase.war").addPackage(StartUp.class.getPackage()).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml").addClass(TimeoutUtil.class).addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml").addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller\n"),"MANIFEST.MF") @AT@ 4353 @LENGTH@ 870
------------INS TypeLiteral@@TimeoutUtil.class @TO@ MethodInvocation@@MethodName:addClass:[TimeoutUtil.class] @AT@ 5205 @LENGTH@ 17
---------UPD SimpleName@@MethodName:addAsManifestResource:[new StringAsset("Dependencies: org.jboss.as.controller\n"), "MANIFEST.MF"] @TO@ MethodName:addAsManifestResource:[new StringAsset("Dependencies: org.jboss.as.controller,org.jboss.remoting3\n"), "MANIFEST.MF"] @AT@ 4744 @LENGTH@ 96
------------UPD ClassInstanceCreation@@StringAsset["Dependencies: org.jboss.as.controller\n"] @TO@ StringAsset["Dependencies: org.jboss.as.controller,org.jboss.remoting3\n"] @AT@ 4766 @LENGTH@ 58
---------------UPD StringLiteral@@"Dependencies: org.jboss.as.controller\n" @TO@ "Dependencies: org.jboss.as.controller,org.jboss.remoting3\n" @AT@ 4782 @LENGTH@ 41


UPD Block@@ThenBody:{  if (host != null)   config.setIpfsHost(host);  if (port > 0)   config.setIpfsPort(port);  int idx=cmd.indexOf('/');  cmd=cmd.substring(idx + 1);} @TO@ ThenBody:{  if (host != null) {    config.setIpfsHost(host);  }  if (port > 0) {    config.setIpfsPort(port);  }  int idx=cmd.indexOf('/');  cmd=cmd.substring(idx + 1);} @AT@ 1640 @LENGTH@ 201
---UPD IfStatement@@if (host != null) config.setIpfsHost(host); @TO@ if (host != null) {  config.setIpfsHost(host);} @AT@ 1654 @LENGTH@ 43
------UPD Block@@ThenBody:config.setIpfsHost(host); @TO@ ThenBody:{  config.setIpfsHost(host);} @AT@ 1672 @LENGTH@ 25
---UPD IfStatement@@if (port > 0) config.setIpfsPort(port); @TO@ if (port > 0) {  config.setIpfsPort(port);} @AT@ 1710 @LENGTH@ 39
------UPD Block@@ThenBody:config.setIpfsPort(port); @TO@ ThenBody:{  config.setIpfsPort(port);} @AT@ 1724 @LENGTH@ 25


MOV FieldDeclaration@@AmazonS3ClientMock, [clientMock=new AmazonS3ClientMock()] @TO@ TypeDeclaration@@[public]S3ComponentDownloadLinkTest, CamelTestSupport @AT@ 1555 @LENGTH@ 57


UPD VariableDeclarationStatement@@Class<?> type=ClassUtils.getUserClass(beanType); @TO@ Class<?> type=ProxyUtils.getUserClass(beanType); @AT@ 6069 @LENGTH@ 50
---UPD VariableDeclarationFragment@@type=ClassUtils.getUserClass(beanType) @TO@ type=ProxyUtils.getUserClass(beanType) @AT@ 6078 @LENGTH@ 40
------UPD MethodInvocation@@ClassUtils.getUserClass(beanType) @TO@ ProxyUtils.getUserClass(beanType) @AT@ 6085 @LENGTH@ 33
---------UPD SimpleName@@Name:ClassUtils @TO@ Name:ProxyUtils @AT@ 6085 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:serializingThenDeserializingWithConfiguredObjectMapperShouldWork, IOException,  @TO@ TypeDeclaration@@[public]UsernamePasswordAuthenticationTokenMixinTests, AbstractMixinTests @AT@ 7966 @LENGTH@ 597
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:serializingThenDeserializingWithConfiguredObjectMapperShouldWork, IOException,  @AT@ 7966 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:serializingThenDeserializingWithConfiguredObjectMapperShouldWork, IOException,  @AT@ 7973 @LENGTH@ 4
---INS SimpleName@@MethodName:serializingThenDeserializingWithConfiguredObjectMapperShouldWork @TO@ MethodDeclaration@@public, void, MethodName:serializingThenDeserializingWithConfiguredObjectMapperShouldWork, IOException,  @AT@ 7978 @LENGTH@ 64
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:serializingThenDeserializingWithConfiguredObjectMapperShouldWork, IOException,  @AT@ 8052 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:this.mapper.setDefaultPropertyInclusion(construct(ALWAYS,NON_NULL)).setSerializationInclusion(NON_ABSENT) @TO@ MethodDeclaration@@public, void, MethodName:serializingThenDeserializingWithConfiguredObjectMapperShouldWork, IOException,  @AT@ 8079 @LENGTH@ 107
------INS MethodInvocation@@this.mapper.setDefaultPropertyInclusion(construct(ALWAYS,NON_NULL)).setSerializationInclusion(NON_ABSENT) @TO@ ExpressionStatement@@MethodInvocation:this.mapper.setDefaultPropertyInclusion(construct(ALWAYS,NON_NULL)).setSerializationInclusion(NON_ABSENT) @AT@ 8079 @LENGTH@ 106
---------INS MethodInvocation@@MethodName:setDefaultPropertyInclusion:[construct(ALWAYS,NON_NULL)] @TO@ MethodInvocation@@this.mapper.setDefaultPropertyInclusion(construct(ALWAYS,NON_NULL)).setSerializationInclusion(NON_ABSENT) @AT@ 8079 @LENGTH@ 68
------------INS MethodInvocation@@construct(ALWAYS,NON_NULL) @TO@ MethodInvocation@@MethodName:setDefaultPropertyInclusion:[construct(ALWAYS,NON_NULL)] @AT@ 8119 @LENGTH@ 27
---------------INS SimpleName@@MethodName:construct:[ALWAYS, NON_NULL] @TO@ MethodInvocation@@construct(ALWAYS,NON_NULL) @AT@ 8119 @LENGTH@ 27
------------------INS SimpleName@@ALWAYS @TO@ SimpleName@@MethodName:construct:[ALWAYS, NON_NULL] @AT@ 8129 @LENGTH@ 6
------------------INS SimpleName@@NON_NULL @TO@ SimpleName@@MethodName:construct:[ALWAYS, NON_NULL] @AT@ 8137 @LENGTH@ 8
---------INS FieldAccess@@this.mapper @TO@ MethodInvocation@@this.mapper.setDefaultPropertyInclusion(construct(ALWAYS,NON_NULL)).setSerializationInclusion(NON_ABSENT) @AT@ 8079 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.mapper @AT@ 8079 @LENGTH@ 4
------------INS SimpleName@@mapper @TO@ FieldAccess@@this.mapper @AT@ 8084 @LENGTH@ 6
---------INS SimpleName@@MethodName:setSerializationInclusion:[NON_ABSENT] @TO@ MethodInvocation@@this.mapper.setDefaultPropertyInclusion(construct(ALWAYS,NON_NULL)).setSerializationInclusion(NON_ABSENT) @AT@ 8148 @LENGTH@ 37
------------INS SimpleName@@NON_ABSENT @TO@ SimpleName@@MethodName:setSerializationInclusion:[NON_ABSENT] @AT@ 8174 @LENGTH@ 10
---INS VariableDeclarationStatement@@UsernamePasswordAuthenticationToken original=new UsernamePasswordAuthenticationToken("Frodo",null); @TO@ MethodDeclaration@@public, void, MethodName:serializingThenDeserializingWithConfiguredObjectMapperShouldWork, IOException,  @AT@ 8189 @LENGTH@ 102
------INS SimpleType@@UsernamePasswordAuthenticationToken @TO@ VariableDeclarationStatement@@UsernamePasswordAuthenticationToken original=new UsernamePasswordAuthenticationToken("Frodo",null); @AT@ 8189 @LENGTH@ 35
------INS VariableDeclarationFragment@@original=new UsernamePasswordAuthenticationToken("Frodo",null) @TO@ VariableDeclarationStatement@@UsernamePasswordAuthenticationToken original=new UsernamePasswordAuthenticationToken("Frodo",null); @AT@ 8225 @LENGTH@ 65
---------INS SimpleName@@original @TO@ VariableDeclarationFragment@@original=new UsernamePasswordAuthenticationToken("Frodo",null) @AT@ 8225 @LENGTH@ 8
---------INS ClassInstanceCreation@@UsernamePasswordAuthenticationToken["Frodo", null] @TO@ VariableDeclarationFragment@@original=new UsernamePasswordAuthenticationToken("Frodo",null) @AT@ 8236 @LENGTH@ 54
------------INS New@@new @TO@ ClassInstanceCreation@@UsernamePasswordAuthenticationToken["Frodo", null] @AT@ 8236 @LENGTH@ 3
------------INS SimpleType@@UsernamePasswordAuthenticationToken @TO@ ClassInstanceCreation@@UsernamePasswordAuthenticationToken["Frodo", null] @AT@ 8240 @LENGTH@ 35
------------INS StringLiteral@@"Frodo" @TO@ ClassInstanceCreation@@UsernamePasswordAuthenticationToken["Frodo", null] @AT@ 8276 @LENGTH@ 7
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@UsernamePasswordAuthenticationToken["Frodo", null] @AT@ 8285 @LENGTH@ 4
---INS VariableDeclarationStatement@@String serialized=this.mapper.writeValueAsString(original); @TO@ MethodDeclaration@@public, void, MethodName:serializingThenDeserializingWithConfiguredObjectMapperShouldWork, IOException,  @AT@ 8305 @LENGTH@ 61
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String serialized=this.mapper.writeValueAsString(original); @AT@ 8305 @LENGTH@ 6
------INS VariableDeclarationFragment@@serialized=this.mapper.writeValueAsString(original) @TO@ VariableDeclarationStatement@@String serialized=this.mapper.writeValueAsString(original); @AT@ 8312 @LENGTH@ 53
---------INS SimpleName@@serialized @TO@ VariableDeclarationFragment@@serialized=this.mapper.writeValueAsString(original) @AT@ 8312 @LENGTH@ 10
---------INS MethodInvocation@@this.mapper.writeValueAsString(original) @TO@ VariableDeclarationFragment@@serialized=this.mapper.writeValueAsString(original) @AT@ 8325 @LENGTH@ 40
------------INS FieldAccess@@this.mapper @TO@ MethodInvocation@@this.mapper.writeValueAsString(original) @AT@ 8325 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.mapper @AT@ 8325 @LENGTH@ 4
---------------INS SimpleName@@mapper @TO@ FieldAccess@@this.mapper @AT@ 8330 @LENGTH@ 6
------------INS SimpleName@@MethodName:writeValueAsString:[original] @TO@ MethodInvocation@@this.mapper.writeValueAsString(original) @AT@ 8337 @LENGTH@ 28
---------------INS SimpleName@@original @TO@ SimpleName@@MethodName:writeValueAsString:[original] @AT@ 8356 @LENGTH@ 8
---INS VariableDeclarationStatement@@UsernamePasswordAuthenticationToken deserialized=this.mapper.readValue(serialized,UsernamePasswordAuthenticationToken.class); @TO@ MethodDeclaration@@public, void, MethodName:serializingThenDeserializingWithConfiguredObjectMapperShouldWork, IOException,  @AT@ 8369 @LENGTH@ 132
------INS SimpleType@@UsernamePasswordAuthenticationToken @TO@ VariableDeclarationStatement@@UsernamePasswordAuthenticationToken deserialized=this.mapper.readValue(serialized,UsernamePasswordAuthenticationToken.class); @AT@ 8369 @LENGTH@ 35
------INS VariableDeclarationFragment@@deserialized=this.mapper.readValue(serialized,UsernamePasswordAuthenticationToken.class) @TO@ VariableDeclarationStatement@@UsernamePasswordAuthenticationToken deserialized=this.mapper.readValue(serialized,UsernamePasswordAuthenticationToken.class); @AT@ 8405 @LENGTH@ 95
---------INS SimpleName@@deserialized @TO@ VariableDeclarationFragment@@deserialized=this.mapper.readValue(serialized,UsernamePasswordAuthenticationToken.class) @AT@ 8405 @LENGTH@ 12
---------INS MethodInvocation@@this.mapper.readValue(serialized,UsernamePasswordAuthenticationToken.class) @TO@ VariableDeclarationFragment@@deserialized=this.mapper.readValue(serialized,UsernamePasswordAuthenticationToken.class) @AT@ 8424 @LENGTH@ 76
------------INS FieldAccess@@this.mapper @TO@ MethodInvocation@@this.mapper.readValue(serialized,UsernamePasswordAuthenticationToken.class) @AT@ 8424 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.mapper @AT@ 8424 @LENGTH@ 4
---------------INS SimpleName@@mapper @TO@ FieldAccess@@this.mapper @AT@ 8429 @LENGTH@ 6
------------INS SimpleName@@MethodName:readValue:[serialized, UsernamePasswordAuthenticationToken.class] @TO@ MethodInvocation@@this.mapper.readValue(serialized,UsernamePasswordAuthenticationToken.class) @AT@ 8436 @LENGTH@ 64
---------------INS SimpleName@@serialized @TO@ SimpleName@@MethodName:readValue:[serialized, UsernamePasswordAuthenticationToken.class] @AT@ 8446 @LENGTH@ 10
---------------INS TypeLiteral@@UsernamePasswordAuthenticationToken.class @TO@ SimpleName@@MethodName:readValue:[serialized, UsernamePasswordAuthenticationToken.class] @AT@ 8458 @LENGTH@ 41
---INS ExpressionStatement@@MethodInvocation:assertThat(deserialized).isEqualTo(original) @TO@ MethodDeclaration@@public, void, MethodName:serializingThenDeserializingWithConfiguredObjectMapperShouldWork, IOException,  @AT@ 8515 @LENGTH@ 45
------INS MethodInvocation@@assertThat(deserialized).isEqualTo(original) @TO@ ExpressionStatement@@MethodInvocation:assertThat(deserialized).isEqualTo(original) @AT@ 8515 @LENGTH@ 44
---------INS MethodInvocation@@MethodName:assertThat:[deserialized] @TO@ MethodInvocation@@assertThat(deserialized).isEqualTo(original) @AT@ 8515 @LENGTH@ 24
------------INS SimpleName@@deserialized @TO@ MethodInvocation@@MethodName:assertThat:[deserialized] @AT@ 8526 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEqualTo:[original] @TO@ MethodInvocation@@assertThat(deserialized).isEqualTo(original) @AT@ 8540 @LENGTH@ 19
------------INS SimpleName@@original @TO@ SimpleName@@MethodName:isEqualTo:[original] @AT@ 8550 @LENGTH@ 8


UPD IfStatement@@if (seed != null) {  byte[] seedBytes=FileCopyUtils.copyToByteArray(seed.getInputStream());  rnd.setSeed(seedBytes);} else {  rnd.nextBytes(new byte[1]);} @TO@ if (seed != null) {  byte[] seedBytes=FileCopyUtils.copyToByteArray(seed.getInputStream());  rnd.setSeed(seedBytes);} @AT@ 1269 @LENGTH@ 292
---DEL Block@@ElseBody:{  rnd.nextBytes(new byte[1]);} @AT@ 1435 @LENGTH@ 126


UPD ForStatement@@for (int i=0; i < args.length; i++) {  super.setVariable(paramNames[i],args[i]);} @TO@ for (int i=0; i < args.length; i++) {  if (paramNames[i] != null) {    setVariable(paramNames[i],args[i]);  }} @AT@ 3691 @LENGTH@ 89
---INS IfStatement@@if (paramNames[i] != null) {  setVariable(paramNames[i],args[i]);} @TO@ ForStatement@@for (int i=0; i < args.length; i++) {  super.setVariable(paramNames[i],args[i]);} @AT@ 3734 @LENGTH@ 74
------INS InfixExpression@@paramNames[i] != null @TO@ IfStatement@@if (paramNames[i] != null) {  setVariable(paramNames[i],args[i]);} @AT@ 3738 @LENGTH@ 21
---------INS ArrayAccess@@paramNames[i] @TO@ InfixExpression@@paramNames[i] != null @AT@ 3738 @LENGTH@ 13
------------INS SimpleName@@paramNames @TO@ ArrayAccess@@paramNames[i] @AT@ 3738 @LENGTH@ 10
------------INS SimpleName@@i @TO@ ArrayAccess@@paramNames[i] @AT@ 3749 @LENGTH@ 1
---------INS Operator@@!= @TO@ InfixExpression@@paramNames[i] != null @AT@ 3751 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@paramNames[i] != null @AT@ 3755 @LENGTH@ 4
------INS Block@@ThenBody:{  setVariable(paramNames[i],args[i]);} @TO@ IfStatement@@if (paramNames[i] != null) {  setVariable(paramNames[i],args[i]);} @AT@ 3761 @LENGTH@ 47
---------INS ExpressionStatement@@MethodInvocation:setVariable(paramNames[i],args[i]) @TO@ Block@@ThenBody:{  setVariable(paramNames[i],args[i]);} @AT@ 3767 @LENGTH@ 36
------------INS MethodInvocation@@setVariable(paramNames[i],args[i]) @TO@ ExpressionStatement@@MethodInvocation:setVariable(paramNames[i],args[i]) @AT@ 3767 @LENGTH@ 35
---------------INS SimpleName@@MethodName:setVariable:[paramNames[i], args[i]] @TO@ MethodInvocation@@setVariable(paramNames[i],args[i]) @AT@ 3767 @LENGTH@ 35
------------------INS ArrayAccess@@paramNames[i] @TO@ SimpleName@@MethodName:setVariable:[paramNames[i], args[i]] @AT@ 3779 @LENGTH@ 13
---------------------MOV SimpleName@@paramNames @TO@ ArrayAccess@@paramNames[i] @AT@ 3752 @LENGTH@ 10
---------------------MOV SimpleName@@i @TO@ ArrayAccess@@paramNames[i] @AT@ 3763 @LENGTH@ 1
------------------INS ArrayAccess@@args[i] @TO@ SimpleName@@MethodName:setVariable:[paramNames[i], args[i]] @AT@ 3794 @LENGTH@ 7
---------------------MOV SimpleName@@args @TO@ ArrayAccess@@args[i] @AT@ 3767 @LENGTH@ 4
---------------------MOV SimpleName@@args @TO@ ArrayAccess@@args[i] @AT@ 3767 @LENGTH@ 4
---------------------MOV SimpleName@@i @TO@ ArrayAccess@@args[i] @AT@ 3772 @LENGTH@ 1
---------------------MOV SimpleName@@i @TO@ ArrayAccess@@args[i] @AT@ 3772 @LENGTH@ 1
---DEL ExpressionStatement@@SuperMethodInvocation:super.setVariable(paramNames[i],args[i]) @AT@ 3734 @LENGTH@ 42
------DEL SuperMethodInvocation@@super.setVariable(paramNames[i],args[i]) @AT@ 3734 @LENGTH@ 41
---------DEL SimpleName@@MethodName:setVariable:[paramNames[i], args[i]] @AT@ 3740 @LENGTH@ 11
---------DEL ArrayAccess@@paramNames[i] @AT@ 3752 @LENGTH@ 13
---------DEL ArrayAccess@@args[i] @AT@ 3767 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:testDrainAndReject, IOException,  @TO@ public, void, MethodName:testDrainAndReject, IOException, TimeoutException,  @AT@ 11967 @LENGTH@ 2401
---INS SimpleType@@TimeoutException @TO@ MethodDeclaration@@public, void, MethodName:testDrainAndReject, IOException,  @AT@ 12118 @LENGTH@ 16
---UPD ExpressionStatement@@MethodInvocation:doAnswer(i -> {
  ((Consumer)i.getArgument(6)).handleConsumeOk("consumerTag");
  return "consumerTag";
}
).when(channel).basicConsume(anyString(),anyBoolean(),anyString(),anyBoolean(),anyBoolean(),anyMap(),any(Consumer.class)) @TO@ MethodInvocation:doAnswer(inv -> {
  Consumer consumer=inv.getArgument(6);
  consumer.handleConsumeOk("consumerTag");
  theConsumer.set(consumer);
  return "consumerTag";
}
).when(channel).basicConsume(anyString(),anyBoolean(),anyString(),anyBoolean(),anyBoolean(),anyMap(),any(Consumer.class)) @AT@ 12669 @LENGTH@ 241
------UPD MethodInvocation@@doAnswer(i -> {
  ((Consumer)i.getArgument(6)).handleConsumeOk("consumerTag");
  return "consumerTag";
}
).when(channel).basicConsume(anyString(),anyBoolean(),anyString(),anyBoolean(),anyBoolean(),anyMap(),any(Consumer.class)) @TO@ doAnswer(inv -> {
  Consumer consumer=inv.getArgument(6);
  consumer.handleConsumeOk("consumerTag");
  theConsumer.set(consumer);
  return "consumerTag";
}
).when(channel).basicConsume(anyString(),anyBoolean(),anyString(),anyBoolean(),anyBoolean(),anyMap(),any(Consumer.class)) @AT@ 12669 @LENGTH@ 240
---------UPD MethodInvocation@@MethodName:doAnswer:[i -> {
  ((Consumer)i.getArgument(6)).handleConsumeOk("consumerTag");
  return "consumerTag";
}
] @TO@ MethodName:doAnswer:[inv -> {
  Consumer consumer=inv.getArgument(6);
  consumer.handleConsumeOk("consumerTag");
  theConsumer.set(consumer);
  return "consumerTag";
}
] @AT@ 12669 @LENGTH@ 110
------------UPD LambdaExpression@@i -> {
  ((Consumer)i.getArgument(6)).handleConsumeOk("consumerTag");
  return "consumerTag";
}
 @TO@ inv -> {
  Consumer consumer=inv.getArgument(6);
  consumer.handleConsumeOk("consumerTag");
  theConsumer.set(consumer);
  return "consumerTag";
}
 @AT@ 12678 @LENGTH@ 100
---------------UPD VariableDeclarationFragment@@i @TO@ inv @AT@ 12678 @LENGTH@ 1
------------------UPD SimpleName@@i @TO@ inv @AT@ 12678 @LENGTH@ 1
---------------DEL ExpressionStatement@@MethodInvocation:((Consumer)i.getArgument(6)).handleConsumeOk("consumerTag") @AT@ 12688 @LENGTH@ 61
------------------DEL MethodInvocation@@((Consumer)i.getArgument(6)).handleConsumeOk("consumerTag") @AT@ 12688 @LENGTH@ 60
---------------------DEL ParenthesizedExpression@@((Consumer)i.getArgument(6)) @AT@ 12688 @LENGTH@ 29
------------------------DEL CastExpression@@(Consumer)i.getArgument(6) @AT@ 12689 @LENGTH@ 27
---------------------------DEL SimpleType@@Consumer @AT@ 12690 @LENGTH@ 8
---------------------------DEL MethodInvocation@@i.getArgument(6) @AT@ 12700 @LENGTH@ 16
---------------INS VariableDeclarationStatement@@Consumer consumer=inv.getArgument(6); @TO@ LambdaExpression@@i -> {
  ((Consumer)i.getArgument(6)).handleConsumeOk("consumerTag");
  return "consumerTag";
}
 @AT@ 12873 @LENGTH@ 39
------------------INS SimpleType@@Consumer @TO@ VariableDeclarationStatement@@Consumer consumer=inv.getArgument(6); @AT@ 12873 @LENGTH@ 8
------------------INS VariableDeclarationFragment@@consumer=inv.getArgument(6) @TO@ VariableDeclarationStatement@@Consumer consumer=inv.getArgument(6); @AT@ 12882 @LENGTH@ 29
---------------------INS SimpleName@@consumer @TO@ VariableDeclarationFragment@@consumer=inv.getArgument(6) @AT@ 12882 @LENGTH@ 8
---------------------INS MethodInvocation@@inv.getArgument(6) @TO@ VariableDeclarationFragment@@consumer=inv.getArgument(6) @AT@ 12893 @LENGTH@ 18
------------------------MOV SimpleName@@Name:i @TO@ MethodInvocation@@inv.getArgument(6) @AT@ 12700 @LENGTH@ 1
------------------------MOV SimpleName@@MethodName:getArgument:[6] @TO@ MethodInvocation@@inv.getArgument(6) @AT@ 12702 @LENGTH@ 14
---------------INS ExpressionStatement@@MethodInvocation:consumer.handleConsumeOk("consumerTag") @TO@ LambdaExpression@@i -> {
  ((Consumer)i.getArgument(6)).handleConsumeOk("consumerTag");
  return "consumerTag";
}
 @AT@ 12916 @LENGTH@ 40
------------------INS MethodInvocation@@consumer.handleConsumeOk("consumerTag") @TO@ ExpressionStatement@@MethodInvocation:consumer.handleConsumeOk("consumerTag") @AT@ 12916 @LENGTH@ 39
---------------------MOV SimpleName@@MethodName:handleConsumeOk:["consumerTag"] @TO@ MethodInvocation@@consumer.handleConsumeOk("consumerTag") @AT@ 12718 @LENGTH@ 30
---------------------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.handleConsumeOk("consumerTag") @AT@ 12916 @LENGTH@ 8
---------------INS ExpressionStatement@@MethodInvocation:theConsumer.set(consumer) @TO@ LambdaExpression@@i -> {
  ((Consumer)i.getArgument(6)).handleConsumeOk("consumerTag");
  return "consumerTag";
}
 @AT@ 12960 @LENGTH@ 26
------------------INS MethodInvocation@@theConsumer.set(consumer) @TO@ ExpressionStatement@@MethodInvocation:theConsumer.set(consumer) @AT@ 12960 @LENGTH@ 25
---------------------INS SimpleName@@Name:theConsumer @TO@ MethodInvocation@@theConsumer.set(consumer) @AT@ 12960 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:set:[consumer] @TO@ MethodInvocation@@theConsumer.set(consumer) @AT@ 12972 @LENGTH@ 13
------------------------INS SimpleName@@consumer @TO@ SimpleName@@MethodName:set:[consumer] @AT@ 12976 @LENGTH@ 8
---INS VariableDeclarationStatement@@AtomicReference<Consumer> theConsumer=new AtomicReference<>(); @TO@ MethodDeclaration@@public, void, MethodName:testDrainAndReject, IOException,  @AT@ 12785 @LENGTH@ 64
------INS ParameterizedType@@AtomicReference<Consumer> @TO@ VariableDeclarationStatement@@AtomicReference<Consumer> theConsumer=new AtomicReference<>(); @AT@ 12785 @LENGTH@ 25
---------INS SimpleType@@AtomicReference @TO@ ParameterizedType@@AtomicReference<Consumer> @AT@ 12785 @LENGTH@ 15
---------INS SimpleType@@Consumer @TO@ ParameterizedType@@AtomicReference<Consumer> @AT@ 12801 @LENGTH@ 8
------INS VariableDeclarationFragment@@theConsumer=new AtomicReference<>() @TO@ VariableDeclarationStatement@@AtomicReference<Consumer> theConsumer=new AtomicReference<>(); @AT@ 12811 @LENGTH@ 37
---------INS SimpleName@@theConsumer @TO@ VariableDeclarationFragment@@theConsumer=new AtomicReference<>() @AT@ 12811 @LENGTH@ 11
---------INS ClassInstanceCreation@@AtomicReference<>[] @TO@ VariableDeclarationFragment@@theConsumer=new AtomicReference<>() @AT@ 12825 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@AtomicReference<>[] @AT@ 12825 @LENGTH@ 3
------------INS ParameterizedType@@AtomicReference<> @TO@ ClassInstanceCreation@@AtomicReference<>[] @AT@ 12829 @LENGTH@ 17
---------------INS SimpleType@@AtomicReference @TO@ ParameterizedType@@AtomicReference<> @AT@ 12829 @LENGTH@ 15
---MOV ExpressionStatement@@MethodInvocation:consumer.handleDelivery("consumerTag",envelope,props,new byte[0]) @TO@ MethodDeclaration@@public, void, MethodName:testDrainAndReject, IOException,  @AT@ 13722 @LENGTH@ 69
---MOV ExpressionStatement@@Assignment:envelope=new Envelope(2,false,"foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testDrainAndReject, IOException,  @AT@ 13794 @LENGTH@ 48
---MOV ExpressionStatement@@MethodInvocation:consumer.handleDelivery("consumerTag",envelope,props,new byte[0]) @TO@ MethodDeclaration@@public, void, MethodName:testDrainAndReject, IOException,  @AT@ 14082 @LENGTH@ 69
---UPD ExpressionStatement@@MethodInvocation:verify(channel).basicNack(3,true,true) @TO@ MethodInvocation:doAnswer(inv -> {
  theConsumer.get().handleCancelOk("consumerTag");
  return null;
}
).when(channel).basicCancel("consumerTag") @AT@ 14268 @LENGTH@ 41
------UPD MethodInvocation@@verify(channel).basicNack(3,true,true) @TO@ doAnswer(inv -> {
  theConsumer.get().handleCancelOk("consumerTag");
  return null;
}
).when(channel).basicCancel("consumerTag") @AT@ 14268 @LENGTH@ 40
---------INS MethodInvocation@@MethodName:doAnswer:[inv -> {
  theConsumer.get().handleCancelOk("consumerTag");
  return null;
}
] @TO@ MethodInvocation@@verify(channel).basicNack(3,true,true) @AT@ 13150 @LENGTH@ 90
------------INS LambdaExpression@@inv -> {
  theConsumer.get().handleCancelOk("consumerTag");
  return null;
}
 @TO@ MethodInvocation@@MethodName:doAnswer:[inv -> {
  theConsumer.get().handleCancelOk("consumerTag");
  return null;
}
] @AT@ 13159 @LENGTH@ 80
---------------INS VariableDeclarationFragment@@inv @TO@ LambdaExpression@@inv -> {
  theConsumer.get().handleCancelOk("consumerTag");
  return null;
}
 @AT@ 13159 @LENGTH@ 3
------------------INS SimpleName@@inv @TO@ VariableDeclarationFragment@@inv @AT@ 13159 @LENGTH@ 3
------------------INS SimpleName@@inv @TO@ VariableDeclarationFragment@@inv @AT@ 13159 @LENGTH@ 3
---------------INS ExpressionStatement@@MethodInvocation:theConsumer.get().handleCancelOk("consumerTag") @TO@ LambdaExpression@@inv -> {
  theConsumer.get().handleCancelOk("consumerTag");
  return null;
}
 @AT@ 13171 @LENGTH@ 48
------------------INS MethodInvocation@@theConsumer.get().handleCancelOk("consumerTag") @TO@ ExpressionStatement@@MethodInvocation:theConsumer.get().handleCancelOk("consumerTag") @AT@ 13171 @LENGTH@ 47
---------------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@theConsumer.get().handleCancelOk("consumerTag") @AT@ 13171 @LENGTH@ 17
---------------------INS SimpleName@@Name:theConsumer @TO@ MethodInvocation@@theConsumer.get().handleCancelOk("consumerTag") @AT@ 13171 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:handleCancelOk:["consumerTag"] @TO@ MethodInvocation@@theConsumer.get().handleCancelOk("consumerTag") @AT@ 13189 @LENGTH@ 29
------------------------INS StringLiteral@@"consumerTag" @TO@ SimpleName@@MethodName:handleCancelOk:["consumerTag"] @AT@ 13204 @LENGTH@ 13
---------------INS ReturnStatement@@NullLiteral:null @TO@ LambdaExpression@@inv -> {
  theConsumer.get().handleCancelOk("consumerTag");
  return null;
}
 @AT@ 13223 @LENGTH@ 12
------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 13230 @LENGTH@ 4
---------UPD MethodInvocation@@MethodName:verify:[channel] @TO@ MethodName:when:[channel] @AT@ 14268 @LENGTH@ 15
---------UPD SimpleName@@MethodName:basicNack:[3, true, true] @TO@ MethodName:basicCancel:["consumerTag"] @AT@ 14284 @LENGTH@ 24
------------INS StringLiteral@@"consumerTag" @TO@ SimpleName@@MethodName:basicNack:[3, true, true] @AT@ 13267 @LENGTH@ 13
------------DEL NumberLiteral@@3 @AT@ 14294 @LENGTH@ 1
------------DEL BooleanLiteral@@true @AT@ 14297 @LENGTH@ 4
------------DEL BooleanLiteral@@true @AT@ 14303 @LENGTH@ 4
---MOV ExpressionStatement@@MethodInvocation:verify(channel).basicNack(3,true,true) @TO@ MethodDeclaration@@public, void, MethodName:testDrainAndReject, IOException,  @AT@ 14268 @LENGTH@ 41
---UPD ExpressionStatement@@MethodInvocation:verify(channel,times(2)).basicCancel("consumerTag") @TO@ MethodInvocation:verify(channel,times(1)).basicCancel("consumerTag") @AT@ 14312 @LENGTH@ 53
------UPD MethodInvocation@@verify(channel,times(2)).basicCancel("consumerTag") @TO@ verify(channel,times(1)).basicCancel("consumerTag") @AT@ 14312 @LENGTH@ 52
---------UPD MethodInvocation@@MethodName:verify:[channel, times(2)] @TO@ MethodName:verify:[channel, times(1)] @AT@ 14312 @LENGTH@ 25
------------UPD MethodInvocation@@times(2) @TO@ times(1) @AT@ 14328 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:times:[2] @TO@ MethodName:times:[1] @AT@ 14328 @LENGTH@ 8
------------------UPD NumberLiteral@@2 @TO@ 1 @AT@ 14334 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:Assert.notNull(userAuthorities,"userAuthorities cannot be null") @TO@ MethodDeclaration@@public, static, Set<String>, MethodName:authorityListToSet, Collection<? extends GrantedAuthority> userAuthorities,  @AT@ 1997 @LENGTH@ 66
---INS MethodInvocation@@Assert.notNull(userAuthorities,"userAuthorities cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(userAuthorities,"userAuthorities cannot be null") @AT@ 1997 @LENGTH@ 65
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(userAuthorities,"userAuthorities cannot be null") @AT@ 1997 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[userAuthorities, "userAuthorities cannot be null"] @TO@ MethodInvocation@@Assert.notNull(userAuthorities,"userAuthorities cannot be null") @AT@ 2004 @LENGTH@ 58
---------INS SimpleName@@userAuthorities @TO@ SimpleName@@MethodName:notNull:[userAuthorities, "userAuthorities cannot be null"] @AT@ 2012 @LENGTH@ 15
---------INS StringLiteral@@"userAuthorities cannot be null" @TO@ SimpleName@@MethodName:notNull:[userAuthorities, "userAuthorities cannot be null"] @AT@ 2029 @LENGTH@ 32


INS MethodDeclaration@@public, Document, MethodName:getMappedObject, Document document,  @TO@ TypeDeclaration@@[public]PrefixingDelegatingAggregationOperationContext, [AggregationOperationContext] @AT@ 2197 @LENGTH@ 110
---INS Modifier@@public @TO@ MethodDeclaration@@public, Document, MethodName:getMappedObject, Document document,  @AT@ 2197 @LENGTH@ 6
---INS SimpleType@@Document @TO@ MethodDeclaration@@public, Document, MethodName:getMappedObject, Document document,  @AT@ 2204 @LENGTH@ 8
---INS SimpleName@@MethodName:getMappedObject @TO@ MethodDeclaration@@public, Document, MethodName:getMappedObject, Document document,  @AT@ 2213 @LENGTH@ 15
---INS SingleVariableDeclaration@@Document document @TO@ MethodDeclaration@@public, Document, MethodName:getMappedObject, Document document,  @AT@ 2229 @LENGTH@ 17
------INS SimpleType@@Document @TO@ SingleVariableDeclaration@@Document document @AT@ 2229 @LENGTH@ 8
------INS SimpleName@@document @TO@ SingleVariableDeclaration@@Document document @AT@ 2238 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:doPrefix(delegate.getMappedObject(document)) @TO@ MethodDeclaration@@public, Document, MethodName:getMappedObject, Document document,  @AT@ 2252 @LENGTH@ 52
------INS MethodInvocation@@doPrefix(delegate.getMappedObject(document)) @TO@ ReturnStatement@@MethodInvocation:doPrefix(delegate.getMappedObject(document)) @AT@ 2259 @LENGTH@ 44
---------INS SimpleName@@MethodName:doPrefix:[delegate.getMappedObject(document)] @TO@ MethodInvocation@@doPrefix(delegate.getMappedObject(document)) @AT@ 2259 @LENGTH@ 44
------------INS MethodInvocation@@delegate.getMappedObject(document) @TO@ SimpleName@@MethodName:doPrefix:[delegate.getMappedObject(document)] @AT@ 2268 @LENGTH@ 34
---------------INS SimpleName@@Name:delegate @TO@ MethodInvocation@@delegate.getMappedObject(document) @AT@ 2268 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getMappedObject:[document] @TO@ MethodInvocation@@delegate.getMappedObject(document) @AT@ 2277 @LENGTH@ 25
------------------INS SimpleName@@document @TO@ SimpleName@@MethodName:getMappedObject:[document] @AT@ 2293 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:FunctorUtils.validate(predicates) @TO@ MethodInvocation:validate(predicates) @AT@ 2249 @LENGTH@ 34
---UPD MethodInvocation@@FunctorUtils.validate(predicates) @TO@ validate(predicates) @AT@ 2249 @LENGTH@ 33
------DEL SimpleName@@Name:FunctorUtils @AT@ 2249 @LENGTH@ 12


UPD MethodDeclaration@@public, void, MethodName:convertWhenJwkSetStreamHasECJwkElementWithENCPublicKeyUseAttributeThenThrowJwkException, Exception,  @TO@ public, void, MethodName:convertWhenJwkSetStreamHasECJwkElementWithENCPublicKeyUseAttributeThenReturnEmptyJwkSet, Exception,  @AT@ 8657 @LENGTH@ 545
---UPD SimpleName@@MethodName:convertWhenJwkSetStreamHasECJwkElementWithENCPublicKeyUseAttributeThenThrowJwkException @TO@ MethodName:convertWhenJwkSetStreamHasECJwkElementWithENCPublicKeyUseAttributeThenReturnEmptyJwkSet @AT@ 8669 @LENGTH@ 87
---DEL ExpressionStatement@@MethodInvocation:this.thrown.expect(JwkException.class) @AT@ 8780 @LENGTH@ 39
------DEL MethodInvocation@@this.thrown.expect(JwkException.class) @AT@ 8780 @LENGTH@ 38
---------DEL FieldAccess@@this.thrown @AT@ 8780 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 8780 @LENGTH@ 4
------------DEL SimpleName@@thrown @AT@ 8785 @LENGTH@ 6
---------DEL SimpleName@@MethodName:expect:[JwkException.class] @AT@ 8792 @LENGTH@ 26
------------DEL TypeLiteral@@JwkException.class @AT@ 8799 @LENGTH@ 18
---UPD ExpressionStatement@@MethodInvocation:this.thrown.expectMessage("enc (use) is currently not supported.") @TO@ MethodInvocation:assertTrue("JWK Set NOT empty",jwkSet.isEmpty()) @AT@ 8822 @LENGTH@ 67
------UPD MethodInvocation@@this.thrown.expectMessage("enc (use) is currently not supported.") @TO@ assertTrue("JWK Set NOT empty",jwkSet.isEmpty()) @AT@ 8822 @LENGTH@ 66
---------DEL FieldAccess@@this.thrown @AT@ 8822 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 8822 @LENGTH@ 4
------------DEL SimpleName@@thrown @AT@ 8827 @LENGTH@ 6
---------UPD SimpleName@@MethodName:expectMessage:["enc (use) is currently not supported."] @TO@ MethodName:assertTrue:["JWK Set NOT empty", jwkSet.isEmpty()] @AT@ 8834 @LENGTH@ 54
------------UPD StringLiteral@@"enc (use) is currently not supported." @TO@ "JWK Set NOT empty" @AT@ 8848 @LENGTH@ 39
------------INS MethodInvocation@@jwkSet.isEmpty() @TO@ SimpleName@@MethodName:expectMessage:["enc (use) is currently not supported."] @AT@ 9119 @LENGTH@ 16
---------------INS SimpleName@@Name:jwkSet @TO@ MethodInvocation@@jwkSet.isEmpty() @AT@ 9119 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@jwkSet.isEmpty() @AT@ 9126 @LENGTH@ 9
---MOV ExpressionStatement@@MethodInvocation:this.thrown.expectMessage("enc (use) is currently not supported.") @TO@ MethodDeclaration@@public, void, MethodName:convertWhenJwkSetStreamHasECJwkElementWithENCPublicKeyUseAttributeThenThrowJwkException, Exception,  @AT@ 8822 @LENGTH@ 67
---INS VariableDeclarationStatement@@Set<JwkDefinition> jwkSet=this.converter.convert(this.asInputStream(jwkSetObject)); @TO@ MethodDeclaration@@public, void, MethodName:convertWhenJwkSetStreamHasECJwkElementWithENCPublicKeyUseAttributeThenThrowJwkException, Exception,  @AT@ 8999 @LENGTH@ 85
------INS ParameterizedType@@Set<JwkDefinition> @TO@ VariableDeclarationStatement@@Set<JwkDefinition> jwkSet=this.converter.convert(this.asInputStream(jwkSetObject)); @AT@ 8999 @LENGTH@ 18
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<JwkDefinition> @AT@ 8999 @LENGTH@ 3
---------INS SimpleType@@JwkDefinition @TO@ ParameterizedType@@Set<JwkDefinition> @AT@ 9003 @LENGTH@ 13
------INS VariableDeclarationFragment@@jwkSet=this.converter.convert(this.asInputStream(jwkSetObject)) @TO@ VariableDeclarationStatement@@Set<JwkDefinition> jwkSet=this.converter.convert(this.asInputStream(jwkSetObject)); @AT@ 9018 @LENGTH@ 65
---------INS SimpleName@@jwkSet @TO@ VariableDeclarationFragment@@jwkSet=this.converter.convert(this.asInputStream(jwkSetObject)) @AT@ 9018 @LENGTH@ 6
---------MOV MethodInvocation@@this.converter.convert(this.asInputStream(jwkSetObject)) @TO@ VariableDeclarationFragment@@jwkSet=this.converter.convert(this.asInputStream(jwkSetObject)) @AT@ 9142 @LENGTH@ 56
---DEL ExpressionStatement@@MethodInvocation:this.converter.convert(this.asInputStream(jwkSetObject)) @AT@ 9142 @LENGTH@ 57


UPD ExpressionStatement@@MethodInvocation:assertThat(meters,Matchers.hasSize(7)) @TO@ MethodInvocation:assertTrue(meters.size() >= EXPECTED_SPRING_BATCH_METRICS) @AT@ 2532 @LENGTH@ 40
---UPD MethodInvocation@@assertThat(meters,Matchers.hasSize(7)) @TO@ assertTrue(meters.size() >= EXPECTED_SPRING_BATCH_METRICS) @AT@ 2532 @LENGTH@ 39
------UPD SimpleName@@MethodName:assertThat:[meters, Matchers.hasSize(7)] @TO@ MethodName:assertTrue:[meters.size() >= EXPECTED_SPRING_BATCH_METRICS] @AT@ 2532 @LENGTH@ 39
---------DEL SimpleName@@meters @AT@ 2543 @LENGTH@ 6
---------DEL MethodInvocation@@Matchers.hasSize(7) @AT@ 2551 @LENGTH@ 19
---------INS InfixExpression@@meters.size() >= EXPECTED_SPRING_BATCH_METRICS @TO@ SimpleName@@MethodName:assertThat:[meters, Matchers.hasSize(7)] @AT@ 2575 @LENGTH@ 46
------------INS MethodInvocation@@meters.size() @TO@ InfixExpression@@meters.size() >= EXPECTED_SPRING_BATCH_METRICS @AT@ 2575 @LENGTH@ 13
---------------MOV SimpleName@@Name:Matchers @TO@ MethodInvocation@@meters.size() @AT@ 2551 @LENGTH@ 8
---------------MOV SimpleName@@Name:Matchers @TO@ MethodInvocation@@meters.size() @AT@ 2551 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:hasSize:[7] @TO@ MethodInvocation@@meters.size() @AT@ 2560 @LENGTH@ 10
------------------DEL NumberLiteral@@7 @AT@ 2568 @LENGTH@ 1
---------------MOV SimpleName@@MethodName:hasSize:[7] @TO@ MethodInvocation@@meters.size() @AT@ 2560 @LENGTH@ 10
------------------DEL NumberLiteral@@7 @AT@ 2568 @LENGTH@ 1
------------INS Operator@@>= @TO@ InfixExpression@@meters.size() >= EXPECTED_SPRING_BATCH_METRICS @AT@ 2588 @LENGTH@ 2
------------INS SimpleName@@EXPECTED_SPRING_BATCH_METRICS @TO@ InfixExpression@@meters.size() >= EXPECTED_SPRING_BATCH_METRICS @AT@ 2592 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:assertFalse("Should not use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @TO@ MethodInvocation:assertTrue("Should use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @AT@ 2153 @LENGTH@ 95
---UPD MethodInvocation@@assertFalse("Should not use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @TO@ assertTrue("Should use same threads",beforeThreadName.equalsIgnoreCase(afterThreadName)) @AT@ 2153 @LENGTH@ 94
------UPD SimpleName@@MethodName:assertFalse:["Should not use same threads", beforeThreadName.equalsIgnoreCase(afterThreadName)] @TO@ MethodName:assertTrue:["Should use same threads", beforeThreadName.equalsIgnoreCase(afterThreadName)] @AT@ 2153 @LENGTH@ 94
---------UPD StringLiteral@@"Should not use same threads" @TO@ "Should use same threads" @AT@ 2165 @LENGTH@ 29


UPD ReturnStatement@@MethodInvocation:configurationModClusterConfig(new ConfigurationModClusterConfig().advertiseSocket("modcluster").advertise(true).connector("default")) @TO@ MethodInvocation:proxy(new Proxy("modcluster").advertiseSocket("modcluster").advertise(true).listener("default")) @AT@ 1755 @LENGTH@ 303
---UPD MethodInvocation@@configurationModClusterConfig(new ConfigurationModClusterConfig().advertiseSocket("modcluster").advertise(true).connector("default")) @TO@ proxy(new Proxy("modcluster").advertiseSocket("modcluster").advertise(true).listener("default")) @AT@ 1762 @LENGTH@ 295
------UPD SimpleName@@MethodName:configurationModClusterConfig:[new ConfigurationModClusterConfig().advertiseSocket("modcluster").advertise(true).connector("default")] @TO@ MethodName:proxy:[new Proxy("modcluster").advertiseSocket("modcluster").advertise(true).listener("default")] @AT@ 1762 @LENGTH@ 295
---------UPD MethodInvocation@@new ConfigurationModClusterConfig().advertiseSocket("modcluster").advertise(true).connector("default") @TO@ new Proxy("modcluster").advertiseSocket("modcluster").advertise(true).listener("default") @AT@ 1792 @LENGTH@ 264
------------UPD ClassInstanceCreation@@ConfigurationModClusterConfig[] @TO@ Proxy["modcluster"] @AT@ 1792 @LENGTH@ 35
---------------UPD SimpleType@@ConfigurationModClusterConfig @TO@ Proxy @AT@ 1796 @LENGTH@ 29
---------------INS StringLiteral@@"modcluster" @TO@ ClassInstanceCreation@@ConfigurationModClusterConfig[] @AT@ 1991 @LENGTH@ 12
------------UPD SimpleName@@MethodName:connector:["default"] @TO@ MethodName:listener:["default"] @AT@ 2036 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Adding key [{}] even though it is not in the set of known llap-server keys") @TO@ MethodInvocation:LOG.warn("Adding key [{}] even though it is not in the set of known llap-server keys",key) @AT@ 6823 @LENGTH@ 87
---UPD MethodInvocation@@LOG.warn("Adding key [{}] even though it is not in the set of known llap-server keys") @TO@ LOG.warn("Adding key [{}] even though it is not in the set of known llap-server keys",key) @AT@ 6823 @LENGTH@ 86
------UPD SimpleName@@MethodName:warn:["Adding key [{}] even though it is not in the set of known llap-server keys"] @TO@ MethodName:warn:["Adding key [{}] even though it is not in the set of known llap-server keys", key] @AT@ 6827 @LENGTH@ 82
---------INS SimpleName@@key @TO@ SimpleName@@MethodName:warn:["Adding key [{}] even though it is not in the set of known llap-server keys"] @AT@ 6910 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertFalse("Exchange should NO longer be transacted",exchange.isTransacted()) @TO@ MethodInvocation:assertTrue("Exchange should be transacted",exchange.isTransacted()) @AT@ 3475 @LENGTH@ 80
---UPD MethodInvocation@@assertFalse("Exchange should NO longer be transacted",exchange.isTransacted()) @TO@ assertTrue("Exchange should be transacted",exchange.isTransacted()) @AT@ 3475 @LENGTH@ 79
------UPD SimpleName@@MethodName:assertFalse:["Exchange should NO longer be transacted", exchange.isTransacted()] @TO@ MethodName:assertTrue:["Exchange should be transacted", exchange.isTransacted()] @AT@ 3475 @LENGTH@ 79
---------UPD StringLiteral@@"Exchange should NO longer be transacted" @TO@ "Exchange should be transacted" @AT@ 3487 @LENGTH@ 41


DEL ExpressionStatement@@MethodInvocation:System.out.println(responseBody) @AT@ 1168 @LENGTH@ 33
---DEL MethodInvocation@@System.out.println(responseBody) @AT@ 1168 @LENGTH@ 32
------DEL QualifiedName@@Name:System.out @AT@ 1168 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:[responseBody] @AT@ 1179 @LENGTH@ 21
---------DEL SimpleName@@responseBody @AT@ 1187 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> template.onMessage(replyMessage)).isInstanceOf(AmqpRejectAndDontRequeueException.class).hasMessage("No correlation header") @TO@ MethodInvocation:assertThatThrownBy(() -> template.onMessage(replyMessage)).isInstanceOf(AmqpRejectAndDontRequeueException.class).hasMessage("No correlation header in reply") @AT@ 3288 @LENGTH@ 157
---UPD MethodInvocation@@assertThatThrownBy(() -> template.onMessage(replyMessage)).isInstanceOf(AmqpRejectAndDontRequeueException.class).hasMessage("No correlation header") @TO@ assertThatThrownBy(() -> template.onMessage(replyMessage)).isInstanceOf(AmqpRejectAndDontRequeueException.class).hasMessage("No correlation header in reply") @AT@ 3288 @LENGTH@ 156
------UPD SimpleName@@MethodName:hasMessage:["No correlation header"] @TO@ MethodName:hasMessage:["No correlation header in reply"] @AT@ 3409 @LENGTH@ 35
---------UPD StringLiteral@@"No correlation header" @TO@ "No correlation header in reply" @AT@ 3420 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:from("file:target/data/zip?initialDelay=0&delay=10&delete=true").marshal().zipDefalter().to("file:target/data/zip/out?fileName=${file:name}.zip").to("mock:result") @TO@ MethodInvocation:from("file:target/data/zip?initialDelay=0&delay=10&delete=true").marshal().zipDeflater().to("file:target/data/zip/out?fileName=${file:name}.zip").to("mock:result") @AT@ 2344 @LENGTH@ 227
---UPD MethodInvocation@@from("file:target/data/zip?initialDelay=0&delay=10&delete=true").marshal().zipDefalter().to("file:target/data/zip/out?fileName=${file:name}.zip").to("mock:result") @TO@ from("file:target/data/zip?initialDelay=0&delay=10&delete=true").marshal().zipDeflater().to("file:target/data/zip/out?fileName=${file:name}.zip").to("mock:result") @AT@ 2344 @LENGTH@ 226
------UPD MethodInvocation@@MethodName:zipDefalter:[] @TO@ MethodName:zipDeflater:[] @AT@ 2344 @LENGTH@ 109


UPD TypeDeclaration@@[public, static]TestGeodeSecurityManager, [org.apache.geode.security.SecurityManager] @TO@ [@SuppressWarnings("unused"), public, static]TestGeodeSecurityManager, [org.apache.geode.security.SecurityManager] @AT@ 4115 @LENGTH@ 1016
---INS SingleMemberAnnotation@@@SuppressWarnings("unused") @TO@ TypeDeclaration@@[public, static]TestGeodeSecurityManager, [org.apache.geode.security.SecurityManager] @AT@ 4116 @LENGTH@ 27


UPD TryStatement@@try {  cacheLock.writeLock().lock();  if (isTableCacheDirty.compareAndSet(true,false)) {    LOG.debug("Skipping table cache update; the table list we have is dirty.");    return;  }  Map<String,TableWrapper> newTableCache=new HashMap<>();  for (  Table tbl : tables) {    String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());    TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));    if (tblWrapper != null) {      tblWrapper.updateTableObj(tbl,this);    } else {      tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);    }    newTableCache.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);  }  tableCache.clear();  tableCache=newTableCache;}  finally {  cacheLock.writeLock().unlock();} @TO@ try {  if (isTableCacheDirty.compareAndSet(true,false)) {    LOG.debug("Skipping table cache update; the table list we have is dirty.");    return;  }  Map<String,TableWrapper> newCacheForDB=new TreeMap<>();  for (  Table tbl : tables) {    String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());    TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));    if (tblWrapper != null) {      tblWrapper.updateTableObj(tbl,this);    } else {      tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);    }    newCacheForDB.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);  }  cacheLock.writeLock().lock();  Iterator<Entry<String,TableWrapper>> entryIterator=tableCache.entrySet().iterator();  while (entryIterator.hasNext()) {    String key=entryIterator.next().getKey();    if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {      entryIterator.remove();    }  }  tableCache.putAll(newCacheForDB);}  finally {  cacheLock.writeLock().unlock();} @AT@ 55378 @LENGTH@ 899
---MOV ExpressionStatement@@MethodInvocation:cacheLock.writeLock().lock() @TO@ TryStatement@@try {  cacheLock.writeLock().lock();  if (isTableCacheDirty.compareAndSet(true,false)) {    LOG.debug("Skipping table cache update; the table list we have is dirty.");    return;  }  Map<String,TableWrapper> newTableCache=new HashMap<>();  for (  Table tbl : tables) {    String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());    TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));    if (tblWrapper != null) {      tblWrapper.updateTableObj(tbl,this);    } else {      tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);    }    newTableCache.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);  }  tableCache.clear();  tableCache=newTableCache;}  finally {  cacheLock.writeLock().unlock();} @AT@ 55390 @LENGTH@ 29
---UPD VariableDeclarationStatement@@Map<String,TableWrapper> newTableCache=new HashMap<>(); @TO@ Map<String,TableWrapper> newCacheForDB=new TreeMap<>(); @AT@ 55592 @LENGTH@ 58
------UPD VariableDeclarationFragment@@newTableCache=new HashMap<>() @TO@ newCacheForDB=new TreeMap<>() @AT@ 55618 @LENGTH@ 31
---------UPD SimpleName@@newTableCache @TO@ newCacheForDB @AT@ 55618 @LENGTH@ 13
---------UPD ClassInstanceCreation@@HashMap<>[] @TO@ TreeMap<>[] @AT@ 55634 @LENGTH@ 15
------------UPD ParameterizedType@@HashMap<> @TO@ TreeMap<> @AT@ 55638 @LENGTH@ 9
---------------UPD SimpleType@@HashMap @TO@ TreeMap @AT@ 55638 @LENGTH@ 7
---UPD EnhancedForStatement@@for (Table tbl : tables) {  String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());  TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));  if (tblWrapper != null) {    tblWrapper.updateTableObj(tbl,this);  } else {    tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);  }  newTableCache.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);} @TO@ for (Table tbl : tables) {  String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());  TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));  if (tblWrapper != null) {    tblWrapper.updateTableObj(tbl,this);  } else {    tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);  }  newCacheForDB.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);} @AT@ 55657 @LENGTH@ 500
------UPD ExpressionStatement@@MethodInvocation:newTableCache.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper) @TO@ MethodInvocation:newCacheForDB.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper) @AT@ 56067 @LENGTH@ 82
---------UPD MethodInvocation@@newTableCache.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper) @TO@ newCacheForDB.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper) @AT@ 56067 @LENGTH@ 81
------------UPD SimpleName@@Name:newTableCache @TO@ Name:newCacheForDB @AT@ 56067 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:tableCache.clear() @AT@ 56164 @LENGTH@ 19
---UPD ExpressionStatement@@Assignment:tableCache=newTableCache @TO@ MethodInvocation:tableCache.putAll(newCacheForDB) @AT@ 56190 @LENGTH@ 27
------DEL Assignment@@tableCache=newTableCache @AT@ 56190 @LENGTH@ 26
---------DEL SimpleName@@tableCache @AT@ 56190 @LENGTH@ 10
---------DEL Operator@@= @AT@ 56200 @LENGTH@ 1
---------DEL SimpleName@@newTableCache @AT@ 56203 @LENGTH@ 13
------INS MethodInvocation@@tableCache.putAll(newCacheForDB) @TO@ ExpressionStatement@@Assignment:tableCache=newTableCache @AT@ 56529 @LENGTH@ 32
---------INS SimpleName@@Name:tableCache @TO@ MethodInvocation@@tableCache.putAll(newCacheForDB) @AT@ 56529 @LENGTH@ 10
---------INS SimpleName@@MethodName:putAll:[newCacheForDB] @TO@ MethodInvocation@@tableCache.putAll(newCacheForDB) @AT@ 56540 @LENGTH@ 21
------------INS SimpleName@@newCacheForDB @TO@ SimpleName@@MethodName:putAll:[newCacheForDB] @AT@ 56547 @LENGTH@ 13
---INS VariableDeclarationStatement@@Iterator<Entry<String,TableWrapper>> entryIterator=tableCache.entrySet().iterator(); @TO@ TryStatement@@try {  cacheLock.writeLock().lock();  if (isTableCacheDirty.compareAndSet(true,false)) {    LOG.debug("Skipping table cache update; the table list we have is dirty.");    return;  }  Map<String,TableWrapper> newTableCache=new HashMap<>();  for (  Table tbl : tables) {    String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());    TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));    if (tblWrapper != null) {      tblWrapper.updateTableObj(tbl,this);    } else {      tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);    }    newTableCache.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);  }  tableCache.clear();  tableCache=newTableCache;}  finally {  cacheLock.writeLock().unlock();} @AT@ 56202 @LENGTH@ 87
------INS ParameterizedType@@Iterator<Entry<String,TableWrapper>> @TO@ VariableDeclarationStatement@@Iterator<Entry<String,TableWrapper>> entryIterator=tableCache.entrySet().iterator(); @AT@ 56202 @LENGTH@ 37
---------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<Entry<String,TableWrapper>> @AT@ 56202 @LENGTH@ 8
---------INS ParameterizedType@@Entry<String,TableWrapper> @TO@ ParameterizedType@@Iterator<Entry<String,TableWrapper>> @AT@ 56211 @LENGTH@ 27
------------INS SimpleType@@Entry @TO@ ParameterizedType@@Entry<String,TableWrapper> @AT@ 56211 @LENGTH@ 5
------------INS SimpleType@@String @TO@ ParameterizedType@@Entry<String,TableWrapper> @AT@ 56217 @LENGTH@ 6
------------INS SimpleType@@TableWrapper @TO@ ParameterizedType@@Entry<String,TableWrapper> @AT@ 56225 @LENGTH@ 12
------INS VariableDeclarationFragment@@entryIterator=tableCache.entrySet().iterator() @TO@ VariableDeclarationStatement@@Iterator<Entry<String,TableWrapper>> entryIterator=tableCache.entrySet().iterator(); @AT@ 56240 @LENGTH@ 48
---------INS SimpleName@@entryIterator @TO@ VariableDeclarationFragment@@entryIterator=tableCache.entrySet().iterator() @AT@ 56240 @LENGTH@ 13
---------INS MethodInvocation@@tableCache.entrySet().iterator() @TO@ VariableDeclarationFragment@@entryIterator=tableCache.entrySet().iterator() @AT@ 56256 @LENGTH@ 32
------------INS MethodInvocation@@MethodName:entrySet:[] @TO@ MethodInvocation@@tableCache.entrySet().iterator() @AT@ 56256 @LENGTH@ 21
------------INS SimpleName@@Name:tableCache @TO@ MethodInvocation@@tableCache.entrySet().iterator() @AT@ 56256 @LENGTH@ 10
------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@tableCache.entrySet().iterator() @AT@ 56278 @LENGTH@ 10
---INS WhileStatement@@while (entryIterator.hasNext()) {  String key=entryIterator.next().getKey();  if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {    entryIterator.remove();  }} @TO@ TryStatement@@try {  cacheLock.writeLock().lock();  if (isTableCacheDirty.compareAndSet(true,false)) {    LOG.debug("Skipping table cache update; the table list we have is dirty.");    return;  }  Map<String,TableWrapper> newTableCache=new HashMap<>();  for (  Table tbl : tables) {    String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());    TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));    if (tblWrapper != null) {      tblWrapper.updateTableObj(tbl,this);    } else {      tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);    }    newTableCache.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);  }  tableCache.clear();  tableCache=newTableCache;}  finally {  cacheLock.writeLock().unlock();} @AT@ 56296 @LENGTH@ 226
------INS MethodInvocation@@entryIterator.hasNext() @TO@ WhileStatement@@while (entryIterator.hasNext()) {  String key=entryIterator.next().getKey();  if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {    entryIterator.remove();  }} @AT@ 56303 @LENGTH@ 23
---------INS SimpleName@@Name:entryIterator @TO@ MethodInvocation@@entryIterator.hasNext() @AT@ 56303 @LENGTH@ 13
---------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@entryIterator.hasNext() @AT@ 56317 @LENGTH@ 9
------INS Block@@WhileBody:{  String key=entryIterator.next().getKey();  if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {    entryIterator.remove();  }} @TO@ WhileStatement@@while (entryIterator.hasNext()) {  String key=entryIterator.next().getKey();  if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {    entryIterator.remove();  }} @AT@ 56328 @LENGTH@ 194
---------INS VariableDeclarationStatement@@String key=entryIterator.next().getKey(); @TO@ Block@@WhileBody:{  String key=entryIterator.next().getKey();  if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {    entryIterator.remove();  }} @AT@ 56338 @LENGTH@ 43
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key=entryIterator.next().getKey(); @AT@ 56338 @LENGTH@ 6
------------INS VariableDeclarationFragment@@key=entryIterator.next().getKey() @TO@ VariableDeclarationStatement@@String key=entryIterator.next().getKey(); @AT@ 56345 @LENGTH@ 35
---------------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=entryIterator.next().getKey() @AT@ 56345 @LENGTH@ 3
---------------INS MethodInvocation@@entryIterator.next().getKey() @TO@ VariableDeclarationFragment@@key=entryIterator.next().getKey() @AT@ 56351 @LENGTH@ 29
------------------INS MethodInvocation@@MethodName:next:[] @TO@ MethodInvocation@@entryIterator.next().getKey() @AT@ 56351 @LENGTH@ 20
------------------INS SimpleName@@Name:entryIterator @TO@ MethodInvocation@@entryIterator.next().getKey() @AT@ 56351 @LENGTH@ 13
------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entryIterator.next().getKey() @AT@ 56372 @LENGTH@ 8
---------INS IfStatement@@if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {  entryIterator.remove();} @TO@ Block@@WhileBody:{  String key=entryIterator.next().getKey();  if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {    entryIterator.remove();  }} @AT@ 56390 @LENGTH@ 124
------------INS MethodInvocation@@key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName)) @TO@ IfStatement@@if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {  entryIterator.remove();} @AT@ 56394 @LENGTH@ 73
---------------INS SimpleName@@Name:key @TO@ MethodInvocation@@key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName)) @AT@ 56394 @LENGTH@ 3
---------------INS SimpleName@@MethodName:startsWith:[CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName)] @TO@ MethodInvocation@@key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName)) @AT@ 56398 @LENGTH@ 69
------------------INS MethodInvocation@@CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName) @TO@ SimpleName@@MethodName:startsWith:[CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName)] @AT@ 56409 @LENGTH@ 57
---------------------INS SimpleName@@Name:CacheUtils @TO@ MethodInvocation@@CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName) @AT@ 56409 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:buildDbKeyWithDelimiterSuffix:[catName, dbName] @TO@ MethodInvocation@@CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName) @AT@ 56420 @LENGTH@ 46
------------------------INS SimpleName@@catName @TO@ SimpleName@@MethodName:buildDbKeyWithDelimiterSuffix:[catName, dbName] @AT@ 56450 @LENGTH@ 7
------------------------INS SimpleName@@dbName @TO@ SimpleName@@MethodName:buildDbKeyWithDelimiterSuffix:[catName, dbName] @AT@ 56459 @LENGTH@ 6
------------INS Block@@ThenBody:{  entryIterator.remove();} @TO@ IfStatement@@if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {  entryIterator.remove();} @AT@ 56469 @LENGTH@ 45
---------------INS ExpressionStatement@@MethodInvocation:entryIterator.remove() @TO@ Block@@ThenBody:{  entryIterator.remove();} @AT@ 56481 @LENGTH@ 23
------------------MOV MethodInvocation@@tableCache.clear() @TO@ ExpressionStatement@@MethodInvocation:entryIterator.remove() @AT@ 56164 @LENGTH@ 18
---------------------UPD SimpleName@@Name:tableCache @TO@ Name:entryIterator @AT@ 56164 @LENGTH@ 10
---------------------UPD SimpleName@@MethodName:clear:[] @TO@ MethodName:remove:[] @AT@ 56175 @LENGTH@ 7


MOV VariableDeclarationStatement@@final CamelContext context=super.createCamelContext(); @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 4939 @LENGTH@ 56


DEL MethodDeclaration@@public, static, PulsarConsumer, MethodName:create, final PulsarEndpoint pulsarEndpoint, final Processor processor,  @AT@ 1974 @LENGTH@ 169
---DEL Modifier@@public @AT@ 1974 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1981 @LENGTH@ 6
---DEL SimpleType@@PulsarConsumer @AT@ 1988 @LENGTH@ 14
---DEL SimpleName@@MethodName:create @AT@ 2003 @LENGTH@ 6
---DEL SingleVariableDeclaration@@final PulsarEndpoint pulsarEndpoint @AT@ 2010 @LENGTH@ 35
------DEL Modifier@@final @AT@ 2010 @LENGTH@ 5
------DEL SimpleType@@PulsarEndpoint @AT@ 2016 @LENGTH@ 14
------DEL SimpleName@@pulsarEndpoint @AT@ 2031 @LENGTH@ 14
---DEL SingleVariableDeclaration@@final Processor processor @AT@ 2047 @LENGTH@ 25
------DEL Modifier@@final @AT@ 2047 @LENGTH@ 5
------DEL SimpleType@@Processor @AT@ 2053 @LENGTH@ 9
------DEL SimpleName@@processor @AT@ 2063 @LENGTH@ 9
---DEL ReturnStatement@@ClassInstanceCreation:new PulsarConsumer(pulsarEndpoint,processor) @AT@ 2084 @LENGTH@ 53
------DEL ClassInstanceCreation@@PulsarConsumer[pulsarEndpoint, processor] @AT@ 2091 @LENGTH@ 45
---------DEL New@@new @AT@ 2091 @LENGTH@ 3
---------DEL SimpleType@@PulsarConsumer @AT@ 2095 @LENGTH@ 14
---------DEL SimpleName@@pulsarEndpoint @AT@ 2110 @LENGTH@ 14
---------DEL SimpleName@@processor @AT@ 2126 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:hasRole("ROLE_ANONYMOUS") @TO@ MethodInvocation:hasRole("ANONYMOUS") @AT@ 12007 @LENGTH@ 33
---UPD MethodInvocation@@hasRole("ROLE_ANONYMOUS") @TO@ hasRole("ANONYMOUS") @AT@ 12014 @LENGTH@ 25
------UPD SimpleName@@MethodName:hasRole:["ROLE_ANONYMOUS"] @TO@ MethodName:hasRole:["ANONYMOUS"] @AT@ 12014 @LENGTH@ 25
---------UPD StringLiteral@@"ROLE_ANONYMOUS" @TO@ "ANONYMOUS" @AT@ 12022 @LENGTH@ 16


UPD VariableDeclarationStatement@@EC2Endpoint endpoint=(EC2Endpoint)component.createEndpoint("aws-s3://testDomain?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1"); @TO@ EC2Endpoint endpoint=(EC2Endpoint)component.createEndpoint("aws-ec2://testDomain?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1"); @AT@ 4398 @LENGTH@ 134
---UPD VariableDeclarationFragment@@endpoint=(EC2Endpoint)component.createEndpoint("aws-s3://testDomain?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @TO@ endpoint=(EC2Endpoint)component.createEndpoint("aws-ec2://testDomain?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @AT@ 4410 @LENGTH@ 121
------UPD CastExpression@@(EC2Endpoint)component.createEndpoint("aws-s3://testDomain?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @TO@ (EC2Endpoint)component.createEndpoint("aws-ec2://testDomain?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @AT@ 4421 @LENGTH@ 110
---------UPD MethodInvocation@@component.createEndpoint("aws-s3://testDomain?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @TO@ component.createEndpoint("aws-ec2://testDomain?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1") @AT@ 4434 @LENGTH@ 97
------------UPD SimpleName@@MethodName:createEndpoint:["aws-s3://testDomain?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1"] @TO@ MethodName:createEndpoint:["aws-ec2://testDomain?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1"] @AT@ 4444 @LENGTH@ 87
---------------UPD StringLiteral@@"aws-s3://testDomain?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1" @TO@ "aws-ec2://testDomain?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1" @AT@ 4459 @LENGTH@ 71


UPD ReturnStatement@@MethodInvocation:Flux.from(flux).collectList().flatMapMany(list -> Flux.from(remove(operations.getByIdInQuery(list),entityClass,collectionName)).flatMap(deleteResult -> Flux.fromIterable(list))) @TO@ MethodInvocation:Flux.from(flux).collectList().filter(it -> !it.isEmpty()).flatMapMany(list -> Flux.from(remove(operations.getByIdInQuery(list),entityClass,collectionName)).flatMap(deleteResult -> Flux.fromIterable(list))) @AT@ 85954 @LENGTH@ 199
---UPD MethodInvocation@@Flux.from(flux).collectList().flatMapMany(list -> Flux.from(remove(operations.getByIdInQuery(list),entityClass,collectionName)).flatMap(deleteResult -> Flux.fromIterable(list))) @TO@ Flux.from(flux).collectList().filter(it -> !it.isEmpty()).flatMapMany(list -> Flux.from(remove(operations.getByIdInQuery(list),entityClass,collectionName)).flatMap(deleteResult -> Flux.fromIterable(list))) @AT@ 85961 @LENGTH@ 191
------INS MethodInvocation@@MethodName:filter:[it -> !it.isEmpty()] @TO@ MethodInvocation@@Flux.from(flux).collectList().flatMapMany(list -> Flux.from(remove(operations.getByIdInQuery(list),entityClass,collectionName)).flatMap(deleteResult -> Flux.fromIterable(list))) @AT@ 85962 @LENGTH@ 57
---------INS LambdaExpression@@it -> !it.isEmpty() @TO@ MethodInvocation@@MethodName:filter:[it -> !it.isEmpty()] @AT@ 85999 @LENGTH@ 19
------------INS VariableDeclarationFragment@@it @TO@ LambdaExpression@@it -> !it.isEmpty() @AT@ 85999 @LENGTH@ 2
---------------INS SimpleName@@it @TO@ VariableDeclarationFragment@@it @AT@ 85999 @LENGTH@ 2
------------INS PrefixExpression@@!it.isEmpty() @TO@ LambdaExpression@@it -> !it.isEmpty() @AT@ 86005 @LENGTH@ 13
---------------INS Operator@@! @TO@ PrefixExpression@@!it.isEmpty() @AT@ 86005 @LENGTH@ 1
---------------INS MethodInvocation@@it.isEmpty() @TO@ PrefixExpression@@!it.isEmpty() @AT@ 86006 @LENGTH@ 12
------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.isEmpty() @AT@ 86006 @LENGTH@ 2
------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@it.isEmpty() @AT@ 86009 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:requestWhenIntrospectionConfiguredThenSessionIsNotCreated, Exception,  @TO@ TypeDeclaration@@[public]OAuth2ResourceServerConfigurerTests,  @AT@ 22599 @LENGTH@ 502
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:requestWhenIntrospectionConfiguredThenSessionIsNotCreated, Exception,  @AT@ 22599 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:requestWhenIntrospectionConfiguredThenSessionIsNotCreated, Exception,  @AT@ 22606 @LENGTH@ 4
---INS SimpleName@@MethodName:requestWhenIntrospectionConfiguredThenSessionIsNotCreated @TO@ MethodDeclaration@@public, void, MethodName:requestWhenIntrospectionConfiguredThenSessionIsNotCreated, Exception,  @AT@ 22611 @LENGTH@ 57
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:requestWhenIntrospectionConfiguredThenSessionIsNotCreated, Exception,  @AT@ 22681 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:this.spring.register(RestOperationsConfig.class,OpaqueTokenConfig.class,BasicController.class).autowire() @TO@ MethodDeclaration@@public, void, MethodName:requestWhenIntrospectionConfiguredThenSessionIsNotCreated, Exception,  @AT@ 22696 @LENGTH@ 108
------INS MethodInvocation@@this.spring.register(RestOperationsConfig.class,OpaqueTokenConfig.class,BasicController.class).autowire() @TO@ ExpressionStatement@@MethodInvocation:this.spring.register(RestOperationsConfig.class,OpaqueTokenConfig.class,BasicController.class).autowire() @AT@ 22696 @LENGTH@ 107
---------INS MethodInvocation@@MethodName:register:[RestOperationsConfig.class, OpaqueTokenConfig.class, BasicController.class] @TO@ MethodInvocation@@this.spring.register(RestOperationsConfig.class,OpaqueTokenConfig.class,BasicController.class).autowire() @AT@ 22696 @LENGTH@ 96
------------INS TypeLiteral@@RestOperationsConfig.class @TO@ MethodInvocation@@MethodName:register:[RestOperationsConfig.class, OpaqueTokenConfig.class, BasicController.class] @AT@ 22717 @LENGTH@ 26
------------INS TypeLiteral@@OpaqueTokenConfig.class @TO@ MethodInvocation@@MethodName:register:[RestOperationsConfig.class, OpaqueTokenConfig.class, BasicController.class] @AT@ 22745 @LENGTH@ 23
------------INS TypeLiteral@@BasicController.class @TO@ MethodInvocation@@MethodName:register:[RestOperationsConfig.class, OpaqueTokenConfig.class, BasicController.class] @AT@ 22770 @LENGTH@ 21
---------INS FieldAccess@@this.spring @TO@ MethodInvocation@@this.spring.register(RestOperationsConfig.class,OpaqueTokenConfig.class,BasicController.class).autowire() @AT@ 22696 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.spring @AT@ 22696 @LENGTH@ 4
------------INS SimpleName@@spring @TO@ FieldAccess@@this.spring @AT@ 22701 @LENGTH@ 6
---------INS SimpleName@@MethodName:autowire:[] @TO@ MethodInvocation@@this.spring.register(RestOperationsConfig.class,OpaqueTokenConfig.class,BasicController.class).autowire() @AT@ 22793 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:mockRestOperations(json("Active")) @TO@ MethodDeclaration@@public, void, MethodName:requestWhenIntrospectionConfiguredThenSessionIsNotCreated, Exception,  @AT@ 22807 @LENGTH@ 35
------INS MethodInvocation@@mockRestOperations(json("Active")) @TO@ ExpressionStatement@@MethodInvocation:mockRestOperations(json("Active")) @AT@ 22807 @LENGTH@ 34
---------INS SimpleName@@MethodName:mockRestOperations:[json("Active")] @TO@ MethodInvocation@@mockRestOperations(json("Active")) @AT@ 22807 @LENGTH@ 34
------------INS MethodInvocation@@json("Active") @TO@ SimpleName@@MethodName:mockRestOperations:[json("Active")] @AT@ 22826 @LENGTH@ 14
---------------INS SimpleName@@MethodName:json:["Active"] @TO@ MethodInvocation@@json("Active") @AT@ 22826 @LENGTH@ 14
------------------INS StringLiteral@@"Active" @TO@ SimpleName@@MethodName:json:["Active"] @AT@ 22831 @LENGTH@ 8
---------------INS SimpleName@@MethodName:json:["Active"] @TO@ MethodInvocation@@json("Active") @AT@ 22826 @LENGTH@ 14
------------------INS StringLiteral@@"Active" @TO@ SimpleName@@MethodName:json:["Active"] @AT@ 22831 @LENGTH@ 8
---INS VariableDeclarationStatement@@MvcResult result=this.mvc.perform(get("/authenticated").with(bearerToken("token"))).andExpect(status().isOk()).andExpect(content().string("test-subject")).andReturn(); @TO@ MethodDeclaration@@public, void, MethodName:requestWhenIntrospectionConfiguredThenSessionIsNotCreated, Exception,  @AT@ 22846 @LENGTH@ 189
------INS SimpleType@@MvcResult @TO@ VariableDeclarationStatement@@MvcResult result=this.mvc.perform(get("/authenticated").with(bearerToken("token"))).andExpect(status().isOk()).andExpect(content().string("test-subject")).andReturn(); @AT@ 22846 @LENGTH@ 9
------INS VariableDeclarationFragment@@result=this.mvc.perform(get("/authenticated").with(bearerToken("token"))).andExpect(status().isOk()).andExpect(content().string("test-subject")).andReturn() @TO@ VariableDeclarationStatement@@MvcResult result=this.mvc.perform(get("/authenticated").with(bearerToken("token"))).andExpect(status().isOk()).andExpect(content().string("test-subject")).andReturn(); @AT@ 22856 @LENGTH@ 178
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=this.mvc.perform(get("/authenticated").with(bearerToken("token"))).andExpect(status().isOk()).andExpect(content().string("test-subject")).andReturn() @AT@ 22856 @LENGTH@ 6
---------INS MethodInvocation@@this.mvc.perform(get("/authenticated").with(bearerToken("token"))).andExpect(status().isOk()).andExpect(content().string("test-subject")).andReturn() @TO@ VariableDeclarationFragment@@result=this.mvc.perform(get("/authenticated").with(bearerToken("token"))).andExpect(status().isOk()).andExpect(content().string("test-subject")).andReturn() @AT@ 22865 @LENGTH@ 169
------------INS MethodInvocation@@MethodName:andExpect:[content().string("test-subject")] @TO@ MethodInvocation@@this.mvc.perform(get("/authenticated").with(bearerToken("token"))).andExpect(status().isOk()).andExpect(content().string("test-subject")).andReturn() @AT@ 22865 @LENGTH@ 152
---------------INS MethodInvocation@@content().string("test-subject") @TO@ MethodInvocation@@MethodName:andExpect:[content().string("test-subject")] @AT@ 22984 @LENGTH@ 32
------------------INS MethodInvocation@@MethodName:content:[] @TO@ MethodInvocation@@content().string("test-subject") @AT@ 22984 @LENGTH@ 9
------------------INS SimpleName@@MethodName:string:["test-subject"] @TO@ MethodInvocation@@content().string("test-subject") @AT@ 22994 @LENGTH@ 22
---------------------INS StringLiteral@@"test-subject" @TO@ SimpleName@@MethodName:string:["test-subject"] @AT@ 23001 @LENGTH@ 14
------------INS MethodInvocation@@MethodName:andExpect:[status().isOk()] @TO@ MethodInvocation@@this.mvc.perform(get("/authenticated").with(bearerToken("token"))).andExpect(status().isOk()).andExpect(content().string("test-subject")).andReturn() @AT@ 22865 @LENGTH@ 103
---------------INS MethodInvocation@@status().isOk() @TO@ MethodInvocation@@MethodName:andExpect:[status().isOk()] @AT@ 22952 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:status:[] @TO@ MethodInvocation@@status().isOk() @AT@ 22952 @LENGTH@ 8
------------------INS SimpleName@@MethodName:isOk:[] @TO@ MethodInvocation@@status().isOk() @AT@ 22961 @LENGTH@ 6
------------INS MethodInvocation@@MethodName:perform:[get("/authenticated").with(bearerToken("token"))] @TO@ MethodInvocation@@this.mvc.perform(get("/authenticated").with(bearerToken("token"))).andExpect(status().isOk()).andExpect(content().string("test-subject")).andReturn() @AT@ 22865 @LENGTH@ 71
---------------INS MethodInvocation@@get("/authenticated").with(bearerToken("token")) @TO@ MethodInvocation@@MethodName:perform:[get("/authenticated").with(bearerToken("token"))] @AT@ 22882 @LENGTH@ 53
------------------INS MethodInvocation@@MethodName:get:["/authenticated"] @TO@ MethodInvocation@@get("/authenticated").with(bearerToken("token")) @AT@ 22882 @LENGTH@ 21
---------------------INS StringLiteral@@"/authenticated" @TO@ MethodInvocation@@MethodName:get:["/authenticated"] @AT@ 22886 @LENGTH@ 16
------------------INS SimpleName@@MethodName:with:[bearerToken("token")] @TO@ MethodInvocation@@get("/authenticated").with(bearerToken("token")) @AT@ 22909 @LENGTH@ 26
---------------------INS MethodInvocation@@bearerToken("token") @TO@ SimpleName@@MethodName:with:[bearerToken("token")] @AT@ 22914 @LENGTH@ 20
------------------------INS SimpleName@@MethodName:bearerToken:["token"] @TO@ MethodInvocation@@bearerToken("token") @AT@ 22914 @LENGTH@ 20
---------------------------INS StringLiteral@@"token" @TO@ SimpleName@@MethodName:bearerToken:["token"] @AT@ 22926 @LENGTH@ 7
------------INS FieldAccess@@this.mvc @TO@ MethodInvocation@@this.mvc.perform(get("/authenticated").with(bearerToken("token"))).andExpect(status().isOk()).andExpect(content().string("test-subject")).andReturn() @AT@ 22865 @LENGTH@ 8
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.mvc @AT@ 22865 @LENGTH@ 4
---------------INS SimpleName@@mvc @TO@ FieldAccess@@this.mvc @AT@ 22870 @LENGTH@ 3
------------INS SimpleName@@MethodName:andReturn:[] @TO@ MethodInvocation@@this.mvc.perform(get("/authenticated").with(bearerToken("token"))).andExpect(status().isOk()).andExpect(content().string("test-subject")).andReturn() @AT@ 23023 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getRequest().getSession(false)).isNull() @TO@ MethodDeclaration@@public, void, MethodName:requestWhenIntrospectionConfiguredThenSessionIsNotCreated, Exception,  @AT@ 23039 @LENGTH@ 59
------INS MethodInvocation@@assertThat(result.getRequest().getSession(false)).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getRequest().getSession(false)).isNull() @AT@ 23039 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:assertThat:[result.getRequest().getSession(false)] @TO@ MethodInvocation@@assertThat(result.getRequest().getSession(false)).isNull() @AT@ 23039 @LENGTH@ 49
------------INS MethodInvocation@@result.getRequest().getSession(false) @TO@ MethodInvocation@@MethodName:assertThat:[result.getRequest().getSession(false)] @AT@ 23050 @LENGTH@ 37
---------------INS MethodInvocation@@MethodName:getRequest:[] @TO@ MethodInvocation@@result.getRequest().getSession(false) @AT@ 23050 @LENGTH@ 19
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getRequest().getSession(false) @AT@ 23050 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getSession:[false] @TO@ MethodInvocation@@result.getRequest().getSession(false) @AT@ 23070 @LENGTH@ 17
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getSession:[false] @AT@ 23081 @LENGTH@ 5
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(result.getRequest().getSession(false)).isNull() @AT@ 23089 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(annotationMetadata,"BeanDefinitionRegistry must not be null!") @TO@ MethodInvocation:Assert.notNull(registry,"BeanDefinitionRegistry must not be null!") @AT@ 2768 @LENGTH@ 79
---UPD MethodInvocation@@Assert.notNull(annotationMetadata,"BeanDefinitionRegistry must not be null!") @TO@ Assert.notNull(registry,"BeanDefinitionRegistry must not be null!") @AT@ 2768 @LENGTH@ 78
------UPD SimpleName@@MethodName:notNull:[annotationMetadata, "BeanDefinitionRegistry must not be null!"] @TO@ MethodName:notNull:[registry, "BeanDefinitionRegistry must not be null!"] @AT@ 2775 @LENGTH@ 71
---------UPD SimpleName@@annotationMetadata @TO@ registry @AT@ 2783 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:getRegistry().put("hb",hb) @TO@ MethodInvocation:getRegistry().bind("hb",hb) @AT@ 1895 @LENGTH@ 28
---UPD MethodInvocation@@getRegistry().put("hb",hb) @TO@ getRegistry().bind("hb",hb) @AT@ 1895 @LENGTH@ 27
------UPD SimpleName@@MethodName:put:["hb", hb] @TO@ MethodName:bind:["hb", hb] @AT@ 1909 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:resourceRegistration.registerAdditionalRuntimePackages(RuntimePackageDependency.optional("org.hibernate.search.orm"),RuntimePackageDependency.required("org.hibernate")) @TO@ MethodInvocation:resourceRegistration.registerAdditionalRuntimePackages(RuntimePackageDependency.optional("org.hibernate.search.orm"),RuntimePackageDependency.required("org.hibernate"),RuntimePackageDependency.optional("org.hibernate.envers")) @AT@ 5295 @LENGTH@ 252
---UPD MethodInvocation@@resourceRegistration.registerAdditionalRuntimePackages(RuntimePackageDependency.optional("org.hibernate.search.orm"),RuntimePackageDependency.required("org.hibernate")) @TO@ resourceRegistration.registerAdditionalRuntimePackages(RuntimePackageDependency.optional("org.hibernate.search.orm"),RuntimePackageDependency.required("org.hibernate"),RuntimePackageDependency.optional("org.hibernate.envers")) @AT@ 5295 @LENGTH@ 251
------UPD SimpleName@@MethodName:registerAdditionalRuntimePackages:[RuntimePackageDependency.optional("org.hibernate.search.orm"), RuntimePackageDependency.required("org.hibernate")] @TO@ MethodName:registerAdditionalRuntimePackages:[RuntimePackageDependency.optional("org.hibernate.search.orm"), RuntimePackageDependency.required("org.hibernate"), RuntimePackageDependency.optional("org.hibernate.envers")] @AT@ 5316 @LENGTH@ 230
---------INS MethodInvocation@@RuntimePackageDependency.optional("org.hibernate.envers") @TO@ SimpleName@@MethodName:registerAdditionalRuntimePackages:[RuntimePackageDependency.optional("org.hibernate.search.orm"), RuntimePackageDependency.required("org.hibernate")] @AT@ 5616 @LENGTH@ 57
------------INS SimpleName@@Name:RuntimePackageDependency @TO@ MethodInvocation@@RuntimePackageDependency.optional("org.hibernate.envers") @AT@ 5616 @LENGTH@ 24
------------INS SimpleName@@MethodName:optional:["org.hibernate.envers"] @TO@ MethodInvocation@@RuntimePackageDependency.optional("org.hibernate.envers") @AT@ 5641 @LENGTH@ 32
---------------INS StringLiteral@@"org.hibernate.envers" @TO@ SimpleName@@MethodName:optional:["org.hibernate.envers"] @AT@ 5650 @LENGTH@ 22


INS MethodDeclaration@@private, voidMethodName:GrapeConstants,  @TO@ TypeDeclaration@@[public]GrapeConstants,  @AT@ 965 @LENGTH@ 34
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:GrapeConstants,  @AT@ 965 @LENGTH@ 7
---INS SimpleName@@MethodName:GrapeConstants @TO@ MethodDeclaration@@private, voidMethodName:GrapeConstants,  @AT@ 973 @LENGTH@ 14


INS MethodDeclaration@@public, PasswordEncoder, MethodName:passwordEncoder,  @TO@ TypeDeclaration@@[@Configuration, @EnableWebSecurity, static]WebSecurityConfig, WebSecurityConfigurerAdapter @AT@ 6010 @LENGTH@ 91
---INS Modifier@@public @TO@ MethodDeclaration@@public, PasswordEncoder, MethodName:passwordEncoder,  @AT@ 6010 @LENGTH@ 6
---INS SimpleType@@PasswordEncoder @TO@ MethodDeclaration@@public, PasswordEncoder, MethodName:passwordEncoder,  @AT@ 6017 @LENGTH@ 15
---INS SimpleName@@MethodName:passwordEncoder @TO@ MethodDeclaration@@public, PasswordEncoder, MethodName:passwordEncoder,  @AT@ 6033 @LENGTH@ 15
---INS ReturnStatement@@MethodInvocation:NoOpPasswordEncoder.getInstance() @TO@ MethodDeclaration@@public, PasswordEncoder, MethodName:passwordEncoder,  @AT@ 6056 @LENGTH@ 41
------INS MethodInvocation@@NoOpPasswordEncoder.getInstance() @TO@ ReturnStatement@@MethodInvocation:NoOpPasswordEncoder.getInstance() @AT@ 6063 @LENGTH@ 33
---------INS SimpleName@@Name:NoOpPasswordEncoder @TO@ MethodInvocation@@NoOpPasswordEncoder.getInstance() @AT@ 6063 @LENGTH@ 19
---------INS SimpleName@@MethodName:getInstance:[] @TO@ MethodInvocation@@NoOpPasswordEncoder.getInstance() @AT@ 6083 @LENGTH@ 13


DEL ExpressionStatement@@MethodInvocation:camelContext.getLifecycleStrategies().clear() @AT@ 2016 @LENGTH@ 46
---DEL MethodInvocation@@camelContext.getLifecycleStrategies().clear() @AT@ 2016 @LENGTH@ 45
------DEL MethodInvocation@@MethodName:getLifecycleStrategies:[] @AT@ 2016 @LENGTH@ 37
------DEL SimpleName@@Name:camelContext @AT@ 2016 @LENGTH@ 12
------DEL SimpleName@@MethodName:clear:[] @AT@ 2054 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:resolver.resolveRedirect("/OZSLZ/foo",client) @TO@ MethodInvocation:resolver.resolveRedirect("https://2anywhere.com/foo",client) @AT@ 5659 @LENGTH@ 47
---UPD MethodInvocation@@resolver.resolveRedirect("/OZSLZ/foo",client) @TO@ resolver.resolveRedirect("https://2anywhere.com/foo",client) @AT@ 5659 @LENGTH@ 46
------UPD SimpleName@@MethodName:resolveRedirect:["/OZSLZ/foo", client] @TO@ MethodName:resolveRedirect:["https://2anywhere.com/foo", client] @AT@ 5668 @LENGTH@ 37
---------UPD StringLiteral@@"/OZSLZ/foo" @TO@ "https://2anywhere.com/foo" @AT@ 5684 @LENGTH@ 12


UPD TypeDeclaration@@[public]GrapeConstants,  @TO@ [public, final]GrapeConstants,  @AT@ 847 @LENGTH@ 101
---INS Modifier@@final @TO@ TypeDeclaration@@[public]GrapeConstants,  @AT@ 854 @LENGTH@ 5


DEL MethodDeclaration@@public, void, MethodName:testAsyncSedaBlockingWhenFull, Exception,  @AT@ 3696 @LENGTH@ 486
---DEL Modifier@@public @AT@ 3696 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3703 @LENGTH@ 4
---DEL SimpleName@@MethodName:testAsyncSedaBlockingWhenFull @AT@ 3708 @LENGTH@ 29
---DEL SimpleType@@Exception @AT@ 3747 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:getMockEndpoint(MOCK_URI).setExpectedMessageCount(QUEUE_SIZE + 1) @AT@ 3767 @LENGTH@ 66
------DEL MethodInvocation@@getMockEndpoint(MOCK_URI).setExpectedMessageCount(QUEUE_SIZE + 1) @AT@ 3767 @LENGTH@ 65
---------DEL MethodInvocation@@MethodName:getMockEndpoint:[MOCK_URI] @AT@ 3767 @LENGTH@ 25
------------DEL SimpleName@@MOCK_URI @AT@ 3783 @LENGTH@ 8
---------DEL SimpleName@@MethodName:setExpectedMessageCount:[QUEUE_SIZE + 1] @AT@ 3793 @LENGTH@ 39
------------DEL InfixExpression@@QUEUE_SIZE + 1 @AT@ 3817 @LENGTH@ 14
---------------DEL SimpleName@@QUEUE_SIZE @AT@ 3817 @LENGTH@ 10
---------------DEL Operator@@+ @AT@ 3827 @LENGTH@ 1
---------------DEL NumberLiteral@@1 @AT@ 3830 @LENGTH@ 1
---DEL ExpressionStatement@@MethodInvocation:getMockEndpoint(MOCK_URI).setResultWaitTime(DELAY_LONG * 3) @AT@ 3842 @LENGTH@ 60
------DEL MethodInvocation@@getMockEndpoint(MOCK_URI).setResultWaitTime(DELAY_LONG * 3) @AT@ 3842 @LENGTH@ 59
---------DEL MethodInvocation@@MethodName:getMockEndpoint:[MOCK_URI] @AT@ 3842 @LENGTH@ 25
------------DEL SimpleName@@MOCK_URI @AT@ 3858 @LENGTH@ 8
---------DEL SimpleName@@MethodName:setResultWaitTime:[DELAY_LONG * 3] @AT@ 3868 @LENGTH@ 33
------------DEL InfixExpression@@DELAY_LONG * 3 @AT@ 3886 @LENGTH@ 14
---------------DEL SimpleName@@DELAY_LONG @AT@ 3886 @LENGTH@ 10
---------------DEL Operator@@* @AT@ 3896 @LENGTH@ 1
---------------DEL NumberLiteral@@3 @AT@ 3899 @LENGTH@ 1
---DEL VariableDeclarationStatement@@SedaEndpoint seda=context.getEndpoint(BLOCK_WHEN_FULL_URI,SedaEndpoint.class); @AT@ 3912 @LENGTH@ 81
------DEL SimpleType@@SedaEndpoint @AT@ 3912 @LENGTH@ 12
------DEL VariableDeclarationFragment@@seda=context.getEndpoint(BLOCK_WHEN_FULL_URI,SedaEndpoint.class) @AT@ 3925 @LENGTH@ 67
---------DEL SimpleName@@seda @AT@ 3925 @LENGTH@ 4
---------DEL MethodInvocation@@context.getEndpoint(BLOCK_WHEN_FULL_URI,SedaEndpoint.class) @AT@ 3932 @LENGTH@ 60
------------DEL SimpleName@@Name:context @AT@ 3932 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getEndpoint:[BLOCK_WHEN_FULL_URI, SedaEndpoint.class] @AT@ 3940 @LENGTH@ 52
---------------DEL SimpleName@@BLOCK_WHEN_FULL_URI @AT@ 3952 @LENGTH@ 19
---------------DEL TypeLiteral@@SedaEndpoint.class @AT@ 3973 @LENGTH@ 18
---DEL ExpressionStatement@@MethodInvocation:assertEquals(QUEUE_SIZE,seda.getQueue().remainingCapacity()) @AT@ 4002 @LENGTH@ 62
------DEL MethodInvocation@@assertEquals(QUEUE_SIZE,seda.getQueue().remainingCapacity()) @AT@ 4002 @LENGTH@ 61
---------DEL SimpleName@@MethodName:assertEquals:[QUEUE_SIZE, seda.getQueue().remainingCapacity()] @AT@ 4002 @LENGTH@ 61
------------DEL SimpleName@@QUEUE_SIZE @AT@ 4015 @LENGTH@ 10
------------DEL MethodInvocation@@seda.getQueue().remainingCapacity() @AT@ 4027 @LENGTH@ 35
---------------DEL MethodInvocation@@MethodName:getQueue:[] @AT@ 4027 @LENGTH@ 15
---------------DEL SimpleName@@Name:seda @AT@ 4027 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:remainingCapacity:[] @AT@ 4043 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:asyncSendTwoOverCapacity(BLOCK_WHEN_FULL_URI,QUEUE_SIZE + 4) @AT@ 4074 @LENGTH@ 62
------DEL MethodInvocation@@asyncSendTwoOverCapacity(BLOCK_WHEN_FULL_URI,QUEUE_SIZE + 4) @AT@ 4074 @LENGTH@ 61
---------DEL SimpleName@@MethodName:asyncSendTwoOverCapacity:[BLOCK_WHEN_FULL_URI, QUEUE_SIZE + 4] @AT@ 4074 @LENGTH@ 61
------------DEL SimpleName@@BLOCK_WHEN_FULL_URI @AT@ 4099 @LENGTH@ 19
------------DEL InfixExpression@@QUEUE_SIZE + 4 @AT@ 4120 @LENGTH@ 14
---------------DEL SimpleName@@QUEUE_SIZE @AT@ 4120 @LENGTH@ 10
---------------DEL Operator@@+ @AT@ 4130 @LENGTH@ 1
---------------DEL NumberLiteral@@4 @AT@ 4133 @LENGTH@ 1
---DEL ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @AT@ 4145 @LENGTH@ 31
------DEL MethodInvocation@@MethodName:assertMockEndpointsSatisfied:[] @AT@ 4145 @LENGTH@ 30


UPD IfStatement@@if (XFrameOptionsMode.DENY.getMode().equals(allowFromValue)) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.DENY.getMode());} else if (allowFromValue != null) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);} @TO@ if (XFrameOptionsMode.DENY.getMode().equals(allowFromValue)) {  if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {    response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.DENY.getMode());  }} else if (allowFromValue != null) {  if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {    response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);  }} @AT@ 3079 @LENGTH@ 304
---INS Block@@ThenBody:{  if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {    response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.DENY.getMode());  }} @TO@ IfStatement@@if (XFrameOptionsMode.DENY.getMode().equals(allowFromValue)) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.DENY.getMode());} else if (allowFromValue != null) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);} @AT@ 3164 @LENGTH@ 153
------INS IfStatement@@if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.DENY.getMode());} @TO@ Block@@ThenBody:{  if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {    response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.DENY.getMode());  }} @AT@ 3170 @LENGTH@ 142
---------MOV Block@@ThenBody:{  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.DENY.getMode());} @TO@ IfStatement@@if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.DENY.getMode());} @AT@ 3140 @LENGTH@ 87
---------INS PrefixExpression@@!response.containsHeader(XFRAME_OPTIONS_HEADER) @TO@ IfStatement@@if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.DENY.getMode());} @AT@ 3174 @LENGTH@ 47
------------INS Operator@@! @TO@ PrefixExpression@@!response.containsHeader(XFRAME_OPTIONS_HEADER) @AT@ 3174 @LENGTH@ 1
------------INS MethodInvocation@@response.containsHeader(XFRAME_OPTIONS_HEADER) @TO@ PrefixExpression@@!response.containsHeader(XFRAME_OPTIONS_HEADER) @AT@ 3175 @LENGTH@ 46
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.containsHeader(XFRAME_OPTIONS_HEADER) @AT@ 3175 @LENGTH@ 8
---------------INS SimpleName@@MethodName:containsHeader:[XFRAME_OPTIONS_HEADER] @TO@ MethodInvocation@@response.containsHeader(XFRAME_OPTIONS_HEADER) @AT@ 3184 @LENGTH@ 37
------------------INS SimpleName@@XFRAME_OPTIONS_HEADER @TO@ SimpleName@@MethodName:containsHeader:[XFRAME_OPTIONS_HEADER] @AT@ 3199 @LENGTH@ 21
---UPD Block@@ElseBody:if (allowFromValue != null) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);} @TO@ ThenBody:{  if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {    response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);  }} @AT@ 3233 @LENGTH@ 150
---INS Block@@ElseBody:if (allowFromValue != null) {  if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {    response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);  }} @TO@ IfStatement@@if (XFrameOptionsMode.DENY.getMode().equals(allowFromValue)) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.DENY.getMode());} else if (allowFromValue != null) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);} @AT@ 3323 @LENGTH@ 217
------INS IfStatement@@if (allowFromValue != null) {  if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {    response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);  }} @TO@ Block@@ElseBody:if (allowFromValue != null) {  if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {    response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);  }} @AT@ 3323 @LENGTH@ 217
---------MOV Block@@ElseBody:if (allowFromValue != null) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);} @TO@ IfStatement@@if (allowFromValue != null) {  if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {    response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);  }} @AT@ 3233 @LENGTH@ 150
------------UPD IfStatement@@if (allowFromValue != null) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);} @TO@ if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);} @AT@ 3233 @LENGTH@ 150
---------------DEL InfixExpression@@allowFromValue != null @AT@ 3237 @LENGTH@ 22
------------------DEL SimpleName@@allowFromValue @AT@ 3237 @LENGTH@ 14
------------------DEL Operator@@!= @AT@ 3251 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 3255 @LENGTH@ 4
---------------INS PrefixExpression@@!response.containsHeader(XFRAME_OPTIONS_HEADER) @TO@ IfStatement@@if (allowFromValue != null) {  response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);} @AT@ 3361 @LENGTH@ 47
------------------INS Operator@@! @TO@ PrefixExpression@@!response.containsHeader(XFRAME_OPTIONS_HEADER) @AT@ 3361 @LENGTH@ 1
------------------INS MethodInvocation@@response.containsHeader(XFRAME_OPTIONS_HEADER) @TO@ PrefixExpression@@!response.containsHeader(XFRAME_OPTIONS_HEADER) @AT@ 3362 @LENGTH@ 46
---------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.containsHeader(XFRAME_OPTIONS_HEADER) @AT@ 3362 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:containsHeader:[XFRAME_OPTIONS_HEADER] @TO@ MethodInvocation@@response.containsHeader(XFRAME_OPTIONS_HEADER) @AT@ 3371 @LENGTH@ 37
------------------------INS SimpleName@@XFRAME_OPTIONS_HEADER @TO@ SimpleName@@MethodName:containsHeader:[XFRAME_OPTIONS_HEADER] @AT@ 3386 @LENGTH@ 21
---------INS InfixExpression@@allowFromValue != null @TO@ IfStatement@@if (allowFromValue != null) {  if (!response.containsHeader(XFRAME_OPTIONS_HEADER)) {    response.setHeader(XFRAME_OPTIONS_HEADER,XFrameOptionsMode.ALLOW_FROM.getMode() + " " + allowFromValue);  }} @AT@ 3327 @LENGTH@ 22
------------INS SimpleName@@allowFromValue @TO@ InfixExpression@@allowFromValue != null @AT@ 3327 @LENGTH@ 14
------------INS Operator@@!= @TO@ InfixExpression@@allowFromValue != null @AT@ 3341 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@allowFromValue != null @AT@ 3345 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:executorService.submit(() -> ReactiveHelper.scheduleLast(() -> processor.process(exchange,done -> {
  if (exchange.getException() != null) {
    getExceptionHandler().handleException("Error processing aggregated exchange",exchange,exchange.getException());
  }
 else {
    log.trace("Processing aggregated exchange: {} complete.",exchange);
  }
}
),"sending aggregated exchange")) @TO@ MethodInvocation:executorService.submit(() -> ReactiveHelper.scheduleSync(() -> processor.process(exchange,done -> {
  if (exchange.getException() != null) {
    getExceptionHandler().handleException("Error processing aggregated exchange",exchange,exchange.getException());
  }
 else {
    log.trace("Processing aggregated exchange: {} complete.",exchange);
  }
}
),"sending aggregated exchange")) @AT@ 33738 @LENGTH@ 584
---UPD MethodInvocation@@executorService.submit(() -> ReactiveHelper.scheduleLast(() -> processor.process(exchange,done -> {
  if (exchange.getException() != null) {
    getExceptionHandler().handleException("Error processing aggregated exchange",exchange,exchange.getException());
  }
 else {
    log.trace("Processing aggregated exchange: {} complete.",exchange);
  }
}
),"sending aggregated exchange")) @TO@ executorService.submit(() -> ReactiveHelper.scheduleSync(() -> processor.process(exchange,done -> {
  if (exchange.getException() != null) {
    getExceptionHandler().handleException("Error processing aggregated exchange",exchange,exchange.getException());
  }
 else {
    log.trace("Processing aggregated exchange: {} complete.",exchange);
  }
}
),"sending aggregated exchange")) @AT@ 33738 @LENGTH@ 583
------UPD SimpleName@@MethodName:submit:[() -> ReactiveHelper.scheduleLast(() -> processor.process(exchange,done -> {
  if (exchange.getException() != null) {
    getExceptionHandler().handleException("Error processing aggregated exchange",exchange,exchange.getException());
  }
 else {
    log.trace("Processing aggregated exchange: {} complete.",exchange);
  }
}
),"sending aggregated exchange")] @TO@ MethodName:submit:[() -> ReactiveHelper.scheduleSync(() -> processor.process(exchange,done -> {
  if (exchange.getException() != null) {
    getExceptionHandler().handleException("Error processing aggregated exchange",exchange,exchange.getException());
  }
 else {
    log.trace("Processing aggregated exchange: {} complete.",exchange);
  }
}
),"sending aggregated exchange")] @AT@ 33754 @LENGTH@ 567
---------UPD LambdaExpression@@() -> ReactiveHelper.scheduleLast(() -> processor.process(exchange,done -> {
  if (exchange.getException() != null) {
    getExceptionHandler().handleException("Error processing aggregated exchange",exchange,exchange.getException());
  }
 else {
    log.trace("Processing aggregated exchange: {} complete.",exchange);
  }
}
),"sending aggregated exchange") @TO@ () -> ReactiveHelper.scheduleSync(() -> processor.process(exchange,done -> {
  if (exchange.getException() != null) {
    getExceptionHandler().handleException("Error processing aggregated exchange",exchange,exchange.getException());
  }
 else {
    log.trace("Processing aggregated exchange: {} complete.",exchange);
  }
}
),"sending aggregated exchange") @AT@ 33761 @LENGTH@ 559
------------UPD MethodInvocation@@ReactiveHelper.scheduleLast(() -> processor.process(exchange,done -> {
  if (exchange.getException() != null) {
    getExceptionHandler().handleException("Error processing aggregated exchange",exchange,exchange.getException());
  }
 else {
    log.trace("Processing aggregated exchange: {} complete.",exchange);
  }
}
),"sending aggregated exchange") @TO@ ReactiveHelper.scheduleSync(() -> processor.process(exchange,done -> {
  if (exchange.getException() != null) {
    getExceptionHandler().handleException("Error processing aggregated exchange",exchange,exchange.getException());
  }
 else {
    log.trace("Processing aggregated exchange: {} complete.",exchange);
  }
}
),"sending aggregated exchange") @AT@ 33767 @LENGTH@ 553
---------------UPD SimpleName@@MethodName:scheduleLast:[() -> processor.process(exchange,done -> {
  if (exchange.getException() != null) {
    getExceptionHandler().handleException("Error processing aggregated exchange",exchange,exchange.getException());
  }
 else {
    log.trace("Processing aggregated exchange: {} complete.",exchange);
  }
}
), "sending aggregated exchange"] @TO@ MethodName:scheduleSync:[() -> processor.process(exchange,done -> {
  if (exchange.getException() != null) {
    getExceptionHandler().handleException("Error processing aggregated exchange",exchange,exchange.getException());
  }
 else {
    log.trace("Processing aggregated exchange: {} complete.",exchange);
  }
}
), "sending aggregated exchange"] @AT@ 33782 @LENGTH@ 538


INS IfStatement@@if (!response.containsHeader(REFERRER_POLICY_HEADER)) {  response.setHeader(REFERRER_POLICY_HEADER,this.policy.getPolicy());} @TO@ MethodDeclaration@@public, void, MethodName:writeHeaders, HttpServletRequest request, HttpServletResponse response,  @AT@ 2686 @LENGTH@ 131
---INS PrefixExpression@@!response.containsHeader(REFERRER_POLICY_HEADER) @TO@ IfStatement@@if (!response.containsHeader(REFERRER_POLICY_HEADER)) {  response.setHeader(REFERRER_POLICY_HEADER,this.policy.getPolicy());} @AT@ 2690 @LENGTH@ 48
------INS Operator@@! @TO@ PrefixExpression@@!response.containsHeader(REFERRER_POLICY_HEADER) @AT@ 2690 @LENGTH@ 1
------INS MethodInvocation@@response.containsHeader(REFERRER_POLICY_HEADER) @TO@ PrefixExpression@@!response.containsHeader(REFERRER_POLICY_HEADER) @AT@ 2691 @LENGTH@ 47
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.containsHeader(REFERRER_POLICY_HEADER) @AT@ 2691 @LENGTH@ 8
---------INS SimpleName@@MethodName:containsHeader:[REFERRER_POLICY_HEADER] @TO@ MethodInvocation@@response.containsHeader(REFERRER_POLICY_HEADER) @AT@ 2700 @LENGTH@ 38
------------INS SimpleName@@REFERRER_POLICY_HEADER @TO@ SimpleName@@MethodName:containsHeader:[REFERRER_POLICY_HEADER] @AT@ 2715 @LENGTH@ 22
---INS Block@@ThenBody:{  response.setHeader(REFERRER_POLICY_HEADER,this.policy.getPolicy());} @TO@ IfStatement@@if (!response.containsHeader(REFERRER_POLICY_HEADER)) {  response.setHeader(REFERRER_POLICY_HEADER,this.policy.getPolicy());} @AT@ 2740 @LENGTH@ 77
------MOV ExpressionStatement@@MethodInvocation:response.setHeader(REFERRER_POLICY_HEADER,this.policy.getPolicy()) @TO@ Block@@ThenBody:{  response.setHeader(REFERRER_POLICY_HEADER,this.policy.getPolicy());} @AT@ 2662 @LENGTH@ 68


UPD VariableDeclarationStatement@@Class<?> userType=ClassUtils.getUserClass(sourceType); @TO@ Class<?> userType=ProxyUtils.getUserClass(sourceType); @AT@ 5766 @LENGTH@ 56
---UPD VariableDeclarationFragment@@userType=ClassUtils.getUserClass(sourceType) @TO@ userType=ProxyUtils.getUserClass(sourceType) @AT@ 5775 @LENGTH@ 46
------UPD MethodInvocation@@ClassUtils.getUserClass(sourceType) @TO@ ProxyUtils.getUserClass(sourceType) @AT@ 5786 @LENGTH@ 35
---------UPD SimpleName@@Name:ClassUtils @TO@ Name:ProxyUtils @AT@ 5786 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testHeaders, Exception,  @TO@ TypeDeclaration@@[@RunWith(WildflyTestRunner.class), public]LsTestCase, AbstractCliTestBase @AT@ 5839 @LENGTH@ 463
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testHeaders, Exception,  @AT@ 5839 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testHeaders, Exception,  @AT@ 5846 @LENGTH@ 4
---INS SimpleName@@MethodName:testHeaders @TO@ MethodDeclaration@@public, void, MethodName:testHeaders, Exception,  @AT@ 5851 @LENGTH@ 11
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testHeaders, Exception,  @AT@ 5872 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:cli.sendLine("echo-dmr ls --headers={foo=\"1 2 3\"; allow-resource-service-restart=true}") @TO@ MethodDeclaration@@public, void, MethodName:testHeaders, Exception,  @AT@ 5892 @LENGTH@ 91
------INS MethodInvocation@@cli.sendLine("echo-dmr ls --headers={foo=\"1 2 3\"; allow-resource-service-restart=true}") @TO@ ExpressionStatement@@MethodInvocation:cli.sendLine("echo-dmr ls --headers={foo=\"1 2 3\"; allow-resource-service-restart=true}") @AT@ 5892 @LENGTH@ 90
---------INS SimpleName@@Name:cli @TO@ MethodInvocation@@cli.sendLine("echo-dmr ls --headers={foo=\"1 2 3\"; allow-resource-service-restart=true}") @AT@ 5892 @LENGTH@ 3
---------INS SimpleName@@MethodName:sendLine:["echo-dmr ls --headers={foo=\"1 2 3\"; allow-resource-service-restart=true}"] @TO@ MethodInvocation@@cli.sendLine("echo-dmr ls --headers={foo=\"1 2 3\"; allow-resource-service-restart=true}") @AT@ 5896 @LENGTH@ 86
------------INS StringLiteral@@"echo-dmr ls --headers={foo=\"1 2 3\"; allow-resource-service-restart=true}" @TO@ SimpleName@@MethodName:sendLine:["echo-dmr ls --headers={foo=\"1 2 3\"; allow-resource-service-restart=true}"] @AT@ 5905 @LENGTH@ 76
---INS VariableDeclarationStatement@@String out=cli.readOutput(); @TO@ MethodDeclaration@@public, void, MethodName:testHeaders, Exception,  @AT@ 5992 @LENGTH@ 30
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String out=cli.readOutput(); @AT@ 5992 @LENGTH@ 6
------INS VariableDeclarationFragment@@out=cli.readOutput() @TO@ VariableDeclarationStatement@@String out=cli.readOutput(); @AT@ 5999 @LENGTH@ 22
---------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=cli.readOutput() @AT@ 5999 @LENGTH@ 3
---------INS MethodInvocation@@cli.readOutput() @TO@ VariableDeclarationFragment@@out=cli.readOutput() @AT@ 6005 @LENGTH@ 16
------------INS SimpleName@@Name:cli @TO@ MethodInvocation@@cli.readOutput() @AT@ 6005 @LENGTH@ 3
------------INS SimpleName@@MethodName:readOutput:[] @TO@ MethodInvocation@@cli.readOutput() @AT@ 6009 @LENGTH@ 12
---INS VariableDeclarationStatement@@ModelNode mn=ModelNode.fromString(out); @TO@ MethodDeclaration@@public, void, MethodName:testHeaders, Exception,  @AT@ 6031 @LENGTH@ 41
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode mn=ModelNode.fromString(out); @AT@ 6031 @LENGTH@ 9
------INS VariableDeclarationFragment@@mn=ModelNode.fromString(out) @TO@ VariableDeclarationStatement@@ModelNode mn=ModelNode.fromString(out); @AT@ 6041 @LENGTH@ 30
---------INS SimpleName@@mn @TO@ VariableDeclarationFragment@@mn=ModelNode.fromString(out) @AT@ 6041 @LENGTH@ 2
---------INS MethodInvocation@@ModelNode.fromString(out) @TO@ VariableDeclarationFragment@@mn=ModelNode.fromString(out) @AT@ 6046 @LENGTH@ 25
------------INS SimpleName@@Name:ModelNode @TO@ MethodInvocation@@ModelNode.fromString(out) @AT@ 6046 @LENGTH@ 9
------------INS SimpleName@@MethodName:fromString:[out] @TO@ MethodInvocation@@ModelNode.fromString(out) @AT@ 6056 @LENGTH@ 15
---------------INS SimpleName@@out @TO@ SimpleName@@MethodName:fromString:[out] @AT@ 6067 @LENGTH@ 3
---INS VariableDeclarationStatement@@ModelNode headers=mn.get(Util.OPERATION_HEADERS); @TO@ MethodDeclaration@@public, void, MethodName:testHeaders, Exception,  @AT@ 6081 @LENGTH@ 51
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode headers=mn.get(Util.OPERATION_HEADERS); @AT@ 6081 @LENGTH@ 9
------INS VariableDeclarationFragment@@headers=mn.get(Util.OPERATION_HEADERS) @TO@ VariableDeclarationStatement@@ModelNode headers=mn.get(Util.OPERATION_HEADERS); @AT@ 6091 @LENGTH@ 40
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=mn.get(Util.OPERATION_HEADERS) @AT@ 6091 @LENGTH@ 7
---------INS MethodInvocation@@mn.get(Util.OPERATION_HEADERS) @TO@ VariableDeclarationFragment@@headers=mn.get(Util.OPERATION_HEADERS) @AT@ 6101 @LENGTH@ 30
------------INS SimpleName@@Name:mn @TO@ MethodInvocation@@mn.get(Util.OPERATION_HEADERS) @AT@ 6101 @LENGTH@ 2
------------INS SimpleName@@MethodName:get:[Util.OPERATION_HEADERS] @TO@ MethodInvocation@@mn.get(Util.OPERATION_HEADERS) @AT@ 6104 @LENGTH@ 27
---------------INS QualifiedName@@Util.OPERATION_HEADERS @TO@ SimpleName@@MethodName:get:[Util.OPERATION_HEADERS] @AT@ 6108 @LENGTH@ 22
------------------INS SimpleName@@Util @TO@ QualifiedName@@Util.OPERATION_HEADERS @AT@ 6108 @LENGTH@ 4
------------------INS SimpleName@@OPERATION_HEADERS @TO@ QualifiedName@@Util.OPERATION_HEADERS @AT@ 6113 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("1 2 3",headers.get("foo").asString()) @TO@ MethodDeclaration@@public, void, MethodName:testHeaders, Exception,  @AT@ 6141 @LENGTH@ 60
------INS MethodInvocation@@Assert.assertEquals("1 2 3",headers.get("foo").asString()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("1 2 3",headers.get("foo").asString()) @AT@ 6141 @LENGTH@ 59
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("1 2 3",headers.get("foo").asString()) @AT@ 6141 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["1 2 3", headers.get("foo").asString()] @TO@ MethodInvocation@@Assert.assertEquals("1 2 3",headers.get("foo").asString()) @AT@ 6148 @LENGTH@ 52
------------INS StringLiteral@@"1 2 3" @TO@ SimpleName@@MethodName:assertEquals:["1 2 3", headers.get("foo").asString()] @AT@ 6161 @LENGTH@ 7
------------INS MethodInvocation@@headers.get("foo").asString() @TO@ SimpleName@@MethodName:assertEquals:["1 2 3", headers.get("foo").asString()] @AT@ 6170 @LENGTH@ 29
---------------INS MethodInvocation@@MethodName:get:["foo"] @TO@ MethodInvocation@@headers.get("foo").asString() @AT@ 6170 @LENGTH@ 18
------------------INS StringLiteral@@"foo" @TO@ MethodInvocation@@MethodName:get:["foo"] @AT@ 6182 @LENGTH@ 5
---------------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.get("foo").asString() @AT@ 6170 @LENGTH@ 7
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@headers.get("foo").asString() @AT@ 6189 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("true",headers.get("allow-resource-service-restart").asString()) @TO@ MethodDeclaration@@public, void, MethodName:testHeaders, Exception,  @AT@ 6210 @LENGTH@ 86
------INS MethodInvocation@@Assert.assertEquals("true",headers.get("allow-resource-service-restart").asString()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("true",headers.get("allow-resource-service-restart").asString()) @AT@ 6210 @LENGTH@ 85
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("true",headers.get("allow-resource-service-restart").asString()) @AT@ 6210 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["true", headers.get("allow-resource-service-restart").asString()] @TO@ MethodInvocation@@Assert.assertEquals("true",headers.get("allow-resource-service-restart").asString()) @AT@ 6217 @LENGTH@ 78
------------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:assertEquals:["true", headers.get("allow-resource-service-restart").asString()] @AT@ 6230 @LENGTH@ 6
------------INS MethodInvocation@@headers.get("allow-resource-service-restart").asString() @TO@ SimpleName@@MethodName:assertEquals:["true", headers.get("allow-resource-service-restart").asString()] @AT@ 6238 @LENGTH@ 56
---------------INS MethodInvocation@@MethodName:get:["allow-resource-service-restart"] @TO@ MethodInvocation@@headers.get("allow-resource-service-restart").asString() @AT@ 6238 @LENGTH@ 45
------------------INS StringLiteral@@"allow-resource-service-restart" @TO@ MethodInvocation@@MethodName:get:["allow-resource-service-restart"] @AT@ 6250 @LENGTH@ 32
---------------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.get("allow-resource-service-restart").asString() @AT@ 6238 @LENGTH@ 7
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@headers.get("allow-resource-service-restart").asString() @AT@ 6284 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:reg.put(LDAP_CONN_NAME,getWiredConnection(ldapServer)) @TO@ MethodInvocation:reg.bind(LDAP_CONN_NAME,getWiredConnection(ldapServer)) @AT@ 3218 @LENGTH@ 56
---UPD MethodInvocation@@reg.put(LDAP_CONN_NAME,getWiredConnection(ldapServer)) @TO@ reg.bind(LDAP_CONN_NAME,getWiredConnection(ldapServer)) @AT@ 3218 @LENGTH@ 55
------UPD SimpleName@@MethodName:put:[LDAP_CONN_NAME, getWiredConnection(ldapServer)] @TO@ MethodName:bind:[LDAP_CONN_NAME, getWiredConnection(ldapServer)] @AT@ 3222 @LENGTH@ 51


UPD FieldDeclaration@@private, final, static, ExpressionParser, [DEFAULT_PARSER=new SpelExpressionParser()] @TO@ private, static, final, ExpressionParser, [DEFAULT_PARSER=new SpelExpressionParser()] @AT@ 1231 @LENGTH@ 82
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, static, ExpressionParser, [DEFAULT_PARSER=new SpelExpressionParser()] @AT@ 1239 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1245 @LENGTH@ 6


UPD EnhancedForStatement@@for (String key : BsonUtils.asMap(query).keySet()) {  if (Query.isRestrictedTypeKey(key)) {    @SuppressWarnings("unchecked") Set<Class<?>> restrictedTypes=BsonUtils.get(query,key);    this.converter.getTypeMapper().writeTypeRestrictions(result,restrictedTypes);    continue;  }  if (isKeyword(key)) {    result.putAll(getMappedKeyword(new Keyword(query,key),entity));    continue;  }  try {    Field field=createPropertyField(entity,key,mappingContext);    Entry<String,Object> entry=getMappedObjectForField(field,BsonUtils.get(query,key));    result.put(entry.getKey(),entry.getValue());  } catch (  InvalidPersistentPropertyPath invalidPathException) {    if (!(BsonUtils.get(query,key) instanceof Document)) {      throw invalidPathException;    }    result.put(key,BsonUtils.get(query,key));  }} @TO@ for (String key : BsonUtils.asMap(query).keySet()) {  if (Query.isRestrictedTypeKey(key)) {    @SuppressWarnings("unchecked") Set<Class<?>> restrictedTypes=BsonUtils.get(query,key);    this.converter.getTypeMapper().writeTypeRestrictions(result,restrictedTypes);    continue;  }  if (isTypeKey(key)) {    result.put(key,BsonUtils.get(query,key));    continue;  }  if (isKeyword(key)) {    result.putAll(getMappedKeyword(new Keyword(query,key),entity));    continue;  }  try {    Field field=createPropertyField(entity,key,mappingContext);    Entry<String,Object> entry=getMappedObjectForField(field,BsonUtils.get(query,key));    result.put(entry.getKey(),entry.getValue());  } catch (  InvalidPersistentPropertyPath invalidPathException) {    if (!(BsonUtils.get(query,key) instanceof Document)) {      throw invalidPathException;    }    result.put(key,BsonUtils.get(query,key));  }} @AT@ 4578 @LENGTH@ 990
---INS IfStatement@@if (isTypeKey(key)) {  result.put(key,BsonUtils.get(query,key));  continue;} @TO@ EnhancedForStatement@@for (String key : BsonUtils.asMap(query).keySet()) {  if (Query.isRestrictedTypeKey(key)) {    @SuppressWarnings("unchecked") Set<Class<?>> restrictedTypes=BsonUtils.get(query,key);    this.converter.getTypeMapper().writeTypeRestrictions(result,restrictedTypes);    continue;  }  if (isKeyword(key)) {    result.putAll(getMappedKeyword(new Keyword(query,key),entity));    continue;  }  try {    Field field=createPropertyField(entity,key,mappingContext);    Entry<String,Object> entry=getMappedObjectForField(field,BsonUtils.get(query,key));    result.put(entry.getKey(),entry.getValue());  } catch (  InvalidPersistentPropertyPath invalidPathException) {    if (!(BsonUtils.get(query,key) instanceof Document)) {      throw invalidPathException;    }    result.put(key,BsonUtils.get(query,key));  }} @AT@ 4958 @LENGTH@ 88
------INS MethodInvocation@@isTypeKey(key) @TO@ IfStatement@@if (isTypeKey(key)) {  result.put(key,BsonUtils.get(query,key));  continue;} @AT@ 4962 @LENGTH@ 14
---------INS SimpleName@@MethodName:isTypeKey:[key] @TO@ MethodInvocation@@isTypeKey(key) @AT@ 4962 @LENGTH@ 14
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:isTypeKey:[key] @AT@ 4972 @LENGTH@ 3
------INS Block@@ThenBody:{  result.put(key,BsonUtils.get(query,key));  continue;} @TO@ IfStatement@@if (isTypeKey(key)) {  result.put(key,BsonUtils.get(query,key));  continue;} @AT@ 4978 @LENGTH@ 68
---------INS ExpressionStatement@@MethodInvocation:result.put(key,BsonUtils.get(query,key)) @TO@ Block@@ThenBody:{  result.put(key,BsonUtils.get(query,key));  continue;} @AT@ 4984 @LENGTH@ 43
------------INS MethodInvocation@@result.put(key,BsonUtils.get(query,key)) @TO@ ExpressionStatement@@MethodInvocation:result.put(key,BsonUtils.get(query,key)) @AT@ 4984 @LENGTH@ 42
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.put(key,BsonUtils.get(query,key)) @AT@ 4984 @LENGTH@ 6
---------------INS SimpleName@@MethodName:put:[key, BsonUtils.get(query,key)] @TO@ MethodInvocation@@result.put(key,BsonUtils.get(query,key)) @AT@ 4991 @LENGTH@ 35
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:put:[key, BsonUtils.get(query,key)] @AT@ 4995 @LENGTH@ 3
------------------INS MethodInvocation@@BsonUtils.get(query,key) @TO@ SimpleName@@MethodName:put:[key, BsonUtils.get(query,key)] @AT@ 5000 @LENGTH@ 25
---------------------INS SimpleName@@Name:BsonUtils @TO@ MethodInvocation@@BsonUtils.get(query,key) @AT@ 5000 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:get:[query, key] @TO@ MethodInvocation@@BsonUtils.get(query,key) @AT@ 5010 @LENGTH@ 15
------------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:get:[query, key] @AT@ 5014 @LENGTH@ 5
------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:get:[query, key] @AT@ 5021 @LENGTH@ 3
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  result.put(key,BsonUtils.get(query,key));  continue;} @AT@ 5032 @LENGTH@ 9


UPD EnhancedForStatement@@for (T uninitialized : batchToSave) {  AdaptibleEntity<T> entity=operations.forEntity(uninitialized,mongoConverter.getConversionService());  T toSave=entity.initializeVersionProperty();  BeforeConvertEvent<T> event=new BeforeConvertEvent<>(toSave,collectionName);  toSave=maybeEmitEvent(event).getSource();  Document document=entity.toMappedDocument(writer).getDocument();  maybeEmitEvent(new BeforeSaveEvent<>(toSave,document,collectionName));  documentList.add(document);  initializedBatchToSave.add(toSave);} @TO@ for (T uninitialized : batchToSave) {  BeforeConvertEvent<T> event=new BeforeConvertEvent<>(uninitialized,collectionName);  T toConvert=maybeEmitEvent(event).getSource();  AdaptibleEntity<T> entity=operations.forEntity(toConvert,mongoConverter.getConversionService());  entity.assertUpdateableIdIfNotSet();  T initialized=entity.initializeVersionProperty();  Document document=entity.toMappedDocument(writer).getDocument();  maybeEmitEvent(new BeforeSaveEvent<>(initialized,document,collectionName));  documentList.add(document);  initializedBatchToSave.add(initialized);} @AT@ 50987 @LENGTH@ 548
---UPD VariableDeclarationStatement@@AdaptibleEntity<T> entity=operations.forEntity(uninitialized,mongoConverter.getConversionService()); @TO@ AdaptibleEntity<T> entity=operations.forEntity(toConvert,mongoConverter.getConversionService()); @AT@ 51029 @LENGTH@ 103
------UPD VariableDeclarationFragment@@entity=operations.forEntity(uninitialized,mongoConverter.getConversionService()) @TO@ entity=operations.forEntity(toConvert,mongoConverter.getConversionService()) @AT@ 51048 @LENGTH@ 83
---------UPD MethodInvocation@@operations.forEntity(uninitialized,mongoConverter.getConversionService()) @TO@ operations.forEntity(toConvert,mongoConverter.getConversionService()) @AT@ 51057 @LENGTH@ 74
------------UPD SimpleName@@MethodName:forEntity:[uninitialized, mongoConverter.getConversionService()] @TO@ MethodName:forEntity:[toConvert, mongoConverter.getConversionService()] @AT@ 51068 @LENGTH@ 63
---------------UPD SimpleName@@uninitialized @TO@ toConvert @AT@ 51078 @LENGTH@ 13
---INS VariableDeclarationStatement@@BeforeConvertEvent<T> event=new BeforeConvertEvent<>(uninitialized,collectionName); @TO@ EnhancedForStatement@@for (T uninitialized : batchToSave) {  AdaptibleEntity<T> entity=operations.forEntity(uninitialized,mongoConverter.getConversionService());  T toSave=entity.initializeVersionProperty();  BeforeConvertEvent<T> event=new BeforeConvertEvent<>(toSave,collectionName);  toSave=maybeEmitEvent(event).getSource();  Document document=entity.toMappedDocument(writer).getDocument();  maybeEmitEvent(new BeforeSaveEvent<>(toSave,document,collectionName));  documentList.add(document);  initializedBatchToSave.add(toSave);} @AT@ 51029 @LENGTH@ 86
------INS ParameterizedType@@BeforeConvertEvent<T> @TO@ VariableDeclarationStatement@@BeforeConvertEvent<T> event=new BeforeConvertEvent<>(uninitialized,collectionName); @AT@ 51029 @LENGTH@ 21
---------INS SimpleType@@BeforeConvertEvent @TO@ ParameterizedType@@BeforeConvertEvent<T> @AT@ 51029 @LENGTH@ 18
---------INS SimpleType@@T @TO@ ParameterizedType@@BeforeConvertEvent<T> @AT@ 51048 @LENGTH@ 1
------INS VariableDeclarationFragment@@event=new BeforeConvertEvent<>(uninitialized,collectionName) @TO@ VariableDeclarationStatement@@BeforeConvertEvent<T> event=new BeforeConvertEvent<>(uninitialized,collectionName); @AT@ 51051 @LENGTH@ 63
---------INS SimpleName@@event @TO@ VariableDeclarationFragment@@event=new BeforeConvertEvent<>(uninitialized,collectionName) @AT@ 51051 @LENGTH@ 5
---------INS ClassInstanceCreation@@BeforeConvertEvent<>[uninitialized, collectionName] @TO@ VariableDeclarationFragment@@event=new BeforeConvertEvent<>(uninitialized,collectionName) @AT@ 51059 @LENGTH@ 55
------------INS New@@new @TO@ ClassInstanceCreation@@BeforeConvertEvent<>[uninitialized, collectionName] @AT@ 51059 @LENGTH@ 3
------------INS ParameterizedType@@BeforeConvertEvent<> @TO@ ClassInstanceCreation@@BeforeConvertEvent<>[uninitialized, collectionName] @AT@ 51063 @LENGTH@ 20
---------------INS SimpleType@@BeforeConvertEvent @TO@ ParameterizedType@@BeforeConvertEvent<> @AT@ 51063 @LENGTH@ 18
------------INS SimpleName@@uninitialized @TO@ ClassInstanceCreation@@BeforeConvertEvent<>[uninitialized, collectionName] @AT@ 51084 @LENGTH@ 13
------------INS SimpleName@@collectionName @TO@ ClassInstanceCreation@@BeforeConvertEvent<>[uninitialized, collectionName] @AT@ 51099 @LENGTH@ 14
---INS VariableDeclarationStatement@@T toConvert=maybeEmitEvent(event).getSource(); @TO@ EnhancedForStatement@@for (T uninitialized : batchToSave) {  AdaptibleEntity<T> entity=operations.forEntity(uninitialized,mongoConverter.getConversionService());  T toSave=entity.initializeVersionProperty();  BeforeConvertEvent<T> event=new BeforeConvertEvent<>(toSave,collectionName);  toSave=maybeEmitEvent(event).getSource();  Document document=entity.toMappedDocument(writer).getDocument();  maybeEmitEvent(new BeforeSaveEvent<>(toSave,document,collectionName));  documentList.add(document);  initializedBatchToSave.add(toSave);} @AT@ 51119 @LENGTH@ 48
------INS SimpleType@@T @TO@ VariableDeclarationStatement@@T toConvert=maybeEmitEvent(event).getSource(); @AT@ 51119 @LENGTH@ 1
------INS VariableDeclarationFragment@@toConvert=maybeEmitEvent(event).getSource() @TO@ VariableDeclarationStatement@@T toConvert=maybeEmitEvent(event).getSource(); @AT@ 51121 @LENGTH@ 45
---------INS SimpleName@@toConvert @TO@ VariableDeclarationFragment@@toConvert=maybeEmitEvent(event).getSource() @AT@ 51121 @LENGTH@ 9
---------MOV MethodInvocation@@maybeEmitEvent(event).getSource() @TO@ VariableDeclarationFragment@@toConvert=maybeEmitEvent(event).getSource() @AT@ 51279 @LENGTH@ 33
---UPD VariableDeclarationStatement@@T toSave=entity.initializeVersionProperty(); @TO@ T initialized=entity.initializeVersionProperty(); @AT@ 51136 @LENGTH@ 46
------UPD VariableDeclarationFragment@@toSave=entity.initializeVersionProperty() @TO@ initialized=entity.initializeVersionProperty() @AT@ 51138 @LENGTH@ 43
---------UPD SimpleName@@toSave @TO@ initialized @AT@ 51138 @LENGTH@ 6
---DEL VariableDeclarationStatement@@BeforeConvertEvent<T> event=new BeforeConvertEvent<>(toSave,collectionName); @AT@ 51187 @LENGTH@ 79
------DEL ParameterizedType@@BeforeConvertEvent<T> @AT@ 51187 @LENGTH@ 21
---------DEL SimpleType@@BeforeConvertEvent @AT@ 51187 @LENGTH@ 18
---------DEL SimpleType@@T @AT@ 51206 @LENGTH@ 1
------DEL VariableDeclarationFragment@@event=new BeforeConvertEvent<>(toSave,collectionName) @AT@ 51209 @LENGTH@ 56
---------DEL SimpleName@@event @AT@ 51209 @LENGTH@ 5
---------DEL ClassInstanceCreation@@BeforeConvertEvent<>[toSave, collectionName] @AT@ 51217 @LENGTH@ 48
------------DEL New@@new @AT@ 51217 @LENGTH@ 3
------------DEL ParameterizedType@@BeforeConvertEvent<> @AT@ 51221 @LENGTH@ 20
---------------DEL SimpleType@@BeforeConvertEvent @AT@ 51221 @LENGTH@ 18
------------DEL SimpleName@@toSave @AT@ 51242 @LENGTH@ 6
------------DEL SimpleName@@collectionName @AT@ 51250 @LENGTH@ 14
---DEL ExpressionStatement@@Assignment:toSave=maybeEmitEvent(event).getSource() @AT@ 51270 @LENGTH@ 43
------DEL Assignment@@toSave=maybeEmitEvent(event).getSource() @AT@ 51270 @LENGTH@ 42
---------DEL SimpleName@@toSave @AT@ 51270 @LENGTH@ 6
---------DEL Operator@@= @AT@ 51276 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:entity.assertUpdateableIdIfNotSet() @TO@ EnhancedForStatement@@for (T uninitialized : batchToSave) {  AdaptibleEntity<T> entity=operations.forEntity(uninitialized,mongoConverter.getConversionService());  T toSave=entity.initializeVersionProperty();  BeforeConvertEvent<T> event=new BeforeConvertEvent<>(toSave,collectionName);  toSave=maybeEmitEvent(event).getSource();  Document document=entity.toMappedDocument(writer).getDocument();  maybeEmitEvent(new BeforeSaveEvent<>(toSave,document,collectionName));  documentList.add(document);  initializedBatchToSave.add(toSave);} @AT@ 51275 @LENGTH@ 36
------INS MethodInvocation@@entity.assertUpdateableIdIfNotSet() @TO@ ExpressionStatement@@MethodInvocation:entity.assertUpdateableIdIfNotSet() @AT@ 51275 @LENGTH@ 35
---------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.assertUpdateableIdIfNotSet() @AT@ 51275 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertUpdateableIdIfNotSet:[] @TO@ MethodInvocation@@entity.assertUpdateableIdIfNotSet() @AT@ 51282 @LENGTH@ 28
---UPD ExpressionStatement@@MethodInvocation:maybeEmitEvent(new BeforeSaveEvent<>(toSave,document,collectionName)) @TO@ MethodInvocation:maybeEmitEvent(new BeforeSaveEvent<>(initialized,document,collectionName)) @AT@ 51389 @LENGTH@ 72
------UPD MethodInvocation@@maybeEmitEvent(new BeforeSaveEvent<>(toSave,document,collectionName)) @TO@ maybeEmitEvent(new BeforeSaveEvent<>(initialized,document,collectionName)) @AT@ 51389 @LENGTH@ 71
---------UPD SimpleName@@MethodName:maybeEmitEvent:[new BeforeSaveEvent<>(toSave,document,collectionName)] @TO@ MethodName:maybeEmitEvent:[new BeforeSaveEvent<>(initialized,document,collectionName)] @AT@ 51389 @LENGTH@ 71
------------UPD ClassInstanceCreation@@BeforeSaveEvent<>[toSave, document, collectionName] @TO@ BeforeSaveEvent<>[initialized, document, collectionName] @AT@ 51404 @LENGTH@ 55
---------------UPD SimpleName@@toSave @TO@ initialized @AT@ 51426 @LENGTH@ 6
---UPD ExpressionStatement@@MethodInvocation:initializedBatchToSave.add(toSave) @TO@ MethodInvocation:initializedBatchToSave.add(initialized) @AT@ 51496 @LENGTH@ 35
------UPD MethodInvocation@@initializedBatchToSave.add(toSave) @TO@ initializedBatchToSave.add(initialized) @AT@ 51496 @LENGTH@ 34
---------UPD SimpleName@@MethodName:add:[toSave] @TO@ MethodName:add:[initialized] @AT@ 51519 @LENGTH@ 11
------------UPD SimpleName@@toSave @TO@ initialized @AT@ 51523 @LENGTH@ 6


UPD IfStatement@@if (multiValued) {  String prefix=getPropertyPrefix(rows,key);  Map<String,Object> values=URISupport.extractProperties(parameters,prefix);  String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&"));  if (!csb.isEmpty()) {    value=value + "&" + csb;  }} @TO@ if (multiValued) {  String prefix=getPropertyPrefix(rows,key);  if (prefix != null) {    Map<String,Object> values=URISupport.extractProperties(parameters,prefix);    String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&"));    if (!csb.isEmpty()) {      value=value + "&" + csb;    }  }} @AT@ 33778 @LENGTH@ 803
---UPD Block@@ThenBody:{  String prefix=getPropertyPrefix(rows,key);  Map<String,Object> values=URISupport.extractProperties(parameters,prefix);  String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&"));  if (!csb.isEmpty()) {    value=value + "&" + csb;  }} @TO@ ThenBody:{  String prefix=getPropertyPrefix(rows,key);  if (prefix != null) {    Map<String,Object> values=URISupport.extractProperties(parameters,prefix);    String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&"));    if (!csb.isEmpty()) {      value=value + "&" + csb;    }  }} @AT@ 33795 @LENGTH@ 786
------INS IfStatement@@if (prefix != null) {  Map<String,Object> values=URISupport.extractProperties(parameters,prefix);  String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&"));  if (!csb.isEmpty()) {    value=value + "&" + csb;  }} @TO@ Block@@ThenBody:{  String prefix=getPropertyPrefix(rows,key);  Map<String,Object> values=URISupport.extractProperties(parameters,prefix);  String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&"));  if (!csb.isEmpty()) {    value=value + "&" + csb;  }} @AT@ 33875 @LENGTH@ 788
---------INS InfixExpression@@prefix != null @TO@ IfStatement@@if (prefix != null) {  Map<String,Object> values=URISupport.extractProperties(parameters,prefix);  String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&"));  if (!csb.isEmpty()) {    value=value + "&" + csb;  }} @AT@ 33879 @LENGTH@ 14
------------INS SimpleName@@prefix @TO@ InfixExpression@@prefix != null @AT@ 33879 @LENGTH@ 6
------------INS Operator@@!= @TO@ InfixExpression@@prefix != null @AT@ 33885 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@prefix != null @AT@ 33889 @LENGTH@ 4
---------INS Block@@ThenBody:{  Map<String,Object> values=URISupport.extractProperties(parameters,prefix);  String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&"));  if (!csb.isEmpty()) {    value=value + "&" + csb;  }} @TO@ IfStatement@@if (prefix != null) {  Map<String,Object> values=URISupport.extractProperties(parameters,prefix);  String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&"));  if (!csb.isEmpty()) {    value=value + "&" + csb;  }} @AT@ 33895 @LENGTH@ 768
------------MOV VariableDeclarationStatement@@Map<String,Object> values=URISupport.extractProperties(parameters,prefix); @TO@ Block@@ThenBody:{  Map<String,Object> values=URISupport.extractProperties(parameters,prefix);  String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&"));  if (!csb.isEmpty()) {    value=value + "&" + csb;  }} @AT@ 33929 @LENGTH@ 78
------------MOV VariableDeclarationStatement@@String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&")); @TO@ Block@@ThenBody:{  Map<String,Object> values=URISupport.extractProperties(parameters,prefix);  String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&"));  if (!csb.isEmpty()) {    value=value + "&" + csb;  }} @AT@ 34129 @LENGTH@ 231
------------MOV IfStatement@@if (!csb.isEmpty()) {  value=value + "&" + csb;} @TO@ Block@@ThenBody:{  Map<String,Object> values=URISupport.extractProperties(parameters,prefix);  String csb=values.entrySet().stream().map(multi -> prefix + multi.getKey() + "="+ (multi.getValue() != null ? multi.getValue().toString() : "")).collect(Collectors.joining("&"));  if (!csb.isEmpty()) {    value=value + "&" + csb;  }} @AT@ 34481 @LENGTH@ 86


INS IfStatement@@if (metadataAuthMethods.contains(com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod.NONE)) {  return ClientAuthenticationMethod.NONE;} @TO@ MethodDeclaration@@private, static, ClientAuthenticationMethod, MethodName:getClientAuthenticationMethod, String issuer, List<com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod> metadataAuthMethods,  @AT@ 5750 @LENGTH@ 144
---INS MethodInvocation@@metadataAuthMethods.contains(com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod.NONE) @TO@ IfStatement@@if (metadataAuthMethods.contains(com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod.NONE)) {  return ClientAuthenticationMethod.NONE;} @AT@ 5754 @LENGTH@ 90
------INS SimpleName@@Name:metadataAuthMethods @TO@ MethodInvocation@@metadataAuthMethods.contains(com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod.NONE) @AT@ 5754 @LENGTH@ 19
------INS SimpleName@@MethodName:contains:[com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod.NONE] @TO@ MethodInvocation@@metadataAuthMethods.contains(com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod.NONE) @AT@ 5774 @LENGTH@ 70
---------INS QualifiedName@@com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod.NONE @TO@ SimpleName@@MethodName:contains:[com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod.NONE] @AT@ 5783 @LENGTH@ 60
------------INS QualifiedName@@com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod @TO@ QualifiedName@@com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod.NONE @AT@ 5783 @LENGTH@ 55
---------------INS QualifiedName@@com.nimbusds.oauth2.sdk.auth @TO@ QualifiedName@@com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod @AT@ 5783 @LENGTH@ 28
------------------INS QualifiedName@@com.nimbusds.oauth2.sdk @TO@ QualifiedName@@com.nimbusds.oauth2.sdk.auth @AT@ 5783 @LENGTH@ 23
---------------------INS QualifiedName@@com.nimbusds.oauth2 @TO@ QualifiedName@@com.nimbusds.oauth2.sdk @AT@ 5783 @LENGTH@ 19
------------------------INS QualifiedName@@com.nimbusds @TO@ QualifiedName@@com.nimbusds.oauth2 @AT@ 5783 @LENGTH@ 12
---------------------------INS SimpleName@@com @TO@ QualifiedName@@com.nimbusds @AT@ 5783 @LENGTH@ 3
---------------------------INS SimpleName@@nimbusds @TO@ QualifiedName@@com.nimbusds @AT@ 5787 @LENGTH@ 8
------------------------INS SimpleName@@oauth2 @TO@ QualifiedName@@com.nimbusds.oauth2 @AT@ 5796 @LENGTH@ 6
---------------------INS SimpleName@@sdk @TO@ QualifiedName@@com.nimbusds.oauth2.sdk @AT@ 5803 @LENGTH@ 3
------------------INS SimpleName@@auth @TO@ QualifiedName@@com.nimbusds.oauth2.sdk.auth @AT@ 5807 @LENGTH@ 4
---------------INS SimpleName@@ClientAuthenticationMethod @TO@ QualifiedName@@com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod @AT@ 5812 @LENGTH@ 26
------------INS SimpleName@@NONE @TO@ QualifiedName@@com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod.NONE @AT@ 5839 @LENGTH@ 4
---INS Block@@ThenBody:{  return ClientAuthenticationMethod.NONE;} @TO@ IfStatement@@if (metadataAuthMethods.contains(com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod.NONE)) {  return ClientAuthenticationMethod.NONE;} @AT@ 5846 @LENGTH@ 48
------INS ReturnStatement@@QualifiedName:ClientAuthenticationMethod.NONE @TO@ Block@@ThenBody:{  return ClientAuthenticationMethod.NONE;} @AT@ 5851 @LENGTH@ 39
---------INS QualifiedName@@ClientAuthenticationMethod.NONE @TO@ ReturnStatement@@QualifiedName:ClientAuthenticationMethod.NONE @AT@ 5858 @LENGTH@ 31
------------INS SimpleName@@ClientAuthenticationMethod @TO@ QualifiedName@@ClientAuthenticationMethod.NONE @AT@ 5858 @LENGTH@ 26
------------INS SimpleName@@NONE @TO@ QualifiedName@@ClientAuthenticationMethod.NONE @AT@ 5885 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:buildWhenScopesContainASpaceThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[public]ClientRegistrationTests,  @AT@ 22487 @LENGTH@ 257
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:buildWhenScopesContainASpaceThenThrowIllegalArgumentException,  @AT@ 22487 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:buildWhenScopesContainASpaceThenThrowIllegalArgumentException,  @AT@ 22494 @LENGTH@ 4
---INS SimpleName@@MethodName:buildWhenScopesContainASpaceThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:buildWhenScopesContainASpaceThenThrowIllegalArgumentException,  @AT@ 22499 @LENGTH@ 61
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> TestClientRegistrations.clientCredentials().scope("openid profile email").build()).isInstanceOf(IllegalArgumentException.class) @TO@ MethodDeclaration@@public, void, MethodName:buildWhenScopesContainASpaceThenThrowIllegalArgumentException,  @AT@ 22567 @LENGTH@ 174
------INS MethodInvocation@@assertThatThrownBy(() -> TestClientRegistrations.clientCredentials().scope("openid profile email").build()).isInstanceOf(IllegalArgumentException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> TestClientRegistrations.clientCredentials().scope("openid profile email").build()).isInstanceOf(IllegalArgumentException.class) @AT@ 22567 @LENGTH@ 173
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> TestClientRegistrations.clientCredentials().scope("openid profile email").build()] @TO@ MethodInvocation@@assertThatThrownBy(() -> TestClientRegistrations.clientCredentials().scope("openid profile email").build()).isInstanceOf(IllegalArgumentException.class) @AT@ 22567 @LENGTH@ 128
------------INS LambdaExpression@@() -> TestClientRegistrations.clientCredentials().scope("openid profile email").build() @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> TestClientRegistrations.clientCredentials().scope("openid profile email").build()] @AT@ 22586 @LENGTH@ 105
---------------INS MethodInvocation@@TestClientRegistrations.clientCredentials().scope("openid profile email").build() @TO@ LambdaExpression@@() -> TestClientRegistrations.clientCredentials().scope("openid profile email").build() @AT@ 22596 @LENGTH@ 95
------------------INS MethodInvocation@@MethodName:scope:["openid profile email"] @TO@ MethodInvocation@@TestClientRegistrations.clientCredentials().scope("openid profile email").build() @AT@ 22596 @LENGTH@ 80
---------------------INS StringLiteral@@"openid profile email" @TO@ MethodInvocation@@MethodName:scope:["openid profile email"] @AT@ 22653 @LENGTH@ 22
------------------INS MethodInvocation@@MethodName:clientCredentials:[] @TO@ MethodInvocation@@TestClientRegistrations.clientCredentials().scope("openid profile email").build() @AT@ 22596 @LENGTH@ 43
------------------INS SimpleName@@Name:TestClientRegistrations @TO@ MethodInvocation@@TestClientRegistrations.clientCredentials().scope("openid profile email").build() @AT@ 22596 @LENGTH@ 23
------------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@TestClientRegistrations.clientCredentials().scope("openid profile email").build() @AT@ 22684 @LENGTH@ 7
---------INS SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> TestClientRegistrations.clientCredentials().scope("openid profile email").build()).isInstanceOf(IllegalArgumentException.class) @AT@ 22696 @LENGTH@ 44
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 22709 @LENGTH@ 30


UPD TryStatement@@try {  if (isTableCacheDirty.compareAndSet(true,false)) {    LOG.debug("Skipping table cache update; the table list we have is dirty.");    return;  }  Map<String,TableWrapper> newCacheForDB=new TreeMap<>();  for (  Table tbl : tables) {    String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());    TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));    if (tblWrapper != null) {      tblWrapper.updateTableObj(tbl,this);    } else {      tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);    }    newCacheForDB.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);  }  cacheLock.writeLock().lock();  Iterator<Entry<String,TableWrapper>> entryIterator=tableCache.entrySet().iterator();  while (entryIterator.hasNext()) {    String key=entryIterator.next().getKey();    if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {      entryIterator.remove();    }  }  tableCache.putAll(newCacheForDB);}  finally {  cacheLock.writeLock().unlock();} @TO@ try {  cacheLock.writeLock().lock();  if (isTableCacheDirty.compareAndSet(true,false)) {    LOG.debug("Skipping table cache update; the table list we have is dirty.");    return;  }  Map<String,TableWrapper> newTableCache=new HashMap<>();  for (  Table tbl : tables) {    String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());    TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));    if (tblWrapper != null) {      tblWrapper.updateTableObj(tbl,this);    } else {      tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);    }    newTableCache.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);  }  tableCache.clear();  tableCache=newTableCache;}  finally {  cacheLock.writeLock().unlock();} @AT@ 55428 @LENGTH@ 1194
---UPD VariableDeclarationStatement@@Map<String,TableWrapper> newCacheForDB=new TreeMap<>(); @TO@ Map<String,TableWrapper> newTableCache=new HashMap<>(); @AT@ 55606 @LENGTH@ 58
------UPD VariableDeclarationFragment@@newCacheForDB=new TreeMap<>() @TO@ newTableCache=new HashMap<>() @AT@ 55632 @LENGTH@ 31
---------UPD SimpleName@@newCacheForDB @TO@ newTableCache @AT@ 55632 @LENGTH@ 13
---------UPD ClassInstanceCreation@@TreeMap<>[] @TO@ HashMap<>[] @AT@ 55648 @LENGTH@ 15
------------UPD ParameterizedType@@TreeMap<> @TO@ HashMap<> @AT@ 55652 @LENGTH@ 9
---------------UPD SimpleType@@TreeMap @TO@ HashMap @AT@ 55652 @LENGTH@ 7
---UPD EnhancedForStatement@@for (Table tbl : tables) {  String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());  TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));  if (tblWrapper != null) {    tblWrapper.updateTableObj(tbl,this);  } else {    tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);  }  newCacheForDB.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);} @TO@ for (Table tbl : tables) {  String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());  TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));  if (tblWrapper != null) {    tblWrapper.updateTableObj(tbl,this);  } else {    tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);  }  newTableCache.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);} @AT@ 55671 @LENGTH@ 488
------UPD ExpressionStatement@@MethodInvocation:newCacheForDB.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper) @TO@ MethodInvocation:newTableCache.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper) @AT@ 56069 @LENGTH@ 82
---------UPD MethodInvocation@@newCacheForDB.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper) @TO@ newTableCache.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper) @AT@ 56069 @LENGTH@ 81
------------UPD SimpleName@@Name:newCacheForDB @TO@ Name:newTableCache @AT@ 56069 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:tableCache.clear() @TO@ TryStatement@@try {  if (isTableCacheDirty.compareAndSet(true,false)) {    LOG.debug("Skipping table cache update; the table list we have is dirty.");    return;  }  Map<String,TableWrapper> newCacheForDB=new TreeMap<>();  for (  Table tbl : tables) {    String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());    TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));    if (tblWrapper != null) {      tblWrapper.updateTableObj(tbl,this);    } else {      tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);    }    newCacheForDB.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);  }  cacheLock.writeLock().lock();  Iterator<Entry<String,TableWrapper>> entryIterator=tableCache.entrySet().iterator();  while (entryIterator.hasNext()) {    String key=entryIterator.next().getKey();    if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {      entryIterator.remove();    }  }  tableCache.putAll(newCacheForDB);}  finally {  cacheLock.writeLock().unlock();} @AT@ 56164 @LENGTH@ 19
------MOV MethodInvocation@@entryIterator.remove() @TO@ ExpressionStatement@@MethodInvocation:tableCache.clear() @AT@ 56481 @LENGTH@ 22
---MOV ExpressionStatement@@MethodInvocation:cacheLock.writeLock().lock() @TO@ TryStatement@@try {  if (isTableCacheDirty.compareAndSet(true,false)) {    LOG.debug("Skipping table cache update; the table list we have is dirty.");    return;  }  Map<String,TableWrapper> newCacheForDB=new TreeMap<>();  for (  Table tbl : tables) {    String tblName=StringUtils.normalizeIdentifier(tbl.getTableName());    TableWrapper tblWrapper=tableCache.get(CacheUtils.buildTableKey(catName,dbName,tblName));    if (tblWrapper != null) {      tblWrapper.updateTableObj(tbl,this);    } else {      tblWrapper=createTableWrapper(catName,dbName,tblName,tbl);    }    newCacheForDB.put(CacheUtils.buildTableKey(catName,dbName,tblName),tblWrapper);  }  cacheLock.writeLock().lock();  Iterator<Entry<String,TableWrapper>> entryIterator=tableCache.entrySet().iterator();  while (entryIterator.hasNext()) {    String key=entryIterator.next().getKey();    if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {      entryIterator.remove();    }  }  tableCache.putAll(newCacheForDB);}  finally {  cacheLock.writeLock().unlock();} @AT@ 56166 @LENGTH@ 29
---DEL VariableDeclarationStatement@@Iterator<Entry<String,TableWrapper>> entryIterator=tableCache.entrySet().iterator(); @AT@ 56202 @LENGTH@ 87
------DEL ParameterizedType@@Iterator<Entry<String,TableWrapper>> @AT@ 56202 @LENGTH@ 37
---------DEL SimpleType@@Iterator @AT@ 56202 @LENGTH@ 8
---------DEL ParameterizedType@@Entry<String,TableWrapper> @AT@ 56211 @LENGTH@ 27
------------DEL SimpleType@@Entry @AT@ 56211 @LENGTH@ 5
------------DEL SimpleType@@String @AT@ 56217 @LENGTH@ 6
------------DEL SimpleType@@TableWrapper @AT@ 56225 @LENGTH@ 12
------DEL VariableDeclarationFragment@@entryIterator=tableCache.entrySet().iterator() @AT@ 56240 @LENGTH@ 48
---------DEL SimpleName@@entryIterator @AT@ 56240 @LENGTH@ 13
---------DEL MethodInvocation@@tableCache.entrySet().iterator() @AT@ 56256 @LENGTH@ 32
------------DEL MethodInvocation@@MethodName:entrySet:[] @AT@ 56256 @LENGTH@ 21
------------DEL SimpleName@@Name:tableCache @AT@ 56256 @LENGTH@ 10
------------DEL SimpleName@@MethodName:iterator:[] @AT@ 56278 @LENGTH@ 10
---DEL WhileStatement@@while (entryIterator.hasNext()) {  String key=entryIterator.next().getKey();  if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {    entryIterator.remove();  }} @AT@ 56296 @LENGTH@ 226
------DEL MethodInvocation@@entryIterator.hasNext() @AT@ 56303 @LENGTH@ 23
---------DEL SimpleName@@Name:entryIterator @AT@ 56303 @LENGTH@ 13
---------DEL SimpleName@@MethodName:hasNext:[] @AT@ 56317 @LENGTH@ 9
------DEL Block@@WhileBody:{  String key=entryIterator.next().getKey();  if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {    entryIterator.remove();  }} @AT@ 56328 @LENGTH@ 194
---------DEL VariableDeclarationStatement@@String key=entryIterator.next().getKey(); @AT@ 56338 @LENGTH@ 43
------------DEL SimpleType@@String @AT@ 56338 @LENGTH@ 6
------------DEL VariableDeclarationFragment@@key=entryIterator.next().getKey() @AT@ 56345 @LENGTH@ 35
---------------DEL SimpleName@@key @AT@ 56345 @LENGTH@ 3
---------------DEL MethodInvocation@@entryIterator.next().getKey() @AT@ 56351 @LENGTH@ 29
------------------DEL MethodInvocation@@MethodName:next:[] @AT@ 56351 @LENGTH@ 20
------------------DEL SimpleName@@Name:entryIterator @AT@ 56351 @LENGTH@ 13
------------------DEL SimpleName@@MethodName:getKey:[] @AT@ 56372 @LENGTH@ 8
---------DEL IfStatement@@if (key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName))) {  entryIterator.remove();} @AT@ 56390 @LENGTH@ 124
------------DEL MethodInvocation@@key.startsWith(CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName)) @AT@ 56394 @LENGTH@ 73
---------------DEL SimpleName@@Name:key @AT@ 56394 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:startsWith:[CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName)] @AT@ 56398 @LENGTH@ 69
------------------DEL MethodInvocation@@CacheUtils.buildDbKeyWithDelimiterSuffix(catName,dbName) @AT@ 56409 @LENGTH@ 57
---------------------DEL SimpleName@@Name:CacheUtils @AT@ 56409 @LENGTH@ 10
---------------------DEL SimpleName@@MethodName:buildDbKeyWithDelimiterSuffix:[catName, dbName] @AT@ 56420 @LENGTH@ 46
------------------------DEL SimpleName@@catName @AT@ 56450 @LENGTH@ 7
------------------------DEL SimpleName@@dbName @AT@ 56459 @LENGTH@ 6
------------DEL Block@@ThenBody:{  entryIterator.remove();} @AT@ 56469 @LENGTH@ 45
---------------DEL ExpressionStatement@@MethodInvocation:entryIterator.remove() @AT@ 56481 @LENGTH@ 23
---UPD ExpressionStatement@@MethodInvocation:tableCache.putAll(newCacheForDB) @TO@ Assignment:tableCache=newTableCache @AT@ 56529 @LENGTH@ 33
------INS Assignment@@tableCache=newTableCache @TO@ ExpressionStatement@@MethodInvocation:tableCache.putAll(newCacheForDB) @AT@ 56190 @LENGTH@ 26
---------INS SimpleName@@tableCache @TO@ Assignment@@tableCache=newTableCache @AT@ 56190 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@tableCache=newTableCache @AT@ 56200 @LENGTH@ 1
---------INS SimpleName@@newTableCache @TO@ Assignment@@tableCache=newTableCache @AT@ 56203 @LENGTH@ 13
------DEL MethodInvocation@@tableCache.putAll(newCacheForDB) @AT@ 56529 @LENGTH@ 32
---------DEL SimpleName@@Name:tableCache @AT@ 56529 @LENGTH@ 10
---------DEL SimpleName@@MethodName:putAll:[newCacheForDB] @AT@ 56540 @LENGTH@ 21
------------DEL SimpleName@@newCacheForDB @AT@ 56547 @LENGTH@ 13


DEL IfStatement@@if (IBMJDK16) {  final String preSub="DualTreeBidiMap2Test.bulkTestSubMap.";  final String preTail="DualTreeBidiMap2Test.bulkTestTailMap.";  return new String[]{recursiveTest,preSub + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSub + "bulkTestMapValues.testCollectionIteratorRemove",preTail + "testMapRemove",preTail + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTail + "bulkTestMapEntrySet.testCollectionRemoveAll",preTail + "bulkTestMapKeySet.testCollectionIteratorRemove",preTail + "bulkTestMapKeySet.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionClear",preTail + "bulkTestMapValues.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionRetainAll"};} @AT@ 6229 @LENGTH@ 1000
---DEL SimpleName@@IBMJDK16 @AT@ 6233 @LENGTH@ 8
---DEL Block@@ThenBody:{  final String preSub="DualTreeBidiMap2Test.bulkTestSubMap.";  final String preTail="DualTreeBidiMap2Test.bulkTestTailMap.";  return new String[]{recursiveTest,preSub + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSub + "bulkTestMapValues.testCollectionIteratorRemove",preTail + "testMapRemove",preTail + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTail + "bulkTestMapEntrySet.testCollectionRemoveAll",preTail + "bulkTestMapKeySet.testCollectionIteratorRemove",preTail + "bulkTestMapKeySet.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionClear",preTail + "bulkTestMapValues.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionRetainAll"};} @AT@ 6243 @LENGTH@ 986
------DEL VariableDeclarationStatement@@final String preSub="DualTreeBidiMap2Test.bulkTestSubMap."; @AT@ 6257 @LENGTH@ 61
---------DEL Modifier@@final @AT@ 6257 @LENGTH@ 5
---------DEL SimpleType@@String @AT@ 6263 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@preSub="DualTreeBidiMap2Test.bulkTestSubMap." @AT@ 6270 @LENGTH@ 47
------------DEL SimpleName@@preSub @AT@ 6270 @LENGTH@ 6
------------DEL StringLiteral@@"DualTreeBidiMap2Test.bulkTestSubMap." @AT@ 6279 @LENGTH@ 38
------DEL VariableDeclarationStatement@@final String preTail="DualTreeBidiMap2Test.bulkTestTailMap."; @AT@ 6331 @LENGTH@ 63
---------DEL Modifier@@final @AT@ 6331 @LENGTH@ 5
---------DEL SimpleType@@String @AT@ 6337 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@preTail="DualTreeBidiMap2Test.bulkTestTailMap." @AT@ 6344 @LENGTH@ 49
------------DEL SimpleName@@preTail @AT@ 6344 @LENGTH@ 7
------------DEL StringLiteral@@"DualTreeBidiMap2Test.bulkTestTailMap." @AT@ 6354 @LENGTH@ 39
------DEL ReturnStatement@@ArrayCreation:new String[]{recursiveTest,preSub + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSub + "bulkTestMapValues.testCollectionIteratorRemove",preTail + "testMapRemove",preTail + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTail + "bulkTestMapEntrySet.testCollectionRemoveAll",preTail + "bulkTestMapKeySet.testCollectionIteratorRemove",preTail + "bulkTestMapKeySet.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionClear",preTail + "bulkTestMapValues.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionRetainAll"} @AT@ 6407 @LENGTH@ 812
---------DEL ArrayCreation@@new String[]{recursiveTest,preSub + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSub + "bulkTestMapValues.testCollectionIteratorRemove",preTail + "testMapRemove",preTail + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTail + "bulkTestMapEntrySet.testCollectionRemoveAll",preTail + "bulkTestMapKeySet.testCollectionIteratorRemove",preTail + "bulkTestMapKeySet.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionClear",preTail + "bulkTestMapValues.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionRetainAll"} @AT@ 6414 @LENGTH@ 804
------------DEL ArrayType@@String[] @AT@ 6418 @LENGTH@ 8
---------------DEL SimpleType@@String @AT@ 6418 @LENGTH@ 6
------------DEL ArrayInitializer@@{recursiveTest,preSub + "bulkTestMapEntrySet.testCollectionIteratorRemove",preSub + "bulkTestMapValues.testCollectionIteratorRemove",preTail + "testMapRemove",preTail + "bulkTestMapEntrySet.testCollectionIteratorRemove",preTail + "bulkTestMapEntrySet.testCollectionRemoveAll",preTail + "bulkTestMapKeySet.testCollectionIteratorRemove",preTail + "bulkTestMapKeySet.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionClear",preTail + "bulkTestMapValues.testCollectionRemoveAll",preTail + "bulkTestMapValues.testCollectionRetainAll"} @AT@ 6427 @LENGTH@ 791
---------------DEL SimpleName@@recursiveTest @AT@ 6449 @LENGTH@ 13
---------------DEL InfixExpression@@preSub + "bulkTestMapEntrySet.testCollectionIteratorRemove" @AT@ 6484 @LENGTH@ 59
------------------DEL SimpleName@@preSub @AT@ 6484 @LENGTH@ 6
------------------DEL Operator@@+ @AT@ 6490 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapEntrySet.testCollectionIteratorRemove" @AT@ 6493 @LENGTH@ 50
---------------DEL InfixExpression@@preSub + "bulkTestMapValues.testCollectionIteratorRemove" @AT@ 6565 @LENGTH@ 57
------------------DEL SimpleName@@preSub @AT@ 6565 @LENGTH@ 6
------------------DEL Operator@@+ @AT@ 6571 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapValues.testCollectionIteratorRemove" @AT@ 6574 @LENGTH@ 48
---------------DEL InfixExpression@@preTail + "testMapRemove" @AT@ 6644 @LENGTH@ 25
------------------DEL SimpleName@@preTail @AT@ 6644 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 6651 @LENGTH@ 1
------------------DEL StringLiteral@@"testMapRemove" @AT@ 6654 @LENGTH@ 15
---------------DEL InfixExpression@@preTail + "bulkTestMapEntrySet.testCollectionIteratorRemove" @AT@ 6691 @LENGTH@ 60
------------------DEL SimpleName@@preTail @AT@ 6691 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 6698 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapEntrySet.testCollectionIteratorRemove" @AT@ 6701 @LENGTH@ 50
---------------DEL InfixExpression@@preTail + "bulkTestMapEntrySet.testCollectionRemoveAll" @AT@ 6773 @LENGTH@ 55
------------------DEL SimpleName@@preTail @AT@ 6773 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 6780 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapEntrySet.testCollectionRemoveAll" @AT@ 6783 @LENGTH@ 45
---------------DEL InfixExpression@@preTail + "bulkTestMapKeySet.testCollectionIteratorRemove" @AT@ 6850 @LENGTH@ 58
------------------DEL SimpleName@@preTail @AT@ 6850 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 6857 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapKeySet.testCollectionIteratorRemove" @AT@ 6860 @LENGTH@ 48
---------------DEL InfixExpression@@preTail + "bulkTestMapKeySet.testCollectionRemoveAll" @AT@ 6930 @LENGTH@ 53
------------------DEL SimpleName@@preTail @AT@ 6930 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 6937 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapKeySet.testCollectionRemoveAll" @AT@ 6940 @LENGTH@ 43
---------------DEL InfixExpression@@preTail + "bulkTestMapValues.testCollectionClear" @AT@ 7005 @LENGTH@ 49
------------------DEL SimpleName@@preTail @AT@ 7005 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 7012 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapValues.testCollectionClear" @AT@ 7015 @LENGTH@ 39
---------------DEL InfixExpression@@preTail + "bulkTestMapValues.testCollectionRemoveAll" @AT@ 7076 @LENGTH@ 53
------------------DEL SimpleName@@preTail @AT@ 7076 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 7083 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapValues.testCollectionRemoveAll" @AT@ 7086 @LENGTH@ 43
---------------DEL InfixExpression@@preTail + "bulkTestMapValues.testCollectionRetainAll" @AT@ 7151 @LENGTH@ 53
------------------DEL SimpleName@@preTail @AT@ 7151 @LENGTH@ 7
------------------DEL Operator@@+ @AT@ 7158 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestMapValues.testCollectionRetainAll" @AT@ 7161 @LENGTH@ 43


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 2143 @LENGTH@ 64
---DEL Modifier@@public @AT@ 2143 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 2150 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 2158 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 2188 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 2195 @LENGTH@ 5


UPD ReturnStatement@@InfixExpression:value != null && CR_OR_LF.matcher(value).find() @TO@ InfixExpression:value != null && (value.indexOf('\n') != -1 || value.indexOf('\r') != -1) @AT@ 2442 @LENGTH@ 55
---UPD InfixExpression@@value != null && CR_OR_LF.matcher(value).find() @TO@ value != null && (value.indexOf('\n') != -1 || value.indexOf('\r') != -1) @AT@ 2449 @LENGTH@ 47
------INS ParenthesizedExpression@@(value.indexOf('\n') != -1 || value.indexOf('\r') != -1) @TO@ InfixExpression@@value != null && CR_OR_LF.matcher(value).find() @AT@ 2389 @LENGTH@ 56
---------INS InfixExpression@@value.indexOf('\n') != -1 || value.indexOf('\r') != -1 @TO@ ParenthesizedExpression@@(value.indexOf('\n') != -1 || value.indexOf('\r') != -1) @AT@ 2390 @LENGTH@ 54
------------INS InfixExpression@@value.indexOf('\n') != -1 @TO@ InfixExpression@@value.indexOf('\n') != -1 || value.indexOf('\r') != -1 @AT@ 2390 @LENGTH@ 25
---------------INS MethodInvocation@@value.indexOf('\n') @TO@ InfixExpression@@value.indexOf('\n') != -1 @AT@ 2390 @LENGTH@ 19
------------------INS SimpleName@@MethodName:indexOf:['\n'] @TO@ MethodInvocation@@value.indexOf('\n') @AT@ 2396 @LENGTH@ 13
---------------------INS CharacterLiteral@@'\n' @TO@ SimpleName@@MethodName:indexOf:['\n'] @AT@ 2404 @LENGTH@ 4
------------------MOV SimpleName@@Name:CR_OR_LF @TO@ MethodInvocation@@value.indexOf('\n') @AT@ 2466 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@value.indexOf('\n') != -1 @AT@ 2409 @LENGTH@ 2
---------------INS PrefixExpression@@-1 @TO@ InfixExpression@@value.indexOf('\n') != -1 @AT@ 2413 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 2413 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 2414 @LENGTH@ 1
------------INS Operator@@|| @TO@ InfixExpression@@value.indexOf('\n') != -1 || value.indexOf('\r') != -1 @AT@ 2415 @LENGTH@ 2
------------INS InfixExpression@@value.indexOf('\r') != -1 @TO@ InfixExpression@@value.indexOf('\n') != -1 || value.indexOf('\r') != -1 @AT@ 2419 @LENGTH@ 25
---------------INS MethodInvocation@@value.indexOf('\r') @TO@ InfixExpression@@value.indexOf('\r') != -1 @AT@ 2419 @LENGTH@ 19
------------------MOV SimpleName@@value @TO@ MethodInvocation@@value.indexOf('\r') @AT@ 2483 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:find:[] @TO@ MethodInvocation@@value.indexOf('\r') @AT@ 2490 @LENGTH@ 6
---------------------INS CharacterLiteral@@'\r' @TO@ SimpleName@@MethodName:find:[] @AT@ 2433 @LENGTH@ 4
---------------------INS CharacterLiteral@@'\r' @TO@ SimpleName@@MethodName:find:[] @AT@ 2433 @LENGTH@ 4
---------------INS Operator@@!= @TO@ InfixExpression@@value.indexOf('\r') != -1 @AT@ 2438 @LENGTH@ 2
---------------INS PrefixExpression@@-1 @TO@ InfixExpression@@value.indexOf('\r') != -1 @AT@ 2442 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 2442 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 2443 @LENGTH@ 1
------DEL MethodInvocation@@CR_OR_LF.matcher(value).find() @AT@ 2466 @LENGTH@ 30
---------DEL MethodInvocation@@MethodName:matcher:[value] @AT@ 2466 @LENGTH@ 23


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.21.0.Final").dependency("org.drools:drools-compiler:7.21.0.Final").unitTestExpectedNumber(0).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.22.0.Final").dependency("org.drools:drools-compiler:7.22.0.Final").unitTestExpectedNumber(0).build() @AT@ 1441 @LENGTH@ 300
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.21.0.Final").dependency("org.drools:drools-compiler:7.21.0.Final").unitTestExpectedNumber(0).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.22.0.Final").dependency("org.drools:drools-compiler:7.22.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 292
------UPD MethodInvocation@@MethodName:dependency:["org.drools:drools-compiler:7.21.0.Final"] @TO@ MethodName:dependency:["org.drools:drools-compiler:7.22.0.Final"] @AT@ 1448 @LENGTH@ 224
---------UPD StringLiteral@@"org.drools:drools-compiler:7.21.0.Final" @TO@ "org.drools:drools-compiler:7.22.0.Final" @AT@ 1630 @LENGTH@ 41
------UPD MethodInvocation@@MethodName:dependency:["org.drools:drools-core:7.21.0.Final"] @TO@ MethodName:dependency:["org.drools:drools-core:7.22.0.Final"] @AT@ 1448 @LENGTH@ 153
---------UPD StringLiteral@@"org.drools:drools-core:7.21.0.Final" @TO@ "org.drools:drools-core:7.22.0.Final" @AT@ 1563 @LENGTH@ 37


UPD Block@@ElseBody:{  String[] tokens=syntax.split("[\\w.]+");  Matcher matcher=SYNTAX_PATTERN.matcher(originalSyntax);  List<String> options=new ArrayList<>();  while (matcher.find()) {    String s=matcher.group(1);    options.add(s);  }  syntax=syntax.replaceAll("\\{\\{","BEGINCAMELPLACEHOLDER");  syntax=syntax.replaceAll("\\}\\}","ENDCAMELPLACEHOLDER");  Matcher matcher2=SYNTAX_PATTERN.matcher(syntax);  List<String> options2=new ArrayList<>();  while (matcher2.find()) {    String s=matcher2.group(1);    s=s.replaceAll("BEGINCAMELPLACEHOLDER","\\{\\{");    s=s.replaceAll("ENDCAMELPLACEHOLDER","\\}\\}");    options2.add(s);  }  int range=0;  boolean first=true;  boolean hasQuestionmark=false;  for (int i=0; i < options.size(); i++) {    String key=options.get(i);    String key2=options2.get(i);    String token=null;    if (tokens.length > i) {      token=tokens[i];    }    boolean contains=properties.containsKey(key);    if (!contains) {      if (isPropertyRequired(rows,key)) {        String value=getPropertyDefaultValue(rows,key);        if (value != null) {          properties.put(key,value);          key2=value;        }      }    }    if (properties.containsKey(key)) {      if (!first && token != null) {        sb.append(token);      }      hasQuestionmark|=key.contains("?") || (token != null && token.contains("?"));      sb.append(key2);      first=false;    }    range++;  }  while (range < options2.size()) {    String token=null;    if (tokens.length > range) {      token=tokens[range];    }    String key2=options2.get(range);    sb.append(token);    sb.append(key2);    hasQuestionmark|=key2.contains("?") || (token != null && token.contains("?"));    range++;  }  if (!copy.isEmpty()) {    sb.append(hasQuestionmark ? ampersand : '?');    String query=createQueryString(copy,ampersand,encode);    sb.append(query);  }} @TO@ ElseBody:{  String[] tokens=SYNTAX_DASH_PATTERN.split(syntax);  Matcher matcher=SYNTAX_PATTERN.matcher(originalSyntax);  List<String> options=new ArrayList<>();  while (matcher.find()) {    String s=matcher.group(1);    options.add(s);  }  syntax=syntax.replaceAll("\\{\\{","BEGINCAMELPLACEHOLDER");  syntax=syntax.replaceAll("\\}\\}","ENDCAMELPLACEHOLDER");  Matcher matcher2=SYNTAX_DASH_PATTERN.matcher(syntax);  List<String> options2=new ArrayList<>();  while (matcher2.find()) {    String s=matcher2.group(1);    s=s.replaceAll("BEGINCAMELPLACEHOLDER","\\{\\{");    s=s.replaceAll("ENDCAMELPLACEHOLDER","\\}\\}");    options2.add(s);  }  int range=0;  boolean first=true;  boolean hasQuestionmark=false;  for (int i=0; i < options.size(); i++) {    String key=options.get(i);    String key2=options2.get(i);    String token=null;    if (tokens.length > i) {      token=tokens[i];    }    boolean contains=properties.containsKey(key);    if (!contains) {      if (isPropertyRequired(rows,key)) {        String value=getPropertyDefaultValue(rows,key);        if (value != null) {          properties.put(key,value);          key2=value;        }      }    }    if (properties.containsKey(key)) {      if (!first && token != null) {        sb.append(token);      }      hasQuestionmark|=key.contains("?") || (token != null && token.contains("?"));      sb.append(key2);      first=false;    }    range++;  }  while (range < options2.size()) {    String token=null;    if (tokens.length > range) {      token=tokens[range];    }    String key2=options2.get(range);    sb.append(token);    sb.append(key2);    hasQuestionmark|=key2.contains("?") || (token != null && token.contains("?"));    range++;  }  if (!copy.isEmpty()) {    sb.append(hasQuestionmark ? ampersand : '?');    String query=createQueryString(copy,ampersand,encode);    sb.append(query);  }} @AT@ 41283 @LENGTH@ 3588
---UPD VariableDeclarationStatement@@String[] tokens=syntax.split("[\\w.]+"); @TO@ String[] tokens=SYNTAX_DASH_PATTERN.split(syntax); @AT@ 41524 @LENGTH@ 42
------UPD VariableDeclarationFragment@@tokens=syntax.split("[\\w.]+") @TO@ tokens=SYNTAX_DASH_PATTERN.split(syntax) @AT@ 41533 @LENGTH@ 32
---------UPD MethodInvocation@@syntax.split("[\\w.]+") @TO@ SYNTAX_DASH_PATTERN.split(syntax) @AT@ 41542 @LENGTH@ 23
------------UPD SimpleName@@Name:syntax @TO@ Name:SYNTAX_DASH_PATTERN @AT@ 41542 @LENGTH@ 6
------------UPD SimpleName@@MethodName:split:["[\\w.]+"] @TO@ MethodName:split:[syntax] @AT@ 41549 @LENGTH@ 16
---------------DEL StringLiteral@@"[\\w.]+" @AT@ 41555 @LENGTH@ 9
---------------INS SimpleName@@syntax @TO@ SimpleName@@MethodName:split:["[\\w.]+"] @AT@ 41654 @LENGTH@ 6
---UPD VariableDeclarationStatement@@Matcher matcher2=SYNTAX_PATTERN.matcher(syntax); @TO@ Matcher matcher2=SYNTAX_DASH_PATTERN.matcher(syntax); @AT@ 42215 @LENGTH@ 50
------UPD VariableDeclarationFragment@@matcher2=SYNTAX_PATTERN.matcher(syntax) @TO@ matcher2=SYNTAX_DASH_PATTERN.matcher(syntax) @AT@ 42223 @LENGTH@ 41
---------UPD MethodInvocation@@SYNTAX_PATTERN.matcher(syntax) @TO@ SYNTAX_DASH_PATTERN.matcher(syntax) @AT@ 42234 @LENGTH@ 30
------------UPD SimpleName@@Name:SYNTAX_PATTERN @TO@ Name:SYNTAX_DASH_PATTERN @AT@ 42234 @LENGTH@ 14


MOV IfStatement@@if (input.available() == 0) {  return null;} @TO@ MethodDeclaration@@public, ArArchiveEntry, MethodName:getNextArEntry, IOException,  @AT@ 4468 @LENGTH@ 64


UPD ReturnStatement@@SuperMethodInvocation:super.createDataFormat(camelContext) @TO@ SuperMethodInvocation:super.doCreateDataFormat(camelContext) @AT@ 1811 @LENGTH@ 44
---UPD SuperMethodInvocation@@super.createDataFormat(camelContext) @TO@ super.doCreateDataFormat(camelContext) @AT@ 1818 @LENGTH@ 36
------UPD SimpleName@@MethodName:createDataFormat:[camelContext] @TO@ MethodName:doCreateDataFormat:[camelContext] @AT@ 1824 @LENGTH@ 16


INS FieldDeclaration@@private, static, final, int, [EXPECTED_SPRING_BATCH_METRICS=6] @TO@ TypeDeclaration@@[public]BatchMetricsTests,  @AT@ 2009 @LENGTH@ 59
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, int, [EXPECTED_SPRING_BATCH_METRICS=6] @AT@ 2009 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, int, [EXPECTED_SPRING_BATCH_METRICS=6] @AT@ 2017 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, int, [EXPECTED_SPRING_BATCH_METRICS=6] @AT@ 2024 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@private, static, final, int, [EXPECTED_SPRING_BATCH_METRICS=6] @AT@ 2030 @LENGTH@ 3
---INS VariableDeclarationFragment@@EXPECTED_SPRING_BATCH_METRICS=6 @TO@ FieldDeclaration@@private, static, final, int, [EXPECTED_SPRING_BATCH_METRICS=6] @AT@ 2034 @LENGTH@ 33
------INS SimpleName@@EXPECTED_SPRING_BATCH_METRICS @TO@ VariableDeclarationFragment@@EXPECTED_SPRING_BATCH_METRICS=6 @AT@ 2034 @LENGTH@ 29
------INS NumberLiteral@@6 @TO@ VariableDeclarationFragment@@EXPECTED_SPRING_BATCH_METRICS=6 @AT@ 2066 @LENGTH@ 1


UPD VariableDeclarationStatement@@Exchange exchange=template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=#x509HostnameVerifier",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @TO@ Exchange exchange=template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=#x509HostnameVerifier&sslContextParameters=#sslContextParameters",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @AT@ 2460 @LENGTH@ 256
---UPD VariableDeclarationFragment@@exchange=template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=#x509HostnameVerifier",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @TO@ exchange=template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=#x509HostnameVerifier&sslContextParameters=#sslContextParameters",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 2469 @LENGTH@ 246
------UPD MethodInvocation@@template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=#x509HostnameVerifier",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @TO@ template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=#x509HostnameVerifier&sslContextParameters=#sslContextParameters",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 2480 @LENGTH@ 235
---------UPD SimpleName@@MethodName:request:["https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=#x509HostnameVerifier", new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
] @TO@ MethodName:request:["https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=#x509HostnameVerifier&sslContextParameters=#sslContextParameters", new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
] @AT@ 2489 @LENGTH@ 226
------------UPD InfixExpression@@"https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=#x509HostnameVerifier" @TO@ "https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=#x509HostnameVerifier&sslContextParameters=#sslContextParameters" @AT@ 2497 @LENGTH@ 104
---------------UPD StringLiteral@@"/mail/?x509HostnameVerifier=#x509HostnameVerifier" @TO@ "/mail/?x509HostnameVerifier=#x509HostnameVerifier&sslContextParameters=#sslContextParameters" @AT@ 2550 @LENGTH@ 51


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1425 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1425 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1432 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1440 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1470 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1477 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @TO@ MethodDeclaration@@public, void, MethodName:testPropertiesSet, Exception,  @AT@ 1993 @LENGTH@ 79
---INS MethodInvocation@@when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @TO@ ExpressionStatement@@MethodInvocation:when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @AT@ 1993 @LENGTH@ 78
------INS MethodInvocation@@MethodName:when:[context.resolvePropertyPlaceholders(anyString())] @TO@ MethodInvocation@@when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @AT@ 1993 @LENGTH@ 54
---------INS MethodInvocation@@context.resolvePropertyPlaceholders(anyString()) @TO@ MethodInvocation@@MethodName:when:[context.resolvePropertyPlaceholders(anyString())] @AT@ 1998 @LENGTH@ 48
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.resolvePropertyPlaceholders(anyString()) @AT@ 1998 @LENGTH@ 7
------------INS SimpleName@@MethodName:resolvePropertyPlaceholders:[anyString()] @TO@ MethodInvocation@@context.resolvePropertyPlaceholders(anyString()) @AT@ 2006 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:anyString:[] @TO@ SimpleName@@MethodName:resolvePropertyPlaceholders:[anyString()] @AT@ 2034 @LENGTH@ 11
------INS SimpleName@@MethodName:then:[returnsFirstArg()] @TO@ MethodInvocation@@when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @AT@ 2048 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:returnsFirstArg:[] @TO@ SimpleName@@MethodName:then:[returnsFirstArg()] @AT@ 2053 @LENGTH@ 17


INS MethodDeclaration@@public, boolean, MethodName:isMap,  @TO@ TypeDeclaration@@[protected, static]Field,  @AT@ 25089 @LENGTH@ 86
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isMap,  @AT@ 25089 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isMap,  @AT@ 25096 @LENGTH@ 7
---INS SimpleName@@MethodName:isMap @TO@ MethodDeclaration@@public, boolean, MethodName:isMap,  @AT@ 25104 @LENGTH@ 5
---INS ReturnStatement@@InfixExpression:getProperty() != null && getProperty().isMap() @TO@ MethodDeclaration@@public, boolean, MethodName:isMap,  @AT@ 25117 @LENGTH@ 54
------INS InfixExpression@@getProperty() != null && getProperty().isMap() @TO@ ReturnStatement@@InfixExpression:getProperty() != null && getProperty().isMap() @AT@ 25124 @LENGTH@ 46
---------INS InfixExpression@@getProperty() != null @TO@ InfixExpression@@getProperty() != null && getProperty().isMap() @AT@ 25124 @LENGTH@ 21
------------INS MethodInvocation@@MethodName:getProperty:[] @TO@ InfixExpression@@getProperty() != null @AT@ 25124 @LENGTH@ 13
------------INS Operator@@!= @TO@ InfixExpression@@getProperty() != null @AT@ 25137 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@getProperty() != null @AT@ 25141 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@getProperty() != null && getProperty().isMap() @AT@ 25145 @LENGTH@ 2
---------INS MethodInvocation@@getProperty().isMap() @TO@ InfixExpression@@getProperty() != null && getProperty().isMap() @AT@ 25149 @LENGTH@ 21
------------INS MethodInvocation@@MethodName:getProperty:[] @TO@ MethodInvocation@@getProperty().isMap() @AT@ 25149 @LENGTH@ 13
------------INS SimpleName@@MethodName:isMap:[] @TO@ MethodInvocation@@getProperty().isMap() @AT@ 25163 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:checkWhenAnonymousAuthenticatedThenReturnFalse,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]AuthenticatedReactiveAuthorizationManagerTests,  @AT@ 2065 @LENGTH@ 306
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:checkWhenAnonymousAuthenticatedThenReturnFalse,  @AT@ 2065 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:checkWhenAnonymousAuthenticatedThenReturnFalse,  @AT@ 2072 @LENGTH@ 4
---INS SimpleName@@MethodName:checkWhenAnonymousAuthenticatedThenReturnFalse @TO@ MethodDeclaration@@public, void, MethodName:checkWhenAnonymousAuthenticatedThenReturnFalse,  @AT@ 2077 @LENGTH@ 46
---INS VariableDeclarationStatement@@AnonymousAuthenticationToken anonymousAuthenticationToken=mock(AnonymousAuthenticationToken.class); @TO@ MethodDeclaration@@public, void, MethodName:checkWhenAnonymousAuthenticatedThenReturnFalse,  @AT@ 2130 @LENGTH@ 101
------INS SimpleType@@AnonymousAuthenticationToken @TO@ VariableDeclarationStatement@@AnonymousAuthenticationToken anonymousAuthenticationToken=mock(AnonymousAuthenticationToken.class); @AT@ 2130 @LENGTH@ 28
------INS VariableDeclarationFragment@@anonymousAuthenticationToken=mock(AnonymousAuthenticationToken.class) @TO@ VariableDeclarationStatement@@AnonymousAuthenticationToken anonymousAuthenticationToken=mock(AnonymousAuthenticationToken.class); @AT@ 2159 @LENGTH@ 71
---------INS SimpleName@@anonymousAuthenticationToken @TO@ VariableDeclarationFragment@@anonymousAuthenticationToken=mock(AnonymousAuthenticationToken.class) @AT@ 2159 @LENGTH@ 28
---------INS MethodInvocation@@mock(AnonymousAuthenticationToken.class) @TO@ VariableDeclarationFragment@@anonymousAuthenticationToken=mock(AnonymousAuthenticationToken.class) @AT@ 2190 @LENGTH@ 40
------------INS SimpleName@@MethodName:mock:[AnonymousAuthenticationToken.class] @TO@ MethodInvocation@@mock(AnonymousAuthenticationToken.class) @AT@ 2190 @LENGTH@ 40
---------------INS TypeLiteral@@AnonymousAuthenticationToken.class @TO@ SimpleName@@MethodName:mock:[AnonymousAuthenticationToken.class] @AT@ 2195 @LENGTH@ 34
---INS VariableDeclarationStatement@@boolean granted=manager.check(Mono.just(anonymousAuthenticationToken),null).block().isGranted(); @TO@ MethodDeclaration@@public, void, MethodName:checkWhenAnonymousAuthenticatedThenReturnFalse,  @AT@ 2235 @LENGTH@ 99
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean granted=manager.check(Mono.just(anonymousAuthenticationToken),null).block().isGranted(); @AT@ 2235 @LENGTH@ 7
------INS VariableDeclarationFragment@@granted=manager.check(Mono.just(anonymousAuthenticationToken),null).block().isGranted() @TO@ VariableDeclarationStatement@@boolean granted=manager.check(Mono.just(anonymousAuthenticationToken),null).block().isGranted(); @AT@ 2243 @LENGTH@ 90
---------INS SimpleName@@granted @TO@ VariableDeclarationFragment@@granted=manager.check(Mono.just(anonymousAuthenticationToken),null).block().isGranted() @AT@ 2243 @LENGTH@ 7
---------INS MethodInvocation@@manager.check(Mono.just(anonymousAuthenticationToken),null).block().isGranted() @TO@ VariableDeclarationFragment@@granted=manager.check(Mono.just(anonymousAuthenticationToken),null).block().isGranted() @AT@ 2253 @LENGTH@ 80
------------INS MethodInvocation@@MethodName:block:[] @TO@ MethodInvocation@@manager.check(Mono.just(anonymousAuthenticationToken),null).block().isGranted() @AT@ 2253 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:check:[Mono.just(anonymousAuthenticationToken), null] @TO@ MethodInvocation@@manager.check(Mono.just(anonymousAuthenticationToken),null).block().isGranted() @AT@ 2253 @LENGTH@ 60
---------------INS MethodInvocation@@Mono.just(anonymousAuthenticationToken) @TO@ MethodInvocation@@MethodName:check:[Mono.just(anonymousAuthenticationToken), null] @AT@ 2267 @LENGTH@ 39
------------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.just(anonymousAuthenticationToken) @AT@ 2267 @LENGTH@ 4
------------------INS SimpleName@@MethodName:just:[anonymousAuthenticationToken] @TO@ MethodInvocation@@Mono.just(anonymousAuthenticationToken) @AT@ 2272 @LENGTH@ 34
---------------------INS SimpleName@@anonymousAuthenticationToken @TO@ SimpleName@@MethodName:just:[anonymousAuthenticationToken] @AT@ 2277 @LENGTH@ 28
---------------INS NullLiteral@@null @TO@ MethodInvocation@@MethodName:check:[Mono.just(anonymousAuthenticationToken), null] @AT@ 2308 @LENGTH@ 4
------------INS SimpleName@@Name:manager @TO@ MethodInvocation@@manager.check(Mono.just(anonymousAuthenticationToken),null).block().isGranted() @AT@ 2253 @LENGTH@ 7
------------INS SimpleName@@MethodName:isGranted:[] @TO@ MethodInvocation@@manager.check(Mono.just(anonymousAuthenticationToken),null).block().isGranted() @AT@ 2322 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(granted).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:checkWhenAnonymousAuthenticatedThenReturnFalse,  @AT@ 2338 @LENGTH@ 30
------INS MethodInvocation@@assertThat(granted).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(granted).isFalse() @AT@ 2338 @LENGTH@ 29
---------INS MethodInvocation@@MethodName:assertThat:[granted] @TO@ MethodInvocation@@assertThat(granted).isFalse() @AT@ 2338 @LENGTH@ 19
------------INS SimpleName@@granted @TO@ MethodInvocation@@MethodName:assertThat:[granted] @AT@ 2349 @LENGTH@ 7
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(granted).isFalse() @AT@ 2358 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:this.requestFactory=isServlet3() ? createServlet3Factory(rolePrefix) : new HttpServlet25RequestFactory(this.trustResolver,rolePrefix) @TO@ Assignment:this.requestFactory=createServlet3Factory(rolePrefix) @AT@ 7172 @LENGTH@ 141
---UPD Assignment@@this.requestFactory=isServlet3() ? createServlet3Factory(rolePrefix) : new HttpServlet25RequestFactory(this.trustResolver,rolePrefix) @TO@ this.requestFactory=createServlet3Factory(rolePrefix) @AT@ 7172 @LENGTH@ 140
------DEL ConditionalExpression@@isServlet3() ? createServlet3Factory(rolePrefix) : new HttpServlet25RequestFactory(this.trustResolver,rolePrefix) @AT@ 7194 @LENGTH@ 118
---------DEL MethodInvocation@@MethodName:isServlet3:[] @AT@ 7194 @LENGTH@ 12
---------DEL ClassInstanceCreation@@HttpServlet25RequestFactory[this.trustResolver, rolePrefix] @AT@ 7249 @LENGTH@ 63
------------DEL New@@new @AT@ 7249 @LENGTH@ 3
------------DEL SimpleType@@HttpServlet25RequestFactory @AT@ 7253 @LENGTH@ 27
------------DEL FieldAccess@@this.trustResolver @AT@ 7281 @LENGTH@ 18
---------------DEL ThisExpression@@this @AT@ 7281 @LENGTH@ 4
---------------DEL SimpleName@@trustResolver @AT@ 7286 @LENGTH@ 13
------------DEL SimpleName@@rolePrefix @AT@ 7301 @LENGTH@ 10
------MOV MethodInvocation@@createServlet3Factory(rolePrefix) @TO@ Assignment@@this.requestFactory=isServlet3() ? createServlet3Factory(rolePrefix) : new HttpServlet25RequestFactory(this.trustResolver,rolePrefix) @AT@ 7209 @LENGTH@ 33


UPD MethodDeclaration@@private, Mono<? extends OAuth2AuthorizedClient>, MethodName:clientCredentials, ClientRegistration clientRegistration, Authentication authentication, ServerWebExchange exchange,  @TO@ Mono<OAuth2AuthorizedClient>, MethodName:clientCredentials, ClientRegistration clientRegistration, Authentication authentication, ServerWebExchange exchange,  @AT@ 7071 @LENGTH@ 486
---DEL Modifier@@private @AT@ 7071 @LENGTH@ 7
---UPD ParameterizedType@@Mono<? extends OAuth2AuthorizedClient> @TO@ Mono<OAuth2AuthorizedClient> @AT@ 7079 @LENGTH@ 38
------INS SimpleType@@OAuth2AuthorizedClient @TO@ ParameterizedType@@Mono<? extends OAuth2AuthorizedClient> @AT@ 7076 @LENGTH@ 22
------DEL WildcardType@@? @AT@ 7084 @LENGTH@ 32


UPD IfStatement@@if (joinKeys.length < left || joinKeys[left].length == 0 || joinKeys.length < right || joinKeys[right].length == 0 || parents < left || parents < right) {  return null;} @TO@ if (joinKeys.length <= left || joinKeys[left].length == 0 || joinKeys.length <= right || joinKeys[right].length == 0 || parents < left || parents < right) {  return null;} @AT@ 10205 @LENGTH@ 247
---UPD InfixExpression@@joinKeys.length < left || joinKeys[left].length == 0 || joinKeys.length < right || joinKeys[right].length == 0 || parents < left || parents < right @TO@ joinKeys.length <= left || joinKeys[left].length == 0 || joinKeys.length <= right || joinKeys[right].length == 0 || parents < left || parents < right @AT@ 10209 @LENGTH@ 207
------UPD InfixExpression@@joinKeys.length < left || joinKeys[left].length == 0 || joinKeys.length < right || joinKeys[right].length == 0 || parents < left @TO@ joinKeys.length <= left || joinKeys[left].length == 0 || joinKeys.length <= right || joinKeys[right].length == 0 || parents < left @AT@ 10209 @LENGTH@ 176
---------UPD InfixExpression@@joinKeys.length < left || joinKeys[left].length == 0 || joinKeys.length < right || joinKeys[right].length == 0 @TO@ joinKeys.length <= left || joinKeys[left].length == 0 || joinKeys.length <= right || joinKeys[right].length == 0 @AT@ 10209 @LENGTH@ 146
------------UPD InfixExpression@@joinKeys.length < left || joinKeys[left].length == 0 || joinKeys.length < right @TO@ joinKeys.length <= left || joinKeys[left].length == 0 || joinKeys.length <= right @AT@ 10209 @LENGTH@ 103
---------------UPD InfixExpression@@joinKeys.length < left || joinKeys[left].length == 0 @TO@ joinKeys.length <= left || joinKeys[left].length == 0 @AT@ 10209 @LENGTH@ 64
------------------UPD InfixExpression@@joinKeys.length < left @TO@ joinKeys.length <= left @AT@ 10209 @LENGTH@ 22
---------------------UPD Operator@@< @TO@ <= @AT@ 10224 @LENGTH@ 1
---------------UPD InfixExpression@@joinKeys.length < right @TO@ joinKeys.length <= right @AT@ 10289 @LENGTH@ 23
------------------UPD Operator@@< @TO@ <= @AT@ 10304 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:type=ClassUtils.getUserClass(type) @TO@ Assignment:type=ProxyUtils.getUserClass(type) @AT@ 2383 @LENGTH@ 37
---UPD Assignment@@type=ClassUtils.getUserClass(type) @TO@ type=ProxyUtils.getUserClass(type) @AT@ 2383 @LENGTH@ 36
------UPD MethodInvocation@@ClassUtils.getUserClass(type) @TO@ ProxyUtils.getUserClass(type) @AT@ 2390 @LENGTH@ 29
---------UPD SimpleName@@Name:ClassUtils @TO@ Name:ProxyUtils @AT@ 2390 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:pattern=pattern.replaceFirst("\\$\\{file:name.noext\\}",FileUtil.stripExt(onlyName)) @TO@ Assignment:pattern=pattern.replaceFirst("\\$\\{file:name.noext\\}",FileUtil.stripExt(onlyName,true)) @AT@ 59951 @LENGTH@ 88
---UPD Assignment@@pattern=pattern.replaceFirst("\\$\\{file:name.noext\\}",FileUtil.stripExt(onlyName)) @TO@ pattern=pattern.replaceFirst("\\$\\{file:name.noext\\}",FileUtil.stripExt(onlyName,true)) @AT@ 59951 @LENGTH@ 87
------UPD MethodInvocation@@pattern.replaceFirst("\\$\\{file:name.noext\\}",FileUtil.stripExt(onlyName)) @TO@ pattern.replaceFirst("\\$\\{file:name.noext\\}",FileUtil.stripExt(onlyName,true)) @AT@ 59961 @LENGTH@ 77
---------UPD SimpleName@@MethodName:replaceFirst:["\\$\\{file:name.noext\\}", FileUtil.stripExt(onlyName)] @TO@ MethodName:replaceFirst:["\\$\\{file:name.noext\\}", FileUtil.stripExt(onlyName,true)] @AT@ 59969 @LENGTH@ 69
------------UPD MethodInvocation@@FileUtil.stripExt(onlyName) @TO@ FileUtil.stripExt(onlyName,true) @AT@ 60010 @LENGTH@ 27
---------------UPD SimpleName@@MethodName:stripExt:[onlyName] @TO@ MethodName:stripExt:[onlyName, true] @AT@ 60019 @LENGTH@ 18
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:stripExt:[onlyName] @AT@ 60038 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:LOG.warn("ValidWriteIdList for table {} not present in creation metadata, this should not happen") @TO@ MethodInvocation:LOG.warn("ValidWriteIdList for table {} not present in creation metadata, this should not happen",fullyQualifiedName) @AT@ 92342 @LENGTH@ 99
---UPD MethodInvocation@@LOG.warn("ValidWriteIdList for table {} not present in creation metadata, this should not happen") @TO@ LOG.warn("ValidWriteIdList for table {} not present in creation metadata, this should not happen",fullyQualifiedName) @AT@ 92342 @LENGTH@ 98
------UPD SimpleName@@MethodName:warn:["ValidWriteIdList for table {} not present in creation metadata, this should not happen"] @TO@ MethodName:warn:["ValidWriteIdList for table {} not present in creation metadata, this should not happen", fullyQualifiedName] @AT@ 92346 @LENGTH@ 94
---------INS SimpleName@@fullyQualifiedName @TO@ SimpleName@@MethodName:warn:["ValidWriteIdList for table {} not present in creation metadata, this should not happen"] @AT@ 92441 @LENGTH@ 18


UPD IfStatement@@if (partNames == null && partNames.isEmpty()) {  return null;} @TO@ if (partNames == null || partNames.isEmpty()) {  return null;} @AT@ 357247 @LENGTH@ 72
---UPD InfixExpression@@partNames == null && partNames.isEmpty() @TO@ partNames == null || partNames.isEmpty() @AT@ 357251 @LENGTH@ 40
------UPD Operator@@&& @TO@ || @AT@ 357268 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:buildWhenScopesContainAnInvalidCharacterThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[public]ClientRegistrationTests,  @AT@ 22754 @LENGTH@ 267
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:buildWhenScopesContainAnInvalidCharacterThenThrowIllegalArgumentException,  @AT@ 22754 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:buildWhenScopesContainAnInvalidCharacterThenThrowIllegalArgumentException,  @AT@ 22761 @LENGTH@ 4
---INS SimpleName@@MethodName:buildWhenScopesContainAnInvalidCharacterThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:buildWhenScopesContainAnInvalidCharacterThenThrowIllegalArgumentException,  @AT@ 22766 @LENGTH@ 73
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build()).isInstanceOf(IllegalArgumentException.class) @TO@ MethodDeclaration@@public, void, MethodName:buildWhenScopesContainAnInvalidCharacterThenThrowIllegalArgumentException,  @AT@ 22846 @LENGTH@ 172
------INS MethodInvocation@@assertThatThrownBy(() -> TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build()).isInstanceOf(IllegalArgumentException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build()).isInstanceOf(IllegalArgumentException.class) @AT@ 22846 @LENGTH@ 171
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build()] @TO@ MethodInvocation@@assertThatThrownBy(() -> TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build()).isInstanceOf(IllegalArgumentException.class) @AT@ 22846 @LENGTH@ 126
------------INS LambdaExpression@@() -> TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build() @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build()] @AT@ 22865 @LENGTH@ 103
---------------INS MethodInvocation@@TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build() @TO@ LambdaExpression@@() -> TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build() @AT@ 22875 @LENGTH@ 93
------------------INS MethodInvocation@@MethodName:scope:["an\"invalid\"scope"] @TO@ MethodInvocation@@TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build() @AT@ 22875 @LENGTH@ 78
---------------------INS StringLiteral@@"an\"invalid\"scope" @TO@ MethodInvocation@@MethodName:scope:["an\"invalid\"scope"] @AT@ 22932 @LENGTH@ 20
------------------INS MethodInvocation@@MethodName:clientCredentials:[] @TO@ MethodInvocation@@TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build() @AT@ 22875 @LENGTH@ 43
------------------INS SimpleName@@Name:TestClientRegistrations @TO@ MethodInvocation@@TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build() @AT@ 22875 @LENGTH@ 23
------------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build() @AT@ 22961 @LENGTH@ 7
---------INS SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> TestClientRegistrations.clientCredentials().scope("an\"invalid\"scope").build()).isInstanceOf(IllegalArgumentException.class) @AT@ 22973 @LENGTH@ 44
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 22986 @LENGTH@ 30


INS ExpressionStatement@@MethodInvocation:from("olingo2://read/Manufacturers('1')/Address?consumer.splitResult=true").to("mock:consumer-value") @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 21136 @LENGTH@ 123
---INS MethodInvocation@@from("olingo2://read/Manufacturers('1')/Address?consumer.splitResult=true").to("mock:consumer-value") @TO@ ExpressionStatement@@MethodInvocation:from("olingo2://read/Manufacturers('1')/Address?consumer.splitResult=true").to("mock:consumer-value") @AT@ 21136 @LENGTH@ 122
------INS MethodInvocation@@MethodName:from:["olingo2://read/Manufacturers('1')/Address?consumer.splitResult=true"] @TO@ MethodInvocation@@from("olingo2://read/Manufacturers('1')/Address?consumer.splitResult=true").to("mock:consumer-value") @AT@ 21136 @LENGTH@ 75
---------INS StringLiteral@@"olingo2://read/Manufacturers('1')/Address?consumer.splitResult=true" @TO@ MethodInvocation@@MethodName:from:["olingo2://read/Manufacturers('1')/Address?consumer.splitResult=true"] @AT@ 21141 @LENGTH@ 69
------INS SimpleName@@MethodName:to:["mock:consumer-value"] @TO@ MethodInvocation@@from("olingo2://read/Manufacturers('1')/Address?consumer.splitResult=true").to("mock:consumer-value") @AT@ 21233 @LENGTH@ 25
---------INS StringLiteral@@"mock:consumer-value" @TO@ SimpleName@@MethodName:to:["mock:consumer-value"] @AT@ 21236 @LENGTH@ 21


MOV ThrowStatement@@ClassInstanceCreation:new JsonParseException("JSON reader expected a string but found '%s'.",patternToken.getValue()) @TO@ MethodDeclaration@@private, String, MethodName:readStringFromExtendedJson,  @AT@ 41339 @LENGTH@ 103


UPD Block@@ThenBody:{  port=this.portMapper.lookupHttpsPort(port);  builder.port(port);} @TO@ ThenBody:{  builder.port(Optional.ofNullable(this.portMapper.lookupHttpsPort(port)).orElseThrow(() -> new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port")));} @AT@ 3753 @LENGTH@ 77
---DEL ExpressionStatement@@Assignment:port=this.portMapper.lookupHttpsPort(port) @AT@ 3758 @LENGTH@ 45
------DEL Assignment@@port=this.portMapper.lookupHttpsPort(port) @AT@ 3758 @LENGTH@ 44
---------DEL SimpleName@@port @AT@ 3758 @LENGTH@ 4
---------DEL Operator@@= @AT@ 3762 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:builder.port(port) @TO@ MethodInvocation:builder.port(Optional.ofNullable(this.portMapper.lookupHttpsPort(port)).orElseThrow(() -> new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port"))) @AT@ 3807 @LENGTH@ 19
------UPD MethodInvocation@@builder.port(port) @TO@ builder.port(Optional.ofNullable(this.portMapper.lookupHttpsPort(port)).orElseThrow(() -> new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port"))) @AT@ 3807 @LENGTH@ 18
---------INS SimpleName@@MethodName:port:[Optional.ofNullable(this.portMapper.lookupHttpsPort(port)).orElseThrow(() -> new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port"))] @TO@ MethodInvocation@@builder.port(port) @AT@ 3793 @LENGTH@ 199
------------INS MethodInvocation@@Optional.ofNullable(this.portMapper.lookupHttpsPort(port)).orElseThrow(() -> new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port")) @TO@ SimpleName@@MethodName:port:[Optional.ofNullable(this.portMapper.lookupHttpsPort(port)).orElseThrow(() -> new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port"))] @AT@ 3798 @LENGTH@ 193
---------------INS MethodInvocation@@MethodName:ofNullable:[this.portMapper.lookupHttpsPort(port)] @TO@ MethodInvocation@@Optional.ofNullable(this.portMapper.lookupHttpsPort(port)).orElseThrow(() -> new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port")) @AT@ 3798 @LENGTH@ 58
------------------MOV MethodInvocation@@this.portMapper.lookupHttpsPort(port) @TO@ MethodInvocation@@MethodName:ofNullable:[this.portMapper.lookupHttpsPort(port)] @AT@ 3765 @LENGTH@ 37
---------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.ofNullable(this.portMapper.lookupHttpsPort(port)).orElseThrow(() -> new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port")) @AT@ 3798 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:port:[port] @TO@ MethodInvocation@@Optional.ofNullable(this.portMapper.lookupHttpsPort(port)).orElseThrow(() -> new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port")) @AT@ 3815 @LENGTH@ 10
------------------INS LambdaExpression@@() -> new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port") @TO@ SimpleName@@MethodName:port:[port] @AT@ 3879 @LENGTH@ 111
---------------------INS ClassInstanceCreation@@IllegalStateException["HTTP Port '" + port + "' does not have a corresponding HTTPS Port"] @TO@ LambdaExpression@@() -> new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port") @AT@ 3885 @LENGTH@ 105
------------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["HTTP Port '" + port + "' does not have a corresponding HTTPS Port"] @AT@ 3885 @LENGTH@ 3
------------------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["HTTP Port '" + port + "' does not have a corresponding HTTPS Port"] @AT@ 3889 @LENGTH@ 21
------------------------INS InfixExpression@@"HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @TO@ ClassInstanceCreation@@IllegalStateException["HTTP Port '" + port + "' does not have a corresponding HTTPS Port"] @AT@ 3922 @LENGTH@ 67
---------------------------INS StringLiteral@@"HTTP Port '" @TO@ InfixExpression@@"HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @AT@ 3922 @LENGTH@ 13
---------------------------INS Operator@@+ @TO@ InfixExpression@@"HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @AT@ 3935 @LENGTH@ 1
---------------------------INS SimpleName@@port @TO@ InfixExpression@@"HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @AT@ 3938 @LENGTH@ 4
---------------------------INS StringLiteral@@"' does not have a corresponding HTTPS Port" @TO@ InfixExpression@@"HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @AT@ 3945 @LENGTH@ 44
---------UPD SimpleName@@MethodName:port:[port] @TO@ MethodName:orElseThrow:[() -> new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port")] @AT@ 3815 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(getCamelContext().getTypeConverter(),config,options) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(getCamelContext(),config,options) @AT@ 3392 @LENGTH@ 90
---UPD MethodInvocation@@IntrospectionSupport.setProperties(getCamelContext().getTypeConverter(),config,options) @TO@ PropertyBindingSupport.bindProperties(getCamelContext(),config,options) @AT@ 3392 @LENGTH@ 89
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 3392 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[getCamelContext().getTypeConverter(), config, options] @TO@ MethodName:bindProperties:[getCamelContext(), config, options] @AT@ 3413 @LENGTH@ 68
---------DEL MethodInvocation@@getCamelContext().getTypeConverter() @AT@ 3427 @LENGTH@ 36
------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 3427 @LENGTH@ 17
------------DEL SimpleName@@MethodName:getTypeConverter:[] @AT@ 3445 @LENGTH@ 18
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:setProperties:[getCamelContext().getTypeConverter(), config, options] @AT@ 3486 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:setRetryTemplate, RetryTemplate retryTemplate,  @TO@ public, void, MethodName:setRetryTemplate, @Nullable RetryTemplate retryTemplate,  @AT@ 14657 @LENGTH@ 165
---UPD SingleVariableDeclaration@@RetryTemplate retryTemplate @TO@ @Nullable RetryTemplate retryTemplate @AT@ 14686 @LENGTH@ 27


UPD VariableDeclarationStatement@@Update update=mapped.updateWithoutId(); @TO@ MappedUpdate update=mapped.updateWithoutId(); @AT@ 53476 @LENGTH@ 41
---UPD SimpleType@@Update @TO@ MappedUpdate @AT@ 53476 @LENGTH@ 6


UPD VariableDeclarationStatement@@ByteBuffer bb=ByteBuffer.wrap(new byte[16]); @TO@ ByteBuffer bb=ByteBuffer.wrap(new byte[SIXTEEN]); @AT@ 12894 @LENGTH@ 46
---UPD VariableDeclarationFragment@@bb=ByteBuffer.wrap(new byte[16]) @TO@ bb=ByteBuffer.wrap(new byte[SIXTEEN]) @AT@ 12905 @LENGTH@ 34
------UPD MethodInvocation@@ByteBuffer.wrap(new byte[16]) @TO@ ByteBuffer.wrap(new byte[SIXTEEN]) @AT@ 12910 @LENGTH@ 29
---------UPD SimpleName@@MethodName:wrap:[new byte[16]] @TO@ MethodName:wrap:[new byte[SIXTEEN]] @AT@ 12921 @LENGTH@ 18
------------UPD ArrayCreation@@new byte[16] @TO@ new byte[SIXTEEN] @AT@ 12926 @LENGTH@ 12
---------------DEL NumberLiteral@@16 @AT@ 12935 @LENGTH@ 2
---------------INS SimpleName@@SIXTEEN @TO@ ArrayCreation@@new byte[16] @AT@ 13036 @LENGTH@ 7


INS MethodDeclaration@@public, AuthorizeExchangeSpec, MethodName:hasAnyRole, String... roles,  @TO@ TypeDeclaration@@[public, final]Access,  @AT@ 62923 @LENGTH@ 139
---INS Modifier@@public @TO@ MethodDeclaration@@public, AuthorizeExchangeSpec, MethodName:hasAnyRole, String... roles,  @AT@ 62923 @LENGTH@ 6
---INS SimpleType@@AuthorizeExchangeSpec @TO@ MethodDeclaration@@public, AuthorizeExchangeSpec, MethodName:hasAnyRole, String... roles,  @AT@ 62930 @LENGTH@ 21
---INS SimpleName@@MethodName:hasAnyRole @TO@ MethodDeclaration@@public, AuthorizeExchangeSpec, MethodName:hasAnyRole, String... roles,  @AT@ 62952 @LENGTH@ 10
---INS SingleVariableDeclaration@@String... roles @TO@ MethodDeclaration@@public, AuthorizeExchangeSpec, MethodName:hasAnyRole, String... roles,  @AT@ 62963 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... roles @AT@ 62963 @LENGTH@ 6
------INS SimpleName@@roles @TO@ SingleVariableDeclaration@@String... roles @AT@ 62973 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:access(AuthorityReactiveAuthorizationManager.hasAnyRole(roles)) @TO@ MethodDeclaration@@public, AuthorizeExchangeSpec, MethodName:hasAnyRole, String... roles,  @AT@ 62986 @LENGTH@ 71
------INS MethodInvocation@@access(AuthorityReactiveAuthorizationManager.hasAnyRole(roles)) @TO@ ReturnStatement@@MethodInvocation:access(AuthorityReactiveAuthorizationManager.hasAnyRole(roles)) @AT@ 62993 @LENGTH@ 63
---------INS SimpleName@@MethodName:access:[AuthorityReactiveAuthorizationManager.hasAnyRole(roles)] @TO@ MethodInvocation@@access(AuthorityReactiveAuthorizationManager.hasAnyRole(roles)) @AT@ 62993 @LENGTH@ 63
------------INS MethodInvocation@@AuthorityReactiveAuthorizationManager.hasAnyRole(roles) @TO@ SimpleName@@MethodName:access:[AuthorityReactiveAuthorizationManager.hasAnyRole(roles)] @AT@ 63000 @LENGTH@ 55
---------------INS SimpleName@@Name:AuthorityReactiveAuthorizationManager @TO@ MethodInvocation@@AuthorityReactiveAuthorizationManager.hasAnyRole(roles) @AT@ 63000 @LENGTH@ 37
---------------INS SimpleName@@MethodName:hasAnyRole:[roles] @TO@ MethodInvocation@@AuthorityReactiveAuthorizationManager.hasAnyRole(roles) @AT@ 63038 @LENGTH@ 17
------------------INS SimpleName@@roles @TO@ SimpleName@@MethodName:hasAnyRole:[roles] @AT@ 63049 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(sslcf,properties) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(getCamelContext(),sslcf,properties) @AT@ 5092 @LENGTH@ 54
---UPD MethodInvocation@@IntrospectionSupport.setProperties(sslcf,properties) @TO@ PropertyBindingSupport.bindProperties(getCamelContext(),sslcf,properties) @AT@ 5092 @LENGTH@ 53
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 5092 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[sslcf, properties] @TO@ MethodName:bindProperties:[getCamelContext(), sslcf, properties] @AT@ 5113 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:setProperties:[sslcf, properties] @AT@ 5132 @LENGTH@ 17


UPD MethodDeclaration@@public, final, Message, MethodName:toMessage, Object object, @Nullable MessageProperties messageProperties, @Nullable Type genericType, MessageConversionException,  @TO@ public, final, Message, MethodName:toMessage, Object object, @Nullable MessageProperties messagePropertiesArg, @Nullable Type genericType, MessageConversionException,  @AT@ 1858 @LENGTH@ 541
---UPD SingleVariableDeclaration@@@Nullable MessageProperties messageProperties @TO@ @Nullable MessageProperties messagePropertiesArg @AT@ 1904 @LENGTH@ 45
------UPD SimpleName@@messageProperties @TO@ messagePropertiesArg @AT@ 1932 @LENGTH@ 17
---INS VariableDeclarationStatement@@MessageProperties messageProperties=messagePropertiesArg; @TO@ MethodDeclaration@@public, final, Message, MethodName:toMessage, Object object, @Nullable MessageProperties messageProperties, @Nullable Type genericType, MessageConversionException,  @AT@ 2027 @LENGTH@ 59
------INS SimpleType@@MessageProperties @TO@ VariableDeclarationStatement@@MessageProperties messageProperties=messagePropertiesArg; @AT@ 2027 @LENGTH@ 17
------INS VariableDeclarationFragment@@messageProperties=messagePropertiesArg @TO@ VariableDeclarationStatement@@MessageProperties messageProperties=messagePropertiesArg; @AT@ 2045 @LENGTH@ 40
---------INS SimpleName@@messageProperties @TO@ VariableDeclarationFragment@@messageProperties=messagePropertiesArg @AT@ 2045 @LENGTH@ 17
---------INS SimpleName@@messagePropertiesArg @TO@ VariableDeclarationFragment@@messageProperties=messagePropertiesArg @AT@ 2065 @LENGTH@ 20


UPD WhileStatement@@while (parser.nextToken() == JsonToken.START_OBJECT) {  while (parser.nextToken() == JsonToken.FIELD_NAME) {    String attributeName=parser.getCurrentName();    if (parser.nextToken() == JsonToken.START_ARRAY) {      while (parser.nextToken() != JsonToken.END_ARRAY) {      }    } else {      attributes.put(attributeName,parser.getValueAsString());    }  }  JwkDefinition jwkDefinition=null;  JwkDefinition.KeyType keyType=JwkDefinition.KeyType.fromValue(attributes.get(KEY_TYPE));  if (JwkDefinition.KeyType.RSA.equals(keyType)) {    jwkDefinition=this.createRsaJwkDefinition(attributes);  } else   if (JwkDefinition.KeyType.EC.equals(keyType)) {    jwkDefinition=this.createEllipticCurveJwkDefinition(attributes);  }  if (jwkDefinition != null) {    if (!jwkDefinitions.add(jwkDefinition)) {      throw new JwkException("Duplicate JWK found in Set: " + jwkDefinition.getKeyId() + " ("+ KEY_ID+ ")");    }  }  attributes.clear();} @TO@ while (parser.nextToken() == JsonToken.START_OBJECT) {  attributes.clear();  while (parser.nextToken() == JsonToken.FIELD_NAME) {    String attributeName=parser.getCurrentName();    if (parser.nextToken() == JsonToken.START_ARRAY) {      while (parser.nextToken() != JsonToken.END_ARRAY) {      }    } else {      attributes.put(attributeName,parser.getValueAsString());    }  }  JwkDefinition.PublicKeyUse publicKeyUse=JwkDefinition.PublicKeyUse.fromValue(attributes.get(PUBLIC_KEY_USE));  if (JwkDefinition.PublicKeyUse.ENC.equals(publicKeyUse)) {    continue;  }  JwkDefinition jwkDefinition=null;  JwkDefinition.KeyType keyType=JwkDefinition.KeyType.fromValue(attributes.get(KEY_TYPE));  if (JwkDefinition.KeyType.RSA.equals(keyType)) {    jwkDefinition=this.createRsaJwkDefinition(attributes);  } else   if (JwkDefinition.KeyType.EC.equals(keyType)) {    jwkDefinition=this.createEllipticCurveJwkDefinition(attributes);  }  if (jwkDefinition != null) {    if (!jwkDefinitions.add(jwkDefinition)) {      throw new JwkException("Duplicate JWK found in Set: " + jwkDefinition.getKeyId() + " ("+ KEY_ID+ ")");    }  }} @AT@ 3165 @LENGTH@ 1085
---UPD Block@@WhileBody:{  while (parser.nextToken() == JsonToken.FIELD_NAME) {    String attributeName=parser.getCurrentName();    if (parser.nextToken() == JsonToken.START_ARRAY) {      while (parser.nextToken() != JsonToken.END_ARRAY) {      }    } else {      attributes.put(attributeName,parser.getValueAsString());    }  }  JwkDefinition jwkDefinition=null;  JwkDefinition.KeyType keyType=JwkDefinition.KeyType.fromValue(attributes.get(KEY_TYPE));  if (JwkDefinition.KeyType.RSA.equals(keyType)) {    jwkDefinition=this.createRsaJwkDefinition(attributes);  } else   if (JwkDefinition.KeyType.EC.equals(keyType)) {    jwkDefinition=this.createEllipticCurveJwkDefinition(attributes);  }  if (jwkDefinition != null) {    if (!jwkDefinitions.add(jwkDefinition)) {      throw new JwkException("Duplicate JWK found in Set: " + jwkDefinition.getKeyId() + " ("+ KEY_ID+ ")");    }  }  attributes.clear();} @TO@ WhileBody:{  attributes.clear();  while (parser.nextToken() == JsonToken.FIELD_NAME) {    String attributeName=parser.getCurrentName();    if (parser.nextToken() == JsonToken.START_ARRAY) {      while (parser.nextToken() != JsonToken.END_ARRAY) {      }    } else {      attributes.put(attributeName,parser.getValueAsString());    }  }  JwkDefinition.PublicKeyUse publicKeyUse=JwkDefinition.PublicKeyUse.fromValue(attributes.get(PUBLIC_KEY_USE));  if (JwkDefinition.PublicKeyUse.ENC.equals(publicKeyUse)) {    continue;  }  JwkDefinition jwkDefinition=null;  JwkDefinition.KeyType keyType=JwkDefinition.KeyType.fromValue(attributes.get(KEY_TYPE));  if (JwkDefinition.KeyType.RSA.equals(keyType)) {    jwkDefinition=this.createRsaJwkDefinition(attributes);  } else   if (JwkDefinition.KeyType.EC.equals(keyType)) {    jwkDefinition=this.createEllipticCurveJwkDefinition(attributes);  }  if (jwkDefinition != null) {    if (!jwkDefinitions.add(jwkDefinition)) {      throw new JwkException("Duplicate JWK found in Set: " + jwkDefinition.getKeyId() + " ("+ KEY_ID+ ")");    }  }} @AT@ 3218 @LENGTH@ 1032
------INS VariableDeclarationStatement@@JwkDefinition.PublicKeyUse publicKeyUse=JwkDefinition.PublicKeyUse.fromValue(attributes.get(PUBLIC_KEY_USE)); @TO@ Block@@WhileBody:{  while (parser.nextToken() == JsonToken.FIELD_NAME) {    String attributeName=parser.getCurrentName();    if (parser.nextToken() == JsonToken.START_ARRAY) {      while (parser.nextToken() != JsonToken.END_ARRAY) {      }    } else {      attributes.put(attributeName,parser.getValueAsString());    }  }  JwkDefinition jwkDefinition=null;  JwkDefinition.KeyType keyType=JwkDefinition.KeyType.fromValue(attributes.get(KEY_TYPE));  if (JwkDefinition.KeyType.RSA.equals(keyType)) {    jwkDefinition=this.createRsaJwkDefinition(attributes);  } else   if (JwkDefinition.KeyType.EC.equals(keyType)) {    jwkDefinition=this.createEllipticCurveJwkDefinition(attributes);  }  if (jwkDefinition != null) {    if (!jwkDefinitions.add(jwkDefinition)) {      throw new JwkException("Duplicate JWK found in Set: " + jwkDefinition.getKeyId() + " ("+ KEY_ID+ ")");    }  }  attributes.clear();} @AT@ 3734 @LENGTH@ 117
---------INS SimpleType@@JwkDefinition.PublicKeyUse @TO@ VariableDeclarationStatement@@JwkDefinition.PublicKeyUse publicKeyUse=JwkDefinition.PublicKeyUse.fromValue(attributes.get(PUBLIC_KEY_USE)); @AT@ 3734 @LENGTH@ 26
---------INS VariableDeclarationFragment@@publicKeyUse=JwkDefinition.PublicKeyUse.fromValue(attributes.get(PUBLIC_KEY_USE)) @TO@ VariableDeclarationStatement@@JwkDefinition.PublicKeyUse publicKeyUse=JwkDefinition.PublicKeyUse.fromValue(attributes.get(PUBLIC_KEY_USE)); @AT@ 3761 @LENGTH@ 89
------------INS SimpleName@@publicKeyUse @TO@ VariableDeclarationFragment@@publicKeyUse=JwkDefinition.PublicKeyUse.fromValue(attributes.get(PUBLIC_KEY_USE)) @AT@ 3761 @LENGTH@ 12
------------INS MethodInvocation@@JwkDefinition.PublicKeyUse.fromValue(attributes.get(PUBLIC_KEY_USE)) @TO@ VariableDeclarationFragment@@publicKeyUse=JwkDefinition.PublicKeyUse.fromValue(attributes.get(PUBLIC_KEY_USE)) @AT@ 3782 @LENGTH@ 68
---------------INS QualifiedName@@Name:JwkDefinition.PublicKeyUse @TO@ MethodInvocation@@JwkDefinition.PublicKeyUse.fromValue(attributes.get(PUBLIC_KEY_USE)) @AT@ 3782 @LENGTH@ 26
---------------INS SimpleName@@MethodName:fromValue:[attributes.get(PUBLIC_KEY_USE)] @TO@ MethodInvocation@@JwkDefinition.PublicKeyUse.fromValue(attributes.get(PUBLIC_KEY_USE)) @AT@ 3809 @LENGTH@ 41
------------------INS MethodInvocation@@attributes.get(PUBLIC_KEY_USE) @TO@ SimpleName@@MethodName:fromValue:[attributes.get(PUBLIC_KEY_USE)] @AT@ 3819 @LENGTH@ 30
---------------------INS SimpleName@@Name:attributes @TO@ MethodInvocation@@attributes.get(PUBLIC_KEY_USE) @AT@ 3819 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:get:[PUBLIC_KEY_USE] @TO@ MethodInvocation@@attributes.get(PUBLIC_KEY_USE) @AT@ 3830 @LENGTH@ 19
------------------------INS SimpleName@@PUBLIC_KEY_USE @TO@ SimpleName@@MethodName:get:[PUBLIC_KEY_USE] @AT@ 3834 @LENGTH@ 14
------INS IfStatement@@if (JwkDefinition.PublicKeyUse.ENC.equals(publicKeyUse)) {  continue;} @TO@ Block@@WhileBody:{  while (parser.nextToken() == JsonToken.FIELD_NAME) {    String attributeName=parser.getCurrentName();    if (parser.nextToken() == JsonToken.START_ARRAY) {      while (parser.nextToken() != JsonToken.END_ARRAY) {      }    } else {      attributes.put(attributeName,parser.getValueAsString());    }  }  JwkDefinition jwkDefinition=null;  JwkDefinition.KeyType keyType=JwkDefinition.KeyType.fromValue(attributes.get(KEY_TYPE));  if (JwkDefinition.KeyType.RSA.equals(keyType)) {    jwkDefinition=this.createRsaJwkDefinition(attributes);  } else   if (JwkDefinition.KeyType.EC.equals(keyType)) {    jwkDefinition=this.createEllipticCurveJwkDefinition(attributes);  }  if (jwkDefinition != null) {    if (!jwkDefinitions.add(jwkDefinition)) {      throw new JwkException("Duplicate JWK found in Set: " + jwkDefinition.getKeyId() + " ("+ KEY_ID+ ")");    }  }  attributes.clear();} @AT@ 3856 @LENGTH@ 79
---------INS MethodInvocation@@JwkDefinition.PublicKeyUse.ENC.equals(publicKeyUse) @TO@ IfStatement@@if (JwkDefinition.PublicKeyUse.ENC.equals(publicKeyUse)) {  continue;} @AT@ 3860 @LENGTH@ 51
------------INS QualifiedName@@Name:JwkDefinition.PublicKeyUse.ENC @TO@ MethodInvocation@@JwkDefinition.PublicKeyUse.ENC.equals(publicKeyUse) @AT@ 3860 @LENGTH@ 30
------------INS SimpleName@@MethodName:equals:[publicKeyUse] @TO@ MethodInvocation@@JwkDefinition.PublicKeyUse.ENC.equals(publicKeyUse) @AT@ 3891 @LENGTH@ 20
---------------INS SimpleName@@publicKeyUse @TO@ SimpleName@@MethodName:equals:[publicKeyUse] @AT@ 3898 @LENGTH@ 12
---------INS Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (JwkDefinition.PublicKeyUse.ENC.equals(publicKeyUse)) {  continue;} @AT@ 3913 @LENGTH@ 22
------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 3920 @LENGTH@ 9
------MOV ExpressionStatement@@MethodInvocation:attributes.clear() @TO@ Block@@WhileBody:{  while (parser.nextToken() == JsonToken.FIELD_NAME) {    String attributeName=parser.getCurrentName();    if (parser.nextToken() == JsonToken.START_ARRAY) {      while (parser.nextToken() != JsonToken.END_ARRAY) {      }    } else {      attributes.put(attributeName,parser.getValueAsString());    }  }  JwkDefinition jwkDefinition=null;  JwkDefinition.KeyType keyType=JwkDefinition.KeyType.fromValue(attributes.get(KEY_TYPE));  if (JwkDefinition.KeyType.RSA.equals(keyType)) {    jwkDefinition=this.createRsaJwkDefinition(attributes);  } else   if (JwkDefinition.KeyType.EC.equals(keyType)) {    jwkDefinition=this.createEllipticCurveJwkDefinition(attributes);  }  if (jwkDefinition != null) {    if (!jwkDefinitions.add(jwkDefinition)) {      throw new JwkException("Duplicate JWK found in Set: " + jwkDefinition.getKeyId() + " ("+ KEY_ID+ ")");    }  }  attributes.clear();} @AT@ 4226 @LENGTH@ 19


UPD FieldDeclaration@@private, String, [routeId] @TO@ private, final, String, [routeId] @AT@ 986 @LENGTH@ 23
---INS Modifier@@final @TO@ FieldDeclaration@@private, String, [routeId] @AT@ 976 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:Limit.create(limit.getOffset(),limit.getCount()) @TO@ ConditionalExpression:limit.isUnlimited() ? Limit.unlimited() : Limit.create(limit.getOffset(),limit.getCount()) @AT@ 18032 @LENGTH@ 57
---INS ConditionalExpression@@limit.isUnlimited() ? Limit.unlimited() : Limit.create(limit.getOffset(),limit.getCount()) @TO@ ReturnStatement@@MethodInvocation:Limit.create(limit.getOffset(),limit.getCount()) @AT@ 18039 @LENGTH@ 91
------MOV MethodInvocation@@Limit.create(limit.getOffset(),limit.getCount()) @TO@ ConditionalExpression@@limit.isUnlimited() ? Limit.unlimited() : Limit.create(limit.getOffset(),limit.getCount()) @AT@ 18039 @LENGTH@ 49
------INS MethodInvocation@@limit.isUnlimited() @TO@ ConditionalExpression@@limit.isUnlimited() ? Limit.unlimited() : Limit.create(limit.getOffset(),limit.getCount()) @AT@ 18039 @LENGTH@ 19
---------INS SimpleName@@Name:limit @TO@ MethodInvocation@@limit.isUnlimited() @AT@ 18039 @LENGTH@ 5
---------INS SimpleName@@MethodName:isUnlimited:[] @TO@ MethodInvocation@@limit.isUnlimited() @AT@ 18045 @LENGTH@ 13
------INS MethodInvocation@@Limit.unlimited() @TO@ ConditionalExpression@@limit.isUnlimited() ? Limit.unlimited() : Limit.create(limit.getOffset(),limit.getCount()) @AT@ 18061 @LENGTH@ 17
---------INS SimpleName@@Name:Limit @TO@ MethodInvocation@@Limit.unlimited() @AT@ 18061 @LENGTH@ 5
---------INS SimpleName@@MethodName:unlimited:[] @TO@ MethodInvocation@@Limit.unlimited() @AT@ 18067 @LENGTH@ 11


UPD FieldDeclaration@@private, static, final, int, [timeoutWaitTime_ms=2500] @TO@ public, static, final, int, [timeoutWaitTime_ms=2500] @AT@ 1679 @LENGTH@ 51
---UPD Modifier@@private @TO@ public @AT@ 1679 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Source Key must be specified for deleteObject Operation") @TO@ ClassInstanceCreation:new IllegalArgumentException("Source Key must be specified for getObject Operation") @AT@ 17785 @LENGTH@ 94
---UPD ClassInstanceCreation@@IllegalArgumentException["Source Key must be specified for deleteObject Operation"] @TO@ IllegalArgumentException["Source Key must be specified for getObject Operation"] @AT@ 17791 @LENGTH@ 87
------UPD StringLiteral@@"Source Key must be specified for deleteObject Operation" @TO@ "Source Key must be specified for getObject Operation" @AT@ 17820 @LENGTH@ 57


MOV MethodDeclaration@@public, String, MethodName:getRaftId,  @TO@ TypeDeclaration@@[@ConfigurationProperties(prefix="camel.component.jgroups.raft.cluster.service"), public]JGroupsRaftClusterServiceConfiguration,  @AT@ 1305 @LENGTH@ 56


DEL IfStatement@@if (IBMJDK16) {  final String prefix="UnmodifiableTrieTest.";  return new String[]{prefix + "bulkTestHeadMap.bulkTestMapEntrySet.testCollectionToArray2",prefix + "bulkTestTailMap.bulkTestMapEntrySet.testCollectionToArray2",prefix + "bulkTestSubMap.bulkTestMapEntrySet.testCollectionToArray2"};} @AT@ 2925 @LENGTH@ 404
---DEL SimpleName@@IBMJDK16 @AT@ 2929 @LENGTH@ 8
---DEL Block@@ThenBody:{  final String prefix="UnmodifiableTrieTest.";  return new String[]{prefix + "bulkTestHeadMap.bulkTestMapEntrySet.testCollectionToArray2",prefix + "bulkTestTailMap.bulkTestMapEntrySet.testCollectionToArray2",prefix + "bulkTestSubMap.bulkTestMapEntrySet.testCollectionToArray2"};} @AT@ 2939 @LENGTH@ 390
------DEL VariableDeclarationStatement@@final String prefix="UnmodifiableTrieTest."; @AT@ 2953 @LENGTH@ 46
---------DEL Modifier@@final @AT@ 2953 @LENGTH@ 5
---------DEL SimpleType@@String @AT@ 2959 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@prefix="UnmodifiableTrieTest." @AT@ 2966 @LENGTH@ 32
------------DEL SimpleName@@prefix @AT@ 2966 @LENGTH@ 6
------------DEL StringLiteral@@"UnmodifiableTrieTest." @AT@ 2975 @LENGTH@ 23
------DEL ReturnStatement@@ArrayCreation:new String[]{prefix + "bulkTestHeadMap.bulkTestMapEntrySet.testCollectionToArray2",prefix + "bulkTestTailMap.bulkTestMapEntrySet.testCollectionToArray2",prefix + "bulkTestSubMap.bulkTestMapEntrySet.testCollectionToArray2"} @AT@ 3012 @LENGTH@ 307
---------DEL ArrayCreation@@new String[]{prefix + "bulkTestHeadMap.bulkTestMapEntrySet.testCollectionToArray2",prefix + "bulkTestTailMap.bulkTestMapEntrySet.testCollectionToArray2",prefix + "bulkTestSubMap.bulkTestMapEntrySet.testCollectionToArray2"} @AT@ 3019 @LENGTH@ 299
------------DEL ArrayType@@String[] @AT@ 3023 @LENGTH@ 8
---------------DEL SimpleType@@String @AT@ 3023 @LENGTH@ 6
------------DEL ArrayInitializer@@{prefix + "bulkTestHeadMap.bulkTestMapEntrySet.testCollectionToArray2",prefix + "bulkTestTailMap.bulkTestMapEntrySet.testCollectionToArray2",prefix + "bulkTestSubMap.bulkTestMapEntrySet.testCollectionToArray2"} @AT@ 3032 @LENGTH@ 286
---------------DEL InfixExpression@@prefix + "bulkTestHeadMap.bulkTestMapEntrySet.testCollectionToArray2" @AT@ 3054 @LENGTH@ 69
------------------DEL SimpleName@@prefix @AT@ 3054 @LENGTH@ 6
------------------DEL Operator@@+ @AT@ 3060 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestHeadMap.bulkTestMapEntrySet.testCollectionToArray2" @AT@ 3063 @LENGTH@ 60
---------------DEL InfixExpression@@prefix + "bulkTestTailMap.bulkTestMapEntrySet.testCollectionToArray2" @AT@ 3145 @LENGTH@ 69
------------------DEL SimpleName@@prefix @AT@ 3145 @LENGTH@ 6
------------------DEL Operator@@+ @AT@ 3151 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestTailMap.bulkTestMapEntrySet.testCollectionToArray2" @AT@ 3154 @LENGTH@ 60
---------------DEL InfixExpression@@prefix + "bulkTestSubMap.bulkTestMapEntrySet.testCollectionToArray2" @AT@ 3236 @LENGTH@ 68
------------------DEL SimpleName@@prefix @AT@ 3236 @LENGTH@ 6
------------------DEL Operator@@+ @AT@ 3242 @LENGTH@ 1
------------------DEL StringLiteral@@"bulkTestSubMap.bulkTestMapEntrySet.testCollectionToArray2" @AT@ 3245 @LENGTH@ 59


INS MethodDeclaration@@public, Optional, MethodName:getOptionalValue, InjectionPoint ip,  @TO@ TypeDeclaration@@[public]RawClaimTypeProducer,  @AT@ 3856 @LENGTH@ 226
---INS Modifier@@public @TO@ MethodDeclaration@@public, Optional, MethodName:getOptionalValue, InjectionPoint ip,  @AT@ 3856 @LENGTH@ 6
---INS SimpleType@@Optional @TO@ MethodDeclaration@@public, Optional, MethodName:getOptionalValue, InjectionPoint ip,  @AT@ 3863 @LENGTH@ 8
---INS SimpleName@@MethodName:getOptionalValue @TO@ MethodDeclaration@@public, Optional, MethodName:getOptionalValue, InjectionPoint ip,  @AT@ 3872 @LENGTH@ 16
---INS SingleVariableDeclaration@@InjectionPoint ip @TO@ MethodDeclaration@@public, Optional, MethodName:getOptionalValue, InjectionPoint ip,  @AT@ 3889 @LENGTH@ 17
------INS SimpleType@@InjectionPoint @TO@ SingleVariableDeclaration@@InjectionPoint ip @AT@ 3889 @LENGTH@ 14
------INS SimpleName@@ip @TO@ SingleVariableDeclaration@@InjectionPoint ip @AT@ 3904 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:log.debugf("getOptionalValue(%s)",ip) @TO@ MethodDeclaration@@public, Optional, MethodName:getOptionalValue, InjectionPoint ip,  @AT@ 3918 @LENGTH@ 39
------INS MethodInvocation@@log.debugf("getOptionalValue(%s)",ip) @TO@ ExpressionStatement@@MethodInvocation:log.debugf("getOptionalValue(%s)",ip) @AT@ 3918 @LENGTH@ 38
---------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debugf("getOptionalValue(%s)",ip) @AT@ 3918 @LENGTH@ 3
---------INS SimpleName@@MethodName:debugf:["getOptionalValue(%s)", ip] @TO@ MethodInvocation@@log.debugf("getOptionalValue(%s)",ip) @AT@ 3922 @LENGTH@ 34
------------INS StringLiteral@@"getOptionalValue(%s)" @TO@ SimpleName@@MethodName:debugf:["getOptionalValue(%s)", ip] @AT@ 3929 @LENGTH@ 22
------------INS SimpleName@@ip @TO@ SimpleName@@MethodName:debugf:["getOptionalValue(%s)", ip] @AT@ 3953 @LENGTH@ 2
---INS IfStatement@@if (currentToken == null) {  return null;} @TO@ MethodDeclaration@@public, Optional, MethodName:getOptionalValue, InjectionPoint ip,  @AT@ 3966 @LENGTH@ 62
------INS InfixExpression@@currentToken == null @TO@ IfStatement@@if (currentToken == null) {  return null;} @AT@ 3970 @LENGTH@ 20
---------INS SimpleName@@currentToken @TO@ InfixExpression@@currentToken == null @AT@ 3970 @LENGTH@ 12
---------INS Operator@@== @TO@ InfixExpression@@currentToken == null @AT@ 3982 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@currentToken == null @AT@ 3986 @LENGTH@ 4
------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (currentToken == null) {  return null;} @AT@ 3992 @LENGTH@ 36
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 4006 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4013 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:currentToken.claim(getName(ip)) @TO@ MethodDeclaration@@public, Optional, MethodName:getOptionalValue, InjectionPoint ip,  @AT@ 4037 @LENGTH@ 39
------INS MethodInvocation@@currentToken.claim(getName(ip)) @TO@ ReturnStatement@@MethodInvocation:currentToken.claim(getName(ip)) @AT@ 4044 @LENGTH@ 31
---------INS SimpleName@@Name:currentToken @TO@ MethodInvocation@@currentToken.claim(getName(ip)) @AT@ 4044 @LENGTH@ 12
---------INS SimpleName@@MethodName:claim:[getName(ip)] @TO@ MethodInvocation@@currentToken.claim(getName(ip)) @AT@ 4057 @LENGTH@ 18
------------INS MethodInvocation@@getName(ip) @TO@ SimpleName@@MethodName:claim:[getName(ip)] @AT@ 4063 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getName:[ip] @TO@ MethodInvocation@@getName(ip) @AT@ 4063 @LENGTH@ 11
------------------INS SimpleName@@ip @TO@ SimpleName@@MethodName:getName:[ip] @AT@ 4071 @LENGTH@ 2


INS MethodDeclaration@@void, MethodName:setSecurityWebFilterChains, List<SecurityWebFilterChain> securityWebFilterChains,  @TO@ TypeDeclaration@@[@Configuration]WebFluxSecurityConfiguration,  @AT@ 2570 @LENGTH@ 143
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:setSecurityWebFilterChains, List<SecurityWebFilterChain> securityWebFilterChains,  @AT@ 2565 @LENGTH@ 4
---INS SimpleName@@MethodName:setSecurityWebFilterChains @TO@ MethodDeclaration@@void, MethodName:setSecurityWebFilterChains, List<SecurityWebFilterChain> securityWebFilterChains,  @AT@ 2570 @LENGTH@ 26
---INS SingleVariableDeclaration@@List<SecurityWebFilterChain> securityWebFilterChains @TO@ MethodDeclaration@@void, MethodName:setSecurityWebFilterChains, List<SecurityWebFilterChain> securityWebFilterChains,  @AT@ 2597 @LENGTH@ 52
------INS ParameterizedType@@List<SecurityWebFilterChain> @TO@ SingleVariableDeclaration@@List<SecurityWebFilterChain> securityWebFilterChains @AT@ 2597 @LENGTH@ 28
---------INS SimpleType@@List @TO@ ParameterizedType@@List<SecurityWebFilterChain> @AT@ 2597 @LENGTH@ 4
---------INS SimpleType@@SecurityWebFilterChain @TO@ ParameterizedType@@List<SecurityWebFilterChain> @AT@ 2602 @LENGTH@ 22
------INS SimpleName@@securityWebFilterChains @TO@ SingleVariableDeclaration@@List<SecurityWebFilterChain> securityWebFilterChains @AT@ 2626 @LENGTH@ 23
---INS ExpressionStatement@@Assignment:this.securityWebFilterChains=securityWebFilterChains @TO@ MethodDeclaration@@void, MethodName:setSecurityWebFilterChains, List<SecurityWebFilterChain> securityWebFilterChains,  @AT@ 2655 @LENGTH@ 55
------INS Assignment@@this.securityWebFilterChains=securityWebFilterChains @TO@ ExpressionStatement@@Assignment:this.securityWebFilterChains=securityWebFilterChains @AT@ 2655 @LENGTH@ 54
---------INS FieldAccess@@this.securityWebFilterChains @TO@ Assignment@@this.securityWebFilterChains=securityWebFilterChains @AT@ 2655 @LENGTH@ 28
------------INS ThisExpression@@this @TO@ FieldAccess@@this.securityWebFilterChains @AT@ 2655 @LENGTH@ 4
------------INS SimpleName@@securityWebFilterChains @TO@ FieldAccess@@this.securityWebFilterChains @AT@ 2660 @LENGTH@ 23
---------INS Operator@@= @TO@ Assignment@@this.securityWebFilterChains=securityWebFilterChains @AT@ 2683 @LENGTH@ 1
---------INS SimpleName@@securityWebFilterChains @TO@ Assignment@@this.securityWebFilterChains=securityWebFilterChains @AT@ 2686 @LENGTH@ 23


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1033 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1033 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1040 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1048 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1078 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1085 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @TO@ MethodDeclaration@@public, void, MethodName:testUriParamsOverrideComponentOptions, Exception,  @AT@ 2712 @LENGTH@ 79
---INS MethodInvocation@@when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @TO@ ExpressionStatement@@MethodInvocation:when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @AT@ 2712 @LENGTH@ 78
------INS MethodInvocation@@MethodName:when:[context.resolvePropertyPlaceholders(anyString())] @TO@ MethodInvocation@@when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @AT@ 2712 @LENGTH@ 54
---------INS MethodInvocation@@context.resolvePropertyPlaceholders(anyString()) @TO@ MethodInvocation@@MethodName:when:[context.resolvePropertyPlaceholders(anyString())] @AT@ 2717 @LENGTH@ 48
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.resolvePropertyPlaceholders(anyString()) @AT@ 2717 @LENGTH@ 7
------------INS SimpleName@@MethodName:resolvePropertyPlaceholders:[anyString()] @TO@ MethodInvocation@@context.resolvePropertyPlaceholders(anyString()) @AT@ 2725 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:anyString:[] @TO@ SimpleName@@MethodName:resolvePropertyPlaceholders:[anyString()] @AT@ 2753 @LENGTH@ 11
------INS SimpleName@@MethodName:then:[returnsFirstArg()] @TO@ MethodInvocation@@when(context.resolvePropertyPlaceholders(anyString())).then(returnsFirstArg()) @AT@ 2767 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:returnsFirstArg:[] @TO@ SimpleName@@MethodName:then:[returnsFirstArg()] @AT@ 2772 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:getMappedObjectShouldNotMapTypeHint,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]QueryMapperUnitTests,  @AT@ 30233 @LENGTH@ 384
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getMappedObjectShouldNotMapTypeHint,  @AT@ 30233 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getMappedObjectShouldNotMapTypeHint,  @AT@ 30240 @LENGTH@ 4
---INS SimpleName@@MethodName:getMappedObjectShouldNotMapTypeHint @TO@ MethodDeclaration@@public, void, MethodName:getMappedObjectShouldNotMapTypeHint,  @AT@ 30245 @LENGTH@ 35
---INS ExpressionStatement@@MethodInvocation:converter.setTypeMapper(new DefaultMongoTypeMapper("className")) @TO@ MethodDeclaration@@public, void, MethodName:getMappedObjectShouldNotMapTypeHint,  @AT@ 30288 @LENGTH@ 65
------INS MethodInvocation@@converter.setTypeMapper(new DefaultMongoTypeMapper("className")) @TO@ ExpressionStatement@@MethodInvocation:converter.setTypeMapper(new DefaultMongoTypeMapper("className")) @AT@ 30288 @LENGTH@ 64
---------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.setTypeMapper(new DefaultMongoTypeMapper("className")) @AT@ 30288 @LENGTH@ 9
---------INS SimpleName@@MethodName:setTypeMapper:[new DefaultMongoTypeMapper("className")] @TO@ MethodInvocation@@converter.setTypeMapper(new DefaultMongoTypeMapper("className")) @AT@ 30298 @LENGTH@ 54
------------INS ClassInstanceCreation@@DefaultMongoTypeMapper["className"] @TO@ SimpleName@@MethodName:setTypeMapper:[new DefaultMongoTypeMapper("className")] @AT@ 30312 @LENGTH@ 39
---------------INS New@@new @TO@ ClassInstanceCreation@@DefaultMongoTypeMapper["className"] @AT@ 30312 @LENGTH@ 3
---------------INS SimpleType@@DefaultMongoTypeMapper @TO@ ClassInstanceCreation@@DefaultMongoTypeMapper["className"] @AT@ 30316 @LENGTH@ 22
---------------INS StringLiteral@@"className" @TO@ ClassInstanceCreation@@DefaultMongoTypeMapper["className"] @AT@ 30339 @LENGTH@ 11
---INS VariableDeclarationStatement@@org.bson.Document update=new org.bson.Document("className","foo"); @TO@ MethodDeclaration@@public, void, MethodName:getMappedObjectShouldNotMapTypeHint,  @AT@ 30357 @LENGTH@ 69
------INS SimpleType@@org.bson.Document @TO@ VariableDeclarationStatement@@org.bson.Document update=new org.bson.Document("className","foo"); @AT@ 30357 @LENGTH@ 17
------INS VariableDeclarationFragment@@update=new org.bson.Document("className","foo") @TO@ VariableDeclarationStatement@@org.bson.Document update=new org.bson.Document("className","foo"); @AT@ 30375 @LENGTH@ 50
---------INS SimpleName@@update @TO@ VariableDeclarationFragment@@update=new org.bson.Document("className","foo") @AT@ 30375 @LENGTH@ 6
---------INS ClassInstanceCreation@@org.bson.Document["className", "foo"] @TO@ VariableDeclarationFragment@@update=new org.bson.Document("className","foo") @AT@ 30384 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@org.bson.Document["className", "foo"] @AT@ 30384 @LENGTH@ 3
------------INS SimpleType@@org.bson.Document @TO@ ClassInstanceCreation@@org.bson.Document["className", "foo"] @AT@ 30388 @LENGTH@ 17
------------INS StringLiteral@@"className" @TO@ ClassInstanceCreation@@org.bson.Document["className", "foo"] @AT@ 30406 @LENGTH@ 11
------------INS StringLiteral@@"foo" @TO@ ClassInstanceCreation@@org.bson.Document["className", "foo"] @AT@ 30419 @LENGTH@ 5
---INS VariableDeclarationStatement@@org.bson.Document mappedObject=mapper.getMappedObject(update,context.getPersistentEntity(UserEntity.class)); @TO@ MethodDeclaration@@public, void, MethodName:getMappedObjectShouldNotMapTypeHint,  @AT@ 30429 @LENGTH@ 111
------INS SimpleType@@org.bson.Document @TO@ VariableDeclarationStatement@@org.bson.Document mappedObject=mapper.getMappedObject(update,context.getPersistentEntity(UserEntity.class)); @AT@ 30429 @LENGTH@ 17
------INS VariableDeclarationFragment@@mappedObject=mapper.getMappedObject(update,context.getPersistentEntity(UserEntity.class)) @TO@ VariableDeclarationStatement@@org.bson.Document mappedObject=mapper.getMappedObject(update,context.getPersistentEntity(UserEntity.class)); @AT@ 30447 @LENGTH@ 92
---------INS SimpleName@@mappedObject @TO@ VariableDeclarationFragment@@mappedObject=mapper.getMappedObject(update,context.getPersistentEntity(UserEntity.class)) @AT@ 30447 @LENGTH@ 12
---------INS MethodInvocation@@mapper.getMappedObject(update,context.getPersistentEntity(UserEntity.class)) @TO@ VariableDeclarationFragment@@mappedObject=mapper.getMappedObject(update,context.getPersistentEntity(UserEntity.class)) @AT@ 30462 @LENGTH@ 77
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(update,context.getPersistentEntity(UserEntity.class)) @AT@ 30462 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[update, context.getPersistentEntity(UserEntity.class)] @TO@ MethodInvocation@@mapper.getMappedObject(update,context.getPersistentEntity(UserEntity.class)) @AT@ 30469 @LENGTH@ 70
---------------INS SimpleName@@update @TO@ SimpleName@@MethodName:getMappedObject:[update, context.getPersistentEntity(UserEntity.class)] @AT@ 30485 @LENGTH@ 6
---------------INS MethodInvocation@@context.getPersistentEntity(UserEntity.class) @TO@ SimpleName@@MethodName:getMappedObject:[update, context.getPersistentEntity(UserEntity.class)] @AT@ 30493 @LENGTH@ 45
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(UserEntity.class) @AT@ 30493 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getPersistentEntity:[UserEntity.class] @TO@ MethodInvocation@@context.getPersistentEntity(UserEntity.class) @AT@ 30501 @LENGTH@ 37
---------------------INS TypeLiteral@@UserEntity.class @TO@ SimpleName@@MethodName:getPersistentEntity:[UserEntity.class] @AT@ 30521 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:Assertions.assertThat(mappedObject).containsEntry("className","foo") @TO@ MethodDeclaration@@public, void, MethodName:getMappedObjectShouldNotMapTypeHint,  @AT@ 30544 @LENGTH@ 70
------INS MethodInvocation@@Assertions.assertThat(mappedObject).containsEntry("className","foo") @TO@ ExpressionStatement@@MethodInvocation:Assertions.assertThat(mappedObject).containsEntry("className","foo") @AT@ 30544 @LENGTH@ 69
---------INS MethodInvocation@@MethodName:assertThat:[mappedObject] @TO@ MethodInvocation@@Assertions.assertThat(mappedObject).containsEntry("className","foo") @AT@ 30544 @LENGTH@ 35
------------INS SimpleName@@mappedObject @TO@ MethodInvocation@@MethodName:assertThat:[mappedObject] @AT@ 30566 @LENGTH@ 12
---------INS SimpleName@@Name:Assertions @TO@ MethodInvocation@@Assertions.assertThat(mappedObject).containsEntry("className","foo") @AT@ 30544 @LENGTH@ 10
---------INS SimpleName@@MethodName:containsEntry:["className", "foo"] @TO@ MethodInvocation@@Assertions.assertThat(mappedObject).containsEntry("className","foo") @AT@ 30580 @LENGTH@ 33
------------INS StringLiteral@@"className" @TO@ SimpleName@@MethodName:containsEntry:["className", "foo"] @AT@ 30594 @LENGTH@ 11
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:containsEntry:["className", "foo"] @AT@ 30607 @LENGTH@ 5


DEL ExpressionStatement@@Assignment:this.tableName=tableName @AT@ 1903 @LENGTH@ 27
---DEL Assignment@@this.tableName=tableName @AT@ 1903 @LENGTH@ 26
------DEL FieldAccess@@this.tableName @AT@ 1903 @LENGTH@ 14
---------DEL ThisExpression@@this @AT@ 1903 @LENGTH@ 4
---------DEL SimpleName@@tableName @AT@ 1908 @LENGTH@ 9
------DEL Operator@@= @AT@ 1917 @LENGTH@ 1
------DEL SimpleName@@tableName @AT@ 1920 @LENGTH@ 9


UPD LambdaExpression@@o -> {
  AdaptibleEntity<T> entity=operations.forEntity(o,mongoConverter.getConversionService());
  T toSave=entity.initializeVersionProperty();
  BeforeConvertEvent<T> event=new BeforeConvertEvent<>(toSave,collectionName);
  toSave=maybeEmitEvent(event).getSource();
  Document dbDoc=entity.toMappedDocument(writer).getDocument();
  maybeEmitEvent(new BeforeSaveEvent<>(toSave,dbDoc,collectionName));
  return Tuples.of(entity,dbDoc);
}
 @TO@ uninitialized -> {
  BeforeConvertEvent<T> event=new BeforeConvertEvent<>(uninitialized,collectionName);
  T toConvert=maybeEmitEvent(event).getSource();
  AdaptibleEntity<T> entity=operations.forEntity(toConvert,mongoConverter.getConversionService());
  entity.assertUpdateableIdIfNotSet();
  T initialized=entity.initializeVersionProperty();
  Document dbDoc=entity.toMappedDocument(writer).getDocument();
  maybeEmitEvent(new BeforeSaveEvent<>(initialized,dbDoc,collectionName));
  return Tuples.of(entity,dbDoc);
}
 @AT@ 53641 @LENGTH@ 465
---UPD VariableDeclarationFragment@@o @TO@ uninitialized @AT@ 53641 @LENGTH@ 1
------UPD SimpleName@@o @TO@ uninitialized @AT@ 53641 @LENGTH@ 1
---UPD VariableDeclarationStatement@@AdaptibleEntity<T> entity=operations.forEntity(o,mongoConverter.getConversionService()); @TO@ AdaptibleEntity<T> entity=operations.forEntity(toConvert,mongoConverter.getConversionService()); @AT@ 53652 @LENGTH@ 91
------UPD VariableDeclarationFragment@@entity=operations.forEntity(o,mongoConverter.getConversionService()) @TO@ entity=operations.forEntity(toConvert,mongoConverter.getConversionService()) @AT@ 53671 @LENGTH@ 71
---------UPD MethodInvocation@@operations.forEntity(o,mongoConverter.getConversionService()) @TO@ operations.forEntity(toConvert,mongoConverter.getConversionService()) @AT@ 53680 @LENGTH@ 62
------------UPD SimpleName@@MethodName:forEntity:[o, mongoConverter.getConversionService()] @TO@ MethodName:forEntity:[toConvert, mongoConverter.getConversionService()] @AT@ 53691 @LENGTH@ 51
---------------UPD SimpleName@@o @TO@ toConvert @AT@ 53701 @LENGTH@ 1
---INS VariableDeclarationStatement@@BeforeConvertEvent<T> event=new BeforeConvertEvent<>(uninitialized,collectionName); @TO@ LambdaExpression@@o -> {
  AdaptibleEntity<T> entity=operations.forEntity(o,mongoConverter.getConversionService());
  T toSave=entity.initializeVersionProperty();
  BeforeConvertEvent<T> event=new BeforeConvertEvent<>(toSave,collectionName);
  toSave=maybeEmitEvent(event).getSource();
  Document dbDoc=entity.toMappedDocument(writer).getDocument();
  maybeEmitEvent(new BeforeSaveEvent<>(toSave,dbDoc,collectionName));
  return Tuples.of(entity,dbDoc);
}
 @AT@ 53672 @LENGTH@ 86
------INS ParameterizedType@@BeforeConvertEvent<T> @TO@ VariableDeclarationStatement@@BeforeConvertEvent<T> event=new BeforeConvertEvent<>(uninitialized,collectionName); @AT@ 53672 @LENGTH@ 21
---------INS SimpleType@@BeforeConvertEvent @TO@ ParameterizedType@@BeforeConvertEvent<T> @AT@ 53672 @LENGTH@ 18
---------INS SimpleType@@T @TO@ ParameterizedType@@BeforeConvertEvent<T> @AT@ 53691 @LENGTH@ 1
------INS VariableDeclarationFragment@@event=new BeforeConvertEvent<>(uninitialized,collectionName) @TO@ VariableDeclarationStatement@@BeforeConvertEvent<T> event=new BeforeConvertEvent<>(uninitialized,collectionName); @AT@ 53694 @LENGTH@ 63
---------INS SimpleName@@event @TO@ VariableDeclarationFragment@@event=new BeforeConvertEvent<>(uninitialized,collectionName) @AT@ 53694 @LENGTH@ 5
---------INS ClassInstanceCreation@@BeforeConvertEvent<>[uninitialized, collectionName] @TO@ VariableDeclarationFragment@@event=new BeforeConvertEvent<>(uninitialized,collectionName) @AT@ 53702 @LENGTH@ 55
------------INS New@@new @TO@ ClassInstanceCreation@@BeforeConvertEvent<>[uninitialized, collectionName] @AT@ 53702 @LENGTH@ 3
------------INS ParameterizedType@@BeforeConvertEvent<> @TO@ ClassInstanceCreation@@BeforeConvertEvent<>[uninitialized, collectionName] @AT@ 53706 @LENGTH@ 20
---------------INS SimpleType@@BeforeConvertEvent @TO@ ParameterizedType@@BeforeConvertEvent<> @AT@ 53706 @LENGTH@ 18
------------INS SimpleName@@uninitialized @TO@ ClassInstanceCreation@@BeforeConvertEvent<>[uninitialized, collectionName] @AT@ 53727 @LENGTH@ 13
------------INS SimpleName@@collectionName @TO@ ClassInstanceCreation@@BeforeConvertEvent<>[uninitialized, collectionName] @AT@ 53742 @LENGTH@ 14
---UPD VariableDeclarationStatement@@T toSave=entity.initializeVersionProperty(); @TO@ T initialized=entity.initializeVersionProperty(); @AT@ 53747 @LENGTH@ 46
------UPD VariableDeclarationFragment@@toSave=entity.initializeVersionProperty() @TO@ initialized=entity.initializeVersionProperty() @AT@ 53749 @LENGTH@ 43
---------UPD SimpleName@@toSave @TO@ initialized @AT@ 53749 @LENGTH@ 6
---INS VariableDeclarationStatement@@T toConvert=maybeEmitEvent(event).getSource(); @TO@ LambdaExpression@@o -> {
  AdaptibleEntity<T> entity=operations.forEntity(o,mongoConverter.getConversionService());
  T toSave=entity.initializeVersionProperty();
  BeforeConvertEvent<T> event=new BeforeConvertEvent<>(toSave,collectionName);
  toSave=maybeEmitEvent(event).getSource();
  Document dbDoc=entity.toMappedDocument(writer).getDocument();
  maybeEmitEvent(new BeforeSaveEvent<>(toSave,dbDoc,collectionName));
  return Tuples.of(entity,dbDoc);
}
 @AT@ 53764 @LENGTH@ 48
------INS SimpleType@@T @TO@ VariableDeclarationStatement@@T toConvert=maybeEmitEvent(event).getSource(); @AT@ 53764 @LENGTH@ 1
------INS VariableDeclarationFragment@@toConvert=maybeEmitEvent(event).getSource() @TO@ VariableDeclarationStatement@@T toConvert=maybeEmitEvent(event).getSource(); @AT@ 53766 @LENGTH@ 45
---------INS SimpleName@@toConvert @TO@ VariableDeclarationFragment@@toConvert=maybeEmitEvent(event).getSource() @AT@ 53766 @LENGTH@ 9
---------MOV MethodInvocation@@maybeEmitEvent(event).getSource() @TO@ VariableDeclarationFragment@@toConvert=maybeEmitEvent(event).getSource() @AT@ 53890 @LENGTH@ 33
---DEL VariableDeclarationStatement@@BeforeConvertEvent<T> event=new BeforeConvertEvent<>(toSave,collectionName); @AT@ 53798 @LENGTH@ 79
------DEL ParameterizedType@@BeforeConvertEvent<T> @AT@ 53798 @LENGTH@ 21
---------DEL SimpleType@@BeforeConvertEvent @AT@ 53798 @LENGTH@ 18
---------DEL SimpleType@@T @AT@ 53817 @LENGTH@ 1
------DEL VariableDeclarationFragment@@event=new BeforeConvertEvent<>(toSave,collectionName) @AT@ 53820 @LENGTH@ 56
---------DEL SimpleName@@event @AT@ 53820 @LENGTH@ 5
---------DEL ClassInstanceCreation@@BeforeConvertEvent<>[toSave, collectionName] @AT@ 53828 @LENGTH@ 48
------------DEL New@@new @AT@ 53828 @LENGTH@ 3
------------DEL ParameterizedType@@BeforeConvertEvent<> @AT@ 53832 @LENGTH@ 20
---------------DEL SimpleType@@BeforeConvertEvent @AT@ 53832 @LENGTH@ 18
------------DEL SimpleName@@toSave @AT@ 53853 @LENGTH@ 6
------------DEL SimpleName@@collectionName @AT@ 53861 @LENGTH@ 14
---DEL ExpressionStatement@@Assignment:toSave=maybeEmitEvent(event).getSource() @AT@ 53881 @LENGTH@ 43
------DEL Assignment@@toSave=maybeEmitEvent(event).getSource() @AT@ 53881 @LENGTH@ 42
---------DEL SimpleName@@toSave @AT@ 53881 @LENGTH@ 6
---------DEL Operator@@= @AT@ 53887 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:entity.assertUpdateableIdIfNotSet() @TO@ LambdaExpression@@o -> {
  AdaptibleEntity<T> entity=operations.forEntity(o,mongoConverter.getConversionService());
  T toSave=entity.initializeVersionProperty();
  BeforeConvertEvent<T> event=new BeforeConvertEvent<>(toSave,collectionName);
  toSave=maybeEmitEvent(event).getSource();
  Document dbDoc=entity.toMappedDocument(writer).getDocument();
  maybeEmitEvent(new BeforeSaveEvent<>(toSave,dbDoc,collectionName));
  return Tuples.of(entity,dbDoc);
}
 @AT@ 53924 @LENGTH@ 36
------INS MethodInvocation@@entity.assertUpdateableIdIfNotSet() @TO@ ExpressionStatement@@MethodInvocation:entity.assertUpdateableIdIfNotSet() @AT@ 53924 @LENGTH@ 35
---------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.assertUpdateableIdIfNotSet() @AT@ 53924 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertUpdateableIdIfNotSet:[] @TO@ MethodInvocation@@entity.assertUpdateableIdIfNotSet() @AT@ 53931 @LENGTH@ 28
---UPD ExpressionStatement@@MethodInvocation:maybeEmitEvent(new BeforeSaveEvent<>(toSave,dbDoc,collectionName)) @TO@ MethodInvocation:maybeEmitEvent(new BeforeSaveEvent<>(initialized,dbDoc,collectionName)) @AT@ 53997 @LENGTH@ 69
------UPD MethodInvocation@@maybeEmitEvent(new BeforeSaveEvent<>(toSave,dbDoc,collectionName)) @TO@ maybeEmitEvent(new BeforeSaveEvent<>(initialized,dbDoc,collectionName)) @AT@ 53997 @LENGTH@ 68
---------UPD SimpleName@@MethodName:maybeEmitEvent:[new BeforeSaveEvent<>(toSave,dbDoc,collectionName)] @TO@ MethodName:maybeEmitEvent:[new BeforeSaveEvent<>(initialized,dbDoc,collectionName)] @AT@ 53997 @LENGTH@ 68
------------UPD ClassInstanceCreation@@BeforeSaveEvent<>[toSave, dbDoc, collectionName] @TO@ BeforeSaveEvent<>[initialized, dbDoc, collectionName] @AT@ 54012 @LENGTH@ 52
---------------UPD SimpleName@@toSave @TO@ initialized @AT@ 54034 @LENGTH@ 6


UPD WhileStatement@@while (e.hasMoreElements()) action.accept(e.nextElement()); @TO@ while (e.hasMoreElements()) {  action.accept(e.nextElement());} @AT@ 11235 @LENGTH@ 58
---UPD Block@@WhileBody:action.accept(e.nextElement()); @TO@ WhileBody:{  action.accept(e.nextElement());} @AT@ 11262 @LENGTH@ 31


UPD IfStatement@@if (maxArgs != 0 && nrArguments > maxArgs) {  throw new IllegalArgumentException(String.format("%s command requires at most %s arguments.",this.name(),this.maxArgs));} @TO@ if (maxArgs > 0 && nrArguments > maxArgs) {  throw new IllegalArgumentException(String.format("%s command requires at most %s arguments.",this.name(),this.maxArgs));} @AT@ 8160 @LENGTH@ 183
---UPD InfixExpression@@maxArgs != 0 && nrArguments > maxArgs @TO@ maxArgs > 0 && nrArguments > maxArgs @AT@ 8164 @LENGTH@ 37
------UPD InfixExpression@@maxArgs != 0 @TO@ maxArgs > 0 @AT@ 8164 @LENGTH@ 12
---------UPD Operator@@!= @TO@ > @AT@ 8171 @LENGTH@ 2


INS MethodDeclaration@@Object, MethodName:extractParameterValue, PreferredConstructor.Parameter parameter,  @TO@ TypeDeclaration@@[private, static]Neo4jPropertyValueProvider, [ParameterValueProvider<Neo4jPersistentProperty>] @AT@ 3699 @LENGTH@ 981
---MOV VariableDeclarationStatement@@Object value=propertyValues.get(parameter.getName()); @TO@ MethodDeclaration@@Object, MethodName:extractParameterValue, PreferredConstructor.Parameter parameter,  @AT@ 3303 @LENGTH@ 55
---INS SimpleType@@Object @TO@ MethodDeclaration@@Object, MethodName:extractParameterValue, PreferredConstructor.Parameter parameter,  @AT@ 3692 @LENGTH@ 6
---INS SimpleName@@MethodName:extractParameterValue @TO@ MethodDeclaration@@Object, MethodName:extractParameterValue, PreferredConstructor.Parameter parameter,  @AT@ 3699 @LENGTH@ 21
---INS SingleVariableDeclaration@@PreferredConstructor.Parameter parameter @TO@ MethodDeclaration@@Object, MethodName:extractParameterValue, PreferredConstructor.Parameter parameter,  @AT@ 3721 @LENGTH@ 40
------INS SimpleType@@PreferredConstructor.Parameter @TO@ SingleVariableDeclaration@@PreferredConstructor.Parameter parameter @AT@ 3721 @LENGTH@ 30
------INS SimpleName@@parameter @TO@ SingleVariableDeclaration@@PreferredConstructor.Parameter parameter @AT@ 3752 @LENGTH@ 9
---INS IfStatement@@if (value != null && value.getClass().isArray()) {  value=Arrays.asList((Object[])value);} @TO@ MethodDeclaration@@Object, MethodName:extractParameterValue, PreferredConstructor.Parameter parameter,  @AT@ 4102 @LENGTH@ 100
------INS InfixExpression@@value != null && value.getClass().isArray() @TO@ IfStatement@@if (value != null && value.getClass().isArray()) {  value=Arrays.asList((Object[])value);} @AT@ 4106 @LENGTH@ 43
---------INS InfixExpression@@value != null @TO@ InfixExpression@@value != null && value.getClass().isArray() @AT@ 4106 @LENGTH@ 13
------------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 4106 @LENGTH@ 5
------------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 4111 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 4115 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@value != null && value.getClass().isArray() @AT@ 4119 @LENGTH@ 2
---------INS MethodInvocation@@value.getClass().isArray() @TO@ InfixExpression@@value != null && value.getClass().isArray() @AT@ 4123 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@value.getClass().isArray() @AT@ 4123 @LENGTH@ 16
------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.getClass().isArray() @AT@ 4123 @LENGTH@ 5
------------INS SimpleName@@MethodName:isArray:[] @TO@ MethodInvocation@@value.getClass().isArray() @AT@ 4140 @LENGTH@ 9
------INS Block@@ThenBody:{  value=Arrays.asList((Object[])value);} @TO@ IfStatement@@if (value != null && value.getClass().isArray()) {  value=Arrays.asList((Object[])value);} @AT@ 4151 @LENGTH@ 51
---------INS ExpressionStatement@@Assignment:value=Arrays.asList((Object[])value) @TO@ Block@@ThenBody:{  value=Arrays.asList((Object[])value);} @AT@ 4157 @LENGTH@ 40
------------INS Assignment@@value=Arrays.asList((Object[])value) @TO@ ExpressionStatement@@Assignment:value=Arrays.asList((Object[])value) @AT@ 4157 @LENGTH@ 39
---------------INS SimpleName@@value @TO@ Assignment@@value=Arrays.asList((Object[])value) @AT@ 4157 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@value=Arrays.asList((Object[])value) @AT@ 4162 @LENGTH@ 1
---------------INS MethodInvocation@@Arrays.asList((Object[])value) @TO@ Assignment@@value=Arrays.asList((Object[])value) @AT@ 4165 @LENGTH@ 31
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList((Object[])value) @AT@ 4165 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asList:[(Object[])value] @TO@ MethodInvocation@@Arrays.asList((Object[])value) @AT@ 4172 @LENGTH@ 24
---------------------INS CastExpression@@(Object[])value @TO@ SimpleName@@MethodName:asList:[(Object[])value] @AT@ 4179 @LENGTH@ 16
------------------------INS ArrayType@@Object[] @TO@ CastExpression@@(Object[])value @AT@ 4180 @LENGTH@ 8
---------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 4180 @LENGTH@ 6
------------------------INS SimpleName@@value @TO@ CastExpression@@(Object[])value @AT@ 4190 @LENGTH@ 5
---INS VariableDeclarationStatement@@TypeInformation typeInformation=parameter.getType(); @TO@ MethodDeclaration@@Object, MethodName:extractParameterValue, PreferredConstructor.Parameter parameter,  @AT@ 4206 @LENGTH@ 54
------INS SimpleType@@TypeInformation @TO@ VariableDeclarationStatement@@TypeInformation typeInformation=parameter.getType(); @AT@ 4206 @LENGTH@ 15
------INS VariableDeclarationFragment@@typeInformation=parameter.getType() @TO@ VariableDeclarationStatement@@TypeInformation typeInformation=parameter.getType(); @AT@ 4222 @LENGTH@ 37
---------INS SimpleName@@typeInformation @TO@ VariableDeclarationFragment@@typeInformation=parameter.getType() @AT@ 4222 @LENGTH@ 15
---------INS MethodInvocation@@parameter.getType() @TO@ VariableDeclarationFragment@@typeInformation=parameter.getType() @AT@ 4240 @LENGTH@ 19
------------INS SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.getType() @AT@ 4240 @LENGTH@ 9
------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@parameter.getType() @AT@ 4250 @LENGTH@ 9
---INS IfStatement@@if (typeInformation.isCollectionLike()) {  Class<?> collectionType=typeInformation.getType();  Class<?> elementType=typeInformation.getComponentType().getType();  value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType);} @TO@ MethodDeclaration@@Object, MethodName:extractParameterValue, PreferredConstructor.Parameter parameter,  @AT@ 4264 @LENGTH@ 395
------INS MethodInvocation@@typeInformation.isCollectionLike() @TO@ IfStatement@@if (typeInformation.isCollectionLike()) {  Class<?> collectionType=typeInformation.getType();  Class<?> elementType=typeInformation.getComponentType().getType();  value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType);} @AT@ 4268 @LENGTH@ 34
---------INS SimpleName@@Name:typeInformation @TO@ MethodInvocation@@typeInformation.isCollectionLike() @AT@ 4268 @LENGTH@ 15
---------INS SimpleName@@MethodName:isCollectionLike:[] @TO@ MethodInvocation@@typeInformation.isCollectionLike() @AT@ 4284 @LENGTH@ 18
------INS Block@@ThenBody:{  Class<?> collectionType=typeInformation.getType();  Class<?> elementType=typeInformation.getComponentType().getType();  value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType);} @TO@ IfStatement@@if (typeInformation.isCollectionLike()) {  Class<?> collectionType=typeInformation.getType();  Class<?> elementType=typeInformation.getComponentType().getType();  value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType);} @AT@ 4304 @LENGTH@ 355
---------INS VariableDeclarationStatement@@Class<?> collectionType=typeInformation.getType(); @TO@ Block@@ThenBody:{  Class<?> collectionType=typeInformation.getType();  Class<?> elementType=typeInformation.getComponentType().getType();  value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType);} @AT@ 4310 @LENGTH@ 52
------------INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class<?> collectionType=typeInformation.getType(); @AT@ 4310 @LENGTH@ 8
---------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 4310 @LENGTH@ 5
---------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 4316 @LENGTH@ 1
------------INS VariableDeclarationFragment@@collectionType=typeInformation.getType() @TO@ VariableDeclarationStatement@@Class<?> collectionType=typeInformation.getType(); @AT@ 4319 @LENGTH@ 42
---------------INS SimpleName@@collectionType @TO@ VariableDeclarationFragment@@collectionType=typeInformation.getType() @AT@ 4319 @LENGTH@ 14
---------------INS MethodInvocation@@typeInformation.getType() @TO@ VariableDeclarationFragment@@collectionType=typeInformation.getType() @AT@ 4336 @LENGTH@ 25
------------------INS SimpleName@@Name:typeInformation @TO@ MethodInvocation@@typeInformation.getType() @AT@ 4336 @LENGTH@ 15
------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@typeInformation.getType() @AT@ 4352 @LENGTH@ 9
---------INS VariableDeclarationStatement@@Class<?> elementType=typeInformation.getComponentType().getType(); @TO@ Block@@ThenBody:{  Class<?> collectionType=typeInformation.getType();  Class<?> elementType=typeInformation.getComponentType().getType();  value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType);} @AT@ 4367 @LENGTH@ 68
------------INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class<?> elementType=typeInformation.getComponentType().getType(); @AT@ 4367 @LENGTH@ 8
---------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 4367 @LENGTH@ 5
---------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 4373 @LENGTH@ 1
------------INS VariableDeclarationFragment@@elementType=typeInformation.getComponentType().getType() @TO@ VariableDeclarationStatement@@Class<?> elementType=typeInformation.getComponentType().getType(); @AT@ 4376 @LENGTH@ 58
---------------INS SimpleName@@elementType @TO@ VariableDeclarationFragment@@elementType=typeInformation.getComponentType().getType() @AT@ 4376 @LENGTH@ 11
---------------INS MethodInvocation@@typeInformation.getComponentType().getType() @TO@ VariableDeclarationFragment@@elementType=typeInformation.getComponentType().getType() @AT@ 4390 @LENGTH@ 44
------------------INS MethodInvocation@@MethodName:getComponentType:[] @TO@ MethodInvocation@@typeInformation.getComponentType().getType() @AT@ 4390 @LENGTH@ 34
------------------INS SimpleName@@Name:typeInformation @TO@ MethodInvocation@@typeInformation.getComponentType().getType() @AT@ 4390 @LENGTH@ 15
------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@typeInformation.getComponentType().getType() @AT@ 4425 @LENGTH@ 9
---------INS ExpressionStatement@@Assignment:value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @TO@ Block@@ThenBody:{  Class<?> collectionType=typeInformation.getType();  Class<?> elementType=typeInformation.getComponentType().getType();  value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType);} @AT@ 4440 @LENGTH@ 214
------------INS Assignment@@value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @TO@ ExpressionStatement@@Assignment:value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @AT@ 4440 @LENGTH@ 213
---------------INS SimpleName@@value @TO@ Assignment@@value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @AT@ 4440 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @AT@ 4445 @LENGTH@ 1
---------------INS ConditionalExpression@@collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @TO@ Assignment@@value=collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @AT@ 4448 @LENGTH@ 205
------------------INS MethodInvocation@@collectionType.isArray() @TO@ ConditionalExpression@@collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @AT@ 4448 @LENGTH@ 24
---------------------INS SimpleName@@Name:collectionType @TO@ MethodInvocation@@collectionType.isArray() @AT@ 4448 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:isArray:[] @TO@ MethodInvocation@@collectionType.isArray() @AT@ 4463 @LENGTH@ 9
------------------INS MethodInvocation@@EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) @TO@ ConditionalExpression@@collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @AT@ 4481 @LENGTH@ 78
---------------------INS SimpleName@@Name:EntityAccessManager @TO@ MethodInvocation@@EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) @AT@ 4481 @LENGTH@ 19
---------------------INS SimpleName@@MethodName:merge:[collectionType, value, new Object[]{}, elementType] @TO@ MethodInvocation@@EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) @AT@ 4501 @LENGTH@ 58
------------------------INS SimpleName@@collectionType @TO@ SimpleName@@MethodName:merge:[collectionType, value, new Object[]{}, elementType] @AT@ 4507 @LENGTH@ 14
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:merge:[collectionType, value, new Object[]{}, elementType] @AT@ 4523 @LENGTH@ 5
------------------------INS ArrayCreation@@new Object[]{} @TO@ SimpleName@@MethodName:merge:[collectionType, value, new Object[]{}, elementType] @AT@ 4530 @LENGTH@ 15
---------------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{} @AT@ 4534 @LENGTH@ 8
------------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 4534 @LENGTH@ 6
---------------------------INS ArrayInitializer@@{} @TO@ ArrayCreation@@new Object[]{} @AT@ 4543 @LENGTH@ 2
------------------------INS SimpleName@@elementType @TO@ SimpleName@@MethodName:merge:[collectionType, value, new Object[]{}, elementType] @AT@ 4547 @LENGTH@ 11
------------------INS MethodInvocation@@EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @TO@ ConditionalExpression@@collectionType.isArray() ? EntityAccessManager.merge(collectionType,value,new Object[]{},elementType) : EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @AT@ 4568 @LENGTH@ 85
---------------------INS SimpleName@@Name:EntityAccessManager @TO@ MethodInvocation@@EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @AT@ 4568 @LENGTH@ 19
---------------------INS SimpleName@@MethodName:merge:[collectionType, value, Collections.EMPTY_LIST, elementType] @TO@ MethodInvocation@@EntityAccessManager.merge(collectionType,value,Collections.EMPTY_LIST,elementType) @AT@ 4588 @LENGTH@ 65
------------------------INS SimpleName@@collectionType @TO@ SimpleName@@MethodName:merge:[collectionType, value, Collections.EMPTY_LIST, elementType] @AT@ 4594 @LENGTH@ 14
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:merge:[collectionType, value, Collections.EMPTY_LIST, elementType] @AT@ 4610 @LENGTH@ 5
------------------------INS QualifiedName@@Collections.EMPTY_LIST @TO@ SimpleName@@MethodName:merge:[collectionType, value, Collections.EMPTY_LIST, elementType] @AT@ 4617 @LENGTH@ 22
---------------------------INS SimpleName@@Collections @TO@ QualifiedName@@Collections.EMPTY_LIST @AT@ 4617 @LENGTH@ 11
---------------------------INS SimpleName@@EMPTY_LIST @TO@ QualifiedName@@Collections.EMPTY_LIST @AT@ 4629 @LENGTH@ 10
------------------------INS SimpleName@@elementType @TO@ SimpleName@@MethodName:merge:[collectionType, value, Collections.EMPTY_LIST, elementType] @AT@ 4641 @LENGTH@ 11
---INS ReturnStatement@@SimpleName:value @TO@ MethodDeclaration@@Object, MethodName:extractParameterValue, PreferredConstructor.Parameter parameter,  @AT@ 4663 @LENGTH@ 13
------INS SimpleName@@value @TO@ ReturnStatement@@SimpleName:value @AT@ 4670 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:authorizedClient(request,next).map(authorizedClient -> bearer(request,authorizedClient)).flatMap(next::exchange).switchIfEmpty(next.exchange(request)) @TO@ MethodInvocation:authorizedClient(request,next).map(authorizedClient -> bearer(request,authorizedClient)).flatMap(next::exchange).switchIfEmpty(Mono.defer(() -> next.exchange(request))) @AT@ 10473 @LENGTH@ 175
---UPD MethodInvocation@@authorizedClient(request,next).map(authorizedClient -> bearer(request,authorizedClient)).flatMap(next::exchange).switchIfEmpty(next.exchange(request)) @TO@ authorizedClient(request,next).map(authorizedClient -> bearer(request,authorizedClient)).flatMap(next::exchange).switchIfEmpty(Mono.defer(() -> next.exchange(request))) @AT@ 10480 @LENGTH@ 167
------INS SimpleName@@MethodName:switchIfEmpty:[Mono.defer(() -> next.exchange(request))] @TO@ MethodInvocation@@authorizedClient(request,next).map(authorizedClient -> bearer(request,authorizedClient)).flatMap(next::exchange).switchIfEmpty(next.exchange(request)) @AT@ 10610 @LENGTH@ 55
---------INS MethodInvocation@@Mono.defer(() -> next.exchange(request)) @TO@ SimpleName@@MethodName:switchIfEmpty:[Mono.defer(() -> next.exchange(request))] @AT@ 10624 @LENGTH@ 40
------------MOV SimpleName@@MethodName:switchIfEmpty:[next.exchange(request)] @TO@ MethodInvocation@@Mono.defer(() -> next.exchange(request)) @AT@ 10610 @LENGTH@ 37
---------------INS LambdaExpression@@() -> next.exchange(request) @TO@ SimpleName@@MethodName:switchIfEmpty:[next.exchange(request)] @AT@ 10635 @LENGTH@ 28
------------------MOV MethodInvocation@@next.exchange(request) @TO@ LambdaExpression@@() -> next.exchange(request) @AT@ 10624 @LENGTH@ 22
------------------MOV MethodInvocation@@next.exchange(request) @TO@ LambdaExpression@@() -> next.exchange(request) @AT@ 10624 @LENGTH@ 22
------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.defer(() -> next.exchange(request)) @AT@ 10624 @LENGTH@ 4
------UPD SimpleName@@MethodName:switchIfEmpty:[next.exchange(request)] @TO@ MethodName:defer:[() -> next.exchange(request)] @AT@ 10610 @LENGTH@ 37


INS IfStatement@@if (!response.containsHeader(XSS_PROTECTION_HEADER)) {  response.setHeader(XSS_PROTECTION_HEADER,headerValue);} @TO@ MethodDeclaration@@public, void, MethodName:writeHeaders, HttpServletRequest request, HttpServletResponse response,  @AT@ 1572 @LENGTH@ 117
---INS PrefixExpression@@!response.containsHeader(XSS_PROTECTION_HEADER) @TO@ IfStatement@@if (!response.containsHeader(XSS_PROTECTION_HEADER)) {  response.setHeader(XSS_PROTECTION_HEADER,headerValue);} @AT@ 1576 @LENGTH@ 47
------INS Operator@@! @TO@ PrefixExpression@@!response.containsHeader(XSS_PROTECTION_HEADER) @AT@ 1576 @LENGTH@ 1
------INS MethodInvocation@@response.containsHeader(XSS_PROTECTION_HEADER) @TO@ PrefixExpression@@!response.containsHeader(XSS_PROTECTION_HEADER) @AT@ 1577 @LENGTH@ 46
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.containsHeader(XSS_PROTECTION_HEADER) @AT@ 1577 @LENGTH@ 8
---------INS SimpleName@@MethodName:containsHeader:[XSS_PROTECTION_HEADER] @TO@ MethodInvocation@@response.containsHeader(XSS_PROTECTION_HEADER) @AT@ 1586 @LENGTH@ 37
------------INS SimpleName@@XSS_PROTECTION_HEADER @TO@ SimpleName@@MethodName:containsHeader:[XSS_PROTECTION_HEADER] @AT@ 1601 @LENGTH@ 21
---INS Block@@ThenBody:{  response.setHeader(XSS_PROTECTION_HEADER,headerValue);} @TO@ IfStatement@@if (!response.containsHeader(XSS_PROTECTION_HEADER)) {  response.setHeader(XSS_PROTECTION_HEADER,headerValue);} @AT@ 1625 @LENGTH@ 64
------MOV ExpressionStatement@@MethodInvocation:response.setHeader(XSS_PROTECTION_HEADER,headerValue) @TO@ Block@@ThenBody:{  response.setHeader(XSS_PROTECTION_HEADER,headerValue);} @AT@ 1548 @LENGTH@ 55


UPD FieldDeclaration@@private, static, final, Logger, [_log=LoggerFactory.getLogger(AttachFileRoute.class)] @TO@ private, static, final, Logger, [LOG=LoggerFactory.getLogger(AttachFileRoute.class)] @AT@ 1132 @LENGTH@ 82
---UPD VariableDeclarationFragment@@_log=LoggerFactory.getLogger(AttachFileRoute.class) @TO@ LOG=LoggerFactory.getLogger(AttachFileRoute.class) @AT@ 1160 @LENGTH@ 53
------UPD SimpleName@@_log @TO@ LOG @AT@ 1160 @LENGTH@ 4


UPD TypeDeclaration@@[public]ReactiveHelper,  @TO@ [public, final]ReactiveHelper,  @AT@ 1013 @LENGTH@ 4540
---INS Modifier@@final @TO@ TypeDeclaration@@[public]ReactiveHelper,  @AT@ 973 @LENGTH@ 5


UPD IfStatement@@if (patternToken.getType() != JsonTokenType.STRING) {  throw new JsonParseException("JSON reader expected a string but found '%s'.",patternToken.getValue());} @TO@ if (patternToken.getType() == JsonTokenType.STRING || patternToken.getType() == JsonTokenType.UNQUOTED_STRING) {  return bindableValueFor(patternToken).getValue().toString();} @AT@ 41282 @LENGTH@ 164
---DEL InfixExpression@@patternToken.getType() != JsonTokenType.STRING @AT@ 41286 @LENGTH@ 46
---INS InfixExpression@@patternToken.getType() == JsonTokenType.STRING || patternToken.getType() == JsonTokenType.UNQUOTED_STRING @TO@ IfStatement@@if (patternToken.getType() != JsonTokenType.STRING) {  throw new JsonParseException("JSON reader expected a string but found '%s'.",patternToken.getValue());} @AT@ 41325 @LENGTH@ 105
------INS InfixExpression@@patternToken.getType() == JsonTokenType.STRING @TO@ InfixExpression@@patternToken.getType() == JsonTokenType.STRING || patternToken.getType() == JsonTokenType.UNQUOTED_STRING @AT@ 41325 @LENGTH@ 46
---------MOV MethodInvocation@@patternToken.getType() @TO@ InfixExpression@@patternToken.getType() == JsonTokenType.STRING @AT@ 41286 @LENGTH@ 22
---------MOV Operator@@!= @TO@ InfixExpression@@patternToken.getType() == JsonTokenType.STRING @AT@ 41308 @LENGTH@ 2
---------MOV QualifiedName@@JsonTokenType.STRING @TO@ InfixExpression@@patternToken.getType() == JsonTokenType.STRING @AT@ 41312 @LENGTH@ 20
------INS Operator@@|| @TO@ InfixExpression@@patternToken.getType() == JsonTokenType.STRING || patternToken.getType() == JsonTokenType.UNQUOTED_STRING @AT@ 41371 @LENGTH@ 2
------INS InfixExpression@@patternToken.getType() == JsonTokenType.UNQUOTED_STRING @TO@ InfixExpression@@patternToken.getType() == JsonTokenType.STRING || patternToken.getType() == JsonTokenType.UNQUOTED_STRING @AT@ 41375 @LENGTH@ 55
---------INS MethodInvocation@@patternToken.getType() @TO@ InfixExpression@@patternToken.getType() == JsonTokenType.UNQUOTED_STRING @AT@ 41375 @LENGTH@ 22
------------INS SimpleName@@Name:patternToken @TO@ MethodInvocation@@patternToken.getType() @AT@ 41375 @LENGTH@ 12
------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@patternToken.getType() @AT@ 41388 @LENGTH@ 9
---------INS Operator@@== @TO@ InfixExpression@@patternToken.getType() == JsonTokenType.UNQUOTED_STRING @AT@ 41397 @LENGTH@ 2
---------INS QualifiedName@@JsonTokenType.UNQUOTED_STRING @TO@ InfixExpression@@patternToken.getType() == JsonTokenType.UNQUOTED_STRING @AT@ 41401 @LENGTH@ 29
------------INS SimpleName@@JsonTokenType @TO@ QualifiedName@@JsonTokenType.UNQUOTED_STRING @AT@ 41401 @LENGTH@ 13
------------INS SimpleName@@UNQUOTED_STRING @TO@ QualifiedName@@JsonTokenType.UNQUOTED_STRING @AT@ 41415 @LENGTH@ 15
---UPD Block@@ThenBody:{  throw new JsonParseException("JSON reader expected a string but found '%s'.",patternToken.getValue());} @TO@ ThenBody:{  return bindableValueFor(patternToken).getValue().toString();} @AT@ 41334 @LENGTH@ 112
------MOV ReturnStatement@@MethodInvocation:bindableValueFor(patternToken).getValue().toString() @TO@ Block@@ThenBody:{  throw new JsonParseException("JSON reader expected a string but found '%s'.",patternToken.getValue());} @AT@ 41487 @LENGTH@ 60


UPD VariableDeclarationStatement@@String originalModelXML=ModelHelper.dumpModelAsXml(context,context.getRouteDefinition("foo")); @TO@ String originalModelXML=ModelHelper.dumpModelAsXml(context,context.adapt(ModelCamelContext.class).getRouteDefinition("foo")); @AT@ 2367 @LENGTH@ 97
---UPD VariableDeclarationFragment@@originalModelXML=ModelHelper.dumpModelAsXml(context,context.getRouteDefinition("foo")) @TO@ originalModelXML=ModelHelper.dumpModelAsXml(context,context.adapt(ModelCamelContext.class).getRouteDefinition("foo")) @AT@ 2374 @LENGTH@ 89
------UPD MethodInvocation@@ModelHelper.dumpModelAsXml(context,context.getRouteDefinition("foo")) @TO@ ModelHelper.dumpModelAsXml(context,context.adapt(ModelCamelContext.class).getRouteDefinition("foo")) @AT@ 2393 @LENGTH@ 70
---------UPD SimpleName@@MethodName:dumpModelAsXml:[context, context.getRouteDefinition("foo")] @TO@ MethodName:dumpModelAsXml:[context, context.adapt(ModelCamelContext.class).getRouteDefinition("foo")] @AT@ 2405 @LENGTH@ 58
------------UPD MethodInvocation@@context.getRouteDefinition("foo") @TO@ context.adapt(ModelCamelContext.class).getRouteDefinition("foo") @AT@ 2429 @LENGTH@ 33
---------------INS MethodInvocation@@MethodName:adapt:[ModelCamelContext.class] @TO@ MethodInvocation@@context.getRouteDefinition("foo") @AT@ 2478 @LENGTH@ 38
------------------INS TypeLiteral@@ModelCamelContext.class @TO@ MethodInvocation@@MethodName:adapt:[ModelCamelContext.class] @AT@ 2492 @LENGTH@ 23


INS MethodDeclaration@@public, void, MethodName:collectionLookupShouldBeLazy,  @TO@ TypeDeclaration@@[public]ObjectPathUnitTests,  @AT@ 2883 @LENGTH@ 378
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:collectionLookupShouldBeLazy,  @AT@ 2883 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:collectionLookupShouldBeLazy,  @AT@ 2890 @LENGTH@ 4
---INS SimpleName@@MethodName:collectionLookupShouldBeLazy @TO@ MethodDeclaration@@public, void, MethodName:collectionLookupShouldBeLazy,  @AT@ 2895 @LENGTH@ 28
---INS VariableDeclarationStatement@@MongoPersistentEntity<EntityOne> spied=spy(one); @TO@ MethodDeclaration@@public, void, MethodName:collectionLookupShouldBeLazy,  @AT@ 3002 @LENGTH@ 50
------INS ParameterizedType@@MongoPersistentEntity<EntityOne> @TO@ VariableDeclarationStatement@@MongoPersistentEntity<EntityOne> spied=spy(one); @AT@ 3002 @LENGTH@ 32
---------INS SimpleType@@MongoPersistentEntity @TO@ ParameterizedType@@MongoPersistentEntity<EntityOne> @AT@ 3002 @LENGTH@ 21
---------INS SimpleType@@EntityOne @TO@ ParameterizedType@@MongoPersistentEntity<EntityOne> @AT@ 3024 @LENGTH@ 9
------INS VariableDeclarationFragment@@spied=spy(one) @TO@ VariableDeclarationStatement@@MongoPersistentEntity<EntityOne> spied=spy(one); @AT@ 3035 @LENGTH@ 16
---------INS SimpleName@@spied @TO@ VariableDeclarationFragment@@spied=spy(one) @AT@ 3035 @LENGTH@ 5
---------INS MethodInvocation@@spy(one) @TO@ VariableDeclarationFragment@@spied=spy(one) @AT@ 3043 @LENGTH@ 8
------------INS SimpleName@@MethodName:spy:[one] @TO@ MethodInvocation@@spy(one) @AT@ 3043 @LENGTH@ 8
---------------INS SimpleName@@one @TO@ SimpleName@@MethodName:spy:[one] @AT@ 3047 @LENGTH@ 3
---INS VariableDeclarationStatement@@ObjectPath path=ObjectPath.ROOT.push(new EntityThree(),spied,"id-1"); @TO@ MethodDeclaration@@public, void, MethodName:collectionLookupShouldBeLazy,  @AT@ 3055 @LENGTH@ 73
------INS SimpleType@@ObjectPath @TO@ VariableDeclarationStatement@@ObjectPath path=ObjectPath.ROOT.push(new EntityThree(),spied,"id-1"); @AT@ 3055 @LENGTH@ 10
------INS VariableDeclarationFragment@@path=ObjectPath.ROOT.push(new EntityThree(),spied,"id-1") @TO@ VariableDeclarationStatement@@ObjectPath path=ObjectPath.ROOT.push(new EntityThree(),spied,"id-1"); @AT@ 3066 @LENGTH@ 61
---------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=ObjectPath.ROOT.push(new EntityThree(),spied,"id-1") @AT@ 3066 @LENGTH@ 4
---------INS MethodInvocation@@ObjectPath.ROOT.push(new EntityThree(),spied,"id-1") @TO@ VariableDeclarationFragment@@path=ObjectPath.ROOT.push(new EntityThree(),spied,"id-1") @AT@ 3073 @LENGTH@ 54
------------INS QualifiedName@@Name:ObjectPath.ROOT @TO@ MethodInvocation@@ObjectPath.ROOT.push(new EntityThree(),spied,"id-1") @AT@ 3073 @LENGTH@ 15
------------INS SimpleName@@MethodName:push:[new EntityThree(), spied, "id-1"] @TO@ MethodInvocation@@ObjectPath.ROOT.push(new EntityThree(),spied,"id-1") @AT@ 3089 @LENGTH@ 38
---------------INS ClassInstanceCreation@@EntityThree[] @TO@ SimpleName@@MethodName:push:[new EntityThree(), spied, "id-1"] @AT@ 3094 @LENGTH@ 17
------------------INS New@@new @TO@ ClassInstanceCreation@@EntityThree[] @AT@ 3094 @LENGTH@ 3
------------------INS SimpleType@@EntityThree @TO@ ClassInstanceCreation@@EntityThree[] @AT@ 3098 @LENGTH@ 11
---------------INS SimpleName@@spied @TO@ SimpleName@@MethodName:push:[new EntityThree(), spied, "id-1"] @AT@ 3113 @LENGTH@ 5
---------------INS StringLiteral@@"id-1" @TO@ SimpleName@@MethodName:push:[new EntityThree(), spied, "id-1"] @AT@ 3120 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:verify(spied,never()).getCollection() @TO@ MethodDeclaration@@public, void, MethodName:collectionLookupShouldBeLazy,  @AT@ 3132 @LENGTH@ 39
------INS MethodInvocation@@verify(spied,never()).getCollection() @TO@ ExpressionStatement@@MethodInvocation:verify(spied,never()).getCollection() @AT@ 3132 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:verify:[spied, never()] @TO@ MethodInvocation@@verify(spied,never()).getCollection() @AT@ 3132 @LENGTH@ 22
------------INS SimpleName@@spied @TO@ MethodInvocation@@MethodName:verify:[spied, never()] @AT@ 3139 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:never:[] @TO@ MethodInvocation@@MethodName:verify:[spied, never()] @AT@ 3146 @LENGTH@ 7
---------INS SimpleName@@MethodName:getCollection:[] @TO@ MethodInvocation@@verify(spied,never()).getCollection() @AT@ 3155 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:path.getPathItem("id-1","foo",EntityTwo.class) @TO@ MethodDeclaration@@public, void, MethodName:collectionLookupShouldBeLazy,  @AT@ 3175 @LENGTH@ 49
------INS MethodInvocation@@path.getPathItem("id-1","foo",EntityTwo.class) @TO@ ExpressionStatement@@MethodInvocation:path.getPathItem("id-1","foo",EntityTwo.class) @AT@ 3175 @LENGTH@ 48
---------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.getPathItem("id-1","foo",EntityTwo.class) @AT@ 3175 @LENGTH@ 4
---------INS SimpleName@@MethodName:getPathItem:["id-1", "foo", EntityTwo.class] @TO@ MethodInvocation@@path.getPathItem("id-1","foo",EntityTwo.class) @AT@ 3180 @LENGTH@ 43
------------INS StringLiteral@@"id-1" @TO@ SimpleName@@MethodName:getPathItem:["id-1", "foo", EntityTwo.class] @AT@ 3192 @LENGTH@ 6
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:getPathItem:["id-1", "foo", EntityTwo.class] @AT@ 3200 @LENGTH@ 5
------------INS TypeLiteral@@EntityTwo.class @TO@ SimpleName@@MethodName:getPathItem:["id-1", "foo", EntityTwo.class] @AT@ 3207 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:verify(spied).getCollection() @TO@ MethodDeclaration@@public, void, MethodName:collectionLookupShouldBeLazy,  @AT@ 3228 @LENGTH@ 30
------INS MethodInvocation@@verify(spied).getCollection() @TO@ ExpressionStatement@@MethodInvocation:verify(spied).getCollection() @AT@ 3228 @LENGTH@ 29
---------INS MethodInvocation@@MethodName:verify:[spied] @TO@ MethodInvocation@@verify(spied).getCollection() @AT@ 3228 @LENGTH@ 13
------------INS SimpleName@@spied @TO@ MethodInvocation@@MethodName:verify:[spied] @AT@ 3235 @LENGTH@ 5
---------INS SimpleName@@MethodName:getCollection:[] @TO@ MethodInvocation@@verify(spied).getCollection() @AT@ 3242 @LENGTH@ 15


INS MethodDeclaration@@public, static, void, MethodName:noJDK12,  @TO@ TypeDeclaration@@[@RunWith(WildflyTestRunner.class), @ServerSetup(AuditLogToTLSSyslogSetup.class), public]AuditLogToTLSSyslogTestCase, AuditLogToSyslogTestCase @AT@ 1219 @LENGTH@ 202
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:noJDK12,  @AT@ 1219 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:noJDK12,  @AT@ 1226 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:noJDK12,  @AT@ 1233 @LENGTH@ 4
---INS SimpleName@@MethodName:noJDK12 @TO@ MethodDeclaration@@public, static, void, MethodName:noJDK12,  @AT@ 1238 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:Assume.assumeFalse("Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658","12".equals(System.getProperty("java.specification.version"))) @TO@ MethodDeclaration@@public, static, void, MethodName:noJDK12,  @AT@ 1258 @LENGTH@ 157
------INS MethodInvocation@@Assume.assumeFalse("Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658","12".equals(System.getProperty("java.specification.version"))) @TO@ ExpressionStatement@@MethodInvocation:Assume.assumeFalse("Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658","12".equals(System.getProperty("java.specification.version"))) @AT@ 1258 @LENGTH@ 156
---------INS SimpleName@@Name:Assume @TO@ MethodInvocation@@Assume.assumeFalse("Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658","12".equals(System.getProperty("java.specification.version"))) @AT@ 1258 @LENGTH@ 6
---------INS SimpleName@@MethodName:assumeFalse:["Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658", "12".equals(System.getProperty("java.specification.version"))] @TO@ MethodInvocation@@Assume.assumeFalse("Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658","12".equals(System.getProperty("java.specification.version"))) @AT@ 1265 @LENGTH@ 149
------------INS StringLiteral@@"Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658" @TO@ SimpleName@@MethodName:assumeFalse:["Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658", "12".equals(System.getProperty("java.specification.version"))] @AT@ 1277 @LENGTH@ 73
------------INS MethodInvocation@@"12".equals(System.getProperty("java.specification.version")) @TO@ SimpleName@@MethodName:assumeFalse:["Avoiding JDK 12 due to https://bugs.openjdk.java.net/browse/JDK-8219658", "12".equals(System.getProperty("java.specification.version"))] @AT@ 1352 @LENGTH@ 61
---------------INS StringLiteral@@"12" @TO@ MethodInvocation@@"12".equals(System.getProperty("java.specification.version")) @AT@ 1352 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:[System.getProperty("java.specification.version")] @TO@ MethodInvocation@@"12".equals(System.getProperty("java.specification.version")) @AT@ 1357 @LENGTH@ 56
------------------INS MethodInvocation@@System.getProperty("java.specification.version") @TO@ SimpleName@@MethodName:equals:[System.getProperty("java.specification.version")] @AT@ 1364 @LENGTH@ 48
---------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("java.specification.version") @AT@ 1364 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getProperty:["java.specification.version"] @TO@ MethodInvocation@@System.getProperty("java.specification.version") @AT@ 1371 @LENGTH@ 41
------------------------INS StringLiteral@@"java.specification.version" @TO@ SimpleName@@MethodName:getProperty:["java.specification.version"] @AT@ 1383 @LENGTH@ 28


UPD IfStatement@@if (o == null || getClass() != o.getClass()) return false; @TO@ if (o == null || getClass() != o.getClass()) {  return false;} @AT@ 1279 @LENGTH@ 58
---UPD Block@@ThenBody:return false; @TO@ ThenBody:{  return false;} @AT@ 1324 @LENGTH@ 13


UPD ReturnStatement@@MethodInvocation:OAuth2AuthorizationRequest.authorizationCode().authorizationUri(registration.getProviderDetails().getAuthorizationUri()).clientId(registration.getClientId()).state("state123").redirectUri("http://localhost").additionalParameters(Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,registration.getRegistrationId())).scope(scopes).build() @TO@ MethodInvocation:OAuth2AuthorizationRequest.authorizationCode().authorizationUri(registration.getProviderDetails().getAuthorizationUri()).clientId(registration.getClientId()).state("state123").redirectUri("http://localhost").attributes(Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,registration.getRegistrationId())).scope(scopes).build() @AT@ 20542 @LENGTH@ 415
---UPD MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(registration.getProviderDetails().getAuthorizationUri()).clientId(registration.getClientId()).state("state123").redirectUri("http://localhost").additionalParameters(Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,registration.getRegistrationId())).scope(scopes).build() @TO@ OAuth2AuthorizationRequest.authorizationCode().authorizationUri(registration.getProviderDetails().getAuthorizationUri()).clientId(registration.getClientId()).state("state123").redirectUri("http://localhost").attributes(Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,registration.getRegistrationId())).scope(scopes).build() @AT@ 20549 @LENGTH@ 407
------UPD MethodInvocation@@MethodName:additionalParameters:[Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,registration.getRegistrationId())] @TO@ MethodName:attributes:[Collections.singletonMap(OAuth2ParameterNames.REGISTRATION_ID,registration.getRegistrationId())] @AT@ 20549 @LENGTH@ 375


INS MethodDeclaration@@public, void, MethodName:doesNotConvertCollectionToStreamableIfReturnTypeIsIterable,  @TO@ TypeDeclaration@@[public]QueryExecutionConvertersUnitTests,  @AT@ 13580 @LENGTH@ 211
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesNotConvertCollectionToStreamableIfReturnTypeIsIterable,  @AT@ 13580 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesNotConvertCollectionToStreamableIfReturnTypeIsIterable,  @AT@ 13587 @LENGTH@ 4
---INS SimpleName@@MethodName:doesNotConvertCollectionToStreamableIfReturnTypeIsIterable @TO@ MethodDeclaration@@public, void, MethodName:doesNotConvertCollectionToStreamableIfReturnTypeIsIterable,  @AT@ 13592 @LENGTH@ 58
---INS VariableDeclarationStatement@@List<String> source=Arrays.asList("1","2"); @TO@ MethodDeclaration@@public, void, MethodName:doesNotConvertCollectionToStreamableIfReturnTypeIsIterable,  @AT@ 13658 @LENGTH@ 46
------INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> source=Arrays.asList("1","2"); @AT@ 13658 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 13658 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 13663 @LENGTH@ 6
------INS VariableDeclarationFragment@@source=Arrays.asList("1","2") @TO@ VariableDeclarationStatement@@List<String> source=Arrays.asList("1","2"); @AT@ 13671 @LENGTH@ 32
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=Arrays.asList("1","2") @AT@ 13671 @LENGTH@ 6
---------INS MethodInvocation@@Arrays.asList("1","2") @TO@ VariableDeclarationFragment@@source=Arrays.asList("1","2") @AT@ 13680 @LENGTH@ 23
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("1","2") @AT@ 13680 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:["1", "2"] @TO@ MethodInvocation@@Arrays.asList("1","2") @AT@ 13687 @LENGTH@ 16
---------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:asList:["1", "2"] @AT@ 13694 @LENGTH@ 3
---------------INS StringLiteral@@"2" @TO@ SimpleName@@MethodName:asList:["1", "2"] @AT@ 13699 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(conversionService.convert(source,Iterable.class)).isSameAs(source) @TO@ MethodDeclaration@@public, void, MethodName:doesNotConvertCollectionToStreamableIfReturnTypeIsIterable,  @AT@ 13708 @LENGTH@ 79
------INS MethodInvocation@@assertThat(conversionService.convert(source,Iterable.class)).isSameAs(source) @TO@ ExpressionStatement@@MethodInvocation:assertThat(conversionService.convert(source,Iterable.class)).isSameAs(source) @AT@ 13708 @LENGTH@ 78
---------INS MethodInvocation@@MethodName:assertThat:[conversionService.convert(source,Iterable.class)] @TO@ MethodInvocation@@assertThat(conversionService.convert(source,Iterable.class)).isSameAs(source) @AT@ 13708 @LENGTH@ 61
------------INS MethodInvocation@@conversionService.convert(source,Iterable.class) @TO@ MethodInvocation@@MethodName:assertThat:[conversionService.convert(source,Iterable.class)] @AT@ 13719 @LENGTH@ 49
---------------INS SimpleName@@Name:conversionService @TO@ MethodInvocation@@conversionService.convert(source,Iterable.class) @AT@ 13719 @LENGTH@ 17
---------------INS SimpleName@@MethodName:convert:[source, Iterable.class] @TO@ MethodInvocation@@conversionService.convert(source,Iterable.class) @AT@ 13737 @LENGTH@ 31
------------------INS SimpleName@@source @TO@ SimpleName@@MethodName:convert:[source, Iterable.class] @AT@ 13745 @LENGTH@ 6
------------------INS TypeLiteral@@Iterable.class @TO@ SimpleName@@MethodName:convert:[source, Iterable.class] @AT@ 13753 @LENGTH@ 14
---------INS SimpleName@@MethodName:isSameAs:[source] @TO@ MethodInvocation@@assertThat(conversionService.convert(source,Iterable.class)).isSameAs(source) @AT@ 13770 @LENGTH@ 16
------------INS SimpleName@@source @TO@ SimpleName@@MethodName:isSameAs:[source] @AT@ 13779 @LENGTH@ 6


UPD ReturnStatement@@ConditionalExpression:slotFilled ? true : iterator.hasNext() @TO@ InfixExpression:slotFilled || iterator.hasNext() @AT@ 3373 @LENGTH@ 46
---DEL ConditionalExpression@@slotFilled ? true : iterator.hasNext() @AT@ 3380 @LENGTH@ 38
------DEL SimpleName@@slotFilled @AT@ 3380 @LENGTH@ 10
------DEL BooleanLiteral@@true @AT@ 3393 @LENGTH@ 4
------DEL MethodInvocation@@iterator.hasNext() @AT@ 3400 @LENGTH@ 18
---INS InfixExpression@@slotFilled || iterator.hasNext() @TO@ ReturnStatement@@ConditionalExpression:slotFilled ? true : iterator.hasNext() @AT@ 3380 @LENGTH@ 32
------INS SimpleName@@slotFilled @TO@ InfixExpression@@slotFilled || iterator.hasNext() @AT@ 3380 @LENGTH@ 10
------INS Operator@@|| @TO@ InfixExpression@@slotFilled || iterator.hasNext() @AT@ 3390 @LENGTH@ 2
------INS MethodInvocation@@iterator.hasNext() @TO@ InfixExpression@@slotFilled || iterator.hasNext() @AT@ 3394 @LENGTH@ 18
---------MOV SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.hasNext() @AT@ 3400 @LENGTH@ 8
---------MOV SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@iterator.hasNext() @AT@ 3409 @LENGTH@ 9


MOV MethodDeclaration@@public, String, MethodName:getDataFormatName,  @TO@ TypeDeclaration@@[@Dataformat("jsonApi"), public]JsonApiDataFormat, ServiceSupport[DataFormat, DataFormatName] @AT@ 1533 @LENGTH@ 67


MOV MethodDeclaration@@public, static, LoadBalancerReifier<? extends LoadBalancerDefinition>, MethodName:reifier, LoadBalancerDefinition definition,  @TO@ TypeDeclaration@@[public]LoadBalancerReifier,  @AT@ 2740 @LENGTH@ 436


INS MethodDeclaration@@public, void, MethodName:doesNotDropValuesContainingABlank,  @TO@ TypeDeclaration@@[public]QuerydslPredicateBuilderUnitTests,  @AT@ 7304 @LENGTH@ 207
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesNotDropValuesContainingABlank,  @AT@ 7304 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesNotDropValuesContainingABlank,  @AT@ 7311 @LENGTH@ 4
---INS SimpleName@@MethodName:doesNotDropValuesContainingABlank @TO@ MethodDeclaration@@public, void, MethodName:doesNotDropValuesContainingABlank,  @AT@ 7316 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:values.add("firstname"," ") @TO@ MethodDeclaration@@public, void, MethodName:doesNotDropValuesContainingABlank,  @AT@ 7357 @LENGTH@ 29
------INS MethodInvocation@@values.add("firstname"," ") @TO@ ExpressionStatement@@MethodInvocation:values.add("firstname"," ") @AT@ 7357 @LENGTH@ 28
---------INS SimpleName@@Name:values @TO@ MethodInvocation@@values.add("firstname"," ") @AT@ 7357 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:["firstname", " "] @TO@ MethodInvocation@@values.add("firstname"," ") @AT@ 7364 @LENGTH@ 21
------------INS StringLiteral@@"firstname" @TO@ SimpleName@@MethodName:add:["firstname", " "] @AT@ 7368 @LENGTH@ 11
------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:add:["firstname", " "] @AT@ 7381 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)).isEqualTo(QUser.user.firstname.eq(" ")) @TO@ MethodDeclaration@@public, void, MethodName:doesNotDropValuesContainingABlank,  @AT@ 7390 @LENGTH@ 118
------INS MethodInvocation@@assertThat(builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)).isEqualTo(QUser.user.firstname.eq(" ")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)).isEqualTo(QUser.user.firstname.eq(" ")) @AT@ 7390 @LENGTH@ 117
---------INS MethodInvocation@@MethodName:assertThat:[builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)] @TO@ MethodInvocation@@assertThat(builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)).isEqualTo(QUser.user.firstname.eq(" ")) @AT@ 7390 @LENGTH@ 69
------------INS MethodInvocation@@builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS) @TO@ MethodInvocation@@MethodName:assertThat:[builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)] @AT@ 7401 @LENGTH@ 57
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS) @AT@ 7401 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getPredicate:[USER_TYPE, values, DEFAULT_BINDINGS] @TO@ MethodInvocation@@builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS) @AT@ 7409 @LENGTH@ 49
------------------INS SimpleName@@USER_TYPE @TO@ SimpleName@@MethodName:getPredicate:[USER_TYPE, values, DEFAULT_BINDINGS] @AT@ 7422 @LENGTH@ 9
------------------INS SimpleName@@values @TO@ SimpleName@@MethodName:getPredicate:[USER_TYPE, values, DEFAULT_BINDINGS] @AT@ 7433 @LENGTH@ 6
------------------INS SimpleName@@DEFAULT_BINDINGS @TO@ SimpleName@@MethodName:getPredicate:[USER_TYPE, values, DEFAULT_BINDINGS] @AT@ 7441 @LENGTH@ 16
---------INS SimpleName@@MethodName:isEqualTo:[QUser.user.firstname.eq(" ")] @TO@ MethodInvocation@@assertThat(builder.getPredicate(USER_TYPE,values,DEFAULT_BINDINGS)).isEqualTo(QUser.user.firstname.eq(" ")) @AT@ 7468 @LENGTH@ 39
------------INS MethodInvocation@@QUser.user.firstname.eq(" ") @TO@ SimpleName@@MethodName:isEqualTo:[QUser.user.firstname.eq(" ")] @AT@ 7478 @LENGTH@ 28
---------------INS QualifiedName@@Name:QUser.user.firstname @TO@ MethodInvocation@@QUser.user.firstname.eq(" ") @AT@ 7478 @LENGTH@ 20
---------------INS SimpleName@@MethodName:eq:[" "] @TO@ MethodInvocation@@QUser.user.firstname.eq(" ") @AT@ 7499 @LENGTH@ 7
------------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:eq:[" "] @AT@ 7502 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:((StatefulRedisConnection)connection).sync().ping() @TO@ MethodInvocation:((StatefulRedisClusterConnection)connection).sync().ping() @AT@ 38440 @LENGTH@ 53
---UPD MethodInvocation@@((StatefulRedisConnection)connection).sync().ping() @TO@ ((StatefulRedisClusterConnection)connection).sync().ping() @AT@ 38440 @LENGTH@ 52
------UPD ParenthesizedExpression@@((StatefulRedisConnection)connection) @TO@ ((StatefulRedisClusterConnection)connection) @AT@ 38440 @LENGTH@ 38
---------UPD CastExpression@@(StatefulRedisConnection)connection @TO@ (StatefulRedisClusterConnection)connection @AT@ 38441 @LENGTH@ 36
------------UPD SimpleType@@StatefulRedisConnection @TO@ StatefulRedisClusterConnection @AT@ 38442 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:nodes.add(new NodeImpl(n.getType(),n.getType())) @TO@ MethodInvocation:nodes.add(new NodeImpl(n.getType(),n.getName())) @AT@ 2842 @LENGTH@ 50
---UPD MethodInvocation@@nodes.add(new NodeImpl(n.getType(),n.getType())) @TO@ nodes.add(new NodeImpl(n.getType(),n.getName())) @AT@ 2842 @LENGTH@ 49
------UPD SimpleName@@MethodName:add:[new NodeImpl(n.getType(),n.getType())] @TO@ MethodName:add:[new NodeImpl(n.getType(),n.getName())] @AT@ 2848 @LENGTH@ 43
---------UPD ClassInstanceCreation@@NodeImpl[n.getType(), n.getType()] @TO@ NodeImpl[n.getType(), n.getName()] @AT@ 2852 @LENGTH@ 38
------------UPD MethodInvocation@@n.getType() @TO@ n.getName() @AT@ 2878 @LENGTH@ 11
---------------UPD SimpleName@@MethodName:getType:[] @TO@ MethodName:getName:[] @AT@ 2880 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:ReflectionTestUtils.setField(this.authenticationProvider,"jwtDecoders",Collections.singletonMap("registration-id",jwtDecoder)) @TO@ MethodInvocation:this.authenticationProvider.setJwtDecoderFactory(registration -> jwtDecoder) @AT@ 19961 @LENGTH@ 134
---UPD MethodInvocation@@ReflectionTestUtils.setField(this.authenticationProvider,"jwtDecoders",Collections.singletonMap("registration-id",jwtDecoder)) @TO@ this.authenticationProvider.setJwtDecoderFactory(registration -> jwtDecoder) @AT@ 19961 @LENGTH@ 133
------DEL SimpleName@@Name:ReflectionTestUtils @AT@ 19961 @LENGTH@ 19
------DEL SimpleName@@MethodName:setField:[this.authenticationProvider, "jwtDecoders", Collections.singletonMap("registration-id",jwtDecoder)] @AT@ 19981 @LENGTH@ 113
---------DEL FieldAccess@@this.authenticationProvider @AT@ 19990 @LENGTH@ 27
---------DEL StringLiteral@@"jwtDecoders" @AT@ 20023 @LENGTH@ 13
---------DEL MethodInvocation@@Collections.singletonMap("registration-id",jwtDecoder) @AT@ 20038 @LENGTH@ 55
------------DEL SimpleName@@Name:Collections @AT@ 20038 @LENGTH@ 11
------INS FieldAccess@@this.authenticationProvider @TO@ MethodInvocation@@ReflectionTestUtils.setField(this.authenticationProvider,"jwtDecoders",Collections.singletonMap("registration-id",jwtDecoder)) @AT@ 19993 @LENGTH@ 27
---------MOV ThisExpression@@this @TO@ FieldAccess@@this.authenticationProvider @AT@ 19990 @LENGTH@ 4
---------MOV SimpleName@@authenticationProvider @TO@ FieldAccess@@this.authenticationProvider @AT@ 19995 @LENGTH@ 22
------MOV SimpleName@@MethodName:singletonMap:["registration-id", jwtDecoder] @TO@ MethodInvocation@@ReflectionTestUtils.setField(this.authenticationProvider,"jwtDecoders",Collections.singletonMap("registration-id",jwtDecoder)) @AT@ 20050 @LENGTH@ 43
---------INS LambdaExpression@@registration -> jwtDecoder @TO@ SimpleName@@MethodName:singletonMap:["registration-id", jwtDecoder] @AT@ 20042 @LENGTH@ 26
------------INS VariableDeclarationFragment@@registration @TO@ LambdaExpression@@registration -> jwtDecoder @AT@ 20042 @LENGTH@ 12
---------------INS SimpleName@@registration @TO@ VariableDeclarationFragment@@registration @AT@ 20042 @LENGTH@ 12
---------------INS SimpleName@@registration @TO@ VariableDeclarationFragment@@registration @AT@ 20042 @LENGTH@ 12
------------INS SimpleName@@jwtDecoder @TO@ LambdaExpression@@registration -> jwtDecoder @AT@ 20058 @LENGTH@ 10
---------DEL StringLiteral@@"registration-id" @AT@ 20063 @LENGTH@ 17
---------DEL SimpleName@@jwtDecoder @AT@ 20082 @LENGTH@ 10


INS MethodDeclaration@@public, ListenableFuture<String>, MethodName:myPojoMessageMethod, String input,  @TO@ TypeDeclaration@@Delegate,  @AT@ 8516 @LENGTH@ 208
---INS Modifier@@public @TO@ MethodDeclaration@@public, ListenableFuture<String>, MethodName:myPojoMessageMethod, String input,  @AT@ 8516 @LENGTH@ 6
---INS ParameterizedType@@ListenableFuture<String> @TO@ MethodDeclaration@@public, ListenableFuture<String>, MethodName:myPojoMessageMethod, String input,  @AT@ 8523 @LENGTH@ 24
------INS SimpleType@@ListenableFuture @TO@ ParameterizedType@@ListenableFuture<String> @AT@ 8523 @LENGTH@ 16
------INS SimpleType@@String @TO@ ParameterizedType@@ListenableFuture<String> @AT@ 8540 @LENGTH@ 6
---INS SimpleName@@MethodName:myPojoMessageMethod @TO@ MethodDeclaration@@public, ListenableFuture<String>, MethodName:myPojoMessageMethod, String input,  @AT@ 8548 @LENGTH@ 19
---INS SingleVariableDeclaration@@String input @TO@ MethodDeclaration@@public, ListenableFuture<String>, MethodName:myPojoMessageMethod, String input,  @AT@ 8568 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String input @AT@ 8568 @LENGTH@ 6
------INS SimpleName@@input @TO@ SingleVariableDeclaration@@String input @AT@ 8575 @LENGTH@ 5
---INS VariableDeclarationStatement@@SettableListenableFuture<String> future=new SettableListenableFuture<>(); @TO@ MethodDeclaration@@public, ListenableFuture<String>, MethodName:myPojoMessageMethod, String input,  @AT@ 8588 @LENGTH@ 75
------INS ParameterizedType@@SettableListenableFuture<String> @TO@ VariableDeclarationStatement@@SettableListenableFuture<String> future=new SettableListenableFuture<>(); @AT@ 8588 @LENGTH@ 32
---------INS SimpleType@@SettableListenableFuture @TO@ ParameterizedType@@SettableListenableFuture<String> @AT@ 8588 @LENGTH@ 24
---------INS SimpleType@@String @TO@ ParameterizedType@@SettableListenableFuture<String> @AT@ 8613 @LENGTH@ 6
------INS VariableDeclarationFragment@@future=new SettableListenableFuture<>() @TO@ VariableDeclarationStatement@@SettableListenableFuture<String> future=new SettableListenableFuture<>(); @AT@ 8621 @LENGTH@ 41
---------INS SimpleName@@future @TO@ VariableDeclarationFragment@@future=new SettableListenableFuture<>() @AT@ 8621 @LENGTH@ 6
---------INS ClassInstanceCreation@@SettableListenableFuture<>[] @TO@ VariableDeclarationFragment@@future=new SettableListenableFuture<>() @AT@ 8630 @LENGTH@ 32
------------INS New@@new @TO@ ClassInstanceCreation@@SettableListenableFuture<>[] @AT@ 8630 @LENGTH@ 3
------------INS ParameterizedType@@SettableListenableFuture<> @TO@ ClassInstanceCreation@@SettableListenableFuture<>[] @AT@ 8634 @LENGTH@ 26
---------------INS SimpleType@@SettableListenableFuture @TO@ ParameterizedType@@SettableListenableFuture<> @AT@ 8634 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:future.set("processed" + input) @TO@ MethodDeclaration@@public, ListenableFuture<String>, MethodName:myPojoMessageMethod, String input,  @AT@ 8668 @LENGTH@ 32
------INS MethodInvocation@@future.set("processed" + input) @TO@ ExpressionStatement@@MethodInvocation:future.set("processed" + input) @AT@ 8668 @LENGTH@ 31
---------INS SimpleName@@Name:future @TO@ MethodInvocation@@future.set("processed" + input) @AT@ 8668 @LENGTH@ 6
---------INS SimpleName@@MethodName:set:["processed" + input] @TO@ MethodInvocation@@future.set("processed" + input) @AT@ 8675 @LENGTH@ 24
------------INS InfixExpression@@"processed" + input @TO@ SimpleName@@MethodName:set:["processed" + input] @AT@ 8679 @LENGTH@ 19
---------------INS StringLiteral@@"processed" @TO@ InfixExpression@@"processed" + input @AT@ 8679 @LENGTH@ 11
---------------INS Operator@@+ @TO@ InfixExpression@@"processed" + input @AT@ 8690 @LENGTH@ 1
---------------INS SimpleName@@input @TO@ InfixExpression@@"processed" + input @AT@ 8693 @LENGTH@ 5
---INS ReturnStatement@@SimpleName:future @TO@ MethodDeclaration@@public, ListenableFuture<String>, MethodName:myPojoMessageMethod, String input,  @AT@ 8705 @LENGTH@ 14
------INS SimpleName@@future @TO@ ReturnStatement@@SimpleName:future @AT@ 8712 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:registerLazyIfNotAlreadyRegistered(() -> new RootBeanDefinition(JPA_METAMODEL_CACHE_CLEANUP_CLASSNAME),registry,JPA_METAMODEL_CACHE_CLEANUP_CLASSNAME,source) @TO@ MethodInvocation:registerIfNotAlreadyRegistered(() -> new RootBeanDefinition(JPA_METAMODEL_CACHE_CLEANUP_CLASSNAME),registry,JPA_METAMODEL_CACHE_CLEANUP_CLASSNAME,source) @AT@ 8668 @LENGTH@ 165
---UPD MethodInvocation@@registerLazyIfNotAlreadyRegistered(() -> new RootBeanDefinition(JPA_METAMODEL_CACHE_CLEANUP_CLASSNAME),registry,JPA_METAMODEL_CACHE_CLEANUP_CLASSNAME,source) @TO@ registerIfNotAlreadyRegistered(() -> new RootBeanDefinition(JPA_METAMODEL_CACHE_CLEANUP_CLASSNAME),registry,JPA_METAMODEL_CACHE_CLEANUP_CLASSNAME,source) @AT@ 8668 @LENGTH@ 164
------UPD SimpleName@@MethodName:registerLazyIfNotAlreadyRegistered:[() -> new RootBeanDefinition(JPA_METAMODEL_CACHE_CLEANUP_CLASSNAME), registry, JPA_METAMODEL_CACHE_CLEANUP_CLASSNAME, source] @TO@ MethodName:registerIfNotAlreadyRegistered:[() -> new RootBeanDefinition(JPA_METAMODEL_CACHE_CLEANUP_CLASSNAME), registry, JPA_METAMODEL_CACHE_CLEANUP_CLASSNAME, source] @AT@ 8668 @LENGTH@ 164


INS MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretNullThenDefaultToNone,  @TO@ TypeDeclaration@@[public]ClientRegistrationTests,  @AT@ 7754 @LENGTH@ 728
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretNullThenDefaultToNone,  @AT@ 7754 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretNullThenDefaultToNone,  @AT@ 7761 @LENGTH@ 4
---INS SimpleName@@MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretNullThenDefaultToNone @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretNullThenDefaultToNone,  @AT@ 7766 @LENGTH@ 104
---INS VariableDeclarationStatement@@ClientRegistration clientRegistration=ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build(); @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretNullThenDefaultToNone,  @AT@ 7877 @LENGTH@ 493
------INS SimpleType@@ClientRegistration @TO@ VariableDeclarationStatement@@ClientRegistration clientRegistration=ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build(); @AT@ 7877 @LENGTH@ 18
------INS VariableDeclarationFragment@@clientRegistration=ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @TO@ VariableDeclarationStatement@@ClientRegistration clientRegistration=ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build(); @AT@ 7896 @LENGTH@ 473
---------INS SimpleName@@clientRegistration @TO@ VariableDeclarationFragment@@clientRegistration=ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7896 @LENGTH@ 18
---------INS MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @TO@ VariableDeclarationFragment@@clientRegistration=ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 452
------------INS MethodInvocation@@MethodName:clientName:[CLIENT_NAME] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 439
---------------INS SimpleName@@CLIENT_NAME @TO@ MethodInvocation@@MethodName:clientName:[CLIENT_NAME] @AT@ 8344 @LENGTH@ 11
------------INS MethodInvocation@@MethodName:jwkSetUri:[JWK_SET_URI] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 410
---------------INS SimpleName@@JWK_SET_URI @TO@ MethodInvocation@@MethodName:jwkSetUri:[JWK_SET_URI] @AT@ 8315 @LENGTH@ 11
------------INS MethodInvocation@@MethodName:userInfoAuthenticationMethod:[AuthenticationMethod.FORM] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 382
---------------INS QualifiedName@@AuthenticationMethod.FORM @TO@ MethodInvocation@@MethodName:userInfoAuthenticationMethod:[AuthenticationMethod.FORM] @AT@ 8273 @LENGTH@ 25
------------------INS SimpleName@@AuthenticationMethod @TO@ QualifiedName@@AuthenticationMethod.FORM @AT@ 8273 @LENGTH@ 20
------------------INS SimpleName@@FORM @TO@ QualifiedName@@AuthenticationMethod.FORM @AT@ 8294 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:tokenUri:[TOKEN_URI] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 321
---------------INS SimpleName@@TOKEN_URI @TO@ MethodInvocation@@MethodName:tokenUri:[TOKEN_URI] @AT@ 8228 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:authorizationUri:[AUTHORIZATION_URI] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 296
---------------INS SimpleName@@AUTHORIZATION_URI @TO@ MethodInvocation@@MethodName:authorizationUri:[AUTHORIZATION_URI] @AT@ 8195 @LENGTH@ 17
------------INS MethodInvocation@@MethodName:scope:[SCOPES.toArray(new String[0])] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 255
---------------INS MethodInvocation@@SCOPES.toArray(new String[0]) @TO@ MethodInvocation@@MethodName:scope:[SCOPES.toArray(new String[0])] @AT@ 8142 @LENGTH@ 29
------------------INS SimpleName@@Name:SCOPES @TO@ MethodInvocation@@SCOPES.toArray(new String[0]) @AT@ 8142 @LENGTH@ 6
------------------INS SimpleName@@MethodName:toArray:[new String[0]] @TO@ MethodInvocation@@SCOPES.toArray(new String[0]) @AT@ 8149 @LENGTH@ 22
---------------------INS ArrayCreation@@new String[0] @TO@ SimpleName@@MethodName:toArray:[new String[0]] @AT@ 8157 @LENGTH@ 13
------------------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[0] @AT@ 8161 @LENGTH@ 9
---------------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 8161 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ ArrayCreation@@new String[0] @AT@ 8168 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:redirectUriTemplate:[REDIRECT_URI] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 213
---------------INS SimpleName@@REDIRECT_URI @TO@ MethodInvocation@@MethodName:redirectUriTemplate:[REDIRECT_URI] @AT@ 8117 @LENGTH@ 12
------------INS MethodInvocation@@MethodName:authorizationGrantType:[AuthorizationGrantType.AUTHORIZATION_CODE] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 174
---------------INS QualifiedName@@AuthorizationGrantType.AUTHORIZATION_CODE @TO@ MethodInvocation@@MethodName:authorizationGrantType:[AuthorizationGrantType.AUTHORIZATION_CODE] @AT@ 8049 @LENGTH@ 41
------------------INS SimpleName@@AuthorizationGrantType @TO@ QualifiedName@@AuthorizationGrantType.AUTHORIZATION_CODE @AT@ 8049 @LENGTH@ 22
------------------INS SimpleName@@AUTHORIZATION_CODE @TO@ QualifiedName@@AuthorizationGrantType.AUTHORIZATION_CODE @AT@ 8072 @LENGTH@ 18
------------INS MethodInvocation@@MethodName:clientSecret:[null] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 103
---------------INS NullLiteral@@null @TO@ MethodInvocation@@MethodName:clientSecret:[null] @AT@ 8015 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:clientId:[CLIENT_ID] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 79
---------------INS SimpleName@@CLIENT_ID @TO@ MethodInvocation@@MethodName:clientId:[CLIENT_ID] @AT@ 7986 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:withRegistrationId:[REGISTRATION_ID] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 54
---------------INS SimpleName@@REGISTRATION_ID @TO@ MethodInvocation@@MethodName:withRegistrationId:[REGISTRATION_ID] @AT@ 7955 @LENGTH@ 15
------------INS SimpleName@@Name:ClientRegistration @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 7917 @LENGTH@ 18
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId(REGISTRATION_ID).clientId(CLIENT_ID).clientSecret(null).authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).redirectUriTemplate(REDIRECT_URI).scope(SCOPES.toArray(new String[0])).authorizationUri(AUTHORIZATION_URI).tokenUri(TOKEN_URI).userInfoAuthenticationMethod(AuthenticationMethod.FORM).jwkSetUri(JWK_SET_URI).clientName(CLIENT_NAME).build() @AT@ 8362 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(clientRegistration.getClientAuthenticationMethod()).isEqualTo(ClientAuthenticationMethod.NONE) @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationCodeGrantClientAuthenticationMethodNotProvidedAndClientSecretNullThenDefaultToNone,  @AT@ 8373 @LENGTH@ 106
------INS MethodInvocation@@assertThat(clientRegistration.getClientAuthenticationMethod()).isEqualTo(ClientAuthenticationMethod.NONE) @TO@ ExpressionStatement@@MethodInvocation:assertThat(clientRegistration.getClientAuthenticationMethod()).isEqualTo(ClientAuthenticationMethod.NONE) @AT@ 8373 @LENGTH@ 105
---------INS MethodInvocation@@MethodName:assertThat:[clientRegistration.getClientAuthenticationMethod()] @TO@ MethodInvocation@@assertThat(clientRegistration.getClientAuthenticationMethod()).isEqualTo(ClientAuthenticationMethod.NONE) @AT@ 8373 @LENGTH@ 62
------------INS MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @TO@ MethodInvocation@@MethodName:assertThat:[clientRegistration.getClientAuthenticationMethod()] @AT@ 8384 @LENGTH@ 50
---------------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @AT@ 8384 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getClientAuthenticationMethod:[] @TO@ MethodInvocation@@clientRegistration.getClientAuthenticationMethod() @AT@ 8403 @LENGTH@ 31
---------INS SimpleName@@MethodName:isEqualTo:[ClientAuthenticationMethod.NONE] @TO@ MethodInvocation@@assertThat(clientRegistration.getClientAuthenticationMethod()).isEqualTo(ClientAuthenticationMethod.NONE) @AT@ 8436 @LENGTH@ 42
------------INS QualifiedName@@ClientAuthenticationMethod.NONE @TO@ SimpleName@@MethodName:isEqualTo:[ClientAuthenticationMethod.NONE] @AT@ 8446 @LENGTH@ 31
---------------INS SimpleName@@ClientAuthenticationMethod @TO@ QualifiedName@@ClientAuthenticationMethod.NONE @AT@ 8446 @LENGTH@ 26
---------------INS SimpleName@@NONE @TO@ QualifiedName@@ClientAuthenticationMethod.NONE @AT@ 8473 @LENGTH@ 4


UPD FieldDeclaration@@public, GenericContainer, [container=new GenericContainer("consul:1.0.7").withExposedPorts(8500).waitingFor(Wait.forLogMessageContaining("Synced node info",1)).withLogConsumer(new Slf4jLogConsumer(LOGGER).withPrefix("consul")).withCommand("agent","-dev","-server","-bootstrap","-client","0.0.0.0","-log-level","trace")] @TO@ public, GenericContainer, [container=new GenericContainer("consul:1.4.0").withExposedPorts(8500).waitingFor(Wait.forLogMessageContaining("Synced node info",1)).withLogConsumer(new Slf4jLogConsumer(LOGGER).withPrefix("consul")).withCommand("agent","-dev","-server","-bootstrap","-client","0.0.0.0","-log-level","trace")] @AT@ 2287 @LENGTH@ 469
---UPD VariableDeclarationFragment@@container=new GenericContainer("consul:1.0.7").withExposedPorts(8500).waitingFor(Wait.forLogMessageContaining("Synced node info",1)).withLogConsumer(new Slf4jLogConsumer(LOGGER).withPrefix("consul")).withCommand("agent","-dev","-server","-bootstrap","-client","0.0.0.0","-log-level","trace") @TO@ container=new GenericContainer("consul:1.4.0").withExposedPorts(8500).waitingFor(Wait.forLogMessageContaining("Synced node info",1)).withLogConsumer(new Slf4jLogConsumer(LOGGER).withPrefix("consul")).withCommand("agent","-dev","-server","-bootstrap","-client","0.0.0.0","-log-level","trace") @AT@ 2311 @LENGTH@ 444
------UPD MethodInvocation@@new GenericContainer("consul:1.0.7").withExposedPorts(8500).waitingFor(Wait.forLogMessageContaining("Synced node info",1)).withLogConsumer(new Slf4jLogConsumer(LOGGER).withPrefix("consul")).withCommand("agent","-dev","-server","-bootstrap","-client","0.0.0.0","-log-level","trace") @TO@ new GenericContainer("consul:1.4.0").withExposedPorts(8500).waitingFor(Wait.forLogMessageContaining("Synced node info",1)).withLogConsumer(new Slf4jLogConsumer(LOGGER).withPrefix("consul")).withCommand("agent","-dev","-server","-bootstrap","-client","0.0.0.0","-log-level","trace") @AT@ 2324 @LENGTH@ 431
---------UPD ClassInstanceCreation@@GenericContainer["consul:1.0.7"] @TO@ GenericContainer["consul:1.4.0"] @AT@ 2324 @LENGTH@ 36
------------UPD StringLiteral@@"consul:1.0.7" @TO@ "consul:1.4.0" @AT@ 2345 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:endpoint.setTaskExecutor(resolveExecutor(rabbitListener,target,beanName)) @TO@ MethodInvocation:resolveExecutor(endpoint,rabbitListener,target,beanName) @AT@ 18858 @LENGTH@ 76
---DEL MethodInvocation@@endpoint.setTaskExecutor(resolveExecutor(rabbitListener,target,beanName)) @AT@ 18858 @LENGTH@ 75
------DEL SimpleName@@Name:endpoint @AT@ 18858 @LENGTH@ 8
------DEL SimpleName@@MethodName:setTaskExecutor:[resolveExecutor(rabbitListener,target,beanName)] @AT@ 18867 @LENGTH@ 66
---------DEL MethodInvocation@@resolveExecutor(rabbitListener,target,beanName) @AT@ 18883 @LENGTH@ 49
---INS MethodInvocation@@resolveExecutor(endpoint,rabbitListener,target,beanName) @TO@ ExpressionStatement@@MethodInvocation:endpoint.setTaskExecutor(resolveExecutor(rabbitListener,target,beanName)) @AT@ 18858 @LENGTH@ 59
------MOV SimpleName@@MethodName:resolveExecutor:[rabbitListener, target, beanName] @TO@ MethodInvocation@@resolveExecutor(endpoint,rabbitListener,target,beanName) @AT@ 18883 @LENGTH@ 49
---------INS SimpleName@@endpoint @TO@ SimpleName@@MethodName:resolveExecutor:[rabbitListener, target, beanName] @AT@ 18874 @LENGTH@ 8


UPD TypeDeclaration@@[public, final]ExpressionBuilder,  @TO@ [public]ExpressionBuilder,  @AT@ 2215 @LENGTH@ 54000
---DEL Modifier@@final @AT@ 2222 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:Assert.assertTrue("Expecting a rollback happened as default timeout was hit",checker.getRolledback() > 0) @AT@ 4079 @LENGTH@ 107
---DEL MethodInvocation@@Assert.assertTrue("Expecting a rollback happened as default timeout was hit",checker.getRolledback() > 0) @AT@ 4079 @LENGTH@ 106
------DEL SimpleName@@Name:Assert @AT@ 4079 @LENGTH@ 6
------DEL SimpleName@@MethodName:assertTrue:["Expecting a rollback happened as default timeout was hit", checker.getRolledback() > 0] @AT@ 4086 @LENGTH@ 99
---------DEL StringLiteral@@"Expecting a rollback happened as default timeout was hit" @AT@ 4097 @LENGTH@ 58
---------DEL InfixExpression@@checker.getRolledback() > 0 @AT@ 4157 @LENGTH@ 27
------------DEL MethodInvocation@@checker.getRolledback() @AT@ 4157 @LENGTH@ 23
---------------DEL SimpleName@@Name:checker @AT@ 4157 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getRolledback:[] @AT@ 4165 @LENGTH@ 15
------------DEL Operator@@> @AT@ 4180 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 4183 @LENGTH@ 1


DEL FieldDeclaration@@protected, static, final, boolean, [IBMJDK16] @AT@ 4787 @LENGTH@ 40
---DEL Modifier@@protected @AT@ 4787 @LENGTH@ 9
---DEL Modifier@@static @AT@ 4797 @LENGTH@ 6
---DEL Modifier@@final @AT@ 4804 @LENGTH@ 5
---DEL PrimitiveType@@boolean @AT@ 4810 @LENGTH@ 7
---DEL VariableDeclarationFragment@@IBMJDK16 @AT@ 4818 @LENGTH@ 8
------DEL SimpleName@@IBMJDK16 @AT@ 4818 @LENGTH@ 8


INS IfStatement@@if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {  return new JaxWsClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} else {  return new ClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} @TO@ MethodDeclaration@@protected, ClientFactoryBean, MethodName:createClientFactoryBean, Class<?> cls, CamelException,  @AT@ 14807 @LENGTH@ 544
---INS MethodInvocation@@CxfEndpointUtils.hasWebServiceAnnotation(cls) @TO@ IfStatement@@if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {  return new JaxWsClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} else {  return new ClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} @AT@ 14811 @LENGTH@ 45
------INS SimpleName@@Name:CxfEndpointUtils @TO@ MethodInvocation@@CxfEndpointUtils.hasWebServiceAnnotation(cls) @AT@ 14811 @LENGTH@ 16
------INS SimpleName@@MethodName:hasWebServiceAnnotation:[cls] @TO@ MethodInvocation@@CxfEndpointUtils.hasWebServiceAnnotation(cls) @AT@ 14828 @LENGTH@ 28
---------INS SimpleName@@cls @TO@ SimpleName@@MethodName:hasWebServiceAnnotation:[cls] @AT@ 14852 @LENGTH@ 3
---INS Block@@ThenBody:{  return new JaxWsClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} @TO@ IfStatement@@if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {  return new JaxWsClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} else {  return new ClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} @AT@ 14858 @LENGTH@ 246
------INS ReturnStatement@@ClassInstanceCreation:new JaxWsClientFactoryBean(){
  @Override protected Client createClient(  Endpoint ep){
    return new CamelCxfClientImpl(getBus(),ep);
  }
}
 @TO@ Block@@ThenBody:{  return new JaxWsClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} @AT@ 14872 @LENGTH@ 222
---------INS ClassInstanceCreation@@JaxWsClientFactoryBean[] @TO@ ReturnStatement@@ClassInstanceCreation:new JaxWsClientFactoryBean(){
  @Override protected Client createClient(  Endpoint ep){
    return new CamelCxfClientImpl(getBus(),ep);
  }
}
 @AT@ 14879 @LENGTH@ 214
------------INS New@@new @TO@ ClassInstanceCreation@@JaxWsClientFactoryBean[] @AT@ 14879 @LENGTH@ 3
------------INS SimpleType@@JaxWsClientFactoryBean @TO@ ClassInstanceCreation@@JaxWsClientFactoryBean[] @AT@ 14883 @LENGTH@ 22
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@JaxWsClientFactoryBean[] @AT@ 14908 @LENGTH@ 185
---------------MOV MethodDeclaration@@protected, Client, MethodName:createClient, Endpoint ep,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 15201 @LENGTH@ 127
---INS Block@@ElseBody:{  return new ClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} @TO@ IfStatement@@if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {  return new JaxWsClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} else {  return new ClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} @AT@ 15110 @LENGTH@ 241
------INS ReturnStatement@@ClassInstanceCreation:new ClientFactoryBean(){
  @Override protected Client createClient(  Endpoint ep){
    return new CamelCxfClientImpl(getBus(),ep);
  }
}
 @TO@ Block@@ElseBody:{  return new ClientFactoryBean(){    @Override protected Client createClient(    Endpoint ep){      return new CamelCxfClientImpl(getBus(),ep);    }  };} @AT@ 15124 @LENGTH@ 217
---------INS ClassInstanceCreation@@ClientFactoryBean[] @TO@ ReturnStatement@@ClassInstanceCreation:new ClientFactoryBean(){
  @Override protected Client createClient(  Endpoint ep){
    return new CamelCxfClientImpl(getBus(),ep);
  }
}
 @AT@ 15131 @LENGTH@ 209
------------INS New@@new @TO@ ClassInstanceCreation@@ClientFactoryBean[] @AT@ 15131 @LENGTH@ 3
------------INS SimpleType@@ClientFactoryBean @TO@ ClassInstanceCreation@@ClientFactoryBean[] @AT@ 15135 @LENGTH@ 17
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ClientFactoryBean[] @AT@ 15155 @LENGTH@ 185
---------------INS MethodDeclaration@@protected, Client, MethodName:createClient, Endpoint ep,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 15199 @LENGTH@ 127
------------------INS Modifier@@protected @TO@ MethodDeclaration@@protected, Client, MethodName:createClient, Endpoint ep,  @AT@ 15199 @LENGTH@ 9
------------------INS SimpleType@@Client @TO@ MethodDeclaration@@protected, Client, MethodName:createClient, Endpoint ep,  @AT@ 15209 @LENGTH@ 6
------------------INS SimpleName@@MethodName:createClient @TO@ MethodDeclaration@@protected, Client, MethodName:createClient, Endpoint ep,  @AT@ 15216 @LENGTH@ 12
------------------INS SingleVariableDeclaration@@Endpoint ep @TO@ MethodDeclaration@@protected, Client, MethodName:createClient, Endpoint ep,  @AT@ 15229 @LENGTH@ 11
---------------------INS SimpleType@@Endpoint @TO@ SingleVariableDeclaration@@Endpoint ep @AT@ 15229 @LENGTH@ 8
---------------------INS SimpleName@@ep @TO@ SingleVariableDeclaration@@Endpoint ep @AT@ 15238 @LENGTH@ 2
------------------INS ReturnStatement@@ClassInstanceCreation:new CamelCxfClientImpl(getBus(),ep) @TO@ MethodDeclaration@@protected, Client, MethodName:createClient, Endpoint ep,  @AT@ 15264 @LENGTH@ 44
---------------------INS ClassInstanceCreation@@CamelCxfClientImpl[getBus(), ep] @TO@ ReturnStatement@@ClassInstanceCreation:new CamelCxfClientImpl(getBus(),ep) @AT@ 15271 @LENGTH@ 36
------------------------INS New@@new @TO@ ClassInstanceCreation@@CamelCxfClientImpl[getBus(), ep] @AT@ 15271 @LENGTH@ 3
------------------------INS SimpleType@@CamelCxfClientImpl @TO@ ClassInstanceCreation@@CamelCxfClientImpl[getBus(), ep] @AT@ 15275 @LENGTH@ 18
------------------------INS MethodInvocation@@MethodName:getBus:[] @TO@ ClassInstanceCreation@@CamelCxfClientImpl[getBus(), ep] @AT@ 15294 @LENGTH@ 8
------------------------INS SimpleName@@ep @TO@ ClassInstanceCreation@@CamelCxfClientImpl[getBus(), ep] @AT@ 15304 @LENGTH@ 2


UPD IfStatement@@if (table != null) {  List<String> colNames=MetaStoreUtils.getColumnNamesForTable(table);  List<String> partNames=rawStore.listPartitionNames(catName,dbName,tblName,(short)-1);  Deadline.startTimer("getPartitionColumnStatistics");  List<ColumnStatistics> partitionColStats=rawStore.getPartitionColumnStatistics(catName,dbName,tblName,partNames,colNames);  Deadline.stopTimer();  sharedCache.refreshPartitionColStatsInCache(catName,dbName,tblName,partitionColStats);  List<Partition> parts=rawStore.getPartitionsByNames(catName,dbName,tblName,partNames);  for (  Partition part : parts) {    sharedCache.alterPartitionInCache(catName,dbName,tblName,part.getValues(),part);  }} @TO@ if (table != null) {  List<String> colNames=MetaStoreUtils.getColumnNamesForTable(table);  List<String> partNames=rawStore.listPartitionNames(catName,dbName,tblName,(short)-1);  Deadline.startTimer("getPartitionColumnStatistics");  List<ColumnStatistics> partitionColStats=rawStore.getPartitionColumnStatistics(catName,dbName,tblName,partNames,colNames);  Deadline.stopTimer();  sharedCache.refreshPartitionColStatsInCache(catName,dbName,tblName,partitionColStats);  Deadline.startTimer("getPartitionsByNames");  List<Partition> parts=rawStore.getPartitionsByNames(catName,dbName,tblName,partNames);  Deadline.stopTimer();  for (  Partition part : parts) {    sharedCache.alterPartitionInCache(catName,dbName,tblName,part.getValues(),part);  }} @AT@ 39463 @LENGTH@ 951
---UPD Block@@ThenBody:{  List<String> colNames=MetaStoreUtils.getColumnNamesForTable(table);  List<String> partNames=rawStore.listPartitionNames(catName,dbName,tblName,(short)-1);  Deadline.startTimer("getPartitionColumnStatistics");  List<ColumnStatistics> partitionColStats=rawStore.getPartitionColumnStatistics(catName,dbName,tblName,partNames,colNames);  Deadline.stopTimer();  sharedCache.refreshPartitionColStatsInCache(catName,dbName,tblName,partitionColStats);  List<Partition> parts=rawStore.getPartitionsByNames(catName,dbName,tblName,partNames);  for (  Partition part : parts) {    sharedCache.alterPartitionInCache(catName,dbName,tblName,part.getValues(),part);  }} @TO@ ThenBody:{  List<String> colNames=MetaStoreUtils.getColumnNamesForTable(table);  List<String> partNames=rawStore.listPartitionNames(catName,dbName,tblName,(short)-1);  Deadline.startTimer("getPartitionColumnStatistics");  List<ColumnStatistics> partitionColStats=rawStore.getPartitionColumnStatistics(catName,dbName,tblName,partNames,colNames);  Deadline.stopTimer();  sharedCache.refreshPartitionColStatsInCache(catName,dbName,tblName,partitionColStats);  Deadline.startTimer("getPartitionsByNames");  List<Partition> parts=rawStore.getPartitionsByNames(catName,dbName,tblName,partNames);  Deadline.stopTimer();  for (  Partition part : parts) {    sharedCache.alterPartitionInCache(catName,dbName,tblName,part.getValues(),part);  }} @AT@ 39482 @LENGTH@ 932
------INS ExpressionStatement@@MethodInvocation:Deadline.startTimer("getPartitionsByNames") @TO@ Block@@ThenBody:{  List<String> colNames=MetaStoreUtils.getColumnNamesForTable(table);  List<String> partNames=rawStore.listPartitionNames(catName,dbName,tblName,(short)-1);  Deadline.startTimer("getPartitionColumnStatistics");  List<ColumnStatistics> partitionColStats=rawStore.getPartitionColumnStatistics(catName,dbName,tblName,partNames,colNames);  Deadline.stopTimer();  sharedCache.refreshPartitionColStatsInCache(catName,dbName,tblName,partitionColStats);  List<Partition> parts=rawStore.getPartitionsByNames(catName,dbName,tblName,partNames);  for (  Partition part : parts) {    sharedCache.alterPartitionInCache(catName,dbName,tblName,part.getValues(),part);  }} @AT@ 40118 @LENGTH@ 44
---------INS MethodInvocation@@Deadline.startTimer("getPartitionsByNames") @TO@ ExpressionStatement@@MethodInvocation:Deadline.startTimer("getPartitionsByNames") @AT@ 40118 @LENGTH@ 43
------------INS SimpleName@@Name:Deadline @TO@ MethodInvocation@@Deadline.startTimer("getPartitionsByNames") @AT@ 40118 @LENGTH@ 8
------------INS SimpleName@@MethodName:startTimer:["getPartitionsByNames"] @TO@ MethodInvocation@@Deadline.startTimer("getPartitionsByNames") @AT@ 40127 @LENGTH@ 34
---------------INS StringLiteral@@"getPartitionsByNames" @TO@ SimpleName@@MethodName:startTimer:["getPartitionsByNames"] @AT@ 40138 @LENGTH@ 22
------INS ExpressionStatement@@MethodInvocation:Deadline.stopTimer() @TO@ Block@@ThenBody:{  List<String> colNames=MetaStoreUtils.getColumnNamesForTable(table);  List<String> partNames=rawStore.listPartitionNames(catName,dbName,tblName,(short)-1);  Deadline.startTimer("getPartitionColumnStatistics");  List<ColumnStatistics> partitionColStats=rawStore.getPartitionColumnStatistics(catName,dbName,tblName,partNames,colNames);  Deadline.stopTimer();  sharedCache.refreshPartitionColStatsInCache(catName,dbName,tblName,partitionColStats);  List<Partition> parts=rawStore.getPartitionsByNames(catName,dbName,tblName,partNames);  for (  Partition part : parts) {    sharedCache.alterPartitionInCache(catName,dbName,tblName,part.getValues(),part);  }} @AT@ 40275 @LENGTH@ 21
---------INS MethodInvocation@@Deadline.stopTimer() @TO@ ExpressionStatement@@MethodInvocation:Deadline.stopTimer() @AT@ 40275 @LENGTH@ 20
------------INS SimpleName@@Name:Deadline @TO@ MethodInvocation@@Deadline.stopTimer() @AT@ 40275 @LENGTH@ 8
------------INS SimpleName@@MethodName:stopTimer:[] @TO@ MethodInvocation@@Deadline.stopTimer() @AT@ 40284 @LENGTH@ 11


UPD VariableDeclarationStatement@@final Map<String,Object> apiProperties=configuration.getApiProperties(); @TO@ final Map<String,Object> apiProperties=configuration.getApiProperties() != null ? configuration.getApiProperties() : new HashMap<>(); @AT@ 8548 @LENGTH@ 75
---UPD VariableDeclarationFragment@@apiProperties=configuration.getApiProperties() @TO@ apiProperties=configuration.getApiProperties() != null ? configuration.getApiProperties() : new HashMap<>() @AT@ 8574 @LENGTH@ 48
------DEL MethodInvocation@@configuration.getApiProperties() @AT@ 8590 @LENGTH@ 32
------INS ConditionalExpression@@configuration.getApiProperties() != null ? configuration.getApiProperties() : new HashMap<>() @TO@ VariableDeclarationFragment@@apiProperties=configuration.getApiProperties() @AT@ 8616 @LENGTH@ 93
---------INS InfixExpression@@configuration.getApiProperties() != null @TO@ ConditionalExpression@@configuration.getApiProperties() != null ? configuration.getApiProperties() : new HashMap<>() @AT@ 8616 @LENGTH@ 40
------------INS MethodInvocation@@configuration.getApiProperties() @TO@ InfixExpression@@configuration.getApiProperties() != null @AT@ 8616 @LENGTH@ 32
---------------MOV SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getApiProperties() @AT@ 8590 @LENGTH@ 13
---------------MOV SimpleName@@MethodName:getApiProperties:[] @TO@ MethodInvocation@@configuration.getApiProperties() @AT@ 8604 @LENGTH@ 18
------------INS Operator@@!= @TO@ InfixExpression@@configuration.getApiProperties() != null @AT@ 8648 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@configuration.getApiProperties() != null @AT@ 8652 @LENGTH@ 4
---------INS MethodInvocation@@configuration.getApiProperties() @TO@ ConditionalExpression@@configuration.getApiProperties() != null ? configuration.getApiProperties() : new HashMap<>() @AT@ 8659 @LENGTH@ 32
------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getApiProperties() @AT@ 8659 @LENGTH@ 13
------------INS SimpleName@@MethodName:getApiProperties:[] @TO@ MethodInvocation@@configuration.getApiProperties() @AT@ 8673 @LENGTH@ 18
---------INS ClassInstanceCreation@@HashMap<>[] @TO@ ConditionalExpression@@configuration.getApiProperties() != null ? configuration.getApiProperties() : new HashMap<>() @AT@ 8694 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 8694 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 8698 @LENGTH@ 9
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 8698 @LENGTH@ 7


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1676 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1676 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1683 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1691 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1721 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1728 @LENGTH@ 5


UPD TypeDeclaration@@[public]IntrospectionSupport,  @TO@ [public, final]IntrospectionSupport,  @AT@ 906 @LENGTH@ 261
---INS Modifier@@final @TO@ TypeDeclaration@@[public]IntrospectionSupport,  @AT@ 913 @LENGTH@ 5


UPD VariableDeclarationStatement@@FailedToStartRouteException e=new FailedToStartRouteException(new IllegalArgumentException("Forced")); @TO@ FailedToStartRouteException e=new FailedToStartRouteException("myRoute","Forced error",new IllegalArgumentException("Forced")); @AT@ 12172 @LENGTH@ 104
---UPD VariableDeclarationFragment@@e=new FailedToStartRouteException(new IllegalArgumentException("Forced")) @TO@ e=new FailedToStartRouteException("myRoute","Forced error",new IllegalArgumentException("Forced")) @AT@ 12200 @LENGTH@ 75
------UPD ClassInstanceCreation@@FailedToStartRouteException[new IllegalArgumentException("Forced")] @TO@ FailedToStartRouteException["myRoute", "Forced error", new IllegalArgumentException("Forced")] @AT@ 12204 @LENGTH@ 71
---------INS StringLiteral@@"myRoute" @TO@ ClassInstanceCreation@@FailedToStartRouteException[new IllegalArgumentException("Forced")] @AT@ 12236 @LENGTH@ 9
---------INS StringLiteral@@"Forced error" @TO@ ClassInstanceCreation@@FailedToStartRouteException[new IllegalArgumentException("Forced")] @AT@ 12247 @LENGTH@ 14


UPD MethodDeclaration@@protected, org.springframework.amqp.core.Message, MethodName:buildMessage, Channel channel, Object result, Type genericType, Exception,  @TO@ protected, org.springframework.amqp.core.Message, MethodName:buildMessage, Channel channel, Object result, Type genericType,  @AT@ 8125 @LENGTH@ 799
---DEL SimpleType@@Exception @AT@ 8246 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:StepVerifier.create(template.save("Foobar!","collection")).expectError(MappingException.class).verify() @TO@ MethodInvocation:template.save("Foobar!","collection") @AT@ 30184 @LENGTH@ 121
---DEL MethodInvocation@@StepVerifier.create(template.save("Foobar!","collection")).expectError(MappingException.class).verify() @AT@ 30184 @LENGTH@ 120
------DEL MethodInvocation@@MethodName:expectError:[MappingException.class] @AT@ 30184 @LENGTH@ 103
---------DEL TypeLiteral@@MappingException.class @AT@ 30264 @LENGTH@ 22
------DEL MethodInvocation@@MethodName:create:[template.save("Foobar!","collection")] @AT@ 30184 @LENGTH@ 59
------DEL SimpleName@@Name:StepVerifier @AT@ 30184 @LENGTH@ 12
------DEL SimpleName@@MethodName:verify:[] @AT@ 30296 @LENGTH@ 8
---MOV MethodInvocation@@template.save("Foobar!","collection") @TO@ ExpressionStatement@@MethodInvocation:StepVerifier.create(template.save("Foobar!","collection")).expectError(MappingException.class).verify() @AT@ 30204 @LENGTH@ 38


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1023 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1023 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1030 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1038 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1068 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1075 @LENGTH@ 5


UPD VariableDeclarationStatement@@Class<?> userType=ClassUtils.getUserClass(type); @TO@ Class<?> userType=ProxyUtils.getUserClass(type); @AT@ 2986 @LENGTH@ 50
---UPD VariableDeclarationFragment@@userType=ClassUtils.getUserClass(type) @TO@ userType=ProxyUtils.getUserClass(type) @AT@ 2995 @LENGTH@ 40
------UPD MethodInvocation@@ClassUtils.getUserClass(type) @TO@ ProxyUtils.getUserClass(type) @AT@ 3006 @LENGTH@ 29
---------UPD SimpleName@@Name:ClassUtils @TO@ Name:ProxyUtils @AT@ 3006 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(config,componentProperties) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(getCamelContext(),config,componentProperties) @AT@ 3363 @LENGTH@ 64
---UPD MethodInvocation@@IntrospectionSupport.setProperties(config,componentProperties) @TO@ PropertyBindingSupport.bindProperties(getCamelContext(),config,componentProperties) @AT@ 3363 @LENGTH@ 63
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 3363 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[config, componentProperties] @TO@ MethodName:bindProperties:[getCamelContext(), config, componentProperties] @AT@ 3384 @LENGTH@ 42
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:setProperties:[config, componentProperties] @AT@ 3457 @LENGTH@ 17


MOV FieldDeclaration@@AmazonS3ClientMock, [clientMock=new AmazonS3ClientMock()] @TO@ TypeDeclaration@@[public]S3ComponentListObjectTest, CamelTestSupport @AT@ 1599 @LENGTH@ 57


INS IfStatement@@if (source instanceof Map) {  LinkedHashMap<String,Object> map=new LinkedHashMap<>();  ((Map<String,Object>)source).entrySet().forEach(it -> {    String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));    if (it.getValue() instanceof Document) {      map.put(key,getMappedObject((Document)it.getValue(),entity));    } else {      map.put(key,delegateConvertToMongoType(it.getValue(),entity));    }  });  return map;} @TO@ MethodDeclaration@@protected, Object, MethodName:convertSimpleOrDocument, Object source, @Nullable MongoPersistentEntity<?> entity,  @AT@ 15269 @LENGTH@ 475
---INS InstanceofExpression@@source instanceof Map @TO@ IfStatement@@if (source instanceof Map) {  LinkedHashMap<String,Object> map=new LinkedHashMap<>();  ((Map<String,Object>)source).entrySet().forEach(it -> {    String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));    if (it.getValue() instanceof Document) {      map.put(key,getMappedObject((Document)it.getValue(),entity));    } else {      map.put(key,delegateConvertToMongoType(it.getValue(),entity));    }  });  return map;} @AT@ 15273 @LENGTH@ 21
------INS SimpleName@@source @TO@ InstanceofExpression@@source instanceof Map @AT@ 15273 @LENGTH@ 6
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@source instanceof Map @AT@ 15280 @LENGTH@ 10
------INS SimpleType@@Map @TO@ InstanceofExpression@@source instanceof Map @AT@ 15291 @LENGTH@ 3
---INS Block@@ThenBody:{  LinkedHashMap<String,Object> map=new LinkedHashMap<>();  ((Map<String,Object>)source).entrySet().forEach(it -> {    String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));    if (it.getValue() instanceof Document) {      map.put(key,getMappedObject((Document)it.getValue(),entity));    } else {      map.put(key,delegateConvertToMongoType(it.getValue(),entity));    }  });  return map;} @TO@ IfStatement@@if (source instanceof Map) {  LinkedHashMap<String,Object> map=new LinkedHashMap<>();  ((Map<String,Object>)source).entrySet().forEach(it -> {    String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));    if (it.getValue() instanceof Document) {      map.put(key,getMappedObject((Document)it.getValue(),entity));    } else {      map.put(key,delegateConvertToMongoType(it.getValue(),entity));    }  });  return map;} @AT@ 15296 @LENGTH@ 448
------INS VariableDeclarationStatement@@LinkedHashMap<String,Object> map=new LinkedHashMap<>(); @TO@ Block@@ThenBody:{  LinkedHashMap<String,Object> map=new LinkedHashMap<>();  ((Map<String,Object>)source).entrySet().forEach(it -> {    String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));    if (it.getValue() instanceof Document) {      map.put(key,getMappedObject((Document)it.getValue(),entity));    } else {      map.put(key,delegateConvertToMongoType(it.getValue(),entity));    }  });  return map;} @AT@ 15302 @LENGTH@ 58
---------INS ParameterizedType@@LinkedHashMap<String,Object> @TO@ VariableDeclarationStatement@@LinkedHashMap<String,Object> map=new LinkedHashMap<>(); @AT@ 15302 @LENGTH@ 29
------------INS SimpleType@@LinkedHashMap @TO@ ParameterizedType@@LinkedHashMap<String,Object> @AT@ 15302 @LENGTH@ 13
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<String,Object> @AT@ 15316 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@LinkedHashMap<String,Object> @AT@ 15324 @LENGTH@ 6
---------INS VariableDeclarationFragment@@map=new LinkedHashMap<>() @TO@ VariableDeclarationStatement@@LinkedHashMap<String,Object> map=new LinkedHashMap<>(); @AT@ 15332 @LENGTH@ 27
------------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=new LinkedHashMap<>() @AT@ 15332 @LENGTH@ 3
------------INS ClassInstanceCreation@@LinkedHashMap<>[] @TO@ VariableDeclarationFragment@@map=new LinkedHashMap<>() @AT@ 15338 @LENGTH@ 21
---------------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashMap<>[] @AT@ 15338 @LENGTH@ 3
---------------INS ParameterizedType@@LinkedHashMap<> @TO@ ClassInstanceCreation@@LinkedHashMap<>[] @AT@ 15342 @LENGTH@ 15
------------------INS SimpleType@@LinkedHashMap @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 15342 @LENGTH@ 13
------INS ExpressionStatement@@MethodInvocation:((Map<String,Object>)source).entrySet().forEach(it -> {
  String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));
  if (it.getValue() instanceof Document) {
    map.put(key,getMappedObject((Document)it.getValue(),entity));
  }
 else {
    map.put(key,delegateConvertToMongoType(it.getValue(),entity));
  }
}
) @TO@ Block@@ThenBody:{  LinkedHashMap<String,Object> map=new LinkedHashMap<>();  ((Map<String,Object>)source).entrySet().forEach(it -> {    String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));    if (it.getValue() instanceof Document) {      map.put(key,getMappedObject((Document)it.getValue(),entity));    } else {      map.put(key,delegateConvertToMongoType(it.getValue(),entity));    }  });  return map;} @AT@ 15365 @LENGTH@ 360
---------INS MethodInvocation@@((Map<String,Object>)source).entrySet().forEach(it -> {
  String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));
  if (it.getValue() instanceof Document) {
    map.put(key,getMappedObject((Document)it.getValue(),entity));
  }
 else {
    map.put(key,delegateConvertToMongoType(it.getValue(),entity));
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:((Map<String,Object>)source).entrySet().forEach(it -> {
  String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));
  if (it.getValue() instanceof Document) {
    map.put(key,getMappedObject((Document)it.getValue(),entity));
  }
 else {
    map.put(key,delegateConvertToMongoType(it.getValue(),entity));
  }
}
) @AT@ 15365 @LENGTH@ 359
------------INS MethodInvocation@@MethodName:entrySet:[] @TO@ MethodInvocation@@((Map<String,Object>)source).entrySet().forEach(it -> {
  String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));
  if (it.getValue() instanceof Document) {
    map.put(key,getMappedObject((Document)it.getValue(),entity));
  }
 else {
    map.put(key,delegateConvertToMongoType(it.getValue(),entity));
  }
}
) @AT@ 15365 @LENGTH@ 41
------------INS ParenthesizedExpression@@((Map<String,Object>)source) @TO@ MethodInvocation@@((Map<String,Object>)source).entrySet().forEach(it -> {
  String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));
  if (it.getValue() instanceof Document) {
    map.put(key,getMappedObject((Document)it.getValue(),entity));
  }
 else {
    map.put(key,delegateConvertToMongoType(it.getValue(),entity));
  }
}
) @AT@ 15365 @LENGTH@ 30
---------------INS CastExpression@@(Map<String,Object>)source @TO@ ParenthesizedExpression@@((Map<String,Object>)source) @AT@ 15366 @LENGTH@ 28
------------------INS ParameterizedType@@Map<String,Object> @TO@ CastExpression@@(Map<String,Object>)source @AT@ 15367 @LENGTH@ 19
---------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 15367 @LENGTH@ 3
---------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 15371 @LENGTH@ 6
---------------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 15379 @LENGTH@ 6
------------------INS SimpleName@@source @TO@ CastExpression@@(Map<String,Object>)source @AT@ 15388 @LENGTH@ 6
------------INS SimpleName@@MethodName:forEach:[it -> {
  String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));
  if (it.getValue() instanceof Document) {
    map.put(key,getMappedObject((Document)it.getValue(),entity));
  }
 else {
    map.put(key,delegateConvertToMongoType(it.getValue(),entity));
  }
}
] @TO@ MethodInvocation@@((Map<String,Object>)source).entrySet().forEach(it -> {
  String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));
  if (it.getValue() instanceof Document) {
    map.put(key,getMappedObject((Document)it.getValue(),entity));
  }
 else {
    map.put(key,delegateConvertToMongoType(it.getValue(),entity));
  }
}
) @AT@ 15407 @LENGTH@ 317
---------------INS LambdaExpression@@it -> {
  String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));
  if (it.getValue() instanceof Document) {
    map.put(key,getMappedObject((Document)it.getValue(),entity));
  }
 else {
    map.put(key,delegateConvertToMongoType(it.getValue(),entity));
  }
}
 @TO@ SimpleName@@MethodName:forEach:[it -> {
  String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));
  if (it.getValue() instanceof Document) {
    map.put(key,getMappedObject((Document)it.getValue(),entity));
  }
 else {
    map.put(key,delegateConvertToMongoType(it.getValue(),entity));
  }
}
] @AT@ 15415 @LENGTH@ 308
------------------INS VariableDeclarationFragment@@it @TO@ LambdaExpression@@it -> {
  String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));
  if (it.getValue() instanceof Document) {
    map.put(key,getMappedObject((Document)it.getValue(),entity));
  }
 else {
    map.put(key,delegateConvertToMongoType(it.getValue(),entity));
  }
}
 @AT@ 15415 @LENGTH@ 2
---------------------INS SimpleName@@it @TO@ VariableDeclarationFragment@@it @AT@ 15415 @LENGTH@ 2
------------------INS VariableDeclarationStatement@@String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey())); @TO@ LambdaExpression@@it -> {
  String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));
  if (it.getValue() instanceof Document) {
    map.put(key,getMappedObject((Document)it.getValue(),entity));
  }
 else {
    map.put(key,delegateConvertToMongoType(it.getValue(),entity));
  }
}
 @AT@ 15428 @LENGTH@ 85
---------------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey())); @AT@ 15428 @LENGTH@ 6
---------------------INS VariableDeclarationFragment@@key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey())) @TO@ VariableDeclarationStatement@@String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey())); @AT@ 15435 @LENGTH@ 77
------------------------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey())) @AT@ 15435 @LENGTH@ 3
------------------------INS MethodInvocation@@ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey())) @TO@ VariableDeclarationFragment@@key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey())) @AT@ 15441 @LENGTH@ 71
---------------------------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey())) @AT@ 15441 @LENGTH@ 11
---------------------------INS SimpleName@@MethodName:nullSafeToString:[converter.convertToMongoType(it.getKey())] @TO@ MethodInvocation@@ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey())) @AT@ 15453 @LENGTH@ 59
------------------------------INS MethodInvocation@@converter.convertToMongoType(it.getKey()) @TO@ SimpleName@@MethodName:nullSafeToString:[converter.convertToMongoType(it.getKey())] @AT@ 15470 @LENGTH@ 41
---------------------------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.convertToMongoType(it.getKey()) @AT@ 15470 @LENGTH@ 9
---------------------------------INS SimpleName@@MethodName:convertToMongoType:[it.getKey()] @TO@ MethodInvocation@@converter.convertToMongoType(it.getKey()) @AT@ 15480 @LENGTH@ 31
------------------------------------INS MethodInvocation@@it.getKey() @TO@ SimpleName@@MethodName:convertToMongoType:[it.getKey()] @AT@ 15499 @LENGTH@ 11
---------------------------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.getKey() @AT@ 15499 @LENGTH@ 2
---------------------------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@it.getKey() @AT@ 15502 @LENGTH@ 8
------------------INS IfStatement@@if (it.getValue() instanceof Document) {  map.put(key,getMappedObject((Document)it.getValue(),entity));} else {  map.put(key,delegateConvertToMongoType(it.getValue(),entity));} @TO@ LambdaExpression@@it -> {
  String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));
  if (it.getValue() instanceof Document) {
    map.put(key,getMappedObject((Document)it.getValue(),entity));
  }
 else {
    map.put(key,delegateConvertToMongoType(it.getValue(),entity));
  }
}
 @AT@ 15519 @LENGTH@ 199
---------------------INS InstanceofExpression@@it.getValue() instanceof Document @TO@ IfStatement@@if (it.getValue() instanceof Document) {  map.put(key,getMappedObject((Document)it.getValue(),entity));} else {  map.put(key,delegateConvertToMongoType(it.getValue(),entity));} @AT@ 15523 @LENGTH@ 33
------------------------INS MethodInvocation@@it.getValue() @TO@ InstanceofExpression@@it.getValue() instanceof Document @AT@ 15523 @LENGTH@ 13
---------------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.getValue() @AT@ 15523 @LENGTH@ 2
---------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@it.getValue() @AT@ 15526 @LENGTH@ 10
------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@it.getValue() instanceof Document @AT@ 15537 @LENGTH@ 10
------------------------INS SimpleType@@Document @TO@ InstanceofExpression@@it.getValue() instanceof Document @AT@ 15548 @LENGTH@ 8
---------------------INS Block@@ThenBody:{  map.put(key,getMappedObject((Document)it.getValue(),entity));} @TO@ IfStatement@@if (it.getValue() instanceof Document) {  map.put(key,getMappedObject((Document)it.getValue(),entity));} else {  map.put(key,delegateConvertToMongoType(it.getValue(),entity));} @AT@ 15558 @LENGTH@ 77
------------------------INS ExpressionStatement@@MethodInvocation:map.put(key,getMappedObject((Document)it.getValue(),entity)) @TO@ Block@@ThenBody:{  map.put(key,getMappedObject((Document)it.getValue(),entity));} @AT@ 15565 @LENGTH@ 64
---------------------------INS MethodInvocation@@map.put(key,getMappedObject((Document)it.getValue(),entity)) @TO@ ExpressionStatement@@MethodInvocation:map.put(key,getMappedObject((Document)it.getValue(),entity)) @AT@ 15565 @LENGTH@ 63
------------------------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put(key,getMappedObject((Document)it.getValue(),entity)) @AT@ 15565 @LENGTH@ 3
------------------------------INS SimpleName@@MethodName:put:[key, getMappedObject((Document)it.getValue(),entity)] @TO@ MethodInvocation@@map.put(key,getMappedObject((Document)it.getValue(),entity)) @AT@ 15569 @LENGTH@ 59
---------------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:put:[key, getMappedObject((Document)it.getValue(),entity)] @AT@ 15573 @LENGTH@ 3
---------------------------------INS MethodInvocation@@getMappedObject((Document)it.getValue(),entity) @TO@ SimpleName@@MethodName:put:[key, getMappedObject((Document)it.getValue(),entity)] @AT@ 15578 @LENGTH@ 49
------------------------------------INS SimpleName@@MethodName:getMappedObject:[(Document)it.getValue(), entity] @TO@ MethodInvocation@@getMappedObject((Document)it.getValue(),entity) @AT@ 15578 @LENGTH@ 49
---------------------------------------INS CastExpression@@(Document)it.getValue() @TO@ SimpleName@@MethodName:getMappedObject:[(Document)it.getValue(), entity] @AT@ 15594 @LENGTH@ 24
------------------------------------------INS SimpleType@@Document @TO@ CastExpression@@(Document)it.getValue() @AT@ 15595 @LENGTH@ 8
------------------------------------------INS MethodInvocation@@it.getValue() @TO@ CastExpression@@(Document)it.getValue() @AT@ 15605 @LENGTH@ 13
---------------------------------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.getValue() @AT@ 15605 @LENGTH@ 2
---------------------------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@it.getValue() @AT@ 15608 @LENGTH@ 10
---------------------------------------INS SimpleName@@entity @TO@ SimpleName@@MethodName:getMappedObject:[(Document)it.getValue(), entity] @AT@ 15620 @LENGTH@ 6
---------------------INS Block@@ElseBody:{  map.put(key,delegateConvertToMongoType(it.getValue(),entity));} @TO@ IfStatement@@if (it.getValue() instanceof Document) {  map.put(key,getMappedObject((Document)it.getValue(),entity));} else {  map.put(key,delegateConvertToMongoType(it.getValue(),entity));} @AT@ 15641 @LENGTH@ 77
------------------------INS ExpressionStatement@@MethodInvocation:map.put(key,delegateConvertToMongoType(it.getValue(),entity)) @TO@ Block@@ElseBody:{  map.put(key,delegateConvertToMongoType(it.getValue(),entity));} @AT@ 15648 @LENGTH@ 64
---------------------------INS MethodInvocation@@map.put(key,delegateConvertToMongoType(it.getValue(),entity)) @TO@ ExpressionStatement@@MethodInvocation:map.put(key,delegateConvertToMongoType(it.getValue(),entity)) @AT@ 15648 @LENGTH@ 63
------------------------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put(key,delegateConvertToMongoType(it.getValue(),entity)) @AT@ 15648 @LENGTH@ 3
------------------------------INS SimpleName@@MethodName:put:[key, delegateConvertToMongoType(it.getValue(),entity)] @TO@ MethodInvocation@@map.put(key,delegateConvertToMongoType(it.getValue(),entity)) @AT@ 15652 @LENGTH@ 59
---------------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:put:[key, delegateConvertToMongoType(it.getValue(),entity)] @AT@ 15656 @LENGTH@ 3
---------------------------------INS MethodInvocation@@delegateConvertToMongoType(it.getValue(),entity) @TO@ SimpleName@@MethodName:put:[key, delegateConvertToMongoType(it.getValue(),entity)] @AT@ 15661 @LENGTH@ 49
------------------------------------INS SimpleName@@MethodName:delegateConvertToMongoType:[it.getValue(), entity] @TO@ MethodInvocation@@delegateConvertToMongoType(it.getValue(),entity) @AT@ 15661 @LENGTH@ 49
---------------------------------------INS MethodInvocation@@it.getValue() @TO@ SimpleName@@MethodName:delegateConvertToMongoType:[it.getValue(), entity] @AT@ 15688 @LENGTH@ 13
------------------------------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.getValue() @AT@ 15688 @LENGTH@ 2
------------------------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@it.getValue() @AT@ 15691 @LENGTH@ 10
---------------------------------------INS SimpleName@@entity @TO@ SimpleName@@MethodName:delegateConvertToMongoType:[it.getValue(), entity] @AT@ 15703 @LENGTH@ 6
------INS ReturnStatement@@SimpleName:map @TO@ Block@@ThenBody:{  LinkedHashMap<String,Object> map=new LinkedHashMap<>();  ((Map<String,Object>)source).entrySet().forEach(it -> {    String key=ObjectUtils.nullSafeToString(converter.convertToMongoType(it.getKey()));    if (it.getValue() instanceof Document) {      map.put(key,getMappedObject((Document)it.getValue(),entity));    } else {      map.put(key,delegateConvertToMongoType(it.getValue(),entity));    }  });  return map;} @AT@ 15729 @LENGTH@ 11
---------INS SimpleName@@map @TO@ ReturnStatement@@SimpleName:map @AT@ 15736 @LENGTH@ 3


UPD TypeDeclaration@@[public]OAuth2IntrospectionAuthenticationToken, AbstractOAuth2TokenAuthenticationToken<OAuth2AccessToken> @TO@ [@Transient, public]OAuth2IntrospectionAuthenticationToken, AbstractOAuth2TokenAuthenticationToken<OAuth2AccessToken> @AT@ 1465 @LENGTH@ 1775
---INS MarkerAnnotation@@@Transient @TO@ TypeDeclaration@@[public]OAuth2IntrospectionAuthenticationToken, AbstractOAuth2TokenAuthenticationToken<OAuth2AccessToken> @AT@ 1517 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:from("quartz2://myGroup/myTimerName?durableJob=true&recoverableJob=true&cron=0/2+*+*+*+*+?").to("mock:result") @TO@ MethodInvocation:from("quartz2://myGroup/myTimerName?durableJob=true&recoverableJob=true&cron=0/1+*+*+*+*+?").to("mock:result") @AT@ 1350 @LENGTH@ 111
---UPD MethodInvocation@@from("quartz2://myGroup/myTimerName?durableJob=true&recoverableJob=true&cron=0/2+*+*+*+*+?").to("mock:result") @TO@ from("quartz2://myGroup/myTimerName?durableJob=true&recoverableJob=true&cron=0/1+*+*+*+*+?").to("mock:result") @AT@ 1350 @LENGTH@ 110
------UPD MethodInvocation@@MethodName:from:["quartz2://myGroup/myTimerName?durableJob=true&recoverableJob=true&cron=0/2+*+*+*+*+?"] @TO@ MethodName:from:["quartz2://myGroup/myTimerName?durableJob=true&recoverableJob=true&cron=0/1+*+*+*+*+?"] @AT@ 1350 @LENGTH@ 92
---------UPD StringLiteral@@"quartz2://myGroup/myTimerName?durableJob=true&recoverableJob=true&cron=0/2+*+*+*+*+?" @TO@ "quartz2://myGroup/myTimerName?durableJob=true&recoverableJob=true&cron=0/1+*+*+*+*+?" @AT@ 1355 @LENGTH@ 86


INS MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @TO@ TypeDeclaration@@[public]HstsHeaderWriterTests,  @AT@ 4530 @LENGTH@ 265
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 4530 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 4537 @LENGTH@ 4
---INS SimpleName@@MethodName:writeHeaderOnlyIfNotPresent @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 4542 @LENGTH@ 27
---INS VariableDeclarationStatement@@String value=new String("value"); @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 4575 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=new String("value"); @AT@ 4575 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=new String("value") @TO@ VariableDeclarationStatement@@String value=new String("value"); @AT@ 4582 @LENGTH@ 27
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=new String("value") @AT@ 4582 @LENGTH@ 5
---------INS ClassInstanceCreation@@String["value"] @TO@ VariableDeclarationFragment@@value=new String("value") @AT@ 4590 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@String["value"] @AT@ 4590 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String["value"] @AT@ 4594 @LENGTH@ 6
------------INS StringLiteral@@"value" @TO@ ClassInstanceCreation@@String["value"] @AT@ 4601 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:this.response.setHeader(HSTS_HEADER_NAME,value) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 4613 @LENGTH@ 49
------INS MethodInvocation@@this.response.setHeader(HSTS_HEADER_NAME,value) @TO@ ExpressionStatement@@MethodInvocation:this.response.setHeader(HSTS_HEADER_NAME,value) @AT@ 4613 @LENGTH@ 48
---------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.setHeader(HSTS_HEADER_NAME,value) @AT@ 4613 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 4613 @LENGTH@ 4
------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 4618 @LENGTH@ 8
---------INS SimpleName@@MethodName:setHeader:[HSTS_HEADER_NAME, value] @TO@ MethodInvocation@@this.response.setHeader(HSTS_HEADER_NAME,value) @AT@ 4627 @LENGTH@ 34
------------INS SimpleName@@HSTS_HEADER_NAME @TO@ SimpleName@@MethodName:setHeader:[HSTS_HEADER_NAME, value] @AT@ 4637 @LENGTH@ 16
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:setHeader:[HSTS_HEADER_NAME, value] @AT@ 4655 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:this.writer.writeHeaders(this.request,this.response) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 4665 @LENGTH@ 54
------INS MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @TO@ ExpressionStatement@@MethodInvocation:this.writer.writeHeaders(this.request,this.response) @AT@ 4665 @LENGTH@ 53
---------INS FieldAccess@@this.writer @TO@ MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @AT@ 4665 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.writer @AT@ 4665 @LENGTH@ 4
------------INS SimpleName@@writer @TO@ FieldAccess@@this.writer @AT@ 4670 @LENGTH@ 6
---------INS SimpleName@@MethodName:writeHeaders:[this.request, this.response] @TO@ MethodInvocation@@this.writer.writeHeaders(this.request,this.response) @AT@ 4677 @LENGTH@ 41
------------INS FieldAccess@@this.request @TO@ SimpleName@@MethodName:writeHeaders:[this.request, this.response] @AT@ 4690 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 4690 @LENGTH@ 4
---------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 4695 @LENGTH@ 7
------------INS FieldAccess@@this.response @TO@ SimpleName@@MethodName:writeHeaders:[this.request, this.response] @AT@ 4704 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 4704 @LENGTH@ 4
---------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 4709 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(this.response.getHeader(HSTS_HEADER_NAME)).isSameAs(value) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 4722 @LENGTH@ 70
------INS MethodInvocation@@assertThat(this.response.getHeader(HSTS_HEADER_NAME)).isSameAs(value) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.response.getHeader(HSTS_HEADER_NAME)).isSameAs(value) @AT@ 4722 @LENGTH@ 69
---------INS MethodInvocation@@MethodName:assertThat:[this.response.getHeader(HSTS_HEADER_NAME)] @TO@ MethodInvocation@@assertThat(this.response.getHeader(HSTS_HEADER_NAME)).isSameAs(value) @AT@ 4722 @LENGTH@ 53
------------INS MethodInvocation@@this.response.getHeader(HSTS_HEADER_NAME) @TO@ MethodInvocation@@MethodName:assertThat:[this.response.getHeader(HSTS_HEADER_NAME)] @AT@ 4733 @LENGTH@ 41
---------------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.getHeader(HSTS_HEADER_NAME) @AT@ 4733 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 4733 @LENGTH@ 4
------------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 4738 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getHeader:[HSTS_HEADER_NAME] @TO@ MethodInvocation@@this.response.getHeader(HSTS_HEADER_NAME) @AT@ 4747 @LENGTH@ 27
------------------INS SimpleName@@HSTS_HEADER_NAME @TO@ SimpleName@@MethodName:getHeader:[HSTS_HEADER_NAME] @AT@ 4757 @LENGTH@ 16
---------INS SimpleName@@MethodName:isSameAs:[value] @TO@ MethodInvocation@@assertThat(this.response.getHeader(HSTS_HEADER_NAME)).isSameAs(value) @AT@ 4776 @LENGTH@ 15
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:isSameAs:[value] @AT@ 4785 @LENGTH@ 5


UPD VariableDeclarationStatement@@Producer producer=context.getEndpoint("direct:foo").createProducer(); @TO@ DefaultProducer producer=(DefaultProducer)context.getEndpoint("direct:foo").createProducer(); @AT@ 2405 @LENGTH@ 71
---UPD SimpleType@@Producer @TO@ DefaultProducer @AT@ 2405 @LENGTH@ 8
---UPD VariableDeclarationFragment@@producer=context.getEndpoint("direct:foo").createProducer() @TO@ producer=(DefaultProducer)context.getEndpoint("direct:foo").createProducer() @AT@ 2414 @LENGTH@ 61
------INS CastExpression@@(DefaultProducer)context.getEndpoint("direct:foo").createProducer() @TO@ VariableDeclarationFragment@@producer=context.getEndpoint("direct:foo").createProducer() @AT@ 2481 @LENGTH@ 68
---------MOV MethodInvocation@@context.getEndpoint("direct:foo").createProducer() @TO@ CastExpression@@(DefaultProducer)context.getEndpoint("direct:foo").createProducer() @AT@ 2425 @LENGTH@ 50
---------INS SimpleType@@DefaultProducer @TO@ CastExpression@@(DefaultProducer)context.getEndpoint("direct:foo").createProducer() @AT@ 2482 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:registry.put("connresource",connectionResource) @TO@ MethodInvocation:registry.bind("connresource",connectionResource) @AT@ 3018 @LENGTH@ 49
---UPD MethodInvocation@@registry.put("connresource",connectionResource) @TO@ registry.bind("connresource",connectionResource) @AT@ 3018 @LENGTH@ 48
------UPD SimpleName@@MethodName:put:["connresource", connectionResource] @TO@ MethodName:bind:["connresource", connectionResource] @AT@ 3027 @LENGTH@ 39


MOV FieldDeclaration@@AmazonS3ClientMock, [client=new AmazonS3ClientMock()] @TO@ TypeDeclaration@@[public]S3ComponentFileTest, CamelTestSupport @AT@ 1923 @LENGTH@ 53


DEL FieldDeclaration@@AmazonS3ClientMock, [clientMock=new AmazonS3ClientMock()] @AT@ 1664 @LENGTH@ 57
---DEL SimpleType@@AmazonS3ClientMock @AT@ 1664 @LENGTH@ 18
---DEL VariableDeclarationFragment@@clientMock=new AmazonS3ClientMock() @AT@ 1683 @LENGTH@ 37
------DEL SimpleName@@clientMock @AT@ 1683 @LENGTH@ 10
------DEL ClassInstanceCreation@@AmazonS3ClientMock[] @AT@ 1696 @LENGTH@ 24
---------DEL New@@new @AT@ 1696 @LENGTH@ 3
---------DEL SimpleType@@AmazonS3ClientMock @AT@ 1700 @LENGTH@ 18


UPD VariableDeclarationStatement@@DateTime dateTime=new DateTime().withYear(2014).withMonthOfYear(2).withDayOfMonth(7).withTime(3,4,5,6).toDateTime(DateTimeZone.UTC).toDateTimeISO(); @TO@ DateTime dateTime=new DateTime().withZone(DateTimeZone.UTC).withYear(2014).withMonthOfYear(2).withDayOfMonth(7).withTime(3,4,5,6).toDateTimeISO(); @AT@ 51996 @LENGTH@ 185
---UPD VariableDeclarationFragment@@dateTime=new DateTime().withYear(2014).withMonthOfYear(2).withDayOfMonth(7).withTime(3,4,5,6).toDateTime(DateTimeZone.UTC).toDateTimeISO() @TO@ dateTime=new DateTime().withZone(DateTimeZone.UTC).withYear(2014).withMonthOfYear(2).withDayOfMonth(7).withTime(3,4,5,6).toDateTimeISO() @AT@ 52005 @LENGTH@ 175
------UPD MethodInvocation@@new DateTime().withYear(2014).withMonthOfYear(2).withDayOfMonth(7).withTime(3,4,5,6).toDateTime(DateTimeZone.UTC).toDateTimeISO() @TO@ new DateTime().withZone(DateTimeZone.UTC).withYear(2014).withMonthOfYear(2).withDayOfMonth(7).withTime(3,4,5,6).toDateTimeISO() @AT@ 52016 @LENGTH@ 164
---------DEL MethodInvocation@@MethodName:toDateTime:[DateTimeZone.UTC] @AT@ 52016 @LENGTH@ 148
------------DEL QualifiedName@@DateTimeZone.UTC @AT@ 52147 @LENGTH@ 16
---------------DEL SimpleName@@DateTimeZone @AT@ 52147 @LENGTH@ 12
---------------DEL SimpleName@@UTC @AT@ 52160 @LENGTH@ 3
---------INS MethodInvocation@@MethodName:withZone:[DateTimeZone.UTC] @TO@ MethodInvocation@@new DateTime().withYear(2014).withMonthOfYear(2).withDayOfMonth(7).withTime(3,4,5,6).toDateTime(DateTimeZone.UTC).toDateTimeISO() @AT@ 52037 @LENGTH@ 49
------------INS QualifiedName@@DateTimeZone.UTC @TO@ MethodInvocation@@MethodName:withZone:[DateTimeZone.UTC] @AT@ 52069 @LENGTH@ 16
---------------INS SimpleName@@DateTimeZone @TO@ QualifiedName@@DateTimeZone.UTC @AT@ 52069 @LENGTH@ 12
---------------INS SimpleName@@UTC @TO@ QualifiedName@@DateTimeZone.UTC @AT@ 52082 @LENGTH@ 3


INS MethodDeclaration@@public, voidMethodName:MediaTypeRequestMatcher, MediaType... matchingMediaTypes,  @TO@ TypeDeclaration@@[public, final]MediaTypeRequestMatcher, [RequestMatcher] @AT@ 5748 @LENGTH@ 151
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:MediaTypeRequestMatcher, MediaType... matchingMediaTypes,  @AT@ 5748 @LENGTH@ 6
---INS SimpleName@@MethodName:MediaTypeRequestMatcher @TO@ MethodDeclaration@@public, voidMethodName:MediaTypeRequestMatcher, MediaType... matchingMediaTypes,  @AT@ 5755 @LENGTH@ 23
---INS SingleVariableDeclaration@@MediaType... matchingMediaTypes @TO@ MethodDeclaration@@public, voidMethodName:MediaTypeRequestMatcher, MediaType... matchingMediaTypes,  @AT@ 5779 @LENGTH@ 31
------INS SimpleType@@MediaType @TO@ SingleVariableDeclaration@@MediaType... matchingMediaTypes @AT@ 5779 @LENGTH@ 9
------INS SimpleName@@matchingMediaTypes @TO@ SingleVariableDeclaration@@MediaType... matchingMediaTypes @AT@ 5792 @LENGTH@ 18
---INS ConstructorInvocation@@this(new HeaderContentNegotiationStrategy(),Arrays.asList(matchingMediaTypes)); @TO@ MethodDeclaration@@public, voidMethodName:MediaTypeRequestMatcher, MediaType... matchingMediaTypes,  @AT@ 5816 @LENGTH@ 80
------INS ClassInstanceCreation@@HeaderContentNegotiationStrategy[] @TO@ ConstructorInvocation@@this(new HeaderContentNegotiationStrategy(),Arrays.asList(matchingMediaTypes)); @AT@ 5821 @LENGTH@ 38
---------INS New@@new @TO@ ClassInstanceCreation@@HeaderContentNegotiationStrategy[] @AT@ 5821 @LENGTH@ 3
---------INS SimpleType@@HeaderContentNegotiationStrategy @TO@ ClassInstanceCreation@@HeaderContentNegotiationStrategy[] @AT@ 5825 @LENGTH@ 32
------INS MethodInvocation@@Arrays.asList(matchingMediaTypes) @TO@ ConstructorInvocation@@this(new HeaderContentNegotiationStrategy(),Arrays.asList(matchingMediaTypes)); @AT@ 5861 @LENGTH@ 33
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(matchingMediaTypes) @AT@ 5861 @LENGTH@ 6
---------INS SimpleName@@MethodName:asList:[matchingMediaTypes] @TO@ MethodInvocation@@Arrays.asList(matchingMediaTypes) @AT@ 5868 @LENGTH@ 26
------------INS SimpleName@@matchingMediaTypes @TO@ SimpleName@@MethodName:asList:[matchingMediaTypes] @AT@ 5875 @LENGTH@ 18


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1628 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1628 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1635 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1643 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1673 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1680 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:reg.put("my-config",config) @TO@ MethodInvocation:reg.bind("my-config",config) @AT@ 8919 @LENGTH@ 29
---UPD MethodInvocation@@reg.put("my-config",config) @TO@ reg.bind("my-config",config) @AT@ 8919 @LENGTH@ 28
------UPD SimpleName@@MethodName:put:["my-config", config] @TO@ MethodName:bind:["my-config", config] @AT@ 8923 @LENGTH@ 24


INS MethodDeclaration@@public, void, MethodName:readInnerListShouldNotInfluenceOuterWithSameNameWhenNull,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MappingRedisConverterUnitTests,  @AT@ 64543 @LENGTH@ 395
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:readInnerListShouldNotInfluenceOuterWithSameNameWhenNull,  @AT@ 64543 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:readInnerListShouldNotInfluenceOuterWithSameNameWhenNull,  @AT@ 64550 @LENGTH@ 4
---INS SimpleName@@MethodName:readInnerListShouldNotInfluenceOuterWithSameNameWhenNull @TO@ MethodDeclaration@@public, void, MethodName:readInnerListShouldNotInfluenceOuterWithSameNameWhenNull,  @AT@ 64555 @LENGTH@ 56
---INS VariableDeclarationStatement@@Map<String,String> source=new LinkedHashMap<>(); @TO@ MethodDeclaration@@public, void, MethodName:readInnerListShouldNotInfluenceOuterWithSameNameWhenNull,  @AT@ 64619 @LENGTH@ 51
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> source=new LinkedHashMap<>(); @AT@ 64619 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 64619 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 64623 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 64631 @LENGTH@ 6
------INS VariableDeclarationFragment@@source=new LinkedHashMap<>() @TO@ VariableDeclarationStatement@@Map<String,String> source=new LinkedHashMap<>(); @AT@ 64639 @LENGTH@ 30
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=new LinkedHashMap<>() @AT@ 64639 @LENGTH@ 6
---------INS ClassInstanceCreation@@LinkedHashMap<>[] @TO@ VariableDeclarationFragment@@source=new LinkedHashMap<>() @AT@ 64648 @LENGTH@ 21
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashMap<>[] @AT@ 64648 @LENGTH@ 3
------------INS ParameterizedType@@LinkedHashMap<> @TO@ ClassInstanceCreation@@LinkedHashMap<>[] @AT@ 64652 @LENGTH@ 15
---------------INS SimpleType@@LinkedHashMap @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 64652 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:source.put("inners.[0].values.[0]","i-1") @TO@ MethodDeclaration@@public, void, MethodName:readInnerListShouldNotInfluenceOuterWithSameNameWhenNull,  @AT@ 64673 @LENGTH@ 43
------INS MethodInvocation@@source.put("inners.[0].values.[0]","i-1") @TO@ ExpressionStatement@@MethodInvocation:source.put("inners.[0].values.[0]","i-1") @AT@ 64673 @LENGTH@ 42
---------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.put("inners.[0].values.[0]","i-1") @AT@ 64673 @LENGTH@ 6
---------INS SimpleName@@MethodName:put:["inners.[0].values.[0]", "i-1"] @TO@ MethodInvocation@@source.put("inners.[0].values.[0]","i-1") @AT@ 64680 @LENGTH@ 35
------------INS StringLiteral@@"inners.[0].values.[0]" @TO@ SimpleName@@MethodName:put:["inners.[0].values.[0]", "i-1"] @AT@ 64684 @LENGTH@ 23
------------INS StringLiteral@@"i-1" @TO@ SimpleName@@MethodName:put:["inners.[0].values.[0]", "i-1"] @AT@ 64709 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:source.put("inners.[0].values.[1]","i-2") @TO@ MethodDeclaration@@public, void, MethodName:readInnerListShouldNotInfluenceOuterWithSameNameWhenNull,  @AT@ 64719 @LENGTH@ 43
------INS MethodInvocation@@source.put("inners.[0].values.[1]","i-2") @TO@ ExpressionStatement@@MethodInvocation:source.put("inners.[0].values.[1]","i-2") @AT@ 64719 @LENGTH@ 42
---------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.put("inners.[0].values.[1]","i-2") @AT@ 64719 @LENGTH@ 6
---------INS SimpleName@@MethodName:put:["inners.[0].values.[1]", "i-2"] @TO@ MethodInvocation@@source.put("inners.[0].values.[1]","i-2") @AT@ 64726 @LENGTH@ 35
------------INS StringLiteral@@"inners.[0].values.[1]" @TO@ SimpleName@@MethodName:put:["inners.[0].values.[1]", "i-2"] @AT@ 64730 @LENGTH@ 23
------------INS StringLiteral@@"i-2" @TO@ SimpleName@@MethodName:put:["inners.[0].values.[1]", "i-2"] @AT@ 64755 @LENGTH@ 5
---INS VariableDeclarationStatement@@Outer outer=read(Outer.class,source); @TO@ MethodDeclaration@@public, void, MethodName:readInnerListShouldNotInfluenceOuterWithSameNameWhenNull,  @AT@ 64766 @LENGTH@ 40
------INS SimpleType@@Outer @TO@ VariableDeclarationStatement@@Outer outer=read(Outer.class,source); @AT@ 64766 @LENGTH@ 5
------INS VariableDeclarationFragment@@outer=read(Outer.class,source) @TO@ VariableDeclarationStatement@@Outer outer=read(Outer.class,source); @AT@ 64772 @LENGTH@ 33
---------INS SimpleName@@outer @TO@ VariableDeclarationFragment@@outer=read(Outer.class,source) @AT@ 64772 @LENGTH@ 5
---------INS MethodInvocation@@read(Outer.class,source) @TO@ VariableDeclarationFragment@@outer=read(Outer.class,source) @AT@ 64780 @LENGTH@ 25
------------INS SimpleName@@MethodName:read:[Outer.class, source] @TO@ MethodInvocation@@read(Outer.class,source) @AT@ 64780 @LENGTH@ 25
---------------INS TypeLiteral@@Outer.class @TO@ SimpleName@@MethodName:read:[Outer.class, source] @AT@ 64785 @LENGTH@ 11
---------------INS SimpleName@@source @TO@ SimpleName@@MethodName:read:[Outer.class, source] @AT@ 64798 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(outer.values,is(nullValue())) @TO@ MethodDeclaration@@public, void, MethodName:readInnerListShouldNotInfluenceOuterWithSameNameWhenNull,  @AT@ 64809 @LENGTH@ 42
------INS MethodInvocation@@assertThat(outer.values,is(nullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(outer.values,is(nullValue())) @AT@ 64809 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertThat:[outer.values, is(nullValue())] @TO@ MethodInvocation@@assertThat(outer.values,is(nullValue())) @AT@ 64809 @LENGTH@ 41
------------INS QualifiedName@@outer.values @TO@ SimpleName@@MethodName:assertThat:[outer.values, is(nullValue())] @AT@ 64820 @LENGTH@ 12
---------------INS SimpleName@@outer @TO@ QualifiedName@@outer.values @AT@ 64820 @LENGTH@ 5
---------------INS SimpleName@@values @TO@ QualifiedName@@outer.values @AT@ 64826 @LENGTH@ 6
------------INS MethodInvocation@@is(nullValue()) @TO@ SimpleName@@MethodName:assertThat:[outer.values, is(nullValue())] @AT@ 64834 @LENGTH@ 15
---------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 64834 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 64837 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(outer.inners.get(0).values,is(equalTo(Arrays.asList("i-1","i-2")))) @TO@ MethodDeclaration@@public, void, MethodName:readInnerListShouldNotInfluenceOuterWithSameNameWhenNull,  @AT@ 64854 @LENGTH@ 81
------INS MethodInvocation@@assertThat(outer.inners.get(0).values,is(equalTo(Arrays.asList("i-1","i-2")))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(outer.inners.get(0).values,is(equalTo(Arrays.asList("i-1","i-2")))) @AT@ 64854 @LENGTH@ 80
---------INS SimpleName@@MethodName:assertThat:[outer.inners.get(0).values, is(equalTo(Arrays.asList("i-1","i-2")))] @TO@ MethodInvocation@@assertThat(outer.inners.get(0).values,is(equalTo(Arrays.asList("i-1","i-2")))) @AT@ 64854 @LENGTH@ 80
------------INS FieldAccess@@outer.inners.get(0).values @TO@ SimpleName@@MethodName:assertThat:[outer.inners.get(0).values, is(equalTo(Arrays.asList("i-1","i-2")))] @AT@ 64865 @LENGTH@ 26
---------------INS MethodInvocation@@outer.inners.get(0) @TO@ FieldAccess@@outer.inners.get(0).values @AT@ 64865 @LENGTH@ 19
------------------INS QualifiedName@@Name:outer.inners @TO@ MethodInvocation@@outer.inners.get(0) @AT@ 64865 @LENGTH@ 12
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@outer.inners.get(0) @AT@ 64878 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 64882 @LENGTH@ 1
---------------INS SimpleName@@values @TO@ FieldAccess@@outer.inners.get(0).values @AT@ 64885 @LENGTH@ 6
------------INS MethodInvocation@@is(equalTo(Arrays.asList("i-1","i-2"))) @TO@ SimpleName@@MethodName:assertThat:[outer.inners.get(0).values, is(equalTo(Arrays.asList("i-1","i-2")))] @AT@ 64893 @LENGTH@ 40
---------------INS SimpleName@@MethodName:is:[equalTo(Arrays.asList("i-1","i-2"))] @TO@ MethodInvocation@@is(equalTo(Arrays.asList("i-1","i-2"))) @AT@ 64893 @LENGTH@ 40
------------------INS MethodInvocation@@equalTo(Arrays.asList("i-1","i-2")) @TO@ SimpleName@@MethodName:is:[equalTo(Arrays.asList("i-1","i-2"))] @AT@ 64896 @LENGTH@ 36
---------------------INS SimpleName@@MethodName:equalTo:[Arrays.asList("i-1","i-2")] @TO@ MethodInvocation@@equalTo(Arrays.asList("i-1","i-2")) @AT@ 64896 @LENGTH@ 36
------------------------INS MethodInvocation@@Arrays.asList("i-1","i-2") @TO@ SimpleName@@MethodName:equalTo:[Arrays.asList("i-1","i-2")] @AT@ 64904 @LENGTH@ 27
---------------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("i-1","i-2") @AT@ 64904 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:asList:["i-1", "i-2"] @TO@ MethodInvocation@@Arrays.asList("i-1","i-2") @AT@ 64911 @LENGTH@ 20
------------------------------INS StringLiteral@@"i-1" @TO@ SimpleName@@MethodName:asList:["i-1", "i-2"] @AT@ 64918 @LENGTH@ 5
------------------------------INS StringLiteral@@"i-2" @TO@ SimpleName@@MethodName:asList:["i-1", "i-2"] @AT@ 64925 @LENGTH@ 5


UPD ReturnStatement@@InfixExpression:value1 == value2 || (value1 == null ? false : value1.equals(value2)) @TO@ InfixExpression:value1 == value2 || (value1 != null && value1.equals(value2)) @AT@ 13019 @LENGTH@ 76
---UPD InfixExpression@@value1 == value2 || (value1 == null ? false : value1.equals(value2)) @TO@ value1 == value2 || (value1 != null && value1.equals(value2)) @AT@ 13026 @LENGTH@ 68
------UPD ParenthesizedExpression@@(value1 == null ? false : value1.equals(value2)) @TO@ (value1 != null && value1.equals(value2)) @AT@ 13046 @LENGTH@ 48
---------DEL ConditionalExpression@@value1 == null ? false : value1.equals(value2) @AT@ 13047 @LENGTH@ 46
------------DEL InfixExpression@@value1 == null @AT@ 13047 @LENGTH@ 14
------------DEL BooleanLiteral@@false @AT@ 13064 @LENGTH@ 5
---------INS InfixExpression@@value1 != null && value1.equals(value2) @TO@ ParenthesizedExpression@@(value1 == null ? false : value1.equals(value2)) @AT@ 13047 @LENGTH@ 39
------------INS InfixExpression@@value1 != null @TO@ InfixExpression@@value1 != null && value1.equals(value2) @AT@ 13047 @LENGTH@ 14
---------------MOV SimpleName@@value1 @TO@ InfixExpression@@value1 != null @AT@ 13047 @LENGTH@ 6
---------------MOV Operator@@== @TO@ InfixExpression@@value1 != null @AT@ 13053 @LENGTH@ 2
---------------MOV NullLiteral@@null @TO@ InfixExpression@@value1 != null @AT@ 13057 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@value1 != null && value1.equals(value2) @AT@ 13061 @LENGTH@ 2
------------MOV MethodInvocation@@value1.equals(value2) @TO@ InfixExpression@@value1 != null && value1.equals(value2) @AT@ 13072 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(configuration,options) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 2996 @LENGTH@ 59
---UPD MethodInvocation@@IntrospectionSupport.setProperties(configuration,options) @TO@ PropertyBindingSupport.bindProperties(context,configuration,options) @AT@ 2996 @LENGTH@ 58
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 2996 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[configuration, options] @TO@ MethodName:bindProperties:[context, configuration, options] @AT@ 3017 @LENGTH@ 37
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:setProperties:[configuration, options] @AT@ 3036 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:writer.append("    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method) { \n") @TO@ MethodInvocation:writer.append("    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method)" + " { \n") @AT@ 11908 @LENGTH@ 188
---UPD MethodInvocation@@writer.append("    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method) { \n") @TO@ writer.append("    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method)" + " { \n") @AT@ 11908 @LENGTH@ 187
------UPD SimpleName@@MethodName:append:["    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method) { \n"] @TO@ MethodName:append:["    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method)" + " { \n"] @AT@ 11915 @LENGTH@ 180
---------DEL StringLiteral@@"    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method) { \n" @AT@ 11922 @LENGTH@ 172
---------INS InfixExpression@@"    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method)" + " { \n" @TO@ SimpleName@@MethodName:append:["    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method) { \n"] @AT@ 11953 @LENGTH@ 207
------------INS StringLiteral@@"    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method)" @TO@ InfixExpression@@"    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method)" + " { \n" @AT@ 11953 @LENGTH@ 167
------------INS Operator@@+ @TO@ InfixExpression@@"    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method)" + " { \n" @AT@ 12120 @LENGTH@ 1
------------INS StringLiteral@@" { \n" @TO@ InfixExpression@@"    private void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method)" + " { \n" @AT@ 12153 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:this.fraction.cacheContainer("hibernate",cc -> cc.module("org.hibernate.infinispan").localCache("entity",c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L))).localCache("local-query",c -> c.evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L))).localCache("timestamps")) @TO@ MethodInvocation:this.fraction.cacheContainer("hibernate",cc -> cc.module("org.hibernate.infinispan").localCache("entity",c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).expirationComponent(e -> e.maxIdle(100000L))).localCache("local-query",c -> c.expirationComponent(e -> e.maxIdle(100000L))).localCache("timestamps")) @AT@ 3751 @LENGTH@ 819
---UPD MethodInvocation@@this.fraction.cacheContainer("hibernate",cc -> cc.module("org.hibernate.infinispan").localCache("entity",c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L))).localCache("local-query",c -> c.evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L))).localCache("timestamps")) @TO@ this.fraction.cacheContainer("hibernate",cc -> cc.module("org.hibernate.infinispan").localCache("entity",c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).expirationComponent(e -> e.maxIdle(100000L))).localCache("local-query",c -> c.expirationComponent(e -> e.maxIdle(100000L))).localCache("timestamps")) @AT@ 3751 @LENGTH@ 818
------UPD SimpleName@@MethodName:cacheContainer:["hibernate", cc -> cc.module("org.hibernate.infinispan").localCache("entity",c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L))).localCache("local-query",c -> c.evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L))).localCache("timestamps")] @TO@ MethodName:cacheContainer:["hibernate", cc -> cc.module("org.hibernate.infinispan").localCache("entity",c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).expirationComponent(e -> e.maxIdle(100000L))).localCache("local-query",c -> c.expirationComponent(e -> e.maxIdle(100000L))).localCache("timestamps")] @AT@ 3765 @LENGTH@ 804
---------UPD LambdaExpression@@cc -> cc.module("org.hibernate.infinispan").localCache("entity",c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L))).localCache("local-query",c -> c.evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L))).localCache("timestamps") @TO@ cc -> cc.module("org.hibernate.infinispan").localCache("entity",c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).expirationComponent(e -> e.maxIdle(100000L))).localCache("local-query",c -> c.expirationComponent(e -> e.maxIdle(100000L))).localCache("timestamps") @AT@ 3813 @LENGTH@ 755
------------UPD MethodInvocation@@cc.module("org.hibernate.infinispan").localCache("entity",c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L))).localCache("local-query",c -> c.evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L))).localCache("timestamps") @TO@ cc.module("org.hibernate.infinispan").localCache("entity",c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).expirationComponent(e -> e.maxIdle(100000L))).localCache("local-query",c -> c.expirationComponent(e -> e.maxIdle(100000L))).localCache("timestamps") @AT@ 3819 @LENGTH@ 749
---------------UPD MethodInvocation@@MethodName:localCache:["local-query", c -> c.evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L))] @TO@ MethodName:localCache:["local-query", c -> c.expirationComponent(e -> e.maxIdle(100000L))] @AT@ 3819 @LENGTH@ 695
------------------UPD LambdaExpression@@c -> c.evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L)) @TO@ c -> c.expirationComponent(e -> e.maxIdle(100000L)) @AT@ 4331 @LENGTH@ 182
---------------------UPD MethodInvocation@@c.evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L)) @TO@ c.expirationComponent(e -> e.maxIdle(100000L)) @AT@ 4336 @LENGTH@ 177
------------------------DEL MethodInvocation@@MethodName:evictionComponent:[e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)] @AT@ 4336 @LENGTH@ 87
---------------------------DEL LambdaExpression@@e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L) @AT@ 4356 @LENGTH@ 66
------------------------------DEL VariableDeclarationFragment@@e @AT@ 4356 @LENGTH@ 1
---------------------------------DEL SimpleName@@e @AT@ 4356 @LENGTH@ 1
------------------------------DEL MethodInvocation@@e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L) @AT@ 4361 @LENGTH@ 61
---------------------------------DEL MethodInvocation@@MethodName:strategy:[EvictionComponent.Strategy.LRU] @AT@ 4361 @LENGTH@ 42
------------------------------------DEL QualifiedName@@EvictionComponent.Strategy.LRU @AT@ 4372 @LENGTH@ 30
---------------------------------------DEL QualifiedName@@EvictionComponent.Strategy @AT@ 4372 @LENGTH@ 26
------------------------------------------DEL SimpleName@@EvictionComponent @AT@ 4372 @LENGTH@ 17
------------------------------------------DEL SimpleName@@Strategy @AT@ 4390 @LENGTH@ 8
---------------------------------------DEL SimpleName@@LRU @AT@ 4399 @LENGTH@ 3
---------------------------------DEL SimpleName@@Name:e @AT@ 4361 @LENGTH@ 1
---------------------------------DEL SimpleName@@MethodName:maxEntries:[10000L] @AT@ 4404 @LENGTH@ 18
------------------------------------DEL NumberLiteral@@10000L @AT@ 4415 @LENGTH@ 6
---------------UPD MethodInvocation@@MethodName:localCache:["entity", c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L))] @TO@ MethodName:localCache:["entity", c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).expirationComponent(e -> e.maxIdle(100000L))] @AT@ 3819 @LENGTH@ 420
------------------UPD LambdaExpression@@c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L)) @TO@ c -> c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).expirationComponent(e -> e.maxIdle(100000L)) @AT@ 3943 @LENGTH@ 295
---------------------UPD MethodInvocation@@c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).evictionComponent(e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)).expirationComponent(e -> e.maxIdle(100000L)) @TO@ c.transactionComponent(t -> t.mode(TransactionComponent.Mode.NON_XA)).expirationComponent(e -> e.maxIdle(100000L)) @AT@ 3948 @LENGTH@ 290
------------------------DEL MethodInvocation@@MethodName:evictionComponent:[e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L)] @AT@ 3948 @LENGTH@ 200
---------------------------DEL LambdaExpression@@e -> e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L) @AT@ 4081 @LENGTH@ 66
------------------------------DEL VariableDeclarationFragment@@e @AT@ 4081 @LENGTH@ 1
---------------------------------DEL SimpleName@@e @AT@ 4081 @LENGTH@ 1
------------------------------DEL MethodInvocation@@e.strategy(EvictionComponent.Strategy.LRU).maxEntries(10000L) @AT@ 4086 @LENGTH@ 61
---------------------------------DEL MethodInvocation@@MethodName:strategy:[EvictionComponent.Strategy.LRU] @AT@ 4086 @LENGTH@ 42
------------------------------------DEL QualifiedName@@EvictionComponent.Strategy.LRU @AT@ 4097 @LENGTH@ 30
---------------------------------------DEL QualifiedName@@EvictionComponent.Strategy @AT@ 4097 @LENGTH@ 26
------------------------------------------DEL SimpleName@@EvictionComponent @AT@ 4097 @LENGTH@ 17
------------------------------------------DEL SimpleName@@Strategy @AT@ 4115 @LENGTH@ 8
---------------------------------------DEL SimpleName@@LRU @AT@ 4124 @LENGTH@ 3
---------------------------------DEL SimpleName@@Name:e @AT@ 4086 @LENGTH@ 1
---------------------------------DEL SimpleName@@MethodName:maxEntries:[10000L] @AT@ 4129 @LENGTH@ 18
------------------------------------DEL NumberLiteral@@10000L @AT@ 4140 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:StepVerifier.create(template.save(new Object(),"collection")).expectError(MappingException.class).verify() @TO@ MethodInvocation:template.save(new Object(),"collection") @AT@ 27592 @LENGTH@ 124
---DEL MethodInvocation@@StepVerifier.create(template.save(new Object(),"collection")).expectError(MappingException.class).verify() @AT@ 27592 @LENGTH@ 123
------DEL MethodInvocation@@MethodName:expectError:[MappingException.class] @AT@ 27592 @LENGTH@ 106
---------DEL TypeLiteral@@MappingException.class @AT@ 27675 @LENGTH@ 22
------DEL MethodInvocation@@MethodName:create:[template.save(new Object(),"collection")] @AT@ 27592 @LENGTH@ 62
------DEL SimpleName@@Name:StepVerifier @AT@ 27592 @LENGTH@ 12
------DEL SimpleName@@MethodName:verify:[] @AT@ 27707 @LENGTH@ 8
---MOV MethodInvocation@@template.save(new Object(),"collection") @TO@ ExpressionStatement@@MethodInvocation:StepVerifier.create(template.save(new Object(),"collection")).expectError(MappingException.class).verify() @AT@ 27612 @LENGTH@ 41


UPD FieldDeclaration@@public, final, static, String, [RECEIVED_DELIVERY_MODE=PREFIX + "receivedDeliveryMode"] @TO@ public, static, final, String, [RECEIVED_DELIVERY_MODE=PREFIX + "receivedDeliveryMode"] @AT@ 2136 @LENGTH@ 84
---INS Modifier@@static @TO@ FieldDeclaration@@public, final, static, String, [RECEIVED_DELIVERY_MODE=PREFIX + "receivedDeliveryMode"] @AT@ 2143 @LENGTH@ 6
---DEL Modifier@@static @AT@ 2149 @LENGTH@ 6


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1508 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1508 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1515 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1523 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1553 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1560 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]ServerHttpSecurityTests,  @AT@ 10511 @LENGTH@ 953
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 10511 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 10518 @LENGTH@ 4
---INS SimpleName@@MethodName:basicWithCustomRealmName @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 10523 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:this.http.securityContextRepository(new WebSessionServerSecurityContextRepository()) @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 10554 @LENGTH@ 85
------INS MethodInvocation@@this.http.securityContextRepository(new WebSessionServerSecurityContextRepository()) @TO@ ExpressionStatement@@MethodInvocation:this.http.securityContextRepository(new WebSessionServerSecurityContextRepository()) @AT@ 10554 @LENGTH@ 84
---------INS FieldAccess@@this.http @TO@ MethodInvocation@@this.http.securityContextRepository(new WebSessionServerSecurityContextRepository()) @AT@ 10554 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.http @AT@ 10554 @LENGTH@ 4
------------INS SimpleName@@http @TO@ FieldAccess@@this.http @AT@ 10559 @LENGTH@ 4
---------INS SimpleName@@MethodName:securityContextRepository:[new WebSessionServerSecurityContextRepository()] @TO@ MethodInvocation@@this.http.securityContextRepository(new WebSessionServerSecurityContextRepository()) @AT@ 10564 @LENGTH@ 74
------------INS ClassInstanceCreation@@WebSessionServerSecurityContextRepository[] @TO@ SimpleName@@MethodName:securityContextRepository:[new WebSessionServerSecurityContextRepository()] @AT@ 10590 @LENGTH@ 47
---------------INS New@@new @TO@ ClassInstanceCreation@@WebSessionServerSecurityContextRepository[] @AT@ 10590 @LENGTH@ 3
---------------INS SimpleType@@WebSessionServerSecurityContextRepository @TO@ ClassInstanceCreation@@WebSessionServerSecurityContextRepository[] @AT@ 10594 @LENGTH@ 41
---INS VariableDeclarationStatement@@HttpBasicServerAuthenticationEntryPoint authenticationEntryPoint=new HttpBasicServerAuthenticationEntryPoint(); @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 10642 @LENGTH@ 113
------INS SimpleType@@HttpBasicServerAuthenticationEntryPoint @TO@ VariableDeclarationStatement@@HttpBasicServerAuthenticationEntryPoint authenticationEntryPoint=new HttpBasicServerAuthenticationEntryPoint(); @AT@ 10642 @LENGTH@ 39
------INS VariableDeclarationFragment@@authenticationEntryPoint=new HttpBasicServerAuthenticationEntryPoint() @TO@ VariableDeclarationStatement@@HttpBasicServerAuthenticationEntryPoint authenticationEntryPoint=new HttpBasicServerAuthenticationEntryPoint(); @AT@ 10682 @LENGTH@ 72
---------INS SimpleName@@authenticationEntryPoint @TO@ VariableDeclarationFragment@@authenticationEntryPoint=new HttpBasicServerAuthenticationEntryPoint() @AT@ 10682 @LENGTH@ 24
---------INS ClassInstanceCreation@@HttpBasicServerAuthenticationEntryPoint[] @TO@ VariableDeclarationFragment@@authenticationEntryPoint=new HttpBasicServerAuthenticationEntryPoint() @AT@ 10709 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@HttpBasicServerAuthenticationEntryPoint[] @AT@ 10709 @LENGTH@ 3
------------INS SimpleType@@HttpBasicServerAuthenticationEntryPoint @TO@ ClassInstanceCreation@@HttpBasicServerAuthenticationEntryPoint[] @AT@ 10713 @LENGTH@ 39
---INS ExpressionStatement@@MethodInvocation:authenticationEntryPoint.setRealm("myrealm") @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 10758 @LENGTH@ 45
------INS MethodInvocation@@authenticationEntryPoint.setRealm("myrealm") @TO@ ExpressionStatement@@MethodInvocation:authenticationEntryPoint.setRealm("myrealm") @AT@ 10758 @LENGTH@ 44
---------INS SimpleName@@Name:authenticationEntryPoint @TO@ MethodInvocation@@authenticationEntryPoint.setRealm("myrealm") @AT@ 10758 @LENGTH@ 24
---------INS SimpleName@@MethodName:setRealm:["myrealm"] @TO@ MethodInvocation@@authenticationEntryPoint.setRealm("myrealm") @AT@ 10783 @LENGTH@ 19
------------INS StringLiteral@@"myrealm" @TO@ SimpleName@@MethodName:setRealm:["myrealm"] @AT@ 10792 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:this.http.httpBasic().authenticationEntryPoint(authenticationEntryPoint) @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 10806 @LENGTH@ 73
------INS MethodInvocation@@this.http.httpBasic().authenticationEntryPoint(authenticationEntryPoint) @TO@ ExpressionStatement@@MethodInvocation:this.http.httpBasic().authenticationEntryPoint(authenticationEntryPoint) @AT@ 10806 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:httpBasic:[] @TO@ MethodInvocation@@this.http.httpBasic().authenticationEntryPoint(authenticationEntryPoint) @AT@ 10806 @LENGTH@ 21
---------INS FieldAccess@@this.http @TO@ MethodInvocation@@this.http.httpBasic().authenticationEntryPoint(authenticationEntryPoint) @AT@ 10806 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.http @AT@ 10806 @LENGTH@ 4
------------INS SimpleName@@http @TO@ FieldAccess@@this.http @AT@ 10811 @LENGTH@ 4
---------INS SimpleName@@MethodName:authenticationEntryPoint:[authenticationEntryPoint] @TO@ MethodInvocation@@this.http.httpBasic().authenticationEntryPoint(authenticationEntryPoint) @AT@ 10828 @LENGTH@ 50
------------INS SimpleName@@authenticationEntryPoint @TO@ SimpleName@@MethodName:authenticationEntryPoint:[authenticationEntryPoint] @AT@ 10853 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:this.http.authenticationManager(this.authenticationManager) @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 10882 @LENGTH@ 60
------INS MethodInvocation@@this.http.authenticationManager(this.authenticationManager) @TO@ ExpressionStatement@@MethodInvocation:this.http.authenticationManager(this.authenticationManager) @AT@ 10882 @LENGTH@ 59
---------INS FieldAccess@@this.http @TO@ MethodInvocation@@this.http.authenticationManager(this.authenticationManager) @AT@ 10882 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.http @AT@ 10882 @LENGTH@ 4
------------INS SimpleName@@http @TO@ FieldAccess@@this.http @AT@ 10887 @LENGTH@ 4
---------INS SimpleName@@MethodName:authenticationManager:[this.authenticationManager] @TO@ MethodInvocation@@this.http.authenticationManager(this.authenticationManager) @AT@ 10892 @LENGTH@ 49
------------INS FieldAccess@@this.authenticationManager @TO@ SimpleName@@MethodName:authenticationManager:[this.authenticationManager] @AT@ 10914 @LENGTH@ 26
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.authenticationManager @AT@ 10914 @LENGTH@ 4
---------------INS SimpleName@@authenticationManager @TO@ FieldAccess@@this.authenticationManager @AT@ 10919 @LENGTH@ 21
---INS VariableDeclarationStatement@@ServerHttpSecurity.AuthorizeExchangeSpec authorize=this.http.authorizeExchange(); @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 10945 @LENGTH@ 83
------INS SimpleType@@ServerHttpSecurity.AuthorizeExchangeSpec @TO@ VariableDeclarationStatement@@ServerHttpSecurity.AuthorizeExchangeSpec authorize=this.http.authorizeExchange(); @AT@ 10945 @LENGTH@ 40
------INS VariableDeclarationFragment@@authorize=this.http.authorizeExchange() @TO@ VariableDeclarationStatement@@ServerHttpSecurity.AuthorizeExchangeSpec authorize=this.http.authorizeExchange(); @AT@ 10986 @LENGTH@ 41
---------INS SimpleName@@authorize @TO@ VariableDeclarationFragment@@authorize=this.http.authorizeExchange() @AT@ 10986 @LENGTH@ 9
---------INS MethodInvocation@@this.http.authorizeExchange() @TO@ VariableDeclarationFragment@@authorize=this.http.authorizeExchange() @AT@ 10998 @LENGTH@ 29
------------INS FieldAccess@@this.http @TO@ MethodInvocation@@this.http.authorizeExchange() @AT@ 10998 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.http @AT@ 10998 @LENGTH@ 4
---------------INS SimpleName@@http @TO@ FieldAccess@@this.http @AT@ 11003 @LENGTH@ 4
------------INS SimpleName@@MethodName:authorizeExchange:[] @TO@ MethodInvocation@@this.http.authorizeExchange() @AT@ 11008 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:authorize.anyExchange().authenticated() @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 11031 @LENGTH@ 40
------INS MethodInvocation@@authorize.anyExchange().authenticated() @TO@ ExpressionStatement@@MethodInvocation:authorize.anyExchange().authenticated() @AT@ 11031 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:anyExchange:[] @TO@ MethodInvocation@@authorize.anyExchange().authenticated() @AT@ 11031 @LENGTH@ 23
---------INS SimpleName@@Name:authorize @TO@ MethodInvocation@@authorize.anyExchange().authenticated() @AT@ 11031 @LENGTH@ 9
---------INS SimpleName@@MethodName:authenticated:[] @TO@ MethodInvocation@@authorize.anyExchange().authenticated() @AT@ 11055 @LENGTH@ 15
---INS VariableDeclarationStatement@@WebTestClient client=buildClient(); @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 11075 @LENGTH@ 37
------INS SimpleType@@WebTestClient @TO@ VariableDeclarationStatement@@WebTestClient client=buildClient(); @AT@ 11075 @LENGTH@ 13
------INS VariableDeclarationFragment@@client=buildClient() @TO@ VariableDeclarationStatement@@WebTestClient client=buildClient(); @AT@ 11089 @LENGTH@ 22
---------INS SimpleName@@client @TO@ VariableDeclarationFragment@@client=buildClient() @AT@ 11089 @LENGTH@ 6
---------INS MethodInvocation@@MethodName:buildClient:[] @TO@ VariableDeclarationFragment@@client=buildClient() @AT@ 11098 @LENGTH@ 13
---INS VariableDeclarationStatement@@EntityExchangeResult<String> result=client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult(); @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 11116 @LENGTH@ 272
------INS ParameterizedType@@EntityExchangeResult<String> @TO@ VariableDeclarationStatement@@EntityExchangeResult<String> result=client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult(); @AT@ 11116 @LENGTH@ 28
---------INS SimpleType@@EntityExchangeResult @TO@ ParameterizedType@@EntityExchangeResult<String> @AT@ 11116 @LENGTH@ 20
---------INS SimpleType@@String @TO@ ParameterizedType@@EntityExchangeResult<String> @AT@ 11137 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @TO@ VariableDeclarationStatement@@EntityExchangeResult<String> result=client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult(); @AT@ 11145 @LENGTH@ 242
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @AT@ 11145 @LENGTH@ 6
---------INS MethodInvocation@@client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @TO@ VariableDeclarationFragment@@result=client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @AT@ 11154 @LENGTH@ 233
------------INS MethodInvocation@@MethodName:expectBody:[String.class] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @AT@ 11154 @LENGTH@ 213
---------------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:expectBody:[String.class] @AT@ 11354 @LENGTH@ 12
------------INS MethodInvocation@@MethodName:value:[HttpHeaders.WWW_AUTHENTICATE, value -> assertThat(value).contains("myrealm")] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @AT@ 11154 @LENGTH@ 183
---------------INS QualifiedName@@HttpHeaders.WWW_AUTHENTICATE @TO@ MethodInvocation@@MethodName:value:[HttpHeaders.WWW_AUTHENTICATE, value -> assertThat(value).contains("myrealm")] @AT@ 11260 @LENGTH@ 28
------------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.WWW_AUTHENTICATE @AT@ 11260 @LENGTH@ 11
------------------INS SimpleName@@WWW_AUTHENTICATE @TO@ QualifiedName@@HttpHeaders.WWW_AUTHENTICATE @AT@ 11272 @LENGTH@ 16
---------------INS LambdaExpression@@value -> assertThat(value).contains("myrealm") @TO@ MethodInvocation@@MethodName:value:[HttpHeaders.WWW_AUTHENTICATE, value -> assertThat(value).contains("myrealm")] @AT@ 11290 @LENGTH@ 46
------------------INS VariableDeclarationFragment@@value @TO@ LambdaExpression@@value -> assertThat(value).contains("myrealm") @AT@ 11290 @LENGTH@ 5
---------------------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value @AT@ 11290 @LENGTH@ 5
------------------INS MethodInvocation@@assertThat(value).contains("myrealm") @TO@ LambdaExpression@@value -> assertThat(value).contains("myrealm") @AT@ 11299 @LENGTH@ 37
---------------------INS MethodInvocation@@MethodName:assertThat:[value] @TO@ MethodInvocation@@assertThat(value).contains("myrealm") @AT@ 11299 @LENGTH@ 17
------------------------INS SimpleName@@value @TO@ MethodInvocation@@MethodName:assertThat:[value] @AT@ 11310 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:contains:["myrealm"] @TO@ MethodInvocation@@assertThat(value).contains("myrealm") @AT@ 11317 @LENGTH@ 19
------------------------INS StringLiteral@@"myrealm" @TO@ SimpleName@@MethodName:contains:["myrealm"] @AT@ 11326 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:expectHeader:[] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @AT@ 11154 @LENGTH@ 99
------------INS MethodInvocation@@MethodName:isUnauthorized:[] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @AT@ 11154 @LENGTH@ 79
------------INS MethodInvocation@@MethodName:expectStatus:[] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @AT@ 11154 @LENGTH@ 62
------------INS MethodInvocation@@MethodName:exchange:[] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @AT@ 11154 @LENGTH@ 42
------------INS MethodInvocation@@MethodName:uri:["/"] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @AT@ 11154 @LENGTH@ 26
---------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:uri:["/"] @AT@ 11176 @LENGTH@ 3
------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @AT@ 11154 @LENGTH@ 12
------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @AT@ 11154 @LENGTH@ 6
------------INS SimpleName@@MethodName:returnResult:[] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,value -> assertThat(value).contains("myrealm")).expectBody(String.class).returnResult() @AT@ 11373 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getResponseCookies().getFirst("SESSION")).isNull() @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomRealmName,  @AT@ 11392 @LENGTH@ 69
------INS MethodInvocation@@assertThat(result.getResponseCookies().getFirst("SESSION")).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getResponseCookies().getFirst("SESSION")).isNull() @AT@ 11392 @LENGTH@ 68
---------INS MethodInvocation@@MethodName:assertThat:[result.getResponseCookies().getFirst("SESSION")] @TO@ MethodInvocation@@assertThat(result.getResponseCookies().getFirst("SESSION")).isNull() @AT@ 11392 @LENGTH@ 59
------------INS MethodInvocation@@result.getResponseCookies().getFirst("SESSION") @TO@ MethodInvocation@@MethodName:assertThat:[result.getResponseCookies().getFirst("SESSION")] @AT@ 11403 @LENGTH@ 47
---------------INS MethodInvocation@@MethodName:getResponseCookies:[] @TO@ MethodInvocation@@result.getResponseCookies().getFirst("SESSION") @AT@ 11403 @LENGTH@ 27
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getResponseCookies().getFirst("SESSION") @AT@ 11403 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getFirst:["SESSION"] @TO@ MethodInvocation@@result.getResponseCookies().getFirst("SESSION") @AT@ 11431 @LENGTH@ 19
------------------INS StringLiteral@@"SESSION" @TO@ SimpleName@@MethodName:getFirst:["SESSION"] @AT@ 11440 @LENGTH@ 9
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(result.getResponseCookies().getFirst("SESSION")).isNull() @AT@ 11452 @LENGTH@ 8


UPD MethodDeclaration@@private, voidMethodName:PulsarConsumer, PulsarEndpoint pulsarEndpoint, Processor processor,  @TO@ public, voidMethodName:PulsarConsumer, PulsarEndpoint pulsarEndpoint, Processor processor,  @AT@ 1643 @LENGTH@ 325
---UPD Modifier@@private @TO@ public @AT@ 1643 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:registry.put("params",params) @TO@ MethodInvocation:registry.bind("params",params) @AT@ 4815 @LENGTH@ 31
---UPD MethodInvocation@@registry.put("params",params) @TO@ registry.bind("params",params) @AT@ 4815 @LENGTH@ 30
------UPD SimpleName@@MethodName:put:["params", params] @TO@ MethodName:bind:["params", params] @AT@ 4824 @LENGTH@ 21


UPD FieldDeclaration@@private, static, ModelJAXBContextFactory, [INSTANCE=new DefaultModelJAXBContextFactory()] @TO@ private, static, ModelJAXBContextFactory, [defaultInstance=new DefaultModelJAXBContextFactory()] @AT@ 11448 @LENGTH@ 87
---UPD VariableDeclarationFragment@@INSTANCE=new DefaultModelJAXBContextFactory() @TO@ defaultInstance=new DefaultModelJAXBContextFactory() @AT@ 11487 @LENGTH@ 47
------UPD SimpleName@@INSTANCE @TO@ defaultInstance @AT@ 11487 @LENGTH@ 8


UPD VariableDeclarationStatement@@String registrationId=(String)authorizationRequest.getAdditionalParameters().get(OAuth2ParameterNames.REGISTRATION_ID); @TO@ String registrationId=authorizationRequest.getAttribute(OAuth2ParameterNames.REGISTRATION_ID); @AT@ 8415 @LENGTH@ 122
---UPD VariableDeclarationFragment@@registrationId=(String)authorizationRequest.getAdditionalParameters().get(OAuth2ParameterNames.REGISTRATION_ID) @TO@ registrationId=authorizationRequest.getAttribute(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 8422 @LENGTH@ 114
------DEL CastExpression@@(String)authorizationRequest.getAdditionalParameters().get(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 8439 @LENGTH@ 97
---------DEL SimpleType@@String @AT@ 8440 @LENGTH@ 6
---------DEL MethodInvocation@@authorizationRequest.getAdditionalParameters().get(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 8448 @LENGTH@ 88
------------DEL MethodInvocation@@MethodName:getAdditionalParameters:[] @AT@ 8448 @LENGTH@ 46
------INS MethodInvocation@@authorizationRequest.getAttribute(OAuth2ParameterNames.REGISTRATION_ID) @TO@ VariableDeclarationFragment@@registrationId=(String)authorizationRequest.getAdditionalParameters().get(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 8439 @LENGTH@ 71
---------MOV SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAttribute(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 8448 @LENGTH@ 20
---------MOV SimpleName@@MethodName:get:[OAuth2ParameterNames.REGISTRATION_ID] @TO@ MethodInvocation@@authorizationRequest.getAttribute(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 8495 @LENGTH@ 41


UPD MethodDeclaration@@protected, Message, MethodName:buildMessage, Channel channel, Object result, Type genericType, Exception,  @TO@ protected, Message, MethodName:buildMessage, Channel channel, Object result, Type genericType,  @AT@ 14376 @LENGTH@ 503
---DEL SimpleType@@Exception @AT@ 14464 @LENGTH@ 9


UPD VariableDeclarationStatement@@String registrationId=(String)authorizationRequest.getAdditionalParameters().get(OAuth2ParameterNames.REGISTRATION_ID); @TO@ String registrationId=authorizationRequest.getAttribute(OAuth2ParameterNames.REGISTRATION_ID); @AT@ 8726 @LENGTH@ 122
---UPD VariableDeclarationFragment@@registrationId=(String)authorizationRequest.getAdditionalParameters().get(OAuth2ParameterNames.REGISTRATION_ID) @TO@ registrationId=authorizationRequest.getAttribute(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 8733 @LENGTH@ 114
------DEL CastExpression@@(String)authorizationRequest.getAdditionalParameters().get(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 8750 @LENGTH@ 97
---------DEL SimpleType@@String @AT@ 8751 @LENGTH@ 6
---------DEL MethodInvocation@@authorizationRequest.getAdditionalParameters().get(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 8759 @LENGTH@ 88
------------DEL MethodInvocation@@MethodName:getAdditionalParameters:[] @AT@ 8759 @LENGTH@ 46
------INS MethodInvocation@@authorizationRequest.getAttribute(OAuth2ParameterNames.REGISTRATION_ID) @TO@ VariableDeclarationFragment@@registrationId=(String)authorizationRequest.getAdditionalParameters().get(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 8750 @LENGTH@ 71
---------MOV SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAttribute(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 8759 @LENGTH@ 20
---------MOV SimpleName@@MethodName:get:[OAuth2ParameterNames.REGISTRATION_ID] @TO@ MethodInvocation@@authorizationRequest.getAttribute(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 8806 @LENGTH@ 41


MOV IfStatement@@if (!sstParams.isEmpty()) {  SimpleSearchTerm sst=new SimpleSearchTerm();  setProperties(sst,sstParams);  SearchTerm st=MailConverters.toSearchTerm(sst,getCamelContext().getTypeConverter());  endpoint.setSearchTerm(st);} @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 4356 @LENGTH@ 397


UPD MethodDeclaration@@public, Processor, MethodName:createBeanProcessor, CamelContext camelContext, Object bean, String beanType, Class<?> beanClass, String ref, String method, boolean cacheBean, Exception,  @TO@ Processor, MethodName:createBeanProcessor, CamelContext camelContext, Object bean, String beanType, Class<?> beanClass, String ref, String method, boolean cacheBean, Exception,  @AT@ 2315 @LENGTH@ 218
---DEL Modifier@@public @AT@ 2315 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:fail("Should fail due timeout") @TO@ MethodInvocation:fail("Should fail due to timeout") @AT@ 1654 @LENGTH@ 32
---UPD MethodInvocation@@fail("Should fail due timeout") @TO@ fail("Should fail due to timeout") @AT@ 1654 @LENGTH@ 31
------UPD SimpleName@@MethodName:fail:["Should fail due timeout"] @TO@ MethodName:fail:["Should fail due to timeout"] @AT@ 1654 @LENGTH@ 31
---------UPD StringLiteral@@"Should fail due timeout" @TO@ "Should fail due to timeout" @AT@ 1659 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(requestConfigBuilder,httpClientOptions) @TO@ MethodInvocation:PropertyBindingSupport.bindProperties(getCamelContext(),requestConfigBuilder,httpClientOptions) @AT@ 19580 @LENGTH@ 76
---UPD MethodInvocation@@IntrospectionSupport.setProperties(requestConfigBuilder,httpClientOptions) @TO@ PropertyBindingSupport.bindProperties(getCamelContext(),requestConfigBuilder,httpClientOptions) @AT@ 19580 @LENGTH@ 75
------UPD SimpleName@@Name:IntrospectionSupport @TO@ Name:PropertyBindingSupport @AT@ 19580 @LENGTH@ 20
------UPD SimpleName@@MethodName:setProperties:[requestConfigBuilder, httpClientOptions] @TO@ MethodName:bindProperties:[getCamelContext(), requestConfigBuilder, httpClientOptions] @AT@ 19601 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:setProperties:[requestConfigBuilder, httpClientOptions] @AT@ 19696 @LENGTH@ 17


INS MethodDeclaration@@public, Schema, MethodName:getSchema,  @TO@ TypeDeclaration@@[@API(status=API.Status.INTERNAL,since="1.0")]DefaultNodeManager, [NodeManager] @AT@ 4495 @LENGTH@ 47
---INS Modifier@@public @TO@ MethodDeclaration@@public, Schema, MethodName:getSchema,  @AT@ 4495 @LENGTH@ 6
---INS SimpleType@@Schema @TO@ MethodDeclaration@@public, Schema, MethodName:getSchema,  @AT@ 4502 @LENGTH@ 6
---INS SimpleName@@MethodName:getSchema @TO@ MethodDeclaration@@public, Schema, MethodName:getSchema,  @AT@ 4509 @LENGTH@ 9
---INS ReturnStatement@@SimpleName:schema @TO@ MethodDeclaration@@public, Schema, MethodName:getSchema,  @AT@ 4525 @LENGTH@ 14
------INS SimpleName@@schema @TO@ ReturnStatement@@SimpleName:schema @AT@ 4532 @LENGTH@ 6


DEL FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CustomClientFactoryTest.class)] @AT@ 1375 @LENGTH@ 89
---DEL Modifier@@private @AT@ 1375 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1383 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1390 @LENGTH@ 5
---DEL SimpleType@@Logger @AT@ 1396 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(CustomClientFactoryTest.class) @AT@ 1403 @LENGTH@ 60
------DEL SimpleName@@LOG @AT@ 1403 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(CustomClientFactoryTest.class) @AT@ 1409 @LENGTH@ 54
---------DEL SimpleName@@Name:LoggerFactory @AT@ 1409 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[CustomClientFactoryTest.class] @AT@ 1423 @LENGTH@ 40
------------DEL TypeLiteral@@CustomClientFactoryTest.class @AT@ 1433 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:registry.put("curator",client) @TO@ MethodInvocation:registry.bind("curator",client) @AT@ 2546 @LENGTH@ 32
---UPD MethodInvocation@@registry.put("curator",client) @TO@ registry.bind("curator",client) @AT@ 2546 @LENGTH@ 31
------UPD SimpleName@@MethodName:put:["curator", client] @TO@ MethodName:bind:["curator", client] @AT@ 2555 @LENGTH@ 22


INS MethodDeclaration@@public, AuthorizeExchangeSpec, MethodName:hasAnyAuthority, String... authorities,  @TO@ TypeDeclaration@@[public, final]Access,  @AT@ 63632 @LENGTH@ 161
---INS Modifier@@public @TO@ MethodDeclaration@@public, AuthorizeExchangeSpec, MethodName:hasAnyAuthority, String... authorities,  @AT@ 63632 @LENGTH@ 6
---INS SimpleType@@AuthorizeExchangeSpec @TO@ MethodDeclaration@@public, AuthorizeExchangeSpec, MethodName:hasAnyAuthority, String... authorities,  @AT@ 63639 @LENGTH@ 21
---INS SimpleName@@MethodName:hasAnyAuthority @TO@ MethodDeclaration@@public, AuthorizeExchangeSpec, MethodName:hasAnyAuthority, String... authorities,  @AT@ 63661 @LENGTH@ 15
---INS SingleVariableDeclaration@@String... authorities @TO@ MethodDeclaration@@public, AuthorizeExchangeSpec, MethodName:hasAnyAuthority, String... authorities,  @AT@ 63677 @LENGTH@ 21
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... authorities @AT@ 63677 @LENGTH@ 6
------INS SimpleName@@authorities @TO@ SingleVariableDeclaration@@String... authorities @AT@ 63687 @LENGTH@ 11
---INS ReturnStatement@@MethodInvocation:access(AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities)) @TO@ MethodDeclaration@@public, AuthorizeExchangeSpec, MethodName:hasAnyAuthority, String... authorities,  @AT@ 63706 @LENGTH@ 82
------INS MethodInvocation@@access(AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities)) @TO@ ReturnStatement@@MethodInvocation:access(AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities)) @AT@ 63713 @LENGTH@ 74
---------INS SimpleName@@MethodName:access:[AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities)] @TO@ MethodInvocation@@access(AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities)) @AT@ 63713 @LENGTH@ 74
------------INS MethodInvocation@@AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities) @TO@ SimpleName@@MethodName:access:[AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities)] @AT@ 63720 @LENGTH@ 66
---------------INS SimpleName@@Name:AuthorityReactiveAuthorizationManager @TO@ MethodInvocation@@AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities) @AT@ 63720 @LENGTH@ 37
---------------INS SimpleName@@MethodName:hasAnyAuthority:[authorities] @TO@ MethodInvocation@@AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities) @AT@ 63758 @LENGTH@ 28
------------------INS SimpleName@@authorities @TO@ SimpleName@@MethodName:hasAnyAuthority:[authorities] @AT@ 63774 @LENGTH@ 11


MOV FieldDeclaration@@String, [apiContextPath] @TO@ TypeDeclaration@@[abstract]AbstractGenerateMojo, AbstractMojo @AT@ 3652 @LENGTH@ 22


UPD IfStatement@@if (udf instanceof GenericUDFOPEqual || udf instanceof GenericUDFOPEqualNS) {  String colName=null;  boolean isConst=false;  Object prevConst=null;  for (  ExprNodeDesc leaf : genFunc.getChildren()) {    if (leaf instanceof ExprNodeConstantDesc) {      if (isConst) {        if (prevConst != null && !prevConst.equals(((ExprNodeConstantDesc)leaf).getValue())) {          return 0;        }        return numRows;      }      if (colName == null) {        isConst=true;        prevConst=((ExprNodeConstantDesc)leaf).getValue();        continue;      }      if (neededCols != null && !neededCols.contains(colName)) {        return numRows;      }      ColStatistics cs=stats.getColumnStatisticsFromColName(colName);      if (cs != null) {        long dvs=cs.getCountDistint();        numRows=dvs == 0 ? numRows / 2 : Math.round((double)numRows / dvs);        return numRows;      }    } else     if (leaf instanceof ExprNodeColumnDesc) {      ExprNodeColumnDesc colDesc=(ExprNodeColumnDesc)leaf;      aspCtx.addAffectedColumn(colDesc);      colName=colDesc.getColumn();      if (isConst) {        if (neededCols != null && neededCols.indexOf(colName) == -1) {          return numRows;        }        ColStatistics cs=stats.getColumnStatisticsFromColName(colName);        if (cs != null) {          long dvs=cs.getCountDistint();          numRows=dvs == 0 ? numRows / 2 : Math.round((double)numRows / dvs);          return numRows;        }      }    }  }} else if (udf instanceof GenericUDFOPNotEqual) {  return numRows;} else if (udf instanceof GenericUDFOPEqualOrGreaterThan || udf instanceof GenericUDFOPEqualOrLessThan || udf instanceof GenericUDFOPGreaterThan|| udf instanceof GenericUDFOPLessThan) {  return evaluateComparator(stats,aspCtx,genFunc,numRows);} else if (udf instanceof GenericUDFOPNotNull) {  return evaluateNotNullExpr(stats,aspCtx,genFunc,numRows);} else if (udf instanceof GenericUDFOPNull) {  return evaluateColEqualsNullExpr(stats,aspCtx,genFunc,numRows);} else if (udf instanceof GenericUDFOPAnd || udf instanceof GenericUDFOPOr || udf instanceof GenericUDFIn|| udf instanceof GenericUDFBetween|| udf instanceof GenericUDFOPNot) {  return evaluateExpression(stats,genFunc,aspCtx,neededCols,op,numRows);} else if (udf instanceof GenericUDFInBloomFilter) {  if (genFunc.getChildren().get(1) instanceof ExprNodeDynamicValueDesc) {    return numRows;  }} @TO@ if (udf instanceof GenericUDFOPEqual) {  String colName=null;  boolean isConst=false;  Object prevConst=null;  for (  ExprNodeDesc leaf : genFunc.getChildren()) {    if (leaf instanceof ExprNodeConstantDesc) {      if (isConst) {        if (prevConst != null && !prevConst.equals(((ExprNodeConstantDesc)leaf).getValue())) {          return 0;        }        return numRows;      }      if (colName == null) {        isConst=true;        prevConst=((ExprNodeConstantDesc)leaf).getValue();        continue;      }      if (neededCols != null && !neededCols.contains(colName)) {        return numRows;      }      ColStatistics cs=stats.getColumnStatisticsFromColName(colName);      if (cs != null) {        long dvs=cs.getCountDistint();        numRows=dvs == 0 ? numRows / 2 : Math.round((double)numRows / dvs);        return numRows;      }    } else     if (leaf instanceof ExprNodeColumnDesc) {      ExprNodeColumnDesc colDesc=(ExprNodeColumnDesc)leaf;      aspCtx.addAffectedColumn(colDesc);      colName=colDesc.getColumn();      if (isConst) {        if (neededCols != null && neededCols.indexOf(colName) == -1) {          return numRows;        }        ColStatistics cs=stats.getColumnStatisticsFromColName(colName);        if (cs != null) {          long dvs=cs.getCountDistint();          numRows=dvs == 0 ? numRows / 2 : Math.round((double)numRows / dvs);          return numRows;        }      }    }  }} else if (udf instanceof GenericUDFOPNotEqual) {  return numRows;} else if (udf instanceof GenericUDFOPEqualOrGreaterThan || udf instanceof GenericUDFOPEqualOrLessThan || udf instanceof GenericUDFOPGreaterThan|| udf instanceof GenericUDFOPLessThan) {  return evaluateComparator(stats,aspCtx,genFunc,numRows);} else if (udf instanceof GenericUDFOPNotNull) {  return evaluateNotNullExpr(stats,aspCtx,genFunc,numRows);} else if (udf instanceof GenericUDFOPNull) {  return evaluateColEqualsNullExpr(stats,aspCtx,genFunc,numRows);} else if (udf instanceof GenericUDFOPAnd || udf instanceof GenericUDFOPOr || udf instanceof GenericUDFIn|| udf instanceof GenericUDFBetween|| udf instanceof GenericUDFOPNot) {  return evaluateExpression(stats,genFunc,aspCtx,neededCols,op,numRows);} else if (udf instanceof GenericUDFInBloomFilter) {  if (genFunc.getChildren().get(1) instanceof ExprNodeDynamicValueDesc) {    return numRows;  }} @AT@ 46534 @LENGTH@ 3965
---INS InstanceofExpression@@udf instanceof GenericUDFOPEqual @TO@ IfStatement@@if (udf instanceof GenericUDFOPEqual || udf instanceof GenericUDFOPEqualNS) {  String colName=null;  boolean isConst=false;  Object prevConst=null;  for (  ExprNodeDesc leaf : genFunc.getChildren()) {    if (leaf instanceof ExprNodeConstantDesc) {      if (isConst) {        if (prevConst != null && !prevConst.equals(((ExprNodeConstantDesc)leaf).getValue())) {          return 0;        }        return numRows;      }      if (colName == null) {        isConst=true;        prevConst=((ExprNodeConstantDesc)leaf).getValue();        continue;      }      if (neededCols != null && !neededCols.contains(colName)) {        return numRows;      }      ColStatistics cs=stats.getColumnStatisticsFromColName(colName);      if (cs != null) {        long dvs=cs.getCountDistint();        numRows=dvs == 0 ? numRows / 2 : Math.round((double)numRows / dvs);        return numRows;      }    } else     if (leaf instanceof ExprNodeColumnDesc) {      ExprNodeColumnDesc colDesc=(ExprNodeColumnDesc)leaf;      aspCtx.addAffectedColumn(colDesc);      colName=colDesc.getColumn();      if (isConst) {        if (neededCols != null && neededCols.indexOf(colName) == -1) {          return numRows;        }        ColStatistics cs=stats.getColumnStatisticsFromColName(colName);        if (cs != null) {          long dvs=cs.getCountDistint();          numRows=dvs == 0 ? numRows / 2 : Math.round((double)numRows / dvs);          return numRows;        }      }    }  }} else if (udf instanceof GenericUDFOPNotEqual) {  return numRows;} else if (udf instanceof GenericUDFOPEqualOrGreaterThan || udf instanceof GenericUDFOPEqualOrLessThan || udf instanceof GenericUDFOPGreaterThan|| udf instanceof GenericUDFOPLessThan) {  return evaluateComparator(stats,aspCtx,genFunc,numRows);} else if (udf instanceof GenericUDFOPNotNull) {  return evaluateNotNullExpr(stats,aspCtx,genFunc,numRows);} else if (udf instanceof GenericUDFOPNull) {  return evaluateColEqualsNullExpr(stats,aspCtx,genFunc,numRows);} else if (udf instanceof GenericUDFOPAnd || udf instanceof GenericUDFOPOr || udf instanceof GenericUDFIn|| udf instanceof GenericUDFBetween|| udf instanceof GenericUDFOPNot) {  return evaluateExpression(stats,genFunc,aspCtx,neededCols,op,numRows);} else if (udf instanceof GenericUDFInBloomFilter) {  if (genFunc.getChildren().get(1) instanceof ExprNodeDynamicValueDesc) {    return numRows;  }} @AT@ 46417 @LENGTH@ 32
------MOV SimpleName@@udf @TO@ InstanceofExpression@@udf instanceof GenericUDFOPEqual @AT@ 46538 @LENGTH@ 3
------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@udf instanceof GenericUDFOPEqual @AT@ 46542 @LENGTH@ 10
------MOV SimpleType@@GenericUDFOPEqual @TO@ InstanceofExpression@@udf instanceof GenericUDFOPEqual @AT@ 46553 @LENGTH@ 17
---DEL InfixExpression@@udf instanceof GenericUDFOPEqual || udf instanceof GenericUDFOPEqualNS @AT@ 46538 @LENGTH@ 82
------DEL InstanceofExpression@@udf instanceof GenericUDFOPEqual @AT@ 46538 @LENGTH@ 32
------DEL Operator@@|| @AT@ 46570 @LENGTH@ 2
------DEL InstanceofExpression@@udf instanceof GenericUDFOPEqualNS @AT@ 46586 @LENGTH@ 34
---------DEL SimpleName@@udf @AT@ 46586 @LENGTH@ 3
---------DEL Instanceof@@instanceof @AT@ 46590 @LENGTH@ 10
---------DEL SimpleType@@GenericUDFOPEqualNS @AT@ 46601 @LENGTH@ 19


INS MethodDeclaration@@public, void, MethodName:setWebClientNullThenIllegalArgumentException,  @TO@ TypeDeclaration@@[public]WebClientReactiveAuthorizationCodeTokenResponseClientTests,  @AT@ 11246 @LENGTH@ 104
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setWebClientNullThenIllegalArgumentException,  @AT@ 11246 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setWebClientNullThenIllegalArgumentException,  @AT@ 11253 @LENGTH@ 4
---INS SimpleName@@MethodName:setWebClientNullThenIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setWebClientNullThenIllegalArgumentException,  @AT@ 11258 @LENGTH@ 44
---INS ExpressionStatement@@MethodInvocation:tokenResponseClient.setWebClient(null) @TO@ MethodDeclaration@@public, void, MethodName:setWebClientNullThenIllegalArgumentException,  @AT@ 11308 @LENGTH@ 39
------INS MethodInvocation@@tokenResponseClient.setWebClient(null) @TO@ ExpressionStatement@@MethodInvocation:tokenResponseClient.setWebClient(null) @AT@ 11308 @LENGTH@ 38
---------INS SimpleName@@Name:tokenResponseClient @TO@ MethodInvocation@@tokenResponseClient.setWebClient(null) @AT@ 11308 @LENGTH@ 19
---------INS SimpleName@@MethodName:setWebClient:[null] @TO@ MethodInvocation@@tokenResponseClient.setWebClient(null) @AT@ 11328 @LENGTH@ 18
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setWebClient:[null] @AT@ 11341 @LENGTH@ 4


INS FieldDeclaration@@private, static, final, String, [REFERRER_POLICY_HEADER="Referrer-Policy"] @TO@ TypeDeclaration@@[public]ReferrerPolicyHeaderWriterTests,  @AT@ 1312 @LENGTH@ 71
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [REFERRER_POLICY_HEADER="Referrer-Policy"] @AT@ 1312 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [REFERRER_POLICY_HEADER="Referrer-Policy"] @AT@ 1320 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [REFERRER_POLICY_HEADER="Referrer-Policy"] @AT@ 1327 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [REFERRER_POLICY_HEADER="Referrer-Policy"] @AT@ 1333 @LENGTH@ 6
---INS VariableDeclarationFragment@@REFERRER_POLICY_HEADER="Referrer-Policy" @TO@ FieldDeclaration@@private, static, final, String, [REFERRER_POLICY_HEADER="Referrer-Policy"] @AT@ 1340 @LENGTH@ 42
------INS SimpleName@@REFERRER_POLICY_HEADER @TO@ VariableDeclarationFragment@@REFERRER_POLICY_HEADER="Referrer-Policy" @AT@ 1340 @LENGTH@ 22
------INS StringLiteral@@"Referrer-Policy" @TO@ VariableDeclarationFragment@@REFERRER_POLICY_HEADER="Referrer-Policy" @AT@ 1365 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:approveAccessTokenGrant("http://anywhere",true) @TO@ MethodInvocation:approveAccessTokenGrant("http://anywhere?key=value",true) @AT@ 1337 @LENGTH@ 49
---UPD MethodInvocation@@approveAccessTokenGrant("http://anywhere",true) @TO@ approveAccessTokenGrant("http://anywhere?key=value",true) @AT@ 1337 @LENGTH@ 48
------UPD SimpleName@@MethodName:approveAccessTokenGrant:["http://anywhere", true] @TO@ MethodName:approveAccessTokenGrant:["http://anywhere?key=value", true] @AT@ 1337 @LENGTH@ 48
---------UPD StringLiteral@@"http://anywhere" @TO@ "http://anywhere?key=value" @AT@ 1361 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueThenReturnAuthentication, Exception,  @TO@ public, void, MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueBooleanThenReturnAuthentication, Exception,  @AT@ 2056 @LENGTH@ 778
---UPD SimpleName@@MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueThenReturnAuthentication @TO@ MethodName:loadAuthenticationWhenIntrospectionResponseContainsActiveTrueBooleanThenReturnAuthentication @AT@ 2068 @LENGTH@ 85


UPD TypeDeclaration@@[@Dataformat("pgp"), public]PGPKeyAccessDataFormat, ServiceSupport[DataFormat, DataFormatName] @TO@ [public]PGPKeyAccessDataFormat, ServiceSupport[DataFormat, DataFormatName] @AT@ 3770 @LENGTH@ 31117
---DEL SingleMemberAnnotation@@@Dataformat("pgp") @AT@ 3770 @LENGTH@ 18


UPD VariableDeclarationStatement@@int bufferUse=4 + message.getBody().length; @TO@ int bufferUse=Integer.BYTES + message.getBody().length; @AT@ 2489 @LENGTH@ 45
---UPD VariableDeclarationFragment@@bufferUse=4 + message.getBody().length @TO@ bufferUse=Integer.BYTES + message.getBody().length @AT@ 2493 @LENGTH@ 40
------UPD InfixExpression@@4 + message.getBody().length @TO@ Integer.BYTES + message.getBody().length @AT@ 2505 @LENGTH@ 28
---------INS QualifiedName@@Integer.BYTES @TO@ InfixExpression@@4 + message.getBody().length @AT@ 2505 @LENGTH@ 13
------------INS SimpleName@@Integer @TO@ QualifiedName@@Integer.BYTES @AT@ 2505 @LENGTH@ 7
------------INS SimpleName@@BYTES @TO@ QualifiedName@@Integer.BYTES @AT@ 2513 @LENGTH@ 5
---------DEL NumberLiteral@@4 @AT@ 2505 @LENGTH@ 1


INS TryStatement@@try {  this.fs.close();} catch (IOException e) {  throw new StreamingIOFailure("Error while closing FileSystem",e);} @TO@ MethodDeclaration@@public, void, MethodName:close, StreamingIOFailure,  @AT@ 17218 @LENGTH@ 137
---INS ExpressionStatement@@MethodInvocation:this.fs.close() @TO@ TryStatement@@try {  this.fs.close();} catch (IOException e) {  throw new StreamingIOFailure("Error while closing FileSystem",e);} @AT@ 17230 @LENGTH@ 16
------INS MethodInvocation@@this.fs.close() @TO@ ExpressionStatement@@MethodInvocation:this.fs.close() @AT@ 17230 @LENGTH@ 15
---------INS FieldAccess@@this.fs @TO@ MethodInvocation@@this.fs.close() @AT@ 17230 @LENGTH@ 7
------------INS ThisExpression@@this @TO@ FieldAccess@@this.fs @AT@ 17230 @LENGTH@ 4
------------INS SimpleName@@fs @TO@ FieldAccess@@this.fs @AT@ 17235 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@this.fs.close() @AT@ 17238 @LENGTH@ 7
---INS CatchClause@@catch (IOException e) {  throw new StreamingIOFailure("Error while closing FileSystem",e);} @TO@ TryStatement@@try {  this.fs.close();} catch (IOException e) {  throw new StreamingIOFailure("Error while closing FileSystem",e);} @AT@ 17253 @LENGTH@ 102
------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  throw new StreamingIOFailure("Error while closing FileSystem",e);} @AT@ 17260 @LENGTH@ 13
---------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 17260 @LENGTH@ 11
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 17272 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new StreamingIOFailure("Error while closing FileSystem",e) @TO@ CatchClause@@catch (IOException e) {  throw new StreamingIOFailure("Error while closing FileSystem",e);} @AT@ 17283 @LENGTH@ 66
---------INS ClassInstanceCreation@@StreamingIOFailure["Error while closing FileSystem", e] @TO@ ThrowStatement@@ClassInstanceCreation:new StreamingIOFailure("Error while closing FileSystem",e) @AT@ 17289 @LENGTH@ 59
------------INS New@@new @TO@ ClassInstanceCreation@@StreamingIOFailure["Error while closing FileSystem", e] @AT@ 17289 @LENGTH@ 3
------------INS SimpleType@@StreamingIOFailure @TO@ ClassInstanceCreation@@StreamingIOFailure["Error while closing FileSystem", e] @AT@ 17293 @LENGTH@ 18
------------INS StringLiteral@@"Error while closing FileSystem" @TO@ ClassInstanceCreation@@StreamingIOFailure["Error while closing FileSystem", e] @AT@ 17312 @LENGTH@ 32
------------INS SimpleName@@e @TO@ ClassInstanceCreation@@StreamingIOFailure["Error while closing FileSystem", e] @AT@ 17346 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @TO@ TypeDeclaration@@[public]XFrameOptionsHeaderWriterTests,  @AT@ 1700 @LENGTH@ 468
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 1700 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 1707 @LENGTH@ 4
---INS SimpleName@@MethodName:writeHeaderOnlyIfNotPresent @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 1712 @LENGTH@ 27
---INS VariableDeclarationStatement@@WhiteListedAllowFromStrategy whitelist=new WhiteListedAllowFromStrategy(Collections.singletonList("example.com")); @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 1745 @LENGTH@ 116
------INS SimpleType@@WhiteListedAllowFromStrategy @TO@ VariableDeclarationStatement@@WhiteListedAllowFromStrategy whitelist=new WhiteListedAllowFromStrategy(Collections.singletonList("example.com")); @AT@ 1745 @LENGTH@ 28
------INS VariableDeclarationFragment@@whitelist=new WhiteListedAllowFromStrategy(Collections.singletonList("example.com")) @TO@ VariableDeclarationStatement@@WhiteListedAllowFromStrategy whitelist=new WhiteListedAllowFromStrategy(Collections.singletonList("example.com")); @AT@ 1774 @LENGTH@ 86
---------INS SimpleName@@whitelist @TO@ VariableDeclarationFragment@@whitelist=new WhiteListedAllowFromStrategy(Collections.singletonList("example.com")) @AT@ 1774 @LENGTH@ 9
---------INS ClassInstanceCreation@@WhiteListedAllowFromStrategy[Collections.singletonList("example.com")] @TO@ VariableDeclarationFragment@@whitelist=new WhiteListedAllowFromStrategy(Collections.singletonList("example.com")) @AT@ 1786 @LENGTH@ 74
------------INS New@@new @TO@ ClassInstanceCreation@@WhiteListedAllowFromStrategy[Collections.singletonList("example.com")] @AT@ 1786 @LENGTH@ 3
------------INS SimpleType@@WhiteListedAllowFromStrategy @TO@ ClassInstanceCreation@@WhiteListedAllowFromStrategy[Collections.singletonList("example.com")] @AT@ 1790 @LENGTH@ 28
------------INS MethodInvocation@@Collections.singletonList("example.com") @TO@ ClassInstanceCreation@@WhiteListedAllowFromStrategy[Collections.singletonList("example.com")] @AT@ 1819 @LENGTH@ 40
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonList("example.com") @AT@ 1819 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonList:["example.com"] @TO@ MethodInvocation@@Collections.singletonList("example.com") @AT@ 1831 @LENGTH@ 28
------------------INS StringLiteral@@"example.com" @TO@ SimpleName@@MethodName:singletonList:["example.com"] @AT@ 1845 @LENGTH@ 13
---INS VariableDeclarationStatement@@XFrameOptionsHeaderWriter writer=new XFrameOptionsHeaderWriter(whitelist); @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 1864 @LENGTH@ 76
------INS SimpleType@@XFrameOptionsHeaderWriter @TO@ VariableDeclarationStatement@@XFrameOptionsHeaderWriter writer=new XFrameOptionsHeaderWriter(whitelist); @AT@ 1864 @LENGTH@ 25
------INS VariableDeclarationFragment@@writer=new XFrameOptionsHeaderWriter(whitelist) @TO@ VariableDeclarationStatement@@XFrameOptionsHeaderWriter writer=new XFrameOptionsHeaderWriter(whitelist); @AT@ 1890 @LENGTH@ 49
---------INS SimpleName@@writer @TO@ VariableDeclarationFragment@@writer=new XFrameOptionsHeaderWriter(whitelist) @AT@ 1890 @LENGTH@ 6
---------INS ClassInstanceCreation@@XFrameOptionsHeaderWriter[whitelist] @TO@ VariableDeclarationFragment@@writer=new XFrameOptionsHeaderWriter(whitelist) @AT@ 1899 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@XFrameOptionsHeaderWriter[whitelist] @AT@ 1899 @LENGTH@ 3
------------INS SimpleType@@XFrameOptionsHeaderWriter @TO@ ClassInstanceCreation@@XFrameOptionsHeaderWriter[whitelist] @AT@ 1903 @LENGTH@ 25
------------INS SimpleName@@whitelist @TO@ ClassInstanceCreation@@XFrameOptionsHeaderWriter[whitelist] @AT@ 1929 @LENGTH@ 9
---INS VariableDeclarationStatement@@String value=new String("value"); @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 1943 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=new String("value"); @AT@ 1943 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=new String("value") @TO@ VariableDeclarationStatement@@String value=new String("value"); @AT@ 1950 @LENGTH@ 27
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=new String("value") @AT@ 1950 @LENGTH@ 5
---------INS ClassInstanceCreation@@String["value"] @TO@ VariableDeclarationFragment@@value=new String("value") @AT@ 1958 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@String["value"] @AT@ 1958 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String["value"] @AT@ 1962 @LENGTH@ 6
------------INS StringLiteral@@"value" @TO@ ClassInstanceCreation@@String["value"] @AT@ 1969 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:this.response.setHeader(XFRAME_OPTIONS_HEADER,value) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 1981 @LENGTH@ 54
------INS MethodInvocation@@this.response.setHeader(XFRAME_OPTIONS_HEADER,value) @TO@ ExpressionStatement@@MethodInvocation:this.response.setHeader(XFRAME_OPTIONS_HEADER,value) @AT@ 1981 @LENGTH@ 53
---------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.setHeader(XFRAME_OPTIONS_HEADER,value) @AT@ 1981 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 1981 @LENGTH@ 4
------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 1986 @LENGTH@ 8
---------INS SimpleName@@MethodName:setHeader:[XFRAME_OPTIONS_HEADER, value] @TO@ MethodInvocation@@this.response.setHeader(XFRAME_OPTIONS_HEADER,value) @AT@ 1995 @LENGTH@ 39
------------INS SimpleName@@XFRAME_OPTIONS_HEADER @TO@ SimpleName@@MethodName:setHeader:[XFRAME_OPTIONS_HEADER, value] @AT@ 2005 @LENGTH@ 21
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:setHeader:[XFRAME_OPTIONS_HEADER, value] @AT@ 2028 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:writer.writeHeaders(this.request,this.response) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2038 @LENGTH@ 49
------INS MethodInvocation@@writer.writeHeaders(this.request,this.response) @TO@ ExpressionStatement@@MethodInvocation:writer.writeHeaders(this.request,this.response) @AT@ 2038 @LENGTH@ 48
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeHeaders(this.request,this.response) @AT@ 2038 @LENGTH@ 6
---------INS SimpleName@@MethodName:writeHeaders:[this.request, this.response] @TO@ MethodInvocation@@writer.writeHeaders(this.request,this.response) @AT@ 2045 @LENGTH@ 41
------------INS FieldAccess@@this.request @TO@ SimpleName@@MethodName:writeHeaders:[this.request, this.response] @AT@ 2058 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 2058 @LENGTH@ 4
---------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 2063 @LENGTH@ 7
------------INS FieldAccess@@this.response @TO@ SimpleName@@MethodName:writeHeaders:[this.request, this.response] @AT@ 2072 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 2072 @LENGTH@ 4
---------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 2077 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(this.response.getHeader(XFRAME_OPTIONS_HEADER)).isSameAs(value) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaderOnlyIfNotPresent,  @AT@ 2090 @LENGTH@ 75
------INS MethodInvocation@@assertThat(this.response.getHeader(XFRAME_OPTIONS_HEADER)).isSameAs(value) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.response.getHeader(XFRAME_OPTIONS_HEADER)).isSameAs(value) @AT@ 2090 @LENGTH@ 74
---------INS MethodInvocation@@MethodName:assertThat:[this.response.getHeader(XFRAME_OPTIONS_HEADER)] @TO@ MethodInvocation@@assertThat(this.response.getHeader(XFRAME_OPTIONS_HEADER)).isSameAs(value) @AT@ 2090 @LENGTH@ 58
------------INS MethodInvocation@@this.response.getHeader(XFRAME_OPTIONS_HEADER) @TO@ MethodInvocation@@MethodName:assertThat:[this.response.getHeader(XFRAME_OPTIONS_HEADER)] @AT@ 2101 @LENGTH@ 46
---------------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.getHeader(XFRAME_OPTIONS_HEADER) @AT@ 2101 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 2101 @LENGTH@ 4
------------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 2106 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getHeader:[XFRAME_OPTIONS_HEADER] @TO@ MethodInvocation@@this.response.getHeader(XFRAME_OPTIONS_HEADER) @AT@ 2115 @LENGTH@ 32
------------------INS SimpleName@@XFRAME_OPTIONS_HEADER @TO@ SimpleName@@MethodName:getHeader:[XFRAME_OPTIONS_HEADER] @AT@ 2125 @LENGTH@ 21
---------INS SimpleName@@MethodName:isSameAs:[value] @TO@ MethodInvocation@@assertThat(this.response.getHeader(XFRAME_OPTIONS_HEADER)).isSameAs(value) @AT@ 2149 @LENGTH@ 15
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:isSameAs:[value] @AT@ 2158 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:context.startRoute("consumer") @TO@ MethodInvocation:context.start() @AT@ 1428 @LENGTH@ 31
---UPD MethodInvocation@@context.startRoute("consumer") @TO@ context.start() @AT@ 1428 @LENGTH@ 30
------UPD SimpleName@@MethodName:startRoute:["consumer"] @TO@ MethodName:start:[] @AT@ 1436 @LENGTH@ 22
---------DEL StringLiteral@@"consumer" @AT@ 1447 @LENGTH@ 10


INS MethodDeclaration@@public, CompletableFuture<Exchange>, MethodName:processAsync, Exchange exchange,  @TO@ TypeDeclaration@@[private, static, final]PerformanceTestProducer, DefaultProducer[AsyncProcessor] @AT@ 6135 @LENGTH@ 126
---INS Modifier@@public @TO@ MethodDeclaration@@public, CompletableFuture<Exchange>, MethodName:processAsync, Exchange exchange,  @AT@ 6135 @LENGTH@ 6
---INS ParameterizedType@@CompletableFuture<Exchange> @TO@ MethodDeclaration@@public, CompletableFuture<Exchange>, MethodName:processAsync, Exchange exchange,  @AT@ 6142 @LENGTH@ 27
------INS SimpleType@@CompletableFuture @TO@ ParameterizedType@@CompletableFuture<Exchange> @AT@ 6142 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ ParameterizedType@@CompletableFuture<Exchange> @AT@ 6160 @LENGTH@ 8
---INS SimpleName@@MethodName:processAsync @TO@ MethodDeclaration@@public, CompletableFuture<Exchange>, MethodName:processAsync, Exchange exchange,  @AT@ 6170 @LENGTH@ 12
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, CompletableFuture<Exchange>, MethodName:processAsync, Exchange exchange,  @AT@ 6183 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 6183 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 6192 @LENGTH@ 8
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, CompletableFuture<Exchange>, MethodName:processAsync, Exchange exchange,  @AT@ 6245 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 6252 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:LOG.trace("Trying to open resource [{}] as a class path resource using the classloader [{}].",this.getClass().getClassLoader()) @TO@ MethodInvocation:LOG.trace("Trying to open resource [{}] as a class path resource using the classloader [{}].",resource,this.getClass().getClassLoader()) @AT@ 6733 @LENGTH@ 151
---UPD MethodInvocation@@LOG.trace("Trying to open resource [{}] as a class path resource using the classloader [{}].",this.getClass().getClassLoader()) @TO@ LOG.trace("Trying to open resource [{}] as a class path resource using the classloader [{}].",resource,this.getClass().getClassLoader()) @AT@ 6733 @LENGTH@ 150
------UPD SimpleName@@MethodName:trace:["Trying to open resource [{}] as a class path resource using the classloader [{}].", this.getClass().getClassLoader()] @TO@ MethodName:trace:["Trying to open resource [{}] as a class path resource using the classloader [{}].", resource, this.getClass().getClassLoader()] @AT@ 6737 @LENGTH@ 146
---------INS SimpleName@@resource @TO@ SimpleName@@MethodName:trace:["Trying to open resource [{}] as a class path resource using the classloader [{}].", this.getClass().getClassLoader()] @AT@ 6850 @LENGTH@ 8


MOV FieldDeclaration@@AmazonS3ClientMock, [client=new AmazonS3ClientMock()] @TO@ TypeDeclaration@@[public]S3ComponentNonExistingBucketTest, CamelTestSupport @AT@ 1771 @LENGTH@ 53


UPD ExpressionStatement@@MethodInvocation:reg.put("localhost:" + port,env) @TO@ MethodInvocation:reg.bind("localhost:" + port,env) @AT@ 2884 @LENGTH@ 34
---UPD MethodInvocation@@reg.put("localhost:" + port,env) @TO@ reg.bind("localhost:" + port,env) @AT@ 2884 @LENGTH@ 33
------UPD SimpleName@@MethodName:put:["localhost:" + port, env] @TO@ MethodName:bind:["localhost:" + port, env] @AT@ 2888 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:assertTrue("Exchange should be transacted",exchange.isTransacted()) @TO@ MethodInvocation:assertFalse("Exchange should NO longer be transacted",exchange.isTransacted()) @AT@ 3511 @LENGTH@ 69
---UPD MethodInvocation@@assertTrue("Exchange should be transacted",exchange.isTransacted()) @TO@ assertFalse("Exchange should NO longer be transacted",exchange.isTransacted()) @AT@ 3511 @LENGTH@ 68
------UPD SimpleName@@MethodName:assertTrue:["Exchange should be transacted", exchange.isTransacted()] @TO@ MethodName:assertFalse:["Exchange should NO longer be transacted", exchange.isTransacted()] @AT@ 3511 @LENGTH@ 68
---------UPD StringLiteral@@"Exchange should be transacted" @TO@ "Exchange should NO longer be transacted" @AT@ 3522 @LENGTH@ 31


UPD TryStatement@@try {  return this.retryTemplate.execute((RetryCallback<T,Exception>)context -> doExecute(action,connectionFactory),(RecoveryCallback<T>)this.recoveryCallback);} catch (Exception e) {  if (e instanceof RuntimeException) {    throw (RuntimeException)e;  }  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @TO@ try {  return this.retryTemplate.execute((RetryCallback<T,Exception>)context -> doExecute(action,connectionFactory),(RecoveryCallback<T>)this.recoveryCallback);} catch (RuntimeException e) {  throw e;}catch (Exception e) {  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 72235 @LENGTH@ 365
---DEL CatchClause@@catch (Exception e) {  if (e instanceof RuntimeException) {    throw (RuntimeException)e;  }  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 72425 @LENGTH@ 175
------DEL IfStatement@@if (e instanceof RuntimeException) {  throw (RuntimeException)e;} @AT@ 72451 @LENGTH@ 75
---------DEL InstanceofExpression@@e instanceof RuntimeException @AT@ 72455 @LENGTH@ 29
------------DEL SimpleName@@e @AT@ 72455 @LENGTH@ 1
------------DEL Instanceof@@instanceof @AT@ 72457 @LENGTH@ 10
------------DEL SimpleType@@RuntimeException @AT@ 72468 @LENGTH@ 16
---------DEL Block@@ThenBody:{  throw (RuntimeException)e;} @AT@ 72486 @LENGTH@ 40
------------DEL ThrowStatement@@CastExpression:(RuntimeException)e @AT@ 72493 @LENGTH@ 27
---------------DEL CastExpression@@(RuntimeException)e @AT@ 72499 @LENGTH@ 20
------------------DEL SimpleType@@RuntimeException @AT@ 72500 @LENGTH@ 16
------------------DEL SimpleName@@e @AT@ 72518 @LENGTH@ 1
---INS CatchClause@@catch (RuntimeException e) {  throw e;} @TO@ TryStatement@@try {  return this.retryTemplate.execute((RetryCallback<T,Exception>)context -> doExecute(action,connectionFactory),(RecoveryCallback<T>)this.recoveryCallback);} catch (Exception e) {  if (e instanceof RuntimeException) {    throw (RuntimeException)e;  }  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 72425 @LENGTH@ 102
------MOV SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (RuntimeException e) {  throw e;} @AT@ 72432 @LENGTH@ 11
------INS ThrowStatement@@SimpleName:e @TO@ CatchClause@@catch (RuntimeException e) {  throw e;} @AT@ 72514 @LENGTH@ 8
---------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 72520 @LENGTH@ 1
---INS CatchClause@@catch (Exception e) {  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @TO@ TryStatement@@try {  return this.retryTemplate.execute((RetryCallback<T,Exception>)context -> doExecute(action,connectionFactory),(RecoveryCallback<T>)this.recoveryCallback);} catch (Exception e) {  if (e instanceof RuntimeException) {    throw (RuntimeException)e;  }  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 72531 @LENGTH@ 95
------MOV ThrowStatement@@MethodInvocation:RabbitExceptionTranslator.convertRabbitAccessException(e) @TO@ CatchClause@@catch (Exception e) {  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 72531 @LENGTH@ 64
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw RabbitExceptionTranslator.convertRabbitAccessException(e);} @AT@ 72538 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 72538 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 72548 @LENGTH@ 1


INS FieldDeclaration@@private, static, final, Pattern, [SYNTAX_DASH_PATTERN=Pattern.compile("([\\w.-]+)")] @TO@ TypeDeclaration@@[public, abstract]AbstractCamelCatalog,  @AT@ 3848 @LENGTH@ 81
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Pattern, [SYNTAX_DASH_PATTERN=Pattern.compile("([\\w.-]+)")] @AT@ 3848 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Pattern, [SYNTAX_DASH_PATTERN=Pattern.compile("([\\w.-]+)")] @AT@ 3856 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Pattern, [SYNTAX_DASH_PATTERN=Pattern.compile("([\\w.-]+)")] @AT@ 3863 @LENGTH@ 5
---INS SimpleType@@Pattern @TO@ FieldDeclaration@@private, static, final, Pattern, [SYNTAX_DASH_PATTERN=Pattern.compile("([\\w.-]+)")] @AT@ 3869 @LENGTH@ 7
---INS VariableDeclarationFragment@@SYNTAX_DASH_PATTERN=Pattern.compile("([\\w.-]+)") @TO@ FieldDeclaration@@private, static, final, Pattern, [SYNTAX_DASH_PATTERN=Pattern.compile("([\\w.-]+)")] @AT@ 3877 @LENGTH@ 51
------INS SimpleName@@SYNTAX_DASH_PATTERN @TO@ VariableDeclarationFragment@@SYNTAX_DASH_PATTERN=Pattern.compile("([\\w.-]+)") @AT@ 3877 @LENGTH@ 19
------INS MethodInvocation@@Pattern.compile("([\\w.-]+)") @TO@ VariableDeclarationFragment@@SYNTAX_DASH_PATTERN=Pattern.compile("([\\w.-]+)") @AT@ 3899 @LENGTH@ 29
---------INS SimpleName@@Name:Pattern @TO@ MethodInvocation@@Pattern.compile("([\\w.-]+)") @AT@ 3899 @LENGTH@ 7
---------INS SimpleName@@MethodName:compile:["([\\w.-]+)"] @TO@ MethodInvocation@@Pattern.compile("([\\w.-]+)") @AT@ 3907 @LENGTH@ 21
------------INS StringLiteral@@"([\\w.-]+)" @TO@ SimpleName@@MethodName:compile:["([\\w.-]+)"] @AT@ 3915 @LENGTH@ 12


INS TryStatement@@try {  assertNull(this.template.receiveAndConvert(ROUTE,10));} catch (ConsumeOkNotReceivedException e) {} @TO@ MethodDeclaration@@public, void, MethodName:testReceiveTimeoutRequeue,  @AT@ 15340 @LENGTH@ 149
---INS ExpressionStatement@@MethodInvocation:assertNull(this.template.receiveAndConvert(ROUTE,10)) @TO@ TryStatement@@try {  assertNull(this.template.receiveAndConvert(ROUTE,10));} catch (ConsumeOkNotReceivedException e) {} @AT@ 15349 @LENGTH@ 55
------MOV MethodInvocation@@assertNull(this.template.receiveAndConvert(ROUTE,1)) @TO@ ExpressionStatement@@MethodInvocation:assertNull(this.template.receiveAndConvert(ROUTE,10)) @AT@ 15340 @LENGTH@ 53
---------UPD SimpleName@@MethodName:assertNull:[this.template.receiveAndConvert(ROUTE,1)] @TO@ MethodName:assertNull:[this.template.receiveAndConvert(ROUTE,10)] @AT@ 15340 @LENGTH@ 53
------------UPD MethodInvocation@@this.template.receiveAndConvert(ROUTE,1) @TO@ this.template.receiveAndConvert(ROUTE,10) @AT@ 15351 @LENGTH@ 41
---------------UPD SimpleName@@MethodName:receiveAndConvert:[ROUTE, 1] @TO@ MethodName:receiveAndConvert:[ROUTE, 10] @AT@ 15365 @LENGTH@ 27
------------------UPD NumberLiteral@@1 @TO@ 10 @AT@ 15390 @LENGTH@ 1
---INS CatchClause@@catch (ConsumeOkNotReceivedException e) {} @TO@ TryStatement@@try {  assertNull(this.template.receiveAndConvert(ROUTE,10));} catch (ConsumeOkNotReceivedException e) {} @AT@ 15411 @LENGTH@ 78
------INS SingleVariableDeclaration@@ConsumeOkNotReceivedException e @TO@ CatchClause@@catch (ConsumeOkNotReceivedException e) {} @AT@ 15418 @LENGTH@ 31
---------INS SimpleType@@ConsumeOkNotReceivedException @TO@ SingleVariableDeclaration@@ConsumeOkNotReceivedException e @AT@ 15418 @LENGTH@ 29
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@ConsumeOkNotReceivedException e @AT@ 15448 @LENGTH@ 1

MOV ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testScanRefreshedFile, Exception,  @AT@ 2556 @LENGTH@ 31


UPD Block@@WhileBody:{  tableName=rs.getString("TABLE_NAME");  catalogName=rs.getString("TABLE_CAT");  String schemaName=rs.getString("TABLE_SCHEM");  schema=new Schema(!StringUtils.hasText(schemaName) && StringUtils.hasText(catalogName) ? catalogName : schemaName);  if (ignoreTables()) {    continue;  }  if (!hasExcludedTable(tableName)) {    Table table=new Table();    table.setName(tableName);    table.setCatalog(catalogName);    table.setSchema(schema);    table.setDescription(rs.getString("REMARKS"));    table.addColumns(readColumns());    table.addForeignKeys(readImportedKeys());    table.addExportedKeys(readExportedKeys());    table.addIndices(readIndices());    for (    String columnName : readPrimaryKeyNames()) {      Column column=table.findColumn(columnName);      if (column != null) {        column.setPrimaryKey(true);      }    }    tables.add(table);  }} @TO@ WhileBody:{  tableName=rs.getString("TABLE_NAME");  catalogName=rs.getString("TABLE_CAT");  schema=new Schema(rs.getString("TABLE_SCHEM"));  if (ignoreTables()) {    continue;  }  if (!hasExcludedTable(tableName)) {    Table table=new Table();    table.setName(tableName);    table.setCatalog(catalogName);    table.setSchema(schema);    table.setDescription(rs.getString("REMARKS"));    table.addColumns(readColumns());    table.addForeignKeys(readImportedKeys());    table.addExportedKeys(readExportedKeys());    table.addIndices(readIndices());    for (    String columnName : readPrimaryKeyNames()) {      Column column=table.findColumn(columnName);      if (column != null) {        column.setPrimaryKey(true);      }    }    tables.add(table);  }} @AT@ 3848 @LENGTH@ 1007
---DEL VariableDeclarationStatement@@String schemaName=rs.getString("TABLE_SCHEM"); @AT@ 3943 @LENGTH@ 48
------DEL SimpleType@@String @AT@ 3943 @LENGTH@ 6
------DEL VariableDeclarationFragment@@schemaName=rs.getString("TABLE_SCHEM") @AT@ 3950 @LENGTH@ 40
---------DEL SimpleName@@schemaName @AT@ 3950 @LENGTH@ 10
---UPD ExpressionStatement@@Assignment:schema=new Schema(!StringUtils.hasText(schemaName) && StringUtils.hasText(catalogName) ? catalogName : schemaName) @TO@ Assignment:schema=new Schema(rs.getString("TABLE_SCHEM")) @AT@ 3996 @LENGTH@ 117
------UPD Assignment@@schema=new Schema(!StringUtils.hasText(schemaName) && StringUtils.hasText(catalogName) ? catalogName : schemaName) @TO@ schema=new Schema(rs.getString("TABLE_SCHEM")) @AT@ 3996 @LENGTH@ 116
---------UPD ClassInstanceCreation@@Schema[!StringUtils.hasText(schemaName) && StringUtils.hasText(catalogName) ? catalogName : schemaName] @TO@ Schema[rs.getString("TABLE_SCHEM")] @AT@ 4005 @LENGTH@ 107
------------MOV MethodInvocation@@rs.getString("TABLE_SCHEM") @TO@ ClassInstanceCreation@@Schema[!StringUtils.hasText(schemaName) && StringUtils.hasText(catalogName) ? catalogName : schemaName] @AT@ 3963 @LENGTH@ 27
------------DEL ConditionalExpression@@!StringUtils.hasText(schemaName) && StringUtils.hasText(catalogName) ? catalogName : schemaName @AT@ 4016 @LENGTH@ 95
---------------DEL InfixExpression@@!StringUtils.hasText(schemaName) && StringUtils.hasText(catalogName) @AT@ 4016 @LENGTH@ 68
------------------DEL PrefixExpression@@!StringUtils.hasText(schemaName) @AT@ 4016 @LENGTH@ 32
---------------------DEL Operator@@! @AT@ 4016 @LENGTH@ 1
---------------------DEL MethodInvocation@@StringUtils.hasText(schemaName) @AT@ 4017 @LENGTH@ 31
------------------------DEL SimpleName@@Name:StringUtils @AT@ 4017 @LENGTH@ 11
------------------------DEL SimpleName@@MethodName:hasText:[schemaName] @AT@ 4029 @LENGTH@ 19
---------------------------DEL SimpleName@@schemaName @AT@ 4037 @LENGTH@ 10
------------------DEL Operator@@&& @AT@ 4048 @LENGTH@ 2
------------------DEL MethodInvocation@@StringUtils.hasText(catalogName) @AT@ 4052 @LENGTH@ 32
---------------------DEL SimpleName@@Name:StringUtils @AT@ 4052 @LENGTH@ 11
---------------------DEL SimpleName@@MethodName:hasText:[catalogName] @AT@ 4064 @LENGTH@ 20
------------------------DEL SimpleName@@catalogName @AT@ 4072 @LENGTH@ 11
---------------DEL SimpleName@@catalogName @AT@ 4087 @LENGTH@ 11
---------------DEL SimpleName@@schemaName @AT@ 4101 @LENGTH@ 10


UPD FieldDeclaration@@private, final, ServiceContainer, [container=ServiceContainer.Factory.create()] @TO@ private, final, ServiceContainer, [container] @AT@ 1519 @LENGTH@ 77
---UPD VariableDeclarationFragment@@container=ServiceContainer.Factory.create() @TO@ container @AT@ 1550 @LENGTH@ 45
------DEL MethodInvocation@@ServiceContainer.Factory.create() @AT@ 1562 @LENGTH@ 33
---------DEL QualifiedName@@Name:ServiceContainer.Factory @AT@ 1562 @LENGTH@ 24
---------DEL SimpleName@@MethodName:create:[] @AT@ 1587 @LENGTH@ 8


UPD CatchClause@@catch (Throwable ex) {  rollbackOnExceptionIfNecessary(channel,ex);  throw ex;} @TO@ catch (Throwable ex) {  channel.basicReject(message.getMessageProperties().getDeliveryTag(),true);  rollbackOnExceptionIfNecessary(channel,ex);  throw ex;} @AT@ 7619 @LENGTH@ 87
---INS ExpressionStatement@@MethodInvocation:channel.basicReject(message.getMessageProperties().getDeliveryTag(),true) @TO@ CatchClause@@catch (Throwable ex) {  rollbackOnExceptionIfNecessary(channel,ex);  throw ex;} @AT@ 7754 @LENGTH@ 75
------INS MethodInvocation@@channel.basicReject(message.getMessageProperties().getDeliveryTag(),true) @TO@ ExpressionStatement@@MethodInvocation:channel.basicReject(message.getMessageProperties().getDeliveryTag(),true) @AT@ 7754 @LENGTH@ 74
---------INS SimpleName@@Name:channel @TO@ MethodInvocation@@channel.basicReject(message.getMessageProperties().getDeliveryTag(),true) @AT@ 7754 @LENGTH@ 7
---------INS SimpleName@@MethodName:basicReject:[message.getMessageProperties().getDeliveryTag(), true] @TO@ MethodInvocation@@channel.basicReject(message.getMessageProperties().getDeliveryTag(),true) @AT@ 7762 @LENGTH@ 66
------------INS MethodInvocation@@message.getMessageProperties().getDeliveryTag() @TO@ SimpleName@@MethodName:basicReject:[message.getMessageProperties().getDeliveryTag(), true] @AT@ 7774 @LENGTH@ 47
---------------INS MethodInvocation@@MethodName:getMessageProperties:[] @TO@ MethodInvocation@@message.getMessageProperties().getDeliveryTag() @AT@ 7774 @LENGTH@ 30
---------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getMessageProperties().getDeliveryTag() @AT@ 7774 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getDeliveryTag:[] @TO@ MethodInvocation@@message.getMessageProperties().getDeliveryTag() @AT@ 7805 @LENGTH@ 16
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:basicReject:[message.getMessageProperties().getDeliveryTag(), true] @AT@ 7823 @LENGTH@ 4


UPD TypeDeclaration@@[public]DefaultChannel, ServiceSupport[AsyncProcessor, Channel] @TO@ [public]DefaultChannel, ServiceSupport[Channel] @AT@ 2291 @LENGTH@ 7994
---DEL SimpleType@@AsyncProcessor @AT@ 2353 @LENGTH@ 14


UPD MethodDeclaration@@String, MethodName:fromClass, Class clazz,  @TO@ String, MethodName:fromClass, Class<?> clazz,  @AT@ 927 @LENGTH@ 23
---UPD SingleVariableDeclaration@@Class clazz @TO@ Class<?> clazz @AT@ 937 @LENGTH@ 11
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class clazz @AT@ 937 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 937 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 943 @LENGTH@ 1
------DEL SimpleType@@Class @AT@ 937 @LENGTH@ 5


INS IfStatement@@if (leftValue == null && rightValue == null) {  return true;} else if (leftValue == null || rightValue == null) {  return false;} @TO@ MethodDeclaration@@public, static, boolean, MethodName:typeCoerceEquals, TypeConverter converter, Object leftValue, Object rightValue,  @AT@ 2620 @LENGTH@ 261
---INS InfixExpression@@leftValue == null && rightValue == null @TO@ IfStatement@@if (leftValue == null && rightValue == null) {  return true;} else if (leftValue == null || rightValue == null) {  return false;} @AT@ 2624 @LENGTH@ 39
------INS InfixExpression@@leftValue == null @TO@ InfixExpression@@leftValue == null && rightValue == null @AT@ 2624 @LENGTH@ 17
---------INS SimpleName@@leftValue @TO@ InfixExpression@@leftValue == null @AT@ 2624 @LENGTH@ 9
---------INS Operator@@== @TO@ InfixExpression@@leftValue == null @AT@ 2633 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@leftValue == null @AT@ 2637 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@leftValue == null && rightValue == null @AT@ 2641 @LENGTH@ 2
------INS InfixExpression@@rightValue == null @TO@ InfixExpression@@leftValue == null && rightValue == null @AT@ 2645 @LENGTH@ 18
---------INS SimpleName@@rightValue @TO@ InfixExpression@@rightValue == null @AT@ 2645 @LENGTH@ 10
---------INS Operator@@== @TO@ InfixExpression@@rightValue == null @AT@ 2655 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@rightValue == null @AT@ 2659 @LENGTH@ 4
---INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (leftValue == null && rightValue == null) {  return true;} else if (leftValue == null || rightValue == null) {  return false;} @AT@ 2665 @LENGTH@ 66
------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 2709 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2716 @LENGTH@ 4
---INS Block@@ElseBody:if (leftValue == null || rightValue == null) {  return false;} @TO@ IfStatement@@if (leftValue == null && rightValue == null) {  return true;} else if (leftValue == null || rightValue == null) {  return false;} @AT@ 2737 @LENGTH@ 144
------MOV IfStatement@@if (leftValue == null || rightValue == null) {  return false;} @TO@ Block@@ElseBody:if (leftValue == null || rightValue == null) {  return false;} @AT@ 2771 @LENGTH@ 247


UPD FieldDeclaration@@private, final, ServiceContainer, [container=ServiceContainer.Factory.create()] @TO@ private, final, ServiceContainer, [container] @AT@ 1519 @LENGTH@ 77
---UPD VariableDeclarationFragment@@container=ServiceContainer.Factory.create() @TO@ container @AT@ 1550 @LENGTH@ 45
------DEL MethodInvocation@@ServiceContainer.Factory.create() @AT@ 1562 @LENGTH@ 33
---------DEL QualifiedName@@Name:ServiceContainer.Factory @AT@ 1562 @LENGTH@ 24
---------DEL SimpleName@@MethodName:create:[] @AT@ 1587 @LENGTH@ 8


UPD IfStatement@@if (ClassUtils.isAssignableValue(paramTypes[k],arguments[j]) && candidateArguments[k] == null) {  candidateArguments[k]=arguments[j];  assignedParameterCount++;} @TO@ if (ClassUtils.isAssignableValue(paramTypes[k],arguments[j]) && candidateArguments[k] == null) {  candidateArguments[k]=arguments[j];  assignedParameterCount++;  break;} @AT@ 2065 @LENGTH@ 191
---UPD Block@@ThenBody:{  candidateArguments[k]=arguments[j];  assignedParameterCount++;} @TO@ ThenBody:{  candidateArguments[k]=arguments[j];  assignedParameterCount++;  break;} @AT@ 2169 @LENGTH@ 87
------INS BreakStatement@@ @TO@ Block@@ThenBody:{  candidateArguments[k]=arguments[j];  assignedParameterCount++;} @AT@ 2279 @LENGTH@ 6


UPD ReturnStatement@@InfixExpression:!isJavaVendor("IBM") && !isJavaVendor("HP") @TO@ BooleanLiteral:false @AT@ 2352 @LENGTH@ 51
---DEL InfixExpression@@!isJavaVendor("IBM") && !isJavaVendor("HP") @AT@ 2359 @LENGTH@ 43
------DEL PrefixExpression@@!isJavaVendor("IBM") @AT@ 2359 @LENGTH@ 20
---------DEL Operator@@! @AT@ 2359 @LENGTH@ 1
---------DEL MethodInvocation@@isJavaVendor("IBM") @AT@ 2360 @LENGTH@ 19
------------DEL SimpleName@@MethodName:isJavaVendor:["IBM"] @AT@ 2360 @LENGTH@ 19
---------------DEL StringLiteral@@"IBM" @AT@ 2373 @LENGTH@ 5
------DEL Operator@@&& @AT@ 2379 @LENGTH@ 2
------DEL PrefixExpression@@!isJavaVendor("HP") @AT@ 2383 @LENGTH@ 19
---------DEL Operator@@! @AT@ 2383 @LENGTH@ 1
---------DEL MethodInvocation@@isJavaVendor("HP") @AT@ 2384 @LENGTH@ 18
------------DEL SimpleName@@MethodName:isJavaVendor:["HP"] @AT@ 2384 @LENGTH@ 18
---------------DEL StringLiteral@@"HP" @AT@ 2397 @LENGTH@ 4
---INS BooleanLiteral@@false @TO@ ReturnStatement@@InfixExpression:!isJavaVendor("IBM") && !isJavaVendor("HP") @AT@ 2406 @LENGTH@ 5


UPD FieldDeclaration@@int, [GET_SERVER_MODEL_RESPONSE=0x21] @TO@ int, [GET_SERVER_MODEL_RESPONSE=0x22] @AT@ 1690 @LENGTH@ 37
---UPD VariableDeclarationFragment@@GET_SERVER_MODEL_RESPONSE=0x21 @TO@ GET_SERVER_MODEL_RESPONSE=0x22 @AT@ 1694 @LENGTH@ 32
------UPD NumberLiteral@@0x21 @TO@ 0x22 @AT@ 1722 @LENGTH@ 4


INS FieldDeclaration@@int, [RETURN_SERVER_MODEL=0x21] @TO@ TypeDeclaration@@[public]DomainServerProtocol,  @AT@ 1690 @LENGTH@ 31
---INS PrimitiveType@@int @TO@ FieldDeclaration@@int, [RETURN_SERVER_MODEL=0x21] @AT@ 1690 @LENGTH@ 3
---INS VariableDeclarationFragment@@RETURN_SERVER_MODEL=0x21 @TO@ FieldDeclaration@@int, [RETURN_SERVER_MODEL=0x21] @AT@ 1694 @LENGTH@ 26
------INS SimpleName@@RETURN_SERVER_MODEL @TO@ VariableDeclarationFragment@@RETURN_SERVER_MODEL=0x21 @AT@ 1694 @LENGTH@ 19
------INS NumberLiteral@@0x21 @TO@ VariableDeclarationFragment@@RETURN_SERVER_MODEL=0x21 @AT@ 1716 @LENGTH@ 4


UPD IfStatement@@if (queryString == null) {  queryString=parameterName + "=" + parameterValue;} else {  queryString+="&" + parameterName + "="+ parameterValue;} @TO@ if (queryString == null) {  queryString=parameterName + "=" + encode(parameterValue);} else {  queryString+="&" + parameterName + "="+ encode(parameterValue);} @AT@ 962 @LENGTH@ 158
---UPD Block@@ThenBody:{  queryString=parameterName + "=" + parameterValue;} @TO@ ThenBody:{  queryString=parameterName + "=" + encode(parameterValue);} @AT@ 987 @LENGTH@ 60
------UPD ExpressionStatement@@Assignment:queryString=parameterName + "=" + parameterValue @TO@ Assignment:queryString=parameterName + "=" + encode(parameterValue) @AT@ 992 @LENGTH@ 51
---------UPD Assignment@@queryString=parameterName + "=" + parameterValue @TO@ queryString=parameterName + "=" + encode(parameterValue) @AT@ 992 @LENGTH@ 50
------------UPD InfixExpression@@parameterName + "=" + parameterValue @TO@ parameterName + "=" + encode(parameterValue) @AT@ 1006 @LENGTH@ 36
---------------DEL SimpleName@@parameterValue @AT@ 1028 @LENGTH@ 14
---------------INS MethodInvocation@@encode(parameterValue) @TO@ InfixExpression@@parameterName + "=" + parameterValue @AT@ 1100 @LENGTH@ 22
------------------INS SimpleName@@MethodName:encode:[parameterValue] @TO@ MethodInvocation@@encode(parameterValue) @AT@ 1100 @LENGTH@ 22
---------------------INS SimpleName@@parameterValue @TO@ SimpleName@@MethodName:encode:[parameterValue] @AT@ 1107 @LENGTH@ 14
---UPD Block@@ElseBody:{  queryString+="&" + parameterName + "="+ parameterValue;} @TO@ ElseBody:{  queryString+="&" + parameterName + "="+ encode(parameterValue);} @AT@ 1053 @LENGTH@ 67
------UPD ExpressionStatement@@Assignment:queryString+="&" + parameterName + "="+ parameterValue @TO@ Assignment:queryString+="&" + parameterName + "="+ encode(parameterValue) @AT@ 1058 @LENGTH@ 58
---------UPD Assignment@@queryString+="&" + parameterName + "="+ parameterValue @TO@ queryString+="&" + parameterName + "="+ encode(parameterValue) @AT@ 1058 @LENGTH@ 57
------------UPD InfixExpression@@"&" + parameterName + "="+ parameterValue @TO@ "&" + parameterName + "="+ encode(parameterValue) @AT@ 1073 @LENGTH@ 42
---------------DEL SimpleName@@parameterValue @AT@ 1101 @LENGTH@ 14
---------------INS MethodInvocation@@encode(parameterValue) @TO@ InfixExpression@@"&" + parameterName + "="+ parameterValue @AT@ 1181 @LENGTH@ 22
------------------INS SimpleName@@MethodName:encode:[parameterValue] @TO@ MethodInvocation@@encode(parameterValue) @AT@ 1181 @LENGTH@ 22
---------------------INS SimpleName@@parameterValue @TO@ SimpleName@@MethodName:encode:[parameterValue] @AT@ 1188 @LENGTH@ 14


UPD TypeDeclaration@@[public]ReplaceDeploymentPlanBuilder, [DeploymentPlanBuilder] @TO@ [public]ReplaceDeploymentPlanBuilder, [DeploymentSetActionsCompleteBuilder] @AT@ 1258 @LENGTH@ 1348
---UPD SimpleType@@DeploymentPlanBuilder @TO@ DeploymentSetActionsCompleteBuilder @AT@ 1312 @LENGTH@ 21


DEL MethodDeclaration@@protected, boolean, MethodName:useJmx,  @AT@ 1812 @LENGTH@ 55
---DEL Modifier@@protected @AT@ 1812 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1822 @LENGTH@ 7
---DEL SimpleName@@MethodName:useJmx @AT@ 1830 @LENGTH@ 6
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1849 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1856 @LENGTH@ 4


DEL FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(OsgiSpringCamelContext.class)] @AT@ 1327 @LENGTH@ 89
---DEL Modifier@@private @AT@ 1327 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1335 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1342 @LENGTH@ 5
---DEL Modifier@@transient @AT@ 1348 @LENGTH@ 9
---DEL SimpleType@@Log @AT@ 1358 @LENGTH@ 3
---DEL VariableDeclarationFragment@@LOG=LogFactory.getLog(OsgiSpringCamelContext.class) @AT@ 1362 @LENGTH@ 53
------DEL SimpleName@@LOG @AT@ 1362 @LENGTH@ 3
------DEL MethodInvocation@@LogFactory.getLog(OsgiSpringCamelContext.class) @AT@ 1368 @LENGTH@ 47
---------DEL SimpleName@@Name:LogFactory @AT@ 1368 @LENGTH@ 10
---------DEL SimpleName@@MethodName:getLog:[OsgiSpringCamelContext.class] @AT@ 1379 @LENGTH@ 36
------------DEL TypeLiteral@@OsgiSpringCamelContext.class @AT@ 1386 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:continuation.setAttribute(EXCHANGE_ATRRIBUTE_NAME,exchange) @TO@ MethodInvocation:continuation.setAttribute(EXCHANGE_ATTRIBUTE_NAME,exchange) @AT@ 3788 @LENGTH@ 61
---UPD MethodInvocation@@continuation.setAttribute(EXCHANGE_ATRRIBUTE_NAME,exchange) @TO@ continuation.setAttribute(EXCHANGE_ATTRIBUTE_NAME,exchange) @AT@ 3788 @LENGTH@ 60
------UPD SimpleName@@MethodName:setAttribute:[EXCHANGE_ATRRIBUTE_NAME, exchange] @TO@ MethodName:setAttribute:[EXCHANGE_ATTRIBUTE_NAME, exchange] @AT@ 3801 @LENGTH@ 47
---------UPD SimpleName@@EXCHANGE_ATRRIBUTE_NAME @TO@ EXCHANGE_ATTRIBUTE_NAME @AT@ 3814 @LENGTH@ 23


UPD ReturnStatement@@MethodInvocation:filterProcessor.process(exchange,callback) @TO@ MethodInvocation:filterProcessor.processNext(exchange,callback) @AT@ 2514 @LENGTH@ 51
---UPD MethodInvocation@@filterProcessor.process(exchange,callback) @TO@ filterProcessor.processNext(exchange,callback) @AT@ 2521 @LENGTH@ 43
------UPD SimpleName@@MethodName:process:[exchange, callback] @TO@ MethodName:processNext:[exchange, callback] @AT@ 2537 @LENGTH@ 27


DEL MethodDeclaration@@ServerGroupDeploymentPlanBuilder, MethodName:toServerGroup, String serverGroupName,  @AT@ 2251 @LENGTH@ 38
---DEL SimpleType@@ServerGroupDeploymentPlanBuilder @AT@ 2218 @LENGTH@ 32
---DEL SimpleName@@MethodName:toServerGroup @AT@ 2251 @LENGTH@ 13
---DEL SingleVariableDeclaration@@String serverGroupName @AT@ 2265 @LENGTH@ 22
------DEL SimpleType@@String @AT@ 2265 @LENGTH@ 6
------DEL SimpleName@@serverGroupName @AT@ 2272 @LENGTH@ 15


UPD FieldDeclaration@@protected, final, transient, Log, [LOG=LogFactory.getLog(this.getClass())] @TO@ protected, static, final, transient, Log, [LOG=LogFactory.getLog(JpaWithNamedQueryTest.class)] @AT@ 1766 @LENGTH@ 71
---INS Modifier@@static @TO@ FieldDeclaration@@protected, final, transient, Log, [LOG=LogFactory.getLog(this.getClass())] @AT@ 1776 @LENGTH@ 6
---UPD VariableDeclarationFragment@@LOG=LogFactory.getLog(this.getClass()) @TO@ LOG=LogFactory.getLog(JpaWithNamedQueryTest.class) @AT@ 1796 @LENGTH@ 40
------UPD MethodInvocation@@LogFactory.getLog(this.getClass()) @TO@ LogFactory.getLog(JpaWithNamedQueryTest.class) @AT@ 1802 @LENGTH@ 34
---------UPD SimpleName@@MethodName:getLog:[this.getClass()] @TO@ MethodName:getLog:[JpaWithNamedQueryTest.class] @AT@ 1813 @LENGTH@ 23
------------DEL MethodInvocation@@this.getClass() @AT@ 1820 @LENGTH@ 15
---------------DEL ThisExpression@@this @AT@ 1820 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:getClass:[] @AT@ 1825 @LENGTH@ 10
------------INS TypeLiteral@@JpaWithNamedQueryTest.class @TO@ SimpleName@@MethodName:getLog:[this.getClass()] @AT@ 1827 @LENGTH@ 27


UPD VariableDeclarationStatement@@SpringCamelContext context=applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @TO@ SpringCamelContext context=(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @AT@ 1584 @LENGTH@ 116
---UPD VariableDeclarationFragment@@context=applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ context=(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1603 @LENGTH@ 96
------INS CastExpression@@(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ VariableDeclarationFragment@@context=applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1665 @LENGTH@ 107
---------MOV MethodInvocation@@applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ CastExpression@@(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1613 @LENGTH@ 86
---------INS SimpleType@@SpringCamelContext @TO@ CastExpression@@(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1666 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:socketBindings.unregisterSocket(this) @TO@ MethodInvocation:socketBindings.unregisterBinding(this) @AT@ 1756 @LENGTH@ 38
---UPD MethodInvocation@@socketBindings.unregisterSocket(this) @TO@ socketBindings.unregisterBinding(this) @AT@ 1756 @LENGTH@ 37
------UPD SimpleName@@MethodName:unregisterSocket:[this] @TO@ MethodName:unregisterBinding:[this] @AT@ 1771 @LENGTH@ 22


UPD TypeDeclaration@@[public]TestFilterListIterator, TestCase @TO@ [@SuppressWarnings("boxing"), public]TestFilterListIterator, TestCase @AT@ 1155 @LENGTH@ 15328
---INS SingleMemberAnnotation@@@SuppressWarnings("boxing") @TO@ TypeDeclaration@@[public]TestFilterListIterator, TestCase @AT@ 1155 @LENGTH@ 27


UPD Block@@ThenBody:{  GenericFile<T> newName=failureRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @TO@ ThenBody:{  Exchange copy=exchange.copy();  file.bindToExchange(copy);  copy.getIn().setMessageId(exchange.getIn().getMessageId());  copy.setExchangeId(exchange.getExchangeId());  GenericFile<T> newName=failureRenamer.renameFile(copy,file);  renameFile(operations,file,newName);} @AT@ 3595 @LENGTH@ 142
---UPD VariableDeclarationStatement@@GenericFile<T> newName=failureRenamer.renameFile(exchange,file); @TO@ GenericFile<T> newName=failureRenamer.renameFile(copy,file); @AT@ 3609 @LENGTH@ 67
------UPD VariableDeclarationFragment@@newName=failureRenamer.renameFile(exchange,file) @TO@ newName=failureRenamer.renameFile(copy,file) @AT@ 3624 @LENGTH@ 51
---------UPD MethodInvocation@@failureRenamer.renameFile(exchange,file) @TO@ failureRenamer.renameFile(copy,file) @AT@ 3634 @LENGTH@ 41
------------UPD SimpleName@@MethodName:renameFile:[exchange, file] @TO@ MethodName:renameFile:[copy, file] @AT@ 3649 @LENGTH@ 26
---------------UPD SimpleName@@exchange @TO@ copy @AT@ 3660 @LENGTH@ 8
---INS VariableDeclarationStatement@@Exchange copy=exchange.copy(); @TO@ Block@@ThenBody:{  GenericFile<T> newName=failureRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 3724 @LENGTH@ 32
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange copy=exchange.copy(); @AT@ 3724 @LENGTH@ 8
------INS VariableDeclarationFragment@@copy=exchange.copy() @TO@ VariableDeclarationStatement@@Exchange copy=exchange.copy(); @AT@ 3733 @LENGTH@ 22
---------INS SimpleName@@copy @TO@ VariableDeclarationFragment@@copy=exchange.copy() @AT@ 3733 @LENGTH@ 4
---------INS MethodInvocation@@exchange.copy() @TO@ VariableDeclarationFragment@@copy=exchange.copy() @AT@ 3740 @LENGTH@ 15
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.copy() @AT@ 3740 @LENGTH@ 8
------------INS SimpleName@@MethodName:copy:[] @TO@ MethodInvocation@@exchange.copy() @AT@ 3749 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:file.bindToExchange(copy) @TO@ Block@@ThenBody:{  GenericFile<T> newName=failureRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 3769 @LENGTH@ 26
------INS MethodInvocation@@file.bindToExchange(copy) @TO@ ExpressionStatement@@MethodInvocation:file.bindToExchange(copy) @AT@ 3769 @LENGTH@ 25
---------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.bindToExchange(copy) @AT@ 3769 @LENGTH@ 4
---------INS SimpleName@@MethodName:bindToExchange:[copy] @TO@ MethodInvocation@@file.bindToExchange(copy) @AT@ 3774 @LENGTH@ 20
------------INS SimpleName@@copy @TO@ SimpleName@@MethodName:bindToExchange:[copy] @AT@ 3789 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:copy.getIn().setMessageId(exchange.getIn().getMessageId()) @TO@ Block@@ThenBody:{  GenericFile<T> newName=failureRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 3848 @LENGTH@ 59
------INS MethodInvocation@@copy.getIn().setMessageId(exchange.getIn().getMessageId()) @TO@ ExpressionStatement@@MethodInvocation:copy.getIn().setMessageId(exchange.getIn().getMessageId()) @AT@ 3848 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@copy.getIn().setMessageId(exchange.getIn().getMessageId()) @AT@ 3848 @LENGTH@ 12
---------INS SimpleName@@Name:copy @TO@ MethodInvocation@@copy.getIn().setMessageId(exchange.getIn().getMessageId()) @AT@ 3848 @LENGTH@ 4
---------INS SimpleName@@MethodName:setMessageId:[exchange.getIn().getMessageId()] @TO@ MethodInvocation@@copy.getIn().setMessageId(exchange.getIn().getMessageId()) @AT@ 3861 @LENGTH@ 45
------------INS MethodInvocation@@exchange.getIn().getMessageId() @TO@ SimpleName@@MethodName:setMessageId:[exchange.getIn().getMessageId()] @AT@ 3874 @LENGTH@ 31
---------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getMessageId() @AT@ 3874 @LENGTH@ 16
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getMessageId() @AT@ 3874 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getMessageId:[] @TO@ MethodInvocation@@exchange.getIn().getMessageId() @AT@ 3891 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:copy.setExchangeId(exchange.getExchangeId()) @TO@ Block@@ThenBody:{  GenericFile<T> newName=failureRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 3920 @LENGTH@ 45
------INS MethodInvocation@@copy.setExchangeId(exchange.getExchangeId()) @TO@ ExpressionStatement@@MethodInvocation:copy.setExchangeId(exchange.getExchangeId()) @AT@ 3920 @LENGTH@ 44
---------INS SimpleName@@Name:copy @TO@ MethodInvocation@@copy.setExchangeId(exchange.getExchangeId()) @AT@ 3920 @LENGTH@ 4
---------INS SimpleName@@MethodName:setExchangeId:[exchange.getExchangeId()] @TO@ MethodInvocation@@copy.setExchangeId(exchange.getExchangeId()) @AT@ 3925 @LENGTH@ 39
------------INS MethodInvocation@@exchange.getExchangeId() @TO@ SimpleName@@MethodName:setExchangeId:[exchange.getExchangeId()] @AT@ 3939 @LENGTH@ 24
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 3939 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getExchangeId:[] @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 3948 @LENGTH@ 15


UPD VariableDeclarationStatement@@final ServerStartTask startTask=new ServerStartTask("server name",0,null,Collections.<ServiceActivator>emptyList(),updates); @TO@ final ServerStartTask startTask=new ServerStartTask("server name",0,null,Collections.<ServiceActivator>emptyList(),updates,environment); @AT@ 3121 @LENGTH@ 130
---UPD VariableDeclarationFragment@@startTask=new ServerStartTask("server name",0,null,Collections.<ServiceActivator>emptyList(),updates) @TO@ startTask=new ServerStartTask("server name",0,null,Collections.<ServiceActivator>emptyList(),updates,environment) @AT@ 3143 @LENGTH@ 107
------UPD ClassInstanceCreation@@ServerStartTask["server name", 0, null, Collections.<ServiceActivator>emptyList(), updates] @TO@ ServerStartTask["server name", 0, null, Collections.<ServiceActivator>emptyList(), updates, environment] @AT@ 3155 @LENGTH@ 95
---------INS SimpleName@@environment @TO@ ClassInstanceCreation@@ServerStartTask["server name", 0, null, Collections.<ServiceActivator>emptyList(), updates] @AT@ 3251 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:onException(Exception.class).handled(true).useOriginalBody().redeliveryDelay(0).maximumRedeliveries(2).to("mock:error") @TO@ MethodInvocation:onException(Exception.class).handled(true).useOriginalMessage().redeliveryDelay(0).maximumRedeliveries(2).to("mock:error") @AT@ 3786 @LENGTH@ 225
---UPD MethodInvocation@@onException(Exception.class).handled(true).useOriginalBody().redeliveryDelay(0).maximumRedeliveries(2).to("mock:error") @TO@ onException(Exception.class).handled(true).useOriginalMessage().redeliveryDelay(0).maximumRedeliveries(2).to("mock:error") @AT@ 3786 @LENGTH@ 224
------UPD MethodInvocation@@MethodName:useOriginalBody:[] @TO@ MethodName:useOriginalMessage:[] @AT@ 3786 @LENGTH@ 102


UPD MethodDeclaration@@public, void, MethodName:start, StartContext context, StartException,  @TO@ public, synchronized, void, MethodName:start, StartContext context, StartException,  @AT@ 2222 @LENGTH@ 267
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, void, MethodName:start, StartContext context, StartException,  @AT@ 2229 @LENGTH@ 12


INS ExpressionStatement@@Assignment:hash=calculateElementHashOf(interfaces.values(),hash) @TO@ MethodDeclaration@@public, long, MethodName:elementHash,  @AT@ 5612 @LENGTH@ 57
---INS Assignment@@hash=calculateElementHashOf(interfaces.values(),hash) @TO@ ExpressionStatement@@Assignment:hash=calculateElementHashOf(interfaces.values(),hash) @AT@ 5612 @LENGTH@ 56
------INS SimpleName@@hash @TO@ Assignment@@hash=calculateElementHashOf(interfaces.values(),hash) @AT@ 5612 @LENGTH@ 4
------INS Operator@@= @TO@ Assignment@@hash=calculateElementHashOf(interfaces.values(),hash) @AT@ 5616 @LENGTH@ 1
------INS MethodInvocation@@calculateElementHashOf(interfaces.values(),hash) @TO@ Assignment@@hash=calculateElementHashOf(interfaces.values(),hash) @AT@ 5619 @LENGTH@ 49
---------INS SimpleName@@MethodName:calculateElementHashOf:[interfaces.values(), hash] @TO@ MethodInvocation@@calculateElementHashOf(interfaces.values(),hash) @AT@ 5619 @LENGTH@ 49
------------INS MethodInvocation@@interfaces.values() @TO@ SimpleName@@MethodName:calculateElementHashOf:[interfaces.values(), hash] @AT@ 5642 @LENGTH@ 19
---------------INS SimpleName@@Name:interfaces @TO@ MethodInvocation@@interfaces.values() @AT@ 5642 @LENGTH@ 10
---------------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@interfaces.values() @AT@ 5653 @LENGTH@ 8
------------INS SimpleName@@hash @TO@ SimpleName@@MethodName:calculateElementHashOf:[interfaces.values(), hash] @AT@ 5663 @LENGTH@ 4


UPD FieldDeclaration@@Map<java.lang.String,java.lang.Object>, [arguments] @TO@ private, Map<java.lang.String,java.lang.Object>, [arguments] @AT@ 1081 @LENGTH@ 49
---INS Modifier@@private @TO@ FieldDeclaration@@Map<java.lang.String,java.lang.Object>, [arguments] @AT@ 1061 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:prepareShutdown,  @TO@ TypeDeclaration@@[public]JpaConsumer, ScheduledPollConsumer[BatchConsumer, ShutdownAware] @AT@ 6262 @LENGTH@ 53
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 6262 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 6269 @LENGTH@ 4
---INS SimpleName@@MethodName:prepareShutdown @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 6274 @LENGTH@ 15


INS IfStatement@@if (name == null) {  name=getNextName();} @TO@ MethodDeclaration@@public, String, MethodName:getName,  @AT@ 1530 @LENGTH@ 63
---INS InfixExpression@@name == null @TO@ IfStatement@@if (name == null) {  name=getNextName();} @AT@ 1534 @LENGTH@ 12
------INS SimpleName@@name @TO@ InfixExpression@@name == null @AT@ 1534 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@name == null @AT@ 1538 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@name == null @AT@ 1542 @LENGTH@ 4
---INS Block@@ThenBody:{  name=getNextName();} @TO@ IfStatement@@if (name == null) {  name=getNextName();} @AT@ 1548 @LENGTH@ 45
------INS ExpressionStatement@@Assignment:name=getNextName() @TO@ Block@@ThenBody:{  name=getNextName();} @AT@ 1562 @LENGTH@ 21
---------INS Assignment@@name=getNextName() @TO@ ExpressionStatement@@Assignment:name=getNextName() @AT@ 1562 @LENGTH@ 20
------------INS SimpleName@@name @TO@ Assignment@@name=getNextName() @AT@ 1562 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@name=getNextName() @AT@ 1566 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getNextName:[] @TO@ Assignment@@name=getNextName() @AT@ 1569 @LENGTH@ 13


UPD VariableDeclarationStatement@@SpringCamelContext context=ac.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @TO@ SpringCamelContext context=(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @AT@ 1717 @LENGTH@ 100
---UPD VariableDeclarationFragment@@context=ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ context=(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1736 @LENGTH@ 80
------INS CastExpression@@(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ VariableDeclarationFragment@@context=ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1798 @LENGTH@ 91
---------MOV MethodInvocation@@ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ CastExpression@@(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1746 @LENGTH@ 70
---------INS SimpleType@@SpringCamelContext @TO@ CastExpression@@(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1799 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:from("jms:queue:order").to("bean:validateOrder").to("mock:validate").threads(20).unmarshal(mySecureDataFormat).delay(100).to("bean:handleOrder").to("mock:order") @TO@ MethodInvocation:from("jms:queue:order").to("bean:validateOrder").to("mock:validate").threads(20).unmarshal(mySecureDataFormat).delay(500).to("bean:handleOrder").to("mock:order") @AT@ 3719 @LENGTH@ 798
---UPD MethodInvocation@@from("jms:queue:order").to("bean:validateOrder").to("mock:validate").threads(20).unmarshal(mySecureDataFormat).delay(100).to("bean:handleOrder").to("mock:order") @TO@ from("jms:queue:order").to("bean:validateOrder").to("mock:validate").threads(20).unmarshal(mySecureDataFormat).delay(500).to("bean:handleOrder").to("mock:order") @AT@ 3719 @LENGTH@ 797
------UPD MethodInvocation@@MethodName:delay:[100] @TO@ MethodName:delay:[500] @AT@ 3719 @LENGTH@ 757
---------UPD NumberLiteral@@100 @TO@ 500 @AT@ 4472 @LENGTH@ 3


UPD ReturnStatement@@ParenthesizedExpression:(null != obj ? (T)obj.get() : null) @TO@ CastExpression:(T)obj.get() @AT@ 31645 @LENGTH@ 44


UPD ExpressionStatement@@MethodInvocation:assertEquals(config.getURL().toURI().toString(),strategy.getFile().toURI().toString()) @TO@ MethodInvocation:assertEquals(config.getURL().toExternalForm(),strategy.getFile().toURI().toURL().toExternalForm()) @AT@ 4436 @LENGTH@ 88
---UPD MethodInvocation@@assertEquals(config.getURL().toURI().toString(),strategy.getFile().toURI().toString()) @TO@ assertEquals(config.getURL().toExternalForm(),strategy.getFile().toURI().toURL().toExternalForm()) @AT@ 4436 @LENGTH@ 87
------UPD SimpleName@@MethodName:assertEquals:[config.getURL().toURI().toString(), strategy.getFile().toURI().toString()] @TO@ MethodName:assertEquals:[config.getURL().toExternalForm(), strategy.getFile().toURI().toURL().toExternalForm()] @AT@ 4436 @LENGTH@ 87
---------UPD MethodInvocation@@config.getURL().toURI().toString() @TO@ config.getURL().toExternalForm() @AT@ 4449 @LENGTH@ 34
------------DEL MethodInvocation@@MethodName:toURI:[] @AT@ 4449 @LENGTH@ 23
------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:toExternalForm:[] @AT@ 4473 @LENGTH@ 10
---------UPD MethodInvocation@@strategy.getFile().toURI().toString() @TO@ strategy.getFile().toURI().toURL().toExternalForm() @AT@ 4485 @LENGTH@ 37
------------INS MethodInvocation@@MethodName:toURL:[] @TO@ MethodInvocation@@strategy.getFile().toURI().toString() @AT@ 4469 @LENGTH@ 34
------------INS MethodInvocation@@MethodName:toURL:[] @TO@ MethodInvocation@@strategy.getFile().toURI().toString() @AT@ 4469 @LENGTH@ 34
------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:toExternalForm:[] @AT@ 4512 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:args=(Object[])args.clone() @TO@ Assignment:args=args.clone() @AT@ 2867 @LENGTH@ 31
---UPD Assignment@@args=(Object[])args.clone() @TO@ args=args.clone() @AT@ 2867 @LENGTH@ 30
------INS MethodInvocation@@args.clone() @TO@ Assignment@@args=(Object[])args.clone() @AT@ 2864 @LENGTH@ 12
---------MOV SimpleName@@Name:args @TO@ MethodInvocation@@args.clone() @AT@ 2885 @LENGTH@ 4
---------MOV SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@args.clone() @AT@ 2890 @LENGTH@ 7
------DEL CastExpression@@(Object[])args.clone() @AT@ 2874 @LENGTH@ 23
---------DEL ArrayType@@Object[] @AT@ 2875 @LENGTH@ 8
------------DEL SimpleType@@Object @AT@ 2875 @LENGTH@ 6
---------DEL MethodInvocation@@args.clone() @AT@ 2885 @LENGTH@ 12


UPD VariableDeclarationStatement@@final EnumSet<Attribute> required=EnumSet.of(Attribute.NAME); @TO@ final EnumSet<Attribute> required=EnumSet.of(Attribute.CATEGORY); @AT@ 7799 @LENGTH@ 63
---UPD VariableDeclarationFragment@@required=EnumSet.of(Attribute.NAME) @TO@ required=EnumSet.of(Attribute.CATEGORY) @AT@ 7824 @LENGTH@ 37
------UPD MethodInvocation@@EnumSet.of(Attribute.NAME) @TO@ EnumSet.of(Attribute.CATEGORY) @AT@ 7835 @LENGTH@ 26
---------UPD SimpleName@@MethodName:of:[Attribute.NAME] @TO@ MethodName:of:[Attribute.CATEGORY] @AT@ 7843 @LENGTH@ 18
------------UPD QualifiedName@@Attribute.NAME @TO@ Attribute.CATEGORY @AT@ 7846 @LENGTH@ 14
---------------UPD SimpleName@@NAME @TO@ CATEGORY @AT@ 7856 @LENGTH@ 4


UPD Block@@ElseBody:{  paramTypes=(Class[])paramTypes.clone();  args=(Object[])args.clone();  return new InvokerTransformer<I,O>(methodName,paramTypes,args);} @TO@ ElseBody:{  paramTypes=paramTypes.clone();  args=args.clone();  return new InvokerTransformer<I,O>(methodName,paramTypes,args);} @AT@ 3228 @LENGTH@ 189
---UPD ExpressionStatement@@Assignment:paramTypes=(Class[])paramTypes.clone() @TO@ Assignment:paramTypes=paramTypes.clone() @AT@ 3242 @LENGTH@ 42
------UPD Assignment@@paramTypes=(Class[])paramTypes.clone() @TO@ paramTypes=paramTypes.clone() @AT@ 3242 @LENGTH@ 41
---------DEL CastExpression@@(Class[])paramTypes.clone() @AT@ 3255 @LENGTH@ 28
------------DEL ArrayType@@Class[] @AT@ 3256 @LENGTH@ 7
---------------DEL SimpleType@@Class @AT@ 3256 @LENGTH@ 5
------------DEL MethodInvocation@@paramTypes.clone() @AT@ 3265 @LENGTH@ 18
---------INS MethodInvocation@@paramTypes.clone() @TO@ Assignment@@paramTypes=(Class[])paramTypes.clone() @AT@ 3255 @LENGTH@ 18
------------MOV SimpleName@@Name:paramTypes @TO@ MethodInvocation@@paramTypes.clone() @AT@ 3265 @LENGTH@ 10
------------MOV SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@paramTypes.clone() @AT@ 3276 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:args=(Object[])args.clone() @TO@ Assignment:args=args.clone() @AT@ 3297 @LENGTH@ 31
------UPD Assignment@@args=(Object[])args.clone() @TO@ args=args.clone() @AT@ 3297 @LENGTH@ 30
---------INS MethodInvocation@@args.clone() @TO@ Assignment@@args=(Object[])args.clone() @AT@ 3294 @LENGTH@ 12
------------MOV SimpleName@@Name:args @TO@ MethodInvocation@@args.clone() @AT@ 3315 @LENGTH@ 4
------------MOV SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@args.clone() @AT@ 3320 @LENGTH@ 7
---------DEL CastExpression@@(Object[])args.clone() @AT@ 3304 @LENGTH@ 23
------------DEL ArrayType@@Object[] @AT@ 3305 @LENGTH@ 8
---------------DEL SimpleType@@Object @AT@ 3305 @LENGTH@ 6
------------DEL MethodInvocation@@args.clone() @AT@ 3315 @LENGTH@ 12


UPD MethodDeclaration@@public, static, BeanMetadataElement, MethodName:parseListenerElement, Element element, ParserContext parserContext,  @TO@ public, static, BeanMetadataElement, MethodName:parseListenerElement, Element element, ParserContext parserContext, BeanDefinition enclosing,  @AT@ 2052 @LENGTH@ 1000
---INS SingleVariableDeclaration@@BeanDefinition enclosing @TO@ MethodDeclaration@@public, static, BeanMetadataElement, MethodName:parseListenerElement, Element element, ParserContext parserContext,  @AT@ 2249 @LENGTH@ 24
------INS SimpleType@@BeanDefinition @TO@ SingleVariableDeclaration@@BeanDefinition enclosing @AT@ 2249 @LENGTH@ 14
------INS SimpleName@@enclosing @TO@ SingleVariableDeclaration@@BeanDefinition enclosing @AT@ 2264 @LENGTH@ 9
---UPD IfStatement@@if (StringUtils.hasText(listenerRef)) {  return new RuntimeBeanReference(listenerRef);} else if (beanElements.size() == 1) {  Element beanElement=beanElements.get(0);  BeanDefinitionHolder beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement);  parserContext.getDelegate().decorateBeanDefinitionIfRequired(beanElement,beanDefinitionHolder);  return beanDefinitionHolder;} else {  return (BeanMetadataElement)parserContext.getDelegate().parsePropertySubElement(refElements.get(0),null);} @TO@ if (StringUtils.hasText(listenerRef)) {  return new RuntimeBeanReference(listenerRef);} else if (beanElements.size() == 1) {  Element beanElement=beanElements.get(0);  BeanDefinitionHolder beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement,enclosing);  parserContext.getDelegate().decorateBeanDefinitionIfRequired(beanElement,beanDefinitionHolder);  return beanDefinitionHolder;} else {  return (BeanMetadataElement)parserContext.getDelegate().parsePropertySubElement(refElements.get(0),null);} @AT@ 2490 @LENGTH@ 559
------UPD Block@@ElseBody:if (beanElements.size() == 1) {  Element beanElement=beanElements.get(0);  BeanDefinitionHolder beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement);  parserContext.getDelegate().decorateBeanDefinitionIfRequired(beanElement,beanDefinitionHolder);  return beanDefinitionHolder;} else {  return (BeanMetadataElement)parserContext.getDelegate().parsePropertySubElement(refElements.get(0),null);} @TO@ ElseBody:if (beanElements.size() == 1) {  Element beanElement=beanElements.get(0);  BeanDefinitionHolder beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement,enclosing);  parserContext.getDelegate().decorateBeanDefinitionIfRequired(beanElement,beanDefinitionHolder);  return beanDefinitionHolder;} else {  return (BeanMetadataElement)parserContext.getDelegate().parsePropertySubElement(refElements.get(0),null);} @AT@ 2590 @LENGTH@ 459
---------UPD IfStatement@@if (beanElements.size() == 1) {  Element beanElement=beanElements.get(0);  BeanDefinitionHolder beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement);  parserContext.getDelegate().decorateBeanDefinitionIfRequired(beanElement,beanDefinitionHolder);  return beanDefinitionHolder;} else {  return (BeanMetadataElement)parserContext.getDelegate().parsePropertySubElement(refElements.get(0),null);} @TO@ if (beanElements.size() == 1) {  Element beanElement=beanElements.get(0);  BeanDefinitionHolder beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement,enclosing);  parserContext.getDelegate().decorateBeanDefinitionIfRequired(beanElement,beanDefinitionHolder);  return beanDefinitionHolder;} else {  return (BeanMetadataElement)parserContext.getDelegate().parsePropertySubElement(refElements.get(0),null);} @AT@ 2590 @LENGTH@ 459
------------UPD Block@@ThenBody:{  Element beanElement=beanElements.get(0);  BeanDefinitionHolder beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement);  parserContext.getDelegate().decorateBeanDefinitionIfRequired(beanElement,beanDefinitionHolder);  return beanDefinitionHolder;} @TO@ ThenBody:{  Element beanElement=beanElements.get(0);  BeanDefinitionHolder beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement,enclosing);  parserContext.getDelegate().decorateBeanDefinitionIfRequired(beanElement,beanDefinitionHolder);  return beanDefinitionHolder;} @AT@ 2620 @LENGTH@ 305
---------------UPD VariableDeclarationStatement@@BeanDefinitionHolder beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement); @TO@ BeanDefinitionHolder beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement,enclosing); @AT@ 2671 @LENGTH@ 118
------------------UPD VariableDeclarationFragment@@beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement) @TO@ beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement,enclosing) @AT@ 2692 @LENGTH@ 96
---------------------UPD MethodInvocation@@parserContext.getDelegate().parseBeanDefinitionElement(beanElement) @TO@ parserContext.getDelegate().parseBeanDefinitionElement(beanElement,enclosing) @AT@ 2715 @LENGTH@ 73
------------------------UPD SimpleName@@MethodName:parseBeanDefinitionElement:[beanElement] @TO@ MethodName:parseBeanDefinitionElement:[beanElement, enclosing] @AT@ 2743 @LENGTH@ 45
---------------------------INS SimpleName@@enclosing @TO@ SimpleName@@MethodName:parseBeanDefinitionElement:[beanElement] @AT@ 2911 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:from("direct:start").multicast(new AggregationStrategy(){
  public Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
    String body=oldExchange.getIn().getBody(String.class);
    oldExchange.getIn().setBody(body + newExchange.getIn().getBody(String.class));
    return oldExchange;
  }
}
).parallelProcessing().timeout(2000).to("direct:a","direct:b","direct:c").end().to("mock:result") @TO@ MethodInvocation:from("direct:start").multicast(new AggregationStrategy(){
  public Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
    String body=oldExchange.getIn().getBody(String.class);
    oldExchange.getIn().setBody(body + newExchange.getIn().getBody(String.class));
    return oldExchange;
  }
}
).parallelProcessing().timeout(1000).to("direct:a","direct:b","direct:c").end().to("mock:result") @AT@ 2087 @LENGTH@ 870
---UPD MethodInvocation@@from("direct:start").multicast(new AggregationStrategy(){
  public Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
    String body=oldExchange.getIn().getBody(String.class);
    oldExchange.getIn().setBody(body + newExchange.getIn().getBody(String.class));
    return oldExchange;
  }
}
).parallelProcessing().timeout(2000).to("direct:a","direct:b","direct:c").end().to("mock:result") @TO@ from("direct:start").multicast(new AggregationStrategy(){
  public Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
    String body=oldExchange.getIn().getBody(String.class);
    oldExchange.getIn().setBody(body + newExchange.getIn().getBody(String.class));
    return oldExchange;
  }
}
).parallelProcessing().timeout(1000).to("direct:a","direct:b","direct:c").end().to("mock:result") @AT@ 2087 @LENGTH@ 869
------UPD MethodInvocation@@MethodName:timeout:[2000] @TO@ MethodName:timeout:[1000] @AT@ 2087 @LENGTH@ 698
---------UPD NumberLiteral@@2000 @TO@ 1000 @AT@ 2780 @LENGTH@ 4


INS MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @TO@ TypeDeclaration@@[public, final]UnboundedQueueThreadPoolExecutor, AbstractExecutorElement<UnboundedQueueThreadPoolExecutor> @AT@ 6025 @LENGTH@ 107
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 6025 @LENGTH@ 9
---INS SimpleType@@Element @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 6035 @LENGTH@ 7
---INS SimpleName@@MethodName:getStandardElement @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 6043 @LENGTH@ 18
---INS ReturnStatement@@QualifiedName:Element.UNBOUNDED_QUEUE_THREAD_POOL_EXECUTOR @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 6074 @LENGTH@ 52
------INS QualifiedName@@Element.UNBOUNDED_QUEUE_THREAD_POOL_EXECUTOR @TO@ ReturnStatement@@QualifiedName:Element.UNBOUNDED_QUEUE_THREAD_POOL_EXECUTOR @AT@ 6081 @LENGTH@ 44
---------INS SimpleName@@Element @TO@ QualifiedName@@Element.UNBOUNDED_QUEUE_THREAD_POOL_EXECUTOR @AT@ 6081 @LENGTH@ 7
---------INS SimpleName@@UNBOUNDED_QUEUE_THREAD_POOL_EXECUTOR @TO@ QualifiedName@@Element.UNBOUNDED_QUEUE_THREAD_POOL_EXECUTOR @AT@ 6089 @LENGTH@ 36


UPD FieldDeclaration@@private, final, String, [BEAN_NAME_PROP="bean-name"] @TO@ private, static, final, String, [BEAN_NAME_PROP="bean-name"] @AT@ 1536 @LENGTH@ 50
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, String, [BEAN_NAME_PROP="bean-name"] @AT@ 1544 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, long, [PRIORITY=DeploymentPhases.PARSE_DESCRIPTORS.plus(300L)] @TO@ public, static, final, long, [PRIORITY=DeploymentPhases.PARSE_DESCRIPTORS.plus(330L)] @AT@ 1928 @LENGTH@ 82
---UPD VariableDeclarationFragment@@PRIORITY=DeploymentPhases.PARSE_DESCRIPTORS.plus(300L) @TO@ PRIORITY=DeploymentPhases.PARSE_DESCRIPTORS.plus(330L) @AT@ 1953 @LENGTH@ 56
------UPD MethodInvocation@@DeploymentPhases.PARSE_DESCRIPTORS.plus(300L) @TO@ DeploymentPhases.PARSE_DESCRIPTORS.plus(330L) @AT@ 1964 @LENGTH@ 45
---------UPD SimpleName@@MethodName:plus:[300L] @TO@ MethodName:plus:[330L] @AT@ 1999 @LENGTH@ 10
------------UPD NumberLiteral@@300L @TO@ 330L @AT@ 2004 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("FileAlterationObserver[file='\\foo', CanReadFileFilter, listeners=0]",observer.toString()) @TO@ MethodInvocation:assertEquals("FileAlterationObserver[file='" + file.getPath() + "', CanReadFileFilter, listeners=0]",observer.toString()) @AT@ 2957 @LENGTH@ 106
---UPD MethodInvocation@@assertEquals("FileAlterationObserver[file='\\foo', CanReadFileFilter, listeners=0]",observer.toString()) @TO@ assertEquals("FileAlterationObserver[file='" + file.getPath() + "', CanReadFileFilter, listeners=0]",observer.toString()) @AT@ 2957 @LENGTH@ 105
------UPD SimpleName@@MethodName:assertEquals:["FileAlterationObserver[file='\\foo', CanReadFileFilter, listeners=0]", observer.toString()] @TO@ MethodName:assertEquals:["FileAlterationObserver[file='" + file.getPath() + "', CanReadFileFilter, listeners=0]", observer.toString()] @AT@ 2957 @LENGTH@ 105
---------DEL StringLiteral@@"FileAlterationObserver[file='\\foo', CanReadFileFilter, listeners=0]" @AT@ 2970 @LENGTH@ 70
---------INS InfixExpression@@"FileAlterationObserver[file='" + file.getPath() + "', CanReadFileFilter, listeners=0]" @TO@ SimpleName@@MethodName:assertEquals:["FileAlterationObserver[file='\\foo', CanReadFileFilter, listeners=0]", observer.toString()] @AT@ 3004 @LENGTH@ 88
------------INS StringLiteral@@"FileAlterationObserver[file='" @TO@ InfixExpression@@"FileAlterationObserver[file='" + file.getPath() + "', CanReadFileFilter, listeners=0]" @AT@ 3004 @LENGTH@ 31
------------INS Operator@@+ @TO@ InfixExpression@@"FileAlterationObserver[file='" + file.getPath() + "', CanReadFileFilter, listeners=0]" @AT@ 3035 @LENGTH@ 1
------------INS MethodInvocation@@file.getPath() @TO@ InfixExpression@@"FileAlterationObserver[file='" + file.getPath() + "', CanReadFileFilter, listeners=0]" @AT@ 3038 @LENGTH@ 14
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getPath() @AT@ 3038 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@file.getPath() @AT@ 3043 @LENGTH@ 9
------------INS StringLiteral@@"', CanReadFileFilter, listeners=0]" @TO@ InfixExpression@@"FileAlterationObserver[file='" + file.getPath() + "', CanReadFileFilter, listeners=0]" @AT@ 3056 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:from("timer://kickoff?period=10000").process(new Processor(){
  public void process(  Exchange e) throws Exception {
    e.getIn().setHeader("foo","bar");
  }
}
).setBody(constant("select * from customer")).to("jdbc:testdb").to("mock:result") @TO@ MethodInvocation:from("timer://kickoff?period=10000").process(new Processor(){
  public void process(  Exchange e) throws Exception {
    e.getIn().setHeader("foo","bar");
  }
}
).setBody(constant("select name from customer where id = 'cust1'")).to("jdbc:testdb").to("mock:result") @AT@ 2383 @LENGTH@ 446
---UPD MethodInvocation@@from("timer://kickoff?period=10000").process(new Processor(){
  public void process(  Exchange e) throws Exception {
    e.getIn().setHeader("foo","bar");
  }
}
).setBody(constant("select * from customer")).to("jdbc:testdb").to("mock:result") @TO@ from("timer://kickoff?period=10000").process(new Processor(){
  public void process(  Exchange e) throws Exception {
    e.getIn().setHeader("foo","bar");
  }
}
).setBody(constant("select name from customer where id = 'cust1'")).to("jdbc:testdb").to("mock:result") @AT@ 2383 @LENGTH@ 445
------UPD MethodInvocation@@MethodName:setBody:[constant("select * from customer")] @TO@ MethodName:setBody:[constant("select name from customer where id = 'cust1'")] @AT@ 2383 @LENGTH@ 359
---------UPD MethodInvocation@@constant("select * from customer") @TO@ constant("select name from customer where id = 'cust1'") @AT@ 2707 @LENGTH@ 34
------------UPD SimpleName@@MethodName:constant:["select * from customer"] @TO@ MethodName:constant:["select name from customer where id = 'cust1'"] @AT@ 2707 @LENGTH@ 34
---------------UPD StringLiteral@@"select * from customer" @TO@ "select name from customer where id = 'cust1'" @AT@ 2716 @LENGTH@ 24


UPD IfStatement@@if (status == Status.MORE) {  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {  }} @TO@ if (status == Status.MORE) {  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  status=cb.getStatus();  if (cb.getChecksum() != cb.getExpectedChecksum()) {    logger.error("Incorrect checksum from process " + sourceProcess);  } else {    try {      handler.handleMessage(cb.getBytes());    } catch (    Throwable t) {    }  }} @AT@ 5353 @LENGTH@ 796
---INS Block@@ThenBody:{  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  status=cb.getStatus();  if (cb.getChecksum() != cb.getExpectedChecksum()) {    logger.error("Incorrect checksum from process " + sourceProcess);  } else {    try {      handler.handleMessage(cb.getBytes());    } catch (    Throwable t) {    }  }} @TO@ IfStatement@@if (status == Status.MORE) {  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {  }} @AT@ 5380 @LENGTH@ 934
------MOV VariableDeclarationStatement@@StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input); @TO@ Block@@ThenBody:{  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  status=cb.getStatus();  if (cb.getChecksum() != cb.getExpectedChecksum()) {    logger.error("Incorrect checksum from process " + sourceProcess);  } else {    try {      handler.handleMessage(cb.getBytes());    } catch (    Throwable t) {    }  }} @AT@ 5422 @LENGTH@ 66
------INS ExpressionStatement@@Assignment:status=cb.getStatus() @TO@ Block@@ThenBody:{  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  status=cb.getStatus();  if (cb.getChecksum() != cb.getExpectedChecksum()) {    logger.error("Incorrect checksum from process " + sourceProcess);  } else {    try {      handler.handleMessage(cb.getBytes());    } catch (    Throwable t) {    }  }} @AT@ 5529 @LENGTH@ 24
---------INS Assignment@@status=cb.getStatus() @TO@ ExpressionStatement@@Assignment:status=cb.getStatus() @AT@ 5529 @LENGTH@ 23
------------INS SimpleName@@status @TO@ Assignment@@status=cb.getStatus() @AT@ 5529 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@status=cb.getStatus() @AT@ 5535 @LENGTH@ 1
------------INS MethodInvocation@@cb.getStatus() @TO@ Assignment@@status=cb.getStatus() @AT@ 5538 @LENGTH@ 14
---------------INS SimpleName@@Name:cb @TO@ MethodInvocation@@cb.getStatus() @AT@ 5538 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getStatus:[] @TO@ MethodInvocation@@cb.getStatus() @AT@ 5541 @LENGTH@ 11
------INS IfStatement@@if (cb.getChecksum() != cb.getExpectedChecksum()) {  logger.error("Incorrect checksum from process " + sourceProcess);} else {  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {  }} @TO@ Block@@ThenBody:{  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  status=cb.getStatus();  if (cb.getChecksum() != cb.getExpectedChecksum()) {    logger.error("Incorrect checksum from process " + sourceProcess);  } else {    try {      handler.handleMessage(cb.getBytes());    } catch (    Throwable t) {    }  }} @AT@ 5594 @LENGTH@ 682
---------MOV Block@@ThenBody:{  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {  }} @TO@ IfStatement@@if (cb.getChecksum() != cb.getExpectedChecksum()) {  logger.error("Incorrect checksum from process " + sourceProcess);} else {  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {  }} @AT@ 5380 @LENGTH@ 769
---------INS InfixExpression@@cb.getChecksum() != cb.getExpectedChecksum() @TO@ IfStatement@@if (cb.getChecksum() != cb.getExpectedChecksum()) {  logger.error("Incorrect checksum from process " + sourceProcess);} else {  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {  }} @AT@ 5598 @LENGTH@ 44
------------INS MethodInvocation@@cb.getChecksum() @TO@ InfixExpression@@cb.getChecksum() != cb.getExpectedChecksum() @AT@ 5598 @LENGTH@ 16
---------------INS SimpleName@@Name:cb @TO@ MethodInvocation@@cb.getChecksum() @AT@ 5598 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getChecksum:[] @TO@ MethodInvocation@@cb.getChecksum() @AT@ 5601 @LENGTH@ 13
------------INS Operator@@!= @TO@ InfixExpression@@cb.getChecksum() != cb.getExpectedChecksum() @AT@ 5614 @LENGTH@ 2
------------INS MethodInvocation@@cb.getExpectedChecksum() @TO@ InfixExpression@@cb.getChecksum() != cb.getExpectedChecksum() @AT@ 5618 @LENGTH@ 24
---------------INS SimpleName@@Name:cb @TO@ MethodInvocation@@cb.getExpectedChecksum() @AT@ 5618 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getExpectedChecksum:[] @TO@ MethodInvocation@@cb.getExpectedChecksum() @AT@ 5621 @LENGTH@ 21
---------INS Block@@ThenBody:{  logger.error("Incorrect checksum from process " + sourceProcess);} @TO@ IfStatement@@if (cb.getChecksum() != cb.getExpectedChecksum()) {  logger.error("Incorrect checksum from process " + sourceProcess);} else {  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {  }} @AT@ 5644 @LENGTH@ 233
------------INS ExpressionStatement@@MethodInvocation:logger.error("Incorrect checksum from process " + sourceProcess) @TO@ Block@@ThenBody:{  logger.error("Incorrect checksum from process " + sourceProcess);} @AT@ 5690 @LENGTH@ 65
---------------INS MethodInvocation@@logger.error("Incorrect checksum from process " + sourceProcess) @TO@ ExpressionStatement@@MethodInvocation:logger.error("Incorrect checksum from process " + sourceProcess) @AT@ 5690 @LENGTH@ 64
------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.error("Incorrect checksum from process " + sourceProcess) @AT@ 5690 @LENGTH@ 6
------------------INS SimpleName@@MethodName:error:["Incorrect checksum from process " + sourceProcess] @TO@ MethodInvocation@@logger.error("Incorrect checksum from process " + sourceProcess) @AT@ 5697 @LENGTH@ 57
---------------------INS InfixExpression@@"Incorrect checksum from process " + sourceProcess @TO@ SimpleName@@MethodName:error:["Incorrect checksum from process " + sourceProcess] @AT@ 5703 @LENGTH@ 50
------------------------INS StringLiteral@@"Incorrect checksum from process " @TO@ InfixExpression@@"Incorrect checksum from process " + sourceProcess @AT@ 5703 @LENGTH@ 34
------------------------INS Operator@@+ @TO@ InfixExpression@@"Incorrect checksum from process " + sourceProcess @AT@ 5737 @LENGTH@ 1
------------------------INS SimpleName@@sourceProcess @TO@ InfixExpression@@"Incorrect checksum from process " + sourceProcess @AT@ 5740 @LENGTH@ 13
---UPD Block@@ThenBody:{  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {  }} @TO@ ElseBody:{  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {  }} @AT@ 5380 @LENGTH@ 769


UPD ExpressionStatement@@MethodInvocation:logger.debug("Creating jinterface connection with peerNodeName = [" + peerNodeName) @TO@ MethodInvocation:logger.debug("Creating jinterface connection with peerNodeName = [" + peerNodeName + "]") @AT@ 9869 @LENGTH@ 84
---UPD MethodInvocation@@logger.debug("Creating jinterface connection with peerNodeName = [" + peerNodeName) @TO@ logger.debug("Creating jinterface connection with peerNodeName = [" + peerNodeName + "]") @AT@ 9869 @LENGTH@ 83
------UPD SimpleName@@MethodName:debug:["Creating jinterface connection with peerNodeName = [" + peerNodeName] @TO@ MethodName:debug:["Creating jinterface connection with peerNodeName = [" + peerNodeName + "]"] @AT@ 9876 @LENGTH@ 76
---------UPD InfixExpression@@"Creating jinterface connection with peerNodeName = [" + peerNodeName @TO@ "Creating jinterface connection with peerNodeName = [" + peerNodeName + "]" @AT@ 9882 @LENGTH@ 69
------------INS StringLiteral@@"]" @TO@ InfixExpression@@"Creating jinterface connection with peerNodeName = [" + peerNodeName @AT@ 9954 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("Bye World") @TO@ MethodInvocation:mock.expectedMessageCount(1) @AT@ 2291 @LENGTH@ 41
---UPD MethodInvocation@@mock.expectedBodiesReceived("Bye World") @TO@ mock.expectedMessageCount(1) @AT@ 2291 @LENGTH@ 40
------UPD SimpleName@@MethodName:expectedBodiesReceived:["Bye World"] @TO@ MethodName:expectedMessageCount:[1] @AT@ 2296 @LENGTH@ 35
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedBodiesReceived:["Bye World"] @AT@ 2317 @LENGTH@ 1
---------DEL StringLiteral@@"Bye World" @AT@ 2319 @LENGTH@ 11


MOV FieldDeclaration@@private, DummyTable, [table] @TO@ TypeDeclaration@@[public]AsyncEndpointTransacted2Test, CamelSpringTestSupport @AT@ 1547 @LENGTH@ 25


UPD VariableDeclarationStatement@@Set originalSet=new TreeSet(); @TO@ Set<Object> originalSet=new TreeSet<Object>(); @AT@ 3231 @LENGTH@ 32
---INS ParameterizedType@@Set<Object> @TO@ VariableDeclarationStatement@@Set originalSet=new TreeSet(); @AT@ 3231 @LENGTH@ 11
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Object> @AT@ 3231 @LENGTH@ 3
------INS SimpleType@@Object @TO@ ParameterizedType@@Set<Object> @AT@ 3235 @LENGTH@ 6
---DEL SimpleType@@Set @AT@ 3231 @LENGTH@ 3
---UPD VariableDeclarationFragment@@originalSet=new TreeSet() @TO@ originalSet=new TreeSet<Object>() @AT@ 3235 @LENGTH@ 27
------UPD ClassInstanceCreation@@TreeSet[] @TO@ TreeSet<Object>[] @AT@ 3249 @LENGTH@ 13
---------DEL SimpleType@@TreeSet @AT@ 3253 @LENGTH@ 7
---------INS ParameterizedType@@TreeSet<Object> @TO@ ClassInstanceCreation@@TreeSet[] @AT@ 3261 @LENGTH@ 15
------------INS SimpleType@@TreeSet @TO@ ParameterizedType@@TreeSet<Object> @AT@ 3261 @LENGTH@ 7
------------INS SimpleType@@Object @TO@ ParameterizedType@@TreeSet<Object> @AT@ 3269 @LENGTH@ 6


UPD TypeDeclaration@@[public]TestComparableComparator, AbstractTestComparator<Integer> @TO@ [@SuppressWarnings("boxing"), public]TestComparableComparator, AbstractTestComparator<Integer> @AT@ 1036 @LENGTH@ 548
---INS SingleMemberAnnotation@@@SuppressWarnings("boxing") @TO@ TypeDeclaration@@[public]TestComparableComparator, AbstractTestComparator<Integer> @AT@ 1017 @LENGTH@ 27


UPD ExpressionStatement@@Assignment:path=FilenameUtils.normalize(path) @TO@ Assignment:path=FilenameUtils.normalize(path,false) @AT@ 12196 @LENGTH@ 37
---UPD Assignment@@path=FilenameUtils.normalize(path) @TO@ path=FilenameUtils.normalize(path,false) @AT@ 12196 @LENGTH@ 36
------UPD MethodInvocation@@FilenameUtils.normalize(path) @TO@ FilenameUtils.normalize(path,false) @AT@ 12203 @LENGTH@ 29
---------UPD SimpleName@@MethodName:normalize:[path] @TO@ MethodName:normalize:[path, false] @AT@ 12217 @LENGTH@ 15
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:normalize:[path] @AT@ 12233 @LENGTH@ 5


UPD TypeDeclaration@@[public]TestTransformedMap, BulkTest @TO@ [@SuppressWarnings("boxing"), public]TestTransformedMap, BulkTest @AT@ 1478 @LENGTH@ 4297
---INS SingleMemberAnnotation@@@SuppressWarnings("boxing") @TO@ TypeDeclaration@@[public]TestTransformedMap, BulkTest @AT@ 1478 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:scheduler.shutdown() @TO@ MethodInvocation:scheduler.standby() @AT@ 5216 @LENGTH@ 21
---UPD MethodInvocation@@scheduler.shutdown() @TO@ scheduler.standby() @AT@ 5216 @LENGTH@ 20
------UPD SimpleName@@MethodName:shutdown:[] @TO@ MethodName:standby:[] @AT@ 5226 @LENGTH@ 10


INS MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @TO@ TypeDeclaration@@[public, final]BoundedQueueThreadPoolExecutorElement, AbstractExecutorElement<BoundedQueueThreadPoolExecutorElement> @AT@ 9021 @LENGTH@ 105
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 9021 @LENGTH@ 9
---INS SimpleType@@Element @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 9031 @LENGTH@ 7
---INS SimpleName@@MethodName:getStandardElement @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 9039 @LENGTH@ 18
---INS ReturnStatement@@QualifiedName:Element.BOUNDED_QUEUE_THREAD_POOL_EXECUTOR @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 9070 @LENGTH@ 50
------INS QualifiedName@@Element.BOUNDED_QUEUE_THREAD_POOL_EXECUTOR @TO@ ReturnStatement@@QualifiedName:Element.BOUNDED_QUEUE_THREAD_POOL_EXECUTOR @AT@ 9077 @LENGTH@ 42
---------INS SimpleName@@Element @TO@ QualifiedName@@Element.BOUNDED_QUEUE_THREAD_POOL_EXECUTOR @AT@ 9077 @LENGTH@ 7
---------INS SimpleName@@BOUNDED_QUEUE_THREAD_POOL_EXECUTOR @TO@ QualifiedName@@Element.BOUNDED_QUEUE_THREAD_POOL_EXECUTOR @AT@ 9085 @LENGTH@ 34


UPD TryStatement@@try {  return policy.shouldSkip(e,skipCount);} catch (RuntimeException ex) {  throw new SkipListenerFailedException("Fatal exception in SkipPolicy.",ex,e);} @TO@ try {  return policy.shouldSkip(e,skipCount);} catch (SkipLimitExceededException ex) {  throw ex;}catch (RuntimeException ex) {  throw new SkipListenerFailedException("Fatal exception in SkipPolicy.",ex,e);} @AT@ 14381 @LENGTH@ 171
---INS CatchClause@@catch (SkipLimitExceededException ex) {  throw ex;} @TO@ TryStatement@@try {  return policy.shouldSkip(e,skipCount);} catch (RuntimeException ex) {  throw new SkipListenerFailedException("Fatal exception in SkipPolicy.",ex,e);} @AT@ 14696 @LENGTH@ 56
------INS SingleVariableDeclaration@@SkipLimitExceededException ex @TO@ CatchClause@@catch (SkipLimitExceededException ex) {  throw ex;} @AT@ 14703 @LENGTH@ 29
---------INS SimpleType@@SkipLimitExceededException @TO@ SingleVariableDeclaration@@SkipLimitExceededException ex @AT@ 14703 @LENGTH@ 26
---------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@SkipLimitExceededException ex @AT@ 14730 @LENGTH@ 2
------INS ThrowStatement@@SimpleName:ex @TO@ CatchClause@@catch (SkipLimitExceededException ex) {  throw ex;} @AT@ 14739 @LENGTH@ 9
---------INS SimpleName@@ex @TO@ ThrowStatement@@SimpleName:ex @AT@ 14745 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(entityMetadata,"Finder metadata required") @TO@ MethodInvocation:Assert.notNull(finderMetadata,"Finder metadata required") @AT@ 4469 @LENGTH@ 59
---UPD MethodInvocation@@Assert.notNull(entityMetadata,"Finder metadata required") @TO@ Assert.notNull(finderMetadata,"Finder metadata required") @AT@ 4469 @LENGTH@ 58
------UPD SimpleName@@MethodName:notNull:[entityMetadata, "Finder metadata required"] @TO@ MethodName:notNull:[finderMetadata, "Finder metadata required"] @AT@ 4476 @LENGTH@ 51
---------UPD SimpleName@@entityMetadata @TO@ finderMetadata @AT@ 4484 @LENGTH@ 14


UPD MethodDeclaration@@public, char, MethodName:getFileSeparator,  @TO@ public, static, char, MethodName:getFileSeparator,  @AT@ 1650 @LENGTH@ 73
---INS Modifier@@static @TO@ MethodDeclaration@@public, char, MethodName:getFileSeparator,  @AT@ 1657 @LENGTH@ 6


UPD MethodDeclaration@@protected, FeedPollingConsumer, MethodName:createEntryPollingConsumer, FeedEndpoint feedEndpoint, Processor processor, boolean filter, Date lastUpdate,  @TO@ protected, FeedPollingConsumer, MethodName:createEntryPollingConsumer, FeedEndpoint feedEndpoint, Processor processor, boolean filter, Date lastUpdate, boolean throttleEntries,  @AT@ 2633 @LENGTH@ 226
---UPD ReturnStatement@@ClassInstanceCreation:new RssEntryPollingConsumer(this,processor,filter,lastUpdate) @TO@ ClassInstanceCreation:new RssEntryPollingConsumer(this,processor,filter,lastUpdate,throttleEntries) @AT@ 2781 @LENGTH@ 72
------UPD ClassInstanceCreation@@RssEntryPollingConsumer[this, processor, filter, lastUpdate] @TO@ RssEntryPollingConsumer[this, processor, filter, lastUpdate, throttleEntries] @AT@ 2788 @LENGTH@ 64
---------INS SimpleName@@throttleEntries @TO@ ClassInstanceCreation@@RssEntryPollingConsumer[this, processor, filter, lastUpdate] @AT@ 2935 @LENGTH@ 15
---INS SingleVariableDeclaration@@boolean throttleEntries @TO@ MethodDeclaration@@protected, FeedPollingConsumer, MethodName:createEntryPollingConsumer, FeedEndpoint feedEndpoint, Processor processor, boolean filter, Date lastUpdate,  @AT@ 2828 @LENGTH@ 23
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean throttleEntries @AT@ 2828 @LENGTH@ 7
------INS SimpleName@@throttleEntries @TO@ SingleVariableDeclaration@@boolean throttleEntries @AT@ 2836 @LENGTH@ 15


UPD IfStatement@@if (writer.getWritten().isEmpty() || failed || !status.isNewTransaction()) {  super.doCommit(status);  return;} @TO@ if (writer.getWritten().isEmpty() || failed || !isExistingTransaction(status.getTransaction())) {  super.doCommit(status);  return;} @AT@ 17158 @LENGTH@ 127
---UPD InfixExpression@@writer.getWritten().isEmpty() || failed || !status.isNewTransaction() @TO@ writer.getWritten().isEmpty() || failed || !isExistingTransaction(status.getTransaction()) @AT@ 17162 @LENGTH@ 69
------UPD PrefixExpression@@!status.isNewTransaction() @TO@ !isExistingTransaction(status.getTransaction()) @AT@ 17205 @LENGTH@ 26
---------INS MethodInvocation@@isExistingTransaction(status.getTransaction()) @TO@ PrefixExpression@@!status.isNewTransaction() @AT@ 17206 @LENGTH@ 46
------------INS SimpleName@@MethodName:isExistingTransaction:[status.getTransaction()] @TO@ MethodInvocation@@isExistingTransaction(status.getTransaction()) @AT@ 17206 @LENGTH@ 46
---------------INS MethodInvocation@@status.getTransaction() @TO@ SimpleName@@MethodName:isExistingTransaction:[status.getTransaction()] @AT@ 17228 @LENGTH@ 23
------------------MOV SimpleName@@Name:status @TO@ MethodInvocation@@status.getTransaction() @AT@ 17206 @LENGTH@ 6
------------------MOV SimpleName@@Name:status @TO@ MethodInvocation@@status.getTransaction() @AT@ 17206 @LENGTH@ 6
------------------MOV SimpleName@@MethodName:isNewTransaction:[] @TO@ MethodInvocation@@status.getTransaction() @AT@ 17213 @LENGTH@ 18
------------------MOV SimpleName@@MethodName:isNewTransaction:[] @TO@ MethodInvocation@@status.getTransaction() @AT@ 17213 @LENGTH@ 18
---------DEL MethodInvocation@@status.isNewTransaction() @AT@ 17206 @LENGTH@ 25


INS MethodDeclaration@@boolean, MethodName:safeArrayEquals, byte[] a1, byte[] a2,  @TO@ TypeDeclaration@@[public]HMAC_SHA1SignatureMethod, [OAuthSignatureMethod] @AT@ 4655 @LENGTH@ 303
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:safeArrayEquals, byte[] a1, byte[] a2,  @AT@ 4647 @LENGTH@ 7
---INS SimpleName@@MethodName:safeArrayEquals @TO@ MethodDeclaration@@boolean, MethodName:safeArrayEquals, byte[] a1, byte[] a2,  @AT@ 4655 @LENGTH@ 15
---INS SingleVariableDeclaration@@byte[] a1 @TO@ MethodDeclaration@@boolean, MethodName:safeArrayEquals, byte[] a1, byte[] a2,  @AT@ 4671 @LENGTH@ 9
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] a1 @AT@ 4671 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4671 @LENGTH@ 4
------INS SimpleName@@a1 @TO@ SingleVariableDeclaration@@byte[] a1 @AT@ 4678 @LENGTH@ 2
---INS SingleVariableDeclaration@@byte[] a2 @TO@ MethodDeclaration@@boolean, MethodName:safeArrayEquals, byte[] a1, byte[] a2,  @AT@ 4682 @LENGTH@ 9
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] a2 @AT@ 4682 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4682 @LENGTH@ 4
------INS SimpleName@@a2 @TO@ SingleVariableDeclaration@@byte[] a2 @AT@ 4689 @LENGTH@ 2
---INS IfStatement@@if (a1 == null || a2 == null) {  return (a1 == a2);} @TO@ MethodDeclaration@@boolean, MethodName:safeArrayEquals, byte[] a1, byte[] a2,  @AT@ 4699 @LENGTH@ 62
------INS InfixExpression@@a1 == null || a2 == null @TO@ IfStatement@@if (a1 == null || a2 == null) {  return (a1 == a2);} @AT@ 4703 @LENGTH@ 24
---------INS InfixExpression@@a1 == null @TO@ InfixExpression@@a1 == null || a2 == null @AT@ 4703 @LENGTH@ 10
------------INS SimpleName@@a1 @TO@ InfixExpression@@a1 == null @AT@ 4703 @LENGTH@ 2
------------INS Operator@@== @TO@ InfixExpression@@a1 == null @AT@ 4705 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@a1 == null @AT@ 4709 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@a1 == null || a2 == null @AT@ 4713 @LENGTH@ 2
---------INS InfixExpression@@a2 == null @TO@ InfixExpression@@a1 == null || a2 == null @AT@ 4717 @LENGTH@ 10
------------INS SimpleName@@a2 @TO@ InfixExpression@@a2 == null @AT@ 4717 @LENGTH@ 2
------------INS Operator@@== @TO@ InfixExpression@@a2 == null @AT@ 4719 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@a2 == null @AT@ 4723 @LENGTH@ 4
------INS Block@@ThenBody:{  return (a1 == a2);} @TO@ IfStatement@@if (a1 == null || a2 == null) {  return (a1 == a2);} @AT@ 4729 @LENGTH@ 32
---------INS ReturnStatement@@ParenthesizedExpression:(a1 == a2) @TO@ Block@@ThenBody:{  return (a1 == a2);} @AT@ 4737 @LENGTH@ 18
------------INS ParenthesizedExpression@@(a1 == a2) @TO@ ReturnStatement@@ParenthesizedExpression:(a1 == a2) @AT@ 4744 @LENGTH@ 10
---------------INS InfixExpression@@a1 == a2 @TO@ ParenthesizedExpression@@(a1 == a2) @AT@ 4745 @LENGTH@ 8
------------------INS SimpleName@@a1 @TO@ InfixExpression@@a1 == a2 @AT@ 4745 @LENGTH@ 2
------------------INS Operator@@== @TO@ InfixExpression@@a1 == a2 @AT@ 4747 @LENGTH@ 2
------------------INS SimpleName@@a2 @TO@ InfixExpression@@a1 == a2 @AT@ 4751 @LENGTH@ 2
---INS IfStatement@@if (a1.length != a2.length) {  return false;} @TO@ MethodDeclaration@@boolean, MethodName:safeArrayEquals, byte[] a1, byte[] a2,  @AT@ 4767 @LENGTH@ 55
------INS InfixExpression@@a1.length != a2.length @TO@ IfStatement@@if (a1.length != a2.length) {  return false;} @AT@ 4771 @LENGTH@ 22
---------INS QualifiedName@@a1.length @TO@ InfixExpression@@a1.length != a2.length @AT@ 4771 @LENGTH@ 9
------------INS SimpleName@@a1 @TO@ QualifiedName@@a1.length @AT@ 4771 @LENGTH@ 2
------------INS SimpleName@@length @TO@ QualifiedName@@a1.length @AT@ 4774 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@a1.length != a2.length @AT@ 4780 @LENGTH@ 2
---------INS QualifiedName@@a2.length @TO@ InfixExpression@@a1.length != a2.length @AT@ 4784 @LENGTH@ 9
------------INS SimpleName@@a2 @TO@ QualifiedName@@a2.length @AT@ 4784 @LENGTH@ 2
------------INS SimpleName@@length @TO@ QualifiedName@@a2.length @AT@ 4787 @LENGTH@ 6
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (a1.length != a2.length) {  return false;} @AT@ 4795 @LENGTH@ 27
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 4803 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4810 @LENGTH@ 5
---INS VariableDeclarationStatement@@byte result=0; @TO@ MethodDeclaration@@boolean, MethodName:safeArrayEquals, byte[] a1, byte[] a2,  @AT@ 4828 @LENGTH@ 16
------INS PrimitiveType@@byte @TO@ VariableDeclarationStatement@@byte result=0; @AT@ 4828 @LENGTH@ 4
------INS VariableDeclarationFragment@@result=0 @TO@ VariableDeclarationStatement@@byte result=0; @AT@ 4833 @LENGTH@ 10
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=0 @AT@ 4833 @LENGTH@ 6
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@result=0 @AT@ 4842 @LENGTH@ 1
---INS ForStatement@@for (int i=0; i < a1.length; i++) {  result|=a1[i] ^ a2[i];} @TO@ MethodDeclaration@@boolean, MethodName:safeArrayEquals, byte[] a1, byte[] a2,  @AT@ 4849 @LENGTH@ 74
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < a1.length; i++) {  result|=a1[i] ^ a2[i];} @AT@ 4854 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 4854 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 4858 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 4858 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 4862 @LENGTH@ 1
------INS InfixExpression@@i < a1.length @TO@ ForStatement@@for (int i=0; i < a1.length; i++) {  result|=a1[i] ^ a2[i];} @AT@ 4865 @LENGTH@ 13
---------INS SimpleName@@i @TO@ InfixExpression@@i < a1.length @AT@ 4865 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < a1.length @AT@ 4866 @LENGTH@ 1
---------INS QualifiedName@@a1.length @TO@ InfixExpression@@i < a1.length @AT@ 4869 @LENGTH@ 9
------------INS SimpleName@@a1 @TO@ QualifiedName@@a1.length @AT@ 4869 @LENGTH@ 2
------------INS SimpleName@@length @TO@ QualifiedName@@a1.length @AT@ 4872 @LENGTH@ 6
------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < a1.length; i++) {  result|=a1[i] ^ a2[i];} @AT@ 4880 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 4880 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 4882 @LENGTH@ 2
------INS ExpressionStatement@@Assignment:result|=a1[i] ^ a2[i] @TO@ ForStatement@@for (int i=0; i < a1.length; i++) {  result|=a1[i] ^ a2[i];} @AT@ 4893 @LENGTH@ 24
---------INS Assignment@@result|=a1[i] ^ a2[i] @TO@ ExpressionStatement@@Assignment:result|=a1[i] ^ a2[i] @AT@ 4893 @LENGTH@ 23
------------INS SimpleName@@result @TO@ Assignment@@result|=a1[i] ^ a2[i] @AT@ 4893 @LENGTH@ 6
------------INS Operator@@|= @TO@ Assignment@@result|=a1[i] ^ a2[i] @AT@ 4899 @LENGTH@ 2
------------INS InfixExpression@@a1[i] ^ a2[i] @TO@ Assignment@@result|=a1[i] ^ a2[i] @AT@ 4903 @LENGTH@ 13
---------------INS ArrayAccess@@a1[i] @TO@ InfixExpression@@a1[i] ^ a2[i] @AT@ 4903 @LENGTH@ 5
------------------INS SimpleName@@a1 @TO@ ArrayAccess@@a1[i] @AT@ 4903 @LENGTH@ 2
------------------INS SimpleName@@i @TO@ ArrayAccess@@a1[i] @AT@ 4906 @LENGTH@ 1
---------------INS Operator@@^ @TO@ InfixExpression@@a1[i] ^ a2[i] @AT@ 4908 @LENGTH@ 1
---------------INS ArrayAccess@@a2[i] @TO@ InfixExpression@@a1[i] ^ a2[i] @AT@ 4911 @LENGTH@ 5
------------------INS SimpleName@@a2 @TO@ ArrayAccess@@a2[i] @AT@ 4911 @LENGTH@ 2
------------------INS SimpleName@@i @TO@ ArrayAccess@@a2[i] @AT@ 4914 @LENGTH@ 1
---INS ReturnStatement@@ParenthesizedExpression:(result == 0) @TO@ MethodDeclaration@@boolean, MethodName:safeArrayEquals, byte[] a1, byte[] a2,  @AT@ 4933 @LENGTH@ 21
------INS ParenthesizedExpression@@(result == 0) @TO@ ReturnStatement@@ParenthesizedExpression:(result == 0) @AT@ 4940 @LENGTH@ 13
---------INS InfixExpression@@result == 0 @TO@ ParenthesizedExpression@@(result == 0) @AT@ 4941 @LENGTH@ 11
------------INS SimpleName@@result @TO@ InfixExpression@@result == 0 @AT@ 4941 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@result == 0 @AT@ 4947 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@result == 0 @AT@ 4951 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:wsdlURL=wsdlFile.toURL() @TO@ Assignment:wsdlURL=wsdlFile.toURI().toURL() @AT@ 1658 @LENGTH@ 27
---UPD Assignment@@wsdlURL=wsdlFile.toURL() @TO@ wsdlURL=wsdlFile.toURI().toURL() @AT@ 1658 @LENGTH@ 26
------UPD MethodInvocation@@wsdlFile.toURL() @TO@ wsdlFile.toURI().toURL() @AT@ 1668 @LENGTH@ 16
---------INS MethodInvocation@@MethodName:toURI:[] @TO@ MethodInvocation@@wsdlFile.toURL() @AT@ 1668 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:from("direct:simple").to("file:/myfile") @TO@ MethodInvocation:from("direct:simple").to("file:myfile") @AT@ 1789 @LENGTH@ 41
---UPD MethodInvocation@@from("direct:simple").to("file:/myfile") @TO@ from("direct:simple").to("file:myfile") @AT@ 1789 @LENGTH@ 40
------UPD SimpleName@@MethodName:to:["file:/myfile"] @TO@ MethodName:to:["file:myfile"] @AT@ 1811 @LENGTH@ 18
---------UPD StringLiteral@@"file:/myfile" @TO@ "file:myfile" @AT@ 1814 @LENGTH@ 14


UPD TypeDeclaration@@[public, static]OSGiModule,  @TO@ [public, static]OSGiModule, [Serializable] @AT@ 2239 @LENGTH@ 440
---INS SimpleType@@Serializable @TO@ TypeDeclaration@@[public, static]OSGiModule,  @AT@ 2281 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertEquals("Hello World",result.getOut().getBody()) @TO@ MethodInvocation:assertEquals("Hello World",result.getIn().getBody()) @AT@ 2316 @LENGTH@ 55
---UPD MethodInvocation@@assertEquals("Hello World",result.getOut().getBody()) @TO@ assertEquals("Hello World",result.getIn().getBody()) @AT@ 2316 @LENGTH@ 54
------UPD SimpleName@@MethodName:assertEquals:["Hello World", result.getOut().getBody()] @TO@ MethodName:assertEquals:["Hello World", result.getIn().getBody()] @AT@ 2316 @LENGTH@ 54
---------UPD MethodInvocation@@result.getOut().getBody() @TO@ result.getIn().getBody() @AT@ 2344 @LENGTH@ 25
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getIn:[] @AT@ 2344 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:new Thread(new Runnable(){
  @Override public void run(){
    debug("Monitor stdin " + processName);
    InputStream in=System.in;
    try {
      while (in != null && in.read() != -1) {
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    debug("End of stdin " + processName);
    handler.handleShutdown();
    System.exit(0);
  }
}
).start() @TO@ MethodDeclaration@@protected, void, MethodName:startThread,  @AT@ 6837 @LENGTH@ 550
---INS MethodInvocation@@new Thread(new Runnable(){
  @Override public void run(){
    debug("Monitor stdin " + processName);
    InputStream in=System.in;
    try {
      while (in != null && in.read() != -1) {
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    debug("End of stdin " + processName);
    handler.handleShutdown();
    System.exit(0);
  }
}
).start() @TO@ ExpressionStatement@@MethodInvocation:new Thread(new Runnable(){
  @Override public void run(){
    debug("Monitor stdin " + processName);
    InputStream in=System.in;
    try {
      while (in != null && in.read() != -1) {
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    debug("End of stdin " + processName);
    handler.handleShutdown();
    System.exit(0);
  }
}
).start() @AT@ 6837 @LENGTH@ 549
------INS ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    debug("Monitor stdin " + processName);
    InputStream in=System.in;
    try {
      while (in != null && in.read() != -1) {
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    debug("End of stdin " + processName);
    handler.handleShutdown();
    System.exit(0);
  }
}
] @TO@ MethodInvocation@@new Thread(new Runnable(){
  @Override public void run(){
    debug("Monitor stdin " + processName);
    InputStream in=System.in;
    try {
      while (in != null && in.read() != -1) {
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    debug("End of stdin " + processName);
    handler.handleShutdown();
    System.exit(0);
  }
}
).start() @AT@ 6837 @LENGTH@ 541
---------INS New@@new @TO@ ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    debug("Monitor stdin " + processName);
    InputStream in=System.in;
    try {
      while (in != null && in.read() != -1) {
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    debug("End of stdin " + processName);
    handler.handleShutdown();
    System.exit(0);
  }
}
] @AT@ 6837 @LENGTH@ 3
---------INS SimpleType@@Thread @TO@ ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    debug("Monitor stdin " + processName);
    InputStream in=System.in;
    try {
      while (in != null && in.read() != -1) {
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    debug("End of stdin " + processName);
    handler.handleShutdown();
    System.exit(0);
  }
}
] @AT@ 6841 @LENGTH@ 6
---------INS ClassInstanceCreation@@Runnable[] @TO@ ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    debug("Monitor stdin " + processName);
    InputStream in=System.in;
    try {
      while (in != null && in.read() != -1) {
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    debug("End of stdin " + processName);
    handler.handleShutdown();
    System.exit(0);
  }
}
] @AT@ 6849 @LENGTH@ 528
------------INS New@@new @TO@ ClassInstanceCreation@@Runnable[] @AT@ 6849 @LENGTH@ 3
------------INS SimpleType@@Runnable @TO@ ClassInstanceCreation@@Runnable[] @AT@ 6853 @LENGTH@ 8
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Runnable[] @AT@ 6864 @LENGTH@ 513
---------------INS MethodDeclaration@@public, void, MethodName:run,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 6901 @LENGTH@ 466
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 6901 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 6908 @LENGTH@ 4
------------------INS SimpleName@@MethodName:run @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 6913 @LENGTH@ 3
------------------INS ExpressionStatement@@MethodInvocation:debug("Monitor stdin " + processName) @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 6937 @LENGTH@ 38
---------------------INS MethodInvocation@@debug("Monitor stdin " + processName) @TO@ ExpressionStatement@@MethodInvocation:debug("Monitor stdin " + processName) @AT@ 6937 @LENGTH@ 37
------------------------INS SimpleName@@MethodName:debug:["Monitor stdin " + processName] @TO@ MethodInvocation@@debug("Monitor stdin " + processName) @AT@ 6937 @LENGTH@ 37
---------------------------INS InfixExpression@@"Monitor stdin " + processName @TO@ SimpleName@@MethodName:debug:["Monitor stdin " + processName] @AT@ 6943 @LENGTH@ 30
------------------------------INS StringLiteral@@"Monitor stdin " @TO@ InfixExpression@@"Monitor stdin " + processName @AT@ 6943 @LENGTH@ 16
------------------------------INS Operator@@+ @TO@ InfixExpression@@"Monitor stdin " + processName @AT@ 6959 @LENGTH@ 1
------------------------------INS SimpleName@@processName @TO@ InfixExpression@@"Monitor stdin " + processName @AT@ 6962 @LENGTH@ 11
------------------INS VariableDeclarationStatement@@InputStream in=System.in; @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 6992 @LENGTH@ 27
---------------------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@InputStream in=System.in; @AT@ 6992 @LENGTH@ 11
---------------------INS VariableDeclarationFragment@@in=System.in @TO@ VariableDeclarationStatement@@InputStream in=System.in; @AT@ 7004 @LENGTH@ 14
------------------------INS SimpleName@@in @TO@ VariableDeclarationFragment@@in=System.in @AT@ 7004 @LENGTH@ 2
------------------------INS QualifiedName@@System.in @TO@ VariableDeclarationFragment@@in=System.in @AT@ 7009 @LENGTH@ 9
---------------------------INS SimpleName@@System @TO@ QualifiedName@@System.in @AT@ 7009 @LENGTH@ 6
---------------------------INS SimpleName@@in @TO@ QualifiedName@@System.in @AT@ 7016 @LENGTH@ 2
------------------INS TryStatement@@try {  while (in != null && in.read() != -1) {  }} catch (IOException e) {  e.printStackTrace();} @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 7036 @LENGTH@ 189
---------------------INS WhileStatement@@while (in != null && in.read() != -1) {} @TO@ TryStatement@@try {  while (in != null && in.read() != -1) {  }} catch (IOException e) {  e.printStackTrace();} @AT@ 7062 @LENGTH@ 62
------------------------INS InfixExpression@@in != null && in.read() != -1 @TO@ WhileStatement@@while (in != null && in.read() != -1) {} @AT@ 7069 @LENGTH@ 29
---------------------------INS InfixExpression@@in != null @TO@ InfixExpression@@in != null && in.read() != -1 @AT@ 7069 @LENGTH@ 10
------------------------------INS SimpleName@@in @TO@ InfixExpression@@in != null @AT@ 7069 @LENGTH@ 2
------------------------------INS Operator@@!= @TO@ InfixExpression@@in != null @AT@ 7071 @LENGTH@ 2
------------------------------INS NullLiteral@@null @TO@ InfixExpression@@in != null @AT@ 7075 @LENGTH@ 4
---------------------------INS Operator@@&& @TO@ InfixExpression@@in != null && in.read() != -1 @AT@ 7079 @LENGTH@ 2
---------------------------INS InfixExpression@@in.read() != -1 @TO@ InfixExpression@@in != null && in.read() != -1 @AT@ 7083 @LENGTH@ 15
------------------------------INS MethodInvocation@@in.read() @TO@ InfixExpression@@in.read() != -1 @AT@ 7083 @LENGTH@ 9
---------------------------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.read() @AT@ 7083 @LENGTH@ 2
---------------------------------INS SimpleName@@MethodName:read:[] @TO@ MethodInvocation@@in.read() @AT@ 7086 @LENGTH@ 6
------------------------------INS Operator@@!= @TO@ InfixExpression@@in.read() != -1 @AT@ 7092 @LENGTH@ 2
------------------------------INS PrefixExpression@@-1 @TO@ InfixExpression@@in.read() != -1 @AT@ 7096 @LENGTH@ 2
---------------------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 7096 @LENGTH@ 1
---------------------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 7097 @LENGTH@ 1
------------------------INS Block@@WhileBody:{} @TO@ WhileStatement@@while (in != null && in.read() != -1) {} @AT@ 7100 @LENGTH@ 24
---------------------INS CatchClause@@catch (IOException e) {  e.printStackTrace();} @TO@ TryStatement@@try {  while (in != null && in.read() != -1) {  }} catch (IOException e) {  e.printStackTrace();} @AT@ 7143 @LENGTH@ 82
------------------------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  e.printStackTrace();} @AT@ 7150 @LENGTH@ 13
---------------------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 7150 @LENGTH@ 11
---------------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 7162 @LENGTH@ 1
------------------------INS ExpressionStatement@@MethodInvocation:e.printStackTrace() @TO@ CatchClause@@catch (IOException e) {  e.printStackTrace();} @AT@ 7187 @LENGTH@ 20
---------------------------INS MethodInvocation@@e.printStackTrace() @TO@ ExpressionStatement@@MethodInvocation:e.printStackTrace() @AT@ 7187 @LENGTH@ 19
------------------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.printStackTrace() @AT@ 7187 @LENGTH@ 1
------------------------------INS SimpleName@@MethodName:printStackTrace:[] @TO@ MethodInvocation@@e.printStackTrace() @AT@ 7189 @LENGTH@ 17
------------------INS ExpressionStatement@@MethodInvocation:debug("End of stdin " + processName) @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 7242 @LENGTH@ 37
---------------------INS MethodInvocation@@debug("End of stdin " + processName) @TO@ ExpressionStatement@@MethodInvocation:debug("End of stdin " + processName) @AT@ 7242 @LENGTH@ 36
------------------------INS SimpleName@@MethodName:debug:["End of stdin " + processName] @TO@ MethodInvocation@@debug("End of stdin " + processName) @AT@ 7242 @LENGTH@ 36
---------------------------INS InfixExpression@@"End of stdin " + processName @TO@ SimpleName@@MethodName:debug:["End of stdin " + processName] @AT@ 7248 @LENGTH@ 29
------------------------------INS StringLiteral@@"End of stdin " @TO@ InfixExpression@@"End of stdin " + processName @AT@ 7248 @LENGTH@ 15
------------------------------INS Operator@@+ @TO@ InfixExpression@@"End of stdin " + processName @AT@ 7263 @LENGTH@ 1
------------------------------INS SimpleName@@processName @TO@ InfixExpression@@"End of stdin " + processName @AT@ 7266 @LENGTH@ 11
------------------INS ExpressionStatement@@MethodInvocation:handler.handleShutdown() @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 7296 @LENGTH@ 25
---------------------INS MethodInvocation@@handler.handleShutdown() @TO@ ExpressionStatement@@MethodInvocation:handler.handleShutdown() @AT@ 7296 @LENGTH@ 24
------------------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.handleShutdown() @AT@ 7296 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:handleShutdown:[] @TO@ MethodInvocation@@handler.handleShutdown() @AT@ 7304 @LENGTH@ 16
------------------INS ExpressionStatement@@MethodInvocation:System.exit(0) @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 7338 @LENGTH@ 15
---------------------INS MethodInvocation@@System.exit(0) @TO@ ExpressionStatement@@MethodInvocation:System.exit(0) @AT@ 7338 @LENGTH@ 14
------------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.exit(0) @AT@ 7338 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:exit:[0] @TO@ MethodInvocation@@System.exit(0) @AT@ 7345 @LENGTH@ 7
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:exit:[0] @AT@ 7350 @LENGTH@ 1
------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@new Thread(new Runnable(){
  @Override public void run(){
    debug("Monitor stdin " + processName);
    InputStream in=System.in;
    try {
      while (in != null && in.read() != -1) {
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    debug("End of stdin " + processName);
    handler.handleShutdown();
    System.exit(0);
  }
}
).start() @AT@ 7379 @LENGTH@ 7


INS VariableDeclarationStatement@@SoftReference<?> ref=new SoftReference<Object>(new Object()); @TO@ MethodDeclaration@@private, void, MethodName:waitUntilTrackCount, Exception,  @AT@ 10253 @LENGTH@ 63
---INS ParameterizedType@@SoftReference<?> @TO@ VariableDeclarationStatement@@SoftReference<?> ref=new SoftReference<Object>(new Object()); @AT@ 10253 @LENGTH@ 16
------INS SimpleType@@SoftReference @TO@ ParameterizedType@@SoftReference<?> @AT@ 10253 @LENGTH@ 13
------INS WildcardType@@? @TO@ ParameterizedType@@SoftReference<?> @AT@ 10267 @LENGTH@ 1
---INS VariableDeclarationFragment@@ref=new SoftReference<Object>(new Object()) @TO@ VariableDeclarationStatement@@SoftReference<?> ref=new SoftReference<Object>(new Object()); @AT@ 10270 @LENGTH@ 45
------INS SimpleName@@ref @TO@ VariableDeclarationFragment@@ref=new SoftReference<Object>(new Object()) @AT@ 10270 @LENGTH@ 3
------INS ClassInstanceCreation@@SoftReference<Object>[new Object()] @TO@ VariableDeclarationFragment@@ref=new SoftReference<Object>(new Object()) @AT@ 10276 @LENGTH@ 39
---------INS New@@new @TO@ ClassInstanceCreation@@SoftReference<Object>[new Object()] @AT@ 10276 @LENGTH@ 3
---------INS ParameterizedType@@SoftReference<Object> @TO@ ClassInstanceCreation@@SoftReference<Object>[new Object()] @AT@ 10280 @LENGTH@ 21
------------INS SimpleType@@SoftReference @TO@ ParameterizedType@@SoftReference<Object> @AT@ 10280 @LENGTH@ 13
------------INS SimpleType@@Object @TO@ ParameterizedType@@SoftReference<Object> @AT@ 10294 @LENGTH@ 6
---------INS ClassInstanceCreation@@Object[] @TO@ ClassInstanceCreation@@SoftReference<Object>[new Object()] @AT@ 10302 @LENGTH@ 12
------------INS New@@new @TO@ ClassInstanceCreation@@Object[] @AT@ 10302 @LENGTH@ 3
------------INS SimpleType@@Object @TO@ ClassInstanceCreation@@Object[] @AT@ 10306 @LENGTH@ 6


DEL IfStatement@@if (reader.hasNext() && reader.nextTag() == START_ELEMENT) {  throw unexpectedElement(reader);} @AT@ 10400 @LENGTH@ 115
---DEL InfixExpression@@reader.hasNext() && reader.nextTag() == START_ELEMENT @AT@ 10404 @LENGTH@ 53
------DEL MethodInvocation@@reader.hasNext() @AT@ 10404 @LENGTH@ 16
------DEL Operator@@&& @AT@ 10420 @LENGTH@ 2
------DEL InfixExpression@@reader.nextTag() == START_ELEMENT @AT@ 10424 @LENGTH@ 33
---------DEL MethodInvocation@@reader.nextTag() @AT@ 10424 @LENGTH@ 16
---------DEL Operator@@== @AT@ 10440 @LENGTH@ 2
---------DEL SimpleName@@START_ELEMENT @AT@ 10444 @LENGTH@ 13
---DEL Block@@ThenBody:{  throw unexpectedElement(reader);} @AT@ 10459 @LENGTH@ 56


UPD ExpressionStatement@@Assignment:this.names=names @TO@ Assignment:this.names=new String[names.length] @AT@ 3787 @LENGTH@ 19
---UPD Assignment@@this.names=names @TO@ this.names=new String[names.length] @AT@ 3787 @LENGTH@ 18
------INS ArrayCreation@@new String[names.length] @TO@ Assignment@@this.names=names @AT@ 3800 @LENGTH@ 24
---------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[names.length] @AT@ 3804 @LENGTH@ 20
------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 3804 @LENGTH@ 6
---------INS QualifiedName@@names.length @TO@ ArrayCreation@@new String[names.length] @AT@ 3811 @LENGTH@ 12
------------INS SimpleName@@names @TO@ QualifiedName@@names.length @AT@ 3811 @LENGTH@ 5
------------INS SimpleName@@length @TO@ QualifiedName@@names.length @AT@ 3817 @LENGTH@ 6
------DEL SimpleName@@names @AT@ 3800 @LENGTH@ 5


DEL FieldDeclaration@@public, static, final, VirtualFileFilter, [DEFAULT_WEB_INF_LIB_FILTER=new SuffixMatchFilter(".jar",VisitorAttributes.DEFAULT)] @AT@ 2162 @LENGTH@ 124
---DEL Modifier@@public @AT@ 2162 @LENGTH@ 6
---DEL Modifier@@static @AT@ 2169 @LENGTH@ 6
---DEL Modifier@@final @AT@ 2176 @LENGTH@ 5
---DEL SimpleType@@VirtualFileFilter @AT@ 2182 @LENGTH@ 17
---DEL VariableDeclarationFragment@@DEFAULT_WEB_INF_LIB_FILTER=new SuffixMatchFilter(".jar",VisitorAttributes.DEFAULT) @AT@ 2200 @LENGTH@ 85
------DEL SimpleName@@DEFAULT_WEB_INF_LIB_FILTER @AT@ 2200 @LENGTH@ 26
------DEL ClassInstanceCreation@@SuffixMatchFilter[".jar", VisitorAttributes.DEFAULT] @AT@ 2229 @LENGTH@ 56
---------DEL New@@new @AT@ 2229 @LENGTH@ 3
---------DEL SimpleType@@SuffixMatchFilter @AT@ 2233 @LENGTH@ 17
---------DEL StringLiteral@@".jar" @AT@ 2251 @LENGTH@ 6
---------DEL QualifiedName@@VisitorAttributes.DEFAULT @AT@ 2259 @LENGTH@ 25
------------DEL SimpleName@@VisitorAttributes @AT@ 2259 @LENGTH@ 17
------------DEL SimpleName@@DEFAULT @AT@ 2277 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new DecoderException("Illegal hexadecimal charcter " + ch + " at index "+ index) @TO@ ClassInstanceCreation:new DecoderException("Illegal hexadecimal character " + ch + " at index "+ index) @AT@ 6257 @LENGTH@ 88
---UPD ClassInstanceCreation@@DecoderException["Illegal hexadecimal charcter " + ch + " at index "+ index] @TO@ DecoderException["Illegal hexadecimal character " + ch + " at index "+ index] @AT@ 6263 @LENGTH@ 81
------UPD InfixExpression@@"Illegal hexadecimal charcter " + ch + " at index "+ index @TO@ "Illegal hexadecimal character " + ch + " at index "+ index @AT@ 6284 @LENGTH@ 59
---------UPD StringLiteral@@"Illegal hexadecimal charcter " @TO@ "Illegal hexadecimal character " @AT@ 6284 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:from("direct:start").aggregate().constant(true).groupExchanges().eagerCheckCompletion().completionSize(header("groupSize")).to("mock:result").end() @TO@ MethodInvocation:from("direct:start").aggregate(constant(true)).groupExchanges().eagerCheckCompletion().completionSize(header("groupSize")).to("mock:result").end() @AT@ 2798 @LENGTH@ 331
---UPD MethodInvocation@@from("direct:start").aggregate().constant(true).groupExchanges().eagerCheckCompletion().completionSize(header("groupSize")).to("mock:result").end() @TO@ from("direct:start").aggregate(constant(true)).groupExchanges().eagerCheckCompletion().completionSize(header("groupSize")).to("mock:result").end() @AT@ 2798 @LENGTH@ 330
------UPD MethodInvocation@@MethodName:constant:[true] @TO@ MethodName:aggregate:[constant(true)] @AT@ 2798 @LENGTH@ 184
---------INS MethodInvocation@@constant(true) @TO@ MethodInvocation@@MethodName:constant:[true] @AT@ 2966 @LENGTH@ 14
------------INS SimpleName@@MethodName:constant:[true] @TO@ MethodInvocation@@constant(true) @AT@ 2966 @LENGTH@ 14
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:constant:[true] @AT@ 2975 @LENGTH@ 4
---------DEL BooleanLiteral@@true @AT@ 2977 @LENGTH@ 4
------DEL MethodInvocation@@MethodName:aggregate:[] @AT@ 2798 @LENGTH@ 169


UPD Block@@ElseBody:{  HashEntry oldEntries[]=data;  HashEntry newEntries[]=new HashEntry[newCapacity];  modCount++;  for (int i=oldCapacity - 1; i >= 0; i--) {    HashEntry entry=oldEntries[i];    if (entry != null) {      oldEntries[i]=null;      do {        HashEntry next=entry.next;        int index=hashIndex(entry.hashCode,newCapacity);        entry.next=newEntries[index];        newEntries[index]=entry;        entry=next;      } while (entry != null);    }  }  threshold=calculateThreshold(newCapacity,loadFactor);  data=newEntries;} @TO@ ElseBody:{  HashEntry<K,V> oldEntries[]=data;  HashEntry<K,V> newEntries[]=new HashEntry[newCapacity];  modCount++;  for (int i=oldCapacity - 1; i >= 0; i--) {    HashEntry<K,V> entry=oldEntries[i];    if (entry != null) {      oldEntries[i]=null;      do {        HashEntry<K,V> next=entry.next;        int index=hashIndex(entry.hashCode,newCapacity);        entry.next=newEntries[index];        newEntries[index]=entry;        entry=next;      } while (entry != null);    }  }  threshold=calculateThreshold(newCapacity,loadFactor);  data=newEntries;} @AT@ 22626 @LENGTH@ 812
---UPD VariableDeclarationStatement@@HashEntry oldEntries[]=data; @TO@ HashEntry<K,V> oldEntries[]=data; @AT@ 22640 @LENGTH@ 30
------INS ParameterizedType@@HashEntry<K,V> @TO@ VariableDeclarationStatement@@HashEntry oldEntries[]=data; @AT@ 22640 @LENGTH@ 15
---------INS SimpleType@@HashEntry @TO@ ParameterizedType@@HashEntry<K,V> @AT@ 22640 @LENGTH@ 9
---------INS SimpleType@@K @TO@ ParameterizedType@@HashEntry<K,V> @AT@ 22650 @LENGTH@ 1
---------INS SimpleType@@V @TO@ ParameterizedType@@HashEntry<K,V> @AT@ 22653 @LENGTH@ 1
------DEL SimpleType@@HashEntry @AT@ 22640 @LENGTH@ 9
---UPD VariableDeclarationStatement@@HashEntry newEntries[]=new HashEntry[newCapacity]; @TO@ HashEntry<K,V> newEntries[]=new HashEntry[newCapacity]; @AT@ 22683 @LENGTH@ 52
------DEL SimpleType@@HashEntry @AT@ 22683 @LENGTH@ 9
------INS ParameterizedType@@HashEntry<K,V> @TO@ VariableDeclarationStatement@@HashEntry newEntries[]=new HashEntry[newCapacity]; @AT@ 22689 @LENGTH@ 15
---------INS SimpleType@@HashEntry @TO@ ParameterizedType@@HashEntry<K,V> @AT@ 22689 @LENGTH@ 9
---------INS SimpleType@@K @TO@ ParameterizedType@@HashEntry<K,V> @AT@ 22699 @LENGTH@ 1
---------INS SimpleType@@V @TO@ ParameterizedType@@HashEntry<K,V> @AT@ 22702 @LENGTH@ 1
---UPD ForStatement@@for (int i=oldCapacity - 1; i >= 0; i--) {  HashEntry entry=oldEntries[i];  if (entry != null) {    oldEntries[i]=null;    do {      HashEntry next=entry.next;      int index=hashIndex(entry.hashCode,newCapacity);      entry.next=newEntries[index];      newEntries[index]=entry;      entry=next;    } while (entry != null);  }} @TO@ for (int i=oldCapacity - 1; i >= 0; i--) {  HashEntry<K,V> entry=oldEntries[i];  if (entry != null) {    oldEntries[i]=null;    do {      HashEntry<K,V> next=entry.next;      int index=hashIndex(entry.hashCode,newCapacity);      entry.next=newEntries[index];      newEntries[index]=entry;      entry=next;    } while (entry != null);  }} @AT@ 22773 @LENGTH@ 555
------UPD VariableDeclarationStatement@@HashEntry entry=oldEntries[i]; @TO@ HashEntry<K,V> entry=oldEntries[i]; @AT@ 22834 @LENGTH@ 32
---------DEL SimpleType@@HashEntry @AT@ 22834 @LENGTH@ 9
---------INS ParameterizedType@@HashEntry<K,V> @TO@ VariableDeclarationStatement@@HashEntry entry=oldEntries[i]; @AT@ 22846 @LENGTH@ 15
------------INS SimpleType@@HashEntry @TO@ ParameterizedType@@HashEntry<K,V> @AT@ 22846 @LENGTH@ 9
------------INS SimpleType@@K @TO@ ParameterizedType@@HashEntry<K,V> @AT@ 22856 @LENGTH@ 1
------------INS SimpleType@@V @TO@ ParameterizedType@@HashEntry<K,V> @AT@ 22859 @LENGTH@ 1
------UPD IfStatement@@if (entry != null) {  oldEntries[i]=null;  do {    HashEntry next=entry.next;    int index=hashIndex(entry.hashCode,newCapacity);    entry.next=newEntries[index];    newEntries[index]=entry;    entry=next;  } while (entry != null);} @TO@ if (entry != null) {  oldEntries[i]=null;  do {    HashEntry<K,V> next=entry.next;    int index=hashIndex(entry.hashCode,newCapacity);    entry.next=newEntries[index];    newEntries[index]=entry;    entry=next;  } while (entry != null);} @AT@ 22883 @LENGTH@ 431
---------UPD Block@@ThenBody:{  oldEntries[i]=null;  do {    HashEntry next=entry.next;    int index=hashIndex(entry.hashCode,newCapacity);    entry.next=newEntries[index];    newEntries[index]=entry;    entry=next;  } while (entry != null);} @TO@ ThenBody:{  oldEntries[i]=null;  do {    HashEntry<K,V> next=entry.next;    int index=hashIndex(entry.hashCode,newCapacity);    entry.next=newEntries[index];    newEntries[index]=entry;    entry=next;  } while (entry != null);} @AT@ 22902 @LENGTH@ 412
------------UPD DoStatement@@do {  HashEntry next=entry.next;  int index=hashIndex(entry.hashCode,newCapacity);  entry.next=newEntries[index];  newEntries[index]=entry;  entry=next;} while (entry != null); @TO@ do {  HashEntry<K,V> next=entry.next;  int index=hashIndex(entry.hashCode,newCapacity);  entry.next=newEntries[index];  newEntries[index]=entry;  entry=next;} while (entry != null); @AT@ 22973 @LENGTH@ 323
---------------UPD VariableDeclarationStatement@@HashEntry next=entry.next; @TO@ HashEntry<K,V> next=entry.next; @AT@ 23002 @LENGTH@ 28
------------------DEL SimpleType@@HashEntry @AT@ 23002 @LENGTH@ 9
------------------INS ParameterizedType@@HashEntry<K,V> @TO@ VariableDeclarationStatement@@HashEntry next=entry.next; @AT@ 23020 @LENGTH@ 15
---------------------INS SimpleType@@HashEntry @TO@ ParameterizedType@@HashEntry<K,V> @AT@ 23020 @LENGTH@ 9
---------------------INS SimpleType@@K @TO@ ParameterizedType@@HashEntry<K,V> @AT@ 23030 @LENGTH@ 1
---------------------INS SimpleType@@V @TO@ ParameterizedType@@HashEntry<K,V> @AT@ 23033 @LENGTH@ 1


UPD SynchronizedStatement@@synchronized (this) {  start=false;  stopped=true;  stdinStream.close();} @TO@ synchronized (this) {  start=false;  stopped=true;  if (stdinStream != null)   stdinStream.close();} @AT@ 5069 @LENGTH@ 119
---UPD Block@@SyncBody:{  start=false;  stopped=true;  stdinStream.close();} @TO@ SyncBody:{  start=false;  stopped=true;  if (stdinStream != null)   stdinStream.close();} @AT@ 5089 @LENGTH@ 99
------INS IfStatement@@if (stdinStream != null) stdinStream.close(); @TO@ Block@@SyncBody:{  start=false;  stopped=true;  stdinStream.close();} @AT@ 5158 @LENGTH@ 61
---------INS InfixExpression@@stdinStream != null @TO@ IfStatement@@if (stdinStream != null) stdinStream.close(); @AT@ 5162 @LENGTH@ 19
------------INS SimpleName@@stdinStream @TO@ InfixExpression@@stdinStream != null @AT@ 5162 @LENGTH@ 11
------------INS Operator@@!= @TO@ InfixExpression@@stdinStream != null @AT@ 5173 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@stdinStream != null @AT@ 5177 @LENGTH@ 4
---------INS Block@@ThenBody:stdinStream.close(); @TO@ IfStatement@@if (stdinStream != null) stdinStream.close(); @AT@ 5199 @LENGTH@ 20
------------MOV ExpressionStatement@@MethodInvocation:stdinStream.close() @TO@ Block@@ThenBody:stdinStream.close(); @AT@ 5158 @LENGTH@ 20


INS MethodDeclaration@@protected, boolean, MethodName:canRunOnThisPlatform,  @TO@ TypeDeclaration@@[public]ManagedServiceUrlPathTest, ContextTestSupport @AT@ 2267 @LENGTH@ 142
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:canRunOnThisPlatform,  @AT@ 2267 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:canRunOnThisPlatform,  @AT@ 2277 @LENGTH@ 7
---INS SimpleName@@MethodName:canRunOnThisPlatform @TO@ MethodDeclaration@@protected, boolean, MethodName:canRunOnThisPlatform,  @AT@ 2285 @LENGTH@ 20
---INS ReturnStatement@@InfixExpression:!isJavaVendor("IBM") && !isJavaVendor("HP") @TO@ MethodDeclaration@@protected, boolean, MethodName:canRunOnThisPlatform,  @AT@ 2352 @LENGTH@ 51
------INS InfixExpression@@!isJavaVendor("IBM") && !isJavaVendor("HP") @TO@ ReturnStatement@@InfixExpression:!isJavaVendor("IBM") && !isJavaVendor("HP") @AT@ 2359 @LENGTH@ 43
---------INS PrefixExpression@@!isJavaVendor("IBM") @TO@ InfixExpression@@!isJavaVendor("IBM") && !isJavaVendor("HP") @AT@ 2359 @LENGTH@ 20
------------INS Operator@@! @TO@ PrefixExpression@@!isJavaVendor("IBM") @AT@ 2359 @LENGTH@ 1
------------INS MethodInvocation@@isJavaVendor("IBM") @TO@ PrefixExpression@@!isJavaVendor("IBM") @AT@ 2360 @LENGTH@ 19
---------------INS SimpleName@@MethodName:isJavaVendor:["IBM"] @TO@ MethodInvocation@@isJavaVendor("IBM") @AT@ 2360 @LENGTH@ 19
------------------INS StringLiteral@@"IBM" @TO@ SimpleName@@MethodName:isJavaVendor:["IBM"] @AT@ 2373 @LENGTH@ 5
---------INS Operator@@&& @TO@ InfixExpression@@!isJavaVendor("IBM") && !isJavaVendor("HP") @AT@ 2379 @LENGTH@ 2
---------INS PrefixExpression@@!isJavaVendor("HP") @TO@ InfixExpression@@!isJavaVendor("IBM") && !isJavaVendor("HP") @AT@ 2383 @LENGTH@ 19
------------INS Operator@@! @TO@ PrefixExpression@@!isJavaVendor("HP") @AT@ 2383 @LENGTH@ 1
------------INS MethodInvocation@@isJavaVendor("HP") @TO@ PrefixExpression@@!isJavaVendor("HP") @AT@ 2384 @LENGTH@ 18
---------------INS SimpleName@@MethodName:isJavaVendor:["HP"] @TO@ MethodInvocation@@isJavaVendor("HP") @AT@ 2384 @LENGTH@ 18
------------------INS StringLiteral@@"HP" @TO@ SimpleName@@MethodName:isJavaVendor:["HP"] @AT@ 2397 @LENGTH@ 4


UPD IfStatement@@if (deploymentItems == null) log.warnf("No deployment items found for deployment: %s",deploymentName); @TO@ if (deploymentItems == null) {  log.warnf("No deployment items found for deployment: %s",deploymentName);  return;} @AT@ 7936 @LENGTH@ 115
---UPD Block@@ThenBody:log.warnf("No deployment items found for deployment: %s",deploymentName); @TO@ ThenBody:{  log.warnf("No deployment items found for deployment: %s",deploymentName);  return;} @AT@ 7977 @LENGTH@ 74
------INS ReturnStatement@@ @TO@ Block@@ThenBody:log.warnf("No deployment items found for deployment: %s",deploymentName); @AT@ 8066 @LENGTH@ 7


MOV IfStatement@@if (pos == 0) {  return name;} else {  pos=name.lastIndexOf(File.separator);} @TO@ MethodDeclaration@@public, static, String, MethodName:onlyPath, String name,  @AT@ 4547 @LENGTH@ 165
---UPD InfixExpression@@pos == 0 @TO@ pos == -1 @AT@ 4551 @LENGTH@ 8
------INS PrefixExpression@@-1 @TO@ InfixExpression@@pos == 0 @AT@ 4485 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 4485 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 4486 @LENGTH@ 1
------DEL NumberLiteral@@0 @AT@ 4558 @LENGTH@ 1
---DEL Block@@ThenBody:{  return name;} @AT@ 4561 @LENGTH@ 82
------DEL ReturnStatement@@SimpleName:name @AT@ 4621 @LENGTH@ 12
---------DEL SimpleName@@name @AT@ 4628 @LENGTH@ 4
---UPD Block@@ElseBody:{  pos=name.lastIndexOf(File.separator);} @TO@ ThenBody:{  pos=name.lastIndexOf(File.separator);} @AT@ 4649 @LENGTH@ 63


INS ReturnStatement@@PrefixExpression:!name.startsWith("org.apache.camel.core.osgi.other") @TO@ MethodDeclaration@@protected, boolean, MethodName:isLoadableClass, String name,  @AT@ 4209 @LENGTH@ 60
---INS PrefixExpression@@!name.startsWith("org.apache.camel.core.osgi.other") @TO@ ReturnStatement@@PrefixExpression:!name.startsWith("org.apache.camel.core.osgi.other") @AT@ 4216 @LENGTH@ 52
------MOV MethodInvocation@@name.startsWith("org.apache.camel.core.osgi.other") @TO@ PrefixExpression@@!name.startsWith("org.apache.camel.core.osgi.other") @AT@ 4213 @LENGTH@ 51
------INS Operator@@! @TO@ PrefixExpression@@!name.startsWith("org.apache.camel.core.osgi.other") @AT@ 4216 @LENGTH@ 1


UPD IfStatement@@if (handoffExecutor == null) {  final ServiceName handoffExecutorName=JBOSS_THREAD_EXECUTOR.append(handoffExecutor);  serviceBuilder.addDependency(handoffExecutorName,Executor.class,service.getHandoffExecutorInjector());} @TO@ if (handoffExecutor != null) {  final ServiceName handoffExecutorName=JBOSS_THREAD_EXECUTOR.append(handoffExecutor);  serviceBuilder.addDependency(handoffExecutorName,Executor.class,service.getHandoffExecutorInjector());} @AT@ 5768 @LENGTH@ 256
---UPD InfixExpression@@handoffExecutor == null @TO@ handoffExecutor != null @AT@ 5772 @LENGTH@ 23
------UPD Operator@@== @TO@ != @AT@ 5787 @LENGTH@ 2


DEL MethodDeclaration@@protected, boolean, MethodName:useJmx,  @AT@ 1936 @LENGTH@ 55
---DEL Modifier@@protected @AT@ 1936 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1946 @LENGTH@ 7
---DEL SimpleName@@MethodName:useJmx @AT@ 1954 @LENGTH@ 6
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1973 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1980 @LENGTH@ 4


UPD FieldDeclaration@@static, final, String, [RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @TO@ static, final, String, [RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @AT@ 8199 @LENGTH@ 94
---UPD VariableDeclarationFragment@@RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8219 @LENGTH@ 73
------UPD StringLiteral@@"http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ "https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8233 @LENGTH@ 59


UPD EnhancedForStatement@@for (MBeanServer server : (List<MBeanServer>)MBeanServerFactory.findMBeanServer(null)) {  MBeanServerFactory.releaseMBeanServer(server);} @TO@ for (MBeanServer server : MBeanServerFactory.findMBeanServer(null)) {  MBeanServerFactory.releaseMBeanServer(server);} @AT@ 8512 @LENGTH@ 157
---DEL CastExpression@@(List<MBeanServer>)MBeanServerFactory.findMBeanServer(null) @AT@ 8538 @LENGTH@ 59
------DEL ParameterizedType@@List<MBeanServer> @AT@ 8539 @LENGTH@ 17
---------DEL SimpleType@@List @AT@ 8539 @LENGTH@ 4
---------DEL SimpleType@@MBeanServer @AT@ 8544 @LENGTH@ 11
---MOV MethodInvocation@@MBeanServerFactory.findMBeanServer(null) @TO@ EnhancedForStatement@@for (MBeanServer server : (List<MBeanServer>)MBeanServerFactory.findMBeanServer(null)) {  MBeanServerFactory.releaseMBeanServer(server);} @AT@ 8557 @LENGTH@ 40


UPD FieldDeclaration@@static, final, String, [RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @TO@ static, final, String, [RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @AT@ 8199 @LENGTH@ 94
---UPD VariableDeclarationFragment@@RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8219 @LENGTH@ 73
------UPD StringLiteral@@"http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ "https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8233 @LENGTH@ 59


INS MethodDeclaration@@private, String, MethodName:encode, String in,  @TO@ TypeDeclaration@@[public]CommonsClientRequest, [ClientRequest] @AT@ 2010 @LENGTH@ 159
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2010 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2018 @LENGTH@ 6
---INS SimpleName@@MethodName:encode @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2025 @LENGTH@ 6
---INS SingleVariableDeclaration@@String in @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2032 @LENGTH@ 9
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String in @AT@ 2032 @LENGTH@ 6
------INS SimpleName@@in @TO@ SingleVariableDeclaration@@String in @AT@ 2039 @LENGTH@ 2
---INS TryStatement@@try {  return URLEncoder.encode(in,"UTF-8");} catch (UnsupportedEncodingException wontHappen) {  return in;} @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2047 @LENGTH@ 119
------INS ReturnStatement@@MethodInvocation:URLEncoder.encode(in,"UTF-8") @TO@ TryStatement@@try {  return URLEncoder.encode(in,"UTF-8");} catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2056 @LENGTH@ 38
---------INS MethodInvocation@@URLEncoder.encode(in,"UTF-8") @TO@ ReturnStatement@@MethodInvocation:URLEncoder.encode(in,"UTF-8") @AT@ 2063 @LENGTH@ 30
------------INS SimpleName@@Name:URLEncoder @TO@ MethodInvocation@@URLEncoder.encode(in,"UTF-8") @AT@ 2063 @LENGTH@ 10
------------INS SimpleName@@MethodName:encode:[in, "UTF-8"] @TO@ MethodInvocation@@URLEncoder.encode(in,"UTF-8") @AT@ 2074 @LENGTH@ 19
---------------INS SimpleName@@in @TO@ SimpleName@@MethodName:encode:[in, "UTF-8"] @AT@ 2081 @LENGTH@ 2
---------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:encode:[in, "UTF-8"] @AT@ 2085 @LENGTH@ 7
------INS CatchClause@@catch (UnsupportedEncodingException wontHappen) {  return in;} @TO@ TryStatement@@try {  return URLEncoder.encode(in,"UTF-8");} catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2099 @LENGTH@ 67
---------INS SingleVariableDeclaration@@UnsupportedEncodingException wontHappen @TO@ CatchClause@@catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2106 @LENGTH@ 39
------------INS SimpleType@@UnsupportedEncodingException @TO@ SingleVariableDeclaration@@UnsupportedEncodingException wontHappen @AT@ 2106 @LENGTH@ 28
------------INS SimpleName@@wontHappen @TO@ SingleVariableDeclaration@@UnsupportedEncodingException wontHappen @AT@ 2135 @LENGTH@ 10
---------INS ReturnStatement@@SimpleName:in @TO@ CatchClause@@catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2152 @LENGTH@ 10
------------INS SimpleName@@in @TO@ ReturnStatement@@SimpleName:in @AT@ 2159 @LENGTH@ 2


INS ExpressionStatement@@MethodInvocation:assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @TO@ MethodDeclaration@@public, void, MethodName:getQueryParameters,  @AT@ 2034 @LENGTH@ 78
---INS MethodInvocation@@assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @AT@ 2034 @LENGTH@ 77
------INS SimpleName@@MethodName:assertEquals:["pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token")] @TO@ MethodInvocation@@assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @AT@ 2034 @LENGTH@ 77
---------INS StringLiteral@@"pipe%7Cdelimited%7Ctoken" @TO@ SimpleName@@MethodName:assertEquals:["pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token")] @AT@ 2047 @LENGTH@ 26
---------INS MethodInvocation@@queryParameters.get("access_token") @TO@ SimpleName@@MethodName:assertEquals:["pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token")] @AT@ 2075 @LENGTH@ 35
------------INS SimpleName@@Name:queryParameters @TO@ MethodInvocation@@queryParameters.get("access_token") @AT@ 2075 @LENGTH@ 15
------------INS SimpleName@@MethodName:get:["access_token"] @TO@ MethodInvocation@@queryParameters.get("access_token") @AT@ 2091 @LENGTH@ 19
---------------INS StringLiteral@@"access_token" @TO@ SimpleName@@MethodName:get:["access_token"] @AT@ 2095 @LENGTH@ 14


UPD TypeDeclaration@@[public]TestPriorityBuffer, AbstractTestCollection<E> @TO@ [@SuppressWarnings("boxing"), public]TestPriorityBuffer, AbstractTestCollection<E> @AT@ 1548 @LENGTH@ 12462
---INS SingleMemberAnnotation@@@SuppressWarnings("boxing") @TO@ TypeDeclaration@@[public]TestPriorityBuffer, AbstractTestCollection<E> @AT@ 1548 @LENGTH@ 27


UPD IfStatement@@if (reader == null) {  Thread.sleep(delay);} @TO@ if (reader == null) {  Thread.sleep(delay);} else {  position=end ? file.length() : 0;  last=System.currentTimeMillis();  reader.seek(position);} @AT@ 4256 @LENGTH@ 80
---INS Block@@ElseBody:{  position=end ? file.length() : 0;  last=System.currentTimeMillis();  reader.seek(position);} @TO@ IfStatement@@if (reader == null) {  Thread.sleep(delay);} @AT@ 4342 @LENGTH@ 249
------MOV ExpressionStatement@@Assignment:position=end ? file.length() : 0 @TO@ Block@@ElseBody:{  position=end ? file.length() : 0;  last=System.currentTimeMillis();  reader.seek(position);} @AT@ 4412 @LENGTH@ 35
------MOV ExpressionStatement@@Assignment:last=System.currentTimeMillis() @TO@ Block@@ElseBody:{  position=end ? file.length() : 0;  last=System.currentTimeMillis();  reader.seek(position);} @AT@ 4460 @LENGTH@ 34
------MOV ExpressionStatement@@MethodInvocation:reader.seek(position) @TO@ Block@@ElseBody:{  position=end ? file.length() : 0;  last=System.currentTimeMillis();  reader.seek(position);} @AT@ 4507 @LENGTH@ 22


UPD ExpressionStatement@@Assignment:propURL=new File(confDir,SYSTEM_PROPERTIES_FILE_VALUE).toURL() @TO@ Assignment:propURL=new File(confDir,SYSTEM_PROPERTIES_FILE_VALUE).toURI().toURL() @AT@ 18238 @LENGTH@ 66
---UPD Assignment@@propURL=new File(confDir,SYSTEM_PROPERTIES_FILE_VALUE).toURL() @TO@ propURL=new File(confDir,SYSTEM_PROPERTIES_FILE_VALUE).toURI().toURL() @AT@ 18238 @LENGTH@ 65
------UPD MethodInvocation@@new File(confDir,SYSTEM_PROPERTIES_FILE_VALUE).toURL() @TO@ new File(confDir,SYSTEM_PROPERTIES_FILE_VALUE).toURI().toURL() @AT@ 18248 @LENGTH@ 55
---------INS MethodInvocation@@MethodName:toURI:[] @TO@ MethodInvocation@@new File(confDir,SYSTEM_PROPERTIES_FILE_VALUE).toURL() @AT@ 18248 @LENGTH@ 55


UPD ExpressionStatement@@MethodInvocation:ObjectHelper.close(in,"in",LOG) @TO@ MethodInvocation:IOHelper.close(in,"in",LOG) @AT@ 5391 @LENGTH@ 34
---UPD MethodInvocation@@ObjectHelper.close(in,"in",LOG) @TO@ IOHelper.close(in,"in",LOG) @AT@ 5391 @LENGTH@ 33
------UPD SimpleName@@Name:ObjectHelper @TO@ Name:IOHelper @AT@ 5391 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:propURL=new File(confDir,CONFIG_PROPERTIES_FILE_VALUE).toURL() @TO@ Assignment:propURL=new File(confDir,CONFIG_PROPERTIES_FILE_VALUE).toURI().toURL() @AT@ 22465 @LENGTH@ 66
---UPD Assignment@@propURL=new File(confDir,CONFIG_PROPERTIES_FILE_VALUE).toURL() @TO@ propURL=new File(confDir,CONFIG_PROPERTIES_FILE_VALUE).toURI().toURL() @AT@ 22465 @LENGTH@ 65
------UPD MethodInvocation@@new File(confDir,CONFIG_PROPERTIES_FILE_VALUE).toURL() @TO@ new File(confDir,CONFIG_PROPERTIES_FILE_VALUE).toURI().toURL() @AT@ 22475 @LENGTH@ 55
---------INS MethodInvocation@@MethodName:toURI:[] @TO@ MethodInvocation@@new File(confDir,CONFIG_PROPERTIES_FILE_VALUE).toURL() @AT@ 22483 @LENGTH@ 55


UPD ExpressionStatement@@MethodInvocation:logger.debug("Restoring log level setting for: " + classes) @TO@ MethodInvocation:logger.debug("Restoring log level setting for: " + Arrays.asList(classes)) @AT@ 1502 @LENGTH@ 60
---UPD MethodInvocation@@logger.debug("Restoring log level setting for: " + classes) @TO@ logger.debug("Restoring log level setting for: " + Arrays.asList(classes)) @AT@ 1502 @LENGTH@ 59
------UPD SimpleName@@MethodName:debug:["Restoring log level setting for: " + classes] @TO@ MethodName:debug:["Restoring log level setting for: " + Arrays.asList(classes)] @AT@ 1509 @LENGTH@ 52
---------UPD InfixExpression@@"Restoring log level setting for: " + classes @TO@ "Restoring log level setting for: " + Arrays.asList(classes) @AT@ 1515 @LENGTH@ 45
------------DEL SimpleName@@classes @AT@ 1553 @LENGTH@ 7
------------INS MethodInvocation@@Arrays.asList(classes) @TO@ InfixExpression@@"Restoring log level setting for: " + classes @AT@ 1594 @LENGTH@ 22
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(classes) @AT@ 1594 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[classes] @TO@ MethodInvocation@@Arrays.asList(classes) @AT@ 1601 @LENGTH@ 15
------------------INS SimpleName@@classes @TO@ SimpleName@@MethodName:asList:[classes] @AT@ 1608 @LENGTH@ 7


DEL MethodDeclaration@@protected, boolean, MethodName:useJmx,  @AT@ 1362 @LENGTH@ 55
---DEL Modifier@@protected @AT@ 1362 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1372 @LENGTH@ 7
---DEL SimpleName@@MethodName:useJmx @AT@ 1380 @LENGTH@ 6
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1399 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1406 @LENGTH@ 4


DEL FieldDeclaration@@private, static, volatile, boolean, [txA] @AT@ 1452 @LENGTH@ 36
---DEL Modifier@@private @AT@ 1452 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1460 @LENGTH@ 6
---DEL Modifier@@volatile @AT@ 1467 @LENGTH@ 8
---DEL PrimitiveType@@boolean @AT@ 1476 @LENGTH@ 7
---DEL VariableDeclarationFragment@@txA @AT@ 1484 @LENGTH@ 3
------DEL SimpleName@@txA @AT@ 1484 @LENGTH@ 3


DEL ExpressionStatement@@MethodInvocation:assertEquals(testee.elementHash(),testee1.elementHash()) @AT@ 5667 @LENGTH@ 58
---DEL MethodInvocation@@assertEquals(testee.elementHash(),testee1.elementHash()) @AT@ 5667 @LENGTH@ 57
------DEL SimpleName@@MethodName:assertEquals:[testee.elementHash(), testee1.elementHash()] @AT@ 5667 @LENGTH@ 57
---------DEL MethodInvocation@@testee.elementHash() @AT@ 5680 @LENGTH@ 20
------------DEL SimpleName@@Name:testee @AT@ 5680 @LENGTH@ 6
------------DEL SimpleName@@MethodName:elementHash:[] @AT@ 5687 @LENGTH@ 13
---------DEL MethodInvocation@@testee1.elementHash() @AT@ 5702 @LENGTH@ 21
------------DEL SimpleName@@Name:testee1 @AT@ 5702 @LENGTH@ 7
------------DEL SimpleName@@MethodName:elementHash:[] @AT@ 5710 @LENGTH@ 13


UPD FieldDeclaration@@protected, int, [numMessages=1000] @TO@ protected, int, [numMessages=200] @AT@ 1365 @LENGTH@ 33
---UPD VariableDeclarationFragment@@numMessages=1000 @TO@ numMessages=200 @AT@ 1379 @LENGTH@ 18
------UPD NumberLiteral@@1000 @TO@ 200 @AT@ 1393 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("direct:start").aggregate().constant(true).groupExchanges().completionSize(3).to("mock:result").end() @TO@ MethodInvocation:from("direct:start").aggregate(constant(true)).groupExchanges().completionSize(3).to("mock:result").end() @AT@ 2789 @LENGTH@ 174
---UPD MethodInvocation@@from("direct:start").aggregate().constant(true).groupExchanges().completionSize(3).to("mock:result").end() @TO@ from("direct:start").aggregate(constant(true)).groupExchanges().completionSize(3).to("mock:result").end() @AT@ 2789 @LENGTH@ 173
------UPD MethodInvocation@@MethodName:constant:[true] @TO@ MethodName:aggregate:[constant(true)] @AT@ 2789 @LENGTH@ 68
---------INS MethodInvocation@@constant(true) @TO@ MethodInvocation@@MethodName:constant:[true] @AT@ 2841 @LENGTH@ 14
------------INS SimpleName@@MethodName:constant:[true] @TO@ MethodInvocation@@constant(true) @AT@ 2841 @LENGTH@ 14
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:constant:[true] @AT@ 2850 @LENGTH@ 4
---------DEL BooleanLiteral@@true @AT@ 2852 @LENGTH@ 4
------DEL MethodInvocation@@MethodName:aggregate:[] @AT@ 2789 @LENGTH@ 53


INS MethodDeclaration@@public, void, MethodName:testAddDuplicateOrdered,  @TO@ TypeDeclaration@@[public]OrderedCompositeTests,  @AT@ 2482 @LENGTH@ 449
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAddDuplicateOrdered,  @AT@ 2482 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAddDuplicateOrdered,  @AT@ 2489 @LENGTH@ 4
---INS SimpleName@@MethodName:testAddDuplicateOrdered @TO@ MethodDeclaration@@public, void, MethodName:testAddDuplicateOrdered,  @AT@ 2494 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:list.setItems(Arrays.asList((Object)"1")) @TO@ MethodDeclaration@@public, void, MethodName:testAddDuplicateOrdered,  @AT@ 2524 @LENGTH@ 43
------INS MethodInvocation@@list.setItems(Arrays.asList((Object)"1")) @TO@ ExpressionStatement@@MethodInvocation:list.setItems(Arrays.asList((Object)"1")) @AT@ 2524 @LENGTH@ 42
---------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.setItems(Arrays.asList((Object)"1")) @AT@ 2524 @LENGTH@ 4
---------INS SimpleName@@MethodName:setItems:[Arrays.asList((Object)"1")] @TO@ MethodInvocation@@list.setItems(Arrays.asList((Object)"1")) @AT@ 2529 @LENGTH@ 37
------------INS MethodInvocation@@Arrays.asList((Object)"1") @TO@ SimpleName@@MethodName:setItems:[Arrays.asList((Object)"1")] @AT@ 2538 @LENGTH@ 27
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList((Object)"1") @AT@ 2538 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[(Object)"1"] @TO@ MethodInvocation@@Arrays.asList((Object)"1") @AT@ 2545 @LENGTH@ 20
------------------INS CastExpression@@(Object)"1" @TO@ SimpleName@@MethodName:asList:[(Object)"1"] @AT@ 2552 @LENGTH@ 12
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)"1" @AT@ 2553 @LENGTH@ 6
---------------------INS StringLiteral@@"1" @TO@ CastExpression@@(Object)"1" @AT@ 2561 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:list.add(new Ordered(){
  public int getOrder(){
    return 1;
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:testAddDuplicateOrdered,  @AT@ 2570 @LENGTH@ 76
------INS MethodInvocation@@list.add(new Ordered(){
  public int getOrder(){
    return 1;
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:list.add(new Ordered(){
  public int getOrder(){
    return 1;
  }
}
) @AT@ 2570 @LENGTH@ 75
---------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(new Ordered(){
  public int getOrder(){
    return 1;
  }
}
) @AT@ 2570 @LENGTH@ 4
---------INS SimpleName@@MethodName:add:[new Ordered(){
  public int getOrder(){
    return 1;
  }
}
] @TO@ MethodInvocation@@list.add(new Ordered(){
  public int getOrder(){
    return 1;
  }
}
) @AT@ 2575 @LENGTH@ 70
------------INS ClassInstanceCreation@@Ordered[] @TO@ SimpleName@@MethodName:add:[new Ordered(){
  public int getOrder(){
    return 1;
  }
}
] @AT@ 2579 @LENGTH@ 65
---------------INS New@@new @TO@ ClassInstanceCreation@@Ordered[] @AT@ 2579 @LENGTH@ 3
---------------INS SimpleType@@Ordered @TO@ ClassInstanceCreation@@Ordered[] @AT@ 2583 @LENGTH@ 7
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Ordered[] @AT@ 2593 @LENGTH@ 51
------------------INS MethodDeclaration@@public, int, MethodName:getOrder,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2598 @LENGTH@ 42
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 2598 @LENGTH@ 6
---------------------INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 2605 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:getOrder @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 2609 @LENGTH@ 8
---------------------INS ReturnStatement@@NumberLiteral:1 @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 2626 @LENGTH@ 9
------------------------INS NumberLiteral@@1 @TO@ ReturnStatement@@NumberLiteral:1 @AT@ 2633 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:list.add(new Ordered(){
  public int getOrder(){
    return 1;
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:testAddDuplicateOrdered,  @AT@ 2649 @LENGTH@ 76
------INS MethodInvocation@@list.add(new Ordered(){
  public int getOrder(){
    return 1;
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:list.add(new Ordered(){
  public int getOrder(){
    return 1;
  }
}
) @AT@ 2649 @LENGTH@ 75
---------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(new Ordered(){
  public int getOrder(){
    return 1;
  }
}
) @AT@ 2649 @LENGTH@ 4
---------INS SimpleName@@MethodName:add:[new Ordered(){
  public int getOrder(){
    return 1;
  }
}
] @TO@ MethodInvocation@@list.add(new Ordered(){
  public int getOrder(){
    return 1;
  }
}
) @AT@ 2654 @LENGTH@ 70
------------INS ClassInstanceCreation@@Ordered[] @TO@ SimpleName@@MethodName:add:[new Ordered(){
  public int getOrder(){
    return 1;
  }
}
] @AT@ 2658 @LENGTH@ 65
---------------INS New@@new @TO@ ClassInstanceCreation@@Ordered[] @AT@ 2658 @LENGTH@ 3
---------------INS SimpleType@@Ordered @TO@ ClassInstanceCreation@@Ordered[] @AT@ 2662 @LENGTH@ 7
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Ordered[] @AT@ 2672 @LENGTH@ 51
------------------INS MethodDeclaration@@public, int, MethodName:getOrder,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2677 @LENGTH@ 42
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 2677 @LENGTH@ 6
---------------------INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 2684 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:getOrder @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 2688 @LENGTH@ 8
---------------------INS ReturnStatement@@NumberLiteral:1 @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 2705 @LENGTH@ 9
------------------------INS NumberLiteral@@1 @TO@ ReturnStatement@@NumberLiteral:1 @AT@ 2712 @LENGTH@ 1
---INS VariableDeclarationStatement@@Iterator<Object> iterator=list.iterator(); @TO@ MethodDeclaration@@public, void, MethodName:testAddDuplicateOrdered,  @AT@ 2728 @LENGTH@ 44
------INS ParameterizedType@@Iterator<Object> @TO@ VariableDeclarationStatement@@Iterator<Object> iterator=list.iterator(); @AT@ 2728 @LENGTH@ 16
---------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<Object> @AT@ 2728 @LENGTH@ 8
---------INS SimpleType@@Object @TO@ ParameterizedType@@Iterator<Object> @AT@ 2737 @LENGTH@ 6
------INS VariableDeclarationFragment@@iterator=list.iterator() @TO@ VariableDeclarationStatement@@Iterator<Object> iterator=list.iterator(); @AT@ 2745 @LENGTH@ 26
---------INS SimpleName@@iterator @TO@ VariableDeclarationFragment@@iterator=list.iterator() @AT@ 2745 @LENGTH@ 8
---------INS MethodInvocation@@list.iterator() @TO@ VariableDeclarationFragment@@iterator=list.iterator() @AT@ 2756 @LENGTH@ 15
------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.iterator() @AT@ 2756 @LENGTH@ 4
------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@list.iterator() @AT@ 2761 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,((Ordered)iterator.next()).getOrder()) @TO@ MethodDeclaration@@public, void, MethodName:testAddDuplicateOrdered,  @AT@ 2775 @LENGTH@ 56
------INS MethodInvocation@@assertEquals(1,((Ordered)iterator.next()).getOrder()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,((Ordered)iterator.next()).getOrder()) @AT@ 2775 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertEquals:[1, ((Ordered)iterator.next()).getOrder()] @TO@ MethodInvocation@@assertEquals(1,((Ordered)iterator.next()).getOrder()) @AT@ 2775 @LENGTH@ 55
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, ((Ordered)iterator.next()).getOrder()] @AT@ 2788 @LENGTH@ 1
------------INS MethodInvocation@@((Ordered)iterator.next()).getOrder() @TO@ SimpleName@@MethodName:assertEquals:[1, ((Ordered)iterator.next()).getOrder()] @AT@ 2791 @LENGTH@ 38
---------------INS ParenthesizedExpression@@((Ordered)iterator.next()) @TO@ MethodInvocation@@((Ordered)iterator.next()).getOrder() @AT@ 2791 @LENGTH@ 27
------------------INS CastExpression@@(Ordered)iterator.next() @TO@ ParenthesizedExpression@@((Ordered)iterator.next()) @AT@ 2792 @LENGTH@ 25
---------------------INS SimpleType@@Ordered @TO@ CastExpression@@(Ordered)iterator.next() @AT@ 2793 @LENGTH@ 7
---------------------INS MethodInvocation@@iterator.next() @TO@ CastExpression@@(Ordered)iterator.next() @AT@ 2802 @LENGTH@ 15
------------------------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.next() @AT@ 2802 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iterator.next() @AT@ 2811 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getOrder:[] @TO@ MethodInvocation@@((Ordered)iterator.next()).getOrder() @AT@ 2819 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,((Ordered)iterator.next()).getOrder()) @TO@ MethodDeclaration@@public, void, MethodName:testAddDuplicateOrdered,  @AT@ 2834 @LENGTH@ 56
------INS MethodInvocation@@assertEquals(1,((Ordered)iterator.next()).getOrder()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,((Ordered)iterator.next()).getOrder()) @AT@ 2834 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertEquals:[1, ((Ordered)iterator.next()).getOrder()] @TO@ MethodInvocation@@assertEquals(1,((Ordered)iterator.next()).getOrder()) @AT@ 2834 @LENGTH@ 55
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, ((Ordered)iterator.next()).getOrder()] @AT@ 2847 @LENGTH@ 1
------------INS MethodInvocation@@((Ordered)iterator.next()).getOrder() @TO@ SimpleName@@MethodName:assertEquals:[1, ((Ordered)iterator.next()).getOrder()] @AT@ 2850 @LENGTH@ 38
---------------INS ParenthesizedExpression@@((Ordered)iterator.next()) @TO@ MethodInvocation@@((Ordered)iterator.next()).getOrder() @AT@ 2850 @LENGTH@ 27
------------------INS CastExpression@@(Ordered)iterator.next() @TO@ ParenthesizedExpression@@((Ordered)iterator.next()) @AT@ 2851 @LENGTH@ 25
---------------------INS SimpleType@@Ordered @TO@ CastExpression@@(Ordered)iterator.next() @AT@ 2852 @LENGTH@ 7
---------------------INS MethodInvocation@@iterator.next() @TO@ CastExpression@@(Ordered)iterator.next() @AT@ 2861 @LENGTH@ 15
------------------------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.next() @AT@ 2861 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iterator.next() @AT@ 2870 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getOrder:[] @TO@ MethodInvocation@@((Ordered)iterator.next()).getOrder() @AT@ 2878 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals("1",iterator.next()) @TO@ MethodDeclaration@@public, void, MethodName:testAddDuplicateOrdered,  @AT@ 2893 @LENGTH@ 35
------INS MethodInvocation@@assertEquals("1",iterator.next()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("1",iterator.next()) @AT@ 2893 @LENGTH@ 34
---------INS SimpleName@@MethodName:assertEquals:["1", iterator.next()] @TO@ MethodInvocation@@assertEquals("1",iterator.next()) @AT@ 2893 @LENGTH@ 34
------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:assertEquals:["1", iterator.next()] @AT@ 2906 @LENGTH@ 3
------------INS MethodInvocation@@iterator.next() @TO@ SimpleName@@MethodName:assertEquals:["1", iterator.next()] @AT@ 2911 @LENGTH@ 15
---------------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.next() @AT@ 2911 @LENGTH@ 8
---------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iterator.next() @AT@ 2920 @LENGTH@ 6


UPD IfStatement@@if (handoffExecutor == null) {  final ServiceName handoffExecutorName=JBOSS_THREAD_EXECUTOR.append(handoffExecutor);  serviceBuilder.addDependency(handoffExecutorName,Executor.class,service.getHandoffExecutorInjector());} @TO@ if (handoffExecutor != null) {  final ServiceName handoffExecutorName=JBOSS_THREAD_EXECUTOR.append(handoffExecutor);  serviceBuilder.addDependency(handoffExecutorName,Executor.class,service.getHandoffExecutorInjector());} @AT@ 6756 @LENGTH@ 256
---UPD InfixExpression@@handoffExecutor == null @TO@ handoffExecutor != null @AT@ 6760 @LENGTH@ 23
------UPD Operator@@== @TO@ != @AT@ 6775 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Exception occurred during stopping UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.") @TO@ MethodInvocation:LOG.warn("Exception occurred during stopping UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.",e) @AT@ 4019 @LENGTH@ 142
---UPD MethodInvocation@@LOG.warn("Exception occurred during stopping UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.") @TO@ LOG.warn("Exception occurred during stopping UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.",e) @AT@ 4019 @LENGTH@ 141
------UPD SimpleName@@MethodName:warn:["Exception occurred during stopping UnitOfWork for Exchange: " + exchange + ". This exception will be ignored."] @TO@ MethodName:warn:["Exception occurred during stopping UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.", e] @AT@ 4023 @LENGTH@ 137
---------INS SimpleName@@e @TO@ SimpleName@@MethodName:warn:["Exception occurred during stopping UnitOfWork for Exchange: " + exchange + ". This exception will be ignored."] @AT@ 4234 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:jpaTemplate=applicationContext.getBean("jpaTemplate",JpaTemplate.class) @TO@ Assignment:jpaTemplate=(JpaTemplate)applicationContext.getBean("jpaTemplate") @AT@ 3915 @LENGTH@ 75
---UPD Assignment@@jpaTemplate=applicationContext.getBean("jpaTemplate",JpaTemplate.class) @TO@ jpaTemplate=(JpaTemplate)applicationContext.getBean("jpaTemplate") @AT@ 3915 @LENGTH@ 74
------DEL MethodInvocation@@applicationContext.getBean("jpaTemplate",JpaTemplate.class) @AT@ 3929 @LENGTH@ 60
------INS CastExpression@@(JpaTemplate)applicationContext.getBean("jpaTemplate") @TO@ Assignment@@jpaTemplate=applicationContext.getBean("jpaTemplate",JpaTemplate.class) @AT@ 3971 @LENGTH@ 55
---------INS SimpleType@@JpaTemplate @TO@ CastExpression@@(JpaTemplate)applicationContext.getBean("jpaTemplate") @AT@ 3972 @LENGTH@ 11
---------INS MethodInvocation@@applicationContext.getBean("jpaTemplate") @TO@ CastExpression@@(JpaTemplate)applicationContext.getBean("jpaTemplate") @AT@ 3985 @LENGTH@ 41
------------MOV SimpleName@@Name:applicationContext @TO@ MethodInvocation@@applicationContext.getBean("jpaTemplate") @AT@ 3929 @LENGTH@ 18
------------MOV SimpleName@@MethodName:getBean:["jpaTemplate", JpaTemplate.class] @TO@ MethodInvocation@@applicationContext.getBean("jpaTemplate") @AT@ 3948 @LENGTH@ 41
---------------DEL TypeLiteral@@JpaTemplate.class @AT@ 3971 @LENGTH@ 17


UPD ReturnStatement@@InfixExpression:filename1 == filename2 @TO@ ParenthesizedExpression:(filename1 == null && filename2 == null) @AT@ 41376 @LENGTH@ 30
---INS ParenthesizedExpression@@(filename1 == null && filename2 == null) @TO@ ReturnStatement@@InfixExpression:filename1 == filename2 @AT@ 41383 @LENGTH@ 40
------INS InfixExpression@@filename1 == null && filename2 == null @TO@ ParenthesizedExpression@@(filename1 == null && filename2 == null) @AT@ 41384 @LENGTH@ 38
---------INS InfixExpression@@filename1 == null @TO@ InfixExpression@@filename1 == null && filename2 == null @AT@ 41384 @LENGTH@ 17
------------MOV SimpleName@@filename1 @TO@ InfixExpression@@filename1 == null @AT@ 41383 @LENGTH@ 9
------------MOV Operator@@== @TO@ InfixExpression@@filename1 == null @AT@ 41392 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@filename1 == null @AT@ 41397 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@filename1 == null && filename2 == null @AT@ 41401 @LENGTH@ 2
---------INS InfixExpression@@filename2 == null @TO@ InfixExpression@@filename1 == null && filename2 == null @AT@ 41405 @LENGTH@ 17
------------MOV SimpleName@@filename2 @TO@ InfixExpression@@filename2 == null @AT@ 41396 @LENGTH@ 9
------------INS Operator@@== @TO@ InfixExpression@@filename2 == null @AT@ 41414 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@filename2 == null @AT@ 41418 @LENGTH@ 4
---DEL InfixExpression@@filename1 == filename2 @AT@ 41383 @LENGTH@ 22


DEL MethodDeclaration@@ServerGroupDeploymentPlanBuilder, MethodName:toServerGroup, String serverGroupName,  @AT@ 2254 @LENGTH@ 38
---DEL SimpleType@@ServerGroupDeploymentPlanBuilder @AT@ 2221 @LENGTH@ 32
---DEL SimpleName@@MethodName:toServerGroup @AT@ 2254 @LENGTH@ 13
---DEL SingleVariableDeclaration@@String serverGroupName @AT@ 2268 @LENGTH@ 22
------DEL SimpleType@@String @AT@ 2268 @LENGTH@ 6
------DEL SimpleName@@serverGroupName @AT@ 2275 @LENGTH@ 15


DEL IfStatement@@if (file.exists() && append) {  FileInputStream input=new FileInputStream(file);  System.err.println(IOUtils.toString(input));  System.err.println(input.getChannel().position());} @AT@ 15037 @LENGTH@ 194
---DEL InfixExpression@@file.exists() && append @AT@ 15041 @LENGTH@ 23
------DEL MethodInvocation@@file.exists() @AT@ 15041 @LENGTH@ 13
---------DEL SimpleName@@Name:file @AT@ 15041 @LENGTH@ 4
---------DEL SimpleName@@MethodName:exists:[] @AT@ 15046 @LENGTH@ 8
------DEL Operator@@&& @AT@ 15054 @LENGTH@ 2
------DEL SimpleName@@append @AT@ 15058 @LENGTH@ 6
---DEL Block@@ThenBody:{  FileInputStream input=new FileInputStream(file);  System.err.println(IOUtils.toString(input));  System.err.println(input.getChannel().position());} @AT@ 15066 @LENGTH@ 165
------DEL VariableDeclarationStatement@@FileInputStream input=new FileInputStream(file); @AT@ 15072 @LENGTH@ 50
---------DEL SimpleType@@FileInputStream @AT@ 15072 @LENGTH@ 15
---------DEL VariableDeclarationFragment@@input=new FileInputStream(file) @AT@ 15088 @LENGTH@ 33
------------DEL SimpleName@@input @AT@ 15088 @LENGTH@ 5
------------DEL ClassInstanceCreation@@FileInputStream[file] @AT@ 15096 @LENGTH@ 25
---------------DEL New@@new @AT@ 15096 @LENGTH@ 3
---------------DEL SimpleType@@FileInputStream @AT@ 15100 @LENGTH@ 15
---------------DEL SimpleName@@file @AT@ 15116 @LENGTH@ 4
------DEL ExpressionStatement@@MethodInvocation:System.err.println(IOUtils.toString(input)) @AT@ 15127 @LENGTH@ 44
---------DEL MethodInvocation@@System.err.println(IOUtils.toString(input)) @AT@ 15127 @LENGTH@ 43
------------DEL QualifiedName@@Name:System.err @AT@ 15127 @LENGTH@ 10
------------DEL SimpleName@@MethodName:println:[IOUtils.toString(input)] @AT@ 15138 @LENGTH@ 32
---------------DEL MethodInvocation@@IOUtils.toString(input) @AT@ 15146 @LENGTH@ 23
------------------DEL SimpleName@@Name:IOUtils @AT@ 15146 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:toString:[input] @AT@ 15154 @LENGTH@ 15
---------------------DEL SimpleName@@input @AT@ 15163 @LENGTH@ 5
------DEL ExpressionStatement@@MethodInvocation:System.err.println(input.getChannel().position()) @AT@ 15176 @LENGTH@ 50
---------DEL MethodInvocation@@System.err.println(input.getChannel().position()) @AT@ 15176 @LENGTH@ 49
------------DEL QualifiedName@@Name:System.err @AT@ 15176 @LENGTH@ 10
------------DEL SimpleName@@MethodName:println:[input.getChannel().position()] @AT@ 15187 @LENGTH@ 38
---------------DEL MethodInvocation@@input.getChannel().position() @AT@ 15195 @LENGTH@ 29
------------------DEL MethodInvocation@@MethodName:getChannel:[] @AT@ 15195 @LENGTH@ 18
------------------DEL SimpleName@@Name:input @AT@ 15195 @LENGTH@ 5
------------------DEL SimpleName@@MethodName:position:[] @AT@ 15214 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @TO@ TypeDeclaration@@[public]HttpProxyTest, CamelTestSupport @AT@ 1497 @LENGTH@ 1188
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 1497 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 1504 @LENGTH@ 4
---INS SimpleName@@MethodName:testDifferentHttpProxyConfigured @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 1509 @LENGTH@ 32
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 1551 @LENGTH@ 9
---INS VariableDeclarationStatement@@HttpEndpoint http1=context.getEndpoint("http://www.google.com?proxyHost=myproxy&proxyPort=1234",HttpEndpoint.class); @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 1571 @LENGTH@ 119
------INS SimpleType@@HttpEndpoint @TO@ VariableDeclarationStatement@@HttpEndpoint http1=context.getEndpoint("http://www.google.com?proxyHost=myproxy&proxyPort=1234",HttpEndpoint.class); @AT@ 1571 @LENGTH@ 12
------INS VariableDeclarationFragment@@http1=context.getEndpoint("http://www.google.com?proxyHost=myproxy&proxyPort=1234",HttpEndpoint.class) @TO@ VariableDeclarationStatement@@HttpEndpoint http1=context.getEndpoint("http://www.google.com?proxyHost=myproxy&proxyPort=1234",HttpEndpoint.class); @AT@ 1584 @LENGTH@ 105
---------INS SimpleName@@http1 @TO@ VariableDeclarationFragment@@http1=context.getEndpoint("http://www.google.com?proxyHost=myproxy&proxyPort=1234",HttpEndpoint.class) @AT@ 1584 @LENGTH@ 5
---------INS MethodInvocation@@context.getEndpoint("http://www.google.com?proxyHost=myproxy&proxyPort=1234",HttpEndpoint.class) @TO@ VariableDeclarationFragment@@http1=context.getEndpoint("http://www.google.com?proxyHost=myproxy&proxyPort=1234",HttpEndpoint.class) @AT@ 1592 @LENGTH@ 97
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getEndpoint("http://www.google.com?proxyHost=myproxy&proxyPort=1234",HttpEndpoint.class) @AT@ 1592 @LENGTH@ 7
------------INS SimpleName@@MethodName:getEndpoint:["http://www.google.com?proxyHost=myproxy&proxyPort=1234", HttpEndpoint.class] @TO@ MethodInvocation@@context.getEndpoint("http://www.google.com?proxyHost=myproxy&proxyPort=1234",HttpEndpoint.class) @AT@ 1600 @LENGTH@ 89
---------------INS StringLiteral@@"http://www.google.com?proxyHost=myproxy&proxyPort=1234" @TO@ SimpleName@@MethodName:getEndpoint:["http://www.google.com?proxyHost=myproxy&proxyPort=1234", HttpEndpoint.class] @AT@ 1612 @LENGTH@ 56
---------------INS TypeLiteral@@HttpEndpoint.class @TO@ SimpleName@@MethodName:getEndpoint:["http://www.google.com?proxyHost=myproxy&proxyPort=1234", HttpEndpoint.class] @AT@ 1670 @LENGTH@ 18
---INS VariableDeclarationStatement@@HttpEndpoint http2=context.getEndpoint("http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",HttpEndpoint.class); @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 1699 @LENGTH@ 139
------INS SimpleType@@HttpEndpoint @TO@ VariableDeclarationStatement@@HttpEndpoint http2=context.getEndpoint("http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",HttpEndpoint.class); @AT@ 1699 @LENGTH@ 12
------INS VariableDeclarationFragment@@http2=context.getEndpoint("http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",HttpEndpoint.class) @TO@ VariableDeclarationStatement@@HttpEndpoint http2=context.getEndpoint("http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",HttpEndpoint.class); @AT@ 1712 @LENGTH@ 125
---------INS SimpleName@@http2 @TO@ VariableDeclarationFragment@@http2=context.getEndpoint("http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",HttpEndpoint.class) @AT@ 1712 @LENGTH@ 5
---------INS MethodInvocation@@context.getEndpoint("http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",HttpEndpoint.class) @TO@ VariableDeclarationFragment@@http2=context.getEndpoint("http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",HttpEndpoint.class) @AT@ 1720 @LENGTH@ 117
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getEndpoint("http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",HttpEndpoint.class) @AT@ 1720 @LENGTH@ 7
------------INS SimpleName@@MethodName:getEndpoint:["http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345", HttpEndpoint.class] @TO@ MethodInvocation@@context.getEndpoint("http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",HttpEndpoint.class) @AT@ 1728 @LENGTH@ 109
---------------INS StringLiteral@@"http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345" @TO@ SimpleName@@MethodName:getEndpoint:["http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345", HttpEndpoint.class] @AT@ 1740 @LENGTH@ 76
---------------INS TypeLiteral@@HttpEndpoint.class @TO@ SimpleName@@MethodName:getEndpoint:["http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345", HttpEndpoint.class] @AT@ 1818 @LENGTH@ 18
---INS VariableDeclarationStatement@@HttpClient client1=http1.createHttpClient(); @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 1856 @LENGTH@ 46
------INS SimpleType@@HttpClient @TO@ VariableDeclarationStatement@@HttpClient client1=http1.createHttpClient(); @AT@ 1856 @LENGTH@ 10
------INS VariableDeclarationFragment@@client1=http1.createHttpClient() @TO@ VariableDeclarationStatement@@HttpClient client1=http1.createHttpClient(); @AT@ 1867 @LENGTH@ 34
---------INS SimpleName@@client1 @TO@ VariableDeclarationFragment@@client1=http1.createHttpClient() @AT@ 1867 @LENGTH@ 7
---------INS MethodInvocation@@http1.createHttpClient() @TO@ VariableDeclarationFragment@@client1=http1.createHttpClient() @AT@ 1877 @LENGTH@ 24
------------INS SimpleName@@Name:http1 @TO@ MethodInvocation@@http1.createHttpClient() @AT@ 1877 @LENGTH@ 5
------------INS SimpleName@@MethodName:createHttpClient:[] @TO@ MethodInvocation@@http1.createHttpClient() @AT@ 1883 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertEquals("myproxy",client1.getHostConfiguration().getProxyHost()) @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 1911 @LENGTH@ 71
------INS MethodInvocation@@assertEquals("myproxy",client1.getHostConfiguration().getProxyHost()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("myproxy",client1.getHostConfiguration().getProxyHost()) @AT@ 1911 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertEquals:["myproxy", client1.getHostConfiguration().getProxyHost()] @TO@ MethodInvocation@@assertEquals("myproxy",client1.getHostConfiguration().getProxyHost()) @AT@ 1911 @LENGTH@ 70
------------INS StringLiteral@@"myproxy" @TO@ SimpleName@@MethodName:assertEquals:["myproxy", client1.getHostConfiguration().getProxyHost()] @AT@ 1924 @LENGTH@ 9
------------INS MethodInvocation@@client1.getHostConfiguration().getProxyHost() @TO@ SimpleName@@MethodName:assertEquals:["myproxy", client1.getHostConfiguration().getProxyHost()] @AT@ 1935 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:getHostConfiguration:[] @TO@ MethodInvocation@@client1.getHostConfiguration().getProxyHost() @AT@ 1935 @LENGTH@ 30
---------------INS SimpleName@@Name:client1 @TO@ MethodInvocation@@client1.getHostConfiguration().getProxyHost() @AT@ 1935 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getProxyHost:[] @TO@ MethodInvocation@@client1.getHostConfiguration().getProxyHost() @AT@ 1966 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertEquals(1234,client1.getHostConfiguration().getProxyPort()) @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 1991 @LENGTH@ 66
------INS MethodInvocation@@assertEquals(1234,client1.getHostConfiguration().getProxyPort()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1234,client1.getHostConfiguration().getProxyPort()) @AT@ 1991 @LENGTH@ 65
---------INS SimpleName@@MethodName:assertEquals:[1234, client1.getHostConfiguration().getProxyPort()] @TO@ MethodInvocation@@assertEquals(1234,client1.getHostConfiguration().getProxyPort()) @AT@ 1991 @LENGTH@ 65
------------INS NumberLiteral@@1234 @TO@ SimpleName@@MethodName:assertEquals:[1234, client1.getHostConfiguration().getProxyPort()] @AT@ 2004 @LENGTH@ 4
------------INS MethodInvocation@@client1.getHostConfiguration().getProxyPort() @TO@ SimpleName@@MethodName:assertEquals:[1234, client1.getHostConfiguration().getProxyPort()] @AT@ 2010 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:getHostConfiguration:[] @TO@ MethodInvocation@@client1.getHostConfiguration().getProxyPort() @AT@ 2010 @LENGTH@ 30
---------------INS SimpleName@@Name:client1 @TO@ MethodInvocation@@client1.getHostConfiguration().getProxyPort() @AT@ 2010 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getProxyPort:[] @TO@ MethodInvocation@@client1.getHostConfiguration().getProxyPort() @AT@ 2041 @LENGTH@ 14
---INS VariableDeclarationStatement@@HttpClient client2=http2.createHttpClient(); @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 2075 @LENGTH@ 46
------INS SimpleType@@HttpClient @TO@ VariableDeclarationStatement@@HttpClient client2=http2.createHttpClient(); @AT@ 2075 @LENGTH@ 10
------INS VariableDeclarationFragment@@client2=http2.createHttpClient() @TO@ VariableDeclarationStatement@@HttpClient client2=http2.createHttpClient(); @AT@ 2086 @LENGTH@ 34
---------INS SimpleName@@client2 @TO@ VariableDeclarationFragment@@client2=http2.createHttpClient() @AT@ 2086 @LENGTH@ 7
---------INS MethodInvocation@@http2.createHttpClient() @TO@ VariableDeclarationFragment@@client2=http2.createHttpClient() @AT@ 2096 @LENGTH@ 24
------------INS SimpleName@@Name:http2 @TO@ MethodInvocation@@http2.createHttpClient() @AT@ 2096 @LENGTH@ 5
------------INS SimpleName@@MethodName:createHttpClient:[] @TO@ MethodInvocation@@http2.createHttpClient() @AT@ 2102 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertEquals("myotherproxy",client2.getHostConfiguration().getProxyHost()) @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 2130 @LENGTH@ 76
------INS MethodInvocation@@assertEquals("myotherproxy",client2.getHostConfiguration().getProxyHost()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("myotherproxy",client2.getHostConfiguration().getProxyHost()) @AT@ 2130 @LENGTH@ 75
---------INS SimpleName@@MethodName:assertEquals:["myotherproxy", client2.getHostConfiguration().getProxyHost()] @TO@ MethodInvocation@@assertEquals("myotherproxy",client2.getHostConfiguration().getProxyHost()) @AT@ 2130 @LENGTH@ 75
------------INS StringLiteral@@"myotherproxy" @TO@ SimpleName@@MethodName:assertEquals:["myotherproxy", client2.getHostConfiguration().getProxyHost()] @AT@ 2143 @LENGTH@ 14
------------INS MethodInvocation@@client2.getHostConfiguration().getProxyHost() @TO@ SimpleName@@MethodName:assertEquals:["myotherproxy", client2.getHostConfiguration().getProxyHost()] @AT@ 2159 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:getHostConfiguration:[] @TO@ MethodInvocation@@client2.getHostConfiguration().getProxyHost() @AT@ 2159 @LENGTH@ 30
---------------INS SimpleName@@Name:client2 @TO@ MethodInvocation@@client2.getHostConfiguration().getProxyHost() @AT@ 2159 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getProxyHost:[] @TO@ MethodInvocation@@client2.getHostConfiguration().getProxyHost() @AT@ 2190 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertEquals(2345,client2.getHostConfiguration().getProxyPort()) @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 2215 @LENGTH@ 66
------INS MethodInvocation@@assertEquals(2345,client2.getHostConfiguration().getProxyPort()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(2345,client2.getHostConfiguration().getProxyPort()) @AT@ 2215 @LENGTH@ 65
---------INS SimpleName@@MethodName:assertEquals:[2345, client2.getHostConfiguration().getProxyPort()] @TO@ MethodInvocation@@assertEquals(2345,client2.getHostConfiguration().getProxyPort()) @AT@ 2215 @LENGTH@ 65
------------INS NumberLiteral@@2345 @TO@ SimpleName@@MethodName:assertEquals:[2345, client2.getHostConfiguration().getProxyPort()] @AT@ 2228 @LENGTH@ 4
------------INS MethodInvocation@@client2.getHostConfiguration().getProxyPort() @TO@ SimpleName@@MethodName:assertEquals:[2345, client2.getHostConfiguration().getProxyPort()] @AT@ 2234 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:getHostConfiguration:[] @TO@ MethodInvocation@@client2.getHostConfiguration().getProxyPort() @AT@ 2234 @LENGTH@ 30
---------------INS SimpleName@@Name:client2 @TO@ MethodInvocation@@client2.getHostConfiguration().getProxyPort() @AT@ 2234 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getProxyPort:[] @TO@ MethodInvocation@@client2.getHostConfiguration().getProxyPort() @AT@ 2265 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong endpoint uri","http://www.google.com?proxyHost=myproxy&proxyPort=1234",http1.getEndpointUri()) @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 2291 @LENGTH@ 123
------INS MethodInvocation@@assertEquals("Get a wrong endpoint uri","http://www.google.com?proxyHost=myproxy&proxyPort=1234",http1.getEndpointUri()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong endpoint uri","http://www.google.com?proxyHost=myproxy&proxyPort=1234",http1.getEndpointUri()) @AT@ 2291 @LENGTH@ 122
---------INS SimpleName@@MethodName:assertEquals:["Get a wrong endpoint uri", "http://www.google.com?proxyHost=myproxy&proxyPort=1234", http1.getEndpointUri()] @TO@ MethodInvocation@@assertEquals("Get a wrong endpoint uri","http://www.google.com?proxyHost=myproxy&proxyPort=1234",http1.getEndpointUri()) @AT@ 2291 @LENGTH@ 122
------------INS StringLiteral@@"Get a wrong endpoint uri" @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong endpoint uri", "http://www.google.com?proxyHost=myproxy&proxyPort=1234", http1.getEndpointUri()] @AT@ 2304 @LENGTH@ 26
------------INS StringLiteral@@"http://www.google.com?proxyHost=myproxy&proxyPort=1234" @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong endpoint uri", "http://www.google.com?proxyHost=myproxy&proxyPort=1234", http1.getEndpointUri()] @AT@ 2332 @LENGTH@ 56
------------INS MethodInvocation@@http1.getEndpointUri() @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong endpoint uri", "http://www.google.com?proxyHost=myproxy&proxyPort=1234", http1.getEndpointUri()] @AT@ 2390 @LENGTH@ 22
---------------INS SimpleName@@Name:http1 @TO@ MethodInvocation@@http1.getEndpointUri() @AT@ 2390 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getEndpointUri:[] @TO@ MethodInvocation@@http1.getEndpointUri() @AT@ 2396 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong endpoint uri","http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",http2.getEndpointUri()) @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 2423 @LENGTH@ 143
------INS MethodInvocation@@assertEquals("Get a wrong endpoint uri","http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",http2.getEndpointUri()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong endpoint uri","http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",http2.getEndpointUri()) @AT@ 2423 @LENGTH@ 142
---------INS SimpleName@@MethodName:assertEquals:["Get a wrong endpoint uri", "http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345", http2.getEndpointUri()] @TO@ MethodInvocation@@assertEquals("Get a wrong endpoint uri","http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345",http2.getEndpointUri()) @AT@ 2423 @LENGTH@ 142
------------INS StringLiteral@@"Get a wrong endpoint uri" @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong endpoint uri", "http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345", http2.getEndpointUri()] @AT@ 2436 @LENGTH@ 26
------------INS StringLiteral@@"http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345" @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong endpoint uri", "http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345", http2.getEndpointUri()] @AT@ 2464 @LENGTH@ 76
------------INS MethodInvocation@@http2.getEndpointUri() @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong endpoint uri", "http://www.google.com?test=parameter&proxyHost=myotherproxy&proxyPort=2345", http2.getEndpointUri()] @AT@ 2542 @LENGTH@ 22
---------------INS SimpleName@@Name:http2 @TO@ MethodInvocation@@http2.getEndpointUri() @AT@ 2542 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getEndpointUri:[] @TO@ MethodInvocation@@http2.getEndpointUri() @AT@ 2548 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertEquals("Should get the same EndpointKey",http1.getEndpointKey(),http2.getEndpointKey()) @TO@ MethodDeclaration@@public, void, MethodName:testDifferentHttpProxyConfigured, Exception,  @AT@ 2583 @LENGTH@ 96
------INS MethodInvocation@@assertEquals("Should get the same EndpointKey",http1.getEndpointKey(),http2.getEndpointKey()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Should get the same EndpointKey",http1.getEndpointKey(),http2.getEndpointKey()) @AT@ 2583 @LENGTH@ 95
---------INS SimpleName@@MethodName:assertEquals:["Should get the same EndpointKey", http1.getEndpointKey(), http2.getEndpointKey()] @TO@ MethodInvocation@@assertEquals("Should get the same EndpointKey",http1.getEndpointKey(),http2.getEndpointKey()) @AT@ 2583 @LENGTH@ 95
------------INS StringLiteral@@"Should get the same EndpointKey" @TO@ SimpleName@@MethodName:assertEquals:["Should get the same EndpointKey", http1.getEndpointKey(), http2.getEndpointKey()] @AT@ 2596 @LENGTH@ 33
------------INS MethodInvocation@@http1.getEndpointKey() @TO@ SimpleName@@MethodName:assertEquals:["Should get the same EndpointKey", http1.getEndpointKey(), http2.getEndpointKey()] @AT@ 2631 @LENGTH@ 22
---------------INS SimpleName@@Name:http1 @TO@ MethodInvocation@@http1.getEndpointKey() @AT@ 2631 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getEndpointKey:[] @TO@ MethodInvocation@@http1.getEndpointKey() @AT@ 2637 @LENGTH@ 16
------------INS MethodInvocation@@http2.getEndpointKey() @TO@ SimpleName@@MethodName:assertEquals:["Should get the same EndpointKey", http1.getEndpointKey(), http2.getEndpointKey()] @AT@ 2655 @LENGTH@ 22
---------------INS SimpleName@@Name:http2 @TO@ MethodInvocation@@http2.getEndpointKey() @AT@ 2655 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getEndpointKey:[] @TO@ MethodInvocation@@http2.getEndpointKey() @AT@ 2661 @LENGTH@ 16


UPD IfStatement@@if (systemProperties != null) {  streamWriter.writeStartElement(Element.SYSTEM_PROPERTIES.getLocalName());  systemProperties.writeContent(streamWriter);  streamWriter.writeEndElement();} @TO@ if (systemProperties != null && systemProperties.size() > 0) {  streamWriter.writeStartElement(Element.SYSTEM_PROPERTIES.getLocalName());  systemProperties.writeContent(streamWriter);} @AT@ 7475 @LENGTH@ 228
---INS InfixExpression@@systemProperties != null && systemProperties.size() > 0 @TO@ IfStatement@@if (systemProperties != null) {  streamWriter.writeStartElement(Element.SYSTEM_PROPERTIES.getLocalName());  systemProperties.writeContent(streamWriter);  streamWriter.writeEndElement();} @AT@ 7479 @LENGTH@ 55
------INS InfixExpression@@systemProperties != null @TO@ InfixExpression@@systemProperties != null && systemProperties.size() > 0 @AT@ 7479 @LENGTH@ 24
---------MOV SimpleName@@systemProperties @TO@ InfixExpression@@systemProperties != null @AT@ 7479 @LENGTH@ 16
---------MOV Operator@@!= @TO@ InfixExpression@@systemProperties != null @AT@ 7495 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@systemProperties != null @AT@ 7499 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@systemProperties != null && systemProperties.size() > 0 @AT@ 7503 @LENGTH@ 2
------INS InfixExpression@@systemProperties.size() > 0 @TO@ InfixExpression@@systemProperties != null && systemProperties.size() > 0 @AT@ 7507 @LENGTH@ 27
---------INS MethodInvocation@@systemProperties.size() @TO@ InfixExpression@@systemProperties.size() > 0 @AT@ 7507 @LENGTH@ 23
------------INS SimpleName@@Name:systemProperties @TO@ MethodInvocation@@systemProperties.size() @AT@ 7507 @LENGTH@ 16
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@systemProperties.size() @AT@ 7524 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@systemProperties.size() > 0 @AT@ 7530 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@systemProperties.size() > 0 @AT@ 7533 @LENGTH@ 1
---DEL InfixExpression@@systemProperties != null @AT@ 7479 @LENGTH@ 24
---UPD Block@@ThenBody:{  streamWriter.writeStartElement(Element.SYSTEM_PROPERTIES.getLocalName());  systemProperties.writeContent(streamWriter);  streamWriter.writeEndElement();} @TO@ ThenBody:{  streamWriter.writeStartElement(Element.SYSTEM_PROPERTIES.getLocalName());  systemProperties.writeContent(streamWriter);} @AT@ 7505 @LENGTH@ 198
------DEL ExpressionStatement@@MethodInvocation:streamWriter.writeEndElement() @AT@ 7662 @LENGTH@ 31
---------DEL MethodInvocation@@streamWriter.writeEndElement() @AT@ 7662 @LENGTH@ 30
------------DEL SimpleName@@Name:streamWriter @AT@ 7662 @LENGTH@ 12
------------DEL SimpleName@@MethodName:writeEndElement:[] @AT@ 7675 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:result.put((K)transformKey(entry.getKey()),transformValue(entry.getValue())) @TO@ MethodInvocation:result.put(transformKey(entry.getKey()),transformValue(entry.getValue())) @AT@ 7243 @LENGTH@ 79
---UPD MethodInvocation@@result.put((K)transformKey(entry.getKey()),transformValue(entry.getValue())) @TO@ result.put(transformKey(entry.getKey()),transformValue(entry.getValue())) @AT@ 7243 @LENGTH@ 78
------UPD SimpleName@@MethodName:put:[(K)transformKey(entry.getKey()), transformValue(entry.getValue())] @TO@ MethodName:put:[transformKey(entry.getKey()), transformValue(entry.getValue())] @AT@ 7250 @LENGTH@ 71
---------DEL CastExpression@@(K)transformKey(entry.getKey()) @AT@ 7254 @LENGTH@ 32
------------DEL SimpleType@@K @AT@ 7255 @LENGTH@ 1
---------MOV MethodInvocation@@transformKey(entry.getKey()) @TO@ SimpleName@@MethodName:put:[(K)transformKey(entry.getKey()), transformValue(entry.getValue())] @AT@ 7258 @LENGTH@ 28


UPD VariableDeclarationStatement@@final File standalone=new File(getEnvironment().getDomainConfigurationDir(),STANDALONE_XML); @TO@ final File standalone=new File(getEnvironment().getServerConfigurationDir(),STANDALONE_XML); @AT@ 1908 @LENGTH@ 95
---UPD VariableDeclarationFragment@@standalone=new File(getEnvironment().getDomainConfigurationDir(),STANDALONE_XML) @TO@ standalone=new File(getEnvironment().getServerConfigurationDir(),STANDALONE_XML) @AT@ 1919 @LENGTH@ 83
------UPD ClassInstanceCreation@@File[getEnvironment().getDomainConfigurationDir(), STANDALONE_XML] @TO@ File[getEnvironment().getServerConfigurationDir(), STANDALONE_XML] @AT@ 1932 @LENGTH@ 70
---------UPD MethodInvocation@@getEnvironment().getDomainConfigurationDir() @TO@ getEnvironment().getServerConfigurationDir() @AT@ 1941 @LENGTH@ 44
------------UPD SimpleName@@MethodName:getDomainConfigurationDir:[] @TO@ MethodName:getServerConfigurationDir:[] @AT@ 1958 @LENGTH@ 27


UPD VariableDeclarationStatement@@Set originalSet=new HashSet(); @TO@ Set<Object> originalSet=new HashSet<Object>(); @AT@ 3368 @LENGTH@ 32
---INS ParameterizedType@@Set<Object> @TO@ VariableDeclarationStatement@@Set originalSet=new HashSet(); @AT@ 3368 @LENGTH@ 11
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Object> @AT@ 3368 @LENGTH@ 3
------INS SimpleType@@Object @TO@ ParameterizedType@@Set<Object> @AT@ 3372 @LENGTH@ 6
---DEL SimpleType@@Set @AT@ 3368 @LENGTH@ 3
---UPD VariableDeclarationFragment@@originalSet=new HashSet() @TO@ originalSet=new HashSet<Object>() @AT@ 3372 @LENGTH@ 27
------UPD ClassInstanceCreation@@HashSet[] @TO@ HashSet<Object>[] @AT@ 3386 @LENGTH@ 13
---------DEL SimpleType@@HashSet @AT@ 3390 @LENGTH@ 7
---------INS ParameterizedType@@HashSet<Object> @TO@ ClassInstanceCreation@@HashSet[] @AT@ 3398 @LENGTH@ 15
------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<Object> @AT@ 3398 @LENGTH@ 7
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashSet<Object> @AT@ 3406 @LENGTH@ 6


UPD IfStatement@@if (properties != null) {  streamWriter.writeStartElement("properties");  properties.writeContent(streamWriter);} @TO@ if (properties != null && properties.size() > 0) {  streamWriter.writeStartElement("properties");  properties.writeContent(streamWriter);} @AT@ 3859 @LENGTH@ 144
---INS InfixExpression@@properties != null && properties.size() > 0 @TO@ IfStatement@@if (properties != null) {  streamWriter.writeStartElement("properties");  properties.writeContent(streamWriter);} @AT@ 3863 @LENGTH@ 43
------INS InfixExpression@@properties != null @TO@ InfixExpression@@properties != null && properties.size() > 0 @AT@ 3863 @LENGTH@ 18
---------MOV SimpleName@@properties @TO@ InfixExpression@@properties != null @AT@ 3863 @LENGTH@ 10
---------MOV Operator@@!= @TO@ InfixExpression@@properties != null @AT@ 3873 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@properties != null @AT@ 3877 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@properties != null && properties.size() > 0 @AT@ 3881 @LENGTH@ 2
------INS InfixExpression@@properties.size() > 0 @TO@ InfixExpression@@properties != null && properties.size() > 0 @AT@ 3885 @LENGTH@ 21
---------INS MethodInvocation@@properties.size() @TO@ InfixExpression@@properties.size() > 0 @AT@ 3885 @LENGTH@ 17
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.size() @AT@ 3885 @LENGTH@ 10
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@properties.size() @AT@ 3896 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@properties.size() > 0 @AT@ 3902 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@properties.size() > 0 @AT@ 3905 @LENGTH@ 1
---DEL InfixExpression@@properties != null @AT@ 3863 @LENGTH@ 18


UPD FieldDeclaration@@private, AbstractAuthenticationProviderElement<?>, [authenticationProvider] @TO@ private, String, [authenticationProvider] @AT@ 2472 @LENGTH@ 72
---DEL ParameterizedType@@AbstractAuthenticationProviderElement<?> @AT@ 2480 @LENGTH@ 40
------DEL SimpleType@@AbstractAuthenticationProviderElement @AT@ 2480 @LENGTH@ 37
------DEL WildcardType@@? @AT@ 2518 @LENGTH@ 1
---INS SimpleType@@String @TO@ FieldDeclaration@@private, AbstractAuthenticationProviderElement<?>, [authenticationProvider] @AT@ 2480 @LENGTH@ 6


UPD ReturnStatement@@InfixExpression:isDate() || isString() || type.equals(JavaType.DOUBLE_OBJECT)|| type.equals(JavaType.LONG_OBJECT)|| type.equals(JavaType.INT_OBJECT)|| isBoolean() @TO@ InfixExpression:type.isPrimitive() || isDate() || isString()|| type.equals(JavaType.DOUBLE_OBJECT)|| type.equals(JavaType.LONG_OBJECT)|| type.equals(JavaType.INT_OBJECT)|| isBoolean() @AT@ 41726 @LENGTH@ 156
---UPD InfixExpression@@isDate() || isString() || type.equals(JavaType.DOUBLE_OBJECT)|| type.equals(JavaType.LONG_OBJECT)|| type.equals(JavaType.INT_OBJECT)|| isBoolean() @TO@ type.isPrimitive() || isDate() || isString()|| type.equals(JavaType.DOUBLE_OBJECT)|| type.equals(JavaType.LONG_OBJECT)|| type.equals(JavaType.INT_OBJECT)|| isBoolean() @AT@ 41733 @LENGTH@ 148
------UPD MethodInvocation@@MethodName:isDate:[] @TO@ type.isPrimitive() @AT@ 41733 @LENGTH@ 8
---------INS SimpleName@@Name:type @TO@ MethodInvocation@@MethodName:isDate:[] @AT@ 42698 @LENGTH@ 4
---------INS SimpleName@@MethodName:isPrimitive:[] @TO@ MethodInvocation@@MethodName:isDate:[] @AT@ 42703 @LENGTH@ 13
------INS MethodInvocation@@MethodName:isDate:[] @TO@ InfixExpression@@isDate() || isString() || type.equals(JavaType.DOUBLE_OBJECT)|| type.equals(JavaType.LONG_OBJECT)|| type.equals(JavaType.INT_OBJECT)|| isBoolean() @AT@ 42720 @LENGTH@ 8


INS IfStatement@@if (!endpoint.getConfiguration().isStepwise()) {  doChangeDirectory(path);} @TO@ MethodDeclaration@@public, void, MethodName:changeCurrentDirectory, String path, GenericFileOperationFailedException,  @AT@ 13925 @LENGTH@ 95
---INS PrefixExpression@@!endpoint.getConfiguration().isStepwise() @TO@ IfStatement@@if (!endpoint.getConfiguration().isStepwise()) {  doChangeDirectory(path);} @AT@ 13929 @LENGTH@ 41
------INS Operator@@! @TO@ PrefixExpression@@!endpoint.getConfiguration().isStepwise() @AT@ 13929 @LENGTH@ 1
------INS MethodInvocation@@endpoint.getConfiguration().isStepwise() @TO@ PrefixExpression@@!endpoint.getConfiguration().isStepwise() @AT@ 13930 @LENGTH@ 40
---------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@endpoint.getConfiguration().isStepwise() @AT@ 13930 @LENGTH@ 27
---------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getConfiguration().isStepwise() @AT@ 13930 @LENGTH@ 8
---------INS SimpleName@@MethodName:isStepwise:[] @TO@ MethodInvocation@@endpoint.getConfiguration().isStepwise() @AT@ 13958 @LENGTH@ 12
---INS Block@@ThenBody:{  doChangeDirectory(path);} @TO@ IfStatement@@if (!endpoint.getConfiguration().isStepwise()) {  doChangeDirectory(path);} @AT@ 13972 @LENGTH@ 48
------INS ExpressionStatement@@MethodInvocation:doChangeDirectory(path) @TO@ Block@@ThenBody:{  doChangeDirectory(path);} @AT@ 13986 @LENGTH@ 24
---------INS MethodInvocation@@doChangeDirectory(path) @TO@ ExpressionStatement@@MethodInvocation:doChangeDirectory(path) @AT@ 13986 @LENGTH@ 23
------------INS SimpleName@@MethodName:doChangeDirectory:[path] @TO@ MethodInvocation@@doChangeDirectory(path) @AT@ 13986 @LENGTH@ 23
---------------INS SimpleName@@path @TO@ SimpleName@@MethodName:doChangeDirectory:[path] @AT@ 14004 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)) @TO@ MethodInvocation:errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)) @AT@ 4305 @LENGTH@ 66
---UPD MethodInvocation@@errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)) @TO@ errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)) @AT@ 4305 @LENGTH@ 65
------UPD SimpleName@@MethodName:errorHandler:[deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)] @TO@ MethodName:errorHandler:[deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)] @AT@ 4305 @LENGTH@ 65
---------UPD MethodInvocation@@deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0) @TO@ deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0) @AT@ 4318 @LENGTH@ 51
------------UPD SimpleName@@MethodName:redeliverDelay:[0] @TO@ MethodName:redeliveryDelay:[0] @AT@ 4352 @LENGTH@ 17


MOV TryStatement@@try {  batchBuilder.install();} catch (ServiceRegistryException e) {  throw new IllegalStateException("Failed to install boot services",e);} @TO@ MethodDeclaration@@public, void, MethodName:run, final List<ServiceActivator> startServices,  @AT@ 5147 @LENGTH@ 181


UPD VariableDeclarationStatement@@TransactionErrorHandler answer=new TransactionErrorHandler(processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getHandledPolicy(),getExceptionPolicyStrategy(),transactionTemplate); @TO@ TransactionErrorHandler answer=new TransactionErrorHandler(routeContext.getCamelContext(),processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getHandledPolicy(),getExceptionPolicyStrategy(),transactionTemplate); @AT@ 5303 @LENGTH@ 214
---UPD VariableDeclarationFragment@@answer=new TransactionErrorHandler(processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getHandledPolicy(),getExceptionPolicyStrategy(),transactionTemplate) @TO@ answer=new TransactionErrorHandler(routeContext.getCamelContext(),processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getHandledPolicy(),getExceptionPolicyStrategy(),transactionTemplate) @AT@ 5327 @LENGTH@ 189
------UPD ClassInstanceCreation@@TransactionErrorHandler[processor, getLogger(), getOnRedelivery(), getRedeliveryPolicy(), getHandledPolicy(), getExceptionPolicyStrategy(), transactionTemplate] @TO@ TransactionErrorHandler[routeContext.getCamelContext(), processor, getLogger(), getOnRedelivery(), getRedeliveryPolicy(), getHandledPolicy(), getExceptionPolicyStrategy(), transactionTemplate] @AT@ 5336 @LENGTH@ 180
---------INS MethodInvocation@@routeContext.getCamelContext() @TO@ ClassInstanceCreation@@TransactionErrorHandler[processor, getLogger(), getOnRedelivery(), getRedeliveryPolicy(), getHandledPolicy(), getExceptionPolicyStrategy(), transactionTemplate] @AT@ 5364 @LENGTH@ 30
------------INS SimpleName@@Name:routeContext @TO@ MethodInvocation@@routeContext.getCamelContext() @AT@ 5364 @LENGTH@ 12
------------INS SimpleName@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@routeContext.getCamelContext() @AT@ 5377 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:testGetThreadNameCustomPatternWithDollar, Exception,  @TO@ TypeDeclaration@@[public]DefaultExecutorServiceStrategyTest, ContextTestSupport @AT@ 2151 @LENGTH@ 296
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetThreadNameCustomPatternWithDollar, Exception,  @AT@ 2151 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetThreadNameCustomPatternWithDollar, Exception,  @AT@ 2158 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetThreadNameCustomPatternWithDollar @TO@ MethodDeclaration@@public, void, MethodName:testGetThreadNameCustomPatternWithDollar, Exception,  @AT@ 2163 @LENGTH@ 40
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testGetThreadNameCustomPatternWithDollar, Exception,  @AT@ 2213 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:context.getExecutorServiceStrategy().setThreadNamePattern("Hello - ${name}") @TO@ MethodDeclaration@@public, void, MethodName:testGetThreadNameCustomPatternWithDollar, Exception,  @AT@ 2233 @LENGTH@ 77
------INS MethodInvocation@@context.getExecutorServiceStrategy().setThreadNamePattern("Hello - ${name}") @TO@ ExpressionStatement@@MethodInvocation:context.getExecutorServiceStrategy().setThreadNamePattern("Hello - ${name}") @AT@ 2233 @LENGTH@ 76
---------INS MethodInvocation@@MethodName:getExecutorServiceStrategy:[] @TO@ MethodInvocation@@context.getExecutorServiceStrategy().setThreadNamePattern("Hello - ${name}") @AT@ 2233 @LENGTH@ 36
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getExecutorServiceStrategy().setThreadNamePattern("Hello - ${name}") @AT@ 2233 @LENGTH@ 7
---------INS SimpleName@@MethodName:setThreadNamePattern:["Hello - ${name}"] @TO@ MethodInvocation@@context.getExecutorServiceStrategy().setThreadNamePattern("Hello - ${name}") @AT@ 2270 @LENGTH@ 39
------------INS StringLiteral@@"Hello - ${name}" @TO@ SimpleName@@MethodName:setThreadNamePattern:["Hello - ${name}"] @AT@ 2291 @LENGTH@ 17
---INS VariableDeclarationStatement@@String foo=context.getExecutorServiceStrategy().getThreadName("foo$bar"); @TO@ MethodDeclaration@@public, void, MethodName:testGetThreadNameCustomPatternWithDollar, Exception,  @AT@ 2319 @LENGTH@ 75
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String foo=context.getExecutorServiceStrategy().getThreadName("foo$bar"); @AT@ 2319 @LENGTH@ 6
------INS VariableDeclarationFragment@@foo=context.getExecutorServiceStrategy().getThreadName("foo$bar") @TO@ VariableDeclarationStatement@@String foo=context.getExecutorServiceStrategy().getThreadName("foo$bar"); @AT@ 2326 @LENGTH@ 67
---------INS SimpleName@@foo @TO@ VariableDeclarationFragment@@foo=context.getExecutorServiceStrategy().getThreadName("foo$bar") @AT@ 2326 @LENGTH@ 3
---------INS MethodInvocation@@context.getExecutorServiceStrategy().getThreadName("foo$bar") @TO@ VariableDeclarationFragment@@foo=context.getExecutorServiceStrategy().getThreadName("foo$bar") @AT@ 2332 @LENGTH@ 61
------------INS MethodInvocation@@MethodName:getExecutorServiceStrategy:[] @TO@ MethodInvocation@@context.getExecutorServiceStrategy().getThreadName("foo$bar") @AT@ 2332 @LENGTH@ 36
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getExecutorServiceStrategy().getThreadName("foo$bar") @AT@ 2332 @LENGTH@ 7
------------INS SimpleName@@MethodName:getThreadName:["foo$bar"] @TO@ MethodInvocation@@context.getExecutorServiceStrategy().getThreadName("foo$bar") @AT@ 2369 @LENGTH@ 24
---------------INS StringLiteral@@"foo$bar" @TO@ SimpleName@@MethodName:getThreadName:["foo$bar"] @AT@ 2383 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals("Hello - foo$bar",foo) @TO@ MethodDeclaration@@public, void, MethodName:testGetThreadNameCustomPatternWithDollar, Exception,  @AT@ 2404 @LENGTH@ 37
------INS MethodInvocation@@assertEquals("Hello - foo$bar",foo) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Hello - foo$bar",foo) @AT@ 2404 @LENGTH@ 36
---------INS SimpleName@@MethodName:assertEquals:["Hello - foo$bar", foo] @TO@ MethodInvocation@@assertEquals("Hello - foo$bar",foo) @AT@ 2404 @LENGTH@ 36
------------INS StringLiteral@@"Hello - foo$bar" @TO@ SimpleName@@MethodName:assertEquals:["Hello - foo$bar", foo] @AT@ 2417 @LENGTH@ 17
------------INS SimpleName@@foo @TO@ SimpleName@@MethodName:assertEquals:["Hello - foo$bar", foo] @AT@ 2436 @LENGTH@ 3


UPD VariableDeclarationStatement@@String[] keys=new String[sets.length + 1]; @TO@ String[] keys=new String[sets.length]; @AT@ 5060 @LENGTH@ 44
---UPD VariableDeclarationFragment@@keys=new String[sets.length + 1] @TO@ keys=new String[sets.length] @AT@ 5069 @LENGTH@ 34
------UPD ArrayCreation@@new String[sets.length + 1] @TO@ new String[sets.length] @AT@ 5076 @LENGTH@ 27
---------DEL InfixExpression@@sets.length + 1 @AT@ 5087 @LENGTH@ 15
------------DEL QualifiedName@@sets.length @AT@ 5087 @LENGTH@ 11
------------DEL Operator@@+ @AT@ 5098 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 5101 @LENGTH@ 1
---------INS QualifiedName@@sets.length @TO@ ArrayCreation@@new String[sets.length + 1] @AT@ 5087 @LENGTH@ 11
------------MOV SimpleName@@sets @TO@ QualifiedName@@sets.length @AT@ 5087 @LENGTH@ 4
------------MOV SimpleName@@length @TO@ QualifiedName@@sets.length @AT@ 5092 @LENGTH@ 6


UPD VariableDeclarationStatement@@ByteArrayInputStream html=(ByteArrayInputStream)template.requestBody("http://localhost:9080/",""); @TO@ InputStream html=(InputStream)template.requestBody("http://localhost:9080/",""); @AT@ 1955 @LENGTH@ 119
---UPD SimpleType@@ByteArrayInputStream @TO@ InputStream @AT@ 1955 @LENGTH@ 20
---UPD VariableDeclarationFragment@@html=(ByteArrayInputStream)template.requestBody("http://localhost:9080/","") @TO@ html=(InputStream)template.requestBody("http://localhost:9080/","") @AT@ 1976 @LENGTH@ 97
------UPD CastExpression@@(ByteArrayInputStream)template.requestBody("http://localhost:9080/","") @TO@ (InputStream)template.requestBody("http://localhost:9080/","") @AT@ 1983 @LENGTH@ 90
---------UPD SimpleType@@ByteArrayInputStream @TO@ InputStream @AT@ 1984 @LENGTH@ 20


UPD IfStatement@@if (resourceRoot.getRoot().isFile()) {  jarsSet.add(resourceRoot.getName());  VirtualFile overlay=resourceRoot.getRoot().getChild("META-INF/resources");  if (overlay.exists()) {    overlays.add(overlay);  }  VirtualFile sci=resourceRoot.getRoot().getChild("META-INF/services/javax.servlet.ServletContainerInitializer");  if (sci.exists()) {    scis.put(resourceRoot.getName(),sci);  }} @TO@ if (resourceRoot.getRoot().getLowerCaseName().endsWith(".jar")) {  jarsSet.add(resourceRoot.getName());  VirtualFile overlay=resourceRoot.getRoot().getChild("META-INF/resources");  if (overlay.exists()) {    overlays.add(overlay);  }  VirtualFile sci=resourceRoot.getRoot().getChild("META-INF/services/javax.servlet.ServletContainerInitializer");  if (sci.exists()) {    scis.put(resourceRoot.getName(),sci);  }} @AT@ 4135 @LENGTH@ 661
---UPD MethodInvocation@@resourceRoot.getRoot().isFile() @TO@ resourceRoot.getRoot().getLowerCaseName().endsWith(".jar") @AT@ 4139 @LENGTH@ 31
------INS MethodInvocation@@MethodName:getLowerCaseName:[] @TO@ MethodInvocation@@resourceRoot.getRoot().isFile() @AT@ 4139 @LENGTH@ 41
------UPD SimpleName@@MethodName:isFile:[] @TO@ MethodName:endsWith:[".jar"] @AT@ 4162 @LENGTH@ 8
---------INS StringLiteral@@".jar" @TO@ SimpleName@@MethodName:isFile:[] @AT@ 4190 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:this.service=new ServiceBuilder().provider(TwitterApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @TO@ Assignment:this.service=new ServiceBuilder().provider(LinkedInApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @AT@ 1380 @LENGTH@ 159
---UPD Assignment@@this.service=new ServiceBuilder().provider(TwitterApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @TO@ this.service=new ServiceBuilder().provider(LinkedInApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @AT@ 1380 @LENGTH@ 158
------UPD MethodInvocation@@new ServiceBuilder().provider(TwitterApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @TO@ new ServiceBuilder().provider(LinkedInApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @AT@ 1395 @LENGTH@ 143
---------UPD MethodInvocation@@MethodName:provider:[TwitterApi.class] @TO@ MethodName:provider:[LinkedInApi.class] @AT@ 1395 @LENGTH@ 47
------------UPD TypeLiteral@@TwitterApi.class @TO@ LinkedInApi.class @AT@ 1425 @LENGTH@ 16


UPD ExpressionStatement@@Assignment:paramTypes=(Class[])paramTypes.clone() @TO@ Assignment:paramTypes=paramTypes.clone() @AT@ 2816 @LENGTH@ 42
---UPD Assignment@@paramTypes=(Class[])paramTypes.clone() @TO@ paramTypes=paramTypes.clone() @AT@ 2816 @LENGTH@ 41
------DEL CastExpression@@(Class[])paramTypes.clone() @AT@ 2829 @LENGTH@ 28
---------DEL ArrayType@@Class[] @AT@ 2830 @LENGTH@ 7
------------DEL SimpleType@@Class @AT@ 2830 @LENGTH@ 5
---------DEL MethodInvocation@@paramTypes.clone() @AT@ 2839 @LENGTH@ 18
------INS MethodInvocation@@paramTypes.clone() @TO@ Assignment@@paramTypes=(Class[])paramTypes.clone() @AT@ 2829 @LENGTH@ 18
---------MOV SimpleName@@Name:paramTypes @TO@ MethodInvocation@@paramTypes.clone() @AT@ 2839 @LENGTH@ 10
---------MOV SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@paramTypes.clone() @AT@ 2850 @LENGTH@ 7


UPD TypeDeclaration@@[public]Channel, [Processor, Navigate<Processor>] @TO@ [public]Channel, [AsyncProcessor, Navigate<Processor>] @AT@ 1227 @LENGTH@ 2961
---UPD SimpleType@@Processor @TO@ AsyncProcessor @AT@ 1260 @LENGTH@ 9


UPD IfStatement@@if (beanInfoMetadata != null) {  for (  MethodMetadata accessor : beanInfoMetadata.getPublicAccessors(false)) {    JavaType returnType=accessor.getReturnType();    checkPrimitive(returnType);  }} @TO@ if (beanInfoMetadata != null) {  for (  AnnotationMetadata annotation : entityMetadata.getItdTypeDetails().getAnnotations()) {    if (annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass"))) {      throw new IllegalStateException("GWT does not currently support inheritence in proxied objects. Please remove the 'javax.persistence.MappedSuperclass' annotation from '" + governorTypeDetails.getName().getFullyQualifiedTypeName() + "' in order to complete 'gwt setup'.");    }  }  for (  MethodMetadata accessor : beanInfoMetadata.getPublicAccessors(false)) {    JavaType returnType=accessor.getReturnType();    checkPrimitive(returnType);  }} @AT@ 4147 @LENGTH@ 243
---UPD Block@@ThenBody:{  for (  MethodMetadata accessor : beanInfoMetadata.getPublicAccessors(false)) {    JavaType returnType=accessor.getReturnType();    checkPrimitive(returnType);  }} @TO@ ThenBody:{  for (  AnnotationMetadata annotation : entityMetadata.getItdTypeDetails().getAnnotations()) {    if (annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass"))) {      throw new IllegalStateException("GWT does not currently support inheritence in proxied objects. Please remove the 'javax.persistence.MappedSuperclass' annotation from '" + governorTypeDetails.getName().getFullyQualifiedTypeName() + "' in order to complete 'gwt setup'.");    }  }  for (  MethodMetadata accessor : beanInfoMetadata.getPublicAccessors(false)) {    JavaType returnType=accessor.getReturnType();    checkPrimitive(returnType);  }} @AT@ 4177 @LENGTH@ 213
------INS EnhancedForStatement@@for (AnnotationMetadata annotation : entityMetadata.getItdTypeDetails().getAnnotations()) {  if (annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass"))) {    throw new IllegalStateException("GWT does not currently support inheritence in proxied objects. Please remove the 'javax.persistence.MappedSuperclass' annotation from '" + governorTypeDetails.getName().getFullyQualifiedTypeName() + "' in order to complete 'gwt setup'.");  }} @TO@ Block@@ThenBody:{  for (  MethodMetadata accessor : beanInfoMetadata.getPublicAccessors(false)) {    JavaType returnType=accessor.getReturnType();    checkPrimitive(returnType);  }} @AT@ 4256 @LENGTH@ 529
---------MOV IfStatement@@if (entityMetadata.getMappedSuperclassAnnotation() != null) {  throw new IllegalStateException("GWT does not currently support inheritence in proxied objects. Please remove the 'javax.persistence.MappedSuperclass' annotation from '" + governorTypeDetails.getName().getFullyQualifiedTypeName() + "' in order to complete 'gwt setup'.");} @TO@ EnhancedForStatement@@for (AnnotationMetadata annotation : entityMetadata.getItdTypeDetails().getAnnotations()) {  if (annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass"))) {    throw new IllegalStateException("GWT does not currently support inheritence in proxied objects. Please remove the 'javax.persistence.MappedSuperclass' annotation from '" + governorTypeDetails.getName().getFullyQualifiedTypeName() + "' in order to complete 'gwt setup'.");  }} @AT@ 3781 @LENGTH@ 356
------------DEL InfixExpression@@entityMetadata.getMappedSuperclassAnnotation() != null @AT@ 3785 @LENGTH@ 54
---------------DEL MethodInvocation@@entityMetadata.getMappedSuperclassAnnotation() @AT@ 3785 @LENGTH@ 46
---------------DEL Operator@@!= @AT@ 3831 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 3835 @LENGTH@ 4
------------INS MethodInvocation@@annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass")) @TO@ IfStatement@@if (entityMetadata.getMappedSuperclassAnnotation() != null) {  throw new IllegalStateException("GWT does not currently support inheritence in proxied objects. Please remove the 'javax.persistence.MappedSuperclass' annotation from '" + governorTypeDetails.getName().getFullyQualifiedTypeName() + "' in order to complete 'gwt setup'.");} @AT@ 4368 @LENGTH@ 89
---------------MOV SimpleName@@Name:entityMetadata @TO@ MethodInvocation@@annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass")) @AT@ 3785 @LENGTH@ 14
---------------MOV SimpleName@@Name:entityMetadata @TO@ MethodInvocation@@annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass")) @AT@ 3785 @LENGTH@ 14
---------------MOV SimpleName@@MethodName:getMappedSuperclassAnnotation:[] @TO@ MethodInvocation@@annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass")) @AT@ 3800 @LENGTH@ 31
------------------INS ClassInstanceCreation@@JavaType["javax.persistence.MappedSuperclass"] @TO@ SimpleName@@MethodName:getMappedSuperclassAnnotation:[] @AT@ 4406 @LENGTH@ 50
---------------------INS New@@new @TO@ ClassInstanceCreation@@JavaType["javax.persistence.MappedSuperclass"] @AT@ 4406 @LENGTH@ 3
---------------------INS SimpleType@@JavaType @TO@ ClassInstanceCreation@@JavaType["javax.persistence.MappedSuperclass"] @AT@ 4410 @LENGTH@ 8
---------------------INS StringLiteral@@"javax.persistence.MappedSuperclass" @TO@ ClassInstanceCreation@@JavaType["javax.persistence.MappedSuperclass"] @AT@ 4419 @LENGTH@ 36
---------------MOV SimpleName@@MethodName:getMappedSuperclassAnnotation:[] @TO@ MethodInvocation@@annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass")) @AT@ 3800 @LENGTH@ 31
------------------INS ClassInstanceCreation@@JavaType["javax.persistence.MappedSuperclass"] @TO@ SimpleName@@MethodName:getMappedSuperclassAnnotation:[] @AT@ 4406 @LENGTH@ 50
---------------------INS New@@new @TO@ ClassInstanceCreation@@JavaType["javax.persistence.MappedSuperclass"] @AT@ 4406 @LENGTH@ 3
---------------------INS SimpleType@@JavaType @TO@ ClassInstanceCreation@@JavaType["javax.persistence.MappedSuperclass"] @AT@ 4410 @LENGTH@ 8
---------------------INS StringLiteral@@"javax.persistence.MappedSuperclass" @TO@ ClassInstanceCreation@@JavaType["javax.persistence.MappedSuperclass"] @AT@ 4419 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:getAnnotationType:[] @TO@ MethodInvocation@@annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass")) @AT@ 4368 @LENGTH@ 30
---------INS SingleVariableDeclaration@@AnnotationMetadata annotation @TO@ EnhancedForStatement@@for (AnnotationMetadata annotation : entityMetadata.getItdTypeDetails().getAnnotations()) {  if (annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass"))) {    throw new IllegalStateException("GWT does not currently support inheritence in proxied objects. Please remove the 'javax.persistence.MappedSuperclass' annotation from '" + governorTypeDetails.getName().getFullyQualifiedTypeName() + "' in order to complete 'gwt setup'.");  }} @AT@ 4261 @LENGTH@ 29
------------INS SimpleType@@AnnotationMetadata @TO@ SingleVariableDeclaration@@AnnotationMetadata annotation @AT@ 4261 @LENGTH@ 18
------------INS SimpleName@@annotation @TO@ SingleVariableDeclaration@@AnnotationMetadata annotation @AT@ 4280 @LENGTH@ 10
---------INS MethodInvocation@@entityMetadata.getItdTypeDetails().getAnnotations() @TO@ EnhancedForStatement@@for (AnnotationMetadata annotation : entityMetadata.getItdTypeDetails().getAnnotations()) {  if (annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass"))) {    throw new IllegalStateException("GWT does not currently support inheritence in proxied objects. Please remove the 'javax.persistence.MappedSuperclass' annotation from '" + governorTypeDetails.getName().getFullyQualifiedTypeName() + "' in order to complete 'gwt setup'.");  }} @AT@ 4293 @LENGTH@ 51
------------INS MethodInvocation@@MethodName:getItdTypeDetails:[] @TO@ MethodInvocation@@entityMetadata.getItdTypeDetails().getAnnotations() @AT@ 4293 @LENGTH@ 34
------------INS SimpleName@@Name:entityMetadata @TO@ MethodInvocation@@entityMetadata.getItdTypeDetails().getAnnotations() @AT@ 4293 @LENGTH@ 14
------------INS SimpleName@@MethodName:getAnnotations:[] @TO@ MethodInvocation@@entityMetadata.getItdTypeDetails().getAnnotations() @AT@ 4328 @LENGTH@ 16


UPD VariableDeclarationStatement@@final List test=new ArrayList(); @TO@ final List<String> test=new ArrayList<String>(); @AT@ 573 @LENGTH@ 34
---INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@final List test=new ArrayList(); @AT@ 579 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 579 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 584 @LENGTH@ 6
---DEL SimpleType@@List @AT@ 579 @LENGTH@ 4
---UPD VariableDeclarationFragment@@test=new ArrayList() @TO@ test=new ArrayList<String>() @AT@ 584 @LENGTH@ 22
------UPD ClassInstanceCreation@@ArrayList[] @TO@ ArrayList<String>[] @AT@ 591 @LENGTH@ 15
---------DEL SimpleType@@ArrayList @AT@ 595 @LENGTH@ 9
---------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList[] @AT@ 603 @LENGTH@ 17
------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 603 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 613 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @TO@ MethodDeclaration@@public, void, MethodName:getQueryParameters,  @AT@ 2034 @LENGTH@ 78
---INS MethodInvocation@@assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @AT@ 2034 @LENGTH@ 77
------INS SimpleName@@MethodName:assertEquals:["pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token")] @TO@ MethodInvocation@@assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @AT@ 2034 @LENGTH@ 77
---------INS StringLiteral@@"pipe%7Cdelimited%7Ctoken" @TO@ SimpleName@@MethodName:assertEquals:["pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token")] @AT@ 2047 @LENGTH@ 26
---------INS MethodInvocation@@queryParameters.get("access_token") @TO@ SimpleName@@MethodName:assertEquals:["pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token")] @AT@ 2075 @LENGTH@ 35
------------INS SimpleName@@Name:queryParameters @TO@ MethodInvocation@@queryParameters.get("access_token") @AT@ 2075 @LENGTH@ 15
------------INS SimpleName@@MethodName:get:["access_token"] @TO@ MethodInvocation@@queryParameters.get("access_token") @AT@ 2091 @LENGTH@ 19
---------------INS StringLiteral@@"access_token" @TO@ SimpleName@@MethodName:get:["access_token"] @AT@ 2095 @LENGTH@ 14


UPD MethodDeclaration@@public, static, String, MethodName:getCharsetName, Exchange exchange,  @TO@ public, static, String, MethodName:getCharsetName, Exchange exchange, boolean useDefault,  @AT@ 10152 @LENGTH@ 325
---DEL ReturnStatement@@MethodInvocation:getDefaultCharsetName() @AT@ 10440 @LENGTH@ 31
---INS SingleVariableDeclaration@@boolean useDefault @TO@ MethodDeclaration@@public, static, String, MethodName:getCharsetName, Exchange exchange,  @AT@ 10614 @LENGTH@ 18
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean useDefault @AT@ 10614 @LENGTH@ 7
------INS SimpleName@@useDefault @TO@ SingleVariableDeclaration@@boolean useDefault @AT@ 10622 @LENGTH@ 10
---INS IfStatement@@if (useDefault) {  return getDefaultCharsetName();} else {  return null;} @TO@ MethodDeclaration@@public, static, String, MethodName:getCharsetName, Exchange exchange,  @AT@ 10867 @LENGTH@ 113
------INS SimpleName@@useDefault @TO@ IfStatement@@if (useDefault) {  return getDefaultCharsetName();} else {  return null;} @AT@ 10871 @LENGTH@ 10
------INS Block@@ThenBody:{  return getDefaultCharsetName();} @TO@ IfStatement@@if (useDefault) {  return getDefaultCharsetName();} else {  return null;} @AT@ 10883 @LENGTH@ 55
---------INS ReturnStatement@@MethodInvocation:getDefaultCharsetName() @TO@ Block@@ThenBody:{  return getDefaultCharsetName();} @AT@ 10897 @LENGTH@ 31
------------MOV MethodInvocation@@MethodName:getDefaultCharsetName:[] @TO@ ReturnStatement@@MethodInvocation:getDefaultCharsetName() @AT@ 10447 @LENGTH@ 23
------INS Block@@ElseBody:{  return null;} @TO@ IfStatement@@if (useDefault) {  return getDefaultCharsetName();} else {  return null;} @AT@ 10944 @LENGTH@ 36
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ElseBody:{  return null;} @AT@ 10958 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 10965 @LENGTH@ 4


UPD EnhancedForStatement@@for (final SocketBindingElement binding : group.getSocketBindings()) {  final SocketBindingAdd update=new SocketBindingAdd(binding);  if (update.getInterfaceName() == null) {    update.setInterfaceName(defaultInterface);  }  list.add(new ServerSocketBindingUpdate(update));} @TO@ for (final SocketBindingElement binding : group.getSocketBindings()) {  final SocketBindingAdd update=new SocketBindingAdd(binding);  list.add(new ServerSocketBindingUpdate(update));} @AT@ 7098 @LENGTH@ 410
---DEL IfStatement@@if (update.getInterfaceName() == null) {  update.setInterfaceName(defaultInterface);} @AT@ 7325 @LENGTH@ 112
------DEL InfixExpression@@update.getInterfaceName() == null @AT@ 7328 @LENGTH@ 33
---------DEL MethodInvocation@@update.getInterfaceName() @AT@ 7328 @LENGTH@ 25
------------DEL SimpleName@@Name:update @AT@ 7328 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getInterfaceName:[] @AT@ 7335 @LENGTH@ 18
---------DEL Operator@@== @AT@ 7353 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 7357 @LENGTH@ 4
------DEL Block@@ThenBody:{  update.setInterfaceName(defaultInterface);} @AT@ 7363 @LENGTH@ 74
---------DEL ExpressionStatement@@MethodInvocation:update.setInterfaceName(defaultInterface) @AT@ 7381 @LENGTH@ 42
------------DEL MethodInvocation@@update.setInterfaceName(defaultInterface) @AT@ 7381 @LENGTH@ 41
---------------DEL SimpleName@@Name:update @AT@ 7381 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:setInterfaceName:[defaultInterface] @AT@ 7388 @LENGTH@ 34
------------------DEL SimpleName@@defaultInterface @AT@ 7405 @LENGTH@ 16


UPD IfStatement@@if (result.getPattern().isOutCapable()) {  result.getOut().copyFrom(source.getIn());} else {  result.getIn().copyFrom(source.getIn());} @TO@ if (result.getPattern().isOutCapable()) {  result.getOut().copyFrom(source.getIn());} else {  result.getIn().copyFrom(source.getIn());  if (result.hasOut()) {    result.setOut(null);  }} @AT@ 8806 @LENGTH@ 327
---UPD Block@@ElseBody:{  result.getIn().copyFrom(source.getIn());} @TO@ ElseBody:{  result.getIn().copyFrom(source.getIn());  if (result.hasOut()) {    result.setOut(null);  }} @AT@ 8988 @LENGTH@ 145
------INS IfStatement@@if (result.hasOut()) {  result.setOut(null);} @TO@ Block@@ElseBody:{  result.getIn().copyFrom(source.getIn());} @AT@ 9228 @LENGTH@ 89
---------INS MethodInvocation@@result.hasOut() @TO@ IfStatement@@if (result.hasOut()) {  result.setOut(null);} @AT@ 9232 @LENGTH@ 15
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.hasOut() @AT@ 9232 @LENGTH@ 6
------------INS SimpleName@@MethodName:hasOut:[] @TO@ MethodInvocation@@result.hasOut() @AT@ 9239 @LENGTH@ 8
---------INS Block@@ThenBody:{  result.setOut(null);} @TO@ IfStatement@@if (result.hasOut()) {  result.setOut(null);} @AT@ 9249 @LENGTH@ 68
------------INS ExpressionStatement@@MethodInvocation:result.setOut(null) @TO@ Block@@ThenBody:{  result.setOut(null);} @AT@ 9275 @LENGTH@ 20
---------------INS MethodInvocation@@result.setOut(null) @TO@ ExpressionStatement@@MethodInvocation:result.setOut(null) @AT@ 9275 @LENGTH@ 19
------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.setOut(null) @AT@ 9275 @LENGTH@ 6
------------------INS SimpleName@@MethodName:setOut:[null] @TO@ MethodInvocation@@result.setOut(null) @AT@ 9282 @LENGTH@ 12
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setOut:[null] @AT@ 9289 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:socketBindings.registerSocket(this) @TO@ MethodInvocation:socketBindings.registerBinding(this) @AT@ 1617 @LENGTH@ 36
---UPD MethodInvocation@@socketBindings.registerSocket(this) @TO@ socketBindings.registerBinding(this) @AT@ 1617 @LENGTH@ 35
------UPD SimpleName@@MethodName:registerSocket:[this] @TO@ MethodName:registerBinding:[this] @AT@ 1632 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:logger.debug("Overriding log level setting for: " + classes) @TO@ MethodInvocation:logger.debug("Overriding log level setting for: " + Arrays.asList(classes)) @AT@ 1152 @LENGTH@ 61
---UPD MethodInvocation@@logger.debug("Overriding log level setting for: " + classes) @TO@ logger.debug("Overriding log level setting for: " + Arrays.asList(classes)) @AT@ 1152 @LENGTH@ 60
------UPD SimpleName@@MethodName:debug:["Overriding log level setting for: " + classes] @TO@ MethodName:debug:["Overriding log level setting for: " + Arrays.asList(classes)] @AT@ 1159 @LENGTH@ 53
---------UPD InfixExpression@@"Overriding log level setting for: " + classes @TO@ "Overriding log level setting for: " + Arrays.asList(classes) @AT@ 1165 @LENGTH@ 46
------------DEL SimpleName@@classes @AT@ 1204 @LENGTH@ 7
------------INS MethodInvocation@@Arrays.asList(classes) @TO@ InfixExpression@@"Overriding log level setting for: " + classes @AT@ 1230 @LENGTH@ 22
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(classes) @AT@ 1230 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[classes] @TO@ MethodInvocation@@Arrays.asList(classes) @AT@ 1237 @LENGTH@ 15
------------------INS SimpleName@@classes @TO@ SimpleName@@MethodName:asList:[classes] @AT@ 1244 @LENGTH@ 7


INS ExpressionStatement@@Assignment:this.socket=new Socket() @TO@ MethodDeclaration@@public, voidMethodName:ProcessManagerSlave, String processName, InetAddress addr, Integer port, Handler handler,  @AT@ 2622 @LENGTH@ 27
---INS Assignment@@this.socket=new Socket() @TO@ ExpressionStatement@@Assignment:this.socket=new Socket() @AT@ 2622 @LENGTH@ 26
------INS FieldAccess@@this.socket @TO@ Assignment@@this.socket=new Socket() @AT@ 2622 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ FieldAccess@@this.socket @AT@ 2622 @LENGTH@ 4
---------INS SimpleName@@socket @TO@ FieldAccess@@this.socket @AT@ 2627 @LENGTH@ 6
------INS Operator@@= @TO@ Assignment@@this.socket=new Socket() @AT@ 2633 @LENGTH@ 1
------INS ClassInstanceCreation@@Socket[] @TO@ Assignment@@this.socket=new Socket() @AT@ 2636 @LENGTH@ 12
---------INS New@@new @TO@ ClassInstanceCreation@@Socket[] @AT@ 2636 @LENGTH@ 3
---------INS SimpleType@@Socket @TO@ ClassInstanceCreation@@Socket[] @AT@ 2640 @LENGTH@ 6


UPD EnhancedForStatement@@for (String key : message.getHeaders().keySet()) {  String value=message.getHeader(key,String.class);  if (headerFilterStrategy != null && !headerFilterStrategy.applyFilterToCamelHeaders(key,value,exchange)) {    response.setHeader(key,value);  }} @TO@ for (Map.Entry<String,Object> entry : message.getHeaders().entrySet()) {  String key=entry.getKey();  Object value=entry.getValue();  if (value != null && headerFilterStrategy != null && !headerFilterStrategy.applyFilterToCamelHeaders(key,value,exchange)) {    response.setHeader(key,value.toString());  }} @AT@ 9381 @LENGTH@ 328
---UPD SingleVariableDeclaration@@String key @TO@ Map.Entry<String,Object> entry @AT@ 9386 @LENGTH@ 10
------DEL SimpleType@@String @AT@ 9386 @LENGTH@ 6
------UPD SimpleName@@key @TO@ entry @AT@ 9393 @LENGTH@ 3
------INS ParameterizedType@@Map.Entry<String,Object> @TO@ SingleVariableDeclaration@@String key @AT@ 9451 @LENGTH@ 25
---------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,Object> @AT@ 9451 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,Object> @AT@ 9461 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map.Entry<String,Object> @AT@ 9469 @LENGTH@ 6
---UPD MethodInvocation@@message.getHeaders().keySet() @TO@ message.getHeaders().entrySet() @AT@ 9399 @LENGTH@ 29
------UPD SimpleName@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 9420 @LENGTH@ 8
---UPD VariableDeclarationStatement@@String value=message.getHeader(key,String.class); @TO@ Object value=entry.getValue(); @AT@ 9444 @LENGTH@ 52
------UPD SimpleType@@String @TO@ Object @AT@ 9444 @LENGTH@ 6
------UPD VariableDeclarationFragment@@value=message.getHeader(key,String.class) @TO@ value=entry.getValue() @AT@ 9451 @LENGTH@ 44
---------UPD MethodInvocation@@message.getHeader(key,String.class) @TO@ entry.getValue() @AT@ 9459 @LENGTH@ 36
------------UPD SimpleName@@Name:message @TO@ Name:entry @AT@ 9459 @LENGTH@ 7
------------UPD SimpleName@@MethodName:getHeader:[key, String.class] @TO@ MethodName:getValue:[] @AT@ 9467 @LENGTH@ 28
---------------DEL SimpleName@@key @AT@ 9477 @LENGTH@ 3
---------------DEL TypeLiteral@@String.class @AT@ 9482 @LENGTH@ 12
---UPD IfStatement@@if (headerFilterStrategy != null && !headerFilterStrategy.applyFilterToCamelHeaders(key,value,exchange)) {  response.setHeader(key,value);} @TO@ if (value != null && headerFilterStrategy != null && !headerFilterStrategy.applyFilterToCamelHeaders(key,value,exchange)) {  response.setHeader(key,value.toString());} @AT@ 9509 @LENGTH@ 190
------UPD InfixExpression@@headerFilterStrategy != null && !headerFilterStrategy.applyFilterToCamelHeaders(key,value,exchange) @TO@ value != null && headerFilterStrategy != null && !headerFilterStrategy.applyFilterToCamelHeaders(key,value,exchange) @AT@ 9513 @LENGTH@ 121
---------INS InfixExpression@@value != null && headerFilterStrategy != null @TO@ InfixExpression@@headerFilterStrategy != null && !headerFilterStrategy.applyFilterToCamelHeaders(key,value,exchange) @AT@ 9622 @LENGTH@ 45
------------MOV InfixExpression@@headerFilterStrategy != null @TO@ InfixExpression@@value != null && headerFilterStrategy != null @AT@ 9513 @LENGTH@ 28
------------INS InfixExpression@@value != null @TO@ InfixExpression@@value != null && headerFilterStrategy != null @AT@ 9622 @LENGTH@ 13
---------------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 9622 @LENGTH@ 5
---------------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 9627 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 9631 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@value != null && headerFilterStrategy != null @AT@ 9635 @LENGTH@ 2
------UPD Block@@ThenBody:{  response.setHeader(key,value);} @TO@ ThenBody:{  response.setHeader(key,value.toString());} @AT@ 9636 @LENGTH@ 63
---------UPD ExpressionStatement@@MethodInvocation:response.setHeader(key,value) @TO@ MethodInvocation:response.setHeader(key,value.toString()) @AT@ 9654 @LENGTH@ 31
------------UPD MethodInvocation@@response.setHeader(key,value) @TO@ response.setHeader(key,value.toString()) @AT@ 9654 @LENGTH@ 30
---------------UPD SimpleName@@MethodName:setHeader:[key, value] @TO@ MethodName:setHeader:[key, value.toString()] @AT@ 9663 @LENGTH@ 21
------------------DEL SimpleName@@value @AT@ 9678 @LENGTH@ 5
------------------INS MethodInvocation@@value.toString() @TO@ SimpleName@@MethodName:setHeader:[key, value] @AT@ 9804 @LENGTH@ 16
---------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.toString() @AT@ 9804 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@value.toString() @AT@ 9810 @LENGTH@ 10
---INS VariableDeclarationStatement@@String key=entry.getKey(); @TO@ EnhancedForStatement@@for (String key : message.getHeaders().keySet()) {  String value=message.getHeader(key,String.class);  if (headerFilterStrategy != null && !headerFilterStrategy.applyFilterToCamelHeaders(key,value,exchange)) {    response.setHeader(key,value);  }} @AT@ 9532 @LENGTH@ 28
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key=entry.getKey(); @AT@ 9532 @LENGTH@ 6
------INS VariableDeclarationFragment@@key=entry.getKey() @TO@ VariableDeclarationStatement@@String key=entry.getKey(); @AT@ 9539 @LENGTH@ 20
---------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=entry.getKey() @AT@ 9539 @LENGTH@ 3
---------INS MethodInvocation@@entry.getKey() @TO@ VariableDeclarationFragment@@key=entry.getKey() @AT@ 9545 @LENGTH@ 14
------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 9545 @LENGTH@ 5
------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 9551 @LENGTH@ 8


UPD MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @TO@ public, synchronized, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 2177 @LENGTH@ 1482
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 2103 @LENGTH@ 12
---UPD IfStatement@@if (producer.getConfiguration().getTimeout() > 0) {  Timer timer=new HashedWheelTimer();  channelPipeline.addLast("timeout",new ReadTimeoutHandler(timer,producer.getConfiguration().getTimeout(),TimeUnit.MILLISECONDS));} @TO@ if (producer.getConfiguration().getTimeout() > 0) {  channelPipeline.addLast("timeout",new ReadTimeoutHandler(producer.getEndpoint().getTimer(),producer.getConfiguration().getTimeout(),TimeUnit.MILLISECONDS));} @AT@ 2772 @LENGTH@ 255
------UPD Block@@ThenBody:{  Timer timer=new HashedWheelTimer();  channelPipeline.addLast("timeout",new ReadTimeoutHandler(timer,producer.getConfiguration().getTimeout(),TimeUnit.MILLISECONDS));} @TO@ ThenBody:{  channelPipeline.addLast("timeout",new ReadTimeoutHandler(producer.getEndpoint().getTimer(),producer.getConfiguration().getTimeout(),TimeUnit.MILLISECONDS));} @AT@ 2822 @LENGTH@ 205
---------DEL VariableDeclarationStatement@@Timer timer=new HashedWheelTimer(); @AT@ 2836 @LENGTH@ 37
------------DEL SimpleType@@Timer @AT@ 2836 @LENGTH@ 5
------------DEL VariableDeclarationFragment@@timer=new HashedWheelTimer() @AT@ 2842 @LENGTH@ 30
---------------DEL SimpleName@@timer @AT@ 2842 @LENGTH@ 5
---------------DEL ClassInstanceCreation@@HashedWheelTimer[] @AT@ 2850 @LENGTH@ 22
------------------DEL New@@new @AT@ 2850 @LENGTH@ 3
------------------DEL SimpleType@@HashedWheelTimer @AT@ 2854 @LENGTH@ 16
---------UPD ExpressionStatement@@MethodInvocation:channelPipeline.addLast("timeout",new ReadTimeoutHandler(timer,producer.getConfiguration().getTimeout(),TimeUnit.MILLISECONDS)) @TO@ MethodInvocation:channelPipeline.addLast("timeout",new ReadTimeoutHandler(producer.getEndpoint().getTimer(),producer.getConfiguration().getTimeout(),TimeUnit.MILLISECONDS)) @AT@ 2886 @LENGTH@ 131
------------UPD MethodInvocation@@channelPipeline.addLast("timeout",new ReadTimeoutHandler(timer,producer.getConfiguration().getTimeout(),TimeUnit.MILLISECONDS)) @TO@ channelPipeline.addLast("timeout",new ReadTimeoutHandler(producer.getEndpoint().getTimer(),producer.getConfiguration().getTimeout(),TimeUnit.MILLISECONDS)) @AT@ 2886 @LENGTH@ 130
---------------UPD SimpleName@@MethodName:addLast:["timeout", new ReadTimeoutHandler(timer,producer.getConfiguration().getTimeout(),TimeUnit.MILLISECONDS)] @TO@ MethodName:addLast:["timeout", new ReadTimeoutHandler(producer.getEndpoint().getTimer(),producer.getConfiguration().getTimeout(),TimeUnit.MILLISECONDS)] @AT@ 2902 @LENGTH@ 114
------------------UPD ClassInstanceCreation@@ReadTimeoutHandler[timer, producer.getConfiguration().getTimeout(), TimeUnit.MILLISECONDS] @TO@ ReadTimeoutHandler[producer.getEndpoint().getTimer(), producer.getConfiguration().getTimeout(), TimeUnit.MILLISECONDS] @AT@ 2921 @LENGTH@ 94
---------------------INS MethodInvocation@@producer.getEndpoint().getTimer() @TO@ ClassInstanceCreation@@ReadTimeoutHandler[timer, producer.getConfiguration().getTimeout(), TimeUnit.MILLISECONDS] @AT@ 2826 @LENGTH@ 33
------------------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@producer.getEndpoint().getTimer() @AT@ 2826 @LENGTH@ 22
------------------------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.getEndpoint().getTimer() @AT@ 2826 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:getTimer:[] @TO@ MethodInvocation@@producer.getEndpoint().getTimer() @AT@ 2849 @LENGTH@ 10
---------------------DEL SimpleName@@timer @AT@ 2944 @LENGTH@ 5


UPD CatchClause@@catch (ParseException e) {  throw new IOException(e);} @TO@ catch (ParseException e) {  IOException ioException=new IOException();  ioException.initCause(e);  throw ioException;} @AT@ 6082 @LENGTH@ 59
---INS VariableDeclarationStatement@@IOException ioException=new IOException(); @TO@ CatchClause@@catch (ParseException e) {  throw new IOException(e);} @AT@ 6112 @LENGTH@ 44
------INS SimpleType@@IOException @TO@ VariableDeclarationStatement@@IOException ioException=new IOException(); @AT@ 6112 @LENGTH@ 11
------INS VariableDeclarationFragment@@ioException=new IOException() @TO@ VariableDeclarationStatement@@IOException ioException=new IOException(); @AT@ 6124 @LENGTH@ 31
---------INS SimpleName@@ioException @TO@ VariableDeclarationFragment@@ioException=new IOException() @AT@ 6124 @LENGTH@ 11
---------INS ClassInstanceCreation@@IOException[] @TO@ VariableDeclarationFragment@@ioException=new IOException() @AT@ 6138 @LENGTH@ 17
------------MOV New@@new @TO@ ClassInstanceCreation@@IOException[] @AT@ 6118 @LENGTH@ 3
------------MOV SimpleType@@IOException @TO@ ClassInstanceCreation@@IOException[] @AT@ 6122 @LENGTH@ 11
---DEL ThrowStatement@@ClassInstanceCreation:new IOException(e) @AT@ 6112 @LENGTH@ 25
------DEL ClassInstanceCreation@@IOException[e] @AT@ 6118 @LENGTH@ 18
---------DEL SimpleName@@e @AT@ 6134 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:ioException.initCause(e) @TO@ CatchClause@@catch (ParseException e) {  throw new IOException(e);} @AT@ 6160 @LENGTH@ 25
------INS MethodInvocation@@ioException.initCause(e) @TO@ ExpressionStatement@@MethodInvocation:ioException.initCause(e) @AT@ 6160 @LENGTH@ 24
---------INS SimpleName@@Name:ioException @TO@ MethodInvocation@@ioException.initCause(e) @AT@ 6160 @LENGTH@ 11
---------INS SimpleName@@MethodName:initCause:[e] @TO@ MethodInvocation@@ioException.initCause(e) @AT@ 6172 @LENGTH@ 12
------------INS SimpleName@@e @TO@ SimpleName@@MethodName:initCause:[e] @AT@ 6182 @LENGTH@ 1
---INS ThrowStatement@@SimpleName:ioException @TO@ CatchClause@@catch (ParseException e) {  throw new IOException(e);} @AT@ 6189 @LENGTH@ 18
------INS SimpleName@@ioException @TO@ ThrowStatement@@SimpleName:ioException @AT@ 6195 @LENGTH@ 11


UPD VariableDeclarationStatement@@Map map=(Map)obj; @TO@ Map<?,?> map=(Map<?,?>)obj; @AT@ 19728 @LENGTH@ 20
---INS ParameterizedType@@Map<?,?> @TO@ VariableDeclarationStatement@@Map map=(Map)obj; @AT@ 19693 @LENGTH@ 9
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<?,?> @AT@ 19693 @LENGTH@ 3
------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 19697 @LENGTH@ 1
------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 19700 @LENGTH@ 1
---DEL SimpleType@@Map @AT@ 19728 @LENGTH@ 3
---UPD VariableDeclarationFragment@@map=(Map)obj @TO@ map=(Map<?,?>)obj @AT@ 19732 @LENGTH@ 15
------UPD CastExpression@@(Map)obj @TO@ (Map<?,?>)obj @AT@ 19738 @LENGTH@ 9
---------INS ParameterizedType@@Map<?,?> @TO@ CastExpression@@(Map)obj @AT@ 19710 @LENGTH@ 9
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<?,?> @AT@ 19710 @LENGTH@ 3
------------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 19714 @LENGTH@ 1
------------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 19717 @LENGTH@ 1
---------DEL SimpleType@@Map @AT@ 19739 @LENGTH@ 3


DEL IfStatement@@if (consumer instanceof EventDrivenPollingConsumer) {  EventDrivenPollingConsumer edpc=(EventDrivenPollingConsumer)consumer;  boolean fileBasedConsumer=edpc.getEndpoint().getEndpointKey().startsWith("file") || edpc.getEndpoint().getEndpointKey().startsWith("ftp");  boolean fileBasedExchange=exchange.getFromEndpoint() != null && (exchange.getFromEndpoint().getEndpointUri().startsWith("file") || exchange.getFromEndpoint().getEndpointUri().startsWith("ftp"));  if (fileBasedConsumer && fileBasedExchange) {    throw new IllegalArgumentException("Camel currently does not support pollEnrich from a file/ftp endpoint" + " when the route also started from a file/ftp endpoint." + " Started from: " + exchange.getFromEndpoint().getEndpointUri() + " pollEnrich: "+ edpc.getEndpoint().getEndpointUri());  }} @AT@ 7036 @LENGTH@ 955
---DEL InstanceofExpression@@consumer instanceof EventDrivenPollingConsumer @AT@ 7040 @LENGTH@ 46
------DEL SimpleName@@consumer @AT@ 7040 @LENGTH@ 8
------DEL Instanceof@@instanceof @AT@ 7049 @LENGTH@ 10
------DEL SimpleType@@EventDrivenPollingConsumer @AT@ 7060 @LENGTH@ 26
---DEL Block@@ThenBody:{  EventDrivenPollingConsumer edpc=(EventDrivenPollingConsumer)consumer;  boolean fileBasedConsumer=edpc.getEndpoint().getEndpointKey().startsWith("file") || edpc.getEndpoint().getEndpointKey().startsWith("ftp");  boolean fileBasedExchange=exchange.getFromEndpoint() != null && (exchange.getFromEndpoint().getEndpointUri().startsWith("file") || exchange.getFromEndpoint().getEndpointUri().startsWith("ftp"));  if (fileBasedConsumer && fileBasedExchange) {    throw new IllegalArgumentException("Camel currently does not support pollEnrich from a file/ftp endpoint" + " when the route also started from a file/ftp endpoint." + " Started from: " + exchange.getFromEndpoint().getEndpointUri() + " pollEnrich: "+ edpc.getEndpoint().getEndpointUri());  }} @AT@ 7088 @LENGTH@ 903
------DEL VariableDeclarationStatement@@EventDrivenPollingConsumer edpc=(EventDrivenPollingConsumer)consumer; @AT@ 7102 @LENGTH@ 72
---------DEL SimpleType@@EventDrivenPollingConsumer @AT@ 7102 @LENGTH@ 26
---------DEL VariableDeclarationFragment@@edpc=(EventDrivenPollingConsumer)consumer @AT@ 7129 @LENGTH@ 44
------------DEL SimpleName@@edpc @AT@ 7129 @LENGTH@ 4
------------DEL CastExpression@@(EventDrivenPollingConsumer)consumer @AT@ 7136 @LENGTH@ 37
---------------DEL SimpleType@@EventDrivenPollingConsumer @AT@ 7137 @LENGTH@ 26
---------------DEL SimpleName@@consumer @AT@ 7165 @LENGTH@ 8
------DEL VariableDeclarationStatement@@boolean fileBasedConsumer=edpc.getEndpoint().getEndpointKey().startsWith("file") || edpc.getEndpoint().getEndpointKey().startsWith("ftp"); @AT@ 7187 @LENGTH@ 140
---------DEL PrimitiveType@@boolean @AT@ 7187 @LENGTH@ 7
---------DEL VariableDeclarationFragment@@fileBasedConsumer=edpc.getEndpoint().getEndpointKey().startsWith("file") || edpc.getEndpoint().getEndpointKey().startsWith("ftp") @AT@ 7195 @LENGTH@ 131
------------DEL SimpleName@@fileBasedConsumer @AT@ 7195 @LENGTH@ 17
------------DEL InfixExpression@@edpc.getEndpoint().getEndpointKey().startsWith("file") || edpc.getEndpoint().getEndpointKey().startsWith("ftp") @AT@ 7215 @LENGTH@ 111
---------------DEL MethodInvocation@@edpc.getEndpoint().getEndpointKey().startsWith("file") @AT@ 7215 @LENGTH@ 54
------------------DEL MethodInvocation@@MethodName:getEndpointKey:[] @AT@ 7215 @LENGTH@ 35
------------------DEL MethodInvocation@@MethodName:getEndpoint:[] @AT@ 7215 @LENGTH@ 18
------------------DEL SimpleName@@Name:edpc @AT@ 7215 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:startsWith:["file"] @AT@ 7251 @LENGTH@ 18
---------------------DEL StringLiteral@@"file" @AT@ 7262 @LENGTH@ 6
---------------DEL Operator@@|| @AT@ 7269 @LENGTH@ 2
---------------DEL MethodInvocation@@edpc.getEndpoint().getEndpointKey().startsWith("ftp") @AT@ 7273 @LENGTH@ 53
------------------DEL MethodInvocation@@MethodName:getEndpointKey:[] @AT@ 7273 @LENGTH@ 35
------------------DEL MethodInvocation@@MethodName:getEndpoint:[] @AT@ 7273 @LENGTH@ 18
------------------DEL SimpleName@@Name:edpc @AT@ 7273 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:startsWith:["ftp"] @AT@ 7309 @LENGTH@ 17
---------------------DEL StringLiteral@@"ftp" @AT@ 7320 @LENGTH@ 5
------DEL VariableDeclarationStatement@@boolean fileBasedExchange=exchange.getFromEndpoint() != null && (exchange.getFromEndpoint().getEndpointUri().startsWith("file") || exchange.getFromEndpoint().getEndpointUri().startsWith("ftp")); @AT@ 7340 @LENGTH@ 216
---------DEL PrimitiveType@@boolean @AT@ 7340 @LENGTH@ 7
---------DEL VariableDeclarationFragment@@fileBasedExchange=exchange.getFromEndpoint() != null && (exchange.getFromEndpoint().getEndpointUri().startsWith("file") || exchange.getFromEndpoint().getEndpointUri().startsWith("ftp")) @AT@ 7348 @LENGTH@ 207
------------DEL SimpleName@@fileBasedExchange @AT@ 7348 @LENGTH@ 17
------------DEL InfixExpression@@exchange.getFromEndpoint() != null && (exchange.getFromEndpoint().getEndpointUri().startsWith("file") || exchange.getFromEndpoint().getEndpointUri().startsWith("ftp")) @AT@ 7368 @LENGTH@ 187
---------------DEL InfixExpression@@exchange.getFromEndpoint() != null @AT@ 7368 @LENGTH@ 34
------------------DEL MethodInvocation@@exchange.getFromEndpoint() @AT@ 7368 @LENGTH@ 26
---------------------DEL SimpleName@@Name:exchange @AT@ 7368 @LENGTH@ 8
---------------------DEL SimpleName@@MethodName:getFromEndpoint:[] @AT@ 7377 @LENGTH@ 17
------------------DEL Operator@@!= @AT@ 7394 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 7398 @LENGTH@ 4
---------------DEL Operator@@&& @AT@ 7402 @LENGTH@ 2
---------------DEL ParenthesizedExpression@@(exchange.getFromEndpoint().getEndpointUri().startsWith("file") || exchange.getFromEndpoint().getEndpointUri().startsWith("ftp")) @AT@ 7426 @LENGTH@ 129
------------------DEL InfixExpression@@exchange.getFromEndpoint().getEndpointUri().startsWith("file") || exchange.getFromEndpoint().getEndpointUri().startsWith("ftp") @AT@ 7427 @LENGTH@ 127
---------------------DEL MethodInvocation@@exchange.getFromEndpoint().getEndpointUri().startsWith("file") @AT@ 7427 @LENGTH@ 62
------------------------DEL MethodInvocation@@MethodName:getEndpointUri:[] @AT@ 7427 @LENGTH@ 43
------------------------DEL MethodInvocation@@MethodName:getFromEndpoint:[] @AT@ 7427 @LENGTH@ 26
------------------------DEL SimpleName@@Name:exchange @AT@ 7427 @LENGTH@ 8
------------------------DEL SimpleName@@MethodName:startsWith:["file"] @AT@ 7471 @LENGTH@ 18
---------------------------DEL StringLiteral@@"file" @AT@ 7482 @LENGTH@ 6
---------------------DEL Operator@@|| @AT@ 7489 @LENGTH@ 2
---------------------DEL MethodInvocation@@exchange.getFromEndpoint().getEndpointUri().startsWith("ftp") @AT@ 7493 @LENGTH@ 61
------------------------DEL MethodInvocation@@MethodName:getEndpointUri:[] @AT@ 7493 @LENGTH@ 43
------------------------DEL MethodInvocation@@MethodName:getFromEndpoint:[] @AT@ 7493 @LENGTH@ 26
------------------------DEL SimpleName@@Name:exchange @AT@ 7493 @LENGTH@ 8
------------------------DEL SimpleName@@MethodName:startsWith:["ftp"] @AT@ 7537 @LENGTH@ 17
---------------------------DEL StringLiteral@@"ftp" @AT@ 7548 @LENGTH@ 5
------DEL IfStatement@@if (fileBasedConsumer && fileBasedExchange) {  throw new IllegalArgumentException("Camel currently does not support pollEnrich from a file/ftp endpoint" + " when the route also started from a file/ftp endpoint." + " Started from: " + exchange.getFromEndpoint().getEndpointUri() + " pollEnrich: "+ edpc.getEndpoint().getEndpointUri());} @AT@ 7569 @LENGTH@ 412
---------DEL InfixExpression@@fileBasedConsumer && fileBasedExchange @AT@ 7573 @LENGTH@ 38
------------DEL SimpleName@@fileBasedConsumer @AT@ 7573 @LENGTH@ 17
------------DEL Operator@@&& @AT@ 7590 @LENGTH@ 2
------------DEL SimpleName@@fileBasedExchange @AT@ 7594 @LENGTH@ 17
---------DEL Block@@ThenBody:{  throw new IllegalArgumentException("Camel currently does not support pollEnrich from a file/ftp endpoint" + " when the route also started from a file/ftp endpoint." + " Started from: " + exchange.getFromEndpoint().getEndpointUri() + " pollEnrich: "+ edpc.getEndpoint().getEndpointUri());} @AT@ 7613 @LENGTH@ 368
------------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Camel currently does not support pollEnrich from a file/ftp endpoint" + " when the route also started from a file/ftp endpoint." + " Started from: " + exchange.getFromEndpoint().getEndpointUri() + " pollEnrich: "+ edpc.getEndpoint().getEndpointUri()) @AT@ 7631 @LENGTH@ 336
---------------DEL ClassInstanceCreation@@IllegalArgumentException["Camel currently does not support pollEnrich from a file/ftp endpoint" + " when the route also started from a file/ftp endpoint." + " Started from: " + exchange.getFromEndpoint().getEndpointUri() + " pollEnrich: "+ edpc.getEndpoint().getEndpointUri()] @AT@ 7637 @LENGTH@ 329
------------------DEL New@@new @AT@ 7637 @LENGTH@ 3
------------------DEL SimpleType@@IllegalArgumentException @AT@ 7641 @LENGTH@ 24
------------------DEL InfixExpression@@"Camel currently does not support pollEnrich from a file/ftp endpoint" + " when the route also started from a file/ftp endpoint." + " Started from: " + exchange.getFromEndpoint().getEndpointUri() + " pollEnrich: "+ edpc.getEndpoint().getEndpointUri() @AT@ 7666 @LENGTH@ 299
---------------------DEL InfixExpression@@"Camel currently does not support pollEnrich from a file/ftp endpoint" + " when the route also started from a file/ftp endpoint." + " Started from: " @AT@ 7666 @LENGTH@ 197
------------------------DEL StringLiteral@@"Camel currently does not support pollEnrich from a file/ftp endpoint" @AT@ 7666 @LENGTH@ 70
------------------------DEL Operator@@+ @AT@ 7736 @LENGTH@ 1
------------------------DEL StringLiteral@@" when the route also started from a file/ftp endpoint." @AT@ 7763 @LENGTH@ 56
------------------------DEL StringLiteral@@" Started from: " @AT@ 7846 @LENGTH@ 17
---------------------DEL Operator@@+ @AT@ 7863 @LENGTH@ 1
---------------------DEL MethodInvocation@@exchange.getFromEndpoint().getEndpointUri() @AT@ 7866 @LENGTH@ 43
------------------------DEL MethodInvocation@@MethodName:getFromEndpoint:[] @AT@ 7866 @LENGTH@ 26
------------------------DEL SimpleName@@Name:exchange @AT@ 7866 @LENGTH@ 8
------------------------DEL SimpleName@@MethodName:getEndpointUri:[] @AT@ 7893 @LENGTH@ 16
---------------------DEL StringLiteral@@" pollEnrich: " @AT@ 7912 @LENGTH@ 15
---------------------DEL MethodInvocation@@edpc.getEndpoint().getEndpointUri() @AT@ 7930 @LENGTH@ 35
------------------------DEL MethodInvocation@@MethodName:getEndpoint:[] @AT@ 7930 @LENGTH@ 18
------------------------DEL SimpleName@@Name:edpc @AT@ 7930 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:getEndpointUri:[] @AT@ 7949 @LENGTH@ 16


UPD VariableDeclarationStatement@@SimpleMessageListenerContainer answer=new SimpleMessageListenerContainer(); @TO@ DefaultMessageListenerContainer answer=new DefaultMessageListenerContainer(); @AT@ 3652 @LENGTH@ 77
---UPD SimpleType@@SimpleMessageListenerContainer @TO@ DefaultMessageListenerContainer @AT@ 3652 @LENGTH@ 30
---UPD VariableDeclarationFragment@@answer=new SimpleMessageListenerContainer() @TO@ answer=new DefaultMessageListenerContainer() @AT@ 3683 @LENGTH@ 45
------UPD ClassInstanceCreation@@SimpleMessageListenerContainer[] @TO@ DefaultMessageListenerContainer[] @AT@ 3692 @LENGTH@ 36
---------UPD SimpleType@@SimpleMessageListenerContainer @TO@ DefaultMessageListenerContainer @AT@ 3696 @LENGTH@ 30


DEL IfStatement@@if (true) return; @AT@ 8457 @LENGTH@ 23
---DEL BooleanLiteral@@true @AT@ 8461 @LENGTH@ 4
---DEL Block@@ThenBody:return; @AT@ 8473 @LENGTH@ 7
------DEL ReturnStatement@@ @AT@ 8473 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals("Bye World",out.getOut().getBody()) @TO@ MethodInvocation:assertEquals("Bye World",out.getIn().getBody()) @AT@ 2020 @LENGTH@ 50
---UPD MethodInvocation@@assertEquals("Bye World",out.getOut().getBody()) @TO@ assertEquals("Bye World",out.getIn().getBody()) @AT@ 2020 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertEquals:["Bye World", out.getOut().getBody()] @TO@ MethodName:assertEquals:["Bye World", out.getIn().getBody()] @AT@ 2020 @LENGTH@ 49
---------UPD MethodInvocation@@out.getOut().getBody() @TO@ out.getIn().getBody() @AT@ 2046 @LENGTH@ 22
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getIn:[] @AT@ 2046 @LENGTH@ 12


UPD MethodDeclaration@@voidMethodName:ServerControllerImpl,  @TO@ voidMethodName:ServerControllerImpl, final ServiceContainer container,  @AT@ 1665 @LENGTH@ 30
---INS SingleVariableDeclaration@@final ServiceContainer container @TO@ MethodDeclaration@@voidMethodName:ServerControllerImpl,  @AT@ 1650 @LENGTH@ 32
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ServiceContainer container @AT@ 1650 @LENGTH@ 5
------INS SimpleType@@ServiceContainer @TO@ SingleVariableDeclaration@@final ServiceContainer container @AT@ 1656 @LENGTH@ 16
------INS SimpleName@@container @TO@ SingleVariableDeclaration@@final ServiceContainer container @AT@ 1673 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:this.container=container @TO@ MethodDeclaration@@voidMethodName:ServerControllerImpl,  @AT@ 1694 @LENGTH@ 27
------INS Assignment@@this.container=container @TO@ ExpressionStatement@@Assignment:this.container=container @AT@ 1694 @LENGTH@ 26
---------INS FieldAccess@@this.container @TO@ Assignment@@this.container=container @AT@ 1694 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.container @AT@ 1694 @LENGTH@ 4
------------INS SimpleName@@container @TO@ FieldAccess@@this.container @AT@ 1699 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@this.container=container @AT@ 1708 @LENGTH@ 1
---------INS SimpleName@@container @TO@ Assignment@@this.container=container @AT@ 1711 @LENGTH@ 9


UPD VariableDeclarationStatement@@@SuppressWarnings("rawtypes") ResponseEntity<Map> response=restOperations.postForEntity(RETWEET_URL,Collections.emptyMap(),Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))); @TO@ @SuppressWarnings("rawtypes") ResponseEntity<Map> response=restOperations.postForEntity(RETWEET_URL,"",Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))); @AT@ 4321 @LENGTH@ 206
---UPD VariableDeclarationFragment@@response=restOperations.postForEntity(RETWEET_URL,Collections.emptyMap(),Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))) @TO@ response=restOperations.postForEntity(RETWEET_URL,"",Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))) @AT@ 4373 @LENGTH@ 153
------UPD MethodInvocation@@restOperations.postForEntity(RETWEET_URL,Collections.emptyMap(),Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))) @TO@ restOperations.postForEntity(RETWEET_URL,"",Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))) @AT@ 4384 @LENGTH@ 142
---------UPD SimpleName@@MethodName:postForEntity:[RETWEET_URL, Collections.emptyMap(), Map.class, Collections.singletonMap("tweet_id",Long.toString(tweetId))] @TO@ MethodName:postForEntity:[RETWEET_URL, "", Map.class, Collections.singletonMap("tweet_id",Long.toString(tweetId))] @AT@ 4399 @LENGTH@ 127
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 4426 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 4426 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 4438 @LENGTH@ 10
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:postForEntity:[RETWEET_URL, Collections.emptyMap(), Map.class, Collections.singletonMap("tweet_id",Long.toString(tweetId))] @AT@ 4426 @LENGTH@ 2


UPD IfStatement@@if (expressionParser != null) {  FluentParserContext parserContext=new FluentParserContext().evaluate(boundObject.getClass());  fieldType=expressionParser.parseExpression(field,parserContext).getValueType(boundObject);} else {  fieldType=null;} @TO@ if (StringUtils.hasLength(field) && (expressionParser != null)) {  FluentParserContext parserContext=new FluentParserContext().evaluate(boundObject.getClass());  fieldType=expressionParser.parseExpression(field,parserContext).getValueType(boundObject);} else {  fieldType=null;} @AT@ 3265 @LENGTH@ 263
---DEL InfixExpression@@expressionParser != null @AT@ 3269 @LENGTH@ 24
---INS InfixExpression@@StringUtils.hasLength(field) && (expressionParser != null) @TO@ IfStatement@@if (expressionParser != null) {  FluentParserContext parserContext=new FluentParserContext().evaluate(boundObject.getClass());  fieldType=expressionParser.parseExpression(field,parserContext).getValueType(boundObject);} else {  fieldType=null;} @AT@ 3314 @LENGTH@ 58
------INS MethodInvocation@@StringUtils.hasLength(field) @TO@ InfixExpression@@StringUtils.hasLength(field) && (expressionParser != null) @AT@ 3314 @LENGTH@ 28
---------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasLength(field) @AT@ 3314 @LENGTH@ 11
---------INS SimpleName@@MethodName:hasLength:[field] @TO@ MethodInvocation@@StringUtils.hasLength(field) @AT@ 3326 @LENGTH@ 16
------------INS SimpleName@@field @TO@ SimpleName@@MethodName:hasLength:[field] @AT@ 3336 @LENGTH@ 5
------INS Operator@@&& @TO@ InfixExpression@@StringUtils.hasLength(field) && (expressionParser != null) @AT@ 3342 @LENGTH@ 2
------INS ParenthesizedExpression@@(expressionParser != null) @TO@ InfixExpression@@StringUtils.hasLength(field) && (expressionParser != null) @AT@ 3346 @LENGTH@ 26
---------INS InfixExpression@@expressionParser != null @TO@ ParenthesizedExpression@@(expressionParser != null) @AT@ 3347 @LENGTH@ 24
------------MOV SimpleName@@expressionParser @TO@ InfixExpression@@expressionParser != null @AT@ 3269 @LENGTH@ 16
------------MOV Operator@@!= @TO@ InfixExpression@@expressionParser != null @AT@ 3285 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@expressionParser != null @AT@ 3289 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("Hello World") @TO@ MethodInvocation:mock.expectedMessageCount(1) @AT@ 3101 @LENGTH@ 43
---UPD MethodInvocation@@mock.expectedBodiesReceived("Hello World") @TO@ mock.expectedMessageCount(1) @AT@ 3101 @LENGTH@ 42
------UPD SimpleName@@MethodName:expectedBodiesReceived:["Hello World"] @TO@ MethodName:expectedMessageCount:[1] @AT@ 3106 @LENGTH@ 37
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedBodiesReceived:["Hello World"] @AT@ 3115 @LENGTH@ 1
---------DEL StringLiteral@@"Hello World" @AT@ 3129 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:answer.setFileName(file.getName()) @TO@ MethodInvocation:answer.setFileName(answer.getRelativeFilePath()) @AT@ 5148 @LENGTH@ 35
---UPD MethodInvocation@@answer.setFileName(file.getName()) @TO@ answer.setFileName(answer.getRelativeFilePath()) @AT@ 5148 @LENGTH@ 34
------UPD SimpleName@@MethodName:setFileName:[file.getName()] @TO@ MethodName:setFileName:[answer.getRelativeFilePath()] @AT@ 5155 @LENGTH@ 27
---------UPD MethodInvocation@@file.getName() @TO@ answer.getRelativeFilePath() @AT@ 5167 @LENGTH@ 14
------------UPD SimpleName@@Name:file @TO@ Name:answer @AT@ 5167 @LENGTH@ 4
------------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:getRelativeFilePath:[] @AT@ 5172 @LENGTH@ 9


UPD TryStatement@@try {  done=true;  if (isPollAllowed()) {    if (retryCounter == -1) {      if (LOG.isTraceEnabled()) {        LOG.trace("Starting to poll: " + this.getEndpoint());      }    } else {      if (LOG.isDebugEnabled()) {        LOG.debug("Retrying attempt " + retryCounter + " to poll: "+ this.getEndpoint());      }    }    boolean begin=pollStrategy.begin(this,getEndpoint());    if (begin) {      retryCounter++;      poll();      pollStrategy.commit(this,getEndpoint());    } else {      if (LOG.isDebugEnabled()) {        LOG.debug("Cannot begin polling as pollStrategy returned false: " + pollStrategy);      }    }  }  if (LOG.isTraceEnabled()) {    LOG.trace("Finished polling: " + this.getEndpoint());  }} catch (Exception e) {  try {    boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);    if (retry) {      done=false;    }  } catch (  Exception re) {    throw ObjectHelper.wrapRuntimeCamelException(re);  }}catch (Error e) {  log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ e.getMessage(),e);  throw e;} @TO@ try {  done=true;  if (isPollAllowed()) {    if (retryCounter == -1) {      if (LOG.isTraceEnabled()) {        LOG.trace("Starting to poll: " + this.getEndpoint());      }    } else {      if (LOG.isDebugEnabled()) {        LOG.debug("Retrying attempt " + retryCounter + " to poll: "+ this.getEndpoint());      }    }    boolean begin=pollStrategy.begin(this,getEndpoint());    if (begin) {      retryCounter++;      poll();      pollStrategy.commit(this,getEndpoint());    } else {      if (LOG.isDebugEnabled()) {        LOG.debug("Cannot begin polling as pollStrategy returned false: " + pollStrategy);      }    }  }  if (LOG.isTraceEnabled()) {    LOG.trace("Finished polling: " + this.getEndpoint());  }} catch (Exception e) {  try {    boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);    if (retry) {      done=false;    }  } catch (  Throwable t) {    log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);    done=true;  }}catch (Throwable t) {  log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);  done=true;} @AT@ 3080 @LENGTH@ 1884
---UPD CatchClause@@catch (Exception e) {  try {    boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);    if (retry) {      done=false;    }  } catch (  Exception re) {    throw ObjectHelper.wrapRuntimeCamelException(re);  }} @TO@ catch (Exception e) {  try {    boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);    if (retry) {      done=false;    }  } catch (  Throwable t) {    log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);    done=true;  }} @AT@ 4303 @LENGTH@ 376
------UPD TryStatement@@try {  boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);  if (retry) {    done=false;  }} catch (Exception re) {  throw ObjectHelper.wrapRuntimeCamelException(re);} @TO@ try {  boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);  if (retry) {    done=false;  }} catch (Throwable t) {  log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);  done=true;} @AT@ 4341 @LENGTH@ 324
---------UPD CatchClause@@catch (Exception re) {  throw ObjectHelper.wrapRuntimeCamelException(re);} @TO@ catch (Throwable t) {  log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);  done=true;} @AT@ 4555 @LENGTH@ 110
------------UPD SingleVariableDeclaration@@Exception re @TO@ Throwable t @AT@ 4562 @LENGTH@ 12
---------------UPD SimpleType@@Exception @TO@ Throwable @AT@ 4562 @LENGTH@ 9
---------------UPD SimpleName@@re @TO@ t @AT@ 4572 @LENGTH@ 2
------------DEL ThrowStatement@@MethodInvocation:ObjectHelper.wrapRuntimeCamelException(re) @AT@ 4598 @LENGTH@ 49
---------------DEL MethodInvocation@@ObjectHelper.wrapRuntimeCamelException(re) @AT@ 4604 @LENGTH@ 42
------------INS ExpressionStatement@@MethodInvocation:log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @TO@ CatchClause@@catch (Exception re) {  throw ObjectHelper.wrapRuntimeCamelException(re);} @AT@ 4745 @LENGTH@ 132
---------------INS MethodInvocation@@log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @TO@ ExpressionStatement@@MethodInvocation:log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @AT@ 4745 @LENGTH@ 131
------------------MOV SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @AT@ 4604 @LENGTH@ 12
------------------MOV SimpleName@@MethodName:wrapRuntimeCamelException:[re] @TO@ MethodInvocation@@log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @AT@ 4617 @LENGTH@ 29
---------------------DEL SimpleName@@re @AT@ 4643 @LENGTH@ 2
---------------------INS InfixExpression@@"Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage() @TO@ SimpleName@@MethodName:wrapRuntimeCamelException:[re] @AT@ 4755 @LENGTH@ 117
------------------------INS StringLiteral@@"Consumer " @TO@ InfixExpression@@"Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage() @AT@ 4755 @LENGTH@ 11
------------------------INS Operator@@+ @TO@ InfixExpression@@"Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage() @AT@ 4766 @LENGTH@ 1
------------------------INS ThisExpression@@this @TO@ InfixExpression@@"Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage() @AT@ 4769 @LENGTH@ 4
------------------------INS StringLiteral@@" could not poll endpoint: " @TO@ InfixExpression@@"Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage() @AT@ 4777 @LENGTH@ 28
------------------------INS MethodInvocation@@getEndpoint().getEndpointUri() @TO@ InfixExpression@@"Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage() @AT@ 4808 @LENGTH@ 30
---------------------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().getEndpointUri() @AT@ 4808 @LENGTH@ 13
---------------------------INS SimpleName@@MethodName:getEndpointUri:[] @TO@ MethodInvocation@@getEndpoint().getEndpointUri() @AT@ 4822 @LENGTH@ 16
------------------------INS StringLiteral@@" caused by: " @TO@ InfixExpression@@"Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage() @AT@ 4841 @LENGTH@ 14
------------------------INS MethodInvocation@@t.getMessage() @TO@ InfixExpression@@"Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage() @AT@ 4858 @LENGTH@ 14
---------------------------INS SimpleName@@Name:t @TO@ MethodInvocation@@t.getMessage() @AT@ 4858 @LENGTH@ 1
---------------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@t.getMessage() @AT@ 4860 @LENGTH@ 12
---------------------INS SimpleName@@t @TO@ SimpleName@@MethodName:wrapRuntimeCamelException:[re] @AT@ 4874 @LENGTH@ 1
------------INS ExpressionStatement@@Assignment:done=true @TO@ CatchClause@@catch (Exception re) {  throw ObjectHelper.wrapRuntimeCamelException(re);} @AT@ 4954 @LENGTH@ 12
---------------INS Assignment@@done=true @TO@ ExpressionStatement@@Assignment:done=true @AT@ 4954 @LENGTH@ 11
------------------INS SimpleName@@done @TO@ Assignment@@done=true @AT@ 4954 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@done=true @AT@ 4958 @LENGTH@ 1
------------------INS BooleanLiteral@@true @TO@ Assignment@@done=true @AT@ 4961 @LENGTH@ 4
---UPD CatchClause@@catch (Error e) {  log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ e.getMessage(),e);  throw e;} @TO@ catch (Throwable t) {  log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);  done=true;} @AT@ 4680 @LENGTH@ 284
------UPD SingleVariableDeclaration@@Error e @TO@ Throwable t @AT@ 4687 @LENGTH@ 7
---------UPD SimpleType@@Error @TO@ Throwable @AT@ 4687 @LENGTH@ 5
---------UPD SimpleName@@e @TO@ t @AT@ 4693 @LENGTH@ 1
------UPD ExpressionStatement@@MethodInvocation:log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ e.getMessage(),e) @TO@ MethodInvocation:log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @AT@ 4793 @LENGTH@ 132
---------UPD MethodInvocation@@log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ e.getMessage(),e) @TO@ log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @AT@ 4793 @LENGTH@ 131
------------UPD SimpleName@@MethodName:fatal:["Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ e.getMessage(), e] @TO@ MethodName:fatal:["Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(), t] @AT@ 4797 @LENGTH@ 127
---------------UPD InfixExpression@@"Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ e.getMessage() @TO@ "Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage() @AT@ 4803 @LENGTH@ 117
------------------UPD MethodInvocation@@e.getMessage() @TO@ t.getMessage() @AT@ 4906 @LENGTH@ 14
---------------------UPD SimpleName@@Name:e @TO@ Name:t @AT@ 4906 @LENGTH@ 1
---------------UPD SimpleName@@e @TO@ t @AT@ 4922 @LENGTH@ 1
------DEL ThrowStatement@@SimpleName:e @AT@ 4942 @LENGTH@ 8
---------DEL SimpleName@@e @AT@ 4948 @LENGTH@ 1
------INS ExpressionStatement@@Assignment:done=true @TO@ CatchClause@@catch (Error e) {  log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ e.getMessage(),e);  throw e;} @AT@ 5378 @LENGTH@ 12
---------INS Assignment@@done=true @TO@ ExpressionStatement@@Assignment:done=true @AT@ 5378 @LENGTH@ 11
------------INS SimpleName@@done @TO@ Assignment@@done=true @AT@ 5378 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@done=true @AT@ 5382 @LENGTH@ 1
------------INS BooleanLiteral@@true @TO@ Assignment@@done=true @AT@ 5385 @LENGTH@ 4


UPD MethodDeclaration@@protected, void, MethodName:doReadObject, Map map, ObjectInputStream in, IOException, ClassNotFoundException,  @TO@ protected, void, MethodName:doReadObject, Map<E,MutableInteger> map, ObjectInputStream in, IOException, ClassNotFoundException,  @AT@ 15513 @LENGTH@ 399
---UPD SingleVariableDeclaration@@Map map @TO@ Map<E,MutableInteger> map @AT@ 15541 @LENGTH@ 7
------DEL SimpleType@@Map @AT@ 15541 @LENGTH@ 3
------INS ParameterizedType@@Map<E,MutableInteger> @TO@ SingleVariableDeclaration@@Map map @AT@ 15591 @LENGTH@ 22
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<E,MutableInteger> @AT@ 15591 @LENGTH@ 3
---------INS SimpleType@@E @TO@ ParameterizedType@@Map<E,MutableInteger> @AT@ 15595 @LENGTH@ 1
---------INS SimpleType@@MutableInteger @TO@ ParameterizedType@@Map<E,MutableInteger> @AT@ 15598 @LENGTH@ 14
---UPD ForStatement@@for (int i=0; i < entrySize; i++) {  Object obj=in.readObject();  int count=in.readInt();  map.put(obj,new MutableInteger(count));  size+=count;} @TO@ for (int i=0; i < entrySize; i++) {  @SuppressWarnings("unchecked") E obj=(E)in.readObject();  int count=in.readInt();  map.put(obj,new MutableInteger(count));  size+=count;} @AT@ 15699 @LENGTH@ 207
------UPD VariableDeclarationStatement@@Object obj=in.readObject(); @TO@ @SuppressWarnings("unchecked") E obj=(E)in.readObject(); @AT@ 15749 @LENGTH@ 29
---------UPD SimpleType@@Object @TO@ E @AT@ 15749 @LENGTH@ 6
---------UPD VariableDeclarationFragment@@obj=in.readObject() @TO@ obj=(E)in.readObject() @AT@ 15756 @LENGTH@ 21
------------DEL MethodInvocation@@in.readObject() @AT@ 15762 @LENGTH@ 15
------------INS CastExpression@@(E)in.readObject() @TO@ VariableDeclarationFragment@@obj=in.readObject() @AT@ 15925 @LENGTH@ 19
---------------INS SimpleType@@E @TO@ CastExpression@@(E)in.readObject() @AT@ 15926 @LENGTH@ 1
---------------INS MethodInvocation@@in.readObject() @TO@ CastExpression@@(E)in.readObject() @AT@ 15929 @LENGTH@ 15
------------------MOV SimpleName@@Name:in @TO@ MethodInvocation@@in.readObject() @AT@ 15762 @LENGTH@ 2
------------------MOV SimpleName@@MethodName:readObject:[] @TO@ MethodInvocation@@in.readObject() @AT@ 15765 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:from("file:/myfile").to("mock:test") @TO@ MethodInvocation:from("file:myfile").to("mock:test") @AT@ 1847 @LENGTH@ 37
---UPD MethodInvocation@@from("file:/myfile").to("mock:test") @TO@ from("file:myfile").to("mock:test") @AT@ 1847 @LENGTH@ 36
------UPD MethodInvocation@@MethodName:from:["file:/myfile"] @TO@ MethodName:from:["file:myfile"] @AT@ 1847 @LENGTH@ 20
---------UPD StringLiteral@@"file:/myfile" @TO@ "file:myfile" @AT@ 1852 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:testCleanUpAfterRollback, Exception,  @TO@ TypeDeclaration@@[public]TransactionAwareBufferedWriterTests,  @AT@ 4882 @LENGTH@ 112
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCleanUpAfterRollback, Exception,  @AT@ 4882 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCleanUpAfterRollback, Exception,  @AT@ 4889 @LENGTH@ 4
---INS SimpleName@@MethodName:testCleanUpAfterRollback @TO@ MethodDeclaration@@public, void, MethodName:testCleanUpAfterRollback, Exception,  @AT@ 4894 @LENGTH@ 24
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testCleanUpAfterRollback, Exception,  @AT@ 4928 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:testWriteWithRollback() @TO@ MethodDeclaration@@public, void, MethodName:testCleanUpAfterRollback, Exception,  @AT@ 4942 @LENGTH@ 24
------INS MethodInvocation@@MethodName:testWriteWithRollback:[] @TO@ ExpressionStatement@@MethodInvocation:testWriteWithRollback() @AT@ 4942 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:testWriteWithCommit() @TO@ MethodDeclaration@@public, void, MethodName:testCleanUpAfterRollback, Exception,  @AT@ 4969 @LENGTH@ 22
------INS MethodInvocation@@MethodName:testWriteWithCommit:[] @TO@ ExpressionStatement@@MethodInvocation:testWriteWithCommit() @AT@ 4969 @LENGTH@ 21


UPD VariableDeclarationStatement@@long delta=System.currentTimeMillis() - start; @TO@ long delta=System.currentTimeMillis() - start + 200; @AT@ 2689 @LENGTH@ 48
---UPD VariableDeclarationFragment@@delta=System.currentTimeMillis() - start @TO@ delta=System.currentTimeMillis() - start + 200 @AT@ 2694 @LENGTH@ 42
------INS InfixExpression@@System.currentTimeMillis() - start + 200 @TO@ VariableDeclarationFragment@@delta=System.currentTimeMillis() - start @AT@ 2732 @LENGTH@ 40
---------MOV InfixExpression@@System.currentTimeMillis() - start @TO@ InfixExpression@@System.currentTimeMillis() - start + 200 @AT@ 2702 @LENGTH@ 34
---------INS Operator@@+ @TO@ InfixExpression@@System.currentTimeMillis() - start + 200 @AT@ 2766 @LENGTH@ 1
---------INS NumberLiteral@@200 @TO@ InfixExpression@@System.currentTimeMillis() - start + 200 @AT@ 2769 @LENGTH@ 3


UPD IfStatement@@if (corePoolSize == 0) {  corePoolSize=1;} @TO@ if (corePoolSize < 1) {  throw new IllegalArgumentException("The corePoolSize can't be lower than 1");} @AT@ 13586 @LENGTH@ 64
---UPD InfixExpression@@corePoolSize == 0 @TO@ corePoolSize < 1 @AT@ 13590 @LENGTH@ 17
------UPD Operator@@== @TO@ < @AT@ 13602 @LENGTH@ 2
------UPD NumberLiteral@@0 @TO@ 1 @AT@ 13606 @LENGTH@ 1
---UPD Block@@ThenBody:{  corePoolSize=1;} @TO@ ThenBody:{  throw new IllegalArgumentException("The corePoolSize can't be lower than 1");} @AT@ 13609 @LENGTH@ 41
------DEL ExpressionStatement@@Assignment:corePoolSize=1 @AT@ 13623 @LENGTH@ 17
---------DEL Assignment@@corePoolSize=1 @AT@ 13623 @LENGTH@ 16
------------DEL SimpleName@@corePoolSize @AT@ 13623 @LENGTH@ 12
------------DEL Operator@@= @AT@ 13635 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 13638 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("The corePoolSize can't be lower than 1") @TO@ Block@@ThenBody:{  corePoolSize=1;} @AT@ 13628 @LENGTH@ 77
---------INS ClassInstanceCreation@@IllegalArgumentException["The corePoolSize can't be lower than 1"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("The corePoolSize can't be lower than 1") @AT@ 13634 @LENGTH@ 70
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["The corePoolSize can't be lower than 1"] @AT@ 13634 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["The corePoolSize can't be lower than 1"] @AT@ 13638 @LENGTH@ 24
------------INS StringLiteral@@"The corePoolSize can't be lower than 1" @TO@ ClassInstanceCreation@@IllegalArgumentException["The corePoolSize can't be lower than 1"] @AT@ 13663 @LENGTH@ 40


UPD EnhancedForStatement@@for (String columnName : readPrimaryKeyNames()) {  table.findColumn(columnName).setPrimaryKey(true);} @TO@ for (String columnName : readPrimaryKeyNames()) {  Column column=table.findColumn(columnName);  if (column != null) {    column.setPrimaryKey(true);  }} @AT@ 3537 @LENGTH@ 110
---DEL ExpressionStatement@@MethodInvocation:table.findColumn(columnName).setPrimaryKey(true) @AT@ 3592 @LENGTH@ 49
---INS VariableDeclarationStatement@@Column column=table.findColumn(columnName); @TO@ EnhancedForStatement@@for (String columnName : readPrimaryKeyNames()) {  table.findColumn(columnName).setPrimaryKey(true);} @AT@ 3592 @LENGTH@ 45
------INS SimpleType@@Column @TO@ VariableDeclarationStatement@@Column column=table.findColumn(columnName); @AT@ 3592 @LENGTH@ 6
------INS VariableDeclarationFragment@@column=table.findColumn(columnName) @TO@ VariableDeclarationStatement@@Column column=table.findColumn(columnName); @AT@ 3599 @LENGTH@ 37
---------INS SimpleName@@column @TO@ VariableDeclarationFragment@@column=table.findColumn(columnName) @AT@ 3599 @LENGTH@ 6
---------INS MethodInvocation@@table.findColumn(columnName) @TO@ VariableDeclarationFragment@@column=table.findColumn(columnName) @AT@ 3608 @LENGTH@ 28
------------INS SimpleName@@Name:table @TO@ MethodInvocation@@table.findColumn(columnName) @AT@ 3608 @LENGTH@ 5
------------INS SimpleName@@MethodName:findColumn:[columnName] @TO@ MethodInvocation@@table.findColumn(columnName) @AT@ 3614 @LENGTH@ 22
---------------INS SimpleName@@columnName @TO@ SimpleName@@MethodName:findColumn:[columnName] @AT@ 3625 @LENGTH@ 10
---INS IfStatement@@if (column != null) {  column.setPrimaryKey(true);} @TO@ EnhancedForStatement@@for (String columnName : readPrimaryKeyNames()) {  table.findColumn(columnName).setPrimaryKey(true);} @AT@ 3643 @LENGTH@ 62
------INS InfixExpression@@column != null @TO@ IfStatement@@if (column != null) {  column.setPrimaryKey(true);} @AT@ 3647 @LENGTH@ 14
---------INS SimpleName@@column @TO@ InfixExpression@@column != null @AT@ 3647 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@column != null @AT@ 3653 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@column != null @AT@ 3657 @LENGTH@ 4
------INS Block@@ThenBody:{  column.setPrimaryKey(true);} @TO@ IfStatement@@if (column != null) {  column.setPrimaryKey(true);} @AT@ 3663 @LENGTH@ 42
---------INS ExpressionStatement@@MethodInvocation:column.setPrimaryKey(true) @TO@ Block@@ThenBody:{  column.setPrimaryKey(true);} @AT@ 3671 @LENGTH@ 27
------------MOV MethodInvocation@@table.findColumn(columnName).setPrimaryKey(true) @TO@ ExpressionStatement@@MethodInvocation:column.setPrimaryKey(true) @AT@ 3592 @LENGTH@ 48
---------------DEL MethodInvocation@@MethodName:findColumn:[columnName] @AT@ 3592 @LENGTH@ 28
---------------DEL SimpleName@@Name:table @AT@ 3592 @LENGTH@ 5
---------------MOV SimpleName@@columnName @TO@ MethodInvocation@@table.findColumn(columnName).setPrimaryKey(true) @AT@ 3609 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:from("direct:start").multicast(new AggregationStrategy(){
  public Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
    String body=oldExchange.getIn().getBody(String.class);
    oldExchange.getIn().setBody(body + newExchange.getIn().getBody(String.class));
    return oldExchange;
  }
}
).parallelProcessing().timeout(2000).to("direct:a","direct:b","direct:c").end().to("mock:result") @TO@ MethodInvocation:from("direct:start").multicast(new AggregationStrategy(){
  public Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
    String body=oldExchange.getIn().getBody(String.class);
    oldExchange.getIn().setBody(body + newExchange.getIn().getBody(String.class));
    return oldExchange;
  }
}
).parallelProcessing().timeout(1000).to("direct:a","direct:b","direct:c").end().to("mock:result") @AT@ 1730 @LENGTH@ 870
---UPD MethodInvocation@@from("direct:start").multicast(new AggregationStrategy(){
  public Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
    String body=oldExchange.getIn().getBody(String.class);
    oldExchange.getIn().setBody(body + newExchange.getIn().getBody(String.class));
    return oldExchange;
  }
}
).parallelProcessing().timeout(2000).to("direct:a","direct:b","direct:c").end().to("mock:result") @TO@ from("direct:start").multicast(new AggregationStrategy(){
  public Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
    String body=oldExchange.getIn().getBody(String.class);
    oldExchange.getIn().setBody(body + newExchange.getIn().getBody(String.class));
    return oldExchange;
  }
}
).parallelProcessing().timeout(1000).to("direct:a","direct:b","direct:c").end().to("mock:result") @AT@ 1730 @LENGTH@ 869
------UPD MethodInvocation@@MethodName:timeout:[2000] @TO@ MethodName:timeout:[1000] @AT@ 1730 @LENGTH@ 698
---------UPD NumberLiteral@@2000 @TO@ 1000 @AT@ 2423 @LENGTH@ 4


UPD MethodDeclaration@@public, Binding, MethodName:with, Enum routingKeyEnum,  @TO@ public, Binding, MethodName:with, Enum<?> routingKeyEnum,  @AT@ 2648 @LENGTH@ 123
---UPD SingleVariableDeclaration@@Enum routingKeyEnum @TO@ Enum<?> routingKeyEnum @AT@ 2668 @LENGTH@ 19
------INS ParameterizedType@@Enum<?> @TO@ SingleVariableDeclaration@@Enum routingKeyEnum @AT@ 2605 @LENGTH@ 7
---------INS SimpleType@@Enum @TO@ ParameterizedType@@Enum<?> @AT@ 2605 @LENGTH@ 4
---------INS WildcardType@@? @TO@ ParameterizedType@@Enum<?> @AT@ 2610 @LENGTH@ 1
------DEL SimpleType@@Enum @AT@ 2668 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:this.wildcards=wildcards @TO@ Assignment:this.wildcards=new String[wildcards.length] @AT@ 3020 @LENGTH@ 27
---UPD Assignment@@this.wildcards=wildcards @TO@ this.wildcards=new String[wildcards.length] @AT@ 3020 @LENGTH@ 26
------INS ArrayCreation@@new String[wildcards.length] @TO@ Assignment@@this.wildcards=wildcards @AT@ 3037 @LENGTH@ 28
---------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[wildcards.length] @AT@ 3041 @LENGTH@ 24
------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 3041 @LENGTH@ 6
---------INS QualifiedName@@wildcards.length @TO@ ArrayCreation@@new String[wildcards.length] @AT@ 3048 @LENGTH@ 16
------------INS SimpleName@@wildcards @TO@ QualifiedName@@wildcards.length @AT@ 3048 @LENGTH@ 9
------------INS SimpleName@@length @TO@ QualifiedName@@wildcards.length @AT@ 3058 @LENGTH@ 6
------DEL SimpleName@@wildcards @AT@ 3037 @LENGTH@ 9


UPD VariableDeclarationStatement@@ListOrderedMap lom=(ListOrderedMap)map; @TO@ ListOrderedMap<String,String> lom=(ListOrderedMap<String,String>)map; @AT@ 10017 @LENGTH@ 42
---INS ParameterizedType@@ListOrderedMap<String,String> @TO@ VariableDeclarationStatement@@ListOrderedMap lom=(ListOrderedMap)map; @AT@ 10017 @LENGTH@ 30
------INS SimpleType@@ListOrderedMap @TO@ ParameterizedType@@ListOrderedMap<String,String> @AT@ 10017 @LENGTH@ 14
------INS SimpleType@@String @TO@ ParameterizedType@@ListOrderedMap<String,String> @AT@ 10032 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@ListOrderedMap<String,String> @AT@ 10040 @LENGTH@ 6
---DEL SimpleType@@ListOrderedMap @AT@ 10017 @LENGTH@ 14
---UPD VariableDeclarationFragment@@lom=(ListOrderedMap)map @TO@ lom=(ListOrderedMap<String,String>)map @AT@ 10032 @LENGTH@ 26
------UPD CastExpression@@(ListOrderedMap)map @TO@ (ListOrderedMap<String,String>)map @AT@ 10038 @LENGTH@ 20
---------DEL SimpleType@@ListOrderedMap @AT@ 10039 @LENGTH@ 14
---------INS ParameterizedType@@ListOrderedMap<String,String> @TO@ CastExpression@@(ListOrderedMap)map @AT@ 10055 @LENGTH@ 30
------------INS SimpleType@@ListOrderedMap @TO@ ParameterizedType@@ListOrderedMap<String,String> @AT@ 10055 @LENGTH@ 14
------------INS SimpleType@@String @TO@ ParameterizedType@@ListOrderedMap<String,String> @AT@ 10070 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@ListOrderedMap<String,String> @AT@ 10078 @LENGTH@ 6


UPD IfStatement@@if (request.getAttribute(CamelContinuationServlet.EXCHANGE_ATRRIBUTE_NAME) == null) {  super.doFilter(request,response,chain);} else {  chain.doFilter(request,response);} @TO@ if (request.getAttribute(CamelContinuationServlet.EXCHANGE_ATTRIBUTE_NAME) == null) {  super.doFilter(request,response,chain);} else {  chain.doFilter(request,response);} @AT@ 1441 @LENGTH@ 217
---UPD InfixExpression@@request.getAttribute(CamelContinuationServlet.EXCHANGE_ATRRIBUTE_NAME) == null @TO@ request.getAttribute(CamelContinuationServlet.EXCHANGE_ATTRIBUTE_NAME) == null @AT@ 1445 @LENGTH@ 78
------UPD MethodInvocation@@request.getAttribute(CamelContinuationServlet.EXCHANGE_ATRRIBUTE_NAME) @TO@ request.getAttribute(CamelContinuationServlet.EXCHANGE_ATTRIBUTE_NAME) @AT@ 1445 @LENGTH@ 70
---------UPD SimpleName@@MethodName:getAttribute:[CamelContinuationServlet.EXCHANGE_ATRRIBUTE_NAME] @TO@ MethodName:getAttribute:[CamelContinuationServlet.EXCHANGE_ATTRIBUTE_NAME] @AT@ 1453 @LENGTH@ 62
------------UPD QualifiedName@@CamelContinuationServlet.EXCHANGE_ATRRIBUTE_NAME @TO@ CamelContinuationServlet.EXCHANGE_ATTRIBUTE_NAME @AT@ 1466 @LENGTH@ 48
---------------UPD SimpleName@@EXCHANGE_ATRRIBUTE_NAME @TO@ EXCHANGE_ATTRIBUTE_NAME @AT@ 1491 @LENGTH@ 23


UPD MethodDeclaration@@public, Binding, MethodName:with, Enum routingKeyEnum,  @TO@ public, Binding, MethodName:with, Enum<?> routingKeyEnum,  @AT@ 2145 @LENGTH@ 123
---UPD SingleVariableDeclaration@@Enum routingKeyEnum @TO@ Enum<?> routingKeyEnum @AT@ 2165 @LENGTH@ 19
------INS ParameterizedType@@Enum<?> @TO@ SingleVariableDeclaration@@Enum routingKeyEnum @AT@ 2132 @LENGTH@ 7
---------INS SimpleType@@Enum @TO@ ParameterizedType@@Enum<?> @AT@ 2132 @LENGTH@ 4
---------INS WildcardType@@? @TO@ ParameterizedType@@Enum<?> @AT@ 2137 @LENGTH@ 1
------DEL SimpleType@@Enum @AT@ 2165 @LENGTH@ 4


UPD IfStatement@@if (path.startsWith("/") || path.startsWith("\\")) {  doChangeDirectory(path.substring(0,1));  path=path.substring(1);} @TO@ if (FileUtil.hasLeadingSeparator(path)) {  doChangeDirectory(path.substring(0,1));  path=path.substring(1);} @AT@ 21603 @LENGTH@ 188
---DEL InfixExpression@@path.startsWith("/") || path.startsWith("\\") @AT@ 21607 @LENGTH@ 45
------DEL MethodInvocation@@path.startsWith("/") @AT@ 21607 @LENGTH@ 20
------DEL Operator@@|| @AT@ 21627 @LENGTH@ 2
------DEL MethodInvocation@@path.startsWith("\\") @AT@ 21631 @LENGTH@ 21
---------DEL SimpleName@@Name:path @AT@ 21631 @LENGTH@ 4
---------DEL SimpleName@@MethodName:startsWith:["\\"] @AT@ 21636 @LENGTH@ 16
------------DEL StringLiteral@@"\\" @AT@ 21647 @LENGTH@ 4
---INS MethodInvocation@@FileUtil.hasLeadingSeparator(path) @TO@ IfStatement@@if (path.startsWith("/") || path.startsWith("\\")) {  doChangeDirectory(path.substring(0,1));  path=path.substring(1);} @AT@ 21607 @LENGTH@ 34
------MOV SimpleName@@Name:path @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator(path) @AT@ 21607 @LENGTH@ 4
------MOV SimpleName@@MethodName:startsWith:["/"] @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator(path) @AT@ 21612 @LENGTH@ 15
---------INS SimpleName@@path @TO@ SimpleName@@MethodName:startsWith:["/"] @AT@ 21636 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:this.serverCommunicationHandler=ServerCommunicationHandlerFactory.getInstance().getProcessManagerSlave(environment,messageHandler) @TO@ Assignment:this.serverCommunicationHandler=ServerCommunicationHandlerFactory.getInstance().getServerCommunicationHandler(environment,messageHandler) @AT@ 3669 @LENGTH@ 134
---UPD Assignment@@this.serverCommunicationHandler=ServerCommunicationHandlerFactory.getInstance().getProcessManagerSlave(environment,messageHandler) @TO@ this.serverCommunicationHandler=ServerCommunicationHandlerFactory.getInstance().getServerCommunicationHandler(environment,messageHandler) @AT@ 3669 @LENGTH@ 133
------UPD MethodInvocation@@ServerCommunicationHandlerFactory.getInstance().getProcessManagerSlave(environment,messageHandler) @TO@ ServerCommunicationHandlerFactory.getInstance().getServerCommunicationHandler(environment,messageHandler) @AT@ 3703 @LENGTH@ 99
---------UPD SimpleName@@MethodName:getProcessManagerSlave:[environment, messageHandler] @TO@ MethodName:getServerCommunicationHandler:[environment, messageHandler] @AT@ 3751 @LENGTH@ 51


INS MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @TO@ TypeDeclaration@@[public, final]ScheduledThreadPoolExecutorElement, AbstractExecutorElement<ScheduledThreadPoolExecutorElement> @AT@ 6041 @LENGTH@ 101
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 6041 @LENGTH@ 9
---INS SimpleType@@Element @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 6051 @LENGTH@ 7
---INS SimpleName@@MethodName:getStandardElement @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 6059 @LENGTH@ 18
---INS ReturnStatement@@QualifiedName:Element.SCHEDULED_THREAD_POOL_EXECUTOR @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 6090 @LENGTH@ 46
------INS QualifiedName@@Element.SCHEDULED_THREAD_POOL_EXECUTOR @TO@ ReturnStatement@@QualifiedName:Element.SCHEDULED_THREAD_POOL_EXECUTOR @AT@ 6097 @LENGTH@ 38
---------INS SimpleName@@Element @TO@ QualifiedName@@Element.SCHEDULED_THREAD_POOL_EXECUTOR @AT@ 6097 @LENGTH@ 7
---------INS SimpleName@@SCHEDULED_THREAD_POOL_EXECUTOR @TO@ QualifiedName@@Element.SCHEDULED_THREAD_POOL_EXECUTOR @AT@ 6105 @LENGTH@ 30


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[@SuppressWarnings({"unchecked"}), public]SimpleBucketKeyPair, [BucketKeyPair, Comparable] @AT@ 735 @LENGTH@ 92
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 735 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 742 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 749 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:String.format("{bucket=%s, key=%s}",bucket,key) @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 766 @LENGTH@ 57
------INS MethodInvocation@@String.format("{bucket=%s, key=%s}",bucket,key) @TO@ ReturnStatement@@MethodInvocation:String.format("{bucket=%s, key=%s}",bucket,key) @AT@ 773 @LENGTH@ 49
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("{bucket=%s, key=%s}",bucket,key) @AT@ 773 @LENGTH@ 6
---------INS SimpleName@@MethodName:format:["{bucket=%s, key=%s}", bucket, key] @TO@ MethodInvocation@@String.format("{bucket=%s, key=%s}",bucket,key) @AT@ 780 @LENGTH@ 42
------------INS StringLiteral@@"{bucket=%s, key=%s}" @TO@ SimpleName@@MethodName:format:["{bucket=%s, key=%s}", bucket, key] @AT@ 787 @LENGTH@ 21
------------INS SimpleName@@bucket @TO@ SimpleName@@MethodName:format:["{bucket=%s, key=%s}", bucket, key] @AT@ 810 @LENGTH@ 6
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:format:["{bucket=%s, key=%s}", bucket, key] @AT@ 818 @LENGTH@ 3


DEL MethodDeclaration@@public, voidMethodName:NicMatchCriteriaElement, XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 1114 @LENGTH@ 208
---DEL Modifier@@public @AT@ 1114 @LENGTH@ 6
---DEL SimpleName@@MethodName:NicMatchCriteriaElement @AT@ 1121 @LENGTH@ 23
---DEL SingleVariableDeclaration@@XMLExtendedStreamReader reader @AT@ 1145 @LENGTH@ 30
------DEL SimpleType@@XMLExtendedStreamReader @AT@ 1145 @LENGTH@ 23
------DEL SimpleName@@reader @AT@ 1169 @LENGTH@ 6
---DEL SimpleType@@XMLStreamException @AT@ 1184 @LENGTH@ 18


UPD IfStatement@@if (queryString == null) {  queryString=parameterName + "=" + parameterValue;} else {  queryString+="&" + parameterName + "="+ parameterValue;} @TO@ if (queryString == null) {  queryString=parameterName + "=" + encode(parameterValue);} else {  queryString+="&" + parameterName + "="+ encode(parameterValue);} @AT@ 962 @LENGTH@ 158
---UPD Block@@ThenBody:{  queryString=parameterName + "=" + parameterValue;} @TO@ ThenBody:{  queryString=parameterName + "=" + encode(parameterValue);} @AT@ 987 @LENGTH@ 60
------UPD ExpressionStatement@@Assignment:queryString=parameterName + "=" + parameterValue @TO@ Assignment:queryString=parameterName + "=" + encode(parameterValue) @AT@ 992 @LENGTH@ 51
---------UPD Assignment@@queryString=parameterName + "=" + parameterValue @TO@ queryString=parameterName + "=" + encode(parameterValue) @AT@ 992 @LENGTH@ 50
------------UPD InfixExpression@@parameterName + "=" + parameterValue @TO@ parameterName + "=" + encode(parameterValue) @AT@ 1006 @LENGTH@ 36
---------------DEL SimpleName@@parameterValue @AT@ 1028 @LENGTH@ 14
---------------INS MethodInvocation@@encode(parameterValue) @TO@ InfixExpression@@parameterName + "=" + parameterValue @AT@ 1100 @LENGTH@ 22
------------------INS SimpleName@@MethodName:encode:[parameterValue] @TO@ MethodInvocation@@encode(parameterValue) @AT@ 1100 @LENGTH@ 22
---------------------INS SimpleName@@parameterValue @TO@ SimpleName@@MethodName:encode:[parameterValue] @AT@ 1107 @LENGTH@ 14
---UPD Block@@ElseBody:{  queryString+="&" + parameterName + "="+ parameterValue;} @TO@ ElseBody:{  queryString+="&" + parameterName + "="+ encode(parameterValue);} @AT@ 1053 @LENGTH@ 67
------UPD ExpressionStatement@@Assignment:queryString+="&" + parameterName + "="+ parameterValue @TO@ Assignment:queryString+="&" + parameterName + "="+ encode(parameterValue) @AT@ 1058 @LENGTH@ 58
---------UPD Assignment@@queryString+="&" + parameterName + "="+ parameterValue @TO@ queryString+="&" + parameterName + "="+ encode(parameterValue) @AT@ 1058 @LENGTH@ 57
------------UPD InfixExpression@@"&" + parameterName + "="+ parameterValue @TO@ "&" + parameterName + "="+ encode(parameterValue) @AT@ 1073 @LENGTH@ 42
---------------DEL SimpleName@@parameterValue @AT@ 1101 @LENGTH@ 14
---------------INS MethodInvocation@@encode(parameterValue) @TO@ InfixExpression@@"&" + parameterName + "="+ parameterValue @AT@ 1181 @LENGTH@ 22
------------------INS SimpleName@@MethodName:encode:[parameterValue] @TO@ MethodInvocation@@encode(parameterValue) @AT@ 1181 @LENGTH@ 22
---------------------INS SimpleName@@parameterValue @TO@ SimpleName@@MethodName:encode:[parameterValue] @AT@ 1188 @LENGTH@ 14


UPD TryStatement@@try {  message.setProperty(name,value);  LOG.debug("Added property name: " + name + " value: "+ value.toString());} catch (IllegalArgumentException iae) {  LOG.debug("Not adding property " + name + " to XMPP message due to "+ iae);} @TO@ try {  message.setProperty(name,value);  if (LOG.isTraceEnabled()) {    LOG.trace("Added property name: " + name + " value: "+ value.toString());  }} catch (IllegalArgumentException iae) {  if (LOG.isDebugEnabled()) {    LOG.debug("Cannot add property " + name + " to XMPP message due: ",iae);  }} @AT@ 2998 @LENGTH@ 346
---INS IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Added property name: " + name + " value: "+ value.toString());} @TO@ TryStatement@@try {  message.setProperty(name,value);  LOG.debug("Added property name: " + name + " value: "+ value.toString());} catch (IllegalArgumentException iae) {  LOG.debug("Not adding property " + name + " to XMPP message due to "+ iae);} @AT@ 3086 @LENGTH@ 156
------INS MethodInvocation@@LOG.isTraceEnabled() @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Added property name: " + name + " value: "+ value.toString());} @AT@ 3090 @LENGTH@ 20
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 3090 @LENGTH@ 3
---------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 3094 @LENGTH@ 16
------INS Block@@ThenBody:{  LOG.trace("Added property name: " + name + " value: "+ value.toString());} @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Added property name: " + name + " value: "+ value.toString());} @AT@ 3112 @LENGTH@ 130
---------MOV ExpressionStatement@@MethodInvocation:LOG.debug("Added property name: " + name + " value: "+ value.toString()) @TO@ Block@@ThenBody:{  LOG.trace("Added property name: " + name + " value: "+ value.toString());} @AT@ 3086 @LENGTH@ 74
------------UPD MethodInvocation@@LOG.debug("Added property name: " + name + " value: "+ value.toString()) @TO@ LOG.trace("Added property name: " + name + " value: "+ value.toString()) @AT@ 3086 @LENGTH@ 73
---------------UPD SimpleName@@MethodName:debug:["Added property name: " + name + " value: "+ value.toString()] @TO@ MethodName:trace:["Added property name: " + name + " value: "+ value.toString()] @AT@ 3090 @LENGTH@ 69
---------MOV ExpressionStatement@@MethodInvocation:LOG.debug("Added property name: " + name + " value: "+ value.toString()) @TO@ Block@@ThenBody:{  LOG.trace("Added property name: " + name + " value: "+ value.toString());} @AT@ 3086 @LENGTH@ 74
------------UPD MethodInvocation@@LOG.debug("Added property name: " + name + " value: "+ value.toString()) @TO@ LOG.trace("Added property name: " + name + " value: "+ value.toString()) @AT@ 3086 @LENGTH@ 73
---------------UPD SimpleName@@MethodName:debug:["Added property name: " + name + " value: "+ value.toString()] @TO@ MethodName:trace:["Added property name: " + name + " value: "+ value.toString()] @AT@ 3090 @LENGTH@ 69
---UPD ExpressionStatement@@MethodInvocation:LOG.debug("Added property name: " + name + " value: "+ value.toString()) @TO@ MethodInvocation:LOG.trace("Added property name: " + name + " value: "+ value.toString()) @AT@ 3086 @LENGTH@ 74
---UPD CatchClause@@catch (IllegalArgumentException iae) {  LOG.debug("Not adding property " + name + " to XMPP message due to "+ iae);} @TO@ catch (IllegalArgumentException iae) {  if (LOG.isDebugEnabled()) {    LOG.debug("Cannot add property " + name + " to XMPP message due: ",iae);  }} @AT@ 3183 @LENGTH@ 161
------DEL ExpressionStatement@@MethodInvocation:LOG.debug("Not adding property " + name + " to XMPP message due to "+ iae) @AT@ 3246 @LENGTH@ 76
------INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Cannot add property " + name + " to XMPP message due: ",iae);} @TO@ CatchClause@@catch (IllegalArgumentException iae) {  LOG.debug("Not adding property " + name + " to XMPP message due to "+ iae);} @AT@ 3328 @LENGTH@ 155
---------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Cannot add property " + name + " to XMPP message due: ",iae);} @AT@ 3332 @LENGTH@ 20
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 3332 @LENGTH@ 3
------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 3336 @LENGTH@ 16
---------INS Block@@ThenBody:{  LOG.debug("Cannot add property " + name + " to XMPP message due: ",iae);} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Cannot add property " + name + " to XMPP message due: ",iae);} @AT@ 3354 @LENGTH@ 129
------------INS ExpressionStatement@@MethodInvocation:LOG.debug("Cannot add property " + name + " to XMPP message due: ",iae) @TO@ Block@@ThenBody:{  LOG.debug("Cannot add property " + name + " to XMPP message due: ",iae);} @AT@ 3384 @LENGTH@ 73
---------------MOV MethodInvocation@@LOG.debug("Not adding property " + name + " to XMPP message due to "+ iae) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Cannot add property " + name + " to XMPP message due: ",iae) @AT@ 3246 @LENGTH@ 75
------------------UPD SimpleName@@MethodName:debug:["Not adding property " + name + " to XMPP message due to "+ iae] @TO@ MethodName:debug:["Cannot add property " + name + " to XMPP message due: ", iae] @AT@ 3250 @LENGTH@ 71
---------------------DEL InfixExpression@@"Not adding property " + name + " to XMPP message due to "+ iae @AT@ 3256 @LENGTH@ 64
------------------------DEL SimpleName@@iae @AT@ 3317 @LENGTH@ 3
---------------------INS InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @TO@ SimpleName@@MethodName:debug:["Not adding property " + name + " to XMPP message due to "+ iae] @AT@ 3394 @LENGTH@ 56
------------------------MOV StringLiteral@@"Not adding property " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3256 @LENGTH@ 22
------------------------MOV StringLiteral@@"Not adding property " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3256 @LENGTH@ 22
------------------------MOV StringLiteral@@"Not adding property " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3256 @LENGTH@ 22
------------------------MOV StringLiteral@@"Not adding property " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3256 @LENGTH@ 22
------------------------MOV StringLiteral@@"Not adding property " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3256 @LENGTH@ 22
------------------------MOV Operator@@+ @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3278 @LENGTH@ 1
------------------------MOV Operator@@+ @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3278 @LENGTH@ 1
------------------------MOV Operator@@+ @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3278 @LENGTH@ 1
------------------------MOV Operator@@+ @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3278 @LENGTH@ 1
------------------------MOV Operator@@+ @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3278 @LENGTH@ 1
------------------------MOV SimpleName@@name @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3281 @LENGTH@ 4
------------------------MOV SimpleName@@name @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3281 @LENGTH@ 4
------------------------MOV SimpleName@@name @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3281 @LENGTH@ 4
------------------------MOV SimpleName@@name @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3281 @LENGTH@ 4
------------------------MOV SimpleName@@name @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3281 @LENGTH@ 4
------------------------MOV StringLiteral@@" to XMPP message due to " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3288 @LENGTH@ 26
------------------------MOV StringLiteral@@" to XMPP message due to " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3288 @LENGTH@ 26
------------------------MOV StringLiteral@@" to XMPP message due to " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3288 @LENGTH@ 26
------------------------MOV StringLiteral@@" to XMPP message due to " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3288 @LENGTH@ 26
------------------------MOV StringLiteral@@" to XMPP message due to " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3288 @LENGTH@ 26
---------------------INS SimpleName@@iae @TO@ SimpleName@@MethodName:debug:["Not adding property " + name + " to XMPP message due to "+ iae] @AT@ 3452 @LENGTH@ 3
---------------MOV MethodInvocation@@LOG.debug("Not adding property " + name + " to XMPP message due to "+ iae) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Cannot add property " + name + " to XMPP message due: ",iae) @AT@ 3246 @LENGTH@ 75
------------------UPD SimpleName@@MethodName:debug:["Not adding property " + name + " to XMPP message due to "+ iae] @TO@ MethodName:debug:["Cannot add property " + name + " to XMPP message due: ", iae] @AT@ 3250 @LENGTH@ 71
---------------------DEL InfixExpression@@"Not adding property " + name + " to XMPP message due to "+ iae @AT@ 3256 @LENGTH@ 64
------------------------DEL SimpleName@@iae @AT@ 3317 @LENGTH@ 3
---------------------INS InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @TO@ SimpleName@@MethodName:debug:["Not adding property " + name + " to XMPP message due to "+ iae] @AT@ 3394 @LENGTH@ 56
------------------------MOV StringLiteral@@"Not adding property " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3256 @LENGTH@ 22
------------------------MOV StringLiteral@@"Not adding property " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3256 @LENGTH@ 22
------------------------MOV StringLiteral@@"Not adding property " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3256 @LENGTH@ 22
------------------------MOV StringLiteral@@"Not adding property " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3256 @LENGTH@ 22
------------------------MOV StringLiteral@@"Not adding property " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3256 @LENGTH@ 22
------------------------MOV Operator@@+ @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3278 @LENGTH@ 1
------------------------MOV Operator@@+ @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3278 @LENGTH@ 1
------------------------MOV Operator@@+ @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3278 @LENGTH@ 1
------------------------MOV Operator@@+ @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3278 @LENGTH@ 1
------------------------MOV Operator@@+ @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3278 @LENGTH@ 1
------------------------MOV SimpleName@@name @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3281 @LENGTH@ 4
------------------------MOV SimpleName@@name @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3281 @LENGTH@ 4
------------------------MOV SimpleName@@name @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3281 @LENGTH@ 4
------------------------MOV SimpleName@@name @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3281 @LENGTH@ 4
------------------------MOV SimpleName@@name @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3281 @LENGTH@ 4
------------------------MOV StringLiteral@@" to XMPP message due to " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3288 @LENGTH@ 26
------------------------MOV StringLiteral@@" to XMPP message due to " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3288 @LENGTH@ 26
------------------------MOV StringLiteral@@" to XMPP message due to " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3288 @LENGTH@ 26
------------------------MOV StringLiteral@@" to XMPP message due to " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3288 @LENGTH@ 26
------------------------MOV StringLiteral@@" to XMPP message due to " @TO@ InfixExpression@@"Cannot add property " + name + " to XMPP message due: " @AT@ 3288 @LENGTH@ 26
---------------------INS SimpleName@@iae @TO@ SimpleName@@MethodName:debug:["Not adding property " + name + " to XMPP message due to "+ iae] @AT@ 3452 @LENGTH@ 3


INS IfStatement@@if (answer.indexOf("CAMEL_REPLACE_ME") > -1) {  answer=answer.replaceAll("CAMEL_REPLACE_ME","\\$");} @TO@ MethodDeclaration@@public, static, String, MethodName:getThreadName, String pattern, String name,  @AT@ 3532 @LENGTH@ 123
---INS InfixExpression@@answer.indexOf("CAMEL_REPLACE_ME") > -1 @TO@ IfStatement@@if (answer.indexOf("CAMEL_REPLACE_ME") > -1) {  answer=answer.replaceAll("CAMEL_REPLACE_ME","\\$");} @AT@ 3536 @LENGTH@ 39
------INS MethodInvocation@@answer.indexOf("CAMEL_REPLACE_ME") @TO@ InfixExpression@@answer.indexOf("CAMEL_REPLACE_ME") > -1 @AT@ 3536 @LENGTH@ 34
---------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.indexOf("CAMEL_REPLACE_ME") @AT@ 3536 @LENGTH@ 6
---------INS SimpleName@@MethodName:indexOf:["CAMEL_REPLACE_ME"] @TO@ MethodInvocation@@answer.indexOf("CAMEL_REPLACE_ME") @AT@ 3543 @LENGTH@ 27
------------INS StringLiteral@@"CAMEL_REPLACE_ME" @TO@ SimpleName@@MethodName:indexOf:["CAMEL_REPLACE_ME"] @AT@ 3551 @LENGTH@ 18
------INS Operator@@> @TO@ InfixExpression@@answer.indexOf("CAMEL_REPLACE_ME") > -1 @AT@ 3570 @LENGTH@ 1
------INS PrefixExpression@@-1 @TO@ InfixExpression@@answer.indexOf("CAMEL_REPLACE_ME") > -1 @AT@ 3573 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 3573 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 3574 @LENGTH@ 1
---INS Block@@ThenBody:{  answer=answer.replaceAll("CAMEL_REPLACE_ME","\\$");} @TO@ IfStatement@@if (answer.indexOf("CAMEL_REPLACE_ME") > -1) {  answer=answer.replaceAll("CAMEL_REPLACE_ME","\\$");} @AT@ 3577 @LENGTH@ 78
------INS ExpressionStatement@@Assignment:answer=answer.replaceAll("CAMEL_REPLACE_ME","\\$") @TO@ Block@@ThenBody:{  answer=answer.replaceAll("CAMEL_REPLACE_ME","\\$");} @AT@ 3591 @LENGTH@ 54
---------INS Assignment@@answer=answer.replaceAll("CAMEL_REPLACE_ME","\\$") @TO@ ExpressionStatement@@Assignment:answer=answer.replaceAll("CAMEL_REPLACE_ME","\\$") @AT@ 3591 @LENGTH@ 53
------------INS SimpleName@@answer @TO@ Assignment@@answer=answer.replaceAll("CAMEL_REPLACE_ME","\\$") @AT@ 3591 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@answer=answer.replaceAll("CAMEL_REPLACE_ME","\\$") @AT@ 3597 @LENGTH@ 1
------------INS MethodInvocation@@answer.replaceAll("CAMEL_REPLACE_ME","\\$") @TO@ Assignment@@answer=answer.replaceAll("CAMEL_REPLACE_ME","\\$") @AT@ 3600 @LENGTH@ 44
---------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.replaceAll("CAMEL_REPLACE_ME","\\$") @AT@ 3600 @LENGTH@ 6
---------------INS SimpleName@@MethodName:replaceAll:["CAMEL_REPLACE_ME", "\\$"] @TO@ MethodInvocation@@answer.replaceAll("CAMEL_REPLACE_ME","\\$") @AT@ 3607 @LENGTH@ 37
------------------INS StringLiteral@@"CAMEL_REPLACE_ME" @TO@ SimpleName@@MethodName:replaceAll:["CAMEL_REPLACE_ME", "\\$"] @AT@ 3618 @LENGTH@ 18
------------------INS StringLiteral@@"\\$" @TO@ SimpleName@@MethodName:replaceAll:["CAMEL_REPLACE_ME", "\\$"] @AT@ 3638 @LENGTH@ 5


UPD TryStatement@@try {  beforeWrite(bts != null ? bts.length : 0);  out.write(bts);  afterWrite(bts.length);} catch (IOException e) {  handleIOException(e);} @TO@ try {  int len=bts != null ? bts.length : 0;  beforeWrite(len);  out.write(bts);  afterWrite(len);} catch (IOException e) {  handleIOException(e);} @AT@ 2391 @LENGTH@ 202
---UPD ExpressionStatement@@MethodInvocation:beforeWrite(bts != null ? bts.length : 0) @TO@ MethodInvocation:beforeWrite(len) @AT@ 2409 @LENGTH@ 42
------UPD MethodInvocation@@beforeWrite(bts != null ? bts.length : 0) @TO@ beforeWrite(len) @AT@ 2409 @LENGTH@ 41
---------UPD SimpleName@@MethodName:beforeWrite:[bts != null ? bts.length : 0] @TO@ MethodName:beforeWrite:[len] @AT@ 2409 @LENGTH@ 41
------------INS SimpleName@@len @TO@ SimpleName@@MethodName:beforeWrite:[bts != null ? bts.length : 0] @AT@ 2473 @LENGTH@ 3
---INS VariableDeclarationStatement@@int len=bts != null ? bts.length : 0; @TO@ TryStatement@@try {  beforeWrite(bts != null ? bts.length : 0);  out.write(bts);  afterWrite(bts.length);} catch (IOException e) {  handleIOException(e);} @AT@ 2409 @LENGTH@ 39
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int len=bts != null ? bts.length : 0; @AT@ 2409 @LENGTH@ 3
------INS VariableDeclarationFragment@@len=bts != null ? bts.length : 0 @TO@ VariableDeclarationStatement@@int len=bts != null ? bts.length : 0; @AT@ 2413 @LENGTH@ 34
---------INS SimpleName@@len @TO@ VariableDeclarationFragment@@len=bts != null ? bts.length : 0 @AT@ 2413 @LENGTH@ 3
---------MOV ConditionalExpression@@bts != null ? bts.length : 0 @TO@ VariableDeclarationFragment@@len=bts != null ? bts.length : 0 @AT@ 2421 @LENGTH@ 28
---UPD ExpressionStatement@@MethodInvocation:afterWrite(bts.length) @TO@ MethodInvocation:afterWrite(len) @AT@ 2492 @LENGTH@ 23
------UPD MethodInvocation@@afterWrite(bts.length) @TO@ afterWrite(len) @AT@ 2492 @LENGTH@ 22
---------UPD SimpleName@@MethodName:afterWrite:[bts.length] @TO@ MethodName:afterWrite:[len] @AT@ 2492 @LENGTH@ 22
------------DEL QualifiedName@@bts.length @AT@ 2503 @LENGTH@ 10
---------------DEL SimpleName@@bts @AT@ 2503 @LENGTH@ 3
---------------DEL SimpleName@@length @AT@ 2507 @LENGTH@ 6
------------INS SimpleName@@len @TO@ SimpleName@@MethodName:afterWrite:[bts.length] @AT@ 2530 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:System.arraycopy(wildcards,0,this.wildcards,0,wildcards.length) @TO@ MethodDeclaration@@public, voidMethodName:WildcardFilter, String[] wildcards,  @AT@ 3075 @LENGTH@ 68
---INS MethodInvocation@@System.arraycopy(wildcards,0,this.wildcards,0,wildcards.length) @TO@ ExpressionStatement@@MethodInvocation:System.arraycopy(wildcards,0,this.wildcards,0,wildcards.length) @AT@ 3075 @LENGTH@ 67
------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.arraycopy(wildcards,0,this.wildcards,0,wildcards.length) @AT@ 3075 @LENGTH@ 6
------INS SimpleName@@MethodName:arraycopy:[wildcards, 0, this.wildcards, 0, wildcards.length] @TO@ MethodInvocation@@System.arraycopy(wildcards,0,this.wildcards,0,wildcards.length) @AT@ 3082 @LENGTH@ 60
---------INS SimpleName@@wildcards @TO@ SimpleName@@MethodName:arraycopy:[wildcards, 0, this.wildcards, 0, wildcards.length] @AT@ 3092 @LENGTH@ 9
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[wildcards, 0, this.wildcards, 0, wildcards.length] @AT@ 3103 @LENGTH@ 1
---------INS FieldAccess@@this.wildcards @TO@ SimpleName@@MethodName:arraycopy:[wildcards, 0, this.wildcards, 0, wildcards.length] @AT@ 3106 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.wildcards @AT@ 3106 @LENGTH@ 4
------------INS SimpleName@@wildcards @TO@ FieldAccess@@this.wildcards @AT@ 3111 @LENGTH@ 9
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[wildcards, 0, this.wildcards, 0, wildcards.length] @AT@ 3122 @LENGTH@ 1
---------INS QualifiedName@@wildcards.length @TO@ SimpleName@@MethodName:arraycopy:[wildcards, 0, this.wildcards, 0, wildcards.length] @AT@ 3125 @LENGTH@ 16
------------INS SimpleName@@wildcards @TO@ QualifiedName@@wildcards.length @AT@ 3125 @LENGTH@ 9
------------INS SimpleName@@length @TO@ QualifiedName@@wildcards.length @AT@ 3135 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:this.service=new ServiceBuilder().provider(TwitterApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @TO@ Assignment:this.service=new ServiceBuilder().provider(LinkedInApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @AT@ 1380 @LENGTH@ 159
---UPD Assignment@@this.service=new ServiceBuilder().provider(TwitterApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @TO@ this.service=new ServiceBuilder().provider(LinkedInApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @AT@ 1380 @LENGTH@ 158
------UPD MethodInvocation@@new ServiceBuilder().provider(TwitterApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @TO@ new ServiceBuilder().provider(LinkedInApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @AT@ 1395 @LENGTH@ 143
---------UPD MethodInvocation@@MethodName:provider:[TwitterApi.class] @TO@ MethodName:provider:[LinkedInApi.class] @AT@ 1395 @LENGTH@ 47
------------UPD TypeLiteral@@TwitterApi.class @TO@ LinkedInApi.class @AT@ 1425 @LENGTH@ 16


UPD VariableDeclarationStatement@@Map headers=new HashMap(); @TO@ Map<String,Object> headers=new HashMap<String,Object>(); @AT@ 1266 @LENGTH@ 28
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map headers=new HashMap(); @AT@ 1266 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1266 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1270 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1278 @LENGTH@ 6
---DEL SimpleType@@Map @AT@ 1266 @LENGTH@ 3
---UPD VariableDeclarationFragment@@headers=new HashMap() @TO@ headers=new HashMap<String,Object>() @AT@ 1270 @LENGTH@ 23
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 1280 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 1284 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 1300 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1300 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1308 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1316 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("direct:unmarshalA").unmarshal().protobuf("org.apache.camel.itest.osgi.protobuf.generated.AddressBookProtos$Person").to("mock:reverse") @TO@ MethodInvocation:from("direct:unmarshalA").unmarshal().protobuf("org.apache.camel.dataformat.protobuf.generated.AddressBookProtos$Person").to("mock:reverse") @AT@ 4406 @LENGTH@ 141
---UPD MethodInvocation@@from("direct:unmarshalA").unmarshal().protobuf("org.apache.camel.itest.osgi.protobuf.generated.AddressBookProtos$Person").to("mock:reverse") @TO@ from("direct:unmarshalA").unmarshal().protobuf("org.apache.camel.dataformat.protobuf.generated.AddressBookProtos$Person").to("mock:reverse") @AT@ 4406 @LENGTH@ 140
------UPD MethodInvocation@@MethodName:protobuf:["org.apache.camel.itest.osgi.protobuf.generated.AddressBookProtos$Person"] @TO@ MethodName:protobuf:["org.apache.camel.dataformat.protobuf.generated.AddressBookProtos$Person"] @AT@ 4406 @LENGTH@ 121
---------UPD StringLiteral@@"org.apache.camel.itest.osgi.protobuf.generated.AddressBookProtos$Person" @TO@ "org.apache.camel.dataformat.protobuf.generated.AddressBookProtos$Person" @AT@ 4453 @LENGTH@ 73


DEL ExpressionStatement@@MethodInvocation:processXmlStream(reader) @AT@ 1535 @LENGTH@ 25
---DEL MethodInvocation@@processXmlStream(reader) @AT@ 1535 @LENGTH@ 24
------DEL SimpleName@@MethodName:processXmlStream:[reader] @AT@ 1535 @LENGTH@ 24
---------DEL SimpleName@@reader @AT@ 1552 @LENGTH@ 6


UPD IfStatement@@if (ObjectHelper.isEmpty(uri)) {  return uri;} else if (endpoint != null) {  return endpoint.getEndpointUri();} @TO@ if (ObjectHelper.isNotEmpty(uri)) {  return uri;} else if (endpoint != null) {  return endpoint.getEndpointUri();} @AT@ 3215 @LENGTH@ 151
---UPD MethodInvocation@@ObjectHelper.isEmpty(uri) @TO@ ObjectHelper.isNotEmpty(uri) @AT@ 3219 @LENGTH@ 25
------UPD SimpleName@@MethodName:isEmpty:[uri] @TO@ MethodName:isNotEmpty:[uri] @AT@ 3232 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:onException(Exception.class).handled(true).useOriginalBody().maximumRedeliveries(2).to("mock:error") @TO@ MethodInvocation:onException(Exception.class).handled(true).useOriginalMessage().maximumRedeliveries(2).to("mock:error") @AT@ 3140 @LENGTH@ 185
---UPD MethodInvocation@@onException(Exception.class).handled(true).useOriginalBody().maximumRedeliveries(2).to("mock:error") @TO@ onException(Exception.class).handled(true).useOriginalMessage().maximumRedeliveries(2).to("mock:error") @AT@ 3140 @LENGTH@ 184
------UPD MethodInvocation@@MethodName:useOriginalBody:[] @TO@ MethodName:useOriginalMessage:[] @AT@ 3140 @LENGTH@ 102


UPD IfStatement@@if (shouldSkip(itemProcessSkipPolicy,e,contribution.getStepSkipCount())) {  contribution.incrementProcessSkipCount();  iterator.remove(e);  logger.debug("Skipping after failed process",e);  return null;} else {  throw new RetryException("Non-skippable exception in recoverer while processing",e);} @TO@ if (shouldSkip(itemProcessSkipPolicy,e,contribution.getStepSkipCount())) {  iterator.remove(e);  contribution.incrementProcessSkipCount();  logger.debug("Skipping after failed process",e);  return null;} else {  if (rollbackClassifier.classify(e)) {    throw new RetryException("Non-skippable exception in recoverer while processing",e);  }  iterator.remove(e);  return null;} @AT@ 9214 @LENGTH@ 343
---UPD Block@@ThenBody:{  contribution.incrementProcessSkipCount();  iterator.remove(e);  logger.debug("Skipping after failed process",e);  return null;} @TO@ ThenBody:{  iterator.remove(e);  contribution.incrementProcessSkipCount();  logger.debug("Skipping after failed process",e);  return null;} @AT@ 9289 @LENGTH@ 157
------MOV ExpressionStatement@@MethodInvocation:contribution.incrementProcessSkipCount() @TO@ Block@@ThenBody:{  contribution.incrementProcessSkipCount();  iterator.remove(e);  logger.debug("Skipping after failed process",e);  return null;} @AT@ 9297 @LENGTH@ 41
---UPD Block@@ElseBody:{  throw new RetryException("Non-skippable exception in recoverer while processing",e);} @TO@ ThenBody:{  throw new RetryException("Non-skippable exception in recoverer while processing",e);} @AT@ 9457 @LENGTH@ 100
---INS Block@@ElseBody:{  if (rollbackClassifier.classify(e)) {    throw new RetryException("Non-skippable exception in recoverer while processing",e);  }  iterator.remove(e);  return null;} @TO@ IfStatement@@if (shouldSkip(itemProcessSkipPolicy,e,contribution.getStepSkipCount())) {  contribution.incrementProcessSkipCount();  iterator.remove(e);  logger.debug("Skipping after failed process",e);  return null;} else {  throw new RetryException("Non-skippable exception in recoverer while processing",e);} @AT@ 9533 @LENGTH@ 285
------INS IfStatement@@if (rollbackClassifier.classify(e)) {  throw new RetryException("Non-skippable exception in recoverer while processing",e);} @TO@ Block@@ElseBody:{  if (rollbackClassifier.classify(e)) {    throw new RetryException("Non-skippable exception in recoverer while processing",e);  }  iterator.remove(e);  return null;} @AT@ 9541 @LENGTH@ 225
---------MOV Block@@ElseBody:{  throw new RetryException("Non-skippable exception in recoverer while processing",e);} @TO@ IfStatement@@if (rollbackClassifier.classify(e)) {  throw new RetryException("Non-skippable exception in recoverer while processing",e);} @AT@ 9457 @LENGTH@ 100
---------INS MethodInvocation@@rollbackClassifier.classify(e) @TO@ IfStatement@@if (rollbackClassifier.classify(e)) {  throw new RetryException("Non-skippable exception in recoverer while processing",e);} @AT@ 9545 @LENGTH@ 30
------------INS SimpleName@@Name:rollbackClassifier @TO@ MethodInvocation@@rollbackClassifier.classify(e) @AT@ 9545 @LENGTH@ 18
------------INS SimpleName@@MethodName:classify:[e] @TO@ MethodInvocation@@rollbackClassifier.classify(e) @AT@ 9564 @LENGTH@ 11
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:classify:[e] @AT@ 9573 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:iterator.remove(e) @TO@ Block@@ElseBody:{  if (rollbackClassifier.classify(e)) {    throw new RetryException("Non-skippable exception in recoverer while processing",e);  }  iterator.remove(e);  return null;} @AT@ 9773 @LENGTH@ 19
---------INS MethodInvocation@@iterator.remove(e) @TO@ ExpressionStatement@@MethodInvocation:iterator.remove(e) @AT@ 9773 @LENGTH@ 18
------------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.remove(e) @AT@ 9773 @LENGTH@ 8
------------INS SimpleName@@MethodName:remove:[e] @TO@ MethodInvocation@@iterator.remove(e) @AT@ 9782 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:remove:[e] @AT@ 9789 @LENGTH@ 1
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ElseBody:{  if (rollbackClassifier.classify(e)) {    throw new RetryException("Non-skippable exception in recoverer while processing",e);  }  iterator.remove(e);  return null;} @AT@ 9799 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 9806 @LENGTH@ 4


UPD EnhancedForStatement@@for (Map.Entry<String,Server> entry : servers.entrySet()) {  try {    Server server=entry.getValue();    if (server.getState() == ServerState.STOPPED)     continue;    shutdownLatch.add(entry.getKey());    log.infof("Stopping %s",server.getServerProcessName());    server.stop();    server.setState(ServerState.STOPPING);  } catch (  Exception e) {  }} @TO@ for (Map.Entry<String,Server> entry : serversCopy.entrySet()) {  try {    Server server=entry.getValue();    if (server.getState() == ServerState.STOPPED)     continue;    shutdownLatch.add(entry.getKey());    log.infof("Stopping %s",server.getServerProcessName());    server.stop();    server.setState(ServerState.STOPPING);  } catch (  Exception e) {  }} @AT@ 14783 @LENGTH@ 560
---UPD MethodInvocation@@servers.entrySet() @TO@ serversCopy.entrySet() @AT@ 14822 @LENGTH@ 18
------UPD SimpleName@@Name:servers @TO@ Name:serversCopy @AT@ 14822 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:response.put("max_id","42") @TO@ MethodInvocation:response.put("max_id",42) @AT@ 5503 @LENGTH@ 29
---UPD MethodInvocation@@response.put("max_id","42") @TO@ response.put("max_id",42) @AT@ 5503 @LENGTH@ 28
------UPD SimpleName@@MethodName:put:["max_id", "42"] @TO@ MethodName:put:["max_id", 42] @AT@ 5512 @LENGTH@ 19
---------DEL StringLiteral@@"42" @AT@ 5526 @LENGTH@ 4
---------INS NumberLiteral@@42 @TO@ SimpleName@@MethodName:put:["max_id", "42"] @AT@ 5526 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:mapper.registerRootElement(new QName("urn:jboss:domain:transactions:1.0","subsystem"),new ConnectorSubsystemElementParser()) @TO@ MethodInvocation:mapper.registerRootElement(new QName(Namespace.CONNECTOR_1_0.getUriString(),"subsystem"),new ConnectorSubsystemElementParser()) @AT@ 1475 @LENGTH@ 139
---UPD MethodInvocation@@mapper.registerRootElement(new QName("urn:jboss:domain:transactions:1.0","subsystem"),new ConnectorSubsystemElementParser()) @TO@ mapper.registerRootElement(new QName(Namespace.CONNECTOR_1_0.getUriString(),"subsystem"),new ConnectorSubsystemElementParser()) @AT@ 1475 @LENGTH@ 138
------UPD SimpleName@@MethodName:registerRootElement:[new QName("urn:jboss:domain:transactions:1.0","subsystem"), new ConnectorSubsystemElementParser()] @TO@ MethodName:registerRootElement:[new QName(Namespace.CONNECTOR_1_0.getUriString(),"subsystem"), new ConnectorSubsystemElementParser()] @AT@ 1482 @LENGTH@ 131
---------UPD ClassInstanceCreation@@QName["urn:jboss:domain:transactions:1.0", "subsystem"] @TO@ QName[Namespace.CONNECTOR_1_0.getUriString(), "subsystem"] @AT@ 1502 @LENGTH@ 59
------------INS MethodInvocation@@Namespace.CONNECTOR_1_0.getUriString() @TO@ ClassInstanceCreation@@QName["urn:jboss:domain:transactions:1.0", "subsystem"] @AT@ 1512 @LENGTH@ 38
---------------INS QualifiedName@@Name:Namespace.CONNECTOR_1_0 @TO@ MethodInvocation@@Namespace.CONNECTOR_1_0.getUriString() @AT@ 1512 @LENGTH@ 23
---------------INS SimpleName@@MethodName:getUriString:[] @TO@ MethodInvocation@@Namespace.CONNECTOR_1_0.getUriString() @AT@ 1536 @LENGTH@ 14
------------DEL StringLiteral@@"urn:jboss:domain:transactions:1.0" @AT@ 1512 @LENGTH@ 35


UPD MethodDeclaration@@protected, String, MethodName:buildAuthorizationHeader, HttpMethod method, URL url, Map<String,String> parameters,  @TO@ protected, String, MethodName:buildAuthorizationHeader, HttpMethod method, String url, Map<String,String> parameters,  @AT@ 1514 @LENGTH@ 495
---UPD SingleVariableDeclaration@@URL url @TO@ String url @AT@ 1575 @LENGTH@ 7
------UPD SimpleType@@URL @TO@ String @AT@ 1575 @LENGTH@ 3
---UPD VariableDeclarationStatement@@String adjustedUrl=adjustUrl(url.toString()); @TO@ String adjustedUrl=adjustUrl(url); @AT@ 1620 @LENGTH@ 47
------UPD VariableDeclarationFragment@@adjustedUrl=adjustUrl(url.toString()) @TO@ adjustedUrl=adjustUrl(url) @AT@ 1627 @LENGTH@ 39
---------UPD MethodInvocation@@adjustUrl(url.toString()) @TO@ adjustUrl(url) @AT@ 1641 @LENGTH@ 25
------------UPD SimpleName@@MethodName:adjustUrl:[url.toString()] @TO@ MethodName:adjustUrl:[url] @AT@ 1641 @LENGTH@ 25
---------------INS SimpleName@@url @TO@ SimpleName@@MethodName:adjustUrl:[url.toString()] @AT@ 1633 @LENGTH@ 3
---------------DEL MethodInvocation@@url.toString() @AT@ 1651 @LENGTH@ 14
------------------DEL SimpleName@@Name:url @AT@ 1651 @LENGTH@ 3
------------------DEL SimpleName@@MethodName:toString:[] @AT@ 1655 @LENGTH@ 10


UPD MethodDeclaration@@Configuration, MethodName:getConfiguration,  @TO@ public, Configuration, MethodName:getConfiguration,  @AT@ 1129 @LENGTH@ 61
---INS Modifier@@public @TO@ MethodDeclaration@@Configuration, MethodName:getConfiguration,  @AT@ 1112 @LENGTH@ 6


UPD IfStatement@@if (ObjectHelper.isEmpty(uri)) {  return uri;} else if (endpoint != null) {  return endpoint.getEndpointUri();} @TO@ if (ObjectHelper.isNotEmpty(uri)) {  return uri;} else if (endpoint != null) {  return endpoint.getEndpointUri();} @AT@ 3148 @LENGTH@ 151
---UPD MethodInvocation@@ObjectHelper.isEmpty(uri) @TO@ ObjectHelper.isNotEmpty(uri) @AT@ 3152 @LENGTH@ 25
------UPD SimpleName@@MethodName:isEmpty:[uri] @TO@ MethodName:isNotEmpty:[uri] @AT@ 3165 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertEquals("Hello World",result.getOut().getBody()) @TO@ MethodInvocation:assertEquals("Hello World",result.getIn().getBody()) @AT@ 3090 @LENGTH@ 55
---UPD MethodInvocation@@assertEquals("Hello World",result.getOut().getBody()) @TO@ assertEquals("Hello World",result.getIn().getBody()) @AT@ 3090 @LENGTH@ 54
------UPD SimpleName@@MethodName:assertEquals:["Hello World", result.getOut().getBody()] @TO@ MethodName:assertEquals:["Hello World", result.getIn().getBody()] @AT@ 3090 @LENGTH@ 54
---------UPD MethodInvocation@@result.getOut().getBody() @TO@ result.getIn().getBody() @AT@ 3118 @LENGTH@ 25
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getIn:[] @AT@ 3118 @LENGTH@ 15


UPD IfStatement@@if (handoffExecutor == null) {  final ServiceName handoffExecutorName=JBOSS_THREAD_EXECUTOR.append(handoffExecutor);  serviceBuilder.addDependency(handoffExecutorName,Executor.class,service.getHandoffExecutorInjector());} @TO@ if (handoffExecutor != null) {  final ServiceName handoffExecutorName=JBOSS_THREAD_EXECUTOR.append(handoffExecutor);  serviceBuilder.addDependency(handoffExecutorName,Executor.class,service.getHandoffExecutorInjector());} @AT@ 6756 @LENGTH@ 256
---UPD InfixExpression@@handoffExecutor == null @TO@ handoffExecutor != null @AT@ 6760 @LENGTH@ 23
------UPD Operator@@== @TO@ != @AT@ 6775 @LENGTH@ 2


INS ExpressionStatement@@MethodInvocation:streamWriter.writeEndElement() @TO@ MethodDeclaration@@public, void, MethodName:writeContent, XMLExtendedStreamWriter streamWriter, XMLStreamException,  @AT@ 3197 @LENGTH@ 31
---INS MethodInvocation@@streamWriter.writeEndElement() @TO@ ExpressionStatement@@MethodInvocation:streamWriter.writeEndElement() @AT@ 3197 @LENGTH@ 30
------INS SimpleName@@Name:streamWriter @TO@ MethodInvocation@@streamWriter.writeEndElement() @AT@ 3197 @LENGTH@ 12
------INS SimpleName@@MethodName:writeEndElement:[] @TO@ MethodInvocation@@streamWriter.writeEndElement() @AT@ 3210 @LENGTH@ 17


INS MethodDeclaration@@public, static, Option[], MethodName:configure, Exception,  @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @Ignore("TODO: fix me"), public]XsltRouteTest, OSGiIntegrationTestSupport @AT@ 2721 @LENGTH@ 1190
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure, Exception,  @AT@ 2721 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure, Exception,  @AT@ 2728 @LENGTH@ 6
---INS ArrayType@@Option[] @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure, Exception,  @AT@ 2735 @LENGTH@ 8
------INS SimpleType@@Option @TO@ ArrayType@@Option[] @AT@ 2735 @LENGTH@ 6
---INS SimpleName@@MethodName:configure @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure, Exception,  @AT@ 2744 @LENGTH@ 9
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure, Exception,  @AT@ 2763 @LENGTH@ 9
---INS VariableDeclarationStatement@@Option[] options=options(profile("spring.dm").version("1.2.0"),systemPackage("com.sun.org.apache.xalan.internal.xsltc"),systemPackage("com.sun.org.apache.xml.internal.dtm"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(getKarafFeatureUrl(),"http"),scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"),workingDirectory("target/paxrunner/"),equinox(),felix()); @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure, Exception,  @AT@ 2783 @LENGTH@ 1089
------INS ArrayType@@Option[] @TO@ VariableDeclarationStatement@@Option[] options=options(profile("spring.dm").version("1.2.0"),systemPackage("com.sun.org.apache.xalan.internal.xsltc"),systemPackage("com.sun.org.apache.xml.internal.dtm"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(getKarafFeatureUrl(),"http"),scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"),workingDirectory("target/paxrunner/"),equinox(),felix()); @AT@ 2783 @LENGTH@ 8
---------INS SimpleType@@Option @TO@ ArrayType@@Option[] @AT@ 2783 @LENGTH@ 6
------INS VariableDeclarationFragment@@options=options(profile("spring.dm").version("1.2.0"),systemPackage("com.sun.org.apache.xalan.internal.xsltc"),systemPackage("com.sun.org.apache.xml.internal.dtm"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(getKarafFeatureUrl(),"http"),scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"),workingDirectory("target/paxrunner/"),equinox(),felix()) @TO@ VariableDeclarationStatement@@Option[] options=options(profile("spring.dm").version("1.2.0"),systemPackage("com.sun.org.apache.xalan.internal.xsltc"),systemPackage("com.sun.org.apache.xml.internal.dtm"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(getKarafFeatureUrl(),"http"),scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"),workingDirectory("target/paxrunner/"),equinox(),felix()); @AT@ 2792 @LENGTH@ 1079
---------INS SimpleName@@options @TO@ VariableDeclarationFragment@@options=options(profile("spring.dm").version("1.2.0"),systemPackage("com.sun.org.apache.xalan.internal.xsltc"),systemPackage("com.sun.org.apache.xml.internal.dtm"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(getKarafFeatureUrl(),"http"),scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"),workingDirectory("target/paxrunner/"),equinox(),felix()) @AT@ 2792 @LENGTH@ 7
---------INS MethodInvocation@@options(profile("spring.dm").version("1.2.0"),systemPackage("com.sun.org.apache.xalan.internal.xsltc"),systemPackage("com.sun.org.apache.xml.internal.dtm"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(getKarafFeatureUrl(),"http"),scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"),workingDirectory("target/paxrunner/"),equinox(),felix()) @TO@ VariableDeclarationFragment@@options=options(profile("spring.dm").version("1.2.0"),systemPackage("com.sun.org.apache.xalan.internal.xsltc"),systemPackage("com.sun.org.apache.xml.internal.dtm"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(getKarafFeatureUrl(),"http"),scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"),workingDirectory("target/paxrunner/"),equinox(),felix()) @AT@ 2802 @LENGTH@ 1069
------------INS SimpleName@@MethodName:options:[profile("spring.dm").version("1.2.0"), systemPackage("com.sun.org.apache.xalan.internal.xsltc"), systemPackage("com.sun.org.apache.xml.internal.dtm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(getKarafFeatureUrl(),"http"), scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"), workingDirectory("target/paxrunner/"), equinox(), felix()] @TO@ MethodInvocation@@options(profile("spring.dm").version("1.2.0"),systemPackage("com.sun.org.apache.xalan.internal.xsltc"),systemPackage("com.sun.org.apache.xml.internal.dtm"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(getKarafFeatureUrl(),"http"),scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"),workingDirectory("target/paxrunner/"),equinox(),felix()) @AT@ 2802 @LENGTH@ 1069
---------------INS MethodInvocation@@profile("spring.dm").version("1.2.0") @TO@ SimpleName@@MethodName:options:[profile("spring.dm").version("1.2.0"), systemPackage("com.sun.org.apache.xalan.internal.xsltc"), systemPackage("com.sun.org.apache.xml.internal.dtm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(getKarafFeatureUrl(),"http"), scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"), workingDirectory("target/paxrunner/"), equinox(), felix()] @AT@ 2880 @LENGTH@ 37
------------------INS MethodInvocation@@MethodName:profile:["spring.dm"] @TO@ MethodInvocation@@profile("spring.dm").version("1.2.0") @AT@ 2880 @LENGTH@ 20
---------------------INS StringLiteral@@"spring.dm" @TO@ MethodInvocation@@MethodName:profile:["spring.dm"] @AT@ 2888 @LENGTH@ 11
------------------INS SimpleName@@MethodName:version:["1.2.0"] @TO@ MethodInvocation@@profile("spring.dm").version("1.2.0") @AT@ 2901 @LENGTH@ 16
---------------------INS StringLiteral@@"1.2.0" @TO@ SimpleName@@MethodName:version:["1.2.0"] @AT@ 2909 @LENGTH@ 7
---------------INS MethodInvocation@@systemPackage("com.sun.org.apache.xalan.internal.xsltc") @TO@ SimpleName@@MethodName:options:[profile("spring.dm").version("1.2.0"), systemPackage("com.sun.org.apache.xalan.internal.xsltc"), systemPackage("com.sun.org.apache.xml.internal.dtm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(getKarafFeatureUrl(),"http"), scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"), workingDirectory("target/paxrunner/"), equinox(), felix()] @AT@ 3063 @LENGTH@ 56
------------------INS SimpleName@@MethodName:systemPackage:["com.sun.org.apache.xalan.internal.xsltc"] @TO@ MethodInvocation@@systemPackage("com.sun.org.apache.xalan.internal.xsltc") @AT@ 3063 @LENGTH@ 56
---------------------INS StringLiteral@@"com.sun.org.apache.xalan.internal.xsltc" @TO@ SimpleName@@MethodName:systemPackage:["com.sun.org.apache.xalan.internal.xsltc"] @AT@ 3077 @LENGTH@ 41
---------------INS MethodInvocation@@systemPackage("com.sun.org.apache.xml.internal.dtm") @TO@ SimpleName@@MethodName:options:[profile("spring.dm").version("1.2.0"), systemPackage("com.sun.org.apache.xalan.internal.xsltc"), systemPackage("com.sun.org.apache.xml.internal.dtm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(getKarafFeatureUrl(),"http"), scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"), workingDirectory("target/paxrunner/"), equinox(), felix()] @AT@ 3133 @LENGTH@ 52
------------------INS SimpleName@@MethodName:systemPackage:["com.sun.org.apache.xml.internal.dtm"] @TO@ MethodInvocation@@systemPackage("com.sun.org.apache.xml.internal.dtm") @AT@ 3133 @LENGTH@ 52
---------------------INS StringLiteral@@"com.sun.org.apache.xml.internal.dtm" @TO@ SimpleName@@MethodName:systemPackage:["com.sun.org.apache.xml.internal.dtm"] @AT@ 3147 @LENGTH@ 37
---------------INS MethodInvocation@@org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO") @TO@ SimpleName@@MethodName:options:[profile("spring.dm").version("1.2.0"), systemPackage("com.sun.org.apache.xalan.internal.xsltc"), systemPackage("com.sun.org.apache.xml.internal.dtm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(getKarafFeatureUrl(),"http"), scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"), workingDirectory("target/paxrunner/"), equinox(), felix()] @AT@ 3305 @LENGTH@ 108
------------------INS MethodInvocation@@MethodName:systemProperty:["org.ops4j.pax.logging.DefaultServiceLog.level"] @TO@ MethodInvocation@@org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO") @AT@ 3305 @LENGTH@ 94
---------------------INS StringLiteral@@"org.ops4j.pax.logging.DefaultServiceLog.level" @TO@ MethodInvocation@@MethodName:systemProperty:["org.ops4j.pax.logging.DefaultServiceLog.level"] @AT@ 3351 @LENGTH@ 47
------------------INS QualifiedName@@Name:org.ops4j.pax.exam.CoreOptions @TO@ MethodInvocation@@org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO") @AT@ 3305 @LENGTH@ 30
------------------INS SimpleName@@MethodName:value:["INFO"] @TO@ MethodInvocation@@org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO") @AT@ 3400 @LENGTH@ 13
---------------------INS StringLiteral@@"INFO" @TO@ SimpleName@@MethodName:value:["INFO"] @AT@ 3406 @LENGTH@ 6
---------------INS MethodInvocation@@scanFeatures(getKarafFeatureUrl(),"http") @TO@ SimpleName@@MethodName:options:[profile("spring.dm").version("1.2.0"), systemPackage("com.sun.org.apache.xalan.internal.xsltc"), systemPackage("com.sun.org.apache.xml.internal.dtm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(getKarafFeatureUrl(),"http"), scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"), workingDirectory("target/paxrunner/"), equinox(), felix()] @AT@ 3479 @LENGTH@ 42
------------------INS SimpleName@@MethodName:scanFeatures:[getKarafFeatureUrl(), "http"] @TO@ MethodInvocation@@scanFeatures(getKarafFeatureUrl(),"http") @AT@ 3479 @LENGTH@ 42
---------------------INS MethodInvocation@@MethodName:getKarafFeatureUrl:[] @TO@ SimpleName@@MethodName:scanFeatures:[getKarafFeatureUrl(), "http"] @AT@ 3492 @LENGTH@ 20
---------------------INS StringLiteral@@"http" @TO@ SimpleName@@MethodName:scanFeatures:[getKarafFeatureUrl(), "http"] @AT@ 3514 @LENGTH@ 6
------------------INS SimpleName@@MethodName:scanFeatures:[getKarafFeatureUrl(), "http"] @TO@ MethodInvocation@@scanFeatures(getKarafFeatureUrl(),"http") @AT@ 3479 @LENGTH@ 42
---------------------INS MethodInvocation@@MethodName:getKarafFeatureUrl:[] @TO@ SimpleName@@MethodName:scanFeatures:[getKarafFeatureUrl(), "http"] @AT@ 3492 @LENGTH@ 20
---------------------INS StringLiteral@@"http" @TO@ SimpleName@@MethodName:scanFeatures:[getKarafFeatureUrl(), "http"] @AT@ 3514 @LENGTH@ 6
---------------INS MethodInvocation@@scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test") @TO@ SimpleName@@MethodName:options:[profile("spring.dm").version("1.2.0"), systemPackage("com.sun.org.apache.xalan.internal.xsltc"), systemPackage("com.sun.org.apache.xml.internal.dtm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(getKarafFeatureUrl(),"http"), scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"), workingDirectory("target/paxrunner/"), equinox(), felix()] @AT@ 3615 @LENGTH@ 134
------------------INS SimpleName@@MethodName:scanFeatures:[getCamelKarafFeatureUrl(), "camel-core", "camel-spring", "camel-test"] @TO@ MethodInvocation@@scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test") @AT@ 3615 @LENGTH@ 134
---------------------INS MethodInvocation@@MethodName:getCamelKarafFeatureUrl:[] @TO@ SimpleName@@MethodName:scanFeatures:[getCamelKarafFeatureUrl(), "camel-core", "camel-spring", "camel-test"] @AT@ 3628 @LENGTH@ 25
---------------------INS StringLiteral@@"camel-core" @TO@ SimpleName@@MethodName:scanFeatures:[getCamelKarafFeatureUrl(), "camel-core", "camel-spring", "camel-test"] @AT@ 3706 @LENGTH@ 12
---------------------INS StringLiteral@@"camel-spring" @TO@ SimpleName@@MethodName:scanFeatures:[getCamelKarafFeatureUrl(), "camel-core", "camel-spring", "camel-test"] @AT@ 3720 @LENGTH@ 14
---------------------INS StringLiteral@@"camel-test" @TO@ SimpleName@@MethodName:scanFeatures:[getCamelKarafFeatureUrl(), "camel-core", "camel-spring", "camel-test"] @AT@ 3736 @LENGTH@ 12
------------------INS SimpleName@@MethodName:scanFeatures:[getCamelKarafFeatureUrl(), "camel-core", "camel-spring", "camel-test"] @TO@ MethodInvocation@@scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test") @AT@ 3615 @LENGTH@ 134
---------------------INS MethodInvocation@@MethodName:getCamelKarafFeatureUrl:[] @TO@ SimpleName@@MethodName:scanFeatures:[getCamelKarafFeatureUrl(), "camel-core", "camel-spring", "camel-test"] @AT@ 3628 @LENGTH@ 25
---------------------INS StringLiteral@@"camel-core" @TO@ SimpleName@@MethodName:scanFeatures:[getCamelKarafFeatureUrl(), "camel-core", "camel-spring", "camel-test"] @AT@ 3706 @LENGTH@ 12
---------------------INS StringLiteral@@"camel-spring" @TO@ SimpleName@@MethodName:scanFeatures:[getCamelKarafFeatureUrl(), "camel-core", "camel-spring", "camel-test"] @AT@ 3720 @LENGTH@ 14
---------------------INS StringLiteral@@"camel-test" @TO@ SimpleName@@MethodName:scanFeatures:[getCamelKarafFeatureUrl(), "camel-core", "camel-spring", "camel-test"] @AT@ 3736 @LENGTH@ 12
---------------INS MethodInvocation@@workingDirectory("target/paxrunner/") @TO@ SimpleName@@MethodName:options:[profile("spring.dm").version("1.2.0"), systemPackage("com.sun.org.apache.xalan.internal.xsltc"), systemPackage("com.sun.org.apache.xml.internal.dtm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(getKarafFeatureUrl(),"http"), scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"), workingDirectory("target/paxrunner/"), equinox(), felix()] @AT@ 3776 @LENGTH@ 37
------------------INS SimpleName@@MethodName:workingDirectory:["target/paxrunner/"] @TO@ MethodInvocation@@workingDirectory("target/paxrunner/") @AT@ 3776 @LENGTH@ 37
---------------------INS StringLiteral@@"target/paxrunner/" @TO@ SimpleName@@MethodName:workingDirectory:["target/paxrunner/"] @AT@ 3793 @LENGTH@ 19
------------------INS SimpleName@@MethodName:workingDirectory:["target/paxrunner/"] @TO@ MethodInvocation@@workingDirectory("target/paxrunner/") @AT@ 3776 @LENGTH@ 37
---------------------INS StringLiteral@@"target/paxrunner/" @TO@ SimpleName@@MethodName:workingDirectory:["target/paxrunner/"] @AT@ 3793 @LENGTH@ 19
---------------INS MethodInvocation@@MethodName:equinox:[] @TO@ SimpleName@@MethodName:options:[profile("spring.dm").version("1.2.0"), systemPackage("com.sun.org.apache.xalan.internal.xsltc"), systemPackage("com.sun.org.apache.xml.internal.dtm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(getKarafFeatureUrl(),"http"), scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"), workingDirectory("target/paxrunner/"), equinox(), felix()] @AT@ 3840 @LENGTH@ 9
---------------INS MethodInvocation@@MethodName:felix:[] @TO@ SimpleName@@MethodName:options:[profile("spring.dm").version("1.2.0"), systemPackage("com.sun.org.apache.xalan.internal.xsltc"), systemPackage("com.sun.org.apache.xml.internal.dtm"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"), scanFeatures(getKarafFeatureUrl(),"http"), scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test"), workingDirectory("target/paxrunner/"), equinox(), felix()] @AT@ 3863 @LENGTH@ 7
---INS ReturnStatement@@SimpleName:options @TO@ MethodDeclaration@@public, static, Option[], MethodName:configure, Exception,  @AT@ 3890 @LENGTH@ 15
------INS SimpleName@@options @TO@ ReturnStatement@@SimpleName:options @AT@ 3897 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("file://" + base + "?move=../done/${file:name}").convertBodyTo(String.class).to("mock:report") @TO@ MethodInvocation:from("file://" + base + "?move=../done/${file:onlyname}").convertBodyTo(String.class).to("mock:report") @AT@ 2071 @LENGTH@ 100
---UPD MethodInvocation@@from("file://" + base + "?move=../done/${file:name}").convertBodyTo(String.class).to("mock:report") @TO@ from("file://" + base + "?move=../done/${file:onlyname}").convertBodyTo(String.class).to("mock:report") @AT@ 2071 @LENGTH@ 99
------UPD MethodInvocation@@MethodName:from:["file://" + base + "?move=../done/${file:name}"] @TO@ MethodName:from:["file://" + base + "?move=../done/${file:onlyname}"] @AT@ 2071 @LENGTH@ 53
---------UPD InfixExpression@@"file://" + base + "?move=../done/${file:name}" @TO@ "file://" + base + "?move=../done/${file:onlyname}" @AT@ 2076 @LENGTH@ 47
------------UPD StringLiteral@@"?move=../done/${file:name}" @TO@ "?move=../done/${file:onlyname}" @AT@ 2095 @LENGTH@ 28


UPD TypeDeclaration@@[public]TestBooleanComparator, AbstractTestComparator<Boolean> @TO@ [@SuppressWarnings("boxing"), public]TestBooleanComparator, AbstractTestComparator<Boolean> @AT@ 1048 @LENGTH@ 4496
---INS SingleMemberAnnotation@@@SuppressWarnings("boxing") @TO@ TypeDeclaration@@[public]TestBooleanComparator, AbstractTestComparator<Boolean> @AT@ 1048 @LENGTH@ 27


INS ExpressionStatement@@MethodInvocation:getContext().addComponent("http2",new HttpComponent()) @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 2601 @LENGTH@ 56
---INS MethodInvocation@@getContext().addComponent("http2",new HttpComponent()) @TO@ ExpressionStatement@@MethodInvocation:getContext().addComponent("http2",new HttpComponent()) @AT@ 2601 @LENGTH@ 55
------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@getContext().addComponent("http2",new HttpComponent()) @AT@ 2601 @LENGTH@ 12
------INS SimpleName@@MethodName:addComponent:["http2", new HttpComponent()] @TO@ MethodInvocation@@getContext().addComponent("http2",new HttpComponent()) @AT@ 2614 @LENGTH@ 42
---------INS StringLiteral@@"http2" @TO@ SimpleName@@MethodName:addComponent:["http2", new HttpComponent()] @AT@ 2627 @LENGTH@ 7
---------INS ClassInstanceCreation@@HttpComponent[] @TO@ SimpleName@@MethodName:addComponent:["http2", new HttpComponent()] @AT@ 2636 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@HttpComponent[] @AT@ 2636 @LENGTH@ 3
------------INS SimpleType@@HttpComponent @TO@ ClassInstanceCreation@@HttpComponent[] @AT@ 2640 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:list.add(new ServerProfileUpdate(serverGroup.getProfileName())) @TO@ MethodDeclaration@@public, static, void, MethodName:combine, DomainModel domainModel, HostModel hostModel, String serverName, List<AbstractServerModelUpdate<?>> list,  @AT@ 6118 @LENGTH@ 64
---INS MethodInvocation@@list.add(new ServerProfileUpdate(serverGroup.getProfileName())) @TO@ ExpressionStatement@@MethodInvocation:list.add(new ServerProfileUpdate(serverGroup.getProfileName())) @AT@ 6118 @LENGTH@ 63
------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(new ServerProfileUpdate(serverGroup.getProfileName())) @AT@ 6118 @LENGTH@ 4
------INS SimpleName@@MethodName:add:[new ServerProfileUpdate(serverGroup.getProfileName())] @TO@ MethodInvocation@@list.add(new ServerProfileUpdate(serverGroup.getProfileName())) @AT@ 6123 @LENGTH@ 58
---------INS ClassInstanceCreation@@ServerProfileUpdate[serverGroup.getProfileName()] @TO@ SimpleName@@MethodName:add:[new ServerProfileUpdate(serverGroup.getProfileName())] @AT@ 6127 @LENGTH@ 53
------------INS New@@new @TO@ ClassInstanceCreation@@ServerProfileUpdate[serverGroup.getProfileName()] @AT@ 6127 @LENGTH@ 3
------------INS SimpleType@@ServerProfileUpdate @TO@ ClassInstanceCreation@@ServerProfileUpdate[serverGroup.getProfileName()] @AT@ 6131 @LENGTH@ 19
------------INS MethodInvocation@@serverGroup.getProfileName() @TO@ ClassInstanceCreation@@ServerProfileUpdate[serverGroup.getProfileName()] @AT@ 6151 @LENGTH@ 28
---------------INS SimpleName@@Name:serverGroup @TO@ MethodInvocation@@serverGroup.getProfileName() @AT@ 6151 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getProfileName:[] @TO@ MethodInvocation@@serverGroup.getProfileName() @AT@ 6163 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:serviceBuilder.addDependency(ServiceName.of(ThreadPoolExecutorService.JBOSS_THREADS_EXECUTOR.append(threadPoolName))).toInjector(executorInjector) @TO@ MethodInvocation:serviceBuilder.addDependency(ServiceName.of(JBOSS_THREAD_EXECUTOR.append(threadPoolName))).toInjector(executorInjector) @AT@ 8122 @LENGTH@ 147
---UPD MethodInvocation@@serviceBuilder.addDependency(ServiceName.of(ThreadPoolExecutorService.JBOSS_THREADS_EXECUTOR.append(threadPoolName))).toInjector(executorInjector) @TO@ serviceBuilder.addDependency(ServiceName.of(JBOSS_THREAD_EXECUTOR.append(threadPoolName))).toInjector(executorInjector) @AT@ 8122 @LENGTH@ 146
------UPD MethodInvocation@@MethodName:addDependency:[ServiceName.of(ThreadPoolExecutorService.JBOSS_THREADS_EXECUTOR.append(threadPoolName))] @TO@ MethodName:addDependency:[ServiceName.of(JBOSS_THREAD_EXECUTOR.append(threadPoolName))] @AT@ 8122 @LENGTH@ 117
---------UPD MethodInvocation@@ServiceName.of(ThreadPoolExecutorService.JBOSS_THREADS_EXECUTOR.append(threadPoolName)) @TO@ ServiceName.of(JBOSS_THREAD_EXECUTOR.append(threadPoolName)) @AT@ 8151 @LENGTH@ 87
------------UPD SimpleName@@MethodName:of:[ThreadPoolExecutorService.JBOSS_THREADS_EXECUTOR.append(threadPoolName)] @TO@ MethodName:of:[JBOSS_THREAD_EXECUTOR.append(threadPoolName)] @AT@ 8163 @LENGTH@ 75
---------------UPD MethodInvocation@@ThreadPoolExecutorService.JBOSS_THREADS_EXECUTOR.append(threadPoolName) @TO@ JBOSS_THREAD_EXECUTOR.append(threadPoolName) @AT@ 8166 @LENGTH@ 71
------------------INS SimpleName@@Name:JBOSS_THREAD_EXECUTOR @TO@ MethodInvocation@@ThreadPoolExecutorService.JBOSS_THREADS_EXECUTOR.append(threadPoolName) @AT@ 8146 @LENGTH@ 21
------------------DEL QualifiedName@@Name:ThreadPoolExecutorService.JBOSS_THREADS_EXECUTOR @AT@ 8166 @LENGTH@ 48


UPD ExpressionStatement@@MethodInvocation:defaultCamelContext.removeRouteDefinition(id) @TO@ MethodInvocation:defaultCamelContext.removeRoute(id) @AT@ 5747 @LENGTH@ 46
---UPD MethodInvocation@@defaultCamelContext.removeRouteDefinition(id) @TO@ defaultCamelContext.removeRoute(id) @AT@ 5747 @LENGTH@ 45
------UPD SimpleName@@MethodName:removeRouteDefinition:[id] @TO@ MethodName:removeRoute:[id] @AT@ 5767 @LENGTH@ 25


UPD ExpressionStatement@@Assignment:this.service=new ServiceBuilder().provider(TwitterApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @TO@ Assignment:this.service=new ServiceBuilder().provider(LinkedInApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @AT@ 1380 @LENGTH@ 159
---UPD Assignment@@this.service=new ServiceBuilder().provider(TwitterApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @TO@ this.service=new ServiceBuilder().provider(LinkedInApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @AT@ 1380 @LENGTH@ 158
------UPD MethodInvocation@@new ServiceBuilder().provider(TwitterApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @TO@ new ServiceBuilder().provider(LinkedInApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @AT@ 1395 @LENGTH@ 143
---------UPD MethodInvocation@@MethodName:provider:[TwitterApi.class] @TO@ MethodName:provider:[LinkedInApi.class] @AT@ 1395 @LENGTH@ 47
------------UPD TypeLiteral@@TwitterApi.class @TO@ LinkedInApi.class @AT@ 1425 @LENGTH@ 16


UPD IfStatement@@if (entityMetadata.getMappedSuperclassAnnotation() != null) {  throw new IllegalStateException("GWT does not currently support inheritence in proxied objects. Please remove the 'javax.persistence.MappedSuperclass' annotation from '" + governorTypeDetails.getName().getFullyQualifiedTypeName() + "' in order to complete 'gwt setup'.");} @TO@ if (annotation.getAnnotationType().equals(new JavaType("javax.persistence.MappedSuperclass"))) {  throw new IllegalStateException("GWT does not currently support inheritence in proxied objects. Please remove the 'javax.persistence.MappedSuperclass' annotation from '" + governorTypeDetails.getName().getFullyQualifiedTypeName() + "' in order to complete 'gwt setup'.");} @AT@ 3781 @LENGTH@ 356


DEL ExpressionStatement@@MethodInvocation:assertLoadClass(apiBundle,Echo.class.getName()) @AT@ 7823 @LENGTH@ 49
---DEL MethodInvocation@@assertLoadClass(apiBundle,Echo.class.getName()) @AT@ 7823 @LENGTH@ 48
------DEL SimpleName@@MethodName:assertLoadClass:[apiBundle, Echo.class.getName()] @AT@ 7823 @LENGTH@ 48
---------DEL SimpleName@@apiBundle @AT@ 7839 @LENGTH@ 9
---------DEL MethodInvocation@@Echo.class.getName() @AT@ 7850 @LENGTH@ 20
------------DEL TypeLiteral@@Echo.class @AT@ 7850 @LENGTH@ 10
------------DEL SimpleName@@MethodName:getName:[] @AT@ 7861 @LENGTH@ 9


DEL MethodDeclaration@@ServerGroupDeploymentPlanBuilder, MethodName:toServerGroup, String serverGroupName,  @AT@ 2131 @LENGTH@ 38
---DEL SimpleType@@ServerGroupDeploymentPlanBuilder @AT@ 2098 @LENGTH@ 32
---DEL SimpleName@@MethodName:toServerGroup @AT@ 2131 @LENGTH@ 13
---DEL SingleVariableDeclaration@@String serverGroupName @AT@ 2145 @LENGTH@ 22
------DEL SimpleType@@String @AT@ 2145 @LENGTH@ 6
------DEL SimpleName@@serverGroupName @AT@ 2152 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:testToFile5, Exception,  @TO@ TypeDeclaration@@[public]FileUtilsTestCase, FileBasedTestCase @AT@ 10331 @LENGTH@ 229
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testToFile5, Exception,  @AT@ 10331 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testToFile5, Exception,  @AT@ 10338 @LENGTH@ 4
---INS SimpleName@@MethodName:testToFile5 @TO@ MethodDeclaration@@public, void, MethodName:testToFile5, Exception,  @AT@ 10343 @LENGTH@ 11
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testToFile5, Exception,  @AT@ 10364 @LENGTH@ 9
---INS VariableDeclarationStatement@@URL url=new URL("file",null,"both%20are%20100%20%25%20true"); @TO@ MethodDeclaration@@public, void, MethodName:testToFile5, Exception,  @AT@ 10384 @LENGTH@ 65
------INS SimpleType@@URL @TO@ VariableDeclarationStatement@@URL url=new URL("file",null,"both%20are%20100%20%25%20true"); @AT@ 10384 @LENGTH@ 3
------INS VariableDeclarationFragment@@url=new URL("file",null,"both%20are%20100%20%25%20true") @TO@ VariableDeclarationStatement@@URL url=new URL("file",null,"both%20are%20100%20%25%20true"); @AT@ 10388 @LENGTH@ 60
---------INS SimpleName@@url @TO@ VariableDeclarationFragment@@url=new URL("file",null,"both%20are%20100%20%25%20true") @AT@ 10388 @LENGTH@ 3
---------INS ClassInstanceCreation@@URL["file", null, "both%20are%20100%20%25%20true"] @TO@ VariableDeclarationFragment@@url=new URL("file",null,"both%20are%20100%20%25%20true") @AT@ 10394 @LENGTH@ 54
------------INS New@@new @TO@ ClassInstanceCreation@@URL["file", null, "both%20are%20100%20%25%20true"] @AT@ 10394 @LENGTH@ 3
------------INS SimpleType@@URL @TO@ ClassInstanceCreation@@URL["file", null, "both%20are%20100%20%25%20true"] @AT@ 10398 @LENGTH@ 3
------------INS StringLiteral@@"file" @TO@ ClassInstanceCreation@@URL["file", null, "both%20are%20100%20%25%20true"] @AT@ 10402 @LENGTH@ 6
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@URL["file", null, "both%20are%20100%20%25%20true"] @AT@ 10410 @LENGTH@ 4
------------INS StringLiteral@@"both%20are%20100%20%25%20true" @TO@ ClassInstanceCreation@@URL["file", null, "both%20are%20100%20%25%20true"] @AT@ 10416 @LENGTH@ 31
---INS VariableDeclarationStatement@@File file=FileUtils.toFile(url); @TO@ MethodDeclaration@@public, void, MethodName:testToFile5, Exception,  @AT@ 10458 @LENGTH@ 34
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File file=FileUtils.toFile(url); @AT@ 10458 @LENGTH@ 4
------INS VariableDeclarationFragment@@file=FileUtils.toFile(url) @TO@ VariableDeclarationStatement@@File file=FileUtils.toFile(url); @AT@ 10463 @LENGTH@ 28
---------INS SimpleName@@file @TO@ VariableDeclarationFragment@@file=FileUtils.toFile(url) @AT@ 10463 @LENGTH@ 4
---------INS MethodInvocation@@FileUtils.toFile(url) @TO@ VariableDeclarationFragment@@file=FileUtils.toFile(url) @AT@ 10470 @LENGTH@ 21
------------INS SimpleName@@Name:FileUtils @TO@ MethodInvocation@@FileUtils.toFile(url) @AT@ 10470 @LENGTH@ 9
------------INS SimpleName@@MethodName:toFile:[url] @TO@ MethodInvocation@@FileUtils.toFile(url) @AT@ 10480 @LENGTH@ 11
---------------INS SimpleName@@url @TO@ SimpleName@@MethodName:toFile:[url] @AT@ 10487 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals("both are 100 % true",file.toString()) @TO@ MethodDeclaration@@public, void, MethodName:testToFile5, Exception,  @AT@ 10501 @LENGTH@ 53
------INS MethodInvocation@@assertEquals("both are 100 % true",file.toString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("both are 100 % true",file.toString()) @AT@ 10501 @LENGTH@ 52
---------INS SimpleName@@MethodName:assertEquals:["both are 100 % true", file.toString()] @TO@ MethodInvocation@@assertEquals("both are 100 % true",file.toString()) @AT@ 10501 @LENGTH@ 52
------------INS StringLiteral@@"both are 100 % true" @TO@ SimpleName@@MethodName:assertEquals:["both are 100 % true", file.toString()] @AT@ 10514 @LENGTH@ 21
------------INS MethodInvocation@@file.toString() @TO@ SimpleName@@MethodName:assertEquals:["both are 100 % true", file.toString()] @AT@ 10537 @LENGTH@ 15
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.toString() @AT@ 10537 @LENGTH@ 4
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@file.toString() @AT@ 10542 @LENGTH@ 10


UPD ReturnStatement@@NullLiteral:null @TO@ ClassInstanceCreation:new ManagedBeansSubsystemAdd() @AT@ 3541 @LENGTH@ 12
---DEL NullLiteral@@null @AT@ 3548 @LENGTH@ 4
---INS ClassInstanceCreation@@ManagedBeansSubsystemAdd[] @TO@ ReturnStatement@@NullLiteral:null @AT@ 3618 @LENGTH@ 30
------INS New@@new @TO@ ClassInstanceCreation@@ManagedBeansSubsystemAdd[] @AT@ 3618 @LENGTH@ 3
------INS SimpleType@@ManagedBeansSubsystemAdd @TO@ ClassInstanceCreation@@ManagedBeansSubsystemAdd[] @AT@ 3622 @LENGTH@ 24


UPD FieldDeclaration@@static, final, String, [EXCHANGE_ATRRIBUTE_NAME="CamelExchange"] @TO@ static, final, String, [EXCHANGE_ATTRIBUTE_NAME="CamelExchange"] @AT@ 1563 @LENGTH@ 62
---UPD VariableDeclarationFragment@@EXCHANGE_ATRRIBUTE_NAME="CamelExchange" @TO@ EXCHANGE_ATTRIBUTE_NAME="CamelExchange" @AT@ 1583 @LENGTH@ 41
------UPD SimpleName@@EXCHANGE_ATRRIBUTE_NAME @TO@ EXCHANGE_ATTRIBUTE_NAME @AT@ 1583 @LENGTH@ 23


MOV ExpressionStatement@@MethodInvocation:streamWriter.writeAttribute(Attribute.ENABLED.getLocalName(),Boolean.toString(beanValidation)) @TO@ MethodDeclaration@@public, void, MethodName:writeContent, XMLExtendedStreamWriter streamWriter, XMLStreamException,  @AT@ 2323 @LENGTH@ 96


UPD SwitchStatement@@switch (Namespace.forUri(reader.getNamespaceURI())) {case DOMAIN_1_0:{    final Element element=Element.forName(reader.getLocalName());switch (element) {case INTERFACE:{        final ServerInterfaceElement interfaceEl=new ServerInterfaceElement(reader);        if (interfaces.containsKey(interfaceEl.getName())) {          throw new XMLStreamException("Interface " + interfaceEl.getName() + " already declared",reader.getLocation());        }        interfaces.put(interfaceEl.getName(),interfaceEl);        break;      }default :    throw unexpectedElement(reader);}}default :throw unexpectedElement(reader);} @TO@ switch (Namespace.forUri(reader.getNamespaceURI())) {case DOMAIN_1_0:{    final Element element=Element.forName(reader.getLocalName());switch (element) {case INTERFACE:{        final ServerInterfaceElement interfaceEl=new ServerInterfaceElement(reader);        if (interfaces.containsKey(interfaceEl.getName())) {          throw new XMLStreamException("Interface " + interfaceEl.getName() + " already declared",reader.getLocation());        }        interfaces.put(interfaceEl.getName(),interfaceEl);        break;      }default :    throw unexpectedElement(reader);}break;}default :throw unexpectedElement(reader);} @AT@ 11130 @LENGTH@ 934
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (Namespace.forUri(reader.getNamespaceURI())) {case DOMAIN_1_0:{    final Element element=Element.forName(reader.getLocalName());switch (element) {case INTERFACE:{        final ServerInterfaceElement interfaceEl=new ServerInterfaceElement(reader);        if (interfaces.containsKey(interfaceEl.getName())) {          throw new XMLStreamException("Interface " + interfaceEl.getName() + " already declared",reader.getLocation());        }        interfaces.put(interfaceEl.getName(),interfaceEl);        break;      }default :    throw unexpectedElement(reader);}}default :throw unexpectedElement(reader);} @AT@ 11995 @LENGTH@ 6


DEL ExpressionStatement@@MethodInvocation:context.startRoute("route1") @AT@ 1970 @LENGTH@ 29
---DEL MethodInvocation@@context.startRoute("route1") @AT@ 1970 @LENGTH@ 28
------DEL SimpleName@@Name:context @AT@ 1970 @LENGTH@ 7
------DEL SimpleName@@MethodName:startRoute:["route1"] @AT@ 1978 @LENGTH@ 20
---------DEL StringLiteral@@"route1" @AT@ 1989 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:onException(Exception.class).handled(true).useOriginalBody().maximumRedeliveries(2).to("mock:error") @TO@ MethodInvocation:onException(Exception.class).handled(true).useOriginalMessage().maximumRedeliveries(2).to("mock:error") @AT@ 3232 @LENGTH@ 185
---UPD MethodInvocation@@onException(Exception.class).handled(true).useOriginalBody().maximumRedeliveries(2).to("mock:error") @TO@ onException(Exception.class).handled(true).useOriginalMessage().maximumRedeliveries(2).to("mock:error") @AT@ 3232 @LENGTH@ 184
------UPD MethodInvocation@@MethodName:useOriginalBody:[] @TO@ MethodName:useOriginalMessage:[] @AT@ 3232 @LENGTH@ 102


UPD EnhancedForStatement@@for (ServerElement server : servers.values()) {  streamWriter.writeStartElement(Element.SERVER.getLocalName());  server.writeContent(streamWriter);  streamWriter.writeEndElement();} @TO@ for (ServerElement server : servers.values()) {  streamWriter.writeStartElement(Element.SERVER.getLocalName());  server.writeContent(streamWriter);} @AT@ 10116 @LENGTH@ 239
---DEL ExpressionStatement@@MethodInvocation:streamWriter.writeEndElement() @AT@ 10310 @LENGTH@ 31
------DEL MethodInvocation@@streamWriter.writeEndElement() @AT@ 10310 @LENGTH@ 30
---------DEL SimpleName@@Name:streamWriter @AT@ 10310 @LENGTH@ 12
---------DEL SimpleName@@MethodName:writeEndElement:[] @AT@ 10323 @LENGTH@ 17


UPD Block@@ElseBody:if (pos == 0) {  return name;} else {  pos=name.lastIndexOf(File.separator);} @TO@ ElseBody:if (pos == 0) {  return name.substring(0,1);} @AT@ 4547 @LENGTH@ 165
---UPD IfStatement@@if (pos == 0) {  return name;} else {  pos=name.lastIndexOf(File.separator);} @TO@ if (pos == -1) {  pos=name.lastIndexOf(File.separator);} @AT@ 4547 @LENGTH@ 165
---INS IfStatement@@if (pos == 0) {  return name.substring(0,1);} @TO@ Block@@ElseBody:if (pos == 0) {  return name;} else {  pos=name.lastIndexOf(File.separator);} @AT@ 4634 @LENGTH@ 145
------INS InfixExpression@@pos == 0 @TO@ IfStatement@@if (pos == 0) {  return name.substring(0,1);} @AT@ 4638 @LENGTH@ 8
---------INS SimpleName@@pos @TO@ InfixExpression@@pos == 0 @AT@ 4638 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@pos == 0 @AT@ 4641 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@pos == 0 @AT@ 4645 @LENGTH@ 1
------INS Block@@ThenBody:{  return name.substring(0,1);} @TO@ IfStatement@@if (pos == 0) {  return name.substring(0,1);} @AT@ 4648 @LENGTH@ 131
---------INS ReturnStatement@@MethodInvocation:name.substring(0,1) @TO@ Block@@ThenBody:{  return name.substring(0,1);} @AT@ 4741 @LENGTH@ 28
------------INS MethodInvocation@@name.substring(0,1) @TO@ ReturnStatement@@MethodInvocation:name.substring(0,1) @AT@ 4748 @LENGTH@ 20
---------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.substring(0,1) @AT@ 4748 @LENGTH@ 4
---------------INS SimpleName@@MethodName:substring:[0, 1] @TO@ MethodInvocation@@name.substring(0,1) @AT@ 4753 @LENGTH@ 15
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:substring:[0, 1] @AT@ 4763 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:substring:[0, 1] @AT@ 4766 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)) @TO@ MethodInvocation:errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)) @AT@ 3626 @LENGTH@ 66
---UPD MethodInvocation@@errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)) @TO@ errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)) @AT@ 3626 @LENGTH@ 65
------UPD SimpleName@@MethodName:errorHandler:[deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)] @TO@ MethodName:errorHandler:[deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)] @AT@ 3626 @LENGTH@ 65
---------UPD MethodInvocation@@deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0) @TO@ deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0) @AT@ 3639 @LENGTH@ 51
------------UPD SimpleName@@MethodName:redeliverDelay:[0] @TO@ MethodName:redeliveryDelay:[0] @AT@ 3673 @LENGTH@ 17


UPD ExpressionStatement@@Assignment:queryString=getEndpoint().getHttpUri().getQuery() @TO@ Assignment:queryString=getEndpoint().getHttpUri().getRawQuery() @AT@ 10697 @LENGTH@ 52
---UPD Assignment@@queryString=getEndpoint().getHttpUri().getQuery() @TO@ queryString=getEndpoint().getHttpUri().getRawQuery() @AT@ 10697 @LENGTH@ 51
------UPD MethodInvocation@@getEndpoint().getHttpUri().getQuery() @TO@ getEndpoint().getHttpUri().getRawQuery() @AT@ 10711 @LENGTH@ 37
---------UPD SimpleName@@MethodName:getQuery:[] @TO@ MethodName:getRawQuery:[] @AT@ 10738 @LENGTH@ 10


INS MethodDeclaration@@ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @TO@ TypeDeclaration@@[public]ExecutorServiceStrategy, [ShutdownableService] @AT@ 8610 @LENGTH@ 53
---INS SimpleType@@ExecutorService @TO@ MethodDeclaration@@ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 8594 @LENGTH@ 15
---INS SimpleName@@MethodName:newSynchronousThreadPool @TO@ MethodDeclaration@@ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 8610 @LENGTH@ 24
---INS SingleVariableDeclaration@@Object source @TO@ MethodDeclaration@@ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 8635 @LENGTH@ 13
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object source @AT@ 8635 @LENGTH@ 6
------INS SimpleName@@source @TO@ SingleVariableDeclaration@@Object source @AT@ 8642 @LENGTH@ 6
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 8650 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 8650 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 8657 @LENGTH@ 4


UPD TryStatement@@try {  final ConnectionImpl connection=new ConnectionImpl(socket,MessageHandler.NULL,readExecutor);  connection.setMessageHandler(connectionHandler.handleConnected(connection));  final Thread thread=threadFactory.newThread(connection.getReadTask());  if (thread == null) {    throw new IllegalStateException("Thread creation was refused");  }  thread.start();  ok=true;} catch (IOException e) {  log.errorf(e,"Failed to handle incoming connection");} finally {  if (!ok) {    try {      socket.close();    } catch (    IOException e) {      log.errorf(e,"Failed to close socket");    }  }} @TO@ try {  final ConnectionImpl connection=new ConnectionImpl(socket,MessageHandler.NULL,readExecutor);  connection.setMessageHandler(connectionHandler.handleConnected(connection));  final Thread thread=threadFactory.newThread(connection.getReadTask());  if (thread == null) {    throw new IllegalStateException("Thread creation was refused");  }  thread.setName("Read thread for " + socket.getRemoteSocketAddress());  thread.start();  ok=true;} catch (IOException e) {  log.errorf(e,"Failed to handle incoming connection");} finally {  if (!ok) {    try {      socket.close();    } catch (    IOException e) {      log.errorf(e,"Failed to close socket");    }  }} @AT@ 4803 @LENGTH@ 815
---INS ExpressionStatement@@MethodInvocation:thread.setName("Read thread for " + socket.getRemoteSocketAddress()) @TO@ TryStatement@@try {  final ConnectionImpl connection=new ConnectionImpl(socket,MessageHandler.NULL,readExecutor);  connection.setMessageHandler(connectionHandler.handleConnected(connection));  final Thread thread=threadFactory.newThread(connection.getReadTask());  if (thread == null) {    throw new IllegalStateException("Thread creation was refused");  }  thread.start();  ok=true;} catch (IOException e) {  log.errorf(e,"Failed to handle incoming connection");} finally {  if (!ok) {    try {      socket.close();    } catch (    IOException e) {      log.errorf(e,"Failed to close socket");    }  }} @AT@ 5273 @LENGTH@ 69
------INS MethodInvocation@@thread.setName("Read thread for " + socket.getRemoteSocketAddress()) @TO@ ExpressionStatement@@MethodInvocation:thread.setName("Read thread for " + socket.getRemoteSocketAddress()) @AT@ 5273 @LENGTH@ 68
---------INS SimpleName@@Name:thread @TO@ MethodInvocation@@thread.setName("Read thread for " + socket.getRemoteSocketAddress()) @AT@ 5273 @LENGTH@ 6
---------INS SimpleName@@MethodName:setName:["Read thread for " + socket.getRemoteSocketAddress()] @TO@ MethodInvocation@@thread.setName("Read thread for " + socket.getRemoteSocketAddress()) @AT@ 5280 @LENGTH@ 61
------------INS InfixExpression@@"Read thread for " + socket.getRemoteSocketAddress() @TO@ SimpleName@@MethodName:setName:["Read thread for " + socket.getRemoteSocketAddress()] @AT@ 5288 @LENGTH@ 52
---------------INS StringLiteral@@"Read thread for " @TO@ InfixExpression@@"Read thread for " + socket.getRemoteSocketAddress() @AT@ 5288 @LENGTH@ 18
---------------INS Operator@@+ @TO@ InfixExpression@@"Read thread for " + socket.getRemoteSocketAddress() @AT@ 5306 @LENGTH@ 1
---------------INS MethodInvocation@@socket.getRemoteSocketAddress() @TO@ InfixExpression@@"Read thread for " + socket.getRemoteSocketAddress() @AT@ 5309 @LENGTH@ 31
------------------INS SimpleName@@Name:socket @TO@ MethodInvocation@@socket.getRemoteSocketAddress() @AT@ 5309 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getRemoteSocketAddress:[] @TO@ MethodInvocation@@socket.getRemoteSocketAddress() @AT@ 5316 @LENGTH@ 24


INS MethodDeclaration@@public, int, MethodName:available,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 5044 @LENGTH@ 83
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:available,  @AT@ 5044 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:available,  @AT@ 5051 @LENGTH@ 3
---INS SimpleName@@MethodName:available @TO@ MethodDeclaration@@public, int, MethodName:available,  @AT@ 5055 @LENGTH@ 9
---INS ReturnStatement@@InfixExpression:input.length - index @TO@ MethodDeclaration@@public, int, MethodName:available,  @AT@ 5085 @LENGTH@ 28
------INS InfixExpression@@input.length - index @TO@ ReturnStatement@@InfixExpression:input.length - index @AT@ 5092 @LENGTH@ 20
---------INS QualifiedName@@input.length @TO@ InfixExpression@@input.length - index @AT@ 5092 @LENGTH@ 12
------------INS SimpleName@@input @TO@ QualifiedName@@input.length @AT@ 5092 @LENGTH@ 5
------------INS SimpleName@@length @TO@ QualifiedName@@input.length @AT@ 5098 @LENGTH@ 6
---------INS Operator@@- @TO@ InfixExpression@@input.length - index @AT@ 5104 @LENGTH@ 1
---------INS SimpleName@@index @TO@ InfixExpression@@input.length - index @AT@ 5107 @LENGTH@ 5


INS MethodDeclaration@@void, MethodName:prepareShutdown,  @TO@ TypeDeclaration@@[public]ShutdownAware,  @AT@ 2561 @LENGTH@ 18
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:prepareShutdown,  @AT@ 2556 @LENGTH@ 4
---INS SimpleName@@MethodName:prepareShutdown @TO@ MethodDeclaration@@void, MethodName:prepareShutdown,  @AT@ 2561 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:builder.append(uri.getPath()) @TO@ MethodInvocation:builder.append(uri.getRawPath()) @AT@ 11016 @LENGTH@ 30
---UPD MethodInvocation@@builder.append(uri.getPath()) @TO@ builder.append(uri.getRawPath()) @AT@ 11016 @LENGTH@ 29
------UPD SimpleName@@MethodName:append:[uri.getPath()] @TO@ MethodName:append:[uri.getRawPath()] @AT@ 11024 @LENGTH@ 21
---------UPD MethodInvocation@@uri.getPath() @TO@ uri.getRawPath() @AT@ 11031 @LENGTH@ 13
------------UPD SimpleName@@MethodName:getPath:[] @TO@ MethodName:getRawPath:[] @AT@ 11035 @LENGTH@ 9


UPD VariableDeclarationStatement@@Set set=TransformedSet.decorateTransform(originalSet,TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER); @TO@ Set<?> set=TransformedSet.decorateTransform(originalSet,TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER); @AT@ 3576 @LENGTH@ 113
---DEL SimpleType@@Set @AT@ 3576 @LENGTH@ 3
---INS ParameterizedType@@Set<?> @TO@ VariableDeclarationStatement@@Set set=TransformedSet.decorateTransform(originalSet,TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER); @AT@ 3592 @LENGTH@ 6
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<?> @AT@ 3592 @LENGTH@ 3
------INS WildcardType@@? @TO@ ParameterizedType@@Set<?> @AT@ 3596 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("direct:start").aggregate().constant(true).completionTimeout(500L).groupExchanges().to("mock:result") @TO@ MethodInvocation:from("direct:start").aggregate(constant(true)).completionTimeout(500L).groupExchanges().to("mock:result") @AT@ 2751 @LENGTH@ 406
---UPD MethodInvocation@@from("direct:start").aggregate().constant(true).completionTimeout(500L).groupExchanges().to("mock:result") @TO@ from("direct:start").aggregate(constant(true)).completionTimeout(500L).groupExchanges().to("mock:result") @AT@ 2751 @LENGTH@ 405
------UPD MethodInvocation@@MethodName:constant:[true] @TO@ MethodName:aggregate:[constant(true)] @AT@ 2751 @LENGTH@ 127
---------INS MethodInvocation@@constant(true) @TO@ MethodInvocation@@MethodName:constant:[true] @AT@ 2862 @LENGTH@ 14
------------INS SimpleName@@MethodName:constant:[true] @TO@ MethodInvocation@@constant(true) @AT@ 2862 @LENGTH@ 14
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:constant:[true] @AT@ 2871 @LENGTH@ 4
---------DEL BooleanLiteral@@true @AT@ 2873 @LENGTH@ 4
------DEL MethodInvocation@@MethodName:aggregate:[] @AT@ 2751 @LENGTH@ 112


UPD IfStatement@@if (!prePollCheck()) {  if (log.isDebugEnabled()) {    log.debug("Skipping pool as pre poll check returned false");  }} @TO@ if (!prePollCheck()) {  if (log.isDebugEnabled()) {    log.debug("Skipping pool as pre poll check returned false");  }  return;} @AT@ 2714 @LENGTH@ 163
---UPD Block@@ThenBody:{  if (log.isDebugEnabled()) {    log.debug("Skipping pool as pre poll check returned false");  }} @TO@ ThenBody:{  if (log.isDebugEnabled()) {    log.debug("Skipping pool as pre poll check returned false");  }  return;} @AT@ 2735 @LENGTH@ 142
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  if (log.isDebugEnabled()) {    log.debug("Skipping pool as pre poll check returned false");  }} @AT@ 2880 @LENGTH@ 7


DEL TryStatement@@try {  batchBuilder.install();} catch (ServiceRegistryException e) {  resultHandler.handleFailure(e,param);} @AT@ 3841 @LENGTH@ 149
---DEL ExpressionStatement@@MethodInvocation:batchBuilder.install() @AT@ 3859 @LENGTH@ 23
------DEL MethodInvocation@@batchBuilder.install() @AT@ 3859 @LENGTH@ 22
---------DEL SimpleName@@Name:batchBuilder @AT@ 3859 @LENGTH@ 12
---------DEL SimpleName@@MethodName:install:[] @AT@ 3872 @LENGTH@ 9
---DEL CatchClause@@catch (ServiceRegistryException e) {  resultHandler.handleFailure(e,param);} @AT@ 3893 @LENGTH@ 97
------DEL SingleVariableDeclaration@@ServiceRegistryException e @AT@ 3900 @LENGTH@ 26
---------DEL SimpleType@@ServiceRegistryException @AT@ 3900 @LENGTH@ 24
---------DEL SimpleName@@e @AT@ 3925 @LENGTH@ 1
------DEL ExpressionStatement@@MethodInvocation:resultHandler.handleFailure(e,param) @AT@ 3942 @LENGTH@ 38
---------DEL MethodInvocation@@resultHandler.handleFailure(e,param) @AT@ 3942 @LENGTH@ 37
------------DEL SimpleName@@Name:resultHandler @AT@ 3942 @LENGTH@ 13
------------DEL SimpleName@@MethodName:handleFailure:[e, param] @AT@ 3956 @LENGTH@ 23
---------------DEL SimpleName@@e @AT@ 3970 @LENGTH@ 1
---------------DEL SimpleName@@param @AT@ 3973 @LENGTH@ 5


UPD ExpressionStatement@@SuperMethodInvocation:super.doReadObject(new TreeMap(comp),in) @TO@ SuperMethodInvocation:super.doReadObject(new TreeMap<E,MutableInteger>(comp),in) @AT@ 4621 @LENGTH@ 42
---UPD SuperMethodInvocation@@super.doReadObject(new TreeMap(comp),in) @TO@ super.doReadObject(new TreeMap<E,MutableInteger>(comp),in) @AT@ 4621 @LENGTH@ 41
------UPD SimpleName@@MethodName:doReadObject:[new TreeMap(comp), in] @TO@ MethodName:doReadObject:[new TreeMap<E,MutableInteger>(comp), in] @AT@ 4627 @LENGTH@ 12
------UPD ClassInstanceCreation@@TreeMap[comp] @TO@ TreeMap<E,MutableInteger>[comp] @AT@ 4640 @LENGTH@ 17
---------DEL SimpleType@@TreeMap @AT@ 4644 @LENGTH@ 7
---------INS ParameterizedType@@TreeMap<E,MutableInteger> @TO@ ClassInstanceCreation@@TreeMap[comp] @AT@ 4727 @LENGTH@ 26
------------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<E,MutableInteger> @AT@ 4727 @LENGTH@ 7
------------INS SimpleType@@E @TO@ ParameterizedType@@TreeMap<E,MutableInteger> @AT@ 4735 @LENGTH@ 1
------------INS SimpleType@@MutableInteger @TO@ ParameterizedType@@TreeMap<E,MutableInteger> @AT@ 4738 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:testPostHandleWithDoubleExtension, Exception,  @TO@ TypeDeclaration@@[public]ContentTypeInterceptorTests,  @AT@ 2310 @LENGTH@ 348
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testPostHandleWithDoubleExtension, Exception,  @AT@ 2310 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testPostHandleWithDoubleExtension, Exception,  @AT@ 2317 @LENGTH@ 4
---INS SimpleName@@MethodName:testPostHandleWithDoubleExtension @TO@ MethodDeclaration@@public, void, MethodName:testPostHandleWithDoubleExtension, Exception,  @AT@ 2322 @LENGTH@ 33
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testPostHandleWithDoubleExtension, Exception,  @AT@ 2365 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:interceptor.setExtensions(Collections.singleton("rss")) @TO@ MethodDeclaration@@public, void, MethodName:testPostHandleWithDoubleExtension, Exception,  @AT@ 2379 @LENGTH@ 56
------INS MethodInvocation@@interceptor.setExtensions(Collections.singleton("rss")) @TO@ ExpressionStatement@@MethodInvocation:interceptor.setExtensions(Collections.singleton("rss")) @AT@ 2379 @LENGTH@ 55
---------INS SimpleName@@Name:interceptor @TO@ MethodInvocation@@interceptor.setExtensions(Collections.singleton("rss")) @AT@ 2379 @LENGTH@ 11
---------INS SimpleName@@MethodName:setExtensions:[Collections.singleton("rss")] @TO@ MethodInvocation@@interceptor.setExtensions(Collections.singleton("rss")) @AT@ 2391 @LENGTH@ 43
------------INS MethodInvocation@@Collections.singleton("rss") @TO@ SimpleName@@MethodName:setExtensions:[Collections.singleton("rss")] @AT@ 2405 @LENGTH@ 28
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton("rss") @AT@ 2405 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singleton:["rss"] @TO@ MethodInvocation@@Collections.singleton("rss") @AT@ 2417 @LENGTH@ 16
------------------INS StringLiteral@@"rss" @TO@ SimpleName@@MethodName:singleton:["rss"] @AT@ 2427 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:request.setPathInfo("/bar/foo.1.rss") @TO@ MethodDeclaration@@public, void, MethodName:testPostHandleWithDoubleExtension, Exception,  @AT@ 2438 @LENGTH@ 38
------INS MethodInvocation@@request.setPathInfo("/bar/foo.1.rss") @TO@ ExpressionStatement@@MethodInvocation:request.setPathInfo("/bar/foo.1.rss") @AT@ 2438 @LENGTH@ 37
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setPathInfo("/bar/foo.1.rss") @AT@ 2438 @LENGTH@ 7
---------INS SimpleName@@MethodName:setPathInfo:["/bar/foo.1.rss"] @TO@ MethodInvocation@@request.setPathInfo("/bar/foo.1.rss") @AT@ 2446 @LENGTH@ 29
------------INS StringLiteral@@"/bar/foo.1.rss" @TO@ SimpleName@@MethodName:setPathInfo:["/bar/foo.1.rss"] @AT@ 2458 @LENGTH@ 16
---INS VariableDeclarationStatement@@ModelAndView modelAndView=new ModelAndView("foo.1"); @TO@ MethodDeclaration@@public, void, MethodName:testPostHandleWithDoubleExtension, Exception,  @AT@ 2479 @LENGTH@ 54
------INS SimpleType@@ModelAndView @TO@ VariableDeclarationStatement@@ModelAndView modelAndView=new ModelAndView("foo.1"); @AT@ 2479 @LENGTH@ 12
------INS VariableDeclarationFragment@@modelAndView=new ModelAndView("foo.1") @TO@ VariableDeclarationStatement@@ModelAndView modelAndView=new ModelAndView("foo.1"); @AT@ 2492 @LENGTH@ 40
---------INS SimpleName@@modelAndView @TO@ VariableDeclarationFragment@@modelAndView=new ModelAndView("foo.1") @AT@ 2492 @LENGTH@ 12
---------INS ClassInstanceCreation@@ModelAndView["foo.1"] @TO@ VariableDeclarationFragment@@modelAndView=new ModelAndView("foo.1") @AT@ 2507 @LENGTH@ 25
------------INS New@@new @TO@ ClassInstanceCreation@@ModelAndView["foo.1"] @AT@ 2507 @LENGTH@ 3
------------INS SimpleType@@ModelAndView @TO@ ClassInstanceCreation@@ModelAndView["foo.1"] @AT@ 2511 @LENGTH@ 12
------------INS StringLiteral@@"foo.1" @TO@ ClassInstanceCreation@@ModelAndView["foo.1"] @AT@ 2524 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:interceptor.postHandle(request,response,null,modelAndView) @TO@ MethodDeclaration@@public, void, MethodName:testPostHandleWithDoubleExtension, Exception,  @AT@ 2536 @LENGTH@ 62
------INS MethodInvocation@@interceptor.postHandle(request,response,null,modelAndView) @TO@ ExpressionStatement@@MethodInvocation:interceptor.postHandle(request,response,null,modelAndView) @AT@ 2536 @LENGTH@ 61
---------INS SimpleName@@Name:interceptor @TO@ MethodInvocation@@interceptor.postHandle(request,response,null,modelAndView) @AT@ 2536 @LENGTH@ 11
---------INS SimpleName@@MethodName:postHandle:[request, response, null, modelAndView] @TO@ MethodInvocation@@interceptor.postHandle(request,response,null,modelAndView) @AT@ 2548 @LENGTH@ 49
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:postHandle:[request, response, null, modelAndView] @AT@ 2559 @LENGTH@ 7
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:postHandle:[request, response, null, modelAndView] @AT@ 2568 @LENGTH@ 8
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:postHandle:[request, response, null, modelAndView] @AT@ 2578 @LENGTH@ 4
------------INS SimpleName@@modelAndView @TO@ SimpleName@@MethodName:postHandle:[request, response, null, modelAndView] @AT@ 2584 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals("foo.1.rss",modelAndView.getViewName()) @TO@ MethodDeclaration@@public, void, MethodName:testPostHandleWithDoubleExtension, Exception,  @AT@ 2601 @LENGTH@ 54
------INS MethodInvocation@@assertEquals("foo.1.rss",modelAndView.getViewName()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("foo.1.rss",modelAndView.getViewName()) @AT@ 2601 @LENGTH@ 53
---------INS SimpleName@@MethodName:assertEquals:["foo.1.rss", modelAndView.getViewName()] @TO@ MethodInvocation@@assertEquals("foo.1.rss",modelAndView.getViewName()) @AT@ 2601 @LENGTH@ 53
------------INS StringLiteral@@"foo.1.rss" @TO@ SimpleName@@MethodName:assertEquals:["foo.1.rss", modelAndView.getViewName()] @AT@ 2614 @LENGTH@ 11
------------INS MethodInvocation@@modelAndView.getViewName() @TO@ SimpleName@@MethodName:assertEquals:["foo.1.rss", modelAndView.getViewName()] @AT@ 2627 @LENGTH@ 26
---------------INS SimpleName@@Name:modelAndView @TO@ MethodInvocation@@modelAndView.getViewName() @AT@ 2627 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getViewName:[] @TO@ MethodInvocation@@modelAndView.getViewName() @AT@ 2640 @LENGTH@ 13


DEL VariableDeclarationStatement@@CacheTransactionObject txObject=(CacheTransactionObject)status.getTransaction(); @AT@ 5175 @LENGTH@ 83
---DEL SimpleType@@CacheTransactionObject @AT@ 5175 @LENGTH@ 22
---DEL VariableDeclarationFragment@@txObject=(CacheTransactionObject)status.getTransaction() @AT@ 5198 @LENGTH@ 59
------DEL SimpleName@@txObject @AT@ 5198 @LENGTH@ 8
------DEL CastExpression@@(CacheTransactionObject)status.getTransaction() @AT@ 5209 @LENGTH@ 48
---------DEL SimpleType@@CacheTransactionObject @AT@ 5210 @LENGTH@ 22
---------DEL MethodInvocation@@status.getTransaction() @AT@ 5234 @LENGTH@ 23
------------DEL SimpleName@@Name:status @AT@ 5234 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getTransaction:[] @AT@ 5241 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:assertFiltering(filter,new File("src/java/"),true) @TO@ MethodInvocation:assertFiltering(filter,new File("src/main/java/"),true) @AT@ 7083 @LENGTH@ 53
---UPD MethodInvocation@@assertFiltering(filter,new File("src/java/"),true) @TO@ assertFiltering(filter,new File("src/main/java/"),true) @AT@ 7083 @LENGTH@ 52
------UPD SimpleName@@MethodName:assertFiltering:[filter, new File("src/java/"), true] @TO@ MethodName:assertFiltering:[filter, new File("src/main/java/"), true] @AT@ 7083 @LENGTH@ 52
---------UPD ClassInstanceCreation@@File["src/java/"] @TO@ File["src/main/java/"] @AT@ 7107 @LENGTH@ 21
------------UPD StringLiteral@@"src/java/" @TO@ "src/main/java/" @AT@ 7116 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:config.setURL(new URL("jar:" + new File("conf/resources.jar").getAbsoluteFile().toURL() + "!/test-jar.xml")) @TO@ MethodInvocation:config.setURL(new URL("jar:" + new File("conf/resources.jar").getAbsoluteFile().toURI().toURL() + "!/test-jar.xml")) @AT@ 4810 @LENGTH@ 109
---UPD MethodInvocation@@config.setURL(new URL("jar:" + new File("conf/resources.jar").getAbsoluteFile().toURL() + "!/test-jar.xml")) @TO@ config.setURL(new URL("jar:" + new File("conf/resources.jar").getAbsoluteFile().toURI().toURL() + "!/test-jar.xml")) @AT@ 4810 @LENGTH@ 108
------UPD SimpleName@@MethodName:setURL:[new URL("jar:" + new File("conf/resources.jar").getAbsoluteFile().toURL() + "!/test-jar.xml")] @TO@ MethodName:setURL:[new URL("jar:" + new File("conf/resources.jar").getAbsoluteFile().toURI().toURL() + "!/test-jar.xml")] @AT@ 4817 @LENGTH@ 101
---------UPD ClassInstanceCreation@@URL["jar:" + new File("conf/resources.jar").getAbsoluteFile().toURL() + "!/test-jar.xml"] @TO@ URL["jar:" + new File("conf/resources.jar").getAbsoluteFile().toURI().toURL() + "!/test-jar.xml"] @AT@ 4824 @LENGTH@ 93
------------UPD InfixExpression@@"jar:" + new File("conf/resources.jar").getAbsoluteFile().toURL() + "!/test-jar.xml" @TO@ "jar:" + new File("conf/resources.jar").getAbsoluteFile().toURI().toURL() + "!/test-jar.xml" @AT@ 4832 @LENGTH@ 84
---------------UPD MethodInvocation@@new File("conf/resources.jar").getAbsoluteFile().toURL() @TO@ new File("conf/resources.jar").getAbsoluteFile().toURI().toURL() @AT@ 4841 @LENGTH@ 56
------------------INS MethodInvocation@@MethodName:toURI:[] @TO@ MethodInvocation@@new File("conf/resources.jar").getAbsoluteFile().toURL() @AT@ 4839 @LENGTH@ 56


INS MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @TO@ TypeDeclaration@@[public]DefaultExecutorServiceStrategy, ServiceSupport[ExecutorServiceStrategy] @AT@ 13600 @LENGTH@ 603
---INS Modifier@@public @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 13600 @LENGTH@ 6
---INS SimpleType@@ExecutorService @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 13607 @LENGTH@ 15
---INS SimpleName@@MethodName:newThreadPool @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 13623 @LENGTH@ 13
---INS SingleVariableDeclaration@@Object source @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 13637 @LENGTH@ 13
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object source @AT@ 13637 @LENGTH@ 6
------INS SimpleName@@source @TO@ SingleVariableDeclaration@@Object source @AT@ 13644 @LENGTH@ 6
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 13652 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 13652 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 13659 @LENGTH@ 4
---INS SingleVariableDeclaration@@int corePoolSize @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 13665 @LENGTH@ 16
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int corePoolSize @AT@ 13665 @LENGTH@ 3
------INS SimpleName@@corePoolSize @TO@ SingleVariableDeclaration@@int corePoolSize @AT@ 13669 @LENGTH@ 12
---INS SingleVariableDeclaration@@int maxPoolSize @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 13683 @LENGTH@ 15
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int maxPoolSize @AT@ 13683 @LENGTH@ 3
------INS SimpleName@@maxPoolSize @TO@ SingleVariableDeclaration@@int maxPoolSize @AT@ 13687 @LENGTH@ 11
---INS SingleVariableDeclaration@@int maxQueueSize @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 13700 @LENGTH@ 16
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int maxQueueSize @AT@ 13700 @LENGTH@ 3
------INS SimpleName@@maxQueueSize @TO@ SingleVariableDeclaration@@int maxQueueSize @AT@ 13704 @LENGTH@ 12
---INS VariableDeclarationStatement@@ExecutorService answer=ExecutorServiceHelper.newThreadPool(threadNamePattern,name,corePoolSize,maxPoolSize,maxQueueSize); @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 13728 @LENGTH@ 127
------INS SimpleType@@ExecutorService @TO@ VariableDeclarationStatement@@ExecutorService answer=ExecutorServiceHelper.newThreadPool(threadNamePattern,name,corePoolSize,maxPoolSize,maxQueueSize); @AT@ 13728 @LENGTH@ 15
------INS VariableDeclarationFragment@@answer=ExecutorServiceHelper.newThreadPool(threadNamePattern,name,corePoolSize,maxPoolSize,maxQueueSize) @TO@ VariableDeclarationStatement@@ExecutorService answer=ExecutorServiceHelper.newThreadPool(threadNamePattern,name,corePoolSize,maxPoolSize,maxQueueSize); @AT@ 13744 @LENGTH@ 110
---------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=ExecutorServiceHelper.newThreadPool(threadNamePattern,name,corePoolSize,maxPoolSize,maxQueueSize) @AT@ 13744 @LENGTH@ 6
---------INS MethodInvocation@@ExecutorServiceHelper.newThreadPool(threadNamePattern,name,corePoolSize,maxPoolSize,maxQueueSize) @TO@ VariableDeclarationFragment@@answer=ExecutorServiceHelper.newThreadPool(threadNamePattern,name,corePoolSize,maxPoolSize,maxQueueSize) @AT@ 13753 @LENGTH@ 101
------------INS SimpleName@@Name:ExecutorServiceHelper @TO@ MethodInvocation@@ExecutorServiceHelper.newThreadPool(threadNamePattern,name,corePoolSize,maxPoolSize,maxQueueSize) @AT@ 13753 @LENGTH@ 21
------------INS SimpleName@@MethodName:newThreadPool:[threadNamePattern, name, corePoolSize, maxPoolSize, maxQueueSize] @TO@ MethodInvocation@@ExecutorServiceHelper.newThreadPool(threadNamePattern,name,corePoolSize,maxPoolSize,maxQueueSize) @AT@ 13775 @LENGTH@ 79
---------------INS SimpleName@@threadNamePattern @TO@ SimpleName@@MethodName:newThreadPool:[threadNamePattern, name, corePoolSize, maxPoolSize, maxQueueSize] @AT@ 13789 @LENGTH@ 17
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:newThreadPool:[threadNamePattern, name, corePoolSize, maxPoolSize, maxQueueSize] @AT@ 13808 @LENGTH@ 4
---------------INS SimpleName@@corePoolSize @TO@ SimpleName@@MethodName:newThreadPool:[threadNamePattern, name, corePoolSize, maxPoolSize, maxQueueSize] @AT@ 13814 @LENGTH@ 12
---------------INS SimpleName@@maxPoolSize @TO@ SimpleName@@MethodName:newThreadPool:[threadNamePattern, name, corePoolSize, maxPoolSize, maxQueueSize] @AT@ 13828 @LENGTH@ 11
---------------INS SimpleName@@maxQueueSize @TO@ SimpleName@@MethodName:newThreadPool:[threadNamePattern, name, corePoolSize, maxPoolSize, maxQueueSize] @AT@ 13841 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:onThreadPoolCreated(answer) @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 13864 @LENGTH@ 28
------INS MethodInvocation@@onThreadPoolCreated(answer) @TO@ ExpressionStatement@@MethodInvocation:onThreadPoolCreated(answer) @AT@ 13864 @LENGTH@ 27
---------INS SimpleName@@MethodName:onThreadPoolCreated:[answer] @TO@ MethodInvocation@@onThreadPoolCreated(answer) @AT@ 13864 @LENGTH@ 27
------------INS SimpleName@@answer @TO@ SimpleName@@MethodName:onThreadPoolCreated:[answer] @AT@ 13884 @LENGTH@ 6
---INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer);} @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 13902 @LENGTH@ 272
------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer);} @AT@ 13906 @LENGTH@ 20
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 13906 @LENGTH@ 3
---------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 13910 @LENGTH@ 16
------INS Block@@ThenBody:{  LOG.debug("Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer);} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer);} @AT@ 13928 @LENGTH@ 246
---------INS ExpressionStatement@@MethodInvocation:LOG.debug("Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer) @TO@ Block@@ThenBody:{  LOG.debug("Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer);} @AT@ 13942 @LENGTH@ 222
------------INS MethodInvocation@@LOG.debug("Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer) @AT@ 13942 @LENGTH@ 221
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer) @AT@ 13942 @LENGTH@ 3
---------------INS SimpleName@@MethodName:debug:["Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer] @TO@ MethodInvocation@@LOG.debug("Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer) @AT@ 13946 @LENGTH@ 217
------------------INS InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @TO@ SimpleName@@MethodName:debug:["Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer] @AT@ 13952 @LENGTH@ 210
---------------------INS StringLiteral@@"Created new thread pool for source: " @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 13952 @LENGTH@ 38
---------------------INS Operator@@+ @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 13990 @LENGTH@ 1
---------------------INS SimpleName@@source @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 13993 @LENGTH@ 6
---------------------INS StringLiteral@@" with name: " @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 14002 @LENGTH@ 14
---------------------INS SimpleName@@name @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 14019 @LENGTH@ 4
---------------------INS StringLiteral@@". [poolSize=" @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 14026 @LENGTH@ 14
---------------------INS SimpleName@@corePoolSize @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 14043 @LENGTH@ 12
---------------------INS StringLiteral@@", maxPoolSize=" @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 14078 @LENGTH@ 16
---------------------INS SimpleName@@maxPoolSize @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 14097 @LENGTH@ 11
---------------------INS StringLiteral@@", maxQueueSize=" @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 14111 @LENGTH@ 17
---------------------INS SimpleName@@maxQueueSize @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 14131 @LENGTH@ 12
---------------------INS StringLiteral@@"] -> " @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 14146 @LENGTH@ 7
---------------------INS SimpleName@@answer @TO@ InfixExpression@@"Created new thread pool for source: " + source + " with name: "+ name+ ". [poolSize="+ corePoolSize+ ", maxPoolSize="+ maxPoolSize+ ", maxQueueSize="+ maxQueueSize+ "] -> "+ answer @AT@ 14156 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:answer @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 14183 @LENGTH@ 14
------INS SimpleName@@answer @TO@ ReturnStatement@@SimpleName:answer @AT@ 14190 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:execute(action,isExposeConnection(),valueSerializer) @TO@ MethodInvocation:execute(action,exposeConnection,valueSerializer) @AT@ 3394 @LENGTH@ 62
---UPD MethodInvocation@@execute(action,isExposeConnection(),valueSerializer) @TO@ execute(action,exposeConnection,valueSerializer) @AT@ 3401 @LENGTH@ 54
------UPD SimpleName@@MethodName:execute:[action, isExposeConnection(), valueSerializer] @TO@ MethodName:execute:[action, exposeConnection, valueSerializer] @AT@ 3401 @LENGTH@ 54
---------DEL MethodInvocation@@MethodName:isExposeConnection:[] @AT@ 3417 @LENGTH@ 20
---------INS SimpleName@@exposeConnection @TO@ SimpleName@@MethodName:execute:[action, isExposeConnection(), valueSerializer] @AT@ 3417 @LENGTH@ 16


INS ExpressionStatement@@Assignment:hash=calculateElementHashOf(bindingGroups.values(),hash) @TO@ MethodDeclaration@@public, long, MethodName:elementHash,  @AT@ 5678 @LENGTH@ 60
---INS Assignment@@hash=calculateElementHashOf(bindingGroups.values(),hash) @TO@ ExpressionStatement@@Assignment:hash=calculateElementHashOf(bindingGroups.values(),hash) @AT@ 5678 @LENGTH@ 59
------INS SimpleName@@hash @TO@ Assignment@@hash=calculateElementHashOf(bindingGroups.values(),hash) @AT@ 5678 @LENGTH@ 4
------INS Operator@@= @TO@ Assignment@@hash=calculateElementHashOf(bindingGroups.values(),hash) @AT@ 5682 @LENGTH@ 1
------INS MethodInvocation@@calculateElementHashOf(bindingGroups.values(),hash) @TO@ Assignment@@hash=calculateElementHashOf(bindingGroups.values(),hash) @AT@ 5685 @LENGTH@ 52
---------INS SimpleName@@MethodName:calculateElementHashOf:[bindingGroups.values(), hash] @TO@ MethodInvocation@@calculateElementHashOf(bindingGroups.values(),hash) @AT@ 5685 @LENGTH@ 52
------------INS MethodInvocation@@bindingGroups.values() @TO@ SimpleName@@MethodName:calculateElementHashOf:[bindingGroups.values(), hash] @AT@ 5708 @LENGTH@ 22
---------------INS SimpleName@@Name:bindingGroups @TO@ MethodInvocation@@bindingGroups.values() @AT@ 5708 @LENGTH@ 13
---------------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@bindingGroups.values() @AT@ 5722 @LENGTH@ 8
------------INS SimpleName@@hash @TO@ SimpleName@@MethodName:calculateElementHashOf:[bindingGroups.values(), hash] @AT@ 5732 @LENGTH@ 4


UPD VariableDeclarationStatement@@int idx=schemeSpecificPart.lastIndexOf('?'); @TO@ int idx=schemeSpecificPart.indexOf('?'); @AT@ 2939 @LENGTH@ 46
---UPD VariableDeclarationFragment@@idx=schemeSpecificPart.lastIndexOf('?') @TO@ idx=schemeSpecificPart.indexOf('?') @AT@ 2943 @LENGTH@ 41
------UPD MethodInvocation@@schemeSpecificPart.lastIndexOf('?') @TO@ schemeSpecificPart.indexOf('?') @AT@ 2949 @LENGTH@ 35
---------UPD SimpleName@@MethodName:lastIndexOf:['?'] @TO@ MethodName:indexOf:['?'] @AT@ 2968 @LENGTH@ 16


UPD IfStatement@@if (mode.equals(ServiceController.Mode.ON_DEMAND)) {  serverStartupListener.expectOnDemand(serviceName);} else {  serverStartupListener.unexpectOnDemand(serviceName);} @TO@ if (mode != ServiceController.Mode.ACTIVE) {  serverStartupListener.expectNonActive(serviceName);} else {  serverStartupListener.unexpectNonActive(serviceName);} @AT@ 5021 @LENGTH@ 222
---DEL MethodInvocation@@mode.equals(ServiceController.Mode.ON_DEMAND) @AT@ 5024 @LENGTH@ 45
------DEL SimpleName@@Name:mode @AT@ 5024 @LENGTH@ 4
------DEL SimpleName@@MethodName:equals:[ServiceController.Mode.ON_DEMAND] @AT@ 5029 @LENGTH@ 40
---------DEL QualifiedName@@ServiceController.Mode.ON_DEMAND @AT@ 5036 @LENGTH@ 32
---INS InfixExpression@@mode != ServiceController.Mode.ACTIVE @TO@ IfStatement@@if (mode.equals(ServiceController.Mode.ON_DEMAND)) {  serverStartupListener.expectOnDemand(serviceName);} else {  serverStartupListener.unexpectOnDemand(serviceName);} @AT@ 5025 @LENGTH@ 37
------INS SimpleName@@mode @TO@ InfixExpression@@mode != ServiceController.Mode.ACTIVE @AT@ 5025 @LENGTH@ 4
------INS Operator@@!= @TO@ InfixExpression@@mode != ServiceController.Mode.ACTIVE @AT@ 5029 @LENGTH@ 2
------INS QualifiedName@@ServiceController.Mode.ACTIVE @TO@ InfixExpression@@mode != ServiceController.Mode.ACTIVE @AT@ 5033 @LENGTH@ 29
---------MOV QualifiedName@@ServiceController.Mode @TO@ QualifiedName@@ServiceController.Mode.ACTIVE @AT@ 5036 @LENGTH@ 22
---------MOV SimpleName@@ON_DEMAND @TO@ QualifiedName@@ServiceController.Mode.ACTIVE @AT@ 5059 @LENGTH@ 9
---UPD Block@@ThenBody:{  serverStartupListener.expectOnDemand(serviceName);} @TO@ ThenBody:{  serverStartupListener.expectNonActive(serviceName);} @AT@ 5071 @LENGTH@ 82
------UPD ExpressionStatement@@MethodInvocation:serverStartupListener.expectOnDemand(serviceName) @TO@ MethodInvocation:serverStartupListener.expectNonActive(serviceName) @AT@ 5089 @LENGTH@ 50
---------UPD MethodInvocation@@serverStartupListener.expectOnDemand(serviceName) @TO@ serverStartupListener.expectNonActive(serviceName) @AT@ 5089 @LENGTH@ 49
------------UPD SimpleName@@MethodName:expectOnDemand:[serviceName] @TO@ MethodName:expectNonActive:[serviceName] @AT@ 5111 @LENGTH@ 27
---UPD Block@@ElseBody:{  serverStartupListener.unexpectOnDemand(serviceName);} @TO@ ElseBody:{  serverStartupListener.unexpectNonActive(serviceName);} @AT@ 5159 @LENGTH@ 84
------UPD ExpressionStatement@@MethodInvocation:serverStartupListener.unexpectOnDemand(serviceName) @TO@ MethodInvocation:serverStartupListener.unexpectNonActive(serviceName) @AT@ 5177 @LENGTH@ 52
---------UPD MethodInvocation@@serverStartupListener.unexpectOnDemand(serviceName) @TO@ serverStartupListener.unexpectNonActive(serviceName) @AT@ 5177 @LENGTH@ 51
------------UPD SimpleName@@MethodName:unexpectOnDemand:[serviceName] @TO@ MethodName:unexpectNonActive:[serviceName] @AT@ 5199 @LENGTH@ 29


INS ExpressionStatement@@MethodInvocation:System.arraycopy(prefixes,0,this.prefixes,0,prefixes.length) @TO@ MethodDeclaration@@public, voidMethodName:PrefixFileFilter, String[] prefixes, IOCase caseSensitivity,  @AT@ 4040 @LENGTH@ 65
---INS MethodInvocation@@System.arraycopy(prefixes,0,this.prefixes,0,prefixes.length) @TO@ ExpressionStatement@@MethodInvocation:System.arraycopy(prefixes,0,this.prefixes,0,prefixes.length) @AT@ 4040 @LENGTH@ 64
------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.arraycopy(prefixes,0,this.prefixes,0,prefixes.length) @AT@ 4040 @LENGTH@ 6
------INS SimpleName@@MethodName:arraycopy:[prefixes, 0, this.prefixes, 0, prefixes.length] @TO@ MethodInvocation@@System.arraycopy(prefixes,0,this.prefixes,0,prefixes.length) @AT@ 4047 @LENGTH@ 57
---------INS SimpleName@@prefixes @TO@ SimpleName@@MethodName:arraycopy:[prefixes, 0, this.prefixes, 0, prefixes.length] @AT@ 4057 @LENGTH@ 8
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[prefixes, 0, this.prefixes, 0, prefixes.length] @AT@ 4067 @LENGTH@ 1
---------INS FieldAccess@@this.prefixes @TO@ SimpleName@@MethodName:arraycopy:[prefixes, 0, this.prefixes, 0, prefixes.length] @AT@ 4070 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.prefixes @AT@ 4070 @LENGTH@ 4
------------INS SimpleName@@prefixes @TO@ FieldAccess@@this.prefixes @AT@ 4075 @LENGTH@ 8
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[prefixes, 0, this.prefixes, 0, prefixes.length] @AT@ 4085 @LENGTH@ 1
---------INS QualifiedName@@prefixes.length @TO@ SimpleName@@MethodName:arraycopy:[prefixes, 0, this.prefixes, 0, prefixes.length] @AT@ 4088 @LENGTH@ 15
------------INS SimpleName@@prefixes @TO@ QualifiedName@@prefixes.length @AT@ 4088 @LENGTH@ 8
------------INS SimpleName@@length @TO@ QualifiedName@@prefixes.length @AT@ 4097 @LENGTH@ 6


DEL MethodDeclaration@@protected, void, MethodName:applyUpdate, LoggingSubsystemElement element, UpdateFailedException,  @AT@ 1991 @LENGTH@ 339
---DEL Modifier@@protected @AT@ 1991 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 2001 @LENGTH@ 4
---DEL SimpleName@@MethodName:applyUpdate @AT@ 2006 @LENGTH@ 11
---DEL SingleVariableDeclaration@@LoggingSubsystemElement element @AT@ 2018 @LENGTH@ 31
------DEL SimpleType@@LoggingSubsystemElement @AT@ 2018 @LENGTH@ 23
------DEL SimpleName@@element @AT@ 2042 @LENGTH@ 7
---DEL SimpleType@@UpdateFailedException @AT@ 2058 @LENGTH@ 21
---DEL VariableDeclarationStatement@@final LoggerElement logger=new LoggerElement(name); @AT@ 2090 @LENGTH@ 53
------DEL Modifier@@final @AT@ 2090 @LENGTH@ 5
------DEL SimpleType@@LoggerElement @AT@ 2096 @LENGTH@ 13
------DEL VariableDeclarationFragment@@logger=new LoggerElement(name) @AT@ 2110 @LENGTH@ 32
---------DEL SimpleName@@logger @AT@ 2110 @LENGTH@ 6
---------DEL ClassInstanceCreation@@LoggerElement[name] @AT@ 2119 @LENGTH@ 23
------------DEL New@@new @AT@ 2119 @LENGTH@ 3
------------DEL SimpleType@@LoggerElement @AT@ 2123 @LENGTH@ 13
------------DEL SimpleName@@name @AT@ 2137 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:logger.setUseParentHandlers(useParentHandlers) @AT@ 2152 @LENGTH@ 47
------DEL MethodInvocation@@logger.setUseParentHandlers(useParentHandlers) @AT@ 2152 @LENGTH@ 46
---------DEL SimpleName@@Name:logger @AT@ 2152 @LENGTH@ 6
---------DEL SimpleName@@MethodName:setUseParentHandlers:[useParentHandlers] @AT@ 2159 @LENGTH@ 39
------------DEL SimpleName@@useParentHandlers @AT@ 2180 @LENGTH@ 17
---DEL IfStatement@@if (!element.addLogger(logger)) {  throw new UpdateFailedException("duplicate logger " + name);} @AT@ 2208 @LENGTH@ 116
------DEL PrefixExpression@@!element.addLogger(logger) @AT@ 2212 @LENGTH@ 26
---------DEL Operator@@! @AT@ 2212 @LENGTH@ 1
---------DEL MethodInvocation@@element.addLogger(logger) @AT@ 2213 @LENGTH@ 25
------------DEL SimpleName@@Name:element @AT@ 2213 @LENGTH@ 7
------------DEL SimpleName@@MethodName:addLogger:[logger] @AT@ 2221 @LENGTH@ 17
---------------DEL SimpleName@@logger @AT@ 2231 @LENGTH@ 6
------DEL Block@@ThenBody:{  throw new UpdateFailedException("duplicate logger " + name);} @AT@ 2240 @LENGTH@ 84
---------DEL ThrowStatement@@ClassInstanceCreation:new UpdateFailedException("duplicate logger " + name) @AT@ 2254 @LENGTH@ 60
------------DEL ClassInstanceCreation@@UpdateFailedException["duplicate logger " + name] @AT@ 2260 @LENGTH@ 53
---------------DEL New@@new @AT@ 2260 @LENGTH@ 3
---------------DEL SimpleType@@UpdateFailedException @AT@ 2264 @LENGTH@ 21
---------------DEL InfixExpression@@"duplicate logger " + name @AT@ 2286 @LENGTH@ 26
------------------DEL StringLiteral@@"duplicate logger " @AT@ 2286 @LENGTH@ 19
------------------DEL Operator@@+ @AT@ 2305 @LENGTH@ 1
------------------DEL SimpleName@@name @AT@ 2308 @LENGTH@ 4


INS MethodDeclaration@@protected, XStream, MethodName:createXStream, ClassResolver resolver,  @TO@ TypeDeclaration@@[public]JsonDataFormat, AbstractXStreamWrapper @AT@ 2058 @LENGTH@ 177
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, XStream, MethodName:createXStream, ClassResolver resolver,  @AT@ 2058 @LENGTH@ 9
---INS SimpleType@@XStream @TO@ MethodDeclaration@@protected, XStream, MethodName:createXStream, ClassResolver resolver,  @AT@ 2068 @LENGTH@ 7
---INS SimpleName@@MethodName:createXStream @TO@ MethodDeclaration@@protected, XStream, MethodName:createXStream, ClassResolver resolver,  @AT@ 2076 @LENGTH@ 13
---INS SingleVariableDeclaration@@ClassResolver resolver @TO@ MethodDeclaration@@protected, XStream, MethodName:createXStream, ClassResolver resolver,  @AT@ 2090 @LENGTH@ 22
------INS SimpleType@@ClassResolver @TO@ SingleVariableDeclaration@@ClassResolver resolver @AT@ 2090 @LENGTH@ 13
------INS SimpleName@@resolver @TO@ SingleVariableDeclaration@@ClassResolver resolver @AT@ 2104 @LENGTH@ 8
---INS VariableDeclarationStatement@@XStream xs=super.createXStream(resolver); @TO@ MethodDeclaration@@protected, XStream, MethodName:createXStream, ClassResolver resolver,  @AT@ 2124 @LENGTH@ 43
------INS SimpleType@@XStream @TO@ VariableDeclarationStatement@@XStream xs=super.createXStream(resolver); @AT@ 2124 @LENGTH@ 7
------INS VariableDeclarationFragment@@xs=super.createXStream(resolver) @TO@ VariableDeclarationStatement@@XStream xs=super.createXStream(resolver); @AT@ 2132 @LENGTH@ 34
---------INS SimpleName@@xs @TO@ VariableDeclarationFragment@@xs=super.createXStream(resolver) @AT@ 2132 @LENGTH@ 2
---------INS SuperMethodInvocation@@super.createXStream(resolver) @TO@ VariableDeclarationFragment@@xs=super.createXStream(resolver) @AT@ 2137 @LENGTH@ 29
------------INS SimpleName@@MethodName:createXStream:[resolver] @TO@ SuperMethodInvocation@@super.createXStream(resolver) @AT@ 2143 @LENGTH@ 13
------------INS SimpleName@@resolver @TO@ SuperMethodInvocation@@super.createXStream(resolver) @AT@ 2157 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:xs.setMode(XStream.NO_REFERENCES) @TO@ MethodDeclaration@@protected, XStream, MethodName:createXStream, ClassResolver resolver,  @AT@ 2176 @LENGTH@ 34
------INS MethodInvocation@@xs.setMode(XStream.NO_REFERENCES) @TO@ ExpressionStatement@@MethodInvocation:xs.setMode(XStream.NO_REFERENCES) @AT@ 2176 @LENGTH@ 33
---------INS SimpleName@@Name:xs @TO@ MethodInvocation@@xs.setMode(XStream.NO_REFERENCES) @AT@ 2176 @LENGTH@ 2
---------INS SimpleName@@MethodName:setMode:[XStream.NO_REFERENCES] @TO@ MethodInvocation@@xs.setMode(XStream.NO_REFERENCES) @AT@ 2179 @LENGTH@ 30
------------INS QualifiedName@@XStream.NO_REFERENCES @TO@ SimpleName@@MethodName:setMode:[XStream.NO_REFERENCES] @AT@ 2187 @LENGTH@ 21
---------------INS SimpleName@@XStream @TO@ QualifiedName@@XStream.NO_REFERENCES @AT@ 2187 @LENGTH@ 7
---------------INS SimpleName@@NO_REFERENCES @TO@ QualifiedName@@XStream.NO_REFERENCES @AT@ 2195 @LENGTH@ 13
---INS ReturnStatement@@SimpleName:xs @TO@ MethodDeclaration@@protected, XStream, MethodName:createXStream, ClassResolver resolver,  @AT@ 2219 @LENGTH@ 10
------INS SimpleName@@xs @TO@ ReturnStatement@@SimpleName:xs @AT@ 2226 @LENGTH@ 2


UPD VariableDeclarationStatement@@QueueConnectionFactory qcf=lookup(utils,"ConnectionFactory",QueueConnectionFactory.class); @TO@ QueueConnectionFactory qcf=lookup(utils,"RemoteConnectionFactory",QueueConnectionFactory.class); @AT@ 2150 @LENGTH@ 94
---UPD VariableDeclarationFragment@@qcf=lookup(utils,"ConnectionFactory",QueueConnectionFactory.class) @TO@ qcf=lookup(utils,"RemoteConnectionFactory",QueueConnectionFactory.class) @AT@ 2173 @LENGTH@ 70
------UPD MethodInvocation@@lookup(utils,"ConnectionFactory",QueueConnectionFactory.class) @TO@ lookup(utils,"RemoteConnectionFactory",QueueConnectionFactory.class) @AT@ 2179 @LENGTH@ 64
---------UPD SimpleName@@MethodName:lookup:[utils, "ConnectionFactory", QueueConnectionFactory.class] @TO@ MethodName:lookup:[utils, "RemoteConnectionFactory", QueueConnectionFactory.class] @AT@ 2179 @LENGTH@ 64
------------UPD StringLiteral@@"ConnectionFactory" @TO@ "RemoteConnectionFactory" @AT@ 2193 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:template.sendBody("direct:no-param-insert","GPL") @TO@ MethodInvocation:template.sendBody("direct:no-param-insert","XGPL") @AT@ 6416 @LENGTH@ 51
---UPD MethodInvocation@@template.sendBody("direct:no-param-insert","GPL") @TO@ template.sendBody("direct:no-param-insert","XGPL") @AT@ 6416 @LENGTH@ 50
------UPD SimpleName@@MethodName:sendBody:["direct:no-param-insert", "GPL"] @TO@ MethodName:sendBody:["direct:no-param-insert", "XGPL"] @AT@ 6425 @LENGTH@ 41
---------UPD StringLiteral@@"GPL" @TO@ "XGPL" @AT@ 6460 @LENGTH@ 5


UPD ReturnStatement@@CastExpression:(HV)deserializeHashValue(rawHashValue) @TO@ MethodInvocation:RedisTemplate.this.<HV>deserializeHashValue(rawHashValue) @AT@ 26691 @LENGTH@ 47
---INS MethodInvocation@@RedisTemplate.this.<HV>deserializeHashValue(rawHashValue) @TO@ ReturnStatement@@CastExpression:(HV)deserializeHashValue(rawHashValue) @AT@ 26698 @LENGTH@ 58
------INS ThisExpression@@this @TO@ MethodInvocation@@RedisTemplate.this.<HV>deserializeHashValue(rawHashValue) @AT@ 26698 @LENGTH@ 18
------MOV SimpleName@@MethodName:deserializeHashValue:[rawHashValue] @TO@ MethodInvocation@@RedisTemplate.this.<HV>deserializeHashValue(rawHashValue) @AT@ 26703 @LENGTH@ 34
---DEL CastExpression@@(HV)deserializeHashValue(rawHashValue) @AT@ 26698 @LENGTH@ 39
------DEL SimpleType@@HV @AT@ 26699 @LENGTH@ 2
------DEL MethodInvocation@@deserializeHashValue(rawHashValue) @AT@ 26703 @LENGTH@ 34


UPD ExpressionStatement@@Assignment:map=(Map)in.readObject() @TO@ Assignment:map=(Map<K,V>)in.readObject() @AT@ 7137 @LENGTH@ 28
---UPD Assignment@@map=(Map)in.readObject() @TO@ map=(Map<K,V>)in.readObject() @AT@ 7137 @LENGTH@ 27
------UPD CastExpression@@(Map)in.readObject() @TO@ (Map<K,V>)in.readObject() @AT@ 7143 @LENGTH@ 21
---------INS ParameterizedType@@Map<K,V> @TO@ CastExpression@@(Map)in.readObject() @AT@ 7144 @LENGTH@ 9
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<K,V> @AT@ 7144 @LENGTH@ 3
------------INS SimpleType@@K @TO@ ParameterizedType@@Map<K,V> @AT@ 7148 @LENGTH@ 1
------------INS SimpleType@@V @TO@ ParameterizedType@@Map<K,V> @AT@ 7151 @LENGTH@ 1
---------DEL SimpleType@@Map @AT@ 7144 @LENGTH@ 3


UPD IfStatement@@if (isClient) {  message=exchange.getOut();} else {  message=exchange.getIn();} @TO@ if (isClient && exchange.hasOut()) {  message=exchange.getOut();} else {  message=exchange.getIn();} @AT@ 1807 @LENGTH@ 123
---INS InfixExpression@@isClient && exchange.hasOut() @TO@ IfStatement@@if (isClient) {  message=exchange.getOut();} else {  message=exchange.getIn();} @AT@ 1811 @LENGTH@ 29
------INS SimpleName@@isClient @TO@ InfixExpression@@isClient && exchange.hasOut() @AT@ 1811 @LENGTH@ 8
------INS Operator@@&& @TO@ InfixExpression@@isClient && exchange.hasOut() @AT@ 1819 @LENGTH@ 2
------INS MethodInvocation@@exchange.hasOut() @TO@ InfixExpression@@isClient && exchange.hasOut() @AT@ 1823 @LENGTH@ 17
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.hasOut() @AT@ 1823 @LENGTH@ 8
---------INS SimpleName@@MethodName:hasOut:[] @TO@ MethodInvocation@@exchange.hasOut() @AT@ 1832 @LENGTH@ 8
---DEL SimpleName@@isClient @AT@ 1811 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("BC") @TO@ MethodInvocation:mock.message(0).body().not(body().contains("A")) @AT@ 1370 @LENGTH@ 34
---UPD MethodInvocation@@mock.expectedBodiesReceived("BC") @TO@ mock.message(0).body().not(body().contains("A")) @AT@ 1370 @LENGTH@ 33
------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@mock.expectedBodiesReceived("BC") @AT@ 1373 @LENGTH@ 22
------INS MethodInvocation@@MethodName:message:[0] @TO@ MethodInvocation@@mock.expectedBodiesReceived("BC") @AT@ 1373 @LENGTH@ 15
---------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:message:[0] @AT@ 1386 @LENGTH@ 1
------UPD SimpleName@@MethodName:expectedBodiesReceived:["BC"] @TO@ MethodName:contains:["A"] @AT@ 1375 @LENGTH@ 28
------INS SimpleName@@MethodName:not:[body().contains("A")] @TO@ MethodInvocation@@mock.expectedBodiesReceived("BC") @AT@ 1396 @LENGTH@ 25
---------INS MethodInvocation@@body().contains("A") @TO@ SimpleName@@MethodName:not:[body().contains("A")] @AT@ 1400 @LENGTH@ 20
------------MOV SimpleName@@MethodName:expectedBodiesReceived:["BC"] @TO@ MethodInvocation@@body().contains("A") @AT@ 1375 @LENGTH@ 28
---------------UPD StringLiteral@@"BC" @TO@ "A" @AT@ 1398 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@body().contains("A") @AT@ 1400 @LENGTH@ 6


UPD MethodDeclaration@@protected, void, MethodName:processXmlStream, XMLExtendedStreamReader reader, XMLStreamException,  @TO@ public, voidMethodName:NicMatchCriteriaElement, XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 1342 @LENGTH@ 1353
---MOV SuperConstructorInvocation@@super(reader,Element.NIC_MATCH);
 @TO@ MethodDeclaration@@protected, void, MethodName:processXmlStream, XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 1213 @LENGTH@ 33
---MOV ExpressionStatement@@MethodInvocation:setInterfaceCriteria(new NicMatchInterfaceCriteria(pattern)) @TO@ MethodDeclaration@@protected, void, MethodName:processXmlStream, XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 1255 @LENGTH@ 61
---UPD Modifier@@protected @TO@ public @AT@ 1342 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 1352 @LENGTH@ 4
---UPD SimpleName@@MethodName:processXmlStream @TO@ MethodName:NicMatchCriteriaElement @AT@ 1357 @LENGTH@ 16


UPD SwitchStatement@@switch (command) {case SHUTDOWN:{    shutdown();    break;  }case MSG:{  if (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    final String sourceProcess=b.toString();    final List<String> msg=new ArrayList<String>();    while (status == Status.MORE) {      status=StreamUtils.readWord(input,b);      msg.add(b.toString());    }    if (status == Status.END_OF_LINE) {      try {        handler.handleMessage(sourceProcess,msg);      } catch (      Throwable t) {      }    }  }  break;}} @TO@ switch (command) {case SHUTDOWN:{    shutdown();    break;  }case MSG:{  if (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    final String sourceProcess=b.toString();    final List<String> msg=new ArrayList<String>();    while (status == Status.MORE) {      status=StreamUtils.readWord(input,b);      msg.add(b.toString());    }    if (status == Status.END_OF_LINE) {      try {        handler.handleMessage(sourceProcess,msg);      } catch (      Throwable t) {      }    }  }  break;}case MSG_BYTES:{if (status == Status.MORE) {  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    CheckedBytes cb=StreamUtils.readCheckedBytes(input);    try {      handler.handleMessage(sourceProcess,cb.getBytes());    } catch (    Throwable t) {    }  }}break;}} @AT@ 7544 @LENGTH@ 1400
---INS SwitchCase@@case MSG_BYTES: @TO@ SwitchStatement@@switch (command) {case SHUTDOWN:{    shutdown();    break;  }case MSG:{  if (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    final String sourceProcess=b.toString();    final List<String> msg=new ArrayList<String>();    while (status == Status.MORE) {      status=StreamUtils.readWord(input,b);      msg.add(b.toString());    }    if (status == Status.END_OF_LINE) {      try {        handler.handleMessage(sourceProcess,msg);      } catch (      Throwable t) {      }    }  }  break;}} @AT@ 9179 @LENGTH@ 15
------INS SimpleName@@MSG_BYTES @TO@ SwitchCase@@case MSG_BYTES: @AT@ 9184 @LENGTH@ 9
---INS IfStatement@@if (status == Status.MORE) {  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    CheckedBytes cb=StreamUtils.readCheckedBytes(input);    try {      handler.handleMessage(sourceProcess,cb.getBytes());    } catch (    Throwable t) {    }  }} @TO@ SwitchStatement@@switch (command) {case SHUTDOWN:{    shutdown();    break;  }case MSG:{  if (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    final String sourceProcess=b.toString();    final List<String> msg=new ArrayList<String>();    while (status == Status.MORE) {      status=StreamUtils.readWord(input,b);      msg.add(b.toString());    }    if (status == Status.END_OF_LINE) {      try {        handler.handleMessage(sourceProcess,msg);      } catch (      Throwable t) {      }    }  }  break;}} @AT@ 9229 @LENGTH@ 1054
------INS InfixExpression@@status == Status.MORE @TO@ IfStatement@@if (status == Status.MORE) {  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    CheckedBytes cb=StreamUtils.readCheckedBytes(input);    try {      handler.handleMessage(sourceProcess,cb.getBytes());    } catch (    Throwable t) {    }  }} @AT@ 9233 @LENGTH@ 21
---------INS SimpleName@@status @TO@ InfixExpression@@status == Status.MORE @AT@ 9233 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@status == Status.MORE @AT@ 9239 @LENGTH@ 2
---------INS QualifiedName@@Status.MORE @TO@ InfixExpression@@status == Status.MORE @AT@ 9243 @LENGTH@ 11
------------INS SimpleName@@Status @TO@ QualifiedName@@Status.MORE @AT@ 9243 @LENGTH@ 6
------------INS SimpleName@@MORE @TO@ QualifiedName@@Status.MORE @AT@ 9250 @LENGTH@ 4
------INS Block@@ThenBody:{  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    CheckedBytes cb=StreamUtils.readCheckedBytes(input);    try {      handler.handleMessage(sourceProcess,cb.getBytes());    } catch (    Throwable t) {    }  }} @TO@ IfStatement@@if (status == Status.MORE) {  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    CheckedBytes cb=StreamUtils.readCheckedBytes(input);    try {      handler.handleMessage(sourceProcess,cb.getBytes());    } catch (    Throwable t) {    }  }} @AT@ 9256 @LENGTH@ 1027
---------INS ExpressionStatement@@Assignment:status=StreamUtils.readWord(input,b) @TO@ Block@@ThenBody:{  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    CheckedBytes cb=StreamUtils.readCheckedBytes(input);    try {      handler.handleMessage(sourceProcess,cb.getBytes());    } catch (    Throwable t) {    }  }} @AT@ 9294 @LENGTH@ 40
------------INS Assignment@@status=StreamUtils.readWord(input,b) @TO@ ExpressionStatement@@Assignment:status=StreamUtils.readWord(input,b) @AT@ 9294 @LENGTH@ 39
---------------INS SimpleName@@status @TO@ Assignment@@status=StreamUtils.readWord(input,b) @AT@ 9294 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@status=StreamUtils.readWord(input,b) @AT@ 9300 @LENGTH@ 1
---------------INS MethodInvocation@@StreamUtils.readWord(input,b) @TO@ Assignment@@status=StreamUtils.readWord(input,b) @AT@ 9303 @LENGTH@ 30
------------------INS SimpleName@@Name:StreamUtils @TO@ MethodInvocation@@StreamUtils.readWord(input,b) @AT@ 9303 @LENGTH@ 11
------------------INS SimpleName@@MethodName:readWord:[input, b] @TO@ MethodInvocation@@StreamUtils.readWord(input,b) @AT@ 9315 @LENGTH@ 18
---------------------INS SimpleName@@input @TO@ SimpleName@@MethodName:readWord:[input, b] @AT@ 9324 @LENGTH@ 5
---------------------INS SimpleName@@b @TO@ SimpleName@@MethodName:readWord:[input, b] @AT@ 9331 @LENGTH@ 1
---------INS VariableDeclarationStatement@@final String sourceProcess=b.toString(); @TO@ Block@@ThenBody:{  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    CheckedBytes cb=StreamUtils.readCheckedBytes(input);    try {      handler.handleMessage(sourceProcess,cb.getBytes());    } catch (    Throwable t) {    }  }} @AT@ 9371 @LENGTH@ 42
------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String sourceProcess=b.toString(); @AT@ 9371 @LENGTH@ 5
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String sourceProcess=b.toString(); @AT@ 9377 @LENGTH@ 6
------------INS VariableDeclarationFragment@@sourceProcess=b.toString() @TO@ VariableDeclarationStatement@@final String sourceProcess=b.toString(); @AT@ 9384 @LENGTH@ 28
---------------INS SimpleName@@sourceProcess @TO@ VariableDeclarationFragment@@sourceProcess=b.toString() @AT@ 9384 @LENGTH@ 13
---------------INS MethodInvocation@@b.toString() @TO@ VariableDeclarationFragment@@sourceProcess=b.toString() @AT@ 9400 @LENGTH@ 12
------------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.toString() @AT@ 9400 @LENGTH@ 1
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@b.toString() @AT@ 9402 @LENGTH@ 10
---------INS IfStatement@@if (status == Status.MORE) {  CheckedBytes cb=StreamUtils.readCheckedBytes(input);  try {    handler.handleMessage(sourceProcess,cb.getBytes());  } catch (  Throwable t) {  }} @TO@ Block@@ThenBody:{  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    CheckedBytes cb=StreamUtils.readCheckedBytes(input);    try {      handler.handleMessage(sourceProcess,cb.getBytes());    } catch (    Throwable t) {    }  }} @AT@ 9450 @LENGTH@ 799
------------INS InfixExpression@@status == Status.MORE @TO@ IfStatement@@if (status == Status.MORE) {  CheckedBytes cb=StreamUtils.readCheckedBytes(input);  try {    handler.handleMessage(sourceProcess,cb.getBytes());  } catch (  Throwable t) {  }} @AT@ 9454 @LENGTH@ 21
---------------INS SimpleName@@status @TO@ InfixExpression@@status == Status.MORE @AT@ 9454 @LENGTH@ 6
---------------INS Operator@@== @TO@ InfixExpression@@status == Status.MORE @AT@ 9460 @LENGTH@ 2
---------------INS QualifiedName@@Status.MORE @TO@ InfixExpression@@status == Status.MORE @AT@ 9464 @LENGTH@ 11
------------------INS SimpleName@@Status @TO@ QualifiedName@@Status.MORE @AT@ 9464 @LENGTH@ 6
------------------INS SimpleName@@MORE @TO@ QualifiedName@@Status.MORE @AT@ 9471 @LENGTH@ 4
------------INS Block@@ThenBody:{  CheckedBytes cb=StreamUtils.readCheckedBytes(input);  try {    handler.handleMessage(sourceProcess,cb.getBytes());  } catch (  Throwable t) {  }} @TO@ IfStatement@@if (status == Status.MORE) {  CheckedBytes cb=StreamUtils.readCheckedBytes(input);  try {    handler.handleMessage(sourceProcess,cb.getBytes());  } catch (  Throwable t) {  }} @AT@ 9477 @LENGTH@ 772
---------------INS VariableDeclarationStatement@@CheckedBytes cb=StreamUtils.readCheckedBytes(input); @TO@ Block@@ThenBody:{  CheckedBytes cb=StreamUtils.readCheckedBytes(input);  try {    handler.handleMessage(sourceProcess,cb.getBytes());  } catch (  Throwable t) {  }} @AT@ 9519 @LENGTH@ 54
------------------INS SimpleType@@CheckedBytes @TO@ VariableDeclarationStatement@@CheckedBytes cb=StreamUtils.readCheckedBytes(input); @AT@ 9519 @LENGTH@ 12
------------------INS VariableDeclarationFragment@@cb=StreamUtils.readCheckedBytes(input) @TO@ VariableDeclarationStatement@@CheckedBytes cb=StreamUtils.readCheckedBytes(input); @AT@ 9532 @LENGTH@ 40
---------------------INS SimpleName@@cb @TO@ VariableDeclarationFragment@@cb=StreamUtils.readCheckedBytes(input) @AT@ 9532 @LENGTH@ 2
---------------------INS MethodInvocation@@StreamUtils.readCheckedBytes(input) @TO@ VariableDeclarationFragment@@cb=StreamUtils.readCheckedBytes(input) @AT@ 9537 @LENGTH@ 35
------------------------INS SimpleName@@Name:StreamUtils @TO@ MethodInvocation@@StreamUtils.readCheckedBytes(input) @AT@ 9537 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:readCheckedBytes:[input] @TO@ MethodInvocation@@StreamUtils.readCheckedBytes(input) @AT@ 9549 @LENGTH@ 23
---------------------------INS SimpleName@@input @TO@ SimpleName@@MethodName:readCheckedBytes:[input] @AT@ 9566 @LENGTH@ 5
---------------INS TryStatement@@try {  handler.handleMessage(sourceProcess,cb.getBytes());} catch (Throwable t) {} @TO@ Block@@ThenBody:{  CheckedBytes cb=StreamUtils.readCheckedBytes(input);  try {    handler.handleMessage(sourceProcess,cb.getBytes());  } catch (  Throwable t) {  }} @AT@ 9887 @LENGTH@ 280
------------------INS ExpressionStatement@@MethodInvocation:handler.handleMessage(sourceProcess,cb.getBytes()) @TO@ TryStatement@@try {  handler.handleMessage(sourceProcess,cb.getBytes());} catch (Throwable t) {} @AT@ 9941 @LENGTH@ 52
---------------------INS MethodInvocation@@handler.handleMessage(sourceProcess,cb.getBytes()) @TO@ ExpressionStatement@@MethodInvocation:handler.handleMessage(sourceProcess,cb.getBytes()) @AT@ 9941 @LENGTH@ 51
------------------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.handleMessage(sourceProcess,cb.getBytes()) @AT@ 9941 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:handleMessage:[sourceProcess, cb.getBytes()] @TO@ MethodInvocation@@handler.handleMessage(sourceProcess,cb.getBytes()) @AT@ 9949 @LENGTH@ 43
---------------------------INS SimpleName@@sourceProcess @TO@ SimpleName@@MethodName:handleMessage:[sourceProcess, cb.getBytes()] @AT@ 9963 @LENGTH@ 13
---------------------------INS MethodInvocation@@cb.getBytes() @TO@ SimpleName@@MethodName:handleMessage:[sourceProcess, cb.getBytes()] @AT@ 9978 @LENGTH@ 13
------------------------------INS SimpleName@@Name:cb @TO@ MethodInvocation@@cb.getBytes() @AT@ 9978 @LENGTH@ 2
------------------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@cb.getBytes() @AT@ 9981 @LENGTH@ 10
------------------INS CatchClause@@catch (Throwable t) {} @TO@ TryStatement@@try {  handler.handleMessage(sourceProcess,cb.getBytes());} catch (Throwable t) {} @AT@ 10040 @LENGTH@ 127
---------------------INS SingleVariableDeclaration@@Throwable t @TO@ CatchClause@@catch (Throwable t) {} @AT@ 10047 @LENGTH@ 11
------------------------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable t @AT@ 10047 @LENGTH@ 9
------------------------INS SimpleName@@t @TO@ SingleVariableDeclaration@@Throwable t @AT@ 10057 @LENGTH@ 1
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (command) {case SHUTDOWN:{    shutdown();    break;  }case MSG:{  if (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    final String sourceProcess=b.toString();    final List<String> msg=new ArrayList<String>();    while (status == Status.MORE) {      status=StreamUtils.readWord(input,b);      msg.add(b.toString());    }    if (status == Status.END_OF_LINE) {      try {        handler.handleMessage(sourceProcess,msg);      } catch (      Throwable t) {      }    }  }  break;}} @AT@ 10316 @LENGTH@ 6


UPD TypeDeclaration@@[public]DeployDeploymentPlanBuilder, [DeploymentPlanBuilder] @TO@ [public]DeployDeploymentPlanBuilder, [DeploymentSetActionsCompleteBuilder] @AT@ 1283 @LENGTH@ 889
---UPD SimpleType@@DeploymentPlanBuilder @TO@ DeploymentSetActionsCompleteBuilder @AT@ 1336 @LENGTH@ 21


UPD VariableDeclarationStatement@@SpringCamelContext camel=ac.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @TO@ SpringCamelContext camel=(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @AT@ 2724 @LENGTH@ 98
---UPD VariableDeclarationFragment@@camel=ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ camel=(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 2743 @LENGTH@ 78
------INS CastExpression@@(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ VariableDeclarationFragment@@camel=ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 2876 @LENGTH@ 91
---------MOV MethodInvocation@@ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ CastExpression@@(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 2751 @LENGTH@ 70
---------INS SimpleType@@SpringCamelContext @TO@ CastExpression@@(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 2877 @LENGTH@ 18


INS MethodDeclaration@@private, voidMethodName:JettyConverter,  @TO@ TypeDeclaration@@[@Converter, public, final]JettyConverter,  @AT@ 1176 @LENGTH@ 55
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:JettyConverter,  @AT@ 1176 @LENGTH@ 7
---INS SimpleName@@MethodName:JettyConverter @TO@ MethodDeclaration@@private, voidMethodName:JettyConverter,  @AT@ 1184 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:assertMatches(header("size").isEqualTo("10")) @TO@ MethodDeclaration@@public, void, MethodName:testPredicates, Exception,  @AT@ 1903 @LENGTH@ 46
---INS MethodInvocation@@assertMatches(header("size").isEqualTo("10")) @TO@ ExpressionStatement@@MethodInvocation:assertMatches(header("size").isEqualTo("10")) @AT@ 1903 @LENGTH@ 45
------INS SimpleName@@MethodName:assertMatches:[header("size").isEqualTo("10")] @TO@ MethodInvocation@@assertMatches(header("size").isEqualTo("10")) @AT@ 1903 @LENGTH@ 45
---------INS MethodInvocation@@header("size").isEqualTo("10") @TO@ SimpleName@@MethodName:assertMatches:[header("size").isEqualTo("10")] @AT@ 1917 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:header:["size"] @TO@ MethodInvocation@@header("size").isEqualTo("10") @AT@ 1917 @LENGTH@ 14
---------------INS StringLiteral@@"size" @TO@ MethodInvocation@@MethodName:header:["size"] @AT@ 1924 @LENGTH@ 6
------------INS SimpleName@@MethodName:isEqualTo:["10"] @TO@ MethodInvocation@@header("size").isEqualTo("10") @AT@ 1932 @LENGTH@ 15
---------------INS StringLiteral@@"10" @TO@ SimpleName@@MethodName:isEqualTo:["10"] @AT@ 1942 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testTwoArgsOfSameTypeWithInexactMatch, Exception,  @TO@ TypeDeclaration@@[public]HippyMethodInvokerTests,  @AT@ 1201 @LENGTH@ 329
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testTwoArgsOfSameTypeWithInexactMatch, Exception,  @AT@ 1201 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testTwoArgsOfSameTypeWithInexactMatch, Exception,  @AT@ 1208 @LENGTH@ 4
---INS SimpleName@@MethodName:testTwoArgsOfSameTypeWithInexactMatch @TO@ MethodDeclaration@@public, void, MethodName:testTwoArgsOfSameTypeWithInexactMatch, Exception,  @AT@ 1213 @LENGTH@ 37
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testTwoArgsOfSameTypeWithInexactMatch, Exception,  @AT@ 1260 @LENGTH@ 9
---INS VariableDeclarationStatement@@HippyMethodInvoker invoker=new HippyMethodInvoker(); @TO@ MethodDeclaration@@public, void, MethodName:testTwoArgsOfSameTypeWithInexactMatch, Exception,  @AT@ 1274 @LENGTH@ 54
------INS SimpleType@@HippyMethodInvoker @TO@ VariableDeclarationStatement@@HippyMethodInvoker invoker=new HippyMethodInvoker(); @AT@ 1274 @LENGTH@ 18
------INS VariableDeclarationFragment@@invoker=new HippyMethodInvoker() @TO@ VariableDeclarationStatement@@HippyMethodInvoker invoker=new HippyMethodInvoker(); @AT@ 1293 @LENGTH@ 34
---------INS SimpleName@@invoker @TO@ VariableDeclarationFragment@@invoker=new HippyMethodInvoker() @AT@ 1293 @LENGTH@ 7
---------INS ClassInstanceCreation@@HippyMethodInvoker[] @TO@ VariableDeclarationFragment@@invoker=new HippyMethodInvoker() @AT@ 1303 @LENGTH@ 24
------------INS New@@new @TO@ ClassInstanceCreation@@HippyMethodInvoker[] @AT@ 1303 @LENGTH@ 3
------------INS SimpleType@@HippyMethodInvoker @TO@ ClassInstanceCreation@@HippyMethodInvoker[] @AT@ 1307 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:invoker.setTargetMethod("duplicate") @TO@ MethodDeclaration@@public, void, MethodName:testTwoArgsOfSameTypeWithInexactMatch, Exception,  @AT@ 1331 @LENGTH@ 37
------INS MethodInvocation@@invoker.setTargetMethod("duplicate") @TO@ ExpressionStatement@@MethodInvocation:invoker.setTargetMethod("duplicate") @AT@ 1331 @LENGTH@ 36
---------INS SimpleName@@Name:invoker @TO@ MethodInvocation@@invoker.setTargetMethod("duplicate") @AT@ 1331 @LENGTH@ 7
---------INS SimpleName@@MethodName:setTargetMethod:["duplicate"] @TO@ MethodInvocation@@invoker.setTargetMethod("duplicate") @AT@ 1339 @LENGTH@ 28
------------INS StringLiteral@@"duplicate" @TO@ SimpleName@@MethodName:setTargetMethod:["duplicate"] @AT@ 1355 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:invoker.setTargetObject(new PlainPojo()) @TO@ MethodDeclaration@@public, void, MethodName:testTwoArgsOfSameTypeWithInexactMatch, Exception,  @AT@ 1371 @LENGTH@ 41
------INS MethodInvocation@@invoker.setTargetObject(new PlainPojo()) @TO@ ExpressionStatement@@MethodInvocation:invoker.setTargetObject(new PlainPojo()) @AT@ 1371 @LENGTH@ 40
---------INS SimpleName@@Name:invoker @TO@ MethodInvocation@@invoker.setTargetObject(new PlainPojo()) @AT@ 1371 @LENGTH@ 7
---------INS SimpleName@@MethodName:setTargetObject:[new PlainPojo()] @TO@ MethodInvocation@@invoker.setTargetObject(new PlainPojo()) @AT@ 1379 @LENGTH@ 32
------------INS ClassInstanceCreation@@PlainPojo[] @TO@ SimpleName@@MethodName:setTargetObject:[new PlainPojo()] @AT@ 1395 @LENGTH@ 15
---------------INS New@@new @TO@ ClassInstanceCreation@@PlainPojo[] @AT@ 1395 @LENGTH@ 3
---------------INS SimpleType@@PlainPojo @TO@ ClassInstanceCreation@@PlainPojo[] @AT@ 1399 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:invoker.setArguments(new Object[]{"2","foo"}) @TO@ MethodDeclaration@@public, void, MethodName:testTwoArgsOfSameTypeWithInexactMatch, Exception,  @AT@ 1415 @LENGTH@ 48
------INS MethodInvocation@@invoker.setArguments(new Object[]{"2","foo"}) @TO@ ExpressionStatement@@MethodInvocation:invoker.setArguments(new Object[]{"2","foo"}) @AT@ 1415 @LENGTH@ 47
---------INS SimpleName@@Name:invoker @TO@ MethodInvocation@@invoker.setArguments(new Object[]{"2","foo"}) @AT@ 1415 @LENGTH@ 7
---------INS SimpleName@@MethodName:setArguments:[new Object[]{"2","foo"}] @TO@ MethodInvocation@@invoker.setArguments(new Object[]{"2","foo"}) @AT@ 1423 @LENGTH@ 39
------------INS ArrayCreation@@new Object[]{"2","foo"} @TO@ SimpleName@@MethodName:setArguments:[new Object[]{"2","foo"}] @AT@ 1436 @LENGTH@ 25
---------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{"2","foo"} @AT@ 1440 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 1440 @LENGTH@ 6
---------------INS ArrayInitializer@@{"2","foo"} @TO@ ArrayCreation@@new Object[]{"2","foo"} @AT@ 1449 @LENGTH@ 12
------------------INS StringLiteral@@"2" @TO@ ArrayInitializer@@{"2","foo"} @AT@ 1450 @LENGTH@ 3
------------------INS StringLiteral@@"foo" @TO@ ArrayInitializer@@{"2","foo"} @AT@ 1455 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:invoker.prepare() @TO@ MethodDeclaration@@public, void, MethodName:testTwoArgsOfSameTypeWithInexactMatch, Exception,  @AT@ 1466 @LENGTH@ 18
------INS MethodInvocation@@invoker.prepare() @TO@ ExpressionStatement@@MethodInvocation:invoker.prepare() @AT@ 1466 @LENGTH@ 17
---------INS SimpleName@@Name:invoker @TO@ MethodInvocation@@invoker.prepare() @AT@ 1466 @LENGTH@ 7
---------INS SimpleName@@MethodName:prepare:[] @TO@ MethodInvocation@@invoker.prepare() @AT@ 1474 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals("foo.2",invoker.invoke()) @TO@ MethodDeclaration@@public, void, MethodName:testTwoArgsOfSameTypeWithInexactMatch, Exception,  @AT@ 1487 @LENGTH@ 40
------INS MethodInvocation@@assertEquals("foo.2",invoker.invoke()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("foo.2",invoker.invoke()) @AT@ 1487 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertEquals:["foo.2", invoker.invoke()] @TO@ MethodInvocation@@assertEquals("foo.2",invoker.invoke()) @AT@ 1487 @LENGTH@ 39
------------INS StringLiteral@@"foo.2" @TO@ SimpleName@@MethodName:assertEquals:["foo.2", invoker.invoke()] @AT@ 1500 @LENGTH@ 7
------------INS MethodInvocation@@invoker.invoke() @TO@ SimpleName@@MethodName:assertEquals:["foo.2", invoker.invoke()] @AT@ 1509 @LENGTH@ 16
---------------INS SimpleName@@Name:invoker @TO@ MethodInvocation@@invoker.invoke() @AT@ 1509 @LENGTH@ 7
---------------INS SimpleName@@MethodName:invoke:[] @TO@ MethodInvocation@@invoker.invoke() @AT@ 1517 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:log.infof("Server manager registered [%s]",serverManagerId) @TO@ MethodInvocation:DomainControllerOperationHandler.log.infof("Server manager registered [%s]",serverManagerId) @AT@ 4686 @LENGTH@ 61
---UPD MethodInvocation@@log.infof("Server manager registered [%s]",serverManagerId) @TO@ DomainControllerOperationHandler.log.infof("Server manager registered [%s]",serverManagerId) @AT@ 4686 @LENGTH@ 60
------DEL SimpleName@@Name:log @AT@ 4686 @LENGTH@ 3
------INS QualifiedName@@Name:DomainControllerOperationHandler.log @TO@ MethodInvocation@@log.infof("Server manager registered [%s]",serverManagerId) @AT@ 4722 @LENGTH@ 36


UPD MethodDeclaration@@public, void, MethodName:diffAndStore, K destKey, final K key, final K... keys,  @TO@ public, void, MethodName:diffAndStore, final K key, K destKey, final K... keys,  @AT@ 15651 @LENGTH@ 416
---UPD SingleVariableDeclaration@@K destKey @TO@ final K key @AT@ 15676 @LENGTH@ 9
------INS Modifier@@final @TO@ SingleVariableDeclaration@@K destKey @AT@ 15676 @LENGTH@ 5
------UPD SimpleName@@destKey @TO@ key @AT@ 15678 @LENGTH@ 7
---UPD SingleVariableDeclaration@@final K key @TO@ K destKey @AT@ 15687 @LENGTH@ 11
------DEL Modifier@@final @AT@ 15687 @LENGTH@ 5
------UPD SimpleName@@key @TO@ destKey @AT@ 15695 @LENGTH@ 3


UPD FieldDeclaration@@private, boolean, [isSystemStream=false] @TO@ private, boolean, [isSystemStream] @AT@ 1932 @LENGTH@ 39
---UPD VariableDeclarationFragment@@isSystemStream=false @TO@ isSystemStream @AT@ 1948 @LENGTH@ 22
------DEL BooleanLiteral@@false @AT@ 1965 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:camelContext=applicationContext.getBean(CamelContext.class) @TO@ Assignment:camelContext=beansOfType.isEmpty() ? null : beansOfType.values().iterator().next() @AT@ 2447 @LENGTH@ 62
---UPD Assignment@@camelContext=applicationContext.getBean(CamelContext.class) @TO@ camelContext=beansOfType.isEmpty() ? null : beansOfType.values().iterator().next() @AT@ 2447 @LENGTH@ 61
------DEL MethodInvocation@@applicationContext.getBean(CamelContext.class) @AT@ 2462 @LENGTH@ 46
------INS ConditionalExpression@@beansOfType.isEmpty() ? null : beansOfType.values().iterator().next() @TO@ Assignment@@camelContext=applicationContext.getBean(CamelContext.class) @AT@ 2643 @LENGTH@ 69
---------INS MethodInvocation@@beansOfType.isEmpty() @TO@ ConditionalExpression@@beansOfType.isEmpty() ? null : beansOfType.values().iterator().next() @AT@ 2643 @LENGTH@ 21
------------INS SimpleName@@Name:beansOfType @TO@ MethodInvocation@@beansOfType.isEmpty() @AT@ 2643 @LENGTH@ 11
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@beansOfType.isEmpty() @AT@ 2655 @LENGTH@ 9
---------INS NullLiteral@@null @TO@ ConditionalExpression@@beansOfType.isEmpty() ? null : beansOfType.values().iterator().next() @AT@ 2667 @LENGTH@ 4
---------INS MethodInvocation@@beansOfType.values().iterator().next() @TO@ ConditionalExpression@@beansOfType.isEmpty() ? null : beansOfType.values().iterator().next() @AT@ 2674 @LENGTH@ 38
------------MOV SimpleName@@Name:applicationContext @TO@ MethodInvocation@@beansOfType.values().iterator().next() @AT@ 2462 @LENGTH@ 18
------------MOV SimpleName@@MethodName:getBean:[CamelContext.class] @TO@ MethodInvocation@@beansOfType.values().iterator().next() @AT@ 2481 @LENGTH@ 27
---------------DEL TypeLiteral@@CamelContext.class @AT@ 2489 @LENGTH@ 18
------------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@beansOfType.values().iterator().next() @AT@ 2674 @LENGTH@ 31
------------INS MethodInvocation@@MethodName:values:[] @TO@ MethodInvocation@@beansOfType.values().iterator().next() @AT@ 2674 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:xstreamDefinition.setImplicitCollection(implicits) @TO@ MethodInvocation:xstreamDefinition.setImplicitCollections(implicits) @AT@ 5521 @LENGTH@ 51
---UPD MethodInvocation@@xstreamDefinition.setImplicitCollection(implicits) @TO@ xstreamDefinition.setImplicitCollections(implicits) @AT@ 5521 @LENGTH@ 50
------UPD SimpleName@@MethodName:setImplicitCollection:[implicits] @TO@ MethodName:setImplicitCollections:[implicits] @AT@ 5539 @LENGTH@ 32


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[public]Queue,  @AT@ 1829 @LENGTH@ 189
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1829 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1836 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1843 @LENGTH@ 8
---INS ReturnStatement@@InfixExpression:"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1858 @LENGTH@ 157
------INS InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @TO@ ReturnStatement@@InfixExpression:"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 1865 @LENGTH@ 149
---------INS StringLiteral@@"Queue [name=" @TO@ InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 1865 @LENGTH@ 14
---------INS Operator@@+ @TO@ InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 1879 @LENGTH@ 1
---------INS SimpleName@@name @TO@ InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 1882 @LENGTH@ 4
---------INS StringLiteral@@", durable=" @TO@ InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 1889 @LENGTH@ 12
---------INS SimpleName@@durable @TO@ InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 1904 @LENGTH@ 7
---------INS StringLiteral@@", autoDelete=" @TO@ InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 1914 @LENGTH@ 15
---------INS SimpleName@@autoDelete @TO@ InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 1936 @LENGTH@ 10
---------INS StringLiteral@@", exclusive=" @TO@ InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 1949 @LENGTH@ 14
---------INS SimpleName@@exclusive @TO@ InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 1966 @LENGTH@ 9
---------INS StringLiteral@@", arguments=" @TO@ InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 1978 @LENGTH@ 14
---------INS SimpleName@@arguments @TO@ InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 1999 @LENGTH@ 9
---------INS StringLiteral@@"]" @TO@ InfixExpression@@"Queue [name=" + name + ", durable="+ durable+ ", autoDelete="+ autoDelete+ ", exclusive="+ exclusive+ ", arguments="+ arguments+ "]" @AT@ 2011 @LENGTH@ 3


UPD VariableDeclarationStatement@@final File standalone=new File(getEnvironment().getDomainConfigurationDir(),STANDALONE_XML); @TO@ final File standalone=new File(getEnvironment().getServerConfigurationDir(),STANDALONE_XML); @AT@ 1908 @LENGTH@ 95
---UPD VariableDeclarationFragment@@standalone=new File(getEnvironment().getDomainConfigurationDir(),STANDALONE_XML) @TO@ standalone=new File(getEnvironment().getServerConfigurationDir(),STANDALONE_XML) @AT@ 1919 @LENGTH@ 83
------UPD ClassInstanceCreation@@File[getEnvironment().getDomainConfigurationDir(), STANDALONE_XML] @TO@ File[getEnvironment().getServerConfigurationDir(), STANDALONE_XML] @AT@ 1932 @LENGTH@ 70
---------UPD MethodInvocation@@getEnvironment().getDomainConfigurationDir() @TO@ getEnvironment().getServerConfigurationDir() @AT@ 1941 @LENGTH@ 44
------------UPD SimpleName@@MethodName:getDomainConfigurationDir:[] @TO@ MethodName:getServerConfigurationDir:[] @AT@ 1958 @LENGTH@ 27


INS MethodDeclaration@@public, void, MethodName:testNotDirtyWithDuplicate,  @TO@ TypeDeclaration@@[public]ExecutionContextTests,  @AT@ 2410 @LENGTH@ 207
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithDuplicate,  @AT@ 2410 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithDuplicate,  @AT@ 2417 @LENGTH@ 4
---INS SimpleName@@MethodName:testNotDirtyWithDuplicate @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithDuplicate,  @AT@ 2422 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:context.putString("1","test") @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithDuplicate,  @AT@ 2454 @LENGTH@ 31
------INS MethodInvocation@@context.putString("1","test") @TO@ ExpressionStatement@@MethodInvocation:context.putString("1","test") @AT@ 2454 @LENGTH@ 30
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.putString("1","test") @AT@ 2454 @LENGTH@ 7
---------INS SimpleName@@MethodName:putString:["1", "test"] @TO@ MethodInvocation@@context.putString("1","test") @AT@ 2462 @LENGTH@ 22
------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:putString:["1", "test"] @AT@ 2472 @LENGTH@ 3
------------INS StringLiteral@@"test" @TO@ SimpleName@@MethodName:putString:["1", "test"] @AT@ 2477 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertTrue(context.isDirty()) @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithDuplicate,  @AT@ 2488 @LENGTH@ 30
------INS MethodInvocation@@assertTrue(context.isDirty()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(context.isDirty()) @AT@ 2488 @LENGTH@ 29
---------INS SimpleName@@MethodName:assertTrue:[context.isDirty()] @TO@ MethodInvocation@@assertTrue(context.isDirty()) @AT@ 2488 @LENGTH@ 29
------------INS MethodInvocation@@context.isDirty() @TO@ SimpleName@@MethodName:assertTrue:[context.isDirty()] @AT@ 2499 @LENGTH@ 17
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isDirty() @AT@ 2499 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isDirty:[] @TO@ MethodInvocation@@context.isDirty() @AT@ 2507 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:context.clearDirtyFlag() @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithDuplicate,  @AT@ 2521 @LENGTH@ 25
------INS MethodInvocation@@context.clearDirtyFlag() @TO@ ExpressionStatement@@MethodInvocation:context.clearDirtyFlag() @AT@ 2521 @LENGTH@ 24
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.clearDirtyFlag() @AT@ 2521 @LENGTH@ 7
---------INS SimpleName@@MethodName:clearDirtyFlag:[] @TO@ MethodInvocation@@context.clearDirtyFlag() @AT@ 2529 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:context.putString("1","test") @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithDuplicate,  @AT@ 2549 @LENGTH@ 31
------INS MethodInvocation@@context.putString("1","test") @TO@ ExpressionStatement@@MethodInvocation:context.putString("1","test") @AT@ 2549 @LENGTH@ 30
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.putString("1","test") @AT@ 2549 @LENGTH@ 7
---------INS SimpleName@@MethodName:putString:["1", "test"] @TO@ MethodInvocation@@context.putString("1","test") @AT@ 2557 @LENGTH@ 22
------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:putString:["1", "test"] @AT@ 2567 @LENGTH@ 3
------------INS StringLiteral@@"test" @TO@ SimpleName@@MethodName:putString:["1", "test"] @AT@ 2572 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertFalse(context.isDirty()) @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithDuplicate,  @AT@ 2583 @LENGTH@ 31
------INS MethodInvocation@@assertFalse(context.isDirty()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(context.isDirty()) @AT@ 2583 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertFalse:[context.isDirty()] @TO@ MethodInvocation@@assertFalse(context.isDirty()) @AT@ 2583 @LENGTH@ 30
------------INS MethodInvocation@@context.isDirty() @TO@ SimpleName@@MethodName:assertFalse:[context.isDirty()] @AT@ 2595 @LENGTH@ 17
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isDirty() @AT@ 2595 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isDirty:[] @TO@ MethodInvocation@@context.isDirty() @AT@ 2603 @LENGTH@ 9


UPD EnhancedForStatement@@for (ShutdownDeferredConsumer deferred : deferredConsumers) {  if (suspendOnly) {    suspendNow(deferred.getConsumer());    LOG.info("Route: " + deferred.getRoute().getId() + " suspend complete.");  } else {    shutdownNow(deferred.getConsumer());    LOG.info("Route: " + deferred.getRoute().getId() + " shutdown complete.");  }} @TO@ for (ShutdownDeferredConsumer deferred : deferredConsumers) {  Consumer consumer=deferred.getConsumer();  if (suspendOnly) {    suspendNow(consumer);    LOG.info("Route: " + deferred.getRoute().getId() + " suspend complete.");  } else {    shutdownNow(consumer);    LOG.info("Route: " + deferred.getRoute().getId() + " shutdown complete.");  }} @AT@ 18115 @LENGTH@ 455
---UPD IfStatement@@if (suspendOnly) {  suspendNow(deferred.getConsumer());  LOG.info("Route: " + deferred.getRoute().getId() + " suspend complete.");} else {  shutdownNow(deferred.getConsumer());  LOG.info("Route: " + deferred.getRoute().getId() + " shutdown complete.");} @TO@ if (suspendOnly) {  suspendNow(consumer);  LOG.info("Route: " + deferred.getRoute().getId() + " suspend complete.");} else {  shutdownNow(consumer);  LOG.info("Route: " + deferred.getRoute().getId() + " shutdown complete.");} @AT@ 18193 @LENGTH@ 363
------UPD Block@@ThenBody:{  suspendNow(deferred.getConsumer());  LOG.info("Route: " + deferred.getRoute().getId() + " suspend complete.");} @TO@ ThenBody:{  suspendNow(consumer);  LOG.info("Route: " + deferred.getRoute().getId() + " suspend complete.");} @AT@ 18210 @LENGTH@ 169
---------UPD ExpressionStatement@@MethodInvocation:suspendNow(deferred.getConsumer()) @TO@ MethodInvocation:suspendNow(consumer) @AT@ 18232 @LENGTH@ 35
------------UPD MethodInvocation@@suspendNow(deferred.getConsumer()) @TO@ suspendNow(consumer) @AT@ 18232 @LENGTH@ 34
---------------UPD SimpleName@@MethodName:suspendNow:[deferred.getConsumer()] @TO@ MethodName:suspendNow:[consumer] @AT@ 18232 @LENGTH@ 34
------------------DEL MethodInvocation@@deferred.getConsumer() @AT@ 18243 @LENGTH@ 22
---------------------DEL SimpleName@@Name:deferred @AT@ 18243 @LENGTH@ 8
---------------------DEL SimpleName@@MethodName:getConsumer:[] @AT@ 18252 @LENGTH@ 13
------------------INS SimpleName@@consumer @TO@ SimpleName@@MethodName:suspendNow:[deferred.getConsumer()] @AT@ 18911 @LENGTH@ 8
------UPD Block@@ElseBody:{  shutdownNow(deferred.getConsumer());  LOG.info("Route: " + deferred.getRoute().getId() + " shutdown complete.");} @TO@ ElseBody:{  shutdownNow(consumer);  LOG.info("Route: " + deferred.getRoute().getId() + " shutdown complete.");} @AT@ 18385 @LENGTH@ 171
---------UPD ExpressionStatement@@MethodInvocation:shutdownNow(deferred.getConsumer()) @TO@ MethodInvocation:shutdownNow(consumer) @AT@ 18407 @LENGTH@ 36
------------UPD MethodInvocation@@shutdownNow(deferred.getConsumer()) @TO@ shutdownNow(consumer) @AT@ 18407 @LENGTH@ 35
---------------UPD SimpleName@@MethodName:shutdownNow:[deferred.getConsumer()] @TO@ MethodName:shutdownNow:[consumer] @AT@ 18407 @LENGTH@ 35
------------------DEL MethodInvocation@@deferred.getConsumer() @AT@ 18419 @LENGTH@ 22
---------------------DEL SimpleName@@Name:deferred @AT@ 18419 @LENGTH@ 8
---------------------DEL SimpleName@@MethodName:getConsumer:[] @AT@ 18428 @LENGTH@ 13
------------------INS SimpleName@@consumer @TO@ SimpleName@@MethodName:shutdownNow:[deferred.getConsumer()] @AT@ 19073 @LENGTH@ 8
---INS VariableDeclarationStatement@@Consumer consumer=deferred.getConsumer(); @TO@ EnhancedForStatement@@for (ShutdownDeferredConsumer deferred : deferredConsumers) {  if (suspendOnly) {    suspendNow(deferred.getConsumer());    LOG.info("Route: " + deferred.getRoute().getId() + " suspend complete.");  } else {    shutdownNow(deferred.getConsumer());    LOG.info("Route: " + deferred.getRoute().getId() + " shutdown complete.");  }} @AT@ 18801 @LENGTH@ 43
------INS SimpleType@@Consumer @TO@ VariableDeclarationStatement@@Consumer consumer=deferred.getConsumer(); @AT@ 18801 @LENGTH@ 8
------INS VariableDeclarationFragment@@consumer=deferred.getConsumer() @TO@ VariableDeclarationStatement@@Consumer consumer=deferred.getConsumer(); @AT@ 18810 @LENGTH@ 33
---------INS SimpleName@@consumer @TO@ VariableDeclarationFragment@@consumer=deferred.getConsumer() @AT@ 18810 @LENGTH@ 8
---------INS MethodInvocation@@deferred.getConsumer() @TO@ VariableDeclarationFragment@@consumer=deferred.getConsumer() @AT@ 18821 @LENGTH@ 22
------------INS SimpleName@@Name:deferred @TO@ MethodInvocation@@deferred.getConsumer() @AT@ 18821 @LENGTH@ 8
------------INS SimpleName@@MethodName:getConsumer:[] @TO@ MethodInvocation@@deferred.getConsumer() @AT@ 18830 @LENGTH@ 13


UPD Block@@WhileBody:{  String foreignTableName=rs.getString("PKTABLE_NAME");  ForeignKey foreignKey=new ForeignKey(rs.getString("FK_NAME"));  foreignKey.setForeignTableName(foreignTableName);  foreignKey.setOnUpdate(getCascadeAction(rs.getShort("UPDATE_RULE")));  foreignKey.setOnDelete(getCascadeAction(rs.getShort("DELETE_RULE")));  Reference reference=new Reference();  reference.setSequenceValue(rs.getShort("KEY_SEQ"));  reference.setLocalColumnName(rs.getString("FKCOLUMN_NAME"));  reference.setForeignColumnName(rs.getString("PKCOLUMN_NAME"));  if (foreignKeys.containsKey(foreignTableName)) {    foreignKeys.get(foreignTableName).addReference(reference);  } else {    foreignKey.addReference(reference);    foreignKeys.put(foreignTableName,foreignKey);  }} @TO@ WhileBody:{  String name=rs.getString("FK_NAME");  String foreignTableName=rs.getString("PKTABLE_NAME");  String key=name + "_" + foreignTableName;  ForeignKey foreignKey=new ForeignKey(name,foreignTableName);  foreignKey.setOnUpdate(getCascadeAction(rs.getShort("UPDATE_RULE")));  foreignKey.setOnDelete(getCascadeAction(rs.getShort("DELETE_RULE")));  Reference reference=new Reference();  reference.setSequenceValue(rs.getShort("KEY_SEQ"));  reference.setLocalColumnName(rs.getString("FKCOLUMN_NAME"));  reference.setForeignColumnName(rs.getString("PKCOLUMN_NAME"));  if (foreignKeys.containsKey(key)) {    foreignKeys.get(key).addReference(reference);  } else {    foreignKey.addReference(reference);    foreignKeys.put(key,foreignKey);  }} @AT@ 4779 @LENGTH@ 799
---MOV VariableDeclarationStatement@@String foreignTableName=rs.getString("PKTABLE_NAME"); @TO@ Block@@WhileBody:{  String foreignTableName=rs.getString("PKTABLE_NAME");  ForeignKey foreignKey=new ForeignKey(rs.getString("FK_NAME"));  foreignKey.setForeignTableName(foreignTableName);  foreignKey.setOnUpdate(getCascadeAction(rs.getShort("UPDATE_RULE")));  foreignKey.setOnDelete(getCascadeAction(rs.getShort("DELETE_RULE")));  Reference reference=new Reference();  reference.setSequenceValue(rs.getShort("KEY_SEQ"));  reference.setLocalColumnName(rs.getString("FKCOLUMN_NAME"));  reference.setForeignColumnName(rs.getString("PKCOLUMN_NAME"));  if (foreignKeys.containsKey(foreignTableName)) {    foreignKeys.get(foreignTableName).addReference(reference);  } else {    foreignKey.addReference(reference);    foreignKeys.put(foreignTableName,foreignKey);  }} @AT@ 4785 @LENGTH@ 55
---UPD VariableDeclarationStatement@@ForeignKey foreignKey=new ForeignKey(rs.getString("FK_NAME")); @TO@ String name=rs.getString("FK_NAME"); @AT@ 4845 @LENGTH@ 64
------UPD SimpleType@@ForeignKey @TO@ String @AT@ 4845 @LENGTH@ 10
------UPD VariableDeclarationFragment@@foreignKey=new ForeignKey(rs.getString("FK_NAME")) @TO@ name=rs.getString("FK_NAME") @AT@ 4856 @LENGTH@ 52
---------UPD SimpleName@@foreignKey @TO@ name @AT@ 4856 @LENGTH@ 10
---------DEL ClassInstanceCreation@@ForeignKey[rs.getString("FK_NAME")] @AT@ 4869 @LENGTH@ 39
------------DEL New@@new @AT@ 4869 @LENGTH@ 3
------------DEL SimpleType@@ForeignKey @AT@ 4873 @LENGTH@ 10
---------MOV MethodInvocation@@rs.getString("FK_NAME") @TO@ VariableDeclarationFragment@@foreignKey=new ForeignKey(rs.getString("FK_NAME")) @AT@ 4884 @LENGTH@ 23
---INS VariableDeclarationStatement@@String key=name + "_" + foreignTableName; @TO@ Block@@WhileBody:{  String foreignTableName=rs.getString("PKTABLE_NAME");  ForeignKey foreignKey=new ForeignKey(rs.getString("FK_NAME"));  foreignKey.setForeignTableName(foreignTableName);  foreignKey.setOnUpdate(getCascadeAction(rs.getShort("UPDATE_RULE")));  foreignKey.setOnDelete(getCascadeAction(rs.getShort("DELETE_RULE")));  Reference reference=new Reference();  reference.setSequenceValue(rs.getShort("KEY_SEQ"));  reference.setLocalColumnName(rs.getString("FKCOLUMN_NAME"));  reference.setForeignColumnName(rs.getString("PKCOLUMN_NAME"));  if (foreignKeys.containsKey(foreignTableName)) {    foreignKeys.get(foreignTableName).addReference(reference);  } else {    foreignKey.addReference(reference);    foreignKeys.put(foreignTableName,foreignKey);  }} @AT@ 4888 @LENGTH@ 43
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key=name + "_" + foreignTableName; @AT@ 4888 @LENGTH@ 6
------INS VariableDeclarationFragment@@key=name + "_" + foreignTableName @TO@ VariableDeclarationStatement@@String key=name + "_" + foreignTableName; @AT@ 4895 @LENGTH@ 35
---------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=name + "_" + foreignTableName @AT@ 4895 @LENGTH@ 3
---------INS InfixExpression@@name + "_" + foreignTableName @TO@ VariableDeclarationFragment@@key=name + "_" + foreignTableName @AT@ 4901 @LENGTH@ 29
------------INS SimpleName@@name @TO@ InfixExpression@@name + "_" + foreignTableName @AT@ 4901 @LENGTH@ 4
------------INS Operator@@+ @TO@ InfixExpression@@name + "_" + foreignTableName @AT@ 4905 @LENGTH@ 1
------------INS StringLiteral@@"_" @TO@ InfixExpression@@name + "_" + foreignTableName @AT@ 4908 @LENGTH@ 3
------------INS SimpleName@@foreignTableName @TO@ InfixExpression@@name + "_" + foreignTableName @AT@ 4914 @LENGTH@ 16
---DEL ExpressionStatement@@MethodInvocation:foreignKey.setForeignTableName(foreignTableName) @AT@ 4914 @LENGTH@ 49
------DEL MethodInvocation@@foreignKey.setForeignTableName(foreignTableName) @AT@ 4914 @LENGTH@ 48
---------DEL SimpleName@@Name:foreignKey @AT@ 4914 @LENGTH@ 10
---------DEL SimpleName@@MethodName:setForeignTableName:[foreignTableName] @AT@ 4925 @LENGTH@ 37
------------DEL SimpleName@@foreignTableName @AT@ 4945 @LENGTH@ 16
---INS VariableDeclarationStatement@@ForeignKey foreignKey=new ForeignKey(name,foreignTableName); @TO@ Block@@WhileBody:{  String foreignTableName=rs.getString("PKTABLE_NAME");  ForeignKey foreignKey=new ForeignKey(rs.getString("FK_NAME"));  foreignKey.setForeignTableName(foreignTableName);  foreignKey.setOnUpdate(getCascadeAction(rs.getShort("UPDATE_RULE")));  foreignKey.setOnDelete(getCascadeAction(rs.getShort("DELETE_RULE")));  Reference reference=new Reference();  reference.setSequenceValue(rs.getShort("KEY_SEQ"));  reference.setLocalColumnName(rs.getString("FKCOLUMN_NAME"));  reference.setForeignColumnName(rs.getString("PKCOLUMN_NAME"));  if (foreignKeys.containsKey(foreignTableName)) {    foreignKeys.get(foreignTableName).addReference(reference);  } else {    foreignKey.addReference(reference);    foreignKeys.put(foreignTableName,foreignKey);  }} @AT@ 4941 @LENGTH@ 63
------INS SimpleType@@ForeignKey @TO@ VariableDeclarationStatement@@ForeignKey foreignKey=new ForeignKey(name,foreignTableName); @AT@ 4941 @LENGTH@ 10
------INS VariableDeclarationFragment@@foreignKey=new ForeignKey(name,foreignTableName) @TO@ VariableDeclarationStatement@@ForeignKey foreignKey=new ForeignKey(name,foreignTableName); @AT@ 4952 @LENGTH@ 51
---------INS SimpleName@@foreignKey @TO@ VariableDeclarationFragment@@foreignKey=new ForeignKey(name,foreignTableName) @AT@ 4952 @LENGTH@ 10
---------INS ClassInstanceCreation@@ForeignKey[name, foreignTableName] @TO@ VariableDeclarationFragment@@foreignKey=new ForeignKey(name,foreignTableName) @AT@ 4965 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@ForeignKey[name, foreignTableName] @AT@ 4965 @LENGTH@ 3
------------INS SimpleType@@ForeignKey @TO@ ClassInstanceCreation@@ForeignKey[name, foreignTableName] @AT@ 4969 @LENGTH@ 10
------------INS SimpleName@@name @TO@ ClassInstanceCreation@@ForeignKey[name, foreignTableName] @AT@ 4980 @LENGTH@ 4
------------INS SimpleName@@foreignTableName @TO@ ClassInstanceCreation@@ForeignKey[name, foreignTableName] @AT@ 4986 @LENGTH@ 16
---UPD IfStatement@@if (foreignKeys.containsKey(foreignTableName)) {  foreignKeys.get(foreignTableName).addReference(reference);} else {  foreignKey.addReference(reference);  foreignKeys.put(foreignTableName,foreignKey);} @TO@ if (foreignKeys.containsKey(key)) {  foreignKeys.get(key).addReference(reference);} else {  foreignKey.addReference(reference);  foreignKeys.put(key,foreignKey);} @AT@ 5349 @LENGTH@ 224
------UPD MethodInvocation@@foreignKeys.containsKey(foreignTableName) @TO@ foreignKeys.containsKey(key) @AT@ 5353 @LENGTH@ 41
---------UPD SimpleName@@MethodName:containsKey:[foreignTableName] @TO@ MethodName:containsKey:[key] @AT@ 5365 @LENGTH@ 29
------------UPD SimpleName@@foreignTableName @TO@ key @AT@ 5377 @LENGTH@ 16
------UPD Block@@ThenBody:{  foreignKeys.get(foreignTableName).addReference(reference);} @TO@ ThenBody:{  foreignKeys.get(key).addReference(reference);} @AT@ 5396 @LENGTH@ 71
---------UPD ExpressionStatement@@MethodInvocation:foreignKeys.get(foreignTableName).addReference(reference) @TO@ MethodInvocation:foreignKeys.get(key).addReference(reference) @AT@ 5403 @LENGTH@ 58
------------UPD MethodInvocation@@foreignKeys.get(foreignTableName).addReference(reference) @TO@ foreignKeys.get(key).addReference(reference) @AT@ 5403 @LENGTH@ 57
---------------UPD MethodInvocation@@MethodName:get:[foreignTableName] @TO@ MethodName:get:[key] @AT@ 5403 @LENGTH@ 33
------------------UPD SimpleName@@foreignTableName @TO@ key @AT@ 5419 @LENGTH@ 16
------UPD Block@@ElseBody:{  foreignKey.addReference(reference);  foreignKeys.put(foreignTableName,foreignKey);} @TO@ ElseBody:{  foreignKey.addReference(reference);  foreignKeys.put(key,foreignKey);} @AT@ 5473 @LENGTH@ 100
---------UPD ExpressionStatement@@MethodInvocation:foreignKeys.put(foreignTableName,foreignKey) @TO@ MethodInvocation:foreignKeys.put(key,foreignKey) @AT@ 5521 @LENGTH@ 46
------------UPD MethodInvocation@@foreignKeys.put(foreignTableName,foreignKey) @TO@ foreignKeys.put(key,foreignKey) @AT@ 5521 @LENGTH@ 45
---------------UPD SimpleName@@MethodName:put:[foreignTableName, foreignKey] @TO@ MethodName:put:[key, foreignKey] @AT@ 5533 @LENGTH@ 33
------------------UPD SimpleName@@foreignTableName @TO@ key @AT@ 5537 @LENGTH@ 16


INS FieldDeclaration@@String, [NOTIFY_EVENT="CamelNotifyEvent"] @TO@ TypeDeclaration@@[public]Exchange,  @AT@ 7466 @LENGTH@ 41
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [NOTIFY_EVENT="CamelNotifyEvent"] @AT@ 7466 @LENGTH@ 6
---INS VariableDeclarationFragment@@NOTIFY_EVENT="CamelNotifyEvent" @TO@ FieldDeclaration@@String, [NOTIFY_EVENT="CamelNotifyEvent"] @AT@ 7473 @LENGTH@ 33
------INS SimpleName@@NOTIFY_EVENT @TO@ VariableDeclarationFragment@@NOTIFY_EVENT="CamelNotifyEvent" @AT@ 7473 @LENGTH@ 12
------INS StringLiteral@@"CamelNotifyEvent" @TO@ VariableDeclarationFragment@@NOTIFY_EVENT="CamelNotifyEvent" @AT@ 7488 @LENGTH@ 18


UPD VariableDeclarationStatement@@@SuppressWarnings("rawtypes") ResponseEntity<Map> response=restOperations.postForEntity(RETWEET_URL,Collections.emptyMap(),Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))); @TO@ @SuppressWarnings("rawtypes") ResponseEntity<Map> response=restOperations.postForEntity(RETWEET_URL,"",Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))); @AT@ 4321 @LENGTH@ 206
---UPD VariableDeclarationFragment@@response=restOperations.postForEntity(RETWEET_URL,Collections.emptyMap(),Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))) @TO@ response=restOperations.postForEntity(RETWEET_URL,"",Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))) @AT@ 4373 @LENGTH@ 153
------UPD MethodInvocation@@restOperations.postForEntity(RETWEET_URL,Collections.emptyMap(),Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))) @TO@ restOperations.postForEntity(RETWEET_URL,"",Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))) @AT@ 4384 @LENGTH@ 142
---------UPD SimpleName@@MethodName:postForEntity:[RETWEET_URL, Collections.emptyMap(), Map.class, Collections.singletonMap("tweet_id",Long.toString(tweetId))] @TO@ MethodName:postForEntity:[RETWEET_URL, "", Map.class, Collections.singletonMap("tweet_id",Long.toString(tweetId))] @AT@ 4399 @LENGTH@ 127
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 4426 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 4426 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 4438 @LENGTH@ 10
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:postForEntity:[RETWEET_URL, Collections.emptyMap(), Map.class, Collections.singletonMap("tweet_id",Long.toString(tweetId))] @AT@ 4426 @LENGTH@ 2


UPD IfStatement@@if (getLoadBalancer().getProcessors().isEmpty() && started) {  removeTrigger(getTrigger());  started=false;} @TO@ if (getLoadBalancer().getProcessors().isEmpty() && started) {  removeTrigger(getTrigger());  System.out.println("Remove the trigger");  started=false;} @AT@ 6946 @LENGTH@ 141
---UPD Block@@ThenBody:{  removeTrigger(getTrigger());  started=false;} @TO@ ThenBody:{  removeTrigger(getTrigger());  System.out.println("Remove the trigger");  started=false;} @AT@ 7006 @LENGTH@ 81
------INS ExpressionStatement@@MethodInvocation:System.out.println("Remove the trigger") @TO@ Block@@ThenBody:{  removeTrigger(getTrigger());  started=false;} @AT@ 7061 @LENGTH@ 41
---------INS MethodInvocation@@System.out.println("Remove the trigger") @TO@ ExpressionStatement@@MethodInvocation:System.out.println("Remove the trigger") @AT@ 7061 @LENGTH@ 40
------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("Remove the trigger") @AT@ 7061 @LENGTH@ 10
------------INS SimpleName@@MethodName:println:["Remove the trigger"] @TO@ MethodInvocation@@System.out.println("Remove the trigger") @AT@ 7072 @LENGTH@ 29
---------------INS StringLiteral@@"Remove the trigger" @TO@ SimpleName@@MethodName:println:["Remove the trigger"] @AT@ 7080 @LENGTH@ 20


UPD TryStatement@@try {  exchange.getUnitOfWork().done(exchange);} catch (Throwable e) {  LOG.warn("Exception occurred during done UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.");} @TO@ try {  if (exchange.getUnitOfWork() != null) {    exchange.getUnitOfWork().done(exchange);  }} catch (Throwable e) {  LOG.warn("Exception occurred during done UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.",e);} @AT@ 3685 @LENGTH@ 251
---INS IfStatement@@if (exchange.getUnitOfWork() != null) {  exchange.getUnitOfWork().done(exchange);} @TO@ TryStatement@@try {  exchange.getUnitOfWork().done(exchange);} catch (Throwable e) {  LOG.warn("Exception occurred during done UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.");} @AT@ 3703 @LENGTH@ 110
------INS InfixExpression@@exchange.getUnitOfWork() != null @TO@ IfStatement@@if (exchange.getUnitOfWork() != null) {  exchange.getUnitOfWork().done(exchange);} @AT@ 3707 @LENGTH@ 32
---------INS MethodInvocation@@exchange.getUnitOfWork() @TO@ InfixExpression@@exchange.getUnitOfWork() != null @AT@ 3707 @LENGTH@ 24
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getUnitOfWork() @AT@ 3707 @LENGTH@ 8
------------INS SimpleName@@MethodName:getUnitOfWork:[] @TO@ MethodInvocation@@exchange.getUnitOfWork() @AT@ 3716 @LENGTH@ 15
---------INS Operator@@!= @TO@ InfixExpression@@exchange.getUnitOfWork() != null @AT@ 3731 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getUnitOfWork() != null @AT@ 3735 @LENGTH@ 4
------INS Block@@ThenBody:{  exchange.getUnitOfWork().done(exchange);} @TO@ IfStatement@@if (exchange.getUnitOfWork() != null) {  exchange.getUnitOfWork().done(exchange);} @AT@ 3741 @LENGTH@ 72
---------MOV ExpressionStatement@@MethodInvocation:exchange.getUnitOfWork().done(exchange) @TO@ Block@@ThenBody:{  exchange.getUnitOfWork().done(exchange);} @AT@ 3703 @LENGTH@ 40
---UPD CatchClause@@catch (Throwable e) {  LOG.warn("Exception occurred during done UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.");} @TO@ catch (Throwable e) {  LOG.warn("Exception occurred during done UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.",e);} @AT@ 3754 @LENGTH@ 182
------UPD ExpressionStatement@@MethodInvocation:LOG.warn("Exception occurred during done UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.") @TO@ MethodInvocation:LOG.warn("Exception occurred during done UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.",e) @AT@ 3788 @LENGTH@ 138
---------UPD MethodInvocation@@LOG.warn("Exception occurred during done UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.") @TO@ LOG.warn("Exception occurred during done UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.",e) @AT@ 3788 @LENGTH@ 137
------------UPD SimpleName@@MethodName:warn:["Exception occurred during done UnitOfWork for Exchange: " + exchange + ". This exception will be ignored."] @TO@ MethodName:warn:["Exception occurred during done UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.", e] @AT@ 3792 @LENGTH@ 133
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:warn:["Exception occurred during done UnitOfWork for Exchange: " + exchange + ". This exception will be ignored."] @AT@ 3996 @LENGTH@ 1


UPD FieldDeclaration@@protected, CollectionFilesystemListener, [listener=new CollectionFilesystemListener(true)] @TO@ protected, CollectionFilesystemListener, [listener] @AT@ 1378 @LENGTH@ 89
---UPD VariableDeclarationFragment@@listener=new CollectionFilesystemListener(true) @TO@ listener @AT@ 1417 @LENGTH@ 49
------DEL ClassInstanceCreation@@CollectionFilesystemListener[true] @AT@ 1428 @LENGTH@ 38
---------DEL New@@new @AT@ 1428 @LENGTH@ 3
---------DEL SimpleType@@CollectionFilesystemListener @AT@ 1432 @LENGTH@ 28
---------DEL BooleanLiteral@@true @AT@ 1461 @LENGTH@ 4


UPD VariableDeclarationStatement@@NodeData answer=nodeMap.get(key); @TO@ NodeData answer=null; @AT@ 2729 @LENGTH@ 35
---UPD VariableDeclarationFragment@@answer=nodeMap.get(key) @TO@ answer=null @AT@ 2738 @LENGTH@ 25
------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@answer=nodeMap.get(key) @AT@ 2747 @LENGTH@ 4


UPD IfStatement@@if (systemProperties != null) {  streamWriter.writeStartElement(Element.SYSTEM_PROPERTIES.getLocalName());  systemProperties.writeContent(streamWriter);  streamWriter.writeEndElement();} @TO@ if (systemProperties != null && systemProperties.size() > 0) {  streamWriter.writeStartElement(Element.SYSTEM_PROPERTIES.getLocalName());  systemProperties.writeContent(streamWriter);} @AT@ 8509 @LENGTH@ 228
---INS InfixExpression@@systemProperties != null && systemProperties.size() > 0 @TO@ IfStatement@@if (systemProperties != null) {  streamWriter.writeStartElement(Element.SYSTEM_PROPERTIES.getLocalName());  systemProperties.writeContent(streamWriter);  streamWriter.writeEndElement();} @AT@ 8513 @LENGTH@ 55
------INS InfixExpression@@systemProperties != null @TO@ InfixExpression@@systemProperties != null && systemProperties.size() > 0 @AT@ 8513 @LENGTH@ 24
---------MOV SimpleName@@systemProperties @TO@ InfixExpression@@systemProperties != null @AT@ 8513 @LENGTH@ 16
---------MOV Operator@@!= @TO@ InfixExpression@@systemProperties != null @AT@ 8529 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@systemProperties != null @AT@ 8533 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@systemProperties != null && systemProperties.size() > 0 @AT@ 8537 @LENGTH@ 2
------INS InfixExpression@@systemProperties.size() > 0 @TO@ InfixExpression@@systemProperties != null && systemProperties.size() > 0 @AT@ 8541 @LENGTH@ 27
---------INS MethodInvocation@@systemProperties.size() @TO@ InfixExpression@@systemProperties.size() > 0 @AT@ 8541 @LENGTH@ 23
------------INS SimpleName@@Name:systemProperties @TO@ MethodInvocation@@systemProperties.size() @AT@ 8541 @LENGTH@ 16
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@systemProperties.size() @AT@ 8558 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@systemProperties.size() > 0 @AT@ 8564 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@systemProperties.size() > 0 @AT@ 8567 @LENGTH@ 1
---DEL InfixExpression@@systemProperties != null @AT@ 8513 @LENGTH@ 24
---UPD Block@@ThenBody:{  streamWriter.writeStartElement(Element.SYSTEM_PROPERTIES.getLocalName());  systemProperties.writeContent(streamWriter);  streamWriter.writeEndElement();} @TO@ ThenBody:{  streamWriter.writeStartElement(Element.SYSTEM_PROPERTIES.getLocalName());  systemProperties.writeContent(streamWriter);} @AT@ 8539 @LENGTH@ 198
------DEL ExpressionStatement@@MethodInvocation:streamWriter.writeEndElement() @AT@ 8696 @LENGTH@ 31
---------DEL MethodInvocation@@streamWriter.writeEndElement() @AT@ 8696 @LENGTH@ 30
------------DEL SimpleName@@Name:streamWriter @AT@ 8696 @LENGTH@ 12
------------DEL SimpleName@@MethodName:writeEndElement:[] @AT@ 8709 @LENGTH@ 17


DEL ExpressionStatement@@MethodInvocation:assertLoadClass(moduleId,EchoTargetService.class.getName()) @AT@ 7880 @LENGTH@ 61
---DEL MethodInvocation@@assertLoadClass(moduleId,EchoTargetService.class.getName()) @AT@ 7880 @LENGTH@ 60
------DEL SimpleName@@MethodName:assertLoadClass:[moduleId, EchoTargetService.class.getName()] @AT@ 7880 @LENGTH@ 60
---------DEL SimpleName@@moduleId @AT@ 7896 @LENGTH@ 8
---------DEL MethodInvocation@@EchoTargetService.class.getName() @AT@ 7906 @LENGTH@ 33
------------DEL TypeLiteral@@EchoTargetService.class @AT@ 7906 @LENGTH@ 23
------------DEL SimpleName@@MethodName:getName:[] @AT@ 7930 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testNonWellFormedXml, Exception,  @TO@ TypeDeclaration@@[public]ValidatingDomProcessorTest, ValidatingProcessorTest @AT@ 1320 @LENGTH@ 712
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNonWellFormedXml, Exception,  @AT@ 1320 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNonWellFormedXml, Exception,  @AT@ 1327 @LENGTH@ 4
---INS SimpleName@@MethodName:testNonWellFormedXml @TO@ MethodDeclaration@@public, void, MethodName:testNonWellFormedXml, Exception,  @AT@ 1332 @LENGTH@ 20
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNonWellFormedXml, Exception,  @AT@ 1362 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:invalid"); @TO@ MethodDeclaration@@public, void, MethodName:testNonWellFormedXml, Exception,  @AT@ 1382 @LENGTH@ 52
------INS SimpleType@@MockEndpoint @TO@ VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:invalid"); @AT@ 1382 @LENGTH@ 12
------INS VariableDeclarationFragment@@mock=getMockEndpoint("mock:invalid") @TO@ VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:invalid"); @AT@ 1395 @LENGTH@ 38
---------INS SimpleName@@mock @TO@ VariableDeclarationFragment@@mock=getMockEndpoint("mock:invalid") @AT@ 1395 @LENGTH@ 4
---------INS MethodInvocation@@getMockEndpoint("mock:invalid") @TO@ VariableDeclarationFragment@@mock=getMockEndpoint("mock:invalid") @AT@ 1402 @LENGTH@ 31
------------INS SimpleName@@MethodName:getMockEndpoint:["mock:invalid"] @TO@ MethodInvocation@@getMockEndpoint("mock:invalid") @AT@ 1402 @LENGTH@ 31
---------------INS StringLiteral@@"mock:invalid" @TO@ SimpleName@@MethodName:getMockEndpoint:["mock:invalid"] @AT@ 1418 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(1) @TO@ MethodDeclaration@@public, void, MethodName:testNonWellFormedXml, Exception,  @AT@ 1443 @LENGTH@ 29
------INS MethodInvocation@@mock.expectedMessageCount(1) @TO@ ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(1) @AT@ 1443 @LENGTH@ 28
---------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.expectedMessageCount(1) @AT@ 1443 @LENGTH@ 4
---------INS SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodInvocation@@mock.expectedMessageCount(1) @AT@ 1448 @LENGTH@ 23
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedMessageCount:[1] @AT@ 1469 @LENGTH@ 1
---INS VariableDeclarationStatement@@String xml="<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"; @TO@ MethodDeclaration@@public, void, MethodName:testNonWellFormedXml, Exception,  @AT@ 1482 @LENGTH@ 192
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String xml="<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"; @AT@ 1482 @LENGTH@ 6
------INS VariableDeclarationFragment@@xml="<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>" @TO@ VariableDeclarationStatement@@String xml="<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"; @AT@ 1489 @LENGTH@ 184
---------INS SimpleName@@xml @TO@ VariableDeclarationFragment@@xml="<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>" @AT@ 1489 @LENGTH@ 3
---------INS InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>" @TO@ VariableDeclarationFragment@@xml="<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>" @AT@ 1495 @LENGTH@ 178
------------INS StringLiteral@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>" @AT@ 1495 @LENGTH@ 49
------------INS Operator@@+ @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>" @AT@ 1544 @LENGTH@ 1
------------INS StringLiteral@@"user xmlns=\"http://foo.com/bar\">" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>" @AT@ 1559 @LENGTH@ 36
------------INS StringLiteral@@"  <id>1</id>" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>" @AT@ 1610 @LENGTH@ 14
------------INS StringLiteral@@"  <username>davsclaus</username>" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>" @AT@ 1639 @LENGTH@ 34
---INS TryStatement@@try {  template.sendBody("direct:start",xml);  fail("Should have thrown a RuntimeCamelException");} catch (CamelExecutionException e) {  assertIsInstanceOf(NoXmlBodyValidationException.class,e.getCause());} @TO@ MethodDeclaration@@public, void, MethodName:testNonWellFormedXml, Exception,  @AT@ 1684 @LENGTH@ 301
------INS ExpressionStatement@@MethodInvocation:template.sendBody("direct:start",xml) @TO@ TryStatement@@try {  template.sendBody("direct:start",xml);  fail("Should have thrown a RuntimeCamelException");} catch (CamelExecutionException e) {  assertIsInstanceOf(NoXmlBodyValidationException.class,e.getCause());} @AT@ 1702 @LENGTH@ 39
---------INS MethodInvocation@@template.sendBody("direct:start",xml) @TO@ ExpressionStatement@@MethodInvocation:template.sendBody("direct:start",xml) @AT@ 1702 @LENGTH@ 38
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:start",xml) @AT@ 1702 @LENGTH@ 8
------------INS SimpleName@@MethodName:sendBody:["direct:start", xml] @TO@ MethodInvocation@@template.sendBody("direct:start",xml) @AT@ 1711 @LENGTH@ 29
---------------INS StringLiteral@@"direct:start" @TO@ SimpleName@@MethodName:sendBody:["direct:start", xml] @AT@ 1720 @LENGTH@ 14
---------------INS SimpleName@@xml @TO@ SimpleName@@MethodName:sendBody:["direct:start", xml] @AT@ 1736 @LENGTH@ 3
------INS ExpressionStatement@@MethodInvocation:fail("Should have thrown a RuntimeCamelException") @TO@ TryStatement@@try {  template.sendBody("direct:start",xml);  fail("Should have thrown a RuntimeCamelException");} catch (CamelExecutionException e) {  assertIsInstanceOf(NoXmlBodyValidationException.class,e.getCause());} @AT@ 1754 @LENGTH@ 51
---------INS MethodInvocation@@fail("Should have thrown a RuntimeCamelException") @TO@ ExpressionStatement@@MethodInvocation:fail("Should have thrown a RuntimeCamelException") @AT@ 1754 @LENGTH@ 50
------------INS SimpleName@@MethodName:fail:["Should have thrown a RuntimeCamelException"] @TO@ MethodInvocation@@fail("Should have thrown a RuntimeCamelException") @AT@ 1754 @LENGTH@ 50
---------------INS StringLiteral@@"Should have thrown a RuntimeCamelException" @TO@ SimpleName@@MethodName:fail:["Should have thrown a RuntimeCamelException"] @AT@ 1759 @LENGTH@ 44
------INS CatchClause@@catch (CamelExecutionException e) {  assertIsInstanceOf(NoXmlBodyValidationException.class,e.getCause());} @TO@ TryStatement@@try {  template.sendBody("direct:start",xml);  fail("Should have thrown a RuntimeCamelException");} catch (CamelExecutionException e) {  assertIsInstanceOf(NoXmlBodyValidationException.class,e.getCause());} @AT@ 1816 @LENGTH@ 169
---------INS SingleVariableDeclaration@@CamelExecutionException e @TO@ CatchClause@@catch (CamelExecutionException e) {  assertIsInstanceOf(NoXmlBodyValidationException.class,e.getCause());} @AT@ 1823 @LENGTH@ 25
------------INS SimpleType@@CamelExecutionException @TO@ SingleVariableDeclaration@@CamelExecutionException e @AT@ 1823 @LENGTH@ 23
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@CamelExecutionException e @AT@ 1847 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:assertIsInstanceOf(NoXmlBodyValidationException.class,e.getCause()) @TO@ CatchClause@@catch (CamelExecutionException e) {  assertIsInstanceOf(NoXmlBodyValidationException.class,e.getCause());} @AT@ 1906 @LENGTH@ 69
------------INS MethodInvocation@@assertIsInstanceOf(NoXmlBodyValidationException.class,e.getCause()) @TO@ ExpressionStatement@@MethodInvocation:assertIsInstanceOf(NoXmlBodyValidationException.class,e.getCause()) @AT@ 1906 @LENGTH@ 68
---------------INS SimpleName@@MethodName:assertIsInstanceOf:[NoXmlBodyValidationException.class, e.getCause()] @TO@ MethodInvocation@@assertIsInstanceOf(NoXmlBodyValidationException.class,e.getCause()) @AT@ 1906 @LENGTH@ 68
------------------INS TypeLiteral@@NoXmlBodyValidationException.class @TO@ SimpleName@@MethodName:assertIsInstanceOf:[NoXmlBodyValidationException.class, e.getCause()] @AT@ 1925 @LENGTH@ 34
------------------INS MethodInvocation@@e.getCause() @TO@ SimpleName@@MethodName:assertIsInstanceOf:[NoXmlBodyValidationException.class, e.getCause()] @AT@ 1961 @LENGTH@ 12
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 1961 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 1963 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testNonWellFormedXml, Exception,  @AT@ 1995 @LENGTH@ 31
------INS MethodInvocation@@MethodName:assertMockEndpointsSatisfied:[] @TO@ ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @AT@ 1995 @LENGTH@ 30


UPD TryStatement@@try {  this.socket.connect(new InetSocketAddress(addr,port));  this.input=new BufferedInputStream(socket.getInputStream());  this.output=new BufferedOutputStream(socket.getOutputStream());  this.handler=handler;  System.err.printf("%s connected to port %d\n",processName,socket.getLocalPort());  StringBuilder sb=new StringBuilder(256);  sb.append("STARTED");  sb.append('\0');  sb.append(processName);  sb.append('\n');synchronized (output) {    StreamUtils.writeString(output,sb.toString());    output.flush();  }} catch (IOException e) {  closeSocket();  throw new RuntimeException(e);} @TO@ try {  this.socket=new Socket(addr,port);  this.input=new BufferedInputStream(socket.getInputStream());  this.output=new BufferedOutputStream(socket.getOutputStream());  this.handler=handler;  System.err.printf("%s connected to port %d\n",processName,socket.getLocalPort());  StringBuilder sb=new StringBuilder(256);  sb.append("STARTED");  sb.append('\0');  sb.append(processName);  sb.append('\n');synchronized (output) {    StreamUtils.writeString(output,sb.toString());    output.flush();  }} catch (IOException e) {  if (this.socket != null) {    closeSocket();  }  throw new RuntimeException(e);} @AT@ 2583 @LENGTH@ 940
---UPD ExpressionStatement@@MethodInvocation:this.socket.connect(new InetSocketAddress(addr,port)) @TO@ Assignment:this.socket=new Socket(addr,port) @AT@ 2601 @LENGTH@ 55
------INS Assignment@@this.socket=new Socket(addr,port) @TO@ ExpressionStatement@@MethodInvocation:this.socket.connect(new InetSocketAddress(addr,port)) @AT@ 2530 @LENGTH@ 36
---------INS FieldAccess@@this.socket @TO@ Assignment@@this.socket=new Socket(addr,port) @AT@ 2530 @LENGTH@ 11
------------MOV ThisExpression@@this @TO@ FieldAccess@@this.socket @AT@ 2601 @LENGTH@ 4
------------MOV SimpleName@@socket @TO@ FieldAccess@@this.socket @AT@ 2606 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@this.socket=new Socket(addr,port) @AT@ 2541 @LENGTH@ 1
---------INS ClassInstanceCreation@@Socket[addr, port] @TO@ Assignment@@this.socket=new Socket(addr,port) @AT@ 2544 @LENGTH@ 22
------------MOV New@@new @TO@ ClassInstanceCreation@@Socket[addr, port] @AT@ 2621 @LENGTH@ 3
------------MOV SimpleType@@InetSocketAddress @TO@ ClassInstanceCreation@@Socket[addr, port] @AT@ 2625 @LENGTH@ 17
------------MOV SimpleName@@addr @TO@ ClassInstanceCreation@@Socket[addr, port] @AT@ 2643 @LENGTH@ 4
------------MOV SimpleName@@port @TO@ ClassInstanceCreation@@Socket[addr, port] @AT@ 2649 @LENGTH@ 4
------DEL MethodInvocation@@this.socket.connect(new InetSocketAddress(addr,port)) @AT@ 2601 @LENGTH@ 54
---------DEL FieldAccess@@this.socket @AT@ 2601 @LENGTH@ 11
---------DEL SimpleName@@MethodName:connect:[new InetSocketAddress(addr,port)] @AT@ 2613 @LENGTH@ 42
------------DEL ClassInstanceCreation@@InetSocketAddress[addr, port] @AT@ 2621 @LENGTH@ 33
---UPD CatchClause@@catch (IOException e) {  closeSocket();  throw new RuntimeException(e);} @TO@ catch (IOException e) {  if (this.socket != null) {    closeSocket();  }  throw new RuntimeException(e);} @AT@ 3420 @LENGTH@ 103
------INS IfStatement@@if (this.socket != null) {  closeSocket();} @TO@ CatchClause@@catch (IOException e) {  closeSocket();  throw new RuntimeException(e);} @AT@ 3367 @LENGTH@ 71
---------INS InfixExpression@@this.socket != null @TO@ IfStatement@@if (this.socket != null) {  closeSocket();} @AT@ 3371 @LENGTH@ 19
------------INS FieldAccess@@this.socket @TO@ InfixExpression@@this.socket != null @AT@ 3371 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.socket @AT@ 3371 @LENGTH@ 4
---------------INS SimpleName@@socket @TO@ FieldAccess@@this.socket @AT@ 3376 @LENGTH@ 6
------------INS Operator@@!= @TO@ InfixExpression@@this.socket != null @AT@ 3382 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@this.socket != null @AT@ 3386 @LENGTH@ 4
---------INS Block@@ThenBody:{  closeSocket();} @TO@ IfStatement@@if (this.socket != null) {  closeSocket();} @AT@ 3392 @LENGTH@ 46
------------INS ExpressionStatement@@MethodInvocation:closeSocket() @TO@ Block@@ThenBody:{  closeSocket();} @AT@ 3410 @LENGTH@ 14
---------------MOV MethodInvocation@@MethodName:closeSocket:[] @TO@ ExpressionStatement@@MethodInvocation:closeSocket() @AT@ 3456 @LENGTH@ 13
------DEL ExpressionStatement@@MethodInvocation:closeSocket() @AT@ 3456 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:answer.setFileName(file.getFilename()) @TO@ MethodInvocation:answer.setFileName(answer.getRelativeFilePath()) @AT@ 4298 @LENGTH@ 39
---UPD MethodInvocation@@answer.setFileName(file.getFilename()) @TO@ answer.setFileName(answer.getRelativeFilePath()) @AT@ 4298 @LENGTH@ 38
------UPD SimpleName@@MethodName:setFileName:[file.getFilename()] @TO@ MethodName:setFileName:[answer.getRelativeFilePath()] @AT@ 4305 @LENGTH@ 31
---------UPD MethodInvocation@@file.getFilename() @TO@ answer.getRelativeFilePath() @AT@ 4317 @LENGTH@ 18
------------UPD SimpleName@@Name:file @TO@ Name:answer @AT@ 4317 @LENGTH@ 4
------------UPD SimpleName@@MethodName:getFilename:[] @TO@ MethodName:getRelativeFilePath:[] @AT@ 4322 @LENGTH@ 13


UPD IfStatement@@if (wait == WaitForTaskToComplete.Always || (wait == WaitForTaskToComplete.IfReplyExpected && ExchangeHelper.isOutCapable(exchange))) {  final CountDownLatch latch=new CountDownLatch(1);  copy.addOnCompletion(new SynchronizationAdapter(){    @Override public void onDone(    Exchange response){      if (latch.getCount() == 0) {        if (log.isTraceEnabled()) {          log.trace(this + ". Timeout occurred so response will be ignored: " + (response.hasOut() ? response.getOut() : response.getIn()));        }        return;      } else {        if (log.isTraceEnabled()) {          log.trace(this + " with response: " + (response.hasOut() ? response.getOut() : response.getIn()));        }        try {          ExchangeHelper.copyResults(exchange,response);        }  finally {          latch.countDown();        }      }    }    @Override public boolean allowHandover(){      return false;    }    @Override public String toString(){      return "onDone at [" + endpoint.getEndpointUri() + "]";    }  });  queue.add(copy);  if (timeout > 0) {    if (log.isTraceEnabled()) {      log.trace("Waiting for task to complete using timeout (ms): " + timeout + " at ["+ endpoint.getEndpointUri()+ "]");    }    boolean done=false;    try {      done=latch.await(timeout,TimeUnit.MILLISECONDS);    } catch (    InterruptedException e) {    }    if (!done) {      exchange.setException(new ExchangeTimedOutException(exchange,timeout));      latch.countDown();    }  } else {    if (log.isTraceEnabled()) {      log.trace("Waiting for task to complete (blocking) at [" + endpoint.getEndpointUri() + "]");    }    try {      latch.await();    } catch (    InterruptedException e) {    }  }} else {  queue.add(copy);} @TO@ if (wait == WaitForTaskToComplete.Always || (wait == WaitForTaskToComplete.IfReplyExpected && ExchangeHelper.isOutCapable(exchange))) {  final CountDownLatch latch=new CountDownLatch(1);  copy.addOnCompletion(new SynchronizationAdapter(){    @Override public void onDone(    Exchange response){      if (latch.getCount() == 0) {        if (log.isTraceEnabled()) {          log.trace(this + ". Timeout occurred so response will be ignored: " + (response.hasOut() ? response.getOut() : response.getIn()));        }        return;      } else {        if (log.isTraceEnabled()) {          log.trace(this + " with response: " + (response.hasOut() ? response.getOut() : response.getIn()));        }        try {          ExchangeHelper.copyResults(exchange,response);        }  finally {          latch.countDown();        }      }    }    @Override public boolean allowHandover(){      return false;    }    @Override public String toString(){      return "onDone at [" + endpoint.getEndpointUri() + "]";    }  });  if (log.isTraceEnabled()) {    log.trace("Adding Exchange to queue: " + copy);  }  queue.add(copy);  if (timeout > 0) {    if (log.isTraceEnabled()) {      log.trace("Waiting for task to complete using timeout (ms): " + timeout + " at ["+ endpoint.getEndpointUri()+ "]");    }    boolean done=false;    try {      done=latch.await(timeout,TimeUnit.MILLISECONDS);    } catch (    InterruptedException e) {    }    if (!done) {      exchange.setException(new ExchangeTimedOutException(exchange,timeout));      latch.countDown();    }  } else {    if (log.isTraceEnabled()) {      log.trace("Waiting for task to complete (blocking) at [" + endpoint.getEndpointUri() + "]");    }    try {      latch.await();    } catch (    InterruptedException e) {    }  }} else {  if (log.isTraceEnabled()) {    log.trace("Adding Exchange to queue: " + copy);  }  queue.add(copy);} @AT@ 2466 @LENGTH@ 3368
---UPD Block@@ThenBody:{  final CountDownLatch latch=new CountDownLatch(1);  copy.addOnCompletion(new SynchronizationAdapter(){    @Override public void onDone(    Exchange response){      if (latch.getCount() == 0) {        if (log.isTraceEnabled()) {          log.trace(this + ". Timeout occurred so response will be ignored: " + (response.hasOut() ? response.getOut() : response.getIn()));        }        return;      } else {        if (log.isTraceEnabled()) {          log.trace(this + " with response: " + (response.hasOut() ? response.getOut() : response.getIn()));        }        try {          ExchangeHelper.copyResults(exchange,response);        }  finally {          latch.countDown();        }      }    }    @Override public boolean allowHandover(){      return false;    }    @Override public String toString(){      return "onDone at [" + endpoint.getEndpointUri() + "]";    }  });  queue.add(copy);  if (timeout > 0) {    if (log.isTraceEnabled()) {      log.trace("Waiting for task to complete using timeout (ms): " + timeout + " at ["+ endpoint.getEndpointUri()+ "]");    }    boolean done=false;    try {      done=latch.await(timeout,TimeUnit.MILLISECONDS);    } catch (    InterruptedException e) {    }    if (!done) {      exchange.setException(new ExchangeTimedOutException(exchange,timeout));      latch.countDown();    }  } else {    if (log.isTraceEnabled()) {      log.trace("Waiting for task to complete (blocking) at [" + endpoint.getEndpointUri() + "]");    }    try {      latch.await();    } catch (    InterruptedException e) {    }  }} @TO@ ThenBody:{  final CountDownLatch latch=new CountDownLatch(1);  copy.addOnCompletion(new SynchronizationAdapter(){    @Override public void onDone(    Exchange response){      if (latch.getCount() == 0) {        if (log.isTraceEnabled()) {          log.trace(this + ". Timeout occurred so response will be ignored: " + (response.hasOut() ? response.getOut() : response.getIn()));        }        return;      } else {        if (log.isTraceEnabled()) {          log.trace(this + " with response: " + (response.hasOut() ? response.getOut() : response.getIn()));        }        try {          ExchangeHelper.copyResults(exchange,response);        }  finally {          latch.countDown();        }      }    }    @Override public boolean allowHandover(){      return false;    }    @Override public String toString(){      return "onDone at [" + endpoint.getEndpointUri() + "]";    }  });  if (log.isTraceEnabled()) {    log.trace("Adding Exchange to queue: " + copy);  }  queue.add(copy);  if (timeout > 0) {    if (log.isTraceEnabled()) {      log.trace("Waiting for task to complete using timeout (ms): " + timeout + " at ["+ endpoint.getEndpointUri()+ "]");    }    boolean done=false;    try {      done=latch.await(timeout,TimeUnit.MILLISECONDS);    } catch (    InterruptedException e) {    }    if (!done) {      exchange.setException(new ExchangeTimedOutException(exchange,timeout));      latch.countDown();    }  } else {    if (log.isTraceEnabled()) {      log.trace("Waiting for task to complete (blocking) at [" + endpoint.getEndpointUri() + "]");    }    try {      latch.await();    } catch (    InterruptedException e) {    }  }} @AT@ 2612 @LENGTH@ 3102
------INS IfStatement@@if (log.isTraceEnabled()) {  log.trace("Adding Exchange to queue: " + copy);} @TO@ Block@@ThenBody:{  final CountDownLatch latch=new CountDownLatch(1);  copy.addOnCompletion(new SynchronizationAdapter(){    @Override public void onDone(    Exchange response){      if (latch.getCount() == 0) {        if (log.isTraceEnabled()) {          log.trace(this + ". Timeout occurred so response will be ignored: " + (response.hasOut() ? response.getOut() : response.getIn()));        }        return;      } else {        if (log.isTraceEnabled()) {          log.trace(this + " with response: " + (response.hasOut() ? response.getOut() : response.getIn()));        }        try {          ExchangeHelper.copyResults(exchange,response);        }  finally {          latch.countDown();        }      }    }    @Override public boolean allowHandover(){      return false;    }    @Override public String toString(){      return "onDone at [" + endpoint.getEndpointUri() + "]";    }  });  queue.add(copy);  if (timeout > 0) {    if (log.isTraceEnabled()) {      log.trace("Waiting for task to complete using timeout (ms): " + timeout + " at ["+ endpoint.getEndpointUri()+ "]");    }    boolean done=false;    try {      done=latch.await(timeout,TimeUnit.MILLISECONDS);    } catch (    InterruptedException e) {    }    if (!done) {      exchange.setException(new ExchangeTimedOutException(exchange,timeout));      latch.countDown();    }  } else {    if (log.isTraceEnabled()) {      log.trace("Waiting for task to complete (blocking) at [" + endpoint.getEndpointUri() + "]");    }    try {      latch.await();    } catch (    InterruptedException e) {    }  }} @AT@ 4496 @LENGTH@ 105
---------INS MethodInvocation@@log.isTraceEnabled() @TO@ IfStatement@@if (log.isTraceEnabled()) {  log.trace("Adding Exchange to queue: " + copy);} @AT@ 4500 @LENGTH@ 20
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.isTraceEnabled() @AT@ 4500 @LENGTH@ 3
------------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@log.isTraceEnabled() @AT@ 4504 @LENGTH@ 16
---------INS Block@@ThenBody:{  log.trace("Adding Exchange to queue: " + copy);} @TO@ IfStatement@@if (log.isTraceEnabled()) {  log.trace("Adding Exchange to queue: " + copy);} @AT@ 4522 @LENGTH@ 79
------------INS ExpressionStatement@@MethodInvocation:log.trace("Adding Exchange to queue: " + copy) @TO@ Block@@ThenBody:{  log.trace("Adding Exchange to queue: " + copy);} @AT@ 4540 @LENGTH@ 47
---------------INS MethodInvocation@@log.trace("Adding Exchange to queue: " + copy) @TO@ ExpressionStatement@@MethodInvocation:log.trace("Adding Exchange to queue: " + copy) @AT@ 4540 @LENGTH@ 46
------------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.trace("Adding Exchange to queue: " + copy) @AT@ 4540 @LENGTH@ 3
------------------INS SimpleName@@MethodName:trace:["Adding Exchange to queue: " + copy] @TO@ MethodInvocation@@log.trace("Adding Exchange to queue: " + copy) @AT@ 4544 @LENGTH@ 42
---------------------INS InfixExpression@@"Adding Exchange to queue: " + copy @TO@ SimpleName@@MethodName:trace:["Adding Exchange to queue: " + copy] @AT@ 4550 @LENGTH@ 35
------------------------INS StringLiteral@@"Adding Exchange to queue: " @TO@ InfixExpression@@"Adding Exchange to queue: " + copy @AT@ 4550 @LENGTH@ 28
------------------------INS Operator@@+ @TO@ InfixExpression@@"Adding Exchange to queue: " + copy @AT@ 4578 @LENGTH@ 1
------------------------INS SimpleName@@copy @TO@ InfixExpression@@"Adding Exchange to queue: " + copy @AT@ 4581 @LENGTH@ 4
---UPD Block@@ElseBody:{  queue.add(copy);} @TO@ ElseBody:{  if (log.isTraceEnabled()) {    log.trace("Adding Exchange to queue: " + copy);  }  queue.add(copy);} @AT@ 5720 @LENGTH@ 114
------INS IfStatement@@if (log.isTraceEnabled()) {  log.trace("Adding Exchange to queue: " + copy);} @TO@ Block@@ElseBody:{  queue.add(copy);} @AT@ 5926 @LENGTH@ 105
---------INS MethodInvocation@@log.isTraceEnabled() @TO@ IfStatement@@if (log.isTraceEnabled()) {  log.trace("Adding Exchange to queue: " + copy);} @AT@ 5930 @LENGTH@ 20
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.isTraceEnabled() @AT@ 5930 @LENGTH@ 3
------------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@log.isTraceEnabled() @AT@ 5934 @LENGTH@ 16
---------INS Block@@ThenBody:{  log.trace("Adding Exchange to queue: " + copy);} @TO@ IfStatement@@if (log.isTraceEnabled()) {  log.trace("Adding Exchange to queue: " + copy);} @AT@ 5952 @LENGTH@ 79
------------INS ExpressionStatement@@MethodInvocation:log.trace("Adding Exchange to queue: " + copy) @TO@ Block@@ThenBody:{  log.trace("Adding Exchange to queue: " + copy);} @AT@ 5970 @LENGTH@ 47
---------------INS MethodInvocation@@log.trace("Adding Exchange to queue: " + copy) @TO@ ExpressionStatement@@MethodInvocation:log.trace("Adding Exchange to queue: " + copy) @AT@ 5970 @LENGTH@ 46
------------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.trace("Adding Exchange to queue: " + copy) @AT@ 5970 @LENGTH@ 3
------------------INS SimpleName@@MethodName:trace:["Adding Exchange to queue: " + copy] @TO@ MethodInvocation@@log.trace("Adding Exchange to queue: " + copy) @AT@ 5974 @LENGTH@ 42
---------------------INS InfixExpression@@"Adding Exchange to queue: " + copy @TO@ SimpleName@@MethodName:trace:["Adding Exchange to queue: " + copy] @AT@ 5980 @LENGTH@ 35
------------------------INS StringLiteral@@"Adding Exchange to queue: " @TO@ InfixExpression@@"Adding Exchange to queue: " + copy @AT@ 5980 @LENGTH@ 28
------------------------INS Operator@@+ @TO@ InfixExpression@@"Adding Exchange to queue: " + copy @AT@ 6008 @LENGTH@ 1
------------------------INS SimpleName@@copy @TO@ InfixExpression@@"Adding Exchange to queue: " + copy @AT@ 6011 @LENGTH@ 4


MOV ExpressionStatement@@MethodInvocation:CAMEL_SERVLET_MAP.remove(servletName) @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 2336 @LENGTH@ 38


UPD VariableDeclarationStatement@@Object[] v=new Object[]{"",new Object(),new HashMap(),0,BigInteger.TEN,null,new Object[0]}; @TO@ Object[] v=new Object[]{"",new Object(),new HashMap<Object,Object>(),0,BigInteger.TEN,null,new Object[0]}; @AT@ 2831 @LENGTH@ 118
---UPD VariableDeclarationFragment@@v=new Object[]{"",new Object(),new HashMap(),0,BigInteger.TEN,null,new Object[0]} @TO@ v=new Object[]{"",new Object(),new HashMap<Object,Object>(),0,BigInteger.TEN,null,new Object[0]} @AT@ 2840 @LENGTH@ 108
------UPD ArrayCreation@@new Object[]{"",new Object(),new HashMap(),0,BigInteger.TEN,null,new Object[0]} @TO@ new Object[]{"",new Object(),new HashMap<Object,Object>(),0,BigInteger.TEN,null,new Object[0]} @AT@ 2844 @LENGTH@ 104
---------UPD ArrayInitializer@@{"",new Object(),new HashMap(),0,BigInteger.TEN,null,new Object[0]} @TO@ {"",new Object(),new HashMap<Object,Object>(),0,BigInteger.TEN,null,new Object[0]} @AT@ 2857 @LENGTH@ 91
------------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<Object,Object>[] @AT@ 2877 @LENGTH@ 13
---------------INS ParameterizedType@@HashMap<Object,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2845 @LENGTH@ 23
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<Object,Object> @AT@ 2845 @LENGTH@ 7
------------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<Object,Object> @AT@ 2853 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<Object,Object> @AT@ 2861 @LENGTH@ 6
---------------DEL SimpleType@@HashMap @AT@ 2881 @LENGTH@ 7


INS IfStatement@@if (null != obj && obj.getClass() == requiredType) {  return (T)obj.get();} else {  return null;} @TO@ MethodDeclaration@@protected, T, K, T, MethodName:checkCache, K key, Class<T> requiredType,  @AT@ 31646 @LENGTH@ 118
---INS InfixExpression@@null != obj && obj.getClass() == requiredType @TO@ IfStatement@@if (null != obj && obj.getClass() == requiredType) {  return (T)obj.get();} else {  return null;} @AT@ 31650 @LENGTH@ 45
------INS InfixExpression@@null != obj @TO@ InfixExpression@@null != obj && obj.getClass() == requiredType @AT@ 31650 @LENGTH@ 11
---------INS NullLiteral@@null @TO@ InfixExpression@@null != obj @AT@ 31650 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@null != obj @AT@ 31654 @LENGTH@ 2
---------INS SimpleName@@obj @TO@ InfixExpression@@null != obj @AT@ 31658 @LENGTH@ 3
------INS Operator@@&& @TO@ InfixExpression@@null != obj && obj.getClass() == requiredType @AT@ 31661 @LENGTH@ 2
------INS InfixExpression@@obj.getClass() == requiredType @TO@ InfixExpression@@null != obj && obj.getClass() == requiredType @AT@ 31665 @LENGTH@ 30
---------INS MethodInvocation@@obj.getClass() @TO@ InfixExpression@@obj.getClass() == requiredType @AT@ 31665 @LENGTH@ 14
------------INS SimpleName@@Name:obj @TO@ MethodInvocation@@obj.getClass() @AT@ 31665 @LENGTH@ 3
------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@obj.getClass() @AT@ 31669 @LENGTH@ 10
---------INS Operator@@== @TO@ InfixExpression@@obj.getClass() == requiredType @AT@ 31679 @LENGTH@ 2
---------INS SimpleName@@requiredType @TO@ InfixExpression@@obj.getClass() == requiredType @AT@ 31683 @LENGTH@ 12
---INS Block@@ThenBody:{  return (T)obj.get();} @TO@ IfStatement@@if (null != obj && obj.getClass() == requiredType) {  return (T)obj.get();} else {  return null;} @AT@ 31697 @LENGTH@ 35
------MOV ReturnStatement@@ParenthesizedExpression:(null != obj ? (T)obj.get() : null) @TO@ Block@@ThenBody:{  return (T)obj.get();} @AT@ 31645 @LENGTH@ 44
---------DEL ParenthesizedExpression@@(null != obj ? (T)obj.get() : null) @AT@ 31652 @LENGTH@ 36
------------DEL ConditionalExpression@@null != obj ? (T)obj.get() : null @AT@ 31653 @LENGTH@ 34
---------------DEL InfixExpression@@null != obj @AT@ 31653 @LENGTH@ 11
------------------DEL NullLiteral@@null @AT@ 31653 @LENGTH@ 4
------------------DEL Operator@@!= @AT@ 31657 @LENGTH@ 2
------------------DEL SimpleName@@obj @AT@ 31661 @LENGTH@ 3
---------------DEL NullLiteral@@null @AT@ 31683 @LENGTH@ 4
---------MOV CastExpression@@(T)obj.get() @TO@ ReturnStatement@@ParenthesizedExpression:(null != obj ? (T)obj.get() : null) @AT@ 31667 @LENGTH@ 13
---INS Block@@ElseBody:{  return null;} @TO@ IfStatement@@if (null != obj && obj.getClass() == requiredType) {  return (T)obj.get();} else {  return null;} @AT@ 31738 @LENGTH@ 26
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ElseBody:{  return null;} @AT@ 31746 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 31753 @LENGTH@ 4


UPD MethodDeclaration@@public, ServerCommunicationHandler, MethodName:getProcessManagerSlave, ServerEnvironment environment, MessageHandler handler,  @TO@ public, ServerCommunicationHandler, MethodName:getServerCommunicationHandler, ServerEnvironment environment, MessageHandler handler,  @AT@ 1424 @LENGTH@ 224
---UPD SimpleName@@MethodName:getProcessManagerSlave @TO@ MethodName:getServerCommunicationHandler @AT@ 1458 @LENGTH@ 22


UPD MethodDeclaration@@public, void, MethodName:readElement, XMLExtendedStreamReader reader, ParseResult<NullSubsystemElement<Object>> result, XMLStreamException,  @TO@ public, void, MethodName:readElement, XMLExtendedStreamReader arg0, List<?> arg1, XMLStreamException,  @AT@ 568 @LENGTH@ 369
---UPD SingleVariableDeclaration@@XMLExtendedStreamReader reader @TO@ XMLExtendedStreamReader arg0 @AT@ 592 @LENGTH@ 30
------UPD SimpleName@@reader @TO@ arg0 @AT@ 616 @LENGTH@ 6
---UPD SingleVariableDeclaration@@ParseResult<NullSubsystemElement<Object>> result @TO@ List<?> arg1 @AT@ 624 @LENGTH@ 48
------INS ParameterizedType@@List<?> @TO@ SingleVariableDeclaration@@ParseResult<NullSubsystemElement<Object>> result @AT@ 584 @LENGTH@ 7
---------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 589 @LENGTH@ 1
---------MOV SimpleType@@Object @TO@ ParameterizedType@@List<?> @AT@ 657 @LENGTH@ 6
------DEL ParameterizedType@@ParseResult<NullSubsystemElement<Object>> @AT@ 624 @LENGTH@ 41
---------DEL SimpleType@@ParseResult @AT@ 624 @LENGTH@ 11
---------DEL ParameterizedType@@NullSubsystemElement<Object> @AT@ 636 @LENGTH@ 28
------------DEL SimpleType@@NullSubsystemElement @AT@ 636 @LENGTH@ 20
------UPD SimpleName@@result @TO@ arg1 @AT@ 666 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:System.out.println(getClass().getCanonicalName() + ".readElement, " + reader.getLocalName()) @AT@ 722 @LENGTH@ 93
------DEL MethodInvocation@@System.out.println(getClass().getCanonicalName() + ".readElement, " + reader.getLocalName()) @AT@ 722 @LENGTH@ 92
---------DEL QualifiedName@@Name:System.out @AT@ 722 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:[getClass().getCanonicalName() + ".readElement, " + reader.getLocalName()] @AT@ 733 @LENGTH@ 81
------------DEL InfixExpression@@getClass().getCanonicalName() + ".readElement, " + reader.getLocalName() @AT@ 741 @LENGTH@ 72
---------------DEL MethodInvocation@@getClass().getCanonicalName() @AT@ 741 @LENGTH@ 29
------------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 741 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:getCanonicalName:[] @AT@ 752 @LENGTH@ 18
---------------DEL Operator@@+ @AT@ 770 @LENGTH@ 1
---------------DEL StringLiteral@@".readElement, " @AT@ 773 @LENGTH@ 16
---------------DEL MethodInvocation@@reader.getLocalName() @AT@ 792 @LENGTH@ 21
------------------DEL SimpleName@@Name:reader @AT@ 792 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:getLocalName:[] @AT@ 799 @LENGTH@ 14
---DEL VariableDeclarationStatement@@NullSubsystemElement<Object> element=new NullSubsystemElement(reader); @AT@ 824 @LENGTH@ 72
------DEL ParameterizedType@@NullSubsystemElement<Object> @AT@ 824 @LENGTH@ 28
---------DEL SimpleType@@NullSubsystemElement @AT@ 824 @LENGTH@ 20
---------DEL SimpleType@@Object @AT@ 845 @LENGTH@ 6
------DEL VariableDeclarationFragment@@element=new NullSubsystemElement(reader) @AT@ 853 @LENGTH@ 42
---------DEL SimpleName@@element @AT@ 853 @LENGTH@ 7
---------DEL ClassInstanceCreation@@NullSubsystemElement[reader] @AT@ 863 @LENGTH@ 32
------------DEL New@@new @AT@ 863 @LENGTH@ 3
------------DEL SimpleType@@NullSubsystemElement @AT@ 867 @LENGTH@ 20
------------DEL SimpleName@@reader @AT@ 888 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:result.setResult(element) @AT@ 905 @LENGTH@ 26
------DEL MethodInvocation@@result.setResult(element) @AT@ 905 @LENGTH@ 25
---------DEL SimpleName@@Name:result @AT@ 905 @LENGTH@ 6
---------DEL SimpleName@@MethodName:setResult:[element] @AT@ 912 @LENGTH@ 18
------------DEL SimpleName@@element @AT@ 922 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @TO@ TypeDeclaration@@[public]DebugTest, ContextTestSupport @AT@ 5764 @LENGTH@ 758
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 5764 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 5771 @LENGTH@ 4
---INS SimpleName@@MethodName:testDebugRemoveBreakpoint @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 5776 @LENGTH@ 25
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 5811 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:context.getDebugger().addBreakpoint(breakpoint) @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 5831 @LENGTH@ 48
------INS MethodInvocation@@context.getDebugger().addBreakpoint(breakpoint) @TO@ ExpressionStatement@@MethodInvocation:context.getDebugger().addBreakpoint(breakpoint) @AT@ 5831 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:getDebugger:[] @TO@ MethodInvocation@@context.getDebugger().addBreakpoint(breakpoint) @AT@ 5831 @LENGTH@ 21
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getDebugger().addBreakpoint(breakpoint) @AT@ 5831 @LENGTH@ 7
---------INS SimpleName@@MethodName:addBreakpoint:[breakpoint] @TO@ MethodInvocation@@context.getDebugger().addBreakpoint(breakpoint) @AT@ 5853 @LENGTH@ 25
------------INS SimpleName@@breakpoint @TO@ SimpleName@@MethodName:addBreakpoint:[breakpoint] @AT@ 5867 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedBodiesReceived("Hello World") @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 5889 @LENGTH@ 69
------INS MethodInvocation@@getMockEndpoint("mock:result").expectedBodiesReceived("Hello World") @TO@ ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedBodiesReceived("Hello World") @AT@ 5889 @LENGTH@ 68
---------INS MethodInvocation@@MethodName:getMockEndpoint:["mock:result"] @TO@ MethodInvocation@@getMockEndpoint("mock:result").expectedBodiesReceived("Hello World") @AT@ 5889 @LENGTH@ 30
------------INS StringLiteral@@"mock:result" @TO@ MethodInvocation@@MethodName:getMockEndpoint:["mock:result"] @AT@ 5905 @LENGTH@ 13
---------INS SimpleName@@MethodName:expectedBodiesReceived:["Hello World"] @TO@ MethodInvocation@@getMockEndpoint("mock:result").expectedBodiesReceived("Hello World") @AT@ 5920 @LENGTH@ 37
------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:expectedBodiesReceived:["Hello World"] @AT@ 5943 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","Hello World") @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 5968 @LENGTH@ 49
------INS MethodInvocation@@template.sendBody("direct:start","Hello World") @TO@ ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","Hello World") @AT@ 5968 @LENGTH@ 48
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:start","Hello World") @AT@ 5968 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBody:["direct:start", "Hello World"] @TO@ MethodInvocation@@template.sendBody("direct:start","Hello World") @AT@ 5977 @LENGTH@ 39
------------INS StringLiteral@@"direct:start" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "Hello World"] @AT@ 5986 @LENGTH@ 14
------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "Hello World"] @AT@ 6002 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 6027 @LENGTH@ 31
------INS MethodInvocation@@MethodName:assertMockEndpointsSatisfied:[] @TO@ ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @AT@ 6027 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:assertEquals(7,logs.size()) @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 6068 @LENGTH@ 29
------INS MethodInvocation@@assertEquals(7,logs.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(7,logs.size()) @AT@ 6068 @LENGTH@ 28
---------INS SimpleName@@MethodName:assertEquals:[7, logs.size()] @TO@ MethodInvocation@@assertEquals(7,logs.size()) @AT@ 6068 @LENGTH@ 28
------------INS NumberLiteral@@7 @TO@ SimpleName@@MethodName:assertEquals:[7, logs.size()] @AT@ 6081 @LENGTH@ 1
------------INS MethodInvocation@@logs.size() @TO@ SimpleName@@MethodName:assertEquals:[7, logs.size()] @AT@ 6084 @LENGTH@ 11
---------------INS SimpleName@@Name:logs @TO@ MethodInvocation@@logs.size() @AT@ 6084 @LENGTH@ 4
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@logs.size() @AT@ 6089 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:context.getDebugger().removeBreakpoint(breakpoint) @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 6140 @LENGTH@ 51
------INS MethodInvocation@@context.getDebugger().removeBreakpoint(breakpoint) @TO@ ExpressionStatement@@MethodInvocation:context.getDebugger().removeBreakpoint(breakpoint) @AT@ 6140 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:getDebugger:[] @TO@ MethodInvocation@@context.getDebugger().removeBreakpoint(breakpoint) @AT@ 6140 @LENGTH@ 21
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getDebugger().removeBreakpoint(breakpoint) @AT@ 6140 @LENGTH@ 7
---------INS SimpleName@@MethodName:removeBreakpoint:[breakpoint] @TO@ MethodInvocation@@context.getDebugger().removeBreakpoint(breakpoint) @AT@ 6162 @LENGTH@ 28
------------INS SimpleName@@breakpoint @TO@ SimpleName@@MethodName:removeBreakpoint:[breakpoint] @AT@ 6179 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:resetMocks() @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 6263 @LENGTH@ 13
------INS MethodInvocation@@MethodName:resetMocks:[] @TO@ ExpressionStatement@@MethodInvocation:resetMocks() @AT@ 6263 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:logs.clear() @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 6285 @LENGTH@ 13
------INS MethodInvocation@@logs.clear() @TO@ ExpressionStatement@@MethodInvocation:logs.clear() @AT@ 6285 @LENGTH@ 12
---------INS SimpleName@@Name:logs @TO@ MethodInvocation@@logs.clear() @AT@ 6285 @LENGTH@ 4
---------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@logs.clear() @AT@ 6290 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedBodiesReceived("Hello Camel") @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 6308 @LENGTH@ 69
------INS MethodInvocation@@getMockEndpoint("mock:result").expectedBodiesReceived("Hello Camel") @TO@ ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedBodiesReceived("Hello Camel") @AT@ 6308 @LENGTH@ 68
---------INS MethodInvocation@@MethodName:getMockEndpoint:["mock:result"] @TO@ MethodInvocation@@getMockEndpoint("mock:result").expectedBodiesReceived("Hello Camel") @AT@ 6308 @LENGTH@ 30
------------INS StringLiteral@@"mock:result" @TO@ MethodInvocation@@MethodName:getMockEndpoint:["mock:result"] @AT@ 6324 @LENGTH@ 13
---------INS SimpleName@@MethodName:expectedBodiesReceived:["Hello Camel"] @TO@ MethodInvocation@@getMockEndpoint("mock:result").expectedBodiesReceived("Hello Camel") @AT@ 6339 @LENGTH@ 37
------------INS StringLiteral@@"Hello Camel" @TO@ SimpleName@@MethodName:expectedBodiesReceived:["Hello Camel"] @AT@ 6362 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","Hello Camel") @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 6387 @LENGTH@ 49
------INS MethodInvocation@@template.sendBody("direct:start","Hello Camel") @TO@ ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","Hello Camel") @AT@ 6387 @LENGTH@ 48
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:start","Hello Camel") @AT@ 6387 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBody:["direct:start", "Hello Camel"] @TO@ MethodInvocation@@template.sendBody("direct:start","Hello Camel") @AT@ 6396 @LENGTH@ 39
------------INS StringLiteral@@"direct:start" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "Hello Camel"] @AT@ 6405 @LENGTH@ 14
------------INS StringLiteral@@"Hello Camel" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "Hello Camel"] @AT@ 6421 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 6446 @LENGTH@ 31
------INS MethodInvocation@@MethodName:assertMockEndpointsSatisfied:[] @TO@ ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @AT@ 6446 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:assertEquals(0,logs.size()) @TO@ MethodDeclaration@@public, void, MethodName:testDebugRemoveBreakpoint, Exception,  @AT@ 6487 @LENGTH@ 29
------INS MethodInvocation@@assertEquals(0,logs.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(0,logs.size()) @AT@ 6487 @LENGTH@ 28
---------INS SimpleName@@MethodName:assertEquals:[0, logs.size()] @TO@ MethodInvocation@@assertEquals(0,logs.size()) @AT@ 6487 @LENGTH@ 28
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[0, logs.size()] @AT@ 6500 @LENGTH@ 1
------------INS MethodInvocation@@logs.size() @TO@ SimpleName@@MethodName:assertEquals:[0, logs.size()] @AT@ 6503 @LENGTH@ 11
---------------INS SimpleName@@Name:logs @TO@ MethodInvocation@@logs.size() @AT@ 6503 @LENGTH@ 4
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@logs.size() @AT@ 6508 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:InetSocketAddress.class.cast(getLocalPort()) @TO@ MethodInvocation:InetSocketAddress.class.cast(getLocalSocketAddress()) @AT@ 1691 @LENGTH@ 52
---UPD MethodInvocation@@InetSocketAddress.class.cast(getLocalPort()) @TO@ InetSocketAddress.class.cast(getLocalSocketAddress()) @AT@ 1698 @LENGTH@ 44
------UPD SimpleName@@MethodName:cast:[getLocalPort()] @TO@ MethodName:cast:[getLocalSocketAddress()] @AT@ 1722 @LENGTH@ 20
---------UPD MethodInvocation@@MethodName:getLocalPort:[] @TO@ MethodName:getLocalSocketAddress:[] @AT@ 1727 @LENGTH@ 14


INS VariableDeclarationStatement@@Set<JavaType> managedEntities=dbreTableService.getDatabaseManagedEntities(); @TO@ MethodDeclaration@@private, void, MethodName:deleteManagedTypesNotInModel, Set<Table> tables,  @AT@ 13694 @LENGTH@ 78
---INS ParameterizedType@@Set<JavaType> @TO@ VariableDeclarationStatement@@Set<JavaType> managedEntities=dbreTableService.getDatabaseManagedEntities(); @AT@ 13694 @LENGTH@ 13
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<JavaType> @AT@ 13694 @LENGTH@ 3
------INS SimpleType@@JavaType @TO@ ParameterizedType@@Set<JavaType> @AT@ 13698 @LENGTH@ 8
---INS VariableDeclarationFragment@@managedEntities=dbreTableService.getDatabaseManagedEntities() @TO@ VariableDeclarationStatement@@Set<JavaType> managedEntities=dbreTableService.getDatabaseManagedEntities(); @AT@ 13708 @LENGTH@ 63
------INS SimpleName@@managedEntities @TO@ VariableDeclarationFragment@@managedEntities=dbreTableService.getDatabaseManagedEntities() @AT@ 13708 @LENGTH@ 15
------INS MethodInvocation@@dbreTableService.getDatabaseManagedEntities() @TO@ VariableDeclarationFragment@@managedEntities=dbreTableService.getDatabaseManagedEntities() @AT@ 13726 @LENGTH@ 45
---------INS SimpleName@@Name:dbreTableService @TO@ MethodInvocation@@dbreTableService.getDatabaseManagedEntities() @AT@ 13726 @LENGTH@ 16
---------INS SimpleName@@MethodName:getDatabaseManagedEntities:[] @TO@ MethodInvocation@@dbreTableService.getDatabaseManagedEntities() @AT@ 13743 @LENGTH@ 28


INS ExpressionStatement@@MethodInvocation:from("direct:threads").threads(5).transform(body().append(body())) @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 22043 @LENGTH@ 67
---INS MethodInvocation@@from("direct:threads").threads(5).transform(body().append(body())) @TO@ ExpressionStatement@@MethodInvocation:from("direct:threads").threads(5).transform(body().append(body())) @AT@ 22043 @LENGTH@ 66
------INS MethodInvocation@@MethodName:threads:[5] @TO@ MethodInvocation@@from("direct:threads").threads(5).transform(body().append(body())) @AT@ 22043 @LENGTH@ 33
---------INS NumberLiteral@@5 @TO@ MethodInvocation@@MethodName:threads:[5] @AT@ 22074 @LENGTH@ 1
------INS MethodInvocation@@MethodName:from:["direct:threads"] @TO@ MethodInvocation@@from("direct:threads").threads(5).transform(body().append(body())) @AT@ 22043 @LENGTH@ 22
---------INS StringLiteral@@"direct:threads" @TO@ MethodInvocation@@MethodName:from:["direct:threads"] @AT@ 22048 @LENGTH@ 16
------INS SimpleName@@MethodName:transform:[body().append(body())] @TO@ MethodInvocation@@from("direct:threads").threads(5).transform(body().append(body())) @AT@ 22077 @LENGTH@ 32
---------INS MethodInvocation@@body().append(body()) @TO@ SimpleName@@MethodName:transform:[body().append(body())] @AT@ 22087 @LENGTH@ 21
------------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@body().append(body()) @AT@ 22087 @LENGTH@ 6
------------INS SimpleName@@MethodName:append:[body()] @TO@ MethodInvocation@@body().append(body()) @AT@ 22094 @LENGTH@ 14
---------------INS MethodInvocation@@MethodName:body:[] @TO@ SimpleName@@MethodName:append:[body()] @AT@ 22101 @LENGTH@ 6


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=5356431350251733240L] @TO@ TypeDeclaration@@[public]NamespaceAttribute,  @AT@ 216 @LENGTH@ 66
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=5356431350251733240L] @AT@ 216 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=5356431350251733240L] @AT@ 224 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=5356431350251733240L] @AT@ 231 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=5356431350251733240L] @AT@ 237 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=5356431350251733240L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=5356431350251733240L] @AT@ 242 @LENGTH@ 39
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=5356431350251733240L @AT@ 242 @LENGTH@ 16
------INS NumberLiteral@@5356431350251733240L @TO@ VariableDeclarationFragment@@serialVersionUID=5356431350251733240L @AT@ 261 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @TO@ TypeDeclaration@@[public]QuartzRouteTest, CamelTestSupport @AT@ 2296 @LENGTH@ 540
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2296 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2303 @LENGTH@ 4
---INS SimpleName@@MethodName:testStartAndStopCamelContext @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2308 @LENGTH@ 28
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2346 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:System.out.println("Routes " + context.getRoutes()) @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2366 @LENGTH@ 52
------INS MethodInvocation@@System.out.println("Routes " + context.getRoutes()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("Routes " + context.getRoutes()) @AT@ 2366 @LENGTH@ 51
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("Routes " + context.getRoutes()) @AT@ 2366 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["Routes " + context.getRoutes()] @TO@ MethodInvocation@@System.out.println("Routes " + context.getRoutes()) @AT@ 2377 @LENGTH@ 40
------------INS InfixExpression@@"Routes " + context.getRoutes() @TO@ SimpleName@@MethodName:println:["Routes " + context.getRoutes()] @AT@ 2385 @LENGTH@ 31
---------------INS StringLiteral@@"Routes " @TO@ InfixExpression@@"Routes " + context.getRoutes() @AT@ 2385 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@"Routes " + context.getRoutes() @AT@ 2394 @LENGTH@ 1
---------------INS MethodInvocation@@context.getRoutes() @TO@ InfixExpression@@"Routes " + context.getRoutes() @AT@ 2397 @LENGTH@ 19
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRoutes() @AT@ 2397 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getRoutes:[] @TO@ MethodInvocation@@context.getRoutes() @AT@ 2405 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:System.out.println("The endpoints" + context.getEndpoints()) @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2427 @LENGTH@ 61
------INS MethodInvocation@@System.out.println("The endpoints" + context.getEndpoints()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("The endpoints" + context.getEndpoints()) @AT@ 2427 @LENGTH@ 60
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("The endpoints" + context.getEndpoints()) @AT@ 2427 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["The endpoints" + context.getEndpoints()] @TO@ MethodInvocation@@System.out.println("The endpoints" + context.getEndpoints()) @AT@ 2438 @LENGTH@ 49
------------INS InfixExpression@@"The endpoints" + context.getEndpoints() @TO@ SimpleName@@MethodName:println:["The endpoints" + context.getEndpoints()] @AT@ 2446 @LENGTH@ 40
---------------INS StringLiteral@@"The endpoints" @TO@ InfixExpression@@"The endpoints" + context.getEndpoints() @AT@ 2446 @LENGTH@ 15
---------------INS Operator@@+ @TO@ InfixExpression@@"The endpoints" + context.getEndpoints() @AT@ 2461 @LENGTH@ 1
---------------INS MethodInvocation@@context.getEndpoints() @TO@ InfixExpression@@"The endpoints" + context.getEndpoints() @AT@ 2464 @LENGTH@ 22
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getEndpoints() @AT@ 2464 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getEndpoints:[] @TO@ MethodInvocation@@context.getEndpoints() @AT@ 2472 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:context.stop() @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2537 @LENGTH@ 15
------INS MethodInvocation@@context.stop() @TO@ ExpressionStatement@@MethodInvocation:context.stop() @AT@ 2537 @LENGTH@ 14
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.stop() @AT@ 2537 @LENGTH@ 7
---------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@context.stop() @AT@ 2545 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:System.out.println("Routes " + context.getRoutes()) @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2561 @LENGTH@ 52
------INS MethodInvocation@@System.out.println("Routes " + context.getRoutes()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("Routes " + context.getRoutes()) @AT@ 2561 @LENGTH@ 51
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("Routes " + context.getRoutes()) @AT@ 2561 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["Routes " + context.getRoutes()] @TO@ MethodInvocation@@System.out.println("Routes " + context.getRoutes()) @AT@ 2572 @LENGTH@ 40
------------INS InfixExpression@@"Routes " + context.getRoutes() @TO@ SimpleName@@MethodName:println:["Routes " + context.getRoutes()] @AT@ 2580 @LENGTH@ 31
---------------INS StringLiteral@@"Routes " @TO@ InfixExpression@@"Routes " + context.getRoutes() @AT@ 2580 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@"Routes " + context.getRoutes() @AT@ 2589 @LENGTH@ 1
---------------INS MethodInvocation@@context.getRoutes() @TO@ InfixExpression@@"Routes " + context.getRoutes() @AT@ 2592 @LENGTH@ 19
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRoutes() @AT@ 2592 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getRoutes:[] @TO@ MethodInvocation@@context.getRoutes() @AT@ 2600 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2622 @LENGTH@ 19
------INS MethodInvocation@@Thread.sleep(2000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @AT@ 2622 @LENGTH@ 18
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 2622 @LENGTH@ 6
---------INS SimpleName@@MethodName:sleep:[2000] @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 2629 @LENGTH@ 11
------------INS NumberLiteral@@2000 @TO@ SimpleName@@MethodName:sleep:[2000] @AT@ 2635 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:context.start() @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2659 @LENGTH@ 16
------INS MethodInvocation@@context.start() @TO@ ExpressionStatement@@MethodInvocation:context.start() @AT@ 2659 @LENGTH@ 15
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.start() @AT@ 2659 @LENGTH@ 7
---------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@context.start() @AT@ 2667 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:System.out.println("Routes " + context.getRoutes()) @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2684 @LENGTH@ 52
------INS MethodInvocation@@System.out.println("Routes " + context.getRoutes()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("Routes " + context.getRoutes()) @AT@ 2684 @LENGTH@ 51
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("Routes " + context.getRoutes()) @AT@ 2684 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["Routes " + context.getRoutes()] @TO@ MethodInvocation@@System.out.println("Routes " + context.getRoutes()) @AT@ 2695 @LENGTH@ 40
------------INS InfixExpression@@"Routes " + context.getRoutes() @TO@ SimpleName@@MethodName:println:["Routes " + context.getRoutes()] @AT@ 2703 @LENGTH@ 31
---------------INS StringLiteral@@"Routes " @TO@ InfixExpression@@"Routes " + context.getRoutes() @AT@ 2703 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@"Routes " + context.getRoutes() @AT@ 2712 @LENGTH@ 1
---------------INS MethodInvocation@@context.getRoutes() @TO@ InfixExpression@@"Routes " + context.getRoutes() @AT@ 2715 @LENGTH@ 19
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRoutes() @AT@ 2715 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getRoutes:[] @TO@ MethodInvocation@@context.getRoutes() @AT@ 2723 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:context.addRoutes(createRouteBuilder()) @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2745 @LENGTH@ 40
------INS MethodInvocation@@context.addRoutes(createRouteBuilder()) @TO@ ExpressionStatement@@MethodInvocation:context.addRoutes(createRouteBuilder()) @AT@ 2745 @LENGTH@ 39
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.addRoutes(createRouteBuilder()) @AT@ 2745 @LENGTH@ 7
---------INS SimpleName@@MethodName:addRoutes:[createRouteBuilder()] @TO@ MethodInvocation@@context.addRoutes(createRouteBuilder()) @AT@ 2753 @LENGTH@ 31
------------INS MethodInvocation@@MethodName:createRouteBuilder:[] @TO@ SimpleName@@MethodName:addRoutes:[createRouteBuilder()] @AT@ 2763 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:testQuartzRoute() @TO@ MethodDeclaration@@public, void, MethodName:testStartAndStopCamelContext, Exception,  @AT@ 2803 @LENGTH@ 18
------INS MethodInvocation@@MethodName:testQuartzRoute:[] @TO@ ExpressionStatement@@MethodInvocation:testQuartzRoute() @AT@ 2803 @LENGTH@ 17


MOV FieldDeclaration@@private, JAXBContext, [jaxbContext] @TO@ TypeDeclaration@@[public]CamelNamespaceHandler, [NamespaceHandler] @AT@ 2860 @LENGTH@ 32


UPD VariableDeclarationStatement@@@SuppressWarnings("rawtypes") ResponseEntity<Map> response=restOperations.postForEntity(RETWEET_URL,Collections.emptyMap(),Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))); @TO@ @SuppressWarnings("rawtypes") ResponseEntity<Map> response=restOperations.postForEntity(RETWEET_URL,"",Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))); @AT@ 4321 @LENGTH@ 206
---UPD VariableDeclarationFragment@@response=restOperations.postForEntity(RETWEET_URL,Collections.emptyMap(),Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))) @TO@ response=restOperations.postForEntity(RETWEET_URL,"",Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))) @AT@ 4373 @LENGTH@ 153
------UPD MethodInvocation@@restOperations.postForEntity(RETWEET_URL,Collections.emptyMap(),Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))) @TO@ restOperations.postForEntity(RETWEET_URL,"",Map.class,Collections.singletonMap("tweet_id",Long.toString(tweetId))) @AT@ 4384 @LENGTH@ 142
---------UPD SimpleName@@MethodName:postForEntity:[RETWEET_URL, Collections.emptyMap(), Map.class, Collections.singletonMap("tweet_id",Long.toString(tweetId))] @TO@ MethodName:postForEntity:[RETWEET_URL, "", Map.class, Collections.singletonMap("tweet_id",Long.toString(tweetId))] @AT@ 4399 @LENGTH@ 127
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 4426 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 4426 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 4438 @LENGTH@ 10
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:postForEntity:[RETWEET_URL, Collections.emptyMap(), Map.class, Collections.singletonMap("tweet_id",Long.toString(tweetId))] @AT@ 4426 @LENGTH@ 2


UPD FieldDeclaration@@private, TimerTask, [task] @TO@ private, volatile, TimerTask, [task] @AT@ 1365 @LENGTH@ 23
---INS Modifier@@volatile @TO@ FieldDeclaration@@private, TimerTask, [task] @AT@ 1373 @LENGTH@ 8


UPD MethodDeclaration@@protected, HttpMethod, MethodName:createMethod, Exchange exchange,  @TO@ protected, HttpMethod, MethodName:createMethod, Exchange exchange, InvalidPayloadException,  @AT@ 10136 @LENGTH@ 1279
---INS SimpleType@@InvalidPayloadException @TO@ MethodDeclaration@@protected, HttpMethod, MethodName:createMethod, Exchange exchange,  @AT@ 10440 @LENGTH@ 23


UPD EnhancedForStatement@@for (Object id : vmList) {  MonitoredVm vm=local.getMonitoredVm(new VmIdentifier("//" + id));  String main=MonitoredVmUtil.mainClass(vm,true);  if (main.equals(classname)) {    String args=MonitoredVmUtil.mainArgs(vm);    if (args.contains(processName)) {      if (found != null)       fail("Found more than one process");      found=id;    }  }} @TO@ for (Object id : vmList) {  MonitoredVm vm;  try {    vm=local.getMonitoredVm(new VmIdentifier("//" + id));  } catch (  Exception e) {    continue;  }  String main=MonitoredVmUtil.mainClass(vm,true);  if (main.equals(classname)) {    String args=MonitoredVmUtil.mainArgs(vm);    if (args.contains(processName)) {      if (found != null)       fail("Found more than one process");      found=id;    }  }} @AT@ 10765 @LENGTH@ 496
---UPD VariableDeclarationStatement@@MonitoredVm vm=local.getMonitoredVm(new VmIdentifier("//" + id)); @TO@ MonitoredVm vm; @AT@ 10804 @LENGTH@ 67
------UPD VariableDeclarationFragment@@vm=local.getMonitoredVm(new VmIdentifier("//" + id)) @TO@ vm @AT@ 10816 @LENGTH@ 54
---INS TryStatement@@try {  vm=local.getMonitoredVm(new VmIdentifier("//" + id));} catch (Exception e) {  continue;} @TO@ EnhancedForStatement@@for (Object id : vmList) {  MonitoredVm vm=local.getMonitoredVm(new VmIdentifier("//" + id));  String main=MonitoredVmUtil.mainClass(vm,true);  if (main.equals(classname)) {    String args=MonitoredVmUtil.mainArgs(vm);    if (args.contains(processName)) {      if (found != null)       fail("Found more than one process");      found=id;    }  }} @AT@ 10835 @LENGTH@ 152
------INS ExpressionStatement@@Assignment:vm=local.getMonitoredVm(new VmIdentifier("//" + id)) @TO@ TryStatement@@try {  vm=local.getMonitoredVm(new VmIdentifier("//" + id));} catch (Exception e) {  continue;} @AT@ 10857 @LENGTH@ 54
---------INS Assignment@@vm=local.getMonitoredVm(new VmIdentifier("//" + id)) @TO@ ExpressionStatement@@Assignment:vm=local.getMonitoredVm(new VmIdentifier("//" + id)) @AT@ 10857 @LENGTH@ 53
------------MOV MethodInvocation@@local.getMonitoredVm(new VmIdentifier("//" + id)) @TO@ Assignment@@vm=local.getMonitoredVm(new VmIdentifier("//" + id)) @AT@ 10821 @LENGTH@ 49
------------INS SimpleName@@vm @TO@ Assignment@@vm=local.getMonitoredVm(new VmIdentifier("//" + id)) @AT@ 10857 @LENGTH@ 2
------------INS Operator@@= @TO@ Assignment@@vm=local.getMonitoredVm(new VmIdentifier("//" + id)) @AT@ 10859 @LENGTH@ 1
------INS CatchClause@@catch (Exception e) {  continue;} @TO@ TryStatement@@try {  vm=local.getMonitoredVm(new VmIdentifier("//" + id));} catch (Exception e) {  continue;} @AT@ 10926 @LENGTH@ 61
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  continue;} @AT@ 10933 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 10933 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 10943 @LENGTH@ 1
---------INS ContinueStatement@@ @TO@ CatchClause@@catch (Exception e) {  continue;} @AT@ 10964 @LENGTH@ 9


INS IfStatement@@if (isPlatform("windows")) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:testPreserveHeaders, Exception,  @AT@ 1787 @LENGTH@ 58
---INS MethodInvocation@@isPlatform("windows") @TO@ IfStatement@@if (isPlatform("windows")) {  return;} @AT@ 1791 @LENGTH@ 21
------INS SimpleName@@MethodName:isPlatform:["windows"] @TO@ MethodInvocation@@isPlatform("windows") @AT@ 1791 @LENGTH@ 21
---------INS StringLiteral@@"windows" @TO@ SimpleName@@MethodName:isPlatform:["windows"] @AT@ 1802 @LENGTH@ 9
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (isPlatform("windows")) {  return;} @AT@ 1814 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 1828 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:response.put("since_id","24") @TO@ MethodInvocation:response.put("since_id",24) @AT@ 5535 @LENGTH@ 31
---UPD MethodInvocation@@response.put("since_id","24") @TO@ response.put("since_id",24) @AT@ 5535 @LENGTH@ 30
------UPD SimpleName@@MethodName:put:["since_id", "24"] @TO@ MethodName:put:["since_id", 24] @AT@ 5544 @LENGTH@ 21
---------INS NumberLiteral@@24 @TO@ SimpleName@@MethodName:put:["since_id", "24"] @AT@ 5558 @LENGTH@ 2
---------DEL StringLiteral@@"24" @AT@ 5560 @LENGTH@ 4


UPD IfStatement@@if (values == null) {  if (obj != null) {    if (keyValuePairField.required() && values == null) {      throw new IllegalArgumentException("The mandatory key/tag : " + key + " has not been defined !");    }    Object result=getDefaultValueforPrimitive(field.getType());    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }  } else {    List l=lists.get(clazz.getName());    if (l != null) {      if (!l.isEmpty()) {        obj=l.get(0);      } else {        obj=clazz.newInstance();      }      Object result=getDefaultValueforPrimitive(field.getType());      try {        field.set(obj,result);      } catch (      Exception e) {        throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);      }      if (!l.isEmpty()) {        l.set(0,obj);      } else {        l.add(0,obj);      }      lists.put(clazz.getName(),l);      obj=null;    } else {      throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());    }  }} else {  if (values.size() >= 1) {    if (obj != null) {      value=(String)values.get(0);      Object result=null;      if (value != null) {        String pattern=keyValuePairField.pattern();        Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());        result=formatField(format,value,key,line);        if (LOG.isDebugEnabled()) {          LOG.debug("Value formated : " + result);        }      } else {        result=getDefaultValueforPrimitive(field.getType());      }      try {        field.set(obj,result);      } catch (      Exception e) {        throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);      }    } else {      List l=lists.get(clazz.getName());      if (l != null) {        for (int i=0; i < values.size(); i++) {          if ((!l.isEmpty()) && (l.size() > i)) {            obj=l.get(i);          } else {            obj=clazz.newInstance();          }          value=(String)values.get(i);          String pattern=keyValuePairField.pattern();          Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());          Object result=formatField(format,value,key,line);          if (LOG.isDebugEnabled()) {            LOG.debug("Value formated : " + result);          }          try {            if (value != null) {              field.set(obj,result);            } else {              field.set(obj,getDefaultValueforPrimitive(field.getType()));            }          } catch (          Exception e) {            throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);          }          if ((!l.isEmpty()) && (l.size() > i)) {            l.set(i,obj);          } else {            l.add(i,obj);          }          lists.put(clazz.getName(),l);          obj=null;        }      } else {        throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());      }    }  } else {    Object result=getDefaultValueforPrimitive(field.getType());    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }  }} @TO@ if (values == null) {  if (obj != null) {    if (keyValuePairField.required() && values == null) {      throw new IllegalArgumentException("The mandatory key/tag : " + key + " has not been defined !");    }    Object result=getDefaultValueForPrimitive(field.getType());    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }  } else {    List l=lists.get(clazz.getName());    if (l != null) {      if (!l.isEmpty()) {        obj=l.get(0);      } else {        obj=clazz.newInstance();      }      Object result=getDefaultValueForPrimitive(field.getType());      try {        field.set(obj,result);      } catch (      Exception e) {        throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);      }      if (!l.isEmpty()) {        l.set(0,obj);      } else {        l.add(0,obj);      }      lists.put(clazz.getName(),l);      obj=null;    } else {      throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());    }  }} else {  if (values.size() >= 1) {    if (obj != null) {      value=(String)values.get(0);      Object result=null;      if (value != null) {        String pattern=keyValuePairField.pattern();        Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());        result=formatField(format,value,key,line);        if (LOG.isDebugEnabled()) {          LOG.debug("Value formated : " + result);        }      } else {        result=getDefaultValueForPrimitive(field.getType());      }      try {        field.set(obj,result);      } catch (      Exception e) {        throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);      }    } else {      List l=lists.get(clazz.getName());      if (l != null) {        for (int i=0; i < values.size(); i++) {          if ((!l.isEmpty()) && (l.size() > i)) {            obj=l.get(i);          } else {            obj=clazz.newInstance();          }          value=(String)values.get(i);          String pattern=keyValuePairField.pattern();          Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());          Object result=formatField(format,value,key,line);          if (LOG.isDebugEnabled()) {            LOG.debug("Value formated : " + result);          }          try {            if (value != null) {              field.set(obj,result);            } else {              field.set(obj,getDefaultValueForPrimitive(field.getType()));            }          } catch (          Exception e) {            throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);          }          if ((!l.isEmpty()) && (l.size() > i)) {            l.set(i,obj);          } else {            l.add(i,obj);          }          lists.put(clazz.getName(),l);          obj=null;        }      } else {        throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());      }    }  } else {    Object result=getDefaultValueForPrimitive(field.getType());    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }  }} @AT@ 7435 @LENGTH@ 7928
---UPD Block@@ThenBody:{  if (obj != null) {    if (keyValuePairField.required() && values == null) {      throw new IllegalArgumentException("The mandatory key/tag : " + key + " has not been defined !");    }    Object result=getDefaultValueforPrimitive(field.getType());    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }  } else {    List l=lists.get(clazz.getName());    if (l != null) {      if (!l.isEmpty()) {        obj=l.get(0);      } else {        obj=clazz.newInstance();      }      Object result=getDefaultValueforPrimitive(field.getType());      try {        field.set(obj,result);      } catch (      Exception e) {        throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);      }      if (!l.isEmpty()) {        l.set(0,obj);      } else {        l.add(0,obj);      }      lists.put(clazz.getName(),l);      obj=null;    } else {      throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());    }  }} @TO@ ThenBody:{  if (obj != null) {    if (keyValuePairField.required() && values == null) {      throw new IllegalArgumentException("The mandatory key/tag : " + key + " has not been defined !");    }    Object result=getDefaultValueForPrimitive(field.getType());    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }  } else {    List l=lists.get(clazz.getName());    if (l != null) {      if (!l.isEmpty()) {        obj=l.get(0);      } else {        obj=clazz.newInstance();      }      Object result=getDefaultValueForPrimitive(field.getType());      try {        field.set(obj,result);      } catch (      Exception e) {        throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);      }      if (!l.isEmpty()) {        l.set(0,obj);      } else {        l.add(0,obj);      }      lists.put(clazz.getName(),l);      obj=null;    } else {      throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());    }  }} @AT@ 7455 @LENGTH@ 2809
------UPD IfStatement@@if (obj != null) {  if (keyValuePairField.required() && values == null) {    throw new IllegalArgumentException("The mandatory key/tag : " + key + " has not been defined !");  }  Object result=getDefaultValueforPrimitive(field.getType());  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }} else {  List l=lists.get(clazz.getName());  if (l != null) {    if (!l.isEmpty()) {      obj=l.get(0);    } else {      obj=clazz.newInstance();    }    Object result=getDefaultValueforPrimitive(field.getType());    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }    if (!l.isEmpty()) {      l.set(0,obj);    } else {      l.add(0,obj);    }    lists.put(clazz.getName(),l);    obj=null;  } else {    throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());  }} @TO@ if (obj != null) {  if (keyValuePairField.required() && values == null) {    throw new IllegalArgumentException("The mandatory key/tag : " + key + " has not been defined !");  }  Object result=getDefaultValueForPrimitive(field.getType());  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }} else {  List l=lists.get(clazz.getName());  if (l != null) {    if (!l.isEmpty()) {      obj=l.get(0);    } else {      obj=clazz.newInstance();    }    Object result=getDefaultValueForPrimitive(field.getType());    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }    if (!l.isEmpty()) {      l.set(0,obj);    } else {      l.add(0,obj);    }    lists.put(clazz.getName(),l);    obj=null;  } else {    throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());  }} @AT@ 7668 @LENGTH@ 2547
---------UPD Block@@ThenBody:{  if (keyValuePairField.required() && values == null) {    throw new IllegalArgumentException("The mandatory key/tag : " + key + " has not been defined !");  }  Object result=getDefaultValueforPrimitive(field.getType());  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }} @TO@ ThenBody:{  if (keyValuePairField.required() && values == null) {    throw new IllegalArgumentException("The mandatory key/tag : " + key + " has not been defined !");  }  Object result=getDefaultValueForPrimitive(field.getType());  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }} @AT@ 7685 @LENGTH@ 701
------------UPD VariableDeclarationStatement@@Object result=getDefaultValueforPrimitive(field.getType()); @TO@ Object result=getDefaultValueForPrimitive(field.getType()); @AT@ 7992 @LENGTH@ 61
---------------UPD VariableDeclarationFragment@@result=getDefaultValueforPrimitive(field.getType()) @TO@ result=getDefaultValueForPrimitive(field.getType()) @AT@ 7999 @LENGTH@ 53
------------------UPD MethodInvocation@@getDefaultValueforPrimitive(field.getType()) @TO@ getDefaultValueForPrimitive(field.getType()) @AT@ 8008 @LENGTH@ 44
---------------------UPD SimpleName@@MethodName:getDefaultValueforPrimitive:[field.getType()] @TO@ MethodName:getDefaultValueForPrimitive:[field.getType()] @AT@ 8008 @LENGTH@ 44
---------UPD Block@@ElseBody:{  List l=lists.get(clazz.getName());  if (l != null) {    if (!l.isEmpty()) {      obj=l.get(0);    } else {      obj=clazz.newInstance();    }    Object result=getDefaultValueforPrimitive(field.getType());    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }    if (!l.isEmpty()) {      l.set(0,obj);    } else {      l.add(0,obj);    }    lists.put(clazz.getName(),l);    obj=null;  } else {    throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());  }} @TO@ ElseBody:{  List l=lists.get(clazz.getName());  if (l != null) {    if (!l.isEmpty()) {      obj=l.get(0);    } else {      obj=clazz.newInstance();    }    Object result=getDefaultValueForPrimitive(field.getType());    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }    if (!l.isEmpty()) {      l.set(0,obj);    } else {      l.add(0,obj);    }    lists.put(clazz.getName(),l);    obj=null;  } else {    throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());  }} @AT@ 8392 @LENGTH@ 1823
------------UPD IfStatement@@if (l != null) {  if (!l.isEmpty()) {    obj=l.get(0);  } else {    obj=clazz.newInstance();  }  Object result=getDefaultValueforPrimitive(field.getType());  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }  if (!l.isEmpty()) {    l.set(0,obj);  } else {    l.add(0,obj);  }  lists.put(clazz.getName(),l);  obj=null;} else {  throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());} @TO@ if (l != null) {  if (!l.isEmpty()) {    obj=l.get(0);  } else {    obj=clazz.newInstance();  }  Object result=getDefaultValueForPrimitive(field.getType());  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }  if (!l.isEmpty()) {    l.set(0,obj);  } else {    l.add(0,obj);  }  lists.put(clazz.getName(),l);  obj=null;} else {  throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());} @AT@ 8780 @LENGTH@ 1412
---------------UPD Block@@ThenBody:{  if (!l.isEmpty()) {    obj=l.get(0);  } else {    obj=clazz.newInstance();  }  Object result=getDefaultValueforPrimitive(field.getType());  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }  if (!l.isEmpty()) {    l.set(0,obj);  } else {    l.add(0,obj);  }  lists.put(clazz.getName(),l);  obj=null;} @TO@ ThenBody:{  if (!l.isEmpty()) {    obj=l.get(0);  } else {    obj=clazz.newInstance();  }  Object result=getDefaultValueForPrimitive(field.getType());  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }  if (!l.isEmpty()) {    l.set(0,obj);  } else {    l.add(0,obj);  }  lists.put(clazz.getName(),l);  obj=null;} @AT@ 8795 @LENGTH@ 1191
------------------UPD VariableDeclarationStatement@@Object result=getDefaultValueforPrimitive(field.getType()); @TO@ Object result=getDefaultValueForPrimitive(field.getType()); @AT@ 9101 @LENGTH@ 61
---------------------UPD VariableDeclarationFragment@@result=getDefaultValueforPrimitive(field.getType()) @TO@ result=getDefaultValueForPrimitive(field.getType()) @AT@ 9108 @LENGTH@ 53
------------------------UPD MethodInvocation@@getDefaultValueforPrimitive(field.getType()) @TO@ getDefaultValueForPrimitive(field.getType()) @AT@ 9117 @LENGTH@ 44
---------------------------UPD SimpleName@@MethodName:getDefaultValueforPrimitive:[field.getType()] @TO@ MethodName:getDefaultValueForPrimitive:[field.getType()] @AT@ 9117 @LENGTH@ 44
---UPD Block@@ElseBody:{  if (values.size() >= 1) {    if (obj != null) {      value=(String)values.get(0);      Object result=null;      if (value != null) {        String pattern=keyValuePairField.pattern();        Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());        result=formatField(format,value,key,line);        if (LOG.isDebugEnabled()) {          LOG.debug("Value formated : " + result);        }      } else {        result=getDefaultValueforPrimitive(field.getType());      }      try {        field.set(obj,result);      } catch (      Exception e) {        throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);      }    } else {      List l=lists.get(clazz.getName());      if (l != null) {        for (int i=0; i < values.size(); i++) {          if ((!l.isEmpty()) && (l.size() > i)) {            obj=l.get(i);          } else {            obj=clazz.newInstance();          }          value=(String)values.get(i);          String pattern=keyValuePairField.pattern();          Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());          Object result=formatField(format,value,key,line);          if (LOG.isDebugEnabled()) {            LOG.debug("Value formated : " + result);          }          try {            if (value != null) {              field.set(obj,result);            } else {              field.set(obj,getDefaultValueforPrimitive(field.getType()));            }          } catch (          Exception e) {            throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);          }          if ((!l.isEmpty()) && (l.size() > i)) {            l.set(i,obj);          } else {            l.add(i,obj);          }          lists.put(clazz.getName(),l);          obj=null;        }      } else {        throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());      }    }  } else {    Object result=getDefaultValueforPrimitive(field.getType());    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }  }} @TO@ ElseBody:{  if (values.size() >= 1) {    if (obj != null) {      value=(String)values.get(0);      Object result=null;      if (value != null) {        String pattern=keyValuePairField.pattern();        Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());        result=formatField(format,value,key,line);        if (LOG.isDebugEnabled()) {          LOG.debug("Value formated : " + result);        }      } else {        result=getDefaultValueForPrimitive(field.getType());      }      try {        field.set(obj,result);      } catch (      Exception e) {        throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);      }    } else {      List l=lists.get(clazz.getName());      if (l != null) {        for (int i=0; i < values.size(); i++) {          if ((!l.isEmpty()) && (l.size() > i)) {            obj=l.get(i);          } else {            obj=clazz.newInstance();          }          value=(String)values.get(i);          String pattern=keyValuePairField.pattern();          Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());          Object result=formatField(format,value,key,line);          if (LOG.isDebugEnabled()) {            LOG.debug("Value formated : " + result);          }          try {            if (value != null) {              field.set(obj,result);            } else {              field.set(obj,getDefaultValueForPrimitive(field.getType()));            }          } catch (          Exception e) {            throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);          }          if ((!l.isEmpty()) && (l.size() > i)) {            l.set(i,obj);          } else {            l.add(i,obj);          }          lists.put(clazz.getName(),l);          obj=null;        }      } else {        throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());      }    }  } else {    Object result=getDefaultValueForPrimitive(field.getType());    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }  }} @AT@ 10270 @LENGTH@ 5093
------UPD IfStatement@@if (values.size() >= 1) {  if (obj != null) {    value=(String)values.get(0);    Object result=null;    if (value != null) {      String pattern=keyValuePairField.pattern();      Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());      result=formatField(format,value,key,line);      if (LOG.isDebugEnabled()) {        LOG.debug("Value formated : " + result);      }    } else {      result=getDefaultValueforPrimitive(field.getType());    }    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }  } else {    List l=lists.get(clazz.getName());    if (l != null) {      for (int i=0; i < values.size(); i++) {        if ((!l.isEmpty()) && (l.size() > i)) {          obj=l.get(i);        } else {          obj=clazz.newInstance();        }        value=(String)values.get(i);        String pattern=keyValuePairField.pattern();        Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());        Object result=formatField(format,value,key,line);        if (LOG.isDebugEnabled()) {          LOG.debug("Value formated : " + result);        }        try {          if (value != null) {            field.set(obj,result);          } else {            field.set(obj,getDefaultValueforPrimitive(field.getType()));          }        } catch (        Exception e) {          throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);        }        if ((!l.isEmpty()) && (l.size() > i)) {          l.set(i,obj);        } else {          l.add(i,obj);        }        lists.put(clazz.getName(),l);        obj=null;      }    } else {      throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());    }  }} else {  Object result=getDefaultValueforPrimitive(field.getType());  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }} @TO@ if (values.size() >= 1) {  if (obj != null) {    value=(String)values.get(0);    Object result=null;    if (value != null) {      String pattern=keyValuePairField.pattern();      Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());      result=formatField(format,value,key,line);      if (LOG.isDebugEnabled()) {        LOG.debug("Value formated : " + result);      }    } else {      result=getDefaultValueForPrimitive(field.getType());    }    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }  } else {    List l=lists.get(clazz.getName());    if (l != null) {      for (int i=0; i < values.size(); i++) {        if ((!l.isEmpty()) && (l.size() > i)) {          obj=l.get(i);        } else {          obj=clazz.newInstance();        }        value=(String)values.get(i);        String pattern=keyValuePairField.pattern();        Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());        Object result=formatField(format,value,key,line);        if (LOG.isDebugEnabled()) {          LOG.debug("Value formated : " + result);        }        try {          if (value != null) {            field.set(obj,result);          } else {            field.set(obj,getDefaultValueForPrimitive(field.getType()));          }        } catch (        Exception e) {          throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);        }        if ((!l.isEmpty()) && (l.size() > i)) {          l.set(i,obj);        } else {          l.add(i,obj);        }        lists.put(clazz.getName(),l);        obj=null;      }    } else {      throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());    }  }} else {  Object result=getDefaultValueForPrimitive(field.getType());  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }} @AT@ 10354 @LENGTH@ 4991
---------UPD Block@@ThenBody:{  if (obj != null) {    value=(String)values.get(0);    Object result=null;    if (value != null) {      String pattern=keyValuePairField.pattern();      Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());      result=formatField(format,value,key,line);      if (LOG.isDebugEnabled()) {        LOG.debug("Value formated : " + result);      }    } else {      result=getDefaultValueforPrimitive(field.getType());    }    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }  } else {    List l=lists.get(clazz.getName());    if (l != null) {      for (int i=0; i < values.size(); i++) {        if ((!l.isEmpty()) && (l.size() > i)) {          obj=l.get(i);        } else {          obj=clazz.newInstance();        }        value=(String)values.get(i);        String pattern=keyValuePairField.pattern();        Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());        Object result=formatField(format,value,key,line);        if (LOG.isDebugEnabled()) {          LOG.debug("Value formated : " + result);        }        try {          if (value != null) {            field.set(obj,result);          } else {            field.set(obj,getDefaultValueforPrimitive(field.getType()));          }        } catch (        Exception e) {          throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);        }        if ((!l.isEmpty()) && (l.size() > i)) {          l.set(i,obj);        } else {          l.add(i,obj);        }        lists.put(clazz.getName(),l);        obj=null;      }    } else {      throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());    }  }} @TO@ ThenBody:{  if (obj != null) {    value=(String)values.get(0);    Object result=null;    if (value != null) {      String pattern=keyValuePairField.pattern();      Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());      result=formatField(format,value,key,line);      if (LOG.isDebugEnabled()) {        LOG.debug("Value formated : " + result);      }    } else {      result=getDefaultValueForPrimitive(field.getType());    }    try {      field.set(obj,result);    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }  } else {    List l=lists.get(clazz.getName());    if (l != null) {      for (int i=0; i < values.size(); i++) {        if ((!l.isEmpty()) && (l.size() > i)) {          obj=l.get(i);        } else {          obj=clazz.newInstance();        }        value=(String)values.get(i);        String pattern=keyValuePairField.pattern();        Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());        Object result=formatField(format,value,key,line);        if (LOG.isDebugEnabled()) {          LOG.debug("Value formated : " + result);        }        try {          if (value != null) {            field.set(obj,result);          } else {            field.set(obj,getDefaultValueForPrimitive(field.getType()));          }        } catch (        Exception e) {          throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);        }        if ((!l.isEmpty()) && (l.size() > i)) {          l.set(i,obj);        } else {          l.add(i,obj);        }        lists.put(clazz.getName(),l);        obj=null;      }    } else {      throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());    }  }} @AT@ 10378 @LENGTH@ 4485
------------UPD IfStatement@@if (obj != null) {  value=(String)values.get(0);  Object result=null;  if (value != null) {    String pattern=keyValuePairField.pattern();    Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());    result=formatField(format,value,key,line);    if (LOG.isDebugEnabled()) {      LOG.debug("Value formated : " + result);    }  } else {    result=getDefaultValueforPrimitive(field.getType());  }  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }} else {  List l=lists.get(clazz.getName());  if (l != null) {    for (int i=0; i < values.size(); i++) {      if ((!l.isEmpty()) && (l.size() > i)) {        obj=l.get(i);      } else {        obj=clazz.newInstance();      }      value=(String)values.get(i);      String pattern=keyValuePairField.pattern();      Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());      Object result=formatField(format,value,key,line);      if (LOG.isDebugEnabled()) {        LOG.debug("Value formated : " + result);      }      try {        if (value != null) {          field.set(obj,result);        } else {          field.set(obj,getDefaultValueforPrimitive(field.getType()));        }      } catch (      Exception e) {        throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);      }      if ((!l.isEmpty()) && (l.size() > i)) {        l.set(i,obj);      } else {        l.add(i,obj);      }      lists.put(clazz.getName(),l);      obj=null;    }  } else {    throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());  }} @TO@ if (obj != null) {  value=(String)values.get(0);  Object result=null;  if (value != null) {    String pattern=keyValuePairField.pattern();    Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());    result=formatField(format,value,key,line);    if (LOG.isDebugEnabled()) {      LOG.debug("Value formated : " + result);    }  } else {    result=getDefaultValueForPrimitive(field.getType());  }  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }} else {  List l=lists.get(clazz.getName());  if (l != null) {    for (int i=0; i < values.size(); i++) {      if ((!l.isEmpty()) && (l.size() > i)) {        obj=l.get(i);      } else {        obj=clazz.newInstance();      }      value=(String)values.get(i);      String pattern=keyValuePairField.pattern();      Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());      Object result=formatField(format,value,key,line);      if (LOG.isDebugEnabled()) {        LOG.debug("Value formated : " + result);      }      try {        if (value != null) {          field.set(obj,result);        } else {          field.set(obj,getDefaultValueForPrimitive(field.getType()));        }      } catch (      Exception e) {        throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);      }      if ((!l.isEmpty()) && (l.size() > i)) {        l.set(i,obj);      } else {        l.add(i,obj);      }      lists.put(clazz.getName(),l);      obj=null;    }  } else {    throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());  }} @AT@ 10405 @LENGTH@ 4435
---------------UPD Block@@ThenBody:{  value=(String)values.get(0);  Object result=null;  if (value != null) {    String pattern=keyValuePairField.pattern();    Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());    result=formatField(format,value,key,line);    if (LOG.isDebugEnabled()) {      LOG.debug("Value formated : " + result);    }  } else {    result=getDefaultValueforPrimitive(field.getType());  }  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }} @TO@ ThenBody:{  value=(String)values.get(0);  Object result=null;  if (value != null) {    String pattern=keyValuePairField.pattern();    Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());    result=formatField(format,value,key,line);    if (LOG.isDebugEnabled()) {      LOG.debug("Value formated : " + result);    }  } else {    result=getDefaultValueForPrimitive(field.getType());  }  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }} @AT@ 10422 @LENGTH@ 1479
------------------UPD IfStatement@@if (value != null) {  String pattern=keyValuePairField.pattern();  Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());  result=formatField(format,value,key,line);  if (LOG.isDebugEnabled()) {    LOG.debug("Value formated : " + result);  }} else {  result=getDefaultValueforPrimitive(field.getType());} @TO@ if (value != null) {  String pattern=keyValuePairField.pattern();  Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());  result=formatField(format,value,key,line);  if (LOG.isDebugEnabled()) {    LOG.debug("Value formated : " + result);  }} else {  result=getDefaultValueForPrimitive(field.getType());} @AT@ 10612 @LENGTH@ 858
---------------------UPD Block@@ElseBody:{  result=getDefaultValueforPrimitive(field.getType());} @TO@ ElseBody:{  result=getDefaultValueForPrimitive(field.getType());} @AT@ 11352 @LENGTH@ 118
------------------------UPD ExpressionStatement@@Assignment:result=getDefaultValueforPrimitive(field.getType()) @TO@ Assignment:result=getDefaultValueForPrimitive(field.getType()) @AT@ 11386 @LENGTH@ 54
---------------------------UPD Assignment@@result=getDefaultValueforPrimitive(field.getType()) @TO@ result=getDefaultValueForPrimitive(field.getType()) @AT@ 11386 @LENGTH@ 53
------------------------------UPD MethodInvocation@@getDefaultValueforPrimitive(field.getType()) @TO@ getDefaultValueForPrimitive(field.getType()) @AT@ 11395 @LENGTH@ 44
---------------------------------UPD SimpleName@@MethodName:getDefaultValueforPrimitive:[field.getType()] @TO@ MethodName:getDefaultValueForPrimitive:[field.getType()] @AT@ 11395 @LENGTH@ 44
---------------UPD Block@@ElseBody:{  List l=lists.get(clazz.getName());  if (l != null) {    for (int i=0; i < values.size(); i++) {      if ((!l.isEmpty()) && (l.size() > i)) {        obj=l.get(i);      } else {        obj=clazz.newInstance();      }      value=(String)values.get(i);      String pattern=keyValuePairField.pattern();      Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());      Object result=formatField(format,value,key,line);      if (LOG.isDebugEnabled()) {        LOG.debug("Value formated : " + result);      }      try {        if (value != null) {          field.set(obj,result);        } else {          field.set(obj,getDefaultValueforPrimitive(field.getType()));        }      } catch (      Exception e) {        throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);      }      if ((!l.isEmpty()) && (l.size() > i)) {        l.set(i,obj);      } else {        l.add(i,obj);      }      lists.put(clazz.getName(),l);      obj=null;    }  } else {    throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());  }} @TO@ ElseBody:{  List l=lists.get(clazz.getName());  if (l != null) {    for (int i=0; i < values.size(); i++) {      if ((!l.isEmpty()) && (l.size() > i)) {        obj=l.get(i);      } else {        obj=clazz.newInstance();      }      value=(String)values.get(i);      String pattern=keyValuePairField.pattern();      Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());      Object result=formatField(format,value,key,line);      if (LOG.isDebugEnabled()) {        LOG.debug("Value formated : " + result);      }      try {        if (value != null) {          field.set(obj,result);        } else {          field.set(obj,getDefaultValueForPrimitive(field.getType()));        }      } catch (      Exception e) {        throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);      }      if ((!l.isEmpty()) && (l.size() > i)) {        l.set(i,obj);      } else {        l.add(i,obj);      }      lists.put(clazz.getName(),l);      obj=null;    }  } else {    throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());  }} @AT@ 11907 @LENGTH@ 2933
------------------UPD IfStatement@@if (l != null) {  for (int i=0; i < values.size(); i++) {    if ((!l.isEmpty()) && (l.size() > i)) {      obj=l.get(i);    } else {      obj=clazz.newInstance();    }    value=(String)values.get(i);    String pattern=keyValuePairField.pattern();    Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());    Object result=formatField(format,value,key,line);    if (LOG.isDebugEnabled()) {      LOG.debug("Value formated : " + result);    }    try {      if (value != null) {        field.set(obj,result);      } else {        field.set(obj,getDefaultValueforPrimitive(field.getType()));      }    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }    if ((!l.isEmpty()) && (l.size() > i)) {      l.set(i,obj);    } else {      l.add(i,obj);    }    lists.put(clazz.getName(),l);    obj=null;  }} else {  throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());} @TO@ if (l != null) {  for (int i=0; i < values.size(); i++) {    if ((!l.isEmpty()) && (l.size() > i)) {      obj=l.get(i);    } else {      obj=clazz.newInstance();    }    value=(String)values.get(i);    String pattern=keyValuePairField.pattern();    Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());    Object result=formatField(format,value,key,line);    if (LOG.isDebugEnabled()) {      LOG.debug("Value formated : " + result);    }    try {      if (value != null) {        field.set(obj,result);      } else {        field.set(obj,getDefaultValueForPrimitive(field.getType()));      }    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }    if ((!l.isEmpty()) && (l.size() > i)) {      l.set(i,obj);    } else {      l.add(i,obj);    }    lists.put(clazz.getName(),l);    obj=null;  }} else {  throw new IllegalArgumentException("The list of values is empty for the following key : " + key + " defined in the class : "+ clazz.getName());} @AT@ 12053 @LENGTH@ 2761
---------------------UPD Block@@ThenBody:{  for (int i=0; i < values.size(); i++) {    if ((!l.isEmpty()) && (l.size() > i)) {      obj=l.get(i);    } else {      obj=clazz.newInstance();    }    value=(String)values.get(i);    String pattern=keyValuePairField.pattern();    Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());    Object result=formatField(format,value,key,line);    if (LOG.isDebugEnabled()) {      LOG.debug("Value formated : " + result);    }    try {      if (value != null) {        field.set(obj,result);      } else {        field.set(obj,getDefaultValueforPrimitive(field.getType()));      }    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }    if ((!l.isEmpty()) && (l.size() > i)) {      l.set(i,obj);    } else {      l.add(i,obj);    }    lists.put(clazz.getName(),l);    obj=null;  }} @TO@ ThenBody:{  for (int i=0; i < values.size(); i++) {    if ((!l.isEmpty()) && (l.size() > i)) {      obj=l.get(i);    } else {      obj=clazz.newInstance();    }    value=(String)values.get(i);    String pattern=keyValuePairField.pattern();    Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());    Object result=formatField(format,value,key,line);    if (LOG.isDebugEnabled()) {      LOG.debug("Value formated : " + result);    }    try {      if (value != null) {        field.set(obj,result);      } else {        field.set(obj,getDefaultValueForPrimitive(field.getType()));      }    } catch (    Exception e) {      throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);    }    if ((!l.isEmpty()) && (l.size() > i)) {      l.set(i,obj);    } else {      l.add(i,obj);    }    lists.put(clazz.getName(),l);    obj=null;  }} @AT@ 12068 @LENGTH@ 2532
------------------------UPD ForStatement@@for (int i=0; i < values.size(); i++) {  if ((!l.isEmpty()) && (l.size() > i)) {    obj=l.get(i);  } else {    obj=clazz.newInstance();  }  value=(String)values.get(i);  String pattern=keyValuePairField.pattern();  Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());  Object result=formatField(format,value,key,line);  if (LOG.isDebugEnabled()) {    LOG.debug("Value formated : " + result);  }  try {    if (value != null) {      field.set(obj,result);    } else {      field.set(obj,getDefaultValueforPrimitive(field.getType()));    }  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }  if ((!l.isEmpty()) && (l.size() > i)) {    l.set(i,obj);  } else {    l.add(i,obj);  }  lists.put(clazz.getName(),l);  obj=null;} @TO@ for (int i=0; i < values.size(); i++) {  if ((!l.isEmpty()) && (l.size() > i)) {    obj=l.get(i);  } else {    obj=clazz.newInstance();  }  value=(String)values.get(i);  String pattern=keyValuePairField.pattern();  Format<?> format=FormatFactory.getFormat(field.getType(),pattern,keyValuePairField.precision());  Object result=formatField(format,value,key,line);  if (LOG.isDebugEnabled()) {    LOG.debug("Value formated : " + result);  }  try {    if (value != null) {      field.set(obj,result);    } else {      field.set(obj,getDefaultValueForPrimitive(field.getType()));    }  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }  if ((!l.isEmpty()) && (l.size() > i)) {    l.set(i,obj);  } else {    l.add(i,obj);  }  lists.put(clazz.getName(),l);  obj=null;} @AT@ 12157 @LENGTH@ 2412
---------------------------UPD TryStatement@@try {  if (value != null) {    field.set(obj,result);  } else {    field.set(obj,getDefaultValueforPrimitive(field.getType()));  }} catch (Exception e) {  throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);} @TO@ try {  if (value != null) {    field.set(obj,result);  } else {    field.set(obj,getDefaultValueForPrimitive(field.getType()));  }} catch (Exception e) {  throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);} @AT@ 13373 @LENGTH@ 594
------------------------------UPD IfStatement@@if (value != null) {  field.set(obj,result);} else {  field.set(obj,getDefaultValueforPrimitive(field.getType()));} @TO@ if (value != null) {  field.set(obj,result);} else {  field.set(obj,getDefaultValueForPrimitive(field.getType()));} @AT@ 13419 @LENGTH@ 285
---------------------------------UPD Block@@ElseBody:{  field.set(obj,getDefaultValueforPrimitive(field.getType()));} @TO@ ElseBody:{  field.set(obj,getDefaultValueForPrimitive(field.getType()));} @AT@ 13555 @LENGTH@ 149
------------------------------------UPD ExpressionStatement@@MethodInvocation:field.set(obj,getDefaultValueforPrimitive(field.getType())) @TO@ MethodInvocation:field.set(obj,getDefaultValueForPrimitive(field.getType())) @AT@ 13601 @LENGTH@ 61
---------------------------------------UPD MethodInvocation@@field.set(obj,getDefaultValueforPrimitive(field.getType())) @TO@ field.set(obj,getDefaultValueForPrimitive(field.getType())) @AT@ 13601 @LENGTH@ 60
------------------------------------------UPD SimpleName@@MethodName:set:[obj, getDefaultValueforPrimitive(field.getType())] @TO@ MethodName:set:[obj, getDefaultValueForPrimitive(field.getType())] @AT@ 13607 @LENGTH@ 54
---------------------------------------------UPD MethodInvocation@@getDefaultValueforPrimitive(field.getType()) @TO@ getDefaultValueForPrimitive(field.getType()) @AT@ 13616 @LENGTH@ 44
------------------------------------------------UPD SimpleName@@MethodName:getDefaultValueforPrimitive:[field.getType()] @TO@ MethodName:getDefaultValueForPrimitive:[field.getType()] @AT@ 13616 @LENGTH@ 44
---------UPD Block@@ElseBody:{  Object result=getDefaultValueforPrimitive(field.getType());  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }} @TO@ ElseBody:{  Object result=getDefaultValueForPrimitive(field.getType());  try {    field.set(obj,result);  } catch (  Exception e) {    throw new IllegalArgumentException("Setting of field " + field + " failed for object : "+ obj+ " and result : "+ result);  }} @AT@ 14869 @LENGTH@ 476
------------UPD VariableDeclarationStatement@@Object result=getDefaultValueforPrimitive(field.getType()); @TO@ Object result=getDefaultValueForPrimitive(field.getType()); @AT@ 14952 @LENGTH@ 61
---------------UPD VariableDeclarationFragment@@result=getDefaultValueforPrimitive(field.getType()) @TO@ result=getDefaultValueForPrimitive(field.getType()) @AT@ 14959 @LENGTH@ 53
------------------UPD MethodInvocation@@getDefaultValueforPrimitive(field.getType()) @TO@ getDefaultValueForPrimitive(field.getType()) @AT@ 14968 @LENGTH@ 44
---------------------UPD SimpleName@@MethodName:getDefaultValueforPrimitive:[field.getType()] @TO@ MethodName:getDefaultValueForPrimitive:[field.getType()] @AT@ 14968 @LENGTH@ 44


UPD ExpressionStatement@@MethodInvocation:assertMatch("aaa","*?",false) @TO@ MethodInvocation:assertMatch("aaa","aa*?",true) @AT@ 10801 @LENGTH@ 32
---UPD MethodInvocation@@assertMatch("aaa","*?",false) @TO@ assertMatch("aaa","aa*?",true) @AT@ 10801 @LENGTH@ 31
------UPD SimpleName@@MethodName:assertMatch:["aaa", "*?", false] @TO@ MethodName:assertMatch:["aaa", "aa*?", true] @AT@ 10801 @LENGTH@ 31
---------UPD StringLiteral@@"*?" @TO@ "aa*?" @AT@ 10820 @LENGTH@ 4
---------UPD BooleanLiteral@@false @TO@ true @AT@ 10826 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals("Starting directory does not exist: target/file/foo",e.getMessage()) @TO@ MethodInvocation:assertTrue(e.getMessage().startsWith("Starting directory does not exist")) @AT@ 3849 @LENGTH@ 83
---UPD MethodInvocation@@assertEquals("Starting directory does not exist: target/file/foo",e.getMessage()) @TO@ assertTrue(e.getMessage().startsWith("Starting directory does not exist")) @AT@ 3849 @LENGTH@ 82
------UPD SimpleName@@MethodName:assertEquals:["Starting directory does not exist: target/file/foo", e.getMessage()] @TO@ MethodName:assertTrue:[e.getMessage().startsWith("Starting directory does not exist")] @AT@ 3849 @LENGTH@ 82
---------DEL StringLiteral@@"Starting directory does not exist: target/file/foo" @AT@ 3862 @LENGTH@ 52
---------UPD MethodInvocation@@e.getMessage() @TO@ e.getMessage().startsWith("Starting directory does not exist") @AT@ 3916 @LENGTH@ 14
------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 3860 @LENGTH@ 14
------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 3860 @LENGTH@ 14
------------UPD SimpleName@@MethodName:getMessage:[] @TO@ MethodName:startsWith:["Starting directory does not exist"] @AT@ 3918 @LENGTH@ 12
---------------INS StringLiteral@@"Starting directory does not exist" @TO@ SimpleName@@MethodName:getMessage:[] @AT@ 3886 @LENGTH@ 35
---------------INS StringLiteral@@"Starting directory does not exist" @TO@ SimpleName@@MethodName:getMessage:[] @AT@ 3886 @LENGTH@ 35


UPD VariableDeclarationStatement@@Properties cfgProps=new Properties(properties); @TO@ Properties cfgProps=(properties != null ? (Properties)properties.clone() : new Properties()); @AT@ 4340 @LENGTH@ 49
---UPD VariableDeclarationFragment@@cfgProps=new Properties(properties) @TO@ cfgProps=(properties != null ? (Properties)properties.clone() : new Properties()) @AT@ 4351 @LENGTH@ 37
------INS ParenthesizedExpression@@(properties != null ? (Properties)properties.clone() : new Properties()) @TO@ VariableDeclarationFragment@@cfgProps=new Properties(properties) @AT@ 4362 @LENGTH@ 73
---------INS ConditionalExpression@@properties != null ? (Properties)properties.clone() : new Properties() @TO@ ParenthesizedExpression@@(properties != null ? (Properties)properties.clone() : new Properties()) @AT@ 4363 @LENGTH@ 71
------------INS InfixExpression@@properties != null @TO@ ConditionalExpression@@properties != null ? (Properties)properties.clone() : new Properties() @AT@ 4363 @LENGTH@ 18
---------------INS SimpleName@@properties @TO@ InfixExpression@@properties != null @AT@ 4363 @LENGTH@ 10
---------------INS Operator@@!= @TO@ InfixExpression@@properties != null @AT@ 4373 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@properties != null @AT@ 4377 @LENGTH@ 4
------------INS CastExpression@@(Properties)properties.clone() @TO@ ConditionalExpression@@properties != null ? (Properties)properties.clone() : new Properties() @AT@ 4384 @LENGTH@ 31
---------------INS SimpleType@@Properties @TO@ CastExpression@@(Properties)properties.clone() @AT@ 4385 @LENGTH@ 10
---------------INS MethodInvocation@@properties.clone() @TO@ CastExpression@@(Properties)properties.clone() @AT@ 4397 @LENGTH@ 18
------------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.clone() @AT@ 4397 @LENGTH@ 10
------------------INS SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@properties.clone() @AT@ 4408 @LENGTH@ 7
------------INS ClassInstanceCreation@@Properties[] @TO@ ConditionalExpression@@properties != null ? (Properties)properties.clone() : new Properties() @AT@ 4418 @LENGTH@ 16
---------------MOV New@@new @TO@ ClassInstanceCreation@@Properties[] @AT@ 4362 @LENGTH@ 3
---------------MOV SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[] @AT@ 4366 @LENGTH@ 10
------DEL ClassInstanceCreation@@Properties[properties] @AT@ 4362 @LENGTH@ 26
---------DEL SimpleName@@properties @AT@ 4377 @LENGTH@ 10


DEL MethodDeclaration@@protected, abstract, void, MethodName:processXmlStream, XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 2471 @LENGTH@ 99
---DEL Modifier@@protected @AT@ 2471 @LENGTH@ 9
---DEL Modifier@@abstract @AT@ 2481 @LENGTH@ 8
---DEL PrimitiveType@@void @AT@ 2490 @LENGTH@ 4
---DEL SimpleName@@MethodName:processXmlStream @AT@ 2495 @LENGTH@ 16
---DEL SingleVariableDeclaration@@XMLExtendedStreamReader reader @AT@ 2512 @LENGTH@ 30
------DEL SimpleType@@XMLExtendedStreamReader @AT@ 2512 @LENGTH@ 23
------DEL SimpleName@@reader @AT@ 2536 @LENGTH@ 6
---DEL SimpleType@@XMLStreamException @AT@ 2551 @LENGTH@ 18


UPD EnhancedForStatement@@for (JavaType javaType : dbreTableService.getDatabaseManagedEntities()) {  if (!isDetectedEntityInModel(javaType,tables)) {    deleteManagedTypes(javaType,managedIdentifierTypes);  }} @TO@ for (JavaType javaType : managedEntities) {  if (!isDetectedEntityInModel(javaType,tables)) {    deleteManagedTypes(javaType,managedIdentifierTypes);  }} @AT@ 13694 @LENGTH@ 282
---DEL MethodInvocation@@dbreTableService.getDatabaseManagedEntities() @AT@ 13719 @LENGTH@ 45
------DEL SimpleName@@Name:dbreTableService @AT@ 13719 @LENGTH@ 16
------DEL SimpleName@@MethodName:getDatabaseManagedEntities:[] @AT@ 13736 @LENGTH@ 28
---INS SimpleName@@managedEntities @TO@ EnhancedForStatement@@for (JavaType javaType : dbreTableService.getDatabaseManagedEntities()) {  if (!isDetectedEntityInModel(javaType,tables)) {    deleteManagedTypes(javaType,managedIdentifierTypes);  }} @AT@ 13800 @LENGTH@ 15


UPD TryStatement@@try {  if (logger.isDebugEnabled()) {    logger.debug("Rolling back messages to channel: " + channel);  }  channel.basicRecover(true);  channel.txRollback();} catch (Throwable ex) {  logger.debug("Could not rollback received messages on Rabbit Channel after transaction",ex);} @TO@ try {  if (logger.isDebugEnabled()) {    logger.debug("Rolling back messages to channel: " + channel);  }  if (deliveryTags.containsKey(channel)) {    for (    Long deliveryTag : deliveryTags.get(channel)) {      channel.basicReject(deliveryTag,true);    }  }  channel.txRollback();} catch (Throwable ex) {  logger.debug("Could not rollback received messages on Rabbit Channel after transaction",ex);} @AT@ 6620 @LENGTH@ 300
---INS IfStatement@@if (deliveryTags.containsKey(channel)) {  for (  Long deliveryTag : deliveryTags.get(channel)) {    channel.basicReject(deliveryTag,true);  }} @TO@ TryStatement@@try {  if (logger.isDebugEnabled()) {    logger.debug("Rolling back messages to channel: " + channel);  }  channel.basicRecover(true);  channel.txRollback();} catch (Throwable ex) {  logger.debug("Could not rollback received messages on Rabbit Channel after transaction",ex);} @AT@ 6736 @LENGTH@ 157
------INS MethodInvocation@@deliveryTags.containsKey(channel) @TO@ IfStatement@@if (deliveryTags.containsKey(channel)) {  for (  Long deliveryTag : deliveryTags.get(channel)) {    channel.basicReject(deliveryTag,true);  }} @AT@ 6740 @LENGTH@ 33
---------INS SimpleName@@Name:deliveryTags @TO@ MethodInvocation@@deliveryTags.containsKey(channel) @AT@ 6740 @LENGTH@ 12
---------INS SimpleName@@MethodName:containsKey:[channel] @TO@ MethodInvocation@@deliveryTags.containsKey(channel) @AT@ 6753 @LENGTH@ 20
------------INS SimpleName@@channel @TO@ SimpleName@@MethodName:containsKey:[channel] @AT@ 6765 @LENGTH@ 7
------INS Block@@ThenBody:{  for (  Long deliveryTag : deliveryTags.get(channel)) {    channel.basicReject(deliveryTag,true);  }} @TO@ IfStatement@@if (deliveryTags.containsKey(channel)) {  for (  Long deliveryTag : deliveryTags.get(channel)) {    channel.basicReject(deliveryTag,true);  }} @AT@ 6775 @LENGTH@ 118
---------INS EnhancedForStatement@@for (Long deliveryTag : deliveryTags.get(channel)) {  channel.basicReject(deliveryTag,true);} @TO@ Block@@ThenBody:{  for (  Long deliveryTag : deliveryTags.get(channel)) {    channel.basicReject(deliveryTag,true);  }} @AT@ 6782 @LENGTH@ 105
------------INS SingleVariableDeclaration@@Long deliveryTag @TO@ EnhancedForStatement@@for (Long deliveryTag : deliveryTags.get(channel)) {  channel.basicReject(deliveryTag,true);} @AT@ 6787 @LENGTH@ 16
---------------INS SimpleType@@Long @TO@ SingleVariableDeclaration@@Long deliveryTag @AT@ 6787 @LENGTH@ 4
---------------INS SimpleName@@deliveryTag @TO@ SingleVariableDeclaration@@Long deliveryTag @AT@ 6792 @LENGTH@ 11
------------INS MethodInvocation@@deliveryTags.get(channel) @TO@ EnhancedForStatement@@for (Long deliveryTag : deliveryTags.get(channel)) {  channel.basicReject(deliveryTag,true);} @AT@ 6806 @LENGTH@ 25
---------------INS SimpleName@@Name:deliveryTags @TO@ MethodInvocation@@deliveryTags.get(channel) @AT@ 6806 @LENGTH@ 12
---------------INS SimpleName@@MethodName:get:[channel] @TO@ MethodInvocation@@deliveryTags.get(channel) @AT@ 6819 @LENGTH@ 12
------------------INS SimpleName@@channel @TO@ SimpleName@@MethodName:get:[channel] @AT@ 6823 @LENGTH@ 7
------------INS ExpressionStatement@@MethodInvocation:channel.basicReject(deliveryTag,true) @TO@ EnhancedForStatement@@for (Long deliveryTag : deliveryTags.get(channel)) {  channel.basicReject(deliveryTag,true);} @AT@ 6841 @LENGTH@ 39
---------------MOV MethodInvocation@@channel.basicRecover(true) @TO@ ExpressionStatement@@MethodInvocation:channel.basicReject(deliveryTag,true) @AT@ 6736 @LENGTH@ 26
------------------UPD SimpleName@@MethodName:basicRecover:[true] @TO@ MethodName:basicReject:[deliveryTag, true] @AT@ 6744 @LENGTH@ 18
---------------------INS SimpleName@@deliveryTag @TO@ SimpleName@@MethodName:basicRecover:[true] @AT@ 6861 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:channel.basicRecover(true) @AT@ 6736 @LENGTH@ 27


DEL MethodDeclaration@@protected, boolean, MethodName:useJmx,  @AT@ 1626 @LENGTH@ 55
---DEL Modifier@@protected @AT@ 1626 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1636 @LENGTH@ 7
---DEL SimpleName@@MethodName:useJmx @AT@ 1644 @LENGTH@ 6
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1663 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1670 @LENGTH@ 4


UPD TryStatement@@try {  done=true;  if (isPollAllowed()) {    if (retryCounter == -1) {      if (LOG.isTraceEnabled()) {        LOG.trace("Starting to poll: " + this.getEndpoint());      }    } else {      if (LOG.isDebugEnabled()) {        LOG.debug("Retrying attempt " + retryCounter + " to poll: "+ this.getEndpoint());      }    }    boolean begin=pollStrategy.begin(this,getEndpoint());    if (begin) {      retryCounter++;      poll();      pollStrategy.commit(this,getEndpoint());    } else {      if (LOG.isDebugEnabled()) {        LOG.debug("Cannot begin polling as pollStrategy returned false: " + pollStrategy);      }    }  }  if (LOG.isTraceEnabled()) {    LOG.trace("Finished polling: " + this.getEndpoint());  }} catch (Exception e) {  try {    boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);    if (retry) {      done=false;    }  } catch (  Throwable t) {    log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);    done=true;  }}catch (Throwable t) {  log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);  done=true;} @TO@ try {  done=true;  if (isPollAllowed()) {    if (retryCounter == -1) {      if (LOG.isTraceEnabled()) {        LOG.trace("Starting to poll: " + this.getEndpoint());      }    } else {      if (LOG.isDebugEnabled()) {        LOG.debug("Retrying attempt " + retryCounter + " to poll: "+ this.getEndpoint());      }    }    boolean begin=pollStrategy.begin(this,getEndpoint());    if (begin) {      retryCounter++;      poll();      pollStrategy.commit(this,getEndpoint());    } else {      if (LOG.isDebugEnabled()) {        LOG.debug("Cannot begin polling as pollStrategy returned false: " + pollStrategy);      }    }  }  if (LOG.isTraceEnabled()) {    LOG.trace("Finished polling: " + this.getEndpoint());  }} catch (Exception e) {  try {    boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);    if (retry) {      done=false;    }  } catch (  Throwable t) {    getExceptionHandler().handleException("Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll",t);    done=true;  }}catch (Throwable t) {  getExceptionHandler().handleException("Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll",t);  done=true;} @AT@ 3080 @LENGTH@ 2324
---UPD CatchClause@@catch (Exception e) {  try {    boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);    if (retry) {      done=false;    }  } catch (  Throwable t) {    log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);    done=true;  }} @TO@ catch (Exception e) {  try {    boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);    if (retry) {      done=false;    }  } catch (  Throwable t) {    getExceptionHandler().handleException("Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll",t);    done=true;  }} @AT@ 4303 @LENGTH@ 695
------UPD TryStatement@@try {  boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);  if (retry) {    done=false;  }} catch (Throwable t) {  log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);  done=true;} @TO@ try {  boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);  if (retry) {    done=false;  }} catch (Throwable t) {  getExceptionHandler().handleException("Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll",t);  done=true;} @AT@ 4341 @LENGTH@ 643
---------UPD CatchClause@@catch (Throwable t) {  log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);  done=true;} @TO@ catch (Throwable t) {  getExceptionHandler().handleException("Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll",t);  done=true;} @AT@ 4555 @LENGTH@ 429
------------UPD ExpressionStatement@@MethodInvocation:log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @TO@ MethodInvocation:getExceptionHandler().handleException("Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll",t) @AT@ 4745 @LENGTH@ 132
---------------UPD MethodInvocation@@log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @TO@ getExceptionHandler().handleException("Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll",t) @AT@ 4745 @LENGTH@ 131
------------------INS MethodInvocation@@MethodName:getExceptionHandler:[] @TO@ MethodInvocation@@log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @AT@ 4662 @LENGTH@ 21
------------------DEL SimpleName@@Name:log @AT@ 4745 @LENGTH@ 3
------------------UPD SimpleName@@MethodName:fatal:["Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(), t] @TO@ MethodName:handleException:["Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll", t] @AT@ 4749 @LENGTH@ 127
---------------------UPD InfixExpression@@"Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage() @TO@ "Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll" @AT@ 4755 @LENGTH@ 117
------------------------UPD StringLiteral@@" could not poll endpoint: " @TO@ " failed polling endpoint: " @AT@ 4777 @LENGTH@ 28
------------------------UPD StringLiteral@@" caused by: " @TO@ ". Will try again at next poll" @AT@ 4841 @LENGTH@ 14
------------------------DEL MethodInvocation@@t.getMessage() @AT@ 4858 @LENGTH@ 14
---------------------------DEL SimpleName@@Name:t @AT@ 4858 @LENGTH@ 1
---------------------------DEL SimpleName@@MethodName:getMessage:[] @AT@ 4860 @LENGTH@ 12
---UPD CatchClause@@catch (Throwable t) {  log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);  done=true;} @TO@ catch (Throwable t) {  getExceptionHandler().handleException("Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll",t);  done=true;} @AT@ 4999 @LENGTH@ 405
------UPD ExpressionStatement@@MethodInvocation:log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @TO@ MethodInvocation:getExceptionHandler().handleException("Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll",t) @AT@ 5177 @LENGTH@ 132
---------UPD MethodInvocation@@log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @TO@ getExceptionHandler().handleException("Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll",t) @AT@ 5177 @LENGTH@ 131
------------INS MethodInvocation@@MethodName:getExceptionHandler:[] @TO@ MethodInvocation@@log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t) @AT@ 5071 @LENGTH@ 21
------------DEL SimpleName@@Name:log @AT@ 5177 @LENGTH@ 3
------------UPD SimpleName@@MethodName:fatal:["Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(), t] @TO@ MethodName:handleException:["Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll", t] @AT@ 5181 @LENGTH@ 127
---------------UPD InfixExpression@@"Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage() @TO@ "Consumer " + this + " failed polling endpoint: "+ getEndpoint().getEndpointUri()+ ". Will try again at next poll" @AT@ 5187 @LENGTH@ 117
------------------UPD StringLiteral@@" could not poll endpoint: " @TO@ " failed polling endpoint: " @AT@ 5209 @LENGTH@ 28
------------------UPD StringLiteral@@" caused by: " @TO@ ". Will try again at next poll" @AT@ 5273 @LENGTH@ 14
------------------DEL MethodInvocation@@t.getMessage() @AT@ 5290 @LENGTH@ 14
---------------------DEL SimpleName@@Name:t @AT@ 5290 @LENGTH@ 1
---------------------DEL SimpleName@@MethodName:getMessage:[] @AT@ 5292 @LENGTH@ 12


INS MethodDeclaration@@public, ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @TO@ TypeDeclaration@@[public]DefaultExecutorServiceStrategy, ServiceSupport[ExecutorServiceStrategy] @AT@ 12629 @LENGTH@ 423
---INS Modifier@@public @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 12629 @LENGTH@ 6
---INS SimpleType@@ExecutorService @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 12636 @LENGTH@ 15
---INS SimpleName@@MethodName:newSynchronousThreadPool @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 12652 @LENGTH@ 24
---INS SingleVariableDeclaration@@Object source @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 12677 @LENGTH@ 13
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object source @AT@ 12677 @LENGTH@ 6
------INS SimpleName@@source @TO@ SingleVariableDeclaration@@Object source @AT@ 12684 @LENGTH@ 6
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 12692 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 12692 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 12699 @LENGTH@ 4
---INS VariableDeclarationStatement@@ExecutorService answer=ExecutorServiceHelper.newSynchronousThreadPool(threadNamePattern,name); @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 12715 @LENGTH@ 97
------INS SimpleType@@ExecutorService @TO@ VariableDeclarationStatement@@ExecutorService answer=ExecutorServiceHelper.newSynchronousThreadPool(threadNamePattern,name); @AT@ 12715 @LENGTH@ 15
------INS VariableDeclarationFragment@@answer=ExecutorServiceHelper.newSynchronousThreadPool(threadNamePattern,name) @TO@ VariableDeclarationStatement@@ExecutorService answer=ExecutorServiceHelper.newSynchronousThreadPool(threadNamePattern,name); @AT@ 12731 @LENGTH@ 80
---------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=ExecutorServiceHelper.newSynchronousThreadPool(threadNamePattern,name) @AT@ 12731 @LENGTH@ 6
---------INS MethodInvocation@@ExecutorServiceHelper.newSynchronousThreadPool(threadNamePattern,name) @TO@ VariableDeclarationFragment@@answer=ExecutorServiceHelper.newSynchronousThreadPool(threadNamePattern,name) @AT@ 12740 @LENGTH@ 71
------------INS SimpleName@@Name:ExecutorServiceHelper @TO@ MethodInvocation@@ExecutorServiceHelper.newSynchronousThreadPool(threadNamePattern,name) @AT@ 12740 @LENGTH@ 21
------------INS SimpleName@@MethodName:newSynchronousThreadPool:[threadNamePattern, name] @TO@ MethodInvocation@@ExecutorServiceHelper.newSynchronousThreadPool(threadNamePattern,name) @AT@ 12762 @LENGTH@ 49
---------------INS SimpleName@@threadNamePattern @TO@ SimpleName@@MethodName:newSynchronousThreadPool:[threadNamePattern, name] @AT@ 12787 @LENGTH@ 17
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:newSynchronousThreadPool:[threadNamePattern, name] @AT@ 12806 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:onThreadPoolCreated(answer) @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 12821 @LENGTH@ 28
------INS MethodInvocation@@onThreadPoolCreated(answer) @TO@ ExpressionStatement@@MethodInvocation:onThreadPoolCreated(answer) @AT@ 12821 @LENGTH@ 27
---------INS SimpleName@@MethodName:onThreadPoolCreated:[answer] @TO@ MethodInvocation@@onThreadPoolCreated(answer) @AT@ 12821 @LENGTH@ 27
------------INS SimpleName@@answer @TO@ SimpleName@@MethodName:onThreadPoolCreated:[answer] @AT@ 12841 @LENGTH@ 6
---INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer);} @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 12859 @LENGTH@ 164
------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer);} @AT@ 12863 @LENGTH@ 20
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 12863 @LENGTH@ 3
---------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 12867 @LENGTH@ 16
------INS Block@@ThenBody:{  LOG.debug("Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer);} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer);} @AT@ 12885 @LENGTH@ 138
---------INS ExpressionStatement@@MethodInvocation:LOG.debug("Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer) @TO@ Block@@ThenBody:{  LOG.debug("Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer);} @AT@ 12899 @LENGTH@ 114
------------INS MethodInvocation@@LOG.debug("Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer) @AT@ 12899 @LENGTH@ 113
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer) @AT@ 12899 @LENGTH@ 3
---------------INS SimpleName@@MethodName:debug:["Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer] @TO@ MethodInvocation@@LOG.debug("Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer) @AT@ 12903 @LENGTH@ 109
------------------INS InfixExpression@@"Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer @TO@ SimpleName@@MethodName:debug:["Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer] @AT@ 12909 @LENGTH@ 102
---------------------INS StringLiteral@@"Created new synchronous thread pool for source: " @TO@ InfixExpression@@"Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer @AT@ 12909 @LENGTH@ 50
---------------------INS Operator@@+ @TO@ InfixExpression@@"Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer @AT@ 12959 @LENGTH@ 1
---------------------INS SimpleName@@source @TO@ InfixExpression@@"Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer @AT@ 12962 @LENGTH@ 6
---------------------INS StringLiteral@@" with name: " @TO@ InfixExpression@@"Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer @AT@ 12971 @LENGTH@ 14
---------------------INS SimpleName@@name @TO@ InfixExpression@@"Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer @AT@ 12988 @LENGTH@ 4
---------------------INS StringLiteral@@". -> " @TO@ InfixExpression@@"Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer @AT@ 12995 @LENGTH@ 7
---------------------INS SimpleName@@answer @TO@ InfixExpression@@"Created new synchronous thread pool for source: " + source + " with name: "+ name+ ". -> "+ answer @AT@ 13005 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:answer @TO@ MethodDeclaration@@public, ExecutorService, MethodName:newSynchronousThreadPool, Object source, String name,  @AT@ 13032 @LENGTH@ 14
------INS SimpleName@@answer @TO@ ReturnStatement@@SimpleName:answer @AT@ 13039 @LENGTH@ 6


INS MethodDeclaration@@private, String, MethodName:encode, String in,  @TO@ TypeDeclaration@@[public]CommonsClientRequest, [ClientRequest] @AT@ 2010 @LENGTH@ 159
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2010 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2018 @LENGTH@ 6
---INS SimpleName@@MethodName:encode @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2025 @LENGTH@ 6
---INS SingleVariableDeclaration@@String in @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2032 @LENGTH@ 9
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String in @AT@ 2032 @LENGTH@ 6
------INS SimpleName@@in @TO@ SingleVariableDeclaration@@String in @AT@ 2039 @LENGTH@ 2
---INS TryStatement@@try {  return URLEncoder.encode(in,"UTF-8");} catch (UnsupportedEncodingException wontHappen) {  return in;} @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2047 @LENGTH@ 119
------INS ReturnStatement@@MethodInvocation:URLEncoder.encode(in,"UTF-8") @TO@ TryStatement@@try {  return URLEncoder.encode(in,"UTF-8");} catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2056 @LENGTH@ 38
---------INS MethodInvocation@@URLEncoder.encode(in,"UTF-8") @TO@ ReturnStatement@@MethodInvocation:URLEncoder.encode(in,"UTF-8") @AT@ 2063 @LENGTH@ 30
------------INS SimpleName@@Name:URLEncoder @TO@ MethodInvocation@@URLEncoder.encode(in,"UTF-8") @AT@ 2063 @LENGTH@ 10
------------INS SimpleName@@MethodName:encode:[in, "UTF-8"] @TO@ MethodInvocation@@URLEncoder.encode(in,"UTF-8") @AT@ 2074 @LENGTH@ 19
---------------INS SimpleName@@in @TO@ SimpleName@@MethodName:encode:[in, "UTF-8"] @AT@ 2081 @LENGTH@ 2
---------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:encode:[in, "UTF-8"] @AT@ 2085 @LENGTH@ 7
------INS CatchClause@@catch (UnsupportedEncodingException wontHappen) {  return in;} @TO@ TryStatement@@try {  return URLEncoder.encode(in,"UTF-8");} catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2099 @LENGTH@ 67
---------INS SingleVariableDeclaration@@UnsupportedEncodingException wontHappen @TO@ CatchClause@@catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2106 @LENGTH@ 39
------------INS SimpleType@@UnsupportedEncodingException @TO@ SingleVariableDeclaration@@UnsupportedEncodingException wontHappen @AT@ 2106 @LENGTH@ 28
------------INS SimpleName@@wontHappen @TO@ SingleVariableDeclaration@@UnsupportedEncodingException wontHappen @AT@ 2135 @LENGTH@ 10
---------INS ReturnStatement@@SimpleName:in @TO@ CatchClause@@catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2152 @LENGTH@ 10
------------INS SimpleName@@in @TO@ ReturnStatement@@SimpleName:in @AT@ 2159 @LENGTH@ 2


UPD IfStatement@@if (properties != null) {  streamWriter.writeStartElement("properties");  properties.writeContent(streamWriter);} @TO@ if (properties != null && properties.size() > 0) {  streamWriter.writeStartElement("properties");  properties.writeContent(streamWriter);} @AT@ 3859 @LENGTH@ 144
---INS InfixExpression@@properties != null && properties.size() > 0 @TO@ IfStatement@@if (properties != null) {  streamWriter.writeStartElement("properties");  properties.writeContent(streamWriter);} @AT@ 3863 @LENGTH@ 43
------INS InfixExpression@@properties != null @TO@ InfixExpression@@properties != null && properties.size() > 0 @AT@ 3863 @LENGTH@ 18
---------MOV SimpleName@@properties @TO@ InfixExpression@@properties != null @AT@ 3863 @LENGTH@ 10
---------MOV Operator@@!= @TO@ InfixExpression@@properties != null @AT@ 3873 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@properties != null @AT@ 3877 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@properties != null && properties.size() > 0 @AT@ 3881 @LENGTH@ 2
------INS InfixExpression@@properties.size() > 0 @TO@ InfixExpression@@properties != null && properties.size() > 0 @AT@ 3885 @LENGTH@ 21
---------INS MethodInvocation@@properties.size() @TO@ InfixExpression@@properties.size() > 0 @AT@ 3885 @LENGTH@ 17
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.size() @AT@ 3885 @LENGTH@ 10
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@properties.size() @AT@ 3896 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@properties.size() > 0 @AT@ 3902 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@properties.size() > 0 @AT@ 3905 @LENGTH@ 1
---DEL InfixExpression@@properties != null @AT@ 3863 @LENGTH@ 18


UPD MethodDeclaration@@static, void, MethodName:activate, final String defaultHost, final SharedWebMetaDataBuilder sharedBuilder, final BatchBuilder batchBuilder,  @TO@ static, void, MethodName:activate, final String defaultHost, final SharedWebMetaDataBuilder sharedWebBuilder, final SharedTldsMetaDataBuilder sharedTldsBuilder, final BatchBuilder batchBuilder,  @AT@ 3876 @LENGTH@ 3115
---UPD SingleVariableDeclaration@@final SharedWebMetaDataBuilder sharedBuilder @TO@ final SharedWebMetaDataBuilder sharedWebBuilder @AT@ 3923 @LENGTH@ 44
------UPD SimpleName@@sharedBuilder @TO@ sharedWebBuilder @AT@ 3954 @LENGTH@ 13
---INS SingleVariableDeclaration@@final SharedTldsMetaDataBuilder sharedTldsBuilder @TO@ MethodDeclaration@@static, void, MethodName:activate, final String defaultHost, final SharedWebMetaDataBuilder sharedBuilder, final BatchBuilder batchBuilder,  @AT@ 3972 @LENGTH@ 49
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final SharedTldsMetaDataBuilder sharedTldsBuilder @AT@ 3972 @LENGTH@ 5
------INS SimpleType@@SharedTldsMetaDataBuilder @TO@ SingleVariableDeclaration@@final SharedTldsMetaDataBuilder sharedTldsBuilder @AT@ 3978 @LENGTH@ 25
------INS SimpleName@@sharedTldsBuilder @TO@ SingleVariableDeclaration@@final SharedTldsMetaDataBuilder sharedTldsBuilder @AT@ 4004 @LENGTH@ 17
---UPD ExpressionStatement@@MethodInvocation:addDeploymentProcessor(batchBuilder,new WarStructureDeploymentProcessor(sharedBuilder.create()),WarStructureDeploymentProcessor.PRIORITY) @TO@ MethodInvocation:addDeploymentProcessor(batchBuilder,new WarStructureDeploymentProcessor(sharedWebBuilder.create(),sharedTldsBuilder.create()),WarStructureDeploymentProcessor.PRIORITY) @AT@ 5584 @LENGTH@ 140
------UPD MethodInvocation@@addDeploymentProcessor(batchBuilder,new WarStructureDeploymentProcessor(sharedBuilder.create()),WarStructureDeploymentProcessor.PRIORITY) @TO@ addDeploymentProcessor(batchBuilder,new WarStructureDeploymentProcessor(sharedWebBuilder.create(),sharedTldsBuilder.create()),WarStructureDeploymentProcessor.PRIORITY) @AT@ 5584 @LENGTH@ 139
---------UPD SimpleName@@MethodName:addDeploymentProcessor:[batchBuilder, new WarStructureDeploymentProcessor(sharedBuilder.create()), WarStructureDeploymentProcessor.PRIORITY] @TO@ MethodName:addDeploymentProcessor:[batchBuilder, new WarStructureDeploymentProcessor(sharedWebBuilder.create(),sharedTldsBuilder.create()), WarStructureDeploymentProcessor.PRIORITY] @AT@ 5584 @LENGTH@ 139
------------UPD ClassInstanceCreation@@WarStructureDeploymentProcessor[sharedBuilder.create()] @TO@ WarStructureDeploymentProcessor[sharedWebBuilder.create(), sharedTldsBuilder.create()] @AT@ 5621 @LENGTH@ 59
---------------UPD MethodInvocation@@sharedBuilder.create() @TO@ sharedWebBuilder.create() @AT@ 5657 @LENGTH@ 22
------------------UPD SimpleName@@Name:sharedBuilder @TO@ Name:sharedWebBuilder @AT@ 5657 @LENGTH@ 13
---------------INS MethodInvocation@@sharedTldsBuilder.create() @TO@ ClassInstanceCreation@@WarStructureDeploymentProcessor[sharedBuilder.create()] @AT@ 5738 @LENGTH@ 26
------------------INS SimpleName@@Name:sharedTldsBuilder @TO@ MethodInvocation@@sharedTldsBuilder.create() @AT@ 5738 @LENGTH@ 17
------------------INS SimpleName@@MethodName:create:[] @TO@ MethodInvocation@@sharedTldsBuilder.create() @AT@ 5756 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:socketBindings.unregisterSocket(this) @TO@ MethodInvocation:socketBindings.unregisterBinding(this) @AT@ 1862 @LENGTH@ 38
---UPD MethodInvocation@@socketBindings.unregisterSocket(this) @TO@ socketBindings.unregisterBinding(this) @AT@ 1862 @LENGTH@ 37
------UPD SimpleName@@MethodName:unregisterSocket:[this] @TO@ MethodName:unregisterBinding:[this] @AT@ 1877 @LENGTH@ 22


UPD VariableDeclarationStatement@@List errors=new ArrayList(); @TO@ List<?> errors=new ArrayList<Object>(); @AT@ 2010 @LENGTH@ 30
---INS ParameterizedType@@List<?> @TO@ VariableDeclarationStatement@@List errors=new ArrayList(); @AT@ 2010 @LENGTH@ 7
------INS SimpleType@@List @TO@ ParameterizedType@@List<?> @AT@ 2010 @LENGTH@ 4
------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 2015 @LENGTH@ 1
---DEL SimpleType@@List @AT@ 2010 @LENGTH@ 4
---UPD VariableDeclarationFragment@@errors=new ArrayList() @TO@ errors=new ArrayList<Object>() @AT@ 2015 @LENGTH@ 24
------UPD ClassInstanceCreation@@ArrayList[] @TO@ ArrayList<Object>[] @AT@ 2024 @LENGTH@ 15
---------DEL SimpleType@@ArrayList @AT@ 2028 @LENGTH@ 9
---------INS ParameterizedType@@ArrayList<Object> @TO@ ClassInstanceCreation@@ArrayList[] @AT@ 2031 @LENGTH@ 17
------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<Object> @AT@ 2031 @LENGTH@ 9
------------INS SimpleType@@Object @TO@ ParameterizedType@@ArrayList<Object> @AT@ 2041 @LENGTH@ 6


UPD VariableDeclarationStatement@@SpringCamelContext context=applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @TO@ SpringCamelContext context=(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @AT@ 1617 @LENGTH@ 116
---UPD VariableDeclarationFragment@@context=applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ context=(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1636 @LENGTH@ 96
------INS CastExpression@@(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ VariableDeclarationFragment@@context=applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1698 @LENGTH@ 107
---------MOV MethodInvocation@@applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ CastExpression@@(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1646 @LENGTH@ 86
---------INS SimpleType@@SpringCamelContext @TO@ CastExpression@@(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1699 @LENGTH@ 18


INS ExpressionStatement@@MethodInvocation:log.debugf("updates affect %s",updatesByServer.keySet()) @TO@ MethodDeclaration@@private, List<DomainUpdateResult<?>>, MethodName:applyUpdatesToServers, final List<AbstractDomainModelUpdate<?>> updates, final List<DomainUpdateApplierResponse> domainResults, final boolean allowOverallRollback,  @AT@ 28143 @LENGTH@ 58
---INS MethodInvocation@@log.debugf("updates affect %s",updatesByServer.keySet()) @TO@ ExpressionStatement@@MethodInvocation:log.debugf("updates affect %s",updatesByServer.keySet()) @AT@ 28143 @LENGTH@ 57
------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debugf("updates affect %s",updatesByServer.keySet()) @AT@ 28143 @LENGTH@ 3
------INS SimpleName@@MethodName:debugf:["updates affect %s", updatesByServer.keySet()] @TO@ MethodInvocation@@log.debugf("updates affect %s",updatesByServer.keySet()) @AT@ 28147 @LENGTH@ 53
---------INS StringLiteral@@"updates affect %s" @TO@ SimpleName@@MethodName:debugf:["updates affect %s", updatesByServer.keySet()] @AT@ 28154 @LENGTH@ 19
---------INS MethodInvocation@@updatesByServer.keySet() @TO@ SimpleName@@MethodName:debugf:["updates affect %s", updatesByServer.keySet()] @AT@ 28175 @LENGTH@ 24
------------INS SimpleName@@Name:updatesByServer @TO@ MethodInvocation@@updatesByServer.keySet() @AT@ 28175 @LENGTH@ 15
------------INS SimpleName@@MethodName:keySet:[] @TO@ MethodInvocation@@updatesByServer.keySet() @AT@ 28191 @LENGTH@ 8


DEL VariableDeclarationStatement@@final String defaultInterface=group.getDefaultInterface(); @AT@ 7029 @LENGTH@ 60
---DEL Modifier@@final @AT@ 7029 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 7035 @LENGTH@ 6
---DEL VariableDeclarationFragment@@defaultInterface=group.getDefaultInterface() @AT@ 7042 @LENGTH@ 46
------DEL SimpleName@@defaultInterface @AT@ 7042 @LENGTH@ 16
------DEL MethodInvocation@@group.getDefaultInterface() @AT@ 7061 @LENGTH@ 27
---------DEL SimpleName@@Name:group @AT@ 7061 @LENGTH@ 5
---------DEL SimpleName@@MethodName:getDefaultInterface:[] @AT@ 7067 @LENGTH@ 21


DEL TryStatement@@try {  batch.install();} catch (ServiceRegistryException e) {  resultHandler.handleFailure(e,param);} @AT@ 3011 @LENGTH@ 142
---DEL ExpressionStatement@@MethodInvocation:batch.install() @AT@ 3029 @LENGTH@ 16
------DEL MethodInvocation@@batch.install() @AT@ 3029 @LENGTH@ 15
---------DEL SimpleName@@Name:batch @AT@ 3029 @LENGTH@ 5
---------DEL SimpleName@@MethodName:install:[] @AT@ 3035 @LENGTH@ 9
---DEL CatchClause@@catch (ServiceRegistryException e) {  resultHandler.handleFailure(e,param);} @AT@ 3056 @LENGTH@ 97
------DEL SingleVariableDeclaration@@ServiceRegistryException e @AT@ 3063 @LENGTH@ 26
---------DEL SimpleType@@ServiceRegistryException @AT@ 3063 @LENGTH@ 24
---------DEL SimpleName@@e @AT@ 3088 @LENGTH@ 1
------DEL ExpressionStatement@@MethodInvocation:resultHandler.handleFailure(e,param) @AT@ 3105 @LENGTH@ 38
---------DEL MethodInvocation@@resultHandler.handleFailure(e,param) @AT@ 3105 @LENGTH@ 37
------------DEL SimpleName@@Name:resultHandler @AT@ 3105 @LENGTH@ 13
------------DEL SimpleName@@MethodName:handleFailure:[e, param] @AT@ 3119 @LENGTH@ 23
---------------DEL SimpleName@@e @AT@ 3133 @LENGTH@ 1
---------------DEL SimpleName@@param @AT@ 3136 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals("rollback",event) @TO@ MethodInvocation:assertTrue(event.startsWith("rollback")) @AT@ 2327 @LENGTH@ 32
---UPD MethodInvocation@@assertEquals("rollback",event) @TO@ assertTrue(event.startsWith("rollback")) @AT@ 2327 @LENGTH@ 31
------UPD SimpleName@@MethodName:assertEquals:["rollback", event] @TO@ MethodName:assertTrue:[event.startsWith("rollback")] @AT@ 2327 @LENGTH@ 31
---------INS MethodInvocation@@event.startsWith("rollback") @TO@ SimpleName@@MethodName:assertEquals:["rollback", event] @AT@ 2314 @LENGTH@ 28
------------INS SimpleName@@Name:event @TO@ MethodInvocation@@event.startsWith("rollback") @AT@ 2314 @LENGTH@ 5
------------INS SimpleName@@MethodName:startsWith:["rollback"] @TO@ MethodInvocation@@event.startsWith("rollback") @AT@ 2320 @LENGTH@ 22
---------------MOV StringLiteral@@"rollback" @TO@ SimpleName@@MethodName:startsWith:["rollback"] @AT@ 2340 @LENGTH@ 10
---------DEL SimpleName@@event @AT@ 2352 @LENGTH@ 5


UPD VariableDeclarationStatement@@ObjectName pcob=(ObjectName)iter.next(); @TO@ ObjectName pcob=iter.next(); @AT@ 3953 @LENGTH@ 42
---UPD VariableDeclarationFragment@@pcob=(ObjectName)iter.next() @TO@ pcob=iter.next() @AT@ 3964 @LENGTH@ 30
------DEL CastExpression@@(ObjectName)iter.next() @AT@ 3971 @LENGTH@ 23
---------DEL SimpleType@@ObjectName @AT@ 3972 @LENGTH@ 10
---------DEL MethodInvocation@@iter.next() @AT@ 3983 @LENGTH@ 11
------INS MethodInvocation@@iter.next() @TO@ VariableDeclarationFragment@@pcob=(ObjectName)iter.next() @AT@ 3971 @LENGTH@ 11
---------MOV SimpleName@@Name:iter @TO@ MethodInvocation@@iter.next() @AT@ 3983 @LENGTH@ 4
---------MOV SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iter.next() @AT@ 3988 @LENGTH@ 6


UPD MethodDeclaration@@void, MethodName:buildPluginUpdate, Plugin buildPlugin,  @TO@ void, MethodName:buildPluginUpdate, Plugin plugin,  @AT@ 6359 @LENGTH@ 38
---UPD SingleVariableDeclaration@@Plugin buildPlugin @TO@ Plugin plugin @AT@ 6377 @LENGTH@ 18
------UPD SimpleName@@buildPlugin @TO@ plugin @AT@ 6384 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:this.serverCommunicationHandler=ServerCommunicationHandlerFactory.getInstance().getProcessManagerSlave(environment,messageHandler) @TO@ Assignment:this.serverCommunicationHandler=ServerCommunicationHandlerFactory.getInstance().getServerCommunicationHandler(environment,messageHandler) @AT@ 3669 @LENGTH@ 134
---UPD Assignment@@this.serverCommunicationHandler=ServerCommunicationHandlerFactory.getInstance().getProcessManagerSlave(environment,messageHandler) @TO@ this.serverCommunicationHandler=ServerCommunicationHandlerFactory.getInstance().getServerCommunicationHandler(environment,messageHandler) @AT@ 3669 @LENGTH@ 133
------UPD MethodInvocation@@ServerCommunicationHandlerFactory.getInstance().getProcessManagerSlave(environment,messageHandler) @TO@ ServerCommunicationHandlerFactory.getInstance().getServerCommunicationHandler(environment,messageHandler) @AT@ 3703 @LENGTH@ 99
---------UPD SimpleName@@MethodName:getProcessManagerSlave:[environment, messageHandler] @TO@ MethodName:getServerCommunicationHandler:[environment, messageHandler] @AT@ 3751 @LENGTH@ 51


UPD ExpressionStatement@@MethodInvocation:b.append(processName).append(0) @TO@ MethodInvocation:b.append(processName).append('\0') @AT@ 5751 @LENGTH@ 32
---UPD MethodInvocation@@b.append(processName).append(0) @TO@ b.append(processName).append('\0') @AT@ 5751 @LENGTH@ 31
------UPD SimpleName@@MethodName:append:[0] @TO@ MethodName:append:['\0'] @AT@ 5773 @LENGTH@ 9
---------INS CharacterLiteral@@'\0' @TO@ SimpleName@@MethodName:append:[0] @AT@ 5780 @LENGTH@ 4
---------DEL NumberLiteral@@0 @AT@ 5780 @LENGTH@ 1


UPD TryStatement@@try {  this.socket=new Socket(addr,port);  this.input=new BufferedInputStream(socket.getInputStream());  this.output=new BufferedOutputStream(socket.getOutputStream());  this.handler=handler;  System.err.printf("%s connected to port %d\n",processName,socket.getLocalPort());  StringBuilder sb=new StringBuilder(256);  sb.append("STARTED");  sb.append('\0');  sb.append(processName);  sb.append('\n');synchronized (output) {    StreamUtils.writeString(output,sb.toString());    output.flush();  }} catch (IOException e) {  if (this.socket != null) {    closeSocket();  }  throw new RuntimeException(e);} @TO@ try {  this.socket.connect(new InetSocketAddress(addr,port));  this.input=new BufferedInputStream(socket.getInputStream());  this.output=new BufferedOutputStream(socket.getOutputStream());  this.handler=handler;  System.err.printf("%s connected to port %d\n",processName,socket.getLocalPort());  StringBuilder sb=new StringBuilder(256);  sb.append("STARTED");  sb.append('\0');  sb.append(processName);  sb.append('\n');synchronized (output) {    StreamUtils.writeString(output,sb.toString());    output.flush();  }} catch (IOException e) {  closeSocket();  throw new RuntimeException(e);} @AT@ 2587 @LENGTH@ 979
---UPD ExpressionStatement@@Assignment:this.socket=new Socket(addr,port) @TO@ MethodInvocation:this.socket.connect(new InetSocketAddress(addr,port)) @AT@ 2605 @LENGTH@ 37
------DEL Assignment@@this.socket=new Socket(addr,port) @AT@ 2605 @LENGTH@ 36
---------DEL FieldAccess@@this.socket @AT@ 2605 @LENGTH@ 11
---------DEL Operator@@= @AT@ 2616 @LENGTH@ 1
---------DEL ClassInstanceCreation@@Socket[addr, port] @AT@ 2619 @LENGTH@ 22
------INS MethodInvocation@@this.socket.connect(new InetSocketAddress(addr,port)) @TO@ ExpressionStatement@@Assignment:this.socket=new Socket(addr,port) @AT@ 2676 @LENGTH@ 54
---------INS FieldAccess@@this.socket @TO@ MethodInvocation@@this.socket.connect(new InetSocketAddress(addr,port)) @AT@ 2676 @LENGTH@ 11
------------MOV ThisExpression@@this @TO@ FieldAccess@@this.socket @AT@ 2605 @LENGTH@ 4
------------MOV SimpleName@@socket @TO@ FieldAccess@@this.socket @AT@ 2610 @LENGTH@ 6
---------INS SimpleName@@MethodName:connect:[new InetSocketAddress(addr,port)] @TO@ MethodInvocation@@this.socket.connect(new InetSocketAddress(addr,port)) @AT@ 2688 @LENGTH@ 42
------------INS ClassInstanceCreation@@InetSocketAddress[addr, port] @TO@ SimpleName@@MethodName:connect:[new InetSocketAddress(addr,port)] @AT@ 2696 @LENGTH@ 33
---------------MOV New@@new @TO@ ClassInstanceCreation@@InetSocketAddress[addr, port] @AT@ 2619 @LENGTH@ 3
---------------MOV SimpleType@@Socket @TO@ ClassInstanceCreation@@InetSocketAddress[addr, port] @AT@ 2623 @LENGTH@ 6
---------------MOV SimpleName@@addr @TO@ ClassInstanceCreation@@InetSocketAddress[addr, port] @AT@ 2630 @LENGTH@ 4
---------------MOV SimpleName@@port @TO@ ClassInstanceCreation@@InetSocketAddress[addr, port] @AT@ 2636 @LENGTH@ 4
---UPD CatchClause@@catch (IOException e) {  if (this.socket != null) {    closeSocket();  }  throw new RuntimeException(e);} @TO@ catch (IOException e) {  closeSocket();  throw new RuntimeException(e);} @AT@ 3406 @LENGTH@ 160
------DEL IfStatement@@if (this.socket != null) {  closeSocket();} @AT@ 3442 @LENGTH@ 71
---------DEL InfixExpression@@this.socket != null @AT@ 3446 @LENGTH@ 19
------------DEL FieldAccess@@this.socket @AT@ 3446 @LENGTH@ 11
---------------DEL ThisExpression@@this @AT@ 3446 @LENGTH@ 4
---------------DEL SimpleName@@socket @AT@ 3451 @LENGTH@ 6
------------DEL Operator@@!= @AT@ 3457 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 3461 @LENGTH@ 4
---------DEL Block@@ThenBody:{  closeSocket();} @AT@ 3467 @LENGTH@ 46
------------DEL ExpressionStatement@@MethodInvocation:closeSocket() @AT@ 3485 @LENGTH@ 14
------INS ExpressionStatement@@MethodInvocation:closeSocket() @TO@ CatchClause@@catch (IOException e) {  if (this.socket != null) {    closeSocket();  }  throw new RuntimeException(e);} @AT@ 3531 @LENGTH@ 14
---------MOV MethodInvocation@@MethodName:closeSocket:[] @TO@ ExpressionStatement@@MethodInvocation:closeSocket() @AT@ 3485 @LENGTH@ 13


UPD EnhancedForStatement@@for (Map.Entry<String,String> entry : properties.entrySet()) {  streamWriter.writeEmptyElement(propertyType.getLocalName());  streamWriter.writeAttribute(Attribute.NAME.getLocalName(),entry.getKey());  streamWriter.writeAttribute(Attribute.VALUE.getLocalName(),entry.getValue());} @TO@ for (Map.Entry<String,String> entry : properties.entrySet()) {  streamWriter.writeEmptyElement(propertyType.getLocalName());  streamWriter.writeAttribute(Attribute.NAME.getLocalName(),entry.getKey());  if (!allowNullValue || entry.getValue() != null) {    streamWriter.writeAttribute(Attribute.VALUE.getLocalName(),entry.getValue());  }} @AT@ 7172 @LENGTH@ 341
---INS IfStatement@@if (!allowNullValue || entry.getValue() != null) {  streamWriter.writeAttribute(Attribute.VALUE.getLocalName(),entry.getValue());} @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : properties.entrySet()) {  streamWriter.writeEmptyElement(propertyType.getLocalName());  streamWriter.writeAttribute(Attribute.NAME.getLocalName(),entry.getKey());  streamWriter.writeAttribute(Attribute.VALUE.getLocalName(),entry.getValue());} @AT@ 7421 @LENGTH@ 167
------INS InfixExpression@@!allowNullValue || entry.getValue() != null @TO@ IfStatement@@if (!allowNullValue || entry.getValue() != null) {  streamWriter.writeAttribute(Attribute.VALUE.getLocalName(),entry.getValue());} @AT@ 7425 @LENGTH@ 43
---------INS PrefixExpression@@!allowNullValue @TO@ InfixExpression@@!allowNullValue || entry.getValue() != null @AT@ 7425 @LENGTH@ 15
------------INS Operator@@! @TO@ PrefixExpression@@!allowNullValue @AT@ 7425 @LENGTH@ 1
------------INS SimpleName@@allowNullValue @TO@ PrefixExpression@@!allowNullValue @AT@ 7426 @LENGTH@ 14
---------INS Operator@@|| @TO@ InfixExpression@@!allowNullValue || entry.getValue() != null @AT@ 7440 @LENGTH@ 2
---------INS InfixExpression@@entry.getValue() != null @TO@ InfixExpression@@!allowNullValue || entry.getValue() != null @AT@ 7444 @LENGTH@ 24
------------INS MethodInvocation@@entry.getValue() @TO@ InfixExpression@@entry.getValue() != null @AT@ 7444 @LENGTH@ 16
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 7444 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 7450 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@entry.getValue() != null @AT@ 7460 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@entry.getValue() != null @AT@ 7464 @LENGTH@ 4
------INS Block@@ThenBody:{  streamWriter.writeAttribute(Attribute.VALUE.getLocalName(),entry.getValue());} @TO@ IfStatement@@if (!allowNullValue || entry.getValue() != null) {  streamWriter.writeAttribute(Attribute.VALUE.getLocalName(),entry.getValue());} @AT@ 7470 @LENGTH@ 118
---------MOV ExpressionStatement@@MethodInvocation:streamWriter.writeAttribute(Attribute.VALUE.getLocalName(),entry.getValue()) @TO@ Block@@ThenBody:{  streamWriter.writeAttribute(Attribute.VALUE.getLocalName(),entry.getValue());} @AT@ 7421 @LENGTH@ 78


UPD VariableDeclarationStatement@@String extension=path.substring(path.indexOf(".") + 1); @TO@ String extension=path.substring(path.lastIndexOf(".") + 1); @AT@ 3543 @LENGTH@ 57
---UPD VariableDeclarationFragment@@extension=path.substring(path.indexOf(".") + 1) @TO@ extension=path.substring(path.lastIndexOf(".") + 1) @AT@ 3550 @LENGTH@ 49
------UPD MethodInvocation@@path.substring(path.indexOf(".") + 1) @TO@ path.substring(path.lastIndexOf(".") + 1) @AT@ 3562 @LENGTH@ 37
---------UPD SimpleName@@MethodName:substring:[path.indexOf(".") + 1] @TO@ MethodName:substring:[path.lastIndexOf(".") + 1] @AT@ 3567 @LENGTH@ 32
------------UPD InfixExpression@@path.indexOf(".") + 1 @TO@ path.lastIndexOf(".") + 1 @AT@ 3577 @LENGTH@ 21
---------------UPD MethodInvocation@@path.indexOf(".") @TO@ path.lastIndexOf(".") @AT@ 3577 @LENGTH@ 17
------------------UPD SimpleName@@MethodName:indexOf:["."] @TO@ MethodName:lastIndexOf:["."] @AT@ 3582 @LENGTH@ 12


UPD EnhancedForStatement@@for (Route route : routes) {  if (route.getId().equals(id)) {    return route;  }} @TO@ for (Route route : getRoutes()) {  if (route.getId().equals(id)) {    return route;  }} @AT@ 21495 @LENGTH@ 126
---INS MethodInvocation@@MethodName:getRoutes:[] @TO@ EnhancedForStatement@@for (Route route : routes) {  if (route.getId().equals(id)) {    return route;  }} @AT@ 21514 @LENGTH@ 11
---DEL SimpleName@@routes @AT@ 21514 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testNotDirtyWithRemoveMissing,  @TO@ TypeDeclaration@@[public]ExecutionContextTests,  @AT@ 2627 @LENGTH@ 311
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithRemoveMissing,  @AT@ 2627 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithRemoveMissing,  @AT@ 2634 @LENGTH@ 4
---INS SimpleName@@MethodName:testNotDirtyWithRemoveMissing @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithRemoveMissing,  @AT@ 2639 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:context.putString("1","test") @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithRemoveMissing,  @AT@ 2675 @LENGTH@ 31
------INS MethodInvocation@@context.putString("1","test") @TO@ ExpressionStatement@@MethodInvocation:context.putString("1","test") @AT@ 2675 @LENGTH@ 30
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.putString("1","test") @AT@ 2675 @LENGTH@ 7
---------INS SimpleName@@MethodName:putString:["1", "test"] @TO@ MethodInvocation@@context.putString("1","test") @AT@ 2683 @LENGTH@ 22
------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:putString:["1", "test"] @AT@ 2693 @LENGTH@ 3
------------INS StringLiteral@@"test" @TO@ SimpleName@@MethodName:putString:["1", "test"] @AT@ 2698 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertTrue(context.isDirty()) @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithRemoveMissing,  @AT@ 2709 @LENGTH@ 30
------INS MethodInvocation@@assertTrue(context.isDirty()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(context.isDirty()) @AT@ 2709 @LENGTH@ 29
---------INS SimpleName@@MethodName:assertTrue:[context.isDirty()] @TO@ MethodInvocation@@assertTrue(context.isDirty()) @AT@ 2709 @LENGTH@ 29
------------INS MethodInvocation@@context.isDirty() @TO@ SimpleName@@MethodName:assertTrue:[context.isDirty()] @AT@ 2720 @LENGTH@ 17
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isDirty() @AT@ 2720 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isDirty:[] @TO@ MethodInvocation@@context.isDirty() @AT@ 2728 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:context.putString("1",null) @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithRemoveMissing,  @AT@ 2742 @LENGTH@ 29
------INS MethodInvocation@@context.putString("1",null) @TO@ ExpressionStatement@@MethodInvocation:context.putString("1",null) @AT@ 2742 @LENGTH@ 28
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.putString("1",null) @AT@ 2742 @LENGTH@ 7
---------INS SimpleName@@MethodName:putString:["1", null] @TO@ MethodInvocation@@context.putString("1",null) @AT@ 2750 @LENGTH@ 20
------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:putString:["1", null] @AT@ 2760 @LENGTH@ 3
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:putString:["1", null] @AT@ 2765 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertTrue(context.isDirty()) @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithRemoveMissing,  @AT@ 2809 @LENGTH@ 30
------INS MethodInvocation@@assertTrue(context.isDirty()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(context.isDirty()) @AT@ 2809 @LENGTH@ 29
---------INS SimpleName@@MethodName:assertTrue:[context.isDirty()] @TO@ MethodInvocation@@assertTrue(context.isDirty()) @AT@ 2809 @LENGTH@ 29
------------INS MethodInvocation@@context.isDirty() @TO@ SimpleName@@MethodName:assertTrue:[context.isDirty()] @AT@ 2820 @LENGTH@ 17
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isDirty() @AT@ 2820 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isDirty:[] @TO@ MethodInvocation@@context.isDirty() @AT@ 2828 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:context.putString("1",null) @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithRemoveMissing,  @AT@ 2842 @LENGTH@ 29
------INS MethodInvocation@@context.putString("1",null) @TO@ ExpressionStatement@@MethodInvocation:context.putString("1",null) @AT@ 2842 @LENGTH@ 28
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.putString("1",null) @AT@ 2842 @LENGTH@ 7
---------INS SimpleName@@MethodName:putString:["1", null] @TO@ MethodInvocation@@context.putString("1",null) @AT@ 2850 @LENGTH@ 20
------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:putString:["1", null] @AT@ 2860 @LENGTH@ 3
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:putString:["1", null] @AT@ 2865 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertFalse(context.isDirty()) @TO@ MethodDeclaration@@public, void, MethodName:testNotDirtyWithRemoveMissing,  @AT@ 2904 @LENGTH@ 31
------INS MethodInvocation@@assertFalse(context.isDirty()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(context.isDirty()) @AT@ 2904 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertFalse:[context.isDirty()] @TO@ MethodInvocation@@assertFalse(context.isDirty()) @AT@ 2904 @LENGTH@ 30
------------INS MethodInvocation@@context.isDirty() @TO@ SimpleName@@MethodName:assertFalse:[context.isDirty()] @AT@ 2916 @LENGTH@ 17
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isDirty() @AT@ 2916 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isDirty:[] @TO@ MethodInvocation@@context.isDirty() @AT@ 2924 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:persistenceUnitElement.setAttribute("name","PERSISTENCE_UNIT_NAME") @TO@ MethodInvocation:persistenceUnitElement.setAttribute("name",PERSISTENCE_UNIT_NAME) @AT@ 13479 @LENGTH@ 69
---UPD MethodInvocation@@persistenceUnitElement.setAttribute("name","PERSISTENCE_UNIT_NAME") @TO@ persistenceUnitElement.setAttribute("name",PERSISTENCE_UNIT_NAME) @AT@ 13479 @LENGTH@ 68
------UPD SimpleName@@MethodName:setAttribute:["name", "PERSISTENCE_UNIT_NAME"] @TO@ MethodName:setAttribute:["name", PERSISTENCE_UNIT_NAME] @AT@ 13502 @LENGTH@ 45
---------DEL StringLiteral@@"PERSISTENCE_UNIT_NAME" @AT@ 13523 @LENGTH@ 23
---------INS SimpleName@@PERSISTENCE_UNIT_NAME @TO@ SimpleName@@MethodName:setAttribute:["name", "PERSISTENCE_UNIT_NAME"] @AT@ 13523 @LENGTH@ 21


DEL ExpressionStatement@@Assignment:dirty=true @AT@ 3455 @LENGTH@ 13
---DEL Assignment@@dirty=true @AT@ 3455 @LENGTH@ 12
------DEL SimpleName@@dirty @AT@ 3455 @LENGTH@ 5
------DEL Operator@@= @AT@ 3460 @LENGTH@ 1
------DEL BooleanLiteral@@true @AT@ 3463 @LENGTH@ 4


INS IfStatement@@if (key != null) {  answer=nodeMap.get(key);} @TO@ MethodDeclaration@@protected, NodeData, MethodName:getNodeData, Object node,  @AT@ 2761 @LENGTH@ 67
---INS InfixExpression@@key != null @TO@ IfStatement@@if (key != null) {  answer=nodeMap.get(key);} @AT@ 2765 @LENGTH@ 11
------INS SimpleName@@key @TO@ InfixExpression@@key != null @AT@ 2765 @LENGTH@ 3
------INS Operator@@!= @TO@ InfixExpression@@key != null @AT@ 2768 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@key != null @AT@ 2772 @LENGTH@ 4
---INS Block@@ThenBody:{  answer=nodeMap.get(key);} @TO@ IfStatement@@if (key != null) {  answer=nodeMap.get(key);} @AT@ 2778 @LENGTH@ 50
------INS ExpressionStatement@@Assignment:answer=nodeMap.get(key) @TO@ Block@@ThenBody:{  answer=nodeMap.get(key);} @AT@ 2792 @LENGTH@ 26
---------INS Assignment@@answer=nodeMap.get(key) @TO@ ExpressionStatement@@Assignment:answer=nodeMap.get(key) @AT@ 2792 @LENGTH@ 25
------------MOV MethodInvocation@@nodeMap.get(key) @TO@ Assignment@@answer=nodeMap.get(key) @AT@ 2747 @LENGTH@ 16
------------INS SimpleName@@answer @TO@ Assignment@@answer=nodeMap.get(key) @AT@ 2792 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@answer=nodeMap.get(key) @AT@ 2798 @LENGTH@ 1


UPD VariableDeclarationStatement@@boolean optional=parseOptionalExportParams(dependencyParts,"export"); @TO@ boolean optional=parseOptionalExportParams(dependencyParts,"optional"); @AT@ 2905 @LENGTH@ 72
---UPD VariableDeclarationFragment@@optional=parseOptionalExportParams(dependencyParts,"export") @TO@ optional=parseOptionalExportParams(dependencyParts,"optional") @AT@ 2913 @LENGTH@ 63
------UPD MethodInvocation@@parseOptionalExportParams(dependencyParts,"export") @TO@ parseOptionalExportParams(dependencyParts,"optional") @AT@ 2924 @LENGTH@ 52
---------UPD SimpleName@@MethodName:parseOptionalExportParams:[dependencyParts, "export"] @TO@ MethodName:parseOptionalExportParams:[dependencyParts, "optional"] @AT@ 2924 @LENGTH@ 52
------------UPD StringLiteral@@"export" @TO@ "optional" @AT@ 2967 @LENGTH@ 8


INS MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @TO@ TypeDeclaration@@[public, final]QueuelessThreadPoolExecutorElement, AbstractExecutorElement<QueuelessThreadPoolExecutorElement> @AT@ 7485 @LENGTH@ 101
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 7485 @LENGTH@ 9
---INS SimpleType@@Element @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 7495 @LENGTH@ 7
---INS SimpleName@@MethodName:getStandardElement @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 7503 @LENGTH@ 18
---INS ReturnStatement@@QualifiedName:Element.QUEUELESS_THREAD_POOL_EXECUTOR @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 7534 @LENGTH@ 46
------INS QualifiedName@@Element.QUEUELESS_THREAD_POOL_EXECUTOR @TO@ ReturnStatement@@QualifiedName:Element.QUEUELESS_THREAD_POOL_EXECUTOR @AT@ 7541 @LENGTH@ 38
---------INS SimpleName@@Element @TO@ QualifiedName@@Element.QUEUELESS_THREAD_POOL_EXECUTOR @AT@ 7541 @LENGTH@ 7
---------INS SimpleName@@QUEUELESS_THREAD_POOL_EXECUTOR @TO@ QualifiedName@@Element.QUEUELESS_THREAD_POOL_EXECUTOR @AT@ 7549 @LENGTH@ 30


INS MethodDeclaration@@public, InetAddress, MethodName:getAddress,  @TO@ TypeDeclaration@@[public]SocketBinding,  @AT@ 2727 @LENGTH@ 85
---INS Modifier@@public @TO@ MethodDeclaration@@public, InetAddress, MethodName:getAddress,  @AT@ 2727 @LENGTH@ 6
---INS SimpleType@@InetAddress @TO@ MethodDeclaration@@public, InetAddress, MethodName:getAddress,  @AT@ 2734 @LENGTH@ 11
---INS SimpleName@@MethodName:getAddress @TO@ MethodDeclaration@@public, InetAddress, MethodName:getAddress,  @AT@ 2746 @LENGTH@ 10
---INS ReturnStatement@@MethodInvocation:networkInterface.getAddress() @TO@ MethodDeclaration@@public, InetAddress, MethodName:getAddress,  @AT@ 2769 @LENGTH@ 37
------INS MethodInvocation@@networkInterface.getAddress() @TO@ ReturnStatement@@MethodInvocation:networkInterface.getAddress() @AT@ 2776 @LENGTH@ 29
---------INS SimpleName@@Name:networkInterface @TO@ MethodInvocation@@networkInterface.getAddress() @AT@ 2776 @LENGTH@ 16
---------INS SimpleName@@MethodName:getAddress:[] @TO@ MethodInvocation@@networkInterface.getAddress() @AT@ 2793 @LENGTH@ 12


DEL FieldDeclaration@@private, static, org.apache.commons.logging.Log, [log=org.apache.commons.logging.LogFactory.getLog(PumpStreamHandler.class)] @AT@ 3327 @LENGTH@ 131
---DEL Modifier@@private @AT@ 3327 @LENGTH@ 7
---DEL Modifier@@static @AT@ 3335 @LENGTH@ 6
---DEL SimpleType@@org.apache.commons.logging.Log @AT@ 3342 @LENGTH@ 30
---DEL VariableDeclarationFragment@@log=org.apache.commons.logging.LogFactory.getLog(PumpStreamHandler.class) @AT@ 3373 @LENGTH@ 84
------DEL SimpleName@@log @AT@ 3373 @LENGTH@ 3
------DEL MethodInvocation@@org.apache.commons.logging.LogFactory.getLog(PumpStreamHandler.class) @AT@ 3386 @LENGTH@ 71
---------DEL QualifiedName@@Name:org.apache.commons.logging.LogFactory @AT@ 3386 @LENGTH@ 37
---------DEL SimpleName@@MethodName:getLog:[PumpStreamHandler.class] @AT@ 3424 @LENGTH@ 33
------------DEL TypeLiteral@@PumpStreamHandler.class @AT@ 3432 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:from("direct:start").multicast(new AggregationStrategy(){
  public Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
    String body=oldExchange.getIn().getBody(String.class);
    oldExchange.getIn().setBody(body + newExchange.getIn().getBody(String.class));
    return oldExchange;
  }
}
).parallelProcessing().timeout(2000).to("direct:a","direct:b","direct:c").end().to("mock:result") @TO@ MethodInvocation:from("direct:start").multicast(new AggregationStrategy(){
  public Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
    String body=oldExchange.getIn().getBody(String.class);
    oldExchange.getIn().setBody(body + newExchange.getIn().getBody(String.class));
    return oldExchange;
  }
}
).parallelProcessing().timeout(1000).to("direct:a","direct:b","direct:c").end().to("mock:result") @AT@ 2086 @LENGTH@ 870
---UPD MethodInvocation@@from("direct:start").multicast(new AggregationStrategy(){
  public Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
    String body=oldExchange.getIn().getBody(String.class);
    oldExchange.getIn().setBody(body + newExchange.getIn().getBody(String.class));
    return oldExchange;
  }
}
).parallelProcessing().timeout(2000).to("direct:a","direct:b","direct:c").end().to("mock:result") @TO@ from("direct:start").multicast(new AggregationStrategy(){
  public Exchange aggregate(  Exchange oldExchange,  Exchange newExchange){
    if (oldExchange == null) {
      return newExchange;
    }
    String body=oldExchange.getIn().getBody(String.class);
    oldExchange.getIn().setBody(body + newExchange.getIn().getBody(String.class));
    return oldExchange;
  }
}
).parallelProcessing().timeout(1000).to("direct:a","direct:b","direct:c").end().to("mock:result") @AT@ 2086 @LENGTH@ 869
------UPD MethodInvocation@@MethodName:timeout:[2000] @TO@ MethodName:timeout:[1000] @AT@ 2086 @LENGTH@ 698
---------UPD NumberLiteral@@2000 @TO@ 1000 @AT@ 2779 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:mock1.expectedBodiesReceived("Hello World","Bye World") @TO@ MethodInvocation:mock1.expectedBodiesReceivedInAnyOrder("Hello World","Bye World") @AT@ 1365 @LENGTH@ 57
---UPD MethodInvocation@@mock1.expectedBodiesReceived("Hello World","Bye World") @TO@ mock1.expectedBodiesReceivedInAnyOrder("Hello World","Bye World") @AT@ 1365 @LENGTH@ 56
------UPD SimpleName@@MethodName:expectedBodiesReceived:["Hello World", "Bye World"] @TO@ MethodName:expectedBodiesReceivedInAnyOrder:["Hello World", "Bye World"] @AT@ 1371 @LENGTH@ 50


UPD ExpressionStatement@@MethodInvocation:assertTrue(content.contains("<a href=\"/batch/jobs/executions/123/steps/1234\"/>")) @TO@ MethodInvocation:assertTrue(content.contains("<a href=\"/batch/jobs/executions/123/steps/1234/progress\"/>")) @AT@ 3076 @LENGTH@ 84
---UPD MethodInvocation@@assertTrue(content.contains("<a href=\"/batch/jobs/executions/123/steps/1234\"/>")) @TO@ assertTrue(content.contains("<a href=\"/batch/jobs/executions/123/steps/1234/progress\"/>")) @AT@ 3076 @LENGTH@ 83
------UPD SimpleName@@MethodName:assertTrue:[content.contains("<a href=\"/batch/jobs/executions/123/steps/1234\"/>")] @TO@ MethodName:assertTrue:[content.contains("<a href=\"/batch/jobs/executions/123/steps/1234/progress\"/>")] @AT@ 3076 @LENGTH@ 83
---------UPD MethodInvocation@@content.contains("<a href=\"/batch/jobs/executions/123/steps/1234\"/>") @TO@ content.contains("<a href=\"/batch/jobs/executions/123/steps/1234/progress\"/>") @AT@ 3087 @LENGTH@ 71
------------UPD SimpleName@@MethodName:contains:["<a href=\"/batch/jobs/executions/123/steps/1234\"/>"] @TO@ MethodName:contains:["<a href=\"/batch/jobs/executions/123/steps/1234/progress\"/>"] @AT@ 3095 @LENGTH@ 63
---------------UPD StringLiteral@@"<a href=\"/batch/jobs/executions/123/steps/1234\"/>" @TO@ "<a href=\"/batch/jobs/executions/123/steps/1234/progress\"/>" @AT@ 3104 @LENGTH@ 53


UPD ReturnStatement@@CastExpression:(MultiKey<K>[])new MultiKey[]{new MultiKey(I1,I7),new MultiKey(I1,I8),new MultiKey(I2,I4),new MultiKey(I2,I5)} @TO@ ArrayCreation:new MultiKey[]{new MultiKey<Integer>(I1,I7),new MultiKey<Integer>(I1,I8),new MultiKey<Integer>(I2,I4),new MultiKey<Integer>(I2,I5)} @AT@ 3338 @LENGTH@ 186
---DEL CastExpression@@(MultiKey<K>[])new MultiKey[]{new MultiKey(I1,I7),new MultiKey(I1,I8),new MultiKey(I2,I4),new MultiKey(I2,I5)} @AT@ 3345 @LENGTH@ 178
------DEL ArrayType@@MultiKey<K>[] @AT@ 3346 @LENGTH@ 13
---------DEL ParameterizedType@@MultiKey<K> @AT@ 3346 @LENGTH@ 11
------------DEL SimpleType@@MultiKey @AT@ 3346 @LENGTH@ 8
------------DEL SimpleType@@K @AT@ 3355 @LENGTH@ 1
------DEL ArrayCreation@@new MultiKey[]{new MultiKey(I1,I7),new MultiKey(I1,I8),new MultiKey(I2,I4),new MultiKey(I2,I5)} @AT@ 3361 @LENGTH@ 162
---INS ArrayCreation@@new MultiKey[]{new MultiKey<Integer>(I1,I7),new MultiKey<Integer>(I1,I8),new MultiKey<Integer>(I2,I4),new MultiKey<Integer>(I2,I5)} @TO@ ReturnStatement@@CastExpression:(MultiKey<K>[])new MultiKey[]{new MultiKey(I1,I7),new MultiKey(I1,I8),new MultiKey(I2,I4),new MultiKey(I2,I5)} @AT@ 3453 @LENGTH@ 198
------MOV ArrayType@@MultiKey[] @TO@ ArrayCreation@@new MultiKey[]{new MultiKey<Integer>(I1,I7),new MultiKey<Integer>(I1,I8),new MultiKey<Integer>(I2,I4),new MultiKey<Integer>(I2,I5)} @AT@ 3365 @LENGTH@ 10
------MOV ArrayInitializer@@{new MultiKey(I1,I7),new MultiKey(I1,I8),new MultiKey(I2,I4),new MultiKey(I2,I5)} @TO@ ArrayCreation@@new MultiKey[]{new MultiKey<Integer>(I1,I7),new MultiKey<Integer>(I1,I8),new MultiKey<Integer>(I2,I4),new MultiKey<Integer>(I2,I5)} @AT@ 3376 @LENGTH@ 147
---------UPD ClassInstanceCreation@@MultiKey[I1, I7] @TO@ MultiKey<Integer>[I1, I7] @AT@ 3390 @LENGTH@ 20
------------DEL SimpleType@@MultiKey @AT@ 3394 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I1, I7] @AT@ 3486 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 3486 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 3495 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I1, I8] @TO@ MultiKey<Integer>[I1, I8] @AT@ 3424 @LENGTH@ 20
------------DEL SimpleType@@MultiKey @AT@ 3428 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I1, I8] @AT@ 3529 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 3529 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 3538 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I2, I4] @TO@ MultiKey<Integer>[I2, I4] @AT@ 3458 @LENGTH@ 20
------------DEL SimpleType@@MultiKey @AT@ 3462 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I2, I4] @AT@ 3572 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 3572 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 3581 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I2, I5] @TO@ MultiKey<Integer>[I2, I5] @AT@ 3492 @LENGTH@ 20
------------DEL SimpleType@@MultiKey @AT@ 3496 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I2, I5] @AT@ 3615 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 3615 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 3624 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:buff.append(ANSICodes.gotoxy(1,startFrom)) @TO@ MethodInvocation:buff.append(ANSICodes.gotoxy(startFrom,1)) @AT@ 8254 @LENGTH@ 44
---UPD MethodInvocation@@buff.append(ANSICodes.gotoxy(1,startFrom)) @TO@ buff.append(ANSICodes.gotoxy(startFrom,1)) @AT@ 8254 @LENGTH@ 43
------UPD SimpleName@@MethodName:append:[ANSICodes.gotoxy(1,startFrom)] @TO@ MethodName:append:[ANSICodes.gotoxy(startFrom,1)] @AT@ 8259 @LENGTH@ 38
---------UPD MethodInvocation@@ANSICodes.gotoxy(1,startFrom) @TO@ ANSICodes.gotoxy(startFrom,1) @AT@ 8266 @LENGTH@ 30
------------UPD SimpleName@@MethodName:gotoxy:[1, startFrom] @TO@ MethodName:gotoxy:[startFrom, 1] @AT@ 8276 @LENGTH@ 20
---------------INS SimpleName@@startFrom @TO@ SimpleName@@MethodName:gotoxy:[1, startFrom] @AT@ 8283 @LENGTH@ 9
---------------DEL SimpleName@@startFrom @AT@ 8286 @LENGTH@ 9


DEL VariableDeclarationStatement@@SoftReference<?> ref=new SoftReference<Object>(new Object()); @AT@ 10261 @LENGTH@ 63
---DEL ParameterizedType@@SoftReference<?> @AT@ 10261 @LENGTH@ 16
------DEL SimpleType@@SoftReference @AT@ 10261 @LENGTH@ 13
------DEL WildcardType@@? @AT@ 10275 @LENGTH@ 1
---DEL VariableDeclarationFragment@@ref=new SoftReference<Object>(new Object()) @AT@ 10278 @LENGTH@ 45
------DEL SimpleName@@ref @AT@ 10278 @LENGTH@ 3
------DEL ClassInstanceCreation@@SoftReference<Object>[new Object()] @AT@ 10284 @LENGTH@ 39
---------DEL New@@new @AT@ 10284 @LENGTH@ 3
---------DEL ParameterizedType@@SoftReference<Object> @AT@ 10288 @LENGTH@ 21
------------DEL SimpleType@@SoftReference @AT@ 10288 @LENGTH@ 13
------------DEL SimpleType@@Object @AT@ 10302 @LENGTH@ 6
---------DEL ClassInstanceCreation@@Object[] @AT@ 10310 @LENGTH@ 12
------------DEL New@@new @AT@ 10310 @LENGTH@ 3
------------DEL SimpleType@@Object @AT@ 10314 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:TransactionErrorHandler, Processor output, Logger logger, Processor redeliveryProcessor, RedeliveryPolicy redeliveryPolicy, Predicate handledPolicy, ExceptionPolicyStrategy exceptionPolicyStrategy, TransactionTemplate transactionTemplate,  @TO@ public, voidMethodName:TransactionErrorHandler, CamelContext camelContext, Processor output, Logger logger, Processor redeliveryProcessor, RedeliveryPolicy redeliveryPolicy, Predicate handledPolicy, ExceptionPolicyStrategy exceptionPolicyStrategy, TransactionTemplate transactionTemplate,  @AT@ 2476 @LENGTH@ 535
---INS SingleVariableDeclaration@@CamelContext camelContext @TO@ MethodDeclaration@@public, voidMethodName:TransactionErrorHandler, Processor output, Logger logger, Processor redeliveryProcessor, RedeliveryPolicy redeliveryPolicy, Predicate handledPolicy, ExceptionPolicyStrategy exceptionPolicyStrategy, TransactionTemplate transactionTemplate,  @AT@ 2601 @LENGTH@ 25
------INS SimpleType@@CamelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 2601 @LENGTH@ 12
------INS SimpleName@@camelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 2614 @LENGTH@ 12
---UPD SuperConstructorInvocation@@super(output,logger,redeliveryProcessor,redeliveryPolicy,handledPolicy,null,null,false);
 @TO@ super(camelContext,output,logger,redeliveryProcessor,redeliveryPolicy,handledPolicy,null,null,false);
 @AT@ 2801 @LENGTH@ 95
------INS SimpleName@@camelContext @TO@ SuperConstructorInvocation@@super(output,logger,redeliveryProcessor,redeliveryPolicy,handledPolicy,null,null,false);
 @AT@ 2928 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:event").expectedMessageCount(7) @TO@ MethodInvocation:getMockEndpoint("mock:event").expectedMessageCount(4) @AT@ 1962 @LENGTH@ 54
---UPD MethodInvocation@@getMockEndpoint("mock:event").expectedMessageCount(7) @TO@ getMockEndpoint("mock:event").expectedMessageCount(4) @AT@ 1962 @LENGTH@ 53
------UPD SimpleName@@MethodName:expectedMessageCount:[7] @TO@ MethodName:expectedMessageCount:[4] @AT@ 1992 @LENGTH@ 23
---------UPD NumberLiteral@@7 @TO@ 4 @AT@ 2013 @LENGTH@ 1


INS IfStatement@@if (logConfigurator != null) logConfigurator.run(); @TO@ MethodDeclaration@@public, void, MethodName:run, final List<ServiceActivator> startServices,  @AT@ 3226 @LENGTH@ 51
---INS InfixExpression@@logConfigurator != null @TO@ IfStatement@@if (logConfigurator != null) logConfigurator.run(); @AT@ 3230 @LENGTH@ 23
------INS SimpleName@@logConfigurator @TO@ InfixExpression@@logConfigurator != null @AT@ 3230 @LENGTH@ 15
------INS Operator@@!= @TO@ InfixExpression@@logConfigurator != null @AT@ 3245 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@logConfigurator != null @AT@ 3249 @LENGTH@ 4
---INS Block@@ThenBody:logConfigurator.run(); @TO@ IfStatement@@if (logConfigurator != null) logConfigurator.run(); @AT@ 3255 @LENGTH@ 22
------MOV ExpressionStatement@@MethodInvocation:logConfigurator.run() @TO@ Block@@ThenBody:logConfigurator.run(); @AT@ 3226 @LENGTH@ 22


UPD EnhancedForStatement@@for (JobInstance jobInstance : lastInstances) {  List<JobExecution> jobExecutions=jobExplorer.getJobExecutions(jobInstance);  if (jobExecutions == null || jobExecutions.isEmpty()) {    continue;  }  JobExecution jobExecution=jobExecutions.get(jobExecutions.size() - 1);  if (jobExecution.getStatus().isGreaterThan(minStatus)) {    executions.add(jobExecution);  }} @TO@ for (JobInstance jobInstance : lastInstances) {  List<JobExecution> jobExecutions=jobExplorer.getJobExecutions(jobInstance);  if (jobExecutions == null || jobExecutions.isEmpty()) {    continue;  }  for (  JobExecution jobExecution : jobExecutions) {    if (jobExecution.getStatus().isGreaterThan(minStatus)) {      executions.add(jobExecution);    }  }} @AT@ 12940 @LENGTH@ 394
---DEL VariableDeclarationStatement@@JobExecution jobExecution=jobExecutions.get(jobExecutions.size() - 1); @AT@ 13155 @LENGTH@ 72
------DEL SimpleType@@JobExecution @AT@ 13155 @LENGTH@ 12
------DEL VariableDeclarationFragment@@jobExecution=jobExecutions.get(jobExecutions.size() - 1) @AT@ 13168 @LENGTH@ 58
---------DEL SimpleName@@jobExecution @AT@ 13168 @LENGTH@ 12
---------DEL MethodInvocation@@jobExecutions.get(jobExecutions.size() - 1) @AT@ 13183 @LENGTH@ 43
------------DEL SimpleName@@Name:jobExecutions @AT@ 13183 @LENGTH@ 13
------------DEL SimpleName@@MethodName:get:[jobExecutions.size() - 1] @AT@ 13197 @LENGTH@ 29
---------------DEL InfixExpression@@jobExecutions.size() - 1 @AT@ 13201 @LENGTH@ 24
------------------DEL MethodInvocation@@jobExecutions.size() @AT@ 13201 @LENGTH@ 20
---------------------DEL SimpleName@@Name:jobExecutions @AT@ 13201 @LENGTH@ 13
---------------------DEL SimpleName@@MethodName:size:[] @AT@ 13215 @LENGTH@ 6
------------------DEL Operator@@- @AT@ 13221 @LENGTH@ 1
------------------DEL NumberLiteral@@1 @AT@ 13224 @LENGTH@ 1
---INS EnhancedForStatement@@for (JobExecution jobExecution : jobExecutions) {  if (jobExecution.getStatus().isGreaterThan(minStatus)) {    executions.add(jobExecution);  }} @TO@ EnhancedForStatement@@for (JobInstance jobInstance : lastInstances) {  List<JobExecution> jobExecutions=jobExplorer.getJobExecutions(jobInstance);  if (jobExecutions == null || jobExecutions.isEmpty()) {    continue;  }  JobExecution jobExecution=jobExecutions.get(jobExecutions.size() - 1);  if (jobExecution.getStatus().isGreaterThan(minStatus)) {    executions.add(jobExecution);  }} @AT@ 13190 @LENGTH@ 160
------INS SingleVariableDeclaration@@JobExecution jobExecution @TO@ EnhancedForStatement@@for (JobExecution jobExecution : jobExecutions) {  if (jobExecution.getStatus().isGreaterThan(minStatus)) {    executions.add(jobExecution);  }} @AT@ 13195 @LENGTH@ 25
---------INS SimpleType@@JobExecution @TO@ SingleVariableDeclaration@@JobExecution jobExecution @AT@ 13195 @LENGTH@ 12
---------INS SimpleName@@jobExecution @TO@ SingleVariableDeclaration@@JobExecution jobExecution @AT@ 13208 @LENGTH@ 12
------INS SimpleName@@jobExecutions @TO@ EnhancedForStatement@@for (JobExecution jobExecution : jobExecutions) {  if (jobExecution.getStatus().isGreaterThan(minStatus)) {    executions.add(jobExecution);  }} @AT@ 13223 @LENGTH@ 13
------MOV IfStatement@@if (jobExecution.getStatus().isGreaterThan(minStatus)) {  executions.add(jobExecution);} @TO@ EnhancedForStatement@@for (JobExecution jobExecution : jobExecutions) {  if (jobExecution.getStatus().isGreaterThan(minStatus)) {    executions.add(jobExecution);  }} @AT@ 13232 @LENGTH@ 97


UPD TypeDeclaration@@[public]TestLazySortedMap, AbstractTestSortedMap<K,V> @TO@ [@SuppressWarnings("boxing"), public]TestLazySortedMap, AbstractTestSortedMap<K,V> @AT@ 1464 @LENGTH@ 3663
---INS SingleMemberAnnotation@@@SuppressWarnings("boxing") @TO@ TypeDeclaration@@[public]TestLazySortedMap, AbstractTestSortedMap<K,V> @AT@ 1464 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:from("quartz://myGroup/myTimerName?trigger.repeatInterval=2&trigger.repeatCount=1").to("mock:result") @TO@ MethodInvocation:from("quartz://myGroup/myTimerName?trigger.repeatInterval=2&trigger.repeatCount=1").routeId("myRoute").to("mock:result") @AT@ 2474 @LENGTH@ 102
---UPD MethodInvocation@@from("quartz://myGroup/myTimerName?trigger.repeatInterval=2&trigger.repeatCount=1").to("mock:result") @TO@ from("quartz://myGroup/myTimerName?trigger.repeatInterval=2&trigger.repeatCount=1").routeId("myRoute").to("mock:result") @AT@ 2474 @LENGTH@ 101
------INS MethodInvocation@@MethodName:routeId:["myRoute"] @TO@ MethodInvocation@@from("quartz://myGroup/myTimerName?trigger.repeatInterval=2&trigger.repeatCount=1").to("mock:result") @AT@ 3034 @LENGTH@ 102
---------INS StringLiteral@@"myRoute" @TO@ MethodInvocation@@MethodName:routeId:["myRoute"] @AT@ 3126 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertTrue("Should not be that fast to run: " + delta,delta > 4000) @TO@ MethodInvocation:assertTrue("Should not be that fast to run: " + delta,delta > 3800) @AT@ 1474 @LENGTH@ 69
---UPD MethodInvocation@@assertTrue("Should not be that fast to run: " + delta,delta > 4000) @TO@ assertTrue("Should not be that fast to run: " + delta,delta > 3800) @AT@ 1474 @LENGTH@ 68
------UPD SimpleName@@MethodName:assertTrue:["Should not be that fast to run: " + delta, delta > 4000] @TO@ MethodName:assertTrue:["Should not be that fast to run: " + delta, delta > 3800] @AT@ 1474 @LENGTH@ 68
---------UPD InfixExpression@@delta > 4000 @TO@ delta > 3800 @AT@ 1529 @LENGTH@ 12
------------UPD NumberLiteral@@4000 @TO@ 3800 @AT@ 1537 @LENGTH@ 4


UPD MethodDeclaration@@private, void, MethodName:addNonRetryableExceptionIfMissing, Class... cls,  @TO@ private, void, MethodName:addNonRetryableExceptionIfMissing, Class<? extends Throwable>... cls,  @AT@ 20029 @LENGTH@ 378
---UPD SingleVariableDeclaration@@Class... cls @TO@ Class<? extends Throwable>... cls @AT@ 20076 @LENGTH@ 12
------DEL SimpleType@@Class @AT@ 20076 @LENGTH@ 5
------INS ParameterizedType@@Class<? extends Throwable> @TO@ SingleVariableDeclaration@@Class... cls @AT@ 20135 @LENGTH@ 26
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 20135 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 20141 @LENGTH@ 19
---UPD VariableDeclarationStatement@@List exceptions=new ArrayList<Class<? extends Throwable>>(); @TO@ List<Class<? extends Throwable>> exceptions=new ArrayList<Class<? extends Throwable>>(); @AT@ 20094 @LENGTH@ 62
------DEL SimpleType@@List @AT@ 20094 @LENGTH@ 4
------INS ParameterizedType@@List<Class<? extends Throwable>> @TO@ VariableDeclarationStatement@@List exceptions=new ArrayList<Class<? extends Throwable>>(); @AT@ 20174 @LENGTH@ 32
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Class<? extends Throwable>> @AT@ 20174 @LENGTH@ 4
---------INS ParameterizedType@@Class<? extends Throwable> @TO@ ParameterizedType@@List<Class<? extends Throwable>> @AT@ 20179 @LENGTH@ 26
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 20179 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 20185 @LENGTH@ 19
---UPD EnhancedForStatement@@for (Class exceptionClass : nonRetryableExceptionClasses) {  exceptions.add(exceptionClass);} @TO@ for (Class<? extends Throwable> exceptionClass : nonRetryableExceptionClasses) {  exceptions.add(exceptionClass);} @AT@ 20159 @LENGTH@ 98
------UPD SingleVariableDeclaration@@Class exceptionClass @TO@ Class<? extends Throwable> exceptionClass @AT@ 20164 @LENGTH@ 20
---------DEL SimpleType@@Class @AT@ 20164 @LENGTH@ 5
---------INS ParameterizedType@@Class<? extends Throwable> @TO@ SingleVariableDeclaration@@Class exceptionClass @AT@ 20272 @LENGTH@ 26
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 20272 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 20278 @LENGTH@ 19
---UPD EnhancedForStatement@@for (Class fatal : cls) {  if (!exceptions.contains(fatal)) {    exceptions.add(fatal);  }} @TO@ for (Class<? extends Throwable> fatal : cls) {  if (!exceptions.contains(fatal)) {    exceptions.add(fatal);  }} @AT@ 20260 @LENGTH@ 99
------UPD SingleVariableDeclaration@@Class fatal @TO@ Class<? extends Throwable> fatal @AT@ 20265 @LENGTH@ 11
---------DEL SimpleType@@Class @AT@ 20265 @LENGTH@ 5
---------INS ParameterizedType@@Class<? extends Throwable> @TO@ SingleVariableDeclaration@@Class fatal @AT@ 20394 @LENGTH@ 26
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 20394 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 20400 @LENGTH@ 19
---UPD ExpressionStatement@@Assignment:nonRetryableExceptionClasses=exceptions @TO@ Assignment:nonRetryableExceptionClasses=(List<Class<? extends Throwable>>)exceptions @AT@ 20362 @LENGTH@ 42
------UPD Assignment@@nonRetryableExceptionClasses=exceptions @TO@ nonRetryableExceptionClasses=(List<Class<? extends Throwable>>)exceptions @AT@ 20362 @LENGTH@ 41
---------DEL SimpleName@@exceptions @AT@ 20393 @LENGTH@ 10
---------INS CastExpression@@(List<Class<? extends Throwable>>)exceptions @TO@ Assignment@@nonRetryableExceptionClasses=exceptions @AT@ 20543 @LENGTH@ 44
------------INS ParameterizedType@@List<Class<? extends Throwable>> @TO@ CastExpression@@(List<Class<? extends Throwable>>)exceptions @AT@ 20544 @LENGTH@ 32
---------------INS SimpleType@@List @TO@ ParameterizedType@@List<Class<? extends Throwable>> @AT@ 20544 @LENGTH@ 4
---------------INS ParameterizedType@@Class<? extends Throwable> @TO@ ParameterizedType@@List<Class<? extends Throwable>> @AT@ 20549 @LENGTH@ 26
------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 20549 @LENGTH@ 5
------------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 20555 @LENGTH@ 19
------------INS SimpleName@@exceptions @TO@ CastExpression@@(List<Class<? extends Throwable>>)exceptions @AT@ 20577 @LENGTH@ 10


UPD TypeDeclaration@@[public]TestCollatingIterator, AbstractTestIterator<Integer> @TO@ [@SuppressWarnings("boxing"), public]TestCollatingIterator, AbstractTestIterator<Integer> @AT@ 1103 @LENGTH@ 8458
---INS SingleMemberAnnotation@@@SuppressWarnings("boxing") @TO@ TypeDeclaration@@[public]TestCollatingIterator, AbstractTestIterator<Integer> @AT@ 1103 @LENGTH@ 27


INS ExpressionStatement@@MethodInvocation:writeAttributes(streamWriter) @TO@ MethodDeclaration@@public, void, MethodName:writeContent, final XMLExtendedStreamWriter streamWriter, XMLStreamException,  @AT@ 1915 @LENGTH@ 30
---INS MethodInvocation@@writeAttributes(streamWriter) @TO@ ExpressionStatement@@MethodInvocation:writeAttributes(streamWriter) @AT@ 1915 @LENGTH@ 29
------INS SimpleName@@MethodName:writeAttributes:[streamWriter] @TO@ MethodInvocation@@writeAttributes(streamWriter) @AT@ 1915 @LENGTH@ 29
---------INS SimpleName@@streamWriter @TO@ SimpleName@@MethodName:writeAttributes:[streamWriter] @AT@ 1931 @LENGTH@ 12


MOV ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testScanFile, Exception,  @AT@ 1905 @LENGTH@ 31


MOV ExpressionStatement@@MethodInvocation:answer.setFileName(file.getFilename()) @TO@ MethodDeclaration@@private, RemoteFile<ChannelSftp.LsEntry>, MethodName:asRemoteFile, String directory, ChannelSftp.LsEntry file,  @AT@ 4298 @LENGTH@ 39


UPD TryStatement@@try {  Tracker tracker=(Tracker)q.remove();  tracker.delete();  tracker.clear();  trackers.remove(tracker);} catch (InterruptedException e) {  continue;} @TO@ try {  Tracker tracker=(Tracker)q.remove();  trackers.remove(tracker);  tracker.delete();  tracker.clear();} catch (InterruptedException e) {  continue;} @AT@ 8370 @LENGTH@ 360
---MOV ExpressionStatement@@MethodInvocation:trackers.remove(tracker) @TO@ TryStatement@@try {  Tracker tracker=(Tracker)q.remove();  tracker.delete();  tracker.clear();  trackers.remove(tracker);} catch (InterruptedException e) {  continue;} @AT@ 8606 @LENGTH@ 25


UPD FieldDeclaration@@static, final, String, [RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @TO@ static, final, String, [RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @AT@ 8219 @LENGTH@ 95
---UPD VariableDeclarationFragment@@RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8239 @LENGTH@ 74
------UPD StringLiteral@@"https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ "http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8253 @LENGTH@ 60


MOV ExpressionStatement@@Assignment:canRun=true @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1794 @LENGTH@ 14


UPD FieldDeclaration@@static, final, String, [RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @TO@ static, final, String, [RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @AT@ 8199 @LENGTH@ 94
---UPD VariableDeclarationFragment@@RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8219 @LENGTH@ 73
------UPD StringLiteral@@"http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ "https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8233 @LENGTH@ 59


UPD TypeDeclaration@@[public]UndeployDeploymentPlanBuilder, [DeploymentPlanBuilder] @TO@ [public]UndeployDeploymentPlanBuilder, [DeploymentSetActionsCompleteBuilder] @AT@ 1260 @LENGTH@ 1356
---UPD SimpleType@@DeploymentPlanBuilder @TO@ DeploymentSetActionsCompleteBuilder @AT@ 1315 @LENGTH@ 21


INS MethodDeclaration@@public, void, MethodName:prepareShutdown,  @TO@ TypeDeclaration@@[public]MailConsumer, ScheduledPollConsumer[BatchConsumer, ShutdownAware] @AT@ 7679 @LENGTH@ 53
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 7679 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 7686 @LENGTH@ 4
---INS SimpleName@@MethodName:prepareShutdown @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 7691 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(routerEndpointURI) @TO@ MethodInvocation:from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @AT@ 3161 @LENGTH@ 769
---UPD MethodInvocation@@from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(routerEndpointURI) @TO@ from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @AT@ 3161 @LENGTH@ 768
------UPD SimpleName@@MethodName:to:[routerEndpointURI] @TO@ MethodName:to:[SERVICE_URI] @AT@ 3908 @LENGTH@ 21
---------UPD SimpleName@@routerEndpointURI @TO@ SERVICE_URI @AT@ 3911 @LENGTH@ 17


UPD TryStatement@@try {  utils=new DomainDeploymentUtils("messaging-mbean.sar",Test.class.getPackage());  utils.deploy();  ObjectName objectName=new ObjectName("jboss:name=test,type=messaging");  System.out.println("Accessing server-one");  System.out.println();  MBeanServerConnection mbeanServer=utils.getServerOneConnection();  Thread.sleep(1000);  System.out.println("Sending message: Test");  mbeanServer.invoke(objectName,"sendMessage",new Object[]{"Test"},new String[]{"java.lang.String"});  Thread.sleep(1000);  List<String> msgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"});  System.out.println("Received messages: " + msgs);  System.out.println("Accessing server-two");  System.out.println();  mbeanServer=utils.getServerTwoConnection();  Thread.sleep(1000);  System.out.println("Sending message: Test");  mbeanServer.invoke(objectName,"sendMessage",new Object[]{"Test"},new String[]{"java.lang.String"});  Thread.sleep(1000);  msgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"});  System.out.println("Received messages: " + msgs);}  finally {  utils.undeploy();  safeClose(utils);} @TO@ try {  utils=new DomainDeploymentUtils("messaging-mbean.sar",Test.class.getPackage());  utils.deploy();  ObjectName objectName=new ObjectName("jboss:name=test,type=messaging");  System.out.println("Accessing server-one");  System.out.println();  MBeanServerConnection mbeanServer=utils.getServerOneConnection();  Thread.sleep(1000);  System.out.println("Sending message: Test");  mbeanServer.invoke(objectName,"sendMessage",new Object[]{"Test"},new String[]{"java.lang.String"});  Thread.sleep(1000);  @SuppressWarnings("unchecked") List<String> msgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"});  System.out.println("Received messages: " + msgs);  System.out.println("Accessing server-two");  System.out.println();  mbeanServer=utils.getServerTwoConnection();  Thread.sleep(1000);  System.out.println("Sending message: Test");  mbeanServer.invoke(objectName,"sendMessage",new Object[]{"Test"},new String[]{"java.lang.String"});  Thread.sleep(1000);  @SuppressWarnings("unchecked") List<String> moreMsgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"});  System.out.println("Received messages: " + moreMsgs);}  finally {  utils.undeploy();  safeClose(utils);} @AT@ 1582 @LENGTH@ 1598
---UPD VariableDeclarationStatement@@List<String> msgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"}); @TO@ @SuppressWarnings("unchecked") List<String> msgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"}); @AT@ 2299 @LENGTH@ 139
---DEL ExpressionStatement@@Assignment:msgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"}) @AT@ 2902 @LENGTH@ 126
------DEL Assignment@@msgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"}) @AT@ 2902 @LENGTH@ 125
---------DEL SimpleName@@msgs @AT@ 2902 @LENGTH@ 4
---------DEL Operator@@= @AT@ 2906 @LENGTH@ 1
---INS VariableDeclarationStatement@@@SuppressWarnings("unchecked") List<String> moreMsgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"}); @TO@ TryStatement@@try {  utils=new DomainDeploymentUtils("messaging-mbean.sar",Test.class.getPackage());  utils.deploy();  ObjectName objectName=new ObjectName("jboss:name=test,type=messaging");  System.out.println("Accessing server-one");  System.out.println();  MBeanServerConnection mbeanServer=utils.getServerOneConnection();  Thread.sleep(1000);  System.out.println("Sending message: Test");  mbeanServer.invoke(objectName,"sendMessage",new Object[]{"Test"},new String[]{"java.lang.String"});  Thread.sleep(1000);  List<String> msgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"});  System.out.println("Received messages: " + msgs);  System.out.println("Accessing server-two");  System.out.println();  mbeanServer=utils.getServerTwoConnection();  Thread.sleep(1000);  System.out.println("Sending message: Test");  mbeanServer.invoke(objectName,"sendMessage",new Object[]{"Test"},new String[]{"java.lang.String"});  Thread.sleep(1000);  msgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"});  System.out.println("Received messages: " + msgs);}  finally {  utils.undeploy();  safeClose(utils);} @AT@ 2944 @LENGTH@ 186
------INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@@SuppressWarnings("unchecked") List<String> moreMsgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"}); @AT@ 2987 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 2987 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 2992 @LENGTH@ 6
------INS VariableDeclarationFragment@@moreMsgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"}) @TO@ VariableDeclarationStatement@@@SuppressWarnings("unchecked") List<String> moreMsgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"}); @AT@ 3000 @LENGTH@ 129
---------MOV CastExpression@@(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"}) @TO@ VariableDeclarationFragment@@moreMsgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"}) @AT@ 2909 @LENGTH@ 118
---------INS SimpleName@@moreMsgs @TO@ VariableDeclarationFragment@@moreMsgs=(List<String>)mbeanServer.invoke(objectName,"readMessages",new Object[]{"Test"},new String[]{"java.lang.String"}) @AT@ 3000 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:System.out.println("Received messages: " + msgs) @TO@ MethodInvocation:System.out.println("Received messages: " + moreMsgs) @AT@ 3041 @LENGTH@ 49
------UPD MethodInvocation@@System.out.println("Received messages: " + msgs) @TO@ System.out.println("Received messages: " + moreMsgs) @AT@ 3041 @LENGTH@ 48
---------UPD SimpleName@@MethodName:println:["Received messages: " + msgs] @TO@ MethodName:println:["Received messages: " + moreMsgs] @AT@ 3052 @LENGTH@ 37
------------UPD InfixExpression@@"Received messages: " + msgs @TO@ "Received messages: " + moreMsgs @AT@ 3060 @LENGTH@ 28
---------------UPD SimpleName@@msgs @TO@ moreMsgs @AT@ 3084 @LENGTH@ 4


UPD MethodDeclaration@@static, void, MethodName:writeLong, final OutputStream out, long v, IOException,  @TO@ static, void, MethodName:writeLong, final OutputStream out, final long v, IOException,  @AT@ 5739 @LENGTH@ 183
---UPD SingleVariableDeclaration@@long v @TO@ final long v @AT@ 5785 @LENGTH@ 6
------INS Modifier@@final @TO@ SingleVariableDeclaration@@long v @AT@ 6031 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:template.sendBody("direct:start",null) @AT@ 1626 @LENGTH@ 40
---DEL MethodInvocation@@template.sendBody("direct:start",null) @AT@ 1626 @LENGTH@ 39
------DEL SimpleName@@Name:template @AT@ 1626 @LENGTH@ 8
------DEL SimpleName@@MethodName:sendBody:["direct:start", null] @AT@ 1635 @LENGTH@ 30
---------DEL StringLiteral@@"direct:start" @AT@ 1644 @LENGTH@ 14
---------DEL NullLiteral@@null @AT@ 1660 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("direct:start").aggregate().constant(true).completionSize(2).completionTimeout(500L).groupExchanges().to("mock:result") @TO@ MethodInvocation:from("direct:start").log("Aggregator received ${body}").aggregate(constant(true)).completionSize(2).completionTimeout(500L).groupExchanges().to("mock:result") @AT@ 3012 @LENGTH@ 423
---UPD MethodInvocation@@from("direct:start").aggregate().constant(true).completionSize(2).completionTimeout(500L).groupExchanges().to("mock:result") @TO@ from("direct:start").log("Aggregator received ${body}").aggregate(constant(true)).completionSize(2).completionTimeout(500L).groupExchanges().to("mock:result") @AT@ 3012 @LENGTH@ 422
------UPD MethodInvocation@@MethodName:constant:[true] @TO@ MethodName:aggregate:[constant(true)] @AT@ 3012 @LENGTH@ 126
---------DEL BooleanLiteral@@true @AT@ 3133 @LENGTH@ 4
---------INS MethodInvocation@@constant(true) @TO@ MethodInvocation@@MethodName:constant:[true] @AT@ 3178 @LENGTH@ 14
------------INS SimpleName@@MethodName:constant:[true] @TO@ MethodInvocation@@constant(true) @AT@ 3178 @LENGTH@ 14
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:constant:[true] @AT@ 3187 @LENGTH@ 4
------UPD MethodInvocation@@MethodName:aggregate:[] @TO@ MethodName:log:["Aggregator received ${body}"] @AT@ 3012 @LENGTH@ 111
---------INS StringLiteral@@"Aggregator received ${body}" @TO@ MethodInvocation@@MethodName:aggregate:[] @AT@ 3058 @LENGTH@ 29


INS EnhancedForStatement@@for (LifecycleListener listener : service.findLifecycleListeners()) {  if (listener instanceof ServiceMapperListener) {    host.addContainerListener((ServiceMapperListener)listener);  }} @TO@ MethodDeclaration@@public, synchronized, void, MethodName:addHost, Host host,  @AT@ 4769 @LENGTH@ 231
---INS SingleVariableDeclaration@@LifecycleListener listener @TO@ EnhancedForStatement@@for (LifecycleListener listener : service.findLifecycleListeners()) {  if (listener instanceof ServiceMapperListener) {    host.addContainerListener((ServiceMapperListener)listener);  }} @AT@ 4774 @LENGTH@ 26
------INS SimpleType@@LifecycleListener @TO@ SingleVariableDeclaration@@LifecycleListener listener @AT@ 4774 @LENGTH@ 17
------INS SimpleName@@listener @TO@ SingleVariableDeclaration@@LifecycleListener listener @AT@ 4792 @LENGTH@ 8
---INS MethodInvocation@@service.findLifecycleListeners() @TO@ EnhancedForStatement@@for (LifecycleListener listener : service.findLifecycleListeners()) {  if (listener instanceof ServiceMapperListener) {    host.addContainerListener((ServiceMapperListener)listener);  }} @AT@ 4803 @LENGTH@ 32
------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.findLifecycleListeners() @AT@ 4803 @LENGTH@ 7
------INS SimpleName@@MethodName:findLifecycleListeners:[] @TO@ MethodInvocation@@service.findLifecycleListeners() @AT@ 4811 @LENGTH@ 24
---INS IfStatement@@if (listener instanceof ServiceMapperListener) {  host.addContainerListener((ServiceMapperListener)listener);} @TO@ EnhancedForStatement@@for (LifecycleListener listener : service.findLifecycleListeners()) {  if (listener instanceof ServiceMapperListener) {    host.addContainerListener((ServiceMapperListener)listener);  }} @AT@ 4851 @LENGTH@ 139
------INS InstanceofExpression@@listener instanceof ServiceMapperListener @TO@ IfStatement@@if (listener instanceof ServiceMapperListener) {  host.addContainerListener((ServiceMapperListener)listener);} @AT@ 4855 @LENGTH@ 41
---------INS SimpleName@@listener @TO@ InstanceofExpression@@listener instanceof ServiceMapperListener @AT@ 4855 @LENGTH@ 8
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@listener instanceof ServiceMapperListener @AT@ 4864 @LENGTH@ 10
---------INS SimpleType@@ServiceMapperListener @TO@ InstanceofExpression@@listener instanceof ServiceMapperListener @AT@ 4875 @LENGTH@ 21
------INS Block@@ThenBody:{  host.addContainerListener((ServiceMapperListener)listener);} @TO@ IfStatement@@if (listener instanceof ServiceMapperListener) {  host.addContainerListener((ServiceMapperListener)listener);} @AT@ 4898 @LENGTH@ 92
---------INS ExpressionStatement@@MethodInvocation:host.addContainerListener((ServiceMapperListener)listener) @TO@ Block@@ThenBody:{  host.addContainerListener((ServiceMapperListener)listener);} @AT@ 4916 @LENGTH@ 60
------------INS MethodInvocation@@host.addContainerListener((ServiceMapperListener)listener) @TO@ ExpressionStatement@@MethodInvocation:host.addContainerListener((ServiceMapperListener)listener) @AT@ 4916 @LENGTH@ 59
---------------INS SimpleName@@Name:host @TO@ MethodInvocation@@host.addContainerListener((ServiceMapperListener)listener) @AT@ 4916 @LENGTH@ 4
---------------INS SimpleName@@MethodName:addContainerListener:[(ServiceMapperListener)listener] @TO@ MethodInvocation@@host.addContainerListener((ServiceMapperListener)listener) @AT@ 4921 @LENGTH@ 54
------------------INS CastExpression@@(ServiceMapperListener)listener @TO@ SimpleName@@MethodName:addContainerListener:[(ServiceMapperListener)listener] @AT@ 4942 @LENGTH@ 32
---------------------INS SimpleType@@ServiceMapperListener @TO@ CastExpression@@(ServiceMapperListener)listener @AT@ 4943 @LENGTH@ 21
---------------------INS SimpleName@@listener @TO@ CastExpression@@(ServiceMapperListener)listener @AT@ 4966 @LENGTH@ 8


UPD VariableDeclarationStatement@@String[] keys=new String[sets.length + 1]; @TO@ String[] keys=new String[sets.length]; @AT@ 3579 @LENGTH@ 44
---UPD VariableDeclarationFragment@@keys=new String[sets.length + 1] @TO@ keys=new String[sets.length] @AT@ 3588 @LENGTH@ 34
------UPD ArrayCreation@@new String[sets.length + 1] @TO@ new String[sets.length] @AT@ 3595 @LENGTH@ 27
---------DEL InfixExpression@@sets.length + 1 @AT@ 3606 @LENGTH@ 15
------------DEL QualifiedName@@sets.length @AT@ 3606 @LENGTH@ 11
------------DEL Operator@@+ @AT@ 3617 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 3620 @LENGTH@ 1
---------INS QualifiedName@@sets.length @TO@ ArrayCreation@@new String[sets.length + 1] @AT@ 3606 @LENGTH@ 11
------------MOV SimpleName@@sets @TO@ QualifiedName@@sets.length @AT@ 3606 @LENGTH@ 4
------------MOV SimpleName@@length @TO@ QualifiedName@@sets.length @AT@ 3611 @LENGTH@ 6


UPD SwitchStatement@@switch (status) {case STARTED:  return UpdateResultHandlerResponse.createRestartResponse();default :{  UpdateFailedException ufe=new UpdateFailedException("Server " + server + " did not restart. Server status is "+ status);  return UpdateResultHandlerResponse.createFailureResponse(ufe);}} @TO@ switch (status) {case STARTED:case STARTING:  return UpdateResultHandlerResponse.createRestartResponse();default :{  UpdateFailedException ufe=new UpdateFailedException("Server " + server + " did not restart. Server status is "+ status);  return UpdateResultHandlerResponse.createFailureResponse(ufe);}} @AT@ 31562 @LENGTH@ 386
---INS SwitchCase@@case STARTING: @TO@ SwitchStatement@@switch (status) {case STARTED:  return UpdateResultHandlerResponse.createRestartResponse();default :{  UpdateFailedException ufe=new UpdateFailedException("Server " + server + " did not restart. Server status is "+ status);  return UpdateResultHandlerResponse.createFailureResponse(ufe);}} @AT@ 31618 @LENGTH@ 14
------INS SimpleName@@STARTING @TO@ SwitchCase@@case STARTING: @AT@ 31623 @LENGTH@ 8


UPD VariableDeclarationStatement@@SortedBidiMap obj=(SortedBidiMap)makeObject(); @TO@ SortedBidiMap<?,?> obj=makeObject(); @AT@ 2805 @LENGTH@ 49
---INS ParameterizedType@@SortedBidiMap<?,?> @TO@ VariableDeclarationStatement@@SortedBidiMap obj=(SortedBidiMap)makeObject(); @AT@ 2745 @LENGTH@ 19
------INS SimpleType@@SortedBidiMap @TO@ ParameterizedType@@SortedBidiMap<?,?> @AT@ 2745 @LENGTH@ 13
------INS WildcardType@@? @TO@ ParameterizedType@@SortedBidiMap<?,?> @AT@ 2759 @LENGTH@ 1
------INS WildcardType@@? @TO@ ParameterizedType@@SortedBidiMap<?,?> @AT@ 2762 @LENGTH@ 1
---DEL SimpleType@@SortedBidiMap @AT@ 2805 @LENGTH@ 13
---UPD VariableDeclarationFragment@@obj=(SortedBidiMap)makeObject() @TO@ obj=makeObject() @AT@ 2819 @LENGTH@ 34
------INS MethodInvocation@@MethodName:makeObject:[] @TO@ VariableDeclarationFragment@@obj=(SortedBidiMap)makeObject() @AT@ 2771 @LENGTH@ 12
------DEL CastExpression@@(SortedBidiMap)makeObject() @AT@ 2825 @LENGTH@ 28
---------DEL SimpleType@@SortedBidiMap @AT@ 2826 @LENGTH@ 13
---------DEL MethodInvocation@@MethodName:makeObject:[] @AT@ 2841 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:from(url).routeId("route1").noAutoStartup().shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).to("seda:foo") @TO@ MethodInvocation:from(url).shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).to("seda:foo") @AT@ 2577 @LENGTH@ 257
---UPD MethodInvocation@@from(url).routeId("route1").noAutoStartup().shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).to("seda:foo") @TO@ from(url).shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).to("seda:foo") @AT@ 2577 @LENGTH@ 256
------DEL MethodInvocation@@MethodName:noAutoStartup:[] @AT@ 2577 @LENGTH@ 43
------DEL MethodInvocation@@MethodName:routeId:["route1"] @AT@ 2577 @LENGTH@ 27
---------DEL StringLiteral@@"route1" @AT@ 2595 @LENGTH@ 8


UPD IfStatement@@if (!endpoint.getConfiguration().isStepwise()) {  doChangeDirectory(path);} @TO@ if (!endpoint.getConfiguration().isStepwise()) {  doChangeDirectory(path);  return;} @AT@ 13925 @LENGTH@ 95
---UPD Block@@ThenBody:{  doChangeDirectory(path);} @TO@ ThenBody:{  doChangeDirectory(path);  return;} @AT@ 13972 @LENGTH@ 48
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  doChangeDirectory(path);} @AT@ 14023 @LENGTH@ 7


UPD MethodDeclaration@@voidMethodName:ServerControllerImpl,  @TO@ voidMethodName:ServerControllerImpl, final ServiceContainer container,  @AT@ 1665 @LENGTH@ 30
---INS SingleVariableDeclaration@@final ServiceContainer container @TO@ MethodDeclaration@@voidMethodName:ServerControllerImpl,  @AT@ 1650 @LENGTH@ 32
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ServiceContainer container @AT@ 1650 @LENGTH@ 5
------INS SimpleType@@ServiceContainer @TO@ SingleVariableDeclaration@@final ServiceContainer container @AT@ 1656 @LENGTH@ 16
------INS SimpleName@@container @TO@ SingleVariableDeclaration@@final ServiceContainer container @AT@ 1673 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:this.container=container @TO@ MethodDeclaration@@voidMethodName:ServerControllerImpl,  @AT@ 1694 @LENGTH@ 27
------INS Assignment@@this.container=container @TO@ ExpressionStatement@@Assignment:this.container=container @AT@ 1694 @LENGTH@ 26
---------INS FieldAccess@@this.container @TO@ Assignment@@this.container=container @AT@ 1694 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.container @AT@ 1694 @LENGTH@ 4
------------INS SimpleName@@container @TO@ FieldAccess@@this.container @AT@ 1699 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@this.container=container @AT@ 1708 @LENGTH@ 1
---------INS SimpleName@@container @TO@ Assignment@@this.container=container @AT@ 1711 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:map=(Map)in.readObject() @TO@ Assignment:map=(Map<K,V>)in.readObject() @AT@ 6538 @LENGTH@ 28
---UPD Assignment@@map=(Map)in.readObject() @TO@ map=(Map<K,V>)in.readObject() @AT@ 6538 @LENGTH@ 27
------UPD CastExpression@@(Map)in.readObject() @TO@ (Map<K,V>)in.readObject() @AT@ 6544 @LENGTH@ 21
---------INS ParameterizedType@@Map<K,V> @TO@ CastExpression@@(Map)in.readObject() @AT@ 6545 @LENGTH@ 9
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<K,V> @AT@ 6545 @LENGTH@ 3
------------INS SimpleType@@K @TO@ ParameterizedType@@Map<K,V> @AT@ 6549 @LENGTH@ 1
------------INS SimpleType@@V @TO@ ParameterizedType@@Map<K,V> @AT@ 6552 @LENGTH@ 1
---------DEL SimpleType@@Map @AT@ 6545 @LENGTH@ 3


UPD MethodDeclaration@@public, synchronized, ChannelPipeline, MethodName:getPipeline, Exception,  @TO@ public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 2096 @LENGTH@ 1473
---DEL Modifier@@synchronized @AT@ 2103 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:cmds[i++]=(Closure<E>)closure @TO@ Assignment:cmds[i++]=closure @AT@ 3109 @LENGTH@ 33
---UPD Assignment@@cmds[i++]=(Closure<E>)closure @TO@ cmds[i++]=closure @AT@ 3109 @LENGTH@ 32
------DEL CastExpression@@(Closure<E>)closure @AT@ 3121 @LENGTH@ 20
---------DEL ParameterizedType@@Closure<E> @AT@ 3122 @LENGTH@ 10
------------DEL SimpleType@@Closure @AT@ 3122 @LENGTH@ 7
------------DEL SimpleType@@E @AT@ 3130 @LENGTH@ 1
---------DEL SimpleName@@closure @AT@ 3134 @LENGTH@ 7
------INS SimpleName@@closure @TO@ Assignment@@cmds[i++]=(Closure<E>)closure @AT@ 3121 @LENGTH@ 7


UPD FieldDeclaration@@private, static, int, [counter=0] @TO@ private, static, int, [counter] @AT@ 1308 @LENGTH@ 31
---UPD VariableDeclarationFragment@@counter=0 @TO@ counter @AT@ 1327 @LENGTH@ 11
------DEL NumberLiteral@@0 @AT@ 1337 @LENGTH@ 1


INS WhileStatement@@while (reader.hasNext()) {  final int t=reader.nextTag();switch (t) {case END_ELEMENT:    return;case START_ELEMENT:  throw unexpectedElement(reader);default :throw new IllegalStateException();}} @TO@ MethodDeclaration@@protected, static, void, MethodName:consumeRemainder, final XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 10400 @LENGTH@ 290
---INS MethodInvocation@@reader.hasNext() @TO@ WhileStatement@@while (reader.hasNext()) {  final int t=reader.nextTag();switch (t) {case END_ELEMENT:    return;case START_ELEMENT:  throw unexpectedElement(reader);default :throw new IllegalStateException();}} @AT@ 10407 @LENGTH@ 16
------MOV SimpleName@@Name:reader @TO@ MethodInvocation@@reader.hasNext() @AT@ 10404 @LENGTH@ 6
------MOV SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@reader.hasNext() @AT@ 10411 @LENGTH@ 9
---INS Block@@WhileBody:{  final int t=reader.nextTag();switch (t) {case END_ELEMENT:    return;case START_ELEMENT:  throw unexpectedElement(reader);default :throw new IllegalStateException();}} @TO@ WhileStatement@@while (reader.hasNext()) {  final int t=reader.nextTag();switch (t) {case END_ELEMENT:    return;case START_ELEMENT:  throw unexpectedElement(reader);default :throw new IllegalStateException();}} @AT@ 10425 @LENGTH@ 265
------INS VariableDeclarationStatement@@final int t=reader.nextTag(); @TO@ Block@@WhileBody:{  final int t=reader.nextTag();switch (t) {case END_ELEMENT:    return;case START_ELEMENT:  throw unexpectedElement(reader);default :throw new IllegalStateException();}} @AT@ 10439 @LENGTH@ 31
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int t=reader.nextTag(); @AT@ 10439 @LENGTH@ 5
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int t=reader.nextTag(); @AT@ 10445 @LENGTH@ 3
---------INS VariableDeclarationFragment@@t=reader.nextTag() @TO@ VariableDeclarationStatement@@final int t=reader.nextTag(); @AT@ 10449 @LENGTH@ 20
------------INS SimpleName@@t @TO@ VariableDeclarationFragment@@t=reader.nextTag() @AT@ 10449 @LENGTH@ 1
------------INS MethodInvocation@@reader.nextTag() @TO@ VariableDeclarationFragment@@t=reader.nextTag() @AT@ 10453 @LENGTH@ 16
---------------MOV SimpleName@@Name:reader @TO@ MethodInvocation@@reader.nextTag() @AT@ 10424 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:nextTag:[] @TO@ MethodInvocation@@reader.nextTag() @AT@ 10431 @LENGTH@ 9
------INS SwitchStatement@@switch (t) {case END_ELEMENT:  return;case START_ELEMENT:throw unexpectedElement(reader);default :throw new IllegalStateException();} @TO@ Block@@WhileBody:{  final int t=reader.nextTag();switch (t) {case END_ELEMENT:    return;case START_ELEMENT:  throw unexpectedElement(reader);default :throw new IllegalStateException();}} @AT@ 10483 @LENGTH@ 197
---------MOV ThrowStatement@@MethodInvocation:unexpectedElement(reader) @TO@ SwitchStatement@@switch (t) {case END_ELEMENT:  return;case START_ELEMENT:throw unexpectedElement(reader);default :throw new IllegalStateException();} @AT@ 10473 @LENGTH@ 32
---------INS SimpleName@@t @TO@ SwitchStatement@@switch (t) {case END_ELEMENT:  return;case START_ELEMENT:throw unexpectedElement(reader);default :throw new IllegalStateException();} @AT@ 10491 @LENGTH@ 1
---------INS SwitchCase@@case END_ELEMENT: @TO@ SwitchStatement@@switch (t) {case END_ELEMENT:  return;case START_ELEMENT:throw unexpectedElement(reader);default :throw new IllegalStateException();} @AT@ 10512 @LENGTH@ 17
------------INS SimpleName@@END_ELEMENT @TO@ SwitchCase@@case END_ELEMENT: @AT@ 10517 @LENGTH@ 11
---------INS ReturnStatement@@ @TO@ SwitchStatement@@switch (t) {case END_ELEMENT:  return;case START_ELEMENT:throw unexpectedElement(reader);default :throw new IllegalStateException();} @AT@ 10530 @LENGTH@ 7
---------INS SwitchCase@@case START_ELEMENT: @TO@ SwitchStatement@@switch (t) {case END_ELEMENT:  return;case START_ELEMENT:throw unexpectedElement(reader);default :throw new IllegalStateException();} @AT@ 10554 @LENGTH@ 19
------------INS SimpleName@@START_ELEMENT @TO@ SwitchCase@@case START_ELEMENT: @AT@ 10559 @LENGTH@ 13
---------INS SwitchCase@@default @TO@ SwitchStatement@@switch (t) {case END_ELEMENT:  return;case START_ELEMENT:throw unexpectedElement(reader);default :throw new IllegalStateException();} @AT@ 10623 @LENGTH@ 8
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException() @TO@ SwitchStatement@@switch (t) {case END_ELEMENT:  return;case START_ELEMENT:throw unexpectedElement(reader);default :throw new IllegalStateException();} @AT@ 10632 @LENGTH@ 34
------------INS ClassInstanceCreation@@IllegalStateException[] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException() @AT@ 10638 @LENGTH@ 27
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException[] @AT@ 10638 @LENGTH@ 3
---------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException[] @AT@ 10642 @LENGTH@ 21


INS MethodDeclaration@@public, String, MethodName:duplicate, String input, Object value,  @TO@ TypeDeclaration@@[public, static]PlainPojo,  @AT@ 1738 @LENGTH@ 84
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:duplicate, String input, Object value,  @AT@ 1738 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:duplicate, String input, Object value,  @AT@ 1745 @LENGTH@ 6
---INS SimpleName@@MethodName:duplicate @TO@ MethodDeclaration@@public, String, MethodName:duplicate, String input, Object value,  @AT@ 1752 @LENGTH@ 9
---INS SingleVariableDeclaration@@String input @TO@ MethodDeclaration@@public, String, MethodName:duplicate, String input, Object value,  @AT@ 1762 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String input @AT@ 1762 @LENGTH@ 6
------INS SimpleName@@input @TO@ SingleVariableDeclaration@@String input @AT@ 1769 @LENGTH@ 5
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, String, MethodName:duplicate, String input, Object value,  @AT@ 1776 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 1776 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 1783 @LENGTH@ 5
---INS ReturnStatement@@InfixExpression:value + "." + input @TO@ MethodDeclaration@@public, String, MethodName:duplicate, String input, Object value,  @AT@ 1795 @LENGTH@ 23
------INS InfixExpression@@value + "." + input @TO@ ReturnStatement@@InfixExpression:value + "." + input @AT@ 1802 @LENGTH@ 15
---------INS SimpleName@@value @TO@ InfixExpression@@value + "." + input @AT@ 1802 @LENGTH@ 5
---------INS Operator@@+ @TO@ InfixExpression@@value + "." + input @AT@ 1807 @LENGTH@ 1
---------INS StringLiteral@@"." @TO@ InfixExpression@@value + "." + input @AT@ 1808 @LENGTH@ 3
---------INS SimpleName@@input @TO@ InfixExpression@@value + "." + input @AT@ 1812 @LENGTH@ 5


DEL MethodDeclaration@@ServerGroupDeploymentPlanBuilder, MethodName:toServerGroup, String serverGroupName,  @AT@ 2131 @LENGTH@ 38
---DEL SimpleType@@ServerGroupDeploymentPlanBuilder @AT@ 2098 @LENGTH@ 32
---DEL SimpleName@@MethodName:toServerGroup @AT@ 2131 @LENGTH@ 13
---DEL SingleVariableDeclaration@@String serverGroupName @AT@ 2145 @LENGTH@ 22
------DEL SimpleType@@String @AT@ 2145 @LENGTH@ 6
------DEL SimpleName@@serverGroupName @AT@ 2152 @LENGTH@ 15


UPD VariableDeclarationStatement@@Map values=new ListOrderedMap(); @TO@ Map<String,String> values=new ListOrderedMap<String,String>(); @AT@ 10483 @LENGTH@ 34
---DEL SimpleType@@Map @AT@ 10483 @LENGTH@ 3
---UPD VariableDeclarationFragment@@values=new ListOrderedMap() @TO@ values=new ListOrderedMap<String,String>() @AT@ 10487 @LENGTH@ 29
------UPD ClassInstanceCreation@@ListOrderedMap[] @TO@ ListOrderedMap<String,String>[] @AT@ 10496 @LENGTH@ 20
---------DEL SimpleType@@ListOrderedMap @AT@ 10500 @LENGTH@ 14
---------INS ParameterizedType@@ListOrderedMap<String,String> @TO@ ClassInstanceCreation@@ListOrderedMap[] @AT@ 10548 @LENGTH@ 30
------------INS SimpleType@@ListOrderedMap @TO@ ParameterizedType@@ListOrderedMap<String,String> @AT@ 10548 @LENGTH@ 14
------------INS SimpleType@@String @TO@ ParameterizedType@@ListOrderedMap<String,String> @AT@ 10563 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@ListOrderedMap<String,String> @AT@ 10571 @LENGTH@ 6
---INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map values=new ListOrderedMap(); @AT@ 10515 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 10515 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 10519 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 10527 @LENGTH@ 6


DEL IfStatement@@if (name.startsWith("org.apache.camel.core.osgi.other")) {  return false;} else {  return true;} @AT@ 4209 @LENGTH@ 136
---DEL Block@@ThenBody:{  return false;} @AT@ 4266 @LENGTH@ 37
------DEL ReturnStatement@@BooleanLiteral:false @AT@ 4280 @LENGTH@ 13
---------DEL BooleanLiteral@@false @AT@ 4287 @LENGTH@ 5
---DEL Block@@ElseBody:{  return true;} @AT@ 4309 @LENGTH@ 36
------DEL ReturnStatement@@BooleanLiteral:true @AT@ 4323 @LENGTH@ 12
---------DEL BooleanLiteral@@true @AT@ 4330 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:ServiceHelper.startServices(target,interceptor) @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 3683 @LENGTH@ 49
---INS MethodInvocation@@ServiceHelper.startServices(target,interceptor) @TO@ ExpressionStatement@@MethodInvocation:ServiceHelper.startServices(target,interceptor) @AT@ 3683 @LENGTH@ 48
------INS SimpleName@@Name:ServiceHelper @TO@ MethodInvocation@@ServiceHelper.startServices(target,interceptor) @AT@ 3683 @LENGTH@ 13
------INS SimpleName@@MethodName:startServices:[target, interceptor] @TO@ MethodInvocation@@ServiceHelper.startServices(target,interceptor) @AT@ 3697 @LENGTH@ 34
---------INS SimpleName@@target @TO@ SimpleName@@MethodName:startServices:[target, interceptor] @AT@ 3711 @LENGTH@ 6
---------INS SimpleName@@interceptor @TO@ SimpleName@@MethodName:startServices:[target, interceptor] @AT@ 3719 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:System.out.println("    -P, <url>                       Load system properties from the given url") @TO@ MethodInvocation:System.out.println("    -P  <url>                       Load system properties from the given url") @AT@ 2480 @LENGTH@ 100
---UPD MethodInvocation@@System.out.println("    -P, <url>                       Load system properties from the given url") @TO@ System.out.println("    -P  <url>                       Load system properties from the given url") @AT@ 2480 @LENGTH@ 99
------UPD SimpleName@@MethodName:println:["    -P, <url>                       Load system properties from the given url"] @TO@ MethodName:println:["    -P  <url>                       Load system properties from the given url"] @AT@ 2491 @LENGTH@ 88
---------UPD StringLiteral@@"    -P, <url>                       Load system properties from the given url" @TO@ "    -P  <url>                       Load system properties from the given url" @AT@ 2499 @LENGTH@ 79


UPD FieldDeclaration@@private, AbstractAuthenticationProviderElement<?>, [authenticationProvider] @TO@ private, String, [authenticationProvider] @AT@ 2472 @LENGTH@ 72
---DEL ParameterizedType@@AbstractAuthenticationProviderElement<?> @AT@ 2480 @LENGTH@ 40
------DEL SimpleType@@AbstractAuthenticationProviderElement @AT@ 2480 @LENGTH@ 37
------DEL WildcardType@@? @AT@ 2518 @LENGTH@ 1
---INS SimpleType@@String @TO@ FieldDeclaration@@private, AbstractAuthenticationProviderElement<?>, [authenticationProvider] @AT@ 2480 @LENGTH@ 6


DEL MethodDeclaration@@protected, void, MethodName:applyUpdate, LoggingSubsystemElement element, UpdateFailedException,  @AT@ 1991 @LENGTH@ 339
---DEL Modifier@@protected @AT@ 1991 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 2001 @LENGTH@ 4
---DEL SimpleName@@MethodName:applyUpdate @AT@ 2006 @LENGTH@ 11
---DEL SingleVariableDeclaration@@LoggingSubsystemElement element @AT@ 2018 @LENGTH@ 31
------DEL SimpleType@@LoggingSubsystemElement @AT@ 2018 @LENGTH@ 23
------DEL SimpleName@@element @AT@ 2042 @LENGTH@ 7
---DEL SimpleType@@UpdateFailedException @AT@ 2058 @LENGTH@ 21
---DEL VariableDeclarationStatement@@final LoggerElement logger=new LoggerElement(name); @AT@ 2090 @LENGTH@ 53
------DEL Modifier@@final @AT@ 2090 @LENGTH@ 5
------DEL SimpleType@@LoggerElement @AT@ 2096 @LENGTH@ 13
------DEL VariableDeclarationFragment@@logger=new LoggerElement(name) @AT@ 2110 @LENGTH@ 32
---------DEL SimpleName@@logger @AT@ 2110 @LENGTH@ 6
---------DEL ClassInstanceCreation@@LoggerElement[name] @AT@ 2119 @LENGTH@ 23
------------DEL New@@new @AT@ 2119 @LENGTH@ 3
------------DEL SimpleType@@LoggerElement @AT@ 2123 @LENGTH@ 13
------------DEL SimpleName@@name @AT@ 2137 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:logger.setUseParentHandlers(useParentHandlers) @AT@ 2152 @LENGTH@ 47
------DEL MethodInvocation@@logger.setUseParentHandlers(useParentHandlers) @AT@ 2152 @LENGTH@ 46
---------DEL SimpleName@@Name:logger @AT@ 2152 @LENGTH@ 6
---------DEL SimpleName@@MethodName:setUseParentHandlers:[useParentHandlers] @AT@ 2159 @LENGTH@ 39
------------DEL SimpleName@@useParentHandlers @AT@ 2180 @LENGTH@ 17
---DEL IfStatement@@if (!element.addLogger(logger)) {  throw new UpdateFailedException("duplicate logger " + name);} @AT@ 2208 @LENGTH@ 116
------DEL PrefixExpression@@!element.addLogger(logger) @AT@ 2212 @LENGTH@ 26
---------DEL Operator@@! @AT@ 2212 @LENGTH@ 1
---------DEL MethodInvocation@@element.addLogger(logger) @AT@ 2213 @LENGTH@ 25
------------DEL SimpleName@@Name:element @AT@ 2213 @LENGTH@ 7
------------DEL SimpleName@@MethodName:addLogger:[logger] @AT@ 2221 @LENGTH@ 17
---------------DEL SimpleName@@logger @AT@ 2231 @LENGTH@ 6
------DEL Block@@ThenBody:{  throw new UpdateFailedException("duplicate logger " + name);} @AT@ 2240 @LENGTH@ 84
---------DEL ThrowStatement@@ClassInstanceCreation:new UpdateFailedException("duplicate logger " + name) @AT@ 2254 @LENGTH@ 60
------------DEL ClassInstanceCreation@@UpdateFailedException["duplicate logger " + name] @AT@ 2260 @LENGTH@ 53
---------------DEL New@@new @AT@ 2260 @LENGTH@ 3
---------------DEL SimpleType@@UpdateFailedException @AT@ 2264 @LENGTH@ 21
---------------DEL InfixExpression@@"duplicate logger " + name @AT@ 2286 @LENGTH@ 26
------------------DEL StringLiteral@@"duplicate logger " @AT@ 2286 @LENGTH@ 19
------------------DEL Operator@@+ @AT@ 2305 @LENGTH@ 1
------------------DEL SimpleName@@name @AT@ 2308 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:socketBindings.registerSocket(this) @TO@ MethodInvocation:socketBindings.registerBinding(this) @AT@ 1700 @LENGTH@ 36
---UPD MethodInvocation@@socketBindings.registerSocket(this) @TO@ socketBindings.registerBinding(this) @AT@ 1700 @LENGTH@ 35
------UPD SimpleName@@MethodName:registerSocket:[this] @TO@ MethodName:registerBinding:[this] @AT@ 1715 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:ObjectHelper.close(in,"in",LOG) @TO@ MethodInvocation:IOHelper.close(in,"in",LOG) @AT@ 6299 @LENGTH@ 34
---UPD MethodInvocation@@ObjectHelper.close(in,"in",LOG) @TO@ IOHelper.close(in,"in",LOG) @AT@ 6299 @LENGTH@ 33
------UPD SimpleName@@Name:ObjectHelper @TO@ Name:IOHelper @AT@ 6299 @LENGTH@ 12


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=-2280880859263752474L] @TO@ TypeDeclaration@@[public, static]OSGiModule,  @AT@ 2304 @LENGTH@ 67
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-2280880859263752474L] @AT@ 2304 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-2280880859263752474L] @AT@ 2312 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-2280880859263752474L] @AT@ 2319 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-2280880859263752474L] @AT@ 2325 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=-2280880859263752474L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=-2280880859263752474L] @AT@ 2330 @LENGTH@ 40
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=-2280880859263752474L @AT@ 2330 @LENGTH@ 16
------INS PrefixExpression@@-2280880859263752474L @TO@ VariableDeclarationFragment@@serialVersionUID=-2280880859263752474L @AT@ 2349 @LENGTH@ 21
---------INS Operator@@- @TO@ PrefixExpression@@-2280880859263752474L @AT@ 2349 @LENGTH@ 1
---------INS NumberLiteral@@2280880859263752474L @TO@ PrefixExpression@@-2280880859263752474L @AT@ 2350 @LENGTH@ 20


UPD ExpressionStatement@@Assignment:viewName=viewName.substring(0,path.indexOf(".")) @TO@ Assignment:viewName=viewName.substring(0,path.lastIndexOf(".")) @AT@ 3815 @LENGTH@ 52
---UPD Assignment@@viewName=viewName.substring(0,path.indexOf(".")) @TO@ viewName=viewName.substring(0,path.lastIndexOf(".")) @AT@ 3815 @LENGTH@ 51
------UPD MethodInvocation@@viewName.substring(0,path.indexOf(".")) @TO@ viewName.substring(0,path.lastIndexOf(".")) @AT@ 3826 @LENGTH@ 40
---------UPD SimpleName@@MethodName:substring:[0, path.indexOf(".")] @TO@ MethodName:substring:[0, path.lastIndexOf(".")] @AT@ 3835 @LENGTH@ 31
------------UPD MethodInvocation@@path.indexOf(".") @TO@ path.lastIndexOf(".") @AT@ 3848 @LENGTH@ 17
---------------UPD SimpleName@@MethodName:indexOf:["."] @TO@ MethodName:lastIndexOf:["."] @AT@ 3853 @LENGTH@ 12


UPD EnhancedForStatement@@for (VirtualFile overlay : overlays) {  FileDirContext dirContext=new FileDirContext();  try {    dirContext.setDocBase(overlay.getPhysicalFile().getAbsolutePath());    resources.addOverlay(dirContext);  } catch (  IOException e) {    log.error(sm.getString("contextConfig.noOverlay",context.getName()),e);    ok=false;    break;  }} @TO@ for (VirtualFile overlay : overlays) {  VFSDirContext dirContext=new VFSDirContext();  dirContext.setVirtualFile(overlay);  resources.addOverlay(dirContext);} @AT@ 42101 @LENGTH@ 575
---UPD VariableDeclarationStatement@@FileDirContext dirContext=new FileDirContext(); @TO@ VFSDirContext dirContext=new VFSDirContext(); @AT@ 42164 @LENGTH@ 49
------UPD SimpleType@@FileDirContext @TO@ VFSDirContext @AT@ 42164 @LENGTH@ 14
------UPD VariableDeclarationFragment@@dirContext=new FileDirContext() @TO@ dirContext=new VFSDirContext() @AT@ 42179 @LENGTH@ 33
---------UPD ClassInstanceCreation@@FileDirContext[] @TO@ VFSDirContext[] @AT@ 42192 @LENGTH@ 20
------------UPD SimpleType@@FileDirContext @TO@ VFSDirContext @AT@ 42196 @LENGTH@ 14
---DEL TryStatement@@try {  dirContext.setDocBase(overlay.getPhysicalFile().getAbsolutePath());  resources.addOverlay(dirContext);} catch (IOException e) {  log.error(sm.getString("contextConfig.noOverlay",context.getName()),e);  ok=false;  break;} @AT@ 42238 @LENGTH@ 416
------DEL ExpressionStatement@@MethodInvocation:dirContext.setDocBase(overlay.getPhysicalFile().getAbsolutePath()) @AT@ 42272 @LENGTH@ 67
------DEL CatchClause@@catch (IOException e) {  log.error(sm.getString("contextConfig.noOverlay",context.getName()),e);  ok=false;  break;} @AT@ 42428 @LENGTH@ 226
---------DEL SingleVariableDeclaration@@IOException e @AT@ 42435 @LENGTH@ 13
------------DEL SimpleType@@IOException @AT@ 42435 @LENGTH@ 11
------------DEL SimpleName@@e @AT@ 42447 @LENGTH@ 1
---------DEL ExpressionStatement@@MethodInvocation:log.error(sm.getString("contextConfig.noOverlay",context.getName()),e) @AT@ 42480 @LENGTH@ 73
------------DEL MethodInvocation@@log.error(sm.getString("contextConfig.noOverlay",context.getName()),e) @AT@ 42480 @LENGTH@ 72
---------------DEL SimpleName@@Name:log @AT@ 42480 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:error:[sm.getString("contextConfig.noOverlay",context.getName()), e] @AT@ 42484 @LENGTH@ 68
------------------DEL MethodInvocation@@sm.getString("contextConfig.noOverlay",context.getName()) @AT@ 42490 @LENGTH@ 58
---------------------DEL SimpleName@@Name:sm @AT@ 42490 @LENGTH@ 2
---------------------DEL SimpleName@@MethodName:getString:["contextConfig.noOverlay", context.getName()] @AT@ 42493 @LENGTH@ 55
------------------------DEL StringLiteral@@"contextConfig.noOverlay" @AT@ 42503 @LENGTH@ 25
------------------------DEL MethodInvocation@@context.getName() @AT@ 42530 @LENGTH@ 17
---------------------------DEL SimpleName@@Name:context @AT@ 42530 @LENGTH@ 7
---------------------------DEL SimpleName@@MethodName:getName:[] @AT@ 42538 @LENGTH@ 9
------------------DEL SimpleName@@e @AT@ 42550 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:ok=false @AT@ 42582 @LENGTH@ 11
------------DEL Assignment@@ok=false @AT@ 42582 @LENGTH@ 10
---------------DEL SimpleName@@ok @AT@ 42582 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 42584 @LENGTH@ 1
---------------DEL BooleanLiteral@@false @AT@ 42587 @LENGTH@ 5
---------DEL BreakStatement@@ @AT@ 42622 @LENGTH@ 6
---MOV ExpressionStatement@@MethodInvocation:resources.addOverlay(dirContext) @TO@ EnhancedForStatement@@for (VirtualFile overlay : overlays) {  FileDirContext dirContext=new FileDirContext();  try {    dirContext.setDocBase(overlay.getPhysicalFile().getAbsolutePath());    resources.addOverlay(dirContext);  } catch (  IOException e) {    log.error(sm.getString("contextConfig.noOverlay",context.getName()),e);    ok=false;    break;  }} @AT@ 42368 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:dirContext.setVirtualFile(overlay) @TO@ EnhancedForStatement@@for (VirtualFile overlay : overlays) {  FileDirContext dirContext=new FileDirContext();  try {    dirContext.setDocBase(overlay.getPhysicalFile().getAbsolutePath());    resources.addOverlay(dirContext);  } catch (  IOException e) {    log.error(sm.getString("contextConfig.noOverlay",context.getName()),e);    ok=false;    break;  }} @AT@ 42383 @LENGTH@ 35
------MOV MethodInvocation@@dirContext.setDocBase(overlay.getPhysicalFile().getAbsolutePath()) @TO@ ExpressionStatement@@MethodInvocation:dirContext.setVirtualFile(overlay) @AT@ 42272 @LENGTH@ 66
---------UPD SimpleName@@MethodName:setDocBase:[overlay.getPhysicalFile().getAbsolutePath()] @TO@ MethodName:setVirtualFile:[overlay] @AT@ 42283 @LENGTH@ 55
------------DEL MethodInvocation@@overlay.getPhysicalFile().getAbsolutePath() @AT@ 42294 @LENGTH@ 43
---------------DEL MethodInvocation@@MethodName:getPhysicalFile:[] @AT@ 42294 @LENGTH@ 25
---------------DEL SimpleName@@Name:overlay @AT@ 42294 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getAbsolutePath:[] @AT@ 42320 @LENGTH@ 17
------------INS SimpleName@@overlay @TO@ SimpleName@@MethodName:setDocBase:[overlay.getPhysicalFile().getAbsolutePath()] @AT@ 42409 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:response.put("since_id","24") @TO@ MethodInvocation:response.put("since_id",24) @AT@ 5535 @LENGTH@ 31
---UPD MethodInvocation@@response.put("since_id","24") @TO@ response.put("since_id",24) @AT@ 5535 @LENGTH@ 30
------UPD SimpleName@@MethodName:put:["since_id", "24"] @TO@ MethodName:put:["since_id", 24] @AT@ 5544 @LENGTH@ 21
---------INS NumberLiteral@@24 @TO@ SimpleName@@MethodName:put:["since_id", "24"] @AT@ 5558 @LENGTH@ 2
---------DEL StringLiteral@@"24" @AT@ 5560 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:last=(Map.Entry<K,V>)iterator.next() @TO@ Assignment:last=iterator.next() @AT@ 2448 @LENGTH@ 41
---UPD Assignment@@last=(Map.Entry<K,V>)iterator.next() @TO@ last=iterator.next() @AT@ 2448 @LENGTH@ 40
------DEL CastExpression@@(Map.Entry<K,V>)iterator.next() @AT@ 2455 @LENGTH@ 33
---------DEL ParameterizedType@@Map.Entry<K,V> @AT@ 2456 @LENGTH@ 15
------------DEL SimpleType@@Map.Entry @AT@ 2456 @LENGTH@ 9
------------DEL SimpleType@@K @AT@ 2466 @LENGTH@ 1
------------DEL SimpleType@@V @AT@ 2469 @LENGTH@ 1
---------DEL MethodInvocation@@iterator.next() @AT@ 2473 @LENGTH@ 15
------INS MethodInvocation@@iterator.next() @TO@ Assignment@@last=(Map.Entry<K,V>)iterator.next() @AT@ 2455 @LENGTH@ 15
---------MOV SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.next() @AT@ 2473 @LENGTH@ 8
---------MOV SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iterator.next() @AT@ 2482 @LENGTH@ 6


INS VariableDeclarationStatement@@ArrayList<String> tmpCmd=new ArrayList<String>(); @TO@ MethodDeclaration@@private, static, void, MethodName:execWin, String[] cmd, File outFile, boolean appendOut, File errFile, boolean appendErr, IOException,  @AT@ 3853 @LENGTH@ 51
---INS ParameterizedType@@ArrayList<String> @TO@ VariableDeclarationStatement@@ArrayList<String> tmpCmd=new ArrayList<String>(); @AT@ 3853 @LENGTH@ 17
------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 3853 @LENGTH@ 9
------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 3863 @LENGTH@ 6
---INS VariableDeclarationFragment@@tmpCmd=new ArrayList<String>() @TO@ VariableDeclarationStatement@@ArrayList<String> tmpCmd=new ArrayList<String>(); @AT@ 3871 @LENGTH@ 32
------INS SimpleName@@tmpCmd @TO@ VariableDeclarationFragment@@tmpCmd=new ArrayList<String>() @AT@ 3871 @LENGTH@ 6
------INS ClassInstanceCreation@@ArrayList<String>[] @TO@ VariableDeclarationFragment@@tmpCmd=new ArrayList<String>() @AT@ 3880 @LENGTH@ 23
---------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<String>[] @AT@ 3880 @LENGTH@ 3
---------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList<String>[] @AT@ 3884 @LENGTH@ 17
------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 3884 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 3894 @LENGTH@ 6


UPD TypeDeclaration@@[public]ManagedBeanSubsystemElementParser, [XMLElementReader<ParseResult<ManagedBeansSubsystemElement>>] @TO@ [public]ManagedBeanSubsystemElementParser, [XMLElementReader<ParseResult<? super ManagedBeansSubsystemElement>>] @AT@ 230 @LENGTH@ 405
---UPD ParameterizedType@@XMLElementReader<ParseResult<ManagedBeansSubsystemElement>> @TO@ XMLElementReader<ParseResult<? super ManagedBeansSubsystemElement>> @AT@ 288 @LENGTH@ 59
------UPD ParameterizedType@@ParseResult<ManagedBeansSubsystemElement> @TO@ ParseResult<? super ManagedBeansSubsystemElement> @AT@ 305 @LENGTH@ 41
---------INS WildcardType@@? @TO@ ParameterizedType@@ParseResult<ManagedBeansSubsystemElement> @AT@ 317 @LENGTH@ 36
---------DEL SimpleType@@ManagedBeansSubsystemElement @AT@ 317 @LENGTH@ 28


UPD VariableDeclarationStatement@@final List test=new ArrayList(); @TO@ final List<String> test=new ArrayList<String>(); @AT@ 1231 @LENGTH@ 34
---DEL SimpleType@@List @AT@ 1237 @LENGTH@ 4
---UPD VariableDeclarationFragment@@test=new ArrayList() @TO@ test=new ArrayList<String>() @AT@ 1242 @LENGTH@ 22
------UPD ClassInstanceCreation@@ArrayList[] @TO@ ArrayList<String>[] @AT@ 1249 @LENGTH@ 15
---------DEL SimpleType@@ArrayList @AT@ 1253 @LENGTH@ 9
---------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList[] @AT@ 1277 @LENGTH@ 17
------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 1277 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 1287 @LENGTH@ 6
---INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@final List test=new ArrayList(); @AT@ 1253 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 1253 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 1258 @LENGTH@ 6


UPD TypeDeclaration@@[public]RemoveDeploymentPlanBuilder, [DeploymentPlanBuilder] @TO@ [public]RemoveDeploymentPlanBuilder, [DeploymentSetActionsCompleteBuilder] @AT@ 1283 @LENGTH@ 889
---UPD SimpleType@@DeploymentPlanBuilder @TO@ DeploymentSetActionsCompleteBuilder @AT@ 1336 @LENGTH@ 21


UPD VariableDeclarationStatement@@final UnboundedQueueThreadPoolElement poolElement=new UnboundedQueueThreadPoolElement(getName()); @TO@ final ScheduledThreadPoolElement poolElement=new ScheduledThreadPoolElement(getName()); @AT@ 2673 @LENGTH@ 99
---UPD SimpleType@@UnboundedQueueThreadPoolElement @TO@ ScheduledThreadPoolElement @AT@ 2679 @LENGTH@ 31
---UPD VariableDeclarationFragment@@poolElement=new UnboundedQueueThreadPoolElement(getName()) @TO@ poolElement=new ScheduledThreadPoolElement(getName()) @AT@ 2711 @LENGTH@ 60
------UPD ClassInstanceCreation@@UnboundedQueueThreadPoolElement[getName()] @TO@ ScheduledThreadPoolElement[getName()] @AT@ 2725 @LENGTH@ 46
---------UPD SimpleType@@UnboundedQueueThreadPoolElement @TO@ ScheduledThreadPoolElement @AT@ 2729 @LENGTH@ 31


UPD EnhancedForStatement@@for (JavaType managedType : dbreTableService.getDatabaseManagedEntities()) {  String physicalTypeMid=PhysicalTypeIdentifier.createIdentifier(managedType,Path.SRC_MAIN_JAVA);  metadataService.get(physicalTypeMid,true);  metadataDependencyRegistry.notifyDownstream(physicalTypeMid);} @TO@ for (JavaType managedType : dbreTableService.getDatabaseManagedEntities()) {  String dbreMid=DbreMetadata.createIdentifier(managedType,Path.SRC_MAIN_JAVA);  metadataService.get(dbreMid,true);  metadataDependencyRegistry.notifyDownstream(dbreMid);} @AT@ 5266 @LENGTH@ 294
---UPD VariableDeclarationStatement@@String physicalTypeMid=PhysicalTypeIdentifier.createIdentifier(managedType,Path.SRC_MAIN_JAVA); @TO@ String dbreMid=DbreMetadata.createIdentifier(managedType,Path.SRC_MAIN_JAVA); @AT@ 5346 @LENGTH@ 98
------UPD VariableDeclarationFragment@@physicalTypeMid=PhysicalTypeIdentifier.createIdentifier(managedType,Path.SRC_MAIN_JAVA) @TO@ dbreMid=DbreMetadata.createIdentifier(managedType,Path.SRC_MAIN_JAVA) @AT@ 5353 @LENGTH@ 90
---------UPD SimpleName@@physicalTypeMid @TO@ dbreMid @AT@ 5353 @LENGTH@ 15
---------UPD MethodInvocation@@PhysicalTypeIdentifier.createIdentifier(managedType,Path.SRC_MAIN_JAVA) @TO@ DbreMetadata.createIdentifier(managedType,Path.SRC_MAIN_JAVA) @AT@ 5371 @LENGTH@ 72
------------UPD SimpleName@@Name:PhysicalTypeIdentifier @TO@ Name:DbreMetadata @AT@ 5371 @LENGTH@ 22
---UPD ExpressionStatement@@MethodInvocation:metadataService.get(physicalTypeMid,true) @TO@ MethodInvocation:metadataService.get(dbreMid,true) @AT@ 5448 @LENGTH@ 43
------UPD MethodInvocation@@metadataService.get(physicalTypeMid,true) @TO@ metadataService.get(dbreMid,true) @AT@ 5448 @LENGTH@ 42
---------UPD SimpleName@@MethodName:get:[physicalTypeMid, true] @TO@ MethodName:get:[dbreMid, true] @AT@ 5464 @LENGTH@ 26
------------UPD SimpleName@@physicalTypeMid @TO@ dbreMid @AT@ 5468 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:metadataDependencyRegistry.notifyDownstream(physicalTypeMid) @TO@ MethodInvocation:metadataDependencyRegistry.notifyDownstream(dbreMid) @AT@ 5495 @LENGTH@ 61
------UPD MethodInvocation@@metadataDependencyRegistry.notifyDownstream(physicalTypeMid) @TO@ metadataDependencyRegistry.notifyDownstream(dbreMid) @AT@ 5495 @LENGTH@ 60
---------UPD SimpleName@@MethodName:notifyDownstream:[physicalTypeMid] @TO@ MethodName:notifyDownstream:[dbreMid] @AT@ 5522 @LENGTH@ 33
------------UPD SimpleName@@physicalTypeMid @TO@ dbreMid @AT@ 5539 @LENGTH@ 15


MOV ExpressionStatement@@Assignment:canRun=true @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1784 @LENGTH@ 14


INS MethodDeclaration@@private, void, MethodName:handleException, FlowExecutionException exception, RequestControlContext context, FlowExecutionException,  @TO@ TypeDeclaration@@[public]FlowExecutionImpl, [FlowExecution, Externalizable] @AT@ 20078 @LENGTH@ 173
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:handleException, FlowExecutionException exception, RequestControlContext context, FlowExecutionException,  @AT@ 20078 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:handleException, FlowExecutionException exception, RequestControlContext context, FlowExecutionException,  @AT@ 20086 @LENGTH@ 4
---INS SimpleName@@MethodName:handleException @TO@ MethodDeclaration@@private, void, MethodName:handleException, FlowExecutionException exception, RequestControlContext context, FlowExecutionException,  @AT@ 20091 @LENGTH@ 15
---INS SingleVariableDeclaration@@FlowExecutionException exception @TO@ MethodDeclaration@@private, void, MethodName:handleException, FlowExecutionException exception, RequestControlContext context, FlowExecutionException,  @AT@ 20107 @LENGTH@ 32
------INS SimpleType@@FlowExecutionException @TO@ SingleVariableDeclaration@@FlowExecutionException exception @AT@ 20107 @LENGTH@ 22
------INS SimpleName@@exception @TO@ SingleVariableDeclaration@@FlowExecutionException exception @AT@ 20130 @LENGTH@ 9
---INS SingleVariableDeclaration@@RequestControlContext context @TO@ MethodDeclaration@@private, void, MethodName:handleException, FlowExecutionException exception, RequestControlContext context, FlowExecutionException,  @AT@ 20141 @LENGTH@ 29
------INS SimpleType@@RequestControlContext @TO@ SingleVariableDeclaration@@RequestControlContext context @AT@ 20141 @LENGTH@ 21
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@RequestControlContext context @AT@ 20163 @LENGTH@ 7
---INS SimpleType@@FlowExecutionException @TO@ MethodDeclaration@@private, void, MethodName:handleException, FlowExecutionException exception, RequestControlContext context, FlowExecutionException,  @AT@ 20182 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:handleException(exception,context,1) @TO@ MethodDeclaration@@private, void, MethodName:handleException, FlowExecutionException exception, RequestControlContext context, FlowExecutionException,  @AT@ 20209 @LENGTH@ 39
------INS MethodInvocation@@handleException(exception,context,1) @TO@ ExpressionStatement@@MethodInvocation:handleException(exception,context,1) @AT@ 20209 @LENGTH@ 38
---------INS SimpleName@@MethodName:handleException:[exception, context, 1] @TO@ MethodInvocation@@handleException(exception,context,1) @AT@ 20209 @LENGTH@ 38
------------INS SimpleName@@exception @TO@ SimpleName@@MethodName:handleException:[exception, context, 1] @AT@ 20225 @LENGTH@ 9
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:handleException:[exception, context, 1] @AT@ 20236 @LENGTH@ 7
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:handleException:[exception, context, 1] @AT@ 20245 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:sendMessage, final String processName, final byte[] message, final long checksum, IOException,  @TO@ public, void, MethodName:sendMessage, final String recipient, final byte[] message, final long checksum, IOException,  @AT@ 5409 @LENGTH@ 614
---UPD SingleVariableDeclaration@@final String processName @TO@ final String recipient @AT@ 5433 @LENGTH@ 24
------UPD SimpleName@@processName @TO@ recipient @AT@ 5446 @LENGTH@ 11
---UPD IfStatement@@if (processName == null) {  throw new IllegalArgumentException("processName is null");} @TO@ if (recipient == null) {  throw new IllegalArgumentException("processName is null");} @AT@ 5531 @LENGTH@ 107
------UPD InfixExpression@@processName == null @TO@ recipient == null @AT@ 5535 @LENGTH@ 19
---------UPD SimpleName@@processName @TO@ recipient @AT@ 5535 @LENGTH@ 11
---UPD ExpressionStatement@@MethodInvocation:b.append(processName).append('\0') @TO@ MethodInvocation:b.append(recipient).append('\0') @AT@ 5751 @LENGTH@ 35
------UPD MethodInvocation@@b.append(processName).append('\0') @TO@ b.append(recipient).append('\0') @AT@ 5751 @LENGTH@ 34
---------UPD MethodInvocation@@MethodName:append:[processName] @TO@ MethodName:append:[recipient] @AT@ 5751 @LENGTH@ 21
------------UPD SimpleName@@processName @TO@ recipient @AT@ 5760 @LENGTH@ 11
---UPD ExpressionStatement@@MethodInvocation:StreamUtils.writeString(output,b) @TO@ MethodInvocation:StreamUtils.writeString(output,b.toString()) @AT@ 5795 @LENGTH@ 35
------UPD MethodInvocation@@StreamUtils.writeString(output,b) @TO@ StreamUtils.writeString(output,b.toString()) @AT@ 5795 @LENGTH@ 34
---------UPD SimpleName@@MethodName:writeString:[output, b] @TO@ MethodName:writeString:[output, b.toString()] @AT@ 5807 @LENGTH@ 22
------------DEL SimpleName@@b @AT@ 5827 @LENGTH@ 1
------------INS MethodInvocation@@b.toString() @TO@ SimpleName@@MethodName:writeString:[output, b] @AT@ 6013 @LENGTH@ 12
---------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.toString() @AT@ 6013 @LENGTH@ 1
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@b.toString() @AT@ 6015 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:output.write(message.length) @TO@ MethodInvocation:StreamUtils.writeInt(output,message.length) @AT@ 5839 @LENGTH@ 29
------UPD MethodInvocation@@output.write(message.length) @TO@ StreamUtils.writeInt(output,message.length) @AT@ 5839 @LENGTH@ 28
---------UPD SimpleName@@Name:output @TO@ Name:StreamUtils @AT@ 5839 @LENGTH@ 6
---------UPD SimpleName@@MethodName:write:[message.length] @TO@ MethodName:writeInt:[output, message.length] @AT@ 5846 @LENGTH@ 21
------------INS SimpleName@@output @TO@ SimpleName@@MethodName:write:[message.length] @AT@ 6057 @LENGTH@ 6
---UPD ExpressionStatement@@MethodInvocation:output.write(message) @TO@ MethodInvocation:output.write(message,0,message.length) @AT@ 5877 @LENGTH@ 22
------UPD MethodInvocation@@output.write(message) @TO@ output.write(message,0,message.length) @AT@ 5877 @LENGTH@ 21
---------UPD SimpleName@@MethodName:write:[message] @TO@ MethodName:write:[message, 0, message.length] @AT@ 5884 @LENGTH@ 14
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:write:[message] @AT@ 6112 @LENGTH@ 1
------------INS QualifiedName@@message.length @TO@ SimpleName@@MethodName:write:[message] @AT@ 6115 @LENGTH@ 14
---------------INS SimpleName@@message @TO@ QualifiedName@@message.length @AT@ 6115 @LENGTH@ 7
---------------INS SimpleName@@length @TO@ QualifiedName@@message.length @AT@ 6123 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:controller.removeListener(this) @TO@ MethodDeclaration@@public, void, MethodName:serviceRemoved, ServiceController<?> controller,  @AT@ 14639 @LENGTH@ 32
---INS MethodInvocation@@controller.removeListener(this) @TO@ ExpressionStatement@@MethodInvocation:controller.removeListener(this) @AT@ 14639 @LENGTH@ 31
------INS SimpleName@@Name:controller @TO@ MethodInvocation@@controller.removeListener(this) @AT@ 14639 @LENGTH@ 10
------INS SimpleName@@MethodName:removeListener:[this] @TO@ MethodInvocation@@controller.removeListener(this) @AT@ 14650 @LENGTH@ 20
---------INS ThisExpression@@this @TO@ SimpleName@@MethodName:removeListener:[this] @AT@ 14665 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:prepareShutdown,  @TO@ TypeDeclaration@@[public]IBatisPollingConsumer, ScheduledPollConsumer[BatchConsumer, ShutdownAware] @AT@ 7964 @LENGTH@ 53
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 7964 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 7971 @LENGTH@ 4
---INS SimpleName@@MethodName:prepareShutdown @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 7976 @LENGTH@ 15


INS FieldDeclaration@@private, static, final, AtomicLong, [endpointCounter=new AtomicLong(0)] @TO@ TypeDeclaration@@[public, final]EndpointHelper,  @AT@ 1669 @LENGTH@ 68
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, AtomicLong, [endpointCounter=new AtomicLong(0)] @AT@ 1669 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, AtomicLong, [endpointCounter=new AtomicLong(0)] @AT@ 1677 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, AtomicLong, [endpointCounter=new AtomicLong(0)] @AT@ 1684 @LENGTH@ 5
---INS SimpleType@@AtomicLong @TO@ FieldDeclaration@@private, static, final, AtomicLong, [endpointCounter=new AtomicLong(0)] @AT@ 1690 @LENGTH@ 10
---INS VariableDeclarationFragment@@endpointCounter=new AtomicLong(0) @TO@ FieldDeclaration@@private, static, final, AtomicLong, [endpointCounter=new AtomicLong(0)] @AT@ 1701 @LENGTH@ 35
------INS SimpleName@@endpointCounter @TO@ VariableDeclarationFragment@@endpointCounter=new AtomicLong(0) @AT@ 1701 @LENGTH@ 15
------INS ClassInstanceCreation@@AtomicLong[0] @TO@ VariableDeclarationFragment@@endpointCounter=new AtomicLong(0) @AT@ 1719 @LENGTH@ 17
---------INS New@@new @TO@ ClassInstanceCreation@@AtomicLong[0] @AT@ 1719 @LENGTH@ 3
---------INS SimpleType@@AtomicLong @TO@ ClassInstanceCreation@@AtomicLong[0] @AT@ 1723 @LENGTH@ 10
---------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@AtomicLong[0] @AT@ 1734 @LENGTH@ 1


UPD MethodDeclaration@@protected, String, MethodName:buildAuthorizationHeader, HttpMethod method, URL url, Map<String,String> parameters,  @TO@ protected, String, MethodName:buildAuthorizationHeader, HttpMethod method, String url, Map<String,String> parameters,  @AT@ 1514 @LENGTH@ 495
---UPD SingleVariableDeclaration@@URL url @TO@ String url @AT@ 1575 @LENGTH@ 7
------UPD SimpleType@@URL @TO@ String @AT@ 1575 @LENGTH@ 3
---UPD VariableDeclarationStatement@@String adjustedUrl=adjustUrl(url.toString()); @TO@ String adjustedUrl=adjustUrl(url); @AT@ 1620 @LENGTH@ 47
------UPD VariableDeclarationFragment@@adjustedUrl=adjustUrl(url.toString()) @TO@ adjustedUrl=adjustUrl(url) @AT@ 1627 @LENGTH@ 39
---------UPD MethodInvocation@@adjustUrl(url.toString()) @TO@ adjustUrl(url) @AT@ 1641 @LENGTH@ 25
------------UPD SimpleName@@MethodName:adjustUrl:[url.toString()] @TO@ MethodName:adjustUrl:[url] @AT@ 1641 @LENGTH@ 25
---------------INS SimpleName@@url @TO@ SimpleName@@MethodName:adjustUrl:[url.toString()] @AT@ 1633 @LENGTH@ 3
---------------DEL MethodInvocation@@url.toString() @AT@ 1651 @LENGTH@ 14
------------------DEL SimpleName@@Name:url @AT@ 1651 @LENGTH@ 3
------------------DEL SimpleName@@MethodName:toString:[] @AT@ 1655 @LENGTH@ 10


INS IfStatement@@if (subsystemAdd == null) {  throw new IllegalStateException(subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName());} @TO@ MethodDeclaration@@private, static, void, E extends AbstractSubsystemElement<E>, MethodName:processSubsystem, E subsystemElement, List<AbstractServerModelUpdate<?>> list,  @AT@ 7695 @LENGTH@ 170
---INS InfixExpression@@subsystemAdd == null @TO@ IfStatement@@if (subsystemAdd == null) {  throw new IllegalStateException(subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName());} @AT@ 7699 @LENGTH@ 20
------INS SimpleName@@subsystemAdd @TO@ InfixExpression@@subsystemAdd == null @AT@ 7699 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@subsystemAdd == null @AT@ 7711 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@subsystemAdd == null @AT@ 7715 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new IllegalStateException(subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName());} @TO@ IfStatement@@if (subsystemAdd == null) {  throw new IllegalStateException(subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName());} @AT@ 7721 @LENGTH@ 144
------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException(subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName()) @TO@ Block@@ThenBody:{  throw new IllegalStateException(subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName());} @AT@ 7735 @LENGTH@ 120
---------INS ClassInstanceCreation@@IllegalStateException[subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName()] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException(subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName()) @AT@ 7741 @LENGTH@ 113
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException[subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName()] @AT@ 7741 @LENGTH@ 3
------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException[subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName()] @AT@ 7745 @LENGTH@ 21
------------INS InfixExpression@@subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName() @TO@ ClassInstanceCreation@@IllegalStateException[subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName()] @AT@ 7767 @LENGTH@ 86
---------------INS SimpleName@@subsystemElement @TO@ InfixExpression@@subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName() @AT@ 7767 @LENGTH@ 16
---------------INS Operator@@+ @TO@ InfixExpression@@subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName() @AT@ 7783 @LENGTH@ 1
---------------INS StringLiteral@@" did not provide an " @TO@ InfixExpression@@subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName() @AT@ 7786 @LENGTH@ 22
---------------INS MethodInvocation@@AbstractSubsystemAdd.class.getSimpleName() @TO@ InfixExpression@@subsystemElement + " did not provide an " + AbstractSubsystemAdd.class.getSimpleName() @AT@ 7811 @LENGTH@ 42
------------------INS TypeLiteral@@AbstractSubsystemAdd.class @TO@ MethodInvocation@@AbstractSubsystemAdd.class.getSimpleName() @AT@ 7811 @LENGTH@ 26
------------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@AbstractSubsystemAdd.class.getSimpleName() @AT@ 7838 @LENGTH@ 15


INS MethodDeclaration@@public, int, MethodName:available,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 5632 @LENGTH@ 83
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:available,  @AT@ 5632 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:available,  @AT@ 5639 @LENGTH@ 3
---INS SimpleName@@MethodName:available @TO@ MethodDeclaration@@public, int, MethodName:available,  @AT@ 5643 @LENGTH@ 9
---INS ReturnStatement@@InfixExpression:input.length - index @TO@ MethodDeclaration@@public, int, MethodName:available,  @AT@ 5673 @LENGTH@ 28
------INS InfixExpression@@input.length - index @TO@ ReturnStatement@@InfixExpression:input.length - index @AT@ 5680 @LENGTH@ 20
---------INS QualifiedName@@input.length @TO@ InfixExpression@@input.length - index @AT@ 5680 @LENGTH@ 12
------------INS SimpleName@@input @TO@ QualifiedName@@input.length @AT@ 5680 @LENGTH@ 5
------------INS SimpleName@@length @TO@ QualifiedName@@input.length @AT@ 5686 @LENGTH@ 6
---------INS Operator@@- @TO@ InfixExpression@@input.length - index @AT@ 5692 @LENGTH@ 1
---------INS SimpleName@@index @TO@ InfixExpression@@input.length - index @AT@ 5695 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:prepareShutdown,  @TO@ TypeDeclaration@@[public]DirectConsumer, DefaultConsumer[ShutdownAware, SuspendableService] @AT@ 2726 @LENGTH@ 53
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 2726 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 2733 @LENGTH@ 4
---INS SimpleName@@MethodName:prepareShutdown @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 2738 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:element.addExecutor(getName(),new ChildElement<UnboundedQueueThreadPoolElement>(Element.UNBOUNDED_QUEUE_THREAD_POOL.getLocalName(),poolElement)) @TO@ MethodInvocation:element.addExecutor(getName(),new ChildElement<ScheduledThreadPoolElement>(Element.SCHEDULED_THREAD_POOL.getLocalName(),poolElement)) @AT@ 2949 @LENGTH@ 147
---UPD MethodInvocation@@element.addExecutor(getName(),new ChildElement<UnboundedQueueThreadPoolElement>(Element.UNBOUNDED_QUEUE_THREAD_POOL.getLocalName(),poolElement)) @TO@ element.addExecutor(getName(),new ChildElement<ScheduledThreadPoolElement>(Element.SCHEDULED_THREAD_POOL.getLocalName(),poolElement)) @AT@ 2949 @LENGTH@ 146
------UPD SimpleName@@MethodName:addExecutor:[getName(), new ChildElement<UnboundedQueueThreadPoolElement>(Element.UNBOUNDED_QUEUE_THREAD_POOL.getLocalName(),poolElement)] @TO@ MethodName:addExecutor:[getName(), new ChildElement<ScheduledThreadPoolElement>(Element.SCHEDULED_THREAD_POOL.getLocalName(),poolElement)] @AT@ 2957 @LENGTH@ 138
---------UPD ClassInstanceCreation@@ChildElement<UnboundedQueueThreadPoolElement>[Element.UNBOUNDED_QUEUE_THREAD_POOL.getLocalName(), poolElement] @TO@ ChildElement<ScheduledThreadPoolElement>[Element.SCHEDULED_THREAD_POOL.getLocalName(), poolElement] @AT@ 2980 @LENGTH@ 114
------------UPD ParameterizedType@@ChildElement<UnboundedQueueThreadPoolElement> @TO@ ChildElement<ScheduledThreadPoolElement> @AT@ 2984 @LENGTH@ 45
---------------UPD SimpleType@@UnboundedQueueThreadPoolElement @TO@ ScheduledThreadPoolElement @AT@ 2997 @LENGTH@ 31
------------UPD MethodInvocation@@Element.UNBOUNDED_QUEUE_THREAD_POOL.getLocalName() @TO@ Element.SCHEDULED_THREAD_POOL.getLocalName() @AT@ 3030 @LENGTH@ 50
---------------UPD QualifiedName@@Name:Element.UNBOUNDED_QUEUE_THREAD_POOL @TO@ Name:Element.SCHEDULED_THREAD_POOL @AT@ 3030 @LENGTH@ 35


UPD ReturnStatement@@ParenthesizedExpression:(list == null ? list.getClass() : Collection.class) @TO@ ParenthesizedExpression:(list != null ? list.getClass() : Collection.class) @AT@ 2645 @LENGTH@ 59
---UPD ParenthesizedExpression@@(list == null ? list.getClass() : Collection.class) @TO@ (list != null ? list.getClass() : Collection.class) @AT@ 2652 @LENGTH@ 51
------UPD ConditionalExpression@@list == null ? list.getClass() : Collection.class @TO@ list != null ? list.getClass() : Collection.class @AT@ 2653 @LENGTH@ 49
---------UPD InfixExpression@@list == null @TO@ list != null @AT@ 2653 @LENGTH@ 12
------------UPD Operator@@== @TO@ != @AT@ 2657 @LENGTH@ 2


INS MethodDeclaration@@private, String, MethodName:encode, String in,  @TO@ TypeDeclaration@@[public]CommonsClientRequest, [ClientRequest] @AT@ 2010 @LENGTH@ 159
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2010 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2018 @LENGTH@ 6
---INS SimpleName@@MethodName:encode @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2025 @LENGTH@ 6
---INS SingleVariableDeclaration@@String in @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2032 @LENGTH@ 9
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String in @AT@ 2032 @LENGTH@ 6
------INS SimpleName@@in @TO@ SingleVariableDeclaration@@String in @AT@ 2039 @LENGTH@ 2
---INS TryStatement@@try {  return URLEncoder.encode(in,"UTF-8");} catch (UnsupportedEncodingException wontHappen) {  return in;} @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2047 @LENGTH@ 119
------INS ReturnStatement@@MethodInvocation:URLEncoder.encode(in,"UTF-8") @TO@ TryStatement@@try {  return URLEncoder.encode(in,"UTF-8");} catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2056 @LENGTH@ 38
---------INS MethodInvocation@@URLEncoder.encode(in,"UTF-8") @TO@ ReturnStatement@@MethodInvocation:URLEncoder.encode(in,"UTF-8") @AT@ 2063 @LENGTH@ 30
------------INS SimpleName@@Name:URLEncoder @TO@ MethodInvocation@@URLEncoder.encode(in,"UTF-8") @AT@ 2063 @LENGTH@ 10
------------INS SimpleName@@MethodName:encode:[in, "UTF-8"] @TO@ MethodInvocation@@URLEncoder.encode(in,"UTF-8") @AT@ 2074 @LENGTH@ 19
---------------INS SimpleName@@in @TO@ SimpleName@@MethodName:encode:[in, "UTF-8"] @AT@ 2081 @LENGTH@ 2
---------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:encode:[in, "UTF-8"] @AT@ 2085 @LENGTH@ 7
------INS CatchClause@@catch (UnsupportedEncodingException wontHappen) {  return in;} @TO@ TryStatement@@try {  return URLEncoder.encode(in,"UTF-8");} catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2099 @LENGTH@ 67
---------INS SingleVariableDeclaration@@UnsupportedEncodingException wontHappen @TO@ CatchClause@@catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2106 @LENGTH@ 39
------------INS SimpleType@@UnsupportedEncodingException @TO@ SingleVariableDeclaration@@UnsupportedEncodingException wontHappen @AT@ 2106 @LENGTH@ 28
------------INS SimpleName@@wontHappen @TO@ SingleVariableDeclaration@@UnsupportedEncodingException wontHappen @AT@ 2135 @LENGTH@ 10
---------INS ReturnStatement@@SimpleName:in @TO@ CatchClause@@catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2152 @LENGTH@ 10
------------INS SimpleName@@in @TO@ ReturnStatement@@SimpleName:in @AT@ 2159 @LENGTH@ 2


UPD Block@@WhileBody:{  List<String> list=new ArrayList<String>();  try {    long i=0;    while (ref.get() != null) {      list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));    }  } catch (  Throwable ignored) {  }  list.clear();  list=null;  System.gc();  Thread.sleep(1000);  ref=new SoftReference<Object>(new Object());} @TO@ WhileBody:{  List<String> list=new ArrayList<String>();  try {    long i=0;    while (theInstance.getTrackCount() != 0) {      list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));    }  } catch (  Throwable ignored) {  }  list.clear();  list=null;  System.gc();  Thread.sleep(1000);} @AT@ 10388 @LENGTH@ 572
---UPD TryStatement@@try {  long i=0;  while (ref.get() != null) {    list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));  }} catch (Throwable ignored) {} @TO@ try {  long i=0;  while (theInstance.getTrackCount() != 0) {    list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));  }} catch (Throwable ignored) {} @AT@ 10459 @LENGTH@ 323
------UPD WhileStatement@@while (ref.get() != null) {  list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));} @TO@ while (theInstance.getTrackCount() != 0) {  list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));} @AT@ 10509 @LENGTH@ 217
---------UPD InfixExpression@@ref.get() != null @TO@ theInstance.getTrackCount() != 0 @AT@ 10516 @LENGTH@ 17
------------INS NumberLiteral@@0 @TO@ InfixExpression@@ref.get() != null @AT@ 10439 @LENGTH@ 1
------------UPD MethodInvocation@@ref.get() @TO@ theInstance.getTrackCount() @AT@ 10516 @LENGTH@ 9
---------------UPD SimpleName@@Name:ref @TO@ Name:theInstance @AT@ 10516 @LENGTH@ 3
---------------UPD SimpleName@@MethodName:get:[] @TO@ MethodName:getTrackCount:[] @AT@ 10520 @LENGTH@ 5
------------DEL NullLiteral@@null @AT@ 10529 @LENGTH@ 4
---DEL ExpressionStatement@@Assignment:ref=new SoftReference<Object>(new Object()) @AT@ 10904 @LENGTH@ 46
------DEL Assignment@@ref=new SoftReference<Object>(new Object()) @AT@ 10904 @LENGTH@ 45
---------DEL SimpleName@@ref @AT@ 10904 @LENGTH@ 3
---------DEL Operator@@= @AT@ 10907 @LENGTH@ 1
---------DEL ClassInstanceCreation@@SoftReference<Object>[new Object()] @AT@ 10910 @LENGTH@ 39
------------DEL New@@new @AT@ 10910 @LENGTH@ 3
------------DEL ParameterizedType@@SoftReference<Object> @AT@ 10914 @LENGTH@ 21
---------------DEL SimpleType@@SoftReference @AT@ 10914 @LENGTH@ 13
---------------DEL SimpleType@@Object @AT@ 10928 @LENGTH@ 6
------------DEL ClassInstanceCreation@@Object[] @AT@ 10936 @LENGTH@ 12
---------------DEL New@@new @AT@ 10936 @LENGTH@ 3
---------------DEL SimpleType@@Object @AT@ 10940 @LENGTH@ 6


UPD TypeDeclaration@@[public]TestLazyMap, AbstractTestIterableMap<K,V> @TO@ [@SuppressWarnings("boxing"), public]TestLazyMap, AbstractTestIterableMap<K,V> @AT@ 1337 @LENGTH@ 2235
---INS SingleMemberAnnotation@@@SuppressWarnings("boxing") @TO@ TypeDeclaration@@[public]TestLazyMap, AbstractTestIterableMap<K,V> @AT@ 1337 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:answer.setFileName(file.getName()) @TO@ MethodInvocation:answer.setFileName(answer.getRelativeFilePath()) @AT@ 5020 @LENGTH@ 35
---UPD MethodInvocation@@answer.setFileName(file.getName()) @TO@ answer.setFileName(answer.getRelativeFilePath()) @AT@ 5020 @LENGTH@ 34
------UPD SimpleName@@MethodName:setFileName:[file.getName()] @TO@ MethodName:setFileName:[answer.getRelativeFilePath()] @AT@ 5027 @LENGTH@ 27
---------UPD MethodInvocation@@file.getName() @TO@ answer.getRelativeFilePath() @AT@ 5039 @LENGTH@ 14
------------UPD SimpleName@@Name:file @TO@ Name:answer @AT@ 5039 @LENGTH@ 4
------------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:getRelativeFilePath:[] @AT@ 5044 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:response.put("max_id","42") @TO@ MethodInvocation:response.put("max_id",42) @AT@ 5503 @LENGTH@ 29
---UPD MethodInvocation@@response.put("max_id","42") @TO@ response.put("max_id",42) @AT@ 5503 @LENGTH@ 28
------UPD SimpleName@@MethodName:put:["max_id", "42"] @TO@ MethodName:put:["max_id", 42] @AT@ 5512 @LENGTH@ 19
---------DEL StringLiteral@@"42" @AT@ 5526 @LENGTH@ 4
---------INS NumberLiteral@@42 @TO@ SimpleName@@MethodName:put:["max_id", "42"] @AT@ 5526 @LENGTH@ 2


UPD TypeDeclaration@@[public]NamespaceAttribute,  @TO@ [public]NamespaceAttribute, [Serializable] @AT@ 123 @LENGTH@ 560
---INS SimpleType@@Serializable @TO@ TypeDeclaration@@[public]NamespaceAttribute,  @AT@ 196 @LENGTH@ 12


MOV IfStatement@@if (shutdownLatch != null) shutdownLatch.remove(serverName); @TO@ MethodDeclaration@@void, MethodName:stoppedServer, String serverName,  @AT@ 16168 @LENGTH@ 72


UPD Block@@WhileBody:{  List<String> list=new ArrayList<String>();  try {    long i=0;    while (true && theInstance.getTrackCount() != 0) {      list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));    }  } catch (  Throwable ignored) {  }  list.clear();  list=null;  System.gc();  Thread.sleep(1000);} @TO@ WhileBody:{  List<String> list=new ArrayList<String>();  try {    long i=0;    while (ref.get() != null) {      list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));    }  } catch (  Throwable ignored) {  }  list.clear();  list=null;  System.gc();  Thread.sleep(1000);  ref=new SoftReference<Object>(new Object());} @AT@ 10272 @LENGTH@ 536
---UPD TryStatement@@try {  long i=0;  while (true && theInstance.getTrackCount() != 0) {    list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));  }} catch (Throwable ignored) {} @TO@ try {  long i=0;  while (ref.get() != null) {    list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));  }} catch (Throwable ignored) {} @AT@ 10343 @LENGTH@ 346
------UPD WhileStatement@@while (true && theInstance.getTrackCount() != 0) {  list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));} @TO@ while (ref.get() != null) {  list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));} @AT@ 10393 @LENGTH@ 240
---------DEL InfixExpression@@true && theInstance.getTrackCount() != 0 @AT@ 10400 @LENGTH@ 40
------------DEL BooleanLiteral@@true @AT@ 10400 @LENGTH@ 4
------------DEL Operator@@&& @AT@ 10404 @LENGTH@ 2
------------DEL InfixExpression@@theInstance.getTrackCount() != 0 @AT@ 10408 @LENGTH@ 32
---------------DEL NumberLiteral@@0 @AT@ 10439 @LENGTH@ 1
---------INS InfixExpression@@ref.get() != null @TO@ WhileStatement@@while (true && theInstance.getTrackCount() != 0) {  list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));} @AT@ 10508 @LENGTH@ 17
------------MOV MethodInvocation@@theInstance.getTrackCount() @TO@ InfixExpression@@ref.get() != null @AT@ 10408 @LENGTH@ 27
---------------UPD SimpleName@@Name:theInstance @TO@ Name:ref @AT@ 10408 @LENGTH@ 11
---------------UPD SimpleName@@MethodName:getTrackCount:[] @TO@ MethodName:get:[] @AT@ 10420 @LENGTH@ 15
------------MOV Operator@@!= @TO@ InfixExpression@@ref.get() != null @AT@ 10435 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@ref.get() != null @AT@ 10521 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:ref=new SoftReference<Object>(new Object()) @TO@ Block@@WhileBody:{  List<String> list=new ArrayList<String>();  try {    long i=0;    while (true && theInstance.getTrackCount() != 0) {      list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String A Big String " + (i++));    }  } catch (  Throwable ignored) {  }  list.clear();  list=null;  System.gc();  Thread.sleep(1000);} @AT@ 10896 @LENGTH@ 46
------INS Assignment@@ref=new SoftReference<Object>(new Object()) @TO@ ExpressionStatement@@Assignment:ref=new SoftReference<Object>(new Object()) @AT@ 10896 @LENGTH@ 45
---------INS SimpleName@@ref @TO@ Assignment@@ref=new SoftReference<Object>(new Object()) @AT@ 10896 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@ref=new SoftReference<Object>(new Object()) @AT@ 10899 @LENGTH@ 1
---------INS ClassInstanceCreation@@SoftReference<Object>[new Object()] @TO@ Assignment@@ref=new SoftReference<Object>(new Object()) @AT@ 10902 @LENGTH@ 39
------------INS New@@new @TO@ ClassInstanceCreation@@SoftReference<Object>[new Object()] @AT@ 10902 @LENGTH@ 3
------------INS ParameterizedType@@SoftReference<Object> @TO@ ClassInstanceCreation@@SoftReference<Object>[new Object()] @AT@ 10906 @LENGTH@ 21
---------------INS SimpleType@@SoftReference @TO@ ParameterizedType@@SoftReference<Object> @AT@ 10906 @LENGTH@ 13
---------------INS SimpleType@@Object @TO@ ParameterizedType@@SoftReference<Object> @AT@ 10920 @LENGTH@ 6
------------INS ClassInstanceCreation@@Object[] @TO@ ClassInstanceCreation@@SoftReference<Object>[new Object()] @AT@ 10928 @LENGTH@ 12
---------------INS New@@new @TO@ ClassInstanceCreation@@Object[] @AT@ 10928 @LENGTH@ 3
---------------INS SimpleType@@Object @TO@ ClassInstanceCreation@@Object[] @AT@ 10932 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:ObjectHelper.notEmpty(separator,"The separator has not been defined in the annotation @CsvRecord or not instantiated during initModel.") @TO@ MethodInvocation:ObjectHelper.notNull(separator,"The separator has not been defined in the annotation @CsvRecord or not instantiated during initModel.") @AT@ 4555 @LENGTH@ 138
---UPD MethodInvocation@@ObjectHelper.notEmpty(separator,"The separator has not been defined in the annotation @CsvRecord or not instantiated during initModel.") @TO@ ObjectHelper.notNull(separator,"The separator has not been defined in the annotation @CsvRecord or not instantiated during initModel.") @AT@ 4555 @LENGTH@ 137
------UPD SimpleName@@MethodName:notEmpty:[separator, "The separator has not been defined in the annotation @CsvRecord or not instantiated during initModel."] @TO@ MethodName:notNull:[separator, "The separator has not been defined in the annotation @CsvRecord or not instantiated during initModel."] @AT@ 4568 @LENGTH@ 124


UPD MethodDeclaration@@public, void, MethodName:setImplicitCollection, Map<String,String[]> implicitCollections,  @TO@ public, void, MethodName:setImplicitCollections, Map<String,String[]> implicitCollections,  @AT@ 3190 @LENGTH@ 140
---UPD SimpleName@@MethodName:setImplicitCollection @TO@ MethodName:setImplicitCollections @AT@ 3202 @LENGTH@ 21


UPD TryStatement@@try {  getProcessor().process(exchange);} catch (Exception e) {  exchange.setException(e);} @TO@ try {  getProcessor().process(exchange);} catch (Exception e) {  exchange.setException(e);} finally {  if (muc != null) {    muc.pollMessage();  }} @AT@ 5310 @LENGTH@ 131
---INS Block@@FinallyBody:{  if (muc != null) {    muc.pollMessage();  }} @TO@ TryStatement@@try {  getProcessor().process(exchange);} catch (Exception e) {  exchange.setException(e);} @AT@ 5451 @LENGTH@ 317
------INS IfStatement@@if (muc != null) {  muc.pollMessage();} @TO@ Block@@FinallyBody:{  if (muc != null) {    muc.pollMessage();  }} @AT@ 5691 @LENGTH@ 67
---------INS InfixExpression@@muc != null @TO@ IfStatement@@if (muc != null) {  muc.pollMessage();} @AT@ 5695 @LENGTH@ 11
------------INS SimpleName@@muc @TO@ InfixExpression@@muc != null @AT@ 5695 @LENGTH@ 3
------------INS Operator@@!= @TO@ InfixExpression@@muc != null @AT@ 5698 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@muc != null @AT@ 5702 @LENGTH@ 4
---------INS Block@@ThenBody:{  muc.pollMessage();} @TO@ IfStatement@@if (muc != null) {  muc.pollMessage();} @AT@ 5708 @LENGTH@ 50
------------INS ExpressionStatement@@MethodInvocation:muc.pollMessage() @TO@ Block@@ThenBody:{  muc.pollMessage();} @AT@ 5726 @LENGTH@ 18
---------------INS MethodInvocation@@muc.pollMessage() @TO@ ExpressionStatement@@MethodInvocation:muc.pollMessage() @AT@ 5726 @LENGTH@ 17
------------------INS SimpleName@@Name:muc @TO@ MethodInvocation@@muc.pollMessage() @AT@ 5726 @LENGTH@ 3
------------------INS SimpleName@@MethodName:pollMessage:[] @TO@ MethodInvocation@@muc.pollMessage() @AT@ 5730 @LENGTH@ 13


UPD IfStatement@@if ("true".equals(value)) {  return true;} else if ("false".equals(value)) {  return false;} @TO@ if ("true".equalsIgnoreCase((String)value)) {  return true;} else if ("false".equalsIgnoreCase((String)value)) {  return false;} @AT@ 39289 @LENGTH@ 148
---UPD MethodInvocation@@"true".equals(value) @TO@ "true".equalsIgnoreCase((String)value) @AT@ 39293 @LENGTH@ 20
------UPD SimpleName@@MethodName:equals:[value] @TO@ MethodName:equalsIgnoreCase:[(String)value] @AT@ 39300 @LENGTH@ 13
---------DEL SimpleName@@value @AT@ 39307 @LENGTH@ 5
---------INS CastExpression@@(String)value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 39317 @LENGTH@ 13
------------INS SimpleType@@String @TO@ CastExpression@@(String)value @AT@ 39318 @LENGTH@ 6
------------INS SimpleName@@value @TO@ CastExpression@@(String)value @AT@ 39325 @LENGTH@ 5
---UPD Block@@ElseBody:if ("false".equals(value)) {  return false;} @TO@ ElseBody:if ("false".equalsIgnoreCase((String)value)) {  return false;} @AT@ 39365 @LENGTH@ 72
------UPD IfStatement@@if ("false".equals(value)) {  return false;} @TO@ if ("false".equalsIgnoreCase((String)value)) {  return false;} @AT@ 39365 @LENGTH@ 72
---------UPD MethodInvocation@@"false".equals(value) @TO@ "false".equalsIgnoreCase((String)value) @AT@ 39369 @LENGTH@ 21
------------UPD SimpleName@@MethodName:equals:[value] @TO@ MethodName:equalsIgnoreCase:[(String)value] @AT@ 39377 @LENGTH@ 13
---------------DEL SimpleName@@value @AT@ 39384 @LENGTH@ 5
---------------INS CastExpression@@(String)value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 39412 @LENGTH@ 13
------------------INS SimpleType@@String @TO@ CastExpression@@(String)value @AT@ 39413 @LENGTH@ 6
------------------INS SimpleName@@value @TO@ CastExpression@@(String)value @AT@ 39420 @LENGTH@ 5
------UPD IfStatement@@if ("false".equals(value)) {  return false;} @TO@ if ("false".equalsIgnoreCase((String)value)) {  return false;} @AT@ 39365 @LENGTH@ 72
---------UPD MethodInvocation@@"false".equals(value) @TO@ "false".equalsIgnoreCase((String)value) @AT@ 39369 @LENGTH@ 21
------------UPD SimpleName@@MethodName:equals:[value] @TO@ MethodName:equalsIgnoreCase:[(String)value] @AT@ 39377 @LENGTH@ 13
---------------DEL SimpleName@@value @AT@ 39384 @LENGTH@ 5
---------------INS CastExpression@@(String)value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 39412 @LENGTH@ 13
------------------INS SimpleType@@String @TO@ CastExpression@@(String)value @AT@ 39413 @LENGTH@ 6
------------------INS SimpleName@@value @TO@ CastExpression@@(String)value @AT@ 39420 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:put, String key, ReplyHandler value, long timeoutMillis,  @TO@ TypeDeclaration@@[public]CorrelationMap, DefaultTimeoutMap<String,ReplyHandler> @AT@ 1429 @LENGTH@ 295
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:put, String key, ReplyHandler value, long timeoutMillis,  @AT@ 1429 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:put, String key, ReplyHandler value, long timeoutMillis,  @AT@ 1436 @LENGTH@ 4
---INS SimpleName@@MethodName:put @TO@ MethodDeclaration@@public, void, MethodName:put, String key, ReplyHandler value, long timeoutMillis,  @AT@ 1441 @LENGTH@ 3
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@public, void, MethodName:put, String key, ReplyHandler value, long timeoutMillis,  @AT@ 1445 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 1445 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 1452 @LENGTH@ 3
---INS SingleVariableDeclaration@@ReplyHandler value @TO@ MethodDeclaration@@public, void, MethodName:put, String key, ReplyHandler value, long timeoutMillis,  @AT@ 1457 @LENGTH@ 18
------INS SimpleType@@ReplyHandler @TO@ SingleVariableDeclaration@@ReplyHandler value @AT@ 1457 @LENGTH@ 12
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@ReplyHandler value @AT@ 1470 @LENGTH@ 5
---INS SingleVariableDeclaration@@long timeoutMillis @TO@ MethodDeclaration@@public, void, MethodName:put, String key, ReplyHandler value, long timeoutMillis,  @AT@ 1477 @LENGTH@ 18
------INS PrimitiveType@@long @TO@ SingleVariableDeclaration@@long timeoutMillis @AT@ 1477 @LENGTH@ 4
------INS SimpleName@@timeoutMillis @TO@ SingleVariableDeclaration@@long timeoutMillis @AT@ 1482 @LENGTH@ 13
---INS IfStatement@@if (timeoutMillis <= 0) {  super.put(key,value,Integer.MAX_VALUE);} else {  super.put(key,value,timeoutMillis);} @TO@ MethodDeclaration@@public, void, MethodName:put, String key, ReplyHandler value, long timeoutMillis,  @AT@ 1507 @LENGTH@ 211
------INS InfixExpression@@timeoutMillis <= 0 @TO@ IfStatement@@if (timeoutMillis <= 0) {  super.put(key,value,Integer.MAX_VALUE);} else {  super.put(key,value,timeoutMillis);} @AT@ 1511 @LENGTH@ 18
---------INS SimpleName@@timeoutMillis @TO@ InfixExpression@@timeoutMillis <= 0 @AT@ 1511 @LENGTH@ 13
---------INS Operator@@<= @TO@ InfixExpression@@timeoutMillis <= 0 @AT@ 1524 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@timeoutMillis <= 0 @AT@ 1528 @LENGTH@ 1
------INS Block@@ThenBody:{  super.put(key,value,Integer.MAX_VALUE);} @TO@ IfStatement@@if (timeoutMillis <= 0) {  super.put(key,value,Integer.MAX_VALUE);} else {  super.put(key,value,timeoutMillis);} @AT@ 1531 @LENGTH@ 120
---------INS ExpressionStatement@@SuperMethodInvocation:super.put(key,value,Integer.MAX_VALUE) @TO@ Block@@ThenBody:{  super.put(key,value,Integer.MAX_VALUE);} @AT@ 1600 @LENGTH@ 41
------------INS SuperMethodInvocation@@super.put(key,value,Integer.MAX_VALUE) @TO@ ExpressionStatement@@SuperMethodInvocation:super.put(key,value,Integer.MAX_VALUE) @AT@ 1600 @LENGTH@ 40
---------------INS SimpleName@@MethodName:put:[key, value, Integer.MAX_VALUE] @TO@ SuperMethodInvocation@@super.put(key,value,Integer.MAX_VALUE) @AT@ 1606 @LENGTH@ 3
---------------INS SimpleName@@key @TO@ SuperMethodInvocation@@super.put(key,value,Integer.MAX_VALUE) @AT@ 1610 @LENGTH@ 3
---------------INS SimpleName@@value @TO@ SuperMethodInvocation@@super.put(key,value,Integer.MAX_VALUE) @AT@ 1615 @LENGTH@ 5
---------------INS QualifiedName@@Integer.MAX_VALUE @TO@ SuperMethodInvocation@@super.put(key,value,Integer.MAX_VALUE) @AT@ 1622 @LENGTH@ 17
------------------INS SimpleName@@Integer @TO@ QualifiedName@@Integer.MAX_VALUE @AT@ 1622 @LENGTH@ 7
------------------INS SimpleName@@MAX_VALUE @TO@ QualifiedName@@Integer.MAX_VALUE @AT@ 1630 @LENGTH@ 9
------INS Block@@ElseBody:{  super.put(key,value,timeoutMillis);} @TO@ IfStatement@@if (timeoutMillis <= 0) {  super.put(key,value,Integer.MAX_VALUE);} else {  super.put(key,value,timeoutMillis);} @AT@ 1657 @LENGTH@ 61
---------INS ExpressionStatement@@SuperMethodInvocation:super.put(key,value,timeoutMillis) @TO@ Block@@ElseBody:{  super.put(key,value,timeoutMillis);} @AT@ 1671 @LENGTH@ 37
------------INS SuperMethodInvocation@@super.put(key,value,timeoutMillis) @TO@ ExpressionStatement@@SuperMethodInvocation:super.put(key,value,timeoutMillis) @AT@ 1671 @LENGTH@ 36
---------------INS SimpleName@@MethodName:put:[key, value, timeoutMillis] @TO@ SuperMethodInvocation@@super.put(key,value,timeoutMillis) @AT@ 1677 @LENGTH@ 3
---------------INS SimpleName@@key @TO@ SuperMethodInvocation@@super.put(key,value,timeoutMillis) @AT@ 1681 @LENGTH@ 3
---------------INS SimpleName@@value @TO@ SuperMethodInvocation@@super.put(key,value,timeoutMillis) @AT@ 1686 @LENGTH@ 5
---------------INS SimpleName@@timeoutMillis @TO@ SuperMethodInvocation@@super.put(key,value,timeoutMillis) @AT@ 1693 @LENGTH@ 13


MOV TryStatement@@try {  batchBuilder.install();} catch (ServiceRegistryException e) {  throw new IllegalStateException("Failed to install boot services",e);} @TO@ MethodDeclaration@@public, void, MethodName:run, final List<ServiceActivator> startServices,  @AT@ 5147 @LENGTH@ 181


INS MethodDeclaration@@public, static, String, MethodName:createEndpointId,  @TO@ TypeDeclaration@@[public, final]EndpointHelper,  @AT@ 13984 @LENGTH@ 110
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:createEndpointId,  @AT@ 13984 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:createEndpointId,  @AT@ 13991 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:createEndpointId,  @AT@ 13998 @LENGTH@ 6
---INS SimpleName@@MethodName:createEndpointId @TO@ MethodDeclaration@@public, static, String, MethodName:createEndpointId,  @AT@ 14005 @LENGTH@ 16
---INS ReturnStatement@@InfixExpression:"endpoint" + endpointCounter.incrementAndGet() @TO@ MethodDeclaration@@public, static, String, MethodName:createEndpointId,  @AT@ 14034 @LENGTH@ 54
------INS InfixExpression@@"endpoint" + endpointCounter.incrementAndGet() @TO@ ReturnStatement@@InfixExpression:"endpoint" + endpointCounter.incrementAndGet() @AT@ 14041 @LENGTH@ 46
---------INS StringLiteral@@"endpoint" @TO@ InfixExpression@@"endpoint" + endpointCounter.incrementAndGet() @AT@ 14041 @LENGTH@ 10
---------INS Operator@@+ @TO@ InfixExpression@@"endpoint" + endpointCounter.incrementAndGet() @AT@ 14051 @LENGTH@ 1
---------INS MethodInvocation@@endpointCounter.incrementAndGet() @TO@ InfixExpression@@"endpoint" + endpointCounter.incrementAndGet() @AT@ 14054 @LENGTH@ 33
------------INS SimpleName@@Name:endpointCounter @TO@ MethodInvocation@@endpointCounter.incrementAndGet() @AT@ 14054 @LENGTH@ 15
------------INS SimpleName@@MethodName:incrementAndGet:[] @TO@ MethodInvocation@@endpointCounter.incrementAndGet() @AT@ 14070 @LENGTH@ 17


UPD TypeDeclaration@@[public]StringRedisListTest, AbstractRedisCollectionTest<String> @TO@ [public]StringRedisListTest, AbstractRedisListTest<String> @AT@ 848 @LENGTH@ 681
---UPD ParameterizedType@@AbstractRedisCollectionTest<String> @TO@ AbstractRedisListTest<String> @AT@ 889 @LENGTH@ 35
------UPD SimpleType@@AbstractRedisCollectionTest @TO@ AbstractRedisListTest @AT@ 889 @LENGTH@ 27


UPD TryStatement@@try {  channel.basicRecover(true);  channel.txRollback();} catch (IOException ex) {  logger.error("Could not rollback RabbitMQ Channel",ex);} @TO@ try {  channel.txRollback();} catch (IOException ex) {  logger.error("Could not rollback RabbitMQ Channel",ex);} @AT@ 3409 @LENGTH@ 156
---DEL ExpressionStatement@@MethodInvocation:channel.basicRecover(true) @AT@ 3418 @LENGTH@ 27
------DEL MethodInvocation@@channel.basicRecover(true) @AT@ 3418 @LENGTH@ 26
---------DEL SimpleName@@Name:channel @AT@ 3418 @LENGTH@ 7
---------DEL SimpleName@@MethodName:basicRecover:[true] @AT@ 3426 @LENGTH@ 18
------------DEL BooleanLiteral@@true @AT@ 3439 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:builder.addPropertyValue("delegate",parseListenerElement(element,parserContext)) @TO@ MethodInvocation:builder.addPropertyValue("delegate",parseListenerElement(element,parserContext,builder.getRawBeanDefinition())) @AT@ 1578 @LENGTH@ 83
---UPD MethodInvocation@@builder.addPropertyValue("delegate",parseListenerElement(element,parserContext)) @TO@ builder.addPropertyValue("delegate",parseListenerElement(element,parserContext,builder.getRawBeanDefinition())) @AT@ 1578 @LENGTH@ 82
------UPD SimpleName@@MethodName:addPropertyValue:["delegate", parseListenerElement(element,parserContext)] @TO@ MethodName:addPropertyValue:["delegate", parseListenerElement(element,parserContext,builder.getRawBeanDefinition())] @AT@ 1586 @LENGTH@ 74
---------UPD MethodInvocation@@parseListenerElement(element,parserContext) @TO@ parseListenerElement(element,parserContext,builder.getRawBeanDefinition()) @AT@ 1615 @LENGTH@ 44
------------UPD SimpleName@@MethodName:parseListenerElement:[element, parserContext] @TO@ MethodName:parseListenerElement:[element, parserContext, builder.getRawBeanDefinition()] @AT@ 1615 @LENGTH@ 44
---------------INS MethodInvocation@@builder.getRawBeanDefinition() @TO@ SimpleName@@MethodName:parseListenerElement:[element, parserContext] @AT@ 1724 @LENGTH@ 30
------------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getRawBeanDefinition() @AT@ 1724 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getRawBeanDefinition:[] @TO@ MethodInvocation@@builder.getRawBeanDefinition() @AT@ 1732 @LENGTH@ 22


UPD TryStatement@@try {  jmsManager.setContext(new InitialContext());  jmsManager.createConnectionFactory(false,configuration,configuration.getBindings());} catch (Exception e) {  throw new StartException("failed to create connection-factory",e);} @TO@ try {  jmsManager.createConnectionFactory(false,configuration,configuration.getBindings());} catch (Exception e) {  throw new StartException("failed to create connection-factory",e);} @AT@ 2317 @LENGTH@ 283
---DEL ExpressionStatement@@MethodInvocation:jmsManager.setContext(new InitialContext()) @AT@ 2335 @LENGTH@ 44
------DEL MethodInvocation@@jmsManager.setContext(new InitialContext()) @AT@ 2335 @LENGTH@ 43
---------DEL SimpleName@@Name:jmsManager @AT@ 2335 @LENGTH@ 10
---------DEL SimpleName@@MethodName:setContext:[new InitialContext()] @AT@ 2346 @LENGTH@ 32
------------DEL ClassInstanceCreation@@InitialContext[] @AT@ 2357 @LENGTH@ 20
---------------DEL New@@new @AT@ 2357 @LENGTH@ 3
---------------DEL SimpleType@@InitialContext @AT@ 2361 @LENGTH@ 14


DEL ExpressionStatement@@MethodInvocation:mock1.expectedMessageCount(2) @AT@ 1326 @LENGTH@ 30
---DEL MethodInvocation@@mock1.expectedMessageCount(2) @AT@ 1326 @LENGTH@ 29
------DEL SimpleName@@Name:mock1 @AT@ 1326 @LENGTH@ 5
------DEL SimpleName@@MethodName:expectedMessageCount:[2] @AT@ 1332 @LENGTH@ 23
---------DEL NumberLiteral@@2 @AT@ 1353 @LENGTH@ 1


DEL MethodDeclaration@@ServerGroupDeploymentPlanBuilder, MethodName:toServerGroup, String serverGroupName,  @AT@ 2825 @LENGTH@ 38
---DEL SimpleType@@ServerGroupDeploymentPlanBuilder @AT@ 2792 @LENGTH@ 32
---DEL SimpleName@@MethodName:toServerGroup @AT@ 2825 @LENGTH@ 13
---DEL SingleVariableDeclaration@@String serverGroupName @AT@ 2839 @LENGTH@ 22
------DEL SimpleType@@String @AT@ 2839 @LENGTH@ 6
------DEL SimpleName@@serverGroupName @AT@ 2846 @LENGTH@ 15


DEL ExpressionStatement@@Assignment:this.socket=new Socket() @AT@ 2547 @LENGTH@ 27
---DEL Assignment@@this.socket=new Socket() @AT@ 2547 @LENGTH@ 26
------DEL FieldAccess@@this.socket @AT@ 2547 @LENGTH@ 11
---------DEL ThisExpression@@this @AT@ 2547 @LENGTH@ 4
---------DEL SimpleName@@socket @AT@ 2552 @LENGTH@ 6
------DEL Operator@@= @AT@ 2558 @LENGTH@ 1
------DEL ClassInstanceCreation@@Socket[] @AT@ 2561 @LENGTH@ 12
---------DEL New@@new @AT@ 2561 @LENGTH@ 3
---------DEL SimpleType@@Socket @AT@ 2565 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:ServiceHelper.stopService(consumers.values()) @TO@ MethodInvocation:ServiceHelper.stopServices(consumers) @AT@ 1895 @LENGTH@ 46
---UPD MethodInvocation@@ServiceHelper.stopService(consumers.values()) @TO@ ServiceHelper.stopServices(consumers) @AT@ 1895 @LENGTH@ 45
------UPD SimpleName@@MethodName:stopService:[consumers.values()] @TO@ MethodName:stopServices:[consumers] @AT@ 1909 @LENGTH@ 31
---------DEL MethodInvocation@@consumers.values() @AT@ 1921 @LENGTH@ 18
------------DEL SimpleName@@Name:consumers @AT@ 1921 @LENGTH@ 9
------------DEL SimpleName@@MethodName:values:[] @AT@ 1931 @LENGTH@ 8
---------INS SimpleName@@consumers @TO@ SimpleName@@MethodName:stopService:[consumers.values()] @AT@ 1922 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:System.arraycopy(suffixes,0,this.suffixes,0,suffixes.length) @TO@ MethodDeclaration@@public, voidMethodName:SuffixFileFilter, String[] suffixes, IOCase caseSensitivity,  @AT@ 4100 @LENGTH@ 65
---INS MethodInvocation@@System.arraycopy(suffixes,0,this.suffixes,0,suffixes.length) @TO@ ExpressionStatement@@MethodInvocation:System.arraycopy(suffixes,0,this.suffixes,0,suffixes.length) @AT@ 4100 @LENGTH@ 64
------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.arraycopy(suffixes,0,this.suffixes,0,suffixes.length) @AT@ 4100 @LENGTH@ 6
------INS SimpleName@@MethodName:arraycopy:[suffixes, 0, this.suffixes, 0, suffixes.length] @TO@ MethodInvocation@@System.arraycopy(suffixes,0,this.suffixes,0,suffixes.length) @AT@ 4107 @LENGTH@ 57
---------INS SimpleName@@suffixes @TO@ SimpleName@@MethodName:arraycopy:[suffixes, 0, this.suffixes, 0, suffixes.length] @AT@ 4117 @LENGTH@ 8
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[suffixes, 0, this.suffixes, 0, suffixes.length] @AT@ 4127 @LENGTH@ 1
---------INS FieldAccess@@this.suffixes @TO@ SimpleName@@MethodName:arraycopy:[suffixes, 0, this.suffixes, 0, suffixes.length] @AT@ 4130 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.suffixes @AT@ 4130 @LENGTH@ 4
------------INS SimpleName@@suffixes @TO@ FieldAccess@@this.suffixes @AT@ 4135 @LENGTH@ 8
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[suffixes, 0, this.suffixes, 0, suffixes.length] @AT@ 4145 @LENGTH@ 1
---------INS QualifiedName@@suffixes.length @TO@ SimpleName@@MethodName:arraycopy:[suffixes, 0, this.suffixes, 0, suffixes.length] @AT@ 4148 @LENGTH@ 15
------------INS SimpleName@@suffixes @TO@ QualifiedName@@suffixes.length @AT@ 4148 @LENGTH@ 8
------------INS SimpleName@@length @TO@ QualifiedName@@suffixes.length @AT@ 4157 @LENGTH@ 6


UPD Block@@ElseBody:{  List<String> result=new ArrayList<String>();  for (  String server : hostModel.getActiveServerNames()) {    String serverGroupName=hostModel.getServer(server).getServerGroup();    if (profileName.equals(domainModel.getServerGroup(serverGroupName).getProfileName())) {      result.add(server);    }  }  return result;} @TO@ ElseBody:{  List<String> result=new ArrayList<String>();  Map<String,Set<String>> includedProfilesByRoot=new HashMap<String,Set<String>>();  for (  String server : hostModel.getActiveServerNames()) {    String serverGroupName=hostModel.getServer(server).getServerGroup();    String sgProfileName=domainModel.getServerGroup(serverGroupName).getProfileName();    if (!includedProfilesByRoot.containsKey(sgProfileName)) {      includedProfilesByRoot.put(sgProfileName,domainModel.getProfiles(sgProfileName).keySet());    }    if (includedProfilesByRoot.get(sgProfileName).contains(profileName)) {      result.add(server);    }  }  return result;} @AT@ 4419 @LENGTH@ 431
---UPD EnhancedForStatement@@for (String server : hostModel.getActiveServerNames()) {  String serverGroupName=hostModel.getServer(server).getServerGroup();  if (profileName.equals(domainModel.getServerGroup(serverGroupName).getProfileName())) {    result.add(server);  }} @TO@ for (String server : hostModel.getActiveServerNames()) {  String serverGroupName=hostModel.getServer(server).getServerGroup();  String sgProfileName=domainModel.getServerGroup(serverGroupName).getProfileName();  if (!includedProfilesByRoot.containsKey(sgProfileName)) {    includedProfilesByRoot.put(sgProfileName,domainModel.getProfiles(sgProfileName).keySet());  }  if (includedProfilesByRoot.get(sgProfileName).contains(profileName)) {    result.add(server);  }} @AT@ 4492 @LENGTH@ 321
------UPD IfStatement@@if (profileName.equals(domainModel.getServerGroup(serverGroupName).getProfileName())) {  result.add(server);} @TO@ if (includedProfilesByRoot.get(sgProfileName).contains(profileName)) {  result.add(server);} @AT@ 4654 @LENGTH@ 145
---------UPD MethodInvocation@@profileName.equals(domainModel.getServerGroup(serverGroupName).getProfileName()) @TO@ includedProfilesByRoot.get(sgProfileName).contains(profileName) @AT@ 4658 @LENGTH@ 80
------------UPD SimpleName@@Name:profileName @TO@ sgProfileName @AT@ 4658 @LENGTH@ 11
------------UPD SimpleName@@MethodName:equals:[domainModel.getServerGroup(serverGroupName).getProfileName()] @TO@ MethodName:contains:[profileName] @AT@ 4670 @LENGTH@ 68
---------------INS SimpleName@@profileName @TO@ SimpleName@@MethodName:equals:[domainModel.getServerGroup(serverGroupName).getProfileName()] @AT@ 5347 @LENGTH@ 11
------------INS MethodInvocation@@MethodName:get:[sgProfileName] @TO@ MethodInvocation@@profileName.equals(domainModel.getServerGroup(serverGroupName).getProfileName()) @AT@ 5296 @LENGTH@ 41
---------------MOV SimpleName@@Name:profileName @TO@ MethodInvocation@@MethodName:get:[sgProfileName] @AT@ 4658 @LENGTH@ 11
------------INS SimpleName@@Name:includedProfilesByRoot @TO@ MethodInvocation@@profileName.equals(domainModel.getServerGroup(serverGroupName).getProfileName()) @AT@ 5296 @LENGTH@ 22
------INS VariableDeclarationStatement@@String sgProfileName=domainModel.getServerGroup(serverGroupName).getProfileName(); @TO@ EnhancedForStatement@@for (String server : hostModel.getActiveServerNames()) {  String serverGroupName=hostModel.getServer(server).getServerGroup();  if (profileName.equals(domainModel.getServerGroup(serverGroupName).getProfileName())) {    result.add(server);  }} @AT@ 4901 @LENGTH@ 84
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sgProfileName=domainModel.getServerGroup(serverGroupName).getProfileName(); @AT@ 4901 @LENGTH@ 6
---------INS VariableDeclarationFragment@@sgProfileName=domainModel.getServerGroup(serverGroupName).getProfileName() @TO@ VariableDeclarationStatement@@String sgProfileName=domainModel.getServerGroup(serverGroupName).getProfileName(); @AT@ 4908 @LENGTH@ 76
------------MOV MethodInvocation@@domainModel.getServerGroup(serverGroupName).getProfileName() @TO@ VariableDeclarationFragment@@sgProfileName=domainModel.getServerGroup(serverGroupName).getProfileName() @AT@ 4677 @LENGTH@ 60
------------INS SimpleName@@sgProfileName @TO@ VariableDeclarationFragment@@sgProfileName=domainModel.getServerGroup(serverGroupName).getProfileName() @AT@ 4908 @LENGTH@ 13
------INS IfStatement@@if (!includedProfilesByRoot.containsKey(sgProfileName)) {  includedProfilesByRoot.put(sgProfileName,domainModel.getProfiles(sgProfileName).keySet());} @TO@ EnhancedForStatement@@for (String server : hostModel.getActiveServerNames()) {  String serverGroupName=hostModel.getServer(server).getServerGroup();  if (profileName.equals(domainModel.getServerGroup(serverGroupName).getProfileName())) {    result.add(server);  }} @AT@ 5003 @LENGTH@ 271
---------INS PrefixExpression@@!includedProfilesByRoot.containsKey(sgProfileName) @TO@ IfStatement@@if (!includedProfilesByRoot.containsKey(sgProfileName)) {  includedProfilesByRoot.put(sgProfileName,domainModel.getProfiles(sgProfileName).keySet());} @AT@ 5007 @LENGTH@ 50
------------INS Operator@@! @TO@ PrefixExpression@@!includedProfilesByRoot.containsKey(sgProfileName) @AT@ 5007 @LENGTH@ 1
------------INS MethodInvocation@@includedProfilesByRoot.containsKey(sgProfileName) @TO@ PrefixExpression@@!includedProfilesByRoot.containsKey(sgProfileName) @AT@ 5008 @LENGTH@ 49
---------------INS SimpleName@@Name:includedProfilesByRoot @TO@ MethodInvocation@@includedProfilesByRoot.containsKey(sgProfileName) @AT@ 5008 @LENGTH@ 22
---------------INS SimpleName@@MethodName:containsKey:[sgProfileName] @TO@ MethodInvocation@@includedProfilesByRoot.containsKey(sgProfileName) @AT@ 5031 @LENGTH@ 26
------------------INS SimpleName@@sgProfileName @TO@ SimpleName@@MethodName:containsKey:[sgProfileName] @AT@ 5043 @LENGTH@ 13
---------INS Block@@ThenBody:{  includedProfilesByRoot.put(sgProfileName,domainModel.getProfiles(sgProfileName).keySet());} @TO@ IfStatement@@if (!includedProfilesByRoot.containsKey(sgProfileName)) {  includedProfilesByRoot.put(sgProfileName,domainModel.getProfiles(sgProfileName).keySet());} @AT@ 5059 @LENGTH@ 215
------------INS ExpressionStatement@@MethodInvocation:includedProfilesByRoot.put(sgProfileName,domainModel.getProfiles(sgProfileName).keySet()) @TO@ Block@@ThenBody:{  includedProfilesByRoot.put(sgProfileName,domainModel.getProfiles(sgProfileName).keySet());} @AT@ 5165 @LENGTH@ 91
---------------INS MethodInvocation@@includedProfilesByRoot.put(sgProfileName,domainModel.getProfiles(sgProfileName).keySet()) @TO@ ExpressionStatement@@MethodInvocation:includedProfilesByRoot.put(sgProfileName,domainModel.getProfiles(sgProfileName).keySet()) @AT@ 5165 @LENGTH@ 90
------------------INS SimpleName@@Name:includedProfilesByRoot @TO@ MethodInvocation@@includedProfilesByRoot.put(sgProfileName,domainModel.getProfiles(sgProfileName).keySet()) @AT@ 5165 @LENGTH@ 22
------------------INS SimpleName@@MethodName:put:[sgProfileName, domainModel.getProfiles(sgProfileName).keySet()] @TO@ MethodInvocation@@includedProfilesByRoot.put(sgProfileName,domainModel.getProfiles(sgProfileName).keySet()) @AT@ 5188 @LENGTH@ 67
---------------------INS SimpleName@@sgProfileName @TO@ SimpleName@@MethodName:put:[sgProfileName, domainModel.getProfiles(sgProfileName).keySet()] @AT@ 5192 @LENGTH@ 13
---------------------INS MethodInvocation@@domainModel.getProfiles(sgProfileName).keySet() @TO@ SimpleName@@MethodName:put:[sgProfileName, domainModel.getProfiles(sgProfileName).keySet()] @AT@ 5207 @LENGTH@ 47
------------------------INS MethodInvocation@@MethodName:getProfiles:[sgProfileName] @TO@ MethodInvocation@@domainModel.getProfiles(sgProfileName).keySet() @AT@ 5207 @LENGTH@ 38
---------------------------INS SimpleName@@sgProfileName @TO@ MethodInvocation@@MethodName:getProfiles:[sgProfileName] @AT@ 5231 @LENGTH@ 13
------------------------INS SimpleName@@Name:domainModel @TO@ MethodInvocation@@domainModel.getProfiles(sgProfileName).keySet() @AT@ 5207 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:keySet:[] @TO@ MethodInvocation@@domainModel.getProfiles(sgProfileName).keySet() @AT@ 5246 @LENGTH@ 8
---INS VariableDeclarationStatement@@Map<String,Set<String>> includedProfilesByRoot=new HashMap<String,Set<String>>(); @TO@ Block@@ElseBody:{  List<String> result=new ArrayList<String>();  for (  String server : hostModel.getActiveServerNames()) {    String serverGroupName=hostModel.getServer(server).getServerGroup();    if (profileName.equals(domainModel.getServerGroup(serverGroupName).getProfileName())) {      result.add(server);    }  }  return result;} @AT@ 4641 @LENGTH@ 85
------INS ParameterizedType@@Map<String,Set<String>> @TO@ VariableDeclarationStatement@@Map<String,Set<String>> includedProfilesByRoot=new HashMap<String,Set<String>>(); @AT@ 4641 @LENGTH@ 24
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Set<String>> @AT@ 4641 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Set<String>> @AT@ 4645 @LENGTH@ 6
---------INS ParameterizedType@@Set<String> @TO@ ParameterizedType@@Map<String,Set<String>> @AT@ 4653 @LENGTH@ 11
------------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 4653 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 4657 @LENGTH@ 6
------INS VariableDeclarationFragment@@includedProfilesByRoot=new HashMap<String,Set<String>>() @TO@ VariableDeclarationStatement@@Map<String,Set<String>> includedProfilesByRoot=new HashMap<String,Set<String>>(); @AT@ 4666 @LENGTH@ 59
---------INS SimpleName@@includedProfilesByRoot @TO@ VariableDeclarationFragment@@includedProfilesByRoot=new HashMap<String,Set<String>>() @AT@ 4666 @LENGTH@ 22
---------INS ClassInstanceCreation@@HashMap<String,Set<String>>[] @TO@ VariableDeclarationFragment@@includedProfilesByRoot=new HashMap<String,Set<String>>() @AT@ 4691 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,Set<String>>[] @AT@ 4691 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,Set<String>> @TO@ ClassInstanceCreation@@HashMap<String,Set<String>>[] @AT@ 4695 @LENGTH@ 28
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Set<String>> @AT@ 4695 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Set<String>> @AT@ 4703 @LENGTH@ 6
---------------INS ParameterizedType@@Set<String> @TO@ ParameterizedType@@HashMap<String,Set<String>> @AT@ 4711 @LENGTH@ 11
------------------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 4711 @LENGTH@ 3
------------------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 4715 @LENGTH@ 6


DEL FieldDeclaration@@private, static, volatile, boolean, [txB] @AT@ 1493 @LENGTH@ 36
---DEL Modifier@@private @AT@ 1493 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1501 @LENGTH@ 6
---DEL Modifier@@volatile @AT@ 1508 @LENGTH@ 8
---DEL PrimitiveType@@boolean @AT@ 1517 @LENGTH@ 7
---DEL VariableDeclarationFragment@@txB @AT@ 1525 @LENGTH@ 3
------DEL SimpleName@@txB @AT@ 1525 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:response.put("since_id","24") @TO@ MethodInvocation:response.put("since_id",24) @AT@ 5535 @LENGTH@ 31
---UPD MethodInvocation@@response.put("since_id","24") @TO@ response.put("since_id",24) @AT@ 5535 @LENGTH@ 30
------UPD SimpleName@@MethodName:put:["since_id", "24"] @TO@ MethodName:put:["since_id", 24] @AT@ 5544 @LENGTH@ 21
---------INS NumberLiteral@@24 @TO@ SimpleName@@MethodName:put:["since_id", "24"] @AT@ 5558 @LENGTH@ 2
---------DEL StringLiteral@@"24" @AT@ 5560 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testGetJobExecutionsByNamePastEnd,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("/test-config.xml"), public]JdbcSearchableJobExecutionDaoTests,  @AT@ 3582 @LENGTH@ 165
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetJobExecutionsByNamePastEnd,  @AT@ 3582 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetJobExecutionsByNamePastEnd,  @AT@ 3589 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetJobExecutionsByNamePastEnd @TO@ MethodDeclaration@@public, void, MethodName:testGetJobExecutionsByNamePastEnd,  @AT@ 3594 @LENGTH@ 33
---INS VariableDeclarationStatement@@List<JobExecution> jobExecutions=dao.getJobExecutions(100,100); @TO@ MethodDeclaration@@public, void, MethodName:testGetJobExecutionsByNamePastEnd,  @AT@ 3635 @LENGTH@ 66
------INS ParameterizedType@@List<JobExecution> @TO@ VariableDeclarationStatement@@List<JobExecution> jobExecutions=dao.getJobExecutions(100,100); @AT@ 3635 @LENGTH@ 18
---------INS SimpleType@@List @TO@ ParameterizedType@@List<JobExecution> @AT@ 3635 @LENGTH@ 4
---------INS SimpleType@@JobExecution @TO@ ParameterizedType@@List<JobExecution> @AT@ 3640 @LENGTH@ 12
------INS VariableDeclarationFragment@@jobExecutions=dao.getJobExecutions(100,100) @TO@ VariableDeclarationStatement@@List<JobExecution> jobExecutions=dao.getJobExecutions(100,100); @AT@ 3654 @LENGTH@ 46
---------INS SimpleName@@jobExecutions @TO@ VariableDeclarationFragment@@jobExecutions=dao.getJobExecutions(100,100) @AT@ 3654 @LENGTH@ 13
---------INS MethodInvocation@@dao.getJobExecutions(100,100) @TO@ VariableDeclarationFragment@@jobExecutions=dao.getJobExecutions(100,100) @AT@ 3670 @LENGTH@ 30
------------INS SimpleName@@Name:dao @TO@ MethodInvocation@@dao.getJobExecutions(100,100) @AT@ 3670 @LENGTH@ 3
------------INS SimpleName@@MethodName:getJobExecutions:[100, 100] @TO@ MethodInvocation@@dao.getJobExecutions(100,100) @AT@ 3674 @LENGTH@ 26
---------------INS NumberLiteral@@100 @TO@ SimpleName@@MethodName:getJobExecutions:[100, 100] @AT@ 3691 @LENGTH@ 3
---------------INS NumberLiteral@@100 @TO@ SimpleName@@MethodName:getJobExecutions:[100, 100] @AT@ 3696 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals(0,jobExecutions.size()) @TO@ MethodDeclaration@@public, void, MethodName:testGetJobExecutionsByNamePastEnd,  @AT@ 3705 @LENGTH@ 38
------INS MethodInvocation@@assertEquals(0,jobExecutions.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(0,jobExecutions.size()) @AT@ 3705 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertEquals:[0, jobExecutions.size()] @TO@ MethodInvocation@@assertEquals(0,jobExecutions.size()) @AT@ 3705 @LENGTH@ 37
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[0, jobExecutions.size()] @AT@ 3718 @LENGTH@ 1
------------INS MethodInvocation@@jobExecutions.size() @TO@ SimpleName@@MethodName:assertEquals:[0, jobExecutions.size()] @AT@ 3721 @LENGTH@ 20
---------------INS SimpleName@@Name:jobExecutions @TO@ MethodInvocation@@jobExecutions.size() @AT@ 3721 @LENGTH@ 13
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@jobExecutions.size() @AT@ 3735 @LENGTH@ 6


UPD IfStatement@@if (resourceRoot.getRoot().isFile()) {  VirtualFile webFragment=resourceRoot.getRoot().getChild(META_INF);  if (webFragment.exists() && webFragment.isDirectory()) {    processTlds(deploymentRoot,webFragment.getChildren(),tlds);  }} @TO@ if (resourceRoot.getRoot().getLowerCaseName().endsWith(".jar")) {  VirtualFile webFragment=resourceRoot.getRoot().getChild(META_INF);  if (webFragment.exists() && webFragment.isDirectory()) {    processTlds(deploymentRoot,webFragment.getChildren(),tlds);  }} @AT@ 3351 @LENGTH@ 310
---UPD MethodInvocation@@resourceRoot.getRoot().isFile() @TO@ resourceRoot.getRoot().getLowerCaseName().endsWith(".jar") @AT@ 3355 @LENGTH@ 31
------INS MethodInvocation@@MethodName:getLowerCaseName:[] @TO@ MethodInvocation@@resourceRoot.getRoot().isFile() @AT@ 3355 @LENGTH@ 41
------UPD SimpleName@@MethodName:isFile:[] @TO@ MethodName:endsWith:[".jar"] @AT@ 3378 @LENGTH@ 8
---------INS StringLiteral@@".jar" @TO@ SimpleName@@MethodName:isFile:[] @AT@ 3406 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:mergeModuleName, NamedModule dest, NamedModule override, NamedModule original,  @TO@ public, static, void, MethodName:mergeModuleName, NamedModule dest, NamedModule override, NamedModule original,  @AT@ 1647 @LENGTH@ 350
---INS Modifier@@static @TO@ MethodDeclaration@@public, void, MethodName:mergeModuleName, NamedModule dest, NamedModule override, NamedModule original,  @AT@ 1696 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("direct:start").setHeader(Exchange.HTTP_QUERY,constant("hl=en&q=activemq")).to("http://www.google.com/search").to("mock:results") @TO@ MethodInvocation:from("direct:start").setHeader(Exchange.HTTP_QUERY,constant("hl=en&q=activemq")).to("http2://http://www.google.com/search").to("mock:results") @AT@ 2601 @LENGTH@ 157
---UPD MethodInvocation@@from("direct:start").setHeader(Exchange.HTTP_QUERY,constant("hl=en&q=activemq")).to("http://www.google.com/search").to("mock:results") @TO@ from("direct:start").setHeader(Exchange.HTTP_QUERY,constant("hl=en&q=activemq")).to("http2://http://www.google.com/search").to("mock:results") @AT@ 2601 @LENGTH@ 156
------UPD MethodInvocation@@MethodName:to:["http://www.google.com/search"] @TO@ MethodName:to:["http2://http://www.google.com/search"] @AT@ 2601 @LENGTH@ 137
---------UPD StringLiteral@@"http://www.google.com/search" @TO@ "http2://http://www.google.com/search" @AT@ 2707 @LENGTH@ 30


UPD ExpressionStatement@@Assignment:this.wildcards=wildcards @TO@ Assignment:this.wildcards=new String[wildcards.length] @AT@ 4268 @LENGTH@ 27
---UPD Assignment@@this.wildcards=wildcards @TO@ this.wildcards=new String[wildcards.length] @AT@ 4268 @LENGTH@ 26
------INS ArrayCreation@@new String[wildcards.length] @TO@ Assignment@@this.wildcards=wildcards @AT@ 4285 @LENGTH@ 28
---------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[wildcards.length] @AT@ 4289 @LENGTH@ 24
------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 4289 @LENGTH@ 6
---------INS QualifiedName@@wildcards.length @TO@ ArrayCreation@@new String[wildcards.length] @AT@ 4296 @LENGTH@ 16
------------INS SimpleName@@wildcards @TO@ QualifiedName@@wildcards.length @AT@ 4296 @LENGTH@ 9
------------INS SimpleName@@length @TO@ QualifiedName@@wildcards.length @AT@ 4306 @LENGTH@ 6
------DEL SimpleName@@wildcards @AT@ 4285 @LENGTH@ 9


UPD MethodDeclaration@@protected, void, MethodName:processXmlStream, XMLExtendedStreamReader reader, XMLStreamException,  @TO@ public, voidMethodName:SubnetMatchCriteriaElement, XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 1286 @LENGTH@ 2133
---MOV SuperConstructorInvocation@@super(reader,Element.SUBNET_MATCH);
 @TO@ MethodDeclaration@@protected, void, MethodName:processXmlStream, XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 1145 @LENGTH@ 36
---MOV ExpressionStatement@@MethodInvocation:setInterfaceCriteria(new SubnetMatchInterfaceCriteria(network,mask)) @TO@ MethodDeclaration@@protected, void, MethodName:processXmlStream, XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 1190 @LENGTH@ 70
---UPD Modifier@@protected @TO@ public @AT@ 1286 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 1296 @LENGTH@ 4
---UPD SimpleName@@MethodName:processXmlStream @TO@ MethodName:SubnetMatchCriteriaElement @AT@ 1301 @LENGTH@ 16


INS TryStatement@@try {  template.start();} catch (Exception e) {} @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 15313 @LENGTH@ 115
---INS ExpressionStatement@@MethodInvocation:template.start() @TO@ TryStatement@@try {  template.start();} catch (Exception e) {} @AT@ 15335 @LENGTH@ 17
------INS MethodInvocation@@template.start() @TO@ ExpressionStatement@@MethodInvocation:template.start() @AT@ 15335 @LENGTH@ 16
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.start() @AT@ 15335 @LENGTH@ 8
---------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@template.start() @AT@ 15344 @LENGTH@ 7
---INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  template.start();} catch (Exception e) {} @AT@ 15367 @LENGTH@ 61
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 15374 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 15374 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 15384 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:namingStore.close() @AT@ 13901 @LENGTH@ 20
---DEL MethodInvocation@@namingStore.close() @AT@ 13901 @LENGTH@ 19
------DEL SimpleName@@Name:namingStore @AT@ 13901 @LENGTH@ 11
------DEL SimpleName@@MethodName:close:[] @AT@ 13913 @LENGTH@ 7


UPD WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());        if (visited.contains(element)) {          throw unexpectedElement(reader);        }        visited.add(element);switch (element) {case SASL:{            saslElement=new SaslElement(reader);            break;          }case PROPERTIES:{          connectorProperties=new PropertiesElement(reader);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}}} @TO@ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{      final Element element=Element.forName(reader.getLocalName());      if (visited.contains(element)) {        throw unexpectedElement(reader);      }      visited.add(element);switch (element) {case SASL:{          saslElement=new SaslElement(reader);          break;        }case PROPERTIES:{        connectorProperties=new PropertiesElement(reader);        break;      }case AUTHENTICATION_PROVIDER:{      authenticationProvider=readStringAttributeElement(reader,"name");      break;    }default :  throw unexpectedElement(reader);}break;}default :throw unexpectedElement(reader);}} @AT@ 4529 @LENGTH@ 1146
---INS InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @TO@ WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());        if (visited.contains(element)) {          throw unexpectedElement(reader);        }        visited.add(element);switch (element) {case SASL:{            saslElement=new SaslElement(reader);            break;          }case PROPERTIES:{          connectorProperties=new PropertiesElement(reader);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}}} @AT@ 4502 @LENGTH@ 51
------INS MethodInvocation@@reader.hasNext() @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 4502 @LENGTH@ 16
---------MOV SimpleName@@Name:reader @TO@ MethodInvocation@@reader.hasNext() @AT@ 4536 @LENGTH@ 6
---------MOV SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@reader.hasNext() @AT@ 4543 @LENGTH@ 9
------INS Operator@@&& @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 4518 @LENGTH@ 2
------INS InfixExpression@@reader.nextTag() != END_ELEMENT @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 4522 @LENGTH@ 31
---------MOV MethodInvocation@@reader.nextTag() @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 4572 @LENGTH@ 16
---------MOV Operator@@== @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 4588 @LENGTH@ 2
---------MOV SimpleName@@START_ELEMENT @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 4592 @LENGTH@ 13
---DEL MethodInvocation@@reader.hasNext() @AT@ 4536 @LENGTH@ 16
---DEL Block@@WhileBody:{  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());        if (visited.contains(element)) {          throw unexpectedElement(reader);        }        visited.add(element);switch (element) {case SASL:{            saslElement=new SaslElement(reader);            break;          }case PROPERTIES:{          connectorProperties=new PropertiesElement(reader);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}}} @AT@ 4554 @LENGTH@ 1121
------DEL IfStatement@@if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{      final Element element=Element.forName(reader.getLocalName());      if (visited.contains(element)) {        throw unexpectedElement(reader);      }      visited.add(element);switch (element) {case SASL:{          saslElement=new SaslElement(reader);          break;        }case PROPERTIES:{        connectorProperties=new PropertiesElement(reader);        break;      }default :    throw unexpectedElement(reader);}break;}default :throw unexpectedElement(reader);}} @AT@ 4568 @LENGTH@ 1097
---------DEL InfixExpression@@reader.nextTag() == START_ELEMENT @AT@ 4572 @LENGTH@ 33
---MOV Block@@ThenBody:{switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{      final Element element=Element.forName(reader.getLocalName());      if (visited.contains(element)) {        throw unexpectedElement(reader);      }      visited.add(element);switch (element) {case SASL:{          saslElement=new SaslElement(reader);          break;        }case PROPERTIES:{        connectorProperties=new PropertiesElement(reader);        break;      }default :    throw unexpectedElement(reader);}break;}default :throw unexpectedElement(reader);}} @TO@ WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());        if (visited.contains(element)) {          throw unexpectedElement(reader);        }        visited.add(element);switch (element) {case SASL:{            saslElement=new SaslElement(reader);            break;          }case PROPERTIES:{          connectorProperties=new PropertiesElement(reader);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}}} @AT@ 4607 @LENGTH@ 1058
------UPD SwitchStatement@@switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{    final Element element=Element.forName(reader.getLocalName());    if (visited.contains(element)) {      throw unexpectedElement(reader);    }    visited.add(element);switch (element) {case SASL:{        saslElement=new SaslElement(reader);        break;      }case PROPERTIES:{      connectorProperties=new PropertiesElement(reader);      break;    }default :  throw unexpectedElement(reader);}break;}default :throw unexpectedElement(reader);} @TO@ switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{    final Element element=Element.forName(reader.getLocalName());    if (visited.contains(element)) {      throw unexpectedElement(reader);    }    visited.add(element);switch (element) {case SASL:{        saslElement=new SaslElement(reader);        break;      }case PROPERTIES:{      connectorProperties=new PropertiesElement(reader);      break;    }case AUTHENTICATION_PROVIDER:{    authenticationProvider=readStringAttributeElement(reader,"name");    break;  }default :throw unexpectedElement(reader);}break;}default :throw unexpectedElement(reader);} @AT@ 4625 @LENGTH@ 1026
---------UPD SwitchStatement@@switch (element) {case SASL:{    saslElement=new SaslElement(reader);    break;  }case PROPERTIES:{  connectorProperties=new PropertiesElement(reader);  break;}default :throw unexpectedElement(reader);} @TO@ switch (element) {case SASL:{    saslElement=new SaslElement(reader);    break;  }case PROPERTIES:{  connectorProperties=new PropertiesElement(reader);  break;}case AUTHENTICATION_PROVIDER:{authenticationProvider=readStringAttributeElement(reader,"name");break;}default :throw unexpectedElement(reader);} @AT@ 5022 @LENGTH@ 496
------------INS SwitchCase@@case AUTHENTICATION_PROVIDER: @TO@ SwitchStatement@@switch (element) {case SASL:{    saslElement=new SaslElement(reader);    break;  }case PROPERTIES:{  connectorProperties=new PropertiesElement(reader);  break;}default :throw unexpectedElement(reader);} @AT@ 5331 @LENGTH@ 29
---------------INS SimpleName@@AUTHENTICATION_PROVIDER @TO@ SwitchCase@@case AUTHENTICATION_PROVIDER: @AT@ 5336 @LENGTH@ 23
------------INS ExpressionStatement@@Assignment:authenticationProvider=readStringAttributeElement(reader,"name") @TO@ SwitchStatement@@switch (element) {case SASL:{    saslElement=new SaslElement(reader);    break;  }case PROPERTIES:{  connectorProperties=new PropertiesElement(reader);  break;}default :throw unexpectedElement(reader);} @AT@ 5391 @LENGTH@ 68
---------------INS Assignment@@authenticationProvider=readStringAttributeElement(reader,"name") @TO@ ExpressionStatement@@Assignment:authenticationProvider=readStringAttributeElement(reader,"name") @AT@ 5391 @LENGTH@ 67
------------------INS SimpleName@@authenticationProvider @TO@ Assignment@@authenticationProvider=readStringAttributeElement(reader,"name") @AT@ 5391 @LENGTH@ 22
------------------INS Operator@@= @TO@ Assignment@@authenticationProvider=readStringAttributeElement(reader,"name") @AT@ 5413 @LENGTH@ 1
------------------INS MethodInvocation@@readStringAttributeElement(reader,"name") @TO@ Assignment@@authenticationProvider=readStringAttributeElement(reader,"name") @AT@ 5416 @LENGTH@ 42
---------------------INS SimpleName@@MethodName:readStringAttributeElement:[reader, "name"] @TO@ MethodInvocation@@readStringAttributeElement(reader,"name") @AT@ 5416 @LENGTH@ 42
------------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:readStringAttributeElement:[reader, "name"] @AT@ 5443 @LENGTH@ 6
------------------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:readStringAttributeElement:[reader, "name"] @AT@ 5451 @LENGTH@ 6
------------INS BreakStatement@@ @TO@ SwitchStatement@@switch (element) {case SASL:{    saslElement=new SaslElement(reader);    break;  }case PROPERTIES:{  connectorProperties=new PropertiesElement(reader);  break;}default :throw unexpectedElement(reader);} @AT@ 5488 @LENGTH@ 6


UPD TypeDeclaration@@[public]NoSuchBatchDomainObjectExceptionTests, TestCase @TO@ [public]NoSuchBatchDomainObjectExceptionTests,  @AT@ 820 @LENGTH@ 230
---DEL SimpleType@@TestCase @AT@ 879 @LENGTH@ 8


UPD VariableDeclarationStatement@@Bag originalBag=new TreeBag(); @TO@ Bag<Object> originalBag=new TreeBag<Object>(); @AT@ 2715 @LENGTH@ 32
---INS ParameterizedType@@Bag<Object> @TO@ VariableDeclarationStatement@@Bag originalBag=new TreeBag(); @AT@ 2715 @LENGTH@ 11
------INS SimpleType@@Bag @TO@ ParameterizedType@@Bag<Object> @AT@ 2715 @LENGTH@ 3
------INS SimpleType@@Object @TO@ ParameterizedType@@Bag<Object> @AT@ 2719 @LENGTH@ 6
---DEL SimpleType@@Bag @AT@ 2715 @LENGTH@ 3
---UPD VariableDeclarationFragment@@originalBag=new TreeBag() @TO@ originalBag=new TreeBag<Object>() @AT@ 2719 @LENGTH@ 27
------UPD ClassInstanceCreation@@TreeBag[] @TO@ TreeBag<Object>[] @AT@ 2733 @LENGTH@ 13
---------DEL SimpleType@@TreeBag @AT@ 2737 @LENGTH@ 7
---------INS ParameterizedType@@TreeBag<Object> @TO@ ClassInstanceCreation@@TreeBag[] @AT@ 2745 @LENGTH@ 15
------------INS SimpleType@@TreeBag @TO@ ParameterizedType@@TreeBag<Object> @AT@ 2745 @LENGTH@ 7
------------INS SimpleType@@Object @TO@ ParameterizedType@@TreeBag<Object> @AT@ 2753 @LENGTH@ 6


UPD MethodDeclaration@@protected, void, MethodName:updateNewExchange, Exchange exchange, int index, Iterator<ProcessorExchangePair> allPairs,  @TO@ protected, void, MethodName:updateNewExchange, Exchange exchange, int index, Iterable<ProcessorExchangePair> allPairs, Iterator<ProcessorExchangePair> it,  @AT@ 6454 @LENGTH@ 524
---UPD SingleVariableDeclaration@@Iterator<ProcessorExchangePair> allPairs @TO@ Iterable<ProcessorExchangePair> allPairs @AT@ 6517 @LENGTH@ 40
------UPD ParameterizedType@@Iterator<ProcessorExchangePair> @TO@ Iterable<ProcessorExchangePair> @AT@ 6517 @LENGTH@ 31
---------UPD SimpleType@@Iterator @TO@ Iterable @AT@ 6517 @LENGTH@ 8
---INS SingleVariableDeclaration@@Iterator<ProcessorExchangePair> it @TO@ MethodDeclaration@@protected, void, MethodName:updateNewExchange, Exchange exchange, int index, Iterator<ProcessorExchangePair> allPairs,  @AT@ 6596 @LENGTH@ 34
------INS ParameterizedType@@Iterator<ProcessorExchangePair> @TO@ SingleVariableDeclaration@@Iterator<ProcessorExchangePair> it @AT@ 6596 @LENGTH@ 31
---------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<ProcessorExchangePair> @AT@ 6596 @LENGTH@ 8
---------INS SimpleType@@ProcessorExchangePair @TO@ ParameterizedType@@Iterator<ProcessorExchangePair> @AT@ 6605 @LENGTH@ 21
------INS SimpleName@@it @TO@ SingleVariableDeclaration@@Iterator<ProcessorExchangePair> it @AT@ 6628 @LENGTH@ 2
---UPD IfStatement@@if (allPairs.hasNext()) {  exchange.setProperty(Exchange.SPLIT_COMPLETE,Boolean.FALSE);} else {  exchange.setProperty(Exchange.SPLIT_COMPLETE,Boolean.TRUE);} @TO@ if (it.hasNext()) {  exchange.setProperty(Exchange.SPLIT_COMPLETE,Boolean.FALSE);} else {  exchange.setProperty(Exchange.SPLIT_COMPLETE,Boolean.TRUE);} @AT@ 6773 @LENGTH@ 199
------UPD MethodInvocation@@allPairs.hasNext() @TO@ it.hasNext() @AT@ 6777 @LENGTH@ 18
---------UPD SimpleName@@Name:allPairs @TO@ Name:it @AT@ 6777 @LENGTH@ 8


UPD MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @TO@ protected, void, MethodName:setUp, Exception,  @AT@ 1290 @LENGTH@ 94
---UPD SimpleName@@MethodName:tearDown @TO@ MethodName:setUp @AT@ 1305 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:listener=new CollectionFilesystemListener(false) @TO@ MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @AT@ 1340 @LENGTH@ 51
------INS Assignment@@listener=new CollectionFilesystemListener(false) @TO@ ExpressionStatement@@Assignment:listener=new CollectionFilesystemListener(false) @AT@ 1340 @LENGTH@ 50
---------INS SimpleName@@listener @TO@ Assignment@@listener=new CollectionFilesystemListener(false) @AT@ 1340 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@listener=new CollectionFilesystemListener(false) @AT@ 1348 @LENGTH@ 1
---------INS ClassInstanceCreation@@CollectionFilesystemListener[false] @TO@ Assignment@@listener=new CollectionFilesystemListener(false) @AT@ 1351 @LENGTH@ 39
------------INS New@@new @TO@ ClassInstanceCreation@@CollectionFilesystemListener[false] @AT@ 1351 @LENGTH@ 3
------------INS SimpleType@@CollectionFilesystemListener @TO@ ClassInstanceCreation@@CollectionFilesystemListener[false] @AT@ 1355 @LENGTH@ 28
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@CollectionFilesystemListener[false] @AT@ 1384 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:FileUtils.deleteDirectory(testDir) @TO@ SuperMethodInvocation:super.setUp() @AT@ 1343 @LENGTH@ 35
------DEL MethodInvocation@@FileUtils.deleteDirectory(testDir) @AT@ 1343 @LENGTH@ 34
---------DEL SimpleName@@Name:FileUtils @AT@ 1343 @LENGTH@ 9
---------DEL SimpleName@@MethodName:deleteDirectory:[testDir] @AT@ 1353 @LENGTH@ 24
------------DEL SimpleName@@testDir @AT@ 1369 @LENGTH@ 7
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@MethodInvocation:FileUtils.deleteDirectory(testDir) @AT@ 1400 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 1406 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertNotSame("Thead is should not be same",id,Thread.currentThread().getId()) @TO@ MethodInvocation:assertNotSame("Thread is should not be same",id,Thread.currentThread().getId()) @AT@ 2283 @LENGTH@ 81
---UPD MethodInvocation@@assertNotSame("Thead is should not be same",id,Thread.currentThread().getId()) @TO@ assertNotSame("Thread is should not be same",id,Thread.currentThread().getId()) @AT@ 2283 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertNotSame:["Thead is should not be same", id, Thread.currentThread().getId()] @TO@ MethodName:assertNotSame:["Thread is should not be same", id, Thread.currentThread().getId()] @AT@ 2283 @LENGTH@ 80
---------UPD StringLiteral@@"Thead is should not be same" @TO@ "Thread is should not be same" @AT@ 2297 @LENGTH@ 29


UPD VariableDeclarationStatement@@Comparator comp=(Comparator)in.readObject(); @TO@ @SuppressWarnings("unchecked") Comparator<? super E> comp=(Comparator<? super E>)in.readObject(); @AT@ 4565 @LENGTH@ 47
---DEL SimpleType@@Comparator @AT@ 4565 @LENGTH@ 10
---UPD VariableDeclarationFragment@@comp=(Comparator)in.readObject() @TO@ comp=(Comparator<? super E>)in.readObject() @AT@ 4576 @LENGTH@ 35
------UPD CastExpression@@(Comparator)in.readObject() @TO@ (Comparator<? super E>)in.readObject() @AT@ 4583 @LENGTH@ 28
---------DEL SimpleType@@Comparator @AT@ 4584 @LENGTH@ 10
---------INS ParameterizedType@@Comparator<? super E> @TO@ CastExpression@@(Comparator)in.readObject() @AT@ 4656 @LENGTH@ 21
------------INS SimpleType@@Comparator @TO@ ParameterizedType@@Comparator<? super E> @AT@ 4656 @LENGTH@ 10
------------INS WildcardType@@? @TO@ ParameterizedType@@Comparator<? super E> @AT@ 4667 @LENGTH@ 9
---INS ParameterizedType@@Comparator<? super E> @TO@ VariableDeclarationStatement@@Comparator comp=(Comparator)in.readObject(); @AT@ 4626 @LENGTH@ 21
------INS SimpleType@@Comparator @TO@ ParameterizedType@@Comparator<? super E> @AT@ 4626 @LENGTH@ 10
------INS WildcardType@@? @TO@ ParameterizedType@@Comparator<? super E> @AT@ 4637 @LENGTH@ 9


UPD VariableDeclarationStatement@@Map.Entry other=(Map.Entry)obj; @TO@ Map.Entry<?,?> other=(Map.Entry<?,?>)obj; @AT@ 2597 @LENGTH@ 34
---INS ParameterizedType@@Map.Entry<?,?> @TO@ VariableDeclarationStatement@@Map.Entry other=(Map.Entry)obj; @AT@ 2562 @LENGTH@ 15
------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<?,?> @AT@ 2562 @LENGTH@ 9
------INS WildcardType@@? @TO@ ParameterizedType@@Map.Entry<?,?> @AT@ 2572 @LENGTH@ 1
------INS WildcardType@@? @TO@ ParameterizedType@@Map.Entry<?,?> @AT@ 2575 @LENGTH@ 1
---DEL SimpleType@@Map.Entry @AT@ 2597 @LENGTH@ 9
---UPD VariableDeclarationFragment@@other=(Map.Entry)obj @TO@ other=(Map.Entry<?,?>)obj @AT@ 2607 @LENGTH@ 23
------UPD CastExpression@@(Map.Entry)obj @TO@ (Map.Entry<?,?>)obj @AT@ 2615 @LENGTH@ 15
---------INS ParameterizedType@@Map.Entry<?,?> @TO@ CastExpression@@(Map.Entry)obj @AT@ 2587 @LENGTH@ 15
------------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<?,?> @AT@ 2587 @LENGTH@ 9
------------INS WildcardType@@? @TO@ ParameterizedType@@Map.Entry<?,?> @AT@ 2597 @LENGTH@ 1
------------INS WildcardType@@? @TO@ ParameterizedType@@Map.Entry<?,?> @AT@ 2600 @LENGTH@ 1
---------DEL SimpleType@@Map.Entry @AT@ 2616 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:from("direct:hello").to("jdbc:testdb?readSize=100?useJDBC4ColumnNameAndLabelSemantics=false") @TO@ MethodInvocation:from("direct:hello").to("jdbc:testdb?readSize=100&useJDBC4ColumnNameAndLabelSemantics=false") @AT@ 1193 @LENGTH@ 94
---UPD MethodInvocation@@from("direct:hello").to("jdbc:testdb?readSize=100?useJDBC4ColumnNameAndLabelSemantics=false") @TO@ from("direct:hello").to("jdbc:testdb?readSize=100&useJDBC4ColumnNameAndLabelSemantics=false") @AT@ 1193 @LENGTH@ 93
------UPD SimpleName@@MethodName:to:["jdbc:testdb?readSize=100?useJDBC4ColumnNameAndLabelSemantics=false"] @TO@ MethodName:to:["jdbc:testdb?readSize=100&useJDBC4ColumnNameAndLabelSemantics=false"] @AT@ 1214 @LENGTH@ 72
---------UPD StringLiteral@@"jdbc:testdb?readSize=100?useJDBC4ColumnNameAndLabelSemantics=false" @TO@ "jdbc:testdb?readSize=100&useJDBC4ColumnNameAndLabelSemantics=false" @AT@ 1217 @LENGTH@ 68


UPD VariableDeclarationStatement@@List<Interceptor> outInterceptors=new ArrayList<Interceptor>(); @TO@ List<Interceptor<? extends Message>> outInterceptors=new ArrayList<Interceptor<? extends Message>>(); @AT@ 2100 @LENGTH@ 65
---UPD ParameterizedType@@List<Interceptor> @TO@ List<Interceptor<? extends Message>> @AT@ 2100 @LENGTH@ 17
------INS ParameterizedType@@Interceptor<? extends Message> @TO@ ParameterizedType@@List<Interceptor> @AT@ 2145 @LENGTH@ 30
---------MOV SimpleType@@Interceptor @TO@ ParameterizedType@@Interceptor<? extends Message> @AT@ 2105 @LENGTH@ 11
---------INS WildcardType@@? @TO@ ParameterizedType@@Interceptor<? extends Message> @AT@ 2157 @LENGTH@ 17
---UPD VariableDeclarationFragment@@outInterceptors=new ArrayList<Interceptor>() @TO@ outInterceptors=new ArrayList<Interceptor<? extends Message>>() @AT@ 2118 @LENGTH@ 46
------UPD ClassInstanceCreation@@ArrayList<Interceptor>[] @TO@ ArrayList<Interceptor<? extends Message>>[] @AT@ 2136 @LENGTH@ 28
---------UPD ParameterizedType@@ArrayList<Interceptor> @TO@ ArrayList<Interceptor<? extends Message>> @AT@ 2140 @LENGTH@ 22
------------INS ParameterizedType@@Interceptor<? extends Message> @TO@ ParameterizedType@@ArrayList<Interceptor> @AT@ 2209 @LENGTH@ 30
---------------MOV SimpleType@@Interceptor @TO@ ParameterizedType@@Interceptor<? extends Message> @AT@ 2150 @LENGTH@ 11
---------------INS WildcardType@@? @TO@ ParameterizedType@@Interceptor<? extends Message> @AT@ 2221 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:xxxTestPollEnrich, Exception,  @TO@ public, void, MethodName:testPollEnrich, Exception,  @AT@ 1335 @LENGTH@ 619
---UPD SimpleName@@MethodName:xxxTestPollEnrich @TO@ MethodName:testPollEnrich @AT@ 1347 @LENGTH@ 17
---UPD ExpressionStatement@@MethodInvocation:mock.expectedFileExists("target/enrich/.done/AAA.fin") @TO@ MethodInvocation:mock.expectedFileExists("target/enrich/.done/AAA.fin","Start") @AT@ 1576 @LENGTH@ 55
------UPD MethodInvocation@@mock.expectedFileExists("target/enrich/.done/AAA.fin") @TO@ mock.expectedFileExists("target/enrich/.done/AAA.fin","Start") @AT@ 1576 @LENGTH@ 54
---------UPD SimpleName@@MethodName:expectedFileExists:["target/enrich/.done/AAA.fin"] @TO@ MethodName:expectedFileExists:["target/enrich/.done/AAA.fin", "Start"] @AT@ 1581 @LENGTH@ 49
------------INS StringLiteral@@"Start" @TO@ SimpleName@@MethodName:expectedFileExists:["target/enrich/.done/AAA.fin"] @AT@ 1603 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:mock.expectedFileExists("target/enrichdata/.done/AAA.dat") @TO@ MethodInvocation:mock.expectedFileExists("target/enrichdata/.done/AAA.dat","Big file") @AT@ 1640 @LENGTH@ 59
------UPD MethodInvocation@@mock.expectedFileExists("target/enrichdata/.done/AAA.dat") @TO@ mock.expectedFileExists("target/enrichdata/.done/AAA.dat","Big file") @AT@ 1640 @LENGTH@ 58
---------UPD SimpleName@@MethodName:expectedFileExists:["target/enrichdata/.done/AAA.dat"] @TO@ MethodName:expectedFileExists:["target/enrichdata/.done/AAA.dat", "Big file"] @AT@ 1645 @LENGTH@ 53
------------INS StringLiteral@@"Big file" @TO@ SimpleName@@MethodName:expectedFileExists:["target/enrichdata/.done/AAA.dat"] @AT@ 1680 @LENGTH@ 10


UPD MethodDeclaration@@public, boolean, MethodName:canExecute, TradeRequest tradeRequest, List errors,  @TO@ public, boolean, MethodName:canExecute, TradeRequest tradeRequest, List<?> errors,  @AT@ 1051 @LENGTH@ 85
---UPD SingleVariableDeclaration@@List errors @TO@ List<?> errors @AT@ 1104 @LENGTH@ 11
------INS ParameterizedType@@List<?> @TO@ SingleVariableDeclaration@@List errors @AT@ 1104 @LENGTH@ 7
---------INS SimpleType@@List @TO@ ParameterizedType@@List<?> @AT@ 1104 @LENGTH@ 4
---------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 1109 @LENGTH@ 1
------DEL SimpleType@@List @AT@ 1104 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(4)) @TO@ MethodInvocation:errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(4).redeliveryDelay(25)) @AT@ 2923 @LENGTH@ 68
---UPD MethodInvocation@@errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(4)) @TO@ errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(4).redeliveryDelay(25)) @AT@ 2923 @LENGTH@ 67
------UPD SimpleName@@MethodName:errorHandler:[deadLetterChannel("mock:dead").maximumRedeliveries(4)] @TO@ MethodName:errorHandler:[deadLetterChannel("mock:dead").maximumRedeliveries(4).redeliveryDelay(25)] @AT@ 2923 @LENGTH@ 67
---------UPD MethodInvocation@@deadLetterChannel("mock:dead").maximumRedeliveries(4) @TO@ deadLetterChannel("mock:dead").maximumRedeliveries(4).redeliveryDelay(25) @AT@ 2936 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:maximumRedeliveries:[4] @TO@ MethodInvocation@@deadLetterChannel("mock:dead").maximumRedeliveries(4) @AT@ 2861 @LENGTH@ 53
---------------INS NumberLiteral@@4 @TO@ MethodInvocation@@MethodName:maximumRedeliveries:[4] @AT@ 2912 @LENGTH@ 1
------------UPD SimpleName@@MethodName:maximumRedeliveries:[4] @TO@ MethodName:redeliveryDelay:[25] @AT@ 2967 @LENGTH@ 22
---------------UPD NumberLiteral@@4 @TO@ 25 @AT@ 2987 @LENGTH@ 1


INS MethodDeclaration@@ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @TO@ TypeDeclaration@@[public]ExecutorServiceStrategy, [ShutdownableService] @AT@ 10082 @LENGTH@ 95
---INS SimpleType@@ExecutorService @TO@ MethodDeclaration@@ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 10066 @LENGTH@ 15
---INS SimpleName@@MethodName:newThreadPool @TO@ MethodDeclaration@@ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 10082 @LENGTH@ 13
---INS SingleVariableDeclaration@@Object source @TO@ MethodDeclaration@@ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 10096 @LENGTH@ 13
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object source @AT@ 10096 @LENGTH@ 6
------INS SimpleName@@source @TO@ SingleVariableDeclaration@@Object source @AT@ 10103 @LENGTH@ 6
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 10111 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 10111 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 10118 @LENGTH@ 4
---INS SingleVariableDeclaration@@int corePoolSize @TO@ MethodDeclaration@@ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 10124 @LENGTH@ 16
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int corePoolSize @AT@ 10124 @LENGTH@ 3
------INS SimpleName@@corePoolSize @TO@ SingleVariableDeclaration@@int corePoolSize @AT@ 10128 @LENGTH@ 12
---INS SingleVariableDeclaration@@int maxPoolSize @TO@ MethodDeclaration@@ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 10142 @LENGTH@ 15
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int maxPoolSize @AT@ 10142 @LENGTH@ 3
------INS SimpleName@@maxPoolSize @TO@ SingleVariableDeclaration@@int maxPoolSize @AT@ 10146 @LENGTH@ 11
---INS SingleVariableDeclaration@@int maxQueueSize @TO@ MethodDeclaration@@ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, int maxQueueSize,  @AT@ 10159 @LENGTH@ 16
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int maxQueueSize @AT@ 10159 @LENGTH@ 3
------INS SimpleName@@maxQueueSize @TO@ SingleVariableDeclaration@@int maxQueueSize @AT@ 10163 @LENGTH@ 12


UPD IfStatement@@if (queryString == null) {  queryString=parameterName + "=" + parameterValue;} else {  queryString+="&" + parameterName + "="+ parameterValue;} @TO@ if (queryString == null) {  queryString=parameterName + "=" + encode(parameterValue);} else {  queryString+="&" + parameterName + "="+ encode(parameterValue);} @AT@ 962 @LENGTH@ 158
---UPD Block@@ThenBody:{  queryString=parameterName + "=" + parameterValue;} @TO@ ThenBody:{  queryString=parameterName + "=" + encode(parameterValue);} @AT@ 987 @LENGTH@ 60
------UPD ExpressionStatement@@Assignment:queryString=parameterName + "=" + parameterValue @TO@ Assignment:queryString=parameterName + "=" + encode(parameterValue) @AT@ 992 @LENGTH@ 51
---------UPD Assignment@@queryString=parameterName + "=" + parameterValue @TO@ queryString=parameterName + "=" + encode(parameterValue) @AT@ 992 @LENGTH@ 50
------------UPD InfixExpression@@parameterName + "=" + parameterValue @TO@ parameterName + "=" + encode(parameterValue) @AT@ 1006 @LENGTH@ 36
---------------DEL SimpleName@@parameterValue @AT@ 1028 @LENGTH@ 14
---------------INS MethodInvocation@@encode(parameterValue) @TO@ InfixExpression@@parameterName + "=" + parameterValue @AT@ 1100 @LENGTH@ 22
------------------INS SimpleName@@MethodName:encode:[parameterValue] @TO@ MethodInvocation@@encode(parameterValue) @AT@ 1100 @LENGTH@ 22
---------------------INS SimpleName@@parameterValue @TO@ SimpleName@@MethodName:encode:[parameterValue] @AT@ 1107 @LENGTH@ 14
---UPD Block@@ElseBody:{  queryString+="&" + parameterName + "="+ parameterValue;} @TO@ ElseBody:{  queryString+="&" + parameterName + "="+ encode(parameterValue);} @AT@ 1053 @LENGTH@ 67
------UPD ExpressionStatement@@Assignment:queryString+="&" + parameterName + "="+ parameterValue @TO@ Assignment:queryString+="&" + parameterName + "="+ encode(parameterValue) @AT@ 1058 @LENGTH@ 58
---------UPD Assignment@@queryString+="&" + parameterName + "="+ parameterValue @TO@ queryString+="&" + parameterName + "="+ encode(parameterValue) @AT@ 1058 @LENGTH@ 57
------------UPD InfixExpression@@"&" + parameterName + "="+ parameterValue @TO@ "&" + parameterName + "="+ encode(parameterValue) @AT@ 1073 @LENGTH@ 42
---------------DEL SimpleName@@parameterValue @AT@ 1101 @LENGTH@ 14
---------------INS MethodInvocation@@encode(parameterValue) @TO@ InfixExpression@@"&" + parameterName + "="+ parameterValue @AT@ 1181 @LENGTH@ 22
------------------INS SimpleName@@MethodName:encode:[parameterValue] @TO@ MethodInvocation@@encode(parameterValue) @AT@ 1181 @LENGTH@ 22
---------------------INS SimpleName@@parameterValue @TO@ SimpleName@@MethodName:encode:[parameterValue] @AT@ 1188 @LENGTH@ 14


UPD VariableDeclarationStatement@@JavaType javaType=new JavaType(fullPath); @TO@ JavaType javaType; @AT@ 1883 @LENGTH@ 43
---UPD VariableDeclarationFragment@@javaType=new JavaType(fullPath) @TO@ javaType @AT@ 1892 @LENGTH@ 33
------DEL ClassInstanceCreation@@JavaType[fullPath] @AT@ 1903 @LENGTH@ 22
---------DEL New@@new @AT@ 1903 @LENGTH@ 3
---------DEL SimpleType@@JavaType @AT@ 1907 @LENGTH@ 8
---------DEL SimpleName@@fullPath @AT@ 1916 @LENGTH@ 8


INS MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @TO@ TypeDeclaration@@[public, final]ThreadFactoryExecutorElement, AbstractExecutorElement<ThreadFactoryExecutorElement> @AT@ 6027 @LENGTH@ 94
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 6027 @LENGTH@ 9
---INS SimpleType@@Element @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 6037 @LENGTH@ 7
---INS SimpleName@@MethodName:getStandardElement @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 6045 @LENGTH@ 18
---INS ReturnStatement@@QualifiedName:Element.THREAD_FACTORY_EXECUTOR @TO@ MethodDeclaration@@protected, Element, MethodName:getStandardElement,  @AT@ 6076 @LENGTH@ 39
------INS QualifiedName@@Element.THREAD_FACTORY_EXECUTOR @TO@ ReturnStatement@@QualifiedName:Element.THREAD_FACTORY_EXECUTOR @AT@ 6083 @LENGTH@ 31
---------INS SimpleName@@Element @TO@ QualifiedName@@Element.THREAD_FACTORY_EXECUTOR @AT@ 6083 @LENGTH@ 7
---------INS SimpleName@@THREAD_FACTORY_EXECUTOR @TO@ QualifiedName@@Element.THREAD_FACTORY_EXECUTOR @AT@ 6091 @LENGTH@ 23


UPD TypeDeclaration@@[public]AMQPRouteTest, CamelTestSupport @TO@ [@Ignore("AMQP testing is a bit unstable"), public]AMQPRouteTest, CamelTestSupport @AT@ 1389 @LENGTH@ 3165
---INS SingleMemberAnnotation@@@Ignore("AMQP testing is a bit unstable") @TO@ TypeDeclaration@@[public]AMQPRouteTest, CamelTestSupport @AT@ 1389 @LENGTH@ 41


UPD VariableDeclarationStatement@@final BatchServiceBuilder<Void> builder=batchBuilder.addService(ServiceName.JBOSS.append("as","server"),Service.NULL); @TO@ final BatchServiceBuilder<Void> builder=batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL); @AT@ 6218 @LENGTH@ 122
---UPD VariableDeclarationFragment@@builder=batchBuilder.addService(ServiceName.JBOSS.append("as","server"),Service.NULL) @TO@ AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server") @AT@ 6250 @LENGTH@ 89
---INS VariableDeclarationFragment@@builder=batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL) @TO@ VariableDeclarationStatement@@final BatchServiceBuilder<Void> builder=batchBuilder.addService(ServiceName.JBOSS.append("as","server"),Service.NULL); @AT@ 6407 @LENGTH@ 71
------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL) @AT@ 6407 @LENGTH@ 7
------INS MethodInvocation@@batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL) @TO@ VariableDeclarationFragment@@builder=batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL) @AT@ 6417 @LENGTH@ 61
---------INS SimpleName@@Name:batchBuilder @TO@ MethodInvocation@@batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL) @AT@ 6417 @LENGTH@ 12
---------INS SimpleName@@MethodName:addService:[AS_SERVER_SERVICE_NAME, Service.NULL] @TO@ MethodInvocation@@batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL) @AT@ 6430 @LENGTH@ 48
------------INS SimpleName@@AS_SERVER_SERVICE_NAME @TO@ SimpleName@@MethodName:addService:[AS_SERVER_SERVICE_NAME, Service.NULL] @AT@ 6441 @LENGTH@ 22
------------INS QualifiedName@@Service.NULL @TO@ SimpleName@@MethodName:addService:[AS_SERVER_SERVICE_NAME, Service.NULL] @AT@ 6465 @LENGTH@ 12
---------------INS SimpleName@@Service @TO@ QualifiedName@@Service.NULL @AT@ 6465 @LENGTH@ 7
---------------INS SimpleName@@NULL @TO@ QualifiedName@@Service.NULL @AT@ 6473 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertNotSame("Thead is should not be same",id,Thread.currentThread().getId()) @TO@ MethodInvocation:assertNotSame("Thread is should not be same",id,Thread.currentThread().getId()) @AT@ 2275 @LENGTH@ 81
---UPD MethodInvocation@@assertNotSame("Thead is should not be same",id,Thread.currentThread().getId()) @TO@ assertNotSame("Thread is should not be same",id,Thread.currentThread().getId()) @AT@ 2275 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertNotSame:["Thead is should not be same", id, Thread.currentThread().getId()] @TO@ MethodName:assertNotSame:["Thread is should not be same", id, Thread.currentThread().getId()] @AT@ 2275 @LENGTH@ 80
---------UPD StringLiteral@@"Thead is should not be same" @TO@ "Thread is should not be same" @AT@ 2289 @LENGTH@ 29


UPD MethodDeclaration@@List<UpdateResultHandlerResponse<?>>, MethodName:applyUpdates, List<AbstractServerModelUpdate<?>> updates, boolean rollbackOnFailure, boolean applyToRuntime,  @TO@ List<UpdateResultHandlerResponse<?>>, MethodName:applyUpdates, List<AbstractServerModelUpdate<?>> updates, boolean rollbackOnFailure, boolean modelOnly,  @AT@ 2601 @LENGTH@ 120
---UPD SingleVariableDeclaration@@boolean applyToRuntime @TO@ boolean modelOnly @AT@ 2697 @LENGTH@ 22
------UPD SimpleName@@applyToRuntime @TO@ modelOnly @AT@ 2705 @LENGTH@ 14


UPD VariableDeclarationStatement@@CaseInsensitiveMap map=new CaseInsensitiveMap(); @TO@ CaseInsensitiveMap<String,String> map=new CaseInsensitiveMap<String,String>(); @AT@ 5121 @LENGTH@ 50
---INS ParameterizedType@@CaseInsensitiveMap<String,String> @TO@ VariableDeclarationStatement@@CaseInsensitiveMap map=new CaseInsensitiveMap(); @AT@ 5121 @LENGTH@ 34
------INS SimpleType@@CaseInsensitiveMap @TO@ ParameterizedType@@CaseInsensitiveMap<String,String> @AT@ 5121 @LENGTH@ 18
------INS SimpleType@@String @TO@ ParameterizedType@@CaseInsensitiveMap<String,String> @AT@ 5140 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@CaseInsensitiveMap<String,String> @AT@ 5148 @LENGTH@ 6
---DEL SimpleType@@CaseInsensitiveMap @AT@ 5121 @LENGTH@ 18
---UPD VariableDeclarationFragment@@map=new CaseInsensitiveMap() @TO@ map=new CaseInsensitiveMap<String,String>() @AT@ 5140 @LENGTH@ 30
------UPD ClassInstanceCreation@@CaseInsensitiveMap[] @TO@ CaseInsensitiveMap<String,String>[] @AT@ 5146 @LENGTH@ 24
---------DEL SimpleType@@CaseInsensitiveMap @AT@ 5150 @LENGTH@ 18
---------INS ParameterizedType@@CaseInsensitiveMap<String,String> @TO@ ClassInstanceCreation@@CaseInsensitiveMap[] @AT@ 5166 @LENGTH@ 34
------------INS SimpleType@@CaseInsensitiveMap @TO@ ParameterizedType@@CaseInsensitiveMap<String,String> @AT@ 5166 @LENGTH@ 18
------------INS SimpleType@@String @TO@ ParameterizedType@@CaseInsensitiveMap<String,String> @AT@ 5185 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@CaseInsensitiveMap<String,String> @AT@ 5193 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertNotSame("Should use a different thread when doing async routing",thread1,thread2) @TO@ MethodInvocation:assertEquals("Should use a same thread when doing transacted async routing",thread1,thread2) @AT@ 2091 @LENGTH@ 90
---UPD MethodInvocation@@assertNotSame("Should use a different thread when doing async routing",thread1,thread2) @TO@ assertEquals("Should use a same thread when doing transacted async routing",thread1,thread2) @AT@ 2091 @LENGTH@ 89
------UPD SimpleName@@MethodName:assertNotSame:["Should use a different thread when doing async routing", thread1, thread2] @TO@ MethodName:assertEquals:["Should use a same thread when doing transacted async routing", thread1, thread2] @AT@ 2091 @LENGTH@ 89
---------UPD StringLiteral@@"Should use a different thread when doing async routing" @TO@ "Should use a same thread when doing transacted async routing" @AT@ 2105 @LENGTH@ 56


INS ExpressionStatement@@MethodInvocation:streamWriter.writeAttribute(Attribute.THREAD_POOL.getLocalName(),threadPoolName) @TO@ MethodDeclaration@@public, void, MethodName:writeContent, final XMLExtendedStreamWriter streamWriter, XMLStreamException,  @AT@ 5944 @LENGTH@ 82
---INS MethodInvocation@@streamWriter.writeAttribute(Attribute.THREAD_POOL.getLocalName(),threadPoolName) @TO@ ExpressionStatement@@MethodInvocation:streamWriter.writeAttribute(Attribute.THREAD_POOL.getLocalName(),threadPoolName) @AT@ 5944 @LENGTH@ 81
------INS SimpleName@@Name:streamWriter @TO@ MethodInvocation@@streamWriter.writeAttribute(Attribute.THREAD_POOL.getLocalName(),threadPoolName) @AT@ 5944 @LENGTH@ 12
------INS SimpleName@@MethodName:writeAttribute:[Attribute.THREAD_POOL.getLocalName(), threadPoolName] @TO@ MethodInvocation@@streamWriter.writeAttribute(Attribute.THREAD_POOL.getLocalName(),threadPoolName) @AT@ 5957 @LENGTH@ 68
---------INS MethodInvocation@@Attribute.THREAD_POOL.getLocalName() @TO@ SimpleName@@MethodName:writeAttribute:[Attribute.THREAD_POOL.getLocalName(), threadPoolName] @AT@ 5972 @LENGTH@ 36
------------INS QualifiedName@@Name:Attribute.THREAD_POOL @TO@ MethodInvocation@@Attribute.THREAD_POOL.getLocalName() @AT@ 5972 @LENGTH@ 21
------------INS SimpleName@@MethodName:getLocalName:[] @TO@ MethodInvocation@@Attribute.THREAD_POOL.getLocalName() @AT@ 5994 @LENGTH@ 14
---------INS SimpleName@@threadPoolName @TO@ SimpleName@@MethodName:writeAttribute:[Attribute.THREAD_POOL.getLocalName(), threadPoolName] @AT@ 6010 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build(),firstRule) @TO@ MethodDeclaration@@private, void, MethodName:updateUrlRewriteXml,  @AT@ 13570 @LENGTH@ 330
---INS MethodInvocation@@root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build(),firstRule) @TO@ ExpressionStatement@@MethodInvocation:root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build(),firstRule) @AT@ 13570 @LENGTH@ 329
------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build(),firstRule) @AT@ 13570 @LENGTH@ 4
------INS SimpleName@@MethodName:insertBefore:[new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build(), firstRule] @TO@ MethodInvocation@@root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build(),firstRule) @AT@ 13575 @LENGTH@ 324
---------INS MethodInvocation@@new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build() @TO@ SimpleName@@MethodName:insertBefore:[new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build(), firstRule] @AT@ 13588 @LENGTH@ 299
------------INS MethodInvocation@@MethodName:addChild:[new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()] @TO@ MethodInvocation@@new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build() @AT@ 13588 @LENGTH@ 287
---------------INS MethodInvocation@@new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build() @TO@ MethodInvocation@@MethodName:addChild:[new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()] @AT@ 13754 @LENGTH@ 120
------------------INS MethodInvocation@@MethodName:setText:["/applicationMobileScaffold/$1"] @TO@ MethodInvocation@@new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build() @AT@ 13754 @LENGTH@ 112
---------------------INS StringLiteral@@"/applicationMobileScaffold/$1" @TO@ MethodInvocation@@MethodName:setText:["/applicationMobileScaffold/$1"] @AT@ 13834 @LENGTH@ 31
------------------INS MethodInvocation@@MethodName:addAttribute:["last", "true"] @TO@ MethodInvocation@@new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build() @AT@ 13754 @LENGTH@ 71
---------------------INS StringLiteral@@"last" @TO@ MethodInvocation@@MethodName:addAttribute:["last", "true"] @AT@ 13810 @LENGTH@ 6
---------------------INS StringLiteral@@"true" @TO@ MethodInvocation@@MethodName:addAttribute:["last", "true"] @AT@ 13818 @LENGTH@ 6
------------------INS ClassInstanceCreation@@XmlElementBuilder["to", urlRewriteDoc] @TO@ MethodInvocation@@new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build() @AT@ 13754 @LENGTH@ 42
---------------------INS New@@new @TO@ ClassInstanceCreation@@XmlElementBuilder["to", urlRewriteDoc] @AT@ 13754 @LENGTH@ 3
---------------------INS SimpleType@@XmlElementBuilder @TO@ ClassInstanceCreation@@XmlElementBuilder["to", urlRewriteDoc] @AT@ 13758 @LENGTH@ 17
---------------------INS StringLiteral@@"to" @TO@ ClassInstanceCreation@@XmlElementBuilder["to", urlRewriteDoc] @AT@ 13776 @LENGTH@ 4
---------------------INS SimpleName@@urlRewriteDoc @TO@ ClassInstanceCreation@@XmlElementBuilder["to", urlRewriteDoc] @AT@ 13782 @LENGTH@ 13
------------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build() @AT@ 13867 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:addChild:[new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()] @TO@ MethodInvocation@@new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build() @AT@ 13588 @LENGTH@ 152
---------------INS MethodInvocation@@new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build() @TO@ MethodInvocation@@MethodName:addChild:[new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()] @AT@ 13646 @LENGTH@ 93
------------------INS MethodInvocation@@MethodName:setText:["/applicationMobileScaffold/**"] @TO@ MethodInvocation@@new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build() @AT@ 13646 @LENGTH@ 85
---------------------INS StringLiteral@@"/applicationMobileScaffold/**" @TO@ MethodInvocation@@MethodName:setText:["/applicationMobileScaffold/**"] @AT@ 13699 @LENGTH@ 31
------------------INS ClassInstanceCreation@@XmlElementBuilder["from", urlRewriteDoc] @TO@ MethodInvocation@@new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build() @AT@ 13646 @LENGTH@ 44
---------------------INS New@@new @TO@ ClassInstanceCreation@@XmlElementBuilder["from", urlRewriteDoc] @AT@ 13646 @LENGTH@ 3
---------------------INS SimpleType@@XmlElementBuilder @TO@ ClassInstanceCreation@@XmlElementBuilder["from", urlRewriteDoc] @AT@ 13650 @LENGTH@ 17
---------------------INS StringLiteral@@"from" @TO@ ClassInstanceCreation@@XmlElementBuilder["from", urlRewriteDoc] @AT@ 13668 @LENGTH@ 6
---------------------INS SimpleName@@urlRewriteDoc @TO@ ClassInstanceCreation@@XmlElementBuilder["from", urlRewriteDoc] @AT@ 13676 @LENGTH@ 13
------------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build() @AT@ 13732 @LENGTH@ 7
------------INS ClassInstanceCreation@@XmlElementBuilder["rule", urlRewriteDoc] @TO@ MethodInvocation@@new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build() @AT@ 13588 @LENGTH@ 44
---------------INS New@@new @TO@ ClassInstanceCreation@@XmlElementBuilder["rule", urlRewriteDoc] @AT@ 13588 @LENGTH@ 3
---------------INS SimpleType@@XmlElementBuilder @TO@ ClassInstanceCreation@@XmlElementBuilder["rule", urlRewriteDoc] @AT@ 13592 @LENGTH@ 17
---------------INS StringLiteral@@"rule" @TO@ ClassInstanceCreation@@XmlElementBuilder["rule", urlRewriteDoc] @AT@ 13610 @LENGTH@ 6
---------------INS SimpleName@@urlRewriteDoc @TO@ ClassInstanceCreation@@XmlElementBuilder["rule", urlRewriteDoc] @AT@ 13618 @LENGTH@ 13
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build() @AT@ 13880 @LENGTH@ 7
---------INS SimpleName@@firstRule @TO@ SimpleName@@MethodName:insertBefore:[new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/applicationMobileScaffold/**").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/applicationMobileScaffold/$1").build()).build(), firstRule] @AT@ 13889 @LENGTH@ 9


UPD VariableDeclarationStatement@@Map.Entry<K,V>[] array=(Map.Entry<K,V>[])entrySet.toArray(new Map.Entry[0]); @TO@ Map.Entry<K,V>[] array=entrySet.toArray(new Map.Entry[0]); @AT@ 4524 @LENGTH@ 81
---DEL ArrayType@@Map.Entry<K,V>[] @AT@ 4524 @LENGTH@ 17
------DEL ParameterizedType@@Map.Entry<K,V> @AT@ 4524 @LENGTH@ 15
---------DEL SimpleType@@Map.Entry @AT@ 4524 @LENGTH@ 9
---------DEL SimpleType@@K @AT@ 4534 @LENGTH@ 1
---------DEL SimpleType@@V @AT@ 4537 @LENGTH@ 1
---UPD VariableDeclarationFragment@@array=(Map.Entry<K,V>[])entrySet.toArray(new Map.Entry[0]) @TO@ array=entrySet.toArray(new Map.Entry[0]) @AT@ 4542 @LENGTH@ 62
------DEL CastExpression@@(Map.Entry<K,V>[])entrySet.toArray(new Map.Entry[0]) @AT@ 4550 @LENGTH@ 54
------MOV MethodInvocation@@entrySet.toArray(new Map.Entry[0]) @TO@ VariableDeclarationFragment@@array=(Map.Entry<K,V>[])entrySet.toArray(new Map.Entry[0]) @AT@ 4570 @LENGTH@ 34
---MOV ArrayType@@Map.Entry<K,V>[] @TO@ VariableDeclarationStatement@@Map.Entry<K,V>[] array=(Map.Entry<K,V>[])entrySet.toArray(new Map.Entry[0]); @AT@ 4551 @LENGTH@ 17


UPD VariableDeclarationStatement@@SpringCamelContext context=applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @TO@ SpringCamelContext context=(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @AT@ 3737 @LENGTH@ 116
---UPD VariableDeclarationFragment@@context=applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ context=(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 3756 @LENGTH@ 96
------INS CastExpression@@(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ VariableDeclarationFragment@@context=applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 3818 @LENGTH@ 107
---------MOV MethodInvocation@@applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ CastExpression@@(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 3766 @LENGTH@ 86
---------INS SimpleType@@SpringCamelContext @TO@ CastExpression@@(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 3819 @LENGTH@ 18


UPD ReturnStatement@@ConditionalExpression:file != null ? file : secondary.getDeploymentRoot(hash) @TO@ ConditionalExpression:(file != null && file.exists()) ? file : secondary.getDeploymentRoot(hash) @AT@ 2390 @LENGTH@ 63
---UPD ConditionalExpression@@file != null ? file : secondary.getDeploymentRoot(hash) @TO@ (file != null && file.exists()) ? file : secondary.getDeploymentRoot(hash) @AT@ 2397 @LENGTH@ 55
------INS ParenthesizedExpression@@(file != null && file.exists()) @TO@ ConditionalExpression@@file != null ? file : secondary.getDeploymentRoot(hash) @AT@ 2397 @LENGTH@ 31
---------INS InfixExpression@@file != null && file.exists() @TO@ ParenthesizedExpression@@(file != null && file.exists()) @AT@ 2398 @LENGTH@ 29
------------INS InfixExpression@@file != null @TO@ InfixExpression@@file != null && file.exists() @AT@ 2398 @LENGTH@ 12
---------------MOV SimpleName@@file @TO@ InfixExpression@@file != null @AT@ 2397 @LENGTH@ 4
---------------MOV Operator@@!= @TO@ InfixExpression@@file != null @AT@ 2401 @LENGTH@ 2
---------------MOV NullLiteral@@null @TO@ InfixExpression@@file != null @AT@ 2405 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@file != null && file.exists() @AT@ 2410 @LENGTH@ 2
------------INS MethodInvocation@@file.exists() @TO@ InfixExpression@@file != null && file.exists() @AT@ 2414 @LENGTH@ 13
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.exists() @AT@ 2414 @LENGTH@ 4
---------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@file.exists() @AT@ 2419 @LENGTH@ 8
------DEL InfixExpression@@file != null @AT@ 2397 @LENGTH@ 12


UPD CatchClause@@catch (SftpException e) {  throw new GenericFileOperationFailedException(e.getMessage(),e);} @TO@ catch (SftpException e) {  if (ChannelSftp.SSH_FX_NO_SUCH_FILE == e.id) {    return false;  }  throw new GenericFileOperationFailedException(e.getMessage(),e);} @AT@ 18910 @LENGTH@ 113
---INS IfStatement@@if (ChannelSftp.SSH_FX_NO_SUCH_FILE == e.id) {  return false;} @TO@ CatchClause@@catch (SftpException e) {  throw new GenericFileOperationFailedException(e.getMessage(),e);} @AT@ 19036 @LENGTH@ 90
------INS InfixExpression@@ChannelSftp.SSH_FX_NO_SUCH_FILE == e.id @TO@ IfStatement@@if (ChannelSftp.SSH_FX_NO_SUCH_FILE == e.id) {  return false;} @AT@ 19040 @LENGTH@ 39
---------INS QualifiedName@@ChannelSftp.SSH_FX_NO_SUCH_FILE @TO@ InfixExpression@@ChannelSftp.SSH_FX_NO_SUCH_FILE == e.id @AT@ 19040 @LENGTH@ 31
------------INS SimpleName@@ChannelSftp @TO@ QualifiedName@@ChannelSftp.SSH_FX_NO_SUCH_FILE @AT@ 19040 @LENGTH@ 11
------------INS SimpleName@@SSH_FX_NO_SUCH_FILE @TO@ QualifiedName@@ChannelSftp.SSH_FX_NO_SUCH_FILE @AT@ 19052 @LENGTH@ 19
---------INS Operator@@== @TO@ InfixExpression@@ChannelSftp.SSH_FX_NO_SUCH_FILE == e.id @AT@ 19071 @LENGTH@ 2
---------INS QualifiedName@@e.id @TO@ InfixExpression@@ChannelSftp.SSH_FX_NO_SUCH_FILE == e.id @AT@ 19075 @LENGTH@ 4
------------INS SimpleName@@e @TO@ QualifiedName@@e.id @AT@ 19075 @LENGTH@ 1
------------INS SimpleName@@id @TO@ QualifiedName@@e.id @AT@ 19077 @LENGTH@ 2
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (ChannelSftp.SSH_FX_NO_SUCH_FILE == e.id) {  return false;} @AT@ 19081 @LENGTH@ 45
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 19099 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 19106 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:assertMatches(header("size").isEqualTo(10)) @TO@ MethodDeclaration@@public, void, MethodName:testPredicates, Exception,  @AT@ 1850 @LENGTH@ 44
---INS MethodInvocation@@assertMatches(header("size").isEqualTo(10)) @TO@ ExpressionStatement@@MethodInvocation:assertMatches(header("size").isEqualTo(10)) @AT@ 1850 @LENGTH@ 43
------INS SimpleName@@MethodName:assertMatches:[header("size").isEqualTo(10)] @TO@ MethodInvocation@@assertMatches(header("size").isEqualTo(10)) @AT@ 1850 @LENGTH@ 43
---------INS MethodInvocation@@header("size").isEqualTo(10) @TO@ SimpleName@@MethodName:assertMatches:[header("size").isEqualTo(10)] @AT@ 1864 @LENGTH@ 28
------------INS MethodInvocation@@MethodName:header:["size"] @TO@ MethodInvocation@@header("size").isEqualTo(10) @AT@ 1864 @LENGTH@ 14
---------------INS StringLiteral@@"size" @TO@ MethodInvocation@@MethodName:header:["size"] @AT@ 1871 @LENGTH@ 6
------------INS SimpleName@@MethodName:isEqualTo:[10] @TO@ MethodInvocation@@header("size").isEqualTo(10) @AT@ 1879 @LENGTH@ 13
---------------INS NumberLiteral@@10 @TO@ SimpleName@@MethodName:isEqualTo:[10] @AT@ 1889 @LENGTH@ 2


UPD VariableDeclarationStatement@@Long size=(Long)mbeanServer.invoke(name,"qeueSize",null,null); @TO@ Long size=(Long)mbeanServer.invoke(name,"queueSize",null,null); @AT@ 2283 @LENGTH@ 68
---UPD VariableDeclarationFragment@@size=(Long)mbeanServer.invoke(name,"qeueSize",null,null) @TO@ size=(Long)mbeanServer.invoke(name,"queueSize",null,null) @AT@ 2288 @LENGTH@ 62
------UPD CastExpression@@(Long)mbeanServer.invoke(name,"qeueSize",null,null) @TO@ (Long)mbeanServer.invoke(name,"queueSize",null,null) @AT@ 2295 @LENGTH@ 55
---------UPD MethodInvocation@@mbeanServer.invoke(name,"qeueSize",null,null) @TO@ mbeanServer.invoke(name,"queueSize",null,null) @AT@ 2302 @LENGTH@ 48
------------UPD SimpleName@@MethodName:invoke:[name, "qeueSize", null, null] @TO@ MethodName:invoke:[name, "queueSize", null, null] @AT@ 2314 @LENGTH@ 36
---------------UPD StringLiteral@@"qeueSize" @TO@ "queueSize" @AT@ 2327 @LENGTH@ 10


UPD WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {    final String namespace=reader.getNamespaceURI();    if (myNamespace == null ? namespace != null : !myNamespace.equals(namespace)) {      throw unexpectedElement(reader);    }    if (reader.getLocalName().equals("property")) {      addProperty(reader.getAttributeValue(null,"name"),reader.getAttributeValue(null,"value"));    } else {      throw unexpectedElement(reader);    }  }} @TO@ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {  final String namespace=reader.getNamespaceURI();  if (myNamespace == null ? namespace != null : !myNamespace.equals(namespace)) {    throw unexpectedElement(reader);  }  if (reader.getLocalName().equals("property")) {    addProperty(reader.getAttributeValue(null,"name"),reader.getAttributeValue(null,"value"));  } else {    throw unexpectedElement(reader);  }} @AT@ 2381 @LENGTH@ 730
---INS InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @TO@ WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {    final String namespace=reader.getNamespaceURI();    if (myNamespace == null ? namespace != null : !myNamespace.equals(namespace)) {      throw unexpectedElement(reader);    }    if (reader.getLocalName().equals("property")) {      addProperty(reader.getAttributeValue(null,"name"),reader.getAttributeValue(null,"value"));    } else {      throw unexpectedElement(reader);    }  }} @AT@ 2388 @LENGTH@ 51
------INS MethodInvocation@@reader.hasNext() @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 2388 @LENGTH@ 16
---------MOV SimpleName@@Name:reader @TO@ MethodInvocation@@reader.hasNext() @AT@ 2388 @LENGTH@ 6
---------MOV SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@reader.hasNext() @AT@ 2395 @LENGTH@ 9
------INS Operator@@&& @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 2404 @LENGTH@ 2
------INS InfixExpression@@reader.nextTag() != END_ELEMENT @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 2408 @LENGTH@ 31
---------MOV MethodInvocation@@reader.nextTag() @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 2424 @LENGTH@ 16
---------MOV Operator@@== @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 2440 @LENGTH@ 2
---------MOV SimpleName@@START_ELEMENT @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 2444 @LENGTH@ 13
---DEL MethodInvocation@@reader.hasNext() @AT@ 2388 @LENGTH@ 16
---DEL Block@@WhileBody:{  if (reader.nextTag() == START_ELEMENT) {    final String namespace=reader.getNamespaceURI();    if (myNamespace == null ? namespace != null : !myNamespace.equals(namespace)) {      throw unexpectedElement(reader);    }    if (reader.getLocalName().equals("property")) {      addProperty(reader.getAttributeValue(null,"name"),reader.getAttributeValue(null,"value"));    } else {      throw unexpectedElement(reader);    }  }} @AT@ 2406 @LENGTH@ 705
------DEL IfStatement@@if (reader.nextTag() == START_ELEMENT) {  final String namespace=reader.getNamespaceURI();  if (myNamespace == null ? namespace != null : !myNamespace.equals(namespace)) {    throw unexpectedElement(reader);  }  if (reader.getLocalName().equals("property")) {    addProperty(reader.getAttributeValue(null,"name"),reader.getAttributeValue(null,"value"));  } else {    throw unexpectedElement(reader);  }} @AT@ 2420 @LENGTH@ 681
---------DEL InfixExpression@@reader.nextTag() == START_ELEMENT @AT@ 2424 @LENGTH@ 33
---MOV Block@@ThenBody:{  final String namespace=reader.getNamespaceURI();  if (myNamespace == null ? namespace != null : !myNamespace.equals(namespace)) {    throw unexpectedElement(reader);  }  if (reader.getLocalName().equals("property")) {    addProperty(reader.getAttributeValue(null,"name"),reader.getAttributeValue(null,"value"));  } else {    throw unexpectedElement(reader);  }} @TO@ WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {    final String namespace=reader.getNamespaceURI();    if (myNamespace == null ? namespace != null : !myNamespace.equals(namespace)) {      throw unexpectedElement(reader);    }    if (reader.getLocalName().equals("property")) {      addProperty(reader.getAttributeValue(null,"name"),reader.getAttributeValue(null,"value"));    } else {      throw unexpectedElement(reader);    }  }} @AT@ 2459 @LENGTH@ 642


UPD ReturnStatement@@InfixExpression:"Customer[userName: " + userName + " firstName: "+ firstName+ " surname: "+ surname+ "]" @TO@ InfixExpression:"Customer[userName: " + getUserName() + " firstName: "+ getFirstName()+ " surname: "+ getSurname()+ "]" @AT@ 1636 @LENGTH@ 100
---UPD InfixExpression@@"Customer[userName: " + userName + " firstName: "+ firstName+ " surname: "+ surname+ "]" @TO@ "Customer[userName: " + getUserName() + " firstName: "+ getFirstName()+ " surname: "+ getSurname()+ "]" @AT@ 1643 @LENGTH@ 92
------INS MethodInvocation@@MethodName:getUserName:[] @TO@ InfixExpression@@"Customer[userName: " + userName + " firstName: "+ firstName+ " surname: "+ surname+ "]" @AT@ 1667 @LENGTH@ 13
------DEL SimpleName@@userName @AT@ 1667 @LENGTH@ 8
------DEL SimpleName@@firstName @AT@ 1695 @LENGTH@ 9
------INS MethodInvocation@@MethodName:getFirstName:[] @TO@ InfixExpression@@"Customer[userName: " + userName + " firstName: "+ firstName+ " surname: "+ surname+ "]" @AT@ 1700 @LENGTH@ 14
------DEL SimpleName@@surname @AT@ 1722 @LENGTH@ 7
------INS MethodInvocation@@MethodName:getSurname:[] @TO@ InfixExpression@@"Customer[userName: " + userName + " firstName: "+ firstName+ " surname: "+ surname+ "]" @AT@ 1732 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:server.register("/test%20/path",new BasicValidationHandler("GET",null,null,getExpectedContent())) @TO@ MethodDeclaration@@protected, void, MethodName:registerHandler, LocalTestServer server,  @AT@ 2394 @LENGTH@ 102
---INS MethodInvocation@@server.register("/test%20/path",new BasicValidationHandler("GET",null,null,getExpectedContent())) @TO@ ExpressionStatement@@MethodInvocation:server.register("/test%20/path",new BasicValidationHandler("GET",null,null,getExpectedContent())) @AT@ 2394 @LENGTH@ 101
------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.register("/test%20/path",new BasicValidationHandler("GET",null,null,getExpectedContent())) @AT@ 2394 @LENGTH@ 6
------INS SimpleName@@MethodName:register:["/test%20/path", new BasicValidationHandler("GET",null,null,getExpectedContent())] @TO@ MethodInvocation@@server.register("/test%20/path",new BasicValidationHandler("GET",null,null,getExpectedContent())) @AT@ 2401 @LENGTH@ 94
---------INS StringLiteral@@"/test%20/path" @TO@ SimpleName@@MethodName:register:["/test%20/path", new BasicValidationHandler("GET",null,null,getExpectedContent())] @AT@ 2410 @LENGTH@ 15
---------INS ClassInstanceCreation@@BasicValidationHandler["GET", null, null, getExpectedContent()] @TO@ SimpleName@@MethodName:register:["/test%20/path", new BasicValidationHandler("GET",null,null,getExpectedContent())] @AT@ 2427 @LENGTH@ 67
------------INS New@@new @TO@ ClassInstanceCreation@@BasicValidationHandler["GET", null, null, getExpectedContent()] @AT@ 2427 @LENGTH@ 3
------------INS SimpleType@@BasicValidationHandler @TO@ ClassInstanceCreation@@BasicValidationHandler["GET", null, null, getExpectedContent()] @AT@ 2431 @LENGTH@ 22
------------INS StringLiteral@@"GET" @TO@ ClassInstanceCreation@@BasicValidationHandler["GET", null, null, getExpectedContent()] @AT@ 2454 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@BasicValidationHandler["GET", null, null, getExpectedContent()] @AT@ 2461 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@BasicValidationHandler["GET", null, null, getExpectedContent()] @AT@ 2467 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:getExpectedContent:[] @TO@ ClassInstanceCreation@@BasicValidationHandler["GET", null, null, getExpectedContent()] @AT@ 2473 @LENGTH@ 20


UPD IfStatement@@if (serviceFailures.isEmpty()) {  logger.infof("JBoss AS started [%d services in %dms]",numberServices,elapsedTime);  new Exception().printStackTrace();  sendMessage("STARTED");} else {  sendMessage("START FAILED");  final StringBuilder buff=new StringBuilder(String.format("JBoss AS server start failed.  Attempted to start %d services in %dms",numberServices,elapsedTime));  buff.append("\nThe following services failed to start:\n");  for (  Map.Entry<ServiceName,StartException> entry : serviceFailures.entrySet()) {    buff.append(String.format("\t%s => %s\n",entry.getKey(),entry.getValue().getMessage()));  }  logger.error(buff.toString());} @TO@ if (serviceFailures.isEmpty()) {  logger.infof("JBoss AS started [%d services in %dms]",numberServices,elapsedTime);  sendMessage("STARTED");} else {  sendMessage("START FAILED");  final StringBuilder buff=new StringBuilder(String.format("JBoss AS server start failed.  Attempted to start %d services in %dms",numberServices,elapsedTime));  buff.append("\nThe following services failed to start:\n");  for (  Map.Entry<ServiceName,StartException> entry : serviceFailures.entrySet()) {    buff.append(String.format("\t%s => %s\n",entry.getKey(),entry.getValue().getMessage()));  }  logger.error(buff.toString());} @AT@ 3187 @LENGTH@ 879
---UPD Block@@ThenBody:{  logger.infof("JBoss AS started [%d services in %dms]",numberServices,elapsedTime);  new Exception().printStackTrace();  sendMessage("STARTED");} @TO@ ThenBody:{  logger.infof("JBoss AS started [%d services in %dms]",numberServices,elapsedTime);  sendMessage("STARTED");} @AT@ 3217 @LENGTH@ 223
------DEL ExpressionStatement@@MethodInvocation:new Exception().printStackTrace() @AT@ 3344 @LENGTH@ 34
---------DEL MethodInvocation@@new Exception().printStackTrace() @AT@ 3344 @LENGTH@ 33
------------DEL ClassInstanceCreation@@Exception[] @AT@ 3344 @LENGTH@ 15
---------------DEL New@@new @AT@ 3344 @LENGTH@ 3
---------------DEL SimpleType@@Exception @AT@ 3348 @LENGTH@ 9
------------DEL SimpleName@@MethodName:printStackTrace:[] @AT@ 3360 @LENGTH@ 17


UPD IfStatement@@if (Os.isFamily("os/2")) {  String[] cmd={"cmd","/c","set"};  return cmd;} else if (Os.isFamily("windows")) {  String osname=System.getProperty("os.name").toLowerCase(Locale.US);  String[] cmd={"cmd","/c","set"};  return cmd;} else if (Os.isFamily("unix")) {  String[] cmd={"/usr/bin/env"};  return cmd;} else if (Os.isFamily("netware")) {  String[] cmd={"env"};  return cmd;} else {  String[] cmd=null;  return cmd;} @TO@ if (Os.isFamily("os/2")) {  String[] cmd={"cmd","/c","set"};  return cmd;} else if (Os.isFamily("windows")) {  String[] cmd={"cmd","/c","set"};  return cmd;} else if (Os.isFamily("unix")) {  String[] cmd={"/usr/bin/env"};  return cmd;} else if (Os.isFamily("netware")) {  String[] cmd={"env"};  return cmd;} else {  String[] cmd=null;  return cmd;} @AT@ 3596 @LENGTH@ 933
---INS Block@@ThenBody:{  String[] cmd={"cmd","/c","set"};  return cmd;} @TO@ IfStatement@@if (Os.isFamily("os/2")) {  String[] cmd={"cmd","/c","set"};  return cmd;} else if (Os.isFamily("windows")) {  String osname=System.getProperty("os.name").toLowerCase(Locale.US);  String[] cmd={"cmd","/c","set"};  return cmd;} else if (Os.isFamily("unix")) {  String[] cmd={"/usr/bin/env"};  return cmd;} else if (Os.isFamily("netware")) {  String[] cmd={"env"};  return cmd;} else {  String[] cmd=null;  return cmd;} @AT@ 3623 @LENGTH@ 166
------INS VariableDeclarationStatement@@String[] cmd={"cmd","/c","set"}; @TO@ Block@@ThenBody:{  String[] cmd={"cmd","/c","set"};  return cmd;} @AT@ 3718 @LENGTH@ 37
---------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] cmd={"cmd","/c","set"}; @AT@ 3718 @LENGTH@ 8
------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 3718 @LENGTH@ 6
---------INS VariableDeclarationFragment@@cmd={"cmd","/c","set"} @TO@ VariableDeclarationStatement@@String[] cmd={"cmd","/c","set"}; @AT@ 3727 @LENGTH@ 27
------------INS SimpleName@@cmd @TO@ VariableDeclarationFragment@@cmd={"cmd","/c","set"} @AT@ 3727 @LENGTH@ 3
------------INS ArrayInitializer@@{"cmd","/c","set"} @TO@ VariableDeclarationFragment@@cmd={"cmd","/c","set"} @AT@ 3733 @LENGTH@ 21
---------------INS StringLiteral@@"cmd" @TO@ ArrayInitializer@@{"cmd","/c","set"} @AT@ 3734 @LENGTH@ 5
---------------INS StringLiteral@@"/c" @TO@ ArrayInitializer@@{"cmd","/c","set"} @AT@ 3741 @LENGTH@ 4
---------------INS StringLiteral@@"set" @TO@ ArrayInitializer@@{"cmd","/c","set"} @AT@ 3747 @LENGTH@ 5
------INS ReturnStatement@@SimpleName:cmd @TO@ Block@@ThenBody:{  String[] cmd={"cmd","/c","set"};  return cmd;} @AT@ 3768 @LENGTH@ 11
---------INS SimpleName@@cmd @TO@ ReturnStatement@@SimpleName:cmd @AT@ 3775 @LENGTH@ 3
---UPD Block@@ElseBody:if (Os.isFamily("windows")) {  String osname=System.getProperty("os.name").toLowerCase(Locale.US);  String[] cmd={"cmd","/c","set"};  return cmd;} else if (Os.isFamily("unix")) {  String[] cmd={"/usr/bin/env"};  return cmd;} else if (Os.isFamily("netware")) {  String[] cmd={"env"};  return cmd;} else {  String[] cmd=null;  return cmd;} @TO@ ElseBody:if (Os.isFamily("windows")) {  String[] cmd={"cmd","/c","set"};  return cmd;} else if (Os.isFamily("unix")) {  String[] cmd={"/usr/bin/env"};  return cmd;} else if (Os.isFamily("netware")) {  String[] cmd={"env"};  return cmd;} else {  String[] cmd=null;  return cmd;} @AT@ 3803 @LENGTH@ 726
------UPD IfStatement@@if (Os.isFamily("windows")) {  String osname=System.getProperty("os.name").toLowerCase(Locale.US);  String[] cmd={"cmd","/c","set"};  return cmd;} else if (Os.isFamily("unix")) {  String[] cmd={"/usr/bin/env"};  return cmd;} else if (Os.isFamily("netware")) {  String[] cmd={"env"};  return cmd;} else {  String[] cmd=null;  return cmd;} @TO@ if (Os.isFamily("windows")) {  String[] cmd={"cmd","/c","set"};  return cmd;} else if (Os.isFamily("unix")) {  String[] cmd={"/usr/bin/env"};  return cmd;} else if (Os.isFamily("netware")) {  String[] cmd={"env"};  return cmd;} else {  String[] cmd=null;  return cmd;} @AT@ 3803 @LENGTH@ 726
---------MOV Block@@ThenBody:{  String[] cmd={"cmd","/c","set"};  return cmd;} @TO@ IfStatement@@if (Os.isFamily("windows")) {  String osname=System.getProperty("os.name").toLowerCase(Locale.US);  String[] cmd={"cmd","/c","set"};  return cmd;} else if (Os.isFamily("unix")) {  String[] cmd={"/usr/bin/env"};  return cmd;} else if (Os.isFamily("netware")) {  String[] cmd={"env"};  return cmd;} else {  String[] cmd=null;  return cmd;} @AT@ 3623 @LENGTH@ 166
---------DEL Block@@ThenBody:{  String osname=System.getProperty("os.name").toLowerCase(Locale.US);  String[] cmd={"cmd","/c","set"};  return cmd;} @AT@ 3833 @LENGTH@ 183
------------DEL VariableDeclarationStatement@@String osname=System.getProperty("os.name").toLowerCase(Locale.US); @AT@ 3847 @LENGTH@ 85
---------------DEL SimpleType@@String @AT@ 3847 @LENGTH@ 6
---------------DEL VariableDeclarationFragment@@osname=System.getProperty("os.name").toLowerCase(Locale.US) @AT@ 3854 @LENGTH@ 77
------------------DEL SimpleName@@osname @AT@ 3854 @LENGTH@ 6
------------------DEL MethodInvocation@@System.getProperty("os.name").toLowerCase(Locale.US) @AT@ 3879 @LENGTH@ 52
---------------------DEL MethodInvocation@@MethodName:getProperty:["os.name"] @AT@ 3879 @LENGTH@ 29
------------------------DEL StringLiteral@@"os.name" @AT@ 3898 @LENGTH@ 9
---------------------DEL SimpleName@@Name:System @AT@ 3879 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:toLowerCase:[Locale.US] @AT@ 3909 @LENGTH@ 22
------------------------DEL QualifiedName@@Locale.US @AT@ 3921 @LENGTH@ 9
---------------------------DEL SimpleName@@Locale @AT@ 3921 @LENGTH@ 6
---------------------------DEL SimpleName@@US @AT@ 3928 @LENGTH@ 2
------------DEL VariableDeclarationStatement@@String[] cmd={"cmd","/c","set"}; @AT@ 3945 @LENGTH@ 37
---------------DEL ArrayType@@String[] @AT@ 3945 @LENGTH@ 8
------------------DEL SimpleType@@String @AT@ 3945 @LENGTH@ 6
---------------DEL VariableDeclarationFragment@@cmd={"cmd","/c","set"} @AT@ 3954 @LENGTH@ 27
------------------DEL SimpleName@@cmd @AT@ 3954 @LENGTH@ 3
------------------DEL ArrayInitializer@@{"cmd","/c","set"} @AT@ 3960 @LENGTH@ 21
---------------------DEL StringLiteral@@"cmd" @AT@ 3961 @LENGTH@ 5
---------------------DEL StringLiteral@@"/c" @AT@ 3968 @LENGTH@ 4
---------------------DEL StringLiteral@@"set" @AT@ 3974 @LENGTH@ 5
------------DEL ReturnStatement@@SimpleName:cmd @AT@ 3995 @LENGTH@ 11
---------------DEL SimpleName@@cmd @AT@ 4002 @LENGTH@ 3


UPD ExpressionStatement@@Assignment:jpaTemplate=applicationContext.getBean("jpaTemplate",JpaTemplate.class) @TO@ Assignment:jpaTemplate=(JpaTemplate)applicationContext.getBean("jpaTemplate") @AT@ 4210 @LENGTH@ 75
---UPD Assignment@@jpaTemplate=applicationContext.getBean("jpaTemplate",JpaTemplate.class) @TO@ jpaTemplate=(JpaTemplate)applicationContext.getBean("jpaTemplate") @AT@ 4210 @LENGTH@ 74
------DEL MethodInvocation@@applicationContext.getBean("jpaTemplate",JpaTemplate.class) @AT@ 4224 @LENGTH@ 60
------INS CastExpression@@(JpaTemplate)applicationContext.getBean("jpaTemplate") @TO@ Assignment@@jpaTemplate=applicationContext.getBean("jpaTemplate",JpaTemplate.class) @AT@ 4303 @LENGTH@ 55
---------INS SimpleType@@JpaTemplate @TO@ CastExpression@@(JpaTemplate)applicationContext.getBean("jpaTemplate") @AT@ 4304 @LENGTH@ 11
---------INS MethodInvocation@@applicationContext.getBean("jpaTemplate") @TO@ CastExpression@@(JpaTemplate)applicationContext.getBean("jpaTemplate") @AT@ 4317 @LENGTH@ 41
------------MOV SimpleName@@Name:applicationContext @TO@ MethodInvocation@@applicationContext.getBean("jpaTemplate") @AT@ 4224 @LENGTH@ 18
------------MOV SimpleName@@MethodName:getBean:["jpaTemplate", JpaTemplate.class] @TO@ MethodInvocation@@applicationContext.getBean("jpaTemplate") @AT@ 4243 @LENGTH@ 41
---------------DEL TypeLiteral@@JpaTemplate.class @AT@ 4266 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:prepareShutdown,  @TO@ TypeDeclaration@@[public, abstract]GenericFileConsumer, ScheduledPollConsumer[BatchConsumer, ShutdownAware] @AT@ 7123 @LENGTH@ 53
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 7123 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 7130 @LENGTH@ 4
---INS SimpleName@@MethodName:prepareShutdown @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown,  @AT@ 7135 @LENGTH@ 15


UPD MethodDeclaration@@boolean, MethodName:canExecute, TradeRequest tradeRequest, List errors,  @TO@ boolean, MethodName:canExecute, TradeRequest tradeRequest, List<?> errors,  @AT@ 1042 @LENGTH@ 51
---UPD SingleVariableDeclaration@@List errors @TO@ List<?> errors @AT@ 1080 @LENGTH@ 11
------INS ParameterizedType@@List<?> @TO@ SingleVariableDeclaration@@List errors @AT@ 1080 @LENGTH@ 7
---------INS SimpleType@@List @TO@ ParameterizedType@@List<?> @AT@ 1080 @LENGTH@ 4
---------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 1085 @LENGTH@ 1
------DEL SimpleType@@List @AT@ 1080 @LENGTH@ 4


UPD WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());        if (visited.contains(element)) {          throw unexpectedElement(reader);        }        visited.add(element);switch (element) {case SASL:{            saslElement=new SaslElement(reader);            break;          }case PROPERTIES:{          connectorProperties=new PropertiesElement(reader);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}}} @TO@ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{      final Element element=Element.forName(reader.getLocalName());      if (visited.contains(element)) {        throw unexpectedElement(reader);      }      visited.add(element);switch (element) {case SASL:{          saslElement=new SaslElement(reader);          break;        }case PROPERTIES:{        connectorProperties=new PropertiesElement(reader);        break;      }case AUTHENTICATION_PROVIDER:{      authenticationProvider=readStringAttributeElement(reader,"name");      break;    }default :  throw unexpectedElement(reader);}break;}default :throw unexpectedElement(reader);}} @AT@ 4529 @LENGTH@ 1146
---INS InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @TO@ WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());        if (visited.contains(element)) {          throw unexpectedElement(reader);        }        visited.add(element);switch (element) {case SASL:{            saslElement=new SaslElement(reader);            break;          }case PROPERTIES:{          connectorProperties=new PropertiesElement(reader);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}}} @AT@ 4502 @LENGTH@ 51
------INS MethodInvocation@@reader.hasNext() @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 4502 @LENGTH@ 16
---------MOV SimpleName@@Name:reader @TO@ MethodInvocation@@reader.hasNext() @AT@ 4536 @LENGTH@ 6
---------MOV SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@reader.hasNext() @AT@ 4543 @LENGTH@ 9
------INS Operator@@&& @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 4518 @LENGTH@ 2
------INS InfixExpression@@reader.nextTag() != END_ELEMENT @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 4522 @LENGTH@ 31
---------MOV MethodInvocation@@reader.nextTag() @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 4572 @LENGTH@ 16
---------MOV Operator@@== @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 4588 @LENGTH@ 2
---------MOV SimpleName@@START_ELEMENT @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 4592 @LENGTH@ 13
---DEL MethodInvocation@@reader.hasNext() @AT@ 4536 @LENGTH@ 16
---DEL Block@@WhileBody:{  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());        if (visited.contains(element)) {          throw unexpectedElement(reader);        }        visited.add(element);switch (element) {case SASL:{            saslElement=new SaslElement(reader);            break;          }case PROPERTIES:{          connectorProperties=new PropertiesElement(reader);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}}} @AT@ 4554 @LENGTH@ 1121
------DEL IfStatement@@if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{      final Element element=Element.forName(reader.getLocalName());      if (visited.contains(element)) {        throw unexpectedElement(reader);      }      visited.add(element);switch (element) {case SASL:{          saslElement=new SaslElement(reader);          break;        }case PROPERTIES:{        connectorProperties=new PropertiesElement(reader);        break;      }default :    throw unexpectedElement(reader);}break;}default :throw unexpectedElement(reader);}} @AT@ 4568 @LENGTH@ 1097
---------DEL InfixExpression@@reader.nextTag() == START_ELEMENT @AT@ 4572 @LENGTH@ 33
---MOV Block@@ThenBody:{switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{      final Element element=Element.forName(reader.getLocalName());      if (visited.contains(element)) {        throw unexpectedElement(reader);      }      visited.add(element);switch (element) {case SASL:{          saslElement=new SaslElement(reader);          break;        }case PROPERTIES:{        connectorProperties=new PropertiesElement(reader);        break;      }default :    throw unexpectedElement(reader);}break;}default :throw unexpectedElement(reader);}} @TO@ WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());        if (visited.contains(element)) {          throw unexpectedElement(reader);        }        visited.add(element);switch (element) {case SASL:{            saslElement=new SaslElement(reader);            break;          }case PROPERTIES:{          connectorProperties=new PropertiesElement(reader);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}}} @AT@ 4607 @LENGTH@ 1058
------UPD SwitchStatement@@switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{    final Element element=Element.forName(reader.getLocalName());    if (visited.contains(element)) {      throw unexpectedElement(reader);    }    visited.add(element);switch (element) {case SASL:{        saslElement=new SaslElement(reader);        break;      }case PROPERTIES:{      connectorProperties=new PropertiesElement(reader);      break;    }default :  throw unexpectedElement(reader);}break;}default :throw unexpectedElement(reader);} @TO@ switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{    final Element element=Element.forName(reader.getLocalName());    if (visited.contains(element)) {      throw unexpectedElement(reader);    }    visited.add(element);switch (element) {case SASL:{        saslElement=new SaslElement(reader);        break;      }case PROPERTIES:{      connectorProperties=new PropertiesElement(reader);      break;    }case AUTHENTICATION_PROVIDER:{    authenticationProvider=readStringAttributeElement(reader,"name");    break;  }default :throw unexpectedElement(reader);}break;}default :throw unexpectedElement(reader);} @AT@ 4625 @LENGTH@ 1026
---------UPD SwitchStatement@@switch (element) {case SASL:{    saslElement=new SaslElement(reader);    break;  }case PROPERTIES:{  connectorProperties=new PropertiesElement(reader);  break;}default :throw unexpectedElement(reader);} @TO@ switch (element) {case SASL:{    saslElement=new SaslElement(reader);    break;  }case PROPERTIES:{  connectorProperties=new PropertiesElement(reader);  break;}case AUTHENTICATION_PROVIDER:{authenticationProvider=readStringAttributeElement(reader,"name");break;}default :throw unexpectedElement(reader);} @AT@ 5022 @LENGTH@ 496
------------INS SwitchCase@@case AUTHENTICATION_PROVIDER: @TO@ SwitchStatement@@switch (element) {case SASL:{    saslElement=new SaslElement(reader);    break;  }case PROPERTIES:{  connectorProperties=new PropertiesElement(reader);  break;}default :throw unexpectedElement(reader);} @AT@ 5331 @LENGTH@ 29
---------------INS SimpleName@@AUTHENTICATION_PROVIDER @TO@ SwitchCase@@case AUTHENTICATION_PROVIDER: @AT@ 5336 @LENGTH@ 23
------------INS ExpressionStatement@@Assignment:authenticationProvider=readStringAttributeElement(reader,"name") @TO@ SwitchStatement@@switch (element) {case SASL:{    saslElement=new SaslElement(reader);    break;  }case PROPERTIES:{  connectorProperties=new PropertiesElement(reader);  break;}default :throw unexpectedElement(reader);} @AT@ 5391 @LENGTH@ 68
---------------INS Assignment@@authenticationProvider=readStringAttributeElement(reader,"name") @TO@ ExpressionStatement@@Assignment:authenticationProvider=readStringAttributeElement(reader,"name") @AT@ 5391 @LENGTH@ 67
------------------INS SimpleName@@authenticationProvider @TO@ Assignment@@authenticationProvider=readStringAttributeElement(reader,"name") @AT@ 5391 @LENGTH@ 22
------------------INS Operator@@= @TO@ Assignment@@authenticationProvider=readStringAttributeElement(reader,"name") @AT@ 5413 @LENGTH@ 1
------------------INS MethodInvocation@@readStringAttributeElement(reader,"name") @TO@ Assignment@@authenticationProvider=readStringAttributeElement(reader,"name") @AT@ 5416 @LENGTH@ 42
---------------------INS SimpleName@@MethodName:readStringAttributeElement:[reader, "name"] @TO@ MethodInvocation@@readStringAttributeElement(reader,"name") @AT@ 5416 @LENGTH@ 42
------------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:readStringAttributeElement:[reader, "name"] @AT@ 5443 @LENGTH@ 6
------------------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:readStringAttributeElement:[reader, "name"] @AT@ 5451 @LENGTH@ 6
------------INS BreakStatement@@ @TO@ SwitchStatement@@switch (element) {case SASL:{    saslElement=new SaslElement(reader);    break;  }case PROPERTIES:{  connectorProperties=new PropertiesElement(reader);  break;}default :throw unexpectedElement(reader);} @AT@ 5488 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:put(entry.getKey(),(V)entry.getValue()) @TO@ MethodInvocation:put(entry.getKey(),entry.getValue()) @AT@ 10673 @LENGTH@ 42
---UPD MethodInvocation@@put(entry.getKey(),(V)entry.getValue()) @TO@ put(entry.getKey(),entry.getValue()) @AT@ 10673 @LENGTH@ 41
------UPD SimpleName@@MethodName:put:[entry.getKey(), (V)entry.getValue()] @TO@ MethodName:put:[entry.getKey(), entry.getValue()] @AT@ 10673 @LENGTH@ 41
---------DEL CastExpression@@(V)entry.getValue() @AT@ 10693 @LENGTH@ 20
------------DEL SimpleType@@V @AT@ 10694 @LENGTH@ 1
------------DEL MethodInvocation@@entry.getValue() @AT@ 10697 @LENGTH@ 16
---------INS MethodInvocation@@entry.getValue() @TO@ SimpleName@@MethodName:put:[entry.getKey(), (V)entry.getValue()] @AT@ 10693 @LENGTH@ 16
------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 10697 @LENGTH@ 5
------------MOV SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 10703 @LENGTH@ 10


UPD ReturnStatement@@InfixExpression:"DeploymentChainImpl{" + "processors=" + (orderedProcessors == null ? null : Arrays.asList(orderedProcessors)) + '}' @TO@ InfixExpression:"DeploymentChainImpl{processors=" + orderedProcessors + "}" @AT@ 2915 @LENGTH@ 148
---UPD InfixExpression@@"DeploymentChainImpl{" + "processors=" + (orderedProcessors == null ? null : Arrays.asList(orderedProcessors)) + '}' @TO@ "DeploymentChainImpl{processors=" + orderedProcessors + "}" @AT@ 2922 @LENGTH@ 140
------DEL InfixExpression@@"DeploymentChainImpl{" + "processors=" @AT@ 2922 @LENGTH@ 50
---------DEL StringLiteral@@"processors=" @AT@ 2959 @LENGTH@ 13
------MOV StringLiteral@@"DeploymentChainImpl{" @TO@ InfixExpression@@"DeploymentChainImpl{" + "processors=" + (orderedProcessors == null ? null : Arrays.asList(orderedProcessors)) + '}' @AT@ 2922 @LENGTH@ 22
------MOV Operator@@+ @TO@ InfixExpression@@"DeploymentChainImpl{" + "processors=" + (orderedProcessors == null ? null : Arrays.asList(orderedProcessors)) + '}' @AT@ 2944 @LENGTH@ 1
------DEL Operator@@+ @AT@ 2972 @LENGTH@ 1
------DEL ParenthesizedExpression@@(orderedProcessors == null ? null : Arrays.asList(orderedProcessors)) @AT@ 2975 @LENGTH@ 69
---------DEL ConditionalExpression@@orderedProcessors == null ? null : Arrays.asList(orderedProcessors) @AT@ 2976 @LENGTH@ 67
------------DEL InfixExpression@@orderedProcessors == null @AT@ 2976 @LENGTH@ 25
---------------DEL Operator@@== @AT@ 2993 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 2997 @LENGTH@ 4
------------DEL NullLiteral@@null @AT@ 3004 @LENGTH@ 4
------------DEL MethodInvocation@@Arrays.asList(orderedProcessors) @AT@ 3011 @LENGTH@ 32
---------------DEL SimpleName@@Name:Arrays @AT@ 3011 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:asList:[orderedProcessors] @AT@ 3018 @LENGTH@ 25
------------------DEL SimpleName@@orderedProcessors @AT@ 3025 @LENGTH@ 17
------MOV SimpleName@@orderedProcessors @TO@ InfixExpression@@"DeploymentChainImpl{" + "processors=" + (orderedProcessors == null ? null : Arrays.asList(orderedProcessors)) + '}' @AT@ 2976 @LENGTH@ 17
------INS StringLiteral@@"}" @TO@ InfixExpression@@"DeploymentChainImpl{" + "processors=" + (orderedProcessors == null ? null : Arrays.asList(orderedProcessors)) + '}' @AT@ 2978 @LENGTH@ 3
------DEL CharacterLiteral@@'}' @AT@ 3059 @LENGTH@ 3


UPD VariableDeclarationStatement@@final EnumSet<Attribute> required=EnumSet.of(Attribute.NAME); @TO@ final EnumSet<Attribute> required=EnumSet.of(Attribute.CATEGORY); @AT@ 7799 @LENGTH@ 63
---UPD VariableDeclarationFragment@@required=EnumSet.of(Attribute.NAME) @TO@ required=EnumSet.of(Attribute.CATEGORY) @AT@ 7824 @LENGTH@ 37
------UPD MethodInvocation@@EnumSet.of(Attribute.NAME) @TO@ EnumSet.of(Attribute.CATEGORY) @AT@ 7835 @LENGTH@ 26
---------UPD SimpleName@@MethodName:of:[Attribute.NAME] @TO@ MethodName:of:[Attribute.CATEGORY] @AT@ 7843 @LENGTH@ 18
------------UPD QualifiedName@@Attribute.NAME @TO@ Attribute.CATEGORY @AT@ 7846 @LENGTH@ 14
---------------UPD SimpleName@@NAME @TO@ CATEGORY @AT@ 7856 @LENGTH@ 4


UPD WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{            final ConnectorElement connector=new ConnectorElement(reader);            connectors.put(connector.getName(),connector);            break;          }default :        throw unexpectedElement(reader);    }    break;  }default :throw unexpectedElement(reader);}}} @TO@ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{      final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{          final ConnectorElement connector=new ConnectorElement(reader);          connectors.put(connector.getName(),connector);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}} @AT@ 4831 @LENGTH@ 866
---INS InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @TO@ WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{            final ConnectorElement connector=new ConnectorElement(reader);            connectors.put(connector.getName(),connector);            break;          }default :        throw unexpectedElement(reader);    }    break;  }default :throw unexpectedElement(reader);}}} @AT@ 4838 @LENGTH@ 51
------INS MethodInvocation@@reader.hasNext() @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 4838 @LENGTH@ 16
---------MOV SimpleName@@Name:reader @TO@ MethodInvocation@@reader.hasNext() @AT@ 4838 @LENGTH@ 6
---------MOV SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@reader.hasNext() @AT@ 4845 @LENGTH@ 9
------INS Operator@@&& @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 4854 @LENGTH@ 2
------INS InfixExpression@@reader.nextTag() != END_ELEMENT @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 4858 @LENGTH@ 31
---------MOV MethodInvocation@@reader.nextTag() @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 4874 @LENGTH@ 16
---------MOV Operator@@== @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 4890 @LENGTH@ 2
---------MOV SimpleName@@START_ELEMENT @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 4894 @LENGTH@ 13
---DEL MethodInvocation@@reader.hasNext() @AT@ 4838 @LENGTH@ 16
---DEL Block@@WhileBody:{  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{            final ConnectorElement connector=new ConnectorElement(reader);            connectors.put(connector.getName(),connector);            break;          }default :        throw unexpectedElement(reader);    }    break;  }default :throw unexpectedElement(reader);}}} @AT@ 4856 @LENGTH@ 841
------DEL IfStatement@@if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{      final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{          final ConnectorElement connector=new ConnectorElement(reader);          connectors.put(connector.getName(),connector);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}} @AT@ 4870 @LENGTH@ 817
---------DEL InfixExpression@@reader.nextTag() == START_ELEMENT @AT@ 4874 @LENGTH@ 33
---MOV Block@@ThenBody:{switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{      final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{          final ConnectorElement connector=new ConnectorElement(reader);          connectors.put(connector.getName(),connector);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}} @TO@ WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{            final ConnectorElement connector=new ConnectorElement(reader);            connectors.put(connector.getName(),connector);            break;          }default :        throw unexpectedElement(reader);    }    break;  }default :throw unexpectedElement(reader);}}} @AT@ 4909 @LENGTH@ 778


UPD MethodDeclaration@@public, void, MethodName:unregisterSocket, ManagedBinding binding,  @TO@ public, void, MethodName:unregisterBinding, ManagedBinding binding,  @AT@ 3925 @LENGTH@ 109
---UPD SimpleName@@MethodName:unregisterSocket @TO@ MethodName:unregisterBinding @AT@ 3937 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("c","b","a") @TO@ MethodInvocation:mock.expectedBodiesReceivedInAnyOrder("c","b","a") @AT@ 1216 @LENGTH@ 43
---UPD MethodInvocation@@mock.expectedBodiesReceived("c","b","a") @TO@ mock.expectedBodiesReceivedInAnyOrder("c","b","a") @AT@ 1216 @LENGTH@ 42
------UPD SimpleName@@MethodName:expectedBodiesReceived:["c", "b", "a"] @TO@ MethodName:expectedBodiesReceivedInAnyOrder:["c", "b", "a"] @AT@ 1221 @LENGTH@ 37


UPD IfStatement@@if (parameters != null) {  endpoint.configureProperties(parameters);  if (useIntrospectionOnEndpoint()) {    setProperties(endpoint,parameters);  }  if (!endpoint.isLenientProperties()) {    validateParameters(uri,parameters,null);  }} @TO@ if (parameters != null && !parameters.isEmpty()) {  endpoint.configureProperties(parameters);  if (useIntrospectionOnEndpoint()) {    setProperties(endpoint,parameters);  }  if (!endpoint.isLenientProperties()) {    validateParameters(uri,parameters,null);  }} @AT@ 2887 @LENGTH@ 550
---INS InfixExpression@@parameters != null && !parameters.isEmpty() @TO@ IfStatement@@if (parameters != null) {  endpoint.configureProperties(parameters);  if (useIntrospectionOnEndpoint()) {    setProperties(endpoint,parameters);  }  if (!endpoint.isLenientProperties()) {    validateParameters(uri,parameters,null);  }} @AT@ 2891 @LENGTH@ 43
------INS InfixExpression@@parameters != null @TO@ InfixExpression@@parameters != null && !parameters.isEmpty() @AT@ 2891 @LENGTH@ 18
---------MOV SimpleName@@parameters @TO@ InfixExpression@@parameters != null @AT@ 2891 @LENGTH@ 10
---------MOV Operator@@!= @TO@ InfixExpression@@parameters != null @AT@ 2901 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@parameters != null @AT@ 2905 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@parameters != null && !parameters.isEmpty() @AT@ 2909 @LENGTH@ 2
------INS PrefixExpression@@!parameters.isEmpty() @TO@ InfixExpression@@parameters != null && !parameters.isEmpty() @AT@ 2913 @LENGTH@ 21
---------INS Operator@@! @TO@ PrefixExpression@@!parameters.isEmpty() @AT@ 2913 @LENGTH@ 1
---------INS MethodInvocation@@parameters.isEmpty() @TO@ PrefixExpression@@!parameters.isEmpty() @AT@ 2914 @LENGTH@ 20
------------INS SimpleName@@Name:parameters @TO@ MethodInvocation@@parameters.isEmpty() @AT@ 2914 @LENGTH@ 10
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@parameters.isEmpty() @AT@ 2925 @LENGTH@ 9
---DEL InfixExpression@@parameters != null @AT@ 2891 @LENGTH@ 18


UPD MethodDeclaration@@public, void, MethodName:addJob, JobDetail job, Trigger trigger,  @TO@ public, void, MethodName:addJob, JobDetail job, Trigger trigger, SchedulerException,  @AT@ 6860 @LENGTH@ 233
---INS SimpleType@@SchedulerException @TO@ MethodDeclaration@@public, void, MethodName:addJob, JobDetail job, Trigger trigger,  @AT@ 6918 @LENGTH@ 18
---INS IfStatement@@if (scheduler == null) {  jobsToAdd.add(new JobToAdd(job,trigger));} else {  doAddJob(job,trigger);} @TO@ MethodDeclaration@@public, void, MethodName:addJob, JobDetail job, Trigger trigger,  @AT@ 6947 @LENGTH@ 315
------INS InfixExpression@@scheduler == null @TO@ IfStatement@@if (scheduler == null) {  jobsToAdd.add(new JobToAdd(job,trigger));} else {  doAddJob(job,trigger);} @AT@ 6951 @LENGTH@ 17
---------INS SimpleName@@scheduler @TO@ InfixExpression@@scheduler == null @AT@ 6951 @LENGTH@ 9
---------INS Operator@@== @TO@ InfixExpression@@scheduler == null @AT@ 6960 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@scheduler == null @AT@ 6964 @LENGTH@ 4
------INS Block@@ThenBody:{  jobsToAdd.add(new JobToAdd(job,trigger));} @TO@ IfStatement@@if (scheduler == null) {  jobsToAdd.add(new JobToAdd(job,trigger));} else {  doAddJob(job,trigger);} @AT@ 6970 @LENGTH@ 194
---------MOV ExpressionStatement@@MethodInvocation:jobsToAdd.add(new JobToAdd(job,trigger)) @TO@ Block@@ThenBody:{  jobsToAdd.add(new JobToAdd(job,trigger));} @AT@ 7045 @LENGTH@ 42
------INS Block@@ElseBody:{  doAddJob(job,trigger);} @TO@ IfStatement@@if (scheduler == null) {  jobsToAdd.add(new JobToAdd(job,trigger));} else {  doAddJob(job,trigger);} @AT@ 7170 @LENGTH@ 92
---------INS ExpressionStatement@@MethodInvocation:doAddJob(job,trigger) @TO@ Block@@ElseBody:{  doAddJob(job,trigger);} @AT@ 7229 @LENGTH@ 23
------------INS MethodInvocation@@doAddJob(job,trigger) @TO@ ExpressionStatement@@MethodInvocation:doAddJob(job,trigger) @AT@ 7229 @LENGTH@ 22
---------------INS SimpleName@@MethodName:doAddJob:[job, trigger] @TO@ MethodInvocation@@doAddJob(job,trigger) @AT@ 7229 @LENGTH@ 22
------------------INS SimpleName@@job @TO@ SimpleName@@MethodName:doAddJob:[job, trigger] @AT@ 7238 @LENGTH@ 3
------------------INS SimpleName@@trigger @TO@ SimpleName@@MethodName:doAddJob:[job, trigger] @AT@ 7243 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:registerSocket, ManagedBinding binding,  @TO@ public, void, MethodName:registerBinding, ManagedBinding binding,  @AT@ 3714 @LENGTH@ 113
---UPD SimpleName@@MethodName:registerSocket @TO@ MethodName:registerBinding @AT@ 3726 @LENGTH@ 14


UPD MethodDeclaration@@protected, voidMethodName:MessagingSubsystemElement,  @TO@ public, voidMethodName:MessagingSubsystemElement,  @AT@ 955 @LENGTH@ 154
---UPD Modifier@@protected @TO@ public @AT@ 955 @LENGTH@ 9


UPD Block@@ThenBody:{  byte[] buf=MinaConverter.toByteArray(in);  out.write(new String(buf,"US-ASCII"));  return true;} @TO@ ThenBody:{  byte[] buf=new byte[in.remaining()];  in.get(buf);  out.write(new String(buf,"US-ASCII"));  return true;} @AT@ 4611 @LENGTH@ 192
---UPD VariableDeclarationStatement@@byte[] buf=MinaConverter.toByteArray(in); @TO@ byte[] buf=new byte[in.remaining()]; @AT@ 4637 @LENGTH@ 43
------UPD VariableDeclarationFragment@@buf=MinaConverter.toByteArray(in) @TO@ buf=new byte[in.remaining()] @AT@ 4644 @LENGTH@ 35
---------DEL MethodInvocation@@MinaConverter.toByteArray(in) @AT@ 4650 @LENGTH@ 29
---------INS ArrayCreation@@new byte[in.remaining()] @TO@ VariableDeclarationFragment@@buf=MinaConverter.toByteArray(in) @AT@ 4650 @LENGTH@ 24
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[in.remaining()] @AT@ 4654 @LENGTH@ 20
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4654 @LENGTH@ 4
------------INS MethodInvocation@@in.remaining() @TO@ ArrayCreation@@new byte[in.remaining()] @AT@ 4659 @LENGTH@ 14
---------------MOV SimpleName@@Name:MinaConverter @TO@ MethodInvocation@@in.remaining() @AT@ 4650 @LENGTH@ 13
---------------MOV SimpleName@@MethodName:toByteArray:[in] @TO@ MethodInvocation@@in.remaining() @AT@ 4664 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:in.get(buf) @TO@ Block@@ThenBody:{  byte[] buf=MinaConverter.toByteArray(in);  out.write(new String(buf,"US-ASCII"));  return true;} @AT@ 4700 @LENGTH@ 12
------INS MethodInvocation@@in.get(buf) @TO@ ExpressionStatement@@MethodInvocation:in.get(buf) @AT@ 4700 @LENGTH@ 11
---------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.get(buf) @AT@ 4700 @LENGTH@ 2
---------INS SimpleName@@MethodName:get:[buf] @TO@ MethodInvocation@@in.get(buf) @AT@ 4703 @LENGTH@ 8
------------INS SimpleName@@buf @TO@ SimpleName@@MethodName:get:[buf] @AT@ 4707 @LENGTH@ 3


UPD Block@@ThenBody:{  GenericFile<T> newName=commitRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @TO@ ThenBody:{  Exchange copy=exchange.copy();  file.bindToExchange(copy);  copy.getIn().setMessageId(exchange.getIn().getMessageId());  copy.setExchangeId(exchange.getExchangeId());  GenericFile<T> newName=commitRenamer.renameFile(copy,file);  renameFile(operations,file,newName);} @AT@ 2851 @LENGTH@ 141
---MOV ExpressionStatement@@MethodInvocation:renameFile(operations,file,newName) @TO@ Block@@ThenBody:{  GenericFile<T> newName=commitRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 2504 @LENGTH@ 38
---UPD VariableDeclarationStatement@@GenericFile<T> newName=commitRenamer.renameFile(exchange,file); @TO@ GenericFile<T> newName=commitRenamer.renameFile(copy,file); @AT@ 2865 @LENGTH@ 66
------UPD VariableDeclarationFragment@@newName=commitRenamer.renameFile(exchange,file) @TO@ newName=commitRenamer.renameFile(copy,file) @AT@ 2880 @LENGTH@ 50
---------UPD MethodInvocation@@commitRenamer.renameFile(exchange,file) @TO@ commitRenamer.renameFile(copy,file) @AT@ 2890 @LENGTH@ 40
------------UPD SimpleName@@MethodName:renameFile:[exchange, file] @TO@ MethodName:renameFile:[copy, file] @AT@ 2904 @LENGTH@ 26
---------------UPD SimpleName@@exchange @TO@ copy @AT@ 2915 @LENGTH@ 8
---INS VariableDeclarationStatement@@Exchange copy=exchange.copy(); @TO@ Block@@ThenBody:{  GenericFile<T> newName=commitRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 3241 @LENGTH@ 32
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange copy=exchange.copy(); @AT@ 3241 @LENGTH@ 8
------INS VariableDeclarationFragment@@copy=exchange.copy() @TO@ VariableDeclarationStatement@@Exchange copy=exchange.copy(); @AT@ 3250 @LENGTH@ 22
---------INS SimpleName@@copy @TO@ VariableDeclarationFragment@@copy=exchange.copy() @AT@ 3250 @LENGTH@ 4
---------INS MethodInvocation@@exchange.copy() @TO@ VariableDeclarationFragment@@copy=exchange.copy() @AT@ 3257 @LENGTH@ 15
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.copy() @AT@ 3257 @LENGTH@ 8
------------INS SimpleName@@MethodName:copy:[] @TO@ MethodInvocation@@exchange.copy() @AT@ 3266 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:file.bindToExchange(copy) @TO@ Block@@ThenBody:{  GenericFile<T> newName=commitRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 3286 @LENGTH@ 26
------INS MethodInvocation@@file.bindToExchange(copy) @TO@ ExpressionStatement@@MethodInvocation:file.bindToExchange(copy) @AT@ 3286 @LENGTH@ 25
---------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.bindToExchange(copy) @AT@ 3286 @LENGTH@ 4
---------INS SimpleName@@MethodName:bindToExchange:[copy] @TO@ MethodInvocation@@file.bindToExchange(copy) @AT@ 3291 @LENGTH@ 20
------------INS SimpleName@@copy @TO@ SimpleName@@MethodName:bindToExchange:[copy] @AT@ 3306 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:copy.getIn().setMessageId(exchange.getIn().getMessageId()) @TO@ Block@@ThenBody:{  GenericFile<T> newName=commitRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 3365 @LENGTH@ 59
------INS MethodInvocation@@copy.getIn().setMessageId(exchange.getIn().getMessageId()) @TO@ ExpressionStatement@@MethodInvocation:copy.getIn().setMessageId(exchange.getIn().getMessageId()) @AT@ 3365 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@copy.getIn().setMessageId(exchange.getIn().getMessageId()) @AT@ 3365 @LENGTH@ 12
---------INS SimpleName@@Name:copy @TO@ MethodInvocation@@copy.getIn().setMessageId(exchange.getIn().getMessageId()) @AT@ 3365 @LENGTH@ 4
---------INS SimpleName@@MethodName:setMessageId:[exchange.getIn().getMessageId()] @TO@ MethodInvocation@@copy.getIn().setMessageId(exchange.getIn().getMessageId()) @AT@ 3378 @LENGTH@ 45
------------INS MethodInvocation@@exchange.getIn().getMessageId() @TO@ SimpleName@@MethodName:setMessageId:[exchange.getIn().getMessageId()] @AT@ 3391 @LENGTH@ 31
---------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getMessageId() @AT@ 3391 @LENGTH@ 16
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getMessageId() @AT@ 3391 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getMessageId:[] @TO@ MethodInvocation@@exchange.getIn().getMessageId() @AT@ 3408 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:copy.setExchangeId(exchange.getExchangeId()) @TO@ Block@@ThenBody:{  GenericFile<T> newName=commitRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 3437 @LENGTH@ 45
------INS MethodInvocation@@copy.setExchangeId(exchange.getExchangeId()) @TO@ ExpressionStatement@@MethodInvocation:copy.setExchangeId(exchange.getExchangeId()) @AT@ 3437 @LENGTH@ 44
---------INS SimpleName@@Name:copy @TO@ MethodInvocation@@copy.setExchangeId(exchange.getExchangeId()) @AT@ 3437 @LENGTH@ 4
---------INS SimpleName@@MethodName:setExchangeId:[exchange.getExchangeId()] @TO@ MethodInvocation@@copy.setExchangeId(exchange.getExchangeId()) @AT@ 3442 @LENGTH@ 39
------------INS MethodInvocation@@exchange.getExchangeId() @TO@ SimpleName@@MethodName:setExchangeId:[exchange.getExchangeId()] @AT@ 3456 @LENGTH@ 24
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 3456 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getExchangeId:[] @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 3465 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:httpEscapedCharacters, Exception,  @TO@ TypeDeclaration@@[public]HttpPathTest, BaseHttpTest @AT@ 1870 @LENGTH@ 334
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:httpEscapedCharacters, Exception,  @AT@ 1870 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:httpEscapedCharacters, Exception,  @AT@ 1877 @LENGTH@ 4
---INS SimpleName@@MethodName:httpEscapedCharacters @TO@ MethodDeclaration@@public, void, MethodName:httpEscapedCharacters, Exception,  @AT@ 1882 @LENGTH@ 21
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:httpEscapedCharacters, Exception,  @AT@ 1913 @LENGTH@ 9
---INS VariableDeclarationStatement@@Exchange exchange=template.request("http4://" + getHostName() + ":"+ getPort()+ "/test%20/path",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:httpEscapedCharacters, Exception,  @AT@ 1933 @LENGTH@ 230
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=template.request("http4://" + getHostName() + ":"+ getPort()+ "/test%20/path",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @AT@ 1933 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=template.request("http4://" + getHostName() + ":"+ getPort()+ "/test%20/path",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @TO@ VariableDeclarationStatement@@Exchange exchange=template.request("http4://" + getHostName() + ":"+ getPort()+ "/test%20/path",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @AT@ 1942 @LENGTH@ 220
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=template.request("http4://" + getHostName() + ":"+ getPort()+ "/test%20/path",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 1942 @LENGTH@ 8
---------INS MethodInvocation@@template.request("http4://" + getHostName() + ":"+ getPort()+ "/test%20/path",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @TO@ VariableDeclarationFragment@@exchange=template.request("http4://" + getHostName() + ":"+ getPort()+ "/test%20/path",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 1953 @LENGTH@ 209
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.request("http4://" + getHostName() + ":"+ getPort()+ "/test%20/path",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 1953 @LENGTH@ 8
------------INS SimpleName@@MethodName:request:["http4://" + getHostName() + ":"+ getPort()+ "/test%20/path", new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
] @TO@ MethodInvocation@@template.request("http4://" + getHostName() + ":"+ getPort()+ "/test%20/path",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 1962 @LENGTH@ 200
---------------INS InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test%20/path" @TO@ SimpleName@@MethodName:request:["http4://" + getHostName() + ":"+ getPort()+ "/test%20/path", new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
] @AT@ 1970 @LENGTH@ 62
------------------INS StringLiteral@@"http4://" @TO@ InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test%20/path" @AT@ 1970 @LENGTH@ 10
------------------INS Operator@@+ @TO@ InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test%20/path" @AT@ 1980 @LENGTH@ 1
------------------INS MethodInvocation@@MethodName:getHostName:[] @TO@ InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test%20/path" @AT@ 1983 @LENGTH@ 13
------------------INS StringLiteral@@":" @TO@ InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test%20/path" @AT@ 1999 @LENGTH@ 3
------------------INS MethodInvocation@@MethodName:getPort:[] @TO@ InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test%20/path" @AT@ 2005 @LENGTH@ 9
------------------INS StringLiteral@@"/test%20/path" @TO@ InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test%20/path" @AT@ 2017 @LENGTH@ 15
---------------INS ClassInstanceCreation@@Processor[] @TO@ SimpleName@@MethodName:request:["http4://" + getHostName() + ":"+ getPort()+ "/test%20/path", new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
] @AT@ 2034 @LENGTH@ 127
------------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 2034 @LENGTH@ 3
------------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 2038 @LENGTH@ 9
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 2050 @LENGTH@ 111
---------------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2064 @LENGTH@ 87
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2064 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2071 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2076 @LENGTH@ 7
------------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2084 @LENGTH@ 17
---------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2084 @LENGTH@ 8
---------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2093 @LENGTH@ 8
------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2110 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertExchange(exchange) @TO@ MethodDeclaration@@public, void, MethodName:httpEscapedCharacters, Exception,  @AT@ 2173 @LENGTH@ 25
------INS MethodInvocation@@assertExchange(exchange) @TO@ ExpressionStatement@@MethodInvocation:assertExchange(exchange) @AT@ 2173 @LENGTH@ 24
---------INS SimpleName@@MethodName:assertExchange:[exchange] @TO@ MethodInvocation@@assertExchange(exchange) @AT@ 2173 @LENGTH@ 24
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:assertExchange:[exchange] @AT@ 2188 @LENGTH@ 8


UPD MethodDeclaration@@private, void, MethodName:handleException, FlowExecutionException exception, RequestControlContext context, FlowExecutionException,  @TO@ private, void, MethodName:handleException, FlowExecutionException exception, RequestControlContext context, int handleExceptionCount,  @AT@ 20078 @LENGTH@ 984
---DEL SimpleType@@FlowExecutionException @AT@ 20182 @LENGTH@ 22
---UPD TryStatement@@try {  if (tryStateHandlers(exception,context) || tryFlowHandlers(exception,context)) {    handled=true;  }} catch (FlowExecutionException newException) {  handleException(newException,context);} @TO@ try {  if (tryStateHandlers(exception,context) || tryFlowHandlers(exception,context)) {    handled=true;  }} catch (FlowExecutionException newException) {  handleException(newException,context,handleExceptionCount + 1);  handled=true;} @AT@ 20607 @LENGTH@ 304
------UPD CatchClause@@catch (FlowExecutionException newException) {  handleException(newException,context);} @TO@ catch (FlowExecutionException newException) {  handleException(newException,context,handleExceptionCount + 1);  handled=true;} @AT@ 20728 @LENGTH@ 183
---------UPD ExpressionStatement@@MethodInvocation:handleException(newException,context) @TO@ MethodInvocation:handleException(newException,context,handleExceptionCount + 1) @AT@ 20868 @LENGTH@ 39
------------UPD MethodInvocation@@handleException(newException,context) @TO@ handleException(newException,context,handleExceptionCount + 1) @AT@ 20868 @LENGTH@ 38
---------------UPD SimpleName@@MethodName:handleException:[newException, context] @TO@ MethodName:handleException:[newException, context, handleExceptionCount + 1] @AT@ 20868 @LENGTH@ 38
------------------INS InfixExpression@@handleExceptionCount + 1 @TO@ SimpleName@@MethodName:handleException:[newException, context] @AT@ 21714 @LENGTH@ 24
---------------------INS SimpleName@@handleExceptionCount @TO@ InfixExpression@@handleExceptionCount + 1 @AT@ 21714 @LENGTH@ 20
---------------------INS Operator@@+ @TO@ InfixExpression@@handleExceptionCount + 1 @AT@ 21734 @LENGTH@ 1
---------------------INS NumberLiteral@@1 @TO@ InfixExpression@@handleExceptionCount + 1 @AT@ 21737 @LENGTH@ 1
---------INS ExpressionStatement@@Assignment:handled=true @TO@ CatchClause@@catch (FlowExecutionException newException) {  handleException(newException,context);} @AT@ 21744 @LENGTH@ 15
------------INS Assignment@@handled=true @TO@ ExpressionStatement@@Assignment:handled=true @AT@ 21744 @LENGTH@ 14
---------------INS SimpleName@@handled @TO@ Assignment@@handled=true @AT@ 21744 @LENGTH@ 7
---------------INS Operator@@= @TO@ Assignment@@handled=true @AT@ 21751 @LENGTH@ 1
---------------INS BooleanLiteral@@true @TO@ Assignment@@handled=true @AT@ 21754 @LENGTH@ 4
---INS SingleVariableDeclaration@@int handleExceptionCount @TO@ MethodDeclaration@@private, void, MethodName:handleException, FlowExecutionException exception, RequestControlContext context, FlowExecutionException,  @AT@ 20780 @LENGTH@ 24
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int handleExceptionCount @AT@ 20780 @LENGTH@ 3
------INS SimpleName@@handleExceptionCount @TO@ SingleVariableDeclaration@@int handleExceptionCount @AT@ 20784 @LENGTH@ 20
---INS IfStatement@@if (handleExceptionCount > 5) {  if (logger.isDebugEnabled()) {    logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]");  }  throw exception;} @TO@ MethodDeclaration@@private, void, MethodName:handleException, FlowExecutionException exception, RequestControlContext context, FlowExecutionException,  @AT@ 20863 @LENGTH@ 203
------INS InfixExpression@@handleExceptionCount > 5 @TO@ IfStatement@@if (handleExceptionCount > 5) {  if (logger.isDebugEnabled()) {    logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]");  }  throw exception;} @AT@ 20867 @LENGTH@ 24
---------INS SimpleName@@handleExceptionCount @TO@ InfixExpression@@handleExceptionCount > 5 @AT@ 20867 @LENGTH@ 20
---------INS Operator@@> @TO@ InfixExpression@@handleExceptionCount > 5 @AT@ 20887 @LENGTH@ 1
---------INS NumberLiteral@@5 @TO@ InfixExpression@@handleExceptionCount > 5 @AT@ 20890 @LENGTH@ 1
------INS Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]");  }  throw exception;} @TO@ IfStatement@@if (handleExceptionCount > 5) {  if (logger.isDebugEnabled()) {    logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]");  }  throw exception;} @AT@ 20893 @LENGTH@ 173
---------INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]");} @TO@ Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]");  }  throw exception;} @AT@ 20898 @LENGTH@ 144
------------INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]");} @AT@ 20902 @LENGTH@ 23
---------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 20902 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 20909 @LENGTH@ 16
------------INS Block@@ThenBody:{  logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]");} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]");} @AT@ 20927 @LENGTH@ 115
---------------INS ExpressionStatement@@MethodInvocation:logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]") @TO@ Block@@ThenBody:{  logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]");} @AT@ 20933 @LENGTH@ 104
------------------INS MethodInvocation@@logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]") @TO@ ExpressionStatement@@MethodInvocation:logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]") @AT@ 20933 @LENGTH@ 103
---------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]") @AT@ 20933 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:debug:["Exception not handled after 5 tries, aborting exception handling of [" + exception + "]"] @TO@ MethodInvocation@@logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]") @AT@ 20940 @LENGTH@ 96
------------------------INS InfixExpression@@"Exception not handled after 5 tries, aborting exception handling of [" + exception + "]" @TO@ SimpleName@@MethodName:debug:["Exception not handled after 5 tries, aborting exception handling of [" + exception + "]"] @AT@ 20946 @LENGTH@ 89
---------------------------INS StringLiteral@@"Exception not handled after 5 tries, aborting exception handling of [" @TO@ InfixExpression@@"Exception not handled after 5 tries, aborting exception handling of [" + exception + "]" @AT@ 20946 @LENGTH@ 71
---------------------------INS Operator@@+ @TO@ InfixExpression@@"Exception not handled after 5 tries, aborting exception handling of [" + exception + "]" @AT@ 21017 @LENGTH@ 1
---------------------------INS SimpleName@@exception @TO@ InfixExpression@@"Exception not handled after 5 tries, aborting exception handling of [" + exception + "]" @AT@ 21020 @LENGTH@ 9
---------------------------INS StringLiteral@@"]" @TO@ InfixExpression@@"Exception not handled after 5 tries, aborting exception handling of [" + exception + "]" @AT@ 21032 @LENGTH@ 3
---------INS ThrowStatement@@SimpleName:exception @TO@ Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Exception not handled after 5 tries, aborting exception handling of [" + exception + "]");  }  throw exception;} @AT@ 21046 @LENGTH@ 16
------------INS SimpleName@@exception @TO@ ThrowStatement@@SimpleName:exception @AT@ 21052 @LENGTH@ 9


UPD IfStatement@@if (path.startsWith("/") || path.startsWith("\\")) {  doChangeDirectory(path.substring(0,1));  path=path.substring(1);} @TO@ if (FileUtil.hasLeadingSeparator(path)) {  doChangeDirectory(path.substring(0,1));  path=path.substring(1);} @AT@ 13943 @LENGTH@ 188
---DEL InfixExpression@@path.startsWith("/") || path.startsWith("\\") @AT@ 13947 @LENGTH@ 45
------DEL MethodInvocation@@path.startsWith("/") @AT@ 13947 @LENGTH@ 20
------DEL Operator@@|| @AT@ 13967 @LENGTH@ 2
------DEL MethodInvocation@@path.startsWith("\\") @AT@ 13971 @LENGTH@ 21
---------DEL SimpleName@@Name:path @AT@ 13971 @LENGTH@ 4
---------DEL SimpleName@@MethodName:startsWith:["\\"] @AT@ 13976 @LENGTH@ 16
------------DEL StringLiteral@@"\\" @AT@ 13987 @LENGTH@ 4
---INS MethodInvocation@@FileUtil.hasLeadingSeparator(path) @TO@ IfStatement@@if (path.startsWith("/") || path.startsWith("\\")) {  doChangeDirectory(path.substring(0,1));  path=path.substring(1);} @AT@ 13947 @LENGTH@ 34
------MOV SimpleName@@Name:path @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator(path) @AT@ 13947 @LENGTH@ 4
------MOV SimpleName@@MethodName:startsWith:["/"] @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator(path) @AT@ 13952 @LENGTH@ 15
---------INS SimpleName@@path @TO@ SimpleName@@MethodName:startsWith:["/"] @AT@ 13976 @LENGTH@ 4


UPD IfStatement@@if (!entity.name().equals("")) {  return entity.name();} else {  return null;} @TO@ if (entity != null && !entity.name().equals("")) {  return entity.name();} else {  return null;} @AT@ 10521 @LENGTH@ 118
---INS InfixExpression@@entity != null && !entity.name().equals("") @TO@ IfStatement@@if (!entity.name().equals("")) {  return entity.name();} else {  return null;} @AT@ 10472 @LENGTH@ 43
------INS InfixExpression@@entity != null @TO@ InfixExpression@@entity != null && !entity.name().equals("") @AT@ 10472 @LENGTH@ 14
---------INS SimpleName@@entity @TO@ InfixExpression@@entity != null @AT@ 10472 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@entity != null @AT@ 10478 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@entity != null @AT@ 10482 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@entity != null && !entity.name().equals("") @AT@ 10486 @LENGTH@ 2
------MOV PrefixExpression@@!entity.name().equals("") @TO@ InfixExpression@@entity != null && !entity.name().equals("") @AT@ 10525 @LENGTH@ 25


INS ExpressionStatement@@Assignment:suspended=false @TO@ MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 1802 @LENGTH@ 18
---INS Assignment@@suspended=false @TO@ ExpressionStatement@@Assignment:suspended=false @AT@ 1802 @LENGTH@ 17
------INS SimpleName@@suspended @TO@ Assignment@@suspended=false @AT@ 1802 @LENGTH@ 9
------INS Operator@@= @TO@ Assignment@@suspended=false @AT@ 1811 @LENGTH@ 1
------INS BooleanLiteral@@false @TO@ Assignment@@suspended=false @AT@ 1814 @LENGTH@ 5


UPD IfStatement@@if (value != null) {  Assert.isInstanceOf(Serializable.class,value,"Value: [ " + value + "must be serializable.");  map.put(key,value);} else {  map.remove(key);} @TO@ if (value != null) {  Assert.isInstanceOf(Serializable.class,value,"Value: [ " + value + "must be serializable.");  Object result=map.put(key,value);  dirty=result == null || result != null && !result.equals(value);} else {  Object result=map.remove(key);  dirty=result != null;} @AT@ 3273 @LENGTH@ 179
---UPD Block@@ThenBody:{  Assert.isInstanceOf(Serializable.class,value,"Value: [ " + value + "must be serializable.");  map.put(key,value);} @TO@ ThenBody:{  Assert.isInstanceOf(Serializable.class,value,"Value: [ " + value + "must be serializable.");  Object result=map.put(key,value);  dirty=result == null || result != null && !result.equals(value);} @AT@ 3292 @LENGTH@ 127
------INS VariableDeclarationStatement@@Object result=map.put(key,value); @TO@ Block@@ThenBody:{  Assert.isInstanceOf(Serializable.class,value,"Value: [ " + value + "must be serializable.");  map.put(key,value);} @AT@ 3395 @LENGTH@ 36
---------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object result=map.put(key,value); @AT@ 3395 @LENGTH@ 6
---------INS VariableDeclarationFragment@@result=map.put(key,value) @TO@ VariableDeclarationStatement@@Object result=map.put(key,value); @AT@ 3402 @LENGTH@ 28
------------MOV MethodInvocation@@map.put(key,value) @TO@ VariableDeclarationFragment@@result=map.put(key,value) @AT@ 3395 @LENGTH@ 19
------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=map.put(key,value) @AT@ 3402 @LENGTH@ 6
------UPD ExpressionStatement@@MethodInvocation:map.put(key,value) @TO@ Assignment:dirty=result == null || result != null && !result.equals(value) @AT@ 3395 @LENGTH@ 20
---------INS Assignment@@dirty=result == null || result != null && !result.equals(value) @TO@ ExpressionStatement@@MethodInvocation:map.put(key,value) @AT@ 3435 @LENGTH@ 61
------------INS SimpleName@@dirty @TO@ Assignment@@dirty=result == null || result != null && !result.equals(value) @AT@ 3435 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@dirty=result == null || result != null && !result.equals(value) @AT@ 3440 @LENGTH@ 1
------------INS InfixExpression@@result == null || result != null && !result.equals(value) @TO@ Assignment@@dirty=result == null || result != null && !result.equals(value) @AT@ 3443 @LENGTH@ 53
---------------INS InfixExpression@@result == null @TO@ InfixExpression@@result == null || result != null && !result.equals(value) @AT@ 3443 @LENGTH@ 12
------------------INS SimpleName@@result @TO@ InfixExpression@@result == null @AT@ 3443 @LENGTH@ 6
------------------INS Operator@@== @TO@ InfixExpression@@result == null @AT@ 3449 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@result == null @AT@ 3451 @LENGTH@ 4
---------------INS Operator@@|| @TO@ InfixExpression@@result == null || result != null && !result.equals(value) @AT@ 3455 @LENGTH@ 2
---------------INS InfixExpression@@result != null && !result.equals(value) @TO@ InfixExpression@@result == null || result != null && !result.equals(value) @AT@ 3459 @LENGTH@ 37
------------------INS InfixExpression@@result != null @TO@ InfixExpression@@result != null && !result.equals(value) @AT@ 3459 @LENGTH@ 12
---------------------INS SimpleName@@result @TO@ InfixExpression@@result != null @AT@ 3459 @LENGTH@ 6
---------------------INS Operator@@!= @TO@ InfixExpression@@result != null @AT@ 3465 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@result != null @AT@ 3467 @LENGTH@ 4
------------------INS Operator@@&& @TO@ InfixExpression@@result != null && !result.equals(value) @AT@ 3471 @LENGTH@ 2
------------------INS PrefixExpression@@!result.equals(value) @TO@ InfixExpression@@result != null && !result.equals(value) @AT@ 3475 @LENGTH@ 21
---------------------INS Operator@@! @TO@ PrefixExpression@@!result.equals(value) @AT@ 3475 @LENGTH@ 1
---------------------INS MethodInvocation@@result.equals(value) @TO@ PrefixExpression@@!result.equals(value) @AT@ 3476 @LENGTH@ 20
------------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.equals(value) @AT@ 3476 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:equals:[value] @TO@ MethodInvocation@@result.equals(value) @AT@ 3483 @LENGTH@ 13
---------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 3490 @LENGTH@ 5
---UPD Block@@ElseBody:{  map.remove(key);} @TO@ ElseBody:{  Object result=map.remove(key);  dirty=result != null;} @AT@ 3427 @LENGTH@ 25
------UPD ExpressionStatement@@MethodInvocation:map.remove(key) @TO@ Assignment:dirty=result != null @AT@ 3432 @LENGTH@ 16
---------INS Assignment@@dirty=result != null @TO@ ExpressionStatement@@MethodInvocation:map.remove(key) @AT@ 3550 @LENGTH@ 20
------------INS SimpleName@@dirty @TO@ Assignment@@dirty=result != null @AT@ 3550 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@dirty=result != null @AT@ 3555 @LENGTH@ 1
------------INS InfixExpression@@result != null @TO@ Assignment@@dirty=result != null @AT@ 3558 @LENGTH@ 12
---------------INS SimpleName@@result @TO@ InfixExpression@@result != null @AT@ 3558 @LENGTH@ 6
---------------INS Operator@@!= @TO@ InfixExpression@@result != null @AT@ 3564 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@result != null @AT@ 3566 @LENGTH@ 4
------INS VariableDeclarationStatement@@Object result=map.remove(key); @TO@ Block@@ElseBody:{  map.remove(key);} @AT@ 3514 @LENGTH@ 32
---------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object result=map.remove(key); @AT@ 3514 @LENGTH@ 6
---------INS VariableDeclarationFragment@@result=map.remove(key) @TO@ VariableDeclarationStatement@@Object result=map.remove(key); @AT@ 3521 @LENGTH@ 24
------------MOV MethodInvocation@@map.remove(key) @TO@ VariableDeclarationFragment@@result=map.remove(key) @AT@ 3432 @LENGTH@ 15
------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=map.remove(key) @AT@ 3521 @LENGTH@ 6


UPD TryStatement@@try {  conn=dataSource.getConnection();  stmt=conn.createStatement();  if (parameters != null && !parameters.isEmpty()) {    IntrospectionSupport.setProperties(stmt,parameters);  }  if (LOG.isDebugEnabled()) {    LOG.debug("Executing JDBC statement: " + sql);  }  exchange.getOut().setHeaders(exchange.getIn().getHeaders());  if (stmt.execute(sql)) {    rs=stmt.getResultSet();    setResultSet(exchange,rs);  } else {    int updateCount=stmt.getUpdateCount();    exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT,updateCount);  }}  finally {  try {    if (rs != null) {      rs.close();    }    if (stmt != null) {      stmt.close();    }    if (conn != null) {      conn.close();    }  } catch (  SQLException e) {    LOG.warn("Error closing JDBC resource: " + e,e);  }} @TO@ try {  conn=dataSource.getConnection();  stmt=conn.createStatement();  if (parameters != null && !parameters.isEmpty()) {    IntrospectionSupport.setProperties(stmt,parameters);  }  if (LOG.isDebugEnabled()) {    LOG.debug("Executing JDBC statement: " + sql);  }  if (stmt.execute(sql)) {    rs=stmt.getResultSet();    setResultSet(exchange,rs);  } else {    int updateCount=stmt.getUpdateCount();    exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT,updateCount);  }}  finally {  try {    if (rs != null) {      rs.close();    }    if (stmt != null) {      stmt.close();    }    if (conn != null) {      conn.close();    }  } catch (  SQLException e) {    LOG.warn("Error closing JDBC resource: " + e,e);  }} @AT@ 2297 @LENGTH@ 1236


UPD ExpressionStatement@@MethodInvocation:assertEquals(7,set.size()) @TO@ MethodInvocation:assertTrue("Size should be 7 or higher, was: " + set.size(),set.size() >= 7) @AT@ 2245 @LENGTH@ 28
---UPD MethodInvocation@@assertEquals(7,set.size()) @TO@ assertTrue("Size should be 7 or higher, was: " + set.size(),set.size() >= 7) @AT@ 2245 @LENGTH@ 27
------UPD SimpleName@@MethodName:assertEquals:[7, set.size()] @TO@ MethodName:assertTrue:["Size should be 7 or higher, was: " + set.size(), set.size() >= 7] @AT@ 2245 @LENGTH@ 27
---------INS InfixExpression@@"Size should be 7 or higher, was: " + set.size() @TO@ SimpleName@@MethodName:assertEquals:[7, set.size()] @AT@ 2256 @LENGTH@ 48
------------INS StringLiteral@@"Size should be 7 or higher, was: " @TO@ InfixExpression@@"Size should be 7 or higher, was: " + set.size() @AT@ 2256 @LENGTH@ 35
------------INS Operator@@+ @TO@ InfixExpression@@"Size should be 7 or higher, was: " + set.size() @AT@ 2291 @LENGTH@ 1
------------INS MethodInvocation@@set.size() @TO@ InfixExpression@@"Size should be 7 or higher, was: " + set.size() @AT@ 2294 @LENGTH@ 10
---------------MOV SimpleName@@Name:set @TO@ MethodInvocation@@set.size() @AT@ 2261 @LENGTH@ 3
---------------MOV SimpleName@@Name:set @TO@ MethodInvocation@@set.size() @AT@ 2261 @LENGTH@ 3
---------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@set.size() @AT@ 2265 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@set.size() @AT@ 2265 @LENGTH@ 6
---------DEL NumberLiteral@@7 @AT@ 2258 @LENGTH@ 1
---------DEL MethodInvocation@@set.size() @AT@ 2261 @LENGTH@ 10
---------INS InfixExpression@@set.size() >= 7 @TO@ SimpleName@@MethodName:assertEquals:[7, set.size()] @AT@ 2306 @LENGTH@ 15
------------INS MethodInvocation@@set.size() @TO@ InfixExpression@@set.size() >= 7 @AT@ 2306 @LENGTH@ 10
---------------INS SimpleName@@Name:set @TO@ MethodInvocation@@set.size() @AT@ 2306 @LENGTH@ 3
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@set.size() @AT@ 2310 @LENGTH@ 6
------------INS Operator@@>= @TO@ InfixExpression@@set.size() >= 7 @AT@ 2316 @LENGTH@ 2
------------INS NumberLiteral@@7 @TO@ InfixExpression@@set.size() >= 7 @AT@ 2320 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:overdueEndpoint.setResultWaitTime(8000) @TO@ MethodInvocation:overdueEndpoint.setResultWaitTime(20000) @AT@ 2448 @LENGTH@ 40
---UPD MethodInvocation@@overdueEndpoint.setResultWaitTime(8000) @TO@ overdueEndpoint.setResultWaitTime(20000) @AT@ 2448 @LENGTH@ 39
------UPD SimpleName@@MethodName:setResultWaitTime:[8000] @TO@ MethodName:setResultWaitTime:[20000] @AT@ 2464 @LENGTH@ 23
---------UPD NumberLiteral@@8000 @TO@ 20000 @AT@ 2482 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:fieldSet.setDateFormat(dateFormat) @TO@ MethodInvocation:fieldSet.setNumberFormat(numberFormat) @AT@ 1551 @LENGTH@ 35
---UPD MethodInvocation@@fieldSet.setDateFormat(dateFormat) @TO@ fieldSet.setNumberFormat(numberFormat) @AT@ 1551 @LENGTH@ 34
------UPD SimpleName@@MethodName:setDateFormat:[dateFormat] @TO@ MethodName:setNumberFormat:[numberFormat] @AT@ 1560 @LENGTH@ 25
---------UPD SimpleName@@dateFormat @TO@ numberFormat @AT@ 1574 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:endLatch.await() @TO@ MethodInvocation:endLatch.await(30,TimeUnit.SECONDS) @AT@ 1764 @LENGTH@ 17
---UPD MethodInvocation@@endLatch.await() @TO@ endLatch.await(30,TimeUnit.SECONDS) @AT@ 1764 @LENGTH@ 16
------UPD SimpleName@@MethodName:await:[] @TO@ MethodName:await:[30, TimeUnit.SECONDS] @AT@ 1773 @LENGTH@ 7
---------INS NumberLiteral@@30 @TO@ SimpleName@@MethodName:await:[] @AT@ 1967 @LENGTH@ 2
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ SimpleName@@MethodName:await:[] @AT@ 1971 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 1971 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 1980 @LENGTH@ 7


MOV ExpressionStatement@@Assignment:this.name=readStringAttributeElement(reader,Attribute.NAME.getLocalName()) @TO@ MethodDeclaration@@public, voidMethodName:NicCriteriaElement, XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 1266 @LENGTH@ 78


MOV ExpressionStatement@@Assignment:canRun=true @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1786 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:connectors.add(new TransportConfiguration(connectorSpec.getFactoryClassName(),connectorSpec.getParams(),connectorSpec.getName())) @TO@ MethodInvocation:connectors.put(connectorSpec.getName(),new TransportConfiguration(connectorSpec.getFactoryClassName(),connectorSpec.getParams(),connectorSpec.getName())) @AT@ 5771 @LENGTH@ 132
---UPD MethodInvocation@@connectors.add(new TransportConfiguration(connectorSpec.getFactoryClassName(),connectorSpec.getParams(),connectorSpec.getName())) @TO@ connectors.put(connectorSpec.getName(),new TransportConfiguration(connectorSpec.getFactoryClassName(),connectorSpec.getParams(),connectorSpec.getName())) @AT@ 5771 @LENGTH@ 131
------UPD SimpleName@@MethodName:add:[new TransportConfiguration(connectorSpec.getFactoryClassName(),connectorSpec.getParams(),connectorSpec.getName())] @TO@ MethodName:put:[connectorSpec.getName(), new TransportConfiguration(connectorSpec.getFactoryClassName(),connectorSpec.getParams(),connectorSpec.getName())] @AT@ 5782 @LENGTH@ 120
---------INS MethodInvocation@@connectorSpec.getName() @TO@ SimpleName@@MethodName:add:[new TransportConfiguration(connectorSpec.getFactoryClassName(),connectorSpec.getParams(),connectorSpec.getName())] @AT@ 5778 @LENGTH@ 23
------------INS SimpleName@@Name:connectorSpec @TO@ MethodInvocation@@connectorSpec.getName() @AT@ 5778 @LENGTH@ 13
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@connectorSpec.getName() @AT@ 5792 @LENGTH@ 9


UPD TypeDeclaration@@[public]NullSubsystemParser, [XMLElementReader<ParseResult<NullSubsystemElement<Object>>>] @TO@ [public]NullSubsystemParser, [XMLElementReader<List<?>>] @AT@ 435 @LENGTH@ 505
---UPD ParameterizedType@@XMLElementReader<ParseResult<NullSubsystemElement<Object>>> @TO@ XMLElementReader<List<?>> @AT@ 487 @LENGTH@ 59
------DEL ParameterizedType@@ParseResult<NullSubsystemElement<Object>> @AT@ 504 @LENGTH@ 41
---------DEL SimpleType@@ParseResult @AT@ 504 @LENGTH@ 11
------MOV ParameterizedType@@NullSubsystemElement<Object> @TO@ ParameterizedType@@XMLElementReader<ParseResult<NullSubsystemElement<Object>>> @AT@ 516 @LENGTH@ 28
---------INS WildcardType@@? @TO@ ParameterizedType@@NullSubsystemElement<Object> @AT@ 494 @LENGTH@ 1
---------DEL SimpleType@@NullSubsystemElement @AT@ 516 @LENGTH@ 20
---------UPD SimpleType@@Object @TO@ List @AT@ 537 @LENGTH@ 6


UPD FieldDeclaration@@protected, static, final, String, [FTP_ROOT_DIR="res/home/"] @TO@ protected, static, final, String, [FTP_ROOT_DIR="res/home"] @AT@ 1483 @LENGTH@ 57
---UPD VariableDeclarationFragment@@FTP_ROOT_DIR="res/home/" @TO@ FTP_ROOT_DIR="res/home" @AT@ 1513 @LENGTH@ 26
------UPD StringLiteral@@"res/home/" @TO@ "res/home" @AT@ 1528 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:this.prefixes=prefixes @TO@ Assignment:this.prefixes=new String[prefixes.length] @AT@ 3987 @LENGTH@ 25
---UPD Assignment@@this.prefixes=prefixes @TO@ this.prefixes=new String[prefixes.length] @AT@ 3987 @LENGTH@ 24
------INS ArrayCreation@@new String[prefixes.length] @TO@ Assignment@@this.prefixes=prefixes @AT@ 4003 @LENGTH@ 27
---------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[prefixes.length] @AT@ 4007 @LENGTH@ 23
------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 4007 @LENGTH@ 6
---------INS QualifiedName@@prefixes.length @TO@ ArrayCreation@@new String[prefixes.length] @AT@ 4014 @LENGTH@ 15
------------INS SimpleName@@prefixes @TO@ QualifiedName@@prefixes.length @AT@ 4014 @LENGTH@ 8
------------INS SimpleName@@length @TO@ QualifiedName@@prefixes.length @AT@ 4023 @LENGTH@ 6
------DEL SimpleName@@prefixes @AT@ 4003 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)) @TO@ MethodInvocation:errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)) @AT@ 3330 @LENGTH@ 66
---UPD MethodInvocation@@errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)) @TO@ errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)) @AT@ 3330 @LENGTH@ 65
------UPD SimpleName@@MethodName:errorHandler:[deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)] @TO@ MethodName:errorHandler:[deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)] @AT@ 3330 @LENGTH@ 65
---------UPD MethodInvocation@@deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0) @TO@ deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0) @AT@ 3343 @LENGTH@ 51
------------UPD SimpleName@@MethodName:redeliverDelay:[0] @TO@ MethodName:redeliveryDelay:[0] @AT@ 3377 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:index.add("") @TO@ MethodDeclaration@@public, Collection<String>, MethodName:getPaths,  @AT@ 7643 @LENGTH@ 14
---INS MethodInvocation@@index.add("") @TO@ ExpressionStatement@@MethodInvocation:index.add("") @AT@ 7643 @LENGTH@ 13
------INS SimpleName@@Name:index @TO@ MethodInvocation@@index.add("") @AT@ 7643 @LENGTH@ 5
------INS SimpleName@@MethodName:add:[""] @TO@ MethodInvocation@@index.add("") @AT@ 7649 @LENGTH@ 7
---------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:add:[""] @AT@ 7653 @LENGTH@ 2


UPD VariableDeclarationStatement@@final Collection<TransportConfiguration> connectors=hqConfig.getConnectorConfigurations().values(); @TO@ final Map<String,TransportConfiguration> connectors=hqConfig.getConnectorConfigurations(); @AT@ 5587 @LENGTH@ 101
---UPD ParameterizedType@@Collection<TransportConfiguration> @TO@ Map<String,TransportConfiguration> @AT@ 5593 @LENGTH@ 34
------UPD SimpleType@@Collection @TO@ Map @AT@ 5593 @LENGTH@ 10
------INS SimpleType@@String @TO@ ParameterizedType@@Collection<TransportConfiguration> @AT@ 5597 @LENGTH@ 6
---UPD VariableDeclarationFragment@@connectors=hqConfig.getConnectorConfigurations().values() @TO@ connectors=hqConfig.getConnectorConfigurations() @AT@ 5628 @LENGTH@ 59
------UPD MethodInvocation@@hqConfig.getConnectorConfigurations().values() @TO@ hqConfig.getConnectorConfigurations() @AT@ 5641 @LENGTH@ 46
---------DEL MethodInvocation@@MethodName:getConnectorConfigurations:[] @AT@ 5641 @LENGTH@ 37
---------UPD SimpleName@@MethodName:values:[] @TO@ MethodName:getConnectorConfigurations:[] @AT@ 5679 @LENGTH@ 8


UPD IfStatement@@if (!endpoint.getConfiguration().isStepwise()) {  doChangeDirectory(path);} @TO@ if (!endpoint.getConfiguration().isStepwise()) {  doChangeDirectory(path);  return;} @AT@ 22367 @LENGTH@ 95
---UPD Block@@ThenBody:{  doChangeDirectory(path);} @TO@ ThenBody:{  doChangeDirectory(path);  return;} @AT@ 22414 @LENGTH@ 48
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  doChangeDirectory(path);} @AT@ 22465 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:ServiceHelper.stopServices(interceptor,target) @TO@ MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 3870 @LENGTH@ 48
---INS MethodInvocation@@ServiceHelper.stopServices(interceptor,target) @TO@ ExpressionStatement@@MethodInvocation:ServiceHelper.stopServices(interceptor,target) @AT@ 3870 @LENGTH@ 47
------INS SimpleName@@Name:ServiceHelper @TO@ MethodInvocation@@ServiceHelper.stopServices(interceptor,target) @AT@ 3870 @LENGTH@ 13
------INS SimpleName@@MethodName:stopServices:[interceptor, target] @TO@ MethodInvocation@@ServiceHelper.stopServices(interceptor,target) @AT@ 3884 @LENGTH@ 33
---------INS SimpleName@@interceptor @TO@ SimpleName@@MethodName:stopServices:[interceptor, target] @AT@ 3897 @LENGTH@ 11
---------INS SimpleName@@target @TO@ SimpleName@@MethodName:stopServices:[interceptor, target] @AT@ 3910 @LENGTH@ 6


UPD VariableDeclarationStatement@@BeanDefinitionHolder beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement); @TO@ BeanDefinitionHolder beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement,bd); @AT@ 3747 @LENGTH@ 112
---UPD VariableDeclarationFragment@@beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement) @TO@ beanDefinitionHolder=parserContext.getDelegate().parseBeanDefinitionElement(beanElement,bd) @AT@ 3768 @LENGTH@ 90
------UPD MethodInvocation@@parserContext.getDelegate().parseBeanDefinitionElement(beanElement) @TO@ parserContext.getDelegate().parseBeanDefinitionElement(beanElement,bd) @AT@ 3791 @LENGTH@ 67
---------UPD SimpleName@@MethodName:parseBeanDefinitionElement:[beanElement] @TO@ MethodName:parseBeanDefinitionElement:[beanElement, bd] @AT@ 3819 @LENGTH@ 39
------------INS SimpleName@@bd @TO@ SimpleName@@MethodName:parseBeanDefinitionElement:[beanElement] @AT@ 3859 @LENGTH@ 2


INS ExpressionStatement@@MethodInvocation:from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 1314 @LENGTH@ 763
---INS MethodInvocation@@from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @TO@ ExpressionStatement@@MethodInvocation:from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @AT@ 1314 @LENGTH@ 762
------INS MethodInvocation@@MethodName:end:[] @TO@ MethodInvocation@@from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @AT@ 1314 @LENGTH@ 724
------INS MethodInvocation@@MethodName:to:["mock:error"] @TO@ MethodInvocation@@from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @AT@ 1314 @LENGTH@ 669
---------INS StringLiteral@@"mock:error" @TO@ MethodInvocation@@MethodName:to:["mock:error"] @AT@ 1970 @LENGTH@ 12
------INS MethodInvocation@@MethodName:process:[new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
] @TO@ MethodInvocation@@from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @AT@ 1314 @LENGTH@ 627
---------INS ClassInstanceCreation@@Processor[] @TO@ MethodInvocation@@MethodName:process:[new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
] @AT@ 1505 @LENGTH@ 435
------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 1505 @LENGTH@ 3
------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 1509 @LENGTH@ 9
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 1521 @LENGTH@ 419
---------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 1551 @LENGTH@ 334
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 1551 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 1558 @LENGTH@ 4
------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 1563 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 1571 @LENGTH@ 17
---------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1571 @LENGTH@ 8
---------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1580 @LENGTH@ 8
------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 1597 @LENGTH@ 9
------------------INS VariableDeclarationStatement@@SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class); @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 1641 @LENGTH@ 119
---------------------INS SimpleType@@SoapFault @TO@ VariableDeclarationStatement@@SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class); @AT@ 1641 @LENGTH@ 9
---------------------INS VariableDeclarationFragment@@fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class) @TO@ VariableDeclarationStatement@@SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class); @AT@ 1651 @LENGTH@ 108
------------------------INS SimpleName@@fault @TO@ VariableDeclarationFragment@@fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class) @AT@ 1651 @LENGTH@ 5
------------------------INS MethodInvocation@@exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class) @TO@ VariableDeclarationFragment@@fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class) @AT@ 1695 @LENGTH@ 64
---------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class) @AT@ 1695 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:getProperty:[Exchange.EXCEPTION_CAUGHT, SoapFault.class] @TO@ MethodInvocation@@exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class) @AT@ 1704 @LENGTH@ 55
------------------------------INS QualifiedName@@Exchange.EXCEPTION_CAUGHT @TO@ SimpleName@@MethodName:getProperty:[Exchange.EXCEPTION_CAUGHT, SoapFault.class] @AT@ 1716 @LENGTH@ 25
---------------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.EXCEPTION_CAUGHT @AT@ 1716 @LENGTH@ 8
---------------------------------INS SimpleName@@EXCEPTION_CAUGHT @TO@ QualifiedName@@Exchange.EXCEPTION_CAUGHT @AT@ 1725 @LENGTH@ 16
------------------------------INS TypeLiteral@@SoapFault.class @TO@ SimpleName@@MethodName:getProperty:[Exchange.EXCEPTION_CAUGHT, SoapFault.class] @AT@ 1743 @LENGTH@ 15
------------------INS ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(fault.getDetail().getTextContent()) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 1793 @LENGTH@ 62
---------------------INS MethodInvocation@@exchange.getOut().setBody(fault.getDetail().getTextContent()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(fault.getDetail().getTextContent()) @AT@ 1793 @LENGTH@ 61
------------------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().setBody(fault.getDetail().getTextContent()) @AT@ 1793 @LENGTH@ 17
------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().setBody(fault.getDetail().getTextContent()) @AT@ 1793 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:setBody:[fault.getDetail().getTextContent()] @TO@ MethodInvocation@@exchange.getOut().setBody(fault.getDetail().getTextContent()) @AT@ 1811 @LENGTH@ 43
---------------------------INS MethodInvocation@@fault.getDetail().getTextContent() @TO@ SimpleName@@MethodName:setBody:[fault.getDetail().getTextContent()] @AT@ 1819 @LENGTH@ 34
------------------------------INS MethodInvocation@@MethodName:getDetail:[] @TO@ MethodInvocation@@fault.getDetail().getTextContent() @AT@ 1819 @LENGTH@ 17
------------------------------INS SimpleName@@Name:fault @TO@ MethodInvocation@@fault.getDetail().getTextContent() @AT@ 1819 @LENGTH@ 5
------------------------------INS SimpleName@@MethodName:getTextContent:[] @TO@ MethodInvocation@@fault.getDetail().getTextContent() @AT@ 1837 @LENGTH@ 16
------INS MethodInvocation@@MethodName:handled:[true] @TO@ MethodInvocation@@from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @AT@ 1314 @LENGTH@ 157
---------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:handled:[true] @AT@ 1466 @LENGTH@ 4
------INS MethodInvocation@@MethodName:maximumRedeliveries:[0] @TO@ MethodInvocation@@from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @AT@ 1314 @LENGTH@ 118
---------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:maximumRedeliveries:[0] @AT@ 1430 @LENGTH@ 1
------INS MethodInvocation@@MethodName:onException:[SoapFault.class] @TO@ MethodInvocation@@from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @AT@ 1314 @LENGTH@ 70
---------INS TypeLiteral@@SoapFault.class @TO@ MethodInvocation@@MethodName:onException:[SoapFault.class] @AT@ 1368 @LENGTH@ 15
------INS MethodInvocation@@MethodName:from:["direct:start"] @TO@ MethodInvocation@@from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @AT@ 1314 @LENGTH@ 20
---------INS StringLiteral@@"direct:start" @TO@ MethodInvocation@@MethodName:from:["direct:start"] @AT@ 1319 @LENGTH@ 14
------INS SimpleName@@MethodName:to:[SERVICE_URI] @TO@ MethodInvocation@@from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    SoapFault fault=exchange.getProperty(Exchange.EXCEPTION_CAUGHT,SoapFault.class);
    exchange.getOut().setBody(fault.getDetail().getTextContent());
  }
}
).to("mock:error").end().to(SERVICE_URI) @AT@ 2061 @LENGTH@ 15
---------INS SimpleName@@SERVICE_URI @TO@ SimpleName@@MethodName:to:[SERVICE_URI] @AT@ 2064 @LENGTH@ 11


UPD MethodDeclaration@@public, voidMethodName:AsmInstantiatorGenerator, ClassLoader classLoader,  @TO@ public, voidMethodName:AsmInstantiatorGenerator, final ClassLoader classLoader,  @AT@ 3122 @LENGTH@ 151
---UPD SingleVariableDeclaration@@ClassLoader classLoader @TO@ final ClassLoader classLoader @AT@ 3154 @LENGTH@ 23
------INS Modifier@@final @TO@ SingleVariableDeclaration@@ClassLoader classLoader @AT@ 3232 @LENGTH@ 5
---UPD ExpressionStatement@@Assignment:this.classLoader=new BytecodeClassLoader(classLoader) @TO@ Assignment:this.classLoader=AccessController.doPrivileged(new PrivilegedAction<BytecodeClassLoader>(){
  public BytecodeClassLoader run(){
    return new BytecodeClassLoader(classLoader);
  }
}
) @AT@ 3214 @LENGTH@ 56
------UPD Assignment@@this.classLoader=new BytecodeClassLoader(classLoader) @TO@ this.classLoader=AccessController.doPrivileged(new PrivilegedAction<BytecodeClassLoader>(){
  public BytecodeClassLoader run(){
    return new BytecodeClassLoader(classLoader);
  }
}
) @AT@ 3214 @LENGTH@ 55
---------DEL ClassInstanceCreation@@BytecodeClassLoader[classLoader] @AT@ 3233 @LENGTH@ 36
---------INS MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<BytecodeClassLoader>(){
  public BytecodeClassLoader run(){
    return new BytecodeClassLoader(classLoader);
  }
}
) @TO@ Assignment@@this.classLoader=new BytecodeClassLoader(classLoader) @AT@ 3317 @LENGTH@ 172
------------INS SimpleName@@Name:AccessController @TO@ MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<BytecodeClassLoader>(){
  public BytecodeClassLoader run(){
    return new BytecodeClassLoader(classLoader);
  }
}
) @AT@ 3317 @LENGTH@ 16
------------INS SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<BytecodeClassLoader>(){
  public BytecodeClassLoader run(){
    return new BytecodeClassLoader(classLoader);
  }
}
] @TO@ MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<BytecodeClassLoader>(){
  public BytecodeClassLoader run(){
    return new BytecodeClassLoader(classLoader);
  }
}
) @AT@ 3334 @LENGTH@ 155
---------------INS ClassInstanceCreation@@PrivilegedAction<BytecodeClassLoader>[] @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<BytecodeClassLoader>(){
  public BytecodeClassLoader run(){
    return new BytecodeClassLoader(classLoader);
  }
}
] @AT@ 3347 @LENGTH@ 141
------------------INS New@@new @TO@ ClassInstanceCreation@@PrivilegedAction<BytecodeClassLoader>[] @AT@ 3347 @LENGTH@ 3
------------------INS ParameterizedType@@PrivilegedAction<BytecodeClassLoader> @TO@ ClassInstanceCreation@@PrivilegedAction<BytecodeClassLoader>[] @AT@ 3351 @LENGTH@ 37
---------------------INS SimpleType@@PrivilegedAction @TO@ ParameterizedType@@PrivilegedAction<BytecodeClassLoader> @AT@ 3351 @LENGTH@ 16
---------------------INS SimpleType@@BytecodeClassLoader @TO@ ParameterizedType@@PrivilegedAction<BytecodeClassLoader> @AT@ 3368 @LENGTH@ 19
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@PrivilegedAction<BytecodeClassLoader>[] @AT@ 3391 @LENGTH@ 97
---------------------INS MethodDeclaration@@public, BytecodeClassLoader, MethodName:run,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3396 @LENGTH@ 88
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, BytecodeClassLoader, MethodName:run,  @AT@ 3396 @LENGTH@ 6
------------------------INS SimpleType@@BytecodeClassLoader @TO@ MethodDeclaration@@public, BytecodeClassLoader, MethodName:run,  @AT@ 3403 @LENGTH@ 19
------------------------INS SimpleName@@MethodName:run @TO@ MethodDeclaration@@public, BytecodeClassLoader, MethodName:run,  @AT@ 3423 @LENGTH@ 3
------------------------INS ReturnStatement@@ClassInstanceCreation:new BytecodeClassLoader(classLoader) @TO@ MethodDeclaration@@public, BytecodeClassLoader, MethodName:run,  @AT@ 3435 @LENGTH@ 44
---------------------------INS ClassInstanceCreation@@BytecodeClassLoader[classLoader] @TO@ ReturnStatement@@ClassInstanceCreation:new BytecodeClassLoader(classLoader) @AT@ 3442 @LENGTH@ 36
------------------------------MOV New@@new @TO@ ClassInstanceCreation@@BytecodeClassLoader[classLoader] @AT@ 3233 @LENGTH@ 3
------------------------------MOV SimpleType@@BytecodeClassLoader @TO@ ClassInstanceCreation@@BytecodeClassLoader[classLoader] @AT@ 3237 @LENGTH@ 19
------------------------------MOV SimpleName@@classLoader @TO@ ClassInstanceCreation@@BytecodeClassLoader[classLoader] @AT@ 3257 @LENGTH@ 11


UPD MethodDeclaration@@public, List<IndexColumn>, MethodName:getColumns,  @TO@ public, SortedSet<IndexColumn>, MethodName:getColumns,  @AT@ 986 @LENGTH@ 60
---UPD ParameterizedType@@List<IndexColumn> @TO@ SortedSet<IndexColumn> @AT@ 993 @LENGTH@ 17
------UPD SimpleType@@List @TO@ SortedSet @AT@ 993 @LENGTH@ 4


INS MethodDeclaration@@public, static, boolean, MethodName:hasLeadingSeparator, String name,  @TO@ TypeDeclaration@@[public, final]FileUtil,  @AT@ 2968 @LENGTH@ 254
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasLeadingSeparator, String name,  @AT@ 2968 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasLeadingSeparator, String name,  @AT@ 2975 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasLeadingSeparator, String name,  @AT@ 2982 @LENGTH@ 7
---INS SimpleName@@MethodName:hasLeadingSeparator @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasLeadingSeparator, String name,  @AT@ 2990 @LENGTH@ 19
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasLeadingSeparator, String name,  @AT@ 3010 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 3010 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 3017 @LENGTH@ 4
---INS IfStatement@@if (name == null) {  return false;} @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasLeadingSeparator, String name,  @AT@ 3033 @LENGTH@ 55
------INS InfixExpression@@name == null @TO@ IfStatement@@if (name == null) {  return false;} @AT@ 3037 @LENGTH@ 12
---------INS SimpleName@@name @TO@ InfixExpression@@name == null @AT@ 3037 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@name == null @AT@ 3041 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@name == null @AT@ 3045 @LENGTH@ 4
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (name == null) {  return false;} @AT@ 3051 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 3065 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3072 @LENGTH@ 5
---INS IfStatement@@if (name.startsWith("/") || name.startsWith(File.separator)) {  return true;} @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasLeadingSeparator, String name,  @AT@ 3097 @LENGTH@ 97
------INS InfixExpression@@name.startsWith("/") || name.startsWith(File.separator) @TO@ IfStatement@@if (name.startsWith("/") || name.startsWith(File.separator)) {  return true;} @AT@ 3101 @LENGTH@ 55
---------INS MethodInvocation@@name.startsWith("/") @TO@ InfixExpression@@name.startsWith("/") || name.startsWith(File.separator) @AT@ 3101 @LENGTH@ 20
------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.startsWith("/") @AT@ 3101 @LENGTH@ 4
------------INS SimpleName@@MethodName:startsWith:["/"] @TO@ MethodInvocation@@name.startsWith("/") @AT@ 3106 @LENGTH@ 15
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:startsWith:["/"] @AT@ 3117 @LENGTH@ 3
---------INS Operator@@|| @TO@ InfixExpression@@name.startsWith("/") || name.startsWith(File.separator) @AT@ 3121 @LENGTH@ 2
---------INS MethodInvocation@@name.startsWith(File.separator) @TO@ InfixExpression@@name.startsWith("/") || name.startsWith(File.separator) @AT@ 3125 @LENGTH@ 31
------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.startsWith(File.separator) @AT@ 3125 @LENGTH@ 4
------------INS SimpleName@@MethodName:startsWith:[File.separator] @TO@ MethodInvocation@@name.startsWith(File.separator) @AT@ 3130 @LENGTH@ 26
---------------INS QualifiedName@@File.separator @TO@ SimpleName@@MethodName:startsWith:[File.separator] @AT@ 3141 @LENGTH@ 14
------------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 3141 @LENGTH@ 4
------------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 3146 @LENGTH@ 9
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (name.startsWith("/") || name.startsWith(File.separator)) {  return true;} @AT@ 3158 @LENGTH@ 36
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 3172 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 3179 @LENGTH@ 4
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasLeadingSeparator, String name,  @AT@ 3203 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3210 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testGetJobExecutionsPastEnd,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("/test-config.xml"), public]JdbcSearchableJobExecutionDaoTests,  @AT@ 3386 @LENGTH@ 166
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetJobExecutionsPastEnd,  @AT@ 3386 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetJobExecutionsPastEnd,  @AT@ 3393 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetJobExecutionsPastEnd @TO@ MethodDeclaration@@public, void, MethodName:testGetJobExecutionsPastEnd,  @AT@ 3398 @LENGTH@ 27
---INS VariableDeclarationStatement@@List<JobExecution> jobExecutions=dao.getJobExecutions("job",100,100); @TO@ MethodDeclaration@@public, void, MethodName:testGetJobExecutionsPastEnd,  @AT@ 3433 @LENGTH@ 73
------INS ParameterizedType@@List<JobExecution> @TO@ VariableDeclarationStatement@@List<JobExecution> jobExecutions=dao.getJobExecutions("job",100,100); @AT@ 3433 @LENGTH@ 18
---------INS SimpleType@@List @TO@ ParameterizedType@@List<JobExecution> @AT@ 3433 @LENGTH@ 4
---------INS SimpleType@@JobExecution @TO@ ParameterizedType@@List<JobExecution> @AT@ 3438 @LENGTH@ 12
------INS VariableDeclarationFragment@@jobExecutions=dao.getJobExecutions("job",100,100) @TO@ VariableDeclarationStatement@@List<JobExecution> jobExecutions=dao.getJobExecutions("job",100,100); @AT@ 3452 @LENGTH@ 53
---------INS SimpleName@@jobExecutions @TO@ VariableDeclarationFragment@@jobExecutions=dao.getJobExecutions("job",100,100) @AT@ 3452 @LENGTH@ 13
---------INS MethodInvocation@@dao.getJobExecutions("job",100,100) @TO@ VariableDeclarationFragment@@jobExecutions=dao.getJobExecutions("job",100,100) @AT@ 3468 @LENGTH@ 37
------------INS SimpleName@@Name:dao @TO@ MethodInvocation@@dao.getJobExecutions("job",100,100) @AT@ 3468 @LENGTH@ 3
------------INS SimpleName@@MethodName:getJobExecutions:["job", 100, 100] @TO@ MethodInvocation@@dao.getJobExecutions("job",100,100) @AT@ 3472 @LENGTH@ 33
---------------INS StringLiteral@@"job" @TO@ SimpleName@@MethodName:getJobExecutions:["job", 100, 100] @AT@ 3489 @LENGTH@ 5
---------------INS NumberLiteral@@100 @TO@ SimpleName@@MethodName:getJobExecutions:["job", 100, 100] @AT@ 3496 @LENGTH@ 3
---------------INS NumberLiteral@@100 @TO@ SimpleName@@MethodName:getJobExecutions:["job", 100, 100] @AT@ 3501 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals(0,jobExecutions.size()) @TO@ MethodDeclaration@@public, void, MethodName:testGetJobExecutionsPastEnd,  @AT@ 3510 @LENGTH@ 38
------INS MethodInvocation@@assertEquals(0,jobExecutions.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(0,jobExecutions.size()) @AT@ 3510 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertEquals:[0, jobExecutions.size()] @TO@ MethodInvocation@@assertEquals(0,jobExecutions.size()) @AT@ 3510 @LENGTH@ 37
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[0, jobExecutions.size()] @AT@ 3523 @LENGTH@ 1
------------INS MethodInvocation@@jobExecutions.size() @TO@ SimpleName@@MethodName:assertEquals:[0, jobExecutions.size()] @AT@ 3526 @LENGTH@ 20
---------------INS SimpleName@@Name:jobExecutions @TO@ MethodInvocation@@jobExecutions.size() @AT@ 3526 @LENGTH@ 13
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@jobExecutions.size() @AT@ 3540 @LENGTH@ 6


UPD VariableDeclarationStatement@@String response=template.extractFutureBody(future,String.class); @TO@ String response=(String)template.extractFutureBody(future,String.class); @AT@ 2525 @LENGTH@ 67
---UPD VariableDeclarationFragment@@response=template.extractFutureBody(future,String.class) @TO@ response=(String)template.extractFutureBody(future,String.class) @AT@ 2532 @LENGTH@ 59
------INS CastExpression@@(String)template.extractFutureBody(future,String.class) @TO@ VariableDeclarationFragment@@response=template.extractFutureBody(future,String.class) @AT@ 2595 @LENGTH@ 57
---------MOV MethodInvocation@@template.extractFutureBody(future,String.class) @TO@ CastExpression@@(String)template.extractFutureBody(future,String.class) @AT@ 2543 @LENGTH@ 48
---------INS SimpleType@@String @TO@ CastExpression@@(String)template.extractFutureBody(future,String.class) @AT@ 2596 @LENGTH@ 6


UPD IfStatement@@if (isRoundRobin()) {  log.debug("Failover is round robin enabled and therefore starting from the first endpoint");  index.set(0);  counter.set(0);} else {  log.debug("Braking out of failover as we reach the end of endpoints to use for failover");  callback.done(doneSync);} @TO@ if (isRoundRobin()) {  log.debug("Failover is round robin enabled and therefore starting from the first endpoint");  index.set(0);  counter.set(0);} else {  log.debug("Braking out of failover as we reach the end of endpoints to use for failover");  callback.done(doneSync);  return;} @AT@ 7555 @LENGTH@ 484
---UPD Block@@ElseBody:{  log.debug("Braking out of failover as we reach the end of endpoints to use for failover");  callback.done(doneSync);} @TO@ ElseBody:{  log.debug("Braking out of failover as we reach the end of endpoints to use for failover");  callback.done(doneSync);  return;} @AT@ 7799 @LENGTH@ 240
------INS ReturnStatement@@ @TO@ Block@@ElseBody:{  log.debug("Braking out of failover as we reach the end of endpoints to use for failover");  callback.done(doneSync);} @AT@ 8042 @LENGTH@ 7


DEL MethodDeclaration@@public, void, MethodName:testNothing,  @AT@ 1960 @LENGTH@ 44
---DEL Modifier@@public @AT@ 1960 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1967 @LENGTH@ 4
---DEL SimpleName@@MethodName:testNothing @AT@ 1972 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodDeclaration@@public, void, MethodName:testExchangeRedeliverySync, Exception,  @AT@ 3251 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 3251 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 3251 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 3258 @LENGTH@ 11
---------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 3264 @LENGTH@ 4


INS IfStatement@@if (name == null) {  throw new IllegalArgumentException("name is null");} @TO@ MethodDeclaration@@public, voidMethodName:SocketBindingAdd, String name, int port,  @AT@ 1918 @LENGTH@ 93
---INS InfixExpression@@name == null @TO@ IfStatement@@if (name == null) {  throw new IllegalArgumentException("name is null");} @AT@ 1922 @LENGTH@ 12
------INS SimpleName@@name @TO@ InfixExpression@@name == null @AT@ 1922 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@name == null @AT@ 1926 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@name == null @AT@ 1930 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new IllegalArgumentException("name is null");} @TO@ IfStatement@@if (name == null) {  throw new IllegalArgumentException("name is null");} @AT@ 1936 @LENGTH@ 75
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("name is null") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("name is null");} @AT@ 1950 @LENGTH@ 51
---------INS ClassInstanceCreation@@IllegalArgumentException["name is null"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("name is null") @AT@ 1956 @LENGTH@ 44
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["name is null"] @AT@ 1956 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["name is null"] @AT@ 1960 @LENGTH@ 24
------------INS StringLiteral@@"name is null" @TO@ ClassInstanceCreation@@IllegalArgumentException["name is null"] @AT@ 1985 @LENGTH@ 14


UPD EnhancedForStatement@@for (MBeanServer server : MBeanServerFactory.findMBeanServer(null)) {  MBeanServerFactory.releaseMBeanServer(server);} @TO@ for (MBeanServer server : (List<MBeanServer>)MBeanServerFactory.findMBeanServer(null)) {  MBeanServerFactory.releaseMBeanServer(server);} @AT@ 8500 @LENGTH@ 138
---INS CastExpression@@(List<MBeanServer>)MBeanServerFactory.findMBeanServer(null) @TO@ EnhancedForStatement@@for (MBeanServer server : MBeanServerFactory.findMBeanServer(null)) {  MBeanServerFactory.releaseMBeanServer(server);} @AT@ 8526 @LENGTH@ 59
------MOV MethodInvocation@@MBeanServerFactory.findMBeanServer(null) @TO@ CastExpression@@(List<MBeanServer>)MBeanServerFactory.findMBeanServer(null) @AT@ 8526 @LENGTH@ 40
------INS ParameterizedType@@List<MBeanServer> @TO@ CastExpression@@(List<MBeanServer>)MBeanServerFactory.findMBeanServer(null) @AT@ 8527 @LENGTH@ 17
---------INS SimpleType@@List @TO@ ParameterizedType@@List<MBeanServer> @AT@ 8527 @LENGTH@ 4
---------INS SimpleType@@MBeanServer @TO@ ParameterizedType@@List<MBeanServer> @AT@ 8532 @LENGTH@ 11


UPD FieldDeclaration@@static, final, String, [RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @TO@ static, final, String, [RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @AT@ 8219 @LENGTH@ 95
---UPD VariableDeclarationFragment@@RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8239 @LENGTH@ 74
------UPD StringLiteral@@"https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ "http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8253 @LENGTH@ 60


UPD ExpressionStatement@@MethodInvocation:assertEquals(false,suspended.booleanValue()) @TO@ MethodInvocation:assertEquals("Started",status) @AT@ 2386 @LENGTH@ 46
---UPD MethodInvocation@@assertEquals(false,suspended.booleanValue()) @TO@ assertEquals("Started",status) @AT@ 2386 @LENGTH@ 45
------UPD SimpleName@@MethodName:assertEquals:[false, suspended.booleanValue()] @TO@ MethodName:assertEquals:["Started", status] @AT@ 2386 @LENGTH@ 45
---------INS StringLiteral@@"Started" @TO@ SimpleName@@MethodName:assertEquals:[false, suspended.booleanValue()] @AT@ 2390 @LENGTH@ 9
---------DEL BooleanLiteral@@false @AT@ 2399 @LENGTH@ 5
---------INS SimpleName@@status @TO@ SimpleName@@MethodName:assertEquals:[false, suspended.booleanValue()] @AT@ 2401 @LENGTH@ 6
---------DEL MethodInvocation@@suspended.booleanValue() @AT@ 2406 @LENGTH@ 24
------------DEL SimpleName@@Name:suspended @AT@ 2406 @LENGTH@ 9
------------DEL SimpleName@@MethodName:booleanValue:[] @AT@ 2416 @LENGTH@ 14


MOV ExpressionStatement@@MethodInvocation:streamWriter.writeEmptyElement(Element.BEAN_VALIDATION.getLocalName()) @TO@ MethodDeclaration@@public, void, MethodName:writeContent, XMLExtendedStreamWriter streamWriter, XMLStreamException,  @AT@ 2243 @LENGTH@ 71


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setHeaders(exchange.getIn().getHeaders()) @TO@ MethodInvocation:exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders()) @AT@ 3442 @LENGTH@ 60
---UPD MethodInvocation@@exchange.getOut().setHeaders(exchange.getIn().getHeaders()) @TO@ exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders()) @AT@ 3442 @LENGTH@ 59
------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getOut().setHeaders(exchange.getIn().getHeaders()) @AT@ 3442 @LENGTH@ 30
------UPD SimpleName@@MethodName:setHeaders:[exchange.getIn().getHeaders()] @TO@ MethodName:putAll:[exchange.getIn().getHeaders()] @AT@ 3460 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:assertNotSame("Should use a different thread when doing async routing",thread1,thread2) @TO@ MethodInvocation:assertEquals("Should use a same thread when doing transacted async routing",thread1,thread2) @AT@ 2875 @LENGTH@ 90
---UPD MethodInvocation@@assertNotSame("Should use a different thread when doing async routing",thread1,thread2) @TO@ assertEquals("Should use a same thread when doing transacted async routing",thread1,thread2) @AT@ 2875 @LENGTH@ 89
------UPD SimpleName@@MethodName:assertNotSame:["Should use a different thread when doing async routing", thread1, thread2] @TO@ MethodName:assertEquals:["Should use a same thread when doing transacted async routing", thread1, thread2] @AT@ 2875 @LENGTH@ 89
---------UPD StringLiteral@@"Should use a different thread when doing async routing" @TO@ "Should use a same thread when doing transacted async routing" @AT@ 2889 @LENGTH@ 56


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)) @TO@ MethodInvocation:errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)) @AT@ 3938 @LENGTH@ 66
---UPD MethodInvocation@@errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)) @TO@ errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)) @AT@ 3938 @LENGTH@ 65
------UPD SimpleName@@MethodName:errorHandler:[deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)] @TO@ MethodName:errorHandler:[deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)] @AT@ 3938 @LENGTH@ 65
---------UPD MethodInvocation@@deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0) @TO@ deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0) @AT@ 3951 @LENGTH@ 51
------------UPD SimpleName@@MethodName:redeliverDelay:[0] @TO@ MethodName:redeliveryDelay:[0] @AT@ 3985 @LENGTH@ 17


UPD TypeDeclaration@@[public]TestPredicateUtils, BasicPredicateTestBase @TO@ [@SuppressWarnings("boxing"), public]TestPredicateUtils, BasicPredicateTestBase @AT@ 2076 @LENGTH@ 32951
---INS SingleMemberAnnotation@@@SuppressWarnings("boxing") @TO@ TypeDeclaration@@[public]TestPredicateUtils, BasicPredicateTestBase @AT@ 2076 @LENGTH@ 27


UPD ReturnStatement@@CastExpression:(BulkTest)con.newInstance(new Object[]{m.getName()}) @TO@ MethodInvocation:con.newInstance(new Object[]{m.getName()}) @AT@ 13821 @LENGTH@ 64
---DEL CastExpression@@(BulkTest)con.newInstance(new Object[]{m.getName()}) @AT@ 13828 @LENGTH@ 56
------DEL SimpleType@@BulkTest @AT@ 13829 @LENGTH@ 8
---MOV MethodInvocation@@con.newInstance(new Object[]{m.getName()}) @TO@ ReturnStatement@@CastExpression:(BulkTest)con.newInstance(new Object[]{m.getName()}) @AT@ 13839 @LENGTH@ 45


UPD Block@@ThenBody:{  assertNotNull("Expected to find a parent directory for " + f.getAbsolutePath(),f.getParentFile());  f=f.getParentFile();  f=new File(f,"build");  assertTrue("The server 'build' dir exists",f.exists());  f=new File(f,"target");  f=new File(f,Version.AS_VERSION);  if (!f.exists())   fail("The server hasn't been built yet.");  assertTrue("The server 'build/target' dir exists",f.exists());  return f.getAbsolutePath();} @TO@ ThenBody:{  assertNotNull("Expected to find a parent directory for " + f.getAbsolutePath(),f.getParentFile());  f=f.getParentFile();  f=new File(f,"build");  assertTrue("The server 'build' dir exists",f.exists());  f=new File(f,"target");  File[] children=f.listFiles();  f=null;  if (children != null)   for (  File child : children)   if (child.getName().startsWith("jboss-"))   f=child;  if (f == null || !f.exists())   fail("The server hasn't been built yet.");  assertTrue("The server 'build/target' dir exists",f.exists());  return f.getAbsolutePath();} @AT@ 8767 @LENGTH@ 567
---INS VariableDeclarationStatement@@File[] children=f.listFiles(); @TO@ Block@@ThenBody:{  assertNotNull("Expected to find a parent directory for " + f.getAbsolutePath(),f.getParentFile());  f=f.getParentFile();  f=new File(f,"build");  assertTrue("The server 'build' dir exists",f.exists());  f=new File(f,"target");  f=new File(f,Version.AS_VERSION);  if (!f.exists())   fail("The server hasn't been built yet.");  assertTrue("The server 'build/target' dir exists",f.exists());  return f.getAbsolutePath();} @AT@ 9043 @LENGTH@ 32
------INS ArrayType@@File[] @TO@ VariableDeclarationStatement@@File[] children=f.listFiles(); @AT@ 9043 @LENGTH@ 6
---------INS SimpleType@@File @TO@ ArrayType@@File[] @AT@ 9043 @LENGTH@ 4
------INS VariableDeclarationFragment@@children=f.listFiles() @TO@ VariableDeclarationStatement@@File[] children=f.listFiles(); @AT@ 9050 @LENGTH@ 24
---------INS SimpleName@@children @TO@ VariableDeclarationFragment@@children=f.listFiles() @AT@ 9050 @LENGTH@ 8
---------INS MethodInvocation@@f.listFiles() @TO@ VariableDeclarationFragment@@children=f.listFiles() @AT@ 9061 @LENGTH@ 13
------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.listFiles() @AT@ 9061 @LENGTH@ 1
------------INS SimpleName@@MethodName:listFiles:[] @TO@ MethodInvocation@@f.listFiles() @AT@ 9063 @LENGTH@ 11
---DEL ExpressionStatement@@Assignment:f=new File(f,Version.AS_VERSION) @AT@ 9080 @LENGTH@ 36
------DEL Assignment@@f=new File(f,Version.AS_VERSION) @AT@ 9080 @LENGTH@ 35
---------DEL ClassInstanceCreation@@File[f, Version.AS_VERSION] @AT@ 9084 @LENGTH@ 31
------------DEL New@@new @AT@ 9084 @LENGTH@ 3
------------DEL SimpleType@@File @AT@ 9088 @LENGTH@ 4
------------DEL SimpleName@@f @AT@ 9093 @LENGTH@ 1
------------DEL QualifiedName@@Version.AS_VERSION @AT@ 9096 @LENGTH@ 18
---------------DEL SimpleName@@Version @AT@ 9096 @LENGTH@ 7
---------------DEL SimpleName@@AS_VERSION @AT@ 9104 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:f=null @TO@ Block@@ThenBody:{  assertNotNull("Expected to find a parent directory for " + f.getAbsolutePath(),f.getParentFile());  f=f.getParentFile();  f=new File(f,"build");  assertTrue("The server 'build' dir exists",f.exists());  f=new File(f,"target");  f=new File(f,Version.AS_VERSION);  if (!f.exists())   fail("The server hasn't been built yet.");  assertTrue("The server 'build/target' dir exists",f.exists());  return f.getAbsolutePath();} @AT@ 9089 @LENGTH@ 9
------INS Assignment@@f=null @TO@ ExpressionStatement@@Assignment:f=null @AT@ 9089 @LENGTH@ 8
---------MOV SimpleName@@f @TO@ Assignment@@f=null @AT@ 9080 @LENGTH@ 1
---------MOV Operator@@= @TO@ Assignment@@f=null @AT@ 9081 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ Assignment@@f=null @AT@ 9093 @LENGTH@ 4
---INS IfStatement@@if (children != null) for (File child : children) if (child.getName().startsWith("jboss-")) f=child; @TO@ Block@@ThenBody:{  assertNotNull("Expected to find a parent directory for " + f.getAbsolutePath(),f.getParentFile());  f=f.getParentFile();  f=new File(f,"build");  assertTrue("The server 'build' dir exists",f.exists());  f=new File(f,"target");  f=new File(f,Version.AS_VERSION);  if (!f.exists())   fail("The server hasn't been built yet.");  assertTrue("The server 'build/target' dir exists",f.exists());  return f.getAbsolutePath();} @AT@ 9112 @LENGTH@ 165
------INS InfixExpression@@children != null @TO@ IfStatement@@if (children != null) for (File child : children) if (child.getName().startsWith("jboss-")) f=child; @AT@ 9116 @LENGTH@ 16
---------INS SimpleName@@children @TO@ InfixExpression@@children != null @AT@ 9116 @LENGTH@ 8
---------INS Operator@@!= @TO@ InfixExpression@@children != null @AT@ 9124 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@children != null @AT@ 9128 @LENGTH@ 4
------INS Block@@ThenBody:for (File child : children) if (child.getName().startsWith("jboss-")) f=child; @TO@ IfStatement@@if (children != null) for (File child : children) if (child.getName().startsWith("jboss-")) f=child; @AT@ 9151 @LENGTH@ 126
---------INS EnhancedForStatement@@for (File child : children) if (child.getName().startsWith("jboss-")) f=child; @TO@ Block@@ThenBody:for (File child : children) if (child.getName().startsWith("jboss-")) f=child; @AT@ 9151 @LENGTH@ 126
------------INS SingleVariableDeclaration@@File child @TO@ EnhancedForStatement@@for (File child : children) if (child.getName().startsWith("jboss-")) f=child; @AT@ 9156 @LENGTH@ 10
---------------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File child @AT@ 9156 @LENGTH@ 4
---------------INS SimpleName@@child @TO@ SingleVariableDeclaration@@File child @AT@ 9161 @LENGTH@ 5
------------INS SimpleName@@children @TO@ EnhancedForStatement@@for (File child : children) if (child.getName().startsWith("jboss-")) f=child; @AT@ 9169 @LENGTH@ 8
------------INS IfStatement@@if (child.getName().startsWith("jboss-")) f=child; @TO@ EnhancedForStatement@@for (File child : children) if (child.getName().startsWith("jboss-")) f=child; @AT@ 9200 @LENGTH@ 77
---------------INS MethodInvocation@@child.getName().startsWith("jboss-") @TO@ IfStatement@@if (child.getName().startsWith("jboss-")) f=child; @AT@ 9204 @LENGTH@ 36
------------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@child.getName().startsWith("jboss-") @AT@ 9204 @LENGTH@ 15
------------------INS SimpleName@@Name:child @TO@ MethodInvocation@@child.getName().startsWith("jboss-") @AT@ 9204 @LENGTH@ 5
------------------INS SimpleName@@MethodName:startsWith:["jboss-"] @TO@ MethodInvocation@@child.getName().startsWith("jboss-") @AT@ 9220 @LENGTH@ 20
---------------------INS StringLiteral@@"jboss-" @TO@ SimpleName@@MethodName:startsWith:["jboss-"] @AT@ 9231 @LENGTH@ 8
---------------INS Block@@ThenBody:f=child; @TO@ IfStatement@@if (child.getName().startsWith("jboss-")) f=child; @AT@ 9267 @LENGTH@ 10
------------------INS ExpressionStatement@@Assignment:f=child @TO@ Block@@ThenBody:f=child; @AT@ 9267 @LENGTH@ 10
---------------------INS Assignment@@f=child @TO@ ExpressionStatement@@Assignment:f=child @AT@ 9267 @LENGTH@ 9
------------------------INS SimpleName@@f @TO@ Assignment@@f=child @AT@ 9267 @LENGTH@ 1
------------------------INS Operator@@= @TO@ Assignment@@f=child @AT@ 9268 @LENGTH@ 1
------------------------INS SimpleName@@child @TO@ Assignment@@f=child @AT@ 9271 @LENGTH@ 5
------------------INS ExpressionStatement@@Assignment:f=child @TO@ Block@@ThenBody:f=child; @AT@ 9267 @LENGTH@ 10
---------------------INS Assignment@@f=child @TO@ ExpressionStatement@@Assignment:f=child @AT@ 9267 @LENGTH@ 9
------------------------INS SimpleName@@f @TO@ Assignment@@f=child @AT@ 9267 @LENGTH@ 1
------------------------INS Operator@@= @TO@ Assignment@@f=child @AT@ 9268 @LENGTH@ 1
------------------------INS SimpleName@@child @TO@ Assignment@@f=child @AT@ 9271 @LENGTH@ 5
---UPD IfStatement@@if (!f.exists()) fail("The server hasn't been built yet."); @TO@ if (f == null || !f.exists()) fail("The server hasn't been built yet."); @AT@ 9130 @LENGTH@ 74
------INS InfixExpression@@f == null || !f.exists() @TO@ IfStatement@@if (!f.exists()) fail("The server hasn't been built yet."); @AT@ 9295 @LENGTH@ 24
---------MOV PrefixExpression@@!f.exists() @TO@ InfixExpression@@f == null || !f.exists() @AT@ 9133 @LENGTH@ 11
---------INS InfixExpression@@f == null @TO@ InfixExpression@@f == null || !f.exists() @AT@ 9295 @LENGTH@ 9
------------INS SimpleName@@f @TO@ InfixExpression@@f == null @AT@ 9295 @LENGTH@ 1
------------INS Operator@@== @TO@ InfixExpression@@f == null @AT@ 9296 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@f == null @AT@ 9300 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@f == null || !f.exists() @AT@ 9304 @LENGTH@ 2


UPD FieldDeclaration@@public, static, final, long, [PRIORITY=DeploymentPhases.PARSE_DESCRIPTORS.plus(300L)] @TO@ public, static, final, long, [PRIORITY=DeploymentPhases.PARSE_DESCRIPTORS.plus(310L)] @AT@ 1993 @LENGTH@ 82
---UPD VariableDeclarationFragment@@PRIORITY=DeploymentPhases.PARSE_DESCRIPTORS.plus(300L) @TO@ PRIORITY=DeploymentPhases.PARSE_DESCRIPTORS.plus(310L) @AT@ 2018 @LENGTH@ 56
------UPD MethodInvocation@@DeploymentPhases.PARSE_DESCRIPTORS.plus(300L) @TO@ DeploymentPhases.PARSE_DESCRIPTORS.plus(310L) @AT@ 2029 @LENGTH@ 45
---------UPD SimpleName@@MethodName:plus:[300L] @TO@ MethodName:plus:[310L] @AT@ 2064 @LENGTH@ 10
------------UPD NumberLiteral@@300L @TO@ 310L @AT@ 2069 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:log.infof("Server manager unregistered [%s]",serverManagerId) @TO@ MethodInvocation:DomainControllerOperationHandler.log.infof("Server manager unregistered [%s]",serverManagerId) @AT@ 5504 @LENGTH@ 63
---UPD MethodInvocation@@log.infof("Server manager unregistered [%s]",serverManagerId) @TO@ DomainControllerOperationHandler.log.infof("Server manager unregistered [%s]",serverManagerId) @AT@ 5504 @LENGTH@ 62
------DEL SimpleName@@Name:log @AT@ 5504 @LENGTH@ 3
------INS QualifiedName@@Name:DomainControllerOperationHandler.log @TO@ MethodInvocation@@log.infof("Server manager unregistered [%s]",serverManagerId) @AT@ 5617 @LENGTH@ 36


UPD FieldDeclaration@@private, Set, [contained] @TO@ private, Set<E>, [contained] @AT@ 1248 @LENGTH@ 22
---INS ParameterizedType@@Set<E> @TO@ FieldDeclaration@@private, Set, [contained] @AT@ 1256 @LENGTH@ 6
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<E> @AT@ 1256 @LENGTH@ 3
------INS SimpleType@@E @TO@ ParameterizedType@@Set<E> @AT@ 1260 @LENGTH@ 1
---DEL SimpleType@@Set @AT@ 1256 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:streamWriter.writeEndElement() @TO@ MethodDeclaration@@public, void, MethodName:writeContent, XMLExtendedStreamWriter streamWriter, XMLStreamException,  @AT@ 2157 @LENGTH@ 31
---INS MethodInvocation@@streamWriter.writeEndElement() @TO@ ExpressionStatement@@MethodInvocation:streamWriter.writeEndElement() @AT@ 2157 @LENGTH@ 30
------INS SimpleName@@Name:streamWriter @TO@ MethodInvocation@@streamWriter.writeEndElement() @AT@ 2157 @LENGTH@ 12
------INS SimpleName@@MethodName:writeEndElement:[] @TO@ MethodInvocation@@streamWriter.writeEndElement() @AT@ 2170 @LENGTH@ 17


UPD IfStatement@@if (result instanceof OtpErlangTuple) {  OtpErlangTuple msg=(OtpErlangTuple)result;  OtpErlangObject[] elements=msg.elements();  if (msg.elementAt(0) instanceof OtpErlangAtom) {    OtpErlangAtom responseAtom=(OtpErlangAtom)msg.elementAt(0);    if (responseAtom.atomValue().equals("badrpc")) {      if (msg.elementAt(1) instanceof OtpErlangTuple) {        throw new ErlangBadRpcException((OtpErlangTuple)msg.elementAt(1));      } else {        throw new ErlangBadRpcException(msg.elementAt(1).toString());      }    } else     if (responseAtom.atomValue().equals("error")) {      if (msg.elementAt(1) instanceof OtpErlangTuple) {        throw new ErlangErrorRpcException((OtpErlangTuple)msg.elementAt(1));      } else {        throw new ErlangErrorRpcException(msg.elementAt(1).toString());      }    }  }} @TO@ if (result instanceof OtpErlangTuple) {  OtpErlangTuple msg=(OtpErlangTuple)result;  if (msg.elementAt(0) instanceof OtpErlangAtom) {    OtpErlangAtom responseAtom=(OtpErlangAtom)msg.elementAt(0);    if (responseAtom.atomValue().equals("badrpc")) {      if (msg.elementAt(1) instanceof OtpErlangTuple) {        throw new ErlangBadRpcException((OtpErlangTuple)msg.elementAt(1));      } else {        throw new ErlangBadRpcException(msg.elementAt(1).toString());      }    } else     if (responseAtom.atomValue().equals("error")) {      if (msg.elementAt(1) instanceof OtpErlangTuple) {        throw new ErlangErrorRpcException((OtpErlangTuple)msg.elementAt(1));      } else {        throw new ErlangErrorRpcException(msg.elementAt(1).toString());      }    }  }} @AT@ 2426 @LENGTH@ 871
---UPD Block@@ThenBody:{  OtpErlangTuple msg=(OtpErlangTuple)result;  OtpErlangObject[] elements=msg.elements();  if (msg.elementAt(0) instanceof OtpErlangAtom) {    OtpErlangAtom responseAtom=(OtpErlangAtom)msg.elementAt(0);    if (responseAtom.atomValue().equals("badrpc")) {      if (msg.elementAt(1) instanceof OtpErlangTuple) {        throw new ErlangBadRpcException((OtpErlangTuple)msg.elementAt(1));      } else {        throw new ErlangBadRpcException(msg.elementAt(1).toString());      }    } else     if (responseAtom.atomValue().equals("error")) {      if (msg.elementAt(1) instanceof OtpErlangTuple) {        throw new ErlangErrorRpcException((OtpErlangTuple)msg.elementAt(1));      } else {        throw new ErlangErrorRpcException(msg.elementAt(1).toString());      }    }  }} @TO@ ThenBody:{  OtpErlangTuple msg=(OtpErlangTuple)result;  if (msg.elementAt(0) instanceof OtpErlangAtom) {    OtpErlangAtom responseAtom=(OtpErlangAtom)msg.elementAt(0);    if (responseAtom.atomValue().equals("badrpc")) {      if (msg.elementAt(1) instanceof OtpErlangTuple) {        throw new ErlangBadRpcException((OtpErlangTuple)msg.elementAt(1));      } else {        throw new ErlangBadRpcException(msg.elementAt(1).toString());      }    } else     if (responseAtom.atomValue().equals("error")) {      if (msg.elementAt(1) instanceof OtpErlangTuple) {        throw new ErlangErrorRpcException((OtpErlangTuple)msg.elementAt(1));      } else {        throw new ErlangErrorRpcException(msg.elementAt(1).toString());      }    }  }} @AT@ 2464 @LENGTH@ 833
------DEL VariableDeclarationStatement@@OtpErlangObject[] elements=msg.elements(); @AT@ 2517 @LENGTH@ 44
---------DEL ArrayType@@OtpErlangObject[] @AT@ 2517 @LENGTH@ 17
------------DEL SimpleType@@OtpErlangObject @AT@ 2517 @LENGTH@ 15
---------DEL VariableDeclarationFragment@@elements=msg.elements() @AT@ 2535 @LENGTH@ 25
------------DEL SimpleName@@elements @AT@ 2535 @LENGTH@ 8
------------DEL MethodInvocation@@msg.elements() @AT@ 2546 @LENGTH@ 14
---------------DEL SimpleName@@Name:msg @AT@ 2546 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:elements:[] @AT@ 2550 @LENGTH@ 10


UPD MethodDeclaration@@JvmElement, MethodName:getJvm, String name,  @TO@ public, JvmElement, MethodName:getJvm, String name,  @AT@ 3336 @LENGTH@ 58
---INS Modifier@@public @TO@ MethodDeclaration@@JvmElement, MethodName:getJvm, String name,  @AT@ 3325 @LENGTH@ 6


UPD ReturnStatement@@ClassInstanceCreation:new VFSEntryResource(file,root.toURL()) @TO@ ClassInstanceCreation:new VFSEntryResource(file,file.toURL()) @AT@ 6133 @LENGTH@ 48
---UPD ClassInstanceCreation@@VFSEntryResource[file, root.toURL()] @TO@ VFSEntryResource[file, file.toURL()] @AT@ 6140 @LENGTH@ 40
------UPD MethodInvocation@@root.toURL() @TO@ file.toURL() @AT@ 6167 @LENGTH@ 12
---------UPD SimpleName@@Name:root @TO@ Name:file @AT@ 6167 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("GPL",projectNameInserted.get("LICENSE")) @TO@ MethodInvocation:assertEquals("XGPL",projectNameInserted.get("LICENSE")) @AT@ 6878 @LENGTH@ 56
---UPD MethodInvocation@@assertEquals("GPL",projectNameInserted.get("LICENSE")) @TO@ assertEquals("XGPL",projectNameInserted.get("LICENSE")) @AT@ 6878 @LENGTH@ 55
------UPD SimpleName@@MethodName:assertEquals:["GPL", projectNameInserted.get("LICENSE")] @TO@ MethodName:assertEquals:["XGPL", projectNameInserted.get("LICENSE")] @AT@ 6878 @LENGTH@ 55
---------UPD StringLiteral@@"GPL" @TO@ "XGPL" @AT@ 6891 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:jbean=new JBossMessageDrivenBeanMetaData() @TO@ Assignment:jbean=new JBossMessageDrivenBean31MetaData() @AT@ 9289 @LENGTH@ 45
---UPD Assignment@@jbean=new JBossMessageDrivenBeanMetaData() @TO@ jbean=new JBossMessageDrivenBean31MetaData() @AT@ 9289 @LENGTH@ 44
------UPD ClassInstanceCreation@@JBossMessageDrivenBeanMetaData[] @TO@ JBossMessageDrivenBean31MetaData[] @AT@ 9297 @LENGTH@ 36
---------UPD SimpleType@@JBossMessageDrivenBeanMetaData @TO@ JBossMessageDrivenBean31MetaData @AT@ 9301 @LENGTH@ 30


UPD FieldDeclaration@@public, static, final, long, [PRIORITY=DeploymentPhases.PARSE_DESCRIPTORS.plus(300L)] @TO@ public, static, final, long, [PRIORITY=DeploymentPhases.PARSE_DESCRIPTORS.plus(320L)] @AT@ 1765 @LENGTH@ 82
---UPD VariableDeclarationFragment@@PRIORITY=DeploymentPhases.PARSE_DESCRIPTORS.plus(300L) @TO@ PRIORITY=DeploymentPhases.PARSE_DESCRIPTORS.plus(320L) @AT@ 1790 @LENGTH@ 56
------UPD MethodInvocation@@DeploymentPhases.PARSE_DESCRIPTORS.plus(300L) @TO@ DeploymentPhases.PARSE_DESCRIPTORS.plus(320L) @AT@ 1801 @LENGTH@ 45
---------UPD SimpleName@@MethodName:plus:[300L] @TO@ MethodName:plus:[320L] @AT@ 1836 @LENGTH@ 10
------------UPD NumberLiteral@@300L @TO@ 320L @AT@ 1841 @LENGTH@ 4


INS EnhancedForStatement@@for (ShutdownDeferredConsumer deferred : deferredConsumers) {  Consumer consumer=deferred.getConsumer();  if (consumer instanceof ShutdownAware) {    if (LOG.isDebugEnabled()) {      LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");    }    ((ShutdownAware)consumer).prepareShutdown();    LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.");  }} @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 18067 @LENGTH@ 558
---INS SingleVariableDeclaration@@ShutdownDeferredConsumer deferred @TO@ EnhancedForStatement@@for (ShutdownDeferredConsumer deferred : deferredConsumers) {  Consumer consumer=deferred.getConsumer();  if (consumer instanceof ShutdownAware) {    if (LOG.isDebugEnabled()) {      LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");    }    ((ShutdownAware)consumer).prepareShutdown();    LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.");  }} @AT@ 18072 @LENGTH@ 33
------INS SimpleType@@ShutdownDeferredConsumer @TO@ SingleVariableDeclaration@@ShutdownDeferredConsumer deferred @AT@ 18072 @LENGTH@ 24
------INS SimpleName@@deferred @TO@ SingleVariableDeclaration@@ShutdownDeferredConsumer deferred @AT@ 18097 @LENGTH@ 8
---INS SimpleName@@deferredConsumers @TO@ EnhancedForStatement@@for (ShutdownDeferredConsumer deferred : deferredConsumers) {  Consumer consumer=deferred.getConsumer();  if (consumer instanceof ShutdownAware) {    if (LOG.isDebugEnabled()) {      LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");    }    ((ShutdownAware)consumer).prepareShutdown();    LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.");  }} @AT@ 18108 @LENGTH@ 17
---INS VariableDeclarationStatement@@Consumer consumer=deferred.getConsumer(); @TO@ EnhancedForStatement@@for (ShutdownDeferredConsumer deferred : deferredConsumers) {  Consumer consumer=deferred.getConsumer();  if (consumer instanceof ShutdownAware) {    if (LOG.isDebugEnabled()) {      LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");    }    ((ShutdownAware)consumer).prepareShutdown();    LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.");  }} @AT@ 18145 @LENGTH@ 43
------INS SimpleType@@Consumer @TO@ VariableDeclarationStatement@@Consumer consumer=deferred.getConsumer(); @AT@ 18145 @LENGTH@ 8
------INS VariableDeclarationFragment@@consumer=deferred.getConsumer() @TO@ VariableDeclarationStatement@@Consumer consumer=deferred.getConsumer(); @AT@ 18154 @LENGTH@ 33
---------INS SimpleName@@consumer @TO@ VariableDeclarationFragment@@consumer=deferred.getConsumer() @AT@ 18154 @LENGTH@ 8
---------INS MethodInvocation@@deferred.getConsumer() @TO@ VariableDeclarationFragment@@consumer=deferred.getConsumer() @AT@ 18165 @LENGTH@ 22
------------INS SimpleName@@Name:deferred @TO@ MethodInvocation@@deferred.getConsumer() @AT@ 18165 @LENGTH@ 8
------------INS SimpleName@@MethodName:getConsumer:[] @TO@ MethodInvocation@@deferred.getConsumer() @AT@ 18174 @LENGTH@ 13
---INS IfStatement@@if (consumer instanceof ShutdownAware) {  if (LOG.isDebugEnabled()) {    LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");  }  ((ShutdownAware)consumer).prepareShutdown();  LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.");} @TO@ EnhancedForStatement@@for (ShutdownDeferredConsumer deferred : deferredConsumers) {  Consumer consumer=deferred.getConsumer();  if (consumer instanceof ShutdownAware) {    if (LOG.isDebugEnabled()) {      LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");    }    ((ShutdownAware)consumer).prepareShutdown();    LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.");  }} @AT@ 18205 @LENGTH@ 406
------INS InstanceofExpression@@consumer instanceof ShutdownAware @TO@ IfStatement@@if (consumer instanceof ShutdownAware) {  if (LOG.isDebugEnabled()) {    LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");  }  ((ShutdownAware)consumer).prepareShutdown();  LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.");} @AT@ 18209 @LENGTH@ 33
---------INS SimpleName@@consumer @TO@ InstanceofExpression@@consumer instanceof ShutdownAware @AT@ 18209 @LENGTH@ 8
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@consumer instanceof ShutdownAware @AT@ 18218 @LENGTH@ 10
---------INS SimpleType@@ShutdownAware @TO@ InstanceofExpression@@consumer instanceof ShutdownAware @AT@ 18229 @LENGTH@ 13
------INS Block@@ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");  }  ((ShutdownAware)consumer).prepareShutdown();  LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.");} @TO@ IfStatement@@if (consumer instanceof ShutdownAware) {  if (LOG.isDebugEnabled()) {    LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");  }  ((ShutdownAware)consumer).prepareShutdown();  LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.");} @AT@ 18244 @LENGTH@ 367
---------INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");} @TO@ Block@@ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");  }  ((ShutdownAware)consumer).prepareShutdown();  LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.");} @AT@ 18266 @LENGTH@ 153
------------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");} @AT@ 18270 @LENGTH@ 20
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 18270 @LENGTH@ 3
---------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 18274 @LENGTH@ 16
------------INS Block@@ThenBody:{  LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");} @AT@ 18292 @LENGTH@ 127
---------------INS ExpressionStatement@@MethodInvocation:LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.") @TO@ Block@@ThenBody:{  LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");} @AT@ 18318 @LENGTH@ 79
------------------INS MethodInvocation@@LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.") @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.") @AT@ 18318 @LENGTH@ 78
---------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.") @AT@ 18318 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:debug:["Route: " + deferred.getRoute().getId() + " preparing to shutdown."] @TO@ MethodInvocation@@LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.") @AT@ 18322 @LENGTH@ 74
------------------------INS InfixExpression@@"Route: " + deferred.getRoute().getId() + " preparing to shutdown." @TO@ SimpleName@@MethodName:debug:["Route: " + deferred.getRoute().getId() + " preparing to shutdown."] @AT@ 18328 @LENGTH@ 67
---------------------------INS StringLiteral@@"Route: " @TO@ InfixExpression@@"Route: " + deferred.getRoute().getId() + " preparing to shutdown." @AT@ 18328 @LENGTH@ 9
---------------------------INS Operator@@+ @TO@ InfixExpression@@"Route: " + deferred.getRoute().getId() + " preparing to shutdown." @AT@ 18337 @LENGTH@ 1
---------------------------INS MethodInvocation@@deferred.getRoute().getId() @TO@ InfixExpression@@"Route: " + deferred.getRoute().getId() + " preparing to shutdown." @AT@ 18340 @LENGTH@ 27
------------------------------INS MethodInvocation@@MethodName:getRoute:[] @TO@ MethodInvocation@@deferred.getRoute().getId() @AT@ 18340 @LENGTH@ 19
------------------------------INS SimpleName@@Name:deferred @TO@ MethodInvocation@@deferred.getRoute().getId() @AT@ 18340 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@deferred.getRoute().getId() @AT@ 18360 @LENGTH@ 7
---------------------------INS StringLiteral@@" preparing to shutdown." @TO@ InfixExpression@@"Route: " + deferred.getRoute().getId() + " preparing to shutdown." @AT@ 18370 @LENGTH@ 25
---------INS ExpressionStatement@@MethodInvocation:((ShutdownAware)consumer).prepareShutdown() @TO@ Block@@ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");  }  ((ShutdownAware)consumer).prepareShutdown();  LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.");} @AT@ 18440 @LENGTH@ 45
------------INS MethodInvocation@@((ShutdownAware)consumer).prepareShutdown() @TO@ ExpressionStatement@@MethodInvocation:((ShutdownAware)consumer).prepareShutdown() @AT@ 18440 @LENGTH@ 44
---------------INS ParenthesizedExpression@@((ShutdownAware)consumer) @TO@ MethodInvocation@@((ShutdownAware)consumer).prepareShutdown() @AT@ 18440 @LENGTH@ 26
------------------INS CastExpression@@(ShutdownAware)consumer @TO@ ParenthesizedExpression@@((ShutdownAware)consumer) @AT@ 18441 @LENGTH@ 24
---------------------INS SimpleType@@ShutdownAware @TO@ CastExpression@@(ShutdownAware)consumer @AT@ 18442 @LENGTH@ 13
---------------------INS SimpleName@@consumer @TO@ CastExpression@@(ShutdownAware)consumer @AT@ 18457 @LENGTH@ 8
---------------INS SimpleName@@MethodName:prepareShutdown:[] @TO@ MethodInvocation@@((ShutdownAware)consumer).prepareShutdown() @AT@ 18467 @LENGTH@ 17
---------INS ExpressionStatement@@MethodInvocation:LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.") @TO@ Block@@ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Route: " + deferred.getRoute().getId() + " preparing to shutdown.");  }  ((ShutdownAware)consumer).prepareShutdown();  LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.");} @AT@ 18506 @LENGTH@ 87
------------INS MethodInvocation@@LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.") @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.") @AT@ 18506 @LENGTH@ 86
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.") @AT@ 18506 @LENGTH@ 3
---------------INS SimpleName@@MethodName:info:["Route: " + deferred.getRoute().getId() + " preparing to shutdown complete."] @TO@ MethodInvocation@@LOG.info("Route: " + deferred.getRoute().getId() + " preparing to shutdown complete.") @AT@ 18510 @LENGTH@ 82
------------------INS InfixExpression@@"Route: " + deferred.getRoute().getId() + " preparing to shutdown complete." @TO@ SimpleName@@MethodName:info:["Route: " + deferred.getRoute().getId() + " preparing to shutdown complete."] @AT@ 18515 @LENGTH@ 76
---------------------INS StringLiteral@@"Route: " @TO@ InfixExpression@@"Route: " + deferred.getRoute().getId() + " preparing to shutdown complete." @AT@ 18515 @LENGTH@ 9
---------------------INS Operator@@+ @TO@ InfixExpression@@"Route: " + deferred.getRoute().getId() + " preparing to shutdown complete." @AT@ 18524 @LENGTH@ 1
---------------------INS MethodInvocation@@deferred.getRoute().getId() @TO@ InfixExpression@@"Route: " + deferred.getRoute().getId() + " preparing to shutdown complete." @AT@ 18527 @LENGTH@ 27
------------------------INS MethodInvocation@@MethodName:getRoute:[] @TO@ MethodInvocation@@deferred.getRoute().getId() @AT@ 18527 @LENGTH@ 19
------------------------INS SimpleName@@Name:deferred @TO@ MethodInvocation@@deferred.getRoute().getId() @AT@ 18527 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@deferred.getRoute().getId() @AT@ 18547 @LENGTH@ 7
---------------------INS StringLiteral@@" preparing to shutdown complete." @TO@ InfixExpression@@"Route: " + deferred.getRoute().getId() + " preparing to shutdown complete." @AT@ 18557 @LENGTH@ 34


UPD EnhancedForStatement@@for (MethodMetadata accessor : beanInfoMetadata.getPublicAccessors()) {  JavaSymbolName propertyName=new JavaSymbolName(StringUtils.uncapitalize(BeanInfoMetadata.getPropertyNameForJavaBeanMethod(accessor).getSymbolName()));  JavaType gwtSideType=null;  JavaType wrapperType=new JavaType("com.google.gwt.requestfactory.shared.Property");  JavaType enumWrapperType=new JavaType("com.google.gwt.requestfactory.shared.EnumProperty");  if ("id".equals(propertyName.getSymbolName()) || "version".equals(propertyName.getSymbolName())) {    wrapperType=null;  }  JavaType returnType=accessor.getReturnType();  PhysicalTypeMetadata ptmd=(PhysicalTypeMetadata)metadataService.get(PhysicalTypeIdentifier.createIdentifier(returnType,Path.SRC_MAIN_JAVA));  boolean isEnum=ptmd != null && ptmd.getPhysicalTypeDetails() != null && ptmd.getPhysicalTypeDetails().getPhysicalTypeCategory() == PhysicalTypeCategory.ENUMERATION;  boolean isDomainObject=!isEnum && !isShared(returnType) && !(returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date")));  if (isDomainObject) {    gwtSideType=getDestinationJavaType(returnType,MirrorType.RECORD);  } else {    gwtSideType=returnType;    if (idPropertyName.equals(propertyName) && idLongOnServerSide) {      gwtSideType=JavaType.LONG_OBJECT;    }    if (versionPropertyName.equals(propertyName) && versionIntegerOnServerSide) {      gwtSideType=JavaType.INT_OBJECT;    }    if (gwtSideType.getFullyQualifiedTypeName().equals("java.lang.Long") && idLongOnServerSide) {      gwtSideType=JavaType.LONG_OBJECT;    }  }  if (isEnum) {    wrapperType=enumWrapperType;  }  if (wrapperType == null) {    continue;  }  propToGwtSideType.put(propertyName,gwtSideType);  propToWrapperType.put(propertyName,wrapperType);} @TO@ for (MethodMetadata accessor : beanInfoMetadata.getPublicAccessors()) {  JavaSymbolName propertyName=new JavaSymbolName(StringUtils.uncapitalize(BeanInfoMetadata.getPropertyNameForJavaBeanMethod(accessor).getSymbolName()));  JavaType gwtSideType=null;  JavaType wrapperType=new JavaType("com.google.gwt.requestfactory.shared.Property");  JavaType enumWrapperType=new JavaType("com.google.gwt.requestfactory.shared.EnumProperty");  if ("id".equals(propertyName.getSymbolName()) || "version".equals(propertyName.getSymbolName())) {    wrapperType=null;  }  JavaType returnType=accessor.getReturnType();  PhysicalTypeMetadata ptmd=(PhysicalTypeMetadata)metadataService.get(PhysicalTypeIdentifier.createIdentifier(returnType,Path.SRC_MAIN_JAVA));  boolean isEnum=ptmd != null && ptmd.getPhysicalTypeDetails() != null && ptmd.getPhysicalTypeDetails().getPhysicalTypeCategory() == PhysicalTypeCategory.ENUMERATION;  boolean isDomainObject=!isEnum && !isShared(returnType) && !(returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.isPrimitive()|| returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date")));  if (isDomainObject) {    gwtSideType=getDestinationJavaType(returnType,MirrorType.RECORD);  } else {    gwtSideType=returnType;    if (returnType.isPrimitive()) {      if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {        gwtSideType=JavaType.BOOLEAN_OBJECT;      }      if (returnType.equals(JavaType.INT_PRIMITIVE)) {        gwtSideType=JavaType.INT_OBJECT;      }      if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {        gwtSideType=JavaType.DOUBLE_OBJECT;      }      if (returnType.equals(JavaType.LONG_PRIMITIVE)) {        gwtSideType=JavaType.LONG_OBJECT;      }    }    if (idPropertyName.equals(propertyName) && idLongOnServerSide) {      gwtSideType=JavaType.LONG_OBJECT;    }    if (versionPropertyName.equals(propertyName) && versionIntegerOnServerSide) {      gwtSideType=JavaType.INT_OBJECT;    }    if (gwtSideType.getFullyQualifiedTypeName().equals("java.lang.Long") && idLongOnServerSide) {      gwtSideType=JavaType.LONG_OBJECT;    }  }  if (isEnum) {    wrapperType=enumWrapperType;  }  if (wrapperType == null) {    continue;  }  propToGwtSideType.put(propertyName,gwtSideType);  propToWrapperType.put(propertyName,wrapperType);} @AT@ 15923 @LENGTH@ 2617
---UPD VariableDeclarationStatement@@boolean isDomainObject=!isEnum && !isShared(returnType) && !(returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date"))); @TO@ boolean isDomainObject=!isEnum && !isShared(returnType) && !(returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.isPrimitive()|| returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date"))); @AT@ 17063 @LENGTH@ 379
------UPD VariableDeclarationFragment@@isDomainObject=!isEnum && !isShared(returnType) && !(returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date"))) @TO@ isDomainObject=!isEnum && !isShared(returnType) && !(returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.isPrimitive()|| returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date"))) @AT@ 17071 @LENGTH@ 370
---------UPD InfixExpression@@!isEnum && !isShared(returnType) && !(returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date"))) @TO@ !isEnum && !isShared(returnType) && !(returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.isPrimitive()|| returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date"))) @AT@ 17088 @LENGTH@ 353
------------UPD PrefixExpression@@!(returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date"))) @TO@ !(returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.isPrimitive()|| returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date"))) @AT@ 17124 @LENGTH@ 317
---------------UPD ParenthesizedExpression@@(returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date"))) @TO@ (returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.isPrimitive()|| returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date"))) @AT@ 17125 @LENGTH@ 316
------------------UPD InfixExpression@@returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date")) @TO@ returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.isPrimitive()|| returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date")) @AT@ 17126 @LENGTH@ 314
---------------------INS MethodInvocation@@returnType.isPrimitive() @TO@ InfixExpression@@returnType.equals(JavaType.BOOLEAN_OBJECT) || returnType.equals(JavaType.INT_OBJECT) || returnType.equals(JavaType.LONG_OBJECT)|| returnType.equals(JavaType.STRING_OBJECT)|| returnType.equals(JavaType.DOUBLE_OBJECT)|| returnType.equals(JavaType.FLOAT_OBJECT)|| returnType.equals(new JavaType("java.util.Date")) @AT@ 17214 @LENGTH@ 24
------------------------INS SimpleName@@Name:returnType @TO@ MethodInvocation@@returnType.isPrimitive() @AT@ 17214 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:isPrimitive:[] @TO@ MethodInvocation@@returnType.isPrimitive() @AT@ 17225 @LENGTH@ 13
---UPD IfStatement@@if (isDomainObject) {  gwtSideType=getDestinationJavaType(returnType,MirrorType.RECORD);} else {  gwtSideType=returnType;  if (idPropertyName.equals(propertyName) && idLongOnServerSide) {    gwtSideType=JavaType.LONG_OBJECT;  }  if (versionPropertyName.equals(propertyName) && versionIntegerOnServerSide) {    gwtSideType=JavaType.INT_OBJECT;  }  if (gwtSideType.getFullyQualifiedTypeName().equals("java.lang.Long") && idLongOnServerSide) {    gwtSideType=JavaType.LONG_OBJECT;  }} @TO@ if (isDomainObject) {  gwtSideType=getDestinationJavaType(returnType,MirrorType.RECORD);} else {  gwtSideType=returnType;  if (returnType.isPrimitive()) {    if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {      gwtSideType=JavaType.BOOLEAN_OBJECT;    }    if (returnType.equals(JavaType.INT_PRIMITIVE)) {      gwtSideType=JavaType.INT_OBJECT;    }    if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {      gwtSideType=JavaType.DOUBLE_OBJECT;    }    if (returnType.equals(JavaType.LONG_PRIMITIVE)) {      gwtSideType=JavaType.LONG_OBJECT;    }  }  if (idPropertyName.equals(propertyName) && idLongOnServerSide) {    gwtSideType=JavaType.LONG_OBJECT;  }  if (versionPropertyName.equals(propertyName) && versionIntegerOnServerSide) {    gwtSideType=JavaType.INT_OBJECT;  }  if (gwtSideType.getFullyQualifiedTypeName().equals("java.lang.Long") && idLongOnServerSide) {    gwtSideType=JavaType.LONG_OBJECT;  }} @AT@ 17447 @LENGTH@ 718
------UPD Block@@ElseBody:{  gwtSideType=returnType;  if (idPropertyName.equals(propertyName) && idLongOnServerSide) {    gwtSideType=JavaType.LONG_OBJECT;  }  if (versionPropertyName.equals(propertyName) && versionIntegerOnServerSide) {    gwtSideType=JavaType.INT_OBJECT;  }  if (gwtSideType.getFullyQualifiedTypeName().equals("java.lang.Long") && idLongOnServerSide) {    gwtSideType=JavaType.LONG_OBJECT;  }} @TO@ ElseBody:{  gwtSideType=returnType;  if (returnType.isPrimitive()) {    if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {      gwtSideType=JavaType.BOOLEAN_OBJECT;    }    if (returnType.equals(JavaType.INT_PRIMITIVE)) {      gwtSideType=JavaType.INT_OBJECT;    }    if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {      gwtSideType=JavaType.DOUBLE_OBJECT;    }    if (returnType.equals(JavaType.LONG_PRIMITIVE)) {      gwtSideType=JavaType.LONG_OBJECT;    }  }  if (idPropertyName.equals(propertyName) && idLongOnServerSide) {    gwtSideType=JavaType.LONG_OBJECT;  }  if (versionPropertyName.equals(propertyName) && versionIntegerOnServerSide) {    gwtSideType=JavaType.INT_OBJECT;  }  if (gwtSideType.getFullyQualifiedTypeName().equals("java.lang.Long") && idLongOnServerSide) {    gwtSideType=JavaType.LONG_OBJECT;  }} @AT@ 17554 @LENGTH@ 611
---------INS IfStatement@@if (returnType.isPrimitive()) {  if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {    gwtSideType=JavaType.BOOLEAN_OBJECT;  }  if (returnType.equals(JavaType.INT_PRIMITIVE)) {    gwtSideType=JavaType.INT_OBJECT;  }  if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {    gwtSideType=JavaType.DOUBLE_OBJECT;  }  if (returnType.equals(JavaType.LONG_PRIMITIVE)) {    gwtSideType=JavaType.LONG_OBJECT;  }} @TO@ Block@@ElseBody:{  gwtSideType=returnType;  if (idPropertyName.equals(propertyName) && idLongOnServerSide) {    gwtSideType=JavaType.LONG_OBJECT;  }  if (versionPropertyName.equals(propertyName) && versionIntegerOnServerSide) {    gwtSideType=JavaType.INT_OBJECT;  }  if (gwtSideType.getFullyQualifiedTypeName().equals("java.lang.Long") && idLongOnServerSide) {    gwtSideType=JavaType.LONG_OBJECT;  }} @AT@ 17691 @LENGTH@ 859
------------INS MethodInvocation@@returnType.isPrimitive() @TO@ IfStatement@@if (returnType.isPrimitive()) {  if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {    gwtSideType=JavaType.BOOLEAN_OBJECT;  }  if (returnType.equals(JavaType.INT_PRIMITIVE)) {    gwtSideType=JavaType.INT_OBJECT;  }  if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {    gwtSideType=JavaType.DOUBLE_OBJECT;  }  if (returnType.equals(JavaType.LONG_PRIMITIVE)) {    gwtSideType=JavaType.LONG_OBJECT;  }} @AT@ 17695 @LENGTH@ 24
---------------INS SimpleName@@Name:returnType @TO@ MethodInvocation@@returnType.isPrimitive() @AT@ 17695 @LENGTH@ 10
---------------INS SimpleName@@MethodName:isPrimitive:[] @TO@ MethodInvocation@@returnType.isPrimitive() @AT@ 17706 @LENGTH@ 13
------------INS Block@@ThenBody:{  if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {    gwtSideType=JavaType.BOOLEAN_OBJECT;  }  if (returnType.equals(JavaType.INT_PRIMITIVE)) {    gwtSideType=JavaType.INT_OBJECT;  }  if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {    gwtSideType=JavaType.DOUBLE_OBJECT;  }  if (returnType.equals(JavaType.LONG_PRIMITIVE)) {    gwtSideType=JavaType.LONG_OBJECT;  }} @TO@ IfStatement@@if (returnType.isPrimitive()) {  if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {    gwtSideType=JavaType.BOOLEAN_OBJECT;  }  if (returnType.equals(JavaType.INT_PRIMITIVE)) {    gwtSideType=JavaType.INT_OBJECT;  }  if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {    gwtSideType=JavaType.DOUBLE_OBJECT;  }  if (returnType.equals(JavaType.LONG_PRIMITIVE)) {    gwtSideType=JavaType.LONG_OBJECT;  }} @AT@ 17721 @LENGTH@ 829
---------------INS IfStatement@@if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {  gwtSideType=JavaType.BOOLEAN_OBJECT;} @TO@ Block@@ThenBody:{  if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {    gwtSideType=JavaType.BOOLEAN_OBJECT;  }  if (returnType.equals(JavaType.INT_PRIMITIVE)) {    gwtSideType=JavaType.INT_OBJECT;  }  if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {    gwtSideType=JavaType.DOUBLE_OBJECT;  }  if (returnType.equals(JavaType.LONG_PRIMITIVE)) {    gwtSideType=JavaType.LONG_OBJECT;  }} @AT@ 17765 @LENGTH@ 179
------------------INS MethodInvocation@@returnType.equals(JavaType.BOOLEAN_PRIMITIVE) @TO@ IfStatement@@if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {  gwtSideType=JavaType.BOOLEAN_OBJECT;} @AT@ 17769 @LENGTH@ 45
---------------------INS SimpleName@@Name:returnType @TO@ MethodInvocation@@returnType.equals(JavaType.BOOLEAN_PRIMITIVE) @AT@ 17769 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:equals:[JavaType.BOOLEAN_PRIMITIVE] @TO@ MethodInvocation@@returnType.equals(JavaType.BOOLEAN_PRIMITIVE) @AT@ 17780 @LENGTH@ 34
------------------------INS QualifiedName@@JavaType.BOOLEAN_PRIMITIVE @TO@ SimpleName@@MethodName:equals:[JavaType.BOOLEAN_PRIMITIVE] @AT@ 17787 @LENGTH@ 26
---------------------------INS SimpleName@@JavaType @TO@ QualifiedName@@JavaType.BOOLEAN_PRIMITIVE @AT@ 17787 @LENGTH@ 8
---------------------------INS SimpleName@@BOOLEAN_PRIMITIVE @TO@ QualifiedName@@JavaType.BOOLEAN_PRIMITIVE @AT@ 17796 @LENGTH@ 17
------------------INS Block@@ThenBody:{  gwtSideType=JavaType.BOOLEAN_OBJECT;} @TO@ IfStatement@@if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {  gwtSideType=JavaType.BOOLEAN_OBJECT;} @AT@ 17816 @LENGTH@ 128
---------------------INS ExpressionStatement@@Assignment:gwtSideType=JavaType.BOOLEAN_OBJECT @TO@ Block@@ThenBody:{  gwtSideType=JavaType.BOOLEAN_OBJECT;} @AT@ 17862 @LENGTH@ 38
------------------------INS Assignment@@gwtSideType=JavaType.BOOLEAN_OBJECT @TO@ ExpressionStatement@@Assignment:gwtSideType=JavaType.BOOLEAN_OBJECT @AT@ 17862 @LENGTH@ 37
---------------------------INS SimpleName@@gwtSideType @TO@ Assignment@@gwtSideType=JavaType.BOOLEAN_OBJECT @AT@ 17862 @LENGTH@ 11
---------------------------INS Operator@@= @TO@ Assignment@@gwtSideType=JavaType.BOOLEAN_OBJECT @AT@ 17873 @LENGTH@ 1
---------------------------INS QualifiedName@@JavaType.BOOLEAN_OBJECT @TO@ Assignment@@gwtSideType=JavaType.BOOLEAN_OBJECT @AT@ 17876 @LENGTH@ 23
------------------------------INS SimpleName@@JavaType @TO@ QualifiedName@@JavaType.BOOLEAN_OBJECT @AT@ 17876 @LENGTH@ 8
------------------------------INS SimpleName@@BOOLEAN_OBJECT @TO@ QualifiedName@@JavaType.BOOLEAN_OBJECT @AT@ 17885 @LENGTH@ 14
---------------INS IfStatement@@if (returnType.equals(JavaType.INT_PRIMITIVE)) {  gwtSideType=JavaType.INT_OBJECT;} @TO@ Block@@ThenBody:{  if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {    gwtSideType=JavaType.BOOLEAN_OBJECT;  }  if (returnType.equals(JavaType.INT_PRIMITIVE)) {    gwtSideType=JavaType.INT_OBJECT;  }  if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {    gwtSideType=JavaType.DOUBLE_OBJECT;  }  if (returnType.equals(JavaType.LONG_PRIMITIVE)) {    gwtSideType=JavaType.LONG_OBJECT;  }} @AT@ 17987 @LENGTH@ 171
------------------INS MethodInvocation@@returnType.equals(JavaType.INT_PRIMITIVE) @TO@ IfStatement@@if (returnType.equals(JavaType.INT_PRIMITIVE)) {  gwtSideType=JavaType.INT_OBJECT;} @AT@ 17991 @LENGTH@ 41
---------------------INS SimpleName@@Name:returnType @TO@ MethodInvocation@@returnType.equals(JavaType.INT_PRIMITIVE) @AT@ 17991 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:equals:[JavaType.INT_PRIMITIVE] @TO@ MethodInvocation@@returnType.equals(JavaType.INT_PRIMITIVE) @AT@ 18002 @LENGTH@ 30
------------------------INS QualifiedName@@JavaType.INT_PRIMITIVE @TO@ SimpleName@@MethodName:equals:[JavaType.INT_PRIMITIVE] @AT@ 18009 @LENGTH@ 22
---------------------------INS SimpleName@@JavaType @TO@ QualifiedName@@JavaType.INT_PRIMITIVE @AT@ 18009 @LENGTH@ 8
---------------------------INS SimpleName@@INT_PRIMITIVE @TO@ QualifiedName@@JavaType.INT_PRIMITIVE @AT@ 18018 @LENGTH@ 13
------------------INS Block@@ThenBody:{  gwtSideType=JavaType.INT_OBJECT;} @TO@ IfStatement@@if (returnType.equals(JavaType.INT_PRIMITIVE)) {  gwtSideType=JavaType.INT_OBJECT;} @AT@ 18034 @LENGTH@ 124
---------------------INS ExpressionStatement@@Assignment:gwtSideType=JavaType.INT_OBJECT @TO@ Block@@ThenBody:{  gwtSideType=JavaType.INT_OBJECT;} @AT@ 18080 @LENGTH@ 34
------------------------INS Assignment@@gwtSideType=JavaType.INT_OBJECT @TO@ ExpressionStatement@@Assignment:gwtSideType=JavaType.INT_OBJECT @AT@ 18080 @LENGTH@ 33
---------------------------INS SimpleName@@gwtSideType @TO@ Assignment@@gwtSideType=JavaType.INT_OBJECT @AT@ 18080 @LENGTH@ 11
---------------------------INS Operator@@= @TO@ Assignment@@gwtSideType=JavaType.INT_OBJECT @AT@ 18091 @LENGTH@ 1
---------------------------INS QualifiedName@@JavaType.INT_OBJECT @TO@ Assignment@@gwtSideType=JavaType.INT_OBJECT @AT@ 18094 @LENGTH@ 19
------------------------------INS SimpleName@@JavaType @TO@ QualifiedName@@JavaType.INT_OBJECT @AT@ 18094 @LENGTH@ 8
------------------------------INS SimpleName@@INT_OBJECT @TO@ QualifiedName@@JavaType.INT_OBJECT @AT@ 18103 @LENGTH@ 10
---------------INS IfStatement@@if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {  gwtSideType=JavaType.DOUBLE_OBJECT;} @TO@ Block@@ThenBody:{  if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {    gwtSideType=JavaType.BOOLEAN_OBJECT;  }  if (returnType.equals(JavaType.INT_PRIMITIVE)) {    gwtSideType=JavaType.INT_OBJECT;  }  if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {    gwtSideType=JavaType.DOUBLE_OBJECT;  }  if (returnType.equals(JavaType.LONG_PRIMITIVE)) {    gwtSideType=JavaType.LONG_OBJECT;  }} @AT@ 18158 @LENGTH@ 177
------------------INS MethodInvocation@@returnType.equals(JavaType.DOUBLE_PRIMITIVE) @TO@ IfStatement@@if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {  gwtSideType=JavaType.DOUBLE_OBJECT;} @AT@ 18162 @LENGTH@ 44
---------------------INS SimpleName@@Name:returnType @TO@ MethodInvocation@@returnType.equals(JavaType.DOUBLE_PRIMITIVE) @AT@ 18162 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:equals:[JavaType.DOUBLE_PRIMITIVE] @TO@ MethodInvocation@@returnType.equals(JavaType.DOUBLE_PRIMITIVE) @AT@ 18173 @LENGTH@ 33
------------------------INS QualifiedName@@JavaType.DOUBLE_PRIMITIVE @TO@ SimpleName@@MethodName:equals:[JavaType.DOUBLE_PRIMITIVE] @AT@ 18180 @LENGTH@ 25
---------------------------INS SimpleName@@JavaType @TO@ QualifiedName@@JavaType.DOUBLE_PRIMITIVE @AT@ 18180 @LENGTH@ 8
---------------------------INS SimpleName@@DOUBLE_PRIMITIVE @TO@ QualifiedName@@JavaType.DOUBLE_PRIMITIVE @AT@ 18189 @LENGTH@ 16
------------------INS Block@@ThenBody:{  gwtSideType=JavaType.DOUBLE_OBJECT;} @TO@ IfStatement@@if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {  gwtSideType=JavaType.DOUBLE_OBJECT;} @AT@ 18208 @LENGTH@ 127
---------------------INS ExpressionStatement@@Assignment:gwtSideType=JavaType.DOUBLE_OBJECT @TO@ Block@@ThenBody:{  gwtSideType=JavaType.DOUBLE_OBJECT;} @AT@ 18254 @LENGTH@ 37
------------------------INS Assignment@@gwtSideType=JavaType.DOUBLE_OBJECT @TO@ ExpressionStatement@@Assignment:gwtSideType=JavaType.DOUBLE_OBJECT @AT@ 18254 @LENGTH@ 36
---------------------------INS SimpleName@@gwtSideType @TO@ Assignment@@gwtSideType=JavaType.DOUBLE_OBJECT @AT@ 18254 @LENGTH@ 11
---------------------------INS Operator@@= @TO@ Assignment@@gwtSideType=JavaType.DOUBLE_OBJECT @AT@ 18265 @LENGTH@ 1
---------------------------INS QualifiedName@@JavaType.DOUBLE_OBJECT @TO@ Assignment@@gwtSideType=JavaType.DOUBLE_OBJECT @AT@ 18268 @LENGTH@ 22
------------------------------INS SimpleName@@JavaType @TO@ QualifiedName@@JavaType.DOUBLE_OBJECT @AT@ 18268 @LENGTH@ 8
------------------------------INS SimpleName@@DOUBLE_OBJECT @TO@ QualifiedName@@JavaType.DOUBLE_OBJECT @AT@ 18277 @LENGTH@ 13
---------------INS IfStatement@@if (returnType.equals(JavaType.LONG_PRIMITIVE)) {  gwtSideType=JavaType.LONG_OBJECT;} @TO@ Block@@ThenBody:{  if (returnType.equals(JavaType.BOOLEAN_PRIMITIVE)) {    gwtSideType=JavaType.BOOLEAN_OBJECT;  }  if (returnType.equals(JavaType.INT_PRIMITIVE)) {    gwtSideType=JavaType.INT_OBJECT;  }  if (returnType.equals(JavaType.DOUBLE_PRIMITIVE)) {    gwtSideType=JavaType.DOUBLE_OBJECT;  }  if (returnType.equals(JavaType.LONG_PRIMITIVE)) {    gwtSideType=JavaType.LONG_OBJECT;  }} @AT@ 18335 @LENGTH@ 173
------------------INS MethodInvocation@@returnType.equals(JavaType.LONG_PRIMITIVE) @TO@ IfStatement@@if (returnType.equals(JavaType.LONG_PRIMITIVE)) {  gwtSideType=JavaType.LONG_OBJECT;} @AT@ 18339 @LENGTH@ 42
---------------------INS SimpleName@@Name:returnType @TO@ MethodInvocation@@returnType.equals(JavaType.LONG_PRIMITIVE) @AT@ 18339 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:equals:[JavaType.LONG_PRIMITIVE] @TO@ MethodInvocation@@returnType.equals(JavaType.LONG_PRIMITIVE) @AT@ 18350 @LENGTH@ 31
------------------------INS QualifiedName@@JavaType.LONG_PRIMITIVE @TO@ SimpleName@@MethodName:equals:[JavaType.LONG_PRIMITIVE] @AT@ 18357 @LENGTH@ 23
---------------------------INS SimpleName@@JavaType @TO@ QualifiedName@@JavaType.LONG_PRIMITIVE @AT@ 18357 @LENGTH@ 8
---------------------------INS SimpleName@@LONG_PRIMITIVE @TO@ QualifiedName@@JavaType.LONG_PRIMITIVE @AT@ 18366 @LENGTH@ 14
------------------INS Block@@ThenBody:{  gwtSideType=JavaType.LONG_OBJECT;} @TO@ IfStatement@@if (returnType.equals(JavaType.LONG_PRIMITIVE)) {  gwtSideType=JavaType.LONG_OBJECT;} @AT@ 18383 @LENGTH@ 125
---------------------INS ExpressionStatement@@Assignment:gwtSideType=JavaType.LONG_OBJECT @TO@ Block@@ThenBody:{  gwtSideType=JavaType.LONG_OBJECT;} @AT@ 18429 @LENGTH@ 35
------------------------INS Assignment@@gwtSideType=JavaType.LONG_OBJECT @TO@ ExpressionStatement@@Assignment:gwtSideType=JavaType.LONG_OBJECT @AT@ 18429 @LENGTH@ 34
---------------------------INS SimpleName@@gwtSideType @TO@ Assignment@@gwtSideType=JavaType.LONG_OBJECT @AT@ 18429 @LENGTH@ 11
---------------------------INS Operator@@= @TO@ Assignment@@gwtSideType=JavaType.LONG_OBJECT @AT@ 18440 @LENGTH@ 1
---------------------------INS QualifiedName@@JavaType.LONG_OBJECT @TO@ Assignment@@gwtSideType=JavaType.LONG_OBJECT @AT@ 18443 @LENGTH@ 20
------------------------------INS SimpleName@@JavaType @TO@ QualifiedName@@JavaType.LONG_OBJECT @AT@ 18443 @LENGTH@ 8
------------------------------INS SimpleName@@LONG_OBJECT @TO@ QualifiedName@@JavaType.LONG_OBJECT @AT@ 18452 @LENGTH@ 11


UPD FieldDeclaration@@private, int, [maxConcurrentConsumers=0] @TO@ private, int, [maxConcurrentConsumers] @AT@ 3804 @LENGTH@ 39
---UPD VariableDeclarationFragment@@maxConcurrentConsumers=0 @TO@ maxConcurrentConsumers @AT@ 3816 @LENGTH@ 26
------DEL NumberLiteral@@0 @AT@ 3841 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @TO@ MethodDeclaration@@public, void, MethodName:getQueryParameters,  @AT@ 2034 @LENGTH@ 78
---INS MethodInvocation@@assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @AT@ 2034 @LENGTH@ 77
------INS SimpleName@@MethodName:assertEquals:["pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token")] @TO@ MethodInvocation@@assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @AT@ 2034 @LENGTH@ 77
---------INS StringLiteral@@"pipe%7Cdelimited%7Ctoken" @TO@ SimpleName@@MethodName:assertEquals:["pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token")] @AT@ 2047 @LENGTH@ 26
---------INS MethodInvocation@@queryParameters.get("access_token") @TO@ SimpleName@@MethodName:assertEquals:["pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token")] @AT@ 2075 @LENGTH@ 35
------------INS SimpleName@@Name:queryParameters @TO@ MethodInvocation@@queryParameters.get("access_token") @AT@ 2075 @LENGTH@ 15
------------INS SimpleName@@MethodName:get:["access_token"] @TO@ MethodInvocation@@queryParameters.get("access_token") @AT@ 2091 @LENGTH@ 19
---------------INS StringLiteral@@"access_token" @TO@ SimpleName@@MethodName:get:["access_token"] @AT@ 2095 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:this.searchControls.setSearchScope(searchScope) @TO@ MethodDeclaration@@public, voidMethodName:DefaultDirContextValidator, int searchScope,  @AT@ 3630 @LENGTH@ 48
---INS MethodInvocation@@this.searchControls.setSearchScope(searchScope) @TO@ ExpressionStatement@@MethodInvocation:this.searchControls.setSearchScope(searchScope) @AT@ 3630 @LENGTH@ 47
------INS FieldAccess@@this.searchControls @TO@ MethodInvocation@@this.searchControls.setSearchScope(searchScope) @AT@ 3630 @LENGTH@ 19
---------INS ThisExpression@@this @TO@ FieldAccess@@this.searchControls @AT@ 3630 @LENGTH@ 4
---------INS SimpleName@@searchControls @TO@ FieldAccess@@this.searchControls @AT@ 3635 @LENGTH@ 14
------INS SimpleName@@MethodName:setSearchScope:[searchScope] @TO@ MethodInvocation@@this.searchControls.setSearchScope(searchScope) @AT@ 3650 @LENGTH@ 27
---------INS SimpleName@@searchScope @TO@ SimpleName@@MethodName:setSearchScope:[searchScope] @AT@ 3665 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:response.put("max_id","42") @TO@ MethodInvocation:response.put("max_id",42) @AT@ 5503 @LENGTH@ 29
---UPD MethodInvocation@@response.put("max_id","42") @TO@ response.put("max_id",42) @AT@ 5503 @LENGTH@ 28
------UPD SimpleName@@MethodName:put:["max_id", "42"] @TO@ MethodName:put:["max_id", 42] @AT@ 5512 @LENGTH@ 19
---------DEL StringLiteral@@"42" @AT@ 5526 @LENGTH@ 4
---------INS NumberLiteral@@42 @TO@ SimpleName@@MethodName:put:["max_id", "42"] @AT@ 5526 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("AC") @TO@ MethodInvocation:mock.message(0).body().not(body().contains("B")) @AT@ 1371 @LENGTH@ 34
---UPD MethodInvocation@@mock.expectedBodiesReceived("AC") @TO@ mock.message(0).body().not(body().contains("B")) @AT@ 1371 @LENGTH@ 33
------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@mock.expectedBodiesReceived("AC") @AT@ 1374 @LENGTH@ 22
------INS MethodInvocation@@MethodName:message:[0] @TO@ MethodInvocation@@mock.expectedBodiesReceived("AC") @AT@ 1374 @LENGTH@ 15
---------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:message:[0] @AT@ 1387 @LENGTH@ 1
------UPD SimpleName@@MethodName:expectedBodiesReceived:["AC"] @TO@ MethodName:contains:["B"] @AT@ 1376 @LENGTH@ 28
------INS SimpleName@@MethodName:not:[body().contains("B")] @TO@ MethodInvocation@@mock.expectedBodiesReceived("AC") @AT@ 1397 @LENGTH@ 25
---------INS MethodInvocation@@body().contains("B") @TO@ SimpleName@@MethodName:not:[body().contains("B")] @AT@ 1401 @LENGTH@ 20
------------MOV SimpleName@@MethodName:expectedBodiesReceived:["AC"] @TO@ MethodInvocation@@body().contains("B") @AT@ 1376 @LENGTH@ 28
---------------UPD StringLiteral@@"AC" @TO@ "B" @AT@ 1399 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@body().contains("B") @AT@ 1401 @LENGTH@ 6


DEL IfStatement@@if (routeContext.getManagedInterceptStrategy() != null) {  channel.addInterceptStrategy(routeContext.getManagedInterceptStrategy());} @AT@ 9544 @LENGTH@ 153
---DEL InfixExpression@@routeContext.getManagedInterceptStrategy() != null @AT@ 9548 @LENGTH@ 50
------DEL MethodInvocation@@routeContext.getManagedInterceptStrategy() @AT@ 9548 @LENGTH@ 42
---------DEL SimpleName@@Name:routeContext @AT@ 9548 @LENGTH@ 12
---------DEL SimpleName@@MethodName:getManagedInterceptStrategy:[] @AT@ 9561 @LENGTH@ 29
------DEL Operator@@!= @AT@ 9590 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 9594 @LENGTH@ 4
---DEL Block@@ThenBody:{  channel.addInterceptStrategy(routeContext.getManagedInterceptStrategy());} @AT@ 9600 @LENGTH@ 97
------DEL ExpressionStatement@@MethodInvocation:channel.addInterceptStrategy(routeContext.getManagedInterceptStrategy()) @AT@ 9614 @LENGTH@ 73
---------DEL MethodInvocation@@channel.addInterceptStrategy(routeContext.getManagedInterceptStrategy()) @AT@ 9614 @LENGTH@ 72
------------DEL SimpleName@@Name:channel @AT@ 9614 @LENGTH@ 7
------------DEL SimpleName@@MethodName:addInterceptStrategy:[routeContext.getManagedInterceptStrategy()] @AT@ 9622 @LENGTH@ 64
---------------DEL MethodInvocation@@routeContext.getManagedInterceptStrategy() @AT@ 9643 @LENGTH@ 42
------------------DEL SimpleName@@Name:routeContext @AT@ 9643 @LENGTH@ 12
------------------DEL SimpleName@@MethodName:getManagedInterceptStrategy:[] @AT@ 9656 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:socketBindings.unregisterSocket(this) @TO@ MethodInvocation:socketBindings.unregisterBinding(this) @AT@ 1829 @LENGTH@ 38
---UPD MethodInvocation@@socketBindings.unregisterSocket(this) @TO@ socketBindings.unregisterBinding(this) @AT@ 1829 @LENGTH@ 37
------UPD SimpleName@@MethodName:unregisterSocket:[this] @TO@ MethodName:unregisterBinding:[this] @AT@ 1844 @LENGTH@ 22


UPD VariableDeclarationStatement@@Map.Entry entry=(Map.Entry)obj; @TO@ Map.Entry<?,?> entry=(Map.Entry<?,?>)obj; @AT@ 20768 @LENGTH@ 33
---INS ParameterizedType@@Map.Entry<?,?> @TO@ VariableDeclarationStatement@@Map.Entry entry=(Map.Entry)obj; @AT@ 20729 @LENGTH@ 15
------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<?,?> @AT@ 20729 @LENGTH@ 9
------INS WildcardType@@? @TO@ ParameterizedType@@Map.Entry<?,?> @AT@ 20739 @LENGTH@ 1
------INS WildcardType@@? @TO@ ParameterizedType@@Map.Entry<?,?> @AT@ 20742 @LENGTH@ 1
---DEL SimpleType@@Map.Entry @AT@ 20768 @LENGTH@ 9
---UPD VariableDeclarationFragment@@entry=(Map.Entry)obj @TO@ entry=(Map.Entry<?,?>)obj @AT@ 20778 @LENGTH@ 22
------UPD CastExpression@@(Map.Entry)obj @TO@ (Map.Entry<?,?>)obj @AT@ 20786 @LENGTH@ 14
---------INS ParameterizedType@@Map.Entry<?,?> @TO@ CastExpression@@(Map.Entry)obj @AT@ 20754 @LENGTH@ 15
------------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<?,?> @AT@ 20754 @LENGTH@ 9
------------INS WildcardType@@? @TO@ ParameterizedType@@Map.Entry<?,?> @AT@ 20764 @LENGTH@ 1
------------INS WildcardType@@? @TO@ ParameterizedType@@Map.Entry<?,?> @AT@ 20767 @LENGTH@ 1
---------DEL SimpleType@@Map.Entry @AT@ 20787 @LENGTH@ 9


DEL MethodDeclaration@@public, voidMethodName:SubnetMatchCriteriaElement, XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 1043 @LENGTH@ 223
---DEL Modifier@@public @AT@ 1043 @LENGTH@ 6
---DEL SimpleName@@MethodName:SubnetMatchCriteriaElement @AT@ 1050 @LENGTH@ 26
---DEL SingleVariableDeclaration@@XMLExtendedStreamReader reader @AT@ 1077 @LENGTH@ 30
------DEL SimpleType@@XMLExtendedStreamReader @AT@ 1077 @LENGTH@ 23
------DEL SimpleName@@reader @AT@ 1101 @LENGTH@ 6
---DEL SimpleType@@XMLStreamException @AT@ 1116 @LENGTH@ 18


UPD IfStatement@@if (executionId != null) {  JobExecution jobExecution=jobExplorer.getJobExecution(executionId);  if (jobExecution.getStatus().isGreaterThan(minStatus)) {    return Arrays.asList(jobExecution);  }} @TO@ if (executionId != null) {  JobExecution jobExecution=jobExplorer.getJobExecution(executionId);  if (jobExecution.getStatus().isGreaterThan(minStatus)) {    return Arrays.asList(jobExecution);  }  return Collections.emptyList();} @AT@ 12493 @LENGTH@ 208
---UPD Block@@ThenBody:{  JobExecution jobExecution=jobExplorer.getJobExecution(executionId);  if (jobExecution.getStatus().isGreaterThan(minStatus)) {    return Arrays.asList(jobExecution);  }} @TO@ ThenBody:{  JobExecution jobExecution=jobExplorer.getJobExecution(executionId);  if (jobExecution.getStatus().isGreaterThan(minStatus)) {    return Arrays.asList(jobExecution);  }  return Collections.emptyList();} @AT@ 12518 @LENGTH@ 183
------INS ReturnStatement@@MethodInvocation:Collections.emptyList() @TO@ Block@@ThenBody:{  JobExecution jobExecution=jobExplorer.getJobExecution(executionId);  if (jobExecution.getStatus().isGreaterThan(minStatus)) {    return Arrays.asList(jobExecution);  }} @AT@ 12701 @LENGTH@ 31
---------INS MethodInvocation@@Collections.emptyList() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 12708 @LENGTH@ 23
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 12708 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 12720 @LENGTH@ 11


UPD WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{            final ConnectorElement connector=new ConnectorElement(reader);            connectors.put(connector.getName(),connector);            break;          }default :        throw unexpectedElement(reader);    }    break;  }default :throw unexpectedElement(reader);}}} @TO@ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{      final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{          final ConnectorElement connector=new ConnectorElement(reader);          connectors.put(connector.getName(),connector);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}} @AT@ 4831 @LENGTH@ 866
---INS InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @TO@ WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{            final ConnectorElement connector=new ConnectorElement(reader);            connectors.put(connector.getName(),connector);            break;          }default :        throw unexpectedElement(reader);    }    break;  }default :throw unexpectedElement(reader);}}} @AT@ 4838 @LENGTH@ 51
------INS MethodInvocation@@reader.hasNext() @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 4838 @LENGTH@ 16
---------MOV SimpleName@@Name:reader @TO@ MethodInvocation@@reader.hasNext() @AT@ 4838 @LENGTH@ 6
---------MOV SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@reader.hasNext() @AT@ 4845 @LENGTH@ 9
------INS Operator@@&& @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 4854 @LENGTH@ 2
------INS InfixExpression@@reader.nextTag() != END_ELEMENT @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 4858 @LENGTH@ 31
---------MOV MethodInvocation@@reader.nextTag() @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 4874 @LENGTH@ 16
---------MOV Operator@@== @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 4890 @LENGTH@ 2
---------MOV SimpleName@@START_ELEMENT @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 4894 @LENGTH@ 13
---DEL MethodInvocation@@reader.hasNext() @AT@ 4838 @LENGTH@ 16
---DEL Block@@WhileBody:{  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{            final ConnectorElement connector=new ConnectorElement(reader);            connectors.put(connector.getName(),connector);            break;          }default :        throw unexpectedElement(reader);    }    break;  }default :throw unexpectedElement(reader);}}} @AT@ 4856 @LENGTH@ 841
------DEL IfStatement@@if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{      final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{          final ConnectorElement connector=new ConnectorElement(reader);          connectors.put(connector.getName(),connector);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}} @AT@ 4870 @LENGTH@ 817
---------DEL InfixExpression@@reader.nextTag() == START_ELEMENT @AT@ 4874 @LENGTH@ 33
---MOV Block@@ThenBody:{switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{      final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{          final ConnectorElement connector=new ConnectorElement(reader);          connectors.put(connector.getName(),connector);          break;        }default :      throw unexpectedElement(reader);  }  break;}default :throw unexpectedElement(reader);}} @TO@ WhileStatement@@while (reader.hasNext()) {  if (reader.nextTag() == START_ELEMENT) {switch (Namespace.forUri(reader.getNamespaceURI())) {case REMOTING_1_0:{        final Element element=Element.forName(reader.getLocalName());switch (element) {case CONNECTOR:{            final ConnectorElement connector=new ConnectorElement(reader);            connectors.put(connector.getName(),connector);            break;          }default :        throw unexpectedElement(reader);    }    break;  }default :throw unexpectedElement(reader);}}} @AT@ 4909 @LENGTH@ 778


INS ExpressionStatement@@MethodInvocation:endpointService.setOptionMap(OptionMap.EMPTY) @TO@ MethodDeclaration@@protected, void, P, MethodName:applyUpdate, final UpdateContext updateContext, final UpdateResultHandler<? super Void,P> resultHandler, final P param,  @AT@ 2275 @LENGTH@ 46
---INS MethodInvocation@@endpointService.setOptionMap(OptionMap.EMPTY) @TO@ ExpressionStatement@@MethodInvocation:endpointService.setOptionMap(OptionMap.EMPTY) @AT@ 2275 @LENGTH@ 45
------INS SimpleName@@Name:endpointService @TO@ MethodInvocation@@endpointService.setOptionMap(OptionMap.EMPTY) @AT@ 2275 @LENGTH@ 15
------INS SimpleName@@MethodName:setOptionMap:[OptionMap.EMPTY] @TO@ MethodInvocation@@endpointService.setOptionMap(OptionMap.EMPTY) @AT@ 2291 @LENGTH@ 29
---------INS QualifiedName@@OptionMap.EMPTY @TO@ SimpleName@@MethodName:setOptionMap:[OptionMap.EMPTY] @AT@ 2304 @LENGTH@ 15
------------INS SimpleName@@OptionMap @TO@ QualifiedName@@OptionMap.EMPTY @AT@ 2304 @LENGTH@ 9
------------INS SimpleName@@EMPTY @TO@ QualifiedName@@OptionMap.EMPTY @AT@ 2314 @LENGTH@ 5


UPD Block@@ElseBody:if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {  if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {    throw new IOException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}));  }  if (xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  encoding=bomEnc;} else {  throw new XmlStreamReaderException(RAW_EX_2.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);} @TO@ ElseBody:if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {  if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  if (xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  encoding=bomEnc;} else {  throw new XmlStreamReaderException(RAW_EX_2.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);} @AT@ 18071 @LENGTH@ 826
---UPD IfStatement@@if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {  if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {    throw new IOException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}));  }  if (xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  encoding=bomEnc;} else {  throw new XmlStreamReaderException(RAW_EX_2.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);} @TO@ if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {  if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  if (xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  encoding=bomEnc;} else {  throw new XmlStreamReaderException(RAW_EX_2.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);} @AT@ 18071 @LENGTH@ 826
------UPD Block@@ThenBody:{  if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {    throw new IOException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}));  }  if (xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  encoding=bomEnc;} @TO@ ThenBody:{  if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  if (xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  encoding=bomEnc;} @AT@ 18127 @LENGTH@ 569
---------UPD IfStatement@@if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {  throw new IOException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}));} @TO@ if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {  throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);} @AT@ 18141 @LENGTH@ 197
------------UPD Block@@ThenBody:{  throw new IOException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}));} @TO@ ThenBody:{  throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);} @AT@ 18197 @LENGTH@ 141
---------------UPD ThrowStatement@@ClassInstanceCreation:new IOException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc})) @TO@ ClassInstanceCreation:new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is) @AT@ 18215 @LENGTH@ 109
------------------UPD ClassInstanceCreation@@IOException[RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc})] @TO@ XmlStreamReaderException[RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}), bomEnc, xmlGuessEnc, xmlEnc, is] @AT@ 18221 @LENGTH@ 102
---------------------UPD SimpleType@@IOException @TO@ XmlStreamReaderException @AT@ 18225 @LENGTH@ 11
---------------------INS SimpleName@@bomEnc @TO@ ClassInstanceCreation@@IOException[RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc})] @AT@ 18337 @LENGTH@ 6
---------------------INS SimpleName@@xmlGuessEnc @TO@ ClassInstanceCreation@@IOException[RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc})] @AT@ 18345 @LENGTH@ 11
---------------------INS SimpleName@@xmlEnc @TO@ ClassInstanceCreation@@IOException[RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc})] @AT@ 18358 @LENGTH@ 6
---------------------INS SimpleName@@is @TO@ ClassInstanceCreation@@IOException[RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc})] @AT@ 18366 @LENGTH@ 2
---UPD IfStatement@@if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {  if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {    throw new IOException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}));  }  if (xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  encoding=bomEnc;} else {  throw new XmlStreamReaderException(RAW_EX_2.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);} @TO@ if (bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE)) {  if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  if (xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  encoding=bomEnc;} else {  throw new XmlStreamReaderException(RAW_EX_2.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);} @AT@ 18071 @LENGTH@ 826
------UPD Block@@ThenBody:{  if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {    throw new IOException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}));  }  if (xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  encoding=bomEnc;} @TO@ ThenBody:{  if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  if (xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc)) {    throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);  }  encoding=bomEnc;} @AT@ 18127 @LENGTH@ 569
---------UPD IfStatement@@if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {  throw new IOException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}));} @TO@ if (xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc)) {  throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);} @AT@ 18141 @LENGTH@ 197
------------UPD Block@@ThenBody:{  throw new IOException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}));} @TO@ ThenBody:{  throw new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is);} @AT@ 18197 @LENGTH@ 141
---------------UPD ThrowStatement@@ClassInstanceCreation:new IOException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc})) @TO@ ClassInstanceCreation:new XmlStreamReaderException(RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}),bomEnc,xmlGuessEnc,xmlEnc,is) @AT@ 18215 @LENGTH@ 109
------------------UPD ClassInstanceCreation@@IOException[RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc})] @TO@ XmlStreamReaderException[RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc}), bomEnc, xmlGuessEnc, xmlEnc, is] @AT@ 18221 @LENGTH@ 102
---------------------UPD SimpleType@@IOException @TO@ XmlStreamReaderException @AT@ 18225 @LENGTH@ 11
---------------------INS SimpleName@@bomEnc @TO@ ClassInstanceCreation@@IOException[RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc})] @AT@ 18337 @LENGTH@ 6
---------------------INS SimpleName@@xmlGuessEnc @TO@ ClassInstanceCreation@@IOException[RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc})] @AT@ 18345 @LENGTH@ 11
---------------------INS SimpleName@@xmlEnc @TO@ ClassInstanceCreation@@IOException[RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc})] @AT@ 18358 @LENGTH@ 6
---------------------INS SimpleName@@is @TO@ ClassInstanceCreation@@IOException[RAW_EX_1.format(new Object[]{bomEnc,xmlGuessEnc,xmlEnc})] @AT@ 18366 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:cloned.delegateMap=(HashedMap<K,V>)cloned.delegateMap.clone() @TO@ Assignment:cloned.delegateMap=cloned.delegateMap.clone() @AT@ 33243 @LENGTH@ 66
---UPD Assignment@@cloned.delegateMap=(HashedMap<K,V>)cloned.delegateMap.clone() @TO@ cloned.delegateMap=cloned.delegateMap.clone() @AT@ 33243 @LENGTH@ 65
------DEL CastExpression@@(HashedMap<K,V>)cloned.delegateMap.clone() @AT@ 33264 @LENGTH@ 44
---------DEL ParameterizedType@@HashedMap<K,V> @AT@ 33265 @LENGTH@ 15
------------DEL SimpleType@@HashedMap @AT@ 33265 @LENGTH@ 9
------------DEL SimpleType@@K @AT@ 33275 @LENGTH@ 1
------------DEL SimpleType@@V @AT@ 33278 @LENGTH@ 1
---------DEL MethodInvocation@@cloned.delegateMap.clone() @AT@ 33282 @LENGTH@ 26
------INS MethodInvocation@@cloned.delegateMap.clone() @TO@ Assignment@@cloned.delegateMap=(HashedMap<K,V>)cloned.delegateMap.clone() @AT@ 33264 @LENGTH@ 26
---------MOV QualifiedName@@Name:cloned.delegateMap @TO@ MethodInvocation@@cloned.delegateMap.clone() @AT@ 33282 @LENGTH@ 18
---------MOV SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@cloned.delegateMap.clone() @AT@ 33301 @LENGTH@ 7


UPD VariableDeclarationStatement@@DefaultKeyValue other=(DefaultKeyValue)obj; @TO@ DefaultKeyValue<?,?> other=(DefaultKeyValue<?,?>)obj; @AT@ 4434 @LENGTH@ 46
---INS ParameterizedType@@DefaultKeyValue<?,?> @TO@ VariableDeclarationStatement@@DefaultKeyValue other=(DefaultKeyValue)obj; @AT@ 4399 @LENGTH@ 21
------INS SimpleType@@DefaultKeyValue @TO@ ParameterizedType@@DefaultKeyValue<?,?> @AT@ 4399 @LENGTH@ 15
------INS WildcardType@@? @TO@ ParameterizedType@@DefaultKeyValue<?,?> @AT@ 4415 @LENGTH@ 1
------INS WildcardType@@? @TO@ ParameterizedType@@DefaultKeyValue<?,?> @AT@ 4418 @LENGTH@ 1
---DEL SimpleType@@DefaultKeyValue @AT@ 4434 @LENGTH@ 15
---UPD VariableDeclarationFragment@@other=(DefaultKeyValue)obj @TO@ other=(DefaultKeyValue<?,?>)obj @AT@ 4450 @LENGTH@ 29
------UPD CastExpression@@(DefaultKeyValue)obj @TO@ (DefaultKeyValue<?,?>)obj @AT@ 4458 @LENGTH@ 21
---------INS ParameterizedType@@DefaultKeyValue<?,?> @TO@ CastExpression@@(DefaultKeyValue)obj @AT@ 4430 @LENGTH@ 21
------------INS SimpleType@@DefaultKeyValue @TO@ ParameterizedType@@DefaultKeyValue<?,?> @AT@ 4430 @LENGTH@ 15
------------INS WildcardType@@? @TO@ ParameterizedType@@DefaultKeyValue<?,?> @AT@ 4446 @LENGTH@ 1
------------INS WildcardType@@? @TO@ ParameterizedType@@DefaultKeyValue<?,?> @AT@ 4449 @LENGTH@ 1
---------DEL SimpleType@@DefaultKeyValue @AT@ 4459 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:resultEndpoint.expectedMessageCount(2) @TO@ MethodInvocation:resultEndpoint.expectedMinimumMessageCount(1) @AT@ 2012 @LENGTH@ 39
---UPD MethodInvocation@@resultEndpoint.expectedMessageCount(2) @TO@ resultEndpoint.expectedMinimumMessageCount(1) @AT@ 2012 @LENGTH@ 38
------UPD SimpleName@@MethodName:expectedMessageCount:[2] @TO@ MethodName:expectedMinimumMessageCount:[1] @AT@ 2027 @LENGTH@ 23
---------UPD NumberLiteral@@2 @TO@ 1 @AT@ 2048 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:WebDeploymentActivator.activate(defaultHost,new SharedWebMetaDataBuilder(config),context.getBatchBuilder()) @TO@ MethodInvocation:WebDeploymentActivator.activate(defaultHost,new SharedWebMetaDataBuilder(config),new SharedTldsMetaDataBuilder(config),context.getBatchBuilder()) @AT@ 2581 @LENGTH@ 110
---UPD MethodInvocation@@WebDeploymentActivator.activate(defaultHost,new SharedWebMetaDataBuilder(config),context.getBatchBuilder()) @TO@ WebDeploymentActivator.activate(defaultHost,new SharedWebMetaDataBuilder(config),new SharedTldsMetaDataBuilder(config),context.getBatchBuilder()) @AT@ 2581 @LENGTH@ 109
------UPD SimpleName@@MethodName:activate:[defaultHost, new SharedWebMetaDataBuilder(config), context.getBatchBuilder()] @TO@ MethodName:activate:[defaultHost, new SharedWebMetaDataBuilder(config), new SharedTldsMetaDataBuilder(config), context.getBatchBuilder()] @AT@ 2604 @LENGTH@ 86
---------INS ClassInstanceCreation@@SharedTldsMetaDataBuilder[config] @TO@ SimpleName@@MethodName:activate:[defaultHost, new SharedWebMetaDataBuilder(config), context.getBatchBuilder()] @AT@ 2664 @LENGTH@ 37
------------INS New@@new @TO@ ClassInstanceCreation@@SharedTldsMetaDataBuilder[config] @AT@ 2664 @LENGTH@ 3
------------INS SimpleType@@SharedTldsMetaDataBuilder @TO@ ClassInstanceCreation@@SharedTldsMetaDataBuilder[config] @AT@ 2668 @LENGTH@ 25
------------INS SimpleName@@config @TO@ ClassInstanceCreation@@SharedTldsMetaDataBuilder[config] @AT@ 2694 @LENGTH@ 6


UPD VariableDeclarationStatement@@Set set=TransformedSortedSet.decorateTransform(originalSet,TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER); @TO@ Set<?> set=TransformedSortedSet.decorateTransform(originalSet,TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER); @AT@ 3439 @LENGTH@ 119
---DEL SimpleType@@Set @AT@ 3439 @LENGTH@ 3
---INS ParameterizedType@@Set<?> @TO@ VariableDeclarationStatement@@Set set=TransformedSortedSet.decorateTransform(originalSet,TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER); @AT@ 3455 @LENGTH@ 6
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<?> @AT@ 3455 @LENGTH@ 3
------INS WildcardType@@? @TO@ ParameterizedType@@Set<?> @AT@ 3459 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:startLatch.await() @TO@ MethodInvocation:startLatch.await(30,TimeUnit.SECONDS) @AT@ 1709 @LENGTH@ 19
---UPD MethodInvocation@@startLatch.await() @TO@ startLatch.await(30,TimeUnit.SECONDS) @AT@ 1709 @LENGTH@ 18
------UPD SimpleName@@MethodName:await:[] @TO@ MethodName:await:[30, TimeUnit.SECONDS] @AT@ 1720 @LENGTH@ 7
---------INS NumberLiteral@@30 @TO@ SimpleName@@MethodName:await:[] @AT@ 1829 @LENGTH@ 2
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ SimpleName@@MethodName:await:[] @AT@ 1833 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 1833 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 1842 @LENGTH@ 7


UPD MethodDeclaration@@private, void, MethodName:addNonSkippableExceptionIfMissing, Class... cls,  @TO@ private, void, MethodName:addNonSkippableExceptionIfMissing, Class<? extends Throwable>... cls,  @AT@ 19616 @LENGTH@ 378
---UPD SingleVariableDeclaration@@Class... cls @TO@ Class<? extends Throwable>... cls @AT@ 19663 @LENGTH@ 12
------DEL SimpleType@@Class @AT@ 19663 @LENGTH@ 5
------INS ParameterizedType@@Class<? extends Throwable> @TO@ SingleVariableDeclaration@@Class... cls @AT@ 19663 @LENGTH@ 26
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 19663 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 19669 @LENGTH@ 19
---UPD VariableDeclarationStatement@@List exceptions=new ArrayList<Class<? extends Throwable>>(); @TO@ List<Class<? extends Throwable>> exceptions=new ArrayList<Class<? extends Throwable>>(); @AT@ 19681 @LENGTH@ 62
------DEL SimpleType@@List @AT@ 19681 @LENGTH@ 4
------INS ParameterizedType@@List<Class<? extends Throwable>> @TO@ VariableDeclarationStatement@@List exceptions=new ArrayList<Class<? extends Throwable>>(); @AT@ 19702 @LENGTH@ 32
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Class<? extends Throwable>> @AT@ 19702 @LENGTH@ 4
---------INS ParameterizedType@@Class<? extends Throwable> @TO@ ParameterizedType@@List<Class<? extends Throwable>> @AT@ 19707 @LENGTH@ 26
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 19707 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 19713 @LENGTH@ 19
---UPD EnhancedForStatement@@for (Class exceptionClass : nonSkippableExceptionClasses) {  exceptions.add(exceptionClass);} @TO@ for (Class<? extends Throwable> exceptionClass : nonSkippableExceptionClasses) {  exceptions.add(exceptionClass);} @AT@ 19746 @LENGTH@ 98
------UPD SingleVariableDeclaration@@Class exceptionClass @TO@ Class<? extends Throwable> exceptionClass @AT@ 19751 @LENGTH@ 20
---------DEL SimpleType@@Class @AT@ 19751 @LENGTH@ 5
---------INS ParameterizedType@@Class<? extends Throwable> @TO@ SingleVariableDeclaration@@Class exceptionClass @AT@ 19800 @LENGTH@ 26
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 19800 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 19806 @LENGTH@ 19
---UPD EnhancedForStatement@@for (Class fatal : cls) {  if (!exceptions.contains(fatal)) {    exceptions.add(fatal);  }} @TO@ for (Class<? extends Throwable> fatal : cls) {  if (!exceptions.contains(fatal)) {    exceptions.add(fatal);  }} @AT@ 19847 @LENGTH@ 99
------UPD SingleVariableDeclaration@@Class fatal @TO@ Class<? extends Throwable> fatal @AT@ 19852 @LENGTH@ 11
---------DEL SimpleType@@Class @AT@ 19852 @LENGTH@ 5
---------INS ParameterizedType@@Class<? extends Throwable> @TO@ SingleVariableDeclaration@@Class fatal @AT@ 19922 @LENGTH@ 26
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 19922 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 19928 @LENGTH@ 19


UPD SwitchStatement@@switch (element) {case ANY_ADDRESS:case ANY_IPV4_ADDRESS:case ANY_IPV6_ADDRESS:{    if (!first || anyElement != null) {      throw unexpectedElement(reader);    }    requireNoAttributes(reader);    requireNoContent(reader);    if (reader.nextTag() != END_ELEMENT) {      throw unexpectedElement(reader);    }    anyElement=element;  }default :{  if (anyElement != null) {    throw unexpectedElement(reader);  }switch (element) {case ANY:case NOT:{      final CompoundCriteriaElement criteria=InterfaceParsingUtils.createCompoundCriteria(reader,element == Element.ANY);      interfaceCriteria.put(element,criteria);      break;    }default :{    final AbstractInterfaceCriteriaElement<?> criteria=InterfaceParsingUtils.parseSimpleInterfaceCriteria(reader,element);    interfaceCriteria.put(element,criteria);  }}}} @TO@ switch (element) {case ANY_ADDRESS:case ANY_IPV4_ADDRESS:case ANY_IPV6_ADDRESS:{    if (!first || anyElement != null) {      throw unexpectedElement(reader);    }    requireNoAttributes(reader);    requireNoContent(reader);    anyElement=element;    break;  }default :{  if (anyElement != null) {    throw unexpectedElement(reader);  }switch (element) {case ANY:case NOT:{      final CompoundCriteriaElement criteria=InterfaceParsingUtils.createCompoundCriteria(reader,element == Element.ANY);      interfaceCriteria.put(element,criteria);      break;    }default :{    final AbstractInterfaceCriteriaElement<?> criteria=InterfaceParsingUtils.parseSimpleInterfaceCriteria(reader,element);    interfaceCriteria.put(element,criteria);  }}}} @AT@ 26414 @LENGTH@ 1600
---DEL IfStatement@@if (reader.nextTag() != END_ELEMENT) {  throw unexpectedElement(reader);} @AT@ 26880 @LENGTH@ 125
------DEL InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 26884 @LENGTH@ 31
---------DEL MethodInvocation@@reader.nextTag() @AT@ 26884 @LENGTH@ 16
------------DEL SimpleName@@Name:reader @AT@ 26884 @LENGTH@ 6
------------DEL SimpleName@@MethodName:nextTag:[] @AT@ 26891 @LENGTH@ 9
---------DEL Operator@@!= @AT@ 26900 @LENGTH@ 2
---------DEL SimpleName@@END_ELEMENT @AT@ 26904 @LENGTH@ 11
------DEL Block@@ThenBody:{  throw unexpectedElement(reader);} @AT@ 26917 @LENGTH@ 88
---------DEL ThrowStatement@@MethodInvocation:unexpectedElement(reader) @AT@ 26947 @LENGTH@ 32
------------DEL MethodInvocation@@unexpectedElement(reader) @AT@ 26953 @LENGTH@ 25
---------------DEL SimpleName@@MethodName:unexpectedElement:[reader] @AT@ 26953 @LENGTH@ 25
------------------DEL SimpleName@@reader @AT@ 26971 @LENGTH@ 6
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (element) {case ANY_ADDRESS:case ANY_IPV4_ADDRESS:case ANY_IPV6_ADDRESS:{    if (!first || anyElement != null) {      throw unexpectedElement(reader);    }    requireNoAttributes(reader);    requireNoContent(reader);    if (reader.nextTag() != END_ELEMENT) {      throw unexpectedElement(reader);    }    anyElement=element;  }default :{  if (anyElement != null) {    throw unexpectedElement(reader);  }switch (element) {case ANY:case NOT:{      final CompoundCriteriaElement criteria=InterfaceParsingUtils.createCompoundCriteria(reader,element == Element.ANY);      interfaceCriteria.put(element,criteria);      break;    }default :{    final AbstractInterfaceCriteriaElement<?> criteria=InterfaceParsingUtils.parseSimpleInterfaceCriteria(reader,element);    interfaceCriteria.put(element,criteria);  }}}} @AT@ 27125 @LENGTH@ 6


UPD SwitchStatement@@switch (Attribute.forName(reader.getAttributeLocalName(i))) {case TIME:{    qty=reader.getLongAttributeValue(i);    break;  }case UNIT:{  unit=reader.getAttributeValue(i,TimeUnit.class);  break;}default :{throw unexpectedAttribute(reader,i);}} @TO@ switch (Attribute.forName(reader.getAttributeLocalName(i))) {case TIME:{    qty=reader.getLongAttributeValue(i);    break;  }case UNIT:{  String val=reader.getAttributeValue(i);  unit=Enum.valueOf(TimeUnit.class,val.toUpperCase());  break;}default :{throw unexpectedAttribute(reader,i);}} @AT@ 3338 @LENGTH@ 457
---UPD ExpressionStatement@@Assignment:unit=reader.getAttributeValue(i,TimeUnit.class) @TO@ Assignment:unit=Enum.valueOf(TimeUnit.class,val.toUpperCase()) @AT@ 3582 @LENGTH@ 51
------UPD Assignment@@unit=reader.getAttributeValue(i,TimeUnit.class) @TO@ unit=Enum.valueOf(TimeUnit.class,val.toUpperCase()) @AT@ 3582 @LENGTH@ 50
---------UPD MethodInvocation@@reader.getAttributeValue(i,TimeUnit.class) @TO@ Enum.valueOf(TimeUnit.class,val.toUpperCase()) @AT@ 3589 @LENGTH@ 43
------------UPD SimpleName@@Name:reader @TO@ Name:Enum @AT@ 3589 @LENGTH@ 6
------------UPD SimpleName@@MethodName:getAttributeValue:[i, TimeUnit.class] @TO@ MethodName:valueOf:[TimeUnit.class, val.toUpperCase()] @AT@ 3596 @LENGTH@ 36
---------------DEL SimpleName@@i @AT@ 3614 @LENGTH@ 1
---------------INS MethodInvocation@@val.toUpperCase() @TO@ SimpleName@@MethodName:getAttributeValue:[i, TimeUnit.class] @AT@ 3881 @LENGTH@ 17
------------------INS SimpleName@@Name:val @TO@ MethodInvocation@@val.toUpperCase() @AT@ 3881 @LENGTH@ 3
------------------INS SimpleName@@MethodName:toUpperCase:[] @TO@ MethodInvocation@@val.toUpperCase() @AT@ 3885 @LENGTH@ 13
---INS VariableDeclarationStatement@@String val=reader.getAttributeValue(i); @TO@ SwitchStatement@@switch (Attribute.forName(reader.getAttributeLocalName(i))) {case TIME:{    qty=reader.getLongAttributeValue(i);    break;  }case UNIT:{  unit=reader.getAttributeValue(i,TimeUnit.class);  break;}default :{throw unexpectedAttribute(reader,i);}} @AT@ 3783 @LENGTH@ 41
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String val=reader.getAttributeValue(i); @AT@ 3783 @LENGTH@ 6
------INS VariableDeclarationFragment@@val=reader.getAttributeValue(i) @TO@ VariableDeclarationStatement@@String val=reader.getAttributeValue(i); @AT@ 3790 @LENGTH@ 33
---------INS SimpleName@@val @TO@ VariableDeclarationFragment@@val=reader.getAttributeValue(i) @AT@ 3790 @LENGTH@ 3
---------INS MethodInvocation@@reader.getAttributeValue(i) @TO@ VariableDeclarationFragment@@val=reader.getAttributeValue(i) @AT@ 3796 @LENGTH@ 27
------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.getAttributeValue(i) @AT@ 3796 @LENGTH@ 6
------------INS SimpleName@@MethodName:getAttributeValue:[i] @TO@ MethodInvocation@@reader.getAttributeValue(i) @AT@ 3803 @LENGTH@ 20
---------------INS SimpleName@@i @TO@ SimpleName@@MethodName:getAttributeValue:[i] @AT@ 3821 @LENGTH@ 1


UPD Block@@WhileBody:{  String foreignTableName=rs.getString("FKTABLE_NAME");  ForeignKey foreignKey=new ForeignKey(rs.getString("FK_NAME"));  foreignKey.setForeignTableName(foreignTableName);  foreignKey.setOnUpdate(getCascadeAction(rs.getShort("UPDATE_RULE")));  foreignKey.setOnDelete(getCascadeAction(rs.getShort("DELETE_RULE")));  Reference reference=new Reference();  reference.setSequenceValue(rs.getShort("KEY_SEQ"));  reference.setLocalColumnName(rs.getString("PKCOLUMN_NAME"));  reference.setForeignColumnName(rs.getString("FKCOLUMN_NAME"));  if (exportedKeys.containsKey(foreignTableName)) {    exportedKeys.get(foreignTableName).addReference(reference);  } else {    foreignKey.addReference(reference);    exportedKeys.put(foreignTableName,foreignKey);  }} @TO@ WhileBody:{  String name=rs.getString("FK_NAME");  String foreignTableName=rs.getString("FKTABLE_NAME");  String key=name + "_" + foreignTableName;  ForeignKey foreignKey=new ForeignKey(name,foreignTableName);  foreignKey.setOnUpdate(getCascadeAction(rs.getShort("UPDATE_RULE")));  foreignKey.setOnDelete(getCascadeAction(rs.getShort("DELETE_RULE")));  Reference reference=new Reference();  reference.setSequenceValue(rs.getShort("KEY_SEQ"));  reference.setLocalColumnName(rs.getString("PKCOLUMN_NAME"));  reference.setForeignColumnName(rs.getString("FKCOLUMN_NAME"));  if (exportedKeys.containsKey(key)) {    exportedKeys.get(key).addReference(reference);  } else {    foreignKey.addReference(reference);    exportedKeys.put(key,foreignKey);  }} @AT@ 6653 @LENGTH@ 802
---MOV VariableDeclarationStatement@@String foreignTableName=rs.getString("FKTABLE_NAME"); @TO@ Block@@WhileBody:{  String foreignTableName=rs.getString("FKTABLE_NAME");  ForeignKey foreignKey=new ForeignKey(rs.getString("FK_NAME"));  foreignKey.setForeignTableName(foreignTableName);  foreignKey.setOnUpdate(getCascadeAction(rs.getShort("UPDATE_RULE")));  foreignKey.setOnDelete(getCascadeAction(rs.getShort("DELETE_RULE")));  Reference reference=new Reference();  reference.setSequenceValue(rs.getShort("KEY_SEQ"));  reference.setLocalColumnName(rs.getString("PKCOLUMN_NAME"));  reference.setForeignColumnName(rs.getString("FKCOLUMN_NAME"));  if (exportedKeys.containsKey(foreignTableName)) {    exportedKeys.get(foreignTableName).addReference(reference);  } else {    foreignKey.addReference(reference);    exportedKeys.put(foreignTableName,foreignKey);  }} @AT@ 6659 @LENGTH@ 55
---UPD VariableDeclarationStatement@@ForeignKey foreignKey=new ForeignKey(rs.getString("FK_NAME")); @TO@ String name=rs.getString("FK_NAME"); @AT@ 6719 @LENGTH@ 64
------UPD SimpleType@@ForeignKey @TO@ String @AT@ 6719 @LENGTH@ 10
------UPD VariableDeclarationFragment@@foreignKey=new ForeignKey(rs.getString("FK_NAME")) @TO@ name=rs.getString("FK_NAME") @AT@ 6730 @LENGTH@ 52
---------UPD SimpleName@@foreignKey @TO@ name @AT@ 6730 @LENGTH@ 10
---------DEL ClassInstanceCreation@@ForeignKey[rs.getString("FK_NAME")] @AT@ 6743 @LENGTH@ 39
------------DEL New@@new @AT@ 6743 @LENGTH@ 3
------------DEL SimpleType@@ForeignKey @AT@ 6747 @LENGTH@ 10
---------MOV MethodInvocation@@rs.getString("FK_NAME") @TO@ VariableDeclarationFragment@@foreignKey=new ForeignKey(rs.getString("FK_NAME")) @AT@ 6758 @LENGTH@ 23
---INS VariableDeclarationStatement@@String key=name + "_" + foreignTableName; @TO@ Block@@WhileBody:{  String foreignTableName=rs.getString("FKTABLE_NAME");  ForeignKey foreignKey=new ForeignKey(rs.getString("FK_NAME"));  foreignKey.setForeignTableName(foreignTableName);  foreignKey.setOnUpdate(getCascadeAction(rs.getShort("UPDATE_RULE")));  foreignKey.setOnDelete(getCascadeAction(rs.getShort("DELETE_RULE")));  Reference reference=new Reference();  reference.setSequenceValue(rs.getShort("KEY_SEQ"));  reference.setLocalColumnName(rs.getString("PKCOLUMN_NAME"));  reference.setForeignColumnName(rs.getString("FKCOLUMN_NAME"));  if (exportedKeys.containsKey(foreignTableName)) {    exportedKeys.get(foreignTableName).addReference(reference);  } else {    foreignKey.addReference(reference);    exportedKeys.put(foreignTableName,foreignKey);  }} @AT@ 6764 @LENGTH@ 43
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key=name + "_" + foreignTableName; @AT@ 6764 @LENGTH@ 6
------INS VariableDeclarationFragment@@key=name + "_" + foreignTableName @TO@ VariableDeclarationStatement@@String key=name + "_" + foreignTableName; @AT@ 6771 @LENGTH@ 35
---------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=name + "_" + foreignTableName @AT@ 6771 @LENGTH@ 3
---------INS InfixExpression@@name + "_" + foreignTableName @TO@ VariableDeclarationFragment@@key=name + "_" + foreignTableName @AT@ 6777 @LENGTH@ 29
------------INS SimpleName@@name @TO@ InfixExpression@@name + "_" + foreignTableName @AT@ 6777 @LENGTH@ 4
------------INS Operator@@+ @TO@ InfixExpression@@name + "_" + foreignTableName @AT@ 6781 @LENGTH@ 1
------------INS StringLiteral@@"_" @TO@ InfixExpression@@name + "_" + foreignTableName @AT@ 6784 @LENGTH@ 3
------------INS SimpleName@@foreignTableName @TO@ InfixExpression@@name + "_" + foreignTableName @AT@ 6790 @LENGTH@ 16
---DEL ExpressionStatement@@MethodInvocation:foreignKey.setForeignTableName(foreignTableName) @AT@ 6788 @LENGTH@ 49
------DEL MethodInvocation@@foreignKey.setForeignTableName(foreignTableName) @AT@ 6788 @LENGTH@ 48
---------DEL SimpleName@@Name:foreignKey @AT@ 6788 @LENGTH@ 10
---------DEL SimpleName@@MethodName:setForeignTableName:[foreignTableName] @AT@ 6799 @LENGTH@ 37
------------DEL SimpleName@@foreignTableName @AT@ 6819 @LENGTH@ 16
---INS VariableDeclarationStatement@@ForeignKey foreignKey=new ForeignKey(name,foreignTableName); @TO@ Block@@WhileBody:{  String foreignTableName=rs.getString("FKTABLE_NAME");  ForeignKey foreignKey=new ForeignKey(rs.getString("FK_NAME"));  foreignKey.setForeignTableName(foreignTableName);  foreignKey.setOnUpdate(getCascadeAction(rs.getShort("UPDATE_RULE")));  foreignKey.setOnDelete(getCascadeAction(rs.getShort("DELETE_RULE")));  Reference reference=new Reference();  reference.setSequenceValue(rs.getShort("KEY_SEQ"));  reference.setLocalColumnName(rs.getString("PKCOLUMN_NAME"));  reference.setForeignColumnName(rs.getString("FKCOLUMN_NAME"));  if (exportedKeys.containsKey(foreignTableName)) {    exportedKeys.get(foreignTableName).addReference(reference);  } else {    foreignKey.addReference(reference);    exportedKeys.put(foreignTableName,foreignKey);  }} @AT@ 6813 @LENGTH@ 63
------INS SimpleType@@ForeignKey @TO@ VariableDeclarationStatement@@ForeignKey foreignKey=new ForeignKey(name,foreignTableName); @AT@ 6813 @LENGTH@ 10
------INS VariableDeclarationFragment@@foreignKey=new ForeignKey(name,foreignTableName) @TO@ VariableDeclarationStatement@@ForeignKey foreignKey=new ForeignKey(name,foreignTableName); @AT@ 6824 @LENGTH@ 51
---------INS SimpleName@@foreignKey @TO@ VariableDeclarationFragment@@foreignKey=new ForeignKey(name,foreignTableName) @AT@ 6824 @LENGTH@ 10
---------INS ClassInstanceCreation@@ForeignKey[name, foreignTableName] @TO@ VariableDeclarationFragment@@foreignKey=new ForeignKey(name,foreignTableName) @AT@ 6837 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@ForeignKey[name, foreignTableName] @AT@ 6837 @LENGTH@ 3
------------INS SimpleType@@ForeignKey @TO@ ClassInstanceCreation@@ForeignKey[name, foreignTableName] @AT@ 6841 @LENGTH@ 10
------------INS SimpleName@@name @TO@ ClassInstanceCreation@@ForeignKey[name, foreignTableName] @AT@ 6852 @LENGTH@ 4
------------INS SimpleName@@foreignTableName @TO@ ClassInstanceCreation@@ForeignKey[name, foreignTableName] @AT@ 6858 @LENGTH@ 16
---UPD IfStatement@@if (exportedKeys.containsKey(foreignTableName)) {  exportedKeys.get(foreignTableName).addReference(reference);} else {  foreignKey.addReference(reference);  exportedKeys.put(foreignTableName,foreignKey);} @TO@ if (exportedKeys.containsKey(key)) {  exportedKeys.get(key).addReference(reference);} else {  foreignKey.addReference(reference);  exportedKeys.put(key,foreignKey);} @AT@ 7223 @LENGTH@ 227
------UPD MethodInvocation@@exportedKeys.containsKey(foreignTableName) @TO@ exportedKeys.containsKey(key) @AT@ 7227 @LENGTH@ 42
---------UPD SimpleName@@MethodName:containsKey:[foreignTableName] @TO@ MethodName:containsKey:[key] @AT@ 7240 @LENGTH@ 29
------------UPD SimpleName@@foreignTableName @TO@ key @AT@ 7252 @LENGTH@ 16
------UPD Block@@ThenBody:{  exportedKeys.get(foreignTableName).addReference(reference);} @TO@ ThenBody:{  exportedKeys.get(key).addReference(reference);} @AT@ 7271 @LENGTH@ 72
---------UPD ExpressionStatement@@MethodInvocation:exportedKeys.get(foreignTableName).addReference(reference) @TO@ MethodInvocation:exportedKeys.get(key).addReference(reference) @AT@ 7278 @LENGTH@ 59
------------UPD MethodInvocation@@exportedKeys.get(foreignTableName).addReference(reference) @TO@ exportedKeys.get(key).addReference(reference) @AT@ 7278 @LENGTH@ 58
---------------UPD MethodInvocation@@MethodName:get:[foreignTableName] @TO@ MethodName:get:[key] @AT@ 7278 @LENGTH@ 34
------------------UPD SimpleName@@foreignTableName @TO@ key @AT@ 7295 @LENGTH@ 16
------UPD Block@@ElseBody:{  foreignKey.addReference(reference);  exportedKeys.put(foreignTableName,foreignKey);} @TO@ ElseBody:{  foreignKey.addReference(reference);  exportedKeys.put(key,foreignKey);} @AT@ 7349 @LENGTH@ 101
---------UPD ExpressionStatement@@MethodInvocation:exportedKeys.put(foreignTableName,foreignKey) @TO@ MethodInvocation:exportedKeys.put(key,foreignKey) @AT@ 7397 @LENGTH@ 47
------------UPD MethodInvocation@@exportedKeys.put(foreignTableName,foreignKey) @TO@ exportedKeys.put(key,foreignKey) @AT@ 7397 @LENGTH@ 46
---------------UPD SimpleName@@MethodName:put:[foreignTableName, foreignKey] @TO@ MethodName:put:[key, foreignKey] @AT@ 7410 @LENGTH@ 33
------------------UPD SimpleName@@foreignTableName @TO@ key @AT@ 7414 @LENGTH@ 16


DEL IfStatement@@if (shutdown.get()) return; @AT@ 8284 @LENGTH@ 39
---DEL MethodInvocation@@shutdown.get() @AT@ 8288 @LENGTH@ 14
------DEL SimpleName@@Name:shutdown @AT@ 8288 @LENGTH@ 8
------DEL SimpleName@@MethodName:get:[] @AT@ 8297 @LENGTH@ 5
---DEL Block@@ThenBody:return; @AT@ 8316 @LENGTH@ 7
------DEL ReturnStatement@@ @AT@ 8316 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:this.suffixes=suffixes @TO@ Assignment:this.suffixes=new String[suffixes.length] @AT@ 4047 @LENGTH@ 25
---UPD Assignment@@this.suffixes=suffixes @TO@ this.suffixes=new String[suffixes.length] @AT@ 4047 @LENGTH@ 24
------INS ArrayCreation@@new String[suffixes.length] @TO@ Assignment@@this.suffixes=suffixes @AT@ 4063 @LENGTH@ 27
---------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[suffixes.length] @AT@ 4067 @LENGTH@ 23
------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 4067 @LENGTH@ 6
---------INS QualifiedName@@suffixes.length @TO@ ArrayCreation@@new String[suffixes.length] @AT@ 4074 @LENGTH@ 15
------------INS SimpleName@@suffixes @TO@ QualifiedName@@suffixes.length @AT@ 4074 @LENGTH@ 8
------------INS SimpleName@@length @TO@ QualifiedName@@suffixes.length @AT@ 4083 @LENGTH@ 6
------DEL SimpleName@@suffixes @AT@ 4063 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:from("direct:start").aggregate().header("id").aggregationStrategy(new UseLatestAggregationStrategy()).completionTimeout(500L).to("mock:result") @TO@ MethodInvocation:from("direct:start").aggregate(header("id")).aggregationStrategy(new UseLatestAggregationStrategy()).completionTimeout(500L).to("mock:result") @AT@ 2791 @LENGTH@ 460
---UPD MethodInvocation@@from("direct:start").aggregate().header("id").aggregationStrategy(new UseLatestAggregationStrategy()).completionTimeout(500L).to("mock:result") @TO@ from("direct:start").aggregate(header("id")).aggregationStrategy(new UseLatestAggregationStrategy()).completionTimeout(500L).to("mock:result") @AT@ 2791 @LENGTH@ 459
------UPD MethodInvocation@@MethodName:header:["id"] @TO@ MethodName:aggregate:[header("id")] @AT@ 2791 @LENGTH@ 262
---------INS MethodInvocation@@header("id") @TO@ MethodInvocation@@MethodName:header:["id"] @AT@ 3039 @LENGTH@ 12
------------INS SimpleName@@MethodName:header:["id"] @TO@ MethodInvocation@@header("id") @AT@ 3039 @LENGTH@ 12
---------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:header:["id"] @AT@ 3046 @LENGTH@ 4
---------DEL StringLiteral@@"id" @AT@ 3048 @LENGTH@ 4
------DEL MethodInvocation@@MethodName:aggregate:[] @AT@ 2791 @LENGTH@ 249


INS IfStatement@@if (name.indexOf("$") > -1) {  name=name.replaceAll("\\$","CAMEL_REPLACE_ME");} @TO@ MethodDeclaration@@public, static, String, MethodName:getThreadName, String pattern, String name,  @AT@ 2816 @LENGTH@ 102
---INS InfixExpression@@name.indexOf("$") > -1 @TO@ IfStatement@@if (name.indexOf("$") > -1) {  name=name.replaceAll("\\$","CAMEL_REPLACE_ME");} @AT@ 2820 @LENGTH@ 22
------INS MethodInvocation@@name.indexOf("$") @TO@ InfixExpression@@name.indexOf("$") > -1 @AT@ 2820 @LENGTH@ 17
---------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.indexOf("$") @AT@ 2820 @LENGTH@ 4
---------INS SimpleName@@MethodName:indexOf:["$"] @TO@ MethodInvocation@@name.indexOf("$") @AT@ 2825 @LENGTH@ 12
------------INS StringLiteral@@"$" @TO@ SimpleName@@MethodName:indexOf:["$"] @AT@ 2833 @LENGTH@ 3
------INS Operator@@> @TO@ InfixExpression@@name.indexOf("$") > -1 @AT@ 2837 @LENGTH@ 1
------INS PrefixExpression@@-1 @TO@ InfixExpression@@name.indexOf("$") > -1 @AT@ 2840 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 2840 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 2841 @LENGTH@ 1
---INS Block@@ThenBody:{  name=name.replaceAll("\\$","CAMEL_REPLACE_ME");} @TO@ IfStatement@@if (name.indexOf("$") > -1) {  name=name.replaceAll("\\$","CAMEL_REPLACE_ME");} @AT@ 2844 @LENGTH@ 74
------INS ExpressionStatement@@Assignment:name=name.replaceAll("\\$","CAMEL_REPLACE_ME") @TO@ Block@@ThenBody:{  name=name.replaceAll("\\$","CAMEL_REPLACE_ME");} @AT@ 2858 @LENGTH@ 50
---------INS Assignment@@name=name.replaceAll("\\$","CAMEL_REPLACE_ME") @TO@ ExpressionStatement@@Assignment:name=name.replaceAll("\\$","CAMEL_REPLACE_ME") @AT@ 2858 @LENGTH@ 49
------------INS SimpleName@@name @TO@ Assignment@@name=name.replaceAll("\\$","CAMEL_REPLACE_ME") @AT@ 2858 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@name=name.replaceAll("\\$","CAMEL_REPLACE_ME") @AT@ 2862 @LENGTH@ 1
------------INS MethodInvocation@@name.replaceAll("\\$","CAMEL_REPLACE_ME") @TO@ Assignment@@name=name.replaceAll("\\$","CAMEL_REPLACE_ME") @AT@ 2865 @LENGTH@ 42
---------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.replaceAll("\\$","CAMEL_REPLACE_ME") @AT@ 2865 @LENGTH@ 4
---------------INS SimpleName@@MethodName:replaceAll:["\\$", "CAMEL_REPLACE_ME"] @TO@ MethodInvocation@@name.replaceAll("\\$","CAMEL_REPLACE_ME") @AT@ 2870 @LENGTH@ 37
------------------INS StringLiteral@@"\\$" @TO@ SimpleName@@MethodName:replaceAll:["\\$", "CAMEL_REPLACE_ME"] @AT@ 2881 @LENGTH@ 5
------------------INS StringLiteral@@"CAMEL_REPLACE_ME" @TO@ SimpleName@@MethodName:replaceAll:["\\$", "CAMEL_REPLACE_ME"] @AT@ 2888 @LENGTH@ 18


UPD VariableDeclarationStatement@@ByteArrayInputStream html=(ByteArrayInputStream)template.requestBody("http://localhost:9081/",""); @TO@ InputStream html=(InputStream)template.requestBody("http://localhost:9081/",""); @AT@ 2730 @LENGTH@ 119
---UPD SimpleType@@ByteArrayInputStream @TO@ InputStream @AT@ 2730 @LENGTH@ 20
---UPD VariableDeclarationFragment@@html=(ByteArrayInputStream)template.requestBody("http://localhost:9081/","") @TO@ html=(InputStream)template.requestBody("http://localhost:9081/","") @AT@ 2751 @LENGTH@ 97
------UPD CastExpression@@(ByteArrayInputStream)template.requestBody("http://localhost:9081/","") @TO@ (InputStream)template.requestBody("http://localhost:9081/","") @AT@ 2758 @LENGTH@ 90
---------UPD SimpleType@@ByteArrayInputStream @TO@ InputStream @AT@ 2759 @LENGTH@ 20


INS EnhancedForStatement@@for (LifecycleListener listener : service.findLifecycleListeners()) {  if (listener instanceof ServiceMapperListener) {    host.removeContainerListener((ServiceMapperListener)listener);  }} @TO@ MethodDeclaration@@public, synchronized, void, MethodName:removeHost, Host host,  @AT@ 5222 @LENGTH@ 234
---INS SingleVariableDeclaration@@LifecycleListener listener @TO@ EnhancedForStatement@@for (LifecycleListener listener : service.findLifecycleListeners()) {  if (listener instanceof ServiceMapperListener) {    host.removeContainerListener((ServiceMapperListener)listener);  }} @AT@ 5227 @LENGTH@ 26
------INS SimpleType@@LifecycleListener @TO@ SingleVariableDeclaration@@LifecycleListener listener @AT@ 5227 @LENGTH@ 17
------INS SimpleName@@listener @TO@ SingleVariableDeclaration@@LifecycleListener listener @AT@ 5245 @LENGTH@ 8
---INS MethodInvocation@@service.findLifecycleListeners() @TO@ EnhancedForStatement@@for (LifecycleListener listener : service.findLifecycleListeners()) {  if (listener instanceof ServiceMapperListener) {    host.removeContainerListener((ServiceMapperListener)listener);  }} @AT@ 5256 @LENGTH@ 32
------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.findLifecycleListeners() @AT@ 5256 @LENGTH@ 7
------INS SimpleName@@MethodName:findLifecycleListeners:[] @TO@ MethodInvocation@@service.findLifecycleListeners() @AT@ 5264 @LENGTH@ 24
---INS IfStatement@@if (listener instanceof ServiceMapperListener) {  host.removeContainerListener((ServiceMapperListener)listener);} @TO@ EnhancedForStatement@@for (LifecycleListener listener : service.findLifecycleListeners()) {  if (listener instanceof ServiceMapperListener) {    host.removeContainerListener((ServiceMapperListener)listener);  }} @AT@ 5304 @LENGTH@ 142
------INS InstanceofExpression@@listener instanceof ServiceMapperListener @TO@ IfStatement@@if (listener instanceof ServiceMapperListener) {  host.removeContainerListener((ServiceMapperListener)listener);} @AT@ 5308 @LENGTH@ 41
---------INS SimpleName@@listener @TO@ InstanceofExpression@@listener instanceof ServiceMapperListener @AT@ 5308 @LENGTH@ 8
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@listener instanceof ServiceMapperListener @AT@ 5317 @LENGTH@ 10
---------INS SimpleType@@ServiceMapperListener @TO@ InstanceofExpression@@listener instanceof ServiceMapperListener @AT@ 5328 @LENGTH@ 21
------INS Block@@ThenBody:{  host.removeContainerListener((ServiceMapperListener)listener);} @TO@ IfStatement@@if (listener instanceof ServiceMapperListener) {  host.removeContainerListener((ServiceMapperListener)listener);} @AT@ 5351 @LENGTH@ 95
---------INS ExpressionStatement@@MethodInvocation:host.removeContainerListener((ServiceMapperListener)listener) @TO@ Block@@ThenBody:{  host.removeContainerListener((ServiceMapperListener)listener);} @AT@ 5369 @LENGTH@ 63
------------INS MethodInvocation@@host.removeContainerListener((ServiceMapperListener)listener) @TO@ ExpressionStatement@@MethodInvocation:host.removeContainerListener((ServiceMapperListener)listener) @AT@ 5369 @LENGTH@ 62
---------------INS SimpleName@@Name:host @TO@ MethodInvocation@@host.removeContainerListener((ServiceMapperListener)listener) @AT@ 5369 @LENGTH@ 4
---------------INS SimpleName@@MethodName:removeContainerListener:[(ServiceMapperListener)listener] @TO@ MethodInvocation@@host.removeContainerListener((ServiceMapperListener)listener) @AT@ 5374 @LENGTH@ 57
------------------INS CastExpression@@(ServiceMapperListener)listener @TO@ SimpleName@@MethodName:removeContainerListener:[(ServiceMapperListener)listener] @AT@ 5398 @LENGTH@ 32
---------------------INS SimpleType@@ServiceMapperListener @TO@ CastExpression@@(ServiceMapperListener)listener @AT@ 5399 @LENGTH@ 21
---------------------INS SimpleName@@listener @TO@ CastExpression@@(ServiceMapperListener)listener @AT@ 5422 @LENGTH@ 8


UPD VariableDeclarationStatement@@Map map2=(Map)readExternalFormFromDisk(getCanonicalEmptyCollectionName(map)); @TO@ @SuppressWarnings("unchecked") Map<K,V> map2=(Map<K,V>)readExternalFormFromDisk(getCanonicalEmptyCollectionName(map)); @AT@ 4482 @LENGTH@ 80
---DEL SimpleType@@Map @AT@ 4482 @LENGTH@ 3
---UPD VariableDeclarationFragment@@map2=(Map)readExternalFormFromDisk(getCanonicalEmptyCollectionName(map)) @TO@ map2=(Map<K,V>)readExternalFormFromDisk(getCanonicalEmptyCollectionName(map)) @AT@ 4486 @LENGTH@ 75
------UPD CastExpression@@(Map)readExternalFormFromDisk(getCanonicalEmptyCollectionName(map)) @TO@ (Map<K,V>)readExternalFormFromDisk(getCanonicalEmptyCollectionName(map)) @AT@ 4493 @LENGTH@ 68
---------DEL SimpleType@@Map @AT@ 4494 @LENGTH@ 3
---------INS ParameterizedType@@Map<K,V> @TO@ CastExpression@@(Map)readExternalFormFromDisk(getCanonicalEmptyCollectionName(map)) @AT@ 4508 @LENGTH@ 9
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<K,V> @AT@ 4508 @LENGTH@ 3
------------INS SimpleType@@K @TO@ ParameterizedType@@Map<K,V> @AT@ 4512 @LENGTH@ 1
------------INS SimpleType@@V @TO@ ParameterizedType@@Map<K,V> @AT@ 4515 @LENGTH@ 1
---INS ParameterizedType@@Map<K,V> @TO@ VariableDeclarationStatement@@Map map2=(Map)readExternalFormFromDisk(getCanonicalEmptyCollectionName(map)); @AT@ 4490 @LENGTH@ 9
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<K,V> @AT@ 4490 @LENGTH@ 3
------INS SimpleType@@K @TO@ ParameterizedType@@Map<K,V> @AT@ 4494 @LENGTH@ 1
------INS SimpleType@@V @TO@ ParameterizedType@@Map<K,V> @AT@ 4497 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:command.add("-Djava.util.logging.manager=org.jboss.logmanager.LogManager") @AT@ 5517 @LENGTH@ 75
---DEL MethodInvocation@@command.add("-Djava.util.logging.manager=org.jboss.logmanager.LogManager") @AT@ 5517 @LENGTH@ 74
------DEL SimpleName@@Name:command @AT@ 5517 @LENGTH@ 7
------DEL SimpleName@@MethodName:add:["-Djava.util.logging.manager=org.jboss.logmanager.LogManager"] @AT@ 5525 @LENGTH@ 66
---------DEL StringLiteral@@"-Djava.util.logging.manager=org.jboss.logmanager.LogManager" @AT@ 5529 @LENGTH@ 61


UPD ExpressionStatement@@MethodInvocation:chat.nextMessage() @TO@ MethodInvocation:chat.pollMessage() @AT@ 2706 @LENGTH@ 19
---UPD MethodInvocation@@chat.nextMessage() @TO@ chat.pollMessage() @AT@ 2706 @LENGTH@ 18
------UPD SimpleName@@MethodName:nextMessage:[] @TO@ MethodName:pollMessage:[] @AT@ 2711 @LENGTH@ 13


INS VariableDeclarationStatement@@Map<String,CamelContext> beansOfType=CastUtils.cast(applicationContext.getBeansOfType(CamelContext.class)); @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 2509 @LENGTH@ 110
---INS ParameterizedType@@Map<String,CamelContext> @TO@ VariableDeclarationStatement@@Map<String,CamelContext> beansOfType=CastUtils.cast(applicationContext.getBeansOfType(CamelContext.class)); @AT@ 2509 @LENGTH@ 25
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,CamelContext> @AT@ 2509 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,CamelContext> @AT@ 2513 @LENGTH@ 6
------INS SimpleType@@CamelContext @TO@ ParameterizedType@@Map<String,CamelContext> @AT@ 2521 @LENGTH@ 12
---INS VariableDeclarationFragment@@beansOfType=CastUtils.cast(applicationContext.getBeansOfType(CamelContext.class)) @TO@ VariableDeclarationStatement@@Map<String,CamelContext> beansOfType=CastUtils.cast(applicationContext.getBeansOfType(CamelContext.class)); @AT@ 2535 @LENGTH@ 83
------INS SimpleName@@beansOfType @TO@ VariableDeclarationFragment@@beansOfType=CastUtils.cast(applicationContext.getBeansOfType(CamelContext.class)) @AT@ 2535 @LENGTH@ 11
------INS MethodInvocation@@CastUtils.cast(applicationContext.getBeansOfType(CamelContext.class)) @TO@ VariableDeclarationFragment@@beansOfType=CastUtils.cast(applicationContext.getBeansOfType(CamelContext.class)) @AT@ 2549 @LENGTH@ 69
---------INS SimpleName@@Name:CastUtils @TO@ MethodInvocation@@CastUtils.cast(applicationContext.getBeansOfType(CamelContext.class)) @AT@ 2549 @LENGTH@ 9
---------INS SimpleName@@MethodName:cast:[applicationContext.getBeansOfType(CamelContext.class)] @TO@ MethodInvocation@@CastUtils.cast(applicationContext.getBeansOfType(CamelContext.class)) @AT@ 2559 @LENGTH@ 59
------------INS MethodInvocation@@applicationContext.getBeansOfType(CamelContext.class) @TO@ SimpleName@@MethodName:cast:[applicationContext.getBeansOfType(CamelContext.class)] @AT@ 2564 @LENGTH@ 53
---------------INS SimpleName@@Name:applicationContext @TO@ MethodInvocation@@applicationContext.getBeansOfType(CamelContext.class) @AT@ 2564 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getBeansOfType:[CamelContext.class] @TO@ MethodInvocation@@applicationContext.getBeansOfType(CamelContext.class) @AT@ 2583 @LENGTH@ 34
------------------INS TypeLiteral@@CamelContext.class @TO@ SimpleName@@MethodName:getBeansOfType:[CamelContext.class] @AT@ 2598 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:response.put("since_id","24") @TO@ MethodInvocation:response.put("since_id",24) @AT@ 5535 @LENGTH@ 31
---UPD MethodInvocation@@response.put("since_id","24") @TO@ response.put("since_id",24) @AT@ 5535 @LENGTH@ 30
------UPD SimpleName@@MethodName:put:["since_id", "24"] @TO@ MethodName:put:["since_id", 24] @AT@ 5544 @LENGTH@ 21
---------INS NumberLiteral@@24 @TO@ SimpleName@@MethodName:put:["since_id", "24"] @AT@ 5558 @LENGTH@ 2
---------DEL StringLiteral@@"24" @AT@ 5560 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("file://" + base + "?move="+ base+ "/done/${file:name}").convertBodyTo(String.class).to("mock:report") @TO@ MethodInvocation:from("file://" + base + "?move="+ base+ "/done/${file:onlyname}").convertBodyTo(String.class).to("mock:report") @AT@ 2029 @LENGTH@ 110
---UPD MethodInvocation@@from("file://" + base + "?move="+ base+ "/done/${file:name}").convertBodyTo(String.class).to("mock:report") @TO@ from("file://" + base + "?move="+ base+ "/done/${file:onlyname}").convertBodyTo(String.class).to("mock:report") @AT@ 2029 @LENGTH@ 109
------UPD MethodInvocation@@MethodName:from:["file://" + base + "?move="+ base+ "/done/${file:name}"] @TO@ MethodName:from:["file://" + base + "?move="+ base+ "/done/${file:onlyname}"] @AT@ 2029 @LENGTH@ 63
---------UPD InfixExpression@@"file://" + base + "?move="+ base+ "/done/${file:name}" @TO@ "file://" + base + "?move="+ base+ "/done/${file:onlyname}" @AT@ 2034 @LENGTH@ 57
------------UPD StringLiteral@@"/done/${file:name}" @TO@ "/done/${file:onlyname}" @AT@ 2071 @LENGTH@ 20


INS ExpressionStatement@@MethodInvocation:beanInfoMetadataProvider.addMetadataTrigger(new JavaType(RooDbManaged.class.getName())) @TO@ MethodDeclaration@@protected, void, MethodName:activate, ComponentContext context,  @AT@ 2087 @LENGTH@ 88
---INS MethodInvocation@@beanInfoMetadataProvider.addMetadataTrigger(new JavaType(RooDbManaged.class.getName())) @TO@ ExpressionStatement@@MethodInvocation:beanInfoMetadataProvider.addMetadataTrigger(new JavaType(RooDbManaged.class.getName())) @AT@ 2087 @LENGTH@ 87
------INS SimpleName@@Name:beanInfoMetadataProvider @TO@ MethodInvocation@@beanInfoMetadataProvider.addMetadataTrigger(new JavaType(RooDbManaged.class.getName())) @AT@ 2087 @LENGTH@ 24
------INS SimpleName@@MethodName:addMetadataTrigger:[new JavaType(RooDbManaged.class.getName())] @TO@ MethodInvocation@@beanInfoMetadataProvider.addMetadataTrigger(new JavaType(RooDbManaged.class.getName())) @AT@ 2112 @LENGTH@ 62
---------INS ClassInstanceCreation@@JavaType[RooDbManaged.class.getName()] @TO@ SimpleName@@MethodName:addMetadataTrigger:[new JavaType(RooDbManaged.class.getName())] @AT@ 2131 @LENGTH@ 42
------------INS New@@new @TO@ ClassInstanceCreation@@JavaType[RooDbManaged.class.getName()] @AT@ 2131 @LENGTH@ 3
------------INS SimpleType@@JavaType @TO@ ClassInstanceCreation@@JavaType[RooDbManaged.class.getName()] @AT@ 2135 @LENGTH@ 8
------------INS MethodInvocation@@RooDbManaged.class.getName() @TO@ ClassInstanceCreation@@JavaType[RooDbManaged.class.getName()] @AT@ 2144 @LENGTH@ 28
---------------INS TypeLiteral@@RooDbManaged.class @TO@ MethodInvocation@@RooDbManaged.class.getName() @AT@ 2144 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@RooDbManaged.class.getName() @AT@ 2163 @LENGTH@ 9


MOV ExpressionStatement@@MethodInvocation:exchange.getOut().setHeaders(exchange.getIn().getHeaders()) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2739 @LENGTH@ 60


UPD ExpressionStatement@@MethodInvocation:ParsingUtils.setPropertyValue(element,builder,"properties-ref","properties") @TO@ MethodInvocation:ParsingUtils.setPropertyReference(element,builder,"properties-ref","properties") @AT@ 1593 @LENGTH@ 80
---UPD MethodInvocation@@ParsingUtils.setPropertyValue(element,builder,"properties-ref","properties") @TO@ ParsingUtils.setPropertyReference(element,builder,"properties-ref","properties") @AT@ 1593 @LENGTH@ 79
------UPD SimpleName@@MethodName:setPropertyValue:[element, builder, "properties-ref", "properties"] @TO@ MethodName:setPropertyReference:[element, builder, "properties-ref", "properties"] @AT@ 1606 @LENGTH@ 66


UPD MethodDeclaration@@public, void, MethodName:testThreadsCoreAndMaxPool, Exception,  @TO@ public, void, MethodName:xtestThreadsCoreAndMaxPool, Exception,  @AT@ 1042 @LENGTH@ 228
---UPD SimpleName@@MethodName:testThreadsCoreAndMaxPool @TO@ MethodName:xtestThreadsCoreAndMaxPool @AT@ 1054 @LENGTH@ 25


INS MethodDeclaration@@static, void, MethodName:writeInt, final OutputStream out, final int v, IOException,  @TO@ TypeDeclaration@@[final]StreamUtils,  @AT@ 5739 @LENGTH@ 236
---INS Modifier@@static @TO@ MethodDeclaration@@static, void, MethodName:writeInt, final OutputStream out, final int v, IOException,  @AT@ 5739 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@static, void, MethodName:writeInt, final OutputStream out, final int v, IOException,  @AT@ 5746 @LENGTH@ 4
---INS SimpleName@@MethodName:writeInt @TO@ MethodDeclaration@@static, void, MethodName:writeInt, final OutputStream out, final int v, IOException,  @AT@ 5751 @LENGTH@ 8
---INS SingleVariableDeclaration@@final OutputStream out @TO@ MethodDeclaration@@static, void, MethodName:writeInt, final OutputStream out, final int v, IOException,  @AT@ 5760 @LENGTH@ 22
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final OutputStream out @AT@ 5760 @LENGTH@ 5
------INS SimpleType@@OutputStream @TO@ SingleVariableDeclaration@@final OutputStream out @AT@ 5766 @LENGTH@ 12
------INS SimpleName@@out @TO@ SingleVariableDeclaration@@final OutputStream out @AT@ 5779 @LENGTH@ 3
---INS SingleVariableDeclaration@@final int v @TO@ MethodDeclaration@@static, void, MethodName:writeInt, final OutputStream out, final int v, IOException,  @AT@ 5784 @LENGTH@ 11
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final int v @AT@ 5784 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@final int v @AT@ 5790 @LENGTH@ 3
------INS SimpleName@@v @TO@ SingleVariableDeclaration@@final int v @AT@ 5794 @LENGTH@ 1
---INS SimpleType@@IOException @TO@ MethodDeclaration@@static, void, MethodName:writeInt, final OutputStream out, final int v, IOException,  @AT@ 5804 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:out.write((v >>> 24) & 0xFF) @TO@ MethodDeclaration@@static, void, MethodName:writeInt, final OutputStream out, final int v, IOException,  @AT@ 5826 @LENGTH@ 29
------INS MethodInvocation@@out.write((v >>> 24) & 0xFF) @TO@ ExpressionStatement@@MethodInvocation:out.write((v >>> 24) & 0xFF) @AT@ 5826 @LENGTH@ 28
---------INS SimpleName@@Name:out @TO@ MethodInvocation@@out.write((v >>> 24) & 0xFF) @AT@ 5826 @LENGTH@ 3
---------INS SimpleName@@MethodName:write:[(v >>> 24) & 0xFF] @TO@ MethodInvocation@@out.write((v >>> 24) & 0xFF) @AT@ 5830 @LENGTH@ 24
------------INS InfixExpression@@(v >>> 24) & 0xFF @TO@ SimpleName@@MethodName:write:[(v >>> 24) & 0xFF] @AT@ 5836 @LENGTH@ 17
---------------INS ParenthesizedExpression@@(v >>> 24) @TO@ InfixExpression@@(v >>> 24) & 0xFF @AT@ 5836 @LENGTH@ 10
------------------INS InfixExpression@@v >>> 24 @TO@ ParenthesizedExpression@@(v >>> 24) @AT@ 5837 @LENGTH@ 8
---------------------INS SimpleName@@v @TO@ InfixExpression@@v >>> 24 @AT@ 5837 @LENGTH@ 1
---------------------INS Operator@@>>> @TO@ InfixExpression@@v >>> 24 @AT@ 5838 @LENGTH@ 3
---------------------INS NumberLiteral@@24 @TO@ InfixExpression@@v >>> 24 @AT@ 5843 @LENGTH@ 2
---------------INS Operator@@& @TO@ InfixExpression@@(v >>> 24) & 0xFF @AT@ 5846 @LENGTH@ 1
---------------INS NumberLiteral@@0xFF @TO@ InfixExpression@@(v >>> 24) & 0xFF @AT@ 5849 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:out.write((v >>> 16) & 0xFF) @TO@ MethodDeclaration@@static, void, MethodName:writeInt, final OutputStream out, final int v, IOException,  @AT@ 5864 @LENGTH@ 29
------INS MethodInvocation@@out.write((v >>> 16) & 0xFF) @TO@ ExpressionStatement@@MethodInvocation:out.write((v >>> 16) & 0xFF) @AT@ 5864 @LENGTH@ 28
---------INS SimpleName@@Name:out @TO@ MethodInvocation@@out.write((v >>> 16) & 0xFF) @AT@ 5864 @LENGTH@ 3
---------INS SimpleName@@MethodName:write:[(v >>> 16) & 0xFF] @TO@ MethodInvocation@@out.write((v >>> 16) & 0xFF) @AT@ 5868 @LENGTH@ 24
------------INS InfixExpression@@(v >>> 16) & 0xFF @TO@ SimpleName@@MethodName:write:[(v >>> 16) & 0xFF] @AT@ 5874 @LENGTH@ 17
---------------INS ParenthesizedExpression@@(v >>> 16) @TO@ InfixExpression@@(v >>> 16) & 0xFF @AT@ 5874 @LENGTH@ 10
------------------INS InfixExpression@@v >>> 16 @TO@ ParenthesizedExpression@@(v >>> 16) @AT@ 5875 @LENGTH@ 8
---------------------INS SimpleName@@v @TO@ InfixExpression@@v >>> 16 @AT@ 5875 @LENGTH@ 1
---------------------INS Operator@@>>> @TO@ InfixExpression@@v >>> 16 @AT@ 5876 @LENGTH@ 3
---------------------INS NumberLiteral@@16 @TO@ InfixExpression@@v >>> 16 @AT@ 5881 @LENGTH@ 2
---------------INS Operator@@& @TO@ InfixExpression@@(v >>> 16) & 0xFF @AT@ 5884 @LENGTH@ 1
---------------INS NumberLiteral@@0xFF @TO@ InfixExpression@@(v >>> 16) & 0xFF @AT@ 5887 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:out.write((v >>> 8) & 0xFF) @TO@ MethodDeclaration@@static, void, MethodName:writeInt, final OutputStream out, final int v, IOException,  @AT@ 5902 @LENGTH@ 29
------INS MethodInvocation@@out.write((v >>> 8) & 0xFF) @TO@ ExpressionStatement@@MethodInvocation:out.write((v >>> 8) & 0xFF) @AT@ 5902 @LENGTH@ 28
---------INS SimpleName@@Name:out @TO@ MethodInvocation@@out.write((v >>> 8) & 0xFF) @AT@ 5902 @LENGTH@ 3
---------INS SimpleName@@MethodName:write:[(v >>> 8) & 0xFF] @TO@ MethodInvocation@@out.write((v >>> 8) & 0xFF) @AT@ 5906 @LENGTH@ 24
------------INS InfixExpression@@(v >>> 8) & 0xFF @TO@ SimpleName@@MethodName:write:[(v >>> 8) & 0xFF] @AT@ 5912 @LENGTH@ 17
---------------INS ParenthesizedExpression@@(v >>> 8) @TO@ InfixExpression@@(v >>> 8) & 0xFF @AT@ 5912 @LENGTH@ 10
------------------INS InfixExpression@@v >>> 8 @TO@ ParenthesizedExpression@@(v >>> 8) @AT@ 5913 @LENGTH@ 8
---------------------INS SimpleName@@v @TO@ InfixExpression@@v >>> 8 @AT@ 5913 @LENGTH@ 1
---------------------INS Operator@@>>> @TO@ InfixExpression@@v >>> 8 @AT@ 5914 @LENGTH@ 3
---------------------INS NumberLiteral@@8 @TO@ InfixExpression@@v >>> 8 @AT@ 5920 @LENGTH@ 1
---------------INS Operator@@& @TO@ InfixExpression@@(v >>> 8) & 0xFF @AT@ 5922 @LENGTH@ 1
---------------INS NumberLiteral@@0xFF @TO@ InfixExpression@@(v >>> 8) & 0xFF @AT@ 5925 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:out.write((v >>> 0) & 0xFF) @TO@ MethodDeclaration@@static, void, MethodName:writeInt, final OutputStream out, final int v, IOException,  @AT@ 5940 @LENGTH@ 29
------INS MethodInvocation@@out.write((v >>> 0) & 0xFF) @TO@ ExpressionStatement@@MethodInvocation:out.write((v >>> 0) & 0xFF) @AT@ 5940 @LENGTH@ 28
---------INS SimpleName@@Name:out @TO@ MethodInvocation@@out.write((v >>> 0) & 0xFF) @AT@ 5940 @LENGTH@ 3
---------INS SimpleName@@MethodName:write:[(v >>> 0) & 0xFF] @TO@ MethodInvocation@@out.write((v >>> 0) & 0xFF) @AT@ 5944 @LENGTH@ 24
------------INS InfixExpression@@(v >>> 0) & 0xFF @TO@ SimpleName@@MethodName:write:[(v >>> 0) & 0xFF] @AT@ 5950 @LENGTH@ 17
---------------INS ParenthesizedExpression@@(v >>> 0) @TO@ InfixExpression@@(v >>> 0) & 0xFF @AT@ 5950 @LENGTH@ 10
------------------INS InfixExpression@@v >>> 0 @TO@ ParenthesizedExpression@@(v >>> 0) @AT@ 5951 @LENGTH@ 8
---------------------INS SimpleName@@v @TO@ InfixExpression@@v >>> 0 @AT@ 5951 @LENGTH@ 1
---------------------INS Operator@@>>> @TO@ InfixExpression@@v >>> 0 @AT@ 5952 @LENGTH@ 3
---------------------INS NumberLiteral@@0 @TO@ InfixExpression@@v >>> 0 @AT@ 5958 @LENGTH@ 1
---------------INS Operator@@& @TO@ InfixExpression@@(v >>> 0) & 0xFF @AT@ 5960 @LENGTH@ 1
---------------INS NumberLiteral@@0xFF @TO@ InfixExpression@@(v >>> 0) & 0xFF @AT@ 5963 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:mock.expectedFileExists("target/filesplit/.camel/splitme.txt") @TO@ MethodDeclaration@@public, void, MethodName:testSplitStreamingWithChoice, Exception,  @AT@ 1582 @LENGTH@ 63
---INS MethodInvocation@@mock.expectedFileExists("target/filesplit/.camel/splitme.txt") @TO@ ExpressionStatement@@MethodInvocation:mock.expectedFileExists("target/filesplit/.camel/splitme.txt") @AT@ 1582 @LENGTH@ 62
------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.expectedFileExists("target/filesplit/.camel/splitme.txt") @AT@ 1582 @LENGTH@ 4
------INS SimpleName@@MethodName:expectedFileExists:["target/filesplit/.camel/splitme.txt"] @TO@ MethodInvocation@@mock.expectedFileExists("target/filesplit/.camel/splitme.txt") @AT@ 1587 @LENGTH@ 57
---------INS StringLiteral@@"target/filesplit/.camel/splitme.txt" @TO@ SimpleName@@MethodName:expectedFileExists:["target/filesplit/.camel/splitme.txt"] @AT@ 1606 @LENGTH@ 37


DEL FieldDeclaration@@private, final, boolean, [trace=log.isTraceEnabled()] @AT@ 7266 @LENGTH@ 51
---DEL Modifier@@private @AT@ 7266 @LENGTH@ 7
---DEL Modifier@@final @AT@ 7274 @LENGTH@ 5
---DEL PrimitiveType@@boolean @AT@ 7280 @LENGTH@ 7
---DEL VariableDeclarationFragment@@trace=log.isTraceEnabled() @AT@ 7288 @LENGTH@ 28
------DEL SimpleName@@trace @AT@ 7288 @LENGTH@ 5
------DEL MethodInvocation@@log.isTraceEnabled() @AT@ 7296 @LENGTH@ 20
---------DEL SimpleName@@Name:log @AT@ 7296 @LENGTH@ 3
---------DEL SimpleName@@MethodName:isTraceEnabled:[] @AT@ 7300 @LENGTH@ 16


UPD ExpressionStatement@@Assignment:subSet=(Set<E>)set.getClass().newInstance() @TO@ Assignment:subSet=set.getClass().newInstance() @AT@ 10274 @LENGTH@ 47
---UPD Assignment@@subSet=(Set<E>)set.getClass().newInstance() @TO@ subSet=set.getClass().newInstance() @AT@ 10274 @LENGTH@ 46
------DEL CastExpression@@(Set<E>)set.getClass().newInstance() @AT@ 10283 @LENGTH@ 37
---------DEL ParameterizedType@@Set<E> @AT@ 10284 @LENGTH@ 6
------------DEL SimpleType@@Set @AT@ 10284 @LENGTH@ 3
------------DEL SimpleType@@E @AT@ 10288 @LENGTH@ 1
---------DEL MethodInvocation@@set.getClass().newInstance() @AT@ 10292 @LENGTH@ 28
------INS MethodInvocation@@set.getClass().newInstance() @TO@ Assignment@@subSet=(Set<E>)set.getClass().newInstance() @AT@ 10283 @LENGTH@ 28
---------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@set.getClass().newInstance() @AT@ 10292 @LENGTH@ 14
---------MOV SimpleName@@Name:set @TO@ MethodInvocation@@set.getClass().newInstance() @AT@ 10292 @LENGTH@ 3
---------MOV SimpleName@@MethodName:newInstance:[] @TO@ MethodInvocation@@set.getClass().newInstance() @AT@ 10307 @LENGTH@ 13


UPD IfStatement@@if (resourceRoot.getRoot().isFile()) {  VirtualFile webFragment=resourceRoot.getRoot().getChild(WEB_FRAGMENT_XML);  if (webFragment.exists() && webFragment.isFile()) {    InputStream is=null;    long time=System.currentTimeMillis();    try {      is=webFragment.openStream();      final XMLInputFactory inputFactory=XMLInputFactory.newInstance();      XMLStreamReader xmlReader=inputFactory.createXMLStreamReader(is);      webFragments.put(resourceRoot.getName(),WebFragmentMetaDataParser.parse(xmlReader));    } catch (    Exception e) {      throw new DeploymentUnitProcessingException("Failed to parse " + webFragment,e);    } finally {      Logger.getLogger("org.jboss.web").info("parse " + (System.currentTimeMillis() - time));      try {        if (is != null) {          is.close();        }      } catch (      IOException e) {      }    }  }} @TO@ if (resourceRoot.getRoot().getLowerCaseName().endsWith(".jar")) {  VirtualFile webFragment=resourceRoot.getRoot().getChild(WEB_FRAGMENT_XML);  if (webFragment.exists() && webFragment.isFile()) {    InputStream is=null;    long time=System.currentTimeMillis();    try {      is=webFragment.openStream();      final XMLInputFactory inputFactory=XMLInputFactory.newInstance();      XMLStreamReader xmlReader=inputFactory.createXMLStreamReader(is);      webFragments.put(resourceRoot.getName(),WebFragmentMetaDataParser.parse(xmlReader));    } catch (    Exception e) {      throw new DeploymentUnitProcessingException("Failed to parse " + webFragment,e);    } finally {      Logger.getLogger("org.jboss.web").info("parse " + (System.currentTimeMillis() - time));      try {        if (is != null) {          is.close();        }      } catch (      IOException e) {      }    }  }} @AT@ 3073 @LENGTH@ 1289
---UPD MethodInvocation@@resourceRoot.getRoot().isFile() @TO@ resourceRoot.getRoot().getLowerCaseName().endsWith(".jar") @AT@ 3077 @LENGTH@ 31
------INS MethodInvocation@@MethodName:getLowerCaseName:[] @TO@ MethodInvocation@@resourceRoot.getRoot().isFile() @AT@ 2822 @LENGTH@ 41
------UPD SimpleName@@MethodName:isFile:[] @TO@ MethodName:endsWith:[".jar"] @AT@ 3100 @LENGTH@ 8
---------INS StringLiteral@@".jar" @TO@ SimpleName@@MethodName:isFile:[] @AT@ 2873 @LENGTH@ 6


UPD Block@@ThenBody:{  GenericFile<T> newName=failureRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @TO@ ThenBody:{  Exchange copy=exchange.copy();  file.bindToExchange(copy);  copy.getIn().setMessageId(exchange.getIn().getMessageId());  copy.setExchangeId(exchange.getExchangeId());  GenericFile<T> newName=failureRenamer.renameFile(copy,file);  renameFile(operations,file,newName);} @AT@ 2410 @LENGTH@ 142
---UPD VariableDeclarationStatement@@GenericFile<T> newName=failureRenamer.renameFile(exchange,file); @TO@ GenericFile<T> newName=failureRenamer.renameFile(copy,file); @AT@ 2424 @LENGTH@ 67
------UPD VariableDeclarationFragment@@newName=failureRenamer.renameFile(exchange,file) @TO@ newName=failureRenamer.renameFile(copy,file) @AT@ 2439 @LENGTH@ 51
---------UPD MethodInvocation@@failureRenamer.renameFile(exchange,file) @TO@ failureRenamer.renameFile(copy,file) @AT@ 2449 @LENGTH@ 41
------------UPD SimpleName@@MethodName:renameFile:[exchange, file] @TO@ MethodName:renameFile:[copy, file] @AT@ 2464 @LENGTH@ 26
---------------UPD SimpleName@@exchange @TO@ copy @AT@ 2475 @LENGTH@ 8
---INS VariableDeclarationStatement@@Exchange copy=exchange.copy(); @TO@ Block@@ThenBody:{  GenericFile<T> newName=failureRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 2434 @LENGTH@ 32
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange copy=exchange.copy(); @AT@ 2434 @LENGTH@ 8
------INS VariableDeclarationFragment@@copy=exchange.copy() @TO@ VariableDeclarationStatement@@Exchange copy=exchange.copy(); @AT@ 2443 @LENGTH@ 22
---------INS SimpleName@@copy @TO@ VariableDeclarationFragment@@copy=exchange.copy() @AT@ 2443 @LENGTH@ 4
---------INS MethodInvocation@@exchange.copy() @TO@ VariableDeclarationFragment@@copy=exchange.copy() @AT@ 2450 @LENGTH@ 15
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.copy() @AT@ 2450 @LENGTH@ 8
------------INS SimpleName@@MethodName:copy:[] @TO@ MethodInvocation@@exchange.copy() @AT@ 2459 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:file.bindToExchange(copy) @TO@ Block@@ThenBody:{  GenericFile<T> newName=failureRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 2479 @LENGTH@ 26
------INS MethodInvocation@@file.bindToExchange(copy) @TO@ ExpressionStatement@@MethodInvocation:file.bindToExchange(copy) @AT@ 2479 @LENGTH@ 25
---------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.bindToExchange(copy) @AT@ 2479 @LENGTH@ 4
---------INS SimpleName@@MethodName:bindToExchange:[copy] @TO@ MethodInvocation@@file.bindToExchange(copy) @AT@ 2484 @LENGTH@ 20
------------INS SimpleName@@copy @TO@ SimpleName@@MethodName:bindToExchange:[copy] @AT@ 2499 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:copy.getIn().setMessageId(exchange.getIn().getMessageId()) @TO@ Block@@ThenBody:{  GenericFile<T> newName=failureRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 2558 @LENGTH@ 59
------INS MethodInvocation@@copy.getIn().setMessageId(exchange.getIn().getMessageId()) @TO@ ExpressionStatement@@MethodInvocation:copy.getIn().setMessageId(exchange.getIn().getMessageId()) @AT@ 2558 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@copy.getIn().setMessageId(exchange.getIn().getMessageId()) @AT@ 2558 @LENGTH@ 12
---------INS SimpleName@@Name:copy @TO@ MethodInvocation@@copy.getIn().setMessageId(exchange.getIn().getMessageId()) @AT@ 2558 @LENGTH@ 4
---------INS SimpleName@@MethodName:setMessageId:[exchange.getIn().getMessageId()] @TO@ MethodInvocation@@copy.getIn().setMessageId(exchange.getIn().getMessageId()) @AT@ 2571 @LENGTH@ 45
------------INS MethodInvocation@@exchange.getIn().getMessageId() @TO@ SimpleName@@MethodName:setMessageId:[exchange.getIn().getMessageId()] @AT@ 2584 @LENGTH@ 31
---------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getMessageId() @AT@ 2584 @LENGTH@ 16
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getMessageId() @AT@ 2584 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getMessageId:[] @TO@ MethodInvocation@@exchange.getIn().getMessageId() @AT@ 2601 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:copy.setExchangeId(exchange.getExchangeId()) @TO@ Block@@ThenBody:{  GenericFile<T> newName=failureRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 2630 @LENGTH@ 45
------INS MethodInvocation@@copy.setExchangeId(exchange.getExchangeId()) @TO@ ExpressionStatement@@MethodInvocation:copy.setExchangeId(exchange.getExchangeId()) @AT@ 2630 @LENGTH@ 44
---------INS SimpleName@@Name:copy @TO@ MethodInvocation@@copy.setExchangeId(exchange.getExchangeId()) @AT@ 2630 @LENGTH@ 4
---------INS SimpleName@@MethodName:setExchangeId:[exchange.getExchangeId()] @TO@ MethodInvocation@@copy.setExchangeId(exchange.getExchangeId()) @AT@ 2635 @LENGTH@ 39
------------INS MethodInvocation@@exchange.getExchangeId() @TO@ SimpleName@@MethodName:setExchangeId:[exchange.getExchangeId()] @AT@ 2649 @LENGTH@ 24
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 2649 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getExchangeId:[] @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 2658 @LENGTH@ 15
---MOV ExpressionStatement@@MethodInvocation:renameFile(operations,file,newName) @TO@ Block@@ThenBody:{  GenericFile<T> newName=failureRenamer.renameFile(exchange,file);  renameFile(operations,file,newName);} @AT@ 2944 @LENGTH@ 38


DEL VariableDeclarationStatement@@CacheTransactionObject txObject=(CacheTransactionObject)status.getTransaction(); @AT@ 5934 @LENGTH@ 83
---DEL SimpleType@@CacheTransactionObject @AT@ 5934 @LENGTH@ 22
---DEL VariableDeclarationFragment@@txObject=(CacheTransactionObject)status.getTransaction() @AT@ 5957 @LENGTH@ 59
------DEL SimpleName@@txObject @AT@ 5957 @LENGTH@ 8
------DEL CastExpression@@(CacheTransactionObject)status.getTransaction() @AT@ 5968 @LENGTH@ 48
---------DEL SimpleType@@CacheTransactionObject @AT@ 5969 @LENGTH@ 22
---------DEL MethodInvocation@@status.getTransaction() @AT@ 5993 @LENGTH@ 23
------------DEL SimpleName@@Name:status @AT@ 5993 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getTransaction:[] @AT@ 6000 @LENGTH@ 16


MOV ExpressionStatement@@MethodInvocation:answer.setFileName(file.getName()) @TO@ MethodDeclaration@@public, static, GenericFile<File>, MethodName:asGenericFile, String endpointPath, File file,  @AT@ 5148 @LENGTH@ 35


UPD ExpressionStatement@@Assignment:value=getDefaultValueforPrimitive(field.getType()) @TO@ Assignment:value=getDefaultValueForPrimitive(field.getType()) @AT@ 7708 @LENGTH@ 53
---UPD Assignment@@value=getDefaultValueforPrimitive(field.getType()) @TO@ value=getDefaultValueForPrimitive(field.getType()) @AT@ 7708 @LENGTH@ 52
------UPD MethodInvocation@@getDefaultValueforPrimitive(field.getType()) @TO@ getDefaultValueForPrimitive(field.getType()) @AT@ 7716 @LENGTH@ 44
---------UPD SimpleName@@MethodName:getDefaultValueforPrimitive:[field.getType()] @TO@ MethodName:getDefaultValueForPrimitive:[field.getType()] @AT@ 7716 @LENGTH@ 44


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:event").expectedMessageCount(9) @TO@ MethodInvocation:getMockEndpoint("mock:event").expectedMessageCount(6) @AT@ 1736 @LENGTH@ 54
---UPD MethodInvocation@@getMockEndpoint("mock:event").expectedMessageCount(9) @TO@ getMockEndpoint("mock:event").expectedMessageCount(6) @AT@ 1736 @LENGTH@ 53
------UPD SimpleName@@MethodName:expectedMessageCount:[9] @TO@ MethodName:expectedMessageCount:[6] @AT@ 1766 @LENGTH@ 23
---------UPD NumberLiteral@@9 @TO@ 6 @AT@ 1787 @LENGTH@ 1


DEL FieldDeclaration@@protected, List<Field>, [linkFields=new ArrayList<Field>()] @AT@ 1729 @LENGTH@ 58
---DEL Modifier@@protected @AT@ 1729 @LENGTH@ 9
---DEL ParameterizedType@@List<Field> @AT@ 1739 @LENGTH@ 11
------DEL SimpleType@@List @AT@ 1739 @LENGTH@ 4
------DEL SimpleType@@Field @AT@ 1744 @LENGTH@ 5
---DEL VariableDeclarationFragment@@linkFields=new ArrayList<Field>() @AT@ 1751 @LENGTH@ 35
------DEL SimpleName@@linkFields @AT@ 1751 @LENGTH@ 10
------DEL ClassInstanceCreation@@ArrayList<Field>[] @AT@ 1764 @LENGTH@ 22
---------DEL New@@new @AT@ 1764 @LENGTH@ 3
---------DEL ParameterizedType@@ArrayList<Field> @AT@ 1768 @LENGTH@ 16
------------DEL SimpleType@@ArrayList @AT@ 1768 @LENGTH@ 9
------------DEL SimpleType@@Field @AT@ 1778 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:EmptySetMutator, Set set,  @TO@ public, voidMethodName:EmptySetMutator, Set<E> set,  @AT@ 1276 @LENGTH@ 69
---UPD SingleVariableDeclaration@@Set set @TO@ Set<E> set @AT@ 1299 @LENGTH@ 7
------DEL SimpleType@@Set @AT@ 1299 @LENGTH@ 3
------INS ParameterizedType@@Set<E> @TO@ SingleVariableDeclaration@@Set set @AT@ 1302 @LENGTH@ 6
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<E> @AT@ 1302 @LENGTH@ 3
---------INS SimpleType@@E @TO@ ParameterizedType@@Set<E> @AT@ 1306 @LENGTH@ 1


UPD VariableDeclarationStatement@@SpringCamelContext context=applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @TO@ SpringCamelContext context=(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @AT@ 1656 @LENGTH@ 116
---UPD VariableDeclarationFragment@@context=applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ context=(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1675 @LENGTH@ 96
------INS CastExpression@@(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ VariableDeclarationFragment@@context=applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1737 @LENGTH@ 107
---------MOV MethodInvocation@@applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ CastExpression@@(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1685 @LENGTH@ 86
---------INS SimpleType@@SpringCamelContext @TO@ CastExpression@@(SpringCamelContext)applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1738 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodInvocation:Thread.sleep(2000) @AT@ 2167 @LENGTH@ 19
---UPD MethodInvocation@@Thread.sleep(1000) @TO@ Thread.sleep(2000) @AT@ 2167 @LENGTH@ 18
------UPD SimpleName@@MethodName:sleep:[1000] @TO@ MethodName:sleep:[2000] @AT@ 2174 @LENGTH@ 11
---------UPD NumberLiteral@@1000 @TO@ 2000 @AT@ 2180 @LENGTH@ 4


DEL MethodDeclaration@@protected, void, MethodName:processXmlStream, XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 1166 @LENGTH@ 184
---DEL Modifier@@protected @AT@ 1166 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 1176 @LENGTH@ 4
---DEL SimpleName@@MethodName:processXmlStream @AT@ 1181 @LENGTH@ 16
---DEL SingleVariableDeclaration@@XMLExtendedStreamReader reader @AT@ 1198 @LENGTH@ 30
------DEL SimpleType@@XMLExtendedStreamReader @AT@ 1198 @LENGTH@ 23
------DEL SimpleName@@reader @AT@ 1222 @LENGTH@ 6
---DEL SimpleType@@XMLStreamException @AT@ 1237 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:httpQueryWithEscapedCharacter, Exception,  @TO@ TypeDeclaration@@[public]HttpQueryTest, BaseHttpTest @AT@ 1890 @LENGTH@ 351
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:httpQueryWithEscapedCharacter, Exception,  @AT@ 1890 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:httpQueryWithEscapedCharacter, Exception,  @AT@ 1897 @LENGTH@ 4
---INS SimpleName@@MethodName:httpQueryWithEscapedCharacter @TO@ MethodDeclaration@@public, void, MethodName:httpQueryWithEscapedCharacter, Exception,  @AT@ 1902 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:httpQueryWithEscapedCharacter, Exception,  @AT@ 1941 @LENGTH@ 9
---INS VariableDeclarationStatement@@Exchange exchange=template.request("http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:httpQueryWithEscapedCharacter, Exception,  @AT@ 1961 @LENGTH@ 239
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=template.request("http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @AT@ 1961 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=template.request("http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @TO@ VariableDeclarationStatement@@Exchange exchange=template.request("http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @AT@ 1970 @LENGTH@ 229
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=template.request("http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 1970 @LENGTH@ 8
---------INS MethodInvocation@@template.request("http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @TO@ VariableDeclarationFragment@@exchange=template.request("http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 1981 @LENGTH@ 218
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.request("http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 1981 @LENGTH@ 8
------------INS SimpleName@@MethodName:request:["http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel", new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
] @TO@ MethodInvocation@@template.request("http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 1990 @LENGTH@ 209
---------------INS InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel" @TO@ SimpleName@@MethodName:request:["http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel", new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
] @AT@ 1998 @LENGTH@ 70
------------------INS StringLiteral@@"http4://" @TO@ InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel" @AT@ 1998 @LENGTH@ 10
------------------INS Operator@@+ @TO@ InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel" @AT@ 2008 @LENGTH@ 1
------------------INS MethodInvocation@@MethodName:getHostName:[] @TO@ InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel" @AT@ 2011 @LENGTH@ 13
------------------INS StringLiteral@@":" @TO@ InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel" @AT@ 2027 @LENGTH@ 3
------------------INS MethodInvocation@@MethodName:getPort:[] @TO@ InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel" @AT@ 2033 @LENGTH@ 9
------------------INS StringLiteral@@"/test/?my=%40%20camel" @TO@ InfixExpression@@"http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel" @AT@ 2045 @LENGTH@ 23
---------------INS ClassInstanceCreation@@Processor[] @TO@ SimpleName@@MethodName:request:["http4://" + getHostName() + ":"+ getPort()+ "/test/?my=%40%20camel", new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
] @AT@ 2070 @LENGTH@ 128
------------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 2070 @LENGTH@ 3
------------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 2074 @LENGTH@ 9
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 2086 @LENGTH@ 112
---------------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2100 @LENGTH@ 88
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2100 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2107 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2112 @LENGTH@ 7
------------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2120 @LENGTH@ 17
---------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2120 @LENGTH@ 8
---------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2129 @LENGTH@ 8
------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2146 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertExchange(exchange) @TO@ MethodDeclaration@@public, void, MethodName:httpQueryWithEscapedCharacter, Exception,  @AT@ 2210 @LENGTH@ 25
------INS MethodInvocation@@assertExchange(exchange) @TO@ ExpressionStatement@@MethodInvocation:assertExchange(exchange) @AT@ 2210 @LENGTH@ 24
---------INS SimpleName@@MethodName:assertExchange:[exchange] @TO@ MethodInvocation@@assertExchange(exchange) @AT@ 2210 @LENGTH@ 24
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:assertExchange:[exchange] @AT@ 2225 @LENGTH@ 8


INS MethodDeclaration@@private, String, MethodName:encode, String in,  @TO@ TypeDeclaration@@[public]CommonsClientRequest, [ClientRequest] @AT@ 2010 @LENGTH@ 159
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2010 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2018 @LENGTH@ 6
---INS SimpleName@@MethodName:encode @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2025 @LENGTH@ 6
---INS SingleVariableDeclaration@@String in @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2032 @LENGTH@ 9
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String in @AT@ 2032 @LENGTH@ 6
------INS SimpleName@@in @TO@ SingleVariableDeclaration@@String in @AT@ 2039 @LENGTH@ 2
---INS TryStatement@@try {  return URLEncoder.encode(in,"UTF-8");} catch (UnsupportedEncodingException wontHappen) {  return in;} @TO@ MethodDeclaration@@private, String, MethodName:encode, String in,  @AT@ 2047 @LENGTH@ 119
------INS ReturnStatement@@MethodInvocation:URLEncoder.encode(in,"UTF-8") @TO@ TryStatement@@try {  return URLEncoder.encode(in,"UTF-8");} catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2056 @LENGTH@ 38
---------INS MethodInvocation@@URLEncoder.encode(in,"UTF-8") @TO@ ReturnStatement@@MethodInvocation:URLEncoder.encode(in,"UTF-8") @AT@ 2063 @LENGTH@ 30
------------INS SimpleName@@Name:URLEncoder @TO@ MethodInvocation@@URLEncoder.encode(in,"UTF-8") @AT@ 2063 @LENGTH@ 10
------------INS SimpleName@@MethodName:encode:[in, "UTF-8"] @TO@ MethodInvocation@@URLEncoder.encode(in,"UTF-8") @AT@ 2074 @LENGTH@ 19
---------------INS SimpleName@@in @TO@ SimpleName@@MethodName:encode:[in, "UTF-8"] @AT@ 2081 @LENGTH@ 2
---------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:encode:[in, "UTF-8"] @AT@ 2085 @LENGTH@ 7
------INS CatchClause@@catch (UnsupportedEncodingException wontHappen) {  return in;} @TO@ TryStatement@@try {  return URLEncoder.encode(in,"UTF-8");} catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2099 @LENGTH@ 67
---------INS SingleVariableDeclaration@@UnsupportedEncodingException wontHappen @TO@ CatchClause@@catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2106 @LENGTH@ 39
------------INS SimpleType@@UnsupportedEncodingException @TO@ SingleVariableDeclaration@@UnsupportedEncodingException wontHappen @AT@ 2106 @LENGTH@ 28
------------INS SimpleName@@wontHappen @TO@ SingleVariableDeclaration@@UnsupportedEncodingException wontHappen @AT@ 2135 @LENGTH@ 10
---------INS ReturnStatement@@SimpleName:in @TO@ CatchClause@@catch (UnsupportedEncodingException wontHappen) {  return in;} @AT@ 2152 @LENGTH@ 10
------------INS SimpleName@@in @TO@ ReturnStatement@@SimpleName:in @AT@ 2159 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:from("direct:start").aggregate().header("foo").groupExchanges().completionTimeout(1000L).to("mock:result") @TO@ MethodInvocation:from("direct:start").aggregate(header("foo")).groupExchanges().completionTimeout(1000L).to("mock:result") @AT@ 3269 @LENGTH@ 403
---UPD MethodInvocation@@from("direct:start").aggregate().header("foo").groupExchanges().completionTimeout(1000L).to("mock:result") @TO@ from("direct:start").aggregate(header("foo")).groupExchanges().completionTimeout(1000L).to("mock:result") @AT@ 3269 @LENGTH@ 402
------UPD MethodInvocation@@MethodName:header:["foo"] @TO@ MethodName:aggregate:[header("foo")] @AT@ 3269 @LENGTH@ 125
---------INS MethodInvocation@@header("foo") @TO@ MethodInvocation@@MethodName:header:["foo"] @AT@ 3379 @LENGTH@ 13
------------INS SimpleName@@MethodName:header:["foo"] @TO@ MethodInvocation@@header("foo") @AT@ 3379 @LENGTH@ 13
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:header:["foo"] @AT@ 3386 @LENGTH@ 5
---------DEL StringLiteral@@"foo" @AT@ 3388 @LENGTH@ 5
------DEL MethodInvocation@@MethodName:aggregate:[] @AT@ 3269 @LENGTH@ 111


UPD ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(2) @TO@ MethodInvocation:mock.expectedMinimumMessageCount(2) @AT@ 4331 @LENGTH@ 29
---UPD MethodInvocation@@mock.expectedMessageCount(2) @TO@ mock.expectedMinimumMessageCount(2) @AT@ 4331 @LENGTH@ 28
------UPD SimpleName@@MethodName:expectedMessageCount:[2] @TO@ MethodName:expectedMinimumMessageCount:[2] @AT@ 4336 @LENGTH@ 23


DEL ExpressionStatement@@MethodInvocation:assertLoadClass(moduleId,Echo.class.getName()) @AT@ 7823 @LENGTH@ 48
---DEL MethodInvocation@@assertLoadClass(moduleId,Echo.class.getName()) @AT@ 7823 @LENGTH@ 47
------DEL SimpleName@@MethodName:assertLoadClass:[moduleId, Echo.class.getName()] @AT@ 7823 @LENGTH@ 47
---------DEL SimpleName@@moduleId @AT@ 7839 @LENGTH@ 8
---------DEL MethodInvocation@@Echo.class.getName() @AT@ 7849 @LENGTH@ 20
------------DEL TypeLiteral@@Echo.class @AT@ 7849 @LENGTH@ 10
------------DEL SimpleName@@MethodName:getName:[] @AT@ 7860 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:set.setMutator(new EmptySetMutator(contained)) @TO@ MethodInvocation:set.setMutator(new EmptySetMutator<E>(contained)) @AT@ 1722 @LENGTH@ 49
---UPD MethodInvocation@@set.setMutator(new EmptySetMutator(contained)) @TO@ set.setMutator(new EmptySetMutator<E>(contained)) @AT@ 1722 @LENGTH@ 48
------UPD SimpleName@@MethodName:setMutator:[new EmptySetMutator(contained)] @TO@ MethodName:setMutator:[new EmptySetMutator<E>(contained)] @AT@ 1726 @LENGTH@ 44
---------UPD ClassInstanceCreation@@EmptySetMutator[contained] @TO@ EmptySetMutator<E>[contained] @AT@ 1738 @LENGTH@ 30
------------INS ParameterizedType@@EmptySetMutator<E> @TO@ ClassInstanceCreation@@EmptySetMutator[contained] @AT@ 1742 @LENGTH@ 18
---------------INS SimpleType@@EmptySetMutator @TO@ ParameterizedType@@EmptySetMutator<E> @AT@ 1742 @LENGTH@ 15
---------------INS SimpleType@@E @TO@ ParameterizedType@@EmptySetMutator<E> @AT@ 1758 @LENGTH@ 1
------------DEL SimpleType@@EmptySetMutator @AT@ 1742 @LENGTH@ 15


UPD MethodDeclaration@@public, long, MethodName:qeueSize,  @TO@ public, long, MethodName:queueSize,  @AT@ 1549 @LENGTH@ 77
---UPD SimpleName@@MethodName:qeueSize @TO@ MethodName:queueSize @AT@ 1561 @LENGTH@ 8


INS MethodDeclaration@@public, static, String, MethodName:getCharsetName, Exchange exchange,  @TO@ TypeDeclaration@@[@Converter, public, final]IOConverter,  @AT@ 10152 @LENGTH@ 109
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:getCharsetName, Exchange exchange,  @AT@ 10152 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:getCharsetName, Exchange exchange,  @AT@ 10159 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:getCharsetName, Exchange exchange,  @AT@ 10166 @LENGTH@ 6
---INS SimpleName@@MethodName:getCharsetName @TO@ MethodDeclaration@@public, static, String, MethodName:getCharsetName, Exchange exchange,  @AT@ 10173 @LENGTH@ 14
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, static, String, MethodName:getCharsetName, Exchange exchange,  @AT@ 10188 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 10188 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 10197 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:getCharsetName(exchange,true) @TO@ MethodDeclaration@@public, static, String, MethodName:getCharsetName, Exchange exchange,  @AT@ 10217 @LENGTH@ 38
------INS MethodInvocation@@getCharsetName(exchange,true) @TO@ ReturnStatement@@MethodInvocation:getCharsetName(exchange,true) @AT@ 10224 @LENGTH@ 30
---------INS SimpleName@@MethodName:getCharsetName:[exchange, true] @TO@ MethodInvocation@@getCharsetName(exchange,true) @AT@ 10224 @LENGTH@ 30
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getCharsetName:[exchange, true] @AT@ 10239 @LENGTH@ 8
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getCharsetName:[exchange, true] @AT@ 10249 @LENGTH@ 4


UPD ReturnStatement@@ClassInstanceCreation:new ServerElementSocketBindingGroupUpdate(original.getSocketBindingGroupName()) @TO@ ConditionalExpression:originalName != null ? new ServerElementSocketBindingGroupUpdate(original.getSocketBindingGroupName()) : null @AT@ 1678 @LENGTH@ 87
---INS ConditionalExpression@@originalName != null ? new ServerElementSocketBindingGroupUpdate(original.getSocketBindingGroupName()) : null @TO@ ReturnStatement@@ClassInstanceCreation:new ServerElementSocketBindingGroupUpdate(original.getSocketBindingGroupName()) @AT@ 1759 @LENGTH@ 109
------MOV ClassInstanceCreation@@ServerElementSocketBindingGroupUpdate[original.getSocketBindingGroupName()] @TO@ ConditionalExpression@@originalName != null ? new ServerElementSocketBindingGroupUpdate(original.getSocketBindingGroupName()) : null @AT@ 1685 @LENGTH@ 79
------INS InfixExpression@@originalName != null @TO@ ConditionalExpression@@originalName != null ? new ServerElementSocketBindingGroupUpdate(original.getSocketBindingGroupName()) : null @AT@ 1759 @LENGTH@ 20
---------INS SimpleName@@originalName @TO@ InfixExpression@@originalName != null @AT@ 1759 @LENGTH@ 12
---------INS Operator@@!= @TO@ InfixExpression@@originalName != null @AT@ 1771 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@originalName != null @AT@ 1775 @LENGTH@ 4
------INS NullLiteral@@null @TO@ ConditionalExpression@@originalName != null ? new ServerElementSocketBindingGroupUpdate(original.getSocketBindingGroupName()) : null @AT@ 1864 @LENGTH@ 4


UPD VariableDeclarationStatement@@Option[] options=options(profile("log").version("1.4"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),mavenBundle("org.apache.felix","org.apache.felix.configadmin").versionAsInProject(),mavenBundle("org.apache.servicemix.bundles","org.apache.servicemix.bundles.jaxp-ri").version("1.4.2_4-SNAPSHOT"),scanFeatures(getCamelKarafFeatureUrl(),"camel-spring","camel-" + feature),workingDirectory("target/paxrunner/"),framework); @TO@ Option[] options=options(profile("log").version("1.4"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),mavenBundle("org.apache.felix","org.apache.felix.configadmin").versionAsInProject(),mavenBundle("org.apache.servicemix.bundles","org.apache.servicemix.bundles.jaxp-ri").version("1.4.2_4"),scanFeatures(getCamelKarafFeatureUrl(),"camel-spring","camel-" + feature),workingDirectory("target/paxrunner/"),framework); @AT@ 5610 @LENGTH@ 791
---UPD VariableDeclarationFragment@@options=options(profile("log").version("1.4"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),mavenBundle("org.apache.felix","org.apache.felix.configadmin").versionAsInProject(),mavenBundle("org.apache.servicemix.bundles","org.apache.servicemix.bundles.jaxp-ri").version("1.4.2_4-SNAPSHOT"),scanFeatures(getCamelKarafFeatureUrl(),"camel-spring","camel-" + feature),workingDirectory("target/paxrunner/"),framework) @TO@ options=options(profile("log").version("1.4"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),mavenBundle("org.apache.felix","org.apache.felix.configadmin").versionAsInProject(),mavenBundle("org.apache.servicemix.bundles","org.apache.servicemix.bundles.jaxp-ri").version("1.4.2_4"),scanFeatures(getCamelKarafFeatureUrl(),"camel-spring","camel-" + feature),workingDirectory("target/paxrunner/"),framework) @AT@ 5619 @LENGTH@ 781
------UPD MethodInvocation@@options(profile("log").version("1.4"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),mavenBundle("org.apache.felix","org.apache.felix.configadmin").versionAsInProject(),mavenBundle("org.apache.servicemix.bundles","org.apache.servicemix.bundles.jaxp-ri").version("1.4.2_4-SNAPSHOT"),scanFeatures(getCamelKarafFeatureUrl(),"camel-spring","camel-" + feature),workingDirectory("target/paxrunner/"),framework) @TO@ options(profile("log").version("1.4"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),mavenBundle("org.apache.felix","org.apache.felix.configadmin").versionAsInProject(),mavenBundle("org.apache.servicemix.bundles","org.apache.servicemix.bundles.jaxp-ri").version("1.4.2_4"),scanFeatures(getCamelKarafFeatureUrl(),"camel-spring","camel-" + feature),workingDirectory("target/paxrunner/"),framework) @AT@ 5629 @LENGTH@ 771
---------UPD SimpleName@@MethodName:options:[profile("log").version("1.4"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"), mavenBundle("org.apache.felix","org.apache.felix.configadmin").versionAsInProject(), mavenBundle("org.apache.servicemix.bundles","org.apache.servicemix.bundles.jaxp-ri").version("1.4.2_4-SNAPSHOT"), scanFeatures(getCamelKarafFeatureUrl(),"camel-spring","camel-" + feature), workingDirectory("target/paxrunner/"), framework] @TO@ MethodName:options:[profile("log").version("1.4"), org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"), mavenBundle("org.apache.felix","org.apache.felix.configadmin").versionAsInProject(), mavenBundle("org.apache.servicemix.bundles","org.apache.servicemix.bundles.jaxp-ri").version("1.4.2_4"), scanFeatures(getCamelKarafFeatureUrl(),"camel-spring","camel-" + feature), workingDirectory("target/paxrunner/"), framework] @AT@ 5629 @LENGTH@ 771
------------UPD MethodInvocation@@mavenBundle("org.apache.servicemix.bundles","org.apache.servicemix.bundles.jaxp-ri").version("1.4.2_4-SNAPSHOT") @TO@ mavenBundle("org.apache.servicemix.bundles","org.apache.servicemix.bundles.jaxp-ri").version("1.4.2_4") @AT@ 6071 @LENGTH@ 113
---------------UPD SimpleName@@MethodName:version:["1.4.2_4-SNAPSHOT"] @TO@ MethodName:version:["1.4.2_4"] @AT@ 6157 @LENGTH@ 27
------------------UPD StringLiteral@@"1.4.2_4-SNAPSHOT" @TO@ "1.4.2_4" @AT@ 6165 @LENGTH@ 18


UPD MethodDeclaration@@ObjectStoreEnvironmentElement, MethodName:parseObjectStoreEnvironmentElement, XMLExtendedStreamReader reader, final TransactionSubsystemAdd add, XMLStreamException,  @TO@ void, MethodName:parseObjectStoreEnvironmentElement, XMLExtendedStreamReader reader, final TransactionSubsystemAdd add, XMLStreamException,  @AT@ 8718 @LENGTH@ 1017
---INS PrimitiveType@@void @TO@ MethodDeclaration@@ObjectStoreEnvironmentElement, MethodName:parseObjectStoreEnvironmentElement, XMLExtendedStreamReader reader, final TransactionSubsystemAdd add, XMLStreamException,  @AT@ 8562 @LENGTH@ 4
---DEL SimpleType@@ObjectStoreEnvironmentElement @AT@ 8688 @LENGTH@ 29
---DEL VariableDeclarationStatement@@final ObjectStoreEnvironmentElement element=new ObjectStoreEnvironmentElement(); @AT@ 8856 @LENGTH@ 82
------DEL Modifier@@final @AT@ 8856 @LENGTH@ 5
------DEL SimpleType@@ObjectStoreEnvironmentElement @AT@ 8862 @LENGTH@ 29
------DEL VariableDeclarationFragment@@element=new ObjectStoreEnvironmentElement() @AT@ 8892 @LENGTH@ 45
---------DEL SimpleName@@element @AT@ 8892 @LENGTH@ 7
---------DEL ClassInstanceCreation@@ObjectStoreEnvironmentElement[] @AT@ 8902 @LENGTH@ 35
------------DEL New@@new @AT@ 8902 @LENGTH@ 3
------------DEL SimpleType@@ObjectStoreEnvironmentElement @AT@ 8906 @LENGTH@ 29
---UPD ForStatement@@for (int i=0; i < count; i++) {  final String value=reader.getAttributeValue(i);  if (reader.getAttributeNamespace(i) != null) {    throw ParseUtils.unexpectedAttribute(reader,i);  } else {    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case DIRECTORY:      element.setDirectory(value);    break;default :  ParseUtils.unexpectedAttribute(reader,i);}}} @TO@ for (int i=0; i < count; i++) {  final String value=reader.getAttributeValue(i);  if (reader.getAttributeNamespace(i) != null) {    throw ParseUtils.unexpectedAttribute(reader,i);  } else {    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case DIRECTORY:      add.setObjectStoreDirectory(value);    break;default :  ParseUtils.unexpectedAttribute(reader,i);}}} @AT@ 9001 @LENGTH@ 632
------UPD IfStatement@@if (reader.getAttributeNamespace(i) != null) {  throw ParseUtils.unexpectedAttribute(reader,i);} else {  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case DIRECTORY:    element.setDirectory(value);  break;default :ParseUtils.unexpectedAttribute(reader,i);}} @TO@ if (reader.getAttributeNamespace(i) != null) {  throw ParseUtils.unexpectedAttribute(reader,i);} else {  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case DIRECTORY:    add.setObjectStoreDirectory(value);  break;default :ParseUtils.unexpectedAttribute(reader,i);}} @AT@ 9110 @LENGTH@ 513
---------UPD Block@@ElseBody:{  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case DIRECTORY:    element.setDirectory(value);  break;default :ParseUtils.unexpectedAttribute(reader,i);}} @TO@ ElseBody:{  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case DIRECTORY:    add.setObjectStoreDirectory(value);  break;default :ParseUtils.unexpectedAttribute(reader,i);}} @AT@ 9241 @LENGTH@ 382
------------UPD SwitchStatement@@switch (attribute) {case DIRECTORY:  element.setDirectory(value);break;default :ParseUtils.unexpectedAttribute(reader,i);} @TO@ switch (attribute) {case DIRECTORY:  add.setObjectStoreDirectory(value);break;default :ParseUtils.unexpectedAttribute(reader,i);} @AT@ 9355 @LENGTH@ 254
---------------UPD ExpressionStatement@@MethodInvocation:element.setDirectory(value) @TO@ MethodInvocation:add.setObjectStoreDirectory(value) @AT@ 9436 @LENGTH@ 28
------------------UPD MethodInvocation@@element.setDirectory(value) @TO@ add.setObjectStoreDirectory(value) @AT@ 9436 @LENGTH@ 27
---------------------UPD SimpleName@@Name:element @TO@ Name:add @AT@ 9436 @LENGTH@ 7
---------------------UPD SimpleName@@MethodName:setDirectory:[value] @TO@ MethodName:setObjectStoreDirectory:[value] @AT@ 9444 @LENGTH@ 19
---DEL ReturnStatement@@SimpleName:element @AT@ 9714 @LENGTH@ 15
------DEL SimpleName@@element @AT@ 9721 @LENGTH@ 7


UPD IfStatement@@if (handoffExecutor == null) {  final ServiceName handoffExecutorName=JBOSS_THREAD_EXECUTOR.append(handoffExecutor);  serviceBuilder.addDependency(handoffExecutorName,Executor.class,service.getHandoffExecutorInjector());} @TO@ if (handoffExecutor != null) {  final ServiceName handoffExecutorName=JBOSS_THREAD_EXECUTOR.append(handoffExecutor);  serviceBuilder.addDependency(handoffExecutorName,Executor.class,service.getHandoffExecutorInjector());} @AT@ 5768 @LENGTH@ 256
---UPD InfixExpression@@handoffExecutor == null @TO@ handoffExecutor != null @AT@ 5772 @LENGTH@ 23
------UPD Operator@@== @TO@ != @AT@ 5787 @LENGTH@ 2


UPD MethodDeclaration@@protected, RequestEntity, MethodName:createRequestEntity, Exchange exchange,  @TO@ protected, RequestEntity, MethodName:createRequestEntity, Exchange exchange, InvalidPayloadException,  @AT@ 11624 @LENGTH@ 1168
---UPD IfStatement@@if (answer == null) {  try {    Object data=in.getBody();    if (data != null) {      String contentType=ExchangeHelper.getContentType(exchange);      if (data instanceof File) {        answer=new FileRequestEntity((File)data,contentType);      } else       if (data instanceof String) {        String charset=IOConverter.getCharsetName(exchange);        answer=new StringRequestEntity((String)data,contentType,charset);      } else {        answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType);      }    }  } catch (  UnsupportedEncodingException e) {    throw new RuntimeCamelException(e);  }} @TO@ if (answer == null) {  try {    Object data=in.getBody();    if (data != null) {      String contentType=ExchangeHelper.getContentType(exchange);      if (data instanceof File || data instanceof GenericFile) {        File file=in.getBody(File.class);        if (file != null) {          answer=new FileRequestEntity(file,contentType);        }      } else       if (data instanceof String) {        String charset=IOConverter.getCharsetName(exchange,false);        answer=new StringRequestEntity((String)data,contentType,charset);      }      if (answer == null) {        InputStream is=in.getMandatoryBody(InputStream.class);        answer=new InputStreamRequestEntity(is,contentType);      }    }  } catch (  UnsupportedEncodingException e) {    throw new RuntimeCamelException(e);  }} @AT@ 11872 @LENGTH@ 891
------UPD Block@@ThenBody:{  try {    Object data=in.getBody();    if (data != null) {      String contentType=ExchangeHelper.getContentType(exchange);      if (data instanceof File) {        answer=new FileRequestEntity((File)data,contentType);      } else       if (data instanceof String) {        String charset=IOConverter.getCharsetName(exchange);        answer=new StringRequestEntity((String)data,contentType,charset);      } else {        answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType);      }    }  } catch (  UnsupportedEncodingException e) {    throw new RuntimeCamelException(e);  }} @TO@ ThenBody:{  try {    Object data=in.getBody();    if (data != null) {      String contentType=ExchangeHelper.getContentType(exchange);      if (data instanceof File || data instanceof GenericFile) {        File file=in.getBody(File.class);        if (file != null) {          answer=new FileRequestEntity(file,contentType);        }      } else       if (data instanceof String) {        String charset=IOConverter.getCharsetName(exchange,false);        answer=new StringRequestEntity((String)data,contentType,charset);      }      if (answer == null) {        InputStream is=in.getMandatoryBody(InputStream.class);        answer=new InputStreamRequestEntity(is,contentType);      }    }  } catch (  UnsupportedEncodingException e) {    throw new RuntimeCamelException(e);  }} @AT@ 11892 @LENGTH@ 871
---------UPD TryStatement@@try {  Object data=in.getBody();  if (data != null) {    String contentType=ExchangeHelper.getContentType(exchange);    if (data instanceof File) {      answer=new FileRequestEntity((File)data,contentType);    } else     if (data instanceof String) {      String charset=IOConverter.getCharsetName(exchange);      answer=new StringRequestEntity((String)data,contentType,charset);    } else {      answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType);    }  }} catch (UnsupportedEncodingException e) {  throw new RuntimeCamelException(e);} @TO@ try {  Object data=in.getBody();  if (data != null) {    String contentType=ExchangeHelper.getContentType(exchange);    if (data instanceof File || data instanceof GenericFile) {      File file=in.getBody(File.class);      if (file != null) {        answer=new FileRequestEntity(file,contentType);      }    } else     if (data instanceof String) {      String charset=IOConverter.getCharsetName(exchange,false);      answer=new StringRequestEntity((String)data,contentType,charset);    }    if (answer == null) {      InputStream is=in.getMandatoryBody(InputStream.class);      answer=new InputStreamRequestEntity(is,contentType);    }  }} catch (UnsupportedEncodingException e) {  throw new RuntimeCamelException(e);} @AT@ 11906 @LENGTH@ 847
------------UPD IfStatement@@if (data != null) {  String contentType=ExchangeHelper.getContentType(exchange);  if (data instanceof File) {    answer=new FileRequestEntity((File)data,contentType);  } else   if (data instanceof String) {    String charset=IOConverter.getCharsetName(exchange);    answer=new StringRequestEntity((String)data,contentType,charset);  } else {    answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType);  }} @TO@ if (data != null) {  String contentType=ExchangeHelper.getContentType(exchange);  if (data instanceof File || data instanceof GenericFile) {    File file=in.getBody(File.class);    if (file != null) {      answer=new FileRequestEntity(file,contentType);    }  } else   if (data instanceof String) {    String charset=IOConverter.getCharsetName(exchange,false);    answer=new StringRequestEntity((String)data,contentType,charset);  }  if (answer == null) {    InputStream is=in.getMandatoryBody(InputStream.class);    answer=new InputStreamRequestEntity(is,contentType);  }} @AT@ 11972 @LENGTH@ 660
---------------UPD Block@@ThenBody:{  String contentType=ExchangeHelper.getContentType(exchange);  if (data instanceof File) {    answer=new FileRequestEntity((File)data,contentType);  } else   if (data instanceof String) {    String charset=IOConverter.getCharsetName(exchange);    answer=new StringRequestEntity((String)data,contentType,charset);  } else {    answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType);  }} @TO@ ThenBody:{  String contentType=ExchangeHelper.getContentType(exchange);  if (data instanceof File || data instanceof GenericFile) {    File file=in.getBody(File.class);    if (file != null) {      answer=new FileRequestEntity(file,contentType);    }  } else   if (data instanceof String) {    String charset=IOConverter.getCharsetName(exchange,false);    answer=new StringRequestEntity((String)data,contentType,charset);  }  if (answer == null) {    InputStream is=in.getMandatoryBody(InputStream.class);    answer=new InputStreamRequestEntity(is,contentType);  }} @AT@ 11990 @LENGTH@ 642
------------------UPD IfStatement@@if (data instanceof File) {  answer=new FileRequestEntity((File)data,contentType);} else if (data instanceof String) {  String charset=IOConverter.getCharsetName(exchange);  answer=new StringRequestEntity((String)data,contentType,charset);} else {  answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType);} @TO@ if (data instanceof File || data instanceof GenericFile) {  File file=in.getBody(File.class);  if (file != null) {    answer=new FileRequestEntity(file,contentType);  }} else if (data instanceof String) {  String charset=IOConverter.getCharsetName(exchange,false);  answer=new StringRequestEntity((String)data,contentType,charset);} @AT@ 12094 @LENGTH@ 520
---------------------DEL InstanceofExpression@@data instanceof File @AT@ 12098 @LENGTH@ 20
---------------------UPD Block@@ThenBody:{  answer=new FileRequestEntity((File)data,contentType);} @TO@ ThenBody:{  answer=new FileRequestEntity(file,contentType);} @AT@ 12120 @LENGTH@ 128
---------------------UPD Block@@ElseBody:if (data instanceof String) {  String charset=IOConverter.getCharsetName(exchange);  answer=new StringRequestEntity((String)data,contentType,charset);} else {  answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType);} @TO@ ElseBody:if (data instanceof String) {  String charset=IOConverter.getCharsetName(exchange,false);  answer=new StringRequestEntity((String)data,contentType,charset);} @AT@ 12254 @LENGTH@ 360
------------------------UPD IfStatement@@if (data instanceof String) {  String charset=IOConverter.getCharsetName(exchange);  answer=new StringRequestEntity((String)data,contentType,charset);} else {  answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType);} @TO@ if (data instanceof String) {  String charset=IOConverter.getCharsetName(exchange,false);  answer=new StringRequestEntity((String)data,contentType,charset);} @AT@ 12254 @LENGTH@ 360
---------------------------UPD Block@@ThenBody:{  String charset=IOConverter.getCharsetName(exchange);  answer=new StringRequestEntity((String)data,contentType,charset);} @TO@ ThenBody:{  String charset=IOConverter.getCharsetName(exchange,false);  answer=new StringRequestEntity((String)data,contentType,charset);} @AT@ 12282 @LENGTH@ 196
------------------------------UPD VariableDeclarationStatement@@String charset=IOConverter.getCharsetName(exchange); @TO@ String charset=IOConverter.getCharsetName(exchange,false); @AT@ 12308 @LENGTH@ 54
---------------------------------UPD VariableDeclarationFragment@@charset=IOConverter.getCharsetName(exchange) @TO@ charset=IOConverter.getCharsetName(exchange,false) @AT@ 12315 @LENGTH@ 46
------------------------------------UPD MethodInvocation@@IOConverter.getCharsetName(exchange) @TO@ IOConverter.getCharsetName(exchange,false) @AT@ 12325 @LENGTH@ 36
---------------------------------------UPD SimpleName@@MethodName:getCharsetName:[exchange] @TO@ MethodName:getCharsetName:[exchange, false] @AT@ 12337 @LENGTH@ 24
------------------------------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getCharsetName:[exchange] @AT@ 13435 @LENGTH@ 5
---------------------------DEL Block@@ElseBody:{  answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType);} @AT@ 12484 @LENGTH@ 130
------------------------------DEL ExpressionStatement@@Assignment:answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType) @AT@ 12510 @LENGTH@ 82
---------------------------------DEL Assignment@@answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType) @AT@ 12510 @LENGTH@ 81
------------------------------------DEL SimpleName@@answer @AT@ 12510 @LENGTH@ 6
------------------------------------DEL Operator@@= @AT@ 12516 @LENGTH@ 1
------------------------------------DEL ClassInstanceCreation@@InputStreamRequestEntity[in.getBody(InputStream.class), contentType] @AT@ 12519 @LENGTH@ 72
---------------------------------------DEL New@@new @AT@ 12519 @LENGTH@ 3
---------------------------------------DEL SimpleType@@InputStreamRequestEntity @AT@ 12523 @LENGTH@ 24
---------------------------------------DEL MethodInvocation@@in.getBody(InputStream.class) @AT@ 12548 @LENGTH@ 29
------------------------------------------DEL SimpleName@@Name:in @AT@ 12548 @LENGTH@ 2
------------------------------------------DEL SimpleName@@MethodName:getBody:[InputStream.class] @AT@ 12551 @LENGTH@ 26
---------------------------------------------DEL TypeLiteral@@InputStream.class @AT@ 12559 @LENGTH@ 17
---------------------------------------DEL SimpleName@@contentType @AT@ 12579 @LENGTH@ 11
---------------------INS InfixExpression@@data instanceof File || data instanceof GenericFile @TO@ IfStatement@@if (data instanceof File) {  answer=new FileRequestEntity((File)data,contentType);} else if (data instanceof String) {  String charset=IOConverter.getCharsetName(exchange);  answer=new StringRequestEntity((String)data,contentType,charset);} else {  answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType);} @AT@ 12625 @LENGTH@ 51
------------------------INS InstanceofExpression@@data instanceof File @TO@ InfixExpression@@data instanceof File || data instanceof GenericFile @AT@ 12625 @LENGTH@ 20
---------------------------MOV SimpleName@@data @TO@ InstanceofExpression@@data instanceof File @AT@ 12098 @LENGTH@ 4
---------------------------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@data instanceof File @AT@ 12103 @LENGTH@ 10
---------------------------MOV SimpleType@@File @TO@ InstanceofExpression@@data instanceof File @AT@ 12114 @LENGTH@ 4
------------------------INS Operator@@|| @TO@ InfixExpression@@data instanceof File || data instanceof GenericFile @AT@ 12645 @LENGTH@ 2
------------------------INS InstanceofExpression@@data instanceof GenericFile @TO@ InfixExpression@@data instanceof File || data instanceof GenericFile @AT@ 12649 @LENGTH@ 27
---------------------------INS SimpleName@@data @TO@ InstanceofExpression@@data instanceof GenericFile @AT@ 12649 @LENGTH@ 4
---------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@data instanceof GenericFile @AT@ 12654 @LENGTH@ 10
---------------------------INS SimpleType@@GenericFile @TO@ InstanceofExpression@@data instanceof GenericFile @AT@ 12665 @LENGTH@ 11
---------------------INS Block@@ThenBody:{  File file=in.getBody(File.class);  if (file != null) {    answer=new FileRequestEntity(file,contentType);  }} @TO@ IfStatement@@if (data instanceof File) {  answer=new FileRequestEntity((File)data,contentType);} else if (data instanceof String) {  String charset=IOConverter.getCharsetName(exchange);  answer=new StringRequestEntity((String)data,contentType,charset);} else {  answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType);} @AT@ 12678 @LENGTH@ 232
------------------------INS VariableDeclarationStatement@@File file=in.getBody(File.class); @TO@ Block@@ThenBody:{  File file=in.getBody(File.class);  if (file != null) {    answer=new FileRequestEntity(file,contentType);  }} @AT@ 12704 @LENGTH@ 35
---------------------------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File file=in.getBody(File.class); @AT@ 12704 @LENGTH@ 4
---------------------------INS VariableDeclarationFragment@@file=in.getBody(File.class) @TO@ VariableDeclarationStatement@@File file=in.getBody(File.class); @AT@ 12709 @LENGTH@ 29
------------------------------INS SimpleName@@file @TO@ VariableDeclarationFragment@@file=in.getBody(File.class) @AT@ 12709 @LENGTH@ 4
------------------------------INS MethodInvocation@@in.getBody(File.class) @TO@ VariableDeclarationFragment@@file=in.getBody(File.class) @AT@ 12716 @LENGTH@ 22
---------------------------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.getBody(File.class) @AT@ 12716 @LENGTH@ 2
---------------------------------INS SimpleName@@MethodName:getBody:[File.class] @TO@ MethodInvocation@@in.getBody(File.class) @AT@ 12719 @LENGTH@ 19
------------------------------------INS TypeLiteral@@File.class @TO@ SimpleName@@MethodName:getBody:[File.class] @AT@ 12727 @LENGTH@ 10
------------------------INS IfStatement@@if (file != null) {  answer=new FileRequestEntity(file,contentType);} @TO@ Block@@ThenBody:{  File file=in.getBody(File.class);  if (file != null) {    answer=new FileRequestEntity(file,contentType);  }} @AT@ 12764 @LENGTH@ 124
---------------------------MOV Block@@ThenBody:{  answer=new FileRequestEntity((File)data,contentType);} @TO@ IfStatement@@if (file != null) {  answer=new FileRequestEntity(file,contentType);} @AT@ 12120 @LENGTH@ 128
------------------------------UPD ExpressionStatement@@Assignment:answer=new FileRequestEntity((File)data,contentType) @TO@ Assignment:answer=new FileRequestEntity(file,contentType) @AT@ 12146 @LENGTH@ 56
---------------------------------UPD Assignment@@answer=new FileRequestEntity((File)data,contentType) @TO@ answer=new FileRequestEntity(file,contentType) @AT@ 12146 @LENGTH@ 55
------------------------------------UPD ClassInstanceCreation@@FileRequestEntity[(File)data, contentType] @TO@ FileRequestEntity[file, contentType] @AT@ 12155 @LENGTH@ 46
---------------------------------------DEL CastExpression@@(File)data @AT@ 12177 @LENGTH@ 10
------------------------------------------DEL SimpleType@@File @AT@ 12178 @LENGTH@ 4
------------------------------------------DEL SimpleName@@data @AT@ 12183 @LENGTH@ 4
---------------------------------------INS SimpleName@@file @TO@ ClassInstanceCreation@@FileRequestEntity[(File)data, contentType] @AT@ 12843 @LENGTH@ 4
---------------------------INS InfixExpression@@file != null @TO@ IfStatement@@if (file != null) {  answer=new FileRequestEntity(file,contentType);} @AT@ 12768 @LENGTH@ 12
------------------------------INS SimpleName@@file @TO@ InfixExpression@@file != null @AT@ 12768 @LENGTH@ 4
------------------------------INS Operator@@!= @TO@ InfixExpression@@file != null @AT@ 12772 @LENGTH@ 2
------------------------------INS NullLiteral@@null @TO@ InfixExpression@@file != null @AT@ 12776 @LENGTH@ 4
------------------INS IfStatement@@if (answer == null) {  InputStream is=in.getMandatoryBody(InputStream.class);  answer=new InputStreamRequestEntity(is,contentType);} @TO@ Block@@ThenBody:{  String contentType=ExchangeHelper.getContentType(exchange);  if (data instanceof File) {    answer=new FileRequestEntity((File)data,contentType);  } else   if (data instanceof String) {    String charset=IOConverter.getCharsetName(exchange);    answer=new StringRequestEntity((String)data,contentType,charset);  } else {    answer=new InputStreamRequestEntity(in.getBody(InputStream.class),contentType);  }} @AT@ 13627 @LENGTH@ 292
---------------------INS InfixExpression@@answer == null @TO@ IfStatement@@if (answer == null) {  InputStream is=in.getMandatoryBody(InputStream.class);  answer=new InputStreamRequestEntity(is,contentType);} @AT@ 13631 @LENGTH@ 14
------------------------INS SimpleName@@answer @TO@ InfixExpression@@answer == null @AT@ 13631 @LENGTH@ 6
------------------------INS Operator@@== @TO@ InfixExpression@@answer == null @AT@ 13637 @LENGTH@ 2
------------------------INS NullLiteral@@null @TO@ InfixExpression@@answer == null @AT@ 13641 @LENGTH@ 4
---------------------INS Block@@ThenBody:{  InputStream is=in.getMandatoryBody(InputStream.class);  answer=new InputStreamRequestEntity(is,contentType);} @TO@ IfStatement@@if (answer == null) {  InputStream is=in.getMandatoryBody(InputStream.class);  answer=new InputStreamRequestEntity(is,contentType);} @AT@ 13647 @LENGTH@ 272
------------------------INS VariableDeclarationStatement@@InputStream is=in.getMandatoryBody(InputStream.class); @TO@ Block@@ThenBody:{  InputStream is=in.getMandatoryBody(InputStream.class);  answer=new InputStreamRequestEntity(is,contentType);} @AT@ 13761 @LENGTH@ 56
---------------------------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@InputStream is=in.getMandatoryBody(InputStream.class); @AT@ 13761 @LENGTH@ 11
---------------------------INS VariableDeclarationFragment@@is=in.getMandatoryBody(InputStream.class) @TO@ VariableDeclarationStatement@@InputStream is=in.getMandatoryBody(InputStream.class); @AT@ 13773 @LENGTH@ 43
------------------------------INS SimpleName@@is @TO@ VariableDeclarationFragment@@is=in.getMandatoryBody(InputStream.class) @AT@ 13773 @LENGTH@ 2
------------------------------INS MethodInvocation@@in.getMandatoryBody(InputStream.class) @TO@ VariableDeclarationFragment@@is=in.getMandatoryBody(InputStream.class) @AT@ 13778 @LENGTH@ 38
---------------------------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.getMandatoryBody(InputStream.class) @AT@ 13778 @LENGTH@ 2
---------------------------------INS SimpleName@@MethodName:getMandatoryBody:[InputStream.class] @TO@ MethodInvocation@@in.getMandatoryBody(InputStream.class) @AT@ 13781 @LENGTH@ 35
------------------------------------INS TypeLiteral@@InputStream.class @TO@ SimpleName@@MethodName:getMandatoryBody:[InputStream.class] @AT@ 13798 @LENGTH@ 17
------------------------INS ExpressionStatement@@Assignment:answer=new InputStreamRequestEntity(is,contentType) @TO@ Block@@ThenBody:{  InputStream is=in.getMandatoryBody(InputStream.class);  answer=new InputStreamRequestEntity(is,contentType);} @AT@ 13842 @LENGTH@ 55
---------------------------INS Assignment@@answer=new InputStreamRequestEntity(is,contentType) @TO@ ExpressionStatement@@Assignment:answer=new InputStreamRequestEntity(is,contentType) @AT@ 13842 @LENGTH@ 54
------------------------------INS SimpleName@@answer @TO@ Assignment@@answer=new InputStreamRequestEntity(is,contentType) @AT@ 13842 @LENGTH@ 6
------------------------------INS Operator@@= @TO@ Assignment@@answer=new InputStreamRequestEntity(is,contentType) @AT@ 13848 @LENGTH@ 1
------------------------------INS ClassInstanceCreation@@InputStreamRequestEntity[is, contentType] @TO@ Assignment@@answer=new InputStreamRequestEntity(is,contentType) @AT@ 13851 @LENGTH@ 45
---------------------------------INS New@@new @TO@ ClassInstanceCreation@@InputStreamRequestEntity[is, contentType] @AT@ 13851 @LENGTH@ 3
---------------------------------INS SimpleType@@InputStreamRequestEntity @TO@ ClassInstanceCreation@@InputStreamRequestEntity[is, contentType] @AT@ 13855 @LENGTH@ 24
---------------------------------INS SimpleName@@is @TO@ ClassInstanceCreation@@InputStreamRequestEntity[is, contentType] @AT@ 13880 @LENGTH@ 2
---------------------------------INS SimpleName@@contentType @TO@ ClassInstanceCreation@@InputStreamRequestEntity[is, contentType] @AT@ 13884 @LENGTH@ 11
---INS SimpleType@@InvalidPayloadException @TO@ MethodDeclaration@@protected, RequestEntity, MethodName:createRequestEntity, Exchange exchange,  @AT@ 12112 @LENGTH@ 23


INS FieldDeclaration@@protected, CamelContext, [camelContext] @TO@ TypeDeclaration@@[@ContextConfiguration, public]CxfBeanTest, AbstractJUnit4SpringContextTests @AT@ 2159 @LENGTH@ 36
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, CamelContext, [camelContext] @AT@ 2159 @LENGTH@ 9
---INS SimpleType@@CamelContext @TO@ FieldDeclaration@@protected, CamelContext, [camelContext] @AT@ 2169 @LENGTH@ 12
---INS VariableDeclarationFragment@@camelContext @TO@ FieldDeclaration@@protected, CamelContext, [camelContext] @AT@ 2182 @LENGTH@ 12
------INS SimpleName@@camelContext @TO@ VariableDeclarationFragment@@camelContext @AT@ 2182 @LENGTH@ 12


INS MethodDeclaration@@protected, abstract, Element, MethodName:getStandardElement,  @TO@ TypeDeclaration@@[public, abstract]AbstractExecutorElement, AbstractModelElement<T>[ServiceActivator] @AT@ 7625 @LENGTH@ 48
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, abstract, Element, MethodName:getStandardElement,  @AT@ 7625 @LENGTH@ 9
---INS Modifier@@abstract @TO@ MethodDeclaration@@protected, abstract, Element, MethodName:getStandardElement,  @AT@ 7635 @LENGTH@ 8
---INS SimpleType@@Element @TO@ MethodDeclaration@@protected, abstract, Element, MethodName:getStandardElement,  @AT@ 7644 @LENGTH@ 7
---INS SimpleName@@MethodName:getStandardElement @TO@ MethodDeclaration@@protected, abstract, Element, MethodName:getStandardElement,  @AT@ 7652 @LENGTH@ 18


UPD TryStatement@@try {  handle(connection,inputStream);} catch (Exception e) {  throw new IOException("Failed to handle management operation",e);} finally {  safeClose(inputStream);} @TO@ try {  handle(connection,inputStream);} catch (IOException e) {  throw e;}catch (Exception e) {  throw new IOException("Failed to handle management operation",e);} finally {  safeClose(inputStream);} @AT@ 2163 @LENGTH@ 227
---INS CatchClause@@catch (IOException e) {  throw e;} @TO@ TryStatement@@try {  handle(connection,inputStream);} catch (Exception e) {  throw new IOException("Failed to handle management operation",e);} finally {  safeClose(inputStream);} @AT@ 2224 @LENGTH@ 54
------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  throw e;} @AT@ 2231 @LENGTH@ 13
---------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 2231 @LENGTH@ 11
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 2243 @LENGTH@ 1
------INS ThrowStatement@@SimpleName:e @TO@ CatchClause@@catch (IOException e) {  throw e;} @AT@ 2260 @LENGTH@ 8
---------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 2266 @LENGTH@ 1


UPD MethodDeclaration@@public, static, Object, MethodName:getDefaultValueforPrimitive, Class<?> clazz, Exception,  @TO@ public, static, Object, MethodName:getDefaultValueForPrimitive, Class<?> clazz, Exception,  @AT@ 5959 @LENGTH@ 761
---UPD SimpleName@@MethodName:getDefaultValueforPrimitive @TO@ MethodName:getDefaultValueForPrimitive @AT@ 5980 @LENGTH@ 27


INS MethodDeclaration@@public, void, MethodName:testConvertNullBody, Exception,  @TO@ TypeDeclaration@@[public]ConvertBodyTest, ContextTestSupport @AT@ 1534 @LENGTH@ 294
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testConvertNullBody, Exception,  @AT@ 1534 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testConvertNullBody, Exception,  @AT@ 1541 @LENGTH@ 4
---INS SimpleName@@MethodName:testConvertNullBody @TO@ MethodDeclaration@@public, void, MethodName:testConvertNullBody, Exception,  @AT@ 1546 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testConvertNullBody, Exception,  @AT@ 1575 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockEndpoint result=getMockEndpoint("mock:result"); @TO@ MethodDeclaration@@public, void, MethodName:testConvertNullBody, Exception,  @AT@ 1595 @LENGTH@ 53
------INS SimpleType@@MockEndpoint @TO@ VariableDeclarationStatement@@MockEndpoint result=getMockEndpoint("mock:result"); @AT@ 1595 @LENGTH@ 12
------INS VariableDeclarationFragment@@result=getMockEndpoint("mock:result") @TO@ VariableDeclarationStatement@@MockEndpoint result=getMockEndpoint("mock:result"); @AT@ 1608 @LENGTH@ 39
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=getMockEndpoint("mock:result") @AT@ 1608 @LENGTH@ 6
---------INS MethodInvocation@@getMockEndpoint("mock:result") @TO@ VariableDeclarationFragment@@result=getMockEndpoint("mock:result") @AT@ 1617 @LENGTH@ 30
------------INS SimpleName@@MethodName:getMockEndpoint:["mock:result"] @TO@ MethodInvocation@@getMockEndpoint("mock:result") @AT@ 1617 @LENGTH@ 30
---------------INS StringLiteral@@"mock:result" @TO@ SimpleName@@MethodName:getMockEndpoint:["mock:result"] @AT@ 1633 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:result.expectedMessageCount(1) @TO@ MethodDeclaration@@public, void, MethodName:testConvertNullBody, Exception,  @AT@ 1657 @LENGTH@ 31
------INS MethodInvocation@@result.expectedMessageCount(1) @TO@ ExpressionStatement@@MethodInvocation:result.expectedMessageCount(1) @AT@ 1657 @LENGTH@ 30
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.expectedMessageCount(1) @AT@ 1657 @LENGTH@ 6
---------INS SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodInvocation@@result.expectedMessageCount(1) @AT@ 1664 @LENGTH@ 23
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedMessageCount:[1] @AT@ 1685 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:result.message(0).body().isNull() @TO@ MethodDeclaration@@public, void, MethodName:testConvertNullBody, Exception,  @AT@ 1697 @LENGTH@ 34
------INS MethodInvocation@@result.message(0).body().isNull() @TO@ ExpressionStatement@@MethodInvocation:result.message(0).body().isNull() @AT@ 1697 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@result.message(0).body().isNull() @AT@ 1697 @LENGTH@ 24
---------INS MethodInvocation@@MethodName:message:[0] @TO@ MethodInvocation@@result.message(0).body().isNull() @AT@ 1697 @LENGTH@ 17
------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:message:[0] @AT@ 1712 @LENGTH@ 1
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.message(0).body().isNull() @AT@ 1697 @LENGTH@ 6
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@result.message(0).body().isNull() @AT@ 1722 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:template.sendBody("direct:start",null) @TO@ MethodDeclaration@@public, void, MethodName:testConvertNullBody, Exception,  @AT@ 1741 @LENGTH@ 40
------INS MethodInvocation@@template.sendBody("direct:start",null) @TO@ ExpressionStatement@@MethodInvocation:template.sendBody("direct:start",null) @AT@ 1741 @LENGTH@ 39
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:start",null) @AT@ 1741 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBody:["direct:start", null] @TO@ MethodInvocation@@template.sendBody("direct:start",null) @AT@ 1750 @LENGTH@ 30
------------INS StringLiteral@@"direct:start" @TO@ SimpleName@@MethodName:sendBody:["direct:start", null] @AT@ 1759 @LENGTH@ 14
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:sendBody:["direct:start", null] @AT@ 1775 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testConvertNullBody, Exception,  @AT@ 1791 @LENGTH@ 31
------INS MethodInvocation@@MethodName:assertMockEndpointsSatisfied:[] @TO@ ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @AT@ 1791 @LENGTH@ 30


UPD ThrowStatement@@ClassInstanceCreation:new StartException("Failed to start remote SM connection",e) @TO@ ClassInstanceCreation:new StartException("Failed to start remote Server Manager connection",e) @AT@ 2943 @LENGTH@ 68
---UPD ClassInstanceCreation@@StartException["Failed to start remote SM connection", e] @TO@ StartException["Failed to start remote Server Manager connection", e] @AT@ 2949 @LENGTH@ 61
------UPD StringLiteral@@"Failed to start remote SM connection" @TO@ "Failed to start remote Server Manager connection" @AT@ 2968 @LENGTH@ 38


DEL IfStatement@@if (shutdown.get()) return; @AT@ 8816 @LENGTH@ 39
---DEL MethodInvocation@@shutdown.get() @AT@ 8820 @LENGTH@ 14
------DEL SimpleName@@Name:shutdown @AT@ 8820 @LENGTH@ 8
------DEL SimpleName@@MethodName:get:[] @AT@ 8829 @LENGTH@ 5
---DEL Block@@ThenBody:return; @AT@ 8848 @LENGTH@ 7
------DEL ReturnStatement@@ @AT@ 8848 @LENGTH@ 7


UPD VariableDeclarationStatement@@Set set=(Set)obj; @TO@ Set<?> set=(Set<?>)obj; @AT@ 5982 @LENGTH@ 20
---INS ParameterizedType@@Set<?> @TO@ VariableDeclarationStatement@@Set set=(Set)obj; @AT@ 5947 @LENGTH@ 6
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<?> @AT@ 5947 @LENGTH@ 3
------INS WildcardType@@? @TO@ ParameterizedType@@Set<?> @AT@ 5951 @LENGTH@ 1
---DEL SimpleType@@Set @AT@ 5982 @LENGTH@ 3
---UPD VariableDeclarationFragment@@set=(Set)obj @TO@ set=(Set<?>)obj @AT@ 5986 @LENGTH@ 15
------UPD CastExpression@@(Set)obj @TO@ (Set<?>)obj @AT@ 5992 @LENGTH@ 9
---------INS ParameterizedType@@Set<?> @TO@ CastExpression@@(Set)obj @AT@ 5961 @LENGTH@ 6
------------INS SimpleType@@Set @TO@ ParameterizedType@@Set<?> @AT@ 5961 @LENGTH@ 3
------------INS WildcardType@@? @TO@ ParameterizedType@@Set<?> @AT@ 5965 @LENGTH@ 1
---------DEL SimpleType@@Set @AT@ 5993 @LENGTH@ 3


DEL MethodDeclaration@@protected, boolean, MethodName:useJmx,  @AT@ 1630 @LENGTH@ 55
---DEL Modifier@@protected @AT@ 1630 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1640 @LENGTH@ 7
---DEL SimpleName@@MethodName:useJmx @AT@ 1648 @LENGTH@ 6
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1667 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1674 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("seda:parallel?size=1000&concurrentConsumers=5").streamCaching().split(XPathBuilder.xpath("//person/city")).to("mock:result") @TO@ MethodInvocation:from("seda:parallel?concurrentConsumers=5").streamCaching().split(XPathBuilder.xpath("//person/city")).to("mock:result") @AT@ 2165 @LENGTH@ 131
---UPD MethodInvocation@@from("seda:parallel?size=1000&concurrentConsumers=5").streamCaching().split(XPathBuilder.xpath("//person/city")).to("mock:result") @TO@ from("seda:parallel?concurrentConsumers=5").streamCaching().split(XPathBuilder.xpath("//person/city")).to("mock:result") @AT@ 2165 @LENGTH@ 130
------UPD MethodInvocation@@MethodName:from:["seda:parallel?size=1000&concurrentConsumers=5"] @TO@ MethodName:from:["seda:parallel?concurrentConsumers=5"] @AT@ 2165 @LENGTH@ 53
---------UPD StringLiteral@@"seda:parallel?size=1000&concurrentConsumers=5" @TO@ "seda:parallel?concurrentConsumers=5" @AT@ 2170 @LENGTH@ 47


INS MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @TO@ TypeDeclaration@@[public]CamelContextFactoryBeanTest, XmlConfigTestSupport @AT@ 1799 @LENGTH@ 160
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @AT@ 1799 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @AT@ 1809 @LENGTH@ 4
---INS SimpleName@@MethodName:tearDown @TO@ MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @AT@ 1814 @LENGTH@ 8
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @AT@ 1832 @LENGTH@ 9
---INS ExpressionStatement@@SuperMethodInvocation:super.tearDown() @TO@ MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @AT@ 1852 @LENGTH@ 17
------INS SuperMethodInvocation@@super.tearDown() @TO@ ExpressionStatement@@SuperMethodInvocation:super.tearDown() @AT@ 1852 @LENGTH@ 16
---------INS SimpleName@@MethodName:tearDown:[] @TO@ SuperMethodInvocation@@super.tearDown() @AT@ 1858 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:System.clearProperty(JmxSystemPropertyKeys.DISABLED) @TO@ MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @AT@ 1900 @LENGTH@ 53
------INS MethodInvocation@@System.clearProperty(JmxSystemPropertyKeys.DISABLED) @TO@ ExpressionStatement@@MethodInvocation:System.clearProperty(JmxSystemPropertyKeys.DISABLED) @AT@ 1900 @LENGTH@ 52
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.clearProperty(JmxSystemPropertyKeys.DISABLED) @AT@ 1900 @LENGTH@ 6
---------INS SimpleName@@MethodName:clearProperty:[JmxSystemPropertyKeys.DISABLED] @TO@ MethodInvocation@@System.clearProperty(JmxSystemPropertyKeys.DISABLED) @AT@ 1907 @LENGTH@ 45
------------INS QualifiedName@@JmxSystemPropertyKeys.DISABLED @TO@ SimpleName@@MethodName:clearProperty:[JmxSystemPropertyKeys.DISABLED] @AT@ 1921 @LENGTH@ 30
---------------INS SimpleName@@JmxSystemPropertyKeys @TO@ QualifiedName@@JmxSystemPropertyKeys.DISABLED @AT@ 1921 @LENGTH@ 21
---------------INS SimpleName@@DISABLED @TO@ QualifiedName@@JmxSystemPropertyKeys.DISABLED @AT@ 1943 @LENGTH@ 8


INS MethodDeclaration@@public, int, MethodName:compareTo, Reference o,  @TO@ TypeDeclaration@@[public]Reference, [Serializable] @AT@ 2047 @LENGTH@ 94
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:compareTo, Reference o,  @AT@ 2047 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:compareTo, Reference o,  @AT@ 2054 @LENGTH@ 3
---INS SimpleName@@MethodName:compareTo @TO@ MethodDeclaration@@public, int, MethodName:compareTo, Reference o,  @AT@ 2058 @LENGTH@ 9
---INS SingleVariableDeclaration@@Reference o @TO@ MethodDeclaration@@public, int, MethodName:compareTo, Reference o,  @AT@ 2068 @LENGTH@ 11
------INS SimpleType@@Reference @TO@ SingleVariableDeclaration@@Reference o @AT@ 2068 @LENGTH@ 9
------INS SimpleName@@o @TO@ SingleVariableDeclaration@@Reference o @AT@ 2078 @LENGTH@ 1
---INS ReturnStatement@@MethodInvocation:sequenceValue.compareTo(o.getSequenceValue()) @TO@ MethodDeclaration@@public, int, MethodName:compareTo, Reference o,  @AT@ 2085 @LENGTH@ 53
------INS MethodInvocation@@sequenceValue.compareTo(o.getSequenceValue()) @TO@ ReturnStatement@@MethodInvocation:sequenceValue.compareTo(o.getSequenceValue()) @AT@ 2092 @LENGTH@ 45
---------INS SimpleName@@Name:sequenceValue @TO@ MethodInvocation@@sequenceValue.compareTo(o.getSequenceValue()) @AT@ 2092 @LENGTH@ 13
---------INS SimpleName@@MethodName:compareTo:[o.getSequenceValue()] @TO@ MethodInvocation@@sequenceValue.compareTo(o.getSequenceValue()) @AT@ 2106 @LENGTH@ 31
------------INS MethodInvocation@@o.getSequenceValue() @TO@ SimpleName@@MethodName:compareTo:[o.getSequenceValue()] @AT@ 2116 @LENGTH@ 20
---------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.getSequenceValue() @AT@ 2116 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getSequenceValue:[] @TO@ MethodInvocation@@o.getSequenceValue() @AT@ 2118 @LENGTH@ 18


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @Ignore("TODO: fix me"), public]XsltRouteTest, OSGiIntegrationTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), public]XsltRouteTest, OSGiIntegrationTestSupport @AT@ 1148 @LENGTH@ 953
---DEL SingleMemberAnnotation@@@Ignore("TODO: fix me") @AT@ 1181 @LENGTH@ 23


UPD Block@@ThenBody:{  URI remainingUri=URISupport.createRemainingURI(new URI(remaining),CastUtils.cast(parameters));  feedUri=remainingUri.toString();} @TO@ ThenBody:{  Map<Object,Object> options=new LinkedHashMap<Object,Object>(parameters);  String query=URISupport.createQueryString(options);  feedUri=remaining + "?" + query;} @AT@ 2029 @LENGTH@ 168
---INS VariableDeclarationStatement@@Map<Object,Object> options=new LinkedHashMap<Object,Object>(parameters); @TO@ Block@@ThenBody:{  URI remainingUri=URISupport.createRemainingURI(new URI(remaining),CastUtils.cast(parameters));  feedUri=remainingUri.toString();} @AT@ 2014 @LENGTH@ 76
------INS ParameterizedType@@Map<Object,Object> @TO@ VariableDeclarationStatement@@Map<Object,Object> options=new LinkedHashMap<Object,Object>(parameters); @AT@ 2014 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<Object,Object> @AT@ 2014 @LENGTH@ 3
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<Object,Object> @AT@ 2018 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<Object,Object> @AT@ 2026 @LENGTH@ 6
------INS VariableDeclarationFragment@@options=new LinkedHashMap<Object,Object>(parameters) @TO@ VariableDeclarationStatement@@Map<Object,Object> options=new LinkedHashMap<Object,Object>(parameters); @AT@ 2034 @LENGTH@ 55
---------INS ClassInstanceCreation@@LinkedHashMap<Object,Object>[parameters] @TO@ VariableDeclarationFragment@@options=new LinkedHashMap<Object,Object>(parameters) @AT@ 2044 @LENGTH@ 45
------------INS ParameterizedType@@LinkedHashMap<Object,Object> @TO@ ClassInstanceCreation@@LinkedHashMap<Object,Object>[parameters] @AT@ 2048 @LENGTH@ 29
---------------INS SimpleType@@LinkedHashMap @TO@ ParameterizedType@@LinkedHashMap<Object,Object> @AT@ 2048 @LENGTH@ 13
---------------INS SimpleType@@Object @TO@ ParameterizedType@@LinkedHashMap<Object,Object> @AT@ 2062 @LENGTH@ 6
---------------INS SimpleType@@Object @TO@ ParameterizedType@@LinkedHashMap<Object,Object> @AT@ 2070 @LENGTH@ 6
------------MOV New@@new @TO@ ClassInstanceCreation@@LinkedHashMap<Object,Object>[parameters] @AT@ 2092 @LENGTH@ 3
------------MOV SimpleName@@remaining @TO@ ClassInstanceCreation@@LinkedHashMap<Object,Object>[parameters] @AT@ 2100 @LENGTH@ 9
---------MOV SimpleName@@remainingUri @TO@ VariableDeclarationFragment@@options=new LinkedHashMap<Object,Object>(parameters) @AT@ 2047 @LENGTH@ 12
---DEL VariableDeclarationStatement@@URI remainingUri=URISupport.createRemainingURI(new URI(remaining),CastUtils.cast(parameters)); @AT@ 2043 @LENGTH@ 97
------DEL SimpleType@@URI @AT@ 2043 @LENGTH@ 3
------DEL VariableDeclarationFragment@@remainingUri=URISupport.createRemainingURI(new URI(remaining),CastUtils.cast(parameters)) @AT@ 2047 @LENGTH@ 92
---------DEL MethodInvocation@@URISupport.createRemainingURI(new URI(remaining),CastUtils.cast(parameters)) @AT@ 2062 @LENGTH@ 77
------------DEL SimpleName@@Name:URISupport @AT@ 2062 @LENGTH@ 10
------------DEL SimpleName@@MethodName:createRemainingURI:[new URI(remaining), CastUtils.cast(parameters)] @AT@ 2073 @LENGTH@ 66
---------------DEL ClassInstanceCreation@@URI[remaining] @AT@ 2092 @LENGTH@ 18
------------------DEL SimpleType@@URI @AT@ 2096 @LENGTH@ 3
---------------DEL MethodInvocation@@CastUtils.cast(parameters) @AT@ 2112 @LENGTH@ 26
---INS VariableDeclarationStatement@@String query=URISupport.createQueryString(options); @TO@ Block@@ThenBody:{  URI remainingUri=URISupport.createRemainingURI(new URI(remaining),CastUtils.cast(parameters));  feedUri=remainingUri.toString();} @AT@ 2103 @LENGTH@ 53
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String query=URISupport.createQueryString(options); @AT@ 2103 @LENGTH@ 6
------INS VariableDeclarationFragment@@query=URISupport.createQueryString(options) @TO@ VariableDeclarationStatement@@String query=URISupport.createQueryString(options); @AT@ 2110 @LENGTH@ 45
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=URISupport.createQueryString(options) @AT@ 2110 @LENGTH@ 5
---------INS MethodInvocation@@URISupport.createQueryString(options) @TO@ VariableDeclarationFragment@@query=URISupport.createQueryString(options) @AT@ 2118 @LENGTH@ 37
------------MOV SimpleName@@Name:CastUtils @TO@ MethodInvocation@@URISupport.createQueryString(options) @AT@ 2112 @LENGTH@ 9
------------MOV SimpleName@@MethodName:cast:[parameters] @TO@ MethodInvocation@@URISupport.createQueryString(options) @AT@ 2122 @LENGTH@ 16
---UPD ExpressionStatement@@Assignment:feedUri=remainingUri.toString() @TO@ Assignment:feedUri=remaining + "?" + query @AT@ 2153 @LENGTH@ 34
------UPD Assignment@@feedUri=remainingUri.toString() @TO@ feedUri=remaining + "?" + query @AT@ 2153 @LENGTH@ 33
---------DEL MethodInvocation@@remainingUri.toString() @AT@ 2163 @LENGTH@ 23
------------DEL SimpleName@@Name:remainingUri @AT@ 2163 @LENGTH@ 12
------------DEL SimpleName@@MethodName:toString:[] @AT@ 2176 @LENGTH@ 10
---------INS InfixExpression@@remaining + "?" + query @TO@ Assignment@@feedUri=remainingUri.toString() @AT@ 2179 @LENGTH@ 23
------------INS SimpleName@@remaining @TO@ InfixExpression@@remaining + "?" + query @AT@ 2179 @LENGTH@ 9
------------INS Operator@@+ @TO@ InfixExpression@@remaining + "?" + query @AT@ 2188 @LENGTH@ 1
------------INS StringLiteral@@"?" @TO@ InfixExpression@@remaining + "?" + query @AT@ 2191 @LENGTH@ 3
------------INS SimpleName@@query @TO@ InfixExpression@@remaining + "?" + query @AT@ 2197 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testSftpSimpleTwoSubPathProduce, Exception,  @TO@ TypeDeclaration@@[@Ignore("Disabled due CI servers fails on full build running with these tests"), public]SftpSimpleProduceTest, SftpServerTestSupport @AT@ 2339 @LENGTH@ 578
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSftpSimpleTwoSubPathProduce, Exception,  @AT@ 2339 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSftpSimpleTwoSubPathProduce, Exception,  @AT@ 2346 @LENGTH@ 4
---INS SimpleName@@MethodName:testSftpSimpleTwoSubPathProduce @TO@ MethodDeclaration@@public, void, MethodName:testSftpSimpleTwoSubPathProduce, Exception,  @AT@ 2351 @LENGTH@ 31
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testSftpSimpleTwoSubPathProduce, Exception,  @AT@ 2392 @LENGTH@ 9
---INS IfStatement@@if (!canTest()) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:testSftpSimpleTwoSubPathProduce, Exception,  @AT@ 2412 @LENGTH@ 47
------INS PrefixExpression@@!canTest() @TO@ IfStatement@@if (!canTest()) {  return;} @AT@ 2416 @LENGTH@ 10
---------INS Operator@@! @TO@ PrefixExpression@@!canTest() @AT@ 2416 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:canTest:[] @TO@ PrefixExpression@@!canTest() @AT@ 2417 @LENGTH@ 9
------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (!canTest()) {  return;} @AT@ 2428 @LENGTH@ 31
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 2442 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin","Farewell World",Exchange.FILE_NAME,"farewell.txt") @TO@ MethodDeclaration@@public, void, MethodName:testSftpSimpleTwoSubPathProduce, Exception,  @AT@ 2469 @LENGTH@ 184
------INS MethodInvocation@@template.sendBodyAndHeader("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin","Farewell World",Exchange.FILE_NAME,"farewell.txt") @TO@ ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin","Farewell World",Exchange.FILE_NAME,"farewell.txt") @AT@ 2469 @LENGTH@ 183
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBodyAndHeader("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin","Farewell World",Exchange.FILE_NAME,"farewell.txt") @AT@ 2469 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBodyAndHeader:["sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin", "Farewell World", Exchange.FILE_NAME, "farewell.txt"] @TO@ MethodInvocation@@template.sendBodyAndHeader("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin","Farewell World",Exchange.FILE_NAME,"farewell.txt") @AT@ 2478 @LENGTH@ 174
------------INS InfixExpression@@"sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin", "Farewell World", Exchange.FILE_NAME, "farewell.txt"] @AT@ 2496 @LENGTH@ 101
---------------INS StringLiteral@@"sftp://localhost:" @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin" @AT@ 2496 @LENGTH@ 19
---------------INS Operator@@+ @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin" @AT@ 2515 @LENGTH@ 1
---------------INS MethodInvocation@@MethodName:getPort:[] @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin" @AT@ 2518 @LENGTH@ 9
---------------INS StringLiteral@@"/" @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin" @AT@ 2530 @LENGTH@ 3
---------------INS SimpleName@@FTP_ROOT_DIR @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin" @AT@ 2536 @LENGTH@ 12
---------------INS StringLiteral@@"/mysub/myother?username=admin&password=admin" @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin" @AT@ 2551 @LENGTH@ 46
------------INS StringLiteral@@"Farewell World" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin", "Farewell World", Exchange.FILE_NAME, "farewell.txt"] @AT@ 2599 @LENGTH@ 16
------------INS QualifiedName@@Exchange.FILE_NAME @TO@ SimpleName@@MethodName:sendBodyAndHeader:["sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin", "Farewell World", Exchange.FILE_NAME, "farewell.txt"] @AT@ 2617 @LENGTH@ 18
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.FILE_NAME @AT@ 2617 @LENGTH@ 8
---------------INS SimpleName@@FILE_NAME @TO@ QualifiedName@@Exchange.FILE_NAME @AT@ 2626 @LENGTH@ 9
------------INS StringLiteral@@"farewell.txt" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "/mysub/myother?username=admin&password=admin", "Farewell World", Exchange.FILE_NAME, "farewell.txt"] @AT@ 2637 @LENGTH@ 14
---INS VariableDeclarationStatement@@File file=new File(FTP_ROOT_DIR + "/mysub/myother/farewell.txt").getAbsoluteFile(); @TO@ MethodDeclaration@@public, void, MethodName:testSftpSimpleTwoSubPathProduce, Exception,  @AT@ 2663 @LENGTH@ 85
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File file=new File(FTP_ROOT_DIR + "/mysub/myother/farewell.txt").getAbsoluteFile(); @AT@ 2663 @LENGTH@ 4
------INS VariableDeclarationFragment@@file=new File(FTP_ROOT_DIR + "/mysub/myother/farewell.txt").getAbsoluteFile() @TO@ VariableDeclarationStatement@@File file=new File(FTP_ROOT_DIR + "/mysub/myother/farewell.txt").getAbsoluteFile(); @AT@ 2668 @LENGTH@ 79
---------INS SimpleName@@file @TO@ VariableDeclarationFragment@@file=new File(FTP_ROOT_DIR + "/mysub/myother/farewell.txt").getAbsoluteFile() @AT@ 2668 @LENGTH@ 4
---------INS MethodInvocation@@new File(FTP_ROOT_DIR + "/mysub/myother/farewell.txt").getAbsoluteFile() @TO@ VariableDeclarationFragment@@file=new File(FTP_ROOT_DIR + "/mysub/myother/farewell.txt").getAbsoluteFile() @AT@ 2675 @LENGTH@ 72
------------INS ClassInstanceCreation@@File[FTP_ROOT_DIR + "/mysub/myother/farewell.txt"] @TO@ MethodInvocation@@new File(FTP_ROOT_DIR + "/mysub/myother/farewell.txt").getAbsoluteFile() @AT@ 2675 @LENGTH@ 54
---------------INS New@@new @TO@ ClassInstanceCreation@@File[FTP_ROOT_DIR + "/mysub/myother/farewell.txt"] @AT@ 2675 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[FTP_ROOT_DIR + "/mysub/myother/farewell.txt"] @AT@ 2679 @LENGTH@ 4
---------------INS InfixExpression@@FTP_ROOT_DIR + "/mysub/myother/farewell.txt" @TO@ ClassInstanceCreation@@File[FTP_ROOT_DIR + "/mysub/myother/farewell.txt"] @AT@ 2684 @LENGTH@ 44
------------------INS SimpleName@@FTP_ROOT_DIR @TO@ InfixExpression@@FTP_ROOT_DIR + "/mysub/myother/farewell.txt" @AT@ 2684 @LENGTH@ 12
------------------INS Operator@@+ @TO@ InfixExpression@@FTP_ROOT_DIR + "/mysub/myother/farewell.txt" @AT@ 2696 @LENGTH@ 1
------------------INS StringLiteral@@"/mysub/myother/farewell.txt" @TO@ InfixExpression@@FTP_ROOT_DIR + "/mysub/myother/farewell.txt" @AT@ 2699 @LENGTH@ 29
------------INS SimpleName@@MethodName:getAbsoluteFile:[] @TO@ MethodInvocation@@new File(FTP_ROOT_DIR + "/mysub/myother/farewell.txt").getAbsoluteFile() @AT@ 2730 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertTrue("File should exist: " + file,file.exists()) @TO@ MethodDeclaration@@public, void, MethodName:testSftpSimpleTwoSubPathProduce, Exception,  @AT@ 2757 @LENGTH@ 56
------INS MethodInvocation@@assertTrue("File should exist: " + file,file.exists()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("File should exist: " + file,file.exists()) @AT@ 2757 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertTrue:["File should exist: " + file, file.exists()] @TO@ MethodInvocation@@assertTrue("File should exist: " + file,file.exists()) @AT@ 2757 @LENGTH@ 55
------------INS InfixExpression@@"File should exist: " + file @TO@ SimpleName@@MethodName:assertTrue:["File should exist: " + file, file.exists()] @AT@ 2768 @LENGTH@ 28
---------------INS StringLiteral@@"File should exist: " @TO@ InfixExpression@@"File should exist: " + file @AT@ 2768 @LENGTH@ 21
---------------INS Operator@@+ @TO@ InfixExpression@@"File should exist: " + file @AT@ 2789 @LENGTH@ 1
---------------INS SimpleName@@file @TO@ InfixExpression@@"File should exist: " + file @AT@ 2792 @LENGTH@ 4
------------INS MethodInvocation@@file.exists() @TO@ SimpleName@@MethodName:assertTrue:["File should exist: " + file, file.exists()] @AT@ 2798 @LENGTH@ 13
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.exists() @AT@ 2798 @LENGTH@ 4
---------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@file.exists() @AT@ 2803 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals("Farewell World",context.getTypeConverter().convertTo(String.class,file)) @TO@ MethodDeclaration@@public, void, MethodName:testSftpSimpleTwoSubPathProduce, Exception,  @AT@ 2822 @LENGTH@ 89
------INS MethodInvocation@@assertEquals("Farewell World",context.getTypeConverter().convertTo(String.class,file)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Farewell World",context.getTypeConverter().convertTo(String.class,file)) @AT@ 2822 @LENGTH@ 88
---------INS SimpleName@@MethodName:assertEquals:["Farewell World", context.getTypeConverter().convertTo(String.class,file)] @TO@ MethodInvocation@@assertEquals("Farewell World",context.getTypeConverter().convertTo(String.class,file)) @AT@ 2822 @LENGTH@ 88
------------INS StringLiteral@@"Farewell World" @TO@ SimpleName@@MethodName:assertEquals:["Farewell World", context.getTypeConverter().convertTo(String.class,file)] @AT@ 2835 @LENGTH@ 16
------------INS MethodInvocation@@context.getTypeConverter().convertTo(String.class,file) @TO@ SimpleName@@MethodName:assertEquals:["Farewell World", context.getTypeConverter().convertTo(String.class,file)] @AT@ 2853 @LENGTH@ 56
---------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@context.getTypeConverter().convertTo(String.class,file) @AT@ 2853 @LENGTH@ 26
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getTypeConverter().convertTo(String.class,file) @AT@ 2853 @LENGTH@ 7
---------------INS SimpleName@@MethodName:convertTo:[String.class, file] @TO@ MethodInvocation@@context.getTypeConverter().convertTo(String.class,file) @AT@ 2880 @LENGTH@ 29
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:convertTo:[String.class, file] @AT@ 2890 @LENGTH@ 12
------------------INS SimpleName@@file @TO@ SimpleName@@MethodName:convertTo:[String.class, file] @AT@ 2904 @LENGTH@ 4


INS IfStatement@@if (in.getBody() != null) {  Object value=in.getMandatoryBody(type);  if (exchange.getPattern().isOutCapable()) {    Message out=exchange.getOut();    out.copyFrom(in);    out.setBody(value);  } else {    in.setBody(value);  }} @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 1905 @LENGTH@ 337
---INS InfixExpression@@in.getBody() != null @TO@ IfStatement@@if (in.getBody() != null) {  Object value=in.getMandatoryBody(type);  if (exchange.getPattern().isOutCapable()) {    Message out=exchange.getOut();    out.copyFrom(in);    out.setBody(value);  } else {    in.setBody(value);  }} @AT@ 1909 @LENGTH@ 20
------INS MethodInvocation@@in.getBody() @TO@ InfixExpression@@in.getBody() != null @AT@ 1909 @LENGTH@ 12
---------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.getBody() @AT@ 1909 @LENGTH@ 2
---------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@in.getBody() @AT@ 1912 @LENGTH@ 9
------INS Operator@@!= @TO@ InfixExpression@@in.getBody() != null @AT@ 1921 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@in.getBody() != null @AT@ 1925 @LENGTH@ 4
---INS Block@@ThenBody:{  Object value=in.getMandatoryBody(type);  if (exchange.getPattern().isOutCapable()) {    Message out=exchange.getOut();    out.copyFrom(in);    out.setBody(value);  } else {    in.setBody(value);  }} @TO@ IfStatement@@if (in.getBody() != null) {  Object value=in.getMandatoryBody(type);  if (exchange.getPattern().isOutCapable()) {    Message out=exchange.getOut();    out.copyFrom(in);    out.setBody(value);  } else {    in.setBody(value);  }} @AT@ 1931 @LENGTH@ 311
------MOV VariableDeclarationStatement@@Object value=in.getMandatoryBody(type); @TO@ Block@@ThenBody:{  Object value=in.getMandatoryBody(type);  if (exchange.getPattern().isOutCapable()) {    Message out=exchange.getOut();    out.copyFrom(in);    out.setBody(value);  } else {    in.setBody(value);  }} @AT@ 1863 @LENGTH@ 41
------MOV IfStatement@@if (exchange.getPattern().isOutCapable()) {  Message out=exchange.getOut();  out.copyFrom(in);  out.setBody(value);} else {  in.setBody(value);} @TO@ Block@@ThenBody:{  Object value=in.getMandatoryBody(type);  if (exchange.getPattern().isOutCapable()) {    Message out=exchange.getOut();    out.copyFrom(in);    out.setBody(value);  } else {    in.setBody(value);  }} @AT@ 1914 @LENGTH@ 208


UPD MethodDeclaration@@Class, MethodName:toClass, String classId,  @TO@ Class<?>, MethodName:toClass, String classId,  @AT@ 960 @LENGTH@ 24
---DEL SimpleType@@Class @AT@ 954 @LENGTH@ 5
---INS ParameterizedType@@Class<?> @TO@ MethodDeclaration@@Class, MethodName:toClass, String classId,  @AT@ 957 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 957 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 963 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build(),firstRule) @TO@ MethodDeclaration@@private, void, MethodName:updateUrlRewriteXml,  @AT@ 13906 @LENGTH@ 334
---INS MethodInvocation@@root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build(),firstRule) @TO@ ExpressionStatement@@MethodInvocation:root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build(),firstRule) @AT@ 13906 @LENGTH@ 333
------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build(),firstRule) @AT@ 13906 @LENGTH@ 4
------INS SimpleName@@MethodName:insertBefore:[new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build(), firstRule] @TO@ MethodInvocation@@root.insertBefore(new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build(),firstRule) @AT@ 13911 @LENGTH@ 328
---------INS MethodInvocation@@new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build() @TO@ SimpleName@@MethodName:insertBefore:[new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build(), firstRule] @AT@ 13924 @LENGTH@ 303
------------INS MethodInvocation@@MethodName:addChild:[new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()] @TO@ MethodInvocation@@new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build() @AT@ 13924 @LENGTH@ 291
---------------INS MethodInvocation@@new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build() @TO@ MethodInvocation@@MethodName:addChild:[new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()] @AT@ 14092 @LENGTH@ 122
------------------INS MethodInvocation@@MethodName:setText:["/ApplicationMobileScaffold.html"] @TO@ MethodInvocation@@new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build() @AT@ 14092 @LENGTH@ 114
---------------------INS StringLiteral@@"/ApplicationMobileScaffold.html" @TO@ MethodInvocation@@MethodName:setText:["/ApplicationMobileScaffold.html"] @AT@ 14172 @LENGTH@ 33
------------------INS MethodInvocation@@MethodName:addAttribute:["last", "true"] @TO@ MethodInvocation@@new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build() @AT@ 14092 @LENGTH@ 71
---------------------INS StringLiteral@@"last" @TO@ MethodInvocation@@MethodName:addAttribute:["last", "true"] @AT@ 14148 @LENGTH@ 6
---------------------INS StringLiteral@@"true" @TO@ MethodInvocation@@MethodName:addAttribute:["last", "true"] @AT@ 14156 @LENGTH@ 6
------------------INS ClassInstanceCreation@@XmlElementBuilder["to", urlRewriteDoc] @TO@ MethodInvocation@@new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build() @AT@ 14092 @LENGTH@ 42
---------------------INS New@@new @TO@ ClassInstanceCreation@@XmlElementBuilder["to", urlRewriteDoc] @AT@ 14092 @LENGTH@ 3
---------------------INS SimpleType@@XmlElementBuilder @TO@ ClassInstanceCreation@@XmlElementBuilder["to", urlRewriteDoc] @AT@ 14096 @LENGTH@ 17
---------------------INS StringLiteral@@"to" @TO@ ClassInstanceCreation@@XmlElementBuilder["to", urlRewriteDoc] @AT@ 14114 @LENGTH@ 4
---------------------INS SimpleName@@urlRewriteDoc @TO@ ClassInstanceCreation@@XmlElementBuilder["to", urlRewriteDoc] @AT@ 14120 @LENGTH@ 13
------------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build() @AT@ 14207 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:addChild:[new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()] @TO@ MethodInvocation@@new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build() @AT@ 13924 @LENGTH@ 154
---------------INS MethodInvocation@@new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build() @TO@ MethodInvocation@@MethodName:addChild:[new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()] @AT@ 13982 @LENGTH@ 95
------------------INS MethodInvocation@@MethodName:setText:["/ApplicationMobileScaffold.html"] @TO@ MethodInvocation@@new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build() @AT@ 13982 @LENGTH@ 87
---------------------INS StringLiteral@@"/ApplicationMobileScaffold.html" @TO@ MethodInvocation@@MethodName:setText:["/ApplicationMobileScaffold.html"] @AT@ 14035 @LENGTH@ 33
------------------INS ClassInstanceCreation@@XmlElementBuilder["from", urlRewriteDoc] @TO@ MethodInvocation@@new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build() @AT@ 13982 @LENGTH@ 44
---------------------INS New@@new @TO@ ClassInstanceCreation@@XmlElementBuilder["from", urlRewriteDoc] @AT@ 13982 @LENGTH@ 3
---------------------INS SimpleType@@XmlElementBuilder @TO@ ClassInstanceCreation@@XmlElementBuilder["from", urlRewriteDoc] @AT@ 13986 @LENGTH@ 17
---------------------INS StringLiteral@@"from" @TO@ ClassInstanceCreation@@XmlElementBuilder["from", urlRewriteDoc] @AT@ 14004 @LENGTH@ 6
---------------------INS SimpleName@@urlRewriteDoc @TO@ ClassInstanceCreation@@XmlElementBuilder["from", urlRewriteDoc] @AT@ 14012 @LENGTH@ 13
------------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build() @AT@ 14070 @LENGTH@ 7
------------INS ClassInstanceCreation@@XmlElementBuilder["rule", urlRewriteDoc] @TO@ MethodInvocation@@new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build() @AT@ 13924 @LENGTH@ 44
---------------INS New@@new @TO@ ClassInstanceCreation@@XmlElementBuilder["rule", urlRewriteDoc] @AT@ 13924 @LENGTH@ 3
---------------INS SimpleType@@XmlElementBuilder @TO@ ClassInstanceCreation@@XmlElementBuilder["rule", urlRewriteDoc] @AT@ 13928 @LENGTH@ 17
---------------INS StringLiteral@@"rule" @TO@ ClassInstanceCreation@@XmlElementBuilder["rule", urlRewriteDoc] @AT@ 13946 @LENGTH@ 6
---------------INS SimpleName@@urlRewriteDoc @TO@ ClassInstanceCreation@@XmlElementBuilder["rule", urlRewriteDoc] @AT@ 13954 @LENGTH@ 13
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build() @AT@ 14220 @LENGTH@ 7
---------INS SimpleName@@firstRule @TO@ SimpleName@@MethodName:insertBefore:[new XmlElementBuilder("rule",urlRewriteDoc).addChild(new XmlElementBuilder("from",urlRewriteDoc).setText("/ApplicationMobileScaffold.html").build()).addChild(new XmlElementBuilder("to",urlRewriteDoc).addAttribute("last","true").setText("/ApplicationMobileScaffold.html").build()).build(), firstRule] @AT@ 14229 @LENGTH@ 9


UPD VariableDeclarationStatement@@char[] inChars, outChars, resChars; @TO@ char[] inChars, outChars; @AT@ 1049 @LENGTH@ 35
---DEL VariableDeclarationFragment@@resChars @AT@ 1075 @LENGTH@ 8
------DEL SimpleName@@resChars @AT@ 1075 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals("FileAlterationObserver[file='\\foo', listeners=0]",observer.toString()) @TO@ MethodInvocation:assertEquals("FileAlterationObserver[file='" + file.getPath() + "', listeners=0]",observer.toString()) @AT@ 2777 @LENGTH@ 87
---UPD MethodInvocation@@assertEquals("FileAlterationObserver[file='\\foo', listeners=0]",observer.toString()) @TO@ assertEquals("FileAlterationObserver[file='" + file.getPath() + "', listeners=0]",observer.toString()) @AT@ 2777 @LENGTH@ 86
------UPD SimpleName@@MethodName:assertEquals:["FileAlterationObserver[file='\\foo', listeners=0]", observer.toString()] @TO@ MethodName:assertEquals:["FileAlterationObserver[file='" + file.getPath() + "', listeners=0]", observer.toString()] @AT@ 2777 @LENGTH@ 86
---------INS InfixExpression@@"FileAlterationObserver[file='" + file.getPath() + "', listeners=0]" @TO@ SimpleName@@MethodName:assertEquals:["FileAlterationObserver[file='\\foo', listeners=0]", observer.toString()] @AT@ 2790 @LENGTH@ 69
------------INS StringLiteral@@"FileAlterationObserver[file='" @TO@ InfixExpression@@"FileAlterationObserver[file='" + file.getPath() + "', listeners=0]" @AT@ 2790 @LENGTH@ 31
------------INS Operator@@+ @TO@ InfixExpression@@"FileAlterationObserver[file='" + file.getPath() + "', listeners=0]" @AT@ 2821 @LENGTH@ 1
------------INS MethodInvocation@@file.getPath() @TO@ InfixExpression@@"FileAlterationObserver[file='" + file.getPath() + "', listeners=0]" @AT@ 2824 @LENGTH@ 14
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getPath() @AT@ 2824 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@file.getPath() @AT@ 2829 @LENGTH@ 9
------------INS StringLiteral@@"', listeners=0]" @TO@ InfixExpression@@"FileAlterationObserver[file='" + file.getPath() + "', listeners=0]" @AT@ 2842 @LENGTH@ 17
---------DEL StringLiteral@@"FileAlterationObserver[file='\\foo', listeners=0]" @AT@ 2790 @LENGTH@ 51


UPD VariableDeclarationStatement@@final BatchServiceBuilder<Void> builder=batchBuilder.addService(ServiceName.JBOSS.append("as","server"),Service.NULL); @TO@ final BatchServiceBuilder<Void> builder=batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL); @AT@ 6218 @LENGTH@ 122
---UPD VariableDeclarationFragment@@builder=batchBuilder.addService(ServiceName.JBOSS.append("as","server"),Service.NULL) @TO@ AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server") @AT@ 6250 @LENGTH@ 89
---INS VariableDeclarationFragment@@builder=batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL) @TO@ VariableDeclarationStatement@@final BatchServiceBuilder<Void> builder=batchBuilder.addService(ServiceName.JBOSS.append("as","server"),Service.NULL); @AT@ 6407 @LENGTH@ 71
------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL) @AT@ 6407 @LENGTH@ 7
------INS MethodInvocation@@batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL) @TO@ VariableDeclarationFragment@@builder=batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL) @AT@ 6417 @LENGTH@ 61
---------INS SimpleName@@Name:batchBuilder @TO@ MethodInvocation@@batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL) @AT@ 6417 @LENGTH@ 12
---------INS SimpleName@@MethodName:addService:[AS_SERVER_SERVICE_NAME, Service.NULL] @TO@ MethodInvocation@@batchBuilder.addService(AS_SERVER_SERVICE_NAME,Service.NULL) @AT@ 6430 @LENGTH@ 48
------------INS SimpleName@@AS_SERVER_SERVICE_NAME @TO@ SimpleName@@MethodName:addService:[AS_SERVER_SERVICE_NAME, Service.NULL] @AT@ 6441 @LENGTH@ 22
------------INS QualifiedName@@Service.NULL @TO@ SimpleName@@MethodName:addService:[AS_SERVER_SERVICE_NAME, Service.NULL] @AT@ 6465 @LENGTH@ 12
---------------INS SimpleName@@Service @TO@ QualifiedName@@Service.NULL @AT@ 6465 @LENGTH@ 7
---------------INS SimpleName@@NULL @TO@ QualifiedName@@Service.NULL @AT@ 6473 @LENGTH@ 4


INS IfStatement@@if (leftValue.getClass().isInstance(rightValue)) {  return false;} @TO@ MethodDeclaration@@public, static, boolean, MethodName:typeCoerceEquals, TypeConverter converter, Object leftValue, Object rightValue,  @AT@ 3118 @LENGTH@ 86
---INS MethodInvocation@@leftValue.getClass().isInstance(rightValue) @TO@ IfStatement@@if (leftValue.getClass().isInstance(rightValue)) {  return false;} @AT@ 3122 @LENGTH@ 43
------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@leftValue.getClass().isInstance(rightValue) @AT@ 3122 @LENGTH@ 20
------INS SimpleName@@Name:leftValue @TO@ MethodInvocation@@leftValue.getClass().isInstance(rightValue) @AT@ 3122 @LENGTH@ 9
------INS SimpleName@@MethodName:isInstance:[rightValue] @TO@ MethodInvocation@@leftValue.getClass().isInstance(rightValue) @AT@ 3143 @LENGTH@ 22
---------INS SimpleName@@rightValue @TO@ SimpleName@@MethodName:isInstance:[rightValue] @AT@ 3154 @LENGTH@ 10
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (leftValue.getClass().isInstance(rightValue)) {  return false;} @AT@ 3167 @LENGTH@ 37
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 3181 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3188 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(4).redeliveryDelay(25)) @TO@ MethodInvocation:errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(4).redeliveryDelay(100)) @AT@ 2848 @LENGTH@ 88
---UPD MethodInvocation@@errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(4).redeliveryDelay(25)) @TO@ errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(4).redeliveryDelay(100)) @AT@ 2848 @LENGTH@ 87
------UPD SimpleName@@MethodName:errorHandler:[deadLetterChannel("mock:dead").maximumRedeliveries(4).redeliveryDelay(25)] @TO@ MethodName:errorHandler:[deadLetterChannel("mock:dead").maximumRedeliveries(4).redeliveryDelay(100)] @AT@ 2848 @LENGTH@ 87
---------UPD MethodInvocation@@deadLetterChannel("mock:dead").maximumRedeliveries(4).redeliveryDelay(25) @TO@ deadLetterChannel("mock:dead").maximumRedeliveries(4).redeliveryDelay(100) @AT@ 2861 @LENGTH@ 73
------------UPD SimpleName@@MethodName:redeliveryDelay:[25] @TO@ MethodName:redeliveryDelay:[100] @AT@ 2915 @LENGTH@ 19
---------------UPD NumberLiteral@@25 @TO@ 100 @AT@ 2931 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:jarFile=new JarFile(classContainer.getFile(),false) @TO@ Assignment:jarFile=new JarFile(new File(classContainer.toURI()),false) @AT@ 14884 @LENGTH@ 55
---UPD Assignment@@jarFile=new JarFile(classContainer.getFile(),false) @TO@ jarFile=new JarFile(new File(classContainer.toURI()),false) @AT@ 14884 @LENGTH@ 54
------UPD ClassInstanceCreation@@JarFile[classContainer.getFile(), false] @TO@ JarFile[new File(classContainer.toURI()), false] @AT@ 14894 @LENGTH@ 44
---------INS ClassInstanceCreation@@File[classContainer.toURI()] @TO@ ClassInstanceCreation@@JarFile[classContainer.getFile(), false] @AT@ 14906 @LENGTH@ 32
------------MOV MethodInvocation@@classContainer.getFile() @TO@ ClassInstanceCreation@@File[classContainer.toURI()] @AT@ 14906 @LENGTH@ 24
------------INS New@@new @TO@ ClassInstanceCreation@@File[classContainer.toURI()] @AT@ 14906 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[classContainer.toURI()] @AT@ 14910 @LENGTH@ 4
---------UPD MethodInvocation@@classContainer.getFile() @TO@ classContainer.toURI() @AT@ 14906 @LENGTH@ 24


INS ExpressionStatement@@MethodInvocation:thread.setName("Accept thread") @TO@ MethodDeclaration@@public, void, MethodName:start, IOException,  @AT@ 4356 @LENGTH@ 32
---INS MethodInvocation@@thread.setName("Accept thread") @TO@ ExpressionStatement@@MethodInvocation:thread.setName("Accept thread") @AT@ 4356 @LENGTH@ 31
------INS SimpleName@@Name:thread @TO@ MethodInvocation@@thread.setName("Accept thread") @AT@ 4356 @LENGTH@ 6
------INS SimpleName@@MethodName:setName:["Accept thread"] @TO@ MethodInvocation@@thread.setName("Accept thread") @AT@ 4363 @LENGTH@ 24
---------INS StringLiteral@@"Accept thread" @TO@ SimpleName@@MethodName:setName:["Accept thread"] @AT@ 4371 @LENGTH@ 15


UPD Block@@ThenBody:{  List<AnnotationAttributeValue<?>> temporalAttributes=new ArrayList<AnnotationAttributeValue<?>>();  temporalAttributes.add(new EnumAttributeValue(VALUE,new EnumDetails(new JavaType("javax.persistence.TemporalType"),new JavaSymbolName(column.getType().name()))));  annotations.add(new DefaultAnnotationMetadata(new JavaType("javax.persistence.Temporal"),temporalAttributes));  List<AnnotationAttributeValue<?>> dateTimeFormatattributes=new ArrayList<AnnotationAttributeValue<?>>();  dateTimeFormatattributes.add(new StringAttributeValue(new JavaSymbolName("style"),"S-"));  annotations.add(new DefaultAnnotationMetadata(new JavaType("org.springframework.format.annotation.DateTimeFormat"),dateTimeFormatattributes));} @TO@ ThenBody:{  List<AnnotationAttributeValue<?>> temporalAttributes=new ArrayList<AnnotationAttributeValue<?>>();  temporalAttributes.add(new EnumAttributeValue(VALUE,new EnumDetails(new JavaType("javax.persistence.TemporalType"),new JavaSymbolName(column.getType().name()))));  annotations.add(new DefaultAnnotationMetadata(new JavaType("javax.persistence.Temporal"),temporalAttributes));  List<AnnotationAttributeValue<?>> dateTimeFormatAttributes=new ArrayList<AnnotationAttributeValue<?>>();  dateTimeFormatAttributes.add(new StringAttributeValue(new JavaSymbolName("style"),"S-"));  annotations.add(new DefaultAnnotationMetadata(new JavaType("org.springframework.format.annotation.DateTimeFormat"),dateTimeFormatAttributes));} @AT@ 30450 @LENGTH@ 744
---UPD VariableDeclarationStatement@@List<AnnotationAttributeValue<?>> dateTimeFormatattributes=new ArrayList<AnnotationAttributeValue<?>>(); @TO@ List<AnnotationAttributeValue<?>> dateTimeFormatAttributes=new ArrayList<AnnotationAttributeValue<?>>(); @AT@ 30843 @LENGTH@ 106
------UPD VariableDeclarationFragment@@dateTimeFormatattributes=new ArrayList<AnnotationAttributeValue<?>>() @TO@ dateTimeFormatAttributes=new ArrayList<AnnotationAttributeValue<?>>() @AT@ 30877 @LENGTH@ 71
---------UPD SimpleName@@dateTimeFormatattributes @TO@ dateTimeFormatAttributes @AT@ 30877 @LENGTH@ 24
---UPD ExpressionStatement@@MethodInvocation:dateTimeFormatattributes.add(new StringAttributeValue(new JavaSymbolName("style"),"S-")) @TO@ MethodInvocation:dateTimeFormatAttributes.add(new StringAttributeValue(new JavaSymbolName("style"),"S-")) @AT@ 30953 @LENGTH@ 90
------UPD MethodInvocation@@dateTimeFormatattributes.add(new StringAttributeValue(new JavaSymbolName("style"),"S-")) @TO@ dateTimeFormatAttributes.add(new StringAttributeValue(new JavaSymbolName("style"),"S-")) @AT@ 30953 @LENGTH@ 89
---------UPD SimpleName@@Name:dateTimeFormatattributes @TO@ Name:dateTimeFormatAttributes @AT@ 30953 @LENGTH@ 24
---UPD ExpressionStatement@@MethodInvocation:annotations.add(new DefaultAnnotationMetadata(new JavaType("org.springframework.format.annotation.DateTimeFormat"),dateTimeFormatattributes)) @TO@ MethodInvocation:annotations.add(new DefaultAnnotationMetadata(new JavaType("org.springframework.format.annotation.DateTimeFormat"),dateTimeFormatAttributes)) @AT@ 31047 @LENGTH@ 143
------UPD MethodInvocation@@annotations.add(new DefaultAnnotationMetadata(new JavaType("org.springframework.format.annotation.DateTimeFormat"),dateTimeFormatattributes)) @TO@ annotations.add(new DefaultAnnotationMetadata(new JavaType("org.springframework.format.annotation.DateTimeFormat"),dateTimeFormatAttributes)) @AT@ 31047 @LENGTH@ 142
---------UPD SimpleName@@MethodName:add:[new DefaultAnnotationMetadata(new JavaType("org.springframework.format.annotation.DateTimeFormat"),dateTimeFormatattributes)] @TO@ MethodName:add:[new DefaultAnnotationMetadata(new JavaType("org.springframework.format.annotation.DateTimeFormat"),dateTimeFormatAttributes)] @AT@ 31059 @LENGTH@ 130
------------UPD ClassInstanceCreation@@DefaultAnnotationMetadata[new JavaType("org.springframework.format.annotation.DateTimeFormat"), dateTimeFormatattributes] @TO@ DefaultAnnotationMetadata[new JavaType("org.springframework.format.annotation.DateTimeFormat"), dateTimeFormatAttributes] @AT@ 31063 @LENGTH@ 125
---------------UPD SimpleName@@dateTimeFormatattributes @TO@ dateTimeFormatAttributes @AT@ 31163 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:socketBindings.registerSocket(this) @TO@ MethodInvocation:socketBindings.registerBinding(this) @AT@ 1721 @LENGTH@ 36
---UPD MethodInvocation@@socketBindings.registerSocket(this) @TO@ socketBindings.registerBinding(this) @AT@ 1721 @LENGTH@ 35
------UPD SimpleName@@MethodName:registerSocket:[this] @TO@ MethodName:registerBinding:[this] @AT@ 1736 @LENGTH@ 20


UPD IfStatement@@if (registry == null) {  registry=createRegistry();} @TO@ if (registry != null) {  return registry;} else {  registry=createRegistry();} @AT@ 3765 @LENGTH@ 90
---UPD InfixExpression@@registry == null @TO@ registry != null @AT@ 3769 @LENGTH@ 16
------UPD Operator@@== @TO@ != @AT@ 3777 @LENGTH@ 2
---UPD Block@@ThenBody:{  registry=createRegistry();} @TO@ ElseBody:{  registry=createRegistry();} @AT@ 3787 @LENGTH@ 68
---INS Block@@ThenBody:{  return registry;} @TO@ IfStatement@@if (registry == null) {  registry=createRegistry();} @AT@ 3787 @LENGTH@ 56
------INS ReturnStatement@@SimpleName:registry @TO@ Block@@ThenBody:{  return registry;} @AT@ 3809 @LENGTH@ 16
---------INS SimpleName@@registry @TO@ ReturnStatement@@SimpleName:registry @AT@ 3816 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodDeclaration@@public, void, MethodName:testShutdownAllTasks, Exception,  @AT@ 3246 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 3246 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 3246 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 3253 @LENGTH@ 11
---------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 3259 @LENGTH@ 4


UPD VariableDeclarationStatement@@Boolean suspended=(Boolean)mbeanServer.getAttribute(on,"Suspended"); @TO@ String status=(String)mbeanServer.getAttribute(on,"State"); @AT@ 2305 @LENGTH@ 72
---UPD SimpleType@@Boolean @TO@ String @AT@ 2305 @LENGTH@ 7
---UPD VariableDeclarationFragment@@suspended=(Boolean)mbeanServer.getAttribute(on,"Suspended") @TO@ status=(String)mbeanServer.getAttribute(on,"State") @AT@ 2313 @LENGTH@ 63
------UPD SimpleName@@suspended @TO@ status @AT@ 2313 @LENGTH@ 9
------UPD CastExpression@@(Boolean)mbeanServer.getAttribute(on,"Suspended") @TO@ (String)mbeanServer.getAttribute(on,"State") @AT@ 2325 @LENGTH@ 51
---------UPD SimpleType@@Boolean @TO@ String @AT@ 2326 @LENGTH@ 7
---------UPD MethodInvocation@@mbeanServer.getAttribute(on,"Suspended") @TO@ mbeanServer.getAttribute(on,"State") @AT@ 2335 @LENGTH@ 41
------------UPD SimpleName@@MethodName:getAttribute:[on, "Suspended"] @TO@ MethodName:getAttribute:[on, "State"] @AT@ 2347 @LENGTH@ 29
---------------UPD StringLiteral@@"Suspended" @TO@ "State" @AT@ 2364 @LENGTH@ 11


UPD VariableDeclarationStatement@@File configDir=serverEnvironment.getValue().getServerConfigurationDir(); @TO@ File configDir=env.getServerConfigurationDir(); @AT@ 6523 @LENGTH@ 74
---UPD VariableDeclarationFragment@@configDir=serverEnvironment.getValue().getServerConfigurationDir() @TO@ configDir=env.getServerConfigurationDir() @AT@ 6528 @LENGTH@ 68
------UPD MethodInvocation@@serverEnvironment.getValue().getServerConfigurationDir() @TO@ env.getServerConfigurationDir() @AT@ 6540 @LENGTH@ 56
---------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 6540 @LENGTH@ 28
---------UPD SimpleName@@Name:serverEnvironment @TO@ Name:env @AT@ 6540 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:queueInfo.setTransations(extractLong(value)) @TO@ MethodInvocation:queueInfo.setTransactions(extractLong(value)) @AT@ 7062 @LENGTH@ 45
---UPD MethodInvocation@@queueInfo.setTransations(extractLong(value)) @TO@ queueInfo.setTransactions(extractLong(value)) @AT@ 7062 @LENGTH@ 44
------UPD SimpleName@@MethodName:setTransations:[extractLong(value)] @TO@ MethodName:setTransactions:[extractLong(value)] @AT@ 7072 @LENGTH@ 34


UPD ExpressionStatement@@MethodInvocation:hdr.setMustUnderstand(true) @TO@ MethodInvocation:hdr.setMustUnderstand(invalid) @AT@ 27008 @LENGTH@ 28
---UPD MethodInvocation@@hdr.setMustUnderstand(true) @TO@ hdr.setMustUnderstand(invalid) @AT@ 27008 @LENGTH@ 27
------UPD SimpleName@@MethodName:setMustUnderstand:[true] @TO@ MethodName:setMustUnderstand:[invalid] @AT@ 27012 @LENGTH@ 23
---------DEL BooleanLiteral@@true @AT@ 27030 @LENGTH@ 4
---------INS SimpleName@@invalid @TO@ SimpleName@@MethodName:setMustUnderstand:[true] @AT@ 27044 @LENGTH@ 7


UPD Block@@ThenBody:{  replyTo=new Address(defaultResponseRoutingKey);  if (replyTo == null) {    throw new AmqpException("Cannot determine ReplyTo message property value: " + "Request message does not contain reply-to property, and no default ReplyTo value set.");  }} @TO@ ThenBody:{  if (defaultResponseRoutingKey == null) {    throw new AmqpException("Cannot determine ReplyTo message property value: " + "Request message does not contain reply-to property, and no default ReplyTo value set.");  }  replyTo=new Address(defaultResponseRoutingKey);} @AT@ 22422 @LENGTH@ 267
---MOV ExpressionStatement@@Assignment:replyTo=new Address(defaultResponseRoutingKey) @TO@ Block@@ThenBody:{  replyTo=new Address(defaultResponseRoutingKey);  if (replyTo == null) {    throw new AmqpException("Cannot determine ReplyTo message property value: " + "Request message does not contain reply-to property, and no default ReplyTo value set.");  }} @AT@ 22427 @LENGTH@ 49
---UPD IfStatement@@if (replyTo == null) {  throw new AmqpException("Cannot determine ReplyTo message property value: " + "Request message does not contain reply-to property, and no default ReplyTo value set.");} @TO@ if (defaultResponseRoutingKey == null) {  throw new AmqpException("Cannot determine ReplyTo message property value: " + "Request message does not contain reply-to property, and no default ReplyTo value set.");} @AT@ 22480 @LENGTH@ 205
------UPD InfixExpression@@replyTo == null @TO@ defaultResponseRoutingKey == null @AT@ 22484 @LENGTH@ 15
---------UPD SimpleName@@replyTo @TO@ defaultResponseRoutingKey @AT@ 22484 @LENGTH@ 7


UPD ReturnStatement@@InfixExpression:!cancelled && rolledBack && hostFailure == null && (serverFailures == null || serverFailures.size() == 0) && (serverCancellations == null || serverCancellations.size() == 0) && (serverTimeouts == null || serverTimeouts.size() == 0) && (serverRollbacks == null || serverRollbacks.size() == 0) @TO@ InfixExpression:!cancelled && !rolledBack && hostFailure == null && (serverFailures == null || serverFailures.size() == 0) && (serverCancellations == null || serverCancellations.size() == 0) && (serverTimeouts == null || serverTimeouts.size() == 0) && (serverRollbacks == null || serverRollbacks.size() == 0) @AT@ 4975 @LENGTH@ 371
---UPD InfixExpression@@!cancelled && rolledBack && hostFailure == null && (serverFailures == null || serverFailures.size() == 0) && (serverCancellations == null || serverCancellations.size() == 0) && (serverTimeouts == null || serverTimeouts.size() == 0) && (serverRollbacks == null || serverRollbacks.size() == 0) @TO@ !cancelled && !rolledBack && hostFailure == null && (serverFailures == null || serverFailures.size() == 0) && (serverCancellations == null || serverCancellations.size() == 0) && (serverTimeouts == null || serverTimeouts.size() == 0) && (serverRollbacks == null || serverRollbacks.size() == 0) @AT@ 4982 @LENGTH@ 363
------UPD InfixExpression@@!cancelled && rolledBack && hostFailure == null && (serverFailures == null || serverFailures.size() == 0) && (serverCancellations == null || serverCancellations.size() == 0) && (serverTimeouts == null || serverTimeouts.size() == 0) @TO@ !cancelled && !rolledBack && hostFailure == null && (serverFailures == null || serverFailures.size() == 0) && (serverCancellations == null || serverCancellations.size() == 0) && (serverTimeouts == null || serverTimeouts.size() == 0) @AT@ 4982 @LENGTH@ 291
---------UPD InfixExpression@@!cancelled && rolledBack && hostFailure == null && (serverFailures == null || serverFailures.size() == 0) && (serverCancellations == null || serverCancellations.size() == 0) @TO@ !cancelled && !rolledBack && hostFailure == null && (serverFailures == null || serverFailures.size() == 0) && (serverCancellations == null || serverCancellations.size() == 0) @AT@ 4982 @LENGTH@ 221
------------UPD InfixExpression@@!cancelled && rolledBack && hostFailure == null && (serverFailures == null || serverFailures.size() == 0) @TO@ !cancelled && !rolledBack && hostFailure == null && (serverFailures == null || serverFailures.size() == 0) @AT@ 4982 @LENGTH@ 141
---------------UPD InfixExpression@@!cancelled && rolledBack && hostFailure == null @TO@ !cancelled && !rolledBack && hostFailure == null @AT@ 4982 @LENGTH@ 71
------------------DEL SimpleName@@rolledBack @AT@ 5008 @LENGTH@ 10
------------------INS PrefixExpression@@!rolledBack @TO@ InfixExpression@@!cancelled && rolledBack && hostFailure == null @AT@ 5009 @LENGTH@ 11
---------------------INS Operator@@! @TO@ PrefixExpression@@!rolledBack @AT@ 5009 @LENGTH@ 1
---------------------INS SimpleName@@rolledBack @TO@ PrefixExpression@@!rolledBack @AT@ 5010 @LENGTH@ 10


DEL ExpressionStatement@@MethodInvocation:brokerAdmin.startBrokerApplication() @AT@ 1813 @LENGTH@ 37
---DEL MethodInvocation@@brokerAdmin.startBrokerApplication() @AT@ 1813 @LENGTH@ 36
------DEL SimpleName@@Name:brokerAdmin @AT@ 1813 @LENGTH@ 11
------DEL SimpleName@@MethodName:startBrokerApplication:[] @AT@ 1825 @LENGTH@ 24


INS MethodDeclaration@@public, void, MethodName:testThreadsCoreBeZero, Exception,  @TO@ TypeDeclaration@@[public]ThreadsZeroInCoreAndMaxPoolTest, ContextTestSupport @AT@ 1358 @LENGTH@ 666
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testThreadsCoreBeZero, Exception,  @AT@ 1358 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testThreadsCoreBeZero, Exception,  @AT@ 1365 @LENGTH@ 4
---INS SimpleName@@MethodName:testThreadsCoreBeZero @TO@ MethodDeclaration@@public, void, MethodName:testThreadsCoreBeZero, Exception,  @AT@ 1370 @LENGTH@ 21
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testThreadsCoreBeZero, Exception,  @AT@ 1401 @LENGTH@ 9
---INS TryStatement@@try {  context.addRoutes(new RouteBuilder(){    @Override public void configure() throws Exception {      from("direct:start").threads(0,2).to("mock:result");    }  });  fail("Except the exception here");} catch (FailedToCreateRouteException ex) {  assertTrue(ex.getCause() instanceof IllegalArgumentException);} @TO@ MethodDeclaration@@public, void, MethodName:testThreadsCoreBeZero, Exception,  @AT@ 1421 @LENGTH@ 597
------INS ExpressionStatement@@MethodInvocation:context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("direct:start").threads(0,2).to("mock:result");
  }
}
) @TO@ TryStatement@@try {  context.addRoutes(new RouteBuilder(){    @Override public void configure() throws Exception {      from("direct:start").threads(0,2).to("mock:result");    }  });  fail("Except the exception here");} catch (FailedToCreateRouteException ex) {  assertTrue(ex.getCause() instanceof IllegalArgumentException);} @AT@ 1439 @LENGTH@ 336
---------INS MethodInvocation@@context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("direct:start").threads(0,2).to("mock:result");
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("direct:start").threads(0,2).to("mock:result");
  }
}
) @AT@ 1439 @LENGTH@ 335
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("direct:start").threads(0,2).to("mock:result");
  }
}
) @AT@ 1439 @LENGTH@ 7
------------INS SimpleName@@MethodName:addRoutes:[new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("direct:start").threads(0,2).to("mock:result");
  }
}
] @TO@ MethodInvocation@@context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("direct:start").threads(0,2).to("mock:result");
  }
}
) @AT@ 1447 @LENGTH@ 327
---------------INS ClassInstanceCreation@@RouteBuilder[] @TO@ SimpleName@@MethodName:addRoutes:[new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("direct:start").threads(0,2).to("mock:result");
  }
}
] @AT@ 1457 @LENGTH@ 316
------------------INS New@@new @TO@ ClassInstanceCreation@@RouteBuilder[] @AT@ 1457 @LENGTH@ 3
------------------INS SimpleType@@RouteBuilder @TO@ ClassInstanceCreation@@RouteBuilder[] @AT@ 1461 @LENGTH@ 12
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@RouteBuilder[] @AT@ 1476 @LENGTH@ 297
---------------------INS MethodDeclaration@@public, void, MethodName:configure, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 1520 @LENGTH@ 239
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 1520 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 1527 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:configure @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 1532 @LENGTH@ 9
------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 1551 @LENGTH@ 9
------------------------MOV ExpressionStatement@@MethodInvocation:from("direct:start").threads(0,2).to("mock:result") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 1721 @LENGTH@ 175
------INS ExpressionStatement@@MethodInvocation:fail("Except the exception here") @TO@ TryStatement@@try {  context.addRoutes(new RouteBuilder(){    @Override public void configure() throws Exception {      from("direct:start").threads(0,2).to("mock:result");    }  });  fail("Except the exception here");} catch (FailedToCreateRouteException ex) {  assertTrue(ex.getCause() instanceof IllegalArgumentException);} @AT@ 1846 @LENGTH@ 34
---------INS MethodInvocation@@fail("Except the exception here") @TO@ ExpressionStatement@@MethodInvocation:fail("Except the exception here") @AT@ 1846 @LENGTH@ 33
------------INS SimpleName@@MethodName:fail:["Except the exception here"] @TO@ MethodInvocation@@fail("Except the exception here") @AT@ 1846 @LENGTH@ 33
---------------INS StringLiteral@@"Except the exception here" @TO@ SimpleName@@MethodName:fail:["Except the exception here"] @AT@ 1851 @LENGTH@ 27
------INS CatchClause@@catch (FailedToCreateRouteException ex) {  assertTrue(ex.getCause() instanceof IllegalArgumentException);} @TO@ TryStatement@@try {  context.addRoutes(new RouteBuilder(){    @Override public void configure() throws Exception {      from("direct:start").threads(0,2).to("mock:result");    }  });  fail("Except the exception here");} catch (FailedToCreateRouteException ex) {  assertTrue(ex.getCause() instanceof IllegalArgumentException);} @AT@ 1891 @LENGTH@ 127
---------INS SingleVariableDeclaration@@FailedToCreateRouteException ex @TO@ CatchClause@@catch (FailedToCreateRouteException ex) {  assertTrue(ex.getCause() instanceof IllegalArgumentException);} @AT@ 1898 @LENGTH@ 31
------------INS SimpleType@@FailedToCreateRouteException @TO@ SingleVariableDeclaration@@FailedToCreateRouteException ex @AT@ 1898 @LENGTH@ 28
------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@FailedToCreateRouteException ex @AT@ 1927 @LENGTH@ 2
---------INS ExpressionStatement@@MethodInvocation:assertTrue(ex.getCause() instanceof IllegalArgumentException) @TO@ CatchClause@@catch (FailedToCreateRouteException ex) {  assertTrue(ex.getCause() instanceof IllegalArgumentException);} @AT@ 1945 @LENGTH@ 62
------------INS MethodInvocation@@assertTrue(ex.getCause() instanceof IllegalArgumentException) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(ex.getCause() instanceof IllegalArgumentException) @AT@ 1945 @LENGTH@ 61
---------------INS SimpleName@@MethodName:assertTrue:[ex.getCause() instanceof IllegalArgumentException] @TO@ MethodInvocation@@assertTrue(ex.getCause() instanceof IllegalArgumentException) @AT@ 1945 @LENGTH@ 61
------------------INS InstanceofExpression@@ex.getCause() instanceof IllegalArgumentException @TO@ SimpleName@@MethodName:assertTrue:[ex.getCause() instanceof IllegalArgumentException] @AT@ 1956 @LENGTH@ 49
---------------------INS MethodInvocation@@ex.getCause() @TO@ InstanceofExpression@@ex.getCause() instanceof IllegalArgumentException @AT@ 1956 @LENGTH@ 13
------------------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getCause() @AT@ 1956 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@ex.getCause() @AT@ 1959 @LENGTH@ 10
---------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@ex.getCause() instanceof IllegalArgumentException @AT@ 1970 @LENGTH@ 10
---------------------INS SimpleType@@IllegalArgumentException @TO@ InstanceofExpression@@ex.getCause() instanceof IllegalArgumentException @AT@ 1981 @LENGTH@ 24


UPD ExpressionStatement@@Assignment:this.service=new ServiceBuilder().provider(TwitterApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @TO@ Assignment:this.service=new ServiceBuilder().provider(LinkedInApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @AT@ 1380 @LENGTH@ 159
---UPD Assignment@@this.service=new ServiceBuilder().provider(TwitterApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @TO@ this.service=new ServiceBuilder().provider(LinkedInApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @AT@ 1380 @LENGTH@ 158
------UPD MethodInvocation@@new ServiceBuilder().provider(TwitterApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @TO@ new ServiceBuilder().provider(LinkedInApi.class).apiKey(apiKey).apiSecret(apiSecret).callback("http://greenhouse.springsource.org").build() @AT@ 1395 @LENGTH@ 143
---------UPD MethodInvocation@@MethodName:provider:[TwitterApi.class] @TO@ MethodName:provider:[LinkedInApi.class] @AT@ 1395 @LENGTH@ 47
------------UPD TypeLiteral@@TwitterApi.class @TO@ LinkedInApi.class @AT@ 1425 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:merge, NamedModuleImpl dest, NamedModuleImpl override, NamedModuleImpl original,  @TO@ public, static, void, MethodName:merge, NamedModuleImpl dest, NamedModuleImpl override, NamedModuleImpl original,  @AT@ 1444 @LENGTH@ 197
---INS Modifier@@static @TO@ MethodDeclaration@@public, void, MethodName:merge, NamedModuleImpl dest, NamedModuleImpl override, NamedModuleImpl original,  @AT@ 1451 @LENGTH@ 6
---UPD ExpressionStatement@@SuperMethodInvocation:super.merge(dest,override,original) @TO@ MethodInvocation:IdMetaDataImplWithDescriptionGroupMerger.merge(dest,override,original) @AT@ 1546 @LENGTH@ 38
------DEL SuperMethodInvocation@@super.merge(dest,override,original) @AT@ 1546 @LENGTH@ 37
---------DEL SimpleName@@MethodName:merge:[dest, override, original] @AT@ 1552 @LENGTH@ 5
---------DEL SimpleName@@dest @AT@ 1558 @LENGTH@ 4
---------DEL SimpleName@@override @AT@ 1564 @LENGTH@ 8
---------DEL SimpleName@@original @AT@ 1574 @LENGTH@ 8
------INS MethodInvocation@@IdMetaDataImplWithDescriptionGroupMerger.merge(dest,override,original) @TO@ ExpressionStatement@@SuperMethodInvocation:super.merge(dest,override,original) @AT@ 1553 @LENGTH@ 72
---------INS SimpleName@@Name:IdMetaDataImplWithDescriptionGroupMerger @TO@ MethodInvocation@@IdMetaDataImplWithDescriptionGroupMerger.merge(dest,override,original) @AT@ 1553 @LENGTH@ 40
---------INS SimpleName@@MethodName:merge:[dest, override, original] @TO@ MethodInvocation@@IdMetaDataImplWithDescriptionGroupMerger.merge(dest,override,original) @AT@ 1594 @LENGTH@ 31
------------INS SimpleName@@dest @TO@ SimpleName@@MethodName:merge:[dest, override, original] @AT@ 1600 @LENGTH@ 4
------------INS SimpleName@@override @TO@ SimpleName@@MethodName:merge:[dest, override, original] @AT@ 1606 @LENGTH@ 8
------------INS SimpleName@@original @TO@ SimpleName@@MethodName:merge:[dest, override, original] @AT@ 1616 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:socketBindings.unregisterSocket(this) @TO@ MethodInvocation:socketBindings.unregisterBinding(this) @AT@ 1995 @LENGTH@ 38
---UPD MethodInvocation@@socketBindings.unregisterSocket(this) @TO@ socketBindings.unregisterBinding(this) @AT@ 1995 @LENGTH@ 37
------UPD SimpleName@@MethodName:unregisterSocket:[this] @TO@ MethodName:unregisterBinding:[this] @AT@ 2010 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)) @TO@ MethodInvocation:errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)) @AT@ 5230 @LENGTH@ 66
---UPD MethodInvocation@@errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)) @TO@ errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)) @AT@ 5230 @LENGTH@ 65
------UPD SimpleName@@MethodName:errorHandler:[deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)] @TO@ MethodName:errorHandler:[deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)] @AT@ 5230 @LENGTH@ 65
---------UPD MethodInvocation@@deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0) @TO@ deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0) @AT@ 5243 @LENGTH@ 51
------------UPD SimpleName@@MethodName:redeliverDelay:[0] @TO@ MethodName:redeliveryDelay:[0] @AT@ 5277 @LENGTH@ 17


UPD VariableDeclarationStatement@@JBossMessageDrivenBeanMetaData messageDriven=new JBossMessageDrivenBeanMetaData(); @TO@ JBossMessageDrivenBeanMetaData messageDriven=new JBossMessageDrivenBean31MetaData(); @AT@ 6773 @LENGTH@ 84
---UPD VariableDeclarationFragment@@messageDriven=new JBossMessageDrivenBeanMetaData() @TO@ messageDriven=new JBossMessageDrivenBean31MetaData() @AT@ 6804 @LENGTH@ 52
------UPD ClassInstanceCreation@@JBossMessageDrivenBeanMetaData[] @TO@ JBossMessageDrivenBean31MetaData[] @AT@ 6820 @LENGTH@ 36
---------UPD SimpleType@@JBossMessageDrivenBeanMetaData @TO@ JBossMessageDrivenBean31MetaData @AT@ 6824 @LENGTH@ 30


INS MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @TO@ TypeDeclaration@@[public]FileControllerTests,  @AT@ 2815 @LENGTH@ 679
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 2815 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 2822 @LENGTH@ 4
---INS SimpleName@@MethodName:testDownloadWithScript @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 2827 @LENGTH@ 22
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 2859 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 2874 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 2874 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 2897 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 2897 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 2907 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2907 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2911 @LENGTH@ 22
---INS VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 2940 @LENGTH@ 65
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 2940 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=new MockHttpServletResponse() @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 2964 @LENGTH@ 40
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 2964 @LENGTH@ 8
---------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 2975 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 2975 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 2979 @LENGTH@ 23
---INS VariableDeclarationStatement@@ExtendedModelMap model=new ExtendedModelMap(); @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 3009 @LENGTH@ 48
------INS SimpleType@@ExtendedModelMap @TO@ VariableDeclarationStatement@@ExtendedModelMap model=new ExtendedModelMap(); @AT@ 3009 @LENGTH@ 16
------INS VariableDeclarationFragment@@model=new ExtendedModelMap() @TO@ VariableDeclarationStatement@@ExtendedModelMap model=new ExtendedModelMap(); @AT@ 3026 @LENGTH@ 30
---------INS SimpleName@@model @TO@ VariableDeclarationFragment@@model=new ExtendedModelMap() @AT@ 3026 @LENGTH@ 5
---------INS ClassInstanceCreation@@ExtendedModelMap[] @TO@ VariableDeclarationFragment@@model=new ExtendedModelMap() @AT@ 3034 @LENGTH@ 22
------------INS New@@new @TO@ ClassInstanceCreation@@ExtendedModelMap[] @AT@ 3034 @LENGTH@ 3
------------INS SimpleType@@ExtendedModelMap @TO@ ClassInstanceCreation@@ExtendedModelMap[] @AT@ 3038 @LENGTH@ 16
---INS VariableDeclarationStatement@@Date date=new Date(); @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 3061 @LENGTH@ 23
------INS SimpleType@@Date @TO@ VariableDeclarationStatement@@Date date=new Date(); @AT@ 3061 @LENGTH@ 4
------INS VariableDeclarationFragment@@date=new Date() @TO@ VariableDeclarationStatement@@Date date=new Date(); @AT@ 3066 @LENGTH@ 17
---------INS SimpleName@@date @TO@ VariableDeclarationFragment@@date=new Date() @AT@ 3066 @LENGTH@ 4
---------INS ClassInstanceCreation@@Date[] @TO@ VariableDeclarationFragment@@date=new Date() @AT@ 3073 @LENGTH@ 10
------------INS New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 3073 @LENGTH@ 3
------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 3077 @LENGTH@ 4
---INS VariableDeclarationStatement@@BindException errors=new BindException(date,"date"); @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 3088 @LENGTH@ 55
------INS SimpleType@@BindException @TO@ VariableDeclarationStatement@@BindException errors=new BindException(date,"date"); @AT@ 3088 @LENGTH@ 13
------INS VariableDeclarationFragment@@errors=new BindException(date,"date") @TO@ VariableDeclarationStatement@@BindException errors=new BindException(date,"date"); @AT@ 3102 @LENGTH@ 40
---------INS SimpleName@@errors @TO@ VariableDeclarationFragment@@errors=new BindException(date,"date") @AT@ 3102 @LENGTH@ 6
---------INS ClassInstanceCreation@@BindException[date, "date"] @TO@ VariableDeclarationFragment@@errors=new BindException(date,"date") @AT@ 3111 @LENGTH@ 31
------------INS New@@new @TO@ ClassInstanceCreation@@BindException[date, "date"] @AT@ 3111 @LENGTH@ 3
------------INS SimpleType@@BindException @TO@ ClassInstanceCreation@@BindException[date, "date"] @AT@ 3115 @LENGTH@ 13
------------INS SimpleName@@date @TO@ ClassInstanceCreation@@BindException[date, "date"] @AT@ 3129 @LENGTH@ 4
------------INS StringLiteral@@"date" @TO@ ClassInstanceCreation@@BindException[date, "date"] @AT@ 3135 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:request.setPathInfo("/files/><script>alert(45530)</script>") @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 3147 @LENGTH@ 61
------INS MethodInvocation@@request.setPathInfo("/files/><script>alert(45530)</script>") @TO@ ExpressionStatement@@MethodInvocation:request.setPathInfo("/files/><script>alert(45530)</script>") @AT@ 3147 @LENGTH@ 60
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setPathInfo("/files/><script>alert(45530)</script>") @AT@ 3147 @LENGTH@ 7
---------INS SimpleName@@MethodName:setPathInfo:["/files/><script>alert(45530)</script>"] @TO@ MethodInvocation@@request.setPathInfo("/files/><script>alert(45530)</script>") @AT@ 3155 @LENGTH@ 52
------------INS StringLiteral@@"/files/><script>alert(45530)</script>" @TO@ SimpleName@@MethodName:setPathInfo:["/files/><script>alert(45530)</script>"] @AT@ 3167 @LENGTH@ 39
---INS ExpressionStatement@@MethodInvocation:controller.get(request,response,model,0,20,date,errors) @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 3212 @LENGTH@ 62
------INS MethodInvocation@@controller.get(request,response,model,0,20,date,errors) @TO@ ExpressionStatement@@MethodInvocation:controller.get(request,response,model,0,20,date,errors) @AT@ 3212 @LENGTH@ 61
---------INS SimpleName@@Name:controller @TO@ MethodInvocation@@controller.get(request,response,model,0,20,date,errors) @AT@ 3212 @LENGTH@ 10
---------INS SimpleName@@MethodName:get:[request, response, model, 0, 20, date, errors] @TO@ MethodInvocation@@controller.get(request,response,model,0,20,date,errors) @AT@ 3223 @LENGTH@ 50
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:get:[request, response, model, 0, 20, date, errors] @AT@ 3227 @LENGTH@ 7
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:get:[request, response, model, 0, 20, date, errors] @AT@ 3236 @LENGTH@ 8
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:get:[request, response, model, 0, 20, date, errors] @AT@ 3246 @LENGTH@ 5
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[request, response, model, 0, 20, date, errors] @AT@ 3253 @LENGTH@ 1
------------INS NumberLiteral@@20 @TO@ SimpleName@@MethodName:get:[request, response, model, 0, 20, date, errors] @AT@ 3256 @LENGTH@ 2
------------INS SimpleName@@date @TO@ SimpleName@@MethodName:get:[request, response, model, 0, 20, date, errors] @AT@ 3260 @LENGTH@ 4
------------INS SimpleName@@errors @TO@ SimpleName@@MethodName:get:[request, response, model, 0, 20, date, errors] @AT@ 3266 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertTrue(errors.hasErrors()) @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 3278 @LENGTH@ 31
------INS MethodInvocation@@assertTrue(errors.hasErrors()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(errors.hasErrors()) @AT@ 3278 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertTrue:[errors.hasErrors()] @TO@ MethodInvocation@@assertTrue(errors.hasErrors()) @AT@ 3278 @LENGTH@ 30
------------INS MethodInvocation@@errors.hasErrors() @TO@ SimpleName@@MethodName:assertTrue:[errors.hasErrors()] @AT@ 3289 @LENGTH@ 18
---------------INS SimpleName@@Name:errors @TO@ MethodInvocation@@errors.hasErrors() @AT@ 3289 @LENGTH@ 6
---------------INS SimpleName@@MethodName:hasErrors:[] @TO@ MethodInvocation@@errors.hasErrors() @AT@ 3296 @LENGTH@ 11
---INS VariableDeclarationStatement@@ObjectError error=(ObjectError)errors.getAllErrors().get(0); @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 3313 @LENGTH@ 63
------INS SimpleType@@ObjectError @TO@ VariableDeclarationStatement@@ObjectError error=(ObjectError)errors.getAllErrors().get(0); @AT@ 3313 @LENGTH@ 11
------INS VariableDeclarationFragment@@error=(ObjectError)errors.getAllErrors().get(0) @TO@ VariableDeclarationStatement@@ObjectError error=(ObjectError)errors.getAllErrors().get(0); @AT@ 3325 @LENGTH@ 50
---------INS SimpleName@@error @TO@ VariableDeclarationFragment@@error=(ObjectError)errors.getAllErrors().get(0) @AT@ 3325 @LENGTH@ 5
---------INS CastExpression@@(ObjectError)errors.getAllErrors().get(0) @TO@ VariableDeclarationFragment@@error=(ObjectError)errors.getAllErrors().get(0) @AT@ 3333 @LENGTH@ 42
------------INS SimpleType@@ObjectError @TO@ CastExpression@@(ObjectError)errors.getAllErrors().get(0) @AT@ 3334 @LENGTH@ 11
------------INS MethodInvocation@@errors.getAllErrors().get(0) @TO@ CastExpression@@(ObjectError)errors.getAllErrors().get(0) @AT@ 3347 @LENGTH@ 28
---------------INS MethodInvocation@@MethodName:getAllErrors:[] @TO@ MethodInvocation@@errors.getAllErrors().get(0) @AT@ 3347 @LENGTH@ 21
---------------INS SimpleName@@Name:errors @TO@ MethodInvocation@@errors.getAllErrors().get(0) @AT@ 3347 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@errors.getAllErrors().get(0) @AT@ 3369 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 3373 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertTrue("Wrong message: " + error.getDefaultMessage(),error.getDefaultMessage().contains("&gt;&lt;script")) @TO@ MethodDeclaration@@public, void, MethodName:testDownloadWithScript, Exception,  @AT@ 3380 @LENGTH@ 110
------INS MethodInvocation@@assertTrue("Wrong message: " + error.getDefaultMessage(),error.getDefaultMessage().contains("&gt;&lt;script")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Wrong message: " + error.getDefaultMessage(),error.getDefaultMessage().contains("&gt;&lt;script")) @AT@ 3380 @LENGTH@ 109
---------INS SimpleName@@MethodName:assertTrue:["Wrong message: " + error.getDefaultMessage(), error.getDefaultMessage().contains("&gt;&lt;script")] @TO@ MethodInvocation@@assertTrue("Wrong message: " + error.getDefaultMessage(),error.getDefaultMessage().contains("&gt;&lt;script")) @AT@ 3380 @LENGTH@ 109
------------INS InfixExpression@@"Wrong message: " + error.getDefaultMessage() @TO@ SimpleName@@MethodName:assertTrue:["Wrong message: " + error.getDefaultMessage(), error.getDefaultMessage().contains("&gt;&lt;script")] @AT@ 3391 @LENGTH@ 43
---------------INS StringLiteral@@"Wrong message: " @TO@ InfixExpression@@"Wrong message: " + error.getDefaultMessage() @AT@ 3391 @LENGTH@ 17
---------------INS Operator@@+ @TO@ InfixExpression@@"Wrong message: " + error.getDefaultMessage() @AT@ 3408 @LENGTH@ 1
---------------INS MethodInvocation@@error.getDefaultMessage() @TO@ InfixExpression@@"Wrong message: " + error.getDefaultMessage() @AT@ 3409 @LENGTH@ 25
------------------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getDefaultMessage() @AT@ 3409 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getDefaultMessage:[] @TO@ MethodInvocation@@error.getDefaultMessage() @AT@ 3415 @LENGTH@ 19
------------INS MethodInvocation@@error.getDefaultMessage().contains("&gt;&lt;script") @TO@ SimpleName@@MethodName:assertTrue:["Wrong message: " + error.getDefaultMessage(), error.getDefaultMessage().contains("&gt;&lt;script")] @AT@ 3436 @LENGTH@ 52
---------------INS MethodInvocation@@MethodName:getDefaultMessage:[] @TO@ MethodInvocation@@error.getDefaultMessage().contains("&gt;&lt;script") @AT@ 3436 @LENGTH@ 25
---------------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getDefaultMessage().contains("&gt;&lt;script") @AT@ 3436 @LENGTH@ 5
---------------INS SimpleName@@MethodName:contains:["&gt;&lt;script"] @TO@ MethodInvocation@@error.getDefaultMessage().contains("&gt;&lt;script") @AT@ 3462 @LENGTH@ 26
------------------INS StringLiteral@@"&gt;&lt;script" @TO@ SimpleName@@MethodName:contains:["&gt;&lt;script"] @AT@ 3471 @LENGTH@ 16


UPD IfStatement@@if (serviceFailures.isEmpty()) {  logger.infof("JBoss AS started [%d services in %dms]",numberServices,elapsedTime);  new Exception().printStackTrace();  sendMessage("STARTED");} else {  sendMessage("START FAILED");  final StringBuilder buff=new StringBuilder(String.format("JBoss AS server start failed.  Attempted to start %d services in %dms",numberServices,elapsedTime));  buff.append("\nThe following services failed to start:\n");  for (  Map.Entry<ServiceName,StartException> entry : serviceFailures.entrySet()) {    buff.append(String.format("\t%s => %s\n",entry.getKey(),entry.getValue().getMessage()));  }  logger.error(buff.toString());} @TO@ if (serviceFailures.isEmpty()) {  logger.infof("JBoss AS started [%d services in %dms]",numberServices,elapsedTime);  sendMessage("STARTED");} else {  sendMessage("START FAILED");  final StringBuilder buff=new StringBuilder(String.format("JBoss AS server start failed.  Attempted to start %d services in %dms",numberServices,elapsedTime));  buff.append("\nThe following services failed to start:\n");  for (  Map.Entry<ServiceName,StartException> entry : serviceFailures.entrySet()) {    buff.append(String.format("\t%s => %s\n",entry.getKey(),entry.getValue().getMessage()));  }  logger.error(buff.toString());} @AT@ 3187 @LENGTH@ 879
---UPD Block@@ThenBody:{  logger.infof("JBoss AS started [%d services in %dms]",numberServices,elapsedTime);  new Exception().printStackTrace();  sendMessage("STARTED");} @TO@ ThenBody:{  logger.infof("JBoss AS started [%d services in %dms]",numberServices,elapsedTime);  sendMessage("STARTED");} @AT@ 3217 @LENGTH@ 223
------DEL ExpressionStatement@@MethodInvocation:new Exception().printStackTrace() @AT@ 3344 @LENGTH@ 34
---------DEL MethodInvocation@@new Exception().printStackTrace() @AT@ 3344 @LENGTH@ 33
------------DEL ClassInstanceCreation@@Exception[] @AT@ 3344 @LENGTH@ 15
---------------DEL New@@new @AT@ 3344 @LENGTH@ 3
---------------DEL SimpleType@@Exception @AT@ 3348 @LENGTH@ 9
------------DEL SimpleName@@MethodName:printStackTrace:[] @AT@ 3360 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:((ChannelAwareMessageListener)delegate).onMessage(message,channel) @TO@ MethodInvocation:((ChannelAwareMessageListener<Message>)delegate).onMessage(message,channel) @AT@ 12492 @LENGTH@ 69
---UPD MethodInvocation@@((ChannelAwareMessageListener)delegate).onMessage(message,channel) @TO@ ((ChannelAwareMessageListener<Message>)delegate).onMessage(message,channel) @AT@ 12492 @LENGTH@ 68
------UPD ParenthesizedExpression@@((ChannelAwareMessageListener)delegate) @TO@ ((ChannelAwareMessageListener<Message>)delegate) @AT@ 12492 @LENGTH@ 40
---------UPD CastExpression@@(ChannelAwareMessageListener)delegate @TO@ (ChannelAwareMessageListener<Message>)delegate @AT@ 12493 @LENGTH@ 38
------------INS ParameterizedType@@ChannelAwareMessageListener<Message> @TO@ CastExpression@@(ChannelAwareMessageListener)delegate @AT@ 12494 @LENGTH@ 36
---------------INS SimpleType@@ChannelAwareMessageListener @TO@ ParameterizedType@@ChannelAwareMessageListener<Message> @AT@ 12494 @LENGTH@ 27
---------------INS SimpleType@@Message @TO@ ParameterizedType@@ChannelAwareMessageListener<Message> @AT@ 12522 @LENGTH@ 7
------------DEL SimpleType@@ChannelAwareMessageListener @AT@ 12494 @LENGTH@ 27


UPD FieldDeclaration@@private, static, final, String, [SERVER_SYSTEM_DEPLOY_DIR="jboss.server.system.deploy.dir"] @TO@ public, static, final, String, [SERVER_SYSTEM_DEPLOY_DIR="jboss.server.system.deploy.dir"] @AT@ 4016 @LENGTH@ 88
---UPD Modifier@@private @TO@ public @AT@ 4016 @LENGTH@ 7


INS MethodDeclaration@@public, static, void, MethodName:safeClose, final Socket socket,  @TO@ TypeDeclaration@@[public, final]StreamUtils,  @AT@ 10113 @LENGTH@ 207
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:safeClose, final Socket socket,  @AT@ 10113 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:safeClose, final Socket socket,  @AT@ 10120 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:safeClose, final Socket socket,  @AT@ 10127 @LENGTH@ 4
---INS SimpleName@@MethodName:safeClose @TO@ MethodDeclaration@@public, static, void, MethodName:safeClose, final Socket socket,  @AT@ 10132 @LENGTH@ 9
---INS SingleVariableDeclaration@@final Socket socket @TO@ MethodDeclaration@@public, static, void, MethodName:safeClose, final Socket socket,  @AT@ 10142 @LENGTH@ 19
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Socket socket @AT@ 10142 @LENGTH@ 5
------INS SimpleType@@Socket @TO@ SingleVariableDeclaration@@final Socket socket @AT@ 10148 @LENGTH@ 6
------INS SimpleName@@socket @TO@ SingleVariableDeclaration@@final Socket socket @AT@ 10155 @LENGTH@ 6
---INS TryStatement@@try {  socket.close();} catch (Throwable t) {  log.errorf(t,"Failed to close resource %s",socket);} @TO@ MethodDeclaration@@public, static, void, MethodName:safeClose, final Socket socket,  @AT@ 10173 @LENGTH@ 141
------INS ExpressionStatement@@MethodInvocation:socket.close() @TO@ TryStatement@@try {  socket.close();} catch (Throwable t) {  log.errorf(t,"Failed to close resource %s",socket);} @AT@ 10191 @LENGTH@ 15
---------INS MethodInvocation@@socket.close() @TO@ ExpressionStatement@@MethodInvocation:socket.close() @AT@ 10191 @LENGTH@ 14
------------INS SimpleName@@Name:socket @TO@ MethodInvocation@@socket.close() @AT@ 10191 @LENGTH@ 6
------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@socket.close() @AT@ 10198 @LENGTH@ 7
------INS CatchClause@@catch (Throwable t) {  log.errorf(t,"Failed to close resource %s",socket);} @TO@ TryStatement@@try {  socket.close();} catch (Throwable t) {  log.errorf(t,"Failed to close resource %s",socket);} @AT@ 10217 @LENGTH@ 97
---------INS SingleVariableDeclaration@@Throwable t @TO@ CatchClause@@catch (Throwable t) {  log.errorf(t,"Failed to close resource %s",socket);} @AT@ 10224 @LENGTH@ 11
------------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable t @AT@ 10224 @LENGTH@ 9
------------INS SimpleName@@t @TO@ SingleVariableDeclaration@@Throwable t @AT@ 10234 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:log.errorf(t,"Failed to close resource %s",socket) @TO@ CatchClause@@catch (Throwable t) {  log.errorf(t,"Failed to close resource %s",socket);} @AT@ 10251 @LENGTH@ 53
------------INS MethodInvocation@@log.errorf(t,"Failed to close resource %s",socket) @TO@ ExpressionStatement@@MethodInvocation:log.errorf(t,"Failed to close resource %s",socket) @AT@ 10251 @LENGTH@ 52
---------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.errorf(t,"Failed to close resource %s",socket) @AT@ 10251 @LENGTH@ 3
---------------INS SimpleName@@MethodName:errorf:[t, "Failed to close resource %s", socket] @TO@ MethodInvocation@@log.errorf(t,"Failed to close resource %s",socket) @AT@ 10255 @LENGTH@ 48
------------------INS SimpleName@@t @TO@ SimpleName@@MethodName:errorf:[t, "Failed to close resource %s", socket] @AT@ 10262 @LENGTH@ 1
------------------INS StringLiteral@@"Failed to close resource %s" @TO@ SimpleName@@MethodName:errorf:[t, "Failed to close resource %s", socket] @AT@ 10265 @LENGTH@ 29
------------------INS SimpleName@@socket @TO@ SimpleName@@MethodName:errorf:[t, "Failed to close resource %s", socket] @AT@ 10296 @LENGTH@ 6


UPD MethodDeclaration@@protected, String, MethodName:buildAuthorizationHeader, HttpMethod method, URL url, Map<String,String> parameters,  @TO@ protected, String, MethodName:buildAuthorizationHeader, HttpMethod method, String url, Map<String,String> parameters,  @AT@ 1514 @LENGTH@ 495
---UPD SingleVariableDeclaration@@URL url @TO@ String url @AT@ 1575 @LENGTH@ 7
------UPD SimpleType@@URL @TO@ String @AT@ 1575 @LENGTH@ 3
---UPD VariableDeclarationStatement@@String adjustedUrl=adjustUrl(url.toString()); @TO@ String adjustedUrl=adjustUrl(url); @AT@ 1620 @LENGTH@ 47
------UPD VariableDeclarationFragment@@adjustedUrl=adjustUrl(url.toString()) @TO@ adjustedUrl=adjustUrl(url) @AT@ 1627 @LENGTH@ 39
---------UPD MethodInvocation@@adjustUrl(url.toString()) @TO@ adjustUrl(url) @AT@ 1641 @LENGTH@ 25
------------UPD SimpleName@@MethodName:adjustUrl:[url.toString()] @TO@ MethodName:adjustUrl:[url] @AT@ 1641 @LENGTH@ 25
---------------INS SimpleName@@url @TO@ SimpleName@@MethodName:adjustUrl:[url.toString()] @AT@ 1633 @LENGTH@ 3
---------------DEL MethodInvocation@@url.toString() @AT@ 1651 @LENGTH@ 14
------------------DEL SimpleName@@Name:url @AT@ 1651 @LENGTH@ 3
------------------DEL SimpleName@@MethodName:toString:[] @AT@ 1655 @LENGTH@ 10


UPD IfStatement@@if (!opened) {  delegate.open(new ExecutionContext());  opened=true;} @TO@ if (!opened) {  File file=setResourceToDelegate();  file.createNewFile();  Assert.state(file.canWrite(),"Output resource " + file.getAbsolutePath() + " must be writable");  delegate.open(new ExecutionContext());  opened=true;} @AT@ 2625 @LENGTH@ 78
---UPD Block@@ThenBody:{  delegate.open(new ExecutionContext());  opened=true;} @TO@ ThenBody:{  File file=setResourceToDelegate();  file.createNewFile();  Assert.state(file.canWrite(),"Output resource " + file.getAbsolutePath() + " must be writable");  delegate.open(new ExecutionContext());  opened=true;} @AT@ 2638 @LENGTH@ 65
------INS VariableDeclarationStatement@@File file=setResourceToDelegate(); @TO@ Block@@ThenBody:{  delegate.open(new ExecutionContext());  opened=true;} @AT@ 2643 @LENGTH@ 36
---------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File file=setResourceToDelegate(); @AT@ 2643 @LENGTH@ 4
---------INS VariableDeclarationFragment@@file=setResourceToDelegate() @TO@ VariableDeclarationStatement@@File file=setResourceToDelegate(); @AT@ 2648 @LENGTH@ 30
------------INS SimpleName@@file @TO@ VariableDeclarationFragment@@file=setResourceToDelegate() @AT@ 2648 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:setResourceToDelegate:[] @TO@ VariableDeclarationFragment@@file=setResourceToDelegate() @AT@ 2655 @LENGTH@ 23
------INS ExpressionStatement@@MethodInvocation:Assert.state(file.canWrite(),"Output resource " + file.getAbsolutePath() + " must be writable") @TO@ Block@@ThenBody:{  delegate.open(new ExecutionContext());  opened=true;} @AT@ 2745 @LENGTH@ 97
---------INS MethodInvocation@@Assert.state(file.canWrite(),"Output resource " + file.getAbsolutePath() + " must be writable") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(file.canWrite(),"Output resource " + file.getAbsolutePath() + " must be writable") @AT@ 2745 @LENGTH@ 96
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(file.canWrite(),"Output resource " + file.getAbsolutePath() + " must be writable") @AT@ 2745 @LENGTH@ 6
------------INS SimpleName@@MethodName:state:[file.canWrite(), "Output resource " + file.getAbsolutePath() + " must be writable"] @TO@ MethodInvocation@@Assert.state(file.canWrite(),"Output resource " + file.getAbsolutePath() + " must be writable") @AT@ 2752 @LENGTH@ 89
---------------INS MethodInvocation@@file.canWrite() @TO@ SimpleName@@MethodName:state:[file.canWrite(), "Output resource " + file.getAbsolutePath() + " must be writable"] @AT@ 2758 @LENGTH@ 15
------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.canWrite() @AT@ 2758 @LENGTH@ 4
------------------INS SimpleName@@MethodName:canWrite:[] @TO@ MethodInvocation@@file.canWrite() @AT@ 2763 @LENGTH@ 10
---------------INS InfixExpression@@"Output resource " + file.getAbsolutePath() + " must be writable" @TO@ SimpleName@@MethodName:state:[file.canWrite(), "Output resource " + file.getAbsolutePath() + " must be writable"] @AT@ 2775 @LENGTH@ 65
------------------INS StringLiteral@@"Output resource " @TO@ InfixExpression@@"Output resource " + file.getAbsolutePath() + " must be writable" @AT@ 2775 @LENGTH@ 18
------------------INS Operator@@+ @TO@ InfixExpression@@"Output resource " + file.getAbsolutePath() + " must be writable" @AT@ 2793 @LENGTH@ 1
------------------INS MethodInvocation@@file.getAbsolutePath() @TO@ InfixExpression@@"Output resource " + file.getAbsolutePath() + " must be writable" @AT@ 2796 @LENGTH@ 22
---------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getAbsolutePath() @AT@ 2796 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@file.getAbsolutePath() @AT@ 2801 @LENGTH@ 17
------------------INS StringLiteral@@" must be writable" @TO@ InfixExpression@@"Output resource " + file.getAbsolutePath() + " must be writable" @AT@ 2821 @LENGTH@ 19
------MOV ExpressionStatement@@MethodInvocation:file.createNewFile() @TO@ Block@@ThenBody:{  delegate.open(new ExecutionContext());  opened=true;} @AT@ 5323 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)) @TO@ MethodInvocation:errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)) @AT@ 4076 @LENGTH@ 66
---UPD MethodInvocation@@errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)) @TO@ errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)) @AT@ 4076 @LENGTH@ 65
------UPD SimpleName@@MethodName:errorHandler:[deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0)] @TO@ MethodName:errorHandler:[deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)] @AT@ 4076 @LENGTH@ 65
---------UPD MethodInvocation@@deadLetterChannel(URI_MOCK_ERROR).redeliverDelay(0) @TO@ deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0) @AT@ 4089 @LENGTH@ 51
------------UPD SimpleName@@MethodName:redeliverDelay:[0] @TO@ MethodName:redeliveryDelay:[0] @AT@ 4123 @LENGTH@ 17


INS IfStatement@@if (logConfigurator != null) logConfigurator.run(); @TO@ MethodDeclaration@@public, void, MethodName:run, final List<ServiceActivator> startServices,  @AT@ 3226 @LENGTH@ 51
---INS InfixExpression@@logConfigurator != null @TO@ IfStatement@@if (logConfigurator != null) logConfigurator.run(); @AT@ 3230 @LENGTH@ 23
------INS SimpleName@@logConfigurator @TO@ InfixExpression@@logConfigurator != null @AT@ 3230 @LENGTH@ 15
------INS Operator@@!= @TO@ InfixExpression@@logConfigurator != null @AT@ 3245 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@logConfigurator != null @AT@ 3249 @LENGTH@ 4
---INS Block@@ThenBody:logConfigurator.run(); @TO@ IfStatement@@if (logConfigurator != null) logConfigurator.run(); @AT@ 3255 @LENGTH@ 22
------MOV ExpressionStatement@@MethodInvocation:logConfigurator.run() @TO@ Block@@ThenBody:logConfigurator.run(); @AT@ 3226 @LENGTH@ 22


INS ExpressionStatement@@MethodInvocation:server.register("/test/",new BasicValidationHandler("GET","my=%40+camel",null,getExpectedContent())) @TO@ MethodDeclaration@@protected, void, MethodName:registerHandler, LocalTestServer server,  @AT@ 2436 @LENGTH@ 105
---INS MethodInvocation@@server.register("/test/",new BasicValidationHandler("GET","my=%40+camel",null,getExpectedContent())) @TO@ ExpressionStatement@@MethodInvocation:server.register("/test/",new BasicValidationHandler("GET","my=%40+camel",null,getExpectedContent())) @AT@ 2436 @LENGTH@ 104
------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.register("/test/",new BasicValidationHandler("GET","my=%40+camel",null,getExpectedContent())) @AT@ 2436 @LENGTH@ 6
------INS SimpleName@@MethodName:register:["/test/", new BasicValidationHandler("GET","my=%40+camel",null,getExpectedContent())] @TO@ MethodInvocation@@server.register("/test/",new BasicValidationHandler("GET","my=%40+camel",null,getExpectedContent())) @AT@ 2443 @LENGTH@ 97
---------INS StringLiteral@@"/test/" @TO@ SimpleName@@MethodName:register:["/test/", new BasicValidationHandler("GET","my=%40+camel",null,getExpectedContent())] @AT@ 2452 @LENGTH@ 8
---------INS ClassInstanceCreation@@BasicValidationHandler["GET", "my=%40+camel", null, getExpectedContent()] @TO@ SimpleName@@MethodName:register:["/test/", new BasicValidationHandler("GET","my=%40+camel",null,getExpectedContent())] @AT@ 2462 @LENGTH@ 77
------------INS New@@new @TO@ ClassInstanceCreation@@BasicValidationHandler["GET", "my=%40+camel", null, getExpectedContent()] @AT@ 2462 @LENGTH@ 3
------------INS SimpleType@@BasicValidationHandler @TO@ ClassInstanceCreation@@BasicValidationHandler["GET", "my=%40+camel", null, getExpectedContent()] @AT@ 2466 @LENGTH@ 22
------------INS StringLiteral@@"GET" @TO@ ClassInstanceCreation@@BasicValidationHandler["GET", "my=%40+camel", null, getExpectedContent()] @AT@ 2489 @LENGTH@ 5
------------INS StringLiteral@@"my=%40+camel" @TO@ ClassInstanceCreation@@BasicValidationHandler["GET", "my=%40+camel", null, getExpectedContent()] @AT@ 2496 @LENGTH@ 14
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@BasicValidationHandler["GET", "my=%40+camel", null, getExpectedContent()] @AT@ 2512 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:getExpectedContent:[] @TO@ ClassInstanceCreation@@BasicValidationHandler["GET", "my=%40+camel", null, getExpectedContent()] @AT@ 2518 @LENGTH@ 20


UPD FieldDeclaration@@private, List<IndexColumn>, [columns=new LinkedList<IndexColumn>()] @TO@ private, SortedSet<IndexColumn>, [columns=new TreeSet<IndexColumn>()] @AT@ 507 @LENGTH@ 66
---UPD ParameterizedType@@List<IndexColumn> @TO@ SortedSet<IndexColumn> @AT@ 515 @LENGTH@ 17
------UPD SimpleType@@List @TO@ SortedSet @AT@ 515 @LENGTH@ 4
---UPD VariableDeclarationFragment@@columns=new LinkedList<IndexColumn>() @TO@ columns=new TreeSet<IndexColumn>() @AT@ 533 @LENGTH@ 39
------UPD ClassInstanceCreation@@LinkedList<IndexColumn>[] @TO@ TreeSet<IndexColumn>[] @AT@ 543 @LENGTH@ 29
---------UPD ParameterizedType@@LinkedList<IndexColumn> @TO@ TreeSet<IndexColumn> @AT@ 547 @LENGTH@ 23
------------UPD SimpleType@@LinkedList @TO@ TreeSet @AT@ 547 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:System.arraycopy(wildcards,0,this.wildcards,0,wildcards.length) @TO@ MethodDeclaration@@public, voidMethodName:WildcardFileFilter, String[] wildcards, IOCase caseSensitivity,  @AT@ 4323 @LENGTH@ 68
---INS MethodInvocation@@System.arraycopy(wildcards,0,this.wildcards,0,wildcards.length) @TO@ ExpressionStatement@@MethodInvocation:System.arraycopy(wildcards,0,this.wildcards,0,wildcards.length) @AT@ 4323 @LENGTH@ 67
------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.arraycopy(wildcards,0,this.wildcards,0,wildcards.length) @AT@ 4323 @LENGTH@ 6
------INS SimpleName@@MethodName:arraycopy:[wildcards, 0, this.wildcards, 0, wildcards.length] @TO@ MethodInvocation@@System.arraycopy(wildcards,0,this.wildcards,0,wildcards.length) @AT@ 4330 @LENGTH@ 60
---------INS SimpleName@@wildcards @TO@ SimpleName@@MethodName:arraycopy:[wildcards, 0, this.wildcards, 0, wildcards.length] @AT@ 4340 @LENGTH@ 9
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[wildcards, 0, this.wildcards, 0, wildcards.length] @AT@ 4351 @LENGTH@ 1
---------INS FieldAccess@@this.wildcards @TO@ SimpleName@@MethodName:arraycopy:[wildcards, 0, this.wildcards, 0, wildcards.length] @AT@ 4354 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.wildcards @AT@ 4354 @LENGTH@ 4
------------INS SimpleName@@wildcards @TO@ FieldAccess@@this.wildcards @AT@ 4359 @LENGTH@ 9
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[wildcards, 0, this.wildcards, 0, wildcards.length] @AT@ 4370 @LENGTH@ 1
---------INS QualifiedName@@wildcards.length @TO@ SimpleName@@MethodName:arraycopy:[wildcards, 0, this.wildcards, 0, wildcards.length] @AT@ 4373 @LENGTH@ 16
------------INS SimpleName@@wildcards @TO@ QualifiedName@@wildcards.length @AT@ 4373 @LENGTH@ 9
------------INS SimpleName@@length @TO@ QualifiedName@@wildcards.length @AT@ 4383 @LENGTH@ 6


UPD FieldDeclaration@@static, final, String, [RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @TO@ static, final, String, [RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @AT@ 8219 @LENGTH@ 95
---UPD VariableDeclarationFragment@@RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8239 @LENGTH@ 74
------UPD StringLiteral@@"https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ "http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8253 @LENGTH@ 60


DEL MethodDeclaration@@protected, String, MethodName:normalizePathToProtocol, String path,  @AT@ 2406 @LENGTH@ 253
---DEL Modifier@@protected @AT@ 2406 @LENGTH@ 9
---DEL SimpleType@@String @AT@ 2416 @LENGTH@ 6
---DEL SimpleName@@MethodName:normalizePathToProtocol @AT@ 2423 @LENGTH@ 23
---DEL SingleVariableDeclaration@@String path @AT@ 2447 @LENGTH@ 11
------DEL SimpleType@@String @AT@ 2447 @LENGTH@ 6
------DEL SimpleName@@path @AT@ 2454 @LENGTH@ 4
---DEL ExpressionStatement@@Assignment:path=super.normalizePathToProtocol(path) @AT@ 2470 @LENGTH@ 43
------DEL Assignment@@path=super.normalizePathToProtocol(path) @AT@ 2470 @LENGTH@ 42
---------DEL SimpleName@@path @AT@ 2470 @LENGTH@ 4
---------DEL Operator@@= @AT@ 2474 @LENGTH@ 1
---------DEL SuperMethodInvocation@@super.normalizePathToProtocol(path) @AT@ 2477 @LENGTH@ 35
------------DEL SimpleName@@MethodName:normalizePathToProtocol:[path] @AT@ 2483 @LENGTH@ 23
------------DEL SimpleName@@path @AT@ 2507 @LENGTH@ 4
---DEL ReturnStatement@@MethodInvocation:FileUtil.stripLeadingSeparator(path) @AT@ 2609 @LENGTH@ 44
------DEL MethodInvocation@@FileUtil.stripLeadingSeparator(path) @AT@ 2616 @LENGTH@ 36
---------DEL SimpleName@@Name:FileUtil @AT@ 2616 @LENGTH@ 8
---------DEL SimpleName@@MethodName:stripLeadingSeparator:[path] @AT@ 2625 @LENGTH@ 27
------------DEL SimpleName@@path @AT@ 2647 @LENGTH@ 4


INS FieldDeclaration@@public, static, final, ServiceName, [AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server")] @TO@ TypeDeclaration@@[public, final]ServerStartTask, [ServerTask, Serializable, ObjectInputValidation] @AT@ 3404 @LENGTH@ 98
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, ServiceName, [AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server")] @AT@ 3404 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, ServiceName, [AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server")] @AT@ 3411 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, ServiceName, [AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server")] @AT@ 3418 @LENGTH@ 5
---INS SimpleType@@ServiceName @TO@ FieldDeclaration@@public, static, final, ServiceName, [AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server")] @AT@ 3424 @LENGTH@ 11
---MOV VariableDeclarationFragment@@builder=batchBuilder.addService(ServiceName.JBOSS.append("as","server"),Service.NULL) @TO@ FieldDeclaration@@public, static, final, ServiceName, [AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server")] @AT@ 6250 @LENGTH@ 89
------MOV MethodInvocation@@ServiceName.JBOSS.append("as","server") @TO@ VariableDeclarationFragment@@builder=batchBuilder.addService(ServiceName.JBOSS.append("as","server"),Service.NULL) @AT@ 6284 @LENGTH@ 40


INS MethodDeclaration@@public, static, String, MethodName:stripFirstLeadingSeparator, String name,  @TO@ TypeDeclaration@@[public, final]FileUtil,  @AT@ 2953 @LENGTH@ 271
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:stripFirstLeadingSeparator, String name,  @AT@ 2953 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:stripFirstLeadingSeparator, String name,  @AT@ 2960 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:stripFirstLeadingSeparator, String name,  @AT@ 2967 @LENGTH@ 6
---INS SimpleName@@MethodName:stripFirstLeadingSeparator @TO@ MethodDeclaration@@public, static, String, MethodName:stripFirstLeadingSeparator, String name,  @AT@ 2974 @LENGTH@ 26
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, static, String, MethodName:stripFirstLeadingSeparator, String name,  @AT@ 3001 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 3001 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 3008 @LENGTH@ 4
---INS IfStatement@@if (name == null) {  return null;} @TO@ MethodDeclaration@@public, static, String, MethodName:stripFirstLeadingSeparator, String name,  @AT@ 3024 @LENGTH@ 54
------INS InfixExpression@@name == null @TO@ IfStatement@@if (name == null) {  return null;} @AT@ 3028 @LENGTH@ 12
---------INS SimpleName@@name @TO@ InfixExpression@@name == null @AT@ 3028 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@name == null @AT@ 3032 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@name == null @AT@ 3036 @LENGTH@ 4
------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (name == null) {  return null;} @AT@ 3042 @LENGTH@ 36
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 3056 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 3063 @LENGTH@ 4
---INS IfStatement@@if (name.startsWith("/") || name.startsWith(File.separator)) {  name=name.substring(1);} @TO@ MethodDeclaration@@public, static, String, MethodName:stripFirstLeadingSeparator, String name,  @AT@ 3087 @LENGTH@ 110
------INS InfixExpression@@name.startsWith("/") || name.startsWith(File.separator) @TO@ IfStatement@@if (name.startsWith("/") || name.startsWith(File.separator)) {  name=name.substring(1);} @AT@ 3091 @LENGTH@ 55
---------INS MethodInvocation@@name.startsWith("/") @TO@ InfixExpression@@name.startsWith("/") || name.startsWith(File.separator) @AT@ 3091 @LENGTH@ 20
------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.startsWith("/") @AT@ 3091 @LENGTH@ 4
------------INS SimpleName@@MethodName:startsWith:["/"] @TO@ MethodInvocation@@name.startsWith("/") @AT@ 3096 @LENGTH@ 15
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:startsWith:["/"] @AT@ 3107 @LENGTH@ 3
---------INS Operator@@|| @TO@ InfixExpression@@name.startsWith("/") || name.startsWith(File.separator) @AT@ 3111 @LENGTH@ 2
---------INS MethodInvocation@@name.startsWith(File.separator) @TO@ InfixExpression@@name.startsWith("/") || name.startsWith(File.separator) @AT@ 3115 @LENGTH@ 31
------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.startsWith(File.separator) @AT@ 3115 @LENGTH@ 4
------------INS SimpleName@@MethodName:startsWith:[File.separator] @TO@ MethodInvocation@@name.startsWith(File.separator) @AT@ 3120 @LENGTH@ 26
---------------INS QualifiedName@@File.separator @TO@ SimpleName@@MethodName:startsWith:[File.separator] @AT@ 3131 @LENGTH@ 14
------------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 3131 @LENGTH@ 4
------------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 3136 @LENGTH@ 9
------INS Block@@ThenBody:{  name=name.substring(1);} @TO@ IfStatement@@if (name.startsWith("/") || name.startsWith(File.separator)) {  name=name.substring(1);} @AT@ 3148 @LENGTH@ 49
---------INS ExpressionStatement@@Assignment:name=name.substring(1) @TO@ Block@@ThenBody:{  name=name.substring(1);} @AT@ 3162 @LENGTH@ 25
------------INS Assignment@@name=name.substring(1) @TO@ ExpressionStatement@@Assignment:name=name.substring(1) @AT@ 3162 @LENGTH@ 24
---------------INS SimpleName@@name @TO@ Assignment@@name=name.substring(1) @AT@ 3162 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@name=name.substring(1) @AT@ 3166 @LENGTH@ 1
---------------INS MethodInvocation@@name.substring(1) @TO@ Assignment@@name=name.substring(1) @AT@ 3169 @LENGTH@ 17
------------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.substring(1) @AT@ 3169 @LENGTH@ 4
------------------INS SimpleName@@MethodName:substring:[1] @TO@ MethodInvocation@@name.substring(1) @AT@ 3174 @LENGTH@ 12
---------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:substring:[1] @AT@ 3184 @LENGTH@ 1
---INS ReturnStatement@@SimpleName:name @TO@ MethodDeclaration@@public, static, String, MethodName:stripFirstLeadingSeparator, String name,  @AT@ 3206 @LENGTH@ 12
------INS SimpleName@@name @TO@ ReturnStatement@@SimpleName:name @AT@ 3213 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:readElement, final XMLExtendedStreamReader xmlExtendedStreamReader, final ParseResult<ManagedBeansSubsystemElement> result, XMLStreamException,  @TO@ public, void, MethodName:readElement, final XMLExtendedStreamReader xmlExtendedStreamReader, final ParseResult<? super ManagedBeansSubsystemElement> result, XMLStreamException,  @AT@ 380 @LENGTH@ 253
---UPD SingleVariableDeclaration@@final ParseResult<ManagedBeansSubsystemElement> result @TO@ final ParseResult<? super ManagedBeansSubsystemElement> result @AT@ 459 @LENGTH@ 54
------UPD ParameterizedType@@ParseResult<ManagedBeansSubsystemElement> @TO@ ParseResult<? super ManagedBeansSubsystemElement> @AT@ 465 @LENGTH@ 41
---------DEL SimpleType@@ManagedBeansSubsystemElement @AT@ 477 @LENGTH@ 28
---------INS WildcardType@@? @TO@ ParameterizedType@@ParseResult<ManagedBeansSubsystemElement> @AT@ 485 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:addDeploymentProcessor(batchBuilder,new NestedJarInlineProcessor(),ModuleDependencyProcessor.PRIORITY) @TO@ MethodInvocation:addDeploymentProcessor(batchBuilder,new NestedJarInlineProcessor(),NestedJarInlineProcessor.PRIORITY) @AT@ 4715 @LENGTH@ 105
---UPD MethodInvocation@@addDeploymentProcessor(batchBuilder,new NestedJarInlineProcessor(),ModuleDependencyProcessor.PRIORITY) @TO@ addDeploymentProcessor(batchBuilder,new NestedJarInlineProcessor(),NestedJarInlineProcessor.PRIORITY) @AT@ 4715 @LENGTH@ 104
------UPD SimpleName@@MethodName:addDeploymentProcessor:[batchBuilder, new NestedJarInlineProcessor(), ModuleDependencyProcessor.PRIORITY] @TO@ MethodName:addDeploymentProcessor:[batchBuilder, new NestedJarInlineProcessor(), NestedJarInlineProcessor.PRIORITY] @AT@ 4715 @LENGTH@ 104
---------UPD QualifiedName@@ModuleDependencyProcessor.PRIORITY @TO@ NestedJarInlineProcessor.PRIORITY @AT@ 4784 @LENGTH@ 34
------------UPD SimpleName@@ModuleDependencyProcessor @TO@ NestedJarInlineProcessor @AT@ 4784 @LENGTH@ 25


UPD ExpressionStatement@@Assignment:this.beanName=name @TO@ Assignment:this.beanName=beanName @AT@ 4149 @LENGTH@ 21
---UPD Assignment@@this.beanName=name @TO@ this.beanName=beanName @AT@ 4149 @LENGTH@ 20
------UPD SimpleName@@name @TO@ beanName @AT@ 4165 @LENGTH@ 4


INS FieldDeclaration@@public, static, final, ServiceName, [AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server")] @TO@ TypeDeclaration@@[public, final]ServerStartTask, [ServerTask, Serializable, ObjectInputValidation] @AT@ 3404 @LENGTH@ 98
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, ServiceName, [AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server")] @AT@ 3404 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, ServiceName, [AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server")] @AT@ 3411 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, ServiceName, [AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server")] @AT@ 3418 @LENGTH@ 5
---INS SimpleType@@ServiceName @TO@ FieldDeclaration@@public, static, final, ServiceName, [AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server")] @AT@ 3424 @LENGTH@ 11
---MOV VariableDeclarationFragment@@builder=batchBuilder.addService(ServiceName.JBOSS.append("as","server"),Service.NULL) @TO@ FieldDeclaration@@public, static, final, ServiceName, [AS_SERVER_SERVICE_NAME=ServiceName.JBOSS.append("as","server")] @AT@ 6250 @LENGTH@ 89
------MOV MethodInvocation@@ServiceName.JBOSS.append("as","server") @TO@ VariableDeclarationFragment@@builder=batchBuilder.addService(ServiceName.JBOSS.append("as","server"),Service.NULL) @AT@ 6284 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:assertTrue("Should complete all messages, was " + bar.getReceivedCounter(),bar.getReceivedCounter() >= 4) @TO@ MethodInvocation:assertEquals(5,bar.getReceivedCounter()) @AT@ 1901 @LENGTH@ 107
---UPD MethodInvocation@@assertTrue("Should complete all messages, was " + bar.getReceivedCounter(),bar.getReceivedCounter() >= 4) @TO@ assertEquals(5,bar.getReceivedCounter()) @AT@ 1901 @LENGTH@ 106
------UPD SimpleName@@MethodName:assertTrue:["Should complete all messages, was " + bar.getReceivedCounter(), bar.getReceivedCounter() >= 4] @TO@ MethodName:assertEquals:[5, bar.getReceivedCounter()] @AT@ 1901 @LENGTH@ 106
---------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:assertTrue:["Should complete all messages, was " + bar.getReceivedCounter(), bar.getReceivedCounter() >= 4] @AT@ 1866 @LENGTH@ 1
---------INS MethodInvocation@@bar.getReceivedCounter() @TO@ SimpleName@@MethodName:assertTrue:["Should complete all messages, was " + bar.getReceivedCounter(), bar.getReceivedCounter() >= 4] @AT@ 1869 @LENGTH@ 24
------------MOV SimpleName@@Name:bar @TO@ MethodInvocation@@bar.getReceivedCounter() @AT@ 1951 @LENGTH@ 3
------------MOV SimpleName@@MethodName:getReceivedCounter:[] @TO@ MethodInvocation@@bar.getReceivedCounter() @AT@ 1955 @LENGTH@ 20
---------DEL InfixExpression@@"Should complete all messages, was " + bar.getReceivedCounter() @AT@ 1912 @LENGTH@ 63
------------DEL StringLiteral@@"Should complete all messages, was " @AT@ 1912 @LENGTH@ 36
------------DEL Operator@@+ @AT@ 1948 @LENGTH@ 1
------------DEL MethodInvocation@@bar.getReceivedCounter() @AT@ 1951 @LENGTH@ 24
---------DEL InfixExpression@@bar.getReceivedCounter() >= 4 @AT@ 1977 @LENGTH@ 29
------------DEL MethodInvocation@@bar.getReceivedCounter() @AT@ 1977 @LENGTH@ 24
---------------DEL SimpleName@@Name:bar @AT@ 1977 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:getReceivedCounter:[] @AT@ 1981 @LENGTH@ 20
------------DEL Operator@@>= @AT@ 2001 @LENGTH@ 2
------------DEL NumberLiteral@@4 @AT@ 2005 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("Hello World") @TO@ MethodInvocation:mock.expectedMessageCount(1) @AT@ 2138 @LENGTH@ 43
---UPD MethodInvocation@@mock.expectedBodiesReceived("Hello World") @TO@ mock.expectedMessageCount(1) @AT@ 2138 @LENGTH@ 42
------UPD SimpleName@@MethodName:expectedBodiesReceived:["Hello World"] @TO@ MethodName:expectedMessageCount:[1] @AT@ 2143 @LENGTH@ 37
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedBodiesReceived:["Hello World"] @AT@ 2152 @LENGTH@ 1
---------DEL StringLiteral@@"Hello World" @AT@ 2166 @LENGTH@ 13


DEL FieldDeclaration@@private, static, int, [count] @AT@ 389 @LENGTH@ 25
---DEL Modifier@@private @AT@ 389 @LENGTH@ 7
---DEL Modifier@@static @AT@ 397 @LENGTH@ 6
---DEL PrimitiveType@@int @AT@ 404 @LENGTH@ 3
---DEL VariableDeclarationFragment@@count @AT@ 408 @LENGTH@ 5
------DEL SimpleName@@count @AT@ 408 @LENGTH@ 5


UPD MethodDeclaration@@public, ProcessorDefinition<? extends ProcessorDefinition<?>>, MethodName:end,  @TO@ public, ProcessorDefinition, MethodName:end,  @AT@ 5002 @LENGTH@ 246
---INS SimpleType@@ProcessorDefinition @TO@ MethodDeclaration@@public, ProcessorDefinition<? extends ProcessorDefinition<?>>, MethodName:end,  @AT@ 4974 @LENGTH@ 19
---DEL ParameterizedType@@ProcessorDefinition<? extends ProcessorDefinition<?>> @AT@ 5009 @LENGTH@ 53
------DEL SimpleType@@ProcessorDefinition @AT@ 5009 @LENGTH@ 19
------DEL WildcardType@@? @AT@ 5029 @LENGTH@ 32


UPD Block@@ElseBody:{  container.render(attributeToRender,new Object[]{request,response});} @TO@ ElseBody:{  container.startContext(request,response).inheritCascadedAttributes(compositeDefinition);  container.render(attributeToRender,request,response);  container.endContext(request,response);} @AT@ 5118 @LENGTH@ 85
---INS ExpressionStatement@@MethodInvocation:container.startContext(request,response).inheritCascadedAttributes(compositeDefinition) @TO@ Block@@ElseBody:{  container.render(attributeToRender,new Object[]{request,response});} @AT@ 5125 @LENGTH@ 89
------INS MethodInvocation@@container.startContext(request,response).inheritCascadedAttributes(compositeDefinition) @TO@ ExpressionStatement@@MethodInvocation:container.startContext(request,response).inheritCascadedAttributes(compositeDefinition) @AT@ 5125 @LENGTH@ 88
---------INS MethodInvocation@@MethodName:startContext:[request, response] @TO@ MethodInvocation@@container.startContext(request,response).inheritCascadedAttributes(compositeDefinition) @AT@ 5125 @LENGTH@ 41
------------INS SimpleName@@request @TO@ MethodInvocation@@MethodName:startContext:[request, response] @AT@ 5148 @LENGTH@ 7
------------INS SimpleName@@response @TO@ MethodInvocation@@MethodName:startContext:[request, response] @AT@ 5157 @LENGTH@ 8
---------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.startContext(request,response).inheritCascadedAttributes(compositeDefinition) @AT@ 5125 @LENGTH@ 9
---------INS SimpleName@@MethodName:inheritCascadedAttributes:[compositeDefinition] @TO@ MethodInvocation@@container.startContext(request,response).inheritCascadedAttributes(compositeDefinition) @AT@ 5167 @LENGTH@ 46
------------INS SimpleName@@compositeDefinition @TO@ SimpleName@@MethodName:inheritCascadedAttributes:[compositeDefinition] @AT@ 5193 @LENGTH@ 19
---UPD ExpressionStatement@@MethodInvocation:container.render(attributeToRender,new Object[]{request,response}) @TO@ MethodInvocation:container.render(attributeToRender,request,response) @AT@ 5125 @LENGTH@ 72
------UPD MethodInvocation@@container.render(attributeToRender,new Object[]{request,response}) @TO@ container.render(attributeToRender,request,response) @AT@ 5125 @LENGTH@ 71
---------UPD SimpleName@@MethodName:render:[attributeToRender, new Object[]{request,response}] @TO@ MethodName:render:[attributeToRender, request, response] @AT@ 5135 @LENGTH@ 61
------------DEL ArrayCreation@@new Object[]{request,response} @AT@ 5161 @LENGTH@ 34
---------------DEL ArrayType@@Object[] @AT@ 5165 @LENGTH@ 8
------------------DEL SimpleType@@Object @AT@ 5165 @LENGTH@ 6
---------------DEL ArrayInitializer@@{request,response} @AT@ 5174 @LENGTH@ 21
------------------DEL SimpleName@@request @AT@ 5176 @LENGTH@ 7
------------------DEL SimpleName@@response @AT@ 5185 @LENGTH@ 8
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:render:[attributeToRender, new Object[]{request,response}] @AT@ 5256 @LENGTH@ 7
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:render:[attributeToRender, new Object[]{request,response}] @AT@ 5265 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:container.endContext(request,response) @TO@ Block@@ElseBody:{  container.render(attributeToRender,new Object[]{request,response});} @AT@ 5281 @LENGTH@ 40
------INS MethodInvocation@@container.endContext(request,response) @TO@ ExpressionStatement@@MethodInvocation:container.endContext(request,response) @AT@ 5281 @LENGTH@ 39
---------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.endContext(request,response) @AT@ 5281 @LENGTH@ 9
---------INS SimpleName@@MethodName:endContext:[request, response] @TO@ MethodInvocation@@container.endContext(request,response) @AT@ 5291 @LENGTH@ 29
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:endContext:[request, response] @AT@ 5302 @LENGTH@ 7
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:endContext:[request, response] @AT@ 5311 @LENGTH@ 8


UPD IfStatement@@if (path.equals("/org/apache/camel/osgi/test") && filePattern.equals("*.class")) {  List<URL> urls=new ArrayList<URL>();  URL url=getClass().getClassLoader().getResource("org/apache/camel/osgi/test/MyTypeConverter.class");  urls.add(url);  url=getClass().getClassLoader().getResource("org/apache/camel/osgi/test/MyRouteBuilder.class");  urls.add(url);  return new ListEnumeration(urls);} else {  return super.findEntries(path,filePattern,recurse);} @TO@ if (path.equals("/org/apache/camel/core/osgi/test") && filePattern.equals("*.class")) {  List<URL> urls=new ArrayList<URL>();  URL url=getClass().getClassLoader().getResource("org/apache/camel/core/osgi/test/MyTypeConverter.class");  urls.add(url);  url=getClass().getClassLoader().getResource("org/apache/camel/core/osgi/test/MyRouteBuilder.class");  urls.add(url);  return new ListEnumeration(urls);} else {  return super.findEntries(path,filePattern,recurse);} @AT@ 3319 @LENGTH@ 551
---UPD InfixExpression@@path.equals("/org/apache/camel/osgi/test") && filePattern.equals("*.class") @TO@ path.equals("/org/apache/camel/core/osgi/test") && filePattern.equals("*.class") @AT@ 3323 @LENGTH@ 75
------UPD MethodInvocation@@path.equals("/org/apache/camel/osgi/test") @TO@ path.equals("/org/apache/camel/core/osgi/test") @AT@ 3323 @LENGTH@ 42
---------UPD SimpleName@@MethodName:equals:["/org/apache/camel/osgi/test"] @TO@ MethodName:equals:["/org/apache/camel/core/osgi/test"] @AT@ 3328 @LENGTH@ 37
------------UPD StringLiteral@@"/org/apache/camel/osgi/test" @TO@ "/org/apache/camel/core/osgi/test" @AT@ 3335 @LENGTH@ 29
---UPD Block@@ThenBody:{  List<URL> urls=new ArrayList<URL>();  URL url=getClass().getClassLoader().getResource("org/apache/camel/osgi/test/MyTypeConverter.class");  urls.add(url);  url=getClass().getClassLoader().getResource("org/apache/camel/osgi/test/MyRouteBuilder.class");  urls.add(url);  return new ListEnumeration(urls);} @TO@ ThenBody:{  List<URL> urls=new ArrayList<URL>();  URL url=getClass().getClassLoader().getResource("org/apache/camel/core/osgi/test/MyTypeConverter.class");  urls.add(url);  url=getClass().getClassLoader().getResource("org/apache/camel/core/osgi/test/MyRouteBuilder.class");  urls.add(url);  return new ListEnumeration(urls);} @AT@ 3400 @LENGTH@ 387
------UPD VariableDeclarationStatement@@URL url=getClass().getClassLoader().getResource("org/apache/camel/osgi/test/MyTypeConverter.class"); @TO@ URL url=getClass().getClassLoader().getResource("org/apache/camel/core/osgi/test/MyTypeConverter.class"); @AT@ 3465 @LENGTH@ 102
---------UPD VariableDeclarationFragment@@url=getClass().getClassLoader().getResource("org/apache/camel/osgi/test/MyTypeConverter.class") @TO@ url=getClass().getClassLoader().getResource("org/apache/camel/core/osgi/test/MyTypeConverter.class") @AT@ 3469 @LENGTH@ 97
------------UPD MethodInvocation@@getClass().getClassLoader().getResource("org/apache/camel/osgi/test/MyTypeConverter.class") @TO@ getClass().getClassLoader().getResource("org/apache/camel/core/osgi/test/MyTypeConverter.class") @AT@ 3475 @LENGTH@ 91
---------------UPD SimpleName@@MethodName:getResource:["org/apache/camel/osgi/test/MyTypeConverter.class"] @TO@ MethodName:getResource:["org/apache/camel/core/osgi/test/MyTypeConverter.class"] @AT@ 3503 @LENGTH@ 63
------------------UPD StringLiteral@@"org/apache/camel/osgi/test/MyTypeConverter.class" @TO@ "org/apache/camel/core/osgi/test/MyTypeConverter.class" @AT@ 3515 @LENGTH@ 50
------UPD ExpressionStatement@@Assignment:url=getClass().getClassLoader().getResource("org/apache/camel/osgi/test/MyRouteBuilder.class") @TO@ Assignment:url=getClass().getClassLoader().getResource("org/apache/camel/core/osgi/test/MyRouteBuilder.class") @AT@ 3607 @LENGTH@ 97
---------UPD Assignment@@url=getClass().getClassLoader().getResource("org/apache/camel/osgi/test/MyRouteBuilder.class") @TO@ url=getClass().getClassLoader().getResource("org/apache/camel/core/osgi/test/MyRouteBuilder.class") @AT@ 3607 @LENGTH@ 96
------------UPD MethodInvocation@@getClass().getClassLoader().getResource("org/apache/camel/osgi/test/MyRouteBuilder.class") @TO@ getClass().getClassLoader().getResource("org/apache/camel/core/osgi/test/MyRouteBuilder.class") @AT@ 3613 @LENGTH@ 90
---------------UPD SimpleName@@MethodName:getResource:["org/apache/camel/osgi/test/MyRouteBuilder.class"] @TO@ MethodName:getResource:["org/apache/camel/core/osgi/test/MyRouteBuilder.class"] @AT@ 3641 @LENGTH@ 62
------------------UPD StringLiteral@@"org/apache/camel/osgi/test/MyRouteBuilder.class" @TO@ "org/apache/camel/core/osgi/test/MyRouteBuilder.class" @AT@ 3653 @LENGTH@ 49


UPD TypeDeclaration@@[public]TestAllPredicate, AbstractTestAnyAllOnePredicate<Integer> @TO@ [@SuppressWarnings("boxing"), public]TestAllPredicate, AbstractTestAnyAllOnePredicate<Integer> @AT@ 584 @LENGTH@ 3696
---INS SingleMemberAnnotation@@@SuppressWarnings("boxing") @TO@ TypeDeclaration@@[public]TestAllPredicate, AbstractTestAnyAllOnePredicate<Integer> @AT@ 584 @LENGTH@ 27


DEL MethodDeclaration@@private, static, boolean, MethodName:hasExceptionBeenHandledByErrorHandler, Exchange nextExchange,  @AT@ 1166 @LENGTH@ 184
---DEL Modifier@@private @AT@ 1166 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1174 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1181 @LENGTH@ 7
---DEL SimpleName@@MethodName:hasExceptionBeenHandledByErrorHandler @AT@ 1189 @LENGTH@ 37
---DEL SingleVariableDeclaration@@Exchange nextExchange @AT@ 1227 @LENGTH@ 21
------DEL SimpleType@@Exchange @AT@ 1227 @LENGTH@ 8
------DEL SimpleName@@nextExchange @AT@ 1236 @LENGTH@ 12
---DEL ReturnStatement@@MethodInvocation:Boolean.TRUE.equals(nextExchange.getProperty(Exchange.ERRORHANDLER_HANDLED)) @AT@ 1260 @LENGTH@ 84
------DEL MethodInvocation@@Boolean.TRUE.equals(nextExchange.getProperty(Exchange.ERRORHANDLER_HANDLED)) @AT@ 1267 @LENGTH@ 76
---------DEL QualifiedName@@Name:Boolean.TRUE @AT@ 1267 @LENGTH@ 12
---------DEL SimpleName@@MethodName:equals:[nextExchange.getProperty(Exchange.ERRORHANDLER_HANDLED)] @AT@ 1280 @LENGTH@ 63
------------DEL MethodInvocation@@nextExchange.getProperty(Exchange.ERRORHANDLER_HANDLED) @AT@ 1287 @LENGTH@ 55
---------------DEL SimpleName@@Name:nextExchange @AT@ 1287 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:getProperty:[Exchange.ERRORHANDLER_HANDLED] @AT@ 1300 @LENGTH@ 42
------------------DEL QualifiedName@@Exchange.ERRORHANDLER_HANDLED @AT@ 1312 @LENGTH@ 29
---------------------DEL SimpleName@@Exchange @AT@ 1312 @LENGTH@ 8
---------------------DEL SimpleName@@ERRORHANDLER_HANDLED @AT@ 1321 @LENGTH@ 20


UPD IfStatement@@if (locale != null && !locale.isEmpty()) {  String[] result=locale.split("-");  if (result.length <= 2) {    return result.length == 1 ? new Locale(result[0]) : new Locale(result[0],result[1]);  }} @TO@ if (locale != null && !(locale.length() == 0)) {  String[] result=locale.split("-");  if (result.length <= 2) {    return result.length == 1 ? new Locale(result[0]) : new Locale(result[0],result[1]);  }} @AT@ 4589 @LENGTH@ 255
---UPD InfixExpression@@locale != null && !locale.isEmpty() @TO@ locale != null && !(locale.length() == 0) @AT@ 4593 @LENGTH@ 35
------UPD PrefixExpression@@!locale.isEmpty() @TO@ !(locale.length() == 0) @AT@ 4611 @LENGTH@ 17
---------INS ParenthesizedExpression@@(locale.length() == 0) @TO@ PrefixExpression@@!locale.isEmpty() @AT@ 4612 @LENGTH@ 22
------------INS InfixExpression@@locale.length() == 0 @TO@ ParenthesizedExpression@@(locale.length() == 0) @AT@ 4613 @LENGTH@ 20
---------------INS MethodInvocation@@locale.length() @TO@ InfixExpression@@locale.length() == 0 @AT@ 4613 @LENGTH@ 15
------------------MOV SimpleName@@Name:locale @TO@ MethodInvocation@@locale.length() @AT@ 4612 @LENGTH@ 6
------------------MOV SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@locale.length() @AT@ 4619 @LENGTH@ 9
---------------INS Operator@@== @TO@ InfixExpression@@locale.length() == 0 @AT@ 4628 @LENGTH@ 2
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@locale.length() == 0 @AT@ 4632 @LENGTH@ 1
---------DEL MethodInvocation@@locale.isEmpty() @AT@ 4612 @LENGTH@ 16


UPD FieldDeclaration@@static, final, String, [RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @TO@ static, final, String, [RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json"] @AT@ 8199 @LENGTH@ 94
---UPD VariableDeclarationFragment@@RETWEET_URL="http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ RETWEET_URL="https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8219 @LENGTH@ 73
------UPD StringLiteral@@"http://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @TO@ "https://api.twitter.com/1/statuses/retweet/{tweet_id}.json" @AT@ 8233 @LENGTH@ 59


INS ExpressionStatement@@MethodInvocation:streamWriter.writeEndElement() @TO@ MethodDeclaration@@public, void, MethodName:writeContent, XMLExtendedStreamWriter streamWriter, XMLStreamException,  @AT@ 2216 @LENGTH@ 31
---INS MethodInvocation@@streamWriter.writeEndElement() @TO@ ExpressionStatement@@MethodInvocation:streamWriter.writeEndElement() @AT@ 2216 @LENGTH@ 30
------INS SimpleName@@Name:streamWriter @TO@ MethodInvocation@@streamWriter.writeEndElement() @AT@ 2216 @LENGTH@ 12
------INS SimpleName@@MethodName:writeEndElement:[] @TO@ MethodInvocation@@streamWriter.writeEndElement() @AT@ 2229 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:this.socketBindings.registerSocket(this) @TO@ MethodInvocation:this.socketBindings.registerBinding(this) @AT@ 1749 @LENGTH@ 41
---UPD MethodInvocation@@this.socketBindings.registerSocket(this) @TO@ this.socketBindings.registerBinding(this) @AT@ 1749 @LENGTH@ 40
------UPD SimpleName@@MethodName:registerSocket:[this] @TO@ MethodName:registerBinding:[this] @AT@ 1769 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:from("file://target/enrich?move=.done").to("mock:start").pollEnrich("file://target/enrichdata?move=.done").to("mock:result") @TO@ MethodInvocation:from("file://target/enrich?move=.done").to("mock:start").pollEnrich("file://target/enrichdata?move=.done",5000).to("mock:result") @AT@ 2159 @LENGTH@ 188
---UPD MethodInvocation@@from("file://target/enrich?move=.done").to("mock:start").pollEnrich("file://target/enrichdata?move=.done").to("mock:result") @TO@ from("file://target/enrich?move=.done").to("mock:start").pollEnrich("file://target/enrichdata?move=.done",5000).to("mock:result") @AT@ 2159 @LENGTH@ 187
------UPD MethodInvocation@@MethodName:pollEnrich:["file://target/enrichdata?move=.done"] @TO@ MethodName:pollEnrich:["file://target/enrichdata?move=.done", 5000] @AT@ 2159 @LENGTH@ 148
---------INS NumberLiteral@@5000 @TO@ MethodInvocation@@MethodName:pollEnrich:["file://target/enrichdata?move=.done"] @AT@ 2308 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testHasLeadingSeparator,  @TO@ TypeDeclaration@@[public]FileUtilTest, TestCase @AT@ 1793 @LENGTH@ 526
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testHasLeadingSeparator,  @AT@ 1793 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testHasLeadingSeparator,  @AT@ 1800 @LENGTH@ 4
---INS SimpleName@@MethodName:testHasLeadingSeparator @TO@ MethodDeclaration@@public, void, MethodName:testHasLeadingSeparator,  @AT@ 1805 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertEquals(false,FileUtil.hasLeadingSeparator(null)) @TO@ MethodDeclaration@@public, void, MethodName:testHasLeadingSeparator,  @AT@ 1841 @LENGTH@ 56
------INS MethodInvocation@@assertEquals(false,FileUtil.hasLeadingSeparator(null)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(false,FileUtil.hasLeadingSeparator(null)) @AT@ 1841 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertEquals:[false, FileUtil.hasLeadingSeparator(null)] @TO@ MethodInvocation@@assertEquals(false,FileUtil.hasLeadingSeparator(null)) @AT@ 1841 @LENGTH@ 55
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertEquals:[false, FileUtil.hasLeadingSeparator(null)] @AT@ 1854 @LENGTH@ 5
------------INS MethodInvocation@@FileUtil.hasLeadingSeparator(null) @TO@ SimpleName@@MethodName:assertEquals:[false, FileUtil.hasLeadingSeparator(null)] @AT@ 1861 @LENGTH@ 34
---------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator(null) @AT@ 1861 @LENGTH@ 8
---------------INS SimpleName@@MethodName:hasLeadingSeparator:[null] @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator(null) @AT@ 1870 @LENGTH@ 25
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:hasLeadingSeparator:[null] @AT@ 1890 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals(false,FileUtil.hasLeadingSeparator("foo")) @TO@ MethodDeclaration@@public, void, MethodName:testHasLeadingSeparator,  @AT@ 1906 @LENGTH@ 57
------INS MethodInvocation@@assertEquals(false,FileUtil.hasLeadingSeparator("foo")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(false,FileUtil.hasLeadingSeparator("foo")) @AT@ 1906 @LENGTH@ 56
---------INS SimpleName@@MethodName:assertEquals:[false, FileUtil.hasLeadingSeparator("foo")] @TO@ MethodInvocation@@assertEquals(false,FileUtil.hasLeadingSeparator("foo")) @AT@ 1906 @LENGTH@ 56
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertEquals:[false, FileUtil.hasLeadingSeparator("foo")] @AT@ 1919 @LENGTH@ 5
------------INS MethodInvocation@@FileUtil.hasLeadingSeparator("foo") @TO@ SimpleName@@MethodName:assertEquals:[false, FileUtil.hasLeadingSeparator("foo")] @AT@ 1926 @LENGTH@ 35
---------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator("foo") @AT@ 1926 @LENGTH@ 8
---------------INS SimpleName@@MethodName:hasLeadingSeparator:["foo"] @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator("foo") @AT@ 1935 @LENGTH@ 26
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:hasLeadingSeparator:["foo"] @AT@ 1955 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(false,FileUtil.hasLeadingSeparator("foo/bar")) @TO@ MethodDeclaration@@public, void, MethodName:testHasLeadingSeparator,  @AT@ 1972 @LENGTH@ 61
------INS MethodInvocation@@assertEquals(false,FileUtil.hasLeadingSeparator("foo/bar")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(false,FileUtil.hasLeadingSeparator("foo/bar")) @AT@ 1972 @LENGTH@ 60
---------INS SimpleName@@MethodName:assertEquals:[false, FileUtil.hasLeadingSeparator("foo/bar")] @TO@ MethodInvocation@@assertEquals(false,FileUtil.hasLeadingSeparator("foo/bar")) @AT@ 1972 @LENGTH@ 60
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertEquals:[false, FileUtil.hasLeadingSeparator("foo/bar")] @AT@ 1985 @LENGTH@ 5
------------INS MethodInvocation@@FileUtil.hasLeadingSeparator("foo/bar") @TO@ SimpleName@@MethodName:assertEquals:[false, FileUtil.hasLeadingSeparator("foo/bar")] @AT@ 1992 @LENGTH@ 39
---------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator("foo/bar") @AT@ 1992 @LENGTH@ 8
---------------INS SimpleName@@MethodName:hasLeadingSeparator:["foo/bar"] @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator("foo/bar") @AT@ 2001 @LENGTH@ 30
------------------INS StringLiteral@@"foo/bar" @TO@ SimpleName@@MethodName:hasLeadingSeparator:["foo/bar"] @AT@ 2021 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(false,FileUtil.hasLeadingSeparator("foo/")) @TO@ MethodDeclaration@@public, void, MethodName:testHasLeadingSeparator,  @AT@ 2042 @LENGTH@ 58
------INS MethodInvocation@@assertEquals(false,FileUtil.hasLeadingSeparator("foo/")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(false,FileUtil.hasLeadingSeparator("foo/")) @AT@ 2042 @LENGTH@ 57
---------INS SimpleName@@MethodName:assertEquals:[false, FileUtil.hasLeadingSeparator("foo/")] @TO@ MethodInvocation@@assertEquals(false,FileUtil.hasLeadingSeparator("foo/")) @AT@ 2042 @LENGTH@ 57
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertEquals:[false, FileUtil.hasLeadingSeparator("foo/")] @AT@ 2055 @LENGTH@ 5
------------INS MethodInvocation@@FileUtil.hasLeadingSeparator("foo/") @TO@ SimpleName@@MethodName:assertEquals:[false, FileUtil.hasLeadingSeparator("foo/")] @AT@ 2062 @LENGTH@ 36
---------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator("foo/") @AT@ 2062 @LENGTH@ 8
---------------INS SimpleName@@MethodName:hasLeadingSeparator:["foo/"] @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator("foo/") @AT@ 2071 @LENGTH@ 27
------------------INS StringLiteral@@"foo/" @TO@ SimpleName@@MethodName:hasLeadingSeparator:["foo/"] @AT@ 2091 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals(true,FileUtil.hasLeadingSeparator("/foo/bar")) @TO@ MethodDeclaration@@public, void, MethodName:testHasLeadingSeparator,  @AT@ 2109 @LENGTH@ 61
------INS MethodInvocation@@assertEquals(true,FileUtil.hasLeadingSeparator("/foo/bar")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(true,FileUtil.hasLeadingSeparator("/foo/bar")) @AT@ 2109 @LENGTH@ 60
---------INS SimpleName@@MethodName:assertEquals:[true, FileUtil.hasLeadingSeparator("/foo/bar")] @TO@ MethodInvocation@@assertEquals(true,FileUtil.hasLeadingSeparator("/foo/bar")) @AT@ 2109 @LENGTH@ 60
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:assertEquals:[true, FileUtil.hasLeadingSeparator("/foo/bar")] @AT@ 2122 @LENGTH@ 4
------------INS MethodInvocation@@FileUtil.hasLeadingSeparator("/foo/bar") @TO@ SimpleName@@MethodName:assertEquals:[true, FileUtil.hasLeadingSeparator("/foo/bar")] @AT@ 2128 @LENGTH@ 40
---------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator("/foo/bar") @AT@ 2128 @LENGTH@ 8
---------------INS SimpleName@@MethodName:hasLeadingSeparator:["/foo/bar"] @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator("/foo/bar") @AT@ 2137 @LENGTH@ 31
------------------INS StringLiteral@@"/foo/bar" @TO@ SimpleName@@MethodName:hasLeadingSeparator:["/foo/bar"] @AT@ 2157 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals(true,FileUtil.hasLeadingSeparator("//foo/bar")) @TO@ MethodDeclaration@@public, void, MethodName:testHasLeadingSeparator,  @AT@ 2179 @LENGTH@ 62
------INS MethodInvocation@@assertEquals(true,FileUtil.hasLeadingSeparator("//foo/bar")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(true,FileUtil.hasLeadingSeparator("//foo/bar")) @AT@ 2179 @LENGTH@ 61
---------INS SimpleName@@MethodName:assertEquals:[true, FileUtil.hasLeadingSeparator("//foo/bar")] @TO@ MethodInvocation@@assertEquals(true,FileUtil.hasLeadingSeparator("//foo/bar")) @AT@ 2179 @LENGTH@ 61
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:assertEquals:[true, FileUtil.hasLeadingSeparator("//foo/bar")] @AT@ 2192 @LENGTH@ 4
------------INS MethodInvocation@@FileUtil.hasLeadingSeparator("//foo/bar") @TO@ SimpleName@@MethodName:assertEquals:[true, FileUtil.hasLeadingSeparator("//foo/bar")] @AT@ 2198 @LENGTH@ 41
---------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator("//foo/bar") @AT@ 2198 @LENGTH@ 8
---------------INS SimpleName@@MethodName:hasLeadingSeparator:["//foo/bar"] @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator("//foo/bar") @AT@ 2207 @LENGTH@ 32
------------------INS StringLiteral@@"//foo/bar" @TO@ SimpleName@@MethodName:hasLeadingSeparator:["//foo/bar"] @AT@ 2227 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertEquals(true,FileUtil.hasLeadingSeparator("///foo/bar")) @TO@ MethodDeclaration@@public, void, MethodName:testHasLeadingSeparator,  @AT@ 2250 @LENGTH@ 63
------INS MethodInvocation@@assertEquals(true,FileUtil.hasLeadingSeparator("///foo/bar")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(true,FileUtil.hasLeadingSeparator("///foo/bar")) @AT@ 2250 @LENGTH@ 62
---------INS SimpleName@@MethodName:assertEquals:[true, FileUtil.hasLeadingSeparator("///foo/bar")] @TO@ MethodInvocation@@assertEquals(true,FileUtil.hasLeadingSeparator("///foo/bar")) @AT@ 2250 @LENGTH@ 62
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:assertEquals:[true, FileUtil.hasLeadingSeparator("///foo/bar")] @AT@ 2263 @LENGTH@ 4
------------INS MethodInvocation@@FileUtil.hasLeadingSeparator("///foo/bar") @TO@ SimpleName@@MethodName:assertEquals:[true, FileUtil.hasLeadingSeparator("///foo/bar")] @AT@ 2269 @LENGTH@ 42
---------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator("///foo/bar") @AT@ 2269 @LENGTH@ 8
---------------INS SimpleName@@MethodName:hasLeadingSeparator:["///foo/bar"] @TO@ MethodInvocation@@FileUtil.hasLeadingSeparator("///foo/bar") @AT@ 2278 @LENGTH@ 33
------------------INS StringLiteral@@"///foo/bar" @TO@ SimpleName@@MethodName:hasLeadingSeparator:["///foo/bar"] @AT@ 2298 @LENGTH@ 12


UPD ReturnStatement@@NullLiteral:null @TO@ ClassInstanceCreation:new SarSubsystemAdd() @AT@ 2406 @LENGTH@ 12
---DEL NullLiteral@@null @AT@ 2413 @LENGTH@ 4
---INS ClassInstanceCreation@@SarSubsystemAdd[] @TO@ ReturnStatement@@NullLiteral:null @AT@ 2422 @LENGTH@ 21
------INS New@@new @TO@ ClassInstanceCreation@@SarSubsystemAdd[] @AT@ 2422 @LENGTH@ 3
------INS SimpleType@@SarSubsystemAdd @TO@ ClassInstanceCreation@@SarSubsystemAdd[] @AT@ 2426 @LENGTH@ 15


DEL VariableDeclarationStatement@@String markpCookie="HRVDLVJTUELWREUSYOCA"; @AT@ 800 @LENGTH@ 44
---DEL SimpleType@@String @AT@ 800 @LENGTH@ 6
---DEL VariableDeclarationFragment@@markpCookie="HRVDLVJTUELWREUSYOCA" @AT@ 807 @LENGTH@ 36
------DEL SimpleName@@markpCookie @AT@ 807 @LENGTH@ 11
------DEL StringLiteral@@"HRVDLVJTUELWREUSYOCA" @AT@ 821 @LENGTH@ 22


DEL MethodDeclaration@@public, Boolean, MethodName:getSuspended,  @AT@ 2413 @LENGTH@ 75
---DEL Modifier@@public @AT@ 2413 @LENGTH@ 6
---DEL SimpleType@@Boolean @AT@ 2420 @LENGTH@ 7
---DEL SimpleName@@MethodName:getSuspended @AT@ 2428 @LENGTH@ 12
---DEL ReturnStatement@@MethodInvocation:context.isSuspended() @AT@ 2453 @LENGTH@ 29
------DEL MethodInvocation@@context.isSuspended() @AT@ 2460 @LENGTH@ 21
---------DEL SimpleName@@Name:context @AT@ 2460 @LENGTH@ 7
---------DEL SimpleName@@MethodName:isSuspended:[] @AT@ 2468 @LENGTH@ 13


UPD TypeDeclaration@@[public]TestSplitMapUtils, BulkTest @TO@ [@SuppressWarnings("boxing"), public]TestSplitMapUtils, BulkTest @AT@ 1501 @LENGTH@ 5824
---INS SingleMemberAnnotation@@@SuppressWarnings("boxing") @TO@ TypeDeclaration@@[public]TestSplitMapUtils, BulkTest @AT@ 1501 @LENGTH@ 27


INS MethodDeclaration@@public, static, boolean, MethodName:hasExceptionBeenHandledByErrorHandler, Exchange exchange,  @TO@ TypeDeclaration@@[public, final]ExchangeHelper,  @AT@ 19559 @LENGTH@ 175
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasExceptionBeenHandledByErrorHandler, Exchange exchange,  @AT@ 19559 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasExceptionBeenHandledByErrorHandler, Exchange exchange,  @AT@ 19566 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasExceptionBeenHandledByErrorHandler, Exchange exchange,  @AT@ 19573 @LENGTH@ 7
---INS SimpleName@@MethodName:hasExceptionBeenHandledByErrorHandler @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasExceptionBeenHandledByErrorHandler, Exchange exchange,  @AT@ 19581 @LENGTH@ 37
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasExceptionBeenHandledByErrorHandler, Exchange exchange,  @AT@ 19619 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 19619 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 19628 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:Boolean.TRUE.equals(exchange.getProperty(Exchange.ERRORHANDLER_HANDLED)) @TO@ MethodDeclaration@@public, static, boolean, MethodName:hasExceptionBeenHandledByErrorHandler, Exchange exchange,  @AT@ 19648 @LENGTH@ 80
------INS MethodInvocation@@Boolean.TRUE.equals(exchange.getProperty(Exchange.ERRORHANDLER_HANDLED)) @TO@ ReturnStatement@@MethodInvocation:Boolean.TRUE.equals(exchange.getProperty(Exchange.ERRORHANDLER_HANDLED)) @AT@ 19655 @LENGTH@ 72
---------INS QualifiedName@@Name:Boolean.TRUE @TO@ MethodInvocation@@Boolean.TRUE.equals(exchange.getProperty(Exchange.ERRORHANDLER_HANDLED)) @AT@ 19655 @LENGTH@ 12
---------INS SimpleName@@MethodName:equals:[exchange.getProperty(Exchange.ERRORHANDLER_HANDLED)] @TO@ MethodInvocation@@Boolean.TRUE.equals(exchange.getProperty(Exchange.ERRORHANDLER_HANDLED)) @AT@ 19668 @LENGTH@ 59
------------INS MethodInvocation@@exchange.getProperty(Exchange.ERRORHANDLER_HANDLED) @TO@ SimpleName@@MethodName:equals:[exchange.getProperty(Exchange.ERRORHANDLER_HANDLED)] @AT@ 19675 @LENGTH@ 51
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getProperty(Exchange.ERRORHANDLER_HANDLED) @AT@ 19675 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getProperty:[Exchange.ERRORHANDLER_HANDLED] @TO@ MethodInvocation@@exchange.getProperty(Exchange.ERRORHANDLER_HANDLED) @AT@ 19684 @LENGTH@ 42
------------------INS QualifiedName@@Exchange.ERRORHANDLER_HANDLED @TO@ SimpleName@@MethodName:getProperty:[Exchange.ERRORHANDLER_HANDLED] @AT@ 19696 @LENGTH@ 29
---------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.ERRORHANDLER_HANDLED @AT@ 19696 @LENGTH@ 8
---------------------INS SimpleName@@ERRORHANDLER_HANDLED @TO@ QualifiedName@@Exchange.ERRORHANDLER_HANDLED @AT@ 19705 @LENGTH@ 20


UPD IfStatement@@if (toRemove != null) {  if (!redeploy && toRemove.isStart()) {    throw new UpdateFailedException("Cannot remove deployment " + deploymentUniqueName + " as its "+ Attribute.START+ " attribute is 'true'. Deployment must be undeployed before removal.");  }  element.removeDeployment(deploymentUniqueName);} @TO@ if (toRemove != null) {  element.removeDeployment(deploymentUniqueName);} @AT@ 2464 @LENGTH@ 410
---DEL Block@@ThenBody:{  if (!redeploy && toRemove.isStart()) {    throw new UpdateFailedException("Cannot remove deployment " + deploymentUniqueName + " as its "+ Attribute.START+ " attribute is 'true'. Deployment must be undeployed before removal.");  }  element.removeDeployment(deploymentUniqueName);} @AT@ 2486 @LENGTH@ 388
------DEL IfStatement@@if (!redeploy && toRemove.isStart()) {  throw new UpdateFailedException("Cannot remove deployment " + deploymentUniqueName + " as its "+ Attribute.START+ " attribute is 'true'. Deployment must be undeployed before removal.");} @AT@ 2500 @LENGTH@ 304
---------DEL InfixExpression@@!redeploy && toRemove.isStart() @AT@ 2504 @LENGTH@ 31
------------DEL PrefixExpression@@!redeploy @AT@ 2504 @LENGTH@ 9
---------------DEL Operator@@! @AT@ 2504 @LENGTH@ 1
---------------DEL SimpleName@@redeploy @AT@ 2505 @LENGTH@ 8
------------DEL Operator@@&& @AT@ 2513 @LENGTH@ 2
------------DEL MethodInvocation@@toRemove.isStart() @AT@ 2517 @LENGTH@ 18
---------------DEL SimpleName@@Name:toRemove @AT@ 2517 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:isStart:[] @AT@ 2526 @LENGTH@ 9
---MOV Block@@ThenBody:{  throw new UpdateFailedException("Cannot remove deployment " + deploymentUniqueName + " as its "+ Attribute.START+ " attribute is 'true'. Deployment must be undeployed before removal.");} @TO@ IfStatement@@if (toRemove != null) {  if (!redeploy && toRemove.isStart()) {    throw new UpdateFailedException("Cannot remove deployment " + deploymentUniqueName + " as its "+ Attribute.START+ " attribute is 'true'. Deployment must be undeployed before removal.");  }  element.removeDeployment(deploymentUniqueName);} @AT@ 2537 @LENGTH@ 267
------DEL ThrowStatement@@ClassInstanceCreation:new UpdateFailedException("Cannot remove deployment " + deploymentUniqueName + " as its "+ Attribute.START+ " attribute is 'true'. Deployment must be undeployed before removal.") @AT@ 2555 @LENGTH@ 235
---------DEL ClassInstanceCreation@@UpdateFailedException["Cannot remove deployment " + deploymentUniqueName + " as its "+ Attribute.START+ " attribute is 'true'. Deployment must be undeployed before removal."] @AT@ 2561 @LENGTH@ 228
------------DEL New@@new @AT@ 2561 @LENGTH@ 3
------------DEL SimpleType@@UpdateFailedException @AT@ 2565 @LENGTH@ 21
------------DEL InfixExpression@@"Cannot remove deployment " + deploymentUniqueName + " as its "+ Attribute.START+ " attribute is 'true'. Deployment must be undeployed before removal." @AT@ 2587 @LENGTH@ 201
---------------DEL StringLiteral@@"Cannot remove deployment " @AT@ 2587 @LENGTH@ 27
---------------DEL Operator@@+ @AT@ 2614 @LENGTH@ 1
---------------DEL SimpleName@@deploymentUniqueName @AT@ 2641 @LENGTH@ 20
---------------DEL StringLiteral@@" as its " @AT@ 2664 @LENGTH@ 10
---------------DEL QualifiedName@@Attribute.START @AT@ 2677 @LENGTH@ 15
------------------DEL SimpleName@@Attribute @AT@ 2677 @LENGTH@ 9
------------------DEL SimpleName@@START @AT@ 2687 @LENGTH@ 5
---------------DEL StringLiteral@@" attribute is 'true'. Deployment must be undeployed before removal." @AT@ 2719 @LENGTH@ 69
------MOV ExpressionStatement@@MethodInvocation:element.removeDeployment(deploymentUniqueName) @TO@ Block@@ThenBody:{  throw new UpdateFailedException("Cannot remove deployment " + deploymentUniqueName + " as its "+ Attribute.START+ " attribute is 'true'. Deployment must be undeployed before removal.");} @AT@ 2817 @LENGTH@ 47


INS ExpressionStatement@@ClassInstanceCreation:new ClassPathXmlApplicationContext("rabbitAdminNamespaceHandlerTests.xml",getClass()) @TO@ MethodDeclaration@@public, void, MethodName:testParse, Exception,  @AT@ 892 @LENGTH@ 87
---INS ClassInstanceCreation@@ClassPathXmlApplicationContext["rabbitAdminNamespaceHandlerTests.xml", getClass()] @TO@ ExpressionStatement@@ClassInstanceCreation:new ClassPathXmlApplicationContext("rabbitAdminNamespaceHandlerTests.xml",getClass()) @AT@ 892 @LENGTH@ 86
------MOV New@@new @TO@ ClassInstanceCreation@@ClassPathXmlApplicationContext["rabbitAdminNamespaceHandlerTests.xml", getClass()] @AT@ 1414 @LENGTH@ 3
------MOV SimpleType@@ClassPathXmlApplicationContext @TO@ ClassInstanceCreation@@ClassPathXmlApplicationContext["rabbitAdminNamespaceHandlerTests.xml", getClass()] @AT@ 1418 @LENGTH@ 30
------MOV StringLiteral@@"rabbitAdminNamespaceHandlerTests.xml" @TO@ ClassInstanceCreation@@ClassPathXmlApplicationContext["rabbitAdminNamespaceHandlerTests.xml", getClass()] @AT@ 1454 @LENGTH@ 38
------MOV MethodInvocation@@MethodName:getClass:[] @TO@ ClassInstanceCreation@@ClassPathXmlApplicationContext["rabbitAdminNamespaceHandlerTests.xml", getClass()] @AT@ 1494 @LENGTH@ 10


UPD ReturnStatement@@ArrayCreation:new MultiKey[]{new MultiKey(I1,I2),new MultiKey(I2,I3),new MultiKey(I3,I4),new MultiKey(I1,I1,I2),new MultiKey(I2,I3,I4),new MultiKey(I3,I7,I6),new MultiKey(I1,I1,I2,I3),new MultiKey(I2,I4,I5,I6),new MultiKey(I3,I6,I7,I8),new MultiKey(I1,I1,I2,I3,I4),new MultiKey(I2,I3,I4,I5,I6),new MultiKey(I3,I5,I6,I7,I8)} @TO@ ArrayCreation:new MultiKey[]{new MultiKey<Integer>(I1,I2),new MultiKey<Integer>(I2,I3),new MultiKey<Integer>(I3,I4),new MultiKey<Integer>(I1,I1,I2),new MultiKey<Integer>(I2,I3,I4),new MultiKey<Integer>(I3,I7,I6),new MultiKey<Integer>(I1,I1,I2,I3),new MultiKey<Integer>(I2,I4,I5,I6),new MultiKey<Integer>(I3,I6,I7,I8),new MultiKey<Integer>(I1,I1,I2,I3,I4),new MultiKey<Integer>(I2,I3,I4,I5,I6),new MultiKey<Integer>(I3,I5,I6,I7,I8)} @AT@ 2198 @LENGTH@ 514
---UPD ArrayCreation@@new MultiKey[]{new MultiKey(I1,I2),new MultiKey(I2,I3),new MultiKey(I3,I4),new MultiKey(I1,I1,I2),new MultiKey(I2,I3,I4),new MultiKey(I3,I7,I6),new MultiKey(I1,I1,I2,I3),new MultiKey(I2,I4,I5,I6),new MultiKey(I3,I6,I7,I8),new MultiKey(I1,I1,I2,I3,I4),new MultiKey(I2,I3,I4,I5,I6),new MultiKey(I3,I5,I6,I7,I8)} @TO@ new MultiKey[]{new MultiKey<Integer>(I1,I2),new MultiKey<Integer>(I2,I3),new MultiKey<Integer>(I3,I4),new MultiKey<Integer>(I1,I1,I2),new MultiKey<Integer>(I2,I3,I4),new MultiKey<Integer>(I3,I7,I6),new MultiKey<Integer>(I1,I1,I2,I3),new MultiKey<Integer>(I2,I4,I5,I6),new MultiKey<Integer>(I3,I6,I7,I8),new MultiKey<Integer>(I1,I1,I2,I3,I4),new MultiKey<Integer>(I2,I3,I4,I5,I6),new MultiKey<Integer>(I3,I5,I6,I7,I8)} @AT@ 2205 @LENGTH@ 506
------UPD ArrayInitializer@@{new MultiKey(I1,I2),new MultiKey(I2,I3),new MultiKey(I3,I4),new MultiKey(I1,I1,I2),new MultiKey(I2,I3,I4),new MultiKey(I3,I7,I6),new MultiKey(I1,I1,I2,I3),new MultiKey(I2,I4,I5,I6),new MultiKey(I3,I6,I7,I8),new MultiKey(I1,I1,I2,I3,I4),new MultiKey(I2,I3,I4,I5,I6),new MultiKey(I3,I5,I6,I7,I8)} @TO@ {new MultiKey<Integer>(I1,I2),new MultiKey<Integer>(I2,I3),new MultiKey<Integer>(I3,I4),new MultiKey<Integer>(I1,I1,I2),new MultiKey<Integer>(I2,I3,I4),new MultiKey<Integer>(I3,I7,I6),new MultiKey<Integer>(I1,I1,I2,I3),new MultiKey<Integer>(I2,I4,I5,I6),new MultiKey<Integer>(I3,I6,I7,I8),new MultiKey<Integer>(I1,I1,I2,I3,I4),new MultiKey<Integer>(I2,I3,I4,I5,I6),new MultiKey<Integer>(I3,I5,I6,I7,I8)} @AT@ 2220 @LENGTH@ 491
---------UPD ClassInstanceCreation@@MultiKey[I1, I2] @TO@ MultiKey<Integer>[I1, I2] @AT@ 2234 @LENGTH@ 20
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I1, I2] @AT@ 2238 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2238 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2247 @LENGTH@ 7
------------DEL SimpleType@@MultiKey @AT@ 2238 @LENGTH@ 8
---------UPD ClassInstanceCreation@@MultiKey[I2, I3] @TO@ MultiKey<Integer>[I2, I3] @AT@ 2268 @LENGTH@ 20
------------DEL SimpleType@@MultiKey @AT@ 2272 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I2, I3] @AT@ 2281 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2281 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2290 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I3, I4] @TO@ MultiKey<Integer>[I3, I4] @AT@ 2302 @LENGTH@ 20
------------DEL SimpleType@@MultiKey @AT@ 2306 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I3, I4] @AT@ 2324 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2324 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2333 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I1, I1, I2] @TO@ MultiKey<Integer>[I1, I1, I2] @AT@ 2336 @LENGTH@ 24
------------DEL SimpleType@@MultiKey @AT@ 2340 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I1, I1, I2] @AT@ 2367 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2367 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2376 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I2, I3, I4] @TO@ MultiKey<Integer>[I2, I3, I4] @AT@ 2374 @LENGTH@ 24
------------DEL SimpleType@@MultiKey @AT@ 2378 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I2, I3, I4] @AT@ 2414 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2414 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2423 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I3, I7, I6] @TO@ MultiKey<Integer>[I3, I7, I6] @AT@ 2412 @LENGTH@ 24
------------DEL SimpleType@@MultiKey @AT@ 2416 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I3, I7, I6] @AT@ 2461 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2461 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2470 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I1, I1, I2, I3] @TO@ MultiKey<Integer>[I1, I1, I2, I3] @AT@ 2450 @LENGTH@ 28
------------DEL SimpleType@@MultiKey @AT@ 2454 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I1, I1, I2, I3] @AT@ 2508 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2508 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2517 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I2, I4, I5, I6] @TO@ MultiKey<Integer>[I2, I4, I5, I6] @AT@ 2492 @LENGTH@ 28
------------DEL SimpleType@@MultiKey @AT@ 2496 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I2, I4, I5, I6] @AT@ 2559 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2559 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2568 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I3, I6, I7, I8] @TO@ MultiKey<Integer>[I3, I6, I7, I8] @AT@ 2534 @LENGTH@ 28
------------DEL SimpleType@@MultiKey @AT@ 2538 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I3, I6, I7, I8] @AT@ 2610 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2610 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2619 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I1, I1, I2, I3, I4] @TO@ MultiKey<Integer>[I1, I1, I2, I3, I4] @AT@ 2576 @LENGTH@ 32
------------DEL SimpleType@@MultiKey @AT@ 2580 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I1, I1, I2, I3, I4] @AT@ 2661 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2661 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2670 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I2, I3, I4, I5, I6] @TO@ MultiKey<Integer>[I2, I3, I4, I5, I6] @AT@ 2622 @LENGTH@ 32
------------DEL SimpleType@@MultiKey @AT@ 2626 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I2, I3, I4, I5, I6] @AT@ 2716 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2716 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2725 @LENGTH@ 7
---------UPD ClassInstanceCreation@@MultiKey[I3, I5, I6, I7, I8] @TO@ MultiKey<Integer>[I3, I5, I6, I7, I8] @AT@ 2668 @LENGTH@ 32
------------DEL SimpleType@@MultiKey @AT@ 2672 @LENGTH@ 8
------------INS ParameterizedType@@MultiKey<Integer> @TO@ ClassInstanceCreation@@MultiKey[I3, I5, I6, I7, I8] @AT@ 2771 @LENGTH@ 17
---------------INS SimpleType@@MultiKey @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2771 @LENGTH@ 8
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@MultiKey<Integer> @AT@ 2780 @LENGTH@ 7


MOV FieldDeclaration@@private, DummyTable, [table] @TO@ TypeDeclaration@@[public]AsyncEndpointTransactedTest, CamelSpringTestSupport @AT@ 1489 @LENGTH@ 25


INS MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @TO@ TypeDeclaration@@[@ContextConfiguration, public]CxfBeanTest, AbstractJUnit4SpringContextTests @AT@ 2848 @LENGTH@ 688
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 2848 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 2855 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetConsumerAfterReStartCamelContext @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 2860 @LENGTH@ 39
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 2909 @LENGTH@ 9
---INS VariableDeclarationStatement@@URL url=new URL("http://localhost:9000/customerservice/customers/123"); @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 2929 @LENGTH@ 73
------INS SimpleType@@URL @TO@ VariableDeclarationStatement@@URL url=new URL("http://localhost:9000/customerservice/customers/123"); @AT@ 2929 @LENGTH@ 3
------INS VariableDeclarationFragment@@url=new URL("http://localhost:9000/customerservice/customers/123") @TO@ VariableDeclarationStatement@@URL url=new URL("http://localhost:9000/customerservice/customers/123"); @AT@ 2933 @LENGTH@ 68
---------INS SimpleName@@url @TO@ VariableDeclarationFragment@@url=new URL("http://localhost:9000/customerservice/customers/123") @AT@ 2933 @LENGTH@ 3
---------INS ClassInstanceCreation@@URL["http://localhost:9000/customerservice/customers/123"] @TO@ VariableDeclarationFragment@@url=new URL("http://localhost:9000/customerservice/customers/123") @AT@ 2939 @LENGTH@ 62
------------INS New@@new @TO@ ClassInstanceCreation@@URL["http://localhost:9000/customerservice/customers/123"] @AT@ 2939 @LENGTH@ 3
------------INS SimpleType@@URL @TO@ ClassInstanceCreation@@URL["http://localhost:9000/customerservice/customers/123"] @AT@ 2943 @LENGTH@ 3
------------INS StringLiteral@@"http://localhost:9000/customerservice/customers/123" @TO@ ClassInstanceCreation@@URL["http://localhost:9000/customerservice/customers/123"] @AT@ 2947 @LENGTH@ 53
---INS VariableDeclarationStatement@@InputStream in=url.openStream(); @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 3012 @LENGTH@ 34
------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@InputStream in=url.openStream(); @AT@ 3012 @LENGTH@ 11
------INS VariableDeclarationFragment@@in=url.openStream() @TO@ VariableDeclarationStatement@@InputStream in=url.openStream(); @AT@ 3024 @LENGTH@ 21
---------INS SimpleName@@in @TO@ VariableDeclarationFragment@@in=url.openStream() @AT@ 3024 @LENGTH@ 2
---------INS MethodInvocation@@url.openStream() @TO@ VariableDeclarationFragment@@in=url.openStream() @AT@ 3029 @LENGTH@ 16
------------INS SimpleName@@Name:url @TO@ MethodInvocation@@url.openStream() @AT@ 3029 @LENGTH@ 3
------------INS SimpleName@@MethodName:openStream:[] @TO@ MethodInvocation@@url.openStream() @AT@ 3033 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals("{\"Customer\":{\"id\":123,\"name\":\"John\"}}",CxfUtils.getStringFromInputStream(in)) @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 3055 @LENGTH@ 101
------INS MethodInvocation@@assertEquals("{\"Customer\":{\"id\":123,\"name\":\"John\"}}",CxfUtils.getStringFromInputStream(in)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("{\"Customer\":{\"id\":123,\"name\":\"John\"}}",CxfUtils.getStringFromInputStream(in)) @AT@ 3055 @LENGTH@ 100
---------INS SimpleName@@MethodName:assertEquals:["{\"Customer\":{\"id\":123,\"name\":\"John\"}}", CxfUtils.getStringFromInputStream(in)] @TO@ MethodInvocation@@assertEquals("{\"Customer\":{\"id\":123,\"name\":\"John\"}}",CxfUtils.getStringFromInputStream(in)) @AT@ 3055 @LENGTH@ 100
------------INS StringLiteral@@"{\"Customer\":{\"id\":123,\"name\":\"John\"}}" @TO@ SimpleName@@MethodName:assertEquals:["{\"Customer\":{\"id\":123,\"name\":\"John\"}}", CxfUtils.getStringFromInputStream(in)] @AT@ 3068 @LENGTH@ 47
------------INS MethodInvocation@@CxfUtils.getStringFromInputStream(in) @TO@ SimpleName@@MethodName:assertEquals:["{\"Customer\":{\"id\":123,\"name\":\"John\"}}", CxfUtils.getStringFromInputStream(in)] @AT@ 3117 @LENGTH@ 37
---------------INS SimpleName@@Name:CxfUtils @TO@ MethodInvocation@@CxfUtils.getStringFromInputStream(in) @AT@ 3117 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getStringFromInputStream:[in] @TO@ MethodInvocation@@CxfUtils.getStringFromInputStream(in) @AT@ 3126 @LENGTH@ 28
------------------INS SimpleName@@in @TO@ SimpleName@@MethodName:getStringFromInputStream:[in] @AT@ 3151 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:in.close() @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 3165 @LENGTH@ 11
------INS MethodInvocation@@in.close() @TO@ ExpressionStatement@@MethodInvocation:in.close() @AT@ 3165 @LENGTH@ 10
---------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.close() @AT@ 3165 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@in.close() @AT@ 3168 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:camelContext.stop() @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 3186 @LENGTH@ 20
------INS MethodInvocation@@camelContext.stop() @TO@ ExpressionStatement@@MethodInvocation:camelContext.stop() @AT@ 3186 @LENGTH@ 19
---------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.stop() @AT@ 3186 @LENGTH@ 12
---------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@camelContext.stop() @AT@ 3199 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:camelContext.start() @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 3215 @LENGTH@ 21
------INS MethodInvocation@@camelContext.start() @TO@ ExpressionStatement@@MethodInvocation:camelContext.start() @AT@ 3215 @LENGTH@ 20
---------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.start() @AT@ 3215 @LENGTH@ 12
---------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@camelContext.start() @AT@ 3228 @LENGTH@ 7
---INS ExpressionStatement@@Assignment:url=new URL("http://localhost:9000/customerservice/orders/223/products/323") @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 3246 @LENGTH@ 79
------INS Assignment@@url=new URL("http://localhost:9000/customerservice/orders/223/products/323") @TO@ ExpressionStatement@@Assignment:url=new URL("http://localhost:9000/customerservice/orders/223/products/323") @AT@ 3246 @LENGTH@ 78
---------INS SimpleName@@url @TO@ Assignment@@url=new URL("http://localhost:9000/customerservice/orders/223/products/323") @AT@ 3246 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@url=new URL("http://localhost:9000/customerservice/orders/223/products/323") @AT@ 3249 @LENGTH@ 1
---------INS ClassInstanceCreation@@URL["http://localhost:9000/customerservice/orders/223/products/323"] @TO@ Assignment@@url=new URL("http://localhost:9000/customerservice/orders/223/products/323") @AT@ 3252 @LENGTH@ 72
------------INS New@@new @TO@ ClassInstanceCreation@@URL["http://localhost:9000/customerservice/orders/223/products/323"] @AT@ 3252 @LENGTH@ 3
------------INS SimpleType@@URL @TO@ ClassInstanceCreation@@URL["http://localhost:9000/customerservice/orders/223/products/323"] @AT@ 3256 @LENGTH@ 3
------------INS StringLiteral@@"http://localhost:9000/customerservice/orders/223/products/323" @TO@ ClassInstanceCreation@@URL["http://localhost:9000/customerservice/orders/223/products/323"] @AT@ 3260 @LENGTH@ 63
---INS ExpressionStatement@@Assignment:in=url.openStream() @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 3334 @LENGTH@ 22
------INS Assignment@@in=url.openStream() @TO@ ExpressionStatement@@Assignment:in=url.openStream() @AT@ 3334 @LENGTH@ 21
---------INS SimpleName@@in @TO@ Assignment@@in=url.openStream() @AT@ 3334 @LENGTH@ 2
---------INS Operator@@= @TO@ Assignment@@in=url.openStream() @AT@ 3336 @LENGTH@ 1
---------INS MethodInvocation@@url.openStream() @TO@ Assignment@@in=url.openStream() @AT@ 3339 @LENGTH@ 16
------------INS SimpleName@@Name:url @TO@ MethodInvocation@@url.openStream() @AT@ 3339 @LENGTH@ 3
------------INS SimpleName@@MethodName:openStream:[] @TO@ MethodInvocation@@url.openStream() @AT@ 3343 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals("{\"Product\":{\"description\":\"product 323\",\"id\":323}}",CxfUtils.getStringFromInputStream(in)) @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 3374 @LENGTH@ 136
------INS MethodInvocation@@assertEquals("{\"Product\":{\"description\":\"product 323\",\"id\":323}}",CxfUtils.getStringFromInputStream(in)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("{\"Product\":{\"description\":\"product 323\",\"id\":323}}",CxfUtils.getStringFromInputStream(in)) @AT@ 3374 @LENGTH@ 135
---------INS SimpleName@@MethodName:assertEquals:["{\"Product\":{\"description\":\"product 323\",\"id\":323}}", CxfUtils.getStringFromInputStream(in)] @TO@ MethodInvocation@@assertEquals("{\"Product\":{\"description\":\"product 323\",\"id\":323}}",CxfUtils.getStringFromInputStream(in)) @AT@ 3374 @LENGTH@ 135
------------INS StringLiteral@@"{\"Product\":{\"description\":\"product 323\",\"id\":323}}" @TO@ SimpleName@@MethodName:assertEquals:["{\"Product\":{\"description\":\"product 323\",\"id\":323}}", CxfUtils.getStringFromInputStream(in)] @AT@ 3387 @LENGTH@ 60
------------INS MethodInvocation@@CxfUtils.getStringFromInputStream(in) @TO@ SimpleName@@MethodName:assertEquals:["{\"Product\":{\"description\":\"product 323\",\"id\":323}}", CxfUtils.getStringFromInputStream(in)] @AT@ 3471 @LENGTH@ 37
---------------INS SimpleName@@Name:CxfUtils @TO@ MethodInvocation@@CxfUtils.getStringFromInputStream(in) @AT@ 3471 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getStringFromInputStream:[in] @TO@ MethodInvocation@@CxfUtils.getStringFromInputStream(in) @AT@ 3480 @LENGTH@ 28
------------------INS SimpleName@@in @TO@ SimpleName@@MethodName:getStringFromInputStream:[in] @AT@ 3505 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:in.close() @TO@ MethodDeclaration@@public, void, MethodName:testGetConsumerAfterReStartCamelContext, Exception,  @AT@ 3519 @LENGTH@ 11
------INS MethodInvocation@@in.close() @TO@ ExpressionStatement@@MethodInvocation:in.close() @AT@ 3519 @LENGTH@ 10
---------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.close() @AT@ 3519 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@in.close() @AT@ 3522 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("blah blah".getBytes(),connection.get("foo".getBytes())) @TO@ MethodInvocation:assertEquals("blah blah",new String(connection.get("foo".getBytes()))) @AT@ 1611 @LENGTH@ 78
---UPD MethodInvocation@@Assert.assertEquals("blah blah".getBytes(),connection.get("foo".getBytes())) @TO@ assertEquals("blah blah",new String(connection.get("foo".getBytes()))) @AT@ 1611 @LENGTH@ 77
------DEL SimpleName@@Name:Assert @AT@ 1611 @LENGTH@ 6
------UPD SimpleName@@MethodName:assertEquals:["blah blah".getBytes(), connection.get("foo".getBytes())] @TO@ MethodName:assertEquals:["blah blah", new String(connection.get("foo".getBytes()))] @AT@ 1618 @LENGTH@ 70
---------INS StringLiteral@@"blah blah" @TO@ SimpleName@@MethodName:assertEquals:["blah blah".getBytes(), connection.get("foo".getBytes())] @AT@ 1593 @LENGTH@ 11
---------INS ClassInstanceCreation@@String[connection.get("foo".getBytes())] @TO@ SimpleName@@MethodName:assertEquals:["blah blah".getBytes(), connection.get("foo".getBytes())] @AT@ 1606 @LENGTH@ 44
------------INS New@@new @TO@ ClassInstanceCreation@@String[connection.get("foo".getBytes())] @AT@ 1606 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[connection.get("foo".getBytes())] @AT@ 1610 @LENGTH@ 6
------------MOV MethodInvocation@@connection.get("foo".getBytes()) @TO@ ClassInstanceCreation@@String[connection.get("foo".getBytes())] @AT@ 1655 @LENGTH@ 32
---------DEL MethodInvocation@@"blah blah".getBytes() @AT@ 1631 @LENGTH@ 22
------------DEL StringLiteral@@"blah blah" @AT@ 1631 @LENGTH@ 11
------------DEL SimpleName@@MethodName:getBytes:[] @AT@ 1643 @LENGTH@ 10


UPD IfStatement@@if (lang == null) {  return lang;} @TO@ if (lang != null) {  return lang;} @AT@ 2237 @LENGTH@ 54
---UPD InfixExpression@@lang == null @TO@ lang != null @AT@ 2241 @LENGTH@ 12
------UPD Operator@@== @TO@ != @AT@ 2245 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:keys[i + 1]=sets[i].getKey() @TO@ Assignment:keys[i]=sets[i].getKey() @AT@ 5167 @LENGTH@ 31
---UPD Assignment@@keys[i + 1]=sets[i].getKey() @TO@ keys[i]=sets[i].getKey() @AT@ 5167 @LENGTH@ 30
------UPD ArrayAccess@@keys[i + 1] @TO@ keys[i] @AT@ 5167 @LENGTH@ 11
---------INS SimpleName@@i @TO@ ArrayAccess@@keys[i + 1] @AT@ 5168 @LENGTH@ 1
---------DEL InfixExpression@@i + 1 @AT@ 5172 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5172 @LENGTH@ 1
------------DEL Operator@@+ @AT@ 5173 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 5176 @LENGTH@ 1


UPD TypeDeclaration@@[private]CloseSuppressingInvocationHandler, [InvocationHandler] @TO@ [private, static]CloseSuppressingInvocationHandler, [InvocationHandler] @AT@ 5893 @LENGTH@ 951
---INS Modifier@@static @TO@ TypeDeclaration@@[private]CloseSuppressingInvocationHandler, [InvocationHandler] @AT@ 5901 @LENGTH@ 6


UPD IfStatement@@if (mode.equals(ServiceController.Mode.ON_DEMAND)) {  serverStartupListener.expectOnDemand(serviceName);} else {  serverStartupListener.unexpectOnDemand(serviceName);} @TO@ if (mode != ServiceController.Mode.ACTIVE) {  serverStartupListener.expectNonActive(serviceName);} else {  serverStartupListener.unexpectNonActive(serviceName);} @AT@ 5021 @LENGTH@ 222
---DEL MethodInvocation@@mode.equals(ServiceController.Mode.ON_DEMAND) @AT@ 5024 @LENGTH@ 45
------DEL SimpleName@@Name:mode @AT@ 5024 @LENGTH@ 4
------DEL SimpleName@@MethodName:equals:[ServiceController.Mode.ON_DEMAND] @AT@ 5029 @LENGTH@ 40
---------DEL QualifiedName@@ServiceController.Mode.ON_DEMAND @AT@ 5036 @LENGTH@ 32
---INS InfixExpression@@mode != ServiceController.Mode.ACTIVE @TO@ IfStatement@@if (mode.equals(ServiceController.Mode.ON_DEMAND)) {  serverStartupListener.expectOnDemand(serviceName);} else {  serverStartupListener.unexpectOnDemand(serviceName);} @AT@ 5025 @LENGTH@ 37
------INS SimpleName@@mode @TO@ InfixExpression@@mode != ServiceController.Mode.ACTIVE @AT@ 5025 @LENGTH@ 4
------INS Operator@@!= @TO@ InfixExpression@@mode != ServiceController.Mode.ACTIVE @AT@ 5029 @LENGTH@ 2
------INS QualifiedName@@ServiceController.Mode.ACTIVE @TO@ InfixExpression@@mode != ServiceController.Mode.ACTIVE @AT@ 5033 @LENGTH@ 29
---------MOV QualifiedName@@ServiceController.Mode @TO@ QualifiedName@@ServiceController.Mode.ACTIVE @AT@ 5036 @LENGTH@ 22
---------MOV SimpleName@@ON_DEMAND @TO@ QualifiedName@@ServiceController.Mode.ACTIVE @AT@ 5059 @LENGTH@ 9
---UPD Block@@ThenBody:{  serverStartupListener.expectOnDemand(serviceName);} @TO@ ThenBody:{  serverStartupListener.expectNonActive(serviceName);} @AT@ 5071 @LENGTH@ 82
------UPD ExpressionStatement@@MethodInvocation:serverStartupListener.expectOnDemand(serviceName) @TO@ MethodInvocation:serverStartupListener.expectNonActive(serviceName) @AT@ 5089 @LENGTH@ 50
---------UPD MethodInvocation@@serverStartupListener.expectOnDemand(serviceName) @TO@ serverStartupListener.expectNonActive(serviceName) @AT@ 5089 @LENGTH@ 49
------------UPD SimpleName@@MethodName:expectOnDemand:[serviceName] @TO@ MethodName:expectNonActive:[serviceName] @AT@ 5111 @LENGTH@ 27
---UPD Block@@ElseBody:{  serverStartupListener.unexpectOnDemand(serviceName);} @TO@ ElseBody:{  serverStartupListener.unexpectNonActive(serviceName);} @AT@ 5159 @LENGTH@ 84
------UPD ExpressionStatement@@MethodInvocation:serverStartupListener.unexpectOnDemand(serviceName) @TO@ MethodInvocation:serverStartupListener.unexpectNonActive(serviceName) @AT@ 5177 @LENGTH@ 52
---------UPD MethodInvocation@@serverStartupListener.unexpectOnDemand(serviceName) @TO@ serverStartupListener.unexpectNonActive(serviceName) @AT@ 5177 @LENGTH@ 51
------------UPD SimpleName@@MethodName:unexpectOnDemand:[serviceName] @TO@ MethodName:unexpectNonActive:[serviceName] @AT@ 5199 @LENGTH@ 29


INS MethodDeclaration@@public, void, MethodName:testFindStepExecutionsPastEnd,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("/test-config.xml"), public]JdbcSearchableStepExecutionDaoTests,  @AT@ 3076 @LENGTH@ 118
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testFindStepExecutionsPastEnd,  @AT@ 3076 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testFindStepExecutionsPastEnd,  @AT@ 3083 @LENGTH@ 4
---INS SimpleName@@MethodName:testFindStepExecutionsPastEnd @TO@ MethodDeclaration@@public, void, MethodName:testFindStepExecutionsPastEnd,  @AT@ 3088 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:assertEquals(0,dao.findStepExecutions("step",100,100).size()) @TO@ MethodDeclaration@@public, void, MethodName:testFindStepExecutionsPastEnd,  @AT@ 3125 @LENGTH@ 65
------INS MethodInvocation@@assertEquals(0,dao.findStepExecutions("step",100,100).size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(0,dao.findStepExecutions("step",100,100).size()) @AT@ 3125 @LENGTH@ 64
---------INS SimpleName@@MethodName:assertEquals:[0, dao.findStepExecutions("step",100,100).size()] @TO@ MethodInvocation@@assertEquals(0,dao.findStepExecutions("step",100,100).size()) @AT@ 3125 @LENGTH@ 64
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[0, dao.findStepExecutions("step",100,100).size()] @AT@ 3138 @LENGTH@ 1
------------INS MethodInvocation@@dao.findStepExecutions("step",100,100).size() @TO@ SimpleName@@MethodName:assertEquals:[0, dao.findStepExecutions("step",100,100).size()] @AT@ 3141 @LENGTH@ 47
---------------INS MethodInvocation@@MethodName:findStepExecutions:["step", 100, 100] @TO@ MethodInvocation@@dao.findStepExecutions("step",100,100).size() @AT@ 3141 @LENGTH@ 40
------------------INS StringLiteral@@"step" @TO@ MethodInvocation@@MethodName:findStepExecutions:["step", 100, 100] @AT@ 3164 @LENGTH@ 6
------------------INS NumberLiteral@@100 @TO@ MethodInvocation@@MethodName:findStepExecutions:["step", 100, 100] @AT@ 3172 @LENGTH@ 3
------------------INS NumberLiteral@@100 @TO@ MethodInvocation@@MethodName:findStepExecutions:["step", 100, 100] @AT@ 3177 @LENGTH@ 3
---------------INS SimpleName@@Name:dao @TO@ MethodInvocation@@dao.findStepExecutions("step",100,100).size() @AT@ 3141 @LENGTH@ 3
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@dao.findStepExecutions("step",100,100).size() @AT@ 3182 @LENGTH@ 6


INS MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]CamelContextFactoryBeanTest, XmlConfigTestSupport @AT@ 1618 @LENGTH@ 161
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1618 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1628 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1633 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1648 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:System.setProperty(JmxSystemPropertyKeys.DISABLED,"true") @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1691 @LENGTH@ 59
------INS MethodInvocation@@System.setProperty(JmxSystemPropertyKeys.DISABLED,"true") @TO@ ExpressionStatement@@MethodInvocation:System.setProperty(JmxSystemPropertyKeys.DISABLED,"true") @AT@ 1691 @LENGTH@ 58
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.setProperty(JmxSystemPropertyKeys.DISABLED,"true") @AT@ 1691 @LENGTH@ 6
---------INS SimpleName@@MethodName:setProperty:[JmxSystemPropertyKeys.DISABLED, "true"] @TO@ MethodInvocation@@System.setProperty(JmxSystemPropertyKeys.DISABLED,"true") @AT@ 1698 @LENGTH@ 51
------------INS QualifiedName@@JmxSystemPropertyKeys.DISABLED @TO@ SimpleName@@MethodName:setProperty:[JmxSystemPropertyKeys.DISABLED, "true"] @AT@ 1710 @LENGTH@ 30
---------------INS SimpleName@@JmxSystemPropertyKeys @TO@ QualifiedName@@JmxSystemPropertyKeys.DISABLED @AT@ 1710 @LENGTH@ 21
---------------INS SimpleName@@DISABLED @TO@ QualifiedName@@JmxSystemPropertyKeys.DISABLED @AT@ 1732 @LENGTH@ 8
------------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:setProperty:[JmxSystemPropertyKeys.DISABLED, "true"] @AT@ 1742 @LENGTH@ 6
---INS ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1759 @LENGTH@ 14
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1759 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 1765 @LENGTH@ 5


UPD MethodDeclaration@@private, String, MethodName:getFtpUrl,  @TO@ protected, String, MethodName:getFtpUrl,  @AT@ 1240 @LENGTH@ 143
---UPD Modifier@@private @TO@ protected @AT@ 1240 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:writeAttributes(streamWriter) @TO@ MethodDeclaration@@public, void, MethodName:writeContent, final XMLExtendedStreamWriter streamWriter, XMLStreamException,  @AT@ 1915 @LENGTH@ 30
---INS MethodInvocation@@writeAttributes(streamWriter) @TO@ ExpressionStatement@@MethodInvocation:writeAttributes(streamWriter) @AT@ 1915 @LENGTH@ 29
------INS SimpleName@@MethodName:writeAttributes:[streamWriter] @TO@ MethodInvocation@@writeAttributes(streamWriter) @AT@ 1915 @LENGTH@ 29
---------INS SimpleName@@streamWriter @TO@ SimpleName@@MethodName:writeAttributes:[streamWriter] @AT@ 1931 @LENGTH@ 12


UPD TryStatement@@try {  boolean waited=latch.await(2,TimeUnit.SECONDS);  assertTrue("Timed out waiting for message",waited);}  finally {  Thread.sleep(300L);  container.shutdown();} @TO@ try {  boolean waited=latch.await(2,TimeUnit.SECONDS);  assertTrue("Timed out waiting for message",waited);}  finally {  Thread.sleep(300L);  container.shutdown();  Thread.sleep(300L);} @AT@ 4416 @LENGTH@ 276
---UPD Block@@FinallyBody:{  Thread.sleep(300L);  container.shutdown();} @TO@ FinallyBody:{  Thread.sleep(300L);  container.shutdown();  Thread.sleep(300L);} @AT@ 4550 @LENGTH@ 142
------INS ExpressionStatement@@MethodInvocation:Thread.sleep(300L) @TO@ Block@@FinallyBody:{  Thread.sleep(300L);  container.shutdown();} @AT@ 4692 @LENGTH@ 19
---------INS MethodInvocation@@Thread.sleep(300L) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(300L) @AT@ 4692 @LENGTH@ 18
------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(300L) @AT@ 4692 @LENGTH@ 6
------------INS SimpleName@@MethodName:sleep:[300L] @TO@ MethodInvocation@@Thread.sleep(300L) @AT@ 4699 @LENGTH@ 11
---------------INS NumberLiteral@@300L @TO@ SimpleName@@MethodName:sleep:[300L] @AT@ 4705 @LENGTH@ 4


UPD IfStatement@@if (queryString == null) {  queryString=parameterName + "=" + parameterValue;} else {  queryString+="&" + parameterName + "="+ parameterValue;} @TO@ if (queryString == null) {  queryString=parameterName + "=" + encode(parameterValue);} else {  queryString+="&" + parameterName + "="+ encode(parameterValue);} @AT@ 962 @LENGTH@ 158
---UPD Block@@ThenBody:{  queryString=parameterName + "=" + parameterValue;} @TO@ ThenBody:{  queryString=parameterName + "=" + encode(parameterValue);} @AT@ 987 @LENGTH@ 60
------UPD ExpressionStatement@@Assignment:queryString=parameterName + "=" + parameterValue @TO@ Assignment:queryString=parameterName + "=" + encode(parameterValue) @AT@ 992 @LENGTH@ 51
---------UPD Assignment@@queryString=parameterName + "=" + parameterValue @TO@ queryString=parameterName + "=" + encode(parameterValue) @AT@ 992 @LENGTH@ 50
------------UPD InfixExpression@@parameterName + "=" + parameterValue @TO@ parameterName + "=" + encode(parameterValue) @AT@ 1006 @LENGTH@ 36
---------------DEL SimpleName@@parameterValue @AT@ 1028 @LENGTH@ 14
---------------INS MethodInvocation@@encode(parameterValue) @TO@ InfixExpression@@parameterName + "=" + parameterValue @AT@ 1100 @LENGTH@ 22
------------------INS SimpleName@@MethodName:encode:[parameterValue] @TO@ MethodInvocation@@encode(parameterValue) @AT@ 1100 @LENGTH@ 22
---------------------INS SimpleName@@parameterValue @TO@ SimpleName@@MethodName:encode:[parameterValue] @AT@ 1107 @LENGTH@ 14
---UPD Block@@ElseBody:{  queryString+="&" + parameterName + "="+ parameterValue;} @TO@ ElseBody:{  queryString+="&" + parameterName + "="+ encode(parameterValue);} @AT@ 1053 @LENGTH@ 67
------UPD ExpressionStatement@@Assignment:queryString+="&" + parameterName + "="+ parameterValue @TO@ Assignment:queryString+="&" + parameterName + "="+ encode(parameterValue) @AT@ 1058 @LENGTH@ 58
---------UPD Assignment@@queryString+="&" + parameterName + "="+ parameterValue @TO@ queryString+="&" + parameterName + "="+ encode(parameterValue) @AT@ 1058 @LENGTH@ 57
------------UPD InfixExpression@@"&" + parameterName + "="+ parameterValue @TO@ "&" + parameterName + "="+ encode(parameterValue) @AT@ 1073 @LENGTH@ 42
---------------DEL SimpleName@@parameterValue @AT@ 1101 @LENGTH@ 14
---------------INS MethodInvocation@@encode(parameterValue) @TO@ InfixExpression@@"&" + parameterName + "="+ parameterValue @AT@ 1181 @LENGTH@ 22
------------------INS SimpleName@@MethodName:encode:[parameterValue] @TO@ MethodInvocation@@encode(parameterValue) @AT@ 1181 @LENGTH@ 22
---------------------INS SimpleName@@parameterValue @TO@ SimpleName@@MethodName:encode:[parameterValue] @AT@ 1188 @LENGTH@ 14


INS TryStatement@@try {  admin.deleteQueue(ROUTE);} catch (AmqpIOException e) {} @TO@ MethodDeclaration@@public, void, MethodName:declareQueue,  @AT@ 1753 @LENGTH@ 104
---INS ExpressionStatement@@MethodInvocation:admin.deleteQueue(ROUTE) @TO@ TryStatement@@try {  admin.deleteQueue(ROUTE);} catch (AmqpIOException e) {} @AT@ 1762 @LENGTH@ 25
------INS MethodInvocation@@admin.deleteQueue(ROUTE) @TO@ ExpressionStatement@@MethodInvocation:admin.deleteQueue(ROUTE) @AT@ 1762 @LENGTH@ 24
---------INS SimpleName@@Name:admin @TO@ MethodInvocation@@admin.deleteQueue(ROUTE) @AT@ 1762 @LENGTH@ 5
---------INS SimpleName@@MethodName:deleteQueue:[ROUTE] @TO@ MethodInvocation@@admin.deleteQueue(ROUTE) @AT@ 1768 @LENGTH@ 18
------------INS SimpleName@@ROUTE @TO@ SimpleName@@MethodName:deleteQueue:[ROUTE] @AT@ 1780 @LENGTH@ 5
---INS CatchClause@@catch (AmqpIOException e) {} @TO@ TryStatement@@try {  admin.deleteQueue(ROUTE);} catch (AmqpIOException e) {} @AT@ 1792 @LENGTH@ 65
------INS SingleVariableDeclaration@@AmqpIOException e @TO@ CatchClause@@catch (AmqpIOException e) {} @AT@ 1799 @LENGTH@ 17
---------INS SimpleType@@AmqpIOException @TO@ SingleVariableDeclaration@@AmqpIOException e @AT@ 1799 @LENGTH@ 15
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@AmqpIOException e @AT@ 1815 @LENGTH@ 1


UPD MethodDeclaration@@protected, String, MethodName:buildAuthorizationHeader, HttpMethod method, URL url, Map<String,String> parameters,  @TO@ protected, String, MethodName:buildAuthorizationHeader, HttpMethod method, String url, Map<String,String> parameters,  @AT@ 1514 @LENGTH@ 495
---UPD SingleVariableDeclaration@@URL url @TO@ String url @AT@ 1575 @LENGTH@ 7
------UPD SimpleType@@URL @TO@ String @AT@ 1575 @LENGTH@ 3
---UPD VariableDeclarationStatement@@String adjustedUrl=adjustUrl(url.toString()); @TO@ String adjustedUrl=adjustUrl(url); @AT@ 1620 @LENGTH@ 47
------UPD VariableDeclarationFragment@@adjustedUrl=adjustUrl(url.toString()) @TO@ adjustedUrl=adjustUrl(url) @AT@ 1627 @LENGTH@ 39
---------UPD MethodInvocation@@adjustUrl(url.toString()) @TO@ adjustUrl(url) @AT@ 1641 @LENGTH@ 25
------------UPD SimpleName@@MethodName:adjustUrl:[url.toString()] @TO@ MethodName:adjustUrl:[url] @AT@ 1641 @LENGTH@ 25
---------------INS SimpleName@@url @TO@ SimpleName@@MethodName:adjustUrl:[url.toString()] @AT@ 1633 @LENGTH@ 3
---------------DEL MethodInvocation@@url.toString() @AT@ 1651 @LENGTH@ 14
------------------DEL SimpleName@@Name:url @AT@ 1651 @LENGTH@ 3
------------------DEL SimpleName@@MethodName:toString:[] @AT@ 1655 @LENGTH@ 10


UPD TypeDeclaration@@[public]AddDeploymentPlanBuilder, [DeploymentPlanBuilder] @TO@ [public]AddDeploymentPlanBuilder, [DeploymentSetActionsCompleteBuilder] @AT@ 1254 @LENGTH@ 1612
---UPD SimpleType@@DeploymentPlanBuilder @TO@ DeploymentSetActionsCompleteBuilder @AT@ 1304 @LENGTH@ 21


DEL VariableDeclarationStatement@@ApplicationContext applicationContext=new ClassPathXmlApplicationContext("rabbitAdminNamespaceHandlerTests.xml",getClass()); @AT@ 1374 @LENGTH@ 132
---DEL SimpleType@@ApplicationContext @AT@ 1374 @LENGTH@ 18
---DEL VariableDeclarationFragment@@applicationContext=new ClassPathXmlApplicationContext("rabbitAdminNamespaceHandlerTests.xml",getClass()) @AT@ 1393 @LENGTH@ 112
------DEL SimpleName@@applicationContext @AT@ 1393 @LENGTH@ 18
------DEL ClassInstanceCreation@@ClassPathXmlApplicationContext["rabbitAdminNamespaceHandlerTests.xml", getClass()] @AT@ 1414 @LENGTH@ 91


DEL ExpressionStatement@@MethodInvocation:context.stop() @AT@ 1996 @LENGTH@ 15
---DEL MethodInvocation@@context.stop() @AT@ 1996 @LENGTH@ 14
------DEL SimpleName@@Name:context @AT@ 1996 @LENGTH@ 7
------DEL SimpleName@@MethodName:stop:[] @AT@ 2004 @LENGTH@ 6


UPD IfStatement@@if (!JsfUtils.isFlowRequest()) {  delegate.writeState(facesContext,state);} @TO@ if (!JsfUtils.isFlowRequest()) {  delegate.writeState(facesContext,state);} else {  FlowSerializedView view=null;  if (state instanceof FlowSerializedView) {    view=(FlowSerializedView)state;  } else {    Object[] serializedState=(Object[])state;    view=new FlowSerializedView(facesContext.getViewRoot().getViewId(),serializedState[0],serializedState[1]);  }  RequestContext requestContext=RequestContextHolder.getRequestContext();  requestContext.getViewScope().put(FlowViewStateManager.SERIALIZED_VIEW_STATE,view);  ResponseWriter writer=facesContext.getResponseWriter();  writeViewStateField(facesContext,writer);  writeRenderKitIdField(facesContext,writer);} @AT@ 2692 @LENGTH@ 81
---INS Block@@ElseBody:{  FlowSerializedView view=null;  if (state instanceof FlowSerializedView) {    view=(FlowSerializedView)state;  } else {    Object[] serializedState=(Object[])state;    view=new FlowSerializedView(facesContext.getViewRoot().getViewId(),serializedState[0],serializedState[1]);  }  RequestContext requestContext=RequestContextHolder.getRequestContext();  requestContext.getViewScope().put(FlowViewStateManager.SERIALIZED_VIEW_STATE,view);  ResponseWriter writer=facesContext.getResponseWriter();  writeViewStateField(facesContext,writer);  writeRenderKitIdField(facesContext,writer);} @TO@ IfStatement@@if (!JsfUtils.isFlowRequest()) {  delegate.writeState(facesContext,state);} @AT@ 2779 @LENGTH@ 633
------MOV VariableDeclarationStatement@@FlowSerializedView view=null; @TO@ Block@@ElseBody:{  FlowSerializedView view=null;  if (state instanceof FlowSerializedView) {    view=(FlowSerializedView)state;  } else {    Object[] serializedState=(Object[])state;    view=new FlowSerializedView(facesContext.getViewRoot().getViewId(),serializedState[0],serializedState[1]);  }  RequestContext requestContext=RequestContextHolder.getRequestContext();  requestContext.getViewScope().put(FlowViewStateManager.SERIALIZED_VIEW_STATE,view);  ResponseWriter writer=facesContext.getResponseWriter();  writeViewStateField(facesContext,writer);  writeRenderKitIdField(facesContext,writer);} @AT@ 2776 @LENGTH@ 31
------MOV IfStatement@@if (state instanceof FlowSerializedView) {  view=(FlowSerializedView)state;} else {  Object[] serializedState=(Object[])state;  view=new FlowSerializedView(facesContext.getViewRoot().getViewId(),serializedState[0],serializedState[1]);} @TO@ Block@@ElseBody:{  FlowSerializedView view=null;  if (state instanceof FlowSerializedView) {    view=(FlowSerializedView)state;  } else {    Object[] serializedState=(Object[])state;    view=new FlowSerializedView(facesContext.getViewRoot().getViewId(),serializedState[0],serializedState[1]);  }  RequestContext requestContext=RequestContextHolder.getRequestContext();  requestContext.getViewScope().put(FlowViewStateManager.SERIALIZED_VIEW_STATE,view);  ResponseWriter writer=facesContext.getResponseWriter();  writeViewStateField(facesContext,writer);  writeRenderKitIdField(facesContext,writer);} @AT@ 2810 @LENGTH@ 257
------MOV VariableDeclarationStatement@@RequestContext requestContext=RequestContextHolder.getRequestContext(); @TO@ Block@@ElseBody:{  FlowSerializedView view=null;  if (state instanceof FlowSerializedView) {    view=(FlowSerializedView)state;  } else {    Object[] serializedState=(Object[])state;    view=new FlowSerializedView(facesContext.getViewRoot().getViewId(),serializedState[0],serializedState[1]);  }  RequestContext requestContext=RequestContextHolder.getRequestContext();  requestContext.getViewScope().put(FlowViewStateManager.SERIALIZED_VIEW_STATE,view);  ResponseWriter writer=facesContext.getResponseWriter();  writeViewStateField(facesContext,writer);  writeRenderKitIdField(facesContext,writer);} @AT@ 3070 @LENGTH@ 73
------MOV ExpressionStatement@@MethodInvocation:requestContext.getViewScope().put(FlowViewStateManager.SERIALIZED_VIEW_STATE,view) @TO@ Block@@ElseBody:{  FlowSerializedView view=null;  if (state instanceof FlowSerializedView) {    view=(FlowSerializedView)state;  } else {    Object[] serializedState=(Object[])state;    view=new FlowSerializedView(facesContext.getViewRoot().getViewId(),serializedState[0],serializedState[1]);  }  RequestContext requestContext=RequestContextHolder.getRequestContext();  requestContext.getViewScope().put(FlowViewStateManager.SERIALIZED_VIEW_STATE,view);  ResponseWriter writer=facesContext.getResponseWriter();  writeViewStateField(facesContext,writer);  writeRenderKitIdField(facesContext,writer);} @AT@ 3146 @LENGTH@ 84
------MOV VariableDeclarationStatement@@ResponseWriter writer=facesContext.getResponseWriter(); @TO@ Block@@ElseBody:{  FlowSerializedView view=null;  if (state instanceof FlowSerializedView) {    view=(FlowSerializedView)state;  } else {    Object[] serializedState=(Object[])state;    view=new FlowSerializedView(facesContext.getViewRoot().getViewId(),serializedState[0],serializedState[1]);  }  RequestContext requestContext=RequestContextHolder.getRequestContext();  requestContext.getViewScope().put(FlowViewStateManager.SERIALIZED_VIEW_STATE,view);  ResponseWriter writer=facesContext.getResponseWriter();  writeViewStateField(facesContext,writer);  writeRenderKitIdField(facesContext,writer);} @AT@ 3234 @LENGTH@ 57
------MOV ExpressionStatement@@MethodInvocation:writeViewStateField(facesContext,writer) @TO@ Block@@ElseBody:{  FlowSerializedView view=null;  if (state instanceof FlowSerializedView) {    view=(FlowSerializedView)state;  } else {    Object[] serializedState=(Object[])state;    view=new FlowSerializedView(facesContext.getViewRoot().getViewId(),serializedState[0],serializedState[1]);  }  RequestContext requestContext=RequestContextHolder.getRequestContext();  requestContext.getViewScope().put(FlowViewStateManager.SERIALIZED_VIEW_STATE,view);  ResponseWriter writer=facesContext.getResponseWriter();  writeViewStateField(facesContext,writer);  writeRenderKitIdField(facesContext,writer);} @AT@ 3294 @LENGTH@ 42
------MOV ExpressionStatement@@MethodInvocation:writeRenderKitIdField(facesContext,writer) @TO@ Block@@ElseBody:{  FlowSerializedView view=null;  if (state instanceof FlowSerializedView) {    view=(FlowSerializedView)state;  } else {    Object[] serializedState=(Object[])state;    view=new FlowSerializedView(facesContext.getViewRoot().getViewId(),serializedState[0],serializedState[1]);  }  RequestContext requestContext=RequestContextHolder.getRequestContext();  requestContext.getViewScope().put(FlowViewStateManager.SERIALIZED_VIEW_STATE,view);  ResponseWriter writer=facesContext.getResponseWriter();  writeViewStateField(facesContext,writer);  writeRenderKitIdField(facesContext,writer);} @AT@ 3339 @LENGTH@ 44


UPD MethodDeclaration@@public, ServerCommunicationHandler, MethodName:getProcessManagerSlave, ServerEnvironment environment, MessageHandler handler,  @TO@ public, ServerCommunicationHandler, MethodName:getServerCommunicationHandler, ServerEnvironment environment, MessageHandler handler,  @AT@ 1424 @LENGTH@ 224
---UPD SimpleName@@MethodName:getProcessManagerSlave @TO@ MethodName:getServerCommunicationHandler @AT@ 1458 @LENGTH@ 22


UPD Block@@SyncBody:{  if (writeClosed && size == 0) {    return -1;  }  while (size == 0) {    try {      lock.wait();      if (writeClosed && size == 0) {        return -1;      }    } catch (    InterruptedException e) {      throw new InterruptedIOException();    }  }  lock.notifyAll();  try {    return buffer[tail++] & 0xff;  }  finally {    size--;  }} @TO@ SyncBody:{  if (writeClosed && size == 0) {    return -1;  }  while (size == 0) {    try {      lock.wait();      if (writeClosed && size == 0) {        return -1;      }    } catch (    InterruptedException e) {      throw new InterruptedIOException();    }  }  lock.notifyAll();  int tail=Pipe.this.tail;  try {    return buffer[tail++] & 0xff;  }  finally {    Pipe.this.tail=tail == buffer.length ? 0 : tail;    size--;  }} @AT@ 2294 @LENGTH@ 667
---UPD TryStatement@@try {  return buffer[tail++] & 0xff;}  finally {  size--;} @TO@ try {  return buffer[tail++] & 0xff;}  finally {  Pipe.this.tail=tail == buffer.length ? 0 : tail;  size--;} @AT@ 2818 @LENGTH@ 129
------UPD Block@@FinallyBody:{  size--;} @TO@ FinallyBody:{  Pipe.this.tail=tail == buffer.length ? 0 : tail;  size--;} @AT@ 2900 @LENGTH@ 47
---------INS ExpressionStatement@@Assignment:Pipe.this.tail=tail == buffer.length ? 0 : tail @TO@ Block@@FinallyBody:{  size--;} @AT@ 2964 @LENGTH@ 50
------------INS Assignment@@Pipe.this.tail=tail == buffer.length ? 0 : tail @TO@ ExpressionStatement@@Assignment:Pipe.this.tail=tail == buffer.length ? 0 : tail @AT@ 2964 @LENGTH@ 49
---------------INS FieldAccess@@Pipe.this.tail @TO@ Assignment@@Pipe.this.tail=tail == buffer.length ? 0 : tail @AT@ 2964 @LENGTH@ 14
------------------INS ThisExpression@@this @TO@ FieldAccess@@Pipe.this.tail @AT@ 2964 @LENGTH@ 9
------------------INS SimpleName@@tail @TO@ FieldAccess@@Pipe.this.tail @AT@ 2974 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@Pipe.this.tail=tail == buffer.length ? 0 : tail @AT@ 2978 @LENGTH@ 1
---------------INS ConditionalExpression@@tail == buffer.length ? 0 : tail @TO@ Assignment@@Pipe.this.tail=tail == buffer.length ? 0 : tail @AT@ 2981 @LENGTH@ 32
------------------INS InfixExpression@@tail == buffer.length @TO@ ConditionalExpression@@tail == buffer.length ? 0 : tail @AT@ 2981 @LENGTH@ 21
---------------------INS SimpleName@@tail @TO@ InfixExpression@@tail == buffer.length @AT@ 2981 @LENGTH@ 4
---------------------INS Operator@@== @TO@ InfixExpression@@tail == buffer.length @AT@ 2985 @LENGTH@ 2
---------------------INS QualifiedName@@buffer.length @TO@ InfixExpression@@tail == buffer.length @AT@ 2989 @LENGTH@ 13
------------------------INS SimpleName@@buffer @TO@ QualifiedName@@buffer.length @AT@ 2989 @LENGTH@ 6
------------------------INS SimpleName@@length @TO@ QualifiedName@@buffer.length @AT@ 2996 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ ConditionalExpression@@tail == buffer.length ? 0 : tail @AT@ 3005 @LENGTH@ 1
------------------INS SimpleName@@tail @TO@ ConditionalExpression@@tail == buffer.length ? 0 : tail @AT@ 3009 @LENGTH@ 4
---INS VariableDeclarationStatement@@int tail=Pipe.this.tail; @TO@ Block@@SyncBody:{  if (writeClosed && size == 0) {    return -1;  }  while (size == 0) {    try {      lock.wait();      if (writeClosed && size == 0) {        return -1;      }    } catch (    InterruptedException e) {      throw new InterruptedIOException();    }  }  lock.notifyAll();  try {    return buffer[tail++] & 0xff;  }  finally {    size--;  }} @AT@ 2818 @LENGTH@ 25
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int tail=Pipe.this.tail; @AT@ 2818 @LENGTH@ 3
------INS VariableDeclarationFragment@@tail=Pipe.this.tail @TO@ VariableDeclarationStatement@@int tail=Pipe.this.tail; @AT@ 2822 @LENGTH@ 20
---------INS SimpleName@@tail @TO@ VariableDeclarationFragment@@tail=Pipe.this.tail @AT@ 2822 @LENGTH@ 4
---------INS FieldAccess@@Pipe.this.tail @TO@ VariableDeclarationFragment@@tail=Pipe.this.tail @AT@ 2828 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@Pipe.this.tail @AT@ 2828 @LENGTH@ 9
------------INS SimpleName@@tail @TO@ FieldAccess@@Pipe.this.tail @AT@ 2838 @LENGTH@ 4


UPD TryStatement@@try {  messageHandler.handleMessage(this,pis);} catch (IOException e) {  log.errorf(e,"Failed to read a message");} finally {  StreamUtils.safeClose(pis);} @TO@ try {  messageHandler.handleMessage(this,pis);} catch (RuntimeException e) {  log.errorf(e,"Failed to read a message");}catch (IOException e) {  log.errorf(e,"Failed to read a message");}catch (NoClassDefFoundError e) {  log.errorf(e,"Failed to read a message");}catch (Error e) {  log.errorf(e,"Failed to read a message");  throw e;} finally {  StreamUtils.safeClose(pis);} @AT@ 8547 @LENGTH@ 217
---INS CatchClause@@catch (RuntimeException e) {  log.errorf(e,"Failed to read a message");} @TO@ TryStatement@@try {  messageHandler.handleMessage(this,pis);} catch (IOException e) {  log.errorf(e,"Failed to read a message");} finally {  StreamUtils.safeClose(pis);} @AT@ 8616 @LENGTH@ 93
------INS SingleVariableDeclaration@@RuntimeException e @TO@ CatchClause@@catch (RuntimeException e) {  log.errorf(e,"Failed to read a message");} @AT@ 8623 @LENGTH@ 18
---------INS SimpleType@@RuntimeException @TO@ SingleVariableDeclaration@@RuntimeException e @AT@ 8623 @LENGTH@ 16
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@RuntimeException e @AT@ 8640 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:log.errorf(e,"Failed to read a message") @TO@ CatchClause@@catch (RuntimeException e) {  log.errorf(e,"Failed to read a message");} @AT@ 8657 @LENGTH@ 42
---------INS MethodInvocation@@log.errorf(e,"Failed to read a message") @TO@ ExpressionStatement@@MethodInvocation:log.errorf(e,"Failed to read a message") @AT@ 8657 @LENGTH@ 41
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.errorf(e,"Failed to read a message") @AT@ 8657 @LENGTH@ 3
------------INS SimpleName@@MethodName:errorf:[e, "Failed to read a message"] @TO@ MethodInvocation@@log.errorf(e,"Failed to read a message") @AT@ 8661 @LENGTH@ 37
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:errorf:[e, "Failed to read a message"] @AT@ 8668 @LENGTH@ 1
---------------INS StringLiteral@@"Failed to read a message" @TO@ SimpleName@@MethodName:errorf:[e, "Failed to read a message"] @AT@ 8671 @LENGTH@ 26
---INS CatchClause@@catch (NoClassDefFoundError e) {  log.errorf(e,"Failed to read a message");} @TO@ TryStatement@@try {  messageHandler.handleMessage(this,pis);} catch (IOException e) {  log.errorf(e,"Failed to read a message");} finally {  StreamUtils.safeClose(pis);} @AT@ 8799 @LENGTH@ 97
------INS SingleVariableDeclaration@@NoClassDefFoundError e @TO@ CatchClause@@catch (NoClassDefFoundError e) {  log.errorf(e,"Failed to read a message");} @AT@ 8806 @LENGTH@ 22
---------INS SimpleType@@NoClassDefFoundError @TO@ SingleVariableDeclaration@@NoClassDefFoundError e @AT@ 8806 @LENGTH@ 20
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NoClassDefFoundError e @AT@ 8827 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:log.errorf(e,"Failed to read a message") @TO@ CatchClause@@catch (NoClassDefFoundError e) {  log.errorf(e,"Failed to read a message");} @AT@ 8844 @LENGTH@ 42
---------INS MethodInvocation@@log.errorf(e,"Failed to read a message") @TO@ ExpressionStatement@@MethodInvocation:log.errorf(e,"Failed to read a message") @AT@ 8844 @LENGTH@ 41
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.errorf(e,"Failed to read a message") @AT@ 8844 @LENGTH@ 3
------------INS SimpleName@@MethodName:errorf:[e, "Failed to read a message"] @TO@ MethodInvocation@@log.errorf(e,"Failed to read a message") @AT@ 8848 @LENGTH@ 37
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:errorf:[e, "Failed to read a message"] @AT@ 8855 @LENGTH@ 1
---------------INS StringLiteral@@"Failed to read a message" @TO@ SimpleName@@MethodName:errorf:[e, "Failed to read a message"] @AT@ 8858 @LENGTH@ 26
---INS CatchClause@@catch (Error e) {  log.errorf(e,"Failed to read a message");  throw e;} @TO@ TryStatement@@try {  messageHandler.handleMessage(this,pis);} catch (IOException e) {  log.errorf(e,"Failed to read a message");} finally {  StreamUtils.safeClose(pis);} @AT@ 8897 @LENGTH@ 103
------INS SingleVariableDeclaration@@Error e @TO@ CatchClause@@catch (Error e) {  log.errorf(e,"Failed to read a message");  throw e;} @AT@ 8904 @LENGTH@ 7
---------INS SimpleType@@Error @TO@ SingleVariableDeclaration@@Error e @AT@ 8904 @LENGTH@ 5
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Error e @AT@ 8910 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:log.errorf(e,"Failed to read a message") @TO@ CatchClause@@catch (Error e) {  log.errorf(e,"Failed to read a message");  throw e;} @AT@ 8927 @LENGTH@ 42
---------INS MethodInvocation@@log.errorf(e,"Failed to read a message") @TO@ ExpressionStatement@@MethodInvocation:log.errorf(e,"Failed to read a message") @AT@ 8927 @LENGTH@ 41
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.errorf(e,"Failed to read a message") @AT@ 8927 @LENGTH@ 3
------------INS SimpleName@@MethodName:errorf:[e, "Failed to read a message"] @TO@ MethodInvocation@@log.errorf(e,"Failed to read a message") @AT@ 8931 @LENGTH@ 37
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:errorf:[e, "Failed to read a message"] @AT@ 8938 @LENGTH@ 1
---------------INS StringLiteral@@"Failed to read a message" @TO@ SimpleName@@MethodName:errorf:[e, "Failed to read a message"] @AT@ 8941 @LENGTH@ 26
------INS ThrowStatement@@SimpleName:e @TO@ CatchClause@@catch (Error e) {  log.errorf(e,"Failed to read a message");  throw e;} @AT@ 8982 @LENGTH@ 8
---------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 8988 @LENGTH@ 1


UPD TypeDeclaration@@[public]JBoss50MessageDrivenBeanMetaData, JBossMessageDrivenBeanMetaData @TO@ [@XmlType(name="message-driven-beanType",propOrder={"descriptionGroup","ejbName","activationConfig","destinationJndiName","localJndiName","jndiBindingPolicy","mdbUser","mdbPassword","mdbClientId","mdbSubscriptionId","resourceAdapterName","exceptionOnRollback","timerPersistence","configurationName","invokerBindings","securityProxy","environmentRefsGroup","securityIdentity","securityDomain","methodAttributes","depends","iorSecurityConfig","ejbTimeoutIdentity","annotations","ignoreDependency","aopDomainName","poolConfig","jndiRefs","createDestination"}), @JBossXmlType(modelGroup=JBossXmlConstants.MODEL_GROUP_UNORDERED_SEQUENCE), public]JBoss50MessageDrivenBeanMetaData, JBossMessageDrivenBean31MetaData @AT@ 1245 @LENGTH@ 193
---UPD SimpleType@@JBossMessageDrivenBeanMetaData @TO@ JBossMessageDrivenBean31MetaData @AT@ 1299 @LENGTH@ 30
---INS NormalAnnotation@@@XmlType(name="message-driven-beanType",propOrder={"descriptionGroup","ejbName","activationConfig","destinationJndiName","localJndiName","jndiBindingPolicy","mdbUser","mdbPassword","mdbClientId","mdbSubscriptionId","resourceAdapterName","exceptionOnRollback","timerPersistence","configurationName","invokerBindings","securityProxy","environmentRefsGroup","securityIdentity","securityDomain","methodAttributes","depends","iorSecurityConfig","ejbTimeoutIdentity","annotations","ignoreDependency","aopDomainName","poolConfig","jndiRefs","createDestination"}) @TO@ TypeDeclaration@@[public]JBoss50MessageDrivenBeanMetaData, JBossMessageDrivenBeanMetaData @AT@ 1391 @LENGTH@ 619
---INS NormalAnnotation@@@JBossXmlType(modelGroup=JBossXmlConstants.MODEL_GROUP_UNORDERED_SEQUENCE) @TO@ TypeDeclaration@@[public]JBoss50MessageDrivenBeanMetaData, JBossMessageDrivenBeanMetaData @AT@ 2012 @LENGTH@ 74


DEL TryStatement@@try {  batch.install();} catch (ServiceRegistryException e) {  resultHandler.handleFailure(e,param);} @AT@ 4258 @LENGTH@ 142
---DEL ExpressionStatement@@MethodInvocation:batch.install() @AT@ 4276 @LENGTH@ 16
------DEL MethodInvocation@@batch.install() @AT@ 4276 @LENGTH@ 15
---------DEL SimpleName@@Name:batch @AT@ 4276 @LENGTH@ 5
---------DEL SimpleName@@MethodName:install:[] @AT@ 4282 @LENGTH@ 9
---DEL CatchClause@@catch (ServiceRegistryException e) {  resultHandler.handleFailure(e,param);} @AT@ 4303 @LENGTH@ 97
------DEL SingleVariableDeclaration@@ServiceRegistryException e @AT@ 4310 @LENGTH@ 26
---------DEL SimpleType@@ServiceRegistryException @AT@ 4310 @LENGTH@ 24
---------DEL SimpleName@@e @AT@ 4335 @LENGTH@ 1
------DEL ExpressionStatement@@MethodInvocation:resultHandler.handleFailure(e,param) @AT@ 4352 @LENGTH@ 38
---------DEL MethodInvocation@@resultHandler.handleFailure(e,param) @AT@ 4352 @LENGTH@ 37
------------DEL SimpleName@@Name:resultHandler @AT@ 4352 @LENGTH@ 13
------------DEL SimpleName@@MethodName:handleFailure:[e, param] @AT@ 4366 @LENGTH@ 23
---------------DEL SimpleName@@e @AT@ 4380 @LENGTH@ 1
---------------DEL SimpleName@@param @AT@ 4383 @LENGTH@ 5


INS FieldDeclaration@@protected, static, final, String, [SERVICE_URI="cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS] @TO@ TypeDeclaration@@[public]CxfCustomizedExceptionTest, CamelTestSupport @AT@ 2062 @LENGTH@ 92
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, static, final, String, [SERVICE_URI="cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS] @AT@ 2062 @LENGTH@ 9
---INS Modifier@@static @TO@ FieldDeclaration@@protected, static, final, String, [SERVICE_URI="cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS] @AT@ 2072 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@protected, static, final, String, [SERVICE_URI="cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS] @AT@ 2079 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@protected, static, final, String, [SERVICE_URI="cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS] @AT@ 2085 @LENGTH@ 6
---INS VariableDeclarationFragment@@SERVICE_URI="cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS @TO@ FieldDeclaration@@protected, static, final, String, [SERVICE_URI="cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS] @AT@ 2092 @LENGTH@ 61
------INS SimpleName@@SERVICE_URI @TO@ VariableDeclarationFragment@@SERVICE_URI="cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS @AT@ 2092 @LENGTH@ 11
------INS InfixExpression@@"cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS @TO@ VariableDeclarationFragment@@SERVICE_URI="cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS @AT@ 2106 @LENGTH@ 47
---------INS StringLiteral@@"cxf://" @TO@ InfixExpression@@"cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS @AT@ 2106 @LENGTH@ 8
---------INS Operator@@+ @TO@ InfixExpression@@"cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS @AT@ 2114 @LENGTH@ 1
---------INS SimpleName@@ROUTER_ADDRESS @TO@ InfixExpression@@"cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS @AT@ 2117 @LENGTH@ 14
---------INS StringLiteral@@"?" @TO@ InfixExpression@@"cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS @AT@ 2134 @LENGTH@ 3
---------INS SimpleName@@SERVICE_CLASS @TO@ InfixExpression@@"cxf://" + ROUTER_ADDRESS + "?"+ SERVICE_CLASS @AT@ 2140 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:load, TypeConverterRegistry registry, Exception,  @TO@ public, synchronized, void, MethodName:load, TypeConverterRegistry registry, Exception,  @AT@ 11349 @LENGTH@ 112
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, void, MethodName:load, TypeConverterRegistry registry, Exception,  @AT@ 11694 @LENGTH@ 12


UPD EnhancedForStatement@@for (Class<?> cls : classes) {  LogManager.getLogger(cls).setLevel(oldLevels.get(cls));} @TO@ for (@SuppressWarnings("rawtypes") Class cls : classes) {  LogManager.getLogger(cls).setLevel(oldLevels.get(cls));} @AT@ 1625 @LENGTH@ 101
---UPD SingleVariableDeclaration@@Class<?> cls @TO@ @SuppressWarnings("rawtypes") Class cls @AT@ 1630 @LENGTH@ 12
------DEL ParameterizedType@@Class<?> @AT@ 1630 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 1630 @LENGTH@ 5
---------DEL WildcardType@@? @AT@ 1636 @LENGTH@ 1
------INS SimpleType@@Class @TO@ SingleVariableDeclaration@@Class<?> cls @AT@ 1745 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:System.arraycopy(names,0,this.names,0,names.length) @TO@ MethodDeclaration@@public, voidMethodName:NameFileFilter, String[] names, IOCase caseSensitivity,  @AT@ 3834 @LENGTH@ 56
---INS MethodInvocation@@System.arraycopy(names,0,this.names,0,names.length) @TO@ ExpressionStatement@@MethodInvocation:System.arraycopy(names,0,this.names,0,names.length) @AT@ 3834 @LENGTH@ 55
------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.arraycopy(names,0,this.names,0,names.length) @AT@ 3834 @LENGTH@ 6
------INS SimpleName@@MethodName:arraycopy:[names, 0, this.names, 0, names.length] @TO@ MethodInvocation@@System.arraycopy(names,0,this.names,0,names.length) @AT@ 3841 @LENGTH@ 48
---------INS SimpleName@@names @TO@ SimpleName@@MethodName:arraycopy:[names, 0, this.names, 0, names.length] @AT@ 3851 @LENGTH@ 5
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[names, 0, this.names, 0, names.length] @AT@ 3858 @LENGTH@ 1
---------INS FieldAccess@@this.names @TO@ SimpleName@@MethodName:arraycopy:[names, 0, this.names, 0, names.length] @AT@ 3861 @LENGTH@ 10
------------INS ThisExpression@@this @TO@ FieldAccess@@this.names @AT@ 3861 @LENGTH@ 4
------------INS SimpleName@@names @TO@ FieldAccess@@this.names @AT@ 3866 @LENGTH@ 5
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:arraycopy:[names, 0, this.names, 0, names.length] @AT@ 3873 @LENGTH@ 1
---------INS QualifiedName@@names.length @TO@ SimpleName@@MethodName:arraycopy:[names, 0, this.names, 0, names.length] @AT@ 3876 @LENGTH@ 12
------------INS SimpleName@@names @TO@ QualifiedName@@names.length @AT@ 3876 @LENGTH@ 5
------------INS SimpleName@@length @TO@ QualifiedName@@names.length @AT@ 3882 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testSetSameObject,  @TO@ TypeDeclaration@@[public]OrderedCompositeTests,  @AT@ 1305 @LENGTH@ 215
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSetSameObject,  @AT@ 1305 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSetSameObject,  @AT@ 1312 @LENGTH@ 4
---INS SimpleName@@MethodName:testSetSameObject @TO@ MethodDeclaration@@public, void, MethodName:testSetSameObject,  @AT@ 1317 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:list.setItems(Arrays.asList(new Object[]{"1","1"})) @TO@ MethodDeclaration@@public, void, MethodName:testSetSameObject,  @AT@ 1341 @LENGTH@ 56
------INS MethodInvocation@@list.setItems(Arrays.asList(new Object[]{"1","1"})) @TO@ ExpressionStatement@@MethodInvocation:list.setItems(Arrays.asList(new Object[]{"1","1"})) @AT@ 1341 @LENGTH@ 55
---------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.setItems(Arrays.asList(new Object[]{"1","1"})) @AT@ 1341 @LENGTH@ 4
---------INS SimpleName@@MethodName:setItems:[Arrays.asList(new Object[]{"1","1"})] @TO@ MethodInvocation@@list.setItems(Arrays.asList(new Object[]{"1","1"})) @AT@ 1346 @LENGTH@ 50
------------INS MethodInvocation@@Arrays.asList(new Object[]{"1","1"}) @TO@ SimpleName@@MethodName:setItems:[Arrays.asList(new Object[]{"1","1"})] @AT@ 1355 @LENGTH@ 40
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new Object[]{"1","1"}) @AT@ 1355 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new Object[]{"1","1"}] @TO@ MethodInvocation@@Arrays.asList(new Object[]{"1","1"}) @AT@ 1362 @LENGTH@ 33
------------------INS ArrayCreation@@new Object[]{"1","1"} @TO@ SimpleName@@MethodName:asList:[new Object[]{"1","1"}] @AT@ 1369 @LENGTH@ 25
---------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{"1","1"} @AT@ 1373 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 1373 @LENGTH@ 6
---------------------INS ArrayInitializer@@{"1","1"} @TO@ ArrayCreation@@new Object[]{"1","1"} @AT@ 1382 @LENGTH@ 12
------------------------INS StringLiteral@@"1" @TO@ ArrayInitializer@@{"1","1"} @AT@ 1384 @LENGTH@ 3
------------------------INS StringLiteral@@"1" @TO@ ArrayInitializer@@{"1","1"} @AT@ 1389 @LENGTH@ 3
---INS VariableDeclarationStatement@@Iterator<Object> iterator=list.iterator(); @TO@ MethodDeclaration@@public, void, MethodName:testSetSameObject,  @AT@ 1400 @LENGTH@ 44
------INS ParameterizedType@@Iterator<Object> @TO@ VariableDeclarationStatement@@Iterator<Object> iterator=list.iterator(); @AT@ 1400 @LENGTH@ 16
---------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<Object> @AT@ 1400 @LENGTH@ 8
---------INS SimpleType@@Object @TO@ ParameterizedType@@Iterator<Object> @AT@ 1409 @LENGTH@ 6
------INS VariableDeclarationFragment@@iterator=list.iterator() @TO@ VariableDeclarationStatement@@Iterator<Object> iterator=list.iterator(); @AT@ 1417 @LENGTH@ 26
---------INS SimpleName@@iterator @TO@ VariableDeclarationFragment@@iterator=list.iterator() @AT@ 1417 @LENGTH@ 8
---------INS MethodInvocation@@list.iterator() @TO@ VariableDeclarationFragment@@iterator=list.iterator() @AT@ 1428 @LENGTH@ 15
------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.iterator() @AT@ 1428 @LENGTH@ 4
------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@list.iterator() @AT@ 1433 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals("1",iterator.next()) @TO@ MethodDeclaration@@public, void, MethodName:testSetSameObject,  @AT@ 1447 @LENGTH@ 35
------INS MethodInvocation@@assertEquals("1",iterator.next()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("1",iterator.next()) @AT@ 1447 @LENGTH@ 34
---------INS SimpleName@@MethodName:assertEquals:["1", iterator.next()] @TO@ MethodInvocation@@assertEquals("1",iterator.next()) @AT@ 1447 @LENGTH@ 34
------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:assertEquals:["1", iterator.next()] @AT@ 1460 @LENGTH@ 3
------------INS MethodInvocation@@iterator.next() @TO@ SimpleName@@MethodName:assertEquals:["1", iterator.next()] @AT@ 1465 @LENGTH@ 15
---------------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.next() @AT@ 1465 @LENGTH@ 8
---------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iterator.next() @AT@ 1474 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertFalse(iterator.hasNext()) @TO@ MethodDeclaration@@public, void, MethodName:testSetSameObject,  @AT@ 1485 @LENGTH@ 32
------INS MethodInvocation@@assertFalse(iterator.hasNext()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(iterator.hasNext()) @AT@ 1485 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertFalse:[iterator.hasNext()] @TO@ MethodInvocation@@assertFalse(iterator.hasNext()) @AT@ 1485 @LENGTH@ 31
------------INS MethodInvocation@@iterator.hasNext() @TO@ SimpleName@@MethodName:assertFalse:[iterator.hasNext()] @AT@ 1497 @LENGTH@ 18
---------------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.hasNext() @AT@ 1497 @LENGTH@ 8
---------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@iterator.hasNext() @AT@ 1506 @LENGTH@ 9


UPD Block@@SyncBody:{  if (writeClosed && size == 0) {    return -1;  }  while (size == 0) {    try {      lock.wait();      if (writeClosed && size == 0) {        return -1;      }    } catch (    InterruptedException e) {      throw new InterruptedIOException();    }  }  lock.notifyAll();  try {    return buffer[tail++] & 0xff;  }  finally {    size--;  }} @TO@ SyncBody:{  if (writeClosed && size == 0) {    return -1;  }  while (size == 0) {    try {      lock.wait();      if (writeClosed && size == 0) {        return -1;      }    } catch (    InterruptedException e) {      throw new InterruptedIOException();    }  }  lock.notifyAll();  int tail=Pipe.this.tail;  try {    return buffer[tail++] & 0xff;  }  finally {    Pipe.this.tail=tail == buffer.length ? 0 : tail;    size--;  }} @AT@ 2294 @LENGTH@ 667
---UPD TryStatement@@try {  return buffer[tail++] & 0xff;}  finally {  size--;} @TO@ try {  return buffer[tail++] & 0xff;}  finally {  Pipe.this.tail=tail == buffer.length ? 0 : tail;  size--;} @AT@ 2818 @LENGTH@ 129
------UPD Block@@FinallyBody:{  size--;} @TO@ FinallyBody:{  Pipe.this.tail=tail == buffer.length ? 0 : tail;  size--;} @AT@ 2900 @LENGTH@ 47
---------INS ExpressionStatement@@Assignment:Pipe.this.tail=tail == buffer.length ? 0 : tail @TO@ Block@@FinallyBody:{  size--;} @AT@ 2964 @LENGTH@ 50
------------INS Assignment@@Pipe.this.tail=tail == buffer.length ? 0 : tail @TO@ ExpressionStatement@@Assignment:Pipe.this.tail=tail == buffer.length ? 0 : tail @AT@ 2964 @LENGTH@ 49
---------------INS FieldAccess@@Pipe.this.tail @TO@ Assignment@@Pipe.this.tail=tail == buffer.length ? 0 : tail @AT@ 2964 @LENGTH@ 14
------------------INS ThisExpression@@this @TO@ FieldAccess@@Pipe.this.tail @AT@ 2964 @LENGTH@ 9
------------------INS SimpleName@@tail @TO@ FieldAccess@@Pipe.this.tail @AT@ 2974 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@Pipe.this.tail=tail == buffer.length ? 0 : tail @AT@ 2978 @LENGTH@ 1
---------------INS ConditionalExpression@@tail == buffer.length ? 0 : tail @TO@ Assignment@@Pipe.this.tail=tail == buffer.length ? 0 : tail @AT@ 2981 @LENGTH@ 32
------------------INS InfixExpression@@tail == buffer.length @TO@ ConditionalExpression@@tail == buffer.length ? 0 : tail @AT@ 2981 @LENGTH@ 21
---------------------INS SimpleName@@tail @TO@ InfixExpression@@tail == buffer.length @AT@ 2981 @LENGTH@ 4
---------------------INS Operator@@== @TO@ InfixExpression@@tail == buffer.length @AT@ 2985 @LENGTH@ 2
---------------------INS QualifiedName@@buffer.length @TO@ InfixExpression@@tail == buffer.length @AT@ 2989 @LENGTH@ 13
------------------------INS SimpleName@@buffer @TO@ QualifiedName@@buffer.length @AT@ 2989 @LENGTH@ 6
------------------------INS SimpleName@@length @TO@ QualifiedName@@buffer.length @AT@ 2996 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ ConditionalExpression@@tail == buffer.length ? 0 : tail @AT@ 3005 @LENGTH@ 1
------------------INS SimpleName@@tail @TO@ ConditionalExpression@@tail == buffer.length ? 0 : tail @AT@ 3009 @LENGTH@ 4
---INS VariableDeclarationStatement@@int tail=Pipe.this.tail; @TO@ Block@@SyncBody:{  if (writeClosed && size == 0) {    return -1;  }  while (size == 0) {    try {      lock.wait();      if (writeClosed && size == 0) {        return -1;      }    } catch (    InterruptedException e) {      throw new InterruptedIOException();    }  }  lock.notifyAll();  try {    return buffer[tail++] & 0xff;  }  finally {    size--;  }} @AT@ 2818 @LENGTH@ 25
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int tail=Pipe.this.tail; @AT@ 2818 @LENGTH@ 3
------INS VariableDeclarationFragment@@tail=Pipe.this.tail @TO@ VariableDeclarationStatement@@int tail=Pipe.this.tail; @AT@ 2822 @LENGTH@ 20
---------INS SimpleName@@tail @TO@ VariableDeclarationFragment@@tail=Pipe.this.tail @AT@ 2822 @LENGTH@ 4
---------INS FieldAccess@@Pipe.this.tail @TO@ VariableDeclarationFragment@@tail=Pipe.this.tail @AT@ 2828 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@Pipe.this.tail @AT@ 2828 @LENGTH@ 9
------------INS SimpleName@@tail @TO@ FieldAccess@@Pipe.this.tail @AT@ 2838 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:command.add("-Djava.util.logging.manager=org.jboss.logmanager.LogManager") @TO@ MethodDeclaration@@private, List<String>, MethodName:getServerLaunchCommand, Standalone serverConfig, JvmElement jvm,  @AT@ 5517 @LENGTH@ 75
---INS MethodInvocation@@command.add("-Djava.util.logging.manager=org.jboss.logmanager.LogManager") @TO@ ExpressionStatement@@MethodInvocation:command.add("-Djava.util.logging.manager=org.jboss.logmanager.LogManager") @AT@ 5517 @LENGTH@ 74
------INS SimpleName@@Name:command @TO@ MethodInvocation@@command.add("-Djava.util.logging.manager=org.jboss.logmanager.LogManager") @AT@ 5517 @LENGTH@ 7
------INS SimpleName@@MethodName:add:["-Djava.util.logging.manager=org.jboss.logmanager.LogManager"] @TO@ MethodInvocation@@command.add("-Djava.util.logging.manager=org.jboss.logmanager.LogManager") @AT@ 5525 @LENGTH@ 66
---------INS StringLiteral@@"-Djava.util.logging.manager=org.jboss.logmanager.LogManager" @TO@ SimpleName@@MethodName:add:["-Djava.util.logging.manager=org.jboss.logmanager.LogManager"] @AT@ 5529 @LENGTH@ 61


INS ExpressionStatement@@MethodInvocation:assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @TO@ MethodDeclaration@@public, void, MethodName:getQueryParameters,  @AT@ 2034 @LENGTH@ 78
---INS MethodInvocation@@assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @AT@ 2034 @LENGTH@ 77
------INS SimpleName@@MethodName:assertEquals:["pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token")] @TO@ MethodInvocation@@assertEquals("pipe%7Cdelimited%7Ctoken",queryParameters.get("access_token")) @AT@ 2034 @LENGTH@ 77
---------INS StringLiteral@@"pipe%7Cdelimited%7Ctoken" @TO@ SimpleName@@MethodName:assertEquals:["pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token")] @AT@ 2047 @LENGTH@ 26
---------INS MethodInvocation@@queryParameters.get("access_token") @TO@ SimpleName@@MethodName:assertEquals:["pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token")] @AT@ 2075 @LENGTH@ 35
------------INS SimpleName@@Name:queryParameters @TO@ MethodInvocation@@queryParameters.get("access_token") @AT@ 2075 @LENGTH@ 15
------------INS SimpleName@@MethodName:get:["access_token"] @TO@ MethodInvocation@@queryParameters.get("access_token") @AT@ 2091 @LENGTH@ 19
---------------INS StringLiteral@@"access_token" @TO@ SimpleName@@MethodName:get:["access_token"] @AT@ 2095 @LENGTH@ 14


DEL IfStatement@@if (isPlatform("windows")) {  return;} @AT@ 1787 @LENGTH@ 58
---DEL MethodInvocation@@isPlatform("windows") @AT@ 1791 @LENGTH@ 21
------DEL SimpleName@@MethodName:isPlatform:["windows"] @AT@ 1791 @LENGTH@ 21
---------DEL StringLiteral@@"windows" @AT@ 1802 @LENGTH@ 9
---DEL Block@@ThenBody:{  return;} @AT@ 1814 @LENGTH@ 31
------DEL ReturnStatement@@ @AT@ 1828 @LENGTH@ 7


UPD VariableDeclarationStatement@@SpringCamelContext camel=ac.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @TO@ SpringCamelContext camel=(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next(); @AT@ 1500 @LENGTH@ 98
---UPD VariableDeclarationFragment@@camel=ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ camel=(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1519 @LENGTH@ 78
------INS CastExpression@@(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ VariableDeclarationFragment@@camel=ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1579 @LENGTH@ 91
---------MOV MethodInvocation@@ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @TO@ CastExpression@@(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1527 @LENGTH@ 70
---------INS SimpleType@@SpringCamelContext @TO@ CastExpression@@(SpringCamelContext)ac.getBeansOfType(SpringCamelContext.class).values().iterator().next() @AT@ 1580 @LENGTH@ 18


INS ExpressionStatement@@MethodInvocation:streamWriter.writeStartElement(Element.MANAGEMENT.getLocalName()) @TO@ MethodDeclaration@@public, void, MethodName:writeContent, final XMLExtendedStreamWriter streamWriter, XMLStreamException,  @AT@ 9131 @LENGTH@ 66
---INS MethodInvocation@@streamWriter.writeStartElement(Element.MANAGEMENT.getLocalName()) @TO@ ExpressionStatement@@MethodInvocation:streamWriter.writeStartElement(Element.MANAGEMENT.getLocalName()) @AT@ 9131 @LENGTH@ 65
------INS SimpleName@@Name:streamWriter @TO@ MethodInvocation@@streamWriter.writeStartElement(Element.MANAGEMENT.getLocalName()) @AT@ 9131 @LENGTH@ 12
------INS SimpleName@@MethodName:writeStartElement:[Element.MANAGEMENT.getLocalName()] @TO@ MethodInvocation@@streamWriter.writeStartElement(Element.MANAGEMENT.getLocalName()) @AT@ 9144 @LENGTH@ 52
---------INS MethodInvocation@@Element.MANAGEMENT.getLocalName() @TO@ SimpleName@@MethodName:writeStartElement:[Element.MANAGEMENT.getLocalName()] @AT@ 9162 @LENGTH@ 33
------------INS QualifiedName@@Name:Element.MANAGEMENT @TO@ MethodInvocation@@Element.MANAGEMENT.getLocalName() @AT@ 9162 @LENGTH@ 18
------------INS SimpleName@@MethodName:getLocalName:[] @TO@ MethodInvocation@@Element.MANAGEMENT.getLocalName() @AT@ 9181 @LENGTH@ 14


INS MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]FilesystemObserverTestCase, AbstractMonitorTestCase @AT@ 1349 @LENGTH@ 129
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1349 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1359 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1364 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1379 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:listener=new CollectionFilesystemListener(true) @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1399 @LENGTH@ 50
------INS Assignment@@listener=new CollectionFilesystemListener(true) @TO@ ExpressionStatement@@Assignment:listener=new CollectionFilesystemListener(true) @AT@ 1399 @LENGTH@ 49
---------INS SimpleName@@listener @TO@ Assignment@@listener=new CollectionFilesystemListener(true) @AT@ 1399 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@listener=new CollectionFilesystemListener(true) @AT@ 1407 @LENGTH@ 1
---------INS ClassInstanceCreation@@CollectionFilesystemListener[true] @TO@ Assignment@@listener=new CollectionFilesystemListener(true) @AT@ 1410 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@CollectionFilesystemListener[true] @AT@ 1410 @LENGTH@ 3
------------INS SimpleType@@CollectionFilesystemListener @TO@ ClassInstanceCreation@@CollectionFilesystemListener[true] @AT@ 1414 @LENGTH@ 28
------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@CollectionFilesystemListener[true] @AT@ 1443 @LENGTH@ 4
---INS ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1458 @LENGTH@ 14
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1458 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 1464 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:addMenuItem, JavaSymbolName menuCategoryName, JavaSymbolName menuIteId, String menuItemLabel, String globalMessageCode, String link, String idPrefix,  @TO@ public, void, MethodName:addMenuItem, JavaSymbolName menuCategoryName, JavaSymbolName menuItemId, String menuItemLabel, String globalMessageCode, String link, String idPrefix,  @AT@ 2778 @LENGTH@ 3058
---UPD SingleVariableDeclaration@@JavaSymbolName menuIteId @TO@ JavaSymbolName menuItemId @AT@ 2835 @LENGTH@ 24
------UPD SimpleName@@menuIteId @TO@ menuItemId @AT@ 2850 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:Assert.notNull(menuIteId,"Menu item name required") @TO@ MethodInvocation:Assert.notNull(menuItemId,"Menu item name required") @AT@ 3010 @LENGTH@ 53
------UPD MethodInvocation@@Assert.notNull(menuIteId,"Menu item name required") @TO@ Assert.notNull(menuItemId,"Menu item name required") @AT@ 3010 @LENGTH@ 52
---------UPD SimpleName@@MethodName:notNull:[menuIteId, "Menu item name required"] @TO@ MethodName:notNull:[menuItemId, "Menu item name required"] @AT@ 3017 @LENGTH@ 45
------------UPD SimpleName@@menuIteId @TO@ menuItemId @AT@ 3025 @LENGTH@ 9
---UPD VariableDeclarationStatement@@Element menuItem=XmlUtils.findFirstElement("//*[@id='" + idPrefix + menuCategoryName.getSymbolName().toLowerCase()+ "_"+ menuIteId.getSymbolName().toLowerCase()+ "']",rootElement); @TO@ Element menuItem=XmlUtils.findFirstElement("//*[@id='" + idPrefix + menuCategoryName.getSymbolName().toLowerCase()+ "_"+ menuItemId.getSymbolName().toLowerCase()+ "']",rootElement); @AT@ 4912 @LENGTH@ 186
------UPD VariableDeclarationFragment@@menuItem=XmlUtils.findFirstElement("//*[@id='" + idPrefix + menuCategoryName.getSymbolName().toLowerCase()+ "_"+ menuIteId.getSymbolName().toLowerCase()+ "']",rootElement) @TO@ menuItem=XmlUtils.findFirstElement("//*[@id='" + idPrefix + menuCategoryName.getSymbolName().toLowerCase()+ "_"+ menuItemId.getSymbolName().toLowerCase()+ "']",rootElement) @AT@ 4920 @LENGTH@ 177
---------UPD MethodInvocation@@XmlUtils.findFirstElement("//*[@id='" + idPrefix + menuCategoryName.getSymbolName().toLowerCase()+ "_"+ menuIteId.getSymbolName().toLowerCase()+ "']",rootElement) @TO@ XmlUtils.findFirstElement("//*[@id='" + idPrefix + menuCategoryName.getSymbolName().toLowerCase()+ "_"+ menuItemId.getSymbolName().toLowerCase()+ "']",rootElement) @AT@ 4931 @LENGTH@ 166
------------UPD SimpleName@@MethodName:findFirstElement:["//*[@id='" + idPrefix + menuCategoryName.getSymbolName().toLowerCase()+ "_"+ menuIteId.getSymbolName().toLowerCase()+ "']", rootElement] @TO@ MethodName:findFirstElement:["//*[@id='" + idPrefix + menuCategoryName.getSymbolName().toLowerCase()+ "_"+ menuItemId.getSymbolName().toLowerCase()+ "']", rootElement] @AT@ 4940 @LENGTH@ 157
---------------UPD InfixExpression@@"//*[@id='" + idPrefix + menuCategoryName.getSymbolName().toLowerCase()+ "_"+ menuIteId.getSymbolName().toLowerCase()+ "']" @TO@ "//*[@id='" + idPrefix + menuCategoryName.getSymbolName().toLowerCase()+ "_"+ menuItemId.getSymbolName().toLowerCase()+ "']" @AT@ 4957 @LENGTH@ 126
------------------UPD MethodInvocation@@menuIteId.getSymbolName().toLowerCase() @TO@ menuItemId.getSymbolName().toLowerCase() @AT@ 5037 @LENGTH@ 39
---------------------UPD SimpleName@@Name:menuIteId @TO@ Name:menuItemId @AT@ 5037 @LENGTH@ 9
---UPD IfStatement@@if (menuItem == null) {  menuItem=new XmlElementBuilder("menu:item",document).addAttribute("id",idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuIteId.getSymbolName().toLowerCase()).addAttribute("messageCode",globalMessageCode).addAttribute("url",link).build();  menuItem.setAttribute("z",XmlRoundTripUtils.calculateUniqueKeyFor(menuItem));  category.appendChild(menuItem);} @TO@ if (menuItem == null) {  menuItem=new XmlElementBuilder("menu:item",document).addAttribute("id",idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuItemId.getSymbolName().toLowerCase()).addAttribute("messageCode",globalMessageCode).addAttribute("url",link).build();  menuItem.setAttribute("z",XmlRoundTripUtils.calculateUniqueKeyFor(menuItem));  category.appendChild(menuItem);} @AT@ 5104 @LENGTH@ 443
------UPD Block@@ThenBody:{  menuItem=new XmlElementBuilder("menu:item",document).addAttribute("id",idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuIteId.getSymbolName().toLowerCase()).addAttribute("messageCode",globalMessageCode).addAttribute("url",link).build();  menuItem.setAttribute("z",XmlRoundTripUtils.calculateUniqueKeyFor(menuItem));  category.appendChild(menuItem);} @TO@ ThenBody:{  menuItem=new XmlElementBuilder("menu:item",document).addAttribute("id",idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuItemId.getSymbolName().toLowerCase()).addAttribute("messageCode",globalMessageCode).addAttribute("url",link).build();  menuItem.setAttribute("z",XmlRoundTripUtils.calculateUniqueKeyFor(menuItem));  category.appendChild(menuItem);} @AT@ 5126 @LENGTH@ 421
---------UPD ExpressionStatement@@Assignment:menuItem=new XmlElementBuilder("menu:item",document).addAttribute("id",idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuIteId.getSymbolName().toLowerCase()).addAttribute("messageCode",globalMessageCode).addAttribute("url",link).build() @TO@ Assignment:menuItem=new XmlElementBuilder("menu:item",document).addAttribute("id",idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuItemId.getSymbolName().toLowerCase()).addAttribute("messageCode",globalMessageCode).addAttribute("url",link).build() @AT@ 5131 @LENGTH@ 294
------------UPD Assignment@@menuItem=new XmlElementBuilder("menu:item",document).addAttribute("id",idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuIteId.getSymbolName().toLowerCase()).addAttribute("messageCode",globalMessageCode).addAttribute("url",link).build() @TO@ menuItem=new XmlElementBuilder("menu:item",document).addAttribute("id",idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuItemId.getSymbolName().toLowerCase()).addAttribute("messageCode",globalMessageCode).addAttribute("url",link).build() @AT@ 5131 @LENGTH@ 293
---------------UPD MethodInvocation@@new XmlElementBuilder("menu:item",document).addAttribute("id",idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuIteId.getSymbolName().toLowerCase()).addAttribute("messageCode",globalMessageCode).addAttribute("url",link).build() @TO@ new XmlElementBuilder("menu:item",document).addAttribute("id",idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuItemId.getSymbolName().toLowerCase()).addAttribute("messageCode",globalMessageCode).addAttribute("url",link).build() @AT@ 5142 @LENGTH@ 282
------------------UPD MethodInvocation@@MethodName:addAttribute:["id", idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuIteId.getSymbolName().toLowerCase()] @TO@ MethodName:addAttribute:["id", idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuItemId.getSymbolName().toLowerCase()] @AT@ 5142 @LENGTH@ 178
---------------------UPD InfixExpression@@idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuIteId.getSymbolName().toLowerCase() @TO@ idPrefix + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuItemId.getSymbolName().toLowerCase() @AT@ 5214 @LENGTH@ 105
------------------------UPD MethodInvocation@@menuIteId.getSymbolName().toLowerCase() @TO@ menuItemId.getSymbolName().toLowerCase() @AT@ 5280 @LENGTH@ 39
---------------------------UPD SimpleName@@Name:menuIteId @TO@ Name:menuItemId @AT@ 5280 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:propFileOperations.addPropertyIfNotExists(Path.SRC_MAIN_WEBAPP,"/WEB-INF/i18n/application.properties","menu_item_" + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuIteId.getSymbolName().toLowerCase()+ "_label",menuItemLabel,true) @TO@ MethodInvocation:propFileOperations.addPropertyIfNotExists(Path.SRC_MAIN_WEBAPP,"/WEB-INF/i18n/application.properties","menu_item_" + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuItemId.getSymbolName().toLowerCase()+ "_label",menuItemLabel,true) @AT@ 5550 @LENGTH@ 247
------UPD MethodInvocation@@propFileOperations.addPropertyIfNotExists(Path.SRC_MAIN_WEBAPP,"/WEB-INF/i18n/application.properties","menu_item_" + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuIteId.getSymbolName().toLowerCase()+ "_label",menuItemLabel,true) @TO@ propFileOperations.addPropertyIfNotExists(Path.SRC_MAIN_WEBAPP,"/WEB-INF/i18n/application.properties","menu_item_" + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuItemId.getSymbolName().toLowerCase()+ "_label",menuItemLabel,true) @AT@ 5550 @LENGTH@ 246
---------UPD SimpleName@@MethodName:addPropertyIfNotExists:[Path.SRC_MAIN_WEBAPP, "/WEB-INF/i18n/application.properties", "menu_item_" + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuIteId.getSymbolName().toLowerCase()+ "_label", menuItemLabel, true] @TO@ MethodName:addPropertyIfNotExists:[Path.SRC_MAIN_WEBAPP, "/WEB-INF/i18n/application.properties", "menu_item_" + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuItemId.getSymbolName().toLowerCase()+ "_label", menuItemLabel, true] @AT@ 5569 @LENGTH@ 227
------------UPD InfixExpression@@"menu_item_" + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuIteId.getSymbolName().toLowerCase()+ "_label" @TO@ "menu_item_" + menuCategoryName.getSymbolName().toLowerCase() + "_"+ menuItemId.getSymbolName().toLowerCase()+ "_label" @AT@ 5654 @LENGTH@ 120
---------------UPD MethodInvocation@@menuIteId.getSymbolName().toLowerCase() @TO@ menuItemId.getSymbolName().toLowerCase() @AT@ 5724 @LENGTH@ 39
------------------UPD SimpleName@@Name:menuIteId @TO@ Name:menuItemId @AT@ 5724 @LENGTH@ 9


UPD MethodDeclaration@@CoordinatorEnvironmentElement, MethodName:parseCoordinatorEnvironmentElement, XMLExtendedStreamReader reader, final TransactionSubsystemAdd add, XMLStreamException,  @TO@ void, MethodName:parseCoordinatorEnvironmentElement, XMLExtendedStreamReader reader, final TransactionSubsystemAdd add, XMLStreamException,  @AT@ 7479 @LENGTH@ 1203
---DEL SimpleType@@CoordinatorEnvironmentElement @AT@ 7449 @LENGTH@ 29
---INS PrimitiveType@@void @TO@ MethodDeclaration@@CoordinatorEnvironmentElement, MethodName:parseCoordinatorEnvironmentElement, XMLExtendedStreamReader reader, final TransactionSubsystemAdd add, XMLStreamException,  @AT@ 7449 @LENGTH@ 4
---DEL VariableDeclarationStatement@@final CoordinatorEnvironmentElement element=new CoordinatorEnvironmentElement(); @AT@ 7617 @LENGTH@ 82
------DEL Modifier@@final @AT@ 7617 @LENGTH@ 5
------DEL SimpleType@@CoordinatorEnvironmentElement @AT@ 7623 @LENGTH@ 29
------DEL VariableDeclarationFragment@@element=new CoordinatorEnvironmentElement() @AT@ 7653 @LENGTH@ 45
---------DEL SimpleName@@element @AT@ 7653 @LENGTH@ 7
---------DEL ClassInstanceCreation@@CoordinatorEnvironmentElement[] @AT@ 7663 @LENGTH@ 35
------------DEL New@@new @AT@ 7663 @LENGTH@ 3
------------DEL SimpleType@@CoordinatorEnvironmentElement @AT@ 7667 @LENGTH@ 29
---UPD ForStatement@@for (int i=0; i < count; i++) {  final String value=reader.getAttributeValue(i);  if (reader.getAttributeNamespace(i) != null) {    throw ParseUtils.unexpectedAttribute(reader,i);  } else {    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case ENABLE_STATISTICS:      element.setEnableStatistics(Boolean.parseBoolean(value));    break;case DEFAULT_TIMEOUT:  element.setDefaultTimeout(Integer.parseInt(value));break;default :ParseUtils.unexpectedAttribute(reader,i);}}} @TO@ for (int i=0; i < count; i++) {  final String value=reader.getAttributeValue(i);  if (reader.getAttributeNamespace(i) != null) {    throw ParseUtils.unexpectedAttribute(reader,i);  } else {    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case ENABLE_STATISTICS:      add.setCoordinatorEnableStatistics(Boolean.parseBoolean(value));    break;case DEFAULT_TIMEOUT:  add.setCoordinatorDefaultTimeout(Integer.parseInt(value));break;default :ParseUtils.unexpectedAttribute(reader,i);}}} @AT@ 7762 @LENGTH@ 818
------UPD IfStatement@@if (reader.getAttributeNamespace(i) != null) {  throw ParseUtils.unexpectedAttribute(reader,i);} else {  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case ENABLE_STATISTICS:    element.setEnableStatistics(Boolean.parseBoolean(value));  break;case DEFAULT_TIMEOUT:element.setDefaultTimeout(Integer.parseInt(value));break;default :ParseUtils.unexpectedAttribute(reader,i);}} @TO@ if (reader.getAttributeNamespace(i) != null) {  throw ParseUtils.unexpectedAttribute(reader,i);} else {  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case ENABLE_STATISTICS:    add.setCoordinatorEnableStatistics(Boolean.parseBoolean(value));  break;case DEFAULT_TIMEOUT:add.setCoordinatorDefaultTimeout(Integer.parseInt(value));break;default :ParseUtils.unexpectedAttribute(reader,i);}} @AT@ 7871 @LENGTH@ 699
---------UPD Block@@ElseBody:{  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case ENABLE_STATISTICS:    element.setEnableStatistics(Boolean.parseBoolean(value));  break;case DEFAULT_TIMEOUT:element.setDefaultTimeout(Integer.parseInt(value));break;default :ParseUtils.unexpectedAttribute(reader,i);}} @TO@ ElseBody:{  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case ENABLE_STATISTICS:    add.setCoordinatorEnableStatistics(Boolean.parseBoolean(value));  break;case DEFAULT_TIMEOUT:add.setCoordinatorDefaultTimeout(Integer.parseInt(value));break;default :ParseUtils.unexpectedAttribute(reader,i);}} @AT@ 8002 @LENGTH@ 568
------------UPD SwitchStatement@@switch (attribute) {case ENABLE_STATISTICS:  element.setEnableStatistics(Boolean.parseBoolean(value));break;case DEFAULT_TIMEOUT:element.setDefaultTimeout(Integer.parseInt(value));break;default :ParseUtils.unexpectedAttribute(reader,i);} @TO@ switch (attribute) {case ENABLE_STATISTICS:  add.setCoordinatorEnableStatistics(Boolean.parseBoolean(value));break;case DEFAULT_TIMEOUT:add.setCoordinatorDefaultTimeout(Integer.parseInt(value));break;default :ParseUtils.unexpectedAttribute(reader,i);} @AT@ 8116 @LENGTH@ 440
---------------UPD ExpressionStatement@@MethodInvocation:element.setEnableStatistics(Boolean.parseBoolean(value)) @TO@ MethodInvocation:add.setCoordinatorEnableStatistics(Boolean.parseBoolean(value)) @AT@ 8205 @LENGTH@ 57
------------------UPD MethodInvocation@@element.setEnableStatistics(Boolean.parseBoolean(value)) @TO@ add.setCoordinatorEnableStatistics(Boolean.parseBoolean(value)) @AT@ 8205 @LENGTH@ 56
---------------------UPD SimpleName@@Name:element @TO@ Name:add @AT@ 8205 @LENGTH@ 7
---------------------UPD SimpleName@@MethodName:setEnableStatistics:[Boolean.parseBoolean(value)] @TO@ MethodName:setCoordinatorEnableStatistics:[Boolean.parseBoolean(value)] @AT@ 8213 @LENGTH@ 48
---------------UPD ExpressionStatement@@MethodInvocation:element.setDefaultTimeout(Integer.parseInt(value)) @TO@ MethodInvocation:add.setCoordinatorDefaultTimeout(Integer.parseInt(value)) @AT@ 8360 @LENGTH@ 51
------------------UPD MethodInvocation@@element.setDefaultTimeout(Integer.parseInt(value)) @TO@ add.setCoordinatorDefaultTimeout(Integer.parseInt(value)) @AT@ 8360 @LENGTH@ 50
---------------------UPD SimpleName@@Name:element @TO@ Name:add @AT@ 8360 @LENGTH@ 7
---------------------UPD SimpleName@@MethodName:setDefaultTimeout:[Integer.parseInt(value)] @TO@ MethodName:setCoordinatorDefaultTimeout:[Integer.parseInt(value)] @AT@ 8368 @LENGTH@ 42
---DEL ReturnStatement@@SimpleName:element @AT@ 8661 @LENGTH@ 15
------DEL SimpleName@@element @AT@ 8668 @LENGTH@ 7


UPD IfStatement@@if (respawn) respawn(); @TO@ if (respawn) {  commandStream.closeSocketOutputStream();  respawn();} @AT@ 16037 @LENGTH@ 47
---UPD Block@@ThenBody:respawn(); @TO@ ThenBody:{  commandStream.closeSocketOutputStream();  respawn();} @AT@ 16074 @LENGTH@ 10
------INS ExpressionStatement@@MethodInvocation:commandStream.closeSocketOutputStream() @TO@ Block@@ThenBody:respawn(); @AT@ 16076 @LENGTH@ 40
---------INS MethodInvocation@@commandStream.closeSocketOutputStream() @TO@ ExpressionStatement@@MethodInvocation:commandStream.closeSocketOutputStream() @AT@ 16076 @LENGTH@ 39
------------INS SimpleName@@Name:commandStream @TO@ MethodInvocation@@commandStream.closeSocketOutputStream() @AT@ 16076 @LENGTH@ 13
------------INS SimpleName@@MethodName:closeSocketOutputStream:[] @TO@ MethodInvocation@@commandStream.closeSocketOutputStream() @AT@ 16090 @LENGTH@ 25


MOV ExpressionStatement@@MethodInvocation:answer.setFileName(file.getName()) @TO@ MethodDeclaration@@private, RemoteFile<FTPFile>, MethodName:asRemoteFile, String absolutePath, FTPFile file,  @AT@ 5020 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:ObjectHelper.close(in,"in",LOG) @TO@ MethodInvocation:IOHelper.close(in,"in",LOG) @AT@ 7628 @LENGTH@ 34
---UPD MethodInvocation@@ObjectHelper.close(in,"in",LOG) @TO@ IOHelper.close(in,"in",LOG) @AT@ 7628 @LENGTH@ 33
------UPD SimpleName@@Name:ObjectHelper @TO@ Name:IOHelper @AT@ 7628 @LENGTH@ 12


UPD VariableDeclarationStatement@@Bag bag=TransformedBag.decorateTransform(originalBag,TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER); @TO@ Bag<?> bag=TransformedBag.decorateTransform(originalBag,TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER); @AT@ 2923 @LENGTH@ 113
---DEL SimpleType@@Bag @AT@ 2923 @LENGTH@ 3
---INS ParameterizedType@@Bag<?> @TO@ VariableDeclarationStatement@@Bag bag=TransformedBag.decorateTransform(originalBag,TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER); @AT@ 2939 @LENGTH@ 6
------INS SimpleType@@Bag @TO@ ParameterizedType@@Bag<?> @AT@ 2939 @LENGTH@ 3
------INS WildcardType@@? @TO@ ParameterizedType@@Bag<?> @AT@ 2943 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:result.put((K)transformKey(entry.getKey()),transformValue(entry.getValue())) @TO@ MethodInvocation:result.put(transformKey(entry.getKey()),transformValue(entry.getValue())) @AT@ 7727 @LENGTH@ 79
---UPD MethodInvocation@@result.put((K)transformKey(entry.getKey()),transformValue(entry.getValue())) @TO@ result.put(transformKey(entry.getKey()),transformValue(entry.getValue())) @AT@ 7727 @LENGTH@ 78
------UPD SimpleName@@MethodName:put:[(K)transformKey(entry.getKey()), transformValue(entry.getValue())] @TO@ MethodName:put:[transformKey(entry.getKey()), transformValue(entry.getValue())] @AT@ 7734 @LENGTH@ 71
---------DEL CastExpression@@(K)transformKey(entry.getKey()) @AT@ 7738 @LENGTH@ 32
------------DEL SimpleType@@K @AT@ 7739 @LENGTH@ 1
---------MOV MethodInvocation@@transformKey(entry.getKey()) @TO@ SimpleName@@MethodName:put:[(K)transformKey(entry.getKey()), transformValue(entry.getValue())] @AT@ 7742 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @TO@ TypeDeclaration@@[public]URISupportTest, ContextTestSupport @AT@ 4833 @LENGTH@ 565
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 4833 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 4840 @LENGTH@ 4
---INS SimpleName@@MethodName:testParseParameters @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 4845 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 4874 @LENGTH@ 9
---INS VariableDeclarationStatement@@URI u=new URI("quartz:myGroup/myTimerName?cron=0+0+*+*+*+?"); @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 4894 @LENGTH@ 63
------INS SimpleType@@URI @TO@ VariableDeclarationStatement@@URI u=new URI("quartz:myGroup/myTimerName?cron=0+0+*+*+*+?"); @AT@ 4894 @LENGTH@ 3
------INS VariableDeclarationFragment@@u=new URI("quartz:myGroup/myTimerName?cron=0+0+*+*+*+?") @TO@ VariableDeclarationStatement@@URI u=new URI("quartz:myGroup/myTimerName?cron=0+0+*+*+*+?"); @AT@ 4898 @LENGTH@ 58
---------INS SimpleName@@u @TO@ VariableDeclarationFragment@@u=new URI("quartz:myGroup/myTimerName?cron=0+0+*+*+*+?") @AT@ 4898 @LENGTH@ 1
---------INS ClassInstanceCreation@@URI["quartz:myGroup/myTimerName?cron=0+0+*+*+*+?"] @TO@ VariableDeclarationFragment@@u=new URI("quartz:myGroup/myTimerName?cron=0+0+*+*+*+?") @AT@ 4902 @LENGTH@ 54
------------INS New@@new @TO@ ClassInstanceCreation@@URI["quartz:myGroup/myTimerName?cron=0+0+*+*+*+?"] @AT@ 4902 @LENGTH@ 3
------------INS SimpleType@@URI @TO@ ClassInstanceCreation@@URI["quartz:myGroup/myTimerName?cron=0+0+*+*+*+?"] @AT@ 4906 @LENGTH@ 3
------------INS StringLiteral@@"quartz:myGroup/myTimerName?cron=0+0+*+*+*+?" @TO@ ClassInstanceCreation@@URI["quartz:myGroup/myTimerName?cron=0+0+*+*+*+?"] @AT@ 4910 @LENGTH@ 45
---INS VariableDeclarationStatement@@Map<String,Object> params=URISupport.parseParameters(u); @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 4966 @LENGTH@ 59
------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> params=URISupport.parseParameters(u); @AT@ 4966 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 4966 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 4970 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 4978 @LENGTH@ 6
------INS VariableDeclarationFragment@@params=URISupport.parseParameters(u) @TO@ VariableDeclarationStatement@@Map<String,Object> params=URISupport.parseParameters(u); @AT@ 4986 @LENGTH@ 38
---------INS SimpleName@@params @TO@ VariableDeclarationFragment@@params=URISupport.parseParameters(u) @AT@ 4986 @LENGTH@ 6
---------INS MethodInvocation@@URISupport.parseParameters(u) @TO@ VariableDeclarationFragment@@params=URISupport.parseParameters(u) @AT@ 4995 @LENGTH@ 29
------------INS SimpleName@@Name:URISupport @TO@ MethodInvocation@@URISupport.parseParameters(u) @AT@ 4995 @LENGTH@ 10
------------INS SimpleName@@MethodName:parseParameters:[u] @TO@ MethodInvocation@@URISupport.parseParameters(u) @AT@ 5006 @LENGTH@ 18
---------------INS SimpleName@@u @TO@ SimpleName@@MethodName:parseParameters:[u] @AT@ 5022 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,params.size()) @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 5034 @LENGTH@ 31
------INS MethodInvocation@@assertEquals(1,params.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,params.size()) @AT@ 5034 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertEquals:[1, params.size()] @TO@ MethodInvocation@@assertEquals(1,params.size()) @AT@ 5034 @LENGTH@ 30
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, params.size()] @AT@ 5047 @LENGTH@ 1
------------INS MethodInvocation@@params.size() @TO@ SimpleName@@MethodName:assertEquals:[1, params.size()] @AT@ 5050 @LENGTH@ 13
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.size() @AT@ 5050 @LENGTH@ 6
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@params.size() @AT@ 5057 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("0 0 * * * ?",params.get("cron")) @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 5074 @LENGTH@ 48
------INS MethodInvocation@@assertEquals("0 0 * * * ?",params.get("cron")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("0 0 * * * ?",params.get("cron")) @AT@ 5074 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertEquals:["0 0 * * * ?", params.get("cron")] @TO@ MethodInvocation@@assertEquals("0 0 * * * ?",params.get("cron")) @AT@ 5074 @LENGTH@ 47
------------INS StringLiteral@@"0 0 * * * ?" @TO@ SimpleName@@MethodName:assertEquals:["0 0 * * * ?", params.get("cron")] @AT@ 5087 @LENGTH@ 13
------------INS MethodInvocation@@params.get("cron") @TO@ SimpleName@@MethodName:assertEquals:["0 0 * * * ?", params.get("cron")] @AT@ 5102 @LENGTH@ 18
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.get("cron") @AT@ 5102 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["cron"] @TO@ MethodInvocation@@params.get("cron") @AT@ 5109 @LENGTH@ 11
------------------INS StringLiteral@@"cron" @TO@ SimpleName@@MethodName:get:["cron"] @AT@ 5113 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:u=new URI("quartz:myGroup/myTimerName?cron=0+0+*+*+*+?&bar=123") @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 5132 @LENGTH@ 67
------INS Assignment@@u=new URI("quartz:myGroup/myTimerName?cron=0+0+*+*+*+?&bar=123") @TO@ ExpressionStatement@@Assignment:u=new URI("quartz:myGroup/myTimerName?cron=0+0+*+*+*+?&bar=123") @AT@ 5132 @LENGTH@ 66
---------INS SimpleName@@u @TO@ Assignment@@u=new URI("quartz:myGroup/myTimerName?cron=0+0+*+*+*+?&bar=123") @AT@ 5132 @LENGTH@ 1
---------INS Operator@@= @TO@ Assignment@@u=new URI("quartz:myGroup/myTimerName?cron=0+0+*+*+*+?&bar=123") @AT@ 5133 @LENGTH@ 1
---------INS ClassInstanceCreation@@URI["quartz:myGroup/myTimerName?cron=0+0+*+*+*+?&bar=123"] @TO@ Assignment@@u=new URI("quartz:myGroup/myTimerName?cron=0+0+*+*+*+?&bar=123") @AT@ 5136 @LENGTH@ 62
------------INS New@@new @TO@ ClassInstanceCreation@@URI["quartz:myGroup/myTimerName?cron=0+0+*+*+*+?&bar=123"] @AT@ 5136 @LENGTH@ 3
------------INS SimpleType@@URI @TO@ ClassInstanceCreation@@URI["quartz:myGroup/myTimerName?cron=0+0+*+*+*+?&bar=123"] @AT@ 5140 @LENGTH@ 3
------------INS StringLiteral@@"quartz:myGroup/myTimerName?cron=0+0+*+*+*+?&bar=123" @TO@ ClassInstanceCreation@@URI["quartz:myGroup/myTimerName?cron=0+0+*+*+*+?&bar=123"] @AT@ 5144 @LENGTH@ 53
---INS ExpressionStatement@@Assignment:params=URISupport.parseParameters(u) @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 5208 @LENGTH@ 39
------INS Assignment@@params=URISupport.parseParameters(u) @TO@ ExpressionStatement@@Assignment:params=URISupport.parseParameters(u) @AT@ 5208 @LENGTH@ 38
---------INS SimpleName@@params @TO@ Assignment@@params=URISupport.parseParameters(u) @AT@ 5208 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@params=URISupport.parseParameters(u) @AT@ 5214 @LENGTH@ 1
---------INS MethodInvocation@@URISupport.parseParameters(u) @TO@ Assignment@@params=URISupport.parseParameters(u) @AT@ 5217 @LENGTH@ 29
------------INS SimpleName@@Name:URISupport @TO@ MethodInvocation@@URISupport.parseParameters(u) @AT@ 5217 @LENGTH@ 10
------------INS SimpleName@@MethodName:parseParameters:[u] @TO@ MethodInvocation@@URISupport.parseParameters(u) @AT@ 5228 @LENGTH@ 18
---------------INS SimpleName@@u @TO@ SimpleName@@MethodName:parseParameters:[u] @AT@ 5244 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals(2,params.size()) @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 5256 @LENGTH@ 31
------INS MethodInvocation@@assertEquals(2,params.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(2,params.size()) @AT@ 5256 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertEquals:[2, params.size()] @TO@ MethodInvocation@@assertEquals(2,params.size()) @AT@ 5256 @LENGTH@ 30
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:[2, params.size()] @AT@ 5269 @LENGTH@ 1
------------INS MethodInvocation@@params.size() @TO@ SimpleName@@MethodName:assertEquals:[2, params.size()] @AT@ 5272 @LENGTH@ 13
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.size() @AT@ 5272 @LENGTH@ 6
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@params.size() @AT@ 5279 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("0 0 * * * ?",params.get("cron")) @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 5296 @LENGTH@ 48
------INS MethodInvocation@@assertEquals("0 0 * * * ?",params.get("cron")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("0 0 * * * ?",params.get("cron")) @AT@ 5296 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertEquals:["0 0 * * * ?", params.get("cron")] @TO@ MethodInvocation@@assertEquals("0 0 * * * ?",params.get("cron")) @AT@ 5296 @LENGTH@ 47
------------INS StringLiteral@@"0 0 * * * ?" @TO@ SimpleName@@MethodName:assertEquals:["0 0 * * * ?", params.get("cron")] @AT@ 5309 @LENGTH@ 13
------------INS MethodInvocation@@params.get("cron") @TO@ SimpleName@@MethodName:assertEquals:["0 0 * * * ?", params.get("cron")] @AT@ 5324 @LENGTH@ 18
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.get("cron") @AT@ 5324 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["cron"] @TO@ MethodInvocation@@params.get("cron") @AT@ 5331 @LENGTH@ 11
------------------INS StringLiteral@@"cron" @TO@ SimpleName@@MethodName:get:["cron"] @AT@ 5335 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("123",params.get("bar")) @TO@ MethodDeclaration@@public, void, MethodName:testParseParameters, Exception,  @AT@ 5353 @LENGTH@ 39
------INS MethodInvocation@@assertEquals("123",params.get("bar")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("123",params.get("bar")) @AT@ 5353 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertEquals:["123", params.get("bar")] @TO@ MethodInvocation@@assertEquals("123",params.get("bar")) @AT@ 5353 @LENGTH@ 38
------------INS StringLiteral@@"123" @TO@ SimpleName@@MethodName:assertEquals:["123", params.get("bar")] @AT@ 5366 @LENGTH@ 5
------------INS MethodInvocation@@params.get("bar") @TO@ SimpleName@@MethodName:assertEquals:["123", params.get("bar")] @AT@ 5373 @LENGTH@ 17
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.get("bar") @AT@ 5373 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["bar"] @TO@ MethodInvocation@@params.get("bar") @AT@ 5380 @LENGTH@ 10
------------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:get:["bar"] @AT@ 5384 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("ftp://scott@localhost/public/reports?password=tiger&binary=true&consumer.delay=" + delay).to("file://target/test-reports") @TO@ MethodInvocation:from("ftp://tiger:scott@localhost/public/reports?binary=true&consumer.delay=" + delay).to("file://target/test-reports") @AT@ 2100 @LENGTH@ 154
---UPD MethodInvocation@@from("ftp://scott@localhost/public/reports?password=tiger&binary=true&consumer.delay=" + delay).to("file://target/test-reports") @TO@ from("ftp://tiger:scott@localhost/public/reports?binary=true&consumer.delay=" + delay).to("file://target/test-reports") @AT@ 2100 @LENGTH@ 153
------UPD MethodInvocation@@MethodName:from:["ftp://scott@localhost/public/reports?password=tiger&binary=true&consumer.delay=" + delay] @TO@ MethodName:from:["ftp://tiger:scott@localhost/public/reports?binary=true&consumer.delay=" + delay] @AT@ 2100 @LENGTH@ 95
---------UPD InfixExpression@@"ftp://scott@localhost/public/reports?password=tiger&binary=true&consumer.delay=" + delay @TO@ "ftp://tiger:scott@localhost/public/reports?binary=true&consumer.delay=" + delay @AT@ 2105 @LENGTH@ 89
------------UPD StringLiteral@@"ftp://scott@localhost/public/reports?password=tiger&binary=true&consumer.delay=" @TO@ "ftp://tiger:scott@localhost/public/reports?binary=true&consumer.delay=" @AT@ 2105 @LENGTH@ 81


UPD VariableDeclarationStatement@@Map.Entry entry=(Map.Entry)entrySet.iterator().next(); @TO@ Map.Entry entry=entrySet.iterator().next(); @AT@ 4165 @LENGTH@ 57
---UPD VariableDeclarationFragment@@entry=(Map.Entry)entrySet.iterator().next() @TO@ entry=entrySet.iterator().next() @AT@ 4175 @LENGTH@ 46
------DEL CastExpression@@(Map.Entry)entrySet.iterator().next() @AT@ 4183 @LENGTH@ 38
---------DEL SimpleType@@Map.Entry @AT@ 4184 @LENGTH@ 9
---------DEL MethodInvocation@@entrySet.iterator().next() @AT@ 4195 @LENGTH@ 26
------INS MethodInvocation@@entrySet.iterator().next() @TO@ VariableDeclarationFragment@@entry=(Map.Entry)entrySet.iterator().next() @AT@ 4183 @LENGTH@ 26
---------MOV MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@entrySet.iterator().next() @AT@ 4195 @LENGTH@ 19
---------MOV SimpleName@@Name:entrySet @TO@ MethodInvocation@@entrySet.iterator().next() @AT@ 4195 @LENGTH@ 8
---------MOV SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@entrySet.iterator().next() @AT@ 4215 @LENGTH@ 6


UPD IfStatement@@if (!Arrays.equals(calculatedBytes,signatureBytes)) {  throw new InvalidSignatureException("Invalid signature for signature method " + getName());} @TO@ if (!safeArrayEquals(calculatedBytes,signatureBytes)) {  throw new InvalidSignatureException("Invalid signature for signature method " + getName());} @AT@ 4199 @LENGTH@ 162
---UPD PrefixExpression@@!Arrays.equals(calculatedBytes,signatureBytes) @TO@ !safeArrayEquals(calculatedBytes,signatureBytes) @AT@ 4203 @LENGTH@ 47
------UPD MethodInvocation@@Arrays.equals(calculatedBytes,signatureBytes) @TO@ safeArrayEquals(calculatedBytes,signatureBytes) @AT@ 4204 @LENGTH@ 46
---------DEL SimpleName@@Name:Arrays @AT@ 4204 @LENGTH@ 6
---------UPD SimpleName@@MethodName:equals:[calculatedBytes, signatureBytes] @TO@ MethodName:safeArrayEquals:[calculatedBytes, signatureBytes] @AT@ 4211 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("Bye World") @TO@ MethodInvocation:mock.expectedMessageCount(1) @AT@ 1499 @LENGTH@ 41
---UPD MethodInvocation@@mock.expectedBodiesReceived("Bye World") @TO@ mock.expectedMessageCount(1) @AT@ 1499 @LENGTH@ 40
------UPD SimpleName@@MethodName:expectedBodiesReceived:["Bye World"] @TO@ MethodName:expectedMessageCount:[1] @AT@ 1504 @LENGTH@ 35
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedBodiesReceived:["Bye World"] @AT@ 1525 @LENGTH@ 1
---------DEL StringLiteral@@"Bye World" @AT@ 1527 @LENGTH@ 11


INS ExpressionStatement@@Assignment:suspended=false @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 1650 @LENGTH@ 18
---INS Assignment@@suspended=false @TO@ ExpressionStatement@@Assignment:suspended=false @AT@ 1650 @LENGTH@ 17
------INS SimpleName@@suspended @TO@ Assignment@@suspended=false @AT@ 1650 @LENGTH@ 9
------INS Operator@@= @TO@ Assignment@@suspended=false @AT@ 1659 @LENGTH@ 1
------INS BooleanLiteral@@false @TO@ Assignment@@suspended=false @AT@ 1662 @LENGTH@ 5


UPD IfStatement@@if (processor == null || !continueProcessing(exchange)) {  return true;} @TO@ if (processor == null || !continueProcessing(exchange)) {  callback.done(true);  return true;} @AT@ 8721 @LENGTH@ 92
---UPD Block@@ThenBody:{  return true;} @TO@ ThenBody:{  callback.done(true);  return true;} @AT@ 8777 @LENGTH@ 36
------INS ExpressionStatement@@MethodInvocation:callback.done(true) @TO@ Block@@ThenBody:{  return true;} @AT@ 8836 @LENGTH@ 20
---------INS MethodInvocation@@callback.done(true) @TO@ ExpressionStatement@@MethodInvocation:callback.done(true) @AT@ 8836 @LENGTH@ 19
------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(true) @AT@ 8836 @LENGTH@ 8
------------INS SimpleName@@MethodName:done:[true] @TO@ MethodInvocation@@callback.done(true) @AT@ 8845 @LENGTH@ 10
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:done:[true] @AT@ 8850 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("Bye World",out.getOut().getBody()) @TO@ MethodInvocation:assertEquals("Bye World",out.getIn().getBody()) @AT@ 2024 @LENGTH@ 50
---UPD MethodInvocation@@assertEquals("Bye World",out.getOut().getBody()) @TO@ assertEquals("Bye World",out.getIn().getBody()) @AT@ 2024 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertEquals:["Bye World", out.getOut().getBody()] @TO@ MethodName:assertEquals:["Bye World", out.getIn().getBody()] @AT@ 2024 @LENGTH@ 49
---------UPD MethodInvocation@@out.getOut().getBody() @TO@ out.getIn().getBody() @AT@ 2050 @LENGTH@ 22
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getIn:[] @AT@ 2050 @LENGTH@ 12


UPD MethodDeclaration@@public, voidMethodName:RssEntryPollingConsumer, RssEndpoint endpoint, Processor processor, boolean filter, Date lastUpdate,  @TO@ public, voidMethodName:RssEntryPollingConsumer, RssEndpoint endpoint, Processor processor, boolean filter, Date lastUpdate, boolean throttleEntries,  @AT@ 1265 @LENGTH@ 170
---INS SingleVariableDeclaration@@boolean throttleEntries @TO@ MethodDeclaration@@public, voidMethodName:RssEntryPollingConsumer, RssEndpoint endpoint, Processor processor, boolean filter, Date lastUpdate,  @AT@ 1371 @LENGTH@ 23
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean throttleEntries @AT@ 1371 @LENGTH@ 7
------INS SimpleName@@throttleEntries @TO@ SingleVariableDeclaration@@boolean throttleEntries @AT@ 1379 @LENGTH@ 15
---UPD SuperConstructorInvocation@@super(endpoint,processor,filter,lastUpdate);
 @TO@ super(endpoint,processor,filter,lastUpdate,throttleEntries);
 @AT@ 1382 @LENGTH@ 47
------INS SimpleName@@throttleEntries @TO@ SuperConstructorInvocation@@super(endpoint,processor,filter,lastUpdate);
 @AT@ 1453 @LENGTH@ 15


INS IfStatement@@if (task != null) {  task.cancel();} @TO@ MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 1915 @LENGTH@ 56
---INS InfixExpression@@task != null @TO@ IfStatement@@if (task != null) {  task.cancel();} @AT@ 1919 @LENGTH@ 12
------INS SimpleName@@task @TO@ InfixExpression@@task != null @AT@ 1919 @LENGTH@ 4
------INS Operator@@!= @TO@ InfixExpression@@task != null @AT@ 1923 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@task != null @AT@ 1927 @LENGTH@ 4
---INS Block@@ThenBody:{  task.cancel();} @TO@ IfStatement@@if (task != null) {  task.cancel();} @AT@ 1933 @LENGTH@ 38
------MOV ExpressionStatement@@MethodInvocation:task.cancel() @TO@ Block@@ThenBody:{  task.cancel();} @AT@ 1906 @LENGTH@ 14


UPD MethodDeclaration@@private, static, final, Collection<ServiceReference>, MethodName:asCollection, ServiceReference[] references,  @TO@ private, static, Collection<ServiceReference>, MethodName:asCollection, ServiceReference[] references,  @AT@ 5194 @LENGTH@ 208
---DEL Modifier@@final @AT@ 5209 @LENGTH@ 5


UPD IfStatement@@if (!ok) {  for (int i=0; i < rollbacks.size(); i++) {    AbstractHostModelUpdate<?> rollback=rollbacks.get(i);    try {      hostModel.update(rollback);    } catch (    UpdateFailedException e) {    }  }} else {  configPersister.persistConfiguration(hostModel);  for (  AbstractHostModelUpdate<?> update : updates) {    result.add(new HostUpdateApplierResponse(getAffectedServers(update)));  }} @TO@ if (!ok) {  for (int i=0; i < rollbacks.size(); i++) {    AbstractHostModelUpdate<?> rollback=rollbacks.get(i);    try {      hostModel.update(rollback);    } catch (    UpdateFailedException e) {    }  }} else {  configPersister.persistConfiguration(hostModel);  result.clear();  for (  AbstractHostModelUpdate<?> update : updates) {    result.add(new HostUpdateApplierResponse(getAffectedServers(update)));  }} @AT@ 6563 @LENGTH@ 722
---UPD Block@@ElseBody:{  configPersister.persistConfiguration(hostModel);  for (  AbstractHostModelUpdate<?> update : updates) {    result.add(new HostUpdateApplierResponse(getAffectedServers(update)));  }} @TO@ ElseBody:{  configPersister.persistConfiguration(hostModel);  result.clear();  for (  AbstractHostModelUpdate<?> update : updates) {    result.add(new HostUpdateApplierResponse(getAffectedServers(update)));  }} @AT@ 7018 @LENGTH@ 267
------INS ExpressionStatement@@MethodInvocation:result.clear() @TO@ Block@@ElseBody:{  configPersister.persistConfiguration(hostModel);  for (  AbstractHostModelUpdate<?> update : updates) {    result.add(new HostUpdateApplierResponse(getAffectedServers(update)));  }} @AT@ 7123 @LENGTH@ 15
---------INS MethodInvocation@@result.clear() @TO@ ExpressionStatement@@MethodInvocation:result.clear() @AT@ 7123 @LENGTH@ 14
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.clear() @AT@ 7123 @LENGTH@ 6
------------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@result.clear() @AT@ 7130 @LENGTH@ 7


INS VariableDeclarationStatement@@final String originalName=original.getSocketBindingGroupName(); @TO@ MethodDeclaration@@public, ServerElementSocketBindingGroupUpdate, MethodName:getCompensatingUpdate, ServerElement original,  @AT@ 1678 @LENGTH@ 65
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final String originalName=original.getSocketBindingGroupName(); @AT@ 1678 @LENGTH@ 5
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String originalName=original.getSocketBindingGroupName(); @AT@ 1684 @LENGTH@ 6
---INS VariableDeclarationFragment@@originalName=original.getSocketBindingGroupName() @TO@ VariableDeclarationStatement@@final String originalName=original.getSocketBindingGroupName(); @AT@ 1691 @LENGTH@ 51
------INS SimpleName@@originalName @TO@ VariableDeclarationFragment@@originalName=original.getSocketBindingGroupName() @AT@ 1691 @LENGTH@ 12
------INS MethodInvocation@@original.getSocketBindingGroupName() @TO@ VariableDeclarationFragment@@originalName=original.getSocketBindingGroupName() @AT@ 1706 @LENGTH@ 36
---------INS SimpleName@@Name:original @TO@ MethodInvocation@@original.getSocketBindingGroupName() @AT@ 1706 @LENGTH@ 8
---------INS SimpleName@@MethodName:getSocketBindingGroupName:[] @TO@ MethodInvocation@@original.getSocketBindingGroupName() @AT@ 1715 @LENGTH@ 27


INS ExpressionStatement@@MethodInvocation:managementElement.writeContent(streamWriter) @TO@ MethodDeclaration@@public, void, MethodName:writeContent, final XMLExtendedStreamWriter streamWriter, XMLStreamException,  @AT@ 9206 @LENGTH@ 45
---INS MethodInvocation@@managementElement.writeContent(streamWriter) @TO@ ExpressionStatement@@MethodInvocation:managementElement.writeContent(streamWriter) @AT@ 9206 @LENGTH@ 44
------INS SimpleName@@Name:managementElement @TO@ MethodInvocation@@managementElement.writeContent(streamWriter) @AT@ 9206 @LENGTH@ 17
------INS SimpleName@@MethodName:writeContent:[streamWriter] @TO@ MethodInvocation@@managementElement.writeContent(streamWriter) @AT@ 9224 @LENGTH@ 26
---------INS SimpleName@@streamWriter @TO@ SimpleName@@MethodName:writeContent:[streamWriter] @AT@ 9237 @LENGTH@ 12


UPD TryStatement@@try {  final Command command=Command.valueOf(b.toString());switch (command) {case SHUTDOWN:{      shutdown();      break;    }case MSG:{    if (status == Status.MORE) {      status=StreamUtils.readWord(input,b);      final String sourceProcess=b.toString();      final List<String> msg=new ArrayList<String>();      while (status == Status.MORE) {        status=StreamUtils.readWord(input,b);        msg.add(b.toString());      }      if (status == Status.END_OF_LINE) {        try {          handler.handleMessage(msg);        } catch (        Throwable t) {        }      }    }    break;  }case MSG_BYTES:{  if (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    final String sourceProcess=b.toString();    if (status == Status.MORE) {      StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);      status=cb.getStatus();      if (cb.getChecksum() != cb.getExpectedChecksum()) {        logger.error("Incorrect checksum from process " + sourceProcess);      } else {        try {          handler.handleMessage(cb.getBytes());        } catch (        Throwable t) {        }      }    }  }  break;}}} catch (IllegalArgumentException e) {} @TO@ try {  final Command command=Command.valueOf(b.toString());switch (command) {case SHUTDOWN:{      shutdown();      break;    }case MSG:{    if (status == Status.MORE) {      status=StreamUtils.readWord(input,b);      final String sourceProcess=b.toString();      final List<String> msg=new ArrayList<String>();      while (status == Status.MORE) {        status=StreamUtils.readWord(input,b);        msg.add(b.toString());      }      if (status == Status.END_OF_LINE) {        try {          handler.handleMessage(msg);        } catch (        Throwable t) {          logger.error("Caught exception handling message from " + sourceProcess,t);        }      }    }    break;  }case MSG_BYTES:{  if (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    final String sourceProcess=b.toString();    if (status == Status.MORE) {      StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);      status=cb.getStatus();      if (cb.getChecksum() != cb.getExpectedChecksum()) {        logger.error("Incorrect checksum from process " + sourceProcess);      } else {        try {          handler.handleMessage(cb.getBytes());        } catch (        Throwable t) {          logger.error("Caught exception handling message from " + sourceProcess,t);        }      }    }  }  break;}}} catch (IllegalArgumentException e) {logger.error("Received unknown command: " + b.toString());} @AT@ 3585 @LENGTH@ 2985
---UPD SwitchStatement@@switch (command) {case SHUTDOWN:{    shutdown();    break;  }case MSG:{  if (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    final String sourceProcess=b.toString();    final List<String> msg=new ArrayList<String>();    while (status == Status.MORE) {      status=StreamUtils.readWord(input,b);      msg.add(b.toString());    }    if (status == Status.END_OF_LINE) {      try {        handler.handleMessage(msg);      } catch (      Throwable t) {      }    }  }  break;}case MSG_BYTES:{if (status == Status.MORE) {  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);    status=cb.getStatus();    if (cb.getChecksum() != cb.getExpectedChecksum()) {      logger.error("Incorrect checksum from process " + sourceProcess);    } else {      try {        handler.handleMessage(cb.getBytes());      } catch (      Throwable t) {      }    }  }}break;}} @TO@ switch (command) {case SHUTDOWN:{    shutdown();    break;  }case MSG:{  if (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    final String sourceProcess=b.toString();    final List<String> msg=new ArrayList<String>();    while (status == Status.MORE) {      status=StreamUtils.readWord(input,b);      msg.add(b.toString());    }    if (status == Status.END_OF_LINE) {      try {        handler.handleMessage(msg);      } catch (      Throwable t) {        logger.error("Caught exception handling message from " + sourceProcess,t);      }    }  }  break;}case MSG_BYTES:{if (status == Status.MORE) {  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);    status=cb.getStatus();    if (cb.getChecksum() != cb.getExpectedChecksum()) {      logger.error("Incorrect checksum from process " + sourceProcess);    } else {      try {        handler.handleMessage(cb.getBytes());      } catch (      Throwable t) {        logger.error("Caught exception handling message from " + sourceProcess,t);      }    }  }}break;}} @AT@ 3694 @LENGTH@ 2749
------UPD IfStatement@@if (status == Status.MORE) {  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  final List<String> msg=new ArrayList<String>();  while (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    msg.add(b.toString());  }  if (status == Status.END_OF_LINE) {    try {      handler.handleMessage(msg);    } catch (    Throwable t) {    }  }} @TO@ if (status == Status.MORE) {  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  final List<String> msg=new ArrayList<String>();  while (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    msg.add(b.toString());  }  if (status == Status.END_OF_LINE) {    try {      handler.handleMessage(msg);    } catch (    Throwable t) {      logger.error("Caught exception handling message from " + sourceProcess,t);    }  }} @AT@ 3943 @LENGTH@ 1041
---------UPD Block@@ThenBody:{  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  final List<String> msg=new ArrayList<String>();  while (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    msg.add(b.toString());  }  if (status == Status.END_OF_LINE) {    try {      handler.handleMessage(msg);    } catch (    Throwable t) {    }  }} @TO@ ThenBody:{  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  final List<String> msg=new ArrayList<String>();  while (status == Status.MORE) {    status=StreamUtils.readWord(input,b);    msg.add(b.toString());  }  if (status == Status.END_OF_LINE) {    try {      handler.handleMessage(msg);    } catch (    Throwable t) {      logger.error("Caught exception handling message from " + sourceProcess,t);    }  }} @AT@ 3970 @LENGTH@ 1014
------------UPD IfStatement@@if (status == Status.END_OF_LINE) {  try {    handler.handleMessage(msg);  } catch (  Throwable t) {  }} @TO@ if (status == Status.END_OF_LINE) {  try {    handler.handleMessage(msg);  } catch (  Throwable t) {    logger.error("Caught exception handling message from " + sourceProcess,t);  }} @AT@ 4500 @LENGTH@ 353
---------------UPD Block@@ThenBody:{  try {    handler.handleMessage(msg);  } catch (  Throwable t) {  }} @TO@ ThenBody:{  try {    handler.handleMessage(msg);  } catch (  Throwable t) {    logger.error("Caught exception handling message from " + sourceProcess,t);  }} @AT@ 4534 @LENGTH@ 319
------------------UPD TryStatement@@try {  handler.handleMessage(msg);} catch (Throwable t) {} @TO@ try {  handler.handleMessage(msg);} catch (Throwable t) {  logger.error("Caught exception handling message from " + sourceProcess,t);} @AT@ 4576 @LENGTH@ 239
---------------------UPD CatchClause@@catch (Throwable t) {} @TO@ catch (Throwable t) {  logger.error("Caught exception handling message from " + sourceProcess,t);} @AT@ 4696 @LENGTH@ 119
------------------------INS ExpressionStatement@@MethodInvocation:logger.error("Caught exception handling message from " + sourceProcess,t) @TO@ CatchClause@@catch (Throwable t) {} @AT@ 4762 @LENGTH@ 75
---------------------------INS MethodInvocation@@logger.error("Caught exception handling message from " + sourceProcess,t) @TO@ ExpressionStatement@@MethodInvocation:logger.error("Caught exception handling message from " + sourceProcess,t) @AT@ 4762 @LENGTH@ 74
------------------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.error("Caught exception handling message from " + sourceProcess,t) @AT@ 4762 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:error:["Caught exception handling message from " + sourceProcess, t] @TO@ MethodInvocation@@logger.error("Caught exception handling message from " + sourceProcess,t) @AT@ 4769 @LENGTH@ 67
---------------------------------INS InfixExpression@@"Caught exception handling message from " + sourceProcess @TO@ SimpleName@@MethodName:error:["Caught exception handling message from " + sourceProcess, t] @AT@ 4775 @LENGTH@ 57
------------------------------------INS StringLiteral@@"Caught exception handling message from " @TO@ InfixExpression@@"Caught exception handling message from " + sourceProcess @AT@ 4775 @LENGTH@ 41
------------------------------------INS Operator@@+ @TO@ InfixExpression@@"Caught exception handling message from " + sourceProcess @AT@ 4816 @LENGTH@ 1
------------------------------------INS SimpleName@@sourceProcess @TO@ InfixExpression@@"Caught exception handling message from " + sourceProcess @AT@ 4819 @LENGTH@ 13
---------------------------------INS SimpleName@@t @TO@ SimpleName@@MethodName:error:["Caught exception handling message from " + sourceProcess, t] @AT@ 4834 @LENGTH@ 1
------UPD IfStatement@@if (status == Status.MORE) {  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);    status=cb.getStatus();    if (cb.getChecksum() != cb.getExpectedChecksum()) {      logger.error("Incorrect checksum from process " + sourceProcess);    } else {      try {        handler.handleMessage(cb.getBytes());      } catch (      Throwable t) {      }    }  }} @TO@ if (status == Status.MORE) {  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);    status=cb.getStatus();    if (cb.getChecksum() != cb.getExpectedChecksum()) {      logger.error("Incorrect checksum from process " + sourceProcess);    } else {      try {        handler.handleMessage(cb.getBytes());      } catch (      Throwable t) {        logger.error("Caught exception handling message from " + sourceProcess,t);      }    }  }} @AT@ 5132 @LENGTH@ 1216
---------UPD Block@@ThenBody:{  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);    status=cb.getStatus();    if (cb.getChecksum() != cb.getExpectedChecksum()) {      logger.error("Incorrect checksum from process " + sourceProcess);    } else {      try {        handler.handleMessage(cb.getBytes());      } catch (      Throwable t) {      }    }  }} @TO@ ThenBody:{  status=StreamUtils.readWord(input,b);  final String sourceProcess=b.toString();  if (status == Status.MORE) {    StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);    status=cb.getStatus();    if (cb.getChecksum() != cb.getExpectedChecksum()) {      logger.error("Incorrect checksum from process " + sourceProcess);    } else {      try {        handler.handleMessage(cb.getBytes());      } catch (      Throwable t) {        logger.error("Caught exception handling message from " + sourceProcess,t);      }    }  }} @AT@ 5159 @LENGTH@ 1189
------------UPD IfStatement@@if (status == Status.MORE) {  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  status=cb.getStatus();  if (cb.getChecksum() != cb.getExpectedChecksum()) {    logger.error("Incorrect checksum from process " + sourceProcess);  } else {    try {      handler.handleMessage(cb.getBytes());    } catch (    Throwable t) {    }  }} @TO@ if (status == Status.MORE) {  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  status=cb.getStatus();  if (cb.getChecksum() != cb.getExpectedChecksum()) {    logger.error("Incorrect checksum from process " + sourceProcess);  } else {    try {      handler.handleMessage(cb.getBytes());    } catch (    Throwable t) {      logger.error("Caught exception handling message from " + sourceProcess,t);    }  }} @AT@ 5353 @LENGTH@ 961
---------------UPD Block@@ThenBody:{  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  status=cb.getStatus();  if (cb.getChecksum() != cb.getExpectedChecksum()) {    logger.error("Incorrect checksum from process " + sourceProcess);  } else {    try {      handler.handleMessage(cb.getBytes());    } catch (    Throwable t) {    }  }} @TO@ ThenBody:{  StreamUtils.CheckedBytes cb=StreamUtils.readCheckedBytes(input);  status=cb.getStatus();  if (cb.getChecksum() != cb.getExpectedChecksum()) {    logger.error("Incorrect checksum from process " + sourceProcess);  } else {    try {      handler.handleMessage(cb.getBytes());    } catch (    Throwable t) {      logger.error("Caught exception handling message from " + sourceProcess,t);    }  }} @AT@ 5380 @LENGTH@ 934
------------------UPD IfStatement@@if (cb.getChecksum() != cb.getExpectedChecksum()) {  logger.error("Incorrect checksum from process " + sourceProcess);} else {  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {  }} @TO@ if (cb.getChecksum() != cb.getExpectedChecksum()) {  logger.error("Incorrect checksum from process " + sourceProcess);} else {  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {    logger.error("Caught exception handling message from " + sourceProcess,t);  }} @AT@ 5594 @LENGTH@ 682
---------------------UPD Block@@ElseBody:{  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {  }} @TO@ ElseBody:{  try {    handler.handleMessage(cb.getBytes());  } catch (  Throwable t) {    logger.error("Caught exception handling message from " + sourceProcess,t);  }} @AT@ 5923 @LENGTH@ 353
------------------------UPD TryStatement@@try {  handler.handleMessage(cb.getBytes());} catch (Throwable t) {} @TO@ try {  handler.handleMessage(cb.getBytes());} catch (Throwable t) {  logger.error("Caught exception handling message from " + sourceProcess,t);} @AT@ 5969 @LENGTH@ 265
---------------------------UPD CatchClause@@catch (Throwable t) {} @TO@ catch (Throwable t) {  logger.error("Caught exception handling message from " + sourceProcess,t);} @AT@ 6107 @LENGTH@ 127
------------------------------INS ExpressionStatement@@MethodInvocation:logger.error("Caught exception handling message from " + sourceProcess,t) @TO@ CatchClause@@catch (Throwable t) {} @AT@ 6241 @LENGTH@ 75
---------------------------------INS MethodInvocation@@logger.error("Caught exception handling message from " + sourceProcess,t) @TO@ ExpressionStatement@@MethodInvocation:logger.error("Caught exception handling message from " + sourceProcess,t) @AT@ 6241 @LENGTH@ 74
------------------------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.error("Caught exception handling message from " + sourceProcess,t) @AT@ 6241 @LENGTH@ 6
------------------------------------INS SimpleName@@MethodName:error:["Caught exception handling message from " + sourceProcess, t] @TO@ MethodInvocation@@logger.error("Caught exception handling message from " + sourceProcess,t) @AT@ 6248 @LENGTH@ 67
---------------------------------------INS InfixExpression@@"Caught exception handling message from " + sourceProcess @TO@ SimpleName@@MethodName:error:["Caught exception handling message from " + sourceProcess, t] @AT@ 6254 @LENGTH@ 57
------------------------------------------INS StringLiteral@@"Caught exception handling message from " @TO@ InfixExpression@@"Caught exception handling message from " + sourceProcess @AT@ 6254 @LENGTH@ 41
------------------------------------------INS Operator@@+ @TO@ InfixExpression@@"Caught exception handling message from " + sourceProcess @AT@ 6295 @LENGTH@ 1
------------------------------------------INS SimpleName@@sourceProcess @TO@ InfixExpression@@"Caught exception handling message from " + sourceProcess @AT@ 6298 @LENGTH@ 13
---------------------------------------INS SimpleName@@t @TO@ SimpleName@@MethodName:error:["Caught exception handling message from " + sourceProcess, t] @AT@ 6313 @LENGTH@ 1
---UPD CatchClause@@catch (IllegalArgumentException e) {} @TO@ catch (IllegalArgumentException e) {  logger.error("Received unknown command: " + b.toString());} @AT@ 6466 @LENGTH@ 104
------INS ExpressionStatement@@MethodInvocation:logger.error("Received unknown command: " + b.toString()) @TO@ CatchClause@@catch (IllegalArgumentException e) {} @AT@ 6737 @LENGTH@ 58
---------INS MethodInvocation@@logger.error("Received unknown command: " + b.toString()) @TO@ ExpressionStatement@@MethodInvocation:logger.error("Received unknown command: " + b.toString()) @AT@ 6737 @LENGTH@ 57
------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.error("Received unknown command: " + b.toString()) @AT@ 6737 @LENGTH@ 6
------------INS SimpleName@@MethodName:error:["Received unknown command: " + b.toString()] @TO@ MethodInvocation@@logger.error("Received unknown command: " + b.toString()) @AT@ 6744 @LENGTH@ 50
---------------INS InfixExpression@@"Received unknown command: " + b.toString() @TO@ SimpleName@@MethodName:error:["Received unknown command: " + b.toString()] @AT@ 6750 @LENGTH@ 43
------------------INS StringLiteral@@"Received unknown command: " @TO@ InfixExpression@@"Received unknown command: " + b.toString() @AT@ 6750 @LENGTH@ 28
------------------INS Operator@@+ @TO@ InfixExpression@@"Received unknown command: " + b.toString() @AT@ 6778 @LENGTH@ 1
------------------INS MethodInvocation@@b.toString() @TO@ InfixExpression@@"Received unknown command: " + b.toString() @AT@ 6781 @LENGTH@ 12
---------------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.toString() @AT@ 6781 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@b.toString() @AT@ 6783 @LENGTH@ 10


DEL MethodDeclaration@@public, void, MethodName:setDirectory, String directory,  @AT@ 1783 @LENGTH@ 281
---DEL Modifier@@public @AT@ 1783 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1790 @LENGTH@ 4
---DEL SimpleName@@MethodName:setDirectory @AT@ 1795 @LENGTH@ 12
---DEL SingleVariableDeclaration@@String directory @AT@ 1808 @LENGTH@ 16
------DEL SimpleType@@String @AT@ 1808 @LENGTH@ 6
------DEL SimpleName@@directory @AT@ 1815 @LENGTH@ 9
---DEL ExpressionStatement@@SuperMethodInvocation:super.setDirectory(directory) @AT@ 1875 @LENGTH@ 30
------DEL SuperMethodInvocation@@super.setDirectory(directory) @AT@ 1875 @LENGTH@ 29
---------DEL SimpleName@@MethodName:setDirectory:[directory] @AT@ 1881 @LENGTH@ 12
---------DEL SimpleName@@directory @AT@ 1894 @LENGTH@ 9
---DEL ExpressionStatement@@SuperMethodInvocation:super.setDirectory(FileUtil.stripLeadingSeparator(getDirectory())) @AT@ 1991 @LENGTH@ 67
------DEL SuperMethodInvocation@@super.setDirectory(FileUtil.stripLeadingSeparator(getDirectory())) @AT@ 1991 @LENGTH@ 66
---------DEL SimpleName@@MethodName:setDirectory:[FileUtil.stripLeadingSeparator(getDirectory())] @AT@ 1997 @LENGTH@ 12
---------DEL MethodInvocation@@FileUtil.stripLeadingSeparator(getDirectory()) @AT@ 2010 @LENGTH@ 46
------------DEL SimpleName@@Name:FileUtil @AT@ 2010 @LENGTH@ 8
------------DEL SimpleName@@MethodName:stripLeadingSeparator:[getDirectory()] @AT@ 2019 @LENGTH@ 37
---------------DEL MethodInvocation@@MethodName:getDirectory:[] @AT@ 2041 @LENGTH@ 14


UPD TypeDeclaration@@[@XmlType(name="message-driven-beanType",propOrder={"descriptionGroup","ejbName","activationConfig","destinationJndiName","mdbUser","mdbPassword","mdbClientId","mdbSubscriptionId","resourceAdapterName","environmentRefsGroup","securityIdentity","securityDomain","methodAttributes","depends","ejbTimeoutIdentity","annotations","ignoreDependency","aopDomainName","poolConfig","jndiRefs","createDestination"}), public]JBoss51MessageDrivenBeanMetaData, JBossMessageDrivenBeanMetaData @TO@ [@XmlType(name="message-driven-beanType",propOrder={"descriptionGroup","ejbName","activationConfig","destinationJndiName","mdbUser","mdbPassword","mdbClientId","mdbSubscriptionId","resourceAdapterName","environmentRefsGroup","securityIdentity","securityDomain","methodAttributes","depends","ejbTimeoutIdentity","annotations","ignoreDependency","aopDomainName","poolConfig","jndiRefs","createDestination"}), public]JBoss51MessageDrivenBeanMetaData, JBossMessageDrivenBean31MetaData @AT@ 1290 @LENGTH@ 648
---UPD SimpleType@@JBossMessageDrivenBeanMetaData @TO@ JBossMessageDrivenBean31MetaData @AT@ 1799 @LENGTH@ 30


UPD IfStatement@@if (!isRunning()) {  if (logger.isWarnEnabled()) {    logger.warn("Rejecting received message because of the listener container " + "having been stopped in the meantime: " + message);  }  rollbackIfNecessary(channel);  throw new MessageRejectedWhileStoppingException();} @TO@ if (!isRunning()) {  if (logger.isWarnEnabled()) {    logger.warn("Rejecting received message because of the listener container " + "having been stopped in the meantime: " + message);  }  channel.basicRecover(true);  rollbackIfNecessary(channel);  throw new MessageRejectedWhileStoppingException();} @AT@ 7279 @LENGTH@ 288
---UPD Block@@ThenBody:{  if (logger.isWarnEnabled()) {    logger.warn("Rejecting received message because of the listener container " + "having been stopped in the meantime: " + message);  }  rollbackIfNecessary(channel);  throw new MessageRejectedWhileStoppingException();} @TO@ ThenBody:{  if (logger.isWarnEnabled()) {    logger.warn("Rejecting received message because of the listener container " + "having been stopped in the meantime: " + message);  }  channel.basicRecover(true);  rollbackIfNecessary(channel);  throw new MessageRejectedWhileStoppingException();} @AT@ 7297 @LENGTH@ 270
------INS ExpressionStatement@@MethodInvocation:channel.basicRecover(true) @TO@ Block@@ThenBody:{  if (logger.isWarnEnabled()) {    logger.warn("Rejecting received message because of the listener container " + "having been stopped in the meantime: " + message);  }  rollbackIfNecessary(channel);  throw new MessageRejectedWhileStoppingException();} @AT@ 7558 @LENGTH@ 27
---------INS MethodInvocation@@channel.basicRecover(true) @TO@ ExpressionStatement@@MethodInvocation:channel.basicRecover(true) @AT@ 7558 @LENGTH@ 26
------------INS SimpleName@@Name:channel @TO@ MethodInvocation@@channel.basicRecover(true) @AT@ 7558 @LENGTH@ 7
------------INS SimpleName@@MethodName:basicRecover:[true] @TO@ MethodInvocation@@channel.basicRecover(true) @AT@ 7566 @LENGTH@ 18
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:basicRecover:[true] @AT@ 7579 @LENGTH@ 4


UPD TypeDeclaration@@[public]Reference, [Serializable] @TO@ [public]Reference, [Serializable, Comparable<Reference>] @AT@ 224 @LENGTH@ 2854
---INS ParameterizedType@@Comparable<Reference> @TO@ TypeDeclaration@@[public]Reference, [Serializable] @AT@ 272 @LENGTH@ 21
------INS SimpleType@@Comparable @TO@ ParameterizedType@@Comparable<Reference> @AT@ 272 @LENGTH@ 10
------INS SimpleType@@Reference @TO@ ParameterizedType@@Comparable<Reference> @AT@ 283 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:response.put("max_id","42") @TO@ MethodInvocation:response.put("max_id",42) @AT@ 5503 @LENGTH@ 29
---UPD MethodInvocation@@response.put("max_id","42") @TO@ response.put("max_id",42) @AT@ 5503 @LENGTH@ 28
------UPD SimpleName@@MethodName:put:["max_id", "42"] @TO@ MethodName:put:["max_id", 42] @AT@ 5512 @LENGTH@ 19
---------DEL StringLiteral@@"42" @AT@ 5526 @LENGTH@ 4
---------INS NumberLiteral@@42 @TO@ SimpleName@@MethodName:put:["max_id", "42"] @AT@ 5526 @LENGTH@ 2

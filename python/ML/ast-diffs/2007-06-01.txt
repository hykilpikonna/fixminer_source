UPD TypeDeclaration@@[private]StubEventReader, AbstractEventReaderWrapper @TO@ [private, static]StubEventReader, AbstractEventReaderWrapper @AT@ 3837 @LENGTH@ 168
---INS Modifier@@static @TO@ TypeDeclaration@@[private]StubEventReader, AbstractEventReaderWrapper @AT@ 3845 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testRestartWithEmptyRestartData,  @TO@ TypeDeclaration@@[public]SqlCursorInputSourceIntegrationTests, AbstractTransactionalDataSourceSpringContextTests @AT@ 2859 @LENGTH@ 175
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRestartWithEmptyRestartData,  @AT@ 2859 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRestartWithEmptyRestartData,  @AT@ 2866 @LENGTH@ 4
---INS SimpleName@@MethodName:testRestartWithEmptyRestartData @TO@ MethodDeclaration@@public, void, MethodName:testRestartWithEmptyRestartData,  @AT@ 2871 @LENGTH@ 31
---INS VariableDeclarationStatement@@RestartData restartData=new GenericRestartData(new Properties()); @TO@ MethodDeclaration@@public, void, MethodName:testRestartWithEmptyRestartData,  @AT@ 2913 @LENGTH@ 67
------INS SimpleType@@RestartData @TO@ VariableDeclarationStatement@@RestartData restartData=new GenericRestartData(new Properties()); @AT@ 2913 @LENGTH@ 11
------INS VariableDeclarationFragment@@restartData=new GenericRestartData(new Properties()) @TO@ VariableDeclarationStatement@@RestartData restartData=new GenericRestartData(new Properties()); @AT@ 2925 @LENGTH@ 54
---------INS SimpleName@@restartData @TO@ VariableDeclarationFragment@@restartData=new GenericRestartData(new Properties()) @AT@ 2925 @LENGTH@ 11
---------INS ClassInstanceCreation@@GenericRestartData[new Properties()] @TO@ VariableDeclarationFragment@@restartData=new GenericRestartData(new Properties()) @AT@ 2939 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@GenericRestartData[new Properties()] @AT@ 2939 @LENGTH@ 3
------------INS SimpleType@@GenericRestartData @TO@ ClassInstanceCreation@@GenericRestartData[new Properties()] @AT@ 2943 @LENGTH@ 18
------------INS ClassInstanceCreation@@Properties[] @TO@ ClassInstanceCreation@@GenericRestartData[new Properties()] @AT@ 2962 @LENGTH@ 16
---------------INS New@@new @TO@ ClassInstanceCreation@@Properties[] @AT@ 2962 @LENGTH@ 3
---------------INS SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[] @AT@ 2966 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:sqlCursorInputSource.restoreFrom(restartData) @TO@ MethodDeclaration@@public, void, MethodName:testRestartWithEmptyRestartData,  @AT@ 2984 @LENGTH@ 46
------INS MethodInvocation@@sqlCursorInputSource.restoreFrom(restartData) @TO@ ExpressionStatement@@MethodInvocation:sqlCursorInputSource.restoreFrom(restartData) @AT@ 2984 @LENGTH@ 45
---------INS SimpleName@@Name:sqlCursorInputSource @TO@ MethodInvocation@@sqlCursorInputSource.restoreFrom(restartData) @AT@ 2984 @LENGTH@ 20
---------INS SimpleName@@MethodName:restoreFrom:[restartData] @TO@ MethodInvocation@@sqlCursorInputSource.restoreFrom(restartData) @AT@ 3005 @LENGTH@ 24
------------INS SimpleName@@restartData @TO@ SimpleName@@MethodName:restoreFrom:[restartData] @AT@ 3017 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:recursiveDelete("target/test-delete-inbox") @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1067 @LENGTH@ 44
---INS MethodInvocation@@recursiveDelete("target/test-delete-inbox") @TO@ ExpressionStatement@@MethodInvocation:recursiveDelete("target/test-delete-inbox") @AT@ 1067 @LENGTH@ 43
------INS SimpleName@@MethodName:recursiveDelete:["target/test-delete-inbox"] @TO@ MethodInvocation@@recursiveDelete("target/test-delete-inbox") @AT@ 1067 @LENGTH@ 43
---------INS StringLiteral@@"target/test-delete-inbox" @TO@ SimpleName@@MethodName:recursiveDelete:["target/test-delete-inbox"] @AT@ 1083 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:assertNotNull(receivedExchange.getOut()) @TO@ MethodInvocation:assertNotNull(receivedExchange.getIn()) @AT@ 2396 @LENGTH@ 41
---UPD MethodInvocation@@assertNotNull(receivedExchange.getOut()) @TO@ assertNotNull(receivedExchange.getIn()) @AT@ 2396 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertNotNull:[receivedExchange.getOut()] @TO@ MethodName:assertNotNull:[receivedExchange.getIn()] @AT@ 2396 @LENGTH@ 40
---------UPD MethodInvocation@@receivedExchange.getOut() @TO@ receivedExchange.getIn() @AT@ 2410 @LENGTH@ 25
------------UPD SimpleName@@MethodName:getOut:[] @TO@ MethodName:getIn:[] @AT@ 2427 @LENGTH@ 8


UPD TypeDeclaration@@[public]VmComponent, QueueComponent<E> @TO@ [public]VmComponent, SedaComponent<E> @AT@ 1538 @LENGTH@ 823
---UPD ParameterizedType@@QueueComponent<E> @TO@ SedaComponent<E> @AT@ 1591 @LENGTH@ 17
------UPD SimpleType@@QueueComponent @TO@ SedaComponent @AT@ 1591 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:assertEquals(1,list.size()) @TO@ MethodDeclaration@@public, void, MethodName:testScopedBeanWithInner, Exception,  @AT@ 2839 @LENGTH@ 29
---INS MethodInvocation@@assertEquals(1,list.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,list.size()) @AT@ 2839 @LENGTH@ 28
------INS SimpleName@@MethodName:assertEquals:[1, list.size()] @TO@ MethodInvocation@@assertEquals(1,list.size()) @AT@ 2839 @LENGTH@ 28
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, list.size()] @AT@ 2852 @LENGTH@ 1
---------INS MethodInvocation@@list.size() @TO@ SimpleName@@MethodName:assertEquals:[1, list.size()] @AT@ 2855 @LENGTH@ 11
------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.size() @AT@ 2855 @LENGTH@ 4
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@list.size() @AT@ 2860 @LENGTH@ 6


UPD VariableDeclarationStatement@@String name=uri.substring(uri.lastIndexOf('/')); @TO@ String name=uri.substring(uri.lastIndexOf('/') + 1); @AT@ 3474 @LENGTH@ 50
---UPD VariableDeclarationFragment@@name=uri.substring(uri.lastIndexOf('/')) @TO@ name=uri.substring(uri.lastIndexOf('/') + 1) @AT@ 3481 @LENGTH@ 42
------UPD MethodInvocation@@uri.substring(uri.lastIndexOf('/')) @TO@ uri.substring(uri.lastIndexOf('/') + 1) @AT@ 3488 @LENGTH@ 35
---------UPD SimpleName@@MethodName:substring:[uri.lastIndexOf('/')] @TO@ MethodName:substring:[uri.lastIndexOf('/') + 1] @AT@ 3492 @LENGTH@ 31
------------INS InfixExpression@@uri.lastIndexOf('/') + 1 @TO@ SimpleName@@MethodName:substring:[uri.lastIndexOf('/')] @AT@ 3502 @LENGTH@ 24
---------------MOV MethodInvocation@@uri.lastIndexOf('/') @TO@ InfixExpression@@uri.lastIndexOf('/') + 1 @AT@ 3502 @LENGTH@ 20
---------------INS Operator@@+ @TO@ InfixExpression@@uri.lastIndexOf('/') + 1 @AT@ 3522 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@uri.lastIndexOf('/') + 1 @AT@ 3525 @LENGTH@ 1


UPD IfStatement@@if (jobExecutorFacade == null) {  logger.debug("Using SimpleJobExecutorFacade");  SimpleJobExecutorFacade jobExecutorFacade=new SimpleJobExecutorFacade();  jobExecutorFacade.setJobConfigurationLocator(jobConfigurationLocator);  jobExecutorFacade.setJobExecutionListeners(listeners);  jobExecutorFacade.setJobExecutor(jobExecutor);  jobExecutorFacade.setJobRepository(jobRepository);  this.jobExecutorFacade=jobExecutorFacade;} @TO@ if (jobExecutorFacade == null) {  logger.debug("Using SimpleJobExecutorFacade");  Assert.notNull(jobConfigurationLocator);  Assert.notNull(jobExecutor);  Assert.notNull(jobRepository);  SimpleJobExecutorFacade jobExecutorFacade=new SimpleJobExecutorFacade();  jobExecutorFacade.setJobConfigurationLocator(jobConfigurationLocator);  jobExecutorFacade.setJobExecutionListeners(listeners);  jobExecutorFacade.setJobExecutor(jobExecutor);  jobExecutorFacade.setJobRepository(jobRepository);  this.jobExecutorFacade=jobExecutorFacade;} @AT@ 5853 @LENGTH@ 445
---UPD Block@@ThenBody:{  logger.debug("Using SimpleJobExecutorFacade");  SimpleJobExecutorFacade jobExecutorFacade=new SimpleJobExecutorFacade();  jobExecutorFacade.setJobConfigurationLocator(jobConfigurationLocator);  jobExecutorFacade.setJobExecutionListeners(listeners);  jobExecutorFacade.setJobExecutor(jobExecutor);  jobExecutorFacade.setJobRepository(jobRepository);  this.jobExecutorFacade=jobExecutorFacade;} @TO@ ThenBody:{  logger.debug("Using SimpleJobExecutorFacade");  Assert.notNull(jobConfigurationLocator);  Assert.notNull(jobExecutor);  Assert.notNull(jobRepository);  SimpleJobExecutorFacade jobExecutorFacade=new SimpleJobExecutorFacade();  jobExecutorFacade.setJobConfigurationLocator(jobConfigurationLocator);  jobExecutorFacade.setJobExecutionListeners(listeners);  jobExecutorFacade.setJobExecutor(jobExecutor);  jobExecutorFacade.setJobRepository(jobRepository);  this.jobExecutorFacade=jobExecutorFacade;} @AT@ 5882 @LENGTH@ 416
------INS ExpressionStatement@@MethodInvocation:Assert.notNull(jobConfigurationLocator) @TO@ Block@@ThenBody:{  logger.debug("Using SimpleJobExecutorFacade");  SimpleJobExecutorFacade jobExecutorFacade=new SimpleJobExecutorFacade();  jobExecutorFacade.setJobConfigurationLocator(jobConfigurationLocator);  jobExecutorFacade.setJobExecutionListeners(listeners);  jobExecutorFacade.setJobExecutor(jobExecutor);  jobExecutorFacade.setJobRepository(jobRepository);  this.jobExecutorFacade=jobExecutorFacade;} @AT@ 5937 @LENGTH@ 40
---------INS MethodInvocation@@Assert.notNull(jobConfigurationLocator) @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(jobConfigurationLocator) @AT@ 5937 @LENGTH@ 39
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(jobConfigurationLocator) @AT@ 5937 @LENGTH@ 6
------------INS SimpleName@@MethodName:notNull:[jobConfigurationLocator] @TO@ MethodInvocation@@Assert.notNull(jobConfigurationLocator) @AT@ 5944 @LENGTH@ 32
---------------INS SimpleName@@jobConfigurationLocator @TO@ SimpleName@@MethodName:notNull:[jobConfigurationLocator] @AT@ 5952 @LENGTH@ 23
------INS ExpressionStatement@@MethodInvocation:Assert.notNull(jobExecutor) @TO@ Block@@ThenBody:{  logger.debug("Using SimpleJobExecutorFacade");  SimpleJobExecutorFacade jobExecutorFacade=new SimpleJobExecutorFacade();  jobExecutorFacade.setJobConfigurationLocator(jobConfigurationLocator);  jobExecutorFacade.setJobExecutionListeners(listeners);  jobExecutorFacade.setJobExecutor(jobExecutor);  jobExecutorFacade.setJobRepository(jobRepository);  this.jobExecutorFacade=jobExecutorFacade;} @AT@ 5981 @LENGTH@ 28
---------INS MethodInvocation@@Assert.notNull(jobExecutor) @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(jobExecutor) @AT@ 5981 @LENGTH@ 27
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(jobExecutor) @AT@ 5981 @LENGTH@ 6
------------INS SimpleName@@MethodName:notNull:[jobExecutor] @TO@ MethodInvocation@@Assert.notNull(jobExecutor) @AT@ 5988 @LENGTH@ 20
---------------INS SimpleName@@jobExecutor @TO@ SimpleName@@MethodName:notNull:[jobExecutor] @AT@ 5996 @LENGTH@ 11
------INS ExpressionStatement@@MethodInvocation:Assert.notNull(jobRepository) @TO@ Block@@ThenBody:{  logger.debug("Using SimpleJobExecutorFacade");  SimpleJobExecutorFacade jobExecutorFacade=new SimpleJobExecutorFacade();  jobExecutorFacade.setJobConfigurationLocator(jobConfigurationLocator);  jobExecutorFacade.setJobExecutionListeners(listeners);  jobExecutorFacade.setJobExecutor(jobExecutor);  jobExecutorFacade.setJobRepository(jobRepository);  this.jobExecutorFacade=jobExecutorFacade;} @AT@ 6013 @LENGTH@ 30
---------INS MethodInvocation@@Assert.notNull(jobRepository) @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(jobRepository) @AT@ 6013 @LENGTH@ 29
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(jobRepository) @AT@ 6013 @LENGTH@ 6
------------INS SimpleName@@MethodName:notNull:[jobRepository] @TO@ MethodInvocation@@Assert.notNull(jobRepository) @AT@ 6020 @LENGTH@ 22
---------------INS SimpleName@@jobRepository @TO@ SimpleName@@MethodName:notNull:[jobRepository] @AT@ 6028 @LENGTH@ 13


UPD VariableDeclarationStatement@@ActivityBuilder invoice=activity("file:src/data/invoices?noop=true").correlate(xpath("/invoice/@purchaseOrderId")); @TO@ ActivityBuilder invoice=activity("file:src/data/invoices?noop=true").correlate(xpath("/invoice/@purchaseOrderId").stringResult()); @AT@ 1865 @LENGTH@ 134
---UPD VariableDeclarationFragment@@invoice=activity("file:src/data/invoices?noop=true").correlate(xpath("/invoice/@purchaseOrderId")) @TO@ invoice=activity("file:src/data/invoices?noop=true").correlate(xpath("/invoice/@purchaseOrderId").stringResult()) @AT@ 1881 @LENGTH@ 117
------UPD MethodInvocation@@activity("file:src/data/invoices?noop=true").correlate(xpath("/invoice/@purchaseOrderId")) @TO@ activity("file:src/data/invoices?noop=true").correlate(xpath("/invoice/@purchaseOrderId").stringResult()) @AT@ 1891 @LENGTH@ 107
---------UPD SimpleName@@MethodName:correlate:[xpath("/invoice/@purchaseOrderId")] @TO@ MethodName:correlate:[xpath("/invoice/@purchaseOrderId").stringResult()] @AT@ 1953 @LENGTH@ 45
------------UPD MethodInvocation@@xpath("/invoice/@purchaseOrderId") @TO@ xpath("/invoice/@purchaseOrderId").stringResult() @AT@ 1963 @LENGTH@ 34
---------------DEL SimpleName@@MethodName:xpath:["/invoice/@purchaseOrderId"] @AT@ 1963 @LENGTH@ 34
------------------DEL StringLiteral@@"/invoice/@purchaseOrderId" @AT@ 1969 @LENGTH@ 27
---------------INS MethodInvocation@@MethodName:xpath:["/invoice/@purchaseOrderId"] @TO@ MethodInvocation@@xpath("/invoice/@purchaseOrderId") @AT@ 1978 @LENGTH@ 34
------------------INS StringLiteral@@"/invoice/@purchaseOrderId" @TO@ MethodInvocation@@MethodName:xpath:["/invoice/@purchaseOrderId"] @AT@ 1984 @LENGTH@ 27
---------------INS SimpleName@@MethodName:stringResult:[] @TO@ MethodInvocation@@xpath("/invoice/@purchaseOrderId") @AT@ 2013 @LENGTH@ 14


UPD VariableDeclarationStatement@@ActionSource2 source=(ActionSource2)actionEvent.getSource(); @TO@ ActionSource source=(ActionSource)actionEvent.getSource(); @AT@ 1670 @LENGTH@ 63
---UPD SimpleType@@ActionSource2 @TO@ ActionSource @AT@ 1670 @LENGTH@ 13
---UPD VariableDeclarationFragment@@source=(ActionSource2)actionEvent.getSource() @TO@ source=(ActionSource)actionEvent.getSource() @AT@ 1684 @LENGTH@ 48
------UPD CastExpression@@(ActionSource2)actionEvent.getSource() @TO@ (ActionSource)actionEvent.getSource() @AT@ 1693 @LENGTH@ 39
---------UPD SimpleType@@ActionSource2 @TO@ ActionSource @AT@ 1694 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:expect(mimeContainer.isXopPackage()).andReturn(true) @TO@ MethodInvocation:expect(mimeContainer.convertToXopPackage()).andReturn(true) @AT@ 9255 @LENGTH@ 53
---UPD MethodInvocation@@expect(mimeContainer.isXopPackage()).andReturn(true) @TO@ expect(mimeContainer.convertToXopPackage()).andReturn(true) @AT@ 9255 @LENGTH@ 52
------UPD MethodInvocation@@MethodName:expect:[mimeContainer.isXopPackage()] @TO@ MethodName:expect:[mimeContainer.convertToXopPackage()] @AT@ 9255 @LENGTH@ 36
---------UPD MethodInvocation@@mimeContainer.isXopPackage() @TO@ mimeContainer.convertToXopPackage() @AT@ 9262 @LENGTH@ 28
------------UPD SimpleName@@MethodName:isXopPackage:[] @TO@ MethodName:convertToXopPackage:[] @AT@ 9276 @LENGTH@ 14


INS MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]FileConsumerProducerRouteTest, ContextTestSupport @AT@ 1395 @LENGTH@ 134
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1395 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1405 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1410 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1425 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:recursiveDelete("target/test-consumer-produer-inbox") @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1445 @LENGTH@ 54
------INS MethodInvocation@@recursiveDelete("target/test-consumer-produer-inbox") @TO@ ExpressionStatement@@MethodInvocation:recursiveDelete("target/test-consumer-produer-inbox") @AT@ 1445 @LENGTH@ 53
---------INS SimpleName@@MethodName:recursiveDelete:["target/test-consumer-produer-inbox"] @TO@ MethodInvocation@@recursiveDelete("target/test-consumer-produer-inbox") @AT@ 1445 @LENGTH@ 53
------------INS StringLiteral@@"target/test-consumer-produer-inbox" @TO@ SimpleName@@MethodName:recursiveDelete:["target/test-consumer-produer-inbox"] @AT@ 1461 @LENGTH@ 36
---INS ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1508 @LENGTH@ 14
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1508 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 1514 @LENGTH@ 5


INS FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(FtpProducer.class)] @TO@ TypeDeclaration@@[public]FtpProducer, RemoteFileProducer<RemoteFileExchange> @AT@ 1200 @LENGTH@ 78
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(FtpProducer.class)] @AT@ 1200 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(FtpProducer.class)] @AT@ 1208 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(FtpProducer.class)] @AT@ 1215 @LENGTH@ 5
---INS Modifier@@transient @TO@ FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(FtpProducer.class)] @AT@ 1221 @LENGTH@ 9
---INS SimpleType@@Log @TO@ FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(FtpProducer.class)] @AT@ 1231 @LENGTH@ 3
---INS VariableDeclarationFragment@@LOG=LogFactory.getLog(FtpProducer.class) @TO@ FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(FtpProducer.class)] @AT@ 1235 @LENGTH@ 42
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=LogFactory.getLog(FtpProducer.class) @AT@ 1235 @LENGTH@ 3
------INS MethodInvocation@@LogFactory.getLog(FtpProducer.class) @TO@ VariableDeclarationFragment@@LOG=LogFactory.getLog(FtpProducer.class) @AT@ 1241 @LENGTH@ 36
---------INS SimpleName@@Name:LogFactory @TO@ MethodInvocation@@LogFactory.getLog(FtpProducer.class) @AT@ 1241 @LENGTH@ 10
---------INS SimpleName@@MethodName:getLog:[FtpProducer.class] @TO@ MethodInvocation@@LogFactory.getLog(FtpProducer.class) @AT@ 1252 @LENGTH@ 25
------------INS TypeLiteral@@FtpProducer.class @TO@ SimpleName@@MethodName:getLog:[FtpProducer.class] @AT@ 1259 @LENGTH@ 17


INS MethodDeclaration@@public, String, MethodName:getValue, String key,  @TO@ TypeDeclaration@@[public]DistinguishedName, [Name] @AT@ 6869 @LENGTH@ 87
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getValue, String key,  @AT@ 6869 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getValue, String key,  @AT@ 6876 @LENGTH@ 6
---INS SimpleName@@MethodName:getValue @TO@ MethodDeclaration@@public, String, MethodName:getValue, String key,  @AT@ 6883 @LENGTH@ 8
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@public, String, MethodName:getValue, String key,  @AT@ 6892 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 6892 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 6899 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:getLdapRdn(key).getValue() @TO@ MethodDeclaration@@public, String, MethodName:getValue, String key,  @AT@ 6915 @LENGTH@ 34
------INS MethodInvocation@@getLdapRdn(key).getValue() @TO@ ReturnStatement@@MethodInvocation:getLdapRdn(key).getValue() @AT@ 6922 @LENGTH@ 26
---------INS MethodInvocation@@MethodName:getLdapRdn:[key] @TO@ MethodInvocation@@getLdapRdn(key).getValue() @AT@ 6922 @LENGTH@ 15
------------INS SimpleName@@key @TO@ MethodInvocation@@MethodName:getLdapRdn:[key] @AT@ 6933 @LENGTH@ 3
---------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@getLdapRdn(key).getValue() @AT@ 6938 @LENGTH@ 10


INS MethodDeclaration@@void, MethodName:setUltimateReceiver, boolean ultimateReceiver,  @TO@ TypeDeclaration@@[public]SoapEndpointMapping, [EndpointMapping] @AT@ 1731 @LENGTH@ 46
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:setUltimateReceiver, boolean ultimateReceiver,  @AT@ 1726 @LENGTH@ 4
---INS SimpleName@@MethodName:setUltimateReceiver @TO@ MethodDeclaration@@void, MethodName:setUltimateReceiver, boolean ultimateReceiver,  @AT@ 1731 @LENGTH@ 19
---INS SingleVariableDeclaration@@boolean ultimateReceiver @TO@ MethodDeclaration@@void, MethodName:setUltimateReceiver, boolean ultimateReceiver,  @AT@ 1751 @LENGTH@ 24
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean ultimateReceiver @AT@ 1751 @LENGTH@ 7
------INS SimpleName@@ultimateReceiver @TO@ SingleVariableDeclaration@@boolean ultimateReceiver @AT@ 1759 @LENGTH@ 16


UPD EnhancedForStatement@@for (String dir : dirs) {  sb.append('/').append(dir);  final boolean success=ftpClient.makeDirectory(sb.toString());  System.out.println(sb.toString() + " = " + success);  if (!atLeastOneSuccess && success) {    atLeastOneSuccess=true;  }} @TO@ for (String dir : dirs) {  sb.append('/').append(dir);  final boolean success=ftpClient.makeDirectory(sb.toString());  if (LOG.isDebugEnabled()) {    LOG.debug(sb.toString() + " = " + success);  }  if (!atLeastOneSuccess && success) {    atLeastOneSuccess=true;  }} @AT@ 3143 @LENGTH@ 321
---UPD ExpressionStatement@@MethodInvocation:System.out.println(sb.toString() + " = " + success) @TO@ MethodInvocation:LOG.debug(sb.toString() + " = " + success) @AT@ 3297 @LENGTH@ 52
---INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug(sb.toString() + " = " + success);} @TO@ EnhancedForStatement@@for (String dir : dirs) {  sb.append('/').append(dir);  final boolean success=ftpClient.makeDirectory(sb.toString());  System.out.println(sb.toString() + " = " + success);  if (!atLeastOneSuccess && success) {    atLeastOneSuccess=true;  }} @AT@ 3466 @LENGTH@ 101
------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug(sb.toString() + " = " + success);} @AT@ 3470 @LENGTH@ 20
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 3470 @LENGTH@ 3
---------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 3474 @LENGTH@ 16
------INS Block@@ThenBody:{  LOG.debug(sb.toString() + " = " + success);} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug(sb.toString() + " = " + success);} @AT@ 3492 @LENGTH@ 75
---------MOV ExpressionStatement@@MethodInvocation:System.out.println(sb.toString() + " = " + success) @TO@ Block@@ThenBody:{  LOG.debug(sb.toString() + " = " + success);} @AT@ 3297 @LENGTH@ 52
------------UPD MethodInvocation@@System.out.println(sb.toString() + " = " + success) @TO@ LOG.debug(sb.toString() + " = " + success) @AT@ 3297 @LENGTH@ 51
---------------DEL QualifiedName@@Name:System.out @AT@ 3297 @LENGTH@ 10
---------------UPD SimpleName@@MethodName:println:[sb.toString() + " = " + success] @TO@ MethodName:debug:[sb.toString() + " = " + success] @AT@ 3308 @LENGTH@ 40
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@System.out.println(sb.toString() + " = " + success) @AT@ 3510 @LENGTH@ 3


UPD ExpressionStatement@@Assignment:nextExchange=createNextExchange(processor,exchange) @TO@ Assignment:nextExchange=createNextExchange(processor,nextExchange) @AT@ 4772 @LENGTH@ 55
---UPD Assignment@@nextExchange=createNextExchange(processor,exchange) @TO@ nextExchange=createNextExchange(processor,nextExchange) @AT@ 4772 @LENGTH@ 54
------UPD MethodInvocation@@createNextExchange(processor,exchange) @TO@ createNextExchange(processor,nextExchange) @AT@ 4787 @LENGTH@ 39
---------UPD SimpleName@@MethodName:createNextExchange:[processor, exchange] @TO@ MethodName:createNextExchange:[processor, nextExchange] @AT@ 4787 @LENGTH@ 39
------------UPD SimpleName@@exchange @TO@ nextExchange @AT@ 4817 @LENGTH@ 8


UPD IfStatement@@if (node instanceof Text) {  Text text=(Text)node;  buffer.append(text.getTextContent());} else if (node instanceof Element) {  Element element=(Element)node;  append(buffer,element.getChildNodes());} else if (node instanceof Document) {  Document doc=(Document)node;  append(buffer,doc.getChildNodes());} @TO@ if (node instanceof Text) {  Text text=(Text)node;  buffer.append(text.getTextContent());} else if (node instanceof Attr) {  Attr attribute=(Attr)node;  buffer.append(attribute.getTextContent());} else if (node instanceof Element) {  Element element=(Element)node;  append(buffer,element.getChildNodes());} else if (node instanceof Document) {  Document doc=(Document)node;  append(buffer,doc.getChildNodes());} @AT@ 1820 @LENGTH@ 425
---INS Block@@ElseBody:if (node instanceof Attr) {  Attr attribute=(Attr)node;  buffer.append(attribute.getTextContent());} else if (node instanceof Element) {  Element element=(Element)node;  append(buffer,element.getChildNodes());} else if (node instanceof Document) {  Document doc=(Document)node;  append(buffer,doc.getChildNodes());} @TO@ IfStatement@@if (node instanceof Text) {  Text text=(Text)node;  buffer.append(text.getTextContent());} else if (node instanceof Element) {  Element element=(Element)node;  append(buffer,element.getChildNodes());} else if (node instanceof Document) {  Document doc=(Document)node;  append(buffer,doc.getChildNodes());} @AT@ 1955 @LENGTH@ 436
------INS IfStatement@@if (node instanceof Attr) {  Attr attribute=(Attr)node;  buffer.append(attribute.getTextContent());} else if (node instanceof Element) {  Element element=(Element)node;  append(buffer,element.getChildNodes());} else if (node instanceof Document) {  Document doc=(Document)node;  append(buffer,doc.getChildNodes());} @TO@ Block@@ElseBody:if (node instanceof Attr) {  Attr attribute=(Attr)node;  buffer.append(attribute.getTextContent());} else if (node instanceof Element) {  Element element=(Element)node;  append(buffer,element.getChildNodes());} else if (node instanceof Document) {  Document doc=(Document)node;  append(buffer,doc.getChildNodes());} @AT@ 1955 @LENGTH@ 436
---------MOV Block@@ElseBody:if (node instanceof Element) {  Element element=(Element)node;  append(buffer,element.getChildNodes());} else if (node instanceof Document) {  Document doc=(Document)node;  append(buffer,doc.getChildNodes());} @TO@ IfStatement@@if (node instanceof Attr) {  Attr attribute=(Attr)node;  buffer.append(attribute.getTextContent());} else if (node instanceof Element) {  Element element=(Element)node;  append(buffer,element.getChildNodes());} else if (node instanceof Document) {  Document doc=(Document)node;  append(buffer,doc.getChildNodes());} @AT@ 1958 @LENGTH@ 287
---------INS InstanceofExpression@@node instanceof Attr @TO@ IfStatement@@if (node instanceof Attr) {  Attr attribute=(Attr)node;  buffer.append(attribute.getTextContent());} else if (node instanceof Element) {  Element element=(Element)node;  append(buffer,element.getChildNodes());} else if (node instanceof Document) {  Document doc=(Document)node;  append(buffer,doc.getChildNodes());} @AT@ 1959 @LENGTH@ 20
------------INS SimpleName@@node @TO@ InstanceofExpression@@node instanceof Attr @AT@ 1959 @LENGTH@ 4
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@node instanceof Attr @AT@ 1964 @LENGTH@ 10
------------INS SimpleType@@Attr @TO@ InstanceofExpression@@node instanceof Attr @AT@ 1975 @LENGTH@ 4
---------INS Block@@ThenBody:{  Attr attribute=(Attr)node;  buffer.append(attribute.getTextContent());} @TO@ IfStatement@@if (node instanceof Attr) {  Attr attribute=(Attr)node;  buffer.append(attribute.getTextContent());} else if (node instanceof Element) {  Element element=(Element)node;  append(buffer,element.getChildNodes());} else if (node instanceof Document) {  Document doc=(Document)node;  append(buffer,doc.getChildNodes());} @AT@ 1981 @LENGTH@ 109
------------INS VariableDeclarationStatement@@Attr attribute=(Attr)node; @TO@ Block@@ThenBody:{  Attr attribute=(Attr)node;  buffer.append(attribute.getTextContent());} @AT@ 1995 @LENGTH@ 29
---------------INS SimpleType@@Attr @TO@ VariableDeclarationStatement@@Attr attribute=(Attr)node; @AT@ 1995 @LENGTH@ 4
---------------INS VariableDeclarationFragment@@attribute=(Attr)node @TO@ VariableDeclarationStatement@@Attr attribute=(Attr)node; @AT@ 2000 @LENGTH@ 23
------------------INS SimpleName@@attribute @TO@ VariableDeclarationFragment@@attribute=(Attr)node @AT@ 2000 @LENGTH@ 9
------------------INS CastExpression@@(Attr)node @TO@ VariableDeclarationFragment@@attribute=(Attr)node @AT@ 2012 @LENGTH@ 11
---------------------INS SimpleType@@Attr @TO@ CastExpression@@(Attr)node @AT@ 2013 @LENGTH@ 4
---------------------INS SimpleName@@node @TO@ CastExpression@@(Attr)node @AT@ 2019 @LENGTH@ 4
------------INS ExpressionStatement@@MethodInvocation:buffer.append(attribute.getTextContent()) @TO@ Block@@ThenBody:{  Attr attribute=(Attr)node;  buffer.append(attribute.getTextContent());} @AT@ 2037 @LENGTH@ 42
---------------INS MethodInvocation@@buffer.append(attribute.getTextContent()) @TO@ ExpressionStatement@@MethodInvocation:buffer.append(attribute.getTextContent()) @AT@ 2037 @LENGTH@ 41
------------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.append(attribute.getTextContent()) @AT@ 2037 @LENGTH@ 6
------------------INS SimpleName@@MethodName:append:[attribute.getTextContent()] @TO@ MethodInvocation@@buffer.append(attribute.getTextContent()) @AT@ 2044 @LENGTH@ 34
---------------------INS MethodInvocation@@attribute.getTextContent() @TO@ SimpleName@@MethodName:append:[attribute.getTextContent()] @AT@ 2051 @LENGTH@ 26
------------------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getTextContent() @AT@ 2051 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getTextContent:[] @TO@ MethodInvocation@@attribute.getTextContent() @AT@ 2061 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:testCustomExitCode,  @TO@ TypeDeclaration@@[public]SimpleRepeatTemplateTests, AbstractTradeBatchTests @AT@ 11195 @LENGTH@ 343
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCustomExitCode,  @AT@ 11195 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCustomExitCode,  @AT@ 11202 @LENGTH@ 4
---INS SimpleName@@MethodName:testCustomExitCode @TO@ MethodDeclaration@@public, void, MethodName:testCustomExitCode,  @AT@ 11207 @LENGTH@ 18
---INS VariableDeclarationStatement@@ExitStatus status=template.iterate(new RepeatCallback(){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE");
    return exitStatus;
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:testCustomExitCode,  @AT@ 11234 @LENGTH@ 245
------INS SimpleType@@ExitStatus @TO@ VariableDeclarationStatement@@ExitStatus status=template.iterate(new RepeatCallback(){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE");
    return exitStatus;
  }
}
); @AT@ 11234 @LENGTH@ 10
------INS VariableDeclarationFragment@@status=template.iterate(new RepeatCallback(){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE");
    return exitStatus;
  }
}
) @TO@ VariableDeclarationStatement@@ExitStatus status=template.iterate(new RepeatCallback(){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE");
    return exitStatus;
  }
}
); @AT@ 11245 @LENGTH@ 233
---------INS SimpleName@@status @TO@ VariableDeclarationFragment@@status=template.iterate(new RepeatCallback(){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE");
    return exitStatus;
  }
}
) @AT@ 11245 @LENGTH@ 6
---------INS MethodInvocation@@template.iterate(new RepeatCallback(){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE");
    return exitStatus;
  }
}
) @TO@ VariableDeclarationFragment@@status=template.iterate(new RepeatCallback(){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE");
    return exitStatus;
  }
}
) @AT@ 11254 @LENGTH@ 224
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.iterate(new RepeatCallback(){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE");
    return exitStatus;
  }
}
) @AT@ 11254 @LENGTH@ 8
------------INS SimpleName@@MethodName:iterate:[new RepeatCallback(){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE");
    return exitStatus;
  }
}
] @TO@ MethodInvocation@@template.iterate(new RepeatCallback(){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE");
    return exitStatus;
  }
}
) @AT@ 11263 @LENGTH@ 215
---------------INS ClassInstanceCreation@@RepeatCallback[] @TO@ SimpleName@@MethodName:iterate:[new RepeatCallback(){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE");
    return exitStatus;
  }
}
] @AT@ 11271 @LENGTH@ 206
------------------INS New@@new @TO@ ClassInstanceCreation@@RepeatCallback[] @AT@ 11271 @LENGTH@ 3
------------------INS SimpleType@@RepeatCallback @TO@ ClassInstanceCreation@@RepeatCallback[] @AT@ 11275 @LENGTH@ 14
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@RepeatCallback[] @AT@ 11291 @LENGTH@ 186
---------------------INS MethodDeclaration@@public, ExitStatus, MethodName:doInIteration, RepeatContext context, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 11297 @LENGTH@ 172
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, ExitStatus, MethodName:doInIteration, RepeatContext context, Exception,  @AT@ 11297 @LENGTH@ 6
------------------------INS SimpleType@@ExitStatus @TO@ MethodDeclaration@@public, ExitStatus, MethodName:doInIteration, RepeatContext context, Exception,  @AT@ 11304 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:doInIteration @TO@ MethodDeclaration@@public, ExitStatus, MethodName:doInIteration, RepeatContext context, Exception,  @AT@ 11315 @LENGTH@ 13
------------------------INS SingleVariableDeclaration@@RepeatContext context @TO@ MethodDeclaration@@public, ExitStatus, MethodName:doInIteration, RepeatContext context, Exception,  @AT@ 11329 @LENGTH@ 21
---------------------------INS SimpleType@@RepeatContext @TO@ SingleVariableDeclaration@@RepeatContext context @AT@ 11329 @LENGTH@ 13
---------------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@RepeatContext context @AT@ 11343 @LENGTH@ 7
------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, ExitStatus, MethodName:doInIteration, RepeatContext context, Exception,  @AT@ 11364 @LENGTH@ 9
------------------------INS VariableDeclarationStatement@@ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE"); @TO@ MethodDeclaration@@public, ExitStatus, MethodName:doInIteration, RepeatContext context, Exception,  @AT@ 11380 @LENGTH@ 61
---------------------------INS SimpleType@@ExitStatus @TO@ VariableDeclarationStatement@@ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE"); @AT@ 11380 @LENGTH@ 10
---------------------------INS VariableDeclarationFragment@@exitStatus=new ExitStatus(false,"CUSTOM_CODE") @TO@ VariableDeclarationStatement@@ExitStatus exitStatus=new ExitStatus(false,"CUSTOM_CODE"); @AT@ 11391 @LENGTH@ 49
------------------------------INS SimpleName@@exitStatus @TO@ VariableDeclarationFragment@@exitStatus=new ExitStatus(false,"CUSTOM_CODE") @AT@ 11391 @LENGTH@ 10
------------------------------INS ClassInstanceCreation@@ExitStatus[false, "CUSTOM_CODE"] @TO@ VariableDeclarationFragment@@exitStatus=new ExitStatus(false,"CUSTOM_CODE") @AT@ 11404 @LENGTH@ 36
---------------------------------INS New@@new @TO@ ClassInstanceCreation@@ExitStatus[false, "CUSTOM_CODE"] @AT@ 11404 @LENGTH@ 3
---------------------------------INS SimpleType@@ExitStatus @TO@ ClassInstanceCreation@@ExitStatus[false, "CUSTOM_CODE"] @AT@ 11408 @LENGTH@ 10
---------------------------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@ExitStatus[false, "CUSTOM_CODE"] @AT@ 11419 @LENGTH@ 5
---------------------------------INS StringLiteral@@"CUSTOM_CODE" @TO@ ClassInstanceCreation@@ExitStatus[false, "CUSTOM_CODE"] @AT@ 11426 @LENGTH@ 13
------------------------INS ReturnStatement@@SimpleName:exitStatus @TO@ MethodDeclaration@@public, ExitStatus, MethodName:doInIteration, RepeatContext context, Exception,  @AT@ 11446 @LENGTH@ 18
---------------------------INS SimpleName@@exitStatus @TO@ ReturnStatement@@SimpleName:exitStatus @AT@ 11453 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals("CUSTOM_CODE",status.getExitCode()) @TO@ MethodDeclaration@@public, void, MethodName:testCustomExitCode,  @AT@ 11485 @LENGTH@ 50
------INS MethodInvocation@@assertEquals("CUSTOM_CODE",status.getExitCode()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("CUSTOM_CODE",status.getExitCode()) @AT@ 11485 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertEquals:["CUSTOM_CODE", status.getExitCode()] @TO@ MethodInvocation@@assertEquals("CUSTOM_CODE",status.getExitCode()) @AT@ 11485 @LENGTH@ 49
------------INS StringLiteral@@"CUSTOM_CODE" @TO@ SimpleName@@MethodName:assertEquals:["CUSTOM_CODE", status.getExitCode()] @AT@ 11498 @LENGTH@ 13
------------INS MethodInvocation@@status.getExitCode() @TO@ SimpleName@@MethodName:assertEquals:["CUSTOM_CODE", status.getExitCode()] @AT@ 11513 @LENGTH@ 20
---------------INS SimpleName@@Name:status @TO@ MethodInvocation@@status.getExitCode() @AT@ 11513 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getExitCode:[] @TO@ MethodInvocation@@status.getExitCode() @AT@ 11520 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:cap.setStatelessTicketCache(null) @TO@ MethodDeclaration@@public, void, MethodName:testDetectsMissingStatelessTicketCache, Exception,  @AT@ 10384 @LENGTH@ 34
---INS MethodInvocation@@cap.setStatelessTicketCache(null) @TO@ ExpressionStatement@@MethodInvocation:cap.setStatelessTicketCache(null) @AT@ 10384 @LENGTH@ 33
------INS SimpleName@@Name:cap @TO@ MethodInvocation@@cap.setStatelessTicketCache(null) @AT@ 10384 @LENGTH@ 3
------INS SimpleName@@MethodName:setStatelessTicketCache:[null] @TO@ MethodInvocation@@cap.setStatelessTicketCache(null) @AT@ 10388 @LENGTH@ 29
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setStatelessTicketCache:[null] @AT@ 10412 @LENGTH@ 4


UPD ReturnStatement@@ClassInstanceCreation:new DefaultTypeConverter() @TO@ ClassInstanceCreation:new DefaultTypeConverter(getInjector()) @AT@ 14003 @LENGTH@ 34
---UPD ClassInstanceCreation@@DefaultTypeConverter[] @TO@ DefaultTypeConverter[getInjector()] @AT@ 14010 @LENGTH@ 26
------INS MethodInvocation@@MethodName:getInjector:[] @TO@ ClassInstanceCreation@@DefaultTypeConverter[] @AT@ 14035 @LENGTH@ 13


UPD VariableDeclarationStatement@@String name=uri.substring(4); @TO@ String name=uri.substring("ref:".length()); @AT@ 1170 @LENGTH@ 31
---UPD VariableDeclarationFragment@@name=uri.substring(4) @TO@ name=uri.substring("ref:".length()) @AT@ 1177 @LENGTH@ 23
------UPD MethodInvocation@@uri.substring(4) @TO@ uri.substring("ref:".length()) @AT@ 1184 @LENGTH@ 16
---------UPD SimpleName@@MethodName:substring:[4] @TO@ MethodName:substring:["ref:".length()] @AT@ 1188 @LENGTH@ 12
------------INS MethodInvocation@@"ref:".length() @TO@ SimpleName@@MethodName:substring:[4] @AT@ 1198 @LENGTH@ 15
---------------INS StringLiteral@@"ref:" @TO@ MethodInvocation@@"ref:".length() @AT@ 1198 @LENGTH@ 6
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@"ref:".length() @AT@ 1205 @LENGTH@ 8
------------DEL NumberLiteral@@4 @AT@ 1198 @LENGTH@ 1


UPD MethodDeclaration@@public, voidMethodName:DefaultTypeConverter,  @TO@ public, voidMethodName:DefaultTypeConverter, Injector injector,  @AT@ 1955 @LENGTH@ 294
---INS SingleVariableDeclaration@@Injector injector @TO@ MethodDeclaration@@public, voidMethodName:DefaultTypeConverter,  @AT@ 1983 @LENGTH@ 17
------INS SimpleType@@Injector @TO@ SingleVariableDeclaration@@Injector injector @AT@ 1983 @LENGTH@ 8
------INS SimpleName@@injector @TO@ SingleVariableDeclaration@@Injector injector @AT@ 1992 @LENGTH@ 8
---MOV ExpressionStatement@@Assignment:this.injector=injector @TO@ MethodDeclaration@@public, voidMethodName:DefaultTypeConverter,  @AT@ 2328 @LENGTH@ 25


INS MethodDeclaration@@public, voidMethodName:DefaultExchange, DefaultExchange parent,  @TO@ TypeDeclaration@@[public]DefaultExchange, [Exchange] @AT@ 1987 @LENGTH@ 160
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:DefaultExchange, DefaultExchange parent,  @AT@ 1987 @LENGTH@ 6
---INS SimpleName@@MethodName:DefaultExchange @TO@ MethodDeclaration@@public, voidMethodName:DefaultExchange, DefaultExchange parent,  @AT@ 1994 @LENGTH@ 15
---INS SingleVariableDeclaration@@DefaultExchange parent @TO@ MethodDeclaration@@public, voidMethodName:DefaultExchange, DefaultExchange parent,  @AT@ 2010 @LENGTH@ 22
------INS SimpleType@@DefaultExchange @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 2010 @LENGTH@ 15
------INS SimpleName@@parent @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 2026 @LENGTH@ 6
---INS ConstructorInvocation@@this(parent.getContext(),parent.getPattern()); @TO@ MethodDeclaration@@public, voidMethodName:DefaultExchange, DefaultExchange parent,  @AT@ 2044 @LENGTH@ 47
------INS MethodInvocation@@parent.getContext() @TO@ ConstructorInvocation@@this(parent.getContext(),parent.getPattern()); @AT@ 2049 @LENGTH@ 19
---------INS SimpleName@@Name:parent @TO@ MethodInvocation@@parent.getContext() @AT@ 2049 @LENGTH@ 6
---------INS SimpleName@@MethodName:getContext:[] @TO@ MethodInvocation@@parent.getContext() @AT@ 2056 @LENGTH@ 12
------INS MethodInvocation@@parent.getPattern() @TO@ ConstructorInvocation@@this(parent.getContext(),parent.getPattern()); @AT@ 2070 @LENGTH@ 19
---------INS SimpleName@@Name:parent @TO@ MethodInvocation@@parent.getPattern() @AT@ 2070 @LENGTH@ 6
---------INS SimpleName@@MethodName:getPattern:[] @TO@ MethodInvocation@@parent.getPattern() @AT@ 2077 @LENGTH@ 12
---INS ExpressionStatement@@Assignment:this.unitOfWork=parent.getUnitOfWork() @TO@ MethodDeclaration@@public, voidMethodName:DefaultExchange, DefaultExchange parent,  @AT@ 2100 @LENGTH@ 41
------INS Assignment@@this.unitOfWork=parent.getUnitOfWork() @TO@ ExpressionStatement@@Assignment:this.unitOfWork=parent.getUnitOfWork() @AT@ 2100 @LENGTH@ 40
---------INS FieldAccess@@this.unitOfWork @TO@ Assignment@@this.unitOfWork=parent.getUnitOfWork() @AT@ 2100 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.unitOfWork @AT@ 2100 @LENGTH@ 4
------------INS SimpleName@@unitOfWork @TO@ FieldAccess@@this.unitOfWork @AT@ 2105 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@this.unitOfWork=parent.getUnitOfWork() @AT@ 2115 @LENGTH@ 1
---------INS MethodInvocation@@parent.getUnitOfWork() @TO@ Assignment@@this.unitOfWork=parent.getUnitOfWork() @AT@ 2118 @LENGTH@ 22
------------INS SimpleName@@Name:parent @TO@ MethodInvocation@@parent.getUnitOfWork() @AT@ 2118 @LENGTH@ 6
------------INS SimpleName@@MethodName:getUnitOfWork:[] @TO@ MethodInvocation@@parent.getUnitOfWork() @AT@ 2125 @LENGTH@ 15


UPD VariableDeclarationStatement@@Object output=previousOut.getBody(); @TO@ Object output=previousOut != null ? previousOut.getBody() : null; @AT@ 7466 @LENGTH@ 38
---UPD VariableDeclarationFragment@@output=previousOut.getBody() @TO@ output=previousOut != null ? previousOut.getBody() : null @AT@ 7473 @LENGTH@ 30
------DEL MethodInvocation@@previousOut.getBody() @AT@ 7482 @LENGTH@ 21
------INS ConditionalExpression@@previousOut != null ? previousOut.getBody() : null @TO@ VariableDeclarationFragment@@output=previousOut.getBody() @AT@ 7503 @LENGTH@ 50
---------INS InfixExpression@@previousOut != null @TO@ ConditionalExpression@@previousOut != null ? previousOut.getBody() : null @AT@ 7503 @LENGTH@ 19
------------INS SimpleName@@previousOut @TO@ InfixExpression@@previousOut != null @AT@ 7503 @LENGTH@ 11
------------INS Operator@@!= @TO@ InfixExpression@@previousOut != null @AT@ 7514 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@previousOut != null @AT@ 7518 @LENGTH@ 4
---------INS MethodInvocation@@previousOut.getBody() @TO@ ConditionalExpression@@previousOut != null ? previousOut.getBody() : null @AT@ 7525 @LENGTH@ 21
------------MOV SimpleName@@Name:previousOut @TO@ MethodInvocation@@previousOut.getBody() @AT@ 7482 @LENGTH@ 11
------------MOV SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@previousOut.getBody() @AT@ 7494 @LENGTH@ 9
---------INS NullLiteral@@null @TO@ ConditionalExpression@@previousOut != null ? previousOut.getBody() : null @AT@ 7549 @LENGTH@ 4


INS MethodDeclaration@@public, voidMethodName:MailExchange, DefaultExchange parent, MailBinding binding,  @TO@ TypeDeclaration@@[public]MailExchange, DefaultExchange @AT@ 1588 @LENGTH@ 127
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:MailExchange, DefaultExchange parent, MailBinding binding,  @AT@ 1588 @LENGTH@ 6
---INS SimpleName@@MethodName:MailExchange @TO@ MethodDeclaration@@public, voidMethodName:MailExchange, DefaultExchange parent, MailBinding binding,  @AT@ 1595 @LENGTH@ 12
---INS SingleVariableDeclaration@@DefaultExchange parent @TO@ MethodDeclaration@@public, voidMethodName:MailExchange, DefaultExchange parent, MailBinding binding,  @AT@ 1608 @LENGTH@ 22
------INS SimpleType@@DefaultExchange @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 1608 @LENGTH@ 15
------INS SimpleName@@parent @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 1624 @LENGTH@ 6
---INS SingleVariableDeclaration@@MailBinding binding @TO@ MethodDeclaration@@public, voidMethodName:MailExchange, DefaultExchange parent, MailBinding binding,  @AT@ 1632 @LENGTH@ 19
------INS SimpleType@@MailBinding @TO@ SingleVariableDeclaration@@MailBinding binding @AT@ 1632 @LENGTH@ 11
------INS SimpleName@@binding @TO@ SingleVariableDeclaration@@MailBinding binding @AT@ 1644 @LENGTH@ 7
---INS SuperConstructorInvocation@@super(parent);
 @TO@ MethodDeclaration@@public, voidMethodName:MailExchange, DefaultExchange parent, MailBinding binding,  @AT@ 1663 @LENGTH@ 14
------INS SimpleName@@parent @TO@ SuperConstructorInvocation@@super(parent);
 @AT@ 1669 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:this.binding=binding @TO@ MethodDeclaration@@public, voidMethodName:MailExchange, DefaultExchange parent, MailBinding binding,  @AT@ 1686 @LENGTH@ 23
------INS Assignment@@this.binding=binding @TO@ ExpressionStatement@@Assignment:this.binding=binding @AT@ 1686 @LENGTH@ 22
---------INS FieldAccess@@this.binding @TO@ Assignment@@this.binding=binding @AT@ 1686 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.binding @AT@ 1686 @LENGTH@ 4
------------INS SimpleName@@binding @TO@ FieldAccess@@this.binding @AT@ 1691 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.binding=binding @AT@ 1698 @LENGTH@ 1
---------INS SimpleName@@binding @TO@ Assignment@@this.binding=binding @AT@ 1701 @LENGTH@ 7


UPD MethodDeclaration@@public, Object, MethodName:newInstance, Class type,  @TO@ public, T, T, MethodName:newInstance, Class<T> type,  @AT@ 1816 @LENGTH@ 213
---UPD SimpleType@@Object @TO@ T @AT@ 1823 @LENGTH@ 6
---UPD SingleVariableDeclaration@@Class type @TO@ Class<T> type @AT@ 1842 @LENGTH@ 10
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class type @AT@ 1834 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 1834 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 1840 @LENGTH@ 1
------DEL SimpleType@@Class @AT@ 1842 @LENGTH@ 5
---INS VariableDeclarationStatement@@Object value=applicationContext.getBeanFactory().createBean(type,autowireMode,dependencyCheck); @TO@ MethodDeclaration@@public, Object, MethodName:newInstance, Class type,  @AT@ 1927 @LENGTH@ 99
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value=applicationContext.getBeanFactory().createBean(type,autowireMode,dependencyCheck); @AT@ 1927 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=applicationContext.getBeanFactory().createBean(type,autowireMode,dependencyCheck) @TO@ VariableDeclarationStatement@@Object value=applicationContext.getBeanFactory().createBean(type,autowireMode,dependencyCheck); @AT@ 1934 @LENGTH@ 91
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=applicationContext.getBeanFactory().createBean(type,autowireMode,dependencyCheck) @AT@ 1934 @LENGTH@ 5
---------MOV MethodInvocation@@applicationContext.getBeanFactory().createBean(type,autowireMode,dependencyCheck) @TO@ VariableDeclarationFragment@@value=applicationContext.getBeanFactory().createBean(type,autowireMode,dependencyCheck) @AT@ 1939 @LENGTH@ 83
---UPD ReturnStatement@@MethodInvocation:applicationContext.getBeanFactory().createBean(type,autowireMode,dependencyCheck) @TO@ MethodInvocation:type.cast(value) @AT@ 1932 @LENGTH@ 91
------INS MethodInvocation@@type.cast(value) @TO@ ReturnStatement@@MethodInvocation:applicationContext.getBeanFactory().createBean(type,autowireMode,dependencyCheck) @AT@ 2042 @LENGTH@ 16
---------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.cast(value) @AT@ 2042 @LENGTH@ 4
---------INS SimpleName@@MethodName:cast:[value] @TO@ MethodInvocation@@type.cast(value) @AT@ 2047 @LENGTH@ 11
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:cast:[value] @AT@ 2052 @LENGTH@ 5


UPD ReturnStatement@@ClassInstanceCreation:new JmsExchange(getContext(),getPattern(),binding) @TO@ ClassInstanceCreation:new JmsExchange(this,binding) @AT@ 2259 @LENGTH@ 60
---UPD ClassInstanceCreation@@JmsExchange[getContext(), getPattern(), binding] @TO@ JmsExchange[this, binding] @AT@ 2266 @LENGTH@ 52
------DEL MethodInvocation@@MethodName:getContext:[] @AT@ 2282 @LENGTH@ 12
------DEL MethodInvocation@@MethodName:getPattern:[] @AT@ 2296 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ClassInstanceCreation@@JmsExchange[getContext(), getPattern(), binding] @AT@ 2413 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:map=new TreeMap() @TO@ Assignment:map=new TreeMap(map.comparator()) @AT@ 17460 @LENGTH@ 20
---UPD Assignment@@map=new TreeMap() @TO@ map=new TreeMap(map.comparator()) @AT@ 17460 @LENGTH@ 19
------UPD ClassInstanceCreation@@TreeMap[] @TO@ TreeMap[map.comparator()] @AT@ 17466 @LENGTH@ 13
---------INS MethodInvocation@@map.comparator() @TO@ ClassInstanceCreation@@TreeMap[] @AT@ 17494 @LENGTH@ 16
------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.comparator() @AT@ 17494 @LENGTH@ 3
------------INS SimpleName@@MethodName:comparator:[] @TO@ MethodInvocation@@map.comparator() @AT@ 17498 @LENGTH@ 12


UPD VariableDeclarationStatement@@BlockingQueue<Exchange> blockingQueue=getBlockingQueue(uri); @TO@ BlockingQueue<Exchange> blockingQueue=getBlockingQueue(uri,parameters); @AT@ 1940 @LENGTH@ 62
---UPD VariableDeclarationFragment@@blockingQueue=getBlockingQueue(uri) @TO@ blockingQueue=getBlockingQueue(uri,parameters) @AT@ 1964 @LENGTH@ 37
------UPD MethodInvocation@@getBlockingQueue(uri) @TO@ getBlockingQueue(uri,parameters) @AT@ 1980 @LENGTH@ 21
---------UPD SimpleName@@MethodName:getBlockingQueue:[uri] @TO@ MethodName:getBlockingQueue:[uri, parameters] @AT@ 1980 @LENGTH@ 21
------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:getBlockingQueue:[uri] @AT@ 2002 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:answer.bind("activemq",ActiveMQComponent.activeMQComponent("vm://localhost?broker.persistent=false")) @TO@ MethodInvocation:answer.bind("jms",ActiveMQComponent.activeMQComponent("vm://localhost?broker.persistent=false")) @AT@ 2499 @LENGTH@ 103
---UPD MethodInvocation@@answer.bind("activemq",ActiveMQComponent.activeMQComponent("vm://localhost?broker.persistent=false")) @TO@ answer.bind("jms",ActiveMQComponent.activeMQComponent("vm://localhost?broker.persistent=false")) @AT@ 2499 @LENGTH@ 102
------UPD SimpleName@@MethodName:bind:["activemq", ActiveMQComponent.activeMQComponent("vm://localhost?broker.persistent=false")] @TO@ MethodName:bind:["jms", ActiveMQComponent.activeMQComponent("vm://localhost?broker.persistent=false")] @AT@ 2506 @LENGTH@ 95
---------UPD StringLiteral@@"activemq" @TO@ "jms" @AT@ 2511 @LENGTH@ 10


UPD FieldDeclaration@@private, String, [cacheLevelName="CACHE_CONSUMER"] @TO@ private, String, [cacheLevelName="CACHE_CONNECTION"] @AT@ 3449 @LENGTH@ 49
---UPD VariableDeclarationFragment@@cacheLevelName="CACHE_CONSUMER" @TO@ cacheLevelName="CACHE_CONNECTION" @AT@ 3464 @LENGTH@ 33
------UPD StringLiteral@@"CACHE_CONSUMER" @TO@ "CACHE_CONNECTION" @AT@ 3481 @LENGTH@ 16


DEL MethodDeclaration@@void, MethodName:throwException, Exception,  @AT@ 4120 @LENGTH@ 34
---DEL PrimitiveType@@void @AT@ 4115 @LENGTH@ 4
---DEL SimpleName@@MethodName:throwException @AT@ 4120 @LENGTH@ 14
---DEL SimpleType@@Exception @AT@ 4144 @LENGTH@ 9


DEL SuperConstructorInvocation@@super();
 @AT@ 1420 @LENGTH@ 8


INS IfStatement@@if (convertUrlToLowercaseBeforeComparison) {  antPath=antPath.toLowerCase();} @TO@ MethodDeclaration@@public, void, MethodName:addSecureUrl, String antPath, ConfigAttributeDefinition attr,  @AT@ 2921 @LENGTH@ 99
---INS SimpleName@@convertUrlToLowercaseBeforeComparison @TO@ IfStatement@@if (convertUrlToLowercaseBeforeComparison) {  antPath=antPath.toLowerCase();} @AT@ 2925 @LENGTH@ 37
---INS Block@@ThenBody:{  antPath=antPath.toLowerCase();} @TO@ IfStatement@@if (convertUrlToLowercaseBeforeComparison) {  antPath=antPath.toLowerCase();} @AT@ 2964 @LENGTH@ 56
------INS ExpressionStatement@@Assignment:antPath=antPath.toLowerCase() @TO@ Block@@ThenBody:{  antPath=antPath.toLowerCase();} @AT@ 2978 @LENGTH@ 32
---------INS Assignment@@antPath=antPath.toLowerCase() @TO@ ExpressionStatement@@Assignment:antPath=antPath.toLowerCase() @AT@ 2978 @LENGTH@ 31
------------INS SimpleName@@antPath @TO@ Assignment@@antPath=antPath.toLowerCase() @AT@ 2978 @LENGTH@ 7
------------INS Operator@@= @TO@ Assignment@@antPath=antPath.toLowerCase() @AT@ 2985 @LENGTH@ 1
------------INS MethodInvocation@@antPath.toLowerCase() @TO@ Assignment@@antPath=antPath.toLowerCase() @AT@ 2988 @LENGTH@ 21
---------------INS SimpleName@@Name:antPath @TO@ MethodInvocation@@antPath.toLowerCase() @AT@ 2988 @LENGTH@ 7
---------------INS SimpleName@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@antPath.toLowerCase() @AT@ 2996 @LENGTH@ 13


UPD ExpressionStatement@@Assignment:uri="file:target/test-rename-inbox?delete=true" @TO@ Assignment:uri="file:target/test-delete-inbox?delete=true" @AT@ 1008 @LENGTH@ 50
---UPD Assignment@@uri="file:target/test-rename-inbox?delete=true" @TO@ uri="file:target/test-delete-inbox?delete=true" @AT@ 1008 @LENGTH@ 49
------UPD StringLiteral@@"file:target/test-rename-inbox?delete=true" @TO@ "file:target/test-delete-inbox?delete=true" @AT@ 1014 @LENGTH@ 43


UPD ExpressionStatement@@MethodInvocation:assertTrue("body should contain: " + expectedText,body.contains(expectedText)) @TO@ MethodInvocation:assertTrue("body should contain: " + expectedText + " but was: "+ body,body.contains(expectedText)) @AT@ 2086 @LENGTH@ 80
---UPD MethodInvocation@@assertTrue("body should contain: " + expectedText,body.contains(expectedText)) @TO@ assertTrue("body should contain: " + expectedText + " but was: "+ body,body.contains(expectedText)) @AT@ 2086 @LENGTH@ 79
------UPD SimpleName@@MethodName:assertTrue:["body should contain: " + expectedText, body.contains(expectedText)] @TO@ MethodName:assertTrue:["body should contain: " + expectedText + " but was: "+ body, body.contains(expectedText)] @AT@ 2086 @LENGTH@ 79
---------UPD InfixExpression@@"body should contain: " + expectedText @TO@ "body should contain: " + expectedText + " but was: "+ body @AT@ 2097 @LENGTH@ 38
------------INS StringLiteral@@" but was: " @TO@ InfixExpression@@"body should contain: " + expectedText @AT@ 2173 @LENGTH@ 12
------------INS SimpleName@@body @TO@ InfixExpression@@"body should contain: " + expectedText @AT@ 2188 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:addRoutes, RouteContext routeContext, Collection<Route> routes, Exception,  @TO@ public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 1537 @LENGTH@ 332
---DEL PrimitiveType@@void @AT@ 1544 @LENGTH@ 4
---UPD SimpleName@@MethodName:addRoutes @TO@ MethodName:createProcessor @AT@ 1549 @LENGTH@ 9
---INS SimpleType@@Processor @TO@ MethodDeclaration@@public, void, MethodName:addRoutes, RouteContext routeContext, Collection<Route> routes, Exception,  @AT@ 1558 @LENGTH@ 9
---DEL SingleVariableDeclaration@@Collection<Route> routes @AT@ 1586 @LENGTH@ 24
------DEL ParameterizedType@@Collection<Route> @AT@ 1586 @LENGTH@ 17
---------DEL SimpleType@@Collection @AT@ 1586 @LENGTH@ 10
---------DEL SimpleType@@Route @AT@ 1597 @LENGTH@ 5
------DEL SimpleName@@routes @AT@ 1604 @LENGTH@ 6
---UPD VariableDeclarationStatement@@final Processor interceptRoute=routeContext.createProcessor(this); @TO@ final Processor interceptRoute=createOutputsProcessor(routeContext); @AT@ 1738 @LENGTH@ 68
------UPD VariableDeclarationFragment@@interceptRoute=routeContext.createProcessor(this) @TO@ interceptRoute=createOutputsProcessor(routeContext) @AT@ 1754 @LENGTH@ 51
---------UPD MethodInvocation@@routeContext.createProcessor(this) @TO@ createOutputsProcessor(routeContext) @AT@ 1771 @LENGTH@ 34
------------INS SimpleName@@MethodName:createOutputsProcessor:[routeContext] @TO@ MethodInvocation@@routeContext.createProcessor(this) @AT@ 1770 @LENGTH@ 36
---------------INS SimpleName@@routeContext @TO@ SimpleName@@MethodName:createOutputsProcessor:[routeContext] @AT@ 1793 @LENGTH@ 12
------------DEL SimpleName@@Name:routeContext @AT@ 1771 @LENGTH@ 12
------------DEL SimpleName@@MethodName:createProcessor:[this] @AT@ 1784 @LENGTH@ 21
---------------DEL ThisExpression@@this @AT@ 1800 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:interceptor @TO@ MethodDeclaration@@public, void, MethodName:addRoutes, RouteContext routeContext, Collection<Route> routes, Exception,  @AT@ 1874 @LENGTH@ 19
------INS SimpleName@@interceptor @TO@ ReturnStatement@@SimpleName:interceptor @AT@ 1881 @LENGTH@ 11


DEL ExpressionStatement@@MethodInvocation:send(endpoint,exchange) @AT@ 2183 @LENGTH@ 25


INS MethodDeclaration@@private, void, MethodName:registerBeanFactory,  @TO@ TypeDeclaration@@[public]DefaultConfigurationBuilder, XMLConfiguration[ConfigurationBuilder] @AT@ 27742 @LENGTH@ 368
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:registerBeanFactory,  @AT@ 27742 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:registerBeanFactory,  @AT@ 27750 @LENGTH@ 4
---INS SimpleName@@MethodName:registerBeanFactory @TO@ MethodDeclaration@@private, void, MethodName:registerBeanFactory,  @AT@ 27755 @LENGTH@ 19
---INS SynchronizedStatement@@synchronized (getClass()) {  if (!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME)) {    BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());  }} @TO@ MethodDeclaration@@private, void, MethodName:registerBeanFactory,  @AT@ 27791 @LENGTH@ 313
------INS MethodInvocation@@MethodName:getClass:[] @TO@ SynchronizedStatement@@synchronized (getClass()) {  if (!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME)) {    BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());  }} @AT@ 27805 @LENGTH@ 10
------INS Block@@SyncBody:{  if (!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME)) {    BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());  }} @TO@ SynchronizedStatement@@synchronized (getClass()) {  if (!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME)) {    BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());  }} @AT@ 27825 @LENGTH@ 279
---------INS IfStatement@@if (!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME)) {  BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());} @TO@ Block@@SyncBody:{  if (!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME)) {    BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());  }} @AT@ 27839 @LENGTH@ 255
------------INS PrefixExpression@@!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME) @TO@ IfStatement@@if (!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME)) {  BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());} @AT@ 27843 @LENGTH@ 92
---------------INS Operator@@! @TO@ PrefixExpression@@!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME) @AT@ 27843 @LENGTH@ 1
---------------INS MethodInvocation@@BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME) @TO@ PrefixExpression@@!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME) @AT@ 27844 @LENGTH@ 91
------------------INS MethodInvocation@@MethodName:registeredFactoryNames:[] @TO@ MethodInvocation@@BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME) @AT@ 27844 @LENGTH@ 35
------------------INS SimpleName@@Name:BeanHelper @TO@ MethodInvocation@@BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME) @AT@ 27844 @LENGTH@ 10
------------------INS SimpleName@@MethodName:contains:[CONFIG_BEAN_FACTORY_NAME] @TO@ MethodInvocation@@BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME) @AT@ 27880 @LENGTH@ 55
---------------------INS SimpleName@@CONFIG_BEAN_FACTORY_NAME @TO@ SimpleName@@MethodName:contains:[CONFIG_BEAN_FACTORY_NAME] @AT@ 27910 @LENGTH@ 24
------------INS Block@@ThenBody:{  BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());} @TO@ IfStatement@@if (!BeanHelper.registeredFactoryNames().contains(CONFIG_BEAN_FACTORY_NAME)) {  BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());} @AT@ 27949 @LENGTH@ 145
---------------MOV ExpressionStatement@@MethodInvocation:BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory()) @TO@ Block@@ThenBody:{  BeanHelper.registerBeanFactory(CONFIG_BEAN_FACTORY_NAME,new ConfigurationBeanFactory());} @AT@ 53079 @LENGTH@ 105


INS MethodDeclaration@@public, void, MethodName:testAppendChained,  @TO@ TypeDeclaration@@[public]DistinguishedNameTest, TestCase @AT@ 19413 @LENGTH@ 291
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAppendChained,  @AT@ 19413 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAppendChained,  @AT@ 19420 @LENGTH@ 4
---INS SimpleName@@MethodName:testAppendChained @TO@ MethodDeclaration@@public, void, MethodName:testAppendChained,  @AT@ 19425 @LENGTH@ 17
---INS VariableDeclarationStatement@@DistinguishedName tested=new DistinguishedName("dc=mycompany,dc=com"); @TO@ MethodDeclaration@@public, void, MethodName:testAppendChained,  @AT@ 19456 @LENGTH@ 72
------INS SimpleType@@DistinguishedName @TO@ VariableDeclarationStatement@@DistinguishedName tested=new DistinguishedName("dc=mycompany,dc=com"); @AT@ 19456 @LENGTH@ 17
------INS VariableDeclarationFragment@@tested=new DistinguishedName("dc=mycompany,dc=com") @TO@ VariableDeclarationStatement@@DistinguishedName tested=new DistinguishedName("dc=mycompany,dc=com"); @AT@ 19474 @LENGTH@ 53
---------INS SimpleName@@tested @TO@ VariableDeclarationFragment@@tested=new DistinguishedName("dc=mycompany,dc=com") @AT@ 19474 @LENGTH@ 6
---------INS ClassInstanceCreation@@DistinguishedName["dc=mycompany,dc=com"] @TO@ VariableDeclarationFragment@@tested=new DistinguishedName("dc=mycompany,dc=com") @AT@ 19483 @LENGTH@ 44
------------INS New@@new @TO@ ClassInstanceCreation@@DistinguishedName["dc=mycompany,dc=com"] @AT@ 19483 @LENGTH@ 3
------------INS SimpleType@@DistinguishedName @TO@ ClassInstanceCreation@@DistinguishedName["dc=mycompany,dc=com"] @AT@ 19487 @LENGTH@ 17
------------INS StringLiteral@@"dc=mycompany,dc=com" @TO@ ClassInstanceCreation@@DistinguishedName["dc=mycompany,dc=com"] @AT@ 19505 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:tested.append("ou","company1").append("cn","john doe") @TO@ MethodDeclaration@@public, void, MethodName:testAppendChained,  @AT@ 19538 @LENGTH@ 57
------INS MethodInvocation@@tested.append("ou","company1").append("cn","john doe") @TO@ ExpressionStatement@@MethodInvocation:tested.append("ou","company1").append("cn","john doe") @AT@ 19538 @LENGTH@ 56
---------INS MethodInvocation@@MethodName:append:["ou", "company1"] @TO@ MethodInvocation@@tested.append("ou","company1").append("cn","john doe") @AT@ 19538 @LENGTH@ 31
------------INS StringLiteral@@"ou" @TO@ MethodInvocation@@MethodName:append:["ou", "company1"] @AT@ 19552 @LENGTH@ 4
------------INS StringLiteral@@"company1" @TO@ MethodInvocation@@MethodName:append:["ou", "company1"] @AT@ 19558 @LENGTH@ 10
---------INS SimpleName@@Name:tested @TO@ MethodInvocation@@tested.append("ou","company1").append("cn","john doe") @AT@ 19538 @LENGTH@ 6
---------INS SimpleName@@MethodName:append:["cn", "john doe"] @TO@ MethodInvocation@@tested.append("ou","company1").append("cn","john doe") @AT@ 19570 @LENGTH@ 24
------------INS StringLiteral@@"cn" @TO@ SimpleName@@MethodName:append:["cn", "john doe"] @AT@ 19577 @LENGTH@ 4
------------INS StringLiteral@@"john doe" @TO@ SimpleName@@MethodName:append:["cn", "john doe"] @AT@ 19583 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals("cn=john doe, ou=company1, dc=mycompany, dc=com",tested.toString()) @TO@ MethodDeclaration@@public, void, MethodName:testAppendChained,  @AT@ 19615 @LENGTH@ 82
------INS MethodInvocation@@assertEquals("cn=john doe, ou=company1, dc=mycompany, dc=com",tested.toString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("cn=john doe, ou=company1, dc=mycompany, dc=com",tested.toString()) @AT@ 19615 @LENGTH@ 81
---------INS SimpleName@@MethodName:assertEquals:["cn=john doe, ou=company1, dc=mycompany, dc=com", tested.toString()] @TO@ MethodInvocation@@assertEquals("cn=john doe, ou=company1, dc=mycompany, dc=com",tested.toString()) @AT@ 19615 @LENGTH@ 81
------------INS StringLiteral@@"cn=john doe, ou=company1, dc=mycompany, dc=com" @TO@ SimpleName@@MethodName:assertEquals:["cn=john doe, ou=company1, dc=mycompany, dc=com", tested.toString()] @AT@ 19628 @LENGTH@ 48
------------INS MethodInvocation@@tested.toString() @TO@ SimpleName@@MethodName:assertEquals:["cn=john doe, ou=company1, dc=mycompany, dc=com", tested.toString()] @AT@ 19678 @LENGTH@ 17
---------------INS SimpleName@@Name:tested @TO@ MethodInvocation@@tested.toString() @AT@ 19678 @LENGTH@ 6
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@tested.toString() @AT@ 19685 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:map=new TreeMap() @TO@ Assignment:map=new TreeMap(map.comparator()) @AT@ 10917 @LENGTH@ 20
---UPD Assignment@@map=new TreeMap() @TO@ map=new TreeMap(map.comparator()) @AT@ 10917 @LENGTH@ 19
------UPD ClassInstanceCreation@@TreeMap[] @TO@ TreeMap[map.comparator()] @AT@ 10923 @LENGTH@ 13
---------INS MethodInvocation@@map.comparator() @TO@ ClassInstanceCreation@@TreeMap[] @AT@ 10935 @LENGTH@ 16
------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.comparator() @AT@ 10935 @LENGTH@ 3
------------INS SimpleName@@MethodName:comparator:[] @TO@ MethodInvocation@@map.comparator() @AT@ 10939 @LENGTH@ 12


INS MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]FileRouteGenerateEmptyExchangeWhenIdleTest, ContextTestSupport @AT@ 2127 @LENGTH@ 117
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 2127 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 2137 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 2142 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 2157 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:recursiveDelete("target/test-inbox2") @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 2177 @LENGTH@ 38
------INS MethodInvocation@@recursiveDelete("target/test-inbox2") @TO@ ExpressionStatement@@MethodInvocation:recursiveDelete("target/test-inbox2") @AT@ 2177 @LENGTH@ 37
---------INS SimpleName@@MethodName:recursiveDelete:["target/test-inbox2"] @TO@ MethodInvocation@@recursiveDelete("target/test-inbox2") @AT@ 2177 @LENGTH@ 37
------------INS StringLiteral@@"target/test-inbox2" @TO@ SimpleName@@MethodName:recursiveDelete:["target/test-inbox2"] @AT@ 2193 @LENGTH@ 20
---INS ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 2224 @LENGTH@ 14
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 2224 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 2230 @LENGTH@ 5


INS IfStatement@@if (queryParamIndex > 0) {  uri=uri.substring(0,queryParamIndex);} @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresLogout, HttpServletRequest request, HttpServletResponse response,  @AT@ 5202 @LENGTH@ 153
---INS InfixExpression@@queryParamIndex > 0 @TO@ IfStatement@@if (queryParamIndex > 0) {  uri=uri.substring(0,queryParamIndex);} @AT@ 5206 @LENGTH@ 19
------INS SimpleName@@queryParamIndex @TO@ InfixExpression@@queryParamIndex > 0 @AT@ 5206 @LENGTH@ 15
------INS Operator@@> @TO@ InfixExpression@@queryParamIndex > 0 @AT@ 5221 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ InfixExpression@@queryParamIndex > 0 @AT@ 5224 @LENGTH@ 1
---INS Block@@ThenBody:{  uri=uri.substring(0,queryParamIndex);} @TO@ IfStatement@@if (queryParamIndex > 0) {  uri=uri.substring(0,queryParamIndex);} @AT@ 5227 @LENGTH@ 128
------INS ExpressionStatement@@Assignment:uri=uri.substring(0,queryParamIndex) @TO@ Block@@ThenBody:{  uri=uri.substring(0,queryParamIndex);} @AT@ 5304 @LENGTH@ 40
---------INS Assignment@@uri=uri.substring(0,queryParamIndex) @TO@ ExpressionStatement@@Assignment:uri=uri.substring(0,queryParamIndex) @AT@ 5304 @LENGTH@ 39
------------INS SimpleName@@uri @TO@ Assignment@@uri=uri.substring(0,queryParamIndex) @AT@ 5304 @LENGTH@ 3
------------INS Operator@@= @TO@ Assignment@@uri=uri.substring(0,queryParamIndex) @AT@ 5307 @LENGTH@ 1
------------INS MethodInvocation@@uri.substring(0,queryParamIndex) @TO@ Assignment@@uri=uri.substring(0,queryParamIndex) @AT@ 5310 @LENGTH@ 33
---------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.substring(0,queryParamIndex) @AT@ 5310 @LENGTH@ 3
---------------INS SimpleName@@MethodName:substring:[0, queryParamIndex] @TO@ MethodInvocation@@uri.substring(0,queryParamIndex) @AT@ 5314 @LENGTH@ 29
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:substring:[0, queryParamIndex] @AT@ 5324 @LENGTH@ 1
------------------INS SimpleName@@queryParamIndex @TO@ SimpleName@@MethodName:substring:[0, queryParamIndex] @AT@ 5327 @LENGTH@ 15


DEL VariableDeclarationStatement@@SerializedView state=context.getApplication().getStateManager().saveSerializedView(context); @AT@ 2156 @LENGTH@ 94
---DEL SimpleType@@SerializedView @AT@ 2156 @LENGTH@ 14
---DEL VariableDeclarationFragment@@state=context.getApplication().getStateManager().saveSerializedView(context) @AT@ 2171 @LENGTH@ 78
------DEL SimpleName@@state @AT@ 2171 @LENGTH@ 5
------DEL MethodInvocation@@context.getApplication().getStateManager().saveSerializedView(context) @AT@ 2179 @LENGTH@ 70
---------DEL MethodInvocation@@MethodName:getStateManager:[] @AT@ 2179 @LENGTH@ 42
---------DEL MethodInvocation@@MethodName:getApplication:[] @AT@ 2179 @LENGTH@ 24
---------DEL SimpleName@@Name:context @AT@ 2179 @LENGTH@ 7
---------DEL SimpleName@@MethodName:saveSerializedView:[context] @AT@ 2222 @LENGTH@ 27
------------DEL SimpleName@@context @AT@ 2241 @LENGTH@ 7


UPD ReturnStatement@@ClassInstanceCreation:new BeanExchange(getContext(),getPattern()) @TO@ ClassInstanceCreation:new BeanExchange(this) @AT@ 1478 @LENGTH@ 52
---UPD ClassInstanceCreation@@BeanExchange[getContext(), getPattern()] @TO@ BeanExchange[this] @AT@ 1485 @LENGTH@ 44
------DEL MethodInvocation@@MethodName:getContext:[] @AT@ 1502 @LENGTH@ 12
------DEL MethodInvocation@@MethodName:getPattern:[] @AT@ 1516 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ClassInstanceCreation@@BeanExchange[getContext(), getPattern()] @AT@ 1582 @LENGTH@ 4


UPD MethodDeclaration@@public, DataTypeClause<ProcessorType<Type>>, MethodName:unmarshal,  @TO@ public, DataFormatClause<ProcessorType<Type>>, MethodName:unmarshal,  @AT@ 36272 @LENGTH@ 160
---UPD ParameterizedType@@DataTypeClause<ProcessorType<Type>> @TO@ DataFormatClause<ProcessorType<Type>> @AT@ 36279 @LENGTH@ 35
------UPD SimpleType@@DataTypeClause @TO@ DataFormatClause @AT@ 36279 @LENGTH@ 14
---UPD ReturnStatement@@ClassInstanceCreation:new DataTypeClause<ProcessorType<Type>>(this,DataTypeClause.Operation.Unmarshal) @TO@ ClassInstanceCreation:new DataFormatClause<ProcessorType<Type>>(this,DataFormatClause.Operation.Unmarshal) @AT@ 36337 @LENGTH@ 89
------UPD ClassInstanceCreation@@DataTypeClause<ProcessorType<Type>>[this, DataTypeClause.Operation.Unmarshal] @TO@ DataFormatClause<ProcessorType<Type>>[this, DataFormatClause.Operation.Unmarshal] @AT@ 36344 @LENGTH@ 81
---------UPD ParameterizedType@@DataTypeClause<ProcessorType<Type>> @TO@ DataFormatClause<ProcessorType<Type>> @AT@ 36348 @LENGTH@ 35
------------UPD SimpleType@@DataTypeClause @TO@ DataFormatClause @AT@ 36348 @LENGTH@ 14
---------UPD QualifiedName@@DataTypeClause.Operation.Unmarshal @TO@ DataFormatClause.Operation.Unmarshal @AT@ 36390 @LENGTH@ 34
------------UPD QualifiedName@@DataTypeClause.Operation @TO@ DataFormatClause.Operation @AT@ 36390 @LENGTH@ 24
---------------UPD SimpleName@@DataTypeClause @TO@ DataFormatClause @AT@ 36390 @LENGTH@ 14


UPD FieldDeclaration@@private, ExpressionEngine, [expressionEngine] @TO@ private, transient, ExpressionEngine, [expressionEngine] @AT@ 7287 @LENGTH@ 42
---INS Modifier@@transient @TO@ FieldDeclaration@@private, ExpressionEngine, [expressionEngine] @AT@ 7295 @LENGTH@ 9


UPD FieldDeclaration@@private, RestartData, [restartData=new GenericRestartData(null)] @TO@ private, RestartData, [restartData=new GenericRestartData(new Properties())] @AT@ 2072 @LENGTH@ 63
---UPD VariableDeclarationFragment@@restartData=new GenericRestartData(null) @TO@ restartData=new GenericRestartData(new Properties()) @AT@ 2092 @LENGTH@ 42
------UPD ClassInstanceCreation@@GenericRestartData[null] @TO@ GenericRestartData[new Properties()] @AT@ 2106 @LENGTH@ 28
---------DEL NullLiteral@@null @AT@ 2129 @LENGTH@ 4
---------INS ClassInstanceCreation@@Properties[] @TO@ ClassInstanceCreation@@GenericRestartData[null] @AT@ 2156 @LENGTH@ 16
------------INS New@@new @TO@ ClassInstanceCreation@@Properties[] @AT@ 2156 @LENGTH@ 3
------------INS SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[] @AT@ 2160 @LENGTH@ 10


INS IfStatement@@if (localFlowBeanFactory.containsBean("flowRegistry")) {  return (FlowDefinitionLocator)localFlowBeanFactory.getBean("flowRegistry",FlowDefinitionLocator.class);} else {  return parent.getFlowDefinitionLocator();} @TO@ MethodDeclaration@@public, FlowDefinitionLocator, MethodName:getFlowDefinitionLocator,  @AT@ 1907 @LENGTH@ 229
---INS MethodInvocation@@localFlowBeanFactory.containsBean("flowRegistry") @TO@ IfStatement@@if (localFlowBeanFactory.containsBean("flowRegistry")) {  return (FlowDefinitionLocator)localFlowBeanFactory.getBean("flowRegistry",FlowDefinitionLocator.class);} else {  return parent.getFlowDefinitionLocator();} @AT@ 1911 @LENGTH@ 49
------INS SimpleName@@Name:localFlowBeanFactory @TO@ MethodInvocation@@localFlowBeanFactory.containsBean("flowRegistry") @AT@ 1911 @LENGTH@ 20
------INS SimpleName@@MethodName:containsBean:["flowRegistry"] @TO@ MethodInvocation@@localFlowBeanFactory.containsBean("flowRegistry") @AT@ 1932 @LENGTH@ 28
---------INS StringLiteral@@"flowRegistry" @TO@ SimpleName@@MethodName:containsBean:["flowRegistry"] @AT@ 1945 @LENGTH@ 14
---INS Block@@ThenBody:{  return (FlowDefinitionLocator)localFlowBeanFactory.getBean("flowRegistry",FlowDefinitionLocator.class);} @TO@ IfStatement@@if (localFlowBeanFactory.containsBean("flowRegistry")) {  return (FlowDefinitionLocator)localFlowBeanFactory.getBean("flowRegistry",FlowDefinitionLocator.class);} else {  return parent.getFlowDefinitionLocator();} @AT@ 1962 @LENGTH@ 116
------MOV ReturnStatement@@CastExpression:(FlowDefinitionLocator)localFlowBeanFactory.getBean("flowRegistry",FlowDefinitionLocator.class) @TO@ Block@@ThenBody:{  return (FlowDefinitionLocator)localFlowBeanFactory.getBean("flowRegistry",FlowDefinitionLocator.class);} @AT@ 1907 @LENGTH@ 105
---INS Block@@ElseBody:{  return parent.getFlowDefinitionLocator();} @TO@ IfStatement@@if (localFlowBeanFactory.containsBean("flowRegistry")) {  return (FlowDefinitionLocator)localFlowBeanFactory.getBean("flowRegistry",FlowDefinitionLocator.class);} else {  return parent.getFlowDefinitionLocator();} @AT@ 2084 @LENGTH@ 52
------INS ReturnStatement@@MethodInvocation:parent.getFlowDefinitionLocator() @TO@ Block@@ElseBody:{  return parent.getFlowDefinitionLocator();} @AT@ 2090 @LENGTH@ 41
---------INS MethodInvocation@@parent.getFlowDefinitionLocator() @TO@ ReturnStatement@@MethodInvocation:parent.getFlowDefinitionLocator() @AT@ 2097 @LENGTH@ 33
------------INS SimpleName@@Name:parent @TO@ MethodInvocation@@parent.getFlowDefinitionLocator() @AT@ 2097 @LENGTH@ 6
------------INS SimpleName@@MethodName:getFlowDefinitionLocator:[] @TO@ MethodInvocation@@parent.getFlowDefinitionLocator() @AT@ 2104 @LENGTH@ 26


UPD TypeDeclaration@@[private]MockInputSource, [InputSource] @TO@ [private, static]MockInputSource, [InputSource] @AT@ 2816 @LENGTH@ 199
---INS Modifier@@static @TO@ TypeDeclaration@@[private]MockInputSource, [InputSource] @AT@ 2824 @LENGTH@ 6


UPD IfStatement@@if (connectorRef == null) {  Connector connector;  if ("https".equals(endpoint.getProtocol())) {    connector=new SslSocketConnector();  } else {    connector=new SelectChannelConnector();  }  connector.setPort(endpoint.getPort());  getServer().addConnector(connector);  connector.start();  connectorRef=new ConnectorRef(connector);} else {  connectorRef.increment();} @TO@ if (connectorRef == null) {  Connector connector;  if ("https".equals(endpoint.getProtocol())) {    connector=new SslSocketConnector();  } else {    connector=new SelectChannelConnector();  }  connector.setPort(endpoint.getPort());  getServer().addConnector(connector);  connector.start();  connectorRef=new ConnectorRef(connector);  connectors.put(connectorKey,connectorRef);} else {  connectorRef.increment();} @AT@ 3117 @LENGTH@ 612
---UPD Block@@ThenBody:{  Connector connector;  if ("https".equals(endpoint.getProtocol())) {    connector=new SslSocketConnector();  } else {    connector=new SelectChannelConnector();  }  connector.setPort(endpoint.getPort());  getServer().addConnector(connector);  connector.start();  connectorRef=new ConnectorRef(connector);} @TO@ ThenBody:{  Connector connector;  if ("https".equals(endpoint.getProtocol())) {    connector=new SslSocketConnector();  } else {    connector=new SelectChannelConnector();  }  connector.setPort(endpoint.getPort());  getServer().addConnector(connector);  connector.start();  connectorRef=new ConnectorRef(connector);  connectors.put(connectorKey,connectorRef);} @AT@ 3143 @LENGTH@ 480
------INS ExpressionStatement@@MethodInvocation:connectors.put(connectorKey,connectorRef) @TO@ Block@@ThenBody:{  Connector connector;  if ("https".equals(endpoint.getProtocol())) {    connector=new SslSocketConnector();  } else {    connector=new SelectChannelConnector();  }  connector.setPort(endpoint.getPort());  getServer().addConnector(connector);  connector.start();  connectorRef=new ConnectorRef(connector);} @AT@ 3626 @LENGTH@ 43
---------INS MethodInvocation@@connectors.put(connectorKey,connectorRef) @TO@ ExpressionStatement@@MethodInvocation:connectors.put(connectorKey,connectorRef) @AT@ 3626 @LENGTH@ 42
------------INS SimpleName@@Name:connectors @TO@ MethodInvocation@@connectors.put(connectorKey,connectorRef) @AT@ 3626 @LENGTH@ 10
------------INS SimpleName@@MethodName:put:[connectorKey, connectorRef] @TO@ MethodInvocation@@connectors.put(connectorKey,connectorRef) @AT@ 3637 @LENGTH@ 31
---------------INS SimpleName@@connectorKey @TO@ SimpleName@@MethodName:put:[connectorKey, connectorRef] @AT@ 3641 @LENGTH@ 12
---------------INS SimpleName@@connectorRef @TO@ SimpleName@@MethodName:put:[connectorKey, connectorRef] @AT@ 3655 @LENGTH@ 12


UPD MethodDeclaration@@protected, BlockingQueue<Exchange>, MethodName:getBlockingQueue, String uri,  @TO@ protected, BlockingQueue<Exchange>, MethodName:getBlockingQueue, String uri, Map parameters,  @AT@ 2073 @LENGTH@ 330
---UPD SynchronizedStatement@@synchronized (queues) {  BlockingQueue<Exchange> answer=queues.get(uri);  if (answer == null) {    answer=createQueue();    queues.put(uri,answer);  }  return answer;} @TO@ synchronized (queues) {  BlockingQueue<Exchange> answer=queues.get(uri);  if (answer == null) {    answer=createQueue(uri,parameters);    queues.put(uri,answer);  }  return answer;} @AT@ 2146 @LENGTH@ 251
------UPD Block@@SyncBody:{  BlockingQueue<Exchange> answer=queues.get(uri);  if (answer == null) {    answer=createQueue();    queues.put(uri,answer);  }  return answer;} @TO@ SyncBody:{  BlockingQueue<Exchange> answer=queues.get(uri);  if (answer == null) {    answer=createQueue(uri,parameters);    queues.put(uri,answer);  }  return answer;} @AT@ 2168 @LENGTH@ 229
---------UPD IfStatement@@if (answer == null) {  answer=createQueue();  queues.put(uri,answer);} @TO@ if (answer == null) {  answer=createQueue(uri,parameters);  queues.put(uri,answer);} @AT@ 2244 @LENGTH@ 116
------------UPD Block@@ThenBody:{  answer=createQueue();  queues.put(uri,answer);} @TO@ ThenBody:{  answer=createQueue(uri,parameters);  queues.put(uri,answer);} @AT@ 2264 @LENGTH@ 96
---------------UPD ExpressionStatement@@Assignment:answer=createQueue() @TO@ Assignment:answer=createQueue(uri,parameters) @AT@ 2282 @LENGTH@ 23
------------------UPD Assignment@@answer=createQueue() @TO@ answer=createQueue(uri,parameters) @AT@ 2282 @LENGTH@ 22
---------------------UPD MethodInvocation@@MethodName:createQueue:[] @TO@ createQueue(uri,parameters) @AT@ 2291 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:createQueue:[uri, parameters] @TO@ MethodInvocation@@MethodName:createQueue:[] @AT@ 2319 @LENGTH@ 28
---------------------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:createQueue:[uri, parameters] @AT@ 2331 @LENGTH@ 3
---------------------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:createQueue:[uri, parameters] @AT@ 2336 @LENGTH@ 10
---INS SingleVariableDeclaration@@Map parameters @TO@ MethodDeclaration@@protected, BlockingQueue<Exchange>, MethodName:getBlockingQueue, String uri,  @AT@ 2148 @LENGTH@ 14
------INS SimpleType@@Map @TO@ SingleVariableDeclaration@@Map parameters @AT@ 2148 @LENGTH@ 3
------INS SimpleName@@parameters @TO@ SingleVariableDeclaration@@Map parameters @AT@ 2152 @LENGTH@ 10


DEL SuperConstructorInvocation@@super();
 @AT@ 1600 @LENGTH@ 8


UPD ReturnStatement@@ClassInstanceCreation:new FileExchange(getContext(),getPattern(),getFile()) @TO@ ClassInstanceCreation:new FileExchange(this,getFile()) @AT@ 1642 @LENGTH@ 63
---UPD ClassInstanceCreation@@FileExchange[getContext(), getPattern(), getFile()] @TO@ FileExchange[this, getFile()] @AT@ 1649 @LENGTH@ 55
------DEL MethodInvocation@@MethodName:getContext:[] @AT@ 1666 @LENGTH@ 12
------DEL MethodInvocation@@MethodName:getPattern:[] @AT@ 1680 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ClassInstanceCreation@@FileExchange[getContext(), getPattern(), getFile()] @AT@ 1783 @LENGTH@ 4


UPD MethodDeclaration@@public, DataTypeClause<ProcessorType<Type>>, MethodName:marshal,  @TO@ public, DataFormatClause<ProcessorType<Type>>, MethodName:marshal,  @AT@ 37614 @LENGTH@ 156
---UPD ParameterizedType@@DataTypeClause<ProcessorType<Type>> @TO@ DataFormatClause<ProcessorType<Type>> @AT@ 37621 @LENGTH@ 35
------UPD SimpleType@@DataTypeClause @TO@ DataFormatClause @AT@ 37621 @LENGTH@ 14
---UPD ReturnStatement@@ClassInstanceCreation:new DataTypeClause<ProcessorType<Type>>(this,DataTypeClause.Operation.Marshal) @TO@ ClassInstanceCreation:new DataFormatClause<ProcessorType<Type>>(this,DataFormatClause.Operation.Marshal) @AT@ 37677 @LENGTH@ 87
------UPD ClassInstanceCreation@@DataTypeClause<ProcessorType<Type>>[this, DataTypeClause.Operation.Marshal] @TO@ DataFormatClause<ProcessorType<Type>>[this, DataFormatClause.Operation.Marshal] @AT@ 37684 @LENGTH@ 79
---------UPD ParameterizedType@@DataTypeClause<ProcessorType<Type>> @TO@ DataFormatClause<ProcessorType<Type>> @AT@ 37688 @LENGTH@ 35
------------UPD SimpleType@@DataTypeClause @TO@ DataFormatClause @AT@ 37688 @LENGTH@ 14
---------UPD QualifiedName@@DataTypeClause.Operation.Marshal @TO@ DataFormatClause.Operation.Marshal @AT@ 37730 @LENGTH@ 32
------------UPD QualifiedName@@DataTypeClause.Operation @TO@ DataFormatClause.Operation @AT@ 37730 @LENGTH@ 24
---------------UPD SimpleName@@DataTypeClause @TO@ DataFormatClause @AT@ 37730 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:from("direct:in").beanRef("myBean").to("seda:out") @TO@ MethodInvocation:from("direct:in").beanRef("myBean") @AT@ 2939 @LENGTH@ 51
---UPD MethodInvocation@@from("direct:in").beanRef("myBean").to("seda:out") @TO@ from("direct:in").beanRef("myBean") @AT@ 2939 @LENGTH@ 50
------DEL MethodInvocation@@MethodName:beanRef:["myBean"] @AT@ 2939 @LENGTH@ 35
---------DEL StringLiteral@@"myBean" @AT@ 2965 @LENGTH@ 8
------UPD SimpleName@@MethodName:to:["seda:out"] @TO@ MethodName:beanRef:["myBean"] @AT@ 2975 @LENGTH@ 14
---------UPD StringLiteral@@"seda:out" @TO@ "myBean" @AT@ 2978 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:getHeaders() @TO@ MethodDeclaration@@public, voidMethodName:HttpMessage, HttpExchange exchange, HttpServletRequest request,  @AT@ 1442 @LENGTH@ 13
---INS MethodInvocation@@MethodName:getHeaders:[] @TO@ ExpressionStatement@@MethodInvocation:getHeaders() @AT@ 1442 @LENGTH@ 12


INS IfStatement@@if (jobIdentifier instanceof DefaultJobIdentifier) {  return new ScheduledJobIdentifier(jobIdentifier.getName(),((DefaultJobIdentifier)jobIdentifier).getJobKey());} @TO@ MethodDeclaration@@private, ScheduledJobIdentifier, MethodName:getScheduledJobIdentifier, JobIdentifier jobIdentifier,  @AT@ 12978 @LENGTH@ 176
---INS InstanceofExpression@@jobIdentifier instanceof DefaultJobIdentifier @TO@ IfStatement@@if (jobIdentifier instanceof DefaultJobIdentifier) {  return new ScheduledJobIdentifier(jobIdentifier.getName(),((DefaultJobIdentifier)jobIdentifier).getJobKey());} @AT@ 12982 @LENGTH@ 45
------INS SimpleName@@jobIdentifier @TO@ InstanceofExpression@@jobIdentifier instanceof DefaultJobIdentifier @AT@ 12982 @LENGTH@ 13
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@jobIdentifier instanceof DefaultJobIdentifier @AT@ 12996 @LENGTH@ 10
------INS SimpleType@@DefaultJobIdentifier @TO@ InstanceofExpression@@jobIdentifier instanceof DefaultJobIdentifier @AT@ 13007 @LENGTH@ 20
---INS Block@@ThenBody:{  return new ScheduledJobIdentifier(jobIdentifier.getName(),((DefaultJobIdentifier)jobIdentifier).getJobKey());} @TO@ IfStatement@@if (jobIdentifier instanceof DefaultJobIdentifier) {  return new ScheduledJobIdentifier(jobIdentifier.getName(),((DefaultJobIdentifier)jobIdentifier).getJobKey());} @AT@ 13029 @LENGTH@ 125
------INS ReturnStatement@@ClassInstanceCreation:new ScheduledJobIdentifier(jobIdentifier.getName(),((DefaultJobIdentifier)jobIdentifier).getJobKey()) @TO@ Block@@ThenBody:{  return new ScheduledJobIdentifier(jobIdentifier.getName(),((DefaultJobIdentifier)jobIdentifier).getJobKey());} @AT@ 13034 @LENGTH@ 116
---------INS ClassInstanceCreation@@ScheduledJobIdentifier[jobIdentifier.getName(), ((DefaultJobIdentifier)jobIdentifier).getJobKey()] @TO@ ReturnStatement@@ClassInstanceCreation:new ScheduledJobIdentifier(jobIdentifier.getName(),((DefaultJobIdentifier)jobIdentifier).getJobKey()) @AT@ 13041 @LENGTH@ 108
------------INS New@@new @TO@ ClassInstanceCreation@@ScheduledJobIdentifier[jobIdentifier.getName(), ((DefaultJobIdentifier)jobIdentifier).getJobKey()] @AT@ 13041 @LENGTH@ 3
------------INS SimpleType@@ScheduledJobIdentifier @TO@ ClassInstanceCreation@@ScheduledJobIdentifier[jobIdentifier.getName(), ((DefaultJobIdentifier)jobIdentifier).getJobKey()] @AT@ 13045 @LENGTH@ 22
------------INS MethodInvocation@@jobIdentifier.getName() @TO@ ClassInstanceCreation@@ScheduledJobIdentifier[jobIdentifier.getName(), ((DefaultJobIdentifier)jobIdentifier).getJobKey()] @AT@ 13068 @LENGTH@ 23
---------------INS SimpleName@@Name:jobIdentifier @TO@ MethodInvocation@@jobIdentifier.getName() @AT@ 13068 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@jobIdentifier.getName() @AT@ 13082 @LENGTH@ 9
------------INS MethodInvocation@@((DefaultJobIdentifier)jobIdentifier).getJobKey() @TO@ ClassInstanceCreation@@ScheduledJobIdentifier[jobIdentifier.getName(), ((DefaultJobIdentifier)jobIdentifier).getJobKey()] @AT@ 13098 @LENGTH@ 50
---------------INS ParenthesizedExpression@@((DefaultJobIdentifier)jobIdentifier) @TO@ MethodInvocation@@((DefaultJobIdentifier)jobIdentifier).getJobKey() @AT@ 13098 @LENGTH@ 38
------------------INS CastExpression@@(DefaultJobIdentifier)jobIdentifier @TO@ ParenthesizedExpression@@((DefaultJobIdentifier)jobIdentifier) @AT@ 13099 @LENGTH@ 36
---------------------INS SimpleType@@DefaultJobIdentifier @TO@ CastExpression@@(DefaultJobIdentifier)jobIdentifier @AT@ 13100 @LENGTH@ 20
---------------------INS SimpleName@@jobIdentifier @TO@ CastExpression@@(DefaultJobIdentifier)jobIdentifier @AT@ 13122 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getJobKey:[] @TO@ MethodInvocation@@((DefaultJobIdentifier)jobIdentifier).getJobKey() @AT@ 13137 @LENGTH@ 11


INS MethodDeclaration@@public, static, String, MethodName:toString, ByteBuffer buffer,  @TO@ TypeDeclaration@@[@Converter, public]NIOConverter,  @AT@ 1241 @LENGTH@ 109
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:toString, ByteBuffer buffer,  @AT@ 1241 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:toString, ByteBuffer buffer,  @AT@ 1248 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:toString, ByteBuffer buffer,  @AT@ 1255 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, static, String, MethodName:toString, ByteBuffer buffer,  @AT@ 1262 @LENGTH@ 8
---INS SingleVariableDeclaration@@ByteBuffer buffer @TO@ MethodDeclaration@@public, static, String, MethodName:toString, ByteBuffer buffer,  @AT@ 1271 @LENGTH@ 17
------INS SimpleType@@ByteBuffer @TO@ SingleVariableDeclaration@@ByteBuffer buffer @AT@ 1271 @LENGTH@ 10
------INS SimpleName@@buffer @TO@ SingleVariableDeclaration@@ByteBuffer buffer @AT@ 1282 @LENGTH@ 6
---INS ReturnStatement@@MethodInvocation:IOConverter.toString(buffer.array()) @TO@ MethodDeclaration@@public, static, String, MethodName:toString, ByteBuffer buffer,  @AT@ 1300 @LENGTH@ 44
------INS MethodInvocation@@IOConverter.toString(buffer.array()) @TO@ ReturnStatement@@MethodInvocation:IOConverter.toString(buffer.array()) @AT@ 1307 @LENGTH@ 36
---------INS SimpleName@@Name:IOConverter @TO@ MethodInvocation@@IOConverter.toString(buffer.array()) @AT@ 1307 @LENGTH@ 11
---------INS SimpleName@@MethodName:toString:[buffer.array()] @TO@ MethodInvocation@@IOConverter.toString(buffer.array()) @AT@ 1319 @LENGTH@ 24
------------INS MethodInvocation@@buffer.array() @TO@ SimpleName@@MethodName:toString:[buffer.array()] @AT@ 1328 @LENGTH@ 14
---------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.array() @AT@ 1328 @LENGTH@ 6
---------------INS SimpleName@@MethodName:array:[] @TO@ MethodInvocation@@buffer.array() @AT@ 1335 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:expect(mimeContainer.getAttachment("cid:99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws")).andReturn(dataHandler) @TO@ MethodInvocation:expect(mimeContainer.getAttachment("<99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws>")).andReturn(dataHandler) @AT@ 5695 @LENGTH@ 174
---UPD MethodInvocation@@expect(mimeContainer.getAttachment("cid:99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws")).andReturn(dataHandler) @TO@ expect(mimeContainer.getAttachment("<99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws>")).andReturn(dataHandler) @AT@ 5695 @LENGTH@ 173
------UPD MethodInvocation@@MethodName:expect:[mimeContainer.getAttachment("cid:99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws")] @TO@ MethodName:expect:[mimeContainer.getAttachment("<99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws>")] @AT@ 5695 @LENGTH@ 133
---------UPD MethodInvocation@@mimeContainer.getAttachment("cid:99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws") @TO@ mimeContainer.getAttachment("<99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws>") @AT@ 5702 @LENGTH@ 125
------------UPD SimpleName@@MethodName:getAttachment:["cid:99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws"] @TO@ MethodName:getAttachment:["<99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws>"] @AT@ 5716 @LENGTH@ 111
---------------UPD StringLiteral@@"cid:99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws" @TO@ "<99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws>" @AT@ 5747 @LENGTH@ 79


INS MethodDeclaration@@Exchange, MethodName:newInstance,  @TO@ TypeDeclaration@@[public]Exchange,  @AT@ 4638 @LENGTH@ 14
---INS SimpleType@@Exchange @TO@ MethodDeclaration@@Exchange, MethodName:newInstance,  @AT@ 4629 @LENGTH@ 8
---INS SimpleName@@MethodName:newInstance @TO@ MethodDeclaration@@Exchange, MethodName:newInstance,  @AT@ 4638 @LENGTH@ 11


UPD IfStatement@@if (getProtocol() != null && isIgnoreUriScheme()) {  String scheme=uri.getScheme();  if (scheme != null) {    setProtocol(scheme);  }} @TO@ if (getProtocol() != null && !isIgnoreUriScheme()) {  String scheme=uri.getScheme();  if (scheme != null) {    setProtocol(scheme);  }} @AT@ 2064 @LENGTH@ 191
---UPD InfixExpression@@getProtocol() != null && isIgnoreUriScheme() @TO@ getProtocol() != null && !isIgnoreUriScheme() @AT@ 2068 @LENGTH@ 44
------INS PrefixExpression@@!isIgnoreUriScheme() @TO@ InfixExpression@@getProtocol() != null && isIgnoreUriScheme() @AT@ 2093 @LENGTH@ 20
---------INS Operator@@! @TO@ PrefixExpression@@!isIgnoreUriScheme() @AT@ 2093 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:isIgnoreUriScheme:[] @TO@ PrefixExpression@@!isIgnoreUriScheme() @AT@ 2094 @LENGTH@ 19
------DEL MethodInvocation@@MethodName:isIgnoreUriScheme:[] @AT@ 2093 @LENGTH@ 19


UPD ReturnStatement@@InfixExpression:compare(leftValue,rightValue) < 0 @TO@ InfixExpression:compare(leftValue,rightValue) >= 0 @AT@ 7158 @LENGTH@ 42
---UPD InfixExpression@@compare(leftValue,rightValue) < 0 @TO@ compare(leftValue,rightValue) >= 0 @AT@ 7165 @LENGTH@ 34
------UPD Operator@@< @TO@ >= @AT@ 7195 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:recursiveDelete(new File("target/test-rename-inbox")) @TO@ MethodInvocation:recursiveDelete("target/test-rename-inbox") @AT@ 1030 @LENGTH@ 54
---UPD MethodInvocation@@recursiveDelete(new File("target/test-rename-inbox")) @TO@ recursiveDelete("target/test-rename-inbox") @AT@ 1030 @LENGTH@ 53
------UPD SimpleName@@MethodName:recursiveDelete:[new File("target/test-rename-inbox")] @TO@ MethodName:recursiveDelete:["target/test-rename-inbox"] @AT@ 1030 @LENGTH@ 53
---------DEL ClassInstanceCreation@@File["target/test-rename-inbox"] @AT@ 1046 @LENGTH@ 36
------------DEL New@@new @AT@ 1046 @LENGTH@ 3
------------DEL SimpleType@@File @AT@ 1050 @LENGTH@ 4
------------DEL StringLiteral@@"target/test-rename-inbox" @AT@ 1055 @LENGTH@ 26
---------INS StringLiteral@@"target/test-rename-inbox" @TO@ SimpleName@@MethodName:recursiveDelete:[new File("target/test-rename-inbox")] @AT@ 1046 @LENGTH@ 26


INS IfStatement@@if (destination == null) {  throw new IllegalArgumentException("Endpoint cannot be null!");} @TO@ MethodDeclaration@@public, voidMethodName:SendProcessor, Endpoint destination,  @AT@ 1461 @LENGTH@ 112
---INS InfixExpression@@destination == null @TO@ IfStatement@@if (destination == null) {  throw new IllegalArgumentException("Endpoint cannot be null!");} @AT@ 1465 @LENGTH@ 19
------INS SimpleName@@destination @TO@ InfixExpression@@destination == null @AT@ 1465 @LENGTH@ 11
------INS Operator@@== @TO@ InfixExpression@@destination == null @AT@ 1476 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@destination == null @AT@ 1480 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new IllegalArgumentException("Endpoint cannot be null!");} @TO@ IfStatement@@if (destination == null) {  throw new IllegalArgumentException("Endpoint cannot be null!");} @AT@ 1486 @LENGTH@ 87
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Endpoint cannot be null!") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("Endpoint cannot be null!");} @AT@ 1500 @LENGTH@ 63
---------INS ClassInstanceCreation@@IllegalArgumentException["Endpoint cannot be null!"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Endpoint cannot be null!") @AT@ 1506 @LENGTH@ 56
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Endpoint cannot be null!"] @AT@ 1506 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Endpoint cannot be null!"] @AT@ 1510 @LENGTH@ 24
------------INS StringLiteral@@"Endpoint cannot be null!" @TO@ ClassInstanceCreation@@IllegalArgumentException["Endpoint cannot be null!"] @AT@ 1535 @LENGTH@ 26


INS MethodDeclaration@@public, voidMethodName:UsernameNotFoundException, String msg, Object extraInformation,  @TO@ TypeDeclaration@@[public]UsernameNotFoundException, BadCredentialsException @AT@ 1573 @LENGTH@ 115
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:UsernameNotFoundException, String msg, Object extraInformation,  @AT@ 1573 @LENGTH@ 6
---INS SimpleName@@MethodName:UsernameNotFoundException @TO@ MethodDeclaration@@public, voidMethodName:UsernameNotFoundException, String msg, Object extraInformation,  @AT@ 1580 @LENGTH@ 25
---INS SingleVariableDeclaration@@String msg @TO@ MethodDeclaration@@public, voidMethodName:UsernameNotFoundException, String msg, Object extraInformation,  @AT@ 1606 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String msg @AT@ 1606 @LENGTH@ 6
------INS SimpleName@@msg @TO@ SingleVariableDeclaration@@String msg @AT@ 1613 @LENGTH@ 3
---INS SingleVariableDeclaration@@Object extraInformation @TO@ MethodDeclaration@@public, voidMethodName:UsernameNotFoundException, String msg, Object extraInformation,  @AT@ 1618 @LENGTH@ 23
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object extraInformation @AT@ 1618 @LENGTH@ 6
------INS SimpleName@@extraInformation @TO@ SingleVariableDeclaration@@Object extraInformation @AT@ 1625 @LENGTH@ 16
---INS SuperConstructorInvocation@@super(msg,extraInformation);
 @TO@ MethodDeclaration@@public, voidMethodName:UsernameNotFoundException, String msg, Object extraInformation,  @AT@ 1653 @LENGTH@ 29
------INS SimpleName@@msg @TO@ SuperConstructorInvocation@@super(msg,extraInformation);
 @AT@ 1659 @LENGTH@ 3
------INS SimpleName@@extraInformation @TO@ SuperConstructorInvocation@@super(msg,extraInformation);
 @AT@ 1664 @LENGTH@ 16


INS MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]FileRouteTest, ContextTestSupport @AT@ 1598 @LENGTH@ 124
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1598 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1608 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1613 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1628 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:recursiveDelete("target/test-default-inbox") @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1648 @LENGTH@ 45
------INS MethodInvocation@@recursiveDelete("target/test-default-inbox") @TO@ ExpressionStatement@@MethodInvocation:recursiveDelete("target/test-default-inbox") @AT@ 1648 @LENGTH@ 44
---------INS SimpleName@@MethodName:recursiveDelete:["target/test-default-inbox"] @TO@ MethodInvocation@@recursiveDelete("target/test-default-inbox") @AT@ 1648 @LENGTH@ 44
------------INS StringLiteral@@"target/test-default-inbox" @TO@ SimpleName@@MethodName:recursiveDelete:["target/test-default-inbox"] @AT@ 1664 @LENGTH@ 27
---INS ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1702 @LENGTH@ 14
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1702 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 1708 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:EqualsBuilder.reflectionEquals(this,other) @TO@ InfixExpression:EqualsBuilder.reflectionEquals(this,other) || EqualsBuilder.reflectionEquals(other,this) @AT@ 2353 @LENGTH@ 51
---INS InfixExpression@@EqualsBuilder.reflectionEquals(this,other) || EqualsBuilder.reflectionEquals(other,this) @TO@ ReturnStatement@@MethodInvocation:EqualsBuilder.reflectionEquals(this,other) @AT@ 2360 @LENGTH@ 90
------MOV MethodInvocation@@EqualsBuilder.reflectionEquals(this,other) @TO@ InfixExpression@@EqualsBuilder.reflectionEquals(this,other) || EqualsBuilder.reflectionEquals(other,this) @AT@ 2360 @LENGTH@ 43
------INS Operator@@|| @TO@ InfixExpression@@EqualsBuilder.reflectionEquals(this,other) || EqualsBuilder.reflectionEquals(other,this) @AT@ 2403 @LENGTH@ 2
------INS MethodInvocation@@EqualsBuilder.reflectionEquals(other,this) @TO@ InfixExpression@@EqualsBuilder.reflectionEquals(this,other) || EqualsBuilder.reflectionEquals(other,this) @AT@ 2407 @LENGTH@ 43
---------INS SimpleName@@Name:EqualsBuilder @TO@ MethodInvocation@@EqualsBuilder.reflectionEquals(other,this) @AT@ 2407 @LENGTH@ 13
---------INS SimpleName@@MethodName:reflectionEquals:[other, this] @TO@ MethodInvocation@@EqualsBuilder.reflectionEquals(other,this) @AT@ 2421 @LENGTH@ 29
------------INS SimpleName@@other @TO@ SimpleName@@MethodName:reflectionEquals:[other, this] @AT@ 2438 @LENGTH@ 5
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:reflectionEquals:[other, this] @AT@ 2445 @LENGTH@ 4


UPD FieldDeclaration@@protected, String, [uri="file:target/test-default-inbox?consumer.generateEmptyExchangeWhenIdle=true"] @TO@ protected, String, [uri="file:target/test-inbox2?consumer.generateEmptyExchangeWhenIdle=true"] @AT@ 1196 @LENGTH@ 100
---UPD VariableDeclarationFragment@@uri="file:target/test-default-inbox?consumer.generateEmptyExchangeWhenIdle=true" @TO@ uri="file:target/test-inbox2?consumer.generateEmptyExchangeWhenIdle=true" @AT@ 1213 @LENGTH@ 82
------UPD StringLiteral@@"file:target/test-default-inbox?consumer.generateEmptyExchangeWhenIdle=true" @TO@ "file:target/test-inbox2?consumer.generateEmptyExchangeWhenIdle=true" @AT@ 1219 @LENGTH@ 76


UPD FieldDeclaration@@private, long, [delay=-1] @TO@ private, long, [delay=0] @AT@ 1591 @LENGTH@ 24
---UPD VariableDeclarationFragment@@delay=-1 @TO@ delay=0 @AT@ 1604 @LENGTH@ 10
------DEL PrefixExpression@@-1 @AT@ 1612 @LENGTH@ 2
---------DEL Operator@@- @AT@ 1612 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 1613 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@delay=-1 @AT@ 1614 @LENGTH@ 1


INS IfStatement@@if (durableSubscriptionName != null && clientId != null) {  container.setSubscriptionDurable(true);} @TO@ MethodDeclaration@@protected, void, MethodName:configureMessageListenerContainer, AbstractMessageListenerContainer container,  @AT@ 6803 @LENGTH@ 120
---INS InfixExpression@@durableSubscriptionName != null && clientId != null @TO@ IfStatement@@if (durableSubscriptionName != null && clientId != null) {  container.setSubscriptionDurable(true);} @AT@ 6807 @LENGTH@ 51
------INS InfixExpression@@durableSubscriptionName != null @TO@ InfixExpression@@durableSubscriptionName != null && clientId != null @AT@ 6807 @LENGTH@ 31
---------INS SimpleName@@durableSubscriptionName @TO@ InfixExpression@@durableSubscriptionName != null @AT@ 6807 @LENGTH@ 23
---------INS Operator@@!= @TO@ InfixExpression@@durableSubscriptionName != null @AT@ 6830 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@durableSubscriptionName != null @AT@ 6834 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@durableSubscriptionName != null && clientId != null @AT@ 6838 @LENGTH@ 2
------INS InfixExpression@@clientId != null @TO@ InfixExpression@@durableSubscriptionName != null && clientId != null @AT@ 6842 @LENGTH@ 16
---------INS SimpleName@@clientId @TO@ InfixExpression@@clientId != null @AT@ 6842 @LENGTH@ 8
---------INS Operator@@!= @TO@ InfixExpression@@clientId != null @AT@ 6850 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@clientId != null @AT@ 6854 @LENGTH@ 4
---INS Block@@ThenBody:{  container.setSubscriptionDurable(true);} @TO@ IfStatement@@if (durableSubscriptionName != null && clientId != null) {  container.setSubscriptionDurable(true);} @AT@ 6860 @LENGTH@ 63
------INS ExpressionStatement@@MethodInvocation:container.setSubscriptionDurable(true) @TO@ Block@@ThenBody:{  container.setSubscriptionDurable(true);} @AT@ 6874 @LENGTH@ 39
---------INS MethodInvocation@@container.setSubscriptionDurable(true) @TO@ ExpressionStatement@@MethodInvocation:container.setSubscriptionDurable(true) @AT@ 6874 @LENGTH@ 38
------------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.setSubscriptionDurable(true) @AT@ 6874 @LENGTH@ 9
------------INS SimpleName@@MethodName:setSubscriptionDurable:[true] @TO@ MethodInvocation@@container.setSubscriptionDurable(true) @AT@ 6884 @LENGTH@ 28
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setSubscriptionDurable:[true] @AT@ 6907 @LENGTH@ 4


UPD IfStatement@@if (keys != null & keys.size() > 0) {  keysIterator=keys.listIterator();  initialized=true;} @TO@ if (keys != null && keys.size() > 0) {  keysIterator=keys.listIterator();  initialized=true;} @AT@ 5629 @LENGTH@ 104
---UPD InfixExpression@@keys != null & keys.size() > 0 @TO@ keys != null && keys.size() > 0 @AT@ 5632 @LENGTH@ 30
------UPD Operator@@& @TO@ && @AT@ 5644 @LENGTH@ 1


UPD TypeDeclaration@@[public]SpringInjector, ReflectionInjector @TO@ [public]SpringInjector, [Injector] @AT@ 1320 @LENGTH@ 1080
---UPD SimpleType@@ReflectionInjector @TO@ Injector @AT@ 1356 @LENGTH@ 18


UPD MethodDeclaration@@public, boolean, MethodName:catches, Exception e,  @TO@ public, boolean, MethodName:catches, Throwable e,  @AT@ 1297 @LENGTH@ 196
---UPD SingleVariableDeclaration@@Exception e @TO@ Throwable e @AT@ 1320 @LENGTH@ 11
------UPD SimpleType@@Exception @TO@ Throwable @AT@ 1320 @LENGTH@ 9


INS VariableDeclarationStatement@@int queryParamIndex=uri.indexOf('?'); @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresLogout, HttpServletRequest request, HttpServletResponse response,  @AT@ 5151 @LENGTH@ 39
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int queryParamIndex=uri.indexOf('?'); @AT@ 5151 @LENGTH@ 3
---INS VariableDeclarationFragment@@queryParamIndex=uri.indexOf('?') @TO@ VariableDeclarationStatement@@int queryParamIndex=uri.indexOf('?'); @AT@ 5155 @LENGTH@ 34
------INS SimpleName@@queryParamIndex @TO@ VariableDeclarationFragment@@queryParamIndex=uri.indexOf('?') @AT@ 5155 @LENGTH@ 15
------INS MethodInvocation@@uri.indexOf('?') @TO@ VariableDeclarationFragment@@queryParamIndex=uri.indexOf('?') @AT@ 5173 @LENGTH@ 16
---------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.indexOf('?') @AT@ 5173 @LENGTH@ 3
---------INS SimpleName@@MethodName:indexOf:['?'] @TO@ MethodInvocation@@uri.indexOf('?') @AT@ 5177 @LENGTH@ 12
------------INS CharacterLiteral@@'?' @TO@ SimpleName@@MethodName:indexOf:['?'] @AT@ 5185 @LENGTH@ 3


UPD IfStatement@@if (key == null) {switch (size) {case 3:    if (key3 == null) {      Object old=value3;      hash3=0;      key3=null;      value3=null;      size=2;      return old;    }  if (key2 == null) {    Object old=value3;    hash2=hash3;    key2=key3;    value2=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }if (key1 == null) {  Object old=value3;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;}return null;case 2:if (key2 == null) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (key1 == null) {Object old=value2;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (key1 == null) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}}} else {if (size > 0) {int hashCode=key.hashCode();switch (size) {case 3:if (hash3 == hashCode && key.equals(key3)) {Object old=value3;hash3=0;key3=null;value3=null;size=2;return old;}if (hash2 == hashCode && key.equals(key2)) {Object old=value3;hash2=hash3;key2=key3;value2=value3;hash3=0;key3=null;value3=null;size=2;return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value3;hash1=hash3;key1=key3;value1=value3;hash3=0;key3=null;value3=null;size=2;return old;}return null;case 2:if (hash2 == hashCode && key.equals(key2)) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value2;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}}}} @TO@ if (key == null) {switch (size) {case 3:    if (key3 == null) {      Object old=value3;      hash3=0;      key3=null;      value3=null;      size=2;      return old;    }  if (key2 == null) {    Object old=value2;    hash2=hash3;    key2=key3;    value2=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }if (key1 == null) {  Object old=value1;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;}return null;case 2:if (key2 == null) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (key1 == null) {Object old=value1;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (key1 == null) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}}} else {if (size > 0) {int hashCode=key.hashCode();switch (size) {case 3:if (hash3 == hashCode && key.equals(key3)) {Object old=value3;hash3=0;key3=null;value3=null;size=2;return old;}if (hash2 == hashCode && key.equals(key2)) {Object old=value2;hash2=hash3;key2=key3;value2=value3;hash3=0;key3=null;value3=null;size=2;return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=hash3;key1=key3;value1=value3;hash3=0;key3=null;value3=null;size=2;return old;}return null;case 2:if (hash2 == hashCode && key.equals(key2)) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}}}} @AT@ 13628 @LENGTH@ 5092
---UPD Block@@ThenBody:{switch (size) {case 3:    if (key3 == null) {      Object old=value3;      hash3=0;      key3=null;      value3=null;      size=2;      return old;    }  if (key2 == null) {    Object old=value3;    hash2=hash3;    key2=key3;    value2=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }if (key1 == null) {  Object old=value3;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;}return null;case 2:if (key2 == null) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (key1 == null) {Object old=value2;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (key1 == null) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}}} @TO@ ThenBody:{switch (size) {case 3:    if (key3 == null) {      Object old=value3;      hash3=0;      key3=null;      value3=null;      size=2;      return old;    }  if (key2 == null) {    Object old=value2;    hash2=hash3;    key2=key3;    value2=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }if (key1 == null) {  Object old=value1;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;}return null;case 2:if (key2 == null) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (key1 == null) {Object old=value1;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (key1 == null) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}}} @AT@ 13645 @LENGTH@ 2287
------UPD SwitchStatement@@switch (size) {case 3:  if (key3 == null) {    Object old=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }if (key2 == null) {  Object old=value3;  hash2=hash3;  key2=key3;  value2=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;}if (key1 == null) {Object old=value3;hash1=hash3;key1=key3;value1=value3;hash3=0;key3=null;value3=null;size=2;return old;}return null;case 2:if (key2 == null) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (key1 == null) {Object old=value2;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (key1 == null) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}} @TO@ switch (size) {case 3:  if (key3 == null) {    Object old=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }if (key2 == null) {  Object old=value2;  hash2=hash3;  key2=key3;  value2=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;}if (key1 == null) {Object old=value1;hash1=hash3;key1=key3;value1=value3;hash3=0;key3=null;value3=null;size=2;return old;}return null;case 2:if (key2 == null) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (key1 == null) {Object old=value1;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (key1 == null) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}} @AT@ 13659 @LENGTH@ 2263
---------UPD IfStatement@@if (key2 == null) {  Object old=value3;  hash2=hash3;  key2=key3;  value2=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @TO@ if (key2 == null) {  Object old=value2;  hash2=hash3;  key2=key3;  value2=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @AT@ 14024 @LENGTH@ 384
------------UPD Block@@ThenBody:{  Object old=value3;  hash2=hash3;  key2=key3;  value2=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @TO@ ThenBody:{  Object old=value2;  hash2=hash3;  key2=key3;  value2=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @AT@ 14042 @LENGTH@ 366
---------------UPD VariableDeclarationStatement@@Object old=value3; @TO@ Object old=value2; @AT@ 14068 @LENGTH@ 20
------------------UPD VariableDeclarationFragment@@old=value3 @TO@ old=value2 @AT@ 14075 @LENGTH@ 12
---------------------UPD SimpleName@@value3 @TO@ value2 @AT@ 14081 @LENGTH@ 6
---------UPD IfStatement@@if (key1 == null) {  Object old=value3;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @TO@ if (key1 == null) {  Object old=value1;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @AT@ 14429 @LENGTH@ 384
------------UPD Block@@ThenBody:{  Object old=value3;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @TO@ ThenBody:{  Object old=value1;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @AT@ 14447 @LENGTH@ 366
---------------UPD VariableDeclarationStatement@@Object old=value3; @TO@ Object old=value1; @AT@ 14473 @LENGTH@ 20
------------------UPD VariableDeclarationFragment@@old=value3 @TO@ old=value1 @AT@ 14480 @LENGTH@ 12
---------------------UPD SimpleName@@value3 @TO@ value1 @AT@ 14486 @LENGTH@ 6
---------UPD IfStatement@@if (key1 == null) {  Object old=value2;  hash1=hash2;  key1=key2;  value1=value2;  hash2=0;  key2=null;  value2=null;  size=1;  return old;} @TO@ if (key1 == null) {  Object old=value1;  hash1=hash2;  key1=key2;  value1=value2;  hash2=0;  key2=null;  value2=null;  size=1;  return old;} @AT@ 15179 @LENGTH@ 384
------------UPD Block@@ThenBody:{  Object old=value2;  hash1=hash2;  key1=key2;  value1=value2;  hash2=0;  key2=null;  value2=null;  size=1;  return old;} @TO@ ThenBody:{  Object old=value1;  hash1=hash2;  key1=key2;  value1=value2;  hash2=0;  key2=null;  value2=null;  size=1;  return old;} @AT@ 15197 @LENGTH@ 366
---------------UPD VariableDeclarationStatement@@Object old=value2; @TO@ Object old=value1; @AT@ 15223 @LENGTH@ 20
------------------UPD VariableDeclarationFragment@@old=value2 @TO@ old=value1 @AT@ 15230 @LENGTH@ 12
---------------------UPD SimpleName@@value2 @TO@ value1 @AT@ 15236 @LENGTH@ 6
---UPD Block@@ElseBody:{  if (size > 0) {    int hashCode=key.hashCode();switch (size) {case 3:      if (hash3 == hashCode && key.equals(key3)) {        Object old=value3;        hash3=0;        key3=null;        value3=null;        size=2;        return old;      }    if (hash2 == hashCode && key.equals(key2)) {      Object old=value3;      hash2=hash3;      key2=key3;      value2=value3;      hash3=0;      key3=null;      value3=null;      size=2;      return old;    }  if (hash1 == hashCode && key.equals(key1)) {    Object old=value3;    hash1=hash3;    key1=key3;    value1=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }return null;case 2:if (hash2 == hashCode && key.equals(key2)) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value2;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}}}} @TO@ ElseBody:{  if (size > 0) {    int hashCode=key.hashCode();switch (size) {case 3:      if (hash3 == hashCode && key.equals(key3)) {        Object old=value3;        hash3=0;        key3=null;        value3=null;        size=2;        return old;      }    if (hash2 == hashCode && key.equals(key2)) {      Object old=value2;      hash2=hash3;      key2=key3;      value2=value3;      hash3=0;      key3=null;      value3=null;      size=2;      return old;    }  if (hash1 == hashCode && key.equals(key1)) {    Object old=value1;    hash1=hash3;    key1=key3;    value1=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }return null;case 2:if (hash2 == hashCode && key.equals(key2)) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}}}} @AT@ 15938 @LENGTH@ 2782
------UPD IfStatement@@if (size > 0) {  int hashCode=key.hashCode();switch (size) {case 3:    if (hash3 == hashCode && key.equals(key3)) {      Object old=value3;      hash3=0;      key3=null;      value3=null;      size=2;      return old;    }  if (hash2 == hashCode && key.equals(key2)) {    Object old=value3;    hash2=hash3;    key2=key3;    value2=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }if (hash1 == hashCode && key.equals(key1)) {  Object old=value3;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;}return null;case 2:if (hash2 == hashCode && key.equals(key2)) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value2;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}}} @TO@ if (size > 0) {  int hashCode=key.hashCode();switch (size) {case 3:    if (hash3 == hashCode && key.equals(key3)) {      Object old=value3;      hash3=0;      key3=null;      value3=null;      size=2;      return old;    }  if (hash2 == hashCode && key.equals(key2)) {    Object old=value2;    hash2=hash3;    key2=key3;    value2=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }if (hash1 == hashCode && key.equals(key1)) {  Object old=value1;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;}return null;case 2:if (hash2 == hashCode && key.equals(key2)) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}}} @AT@ 15952 @LENGTH@ 2758
---------UPD Block@@ThenBody:{  int hashCode=key.hashCode();switch (size) {case 3:    if (hash3 == hashCode && key.equals(key3)) {      Object old=value3;      hash3=0;      key3=null;      value3=null;      size=2;      return old;    }  if (hash2 == hashCode && key.equals(key2)) {    Object old=value3;    hash2=hash3;    key2=key3;    value2=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }if (hash1 == hashCode && key.equals(key1)) {  Object old=value3;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;}return null;case 2:if (hash2 == hashCode && key.equals(key2)) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value2;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}}} @TO@ ThenBody:{  int hashCode=key.hashCode();switch (size) {case 3:    if (hash3 == hashCode && key.equals(key3)) {      Object old=value3;      hash3=0;      key3=null;      value3=null;      size=2;      return old;    }  if (hash2 == hashCode && key.equals(key2)) {    Object old=value2;    hash2=hash3;    key2=key3;    value2=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }if (hash1 == hashCode && key.equals(key1)) {  Object old=value1;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;}return null;case 2:if (hash2 == hashCode && key.equals(key2)) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}}} @AT@ 15966 @LENGTH@ 2744
------------UPD SwitchStatement@@switch (size) {case 3:  if (hash3 == hashCode && key.equals(key3)) {    Object old=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }if (hash2 == hashCode && key.equals(key2)) {  Object old=value3;  hash2=hash3;  key2=key3;  value2=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value3;hash1=hash3;key1=key3;value1=value3;hash3=0;key3=null;value3=null;size=2;return old;}return null;case 2:if (hash2 == hashCode && key.equals(key2)) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value2;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}} @TO@ switch (size) {case 3:  if (hash3 == hashCode && key.equals(key3)) {    Object old=value3;    hash3=0;    key3=null;    value3=null;    size=2;    return old;  }if (hash2 == hashCode && key.equals(key2)) {  Object old=value2;  hash2=hash3;  key2=key3;  value2=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=hash3;key1=key3;value1=value3;hash3=0;key3=null;value3=null;size=2;return old;}return null;case 2:if (hash2 == hashCode && key.equals(key2)) {Object old=value2;hash2=0;key2=null;value2=null;size=1;return old;}if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=hash2;key1=key2;value1=value2;hash2=0;key2=null;value2=null;size=1;return old;}return null;case 1:if (hash1 == hashCode && key.equals(key1)) {Object old=value1;hash1=0;key1=null;value1=null;size=0;return old;}} @AT@ 16031 @LENGTH@ 2665
---------------UPD IfStatement@@if (hash2 == hashCode && key.equals(key2)) {  Object old=value3;  hash2=hash3;  key2=key3;  value2=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @TO@ if (hash2 == hashCode && key.equals(key2)) {  Object old=value2;  hash2=hash3;  key2=key3;  value2=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @AT@ 16461 @LENGTH@ 449
------------------UPD Block@@ThenBody:{  Object old=value3;  hash2=hash3;  key2=key3;  value2=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @TO@ ThenBody:{  Object old=value2;  hash2=hash3;  key2=key3;  value2=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @AT@ 16504 @LENGTH@ 406
---------------------UPD VariableDeclarationStatement@@Object old=value3; @TO@ Object old=value2; @AT@ 16534 @LENGTH@ 20
------------------------UPD VariableDeclarationFragment@@old=value3 @TO@ old=value2 @AT@ 16541 @LENGTH@ 12
---------------------------UPD SimpleName@@value3 @TO@ value2 @AT@ 16547 @LENGTH@ 6
---------------UPD IfStatement@@if (hash1 == hashCode && key.equals(key1)) {  Object old=value3;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @TO@ if (hash1 == hashCode && key.equals(key1)) {  Object old=value1;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @AT@ 16935 @LENGTH@ 449
------------------UPD Block@@ThenBody:{  Object old=value3;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @TO@ ThenBody:{  Object old=value1;  hash1=hash3;  key1=key3;  value1=value3;  hash3=0;  key3=null;  value3=null;  size=2;  return old;} @AT@ 16978 @LENGTH@ 406
---------------------UPD VariableDeclarationStatement@@Object old=value3; @TO@ Object old=value1; @AT@ 17008 @LENGTH@ 20
------------------------UPD VariableDeclarationFragment@@old=value3 @TO@ old=value1 @AT@ 17015 @LENGTH@ 12
---------------------------UPD SimpleName@@value3 @TO@ value1 @AT@ 17021 @LENGTH@ 6
---------------UPD IfStatement@@if (hash1 == hashCode && key.equals(key1)) {  Object old=value2;  hash1=hash2;  key1=key2;  value1=value2;  hash2=0;  key2=null;  value2=null;  size=1;  return old;} @TO@ if (hash1 == hashCode && key.equals(key1)) {  Object old=value1;  hash1=hash2;  key1=key2;  value1=value2;  hash2=0;  key2=null;  value2=null;  size=1;  return old;} @AT@ 17819 @LENGTH@ 449
------------------UPD Block@@ThenBody:{  Object old=value2;  hash1=hash2;  key1=key2;  value1=value2;  hash2=0;  key2=null;  value2=null;  size=1;  return old;} @TO@ ThenBody:{  Object old=value1;  hash1=hash2;  key1=key2;  value1=value2;  hash2=0;  key2=null;  value2=null;  size=1;  return old;} @AT@ 17862 @LENGTH@ 406
---------------------UPD VariableDeclarationStatement@@Object old=value2; @TO@ Object old=value1; @AT@ 17892 @LENGTH@ 20
------------------------UPD VariableDeclarationFragment@@old=value2 @TO@ old=value1 @AT@ 17899 @LENGTH@ 12
---------------------------UPD SimpleName@@value2 @TO@ value1 @AT@ 17905 @LENGTH@ 6


UPD ReturnStatement@@ClassInstanceCreation:new ExitStatus(this.continuable && continuable) @TO@ ClassInstanceCreation:new ExitStatus(this.continuable && continuable,this.exitCode,this.exitDescription) @AT@ 3170 @LENGTH@ 55
---UPD ClassInstanceCreation@@ExitStatus[this.continuable && continuable] @TO@ ExitStatus[this.continuable && continuable, this.exitCode, this.exitDescription] @AT@ 3177 @LENGTH@ 47
------INS FieldAccess@@this.exitCode @TO@ ClassInstanceCreation@@ExitStatus[this.continuable && continuable] @AT@ 3225 @LENGTH@ 13
---------INS ThisExpression@@this @TO@ FieldAccess@@this.exitCode @AT@ 3225 @LENGTH@ 4
---------INS SimpleName@@exitCode @TO@ FieldAccess@@this.exitCode @AT@ 3230 @LENGTH@ 8
------INS FieldAccess@@this.exitDescription @TO@ ClassInstanceCreation@@ExitStatus[this.continuable && continuable] @AT@ 3240 @LENGTH@ 20
---------INS ThisExpression@@this @TO@ FieldAccess@@this.exitDescription @AT@ 3240 @LENGTH@ 4
---------INS SimpleName@@exitDescription @TO@ FieldAccess@@this.exitDescription @AT@ 3245 @LENGTH@ 15


UPD TypeDeclaration@@[public]TimerComponent, DefaultComponent<BeanExchange> @TO@ [public]TimerComponent, DefaultComponent<Exchange> @AT@ 1315 @LENGTH@ 1076
---UPD ParameterizedType@@DefaultComponent<BeanExchange> @TO@ DefaultComponent<Exchange> @AT@ 1351 @LENGTH@ 30
------UPD SimpleType@@BeanExchange @TO@ Exchange @AT@ 1368 @LENGTH@ 12


INS MethodDeclaration@@protected, void, MethodName:assertOutMessageBodyEquals, Exchange exchange, Object expected, InvalidPayloadException,  @TO@ TypeDeclaration@@[public, abstract]TestSupport, TestCase @AT@ 4933 @LENGTH@ 667
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:assertOutMessageBodyEquals, Exchange exchange, Object expected, InvalidPayloadException,  @AT@ 4933 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:assertOutMessageBodyEquals, Exchange exchange, Object expected, InvalidPayloadException,  @AT@ 4943 @LENGTH@ 4
---INS SimpleName@@MethodName:assertOutMessageBodyEquals @TO@ MethodDeclaration@@protected, void, MethodName:assertOutMessageBodyEquals, Exchange exchange, Object expected, InvalidPayloadException,  @AT@ 4948 @LENGTH@ 26
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@protected, void, MethodName:assertOutMessageBodyEquals, Exchange exchange, Object expected, InvalidPayloadException,  @AT@ 4975 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 4975 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 4984 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object expected @TO@ MethodDeclaration@@protected, void, MethodName:assertOutMessageBodyEquals, Exchange exchange, Object expected, InvalidPayloadException,  @AT@ 4994 @LENGTH@ 15
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object expected @AT@ 4994 @LENGTH@ 6
------INS SimpleName@@expected @TO@ SingleVariableDeclaration@@Object expected @AT@ 5001 @LENGTH@ 8
---INS SimpleType@@InvalidPayloadException @TO@ MethodDeclaration@@protected, void, MethodName:assertOutMessageBodyEquals, Exchange exchange, Object expected, InvalidPayloadException,  @AT@ 5018 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertNotNull("Should have a response exchange!",exchange) @TO@ MethodDeclaration@@protected, void, MethodName:assertOutMessageBodyEquals, Exchange exchange, Object expected, InvalidPayloadException,  @AT@ 5052 @LENGTH@ 60
------INS MethodInvocation@@assertNotNull("Should have a response exchange!",exchange) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull("Should have a response exchange!",exchange) @AT@ 5052 @LENGTH@ 59
---------INS SimpleName@@MethodName:assertNotNull:["Should have a response exchange!", exchange] @TO@ MethodInvocation@@assertNotNull("Should have a response exchange!",exchange) @AT@ 5052 @LENGTH@ 59
------------INS StringLiteral@@"Should have a response exchange!" @TO@ SimpleName@@MethodName:assertNotNull:["Should have a response exchange!", exchange] @AT@ 5066 @LENGTH@ 34
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:assertNotNull:["Should have a response exchange!", exchange] @AT@ 5102 @LENGTH@ 8
---INS VariableDeclarationStatement@@Object actual; @TO@ MethodDeclaration@@protected, void, MethodName:assertOutMessageBodyEquals, Exchange exchange, Object expected, InvalidPayloadException,  @AT@ 5122 @LENGTH@ 14
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object actual; @AT@ 5122 @LENGTH@ 6
------INS VariableDeclarationFragment@@actual @TO@ VariableDeclarationStatement@@Object actual; @AT@ 5129 @LENGTH@ 6
---------INS SimpleName@@actual @TO@ VariableDeclarationFragment@@actual @AT@ 5129 @LENGTH@ 6
---INS IfStatement@@if (expected == null) {  actual=ExchangeHelper.getMandatoryOutBody(exchange);  assertEquals("output body of: " + exchange,expected,actual);} else {  actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass());} @TO@ MethodDeclaration@@protected, void, MethodName:assertOutMessageBodyEquals, Exchange exchange, Object expected, InvalidPayloadException,  @AT@ 5145 @LENGTH@ 288
------INS InfixExpression@@expected == null @TO@ IfStatement@@if (expected == null) {  actual=ExchangeHelper.getMandatoryOutBody(exchange);  assertEquals("output body of: " + exchange,expected,actual);} else {  actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass());} @AT@ 5149 @LENGTH@ 16
---------INS SimpleName@@expected @TO@ InfixExpression@@expected == null @AT@ 5149 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@expected == null @AT@ 5157 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@expected == null @AT@ 5161 @LENGTH@ 4
------INS Block@@ThenBody:{  actual=ExchangeHelper.getMandatoryOutBody(exchange);  assertEquals("output body of: " + exchange,expected,actual);} @TO@ IfStatement@@if (expected == null) {  actual=ExchangeHelper.getMandatoryOutBody(exchange);  assertEquals("output body of: " + exchange,expected,actual);} else {  actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass());} @AT@ 5167 @LENGTH@ 153
---------INS ExpressionStatement@@Assignment:actual=ExchangeHelper.getMandatoryOutBody(exchange) @TO@ Block@@ThenBody:{  actual=ExchangeHelper.getMandatoryOutBody(exchange);  assertEquals("output body of: " + exchange,expected,actual);} @AT@ 5181 @LENGTH@ 54
------------INS Assignment@@actual=ExchangeHelper.getMandatoryOutBody(exchange) @TO@ ExpressionStatement@@Assignment:actual=ExchangeHelper.getMandatoryOutBody(exchange) @AT@ 5181 @LENGTH@ 53
---------------INS SimpleName@@actual @TO@ Assignment@@actual=ExchangeHelper.getMandatoryOutBody(exchange) @AT@ 5181 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@actual=ExchangeHelper.getMandatoryOutBody(exchange) @AT@ 5187 @LENGTH@ 1
---------------INS MethodInvocation@@ExchangeHelper.getMandatoryOutBody(exchange) @TO@ Assignment@@actual=ExchangeHelper.getMandatoryOutBody(exchange) @AT@ 5190 @LENGTH@ 44
------------------INS SimpleName@@Name:ExchangeHelper @TO@ MethodInvocation@@ExchangeHelper.getMandatoryOutBody(exchange) @AT@ 5190 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getMandatoryOutBody:[exchange] @TO@ MethodInvocation@@ExchangeHelper.getMandatoryOutBody(exchange) @AT@ 5205 @LENGTH@ 29
---------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getMandatoryOutBody:[exchange] @AT@ 5225 @LENGTH@ 8
---------INS ExpressionStatement@@MethodInvocation:assertEquals("output body of: " + exchange,expected,actual) @TO@ Block@@ThenBody:{  actual=ExchangeHelper.getMandatoryOutBody(exchange);  assertEquals("output body of: " + exchange,expected,actual);} @AT@ 5248 @LENGTH@ 62
------------INS MethodInvocation@@assertEquals("output body of: " + exchange,expected,actual) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("output body of: " + exchange,expected,actual) @AT@ 5248 @LENGTH@ 61
---------------INS SimpleName@@MethodName:assertEquals:["output body of: " + exchange, expected, actual] @TO@ MethodInvocation@@assertEquals("output body of: " + exchange,expected,actual) @AT@ 5248 @LENGTH@ 61
------------------INS InfixExpression@@"output body of: " + exchange @TO@ SimpleName@@MethodName:assertEquals:["output body of: " + exchange, expected, actual] @AT@ 5261 @LENGTH@ 29
---------------------INS StringLiteral@@"output body of: " @TO@ InfixExpression@@"output body of: " + exchange @AT@ 5261 @LENGTH@ 18
---------------------INS Operator@@+ @TO@ InfixExpression@@"output body of: " + exchange @AT@ 5279 @LENGTH@ 1
---------------------INS SimpleName@@exchange @TO@ InfixExpression@@"output body of: " + exchange @AT@ 5282 @LENGTH@ 8
------------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:assertEquals:["output body of: " + exchange, expected, actual] @AT@ 5292 @LENGTH@ 8
------------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:assertEquals:["output body of: " + exchange, expected, actual] @AT@ 5302 @LENGTH@ 6
------INS Block@@ElseBody:{  actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass());} @TO@ IfStatement@@if (expected == null) {  actual=ExchangeHelper.getMandatoryOutBody(exchange);  assertEquals("output body of: " + exchange,expected,actual);} else {  actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass());} @AT@ 5334 @LENGTH@ 99
---------INS ExpressionStatement@@Assignment:actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @TO@ Block@@ElseBody:{  actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass());} @AT@ 5348 @LENGTH@ 75
------------INS Assignment@@actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @TO@ ExpressionStatement@@Assignment:actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @AT@ 5348 @LENGTH@ 74
---------------INS SimpleName@@actual @TO@ Assignment@@actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @AT@ 5348 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @AT@ 5354 @LENGTH@ 1
---------------INS MethodInvocation@@ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @TO@ Assignment@@actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @AT@ 5357 @LENGTH@ 65
------------------INS SimpleName@@Name:ExchangeHelper @TO@ MethodInvocation@@ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @AT@ 5357 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getMandatoryOutBody:[exchange, expected.getClass()] @TO@ MethodInvocation@@ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @AT@ 5372 @LENGTH@ 50
---------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getMandatoryOutBody:[exchange, expected.getClass()] @AT@ 5392 @LENGTH@ 8
---------------------INS MethodInvocation@@expected.getClass() @TO@ SimpleName@@MethodName:getMandatoryOutBody:[exchange, expected.getClass()] @AT@ 5402 @LENGTH@ 19
------------------------INS SimpleName@@Name:expected @TO@ MethodInvocation@@expected.getClass() @AT@ 5402 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@expected.getClass() @AT@ 5411 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals("output body of: " + exchange,expected,actual) @TO@ MethodDeclaration@@protected, void, MethodName:assertOutMessageBodyEquals, Exchange exchange, Object expected, InvalidPayloadException,  @AT@ 5442 @LENGTH@ 62
------INS MethodInvocation@@assertEquals("output body of: " + exchange,expected,actual) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("output body of: " + exchange,expected,actual) @AT@ 5442 @LENGTH@ 61
---------INS SimpleName@@MethodName:assertEquals:["output body of: " + exchange, expected, actual] @TO@ MethodInvocation@@assertEquals("output body of: " + exchange,expected,actual) @AT@ 5442 @LENGTH@ 61
------------INS InfixExpression@@"output body of: " + exchange @TO@ SimpleName@@MethodName:assertEquals:["output body of: " + exchange, expected, actual] @AT@ 5455 @LENGTH@ 29
---------------INS StringLiteral@@"output body of: " @TO@ InfixExpression@@"output body of: " + exchange @AT@ 5455 @LENGTH@ 18
---------------INS Operator@@+ @TO@ InfixExpression@@"output body of: " + exchange @AT@ 5473 @LENGTH@ 1
---------------INS SimpleName@@exchange @TO@ InfixExpression@@"output body of: " + exchange @AT@ 5476 @LENGTH@ 8
------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:assertEquals:["output body of: " + exchange, expected, actual] @AT@ 5486 @LENGTH@ 8
------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:assertEquals:["output body of: " + exchange, expected, actual] @AT@ 5496 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:log.debug("Received response: " + exchange + " with out: "+ exchange.getOut()) @TO@ MethodDeclaration@@protected, void, MethodName:assertOutMessageBodyEquals, Exchange exchange, Object expected, InvalidPayloadException,  @AT@ 5514 @LENGTH@ 80
------INS MethodInvocation@@log.debug("Received response: " + exchange + " with out: "+ exchange.getOut()) @TO@ ExpressionStatement@@MethodInvocation:log.debug("Received response: " + exchange + " with out: "+ exchange.getOut()) @AT@ 5514 @LENGTH@ 79
---------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug("Received response: " + exchange + " with out: "+ exchange.getOut()) @AT@ 5514 @LENGTH@ 3
---------INS SimpleName@@MethodName:debug:["Received response: " + exchange + " with out: "+ exchange.getOut()] @TO@ MethodInvocation@@log.debug("Received response: " + exchange + " with out: "+ exchange.getOut()) @AT@ 5518 @LENGTH@ 75
------------INS InfixExpression@@"Received response: " + exchange + " with out: "+ exchange.getOut() @TO@ SimpleName@@MethodName:debug:["Received response: " + exchange + " with out: "+ exchange.getOut()] @AT@ 5524 @LENGTH@ 68
---------------INS StringLiteral@@"Received response: " @TO@ InfixExpression@@"Received response: " + exchange + " with out: "+ exchange.getOut() @AT@ 5524 @LENGTH@ 21
---------------INS Operator@@+ @TO@ InfixExpression@@"Received response: " + exchange + " with out: "+ exchange.getOut() @AT@ 5545 @LENGTH@ 1
---------------INS SimpleName@@exchange @TO@ InfixExpression@@"Received response: " + exchange + " with out: "+ exchange.getOut() @AT@ 5548 @LENGTH@ 8
---------------INS StringLiteral@@" with out: " @TO@ InfixExpression@@"Received response: " + exchange + " with out: "+ exchange.getOut() @AT@ 5559 @LENGTH@ 13
---------------INS MethodInvocation@@exchange.getOut() @TO@ InfixExpression@@"Received response: " + exchange + " with out: "+ exchange.getOut() @AT@ 5575 @LENGTH@ 17
------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut() @AT@ 5575 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut() @AT@ 5584 @LENGTH@ 8


INS MethodDeclaration@@public, LdapRdn, MethodName:getLdapRdn, String key,  @TO@ TypeDeclaration@@[public]DistinguishedName, [Name] @AT@ 6021 @LENGTH@ 388
---INS Modifier@@public @TO@ MethodDeclaration@@public, LdapRdn, MethodName:getLdapRdn, String key,  @AT@ 6021 @LENGTH@ 6
---INS SimpleType@@LdapRdn @TO@ MethodDeclaration@@public, LdapRdn, MethodName:getLdapRdn, String key,  @AT@ 6028 @LENGTH@ 7
---INS SimpleName@@MethodName:getLdapRdn @TO@ MethodDeclaration@@public, LdapRdn, MethodName:getLdapRdn, String key,  @AT@ 6036 @LENGTH@ 10
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@public, LdapRdn, MethodName:getLdapRdn, String key,  @AT@ 6047 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 6047 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 6054 @LENGTH@ 3
---INS ForStatement@@for (Iterator iter=names.iterator(); iter.hasNext(); ) {  LdapRdn rdn=(LdapRdn)iter.next();  if (StringUtils.equals(rdn.getKey(),key)) {    return rdn;  }} @TO@ MethodDeclaration@@public, LdapRdn, MethodName:getLdapRdn, String key,  @AT@ 6070 @LENGTH@ 220
------INS VariableDeclarationExpression@@Iterator iter=names.iterator() @TO@ ForStatement@@for (Iterator iter=names.iterator(); iter.hasNext(); ) {  LdapRdn rdn=(LdapRdn)iter.next();  if (StringUtils.equals(rdn.getKey(),key)) {    return rdn;  }} @AT@ 6075 @LENGTH@ 32
---------INS SimpleType@@Iterator @TO@ VariableDeclarationExpression@@Iterator iter=names.iterator() @AT@ 6075 @LENGTH@ 8
---------INS VariableDeclarationFragment@@iter=names.iterator() @TO@ VariableDeclarationExpression@@Iterator iter=names.iterator() @AT@ 6084 @LENGTH@ 23
------------INS SimpleName@@iter @TO@ VariableDeclarationFragment@@iter=names.iterator() @AT@ 6084 @LENGTH@ 4
------------INS MethodInvocation@@names.iterator() @TO@ VariableDeclarationFragment@@iter=names.iterator() @AT@ 6091 @LENGTH@ 16
---------------INS SimpleName@@Name:names @TO@ MethodInvocation@@names.iterator() @AT@ 6091 @LENGTH@ 5
---------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@names.iterator() @AT@ 6097 @LENGTH@ 10
------INS MethodInvocation@@iter.hasNext() @TO@ ForStatement@@for (Iterator iter=names.iterator(); iter.hasNext(); ) {  LdapRdn rdn=(LdapRdn)iter.next();  if (StringUtils.equals(rdn.getKey(),key)) {    return rdn;  }} @AT@ 6109 @LENGTH@ 14
---------INS SimpleName@@Name:iter @TO@ MethodInvocation@@iter.hasNext() @AT@ 6109 @LENGTH@ 4
---------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@iter.hasNext() @AT@ 6114 @LENGTH@ 9
------INS VariableDeclarationStatement@@LdapRdn rdn=(LdapRdn)iter.next(); @TO@ ForStatement@@for (Iterator iter=names.iterator(); iter.hasNext(); ) {  LdapRdn rdn=(LdapRdn)iter.next();  if (StringUtils.equals(rdn.getKey(),key)) {    return rdn;  }} @AT@ 6141 @LENGTH@ 36
---------INS SimpleType@@LdapRdn @TO@ VariableDeclarationStatement@@LdapRdn rdn=(LdapRdn)iter.next(); @AT@ 6141 @LENGTH@ 7
---------INS VariableDeclarationFragment@@rdn=(LdapRdn)iter.next() @TO@ VariableDeclarationStatement@@LdapRdn rdn=(LdapRdn)iter.next(); @AT@ 6149 @LENGTH@ 27
------------INS SimpleName@@rdn @TO@ VariableDeclarationFragment@@rdn=(LdapRdn)iter.next() @AT@ 6149 @LENGTH@ 3
------------INS CastExpression@@(LdapRdn)iter.next() @TO@ VariableDeclarationFragment@@rdn=(LdapRdn)iter.next() @AT@ 6155 @LENGTH@ 21
---------------INS SimpleType@@LdapRdn @TO@ CastExpression@@(LdapRdn)iter.next() @AT@ 6156 @LENGTH@ 7
---------------INS MethodInvocation@@iter.next() @TO@ CastExpression@@(LdapRdn)iter.next() @AT@ 6165 @LENGTH@ 11
------------------INS SimpleName@@Name:iter @TO@ MethodInvocation@@iter.next() @AT@ 6165 @LENGTH@ 4
------------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iter.next() @AT@ 6170 @LENGTH@ 6
------INS IfStatement@@if (StringUtils.equals(rdn.getKey(),key)) {  return rdn;} @TO@ ForStatement@@for (Iterator iter=names.iterator(); iter.hasNext(); ) {  LdapRdn rdn=(LdapRdn)iter.next();  if (StringUtils.equals(rdn.getKey(),key)) {    return rdn;  }} @AT@ 6191 @LENGTH@ 88
---------INS MethodInvocation@@StringUtils.equals(rdn.getKey(),key) @TO@ IfStatement@@if (StringUtils.equals(rdn.getKey(),key)) {  return rdn;} @AT@ 6195 @LENGTH@ 37
------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.equals(rdn.getKey(),key) @AT@ 6195 @LENGTH@ 11
------------INS SimpleName@@MethodName:equals:[rdn.getKey(), key] @TO@ MethodInvocation@@StringUtils.equals(rdn.getKey(),key) @AT@ 6207 @LENGTH@ 25
---------------INS MethodInvocation@@rdn.getKey() @TO@ SimpleName@@MethodName:equals:[rdn.getKey(), key] @AT@ 6214 @LENGTH@ 12
------------------INS SimpleName@@Name:rdn @TO@ MethodInvocation@@rdn.getKey() @AT@ 6214 @LENGTH@ 3
------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@rdn.getKey() @AT@ 6218 @LENGTH@ 8
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:equals:[rdn.getKey(), key] @AT@ 6228 @LENGTH@ 3
---------INS Block@@ThenBody:{  return rdn;} @TO@ IfStatement@@if (StringUtils.equals(rdn.getKey(),key)) {  return rdn;} @AT@ 6234 @LENGTH@ 45
------------INS ReturnStatement@@SimpleName:rdn @TO@ Block@@ThenBody:{  return rdn;} @AT@ 6253 @LENGTH@ 11
---------------INS SimpleName@@rdn @TO@ ReturnStatement@@SimpleName:rdn @AT@ 6260 @LENGTH@ 3
---INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("No Rdn with the requested key: '" + key + "'") @TO@ MethodDeclaration@@public, LdapRdn, MethodName:getLdapRdn, String key,  @AT@ 6302 @LENGTH@ 100
------INS ClassInstanceCreation@@IllegalArgumentException["No Rdn with the requested key: '" + key + "'"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("No Rdn with the requested key: '" + key + "'") @AT@ 6308 @LENGTH@ 93
---------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["No Rdn with the requested key: '" + key + "'"] @AT@ 6308 @LENGTH@ 3
---------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["No Rdn with the requested key: '" + key + "'"] @AT@ 6312 @LENGTH@ 24
---------INS InfixExpression@@"No Rdn with the requested key: '" + key + "'" @TO@ ClassInstanceCreation@@IllegalArgumentException["No Rdn with the requested key: '" + key + "'"] @AT@ 6337 @LENGTH@ 63
------------INS StringLiteral@@"No Rdn with the requested key: '" @TO@ InfixExpression@@"No Rdn with the requested key: '" + key + "'" @AT@ 6337 @LENGTH@ 34
------------INS Operator@@+ @TO@ InfixExpression@@"No Rdn with the requested key: '" + key + "'" @AT@ 6371 @LENGTH@ 1
------------INS SimpleName@@key @TO@ InfixExpression@@"No Rdn with the requested key: '" + key + "'" @AT@ 6391 @LENGTH@ 3
------------INS StringLiteral@@"'" @TO@ InfixExpression@@"No Rdn with the requested key: '" + key + "'" @AT@ 6397 @LENGTH@ 3


INS VariableDeclarationStatement@@Message out=exchange.getOut(false); @TO@ MethodDeclaration@@protected, ELContext, MethodName:populateContext, ELContext context, Exchange exchange,  @AT@ 2759 @LENGTH@ 37
---INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message out=exchange.getOut(false); @AT@ 2759 @LENGTH@ 7
---INS VariableDeclarationFragment@@out=exchange.getOut(false) @TO@ VariableDeclarationStatement@@Message out=exchange.getOut(false); @AT@ 2767 @LENGTH@ 28
------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=exchange.getOut(false) @AT@ 2767 @LENGTH@ 3
------INS MethodInvocation@@exchange.getOut(false) @TO@ VariableDeclarationFragment@@out=exchange.getOut(false) @AT@ 2773 @LENGTH@ 22
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut(false) @AT@ 2773 @LENGTH@ 8
---------INS SimpleName@@MethodName:getOut:[false] @TO@ MethodInvocation@@exchange.getOut(false) @AT@ 2782 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getOut:[false] @AT@ 2789 @LENGTH@ 5


INS MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, File file,  @TO@ TypeDeclaration@@[public, abstract]ContextTestSupport, TestSupport @AT@ 8665 @LENGTH@ 278
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, File file,  @AT@ 8665 @LENGTH@ 9
---INS Modifier@@static @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, File file,  @AT@ 8675 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, File file,  @AT@ 8682 @LENGTH@ 4
---INS SimpleName@@MethodName:recursiveDelete @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, File file,  @AT@ 8687 @LENGTH@ 15
---INS SingleVariableDeclaration@@File file @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, File file,  @AT@ 8703 @LENGTH@ 9
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File file @AT@ 8703 @LENGTH@ 4
------INS SimpleName@@file @TO@ SingleVariableDeclaration@@File file @AT@ 8708 @LENGTH@ 4
---INS IfStatement@@if (file.isDirectory()) {  File[] files=file.listFiles();  for (int i=0; i < files.length; i++) {    recursiveDelete(files[i]);  }} @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, File file,  @AT@ 8724 @LENGTH@ 190
------INS MethodInvocation@@file.isDirectory() @TO@ IfStatement@@if (file.isDirectory()) {  File[] files=file.listFiles();  for (int i=0; i < files.length; i++) {    recursiveDelete(files[i]);  }} @AT@ 8728 @LENGTH@ 18
---------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.isDirectory() @AT@ 8728 @LENGTH@ 4
---------INS SimpleName@@MethodName:isDirectory:[] @TO@ MethodInvocation@@file.isDirectory() @AT@ 8733 @LENGTH@ 13
------INS Block@@ThenBody:{  File[] files=file.listFiles();  for (int i=0; i < files.length; i++) {    recursiveDelete(files[i]);  }} @TO@ IfStatement@@if (file.isDirectory()) {  File[] files=file.listFiles();  for (int i=0; i < files.length; i++) {    recursiveDelete(files[i]);  }} @AT@ 8748 @LENGTH@ 166
---------INS VariableDeclarationStatement@@File[] files=file.listFiles(); @TO@ Block@@ThenBody:{  File[] files=file.listFiles();  for (int i=0; i < files.length; i++) {    recursiveDelete(files[i]);  }} @AT@ 8762 @LENGTH@ 32
------------INS ArrayType@@File[] @TO@ VariableDeclarationStatement@@File[] files=file.listFiles(); @AT@ 8762 @LENGTH@ 6
---------------INS SimpleType@@File @TO@ ArrayType@@File[] @AT@ 8762 @LENGTH@ 4
------------INS VariableDeclarationFragment@@files=file.listFiles() @TO@ VariableDeclarationStatement@@File[] files=file.listFiles(); @AT@ 8769 @LENGTH@ 24
---------------INS SimpleName@@files @TO@ VariableDeclarationFragment@@files=file.listFiles() @AT@ 8769 @LENGTH@ 5
---------------INS MethodInvocation@@file.listFiles() @TO@ VariableDeclarationFragment@@files=file.listFiles() @AT@ 8777 @LENGTH@ 16
------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.listFiles() @AT@ 8777 @LENGTH@ 4
------------------INS SimpleName@@MethodName:listFiles:[] @TO@ MethodInvocation@@file.listFiles() @AT@ 8782 @LENGTH@ 11
---------INS ForStatement@@for (int i=0; i < files.length; i++) {  recursiveDelete(files[i]);} @TO@ Block@@ThenBody:{  File[] files=file.listFiles();  for (int i=0; i < files.length; i++) {    recursiveDelete(files[i]);  }} @AT@ 8807 @LENGTH@ 97
------------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < files.length; i++) {  recursiveDelete(files[i]);} @AT@ 8812 @LENGTH@ 9
---------------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 8812 @LENGTH@ 3
---------------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 8816 @LENGTH@ 5
------------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 8816 @LENGTH@ 1
------------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 8820 @LENGTH@ 1
------------INS InfixExpression@@i < files.length @TO@ ForStatement@@for (int i=0; i < files.length; i++) {  recursiveDelete(files[i]);} @AT@ 8823 @LENGTH@ 16
---------------INS SimpleName@@i @TO@ InfixExpression@@i < files.length @AT@ 8823 @LENGTH@ 1
---------------INS Operator@@< @TO@ InfixExpression@@i < files.length @AT@ 8824 @LENGTH@ 1
---------------INS QualifiedName@@files.length @TO@ InfixExpression@@i < files.length @AT@ 8827 @LENGTH@ 12
------------------INS SimpleName@@files @TO@ QualifiedName@@files.length @AT@ 8827 @LENGTH@ 5
------------------INS SimpleName@@length @TO@ QualifiedName@@files.length @AT@ 8833 @LENGTH@ 6
------------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < files.length; i++) {  recursiveDelete(files[i]);} @AT@ 8841 @LENGTH@ 3
---------------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 8841 @LENGTH@ 1
---------------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 8843 @LENGTH@ 2
------------INS ExpressionStatement@@MethodInvocation:recursiveDelete(files[i]) @TO@ ForStatement@@for (int i=0; i < files.length; i++) {  recursiveDelete(files[i]);} @AT@ 8864 @LENGTH@ 26
---------------INS MethodInvocation@@recursiveDelete(files[i]) @TO@ ExpressionStatement@@MethodInvocation:recursiveDelete(files[i]) @AT@ 8864 @LENGTH@ 25
------------------INS SimpleName@@MethodName:recursiveDelete:[files[i]] @TO@ MethodInvocation@@recursiveDelete(files[i]) @AT@ 8864 @LENGTH@ 25
---------------------INS ArrayAccess@@files[i] @TO@ SimpleName@@MethodName:recursiveDelete:[files[i]] @AT@ 8880 @LENGTH@ 8
------------------------INS SimpleName@@files @TO@ ArrayAccess@@files[i] @AT@ 8880 @LENGTH@ 5
------------------------INS SimpleName@@i @TO@ ArrayAccess@@files[i] @AT@ 8886 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:file.delete() @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, File file,  @AT@ 8923 @LENGTH@ 14
------INS MethodInvocation@@file.delete() @TO@ ExpressionStatement@@MethodInvocation:file.delete() @AT@ 8923 @LENGTH@ 13
---------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.delete() @AT@ 8923 @LENGTH@ 4
---------INS SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@file.delete() @AT@ 8928 @LENGTH@ 8


UPD TypeDeclaration@@[private]FooRestartDataConverter, [CompositeKeyRestartDataConverter] @TO@ [private, static]FooRestartDataConverter, [CompositeKeyRestartDataConverter] @AT@ 1925 @LENGTH@ 830
---INS Modifier@@static @TO@ TypeDeclaration@@[private]FooRestartDataConverter, [CompositeKeyRestartDataConverter] @AT@ 1852 @LENGTH@ 6


UPD IfStatement@@if (!(principal instanceof LdapUserDetails)) {  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} else {  LdapUserDetails details=(LdapUserDetails)principal;  return details.getDn();} @TO@ if (principal instanceof LdapUserDetails) {  LdapUserDetails details=(LdapUserDetails)principal;  return details.getDn();} else if (authentication instanceof AnonymousAuthenticationToken) {  if (log.isDebugEnabled()) {    log.debug("Anonymous Authentication, returning empty String as Principal");  }  return "";} else {  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} @AT@ 1893 @LENGTH@ 400
---DEL PrefixExpression@@!(principal instanceof LdapUserDetails) @AT@ 1897 @LENGTH@ 39
------DEL Operator@@! @AT@ 1897 @LENGTH@ 1
------DEL ParenthesizedExpression@@(principal instanceof LdapUserDetails) @AT@ 1898 @LENGTH@ 38
---------DEL InstanceofExpression@@principal instanceof LdapUserDetails @AT@ 1899 @LENGTH@ 36
---UPD Block@@ThenBody:{  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} @TO@ ElseBody:{  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} @AT@ 1938 @LENGTH@ 220
---INS InstanceofExpression@@principal instanceof LdapUserDetails @TO@ IfStatement@@if (!(principal instanceof LdapUserDetails)) {  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} else {  LdapUserDetails details=(LdapUserDetails)principal;  return details.getDn();} @AT@ 1971 @LENGTH@ 36
------MOV SimpleName@@principal @TO@ InstanceofExpression@@principal instanceof LdapUserDetails @AT@ 1899 @LENGTH@ 9
------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@principal instanceof LdapUserDetails @AT@ 1909 @LENGTH@ 10
------MOV SimpleType@@LdapUserDetails @TO@ InstanceofExpression@@principal instanceof LdapUserDetails @AT@ 1920 @LENGTH@ 15
---INS Block@@ElseBody:if (authentication instanceof AnonymousAuthenticationToken) {  if (log.isDebugEnabled()) {    log.debug("Anonymous Authentication, returning empty String as Principal");  }  return "";} else {  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} @TO@ IfStatement@@if (!(principal instanceof LdapUserDetails)) {  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} else {  LdapUserDetails details=(LdapUserDetails)principal;  return details.getDn();} @AT@ 2144 @LENGTH@ 521
------INS IfStatement@@if (authentication instanceof AnonymousAuthenticationToken) {  if (log.isDebugEnabled()) {    log.debug("Anonymous Authentication, returning empty String as Principal");  }  return "";} else {  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} @TO@ Block@@ElseBody:if (authentication instanceof AnonymousAuthenticationToken) {  if (log.isDebugEnabled()) {    log.debug("Anonymous Authentication, returning empty String as Principal");  }  return "";} else {  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} @AT@ 2144 @LENGTH@ 521
---------MOV Block@@ThenBody:{  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} @TO@ IfStatement@@if (authentication instanceof AnonymousAuthenticationToken) {  if (log.isDebugEnabled()) {    log.debug("Anonymous Authentication, returning empty String as Principal");  }  return "";} else {  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} @AT@ 1938 @LENGTH@ 220
---------INS InstanceofExpression@@authentication instanceof AnonymousAuthenticationToken @TO@ IfStatement@@if (authentication instanceof AnonymousAuthenticationToken) {  if (log.isDebugEnabled()) {    log.debug("Anonymous Authentication, returning empty String as Principal");  }  return "";} else {  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} @AT@ 2148 @LENGTH@ 54
------------INS SimpleName@@authentication @TO@ InstanceofExpression@@authentication instanceof AnonymousAuthenticationToken @AT@ 2148 @LENGTH@ 14
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@authentication instanceof AnonymousAuthenticationToken @AT@ 2163 @LENGTH@ 10
------------INS SimpleType@@AnonymousAuthenticationToken @TO@ InstanceofExpression@@authentication instanceof AnonymousAuthenticationToken @AT@ 2174 @LENGTH@ 28
---------INS Block@@ThenBody:{  if (log.isDebugEnabled()) {    log.debug("Anonymous Authentication, returning empty String as Principal");  }  return "";} @TO@ IfStatement@@if (authentication instanceof AnonymousAuthenticationToken) {  if (log.isDebugEnabled()) {    log.debug("Anonymous Authentication, returning empty String as Principal");  }  return "";} else {  throw new IllegalArgumentException("The principal property of the authentication object -" + "needs to be a LdapUserDetails.");} @AT@ 2204 @LENGTH@ 235
------------INS IfStatement@@if (log.isDebugEnabled()) {  log.debug("Anonymous Authentication, returning empty String as Principal");} @TO@ Block@@ThenBody:{  if (log.isDebugEnabled()) {    log.debug("Anonymous Authentication, returning empty String as Principal");  }  return "";} @AT@ 2223 @LENGTH@ 173
---------------INS MethodInvocation@@log.isDebugEnabled() @TO@ IfStatement@@if (log.isDebugEnabled()) {  log.debug("Anonymous Authentication, returning empty String as Principal");} @AT@ 2227 @LENGTH@ 20
------------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.isDebugEnabled() @AT@ 2227 @LENGTH@ 3
------------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@log.isDebugEnabled() @AT@ 2231 @LENGTH@ 16
---------------INS Block@@ThenBody:{  log.debug("Anonymous Authentication, returning empty String as Principal");} @TO@ IfStatement@@if (log.isDebugEnabled()) {  log.debug("Anonymous Authentication, returning empty String as Principal");} @AT@ 2249 @LENGTH@ 147
------------------INS ExpressionStatement@@MethodInvocation:log.debug("Anonymous Authentication, returning empty String as Principal") @TO@ Block@@ThenBody:{  log.debug("Anonymous Authentication, returning empty String as Principal");} @AT@ 2272 @LENGTH@ 105
---------------------INS MethodInvocation@@log.debug("Anonymous Authentication, returning empty String as Principal") @TO@ ExpressionStatement@@MethodInvocation:log.debug("Anonymous Authentication, returning empty String as Principal") @AT@ 2272 @LENGTH@ 104
------------------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug("Anonymous Authentication, returning empty String as Principal") @AT@ 2272 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:debug:["Anonymous Authentication, returning empty String as Principal"] @TO@ MethodInvocation@@log.debug("Anonymous Authentication, returning empty String as Principal") @AT@ 2306 @LENGTH@ 70
---------------------------INS StringLiteral@@"Anonymous Authentication, returning empty String as Principal" @TO@ SimpleName@@MethodName:debug:["Anonymous Authentication, returning empty String as Principal"] @AT@ 2312 @LENGTH@ 63
------------INS ReturnStatement@@StringLiteral:"" @TO@ Block@@ThenBody:{  if (log.isDebugEnabled()) {    log.debug("Anonymous Authentication, returning empty String as Principal");  }  return "";} @AT@ 2414 @LENGTH@ 10
---------------INS StringLiteral@@"" @TO@ ReturnStatement@@StringLiteral:"" @AT@ 2421 @LENGTH@ 2
---UPD Block@@ElseBody:{  LdapUserDetails details=(LdapUserDetails)principal;  return details.getDn();} @TO@ ThenBody:{  LdapUserDetails details=(LdapUserDetails)principal;  return details.getDn();} @AT@ 2164 @LENGTH@ 129


UPD ThrowStatement@@ClassInstanceCreation:new IncorrectResultSizeDataAccessException("Error restarting job, more than one JobInstance found for: " + jobConfiguration.toString(),1,jobs.size()) @TO@ ClassInstanceCreation:new BatchRestartException("Error restarting job, more than one JobInstance found for: " + jobConfiguration.toString()) @AT@ 4578 @LENGTH@ 163
---UPD ClassInstanceCreation@@IncorrectResultSizeDataAccessException["Error restarting job, more than one JobInstance found for: " + jobConfiguration.toString(), 1, jobs.size()] @TO@ BatchRestartException["Error restarting job, more than one JobInstance found for: " + jobConfiguration.toString()] @AT@ 4584 @LENGTH@ 156
------UPD SimpleType@@IncorrectResultSizeDataAccessException @TO@ BatchRestartException @AT@ 4588 @LENGTH@ 38
------DEL NumberLiteral@@1 @AT@ 4725 @LENGTH@ 1
------DEL MethodInvocation@@jobs.size() @AT@ 4728 @LENGTH@ 11
---------DEL SimpleName@@Name:jobs @AT@ 4728 @LENGTH@ 4
---------DEL SimpleName@@MethodName:size:[] @AT@ 4733 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testAuthorizationHeaderWithCommasIsSplitCorrectly,  @TO@ TypeDeclaration@@[public]StringSplitUtilsTests, TestCase @AT@ 6516 @LENGTH@ 411
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationHeaderWithCommasIsSplitCorrectly,  @AT@ 6516 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationHeaderWithCommasIsSplitCorrectly,  @AT@ 6523 @LENGTH@ 4
---INS SimpleName@@MethodName:testAuthorizationHeaderWithCommasIsSplitCorrectly @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationHeaderWithCommasIsSplitCorrectly,  @AT@ 6528 @LENGTH@ 49
---INS VariableDeclarationStatement@@String header="Digest username=\"hamilton,bob\", realm=\"bobs,ok,realm\", nonce=\"the,nonce\", " + "uri=\"the,Uri\", response=\"the,response,Digest\", qop=theqop, nc=thenc, cnonce=\"the,cnonce\""; @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationHeaderWithCommasIsSplitCorrectly,  @AT@ 6590 @LENGTH@ 214
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String header="Digest username=\"hamilton,bob\", realm=\"bobs,ok,realm\", nonce=\"the,nonce\", " + "uri=\"the,Uri\", response=\"the,response,Digest\", qop=theqop, nc=thenc, cnonce=\"the,cnonce\""; @AT@ 6590 @LENGTH@ 6
------INS VariableDeclarationFragment@@header="Digest username=\"hamilton,bob\", realm=\"bobs,ok,realm\", nonce=\"the,nonce\", " + "uri=\"the,Uri\", response=\"the,response,Digest\", qop=theqop, nc=thenc, cnonce=\"the,cnonce\"" @TO@ VariableDeclarationStatement@@String header="Digest username=\"hamilton,bob\", realm=\"bobs,ok,realm\", nonce=\"the,nonce\", " + "uri=\"the,Uri\", response=\"the,response,Digest\", qop=theqop, nc=thenc, cnonce=\"the,cnonce\""; @AT@ 6597 @LENGTH@ 206
---------INS SimpleName@@header @TO@ VariableDeclarationFragment@@header="Digest username=\"hamilton,bob\", realm=\"bobs,ok,realm\", nonce=\"the,nonce\", " + "uri=\"the,Uri\", response=\"the,response,Digest\", qop=theqop, nc=thenc, cnonce=\"the,cnonce\"" @AT@ 6597 @LENGTH@ 6
---------INS InfixExpression@@"Digest username=\"hamilton,bob\", realm=\"bobs,ok,realm\", nonce=\"the,nonce\", " + "uri=\"the,Uri\", response=\"the,response,Digest\", qop=theqop, nc=thenc, cnonce=\"the,cnonce\"" @TO@ VariableDeclarationFragment@@header="Digest username=\"hamilton,bob\", realm=\"bobs,ok,realm\", nonce=\"the,nonce\", " + "uri=\"the,Uri\", response=\"the,response,Digest\", qop=theqop, nc=thenc, cnonce=\"the,cnonce\"" @AT@ 6606 @LENGTH@ 197
------------INS StringLiteral@@"Digest username=\"hamilton,bob\", realm=\"bobs,ok,realm\", nonce=\"the,nonce\", " @TO@ InfixExpression@@"Digest username=\"hamilton,bob\", realm=\"bobs,ok,realm\", nonce=\"the,nonce\", " + "uri=\"the,Uri\", response=\"the,response,Digest\", qop=theqop, nc=thenc, cnonce=\"the,cnonce\"" @AT@ 6606 @LENGTH@ 82
------------INS Operator@@+ @TO@ InfixExpression@@"Digest username=\"hamilton,bob\", realm=\"bobs,ok,realm\", nonce=\"the,nonce\", " + "uri=\"the,Uri\", response=\"the,response,Digest\", qop=theqop, nc=thenc, cnonce=\"the,cnonce\"" @AT@ 6688 @LENGTH@ 1
------------INS StringLiteral@@"uri=\"the,Uri\", response=\"the,response,Digest\", qop=theqop, nc=thenc, cnonce=\"the,cnonce\"" @TO@ InfixExpression@@"Digest username=\"hamilton,bob\", realm=\"bobs,ok,realm\", nonce=\"the,nonce\", " + "uri=\"the,Uri\", response=\"the,response,Digest\", qop=theqop, nc=thenc, cnonce=\"the,cnonce\"" @AT@ 6707 @LENGTH@ 96
---INS VariableDeclarationStatement@@String[] parts=StringSplitUtils.splitIgnoringQuotes(header,','); @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationHeaderWithCommasIsSplitCorrectly,  @AT@ 6814 @LENGTH@ 67
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] parts=StringSplitUtils.splitIgnoringQuotes(header,','); @AT@ 6814 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 6814 @LENGTH@ 6
------INS VariableDeclarationFragment@@parts=StringSplitUtils.splitIgnoringQuotes(header,',') @TO@ VariableDeclarationStatement@@String[] parts=StringSplitUtils.splitIgnoringQuotes(header,','); @AT@ 6823 @LENGTH@ 57
---------INS SimpleName@@parts @TO@ VariableDeclarationFragment@@parts=StringSplitUtils.splitIgnoringQuotes(header,',') @AT@ 6823 @LENGTH@ 5
---------INS MethodInvocation@@StringSplitUtils.splitIgnoringQuotes(header,',') @TO@ VariableDeclarationFragment@@parts=StringSplitUtils.splitIgnoringQuotes(header,',') @AT@ 6831 @LENGTH@ 49
------------INS SimpleName@@Name:StringSplitUtils @TO@ MethodInvocation@@StringSplitUtils.splitIgnoringQuotes(header,',') @AT@ 6831 @LENGTH@ 16
------------INS SimpleName@@MethodName:splitIgnoringQuotes:[header, ','] @TO@ MethodInvocation@@StringSplitUtils.splitIgnoringQuotes(header,',') @AT@ 6848 @LENGTH@ 32
---------------INS SimpleName@@header @TO@ SimpleName@@MethodName:splitIgnoringQuotes:[header, ','] @AT@ 6868 @LENGTH@ 6
---------------INS CharacterLiteral@@',' @TO@ SimpleName@@MethodName:splitIgnoringQuotes:[header, ','] @AT@ 6876 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals(8,parts.length) @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationHeaderWithCommasIsSplitCorrectly,  @AT@ 6891 @LENGTH@ 30
------INS MethodInvocation@@assertEquals(8,parts.length) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(8,parts.length) @AT@ 6891 @LENGTH@ 29
---------INS SimpleName@@MethodName:assertEquals:[8, parts.length] @TO@ MethodInvocation@@assertEquals(8,parts.length) @AT@ 6891 @LENGTH@ 29
------------INS NumberLiteral@@8 @TO@ SimpleName@@MethodName:assertEquals:[8, parts.length] @AT@ 6904 @LENGTH@ 1
------------INS QualifiedName@@parts.length @TO@ SimpleName@@MethodName:assertEquals:[8, parts.length] @AT@ 6907 @LENGTH@ 12
---------------INS SimpleName@@parts @TO@ QualifiedName@@parts.length @AT@ 6907 @LENGTH@ 5
---------------INS SimpleName@@length @TO@ QualifiedName@@parts.length @AT@ 6913 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:log.info("Received: " + exchange) @TO@ MethodInvocation:log.debug("Received: " + exchange) @AT@ 1679 @LENGTH@ 34
---UPD MethodInvocation@@log.info("Received: " + exchange) @TO@ log.debug("Received: " + exchange) @AT@ 1679 @LENGTH@ 33
------UPD SimpleName@@MethodName:info:["Received: " + exchange] @TO@ MethodName:debug:["Received: " + exchange] @AT@ 1683 @LENGTH@ 29


UPD MethodDeclaration@@public, void, MethodName:setLabelMap, HashMap labelMap,  @TO@ public, void, MethodName:setLabelMap, Map labelMap,  @AT@ 6226 @LENGTH@ 83
---UPD SingleVariableDeclaration@@HashMap labelMap @TO@ Map labelMap @AT@ 6250 @LENGTH@ 16
------UPD SimpleType@@HashMap @TO@ Map @AT@ 6250 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testJobWithDefaultJobIdentifier, Exception,  @TO@ TypeDeclaration@@[public, abstract]AbstractJobDaoTests, AbstractTransactionalDataSourceSpringContextTests @AT@ 6983 @LENGTH@ 512
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testJobWithDefaultJobIdentifier, Exception,  @AT@ 6983 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testJobWithDefaultJobIdentifier, Exception,  @AT@ 6990 @LENGTH@ 4
---INS SimpleName@@MethodName:testJobWithDefaultJobIdentifier @TO@ MethodDeclaration@@public, void, MethodName:testJobWithDefaultJobIdentifier, Exception,  @AT@ 6995 @LENGTH@ 31
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testJobWithDefaultJobIdentifier, Exception,  @AT@ 7036 @LENGTH@ 9
---INS VariableDeclarationStatement@@DefaultJobIdentifier jobIdentifier=new DefaultJobIdentifier("Job1","testKey"); @TO@ MethodDeclaration@@public, void, MethodName:testJobWithDefaultJobIdentifier, Exception,  @AT@ 7050 @LENGTH@ 81
------INS SimpleType@@DefaultJobIdentifier @TO@ VariableDeclarationStatement@@DefaultJobIdentifier jobIdentifier=new DefaultJobIdentifier("Job1","testKey"); @AT@ 7050 @LENGTH@ 20
------INS VariableDeclarationFragment@@jobIdentifier=new DefaultJobIdentifier("Job1","testKey") @TO@ VariableDeclarationStatement@@DefaultJobIdentifier jobIdentifier=new DefaultJobIdentifier("Job1","testKey"); @AT@ 7071 @LENGTH@ 59
---------INS SimpleName@@jobIdentifier @TO@ VariableDeclarationFragment@@jobIdentifier=new DefaultJobIdentifier("Job1","testKey") @AT@ 7071 @LENGTH@ 13
---------INS ClassInstanceCreation@@DefaultJobIdentifier["Job1", "testKey"] @TO@ VariableDeclarationFragment@@jobIdentifier=new DefaultJobIdentifier("Job1","testKey") @AT@ 7087 @LENGTH@ 43
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultJobIdentifier["Job1", "testKey"] @AT@ 7087 @LENGTH@ 3
------------INS SimpleType@@DefaultJobIdentifier @TO@ ClassInstanceCreation@@DefaultJobIdentifier["Job1", "testKey"] @AT@ 7091 @LENGTH@ 20
------------INS StringLiteral@@"Job1" @TO@ ClassInstanceCreation@@DefaultJobIdentifier["Job1", "testKey"] @AT@ 7112 @LENGTH@ 6
------------INS StringLiteral@@"testKey" @TO@ ClassInstanceCreation@@DefaultJobIdentifier["Job1", "testKey"] @AT@ 7120 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:job=jobDao.createJob(jobIdentifier) @TO@ MethodDeclaration@@public, void, MethodName:testJobWithDefaultJobIdentifier, Exception,  @AT@ 7152 @LENGTH@ 38
------INS Assignment@@job=jobDao.createJob(jobIdentifier) @TO@ ExpressionStatement@@Assignment:job=jobDao.createJob(jobIdentifier) @AT@ 7152 @LENGTH@ 37
---------INS SimpleName@@job @TO@ Assignment@@job=jobDao.createJob(jobIdentifier) @AT@ 7152 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@job=jobDao.createJob(jobIdentifier) @AT@ 7155 @LENGTH@ 1
---------INS MethodInvocation@@jobDao.createJob(jobIdentifier) @TO@ Assignment@@job=jobDao.createJob(jobIdentifier) @AT@ 7158 @LENGTH@ 31
------------INS SimpleName@@Name:jobDao @TO@ MethodInvocation@@jobDao.createJob(jobIdentifier) @AT@ 7158 @LENGTH@ 6
------------INS SimpleName@@MethodName:createJob:[jobIdentifier] @TO@ MethodInvocation@@jobDao.createJob(jobIdentifier) @AT@ 7165 @LENGTH@ 24
---------------INS SimpleName@@jobIdentifier @TO@ SimpleName@@MethodName:createJob:[jobIdentifier] @AT@ 7175 @LENGTH@ 13
---INS VariableDeclarationStatement@@List jobs=jdbcTemplate.queryForList("SELECT * FROM BATCH_JOB where ID=?",new Object[]{job.getId()}); @TO@ MethodDeclaration@@public, void, MethodName:testJobWithDefaultJobIdentifier, Exception,  @AT@ 7194 @LENGTH@ 118
------INS SimpleType@@List @TO@ VariableDeclarationStatement@@List jobs=jdbcTemplate.queryForList("SELECT * FROM BATCH_JOB where ID=?",new Object[]{job.getId()}); @AT@ 7194 @LENGTH@ 4
------INS VariableDeclarationFragment@@jobs=jdbcTemplate.queryForList("SELECT * FROM BATCH_JOB where ID=?",new Object[]{job.getId()}) @TO@ VariableDeclarationStatement@@List jobs=jdbcTemplate.queryForList("SELECT * FROM BATCH_JOB where ID=?",new Object[]{job.getId()}); @AT@ 7199 @LENGTH@ 112
---------INS SimpleName@@jobs @TO@ VariableDeclarationFragment@@jobs=jdbcTemplate.queryForList("SELECT * FROM BATCH_JOB where ID=?",new Object[]{job.getId()}) @AT@ 7199 @LENGTH@ 4
---------INS MethodInvocation@@jdbcTemplate.queryForList("SELECT * FROM BATCH_JOB where ID=?",new Object[]{job.getId()}) @TO@ VariableDeclarationFragment@@jobs=jdbcTemplate.queryForList("SELECT * FROM BATCH_JOB where ID=?",new Object[]{job.getId()}) @AT@ 7206 @LENGTH@ 105
------------INS SimpleName@@Name:jdbcTemplate @TO@ MethodInvocation@@jdbcTemplate.queryForList("SELECT * FROM BATCH_JOB where ID=?",new Object[]{job.getId()}) @AT@ 7206 @LENGTH@ 12
------------INS SimpleName@@MethodName:queryForList:["SELECT * FROM BATCH_JOB where ID=?", new Object[]{job.getId()}] @TO@ MethodInvocation@@jdbcTemplate.queryForList("SELECT * FROM BATCH_JOB where ID=?",new Object[]{job.getId()}) @AT@ 7219 @LENGTH@ 92
---------------INS StringLiteral@@"SELECT * FROM BATCH_JOB where ID=?" @TO@ SimpleName@@MethodName:queryForList:["SELECT * FROM BATCH_JOB where ID=?", new Object[]{job.getId()}] @AT@ 7237 @LENGTH@ 36
---------------INS ArrayCreation@@new Object[]{job.getId()} @TO@ SimpleName@@MethodName:queryForList:["SELECT * FROM BATCH_JOB where ID=?", new Object[]{job.getId()}] @AT@ 7275 @LENGTH@ 35
------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{job.getId()} @AT@ 7279 @LENGTH@ 8
---------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 7279 @LENGTH@ 6
------------------INS ArrayInitializer@@{job.getId()} @TO@ ArrayCreation@@new Object[]{job.getId()} @AT@ 7288 @LENGTH@ 22
---------------------INS MethodInvocation@@job.getId() @TO@ ArrayInitializer@@{job.getId()} @AT@ 7290 @LENGTH@ 18
------------------------INS SimpleName@@Name:job @TO@ MethodInvocation@@job.getId() @AT@ 7290 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@job.getId() @AT@ 7301 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,jobs.size()) @TO@ MethodDeclaration@@public, void, MethodName:testJobWithDefaultJobIdentifier, Exception,  @AT@ 7315 @LENGTH@ 29
------INS MethodInvocation@@assertEquals(1,jobs.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,jobs.size()) @AT@ 7315 @LENGTH@ 28
---------INS SimpleName@@MethodName:assertEquals:[1, jobs.size()] @TO@ MethodInvocation@@assertEquals(1,jobs.size()) @AT@ 7315 @LENGTH@ 28
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, jobs.size()] @AT@ 7328 @LENGTH@ 1
------------INS MethodInvocation@@jobs.size() @TO@ SimpleName@@MethodName:assertEquals:[1, jobs.size()] @AT@ 7331 @LENGTH@ 11
---------------INS SimpleName@@Name:jobs @TO@ MethodInvocation@@jobs.size() @AT@ 7331 @LENGTH@ 4
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@jobs.size() @AT@ 7336 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals(job.getName(),((Map)jobs.get(0)).get("JOB_NAME")) @TO@ MethodDeclaration@@public, void, MethodName:testJobWithDefaultJobIdentifier, Exception,  @AT@ 7347 @LENGTH@ 65
------INS MethodInvocation@@assertEquals(job.getName(),((Map)jobs.get(0)).get("JOB_NAME")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(job.getName(),((Map)jobs.get(0)).get("JOB_NAME")) @AT@ 7347 @LENGTH@ 64
---------INS SimpleName@@MethodName:assertEquals:[job.getName(), ((Map)jobs.get(0)).get("JOB_NAME")] @TO@ MethodInvocation@@assertEquals(job.getName(),((Map)jobs.get(0)).get("JOB_NAME")) @AT@ 7347 @LENGTH@ 64
------------INS MethodInvocation@@job.getName() @TO@ SimpleName@@MethodName:assertEquals:[job.getName(), ((Map)jobs.get(0)).get("JOB_NAME")] @AT@ 7360 @LENGTH@ 13
---------------INS SimpleName@@Name:job @TO@ MethodInvocation@@job.getName() @AT@ 7360 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@job.getName() @AT@ 7364 @LENGTH@ 9
------------INS MethodInvocation@@((Map)jobs.get(0)).get("JOB_NAME") @TO@ SimpleName@@MethodName:assertEquals:[job.getName(), ((Map)jobs.get(0)).get("JOB_NAME")] @AT@ 7375 @LENGTH@ 35
---------------INS ParenthesizedExpression@@((Map)jobs.get(0)) @TO@ MethodInvocation@@((Map)jobs.get(0)).get("JOB_NAME") @AT@ 7375 @LENGTH@ 19
------------------INS CastExpression@@(Map)jobs.get(0) @TO@ ParenthesizedExpression@@((Map)jobs.get(0)) @AT@ 7376 @LENGTH@ 17
---------------------INS SimpleType@@Map @TO@ CastExpression@@(Map)jobs.get(0) @AT@ 7377 @LENGTH@ 3
---------------------INS MethodInvocation@@jobs.get(0) @TO@ CastExpression@@(Map)jobs.get(0) @AT@ 7382 @LENGTH@ 11
------------------------INS SimpleName@@Name:jobs @TO@ MethodInvocation@@jobs.get(0) @AT@ 7382 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@jobs.get(0) @AT@ 7387 @LENGTH@ 6
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 7391 @LENGTH@ 1
---------------INS SimpleName@@MethodName:get:["JOB_NAME"] @TO@ MethodInvocation@@((Map)jobs.get(0)).get("JOB_NAME") @AT@ 7395 @LENGTH@ 15
------------------INS StringLiteral@@"JOB_NAME" @TO@ SimpleName@@MethodName:get:["JOB_NAME"] @AT@ 7399 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals(jobIdentifier.getJobKey(),((Map)jobs.get(0)).get("JOB_KEY")) @TO@ MethodDeclaration@@public, void, MethodName:testJobWithDefaultJobIdentifier, Exception,  @AT@ 7415 @LENGTH@ 76
------INS MethodInvocation@@assertEquals(jobIdentifier.getJobKey(),((Map)jobs.get(0)).get("JOB_KEY")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(jobIdentifier.getJobKey(),((Map)jobs.get(0)).get("JOB_KEY")) @AT@ 7415 @LENGTH@ 75
---------INS SimpleName@@MethodName:assertEquals:[jobIdentifier.getJobKey(), ((Map)jobs.get(0)).get("JOB_KEY")] @TO@ MethodInvocation@@assertEquals(jobIdentifier.getJobKey(),((Map)jobs.get(0)).get("JOB_KEY")) @AT@ 7415 @LENGTH@ 75
------------INS MethodInvocation@@jobIdentifier.getJobKey() @TO@ SimpleName@@MethodName:assertEquals:[jobIdentifier.getJobKey(), ((Map)jobs.get(0)).get("JOB_KEY")] @AT@ 7428 @LENGTH@ 25
---------------INS SimpleName@@Name:jobIdentifier @TO@ MethodInvocation@@jobIdentifier.getJobKey() @AT@ 7428 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getJobKey:[] @TO@ MethodInvocation@@jobIdentifier.getJobKey() @AT@ 7442 @LENGTH@ 11
------------INS MethodInvocation@@((Map)jobs.get(0)).get("JOB_KEY") @TO@ SimpleName@@MethodName:assertEquals:[jobIdentifier.getJobKey(), ((Map)jobs.get(0)).get("JOB_KEY")] @AT@ 7455 @LENGTH@ 34
---------------INS ParenthesizedExpression@@((Map)jobs.get(0)) @TO@ MethodInvocation@@((Map)jobs.get(0)).get("JOB_KEY") @AT@ 7455 @LENGTH@ 19
------------------INS CastExpression@@(Map)jobs.get(0) @TO@ ParenthesizedExpression@@((Map)jobs.get(0)) @AT@ 7456 @LENGTH@ 17
---------------------INS SimpleType@@Map @TO@ CastExpression@@(Map)jobs.get(0) @AT@ 7457 @LENGTH@ 3
---------------------INS MethodInvocation@@jobs.get(0) @TO@ CastExpression@@(Map)jobs.get(0) @AT@ 7462 @LENGTH@ 11
------------------------INS SimpleName@@Name:jobs @TO@ MethodInvocation@@jobs.get(0) @AT@ 7462 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@jobs.get(0) @AT@ 7467 @LENGTH@ 6
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 7471 @LENGTH@ 1
---------------INS SimpleName@@MethodName:get:["JOB_KEY"] @TO@ MethodInvocation@@((Map)jobs.get(0)).get("JOB_KEY") @AT@ 7475 @LENGTH@ 14
------------------INS StringLiteral@@"JOB_KEY" @TO@ SimpleName@@MethodName:get:["JOB_KEY"] @AT@ 7479 @LENGTH@ 9


UPD VariableDeclarationStatement@@Mapping mapping=builder.source("flowScope.x").target("y").value(); @TO@ Mapping mapping=builder.source("${flowScope.x}").target("${y}").value(); @AT@ 2878 @LENGTH@ 68
---UPD VariableDeclarationFragment@@mapping=builder.source("flowScope.x").target("y").value() @TO@ mapping=builder.source("${flowScope.x}").target("${y}").value() @AT@ 2886 @LENGTH@ 59
------UPD MethodInvocation@@builder.source("flowScope.x").target("y").value() @TO@ builder.source("${flowScope.x}").target("${y}").value() @AT@ 2896 @LENGTH@ 49
---------UPD MethodInvocation@@MethodName:target:["y"] @TO@ MethodName:target:["${y}"] @AT@ 2896 @LENGTH@ 41
------------UPD StringLiteral@@"y" @TO@ "${y}" @AT@ 2933 @LENGTH@ 3
---------UPD MethodInvocation@@MethodName:source:["flowScope.x"] @TO@ MethodName:source:["${flowScope.x}"] @AT@ 2896 @LENGTH@ 29
------------UPD StringLiteral@@"flowScope.x" @TO@ "${flowScope.x}" @AT@ 2911 @LENGTH@ 13


UPD TypeDeclaration@@[private]StubEventWriter, AbstractEventWriterWrapper @TO@ [private, static]StubEventWriter, AbstractEventWriterWrapper @AT@ 4021 @LENGTH@ 168
---INS Modifier@@static @TO@ TypeDeclaration@@[private]StubEventWriter, AbstractEventWriterWrapper @AT@ 4029 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals("",status.getExitCode()) @TO@ MethodInvocation:assertEquals("COMPLETED",status.getExitCode()) @AT@ 1699 @LENGTH@ 39
---UPD MethodInvocation@@assertEquals("",status.getExitCode()) @TO@ assertEquals("COMPLETED",status.getExitCode()) @AT@ 1699 @LENGTH@ 38
------UPD SimpleName@@MethodName:assertEquals:["", status.getExitCode()] @TO@ MethodName:assertEquals:["COMPLETED", status.getExitCode()] @AT@ 1699 @LENGTH@ 38
---------UPD StringLiteral@@"" @TO@ "COMPLETED" @AT@ 1712 @LENGTH@ 2


UPD MethodDeclaration@@public, voidMethodName:EhCacheBasedAclCache, Cache cache,  @TO@ public, voidMethodName:EhCacheBasedAclCache, Ehcache cache,  @AT@ 1385 @LENGTH@ 125
---UPD SingleVariableDeclaration@@Cache cache @TO@ Ehcache cache @AT@ 1413 @LENGTH@ 11
------UPD SimpleType@@Cache @TO@ Ehcache @AT@ 1413 @LENGTH@ 5


UPD WhileStatement@@while (true) {  E exchange=pollingConsumer.receiveNoWait();  if (exchange == null) {    break;  }  getProcessor().process(exchange);} @TO@ while (true) {  E exchange=pollingConsumer.receiveNoWait();  if (exchange == null) {    break;  }  Message out=exchange.getOut(false);  if (out != null) {    E newExchange=getEndpoint().createExchange();    newExchange.getIn().copyFrom(out);    exchange=newExchange;  }  getProcessor().process(exchange);} @AT@ 1732 @LENGTH@ 201
---UPD Block@@WhileBody:{  E exchange=pollingConsumer.receiveNoWait();  if (exchange == null) {    break;  }  getProcessor().process(exchange);} @TO@ WhileBody:{  E exchange=pollingConsumer.receiveNoWait();  if (exchange == null) {    break;  }  Message out=exchange.getOut(false);  if (out != null) {    E newExchange=getEndpoint().createExchange();    newExchange.getIn().copyFrom(out);    exchange=newExchange;  }  getProcessor().process(exchange);} @AT@ 1745 @LENGTH@ 188
------INS VariableDeclarationStatement@@Message out=exchange.getOut(false); @TO@ Block@@WhileBody:{  E exchange=pollingConsumer.receiveNoWait();  if (exchange == null) {    break;  }  getProcessor().process(exchange);} @AT@ 2084 @LENGTH@ 37
---------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message out=exchange.getOut(false); @AT@ 2084 @LENGTH@ 7
---------INS VariableDeclarationFragment@@out=exchange.getOut(false) @TO@ VariableDeclarationStatement@@Message out=exchange.getOut(false); @AT@ 2092 @LENGTH@ 28
------------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=exchange.getOut(false) @AT@ 2092 @LENGTH@ 3
------------INS MethodInvocation@@exchange.getOut(false) @TO@ VariableDeclarationFragment@@out=exchange.getOut(false) @AT@ 2098 @LENGTH@ 22
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut(false) @AT@ 2098 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getOut:[false] @TO@ MethodInvocation@@exchange.getOut(false) @AT@ 2107 @LENGTH@ 13
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getOut:[false] @AT@ 2114 @LENGTH@ 5
------INS IfStatement@@if (out != null) {  E newExchange=getEndpoint().createExchange();  newExchange.getIn().copyFrom(out);  exchange=newExchange;} @TO@ Block@@WhileBody:{  E exchange=pollingConsumer.receiveNoWait();  if (exchange == null) {    break;  }  getProcessor().process(exchange);} @AT@ 2134 @LENGTH@ 233
---------INS InfixExpression@@out != null @TO@ IfStatement@@if (out != null) {  E newExchange=getEndpoint().createExchange();  newExchange.getIn().copyFrom(out);  exchange=newExchange;} @AT@ 2138 @LENGTH@ 11
------------INS SimpleName@@out @TO@ InfixExpression@@out != null @AT@ 2138 @LENGTH@ 3
------------INS Operator@@!= @TO@ InfixExpression@@out != null @AT@ 2141 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@out != null @AT@ 2145 @LENGTH@ 4
---------INS Block@@ThenBody:{  E newExchange=getEndpoint().createExchange();  newExchange.getIn().copyFrom(out);  exchange=newExchange;} @TO@ IfStatement@@if (out != null) {  E newExchange=getEndpoint().createExchange();  newExchange.getIn().copyFrom(out);  exchange=newExchange;} @AT@ 2151 @LENGTH@ 216
------------INS VariableDeclarationStatement@@E newExchange=getEndpoint().createExchange(); @TO@ Block@@ThenBody:{  E newExchange=getEndpoint().createExchange();  newExchange.getIn().copyFrom(out);  exchange=newExchange;} @AT@ 2215 @LENGTH@ 47
---------------INS SimpleType@@E @TO@ VariableDeclarationStatement@@E newExchange=getEndpoint().createExchange(); @AT@ 2215 @LENGTH@ 1
---------------INS VariableDeclarationFragment@@newExchange=getEndpoint().createExchange() @TO@ VariableDeclarationStatement@@E newExchange=getEndpoint().createExchange(); @AT@ 2217 @LENGTH@ 44
------------------INS SimpleName@@newExchange @TO@ VariableDeclarationFragment@@newExchange=getEndpoint().createExchange() @AT@ 2217 @LENGTH@ 11
------------------INS MethodInvocation@@getEndpoint().createExchange() @TO@ VariableDeclarationFragment@@newExchange=getEndpoint().createExchange() @AT@ 2231 @LENGTH@ 30
---------------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().createExchange() @AT@ 2231 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:createExchange:[] @TO@ MethodInvocation@@getEndpoint().createExchange() @AT@ 2245 @LENGTH@ 16
------------INS ExpressionStatement@@MethodInvocation:newExchange.getIn().copyFrom(out) @TO@ Block@@ThenBody:{  E newExchange=getEndpoint().createExchange();  newExchange.getIn().copyFrom(out);  exchange=newExchange;} @AT@ 2279 @LENGTH@ 34
---------------INS MethodInvocation@@newExchange.getIn().copyFrom(out) @TO@ ExpressionStatement@@MethodInvocation:newExchange.getIn().copyFrom(out) @AT@ 2279 @LENGTH@ 33
------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@newExchange.getIn().copyFrom(out) @AT@ 2279 @LENGTH@ 19
------------------INS SimpleName@@Name:newExchange @TO@ MethodInvocation@@newExchange.getIn().copyFrom(out) @AT@ 2279 @LENGTH@ 11
------------------INS SimpleName@@MethodName:copyFrom:[out] @TO@ MethodInvocation@@newExchange.getIn().copyFrom(out) @AT@ 2299 @LENGTH@ 13
---------------------INS SimpleName@@out @TO@ SimpleName@@MethodName:copyFrom:[out] @AT@ 2308 @LENGTH@ 3
------------INS ExpressionStatement@@Assignment:exchange=newExchange @TO@ Block@@ThenBody:{  E newExchange=getEndpoint().createExchange();  newExchange.getIn().copyFrom(out);  exchange=newExchange;} @AT@ 2330 @LENGTH@ 23
---------------INS Assignment@@exchange=newExchange @TO@ ExpressionStatement@@Assignment:exchange=newExchange @AT@ 2330 @LENGTH@ 22
------------------INS SimpleName@@exchange @TO@ Assignment@@exchange=newExchange @AT@ 2330 @LENGTH@ 8
------------------INS Operator@@= @TO@ Assignment@@exchange=newExchange @AT@ 2338 @LENGTH@ 1
------------------INS SimpleName@@newExchange @TO@ Assignment@@exchange=newExchange @AT@ 2341 @LENGTH@ 11


INS MethodDeclaration@@public, voidMethodName:BeanExchange, DefaultExchange parent,  @TO@ TypeDeclaration@@[public]BeanExchange, DefaultExchange @AT@ 1216 @LENGTH@ 74
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:BeanExchange, DefaultExchange parent,  @AT@ 1216 @LENGTH@ 6
---INS SimpleName@@MethodName:BeanExchange @TO@ MethodDeclaration@@public, voidMethodName:BeanExchange, DefaultExchange parent,  @AT@ 1223 @LENGTH@ 12
---INS SingleVariableDeclaration@@DefaultExchange parent @TO@ MethodDeclaration@@public, voidMethodName:BeanExchange, DefaultExchange parent,  @AT@ 1236 @LENGTH@ 22
------INS SimpleType@@DefaultExchange @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 1236 @LENGTH@ 15
------INS SimpleName@@parent @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 1252 @LENGTH@ 6
---INS SuperConstructorInvocation@@super(parent);
 @TO@ MethodDeclaration@@public, voidMethodName:BeanExchange, DefaultExchange parent,  @AT@ 1270 @LENGTH@ 14
------INS SimpleName@@parent @TO@ SuperConstructorInvocation@@super(parent);
 @AT@ 1276 @LENGTH@ 6


INS MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @TO@ TypeDeclaration@@SaajSoap12Header, SaajSoapHeader[Soap12Header] @AT@ 2991 @LENGTH@ 781
---INS Modifier@@private @TO@ MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @AT@ 2991 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @AT@ 2999 @LENGTH@ 7
---INS SimpleName@@MethodName:shouldProcess @TO@ MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @AT@ 3007 @LENGTH@ 13
---INS SingleVariableDeclaration@@String headerRole @TO@ MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @AT@ 3021 @LENGTH@ 17
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String headerRole @AT@ 3021 @LENGTH@ 6
------INS SimpleName@@headerRole @TO@ SingleVariableDeclaration@@String headerRole @AT@ 3028 @LENGTH@ 10
---INS SingleVariableDeclaration@@String[] roles @TO@ MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @AT@ 3040 @LENGTH@ 14
------INS ArrayType@@String[] @TO@ SingleVariableDeclaration@@String[] roles @AT@ 3040 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 3040 @LENGTH@ 6
------INS SimpleName@@roles @TO@ SingleVariableDeclaration@@String[] roles @AT@ 3049 @LENGTH@ 5
---INS SingleVariableDeclaration@@boolean isUltimateDestination @TO@ MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @AT@ 3056 @LENGTH@ 29
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isUltimateDestination @AT@ 3056 @LENGTH@ 7
------INS SimpleName@@isUltimateDestination @TO@ SingleVariableDeclaration@@boolean isUltimateDestination @AT@ 3064 @LENGTH@ 21
---INS IfStatement@@if (!StringUtils.hasLength(headerRole)) {  return true;} @TO@ MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @AT@ 3097 @LENGTH@ 76
------INS PrefixExpression@@!StringUtils.hasLength(headerRole) @TO@ IfStatement@@if (!StringUtils.hasLength(headerRole)) {  return true;} @AT@ 3101 @LENGTH@ 34
---------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.hasLength(headerRole) @AT@ 3101 @LENGTH@ 1
---------INS MethodInvocation@@StringUtils.hasLength(headerRole) @TO@ PrefixExpression@@!StringUtils.hasLength(headerRole) @AT@ 3102 @LENGTH@ 33
------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasLength(headerRole) @AT@ 3102 @LENGTH@ 11
------------INS SimpleName@@MethodName:hasLength:[headerRole] @TO@ MethodInvocation@@StringUtils.hasLength(headerRole) @AT@ 3114 @LENGTH@ 21
---------------INS SimpleName@@headerRole @TO@ SimpleName@@MethodName:hasLength:[headerRole] @AT@ 3124 @LENGTH@ 10
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (!StringUtils.hasLength(headerRole)) {  return true;} @AT@ 3137 @LENGTH@ 36
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 3151 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 3158 @LENGTH@ 4
---INS IfStatement@@if (SOAPConstants.URI_SOAP_1_2_ROLE_NEXT.equals(headerRole)) {  return true;} @TO@ MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @AT@ 3182 @LENGTH@ 97
------INS MethodInvocation@@SOAPConstants.URI_SOAP_1_2_ROLE_NEXT.equals(headerRole) @TO@ IfStatement@@if (SOAPConstants.URI_SOAP_1_2_ROLE_NEXT.equals(headerRole)) {  return true;} @AT@ 3186 @LENGTH@ 55
---------INS QualifiedName@@Name:SOAPConstants.URI_SOAP_1_2_ROLE_NEXT @TO@ MethodInvocation@@SOAPConstants.URI_SOAP_1_2_ROLE_NEXT.equals(headerRole) @AT@ 3186 @LENGTH@ 36
---------INS SimpleName@@MethodName:equals:[headerRole] @TO@ MethodInvocation@@SOAPConstants.URI_SOAP_1_2_ROLE_NEXT.equals(headerRole) @AT@ 3223 @LENGTH@ 18
------------INS SimpleName@@headerRole @TO@ SimpleName@@MethodName:equals:[headerRole] @AT@ 3230 @LENGTH@ 10
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (SOAPConstants.URI_SOAP_1_2_ROLE_NEXT.equals(headerRole)) {  return true;} @AT@ 3243 @LENGTH@ 36
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 3257 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 3264 @LENGTH@ 4
---INS IfStatement@@if (SOAPConstants.URI_SOAP_1_2_ROLE_ULTIMATE_RECEIVER.equals(headerRole)) {  return isUltimateDestination;} @TO@ MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @AT@ 3288 @LENGTH@ 127
------INS MethodInvocation@@SOAPConstants.URI_SOAP_1_2_ROLE_ULTIMATE_RECEIVER.equals(headerRole) @TO@ IfStatement@@if (SOAPConstants.URI_SOAP_1_2_ROLE_ULTIMATE_RECEIVER.equals(headerRole)) {  return isUltimateDestination;} @AT@ 3292 @LENGTH@ 68
---------INS QualifiedName@@Name:SOAPConstants.URI_SOAP_1_2_ROLE_ULTIMATE_RECEIVER @TO@ MethodInvocation@@SOAPConstants.URI_SOAP_1_2_ROLE_ULTIMATE_RECEIVER.equals(headerRole) @AT@ 3292 @LENGTH@ 49
---------INS SimpleName@@MethodName:equals:[headerRole] @TO@ MethodInvocation@@SOAPConstants.URI_SOAP_1_2_ROLE_ULTIMATE_RECEIVER.equals(headerRole) @AT@ 3342 @LENGTH@ 18
------------INS SimpleName@@headerRole @TO@ SimpleName@@MethodName:equals:[headerRole] @AT@ 3349 @LENGTH@ 10
------INS Block@@ThenBody:{  return isUltimateDestination;} @TO@ IfStatement@@if (SOAPConstants.URI_SOAP_1_2_ROLE_ULTIMATE_RECEIVER.equals(headerRole)) {  return isUltimateDestination;} @AT@ 3362 @LENGTH@ 53
---------INS ReturnStatement@@SimpleName:isUltimateDestination @TO@ Block@@ThenBody:{  return isUltimateDestination;} @AT@ 3376 @LENGTH@ 29
------------INS SimpleName@@isUltimateDestination @TO@ ReturnStatement@@SimpleName:isUltimateDestination @AT@ 3383 @LENGTH@ 21
---INS IfStatement@@if (SOAPConstants.URI_SOAP_1_2_ROLE_NONE.equals(headerRole)) {  return false;} @TO@ MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @AT@ 3424 @LENGTH@ 98
------INS MethodInvocation@@SOAPConstants.URI_SOAP_1_2_ROLE_NONE.equals(headerRole) @TO@ IfStatement@@if (SOAPConstants.URI_SOAP_1_2_ROLE_NONE.equals(headerRole)) {  return false;} @AT@ 3428 @LENGTH@ 55
---------INS QualifiedName@@Name:SOAPConstants.URI_SOAP_1_2_ROLE_NONE @TO@ MethodInvocation@@SOAPConstants.URI_SOAP_1_2_ROLE_NONE.equals(headerRole) @AT@ 3428 @LENGTH@ 36
---------INS SimpleName@@MethodName:equals:[headerRole] @TO@ MethodInvocation@@SOAPConstants.URI_SOAP_1_2_ROLE_NONE.equals(headerRole) @AT@ 3465 @LENGTH@ 18
------------INS SimpleName@@headerRole @TO@ SimpleName@@MethodName:equals:[headerRole] @AT@ 3472 @LENGTH@ 10
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (SOAPConstants.URI_SOAP_1_2_ROLE_NONE.equals(headerRole)) {  return false;} @AT@ 3485 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 3499 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3506 @LENGTH@ 5
---INS IfStatement@@if (!ObjectUtils.isEmpty(roles)) {  for (int i=0; i < roles.length; i++) {    if (roles[i].equals(headerRole)) {      return true;    }  }} @TO@ MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @AT@ 3531 @LENGTH@ 213
------INS PrefixExpression@@!ObjectUtils.isEmpty(roles) @TO@ IfStatement@@if (!ObjectUtils.isEmpty(roles)) {  for (int i=0; i < roles.length; i++) {    if (roles[i].equals(headerRole)) {      return true;    }  }} @AT@ 3535 @LENGTH@ 27
---------INS Operator@@! @TO@ PrefixExpression@@!ObjectUtils.isEmpty(roles) @AT@ 3535 @LENGTH@ 1
---------INS MethodInvocation@@ObjectUtils.isEmpty(roles) @TO@ PrefixExpression@@!ObjectUtils.isEmpty(roles) @AT@ 3536 @LENGTH@ 26
------------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.isEmpty(roles) @AT@ 3536 @LENGTH@ 11
------------INS SimpleName@@MethodName:isEmpty:[roles] @TO@ MethodInvocation@@ObjectUtils.isEmpty(roles) @AT@ 3548 @LENGTH@ 14
---------------INS SimpleName@@roles @TO@ SimpleName@@MethodName:isEmpty:[roles] @AT@ 3556 @LENGTH@ 5
------INS Block@@ThenBody:{  for (int i=0; i < roles.length; i++) {    if (roles[i].equals(headerRole)) {      return true;    }  }} @TO@ IfStatement@@if (!ObjectUtils.isEmpty(roles)) {  for (int i=0; i < roles.length; i++) {    if (roles[i].equals(headerRole)) {      return true;    }  }} @AT@ 3564 @LENGTH@ 180
---------INS ForStatement@@for (int i=0; i < roles.length; i++) {  if (roles[i].equals(headerRole)) {    return true;  }} @TO@ Block@@ThenBody:{  for (int i=0; i < roles.length; i++) {    if (roles[i].equals(headerRole)) {      return true;    }  }} @AT@ 3578 @LENGTH@ 156
------------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < roles.length; i++) {  if (roles[i].equals(headerRole)) {    return true;  }} @AT@ 3583 @LENGTH@ 9
---------------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 3583 @LENGTH@ 3
---------------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 3587 @LENGTH@ 5
------------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 3587 @LENGTH@ 1
------------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 3591 @LENGTH@ 1
------------INS InfixExpression@@i < roles.length @TO@ ForStatement@@for (int i=0; i < roles.length; i++) {  if (roles[i].equals(headerRole)) {    return true;  }} @AT@ 3594 @LENGTH@ 16
---------------INS SimpleName@@i @TO@ InfixExpression@@i < roles.length @AT@ 3594 @LENGTH@ 1
---------------INS Operator@@< @TO@ InfixExpression@@i < roles.length @AT@ 3595 @LENGTH@ 1
---------------INS QualifiedName@@roles.length @TO@ InfixExpression@@i < roles.length @AT@ 3598 @LENGTH@ 12
------------------INS SimpleName@@roles @TO@ QualifiedName@@roles.length @AT@ 3598 @LENGTH@ 5
------------------INS SimpleName@@length @TO@ QualifiedName@@roles.length @AT@ 3604 @LENGTH@ 6
------------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < roles.length; i++) {  if (roles[i].equals(headerRole)) {    return true;  }} @AT@ 3612 @LENGTH@ 3
---------------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 3612 @LENGTH@ 1
---------------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 3614 @LENGTH@ 2
------------INS IfStatement@@if (roles[i].equals(headerRole)) {  return true;} @TO@ ForStatement@@for (int i=0; i < roles.length; i++) {  if (roles[i].equals(headerRole)) {    return true;  }} @AT@ 3635 @LENGTH@ 85
---------------INS MethodInvocation@@roles[i].equals(headerRole) @TO@ IfStatement@@if (roles[i].equals(headerRole)) {  return true;} @AT@ 3639 @LENGTH@ 27
------------------INS ArrayAccess@@roles[i] @TO@ MethodInvocation@@roles[i].equals(headerRole) @AT@ 3639 @LENGTH@ 8
---------------------INS SimpleName@@roles @TO@ ArrayAccess@@roles[i] @AT@ 3639 @LENGTH@ 5
---------------------INS SimpleName@@i @TO@ ArrayAccess@@roles[i] @AT@ 3645 @LENGTH@ 1
------------------INS SimpleName@@MethodName:equals:[headerRole] @TO@ MethodInvocation@@roles[i].equals(headerRole) @AT@ 3648 @LENGTH@ 18
---------------------INS SimpleName@@headerRole @TO@ SimpleName@@MethodName:equals:[headerRole] @AT@ 3655 @LENGTH@ 10
---------------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (roles[i].equals(headerRole)) {  return true;} @AT@ 3668 @LENGTH@ 52
------------------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 3690 @LENGTH@ 12
---------------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 3697 @LENGTH@ 4
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@private, boolean, MethodName:shouldProcess, String headerRole, String[] roles, boolean isUltimateDestination,  @AT@ 3753 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3760 @LENGTH@ 5


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[public]SimpleJobIdentifier, [JobIdentifier] @AT@ 1636 @LENGTH@ 79
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1636 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1643 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1647 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:HashCodeBuilder.reflectionHashCode(this) @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1663 @LENGTH@ 48
------INS MethodInvocation@@HashCodeBuilder.reflectionHashCode(this) @TO@ ReturnStatement@@MethodInvocation:HashCodeBuilder.reflectionHashCode(this) @AT@ 1670 @LENGTH@ 40
---------INS SimpleName@@Name:HashCodeBuilder @TO@ MethodInvocation@@HashCodeBuilder.reflectionHashCode(this) @AT@ 1670 @LENGTH@ 15
---------INS SimpleName@@MethodName:reflectionHashCode:[this] @TO@ MethodInvocation@@HashCodeBuilder.reflectionHashCode(this) @AT@ 1686 @LENGTH@ 24
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:reflectionHashCode:[this] @AT@ 1705 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(this.key,"A Key is required so CasAuthenticationProvider can identify tokens it previously authenticated") @TO@ MethodInvocation:Assert.hasText(this.key,"A Key is required so CasAuthenticationProvider can identify tokens it previously authenticated") @AT@ 3280 @LENGTH@ 123
---UPD MethodInvocation@@Assert.notNull(this.key,"A Key is required so CasAuthenticationProvider can identify tokens it previously authenticated") @TO@ Assert.hasText(this.key,"A Key is required so CasAuthenticationProvider can identify tokens it previously authenticated") @AT@ 3280 @LENGTH@ 122
------UPD SimpleName@@MethodName:notNull:[this.key, "A Key is required so CasAuthenticationProvider can identify tokens it previously authenticated"] @TO@ MethodName:hasText:[this.key, "A Key is required so CasAuthenticationProvider can identify tokens it previously authenticated"] @AT@ 3287 @LENGTH@ 115


UPD VariableDeclarationStatement@@Class fromType=Object.class; @TO@ Class fromType=null; @AT@ 3845 @LENGTH@ 30
---UPD VariableDeclarationFragment@@fromType=Object.class @TO@ fromType=null @AT@ 3851 @LENGTH@ 23
------DEL TypeLiteral@@Object.class @AT@ 3862 @LENGTH@ 12
------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@fromType=Object.class @AT@ 4050 @LENGTH@ 4


UPD FieldDeclaration@@private, long, [period=-1] @TO@ private, long, [period=1000] @AT@ 1561 @LENGTH@ 25
---UPD VariableDeclarationFragment@@period=-1 @TO@ period=1000 @AT@ 1574 @LENGTH@ 11
------INS NumberLiteral@@1000 @TO@ VariableDeclarationFragment@@period=-1 @AT@ 1583 @LENGTH@ 4
------DEL PrefixExpression@@-1 @AT@ 1583 @LENGTH@ 2
---------DEL Operator@@- @AT@ 1583 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 1584 @LENGTH@ 1


UPD ReturnStatement@@ClassInstanceCreation:new XmppExchange(getContext(),getPattern(),binding) @TO@ ClassInstanceCreation:new XmppExchange(this,binding) @AT@ 2160 @LENGTH@ 61
---UPD ClassInstanceCreation@@XmppExchange[getContext(), getPattern(), binding] @TO@ XmppExchange[this, binding] @AT@ 2167 @LENGTH@ 53
------DEL MethodInvocation@@MethodName:getContext:[] @AT@ 2184 @LENGTH@ 12
------DEL MethodInvocation@@MethodName:getPattern:[] @AT@ 2198 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ClassInstanceCreation@@XmppExchange[getContext(), getPattern(), binding] @AT@ 2317 @LENGTH@ 4


INS MethodDeclaration@@public, DistinguishedName, MethodName:append, String key, String value,  @TO@ TypeDeclaration@@[public]DistinguishedName, [Name] @AT@ 11149 @LENGTH@ 113
---INS Modifier@@public @TO@ MethodDeclaration@@public, DistinguishedName, MethodName:append, String key, String value,  @AT@ 11149 @LENGTH@ 6
---INS SimpleType@@DistinguishedName @TO@ MethodDeclaration@@public, DistinguishedName, MethodName:append, String key, String value,  @AT@ 11156 @LENGTH@ 17
---INS SimpleName@@MethodName:append @TO@ MethodDeclaration@@public, DistinguishedName, MethodName:append, String key, String value,  @AT@ 11174 @LENGTH@ 6
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@public, DistinguishedName, MethodName:append, String key, String value,  @AT@ 11181 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 11181 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 11188 @LENGTH@ 3
---INS SingleVariableDeclaration@@String value @TO@ MethodDeclaration@@public, DistinguishedName, MethodName:append, String key, String value,  @AT@ 11193 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String value @AT@ 11193 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@String value @AT@ 11200 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:add(key,value) @TO@ MethodDeclaration@@public, DistinguishedName, MethodName:append, String key, String value,  @AT@ 11217 @LENGTH@ 16
------INS MethodInvocation@@add(key,value) @TO@ ExpressionStatement@@MethodInvocation:add(key,value) @AT@ 11217 @LENGTH@ 15
---------INS SimpleName@@MethodName:add:[key, value] @TO@ MethodInvocation@@add(key,value) @AT@ 11217 @LENGTH@ 15
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:add:[key, value] @AT@ 11221 @LENGTH@ 3
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:add:[key, value] @AT@ 11226 @LENGTH@ 5
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, DistinguishedName, MethodName:append, String key, String value,  @AT@ 11243 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 11250 @LENGTH@ 4


UPD VariableDeclarationStatement@@ClassLoader newLoader=createClassLoader(oldClassLoader); @TO@ ClassLoader newLoader=createClassLoader(null); @AT@ 2924 @LENGTH@ 58
---UPD VariableDeclarationFragment@@newLoader=createClassLoader(oldClassLoader) @TO@ newLoader=createClassLoader(null) @AT@ 2936 @LENGTH@ 45
------UPD MethodInvocation@@createClassLoader(oldClassLoader) @TO@ createClassLoader(null) @AT@ 2948 @LENGTH@ 33
---------UPD SimpleName@@MethodName:createClassLoader:[oldClassLoader] @TO@ MethodName:createClassLoader:[null] @AT@ 2948 @LENGTH@ 33
------------DEL SimpleName@@oldClassLoader @AT@ 2966 @LENGTH@ 14
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createClassLoader:[oldClassLoader] @AT@ 2966 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:activityState.setEscalationLevel(escalateLevel + 1) @TO@ MethodInvocation:activityState.setTimeOverdue(null) @AT@ 4879 @LENGTH@ 52
---UPD MethodInvocation@@activityState.setEscalationLevel(escalateLevel + 1) @TO@ activityState.setTimeOverdue(null) @AT@ 4879 @LENGTH@ 51
------UPD SimpleName@@MethodName:setEscalationLevel:[escalateLevel + 1] @TO@ MethodName:setTimeOverdue:[null] @AT@ 4893 @LENGTH@ 37
---------DEL InfixExpression@@escalateLevel + 1 @AT@ 4912 @LENGTH@ 17
------------DEL SimpleName@@escalateLevel @AT@ 4912 @LENGTH@ 13
------------DEL Operator@@+ @AT@ 4925 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 4928 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setEscalationLevel:[escalateLevel + 1] @AT@ 5067 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testEquals,  @TO@ TypeDeclaration@@[public]SimpleJobIdentifierTests, TestCase @AT@ 1698 @LENGTH@ 145
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEquals,  @AT@ 1698 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEquals,  @AT@ 1705 @LENGTH@ 4
---INS SimpleName@@MethodName:testEquals @TO@ MethodDeclaration@@public, void, MethodName:testEquals,  @AT@ 1710 @LENGTH@ 10
---INS VariableDeclarationStatement@@SimpleJobIdentifier testIdentifier=new SimpleJobIdentifier("foo"); @TO@ MethodDeclaration@@public, void, MethodName:testEquals,  @AT@ 1727 @LENGTH@ 68
------INS SimpleType@@SimpleJobIdentifier @TO@ VariableDeclarationStatement@@SimpleJobIdentifier testIdentifier=new SimpleJobIdentifier("foo"); @AT@ 1727 @LENGTH@ 19
------INS VariableDeclarationFragment@@testIdentifier=new SimpleJobIdentifier("foo") @TO@ VariableDeclarationStatement@@SimpleJobIdentifier testIdentifier=new SimpleJobIdentifier("foo"); @AT@ 1747 @LENGTH@ 47
---------INS SimpleName@@testIdentifier @TO@ VariableDeclarationFragment@@testIdentifier=new SimpleJobIdentifier("foo") @AT@ 1747 @LENGTH@ 14
---------INS ClassInstanceCreation@@SimpleJobIdentifier["foo"] @TO@ VariableDeclarationFragment@@testIdentifier=new SimpleJobIdentifier("foo") @AT@ 1764 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@SimpleJobIdentifier["foo"] @AT@ 1764 @LENGTH@ 3
------------INS SimpleType@@SimpleJobIdentifier @TO@ ClassInstanceCreation@@SimpleJobIdentifier["foo"] @AT@ 1768 @LENGTH@ 19
------------INS StringLiteral@@"foo" @TO@ ClassInstanceCreation@@SimpleJobIdentifier["foo"] @AT@ 1788 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(testIdentifier,identifier) @TO@ MethodDeclaration@@public, void, MethodName:testEquals,  @AT@ 1799 @LENGTH@ 40
------INS MethodInvocation@@assertEquals(testIdentifier,identifier) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(testIdentifier,identifier) @AT@ 1799 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertEquals:[testIdentifier, identifier] @TO@ MethodInvocation@@assertEquals(testIdentifier,identifier) @AT@ 1799 @LENGTH@ 39
------------INS SimpleName@@testIdentifier @TO@ SimpleName@@MethodName:assertEquals:[testIdentifier, identifier] @AT@ 1812 @LENGTH@ 14
------------INS SimpleName@@identifier @TO@ SimpleName@@MethodName:assertEquals:[testIdentifier, identifier] @AT@ 1827 @LENGTH@ 10


UPD EnhancedForStatement@@for (Map.Entry<String,Object> entry : propertyEntries) {  transformer.setParameter(entry.getKey(),entry.getValue());} @TO@ for (Map.Entry<String,Object> entry : propertyEntries) {  String key=entry.getKey();  Object value=entry.getValue();  if (value != null) {    transformer.setParameter(key,value);  }} @AT@ 7666 @LENGTH@ 139
---DEL ExpressionStatement@@MethodInvocation:transformer.setParameter(entry.getKey(),entry.getValue()) @AT@ 7736 @LENGTH@ 59
------DEL MethodInvocation@@transformer.setParameter(entry.getKey(),entry.getValue()) @AT@ 7736 @LENGTH@ 58
---------DEL SimpleName@@Name:transformer @AT@ 7736 @LENGTH@ 11
---------DEL SimpleName@@MethodName:setParameter:[entry.getKey(), entry.getValue()] @AT@ 7748 @LENGTH@ 46
------------DEL MethodInvocation@@entry.getKey() @AT@ 7761 @LENGTH@ 14
------------DEL MethodInvocation@@entry.getValue() @AT@ 7777 @LENGTH@ 16
---INS VariableDeclarationStatement@@String key=entry.getKey(); @TO@ EnhancedForStatement@@for (Map.Entry<String,Object> entry : propertyEntries) {  transformer.setParameter(entry.getKey(),entry.getValue());} @AT@ 7736 @LENGTH@ 28
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key=entry.getKey(); @AT@ 7736 @LENGTH@ 6
------INS VariableDeclarationFragment@@key=entry.getKey() @TO@ VariableDeclarationStatement@@String key=entry.getKey(); @AT@ 7743 @LENGTH@ 20
---------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=entry.getKey() @AT@ 7743 @LENGTH@ 3
---------INS MethodInvocation@@entry.getKey() @TO@ VariableDeclarationFragment@@key=entry.getKey() @AT@ 7749 @LENGTH@ 14
------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 7761 @LENGTH@ 5
------------MOV SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 7767 @LENGTH@ 8
---INS VariableDeclarationStatement@@Object value=entry.getValue(); @TO@ EnhancedForStatement@@for (Map.Entry<String,Object> entry : propertyEntries) {  transformer.setParameter(entry.getKey(),entry.getValue());} @AT@ 7777 @LENGTH@ 32
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value=entry.getValue(); @AT@ 7777 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=entry.getValue() @TO@ VariableDeclarationStatement@@Object value=entry.getValue(); @AT@ 7784 @LENGTH@ 24
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=entry.getValue() @AT@ 7784 @LENGTH@ 5
---------INS MethodInvocation@@entry.getValue() @TO@ VariableDeclarationFragment@@value=entry.getValue() @AT@ 7792 @LENGTH@ 16
------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 7777 @LENGTH@ 5
------------MOV SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 7783 @LENGTH@ 10
---INS IfStatement@@if (value != null) {  transformer.setParameter(key,value);} @TO@ EnhancedForStatement@@for (Map.Entry<String,Object> entry : propertyEntries) {  transformer.setParameter(entry.getKey(),entry.getValue());} @AT@ 7822 @LENGTH@ 88
------INS InfixExpression@@value != null @TO@ IfStatement@@if (value != null) {  transformer.setParameter(key,value);} @AT@ 7826 @LENGTH@ 13
---------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 7826 @LENGTH@ 5
---------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 7831 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 7835 @LENGTH@ 4
------INS Block@@ThenBody:{  transformer.setParameter(key,value);} @TO@ IfStatement@@if (value != null) {  transformer.setParameter(key,value);} @AT@ 7841 @LENGTH@ 69
---------INS ExpressionStatement@@MethodInvocation:transformer.setParameter(key,value) @TO@ Block@@ThenBody:{  transformer.setParameter(key,value);} @AT@ 7859 @LENGTH@ 37
------------INS MethodInvocation@@transformer.setParameter(key,value) @TO@ ExpressionStatement@@MethodInvocation:transformer.setParameter(key,value) @AT@ 7859 @LENGTH@ 36
---------------INS SimpleName@@Name:transformer @TO@ MethodInvocation@@transformer.setParameter(key,value) @AT@ 7859 @LENGTH@ 11
---------------INS SimpleName@@MethodName:setParameter:[key, value] @TO@ MethodInvocation@@transformer.setParameter(key,value) @AT@ 7871 @LENGTH@ 24
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:setParameter:[key, value] @AT@ 7884 @LENGTH@ 3
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:setParameter:[key, value] @AT@ 7889 @LENGTH@ 5


UPD MethodDeclaration@@protected, abstract, T, MethodName:doMapFromContext, DirContextOperations operations,  @TO@ protected, abstract, T, MethodName:doMapFromContext, DirContextOperations ctx,  @AT@ 1798 @LENGTH@ 71
---UPD SingleVariableDeclaration@@DirContextOperations operations @TO@ DirContextOperations ctx @AT@ 1836 @LENGTH@ 31
------UPD SimpleName@@operations @TO@ ctx @AT@ 1857 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:expect(mimeContainer.getAttachment("cid:6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws")).andReturn(dataHandler) @TO@ MethodInvocation:expect(mimeContainer.getAttachment("<6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws>")).andReturn(dataHandler) @AT@ 5512 @LENGTH@ 174
---UPD MethodInvocation@@expect(mimeContainer.getAttachment("cid:6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws")).andReturn(dataHandler) @TO@ expect(mimeContainer.getAttachment("<6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws>")).andReturn(dataHandler) @AT@ 5512 @LENGTH@ 173
------UPD MethodInvocation@@MethodName:expect:[mimeContainer.getAttachment("cid:6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws")] @TO@ MethodName:expect:[mimeContainer.getAttachment("<6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws>")] @AT@ 5512 @LENGTH@ 133
---------UPD MethodInvocation@@mimeContainer.getAttachment("cid:6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws") @TO@ mimeContainer.getAttachment("<6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws>") @AT@ 5519 @LENGTH@ 125
------------UPD SimpleName@@MethodName:getAttachment:["cid:6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws"] @TO@ MethodName:getAttachment:["<6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws>"] @AT@ 5533 @LENGTH@ 111
---------------UPD StringLiteral@@"cid:6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws" @TO@ "<6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws>" @AT@ 5564 @LENGTH@ 79


DEL ExpressionStatement@@Assignment:ftpUrl="ftp://admin@localhost:20011/tmp2/camel?password=admin" @AT@ 1221 @LENGTH@ 65
---DEL Assignment@@ftpUrl="ftp://admin@localhost:20011/tmp2/camel?password=admin" @AT@ 1221 @LENGTH@ 64
------DEL SimpleName@@ftpUrl @AT@ 1221 @LENGTH@ 6
------DEL Operator@@= @AT@ 1227 @LENGTH@ 1
------DEL StringLiteral@@"ftp://admin@localhost:20011/tmp2/camel?password=admin" @AT@ 1230 @LENGTH@ 55


UPD FieldDeclaration@@protected, TypeConverter, [converter=new DefaultTypeConverter()] @TO@ protected, TypeConverter, [converter=new DefaultTypeConverter(new ReflectionInjector())] @AT@ 1438 @LENGTH@ 63
---UPD VariableDeclarationFragment@@converter=new DefaultTypeConverter() @TO@ converter=new DefaultTypeConverter(new ReflectionInjector()) @AT@ 1462 @LENGTH@ 38
------UPD ClassInstanceCreation@@DefaultTypeConverter[] @TO@ DefaultTypeConverter[new ReflectionInjector()] @AT@ 1474 @LENGTH@ 26
---------INS ClassInstanceCreation@@ReflectionInjector[] @TO@ ClassInstanceCreation@@DefaultTypeConverter[] @AT@ 1548 @LENGTH@ 24
------------INS New@@new @TO@ ClassInstanceCreation@@ReflectionInjector[] @AT@ 1548 @LENGTH@ 3
------------INS SimpleType@@ReflectionInjector @TO@ ClassInstanceCreation@@ReflectionInjector[] @AT@ 1552 @LENGTH@ 18


INS MethodDeclaration@@public, synchronized, Object, MethodName:next,  @TO@ TypeDeclaration@@[protected, static]TradeItemProvider, InputSourceItemProvider @AT@ 2003 @LENGTH@ 63
---INS Modifier@@public @TO@ MethodDeclaration@@public, synchronized, Object, MethodName:next,  @AT@ 2003 @LENGTH@ 6
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, synchronized, Object, MethodName:next,  @AT@ 2010 @LENGTH@ 12
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, synchronized, Object, MethodName:next,  @AT@ 2023 @LENGTH@ 6
---INS SimpleName@@MethodName:next @TO@ MethodDeclaration@@public, synchronized, Object, MethodName:next,  @AT@ 2030 @LENGTH@ 4
---INS ReturnStatement@@SuperMethodInvocation:super.next() @TO@ MethodDeclaration@@public, synchronized, Object, MethodName:next,  @AT@ 2042 @LENGTH@ 20
------INS SuperMethodInvocation@@super.next() @TO@ ReturnStatement@@SuperMethodInvocation:super.next() @AT@ 2049 @LENGTH@ 12
---------INS SimpleName@@MethodName:next:[] @TO@ SuperMethodInvocation@@super.next() @AT@ 2055 @LENGTH@ 4


UPD MethodDeclaration@@private, String, MethodName:getGroupSearchBase,  @TO@ protected, String, MethodName:getGroupSearchBase,  @AT@ 11847 @LENGTH@ 75
---UPD Modifier@@private @TO@ protected @AT@ 11847 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:context.getRenderKit().getResponseStateManager().writeState(context,state) @AT@ 2253 @LENGTH@ 76
---DEL MethodInvocation@@context.getRenderKit().getResponseStateManager().writeState(context,state) @AT@ 2253 @LENGTH@ 75
------DEL MethodInvocation@@MethodName:getResponseStateManager:[] @AT@ 2253 @LENGTH@ 48
------DEL MethodInvocation@@MethodName:getRenderKit:[] @AT@ 2253 @LENGTH@ 22
------DEL SimpleName@@Name:context @AT@ 2253 @LENGTH@ 7
------DEL SimpleName@@MethodName:writeState:[context, state] @AT@ 2302 @LENGTH@ 26
---------DEL SimpleName@@context @AT@ 2313 @LENGTH@ 7
---------DEL SimpleName@@state @AT@ 2322 @LENGTH@ 5


INS MethodDeclaration@@Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateReceiver, SoapHeaderException,  @TO@ TypeDeclaration@@[public]Soap12Header, [SoapHeader] @AT@ 2545 @LENGTH@ 102
---INS SimpleType@@Iterator @TO@ MethodDeclaration@@Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateReceiver, SoapHeaderException,  @AT@ 2536 @LENGTH@ 8
---INS SimpleName@@MethodName:examineHeaderElementsToProcess @TO@ MethodDeclaration@@Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateReceiver, SoapHeaderException,  @AT@ 2545 @LENGTH@ 30
---INS SingleVariableDeclaration@@String[] roles @TO@ MethodDeclaration@@Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateReceiver, SoapHeaderException,  @AT@ 2576 @LENGTH@ 14
------INS ArrayType@@String[] @TO@ SingleVariableDeclaration@@String[] roles @AT@ 2576 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 2576 @LENGTH@ 6
------INS SimpleName@@roles @TO@ SingleVariableDeclaration@@String[] roles @AT@ 2585 @LENGTH@ 5
---INS SingleVariableDeclaration@@boolean isUltimateReceiver @TO@ MethodDeclaration@@Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateReceiver, SoapHeaderException,  @AT@ 2592 @LENGTH@ 26
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isUltimateReceiver @AT@ 2592 @LENGTH@ 7
------INS SimpleName@@isUltimateReceiver @TO@ SingleVariableDeclaration@@boolean isUltimateReceiver @AT@ 2600 @LENGTH@ 18
---INS SimpleType@@SoapHeaderException @TO@ MethodDeclaration@@Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateReceiver, SoapHeaderException,  @AT@ 2627 @LENGTH@ 19


DEL SuperConstructorInvocation@@super();
 @AT@ 1562 @LENGTH@ 8


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=2953386084409312312L] @TO@ TypeDeclaration@@[public]ParsingException, RuntimeException @AT@ 888 @LENGTH@ 66
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=2953386084409312312L] @AT@ 888 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=2953386084409312312L] @AT@ 896 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=2953386084409312312L] @AT@ 903 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=2953386084409312312L] @AT@ 909 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=2953386084409312312L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=2953386084409312312L] @AT@ 914 @LENGTH@ 39
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=2953386084409312312L @AT@ 914 @LENGTH@ 16
------INS NumberLiteral@@2953386084409312312L @TO@ VariableDeclarationFragment@@serialVersionUID=2953386084409312312L @AT@ 933 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:assertTrue(cle.getCause() instanceof SAXParseException) @TO@ MethodInvocation:assertTrue("Unexpected cause: " + cle.getCause(),cle.getCause() instanceof SAXException) @AT@ 8170 @LENGTH@ 56
---UPD MethodInvocation@@assertTrue(cle.getCause() instanceof SAXParseException) @TO@ assertTrue("Unexpected cause: " + cle.getCause(),cle.getCause() instanceof SAXException) @AT@ 8170 @LENGTH@ 55
------UPD SimpleName@@MethodName:assertTrue:[cle.getCause() instanceof SAXParseException] @TO@ MethodName:assertTrue:["Unexpected cause: " + cle.getCause(), cle.getCause() instanceof SAXException] @AT@ 8170 @LENGTH@ 55
---------INS InfixExpression@@"Unexpected cause: " + cle.getCause() @TO@ SimpleName@@MethodName:assertTrue:[cle.getCause() instanceof SAXParseException] @AT@ 8176 @LENGTH@ 37
------------INS StringLiteral@@"Unexpected cause: " @TO@ InfixExpression@@"Unexpected cause: " + cle.getCause() @AT@ 8176 @LENGTH@ 20
------------INS Operator@@+ @TO@ InfixExpression@@"Unexpected cause: " + cle.getCause() @AT@ 8196 @LENGTH@ 1
------------INS MethodInvocation@@cle.getCause() @TO@ InfixExpression@@"Unexpected cause: " + cle.getCause() @AT@ 8199 @LENGTH@ 14
---------------INS SimpleName@@Name:cle @TO@ MethodInvocation@@cle.getCause() @AT@ 8199 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@cle.getCause() @AT@ 8203 @LENGTH@ 10
---------UPD InstanceofExpression@@cle.getCause() instanceof SAXParseException @TO@ cle.getCause() instanceof SAXException @AT@ 8181 @LENGTH@ 43
------------UPD SimpleType@@SAXParseException @TO@ SAXException @AT@ 8207 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:props.setProperty((String)names.get(i),tokens[i]) @TO@ MethodInvocation:props.setProperty((String)names.get(i),readAndTrim(i)) @AT@ 16563 @LENGTH@ 52
---UPD MethodInvocation@@props.setProperty((String)names.get(i),tokens[i]) @TO@ props.setProperty((String)names.get(i),readAndTrim(i)) @AT@ 16563 @LENGTH@ 51
------UPD SimpleName@@MethodName:setProperty:[(String)names.get(i), tokens[i]] @TO@ MethodName:setProperty:[(String)names.get(i), readAndTrim(i)] @AT@ 16569 @LENGTH@ 45
---------DEL ArrayAccess@@tokens[i] @AT@ 16604 @LENGTH@ 9
------------DEL SimpleName@@tokens @AT@ 16604 @LENGTH@ 6
------------DEL SimpleName@@i @AT@ 16611 @LENGTH@ 1
---------INS MethodInvocation@@readAndTrim(i) @TO@ SimpleName@@MethodName:setProperty:[(String)names.get(i), tokens[i]] @AT@ 16605 @LENGTH@ 14
------------INS SimpleName@@MethodName:readAndTrim:[i] @TO@ MethodInvocation@@readAndTrim(i) @AT@ 16605 @LENGTH@ 14
---------------INS SimpleName@@i @TO@ SimpleName@@MethodName:readAndTrim:[i] @AT@ 16617 @LENGTH@ 1


UPD FieldDeclaration@@private, Cache, [cache] @TO@ private, Ehcache, [cache] @AT@ 1786 @LENGTH@ 20
---UPD SimpleType@@Cache @TO@ Ehcache @AT@ 1794 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertNull(isDebugString) @TO@ MethodInvocation:assertNull("Header should be null but is: " + isDebugString,isDebugString) @AT@ 1801 @LENGTH@ 26
---UPD MethodInvocation@@assertNull(isDebugString) @TO@ assertNull("Header should be null but is: " + isDebugString,isDebugString) @AT@ 1801 @LENGTH@ 25
------UPD SimpleName@@MethodName:assertNull:[isDebugString] @TO@ MethodName:assertNull:["Header should be null but is: " + isDebugString, isDebugString] @AT@ 1801 @LENGTH@ 25
---------INS InfixExpression@@"Header should be null but is: " + isDebugString @TO@ SimpleName@@MethodName:assertNull:[isDebugString] @AT@ 1812 @LENGTH@ 48
------------INS StringLiteral@@"Header should be null but is: " @TO@ InfixExpression@@"Header should be null but is: " + isDebugString @AT@ 1812 @LENGTH@ 32
------------INS Operator@@+ @TO@ InfixExpression@@"Header should be null but is: " + isDebugString @AT@ 1844 @LENGTH@ 1
------------INS SimpleName@@isDebugString @TO@ InfixExpression@@"Header should be null but is: " + isDebugString @AT@ 1847 @LENGTH@ 13
---------DEL SimpleName@@isDebugString @AT@ 1812 @LENGTH@ 13
---------INS SimpleName@@isDebugString @TO@ SimpleName@@MethodName:assertNull:[isDebugString] @AT@ 1862 @LENGTH@ 13


DEL ExpressionStatement@@MethodInvocation:exchange.throwException() @AT@ 3826 @LENGTH@ 26
---DEL MethodInvocation@@exchange.throwException() @AT@ 3826 @LENGTH@ 25
------DEL SimpleName@@Name:exchange @AT@ 3826 @LENGTH@ 8
------DEL SimpleName@@MethodName:throwException:[] @AT@ 3835 @LENGTH@ 16


INS MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, final String[] roles, final boolean isUltimateDestination, SoapHeaderException,  @TO@ TypeDeclaration@@AxiomSoap12Header, AxiomSoapHeader[Soap12Header] @AT@ 3270 @LENGTH@ 672
---INS Modifier@@public @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, final String[] roles, final boolean isUltimateDestination, SoapHeaderException,  @AT@ 3270 @LENGTH@ 6
---INS SimpleType@@Iterator @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, final String[] roles, final boolean isUltimateDestination, SoapHeaderException,  @AT@ 3277 @LENGTH@ 8
---INS SimpleName@@MethodName:examineHeaderElementsToProcess @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, final String[] roles, final boolean isUltimateDestination, SoapHeaderException,  @AT@ 3286 @LENGTH@ 30
---INS SingleVariableDeclaration@@final String[] roles @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, final String[] roles, final boolean isUltimateDestination, SoapHeaderException,  @AT@ 3317 @LENGTH@ 20
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String[] roles @AT@ 3317 @LENGTH@ 5
------INS ArrayType@@String[] @TO@ SingleVariableDeclaration@@final String[] roles @AT@ 3323 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 3323 @LENGTH@ 6
------INS SimpleName@@roles @TO@ SingleVariableDeclaration@@final String[] roles @AT@ 3332 @LENGTH@ 5
---INS SingleVariableDeclaration@@final boolean isUltimateDestination @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, final String[] roles, final boolean isUltimateDestination, SoapHeaderException,  @AT@ 3339 @LENGTH@ 35
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final boolean isUltimateDestination @AT@ 3339 @LENGTH@ 5
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@final boolean isUltimateDestination @AT@ 3345 @LENGTH@ 7
------INS SimpleName@@isUltimateDestination @TO@ SingleVariableDeclaration@@final boolean isUltimateDestination @AT@ 3353 @LENGTH@ 21
---INS SimpleType@@SoapHeaderException @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, final String[] roles, final boolean isUltimateDestination, SoapHeaderException,  @AT@ 3395 @LENGTH@ 19
---INS VariableDeclarationStatement@@RolePlayer rolePlayer=null; @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, final String[] roles, final boolean isUltimateDestination, SoapHeaderException,  @AT@ 3425 @LENGTH@ 29
------INS SimpleType@@RolePlayer @TO@ VariableDeclarationStatement@@RolePlayer rolePlayer=null; @AT@ 3425 @LENGTH@ 10
------INS VariableDeclarationFragment@@rolePlayer=null @TO@ VariableDeclarationStatement@@RolePlayer rolePlayer=null; @AT@ 3436 @LENGTH@ 17
---------INS SimpleName@@rolePlayer @TO@ VariableDeclarationFragment@@rolePlayer=null @AT@ 3436 @LENGTH@ 10
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@rolePlayer=null @AT@ 3449 @LENGTH@ 4
---INS IfStatement@@if (!ObjectUtils.isEmpty(roles)) {  rolePlayer=new RolePlayer(){    public List getRoles(){      return Arrays.asList(roles);    }    public boolean isUltimateDestination(){      return isUltimateDestination;    }  };} @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, final String[] roles, final boolean isUltimateDestination, SoapHeaderException,  @AT@ 3463 @LENGTH@ 338
------INS PrefixExpression@@!ObjectUtils.isEmpty(roles) @TO@ IfStatement@@if (!ObjectUtils.isEmpty(roles)) {  rolePlayer=new RolePlayer(){    public List getRoles(){      return Arrays.asList(roles);    }    public boolean isUltimateDestination(){      return isUltimateDestination;    }  };} @AT@ 3467 @LENGTH@ 27
---------INS Operator@@! @TO@ PrefixExpression@@!ObjectUtils.isEmpty(roles) @AT@ 3467 @LENGTH@ 1
---------INS MethodInvocation@@ObjectUtils.isEmpty(roles) @TO@ PrefixExpression@@!ObjectUtils.isEmpty(roles) @AT@ 3468 @LENGTH@ 26
------------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.isEmpty(roles) @AT@ 3468 @LENGTH@ 11
------------INS SimpleName@@MethodName:isEmpty:[roles] @TO@ MethodInvocation@@ObjectUtils.isEmpty(roles) @AT@ 3480 @LENGTH@ 14
---------------INS SimpleName@@roles @TO@ SimpleName@@MethodName:isEmpty:[roles] @AT@ 3488 @LENGTH@ 5
------INS Block@@ThenBody:{  rolePlayer=new RolePlayer(){    public List getRoles(){      return Arrays.asList(roles);    }    public boolean isUltimateDestination(){      return isUltimateDestination;    }  };} @TO@ IfStatement@@if (!ObjectUtils.isEmpty(roles)) {  rolePlayer=new RolePlayer(){    public List getRoles(){      return Arrays.asList(roles);    }    public boolean isUltimateDestination(){      return isUltimateDestination;    }  };} @AT@ 3496 @LENGTH@ 305
---------INS ExpressionStatement@@Assignment:rolePlayer=new RolePlayer(){
  public List getRoles(){
    return Arrays.asList(roles);
  }
  public boolean isUltimateDestination(){
    return isUltimateDestination;
  }
}
 @TO@ Block@@ThenBody:{  rolePlayer=new RolePlayer(){    public List getRoles(){      return Arrays.asList(roles);    }    public boolean isUltimateDestination(){      return isUltimateDestination;    }  };} @AT@ 3510 @LENGTH@ 281
------------INS Assignment@@rolePlayer=new RolePlayer(){
  public List getRoles(){
    return Arrays.asList(roles);
  }
  public boolean isUltimateDestination(){
    return isUltimateDestination;
  }
}
 @TO@ ExpressionStatement@@Assignment:rolePlayer=new RolePlayer(){
  public List getRoles(){
    return Arrays.asList(roles);
  }
  public boolean isUltimateDestination(){
    return isUltimateDestination;
  }
}
 @AT@ 3510 @LENGTH@ 280
---------------INS SimpleName@@rolePlayer @TO@ Assignment@@rolePlayer=new RolePlayer(){
  public List getRoles(){
    return Arrays.asList(roles);
  }
  public boolean isUltimateDestination(){
    return isUltimateDestination;
  }
}
 @AT@ 3510 @LENGTH@ 10
---------------INS Operator@@= @TO@ Assignment@@rolePlayer=new RolePlayer(){
  public List getRoles(){
    return Arrays.asList(roles);
  }
  public boolean isUltimateDestination(){
    return isUltimateDestination;
  }
}
 @AT@ 3520 @LENGTH@ 1
---------------INS ClassInstanceCreation@@RolePlayer[] @TO@ Assignment@@rolePlayer=new RolePlayer(){
  public List getRoles(){
    return Arrays.asList(roles);
  }
  public boolean isUltimateDestination(){
    return isUltimateDestination;
  }
}
 @AT@ 3523 @LENGTH@ 267
------------------INS New@@new @TO@ ClassInstanceCreation@@RolePlayer[] @AT@ 3523 @LENGTH@ 3
------------------INS SimpleType@@RolePlayer @TO@ ClassInstanceCreation@@RolePlayer[] @AT@ 3527 @LENGTH@ 10
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@RolePlayer[] @AT@ 3540 @LENGTH@ 250
---------------------INS MethodDeclaration@@public, List, MethodName:getRoles,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3559 @LENGTH@ 91
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, List, MethodName:getRoles,  @AT@ 3559 @LENGTH@ 6
------------------------INS SimpleType@@List @TO@ MethodDeclaration@@public, List, MethodName:getRoles,  @AT@ 3566 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:getRoles @TO@ MethodDeclaration@@public, List, MethodName:getRoles,  @AT@ 3571 @LENGTH@ 8
------------------------INS ReturnStatement@@MethodInvocation:Arrays.asList(roles) @TO@ MethodDeclaration@@public, List, MethodName:getRoles,  @AT@ 3604 @LENGTH@ 28
---------------------------INS MethodInvocation@@Arrays.asList(roles) @TO@ ReturnStatement@@MethodInvocation:Arrays.asList(roles) @AT@ 3611 @LENGTH@ 20
------------------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(roles) @AT@ 3611 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:asList:[roles] @TO@ MethodInvocation@@Arrays.asList(roles) @AT@ 3618 @LENGTH@ 13
---------------------------------INS SimpleName@@roles @TO@ SimpleName@@MethodName:asList:[roles] @AT@ 3625 @LENGTH@ 5
---------------------INS MethodDeclaration@@public, boolean, MethodName:isUltimateDestination,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3668 @LENGTH@ 108
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isUltimateDestination,  @AT@ 3668 @LENGTH@ 6
------------------------INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isUltimateDestination,  @AT@ 3675 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:isUltimateDestination @TO@ MethodDeclaration@@public, boolean, MethodName:isUltimateDestination,  @AT@ 3683 @LENGTH@ 21
------------------------INS ReturnStatement@@SimpleName:isUltimateDestination @TO@ MethodDeclaration@@public, boolean, MethodName:isUltimateDestination,  @AT@ 3729 @LENGTH@ 29
---------------------------INS SimpleName@@isUltimateDestination @TO@ ReturnStatement@@SimpleName:isUltimateDestination @AT@ 3736 @LENGTH@ 21
---INS VariableDeclarationStatement@@Iterator result=getAxiomHeader().getHeadersToProcess(rolePlayer); @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, final String[] roles, final boolean isUltimateDestination, SoapHeaderException,  @AT@ 3810 @LENGTH@ 67
------INS SimpleType@@Iterator @TO@ VariableDeclarationStatement@@Iterator result=getAxiomHeader().getHeadersToProcess(rolePlayer); @AT@ 3810 @LENGTH@ 8
------INS VariableDeclarationFragment@@result=getAxiomHeader().getHeadersToProcess(rolePlayer) @TO@ VariableDeclarationStatement@@Iterator result=getAxiomHeader().getHeadersToProcess(rolePlayer); @AT@ 3819 @LENGTH@ 57
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=getAxiomHeader().getHeadersToProcess(rolePlayer) @AT@ 3819 @LENGTH@ 6
---------INS MethodInvocation@@getAxiomHeader().getHeadersToProcess(rolePlayer) @TO@ VariableDeclarationFragment@@result=getAxiomHeader().getHeadersToProcess(rolePlayer) @AT@ 3828 @LENGTH@ 48
------------INS MethodInvocation@@MethodName:getAxiomHeader:[] @TO@ MethodInvocation@@getAxiomHeader().getHeadersToProcess(rolePlayer) @AT@ 3828 @LENGTH@ 16
------------INS SimpleName@@MethodName:getHeadersToProcess:[rolePlayer] @TO@ MethodInvocation@@getAxiomHeader().getHeadersToProcess(rolePlayer) @AT@ 3845 @LENGTH@ 31
---------------INS SimpleName@@rolePlayer @TO@ SimpleName@@MethodName:getHeadersToProcess:[rolePlayer] @AT@ 3865 @LENGTH@ 10
---INS ReturnStatement@@ClassInstanceCreation:new AxiomSoapHeaderElementIterator(result) @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, final String[] roles, final boolean isUltimateDestination, SoapHeaderException,  @AT@ 3886 @LENGTH@ 50
------INS ClassInstanceCreation@@AxiomSoapHeaderElementIterator[result] @TO@ ReturnStatement@@ClassInstanceCreation:new AxiomSoapHeaderElementIterator(result) @AT@ 3893 @LENGTH@ 42
---------INS New@@new @TO@ ClassInstanceCreation@@AxiomSoapHeaderElementIterator[result] @AT@ 3893 @LENGTH@ 3
---------INS SimpleType@@AxiomSoapHeaderElementIterator @TO@ ClassInstanceCreation@@AxiomSoapHeaderElementIterator[result] @AT@ 3897 @LENGTH@ 30
---------INS SimpleName@@result @TO@ ClassInstanceCreation@@AxiomSoapHeaderElementIterator[result] @AT@ 3928 @LENGTH@ 6


DEL ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("Not yet implemented") @AT@ 4336 @LENGTH@ 63
---DEL ClassInstanceCreation@@UnsupportedOperationException["Not yet implemented"] @AT@ 4342 @LENGTH@ 56
------DEL New@@new @AT@ 4342 @LENGTH@ 3
------DEL SimpleType@@UnsupportedOperationException @AT@ 4346 @LENGTH@ 29
------DEL StringLiteral@@"Not yet implemented" @AT@ 4376 @LENGTH@ 21


UPD ReturnStatement@@ClassInstanceCreation:new SaajSoapHeader(saajMessage.getSOAPPart().getEnvelope().getHeader()) @TO@ ClassInstanceCreation:new SaajSoap11Header(saajMessage.getSOAPPart().getEnvelope().getHeader()) @AT@ 1203 @LENGTH@ 79
---UPD ClassInstanceCreation@@SaajSoapHeader[saajMessage.getSOAPPart().getEnvelope().getHeader()] @TO@ SaajSoap11Header[saajMessage.getSOAPPart().getEnvelope().getHeader()] @AT@ 1210 @LENGTH@ 71
------UPD SimpleType@@SaajSoapHeader @TO@ SaajSoap11Header @AT@ 1214 @LENGTH@ 14


DEL ReturnStatement@@ @AT@ 1674 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:getRoute().intercept(interceptor) @AT@ 5055 @LENGTH@ 34
---DEL MethodInvocation@@getRoute().intercept(interceptor) @AT@ 5055 @LENGTH@ 33
------DEL MethodInvocation@@MethodName:getRoute:[] @AT@ 5055 @LENGTH@ 10
------DEL SimpleName@@MethodName:intercept:[interceptor] @AT@ 5066 @LENGTH@ 22
---------DEL SimpleName@@interceptor @AT@ 5076 @LENGTH@ 11


UPD ReturnStatement@@ClassInstanceCreation:new AxiomSoapHeader(axiomHeader,getAxiomFactory()) @TO@ ClassInstanceCreation:new AxiomSoap11Header(axiomHeader,getAxiomFactory()) @AT@ 1389 @LENGTH@ 59
---UPD ClassInstanceCreation@@AxiomSoapHeader[axiomHeader, getAxiomFactory()] @TO@ AxiomSoap11Header[axiomHeader, getAxiomFactory()] @AT@ 1396 @LENGTH@ 51
------UPD SimpleType@@AxiomSoapHeader @TO@ AxiomSoap11Header @AT@ 1400 @LENGTH@ 15


UPD TypeDeclaration@@[public]ReflectionInjector, [Injector<T>] @TO@ [public]ReflectionInjector, [Injector] @AT@ 1171 @LENGTH@ 390
---INS SimpleType@@Injector @TO@ TypeDeclaration@@[public]ReflectionInjector, [Injector<T>] @AT@ 1214 @LENGTH@ 8
---DEL ParameterizedType@@Injector<T> @AT@ 1217 @LENGTH@ 11
------DEL SimpleType@@Injector @AT@ 1217 @LENGTH@ 8
------DEL SimpleType@@T @AT@ 1226 @LENGTH@ 1


UPD VariableDeclarationStatement@@ActivityBuilder purchaseOrder=activity("file:src/data/purchaseOrders?noop=true").correlate(xpath("/purchaseOrder/@id")); @TO@ ActivityBuilder purchaseOrder=activity("file:src/data/purchaseOrders?noop=true").correlate(xpath("/purchaseOrder/@id").stringResult()); @AT@ 1716 @LENGTH@ 139
---UPD VariableDeclarationFragment@@purchaseOrder=activity("file:src/data/purchaseOrders?noop=true").correlate(xpath("/purchaseOrder/@id")) @TO@ purchaseOrder=activity("file:src/data/purchaseOrders?noop=true").correlate(xpath("/purchaseOrder/@id").stringResult()) @AT@ 1732 @LENGTH@ 122
------UPD MethodInvocation@@activity("file:src/data/purchaseOrders?noop=true").correlate(xpath("/purchaseOrder/@id")) @TO@ activity("file:src/data/purchaseOrders?noop=true").correlate(xpath("/purchaseOrder/@id").stringResult()) @AT@ 1748 @LENGTH@ 106
---------UPD SimpleName@@MethodName:correlate:[xpath("/purchaseOrder/@id")] @TO@ MethodName:correlate:[xpath("/purchaseOrder/@id").stringResult()] @AT@ 1816 @LENGTH@ 38
------------UPD MethodInvocation@@xpath("/purchaseOrder/@id") @TO@ xpath("/purchaseOrder/@id").stringResult() @AT@ 1826 @LENGTH@ 27
---------------DEL SimpleName@@MethodName:xpath:["/purchaseOrder/@id"] @AT@ 1826 @LENGTH@ 27
------------------DEL StringLiteral@@"/purchaseOrder/@id" @AT@ 1832 @LENGTH@ 20
---------------INS MethodInvocation@@MethodName:xpath:["/purchaseOrder/@id"] @TO@ MethodInvocation@@xpath("/purchaseOrder/@id") @AT@ 1826 @LENGTH@ 27
------------------INS StringLiteral@@"/purchaseOrder/@id" @TO@ MethodInvocation@@MethodName:xpath:["/purchaseOrder/@id"] @AT@ 1832 @LENGTH@ 20
---------------INS SimpleName@@MethodName:stringResult:[] @TO@ MethodInvocation@@xpath("/purchaseOrder/@id") @AT@ 1854 @LENGTH@ 14


INS MethodDeclaration@@public, voidMethodName:JmsExchange, DefaultExchange parent, JmsBinding binding,  @TO@ TypeDeclaration@@[public]JmsExchange, DefaultExchange @AT@ 1715 @LENGTH@ 125
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:JmsExchange, DefaultExchange parent, JmsBinding binding,  @AT@ 1715 @LENGTH@ 6
---INS SimpleName@@MethodName:JmsExchange @TO@ MethodDeclaration@@public, voidMethodName:JmsExchange, DefaultExchange parent, JmsBinding binding,  @AT@ 1722 @LENGTH@ 11
---INS SingleVariableDeclaration@@DefaultExchange parent @TO@ MethodDeclaration@@public, voidMethodName:JmsExchange, DefaultExchange parent, JmsBinding binding,  @AT@ 1734 @LENGTH@ 22
------INS SimpleType@@DefaultExchange @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 1734 @LENGTH@ 15
------INS SimpleName@@parent @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 1750 @LENGTH@ 6
---INS SingleVariableDeclaration@@JmsBinding binding @TO@ MethodDeclaration@@public, voidMethodName:JmsExchange, DefaultExchange parent, JmsBinding binding,  @AT@ 1758 @LENGTH@ 18
------INS SimpleType@@JmsBinding @TO@ SingleVariableDeclaration@@JmsBinding binding @AT@ 1758 @LENGTH@ 10
------INS SimpleName@@binding @TO@ SingleVariableDeclaration@@JmsBinding binding @AT@ 1769 @LENGTH@ 7
---INS SuperConstructorInvocation@@super(parent);
 @TO@ MethodDeclaration@@public, voidMethodName:JmsExchange, DefaultExchange parent, JmsBinding binding,  @AT@ 1788 @LENGTH@ 14
------INS SimpleName@@parent @TO@ SuperConstructorInvocation@@super(parent);
 @AT@ 1794 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:this.binding=binding @TO@ MethodDeclaration@@public, voidMethodName:JmsExchange, DefaultExchange parent, JmsBinding binding,  @AT@ 1811 @LENGTH@ 23
------INS Assignment@@this.binding=binding @TO@ ExpressionStatement@@Assignment:this.binding=binding @AT@ 1811 @LENGTH@ 22
---------INS FieldAccess@@this.binding @TO@ Assignment@@this.binding=binding @AT@ 1811 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.binding @AT@ 1811 @LENGTH@ 4
------------INS SimpleName@@binding @TO@ FieldAccess@@this.binding @AT@ 1816 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.binding=binding @AT@ 1823 @LENGTH@ 1
---------INS SimpleName@@binding @TO@ Assignment@@this.binding=binding @AT@ 1826 @LENGTH@ 7


DEL MethodDeclaration@@public, List, MethodName:getInterceptors,  @AT@ 2609 @LENGTH@ 76
---DEL Modifier@@public @AT@ 2609 @LENGTH@ 6
---DEL SimpleType@@List @AT@ 2616 @LENGTH@ 4
---DEL SimpleName@@MethodName:getInterceptors @AT@ 2621 @LENGTH@ 15
---DEL ReturnStatement@@QualifiedName:Collections.EMPTY_LIST @AT@ 2649 @LENGTH@ 30
------DEL QualifiedName@@Collections.EMPTY_LIST @AT@ 2656 @LENGTH@ 22
---------DEL SimpleName@@Collections @AT@ 2656 @LENGTH@ 11
---------DEL SimpleName@@EMPTY_LIST @AT@ 2668 @LENGTH@ 10


UPD IfStatement@@if (previousOut != null && previousOut.getBody() != null) {  in.copyFrom(previousOut);} else {  in.copyFrom(previousExchange.getIn());} @TO@ if (previousOut != null) {  in.copyFrom(previousOut);} else {  in.copyFrom(previousExchange.getIn());} @AT@ 5862 @LENGTH@ 183
---DEL InfixExpression@@previousOut != null && previousOut.getBody() != null @AT@ 5866 @LENGTH@ 52
------DEL InfixExpression@@previousOut != null @AT@ 5866 @LENGTH@ 19
------DEL Operator@@&& @AT@ 5885 @LENGTH@ 2
------DEL InfixExpression@@previousOut.getBody() != null @AT@ 5889 @LENGTH@ 29
---------DEL MethodInvocation@@previousOut.getBody() @AT@ 5889 @LENGTH@ 21
------------DEL SimpleName@@Name:previousOut @AT@ 5889 @LENGTH@ 11
------------DEL SimpleName@@MethodName:getBody:[] @AT@ 5901 @LENGTH@ 9
---------DEL Operator@@!= @AT@ 5910 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 5914 @LENGTH@ 4
---INS InfixExpression@@previousOut != null @TO@ IfStatement@@if (previousOut != null && previousOut.getBody() != null) {  in.copyFrom(previousOut);} else {  in.copyFrom(previousExchange.getIn());} @AT@ 5866 @LENGTH@ 19
------MOV SimpleName@@previousOut @TO@ InfixExpression@@previousOut != null @AT@ 5866 @LENGTH@ 11
------MOV Operator@@!= @TO@ InfixExpression@@previousOut != null @AT@ 5877 @LENGTH@ 2
------MOV NullLiteral@@null @TO@ InfixExpression@@previousOut != null @AT@ 5881 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:header=new SaajSoapHeader(saajHeader) @TO@ Assignment:header=new SaajSoap11Header(saajHeader) @AT@ 2436 @LENGTH@ 40
---UPD Assignment@@header=new SaajSoapHeader(saajHeader) @TO@ header=new SaajSoap11Header(saajHeader) @AT@ 2436 @LENGTH@ 39
------UPD ClassInstanceCreation@@SaajSoapHeader[saajHeader] @TO@ SaajSoap11Header[saajHeader] @AT@ 2445 @LENGTH@ 30
---------UPD SimpleType@@SaajSoapHeader @TO@ SaajSoap11Header @AT@ 2449 @LENGTH@ 14


UPD MethodDeclaration@@public, void, MethodName:setCache, Cache cache,  @TO@ public, void, MethodName:setCache, Ehcache cache,  @AT@ 3339 @LENGTH@ 69
---UPD SingleVariableDeclaration@@Cache cache @TO@ Ehcache cache @AT@ 3360 @LENGTH@ 11
------UPD SimpleType@@Cache @TO@ Ehcache @AT@ 3360 @LENGTH@ 5


UPD IfStatement@@if (!SystemUtils.isJavaVersionAtLeast(1.5f)) {  return false;} @TO@ if (!SystemUtils.isJavaVersionAtLeast(JAVA_VERSION_1_5)) {  return false;} @AT@ 23117 @LENGTH@ 90
---UPD PrefixExpression@@!SystemUtils.isJavaVersionAtLeast(1.5f) @TO@ !SystemUtils.isJavaVersionAtLeast(JAVA_VERSION_1_5) @AT@ 23121 @LENGTH@ 39
------UPD MethodInvocation@@SystemUtils.isJavaVersionAtLeast(1.5f) @TO@ SystemUtils.isJavaVersionAtLeast(JAVA_VERSION_1_5) @AT@ 23122 @LENGTH@ 38
---------UPD SimpleName@@MethodName:isJavaVersionAtLeast:[1.5f] @TO@ MethodName:isJavaVersionAtLeast:[JAVA_VERSION_1_5] @AT@ 23134 @LENGTH@ 26
------------DEL NumberLiteral@@1.5f @AT@ 23155 @LENGTH@ 4
------------INS SimpleName@@JAVA_VERSION_1_5 @TO@ SimpleName@@MethodName:isJavaVersionAtLeast:[1.5f] @AT@ 23257 @LENGTH@ 16


INS MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, String file,  @TO@ TypeDeclaration@@[public, abstract]ContextTestSupport, TestSupport @AT@ 8798 @LENGTH@ 99
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, String file,  @AT@ 8798 @LENGTH@ 9
---INS Modifier@@static @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, String file,  @AT@ 8808 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, String file,  @AT@ 8815 @LENGTH@ 4
---INS SimpleName@@MethodName:recursiveDelete @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, String file,  @AT@ 8820 @LENGTH@ 15
---INS SingleVariableDeclaration@@String file @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, String file,  @AT@ 8836 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String file @AT@ 8836 @LENGTH@ 6
------INS SimpleName@@file @TO@ SingleVariableDeclaration@@String file @AT@ 8843 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:recursiveDelete(new File(file)) @TO@ MethodDeclaration@@protected, static, void, MethodName:recursiveDelete, String file,  @AT@ 8859 @LENGTH@ 32
------INS MethodInvocation@@recursiveDelete(new File(file)) @TO@ ExpressionStatement@@MethodInvocation:recursiveDelete(new File(file)) @AT@ 8859 @LENGTH@ 31
---------INS SimpleName@@MethodName:recursiveDelete:[new File(file)] @TO@ MethodInvocation@@recursiveDelete(new File(file)) @AT@ 8859 @LENGTH@ 31
------------INS ClassInstanceCreation@@File[file] @TO@ SimpleName@@MethodName:recursiveDelete:[new File(file)] @AT@ 8875 @LENGTH@ 14
---------------INS New@@new @TO@ ClassInstanceCreation@@File[file] @AT@ 8875 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[file] @AT@ 8879 @LENGTH@ 4
---------------INS SimpleName@@file @TO@ ClassInstanceCreation@@File[file] @AT@ 8884 @LENGTH@ 4


UPD TypeDeclaration@@[@XmlRootElement(name="intercept"), @XmlAccessorType(XmlAccessType.FIELD), public]InterceptType, OutputType @TO@ [@XmlRootElement(name="intercept"), @XmlAccessorType(XmlAccessType.FIELD), public]InterceptType, OutputType<ProcessorType> @AT@ 1293 @LENGTH@ 792
---INS ParameterizedType@@OutputType<ProcessorType> @TO@ TypeDeclaration@@[@XmlRootElement(name="intercept"), @XmlAccessorType(XmlAccessType.FIELD), public]InterceptType, OutputType @AT@ 1402 @LENGTH@ 25
------INS SimpleType@@OutputType @TO@ ParameterizedType@@OutputType<ProcessorType> @AT@ 1402 @LENGTH@ 10
------INS SimpleType@@ProcessorType @TO@ ParameterizedType@@OutputType<ProcessorType> @AT@ 1413 @LENGTH@ 13
---DEL SimpleType@@OutputType @AT@ 1402 @LENGTH@ 10


UPD FieldDeclaration@@protected, String, [uri="file:target/test-inbox"] @TO@ protected, String, [uri="file:target/test-default-inbox"] @AT@ 1140 @LENGTH@ 48
---UPD VariableDeclarationFragment@@uri="file:target/test-inbox" @TO@ uri="file:target/test-default-inbox" @AT@ 1157 @LENGTH@ 30
------UPD StringLiteral@@"file:target/test-inbox" @TO@ "file:target/test-default-inbox" @AT@ 1163 @LENGTH@ 24


INS FieldDeclaration@@private, static, final, float, [JAVA_VERSION_1_5=1.5f] @TO@ TypeDeclaration@@[public, final]PropertyConverter,  @AT@ 2456 @LENGTH@ 51
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, float, [JAVA_VERSION_1_5=1.5f] @AT@ 2456 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, float, [JAVA_VERSION_1_5=1.5f] @AT@ 2464 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, float, [JAVA_VERSION_1_5=1.5f] @AT@ 2471 @LENGTH@ 5
---INS PrimitiveType@@float @TO@ FieldDeclaration@@private, static, final, float, [JAVA_VERSION_1_5=1.5f] @AT@ 2477 @LENGTH@ 5
---INS VariableDeclarationFragment@@JAVA_VERSION_1_5=1.5f @TO@ FieldDeclaration@@private, static, final, float, [JAVA_VERSION_1_5=1.5f] @AT@ 2483 @LENGTH@ 23
------INS SimpleName@@JAVA_VERSION_1_5 @TO@ VariableDeclarationFragment@@JAVA_VERSION_1_5=1.5f @AT@ 2483 @LENGTH@ 16
------INS NumberLiteral@@1.5f @TO@ VariableDeclarationFragment@@JAVA_VERSION_1_5=1.5f @AT@ 2502 @LENGTH@ 4


DEL MethodDeclaration@@public, static, void, MethodName:main, String[] args,  @AT@ 1681 @LENGTH@ 114
---DEL Modifier@@public @AT@ 1681 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1688 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1695 @LENGTH@ 4
---DEL SimpleName@@MethodName:main @AT@ 1700 @LENGTH@ 4
---DEL SingleVariableDeclaration@@String[] args @AT@ 1705 @LENGTH@ 13
------DEL ArrayType@@String[] @AT@ 1705 @LENGTH@ 8
---------DEL SimpleType@@String @AT@ 1705 @LENGTH@ 6
------DEL SimpleName@@args @AT@ 1714 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:junit.textui.TestRunner.run(LabelBasedAclVoterTests.class) @AT@ 1730 @LENGTH@ 59
------DEL MethodInvocation@@junit.textui.TestRunner.run(LabelBasedAclVoterTests.class) @AT@ 1730 @LENGTH@ 58
---------DEL QualifiedName@@Name:junit.textui.TestRunner @AT@ 1730 @LENGTH@ 23
---------DEL SimpleName@@MethodName:run:[LabelBasedAclVoterTests.class] @AT@ 1754 @LENGTH@ 34
------------DEL TypeLiteral@@LabelBasedAclVoterTests.class @AT@ 1758 @LENGTH@ 29


INS MethodDeclaration@@public, void, MethodName:testGetType,  @TO@ TypeDeclaration@@[public, abstract]AbstractSoap11BodyTestCase, AbstractSoapBodyTestCase @AT@ 1188 @LENGTH@ 110
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetType,  @AT@ 1188 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetType,  @AT@ 1195 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetType @TO@ MethodDeclaration@@public, void, MethodName:testGetType,  @AT@ 1200 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertTrue("Invalid type returned",soapBody instanceof Soap11Body) @TO@ MethodDeclaration@@public, void, MethodName:testGetType,  @AT@ 1224 @LENGTH@ 68
------INS MethodInvocation@@assertTrue("Invalid type returned",soapBody instanceof Soap11Body) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Invalid type returned",soapBody instanceof Soap11Body) @AT@ 1224 @LENGTH@ 67
---------INS SimpleName@@MethodName:assertTrue:["Invalid type returned", soapBody instanceof Soap11Body] @TO@ MethodInvocation@@assertTrue("Invalid type returned",soapBody instanceof Soap11Body) @AT@ 1224 @LENGTH@ 67
------------INS StringLiteral@@"Invalid type returned" @TO@ SimpleName@@MethodName:assertTrue:["Invalid type returned", soapBody instanceof Soap11Body] @AT@ 1235 @LENGTH@ 23
------------INS InstanceofExpression@@soapBody instanceof Soap11Body @TO@ SimpleName@@MethodName:assertTrue:["Invalid type returned", soapBody instanceof Soap11Body] @AT@ 1260 @LENGTH@ 30
---------------INS SimpleName@@soapBody @TO@ InstanceofExpression@@soapBody instanceof Soap11Body @AT@ 1260 @LENGTH@ 8
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@soapBody instanceof Soap11Body @AT@ 1269 @LENGTH@ 10
---------------INS SimpleType@@Soap11Body @TO@ InstanceofExpression@@soapBody instanceof Soap11Body @AT@ 1280 @LENGTH@ 10


INS MethodDeclaration@@public, voidMethodName:DefaultJobIdentifier, String name, String key,  @TO@ TypeDeclaration@@[public]DefaultJobIdentifier, SimpleJobIdentifier[JobIdentifier] @AT@ 1369 @LENGTH@ 92
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:DefaultJobIdentifier, String name, String key,  @AT@ 1369 @LENGTH@ 6
---INS SimpleName@@MethodName:DefaultJobIdentifier @TO@ MethodDeclaration@@public, voidMethodName:DefaultJobIdentifier, String name, String key,  @AT@ 1376 @LENGTH@ 20
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, voidMethodName:DefaultJobIdentifier, String name, String key,  @AT@ 1397 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 1397 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 1404 @LENGTH@ 4
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@public, voidMethodName:DefaultJobIdentifier, String name, String key,  @AT@ 1410 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 1410 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 1417 @LENGTH@ 3
---INS ConstructorInvocation@@this(name); @TO@ MethodDeclaration@@public, voidMethodName:DefaultJobIdentifier, String name, String key,  @AT@ 1427 @LENGTH@ 11
------INS SimpleName@@name @TO@ ConstructorInvocation@@this(name); @AT@ 1432 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:this.key=key @TO@ MethodDeclaration@@public, voidMethodName:DefaultJobIdentifier, String name, String key,  @AT@ 1442 @LENGTH@ 15
------INS Assignment@@this.key=key @TO@ ExpressionStatement@@Assignment:this.key=key @AT@ 1442 @LENGTH@ 14
---------INS FieldAccess@@this.key @TO@ Assignment@@this.key=key @AT@ 1442 @LENGTH@ 8
------------INS ThisExpression@@this @TO@ FieldAccess@@this.key @AT@ 1442 @LENGTH@ 4
------------INS SimpleName@@key @TO@ FieldAccess@@this.key @AT@ 1447 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@this.key=key @AT@ 1450 @LENGTH@ 1
---------INS SimpleName@@key @TO@ Assignment@@this.key=key @AT@ 1453 @LENGTH@ 3


INS MethodDeclaration@@public, voidMethodName:IrcExchange, DefaultExchange parent, IrcBinding binding,  @TO@ TypeDeclaration@@[public]IrcExchange, DefaultExchange @AT@ 1411 @LENGTH@ 125
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:IrcExchange, DefaultExchange parent, IrcBinding binding,  @AT@ 1411 @LENGTH@ 6
---INS SimpleName@@MethodName:IrcExchange @TO@ MethodDeclaration@@public, voidMethodName:IrcExchange, DefaultExchange parent, IrcBinding binding,  @AT@ 1418 @LENGTH@ 11
---INS SingleVariableDeclaration@@DefaultExchange parent @TO@ MethodDeclaration@@public, voidMethodName:IrcExchange, DefaultExchange parent, IrcBinding binding,  @AT@ 1430 @LENGTH@ 22
------INS SimpleType@@DefaultExchange @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 1430 @LENGTH@ 15
------INS SimpleName@@parent @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 1446 @LENGTH@ 6
---INS SingleVariableDeclaration@@IrcBinding binding @TO@ MethodDeclaration@@public, voidMethodName:IrcExchange, DefaultExchange parent, IrcBinding binding,  @AT@ 1454 @LENGTH@ 18
------INS SimpleType@@IrcBinding @TO@ SingleVariableDeclaration@@IrcBinding binding @AT@ 1454 @LENGTH@ 10
------INS SimpleName@@binding @TO@ SingleVariableDeclaration@@IrcBinding binding @AT@ 1465 @LENGTH@ 7
---INS SuperConstructorInvocation@@super(parent);
 @TO@ MethodDeclaration@@public, voidMethodName:IrcExchange, DefaultExchange parent, IrcBinding binding,  @AT@ 1484 @LENGTH@ 14
------INS SimpleName@@parent @TO@ SuperConstructorInvocation@@super(parent);
 @AT@ 1490 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:this.binding=binding @TO@ MethodDeclaration@@public, voidMethodName:IrcExchange, DefaultExchange parent, IrcBinding binding,  @AT@ 1507 @LENGTH@ 23
------INS Assignment@@this.binding=binding @TO@ ExpressionStatement@@Assignment:this.binding=binding @AT@ 1507 @LENGTH@ 22
---------INS FieldAccess@@this.binding @TO@ Assignment@@this.binding=binding @AT@ 1507 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.binding @AT@ 1507 @LENGTH@ 4
------------INS SimpleName@@binding @TO@ FieldAccess@@this.binding @AT@ 1512 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.binding=binding @AT@ 1519 @LENGTH@ 1
---------INS SimpleName@@binding @TO@ Assignment@@this.binding=binding @AT@ 1522 @LENGTH@ 7


UPD VariableDeclarationStatement@@Exchange exchange=list.get(0); @TO@ Exchange exchange=list.get(list.size() - 1); @AT@ 1743 @LENGTH@ 32
---UPD VariableDeclarationFragment@@exchange=list.get(0) @TO@ exchange=list.get(list.size() - 1) @AT@ 1752 @LENGTH@ 22
------UPD MethodInvocation@@list.get(0) @TO@ list.get(list.size() - 1) @AT@ 1763 @LENGTH@ 11
---------UPD SimpleName@@MethodName:get:[0] @TO@ MethodName:get:[list.size() - 1] @AT@ 1768 @LENGTH@ 6
------------INS InfixExpression@@list.size() - 1 @TO@ SimpleName@@MethodName:get:[0] @AT@ 1772 @LENGTH@ 15
---------------INS MethodInvocation@@list.size() @TO@ InfixExpression@@list.size() - 1 @AT@ 1772 @LENGTH@ 11
------------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.size() @AT@ 1772 @LENGTH@ 4
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@list.size() @AT@ 1777 @LENGTH@ 6
---------------INS Operator@@- @TO@ InfixExpression@@list.size() - 1 @AT@ 1783 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@list.size() - 1 @AT@ 1786 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 1772 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:loadBalancer=new RoundRobinLoadBalancer() @TO@ Assignment:loadBalancer=new RandomLoadBalancer() @AT@ 3461 @LENGTH@ 44
---UPD Assignment@@loadBalancer=new RoundRobinLoadBalancer() @TO@ loadBalancer=new RandomLoadBalancer() @AT@ 3461 @LENGTH@ 43
------UPD ClassInstanceCreation@@RoundRobinLoadBalancer[] @TO@ RandomLoadBalancer[] @AT@ 3476 @LENGTH@ 28
---------UPD SimpleType@@RoundRobinLoadBalancer @TO@ RandomLoadBalancer @AT@ 3480 @LENGTH@ 22


UPD MethodDeclaration@@public, DirContextOperations, MethodName:lookup, String dn,  @TO@ public, DirContextOperations, MethodName:lookupContext, String dn,  @AT@ 3624 @LENGTH@ 109
---UPD SimpleName@@MethodName:lookup @TO@ MethodName:lookupContext @AT@ 3652 @LENGTH@ 6
---UPD ReturnStatement@@CastExpression:(DirContextOperations)ldapOperations.lookup(dn) @TO@ MethodInvocation:ldapOperations.lookupContext(dn) @AT@ 3674 @LENGTH@ 56
------DEL CastExpression@@(DirContextOperations)ldapOperations.lookup(dn) @AT@ 3681 @LENGTH@ 48
---------DEL SimpleType@@DirContextOperations @AT@ 3682 @LENGTH@ 20
---------DEL MethodInvocation@@ldapOperations.lookup(dn) @AT@ 3704 @LENGTH@ 25
------INS MethodInvocation@@ldapOperations.lookupContext(dn) @TO@ ReturnStatement@@CastExpression:(DirContextOperations)ldapOperations.lookup(dn) @AT@ 3688 @LENGTH@ 32
---------MOV SimpleName@@Name:ldapOperations @TO@ MethodInvocation@@ldapOperations.lookupContext(dn) @AT@ 3704 @LENGTH@ 14
---------MOV SimpleName@@MethodName:lookup:[dn] @TO@ MethodInvocation@@ldapOperations.lookupContext(dn) @AT@ 3719 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:inputSource.setFieldSetMapper(fieldSetMapper) @TO@ MethodDeclaration@@public, void, MethodName:testRestartWithNullReader, Exception,  @AT@ 5257 @LENGTH@ 46
---INS MethodInvocation@@inputSource.setFieldSetMapper(fieldSetMapper) @TO@ ExpressionStatement@@MethodInvocation:inputSource.setFieldSetMapper(fieldSetMapper) @AT@ 5257 @LENGTH@ 45
------INS SimpleName@@Name:inputSource @TO@ MethodInvocation@@inputSource.setFieldSetMapper(fieldSetMapper) @AT@ 5257 @LENGTH@ 11
------INS SimpleName@@MethodName:setFieldSetMapper:[fieldSetMapper] @TO@ MethodInvocation@@inputSource.setFieldSetMapper(fieldSetMapper) @AT@ 5269 @LENGTH@ 33
---------INS SimpleName@@fieldSetMapper @TO@ SimpleName@@MethodName:setFieldSetMapper:[fieldSetMapper] @AT@ 5287 @LENGTH@ 14


UPD TypeDeclaration@@[public]JournalComponent, DefaultComponent<DefaultExchange> @TO@ [public]JournalComponent, DefaultComponent<Exchange> @AT@ 1194 @LENGTH@ 403
---UPD ParameterizedType@@DefaultComponent<DefaultExchange> @TO@ DefaultComponent<Exchange> @AT@ 1232 @LENGTH@ 33
------UPD SimpleType@@DefaultExchange @TO@ Exchange @AT@ 1249 @LENGTH@ 15


INS IfStatement@@if (!JdkVersion.isAtLeastJava16()) {  assertEquals("Invalid JAXB version",JaxbUtils.JAXB_1,JaxbUtils.getJaxbVersion());} @TO@ MethodDeclaration@@public, void, MethodName:testGetJaxbVersion, Exception,  @AT@ 1903 @LENGTH@ 133
---INS PrefixExpression@@!JdkVersion.isAtLeastJava16() @TO@ IfStatement@@if (!JdkVersion.isAtLeastJava16()) {  assertEquals("Invalid JAXB version",JaxbUtils.JAXB_1,JaxbUtils.getJaxbVersion());} @AT@ 1907 @LENGTH@ 29
------INS Operator@@! @TO@ PrefixExpression@@!JdkVersion.isAtLeastJava16() @AT@ 1907 @LENGTH@ 1
------INS MethodInvocation@@JdkVersion.isAtLeastJava16() @TO@ PrefixExpression@@!JdkVersion.isAtLeastJava16() @AT@ 1908 @LENGTH@ 28
---------INS SimpleName@@Name:JdkVersion @TO@ MethodInvocation@@JdkVersion.isAtLeastJava16() @AT@ 1908 @LENGTH@ 10
---------INS SimpleName@@MethodName:isAtLeastJava16:[] @TO@ MethodInvocation@@JdkVersion.isAtLeastJava16() @AT@ 1919 @LENGTH@ 17
---INS Block@@ThenBody:{  assertEquals("Invalid JAXB version",JaxbUtils.JAXB_1,JaxbUtils.getJaxbVersion());} @TO@ IfStatement@@if (!JdkVersion.isAtLeastJava16()) {  assertEquals("Invalid JAXB version",JaxbUtils.JAXB_1,JaxbUtils.getJaxbVersion());} @AT@ 1938 @LENGTH@ 98
------MOV ExpressionStatement@@MethodInvocation:assertEquals("Invalid JAXB version",JaxbUtils.JAXB_1,JaxbUtils.getJaxbVersion()) @TO@ Block@@ThenBody:{  assertEquals("Invalid JAXB version",JaxbUtils.JAXB_1,JaxbUtils.getJaxbVersion());} @AT@ 1861 @LENGTH@ 83


UPD MethodDeclaration@@private, Cache, MethodName:getCache,  @TO@ private, Ehcache, MethodName:getCache,  @AT@ 1647 @LENGTH@ 157
---UPD SimpleType@@Cache @TO@ Ehcache @AT@ 1655 @LENGTH@ 5
---UPD ReturnStatement@@CastExpression:(Cache)ctx.getBean("eHCacheBackend") @TO@ CastExpression:(Ehcache)ctx.getBean("eHCacheBackend") @AT@ 1753 @LENGTH@ 45
------UPD CastExpression@@(Cache)ctx.getBean("eHCacheBackend") @TO@ (Ehcache)ctx.getBean("eHCacheBackend") @AT@ 1760 @LENGTH@ 37
---------UPD SimpleType@@Cache @TO@ Ehcache @AT@ 1761 @LENGTH@ 5


INS ReturnStatement@@InfixExpression:"/executions/" + requestInfo.getFlowDefinitionId() + "/"+ requestInfo.getFlowExecutionKey() @TO@ MethodDeclaration@@public, String, MethodName:buildFlowExecutionUrl, FlowExecutionRequestInfo requestInfo, boolean contextRelative,  @AT@ 4336 @LENGTH@ 100
---INS InfixExpression@@"/executions/" + requestInfo.getFlowDefinitionId() + "/"+ requestInfo.getFlowExecutionKey() @TO@ ReturnStatement@@InfixExpression:"/executions/" + requestInfo.getFlowDefinitionId() + "/"+ requestInfo.getFlowExecutionKey() @AT@ 4343 @LENGTH@ 92
------INS StringLiteral@@"/executions/" @TO@ InfixExpression@@"/executions/" + requestInfo.getFlowDefinitionId() + "/"+ requestInfo.getFlowExecutionKey() @AT@ 4343 @LENGTH@ 14
------INS Operator@@+ @TO@ InfixExpression@@"/executions/" + requestInfo.getFlowDefinitionId() + "/"+ requestInfo.getFlowExecutionKey() @AT@ 4357 @LENGTH@ 1
------INS MethodInvocation@@requestInfo.getFlowDefinitionId() @TO@ InfixExpression@@"/executions/" + requestInfo.getFlowDefinitionId() + "/"+ requestInfo.getFlowExecutionKey() @AT@ 4360 @LENGTH@ 33
---------INS SimpleName@@Name:requestInfo @TO@ MethodInvocation@@requestInfo.getFlowDefinitionId() @AT@ 4360 @LENGTH@ 11
---------INS SimpleName@@MethodName:getFlowDefinitionId:[] @TO@ MethodInvocation@@requestInfo.getFlowDefinitionId() @AT@ 4372 @LENGTH@ 21
------INS StringLiteral@@"/" @TO@ InfixExpression@@"/executions/" + requestInfo.getFlowDefinitionId() + "/"+ requestInfo.getFlowExecutionKey() @AT@ 4396 @LENGTH@ 3
------INS MethodInvocation@@requestInfo.getFlowExecutionKey() @TO@ InfixExpression@@"/executions/" + requestInfo.getFlowDefinitionId() + "/"+ requestInfo.getFlowExecutionKey() @AT@ 4402 @LENGTH@ 33
---------INS SimpleName@@Name:requestInfo @TO@ MethodInvocation@@requestInfo.getFlowExecutionKey() @AT@ 4402 @LENGTH@ 11
---------INS SimpleName@@MethodName:getFlowExecutionKey:[] @TO@ MethodInvocation@@requestInfo.getFlowExecutionKey() @AT@ 4414 @LENGTH@ 21


INS MethodDeclaration@@protected, String, MethodName:createFtpUrl,  @TO@ TypeDeclaration@@[public]FromFileToFtpTest, FtpRouteTest @AT@ 1150 @LENGTH@ 142
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, String, MethodName:createFtpUrl,  @AT@ 1150 @LENGTH@ 9
---INS SimpleType@@String @TO@ MethodDeclaration@@protected, String, MethodName:createFtpUrl,  @AT@ 1160 @LENGTH@ 6
---INS SimpleName@@MethodName:createFtpUrl @TO@ MethodDeclaration@@protected, String, MethodName:createFtpUrl,  @AT@ 1167 @LENGTH@ 12
---INS ExpressionStatement@@Assignment:port="20011" @TO@ MethodDeclaration@@protected, String, MethodName:createFtpUrl,  @AT@ 1192 @LENGTH@ 15
------INS Assignment@@port="20011" @TO@ ExpressionStatement@@Assignment:port="20011" @AT@ 1192 @LENGTH@ 14
---------INS SimpleName@@port @TO@ Assignment@@port="20011" @AT@ 1192 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@port="20011" @AT@ 1196 @LENGTH@ 1
---------INS StringLiteral@@"20011" @TO@ Assignment@@port="20011" @AT@ 1199 @LENGTH@ 7
---INS ReturnStatement@@InfixExpression:"ftp://admin@localhost:" + port + "/tmp2/camel?password=admin" @TO@ MethodDeclaration@@protected, String, MethodName:createFtpUrl,  @AT@ 1216 @LENGTH@ 70
------INS InfixExpression@@"ftp://admin@localhost:" + port + "/tmp2/camel?password=admin" @TO@ ReturnStatement@@InfixExpression:"ftp://admin@localhost:" + port + "/tmp2/camel?password=admin" @AT@ 1223 @LENGTH@ 62
---------INS StringLiteral@@"ftp://admin@localhost:" @TO@ InfixExpression@@"ftp://admin@localhost:" + port + "/tmp2/camel?password=admin" @AT@ 1223 @LENGTH@ 24
---------INS Operator@@+ @TO@ InfixExpression@@"ftp://admin@localhost:" + port + "/tmp2/camel?password=admin" @AT@ 1247 @LENGTH@ 1
---------INS SimpleName@@port @TO@ InfixExpression@@"ftp://admin@localhost:" + port + "/tmp2/camel?password=admin" @AT@ 1250 @LENGTH@ 4
---------INS StringLiteral@@"/tmp2/camel?password=admin" @TO@ InfixExpression@@"ftp://admin@localhost:" + port + "/tmp2/camel?password=admin" @AT@ 1257 @LENGTH@ 28


INS ExpressionStatement@@MethodInvocation:recursiveDelete(new File("target/test-rename-inbox")) @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1030 @LENGTH@ 54
---INS MethodInvocation@@recursiveDelete(new File("target/test-rename-inbox")) @TO@ ExpressionStatement@@MethodInvocation:recursiveDelete(new File("target/test-rename-inbox")) @AT@ 1030 @LENGTH@ 53
------INS SimpleName@@MethodName:recursiveDelete:[new File("target/test-rename-inbox")] @TO@ MethodInvocation@@recursiveDelete(new File("target/test-rename-inbox")) @AT@ 1030 @LENGTH@ 53
---------INS ClassInstanceCreation@@File["target/test-rename-inbox"] @TO@ SimpleName@@MethodName:recursiveDelete:[new File("target/test-rename-inbox")] @AT@ 1046 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@File["target/test-rename-inbox"] @AT@ 1046 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["target/test-rename-inbox"] @AT@ 1050 @LENGTH@ 4
------------INS StringLiteral@@"target/test-rename-inbox" @TO@ ClassInstanceCreation@@File["target/test-rename-inbox"] @AT@ 1055 @LENGTH@ 26


INS ExpressionStatement@@MethodInvocation:endpoint.getConfiguration().configure(this) @TO@ MethodDeclaration@@public, voidMethodName:EndpointMessageListener, JmsEndpoint endpoint, Processor processor,  @AT@ 2070 @LENGTH@ 44
---INS MethodInvocation@@endpoint.getConfiguration().configure(this) @TO@ ExpressionStatement@@MethodInvocation:endpoint.getConfiguration().configure(this) @AT@ 2070 @LENGTH@ 43
------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@endpoint.getConfiguration().configure(this) @AT@ 2070 @LENGTH@ 27
------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getConfiguration().configure(this) @AT@ 2070 @LENGTH@ 8
------INS SimpleName@@MethodName:configure:[this] @TO@ MethodInvocation@@endpoint.getConfiguration().configure(this) @AT@ 2098 @LENGTH@ 15
---------INS ThisExpression@@this @TO@ SimpleName@@MethodName:configure:[this] @AT@ 2108 @LENGTH@ 4


INS MethodDeclaration@@boolean, MethodName:isSaveRestartData,  @TO@ TypeDeclaration@@[public]StepConfiguration,  @AT@ 1657 @LENGTH@ 20
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:isSaveRestartData,  @AT@ 1649 @LENGTH@ 7
---INS SimpleName@@MethodName:isSaveRestartData @TO@ MethodDeclaration@@boolean, MethodName:isSaveRestartData,  @AT@ 1657 @LENGTH@ 17


UPD TypeDeclaration@@[@XmlRootElement(name="multicast"), @XmlAccessorType(XmlAccessType.FIELD), public]MulticastType, OutputType @TO@ [@XmlRootElement(name="multicast"), @XmlAccessorType(XmlAccessType.FIELD), public]MulticastType, OutputType<ProcessorType> @AT@ 1179 @LENGTH@ 506
---INS ParameterizedType@@OutputType<ProcessorType> @TO@ TypeDeclaration@@[@XmlRootElement(name="multicast"), @XmlAccessorType(XmlAccessType.FIELD), public]MulticastType, OutputType @AT@ 1288 @LENGTH@ 25
------INS SimpleType@@OutputType @TO@ ParameterizedType@@OutputType<ProcessorType> @AT@ 1288 @LENGTH@ 10
------INS SimpleType@@ProcessorType @TO@ ParameterizedType@@OutputType<ProcessorType> @AT@ 1299 @LENGTH@ 13
---DEL SimpleType@@OutputType @AT@ 1288 @LENGTH@ 10


UPD TryStatement@@try {  HttpConsumer consumer=resolve(request);  if (consumer == null) {    response.sendError(HttpServletResponse.SC_NOT_FOUND);    return;  }  final Continuation continuation=ContinuationSupport.getContinuation(request,null);  if (continuation.isNew()) {    final HttpExchange exchange=new HttpExchange(consumer.getEndpoint(),request,response);    boolean sync=consumer.getAsyncProcessor().process(exchange,new AsyncCallback(){      public void done(      boolean sync){        if (sync) {          return;        }        continuation.setObject(exchange);        continuation.resume();      }    });    if (!sync) {      continuation.suspend(0);    }    consumer.getBinding().writeResponse(exchange);    return;  }  if (continuation.isResumed()) {    HttpExchange exchange=(HttpExchange)continuation.getObject();    consumer.getBinding().writeResponse(exchange);    return;  }} catch (Exception e) {  throw new ServletException(e);} @TO@ try {  HttpConsumer consumer=resolve(request);  if (consumer == null) {    response.sendError(HttpServletResponse.SC_NOT_FOUND);    return;  }  final Continuation continuation=ContinuationSupport.getContinuation(request,null);  if (continuation.isNew()) {    final HttpExchange exchange=new HttpExchange(consumer.getEndpoint(),request,response);    boolean sync=consumer.getAsyncProcessor().process(exchange,new AsyncCallback(){      public void done(      boolean sync){        if (sync) {          return;        }        continuation.setObject(exchange);        continuation.resume();      }    });    if (!sync) {      continuation.suspend(0);    }    consumer.getBinding().writeResponse(exchange,response);    return;  }  if (continuation.isResumed()) {    HttpExchange exchange=(HttpExchange)continuation.getObject();    consumer.getBinding().writeResponse(exchange,response);    return;  }} catch (Exception e) {  throw new ServletException(e);} @AT@ 1669 @LENGTH@ 2556
---UPD IfStatement@@if (continuation.isNew()) {  final HttpExchange exchange=new HttpExchange(consumer.getEndpoint(),request,response);  boolean sync=consumer.getAsyncProcessor().process(exchange,new AsyncCallback(){    public void done(    boolean sync){      if (sync) {        return;      }      continuation.setObject(exchange);      continuation.resume();    }  });  if (!sync) {    continuation.suspend(0);  }  consumer.getBinding().writeResponse(exchange);  return;} @TO@ if (continuation.isNew()) {  final HttpExchange exchange=new HttpExchange(consumer.getEndpoint(),request,response);  boolean sync=consumer.getAsyncProcessor().process(exchange,new AsyncCallback(){    public void done(    boolean sync){      if (sync) {        return;      }      continuation.setObject(exchange);      continuation.resume();    }  });  if (!sync) {    continuation.suspend(0);  }  consumer.getBinding().writeResponse(exchange,response);  return;} @AT@ 2432 @LENGTH@ 1416
------UPD Block@@ThenBody:{  final HttpExchange exchange=new HttpExchange(consumer.getEndpoint(),request,response);  boolean sync=consumer.getAsyncProcessor().process(exchange,new AsyncCallback(){    public void done(    boolean sync){      if (sync) {        return;      }      continuation.setObject(exchange);      continuation.resume();    }  });  if (!sync) {    continuation.suspend(0);  }  consumer.getBinding().writeResponse(exchange);  return;} @TO@ ThenBody:{  final HttpExchange exchange=new HttpExchange(consumer.getEndpoint(),request,response);  boolean sync=consumer.getAsyncProcessor().process(exchange,new AsyncCallback(){    public void done(    boolean sync){      if (sync) {        return;      }      continuation.setObject(exchange);      continuation.resume();    }  });  if (!sync) {    continuation.suspend(0);  }  consumer.getBinding().writeResponse(exchange,response);  return;} @AT@ 2458 @LENGTH@ 1390
---------UPD ExpressionStatement@@MethodInvocation:consumer.getBinding().writeResponse(exchange) @TO@ MethodInvocation:consumer.getBinding().writeResponse(exchange,response) @AT@ 3764 @LENGTH@ 46
------------UPD MethodInvocation@@consumer.getBinding().writeResponse(exchange) @TO@ consumer.getBinding().writeResponse(exchange,response) @AT@ 3764 @LENGTH@ 45
---------------UPD SimpleName@@MethodName:writeResponse:[exchange] @TO@ MethodName:writeResponse:[exchange, response] @AT@ 3786 @LENGTH@ 23
------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:writeResponse:[exchange] @AT@ 3810 @LENGTH@ 8
---UPD IfStatement@@if (continuation.isResumed()) {  HttpExchange exchange=(HttpExchange)continuation.getObject();  consumer.getBinding().writeResponse(exchange);  return;} @TO@ if (continuation.isResumed()) {  HttpExchange exchange=(HttpExchange)continuation.getObject();  consumer.getBinding().writeResponse(exchange,response);  return;} @AT@ 3874 @LENGTH@ 264
------UPD Block@@ThenBody:{  HttpExchange exchange=(HttpExchange)continuation.getObject();  consumer.getBinding().writeResponse(exchange);  return;} @TO@ ThenBody:{  HttpExchange exchange=(HttpExchange)continuation.getObject();  consumer.getBinding().writeResponse(exchange,response);  return;} @AT@ 3905 @LENGTH@ 233
---------UPD ExpressionStatement@@MethodInvocation:consumer.getBinding().writeResponse(exchange) @TO@ MethodInvocation:consumer.getBinding().writeResponse(exchange,response) @AT@ 4054 @LENGTH@ 46
------------UPD MethodInvocation@@consumer.getBinding().writeResponse(exchange) @TO@ consumer.getBinding().writeResponse(exchange,response) @AT@ 4054 @LENGTH@ 45
---------------UPD SimpleName@@MethodName:writeResponse:[exchange] @TO@ MethodName:writeResponse:[exchange, response] @AT@ 4076 @LENGTH@ 23
------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:writeResponse:[exchange] @AT@ 4110 @LENGTH@ 8


UPD Block@@ElseBody:if (methodName.equals("hashCode")) {  return new Integer(proxy.hashCode());} else if (methodName.equals("close")) {  doCloseConnection(target,contextSource);  return null;} else if (LdapTransactionUtils.isSupportedWriteTransactionOperation(methodName)) {  CompensatingTransactionUtils.performOperation(contextSource,target,method,args);  return null;} else {  try {    return method.invoke(target,args);  } catch (  InvocationTargetException e) {    throw e.getTargetException();  }} @TO@ ElseBody:if (methodName.equals("hashCode")) {  return new Integer(hashCode());} else if (methodName.equals("close")) {  doCloseConnection(target,contextSource);  return null;} else if (LdapTransactionUtils.isSupportedWriteTransactionOperation(methodName)) {  CompensatingTransactionUtils.performOperation(contextSource,target,method,args);  return null;} else {  try {    return method.invoke(target,args);  } catch (  InvocationTargetException e) {    throw e.getTargetException();  }} @AT@ 2974 @LENGTH@ 810
---UPD IfStatement@@if (methodName.equals("hashCode")) {  return new Integer(proxy.hashCode());} else if (methodName.equals("close")) {  doCloseConnection(target,contextSource);  return null;} else if (LdapTransactionUtils.isSupportedWriteTransactionOperation(methodName)) {  CompensatingTransactionUtils.performOperation(contextSource,target,method,args);  return null;} else {  try {    return method.invoke(target,args);  } catch (  InvocationTargetException e) {    throw e.getTargetException();  }} @TO@ if (methodName.equals("hashCode")) {  return new Integer(hashCode());} else if (methodName.equals("close")) {  doCloseConnection(target,contextSource);  return null;} else if (LdapTransactionUtils.isSupportedWriteTransactionOperation(methodName)) {  CompensatingTransactionUtils.performOperation(contextSource,target,method,args);  return null;} else {  try {    return method.invoke(target,args);  } catch (  InvocationTargetException e) {    throw e.getTargetException();  }} @AT@ 2974 @LENGTH@ 810
------UPD Block@@ThenBody:{  return new Integer(proxy.hashCode());} @TO@ ThenBody:{  return new Integer(hashCode());} @AT@ 3009 @LENGTH@ 113
---------UPD ReturnStatement@@ClassInstanceCreation:new Integer(proxy.hashCode()) @TO@ ClassInstanceCreation:new Integer(hashCode()) @AT@ 3074 @LENGTH@ 37
------------UPD ClassInstanceCreation@@Integer[proxy.hashCode()] @TO@ Integer[hashCode()] @AT@ 3081 @LENGTH@ 29
---------------UPD MethodInvocation@@proxy.hashCode() @TO@ MethodName:hashCode:[] @AT@ 3093 @LENGTH@ 16
------------------DEL SimpleName@@Name:proxy @AT@ 3093 @LENGTH@ 5
------------------DEL SimpleName@@MethodName:hashCode:[] @AT@ 3099 @LENGTH@ 10
---UPD IfStatement@@if (methodName.equals("hashCode")) {  return new Integer(proxy.hashCode());} else if (methodName.equals("close")) {  doCloseConnection(target,contextSource);  return null;} else if (LdapTransactionUtils.isSupportedWriteTransactionOperation(methodName)) {  CompensatingTransactionUtils.performOperation(contextSource,target,method,args);  return null;} else {  try {    return method.invoke(target,args);  } catch (  InvocationTargetException e) {    throw e.getTargetException();  }} @TO@ if (methodName.equals("hashCode")) {  return new Integer(hashCode());} else if (methodName.equals("close")) {  doCloseConnection(target,contextSource);  return null;} else if (LdapTransactionUtils.isSupportedWriteTransactionOperation(methodName)) {  CompensatingTransactionUtils.performOperation(contextSource,target,method,args);  return null;} else {  try {    return method.invoke(target,args);  } catch (  InvocationTargetException e) {    throw e.getTargetException();  }} @AT@ 2974 @LENGTH@ 810
------UPD Block@@ThenBody:{  return new Integer(proxy.hashCode());} @TO@ ThenBody:{  return new Integer(hashCode());} @AT@ 3009 @LENGTH@ 113
---------UPD ReturnStatement@@ClassInstanceCreation:new Integer(proxy.hashCode()) @TO@ ClassInstanceCreation:new Integer(hashCode()) @AT@ 3074 @LENGTH@ 37
------------UPD ClassInstanceCreation@@Integer[proxy.hashCode()] @TO@ Integer[hashCode()] @AT@ 3081 @LENGTH@ 29
---------------UPD MethodInvocation@@proxy.hashCode() @TO@ MethodName:hashCode:[] @AT@ 3093 @LENGTH@ 16
------------------DEL SimpleName@@Name:proxy @AT@ 3093 @LENGTH@ 5
------------------DEL SimpleName@@MethodName:hashCode:[] @AT@ 3099 @LENGTH@ 10


UPD TypeDeclaration@@[private]MockInputSource, [InputSource, StatisticsProvider, Restartable, Skippable] @TO@ [private, static]MockInputSource, [InputSource, StatisticsProvider, Restartable, Skippable] @AT@ 3101 @LENGTH@ 724
---INS Modifier@@static @TO@ TypeDeclaration@@[private]MockInputSource, [InputSource, StatisticsProvider, Restartable, Skippable] @AT@ 3036 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:append, DistinguishedName path,  @TO@ public, DistinguishedName, MethodName:append, DistinguishedName path,  @AT@ 10726 @LENGTH@ 96
---DEL PrimitiveType@@void @AT@ 10733 @LENGTH@ 4
---INS SimpleType@@DistinguishedName @TO@ MethodDeclaration@@public, void, MethodName:append, DistinguishedName path,  @AT@ 10764 @LENGTH@ 17
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, void, MethodName:append, DistinguishedName path,  @AT@ 10869 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 10876 @LENGTH@ 4


INS MethodDeclaration@@XmlValidator, MethodName:getValidator,  @TO@ TypeDeclaration@@[public]XsdSchema,  @AT@ 1142 @LENGTH@ 15
---INS SimpleType@@XmlValidator @TO@ MethodDeclaration@@XmlValidator, MethodName:getValidator,  @AT@ 1129 @LENGTH@ 12
---INS SimpleName@@MethodName:getValidator @TO@ MethodDeclaration@@XmlValidator, MethodName:getValidator,  @AT@ 1142 @LENGTH@ 12


INS IfStatement@@if (outputs != null) {  for (  ProcessorType output : outputs) {    NodeData newData=printNode(writer,toData,output);    if (!isMulticastNode(node)) {      toData=newData;    }  }} @TO@ MethodDeclaration@@protected, NodeData, MethodName:printNode, PrintWriter writer, NodeData fromData, ProcessorType node,  @AT@ 3777 @LENGTH@ 269
---INS InfixExpression@@outputs != null @TO@ IfStatement@@if (outputs != null) {  for (  ProcessorType output : outputs) {    NodeData newData=printNode(writer,toData,output);    if (!isMulticastNode(node)) {      toData=newData;    }  }} @AT@ 3781 @LENGTH@ 15
------INS SimpleName@@outputs @TO@ InfixExpression@@outputs != null @AT@ 3781 @LENGTH@ 7
------INS Operator@@!= @TO@ InfixExpression@@outputs != null @AT@ 3788 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@outputs != null @AT@ 3792 @LENGTH@ 4
---INS Block@@ThenBody:{  for (  ProcessorType output : outputs) {    NodeData newData=printNode(writer,toData,output);    if (!isMulticastNode(node)) {      toData=newData;    }  }} @TO@ IfStatement@@if (outputs != null) {  for (  ProcessorType output : outputs) {    NodeData newData=printNode(writer,toData,output);    if (!isMulticastNode(node)) {      toData=newData;    }  }} @AT@ 3798 @LENGTH@ 248
------MOV EnhancedForStatement@@for (ProcessorType output : outputs) {  NodeData newData=printNode(writer,toData,output);  if (!isMulticastNode(node)) {    toData=newData;  }} @TO@ Block@@ThenBody:{  for (  ProcessorType output : outputs) {    NodeData newData=printNode(writer,toData,output);    if (!isMulticastNode(node)) {      toData=newData;    }  }} @AT@ 3822 @LENGTH@ 204


UPD TypeDeclaration@@[private]StubXmlEventWriter, [XMLEventWriter] @TO@ [private, static]StubXmlEventWriter, [XMLEventWriter] @AT@ 2638 @LENGTH@ 760
---INS Modifier@@static @TO@ TypeDeclaration@@[private]StubXmlEventWriter, [XMLEventWriter] @AT@ 2653 @LENGTH@ 6


UPD MethodDeclaration@@protected, Endpoint<DefaultExchange>, MethodName:createEndpoint, String uri, String remaining, Map parameters, Exception,  @TO@ protected, Endpoint<Exchange>, MethodName:createEndpoint, String uri, String remaining, Map parameters, Exception,  @AT@ 1287 @LENGTH@ 308
---UPD ParameterizedType@@Endpoint<DefaultExchange> @TO@ Endpoint<Exchange> @AT@ 1297 @LENGTH@ 25
------UPD SimpleType@@DefaultExchange @TO@ Exchange @AT@ 1306 @LENGTH@ 15


UPD ReturnStatement@@ClassInstanceCreation:new IrcExchange(getContext(),getPattern(),getBinding()) @TO@ ClassInstanceCreation:new IrcExchange(this,getBinding()) @AT@ 2046 @LENGTH@ 65
---UPD ClassInstanceCreation@@IrcExchange[getContext(), getPattern(), getBinding()] @TO@ IrcExchange[this, getBinding()] @AT@ 2053 @LENGTH@ 57
------DEL MethodInvocation@@MethodName:getContext:[] @AT@ 2069 @LENGTH@ 12
------DEL MethodInvocation@@MethodName:getPattern:[] @AT@ 2083 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ClassInstanceCreation@@IrcExchange[getContext(), getPattern(), getBinding()] @AT@ 2200 @LENGTH@ 4


INS MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateDestination, SoapHeaderException,  @TO@ TypeDeclaration@@SaajSoap12Header, SaajSoapHeader[Soap12Header] @AT@ 2314 @LENGTH@ 671
---INS Modifier@@public @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateDestination, SoapHeaderException,  @AT@ 2314 @LENGTH@ 6
---INS SimpleType@@Iterator @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateDestination, SoapHeaderException,  @AT@ 2321 @LENGTH@ 8
---INS SimpleName@@MethodName:examineHeaderElementsToProcess @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateDestination, SoapHeaderException,  @AT@ 2330 @LENGTH@ 30
---INS SingleVariableDeclaration@@String[] roles @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateDestination, SoapHeaderException,  @AT@ 2361 @LENGTH@ 14
------INS ArrayType@@String[] @TO@ SingleVariableDeclaration@@String[] roles @AT@ 2361 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 2361 @LENGTH@ 6
------INS SimpleName@@roles @TO@ SingleVariableDeclaration@@String[] roles @AT@ 2370 @LENGTH@ 5
---INS SingleVariableDeclaration@@boolean isUltimateDestination @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateDestination, SoapHeaderException,  @AT@ 2377 @LENGTH@ 29
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isUltimateDestination @AT@ 2377 @LENGTH@ 7
------INS SimpleName@@isUltimateDestination @TO@ SingleVariableDeclaration@@boolean isUltimateDestination @AT@ 2385 @LENGTH@ 21
---INS SimpleType@@SoapHeaderException @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateDestination, SoapHeaderException,  @AT@ 2427 @LENGTH@ 19
---INS VariableDeclarationStatement@@List result=new ArrayList(); @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateDestination, SoapHeaderException,  @AT@ 2457 @LENGTH@ 30
------INS SimpleType@@List @TO@ VariableDeclarationStatement@@List result=new ArrayList(); @AT@ 2457 @LENGTH@ 4
------INS VariableDeclarationFragment@@result=new ArrayList() @TO@ VariableDeclarationStatement@@List result=new ArrayList(); @AT@ 2462 @LENGTH@ 24
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=new ArrayList() @AT@ 2462 @LENGTH@ 6
---------INS ClassInstanceCreation@@ArrayList[] @TO@ VariableDeclarationFragment@@result=new ArrayList() @AT@ 2471 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList[] @AT@ 2471 @LENGTH@ 3
------------INS SimpleType@@ArrayList @TO@ ClassInstanceCreation@@ArrayList[] @AT@ 2475 @LENGTH@ 9
---INS VariableDeclarationStatement@@Iterator iterator=getImplementation().examineAllHeaderElements(getSaajHeader()); @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateDestination, SoapHeaderException,  @AT@ 2496 @LENGTH@ 82
------INS SimpleType@@Iterator @TO@ VariableDeclarationStatement@@Iterator iterator=getImplementation().examineAllHeaderElements(getSaajHeader()); @AT@ 2496 @LENGTH@ 8
------INS VariableDeclarationFragment@@iterator=getImplementation().examineAllHeaderElements(getSaajHeader()) @TO@ VariableDeclarationStatement@@Iterator iterator=getImplementation().examineAllHeaderElements(getSaajHeader()); @AT@ 2505 @LENGTH@ 72
---------INS SimpleName@@iterator @TO@ VariableDeclarationFragment@@iterator=getImplementation().examineAllHeaderElements(getSaajHeader()) @AT@ 2505 @LENGTH@ 8
---------INS MethodInvocation@@getImplementation().examineAllHeaderElements(getSaajHeader()) @TO@ VariableDeclarationFragment@@iterator=getImplementation().examineAllHeaderElements(getSaajHeader()) @AT@ 2516 @LENGTH@ 61
------------INS MethodInvocation@@MethodName:getImplementation:[] @TO@ MethodInvocation@@getImplementation().examineAllHeaderElements(getSaajHeader()) @AT@ 2516 @LENGTH@ 19
------------INS SimpleName@@MethodName:examineAllHeaderElements:[getSaajHeader()] @TO@ MethodInvocation@@getImplementation().examineAllHeaderElements(getSaajHeader()) @AT@ 2536 @LENGTH@ 41
---------------INS MethodInvocation@@MethodName:getSaajHeader:[] @TO@ SimpleName@@MethodName:examineAllHeaderElements:[getSaajHeader()] @AT@ 2561 @LENGTH@ 15
---INS WhileStatement@@while (iterator.hasNext()) {  SOAPHeaderElement saajHeaderElement=(SOAPHeaderElement)iterator.next();  String headerRole=saajHeaderElement.getRole();  if (shouldProcess(headerRole,roles,isUltimateDestination)) {    result.add(saajHeaderElement);  }} @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateDestination, SoapHeaderException,  @AT@ 2587 @LENGTH@ 322
------INS MethodInvocation@@iterator.hasNext() @TO@ WhileStatement@@while (iterator.hasNext()) {  SOAPHeaderElement saajHeaderElement=(SOAPHeaderElement)iterator.next();  String headerRole=saajHeaderElement.getRole();  if (shouldProcess(headerRole,roles,isUltimateDestination)) {    result.add(saajHeaderElement);  }} @AT@ 2594 @LENGTH@ 18
---------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.hasNext() @AT@ 2594 @LENGTH@ 8
---------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@iterator.hasNext() @AT@ 2603 @LENGTH@ 9
------INS Block@@WhileBody:{  SOAPHeaderElement saajHeaderElement=(SOAPHeaderElement)iterator.next();  String headerRole=saajHeaderElement.getRole();  if (shouldProcess(headerRole,roles,isUltimateDestination)) {    result.add(saajHeaderElement);  }} @TO@ WhileStatement@@while (iterator.hasNext()) {  SOAPHeaderElement saajHeaderElement=(SOAPHeaderElement)iterator.next();  String headerRole=saajHeaderElement.getRole();  if (shouldProcess(headerRole,roles,isUltimateDestination)) {    result.add(saajHeaderElement);  }} @AT@ 2614 @LENGTH@ 295
---------INS VariableDeclarationStatement@@SOAPHeaderElement saajHeaderElement=(SOAPHeaderElement)iterator.next(); @TO@ Block@@WhileBody:{  SOAPHeaderElement saajHeaderElement=(SOAPHeaderElement)iterator.next();  String headerRole=saajHeaderElement.getRole();  if (shouldProcess(headerRole,roles,isUltimateDestination)) {    result.add(saajHeaderElement);  }} @AT@ 2628 @LENGTH@ 74
------------INS SimpleType@@SOAPHeaderElement @TO@ VariableDeclarationStatement@@SOAPHeaderElement saajHeaderElement=(SOAPHeaderElement)iterator.next(); @AT@ 2628 @LENGTH@ 17
------------INS VariableDeclarationFragment@@saajHeaderElement=(SOAPHeaderElement)iterator.next() @TO@ VariableDeclarationStatement@@SOAPHeaderElement saajHeaderElement=(SOAPHeaderElement)iterator.next(); @AT@ 2646 @LENGTH@ 55
---------------INS SimpleName@@saajHeaderElement @TO@ VariableDeclarationFragment@@saajHeaderElement=(SOAPHeaderElement)iterator.next() @AT@ 2646 @LENGTH@ 17
---------------INS CastExpression@@(SOAPHeaderElement)iterator.next() @TO@ VariableDeclarationFragment@@saajHeaderElement=(SOAPHeaderElement)iterator.next() @AT@ 2666 @LENGTH@ 35
------------------INS SimpleType@@SOAPHeaderElement @TO@ CastExpression@@(SOAPHeaderElement)iterator.next() @AT@ 2667 @LENGTH@ 17
------------------INS MethodInvocation@@iterator.next() @TO@ CastExpression@@(SOAPHeaderElement)iterator.next() @AT@ 2686 @LENGTH@ 15
---------------------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.next() @AT@ 2686 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iterator.next() @AT@ 2695 @LENGTH@ 6
---------INS VariableDeclarationStatement@@String headerRole=saajHeaderElement.getRole(); @TO@ Block@@WhileBody:{  SOAPHeaderElement saajHeaderElement=(SOAPHeaderElement)iterator.next();  String headerRole=saajHeaderElement.getRole();  if (shouldProcess(headerRole,roles,isUltimateDestination)) {    result.add(saajHeaderElement);  }} @AT@ 2715 @LENGTH@ 48
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String headerRole=saajHeaderElement.getRole(); @AT@ 2715 @LENGTH@ 6
------------INS VariableDeclarationFragment@@headerRole=saajHeaderElement.getRole() @TO@ VariableDeclarationStatement@@String headerRole=saajHeaderElement.getRole(); @AT@ 2722 @LENGTH@ 40
---------------INS SimpleName@@headerRole @TO@ VariableDeclarationFragment@@headerRole=saajHeaderElement.getRole() @AT@ 2722 @LENGTH@ 10
---------------INS MethodInvocation@@saajHeaderElement.getRole() @TO@ VariableDeclarationFragment@@headerRole=saajHeaderElement.getRole() @AT@ 2735 @LENGTH@ 27
------------------INS SimpleName@@Name:saajHeaderElement @TO@ MethodInvocation@@saajHeaderElement.getRole() @AT@ 2735 @LENGTH@ 17
------------------INS SimpleName@@MethodName:getRole:[] @TO@ MethodInvocation@@saajHeaderElement.getRole() @AT@ 2753 @LENGTH@ 9
---------INS IfStatement@@if (shouldProcess(headerRole,roles,isUltimateDestination)) {  result.add(saajHeaderElement);} @TO@ Block@@WhileBody:{  SOAPHeaderElement saajHeaderElement=(SOAPHeaderElement)iterator.next();  String headerRole=saajHeaderElement.getRole();  if (shouldProcess(headerRole,roles,isUltimateDestination)) {    result.add(saajHeaderElement);  }} @AT@ 2776 @LENGTH@ 123
------------INS MethodInvocation@@shouldProcess(headerRole,roles,isUltimateDestination) @TO@ IfStatement@@if (shouldProcess(headerRole,roles,isUltimateDestination)) {  result.add(saajHeaderElement);} @AT@ 2780 @LENGTH@ 55
---------------INS SimpleName@@MethodName:shouldProcess:[headerRole, roles, isUltimateDestination] @TO@ MethodInvocation@@shouldProcess(headerRole,roles,isUltimateDestination) @AT@ 2780 @LENGTH@ 55
------------------INS SimpleName@@headerRole @TO@ SimpleName@@MethodName:shouldProcess:[headerRole, roles, isUltimateDestination] @AT@ 2794 @LENGTH@ 10
------------------INS SimpleName@@roles @TO@ SimpleName@@MethodName:shouldProcess:[headerRole, roles, isUltimateDestination] @AT@ 2806 @LENGTH@ 5
------------------INS SimpleName@@isUltimateDestination @TO@ SimpleName@@MethodName:shouldProcess:[headerRole, roles, isUltimateDestination] @AT@ 2813 @LENGTH@ 21
------------INS Block@@ThenBody:{  result.add(saajHeaderElement);} @TO@ IfStatement@@if (shouldProcess(headerRole,roles,isUltimateDestination)) {  result.add(saajHeaderElement);} @AT@ 2837 @LENGTH@ 62
---------------INS ExpressionStatement@@MethodInvocation:result.add(saajHeaderElement) @TO@ Block@@ThenBody:{  result.add(saajHeaderElement);} @AT@ 2855 @LENGTH@ 30
------------------INS MethodInvocation@@result.add(saajHeaderElement) @TO@ ExpressionStatement@@MethodInvocation:result.add(saajHeaderElement) @AT@ 2855 @LENGTH@ 29
---------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.add(saajHeaderElement) @AT@ 2855 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:add:[saajHeaderElement] @TO@ MethodInvocation@@result.add(saajHeaderElement) @AT@ 2862 @LENGTH@ 22
------------------------INS SimpleName@@saajHeaderElement @TO@ SimpleName@@MethodName:add:[saajHeaderElement] @AT@ 2866 @LENGTH@ 17
---INS ReturnStatement@@ClassInstanceCreation:new SaajSoapHeaderElementIterator(result.iterator()) @TO@ MethodDeclaration@@public, Iterator, MethodName:examineHeaderElementsToProcess, String[] roles, boolean isUltimateDestination, SoapHeaderException,  @AT@ 2918 @LENGTH@ 60
------INS ClassInstanceCreation@@SaajSoapHeaderElementIterator[result.iterator()] @TO@ ReturnStatement@@ClassInstanceCreation:new SaajSoapHeaderElementIterator(result.iterator()) @AT@ 2925 @LENGTH@ 52
---------INS New@@new @TO@ ClassInstanceCreation@@SaajSoapHeaderElementIterator[result.iterator()] @AT@ 2925 @LENGTH@ 3
---------INS SimpleType@@SaajSoapHeaderElementIterator @TO@ ClassInstanceCreation@@SaajSoapHeaderElementIterator[result.iterator()] @AT@ 2929 @LENGTH@ 29
---------INS MethodInvocation@@result.iterator() @TO@ ClassInstanceCreation@@SaajSoapHeaderElementIterator[result.iterator()] @AT@ 2959 @LENGTH@ 17
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.iterator() @AT@ 2959 @LENGTH@ 6
------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@result.iterator() @AT@ 2966 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:from("direct:start").choice().when(header("foo").isEqualTo("bar")).to("mock:x").when(header("foo").isEqualTo("cheese")).to("mock:y").otherwise().to("mock:z") @TO@ MethodInvocation:from("direct:start").choice().when(header("foo").isEqualTo("bar")).setHeader("name",constant("a")).to("mock:x").when(header("foo").isEqualTo("cheese")).to("mock:y").otherwise().to("mock:z") @AT@ 2629 @LENGTH@ 233
---UPD MethodInvocation@@from("direct:start").choice().when(header("foo").isEqualTo("bar")).to("mock:x").when(header("foo").isEqualTo("cheese")).to("mock:y").otherwise().to("mock:z") @TO@ from("direct:start").choice().when(header("foo").isEqualTo("bar")).setHeader("name",constant("a")).to("mock:x").when(header("foo").isEqualTo("cheese")).to("mock:y").otherwise().to("mock:z") @AT@ 2629 @LENGTH@ 232
------INS MethodInvocation@@MethodName:setHeader:["name", constant("a")] @TO@ MethodInvocation@@from("direct:start").choice().when(header("foo").isEqualTo("bar")).to("mock:x").when(header("foo").isEqualTo("cheese")).to("mock:y").otherwise().to("mock:z") @AT@ 2629 @LENGTH@ 124
---------INS StringLiteral@@"name" @TO@ MethodInvocation@@MethodName:setHeader:["name", constant("a")] @AT@ 2731 @LENGTH@ 6
---------INS MethodInvocation@@constant("a") @TO@ MethodInvocation@@MethodName:setHeader:["name", constant("a")] @AT@ 2739 @LENGTH@ 13
------------INS SimpleName@@MethodName:constant:["a"] @TO@ MethodInvocation@@constant("a") @AT@ 2739 @LENGTH@ 13
---------------INS StringLiteral@@"a" @TO@ SimpleName@@MethodName:constant:["a"] @AT@ 2748 @LENGTH@ 3


UPD IfStatement@@if (source instanceof StaxSource) {  streamReader=((StaxSource)source).getXMLStreamReader();  StaxSource staxSource=(StaxSource)source;  streamReader=staxSource.getXMLStreamReader();  if (streamReader == null && staxSource.getXMLEventReader() != null) {    try {      streamReader=new XmlEventStreamReader(staxSource.getXMLEventReader());    } catch (    XMLStreamException ex) {    }  }} @TO@ if (source instanceof StaxSource) {  StaxSource staxSource=(StaxSource)source;  streamReader=staxSource.getXMLStreamReader();  if (streamReader == null && staxSource.getXMLEventReader() != null) {    try {      streamReader=new XmlEventStreamReader(staxSource.getXMLEventReader());    } catch (    XMLStreamException ex) {    }  }} @AT@ 2530 @LENGTH@ 559
---UPD Block@@ThenBody:{  streamReader=((StaxSource)source).getXMLStreamReader();  StaxSource staxSource=(StaxSource)source;  streamReader=staxSource.getXMLStreamReader();  if (streamReader == null && staxSource.getXMLEventReader() != null) {    try {      streamReader=new XmlEventStreamReader(staxSource.getXMLEventReader());    } catch (    XMLStreamException ex) {    }  }} @TO@ ThenBody:{  StaxSource staxSource=(StaxSource)source;  streamReader=staxSource.getXMLStreamReader();  if (streamReader == null && staxSource.getXMLEventReader() != null) {    try {      streamReader=new XmlEventStreamReader(staxSource.getXMLEventReader());    } catch (    XMLStreamException ex) {    }  }} @AT@ 2564 @LENGTH@ 525
------DEL ExpressionStatement@@Assignment:streamReader=((StaxSource)source).getXMLStreamReader() @AT@ 2578 @LENGTH@ 58
---------DEL Assignment@@streamReader=((StaxSource)source).getXMLStreamReader() @AT@ 2578 @LENGTH@ 57
------------DEL SimpleName@@streamReader @AT@ 2578 @LENGTH@ 12
------------DEL Operator@@= @AT@ 2590 @LENGTH@ 1
------------DEL MethodInvocation@@((StaxSource)source).getXMLStreamReader() @AT@ 2593 @LENGTH@ 42
---------------DEL ParenthesizedExpression@@((StaxSource)source) @AT@ 2593 @LENGTH@ 21
------------------DEL CastExpression@@(StaxSource)source @AT@ 2594 @LENGTH@ 19
---------------------DEL SimpleType@@StaxSource @AT@ 2595 @LENGTH@ 10
---------------------DEL SimpleName@@source @AT@ 2607 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:getXMLStreamReader:[] @AT@ 2615 @LENGTH@ 20


UPD MethodDeclaration@@protected, void, MethodName:assertRespondsWith, final String value, String containedText, InvalidPayloadException,  @TO@ protected, void, MethodName:assertRespondsWith, final String value, String expectedBody, InvalidPayloadException,  @AT@ 1554 @LENGTH@ 761
---UPD SingleVariableDeclaration@@String containedText @TO@ String expectedBody @AT@ 1608 @LENGTH@ 20
------UPD SimpleName@@containedText @TO@ expectedBody @AT@ 1615 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:assertNotNull("Should receive a response!",response) @AT@ 1975 @LENGTH@ 54
------DEL MethodInvocation@@assertNotNull("Should receive a response!",response) @AT@ 1975 @LENGTH@ 53
---------DEL SimpleName@@MethodName:assertNotNull:["Should receive a response!", response] @AT@ 1975 @LENGTH@ 53
------------DEL StringLiteral@@"Should receive a response!" @AT@ 1989 @LENGTH@ 28
------------DEL SimpleName@@response @AT@ 2019 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:System.out.println("Received response: " + response + " with out: "+ response.getOut()) @TO@ MethodInvocation:assertOutMessageBodyEquals(response,expectedBody) @AT@ 2039 @LENGTH@ 89
------UPD MethodInvocation@@System.out.println("Received response: " + response + " with out: "+ response.getOut()) @TO@ assertOutMessageBodyEquals(response,expectedBody) @AT@ 2039 @LENGTH@ 88
---------DEL QualifiedName@@Name:System.out @AT@ 2039 @LENGTH@ 10
---------UPD SimpleName@@MethodName:println:["Received response: " + response + " with out: "+ response.getOut()] @TO@ MethodName:assertOutMessageBodyEquals:[response, expectedBody] @AT@ 2050 @LENGTH@ 77
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:println:["Received response: " + response + " with out: "+ response.getOut()] @AT@ 1884 @LENGTH@ 8
------------INS SimpleName@@expectedBody @TO@ SimpleName@@MethodName:println:["Received response: " + response + " with out: "+ response.getOut()] @AT@ 1894 @LENGTH@ 12
------------DEL InfixExpression@@"Received response: " + response + " with out: "+ response.getOut() @AT@ 2058 @LENGTH@ 68
---------------DEL StringLiteral@@"Received response: " @AT@ 2058 @LENGTH@ 21
---------------DEL Operator@@+ @AT@ 2079 @LENGTH@ 1
---------------DEL SimpleName@@response @AT@ 2082 @LENGTH@ 8
---------------DEL StringLiteral@@" with out: " @AT@ 2093 @LENGTH@ 13
---------------DEL MethodInvocation@@response.getOut() @AT@ 2109 @LENGTH@ 17
------------------DEL SimpleName@@Name:response @AT@ 2109 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:getOut:[] @AT@ 2118 @LENGTH@ 8
---DEL VariableDeclarationStatement@@String text=ExchangeHelper.getMandatoryOutBody(response,String.class); @AT@ 2146 @LENGTH@ 73
------DEL SimpleType@@String @AT@ 2146 @LENGTH@ 6
------DEL VariableDeclarationFragment@@text=ExchangeHelper.getMandatoryOutBody(response,String.class) @AT@ 2153 @LENGTH@ 65
---------DEL SimpleName@@text @AT@ 2153 @LENGTH@ 4
---------DEL MethodInvocation@@ExchangeHelper.getMandatoryOutBody(response,String.class) @AT@ 2160 @LENGTH@ 58
------------DEL SimpleName@@Name:ExchangeHelper @AT@ 2160 @LENGTH@ 14
------------DEL SimpleName@@MethodName:getMandatoryOutBody:[response, String.class] @AT@ 2175 @LENGTH@ 43
---------------DEL SimpleName@@response @AT@ 2195 @LENGTH@ 8
---------------DEL TypeLiteral@@String.class @AT@ 2205 @LENGTH@ 12
---DEL ExpressionStatement@@MethodInvocation:log.info("Received: " + text) @AT@ 2228 @LENGTH@ 30
------DEL MethodInvocation@@log.info("Received: " + text) @AT@ 2228 @LENGTH@ 29
---------DEL SimpleName@@Name:log @AT@ 2228 @LENGTH@ 3
---------DEL SimpleName@@MethodName:info:["Received: " + text] @AT@ 2232 @LENGTH@ 25
------------DEL InfixExpression@@"Received: " + text @AT@ 2237 @LENGTH@ 19
---------------DEL StringLiteral@@"Received: " @AT@ 2237 @LENGTH@ 12
---------------DEL Operator@@+ @AT@ 2249 @LENGTH@ 1
---------------DEL SimpleName@@text @AT@ 2252 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:assertStringContains(text,containedText) @AT@ 2267 @LENGTH@ 42
------DEL MethodInvocation@@assertStringContains(text,containedText) @AT@ 2267 @LENGTH@ 41
---------DEL SimpleName@@MethodName:assertStringContains:[text, containedText] @AT@ 2267 @LENGTH@ 41
------------DEL SimpleName@@text @AT@ 2288 @LENGTH@ 4
------------DEL SimpleName@@containedText @AT@ 2294 @LENGTH@ 13


INS MethodDeclaration@@protected, String, MethodName:getFilterProcessesUrl,  @TO@ TypeDeclaration@@[public]LogoutFilter, [Filter] @AT@ 6395 @LENGTH@ 85
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, String, MethodName:getFilterProcessesUrl,  @AT@ 6395 @LENGTH@ 9
---INS SimpleType@@String @TO@ MethodDeclaration@@protected, String, MethodName:getFilterProcessesUrl,  @AT@ 6405 @LENGTH@ 6
---INS SimpleName@@MethodName:getFilterProcessesUrl @TO@ MethodDeclaration@@protected, String, MethodName:getFilterProcessesUrl,  @AT@ 6412 @LENGTH@ 21
---INS ReturnStatement@@SimpleName:filterProcessesUrl @TO@ MethodDeclaration@@protected, String, MethodName:getFilterProcessesUrl,  @AT@ 6447 @LENGTH@ 26
------INS SimpleName@@filterProcessesUrl @TO@ ReturnStatement@@SimpleName:filterProcessesUrl @AT@ 6454 @LENGTH@ 18


INS IfStatement@@if (applicationContext instanceof ConfigurableApplicationContext) {  return new SpringInjector((ConfigurableApplicationContext)applicationContext);} else {  LOG.warn("Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext);  return super.createInjector();} @TO@ MethodDeclaration@@protected, Injector, MethodName:createInjector,  @AT@ 6156 @LENGTH@ 379
---INS InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @TO@ IfStatement@@if (applicationContext instanceof ConfigurableApplicationContext) {  return new SpringInjector((ConfigurableApplicationContext)applicationContext);} else {  LOG.warn("Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext);  return super.createInjector();} @AT@ 6160 @LENGTH@ 60
------INS SimpleName@@applicationContext @TO@ InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @AT@ 6160 @LENGTH@ 18
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @AT@ 6179 @LENGTH@ 10
------INS SimpleType@@ConfigurableApplicationContext @TO@ InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @AT@ 6190 @LENGTH@ 30
---INS Block@@ThenBody:{  return new SpringInjector((ConfigurableApplicationContext)applicationContext);} @TO@ IfStatement@@if (applicationContext instanceof ConfigurableApplicationContext) {  return new SpringInjector((ConfigurableApplicationContext)applicationContext);} else {  LOG.warn("Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext);  return super.createInjector();} @AT@ 6222 @LENGTH@ 102
------INS ReturnStatement@@ClassInstanceCreation:new SpringInjector((ConfigurableApplicationContext)applicationContext) @TO@ Block@@ThenBody:{  return new SpringInjector((ConfigurableApplicationContext)applicationContext);} @AT@ 6236 @LENGTH@ 78
---------MOV ClassInstanceCreation@@SpringInjector[(AbstractRefreshableApplicationContext)getApplicationContext()] @TO@ ReturnStatement@@ClassInstanceCreation:new SpringInjector((ConfigurableApplicationContext)applicationContext) @AT@ 6163 @LENGTH@ 82
------------UPD CastExpression@@(AbstractRefreshableApplicationContext)getApplicationContext() @TO@ (ConfigurableApplicationContext)applicationContext @AT@ 6182 @LENGTH@ 62
---------------UPD SimpleType@@AbstractRefreshableApplicationContext @TO@ ConfigurableApplicationContext @AT@ 6183 @LENGTH@ 37
---------------DEL MethodInvocation@@MethodName:getApplicationContext:[] @AT@ 6221 @LENGTH@ 23
---------------INS SimpleName@@applicationContext @TO@ CastExpression@@(AbstractRefreshableApplicationContext)getApplicationContext() @AT@ 6294 @LENGTH@ 18
---INS Block@@ElseBody:{  LOG.warn("Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext);  return super.createInjector();} @TO@ IfStatement@@if (applicationContext instanceof ConfigurableApplicationContext) {  return new SpringInjector((ConfigurableApplicationContext)applicationContext);} else {  LOG.warn("Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext);  return super.createInjector();} @AT@ 6338 @LENGTH@ 197
------INS ExpressionStatement@@MethodInvocation:LOG.warn("Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext) @TO@ Block@@ElseBody:{  LOG.warn("Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext);  return super.createInjector();} @AT@ 6352 @LENGTH@ 130
---------INS MethodInvocation@@LOG.warn("Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext) @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext) @AT@ 6352 @LENGTH@ 129
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext) @AT@ 6352 @LENGTH@ 3
------------INS SimpleName@@MethodName:warn:["Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext] @TO@ MethodInvocation@@LOG.warn("Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext) @AT@ 6356 @LENGTH@ 125
---------------INS InfixExpression@@"Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext @TO@ SimpleName@@MethodName:warn:["Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext] @AT@ 6361 @LENGTH@ 119
------------------INS StringLiteral@@"Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " @TO@ InfixExpression@@"Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext @AT@ 6361 @LENGTH@ 98
------------------INS Operator@@+ @TO@ InfixExpression@@"Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext @AT@ 6459 @LENGTH@ 1
------------------INS SimpleName@@applicationContext @TO@ InfixExpression@@"Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext @AT@ 6462 @LENGTH@ 18
------INS ReturnStatement@@SuperMethodInvocation:super.createInjector() @TO@ Block@@ElseBody:{  LOG.warn("Cannot use SpringInjector as applicationContext is not a ConfigurableApplicationContext as its: " + applicationContext);  return super.createInjector();} @AT@ 6495 @LENGTH@ 30
---------INS SuperMethodInvocation@@super.createInjector() @TO@ ReturnStatement@@SuperMethodInvocation:super.createInjector() @AT@ 6502 @LENGTH@ 22
------------INS SimpleName@@MethodName:createInjector:[] @TO@ SuperMethodInvocation@@super.createInjector() @AT@ 6508 @LENGTH@ 14


UPD TypeDeclaration@@[public]InstrumentationAgent,  @TO@ [public]InstrumentationAgent, [Service] @AT@ 946 @LENGTH@ 1206
---INS SimpleType@@Service @TO@ TypeDeclaration@@[public]InstrumentationAgent,  @AT@ 1082 @LENGTH@ 7


UPD Block@@ThenBody:{  logger.debug("Batch operation about to start at count=" + context.getStartedCount());  Object value=getNextResult(context,callback,state);  if (value instanceof Throwable) {    throwables.add(value);  }  executeAfterInterceptors(context,value);  result=result.and(canContinue(value));  if (isComplete(context,value) || isMarkedComplete(context)) {    running=false;  }} @TO@ ThenBody:{  logger.debug("Batch operation about to start at count=" + context.getStartedCount());  Object value=getNextResult(context,callback,state);  if (value instanceof Throwable) {    throwables.add(value);  }  executeAfterInterceptors(context,value);  if (value instanceof ExitStatus) {    result=(ExitStatus)value;  }  if (isComplete(context,value) || isMarkedComplete(context)) {    running=false;  }} @AT@ 7225 @LENGTH@ 637
---UPD ExpressionStatement@@Assignment:result=result.and(canContinue(value)) @TO@ Assignment:result=(ExitStatus)value @AT@ 7671 @LENGTH@ 40
---INS IfStatement@@if (value instanceof ExitStatus) {  result=(ExitStatus)value;} @TO@ Block@@ThenBody:{  logger.debug("Batch operation about to start at count=" + context.getStartedCount());  Object value=getNextResult(context,callback,state);  if (value instanceof Throwable) {    throwables.add(value);  }  executeAfterInterceptors(context,value);  result=result.and(canContinue(value));  if (isComplete(context,value) || isMarkedComplete(context)) {    running=false;  }} @AT@ 7677 @LENGTH@ 73
------INS InstanceofExpression@@value instanceof ExitStatus @TO@ IfStatement@@if (value instanceof ExitStatus) {  result=(ExitStatus)value;} @AT@ 7680 @LENGTH@ 27
---------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof ExitStatus @AT@ 7680 @LENGTH@ 5
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof ExitStatus @AT@ 7686 @LENGTH@ 10
---------INS SimpleType@@ExitStatus @TO@ InstanceofExpression@@value instanceof ExitStatus @AT@ 7697 @LENGTH@ 10
------INS Block@@ThenBody:{  result=(ExitStatus)value;} @TO@ IfStatement@@if (value instanceof ExitStatus) {  result=(ExitStatus)value;} @AT@ 7708 @LENGTH@ 42
---------MOV ExpressionStatement@@Assignment:result=result.and(canContinue(value)) @TO@ Block@@ThenBody:{  result=(ExitStatus)value;} @AT@ 7671 @LENGTH@ 40
------------UPD Assignment@@result=result.and(canContinue(value)) @TO@ result=(ExitStatus)value @AT@ 7671 @LENGTH@ 39
---------------DEL MethodInvocation@@result.and(canContinue(value)) @AT@ 7680 @LENGTH@ 30
------------------DEL SimpleName@@Name:result @AT@ 7680 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:and:[canContinue(value)] @AT@ 7687 @LENGTH@ 23
---------------------DEL MethodInvocation@@canContinue(value) @AT@ 7691 @LENGTH@ 18
------------------------DEL SimpleName@@MethodName:canContinue:[value] @AT@ 7691 @LENGTH@ 18
---------------------------DEL SimpleName@@value @AT@ 7703 @LENGTH@ 5
---------------INS CastExpression@@(ExitStatus)value @TO@ Assignment@@result=result.and(canContinue(value)) @AT@ 7725 @LENGTH@ 17
------------------INS SimpleType@@ExitStatus @TO@ CastExpression@@(ExitStatus)value @AT@ 7726 @LENGTH@ 10
------------------INS SimpleName@@value @TO@ CastExpression@@(ExitStatus)value @AT@ 7737 @LENGTH@ 5


INS MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @TO@ TypeDeclaration@@[public]SimpleJobIdentifier, [JobIdentifier] @AT@ 1538 @LENGTH@ 92
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1538 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1545 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1553 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object obj @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1560 @LENGTH@ 10
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object obj @AT@ 1560 @LENGTH@ 6
------INS SimpleName@@obj @TO@ SingleVariableDeclaration@@Object obj @AT@ 1567 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:EqualsBuilder.reflectionEquals(this,obj) @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1577 @LENGTH@ 49
------INS MethodInvocation@@EqualsBuilder.reflectionEquals(this,obj) @TO@ ReturnStatement@@MethodInvocation:EqualsBuilder.reflectionEquals(this,obj) @AT@ 1584 @LENGTH@ 41
---------INS SimpleName@@Name:EqualsBuilder @TO@ MethodInvocation@@EqualsBuilder.reflectionEquals(this,obj) @AT@ 1584 @LENGTH@ 13
---------INS SimpleName@@MethodName:reflectionEquals:[this, obj] @TO@ MethodInvocation@@EqualsBuilder.reflectionEquals(this,obj) @AT@ 1598 @LENGTH@ 27
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:reflectionEquals:[this, obj] @AT@ 1615 @LENGTH@ 4
------------INS SimpleName@@obj @TO@ SimpleName@@MethodName:reflectionEquals:[this, obj] @AT@ 1621 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:assertEquals("D6043",RefinedSoundex.US_ENGLISH.encode("dogs")) @TO@ MethodDeclaration@@public, void, MethodName:testEncode,  @AT@ 4086 @LENGTH@ 64
---INS MethodInvocation@@assertEquals("D6043",RefinedSoundex.US_ENGLISH.encode("dogs")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("D6043",RefinedSoundex.US_ENGLISH.encode("dogs")) @AT@ 4086 @LENGTH@ 63
------INS SimpleName@@MethodName:assertEquals:["D6043", RefinedSoundex.US_ENGLISH.encode("dogs")] @TO@ MethodInvocation@@assertEquals("D6043",RefinedSoundex.US_ENGLISH.encode("dogs")) @AT@ 4086 @LENGTH@ 63
---------INS StringLiteral@@"D6043" @TO@ SimpleName@@MethodName:assertEquals:["D6043", RefinedSoundex.US_ENGLISH.encode("dogs")] @AT@ 4099 @LENGTH@ 7
---------INS MethodInvocation@@RefinedSoundex.US_ENGLISH.encode("dogs") @TO@ SimpleName@@MethodName:assertEquals:["D6043", RefinedSoundex.US_ENGLISH.encode("dogs")] @AT@ 4108 @LENGTH@ 40
------------INS QualifiedName@@Name:RefinedSoundex.US_ENGLISH @TO@ MethodInvocation@@RefinedSoundex.US_ENGLISH.encode("dogs") @AT@ 4108 @LENGTH@ 25
------------INS SimpleName@@MethodName:encode:["dogs"] @TO@ MethodInvocation@@RefinedSoundex.US_ENGLISH.encode("dogs") @AT@ 4134 @LENGTH@ 14
---------------INS StringLiteral@@"dogs" @TO@ SimpleName@@MethodName:encode:["dogs"] @AT@ 4141 @LENGTH@ 6


UPD MethodDeclaration@@public, HttpProducer, MethodName:createProducer, Exception,  @TO@ public, Producer<HttpExchange>, MethodName:createProducer, Exception,  @AT@ 1614 @LENGTH@ 100
---DEL SimpleType@@HttpProducer @AT@ 1621 @LENGTH@ 12
---INS ParameterizedType@@Producer<HttpExchange> @TO@ MethodDeclaration@@public, HttpProducer, MethodName:createProducer, Exception,  @AT@ 1655 @LENGTH@ 22
------INS SimpleType@@Producer @TO@ ParameterizedType@@Producer<HttpExchange> @AT@ 1655 @LENGTH@ 8
------INS SimpleType@@HttpExchange @TO@ ParameterizedType@@Producer<HttpExchange> @AT@ 1664 @LENGTH@ 12


UPD ReturnStatement@@ClassInstanceCreation:new DefaultExchange(context) @TO@ ClassInstanceCreation:new DefaultExchange(this) @AT@ 3826 @LENGTH@ 36
---UPD ClassInstanceCreation@@DefaultExchange[context] @TO@ DefaultExchange[this] @AT@ 3833 @LENGTH@ 28
------DEL SimpleName@@context @AT@ 3853 @LENGTH@ 7
------INS ThisExpression@@this @TO@ ClassInstanceCreation@@DefaultExchange[context] @AT@ 4020 @LENGTH@ 4


UPD ReturnStatement@@SimpleName:exchange @TO@ MethodInvocation:send(endpoint,exchange) @AT@ 2217 @LENGTH@ 16
---MOV MethodInvocation@@send(endpoint,exchange) @TO@ ReturnStatement@@SimpleName:exchange @AT@ 2183 @LENGTH@ 24
---DEL SimpleName@@exchange @AT@ 2224 @LENGTH@ 8


INS MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]FileAsyncRouteTest, ContextTestSupport @AT@ 1630 @LENGTH@ 122
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1630 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1640 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1645 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1660 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:recursiveDelete("target/test-async-inbox") @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1680 @LENGTH@ 43
------INS MethodInvocation@@recursiveDelete("target/test-async-inbox") @TO@ ExpressionStatement@@MethodInvocation:recursiveDelete("target/test-async-inbox") @AT@ 1680 @LENGTH@ 42
---------INS SimpleName@@MethodName:recursiveDelete:["target/test-async-inbox"] @TO@ MethodInvocation@@recursiveDelete("target/test-async-inbox") @AT@ 1680 @LENGTH@ 42
------------INS StringLiteral@@"target/test-async-inbox" @TO@ SimpleName@@MethodName:recursiveDelete:["target/test-async-inbox"] @AT@ 1696 @LENGTH@ 25
---INS ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1732 @LENGTH@ 14
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1732 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 1738 @LENGTH@ 5


INS MethodDeclaration@@public, voidMethodName:XmppExchange, DefaultExchange parent, XmppBinding binding,  @TO@ TypeDeclaration@@[public]XmppExchange, DefaultExchange @AT@ 1607 @LENGTH@ 127
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:XmppExchange, DefaultExchange parent, XmppBinding binding,  @AT@ 1607 @LENGTH@ 6
---INS SimpleName@@MethodName:XmppExchange @TO@ MethodDeclaration@@public, voidMethodName:XmppExchange, DefaultExchange parent, XmppBinding binding,  @AT@ 1614 @LENGTH@ 12
---INS SingleVariableDeclaration@@DefaultExchange parent @TO@ MethodDeclaration@@public, voidMethodName:XmppExchange, DefaultExchange parent, XmppBinding binding,  @AT@ 1627 @LENGTH@ 22
------INS SimpleType@@DefaultExchange @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 1627 @LENGTH@ 15
------INS SimpleName@@parent @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 1643 @LENGTH@ 6
---INS SingleVariableDeclaration@@XmppBinding binding @TO@ MethodDeclaration@@public, voidMethodName:XmppExchange, DefaultExchange parent, XmppBinding binding,  @AT@ 1651 @LENGTH@ 19
------INS SimpleType@@XmppBinding @TO@ SingleVariableDeclaration@@XmppBinding binding @AT@ 1651 @LENGTH@ 11
------INS SimpleName@@binding @TO@ SingleVariableDeclaration@@XmppBinding binding @AT@ 1663 @LENGTH@ 7
---INS SuperConstructorInvocation@@super(parent);
 @TO@ MethodDeclaration@@public, voidMethodName:XmppExchange, DefaultExchange parent, XmppBinding binding,  @AT@ 1682 @LENGTH@ 14
------INS SimpleName@@parent @TO@ SuperConstructorInvocation@@super(parent);
 @AT@ 1688 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:this.binding=binding @TO@ MethodDeclaration@@public, voidMethodName:XmppExchange, DefaultExchange parent, XmppBinding binding,  @AT@ 1705 @LENGTH@ 23
------INS Assignment@@this.binding=binding @TO@ ExpressionStatement@@Assignment:this.binding=binding @AT@ 1705 @LENGTH@ 22
---------INS FieldAccess@@this.binding @TO@ Assignment@@this.binding=binding @AT@ 1705 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.binding @AT@ 1705 @LENGTH@ 4
------------INS SimpleName@@binding @TO@ FieldAccess@@this.binding @AT@ 1710 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.binding=binding @AT@ 1717 @LENGTH@ 1
---------INS SimpleName@@binding @TO@ Assignment@@this.binding=binding @AT@ 1720 @LENGTH@ 7


UPD IfStatement@@if (out != null) {  result.getOut(true).copyFrom(out);} @TO@ if (out != null) {  result.getOut(true).copyFrom(out);} else {  result.getOut(true).copyFrom(source.getIn());} @AT@ 6803 @LENGTH@ 83
---INS Block@@ElseBody:{  result.getOut(true).copyFrom(source.getIn());} @TO@ IfStatement@@if (out != null) {  result.getOut(true).copyFrom(out);} @AT@ 6904 @LENGTH@ 323
------INS ExpressionStatement@@MethodInvocation:result.getOut(true).copyFrom(source.getIn()) @TO@ Block@@ElseBody:{  result.getOut(true).copyFrom(source.getIn());} @AT@ 7168 @LENGTH@ 45
---------INS MethodInvocation@@result.getOut(true).copyFrom(source.getIn()) @TO@ ExpressionStatement@@MethodInvocation:result.getOut(true).copyFrom(source.getIn()) @AT@ 7168 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getOut:[true] @TO@ MethodInvocation@@result.getOut(true).copyFrom(source.getIn()) @AT@ 7168 @LENGTH@ 19
---------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:getOut:[true] @AT@ 7182 @LENGTH@ 4
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getOut(true).copyFrom(source.getIn()) @AT@ 7168 @LENGTH@ 6
------------INS SimpleName@@MethodName:copyFrom:[source.getIn()] @TO@ MethodInvocation@@result.getOut(true).copyFrom(source.getIn()) @AT@ 7188 @LENGTH@ 24
---------------INS MethodInvocation@@source.getIn() @TO@ SimpleName@@MethodName:copyFrom:[source.getIn()] @AT@ 7197 @LENGTH@ 14
------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getIn() @AT@ 7197 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@source.getIn() @AT@ 7204 @LENGTH@ 7


UPD FieldDeclaration@@private, static, Map, [beanFactories=new HashMap()] @TO@ private, static, Map, [beanFactories=Collections.synchronizedMap(new HashMap())] @AT@ 2220 @LENGTH@ 49
---UPD VariableDeclarationFragment@@beanFactories=new HashMap() @TO@ beanFactories=Collections.synchronizedMap(new HashMap()) @AT@ 2239 @LENGTH@ 29
------DEL ClassInstanceCreation@@HashMap[] @AT@ 2255 @LENGTH@ 13
------INS MethodInvocation@@Collections.synchronizedMap(new HashMap()) @TO@ VariableDeclarationFragment@@beanFactories=new HashMap() @AT@ 2285 @LENGTH@ 42
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.synchronizedMap(new HashMap()) @AT@ 2285 @LENGTH@ 11
---------INS SimpleName@@MethodName:synchronizedMap:[new HashMap()] @TO@ MethodInvocation@@Collections.synchronizedMap(new HashMap()) @AT@ 2297 @LENGTH@ 30
------------INS ClassInstanceCreation@@HashMap[] @TO@ SimpleName@@MethodName:synchronizedMap:[new HashMap()] @AT@ 2313 @LENGTH@ 13
---------------MOV New@@new @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2255 @LENGTH@ 3
---------------MOV SimpleType@@HashMap @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2259 @LENGTH@ 7


UPD TypeDeclaration@@[private]MockStaxEventReaderInputSource, StaxEventReaderInputSource @TO@ [private, static]MockStaxEventReaderInputSource, StaxEventReaderInputSource @AT@ 10581 @LENGTH@ 355
---INS Modifier@@static @TO@ TypeDeclaration@@[private]MockStaxEventReaderInputSource, StaxEventReaderInputSource @AT@ 10589 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:callback.done(false) @TO@ MethodInvocation:callback.done(true) @AT@ 1942 @LENGTH@ 21
---UPD MethodInvocation@@callback.done(false) @TO@ callback.done(true) @AT@ 1942 @LENGTH@ 20
------UPD SimpleName@@MethodName:done:[false] @TO@ MethodName:done:[true] @AT@ 1951 @LENGTH@ 11
---------UPD BooleanLiteral@@false @TO@ true @AT@ 1956 @LENGTH@ 5


UPD ReturnStatement@@ClassInstanceCreation:new MailExchange(getContext(),getPattern(),binding) @TO@ ClassInstanceCreation:new MailExchange(this,binding) @AT@ 2141 @LENGTH@ 61
---UPD ClassInstanceCreation@@MailExchange[getContext(), getPattern(), binding] @TO@ MailExchange[this, binding] @AT@ 2148 @LENGTH@ 53
------DEL MethodInvocation@@MethodName:getContext:[] @AT@ 2165 @LENGTH@ 12
------DEL MethodInvocation@@MethodName:getPattern:[] @AT@ 2179 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ClassInstanceCreation@@MailExchange[getContext(), getPattern(), binding] @AT@ 2298 @LENGTH@ 4


INS ExpressionStatement@@Assignment:body=body.toLowerCase() @TO@ MethodDeclaration@@public, void, MethodName:testHttpGet, Exception,  @AT@ 2086 @LENGTH@ 26
---INS Assignment@@body=body.toLowerCase() @TO@ ExpressionStatement@@Assignment:body=body.toLowerCase() @AT@ 2086 @LENGTH@ 25
------INS SimpleName@@body @TO@ Assignment@@body=body.toLowerCase() @AT@ 2086 @LENGTH@ 4
------INS Operator@@= @TO@ Assignment@@body=body.toLowerCase() @AT@ 2090 @LENGTH@ 1
------INS MethodInvocation@@body.toLowerCase() @TO@ Assignment@@body=body.toLowerCase() @AT@ 2093 @LENGTH@ 18
---------INS SimpleName@@Name:body @TO@ MethodInvocation@@body.toLowerCase() @AT@ 2093 @LENGTH@ 4
---------INS SimpleName@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@body.toLowerCase() @AT@ 2098 @LENGTH@ 13


UPD TypeDeclaration@@[private]MockMarshaller, [Marshaller] @TO@ [private, static]MockMarshaller, [Marshaller] @AT@ 2054 @LENGTH@ 579
---INS Modifier@@static @TO@ TypeDeclaration@@[private]MockMarshaller, [Marshaller] @AT@ 2062 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:checkRepository(BatchStatus.COMPLETED) @TO@ MethodInvocation:checkRepository(BatchStatus.COMPLETED,ExitStatus.FINISHED.getExitCode()) @AT@ 6210 @LENGTH@ 39
---UPD MethodInvocation@@checkRepository(BatchStatus.COMPLETED) @TO@ checkRepository(BatchStatus.COMPLETED,ExitStatus.FINISHED.getExitCode()) @AT@ 6210 @LENGTH@ 38
------UPD SimpleName@@MethodName:checkRepository:[BatchStatus.COMPLETED] @TO@ MethodName:checkRepository:[BatchStatus.COMPLETED, ExitStatus.FINISHED.getExitCode()] @AT@ 6210 @LENGTH@ 38
---------INS MethodInvocation@@ExitStatus.FINISHED.getExitCode() @TO@ SimpleName@@MethodName:checkRepository:[BatchStatus.COMPLETED] @AT@ 6249 @LENGTH@ 33
------------INS QualifiedName@@Name:ExitStatus.FINISHED @TO@ MethodInvocation@@ExitStatus.FINISHED.getExitCode() @AT@ 6249 @LENGTH@ 19
------------INS SimpleName@@MethodName:getExitCode:[] @TO@ MethodInvocation@@ExitStatus.FINISHED.getExitCode() @AT@ 6269 @LENGTH@ 13


UPD VariableDeclarationStatement@@List<ActivityState> list=template.find("select x from " + ActivityState.class.getName() + " x where x.escalationLevel = ?1 and x.timeOverdue < ?2",escalateLevel,timeNow); @TO@ List<ActivityState> list=template.find("select x from " + ActivityState.class.getName() + " x where x.timeOverdue < ?1",timeNow); @AT@ 3001 @LENGTH@ 174
---UPD VariableDeclarationFragment@@list=template.find("select x from " + ActivityState.class.getName() + " x where x.escalationLevel = ?1 and x.timeOverdue < ?2",escalateLevel,timeNow) @TO@ list=template.find("select x from " + ActivityState.class.getName() + " x where x.timeOverdue < ?1",timeNow) @AT@ 3021 @LENGTH@ 153
------UPD MethodInvocation@@template.find("select x from " + ActivityState.class.getName() + " x where x.escalationLevel = ?1 and x.timeOverdue < ?2",escalateLevel,timeNow) @TO@ template.find("select x from " + ActivityState.class.getName() + " x where x.timeOverdue < ?1",timeNow) @AT@ 3028 @LENGTH@ 146
---------UPD SimpleName@@MethodName:find:["select x from " + ActivityState.class.getName() + " x where x.escalationLevel = ?1 and x.timeOverdue < ?2", escalateLevel, timeNow] @TO@ MethodName:find:["select x from " + ActivityState.class.getName() + " x where x.timeOverdue < ?1", timeNow] @AT@ 3037 @LENGTH@ 137
------------UPD InfixExpression@@"select x from " + ActivityState.class.getName() + " x where x.escalationLevel = ?1 and x.timeOverdue < ?2" @TO@ "select x from " + ActivityState.class.getName() + " x where x.timeOverdue < ?1" @AT@ 3042 @LENGTH@ 107
---------------UPD StringLiteral@@" x where x.escalationLevel = ?1 and x.timeOverdue < ?2" @TO@ " x where x.timeOverdue < ?1" @AT@ 3093 @LENGTH@ 56
------------DEL SimpleName@@escalateLevel @AT@ 3151 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:registerBeanFactory() @TO@ MethodDeclaration@@public, voidMethodName:DefaultConfigurationBuilder,  @AT@ 14966 @LENGTH@ 22
---INS MethodInvocation@@MethodName:registerBeanFactory:[] @TO@ ExpressionStatement@@MethodInvocation:registerBeanFactory() @AT@ 14966 @LENGTH@ 21


MOV FieldDeclaration@@public, static, final, RefinedSoundex, [US_ENGLISH=new RefinedSoundex()] @TO@ TypeDeclaration@@[public]RefinedSoundex, [StringEncoder] @AT@ 1409 @LENGTH@ 69


INS ExpressionStatement@@MethodInvocation:Assert.state(source != null,"Source must not be null.") @TO@ MethodDeclaration@@public, void, MethodName:restoreFrom, RestartData data,  @AT@ 1635 @LENGTH@ 57
---INS MethodInvocation@@Assert.state(source != null,"Source must not be null.") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(source != null,"Source must not be null.") @AT@ 1635 @LENGTH@ 56
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(source != null,"Source must not be null.") @AT@ 1635 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[source != null, "Source must not be null."] @TO@ MethodInvocation@@Assert.state(source != null,"Source must not be null.") @AT@ 1642 @LENGTH@ 49
---------INS InfixExpression@@source != null @TO@ SimpleName@@MethodName:state:[source != null, "Source must not be null."] @AT@ 1648 @LENGTH@ 14
------------INS SimpleName@@source @TO@ InfixExpression@@source != null @AT@ 1648 @LENGTH@ 6
------------INS Operator@@!= @TO@ InfixExpression@@source != null @AT@ 1654 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@source != null @AT@ 1658 @LENGTH@ 4
---------INS StringLiteral@@"Source must not be null." @TO@ SimpleName@@MethodName:state:[source != null, "Source must not be null."] @AT@ 1664 @LENGTH@ 26


UPD MethodDeclaration@@public, T, MethodName:newInstance, Class<T> type,  @TO@ public, T, T, MethodName:newInstance, Class<T> type,  @AT@ 1240 @LENGTH@ 319


UPD FieldDeclaration@@protected, TypeConverter, [converter=new DefaultTypeConverter()] @TO@ protected, TypeConverter, [converter=new DefaultTypeConverter(new ReflectionInjector())] @AT@ 1280 @LENGTH@ 63
---UPD VariableDeclarationFragment@@converter=new DefaultTypeConverter() @TO@ converter=new DefaultTypeConverter(new ReflectionInjector()) @AT@ 1304 @LENGTH@ 38
------UPD ClassInstanceCreation@@DefaultTypeConverter[] @TO@ DefaultTypeConverter[new ReflectionInjector()] @AT@ 1316 @LENGTH@ 26
---------INS ClassInstanceCreation@@ReflectionInjector[] @TO@ ClassInstanceCreation@@DefaultTypeConverter[] @AT@ 1390 @LENGTH@ 24
------------INS New@@new @TO@ ClassInstanceCreation@@ReflectionInjector[] @AT@ 1390 @LENGTH@ 3
------------INS SimpleType@@ReflectionInjector @TO@ ClassInstanceCreation@@ReflectionInjector[] @AT@ 1394 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:testOnlyProperties,  @TO@ TypeDeclaration@@[public]PipelineTest, ContextTestSupport @AT@ 4296 @LENGTH@ 417
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testOnlyProperties,  @AT@ 4296 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testOnlyProperties,  @AT@ 4303 @LENGTH@ 4
---INS SimpleName@@MethodName:testOnlyProperties @TO@ MethodDeclaration@@public, void, MethodName:testOnlyProperties,  @AT@ 4308 @LENGTH@ 18
---INS VariableDeclarationStatement@@Exchange exchange=template.send("direct:b",new Processor(){
  public void process(  Exchange exchange){
    exchange.getIn().setHeader("header","headerValue");
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:testOnlyProperties,  @AT@ 4339 @LENGTH@ 211
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=template.send("direct:b",new Processor(){
  public void process(  Exchange exchange){
    exchange.getIn().setHeader("header","headerValue");
  }
}
); @AT@ 4339 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=template.send("direct:b",new Processor(){
  public void process(  Exchange exchange){
    exchange.getIn().setHeader("header","headerValue");
  }
}
) @TO@ VariableDeclarationStatement@@Exchange exchange=template.send("direct:b",new Processor(){
  public void process(  Exchange exchange){
    exchange.getIn().setHeader("header","headerValue");
  }
}
); @AT@ 4348 @LENGTH@ 201
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=template.send("direct:b",new Processor(){
  public void process(  Exchange exchange){
    exchange.getIn().setHeader("header","headerValue");
  }
}
) @AT@ 4348 @LENGTH@ 8
---------INS MethodInvocation@@template.send("direct:b",new Processor(){
  public void process(  Exchange exchange){
    exchange.getIn().setHeader("header","headerValue");
  }
}
) @TO@ VariableDeclarationFragment@@exchange=template.send("direct:b",new Processor(){
  public void process(  Exchange exchange){
    exchange.getIn().setHeader("header","headerValue");
  }
}
) @AT@ 4359 @LENGTH@ 190
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.send("direct:b",new Processor(){
  public void process(  Exchange exchange){
    exchange.getIn().setHeader("header","headerValue");
  }
}
) @AT@ 4359 @LENGTH@ 8
------------INS SimpleName@@MethodName:send:["direct:b", new Processor(){
  public void process(  Exchange exchange){
    exchange.getIn().setHeader("header","headerValue");
  }
}
] @TO@ MethodInvocation@@template.send("direct:b",new Processor(){
  public void process(  Exchange exchange){
    exchange.getIn().setHeader("header","headerValue");
  }
}
) @AT@ 4368 @LENGTH@ 181
---------------INS StringLiteral@@"direct:b" @TO@ SimpleName@@MethodName:send:["direct:b", new Processor(){
  public void process(  Exchange exchange){
    exchange.getIn().setHeader("header","headerValue");
  }
}
] @AT@ 4373 @LENGTH@ 10
---------------INS ClassInstanceCreation@@Processor[] @TO@ SimpleName@@MethodName:send:["direct:b", new Processor(){
  public void process(  Exchange exchange){
    exchange.getIn().setHeader("header","headerValue");
  }
}
] @AT@ 4385 @LENGTH@ 163
------------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 4385 @LENGTH@ 3
------------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 4389 @LENGTH@ 9
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 4401 @LENGTH@ 147
---------------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4415 @LENGTH@ 123
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange,  @AT@ 4415 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange,  @AT@ 4422 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange,  @AT@ 4427 @LENGTH@ 7
------------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange,  @AT@ 4435 @LENGTH@ 17
---------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 4435 @LENGTH@ 8
---------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 4444 @LENGTH@ 8
------------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("header","headerValue") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange,  @AT@ 4472 @LENGTH@ 52
---------------------------INS MethodInvocation@@exchange.getIn().setHeader("header","headerValue") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("header","headerValue") @AT@ 4472 @LENGTH@ 51
------------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader("header","headerValue") @AT@ 4472 @LENGTH@ 16
------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader("header","headerValue") @AT@ 4472 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:setHeader:["header", "headerValue"] @TO@ MethodInvocation@@exchange.getIn().setHeader("header","headerValue") @AT@ 4489 @LENGTH@ 34
---------------------------------INS StringLiteral@@"header" @TO@ SimpleName@@MethodName:setHeader:["header", "headerValue"] @AT@ 4499 @LENGTH@ 8
---------------------------------INS StringLiteral@@"headerValue" @TO@ SimpleName@@MethodName:setHeader:["header", "headerValue"] @AT@ 4509 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertEquals("headerValue",exchange.getOut().getHeader("header")) @TO@ MethodDeclaration@@public, void, MethodName:testOnlyProperties,  @AT@ 4568 @LENGTH@ 67
------INS MethodInvocation@@assertEquals("headerValue",exchange.getOut().getHeader("header")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("headerValue",exchange.getOut().getHeader("header")) @AT@ 4568 @LENGTH@ 66
---------INS SimpleName@@MethodName:assertEquals:["headerValue", exchange.getOut().getHeader("header")] @TO@ MethodInvocation@@assertEquals("headerValue",exchange.getOut().getHeader("header")) @AT@ 4568 @LENGTH@ 66
------------INS StringLiteral@@"headerValue" @TO@ SimpleName@@MethodName:assertEquals:["headerValue", exchange.getOut().getHeader("header")] @AT@ 4581 @LENGTH@ 13
------------INS MethodInvocation@@exchange.getOut().getHeader("header") @TO@ SimpleName@@MethodName:assertEquals:["headerValue", exchange.getOut().getHeader("header")] @AT@ 4596 @LENGTH@ 37
---------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getHeader("header") @AT@ 4596 @LENGTH@ 17
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getHeader("header") @AT@ 4596 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getHeader:["header"] @TO@ MethodInvocation@@exchange.getOut().getHeader("header") @AT@ 4614 @LENGTH@ 19
------------------INS StringLiteral@@"header" @TO@ SimpleName@@MethodName:getHeader:["header"] @AT@ 4624 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals(3,exchange.getOut().getHeader("copy-counter")) @TO@ MethodDeclaration@@public, void, MethodName:testOnlyProperties,  @AT@ 4644 @LENGTH@ 61
------INS MethodInvocation@@assertEquals(3,exchange.getOut().getHeader("copy-counter")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(3,exchange.getOut().getHeader("copy-counter")) @AT@ 4644 @LENGTH@ 60
---------INS SimpleName@@MethodName:assertEquals:[3, exchange.getOut().getHeader("copy-counter")] @TO@ MethodInvocation@@assertEquals(3,exchange.getOut().getHeader("copy-counter")) @AT@ 4644 @LENGTH@ 60
------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:assertEquals:[3, exchange.getOut().getHeader("copy-counter")] @AT@ 4657 @LENGTH@ 1
------------INS MethodInvocation@@exchange.getOut().getHeader("copy-counter") @TO@ SimpleName@@MethodName:assertEquals:[3, exchange.getOut().getHeader("copy-counter")] @AT@ 4660 @LENGTH@ 43
---------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getHeader("copy-counter") @AT@ 4660 @LENGTH@ 17
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getHeader("copy-counter") @AT@ 4660 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getHeader:["copy-counter"] @TO@ MethodInvocation@@exchange.getOut().getHeader("copy-counter") @AT@ 4678 @LENGTH@ 25
------------------INS StringLiteral@@"copy-counter" @TO@ SimpleName@@MethodName:getHeader:["copy-counter"] @AT@ 4688 @LENGTH@ 14


UPD IfStatement@@if (StringUtils.isBlank(userDn)) {  log.warn("Property 'userDn' not set - " + "anonymous context will be used for read-write operations");} else if (StringUtils.isBlank(password)) {  log.warn("Property 'password' not set - " + "blank password will be used");} @TO@ if (StringUtils.isBlank(userDn)) {  log.info("Property 'userDn' not set - " + "anonymous context will be used for read-write operations");} else if (StringUtils.isBlank(password)) {  log.info("Property 'password' not set - " + "blank password will be used");} @AT@ 9974 @LENGTH@ 403
---UPD Block@@ThenBody:{  log.warn("Property 'userDn' not set - " + "anonymous context will be used for read-write operations");} @TO@ ThenBody:{  log.info("Property 'userDn' not set - " + "anonymous context will be used for read-write operations");} @AT@ 10007 @LENGTH@ 195
------UPD ExpressionStatement@@MethodInvocation:log.warn("Property 'userDn' not set - " + "anonymous context will be used for read-write operations") @TO@ MethodInvocation:log.info("Property 'userDn' not set - " + "anonymous context will be used for read-write operations") @AT@ 10026 @LENGTH@ 161
---------UPD MethodInvocation@@log.warn("Property 'userDn' not set - " + "anonymous context will be used for read-write operations") @TO@ log.info("Property 'userDn' not set - " + "anonymous context will be used for read-write operations") @AT@ 10026 @LENGTH@ 160
------------UPD SimpleName@@MethodName:warn:["Property 'userDn' not set - " + "anonymous context will be used for read-write operations"] @TO@ MethodName:info:["Property 'userDn' not set - " + "anonymous context will be used for read-write operations"] @AT@ 10056 @LENGTH@ 130
---UPD Block@@ElseBody:if (StringUtils.isBlank(password)) {  log.warn("Property 'password' not set - " + "blank password will be used");} @TO@ ElseBody:if (StringUtils.isBlank(password)) {  log.info("Property 'password' not set - " + "blank password will be used");} @AT@ 10208 @LENGTH@ 169
------UPD IfStatement@@if (StringUtils.isBlank(password)) {  log.warn("Property 'password' not set - " + "blank password will be used");} @TO@ if (StringUtils.isBlank(password)) {  log.info("Property 'password' not set - " + "blank password will be used");} @AT@ 10208 @LENGTH@ 169
---------UPD Block@@ThenBody:{  log.warn("Property 'password' not set - " + "blank password will be used");} @TO@ ThenBody:{  log.info("Property 'password' not set - " + "blank password will be used");} @AT@ 10243 @LENGTH@ 134
------------UPD ExpressionStatement@@MethodInvocation:log.warn("Property 'password' not set - " + "blank password will be used") @TO@ MethodInvocation:log.info("Property 'password' not set - " + "blank password will be used") @AT@ 10262 @LENGTH@ 100
---------------UPD MethodInvocation@@log.warn("Property 'password' not set - " + "blank password will be used") @TO@ log.info("Property 'password' not set - " + "blank password will be used") @AT@ 10262 @LENGTH@ 99
------------------UPD SimpleName@@MethodName:warn:["Property 'password' not set - " + "blank password will be used"] @TO@ MethodName:info:["Property 'password' not set - " + "blank password will be used"] @AT@ 10266 @LENGTH@ 95


UPD VariableDeclarationStatement@@Message previousOut=previousExchange.getOut(); @TO@ Message previousOut=previousExchange.getOut(false); @AT@ 7409 @LENGTH@ 48
---UPD VariableDeclarationFragment@@previousOut=previousExchange.getOut() @TO@ previousOut=previousExchange.getOut(false) @AT@ 7417 @LENGTH@ 39
------UPD MethodInvocation@@previousExchange.getOut() @TO@ previousExchange.getOut(false) @AT@ 7431 @LENGTH@ 25
---------UPD SimpleName@@MethodName:getOut:[] @TO@ MethodName:getOut:[false] @AT@ 7448 @LENGTH@ 8
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getOut:[] @AT@ 7471 @LENGTH@ 5


UPD MethodDeclaration@@protected, Endpoint<BeanExchange>, MethodName:createEndpoint, String uri, String remaining, Map parameters, Exception,  @TO@ protected, Endpoint<Exchange>, MethodName:createEndpoint, String uri, String remaining, Map parameters, Exception,  @AT@ 1885 @LENGTH@ 277
---UPD ParameterizedType@@Endpoint<BeanExchange> @TO@ Endpoint<Exchange> @AT@ 1895 @LENGTH@ 22
------UPD SimpleType@@BeanExchange @TO@ Exchange @AT@ 1904 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:log.info("Creating a spring injector!") @TO@ MethodDeclaration@@protected, Injector, MethodName:createInjector,  @AT@ 5153 @LENGTH@ 40
---INS MethodInvocation@@log.info("Creating a spring injector!") @TO@ ExpressionStatement@@MethodInvocation:log.info("Creating a spring injector!") @AT@ 5153 @LENGTH@ 39
------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.info("Creating a spring injector!") @AT@ 5153 @LENGTH@ 3
------INS SimpleName@@MethodName:info:["Creating a spring injector!"] @TO@ MethodInvocation@@log.info("Creating a spring injector!") @AT@ 5157 @LENGTH@ 35
---------INS StringLiteral@@"Creating a spring injector!" @TO@ SimpleName@@MethodName:info:["Creating a spring injector!"] @AT@ 5162 @LENGTH@ 29


UPD SuperConstructorInvocation@@super("org.apache.camel.dataformat.converter.XmlBeansDataType");
 @TO@ super("org.apache.camel.converter.xmlbeans.XmlBeansDataFormat");
 @AT@ 1414 @LENGTH@ 64
---UPD StringLiteral@@"org.apache.camel.dataformat.converter.XmlBeansDataType" @TO@ "org.apache.camel.converter.xmlbeans.XmlBeansDataFormat" @AT@ 1420 @LENGTH@ 56


UPD TypeDeclaration@@[private]FooCompositeKeyMapper, [RowMapper] @TO@ [private, static]FooCompositeKeyMapper, [RowMapper] @AT@ 2760 @LENGTH@ 262
---INS Modifier@@static @TO@ TypeDeclaration@@[private]FooCompositeKeyMapper, [RowMapper] @AT@ 2694 @LENGTH@ 6


UPD Block@@ThenBody:{  ClientFactoryBean cfBean=new ClientFactoryBean();  cfBean.setAddress(getEndpoint().getEndpointUri());  cfBean.setBus(endpoint.getBus());  cfBean.setServiceClass(Class.forName(endpoint.getProperty(CxfConstants.SEI)));  client=cfBean.create();} @TO@ ThenBody:{  ClientFactoryBean cfBean=new ClientFactoryBean();  cfBean.setAddress(getEndpoint().getEndpointUri());  cfBean.setBus(endpoint.getBus());  String className=endpoint.getProperty(CxfConstants.SEI);  Class type=ObjectHelper.loadClass(className);  cfBean.setServiceClass(type);  client=cfBean.create();} @AT@ 2420 @LENGTH@ 313
---UPD ExpressionStatement@@MethodInvocation:cfBean.setServiceClass(Class.forName(endpoint.getProperty(CxfConstants.SEI))) @TO@ MethodInvocation:cfBean.setServiceClass(type) @AT@ 2607 @LENGTH@ 78
------UPD MethodInvocation@@cfBean.setServiceClass(Class.forName(endpoint.getProperty(CxfConstants.SEI))) @TO@ cfBean.setServiceClass(type) @AT@ 2607 @LENGTH@ 77
---------UPD SimpleName@@MethodName:setServiceClass:[Class.forName(endpoint.getProperty(CxfConstants.SEI))] @TO@ MethodName:setServiceClass:[type] @AT@ 2614 @LENGTH@ 70
------------DEL MethodInvocation@@Class.forName(endpoint.getProperty(CxfConstants.SEI)) @AT@ 2630 @LENGTH@ 53
---------------DEL SimpleName@@Name:Class @AT@ 2630 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:forName:[endpoint.getProperty(CxfConstants.SEI)] @AT@ 2636 @LENGTH@ 47
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:setServiceClass:[Class.forName(endpoint.getProperty(CxfConstants.SEI))] @AT@ 2804 @LENGTH@ 4
---INS VariableDeclarationStatement@@String className=endpoint.getProperty(CxfConstants.SEI); @TO@ Block@@ThenBody:{  ClientFactoryBean cfBean=new ClientFactoryBean();  cfBean.setAddress(getEndpoint().getEndpointUri());  cfBean.setBus(endpoint.getBus());  cfBean.setServiceClass(Class.forName(endpoint.getProperty(CxfConstants.SEI)));  client=cfBean.create();} @AT@ 2650 @LENGTH@ 58
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String className=endpoint.getProperty(CxfConstants.SEI); @AT@ 2650 @LENGTH@ 6
------INS VariableDeclarationFragment@@className=endpoint.getProperty(CxfConstants.SEI) @TO@ VariableDeclarationStatement@@String className=endpoint.getProperty(CxfConstants.SEI); @AT@ 2657 @LENGTH@ 50
---------MOV MethodInvocation@@endpoint.getProperty(CxfConstants.SEI) @TO@ VariableDeclarationFragment@@className=endpoint.getProperty(CxfConstants.SEI) @AT@ 2644 @LENGTH@ 38
---------INS SimpleName@@className @TO@ VariableDeclarationFragment@@className=endpoint.getProperty(CxfConstants.SEI) @AT@ 2657 @LENGTH@ 9
---INS VariableDeclarationStatement@@Class type=ObjectHelper.loadClass(className); @TO@ Block@@ThenBody:{  ClientFactoryBean cfBean=new ClientFactoryBean();  cfBean.setAddress(getEndpoint().getEndpointUri());  cfBean.setBus(endpoint.getBus());  cfBean.setServiceClass(Class.forName(endpoint.getProperty(CxfConstants.SEI)));  client=cfBean.create();} @AT@ 2721 @LENGTH@ 47
------INS SimpleType@@Class @TO@ VariableDeclarationStatement@@Class type=ObjectHelper.loadClass(className); @AT@ 2721 @LENGTH@ 5
------INS VariableDeclarationFragment@@type=ObjectHelper.loadClass(className) @TO@ VariableDeclarationStatement@@Class type=ObjectHelper.loadClass(className); @AT@ 2727 @LENGTH@ 40
---------INS SimpleName@@type @TO@ VariableDeclarationFragment@@type=ObjectHelper.loadClass(className) @AT@ 2727 @LENGTH@ 4
---------INS MethodInvocation@@ObjectHelper.loadClass(className) @TO@ VariableDeclarationFragment@@type=ObjectHelper.loadClass(className) @AT@ 2734 @LENGTH@ 33
------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.loadClass(className) @AT@ 2734 @LENGTH@ 12
------------INS SimpleName@@MethodName:loadClass:[className] @TO@ MethodInvocation@@ObjectHelper.loadClass(className) @AT@ 2747 @LENGTH@ 20
---------------INS SimpleName@@className @TO@ SimpleName@@MethodName:loadClass:[className] @AT@ 2757 @LENGTH@ 9


UPD TypeDeclaration@@[@XmlType(name="interceptorType"), public, abstract]InterceptorType,  @TO@ [@XmlType(name="interceptorType"), public, abstract]InterceptorType, OutputType[Block] @AT@ 1012 @LENGTH@ 177
---INS SimpleType@@OutputType @TO@ TypeDeclaration@@[@XmlType(name="interceptorType"), public, abstract]InterceptorType,  @AT@ 1093 @LENGTH@ 10
---INS SimpleType@@Block @TO@ TypeDeclaration@@[@XmlType(name="interceptorType"), public, abstract]InterceptorType,  @AT@ 1115 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:element.setAttribute("imageLocation","..\\images\\") @TO@ MethodInvocation:element.setAttribute("imageLocation","../images/") @AT@ 4860 @LENGTH@ 54
---UPD MethodInvocation@@element.setAttribute("imageLocation","..\\images\\") @TO@ element.setAttribute("imageLocation","../images/") @AT@ 4860 @LENGTH@ 53
------UPD SimpleName@@MethodName:setAttribute:["imageLocation", "..\\images\\"] @TO@ MethodName:setAttribute:["imageLocation", "../images/"] @AT@ 4868 @LENGTH@ 45
---------UPD StringLiteral@@"..\\images\\" @TO@ "../images/" @AT@ 4898 @LENGTH@ 14


MOV ExpressionStatement@@MethodInvocation:transformer.transform(source,result) @TO@ MethodDeclaration@@public, synchronized, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2859 @LENGTH@ 38


UPD MethodDeclaration@@public, voidMethodName:SedaEndpoint, String uri, SedaComponent component,  @TO@ public, voidMethodName:SedaEndpoint, String uri, SedaComponent component, Map parameters,  @AT@ 2348 @LENGTH@ 119
---INS SingleVariableDeclaration@@Map parameters @TO@ MethodDeclaration@@public, voidMethodName:SedaEndpoint, String uri, SedaComponent component,  @AT@ 2340 @LENGTH@ 14
------INS SimpleType@@Map @TO@ SingleVariableDeclaration@@Map parameters @AT@ 2340 @LENGTH@ 3
------INS SimpleName@@parameters @TO@ SingleVariableDeclaration@@Map parameters @AT@ 2344 @LENGTH@ 10
---UPD ConstructorInvocation@@this(uri,component,component.createQueue()); @TO@ this(uri,component,component.createQueue(uri,parameters)); @AT@ 2415 @LENGTH@ 46
------UPD MethodInvocation@@component.createQueue() @TO@ component.createQueue(uri,parameters) @AT@ 2436 @LENGTH@ 23
---------UPD SimpleName@@MethodName:createQueue:[] @TO@ MethodName:createQueue:[uri, parameters] @AT@ 2446 @LENGTH@ 13
------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:createQueue:[] @AT@ 2409 @LENGTH@ 3
------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:createQueue:[] @AT@ 2414 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertEquals(0,list.size()) @TO@ MethodInvocation:assertEquals(1,list.size()) @AT@ 2789 @LENGTH@ 29
---UPD MethodInvocation@@assertEquals(0,list.size()) @TO@ assertEquals(1,list.size()) @AT@ 2789 @LENGTH@ 28
------UPD SimpleName@@MethodName:assertEquals:[0, list.size()] @TO@ MethodName:assertEquals:[1, list.size()] @AT@ 2789 @LENGTH@ 28
---------UPD NumberLiteral@@0 @TO@ 1 @AT@ 2802 @LENGTH@ 1


UPD ForStatement@@for (Iterator iter=copy.iterator(); iter.hasNext(); ) {  Map.Entry entry=(Map.Entry)iter.next();  String name=(String)entry.getKey();  Set set=(Set)entry.getValue();  for (Iterator iterator=set.iterator(); iterator.hasNext(); ) {    Runnable callback=(Runnable)iterator.next();    if (hasAttribute(name) && callback != null) {      try {        callback.run();      } catch (      RuntimeException t) {        errors.add(t);      }    }  }} @TO@ for (Iterator iter=copy.iterator(); iter.hasNext(); ) {  Map.Entry entry=(Map.Entry)iter.next();  Set set=(Set)entry.getValue();  for (Iterator iterator=set.iterator(); iterator.hasNext(); ) {    Runnable callback=(Runnable)iterator.next();    if (callback != null) {      try {        callback.run();      } catch (      RuntimeException t) {        errors.add(t);      }    }  }} @AT@ 2489 @LENGTH@ 655
---DEL VariableDeclarationStatement@@String name=(String)entry.getKey(); @AT@ 2597 @LENGTH@ 38
------DEL SimpleType@@String @AT@ 2597 @LENGTH@ 6
------DEL VariableDeclarationFragment@@name=(String)entry.getKey() @AT@ 2604 @LENGTH@ 30
---------DEL SimpleName@@name @AT@ 2604 @LENGTH@ 4
---------DEL CastExpression@@(String)entry.getKey() @AT@ 2611 @LENGTH@ 23
------------DEL SimpleType@@String @AT@ 2612 @LENGTH@ 6
------------DEL MethodInvocation@@entry.getKey() @AT@ 2620 @LENGTH@ 14
---------------DEL SimpleName@@Name:entry @AT@ 2620 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getKey:[] @AT@ 2626 @LENGTH@ 8
---UPD ForStatement@@for (Iterator iterator=set.iterator(); iterator.hasNext(); ) {  Runnable callback=(Runnable)iterator.next();  if (hasAttribute(name) && callback != null) {    try {      callback.run();    } catch (    RuntimeException t) {      errors.add(t);    }  }} @TO@ for (Iterator iterator=set.iterator(); iterator.hasNext(); ) {  Runnable callback=(Runnable)iterator.next();  if (callback != null) {    try {      callback.run();    } catch (    RuntimeException t) {      errors.add(t);    }  }} @AT@ 2678 @LENGTH@ 461
------UPD IfStatement@@if (hasAttribute(name) && callback != null) {  try {    callback.run();  } catch (  RuntimeException t) {    errors.add(t);  }} @TO@ if (callback != null) {  try {    callback.run();  } catch (  RuntimeException t) {    errors.add(t);  }} @AT@ 2800 @LENGTH@ 333
---------DEL InfixExpression@@hasAttribute(name) && callback != null @AT@ 2804 @LENGTH@ 38
------------DEL MethodInvocation@@hasAttribute(name) @AT@ 2804 @LENGTH@ 18
---------------DEL SimpleName@@MethodName:hasAttribute:[name] @AT@ 2804 @LENGTH@ 18
------------------DEL SimpleName@@name @AT@ 2817 @LENGTH@ 4
------------DEL Operator@@&& @AT@ 2822 @LENGTH@ 2
------------DEL InfixExpression@@callback != null @AT@ 2826 @LENGTH@ 16
---------INS InfixExpression@@callback != null @TO@ IfStatement@@if (hasAttribute(name) && callback != null) {  try {    callback.run();  } catch (  RuntimeException t) {    errors.add(t);  }} @AT@ 3101 @LENGTH@ 16
------------MOV SimpleName@@callback @TO@ InfixExpression@@callback != null @AT@ 2826 @LENGTH@ 8
------------MOV Operator@@!= @TO@ InfixExpression@@callback != null @AT@ 2834 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@callback != null @AT@ 2838 @LENGTH@ 4


DEL MethodDeclaration@@public, List<InterceptorType>, MethodName:getInterceptors,  @AT@ 1388 @LENGTH@ 93
---DEL Modifier@@public @AT@ 1388 @LENGTH@ 6
---DEL ParameterizedType@@List<InterceptorType> @AT@ 1395 @LENGTH@ 21
------DEL SimpleType@@List @AT@ 1395 @LENGTH@ 4
------DEL SimpleType@@InterceptorType @AT@ 1400 @LENGTH@ 15
---DEL SimpleName@@MethodName:getInterceptors @AT@ 1417 @LENGTH@ 15
---DEL ReturnStatement@@QualifiedName:Collections.EMPTY_LIST @AT@ 1445 @LENGTH@ 30
------DEL QualifiedName@@Collections.EMPTY_LIST @AT@ 1452 @LENGTH@ 22
---------DEL SimpleName@@Collections @AT@ 1452 @LENGTH@ 11
---------DEL SimpleName@@EMPTY_LIST @AT@ 1464 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:consumer.getBinding().writeResponse(exchange) @TO@ MethodInvocation:consumer.getBinding().writeResponse(exchange,response) @AT@ 2286 @LENGTH@ 46
---UPD MethodInvocation@@consumer.getBinding().writeResponse(exchange) @TO@ consumer.getBinding().writeResponse(exchange,response) @AT@ 2286 @LENGTH@ 45
------UPD SimpleName@@MethodName:writeResponse:[exchange] @TO@ MethodName:writeResponse:[exchange, response] @AT@ 2308 @LENGTH@ 23
---------INS SimpleName@@response @TO@ SimpleName@@MethodName:writeResponse:[exchange] @AT@ 2332 @LENGTH@ 8


DEL MethodDeclaration@@protected, ComponentResolver, MethodName:createComponentResolver,  @AT@ 6561 @LENGTH@ 224
---DEL Modifier@@protected @AT@ 6561 @LENGTH@ 9
---DEL SimpleType@@ComponentResolver @AT@ 6571 @LENGTH@ 17
---DEL SimpleName@@MethodName:createComponentResolver @AT@ 6589 @LENGTH@ 23
---DEL VariableDeclarationStatement@@ComponentResolver defaultResolver=super.createComponentResolver(); @AT@ 6625 @LENGTH@ 68
------DEL SimpleType@@ComponentResolver @AT@ 6625 @LENGTH@ 17
------DEL VariableDeclarationFragment@@defaultResolver=super.createComponentResolver() @AT@ 6643 @LENGTH@ 49
---------DEL SimpleName@@defaultResolver @AT@ 6643 @LENGTH@ 15
---------DEL SuperMethodInvocation@@super.createComponentResolver() @AT@ 6661 @LENGTH@ 31
------------DEL SimpleName@@MethodName:createComponentResolver:[] @AT@ 6667 @LENGTH@ 23
---DEL ReturnStatement@@ClassInstanceCreation:new SpringComponentResolver(getApplicationContext(),defaultResolver) @AT@ 6702 @LENGTH@ 77
------DEL ClassInstanceCreation@@SpringComponentResolver[getApplicationContext(), defaultResolver] @AT@ 6709 @LENGTH@ 69
---------DEL New@@new @AT@ 6709 @LENGTH@ 3
---------DEL SimpleType@@SpringComponentResolver @AT@ 6713 @LENGTH@ 23
---------DEL MethodInvocation@@MethodName:getApplicationContext:[] @AT@ 6737 @LENGTH@ 23
---------DEL SimpleName@@defaultResolver @AT@ 6762 @LENGTH@ 15


INS IfStatement@@if (boolean.class.isAssignableFrom(toType)) {  return (T)Boolean.FALSE;} @TO@ MethodDeclaration@@public, T, T, MethodName:convertTo, Class<T> toType, Object value,  @AT@ 2865 @LENGTH@ 93
---INS MethodInvocation@@boolean.class.isAssignableFrom(toType) @TO@ IfStatement@@if (boolean.class.isAssignableFrom(toType)) {  return (T)Boolean.FALSE;} @AT@ 2869 @LENGTH@ 38
------INS TypeLiteral@@boolean.class @TO@ MethodInvocation@@boolean.class.isAssignableFrom(toType) @AT@ 2869 @LENGTH@ 13
------INS SimpleName@@MethodName:isAssignableFrom:[toType] @TO@ MethodInvocation@@boolean.class.isAssignableFrom(toType) @AT@ 2883 @LENGTH@ 24
---------INS SimpleName@@toType @TO@ SimpleName@@MethodName:isAssignableFrom:[toType] @AT@ 2900 @LENGTH@ 6
---INS Block@@ThenBody:{  return (T)Boolean.FALSE;} @TO@ IfStatement@@if (boolean.class.isAssignableFrom(toType)) {  return (T)Boolean.FALSE;} @AT@ 2909 @LENGTH@ 49
------INS ReturnStatement@@CastExpression:(T)Boolean.FALSE @TO@ Block@@ThenBody:{  return (T)Boolean.FALSE;} @AT@ 2923 @LENGTH@ 25
---------INS CastExpression@@(T)Boolean.FALSE @TO@ ReturnStatement@@CastExpression:(T)Boolean.FALSE @AT@ 2930 @LENGTH@ 17
------------INS SimpleType@@T @TO@ CastExpression@@(T)Boolean.FALSE @AT@ 2931 @LENGTH@ 1
------------INS QualifiedName@@Boolean.FALSE @TO@ CastExpression@@(T)Boolean.FALSE @AT@ 2934 @LENGTH@ 13
---------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.FALSE @AT@ 2934 @LENGTH@ 7
---------------INS SimpleName@@FALSE @TO@ QualifiedName@@Boolean.FALSE @AT@ 2942 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:setVariable(context,"out",exchange.getOut(),Message.class) @TO@ MethodInvocation:setVariable(context,"out",out,Message.class) @AT@ 2759 @LENGTH@ 62
---UPD MethodInvocation@@setVariable(context,"out",exchange.getOut(),Message.class) @TO@ setVariable(context,"out",out,Message.class) @AT@ 2759 @LENGTH@ 61
------UPD SimpleName@@MethodName:setVariable:[context, "out", exchange.getOut(), Message.class] @TO@ MethodName:setVariable:[context, "out", out, Message.class] @AT@ 2759 @LENGTH@ 61
---------DEL MethodInvocation@@exchange.getOut() @AT@ 2787 @LENGTH@ 17
------------DEL SimpleName@@Name:exchange @AT@ 2787 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getOut:[] @AT@ 2796 @LENGTH@ 8
---------INS SimpleName@@out @TO@ SimpleName@@MethodName:setVariable:[context, "out", exchange.getOut(), Message.class] @AT@ 2833 @LENGTH@ 3


UPD ReturnStatement@@ClassInstanceCreation:new HttpEndpoint(uri,this,httpURL){
  @Override public JettyHttpProducer createProducer() throws Exception {
    return new JettyHttpProducer(this);
  }
}
 @TO@ ClassInstanceCreation:new JettyHttpEndpoint(this,uri,httpURL) @AT@ 2554 @LENGTH@ 217
---UPD ClassInstanceCreation@@HttpEndpoint[uri, this, httpURL] @TO@ JettyHttpEndpoint[this, uri, httpURL] @AT@ 2561 @LENGTH@ 209
------INS ThisExpression@@this @TO@ ClassInstanceCreation@@HttpEndpoint[uri, this, httpURL] @AT@ 2536 @LENGTH@ 4
------UPD SimpleType@@HttpEndpoint @TO@ JettyHttpEndpoint @AT@ 2565 @LENGTH@ 12
------DEL ThisExpression@@this @AT@ 2583 @LENGTH@ 4
------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 2598 @LENGTH@ 172
---------DEL MethodDeclaration@@public, JettyHttpProducer, MethodName:createProducer, Exception,  @AT@ 2634 @LENGTH@ 126
------------DEL Modifier@@public @AT@ 2634 @LENGTH@ 6
------------DEL SimpleType@@JettyHttpProducer @AT@ 2641 @LENGTH@ 17
------------DEL SimpleName@@MethodName:createProducer @AT@ 2659 @LENGTH@ 14
------------DEL SimpleType@@Exception @AT@ 2683 @LENGTH@ 9
------------DEL ReturnStatement@@ClassInstanceCreation:new JettyHttpProducer(this) @AT@ 2711 @LENGTH@ 35
---------------DEL ClassInstanceCreation@@JettyHttpProducer[this] @AT@ 2718 @LENGTH@ 27
------------------DEL New@@new @AT@ 2718 @LENGTH@ 3
------------------DEL SimpleType@@JettyHttpProducer @AT@ 2722 @LENGTH@ 17
------------------DEL ThisExpression@@this @AT@ 2740 @LENGTH@ 4


UPD VariableDeclarationStatement@@DirContextOperations ctx=ldapTemplate.lookup("cn=Some Person,ou=company1,c=Sweden"); @TO@ DirContextOperations ctx=ldapTemplate.lookupContext("cn=Some Person,ou=company1,c=Sweden"); @AT@ 1651 @LENGTH@ 86
---UPD VariableDeclarationFragment@@ctx=ldapTemplate.lookup("cn=Some Person,ou=company1,c=Sweden") @TO@ ctx=ldapTemplate.lookupContext("cn=Some Person,ou=company1,c=Sweden") @AT@ 1672 @LENGTH@ 64
------UPD MethodInvocation@@ldapTemplate.lookup("cn=Some Person,ou=company1,c=Sweden") @TO@ ldapTemplate.lookupContext("cn=Some Person,ou=company1,c=Sweden") @AT@ 1678 @LENGTH@ 58
---------UPD SimpleName@@MethodName:lookup:["cn=Some Person,ou=company1,c=Sweden"] @TO@ MethodName:lookupContext:["cn=Some Person,ou=company1,c=Sweden"] @AT@ 1691 @LENGTH@ 45


INS MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @TO@ TypeDeclaration@@[@XmlRootElement(name="interceptor"), @XmlAccessorType(XmlAccessType.FIELD), public]InterceptorRef, InterceptorType @AT@ 1830 @LENGTH@ 284
---INS Modifier@@public @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 1830 @LENGTH@ 6
---INS SimpleType@@Processor @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 1837 @LENGTH@ 9
---INS SimpleName@@MethodName:createProcessor @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 1847 @LENGTH@ 15
---INS SingleVariableDeclaration@@RouteContext routeContext @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 1863 @LENGTH@ 25
------INS SimpleType@@RouteContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 1863 @LENGTH@ 12
------INS SimpleName@@routeContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 1876 @LENGTH@ 12
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 1897 @LENGTH@ 9
---INS VariableDeclarationStatement@@DelegateProcessor processor=createInterceptor(routeContext); @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 1917 @LENGTH@ 62
------INS SimpleType@@DelegateProcessor @TO@ VariableDeclarationStatement@@DelegateProcessor processor=createInterceptor(routeContext); @AT@ 1917 @LENGTH@ 17
------INS VariableDeclarationFragment@@processor=createInterceptor(routeContext) @TO@ VariableDeclarationStatement@@DelegateProcessor processor=createInterceptor(routeContext); @AT@ 1935 @LENGTH@ 43
---------INS SimpleName@@processor @TO@ VariableDeclarationFragment@@processor=createInterceptor(routeContext) @AT@ 1935 @LENGTH@ 9
---------INS MethodInvocation@@createInterceptor(routeContext) @TO@ VariableDeclarationFragment@@processor=createInterceptor(routeContext) @AT@ 1947 @LENGTH@ 31
------------INS SimpleName@@MethodName:createInterceptor:[routeContext] @TO@ MethodInvocation@@createInterceptor(routeContext) @AT@ 1947 @LENGTH@ 31
---------------INS SimpleName@@routeContext @TO@ SimpleName@@MethodName:createInterceptor:[routeContext] @AT@ 1965 @LENGTH@ 12
---INS VariableDeclarationStatement@@Processor child=createOutputsProcessor(routeContext); @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 1988 @LENGTH@ 55
------INS SimpleType@@Processor @TO@ VariableDeclarationStatement@@Processor child=createOutputsProcessor(routeContext); @AT@ 1988 @LENGTH@ 9
------INS VariableDeclarationFragment@@child=createOutputsProcessor(routeContext) @TO@ VariableDeclarationStatement@@Processor child=createOutputsProcessor(routeContext); @AT@ 1998 @LENGTH@ 44
---------INS SimpleName@@child @TO@ VariableDeclarationFragment@@child=createOutputsProcessor(routeContext) @AT@ 1998 @LENGTH@ 5
---------INS MethodInvocation@@createOutputsProcessor(routeContext) @TO@ VariableDeclarationFragment@@child=createOutputsProcessor(routeContext) @AT@ 2006 @LENGTH@ 36
------------INS SimpleName@@MethodName:createOutputsProcessor:[routeContext] @TO@ MethodInvocation@@createOutputsProcessor(routeContext) @AT@ 2006 @LENGTH@ 36
---------------INS SimpleName@@routeContext @TO@ SimpleName@@MethodName:createOutputsProcessor:[routeContext] @AT@ 2029 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:processor.setProcessor(child) @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 2052 @LENGTH@ 30
------INS MethodInvocation@@processor.setProcessor(child) @TO@ ExpressionStatement@@MethodInvocation:processor.setProcessor(child) @AT@ 2052 @LENGTH@ 29
---------INS SimpleName@@Name:processor @TO@ MethodInvocation@@processor.setProcessor(child) @AT@ 2052 @LENGTH@ 9
---------INS SimpleName@@MethodName:setProcessor:[child] @TO@ MethodInvocation@@processor.setProcessor(child) @AT@ 2062 @LENGTH@ 19
------------INS SimpleName@@child @TO@ SimpleName@@MethodName:setProcessor:[child] @AT@ 2075 @LENGTH@ 5
---INS ReturnStatement@@SimpleName:processor @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 2091 @LENGTH@ 17
------INS SimpleName@@processor @TO@ ReturnStatement@@SimpleName:processor @AT@ 2098 @LENGTH@ 9


UPD MethodDeclaration@@T, MethodName:newInstance, Class<T> type,  @TO@ T, T, MethodName:newInstance, Class<T> type,  @AT@ 1326 @LENGTH@ 27


UPD FieldDeclaration@@private, HashMap, [labelMap=null] @TO@ private, Map, [labelMap=null] @AT@ 2569 @LENGTH@ 32
---UPD SimpleType@@HashMap @TO@ Map @AT@ 2577 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:Assert.state(source != null,"Source must not be null.") @TO@ MethodDeclaration@@public, RestartData, MethodName:getRestartData,  @AT@ 1291 @LENGTH@ 57
---INS MethodInvocation@@Assert.state(source != null,"Source must not be null.") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(source != null,"Source must not be null.") @AT@ 1291 @LENGTH@ 56
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(source != null,"Source must not be null.") @AT@ 1291 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[source != null, "Source must not be null."] @TO@ MethodInvocation@@Assert.state(source != null,"Source must not be null.") @AT@ 1298 @LENGTH@ 49
---------INS InfixExpression@@source != null @TO@ SimpleName@@MethodName:state:[source != null, "Source must not be null."] @AT@ 1304 @LENGTH@ 14
------------INS SimpleName@@source @TO@ InfixExpression@@source != null @AT@ 1304 @LENGTH@ 6
------------INS Operator@@!= @TO@ InfixExpression@@source != null @AT@ 1310 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@source != null @AT@ 1314 @LENGTH@ 4
---------INS StringLiteral@@"Source must not be null." @TO@ SimpleName@@MethodName:state:[source != null, "Source must not be null."] @AT@ 1320 @LENGTH@ 26


INS MethodDeclaration@@public, void, MethodName:testGetType,  @TO@ TypeDeclaration@@[public, abstract]AbstractSoap12BodyTestCase, AbstractSoapBodyTestCase @AT@ 1215 @LENGTH@ 110
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetType,  @AT@ 1215 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetType,  @AT@ 1222 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetType @TO@ MethodDeclaration@@public, void, MethodName:testGetType,  @AT@ 1227 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertTrue("Invalid type returned",soapBody instanceof Soap12Body) @TO@ MethodDeclaration@@public, void, MethodName:testGetType,  @AT@ 1251 @LENGTH@ 68
------INS MethodInvocation@@assertTrue("Invalid type returned",soapBody instanceof Soap12Body) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Invalid type returned",soapBody instanceof Soap12Body) @AT@ 1251 @LENGTH@ 67
---------INS SimpleName@@MethodName:assertTrue:["Invalid type returned", soapBody instanceof Soap12Body] @TO@ MethodInvocation@@assertTrue("Invalid type returned",soapBody instanceof Soap12Body) @AT@ 1251 @LENGTH@ 67
------------INS StringLiteral@@"Invalid type returned" @TO@ SimpleName@@MethodName:assertTrue:["Invalid type returned", soapBody instanceof Soap12Body] @AT@ 1262 @LENGTH@ 23
------------INS InstanceofExpression@@soapBody instanceof Soap12Body @TO@ SimpleName@@MethodName:assertTrue:["Invalid type returned", soapBody instanceof Soap12Body] @AT@ 1287 @LENGTH@ 30
---------------INS SimpleName@@soapBody @TO@ InstanceofExpression@@soapBody instanceof Soap12Body @AT@ 1287 @LENGTH@ 8
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@soapBody instanceof Soap12Body @AT@ 1296 @LENGTH@ 10
---------------INS SimpleType@@Soap12Body @TO@ InstanceofExpression@@soapBody instanceof Soap12Body @AT@ 1307 @LENGTH@ 10


UPD SwitchStatement@@switch (this) {case OutOnly:case RobustOutOnly:  return true;default :return false;} @TO@ switch (this) {case OutOnly:case RobustOutOnly:  return false;default :return true;} @AT@ 2412 @LENGTH@ 163
---UPD ReturnStatement@@BooleanLiteral:true @TO@ BooleanLiteral:false @AT@ 2502 @LENGTH@ 12
------UPD BooleanLiteral@@true @TO@ false @AT@ 2509 @LENGTH@ 4
---UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 2552 @LENGTH@ 13
------UPD BooleanLiteral@@false @TO@ true @AT@ 2559 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:FactoryFinder.setFactory(FactoryFinder.FACES_CONTEXT_FACTORY,"org.apache.shale.test.mock.MockFacesContextFactory") @AT@ 3313 @LENGTH@ 122
---DEL MethodInvocation@@FactoryFinder.setFactory(FactoryFinder.FACES_CONTEXT_FACTORY,"org.apache.shale.test.mock.MockFacesContextFactory") @AT@ 3313 @LENGTH@ 121
------DEL SimpleName@@Name:FactoryFinder @AT@ 3313 @LENGTH@ 13
------DEL SimpleName@@MethodName:setFactory:[FactoryFinder.FACES_CONTEXT_FACTORY, "org.apache.shale.test.mock.MockFacesContextFactory"] @AT@ 3327 @LENGTH@ 107
---------DEL QualifiedName@@FactoryFinder.FACES_CONTEXT_FACTORY @AT@ 3338 @LENGTH@ 35
------------DEL SimpleName@@FactoryFinder @AT@ 3338 @LENGTH@ 13
------------DEL SimpleName@@FACES_CONTEXT_FACTORY @AT@ 3352 @LENGTH@ 21
---------DEL StringLiteral@@"org.apache.shale.test.mock.MockFacesContextFactory" @AT@ 3381 @LENGTH@ 52


UPD IfStatement@@if (source.getActionExpression() != null) {  if (logger.isDebugEnabled()) {    logger.debug("Invoking action expression " + source.getActionExpression());  }  result=(String)source.getActionExpression().invoke(context.getELContext(),null);} @TO@ if (source.getAction() != null) {  if (logger.isDebugEnabled()) {    logger.debug("Invoking action " + source.getAction());  }  result=(String)source.getAction().invoke(context,null);} @AT@ 1760 @LENGTH@ 254
---UPD InfixExpression@@source.getActionExpression() != null @TO@ source.getAction() != null @AT@ 1764 @LENGTH@ 36
------UPD MethodInvocation@@source.getActionExpression() @TO@ source.getAction() @AT@ 1764 @LENGTH@ 28
---------UPD SimpleName@@MethodName:getActionExpression:[] @TO@ MethodName:getAction:[] @AT@ 1771 @LENGTH@ 21
---UPD Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Invoking action expression " + source.getActionExpression());  }  result=(String)source.getActionExpression().invoke(context.getELContext(),null);} @TO@ ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Invoking action " + source.getAction());  }  result=(String)source.getAction().invoke(context,null);} @AT@ 1802 @LENGTH@ 212
------UPD IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Invoking action expression " + source.getActionExpression());} @TO@ if (logger.isDebugEnabled()) {  logger.debug("Invoking action " + source.getAction());} @AT@ 1807 @LENGTH@ 115
---------UPD Block@@ThenBody:{  logger.debug("Invoking action expression " + source.getActionExpression());} @TO@ ThenBody:{  logger.debug("Invoking action " + source.getAction());} @AT@ 1836 @LENGTH@ 86
------------UPD ExpressionStatement@@MethodInvocation:logger.debug("Invoking action expression " + source.getActionExpression()) @TO@ MethodInvocation:logger.debug("Invoking action " + source.getAction()) @AT@ 1842 @LENGTH@ 75
---------------UPD MethodInvocation@@logger.debug("Invoking action expression " + source.getActionExpression()) @TO@ logger.debug("Invoking action " + source.getAction()) @AT@ 1842 @LENGTH@ 74
------------------UPD SimpleName@@MethodName:debug:["Invoking action expression " + source.getActionExpression()] @TO@ MethodName:debug:["Invoking action " + source.getAction()] @AT@ 1849 @LENGTH@ 67
---------------------UPD InfixExpression@@"Invoking action expression " + source.getActionExpression() @TO@ "Invoking action " + source.getAction() @AT@ 1855 @LENGTH@ 60
------------------------UPD StringLiteral@@"Invoking action expression " @TO@ "Invoking action " @AT@ 1855 @LENGTH@ 29
------------------------UPD MethodInvocation@@source.getActionExpression() @TO@ source.getAction() @AT@ 1887 @LENGTH@ 28
---------------------------UPD SimpleName@@MethodName:getActionExpression:[] @TO@ MethodName:getAction:[] @AT@ 1894 @LENGTH@ 21
------UPD ExpressionStatement@@Assignment:result=(String)source.getActionExpression().invoke(context.getELContext(),null) @TO@ Assignment:result=(String)source.getAction().invoke(context,null) @AT@ 1926 @LENGTH@ 84
---------UPD Assignment@@result=(String)source.getActionExpression().invoke(context.getELContext(),null) @TO@ result=(String)source.getAction().invoke(context,null) @AT@ 1926 @LENGTH@ 83
------------UPD CastExpression@@(String)source.getActionExpression().invoke(context.getELContext(),null) @TO@ (String)source.getAction().invoke(context,null) @AT@ 1935 @LENGTH@ 74
---------------UPD MethodInvocation@@source.getActionExpression().invoke(context.getELContext(),null) @TO@ source.getAction().invoke(context,null) @AT@ 1944 @LENGTH@ 65
------------------UPD MethodInvocation@@MethodName:getActionExpression:[] @TO@ MethodName:getAction:[] @AT@ 1944 @LENGTH@ 28
------------------UPD SimpleName@@MethodName:invoke:[context.getELContext(), null] @TO@ MethodName:invoke:[context, null] @AT@ 1973 @LENGTH@ 36
---------------------INS SimpleName@@context @TO@ SimpleName@@MethodName:invoke:[context.getELContext(), null] @AT@ 1936 @LENGTH@ 7
---------------------DEL MethodInvocation@@context.getELContext() @AT@ 1980 @LENGTH@ 22
------------------------DEL SimpleName@@Name:context @AT@ 1980 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:getELContext:[] @AT@ 1988 @LENGTH@ 14


UPD TryStatement@@try {  List result=null;  String value=defaultStrategies.getProperty(key);  if (value != null) {    String[] classNames=StringUtils.commaDelimitedListToStringArray(value);    result=new ArrayList(classNames.length);    for (int i=0; i < classNames.length; i++) {      Class clazz=ClassUtils.forName(classNames[i]);      Object strategy=instantiateBean(clazz,applicationContext);      result.add(strategy);    }  } else {    result=Collections.EMPTY_LIST;  }  return result;} catch (ClassNotFoundException ex) {  throw new BeanInitializationException("Could not find default strategy class for interface [" + key + "]",ex);} @TO@ try {  List result=null;  String value=defaultStrategies.getProperty(key);  if (value != null) {    String[] classNames=StringUtils.commaDelimitedListToStringArray(value);    result=new ArrayList(classNames.length);    for (int i=0; i < classNames.length; i++) {      Class clazz=ClassUtils.forName(classNames[i]);      Object strategy=instantiateBean(clazz,applicationContext);      result.add(strategy);    }  } else {    result=Collections.EMPTY_LIST;  }  Collections.sort(result,new OrderComparator());  return result;} catch (ClassNotFoundException ex) {  throw new BeanInitializationException("Could not find default strategy class for interface [" + key + "]",ex);} @AT@ 4887 @LENGTH@ 886
---INS ExpressionStatement@@MethodInvocation:Collections.sort(result,new OrderComparator()) @TO@ TryStatement@@try {  List result=null;  String value=defaultStrategies.getProperty(key);  if (value != null) {    String[] classNames=StringUtils.commaDelimitedListToStringArray(value);    result=new ArrayList(classNames.length);    for (int i=0; i < classNames.length; i++) {      Class clazz=ClassUtils.forName(classNames[i]);      Object strategy=instantiateBean(clazz,applicationContext);      result.add(strategy);    }  } else {    result=Collections.EMPTY_LIST;  }  return result;} catch (ClassNotFoundException ex) {  throw new BeanInitializationException("Could not find default strategy class for interface [" + key + "]",ex);} @AT@ 5600 @LENGTH@ 48
------INS MethodInvocation@@Collections.sort(result,new OrderComparator()) @TO@ ExpressionStatement@@MethodInvocation:Collections.sort(result,new OrderComparator()) @AT@ 5600 @LENGTH@ 47
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.sort(result,new OrderComparator()) @AT@ 5600 @LENGTH@ 11
---------INS SimpleName@@MethodName:sort:[result, new OrderComparator()] @TO@ MethodInvocation@@Collections.sort(result,new OrderComparator()) @AT@ 5612 @LENGTH@ 35
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:sort:[result, new OrderComparator()] @AT@ 5617 @LENGTH@ 6
------------INS ClassInstanceCreation@@OrderComparator[] @TO@ SimpleName@@MethodName:sort:[result, new OrderComparator()] @AT@ 5625 @LENGTH@ 21
---------------INS New@@new @TO@ ClassInstanceCreation@@OrderComparator[] @AT@ 5625 @LENGTH@ 3
---------------INS SimpleType@@OrderComparator @TO@ ClassInstanceCreation@@OrderComparator[] @AT@ 5629 @LENGTH@ 15


INS MethodDeclaration@@public, voidMethodName:FileExchange, DefaultExchange parent, File file,  @TO@ TypeDeclaration@@[public]FileExchange, DefaultExchange @AT@ 1380 @LENGTH@ 111
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:FileExchange, DefaultExchange parent, File file,  @AT@ 1380 @LENGTH@ 6
---INS SimpleName@@MethodName:FileExchange @TO@ MethodDeclaration@@public, voidMethodName:FileExchange, DefaultExchange parent, File file,  @AT@ 1387 @LENGTH@ 12
---INS SingleVariableDeclaration@@DefaultExchange parent @TO@ MethodDeclaration@@public, voidMethodName:FileExchange, DefaultExchange parent, File file,  @AT@ 1400 @LENGTH@ 22
------INS SimpleType@@DefaultExchange @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 1400 @LENGTH@ 15
------INS SimpleName@@parent @TO@ SingleVariableDeclaration@@DefaultExchange parent @AT@ 1416 @LENGTH@ 6
---INS SingleVariableDeclaration@@File file @TO@ MethodDeclaration@@public, voidMethodName:FileExchange, DefaultExchange parent, File file,  @AT@ 1424 @LENGTH@ 9
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File file @AT@ 1424 @LENGTH@ 4
------INS SimpleName@@file @TO@ SingleVariableDeclaration@@File file @AT@ 1429 @LENGTH@ 4
---INS SuperConstructorInvocation@@super(parent);
 @TO@ MethodDeclaration@@public, voidMethodName:FileExchange, DefaultExchange parent, File file,  @AT@ 1445 @LENGTH@ 14
------INS SimpleName@@parent @TO@ SuperConstructorInvocation@@super(parent);
 @AT@ 1451 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:this.file=file @TO@ MethodDeclaration@@public, voidMethodName:FileExchange, DefaultExchange parent, File file,  @AT@ 1468 @LENGTH@ 17
------INS Assignment@@this.file=file @TO@ ExpressionStatement@@Assignment:this.file=file @AT@ 1468 @LENGTH@ 16
---------INS FieldAccess@@this.file @TO@ Assignment@@this.file=file @AT@ 1468 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.file @AT@ 1468 @LENGTH@ 4
------------INS SimpleName@@file @TO@ FieldAccess@@this.file @AT@ 1473 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@this.file=file @AT@ 1477 @LENGTH@ 1
---------INS SimpleName@@file @TO@ Assignment@@this.file=file @AT@ 1480 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:ldapOperations.modifyAttributes(ctx.getDn(),ctx.getModificationItems()) @TO@ MethodInvocation:ldapOperations.modifyAttributes(ctx) @AT@ 3958 @LENGTH@ 73
---UPD MethodInvocation@@ldapOperations.modifyAttributes(ctx.getDn(),ctx.getModificationItems()) @TO@ ldapOperations.modifyAttributes(ctx) @AT@ 3958 @LENGTH@ 72
------UPD SimpleName@@MethodName:modifyAttributes:[ctx.getDn(), ctx.getModificationItems()] @TO@ MethodName:modifyAttributes:[ctx] @AT@ 3973 @LENGTH@ 57
---------INS SimpleName@@ctx @TO@ SimpleName@@MethodName:modifyAttributes:[ctx.getDn(), ctx.getModificationItems()] @AT@ 3981 @LENGTH@ 3
---------DEL MethodInvocation@@ctx.getDn() @AT@ 3990 @LENGTH@ 11
------------DEL SimpleName@@Name:ctx @AT@ 3990 @LENGTH@ 3
------------DEL SimpleName@@MethodName:getDn:[] @AT@ 3994 @LENGTH@ 7
---------DEL MethodInvocation@@ctx.getModificationItems() @AT@ 4003 @LENGTH@ 26
------------DEL SimpleName@@Name:ctx @AT@ 4003 @LENGTH@ 3
------------DEL SimpleName@@MethodName:getModificationItems:[] @AT@ 4007 @LENGTH@ 22


INS MethodDeclaration@@CamelNamingStrategy, MethodName:getNamingStrategy,  @TO@ TypeDeclaration@@[public]InstrumentationAgent,  @AT@ 2281 @LENGTH@ 20
---INS SimpleType@@CamelNamingStrategy @TO@ MethodDeclaration@@CamelNamingStrategy, MethodName:getNamingStrategy,  @AT@ 2261 @LENGTH@ 19
---INS SimpleName@@MethodName:getNamingStrategy @TO@ MethodDeclaration@@CamelNamingStrategy, MethodName:getNamingStrategy,  @AT@ 2281 @LENGTH@ 17


DEL IfStatement@@if (injector == null) {  injector=new ReflectionInjector();} @AT@ 3865 @LENGTH@ 82
---DEL InfixExpression@@injector == null @AT@ 3869 @LENGTH@ 16
------DEL SimpleName@@injector @AT@ 3869 @LENGTH@ 8
------DEL Operator@@== @AT@ 3877 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 3881 @LENGTH@ 4
---DEL Block@@ThenBody:{  injector=new ReflectionInjector();} @AT@ 3887 @LENGTH@ 60
------DEL ExpressionStatement@@Assignment:injector=new ReflectionInjector() @AT@ 3901 @LENGTH@ 36
---------DEL Assignment@@injector=new ReflectionInjector() @AT@ 3901 @LENGTH@ 35
------------DEL SimpleName@@injector @AT@ 3901 @LENGTH@ 8
------------DEL Operator@@= @AT@ 3909 @LENGTH@ 1
------------DEL ClassInstanceCreation@@ReflectionInjector[] @AT@ 3912 @LENGTH@ 24
---------------DEL New@@new @AT@ 3912 @LENGTH@ 3
---------------DEL SimpleType@@ReflectionInjector @AT@ 3916 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:testRouteWithInterceptor, Exception,  @TO@ TypeDeclaration@@[public]SpringXmlRouteBuilderTest, RouteBuilderTest @AT@ 3938 @LENGTH@ 79
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRouteWithInterceptor, Exception,  @AT@ 3938 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRouteWithInterceptor, Exception,  @AT@ 3945 @LENGTH@ 4
---INS SimpleName@@MethodName:testRouteWithInterceptor @TO@ MethodDeclaration@@public, void, MethodName:testRouteWithInterceptor, Exception,  @AT@ 3950 @LENGTH@ 24
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRouteWithInterceptor, Exception,  @AT@ 3984 @LENGTH@ 9


UPD IfStatement@@if (getProtocol() != null && !isIgnoreUriScheme()) {  String scheme=uri.getScheme();  if (scheme != null) {    setProtocol(scheme);  }} @TO@ if (!isIgnoreUriScheme()) {  String scheme=uri.getScheme();  if (scheme != null) {    setProtocol(scheme);  }} @AT@ 2064 @LENGTH@ 192
---DEL InfixExpression@@getProtocol() != null && !isIgnoreUriScheme() @AT@ 2068 @LENGTH@ 45
------DEL InfixExpression@@getProtocol() != null @AT@ 2068 @LENGTH@ 21
---------DEL MethodInvocation@@MethodName:getProtocol:[] @AT@ 2068 @LENGTH@ 13
---------DEL Operator@@!= @AT@ 2081 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 2085 @LENGTH@ 4
------DEL Operator@@&& @AT@ 2089 @LENGTH@ 2
------DEL PrefixExpression@@!isIgnoreUriScheme() @AT@ 2093 @LENGTH@ 20
---INS PrefixExpression@@!isIgnoreUriScheme() @TO@ IfStatement@@if (getProtocol() != null && !isIgnoreUriScheme()) {  String scheme=uri.getScheme();  if (scheme != null) {    setProtocol(scheme);  }} @AT@ 2068 @LENGTH@ 20
------MOV Operator@@! @TO@ PrefixExpression@@!isIgnoreUriScheme() @AT@ 2093 @LENGTH@ 1
------MOV MethodInvocation@@MethodName:isIgnoreUriScheme:[] @TO@ PrefixExpression@@!isIgnoreUriScheme() @AT@ 2094 @LENGTH@ 19


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=2529197834044942724L] @TO@ TypeDeclaration@@[public]FlatFileParsingException, ParsingException @AT@ 1024 @LENGTH@ 66
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=2529197834044942724L] @AT@ 1024 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=2529197834044942724L] @AT@ 1032 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=2529197834044942724L] @AT@ 1039 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=2529197834044942724L] @AT@ 1045 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=2529197834044942724L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=2529197834044942724L] @AT@ 1050 @LENGTH@ 39
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=2529197834044942724L @AT@ 1050 @LENGTH@ 16
------INS NumberLiteral@@2529197834044942724L @TO@ VariableDeclarationFragment@@serialVersionUID=2529197834044942724L @AT@ 1069 @LENGTH@ 20


UPD ExpressionStatement@@Assignment:serviceClass=ServiceClass.valueOf(serviceClassString) @TO@ Assignment:serviceClass=ServiceClass.valueOf(serviceClassString.toUpperCase()) @AT@ 4472 @LENGTH@ 56
---UPD Assignment@@serviceClass=ServiceClass.valueOf(serviceClassString) @TO@ serviceClass=ServiceClass.valueOf(serviceClassString.toUpperCase()) @AT@ 4472 @LENGTH@ 55
------UPD MethodInvocation@@ServiceClass.valueOf(serviceClassString) @TO@ ServiceClass.valueOf(serviceClassString.toUpperCase()) @AT@ 4487 @LENGTH@ 40
---------UPD SimpleName@@MethodName:valueOf:[serviceClassString] @TO@ MethodName:valueOf:[serviceClassString.toUpperCase()] @AT@ 4500 @LENGTH@ 27
------------INS MethodInvocation@@serviceClassString.toUpperCase() @TO@ SimpleName@@MethodName:valueOf:[serviceClassString] @AT@ 4508 @LENGTH@ 32
---------------INS SimpleName@@Name:serviceClassString @TO@ MethodInvocation@@serviceClassString.toUpperCase() @AT@ 4508 @LENGTH@ 18
---------------INS SimpleName@@MethodName:toUpperCase:[] @TO@ MethodInvocation@@serviceClassString.toUpperCase() @AT@ 4527 @LENGTH@ 13
------------DEL SimpleName@@serviceClassString @AT@ 4508 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:assertEquals("!olleH",receivedExchange.getOut().getBody()) @TO@ MethodInvocation:assertEquals("!olleH",receivedExchange.getIn().getBody()) @AT@ 2446 @LENGTH@ 60
---UPD MethodInvocation@@assertEquals("!olleH",receivedExchange.getOut().getBody()) @TO@ assertEquals("!olleH",receivedExchange.getIn().getBody()) @AT@ 2446 @LENGTH@ 59
------UPD SimpleName@@MethodName:assertEquals:["!olleH", receivedExchange.getOut().getBody()] @TO@ MethodName:assertEquals:["!olleH", receivedExchange.getIn().getBody()] @AT@ 2446 @LENGTH@ 59
---------UPD MethodInvocation@@receivedExchange.getOut().getBody() @TO@ receivedExchange.getIn().getBody() @AT@ 2469 @LENGTH@ 35
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getIn:[] @AT@ 2469 @LENGTH@ 25


INS IfStatement@@if (FacesContext.getCurrentInstance() != null && FacesContext.getCurrentInstance() instanceof MockBaseFacesContext) {  return FacesContext.getCurrentInstance();} else {  ExternalContext ext=new MockExternalContext((ServletContext)context,(HttpServletRequest)request,(HttpServletResponse)response);  return new MockBaseFacesContext(ext,lifecycle);} @TO@ MethodDeclaration@@public, FacesContext, MethodName:getFacesContext, Object context, Object request, Object response, Lifecycle lifecycle, FacesException,  @AT@ 648 @LENGTH@ 378
---INS InfixExpression@@FacesContext.getCurrentInstance() != null && FacesContext.getCurrentInstance() instanceof MockBaseFacesContext @TO@ IfStatement@@if (FacesContext.getCurrentInstance() != null && FacesContext.getCurrentInstance() instanceof MockBaseFacesContext) {  return FacesContext.getCurrentInstance();} else {  ExternalContext ext=new MockExternalContext((ServletContext)context,(HttpServletRequest)request,(HttpServletResponse)response);  return new MockBaseFacesContext(ext,lifecycle);} @AT@ 652 @LENGTH@ 114
------INS InfixExpression@@FacesContext.getCurrentInstance() != null @TO@ InfixExpression@@FacesContext.getCurrentInstance() != null && FacesContext.getCurrentInstance() instanceof MockBaseFacesContext @AT@ 652 @LENGTH@ 41
---------INS MethodInvocation@@FacesContext.getCurrentInstance() @TO@ InfixExpression@@FacesContext.getCurrentInstance() != null @AT@ 652 @LENGTH@ 33
------------INS SimpleName@@Name:FacesContext @TO@ MethodInvocation@@FacesContext.getCurrentInstance() @AT@ 652 @LENGTH@ 12
------------INS SimpleName@@MethodName:getCurrentInstance:[] @TO@ MethodInvocation@@FacesContext.getCurrentInstance() @AT@ 665 @LENGTH@ 20
---------INS Operator@@!= @TO@ InfixExpression@@FacesContext.getCurrentInstance() != null @AT@ 685 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@FacesContext.getCurrentInstance() != null @AT@ 689 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@FacesContext.getCurrentInstance() != null && FacesContext.getCurrentInstance() instanceof MockBaseFacesContext @AT@ 693 @LENGTH@ 2
------INS InstanceofExpression@@FacesContext.getCurrentInstance() instanceof MockBaseFacesContext @TO@ InfixExpression@@FacesContext.getCurrentInstance() != null && FacesContext.getCurrentInstance() instanceof MockBaseFacesContext @AT@ 701 @LENGTH@ 65
---------INS MethodInvocation@@FacesContext.getCurrentInstance() @TO@ InstanceofExpression@@FacesContext.getCurrentInstance() instanceof MockBaseFacesContext @AT@ 701 @LENGTH@ 33
------------INS SimpleName@@Name:FacesContext @TO@ MethodInvocation@@FacesContext.getCurrentInstance() @AT@ 701 @LENGTH@ 12
------------INS SimpleName@@MethodName:getCurrentInstance:[] @TO@ MethodInvocation@@FacesContext.getCurrentInstance() @AT@ 714 @LENGTH@ 20
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@FacesContext.getCurrentInstance() instanceof MockBaseFacesContext @AT@ 735 @LENGTH@ 10
---------INS SimpleType@@MockBaseFacesContext @TO@ InstanceofExpression@@FacesContext.getCurrentInstance() instanceof MockBaseFacesContext @AT@ 746 @LENGTH@ 20
---INS Block@@ThenBody:{  return FacesContext.getCurrentInstance();} @TO@ IfStatement@@if (FacesContext.getCurrentInstance() != null && FacesContext.getCurrentInstance() instanceof MockBaseFacesContext) {  return FacesContext.getCurrentInstance();} else {  ExternalContext ext=new MockExternalContext((ServletContext)context,(HttpServletRequest)request,(HttpServletResponse)response);  return new MockBaseFacesContext(ext,lifecycle);} @AT@ 768 @LENGTH@ 50
------INS ReturnStatement@@MethodInvocation:FacesContext.getCurrentInstance() @TO@ Block@@ThenBody:{  return FacesContext.getCurrentInstance();} @AT@ 773 @LENGTH@ 41
---------INS MethodInvocation@@FacesContext.getCurrentInstance() @TO@ ReturnStatement@@MethodInvocation:FacesContext.getCurrentInstance() @AT@ 780 @LENGTH@ 33
------------INS SimpleName@@Name:FacesContext @TO@ MethodInvocation@@FacesContext.getCurrentInstance() @AT@ 780 @LENGTH@ 12
------------INS SimpleName@@MethodName:getCurrentInstance:[] @TO@ MethodInvocation@@FacesContext.getCurrentInstance() @AT@ 793 @LENGTH@ 20
---INS Block@@ElseBody:{  ExternalContext ext=new MockExternalContext((ServletContext)context,(HttpServletRequest)request,(HttpServletResponse)response);  return new MockBaseFacesContext(ext,lifecycle);} @TO@ IfStatement@@if (FacesContext.getCurrentInstance() != null && FacesContext.getCurrentInstance() instanceof MockBaseFacesContext) {  return FacesContext.getCurrentInstance();} else {  ExternalContext ext=new MockExternalContext((ServletContext)context,(HttpServletRequest)request,(HttpServletResponse)response);  return new MockBaseFacesContext(ext,lifecycle);} @AT@ 824 @LENGTH@ 202
------MOV VariableDeclarationStatement@@ExternalContext ext=new MockExternalContext((ServletContext)context,(HttpServletRequest)request,(HttpServletResponse)response); @TO@ Block@@ElseBody:{  ExternalContext ext=new MockExternalContext((ServletContext)context,(HttpServletRequest)request,(HttpServletResponse)response);  return new MockBaseFacesContext(ext,lifecycle);} @AT@ 648 @LENGTH@ 138
------MOV ReturnStatement@@ClassInstanceCreation:new MockBaseFacesContext(ext,lifecycle) @TO@ Block@@ElseBody:{  ExternalContext ext=new MockExternalContext((ServletContext)context,(HttpServletRequest)request,(HttpServletResponse)response);  return new MockBaseFacesContext(ext,lifecycle);} @AT@ 790 @LENGTH@ 48


INS MethodDeclaration@@public, void, MethodName:testPropertiesWithWhiteSpace, Exception,  @TO@ TypeDeclaration@@[public]FieldSetTests, TestCase @AT@ 9588 @LENGTH@ 202
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testPropertiesWithWhiteSpace, Exception,  @AT@ 9588 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testPropertiesWithWhiteSpace, Exception,  @AT@ 9595 @LENGTH@ 4
---INS SimpleName@@MethodName:testPropertiesWithWhiteSpace @TO@ MethodDeclaration@@public, void, MethodName:testPropertiesWithWhiteSpace, Exception,  @AT@ 9600 @LENGTH@ 28
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testPropertiesWithWhiteSpace, Exception,  @AT@ 9638 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals("bar",new FieldSet(new String[]{"foo","bar   "},new String[]{"Foo","Bar"}).getProperties().getProperty("Bar")) @TO@ MethodDeclaration@@public, void, MethodName:testPropertiesWithWhiteSpace, Exception,  @AT@ 9654 @LENGTH@ 133
------INS MethodInvocation@@assertEquals("bar",new FieldSet(new String[]{"foo","bar   "},new String[]{"Foo","Bar"}).getProperties().getProperty("Bar")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("bar",new FieldSet(new String[]{"foo","bar   "},new String[]{"Foo","Bar"}).getProperties().getProperty("Bar")) @AT@ 9654 @LENGTH@ 132
---------INS SimpleName@@MethodName:assertEquals:["bar", new FieldSet(new String[]{"foo","bar   "},new String[]{"Foo","Bar"}).getProperties().getProperty("Bar")] @TO@ MethodInvocation@@assertEquals("bar",new FieldSet(new String[]{"foo","bar   "},new String[]{"Foo","Bar"}).getProperties().getProperty("Bar")) @AT@ 9654 @LENGTH@ 132
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:assertEquals:["bar", new FieldSet(new String[]{"foo","bar   "},new String[]{"Foo","Bar"}).getProperties().getProperty("Bar")] @AT@ 9667 @LENGTH@ 5
------------INS MethodInvocation@@new FieldSet(new String[]{"foo","bar   "},new String[]{"Foo","Bar"}).getProperties().getProperty("Bar") @TO@ SimpleName@@MethodName:assertEquals:["bar", new FieldSet(new String[]{"foo","bar   "},new String[]{"Foo","Bar"}).getProperties().getProperty("Bar")] @AT@ 9674 @LENGTH@ 111
---------------INS MethodInvocation@@MethodName:getProperties:[] @TO@ MethodInvocation@@new FieldSet(new String[]{"foo","bar   "},new String[]{"Foo","Bar"}).getProperties().getProperty("Bar") @AT@ 9674 @LENGTH@ 92
---------------INS ClassInstanceCreation@@FieldSet[new String[]{"foo","bar   "}, new String[]{"Foo","Bar"}] @TO@ MethodInvocation@@new FieldSet(new String[]{"foo","bar   "},new String[]{"Foo","Bar"}).getProperties().getProperty("Bar") @AT@ 9674 @LENGTH@ 76
------------------INS New@@new @TO@ ClassInstanceCreation@@FieldSet[new String[]{"foo","bar   "}, new String[]{"Foo","Bar"}] @AT@ 9674 @LENGTH@ 3
------------------INS SimpleType@@FieldSet @TO@ ClassInstanceCreation@@FieldSet[new String[]{"foo","bar   "}, new String[]{"Foo","Bar"}] @AT@ 9678 @LENGTH@ 8
------------------INS ArrayCreation@@new String[]{"foo","bar   "} @TO@ ClassInstanceCreation@@FieldSet[new String[]{"foo","bar   "}, new String[]{"Foo","Bar"}] @AT@ 9687 @LENGTH@ 32
---------------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[]{"foo","bar   "} @AT@ 9691 @LENGTH@ 8
------------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 9691 @LENGTH@ 6
---------------------INS ArrayInitializer@@{"foo","bar   "} @TO@ ArrayCreation@@new String[]{"foo","bar   "} @AT@ 9700 @LENGTH@ 19
------------------------INS StringLiteral@@"foo" @TO@ ArrayInitializer@@{"foo","bar   "} @AT@ 9702 @LENGTH@ 5
------------------------INS StringLiteral@@"bar   " @TO@ ArrayInitializer@@{"foo","bar   "} @AT@ 9709 @LENGTH@ 8
------------------INS ArrayCreation@@new String[]{"Foo","Bar"} @TO@ ClassInstanceCreation@@FieldSet[new String[]{"foo","bar   "}, new String[]{"Foo","Bar"}] @AT@ 9721 @LENGTH@ 28
---------------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[]{"Foo","Bar"} @AT@ 9725 @LENGTH@ 8
------------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 9725 @LENGTH@ 6
---------------------INS ArrayInitializer@@{"Foo","Bar"} @TO@ ArrayCreation@@new String[]{"Foo","Bar"} @AT@ 9734 @LENGTH@ 15
------------------------INS StringLiteral@@"Foo" @TO@ ArrayInitializer@@{"Foo","Bar"} @AT@ 9736 @LENGTH@ 5
------------------------INS StringLiteral@@"Bar" @TO@ ArrayInitializer@@{"Foo","Bar"} @AT@ 9743 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getProperty:["Bar"] @TO@ MethodInvocation@@new FieldSet(new String[]{"foo","bar   "},new String[]{"Foo","Bar"}).getProperties().getProperty("Bar") @AT@ 9767 @LENGTH@ 18
------------------INS StringLiteral@@"Bar" @TO@ SimpleName@@MethodName:getProperty:["Bar"] @AT@ 9779 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:callback.done(true) @TO@ MethodInvocation:callback.done(false) @AT@ 5190 @LENGTH@ 20
---UPD MethodInvocation@@callback.done(true) @TO@ callback.done(false) @AT@ 5190 @LENGTH@ 19
------UPD SimpleName@@MethodName:done:[true] @TO@ MethodName:done:[false] @AT@ 5199 @LENGTH@ 10
---------UPD BooleanLiteral@@true @TO@ false @AT@ 5204 @LENGTH@ 4


UPD FieldDeclaration@@private, Cache, [cache] @TO@ private, Ehcache, [cache] @AT@ 1237 @LENGTH@ 20
---UPD SimpleType@@Cache @TO@ Ehcache @AT@ 1245 @LENGTH@ 5


UPD MethodDeclaration@@DirContextOperations, MethodName:lookup, String dn,  @TO@ DirContextOperations, MethodName:lookupContext, String dn,  @AT@ 3550 @LENGTH@ 18
---UPD SimpleName@@MethodName:lookup @TO@ MethodName:lookupContext @AT@ 3550 @LENGTH@ 6


MOV ExpressionStatement@@MethodInvocation:container.setSubscriptionDurable(subscriptionDurable) @TO@ MethodDeclaration@@protected, void, MethodName:configureMessageListenerContainer, AbstractMessageListenerContainer container,  @AT@ 7155 @LENGTH@ 54


UPD ThrowStatement@@ClassInstanceCreation:new NoSuchBatchDomainObjectException("Error obtaining" + "previous job run: " + jobConfiguration.toString()) @TO@ ClassInstanceCreation:new BatchRestartException("Error restarting job, more than one JobInstance found for: " + jobConfiguration.toString()) @AT@ 4423 @LENGTH@ 120
---UPD ClassInstanceCreation@@NoSuchBatchDomainObjectException["Error obtaining" + "previous job run: " + jobConfiguration.toString()] @TO@ BatchRestartException["Error restarting job, more than one JobInstance found for: " + jobConfiguration.toString()] @AT@ 4429 @LENGTH@ 113
------UPD SimpleType@@NoSuchBatchDomainObjectException @TO@ BatchRestartException @AT@ 4433 @LENGTH@ 32
------UPD InfixExpression@@"Error obtaining" + "previous job run: " + jobConfiguration.toString() @TO@ "Error restarting job, more than one JobInstance found for: " + jobConfiguration.toString() @AT@ 4466 @LENGTH@ 75
---------UPD StringLiteral@@"Error obtaining" @TO@ "Error restarting job, more than one JobInstance found for: " @AT@ 4466 @LENGTH@ 17
---------DEL StringLiteral@@"previous job run: " @AT@ 4486 @LENGTH@ 20
